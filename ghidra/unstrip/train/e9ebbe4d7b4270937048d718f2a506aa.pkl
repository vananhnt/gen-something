(dp0
S'init_fft'
p1
(S'\n__stdcall init_fft()\n'
p2
V\u000avoid init_fft(void)\u000a\u000a{\u000a  (*(code *)(&UNK_000382b0 + DAT_000382ac))();\u000a  return;\u000a}\u000a\u000a
p3
S'ldr r12,[0x382ac]\nadd pc,r12,pc\n'
p4
S'00 c0 9f e5\n0f f0 8c e0\n'
p5
S'.text:000382a4\n.text:000382a8\n'
p6
tp7
sS'id3tag_set_genre'
p8
(S'\n__stdcall id3tag_set_genre()\n'
p9
V\u000avoid id3tag_set_genre(void)\u000a\u000a{\u000a  (*(atoi + DAT_00037cdc))();\u000a  return;\u000a}\u000a\u000a
p10
S'ldr r12,[0x37cdc]\nadd pc,r12,pc\n'
p11
S'00 c0 9f e5\n0f f0 8c e0\n'
p12
S'.text:00037cd4\n.text:00037cd8\n'
p13
tp14
sS'lame_get_ATHonly'
p15
(S'\n__stdcall lame_get_ATHonly()\n'
p16
V\u000aundefined4 lame_get_ATHonly(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xd0);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p17
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002eb8c\nmov r0,#0xd0\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p18
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 59 fc\n01 b4\n02 bc\n00 20\n00 29\n01 d0\nd0 20\n20 58\nd0 bd\n'
p19
S'.text:0002eb72\n.text:0002eb74\n.text:0002eb76\n.text:0002eb78\n.text:0002eb7a\n.text:0002eb7e\n.text:0002eb80\n.text:0002eb82\n.text:0002eb84\n.text:0002eb86\n.text:0002eb88\n.text:0002eb8a\n.text:0002eb8c\n'
p20
tp21
sS'id3tag_space_v1'
p22
(S'\n__stdcall id3tag_space_v1()\n'
p23
V\u000avoid id3tag_space_v1(int iParm1)\u000a\u000a{\u000a  *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001ca14) =\u000a       *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001ca14) & 0xffffffe7 | 0x10;\u000a  return;\u000a}\u000a\u000a
p24
S'mov r1,#0x9\nlsl r1,r1,#0x5\nldr r0,[r0,r1]\nldr r1,[0x0001ca14]\nldr r2,[r0,r1]\nmov r3,#0x18\nmvn r3,r3\nand r3,r2\nmov r2,#0x10\norr r2,r3\nstr r2,[r0,r1]\nbx lr\n'
p25
S'09 21\n49 01\n40 58\n04 49\n42 58\n18 23\ndb 43\n13 40\n10 22\n1a 43\n42 50\n70 47\n'
p26
S'.text:0001c9fc\n.text:0001c9fe\n.text:0001ca00\n.text:0001ca02\n.text:0001ca04\n.text:0001ca06\n.text:0001ca08\n.text:0001ca0a\n.text:0001ca0c\n.text:0001ca0e\n.text:0001ca10\n.text:0001ca12\n'
p27
tp28
sS'psymodel_init'
p29
(S'\n__stdcall psymodel_init()\n'
p30
V\u000avoid psymodel_init(int iParm1)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __subsf3(0,*(undefined4 *)(*(int *)(iParm1 + 0x120) + 0x118));\u000a}\u000a\u000a
p31
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1fc\nsub sp,#0x188\nstr r0,[sp,#0x28]\nldr r1,[0x0002752c]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x380]\nmov r1,#0x9\nstr r1,[sp,#0x40]\nlsl r1,r1,#0x5\nldr r5,[r0,r1]\nmov r0,#0x23\nlsl r0,r0,#0x3\nldr r1,[r5,r0]\nmov r4,#0x0\npush { r4 }\npop { r0 }\nbl 0x00037b80\n'
p32
S'f0 b5\n03 af\nff b0\ne2 b0\n0a 90\ne7 49\n79 44\n09 68\n09 68\ne0 91\n09 21\n10 91\n49 01\n45 58\n23 20\nc0 00\n29 58\n00 24\n10 b4\n01 bc\n10 f0 e8 fc\n'
p33
S'.text:00027184\n.text:00027186\n.text:00027188\n.text:0002718a\n.text:0002718c\n.text:0002718e\n.text:00027190\n.text:00027192\n.text:00027194\n.text:00027196\n.text:00027198\n.text:0002719a\n.text:0002719c\n.text:0002719e\n.text:000271a0\n.text:000271a2\n.text:000271a4\n.text:000271a6\n.text:000271a8\n.text:000271aa\n.text:000271ac\n'
p34
tp35
sS'strncmp'
p36
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p37
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(free + DAT_00037c9c))();\u000a  return iVar1;\u000a}\u000a\u000a
p38
S'ldr r12,[0x37c9c]\nadd pc,r12,pc\n'
p39
S'00 c0 9f e5\n0f f0 8c e0\n'
p40
S'.text:00037c94\n.text:00037c98\n'
p41
tp42
sS'count_bit_null'
p43
(S'\n__stdcall count_bit_null()\n'
p44
V\u000aundefined4 count_bit_null(void)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p45
S'mov r0,#0x0\nbx lr\n'
p46
S'00 20\n70 47\n'
p47
S'.text:00030e68\n.text:00030e6a\n'
p48
tp49
sS'id3tag_set_comment_ucs2'
p50
(S'\n__stdcall id3tag_set_comment_ucs2()\n'
p51
V\u000avoid id3tag_set_comment_ucs2\u000a               (undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  id3v2_add_ucs2(uParm1,DAT_0001d5e8,uParm2,uParm3,uParm4);\u000a  return;\u000a}\u000a\u000a
p52
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x8\npush { r2 }\npop { r4 }\npush { r1 }\npop { r2 }\nmov r1,sp\nstr r3,[r1,#0x0]\nldr r1,[0x0001d5e8]\npush { r4 }\npop { r3 }\nbl 0x0001cf20\nadd sp,#0x8\npop { r4, r6, r7, pc }\n'
p53
S'd0 b5\n02 af\n82 b0\n04 b4\n10 bc\n02 b4\n04 bc\n69 46\n0b 60\n03 49\n10 b4\n08 bc\nff f7 9e fc\n02 b0\nd0 bd\n'
p54
S'.text:0001d5c8\n.text:0001d5ca\n.text:0001d5cc\n.text:0001d5ce\n.text:0001d5d0\n.text:0001d5d2\n.text:0001d5d4\n.text:0001d5d6\n.text:0001d5d8\n.text:0001d5da\n.text:0001d5dc\n.text:0001d5de\n.text:0001d5e0\n.text:0001d5e4\n.text:0001d5e6\n'
p55
tp56
sS'id3tag_set_title'
p57
(S'\n__stdcall id3tag_set_title()\n'
p58
V\u000avoid id3tag_set_title(int iParm1,char *pcParm2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  \u000a  if ((((iParm1 != 0) && (pcParm2 != (char *)0x0)) && (iVar2 = *(int *)(iParm1 + 0x120), iVar2 != 0)\u000a      ) && (*pcParm2 != 0)) {\u000a    local_strdup(iVar2 + DAT_0001d65c,pcParm2);\u000a    *(uint *)(iVar2 + DAT_0001d660) = *(uint *)(iVar2 + DAT_0001d660) | 1;\u000a    iVar2 = DAT_0001d660;\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    if (iVar3 != 0) {\u000a      uVar1 = *(undefined4 *)(iVar3 + DAT_0001d660);\u000a      id3v2_add_latin1(iParm1,DAT_0001d664,DAT_0001d668 + 0x1d648,0,pcParm2);\u000a      *(undefined4 *)(iVar3 + iVar2) = uVar1;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p59
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\ncmp r4,#0x0\nbeq 0x0001d656\nmov r0,#0x9\nlsl r0,r0,#0x5\nadd r1,r4,r0\ncmp r5,#0x0\nbeq 0x0001d656\nldr r6,[r4,r0]\ncmp r6,#0x0\nbeq 0x0001d656\nldrb r0,[r5,#0x0]\ncmp r0,#0x0\nbeq 0x0001d656\nldr r0,[0x0001d65c]\nadd r0,r6,r0\nstr r1,[sp,#0x8]\npush { r5 }\npop { r1 }\nbl 0x0001d66c\nldr r0,[0x0001d660]\nldr r1,[r6,r0]\nmov r2,#0x1\norr r2,r1\nstr r2,[r6,r0]\nldr r0,[sp,#0x8]\nldr r6,[r0,#0x0]\ncmp r6,#0x0\nbeq 0x0001d656\nldr r0,[0x0001d660]\nstr r0,[sp,#0x4]\nldr r1,[r6,r0]\nstr r1,[sp,#0x8]\nmov r0,sp\nstr r5,[r0,#0x0]\nldr r1,[0x0001d664]\nldr r2,[0x0001d668]\nadd r2,pc\nmov r3,#0x0\npush { r4 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x4]\nstr r0,[r6,r1]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p60
S'f0 b5\n03 af\n83 b0\n02 b4\n20 bc\n01 b4\n10 bc\n00 2c\n2b d0\n09 20\n40 01\n21 18\n00 2d\n26 d0\n26 58\n00 2e\n23 d0\n28 78\n00 28\n20 d0\n11 48\n30 18\n02 91\n20 b4\n02 bc\n00 f0 25 f8\n0f 48\n31 58\n01 22\n0a 43\n32 50\n02 98\n06 68\n00 2e\n10 d0\n0a 48\n01 90\n31 58\n02 91\n68 46\n05 60\n08 49\n09 4a\n7a 44\n00 23\n10 b4\n01 bc\nff f7 b0 fe\n02 98\n01 99\n70 50\n03 b0\nf0 bd\n'
p61
S'.text:0001d5ec\n.text:0001d5ee\n.text:0001d5f0\n.text:0001d5f2\n.text:0001d5f4\n.text:0001d5f6\n.text:0001d5f8\n.text:0001d5fa\n.text:0001d5fc\n.text:0001d5fe\n.text:0001d600\n.text:0001d602\n.text:0001d604\n.text:0001d606\n.text:0001d608\n.text:0001d60a\n.text:0001d60c\n.text:0001d60e\n.text:0001d610\n.text:0001d612\n.text:0001d614\n.text:0001d616\n.text:0001d618\n.text:0001d61a\n.text:0001d61c\n.text:0001d61e\n.text:0001d622\n.text:0001d624\n.text:0001d626\n.text:0001d628\n.text:0001d62a\n.text:0001d62c\n.text:0001d62e\n.text:0001d630\n.text:0001d632\n.text:0001d634\n.text:0001d636\n.text:0001d638\n.text:0001d63a\n.text:0001d63c\n.text:0001d63e\n.text:0001d640\n.text:0001d642\n.text:0001d644\n.text:0001d646\n.text:0001d648\n.text:0001d64a\n.text:0001d64c\n.text:0001d650\n.text:0001d652\n.text:0001d654\n.text:0001d656\n.text:0001d658\n'
p62
tp63
sS'outer_loop'
p64
(S'\n__stdcall outer_loop(lame_internal_flags * gfc, gr_info * cod_info, FLOAT * l3_xmin, FLOAT * xrpow, int ch, int targ_bits)\n'
p65
V\u000aint outer_loop(lame_internal_flags *gfc,gr_info *cod_info,FLOAT *l3_xmin,FLOAT *xrpow,int ch,\u000a              int targ_bits)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int *piVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  undefined4 uVar7;\u000a  int iVar8;\u000a  int unaff_r4;\u000a  int *piVar9;\u000a  int iVar10;\u000a  int *piVar11;\u000a  int iVar12;\u000a  int *in_stack_00000018;\u000a  undefined4 in_stack_0000001c;\u000a  undefined4 in_stack_00000020;\u000a  int *in_stack_00000024;\u000a  undefined4 *in_stack_00000028;\u000a  int in_stack_00000034;\u000a  undefined4 *puStack00000038;\u000a  int iStack0000003c;\u000a  int iStack00000040;\u000a  int iStack00000044;\u000a  int iStack00000048;\u000a  FLOAT *pFStack0000004c;\u000a  FLOAT *in_stack_00000050;\u000a  int *in_stack_00000058;\u000a  int in_stack_00000064;\u000a  int iStack0000007c;\u000a  undefined4 uStack00000080;\u000a  int iStack00000084;\u000a  int in_stack_00000094;\u000a  FLOAT distort [39];\u000a  FLOAT save_xrpow [576];\u000a  \u000a  iStack00000048 = DAT_0001a94c;\u000a  iStack00000044 = DAT_0001a950;\u000a  iStack00000040 = DAT_0001a954;\u000a  iStack0000003c = DAT_0001a958;\u000a  puStack00000038 = in_stack_00000028;\u000a  iVar5 = DAT_0001a950;\u000a  pFStack0000004c = l3_xmin;\u000a  do {\u000a    if (0 < (int)gfc) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(*(undefined4 *)(&stack0x000000a0 + in_stack_00000064 * 4),&stack0x000000a0,iVar5\u000a                    ,xrpow);\u000a    }\u000a    iStack0000003c = iStack0000003c + 0x8000;\u000a    iStack00000040 = iStack00000040 + 0x2400;\u000a    xrpow = in_stack_00000050 + 0x2000;\u000a    puStack00000038 = puStack00000038 + 2;\u000a    iStack00000044 = iStack00000044 + 0x20;\u000a    iStack00000048 = iStack00000048 + 2;\u000a    pFStack0000004c = pFStack0000004c + 8;\u000a    iVar5 = in_stack_00000064 + 1;\u000a    in_stack_00000050 = xrpow;\u000a    in_stack_00000064 = iVar5;\u000a  } while (iVar5 < in_stack_00000094);\u000a  uStack00000080 = *(undefined4 *)((int)&ch + DAT_0001ae1c);\u000a  if ((*(int *)(unaff_r4 + 0x68) == 3) || (*(int *)(unaff_r4 + 0x68) == 0)) {\u000a    puVar1 = (undefined4 *)(unaff_r4 + DAT_0001addc);\u000a    iVar5 = 0x12;\u000a    do {\u000a      *puVar1 = puVar1[1];\u000a      iVar2 = DAT_0001ade0;\u000a      puVar1 = puVar1 + 1;\u000a      iVar5 = iVar5 + -1;\u000a    } while (iVar5 != 0);\u000a    if (0 < *(int *)(unaff_r4 + 0x4c)) {\u000a      iVar5 = 0;\u000a      do {\u000a        if (0 < *(int *)(unaff_r4 + 0x48)) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __addsf3(0,*in_stack_00000028);\u000a        }\u000a        in_stack_00000028 = in_stack_00000028 + 2;\u000a        iVar5 = iVar5 + 1;\u000a      } while (iVar5 < *(int *)(unaff_r4 + 0x4c));\u000a    }\u000a    *(undefined4 *)(unaff_r4 + DAT_0001ade0) = 0;\u000a                    /* WARNING: Subroutine does not return */\u000a    __addsf3(*(undefined4 *)(unaff_r4 + DAT_0001addc),*(undefined4 *)(unaff_r4 + iVar2));\u000a  }\u000a  iVar5 = unaff_r4;\u000a  (**(code **)(unaff_r4 + DAT_0001adec))\u000a            (unaff_r4,in_stack_00000028,&stack0x000000a0,in_stack_0000001c);\u000a  format_bitstream(unaff_r4);\u000a  iStack0000007c = copy_buffer(unaff_r4,in_stack_00000020,uStack00000080,1);\u000a  if (*(int *)(unaff_r4 + 0x9c) != 0) {\u000a    AddVbrFrame(unaff_r4);\u000a  }\u000a  iVar2 = iVar5;\u000a  if ((*in_stack_00000018 != 0) && (iVar2 = iVar5, *(int *)(unaff_r4 + DAT_0001add8) != 0)) {\u000a    if (0 < *(int *)(unaff_r4 + 0x48)) {\u000a      iVar5 = *(int *)(iVar5 + 0x4c);\u000a      puVar1 = (undefined4 *)(*(int *)(unaff_r4 + DAT_0001add8) + 0x18);\u000a      iVar2 = 0x110;\u000a      do {\u000a        uVar7 = puVar1[iVar5 * 0x480 + 1];\u000a        *puVar1 = puVar1[iVar5 * 0x480];\u000a        puVar1[1] = uVar7;\u000a        puVar1 = puVar1 + 2;\u000a        iVar2 = iVar2 + -1;\u000a      } while (iVar2 != 0);\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(**(undefined4 **)(&stack0x000000e8 + in_stack_00000034 * 4));\u000a    }\u000a    *(undefined4 *)(iVar5 + DAT_0001adf4) = 0x3f800000;\u000a    iVar2 = iVar5;\u000a    set_frame_pinfo(iVar5,in_stack_0000001c);\u000a    unaff_r4 = iVar5;\u000a  }\u000a  *(int *)(unaff_r4 + DAT_0001adf8) = *(int *)(unaff_r4 + DAT_0001adf8) + 1;\u000a  iVar5 = DAT_0001adfc;\u000a  iVar6 = unaff_r4 + *(int *)(unaff_r4 + DAT_0001adfc) * 0x14;\u000a  *(int *)(iVar6 + DAT_0001ae00) = *(int *)(iVar6 + DAT_0001ae00) + 1;\u000a  *(int *)(unaff_r4 + DAT_0001ae04) = *(int *)(unaff_r4 + DAT_0001ae04) + 1;\u000a  piVar9 = (int *)(unaff_r4 + iVar5);\u000a  if (*(int *)(unaff_r4 + 0x48) == 2) {\u000a    iVar5 = unaff_r4 + DAT_0001ae08;\u000a    iVar6 = iVar5 + *piVar9 * 0x14;\u000a    *(int *)(iVar6 + *in_stack_00000058 * 4) = *(int *)(iVar6 + *in_stack_00000058 * 4) + 1;\u000a    iVar5 = iVar5 + *in_stack_00000058 * 4;\u000a    *(int *)(iVar5 + 300) = *(int *)(iVar5 + 300) + 1;\u000a  }\u000a  iStack00000084 = *(int *)(unaff_r4 + 0x4c);\u000a  if (0 < iStack00000084) {\u000a    piVar4 = (int *)(unaff_r4 + DAT_0001adcc);\u000a    piVar3 = (int *)(unaff_r4 + DAT_0001ae0c);\u000a    iVar6 = *(int *)(unaff_r4 + 0x48);\u000a    iVar5 = 0;\u000a    uStack00000080 = 0;\u000a    do {\u000a      iVar12 = 0;\u000a      piVar11 = piVar4;\u000a      if (0 < iVar6) {\u000a        do {\u000a          iVar8 = unaff_r4 + DAT_0001ae10;\u000a          iVar10 = iVar8 + *piVar9 * 0x18;\u000a          iVar6 = 4;\u000a          if (piVar11[1] == 0) {\u000a            iVar6 = *piVar11;\u000a          }\u000a          iVar6 = iVar6 * 4;\u000a          *(int *)(iVar10 + iVar6) = *(int *)(iVar10 + iVar6) + 1;\u000a          iVar10 = iVar8 + *piVar9 * 0x18;\u000a          *(int *)(iVar10 + 0x14) = *(int *)(iVar10 + 0x14) + 1;\u000a          *(int *)(iVar8 + iVar6 + 0x168) = *(int *)(iVar8 + iVar6 + 0x168) + 1;\u000a          *piVar3 = *piVar3 + 1;\u000a          piVar11 = (int *)((int)piVar11 + DAT_0001add0);\u000a          iVar12 = iVar12 + 1;\u000a          iVar6 = *(int *)(iVar2 + 0x48);\u000a          unaff_r4 = iVar2;\u000a        } while (iVar12 < iVar6);\u000a        iStack00000084 = *(int *)(iVar2 + 0x4c);\u000a        unaff_r4 = iVar2;\u000a      }\u000a      piVar4 = (int *)((int)piVar4 + DAT_0001add4);\u000a      iVar5 = iVar5 + 1;\u000a    } while (iVar5 < iStack00000084);\u000a  }\u000a  if (**(int **)(DAT_0001ae14 + 0x1adb4) != *in_stack_00000024) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return iStack0000007c;\u000a}\u000a\u000a
p66
S'str r2,[sp,#0x4c]\nldr r2,[0x0001a94c]\nstr r2,[sp,#0x48]\nldr r2,[0x0001a950]\nstr r2,[sp,#0x44]\nldr r1,[0x0001a954]\nstr r1,[sp,#0x40]\nldr r1,[0x0001a958]\nstr r1,[sp,#0x3c]\nldr r1,[sp,#0x28]\nstr r1,[sp,#0x38]\nb 0x0001a95c\ncmp r0,#0x1\nbge 0x0001a962\nb 0x0001aa90\nldr r0,[sp,#0x64]\nlsl r0,r0,#0x2\nadd r1,sp,#0xa0\nldr r0,[r1,r0]\nbl 0x00037ac0\nldr r2,[0x0001add4]\nadd r5,r5,r2\nadd r6,r6,r2\nmov r2,#0x1\nlsl r2,r2,#0xf\nldr r1,[sp,#0x3c]\nadd r1,r1,r2\nstr r1,[sp,#0x3c]\nmov r3,#0x9\nlsl r3,r3,#0xa\nldr r1,[sp,#0x40]\nadd r1,r1,r3\nstr r1,[sp,#0x40]\nldr r3,[sp,#0x50]\nadd r3,r3,r2\nstr r3,[sp,#0x50]\nldr r1,[sp,#0x38]\nadd r1,#0x8\nstr r1,[sp,#0x38]\nldr r2,[sp,#0x44]\nadd r2,#0x20\nstr r2,[sp,#0x44]\nldr r2,[sp,#0x48]\nadd r2,#0x2\nstr r2,[sp,#0x48]\nldr r2,[sp,#0x4c]\nadd r2,#0x20\nstr r2,[sp,#0x4c]\nldr r2,[sp,#0x64]\nadd r2,#0x1\nstr r2,[sp,#0x64]\nldr r1,[sp,#0x94]\ncmp r2,r1\nbge 0x0001aad6\nb 0x0001a95c\n'
p67
S'13 92\n08 4a\n12 92\n08 4a\n11 92\n08 49\n10 91\n08 49\n0f 91\n0a 99\n0e 91\n0d e0\n01 28\n00 da\n96 e0\n19 98\n80 00\n28 a9\n08 58\n1d f0 a9 f8\nd0 4a\nad 18\nb6 18\n01 22\nd2 03\n0f 99\n89 18\n0f 91\n09 23\n9b 02\n10 99\nc9 18\n10 91\n14 9b\n9b 18\n14 93\n0e 99\n08 31\n0e 91\n11 9a\n20 32\n11 92\n12 9a\n02 32\n12 92\n13 9a\n20 32\n13 92\n19 9a\n01 32\n19 92\n25 99\n8a 42\n00 da\n42 e7\n'
p68
S'.text:0001a928\n.text:0001a92a\n.text:0001a92c\n.text:0001a92e\n.text:0001a930\n.text:0001a932\n.text:0001a934\n.text:0001a936\n.text:0001a938\n.text:0001a93a\n.text:0001a93c\n.text:0001a93e\n.text:0001a95c\n.text:0001a95e\n.text:0001a960\n.text:0001a962\n.text:0001a964\n.text:0001a966\n.text:0001a968\n.text:0001a96a\n.text:0001aa90\n.text:0001aa92\n.text:0001aa94\n.text:0001aa96\n.text:0001aa98\n.text:0001aa9a\n.text:0001aa9c\n.text:0001aa9e\n.text:0001aaa0\n.text:0001aaa2\n.text:0001aaa4\n.text:0001aaa6\n.text:0001aaa8\n.text:0001aaaa\n.text:0001aaac\n.text:0001aaae\n.text:0001aab0\n.text:0001aab2\n.text:0001aab4\n.text:0001aab6\n.text:0001aab8\n.text:0001aaba\n.text:0001aabc\n.text:0001aabe\n.text:0001aac0\n.text:0001aac2\n.text:0001aac4\n.text:0001aac6\n.text:0001aac8\n.text:0001aaca\n.text:0001aacc\n.text:0001aace\n.text:0001aad0\n.text:0001aad2\n.text:0001aad4\n'
p69
tp70
sS'lame_print_internals'
p71
(S'\n__stdcall lame_print_internals()\n'
p72
V\u000avoid lame_print_internals(int iParm1)\u000a\u000a{\u000a  lame_msgf(*(undefined4 *)(iParm1 + 0x120),DAT_00020930 + 0x207ee);\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(*(undefined4 *)(iParm1 + 0x14));\u000a}\u000a\u000a
p73
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x3c\npush { r0 }\npop { r5 }\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r4,[r5,r0]\nldr r1,[0x00020930]\nadd r1,pc\npush { r4 }\npop { r0 }\nbl 0x00037e70\nldr r0,[r5,#0x14]\nbl 0x00037ac0\n'
p74
S'f0 b5\n03 af\n8f b0\n01 b4\n20 bc\n09 20\n40 01\n2c 58\n51 49\n79 44\n10 b4\n01 bc\n17 f0 3e fb\n68 69\n17 f0 63 f9\n'
p75
S'.text:000207d8\n.text:000207da\n.text:000207dc\n.text:000207de\n.text:000207e0\n.text:000207e2\n.text:000207e4\n.text:000207e6\n.text:000207e8\n.text:000207ea\n.text:000207ec\n.text:000207ee\n.text:000207f0\n.text:000207f4\n.text:000207f6\n'
p76
tp77
sS'id3tag_set_albumart'
p78
(S'\n__stdcall id3tag_set_albumart()\n'
p79
V\u000aundefined4 id3tag_set_albumart(int iParm1,char *pcParm2,uint uParm3)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 *puVar2;\u000a  int iVar3;\u000a  \u000a  if (2 < uParm3) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    if ((*pcParm2 == -1) && (pcParm2[1] == -0x28)) {\u000aLAB_0001cace:\u000a      puVar2 = (undefined4 *)(iVar3 + DAT_0001cb50);\u000a      if (*(void **)(iVar3 + DAT_0001cb50) != (void *)0x0) {\u000a        free(*(void **)(iVar3 + DAT_0001cb50));\u000a        *puVar2 = 0;\u000a        *(undefined4 *)(iVar3 + DAT_0001cb54) = 0;\u000a        *(undefined4 *)(iVar3 + DAT_0001cb58) = 0;\u000a      }\u000a                    /* WARNING: Subroutine does not return */\u000a      calloc(uParm3,1);\u000a    }\u000a    if (4 < uParm3) {\u000a      if (*pcParm2 == -0x77) {\u000a        iVar1 = strncmp(pcParm2 + 1,(char *)(DAT_0001cb48 + 0x1caa8),3);\u000a        if (iVar1 == 0) goto LAB_0001cace;\u000a      }\u000a      iVar1 = strncmp(pcParm2,(char *)(DAT_0001cb4c + 0x1cabe),4);\u000a      if (iVar1 == 0) goto LAB_0001cace;\u000a    }\u000a  }\u000a  return 0xffffffff;\u000a}\u000a\u000a
p80
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\npush { r2 }\npop { r4 }\npush { r1 }\npop { r5 }\nmov r1,#0x9\nlsl r1,r1,#0x5\nadd r3,r0,r1\nmov r2,#0x0\nmvn r6,r2\ncmp r4,#0x3\nbcc 0x0001cb3e\nstr r3,[sp,#0x8]\nstr r2,[sp,#0xc]\nldr r2,[r0,r1]\nldrb r0,[r5,#0x0]\ncmp r0,#0xff\nbne 0x0001ca98\nldrb r1,[r5,#0x1]\nmov r3,#0x1\ncmp r1,#0xd8\nbeq 0x0001cace\ncmp r4,#0x5\nbcc 0x0001cb3e\ncmp r0,#0x89\nbne 0x0001cab6\nadd r0,r5,#0x1\nldr r1,[0x0001cb48]\nadd r1,pc\nstr r2,[sp,#0x10]\nmov r2,#0x3\nbl 0x00037c90\nldr r2,[sp,#0x10]\nmov r3,#0x2\ncmp r0,#0x0\nbeq 0x0001cace\nstr r2,[sp,#0x10]\nldr r1,[0x0001cb4c]\nadd r1,pc\nmov r2,#0x4\npush { r5 }\npop { r0 }\nbl 0x00037c90\nldr r2,[sp,#0x10]\nmov r3,#0x3\ncmp r0,#0x0\nbne 0x0001cb3e\nstr r3,[sp,#0x0]\nldr r1,[0x0001cb50]\nldr r0,[r2,r1]\nadd r1,r2,r1\nstr r1,[sp,#0x4]\ncmp r0,#0x0\npush { r2 }\npop { r6 }\nbeq 0x0001caf2\nbl 0x00037ca0\nmov r0,#0x0\nldr r1,[sp,#0x4]\nstr r0,[r1,#0x0]\nldr r1,[0x0001cb54]\nstr r0,[r6,r1]\nldr r1,[0x0001cb58]\nstr r0,[r6,r1]\nstr r6,[sp,#0x10]\nmov r6,#0x1\npush { r4 }\npop { r0 }\npush { r6 }\npop { r1 }\nbl 0x00037cb0\npush { r6 }\npop { r0 }\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p81
S'f0 b5\n03 af\n85 b0\n04 b4\n10 bc\n02 b4\n20 bc\n09 21\n49 01\n43 18\n00 22\nd6 43\n03 2c\n5c d3\n02 93\n03 92\n42 58\n28 78\nff 28\n03 d1\n69 78\n01 23\nd8 29\n1a d0\n05 2c\n50 d3\n89 28\n0a d1\n68 1c\n29 49\n79 44\n04 92\n03 22\n1b f0 f1 f8\n04 9a\n02 23\n00 28\n0b d0\n04 92\n24 49\n79 44\n04 22\n20 b4\n01 bc\n1b f0 e5 f8\n04 9a\n03 23\n00 28\n37 d1\n00 93\n1f 49\n50 58\n51 18\n01 91\n00 28\n04 b4\n40 bc\n08 d0\n1b f0 de f8\n00 20\n01 99\n08 60\n1a 49\n70 50\n1a 49\n70 50\n04 96\n01 26\n10 b4\n01 bc\n40 b4\n02 bc\n1b f0 d7 f8\n40 b4\n01 bc\n05 b0\nf0 bd\n'
p82
S'.text:0001ca68\n.text:0001ca6a\n.text:0001ca6c\n.text:0001ca6e\n.text:0001ca70\n.text:0001ca72\n.text:0001ca74\n.text:0001ca76\n.text:0001ca78\n.text:0001ca7a\n.text:0001ca7c\n.text:0001ca7e\n.text:0001ca80\n.text:0001ca82\n.text:0001ca84\n.text:0001ca86\n.text:0001ca88\n.text:0001ca8a\n.text:0001ca8c\n.text:0001ca8e\n.text:0001ca90\n.text:0001ca92\n.text:0001ca94\n.text:0001ca96\n.text:0001ca98\n.text:0001ca9a\n.text:0001ca9c\n.text:0001ca9e\n.text:0001caa0\n.text:0001caa2\n.text:0001caa4\n.text:0001caa6\n.text:0001caa8\n.text:0001caaa\n.text:0001caae\n.text:0001cab0\n.text:0001cab2\n.text:0001cab4\n.text:0001cab6\n.text:0001cab8\n.text:0001caba\n.text:0001cabc\n.text:0001cabe\n.text:0001cac0\n.text:0001cac2\n.text:0001cac6\n.text:0001cac8\n.text:0001caca\n.text:0001cacc\n.text:0001cace\n.text:0001cad0\n.text:0001cad2\n.text:0001cad4\n.text:0001cad6\n.text:0001cad8\n.text:0001cada\n.text:0001cadc\n.text:0001cade\n.text:0001cae0\n.text:0001cae4\n.text:0001cae6\n.text:0001cae8\n.text:0001caea\n.text:0001caec\n.text:0001caee\n.text:0001caf0\n.text:0001caf2\n.text:0001caf4\n.text:0001caf6\n.text:0001caf8\n.text:0001cafa\n.text:0001cafc\n.text:0001cafe\n.text:0001cb3e\n.text:0001cb40\n.text:0001cb42\n.text:0001cb44\n'
p83
tp84
sS'_Unwind_Resume'
p85
(S'\n__stdcall _Unwind_Resume()\n'
p86
V\u000avoid _Unwind_Resume(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  undefined4 uStack56;\u000a  undefined4 uStack52;\u000a  undefined4 uStack4;\u000a  \u000a  uStack4 = 0x373c8;\u000a  uStack68 = 0;\u000a  uStack64 = uParm1;\u000a  uStack60 = uParm2;\u000a  uStack56 = uParm3;\u000a  uStack52 = uParm4;\u000a  __gnu_Unwind_Resume(uParm1,&uStack68,uParm3,0,uParm3);\u000a  return;\u000a}\u000a\u000a
p87
S'stmdb sp!,{ sp lr pc}\nstmdb sp!,{ r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 }\nmov r3,#0x0\nstmdb sp!,{ r2 r3 }\nadd r1,sp,#0x4\nbl 0x00016c9c\nldr lr,[sp,#0x40]\nadd sp,sp,#0x48\nbx lr\n'
p88
S'00 e0 2d e9\nff 1f 2d e9\n00 30 a0 e3\n0c 00 2d e9\n04 10 8d e2\n30 7e ff eb\n40 e0 9d e5\n48 d0 8d e2\n1e ff 2f e1\n'
p89
S'.text:000373c0\n.text:000373c4\n.text:000373c8\n.text:000373cc\n.text:000373d0\n.text:000373d4\n.text:000373d8\n.text:000373dc\n.text:000373e0\n'
p90
tp91
sS'lame_get_bitrate'
p92
(S'\n__stdcall lame_get_bitrate()\n'
p93
V\u000aundefined4 lame_get_bitrate(uint uParm1,uint uParm2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  \u000a  uVar1 = 0xffffffff;\u000a  if ((uParm1 < 3) && (uParm2 < 0x10)) {\u000a    uVar1 = *(undefined4 *)(*(int *)(DAT_0002f5dc + 0x2f5d4) + uParm1 * 0x40 + uParm2 * 4);\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p94
S'push { r0 }\npop { r2 }\nmov r0,#0x0\nmvn r0,r0\ncmp r2,#0x2\nbhi 0x0002f5da\ncmp r1,#0xf\nbhi 0x0002f5da\nlsl r0,r2,#0x6\nldr r2,[0x0002f5dc]\nadd r2,pc\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nlsl r1,r1,#0x2\nldr r0,[r0,r1]\nbx lr\n'
p95
S'01 b4\n04 bc\n00 20\nc0 43\n02 2a\n08 d8\n0f 29\n06 d8\n90 01\n03 4a\n7a 44\n12 68\n10 18\n89 00\n40 58\n70 47\n'
p96
S'.text:0002f5bc\n.text:0002f5be\n.text:0002f5c0\n.text:0002f5c2\n.text:0002f5c4\n.text:0002f5c6\n.text:0002f5c8\n.text:0002f5ca\n.text:0002f5cc\n.text:0002f5ce\n.text:0002f5d0\n.text:0002f5d2\n.text:0002f5d4\n.text:0002f5d6\n.text:0002f5d8\n.text:0002f5da\n'
p97
tp98
sS'FUN_0002612a'
p99
(S'\n__stdcall FUN_0002612a(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6, undefined4 param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23, undefined4 param_24, undefined4 param_25, undefined4 param_26, undefined4 param_27, undefined4 param_28, undefined4 param_29, undefined4 param_30, undefined4 param_31, undefined4 param_32, undefined4 param_33, undefined4 param_34, undefined4 param_35, undefined4 param_36, undefined4 param_37, undefined4 param_38, undefined4 param_39, undefined4 param_40, undefined4 param_41, undefined4 param_42)\n'
p100
V\u000aundefined4 FUN_0002612a(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  uint uVar4;\u000a  undefined4 *puVar5;\u000a  undefined4 *puVar6;\u000a  int iVar7;\u000a  undefined4 *puVar8;\u000a  undefined4 *puVar9;\u000a  int *piVar10;\u000a  int *piVar11;\u000a  int unaff_r4;\u000a  uint uVar12;\u000a  int iVar13;\u000a  undefined4 uVar14;\u000a  int unaff_r5;\u000a  int iVar15;\u000a  int param_5;\u000a  undefined4 param_6;\u000a  undefined4 param_7;\u000a  int *param_8;\u000a  int param_9;\u000a  int param_10;\u000a  undefined4 param_11;\u000a  int *param_12;\u000a  undefined4 *param_13;\u000a  undefined4 *param_14;\u000a  int param_15;\u000a  int param_16;\u000a  undefined4 *param_17;\u000a  undefined4 *param_18;\u000a  int in_stack_00000038;\u000a  int in_stack_0000003c;\u000a  int param_19;\u000a  int *in_stack_00000044;\u000a  int in_stack_00000048;\u000a  int *param_20;\u000a  int in_stack_00000050;\u000a  int in_stack_00000054;\u000a  int param_21;\u000a  int in_stack_0000005c;\u000a  undefined4 *in_stack_00000060;\u000a  undefined4 *in_stack_00000064;\u000a  undefined4 param_22;\u000a  int param_23;\u000a  int in_stack_00000080;\u000a  int param_26;\u000a  int *param_27;\u000a  int param_28;\u000a  undefined4 *param_29;\u000a  undefined4 *param_30;\u000a  uint param_31;\u000a  int param_32;\u000a  uint param_33;\u000a  undefined4 param_34;\u000a  int in_stack_000000b4;\u000a  int param_35;\u000a  undefined4 *in_stack_000000c0;\u000a  int param_36;\u000a  int in_stack_000000dc;\u000a  undefined4 in_stack_000000e0;\u000a  undefined4 *in_stack_000000e4;\u000a  uint param_37;\u000a  undefined *in_stack_000000ec;\u000a  undefined *in_stack_000000f0;\u000a  int in_stack_000000f4;\u000a  undefined4 in_stack_000000f8;\u000a  undefined4 *in_stack_000000fc;\u000a  int in_stack_00000100;\u000a  int in_stack_00000104;\u000a  uint in_stack_00000108;\u000a  int in_stack_0000010c;\u000a  undefined4 *param_38;\u000a  undefined4 *param_39;\u000a  undefined4 *param_40;\u000a  undefined *in_stack_0000011c;\u000a  undefined4 param_41;\u000a  undefined4 *param_42;\u000a  \u000a  iVar2 = param_21;\u000a  if (0 < (int)param_33) {\u000a    param_23 = (int)&stack0x00000000 + param_28 * 0x204 + DAT_0002621c;\u000a    param_35 = param_16;\u000a    uVar12 = 0;\u000a    uVar1 = 0;\u000a    puVar5 = param_18;\u000a    puVar8 = param_17;\u000a    do {\u000a      param_29 = puVar8;\u000a      param_30 = puVar5;\u000a      param_31 = uVar1;\u000a      uVar4 = uVar12;\u000a      param_34 = 1;\u000a      iVar7 = (param_31 & 1) * 0xc00;\u000a      param_40 = (undefined4 *)(unaff_r4 + iVar7);\u000a      iVar15 = param_26 + iVar7;\u000a      if ((param_32 != 0) || (*(int *)(&stack0x0000012c + (uVar4 & 1) * 4) == 0)) {\u000a        param_38 = (undefined4 *)((uVar4 & 1) * 0xc00);\u000a        param_37 = uVar4;\u000a        param_39 = (undefined4 *)iVar15;\u000a        if ((param_28 == 0) && (param_37 = uVar4, param_39 = (undefined4 *)iVar15, (int)uVar4 < 2))\u000a        {\u000a          param_37 = uVar4;\u000a          param_39 = (undefined4 *)iVar15;\u000a          fft_short(param_36,(int)&stack0x00000000 + (int)param_38 + DAT_0002655c,uVar4,param_22);\u000a        }\u000a        if (uVar4 != 2) {\u000a          uVar14 = *(undefined4 *)\u000a                    ((int)&stack0x00000000 + param_28 * 0x400 + (int)param_38 + DAT_0002655c);\u000a                    /* WARNING: Subroutine does not return */\u000a          __mulsf3(uVar14,uVar14);\u000a        }\u000a        param_42 = (undefined4 *)*param_40;\u000a        param_41 = *(undefined4 *)(unaff_r5 + iVar7);\u000a                    /* WARNING: Subroutine does not return */\u000a        __addsf3();\u000a      }\u000a      if ((param_28 == 0) &&\u000a         (iVar7 = *(int *)(*param_27 + DAT_00026210), puVar5 = param_30, puVar8 = param_29,\u000a         0 < iVar7)) {\u000a        do {\u000a          *puVar8 = *puVar5;\u000a          puVar5 = puVar5 + 1;\u000a          puVar8 = puVar8 + 1;\u000a          iVar7 = iVar7 + -1;\u000a        } while (iVar7 != 0);\u000a      }\u000a      param_35 = param_35 + 0x100;\u000a      uVar12 = uVar4 + 1;\u000a      uVar1 = param_31 + 1;\u000a      puVar5 = param_30 + 0x40;\u000a      puVar8 = param_29 + 0x40;\u000a      param_37 = uVar4;\u000a    } while (uVar4 + 1 != param_33);\u000a  }\u000a  if ((*param_20 == 1) && (param_21 == param_19)) {\u000a    param_6 = *param_14;\u000a    param_7 = *param_13;\u000a    param_5 = param_15;\u000a    vbrpsy_compute_MS_thresholds\u000a              ((int)&stack0x00000000 + DAT_00026b18,&stack0x000001a4,param_11,*param_12 + 0x1d4);\u000a  }\u000a  uVar12 = 0;\u000a  puVar5 = in_stack_00000064;\u000a  puVar8 = in_stack_00000060;\u000a  param_21 = iVar2;\u000a  if (0 < (int)param_33) {\u000a    do {\u000a      if ((param_32 != 0) || (*(int *)(&stack0x0000012c + (uVar12 & 1) * 4) == 0)) {\u000a        param_5 = (int)&stack0x00000000 + DAT_00026b1c;\u000a        convert_partition2scalefac\u000a                  (*param_27 + 0x870,(int)&stack0x00000000 + uVar12 * 0x100 + DAT_00026b18,\u000a                   &stack0x000001a4 + uVar12 * 0x100,(int)&stack0x00000000 + DAT_00026b14);\u000a        iVar2 = 0;\u000a        puVar6 = puVar5;\u000a        puVar9 = puVar8;\u000a        do {\u000a          *puVar6 = *(undefined4 *)((int)&stack0x00000000 + iVar2 * 4 + DAT_00026b14);\u000a          *puVar9 = *(undefined4 *)((int)&stack0x00000000 + iVar2 * 4 + DAT_00026b1c);\u000a          puVar6 = puVar6 + 3;\u000a          puVar9 = puVar9 + 3;\u000a          iVar2 = iVar2 + 1;\u000a          param_42 = puVar5;\u000a        } while (iVar2 != 0xd);\u000a      }\u000a      puVar5 = puVar5 + 0x3d;\u000a      puVar8 = puVar8 + 0x3d;\u000a      uVar12 = uVar12 + 1;\u000a    } while (uVar12 != param_33);\u000a  }\u000a  in_stack_000000b4 = in_stack_000000b4 + 0x204;\u000a  iVar2 = 1;\u000a  param_26 = param_26 + 0x400;\u000a  in_stack_00000080 = in_stack_00000080 + 0x204;\u000a  in_stack_00000064 = in_stack_00000064 + 1;\u000a  in_stack_00000060 = in_stack_00000060 + 1;\u000a  param_28 = param_28 + 1;\u000a  if (param_28 != 3) {\u000a    FUN_0002612a();\u000a  }\u000a  if (0 < (int)param_33) {\u000a    in_stack_000000e4 = (undefined4 *)(param_36 + DAT_00026b20);\u000a    in_stack_000000f0 = &stack0x00000130;\u000a    in_stack_000000e0 = 0;\u000a    in_stack_000000ec = &stack0x00000174;\u000a    param_37 = 0;\u000a    in_stack_00000104 = param_36 + DAT_00026b24;\u000a    in_stack_000000f8 = 0;\u000a    in_stack_000000f4 = param_36 + DAT_00026b20;\u000a    in_stack_00000100 = (int)&stack0x00000000 + DAT_00026b28 + 0x5c;\u000a    in_stack_00000108 = (int)&stack0x00000000 + DAT_00026b28 + 0x60;\u000a    param_40 = (undefined4 *)((int)&stack0x00000000 + DAT_00026b14);\u000a    param_42 = (undefined4 *)0x1;\u000a    in_stack_000000dc = iVar2;\u000a    in_stack_000000fc = in_stack_000000e4;\u000a    param_39 = in_stack_000000e4;\u000a    in_stack_0000011c = in_stack_000000ec;\u000a                    /* WARNING: Subroutine does not return */\u000a    __extendsfdf2(*in_stack_000000e4);\u000a  }\u000a  iVar7 = *(int *)(param_36 + 0x48);\u000a  if (0 < iVar7) {\u000a    piVar3 = (int *)(param_36 + DAT_00026eac);\u000a    piVar10 = in_stack_00000044;\u000a    piVar11 = (int *)&stack0x00000130;\u000a    iVar15 = param_21;\u000a    while( true ) {\u000a      iVar7 = iVar7 + -1;\u000a      iVar13 = *piVar3;\u000a      if (iVar15 == 0) {\u000a        iVar15 = 2;\u000a        if (iVar13 == 3) {\u000a          iVar13 = 2;\u000a          *piVar3 = 2;\u000a          iVar15 = 2;\u000a        }\u000a        else {\u000a          if (iVar13 == 0) {\u000a            *piVar3 = iVar2;\u000a            iVar13 = iVar2;\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        iVar15 = 3;\u000a        if (iVar13 != 2) {\u000a          iVar15 = 0;\u000a        }\u000a      }\u000a      *piVar10 = iVar13;\u000a      *piVar3 = iVar15;\u000a      if (iVar7 == 0) break;\u000a      piVar10 = piVar10 + 1;\u000a      piVar3 = piVar3 + 1;\u000a      iVar15 = *piVar11;\u000a      piVar11 = piVar11 + 1;\u000a    }\u000a  }\u000a  in_stack_000000dc = iVar2;\u000a  if (0 < (int)param_33) {\u000a    param_10 = param_10 + -8;\u000a    uVar12 = 0;\u000a    in_stack_000000dc = iVar2;\u000a    do {\u000a      if ((int)uVar12 < 2) {\u000a        puVar5 = (undefined4 *)\u000a                 (in_stack_00000048 + in_stack_0000005c * in_stack_00000050 +\u000a                 uVar12 * in_stack_00000054 * 8);\u000a        iVar2 = in_stack_00000044[uVar12];\u000a        in_stack_00000104 = param_9;\u000a      }\u000a      else {\u000a        if ((*in_stack_00000044 == 2) || (iVar2 = 0, in_stack_00000044[1] == 2)) {\u000a          iVar2 = 2;\u000a        }\u000a        puVar5 = (undefined4 *)\u000a                 (uVar12 * in_stack_00000054 * 8 +\u000a                  in_stack_00000038 + in_stack_0000005c * in_stack_00000050 + DAT_00026eb4);\u000a        in_stack_00000104 = param_10;\u000a      }\u000a      in_stack_0000011c = (undefined *)*in_stack_000000c0;\u000a      param_41 = DAT_00026eb8;\u000a      iVar7 = 0x15;\u000a      if (iVar2 == 2) {\u000a        puVar5 = puVar5 + 0x53;\u000a        iVar2 = 0;\u000a        param_41 = DAT_00026ec8;\u000a        in_stack_00000108 = uVar12;\u000a        do {\u000a          param_39 = (undefined4 *)(DAT_00026edc + 0x26ce2 + iVar2 * 4);\u000a          iVar7 = 3;\u000a          in_stack_0000010c = iVar2;\u000a          param_38 = puVar5;\u000a          do {\u000a            uVar14 = puVar5[-0x3d];\u000a            iVar2 = __aeabi_fcmpgt(uVar14,0);\u000a            if (iVar2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a              __mulsf3(in_stack_0000011c,uVar14);\u000a            }\u000a            iVar7 = iVar7 + -1;\u000a            puVar5 = puVar5 + 1;\u000a          } while (iVar7 != 0);\u000a          puVar5 = param_38 + 3;\u000a          iVar2 = in_stack_0000010c + 1;\u000a        } while (iVar2 != 0xc);\u000a      }\u000a      else {\u000a        param_42 = (undefined4 *)(&LAB_00026da4 + DAT_00026ed8);\u000a        in_stack_00000108 = uVar12;\u000a        do {\u000a          uVar14 = *puVar5;\u000a          iVar2 = __aeabi_fcmpgt(uVar14,0);\u000a          if (iVar2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a            __mulsf3(in_stack_0000011c,uVar14);\u000a          }\u000a          iVar7 = iVar7 + -1;\u000a          puVar5 = puVar5 + 1;\u000a          param_42 = param_42 + 1;\u000a        } while (iVar7 != 0);\u000a      }\u000a      *(undefined4 *)(in_stack_00000104 + in_stack_00000108 * 4) = param_41;\u000a      if (in_stack_0000003c != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __extendsfdf2(param_41,in_stack_00000108 << 3);\u000a      }\u000a      uVar12 = in_stack_00000108 + 1;\u000a    } while (uVar12 != param_33);\u000a  }\u000a  if (**(int **)(DAT_00026ed4 + 0x26e8e) != *param_8) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p101
S'str r4,[sp,#0x84]\nstr r5,[sp,#0x88]\nldr r0,[sp,#0xac]\ncmp r0,#0x1\nbge 0x00026136\nb 0x000268e2\nmov r0,#0x81\nlsl r0,r0,#0x2\nldr r1,[sp,#0x98]\nmul r0,r1\nldr r1,[0x0002621c]\nadd r1,sp\nadd r0,r1,r0\nstr r0,[sp,#0x7c]\nmov r3,#0x0\nldr r0,[sp,#0x2c]\nstr r0,[sp,#0xb8]\nldr r4,[sp,#0x34]\nldr r5,[sp,#0x30]\npush { r3 }\npop { r1 }\nstr r1,[sp,#0xe8]\nstr r5,[sp,#0x9c]\nstr r4,[sp,#0xa0]\nstr r3,[sp,#0xa4]\nmov r4,#0x1\nstr r4,[sp,#0xb0]\npush { r1 }\npop { r0 }\nand r0,r4\nlsl r1,r0,#0x2\nadd r2,sp,#0x12c\nand r3,r4\nmov r4,#0x3\nlsl r6,r4,#0xa\nmul r3,r6\nldr r4,[sp,#0x88]\nadd r4,r4,r3\nldr r5,[sp,#0x84]\nadd r5,r5,r3\nstr r5,[sp,#0x118]\nldr r5,[sp,#0x8c]\nadd r5,r5,r3\nldr r3,[sp,#0xa8]\ncmp r3,#0x0\nbne 0x00026220\nldr r1,[r2,r1]\ncmp r1,#0x0\nbeq 0x00026220\nldr r0,[sp,#0x98]\ncmp r0,#0x0\nldr r4,[sp,#0xa0]\nldr r5,[sp,#0x9c]\nbeq 0x00026198\nb 0x000268c4\nldr r0,[sp,#0x90]\nldr r0,[r0,#0x0]\nldr r1,[0x00026210]\nldr r0,[r0,r1]\ncmp r0,#0x1\npush { r4 }\npop { r1 }\npush { r5 }\npop { r2 }\nbge 0x000261ae\nb 0x000268c4\nldr r3,[r1,#0x0]\nstr r3,[r2,#0x0]\nadd r1,#0x4\nadd r2,#0x4\nsub r0,#0x1\ncmp r0,#0x0\nbne 0x000261ae\nb 0x000268c4\nstr r5,[sp,#0x114]\nmul r6,r0\nstr r6,[sp,#0x110]\nldr r0,[0x0002655c]\nadd r0,sp\nadd r1,r0,r6\nldr r0,[sp,#0x98]\ncmp r0,#0x0\nldr r5,[sp,#0xe8]\nbne 0x00026244\ncmp r5,#0x1\nbgt 0x00026244\nldr r0,[sp,#0xd0]\npush { r5 }\npop { r2 }\nldr r3,[sp,#0x70]\nbl 0x00038270\nldr r0,[sp,#0xb0]\nlsl r6,r0,#0x8\ncmp r5,#0x2\nldr r5,[sp,#0x118]\nbne 0x0002627e\nldr r0,[r5,#0x0]\nstr r0,[sp,#0x124]\nldr r1,[r4,#0x0]\nstr r1,[sp,#0x120]\nbl 0x00037a70\nldr r0,[0x0002655c]\nadd r0,sp\nldr r1,[sp,#0x110]\nadd r0,r0,r1\nldr r1,[sp,#0x98]\nlsl r1,r1,#0xa\nldr r0,[r0,r1]\npush { r0 }\npop { r1 }\nbl 0x00037aa0\n'
p102
S'21 94\n22 95\n2b 98\n01 28\n00 da\nd5 e3\n81 20\n80 00\n26 99\n48 43\n37 49\n69 44\n08 18\n1f 90\n00 23\n0b 98\n2e 90\n0d 9c\n0c 9d\n08 b4\n02 bc\n3a 91\n27 95\n28 94\n29 93\n01 24\n2c 94\n02 b4\n01 bc\n20 40\n81 00\n4b aa\n23 40\n03 24\na6 02\n73 43\n22 9c\ne4 18\n21 9d\ned 18\n46 95\n23 9d\ned 18\n2a 9b\n00 2b\n4c d1\n51 58\n00 29\n49 d0\n26 98\n00 28\n28 9c\n27 9d\n00 d0\n95 e3\n24 98\n00 68\n1c 49\n40 58\n01 28\n10 b4\n02 bc\n20 b4\n04 bc\n00 da\n8a e3\n0b 68\n13 60\n04 31\n04 32\n01 38\n00 28\nf8 d1\n82 e3\n45 95\n46 43\n44 96\ncd 48\n68 44\n81 19\n26 98\n00 28\n3a 9d\n07 d1\n01 2d\n05 dc\n34 98\n20 b4\n04 bc\n1c 9b\n12 f0 16 f8\n2c 98\n06 02\n02 2d\n46 9d\n17 d1\n28 68\n49 90\n21 68\n48 91\n11 f0 0b fc\nb7 48\n68 44\n44 99\n40 18\n26 99\n89 02\n40 58\n01 b4\n02 bc\n11 f0 06 fc\n'
p103
S'.text:0002612a\n.text:0002612c\n.text:0002612e\n.text:00026130\n.text:00026132\n.text:00026134\n.text:00026136\n.text:00026138\n.text:0002613a\n.text:0002613c\n.text:0002613e\n.text:00026140\n.text:00026142\n.text:00026144\n.text:00026146\n.text:00026148\n.text:0002614a\n.text:0002614c\n.text:0002614e\n.text:00026150\n.text:00026152\n.text:00026154\n.text:00026156\n.text:00026158\n.text:0002615a\n.text:0002615c\n.text:0002615e\n.text:00026160\n.text:00026162\n.text:00026164\n.text:00026166\n.text:00026168\n.text:0002616a\n.text:0002616c\n.text:0002616e\n.text:00026170\n.text:00026172\n.text:00026174\n.text:00026176\n.text:00026178\n.text:0002617a\n.text:0002617c\n.text:0002617e\n.text:00026180\n.text:00026182\n.text:00026184\n.text:00026186\n.text:00026188\n.text:0002618a\n.text:0002618c\n.text:0002618e\n.text:00026190\n.text:00026192\n.text:00026194\n.text:00026196\n.text:00026198\n.text:0002619a\n.text:0002619c\n.text:0002619e\n.text:000261a0\n.text:000261a2\n.text:000261a4\n.text:000261a6\n.text:000261a8\n.text:000261aa\n.text:000261ac\n.text:000261ae\n.text:000261b0\n.text:000261b2\n.text:000261b4\n.text:000261b6\n.text:000261b8\n.text:000261ba\n.text:000261bc\n.text:00026220\n.text:00026222\n.text:00026224\n.text:00026226\n.text:00026228\n.text:0002622a\n.text:0002622c\n.text:0002622e\n.text:00026230\n.text:00026232\n.text:00026234\n.text:00026236\n.text:00026238\n.text:0002623a\n.text:0002623c\n.text:0002623e\n.text:00026240\n.text:00026244\n.text:00026246\n.text:00026248\n.text:0002624a\n.text:0002624c\n.text:0002624e\n.text:00026250\n.text:00026252\n.text:00026254\n.text:00026256\n.text:0002627e\n.text:00026280\n.text:00026282\n.text:00026284\n.text:00026286\n.text:00026288\n.text:0002628a\n.text:0002628c\n.text:0002628e\n.text:00026290\n'
p104
tp105
sS'lame_set_mode'
p106
(S'\n__stdcall lame_set_mode(lame_global_flags * gfp, MPEG_mode mode)\n'
p107
V\u000aint lame_set_mode(lame_global_flags *gfp,MPEG_mode mode)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint uStack00000030;\u000a  \u000a  iVar1 = 0;\u000a  if (mode != STEREO) {\u000a    *(undefined *)mode = 0x49;\u000a    *(undefined *)(mode + JOINT_STEREO) = 0x44;\u000a    *(undefined *)(mode + DUAL_CHANNEL) = 0x33;\u000a    *(undefined *)(mode + MONO) = 3;\u000a    uStack00000030 = 0;\u000a    *(undefined *)(mode + NOT_SET) = 0;\u000a    *(undefined *)(mode + MAX_INDICATOR) = 0;\u000a    uVar2 = in_stack_0000002c - 10;\u000a    *(byte *)(mode + 6) = (byte)(uVar2 >> 0x15) & 0x7f;\u000a    *(byte *)(mode + 7) = (byte)(uVar2 >> 0xe) & 0x7f;\u000a    *(byte *)(mode + 8) = (byte)(uVar2 >> 7) & 0x7f;\u000a    *(byte *)(mode + 9) = (byte)uVar2 & 0x7f;\u000a    puVar12 = (undefined *)(mode + 10);\u000a    puVar9 = (undefined4 *)*in_stack_00000008;\u000a    while (puVar9 != (undefined4 *)0x0) {\u000a      uVar2 = puVar9[1];\u000a      uVar11 = 0xff;\u000a      iVar1 = 4;\u000a      if ((uVar2 == DAT_0001e494) || (uVar4 = uStack00000030, uVar2 == DAT_0001e498)) {\u000a        iVar1 = puVar9[4] * 2 + 0x10;\u000a        if (puVar9[5] != 1) {\u000a          iVar1 = puVar9[4] + 0xf;\u000a        }\u000a        iVar5 = 0;\u000a        if (puVar9[8] == 1) {\u000a          iVar5 = puVar9[8];\u000a        }\u000a        uVar11 = (puVar9[7] << iVar5) + iVar1;\u000a        iVar1 = 4;\u000a        if (10 < uVar11) {\u000a          do {\u000a            puVar12[iVar1 + -1] = (char)uVar2;\u000a            iVar1 = iVar1 + -1;\u000a            uVar2 = uVar2 >> 8;\u000a          } while (0 < iVar1);\u000a          uVar11 = uVar11 - 10;\u000a          iVar1 = 4;\u000a          do {\u000a            puVar12[iVar1 + 3] = (char)uVar11;\u000a            iVar1 = iVar1 + -1;\u000a            uVar11 = uVar11 >> 8;\u000a          } while (0 < iVar1);\u000a          puVar12[8] = 0;\u000a          puVar12[9] = 0;\u000a          *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a          puVar12[0xb] = *(undefined *)(puVar9 + 2);\u000a          puVar12[0xc] = *(undefined *)((int)puVar9 + 9);\u000a          puVar12[0xd] = *(undefined *)((int)puVar9 + 10);\u000a          puVar12 = puVar12 + 0xe;\u000a          if (puVar9[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar1 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar1;\u000a          }\u000a          iVar1 = puVar9[4];\u000a          if (iVar1 != 0) {\u000a            puVar3 = (undefined *)puVar9[3];\u000a            iVar5 = iVar1;\u000a            puVar8 = puVar12;\u000a            do {\u000a              *puVar8 = *puVar3;\u000a              puVar8 = puVar8 + 1;\u000a              puVar3 = puVar3 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a            puVar12 = puVar12 + iVar1;\u000a          }\u000a          *puVar12 = 0;\u000a          puVar12 = puVar12 + 1;\u000a          if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a            puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[6],puVar9[7]);\u000a          }\u000a          else {\u000a            iVar1 = puVar9[7];\u000a            if (iVar1 != 0) {\u000a              puVar3 = (undefined *)puVar9[6];\u000a              iVar5 = iVar1;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar3;\u000a                puVar8 = puVar8 + 1;\u000a                puVar3 = puVar3 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a              puVar12 = puVar12 + iVar1;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar7 = uVar11 & 0x57000000;\u000a          uVar10 = uStack00000030;\u000a          if (uVar7 != (uVar11 & uVar2)) {\u000a            uVar10 = uVar11 & uVar2;\u000a          }\u000a          if (uVar7 == 0) {\u000a            uVar10 = uVar7;\u000a          }\u000a          uVar4 = uVar4 | uVar10;\u000a          iVar1 = iVar1 + -1;\u000a          uVar11 = uVar11 << 8;\u000a        } while (iVar1 != 0);\u000a        if (uVar4 == 0) {\u000a          uVar11 = sizeOfWxxxNode(puVar9);\u000a          iVar1 = 4;\u000a          if (10 < uVar11) {\u000a            do {\u000a              puVar12[iVar1 + -1] = (char)uVar2;\u000a              iVar1 = iVar1 + -1;\u000a              uVar2 = uVar2 >> 8;\u000a            } while (0 < iVar1);\u000a            uVar11 = uVar11 - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              puVar12[iVar1 + 3] = (char)uVar11;\u000a              iVar1 = iVar1 + -1;\u000a              uVar11 = uVar11 >> 8;\u000a            } while (0 < iVar1);\u000a            puVar12[8] = 0;\u000a            puVar12[9] = 0;\u000a            puVar8 = puVar12 + 10;\u000a            if (puVar9[4] != 0) {\u000a              *(bool *)(puVar12 + 10) = puVar9[5] == 1;\u000a              puVar12 = puVar12 + 0xb;\u000a              if (puVar9[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a              }\u000a              else {\u000a                iVar1 = puVar9[4];\u000a                if (iVar1 != 0) {\u000a                  puVar3 = (undefined *)puVar9[3];\u000a                  iVar5 = iVar1;\u000a                  puVar8 = puVar12;\u000a                  do {\u000a                    *puVar8 = *puVar3;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar3 = puVar3 + 1;\u000a                    iVar5 = iVar5 + -1;\u000a                  } while (iVar5 != 0);\u000a                  puVar12 = puVar12 + iVar1;\u000a                }\u000a                *puVar12 = 0;\u000a                puVar8 = puVar12 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) {\u000a              puVar12 = (undefined *)writeLoBytes(puVar8,puVar9[6],puVar9[7]);\u000a            }\u000a            else {\u000a              iVar1 = puVar9[7];\u000a              puVar12 = puVar8;\u000a              if (iVar1 != 0) {\u000a                puVar3 = (undefined *)puVar9[6];\u000a                iVar5 = iVar1;\u000a                puVar12 = puVar8;\u000a                do {\u000a                  *puVar12 = *puVar3;\u000a                  puVar12 = puVar12 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar12 = puVar8 + iVar1;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar1 = puVar9[7];\u000a          iVar5 = puVar9[4];\u000a          if (puVar9[8] == 1) {\u000a            iVar6 = iVar5 * 2 + 0xd;\u000a            if (iVar5 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a            iVar1 = iVar1 << 1;\u000a          }\u000a          else {\u000a            iVar6 = iVar5 + 0xc;\u000a            if (iVar5 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a          }\u000a          iVar5 = 4;\u000a          if (10 < (uint)(iVar6 + iVar1)) {\u000a            do {\u000a              puVar12[iVar5 + -1] = (char)uVar2;\u000a              iVar5 = iVar5 + -1;\u000a              uVar2 = uVar2 >> 8;\u000a            } while (0 < iVar5);\u000a            uVar2 = (iVar6 + iVar1) - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              puVar12[iVar1 + 3] = (char)uVar2;\u000a              iVar1 = iVar1 + -1;\u000a              uVar2 = uVar2 >> 8;\u000a            } while (0 < iVar1);\u000a            puVar12[8] = 0;\u000a            puVar12[9] = 0;\u000a            *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a            puVar12 = puVar12 + 0xb;\u000a            iVar1 = puVar9[4];\u000a            if (iVar1 != 0) {\u000a              if (puVar9[5] == 1) {\u000a                puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[3]);\u000a                *puVar12 = 0;\u000a                puVar12[1] = 0;\u000a                puVar12 = puVar12 + 2;\u000a              }\u000a              else {\u000a                puVar3 = (undefined *)puVar9[3];\u000a                iVar5 = iVar1;\u000a                puVar8 = puVar12;\u000a                do {\u000a                  *puVar8 = *puVar3;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar12[iVar1] = 0;\u000a                puVar12 = puVar12 + iVar1 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) goto LAB_0001e338;\u000a            iVar1 = puVar9[7];\u000a            if (iVar1 != 0) {\u000a              puVar3 = (undefined *)puVar9[6];\u000a              iVar5 = iVar1;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar3;\u000a                puVar8 = puVar8 + 1;\u000a                puVar3 = puVar3 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar9 = (undefined4 *)*puVar9;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar1 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar2 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar12[iVar1 + -1] = (char)uVar2;\u000a          iVar1 = iVar1 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar1);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar12,(in_stack_0000002c + mode) - (int)puVar12);\u000a    iVar1 = in_stack_0000002c;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return iVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p108
S'mov r0,#0x0\ncmp r1,#0x0\nbne 0x0001e058\nb 0x0001e470\nmov r0,#0x49\npush { r1 }\npop { r6 }\nstr r6,[sp,#0x18]\nstrb r0,[r6,#0x0]\nmov r0,#0x44\nstrb r0,[r6,#0x1]\nmov r0,#0x33\nstrb r0,[r6,#0x2]\nmov r0,#0x3\nstrb r0,[r6,#0x3]\nmov r0,#0x0\nstr r0,[sp,#0x30]\nstrb r0,[r6,#0x4]\nstrb r0,[r6,#0x5]\nldr r0,[sp,#0x2c]\n'
p109
S'00 20\n00 29\n00 d1\n0b e2\n49 20\n02 b4\n40 bc\n06 96\n30 70\n44 20\n70 70\n33 20\nb0 70\n03 20\nf0 70\n00 20\n0c 90\n30 71\n70 71\n0b 98\n'
p110
S'.text:0001e050\n.text:0001e052\n.text:0001e054\n.text:0001e056\n.text:0001e058\n.text:0001e05a\n.text:0001e05c\n.text:0001e05e\n.text:0001e060\n.text:0001e062\n.text:0001e064\n.text:0001e066\n.text:0001e068\n.text:0001e06a\n.text:0001e06c\n.text:0001e06e\n.text:0001e070\n.text:0001e072\n.text:0001e074\n.text:0001e076\n'
p111
tp112
sS'drain_into_ancillary'
p113
(S'\n__stdcall drain_into_ancillary()\n'
p114
V\u000avoid drain_into_ancillary(int iParm1,int iParm2)\u000a\u000a{\u000a  bool bVar1;\u000a  char *__s;\u000a  int *piVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int *piVar7;\u000a  uint *puVar8;\u000a  uint *puVar9;\u000a  int *piVar10;\u000a  int iVar11;\u000a  int local_34;\u000a  uint local_28;\u000a  \u000a  local_34 = iParm2;\u000a  if (7 < iParm2) {\u000a    puVar9 = (uint *)(iParm1 + DAT_00017580);\u000a    piVar2 = (int *)(iParm1 + 0x11c);\u000a    piVar7 = (int *)(iParm1 + 0x124);\u000a    piVar3 = (int *)(iParm1 + 0x128);\u000a    piVar10 = (int *)(iParm1 + 300);\u000a    iVar11 = 8;\u000a    do {\u000a      iVar4 = *piVar10;\u000a      if (iVar4 == 0) {\u000a        *piVar10 = 8;\u000a        iVar4 = *piVar3 + 1;\u000a        *piVar3 = iVar4;\u000a        iVar5 = iParm1 + *puVar9 * 0x30;\u000a        if (*(int *)(iVar5 + DAT_00017584) == *piVar7) {\u000a          __aeabi_memcpy(*piVar2 + iVar4,iVar5 + DAT_00017588,*(undefined4 *)(iParm1 + 0x18));\u000a          iVar4 = *piVar3 + *(int *)(iParm1 + 0x18);\u000a          *piVar3 = iVar4;\u000a          *piVar7 = *piVar7 + *(int *)(iParm1 + 0x18) * 8;\u000a          *puVar9 = *puVar9 + 1 & 0xff;\u000a        }\u000a        *(undefined *)(*piVar2 + iVar4) = 0;\u000a        iVar4 = *piVar10;\u000a      }\u000a      iVar5 = iVar11;\u000a      if (iVar4 <= iVar11) {\u000a        iVar5 = iVar4;\u000a      }\u000a      *piVar10 = iVar4 - iVar5;\u000a      iVar11 = iVar11 - iVar5;\u000a      *(byte *)(*piVar2 + *piVar3) =\u000a           *(byte *)(*piVar2 + *piVar3) | (byte)((0x4cU >> iVar11) << iVar4 - iVar5);\u000a      iVar5 = *piVar7 + iVar5;\u000a      *piVar7 = iVar5;\u000a    } while (0 < iVar11);\u000a    local_34 = iParm2 + -8;\u000a    iVar11 = 8;\u000a    if (7 < local_34) {\u000a      do {\u000a        iVar4 = *piVar10;\u000a        if (iVar4 == 0) {\u000a          *piVar10 = 8;\u000a          iVar4 = *piVar3 + 1;\u000a          *piVar3 = iVar4;\u000a          iVar6 = iParm1 + *puVar9 * 0x30;\u000a          if (*(int *)(iVar6 + DAT_0001768c) == iVar5) {\u000a            __aeabi_memcpy(*piVar2 + iVar4,iVar6 + DAT_00017690,*(undefined4 *)(iParm1 + 0x18));\u000a            iVar4 = *piVar3 + *(int *)(iParm1 + 0x18);\u000a            *piVar3 = iVar4;\u000a            *piVar7 = *piVar7 + *(int *)(iParm1 + 0x18) * 8;\u000a            *puVar9 = *puVar9 + 1 & 0xff;\u000a          }\u000a          *(undefined *)(*piVar2 + iVar4) = 0;\u000a          iVar4 = *piVar10;\u000a        }\u000a        iVar5 = iVar11;\u000a        if (iVar4 <= iVar11) {\u000a          iVar5 = iVar4;\u000a        }\u000a        *piVar10 = iVar4 - iVar5;\u000a        iVar11 = iVar11 - iVar5;\u000a        *(byte *)(*piVar2 + *piVar3) =\u000a             *(byte *)(*piVar2 + *piVar3) | (byte)((0x41U >> iVar11) << iVar4 - iVar5);\u000a        iVar5 = *piVar7 + iVar5;\u000a        *piVar7 = iVar5;\u000a      } while (0 < iVar11);\u000a      local_34 = iParm2 + -0x10;\u000a      iVar11 = 8;\u000a      if (7 < local_34) {\u000a        do {\u000a          iVar4 = *piVar10;\u000a          if (iVar4 == 0) {\u000a            *piVar10 = 8;\u000a            iVar4 = *piVar3 + 1;\u000a            *piVar3 = iVar4;\u000a            iVar6 = iParm1 + *puVar9 * 0x30;\u000a            if (*(int *)(iVar6 + DAT_0001768c) == iVar5) {\u000a              __aeabi_memcpy(*piVar2 + iVar4,iVar6 + DAT_00017690,*(undefined4 *)(iParm1 + 0x18));\u000a              iVar4 = *piVar3 + *(int *)(iParm1 + 0x18);\u000a              *piVar3 = iVar4;\u000a              *piVar7 = *piVar7 + *(int *)(iParm1 + 0x18) * 8;\u000a              *puVar9 = *puVar9 + 1 & 0xff;\u000a            }\u000a            *(undefined *)(*piVar2 + iVar4) = 0;\u000a            iVar4 = *piVar10;\u000a          }\u000a          iVar5 = iVar11;\u000a          if (iVar4 <= iVar11) {\u000a            iVar5 = iVar4;\u000a          }\u000a          *piVar10 = iVar4 - iVar5;\u000a          iVar11 = iVar11 - iVar5;\u000a          *(byte *)(*piVar2 + *piVar3) =\u000a               *(byte *)(*piVar2 + *piVar3) | (byte)((0x4dU >> iVar11) << iVar4 - iVar5);\u000a          iVar5 = *piVar7 + iVar5;\u000a          *piVar7 = iVar5;\u000a        } while (0 < iVar11);\u000a        local_34 = iParm2 + -0x18;\u000a        iVar11 = 8;\u000a        if (7 < local_34) {\u000a          do {\u000a            iVar4 = *piVar10;\u000a            if (iVar4 == 0) {\u000a              *piVar10 = 8;\u000a              iVar4 = *piVar3 + 1;\u000a              *piVar3 = iVar4;\u000a              iVar6 = iParm1 + *puVar9 * 0x30;\u000a              if (*(int *)(iVar6 + DAT_0001768c) == iVar5) {\u000a                __aeabi_memcpy(*piVar2 + iVar4,iVar6 + DAT_00017690,*(undefined4 *)(iParm1 + 0x18));\u000a                iVar4 = *piVar3 + *(int *)(iParm1 + 0x18);\u000a                *piVar3 = iVar4;\u000a                *piVar7 = *piVar7 + *(int *)(iParm1 + 0x18) * 8;\u000a                *puVar9 = *puVar9 + 1 & 0xff;\u000a              }\u000a              *(undefined *)(*piVar2 + iVar4) = 0;\u000a              iVar4 = *piVar10;\u000a            }\u000a            iVar5 = iVar11;\u000a            if (iVar4 <= iVar11) {\u000a              iVar5 = iVar4;\u000a            }\u000a            *piVar10 = iVar4 - iVar5;\u000a            iVar11 = iVar11 - iVar5;\u000a            *(byte *)(*piVar2 + *piVar3) =\u000a                 *(byte *)(*piVar2 + *piVar3) | (byte)((0x45U >> iVar11) << iVar4 - iVar5);\u000a            iVar5 = *piVar7 + iVar5;\u000a            *piVar7 = iVar5;\u000a          } while (0 < iVar11);\u000a          local_34 = iParm2 + -0x20;\u000a          if (0x1f < local_34) {\u000a            __s = (char *)get_lame_short_version();\u000a                    /* WARNING: Subroutine does not return */\u000a            strlen(__s);\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a  if (0 < local_34) {\u000a    local_28 = *(uint *)(iParm1 + DAT_00017694);\u000a    puVar8 = (uint *)(iParm1 + DAT_00017688);\u000a    puVar9 = (uint *)(iParm1 + DAT_00017694);\u000a    piVar2 = (int *)(iParm1 + 0x11c);\u000a    piVar3 = (int *)(iParm1 + 0x124);\u000a    piVar7 = (int *)(iParm1 + 0x128);\u000a    piVar10 = (int *)(iParm1 + 300);\u000a    do {\u000a      iVar11 = 1;\u000a      do {\u000a        iVar4 = *piVar10;\u000a        if (iVar4 == 0) {\u000a          *piVar10 = 8;\u000a          iVar4 = *piVar7 + 1;\u000a          *piVar7 = iVar4;\u000a          iVar5 = iParm1 + *puVar8 * 0x30;\u000a          if (*(int *)(iVar5 + DAT_0001768c) == *piVar3) {\u000a            __aeabi_memcpy(*piVar2 + iVar4,iVar5 + DAT_00017690,*(undefined4 *)(iParm1 + 0x18));\u000a            iVar4 = *piVar7 + *(int *)(iParm1 + 0x18);\u000a            *piVar7 = iVar4;\u000a            *piVar3 = *piVar3 + *(int *)(iParm1 + 0x18) * 8;\u000a            *puVar8 = *puVar8 + 1 & 0xff;\u000a          }\u000a          *(undefined *)(*piVar2 + iVar4) = 0;\u000a          iVar4 = *piVar10;\u000a        }\u000a        iVar5 = iVar11;\u000a        if (iVar4 <= iVar11) {\u000a          iVar5 = iVar4;\u000a        }\u000a        *piVar10 = iVar4 - iVar5;\u000a        iVar11 = iVar11 - iVar5;\u000a        *(byte *)(*piVar2 + *piVar7) =\u000a             *(byte *)(*piVar2 + *piVar7) | (byte)(((int)local_28 >> iVar11) << iVar4 - iVar5);\u000a        *piVar3 = *piVar3 + iVar5;\u000a      } while (0 < iVar11);\u000a      local_28 = *puVar9 ^ (uint)(*(int *)(iParm1 + 0x90) == 0);\u000a      *puVar9 = local_28;\u000a      bVar1 = 1 < local_34;\u000a      local_34 = local_34 + -1;\u000a    } while (bVar1);\u000a  }\u000a  return;\u000a}\u000a\u000a
p115
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x2c\ncmp r1,#0x7\nbgt 0x000171d4\nb 0x0001756e\nstr r1,[sp,#0x18]\nldr r1,[0x00017580]\nadd r5,r0,r1\nstr r5,[sp,#0x1c]\nmov r1,#0x47\nlsl r1,r1,#0x2\nadd r1,r0,r1\nstr r1,[sp,#0x28]\nmov r1,#0x49\nlsl r1,r1,#0x2\nadd r3,r0,r1\nstr r3,[sp,#0x20]\nmov r1,#0x25\nlsl r1,r1,#0x3\nadd r1,r0,r1\nstr r1,[sp,#0x24]\nmov r1,#0x4b\nlsl r1,r1,#0x2\nadd r6,r0,r1\nstr r6,[sp,#0x10]\nstr r0,[sp,#0x14]\nmov r4,#0x8\nldr r1,[r6,#0x0]\ncmp r1,#0x0\nbne 0x00017262\nmov r0,#0x8\nstr r0,[r6,#0x0]\nldr r6,[sp,#0x24]\nldr r0,[r6,#0x0]\nadd r0,#0x1\nstr r0,[r6,#0x0]\nldr r1,[r5,#0x0]\nmov r2,#0x30\nmul r2,r1\nldr r5,[sp,#0x14]\nadd r1,r5,r2\nldr r2,[0x00017584]\nldr r2,[r1,r2]\nldr r3,[r3,#0x0]\ncmp r2,r3\nbne 0x00017254\nldr r2,[sp,#0x28]\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nldr r2,[0x00017588]\nadd r1,r1,r2\nldr r2,[r5,#0x18]\nbl 0x000379c0\nldr r1,[r5,#0x18]\nldr r0,[r6,#0x0]\nadd r0,r0,r1\nstr r0,[r6,#0x0]\nlsl r1,r1,#0x3\nldr r3,[sp,#0x20]\nldr r2,[r3,#0x0]\nadd r1,r2,r1\nstr r1,[r3,#0x0]\nldr r3,[sp,#0x1c]\nldr r1,[r3,#0x0]\nadd r1,#0x1\nmov r2,#0xff\nand r2,r1\nstr r2,[r3,#0x0]\nldr r1,[sp,#0x28]\nstr r1,[sp,#0x28]\nldr r1,[r1,#0x0]\nmov r2,#0x0\nstrb r2,[r1,r0]\nldr r6,[sp,#0x10]\nldr r1,[r6,#0x0]\ncmp r4,r1\npush { r4 }\npop { r0 }\nblt 0x0001726e\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r6,#0x0]\nsub r4,r4,r0\nmov r2,#0x4c\nlsr r2,r4\nlsl r2,r1\nldr r1,[sp,#0x24]\nldr r1,[r1,#0x0]\nldr r3,[sp,#0x28]\nldr r3,[r3,#0x0]\nldrb r5,[r3,r1]\norr r5,r2\nstrb r5,[r3,r1]\nldr r3,[sp,#0x20]\nldr r1,[r3,#0x0]\nadd r0,r1,r0\nstr r0,[r3,#0x0]\ncmp r4,#0x0\nldr r5,[sp,#0x1c]\nbgt 0x00017200\nldr r1,[sp,#0x18]\nsub r1,#0x8\nstr r1,[sp,#0xc]\nmov r4,#0x8\ncmp r1,#0x8\nbge 0x000172a4\nb 0x00017572\nldr r1,[r6,#0x0]\ncmp r1,#0x0\nbne 0x00017304\nmov r1,#0x8\nstr r1,[r6,#0x0]\nldr r6,[sp,#0x24]\nldr r1,[r6,#0x0]\nadd r1,#0x1\nstr r1,[r6,#0x0]\nldr r2,[r5,#0x0]\nmov r3,#0x30\nmul r3,r2\nldr r5,[sp,#0x14]\nadd r2,r5,r3\nldr r3,[0x0001768c]\nldr r3,[r2,r3]\ncmp r3,r0\nbne 0x000172f6\nldr r0,[sp,#0x28]\nldr r0,[r0,#0x0]\nadd r0,r0,r1\nldr r1,[0x00017690]\nadd r1,r2,r1\nldr r2,[r5,#0x18]\nbl 0x000379c0\nldr r0,[r5,#0x18]\nldr r1,[r6,#0x0]\nadd r1,r1,r0\nstr r1,[r6,#0x0]\nlsl r0,r0,#0x3\nldr r3,[sp,#0x20]\nldr r2,[r3,#0x0]\nadd r0,r2,r0\nstr r0,[r3,#0x0]\nldr r3,[sp,#0x1c]\nldr r0,[r3,#0x0]\nadd r0,#0x1\nmov r2,#0xff\nand r2,r0\nstr r2,[r3,#0x0]\nldr r0,[sp,#0x28]\nstr r0,[sp,#0x28]\nldr r0,[r0,#0x0]\nmov r2,#0x0\nstrb r2,[r0,r1]\nldr r6,[sp,#0x10]\nldr r1,[r6,#0x0]\ncmp r4,r1\npush { r4 }\npop { r0 }\nldr r3,[sp,#0x24]\nblt 0x00017312\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r6,#0x0]\nsub r4,r4,r0\nmov r2,#0x41\nlsr r2,r4\nlsl r2,r1\nldr r1,[r3,#0x0]\nldr r3,[sp,#0x28]\nldr r3,[r3,#0x0]\nldrb r5,[r3,r1]\norr r5,r2\nstrb r5,[r3,r1]\nldr r2,[sp,#0x20]\nldr r1,[r2,#0x0]\nadd r0,r1,r0\nstr r0,[r2,#0x0]\ncmp r4,#0x0\nldr r5,[sp,#0x1c]\nbgt 0x000172a4\nldr r1,[sp,#0x18]\nsub r1,#0x10\nstr r1,[sp,#0xc]\nmov r4,#0x8\ncmp r1,#0x8\nbge 0x00017346\nb 0x00017572\nldr r1,[r6,#0x0]\ncmp r1,#0x0\nbne 0x000173aa\nmov r1,#0x8\nstr r1,[r6,#0x0]\nldr r6,[sp,#0x24]\nldr r1,[r6,#0x0]\nadd r1,#0x1\nstr r1,[r6,#0x0]\nldr r2,[r5,#0x0]\nmov r3,#0x30\nmul r3,r2\nldr r5,[sp,#0x14]\nadd r2,r5,r3\nldr r3,[0x0001768c]\nldr r3,[r2,r3]\ncmp r3,r0\nbne 0x0001739c\nldr r0,[sp,#0x28]\nldr r0,[r0,#0x0]\nadd r0,r0,r1\nldr r1,[0x00017690]\nadd r1,r2,r1\nldr r2,[r5,#0x18]\nbl 0x000379c0\nldr r0,[r5,#0x18]\nldr r1,[r6,#0x0]\nadd r1,r1,r0\nstr r1,[r6,#0x0]\nlsl r0,r0,#0x3\nldr r3,[sp,#0x20]\nldr r2,[r3,#0x0]\nadd r0,r2,r0\nstr r0,[r3,#0x0]\nldr r3,[sp,#0x1c]\nldr r0,[r3,#0x0]\nadd r0,#0x1\nmov r2,#0xff\nand r2,r0\nldr r0,[sp,#0x28]\nstr r2,[r3,#0x0]\nb 0x0001739e\nldr r0,[sp,#0x28]\nstr r0,[sp,#0x28]\nldr r0,[r0,#0x0]\nmov r2,#0x0\nstrb r2,[r0,r1]\nldr r6,[sp,#0x10]\nldr r1,[r6,#0x0]\ncmp r4,r1\npush { r4 }\npop { r0 }\nldr r3,[sp,#0x24]\nblt 0x000173b8\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r6,#0x0]\nsub r4,r4,r0\nmov r2,#0x4d\nlsr r2,r4\nlsl r2,r1\nldr r1,[r3,#0x0]\nldr r3,[sp,#0x28]\nldr r3,[r3,#0x0]\nldrb r5,[r3,r1]\norr r5,r2\nstrb r5,[r3,r1]\nldr r2,[sp,#0x20]\nldr r1,[r2,#0x0]\nadd r0,r1,r0\nstr r0,[r2,#0x0]\ncmp r4,#0x0\nldr r5,[sp,#0x1c]\nbgt 0x00017346\nldr r1,[sp,#0x18]\nsub r1,#0x18\nstr r1,[sp,#0xc]\nmov r4,#0x8\ncmp r1,#0x8\nbge 0x000173ec\nb 0x00017572\nstr r6,[sp,#0x10]\nldr r1,[r6,#0x0]\ncmp r1,#0x0\nbne 0x00017452\nmov r1,#0x8\nstr r1,[r6,#0x0]\nldr r6,[sp,#0x24]\nldr r1,[r6,#0x0]\nadd r1,#0x1\nstr r1,[r6,#0x0]\nldr r2,[r5,#0x0]\nmov r3,#0x30\nmul r3,r2\nldr r5,[sp,#0x14]\nadd r2,r5,r3\nldr r3,[0x0001768c]\nldr r3,[r2,r3]\ncmp r3,r0\nbne 0x00017444\nldr r0,[sp,#0x28]\nldr r0,[r0,#0x0]\nadd r0,r0,r1\nldr r1,[0x00017690]\nadd r1,r2,r1\nldr r2,[r5,#0x18]\nbl 0x000379c0\nldr r0,[r5,#0x18]\nldr r1,[r6,#0x0]\nadd r1,r1,r0\nstr r1,[r6,#0x0]\nlsl r0,r0,#0x3\nldr r3,[sp,#0x20]\nldr r2,[r3,#0x0]\nadd r0,r2,r0\nstr r0,[r3,#0x0]\nldr r3,[sp,#0x1c]\nldr r0,[r3,#0x0]\nadd r0,#0x1\nmov r2,#0xff\nand r2,r0\nldr r0,[sp,#0x28]\nstr r2,[r3,#0x0]\nb 0x00017446\nldr r0,[sp,#0x28]\nstr r0,[sp,#0x28]\nldr r0,[r0,#0x0]\nmov r2,#0x0\nstrb r2,[r0,r1]\nldr r6,[sp,#0x10]\nldr r1,[r6,#0x0]\ncmp r4,r1\npush { r4 }\npop { r0 }\nldr r3,[sp,#0x24]\nblt 0x00017460\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r6,#0x0]\nsub r4,r4,r0\nmov r2,#0x45\nlsr r2,r4\nlsl r2,r1\nldr r1,[r3,#0x0]\nldr r3,[sp,#0x28]\nldr r3,[r3,#0x0]\nldrb r5,[r3,r1]\norr r5,r2\nstrb r5,[r3,r1]\nldr r2,[sp,#0x20]\nldr r1,[r2,#0x0]\nadd r0,r1,r0\nstr r0,[r2,#0x0]\ncmp r4,#0x0\nldr r5,[sp,#0x1c]\nbgt 0x000173ee\nldr r4,[sp,#0x18]\nsub r4,#0x20\ncmp r4,#0x20\nblt 0x0001757a\nbl 0x000379d0\nstr r0,[sp,#0x8]\nbl 0x000379e0\nstr r0,[sp,#0x14]\nstr r1,[sp,#0xc]\nldr r3,[sp,#0xc]\ncmp r3,#0x1\nbge 0x00017590\nb 0x00017684\nstr r4,[sp,#0xc]\nb 0x00017572\nldr r0,[0x00017694]\nldr r2,[sp,#0x14]\nldr r1,[r2,r0]\nstr r1,[sp,#0x18]\nldr r1,[0x00017688]\nadd r4,r2,r1\nstr r4,[sp,#0x1c]\nadd r0,r2,r0\nstr r0,[sp,#0x8]\nmov r0,#0x47\nlsl r0,r0,#0x2\nadd r0,r2,r0\nstr r0,[sp,#0x28]\nmov r0,#0x49\nlsl r0,r0,#0x2\nadd r0,r2,r0\nstr r0,[sp,#0x20]\nmov r0,#0x25\nlsl r0,r0,#0x3\nadd r0,r2,r0\nstr r0,[sp,#0x24]\nmov r0,#0x4b\nlsl r0,r0,#0x2\nadd r5,r2,r0\nstr r5,[sp,#0x10]\nadd r2,#0x90\nstr r2,[sp,#0x4]\nstr r3,[sp,#0xc]\nmov r6,#0x1\nldr r3,[sp,#0x20]\nldr r1,[r5,#0x0]\ncmp r1,#0x0\nbne 0x0001762e\nmov r0,#0x8\nstr r0,[r5,#0x0]\nldr r5,[sp,#0x24]\nldr r0,[r5,#0x0]\nadd r0,#0x1\nstr r0,[r5,#0x0]\nldr r1,[r4,#0x0]\nmov r2,#0x30\nmul r2,r1\nldr r4,[sp,#0x14]\nadd r1,r4,r2\nldr r2,[0x0001768c]\nldr r2,[r1,r2]\nldr r3,[r3,#0x0]\ncmp r2,r3\nbne 0x00017620\nldr r2,[sp,#0x28]\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nldr r2,[0x00017690]\nadd r1,r1,r2\nldr r2,[r4,#0x18]\nbl 0x000379c0\nldr r1,[r4,#0x18]\nldr r0,[r5,#0x0]\nadd r0,r0,r1\nstr r0,[r5,#0x0]\nlsl r1,r1,#0x3\nldr r3,[sp,#0x20]\nldr r2,[r3,#0x0]\nadd r1,r2,r1\nstr r1,[r3,#0x0]\nldr r3,[sp,#0x1c]\nldr r1,[r3,#0x0]\nadd r1,#0x1\nmov r2,#0xff\nand r2,r1\nstr r2,[r3,#0x0]\nldr r1,[sp,#0x28]\nstr r1,[sp,#0x28]\nldr r1,[r1,#0x0]\nmov r2,#0x0\nstrb r2,[r1,r0]\nldr r5,[sp,#0x10]\nldr r1,[r5,#0x0]\ncmp r6,r1\npush { r6 }\npop { r0 }\nblt 0x0001763a\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r5,#0x0]\nsub r6,r6,r0\nldr r2,[sp,#0x18]\nasr r2,r6\nlsl r2,r1\nldr r1,[sp,#0x24]\nldr r1,[r1,#0x0]\nldr r3,[sp,#0x28]\nldr r3,[r3,#0x0]\nldrb r4,[r3,r1]\norr r4,r2\nstrb r4,[r3,r1]\nldr r3,[sp,#0x20]\nldr r1,[r3,#0x0]\nadd r0,r1,r0\nstr r0,[r3,#0x0]\ncmp r6,#0x0\nldr r4,[sp,#0x1c]\nbgt 0x000175cc\nldr r0,[sp,#0x4]\nldr r2,[r0,#0x0]\nmov r0,#0x1\nmov r1,#0x0\ncmp r2,#0x0\nbeq 0x00017672\npush { r1 }\npop { r0 }\nldr r1,[sp,#0x8]\nldr r2,[r1,#0x0]\neor r2,r0\nstr r2,[sp,#0x18]\nstr r2,[r1,#0x0]\nldr r0,[sp,#0xc]\nsub r3,r0,#0x1\ncmp r0,#0x1\nbgt 0x000175c6\nadd sp,#0x2c\npop { r4, r5, r6, r7, pc }\n'
p116
S'f0 b5\n03 af\n8b b0\n07 29\n00 dc\ncc e1\n06 91\nea 49\n45 18\n07 95\n47 21\n89 00\n41 18\n0a 91\n49 21\n89 00\n43 18\n08 93\n25 21\nc9 00\n41 18\n09 91\n4b 21\n89 00\n46 18\n04 96\n05 90\n08 24\n31 68\n00 29\n2d d1\n08 20\n30 60\n09 9e\n30 68\n01 30\n30 60\n29 68\n30 22\n4a 43\n05 9d\na9 18\nd9 4a\n8a 58\n1b 68\n9a 42\n16 d1\n0a 9a\n12 68\n10 18\nd6 4a\n89 18\naa 69\n20 f0 c5 fb\na9 69\n30 68\n40 18\n30 60\nc9 00\n08 9b\n1a 68\n51 18\n19 60\n07 9b\n19 68\n01 31\nff 22\n0a 40\n1a 60\n0a 99\n0a 91\n09 68\n00 22\n0a 54\n04 9e\n31 68\n8c 42\n10 b4\n01 bc\n01 db\n02 b4\n01 bc\n09 1a\n31 60\n24 1a\n4c 22\ne2 40\n8a 40\n09 99\n09 68\n0a 9b\n1b 68\n5d 5c\n15 43\n5d 54\n08 9b\n19 68\n08 18\n18 60\n00 2c\n07 9d\nb4 dc\n06 99\n08 39\n03 91\n08 24\n08 29\n00 da\n66 e1\n31 68\n00 29\n2c d1\n08 21\n31 60\n09 9e\n31 68\n01 31\n31 60\n2a 68\n30 23\n53 43\n05 9d\nea 18\nf2 4b\nd3 58\n83 42\n16 d1\n0a 98\n00 68\n40 18\nf0 49\n51 18\naa 69\n20 f0 74 fb\na8 69\n31 68\n09 18\n31 60\nc0 00\n08 9b\n1a 68\n10 18\n18 60\n07 9b\n18 68\n01 30\nff 22\n02 40\n1a 60\n0a 98\n0a 90\n00 68\n00 22\n42 54\n04 9e\n31 68\n8c 42\n10 b4\n01 bc\n09 9b\n01 db\n02 b4\n01 bc\n09 1a\n31 60\n24 1a\n41 22\ne2 40\n8a 40\n19 68\n0a 9b\n1b 68\n5d 5c\n15 43\n5d 54\n08 9a\n11 68\n08 18\n10 60\n00 2c\n07 9d\nb5 dc\n06 99\n10 39\n03 91\n08 24\n08 29\n00 da\n15 e1\n31 68\n00 29\n2e d1\n08 21\n31 60\n09 9e\n31 68\n01 31\n31 60\n2a 68\n30 23\n53 43\n05 9d\nea 18\nca 4b\nd3 58\n83 42\n18 d1\n0a 98\n00 68\n40 18\nc7 49\n51 18\naa 69\n20 f0 23 fb\na8 69\n31 68\n09 18\n31 60\nc0 00\n08 9b\n1a 68\n10 18\n18 60\n07 9b\n18 68\n01 30\nff 22\n02 40\n0a 98\n1a 60\n00 e0\n0a 98\n0a 90\n00 68\n00 22\n42 54\n04 9e\n31 68\n8c 42\n10 b4\n01 bc\n09 9b\n01 db\n02 b4\n01 bc\n09 1a\n31 60\n24 1a\n4d 22\ne2 40\n8a 40\n19 68\n0a 9b\n1b 68\n5d 5c\n15 43\n5d 54\n08 9a\n11 68\n08 18\n10 60\n00 2c\n07 9d\nb3 dc\n06 99\n18 39\n03 91\n08 24\n08 29\n00 da\nc2 e0\n04 96\n31 68\n00 29\n2e d1\n08 21\n31 60\n09 9e\n31 68\n01 31\n31 60\n2a 68\n30 23\n53 43\n05 9d\nea 18\na0 4b\nd3 58\n83 42\n18 d1\n0a 98\n00 68\n40 18\n9d 49\n51 18\naa 69\n20 f0 cf fa\na8 69\n31 68\n09 18\n31 60\nc0 00\n08 9b\n1a 68\n10 18\n18 60\n07 9b\n18 68\n01 30\nff 22\n02 40\n0a 98\n1a 60\n00 e0\n0a 98\n0a 90\n00 68\n00 22\n42 54\n04 9e\n31 68\n8c 42\n10 b4\n01 bc\n09 9b\n01 db\n02 b4\n01 bc\n09 1a\n31 60\n24 1a\n45 22\ne2 40\n8a 40\n19 68\n0a 9b\n1b 68\n5d 5c\n15 43\n5d 54\n08 9a\n11 68\n08 18\n10 60\n00 2c\n07 9d\nb3 dc\n06 9c\n20 3c\n20 2c\n75 db\n20 f0 9f fa\n02 90\n20 f0 a4 fa\n05 90\n03 91\n03 9b\n01 2b\n0b da\n84 e0\n03 94\nf9 e7\n40 48\n05 9a\n11 58\n06 91\n3b 49\n54 18\n07 94\n10 18\n02 90\n47 20\n80 00\n10 18\n0a 90\n49 20\n80 00\n10 18\n08 90\n25 20\nc0 00\n10 18\n09 90\n4b 20\n80 00\n15 18\n04 95\n90 32\n01 92\n03 93\n01 26\n08 9b\n29 68\n00 29\n2d d1\n08 20\n28 60\n09 9d\n28 68\n01 30\n28 60\n21 68\n30 22\n4a 43\n05 9c\na1 18\n28 4a\n8a 58\n1b 68\n9a 42\n16 d1\n0a 9a\n12 68\n10 18\n25 4a\n89 18\na2 69\n20 f0 df f9\na1 69\n28 68\n40 18\n28 60\nc9 00\n08 9b\n1a 68\n51 18\n19 60\n07 9b\n19 68\n01 31\nff 22\n0a 40\n1a 60\n0a 99\n0a 91\n09 68\n00 22\n0a 54\n04 9d\n29 68\n8e 42\n40 b4\n01 bc\n01 db\n02 b4\n01 bc\n09 1a\n29 60\n36 1a\n06 9a\n32 41\n8a 40\n09 99\n09 68\n0a 9b\n1b 68\n5c 5c\n14 43\n5c 54\n08 9b\n19 68\n08 18\n18 60\n00 2e\n07 9c\nb4 dc\n01 98\n02 68\n01 20\n00 21\n00 2a\n01 d0\n02 b4\n01 bc\n02 99\n0a 68\n42 40\n06 92\n0a 60\n03 98\n43 1e\n01 28\na0 dc\n0b b0\nf0 bd\n'
p117
S'.text:000171c8\n.text:000171ca\n.text:000171cc\n.text:000171ce\n.text:000171d0\n.text:000171d2\n.text:000171d4\n.text:000171d6\n.text:000171d8\n.text:000171da\n.text:000171dc\n.text:000171de\n.text:000171e0\n.text:000171e2\n.text:000171e4\n.text:000171e6\n.text:000171e8\n.text:000171ea\n.text:000171ec\n.text:000171ee\n.text:000171f0\n.text:000171f2\n.text:000171f4\n.text:000171f6\n.text:000171f8\n.text:000171fa\n.text:000171fc\n.text:000171fe\n.text:00017200\n.text:00017202\n.text:00017204\n.text:00017206\n.text:00017208\n.text:0001720a\n.text:0001720c\n.text:0001720e\n.text:00017210\n.text:00017212\n.text:00017214\n.text:00017216\n.text:00017218\n.text:0001721a\n.text:0001721c\n.text:0001721e\n.text:00017220\n.text:00017222\n.text:00017224\n.text:00017226\n.text:00017228\n.text:0001722a\n.text:0001722c\n.text:0001722e\n.text:00017230\n.text:00017232\n.text:00017236\n.text:00017238\n.text:0001723a\n.text:0001723c\n.text:0001723e\n.text:00017240\n.text:00017242\n.text:00017244\n.text:00017246\n.text:00017248\n.text:0001724a\n.text:0001724c\n.text:0001724e\n.text:00017250\n.text:00017252\n.text:00017254\n.text:00017256\n.text:00017258\n.text:0001725a\n.text:0001725c\n.text:0001725e\n.text:00017260\n.text:00017262\n.text:00017264\n.text:00017266\n.text:00017268\n.text:0001726a\n.text:0001726c\n.text:0001726e\n.text:00017270\n.text:00017272\n.text:00017274\n.text:00017276\n.text:00017278\n.text:0001727a\n.text:0001727c\n.text:0001727e\n.text:00017280\n.text:00017282\n.text:00017284\n.text:00017286\n.text:00017288\n.text:0001728a\n.text:0001728c\n.text:0001728e\n.text:00017290\n.text:00017292\n.text:00017294\n.text:00017296\n.text:00017298\n.text:0001729a\n.text:0001729c\n.text:0001729e\n.text:000172a0\n.text:000172a2\n.text:000172a4\n.text:000172a6\n.text:000172a8\n.text:000172aa\n.text:000172ac\n.text:000172ae\n.text:000172b0\n.text:000172b2\n.text:000172b4\n.text:000172b6\n.text:000172b8\n.text:000172ba\n.text:000172bc\n.text:000172be\n.text:000172c0\n.text:000172c2\n.text:000172c4\n.text:000172c6\n.text:000172c8\n.text:000172ca\n.text:000172cc\n.text:000172ce\n.text:000172d0\n.text:000172d2\n.text:000172d4\n.text:000172d8\n.text:000172da\n.text:000172dc\n.text:000172de\n.text:000172e0\n.text:000172e2\n.text:000172e4\n.text:000172e6\n.text:000172e8\n.text:000172ea\n.text:000172ec\n.text:000172ee\n.text:000172f0\n.text:000172f2\n.text:000172f4\n.text:000172f6\n.text:000172f8\n.text:000172fa\n.text:000172fc\n.text:000172fe\n.text:00017300\n.text:00017302\n.text:00017304\n.text:00017306\n.text:00017308\n.text:0001730a\n.text:0001730c\n.text:0001730e\n.text:00017310\n.text:00017312\n.text:00017314\n.text:00017316\n.text:00017318\n.text:0001731a\n.text:0001731c\n.text:0001731e\n.text:00017320\n.text:00017322\n.text:00017324\n.text:00017326\n.text:00017328\n.text:0001732a\n.text:0001732c\n.text:0001732e\n.text:00017330\n.text:00017332\n.text:00017334\n.text:00017336\n.text:00017338\n.text:0001733a\n.text:0001733c\n.text:0001733e\n.text:00017340\n.text:00017342\n.text:00017344\n.text:00017346\n.text:00017348\n.text:0001734a\n.text:0001734c\n.text:0001734e\n.text:00017350\n.text:00017352\n.text:00017354\n.text:00017356\n.text:00017358\n.text:0001735a\n.text:0001735c\n.text:0001735e\n.text:00017360\n.text:00017362\n.text:00017364\n.text:00017366\n.text:00017368\n.text:0001736a\n.text:0001736c\n.text:0001736e\n.text:00017370\n.text:00017372\n.text:00017374\n.text:00017376\n.text:0001737a\n.text:0001737c\n.text:0001737e\n.text:00017380\n.text:00017382\n.text:00017384\n.text:00017386\n.text:00017388\n.text:0001738a\n.text:0001738c\n.text:0001738e\n.text:00017390\n.text:00017392\n.text:00017394\n.text:00017396\n.text:00017398\n.text:0001739a\n.text:0001739c\n.text:0001739e\n.text:000173a0\n.text:000173a2\n.text:000173a4\n.text:000173a6\n.text:000173a8\n.text:000173aa\n.text:000173ac\n.text:000173ae\n.text:000173b0\n.text:000173b2\n.text:000173b4\n.text:000173b6\n.text:000173b8\n.text:000173ba\n.text:000173bc\n.text:000173be\n.text:000173c0\n.text:000173c2\n.text:000173c4\n.text:000173c6\n.text:000173c8\n.text:000173ca\n.text:000173cc\n.text:000173ce\n.text:000173d0\n.text:000173d2\n.text:000173d4\n.text:000173d6\n.text:000173d8\n.text:000173da\n.text:000173dc\n.text:000173de\n.text:000173e0\n.text:000173e2\n.text:000173e4\n.text:000173e6\n.text:000173e8\n.text:000173ea\n.text:000173ec\n.text:000173ee\n.text:000173f0\n.text:000173f2\n.text:000173f4\n.text:000173f6\n.text:000173f8\n.text:000173fa\n.text:000173fc\n.text:000173fe\n.text:00017400\n.text:00017402\n.text:00017404\n.text:00017406\n.text:00017408\n.text:0001740a\n.text:0001740c\n.text:0001740e\n.text:00017410\n.text:00017412\n.text:00017414\n.text:00017416\n.text:00017418\n.text:0001741a\n.text:0001741c\n.text:0001741e\n.text:00017422\n.text:00017424\n.text:00017426\n.text:00017428\n.text:0001742a\n.text:0001742c\n.text:0001742e\n.text:00017430\n.text:00017432\n.text:00017434\n.text:00017436\n.text:00017438\n.text:0001743a\n.text:0001743c\n.text:0001743e\n.text:00017440\n.text:00017442\n.text:00017444\n.text:00017446\n.text:00017448\n.text:0001744a\n.text:0001744c\n.text:0001744e\n.text:00017450\n.text:00017452\n.text:00017454\n.text:00017456\n.text:00017458\n.text:0001745a\n.text:0001745c\n.text:0001745e\n.text:00017460\n.text:00017462\n.text:00017464\n.text:00017466\n.text:00017468\n.text:0001746a\n.text:0001746c\n.text:0001746e\n.text:00017470\n.text:00017472\n.text:00017474\n.text:00017476\n.text:00017478\n.text:0001747a\n.text:0001747c\n.text:0001747e\n.text:00017480\n.text:00017482\n.text:00017484\n.text:00017486\n.text:00017488\n.text:0001748a\n.text:0001748c\n.text:0001748e\n.text:00017492\n.text:00017494\n.text:0001756e\n.text:00017570\n.text:00017572\n.text:00017574\n.text:00017576\n.text:00017578\n.text:0001757a\n.text:0001757c\n.text:00017590\n.text:00017592\n.text:00017594\n.text:00017596\n.text:00017598\n.text:0001759a\n.text:0001759c\n.text:0001759e\n.text:000175a0\n.text:000175a2\n.text:000175a4\n.text:000175a6\n.text:000175a8\n.text:000175aa\n.text:000175ac\n.text:000175ae\n.text:000175b0\n.text:000175b2\n.text:000175b4\n.text:000175b6\n.text:000175b8\n.text:000175ba\n.text:000175bc\n.text:000175be\n.text:000175c0\n.text:000175c2\n.text:000175c4\n.text:000175c6\n.text:000175c8\n.text:000175ca\n.text:000175cc\n.text:000175ce\n.text:000175d0\n.text:000175d2\n.text:000175d4\n.text:000175d6\n.text:000175d8\n.text:000175da\n.text:000175dc\n.text:000175de\n.text:000175e0\n.text:000175e2\n.text:000175e4\n.text:000175e6\n.text:000175e8\n.text:000175ea\n.text:000175ec\n.text:000175ee\n.text:000175f0\n.text:000175f2\n.text:000175f4\n.text:000175f6\n.text:000175f8\n.text:000175fa\n.text:000175fc\n.text:000175fe\n.text:00017602\n.text:00017604\n.text:00017606\n.text:00017608\n.text:0001760a\n.text:0001760c\n.text:0001760e\n.text:00017610\n.text:00017612\n.text:00017614\n.text:00017616\n.text:00017618\n.text:0001761a\n.text:0001761c\n.text:0001761e\n.text:00017620\n.text:00017622\n.text:00017624\n.text:00017626\n.text:00017628\n.text:0001762a\n.text:0001762c\n.text:0001762e\n.text:00017630\n.text:00017632\n.text:00017634\n.text:00017636\n.text:00017638\n.text:0001763a\n.text:0001763c\n.text:0001763e\n.text:00017640\n.text:00017642\n.text:00017644\n.text:00017646\n.text:00017648\n.text:0001764a\n.text:0001764c\n.text:0001764e\n.text:00017650\n.text:00017652\n.text:00017654\n.text:00017656\n.text:00017658\n.text:0001765a\n.text:0001765c\n.text:0001765e\n.text:00017660\n.text:00017662\n.text:00017664\n.text:00017666\n.text:00017668\n.text:0001766a\n.text:0001766c\n.text:0001766e\n.text:00017670\n.text:00017672\n.text:00017674\n.text:00017676\n.text:00017678\n.text:0001767a\n.text:0001767c\n.text:0001767e\n.text:00017680\n.text:00017682\n.text:00017684\n.text:00017686\n'
p118
tp119
sS'lame_get_useTemporal'
p120
(S'\n__stdcall lame_get_useTemporal()\n'
p121
V\u000aundefined4 lame_get_useTemporal(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xf4);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p122
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ee08\nmov r0,#0xf4\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p123
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 1b fb\n01 b4\n02 bc\n00 20\n00 29\n01 d0\nf4 20\n20 58\nd0 bd\n'
p124
S'.text:0002edee\n.text:0002edf0\n.text:0002edf2\n.text:0002edf4\n.text:0002edf6\n.text:0002edfa\n.text:0002edfc\n.text:0002edfe\n.text:0002ee00\n.text:0002ee02\n.text:0002ee04\n.text:0002ee06\n.text:0002ee08\n'
p125
tp126
sS'lame_stereo_mode_hist'
p127
(S'\n__stdcall lame_stereo_mode_hist()\n'
p128
V\u000avoid lame_stereo_mode_hist(int *piParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = DAT_00021a88;\u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_00021a84)) &&\u000a      (piVar2 = (int *)piParm1[0x48], piVar2 != (int *)0x0)) && (*piVar2 == DAT_00021a84)) {\u000a    iVar3 = 0;\u000a    do {\u000a      *(undefined4 *)(iParm2 + iVar3 * -4) = *(undefined4 *)((int)piVar2 + iVar3 * -4 + iVar1);\u000a      iVar3 = iVar3 + -1;\u000a    } while (iVar3 != -4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p129
S'push { r4, lr }\ncmp r0,#0x0\nbeq 0x00021a82\nldr r2,[r0,#0x0]\nldr r3,[0x00021a84]\ncmp r2,r3\nbne 0x00021a82\nmov r2,#0x9\nlsl r2,r2,#0x5\nldr r0,[r0,r2]\ncmp r0,#0x0\nbeq 0x00021a82\nldr r2,[r0,#0x0]\nldr r3,[0x00021a84]\ncmp r2,r3\nbne 0x00021a82\nldr r2,[0x00021a88]\nadd r0,r0,r2\nmov r2,#0x0\nlsl r3,r2,#0x2\nsub r4,r1,r3\nsub r3,r0,r3\nldr r3,[r3,#0x0]\nstr r3,[r4,#0x0]\nsub r2,#0x1\nmov r3,#0x3\nmvn r3,r3\ncmp r2,r3\nbne 0x00021a6e\npop { r4, pc }\n'
p130
S'10 b5\n00 28\n19 d0\n02 68\n0c 4b\n9a 42\n15 d1\n09 22\n52 01\n80 58\n00 28\n10 d0\n02 68\n08 4b\n9a 42\n0c d1\n07 4a\n80 18\n00 22\n93 00\ncc 1a\nc3 1a\n1b 68\n23 60\n01 3a\n03 23\ndb 43\n9a 42\nf5 d1\n10 bd\n'
p131
S'.text:00021a48\n.text:00021a4a\n.text:00021a4c\n.text:00021a4e\n.text:00021a50\n.text:00021a52\n.text:00021a54\n.text:00021a56\n.text:00021a58\n.text:00021a5a\n.text:00021a5c\n.text:00021a5e\n.text:00021a60\n.text:00021a62\n.text:00021a64\n.text:00021a66\n.text:00021a68\n.text:00021a6a\n.text:00021a6c\n.text:00021a6e\n.text:00021a70\n.text:00021a72\n.text:00021a74\n.text:00021a76\n.text:00021a78\n.text:00021a7a\n.text:00021a7c\n.text:00021a7e\n.text:00021a80\n.text:00021a82\n'
p132
tp133
sS'__unordsf2'
p134
(S'\n__stdcall __unordsf2()\n'
p135
V\u000avoid __unordsf2(void)\u000a\u000a{\u000a  (*(freegfc + DAT_00037dfc))();\u000a  return;\u000a}\u000a\u000a
p136
S'ldr r12,[0x37dfc]\nadd pc,r12,pc\n'
p137
S'00 c0 9f e5\n0f f0 8c e0\n'
p138
S'.text:00037df4\n.text:00037df8\n'
p139
tp140
sS'lame_encode_buffer_long'
p141
(S'\n__stdcall lame_encode_buffer_long(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p142
V\u000avoid lame_encode_buffer_long(void)\u000a\u000a{\u000a  lame_encode_buffer_template();\u000a  return;\u000a}\u000a\u000a
p143
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\nmov r4,#0x7f\nlsl r4,r4,#0x17\nmov r5,sp\nstr r4,[r5,#0x10]\nmov r4,#0x1\nstr r4,[r5,#0xc]\nmov r4,#0x2\nstr r4,[r5,#0x8]\nldr r4,[sp,#0x2c]\nstr r4,[r5,#0x4]\nldr r4,[sp,#0x28]\nstr r4,[r5,#0x0]\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p144
S'b0 b5\n02 af\n86 b0\n7f 24\ne4 05\n6d 46\n2c 61\n01 24\nec 60\n02 24\nac 60\n0b 9c\n6c 60\n0a 9c\n2c 60\nff f7 98 fd\n06 b0\nb0 bd\n'
p145
S'.text:000211de\n.text:000211e0\n.text:000211e2\n.text:000211e4\n.text:000211e6\n.text:000211e8\n.text:000211ea\n.text:000211ec\n.text:000211ee\n.text:000211f0\n.text:000211f2\n.text:000211f4\n.text:000211f6\n.text:000211f8\n.text:000211fa\n.text:000211fc\n.text:00021200\n.text:00021202\n'
p146
tp147
sS'lame_set_errorf'
p148
(S'\n__stdcall lame_set_errorf(lame_global_flags * gfp, anon_subr_void_char_ptr_va_list * func)\n'
p149
V\u000aint lame_set_errorf(lame_global_flags *gfp,void (*func)(char *,va_list))\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined uVar1;\u000a  undefined *puVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000acode_r0x0001e2e0:\u000a  uVar1 = SUB41(func,0);\u000a  unaff_r6[9] = uVar1;\u000a  if (in_stack_00000028[8] == 1) {\u000a    uVar1 = 1;\u000a  }\u000a  unaff_r6[10] = uVar1;\u000a  unaff_r6 = unaff_r6 + 0xb;\u000a  iVar6 = in_stack_00000028[4];\u000a  if (iVar6 != 0) {\u000a    if (in_stack_00000028[5] == 1) {\u000a      puVar12 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[3]);\u000a      *puVar12 = 0;\u000a      puVar12[1] = 0;\u000a      unaff_r6 = puVar12 + 2;\u000a    }\u000a    else {\u000a      puVar8 = (undefined *)in_stack_00000028[3];\u000a      iVar4 = iVar6;\u000a      puVar12 = unaff_r6;\u000a      do {\u000a        *puVar12 = *puVar8;\u000a        puVar12 = puVar12 + 1;\u000a        puVar8 = puVar8 + 1;\u000a        iVar4 = iVar4 + -1;\u000a      } while (iVar4 != 0);\u000a      unaff_r6[iVar6] = 0;\u000a      unaff_r6 = unaff_r6 + iVar6 + 1;\u000a    }\u000a  }\u000a  if (in_stack_00000028[8] != 1) {\u000a    iVar6 = in_stack_00000028[7];\u000a    if (iVar6 == 0) goto LAB_0001e09a;\u000a    puVar8 = (undefined *)in_stack_00000028[6];\u000a    iVar4 = iVar6;\u000a    puVar12 = unaff_r6;\u000a    do {\u000a      *puVar12 = *puVar8;\u000a      puVar12 = puVar12 + 1;\u000a      puVar8 = puVar8 + 1;\u000a      iVar4 = iVar4 + -1;\u000a      if (iVar4 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    unaff_r6 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[6],in_stack_00000028[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          in_stack_00000028 = (int *)*in_stack_00000028;\u000a          if (in_stack_00000028 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar6 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar9 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0\u000a                 )) {\u000a                do {\u000a                  unaff_r6[iVar6 + -1] = (char)uVar9;\u000a                  iVar6 = iVar6 + -1;\u000a                  uVar9 = uVar9 >> 8;\u000a                } while (0 < iVar6);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar9 = in_stack_00000028[1];\u000a          uVar11 = 0xff;\u000a          iVar6 = 4;\u000a          if ((uVar9 == DAT_0001e494) || (uVar3 = in_stack_00000030, uVar9 == DAT_0001e498)) break;\u000a          do {\u000a            uVar7 = uVar11 & 0x57000000;\u000a            uVar10 = in_stack_00000030;\u000a            if (uVar7 != (uVar11 & uVar9)) {\u000a              uVar10 = uVar11 & uVar9;\u000a            }\u000a            if (uVar7 == 0) {\u000a              uVar10 = uVar7;\u000a            }\u000a            uVar3 = uVar3 | uVar10;\u000a            iVar6 = iVar6 + -1;\u000a            uVar11 = uVar11 << 8;\u000a          } while (iVar6 != 0);\u000a          if (uVar3 == 0) {\u000a            uVar11 = sizeOfWxxxNode(in_stack_00000028);\u000a            iVar6 = 4;\u000a            if (10 < uVar11) {\u000a              do {\u000a                unaff_r6[iVar6 + -1] = (char)uVar9;\u000a                iVar6 = iVar6 + -1;\u000a                uVar9 = uVar9 >> 8;\u000a              } while (0 < iVar6);\u000a              uVar11 = uVar11 - 10;\u000a              iVar6 = 4;\u000a              do {\u000a                unaff_r6[iVar6 + 3] = (char)uVar11;\u000a                iVar6 = iVar6 + -1;\u000a                uVar11 = uVar11 >> 8;\u000a              } while (0 < iVar6);\u000a              unaff_r6[8] = 0;\u000a              unaff_r6[9] = 0;\u000a              puVar12 = unaff_r6 + 10;\u000a              if (in_stack_00000028[4] != 0) {\u000a                *(bool *)(unaff_r6 + 10) = in_stack_00000028[5] == 1;\u000a                puVar12 = unaff_r6 + 0xb;\u000a                if (in_stack_00000028[5] == 1) {\u000a                  puVar12 = (undefined *)\u000a                            writeUcs2s(puVar12,in_stack_00000028[3],in_stack_00000028[4]);\u000a                  *puVar12 = 0;\u000a                  puVar12[1] = 0;\u000a                  puVar12 = puVar12 + 2;\u000a                }\u000a                else {\u000a                  iVar6 = in_stack_00000028[4];\u000a                  if (iVar6 != 0) {\u000a                    puVar2 = (undefined *)in_stack_00000028[3];\u000a                    iVar4 = iVar6;\u000a                    puVar8 = puVar12;\u000a                    do {\u000a                      *puVar8 = *puVar2;\u000a                      puVar8 = puVar8 + 1;\u000a                      puVar2 = puVar2 + 1;\u000a                      iVar4 = iVar4 + -1;\u000a                    } while (iVar4 != 0);\u000a                    puVar12 = puVar12 + iVar6;\u000a                  }\u000a                  *puVar12 = 0;\u000a                  puVar12 = puVar12 + 1;\u000a                }\u000a              }\u000a              if (in_stack_00000028[8] == 1) {\u000a                unaff_r6 = (undefined *)\u000a                           writeLoBytes(puVar12,in_stack_00000028[6],in_stack_00000028[7]);\u000a              }\u000a              else {\u000a                iVar6 = in_stack_00000028[7];\u000a                unaff_r6 = puVar12;\u000a                if (iVar6 != 0) {\u000a                  puVar2 = (undefined *)in_stack_00000028[6];\u000a                  iVar4 = iVar6;\u000a                  puVar8 = puVar12;\u000a                  do {\u000a                    *puVar8 = *puVar2;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar2 = puVar2 + 1;\u000a                    iVar4 = iVar4 + -1;\u000a                  } while (iVar4 != 0);\u000a                  unaff_r6 = puVar12 + iVar6;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            iVar6 = in_stack_00000028[7];\u000a            iVar4 = in_stack_00000028[4];\u000a            if (in_stack_00000028[8] == 1) {\u000a              iVar5 = iVar4 * 2 + 0xd;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a              iVar6 = iVar6 << 1;\u000a            }\u000a            else {\u000a              iVar5 = iVar4 + 0xc;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a            }\u000a            iVar4 = 4;\u000a            if (10 < (uint)(iVar5 + iVar6)) goto LAB_0001e2be;\u000a          }\u000a        }\u000a        iVar6 = in_stack_00000028[4] * 2 + 0x10;\u000a        if (in_stack_00000028[5] != 1) {\u000a          iVar6 = in_stack_00000028[4] + 0xf;\u000a        }\u000a        iVar4 = 0;\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar4 = in_stack_00000028[8];\u000a        }\u000a        uVar11 = (in_stack_00000028[7] << iVar4) + iVar6;\u000a        iVar6 = 4;\u000a      } while (uVar11 < 0xb);\u000a      do {\u000a        unaff_r6[iVar6 + -1] = (char)uVar9;\u000a        iVar6 = iVar6 + -1;\u000a        uVar9 = uVar9 >> 8;\u000a      } while (0 < iVar6);\u000a      uVar11 = uVar11 - 10;\u000a      iVar6 = 4;\u000a      do {\u000a        unaff_r6[iVar6 + 3] = (char)uVar11;\u000a        iVar6 = iVar6 + -1;\u000a        uVar11 = uVar11 >> 8;\u000a      } while (0 < iVar6);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a      unaff_r6[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a      unaff_r6[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a      unaff_r6[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a      puVar12 = unaff_r6 + 0xe;\u000a      if (in_stack_00000028[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,in_stack_00000028[3],in_stack_00000028[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar6 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar6;\u000a      }\u000a      iVar6 = in_stack_00000028[4];\u000a      if (iVar6 != 0) {\u000a        puVar2 = (undefined *)in_stack_00000028[3];\u000a        iVar4 = iVar6;\u000a        puVar8 = puVar12;\u000a        do {\u000a          *puVar8 = *puVar2;\u000a          puVar8 = puVar8 + 1;\u000a          puVar2 = puVar2 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000a        puVar12 = puVar12 + iVar6;\u000a      }\u000a      *puVar12 = 0;\u000a      unaff_r6 = puVar12 + 1;\u000a      if (in_stack_00000028[8] == 1) break;\u000a      iVar6 = in_stack_00000028[7];\u000a      if (iVar6 != 0) {\u000a        puVar8 = (undefined *)in_stack_00000028[6];\u000a        iVar4 = iVar6;\u000a        puVar12 = unaff_r6;\u000a        do {\u000a          *puVar12 = *puVar8;\u000a          puVar12 = puVar12 + 1;\u000a          puVar8 = puVar8 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a        unaff_r6 = unaff_r6 + iVar6;\u000a      }\u000a    }\u000a  } while( true );\u000aLAB_0001e2be:\u000a  do {\u000a    func = (void (*)(char *,va_list))0x0;\u000a    unaff_r6[iVar4 + -1] = (char)uVar9;\u000a    iVar4 = iVar4 + -1;\u000a    uVar9 = uVar9 >> 8;\u000a  } while (0 < iVar4);\u000a  uVar9 = (iVar5 + iVar6) - 10;\u000a  iVar6 = 4;\u000a  do {\u000a    unaff_r6[iVar6 + 3] = (char)uVar9;\u000a    iVar6 = iVar6 + -1;\u000a    uVar9 = uVar9 >> 8;\u000a  } while (0 < iVar6);\u000a  unaff_r6[8] = 0;\u000a  goto code_r0x0001e2e0;\u000a}\u000a\u000a
p150
S'strb r1,[r6,#0x9]\nldr r5,[sp,#0x28]\nldr r0,[r5,#0x20]\ncmp r0,#0x1\nbne 0x0001e2ee\npush { r0 }\npop { r1 }\nstrb r1,[r6,#0xa]\nadd r6,#0xb\nldr r2,[r5,#0x10]\ncmp r2,#0x0\nbeq 0x0001e332\nldr r0,[r5,#0x14]\ncmp r0,#0x1\nbne 0x0001e312\nldr r1,[r5,#0xc]\npush { r6 }\npop { r0 }\nbl 0x0001e9e0\n'
p151
S'71 72\n0a 9d\n28 6a\n01 28\n01 d1\n01 b4\n02 bc\nb1 72\n0b 36\n2a 69\n00 2a\n1c d0\n68 69\n01 28\n09 d1\ne9 68\n40 b4\n01 bc\n00 f0 6c fb\n'
p152
S'.text:0001e2e0\n.text:0001e2e2\n.text:0001e2e4\n.text:0001e2e6\n.text:0001e2e8\n.text:0001e2ea\n.text:0001e2ec\n.text:0001e2ee\n.text:0001e2f0\n.text:0001e2f2\n.text:0001e2f4\n.text:0001e2f6\n.text:0001e2f8\n.text:0001e2fa\n.text:0001e2fc\n.text:0001e2fe\n.text:0001e300\n.text:0001e302\n.text:0001e304\n'
p153
tp154
sS'lame_get_VBR_quality'
p155
(S'\n__stdcall lame_get_VBR_quality(lame_global_flags * gfp)\n'
p156
V\u000afloat lame_get_VBR_quality(lame_global_flags *gfp)\u000a\u000a{\u000a  ushort uVar1;\u000a  ushort uVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  ushort uVar6;\u000a  int unaff_r4;\u000a  float in_s0;\u000a  int in_stack_00000008;\u000a  \u000a  iVar4 = gfp->class_id + 2;\u000a  iVar5 = 0;\u000a  do {\u000a    uVar1 = *(ushort *)(iVar4 + (uint)*(byte *)(unaff_r4 + iVar5) * 2);\u000a    uVar2 = 0x20;\u000a    if (0x1f < (uVar1 & 0xe0)) {\u000a      uVar2 = uVar1;\u000a    }\u000a    uVar1 = *(ushort *)(iVar4 + (uint)(byte)(&stack0x00000004)[iVar5] * 2);\u000a    uVar6 = 0x20;\u000a    if (0x1f < (uVar1 & 0xe0)) {\u000a      uVar6 = uVar1;\u000a    }\u000a    iVar5 = iVar5 + 1;\u000a    uVar3 = 0;\u000a  } while ((((uVar6 ^ uVar2) & 0xff) == 0) && (uVar3 = 1, iVar5 < 3));\u000a  if (**(int **)(DAT_0001e8f4 + 0x1e8d8) == in_stack_00000008) {\u000a    return in_s0;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail(uVar3);\u000a}\u000a\u000a
p157
S'ldr r0,[r0,#0x0]\nadd r1,r0,#0x2\nmov r2,#0x0\nldrb r0,[r4,r2]\nlsl r0,r0,#0x1\nldrsh r6,[r1,r0]\nmov r5,#0xe0\npush { r6 }\npop { r0 }\nand r0,r5\nmov r3,#0x20\ncmp r0,#0x20\npush { r3 }\npop { r0 }\nbcc 0x0001e8ae\npush { r6 }\npop { r0 }\nadd r6,sp,#0x4\nldrb r6,[r6,r2]\nlsl r6,r6,#0x1\n'
p158
S'00 68\n81 1c\n00 22\na0 5c\n40 00\n0e 5e\ne0 25\n40 b4\n01 bc\n28 40\n20 23\n20 28\n08 b4\n01 bc\n01 d3\n40 b4\n01 bc\n01 ae\nb6 5c\n76 00\n'
p159
S'.text:0001e88c\n.text:0001e88e\n.text:0001e890\n.text:0001e892\n.text:0001e894\n.text:0001e896\n.text:0001e898\n.text:0001e89a\n.text:0001e89c\n.text:0001e89e\n.text:0001e8a0\n.text:0001e8a2\n.text:0001e8a4\n.text:0001e8a6\n.text:0001e8a8\n.text:0001e8aa\n.text:0001e8ac\n.text:0001e8ae\n.text:0001e8b0\n.text:0001e8b2\n'
p160
tp161
sS'FUN_00017f58'
p162
(S'\n__stdcall FUN_00017f58(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19)\n'
p163
V\u000avoid FUN_00017f58(undefined4 param_1,int param_2,undefined4 param_3,int param_4)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  int *piVar8;\u000a  uint unaff_r5;\u000a  int unaff_r6;\u000a  int param_11;\u000a  uint *param_12;\u000a  uint param_13;\u000a  int param_14;\u000a  int param_15;\u000a  int param_16;\u000a  undefined4 param_17;\u000a  int param_18;\u000a  int *param_19;\u000a  \u000a  iVar1 = unaff_r6 + param_4 * DAT_00017f70;\u000a  iVar6 = *(int *)(iVar1 + DAT_00017f74);\u000a  iVar1 = *(int *)(iVar1 + DAT_00017f78);\u000a  iVar7 = 0xc;\u000a  do {\u000a    iVar2 = param_15 - (unaff_r5 & param_13);\u000a    iVar5 = iVar7;\u000a    if (iVar2 <= iVar7) {\u000a      iVar5 = iVar2;\u000a    }\u000a    iVar7 = iVar7 - iVar5;\u000a    iVar3 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a    *(byte *)(iVar3 + DAT_00017fc8) =\u000a         *(byte *)(iVar3 + DAT_00017fc8) | (byte)((iVar1 + iVar6 >> iVar7) << iVar2 - iVar5);\u000a    unaff_r5 = iVar5 + unaff_r5;\u000a    param_2 = *param_19;\u000a  } while (0 < iVar7);\u000a  *(uint *)(param_18 + param_2 * param_16 + DAT_00017ff0) = unaff_r5;\u000a  uVar4 = *(uint *)(param_18 + param_4 * DAT_00017ff4 + DAT_00017ff8);\u000a  iVar1 = 9;\u000a  do {\u000a    iVar7 = param_15 - (unaff_r5 & param_13);\u000a    iVar6 = iVar1;\u000a    if (iVar7 <= iVar1) {\u000a      iVar6 = iVar7;\u000a    }\u000a    iVar1 = iVar1 - iVar6;\u000a    iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a    *(byte *)(iVar5 + DAT_00018048) =\u000a         *(byte *)(iVar5 + DAT_00018048) |\u000a         (byte)((((int)(uVar4 + (uVar4 >> 0x1f)) >> 1) >> iVar1) << iVar7 - iVar6);\u000a    unaff_r5 = iVar6 + unaff_r5;\u000a    param_2 = *param_19;\u000a  } while (0 < iVar1);\u000a  *(uint *)(param_18 + param_2 * param_16 + DAT_0001806c) = unaff_r5;\u000a  iVar6 = *(int *)(param_18 + param_4 * DAT_00018070 + DAT_00018074);\u000a  iVar1 = param_15;\u000a  do {\u000a    iVar5 = param_15 - (unaff_r5 & param_13);\u000a    iVar7 = iVar1;\u000a    if (iVar5 <= iVar1) {\u000a      iVar7 = iVar5;\u000a    }\u000a    iVar1 = iVar1 - iVar7;\u000a    iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a    *(byte *)(iVar2 + DAT_00018498) =\u000a         *(byte *)(iVar2 + DAT_00018498) | (byte)((iVar6 >> iVar1) << iVar5 - iVar7);\u000a    unaff_r5 = iVar7 + unaff_r5;\u000a    param_2 = *param_19;\u000a  } while (0 < iVar1);\u000a  *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a  iVar1 = *(int *)(param_18 + param_4 * DAT_000184a0 + 0x13e0);\u000a  iVar6 = 9;\u000a  do {\u000a    param_17 = 8;\u000a    iVar5 = 8 - (unaff_r5 & param_13);\u000a    iVar7 = iVar6;\u000a    if (iVar5 <= iVar6) {\u000a      iVar7 = iVar5;\u000a    }\u000a    iVar6 = iVar6 - iVar7;\u000a    iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a    *(byte *)(iVar2 + DAT_00018498) =\u000a         *(byte *)(iVar2 + DAT_00018498) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a    iVar5 = DAT_0001849c;\u000a    unaff_r5 = iVar7 + unaff_r5;\u000a    param_2 = *param_19;\u000a  } while (0 < iVar6);\u000a  iVar1 = param_18 + param_2 * param_16;\u000a  *(uint *)(iVar1 + DAT_0001849c) = unaff_r5;\u000a  iVar6 = param_18 + param_4 * DAT_000184a0;\u000a  piVar8 = (int *)(iVar6 + DAT_000184a4);\u000a  param_12 = (uint *)(iVar1 + iVar5);\u000a  iVar1 = 1;\u000a  if (*(int *)(iVar6 + DAT_000184a4) == 0) {\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      iVar1 = iVar1 - iVar6;\u000a    } while (0 < iVar1);\u000a    *param_12 = unaff_r5;\u000a    iVar1 = param_18 + param_4 * DAT_00018820;\u000a    param_14 = *(int *)(iVar1 + DAT_00018824);\u000a    if (param_14 == 0xe) {\u000a      param_14 = 0x10;\u000a      *(undefined4 *)(iVar1 + DAT_00018824) = 0x10;\u000a      param_2 = *param_19;\u000a      unaff_r5 = *(uint *)(param_18 + param_2 * param_16 + DAT_00018828);\u000a    }\u000a    iVar1 = 5;\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_0001882c) =\u000a           *(byte *)(iVar5 + DAT_0001882c) | (byte)((param_14 >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a    iVar1 = param_18 + param_4 * DAT_00018820;\u000a    param_14 = *(int *)(iVar1 + DAT_00018830);\u000a    if (param_14 == 0xe) {\u000a      param_14 = 0x10;\u000a      *(undefined4 *)(iVar1 + DAT_00018830) = 0x10;\u000a      param_2 = *param_19;\u000a      unaff_r5 = *(uint *)(param_18 + param_2 * param_16 + DAT_00018828);\u000a    }\u000a    iVar1 = 5;\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_0001882c) =\u000a           *(byte *)(iVar5 + DAT_0001882c) | (byte)((param_14 >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a    iVar1 = param_18 + param_4 * DAT_00018820;\u000a    param_14 = *(int *)(iVar1 + DAT_00018834);\u000a    if (param_14 == 0xe) {\u000a      param_14 = 0x10;\u000a      *(undefined4 *)(iVar1 + DAT_00018834) = 0x10;\u000a      param_2 = *param_19;\u000a      unaff_r5 = *(uint *)(param_18 + param_2 * param_16 + DAT_00018828);\u000a    }\u000a    iVar1 = 5;\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_0001882c) =\u000a           *(byte *)(iVar5 + DAT_0001882c) | (byte)((param_14 >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a    iVar1 = *(int *)(param_18 + param_4 * DAT_00018820 + vbrpsy_mask_add);\u000a    iVar6 = 4;\u000a    do {\u000a      iVar5 = 8 - (unaff_r5 & param_13);\u000a      iVar7 = iVar6;\u000a      if (iVar5 <= iVar6) {\u000a        iVar7 = iVar5;\u000a      }\u000a      iVar6 = iVar6 - iVar7;\u000a      iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar2 + DAT_0001882c) =\u000a           *(byte *)(iVar2 + DAT_0001882c) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a      unaff_r5 = iVar7 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar6);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a    iVar1 = *(int *)(param_18 + param_4 * DAT_00018820 + DAT_0001883c);\u000a    iVar6 = 3;\u000a    do {\u000a      iVar5 = 8 - (unaff_r5 & param_13);\u000a      iVar7 = iVar6;\u000a      if (iVar5 <= iVar6) {\u000a        iVar7 = iVar5;\u000a      }\u000a      iVar6 = iVar6 - iVar7;\u000a      iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar2 + DAT_0001882c) =\u000a           *(byte *)(iVar2 + DAT_0001882c) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a      unaff_r5 = iVar7 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar6);\u000a  }\u000a  else {\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_00018498) =\u000a           *(byte *)(iVar5 + DAT_00018498) | (byte)((1U >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    iVar1 = *piVar8;\u000a    iVar6 = 2;\u000a    do {\u000a      iVar5 = 8 - (unaff_r5 & param_13);\u000a      iVar7 = iVar6;\u000a      if (iVar5 <= iVar6) {\u000a        iVar7 = iVar5;\u000a      }\u000a      iVar6 = iVar6 - iVar7;\u000a      iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar2 + DAT_00018498) =\u000a           *(byte *)(iVar2 + DAT_00018498) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a      unaff_r5 = iVar7 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar6);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    param_12 = *(uint **)(param_18 + param_4 * DAT_000184a0 + DAT_000184a8);\u000a    iVar1 = 1;\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_00018498) =\u000a           *(byte *)(iVar5 + DAT_00018498) | (byte)(((int)param_12 >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    iVar1 = param_18 + param_4 * DAT_000184a0;\u000a    param_14 = *(int *)(iVar1 + DAT_000184ac);\u000a    if (param_14 == 0xe) {\u000a      param_14 = 0x10;\u000a      *(undefined4 *)(iVar1 + DAT_000184ac) = 0x10;\u000a      param_2 = *param_19;\u000a      unaff_r5 = *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c);\u000a    }\u000a    iVar1 = 5;\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_00018498) =\u000a           *(byte *)(iVar5 + DAT_00018498) | (byte)((param_14 >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    iVar1 = param_18 + param_4 * DAT_000184a0;\u000a    param_14 = *(int *)(iVar1 + DAT_000184b0);\u000a    if (param_14 == 0xe) {\u000a      param_14 = 0x10;\u000a      *(undefined4 *)(iVar1 + DAT_000184b0) = 0x10;\u000a      param_2 = *param_19;\u000a      unaff_r5 = *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c);\u000a    }\u000a    iVar1 = 5;\u000a    do {\u000a      iVar7 = 8 - (unaff_r5 & param_13);\u000a      iVar6 = iVar1;\u000a      if (iVar7 <= iVar1) {\u000a        iVar6 = iVar7;\u000a      }\u000a      iVar1 = iVar1 - iVar6;\u000a      iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar5 + DAT_00018498) =\u000a           *(byte *)(iVar5 + DAT_00018498) | (byte)((param_14 >> iVar1) << iVar7 - iVar6);\u000a      unaff_r5 = iVar6 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar1);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    iVar1 = *(int *)(param_18 + param_4 * DAT_000184a0 + DAT_000184b4);\u000a    iVar6 = 3;\u000a    do {\u000a      iVar5 = 8 - (unaff_r5 & param_13);\u000a      iVar7 = iVar6;\u000a      if (iVar5 <= iVar6) {\u000a        iVar7 = iVar5;\u000a      }\u000a      iVar6 = iVar6 - iVar7;\u000a      iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar2 + DAT_00018498) =\u000a           *(byte *)(iVar2 + DAT_00018498) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a      unaff_r5 = iVar7 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar6);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    iVar1 = *(int *)(param_18 + param_4 * DAT_000184a0 + DAT_000184b8);\u000a    iVar6 = 3;\u000a    do {\u000a      iVar5 = 8 - (unaff_r5 & param_13);\u000a      iVar7 = iVar6;\u000a      if (iVar5 <= iVar6) {\u000a        iVar7 = iVar5;\u000a      }\u000a      iVar6 = iVar6 - iVar7;\u000a      iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar2 + DAT_00018498) =\u000a           *(byte *)(iVar2 + DAT_00018498) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a      unaff_r5 = iVar7 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar6);\u000a    *(uint *)(param_18 + param_2 * param_16 + DAT_0001849c) = unaff_r5;\u000a    iVar1 = *(int *)(param_18 + param_4 * DAT_000184a0 + 0x1400);\u000a    iVar6 = 3;\u000a    do {\u000a      iVar5 = 8 - (unaff_r5 & param_13);\u000a      iVar7 = iVar6;\u000a      if (iVar5 <= iVar6) {\u000a        iVar7 = iVar5;\u000a      }\u000a      iVar6 = iVar6 - iVar7;\u000a      iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a      *(byte *)(iVar2 + DAT_00018498) =\u000a           *(byte *)(iVar2 + DAT_00018498) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a      unaff_r5 = iVar7 + unaff_r5;\u000a      param_2 = *param_19;\u000a    } while (0 < iVar6);\u000a  }\u000a  *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a  iVar1 = *(int *)(param_18 + param_4 * DAT_00018820 + DAT_00018840);\u000a  iVar6 = 1;\u000a  do {\u000a    iVar5 = 8 - (unaff_r5 & param_13);\u000a    iVar7 = iVar6;\u000a    if (iVar5 <= iVar6) {\u000a      iVar7 = iVar5;\u000a    }\u000a    iVar6 = iVar6 - iVar7;\u000a    iVar2 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a    *(byte *)(iVar2 + DAT_0001882c) =\u000a         *(byte *)(iVar2 + DAT_0001882c) | (byte)((iVar1 >> iVar6) << iVar5 - iVar7);\u000a    unaff_r5 = iVar7 + unaff_r5;\u000a    param_2 = *param_19;\u000a  } while (0 < iVar6);\u000a  *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a  param_14 = *(int *)(param_18 + param_4 * DAT_00018820 + DAT_00018844);\u000a  iVar1 = 1;\u000a  do {\u000a    iVar7 = 8 - (unaff_r5 & param_13);\u000a    iVar6 = iVar1;\u000a    if (iVar7 <= iVar1) {\u000a      iVar6 = iVar7;\u000a    }\u000a    iVar1 = iVar1 - iVar6;\u000a    iVar5 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a    *(byte *)(iVar5 + DAT_0001882c) =\u000a         *(byte *)(iVar5 + DAT_0001882c) | (byte)((param_14 >> iVar1) << iVar7 - iVar6);\u000a    unaff_r5 = iVar6 + unaff_r5;\u000a    param_2 = *param_19;\u000a  } while (0 < iVar1);\u000a  *(uint *)(param_18 + param_2 * param_16 + DAT_00018828) = unaff_r5;\u000a  param_11 = param_4;\u000a  if (param_4 + 1 < *(int *)(param_18 + 0x48)) {\u000a    param_11 = param_4;\u000a    FUN_00017f58();\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  FUN_00019280();\u000a}\u000a\u000a
p164
S'str r3,[sp,#0x70]\nldr r0,[0x00017f70]\nmul r0,r3\nadd r0,r6,r0\nldr r2,[0x00017f74]\nldr r2,[r0,r2]\nldr r3,[0x00017f78]\nldr r0,[r0,r3]\nadd r0,r0,r2\nstr r0,[sp,#0x88]\nmov r4,#0xc\nb 0x00017f7c\npush { r5 }\npop { r0 }\npush { r5 }\npop { r3 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x80]\nsub r0,r2,r0\ncmp r4,r0\npush { r4 }\npop { r5 }\nblt 0x00017f98\npush { r0 }\npop { r5 }\nsub r0,r0,r5\nsub r4,r4,r5\nldr r2,[sp,#0x88]\nasr r2,r4\nlsl r2,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r3,#0x3\nadd r0,r0,r1\nldr r1,[0x00017fc8]\nldrb r6,[r0,r1]\norr r6,r2\nstrb r6,[r0,r1]\nadd r3,r5,r3\npush { r3 }\npop { r5 }\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r4,#0x0\nbgt 0x00017f7c\nb 0x00017fcc\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r3,[sp,#0x8c]\nadd r0,r3,r0\nldr r2,[0x00017ff0]\nstr r5,[r0,r2]\nldr r0,[0x00017ff4]\nldr r2,[sp,#0x70]\nmul r0,r2\nadd r0,r3,r0\nldr r2,[0x00017ff8]\nldr r0,[r0,r2]\nlsr r2,r0,#0x1f\nadd r0,r0,r2\nasr r0,r0,#0x1\nstr r0,[sp,#0x88]\nmov r4,#0x9\nb 0x00017ffc\npush { r5 }\npop { r0 }\npush { r5 }\npop { r3 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x80]\nsub r0,r2,r0\ncmp r4,r0\npush { r4 }\npop { r5 }\nblt 0x00018018\npush { r0 }\npop { r5 }\nsub r0,r0,r5\nsub r4,r4,r5\nldr r2,[sp,#0x88]\nasr r2,r4\nlsl r2,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r3,#0x3\nadd r0,r0,r1\nldr r1,[0x00018048]\nldrb r6,[r0,r1]\norr r6,r2\nstrb r6,[r0,r1]\nadd r3,r5,r3\npush { r3 }\npop { r5 }\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r4,#0x0\nbgt 0x00017ffc\nb 0x0001804c\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r3,[sp,#0x8c]\nadd r0,r3,r0\nldr r2,[0x0001806c]\nstr r5,[r0,r2]\nldr r0,[0x00018070]\nldr r2,[sp,#0x70]\nmul r0,r2\nadd r0,r3,r0\nldr r2,[0x00018074]\nldr r0,[r0,r2]\nstr r0,[sp,#0x88]\nldr r4,[sp,#0x80]\nb 0x00018078\npush { r5 }\npop { r0 }\npush { r5 }\npop { r3 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x80]\nsub r0,r2,r0\ncmp r4,r0\npush { r4 }\npop { r5 }\nblt 0x00018094\npush { r0 }\npop { r5 }\nsub r0,r0,r5\nsub r4,r4,r5\nldr r2,[sp,#0x88]\nasr r2,r4\nlsl r2,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r3,#0x3\nadd r0,r0,r1\nldr r1,[0x00018498]\nldrb r6,[r0,r1]\norr r6,r2\nstrb r6,[r0,r1]\nadd r3,r5,r3\npush { r3 }\npop { r5 }\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r4,#0x0\nbgt 0x00018078\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r3,[sp,#0x8c]\nadd r0,r3,r0\nldr r2,[0x0001849c]\nstr r5,[r0,r2]\nldr r0,[0x000184a0]\nldr r2,[sp,#0x70]\nmul r0,r2\nadd r0,r3,r0\nmov r2,#0x9f\nlsl r2,r2,#0x5\nldr r0,[r0,r2]\nstr r0,[sp,#0x7c]\nmov r4,#0x9\npush { r5 }\npop { r0 }\npush { r5 }\npop { r3 }\nldr r2,[sp,#0x78]\nand r0,r2\nmov r2,#0x8\nstr r2,[sp,#0x88]\nsub r0,r2,r0\ncmp r4,r0\npush { r4 }\npop { r5 }\nblt 0x000180fc\npush { r0 }\npop { r5 }\nsub r0,r0,r5\nsub r4,r4,r5\nldr r2,[sp,#0x7c]\nasr r2,r4\nlsl r2,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r3,#0x3\nadd r0,r0,r1\nldr r1,[0x00018498]\nldrb r6,[r0,r1]\norr r6,r2\nstrb r6,[r0,r1]\nadd r3,r5,r3\npush { r3 }\npop { r5 }\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r4,#0x0\nbgt 0x000180de\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r6,[sp,#0x8c]\nadd r0,r6,r0\nldr r2,[0x0001849c]\nstr r5,[r0,r2]\nstr r5,[sp,#0x7c]\nldr r3,[0x000184a0]\nldr r5,[sp,#0x70]\nmul r3,r5\nadd r3,r6,r3\nldr r5,[0x000184a4]\nadd r4,r3,r5\nstr r4,[sp,#0x74]\nadd r2,r0,r2\nldr r0,[r3,r5]\nmov r5,#0x1\ncmp r0,#0x0\nbne 0x00018150\nb 0x000184bc\nldr r4,[sp,#0x7c]\npush { r4 }\npop { r0 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x88]\nsub r0,r2,r0\ncmp r5,r0\npush { r5 }\npop { r3 }\nblt 0x0001816a\npush { r0 }\npop { r3 }\nsub r0,r0,r3\nsub r5,r5,r3\nmov r2,#0x1\nstr r2,[sp,#0x7c]\nlsr r2,r5\nlsl r2,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r4,#0x3\nadd r0,r0,r1\nldr r1,[0x00018498]\nldrb r6,[r0,r1]\norr r6,r2\nstrb r6,[r0,r1]\nadd r4,r3,r4\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r5,#0x0\nbgt 0x00018152\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r2,[sp,#0x8c]\nadd r0,r2,r0\nldr r2,[0x0001849c]\nstr r4,[r0,r2]\nldr r0,[sp,#0x74]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x74]\nmov r5,#0x2\npush { r4 }\npop { r0 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x88]\nsub r0,r2,r0\ncmp r5,r0\npush { r5 }\npop { r3 }\nblt 0x000181c0\npush { r0 }\npop { r3 }\nsub r0,r0,r3\nsub r5,r5,r3\nldr r2,[sp,#0x74]\nasr r2,r5\nlsl r2,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r4,#0x3\nadd r0,r0,r1\nldr r1,[0x00018498]\nldrb r6,[r0,r1]\norr r6,r2\nstrb r6,[r0,r1]\nadd r4,r3,r4\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r5,#0x0\nbgt 0x000181a8\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r3,[sp,#0x8c]\nadd r0,r3,r0\nldr r2,[0x0001849c]\nstr r4,[r0,r2]\nldr r0,[0x000184a0]\nldr r2,[sp,#0x70]\nmul r0,r2\nadd r0,r3,r0\nldr r2,[0x000184a8]\nldr r0,[r0,r2]\nstr r0,[sp,#0x74]\npush { r4 }\npop { r5 }\nldr r3,[sp,#0x7c]\npush { r5 }\npop { r0 }\npush { r5 }\npop { r4 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x88]\nsub r5,r2,r0\ncmp r3,r5\npush { r3 }\npop { r0 }\nblt 0x00018224\npush { r5 }\npop { r0 }\nsub r2,r5,r0\nsub r3,r3,r0\nldr r5,[sp,#0x74]\nasr r5,r3\nlsl r5,r2\nldr r2,[sp,#0x84]\nmul r1,r2\nldr r2,[sp,#0x8c]\nadd r1,r2,r1\nasr r2,r4,#0x3\nadd r1,r1,r2\nldr r2,[0x00018498]\nldrb r6,[r1,r2]\norr r6,r5\npush { r4 }\npop { r5 }\nstrb r6,[r1,r2]\nadd r5,r0,r5\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r3,#0x0\nbgt 0x00018208\nldr r4,[sp,#0x84]\npush { r4 }\npop { r0 }\nmul r0,r1\npush { r5 }\npop { r3 }\nldr r5,[sp,#0x8c]\nadd r0,r5,r0\nldr r2,[0x0001849c]\nstr r3,[r0,r2]\npush { r3 }\npop { r6 }\nldr r0,[0x000184a0]\nldr r2,[sp,#0x70]\nmul r0,r2\nadd r2,r5,r0\nldr r3,[0x000184ac]\nadd r0,r2,r3\nldr r2,[r2,r3]\nstr r2,[sp,#0x7c]\ncmp r2,#0xe\nbne 0x00018292\nmov r1,#0x10\nstr r1,[sp,#0x7c]\nstr r1,[r0,#0x0]\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\npush { r4 }\npop { r0 }\nmul r0,r1\nadd r0,r5,r0\nldr r2,[0x0001849c]\nldr r6,[r0,r2]\nmov r3,#0x5\npush { r6 }\npop { r4 }\npush { r4 }\npop { r0 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x88]\nsub r5,r2,r0\ncmp r3,r5\npush { r3 }\npop { r0 }\nblt 0x000182b0\npush { r5 }\npop { r0 }\nsub r2,r5,r0\nsub r3,r3,r0\nldr r5,[sp,#0x7c]\nasr r5,r3\nlsl r5,r2\nldr r2,[sp,#0x84]\nmul r1,r2\nldr r2,[sp,#0x8c]\nadd r1,r2,r1\nasr r2,r4,#0x3\nadd r1,r1,r2\nldr r2,[0x00018498]\nldrb r6,[r1,r2]\norr r6,r5\nstrb r6,[r1,r2]\nadd r4,r0,r4\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r3,#0x0\nbgt 0x00018298\npush { r4 }\npop { r3 }\nldr r5,[sp,#0x84]\npush { r5 }\npop { r0 }\nmul r0,r1\nldr r4,[sp,#0x8c]\nadd r0,r4,r0\nldr r2,[0x0001849c]\nstr r3,[r0,r2]\npush { r3 }\npop { r6 }\nldr r0,[0x000184a0]\nldr r2,[sp,#0x70]\nmul r0,r2\nadd r2,r4,r0\nldr r3,[0x000184b0]\nadd r0,r2,r3\nldr r2,[r2,r3]\nstr r2,[sp,#0x7c]\ncmp r2,#0xe\nbne 0x0001831a\nmov r1,#0x10\nstr r1,[sp,#0x7c]\nstr r1,[r0,#0x0]\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\npush { r5 }\npop { r0 }\nmul r0,r1\nadd r0,r4,r0\nldr r2,[0x0001849c]\nldr r6,[r0,r2]\nmov r3,#0x5\npush { r6 }\npop { r5 }\n'
p165
S'1c 93\n05 48\n58 43\n30 18\n04 4a\n82 58\n04 4b\nc0 58\n80 18\n22 90\n0c 24\n05 e0\n20 b4\n01 bc\n20 b4\n08 bc\n1e 9a\n10 40\n20 9a\n10 1a\n84 42\n10 b4\n20 bc\n01 db\n01 b4\n20 bc\n40 1b\n64 1b\n22 9a\n22 41\n82 40\n21 98\n41 43\n23 98\n40 18\nd9 10\n40 18\n06 49\n46 5c\n16 43\n46 54\neb 18\n08 b4\n20 bc\n24 98\n01 68\n00 2c\ndb dc\n02 e0\n21 98\n48 43\n23 9b\n18 18\n06 4a\n85 50\n06 48\n1c 9a\n50 43\n18 18\n05 4a\n80 58\nc2 0f\n80 18\n40 10\n22 90\n09 24\n05 e0\n20 b4\n01 bc\n20 b4\n08 bc\n1e 9a\n10 40\n20 9a\n10 1a\n84 42\n10 b4\n20 bc\n01 db\n01 b4\n20 bc\n40 1b\n64 1b\n22 9a\n22 41\n82 40\n21 98\n41 43\n23 98\n40 18\nd9 10\n40 18\n06 49\n46 5c\n16 43\n46 54\neb 18\n08 b4\n20 bc\n24 98\n01 68\n00 2c\ndb dc\n02 e0\n21 98\n48 43\n23 9b\n18 18\n05 4a\n85 50\n05 48\n1c 9a\n50 43\n18 18\n04 4a\n80 58\n22 90\n20 9c\n06 e0\n20 b4\n01 bc\n20 b4\n08 bc\n1e 9a\n10 40\n20 9a\n10 1a\n84 42\n10 b4\n20 bc\n01 db\n01 b4\n20 bc\n40 1b\n64 1b\n22 9a\n22 41\n82 40\n21 98\n41 43\n23 98\n40 18\nd9 10\n40 18\nfb 49\n46 5c\n16 43\n46 54\neb 18\n08 b4\n20 bc\n24 98\n01 68\n00 2c\ndb dc\n21 98\n48 43\n23 9b\n18 18\nf4 4a\n85 50\nf4 48\n1c 9a\n50 43\n18 18\n9f 22\n52 01\n80 58\n1f 90\n09 24\n20 b4\n01 bc\n20 b4\n08 bc\n1e 9a\n10 40\n08 22\n22 92\n10 1a\n84 42\n10 b4\n20 bc\n01 db\n01 b4\n20 bc\n40 1b\n64 1b\n1f 9a\n22 41\n82 40\n21 98\n41 43\n23 98\n40 18\nd9 10\n40 18\ne1 49\n46 5c\n16 43\n46 54\neb 18\n08 b4\n20 bc\n24 98\n01 68\n00 2c\nda dc\n21 98\n48 43\n23 9e\n30 18\nda 4a\n85 50\n1f 95\nda 4b\n1c 9d\n6b 43\nf3 18\nd9 4d\n5c 19\n1d 94\n82 18\n58 59\n01 25\n00 28\n00 d1\nb5 e1\n1f 9c\n10 b4\n01 bc\n1e 9a\n10 40\n22 9a\n10 1a\n85 42\n20 b4\n08 bc\n01 db\n01 b4\n08 bc\nc0 1a\ned 1a\n01 22\n1f 92\nea 40\n82 40\n21 98\n41 43\n23 98\n40 18\ne1 10\n40 18\nc5 49\n46 5c\n16 43\n46 54\n1c 19\n24 98\n01 68\n00 2d\nde dc\n21 98\n48 43\n23 9a\n10 18\nbf 4a\n84 50\n1d 98\n00 68\n1d 90\n02 25\n10 b4\n01 bc\n1e 9a\n10 40\n22 9a\n10 1a\n85 42\n20 b4\n08 bc\n01 db\n01 b4\n08 bc\nc0 1a\ned 1a\n1d 9a\n2a 41\n82 40\n21 98\n41 43\n23 98\n40 18\ne1 10\n40 18\nb0 49\n46 5c\n16 43\n46 54\n1c 19\n24 98\n01 68\n00 2d\ndf dc\n21 98\n48 43\n23 9b\n18 18\naa 4a\n84 50\naa 48\n1c 9a\n50 43\n18 18\naa 4a\n80 58\n1d 90\n10 b4\n20 bc\n1f 9b\n20 b4\n01 bc\n20 b4\n10 bc\n1e 9a\n10 40\n22 9a\n15 1a\nab 42\n08 b4\n01 bc\n01 db\n20 b4\n01 bc\n2a 1a\n1b 1a\n1d 9d\n1d 41\n95 40\n21 9a\n51 43\n23 9a\n51 18\ne2 10\n89 18\n97 4a\n8e 5c\n2e 43\n10 b4\n20 bc\n8e 54\n45 19\n24 98\n01 68\n00 2b\ndb dc\n21 9c\n10 b4\n01 bc\n48 43\n20 b4\n08 bc\n23 9d\n28 18\n8e 4a\n83 50\n08 b4\n40 bc\n8d 48\n1c 9a\n50 43\n2a 18\n8e 4b\nd0 18\nd2 58\n1f 92\n0e 2a\n0a d1\n10 21\n1f 91\n01 60\n24 98\n01 68\n10 b4\n01 bc\n48 43\n28 18\n83 4a\n86 58\n05 23\n40 b4\n10 bc\n10 b4\n01 bc\n1e 9a\n10 40\n22 9a\n15 1a\nab 42\n08 b4\n01 bc\n01 db\n20 b4\n01 bc\n2a 1a\n1b 1a\n1f 9d\n1d 41\n95 40\n21 9a\n51 43\n23 9a\n51 18\ne2 10\n89 18\n74 4a\n8e 5c\n2e 43\n8e 54\n04 19\n24 98\n01 68\n00 2b\ndf dc\n10 b4\n08 bc\n21 9d\n20 b4\n01 bc\n48 43\n23 9c\n20 18\n6c 4a\n83 50\n08 b4\n40 bc\n6b 48\n1c 9a\n50 43\n22 18\n6d 4b\nd0 18\nd2 58\n1f 92\n0e 2a\n0a d1\n10 21\n1f 91\n01 60\n24 98\n01 68\n20 b4\n01 bc\n48 43\n20 18\n61 4a\n86 58\n05 23\n40 b4\n20 bc\n'
p166
S'.text:00017f58\n.text:00017f5a\n.text:00017f5c\n.text:00017f5e\n.text:00017f60\n.text:00017f62\n.text:00017f64\n.text:00017f66\n.text:00017f68\n.text:00017f6a\n.text:00017f6c\n.text:00017f6e\n.text:00017f7c\n.text:00017f7e\n.text:00017f80\n.text:00017f82\n.text:00017f84\n.text:00017f86\n.text:00017f88\n.text:00017f8a\n.text:00017f8c\n.text:00017f8e\n.text:00017f90\n.text:00017f92\n.text:00017f94\n.text:00017f96\n.text:00017f98\n.text:00017f9a\n.text:00017f9c\n.text:00017f9e\n.text:00017fa0\n.text:00017fa2\n.text:00017fa4\n.text:00017fa6\n.text:00017fa8\n.text:00017faa\n.text:00017fac\n.text:00017fae\n.text:00017fb0\n.text:00017fb2\n.text:00017fb4\n.text:00017fb6\n.text:00017fb8\n.text:00017fba\n.text:00017fbc\n.text:00017fbe\n.text:00017fc0\n.text:00017fc2\n.text:00017fc4\n.text:00017fcc\n.text:00017fce\n.text:00017fd0\n.text:00017fd2\n.text:00017fd4\n.text:00017fd6\n.text:00017fd8\n.text:00017fda\n.text:00017fdc\n.text:00017fde\n.text:00017fe0\n.text:00017fe2\n.text:00017fe4\n.text:00017fe6\n.text:00017fe8\n.text:00017fea\n.text:00017fec\n.text:00017fee\n.text:00017ffc\n.text:00017ffe\n.text:00018000\n.text:00018002\n.text:00018004\n.text:00018006\n.text:00018008\n.text:0001800a\n.text:0001800c\n.text:0001800e\n.text:00018010\n.text:00018012\n.text:00018014\n.text:00018016\n.text:00018018\n.text:0001801a\n.text:0001801c\n.text:0001801e\n.text:00018020\n.text:00018022\n.text:00018024\n.text:00018026\n.text:00018028\n.text:0001802a\n.text:0001802c\n.text:0001802e\n.text:00018030\n.text:00018032\n.text:00018034\n.text:00018036\n.text:00018038\n.text:0001803a\n.text:0001803c\n.text:0001803e\n.text:00018040\n.text:00018042\n.text:00018044\n.text:0001804c\n.text:0001804e\n.text:00018050\n.text:00018052\n.text:00018054\n.text:00018056\n.text:00018058\n.text:0001805a\n.text:0001805c\n.text:0001805e\n.text:00018060\n.text:00018062\n.text:00018064\n.text:00018066\n.text:00018068\n.text:00018078\n.text:0001807a\n.text:0001807c\n.text:0001807e\n.text:00018080\n.text:00018082\n.text:00018084\n.text:00018086\n.text:00018088\n.text:0001808a\n.text:0001808c\n.text:0001808e\n.text:00018090\n.text:00018092\n.text:00018094\n.text:00018096\n.text:00018098\n.text:0001809a\n.text:0001809c\n.text:0001809e\n.text:000180a0\n.text:000180a2\n.text:000180a4\n.text:000180a6\n.text:000180a8\n.text:000180aa\n.text:000180ac\n.text:000180ae\n.text:000180b0\n.text:000180b2\n.text:000180b4\n.text:000180b6\n.text:000180b8\n.text:000180ba\n.text:000180bc\n.text:000180be\n.text:000180c0\n.text:000180c2\n.text:000180c4\n.text:000180c6\n.text:000180c8\n.text:000180ca\n.text:000180cc\n.text:000180ce\n.text:000180d0\n.text:000180d2\n.text:000180d4\n.text:000180d6\n.text:000180d8\n.text:000180da\n.text:000180dc\n.text:000180de\n.text:000180e0\n.text:000180e2\n.text:000180e4\n.text:000180e6\n.text:000180e8\n.text:000180ea\n.text:000180ec\n.text:000180ee\n.text:000180f0\n.text:000180f2\n.text:000180f4\n.text:000180f6\n.text:000180f8\n.text:000180fa\n.text:000180fc\n.text:000180fe\n.text:00018100\n.text:00018102\n.text:00018104\n.text:00018106\n.text:00018108\n.text:0001810a\n.text:0001810c\n.text:0001810e\n.text:00018110\n.text:00018112\n.text:00018114\n.text:00018116\n.text:00018118\n.text:0001811a\n.text:0001811c\n.text:0001811e\n.text:00018120\n.text:00018122\n.text:00018124\n.text:00018126\n.text:00018128\n.text:0001812a\n.text:0001812c\n.text:0001812e\n.text:00018130\n.text:00018132\n.text:00018134\n.text:00018136\n.text:00018138\n.text:0001813a\n.text:0001813c\n.text:0001813e\n.text:00018140\n.text:00018142\n.text:00018144\n.text:00018146\n.text:00018148\n.text:0001814a\n.text:0001814c\n.text:0001814e\n.text:00018150\n.text:00018152\n.text:00018154\n.text:00018156\n.text:00018158\n.text:0001815a\n.text:0001815c\n.text:0001815e\n.text:00018160\n.text:00018162\n.text:00018164\n.text:00018166\n.text:00018168\n.text:0001816a\n.text:0001816c\n.text:0001816e\n.text:00018170\n.text:00018172\n.text:00018174\n.text:00018176\n.text:00018178\n.text:0001817a\n.text:0001817c\n.text:0001817e\n.text:00018180\n.text:00018182\n.text:00018184\n.text:00018186\n.text:00018188\n.text:0001818a\n.text:0001818c\n.text:0001818e\n.text:00018190\n.text:00018192\n.text:00018194\n.text:00018196\n.text:00018198\n.text:0001819a\n.text:0001819c\n.text:0001819e\n.text:000181a0\n.text:000181a2\n.text:000181a4\n.text:000181a6\n.text:000181a8\n.text:000181aa\n.text:000181ac\n.text:000181ae\n.text:000181b0\n.text:000181b2\n.text:000181b4\n.text:000181b6\n.text:000181b8\n.text:000181ba\n.text:000181bc\n.text:000181be\n.text:000181c0\n.text:000181c2\n.text:000181c4\n.text:000181c6\n.text:000181c8\n.text:000181ca\n.text:000181cc\n.text:000181ce\n.text:000181d0\n.text:000181d2\n.text:000181d4\n.text:000181d6\n.text:000181d8\n.text:000181da\n.text:000181dc\n.text:000181de\n.text:000181e0\n.text:000181e2\n.text:000181e4\n.text:000181e6\n.text:000181e8\n.text:000181ea\n.text:000181ec\n.text:000181ee\n.text:000181f0\n.text:000181f2\n.text:000181f4\n.text:000181f6\n.text:000181f8\n.text:000181fa\n.text:000181fc\n.text:000181fe\n.text:00018200\n.text:00018202\n.text:00018204\n.text:00018206\n.text:00018208\n.text:0001820a\n.text:0001820c\n.text:0001820e\n.text:00018210\n.text:00018212\n.text:00018214\n.text:00018216\n.text:00018218\n.text:0001821a\n.text:0001821c\n.text:0001821e\n.text:00018220\n.text:00018222\n.text:00018224\n.text:00018226\n.text:00018228\n.text:0001822a\n.text:0001822c\n.text:0001822e\n.text:00018230\n.text:00018232\n.text:00018234\n.text:00018236\n.text:00018238\n.text:0001823a\n.text:0001823c\n.text:0001823e\n.text:00018240\n.text:00018242\n.text:00018244\n.text:00018246\n.text:00018248\n.text:0001824a\n.text:0001824c\n.text:0001824e\n.text:00018250\n.text:00018252\n.text:00018254\n.text:00018256\n.text:00018258\n.text:0001825a\n.text:0001825c\n.text:0001825e\n.text:00018260\n.text:00018262\n.text:00018264\n.text:00018266\n.text:00018268\n.text:0001826a\n.text:0001826c\n.text:0001826e\n.text:00018270\n.text:00018272\n.text:00018274\n.text:00018276\n.text:00018278\n.text:0001827a\n.text:0001827c\n.text:0001827e\n.text:00018280\n.text:00018282\n.text:00018284\n.text:00018286\n.text:00018288\n.text:0001828a\n.text:0001828c\n.text:0001828e\n.text:00018290\n.text:00018292\n.text:00018294\n.text:00018296\n.text:00018298\n.text:0001829a\n.text:0001829c\n.text:0001829e\n.text:000182a0\n.text:000182a2\n.text:000182a4\n.text:000182a6\n.text:000182a8\n.text:000182aa\n.text:000182ac\n.text:000182ae\n.text:000182b0\n.text:000182b2\n.text:000182b4\n.text:000182b6\n.text:000182b8\n.text:000182ba\n.text:000182bc\n.text:000182be\n.text:000182c0\n.text:000182c2\n.text:000182c4\n.text:000182c6\n.text:000182c8\n.text:000182ca\n.text:000182cc\n.text:000182ce\n.text:000182d0\n.text:000182d2\n.text:000182d4\n.text:000182d6\n.text:000182d8\n.text:000182da\n.text:000182dc\n.text:000182de\n.text:000182e0\n.text:000182e2\n.text:000182e4\n.text:000182e6\n.text:000182e8\n.text:000182ea\n.text:000182ec\n.text:000182ee\n.text:000182f0\n.text:000182f2\n.text:000182f4\n.text:000182f6\n.text:000182f8\n.text:000182fa\n.text:000182fc\n.text:000182fe\n.text:00018300\n.text:00018302\n.text:00018304\n.text:00018306\n.text:00018308\n.text:0001830a\n.text:0001830c\n.text:0001830e\n.text:00018310\n.text:00018312\n.text:00018314\n.text:00018316\n.text:00018318\n.text:0001831a\n.text:0001831c\n.text:0001831e\n'
p167
tp168
sS'lame_set_nogap_currentindex'
p169
(S'\n__stdcall lame_set_nogap_currentindex(lame_global_flags * gfp, int the_nogap_index)\n'
p170
V\u000aint lame_set_nogap_currentindex(lame_global_flags *gfp,int the_nogap_index)\u000a\u000a{\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  lame_global_flags *plVar8;\u000a  uint uVar9;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar10;\u000a  int *unaff_r5;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    if (unaff_r5[8] == 1) {\u000a      gfp_00 = (lame_global_flags *)writeLoBytes(gfp,unaff_r5[6],unaff_r5[7]);\u000a    }\u000a    else {\u000a      iVar2 = unaff_r5[7];\u000a      gfp_00 = gfp;\u000a      if (iVar2 != 0) {\u000a        puVar12 = (undefined *)unaff_r5[6];\u000a        iVar4 = iVar2;\u000a        gfp_00 = gfp;\u000a        do {\u000a          *(undefined *)&gfp_00->class_id = *puVar12;\u000a          gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + 1);\u000a          puVar12 = puVar12 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000a        gfp_00 = (lame_global_flags *)((int)&gfp->class_id + iVar2);\u000a        unaff_r5 = in_stack_00000028;\u000a      }\u000a    }\u000aLAB_0001e09a:\u000a    do {\u000a      while( true ) {\u000a        unaff_r5 = (int *)*unaff_r5;\u000a        if (unaff_r5 == (int *)0x0) {\u000a          if (__s != (char *)0x0) {\u000a            iVar2 = 4;\u000a            if ((*in_stack_00000004 != 0) &&\u000a               (uVar9 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0))\u000a            {\u000a              do {\u000a                *(undefined *)((int)&gfp_00->attackthre_s + iVar2 + 3) = (char)uVar9;\u000a                iVar2 = iVar2 + -1;\u000a                uVar9 = uVar9 >> 8;\u000a              } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a              strlen(__s);\u000a            }\u000a          }\u000a          __aeabi_memclr(gfp_00,(in_stack_0000002c + in_stack_00000018) - (int)gfp_00);\u000a          if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a            return in_stack_0000002c;\u000a          }\u000a                    /* WARNING: Subroutine does not return */\u000a          __stack_chk_fail();\u000a        }\u000a        uVar9 = unaff_r5[1];\u000a        uVar11 = 0xff;\u000a        iVar2 = 4;\u000a        if ((uVar9 != DAT_0001e494) && (uVar3 = in_stack_00000030, uVar9 != DAT_0001e498)) break;\u000a        iVar2 = unaff_r5[4] * 2 + 0x10;\u000a        if (unaff_r5[5] != 1) {\u000a          iVar2 = unaff_r5[4] + 0xf;\u000a        }\u000a        iVar4 = 0;\u000a        if (unaff_r5[8] == 1) {\u000a          iVar4 = unaff_r5[8];\u000a        }\u000a        uVar11 = (unaff_r5[7] << iVar4) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar11) {\u000a          do {\u000a            *(undefined *)((int)&gfp_00->attackthre_s + iVar2 + 3) = (char)uVar9;\u000a            iVar2 = iVar2 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar11 = uVar11 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            *(undefined *)((int)&gfp_00->class_id + iVar2 + 3) = (char)uVar11;\u000a            iVar2 = iVar2 + -1;\u000a            uVar11 = uVar11 >> 8;\u000a          } while (0 < iVar2);\u000a          *(undefined *)&gfp_00->num_channels = 0;\u000a          *(undefined *)((int)&gfp_00->num_channels + 1) = 0;\u000a          *(bool *)((int)&gfp_00->num_channels + 2) = unaff_r5[8] == 1;\u000a          *(undefined *)((int)&gfp_00->num_channels + 3) = *(undefined *)(unaff_r5 + 2);\u000a          *(undefined *)&gfp_00->samplerate_in = *(undefined *)((int)unaff_r5 + 9);\u000a          *(undefined *)((int)&gfp_00->samplerate_in + 1) = *(undefined *)((int)unaff_r5 + 10);\u000a          puVar12 = (undefined *)((int)&gfp_00->samplerate_in + 2);\u000a          if (unaff_r5[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,unaff_r5[3],unaff_r5[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = unaff_r5[4];\u000a          if (iVar2 != 0) {\u000a            puVar1 = (undefined *)unaff_r5[3];\u000a            iVar4 = iVar2;\u000a            puVar7 = puVar12;\u000a            do {\u000a              *puVar7 = *puVar1;\u000a              puVar7 = puVar7 + 1;\u000a              puVar1 = puVar1 + 1;\u000a              iVar4 = iVar4 + -1;\u000a            } while (iVar4 != 0);\u000a            puVar12 = puVar12 + iVar2;\u000a          }\u000a          *puVar12 = 0;\u000a          gfp_00 = (lame_global_flags *)(puVar12 + 1);\u000a          if (unaff_r5[8] == 1) {\u000aLAB_0001e338:\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(gfp_00,unaff_r5[6],unaff_r5[7]);\u000a          }\u000a          else {\u000a            iVar2 = unaff_r5[7];\u000a            if (iVar2 != 0) {\u000a              puVar12 = (undefined *)unaff_r5[6];\u000a              iVar4 = iVar2;\u000a              plVar8 = gfp_00;\u000a              do {\u000a                *(undefined *)&plVar8->class_id = *puVar12;\u000a                plVar8 = (lame_global_flags *)((int)&plVar8->class_id + 1);\u000a                puVar12 = puVar12 + 1;\u000a                iVar4 = iVar4 + -1;\u000a              } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a              gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + iVar2);\u000a            }\u000a          }\u000a        }\u000a      }\u000a      do {\u000a        uVar6 = uVar11 & 0x57000000;\u000a        uVar10 = in_stack_00000030;\u000a        if (uVar6 != (uVar11 & uVar9)) {\u000a          uVar10 = uVar11 & uVar9;\u000a        }\u000a        if (uVar6 == 0) {\u000a          uVar10 = uVar6;\u000a        }\u000a        uVar3 = uVar3 | uVar10;\u000a        iVar2 = iVar2 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar3 != 0) {\u000a        iVar2 = unaff_r5[7];\u000a        iVar4 = unaff_r5[4];\u000a        if (unaff_r5[8] == 1) {\u000a          iVar5 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar4 = 4;\u000a        if (10 < (uint)(iVar5 + iVar2)) {\u000a          do {\u000a            *(undefined *)((int)&gfp_00->attackthre_s + iVar4 + 3) = (char)uVar9;\u000a            iVar4 = iVar4 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar4);\u000a          uVar9 = (iVar5 + iVar2) - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            *(undefined *)((int)&gfp_00->class_id + iVar2 + 3) = (char)uVar9;\u000a            iVar2 = iVar2 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar2);\u000a          *(undefined *)&gfp_00->num_channels = 0;\u000a          *(undefined *)((int)&gfp_00->num_channels + 1) = 0;\u000a          *(bool *)((int)&gfp_00->num_channels + 2) = unaff_r5[8] == 1;\u000a          gfp_00 = (lame_global_flags *)((int)&gfp_00->num_channels + 3);\u000a          iVar2 = unaff_r5[4];\u000a          if (iVar2 != 0) {\u000a            if (unaff_r5[5] == 1) {\u000a              puVar12 = (undefined *)writeUcs2s(gfp_00,unaff_r5[3]);\u000a              *puVar12 = 0;\u000a              puVar12[1] = 0;\u000a              gfp_00 = (lame_global_flags *)(puVar12 + 2);\u000a            }\u000a            else {\u000a              puVar12 = (undefined *)unaff_r5[3];\u000a              iVar4 = iVar2;\u000a              plVar8 = gfp_00;\u000a              do {\u000a                *(undefined *)&plVar8->class_id = *puVar12;\u000a                plVar8 = (lame_global_flags *)((int)&plVar8->class_id + 1);\u000a                puVar12 = puVar12 + 1;\u000a                iVar4 = iVar4 + -1;\u000a              } while (iVar4 != 0);\u000a              *(undefined *)((int)&gfp_00->class_id + iVar2) = 0;\u000a              gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + iVar2 + 1);\u000a            }\u000a          }\u000a          if (unaff_r5[8] == 1) goto LAB_0001e338;\u000a          iVar2 = unaff_r5[7];\u000a          if (iVar2 != 0) {\u000a            puVar12 = (undefined *)unaff_r5[6];\u000a            iVar4 = iVar2;\u000a            plVar8 = gfp_00;\u000a            do {\u000a              *(undefined *)&plVar8->class_id = *puVar12;\u000a              plVar8 = (lame_global_flags *)((int)&plVar8->class_id + 1);\u000a              puVar12 = puVar12 + 1;\u000a              iVar4 = iVar4 + -1;\u000a            } while (iVar4 != 0);\u000a            goto LAB_0001e36a;\u000a          }\u000a        }\u000a        goto LAB_0001e09a;\u000a      }\u000a      uVar11 = sizeOfWxxxNode(unaff_r5);\u000a      iVar2 = 4;\u000a    } while (uVar11 < 0xb);\u000a    do {\u000a      *(undefined *)((int)&gfp_00->attackthre_s + iVar2 + 3) = (char)uVar9;\u000a      iVar2 = iVar2 + -1;\u000a      uVar9 = uVar9 >> 8;\u000a    } while (0 < iVar2);\u000a    uVar11 = uVar11 - 10;\u000a    iVar2 = 4;\u000a    do {\u000a      *(undefined *)((int)&gfp_00->class_id + iVar2 + 3) = (char)uVar11;\u000a      iVar2 = iVar2 + -1;\u000a      uVar11 = uVar11 >> 8;\u000a    } while (0 < iVar2);\u000a    *(undefined *)&gfp_00->num_channels = 0;\u000a    *(undefined *)((int)&gfp_00->num_channels + 1) = 0;\u000a    gfp = (lame_global_flags *)((int)&gfp_00->num_channels + 2);\u000a    in_stack_00000028 = unaff_r5;\u000a    if (unaff_r5[4] != 0) {\u000a      *(bool *)((int)&gfp_00->num_channels + 2) = unaff_r5[5] == 1;\u000a      puVar12 = (undefined *)((int)&gfp_00->num_channels + 3);\u000a      if (unaff_r5[5] == 1) {\u000a        puVar12 = (undefined *)writeUcs2s(puVar12,unaff_r5[3],unaff_r5[4]);\u000a        *puVar12 = 0;\u000a        puVar12[1] = 0;\u000a        gfp = (lame_global_flags *)(puVar12 + 2);\u000a        in_stack_00000028 = unaff_r5;\u000a      }\u000a      else {\u000a        iVar2 = unaff_r5[4];\u000a        if (iVar2 != 0) {\u000a          puVar1 = (undefined *)unaff_r5[3];\u000a          iVar4 = iVar2;\u000a          puVar7 = puVar12;\u000a          do {\u000a            *puVar7 = *puVar1;\u000a            puVar7 = puVar7 + 1;\u000a            puVar1 = puVar1 + 1;\u000a            iVar4 = iVar4 + -1;\u000a          } while (iVar4 != 0);\u000a          puVar12 = puVar12 + iVar2;\u000a        }\u000a        *puVar12 = 0;\u000a        gfp = (lame_global_flags *)(puVar12 + 1);\u000a        in_stack_00000028 = unaff_r5;\u000a      }\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p171
S'b 0x0001e394\n'
p172
S'77 e0\n'
p173
S'.text:0001e2a2\n'
p174
tp175
sS'__aeabi_fcmpgt'
p176
(S'\n__stdcall __aeabi_fcmpgt()\n'
p177
V\u000avoid __aeabi_fcmpgt(void)\u000a\u000a{\u000a  (*(__divsf3 + DAT_00037a8c))();\u000a  return;\u000a}\u000a\u000a
p178
S'ldr r12,[0x37a8c]\nadd pc,r12,pc\n'
p179
S'00 c0 9f e5\n0f f0 8c e0\n'
p180
S'.text:00037a84\n.text:00037a88\n'
p181
tp182
sS'CBR_iteration_loop'
p183
(S'\n__stdcall CBR_iteration_loop(lame_internal_flags * gfc, FLOAT2 * pe, FLOAT * ms_ener_ratio, III_psy_ratio2 * ratio)\n'
p184
V\u000a/* WARNING: Control flow encountered bad instruction data */\u000a\u000avoid CBR_iteration_loop(lame_internal_flags *gfc,FLOAT (*pe) [2],FLOAT *ms_ener_ratio,\u000a                       III_psy_ratio (*ratio) [2])\u000a\u000a{\u000a  III_side_info_t *l3_side;\u000a  int targ_bits [2];\u000a  FLOAT xrpow [576];\u000a  FLOAT l3_xmin [39];\u000a  \u000a                    /* WARNING: Bad instruction - Truncating control flow here */\u000a  halt_baddata();\u000a}\u000a\u000a
p185
S'andeq r2,r0,r12, lsr #0xc\n'
p186
S'2c 26 00 00\n'
p187
S'.text:0001baa4\n'
p188
tp189
sS'lame_get_mode'
p190
(S'\n__stdcall lame_get_mode(lame_global_flags * gfp)\n'
p191
V\u000aMPEG_mode lame_get_mode(lame_global_flags *gfp)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  MPEG_mode MVar1;\u000a  undefined *puVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint uVar9;\u000a  undefined4 *puVar10;\u000a  uint uVar11;\u000a  int unaff_r6;\u000a  uint uVar12;\u000a  undefined *puVar13;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  MPEG_mode in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  uVar9 = (int)&gfp->tune_value_a + 2;\u000a  *(byte *)(unaff_r6 + 6) = (byte)(uVar9 >> 0x15) & 0x7f;\u000a  *(byte *)(unaff_r6 + 7) = (byte)(uVar9 >> 0xe) & 0x7f;\u000a  *(byte *)(unaff_r6 + 8) = (byte)(uVar9 >> 7) & 0x7f;\u000a  *(byte *)(unaff_r6 + 9) = (byte)uVar9 & 0x7f;\u000a  puVar13 = (undefined *)(unaff_r6 + 10);\u000a  puVar10 = (undefined4 *)*in_stack_00000008;\u000a  do {\u000a    if (puVar10 == (undefined4 *)0x0) {\u000a      if (__s != (char *)0x0) {\u000a        iVar3 = 4;\u000a        if ((*in_stack_00000004 != 0) &&\u000a           (uVar9 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a          do {\u000a            puVar13[iVar3 + -1] = (char)uVar9;\u000a            iVar3 = iVar3 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a          strlen(__s);\u000a        }\u000a      }\u000a      __aeabi_memclr(puVar13,(in_stack_0000002c + in_stack_00000018) - (int)puVar13);\u000a      if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a        return in_stack_0000002c;\u000a      }\u000a                    /* WARNING: Subroutine does not return */\u000a      __stack_chk_fail();\u000a    }\u000a    uVar9 = puVar10[1];\u000a    uVar12 = 0xff;\u000a    iVar3 = 4;\u000a    if ((uVar9 == DAT_0001e494) || (uVar4 = in_stack_00000030, uVar9 == DAT_0001e498)) {\u000a      iVar3 = puVar10[4] * 2 + 0x10;\u000a      if (puVar10[5] != 1) {\u000a        iVar3 = puVar10[4] + 0xf;\u000a      }\u000a      iVar5 = 0;\u000a      if (puVar10[8] == 1) {\u000a        iVar5 = puVar10[8];\u000a      }\u000a      uVar12 = (puVar10[7] << iVar5) + iVar3;\u000a      iVar3 = 4;\u000a      if (10 < uVar12) {\u000a        do {\u000a          puVar13[iVar3 + -1] = (char)uVar9;\u000a          iVar3 = iVar3 + -1;\u000a          uVar9 = uVar9 >> 8;\u000a        } while (0 < iVar3);\u000a        uVar12 = uVar12 - 10;\u000a        iVar3 = 4;\u000a        do {\u000a          puVar13[iVar3 + 3] = (char)uVar12;\u000a          iVar3 = iVar3 + -1;\u000a          uVar12 = uVar12 >> 8;\u000a        } while (0 < iVar3);\u000a        puVar13[8] = 0;\u000a        puVar13[9] = 0;\u000a        *(bool *)(puVar13 + 10) = puVar10[8] == 1;\u000a        puVar13[0xb] = *(undefined *)(puVar10 + 2);\u000a        puVar13[0xc] = *(undefined *)((int)puVar10 + 9);\u000a        puVar13[0xd] = *(undefined *)((int)puVar10 + 10);\u000a        puVar13 = puVar13 + 0xe;\u000a        if (puVar10[5] == 1) {\u000a          gfp_00 = (lame_global_flags *)writeUcs2s(puVar13,puVar10[3],puVar10[4]);\u000a          *(undefined *)&gfp_00->class_id = 0;\u000a          *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a          MVar1 = lame_get_ReplayGain_input(gfp_00);\u000a          return MVar1;\u000a        }\u000a        iVar3 = puVar10[4];\u000a        if (iVar3 != 0) {\u000a          puVar2 = (undefined *)puVar10[3];\u000a          iVar5 = iVar3;\u000a          puVar8 = puVar13;\u000a          do {\u000a            *puVar8 = *puVar2;\u000a            puVar8 = puVar8 + 1;\u000a            puVar2 = puVar2 + 1;\u000a            iVar5 = iVar5 + -1;\u000a          } while (iVar5 != 0);\u000a          puVar13 = puVar13 + iVar3;\u000a        }\u000a        *puVar13 = 0;\u000a        puVar13 = puVar13 + 1;\u000a        if (puVar10[8] == 1) {\u000aLAB_0001e338:\u000a          puVar13 = (undefined *)writeUcs2s(puVar13,puVar10[6],puVar10[7]);\u000a        }\u000a        else {\u000a          iVar3 = puVar10[7];\u000a          if (iVar3 != 0) {\u000a            puVar2 = (undefined *)puVar10[6];\u000a            iVar5 = iVar3;\u000a            puVar8 = puVar13;\u000a            do {\u000a              *puVar8 = *puVar2;\u000a              puVar8 = puVar8 + 1;\u000a              puVar2 = puVar2 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a            puVar13 = puVar13 + iVar3;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      do {\u000a        uVar7 = uVar12 & 0x57000000;\u000a        uVar11 = in_stack_00000030;\u000a        if (uVar7 != (uVar12 & uVar9)) {\u000a          uVar11 = uVar12 & uVar9;\u000a        }\u000a        if (uVar7 == 0) {\u000a          uVar11 = uVar7;\u000a        }\u000a        uVar4 = uVar4 | uVar11;\u000a        iVar3 = iVar3 + -1;\u000a        uVar12 = uVar12 << 8;\u000a      } while (iVar3 != 0);\u000a      if (uVar4 == 0) {\u000a        uVar12 = sizeOfWxxxNode(puVar10);\u000a        iVar3 = 4;\u000a        if (10 < uVar12) {\u000a          do {\u000a            puVar13[iVar3 + -1] = (char)uVar9;\u000a            iVar3 = iVar3 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar3);\u000a          uVar12 = uVar12 - 10;\u000a          iVar3 = 4;\u000a          do {\u000a            puVar13[iVar3 + 3] = (char)uVar12;\u000a            iVar3 = iVar3 + -1;\u000a            uVar12 = uVar12 >> 8;\u000a          } while (0 < iVar3);\u000a          puVar13[8] = 0;\u000a          puVar13[9] = 0;\u000a          puVar8 = puVar13 + 10;\u000a          if (puVar10[4] != 0) {\u000a            *(bool *)(puVar13 + 10) = puVar10[5] == 1;\u000a            puVar13 = puVar13 + 0xb;\u000a            if (puVar10[5] == 1) {\u000a              puVar8 = (undefined *)writeUcs2s(puVar13,puVar10[3],puVar10[4]);\u000a              *puVar8 = 0;\u000a              puVar8[1] = 0;\u000a              puVar8 = puVar8 + 2;\u000a            }\u000a            else {\u000a              iVar3 = puVar10[4];\u000a              if (iVar3 != 0) {\u000a                puVar2 = (undefined *)puVar10[3];\u000a                iVar5 = iVar3;\u000a                puVar8 = puVar13;\u000a                do {\u000a                  *puVar8 = *puVar2;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar13 = puVar13 + iVar3;\u000a              }\u000a              *puVar13 = 0;\u000a              puVar8 = puVar13 + 1;\u000a            }\u000a          }\u000a          if (puVar10[8] == 1) {\u000a            puVar13 = (undefined *)writeLoBytes(puVar8,puVar10[6],puVar10[7]);\u000a          }\u000a          else {\u000a            iVar3 = puVar10[7];\u000a            puVar13 = puVar8;\u000a            if (iVar3 != 0) {\u000a              puVar2 = (undefined *)puVar10[6];\u000a              iVar5 = iVar3;\u000a              puVar13 = puVar8;\u000a              do {\u000a                *puVar13 = *puVar2;\u000a                puVar13 = puVar13 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              puVar13 = puVar8 + iVar3;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        iVar3 = puVar10[7];\u000a        iVar5 = puVar10[4];\u000a        if (puVar10[8] == 1) {\u000a          iVar6 = iVar5 * 2 + 0xd;\u000a          if (iVar5 == 0) {\u000a            iVar6 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar6 = iVar5 + 0xc;\u000a          if (iVar5 == 0) {\u000a            iVar6 = 0xb;\u000a          }\u000a        }\u000a        iVar5 = 4;\u000a        if (10 < (uint)(iVar6 + iVar3)) {\u000a          do {\u000a            puVar13[iVar5 + -1] = (char)uVar9;\u000a            iVar5 = iVar5 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar5);\u000a          uVar9 = (iVar6 + iVar3) - 10;\u000a          iVar3 = 4;\u000a          do {\u000a            puVar13[iVar3 + 3] = (char)uVar9;\u000a            iVar3 = iVar3 + -1;\u000a            uVar9 = uVar9 >> 8;\u000a          } while (0 < iVar3);\u000a          puVar13[8] = 0;\u000a          puVar13[9] = 0;\u000a          *(bool *)(puVar13 + 10) = puVar10[8] == 1;\u000a          puVar13 = puVar13 + 0xb;\u000a          iVar3 = puVar10[4];\u000a          if (iVar3 != 0) {\u000a            if (puVar10[5] == 1) {\u000a              puVar13 = (undefined *)writeUcs2s(puVar13,puVar10[3]);\u000a              *puVar13 = 0;\u000a              puVar13[1] = 0;\u000a              puVar13 = puVar13 + 2;\u000a            }\u000a            else {\u000a              puVar2 = (undefined *)puVar10[3];\u000a              iVar5 = iVar3;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar2;\u000a                puVar8 = puVar8 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              puVar13[iVar3] = 0;\u000a              puVar13 = puVar13 + iVar3 + 1;\u000a            }\u000a          }\u000a          if (puVar10[8] == 1) goto LAB_0001e338;\u000a          iVar3 = puVar10[7];\u000a          if (iVar3 != 0) {\u000a            puVar2 = (undefined *)puVar10[6];\u000a            iVar5 = iVar3;\u000a            puVar8 = puVar13;\u000a            do {\u000a              *puVar8 = *puVar2;\u000a              puVar8 = puVar8 + 1;\u000a              puVar2 = puVar2 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a            goto LAB_0001e36a;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    puVar10 = (undefined4 *)*puVar10;\u000a  } while( true );\u000a}\u000a\u000a
p192
S'sub r0,#0xa\nlsr r1,r0,#0x15\nmov r2,#0x7f\nand r1,r2\nstrb r1,[r6,#0x6]\nlsr r1,r0,#0xe\nand r1,r2\nstrb r1,[r6,#0x7]\nlsr r1,r0,#0x7\nand r1,r2\nstrb r1,[r6,#0x8]\nand r0,r2\nstrb r0,[r6,#0x9]\n'
p193
S'0a 38\n41 0d\n7f 22\n11 40\nb1 71\n81 0b\n11 40\nf1 71\nc1 09\n11 40\n31 72\n10 40\n70 72\n'
p194
S'.text:0001e078\n.text:0001e07a\n.text:0001e07c\n.text:0001e07e\n.text:0001e080\n.text:0001e082\n.text:0001e084\n.text:0001e086\n.text:0001e088\n.text:0001e08a\n.text:0001e08c\n.text:0001e08e\n.text:0001e090\n'
p195
tp196
sS'lame_debugf'
p197
(S'\n__stdcall lame_debugf(lame_internal_flags * gfc, char * format)\n'
p198
V\u000avoid lame_debugf(lame_internal_flags *gfc,char *format,...)\u000a\u000a{\u000a  char *extraout_r1;\u000a  undefined4 *puVar1;\u000a  int unaff_r4;\u000a  int iVar2;\u000a  undefined4 *puStack0000000c;\u000a  int iStack00000010;\u000a  int iStack00000014;\u000a  int iStack00000018;\u000a  undefined4 uStack0000001c;\u000a  int iStack00000020;\u000a  int iStack00000024;\u000a  int iStack00000028;\u000a  int iStack00000040;\u000a  undefined4 uStack00000054;\u000a  int iStack00000058;\u000a  int iStack0000005c;\u000a  int iStack00000060;\u000a  int iStack00000064;\u000a  int iStack00000068;\u000a  int iStack0000006c;\u000a  int iStack00000074;\u000a  undefined *puStack00000094;\u000a  undefined *puStack00000098;\u000a  undefined *puStack0000009c;\u000a  undefined *puStack000000a0;\u000a  undefined *puStack000000a4;\u000a  undefined *puStack000000a8;\u000a  undefined *puStack000000ac;\u000a  undefined *puStack000000b0;\u000a  undefined *puStack000000b4;\u000a  undefined *puStack000000b8;\u000a  undefined *puStack000000bc;\u000a  undefined *puStack000000c0;\u000a  undefined *puStack000000c4;\u000a  undefined *puStack000000c8;\u000a  undefined *puStack000000cc;\u000a  undefined *puStack000000d0;\u000a  undefined *puStack000000d4;\u000a  \u000a  iStack0000006c = unaff_r4 + DAT_00022258;\u000a  iStack00000068 = unaff_r4 + DAT_0002225c;\u000a  iStack00000064 = unaff_r4 + DAT_00022260;\u000a  iStack00000018 = unaff_r4 + DAT_00022264;\u000a  iStack00000060 = unaff_r4 + DAT_00022268;\u000a  iStack0000005c = unaff_r4 + DAT_0002226c;\u000a  iStack00000014 = unaff_r4 + DAT_00022270;\u000a  iStack00000010 = unaff_r4 + DAT_0002227c;\u000a  puVar1 = (undefined4 *)(unaff_r4 + DAT_00022280);\u000a  uStack00000054 = 0x11;\u000a  iStack00000028 = unaff_r4 + 0x110;\u000a  iStack00000024 = unaff_r4 + 0x14c;\u000a  iStack00000020 = unaff_r4 + 0x15c;\u000a  puStack000000d4 = &stack0x00000194;\u000a  puStack000000c8 = &stack0x00000188;\u000a  puStack000000c4 = &stack0x000001a0;\u000a  puStack000000d0 = &stack0x00000170;\u000a  puStack000000c0 = &stack0x00000174;\u000a  puStack000000bc = &stack0x0000016c;\u000a  puStack000000b8 = &stack0x00000178;\u000a  puStack000000b4 = &stack0x00000168;\u000a  puStack000000b0 = &stack0x0000017c;\u000a  puStack000000ac = &stack0x00000164;\u000a  puStack000000a8 = &stack0x00000180;\u000a  puStack000000a4 = &stack0x00000190;\u000a  puStack000000a0 = &stack0x00000198;\u000a  puStack0000009c = &stack0x0000018c;\u000a  puStack00000098 = &stack0x0000019c;\u000a  puStack00000094 = &stack0x00000184;\u000a  puStack000000cc = &stack0x000001a4;\u000a  uStack0000001c = 0;\u000a  iStack00000040 = 0;\u000a  iStack00000058 = iStack00000014;\u000a  iStack00000074 = iStack00000018;\u000a  if (*(int *)(unaff_r4 + 0x4c) < 1) {\u000a    puStack0000000c = puVar1;\u000a    iStack00000058 = iStack00000014;\u000a    iStack00000074 = iStack00000018;\u000a    FUN_00022eee();\u000a    format = extraout_r1;\u000a  }\u000a  iVar2 = unaff_r4 + iStack00000040 * 0x1200 + 0x900 + DAT_00022278;\u000a  puStack0000000c = puVar1;\u000a  window_subband(format + 0x478,iVar2);\u000a  window_subband(format + 0x4f8,iVar2 + 0x80);\u000a                    /* WARNING: Subroutine does not return */\u000a  __subsf3(0x80000000,*puVar1);\u000a}\u000a\u000a
p199
S'ldr r0,[0x00022258]\nadd r0,r4,r0\nstr r0,[sp,#0x6c]\nldr r0,[0x0002225c]\nadd r0,r4,r0\nstr r0,[sp,#0x68]\nldr r0,[0x00022260]\nadd r0,r4,r0\nstr r0,[sp,#0x64]\nldr r0,[0x00022264]\nadd r0,r4,r0\nstr r0,[sp,#0x74]\nldr r0,[0x00022268]\nadd r0,r4,r0\nstr r0,[sp,#0x60]\nldr r0,[0x0002226c]\nadd r0,r4,r0\nstr r0,[sp,#0x5c]\nldr r0,[0x00022270]\nadd r3,r4,r0\nstr r3,[sp,#0x58]\nldr r0,[0x00022274]\nadd r5,r4,r0\nldr r0,[0x00022278]\nadd r6,r4,r0\nldr r0,[0x0002227c]\nadd r0,r4,r0\nstr r0,[sp,#0x10]\nldr r0,[0x00022280]\nadd r0,r4,r0\nstr r0,[sp,#0xc]\nmov r0,#0x11\nstr r0,[sp,#0x54]\nlsl r0,r0,#0x4\nadd r0,r4,r0\nstr r0,[sp,#0x28]\nmov r0,#0x53\nlsl r0,r0,#0x2\nadd r0,r4,r0\nstr r0,[sp,#0x24]\nmov r0,#0x57\nlsl r0,r0,#0x2\nadd r0,r4,r0\nstr r0,[sp,#0x20]\nadd r2,sp,#0x160\npush { r2 }\npop { r0 }\nadd r0,#0x34\n'
p200
S'94 48\n20 18\n1b 90\n94 48\n20 18\n1a 90\n93 48\n20 18\n19 90\n93 48\n20 18\n1d 90\n92 48\n20 18\n18 90\n92 48\n20 18\n17 90\n91 48\n23 18\n16 93\n91 48\n25 18\n91 48\n26 18\n91 48\n20 18\n04 90\n90 48\n20 18\n03 90\n11 20\n15 90\n00 01\n20 18\n0a 90\n53 20\n80 00\n20 18\n09 90\n57 20\n80 00\n20 18\n08 90\n58 aa\n04 b4\n01 bc\n34 30\n'
p201
S'.text:00022004\n.text:00022006\n.text:00022008\n.text:0002200a\n.text:0002200c\n.text:0002200e\n.text:00022010\n.text:00022012\n.text:00022014\n.text:00022016\n.text:00022018\n.text:0002201a\n.text:0002201c\n.text:0002201e\n.text:00022020\n.text:00022022\n.text:00022024\n.text:00022026\n.text:00022028\n.text:0002202a\n.text:0002202c\n.text:0002202e\n.text:00022030\n.text:00022032\n.text:00022034\n.text:00022036\n.text:00022038\n.text:0002203a\n.text:0002203c\n.text:0002203e\n.text:00022040\n.text:00022042\n.text:00022044\n.text:00022046\n.text:00022048\n.text:0002204a\n.text:0002204c\n.text:0002204e\n.text:00022050\n.text:00022052\n.text:00022054\n.text:00022056\n.text:00022058\n.text:0002205a\n.text:0002205c\n.text:0002205e\n.text:00022060\n.text:00022062\n'
p202
tp203
sS'lame_encode_buffer_template'
p204
(S'\n__stdcall lame_encode_buffer_template()\n'
p205
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000aint lame_encode_buffer_template\u000a              (int *piParm1,int iParm2,int iParm3,size_t sParm4,int iParm5,int iParm6,\u000a              undefined4 uParm7,undefined4 uParm8,undefined4 uParm9)\u000a\u000a{\u000a  int *piVar1;\u000a  int iVar2;\u000a  undefined4 *puVar3;\u000a  int *piVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  void **ppvVar7;\u000a  int iVar8;\u000a  void *__ptr;\u000a  int iVar9;\u000a  int *piVar10;\u000a  void *pvVar11;\u000a  int iVar12;\u000a  int iVar13;\u000a  int iVar14;\u000a  int iStack92;\u000a  int local_50;\u000a  int local_34;\u000a  int iStack48;\u000a  int iStack44;\u000a  int iStack40;\u000a  void *pvStack36;\u000a  int iStack32;\u000a  int *piStack28;\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_0002108c + 0x20d44);\u000a  local_34 = -3;\u000a  iVar6 = local_34;\u000a  if ((((piParm1 == (int *)0x0) || (iVar6 = local_34, *piParm1 != _freegfc)) ||\u000a      (piVar10 = (int *)piParm1[0x48], iVar6 = local_34, piVar10 == (int *)0x0)) ||\u000a     ((iVar6 = local_34, *piVar10 != _freegfc || (local_34 = 0, iVar6 = local_34, sParm4 == 0))))\u000a  goto LAB_00021072;\u000a  __ptr = *(void **)((int)piVar10 + DAT_00021094);\u000a  piVar1 = (int *)((int)piVar10 + DAT_00021094);\u000a  if (__ptr != (void *)0x0) {\u000a    if ((int)sParm4 <= *(int *)((int)piVar10 + DAT_00021098)) {\u000a      ppvVar7 = (void **)((int)piVar10 + DAT_0002109c);\u000a      if (*(int *)((int)piVar10 + DAT_0002109c) == 0) {\u000a        free(__ptr);\u000a        if (*ppvVar7 != (void *)0x0) {\u000a          free(*ppvVar7);\u000a        }\u000a        *piVar1 = 0;\u000a        *ppvVar7 = (void *)0x0;\u000a        *(undefined4 *)((int)piVar10 + DAT_00021098) = 0;\u000a        lame_errorf(piVar10,DAT_000210b0 + 0x20e64);\u000a        iVar6 = -2;\u000a      }\u000a      else {\u000a        if (piVar10[0x11] < 2) {\u000a          iParm3 = iParm2;\u000a          iVar6 = local_34;\u000a          if (iParm2 == 0) goto LAB_00021072;\u000a        }\u000a        else {\u000a          iVar6 = local_34;\u000a          if ((iParm2 == 0) || (iVar6 = local_34, iParm3 == 0)) goto LAB_00021072;\u000a        }\u000a        lame_copy_inbuffer(piVar10,iParm2,iParm3,sParm4,uParm7,uParm8,uParm9);\u000a        iVar2 = piVar10[0x13];\u000a        local_34 = -3;\u000a        iVar6 = local_34;\u000a        if ((*piVar10 == _freegfc) && (local_34 = copy_buffer(), iVar6 = local_34, -1 < local_34)) {\u000a          iStack32 = (int)piVar10 + DAT_000210a0;\u000a          local_50 = *piVar1;\u000a          iVar8 = piVar10[0x13];\u000a          piStack28 = piVar10 + 0x4280;\u000a          puVar3 = (undefined4 *)((int)piVar10 + DAT_000210a4);\u000a          piVar1 = (int *)((int)piVar10 + DAT_000210a8);\u000a          piVar4 = (int *)((int)piVar10 + DAT_000210ac);\u000a          iVar6 = local_34;\u000a          if (0 < (int)sParm4) {\u000a            iStack92 = iParm5 + local_34;\u000a            __ptr = *ppvVar7;\u000a            do {\u000a              iVar13 = 0;\u000a              iStack44 = 0;\u000a              iStack48 = 0;\u000a              iStack40 = local_50;\u000a              pvStack36 = __ptr;\u000a              fill_buffer(piVar10,&iStack32,&iStack40,sParm4,&iStack44,&iStack48);\u000a              if ((piVar10[0x20] != 0) && (piVar10[0x22] == 0)) {\u000a                iVar5 = AnalyzeSamples(*puVar3,iStack32 + *piVar4 * 4,piStack28 + *piVar4,iStack48,\u000a                                       piVar10[0x12]);\u000a                iVar6 = -6;\u000a                if (iVar5 == 0) break;\u000a              }\u000a              iVar6 = *piVar4;\u000a              iVar5 = piVar10[0x12];\u000a              *piVar4 = iVar6 + iStack48;\u000a              pvVar11 = (void *)((int)__ptr + iStack44 * 4);\u000a              if (iVar5 != 2) {\u000a                pvVar11 = __ptr;\u000a              }\u000a              sParm4 = sParm4 - iStack44;\u000a              local_50 = local_50 + iStack44 * 4;\u000a              iVar5 = *piVar1;\u000a              if (iVar5 < 1) {\u000a                iVar5 = 0x6c0;\u000a                *piVar1 = 0x6c0;\u000a              }\u000a              *piVar1 = iVar5 + iStack48;\u000a              if (iVar8 * 0x240 + 0x2f0 <= iVar6 + iStack48) {\u000a                iVar6 = iParm6 - local_34;\u000a                if (iParm6 == 0) {\u000a                  iVar6 = iParm6;\u000a                }\u000a                iVar6 = lame_encode_mp3_frame(piVar10,iStack32,piStack28,iStack92,iVar6);\u000a                if (iVar6 < 0) break;\u000a                iVar5 = *piVar4 + iVar2 * -0x240;\u000a                *piVar4 = iVar5;\u000a                *piVar1 = *piVar1 + iVar2 * -0x240;\u000a                local_34 = iVar6 + local_34;\u000a                iStack92 = iStack92 + iVar6;\u000a                iVar6 = piVar10[0x12];\u000a                if (0 < iVar6) {\u000a                  do {\u000a                    if (0 < iVar5) {\u000a                      iVar9 = (&iStack32)[iVar13];\u000a                      iVar14 = *piVar4;\u000a                      iVar12 = 0;\u000a                      do {\u000a                        *(undefined4 *)(iVar9 + iVar12 * 4) =\u000a                             *(undefined4 *)(iVar9 + iVar2 * 0x900 + iVar12 * 4);\u000a                        iVar12 = iVar12 + 1;\u000a                      } while (iVar12 < iVar14);\u000a                    }\u000a                    iVar13 = iVar13 + 1;\u000a                  } while (iVar13 != iVar6);\u000a                }\u000a              }\u000a              __ptr = pvVar11;\u000a              iVar6 = local_34;\u000a            } while (0 < (int)sParm4);\u000a          }\u000a        }\u000a      }\u000aLAB_00021072:\u000a      local_34 = iVar6;\u000a      if (**(int **)(DAT_000210b4 + 0x21078) != local_18) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __stack_chk_fail();\u000a      }\u000a      return local_34;\u000a    }\u000a    free(__ptr);\u000a  }\u000a  if (*(void **)((int)piVar10 + DAT_0002109c) != (void *)0x0) {\u000a    free(*(void **)((int)piVar10 + DAT_0002109c));\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  calloc(sParm4,4);\u000a}\u000a\u000a
p206
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x6c\npush { r2 }\npop { r5 }\npush { r1 }\npop { r4 }\nldr r1,[0x0002108c]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x68]\nmov r6,#0x2\nmvn r1,r6\nstr r1,[sp,#0x4c]\ncmp r0,#0x0\nbne 0x00020d54\nb 0x00021072\nldr r1,[r0,#0x0]\nldr r2,[0x00021090]\ncmp r1,r2\nbeq 0x00020d5e\nb 0x00021072\nstr r3,[sp,#0x48]\nmov r2,#0x9\nlsl r1,r2,#0x5\nldr r3,[r0,r1]\ncmp r3,#0x0\nbne 0x00020d6c\nb 0x00021072\nstr r2,[sp,#0x44]\nldr r0,[r3,#0x0]\nldr r1,[0x00021090]\ncmp r0,r1\nbeq 0x00020d78\nb 0x00021072\nmov r0,#0x0\nstr r0,[sp,#0x4c]\nldr r0,[sp,#0x48]\ncmp r0,#0x0\nbne 0x00020d84\nb 0x00021072\nldr r0,[0x00021094]\nldr r2,[r3,r0]\nadd r0,r3,r0\nstr r0,[sp,#0x3c]\ncmp r2,#0x0\nbeq 0x00020da6\nldr r0,[0x00021098]\nldr r0,[r3,r0]\nldr r1,[sp,#0x48]\ncmp r0,r1\nbge 0x00020dec\npush { r2 }\npop { r0 }\nstr r3,[sp,#0x34]\nbl 0x00037ca0\nldr r3,[sp,#0x34]\nstr r3,[sp,#0x34]\nldr r1,[0x0002109c]\nldr r0,[r3,r1]\nadd r1,r3,r1\nstr r1,[sp,#0x40]\ncmp r0,#0x0\nbeq 0x00020db8\nbl 0x00037ca0\nmov r1,#0x4\nstr r1,[sp,#0x30]\nldr r0,[sp,#0x48]\nbl 0x00037cb0\nldr r1,[0x0002109c]\nldr r0,[r3,r1]\nadd r1,r3,r1\nstr r1,[sp,#0x40]\n'
p207
S'f0 b5\n03 af\n9b b0\n04 b4\n20 bc\n02 b4\n10 bc\nd3 49\n79 44\n09 68\n09 68\n1a 91\n02 26\nf1 43\n13 91\n00 28\n00 d1\n8e e1\n01 68\nce 4a\n91 42\n00 d0\n89 e1\n12 93\n09 22\n51 01\n43 58\n00 2b\n00 d1\n82 e1\n11 92\n18 68\nc7 49\n88 42\n00 d0\n7c e1\n00 20\n13 90\n12 98\n00 28\n00 d1\n76 e1\nc3 48\n1a 58\n18 18\n0f 90\n00 2a\n0a d0\nc1 48\n18 58\n12 99\n88 42\n28 da\n04 b4\n01 bc\n0d 93\n16 f0 7e ff\n0d 9b\n0d 93\nbc 49\n58 58\n59 18\n10 91\n00 28\n01 d0\n16 f0 74 ff\n04 21\n0c 91\n12 98\n16 f0 77 ff\nab 49\n58 58\n59 18\n10 91\n'
p208
S'.text:00020d30\n.text:00020d32\n.text:00020d34\n.text:00020d36\n.text:00020d38\n.text:00020d3a\n.text:00020d3c\n.text:00020d3e\n.text:00020d40\n.text:00020d42\n.text:00020d44\n.text:00020d46\n.text:00020d48\n.text:00020d4a\n.text:00020d4c\n.text:00020d4e\n.text:00020d50\n.text:00020d52\n.text:00020d54\n.text:00020d56\n.text:00020d58\n.text:00020d5a\n.text:00020d5c\n.text:00020d5e\n.text:00020d60\n.text:00020d62\n.text:00020d64\n.text:00020d66\n.text:00020d68\n.text:00020d6a\n.text:00020d6c\n.text:00020d6e\n.text:00020d70\n.text:00020d72\n.text:00020d74\n.text:00020d76\n.text:00020d78\n.text:00020d7a\n.text:00020d7c\n.text:00020d7e\n.text:00020d80\n.text:00020d82\n.text:00020d84\n.text:00020d86\n.text:00020d88\n.text:00020d8a\n.text:00020d8c\n.text:00020d8e\n.text:00020d90\n.text:00020d92\n.text:00020d94\n.text:00020d96\n.text:00020d98\n.text:00020d9a\n.text:00020d9c\n.text:00020d9e\n.text:00020da0\n.text:00020da4\n.text:00020da6\n.text:00020da8\n.text:00020daa\n.text:00020dac\n.text:00020dae\n.text:00020db0\n.text:00020db2\n.text:00020db4\n.text:00020db8\n.text:00020dba\n.text:00020dbc\n.text:00020dbe\n.text:00020dec\n.text:00020dee\n.text:00020df0\n.text:00020df2\n'
p209
tp210
sS'init_s3_values'
p211
(S'\n__stdcall init_s3_values(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p212
V\u000auint init_s3_values(undefined4 param_1,undefined4 param_2,uint param_3,undefined4 param_4)\u000a\u000a{\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  undefined4 __size;\u000a  void *pvVar3;\u000a  undefined4 *puVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  undefined *puVar12;\u000a  void *pvStack24;\u000a  undefined4 uStack4;\u000a  \u000a  iVar2 = DAT_0002882c;\u000a  puVar12 = &stack0xffffffec + DAT_0002882c;\u000a  puVar4 = (undefined4 *)(&stack0x00000040 + DAT_0002882c);\u000a  *(undefined4 **)(&stack0xfffffff0 + DAT_0002882c) = puVar4;\u000a  *(undefined4 *)(&stack0x00000004 + iVar2) = param_4;\u000a  *(uint *)((int)&pvStack24 + iVar2) = param_3;\u000a  uVar9 = *(uint *)((int)&pvStack24 + iVar2);\u000a  *(uint *)(&stack0x00000018 + iVar2) = uVar9;\u000a  *(undefined4 *)(&stack0x00000014 + iVar2) = param_2;\u000a  *(undefined4 *)(&stack0xfffffff4 + iVar2) = param_1;\u000a  *puVar4 = **(undefined4 **)(DAT_000287ec + 0x2848e);\u000a  *(undefined4 *)(&stack0x00000008 + iVar2) = 1;\u000a  puVar1 = &stack0x00000044 + iVar2;\u000a  *(undefined **)(int *)((int)&pvStack24 + iVar2) = puVar1;\u000a  __aeabi_memclr4(*(int *)((int)&pvStack24 + iVar2),0x4000);\u000a  *(uint *)((int)&pvStack24 + iVar2) = uVar9;\u000a  uVar9 = *(uint *)((int)&pvStack24 + iVar2);\u000a  *(undefined4 *)(&stack0xfffffff8 + iVar2) = 0;\u000a  *(undefined4 *)((int)&pvStack24 + iVar2) = 0;\u000a  if (0 < (int)uVar9) {\u000a    *(undefined4 *)(&stack0x00000000 + iVar2) =\u000a         *(undefined4 *)(&stack0xffffffec + DAT_00028830 + iVar2);\u000a    *(undefined4 *)((int)&uStack4 + iVar2) =\u000a         *(undefined4 *)(&stack0xffffffec + DAT_00028834 + iVar2);\u000a    *(int *)(&stack0x0000000c + iVar2) = *(int *)(&stack0xfffffff8 + iVar2);\u000a    *(undefined **)(&stack0x00000010 + iVar2) = puVar1;\u000a    iVar10 = *(int *)(&stack0xfffffff8 + iVar2) * 4;\u000a    *(int *)(&stack0x00000024 + iVar2) = *(int *)(&stack0x00000000 + iVar2) + iVar10;\u000a    *(int *)(&stack0x00000020 + iVar2) = *(int *)(&stack0x00000004 + iVar2) + iVar10;\u000a    *(undefined **)((int)&pvStack24 + iVar2) = puVar1;\u000a    *(uint *)((int)&pvStack24 + iVar2) = uVar9;\u000a    uVar9 = *(uint *)((int)&pvStack24 + iVar2);\u000a    *(int *)((int)&pvStack24 + iVar2) = *(int *)(&stack0x00000004 + iVar2);\u000a    puVar4 = *(undefined4 **)(int *)((int)&pvStack24 + iVar2);\u000a    *(undefined4 **)(&stack0x00000030 + iVar2) = puVar4;\u000a    *(undefined4 *)(&stack0x00000034 + iVar2) = *(undefined4 *)((int)&uStack4 + iVar2);\u000a    *(uint *)(&stack0x00000038 + iVar2) = uVar9;\u000a                    /* WARNING: Subroutine does not return */\u000a    __subsf3(**(undefined4 **)(&stack0x00000020 + iVar2),*puVar4);\u000a  }\u000a  *(undefined4 *)((int)&pvStack24 + iVar2) = *(undefined4 *)((int)&pvStack24 + iVar2);\u000a  __size = *(undefined4 *)((int)&pvStack24 + iVar2);\u000a  *(uint *)((int)&pvStack24 + iVar2) = uVar9;\u000a  uVar7 = *(uint *)((int)&pvStack24 + iVar2);\u000a  pvVar3 = malloc(__size,*puVar12);\u000a  *(void **)((int)&pvStack24 + iVar2) = pvVar3;\u000a  pvVar3 = *(void **)((int)&pvStack24 + iVar2);\u000a  **(void ***)(&stack0xfffffff4 + iVar2) = pvVar3;\u000a  *(uint *)((int)&pvStack24 + iVar2) = uVar7;\u000a  uVar9 = *(uint *)((int)&pvStack24 + iVar2);\u000a  uVar6 = *(uint *)(&stack0xfffffff8 + iVar2);\u000a  if (0 < (int)uVar7) {\u000a    *(uint *)(&stack0x00000008 + iVar2) = uVar6;\u000a  }\u000a  uVar7 = ~uVar6;\u000a  if (pvVar3 != (void *)0x0) {\u000a    *(uint *)((int)&pvStack24 + iVar2) = uVar6;\u000a    uVar7 = *(uint *)((int)&pvStack24 + iVar2);\u000a    *(uint *)((int)&pvStack24 + iVar2) = uVar9;\u000a    uVar9 = *(uint *)((int)&pvStack24 + iVar2);\u000a    *(uint *)(&stack0x00000018 + iVar2) = uVar9;\u000a    if (*(int *)(&stack0x00000008 + iVar2) == 0) {\u000a      *(uint *)((int)&pvStack24 + iVar2) = uVar6;\u000a      uVar8 = *(uint *)((int)&pvStack24 + iVar2);\u000a      do {\u000a        iVar11 = *(int *)(*(int *)(&stack0x00000014 + iVar2) + uVar8 * 8);\u000a        iVar10 = *(int *)(*(int *)(&stack0x00000014 + iVar2) + uVar8 * 8 + 4);\u000a        if (iVar11 <= iVar10) {\u000a          iVar5 = **(int **)(&stack0xfffffff4 + iVar2);\u000a          *(uint *)(&stack0xfffffff8 + iVar2) = uVar6;\u000a                    /* WARNING: Subroutine does not return */\u000a          __aeabi_memcpy4(iVar5 + uVar6 * 4,&stack0x00000044 + iVar11 * 4 + uVar8 * 0x100 + iVar2,\u000a                          ((iVar10 + 1) - iVar11) * 4);\u000a        }\u000a        uVar8 = uVar8 + 1;\u000a        uVar7 = 0;\u000a      } while (uVar8 != uVar9);\u000a    }\u000a  }\u000a  if (**(int **)(DAT_00028828 + 0x287d4) != **(int **)(&stack0xfffffff0 + iVar2)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return uVar7;\u000a}\u000a\u000a
p213
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nldr r6,[0x0002882c]\nadd sp,r6\nadd r4,sp,#0x54\nstr r4,[sp,#0x4]\nstr r3,[sp,#0x18]\npush { r2 }\npop { r5 }\nstr r5,[sp,#0x2c]\nstr r1,[sp,#0x28]\nstr r0,[sp,#0x8]\nldr r0,[0x000287ec]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r4,#0x0]\nmov r0,#0x1\nstr r0,[sp,#0x1c]\nlsl r1,r0,#0xe\nadd r4,sp,#0x58\npush { r4 }\npop { r0 }\nbl 0x00037a40\npush { r5 }\npop { r1 }\nmov r0,#0x0\nstr r0,[sp,#0xc]\ncmp r1,#0x1\npush { r0 }\npop { r5 }\nbge 0x000284b4\nb 0x0002874e\nldr r0,[0x00028830]\nadd r0,sp\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x14]\nldr r0,[0x00028834]\nadd r0,sp\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x10]\nldr r0,[sp,#0xc]\nstr r0,[sp,#0x20]\nstr r4,[sp,#0x24]\nlsl r0,r0,#0x2\nldr r2,[sp,#0x14]\nadd r2,r2,r0\nstr r2,[sp,#0x38]\nldr r2,[sp,#0x18]\nadd r0,r2,r0\nstr r0,[sp,#0x34]\npush { r4 }\npop { r5 }\npush { r1 }\npop { r0 }\nldr r6,[sp,#0x10]\npush { r2 }\npop { r1 }\nstr r1,[sp,#0x44]\nstr r6,[sp,#0x48]\nstr r0,[sp,#0x4c]\nldr r0,[sp,#0x34]\nldr r0,[r0,#0x0]\nldr r1,[r1,#0x0]\nbl 0x00037b80\n'
p214
S'f0 b5\n03 af\ned 4e\nb5 44\n15 ac\n01 94\n06 93\n04 b4\n20 bc\n0b 95\n0a 91\n02 90\nd8 48\n78 44\n00 68\n00 68\n20 60\n01 20\n07 90\n81 03\n16 ac\n10 b4\n01 bc\n0f f0 cf fa\n20 b4\n02 bc\n00 20\n03 90\n01 29\n01 b4\n20 bc\n00 da\n4c e1\nde 48\n68 44\n00 68\n05 90\ndd 48\n68 44\n00 68\n04 90\n03 98\n08 90\n09 94\n80 00\n05 9a\n12 18\n0e 92\n06 9a\n10 18\n0d 90\n10 b4\n20 bc\n02 b4\n01 bc\n04 9e\n04 b4\n02 bc\n11 91\n12 96\n13 90\n0d 98\n00 68\n09 68\n0f f0 45 fb\n'
p215
S'.text:00028470\n.text:00028472\n.text:00028474\n.text:00028476\n.text:00028478\n.text:0002847a\n.text:0002847c\n.text:0002847e\n.text:00028480\n.text:00028482\n.text:00028484\n.text:00028486\n.text:00028488\n.text:0002848a\n.text:0002848c\n.text:0002848e\n.text:00028490\n.text:00028492\n.text:00028494\n.text:00028496\n.text:00028498\n.text:0002849a\n.text:0002849c\n.text:0002849e\n.text:000284a2\n.text:000284a4\n.text:000284a6\n.text:000284a8\n.text:000284aa\n.text:000284ac\n.text:000284ae\n.text:000284b0\n.text:000284b2\n.text:000284b4\n.text:000284b6\n.text:000284b8\n.text:000284ba\n.text:000284bc\n.text:000284be\n.text:000284c0\n.text:000284c2\n.text:000284c4\n.text:000284c6\n.text:000284c8\n.text:000284ca\n.text:000284cc\n.text:000284ce\n.text:000284d0\n.text:000284d2\n.text:000284d4\n.text:000284d6\n.text:000284d8\n.text:000284da\n.text:000284dc\n.text:000284de\n.text:000284e0\n.text:000284e2\n.text:000284e4\n.text:000284e6\n.text:000284e8\n.text:000284ea\n.text:000284ec\n.text:000284ee\n.text:000284f0\n.text:000284f2\n'
p216
tp217
sS'lame_encode_buffer_ieee_float'
p218
(S'\n__stdcall lame_encode_buffer_ieee_float(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p219
V\u000avoid lame_encode_buffer_ieee_float(void)\u000a\u000a{\u000a  lame_encode_buffer_template();\u000a  return;\u000a}\u000a\u000a
p220
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\nldr r4,[0x00021104]\nmov r5,sp\nstr r4,[r5,#0x10]\nmov r4,#0x1\nstr r4,[r5,#0xc]\nmov r4,#0x3\nstr r4,[r5,#0x8]\nldr r4,[sp,#0x2c]\nstr r4,[r5,#0x4]\nldr r4,[sp,#0x28]\nstr r4,[r5,#0x0]\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p221
S'b0 b5\n02 af\n86 b0\n07 4c\n6d 46\n2c 61\n01 24\nec 60\n03 24\nac 60\n0b 9c\n6c 60\n0a 9c\n2c 60\nff f7 18 fe\n06 b0\nb0 bd\n'
p222
S'.text:000210e0\n.text:000210e2\n.text:000210e4\n.text:000210e6\n.text:000210e8\n.text:000210ea\n.text:000210ec\n.text:000210ee\n.text:000210f0\n.text:000210f2\n.text:000210f4\n.text:000210f6\n.text:000210f8\n.text:000210fa\n.text:000210fc\n.text:00021100\n.text:00021102\n'
p223
tp224
sS'lame_get_exp_nspsytune'
p225
(S'\n__stdcall lame_get_exp_nspsytune()\n'
p226
V\u000avoid lame_get_exp_nspsytune(void)\u000a\u000a{\u000a  (*(lame_set_exp_nspsytune + DAT_00037f4c))();\u000a  return;\u000a}\u000a\u000a
p227
S'ldr r12,[0x37f4c]\nadd pc,r12,pc\n'
p228
S'00 c0 9f e5\n0f f0 8c e0\n'
p229
S'.text:00037f44\n.text:00037f48\n'
p230
tp231
sS'__aeabi_fcmpge'
p232
(S'\n__stdcall __aeabi_fcmpge()\n'
p233
V\u000avoid __aeabi_fcmpge(void)\u000a\u000a{\u000a  (*(__extendsfdf2 + DAT_00037abc))();\u000a  return;\u000a}\u000a\u000a
p234
S'ldr r12,[0x37abc]\nadd pc,r12,pc\n'
p235
S'00 c0 9f e5\n0f f0 8c e0\n'
p236
S'.text:00037ab4\n.text:00037ab8\n'
p237
tp238
sS'lame_set_copyright'
p239
(S'\n__stdcall lame_set_copyright(lame_global_flags * gfp, int copyright)\n'
p240
V\u000aint lame_set_copyright(lame_global_flags *gfp,int copyright)\u000a\u000a{\u000a  int unaff_r4;\u000a  int unaff_r6;\u000a  char in_ZR;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int *in_stack_00000020;\u000a  \u000a  if (in_ZR == 0) {\u000a    do {\u000a      *(undefined *)(unaff_r6 + copyright + -1) = (char)gfp;\u000a      copyright = copyright + -1;\u000a      gfp = (lame_global_flags *)((uint)gfp >> 8);\u000a    } while (0 < copyright);\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(__s);\u000a  }\u000a  __aeabi_memclr(unaff_r6,(unaff_r4 + in_stack_00000018) - unaff_r6);\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) != *in_stack_00000020) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return unaff_r4;\u000a}\u000a\u000a
p241
S'beq 0x0001e45e\nstr r2,[sp,#0x30]\nadd r2,r6,r1\nmov r4,#0x0\nmvn r3,r4\nstrb r0,[r2,r3]\nsub r1,#0x1\nlsr r0,r0,#0x8\ncmp r1,#0x0\nbgt 0x0001e3e8\nldr r0,[sp,#0xc]\nbl 0x000379e0\n'
p242
S'3b d0\n0c 92\n72 18\n00 24\ne3 43\nd0 54\n01 39\n00 0a\n00 29\nf7 dc\n03 98\n19 f0 f1 fa\n'
p243
S'.text:0001e3e4\n.text:0001e3e6\n.text:0001e3e8\n.text:0001e3ea\n.text:0001e3ec\n.text:0001e3ee\n.text:0001e3f0\n.text:0001e3f2\n.text:0001e3f4\n.text:0001e3f6\n.text:0001e3f8\n.text:0001e3fa\n'
p244
tp245
sS'lame_get_mode_automs'
p246
(S'\n__stdcall lame_get_mode_automs(lame_global_flags * gfp)\n'
p247
V\u000aint lame_get_mode_automs(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  lame_global_flags *gfp_00;\u000a  int in_r1;\u000a  int iVar2;\u000a  undefined *puVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  undefined *puVar7;\u000a  int *in_r3;\u000a  uint uVar8;\u000a  undefined *puVar9;\u000a  uint unaff_r4;\u000a  uint uVar10;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    iVar4 = in_r1;\u000a    do {\u000a      iVar2 = 0;\u000a      if (*(int *)((int)in_r3 + 0x20) == 1) {\u000a        iVar2 = *(int *)((int)in_r3 + 0x20);\u000a      }\u000a      uVar1 = (*(int *)((int)in_r3 + 0x1c) << iVar2) + iVar4;\u000a      iVar4 = 4;\u000a      if (10 < uVar1) {\u000a        do {\u000a          unaff_r6[iVar4 + -1] = (char)unaff_r4;\u000a          iVar4 = iVar4 + -1;\u000a          unaff_r4 = unaff_r4 >> 8;\u000a        } while (0 < iVar4);\u000a        uVar1 = uVar1 - 10;\u000a        iVar4 = 4;\u000a        do {\u000a          unaff_r6[iVar4 + 3] = (char)uVar1;\u000a          iVar4 = iVar4 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar4);\u000a        unaff_r6[8] = 0;\u000a        unaff_r6[9] = 0;\u000a        *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a        unaff_r6[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a        unaff_r6[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a        unaff_r6[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a        puVar9 = unaff_r6 + 0xe;\u000a        if (in_stack_00000028[5] == 1) {\u000a          gfp_00 = (lame_global_flags *)writeUcs2s(puVar9,in_stack_00000028[3],in_stack_00000028[4])\u000a          ;\u000a          *(undefined *)&gfp_00->class_id = 0;\u000a          *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a          iVar4 = lame_get_ReplayGain_input(gfp_00);\u000a          return iVar4;\u000a        }\u000a        iVar4 = in_stack_00000028[4];\u000a        if (iVar4 != 0) {\u000a          puVar7 = (undefined *)in_stack_00000028[3];\u000a          iVar2 = iVar4;\u000a          puVar3 = puVar9;\u000a          do {\u000a            *puVar3 = *puVar7;\u000a            puVar3 = puVar3 + 1;\u000a            puVar7 = puVar7 + 1;\u000a            iVar2 = iVar2 + -1;\u000a          } while (iVar2 != 0);\u000a          puVar9 = puVar9 + iVar4;\u000a        }\u000a        *puVar9 = 0;\u000a        unaff_r6 = puVar9 + 1;\u000a        if (in_stack_00000028[8] == 1) goto LAB_0001e338;\u000a        iVar4 = in_stack_00000028[7];\u000a        if (iVar4 != 0) {\u000a          puVar3 = (undefined *)in_stack_00000028[6];\u000a          iVar2 = iVar4;\u000a          puVar9 = unaff_r6;\u000a          do {\u000a            *puVar9 = *puVar3;\u000a            puVar9 = puVar9 + 1;\u000a            puVar3 = puVar3 + 1;\u000a            iVar2 = iVar2 + -1;\u000a            if (iVar2 == 0) goto LAB_0001e36a;\u000a          } while( true );\u000a        }\u000a      }\u000a      while( true ) {\u000a        in_r3 = (int *)*in_stack_00000028;\u000a        if (in_r3 == (int *)0x0) {\u000a          if (__s != (char *)0x0) {\u000a            iVar4 = 4;\u000a            if ((*in_stack_00000004 != 0) &&\u000a               (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0))\u000a            {\u000a              do {\u000a                unaff_r6[iVar4 + -1] = (char)uVar1;\u000a                iVar4 = iVar4 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a              strlen(__s);\u000a            }\u000a          }\u000a          __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a          if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a            return in_stack_0000002c;\u000a          }\u000a                    /* WARNING: Subroutine does not return */\u000a          __stack_chk_fail();\u000a        }\u000a        unaff_r4 = in_r3[1];\u000a        uVar1 = 0xff;\u000a        iVar4 = 4;\u000a        if ((unaff_r4 == DAT_0001e494) || (uVar5 = in_stack_00000030, unaff_r4 == DAT_0001e498))\u000a        break;\u000a        do {\u000a          uVar8 = uVar1 & 0x57000000;\u000a          uVar10 = in_stack_00000030;\u000a          if (uVar8 != (uVar1 & unaff_r4)) {\u000a            uVar10 = uVar1 & unaff_r4;\u000a          }\u000a          if (uVar8 == 0) {\u000a            uVar10 = uVar8;\u000a          }\u000a          uVar5 = uVar5 | uVar10;\u000a          iVar4 = iVar4 + -1;\u000a          uVar1 = uVar1 << 8;\u000a        } while (iVar4 != 0);\u000a        if (uVar5 == 0) {\u000a          uVar1 = sizeOfWxxxNode(in_r3);\u000a          iVar4 = 4;\u000a          in_stack_00000028 = in_r3;\u000a          if (10 < uVar1) {\u000a            do {\u000a              unaff_r6[iVar4 + -1] = (char)unaff_r4;\u000a              iVar4 = iVar4 + -1;\u000a              unaff_r4 = unaff_r4 >> 8;\u000a            } while (0 < iVar4);\u000a            uVar1 = uVar1 - 10;\u000a            iVar4 = 4;\u000a            do {\u000a              unaff_r6[iVar4 + 3] = (char)uVar1;\u000a              iVar4 = iVar4 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar4);\u000a            unaff_r6[8] = 0;\u000a            unaff_r6[9] = 0;\u000a            puVar9 = unaff_r6 + 10;\u000a            if (in_r3[4] != 0) {\u000a              *(bool *)(unaff_r6 + 10) = in_r3[5] == 1;\u000a              puVar9 = unaff_r6 + 0xb;\u000a              if (in_r3[5] == 1) {\u000a                puVar9 = (undefined *)writeUcs2s(puVar9,in_r3[3],in_r3[4]);\u000a                *puVar9 = 0;\u000a                puVar9[1] = 0;\u000a                puVar9 = puVar9 + 2;\u000a              }\u000a              else {\u000a                iVar4 = in_r3[4];\u000a                if (iVar4 != 0) {\u000a                  puVar7 = (undefined *)in_r3[3];\u000a                  iVar2 = iVar4;\u000a                  puVar3 = puVar9;\u000a                  do {\u000a                    *puVar3 = *puVar7;\u000a                    puVar3 = puVar3 + 1;\u000a                    puVar7 = puVar7 + 1;\u000a                    iVar2 = iVar2 + -1;\u000a                  } while (iVar2 != 0);\u000a                  puVar9 = puVar9 + iVar4;\u000a                }\u000a                *puVar9 = 0;\u000a                puVar9 = puVar9 + 1;\u000a              }\u000a            }\u000a            if (in_r3[8] == 1) {\u000a              unaff_r6 = (undefined *)writeLoBytes(puVar9,in_r3[6],in_r3[7]);\u000a              in_stack_00000028 = in_r3;\u000a            }\u000a            else {\u000a              iVar4 = in_r3[7];\u000a              in_stack_00000028 = in_r3;\u000a              unaff_r6 = puVar9;\u000a              if (iVar4 != 0) {\u000a                puVar7 = (undefined *)in_r3[6];\u000a                iVar2 = iVar4;\u000a                puVar3 = puVar9;\u000a                do {\u000a                  *puVar3 = *puVar7;\u000a                  puVar3 = puVar3 + 1;\u000a                  puVar7 = puVar7 + 1;\u000a                  iVar2 = iVar2 + -1;\u000a                } while (iVar2 != 0);\u000a                in_stack_00000028 = in_r3;\u000a                unaff_r6 = puVar9 + iVar4;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar4 = in_r3[7];\u000a          iVar2 = in_r3[4];\u000a          if (in_r3[8] == 1) {\u000a            iVar6 = iVar2 * 2 + 0xd;\u000a            if (iVar2 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a            iVar4 = iVar4 << 1;\u000a          }\u000a          else {\u000a            iVar6 = iVar2 + 0xc;\u000a            if (iVar2 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a          }\u000a          iVar2 = 4;\u000a          in_stack_00000028 = in_r3;\u000a          if (10 < (uint)(iVar6 + iVar4)) {\u000a            do {\u000a              unaff_r6[iVar2 + -1] = (char)unaff_r4;\u000a              iVar2 = iVar2 + -1;\u000a              unaff_r4 = unaff_r4 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar1 = (iVar6 + iVar4) - 10;\u000a            iVar4 = 4;\u000a            do {\u000a              unaff_r6[iVar4 + 3] = (char)uVar1;\u000a              iVar4 = iVar4 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar4);\u000a            unaff_r6[8] = 0;\u000a            unaff_r6[9] = 0;\u000a            *(bool *)(unaff_r6 + 10) = in_r3[8] == 1;\u000a            unaff_r6 = unaff_r6 + 0xb;\u000a            iVar4 = in_r3[4];\u000a            if (iVar4 != 0) {\u000a              if (in_r3[5] == 1) {\u000a                puVar9 = (undefined *)writeUcs2s(unaff_r6,in_r3[3]);\u000a                *puVar9 = 0;\u000a                puVar9[1] = 0;\u000a                unaff_r6 = puVar9 + 2;\u000a              }\u000a              else {\u000a                puVar3 = (undefined *)in_r3[3];\u000a                iVar2 = iVar4;\u000a                puVar9 = unaff_r6;\u000a                do {\u000a                  *puVar9 = *puVar3;\u000a                  puVar9 = puVar9 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar2 = iVar2 + -1;\u000a                } while (iVar2 != 0);\u000a                unaff_r6[iVar4] = 0;\u000a                unaff_r6 = unaff_r6 + iVar4 + 1;\u000a              }\u000a            }\u000a            in_stack_00000028 = in_r3;\u000a            if (in_r3[8] == 1) {\u000aLAB_0001e338:\u000a              unaff_r6 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[6],in_stack_00000028[7])\u000a              ;\u000a            }\u000a            else {\u000a              iVar4 = in_r3[7];\u000a              in_stack_00000028 = in_r3;\u000a              if (iVar4 != 0) {\u000a                puVar3 = (undefined *)in_r3[6];\u000a                iVar2 = iVar4;\u000a                puVar9 = unaff_r6;\u000a                do {\u000a                  *puVar9 = *puVar3;\u000a                  puVar9 = puVar9 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar2 = iVar2 + -1;\u000a                  in_stack_00000028 = in_r3;\u000a                } while (iVar2 != 0);\u000aLAB_0001e36a:\u000a                unaff_r6 = unaff_r6 + iVar4;\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a      iVar4 = in_r3[4] * 2 + 0x10;\u000a      in_r1 = in_r3[4] + 0xf;\u000a      in_stack_00000028 = in_r3;\u000a    } while (in_r3[5] == 1);\u000a  } while( true );\u000a}\u000a\u000a
p248
S'push { r1 }\npop { r0 }\n'
p249
S'02 b4\n01 bc\n'
p250
S'.text:0001e0cc\n.text:0001e0ce\n'
p251
tp252
sS'local_ucs2_strdup'
p253
(S'\n__stdcall local_ucs2_strdup()\n'
p254
V\u000aundefined4 local_ucs2_strdup(void **ppvParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  \u000a  if (ppvParm1 != (void **)0x0) {\u000a    free(*ppvParm1);\u000a    *ppvParm1 = (void *)0x0;\u000a    iVar4 = -2;\u000a    iVar3 = -1;\u000a    if (iParm2 != 0) {\u000a      do {\u000a        iVar2 = iVar3;\u000a        iVar1 = iParm2 + iVar4;\u000a        iVar4 = iVar4 + 2;\u000a        iVar3 = iVar2 + 1;\u000a      } while (*(short *)(iVar1 + 2) != 0);\u000a      if (iVar3 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        calloc(iVar2 + 2,2);\u000a      }\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p255
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\n'
p256
S'f0 b5\n03 af\n'
p257
S'.text:0001e934\n.text:0001e936\n'
p258
tp259
sS'lame_set_VBR_hard_min'
p260
(S'\n__stdcall lame_set_VBR_hard_min(lame_global_flags * gfp, int VBR_hard_min)\n'
p261
V\u000aint lame_set_VBR_hard_min(lame_global_flags *gfp,int VBR_hard_min)\u000a\u000a{\u000a  undefined4 unaff_r4;\u000a  int unaff_r5;\u000a  int unaff_r6;\u000a  int in_stack_00000000;\u000a  int in_stack_00000008;\u000a  int *in_stack_0000000c;\u000a  \u000a  *in_stack_0000000c = in_stack_00000000;\u000a  if (in_stack_00000000 != 0) {\u000a    __aeabi_memcpy(in_stack_00000000,unaff_r4,unaff_r6);\u000a    *(undefined2 *)(in_stack_00000000 + unaff_r6) = 0;\u000a    in_stack_00000008 = unaff_r5;\u000a  }\u000a  return in_stack_00000008;\u000a}\u000a\u000a
p262
S'pop { r1 }\nldr r0,[sp,#0x8]\nstr r1,[r0,#0x0]\ncmp r1,#0x0\nldr r0,[sp,#0x4]\nbeq 0x0001e9a6\npush { r1 }\npop { r0 }\nstr r1,[sp,#0x8]\npush { r4 }\npop { r1 }\npush { r6 }\npop { r2 }\nbl 0x000379c0\nmov r0,#0x0\nldr r1,[sp,#0x8]\nstrh r0,[r1,r6]\npush { r5 }\npop { r0 }\nb 0x0001e9a6\n'
p263
S'02 bc\n02 98\n01 60\n00 29\n01 98\n0f d0\n02 b4\n01 bc\n02 91\n10 b4\n02 bc\n40 b4\n04 bc\n19 f0 14 f8\n00 20\n02 99\n88 53\n20 b4\n01 bc\n00 e0\n'
p264
S'.text:0001e97a\n.text:0001e97c\n.text:0001e97e\n.text:0001e980\n.text:0001e982\n.text:0001e984\n.text:0001e986\n.text:0001e988\n.text:0001e98a\n.text:0001e98c\n.text:0001e98e\n.text:0001e990\n.text:0001e992\n.text:0001e994\n.text:0001e998\n.text:0001e99a\n.text:0001e99c\n.text:0001e99e\n.text:0001e9a0\n.text:0001e9a2\n'
p265
tp266
sS'_Unwind_GetCFA'
p267
(S'\n__stdcall _Unwind_GetCFA()\n'
p268
V\u000aundefined4 _Unwind_GetCFA(int iParm1)\u000a\u000a{\u000a  return *(undefined4 *)(iParm1 + 0x44);\u000a}\u000a\u000a
p269
S'ldr r0,[r0,#0x44]\nbx lr\n'
p270
S'44 00 90 e5\n1e ff 2f e1\n'
p271
S'.text:000367e8\n.text:000367ec\n'
p272
tp273
sS'id3v2_add_latin1'
p274
(S'\n__stdcall id3v2_add_latin1(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p275
V\u000aundefined4\u000aid3v2_add_latin1(int param_1,int *param_2,undefined4 param_3,int param_4,undefined4 param_5)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  int **ppiVar3;\u000a  int iVar4;\u000a  int *piVar5;\u000a  int **ppiVar6;\u000a  int *piVar7;\u000a  int iVar8;\u000a  int **ppiVar9;\u000a  \u000a  if (param_1 == 0) {\u000a    return 0xffffff01;\u000a  }\u000a  iVar8 = *(int *)(param_1 + 0x120);\u000a  if (iVar8 == 0) {\u000a    return 0xffffff01;\u000a  }\u000a  ppiVar3 = *(int ***)(iVar8 + DAT_0001d538);\u000a  ppiVar6 = (int **)(iVar8 + DAT_0001d538);\u000a  while ((ppiVar9 = (int **)0x0, ppiVar3 != (int **)0x0 &&\u000a         (ppiVar9 = ppiVar3, ppiVar3[1] != param_2))) {\u000a    ppiVar3 = (int **)*ppiVar3;\u000a  }\u000a  if (DAT_0001d53c < (int)param_2) {\u000a    if (DAT_0001d540 < (int)param_2) {\u000a      if ((param_2 != DAT_0001d544) && (piVar5 = DAT_0001d54c, param_2 != DAT_0001d548))\u000a      goto LAB_0001d446;\u000a    }\u000a    else {\u000a      if ((param_2 != DAT_0001d550) && (piVar5 = DAT_0001d558, param_2 != DAT_0001d554))\u000a      goto LAB_0001d446;\u000a    }\u000a  }\u000a  else {\u000a    if (DAT_0001d55c < (int)param_2) {\u000a      if ((param_2 != DAT_0001d560) && (piVar5 = DAT_0001d568, param_2 != DAT_0001d564))\u000a      goto LAB_0001d446;\u000a    }\u000a    else {\u000a      if ((param_2 != DAT_0001d56c) && (piVar5 = DAT_0001d574, param_2 != DAT_0001d570)) {\u000aLAB_0001d446:\u000a        if (param_2 != piVar5) {\u000a          if (ppiVar9 != (int **)0x0) {\u000aLAB_0001d4ee:\u000a            ppiVar9[1] = param_2;\u000a            setLang(ppiVar9 + 2,param_3);\u000a            piVar5 = (int *)local_strdup(ppiVar9 + 3,param_4);\u000a            ppiVar9[4] = piVar5;\u000a            ppiVar9[5] = (int *)0x0;\u000a            piVar5 = (int *)local_strdup(ppiVar9 + 6,param_5);\u000a            ppiVar9[7] = piVar5;\u000a            ppiVar9[8] = (int *)0x0;\u000a            *(uint *)(iVar8 + DAT_0001d57c) = *(uint *)(iVar8 + DAT_0001d57c) | 3;\u000a            return 0;\u000a          }\u000a          goto LAB_0001d4ae;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  if (ppiVar9 != (int **)0x0) {\u000a    do {\u000a      iVar4 = isSameLang(ppiVar9 + 2,param_3);\u000a      if (iVar4 != 0) {\u000a        piVar5 = ppiVar9[4];\u000a        if (ppiVar9[5] == (int *)0x1) {\u000a          if (piVar5 == (int *)0x0) goto LAB_0001d4ee;\u000a        }\u000a        else {\u000a          if (piVar5 == (int *)0x0) goto LAB_0001d4ee;\u000a          if (param_4 != 0) {\u000a            piVar7 = (int *)0x0;\u000a            while (pcVar1 = (char *)(param_4 + (int)piVar7),\u000a                  pcVar2 = (char *)((int)ppiVar9[3] + (int)piVar7),\u000a                  piVar7 = (int *)((int)piVar7 + 1), *pcVar2 == *pcVar1) {\u000a              if (piVar5 <= piVar7) goto LAB_0001d4ee;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      ppiVar3 = ppiVar6;\u000a      if (ppiVar9 != (int **)0x0) {\u000a        ppiVar3 = ppiVar9;\u000a      }\u000a      ppiVar9 = (int **)*ppiVar3;\u000a      while( true ) {\u000a        if (ppiVar9 == (int **)0x0) goto LAB_0001d4ae;\u000a        if (ppiVar9[1] == param_2) break;\u000a        ppiVar9 = (int **)*ppiVar9;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_0001d4ae:\u000a                    /* WARNING: Subroutine does not return */\u000a  calloc(1,0x24);\u000a}\u000a\u000a
p276
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\nstr r3,[sp,#0x10]\npush { r1 }\npop { r6 }\nmov r1,#0xfe\nmvn r4,r1\ncmp r0,#0x0\nbne 0x0001d3c6\nb 0x0001d530\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r3,[r0,r1]\ncmp r3,#0x0\nbne 0x0001d3d2\nb 0x0001d530\nldr r1,[0x0001d538]\nldr r0,[r3,r1]\nadd r1,r3,r1\nstr r1,[sp,#0xc]\nmov r5,#0x0\nb 0x0001d3e0\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x0001d3ee\nldr r1,[r0,#0x4]\ncmp r1,r6\nbne 0x0001d3de\npush { r0 }\npop { r5 }\nldr r0,[0x0001d53c]\ncmp r6,r0\nbgt 0x0001d40c\nldr r0,[0x0001d55c]\ncmp r6,r0\nbgt 0x0001d424\nstr r3,[sp,#0x8]\nldr r0,[0x0001d56c]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d570]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d574]\nb 0x0001d446\nldr r0,[0x0001d540]\ncmp r6,r0\nbgt 0x0001d436\nstr r3,[sp,#0x8]\nldr r0,[0x0001d550]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d554]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d558]\nb 0x0001d446\nstr r3,[sp,#0x8]\nldr r0,[0x0001d560]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d564]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d568]\nb 0x0001d446\nstr r3,[sp,#0x8]\nldr r0,[0x0001d544]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d548]\ncmp r6,r0\nbeq 0x0001d44a\nldr r0,[0x0001d54c]\ncmp r6,r0\nbne 0x0001d4ea\ncmp r5,#0x0\nbeq 0x0001d4ae\npush { r5 }\npop { r0 }\nadd r0,#0x8\npush { r2 }\npop { r1 }\nstr r2,[sp,#0x4]\nbl 0x0001e86c\ncmp r0,#0x0\nbeq 0x0001d490\nldr r0,[r5,#0x10]\nldr r1,[r5,#0x14]\ncmp r1,#0x1\nbne 0x0001d470\ncmp r0,#0x0\nbne 0x0001d490\nb 0x0001d4e6\ncmp r0,#0x0\nbeq 0x0001d4e6\nldr r1,[sp,#0x10]\ncmp r1,#0x0\nbeq 0x0001d490\nldr r1,[r5,#0xc]\nmov r2,#0x0\nldr r3,[sp,#0x10]\nldrb r3,[r3,r2]\nldrb r4,[r1,r2]\nadd r2,#0x1\ncmp r4,r3\nbne 0x0001d490\ncmp r2,r0\nbcc 0x0001d47e\nb 0x0001d4e6\ncmp r5,#0x0\nldr r0,[sp,#0xc]\nbeq 0x0001d49a\npush { r5 }\npop { r0 }\nldr r5,[r0,#0x0]\ncmp r5,#0x0\nldr r2,[sp,#0x4]\nbeq 0x0001d4ae\nldr r0,[r5,#0x4]\ncmp r0,r6\nbeq 0x0001d44e\nldr r5,[r5,#0x0]\ncmp r5,#0x0\nbne 0x0001d4a2\nmov r0,#0x1\nmov r1,#0x24\npush { r2 }\npop { r4 }\nbl 0x00037cb0\nldr r2,[sp,#0x4]\nb 0x0001d4ee\ncmp r5,#0x0\nbeq 0x0001d4ae\nldr r0,[sp,#0x28]\nstr r0,[sp,#0xc]\nstr r6,[r5,#0x4]\npush { r5 }\npop { r0 }\nadd r0,#0x8\npush { r2 }\npop { r1 }\nbl 0x0001e8f8\npush { r5 }\npop { r0 }\nadd r0,#0xc\nldr r1,[sp,#0x10]\nbl 0x0001d66c\nmov r4,#0x0\nstr r0,[r5,#0x10]\nstr r4,[r5,#0x14]\npush { r5 }\npop { r0 }\nadd r0,#0x18\nldr r1,[sp,#0xc]\nbl 0x0001d66c\nstr r0,[r5,#0x1c]\nstr r4,[r5,#0x20]\nldr r0,[0x0001d57c]\nldr r3,[sp,#0x8]\nldr r1,[r3,r0]\nmov r2,#0x3\norr r2,r1\nstr r2,[r3,r0]\npush { r4 }\npop { r0 }\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p277
S'f0 b5\n03 af\n85 b0\n04 93\n02 b4\n40 bc\nfe 21\ncc 43\n00 28\n00 d1\nb4 e0\n09 21\n49 01\n43 58\n00 2b\n00 d1\nae e0\n59 49\n58 58\n59 18\n03 91\n00 25\n00 e0\n00 68\n00 28\n04 d0\n41 68\nb1 42\nf9 d1\n01 b4\n20 bc\n53 48\n86 42\n0b dc\n59 48\n86 42\n14 dc\n02 93\n5b 48\n86 42\n23 d0\n5b 48\n86 42\n20 d0\n5a 48\n1c e0\n4c 48\n86 42\n11 dc\n02 93\n4e 48\n86 42\n17 d0\n4e 48\n86 42\n14 d0\n4d 48\n10 e0\n02 93\n4e 48\n86 42\n0e d0\n4d 48\n86 42\n0b d0\n4d 48\n07 e0\n02 93\n42 48\n86 42\n05 d0\n42 48\n86 42\n02 d0\n41 48\n86 42\n4f d1\n00 2d\n2f d0\n20 b4\n01 bc\n08 30\n04 b4\n02 bc\n01 92\n01 f0 07 fa\n00 28\n16 d0\n28 69\n69 69\n01 29\n02 d1\n00 28\n10 d1\n3a e0\n00 28\n38 d0\n04 99\n00 29\n0a d0\ne9 68\n00 22\n04 9b\n9b 5c\n8c 5c\n01 32\n9c 42\n02 d1\n82 42\nf7 d3\n2a e0\n00 2d\n03 98\n01 d0\n20 b4\n01 bc\n05 68\n00 2d\n01 9a\n05 d0\n68 68\nb0 42\nd2 d0\n2d 68\n00 2d\nf9 d1\n01 20\n24 21\n04 b4\n10 bc\n1a f0 fb fb\n01 9a\n01 e0\n00 2d\ndf d0\n0a 98\n03 90\n6e 60\n20 b4\n01 bc\n08 30\n04 b4\n02 bc\n01 f0 fb f9\n20 b4\n01 bc\n0c 30\n04 99\n00 f0 af f8\n00 24\n28 61\n6c 61\n20 b4\n01 bc\n18 30\n03 99\n00 f0 a6 f8\ne8 61\n2c 62\n15 48\n02 9b\n19 58\n03 22\n0a 43\n1a 50\n10 b4\n01 bc\n05 b0\nf0 bd\n'
p278
S'.text:0001d3b0\n.text:0001d3b2\n.text:0001d3b4\n.text:0001d3b6\n.text:0001d3b8\n.text:0001d3ba\n.text:0001d3bc\n.text:0001d3be\n.text:0001d3c0\n.text:0001d3c2\n.text:0001d3c4\n.text:0001d3c6\n.text:0001d3c8\n.text:0001d3ca\n.text:0001d3cc\n.text:0001d3ce\n.text:0001d3d0\n.text:0001d3d2\n.text:0001d3d4\n.text:0001d3d6\n.text:0001d3d8\n.text:0001d3da\n.text:0001d3dc\n.text:0001d3de\n.text:0001d3e0\n.text:0001d3e2\n.text:0001d3e4\n.text:0001d3e6\n.text:0001d3e8\n.text:0001d3ea\n.text:0001d3ec\n.text:0001d3ee\n.text:0001d3f0\n.text:0001d3f2\n.text:0001d3f4\n.text:0001d3f6\n.text:0001d3f8\n.text:0001d3fa\n.text:0001d3fc\n.text:0001d3fe\n.text:0001d400\n.text:0001d402\n.text:0001d404\n.text:0001d406\n.text:0001d408\n.text:0001d40a\n.text:0001d40c\n.text:0001d40e\n.text:0001d410\n.text:0001d412\n.text:0001d414\n.text:0001d416\n.text:0001d418\n.text:0001d41a\n.text:0001d41c\n.text:0001d41e\n.text:0001d420\n.text:0001d422\n.text:0001d424\n.text:0001d426\n.text:0001d428\n.text:0001d42a\n.text:0001d42c\n.text:0001d42e\n.text:0001d430\n.text:0001d432\n.text:0001d434\n.text:0001d436\n.text:0001d438\n.text:0001d43a\n.text:0001d43c\n.text:0001d43e\n.text:0001d440\n.text:0001d442\n.text:0001d444\n.text:0001d446\n.text:0001d448\n.text:0001d44a\n.text:0001d44c\n.text:0001d44e\n.text:0001d450\n.text:0001d452\n.text:0001d454\n.text:0001d456\n.text:0001d458\n.text:0001d45a\n.text:0001d45e\n.text:0001d460\n.text:0001d462\n.text:0001d464\n.text:0001d466\n.text:0001d468\n.text:0001d46a\n.text:0001d46c\n.text:0001d46e\n.text:0001d470\n.text:0001d472\n.text:0001d474\n.text:0001d476\n.text:0001d478\n.text:0001d47a\n.text:0001d47c\n.text:0001d47e\n.text:0001d480\n.text:0001d482\n.text:0001d484\n.text:0001d486\n.text:0001d488\n.text:0001d48a\n.text:0001d48c\n.text:0001d48e\n.text:0001d490\n.text:0001d492\n.text:0001d494\n.text:0001d496\n.text:0001d498\n.text:0001d49a\n.text:0001d49c\n.text:0001d49e\n.text:0001d4a0\n.text:0001d4a2\n.text:0001d4a4\n.text:0001d4a6\n.text:0001d4a8\n.text:0001d4aa\n.text:0001d4ac\n.text:0001d4ae\n.text:0001d4b0\n.text:0001d4b2\n.text:0001d4b4\n.text:0001d4b6\n.text:0001d4e6\n.text:0001d4e8\n.text:0001d4ea\n.text:0001d4ec\n.text:0001d4ee\n.text:0001d4f0\n.text:0001d4f2\n.text:0001d4f4\n.text:0001d4f6\n.text:0001d4f8\n.text:0001d4fa\n.text:0001d4fc\n.text:0001d4fe\n.text:0001d502\n.text:0001d504\n.text:0001d506\n.text:0001d508\n.text:0001d50a\n.text:0001d50e\n.text:0001d510\n.text:0001d512\n.text:0001d514\n.text:0001d516\n.text:0001d518\n.text:0001d51a\n.text:0001d51c\n.text:0001d520\n.text:0001d522\n.text:0001d524\n.text:0001d526\n.text:0001d528\n.text:0001d52a\n.text:0001d52c\n.text:0001d52e\n.text:0001d530\n.text:0001d532\n.text:0001d534\n.text:0001d536\n'
p279
tp280
sS'ResvAdjust'
p281
(S'\n__stdcall ResvAdjust()\n'
p282
V\u000avoid ResvAdjust(void)\u000a\u000a{\u000a  (*(VBR_encode_frame + DAT_0003838c))();\u000a  return;\u000a}\u000a\u000a
p283
S'ldr r12,[0x3838c]\nadd pc,r12,pc\n'
p284
S'00 c0 9f e5\n0f f0 8c e0\n'
p285
S'.text:00038384\n.text:00038388\n'
p286
tp287
sS'__gnu_Unwind_Resume_or_Rethrow'
p288
(S'\n__stdcall __gnu_Unwind_Resume_or_Rethrow()\n'
p289
V\u000avoid __gnu_Unwind_Resume_or_Rethrow(int iParm1,int iParm2)\u000a\u000a{\u000a  if (*(int *)(iParm1 + 0xc) == 0) {\u000a    __gnu_Unwind_RaiseException();\u000a    return;\u000a  }\u000a  *(undefined4 *)(iParm2 + 0x40) = *(undefined4 *)(iParm2 + 0x3c);\u000a  unwind_phase2_forced(iParm1,iParm2,0);\u000a  return;\u000a}\u000a\u000a
p290
S'ldr r2,[r0,#0xc]\ncmp r2,#0x0\nbne 0x00036934\nb 0x00016c18\nldr r2,[r1,#0x3c]\nstr r2,[r1,#0x40]\nmov r2,#0x0\nb 0x000366c0\n'
p291
S'0c 20 90 e5\n00 00 52 e3\n00 00 00 1a\nb8 80 ff ea\n3c 20 91 e5\n40 20 81 e5\n00 20 a0 e3\n5e ff ff ea\n'
p292
S'.text:00036924\n.text:00036928\n.text:0003692c\n.text:00036930\n.text:00036934\n.text:00036938\n.text:0003693c\n.text:00036940\n'
p293
tp294
sS'Huffmancode'
p295
(S'\n__stdcall Huffmancode(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p296
V\u000a/* WARNING: Removing unreachable block (ram,0x0001a13a) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a2a0) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a2a8) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a300) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a2cc) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a302) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a30e) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a316) */\u000a/* WARNING: Removing unreachable block (ram,0x0001a31a) */\u000a\u000aint Huffmancode(int param_1,uint param_2,int param_3,int param_4,int param_5)\u000a\u000a{\u000a  byte bVar1;\u000a  ushort uVar2;\u000a  uint *puVar3;\u000a  byte *pbVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint *puVar8;\u000a  int *piVar9;\u000a  int *piVar10;\u000a  int *piVar11;\u000a  ushort *puVar12;\u000a  uint uVar13;\u000a  int iVar14;\u000a  int iVar15;\u000a  \u000a  iVar15 = 0;\u000a  if ((param_2 != 0) && (param_3 < param_4)) {\u000a    puVar8 = (uint *)(param_1 + DAT_0001a364);\u000a    piVar9 = (int *)(param_1 + 0x11c);\u000a    piVar10 = (int *)(param_1 + 0x124);\u000a    piVar11 = (int *)(param_1 + 0x128);\u000a    puVar3 = (uint *)(param_1 + 300);\u000a    iVar15 = *(int *)(DAT_0001a368 + 0x1a0ea) + param_2 * 0x10;\u000a    puVar12 = *(ushort **)(iVar15 + 8);\u000a    pbVar4 = *(byte **)(iVar15 + 0xc);\u000a    iVar15 = 0;\u000a    do {\u000a      iVar5 = (param_3 + 1) * 4;\u000a      uVar6 = *(uint *)(param_5 + 0x900 + iVar5);\u000a      if (*(int *)(param_5 + 0x900 + param_3 * 4) != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_fcmplt(*(undefined4 *)(param_5 + param_3 * 4),0);\u000a      }\u000a      if (((0xf < param_2) && (0xe < uVar6)) || (uVar6 != 0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_fcmplt(*(undefined4 *)(param_5 + iVar5),0);\u000a      }\u000a      bVar1 = *pbVar4;\u000a      if (bVar1 != 0) {\u000a        uVar2 = *puVar12;\u000a        uVar6 = (uint)bVar1;\u000a        do {\u000a          uVar13 = *puVar3;\u000a          if (uVar13 == 0) {\u000a            *puVar3 = 8;\u000a            iVar5 = *piVar11 + 1;\u000a            *piVar11 = iVar5;\u000a            iVar14 = param_1 + *puVar8 * 0x30;\u000a            if (*(int *)(iVar14 + DAT_0001a37c) == *piVar10) {\u000a              __aeabi_memcpy(*piVar9 + iVar5,iVar14 + DAT_0001a380,*(undefined4 *)(param_1 + 0x18));\u000a              iVar5 = *piVar11 + *(int *)(param_1 + 0x18);\u000a              *piVar11 = iVar5;\u000a              *piVar10 = *piVar10 + *(int *)(param_1 + 0x18) * 8;\u000a              *puVar8 = *puVar8 + 1 & 0xff;\u000a            }\u000a            *(undefined *)(*piVar9 + iVar5) = 0;\u000a            uVar13 = *puVar3;\u000a          }\u000a          uVar7 = uVar6;\u000a          if ((int)uVar13 <= (int)uVar6) {\u000a            uVar7 = uVar13;\u000a          }\u000a          *puVar3 = uVar13 - uVar7;\u000a          uVar6 = uVar6 - uVar7;\u000a          *(byte *)(*piVar9 + *piVar11) =\u000a               *(byte *)(*piVar9 + *piVar11) | (char)(uVar2 >> uVar6) << uVar13 - uVar7;\u000a          *piVar10 = *piVar10 + uVar7;\u000a        } while (0 < (int)uVar6);\u000a      }\u000a      iVar15 = iVar15 + (uint)bVar1;\u000a      param_3 = param_3 + 2;\u000a    } while (param_3 < param_4);\u000a  }\u000a  return iVar15;\u000a}\u000a\u000a
p297
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x54\nstr r3,[sp,#0x14]\npush { r2 }\npop { r4 }\nstr r1,[sp,#0x10]\nlsl r2,r1,#0x4\nmov r5,#0x0\ncmp r1,#0x0\nbne 0x0001a0a8\nb 0x0001a358\ncmp r4,r3\nblt 0x0001a0ae\nb 0x0001a358\nldr r1,[0x0001a360]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,r2]\nstr r1,[sp,#0x8]\nldr r1,[sp,#0x68]\nstr r1,[sp,#0x28]\nldr r1,[0x0001a364]\nstr r0,[sp,#0x34]\nadd r1,r0,r1\nstr r1,[sp,#0x44]\nmov r1,#0x47\nlsl r1,r1,#0x2\nadd r1,r0,r1\nstr r1,[sp,#0x4c]\nmov r1,#0x49\nlsl r1,r1,#0x2\nadd r1,r0,r1\nstr r1,[sp,#0x48]\nmov r1,#0x25\nlsl r1,r1,#0x3\nadd r1,r0,r1\nstr r1,[sp,#0x50]\nmov r1,#0x4b\nlsl r1,r1,#0x2\nadd r0,r0,r1\nstr r0,[sp,#0x38]\nldr r1,[0x0001a368]\nadd r1,pc\nldr r1,[r1,#0x0]\nadd r0,r1,r2\nldr r1,[r0,#0x8]\nstr r1,[sp,#0x4]\nldr r0,[r0,#0xc]\nstr r0,[sp,#0xc]\nmov r5,#0x0\nstr r5,[sp,#0x1c]\nmov r0,#0x9\nlsl r0,r0,#0x8\nldr r1,[sp,#0x28]\nadd r1,r1,r0\nadd r0,r4,#0x1\nlsl r0,r0,#0x2\nstr r0,[sp,#0x18]\nldr r0,[r1,r0]\nstr r0,[sp,#0x30]\nlsl r0,r4,#0x2\nldr r6,[r1,r0]\ncmp r6,#0x0\nldr r1,[sp,#0x1c]\npush { r1 }\npop { r2 }\nbeq 0x0001a12e\nldr r1,[sp,#0x28]\nldr r0,[r1,r0]\nmov r1,#0x0\nbl 0x00037a30\nldr r0,[sp,#0x10]\ncmp r0,#0x10\nbcc 0x0001a156\nmov r0,#0x0\ncmp r6,#0xf\nbcc 0x0001a166\nstr r2,[sp,#0x3c]\nstr r5,[sp,#0x20]\nstr r4,[sp,#0x24]\nlsl r0,r6,#0x1\nldr r2,[0x0001a370]\nadd r0,r0,r2\nldr r2,[0x0001a374]\nand r2,r0\norr r1,r2\nmov r0,#0xf\nstr r0,[sp,#0x2c]\nldr r5,[sp,#0x8]\nldr r4,[sp,#0x30]\nb 0x0001a174\nstr r6,[sp,#0x2c]\nstr r5,[sp,#0x20]\nstr r4,[sp,#0x24]\nldr r5,[sp,#0x1c]\nldr r6,[sp,#0x8]\nstr r1,[sp,#0x40]\nldr r4,[sp,#0x30]\nb 0x0001a198\nstr r2,[sp,#0x3c]\nstr r6,[sp,#0x2c]\nstr r5,[sp,#0x20]\nstr r4,[sp,#0x24]\nldr r4,[sp,#0x30]\npush { r0 }\npop { r5 }\nmov r6,#0x10\ncmp r4,#0xf\nbcc 0x0001a194\nldr r2,[sp,#0x8]\nlsl r1,r2\nldr r0,[0x0001a378]\nadd r3,r4,r0\nldr r0,[0x0001a36c]\nand r3,r0\norr r3,r1\nstr r3,[sp,#0x40]\nand r5,r0\nadd r5,r5,r2\nmov r6,#0x10\nmov r4,#0xf\nb 0x0001a19e\nstr r1,[sp,#0x40]\nldr r2,[sp,#0x3c]\nstr r2,[sp,#0x3c]\ncmp r4,#0x0\nbeq 0x0001a1c4\nldr r0,[sp,#0x28]\nldr r1,[sp,#0x18]\nldr r0,[r0,r1]\nmov r1,#0x0\nbl 0x00037a30\nldr r4,[sp,#0x1c]\nldr r3,[sp,#0x48]\nldr r1,[sp,#0x3c]\nldr r0,[0x0001a36c]\nand r0,r5\nlsl r1,r1,#0x10\nasr r1,r1,#0x10\nsub r0,r0,r1\nstr r0,[sp,#0x30]\nldr r0,[sp,#0x2c]\nmul r0,r6\nadd r2,r0,r4\nlsl r0,r2,#0x1\nldr r4,[sp,#0xc]\nldrb r2,[r4,r2]\nadd r1,r2,r1\nstr r1,[sp,#0x2c]\ncmp r1,#0x1\nldr r5,[sp,#0x38]\nblt 0x0001a294\nldr r1,[sp,#0x4]\nldrh r0,[r1,r0]\nstr r0,[sp,#0x3c]\nldr r6,[sp,#0x2c]\nldr r1,[r5,#0x0]\ncmp r1,#0x0\nldr r4,[sp,#0x50]\nbne 0x0001a262\nmov r0,#0x8\nstr r0,[r5,#0x0]\nldr r0,[r4,#0x0]\nadd r0,#0x1\nstr r0,[r4,#0x0]\nldr r1,[sp,#0x44]\nldr r1,[r1,#0x0]\nmov r2,#0x30\nmul r2,r1\nldr r4,[sp,#0x34]\nadd r1,r4,r2\nldr r2,[0x0001a37c]\nldr r2,[r1,r2]\npush { r3 }\npop { r5 }\nldr r3,[r5,#0x0]\ncmp r2,r3\nbne 0x0001a254\nldr r2,[sp,#0x4c]\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nldr r2,[0x0001a380]\nadd r1,r1,r2\nldr r2,[r4,#0x18]\nbl 0x000379c0\nldr r1,[r4,#0x18]\nldr r3,[sp,#0x50]\nldr r0,[r3,#0x0]\nadd r0,r0,r1\nstr r0,[r3,#0x0]\nlsl r1,r1,#0x3\nldr r2,[r5,#0x0]\nadd r1,r2,r1\nstr r1,[r5,#0x0]\nldr r4,[sp,#0x44]\nldr r1,[r4,#0x0]\nadd r1,#0x1\nmov r2,#0xff\nand r2,r1\nstr r2,[r4,#0x0]\npush { r3 }\npop { r4 }\nb 0x0001a256\nldr r4,[sp,#0x50]\nldr r1,[sp,#0x4c]\nldr r1,[r1,#0x0]\nmov r2,#0x0\nstrb r2,[r1,r0]\nldr r5,[sp,#0x38]\nldr r1,[r5,#0x0]\ncmp r6,r1\npush { r6 }\npop { r0 }\nblt 0x0001a26e\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r5,#0x0]\nsub r6,r6,r0\nldr r2,[sp,#0x3c]\nlsr r2,r6\nlsl r2,r1\nldr r1,[r4,#0x0]\nstr r4,[sp,#0x50]\nldr r3,[sp,#0x4c]\nldr r3,[r3,#0x0]\nldrb r4,[r3,r1]\norr r4,r2\nstrb r4,[r3,r1]\nldr r3,[sp,#0x48]\nldr r1,[r3,#0x0]\nadd r0,r1,r0\nstr r0,[r3,#0x0]\ncmp r6,#0x0\nbgt 0x0001a1f4\nldr r0,[0x0001a36c]\nldr r6,[sp,#0x30]\nand r6,r0\nstr r6,[sp,#0x30]\ncmp r6,#0x0\nbeq 0x0001a340\nldr r1,[r5,#0x0]\ncmp r1,#0x0\nldr r4,[sp,#0x50]\nbne 0x0001a30e\nmov r0,#0x8\nstr r0,[r5,#0x0]\nldr r0,[r4,#0x0]\nadd r0,#0x1\nstr r0,[r4,#0x0]\nldr r1,[sp,#0x44]\nldr r1,[r1,#0x0]\nmov r2,#0x30\nmul r2,r1\nldr r4,[sp,#0x34]\nadd r1,r4,r2\nldr r2,[0x0001a37c]\nldr r2,[r1,r2]\npush { r3 }\npop { r5 }\nldr r3,[r5,#0x0]\ncmp r2,r3\nbne 0x0001a300\nldr r2,[sp,#0x4c]\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nldr r2,[0x0001a380]\nadd r1,r1,r2\nldr r2,[r4,#0x18]\nbl 0x000379c0\nldr r1,[r4,#0x18]\nldr r3,[sp,#0x50]\nldr r0,[r3,#0x0]\nadd r0,r0,r1\nstr r0,[r3,#0x0]\nlsl r1,r1,#0x3\nldr r2,[r5,#0x0]\nadd r1,r2,r1\nstr r1,[r5,#0x0]\nldr r4,[sp,#0x44]\nldr r1,[r4,#0x0]\nadd r1,#0x1\nmov r2,#0xff\nand r2,r1\nstr r2,[r4,#0x0]\npush { r3 }\npop { r4 }\nb 0x0001a302\nldr r4,[sp,#0x50]\nldr r1,[sp,#0x4c]\nldr r1,[r1,#0x0]\nmov r2,#0x0\nstrb r2,[r1,r0]\nldr r5,[sp,#0x38]\nldr r1,[r5,#0x0]\ncmp r6,r1\npush { r6 }\npop { r0 }\nblt 0x0001a31a\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r5,#0x0]\nsub r6,r6,r0\nldr r2,[sp,#0x40]\nasr r2,r6\nlsl r2,r1\nldr r1,[r4,#0x0]\nstr r4,[sp,#0x50]\nldr r3,[sp,#0x4c]\nldr r3,[r3,#0x0]\nldrb r4,[r3,r1]\norr r4,r2\nstrb r4,[r3,r1]\nldr r3,[sp,#0x48]\nldr r1,[r3,#0x0]\nadd r0,r1,r0\nstr r0,[r3,#0x0]\ncmp r6,#0x0\nbgt 0x0001a2a0\nstr r5,[sp,#0x38]\nldr r0,[sp,#0x20]\nldr r1,[sp,#0x30]\nadd r0,r1,r0\nldr r1,[sp,#0x2c]\nadd r5,r0,r1\nldr r4,[sp,#0x24]\nadd r4,#0x2\nldr r0,[sp,#0x14]\ncmp r4,r0\nbge 0x0001a358\nb 0x0001a0f8\npush { r5 }\npop { r0 }\nadd sp,#0x54\npop { r4, r5, r6, r7, pc }\n'
p298
S'f0 b5\n03 af\n95 b0\n05 93\n04 b4\n10 bc\n04 91\n0a 01\n00 25\n00 29\n00 d1\n57 e1\n9c 42\n00 db\n54 e1\nac 49\n79 44\n09 68\n89 58\n02 91\n1a 99\n0a 91\na9 49\n0d 90\n41 18\n11 91\n47 21\n89 00\n41 18\n13 91\n49 21\n89 00\n41 18\n12 91\n25 21\nc9 00\n41 18\n14 91\n4b 21\n89 00\n40 18\n0e 90\na0 49\n79 44\n09 68\n88 18\n81 68\n01 91\nc0 68\n03 90\n00 25\n07 95\n09 20\n00 02\n0a 99\n09 18\n60 1c\n80 00\n06 90\n08 58\n0c 90\na0 00\n0e 58\n00 2e\n07 99\n02 b4\n04 bc\n0a d0\n0a 99\n08 58\n00 21\n1d f0 87 fc\n04 98\n10 28\n10 d3\n00 20\n0f 2e\n15 d3\n0f 92\n08 95\n09 94\n70 00\n8b 4a\n80 18\n8b 4a\n02 40\n11 43\n0f 20\n0b 90\n02 9d\n0c 9c\n0e e0\n0b 96\n08 95\n09 94\n07 9d\n02 9e\n10 91\n0c 9c\n18 e0\n0f 92\n0b 96\n08 95\n09 94\n0c 9c\n01 b4\n20 bc\n10 26\n0f 2c\n0c d3\n02 9a\n91 40\n7e 48\n23 18\n7a 48\n03 40\n0b 43\n10 93\n05 40\nad 18\n10 26\n0f 24\n04 e0\n10 91\n0f 9a\n0f 92\n00 2c\n12 d0\n0a 98\n06 99\n40 58\n00 21\n1d f0 43 fc\n07 9c\n12 9b\n0f 99\n68 48\n28 40\n09 04\n09 14\n40 1a\n0c 90\n0b 98\n70 43\n02 19\n50 00\n03 9c\na2 5c\n51 18\n0b 91\n01 29\n0e 9d\n53 db\n01 99\n08 5a\n0f 90\n0b 9e\n29 68\n00 29\n14 9c\n32 d1\n08 20\n28 60\n20 68\n01 30\n20 60\n11 99\n09 68\n30 22\n4a 43\n0d 9c\na1 18\n5a 4a\n8a 58\n08 b4\n20 bc\n2b 68\n9a 42\n19 d1\n13 9a\n12 68\n10 18\n56 4a\n89 18\na2 69\n1d f0 c8 fb\na1 69\n14 9b\n18 68\n40 18\n18 60\nc9 00\n2a 68\n51 18\n29 60\n11 9c\n21 68\n01 31\nff 22\n0a 40\n22 60\n08 b4\n10 bc\n00 e0\n14 9c\n13 99\n09 68\n00 22\n0a 54\n0e 9d\n29 68\n8e 42\n40 b4\n01 bc\n01 db\n02 b4\n01 bc\n09 1a\n29 60\n36 1a\n0f 9a\nf2 40\n8a 40\n21 68\n14 94\n13 9b\n1b 68\n5c 5c\n14 43\n5c 54\n12 9b\n19 68\n08 18\n18 60\n00 2e\naf dc\n35 48\n0c 9e\n06 40\n0c 96\n00 2e\n4f d0\n29 68\n00 29\n14 9c\n32 d1\n08 20\n28 60\n20 68\n01 30\n20 60\n11 99\n09 68\n30 22\n4a 43\n0d 9c\na1 18\n2f 4a\n8a 58\n08 b4\n20 bc\n2b 68\n9a 42\n19 d1\n13 9a\n12 68\n10 18\n2b 4a\n89 18\na2 69\n1d f0 72 fb\na1 69\n14 9b\n18 68\n40 18\n18 60\nc9 00\n2a 68\n51 18\n29 60\n11 9c\n21 68\n01 31\nff 22\n0a 40\n22 60\n08 b4\n10 bc\n00 e0\n14 9c\n13 99\n09 68\n00 22\n0a 54\n0e 9d\n29 68\n8e 42\n40 b4\n01 bc\n01 db\n02 b4\n01 bc\n09 1a\n29 60\n36 1a\n10 9a\n32 41\n8a 40\n21 68\n14 94\n13 9b\n1b 68\n5c 5c\n14 43\n5c 54\n12 9b\n19 68\n08 18\n18 60\n00 2e\naf dc\n0e 95\n08 98\n0c 99\n08 18\n0b 99\n45 18\n09 9c\n02 34\n05 98\n84 42\n00 da\ncf e6\n20 b4\n01 bc\n15 b0\nf0 bd\n'
p299
S'.text:0001a090\n.text:0001a092\n.text:0001a094\n.text:0001a096\n.text:0001a098\n.text:0001a09a\n.text:0001a09c\n.text:0001a09e\n.text:0001a0a0\n.text:0001a0a2\n.text:0001a0a4\n.text:0001a0a6\n.text:0001a0a8\n.text:0001a0aa\n.text:0001a0ac\n.text:0001a0ae\n.text:0001a0b0\n.text:0001a0b2\n.text:0001a0b4\n.text:0001a0b6\n.text:0001a0b8\n.text:0001a0ba\n.text:0001a0bc\n.text:0001a0be\n.text:0001a0c0\n.text:0001a0c2\n.text:0001a0c4\n.text:0001a0c6\n.text:0001a0c8\n.text:0001a0ca\n.text:0001a0cc\n.text:0001a0ce\n.text:0001a0d0\n.text:0001a0d2\n.text:0001a0d4\n.text:0001a0d6\n.text:0001a0d8\n.text:0001a0da\n.text:0001a0dc\n.text:0001a0de\n.text:0001a0e0\n.text:0001a0e2\n.text:0001a0e4\n.text:0001a0e6\n.text:0001a0e8\n.text:0001a0ea\n.text:0001a0ec\n.text:0001a0ee\n.text:0001a0f0\n.text:0001a0f2\n.text:0001a0f4\n.text:0001a0f6\n.text:0001a0f8\n.text:0001a0fa\n.text:0001a0fc\n.text:0001a0fe\n.text:0001a100\n.text:0001a102\n.text:0001a104\n.text:0001a106\n.text:0001a108\n.text:0001a10a\n.text:0001a10c\n.text:0001a10e\n.text:0001a110\n.text:0001a112\n.text:0001a114\n.text:0001a116\n.text:0001a118\n.text:0001a11a\n.text:0001a11c\n.text:0001a11e\n.text:0001a12e\n.text:0001a130\n.text:0001a132\n.text:0001a134\n.text:0001a136\n.text:0001a138\n.text:0001a13a\n.text:0001a13c\n.text:0001a13e\n.text:0001a140\n.text:0001a142\n.text:0001a144\n.text:0001a146\n.text:0001a148\n.text:0001a14a\n.text:0001a14c\n.text:0001a14e\n.text:0001a150\n.text:0001a152\n.text:0001a154\n.text:0001a156\n.text:0001a158\n.text:0001a15a\n.text:0001a15c\n.text:0001a15e\n.text:0001a160\n.text:0001a162\n.text:0001a164\n.text:0001a166\n.text:0001a168\n.text:0001a16a\n.text:0001a16c\n.text:0001a16e\n.text:0001a170\n.text:0001a172\n.text:0001a174\n.text:0001a176\n.text:0001a178\n.text:0001a17a\n.text:0001a17c\n.text:0001a17e\n.text:0001a180\n.text:0001a182\n.text:0001a184\n.text:0001a186\n.text:0001a188\n.text:0001a18a\n.text:0001a18c\n.text:0001a18e\n.text:0001a190\n.text:0001a192\n.text:0001a194\n.text:0001a196\n.text:0001a198\n.text:0001a19a\n.text:0001a19c\n.text:0001a19e\n.text:0001a1a0\n.text:0001a1a2\n.text:0001a1a4\n.text:0001a1a6\n.text:0001a1c4\n.text:0001a1c6\n.text:0001a1c8\n.text:0001a1ca\n.text:0001a1cc\n.text:0001a1ce\n.text:0001a1d0\n.text:0001a1d2\n.text:0001a1d4\n.text:0001a1d6\n.text:0001a1d8\n.text:0001a1da\n.text:0001a1dc\n.text:0001a1de\n.text:0001a1e0\n.text:0001a1e2\n.text:0001a1e4\n.text:0001a1e6\n.text:0001a1e8\n.text:0001a1ea\n.text:0001a1ec\n.text:0001a1ee\n.text:0001a1f0\n.text:0001a1f2\n.text:0001a1f4\n.text:0001a1f6\n.text:0001a1f8\n.text:0001a1fa\n.text:0001a1fc\n.text:0001a1fe\n.text:0001a200\n.text:0001a202\n.text:0001a204\n.text:0001a206\n.text:0001a208\n.text:0001a20a\n.text:0001a20c\n.text:0001a20e\n.text:0001a210\n.text:0001a212\n.text:0001a214\n.text:0001a216\n.text:0001a218\n.text:0001a21a\n.text:0001a21c\n.text:0001a21e\n.text:0001a220\n.text:0001a222\n.text:0001a224\n.text:0001a226\n.text:0001a228\n.text:0001a22a\n.text:0001a22c\n.text:0001a230\n.text:0001a232\n.text:0001a234\n.text:0001a236\n.text:0001a238\n.text:0001a23a\n.text:0001a23c\n.text:0001a23e\n.text:0001a240\n.text:0001a242\n.text:0001a244\n.text:0001a246\n.text:0001a248\n.text:0001a24a\n.text:0001a24c\n.text:0001a24e\n.text:0001a250\n.text:0001a252\n.text:0001a254\n.text:0001a256\n.text:0001a258\n.text:0001a25a\n.text:0001a25c\n.text:0001a25e\n.text:0001a260\n.text:0001a262\n.text:0001a264\n.text:0001a266\n.text:0001a268\n.text:0001a26a\n.text:0001a26c\n.text:0001a26e\n.text:0001a270\n.text:0001a272\n.text:0001a274\n.text:0001a276\n.text:0001a278\n.text:0001a27a\n.text:0001a27c\n.text:0001a27e\n.text:0001a280\n.text:0001a282\n.text:0001a284\n.text:0001a286\n.text:0001a288\n.text:0001a28a\n.text:0001a28c\n.text:0001a28e\n.text:0001a290\n.text:0001a292\n.text:0001a294\n.text:0001a296\n.text:0001a298\n.text:0001a29a\n.text:0001a29c\n.text:0001a29e\n.text:0001a2a0\n.text:0001a2a2\n.text:0001a2a4\n.text:0001a2a6\n.text:0001a2a8\n.text:0001a2aa\n.text:0001a2ac\n.text:0001a2ae\n.text:0001a2b0\n.text:0001a2b2\n.text:0001a2b4\n.text:0001a2b6\n.text:0001a2b8\n.text:0001a2ba\n.text:0001a2bc\n.text:0001a2be\n.text:0001a2c0\n.text:0001a2c2\n.text:0001a2c4\n.text:0001a2c6\n.text:0001a2c8\n.text:0001a2ca\n.text:0001a2cc\n.text:0001a2ce\n.text:0001a2d0\n.text:0001a2d2\n.text:0001a2d4\n.text:0001a2d6\n.text:0001a2d8\n.text:0001a2dc\n.text:0001a2de\n.text:0001a2e0\n.text:0001a2e2\n.text:0001a2e4\n.text:0001a2e6\n.text:0001a2e8\n.text:0001a2ea\n.text:0001a2ec\n.text:0001a2ee\n.text:0001a2f0\n.text:0001a2f2\n.text:0001a2f4\n.text:0001a2f6\n.text:0001a2f8\n.text:0001a2fa\n.text:0001a2fc\n.text:0001a2fe\n.text:0001a300\n.text:0001a302\n.text:0001a304\n.text:0001a306\n.text:0001a308\n.text:0001a30a\n.text:0001a30c\n.text:0001a30e\n.text:0001a310\n.text:0001a312\n.text:0001a314\n.text:0001a316\n.text:0001a318\n.text:0001a31a\n.text:0001a31c\n.text:0001a31e\n.text:0001a320\n.text:0001a322\n.text:0001a324\n.text:0001a326\n.text:0001a328\n.text:0001a32a\n.text:0001a32c\n.text:0001a32e\n.text:0001a330\n.text:0001a332\n.text:0001a334\n.text:0001a336\n.text:0001a338\n.text:0001a33a\n.text:0001a33c\n.text:0001a33e\n.text:0001a340\n.text:0001a342\n.text:0001a344\n.text:0001a346\n.text:0001a348\n.text:0001a34a\n.text:0001a34c\n.text:0001a34e\n.text:0001a350\n.text:0001a352\n.text:0001a354\n.text:0001a356\n.text:0001a358\n.text:0001a35a\n.text:0001a35c\n.text:0001a35e\n'
p300
tp301
sS'has_3DNow'
p302
(S'\n__stdcall has_3DNow()\n'
p303
V\u000avoid has_3DNow(void)\u000a\u000a{\u000a  (*(has_MMX + DAT_00037dac))();\u000a  return;\u000a}\u000a\u000a
p304
S'ldr r12,[0x37dac]\nadd pc,r12,pc\n'
p305
S'00 c0 9f e5\n0f f0 8c e0\n'
p306
S'.text:00037da4\n.text:00037da8\n'
p307
tp308
sS'lame_report_def'
p309
(S'\n__stdcall lame_report_def(char * format)\n'
p310
V\u000a/* WARNING: Control flow encountered bad instruction data */\u000a\u000avoid lame_report_def(char *format)\u000a\u000a{\u000a  char *pcVar1;\u000a  undefined4 *in_r1;\u000a  undefined4 *puVar2;\u000a  undefined4 *puVar3;\u000a  undefined4 *in_r2;\u000a  undefined4 *in_r3;\u000a  undefined4 *unaff_r4;\u000a  uint unaff_r5;\u000a  undefined4 *unaff_r6;\u000a  uint uVar4;\u000a  int unaff_r10;\u000a  undefined4 unaff_r11;\u000a  uint uVar5;\u000a  int in_r12;\u000a  uint uVar6;\u000a  undefined4 in_lr;\u000a  undefined4 in_pc;\u000a  char in_NG;\u000a  char in_OV;\u000a  bool bVar7;\u000a  undefined4 in_cr0;\u000a  undefined4 in_cr15;\u000a  \u000a  if (in_NG != in_OV) {\u000a    coprocessor_moveto2(4,1,unaff_r11,format,in_cr0);\u000a  }\u000a  bVar7 = (bool)((byte)((uint)unaff_r4 >> 8) & 1);\u000a  uVar4 = unaff_r5 & (int)unaff_r4 << 0x18;\u000a  puVar2 = in_r1;\u000a  if ((int)uVar4 < 0 != (bool)in_OV) {\u000a    puVar2 = (undefined4 *)((int)in_r1 + -0xd89);\u000a    *in_r1 = in_pc;\u000a  }\u000a  if (!bVar7 || uVar4 == 0) {\u000a    *in_r2 = 0x21f98;\u000a    *(BADSPACEBASE **)(in_r2 + -1) = register0x00000054;\u000a    in_r2[-2] = in_r12;\u000a    in_r2[-3] = unaff_r11;\u000a    in_r2[-4] = unaff_r10;\u000a    *(undefined4 **)(in_r2 + -5) = puVar2;\u000a  }\u000a  uVar6 = in_r12 - 0x54;\u000a  coprocessor_storelong2(0,in_cr15,uVar6);\u000a  if (!bVar7 || uVar4 == 0) {\u000a    *unaff_r6 = in_lr;\u000a    *(BADSPACEBASE **)(unaff_r6 + -1) = register0x00000054;\u000a    unaff_r6[-2] = unaff_r5;\u000a  }\u000a  uVar4 = unaff_r5 & (int)in_r3 << 0x12;\u000a                    /* WARNING: Could not recover jumptable at 0x00021fa0. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a  if ((bool)((byte)((uint)in_r3 >> 0xe) & 1) && uVar4 != 0) {\u000a    pcVar1 = format;\u000a    if ((int)uVar4 < 0 != (bool)in_OV) {\u000a      pcVar1 = format + -0x805;\u000a      *format = 0;\u000a    }\u000a    bVar7 = (bool)((byte)((uint)in_r2 >> 8) & 1);\u000a    uVar5 = unaff_r5 & (int)in_r2 << 0x18;\u000a    puVar3 = puVar2;\u000a    if ((int)uVar5 < 0 != (bool)in_OV) {\u000a      puVar3 = (undefined4 *)((int)puVar2 + -0xd79);\u000a      *puVar2 = in_pc;\u000a    }\u000a    if (!bVar7 || uVar5 == 0) {\u000a      *in_r3 = 0x21fb8;\u000a      *(BADSPACEBASE **)(in_r3 + -1) = register0x00000054;\u000a      in_r3[-2] = uVar6;\u000a      in_r3[-3] = uVar5;\u000a      in_r3[-4] = unaff_r10;\u000a      *(undefined4 **)(in_r3 + -5) = puVar3;\u000a    }\u000a    coprocessor_loadlong2(0,in_cr15,in_r12 + -0xa8);\u000a    if (!bVar7 || uVar5 == 0) {\u000a      *(undefined4 *)(unaff_r10 + -4) = 0x21fc0;\u000a      *(uint *)(unaff_r10 + -8) = uVar6;\u000a      *(uint *)(unaff_r10 + -0xc) = uVar5;\u000a      *(int *)(unaff_r10 + -0x10) = unaff_r10;\u000a      *(uint *)(unaff_r10 + -0x14) = uVar4;\u000a      *(undefined4 **)(unaff_r10 + -0x18) = in_r3;\u000a      *(undefined4 **)(unaff_r10 + -0x1c) = puVar3;\u000a      *(char **)(unaff_r10 + -0x20) = pcVar1;\u000a      *puVar3 = in_lr;\u000a      *(BADSPACEBASE **)(puVar3 + -1) = register0x00000054;\u000a      puVar3[-2] = unaff_r5;\u000a      *(undefined4 **)(puVar3 + -3) = unaff_r4;\u000a      *(uint *)uVar6 = uVar6;\u000a      *(uint *)(in_r12 + -0x58) = uVar5;\u000a      *(uint *)(in_r12 + -0x5c) = unaff_r5;\u000a      *(undefined4 **)(in_r12 + -0x60) = in_r3;\u000a      *(undefined4 **)(in_r12 + -100) = in_r2;\u000a      *(char **)(in_r12 + -0x68) = pcVar1;\u000a      in_r3 = (undefined4 *)(uVar6 & (int)puVar3 << 0x10);\u000a    }\u000a    if (!bVar7) {\u000a      *(undefined4 **)unaff_r4 = in_r3;\u000a    }\u000a                    /* WARNING: Bad instruction - Truncating control flow here */\u000a    halt_baddata();\u000a  }\u000a  (*(code *)((uint)in_r3 & 0x21fa8))();\u000a  return;\u000a}\u000a\u000a
p311
S'mcrrlt p4,0x1,r11,r0,cr0\nands r9,r5,r4, lsl #0x18\nstrlt pc,[r1],#-0xd89\nstmlsda r2,{ r1 r10 r11 r12 sp pc}\nstc2l p0,cr15,[r12,#-0x54]!\nstmlsda r6,{ r5 sp lr }\nands r9,r5,r3, lsl #0x12\nandls pc,r3,pc, ror sp\nstrblt r9,[r0],#-0x805\nands r11,r5,r2, lsl #0x18\nstrlt pc,[r1],#-0xd79\n'
p312
S'10 b4 40 bc\n04 9c 15 f0\n89 fd 01 b4\n02 bc 02 98\n15 f0 6c fd\n20 60 06 98\n03 99 15 f0\n7f fd 03 90\n05 98 40 b4\n02 bc 15 f0\n79 fd 01 b4\n'
p313
S'.text:00021f84\n.text:00021f88\n.text:00021f8c\n.text:00021f90\n.text:00021f94\n.text:00021f98\n.text:00021f9c\n.text:00021fa0\n.text:00021fa4\n.text:00021fa8\n.text:00021fac\n'
p314
tp315
sS'lame_set_scale_left'
p316
(S'\n__stdcall lame_set_scale_left(lame_global_flags * gfp, float scale)\n'
p317
V\u000a/* WARNING: Removing unreachable block (ram,0x0001e3d0) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e2) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e6) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e8) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3f8) */\u000a\u000aint lame_set_scale_left(lame_global_flags *gfp,float scale)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  lame_global_flags *gfp_00;\u000a  uint in_r1;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  lame_global_flags *in_r2;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int unaff_r4;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  undefined4 *puVar11;\u000a  int unaff_r6;\u000a  uint uVar12;\u000a  undefined *puVar13;\u000a  char in_ZR;\u000a  float extraout_s0;\u000a  float extraout_s0_00;\u000a  float extraout_s0_01;\u000a  float extraout_s0_02;\u000a  float extraout_s0_03;\u000a  float extraout_s0_04;\u000a  undefined8 uVar14;\u000a  byte *in_stack_00000010;\u000a  lame_global_flags *in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  lame_global_flags *in_stack_0000002c;\u000a  uint uStack00000030;\u000a  \u000a  if (in_ZR == 0) {\u000a    in_r2 = gfp;\u000a  }\u000a  if ((unaff_r4 != 0) || ((in_r1 | (uint)in_r2) == 0)) {\u000a    if (*(int *)(unaff_r6 + 4) != -1) {\u000a      uVar14 = __floatunsidf();\u000a      __muldf3((int)((ulonglong)uVar14 >> 0x20),(int)uVar14,0,DAT_0001e1b0);\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(*(undefined4 *)(in_stack_0000001c + 0x3c));\u000a    }\u000a    if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a        (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a       (uVar1 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar1 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a      strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar1 * 4));\u000a    }\u000a    puVar9 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a    puVar11 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a    while (puVar9 != (undefined4 *)0x0) {\u000a      uVar1 = puVar9[1];\u000a      uVar12 = 0xff;\u000a      if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 == DAT_0001e1e0))\u000a      {\u000a        iVar2 = puVar9[4] * 2 + 0x10;\u000a        if (puVar9[5] != 1) {\u000a          iVar2 = puVar9[4] + 0xf;\u000a        }\u000a        iVar3 = puVar9[7];\u000a        if (puVar9[8] == 1) {\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        iVar2 = iVar2 + iVar3;\u000a      }\u000a      else {\u000a        do {\u000a          uVar10 = uVar12 & 0x57000000;\u000a          uVar6 = 0;\u000a          if (uVar10 != (uVar12 & uVar1)) {\u000a            uVar6 = uVar12 & uVar1;\u000a          }\u000a          if (uVar10 == 0) {\u000a            uVar6 = uVar10;\u000a          }\u000a          uVar7 = uVar7 | uVar6;\u000a          iVar2 = iVar2 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar2 != 0);\u000a        if (uVar7 == 0) {\u000a          iVar2 = sizeOfWxxxNode(scale,puVar9);\u000a          scale = extraout_s0;\u000a        }\u000a        else {\u000a          iVar3 = puVar9[7];\u000a          iVar4 = puVar9[4];\u000a          if (puVar9[8] == 1) {\u000a            iVar2 = iVar4 * 2 + 0xd;\u000a            if (iVar4 == 0) {\u000a              iVar2 = 0xb;\u000a            }\u000a            iVar3 = iVar3 << 1;\u000a          }\u000a          else {\u000a            iVar2 = iVar4 + 0xc;\u000a            if (iVar4 == 0) {\u000a              iVar2 = 0xb;\u000a            }\u000a          }\u000a          iVar2 = iVar2 + iVar3;\u000a        }\u000a      }\u000a      in_stack_0000002c = (lame_global_flags *)((int)&in_stack_0000002c->class_id + iVar2);\u000a      puVar9 = (undefined4 *)*puVar9;\u000a    }\u000a    if ((*in_stack_00000010 & 0x20) != 0) {\u000a      in_stack_0000002c =\u000a           (lame_global_flags *)\u000a           ((int)&in_stack_0000002c->class_id + *(int *)(in_stack_0000001c + DAT_0001e1e4));\u000a    }\u000a    gfp = in_stack_0000002c;\u000a    if ((in_stack_0000002c <= in_stack_00000014) &&\u000a       (gfp = (lame_global_flags *)0x0, in_stack_00000018 != (undefined *)0x0)) {\u000a      *in_stack_00000018 = 0x49;\u000a      in_stack_00000018[1] = 0x44;\u000a      in_stack_00000018[2] = 0x33;\u000a      in_stack_00000018[3] = 3;\u000a      uStack00000030 = 0;\u000a      in_stack_00000018[4] = 0;\u000a      in_stack_00000018[5] = 0;\u000a      uVar1 = (int)&in_stack_0000002c->tune_value_a + 2;\u000a      in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a      in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a      in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a      in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a      puVar13 = in_stack_00000018 + 10;\u000a      puVar11 = (undefined4 *)*puVar11;\u000a      while (puVar11 != (undefined4 *)0x0) {\u000a        uVar1 = puVar11[1];\u000a        uVar12 = 0xff;\u000a        iVar2 = 4;\u000a        if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a          iVar2 = puVar11[4] * 2 + 0x10;\u000a          if (puVar11[5] != 1) {\u000a            iVar2 = puVar11[4] + 0xf;\u000a          }\u000a          iVar3 = 0;\u000a          if (puVar11[8] == 1) {\u000a            iVar3 = puVar11[8];\u000a          }\u000a          uVar12 = (puVar11[7] << iVar3) + iVar2;\u000a          iVar2 = 4;\u000a          if (10 < uVar12) {\u000a            do {\u000a              puVar13[iVar2 + -1] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar12 = uVar12 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar13[iVar2 + 3] = (char)uVar12;\u000a              iVar2 = iVar2 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            *(bool *)(puVar13 + 10) = puVar11[8] == 1;\u000a            puVar13[0xb] = *(undefined *)(puVar11 + 2);\u000a            puVar13[0xc] = *(undefined *)((int)puVar11 + 9);\u000a            puVar13[0xd] = *(undefined *)((int)puVar11 + 10);\u000a            puVar13 = puVar13 + 0xe;\u000a            if (puVar11[5] == 1) {\u000a              gfp_00 = (lame_global_flags *)writeUcs2s(puVar13,puVar11[3],puVar11[4]);\u000a              *(undefined *)&gfp_00->class_id = 0;\u000a              *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a              iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a              return iVar2;\u000a            }\u000a            iVar2 = puVar11[4];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar11[3];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              puVar13 = puVar13 + iVar2;\u000a            }\u000a            *puVar13 = 0;\u000a            puVar13 = puVar13 + 1;\u000a            if (puVar11[8] == 1) {\u000aLAB_0001e338:\u000a              puVar13 = (undefined *)writeUcs2s(puVar13,puVar11[6],puVar11[7]);\u000a              scale = extraout_s0_03;\u000a            }\u000a            else {\u000a              iVar2 = puVar11[7];\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar11[6];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar13;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a                puVar13 = puVar13 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          do {\u000a            uVar10 = uVar12 & 0x57000000;\u000a            uVar6 = uStack00000030;\u000a            if (uVar10 != (uVar12 & uVar1)) {\u000a              uVar6 = uVar12 & uVar1;\u000a            }\u000a            if (uVar10 == 0) {\u000a              uVar6 = uVar10;\u000a            }\u000a            uVar7 = uVar7 | uVar6;\u000a            iVar2 = iVar2 + -1;\u000a            uVar12 = uVar12 << 8;\u000a          } while (iVar2 != 0);\u000a          if (uVar7 == 0) {\u000a            uVar12 = sizeOfWxxxNode(scale,puVar11);\u000a            iVar2 = 4;\u000a            scale = extraout_s0_00;\u000a            if (10 < uVar12) {\u000a              do {\u000a                puVar13[iVar2 + -1] = (char)uVar1;\u000a                iVar2 = iVar2 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar2);\u000a              uVar12 = uVar12 - 10;\u000a              iVar2 = 4;\u000a              do {\u000a                puVar13[iVar2 + 3] = (char)uVar12;\u000a                iVar2 = iVar2 + -1;\u000a                uVar12 = uVar12 >> 8;\u000a              } while (0 < iVar2);\u000a              puVar13[8] = 0;\u000a              puVar13[9] = 0;\u000a              puVar8 = puVar13 + 10;\u000a              scale = extraout_s0_00;\u000a              if (puVar11[4] != 0) {\u000a                *(bool *)(puVar13 + 10) = puVar11[5] == 1;\u000a                puVar13 = puVar13 + 0xb;\u000a                if (puVar11[5] == 1) {\u000a                  puVar8 = (undefined *)writeUcs2s(puVar13,puVar11[3],puVar11[4]);\u000a                  *puVar8 = 0;\u000a                  puVar8[1] = 0;\u000a                  puVar8 = puVar8 + 2;\u000a                  scale = extraout_s0_01;\u000a                }\u000a                else {\u000a                  iVar2 = puVar11[4];\u000a                  if (iVar2 != 0) {\u000a                    puVar5 = (undefined *)puVar11[3];\u000a                    iVar3 = iVar2;\u000a                    puVar8 = puVar13;\u000a                    do {\u000a                      *puVar8 = *puVar5;\u000a                      puVar8 = puVar8 + 1;\u000a                      puVar5 = puVar5 + 1;\u000a                      iVar3 = iVar3 + -1;\u000a                    } while (iVar3 != 0);\u000a                    puVar13 = puVar13 + iVar2;\u000a                  }\u000a                  *puVar13 = 0;\u000a                  puVar8 = puVar13 + 1;\u000a                  scale = extraout_s0_00;\u000a                }\u000a              }\u000a              if (puVar11[8] == 1) {\u000a                puVar13 = (undefined *)writeLoBytes(puVar8,puVar11[6],puVar11[7]);\u000a                scale = extraout_s0_04;\u000a              }\u000a              else {\u000a                iVar2 = puVar11[7];\u000a                puVar13 = puVar8;\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar11[6];\u000a                  iVar3 = iVar2;\u000a                  puVar13 = puVar8;\u000a                  do {\u000a                    *puVar13 = *puVar5;\u000a                    puVar13 = puVar13 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar13 = puVar8 + iVar2;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            iVar2 = puVar11[7];\u000a            iVar3 = puVar11[4];\u000a            if (puVar11[8] == 1) {\u000a              iVar4 = iVar3 * 2 + 0xd;\u000a              if (iVar3 == 0) {\u000a                iVar4 = 0xb;\u000a              }\u000a              iVar2 = iVar2 << 1;\u000a            }\u000a            else {\u000a              iVar4 = iVar3 + 0xc;\u000a              if (iVar3 == 0) {\u000a                iVar4 = 0xb;\u000a              }\u000a            }\u000a            iVar3 = 4;\u000a            if (10 < (uint)(iVar4 + iVar2)) {\u000a              do {\u000a                puVar13[iVar3 + -1] = (char)uVar1;\u000a                iVar3 = iVar3 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar3);\u000a              uVar1 = (iVar4 + iVar2) - 10;\u000a              iVar2 = 4;\u000a              do {\u000a                puVar13[iVar2 + 3] = (char)uVar1;\u000a                iVar2 = iVar2 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar2);\u000a              puVar13[8] = 0;\u000a              puVar13[9] = 0;\u000a              *(bool *)(puVar13 + 10) = puVar11[8] == 1;\u000a              puVar13 = puVar13 + 0xb;\u000a              iVar2 = puVar11[4];\u000a              if (iVar2 != 0) {\u000a                if (puVar11[5] == 1) {\u000a                  puVar13 = (undefined *)writeUcs2s(puVar13,puVar11[3]);\u000a                  *puVar13 = 0;\u000a                  puVar13[1] = 0;\u000a                  puVar13 = puVar13 + 2;\u000a                  scale = extraout_s0_02;\u000a                }\u000a                else {\u000a                  puVar5 = (undefined *)puVar11[3];\u000a                  iVar3 = iVar2;\u000a                  puVar8 = puVar13;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar13[iVar2] = 0;\u000a                  puVar13 = puVar13 + iVar2 + 1;\u000a                }\u000a              }\u000a              if (puVar11[8] == 1) goto LAB_0001e338;\u000a              iVar2 = puVar11[7];\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar11[6];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar13;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                goto LAB_0001e36a;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        puVar11 = (undefined4 *)*puVar11;\u000a      }\u000a      __aeabi_memclr(puVar13,((int)in_stack_0000002c + (int)in_stack_00000018) - (int)puVar13);\u000a      gfp = in_stack_0000002c;\u000a    }\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) != *in_stack_00000020) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return (int)gfp;\u000a}\u000a\u000a
p318
S'beq 0x0001de7a\npush { r0 }\npop { r2 }\norr r1,r2\ncmp r4,#0x0\nbne 0x0001de86\ncmp r1,#0x0\nbeq 0x0001de86\nb 0x0001e470\n'
p319
S'01 d0\n01 b4\n04 bc\n11 43\n00 2c\n02 d1\n00 29\n00 d0\nf4 e2\n'
p320
S'.text:0001de74\n.text:0001de76\n.text:0001de78\n.text:0001de7a\n.text:0001de7c\n.text:0001de7e\n.text:0001de80\n.text:0001de82\n.text:0001de84\n'
p321
tp322
sS'FUN_00022eee'
p323
(S'\n__stdcall FUN_00022eee(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined4 param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16)\n'
p324
V\u000avoid FUN_00022eee(undefined4 param_1,undefined4 param_2,int param_3,int param_4,undefined4 param_5)\u000a\u000a{\u000a  int unaff_r4;\u000a  int param_16;\u000a  int in_stack_000001a8;\u000a  \u000a  if (param_16 + 1 < *(int *)(unaff_r4 + 0x48)) {\u000a    FUN_000220ee(*(int *)(unaff_r4 + 0x48),param_5,param_3 + 0x1200,param_4 + 0x1200);\u000a  }\u000a  if (**(int **)(FUN_00022f32 + DAT_00022f60 + 6) == in_stack_000001a8) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p325
S'ldr r0,[0x00022f54]\nldr r1,[sp,#0x28]\nadd r1,r1,r0\nstr r1,[sp,#0x28]\nldr r1,[sp,#0x24]\nadd r1,r1,r0\nstr r1,[sp,#0x24]\nldr r1,[sp,#0x20]\nadd r1,r1,r0\nstr r1,[sp,#0x20]\nmov r0,#0x9\nlsl r0,r0,#0x9\nldr r1,[sp,#0x1c]\nadd r1,r1,r0\nstr r1,[sp,#0x1c]\nldr r1,[sp,#0x18]\nadd r1,r1,r0\nstr r1,[sp,#0x18]\nadd r5,r5,r0\nadd r6,r6,r0\nldr r1,[sp,#0x14]\nadd r1,r1,r0\nstr r1,[sp,#0x14]\nadd r2,r2,r0\nadd r3,r3,r0\nldr r1,[sp,#0x40]\nadd r1,#0x1\nstr r1,[sp,#0x40]\nldr r0,[r4,#0x48]\ncmp r1,r0\nldr r1,[sp,#0x0]\nbge 0x00022f32\nbl 0x000220ee\n'
p326
S'19 48\n0a 99\n09 18\n0a 91\n09 99\n09 18\n09 91\n08 99\n09 18\n08 91\n09 20\n40 02\n07 99\n09 18\n07 91\n06 99\n09 18\n06 91\n2d 18\n36 18\n05 99\n09 18\n05 91\n12 18\n1b 18\n10 99\n01 31\n10 91\na0 6c\n81 42\n00 99\n01 da\nff f7 de f8\n'
p327
S'.text:00022eee\n.text:00022ef0\n.text:00022ef2\n.text:00022ef4\n.text:00022ef6\n.text:00022ef8\n.text:00022efa\n.text:00022efc\n.text:00022efe\n.text:00022f00\n.text:00022f02\n.text:00022f04\n.text:00022f06\n.text:00022f08\n.text:00022f0a\n.text:00022f0c\n.text:00022f0e\n.text:00022f10\n.text:00022f12\n.text:00022f14\n.text:00022f16\n.text:00022f18\n.text:00022f1a\n.text:00022f1c\n.text:00022f1e\n.text:00022f20\n.text:00022f22\n.text:00022f24\n.text:00022f26\n.text:00022f28\n.text:00022f2a\n.text:00022f2c\n.text:00022f2e\n'
p328
tp329
sS'_Unwind_ForcedUnwind'
p330
(S'\n__stdcall _Unwind_ForcedUnwind()\n'
p331
V\u000avoid _Unwind_ForcedUnwind(void)\u000a\u000a{\u000a  __gnu_Unwind_ForcedUnwind();\u000a  return;\u000a}\u000a\u000a
p332
S'stmdb sp!,{ sp lr pc}\nstmdb sp!,{ r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 }\nmov r3,#0x0\nstmdb sp!,{ r2 r3 }\nadd r3,sp,#0x4\nbl 0x00016cb4\nldr lr,[sp,#0x40]\nadd sp,sp,#0x48\nbx lr\n'
p333
S'00 e0 2d e9\nff 1f 2d e9\n00 30 a0 e3\n0c 00 2d e9\n04 30 8d e2\n24 7e ff eb\n40 e0 9d e5\n48 d0 8d e2\n1e ff 2f e1\n'
p334
S'.text:00037408\n.text:0003740c\n.text:00037410\n.text:00037414\n.text:00037418\n.text:0003741c\n.text:00037420\n.text:00037424\n.text:00037428\n'
p335
tp336
sS'lame_set_exp_nspsytune'
p337
(S'\n__stdcall lame_set_exp_nspsytune()\n'
p338
V\u000avoid lame_set_exp_nspsytune(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037f60 + DAT_00037f5c))();\u000a  return;\u000a}\u000a\u000a
p339
S'ldr r12,[0x37f5c]\nadd pc,r12,pc\n'
p340
S'00 c0 9f e5\n0f f0 8c e0\n'
p341
S'.text:00037f54\n.text:00037f58\n'
p342
tp343
sS'__gnu_unwind_execute'
p344
(S'\n__stdcall __gnu_unwind_execute()\n'
p345
V\u000aundefined4 __gnu_unwind_execute(int *piParm1,undefined4 uParm2,undefined4 uParm3,int iParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  int iVar5;\u000a  int *local_30;\u000a  undefined4 uVar6;\u000a  int local_24;\u000a  \u000a  bVar4 = false;\u000a  local_30 = piParm1;\u000a  uVar6 = uParm2;\u000a  local_24 = iParm4;\u000aLAB_000374f4:\u000a  do {\u000a    while( true ) {\u000a      uVar1 = next_unwind_byte(uParm2);\u000a      if (uVar1 == 0xb0) {\u000a        if (!bVar4) {\u000a          _Unwind_VRS_Get(piParm1,0,0xe,0,&local_24,uVar6,uParm3);\u000a          _Unwind_VRS_Set(piParm1,0,0xf,0,&local_24);\u000a        }\u000a        return 0;\u000a      }\u000a      if ((uVar1 & 0x80) != 0) break;\u000a      _Unwind_VRS_Get(piParm1,0,0xd,0,&local_24,uVar6,uParm3);\u000a      iVar5 = (uVar1 & 0x3f) * 4 + 4;\u000a      if ((uVar1 & 0x40) != 0) {\u000a        iVar5 = -iVar5;\u000a      }\u000a      local_24 = local_24 + iVar5;\u000aLAB_00037610:\u000a      uVar2 = 0;\u000aLAB_0003761c:\u000a      local_30 = &local_24;\u000a      _Unwind_VRS_Set(piParm1,uVar2,0xd,uVar2);\u000a    }\u000a    uVar3 = uVar1 & 0xf0;\u000a    if (uVar3 == 0x80) {\u000a      uVar3 = next_unwind_byte(uParm2);\u000a      uVar3 = uVar3 | uVar1 << 8;\u000a      if (uVar3 == 0x8000) {\u000a        return 9;\u000a      }\u000a      iVar5 = _Unwind_VRS_Pop(piParm1,0,(uVar3 << 0x14) >> 0x10,0,local_30);\u000a      if (iVar5 != 0) {\u000a        return 9;\u000a      }\u000a      if ((uVar3 & 0x800) != 0) {\u000a        bVar4 = true;\u000a      }\u000a      goto LAB_000374f4;\u000a    }\u000a    if (uVar3 == 0x90) {\u000a      if ((uVar1 & 0xd) == 0xd) {\u000a        return 9;\u000a      }\u000a      _Unwind_VRS_Get(piParm1,0,uVar1 & 0xf,0,&local_24,uVar6,uParm3);\u000a      goto LAB_00037610;\u000a    }\u000a    if (uVar3 == 0xa0) {\u000a      uVar2 = 0xff0 >> (~uVar1 & 7) & 0xff0;\u000a      if ((uVar1 & 8) != 0) {\u000a        uVar2 = uVar2 | 0x4000;\u000a      }\u000a      uVar3 = 0;\u000a      uVar1 = uVar3;\u000a    }\u000a    else {\u000a      if (uVar3 == 0xb0) {\u000a        if (uVar1 == 0xb1) {\u000a          uVar2 = next_unwind_byte(uParm2);\u000a          if (uVar2 == 0) {\u000a            return 9;\u000a          }\u000a          uVar3 = uVar2 & 0xf0;\u000a          uVar1 = uVar3;\u000a          if (uVar3 != 0) {\u000a            return 9;\u000a          }\u000a        }\u000a        else {\u000a          if (uVar1 == 0xb2) {\u000a            _Unwind_VRS_Get(piParm1,0,0xd,0,&local_24,uVar6,uParm3);\u000a            uVar1 = next_unwind_byte(uParm2);\u000a            uVar3 = 2;\u000a            while( true ) {\u000a              uVar2 = uVar1 & 0x80;\u000a              if (uVar2 == 0) break;\u000a              local_24 = local_24 + ((uVar1 & 0x7f) << (uVar3 & 0xff));\u000a              uVar3 = uVar3 + 7;\u000a              uVar1 = next_unwind_byte(uParm2);\u000a            }\u000a            local_24 = local_24 + 0x204 + ((uVar1 & 0x7f) << (uVar3 & 0xff));\u000a            goto LAB_0003761c;\u000a          }\u000a          if (uVar1 == 0xb3) {\u000a            uVar1 = next_unwind_byte(uParm2);\u000a            uVar3 = 1;\u000a            goto LAB_00037770;\u000a          }\u000a          if ((uVar1 & 0xfc) == 0xb4) {\u000a            return 9;\u000a          }\u000a          uVar3 = 1;\u000a          uVar2 = (uVar1 & 7) + 1 | 0x80000;\u000a          uVar1 = uVar3;\u000a        }\u000a      }\u000a      else {\u000a        if (uVar3 == 0xc0) {\u000a          if (uVar1 == 0xc6) {\u000a            uVar1 = next_unwind_byte(uParm2);\u000a            uVar3 = 3;\u000aLAB_00037770:\u000a            uVar2 = (uVar1 & 0xf) + 1 | (uVar1 & 0xf0) << 0xc;\u000a            uVar1 = uVar3;\u000a          }\u000a          else {\u000a            if (uVar1 == 199) {\u000a              uVar2 = next_unwind_byte(uParm2);\u000a              if (uVar2 == 0) {\u000a                return 9;\u000a              }\u000a              if ((uVar2 & 0xf0) != 0) {\u000a                return 9;\u000a              }\u000a              uVar3 = 4;\u000a              uVar1 = uVar2 & 0xf0;\u000a            }\u000a            else {\u000a              if ((uVar1 & 0xf8) != 0xc0) {\u000a                if (uVar1 == 200) {\u000a                  uVar1 = next_unwind_byte(uParm2);\u000a                  uVar2 = (uVar1 & 0xf) + 1 | ((uVar1 & 0xf0) + 0x10) * 0x1000;\u000a                }\u000a                else {\u000a                  if (uVar1 != 0xc9) {\u000a                    return 9;\u000a                  }\u000a                  uVar1 = next_unwind_byte(uParm2);\u000a                  uVar2 = (uVar1 & 0xf) + 1 | (uVar1 & 0xf0) << 0xc;\u000a                }\u000a                goto LAB_00037844;\u000a              }\u000a              uVar3 = 3;\u000a              uVar2 = (uVar1 & 0xf) + 1 | 0xa0000;\u000a              uVar1 = uVar3;\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if ((uVar1 & 0xf8) != 0xd0) {\u000a            return 9;\u000a          }\u000a          uVar2 = (uVar1 & 7) + 1 | 0x80000;\u000aLAB_00037844:\u000a          uVar3 = 1;\u000a          uVar1 = 5;\u000a        }\u000a      }\u000a    }\u000a    iVar5 = _Unwind_VRS_Pop(piParm1,uVar3,uVar2,uVar1,local_30);\u000a    if (iVar5 != 0) {\u000a      return 9;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p346
S'stmdb sp!,{ r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 lr }\ncpy r5,r0\ncpy r7,r1\nmov r6,#0x0\nadd r8,sp,#0xc\nmov r9,#0xff0\ncpy r0,r7\nbl 0x00037450\ncmp r0,#0xb0\ncpy r4,r0\nbne 0x00037548\ncmp r6,#0x0\nbne 0x00037858\nadd r4,sp,#0xc\ncpy r1,r6\ncpy r3,r6\nstr r4,[sp,#0x0]\ncpy r0,r5\nmov r2,#0xe\nbl 0x00016c24\nstr r4,[sp,#0x0]\ncpy r0,r5\ncpy r1,r6\nmov r2,#0xf\ncpy r3,r6\nbl 0x00016c30\nb 0x00037858\nands r1,r0,#0x80\nbne 0x00037588\nmov r10,r0, lsl #0x2\ncpy r3,r1\nstr r8,[sp,#0x0]\ncpy r0,r5\nmov r2,#0xd\nbl 0x00016c24\nand r10,r10,#0xff\nldr r3,[sp,#0xc]\nadd r10,r10,#0x4\ntst r4,#0x40\nrsbne r10,r10,r3\naddeq r10,r10,r3\nstr r10,[sp,#0xc]\nb 0x00037610\nand r3,r0,#0xf0\ncmp r3,#0x80\nbne 0x000375e4\nmov r4,r0, lsl #0x8\ncpy r0,r7\nbl 0x00037450\norr r0,r0,r4\ncmp r0,#0x8000\nbne 0x000375b4\nmov r0,#0x9\nb 0x0003785c\nmov r2,r0, lsl #0x14\nmov r1,#0x0\nmov r4,r0, lsl #0x4\nmov r2,r2, lsr #0x10\ncpy r0,r5\ncpy r3,r1\nbl 0x00016ccc\ncmp r0,#0x0\nbne 0x000375ac\ntst r4,#0x8000\nmovne r6,#0x1\nb 0x000374f4\ncmp r3,#0x90\nbne 0x0003762c\nand r3,r0,#0xd\ncmp r3,#0xd\nbeq 0x000375ac\nmov r1,#0x0\nstr r8,[sp,#0x0]\ncpy r0,r5\nand r2,r4,#0xf\ncpy r3,r1\nbl 0x00016c24\ncpy r0,r5\nmov r1,#0x0\nstr r8,[sp,#0x0]\nmov r2,#0xd\ncpy r3,r1\nbl 0x00016c30\nb 0x000374f4\ncmp r3,#0xa0\nbne 0x00037658\nmvn r2,r0\nand r2,r2,#0x7\nmov r2,r9, asr r2\ntst r0,#0x8\nand r2,r2,#0xff0\norrne r2,r2,#0x4000\ncpy r0,r5\nmov r1,#0x0\nb 0x00037684\ncmp r3,#0xb0\nbne 0x00037744\ncmp r0,#0xb1\nbne 0x0003768c\ncpy r0,r7\nbl 0x00037450\nsubs r2,r0,#0x0\nbeq 0x000375ac\nands r1,r2,#0xf0\nbne 0x000375ac\ncpy r0,r5\ncpy r3,r1\nb 0x00037848\ncmp r0,#0xb2\nbne 0x000376f8\nmov r1,#0x0\nmov r2,#0xd\ncpy r3,r1\nstr r8,[sp,#0x0]\ncpy r0,r5\nbl 0x00016c24\ncpy r0,r7\nbl 0x00037450\nmov r4,#0x2\nands r1,r0,#0x80\nldr r3,[sp,#0xc]\nand r0,r0,#0x7f\nbeq 0x000376e0\nadd r3,r3,r0, lsl r4\ncpy r0,r7\nstr r3,[sp,#0xc]\nadd r4,r4,#0x7\nbl 0x00037450\nb 0x000376b8\nadd r3,r3,#0x204\nadd r3,r3,r0, lsl r4\nstr r8,[sp,#0x0]\nstr r3,[sp,#0xc]\ncpy r0,r5\nb 0x0003761c\ncmp r0,#0xb3\nbne 0x00037720\ncpy r0,r7\nbl 0x00037450\nmov r1,#0x1\nand r2,r0,#0xf\nand r3,r0,#0xf0\nadd r2,r2,#0x1\ncpy r0,r5\nb 0x00037770\nand r3,r0,#0xfc\ncmp r3,#0xb4\nbeq 0x000375ac\nand r2,r0,#0x7\nadd r2,r2,#0x1\ncpy r0,r5\nmov r1,#0x1\norr r2,r2,#0x80000\nb 0x00037684\ncmp r3,#0xc0\nbne 0x00037824\ncmp r0,#0xc6\nbne 0x00037778\ncpy r0,r7\nbl 0x00037450\nmov r1,#0x3\nand r2,r0,#0xf\nand r3,r0,#0xf0\nadd r2,r2,#0x1\ncpy r0,r5\norr r2,r2,r3, lsl #0xc\nb 0x00037684\ncmp r0,#0xc7\nbne 0x000377a4\ncpy r0,r7\nbl 0x00037450\nsubs r2,r0,#0x0\nbeq 0x000375ac\nands r3,r2,#0xf0\nbne 0x000375ac\ncpy r0,r5\nmov r1,#0x4\nb 0x00037848\nand r3,r0,#0xf8\ncmp r3,#0xc0\nbne 0x000377c8\nand r2,r0,#0xf\nadd r2,r2,#0x1\ncpy r0,r5\nmov r1,#0x3\norr r2,r2,#0xa0000\nb 0x00037684\ncmp r0,#0xc8\nbne 0x000377f8\ncpy r0,r7\nbl 0x00037450\nmov r1,#0x1\nand r2,r0,#0xf0\nand r0,r0,#0xf\nadd r3,r0,#0x1\nadd r2,r2,#0x10\ncpy r0,r5\norr r2,r3,r2, lsl #0xc\nb 0x00037844\ncmp r0,#0xc9\nbne 0x000375ac\ncpy r0,r7\nbl 0x00037450\nmov r1,#0x1\nand r2,r0,#0xf\nand r3,r0,#0xf0\nadd r2,r2,#0x1\ncpy r0,r5\norr r2,r2,r3, lsl #0xc\nb 0x00037844\nand r3,r0,#0xf8\ncmp r3,#0xd0\nbne 0x000375ac\nand r2,r0,#0x7\nadd r2,r2,#0x1\ncpy r0,r5\nmov r1,#0x1\norr r2,r2,#0x80000\nmov r3,#0x5\nbl 0x00016ccc\ncmp r0,#0x0\nbne 0x000375ac\nb 0x000374f4\nmov r0,#0x0\nadd sp,sp,#0x10\nldmia sp!,{ r4 r5 r6 r7 r8 r9 r10 pc }\n'
p347
S'ff 47 2d e9\n00 50 a0 e1\n01 70 a0 e1\n00 60 a0 e3\n0c 80 8d e2\nff 9e a0 e3\n07 00 a0 e1\nd4 ff ff eb\nb0 00 50 e3\n00 40 a0 e1\n0f 00 00 1a\n00 00 56 e3\nd1 00 00 1a\n0c 40 8d e2\n06 10 a0 e1\n06 30 a0 e1\n00 40 8d e5\n05 00 a0 e1\n0e 20 a0 e3\nbd 7d ff eb\n00 40 8d e5\n05 00 a0 e1\n06 10 a0 e1\n0f 20 a0 e3\n06 30 a0 e1\nba 7d ff eb\nc3 00 00 ea\n80 10 10 e2\n0d 00 00 1a\n00 a1 a0 e1\n01 30 a0 e1\n00 80 8d e5\n05 00 a0 e1\n0d 20 a0 e3\nae 7d ff eb\nff a0 0a e2\n0c 30 9d e5\n04 a0 8a e2\n40 00 14 e3\n03 a0 6a 10\n03 a0 8a 00\n0c a0 8d e5\n21 00 00 ea\nf0 30 00 e2\n80 00 53 e3\n13 00 00 1a\n00 44 a0 e1\n07 00 a0 e1\nab ff ff eb\n04 00 80 e1\n02 09 50 e3\n01 00 00 1a\n09 00 a0 e3\na9 00 00 ea\n00 2a a0 e1\n00 10 a0 e3\n00 42 a0 e1\n22 28 a0 e1\n05 00 a0 e1\n01 30 a0 e1\nbe 7d ff eb\n00 00 50 e3\nf4 ff ff 1a\n02 09 14 e3\n01 60 a0 13\nc3 ff ff ea\n90 00 53 e3\n0f 00 00 1a\n0d 30 00 e2\n0d 00 53 e3\nec ff ff 0a\n00 10 a0 e3\n00 80 8d e5\n05 00 a0 e1\n0f 20 04 e2\n01 30 a0 e1\n84 7d ff eb\n05 00 a0 e1\n00 10 a0 e3\n00 80 8d e5\n0d 20 a0 e3\n01 30 a0 e1\n81 7d ff eb\nb1 ff ff ea\na0 00 53 e3\n08 00 00 1a\n00 20 e0 e1\n07 20 02 e2\n59 22 a0 e1\n08 00 10 e3\nff 2e 02 e2\n01 29 82 13\n05 00 a0 e1\n00 10 a0 e3\n0a 00 00 ea\nb0 00 53 e3\n38 00 00 1a\nb1 00 50 e3\n08 00 00 1a\n07 00 a0 e1\n77 ff ff eb\n00 20 50 e2\ncc ff ff 0a\nf0 10 12 e2\nca ff ff 1a\n05 00 a0 e1\n01 30 a0 e1\n6e 00 00 ea\nb2 00 50 e3\n18 00 00 1a\n00 10 a0 e3\n0d 20 a0 e3\n01 30 a0 e1\n00 80 8d e5\n05 00 a0 e1\n5d 7d ff eb\n07 00 a0 e1\n66 ff ff eb\n02 40 a0 e3\n80 10 10 e2\n0c 30 9d e5\n7f 00 00 e2\n05 00 00 0a\n10 34 83 e0\n07 00 a0 e1\n0c 30 8d e5\n07 40 84 e2\n5c ff ff eb\nf5 ff ff ea\n81 3f 83 e2\n10 34 83 e0\n00 80 8d e5\n0c 30 8d e5\n05 00 a0 e1\nc8 ff ff ea\nb3 00 50 e3\n07 00 00 1a\n07 00 a0 e1\n51 ff ff eb\n01 10 a0 e3\n0f 20 00 e2\nf0 30 00 e2\n01 20 82 e2\n05 00 a0 e1\n13 00 00 ea\nfc 30 00 e2\nb4 00 53 e3\n9f ff ff 0a\n07 20 00 e2\n01 20 82 e2\n05 00 a0 e1\n01 10 a0 e3\n02 27 82 e3\ncf ff ff ea\nc0 00 53 e3\n35 00 00 1a\nc6 00 50 e3\n08 00 00 1a\n07 00 a0 e1\n3c ff ff eb\n03 10 a0 e3\n0f 20 00 e2\nf0 30 00 e2\n01 20 82 e2\n05 00 a0 e1\n03 26 82 e1\nc2 ff ff ea\nc7 00 50 e3\n08 00 00 1a\n07 00 a0 e1\n31 ff ff eb\n00 20 50 e2\n86 ff ff 0a\nf0 30 12 e2\n84 ff ff 1a\n05 00 a0 e1\n04 10 a0 e3\n28 00 00 ea\nf8 30 00 e2\nc0 00 53 e3\n05 00 00 1a\n0f 20 00 e2\n01 20 82 e2\n05 00 a0 e1\n03 10 a0 e3\n0a 28 82 e3\nae ff ff ea\nc8 00 50 e3\n09 00 00 1a\n07 00 a0 e1\n1d ff ff eb\n01 10 a0 e3\nf0 20 00 e2\n0f 00 00 e2\n01 30 80 e2\n10 20 82 e2\n05 00 a0 e1\n02 26 83 e1\n12 00 00 ea\nc9 00 50 e3\n6a ff ff 1a\n07 00 a0 e1\n11 ff ff eb\n01 10 a0 e3\n0f 20 00 e2\nf0 30 00 e2\n01 20 82 e2\n05 00 a0 e1\n03 26 82 e1\n07 00 00 ea\nf8 30 00 e2\nd0 00 53 e3\n5e ff ff 1a\n07 20 00 e2\n01 20 82 e2\n05 00 a0 e1\n01 10 a0 e3\n02 27 82 e3\n05 30 a0 e3\n1f 7d ff eb\n00 00 50 e3\n55 ff ff 1a\n26 ff ff ea\n00 00 a0 e3\n10 d0 8d e2\nf0 87 bd e8\n'
p348
S'.text:000374dc\n.text:000374e0\n.text:000374e4\n.text:000374e8\n.text:000374ec\n.text:000374f0\n.text:000374f4\n.text:000374f8\n.text:000374fc\n.text:00037500\n.text:00037504\n.text:00037508\n.text:0003750c\n.text:00037510\n.text:00037514\n.text:00037518\n.text:0003751c\n.text:00037520\n.text:00037524\n.text:00037528\n.text:0003752c\n.text:00037530\n.text:00037534\n.text:00037538\n.text:0003753c\n.text:00037540\n.text:00037544\n.text:00037548\n.text:0003754c\n.text:00037550\n.text:00037554\n.text:00037558\n.text:0003755c\n.text:00037560\n.text:00037564\n.text:00037568\n.text:0003756c\n.text:00037570\n.text:00037574\n.text:00037578\n.text:0003757c\n.text:00037580\n.text:00037584\n.text:00037588\n.text:0003758c\n.text:00037590\n.text:00037594\n.text:00037598\n.text:0003759c\n.text:000375a0\n.text:000375a4\n.text:000375a8\n.text:000375ac\n.text:000375b0\n.text:000375b4\n.text:000375b8\n.text:000375bc\n.text:000375c0\n.text:000375c4\n.text:000375c8\n.text:000375cc\n.text:000375d0\n.text:000375d4\n.text:000375d8\n.text:000375dc\n.text:000375e0\n.text:000375e4\n.text:000375e8\n.text:000375ec\n.text:000375f0\n.text:000375f4\n.text:000375f8\n.text:000375fc\n.text:00037600\n.text:00037604\n.text:00037608\n.text:0003760c\n.text:00037610\n.text:00037614\n.text:00037618\n.text:0003761c\n.text:00037620\n.text:00037624\n.text:00037628\n.text:0003762c\n.text:00037630\n.text:00037634\n.text:00037638\n.text:0003763c\n.text:00037640\n.text:00037644\n.text:00037648\n.text:0003764c\n.text:00037650\n.text:00037654\n.text:00037658\n.text:0003765c\n.text:00037660\n.text:00037664\n.text:00037668\n.text:0003766c\n.text:00037670\n.text:00037674\n.text:00037678\n.text:0003767c\n.text:00037680\n.text:00037684\n.text:00037688\n.text:0003768c\n.text:00037690\n.text:00037694\n.text:00037698\n.text:0003769c\n.text:000376a0\n.text:000376a4\n.text:000376a8\n.text:000376ac\n.text:000376b0\n.text:000376b4\n.text:000376b8\n.text:000376bc\n.text:000376c0\n.text:000376c4\n.text:000376c8\n.text:000376cc\n.text:000376d0\n.text:000376d4\n.text:000376d8\n.text:000376dc\n.text:000376e0\n.text:000376e4\n.text:000376e8\n.text:000376ec\n.text:000376f0\n.text:000376f4\n.text:000376f8\n.text:000376fc\n.text:00037700\n.text:00037704\n.text:00037708\n.text:0003770c\n.text:00037710\n.text:00037714\n.text:00037718\n.text:0003771c\n.text:00037720\n.text:00037724\n.text:00037728\n.text:0003772c\n.text:00037730\n.text:00037734\n.text:00037738\n.text:0003773c\n.text:00037740\n.text:00037744\n.text:00037748\n.text:0003774c\n.text:00037750\n.text:00037754\n.text:00037758\n.text:0003775c\n.text:00037760\n.text:00037764\n.text:00037768\n.text:0003776c\n.text:00037770\n.text:00037774\n.text:00037778\n.text:0003777c\n.text:00037780\n.text:00037784\n.text:00037788\n.text:0003778c\n.text:00037790\n.text:00037794\n.text:00037798\n.text:0003779c\n.text:000377a0\n.text:000377a4\n.text:000377a8\n.text:000377ac\n.text:000377b0\n.text:000377b4\n.text:000377b8\n.text:000377bc\n.text:000377c0\n.text:000377c4\n.text:000377c8\n.text:000377cc\n.text:000377d0\n.text:000377d4\n.text:000377d8\n.text:000377dc\n.text:000377e0\n.text:000377e4\n.text:000377e8\n.text:000377ec\n.text:000377f0\n.text:000377f4\n.text:000377f8\n.text:000377fc\n.text:00037800\n.text:00037804\n.text:00037808\n.text:0003780c\n.text:00037810\n.text:00037814\n.text:00037818\n.text:0003781c\n.text:00037820\n.text:00037824\n.text:00037828\n.text:0003782c\n.text:00037830\n.text:00037834\n.text:00037838\n.text:0003783c\n.text:00037840\n.text:00037844\n.text:00037848\n.text:0003784c\n.text:00037850\n.text:00037854\n.text:00037858\n.text:0003785c\n.text:00037860\n'
p349
tp350
sS'apply_abr_preset'
p351
(S'\n__stdcall apply_abr_preset()\n'
p352
V\u000avoid apply_abr_preset(undefined4 uParm1,uint uParm2,int iParm3)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  uint uVar4;\u000a  \u000a  uVar1 = nearestBitrateFullIndex(DAT_00024620 & uParm2);\u000a  lame_set_VBR(uParm1,3);\u000a  lame_set_VBR_mean_bitrate_kbps(uParm1,uParm2);\u000a  iVar2 = lame_get_VBR_mean_bitrate_kbps(uParm1);\u000a  if (0x13f < iVar2) {\u000a    iVar2 = 0x140;\u000a  }\u000a  lame_set_VBR_mean_bitrate_kbps(uParm1,iVar2);\u000a  iVar2 = lame_get_VBR_mean_bitrate_kbps(uParm1);\u000a  if (iVar2 < 9) {\u000a    iVar2 = 8;\u000a  }\u000a  lame_set_VBR_mean_bitrate_kbps(uParm1,iVar2);\u000a  uVar3 = lame_get_VBR_mean_bitrate_kbps(uParm1);\u000a  lame_set_brate(uParm1,uVar3);\u000a  if (uVar1 - 0xc < 5) {\u000a    uVar4 = lame_get_exp_nspsytune(uParm1);\u000a    lame_set_exp_nspsytune(uParm1,uVar4 | 2);\u000a  }\u000a  if (uVar1 < 0xd) {\u000a    lame_set_sfscale(uParm1,1);\u000a  }\u000a  if (iParm3 != 0) {\u000a    iVar2 = DAT_000247cc + 0x24436 + uVar1 * 0x34;\u000a    lame_set_quant_comp(uParm1,*(undefined4 *)(iVar2 + 4));\u000a    lame_set_quant_comp_short(uParm1,*(undefined4 *)(iVar2 + 8));\u000a                    /* WARNING: Subroutine does not return */\u000a    __extendsfdf2(*(undefined4 *)(iVar2 + 0x10));\u000a  }\u000a  iVar2 = lame_get_quant_comp(uParm1);\u000a  if (iVar2 == -1) {\u000a    lame_set_quant_comp(uParm1,*(undefined4 *)(DAT_000247b8 + uVar1 * 0x34 + 0x24490));\u000a  }\u000a  iVar2 = lame_get_quant_comp_short(uParm1);\u000a  if (iVar2 == -1) {\u000a    lame_set_quant_comp_short(uParm1,*(undefined4 *)(DAT_000247bc + uVar1 * 0x34 + 0x244b6));\u000a  }\u000a  lame_get_msfix(uParm1);\u000a                    /* WARNING: Subroutine does not return */\u000a  __addsf3();\u000a}\u000a\u000a
p353
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\nstr r2,[sp,#0x10]\npush { r1 }\npop { r4 }\nstr r4,[sp,#0xc]\npush { r0 }\npop { r5 }\nldr r0,[0x00024620]\nand r0,r4\nbl 0x00037e50\npush { r0 }\npop { r6 }\nmov r1,#0x3\npush { r5 }\npop { r0 }\nbl 0x000380d0\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nbl 0x00037ea0\npush { r5 }\npop { r0 }\nbl 0x000380e0\npush { r0 }\npop { r1 }\n'
p354
S'f0 b5\n03 af\n85 b0\n04 92\n02 b4\n10 bc\n03 94\n01 b4\n20 bc\na6 48\n20 40\n13 f0 61 fd\n01 b4\n40 bc\n03 21\n20 b4\n01 bc\n13 f0 9a fe\n20 b4\n01 bc\n10 b4\n02 bc\n13 f0 7c fd\n20 b4\n01 bc\n13 f0 98 fe\n01 b4\n02 bc\n'
p355
S'.text:00024374\n.text:00024376\n.text:00024378\n.text:0002437a\n.text:0002437c\n.text:0002437e\n.text:00024380\n.text:00024382\n.text:00024384\n.text:00024386\n.text:00024388\n.text:0002438a\n.text:0002438e\n.text:00024390\n.text:00024392\n.text:00024394\n.text:00024396\n.text:00024398\n.text:0002439c\n.text:0002439e\n.text:000243a0\n.text:000243a2\n.text:000243a4\n.text:000243a8\n.text:000243aa\n.text:000243ac\n.text:000243b0\n.text:000243b2\n'
p356
tp357
sS'ATHformula_GB'
p358
(S'\n__stdcall ATHformula_GB(FLOAT f, FLOAT value, FLOAT f_min, FLOAT f_max)\n'
p359
V\u000aFLOAT ATHformula_GB(FLOAT f,FLOAT value,FLOAT f_min,FLOAT f_max)\u000a\u000a{\u000a  undefined4 in_r0;\u000a  int iVar1;\u000a  undefined4 in_r1;\u000a  int in_r2;\u000a  FLOAT extraout_s0;\u000a  undefined8 uVar2;\u000a  undefined4 in_stack_00000004;\u000a  undefined4 in_stack_00000008;\u000a  undefined4 in_stack_0000000c;\u000a  undefined4 in_stack_00000010;\u000a  int in_stack_00000014;\u000a  \u000a  uVar2 = __muldf3(in_r0,in_r1,in_r2 << 0x1d,DAT_000213d4);\u000a  iVar1 = __aeabi_dcmple(in_stack_0000000c,in_stack_00000010,(int)((ulonglong)uVar2 >> 0x20),\u000a                         (int)uVar2);\u000a  if (iVar1 == 0) {\u000a    uVar2 = __muldf3(in_stack_00000008,in_stack_00000004,0,DAT_000213dc);\u000a                    /* WARNING: Subroutine does not return */\u000a    __adddf3((int)((ulonglong)uVar2 >> 0x20),(int)uVar2,0,DAT_000213e0);\u000a  }\u000a  *(undefined4 *)(in_stack_00000014 + DAT_000213d8) = 0;\u000a  if (*(int *)(in_stack_00000014 + 0x84) != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __extendsfdf2(*(undefined4 *)(in_stack_00000014 + DAT_000213e4));\u000a  }\u000a  return extraout_s0;\u000a}\u000a\u000a
p360
S'lsl r2,r2,#0x1d\nldr r3,[0x000213d4]\nbl 0x00037ad0\npush { r0 }\npop { r2 }\npush { r1 }\npop { r3 }\nb 0x0002130e\n'
p361
S'52 07\n36 4b\n16 f0 e8 fb\n01 b4\n04 bc\n02 b4\n08 bc\n01 e0\n'
p362
S'.text:000212f8\n.text:000212fa\n.text:000212fc\n.text:00021300\n.text:00021302\n.text:00021304\n.text:00021306\n.text:00021308\n'
p363
tp364
sS'__gnu_Unwind_Save_VFP_D_16_to_31'
p365
(S'\n__stdcall __gnu_Unwind_Save_VFP_D_16_to_31()\n'
p366
V\u000a/* WARNING: Control flow encountered unimplemented instructions */\u000a\u000avoid __gnu_Unwind_Save_VFP_D_16_to_31(void)\u000a\u000a{\u000a                    /* WARNING: Unimplemented instruction - Truncating control flow here */\u000a  halt_unimplemented();\u000a}\u000a\u000a
p367
S'vstmia r0,{d16,d17,d18,d19,d20,d21,d22,d23,d24,d25,d26,d27,d28,d29,d30,d31}\nbx lr\n'
p368
S'20 0b c0 ec\n1e ff 2f e1\n'
p369
S'.text:000372e4\n.text:000372e8\n'
p370
tp371
sS'__aeabi_cdrcmple'
p372
(S'\n__stdcall __aeabi_cdrcmple()\n'
p373
V\u000avoid __aeabi_cdrcmple(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  __aeabi_cdcmple(uParm3,uParm4,uParm1,uParm2);\u000a  return;\u000a}\u000a\u000a
p374
S'cpy r12,r0\ncpy r0,r2\ncpy r2,r12\ncpy r12,r1\ncpy r1,r3\ncpy r3,r12\nb 0x00035b10\n'
p375
S'00 c0 a0 e1\n02 00 a0 e1\n0c 20 a0 e1\n01 c0 a0 e1\n03 10 a0 e1\n0c 30 a0 e1\nff ff ff ea\n'
p376
S'.text:00035af4\n.text:00035af8\n.text:00035afc\n.text:00035b00\n.text:00035b04\n.text:00035b08\n.text:00035b0c\n'
p377
tp378
sS'count_bits'
p379
(S'\n__stdcall count_bits()\n'
p380
V\u000avoid count_bits(undefined4 uParm1,undefined4 uParm2,int iParm3)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __divsf3(DAT_00030160,\u000a           *(undefined4 *)(*(int *)(DAT_0003015c + 0x2fdea) + *(int *)(iParm3 + DAT_00030158) * 4));\u000a}\u000a\u000a
p381
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x64\nstr r3,[sp,#0x34]\npush { r2 }\npop { r6 }\nstr r1,[sp,#0x38]\nstr r0,[sp,#0x1c]\nldr r5,[0x00030158]\nldr r0,[r6,r5]\nstr r0,[sp,#0x60]\nlsl r0,r0,#0x2\nldr r1,[0x0003015c]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r4,[r1,r0]\nldr r0,[0x00030160]\npush { r4 }\npop { r1 }\nbl 0x00037a90\n'
p382
S'f0 b5\n03 af\n99 b0\n0d 93\n04 b4\n40 bc\n0e 91\n07 90\nde 4d\n70 59\n18 90\n80 00\ndd 49\n79 44\n09 68\n0c 58\ndc 48\n10 b4\n02 bc\n07 f0 4d fe\n'
p383
S'.text:0002fdcc\n.text:0002fdce\n.text:0002fdd0\n.text:0002fdd2\n.text:0002fdd4\n.text:0002fdd6\n.text:0002fdd8\n.text:0002fdda\n.text:0002fddc\n.text:0002fdde\n.text:0002fde0\n.text:0002fde2\n.text:0002fde4\n.text:0002fde6\n.text:0002fde8\n.text:0002fdea\n.text:0002fdec\n.text:0002fdee\n.text:0002fdf0\n.text:0002fdf2\n'
p384
tp385
sS'lame_get_copyright'
p386
(S'\n__stdcall lame_get_copyright(lame_global_flags * gfp)\n'
p387
V\u000aint lame_get_copyright(lame_global_flags *gfp)\u000a\u000a{\u000a  char cVar1;\u000a  char *pcVar2;\u000a  int in_r1;\u000a  int iVar3;\u000a  char *pcVar4;\u000a  char unaff_r4;\u000a  char *unaff_r5;\u000a  int unaff_r6;\u000a  char *in_stack_0000000c;\u000a  int in_stack_00000018;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  int in_stack_00000030;\u000a  \u000a  while (0 < in_r1) {\u000a    *(undefined *)(unaff_r6 + in_r1 + 3) = (char)((uint)gfp >> 8);\u000a    in_r1 = in_r1 + -1;\u000a    gfp = (lame_global_flags *)((uint)gfp >> 8);\u000a  }\u000a  *(char *)(unaff_r6 + 8) = unaff_r4;\u000a  *(char *)(unaff_r6 + 9) = unaff_r4;\u000a  *(char *)(unaff_r6 + 10) = unaff_r4;\u000a  pcVar4 = (char *)(unaff_r6 + 0xb);\u000a  cVar1 = *in_stack_0000000c;\u000a  if (cVar1 != 0) {\u000a    pcVar2 = in_stack_0000000c + 1;\u000a    do {\u000a      *pcVar4 = cVar1;\u000a      pcVar4 = pcVar4 + 1;\u000a      cVar1 = *pcVar2;\u000a      pcVar2 = pcVar2 + 1;\u000a    } while (cVar1 != 0);\u000a  }\u000a  *pcVar4 = unaff_r4;\u000a  pcVar4[1] = unaff_r4;\u000a  pcVar4[2] = unaff_r4;\u000a  pcVar2 = pcVar4 + 3;\u000a  iVar3 = in_stack_00000030;\u000a  do {\u000a    *pcVar2 = *unaff_r5;\u000a    pcVar2 = pcVar2 + 1;\u000a    unaff_r5 = unaff_r5 + 1;\u000a    iVar3 = iVar3 + -1;\u000a  } while (iVar3 != 0);\u000a  __aeabi_memclr(pcVar4 + in_stack_00000030 + 3,\u000a                 (in_stack_0000002c + in_stack_00000018) - (int)(pcVar4 + in_stack_00000030 + 3));\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) != *in_stack_00000020) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return in_stack_0000002c;\u000a}\u000a\u000a
p388
S'lsr r0,r0,#0x8\ncmp r1,#0x0\nbgt 0x0001e406\nstrb r4,[r6,#0x8]\nstrb r4,[r6,#0x9]\nstrb r4,[r6,#0xa]\nadd r6,#0xb\nldr r1,[sp,#0xc]\nldrb r0,[r1,#0x0]\ncmp r0,#0x0\nbeq 0x0001e43a\nadd r1,#0x1\npush { r6 }\n'
p389
S'00 0a\n00 29\nf9 dc\n34 72\n74 72\nb4 72\n0b 36\n03 99\n08 78\n00 28\n0b d0\n01 31\n40 b4\n'
p390
S'.text:0001e40c\n.text:0001e40e\n.text:0001e410\n.text:0001e412\n.text:0001e414\n.text:0001e416\n.text:0001e418\n.text:0001e41a\n.text:0001e41c\n.text:0001e41e\n.text:0001e420\n.text:0001e422\n.text:0001e424\n'
p391
tp392
sS'memcpy'
p393
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p394
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_00040fbc)();\u000a  return pvVar1;\u000a}\u000a\u000a
p395
S'adr r12,0x16c14\nadd r12,r12,#0x2a000\nldr pc,[r12,#0x3a8]!\n'
p396
S'00 c6 8f e2\n2a ca 8c e2\na8 f3 bc e5\n'
p397
S'.plt:00016c0c\n.plt:00016c10\n.plt:00016c14\n'
p398
tp399
sS'lame_set_sfscale'
p400
(S'\n__stdcall lame_set_sfscale()\n'
p401
V\u000avoid lame_set_sfscale(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038100 + DAT_000380fc))();\u000a  return;\u000a}\u000a\u000a
p402
S'ldr r12,[0x380fc]\nadd pc,r12,pc\n'
p403
S'00 c0 9f e5\n0f f0 8c e0\n'
p404
S'.text:000380f4\n.text:000380f8\n'
p405
tp406
sS'__gnu_Unwind_Restore_VFP_D_16_to_31'
p407
(S'\n__stdcall __gnu_Unwind_Restore_VFP_D_16_to_31()\n'
p408
V\u000a/* WARNING: Control flow encountered unimplemented instructions */\u000a\u000avoid __gnu_Unwind_Restore_VFP_D_16_to_31(void)\u000a\u000a{\u000a                    /* WARNING: Unimplemented instruction - Truncating control flow here */\u000a  halt_unimplemented();\u000a}\u000a\u000a
p409
S'vldmia r0,{d16,d17,d18,d19,d20,d21,d22,d23,d24,d25,d26,d27,d28,d29,d30,d31}\nbx lr\n'
p410
S'20 0b d0 ec\n1e ff 2f e1\n'
p411
S'.text:000372dc\n.text:000372e0\n'
p412
tp413
sS'__aeabi_fcmpeq'
p414
(S'\n__stdcall __aeabi_fcmpeq()\n'
p415
V\u000avoid __aeabi_fcmpeq(void)\u000a\u000a{\u000a  (*(__unordsf2 + DAT_00037dec))();\u000a  return;\u000a}\u000a\u000a
p416
S'ldr r12,[0x37dec]\nadd pc,r12,pc\n'
p417
S'00 c0 9f e5\n0f f0 8c e0\n'
p418
S'.text:00037de4\n.text:00037de8\n'
p419
tp420
sS'__gnu_unwind_24bit.isra.1'
p421
(S'\n__stdcall __gnu_unwind_24bit.isra.1()\n'
p422
V\u000aundefined4 __gnu_unwind_24bit_isra_1(void)\u000a\u000a{\u000a  return 9;\u000a}\u000a\u000a
p423
S'mov r0,#0x9\nbx lr\n'
p424
S'09 00 a0 e3\n1e ff 2f e1\n'
p425
S'.text:00036650\n.text:00036654\n'
p426
tp427
sS'id3tag_set_textinfo_ucs2'
p428
(S'\n__stdcall id3tag_set_textinfo_ucs2()\n'
p429
V\u000avoid id3tag_set_textinfo_ucs2(void)\u000a\u000a{\u000a  id3tag_set_textinfo_utf16();\u000a  return;\u000a}\u000a\u000a
p430
S'push { r7, lr }\nadd r7,sp,#0x0\nbl 0x00037cc0\npop { r7, pc }\n'
p431
S'80 b5\n00 af\n1a f0 e2 fd\n80 bd\n'
p432
S'.text:0001d0f4\n.text:0001d0f6\n.text:0001d0f8\n.text:0001d0fc\n'
p433
tp434
sS'best_huffman_divide'
p435
(S'\n__stdcall best_huffman_divide()\n'
p436
V\u000avoid best_huffman_divide(void)\u000a\u000a{\u000a  (*(ResvAdjust + DAT_0003837c))();\u000a  return;\u000a}\u000a\u000a
p437
S'ldr r12,[0x3837c]\nadd pc,r12,pc\n'
p438
S'00 c0 9f e5\n0f f0 8c e0\n'
p439
S'.text:00038374\n.text:00038378\n'
p440
tp441
sS'__gnu_Unwind_Restore_WMMXD'
p442
(S'\n__stdcall __gnu_Unwind_Restore_WMMXD()\n'
p443
V\u000aint __gnu_Unwind_Restore_WMMXD(int iParm1)\u000a\u000a{\u000a  undefined4 in_cr0;\u000a  undefined4 in_cr1;\u000a  undefined4 in_cr2;\u000a  undefined4 in_cr3;\u000a  undefined4 in_cr4;\u000a  undefined4 in_cr5;\u000a  undefined4 in_cr6;\u000a  undefined4 in_cr7;\u000a  undefined4 in_cr8;\u000a  undefined4 in_cr9;\u000a  undefined4 in_cr10;\u000a  undefined4 in_cr11;\u000a  undefined4 in_cr12;\u000a  undefined4 in_cr13;\u000a  undefined4 in_cr14;\u000a  undefined4 in_cr15;\u000a  \u000a  coprocessor_loadlong(1,in_cr0,iParm1);\u000a  coprocessor_loadlong(1,in_cr1,iParm1 + 8);\u000a  coprocessor_loadlong(1,in_cr2,iParm1 + 0x10);\u000a  coprocessor_loadlong(1,in_cr3,iParm1 + 0x18);\u000a  coprocessor_loadlong(1,in_cr4,iParm1 + 0x20);\u000a  coprocessor_loadlong(1,in_cr5,iParm1 + 0x28);\u000a  coprocessor_loadlong(1,in_cr6,iParm1 + 0x30);\u000a  coprocessor_loadlong(1,in_cr7,iParm1 + 0x38);\u000a  coprocessor_loadlong(1,in_cr8,iParm1 + 0x40);\u000a  coprocessor_loadlong(1,in_cr9,iParm1 + 0x48);\u000a  coprocessor_loadlong(1,in_cr10,iParm1 + 0x50);\u000a  coprocessor_loadlong(1,in_cr11,iParm1 + 0x58);\u000a  coprocessor_loadlong(1,in_cr12,iParm1 + 0x60);\u000a  coprocessor_loadlong(1,in_cr13,iParm1 + 0x68);\u000a  coprocessor_loadlong(1,in_cr14,iParm1 + 0x70);\u000a  coprocessor_loadlong(1,in_cr15,iParm1 + 0x78);\u000a  return iParm1 + 0x80;\u000a}\u000a\u000a
p444
S'ldcl p1,cr0,[r0],#0x8\nldcl p1,cr1,[r0],#0x8\nldcl p1,cr2,[r0],#0x8\nldcl p1,cr3,[r0],#0x8\nldcl p1,cr4,[r0],#0x8\nldcl p1,cr5,[r0],#0x8\nldcl p1,cr6,[r0],#0x8\nldcl p1,cr7,[r0],#0x8\nldcl p1,cr8,[r0],#0x8\nldcl p1,cr9,[r0],#0x8\nldcl p1,cr10,[r0],#0x8\nldcl p1,cr11,[r0],#0x8\nldcl p1,cr12,[r0],#0x8\nldcl p1,cr13,[r0],#0x8\nldcl p1,cr14,[r0],#0x8\nldcl p1,cr15,[r0],#0x8\nbx lr\n'
p445
S'02 01 f0 ec\n02 11 f0 ec\n02 21 f0 ec\n02 31 f0 ec\n02 41 f0 ec\n02 51 f0 ec\n02 61 f0 ec\n02 71 f0 ec\n02 81 f0 ec\n02 91 f0 ec\n02 a1 f0 ec\n02 b1 f0 ec\n02 c1 f0 ec\n02 d1 f0 ec\n02 e1 f0 ec\n02 f1 f0 ec\n1e ff 2f e1\n'
p446
S'.text:000372ec\n.text:000372f0\n.text:000372f4\n.text:000372f8\n.text:000372fc\n.text:00037300\n.text:00037304\n.text:00037308\n.text:0003730c\n.text:00037310\n.text:00037314\n.text:00037318\n.text:0003731c\n.text:00037320\n.text:00037324\n.text:00037328\n.text:0003732c\n'
p447
tp448
sS'lame_get_VBR_q'
p449
(S'\n__stdcall lame_get_VBR_q(lame_global_flags * gfp)\n'
p450
V\u000aint lame_get_VBR_q(lame_global_flags *gfp)\u000a\u000a{\u000a  int unaff_r4;\u000a  undefined4 unaff_r5;\u000a  int unaff_r6;\u000a  int in_stack_00000080;\u000a  \u000a  do {\u000a    add_dummy_byte(unaff_r5);\u000a    unaff_r4 = unaff_r4 + 1;\u000a  } while (unaff_r6 != unaff_r4);\u000a  if (**(int **)(DAT_0001e7ec + 0x1e7d0) != in_stack_00000080) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return unaff_r6;\u000a}\u000a\u000a
p451
S'mov r2,#0x1\npush { r5 }\npop { r0 }\nbl 0x00037d70\nadd r4,#0x1\ncmp r6,r4\nbne 0x0001e7b2\npush { r6 }\npop { r4 }\n'
p452
S'01 22\n20 b4\n01 bc\n19 f0 d8 fa\n01 34\na6 42\nf5 d1\n40 b4\n10 bc\n'
p453
S'.text:0001e7b6\n.text:0001e7b8\n.text:0001e7ba\n.text:0001e7bc\n.text:0001e7c0\n.text:0001e7c2\n.text:0001e7c4\n.text:0001e7c6\n.text:0001e7c8\n'
p454
tp455
sS'SmpFrqIndex'
p456
(S'\n__stdcall SmpFrqIndex()\n'
p457
V\u000avoid SmpFrqIndex(void)\u000a\u000a{\u000a  (*(FindNearestBitrate + DAT_00037e3c))();\u000a  return;\u000a}\u000a\u000a
p458
S'ldr r12,[0x37e3c]\nadd pc,r12,pc\n'
p459
S'00 c0 9f e5\n0f f0 8c e0\n'
p460
S'.text:00037e34\n.text:00037e38\n'
p461
tp462
sS'__gnu_Unwind_Restore_WMMXC'
p463
(S'\n__stdcall __gnu_Unwind_Restore_WMMXC()\n'
p464
V\u000aint __gnu_Unwind_Restore_WMMXC(int iParm1)\u000a\u000a{\u000a  undefined4 in_cr8;\u000a  undefined4 in_cr9;\u000a  undefined4 in_cr10;\u000a  undefined4 in_cr11;\u000a  \u000a  coprocessor_load2(1,in_cr8,iParm1);\u000a  coprocessor_load2(1,in_cr9,iParm1 + 4);\u000a  coprocessor_load2(1,in_cr10,iParm1 + 8);\u000a  coprocessor_load2(1,in_cr11,iParm1 + 0xc);\u000a  return iParm1 + 0x10;\u000a}\u000a\u000a
p465
S'ldc2 p1,cr8,[r0],#0x4\nldc2 p1,cr9,[r0],#0x4\nldc2 p1,cr10,[r0],#0x4\nldc2 p1,cr11,[r0],#0x4\nbx lr\n'
p466
S'01 81 b0 fc\n01 91 b0 fc\n01 a1 b0 fc\n01 b1 b0 fc\n1e ff 2f e1\n'
p467
S'.text:00037374\n.text:00037378\n.text:0003737c\n.text:00037380\n.text:00037384\n'
p468
tp469
sS'ShortHuffmancodebits'
p470
(S'\n__stdcall ShortHuffmancodebits()\n'
p471
V\u000aint ShortHuffmancodebits(int iParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  \u000a  iVar2 = DAT_00019ddc;\u000a  iVar3 = *(int *)(iParm2 + DAT_00019ddc);\u000a  iVar1 = *(int *)(iParm1 + DAT_00019de0) * 3;\u000a  if (iVar1 - iVar3 == 0 || iVar1 < iVar3) {\u000a    iVar3 = iVar1;\u000a  }\u000a  iVar1 = Huffmancode(iParm1,*(undefined4 *)(iParm2 + DAT_00019dd8),0,iVar3,iParm2);\u000a  iVar2 = Huffmancode(iParm1,*(undefined4 *)(iParm2 + 0x12c0),iVar3,*(undefined4 *)(iParm2 + iVar2),\u000a                      iParm2);\u000a  return iVar2 + iVar1;\u000a}\u000a\u000a
p472
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nldr r0,[0x00019dd8]\nldr r1,[r5,r0]\nldr r0,[0x00019ddc]\nstr r0,[sp,#0x8]\nldr r6,[r5,r0]\nldr r0,[0x00019de0]\nldr r2,[r4,r0]\nmov r0,sp\nstr r5,[r0,#0x0]\nmov r0,#0x3\nmul r0,r2\ncmp r0,r6\nbgt 0x00019da4\npush { r0 }\npop { r6 }\nmov r2,#0x0\npush { r4 }\npop { r0 }\npush { r6 }\npop { r3 }\nbl 0x0001a090\nstr r0,[sp,#0x4]\nldr r0,[sp,#0x8]\nldr r3,[r5,r0]\nmov r0,#0x4b\nlsl r0,r0,#0x6\nldr r1,[r5,r0]\nmov r0,sp\nstr r5,[r0,#0x0]\npush { r4 }\npop { r0 }\npush { r6 }\npop { r2 }\nbl 0x0001a090\nldr r1,[sp,#0x4]\nadd r0,r0,r1\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p473
S'f0 b5\n03 af\n83 b0\n02 b4\n20 bc\n01 b4\n10 bc\n14 48\n29 58\n14 48\n02 90\n2e 58\n13 48\n22 58\n68 46\n05 60\n03 20\n50 43\nb0 42\n01 dc\n01 b4\n40 bc\n00 22\n10 b4\n01 bc\n40 b4\n08 bc\n00 f0 6f f9\n01 90\n02 98\n2b 58\n4b 20\n80 01\n29 58\n68 46\n05 60\n10 b4\n01 bc\n40 b4\n04 bc\n00 f0 61 f9\n01 99\n40 18\n03 b0\nf0 bd\n'
p474
S'.text:00019d78\n.text:00019d7a\n.text:00019d7c\n.text:00019d7e\n.text:00019d80\n.text:00019d82\n.text:00019d84\n.text:00019d86\n.text:00019d88\n.text:00019d8a\n.text:00019d8c\n.text:00019d8e\n.text:00019d90\n.text:00019d92\n.text:00019d94\n.text:00019d96\n.text:00019d98\n.text:00019d9a\n.text:00019d9c\n.text:00019d9e\n.text:00019da0\n.text:00019da2\n.text:00019da4\n.text:00019da6\n.text:00019da8\n.text:00019daa\n.text:00019dac\n.text:00019dae\n.text:00019db2\n.text:00019db4\n.text:00019db6\n.text:00019db8\n.text:00019dba\n.text:00019dbc\n.text:00019dbe\n.text:00019dc0\n.text:00019dc2\n.text:00019dc4\n.text:00019dc6\n.text:00019dc8\n.text:00019dca\n.text:00019dce\n.text:00019dd0\n.text:00019dd2\n.text:00019dd4\n'
p475
tp476
sS'init_bit_stream_w'
p477
(S'\n__stdcall init_bit_stream_w()\n'
p478
V\u000avoid init_bit_stream_w(int iParm1)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  *(undefined4 *)(iParm1 + DAT_00019d6c) = 0;\u000a  *(undefined4 *)(iParm1 + DAT_00019d70) = 0;\u000a  *(undefined4 *)(iParm1 + DAT_00019d74) = 0;\u000a  pvVar1 = malloc((size_t)&DAT_00024000);\u000a  *(void **)(iParm1 + 0x11c) = pvVar1;\u000a  *(undefined4 *)(iParm1 + 0x120) = 0x24000;\u000a  *(undefined4 *)(iParm1 + 0x128) = 0xffffffff;\u000a  *(undefined4 *)(iParm1 + 300) = 0;\u000a  *(undefined4 *)(iParm1 + 0x124) = 0;\u000a  return;\u000a}\u000a\u000a
p479
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r0 }\npop { r4 }\nldr r0,[0x00019d6c]\nmov r6,#0x0\nstr r6,[r4,r0]\nldr r0,[0x00019d70]\nstr r6,[r4,r0]\nldr r0,[0x00019d74]\nstr r6,[r4,r0]\nmov r0,#0x9\nstr r0,[sp,#0x0]\nlsl r5,r0,#0xe\npush { r5 }\npop { r0 }\nbl 0x00037a20\nmov r1,#0x47\nlsl r1,r1,#0x2\nstr r0,[r4,r1]\nldr r0,[sp,#0x0]\nlsl r0,r0,#0x5\nstr r5,[r4,r0]\nmov r0,#0x25\nlsl r0,r0,#0x3\nmvn r1,r6\nstr r1,[r4,r0]\nmov r0,#0x4b\nlsl r0,r0,#0x2\nstr r6,[r4,r0]\nmov r0,#0x49\nlsl r0,r0,#0x2\nstr r6,[r4,r0]\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p480
S'f0 b5\n03 af\n81 b0\n01 b4\n10 bc\n10 48\n00 26\n26 50\n0f 48\n26 50\n0f 48\n26 50\n09 20\n00 90\n85 03\n20 b4\n01 bc\n1d f0 6d fe\n47 21\n89 00\n60 50\n00 98\n40 01\n25 50\n25 20\nc0 00\nf1 43\n21 50\n4b 20\n80 00\n26 50\n49 20\n80 00\n26 50\n01 b0\nf0 bd\n'
p481
S'.text:00019d20\n.text:00019d22\n.text:00019d24\n.text:00019d26\n.text:00019d28\n.text:00019d2a\n.text:00019d2c\n.text:00019d2e\n.text:00019d30\n.text:00019d32\n.text:00019d34\n.text:00019d36\n.text:00019d38\n.text:00019d3a\n.text:00019d3c\n.text:00019d3e\n.text:00019d40\n.text:00019d42\n.text:00019d46\n.text:00019d48\n.text:00019d4a\n.text:00019d4c\n.text:00019d4e\n.text:00019d50\n.text:00019d52\n.text:00019d54\n.text:00019d56\n.text:00019d58\n.text:00019d5a\n.text:00019d5c\n.text:00019d5e\n.text:00019d60\n.text:00019d62\n.text:00019d64\n.text:00019d66\n.text:00019d68\n'
p482
tp483
sS'__gnu_unwind_frame'
p484
(S'\n__stdcall __gnu_unwind_frame()\n'
p485
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000avoid __gnu_unwind_frame(int iParm1,undefined4 uParm2,undefined4 uParm3,uint uParm4)\u000a\u000a{\u000a  int iVar1;\u000a  int local_14;\u000a  int local_10;\u000a  uint local_c;\u000a  \u000a  iVar1 = *(int *)(iParm1 + 0x4c);\u000a  local_14 = *(int *)(iVar1 + 4) << 8;\u000a  local_10 = iVar1 + 8;\u000a  local_c._0_2_ = CONCAT11(*(byte *)(iVar1 + 7),3);\u000a  local_c = uParm4 & 0xffff0000 | (uint)(ushort)local_c;\u000a  __gnu_unwind_execute(uParm2,&local_14,3,(uint)*(byte *)(iVar1 + 7),iParm1);\u000a  return;\u000a}\u000a\u000a
p486
S'stmdb sp!,{ r0 r1 r2 r3 r4 lr }\nldr r3,[r0,#0x4c]\ncpy r0,r1\nldr r2,[r3,#0x4]\nadd r1,sp,#0x4\nmov r2,r2, lsl #0x8\nstr r2,[sp,#0x4]\nadd r2,r3,#0x8\nstr r2,[sp,#0x8]\nmov r2,#0x3\nstrb r2,[sp,#0xc]\nldrb r3,[r3,#0x7]\nstrb r3,[sp,#0xd]\nbl 0x00016c54\nadd sp,sp,#0x14\nldr pc,[sp],#0x4\n'
p487
S'1f 40 2d e9\n4c 30 90 e5\n01 00 a0 e1\n04 20 93 e5\n04 10 8d e2\n02 24 a0 e1\n04 20 8d e5\n08 20 83 e2\n08 20 8d e5\n03 20 a0 e3\n0c 20 cd e5\n07 30 d3 e5\n0d 30 cd e5\ned 7c ff eb\n14 d0 8d e2\n04 f0 9d e4\n'
p488
S'.text:00037864\n.text:00037868\n.text:0003786c\n.text:00037870\n.text:00037874\n.text:00037878\n.text:0003787c\n.text:00037880\n.text:00037884\n.text:00037888\n.text:0003788c\n.text:00037890\n.text:00037894\n.text:00037898\n.text:0003789c\n.text:000378a0\n'
p489
tp490
sS'reduce_bit_usage'
p491
(S'\n__stdcall reduce_bit_usage()\n'
p492
V\u000aint reduce_bit_usage(int iParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  best_scalefac_store(iParm1,iParm2,iParm3,iParm1 + 0x130);\u000a  if (*(int *)(iParm1 + 0x24) == 1) {\u000a    best_huffman_divide(iParm1,iParm1 + iParm2 * DAT_00033ca8 + iParm3 * DAT_00033ca4 + 0x130);\u000a  }\u000a  iVar1 = iParm1 + iParm2 * DAT_00033ca8 + iParm3 * DAT_00033ca4;\u000a  return *(int *)(iVar1 + DAT_00033cb0) + *(int *)(iVar1 + DAT_00033cac);\u000a}\u000a\u000a
p493
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r2 }\npop { r6 }\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nmov r0,#0x13\nlsl r0,r0,#0x4\nstr r0,[sp,#0x0]\nadd r3,r4,r0\npush { r4 }\npop { r0 }\nbl 0x00038360\nldr r0,[r4,#0x24]\ncmp r0,#0x1\nbne 0x00033c88\nldr r0,[0x00033ca4]\nmul r0,r6\nldr r1,[0x00033ca8]\nmul r1,r5\nadd r1,r4,r1\nadd r0,r1,r0\nldr r1,[sp,#0x0]\nadd r1,r0,r1\npush { r4 }\npop { r0 }\nbl 0x00038370\nldr r0,[0x00033ca4]\nmul r0,r6\nldr r1,[0x00033ca8]\nmul r1,r5\nadd r1,r4,r1\nadd r0,r1,r0\nldr r1,[0x00033cac]\nldr r1,[r0,r1]\nldr r2,[0x00033cb0]\nldr r0,[r0,r2]\nadd r0,r0,r1\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p494
S'f0 b5\n03 af\n81 b0\n04 b4\n40 bc\n02 b4\n20 bc\n01 b4\n10 bc\n13 20\n00 01\n00 90\n23 18\n10 b4\n01 bc\n04 f0 7b fb\n60 6a\n01 28\n0b d1\n0c 48\n70 43\n0c 49\n69 43\n61 18\n08 18\n00 99\n41 18\n10 b4\n01 bc\n04 f0 74 fb\n06 48\n70 43\n06 49\n69 43\n61 18\n08 18\n05 49\n41 58\n05 4a\n80 58\n40 18\n01 b0\nf0 bd\n'
p495
S'.text:00033c48\n.text:00033c4a\n.text:00033c4c\n.text:00033c4e\n.text:00033c50\n.text:00033c52\n.text:00033c54\n.text:00033c56\n.text:00033c58\n.text:00033c5a\n.text:00033c5c\n.text:00033c5e\n.text:00033c60\n.text:00033c62\n.text:00033c64\n.text:00033c66\n.text:00033c6a\n.text:00033c6c\n.text:00033c6e\n.text:00033c70\n.text:00033c72\n.text:00033c74\n.text:00033c76\n.text:00033c78\n.text:00033c7a\n.text:00033c7c\n.text:00033c7e\n.text:00033c80\n.text:00033c82\n.text:00033c84\n.text:00033c88\n.text:00033c8a\n.text:00033c8c\n.text:00033c8e\n.text:00033c90\n.text:00033c92\n.text:00033c94\n.text:00033c96\n.text:00033c98\n.text:00033c9a\n.text:00033c9c\n.text:00033c9e\n.text:00033ca0\n'
p496
tp497
sS'sprintf'
p498
(S'\n__stdcall sprintf(char * __s, char * __format)\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sprintf(char *__s,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(strncmp + DAT_00037c8c))();\u000a  return iVar1;\u000a}\u000a\u000a
p500
S'ldr r12,[0x37c8c]\nadd pc,r12,pc\n'
p501
S'00 c0 9f e5\n0f f0 8c e0\n'
p502
S'.text:00037c84\n.text:00037c88\n'
p503
tp504
sS'lame_get_ATHcurve'
p505
(S'\n__stdcall lame_get_ATHcurve()\n'
p506
V\u000aundefined4 lame_get_ATHcurve(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xe0);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p507
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ec94\nmov r0,#0xe0\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p508
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 d5 fb\n01 b4\n02 bc\n00 20\n00 29\n01 d0\ne0 20\n20 58\nd0 bd\n'
p509
S'.text:0002ec7a\n.text:0002ec7c\n.text:0002ec7e\n.text:0002ec80\n.text:0002ec82\n.text:0002ec86\n.text:0002ec88\n.text:0002ec8a\n.text:0002ec8c\n.text:0002ec8e\n.text:0002ec90\n.text:0002ec92\n.text:0002ec94\n'
p510
tp511
sS'_Unwind_GetDataRelBase'
p512
(S'\n__stdcall _Unwind_GetDataRelBase()\n'
p513
V\u000avoid _Unwind_GetDataRelBase(void)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p514
S'stmdb sp!,{ r3 lr }\nbl 0x00016bf4\n'
p515
S'08 40 2d e9\nc6 7c ff eb\n'
p516
S'.text:000378d0\n.text:000378d4\n'
p517
tp518
sS'__udivsi3'
p519
(S'\n__stdcall __udivsi3()\n'
p520
V\u000avoid __udivsi3(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038470 + DAT_0003846c))();\u000a  return;\u000a}\u000a\u000a
p521
S'ldr r12,[0x3846c]\nadd pc,r12,pc\n'
p522
S'00 c0 9f e5\n0f f0 8c e0\n'
p523
S'.text:00038464\n.text:00038468\n'
p524
tp525
sS'lame_get_samplerate'
p526
(S'\n__stdcall lame_get_samplerate()\n'
p527
V\u000aundefined4 lame_get_samplerate(uint uParm1,uint uParm2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  \u000a  uVar1 = 0xffffffff;\u000a  if ((uParm1 < 3) && (uParm2 < 4)) {\u000a    uVar1 = *(undefined4 *)(*(int *)(DAT_0002f600 + 0x2f5f8) + uParm1 * 0x10 + uParm2 * 4);\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p528
S'push { r0 }\npop { r2 }\nmov r0,#0x0\nmvn r0,r0\ncmp r2,#0x2\nbhi 0x0002f5fe\ncmp r1,#0x3\nbhi 0x0002f5fe\nlsl r0,r2,#0x4\nldr r2,[0x0002f600]\nadd r2,pc\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nlsl r1,r1,#0x2\nldr r0,[r0,r1]\nbx lr\n'
p529
S'01 b4\n04 bc\n00 20\nc0 43\n02 2a\n08 d8\n03 29\n06 d8\n10 01\n03 4a\n7a 44\n12 68\n10 18\n89 00\n40 58\n70 47\n'
p530
S'.text:0002f5e0\n.text:0002f5e2\n.text:0002f5e4\n.text:0002f5e6\n.text:0002f5e8\n.text:0002f5ea\n.text:0002f5ec\n.text:0002f5ee\n.text:0002f5f0\n.text:0002f5f2\n.text:0002f5f4\n.text:0002f5f6\n.text:0002f5f8\n.text:0002f5fa\n.text:0002f5fc\n.text:0002f5fe\n'
p531
tp532
sS'strlen'
p533
(S'\n__stdcall strlen(char * __s)\n'
p534
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(__aeabi_memclr8 + DAT_000379ec))();\u000a  return sVar1;\u000a}\u000a\u000a
p535
S'ldr r12,[0x379ec]\nadd pc,r12,pc\n'
p536
S'00 c0 9f e5\n0f f0 8c e0\n'
p537
S'.text:000379e4\n.text:000379e8\n'
p538
tp539
sS'lame_block_type_hist'
p540
(S'\n__stdcall lame_block_type_hist()\n'
p541
V\u000avoid lame_block_type_hist(int *piParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = DAT_00021b5c;\u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_00021b58)) &&\u000a      (piVar2 = (int *)piParm1[0x48], piVar2 != (int *)0x0)) && (*piVar2 == DAT_00021b58)) {\u000a    iVar3 = 0;\u000a    do {\u000a      *(undefined4 *)(iParm2 + iVar3 * -4) = *(undefined4 *)((int)piVar2 + iVar3 * -4 + iVar1);\u000a      iVar3 = iVar3 + -1;\u000a    } while (iVar3 != -6);\u000a  }\u000a  return;\u000a}\u000a\u000a
p542
S'push { r4, lr }\ncmp r0,#0x0\nbeq 0x00021b56\nldr r2,[r0,#0x0]\nldr r3,[0x00021b58]\ncmp r2,r3\nbne 0x00021b56\nmov r2,#0x9\nlsl r2,r2,#0x5\nldr r0,[r0,r2]\ncmp r0,#0x0\nbeq 0x00021b56\nldr r2,[r0,#0x0]\nldr r3,[0x00021b58]\ncmp r2,r3\nbne 0x00021b56\nldr r2,[0x00021b5c]\nadd r0,r0,r2\nmov r2,#0x0\nlsl r3,r2,#0x2\nsub r4,r1,r3\nsub r3,r0,r3\nldr r3,[r3,#0x0]\nstr r3,[r4,#0x0]\nsub r2,#0x1\nmov r3,#0x5\nmvn r3,r3\ncmp r2,r3\nbne 0x00021b42\npop { r4, pc }\n'
p543
S'10 b5\n00 28\n19 d0\n02 68\n0c 4b\n9a 42\n15 d1\n09 22\n52 01\n80 58\n00 28\n10 d0\n02 68\n08 4b\n9a 42\n0c d1\n07 4a\n80 18\n00 22\n93 00\ncc 1a\nc3 1a\n1b 68\n23 60\n01 3a\n05 23\ndb 43\n9a 42\nf5 d1\n10 bd\n'
p544
S'.text:00021b1c\n.text:00021b1e\n.text:00021b20\n.text:00021b22\n.text:00021b24\n.text:00021b26\n.text:00021b28\n.text:00021b2a\n.text:00021b2c\n.text:00021b2e\n.text:00021b30\n.text:00021b32\n.text:00021b34\n.text:00021b36\n.text:00021b38\n.text:00021b3a\n.text:00021b3c\n.text:00021b3e\n.text:00021b40\n.text:00021b42\n.text:00021b44\n.text:00021b46\n.text:00021b48\n.text:00021b4a\n.text:00021b4c\n.text:00021b4e\n.text:00021b50\n.text:00021b52\n.text:00021b54\n.text:00021b56\n'
p545
tp546
sS'FUN_000221ec'
p547
(S'\n__stdcall FUN_000221ec(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19)\n'
p548
V\u000avoid FUN_000221ec(void)\u000a\u000a{\u000a  int param_4;\u000a  int unaff_r4;\u000a  int param_14;\u000a  int param_15;\u000a  int param_16;\u000a  int param_17;\u000a  int param_18;\u000a  int param_19;\u000a  \u000a  param_18 = *(int *)(DAT_00022294 + 0x2221c + param_4 * 4) * 4;\u000a  param_19 = unaff_r4 + DAT_00022278 + param_14 + param_16 + param_18;\u000a  param_17 = param_4;\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(*(undefined4 *)(unaff_r4 + DAT_00022278 + param_4 * 4 + param_15 * 0x400));\u000a}\u000a\u000a
p549
S'ldr r0,[sp,#0xe0]\nldr r1,[r0,#0x0]\nldr r0,[sp,#0xdc]\nldr r0,[r0,#0x0]\ncmp r1,#0x0\nldr r5,[sp,#0xd8]\nbne 0x000221fe\npush { r0 }\npop { r5 }\ncmp r3,#0x2\nblt 0x00022206\npush { r0 }\npop { r5 }\nldr r0,[0x00022278]\nadd r0,r4,r0\nldr r1,[sp,#0xe4]\nadd r1,r0,r1\nldr r2,[sp,#0xec]\nadd r1,r1,r2\nlsl r2,r3,#0x2\nstr r3,[sp,#0x104]\nldr r3,[0x00022294]\nadd r3,pc\nldr r3,[r3,r2]\nlsl r3,r3,#0x2\nstr r3,[sp,#0x150]\nadd r1,r1,r3\nstr r1,[sp,#0x15c]\nadd r0,r0,r2\nldr r1,[sp,#0xe8]\nlsl r1,r1,#0xa\nadd r6,r0,r1\nldr r4,[r0,r1]\npush { r4 }\npop { r0 }\nbl 0x00037ac0\n'
p550
S'38 98\n01 68\n37 98\n00 68\n00 29\n36 9d\n01 d1\n01 b4\n20 bc\n02 2b\n01 db\n01 b4\n20 bc\n1c 48\n20 18\n39 99\n41 18\n3b 9a\n89 18\n9a 00\n41 93\n1f 4b\n7b 44\n9b 58\n9b 00\n54 93\nc9 18\n57 91\n80 18\n3a 99\n89 02\n46 18\n44 58\n10 b4\n01 bc\n15 f0 45 fc\n'
p551
S'.text:000221ec\n.text:000221ee\n.text:000221f0\n.text:000221f2\n.text:000221f4\n.text:000221f6\n.text:000221f8\n.text:000221fa\n.text:000221fc\n.text:000221fe\n.text:00022200\n.text:00022202\n.text:00022204\n.text:00022206\n.text:00022208\n.text:0002220a\n.text:0002220c\n.text:0002220e\n.text:00022210\n.text:00022212\n.text:00022214\n.text:00022216\n.text:00022218\n.text:0002221a\n.text:0002221c\n.text:0002221e\n.text:00022220\n.text:00022222\n.text:00022224\n.text:00022226\n.text:00022228\n.text:0002222a\n.text:0002222c\n.text:0002222e\n.text:00022230\n.text:00022232\n'
p552
tp553
sS'athAdjust'
p554
(S'\n__stdcall athAdjust()\n'
p555
V\u000avoid athAdjust(void)\u000a\u000a{\u000a  (*(code *)(&UNK_000383d0 + DAT_000383cc))();\u000a  return;\u000a}\u000a\u000a
p556
S'ldr r12,[0x383cc]\nadd pc,r12,pc\n'
p557
S'00 c0 9f e5\n0f f0 8c e0\n'
p558
S'.text:000383c4\n.text:000383c8\n'
p559
tp560
sS'filter_coef'
p561
(S'\n__stdcall filter_coef()\n'
p562
V\u000avoid filter_coef(undefined4 uParm1)\u000a\u000a{\u000a  __aeabi_fcmpgt(uParm1,0x3f800000);\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(uParm1);\u000a}\u000a\u000a
p563
S'push { r4, r5, r6, r7, lr }\n'
p564
S'f0 b5\n'
p565
S'.text:00021bf0\n'
p566
tp567
sS'lame_set_VBR_max_bitrate_kbps'
p568
(S'\n__stdcall lame_set_VBR_max_bitrate_kbps(lame_global_flags * gfp, int VBR_max_bitrate_kbps)\n'
p569
V\u000aint lame_set_VBR_max_bitrate_kbps(lame_global_flags *gfp,int VBR_max_bitrate_kbps)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  \u000a  if (gfp != (lame_global_flags *)0x0) {\u000a    free((void *)gfp->class_id);\u000a    gfp->class_id = 0;\u000a    iVar4 = -2;\u000a    iVar3 = -1;\u000a    if (VBR_max_bitrate_kbps != 0) {\u000a      do {\u000a        iVar2 = iVar3;\u000a        iVar1 = VBR_max_bitrate_kbps + iVar4;\u000a        iVar4 = iVar4 + 2;\u000a        iVar3 = iVar2 + 1;\u000a      } while (*(short *)(iVar1 + 2) != 0);\u000a      if (iVar3 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        calloc(iVar2 + 2,2);\u000a      }\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p570
S'sub sp,#0xc\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nmov r0,#0x0\ncmp r5,#0x0\nbeq 0x0001e9a6\nldr r0,[r5,#0x0]\nbl 0x00037ca0\nmov r0,#0x0\nstr r0,[r5,#0x0]\nstr r5,[sp,#0x8]\nmvn r5,r0\nmov r1,#0x1\nmvn r6,r1\ncmp r4,#0x0\nbeq 0x0001e9a6\n'
p571
S'83 b0\n02 b4\n10 bc\n01 b4\n20 bc\n00 20\n00 2d\n2e d0\n28 68\n19 f0 a9 f9\n00 20\n28 60\n02 95\nc5 43\n01 21\nce 43\n00 2c\n23 d0\n'
p572
S'.text:0001e938\n.text:0001e93a\n.text:0001e93c\n.text:0001e93e\n.text:0001e940\n.text:0001e942\n.text:0001e944\n.text:0001e946\n.text:0001e948\n.text:0001e94a\n.text:0001e94e\n.text:0001e950\n.text:0001e952\n.text:0001e954\n.text:0001e956\n.text:0001e958\n.text:0001e95a\n.text:0001e95c\n'
p573
tp574
sS'lame_set_VBR_mean_bitrate_kbps'
p575
(S'\n__stdcall lame_set_VBR_mean_bitrate_kbps()\n'
p576
V\u000avoid lame_set_VBR_mean_bitrate_kbps(void)\u000a\u000a{\u000a  (*(BitrateIndex + DAT_00037eac))();\u000a  return;\u000a}\u000a\u000a
p577
S'ldr r12,[0x37eac]\nadd pc,r12,pc\n'
p578
S'00 c0 9f e5\n0f f0 8c e0\n'
p579
S'.text:00037ea4\n.text:00037ea8\n'
p580
tp581
sS'LongHuffmancodebits'
p582
(S'\n__stdcall LongHuffmancodebits()\n'
p583
V\u000aint LongHuffmancodebits(int iParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  \u000a  iVar4 = *(int *)((*(int *)(iParm2 + DAT_00019e7c) + *(int *)(iParm2 + DAT_00019e78)) * 4 +\u000a                   iParm1 + DAT_00019e80 + 8);\u000a  iVar3 = *(int *)(*(int *)(iParm2 + DAT_00019e7c) * 4 + iParm1 + DAT_00019e80 + 4);\u000a  iVar5 = *(int *)(iParm2 + DAT_00019e88);\u000a  iVar2 = iVar5;\u000a  if (iVar3 <= iVar5) {\u000a    iVar2 = iVar3;\u000a  }\u000a  iVar1 = Huffmancode(iParm1,*(undefined4 *)(iParm2 + DAT_00019e84),0,iVar2,iParm2);\u000a  iVar3 = iVar5;\u000a  if (iVar4 <= iVar5) {\u000a    iVar3 = iVar4;\u000a  }\u000a  iVar2 = Huffmancode(iParm1,*(undefined4 *)(iParm2 + 0x12c0),iVar2,iVar3,iParm2);\u000a  iVar3 = Huffmancode(iParm1,*(undefined4 *)(iParm2 + DAT_00019e8c),iVar3,iVar5,iParm2);\u000a  return iVar2 + iVar1 + iVar3;\u000a}\u000a\u000a
p584
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\npush { r1 }\npop { r5 }\nldr r1,[0x00019e78]\nldr r2,[r5,r1]\nldr r1,[0x00019e7c]\nldr r1,[r5,r1]\nadd r2,r1,r2\nlsl r3,r2,#0x2\nldr r2,[0x00019e80]\nadd r2,r0,r2\nadd r3,r3,r2\nldr r4,[r3,#0x8]\nlsl r1,r1,#0x2\nadd r1,r1,r2\nldr r3,[r1,#0x4]\nldr r1,[0x00019e84]\nldr r1,[r5,r1]\nldr r2,[0x00019e88]\nldr r6,[r5,r2]\nmov r2,sp\nstr r5,[r2,#0x0]\ncmp r3,r6\npush { r6 }\npop { r2 }\nbgt 0x00019e20\npush { r3 }\npop { r2 }\nstr r2,[sp,#0xc]\npush { r2 }\npop { r3 }\nmov r2,#0x0\nstr r0,[sp,#0x10]\nbl 0x0001a090\nstr r0,[sp,#0x8]\nmov r0,#0x4b\nlsl r0,r0,#0x6\nldr r1,[r5,r0]\nmov r0,sp\nstr r5,[r0,#0x0]\ncmp r4,r6\n'
p585
S'f0 b5\n03 af\n85 b0\n02 b4\n20 bc\n22 49\n6a 58\n22 49\n69 58\n8a 18\n93 00\n21 4a\n82 18\n9b 18\n9c 68\n89 00\n89 18\n4b 68\n1e 49\n69 58\n1e 4a\nae 58\n6a 46\n15 60\nb3 42\n40 b4\n04 bc\n01 dc\n08 b4\n04 bc\n03 92\n04 b4\n08 bc\n00 22\n04 90\n00 f0 31 f9\n02 90\n4b 20\n80 01\n29 58\n68 46\n05 60\nb4 42\n'
p586
S'.text:00019de4\n.text:00019de6\n.text:00019de8\n.text:00019dea\n.text:00019dec\n.text:00019dee\n.text:00019df0\n.text:00019df2\n.text:00019df4\n.text:00019df6\n.text:00019df8\n.text:00019dfa\n.text:00019dfc\n.text:00019dfe\n.text:00019e00\n.text:00019e02\n.text:00019e04\n.text:00019e06\n.text:00019e08\n.text:00019e0a\n.text:00019e0c\n.text:00019e0e\n.text:00019e10\n.text:00019e12\n.text:00019e14\n.text:00019e16\n.text:00019e18\n.text:00019e1a\n.text:00019e1c\n.text:00019e1e\n.text:00019e20\n.text:00019e22\n.text:00019e24\n.text:00019e26\n.text:00019e28\n.text:00019e2a\n.text:00019e2e\n.text:00019e30\n.text:00019e32\n.text:00019e34\n.text:00019e36\n.text:00019e38\n.text:00019e3a\n'
p587
tp588
sS'lame_set_highpassfreq'
p589
(S'\n__stdcall lame_set_highpassfreq(lame_global_flags * gfp, int highpassfreq)\n'
p590
V\u000aint lame_set_highpassfreq(lame_global_flags *gfp,int highpassfreq)\u000a\u000a{\u000a  int iVar1;\u000a  int in_r2;\u000a  undefined uVar2;\u000a  undefined uVar3;\u000a  undefined *unaff_r5;\u000a  undefined uVar4;\u000a  int unaff_r7;\u000a  bool in_ZR;\u000a  int in_stack_00000000;\u000a  int in_stack_00000004;\u000a  \u000a  while (iVar1 = DAT_0001ea54, in_ZR == false) {\u000a    uVar4 = (undefined)*(undefined2 *)highpassfreq;\u000a    uVar2 = (undefined)((ushort)*(undefined2 *)highpassfreq >> 8);\u000a    uVar3 = uVar2;\u000a    if (unaff_r7 != DAT_0001ea54) {\u000a      uVar3 = uVar4;\u000a    }\u000a    unaff_r5[-1] = uVar3;\u000a    if (unaff_r7 != iVar1) {\u000a      uVar4 = uVar2;\u000a    }\u000a    *unaff_r5 = uVar4;\u000a    unaff_r5 = unaff_r5 + 2;\u000a    in_r2 = in_r2 + 1;\u000a    highpassfreq = (int)((undefined2 *)highpassfreq + 1);\u000a    in_ZR = in_r2 == 0;\u000a  }\u000a  return in_stack_00000004 + in_stack_00000000;\u000a}\u000a\u000a
p591
S'bne 0x0001ea1e\n'
p592
S'eb d1\n'
p593
S'.text:0001ea44\n'
p594
tp595
sS'toID3v2TagId'
p596
(S'\n__stdcall toID3v2TagId()\n'
p597
V\u000auint toID3v2TagId(int iParm1)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  \u000a  if (iParm1 == 0) {\u000aLAB_0001cf18:\u000a    uVar1 = 0;\u000a  }\u000a  else {\u000a    uVar2 = 0;\u000a    uVar1 = 0;\u000a    do {\u000a      uVar3 = (uint)*(byte *)(iParm1 + uVar2);\u000a      if (*(byte *)(iParm1 + uVar2) == 0) {\u000a        return uVar1;\u000a      }\u000a      uVar1 = uVar1 << 8 | uVar3;\u000a      uVar2 = uVar2 + 1;\u000a      if ((0x19 < (uVar3 - 0x41 & 0xff)) && (9 < (uVar3 - 0x30 & 0xff))) goto LAB_0001cf18;\u000a    } while (uVar2 < 4);\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p598
S'push { r4, r5, r6, lr }\npush { r0 }\npop { r1 }\nmov r2,#0x0\ncmp r1,#0x0\nbeq 0x0001cf18\npush { r2 }\npop { r3 }\npush { r2 }\npop { r0 }\nldrb r4,[r1,r3]\ncmp r4,#0x0\nbeq 0x0001cf1c\nlsl r0,r0,#0x8\norr r0,r4\npush { r4 }\npop { r6 }\nsub r6,#0x41\nmov r5,#0xff\nand r6,r5\nsub r4,#0x30\nadd r3,#0x1\ncmp r6,#0x1a\nbcc 0x0001cf12\nand r4,r5\ncmp r4,#0xa\nbcs 0x0001cf18\ncmp r3,#0x3\nbls 0x0001cef0\nb 0x0001cf1c\npush { r2 }\npop { r0 }\npop { r4, r5, r6, pc }\n'
p599
S'70 b5\n01 b4\n02 bc\n00 22\n00 29\n17 d0\n04 b4\n08 bc\n04 b4\n01 bc\ncc 5c\n00 2c\n12 d0\n00 02\n20 43\n10 b4\n40 bc\n41 3e\nff 25\n2e 40\n30 3c\n01 33\n1a 2e\n02 d3\n2c 40\n0a 2c\n02 d2\n03 2b\nec d9\n01 e0\n04 b4\n01 bc\n70 bd\n'
p600
S'.text:0001cedc\n.text:0001cede\n.text:0001cee0\n.text:0001cee2\n.text:0001cee4\n.text:0001cee6\n.text:0001cee8\n.text:0001ceea\n.text:0001ceec\n.text:0001ceee\n.text:0001cef0\n.text:0001cef2\n.text:0001cef4\n.text:0001cef6\n.text:0001cef8\n.text:0001cefa\n.text:0001cefc\n.text:0001cefe\n.text:0001cf00\n.text:0001cf02\n.text:0001cf04\n.text:0001cf06\n.text:0001cf08\n.text:0001cf0a\n.text:0001cf0c\n.text:0001cf0e\n.text:0001cf10\n.text:0001cf12\n.text:0001cf14\n.text:0001cf16\n.text:0001cf18\n.text:0001cf1a\n.text:0001cf1c\n'
p601
tp602
sS'is_lame_global_flags_valid'
p603
(S'\n__stdcall is_lame_global_flags_valid()\n'
p604
V\u000avoid is_lame_global_flags_valid(void)\u000a\u000a{\u000a  (*(is_lame_internal_flags_valid + DAT_0003843c))();\u000a  return;\u000a}\u000a\u000a
p605
S'ldr r12,[0x3843c]\nadd pc,r12,pc\n'
p606
S'00 c0 9f e5\n0f f0 8c e0\n'
p607
S'.text:00038434\n.text:00038438\n'
p608
tp609
sS'id3tag_set_comment'
p610
(S'\n__stdcall id3tag_set_comment()\n'
p611
V\u000avoid id3tag_set_comment(int iParm1,char *pcParm2)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  \u000a  if ((((iParm1 != 0) && (pcParm2 != (char *)0x0)) && (iVar3 = *(int *)(iParm1 + 0x120), iVar3 != 0)\u000a      ) && (*pcParm2 != 0)) {\u000a    local_strdup(iVar3 + DAT_0001d8d4,pcParm2);\u000a    iVar1 = DAT_0001d8d8;\u000a    uVar2 = *(uint *)(iVar3 + DAT_0001d8d8) | 1;\u000a    *(uint *)(iVar3 + DAT_0001d8d8) = uVar2;\u000a    id3v2_add_latin1(iParm1,DAT_0001d8dc,DAT_0001d8e0 + 0x1d8c0,DAT_0001d8e4 + 0x1d8c4,pcParm2);\u000a    *(uint *)(iVar3 + iVar1) = uVar2;\u000a  }\u000a  return;\u000a}\u000a\u000a
p612
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\ncmp r4,#0x0\nbeq 0x0001d8d0\nmov r0,#0x9\nlsl r0,r0,#0x5\ncmp r5,#0x0\nbeq 0x0001d8d0\nldr r6,[r4,r0]\ncmp r6,#0x0\nbeq 0x0001d8d0\nldrb r0,[r5,#0x0]\ncmp r0,#0x0\nbeq 0x0001d8d0\nldr r0,[0x0001d8d4]\nadd r0,r6,r0\npush { r5 }\npop { r1 }\nbl 0x0001d66c\nldr r1,[0x0001d8d8]\nstr r1,[sp,#0x4]\nldr r0,[r6,r1]\nmov r2,#0x1\norr r2,r0\nstr r2,[sp,#0x8]\nstr r2,[r6,r1]\nmov r0,sp\nstr r5,[r0,#0x0]\nldr r1,[0x0001d8dc]\nldr r2,[0x0001d8e0]\nadd r2,pc\nldr r3,[0x0001d8e4]\nadd r3,pc\npush { r4 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x4]\nstr r0,[r6,r1]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p613
S'f0 b5\n03 af\n83 b0\n02 b4\n20 bc\n01 b4\n10 bc\n00 2c\n24 d0\n09 20\n40 01\n00 2d\n20 d0\n26 58\n00 2e\n1d d0\n28 78\n00 28\n1a d0\n0e 48\n30 18\n20 b4\n02 bc\nff f7 e3 fe\n0c 49\n01 91\n70 58\n01 22\n02 43\n02 92\n72 50\n68 46\n05 60\n08 49\n09 4a\n7a 44\n09 4b\n7b 44\n10 b4\n01 bc\nff f7 73 fd\n02 98\n01 99\n70 50\n03 b0\nf0 bd\n'
p614
S'.text:0001d874\n.text:0001d876\n.text:0001d878\n.text:0001d87a\n.text:0001d87c\n.text:0001d87e\n.text:0001d880\n.text:0001d882\n.text:0001d884\n.text:0001d886\n.text:0001d888\n.text:0001d88a\n.text:0001d88c\n.text:0001d88e\n.text:0001d890\n.text:0001d892\n.text:0001d894\n.text:0001d896\n.text:0001d898\n.text:0001d89a\n.text:0001d89c\n.text:0001d89e\n.text:0001d8a0\n.text:0001d8a2\n.text:0001d8a6\n.text:0001d8a8\n.text:0001d8aa\n.text:0001d8ac\n.text:0001d8ae\n.text:0001d8b0\n.text:0001d8b2\n.text:0001d8b4\n.text:0001d8b6\n.text:0001d8b8\n.text:0001d8ba\n.text:0001d8bc\n.text:0001d8be\n.text:0001d8c0\n.text:0001d8c2\n.text:0001d8c4\n.text:0001d8c6\n.text:0001d8ca\n.text:0001d8cc\n.text:0001d8ce\n.text:0001d8d0\n.text:0001d8d2\n'
p615
tp616
sS'lame_set_num_samples'
p617
(S'\n__stdcall lame_set_num_samples(lame_global_flags * gfp, ulong num_samples)\n'
p618
V\u000aint lame_set_num_samples(lame_global_flags *gfp,ulong num_samples)\u000a\u000a{\u000a  int iVar1;\u000a  int in_r2;\u000a  int unaff_r4;\u000a  \u000a  iVar1 = (int)((int)gfp - unaff_r4) * 2;\u000a  *(undefined2 *)(in_r2 + iVar1) = 0;\u000a  return iVar1;\u000a}\u000a\u000a
p619
S'sub r3,r0,r4\n'
p620
S'03 1b\n'
p621
S'.text:0001dd74\n'
p622
tp623
sS'lame_get_scale_right'
p624
(S'\n__stdcall lame_get_scale_right(lame_global_flags * gfp)\n'
p625
V\u000afloat lame_get_scale_right(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  uint uVar3;\u000a  lame_global_flags *gfp_00;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  undefined4 unaff_r4;\u000a  int iVar9;\u000a  undefined4 *puVar10;\u000a  undefined4 unaff_r5;\u000a  uint uVar11;\u000a  undefined4 unaff_r6;\u000a  uint uVar12;\u000a  undefined *puVar13;\u000a  float extraout_s0;\u000a  float extraout_s0_00;\u000a  float extraout_s0_01;\u000a  float fVar14;\u000a  int *piStack00000004;\u000a  undefined4 *puStack00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  undefined4 in_stack_00000028;\u000a  uint in_stack_0000002c;\u000a  int *in_stack_00000030;\u000a  \u000a  iVar1 = __aeabi_dcmplt(unaff_r4,in_stack_00000028,unaff_r5,unaff_r5);\u000a  if (iVar1 == 0) {\u000a    unaff_r5 = __fixunsdfsi(unaff_r4,in_stack_00000028,unaff_r5);\u000a  }\u000a  sprintf(&stack0x00000038,(char *)(DAT_0001e1bc + 0x1df06),unaff_r5);\u000a  iVar1 = DAT_0001e198;\u000a  iVar9 = *in_stack_00000030;\u000a  fVar14 = extraout_s0;\u000a  if (iVar9 != 0) {\u000a    uVar2 = *(undefined4 *)(iVar9 + DAT_0001e198);\u000a    fVar14 = (float)id3v2_add_latin1(unaff_r6,DAT_0001e1c0,DAT_0001e1c4 + 0x1df24,0);\u000a    *(undefined4 *)(iVar9 + iVar1) = uVar2;\u000a  }\u000a  piStack00000004 = (int *)(in_stack_0000001c + DAT_0001e1c8);\u000a  if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a      (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a     (uVar3 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar3 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar3 * 4));\u000a  }\u000a  puVar10 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a  puStack00000008 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a  while (puVar10 != (undefined4 *)0x0) {\u000a    uVar3 = puVar10[1];\u000a    uVar12 = 0xff;\u000a    if ((uVar3 == DAT_0001e1dc) || (uVar7 = 0, iVar1 = in_stack_00000024, uVar3 == DAT_0001e1e0)) {\u000a      iVar1 = puVar10[4] * 2 + 0x10;\u000a      if (puVar10[5] != 1) {\u000a        iVar1 = puVar10[4] + 0xf;\u000a      }\u000a      iVar9 = puVar10[7];\u000a      if (puVar10[8] == 1) {\u000a        iVar9 = iVar9 << 1;\u000a      }\u000a      iVar1 = iVar1 + iVar9;\u000a    }\u000a    else {\u000a      do {\u000a        uVar11 = uVar12 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar11 != (uVar12 & uVar3)) {\u000a          uVar6 = uVar12 & uVar3;\u000a        }\u000a        if (uVar11 == 0) {\u000a          uVar6 = uVar11;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar1 = iVar1 + -1;\u000a        uVar12 = uVar12 << 8;\u000a      } while (iVar1 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar1 = sizeOfWxxxNode(puVar10);\u000a        fVar14 = extraout_s0_00;\u000a      }\u000a      else {\u000a        iVar9 = puVar10[7];\u000a        iVar4 = puVar10[4];\u000a        if (puVar10[8] == 1) {\u000a          iVar1 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar1 = 0xb;\u000a          }\u000a          iVar9 = iVar9 << 1;\u000a        }\u000a        else {\u000a          iVar1 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar1 = 0xb;\u000a          }\u000a        }\u000a        iVar1 = iVar1 + iVar9;\u000a      }\u000a    }\u000a    in_stack_0000002c = iVar1 + in_stack_0000002c;\u000a    puVar10 = (undefined4 *)*puVar10;\u000a  }\u000a  if ((*in_stack_00000010 & 0x20) != 0) {\u000a    in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a  }\u000a  uVar3 = in_stack_0000002c;\u000a  if ((in_stack_0000002c <= in_stack_00000014) && (uVar3 = 0, in_stack_00000018 != (undefined *)0x0)\u000a     ) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    in_stack_00000030 = (int *)0x0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar3 = in_stack_0000002c - 10;\u000a    in_stack_00000018[6] = (byte)(uVar3 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar3 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar3 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar3 & 0x7f;\u000a    puVar13 = in_stack_00000018 + 10;\u000a    puVar10 = (undefined4 *)*puStack00000008;\u000a    while (puVar10 != (undefined4 *)0x0) {\u000a      uVar3 = puVar10[1];\u000a      uVar12 = 0xff;\u000a      iVar1 = 4;\u000a      if ((uVar3 == DAT_0001e494) || (uVar7 = (uint)in_stack_00000030, uVar3 == DAT_0001e498)) {\u000a        iVar1 = puVar10[4] * 2 + 0x10;\u000a        if (puVar10[5] != 1) {\u000a          iVar1 = puVar10[4] + 0xf;\u000a        }\u000a        iVar9 = 0;\u000a        if (puVar10[8] == 1) {\u000a          iVar9 = puVar10[8];\u000a        }\u000a        uVar12 = (puVar10[7] << iVar9) + iVar1;\u000a        iVar1 = 4;\u000a        if (10 < uVar12) {\u000a          do {\u000a            puVar13[iVar1 + -1] = (char)uVar3;\u000a            iVar1 = iVar1 + -1;\u000a            uVar3 = uVar3 >> 8;\u000a          } while (0 < iVar1);\u000a          uVar12 = uVar12 - 10;\u000a          iVar1 = 4;\u000a          do {\u000a            puVar13[iVar1 + 3] = (char)uVar12;\u000a            iVar1 = iVar1 + -1;\u000a            uVar12 = uVar12 >> 8;\u000a          } while (0 < iVar1);\u000a          puVar13[8] = 0;\u000a          puVar13[9] = 0;\u000a          *(bool *)(puVar13 + 10) = puVar10[8] == 1;\u000a          puVar13[0xb] = *(undefined *)(puVar10 + 2);\u000a          puVar13[0xc] = *(undefined *)((int)puVar10 + 9);\u000a          puVar13[0xd] = *(undefined *)((int)puVar10 + 10);\u000a          puVar13 = puVar13 + 0xe;\u000a          if (puVar10[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar13,puVar10[3],puVar10[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            lame_get_ReplayGain_input(gfp_00);\u000a            return extraout_s0_01;\u000a          }\u000a          iVar1 = puVar10[4];\u000a          if (iVar1 != 0) {\u000a            puVar5 = (undefined *)puVar10[3];\u000a            iVar9 = iVar1;\u000a            puVar8 = puVar13;\u000a            do {\u000a              *puVar8 = *puVar5;\u000a              puVar8 = puVar8 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar9 = iVar9 + -1;\u000a            } while (iVar9 != 0);\u000a            puVar13 = puVar13 + iVar1;\u000a          }\u000a          *puVar13 = 0;\u000a          puVar13 = puVar13 + 1;\u000a          if (puVar10[8] == 1) {\u000aLAB_0001e338:\u000a            puVar13 = (undefined *)writeUcs2s(puVar13,puVar10[6],puVar10[7]);\u000a          }\u000a          else {\u000a            iVar1 = puVar10[7];\u000a            if (iVar1 != 0) {\u000a              puVar5 = (undefined *)puVar10[6];\u000a              iVar9 = iVar1;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar9 = iVar9 + -1;\u000a              } while (iVar9 != 0);\u000aLAB_0001e36a:\u000a              puVar13 = puVar13 + iVar1;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar11 = uVar12 & 0x57000000;\u000a          uVar6 = (uint)in_stack_00000030;\u000a          if (uVar11 != (uVar12 & uVar3)) {\u000a            uVar6 = uVar12 & uVar3;\u000a          }\u000a          if (uVar11 == 0) {\u000a            uVar6 = uVar11;\u000a          }\u000a          uVar7 = uVar7 | uVar6;\u000a          iVar1 = iVar1 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar1 != 0);\u000a        if (uVar7 == 0) {\u000a          uVar12 = sizeOfWxxxNode(puVar10);\u000a          iVar1 = 4;\u000a          if (10 < uVar12) {\u000a            do {\u000a              puVar13[iVar1 + -1] = (char)uVar3;\u000a              iVar1 = iVar1 + -1;\u000a              uVar3 = uVar3 >> 8;\u000a            } while (0 < iVar1);\u000a            uVar12 = uVar12 - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              puVar13[iVar1 + 3] = (char)uVar12;\u000a              iVar1 = iVar1 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar1);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            puVar8 = puVar13 + 10;\u000a            if (puVar10[4] != 0) {\u000a              *(bool *)(puVar13 + 10) = puVar10[5] == 1;\u000a              puVar13 = puVar13 + 0xb;\u000a              if (puVar10[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar13,puVar10[3],puVar10[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a              }\u000a              else {\u000a                iVar1 = puVar10[4];\u000a                if (iVar1 != 0) {\u000a                  puVar5 = (undefined *)puVar10[3];\u000a                  iVar9 = iVar1;\u000a                  puVar8 = puVar13;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar9 = iVar9 + -1;\u000a                  } while (iVar9 != 0);\u000a                  puVar13 = puVar13 + iVar1;\u000a                }\u000a                *puVar13 = 0;\u000a                puVar8 = puVar13 + 1;\u000a              }\u000a            }\u000a            if (puVar10[8] == 1) {\u000a              puVar13 = (undefined *)writeLoBytes(puVar8,puVar10[6],puVar10[7]);\u000a            }\u000a            else {\u000a              iVar1 = puVar10[7];\u000a              puVar13 = puVar8;\u000a              if (iVar1 != 0) {\u000a                puVar5 = (undefined *)puVar10[6];\u000a                iVar9 = iVar1;\u000a                puVar13 = puVar8;\u000a                do {\u000a                  *puVar13 = *puVar5;\u000a                  puVar13 = puVar13 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar9 = iVar9 + -1;\u000a                } while (iVar9 != 0);\u000a                puVar13 = puVar8 + iVar1;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar1 = puVar10[7];\u000a          iVar9 = puVar10[4];\u000a          if (puVar10[8] == 1) {\u000a            iVar4 = iVar9 * 2 + 0xd;\u000a            if (iVar9 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a            iVar1 = iVar1 << 1;\u000a          }\u000a          else {\u000a            iVar4 = iVar9 + 0xc;\u000a            if (iVar9 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a          }\u000a          iVar9 = 4;\u000a          if (10 < (uint)(iVar4 + iVar1)) {\u000a            do {\u000a              puVar13[iVar9 + -1] = (char)uVar3;\u000a              iVar9 = iVar9 + -1;\u000a              uVar3 = uVar3 >> 8;\u000a            } while (0 < iVar9);\u000a            uVar3 = (iVar4 + iVar1) - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              puVar13[iVar1 + 3] = (char)uVar3;\u000a              iVar1 = iVar1 + -1;\u000a              uVar3 = uVar3 >> 8;\u000a            } while (0 < iVar1);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            *(bool *)(puVar13 + 10) = puVar10[8] == 1;\u000a            puVar13 = puVar13 + 0xb;\u000a            iVar1 = puVar10[4];\u000a            if (iVar1 != 0) {\u000a              if (puVar10[5] == 1) {\u000a                puVar13 = (undefined *)writeUcs2s(puVar13,puVar10[3]);\u000a                *puVar13 = 0;\u000a                puVar13[1] = 0;\u000a                puVar13 = puVar13 + 2;\u000a              }\u000a              else {\u000a                puVar5 = (undefined *)puVar10[3];\u000a                iVar9 = iVar1;\u000a                puVar8 = puVar13;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar9 = iVar9 + -1;\u000a                } while (iVar9 != 0);\u000a                puVar13[iVar1] = 0;\u000a                puVar13 = puVar13 + iVar1 + 1;\u000a              }\u000a            }\u000a            if (puVar10[8] == 1) goto LAB_0001e338;\u000a            iVar1 = puVar10[7];\u000a            if (iVar1 != 0) {\u000a              puVar5 = (undefined *)puVar10[6];\u000a              iVar9 = iVar1;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar9 = iVar9 + -1;\u000a              } while (iVar9 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar10 = (undefined4 *)*puVar10;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar1 = 4;\u000a      if ((*piStack00000004 != 0) &&\u000a         (uVar3 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar13[iVar1 + -1] = (char)uVar3;\u000a          iVar1 = iVar1 + -1;\u000a          uVar3 = uVar3 >> 8;\u000a        } while (0 < iVar1);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    fVar14 = (float)__aeabi_memclr(puVar13,in_stack_00000018 + (in_stack_0000002c - (int)puVar13));\u000a    uVar3 = in_stack_0000002c;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return fVar14;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail(uVar3);\u000a}\u000a\u000a
p626
S'push { r4 }\npop { r0 }\nldr r1,[sp,#0x28]\npush { r5 }\npop { r2 }\npush { r5 }\npop { r3 }\nbl 0x00037d40\ncmp r0,#0x0\npush { r5 }\npop { r2 }\nbne 0x0001defe\n'
p627
S'10 b4\n01 bc\n0a 99\n20 b4\n04 bc\n20 b4\n08 bc\n19 f0 2c ff\n00 28\n20 b4\n04 bc\n06 d1\n'
p628
S'.text:0001ded6\n.text:0001ded8\n.text:0001deda\n.text:0001dedc\n.text:0001dede\n.text:0001dee0\n.text:0001dee2\n.text:0001dee4\n.text:0001dee8\n.text:0001deea\n.text:0001deec\n.text:0001deee\n'
p629
tp630
sS'lame_get_num_samples'
p631
(S'\n__stdcall lame_get_num_samples(lame_global_flags * gfp)\n'
p632
V\u000a/* WARNING: Removing unreachable block (ram,0x0001de68) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3d0) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e2) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e6) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e8) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3f8) */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aulong lame_get_num_samples(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  char *__s;\u000a  int iVar3;\u000a  lame_global_flags *gfp_00;\u000a  ulong uVar4;\u000a  undefined *in_r1;\u000a  byte *pbVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  undefined *puVar8;\u000a  uint in_r2;\u000a  uint uVar9;\u000a  lame_internal_flags *plVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  uint uVar13;\u000a  undefined4 *puVar14;\u000a  uint uVar15;\u000a  undefined4 *puVar16;\u000a  uint uVar17;\u000a  undefined *puVar18;\u000a  undefined8 uVar19;\u000a  int iStack1048;\u000a  uint uStack1036;\u000a  \u000a  iVar1 = **(int **)(DAT_0001e194 + 0x1ddac);\u000a  uVar2 = 0;\u000a  if ((gfp != (lame_global_flags *)0x0) &&\u000a     (plVar10 = gfp->internal_flags, plVar10 != (lame_internal_flags *)0x0)) {\u000a    uVar13 = *(uint *)((int)&plVar10->class_id + DAT_0001e198);\u000a    pbVar5 = (byte *)((int)&plVar10->class_id + DAT_0001e198);\u000a    iStack1048 = 4;\u000a    if ((uVar13 & 4) == 0) {\u000a      __s = *(char **)((int)&plVar10->class_id + DAT_0001e19c);\u000a      if (__s != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a      __s = *(char **)((int)&plVar10->class_id + DAT_0001e1a0);\u000a      if (__s != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a      __s = *(char **)((int)&plVar10->class_id + lame_get_decode_on_the_fly);\u000a      if (__s != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a      __s = *(char **)((int)&plVar10->class_id + DAT_0001e1a8);\u000a      if (__s != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a      uVar2 = 0;\u000a      if ((uVar13 & 10) != 0) {\u000a        if (gfp->num_samples != 0xffffffff) {\u000a          uVar19 = __floatunsidf();\u000a          __muldf3((int)((ulonglong)uVar19 >> 0x20),(int)uVar19,0,DAT_0001e1b0);\u000a                    /* WARNING: Subroutine does not return */\u000a          __floatsidf((plVar10->cfg).samplerate_in);\u000a        }\u000a        uVar13 = 10;\u000a        if (((*(int *)((int)&plVar10->class_id + DAT_0001e1c8) != 0) &&\u000a            (*(int *)((int)&plVar10->class_id + lame_get_findPeakSample) != 0)) &&\u000a           (uVar2 = *(int *)((int)&plVar10->class_id + DAT_0001e1d0) - 1, uVar2 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a          strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar2 * 4));\u000a        }\u000a        puVar14 = *(undefined4 **)((int)&plVar10->class_id + DAT_0001e1d8);\u000a        puVar16 = (undefined4 *)((int)&plVar10->class_id + DAT_0001e1d8);\u000a        while (puVar14 != (undefined4 *)0x0) {\u000a          uVar2 = puVar14[1];\u000a          uVar17 = 0xff;\u000a          if ((uVar2 == DAT_0001e1dc) || (uVar11 = 0, iVar3 = iStack1048, uVar2 == DAT_0001e1e0)) {\u000a            iVar3 = puVar14[4] * 2 + 0x10;\u000a            if (puVar14[5] != 1) {\u000a              iVar3 = puVar14[4] + 0xf;\u000a            }\u000a            iVar6 = puVar14[7];\u000a            if (puVar14[8] == 1) {\u000a              iVar6 = iVar6 << 1;\u000a            }\u000a            iVar3 = iVar3 + iVar6;\u000a          }\u000a          else {\u000a            do {\u000a              uVar15 = uVar17 & 0x57000000;\u000a              uVar9 = 0;\u000a              if (uVar15 != (uVar17 & uVar2)) {\u000a                uVar9 = uVar17 & uVar2;\u000a              }\u000a              if (uVar15 == 0) {\u000a                uVar9 = uVar15;\u000a              }\u000a              uVar11 = uVar11 | uVar9;\u000a              iVar3 = iVar3 + -1;\u000a              uVar17 = uVar17 << 8;\u000a            } while (iVar3 != 0);\u000a            if (uVar11 == 0) {\u000a              iVar3 = sizeOfWxxxNode(puVar14);\u000a            }\u000a            else {\u000a              iVar6 = puVar14[7];\u000a              iVar7 = puVar14[4];\u000a              if (puVar14[8] == 1) {\u000a                iVar3 = iVar7 * 2 + 0xd;\u000a                if (iVar7 == 0) {\u000a                  iVar3 = 0xb;\u000a                }\u000a                iVar6 = iVar6 << 1;\u000a              }\u000a              else {\u000a                iVar3 = iVar7 + 0xc;\u000a                if (iVar7 == 0) {\u000a                  iVar3 = 0xb;\u000a                }\u000a              }\u000a              iVar3 = iVar3 + iVar6;\u000a            }\u000a          }\u000a          uVar13 = iVar3 + uVar13;\u000a          puVar14 = (undefined4 *)*puVar14;\u000a        }\u000a        if ((*pbVar5 & 0x20) != 0) {\u000a          uVar13 = *(int *)((int)&plVar10->class_id + DAT_0001e1e4) + uVar13;\u000a        }\u000a        uVar2 = uVar13;\u000a        if ((uVar13 <= in_r2) && (uVar2 = 0, in_r1 != (undefined *)0x0)) {\u000a          *in_r1 = 0x49;\u000a          in_r1[1] = 0x44;\u000a          in_r1[2] = 0x33;\u000a          in_r1[3] = 3;\u000a          uStack1036 = 0;\u000a          in_r1[4] = 0;\u000a          in_r1[5] = 0;\u000a          uVar2 = uVar13 - 10;\u000a          in_r1[6] = (byte)(uVar2 >> 0x15) & 0x7f;\u000a          in_r1[7] = (byte)(uVar2 >> 0xe) & 0x7f;\u000a          in_r1[8] = (byte)(uVar2 >> 7) & 0x7f;\u000a          in_r1[9] = (byte)uVar2 & 0x7f;\u000a          puVar18 = in_r1 + 10;\u000a          puVar16 = (undefined4 *)*puVar16;\u000a          while (puVar16 != (undefined4 *)0x0) {\u000a            uVar2 = puVar16[1];\u000a            uVar17 = 0xff;\u000a            iVar3 = 4;\u000a            if ((uVar2 == DAT_0001e494) || (uVar11 = uStack1036, uVar2 == DAT_0001e498)) {\u000a              iVar3 = puVar16[4] * 2 + 0x10;\u000a              if (puVar16[5] != 1) {\u000a                iVar3 = puVar16[4] + 0xf;\u000a              }\u000a              iVar6 = 0;\u000a              if (puVar16[8] == 1) {\u000a                iVar6 = puVar16[8];\u000a              }\u000a              uVar17 = (puVar16[7] << iVar6) + iVar3;\u000a              iVar3 = 4;\u000a              if (10 < uVar17) {\u000a                do {\u000a                  puVar18[iVar3 + -1] = (char)uVar2;\u000a                  iVar3 = iVar3 + -1;\u000a                  uVar2 = uVar2 >> 8;\u000a                } while (0 < iVar3);\u000a                uVar17 = uVar17 - 10;\u000a                iVar3 = 4;\u000a                do {\u000a                  puVar18[iVar3 + 3] = (char)uVar17;\u000a                  iVar3 = iVar3 + -1;\u000a                  uVar17 = uVar17 >> 8;\u000a                } while (0 < iVar3);\u000a                puVar18[8] = 0;\u000a                puVar18[9] = 0;\u000a                *(bool *)(puVar18 + 10) = puVar16[8] == 1;\u000a                puVar18[0xb] = *(undefined *)(puVar16 + 2);\u000a                puVar18[0xc] = *(undefined *)((int)puVar16 + 9);\u000a                puVar18[0xd] = *(undefined *)((int)puVar16 + 10);\u000a                puVar18 = puVar18 + 0xe;\u000a                if (puVar16[5] == 1) {\u000a                  gfp_00 = (lame_global_flags *)writeUcs2s(puVar18,puVar16[3],puVar16[4]);\u000a                  *(undefined *)&gfp_00->class_id = 0;\u000a                  *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a                  uVar4 = lame_get_ReplayGain_input(gfp_00);\u000a                  return uVar4;\u000a                }\u000a                iVar3 = puVar16[4];\u000a                if (iVar3 != 0) {\u000a                  puVar8 = (undefined *)puVar16[3];\u000a                  iVar6 = iVar3;\u000a                  puVar12 = puVar18;\u000a                  do {\u000a                    *puVar12 = *puVar8;\u000a                    puVar12 = puVar12 + 1;\u000a                    puVar8 = puVar8 + 1;\u000a                    iVar6 = iVar6 + -1;\u000a                  } while (iVar6 != 0);\u000a                  puVar18 = puVar18 + iVar3;\u000a                }\u000a                *puVar18 = 0;\u000a                puVar18 = puVar18 + 1;\u000a                if (puVar16[8] == 1) {\u000aLAB_0001e338:\u000a                  puVar18 = (undefined *)writeUcs2s(puVar18,puVar16[6],puVar16[7]);\u000a                }\u000a                else {\u000a                  iVar3 = puVar16[7];\u000a                  if (iVar3 != 0) {\u000a                    puVar8 = (undefined *)puVar16[6];\u000a                    iVar6 = iVar3;\u000a                    puVar12 = puVar18;\u000a                    do {\u000a                      *puVar12 = *puVar8;\u000a                      puVar12 = puVar12 + 1;\u000a                      puVar8 = puVar8 + 1;\u000a                      iVar6 = iVar6 + -1;\u000a                    } while (iVar6 != 0);\u000aLAB_0001e36a:\u000a                    puVar18 = puVar18 + iVar3;\u000a                  }\u000a                }\u000a              }\u000a            }\u000a            else {\u000a              do {\u000a                uVar15 = uVar17 & 0x57000000;\u000a                uVar9 = uStack1036;\u000a                if (uVar15 != (uVar17 & uVar2)) {\u000a                  uVar9 = uVar17 & uVar2;\u000a                }\u000a                if (uVar15 == 0) {\u000a                  uVar9 = uVar15;\u000a                }\u000a                uVar11 = uVar11 | uVar9;\u000a                iVar3 = iVar3 + -1;\u000a                uVar17 = uVar17 << 8;\u000a              } while (iVar3 != 0);\u000a              if (uVar11 == 0) {\u000a                uVar17 = sizeOfWxxxNode(puVar16);\u000a                iVar3 = 4;\u000a                if (10 < uVar17) {\u000a                  do {\u000a                    puVar18[iVar3 + -1] = (char)uVar2;\u000a                    iVar3 = iVar3 + -1;\u000a                    uVar2 = uVar2 >> 8;\u000a                  } while (0 < iVar3);\u000a                  uVar17 = uVar17 - 10;\u000a                  iVar3 = 4;\u000a                  do {\u000a                    puVar18[iVar3 + 3] = (char)uVar17;\u000a                    iVar3 = iVar3 + -1;\u000a                    uVar17 = uVar17 >> 8;\u000a                  } while (0 < iVar3);\u000a                  puVar18[8] = 0;\u000a                  puVar18[9] = 0;\u000a                  puVar12 = puVar18 + 10;\u000a                  if (puVar16[4] != 0) {\u000a                    *(bool *)(puVar18 + 10) = puVar16[5] == 1;\u000a                    puVar18 = puVar18 + 0xb;\u000a                    if (puVar16[5] == 1) {\u000a                      puVar12 = (undefined *)writeUcs2s(puVar18,puVar16[3],puVar16[4]);\u000a                      *puVar12 = 0;\u000a                      puVar12[1] = 0;\u000a                      puVar12 = puVar12 + 2;\u000a                    }\u000a                    else {\u000a                      iVar3 = puVar16[4];\u000a                      if (iVar3 != 0) {\u000a                        puVar8 = (undefined *)puVar16[3];\u000a                        iVar6 = iVar3;\u000a                        puVar12 = puVar18;\u000a                        do {\u000a                          *puVar12 = *puVar8;\u000a                          puVar12 = puVar12 + 1;\u000a                          puVar8 = puVar8 + 1;\u000a                          iVar6 = iVar6 + -1;\u000a                        } while (iVar6 != 0);\u000a                        puVar18 = puVar18 + iVar3;\u000a                      }\u000a                      *puVar18 = 0;\u000a                      puVar12 = puVar18 + 1;\u000a                    }\u000a                  }\u000a                  if (puVar16[8] == 1) {\u000a                    puVar18 = (undefined *)writeLoBytes(puVar12,puVar16[6],puVar16[7]);\u000a                  }\u000a                  else {\u000a                    iVar3 = puVar16[7];\u000a                    puVar18 = puVar12;\u000a                    if (iVar3 != 0) {\u000a                      puVar8 = (undefined *)puVar16[6];\u000a                      iVar6 = iVar3;\u000a                      puVar18 = puVar12;\u000a                      do {\u000a                        *puVar18 = *puVar8;\u000a                        puVar18 = puVar18 + 1;\u000a                        puVar8 = puVar8 + 1;\u000a                        iVar6 = iVar6 + -1;\u000a                      } while (iVar6 != 0);\u000a                      puVar18 = puVar12 + iVar3;\u000a                    }\u000a                  }\u000a                }\u000a              }\u000a              else {\u000a                iVar3 = puVar16[7];\u000a                iVar6 = puVar16[4];\u000a                if (puVar16[8] == 1) {\u000a                  iVar7 = iVar6 * 2 + 0xd;\u000a                  if (iVar6 == 0) {\u000a                    iVar7 = 0xb;\u000a                  }\u000a                  iVar3 = iVar3 << 1;\u000a                }\u000a                else {\u000a                  iVar7 = iVar6 + 0xc;\u000a                  if (iVar6 == 0) {\u000a                    iVar7 = 0xb;\u000a                  }\u000a                }\u000a                iVar6 = 4;\u000a                if (10 < (uint)(iVar7 + iVar3)) {\u000a                  do {\u000a                    puVar18[iVar6 + -1] = (char)uVar2;\u000a                    iVar6 = iVar6 + -1;\u000a                    uVar2 = uVar2 >> 8;\u000a                  } while (0 < iVar6);\u000a                  uVar2 = (iVar7 + iVar3) - 10;\u000a                  iVar3 = 4;\u000a                  do {\u000a                    puVar18[iVar3 + 3] = (char)uVar2;\u000a                    iVar3 = iVar3 + -1;\u000a                    uVar2 = uVar2 >> 8;\u000a                  } while (0 < iVar3);\u000a                  puVar18[8] = 0;\u000a                  puVar18[9] = 0;\u000a                  *(bool *)(puVar18 + 10) = puVar16[8] == 1;\u000a                  puVar18 = puVar18 + 0xb;\u000a                  iVar3 = puVar16[4];\u000a                  if (iVar3 != 0) {\u000a                    if (puVar16[5] == 1) {\u000a                      puVar18 = (undefined *)writeUcs2s(puVar18,puVar16[3]);\u000a                      *puVar18 = 0;\u000a                      puVar18[1] = 0;\u000a                      puVar18 = puVar18 + 2;\u000a                    }\u000a                    else {\u000a                      puVar8 = (undefined *)puVar16[3];\u000a                      iVar6 = iVar3;\u000a                      puVar12 = puVar18;\u000a                      do {\u000a                        *puVar12 = *puVar8;\u000a                        puVar12 = puVar12 + 1;\u000a                        puVar8 = puVar8 + 1;\u000a                        iVar6 = iVar6 + -1;\u000a                      } while (iVar6 != 0);\u000a                      puVar18[iVar3] = 0;\u000a                      puVar18 = puVar18 + iVar3 + 1;\u000a                    }\u000a                  }\u000a                  if (puVar16[8] == 1) goto LAB_0001e338;\u000a                  iVar3 = puVar16[7];\u000a                  if (iVar3 != 0) {\u000a                    puVar8 = (undefined *)puVar16[6];\u000a                    iVar6 = iVar3;\u000a                    puVar12 = puVar18;\u000a                    do {\u000a                      *puVar12 = *puVar8;\u000a                      puVar12 = puVar12 + 1;\u000a                      puVar8 = puVar8 + 1;\u000a                      iVar6 = iVar6 + -1;\u000a                    } while (iVar6 != 0);\u000a                    goto LAB_0001e36a;\u000a                  }\u000a                }\u000a              }\u000a            }\u000a            puVar16 = (undefined4 *)*puVar16;\u000a          }\u000a          __aeabi_memclr(puVar18,in_r1 + (uVar13 - (int)puVar18));\u000a          uVar2 = uVar13;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == iVar1) {\u000a    return uVar2;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p633
S'sub sp,#0x1fc\nsub sp,#0x1fc\nsub sp,#0x44\nadd r3,sp,#0x34\nstr r3,[sp,#0x20]\npush { r0 }\npop { r6 }\nldr r0,[0x0001e194]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r3,#0x0]\nmov r0,#0x0\n'
p634
S'ff b0\nff b0\n91 b0\n0d ab\n08 93\n01 b4\n40 bc\nfb 48\n78 44\n00 68\n00 68\n18 60\n00 20\n'
p635
S'.text:0001dd98\n.text:0001dd9a\n.text:0001dd9c\n.text:0001dd9e\n.text:0001dda0\n.text:0001dda2\n.text:0001dda4\n.text:0001dda6\n.text:0001dda8\n.text:0001ddaa\n.text:0001ddac\n.text:0001ddae\n.text:0001ddb0\n'
p636
tp637
sS'_Unwind_VRS_Pop'
p638
(S'\n__stdcall _Unwind_VRS_Pop()\n'
p639
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000auint _Unwind_VRS_Pop(uint *puParm1,undefined4 uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  uint *puVar1;\u000a  uint uVar2;\u000a  undefined4 *puVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  undefined4 *puVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  bool bVar11;\u000a  undefined4 auStack428 [33];\u000a  undefined auStack296 [124];\u000a  undefined4 auStack172 [36];\u000a  \u000a  switch(uParm2) {\u000a  case 0:\u000a    if (uParm4 != 0) {\u000a      return 2;\u000a    }\u000a    iVar4 = 1;\u000a    puVar1 = (uint *)puParm1[0xe];\u000a    do {\u000a      bVar11 = (uParm3 & 0xffff & 1 << (iVar4 - 1U & 0xff)) != 0;\u000a      if (bVar11) {\u000a        puParm1[iVar4] = *puVar1;\u000a      }\u000a      iVar4 = iVar4 + 1;\u000a      if (bVar11) {\u000a        puVar1 = puVar1 + 1;\u000a      }\u000a    } while (iVar4 != 0x11);\u000a    if ((uParm3 & 0x2000) != 0) {\u000a      return 0;\u000a    }\u000a    *(uint **)(puParm1 + 0xe) = puVar1;\u000a    return 0;\u000a  case 1:\u000a    if ((uParm4 & 0xfffffffb) != 1) {\u000a      return 2;\u000a    }\u000a    uVar5 = uParm3 >> 0x10;\u000a    uParm3 = uParm3 & 0xffff;\u000a    uVar7 = uParm3 + uVar5;\u000a    if (uParm4 == 1) {\u000a      if (0x10 < uVar7) {\u000a        return 2;\u000a      }\u000a      if (0xf < uVar5) {\u000a        return 2;\u000a      }\u000a      uVar8 = 0;\u000a      uVar7 = uParm4;\u000a    }\u000a    else {\u000a      if (0x20 < uVar7) {\u000a        return 2;\u000a      }\u000a      uVar8 = uParm3;\u000a      if (uVar5 < 0x10) {\u000a        if (uVar7 < 0x11) {\u000a          uVar8 = 0;\u000a          uVar7 = uVar8;\u000a          goto LAB_00037010;\u000a        }\u000a        uVar8 = uVar7 - 0x10;\u000a      }\u000a      uVar7 = 0;\u000a    }\u000aLAB_00037010:\u000a    uVar10 = uVar8;\u000a    if (uVar8 != 0) {\u000a      uVar10 = 1;\u000a    }\u000a    if (uParm4 != 5 && uVar8 != 0) {\u000a      return 2;\u000a    }\u000a    if ((uVar5 < 0x10) && (uVar2 = *puParm1, (uVar2 & 1) != 0)) {\u000a      *puParm1 = uVar2 & 0xfffffffe;\u000a      if (uParm4 != 5) {\u000a        *puParm1 = uVar2 & 0xfffffffc;\u000a        __gnu_Unwind_Save_VFP(puParm1 + 0x12);\u000a        goto LAB_00037078;\u000a      }\u000a      *puParm1 = uVar2 & 0xfffffffe | 2;\u000a      __gnu_Unwind_Save_VFP_D();\u000a      if (uVar10 != 0) goto LAB_00037080;\u000aLAB_00037060:\u000a      __gnu_Unwind_Save_VFP_D(auStack172 + 1);\u000aLAB_000370ac:\u000a      if (uVar10 == 0) goto LAB_000370c0;\u000a      __gnu_Unwind_Save_VFP_D_16_to_31(auStack296);\u000a    }\u000a    else {\u000aLAB_00037078:\u000a      if (uVar10 == 0) {\u000a        if (uVar7 != 0) {\u000a          __gnu_Unwind_Save_VFP(auStack172 + 1);\u000a          goto LAB_000370c0;\u000a        }\u000a        if (0xf < uVar5) goto LAB_000370c0;\u000a        goto LAB_00037060;\u000a      }\u000aLAB_00037080:\u000a      if ((*puParm1 & 4) != 0) {\u000a        *puParm1 = *puParm1 & 0xfffffffb;\u000a        __gnu_Unwind_Save_VFP_D_16_to_31(puParm1 + 0x34);\u000a      }\u000a      if (uVar7 == 0) {\u000a        if (uVar5 < 0x10) goto LAB_00037060;\u000a        goto LAB_000370ac;\u000a      }\u000a      __gnu_Unwind_Save_VFP(auStack172 + 1);\u000a    }\u000a    uParm3 = 0x10 - uVar5;\u000aLAB_000370c0:\u000a    puVar3 = (undefined4 *)puParm1[0xe];\u000a    if (0 < (int)uParm3) {\u000a      iVar4 = 0;\u000a      while (iVar4 != uParm3 * 2) {\u000a        auStack172[uVar5 * 2 + iVar4 + 1] = puVar3[iVar4];\u000a        iVar4 = iVar4 + 1;\u000a      }\u000a      puVar3 = puVar3 + iVar4;\u000a    }\u000a    if (uVar10 != 0) {\u000a      uVar2 = uVar5;\u000a      if (uVar5 < 0x10) {\u000a        uVar2 = 0x10;\u000a      }\u000a      puVar6 = auStack428 + uVar2 * 2;\u000a      puVar9 = puVar3 + uVar8 * 2;\u000a      while (puVar3 != puVar9) {\u000a        puVar6 = puVar6 + 1;\u000a        *puVar6 = *puVar3;\u000a        puVar3 = puVar3 + 1;\u000a      }\u000a    }\u000a    if (uVar7 != 0) {\u000a      puVar3 = puVar3 + 1;\u000a    }\u000a    *(undefined4 **)(puParm1 + 0xe) = puVar3;\u000a    if (uVar7 == 0) {\u000a      if (uVar5 < 0x10) {\u000a        __gnu_Unwind_Restore_VFP_D(auStack172 + 1);\u000a      }\u000a      if (uVar10 != 0) {\u000a        __gnu_Unwind_Restore_VFP_D_16_to_31(auStack296);\u000a      }\u000a    }\u000a    else {\u000a      __gnu_Unwind_Restore_VFP(auStack172 + 1);\u000a    }\u000a    return 0;\u000a  case 2:\u000a    break;\u000a  case 3:\u000a    if (uParm4 == 3) {\u000a      if ((uParm3 & 0xffff) + (uParm3 >> 0x10) < 0x11) {\u000a        if ((*puParm1 & 8) != 0) {\u000a          *puParm1 = *puParm1 & 0xfffffff7;\u000a          __gnu_Unwind_Save_WMMXD(puParm1 + 0x54);\u000a        }\u000a        __gnu_Unwind_Save_WMMXD(auStack172 + 1);\u000a        puVar6 = (undefined4 *)puParm1[0xe];\u000a        puVar9 = auStack172 + (uParm3 >> 0x10) * 2;\u000a        puVar3 = puVar6;\u000a        while (puVar3 != puVar6 + (uParm3 & 0xffff) * 2) {\u000a          puVar9 = puVar9 + 1;\u000a          *puVar9 = *puVar3;\u000a          puVar3 = puVar3 + 1;\u000a        }\u000a        *(undefined4 **)(puParm1 + 0xe) = puVar3;\u000a        __gnu_Unwind_Restore_WMMXD(auStack172 + 1);\u000a        return 0;\u000a      }\u000a    }\u000a    break;\u000a  case 4:\u000a    bVar11 = uParm3 == 0x10;\u000a    if (uParm3 < 0x11) {\u000a      bVar11 = uParm4 == 0;\u000a    }\u000a    if (bVar11) {\u000a      if ((*puParm1 & 0x10) != 0) {\u000a        *puParm1 = *puParm1 & 0xffffffef;\u000a        __gnu_Unwind_Save_WMMXC(puParm1 + 0x74);\u000a      }\u000a      puVar6 = auStack172 + 1;\u000a      __gnu_Unwind_Save_WMMXC(puVar6);\u000a      puVar3 = (undefined4 *)puParm1[0xe];\u000a      uVar5 = 0;\u000a      do {\u000a        bVar11 = (uParm3 & 1 << (uVar5 & 0xff)) != 0;\u000a        if (bVar11) {\u000a          puVar6[uVar5] = *puVar3;\u000a        }\u000a        uVar5 = uVar5 + 1;\u000a        if (bVar11) {\u000a          puVar3 = puVar3 + 1;\u000a        }\u000a      } while (uVar5 != 4);\u000a      *(undefined4 **)(puParm1 + 0xe) = puVar3;\u000a      __gnu_Unwind_Restore_WMMXC(puVar6);\u000a      return 0;\u000a    }\u000a  }\u000a  return 2;\u000a}\u000a\u000a
p640
S'stmdb sp!,{ r4 r5 r6 r7 r8 r9 lr }\ncpy r5,r0\nsub sp,sp,#0x10c\ncpy r4,r2\ncmp r1,#0x4\naddls pc,pc,r1, lsl #0x2\nb 0x0003724c\nb 0x00036f6c\nb 0x00036fb8\nb 0x0003724c\nb 0x00037170\nb 0x000371e4\ncmp r3,#0x0\nbne 0x0003724c\nmov r1,r2, lsl #0x10\nmov r3,#0x1\nldr r2,[r0,#0x38]\nmov r1,r1, lsr #0x10\ncpy r0,r3\nsub r12,r3,#0x1\nands r12,r1,r0, lsl r12\nldrne r12,[r2,#0x0]\nstrne r12,[r5,r3,lsl #0x2]\nadd r3,r3,#0x1\naddne r2,r2,#0x4\ncmp r3,#0x11\nbne 0x00036f88\nands r0,r4,#0x2000\nstreq r2,[r5,#0x38]\nbeq 0x000372a0\nb 0x00037254\nbic r2,r3,#0x4\ncmp r2,#0x1\nbne 0x0003724c\nmov r7,r4, lsr #0x10\nmov r4,r4, lsl #0x10\nmov r4,r4, lsr #0x10\ncmp r3,#0x1\nadd r6,r4,r7\nbne 0x00036ff8\ncmp r6,#0x10\nbhi 0x0003724c\ncmp r7,#0xf\ncpyls r8,r3\nmovls r6,#0x0\nbhi 0x0003724c\nb 0x00037010\ncmp r6,#0x20\nbhi 0x0003724c\ncmp r7,#0xf\nbls 0x0003725c\ncpy r6,r4\nmov r8,#0x0\nadds r9,r6,#0x0\nmovne r9,#0x1\ncmp r3,#0x5\ncmpne r6,#0x0\nbne 0x0003724c\ncmp r7,#0xf\nbhi 0x00037078\nldr r2,[r5,#0x0]\ntst r2,#0x1\nbeq 0x00037078\nbic r1,r2,#0x1\ncpy r0,r5\ncmp r3,#0x5\nstr r1,[r0],#0x48\nbne 0x0003706c\norr r1,r1,#0x2\nstr r1,[r5,#0x0]\nbl 0x00016c60\ncmp r9,#0x0\nbne 0x00037080\nadd r0,sp,#0x80\nbl 0x00016c60\nb 0x000370ac\nbic r2,r2,#0x3\nstr r2,[r5,#0x0]\nbl 0x00016c6c\ncmp r9,#0x0\nbeq 0x00037274\nldr r3,[r5,#0x0]\ntst r3,#0x4\nbeq 0x0003709c\nbic r3,r3,#0x4\ncpy r0,r5\nstr r3,[r0],#0xd0\nbl 0x00016c78\ncmp r8,#0x0\nbne 0x00037288\ncmp r7,#0xf\nbls 0x00037060\ncmp r9,#0x0\nbeq 0x000370c0\ncpy r0,sp\nbl 0x00016c78\nrsb r4,r7,#0x10\nldr r2,[r5,#0x38]\ncmp r4,#0x0\ncpy r3,r2\nble 0x000370f8\nadd r1,sp,#0x80\nadd r1,r1,r7, lsl #0x3\nmov r4,r4, lsl #0x1\nmov r3,#0x0\ncmp r3,r4\nldrne r0,[r2,r3,lsl #0x2]\nstrne r0,[r1,r3,lsl #0x2]\naddne r3,r3,#0x1\nbne 0x000370e0\nadd r3,r2,r3, lsl #0x2\ncmp r9,#0x0\nbeq 0x0003712c\ncmp r7,#0x10\ncpycs r4,r7\nmovcc r4,#0x10\nadd r2,sp,#0x108\nadd r4,r2,r4, lsl #0x3\nsub r4,r4,#0x18c\nadd r6,r3,r6, lsl #0x3\ncmp r3,r6\nldrne r2,[r3],#0x4\nstrne r2,[r4,#0x4]!\nbne 0x0003711c\ncmp r8,#0x0\naddne r3,r3,#0x4\ncmp r8,#0x0\nstr r3,[r5,#0x38]\nbeq 0x0003714c\nadd r0,sp,#0x80\nbl 0x00016bc4\nb 0x00037254\ncmp r7,#0xf\nbhi 0x0003715c\nadd r0,sp,#0x80\nbl 0x00016bb8\ncmp r9,#0x0\nbeq 0x00037254\ncpy r0,sp\nbl 0x00016bd0\nb 0x00037254\ncmp r3,#0x3\nbne 0x0003724c\nmov r7,r2, lsl #0x10\nmov r6,r2, lsr #0x10\nmov r7,r7, lsr #0x10\nadd r3,r7,r6\ncmp r3,#0x10\nbhi 0x0003724c\nldr r3,[r0,#0x0]\ntst r3,#0x8\nbeq 0x000371a8\nbic r3,r3,#0x8\nstr r3,[r0],#0x150\nbl 0x00016c84\nadd r8,sp,#0x80\ncpy r0,r8\nbl 0x00016c84\nldr r4,[r5,#0x38]\nadd r6,r8,r6, lsl #0x3\nsub r6,r6,#0x4\nadd r7,r4,r7, lsl #0x3\ncmp r4,r7\nldrne r3,[r4],#0x4\nstrne r3,[r6,#0x4]!\nbne 0x000371c4\nstr r4,[r5,#0x38]\ncpy r0,r8\nbl 0x00016bdc\nb 0x00037254\ncmp r2,#0x10\ncmpls r3,#0x0\nbne 0x0003724c\nldr r3,[r0,#0x0]\ntst r3,#0x10\nbeq 0x00037208\nbic r3,r3,#0x10\nstr r3,[r0],#0x1d0\nbl 0x00016c90\nadd r6,sp,#0x80\ncpy r0,r6\nbl 0x00016c90\nldr r2,[r5,#0x38]\nmov r3,#0x0\nmov r1,#0x1\nands r0,r4,r1, lsl r3\nldrne r0,[r2,#0x0]\nstrne r0,[r6,r3,lsl #0x2]\nadd r3,r3,#0x1\naddne r2,r2,#0x4\ncmp r3,#0x4\nbne 0x00037220\nstr r2,[r5,#0x38]\ncpy r0,r6\nbl 0x00016be8\nb 0x00037254\nmov r0,#0x2\nb 0x000372a0\nmov r0,#0x0\nb 0x000372a0\ncmp r6,#0x10\nmovls r8,#0x0\ncpyls r6,r8\nbls 0x00037010\nsub r6,r6,#0x10\nb 0x0003700c\ncmp r8,#0x0\nbeq 0x00037294\nadd r0,sp,#0x80\nbl 0x00016c6c\nb 0x000370c0\nadd r0,sp,#0x80\nbl 0x00016c6c\nb 0x000370bc\ncmp r7,#0xf\nbhi 0x000370c0\nb 0x00037060\nadd sp,sp,#0x10c\nldmia sp!,{ r4 r5 r6 r7 r8 r9 pc }\n'
p641
S'f0 43 2d e9\n00 50 a0 e1\n43 df 4d e2\n02 40 a0 e1\n04 00 51 e3\n01 f1 8f 90\nbc 00 00 ea\n03 00 00 ea\n15 00 00 ea\nb9 00 00 ea\n81 00 00 ea\n9d 00 00 ea\n00 00 53 e3\nb5 00 00 1a\n02 18 a0 e1\n01 30 a0 e3\n38 20 90 e5\n21 18 a0 e1\n03 00 a0 e1\n01 c0 43 e2\n10 cc 11 e0\n00 c0 92 15\n03 c1 85 17\n01 30 83 e2\n04 20 82 12\n11 00 53 e3\nf7 ff ff 1a\n02 0a 14 e2\n38 20 85 05\nba 00 00 0a\na6 00 00 ea\n04 20 c3 e3\n01 00 52 e3\na1 00 00 1a\n24 78 a0 e1\n04 48 a0 e1\n24 48 a0 e1\n01 00 53 e3\n07 60 84 e0\n06 00 00 1a\n10 00 56 e3\n99 00 00 8a\n0f 00 57 e3\n03 80 a0 91\n00 60 a0 93\n95 00 00 8a\n05 00 00 ea\n20 00 56 e3\n92 00 00 8a\n0f 00 57 e3\n94 00 00 9a\n04 60 a0 e1\n00 80 a0 e3\n00 90 96 e2\n01 90 a0 13\n05 00 53 e3\n00 00 56 13\n89 00 00 1a\n0f 00 57 e3\n12 00 00 8a\n00 20 95 e5\n01 00 12 e3\n0f 00 00 0a\n01 10 c2 e3\n05 00 a0 e1\n05 00 53 e3\n48 10 80 e4\n07 00 00 1a\n02 10 81 e3\n00 10 85 e5\n01 7f ff eb\n00 00 59 e3\n07 00 00 1a\n80 00 8d e2\nfd 7e ff eb\n0f 00 00 ea\n03 20 c2 e3\n00 20 85 e5\nfc 7e ff eb\n00 00 59 e3\n7c 00 00 0a\n00 30 95 e5\n04 00 13 e3\n03 00 00 0a\n04 30 c3 e3\n05 00 a0 e1\nd0 30 80 e4\nf6 7e ff eb\n00 00 58 e3\n78 00 00 1a\n0f 00 57 e3\nec ff ff 9a\n00 00 59 e3\n02 00 00 0a\n0d 00 a0 e1\nee 7e ff eb\n10 40 67 e2\n38 20 95 e5\n00 00 54 e3\n02 30 a0 e1\n09 00 00 da\n80 10 8d e2\n87 11 81 e0\n84 40 a0 e1\n00 30 a0 e3\n04 00 53 e1\n03 01 92 17\n03 01 81 17\n01 30 83 12\nfa ff ff 1a\n03 31 82 e0\n00 00 59 e3\n0a 00 00 0a\n10 00 57 e3\n07 40 a0 21\n10 40 a0 33\n42 2f 8d e2\n84 41 82 e0\n63 4f 44 e2\n86 61 83 e0\n06 00 53 e1\n04 20 93 14\n04 20 a4 15\nfb ff ff 1a\n00 00 58 e3\n04 30 83 12\n00 00 58 e3\n38 30 85 e5\n02 00 00 0a\n80 00 8d e2\n9e 7e ff eb\n41 00 00 ea\n0f 00 57 e3\n01 00 00 8a\n80 00 8d e2\n96 7e ff eb\n00 00 59 e3\n3b 00 00 0a\n0d 00 a0 e1\n98 7e ff eb\n38 00 00 ea\n03 00 53 e3\n34 00 00 1a\n02 78 a0 e1\n22 68 a0 e1\n27 78 a0 e1\n06 30 87 e0\n10 00 53 e3\n2e 00 00 8a\n00 30 90 e5\n08 00 13 e3\n02 00 00 0a\n08 30 c3 e3\n50 31 80 e4\nb6 7e ff eb\n80 80 8d e2\n08 00 a0 e1\nb3 7e ff eb\n38 40 95 e5\n86 61 88 e0\n04 60 46 e2\n87 71 84 e0\n07 00 54 e1\n04 30 94 14\n04 30 a6 15\nfb ff ff 1a\n38 40 85 e5\n08 00 a0 e1\n7e 7e ff eb\n1b 00 00 ea\n10 00 52 e3\n00 00 53 93\n16 00 00 1a\n00 30 90 e5\n10 00 13 e3\n02 00 00 0a\n10 30 c3 e3\nd0 31 80 e4\na1 7e ff eb\n80 60 8d e2\n06 00 a0 e1\n9e 7e ff eb\n38 20 95 e5\n00 30 a0 e3\n01 10 a0 e3\n11 03 14 e0\n00 00 92 15\n03 01 86 17\n01 30 83 e2\n04 20 82 12\n04 00 53 e3\nf8 ff ff 1a\n38 20 85 e5\n06 00 a0 e1\n67 7e ff eb\n01 00 00 ea\n02 00 a0 e3\n12 00 00 ea\n00 00 a0 e3\n10 00 00 ea\n10 00 56 e3\n00 80 a0 93\n08 60 a0 91\n68 ff ff 9a\n10 60 46 e2\n65 ff ff ea\n00 00 58 e3\n05 00 00 0a\n80 00 8d e2\n79 7e ff eb\n8d ff ff ea\n80 00 8d e2\n76 7e ff eb\n89 ff ff ea\n0f 00 57 e3\n88 ff ff 8a\n6f ff ff ea\n43 df 8d e2\nf0 83 bd e8\n'
p642
S'.text:00036f3c\n.text:00036f40\n.text:00036f44\n.text:00036f48\n.text:00036f4c\n.text:00036f50\n.text:00036f54\n.text:00036f58\n.text:00036f5c\n.text:00036f60\n.text:00036f64\n.text:00036f68\n.text:00036f6c\n.text:00036f70\n.text:00036f74\n.text:00036f78\n.text:00036f7c\n.text:00036f80\n.text:00036f84\n.text:00036f88\n.text:00036f8c\n.text:00036f90\n.text:00036f94\n.text:00036f98\n.text:00036f9c\n.text:00036fa0\n.text:00036fa4\n.text:00036fa8\n.text:00036fac\n.text:00036fb0\n.text:00036fb4\n.text:00036fb8\n.text:00036fbc\n.text:00036fc0\n.text:00036fc4\n.text:00036fc8\n.text:00036fcc\n.text:00036fd0\n.text:00036fd4\n.text:00036fd8\n.text:00036fdc\n.text:00036fe0\n.text:00036fe4\n.text:00036fe8\n.text:00036fec\n.text:00036ff0\n.text:00036ff4\n.text:00036ff8\n.text:00036ffc\n.text:00037000\n.text:00037004\n.text:00037008\n.text:0003700c\n.text:00037010\n.text:00037014\n.text:00037018\n.text:0003701c\n.text:00037020\n.text:00037024\n.text:00037028\n.text:0003702c\n.text:00037030\n.text:00037034\n.text:00037038\n.text:0003703c\n.text:00037040\n.text:00037044\n.text:00037048\n.text:0003704c\n.text:00037050\n.text:00037054\n.text:00037058\n.text:0003705c\n.text:00037060\n.text:00037064\n.text:00037068\n.text:0003706c\n.text:00037070\n.text:00037074\n.text:00037078\n.text:0003707c\n.text:00037080\n.text:00037084\n.text:00037088\n.text:0003708c\n.text:00037090\n.text:00037094\n.text:00037098\n.text:0003709c\n.text:000370a0\n.text:000370a4\n.text:000370a8\n.text:000370ac\n.text:000370b0\n.text:000370b4\n.text:000370b8\n.text:000370bc\n.text:000370c0\n.text:000370c4\n.text:000370c8\n.text:000370cc\n.text:000370d0\n.text:000370d4\n.text:000370d8\n.text:000370dc\n.text:000370e0\n.text:000370e4\n.text:000370e8\n.text:000370ec\n.text:000370f0\n.text:000370f4\n.text:000370f8\n.text:000370fc\n.text:00037100\n.text:00037104\n.text:00037108\n.text:0003710c\n.text:00037110\n.text:00037114\n.text:00037118\n.text:0003711c\n.text:00037120\n.text:00037124\n.text:00037128\n.text:0003712c\n.text:00037130\n.text:00037134\n.text:00037138\n.text:0003713c\n.text:00037140\n.text:00037144\n.text:00037148\n.text:0003714c\n.text:00037150\n.text:00037154\n.text:00037158\n.text:0003715c\n.text:00037160\n.text:00037164\n.text:00037168\n.text:0003716c\n.text:00037170\n.text:00037174\n.text:00037178\n.text:0003717c\n.text:00037180\n.text:00037184\n.text:00037188\n.text:0003718c\n.text:00037190\n.text:00037194\n.text:00037198\n.text:0003719c\n.text:000371a0\n.text:000371a4\n.text:000371a8\n.text:000371ac\n.text:000371b0\n.text:000371b4\n.text:000371b8\n.text:000371bc\n.text:000371c0\n.text:000371c4\n.text:000371c8\n.text:000371cc\n.text:000371d0\n.text:000371d4\n.text:000371d8\n.text:000371dc\n.text:000371e0\n.text:000371e4\n.text:000371e8\n.text:000371ec\n.text:000371f0\n.text:000371f4\n.text:000371f8\n.text:000371fc\n.text:00037200\n.text:00037204\n.text:00037208\n.text:0003720c\n.text:00037210\n.text:00037214\n.text:00037218\n.text:0003721c\n.text:00037220\n.text:00037224\n.text:00037228\n.text:0003722c\n.text:00037230\n.text:00037234\n.text:00037238\n.text:0003723c\n.text:00037240\n.text:00037244\n.text:00037248\n.text:0003724c\n.text:00037250\n.text:00037254\n.text:00037258\n.text:0003725c\n.text:00037260\n.text:00037264\n.text:00037268\n.text:0003726c\n.text:00037270\n.text:00037274\n.text:00037278\n.text:0003727c\n.text:00037280\n.text:00037284\n.text:00037288\n.text:0003728c\n.text:00037290\n.text:00037294\n.text:00037298\n.text:0003729c\n.text:000372a0\n.text:000372a4\n'
p643
tp644
sS'lame_set_short_threshold_s'
p645
(S'\n__stdcall lame_set_short_threshold_s()\n'
p646
V\u000avoid lame_set_short_threshold_s(void)\u000a\u000a{\u000a  (*(lame_get_scale + DAT_0003813c))();\u000a  return;\u000a}\u000a\u000a
p647
S'ldr r12,[0x3813c]\nadd pc,r12,pc\n'
p648
S'00 c0 9f e5\n0f f0 8c e0\n'
p649
S'.text:00038134\n.text:00038138\n'
p650
tp651
sS'huffman_coder_count1'
p652
(S'\n__stdcall huffman_coder_count1()\n'
p653
V\u000aint huffman_coder_count1(int iParm1,int iParm2)\u000a\u000a{\u000a  bool bVar1;\u000a  byte bVar2;\u000a  ushort uVar3;\u000a  ushort *puVar4;\u000a  byte *pbVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  int iVar8;\u000a  uint *puVar9;\u000a  int *piVar10;\u000a  int *piVar11;\u000a  int *piVar12;\u000a  uint *puVar13;\u000a  int iVar14;\u000a  uint uVar15;\u000a  int local_40;\u000a  int local_3c;\u000a  undefined4 *local_38;\u000a  int *local_34;\u000a  \u000a  iVar14 = *(int *)(iParm2 + DAT_0001a078) - *(int *)(iParm2 + DAT_0001a074);\u000a  local_3c = 0;\u000a  if (3 < iVar14) {\u000a    puVar9 = (uint *)(iParm1 + DAT_0001a080);\u000a    piVar10 = (int *)(iParm1 + 0x11c);\u000a    piVar11 = (int *)(iParm1 + 0x124);\u000a    piVar12 = (int *)(iParm1 + 0x128);\u000a    puVar13 = (uint *)(iParm1 + 300);\u000a    local_38 = (undefined4 *)(iParm2 + *(int *)(iParm2 + DAT_0001a074) * 4);\u000a    local_34 = local_38 + 0x240;\u000a    iVar8 = *(int *)(DAT_0001a084 + 0x19eee) + (*(int *)(iParm2 + DAT_0001a07c) + 0x20) * 0x10;\u000a    puVar4 = *(ushort **)(iVar8 + 8);\u000a    pbVar5 = *(byte **)(iVar8 + 0xc);\u000a    local_3c = 0;\u000a    local_40 = (int)(iVar14 + ((uint)(iVar14 >> 0x1f) >> 0x1e)) >> 2;\u000a    do {\u000a      if (*local_34 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_fcmplt(*local_38,0);\u000a      }\u000a      if (local_34[1] != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_fcmplt(local_38[1],0);\u000a      }\u000a      if (local_34[2] != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_fcmplt(local_38[2],0);\u000a      }\u000a      if (local_34[3] != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_fcmplt(local_38[3],0);\u000a      }\u000a      bVar2 = *pbVar5;\u000a      uVar15 = (uint)bVar2;\u000a      uVar3 = *puVar4;\u000a      local_38 = local_38 + 4;\u000a      local_34 = local_34 + 4;\u000a      uVar6 = 0;\u000a      if (bVar2 != 0) {\u000a        do {\u000a          uVar6 = *puVar13;\u000a          if (uVar6 == 0) {\u000a            *puVar13 = 8;\u000a            iVar14 = *piVar12 + 1;\u000a            *piVar12 = iVar14;\u000a            iVar8 = iParm1 + *puVar9 * 0x30;\u000a            if (*(int *)(iVar8 + DAT_0001a088) == *piVar11) {\u000a              __aeabi_memcpy(*piVar10 + iVar14,iVar8 + DAT_0001a08c,*(undefined4 *)(iParm1 + 0x18));\u000a              iVar14 = *piVar12 + *(int *)(iParm1 + 0x18);\u000a              *piVar12 = iVar14;\u000a              *piVar11 = *piVar11 + *(int *)(iParm1 + 0x18) * 8;\u000a              *puVar9 = *puVar9 + 1 & 0xff;\u000a            }\u000a            *(undefined *)(*piVar10 + iVar14) = 0;\u000a            uVar6 = *puVar13;\u000a          }\u000a          uVar7 = uVar15;\u000a          if ((int)uVar6 <= (int)uVar15) {\u000a            uVar7 = uVar6;\u000a          }\u000a          *puVar13 = uVar6 - uVar7;\u000a          uVar15 = uVar15 - uVar7;\u000a          *(byte *)(*piVar10 + *piVar12) =\u000a               *(byte *)(*piVar10 + *piVar12) |\u000a               (byte)(((int)(uint)uVar3 >> uVar15) << uVar6 - uVar7);\u000a          *piVar11 = *piVar11 + uVar7;\u000a        } while (0 < (int)uVar15);\u000a        uVar6 = (uint)*pbVar5;\u000a      }\u000a      local_3c = uVar6 + local_3c;\u000a      bVar1 = 1 < local_40;\u000a      local_40 = local_40 + -1;\u000a    } while (bVar1);\u000a  }\u000a  return local_3c;\u000a}\u000a\u000a
p654
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x3c\nstr r0,[sp,#0x24]\nldr r2,[0x0001a074]\nldr r3,[r1,r2]\nldr r2,[0x0001a078]\nldr r2,[r1,r2]\nsub r5,r2,r3\nldr r2,[0x0001a07c]\nldr r2,[r1,r2]\nadd r2,#0x20\nmov r4,#0x0\nstr r4,[sp,#0x14]\ncmp r5,#0x4\nbge 0x00019eb2\nb 0x0001a06c\nldr r4,[0x0001a080]\nadd r4,r0,r4\nstr r4,[sp,#0x28]\nmov r4,#0x47\nlsl r4,r4,#0x2\nadd r4,r0,r4\nstr r4,[sp,#0x34]\nmov r4,#0x49\nlsl r4,r4,#0x2\nadd r4,r0,r4\nstr r4,[sp,#0x30]\nmov r4,#0x25\nlsl r4,r4,#0x3\nadd r4,r0,r4\nstr r4,[sp,#0x38]\nmov r4,#0x4b\nlsl r4,r4,#0x2\nadd r4,r0,r4\nstr r4,[sp,#0x20]\nlsl r3,r3,#0x2\nadd r0,r1,r3\nstr r0,[sp,#0x18]\nmov r1,#0x9\nlsl r1,r1,#0x8\nadd r0,r0,r1\nstr r0,[sp,#0x1c]\nlsl r1,r2,#0x4\nldr r2,[0x0001a084]\nadd r2,pc\nldr r2,[r2,#0x0]\nadd r1,r2,r1\nldr r0,[r1,#0x8]\nstr r0,[sp,#0x8]\nldr r0,[r1,#0xc]\nstr r0,[sp,#0x4]\nasr r1,r5,#0x1f\nlsr r1,r1,#0x1e\nadd r0,r5,r1\nasr r0,r0,#0x2\nstr r0,[sp,#0x10]\nmov r0,#0x0\nstr r0,[sp,#0x0]\nstr r0,[sp,#0x14]\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nldr r5,[sp,#0x0]\npush { r5 }\npop { r6 }\nbeq 0x00019f2c\nldr r0,[sp,#0x18]\nldr r0,[r0,#0x0]\nmov r6,#0x0\npush { r6 }\npop { r1 }\nbl 0x00037a30\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0x4]\ncmp r0,#0x0\nbeq 0x00019f4c\nmov r0,#0x4\norr r5,r0\nldr r0,[sp,#0x18]\nldr r0,[r0,#0x4]\nmov r1,#0x0\nbl 0x00037a30\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0x8]\ncmp r0,#0x0\nbeq 0x00019f6a\nldr r0,[sp,#0x18]\nldr r0,[r0,#0x8]\nmov r1,#0x0\nbl 0x00037a30\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0xc]\ncmp r0,#0x0\nbeq 0x00019f88\nldr r0,[sp,#0x18]\nldr r0,[r0,#0xc]\nmov r1,#0x0\nbl 0x00037a30\npush { r6 }\npop { r2 }\nldr r3,[sp,#0x30]\nldr r0,[sp,#0x4]\nldrb r6,[r0,r5]\nadd r0,r0,r5\nstr r0,[sp,#0xc]\nlsl r0,r5,#0x1\nldr r1,[sp,#0x8]\nldrh r0,[r1,r0]\nadd r0,r0,r2\nstr r0,[sp,#0x2c]\nldr r0,[sp,#0x18]\nadd r0,#0x10\nstr r0,[sp,#0x18]\nldr r0,[sp,#0x1c]\nadd r0,#0x10\nstr r0,[sp,#0x1c]\nmov r0,#0x0\ncmp r6,#0x0\nbeq 0x0001a058\nldr r1,[r4,#0x0]\ncmp r1,#0x0\nldr r5,[sp,#0x38]\nbne 0x0001a022\nmov r0,#0x8\nstr r0,[r4,#0x0]\nldr r0,[r5,#0x0]\nadd r0,#0x1\nstr r0,[r5,#0x0]\nldr r1,[sp,#0x28]\nldr r1,[r1,#0x0]\nmov r2,#0x30\nmul r2,r1\nldr r5,[sp,#0x24]\nadd r1,r5,r2\nldr r2,[0x0001a088]\nldr r2,[r1,r2]\npush { r3 }\npop { r4 }\nldr r3,[r4,#0x0]\ncmp r2,r3\nbne 0x0001a014\nldr r2,[sp,#0x34]\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nldr r2,[0x0001a08c]\nadd r1,r1,r2\nldr r2,[r5,#0x18]\nbl 0x000379c0\nldr r1,[r5,#0x18]\nldr r3,[sp,#0x38]\nldr r0,[r3,#0x0]\nadd r0,r0,r1\nstr r0,[r3,#0x0]\nlsl r1,r1,#0x3\nldr r2,[r4,#0x0]\nadd r1,r2,r1\nstr r1,[r4,#0x0]\nldr r4,[sp,#0x28]\nldr r1,[r4,#0x0]\nadd r1,#0x1\nmov r2,#0xff\nand r2,r1\nstr r2,[r4,#0x0]\nldr r1,[sp,#0x34]\npush { r3 }\npop { r5 }\nb 0x0001a018\nldr r1,[sp,#0x34]\nldr r5,[sp,#0x38]\nldr r1,[r1,#0x0]\nmov r2,#0x0\nstrb r2,[r1,r0]\nldr r4,[sp,#0x20]\nldr r1,[r4,#0x0]\ncmp r6,r1\npush { r6 }\npop { r0 }\nblt 0x0001a02e\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r4,#0x0]\nsub r6,r6,r0\nldr r2,[sp,#0x2c]\nasr r2,r6\nlsl r2,r1\nldr r1,[r5,#0x0]\nstr r5,[sp,#0x38]\nldr r3,[sp,#0x34]\nldr r3,[r3,#0x0]\nldrb r5,[r3,r1]\norr r5,r2\nstrb r5,[r3,r1]\nldr r3,[sp,#0x30]\nldr r1,[r3,#0x0]\nadd r0,r1,r0\nstr r0,[r3,#0x0]\ncmp r6,#0x0\nbgt 0x00019fb2\nldr r0,[sp,#0xc]\nldrb r0,[r0,#0x0]\nstr r3,[sp,#0x30]\nldr r1,[sp,#0x14]\nadd r1,r0,r1\nstr r1,[sp,#0x14]\nldr r1,[sp,#0x10]\nsub r0,r1,#0x1\ncmp r1,#0x1\nstr r0,[sp,#0x10]\nble 0x0001a06c\nb 0x00019f08\nldr r0,[sp,#0x14]\nadd sp,#0x3c\npop { r4, r5, r6, r7, pc }\n'
p655
S'f0 b5\n03 af\n8f b0\n09 90\n76 4a\n8b 58\n76 4a\n8a 58\nd5 1a\n76 4a\n8a 58\n20 32\n00 24\n05 94\n04 2d\n00 da\ndc e0\n73 4c\n04 19\n0a 94\n47 24\na4 00\n04 19\n0d 94\n49 24\na4 00\n04 19\n0c 94\n25 24\ne4 00\n04 19\n0e 94\n4b 24\na4 00\n04 19\n08 94\n9b 00\nc8 18\n06 90\n09 21\n09 02\n40 18\n07 90\n11 01\n66 4a\n7a 44\n12 68\n51 18\n88 68\n02 90\nc8 68\n01 90\ne9 17\n89 0f\n68 18\n80 10\n04 90\n00 20\n00 90\n05 90\n07 98\n00 68\n00 28\n00 9d\n20 b4\n40 bc\n0a d0\n06 98\n00 68\n00 26\n40 b4\n02 bc\n1d f0 86 fd\n07 98\n40 68\n00 28\n0b d0\n04 20\n05 43\n06 98\n40 68\n00 21\n1d f0 77 fd\n07 98\n80 68\n00 28\n0a d0\n06 98\n80 68\n00 21\n1d f0 69 fd\n07 98\nc0 68\n00 28\n0a d0\n06 98\nc0 68\n00 21\n1d f0 5a fd\n40 b4\n04 bc\n0c 9b\n01 98\n46 5d\n40 19\n03 90\n68 00\n02 99\n08 5a\n80 18\n0b 90\n06 98\n10 30\n06 90\n07 98\n10 30\n07 90\n00 20\n00 2e\n52 d0\n21 68\n00 29\n0e 9d\n33 d1\n08 20\n20 60\n28 68\n01 30\n28 60\n0a 99\n09 68\n30 22\n4a 43\n09 9d\na9 18\n2d 4a\n8a 58\n08 b4\n10 bc\n23 68\n9a 42\n1a d1\n0d 9a\n12 68\n10 18\n29 4a\n89 18\naa 69\n1d f0 e9 fc\na9 69\n0e 9b\n18 68\n40 18\n18 60\nc9 00\n22 68\n51 18\n21 60\n0a 9c\n21 68\n01 31\nff 22\n0a 40\n22 60\n0d 99\n08 b4\n20 bc\n01 e0\n0d 99\n0e 9d\n09 68\n00 22\n0a 54\n08 9c\n21 68\n8e 42\n40 b4\n01 bc\n01 db\n02 b4\n01 bc\n09 1a\n21 60\n36 1a\n0b 9a\n32 41\n8a 40\n29 68\n0e 95\n0d 9b\n1b 68\n5d 5c\n15 43\n5d 54\n0c 9b\n19 68\n08 18\n18 60\n00 2e\nae dc\n03 98\n00 78\n0c 93\n05 99\n41 18\n05 91\n04 99\n48 1e\n01 29\n04 90\n00 dd\n4d e7\n05 98\n0f b0\nf0 bd\n'
p656
S'.text:00019e90\n.text:00019e92\n.text:00019e94\n.text:00019e96\n.text:00019e98\n.text:00019e9a\n.text:00019e9c\n.text:00019e9e\n.text:00019ea0\n.text:00019ea2\n.text:00019ea4\n.text:00019ea6\n.text:00019ea8\n.text:00019eaa\n.text:00019eac\n.text:00019eae\n.text:00019eb0\n.text:00019eb2\n.text:00019eb4\n.text:00019eb6\n.text:00019eb8\n.text:00019eba\n.text:00019ebc\n.text:00019ebe\n.text:00019ec0\n.text:00019ec2\n.text:00019ec4\n.text:00019ec6\n.text:00019ec8\n.text:00019eca\n.text:00019ecc\n.text:00019ece\n.text:00019ed0\n.text:00019ed2\n.text:00019ed4\n.text:00019ed6\n.text:00019ed8\n.text:00019eda\n.text:00019edc\n.text:00019ede\n.text:00019ee0\n.text:00019ee2\n.text:00019ee4\n.text:00019ee6\n.text:00019ee8\n.text:00019eea\n.text:00019eec\n.text:00019eee\n.text:00019ef0\n.text:00019ef2\n.text:00019ef4\n.text:00019ef6\n.text:00019ef8\n.text:00019efa\n.text:00019efc\n.text:00019efe\n.text:00019f00\n.text:00019f02\n.text:00019f04\n.text:00019f06\n.text:00019f08\n.text:00019f0a\n.text:00019f0c\n.text:00019f0e\n.text:00019f10\n.text:00019f12\n.text:00019f14\n.text:00019f16\n.text:00019f18\n.text:00019f1a\n.text:00019f1c\n.text:00019f1e\n.text:00019f20\n.text:00019f2c\n.text:00019f2e\n.text:00019f30\n.text:00019f32\n.text:00019f34\n.text:00019f36\n.text:00019f38\n.text:00019f3a\n.text:00019f3c\n.text:00019f3e\n.text:00019f4c\n.text:00019f4e\n.text:00019f50\n.text:00019f52\n.text:00019f54\n.text:00019f56\n.text:00019f58\n.text:00019f5a\n.text:00019f6a\n.text:00019f6c\n.text:00019f6e\n.text:00019f70\n.text:00019f72\n.text:00019f74\n.text:00019f76\n.text:00019f78\n.text:00019f88\n.text:00019f8a\n.text:00019f8c\n.text:00019f8e\n.text:00019f90\n.text:00019f92\n.text:00019f94\n.text:00019f96\n.text:00019f98\n.text:00019f9a\n.text:00019f9c\n.text:00019f9e\n.text:00019fa0\n.text:00019fa2\n.text:00019fa4\n.text:00019fa6\n.text:00019fa8\n.text:00019faa\n.text:00019fac\n.text:00019fae\n.text:00019fb0\n.text:00019fb2\n.text:00019fb4\n.text:00019fb6\n.text:00019fb8\n.text:00019fba\n.text:00019fbc\n.text:00019fbe\n.text:00019fc0\n.text:00019fc2\n.text:00019fc4\n.text:00019fc6\n.text:00019fc8\n.text:00019fca\n.text:00019fcc\n.text:00019fce\n.text:00019fd0\n.text:00019fd2\n.text:00019fd4\n.text:00019fd6\n.text:00019fd8\n.text:00019fda\n.text:00019fdc\n.text:00019fde\n.text:00019fe0\n.text:00019fe2\n.text:00019fe4\n.text:00019fe6\n.text:00019fe8\n.text:00019fea\n.text:00019fee\n.text:00019ff0\n.text:00019ff2\n.text:00019ff4\n.text:00019ff6\n.text:00019ff8\n.text:00019ffa\n.text:00019ffc\n.text:00019ffe\n.text:0001a000\n.text:0001a002\n.text:0001a004\n.text:0001a006\n.text:0001a008\n.text:0001a00a\n.text:0001a00c\n.text:0001a00e\n.text:0001a010\n.text:0001a012\n.text:0001a014\n.text:0001a016\n.text:0001a018\n.text:0001a01a\n.text:0001a01c\n.text:0001a01e\n.text:0001a020\n.text:0001a022\n.text:0001a024\n.text:0001a026\n.text:0001a028\n.text:0001a02a\n.text:0001a02c\n.text:0001a02e\n.text:0001a030\n.text:0001a032\n.text:0001a034\n.text:0001a036\n.text:0001a038\n.text:0001a03a\n.text:0001a03c\n.text:0001a03e\n.text:0001a040\n.text:0001a042\n.text:0001a044\n.text:0001a046\n.text:0001a048\n.text:0001a04a\n.text:0001a04c\n.text:0001a04e\n.text:0001a050\n.text:0001a052\n.text:0001a054\n.text:0001a056\n.text:0001a058\n.text:0001a05a\n.text:0001a05c\n.text:0001a05e\n.text:0001a060\n.text:0001a062\n.text:0001a064\n.text:0001a066\n.text:0001a068\n.text:0001a06a\n.text:0001a06c\n.text:0001a06e\n.text:0001a070\n'
p657
tp658
sS'AddVbrFrame'
p659
(S'\n__stdcall AddVbrFrame()\n'
p660
V\u000avoid AddVbrFrame(void)\u000a\u000a{\u000a  (*(set_frame_pinfo + DAT_00037b6c))();\u000a  return;\u000a}\u000a\u000a
p661
S'ldr r12,[0x37b6c]\nadd pc,r12,pc\n'
p662
S'00 c0 9f e5\n0f f0 8c e0\n'
p663
S'.text:00037b64\n.text:00037b68\n'
p664
tp665
sS'convert_partition2scalefac'
p666
(S'\n__stdcall convert_partition2scalefac(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p667
V\u000avoid convert_partition2scalefac\u000a               (int param_1,undefined4 *param_2,undefined4 param_3,undefined4 *param_4,\u000a               undefined4 *param_5)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = *(int *)(param_1 + DAT_00028abc);\u000a  iVar3 = 0;\u000a  if (0 < iVar1) {\u000a    iVar2 = *(int *)(param_1 + DAT_00028ac0);\u000a    iVar3 = *(int *)(param_1 + DAT_00028ac4);\u000a    if (iVar2 <= *(int *)(param_1 + DAT_00028ac4)) {\u000a      iVar3 = iVar2;\u000a    }\u000a    if (0 < iVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __addsf3(0,*param_2);\u000a    }\u000a    if (0 < iVar2) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __mulsf3(*(undefined4 *)(param_1 + 0x458),*param_2);\u000a    }\u000a    *param_4 = 0;\u000a    *param_5 = 0;\u000a    iVar3 = 1;\u000a  }\u000a  if (iVar3 < iVar1) {\u000a    iVar1 = iVar1 - iVar3;\u000a    param_5 = param_5 + iVar3;\u000a    param_4 = param_4 + iVar3;\u000a    do {\u000a      *param_4 = 0;\u000a      *param_5 = 0;\u000a      iVar1 = iVar1 + -1;\u000a      param_5 = param_5 + 1;\u000a      param_4 = param_4 + 1;\u000a    } while (iVar1 != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p668
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x34\nstr r3,[sp,#0x8]\nstr r2,[sp,#0x20]\nstr r1,[sp,#0x1c]\nstr r0,[sp,#0xc]\nldr r1,[0x00028abc]\nldr r0,[r0,r1]\nstr r0,[sp,#0x0]\nmov r2,#0x0\nldr r1,[sp,#0x48]\nstr r1,[sp,#0x4]\ncmp r0,#0x1\nbge 0x0002898c\nb 0x00028a98\nldr r0,[0x00028ac0]\nldr r1,[sp,#0xc]\nldr r0,[r1,r0]\nstr r0,[sp,#0x24]\nmov r6,#0x0\nstr r6,[sp,#0x30]\npush { r6 }\npop { r3 }\npush { r6 }\npop { r2 }\nlsl r1,r2,#0x2\nstr r1,[sp,#0x14]\nldr r0,[sp,#0xc]\nadd r4,r0,r1\nldr r0,[0x00028ac4]\nldr r1,[r4,r0]\nldr r0,[sp,#0x24]\ncmp r1,r0\nblt 0x000289b4\nldr r1,[sp,#0x24]\nstr r2,[sp,#0x18]\ncmp r6,r1\nbge 0x000289fe\nstr r4,[sp,#0x10]\nlsl r0,r6,#0x2\nstr r1,[sp,#0x28]\nldr r1,[sp,#0x20]\npush { r3 }\npop { r2 }\nadd r4,r1,r0\nldr r1,[sp,#0x1c]\nadd r5,r1,r0\nldr r3,[sp,#0x30]\nstr r2,[sp,#0x2c]\nldr r1,[r5,#0x0]\npush { r3 }\npop { r0 }\nbl 0x00037a70\nstr r3,[sp,#0x2c]\nldr r0,[sp,#0x24]\ncmp r6,r0\nbge 0x00028a84\nlsl r5,r6,#0x2\nstr r5,[sp,#0x28]\nldr r1,[sp,#0x1c]\nldr r1,[r1,r5]\nmov r0,#0x8b\nlsl r0,r0,#0x3\nldr r0,[r4,r0]\nstr r0,[sp,#0x10]\nbl 0x00037aa0\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x14]\nldr r2,[sp,#0x30]\nstr r2,[r0,r1]\nldr r0,[sp,#0x4]\nldr r2,[sp,#0x2c]\nstr r2,[r0,r1]\nldr r2,[sp,#0x18]\nadd r2,#0x1\nldr r0,[sp,#0x0]\ncmp r2,r0\nbge 0x00028ab8\nsub r0,r0,r2\nlsl r2,r2,#0x2\nldr r1,[sp,#0x4]\nadd r1,r1,r2\nldr r3,[sp,#0x8]\nadd r2,r3,r2\nmov r3,#0x0\nstr r3,[r2,#0x0]\nstr r3,[r1,#0x0]\nsub r0,#0x1\nadd r1,#0x4\nadd r2,#0x4\ncmp r0,#0x0\nbne 0x00028aa8\nadd sp,#0x34\npop { r4, r5, r6, r7, pc }\n'
p669
S'f0 b5\n03 af\n8d b0\n02 93\n08 92\n07 91\n03 90\n50 49\n40 58\n00 90\n00 22\n12 99\n01 91\n01 28\n00 da\n85 e0\n4c 48\n03 99\n08 58\n09 90\n00 26\n0c 96\n40 b4\n08 bc\n40 b4\n04 bc\n91 00\n05 91\n03 98\n44 18\n46 48\n21 58\n09 98\n81 42\n00 db\n09 99\n06 92\n8e 42\n21 da\n04 94\nb0 00\n0a 91\n08 99\n08 b4\n04 bc\n0c 18\n07 99\n0d 18\n0c 9b\n0b 92\n29 68\n08 b4\n01 bc\n0f f0 4b f8\n0b 93\n09 98\n86 42\n3e da\nb5 00\n0a 95\n07 99\n49 59\n8b 20\nc0 00\n20 58\n04 90\n0f f0 43 f8\n02 98\n05 99\n0c 9a\n42 50\n01 98\n0b 9a\n42 50\n06 9a\n01 32\n00 98\n82 42\n0d da\n80 1a\n92 00\n01 99\n89 18\n02 9b\n9a 18\n00 23\n13 60\n0b 60\n01 38\n04 31\n04 32\n00 28\nf7 d1\n0d b0\nf0 bd\n'
p670
S'.text:0002896c\n.text:0002896e\n.text:00028970\n.text:00028972\n.text:00028974\n.text:00028976\n.text:00028978\n.text:0002897a\n.text:0002897c\n.text:0002897e\n.text:00028980\n.text:00028982\n.text:00028984\n.text:00028986\n.text:00028988\n.text:0002898a\n.text:0002898c\n.text:0002898e\n.text:00028990\n.text:00028992\n.text:00028994\n.text:00028996\n.text:00028998\n.text:0002899a\n.text:0002899c\n.text:0002899e\n.text:000289a0\n.text:000289a2\n.text:000289a4\n.text:000289a6\n.text:000289a8\n.text:000289aa\n.text:000289ac\n.text:000289ae\n.text:000289b0\n.text:000289b2\n.text:000289b4\n.text:000289b6\n.text:000289b8\n.text:000289ba\n.text:000289bc\n.text:000289be\n.text:000289c0\n.text:000289c2\n.text:000289c4\n.text:000289c6\n.text:000289c8\n.text:000289ca\n.text:000289cc\n.text:000289ce\n.text:000289d0\n.text:000289d2\n.text:000289d4\n.text:000289d6\n.text:000289fe\n.text:00028a00\n.text:00028a02\n.text:00028a04\n.text:00028a06\n.text:00028a08\n.text:00028a0a\n.text:00028a0c\n.text:00028a0e\n.text:00028a10\n.text:00028a12\n.text:00028a14\n.text:00028a16\n.text:00028a84\n.text:00028a86\n.text:00028a88\n.text:00028a8a\n.text:00028a8c\n.text:00028a8e\n.text:00028a90\n.text:00028a92\n.text:00028a94\n.text:00028a96\n.text:00028a98\n.text:00028a9a\n.text:00028a9c\n.text:00028a9e\n.text:00028aa0\n.text:00028aa2\n.text:00028aa4\n.text:00028aa6\n.text:00028aa8\n.text:00028aaa\n.text:00028aac\n.text:00028aae\n.text:00028ab0\n.text:00028ab2\n.text:00028ab4\n.text:00028ab6\n.text:00028ab8\n.text:00028aba\n'
p671
tp672
sS'id3tag_set_fieldvalue'
p673
(S'\n__stdcall id3tag_set_fieldvalue()\n'
p674
V\u000aundefined4 id3tag_set_fieldvalue(undefined4 uParm1,char *pcParm2)\u000a\u000a{\u000a  if ((pcParm2 != (char *)0x0) && (*pcParm2 != 0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(pcParm2);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p675
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nmov r0,#0x0\ncmp r4,#0x0\nbeq 0x0001db78\nldrb r1,[r4,#0x0]\ncmp r1,#0x0\nbeq 0x0001db78\npush { r4 }\npop { r0 }\nbl 0x000379e0\npop { r4, r5, r7, pc }\n'
p676
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n00 20\n00 2c\n16 d0\n21 78\n00 29\n13 d0\n10 b4\n01 bc\n19 f0 44 ff\nb0 bd\n'
p677
S'.text:0001db38\n.text:0001db3a\n.text:0001db3c\n.text:0001db3e\n.text:0001db40\n.text:0001db42\n.text:0001db44\n.text:0001db46\n.text:0001db48\n.text:0001db4a\n.text:0001db4c\n.text:0001db4e\n.text:0001db50\n.text:0001db52\n.text:0001db54\n.text:0001db78\n'
p678
tp679
sS'lame_report_fnc'
p680
(S'\n__stdcall lame_report_fnc(lame_report_function * print_f, char * format)\n'
p681
V\u000a/* WARNING: Control flow encountered bad instruction data */\u000a\u000avoid lame_report_fnc(void (*print_f)(char *,va_list),char *format,...)\u000a\u000a{\u000a  undefined4 in_r2;\u000a  undefined4 *in_r3;\u000a  undefined4 *unaff_r4;\u000a  undefined4 unaff_r5;\u000a  undefined4 unaff_r9;\u000a  int unaff_r10;\u000a  undefined4 unaff_r11;\u000a  uint in_r12;\u000a  undefined4 in_lr;\u000a  bool in_ZR;\u000a  bool in_CY;\u000a  undefined4 in_cr15;\u000a  \u000a  if (!in_CY || in_ZR) {\u000a    *in_r3 = 0x21fb8;\u000a    *(BADSPACEBASE **)(in_r3 + -1) = register0x00000054;\u000a    in_r3[-2] = in_r12;\u000a    in_r3[-3] = unaff_r11;\u000a    in_r3[-4] = unaff_r10;\u000a    *(char **)(in_r3 + -5) = format;\u000a  }\u000a  coprocessor_loadlong2(0,in_cr15,in_r12 - 0x54);\u000a  if (!in_CY || in_ZR) {\u000a    *(undefined4 *)(unaff_r10 + -4) = 0x21fc0;\u000a    *(uint *)(unaff_r10 + -8) = in_r12;\u000a    *(undefined4 *)(unaff_r10 + -0xc) = unaff_r11;\u000a    *(int *)(unaff_r10 + -0x10) = unaff_r10;\u000a    *(undefined4 *)(unaff_r10 + -0x14) = unaff_r9;\u000a    *(undefined4 **)(unaff_r10 + -0x18) = in_r3;\u000a    *(char **)(unaff_r10 + -0x1c) = format;\u000a    *(void (**)(char *,va_list))(unaff_r10 + -0x20) = print_f;\u000a  }\u000a  if (!in_CY || in_ZR) {\u000a    *(undefined4 *)format = in_lr;\u000a    *(BADSPACEBASE **)(format + -4) = register0x00000054;\u000a    *(undefined4 *)(format + -8) = unaff_r5;\u000a    *(undefined4 **)(format + -0xc) = unaff_r4;\u000a  }\u000a  if (!in_CY || in_ZR) {\u000a    *(uint *)in_r12 = in_r12;\u000a    *(undefined4 *)(in_r12 - 4) = unaff_r11;\u000a    *(undefined4 *)(in_r12 - 8) = unaff_r5;\u000a    *(undefined4 **)(in_r12 - 0xc) = in_r3;\u000a    *(undefined4 *)(in_r12 - 0x10) = in_r2;\u000a    *(void (**)(char *,va_list))(in_r12 - 0x14) = print_f;\u000a  }\u000a  if (!in_CY || in_ZR) {\u000a    in_r3 = (undefined4 *)(in_r12 & (int)format << 0x10);\u000a  }\u000a  if (!in_CY) {\u000a    *(undefined4 **)unaff_r4 = in_r3;\u000a  }\u000a                    /* WARNING: Bad instruction - Truncating control flow here */\u000a  halt_baddata();\u000a}\u000a\u000a
p682
S'stmlsda r3,{ r1 r10 r11 r12 sp pc}\nldc2l p0,cr15,[r12,#-0x54]\nstmlsdb r10,{ r0 r1 r3 r9 r10 r11 r12 pc}\nstmlsda r1,{ r4 r5 sp lr }\nstmlsda r12,{ r0 r2 r3 r5 r11 r12 }\nandls r3,r12,r1, lsl #0x10\nstrcc r3,[r4],#-0x604\n'
p683
S'02 bc 03 98\n15 f0 5c fd\n0b 9e 0a 99\n30 60 01 98\n2d 18 0c 98\n01 38 0c 90\n04 36 04 34\n'
p684
S'.text:00021fb0\n.text:00021fb4\n.text:00021fb8\n.text:00021fbc\n.text:00021fc0\n.text:00021fc4\n.text:00021fc8\n'
p685
tp686
sS'lame_set_VBR_q'
p687
(S'\n__stdcall lame_set_VBR_q()\n'
p688
V\u000avoid lame_set_VBR_q(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038220 + DAT_0003821c))();\u000a  return;\u000a}\u000a\u000a
p689
S'ldr r12,[0x3821c]\nadd pc,r12,pc\n'
p690
S'00 c0 9f e5\n0f f0 8c e0\n'
p691
S'.text:00038214\n.text:00038218\n'
p692
tp693
sS'lame_get_quality'
p694
(S'\n__stdcall lame_get_quality(lame_global_flags * gfp)\n'
p695
V\u000aint lame_get_quality(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint unaff_r5;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  uint uVar12;\u000a  char in_ZR;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  uint uStack00000030;\u000a  \u000a  if (in_ZR == 0) {\u000a    unaff_r5 = *(int *)(in_stack_0000001c + DAT_0001e1e4) + unaff_r5;\u000a  }\u000a  uVar1 = unaff_r5;\u000a  if ((unaff_r5 <= in_stack_00000014) && (uVar1 = 0, in_stack_00000018 != (undefined *)0x0)) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    uStack00000030 = 0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar1 = unaff_r5 - 10;\u000a    in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a    puVar11 = in_stack_00000018 + 10;\u000a    puVar9 = (undefined4 *)*in_stack_00000008;\u000a    while (puVar9 != (undefined4 *)0x0) {\u000a      uVar1 = puVar9[1];\u000a      uVar12 = 0xff;\u000a      iVar3 = 4;\u000a      if ((uVar1 == DAT_0001e494) || (uVar4 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a        iVar3 = puVar9[4] * 2 + 0x10;\u000a        if (puVar9[5] != 1) {\u000a          iVar3 = puVar9[4] + 0xf;\u000a        }\u000a        iVar5 = 0;\u000a        if (puVar9[8] == 1) {\u000a          iVar5 = puVar9[8];\u000a        }\u000a        uVar12 = (puVar9[7] << iVar5) + iVar3;\u000a        iVar3 = 4;\u000a        if (10 < uVar12) {\u000a          do {\u000a            puVar11[iVar3 + -1] = (char)uVar1;\u000a            iVar3 = iVar3 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar3);\u000a          uVar12 = uVar12 - 10;\u000a          iVar3 = 4;\u000a          do {\u000a            puVar11[iVar3 + 3] = (char)uVar12;\u000a            iVar3 = iVar3 + -1;\u000a            uVar12 = uVar12 >> 8;\u000a          } while (0 < iVar3);\u000a          puVar11[8] = 0;\u000a          puVar11[9] = 0;\u000a          *(bool *)(puVar11 + 10) = puVar9[8] == 1;\u000a          puVar11[0xb] = *(undefined *)(puVar9 + 2);\u000a          puVar11[0xc] = *(undefined *)((int)puVar9 + 9);\u000a          puVar11[0xd] = *(undefined *)((int)puVar9 + 10);\u000a          puVar11 = puVar11 + 0xe;\u000a          if (puVar9[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,puVar9[3],puVar9[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar3 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar3;\u000a          }\u000a          iVar3 = puVar9[4];\u000a          if (iVar3 != 0) {\u000a            puVar2 = (undefined *)puVar9[3];\u000a            iVar5 = iVar3;\u000a            puVar8 = puVar11;\u000a            do {\u000a              *puVar8 = *puVar2;\u000a              puVar8 = puVar8 + 1;\u000a              puVar2 = puVar2 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a            puVar11 = puVar11 + iVar3;\u000a          }\u000a          *puVar11 = 0;\u000a          puVar11 = puVar11 + 1;\u000a          if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a            puVar11 = (undefined *)writeUcs2s(puVar11,puVar9[6],puVar9[7]);\u000a          }\u000a          else {\u000a            iVar3 = puVar9[7];\u000a            if (iVar3 != 0) {\u000a              puVar2 = (undefined *)puVar9[6];\u000a              iVar5 = iVar3;\u000a              puVar8 = puVar11;\u000a              do {\u000a                *puVar8 = *puVar2;\u000a                puVar8 = puVar8 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a              puVar11 = puVar11 + iVar3;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar7 = uVar12 & 0x57000000;\u000a          uVar10 = uStack00000030;\u000a          if (uVar7 != (uVar12 & uVar1)) {\u000a            uVar10 = uVar12 & uVar1;\u000a          }\u000a          if (uVar7 == 0) {\u000a            uVar10 = uVar7;\u000a          }\u000a          uVar4 = uVar4 | uVar10;\u000a          iVar3 = iVar3 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar3 != 0);\u000a        if (uVar4 == 0) {\u000a          uVar12 = sizeOfWxxxNode(puVar9);\u000a          iVar3 = 4;\u000a          if (10 < uVar12) {\u000a            do {\u000a              puVar11[iVar3 + -1] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar12 = uVar12 - 10;\u000a            iVar3 = 4;\u000a            do {\u000a              puVar11[iVar3 + 3] = (char)uVar12;\u000a              iVar3 = iVar3 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar3);\u000a            puVar11[8] = 0;\u000a            puVar11[9] = 0;\u000a            puVar8 = puVar11 + 10;\u000a            if (puVar9[4] != 0) {\u000a              *(bool *)(puVar11 + 10) = puVar9[5] == 1;\u000a              puVar11 = puVar11 + 0xb;\u000a              if (puVar9[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar11,puVar9[3],puVar9[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a              }\u000a              else {\u000a                iVar3 = puVar9[4];\u000a                if (iVar3 != 0) {\u000a                  puVar2 = (undefined *)puVar9[3];\u000a                  iVar5 = iVar3;\u000a                  puVar8 = puVar11;\u000a                  do {\u000a                    *puVar8 = *puVar2;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar2 = puVar2 + 1;\u000a                    iVar5 = iVar5 + -1;\u000a                  } while (iVar5 != 0);\u000a                  puVar11 = puVar11 + iVar3;\u000a                }\u000a                *puVar11 = 0;\u000a                puVar8 = puVar11 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) {\u000a              puVar11 = (undefined *)writeLoBytes(puVar8,puVar9[6],puVar9[7]);\u000a            }\u000a            else {\u000a              iVar3 = puVar9[7];\u000a              puVar11 = puVar8;\u000a              if (iVar3 != 0) {\u000a                puVar2 = (undefined *)puVar9[6];\u000a                iVar5 = iVar3;\u000a                puVar11 = puVar8;\u000a                do {\u000a                  *puVar11 = *puVar2;\u000a                  puVar11 = puVar11 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar11 = puVar8 + iVar3;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar3 = puVar9[7];\u000a          iVar5 = puVar9[4];\u000a          if (puVar9[8] == 1) {\u000a            iVar6 = iVar5 * 2 + 0xd;\u000a            if (iVar5 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a            iVar3 = iVar3 << 1;\u000a          }\u000a          else {\u000a            iVar6 = iVar5 + 0xc;\u000a            if (iVar5 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a          }\u000a          iVar5 = 4;\u000a          if (10 < (uint)(iVar6 + iVar3)) {\u000a            do {\u000a              puVar11[iVar5 + -1] = (char)uVar1;\u000a              iVar5 = iVar5 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar5);\u000a            uVar1 = (iVar6 + iVar3) - 10;\u000a            iVar3 = 4;\u000a            do {\u000a              puVar11[iVar3 + 3] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            puVar11[8] = 0;\u000a            puVar11[9] = 0;\u000a            *(bool *)(puVar11 + 10) = puVar9[8] == 1;\u000a            puVar11 = puVar11 + 0xb;\u000a            iVar3 = puVar9[4];\u000a            if (iVar3 != 0) {\u000a              if (puVar9[5] == 1) {\u000a                puVar11 = (undefined *)writeUcs2s(puVar11,puVar9[3]);\u000a                *puVar11 = 0;\u000a                puVar11[1] = 0;\u000a                puVar11 = puVar11 + 2;\u000a              }\u000a              else {\u000a                puVar2 = (undefined *)puVar9[3];\u000a                iVar5 = iVar3;\u000a                puVar8 = puVar11;\u000a                do {\u000a                  *puVar8 = *puVar2;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar11[iVar3] = 0;\u000a                puVar11 = puVar11 + iVar3 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) goto LAB_0001e338;\u000a            iVar3 = puVar9[7];\u000a            if (iVar3 != 0) {\u000a              puVar2 = (undefined *)puVar9[6];\u000a              iVar5 = iVar3;\u000a              puVar8 = puVar11;\u000a              do {\u000a                *puVar8 = *puVar2;\u000a                puVar8 = puVar8 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar9 = (undefined4 *)*puVar9;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar3 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar11[iVar3 + -1] = (char)uVar1;\u000a          iVar3 = iVar3 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar11,in_stack_00000018 + (unaff_r5 - (int)puVar11));\u000a    uVar1 = unaff_r5;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return uVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p696
S'beq 0x0001e040\nldr r0,[0x0001e1e4]\nldr r1,[sp,#0x1c]\nldr r0,[r1,r0]\nadd r5,r0,r5\nldr r1,[sp,#0x18]\nldr r0,[sp,#0x14]\ncmp r5,r0\nbls 0x0001e04e\npush { r5 }\npop { r0 }\nb 0x0001e470\nstr r5,[sp,#0x2c]\n'
p697
S'03 d0\n6a 48\n07 99\n08 58\n45 19\n06 99\n05 98\n85 42\n02 d9\n20 b4\n01 bc\n10 e2\n0b 95\n'
p698
S'.text:0001e036\n.text:0001e038\n.text:0001e03a\n.text:0001e03c\n.text:0001e03e\n.text:0001e040\n.text:0001e042\n.text:0001e044\n.text:0001e046\n.text:0001e048\n.text:0001e04a\n.text:0001e04c\n.text:0001e04e\n'
p699
tp700
sS'__gnu_unwind_pr_common'
p701
(S'\n__stdcall __gnu_unwind_pr_common()\n'
p702
V\u000aundefined4 __gnu_unwind_pr_common(uint uParm1,int **ppiParm2,undefined4 uParm3,int iParm4)\u000a\u000a{\u000a  bool bVar1;\u000a  uint uVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  int **ppiVar5;\u000a  uint uVar6;\u000a  int *piVar7;\u000a  int *piVar8;\u000a  uint *puVar9;\u000a  int *piVar10;\u000a  uint uVar11;\u000a  int *piVar12;\u000a  uint uVar13;\u000a  uint *puVar14;\u000a  uint local_44;\u000a  int **local_38;\u000a  uint local_34;\u000a  uint *local_30;\u000a  undefined local_2c;\u000a  undefined local_2b;\u000a  \u000a  local_34 = *ppiParm2[0x13];\u000a  local_30 = (uint *)(ppiParm2[0x13] + 1);\u000a  piVar10 = (int *)(uParm1 & 3);\u000a  if (iParm4 == 0) {\u000a    local_34 = local_34 << 8;\u000a    local_2b = 0;\u000a    local_2c = 3;\u000a    puVar14 = local_30;\u000a  }\u000a  else {\u000a    puVar14 = local_30;\u000a    if (iParm4 < 3) {\u000a      uVar6 = local_34 >> 0x10;\u000a      local_2b = (undefined)(local_34 >> 0x10);\u000a      local_34 = local_34 << 0x10;\u000a      puVar14 = local_30 + (uVar6 & 0xff);\u000a      local_2c = 2;\u000a    }\u000a  }\u000a  if (piVar10 == (int *)0x2) {\u000a    puVar14 = (uint *)ppiParm2[0xe];\u000a  }\u000a  local_44 = (uint)ppiParm2[0x14] & 1;\u000a  if (local_44 == 0) {\u000aLAB_00036bcc:\u000a    do {\u000a      while( true ) {\u000a        uVar6 = *puVar14;\u000a        if (uVar6 == 0) goto LAB_00036e84;\u000a        if (iParm4 == 2) {\u000a          uVar11 = puVar14[1];\u000a        }\u000a        else {\u000a          uVar11 = (uint)*(ushort *)((int)puVar14 + 2);\u000a        }\u000a        if (iParm4 == 2) {\u000a          puVar9 = puVar14 + 2;\u000a        }\u000a        else {\u000a          uVar6 = (uint)*(ushort *)puVar14;\u000a          puVar9 = puVar14 + 1;\u000a        }\u000a        uVar13 = (uVar11 & 0xfffffffe) + (int)ppiParm2[0x12];\u000a        uVar2 = _Unwind_GetGR(uParm3,0xf);\u000a        if (uVar2 < uVar13) {\u000a          bVar1 = false;\u000a        }\u000a        else {\u000a          if (uVar2 < uVar13 + (uVar6 & 0xfffffffe)) {\u000a            bVar1 = true;\u000a          }\u000a          else {\u000a            bVar1 = false;\u000a          }\u000a        }\u000a        uVar6 = uVar6 & 1 | (uVar11 & 1) << 1;\u000a        if (uVar6 != 1) break;\u000a        if (piVar10 == (int *)0x0) {\u000a          if (bVar1) {\u000a            uVar11 = *puVar9;\u000a            if (puVar9[1] == 0xfffffffe) {\u000a              return 9;\u000a            }\u000a            local_38 = ppiParm2 + 0x16;\u000a            if (puVar9[1] == 0xffffffff) {\u000aLAB_00036cf4:\u000a              piVar10 = (int *)_Unwind_GetGR(uParm3,0xd);\u000a              ppiVar5 = ppiParm2;\u000a              if (uVar6 != 2) {\u000a                ppiVar5 = local_38;\u000a              }\u000a              ppiParm2[8] = piVar10;\u000a              if (uVar6 == 2) {\u000a                ppiVar5 = ppiVar5 + 0xb;\u000a                *(int ***)ppiVar5 = local_38;\u000a              }\u000aLAB_00036f0c:\u000a              *(int ***)(ppiParm2 + 9) = ppiVar5;\u000a              *(uint **)(ppiParm2 + 10) = puVar9;\u000a              return 6;\u000a            }\u000a            uVar3 = _Unwind_decode_typeinfo_ptr_isra_0(puVar9 + 1);\u000a            uVar6 = __cxa_type_match(ppiParm2,uVar3,uVar11 >> 0x1f);\u000a            if (uVar6 != 0) goto LAB_00036cf4;\u000a          }\u000a        }\u000a        else {\u000a          piVar7 = ppiParm2[8];\u000a          piVar8 = (int *)_Unwind_GetGR(uParm3,0xd);\u000a          if ((piVar7 == piVar8) && (puVar9 == (uint *)ppiParm2[10])) {\u000a            uVar3 = selfrel_offset31(puVar9);\u000a            _Unwind_SetGR(uParm3,0xf,uVar3);\u000aLAB_00036e54:\u000a            uVar3 = 0;\u000a            ppiVar5 = ppiParm2;\u000a            goto LAB_00036ee4;\u000a          }\u000a        }\u000a        puVar14 = puVar9 + 2;\u000a      }\u000a      if (uVar6 != 0) {\u000a        if (uVar6 != 2) {\u000a          return 9;\u000a        }\u000a        piVar8 = (int *)(*puVar9 & 0x7fffffff);\u000a        if (piVar10 == (int *)0x0) {\u000a          if (bVar1) {\u000a            uVar6 = (uParm1 >> 3 ^ 1) & 1;\u000a            if (piVar8 == (int *)0x0) {\u000a              uVar6 = 1;\u000a            }\u000a            if (uVar6 != 0) {\u000a              piVar7 = piVar10;\u000a              do {\u000a                if (piVar7 == piVar8) {\u000a                  piVar10 = (int *)_Unwind_GetGR(uParm3,0xd);\u000a                  ppiParm2[8] = piVar10;\u000a                  ppiVar5 = local_38;\u000a                  goto LAB_00036f0c;\u000a                }\u000a                piVar7 = (int *)((int)piVar7 + 1);\u000a                local_38 = ppiParm2 + 0x16;\u000a                uVar3 = _Unwind_decode_typeinfo_ptr_isra_0(puVar9 + (int)piVar7);\u000a                iVar4 = __cxa_type_match(ppiParm2,uVar3,0,&local_38);\u000a              } while (iVar4 == 0);\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          piVar12 = ppiParm2[8];\u000a          piVar7 = (int *)_Unwind_GetGR(uParm3,0xd);\u000a          if ((piVar12 == piVar7) && (puVar9 == (uint *)ppiParm2[10])) {\u000a            ppiParm2[0xc] = (int *)0x4;\u000a            ppiParm2[10] = piVar8;\u000a            ppiParm2[0xb] = (int *)0x0;\u000a            *(uint **)(ppiParm2 + 0xd) = puVar9 + 1;\u000a            if ((int)*puVar9 < 0) {\u000a              uVar3 = selfrel_offset31(puVar9 + (int)piVar8 + 1);\u000a              _Unwind_SetGR(uParm3,0xf,uVar3);\u000a              goto LAB_00036e54;\u000a            }\u000a            local_44 = 1;\u000a          }\u000a        }\u000a        if ((int)*puVar9 < 0) {\u000a          puVar9 = puVar9 + 1;\u000a        }\u000a        puVar14 = puVar9 + (int)piVar8 + 1;\u000a        goto LAB_00036bcc;\u000a      }\u000a      if (piVar10 == (int *)0x0) {\u000a        bVar1 = false;\u000a      }\u000a      puVar14 = puVar9 + 1;\u000a    } while (!bVar1);\u000a    ppiVar5 = (int **)selfrel_offset31(puVar9);\u000a    *(uint **)(ppiParm2 + 0xe) = puVar14;\u000a    iVar4 = __cxa_begin_cleanup(ppiParm2);\u000a    if (iVar4 == 0) {\u000a      return 9;\u000a    }\u000a    uVar3 = 0xf;\u000a  }\u000a  else {\u000a    local_44 = 0;\u000aLAB_00036e84:\u000a    if (iParm4 < 3) {\u000a      iVar4 = __gnu_unwind_execute(uParm3,&local_34);\u000a    }\u000a    else {\u000a      iVar4 = __gnu_unwind_24bit_isra_1();\u000a    }\u000a    if (iVar4 != 0) {\u000a      return 9;\u000a    }\u000a    if (local_44 == 0) {\u000a      return 8;\u000a    }\u000a    uVar3 = _Unwind_GetGR(uParm3,0xf);\u000a    _Unwind_SetGR(uParm3,0xe,uVar3);\u000a    ppiVar5 = *(int ***)(DAT_00036f20 + 0x36ee4);\u000a    uVar3 = 0xf;\u000a  }\u000aLAB_00036ee4:\u000a  _Unwind_SetGR(uParm3,uVar3,ppiVar5);\u000a  return 7;\u000a}\u000a\u000a
p703
S'stmdb sp!,{ r4 r5 r6 r7 r8 r9 r10 r11 lr }\ncpy r7,r2\nldr r2,[r1,#0x4c]\nsub sp,sp,#0x24\nldr r4,[r2,#0x0]\nadd r12,r2,#0x4\nsubs r9,r3,#0x0\ncpy r5,r1\nand r8,r0,#0x3\nstr r4,[sp,#0x14]\nstr r12,[sp,#0x18]\nbne 0x00036b7c\nmov r4,r4, lsl #0x8\nmov r3,#0x3\nstr r4,[sp,#0x14]\nstrb r9,[sp,#0x1d]\nstrb r3,[sp,#0x1c]\nb 0x00036ba4\ncmp r9,#0x2\nbgt 0x00036ba4\nmov r3,r4, lsr #0x10\nstrb r3,[sp,#0x1d]\nand r3,r3,#0xff\nmov r4,r4, lsl #0x10\nmov r2,#0x2\nadd r12,r12,r3, lsl #0x2\nstr r4,[sp,#0x14]\nstrb r2,[sp,#0x1c]\nldr r3,[r5,#0x50]\ncmp r8,#0x2\nldreq r12,[r5,#0x38]\nands r3,r3,#0x1\nbne 0x00036e7c\nmov r0,r0, lsr #0x3\neor r0,r0,#0x1\nstr r3,[sp,#0x4]\nand r3,r0,#0x1\nstr r3,[sp,#0x8]\nldr r4,[r12,#0x0]\ncmp r4,#0x0\nbeq 0x00036e84\ncmp r9,#0x2\nldreq r10,[r12,#0x4]\nldrhne r10,[r12,#0x2]\nldr r3,[r5,#0x48]\nbic r11,r10,#0x1\ncpy r0,r7\nmov r1,#0xf\naddeq r6,r12,#0x8\nldrhne r4,[r12,#0x0]\naddne r6,r12,#0x4\nadd r11,r11,r3\nbl 0x000369bc\ncmp r11,r0\nmovhi r12,#0x0\nbhi 0x00036c28\nbic r3,r4,#0x1\nadd r11,r11,r3\ncmp r0,r11\nmovcs r12,#0x0\nmovcc r12,#0x1\nand r10,r10,#0x1\nand r4,r4,#0x1\norr r4,r4,r10, lsl #0x1\ncmp r4,#0x1\nbeq 0x00036c9c\nbcc 0x00036c4c\ncmp r4,#0x2\nbeq 0x00036d6c\nb 0x00036ef0\ncmp r8,#0x0\nmoveq r12,#0x0\nandne r12,r12,#0x1\ncmp r12,#0x0\nadd r10,r6,#0x4\nbeq 0x00036c94\ncpy r0,r6\nbl 0x000363c0\nstr r10,[r5,#0x38]\ncpy r4,r0\ncpy r0,r5\nbl 0x00016c3c\ncmp r0,#0x0\nbeq 0x00036ef0\ncpy r0,r7\nmov r1,#0xf\ncpy r2,r4\nb 0x00036ee4\ncpy r12,r10\nb 0x00036bcc\ncmp r8,#0x0\nbne 0x00036d1c\ncmp r12,#0x0\nbeq 0x00036d64\nldr r3,[r6,#0x4]\nldr r10,[r6,#0x0]\ncmn r3,#0x2\nmov r10,r10, lsr #0x1f\nbeq 0x00036ef0\nadd r2,r5,#0x58\ncmn r3,#0x1\nstr r2,[sp,#0x10]\nbeq 0x00036cf4\nadd r0,r6,#0x4\nbl 0x0003663c\ncpy r2,r10\nadd r3,sp,#0x10\ncpy r1,r0\ncpy r0,r5\nbl 0x00016c48\nsubs r4,r0,#0x0\nbeq 0x00036d64\ncpy r0,r7\nmov r1,#0xd\nbl 0x000369bc\ncmp r4,#0x2\nldr r2,[sp,#0x10]\ncpyeq r3,r5\ncpyne r3,r2\nstr r0,[r5,#0x20]\nstreq r2,[r3,#0x2c]!\nb 0x00036f0c\ncpy r0,r7\nmov r1,#0xd\nldr r4,[r5,#0x20]\nbl 0x000369bc\ncmp r4,r0\nbne 0x00036d64\nldr r3,[r5,#0x28]\ncmp r6,r3\nbne 0x00036d64\ncpy r0,r6\nbl 0x000363c0\nmov r1,#0xf\ncpy r2,r0\ncpy r0,r7\nbl 0x00036a40\ncpy r0,r7\nmov r1,#0x0\nb 0x00036e54\nadd r12,r6,#0x8\nb 0x00036bcc\nldr r4,[r6,#0x0]\ncmp r8,#0x0\nbic r4,r4,#0x80000000\nbne 0x00036de4\ncmp r12,#0x0\nbeq 0x00036e64\nldr r3,[sp,#0x8]\ncmp r4,#0x0\norreq r3,r3,#0x1\ncmp r3,#0x0\nbeq 0x00036e64\ncpy r10,r8\nadd r12,r5,#0x58\nadd r11,sp,#0x10\ncmp r10,r4\nbeq 0x00036ef8\nadd r10,r10,#0x1\nadd r0,r6,r10, lsl #0x2\nstr r12,[sp,#0x10]\nstr r12,[sp,#0xc]\nbl 0x0003663c\nmov r2,#0x0\ncpy r3,r11\ncpy r1,r0\ncpy r0,r5\nbl 0x00016c48\nldr r12,[sp,#0xc]\ncmp r0,#0x0\nbeq 0x00036da4\nb 0x00036e64\ncpy r0,r7\nmov r1,#0xd\nldr r10,[r5,#0x20]\nbl 0x000369bc\ncmp r10,r0\nbne 0x00036e64\nldr r3,[r5,#0x28]\ncmp r6,r3\nbne 0x00036e64\nmov r3,#0x4\nmov r10,#0x0\nstr r3,[r5,#0x30]\nadd r3,r6,r3\nstr r4,[r5,#0x28]\nstr r10,[r5,#0x2c]\nstr r3,[r5,#0x34]\nldr r3,[r6,#0x0]\ncmp r3,r10\nbge 0x00036e5c\nadd r0,r4,#0x1\nadd r0,r6,r0, lsl #0x2\nbl 0x000363c0\nmov r1,#0xf\ncpy r2,r0\ncpy r0,r7\nbl 0x00036a40\ncpy r0,r7\ncpy r1,r10\ncpy r2,r5\nb 0x00036ee4\nmov r3,#0x1\nstr r3,[sp,#0x4]\nldr r3,[r6,#0x0]\nadd r12,r4,#0x1\ncmp r3,#0x0\naddlt r6,r6,#0x4\nadd r12,r6,r12, lsl #0x2\nb 0x00036bcc\nmov r3,#0x0\nstr r3,[sp,#0x4]\ncmp r9,#0x2\nble 0x00036e94\nbl 0x00036650\nb 0x00036ea0\ncpy r0,r7\nadd r1,sp,#0x14\nbl 0x00016c54\ncmp r0,#0x0\nbne 0x00036ef0\nldr r3,[sp,#0x4]\ncmp r3,#0x0\nmoveq r0,#0x8\nbeq 0x00036f18\nmov r1,#0xf\ncpy r0,r7\nbl 0x000369bc\nmov r1,#0xe\ncpy r2,r0\ncpy r0,r7\nbl 0x00036a40\nldr r2,[0x36f20]\ncpy r0,r7\nldr r2,[pc,r2]\nmov r1,#0xf\nbl 0x00036a40\nmov r0,#0x7\nb 0x00036f18\nmov r0,#0x9\nb 0x00036f18\ncpy r0,r7\nmov r1,#0xd\nbl 0x000369bc\nldr r3,[sp,#0x10]\nstr r0,[r5,#0x20]\nmov r0,#0x6\nstr r3,[r5,#0x24]\nstr r6,[r5,#0x28]\nadd sp,sp,#0x24\nldmia sp!,{ r4 r5 r6 r7 r8 r9 r10 r11 pc }\n'
p704
S'f0 4f 2d e9\n02 70 a0 e1\n4c 20 91 e5\n24 d0 4d e2\n00 40 92 e5\n04 c0 82 e2\n00 90 53 e2\n01 50 a0 e1\n03 80 00 e2\n14 40 8d e5\n18 c0 8d e5\n05 00 00 1a\n04 44 a0 e1\n03 30 a0 e3\n14 40 8d e5\n1d 90 cd e5\n1c 30 cd e5\n09 00 00 ea\n02 00 59 e3\n07 00 00 ca\n24 38 a0 e1\n1d 30 cd e5\nff 30 03 e2\n04 48 a0 e1\n02 20 a0 e3\n03 c1 8c e0\n14 40 8d e5\n1c 20 cd e5\n50 30 95 e5\n02 00 58 e3\n38 c0 95 05\n01 30 13 e2\nb0 00 00 1a\na0 01 a0 e1\n01 00 20 e2\n04 30 8d e5\n01 30 00 e2\n08 30 8d e5\n00 40 9c e5\n00 00 54 e3\naa 00 00 0a\n02 00 59 e3\n04 a0 9c 05\nb2 a0 dc 11\n48 30 95 e5\n01 b0 ca e3\n07 00 a0 e1\n0f 10 a0 e3\n08 60 8c 02\nb0 40 dc 11\n04 60 8c 12\n03 b0 8b e0\n6c ff ff eb\n00 00 5b e1\n00 c0 a0 83\n04 00 00 8a\n01 30 c4 e3\n03 b0 8b e0\n0b 00 50 e1\n00 c0 a0 23\n01 c0 a0 33\n01 a0 0a e2\n01 40 04 e2\n8a 40 84 e1\n01 00 54 e3\n17 00 00 0a\n02 00 00 3a\n02 00 54 e3\n48 00 00 0a\na8 00 00 ea\n00 00 58 e3\n00 c0 a0 03\n01 c0 0c 12\n00 00 5c e3\n04 a0 86 e2\n0b 00 00 0a\n06 00 a0 e1\nd4 fd ff eb\n38 a0 85 e5\n00 40 a0 e1\n05 00 a0 e1\nef 7f ff eb\n00 00 50 e3\n9a 00 00 0a\n07 00 a0 e1\n0f 10 a0 e3\n04 20 a0 e1\n93 00 00 ea\n0a c0 a0 e1\ncb ff ff ea\n00 00 58 e3\n1d 00 00 1a\n00 00 5c e3\n2d 00 00 0a\n04 30 96 e5\n00 a0 96 e5\n02 00 73 e3\naa af a0 e1\n8b 00 00 0a\n58 20 85 e2\n01 00 73 e3\n10 20 8d e5\n08 00 00 0a\n04 00 86 e2\n58 fe ff eb\n0a 20 a0 e1\n10 30 8d e2\n00 10 a0 e1\n05 00 a0 e1\nd6 7f ff eb\n00 40 50 e2\n1b 00 00 0a\n07 00 a0 e1\n0d 10 a0 e3\n2e ff ff eb\n02 00 54 e3\n10 20 9d e5\n05 30 a0 01\n02 30 a0 11\n20 00 85 e5\n2c 20 a3 05\n7b 00 00 ea\n07 00 a0 e1\n0d 10 a0 e3\n20 40 95 e5\n23 ff ff eb\n00 00 54 e1\n0b 00 00 1a\n28 30 95 e5\n03 00 56 e1\n08 00 00 1a\n06 00 a0 e1\n9d fd ff eb\n0f 10 a0 e3\n00 20 a0 e1\n07 00 a0 e1\n39 ff ff eb\n07 00 a0 e1\n00 10 a0 e3\n3b 00 00 ea\n08 c0 86 e2\n97 ff ff ea\n00 40 96 e5\n00 00 58 e3\n02 41 c4 e3\n19 00 00 1a\n00 00 5c e3\n37 00 00 0a\n08 30 9d e5\n00 00 54 e3\n01 30 83 03\n00 00 53 e3\n32 00 00 0a\n08 a0 a0 e1\n58 c0 85 e2\n10 b0 8d e2\n04 00 5a e1\n52 00 00 0a\n01 a0 8a e2\n0a 01 86 e0\n10 c0 8d e5\n0c c0 8d e5\n1e fe ff eb\n00 20 a0 e3\n0b 30 a0 e1\n00 10 a0 e1\n05 00 a0 e1\n9c 7f ff eb\n0c c0 9d e5\n00 00 50 e3\nf0 ff ff 0a\n1f 00 00 ea\n07 00 a0 e1\n0d 10 a0 e3\n20 a0 95 e5\nf1 fe ff eb\n00 00 5a e1\n19 00 00 1a\n28 30 95 e5\n03 00 56 e1\n16 00 00 1a\n04 30 a0 e3\n00 a0 a0 e3\n30 30 85 e5\n03 30 86 e0\n28 40 85 e5\n2c a0 85 e5\n34 30 85 e5\n00 30 96 e5\n0a 00 53 e1\n0a 00 00 aa\n01 00 84 e2\n00 01 86 e0\n60 fd ff eb\n0f 10 a0 e3\n00 20 a0 e1\n07 00 a0 e1\nfc fe ff eb\n07 00 a0 e1\n0a 10 a0 e1\n05 20 a0 e1\n21 00 00 ea\n01 30 a0 e3\n04 30 8d e5\n00 30 96 e5\n01 c0 84 e2\n00 00 53 e3\n04 60 86 b2\n0c c1 86 e0\n53 ff ff ea\n00 30 a0 e3\n04 30 8d e5\n02 00 59 e3\n01 00 00 da\nef fd ff eb\n02 00 00 ea\n07 00 a0 e1\n14 10 8d e2\n6c 7f ff eb\n00 00 50 e3\n11 00 00 1a\n04 30 9d e5\n00 00 53 e3\n08 00 a0 03\n17 00 00 0a\n0f 10 a0 e3\n07 00 a0 e1\nbd fe ff eb\n0e 10 a0 e3\n00 20 a0 e1\n07 00 a0 e1\nda fe ff eb\n44 20 9f e5\n07 00 a0 e1\n02 20 9f e7\n0f 10 a0 e3\nd5 fe ff eb\n07 00 a0 e3\n09 00 00 ea\n09 00 a0 e3\n07 00 00 ea\n07 00 a0 e1\n0d 10 a0 e3\nad fe ff eb\n10 30 9d e5\n20 00 85 e5\n06 00 a0 e3\n24 30 85 e5\n28 60 85 e5\n24 d0 8d e2\nf0 8f bd e8\n'
p705
S'.text:00036b34\n.text:00036b38\n.text:00036b3c\n.text:00036b40\n.text:00036b44\n.text:00036b48\n.text:00036b4c\n.text:00036b50\n.text:00036b54\n.text:00036b58\n.text:00036b5c\n.text:00036b60\n.text:00036b64\n.text:00036b68\n.text:00036b6c\n.text:00036b70\n.text:00036b74\n.text:00036b78\n.text:00036b7c\n.text:00036b80\n.text:00036b84\n.text:00036b88\n.text:00036b8c\n.text:00036b90\n.text:00036b94\n.text:00036b98\n.text:00036b9c\n.text:00036ba0\n.text:00036ba4\n.text:00036ba8\n.text:00036bac\n.text:00036bb0\n.text:00036bb4\n.text:00036bb8\n.text:00036bbc\n.text:00036bc0\n.text:00036bc4\n.text:00036bc8\n.text:00036bcc\n.text:00036bd0\n.text:00036bd4\n.text:00036bd8\n.text:00036bdc\n.text:00036be0\n.text:00036be4\n.text:00036be8\n.text:00036bec\n.text:00036bf0\n.text:00036bf4\n.text:00036bf8\n.text:00036bfc\n.text:00036c00\n.text:00036c04\n.text:00036c08\n.text:00036c0c\n.text:00036c10\n.text:00036c14\n.text:00036c18\n.text:00036c1c\n.text:00036c20\n.text:00036c24\n.text:00036c28\n.text:00036c2c\n.text:00036c30\n.text:00036c34\n.text:00036c38\n.text:00036c3c\n.text:00036c40\n.text:00036c44\n.text:00036c48\n.text:00036c4c\n.text:00036c50\n.text:00036c54\n.text:00036c58\n.text:00036c5c\n.text:00036c60\n.text:00036c64\n.text:00036c68\n.text:00036c6c\n.text:00036c70\n.text:00036c74\n.text:00036c78\n.text:00036c7c\n.text:00036c80\n.text:00036c84\n.text:00036c88\n.text:00036c8c\n.text:00036c90\n.text:00036c94\n.text:00036c98\n.text:00036c9c\n.text:00036ca0\n.text:00036ca4\n.text:00036ca8\n.text:00036cac\n.text:00036cb0\n.text:00036cb4\n.text:00036cb8\n.text:00036cbc\n.text:00036cc0\n.text:00036cc4\n.text:00036cc8\n.text:00036ccc\n.text:00036cd0\n.text:00036cd4\n.text:00036cd8\n.text:00036cdc\n.text:00036ce0\n.text:00036ce4\n.text:00036ce8\n.text:00036cec\n.text:00036cf0\n.text:00036cf4\n.text:00036cf8\n.text:00036cfc\n.text:00036d00\n.text:00036d04\n.text:00036d08\n.text:00036d0c\n.text:00036d10\n.text:00036d14\n.text:00036d18\n.text:00036d1c\n.text:00036d20\n.text:00036d24\n.text:00036d28\n.text:00036d2c\n.text:00036d30\n.text:00036d34\n.text:00036d38\n.text:00036d3c\n.text:00036d40\n.text:00036d44\n.text:00036d48\n.text:00036d4c\n.text:00036d50\n.text:00036d54\n.text:00036d58\n.text:00036d5c\n.text:00036d60\n.text:00036d64\n.text:00036d68\n.text:00036d6c\n.text:00036d70\n.text:00036d74\n.text:00036d78\n.text:00036d7c\n.text:00036d80\n.text:00036d84\n.text:00036d88\n.text:00036d8c\n.text:00036d90\n.text:00036d94\n.text:00036d98\n.text:00036d9c\n.text:00036da0\n.text:00036da4\n.text:00036da8\n.text:00036dac\n.text:00036db0\n.text:00036db4\n.text:00036db8\n.text:00036dbc\n.text:00036dc0\n.text:00036dc4\n.text:00036dc8\n.text:00036dcc\n.text:00036dd0\n.text:00036dd4\n.text:00036dd8\n.text:00036ddc\n.text:00036de0\n.text:00036de4\n.text:00036de8\n.text:00036dec\n.text:00036df0\n.text:00036df4\n.text:00036df8\n.text:00036dfc\n.text:00036e00\n.text:00036e04\n.text:00036e08\n.text:00036e0c\n.text:00036e10\n.text:00036e14\n.text:00036e18\n.text:00036e1c\n.text:00036e20\n.text:00036e24\n.text:00036e28\n.text:00036e2c\n.text:00036e30\n.text:00036e34\n.text:00036e38\n.text:00036e3c\n.text:00036e40\n.text:00036e44\n.text:00036e48\n.text:00036e4c\n.text:00036e50\n.text:00036e54\n.text:00036e58\n.text:00036e5c\n.text:00036e60\n.text:00036e64\n.text:00036e68\n.text:00036e6c\n.text:00036e70\n.text:00036e74\n.text:00036e78\n.text:00036e7c\n.text:00036e80\n.text:00036e84\n.text:00036e88\n.text:00036e8c\n.text:00036e90\n.text:00036e94\n.text:00036e98\n.text:00036e9c\n.text:00036ea0\n.text:00036ea4\n.text:00036ea8\n.text:00036eac\n.text:00036eb0\n.text:00036eb4\n.text:00036eb8\n.text:00036ebc\n.text:00036ec0\n.text:00036ec4\n.text:00036ec8\n.text:00036ecc\n.text:00036ed0\n.text:00036ed4\n.text:00036ed8\n.text:00036edc\n.text:00036ee0\n.text:00036ee4\n.text:00036ee8\n.text:00036eec\n.text:00036ef0\n.text:00036ef4\n.text:00036ef8\n.text:00036efc\n.text:00036f00\n.text:00036f04\n.text:00036f08\n.text:00036f0c\n.text:00036f10\n.text:00036f14\n.text:00036f18\n.text:00036f1c\n'
p706
tp707
sS'_Unwind_GetGR.constprop.0'
p708
(S'\n__stdcall _Unwind_GetGR.constprop.0()\n'
p709
V\u000aundefined4\u000a_Unwind_GetGR_constprop_0(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 local_c;\u000a  \u000a  local_c = uParm4;\u000a  _Unwind_VRS_Get(uParm1,0,0xc,0,&local_c,uParm2,uParm3);\u000a  return local_c;\u000a}\u000a\u000a
p710
S'stmdb sp!,{ r0 r1 r2 r3 r4 lr }\nmov r1,#0x0\nadd r3,sp,#0xc\nstr r3,[sp,#0x0]\nmov r2,#0xc\ncpy r3,r1\nbl 0x00016c24\nldr r0,[sp,#0xc]\nadd sp,sp,#0x14\nldr pc,[sp],#0x4\n'
p711
S'1f 40 2d e9\n00 10 a0 e3\n0c 30 8d e2\n00 30 8d e5\n0c 20 a0 e3\n01 30 a0 e1\nd5 7d ff eb\n0c 00 9d e5\n14 d0 8d e2\n04 f0 9d e4\n'
p712
S'.text:000374b0\n.text:000374b4\n.text:000374b8\n.text:000374bc\n.text:000374c0\n.text:000374c4\n.text:000374c8\n.text:000374cc\n.text:000374d0\n.text:000374d4\n'
p713
tp714
sS'lame_init'
p715
(S'\n__stdcall lame_init()\n'
p716
V\u000avoid lame_init(void)\u000a\u000a{\u000a  (*(lame_set_in_samplerate + DAT_0003791c))();\u000a  return;\u000a}\u000a\u000a
p717
S'ldr r12,[0x3791c]\nadd pc,r12,pc\n'
p718
S'00 c0 9f e5\n0f f0 8c e0\n'
p719
S'.text:00037914\n.text:00037918\n'
p720
tp721
sS'lame_get_original'
p722
(S'\n__stdcall lame_get_original(lame_global_flags * gfp)\n'
p723
V\u000aint lame_get_original(lame_global_flags *gfp)\u000a\u000a{\u000a  int in_r1;\u000a  int in_r3;\u000a  undefined *unaff_r5;\u000a  int iVar1;\u000a  int in_stack_00000018;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  int in_stack_00000030;\u000a  \u000a  while( true ) {\u000a    unaff_r5 = unaff_r5 + 1;\u000a    in_r1 = in_r1 + -1;\u000a    if (in_r1 == 0) break;\u000a    *(undefined *)&gfp->class_id = *unaff_r5;\u000a    gfp = (lame_global_flags *)((int)&gfp->class_id + 1);\u000a  }\u000a  iVar1 = in_stack_00000030 + in_r3 + 3;\u000a  __aeabi_memclr(iVar1,(in_stack_0000002c + in_stack_00000018) - iVar1);\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return in_stack_0000002c;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p724
S'add r5,#0x1\nsub r1,#0x1\ncmp r1,#0x0\nbne 0x0001e448\nldr r0,[sp,#0x30]\nadd r0,r0,r3\nadd r6,r0,#0x3\nldr r4,[sp,#0x2c]\nldr r0,[sp,#0x18]\nadd r1,r4,r0\nsub r1,r1,r6\npush { r6 }\npop { r0 }\n'
p725
S'01 35\n01 39\n00 29\nf8 d1\n0c 98\nc0 18\nc6 1c\n0b 9c\n06 98\n21 18\n89 1b\n40 b4\n01 bc\n'
p726
S'.text:0001e44e\n.text:0001e450\n.text:0001e452\n.text:0001e454\n.text:0001e456\n.text:0001e458\n.text:0001e45a\n.text:0001e45c\n.text:0001e45e\n.text:0001e460\n.text:0001e462\n.text:0001e464\n.text:0001e466\n'
p727
tp728
sS'ftell'
p729
(S'\n__stdcall ftell(FILE * __stream)\n'
p730
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000along ftell(FILE *__stream)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = (*(fread + DAT_000384ec))();\u000a  return lVar1;\u000a}\u000a\u000a
p731
S'ldr r12,[0x384ec]\nadd pc,r12,pc\n'
p732
S'00 c0 9f e5\n0f f0 8c e0\n'
p733
S'.text:000384e4\n.text:000384e8\n'
p734
tp735
sS'lame_msgf'
p736
(S'\n__stdcall lame_msgf()\n'
p737
V\u000avoid lame_msgf(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037e80 + DAT_00037e7c))();\u000a  return;\u000a}\u000a\u000a
p738
S'ldr r12,[0x37e7c]\nadd pc,r12,pc\n'
p739
S'00 c0 9f e5\n0f f0 8c e0\n'
p740
S'.text:00037e74\n.text:00037e78\n'
p741
tp742
sS'calc_xmin'
p743
(S'\n__stdcall calc_xmin(lame_internal_flags * gfc, III_psy_ratio * ratio, gr_info * cod_info, FLOAT * pxmin)\n'
p744
V\u000aint calc_xmin(lame_internal_flags *gfc,III_psy_ratio *ratio,gr_info *cod_info,FLOAT *pxmin)\u000a\u000a{\u000a  uint uVar1;\u000a  undefined4 uVar2;\u000a  int *piVar3;\u000a  int *piVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int unaff_r5;\u000a  uint uVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  undefined8 uVar10;\u000a  undefined4 in_stack_00000000;\u000a  undefined4 in_stack_00000004;\u000a  int iStack00000008;\u000a  \u000a  if (gfc == (lame_internal_flags *)0x0) {\u000a    piVar3 = (int *)(unaff_r5 + DAT_0001c868);\u000a    piVar4 = (int *)(unaff_r5 + DAT_0001c844);\u000a    iVar5 = DAT_0001c848;\u000a    do {\u000a      *piVar3 = *piVar3 + *piVar4;\u000a      *piVar4 = 0;\u000a      piVar3 = piVar3 + 1;\u000a      piVar4 = piVar4 + 1;\u000a      iVar5 = iVar5 + -1;\u000a    } while (iVar5 != 0);\u000a    iStack00000008 = unaff_r5 + DAT_0001c86c;\u000a    iVar5 = unaff_r5 + DAT_0001c870;\u000a    iVar6 = unaff_r5 + DAT_0001c874;\u000a    iVar9 = -0x28;\u000a    do {\u000a      *(undefined4 *)(iVar6 + iVar9 + 0x28) = 0;\u000a      iVar8 = iVar5 + iVar9;\u000a      *(undefined4 *)(iVar8 + 0x28) = 0;\u000a      *(undefined4 *)(iVar8 + -0x2c) = 0;\u000a      *(undefined4 *)(iStack00000008 + iVar9 + 0x28) = 0;\u000a      *(undefined4 *)(unaff_r5 + iVar9 + 0x7c) = 0;\u000a      *(undefined4 *)(unaff_r5 + iVar9 + 0x28) = 0;\u000a      iVar9 = iVar9 + 4;\u000a    } while (iVar9 != 0);\u000a    __aeabi_memclr4(unaff_r5 + DAT_0001c878,0x14);\u000a    return (int)ratio;\u000a  }\u000a  uVar10 = __floatunsidf();\u000a  __muldf3((int)((ulonglong)uVar10 >> 0x20),(int)uVar10,DAT_0001c850,DAT_0001c854);\u000a  ceil((double)CONCAT44(in_stack_00000004,in_stack_00000000));\u000a  uVar1 = __fixunsdfsi();\u000a  piVar3 = (int *)(unaff_r5 + DAT_0001c858);\u000a  uVar7 = 0;\u000a  iVar5 = DAT_0001c85c;\u000a  do {\u000a    iVar6 = iVar5;\u000a    if (iVar6 == -1) break;\u000a    uVar7 = *piVar3 + uVar7;\u000a    piVar3 = piVar3 + -1;\u000a    iVar5 = iVar6 + -1;\u000a  } while (uVar7 < uVar1);\u000a  uVar2 = __floatunsisf(iVar6);\u000a                    /* WARNING: Subroutine does not return */\u000a  __divsf3(uVar2,DAT_0001c860);\u000a}\u000a\u000a
p745
S'cmp r0,#0x0\nbeq 0x0001c7d6\nbl 0x00037c10\nldr r2,[0x0001c850]\nldr r3,[0x0001c854]\nbl 0x00037ad0\nbl 0x00037c20\nbl 0x00037be0\nldr r1,[0x0001c858]\nadd r2,r5,r1\npush { r5 }\npop { r4 }\nmov r3,#0x0\nldr r6,[0x0001c85c]\npush { r3 }\npop { r5 }\npush { r6 }\npop { r1 }\nmvn r6,r3\ncmp r1,r6\nbeq 0x0001c7ba\nldr r6,[r2,#0x0]\nadd r5,r6,r5\nsub r2,#0x4\nsub r6,r1,#0x1\ncmp r5,r0\nbcc 0x0001c7a4\npush { r1 }\npop { r0 }\nbl 0x00037c30\nldr r1,[0x0001c860]\nbl 0x00037a90\nstr r1,[sp,#0x4]\nldr r0,[0x0001c868]\nadd r1,r5,r0\nldr r0,[0x0001c844]\nadd r2,r5,r0\nldr r3,[0x0001c848]\nldr r0,[r2,#0x0]\nldr r6,[r1,#0x0]\nadd r0,r6,r0\nstr r0,[r1,#0x0]\nmov r0,#0x0\nstr r0,[r2,#0x0]\nadd r1,#0x4\nadd r2,#0x4\nsub r3,#0x1\ncmp r3,#0x0\nbne 0x0001c7e2\nldr r1,[0x0001c86c]\nadd r1,r5,r1\nstr r1,[sp,#0x8]\nldr r2,[0x0001c870]\nadd r2,r5,r2\nldr r3,[0x0001c874]\nadd r3,r5,r3\nmov r6,#0x27\nmvn r6,r6\npush { r5 }\npop { r1 }\nadd r5,r3,r6\nstr r0,[r5,#0x28]\nadd r5,r2,r6\nstr r0,[r5,#0x28]\nmov r4,#0x2b\nmvn r4,r4\nstr r0,[r5,r4]\npush { r1 }\npop { r5 }\nldr r1,[sp,#0x8]\nadd r4,r1,r6\nstr r0,[r4,#0x28]\nadd r4,r5,r6\nstr r0,[r4,#0x7c]\nstr r0,[r4,#0x28]\nadd r6,#0x4\ncmp r6,#0x0\nbne 0x0001c80a\nldr r0,[0x0001c878]\nadd r0,r5,r0\nmov r1,#0x14\nbl 0x00037a40\nldr r0,[sp,#0x4]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p746
S'00 28\n2a d0\n1b f0 46 fa\n32 4a\n33 4b\n1b f0 a2 f9\n1b f0 48 fa\n1b f0 26 fa\n30 49\n6a 18\n20 b4\n10 bc\n00 23\n2f 4e\n08 b4\n20 bc\n40 b4\n02 bc\nde 43\nb1 42\n05 d0\n16 68\n75 19\n04 3a\n4e 1e\n85 42\nf4 d3\n02 b4\n01 bc\n1b f0 37 fa\n27 49\n1b f0 64 f9\n01 91\n23 48\n29 18\n19 48\n2a 18\n19 4b\n10 68\n0e 68\n30 18\n08 60\n00 20\n10 60\n04 31\n04 32\n01 3b\n00 2b\nf4 d1\n1c 49\n69 18\n02 91\n1c 4a\naa 18\n1c 4b\neb 18\n27 26\nf6 43\n20 b4\n02 bc\n9d 19\na8 62\n95 19\na8 62\n2b 24\ne4 43\n28 51\n02 b4\n20 bc\n02 99\n8c 19\na0 62\nac 19\ne0 67\na0 62\n04 36\n00 2e\neb d1\n11 48\n28 18\n14 21\n1b f0 02 f9\n01 98\n03 b0\nf0 bd\n'
p747
S'.text:0001c77c\n.text:0001c77e\n.text:0001c780\n.text:0001c784\n.text:0001c786\n.text:0001c788\n.text:0001c78c\n.text:0001c790\n.text:0001c794\n.text:0001c796\n.text:0001c798\n.text:0001c79a\n.text:0001c79c\n.text:0001c79e\n.text:0001c7a0\n.text:0001c7a2\n.text:0001c7a4\n.text:0001c7a6\n.text:0001c7a8\n.text:0001c7aa\n.text:0001c7ac\n.text:0001c7ae\n.text:0001c7b0\n.text:0001c7b2\n.text:0001c7b4\n.text:0001c7b6\n.text:0001c7b8\n.text:0001c7ba\n.text:0001c7bc\n.text:0001c7be\n.text:0001c7c2\n.text:0001c7c4\n.text:0001c7d6\n.text:0001c7d8\n.text:0001c7da\n.text:0001c7dc\n.text:0001c7de\n.text:0001c7e0\n.text:0001c7e2\n.text:0001c7e4\n.text:0001c7e6\n.text:0001c7e8\n.text:0001c7ea\n.text:0001c7ec\n.text:0001c7ee\n.text:0001c7f0\n.text:0001c7f2\n.text:0001c7f4\n.text:0001c7f6\n.text:0001c7f8\n.text:0001c7fa\n.text:0001c7fc\n.text:0001c7fe\n.text:0001c800\n.text:0001c802\n.text:0001c804\n.text:0001c806\n.text:0001c808\n.text:0001c80a\n.text:0001c80c\n.text:0001c80e\n.text:0001c810\n.text:0001c812\n.text:0001c814\n.text:0001c816\n.text:0001c818\n.text:0001c81a\n.text:0001c81c\n.text:0001c81e\n.text:0001c820\n.text:0001c822\n.text:0001c824\n.text:0001c826\n.text:0001c828\n.text:0001c82a\n.text:0001c82c\n.text:0001c82e\n.text:0001c830\n.text:0001c832\n.text:0001c834\n.text:0001c836\n.text:0001c838\n.text:0001c83c\n.text:0001c83e\n.text:0001c840\n'
p748
tp749
sS'lame_get_emphasis'
p750
(S'\n__stdcall lame_get_emphasis()\n'
p751
V\u000aundefined4 lame_get_emphasis(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0x74);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p752
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002f13e\nldr r0,[r4,#0x74]\npop { r4, r6, r7, pc }\n'
p753
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 7f f9\n01 b4\n02 bc\n00 20\n00 29\n00 d0\n60 6f\nd0 bd\n'
p754
S'.text:0002f126\n.text:0002f128\n.text:0002f12a\n.text:0002f12c\n.text:0002f12e\n.text:0002f132\n.text:0002f134\n.text:0002f136\n.text:0002f138\n.text:0002f13a\n.text:0002f13c\n.text:0002f13e\n'
p755
tp756
sS'AnalyzeSamples'
p757
(S'\n__stdcall AnalyzeSamples(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p758
V\u000avoid AnalyzeSamples(void)\u000a\u000a{\u000a  (*(lame_encode_mp3_frame + DAT_0003801c))();\u000a  return;\u000a}\u000a\u000a
p759
S'ldr r12,[0x3801c]\nadd pc,r12,pc\n'
p760
S'00 c0 9f e5\n0f f0 8c e0\n'
p761
S'.text:00038014\n.text:00038018\n'
p762
tp763
sS'lame_get_decode_only'
p764
(S'\n__stdcall lame_get_decode_only(lame_global_flags * gfp)\n'
p765
V\u000aint lame_get_decode_only(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  lame_global_flags *gfp_00;\u000a  int iVar3;\u000a  undefined *puVar4;\u000a  uint in_r2;\u000a  int iVar5;\u000a  uint uVar6;\u000a  uint in_r3;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int unaff_r4;\u000a  uint unaff_r5;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  uint unaff_r6;\u000a  undefined *puVar11;\u000a  uint uVar12;\u000a  bool in_ZR;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  int *in_stack_00000028;\u000a  uint in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    if (in_ZR != false) {\u000a      in_r2 = unaff_r5;\u000a    }\u000a    in_r3 = in_r3 | in_r2;\u000a    unaff_r4 = unaff_r4 + -1;\u000a    unaff_r6 = unaff_r6 << 8;\u000a    if (unaff_r4 == 0) {\u000a      if (in_r3 == 0) {\u000a        iVar5 = sizeOfWxxxNode(in_stack_00000028);\u000a      }\u000a      else {\u000a        iVar1 = in_stack_00000028[7];\u000a        iVar3 = in_stack_00000028[4];\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar5 = iVar3 * 2 + 0xd;\u000a          if (iVar3 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar1 = iVar1 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar3 + 0xc;\u000a          if (iVar3 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar5 = iVar5 + iVar1;\u000a      }\u000a      while( true ) {\u000a        in_stack_0000002c = iVar5 + in_stack_0000002c;\u000a        in_stack_00000028 = (int *)*in_stack_00000028;\u000a        if (in_stack_00000028 == (int *)0x0) {\u000a          if ((*in_stack_00000010 & 0x20) != 0) {\u000a            in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a          }\u000a          uVar2 = in_stack_0000002c;\u000a          if ((in_stack_00000014 < in_stack_0000002c) ||\u000a             (uVar2 = 0, in_stack_00000018 == (undefined *)0x0)) goto LAB_0001e470;\u000a          *in_stack_00000018 = 0x49;\u000a          in_stack_00000018[1] = 0x44;\u000a          in_stack_00000018[2] = 0x33;\u000a          in_stack_00000018[3] = 3;\u000a          in_stack_00000030 = 0;\u000a          in_stack_00000018[4] = 0;\u000a          in_stack_00000018[5] = 0;\u000a          uVar2 = in_stack_0000002c - 10;\u000a          in_stack_00000018[6] = (byte)(uVar2 >> 0x15) & 0x7f;\u000a          in_stack_00000018[7] = (byte)(uVar2 >> 0xe) & 0x7f;\u000a          in_stack_00000018[8] = (byte)(uVar2 >> 7) & 0x7f;\u000a          in_stack_00000018[9] = (byte)uVar2 & 0x7f;\u000a          puVar11 = in_stack_00000018 + 10;\u000a          puVar9 = (undefined4 *)*in_stack_00000008;\u000a          goto LAB_0001e09c;\u000a        }\u000a        gfp = (lame_global_flags *)in_stack_00000028[1];\u000a        unaff_r6 = 0xff;\u000a        in_stack_00000030 = 0;\u000a        if ((gfp != DAT_0001e1dc) && (in_r3 = 0, unaff_r4 = in_stack_00000024, gfp != DAT_0001e1e0))\u000a        break;\u000a        iVar5 = in_stack_00000028[4] * 2 + 0x10;\u000a        if (in_stack_00000028[5] != 1) {\u000a          iVar5 = in_stack_00000028[4] + 0xf;\u000a        }\u000a        iVar1 = in_stack_00000028[7];\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar1 = iVar1 << 1;\u000a        }\u000a        iVar5 = iVar5 + iVar1;\u000a      }\u000a    }\u000a    unaff_r5 = unaff_r6 & 0x57000000;\u000a    in_r2 = in_stack_00000030;\u000a    if (unaff_r5 != (unaff_r6 & (uint)gfp)) {\u000a      in_r2 = unaff_r6 & (uint)gfp;\u000a    }\u000a    in_ZR = unaff_r5 == 0;\u000a  } while( true );\u000aLAB_0001e09c:\u000a  if (puVar9 == (undefined4 *)0x0) {\u000a    if (__s != (char *)0x0) {\u000a      iVar5 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar2 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar11[iVar5 + -1] = (char)uVar2;\u000a          iVar5 = iVar5 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar5);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar11,in_stack_00000018 + (in_stack_0000002c - (int)puVar11));\u000a    uVar2 = in_stack_0000002c;\u000aLAB_0001e470:\u000a    if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a      return uVar2;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  uVar2 = puVar9[1];\u000a  uVar12 = 0xff;\u000a  iVar5 = 4;\u000a  if ((uVar2 == DAT_0001e494) || (uVar6 = in_stack_00000030, uVar2 == DAT_0001e498)) {\u000a    iVar5 = puVar9[4] * 2 + 0x10;\u000a    if (puVar9[5] != 1) {\u000a      iVar5 = puVar9[4] + 0xf;\u000a    }\u000a    iVar1 = 0;\u000a    if (puVar9[8] == 1) {\u000a      iVar1 = puVar9[8];\u000a    }\u000a    uVar12 = (puVar9[7] << iVar1) + iVar5;\u000a    iVar5 = 4;\u000a    if (10 < uVar12) {\u000a      do {\u000a        puVar11[iVar5 + -1] = (char)uVar2;\u000a        iVar5 = iVar5 + -1;\u000a        uVar2 = uVar2 >> 8;\u000a      } while (0 < iVar5);\u000a      uVar12 = uVar12 - 10;\u000a      iVar5 = 4;\u000a      do {\u000a        puVar11[iVar5 + 3] = (char)uVar12;\u000a        iVar5 = iVar5 + -1;\u000a        uVar12 = uVar12 >> 8;\u000a      } while (0 < iVar5);\u000a      puVar11[8] = 0;\u000a      puVar11[9] = 0;\u000a      *(bool *)(puVar11 + 10) = puVar9[8] == 1;\u000a      puVar11[0xb] = *(undefined *)(puVar9 + 2);\u000a      puVar11[0xc] = *(undefined *)((int)puVar9 + 9);\u000a      puVar11[0xd] = *(undefined *)((int)puVar9 + 10);\u000a      puVar11 = puVar11 + 0xe;\u000a      if (puVar9[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,puVar9[3],puVar9[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar5 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar5;\u000a      }\u000a      iVar5 = puVar9[4];\u000a      if (iVar5 != 0) {\u000a        puVar4 = (undefined *)puVar9[3];\u000a        iVar1 = iVar5;\u000a        puVar8 = puVar11;\u000a        do {\u000a          *puVar8 = *puVar4;\u000a          puVar8 = puVar8 + 1;\u000a          puVar4 = puVar4 + 1;\u000a          iVar1 = iVar1 + -1;\u000a        } while (iVar1 != 0);\u000a        puVar11 = puVar11 + iVar5;\u000a      }\u000a      *puVar11 = 0;\u000a      puVar11 = puVar11 + 1;\u000a      if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a        puVar11 = (undefined *)writeUcs2s(puVar11,puVar9[6],puVar9[7]);\u000a      }\u000a      else {\u000a        iVar5 = puVar9[7];\u000a        if (iVar5 != 0) {\u000a          puVar4 = (undefined *)puVar9[6];\u000a          iVar1 = iVar5;\u000a          puVar8 = puVar11;\u000a          do {\u000a            *puVar8 = *puVar4;\u000a            puVar8 = puVar8 + 1;\u000a            puVar4 = puVar4 + 1;\u000a            iVar1 = iVar1 + -1;\u000a          } while (iVar1 != 0);\u000aLAB_0001e36a:\u000a          puVar11 = puVar11 + iVar5;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    do {\u000a      uVar7 = uVar12 & 0x57000000;\u000a      uVar10 = in_stack_00000030;\u000a      if (uVar7 != (uVar12 & uVar2)) {\u000a        uVar10 = uVar12 & uVar2;\u000a      }\u000a      if (uVar7 == 0) {\u000a        uVar10 = uVar7;\u000a      }\u000a      uVar6 = uVar6 | uVar10;\u000a      iVar5 = iVar5 + -1;\u000a      uVar12 = uVar12 << 8;\u000a    } while (iVar5 != 0);\u000a    if (uVar6 == 0) {\u000a      uVar12 = sizeOfWxxxNode(puVar9);\u000a      iVar5 = 4;\u000a      if (10 < uVar12) {\u000a        do {\u000a          puVar11[iVar5 + -1] = (char)uVar2;\u000a          iVar5 = iVar5 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar5);\u000a        uVar12 = uVar12 - 10;\u000a        iVar5 = 4;\u000a        do {\u000a          puVar11[iVar5 + 3] = (char)uVar12;\u000a          iVar5 = iVar5 + -1;\u000a          uVar12 = uVar12 >> 8;\u000a        } while (0 < iVar5);\u000a        puVar11[8] = 0;\u000a        puVar11[9] = 0;\u000a        puVar8 = puVar11 + 10;\u000a        if (puVar9[4] != 0) {\u000a          *(bool *)(puVar11 + 10) = puVar9[5] == 1;\u000a          puVar11 = puVar11 + 0xb;\u000a          if (puVar9[5] == 1) {\u000a            puVar8 = (undefined *)writeUcs2s(puVar11,puVar9[3],puVar9[4]);\u000a            *puVar8 = 0;\u000a            puVar8[1] = 0;\u000a            puVar8 = puVar8 + 2;\u000a          }\u000a          else {\u000a            iVar5 = puVar9[4];\u000a            if (iVar5 != 0) {\u000a              puVar4 = (undefined *)puVar9[3];\u000a              iVar1 = iVar5;\u000a              puVar8 = puVar11;\u000a              do {\u000a                *puVar8 = *puVar4;\u000a                puVar8 = puVar8 + 1;\u000a                puVar4 = puVar4 + 1;\u000a                iVar1 = iVar1 + -1;\u000a              } while (iVar1 != 0);\u000a              puVar11 = puVar11 + iVar5;\u000a            }\u000a            *puVar11 = 0;\u000a            puVar8 = puVar11 + 1;\u000a          }\u000a        }\u000a        if (puVar9[8] == 1) {\u000a          puVar11 = (undefined *)writeLoBytes(puVar8,puVar9[6],puVar9[7]);\u000a        }\u000a        else {\u000a          iVar5 = puVar9[7];\u000a          puVar11 = puVar8;\u000a          if (iVar5 != 0) {\u000a            puVar4 = (undefined *)puVar9[6];\u000a            iVar1 = iVar5;\u000a            puVar11 = puVar8;\u000a            do {\u000a              *puVar11 = *puVar4;\u000a              puVar11 = puVar11 + 1;\u000a              puVar4 = puVar4 + 1;\u000a              iVar1 = iVar1 + -1;\u000a            } while (iVar1 != 0);\u000a            puVar11 = puVar8 + iVar5;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      iVar5 = puVar9[7];\u000a      iVar1 = puVar9[4];\u000a      if (puVar9[8] == 1) {\u000a        iVar3 = iVar1 * 2 + 0xd;\u000a        if (iVar1 == 0) {\u000a          iVar3 = 0xb;\u000a        }\u000a        iVar5 = iVar5 << 1;\u000a      }\u000a      else {\u000a        iVar3 = iVar1 + 0xc;\u000a        if (iVar1 == 0) {\u000a          iVar3 = 0xb;\u000a        }\u000a      }\u000a      iVar1 = 4;\u000a      if (10 < (uint)(iVar3 + iVar5)) {\u000a        do {\u000a          puVar11[iVar1 + -1] = (char)uVar2;\u000a          iVar1 = iVar1 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar1);\u000a        uVar2 = (iVar3 + iVar5) - 10;\u000a        iVar5 = 4;\u000a        do {\u000a          puVar11[iVar5 + 3] = (char)uVar2;\u000a          iVar5 = iVar5 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar5);\u000a        puVar11[8] = 0;\u000a        puVar11[9] = 0;\u000a        *(bool *)(puVar11 + 10) = puVar9[8] == 1;\u000a        puVar11 = puVar11 + 0xb;\u000a        iVar5 = puVar9[4];\u000a        if (iVar5 != 0) {\u000a          if (puVar9[5] == 1) {\u000a            puVar11 = (undefined *)writeUcs2s(puVar11,puVar9[3]);\u000a            *puVar11 = 0;\u000a            puVar11[1] = 0;\u000a            puVar11 = puVar11 + 2;\u000a          }\u000a          else {\u000a            puVar4 = (undefined *)puVar9[3];\u000a            iVar1 = iVar5;\u000a            puVar8 = puVar11;\u000a            do {\u000a              *puVar8 = *puVar4;\u000a              puVar8 = puVar8 + 1;\u000a              puVar4 = puVar4 + 1;\u000a              iVar1 = iVar1 + -1;\u000a            } while (iVar1 != 0);\u000a            puVar11[iVar5] = 0;\u000a            puVar11 = puVar11 + iVar5 + 1;\u000a          }\u000a        }\u000a        if (puVar9[8] == 1) goto LAB_0001e338;\u000a        iVar5 = puVar9[7];\u000a        if (iVar5 != 0) {\u000a          puVar4 = (undefined *)puVar9[6];\u000a          iVar1 = iVar5;\u000a          puVar8 = puVar11;\u000a          do {\u000a            *puVar8 = *puVar4;\u000a            puVar8 = puVar8 + 1;\u000a            puVar4 = puVar4 + 1;\u000a            iVar1 = iVar1 + -1;\u000a          } while (iVar1 != 0);\u000a          goto LAB_0001e36a;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  puVar9 = (undefined4 *)*puVar9;\u000a  goto LAB_0001e09c;\u000a}\u000a\u000a
p766
S'bne 0x0001dfe0\npush { r5 }\npop { r2 }\norr r3,r2\nsub r4,#0x1\nlsl r6,r6,#0x8\ncmp r4,#0x0\nbne 0x0001dfc2\ncmp r3,#0x0\nldr r5,[sp,#0x2c]\nbeq 0x0001e00e\nldr r4,[sp,#0x28]\nldr r0,[r4,#0x1c]\n'
p767
S'01 d1\n20 b4\n04 bc\n13 43\n01 3c\n36 02\n00 2c\neb d1\n00 2b\n0b 9d\n0e d0\n0a 9c\ne0 69\n'
p768
S'.text:0001dfda\n.text:0001dfdc\n.text:0001dfde\n.text:0001dfe0\n.text:0001dfe2\n.text:0001dfe4\n.text:0001dfe6\n.text:0001dfe8\n.text:0001dfea\n.text:0001dfec\n.text:0001dfee\n.text:0001dff0\n.text:0001dff2\n'
p769
tp770
sS'lame_set_athaa_sensitivity'
p771
(S'\n__stdcall lame_set_athaa_sensitivity()\n'
p772
V\u000avoid lame_set_athaa_sensitivity(void)\u000a\u000a{\u000a  (*(fft_long + DAT_0003825c))();\u000a  return;\u000a}\u000a\u000a
p773
S'ldr r12,[0x3825c]\nadd pc,r12,pc\n'
p774
S'00 c0 9f e5\n0f f0 8c e0\n'
p775
S'.text:00038254\n.text:00038258\n'
p776
tp777
sS'init_numline'
p778
(S'\n__stdcall init_numline()\n'
p779
V\u000avoid init_numline(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uStack24;\u000a  \u000a  iVar2 = DAT_00028334;\u000a  puVar1 = (undefined4 *)(&stack0x00000030 + DAT_00028334);\u000a  *(undefined4 **)(&stack0xfffffff0 + DAT_00028334) = puVar1;\u000a  *(undefined4 *)((int)&uStack24 + iVar2) = uParm4;\u000a  uVar3 = *(undefined4 *)((int)&uStack24 + iVar2);\u000a  *(undefined4 *)(&stack0x0000002c + iVar2) = uParm3;\u000a  *(undefined4 *)((int)&uStack24 + iVar2) = uParm2;\u000a  *(undefined4 *)(&stack0x00000028 + iVar2) = *(undefined4 *)((int)&uStack24 + iVar2);\u000a  *(undefined4 *)(&stack0x00000004 + iVar2) = uParm1;\u000a  *puVar1 = **(undefined4 **)(DAT_00028308 + 0x27f74);\u000a  __aeabi_memclr4(&stack0x00000034 + iVar2,DAT_0002830c);\u000a  *(undefined4 *)((int)&uStack24 + iVar2) = uVar3;\u000a  uVar3 = __floatsisf(*(undefined4 *)((int)&uStack24 + iVar2));\u000a  *(undefined4 *)((int)&uStack24 + iVar2) = uVar3;\u000a                    /* WARNING: Subroutine does not return */\u000a  __addsf3(uVar3,*(undefined4 *)((int)&uStack24 + iVar2));\u000a}\u000a\u000a
p780
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nldr r4,[0x00028334]\nadd sp,r4\nadd r5,sp,#0x44\nstr r5,[sp,#0x4]\npush { r3 }\npop { r6 }\nstr r2,[sp,#0x40]\npush { r1 }\npop { r4 }\nstr r4,[sp,#0x3c]\nstr r0,[sp,#0x18]\nldr r0,[0x00028308]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r5,#0x0]\nadd r0,sp,#0x48\nldr r1,[0x0002830c]\nbl 0x00037a40\npush { r6 }\npop { r0 }\nbl 0x00037b30\npush { r0 }\npop { r1 }\nbl 0x00037a70\n'
p781
S'f0 b5\n03 af\nf6 4c\na5 44\n11 ad\n01 95\n08 b4\n40 bc\n10 92\n02 b4\n10 bc\n0f 94\n06 90\ne6 48\n78 44\n00 68\n00 68\n28 60\n12 a8\ne4 49\n0f f0 60 fd\n40 b4\n01 bc\n0f f0 d4 fd\n01 b4\n02 bc\n0f f0 70 fd\n'
p782
S'.text:00027f54\n.text:00027f56\n.text:00027f58\n.text:00027f5a\n.text:00027f5c\n.text:00027f5e\n.text:00027f60\n.text:00027f62\n.text:00027f64\n.text:00027f66\n.text:00027f68\n.text:00027f6a\n.text:00027f6c\n.text:00027f6e\n.text:00027f70\n.text:00027f72\n.text:00027f74\n.text:00027f76\n.text:00027f78\n.text:00027f7a\n.text:00027f7c\n.text:00027f80\n.text:00027f82\n.text:00027f84\n.text:00027f88\n.text:00027f8a\n.text:00027f8c\n'
p783
tp784
sS'lame_set_error_protection'
p785
(S'\n__stdcall lame_set_error_protection(lame_global_flags * gfp, int error_protection)\n'
p786
V\u000aint lame_set_error_protection(lame_global_flags *gfp,int error_protection)\u000a\u000a{\u000a  int unaff_r4;\u000a  int *in_stack_00000020;\u000a  \u000a  __aeabi_memclr();\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return unaff_r4;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p787
S'bl 0x00037d50\npush { r4 }\npop { r0 }\n'
p788
S'19 f0 72 fc\n10 b4\n01 bc\n'
p789
S'.text:0001e468\n.text:0001e46c\n.text:0001e46e\n'
p790
tp791
sS'lame_get_force_short_blocks'
p792
(S'\n__stdcall lame_get_force_short_blocks()\n'
p793
V\u000aundefined4 lame_get_force_short_blocks(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  if ((iVar1 != 0) && (*(uint *)(iParm1 + 0xf0) < 4)) {\u000a    return *(undefined4 *)(DAT_0002f020 + 0x2f018 + *(uint *)(iParm1 + 0xf0) * 4);\u000a  }\u000a  return 0xffffffff;\u000a}\u000a\u000a
p794
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f01a\nmov r0,#0xf0\nldr r0,[r4,r0]\ncmp r0,#0x3\nbhi 0x0002f01a\nlsl r0,r0,#0x2\nldr r1,[0x0002f020]\nadd r1,pc\nldr r0,[r1,r0]\npop { r4, r6, r7, pc }\nmov r0,#0x0\nmvn r0,r0\npop { r4, r6, r7, pc }\n'
p795
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 16 fa\n00 28\n08 d0\nf0 20\n20 58\n03 28\n04 d8\n80 00\n03 49\n79 44\n08 58\nd0 bd\n00 20\nc0 43\nd0 bd\n'
p796
S'.text:0002eff8\n.text:0002effa\n.text:0002effc\n.text:0002effe\n.text:0002f000\n.text:0002f004\n.text:0002f006\n.text:0002f008\n.text:0002f00a\n.text:0002f00c\n.text:0002f00e\n.text:0002f010\n.text:0002f012\n.text:0002f014\n.text:0002f016\n.text:0002f018\n.text:0002f01a\n.text:0002f01c\n.text:0002f01e\n'
p797
tp798
sS'lame_get_ATHshort'
p799
(S'\n__stdcall lame_get_ATHshort()\n'
p800
V\u000aundefined4 lame_get_ATHshort(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xd4);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p801
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ebce\nmov r0,#0xd4\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p802
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 38 fc\n01 b4\n02 bc\n00 20\n00 29\n01 d0\nd4 20\n20 58\nd0 bd\n'
p803
S'.text:0002ebb4\n.text:0002ebb6\n.text:0002ebb8\n.text:0002ebba\n.text:0002ebbc\n.text:0002ebc0\n.text:0002ebc2\n.text:0002ebc4\n.text:0002ebc6\n.text:0002ebc8\n.text:0002ebca\n.text:0002ebcc\n.text:0002ebce\n'
p804
tp805
sS'lame_set_athaa_type'
p806
(S'\n__stdcall lame_set_athaa_type()\n'
p807
V\u000aundefined4 lame_set_athaa_type(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0xe8) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p808
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002ecfc\nmov r0,#0xe8\nstr r4,[r5,r0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p809
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 a4 fb\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n03 d0\ne8 20\n2c 50\n04 b4\n01 bc\nb0 bd\n'
p810
S'.text:0002ecd8\n.text:0002ecda\n.text:0002ecdc\n.text:0002ecde\n.text:0002ece0\n.text:0002ece2\n.text:0002ece4\n.text:0002ece8\n.text:0002ecea\n.text:0002ecec\n.text:0002ecee\n.text:0002ecf0\n.text:0002ecf2\n.text:0002ecf4\n.text:0002ecf6\n.text:0002ecf8\n.text:0002ecfa\n.text:0002ecfc\n'
p811
tp812
sS'FUN_000255c2'
p813
(S'\n__stdcall FUN_000255c2(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23, undefined4 param_24, undefined4 param_25, undefined4 param_26, undefined4 param_27, undefined4 param_28)\n'
p814
V\u000avoid FUN_000255c2(undefined4 param_1,undefined4 param_2,uint param_3,uint param_4,undefined param_5)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 param_11;\u000a  undefined4 *param_12;\u000a  undefined4 param_13;\u000a  int param_14;\u000a  int param_15;\u000a  int param_16;\u000a  int *param_17;\u000a  uint param_18;\u000a  undefined4 param_19;\u000a  uint param_20;\u000a  uint param_21;\u000a  undefined4 param_22;\u000a  undefined4 *param_23;\u000a  int param_24;\u000a  undefined4 param_25;\u000a  undefined4 *param_26;\u000a  undefined4 param_27;\u000a  undefined4 param_28;\u000a  \u000a  param_22 = 1;\u000a  param_21 = param_3 & 1;\u000a  param_23 = (undefined4 *)(&param_5 + param_21 * 0x1000 + DAT_00025650);\u000a  iVar1 = (param_4 & 1) * 0x1000;\u000a  param_26 = (undefined4 *)(param_16 + iVar1);\u000a  param_24 = param_14 + iVar1;\u000a  param_25 = param_13;\u000a  if (*param_17 != 0) {\u000a    param_25 = *param_12;\u000a  }\u000a  if ((int)param_3 < 2) {\u000a    param_18 = param_4;\u000a    param_20 = param_3;\u000a    fft_long(param_19,param_23,param_3,param_11);\u000a  }\u000a  else {\u000a    param_18 = param_4;\u000a    param_20 = param_3;\u000a    if (param_3 == 2) {\u000a      param_28 = *param_26;\u000a      param_27 = *(undefined4 *)(param_15 + iVar1);\u000a      param_18 = param_4;\u000a      param_20 = param_3;\u000a                    /* WARNING: Subroutine does not return */\u000a      __addsf3();\u000a    }\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(*param_23,*param_23);\u000a}\u000a\u000a
p815
S'mov r4,#0x1\nstr r4,[sp,#0xfc]\npush { r2 }\npop { r5 }\nand r5,r4\nlsl r0,r5,#0xc\nldr r1,[0x00025650]\nadd r1,sp\nadd r6,r1,r0\npush { r3 }\npop { r0 }\nand r0,r4\nlsl r0,r0,#0xc\nldr r1,[sp,#0xa0]\nadd r4,r1,r0\nldr r1,[sp,#0xa4]\nadd r1,r1,r0\nstr r1,[sp,#0x118]\nldr r1,[sp,#0x98]\nadd r1,r1,r0\nldr r0,[sp,#0xa8]\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nldr r0,[sp,#0x88]\nbeq 0x000255f8\nldr r0,[sp,#0x84]\nldr r0,[r0,#0x0]\ncmp r2,#0x1\nbgt 0x00025670\nstr r1,[sp,#0x110]\nstr r0,[sp,#0x114]\nstr r5,[sp,#0xf8]\nstr r3,[sp,#0xb4]\nldr r0,[sp,#0xd0]\npush { r6 }\npop { r1 }\nstr r6,[sp,#0x10c]\nstr r2,[sp,#0xe8]\nldr r3,[sp,#0x70]\nbl 0x00038260\nb 0x000256b6\nstr r6,[sp,#0x10c]\nstr r1,[sp,#0x110]\nstr r0,[sp,#0x114]\nstr r5,[sp,#0xf8]\nstr r3,[sp,#0xb4]\nldr r0,[sp,#0xfc]\nlsl r6,r0,#0xa\ncmp r2,#0x2\nstr r2,[sp,#0xe8]\nldr r5,[sp,#0x118]\nbne 0x000256b6\nldr r0,[r5,#0x0]\nstr r0,[sp,#0x124]\nldr r1,[r4,#0x0]\nstr r1,[sp,#0x120]\nbl 0x00037a70\nldr r0,[sp,#0x10c]\nldr r0,[r0,#0x0]\npush { r0 }\npop { r1 }\nbl 0x00037aa0\n'
p816
S'01 24\n3f 94\n04 b4\n20 bc\n25 40\n28 03\n20 49\n69 44\n0e 18\n08 b4\n01 bc\n20 40\n00 03\n28 99\n0c 18\n29 99\n09 18\n46 91\n26 99\n09 18\n2a 98\n00 68\n00 28\n22 98\n01 d0\n21 98\n00 68\n01 2a\n39 dc\n44 91\n45 90\n3e 95\n2d 93\n34 98\n40 b4\n02 bc\n43 96\n3a 92\n1c 9b\n12 f0 26 fe\n4f e0\n43 96\n44 91\n45 90\n3e 95\n2d 93\n3f 98\n86 02\n02 2a\n3a 92\n46 9d\n17 d1\n28 68\n49 90\n21 68\n48 91\n12 f0 ef f9\n43 98\n00 68\n01 b4\n02 bc\n12 f0 ef f9\n'
p817
S'.text:000255c2\n.text:000255c4\n.text:000255c6\n.text:000255c8\n.text:000255ca\n.text:000255cc\n.text:000255ce\n.text:000255d0\n.text:000255d2\n.text:000255d4\n.text:000255d6\n.text:000255d8\n.text:000255da\n.text:000255dc\n.text:000255de\n.text:000255e0\n.text:000255e2\n.text:000255e4\n.text:000255e6\n.text:000255e8\n.text:000255ea\n.text:000255ec\n.text:000255ee\n.text:000255f0\n.text:000255f2\n.text:000255f4\n.text:000255f6\n.text:000255f8\n.text:000255fa\n.text:000255fc\n.text:000255fe\n.text:00025600\n.text:00025602\n.text:00025604\n.text:00025606\n.text:00025608\n.text:0002560a\n.text:0002560c\n.text:0002560e\n.text:00025610\n.text:00025614\n.text:00025670\n.text:00025672\n.text:00025674\n.text:00025676\n.text:00025678\n.text:0002567a\n.text:0002567c\n.text:0002567e\n.text:00025680\n.text:00025682\n.text:00025684\n.text:00025686\n.text:00025688\n.text:0002568a\n.text:0002568c\n.text:0002568e\n.text:000256b6\n.text:000256b8\n.text:000256ba\n.text:000256bc\n.text:000256be\n'
p818
tp819
sS'lame_copy_inbuffer'
p820
(S'\n__stdcall lame_copy_inbuffer(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined4 param_7)\n'
p821
V\u000avoid lame_copy_inbuffer(int param_1)\u000a\u000a{\u000a  undefined4 param_7;\u000a  \u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(*(undefined4 *)(param_1 + 0x108),param_7);\u000a}\u000a\u000a
p822
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x34\nstr r3,[sp,#0x30]\nstr r2,[sp,#0x1c]\nstr r1,[sp,#0x28]\npush { r0 }\npop { r5 }\nldr r0,[0x00021fd4]\nldr r0,[r5,r0]\nstr r0,[sp,#0x2c]\nldr r0,[0x00021fd8]\nldr r0,[r5,r0]\nstr r0,[sp,#0x10]\nmov r0,#0x21\nlsl r0,r0,#0x3\nldr r0,[r5,r0]\nldr r6,[sp,#0x50]\npush { r6 }\npop { r1 }\nbl 0x00037aa0\n'
p823
S'f0 b5\n03 af\n8d b0\n0c 93\n07 92\n0a 91\n01 b4\n20 bc\nda 48\n28 58\n0b 90\nda 48\n28 58\n04 90\n21 20\nc0 00\n28 58\n14 9e\n40 b4\n02 bc\n15 f0 0e ff\n'
p824
S'.text:00021c58\n.text:00021c5a\n.text:00021c5c\n.text:00021c5e\n.text:00021c60\n.text:00021c62\n.text:00021c64\n.text:00021c66\n.text:00021c68\n.text:00021c6a\n.text:00021c6c\n.text:00021c6e\n.text:00021c70\n.text:00021c72\n.text:00021c74\n.text:00021c76\n.text:00021c78\n.text:00021c7a\n.text:00021c7c\n.text:00021c7e\n.text:00021c80\n'
p825
tp826
sS'_Unwind_Complete'
p827
(S'\n__stdcall _Unwind_Complete()\n'
p828
V\u000avoid _Unwind_Complete(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p829
S'bx lr\n'
p830
S'1e ff 2f e1\n'
p831
S'.text:00036944\n'
p832
tp833
sS'compute_flushbits'
p834
(S'\n__stdcall compute_flushbits()\n'
p835
V\u000avoid compute_flushbits(void)\u000a\u000a{\u000a  (*(__stack_chk_fail + DAT_000379ac))();\u000a  return;\u000a}\u000a\u000a
p836
S'ldr r12,[0x379ac]\nadd pc,r12,pc\n'
p837
S'00 c0 9f e5\n0f f0 8c e0\n'
p838
S'.text:000379a4\n.text:000379a8\n'
p839
tp840
sS'selfrel_offset31'
p841
(S'\n__stdcall selfrel_offset31()\n'
p842
V\u000aint selfrel_offset31(uint *puParm1)\u000a\u000a{\u000a  uint uVar1;\u000a  \u000a  uVar1 = *puParm1;\u000a  if ((uVar1 & 0x40000000) == 0) {\u000a    uVar1 = uVar1 & 0x7fffffff;\u000a  }\u000a  else {\u000a    uVar1 = uVar1 | 0x80000000;\u000a  }\u000a  return (int)puParm1 + uVar1;\u000a}\u000a\u000a
p843
S'ldr r3,[r0,#0x0]\ntst r3,#0x40000000\norrne r3,r3,#0x80000000\nbiceq r3,r3,#0x80000000\nadd r0,r0,r3\nbx lr\n'
p844
S'00 30 90 e5\n01 01 13 e3\n02 31 83 13\n02 31 c3 03\n03 00 80 e0\n1e ff 2f e1\n'
p845
S'.text:000363c0\n.text:000363c4\n.text:000363c8\n.text:000363cc\n.text:000363d0\n.text:000363d4\n'
p846
tp847
sS'lame_get_cwlimit'
p848
(S'\n__stdcall lame_get_cwlimit()\n'
p849
V\u000aundefined4 lame_get_cwlimit(void)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p850
S'mov r0,#0x0\nbx lr\n'
p851
S'00 20\n70 47\n'
p852
S'.text:0002ed68\n.text:0002ed6a\n'
p853
tp854
sS'Java_io_dcloud_feature_audio_mp3_SimpleLame_flush'
p855
(S'\n__stdcall Java_io_dcloud_feature_audio_mp3_SimpleLame_flush()\n'
p856
V\u000aundefined4\u000aJava_io_dcloud_feature_audio_mp3_SimpleLame_flush(int *piParm1,undefined4 uParm2,undefined4 uParm3)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  \u000a  uVar1 = (**(code **)(*piParm1 + 0x2e0))(piParm1,uParm3);\u000a  uVar2 = (**(code **)(*piParm1 + 0x2ac))(piParm1,uParm3);\u000a  uVar2 = lame_encode_flush(*(undefined4 *)(DAT_00016e7c + 0x16e56),uVar1,uVar2);\u000a  (**(code **)(*piParm1 + 0x300))(piParm1,uParm3,uVar1,0);\u000a  return uVar2;\u000a}\u000a\u000a
p857
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r2 }\npop { r4 }\npush { r0 }\npop { r5 }\nmov r0,#0x17\nlsl r0,r0,#0x5\nldr r1,[r5,#0x0]\nldr r3,[r1,r0]\nmov r2,#0x0\nstr r2,[sp,#0x8]\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nblx r3\npush { r0 }\npop { r6 }\nstr r6,[sp,#0x0]\nmov r0,#0xab\nlsl r0,r0,#0x2\nldr r1,[r5,#0x0]\nldr r2,[r1,r0]\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nblx r2\npush { r0 }\npop { r2 }\nldr r0,[0x00016e7c]\nadd r0,pc\nldr r0,[r0,#0x0]\npush { r6 }\npop { r1 }\nbl 0x00037900\nstr r0,[sp,#0x4]\nmov r0,#0x3\nlsl r0,r0,#0x8\nldr r1,[r5,#0x0]\nldr r6,[r1,r0]\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nldr r2,[sp,#0x0]\nldr r3,[sp,#0x8]\nblx r6\nldr r0,[sp,#0x4]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p858
S'f0 b5\n03 af\n83 b0\n04 b4\n10 bc\n01 b4\n20 bc\n17 20\n40 01\n29 68\n0b 58\n00 22\n02 92\n20 b4\n01 bc\n10 b4\n02 bc\n98 47\n01 b4\n40 bc\n00 96\nab 20\n80 00\n29 68\n0a 58\n20 b4\n01 bc\n10 b4\n02 bc\n90 47\n01 b4\n04 bc\n0a 48\n78 44\n00 68\n40 b4\n02 bc\n20 f0 51 fd\n01 90\n03 20\n00 02\n29 68\n0e 58\n20 b4\n01 bc\n10 b4\n02 bc\n00 9a\n02 9b\nb0 47\n01 98\n03 b0\nf0 bd\n'
p859
S'.text:00016e10\n.text:00016e12\n.text:00016e14\n.text:00016e16\n.text:00016e18\n.text:00016e1a\n.text:00016e1c\n.text:00016e1e\n.text:00016e20\n.text:00016e22\n.text:00016e24\n.text:00016e26\n.text:00016e28\n.text:00016e2a\n.text:00016e2c\n.text:00016e2e\n.text:00016e30\n.text:00016e32\n.text:00016e34\n.text:00016e36\n.text:00016e38\n.text:00016e3a\n.text:00016e3c\n.text:00016e3e\n.text:00016e40\n.text:00016e42\n.text:00016e44\n.text:00016e46\n.text:00016e48\n.text:00016e4a\n.text:00016e4c\n.text:00016e4e\n.text:00016e50\n.text:00016e52\n.text:00016e54\n.text:00016e56\n.text:00016e58\n.text:00016e5a\n.text:00016e5e\n.text:00016e60\n.text:00016e62\n.text:00016e64\n.text:00016e66\n.text:00016e68\n.text:00016e6a\n.text:00016e6c\n.text:00016e6e\n.text:00016e70\n.text:00016e72\n.text:00016e74\n.text:00016e76\n.text:00016e78\n.text:00016e7a\n'
p860
tp861
sS'__divsi3'
p862
(S'\n__stdcall __divsi3()\n'
p863
V\u000avoid __divsi3(void)\u000a\u000a{\u000a  (*(lame_errorf + DAT_0003798c))();\u000a  return;\u000a}\u000a\u000a
p864
S'ldr r12,[0x3798c]\nadd pc,r12,pc\n'
p865
S'00 c0 9f e5\n0f f0 8c e0\n'
p866
S'.text:00037984\n.text:00037988\n'
p867
tp868
sS'lame_set_findReplayGain'
p869
(S'\n__stdcall lame_set_findReplayGain(lame_global_flags * gfp, int findReplayGain)\n'
p870
V\u000aint lame_set_findReplayGain(lame_global_flags *gfp,int findReplayGain)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  undefined *puVar4;\u000a  lame_global_flags *in_r2;\u000a  int iVar5;\u000a  lame_global_flags *in_r3;\u000a  undefined *puVar6;\u000a  uint unaff_r4;\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar7;\u000a  uint unaff_r6;\u000a  bool in_ZR;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  undefined *in_stack_00000024;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  lame_global_flags *in_stack_00000030;\u000a  \u000a  do {\u000a    gfp_00 = in_stack_00000030;\u000a    if (in_ZR == false) {\u000a      gfp_00 = gfp;\u000a    }\u000a    if (in_r3 == (lame_global_flags *)0x0) {\u000a      gfp_00 = in_r3;\u000a    }\u000a    in_r2 = (lame_global_flags *)((uint)in_r2 | (uint)gfp_00);\u000a    findReplayGain = findReplayGain + -1;\u000a    unaff_r6 = unaff_r6 << 8;\u000a    if (findReplayGain == 0) {\u000a      if (in_r2 == (lame_global_flags *)0x0) {\u000a        uVar1 = sizeOfWxxxNode(in_stack_00000028);\u000a        iVar2 = 4;\u000a        puVar7 = in_stack_00000024;\u000a        if (10 < uVar1) {\u000a          do {\u000a            in_stack_00000024[iVar2 + -1] = (char)unaff_r4;\u000a            iVar2 = iVar2 + -1;\u000a            unaff_r4 = unaff_r4 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar1 = uVar1 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            in_stack_00000024[iVar2 + 3] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          in_stack_00000024[8] = 0;\u000a          in_stack_00000024[9] = 0;\u000a          puVar7 = in_stack_00000024 + 10;\u000a          if (in_stack_00000028[4] != 0) {\u000a            *(bool *)(in_stack_00000024 + 10) = in_stack_00000028[5] == 1;\u000a            puVar7 = in_stack_00000024 + 0xb;\u000a            if (in_stack_00000028[5] == 1) {\u000a              puVar7 = (undefined *)writeUcs2s(puVar7,in_stack_00000028[3],in_stack_00000028[4]);\u000a              *puVar7 = 0;\u000a              puVar7[1] = 0;\u000a              puVar7 = puVar7 + 2;\u000a            }\u000a            else {\u000a              iVar2 = in_stack_00000028[4];\u000a              if (iVar2 != 0) {\u000a                puVar4 = (undefined *)in_stack_00000028[3];\u000a                iVar3 = iVar2;\u000a                puVar6 = puVar7;\u000a                do {\u000a                  *puVar6 = *puVar4;\u000a                  puVar6 = puVar6 + 1;\u000a                  puVar4 = puVar4 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar7 = puVar7 + iVar2;\u000a              }\u000a              *puVar7 = 0;\u000a              puVar7 = puVar7 + 1;\u000a            }\u000a          }\u000a          if (in_stack_00000028[8] == 1) {\u000a            puVar7 = (undefined *)writeLoBytes(puVar7,in_stack_00000028[6],in_stack_00000028[7]);\u000a          }\u000a          else {\u000a            iVar2 = in_stack_00000028[7];\u000a            if (iVar2 != 0) {\u000a              puVar4 = (undefined *)in_stack_00000028[6];\u000a              iVar3 = iVar2;\u000a              puVar6 = puVar7;\u000a              do {\u000a                *puVar6 = *puVar4;\u000a                puVar6 = puVar6 + 1;\u000a                puVar4 = puVar4 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              puVar7 = puVar7 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        iVar2 = in_stack_00000028[7];\u000a        iVar3 = in_stack_00000028[4];\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar5 = iVar3 * 2 + 0xd;\u000a          if (iVar3 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar3 + 0xc;\u000a          if (iVar3 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar3 = 4;\u000a        puVar7 = in_stack_00000024;\u000a        if (10 < (uint)(iVar5 + iVar2)) {\u000a          do {\u000a            in_stack_00000024[iVar3 + -1] = (char)unaff_r4;\u000a            iVar3 = iVar3 + -1;\u000a            unaff_r4 = unaff_r4 >> 8;\u000a          } while (0 < iVar3);\u000a          uVar1 = (iVar5 + iVar2) - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            in_stack_00000024[iVar2 + 3] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          in_stack_00000024[8] = 0;\u000a          in_stack_00000024[9] = 0;\u000a          *(bool *)(in_stack_00000024 + 10) = in_stack_00000028[8] == 1;\u000a          puVar7 = in_stack_00000024 + 0xb;\u000a          iVar2 = in_stack_00000028[4];\u000a          if (iVar2 != 0) {\u000a            if (in_stack_00000028[5] == 1) {\u000a              puVar7 = (undefined *)writeUcs2s(puVar7,in_stack_00000028[3]);\u000a              *puVar7 = 0;\u000a              puVar7[1] = 0;\u000a              puVar7 = puVar7 + 2;\u000a            }\u000a            else {\u000a              puVar4 = (undefined *)in_stack_00000028[3];\u000a              iVar3 = iVar2;\u000a              puVar6 = puVar7;\u000a              do {\u000a                *puVar6 = *puVar4;\u000a                puVar6 = puVar6 + 1;\u000a                puVar4 = puVar4 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              puVar7[iVar2] = 0;\u000a              puVar7 = puVar7 + iVar2 + 1;\u000a            }\u000a          }\u000a          if (in_stack_00000028[8] == 1) goto LAB_0001e338;\u000a          iVar2 = in_stack_00000028[7];\u000a          if (iVar2 != 0) {\u000a            puVar4 = (undefined *)in_stack_00000028[6];\u000a            iVar3 = iVar2;\u000a            puVar6 = puVar7;\u000a            do {\u000a              *puVar6 = *puVar4;\u000a              puVar6 = puVar6 + 1;\u000a              puVar4 = puVar4 + 1;\u000a              iVar3 = iVar3 + -1;\u000a              if (iVar3 == 0) goto LAB_0001e36a;\u000a            } while( true );\u000a          }\u000a        }\u000a      }\u000a      while( true ) {\u000a        in_stack_00000028 = (int *)*in_stack_00000028;\u000a        if (in_stack_00000028 == (int *)0x0) {\u000a          if (__s != (char *)0x0) {\u000a            iVar2 = 4;\u000a            if ((*in_stack_00000004 != 0) &&\u000a               (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0))\u000a            {\u000a              do {\u000a                puVar7[iVar2 + -1] = (char)uVar1;\u000a                iVar2 = iVar2 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a              strlen(__s);\u000a            }\u000a          }\u000a          __aeabi_memclr(puVar7,(in_stack_0000002c + in_stack_00000018) - (int)puVar7);\u000a          if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a            return in_stack_0000002c;\u000a          }\u000a                    /* WARNING: Subroutine does not return */\u000a          __stack_chk_fail();\u000a        }\u000a        unaff_r4 = in_stack_00000028[1];\u000a        unaff_r6 = 0xff;\u000a        findReplayGain = 4;\u000a        if ((unaff_r4 != DAT_0001e494) &&\u000a           (in_r2 = in_stack_00000030, in_stack_00000024 = puVar7, unaff_r4 != DAT_0001e498)) break;\u000a        iVar2 = in_stack_00000028[4] * 2 + 0x10;\u000a        if (in_stack_00000028[5] != 1) {\u000a          iVar2 = in_stack_00000028[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar3 = in_stack_00000028[8];\u000a        }\u000a        uVar1 = (in_stack_00000028[7] << iVar3) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar1) {\u000a          do {\u000a            puVar7[iVar2 + -1] = (char)unaff_r4;\u000a            iVar2 = iVar2 + -1;\u000a            unaff_r4 = unaff_r4 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar1 = uVar1 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar7[iVar2 + 3] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar7[8] = 0;\u000a          puVar7[9] = 0;\u000a          *(bool *)(puVar7 + 10) = in_stack_00000028[8] == 1;\u000a          puVar7[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a          puVar7[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a          puVar7[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a          puVar7 = puVar7 + 0xe;\u000a          if (in_stack_00000028[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)\u000a                     writeUcs2s(puVar7,in_stack_00000028[3],in_stack_00000028[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = in_stack_00000028[4];\u000a          if (iVar2 != 0) {\u000a            puVar4 = (undefined *)in_stack_00000028[3];\u000a            iVar3 = iVar2;\u000a            puVar6 = puVar7;\u000a            do {\u000a              *puVar6 = *puVar4;\u000a              puVar6 = puVar6 + 1;\u000a              puVar4 = puVar4 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar7 = puVar7 + iVar2;\u000a          }\u000a          *puVar7 = 0;\u000a          puVar7 = puVar7 + 1;\u000a          if (in_stack_00000028[8] == 1) {\u000aLAB_0001e338:\u000a            puVar7 = (undefined *)writeUcs2s(puVar7,in_stack_00000028[6],in_stack_00000028[7]);\u000a          }\u000a          else {\u000a            iVar2 = in_stack_00000028[7];\u000a            if (iVar2 != 0) {\u000a              puVar4 = (undefined *)in_stack_00000028[6];\u000a              iVar3 = iVar2;\u000a              puVar6 = puVar7;\u000a              do {\u000a                *puVar6 = *puVar4;\u000a                puVar6 = puVar6 + 1;\u000a                puVar4 = puVar4 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              puVar7 = puVar7 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a    gfp = (lame_global_flags *)(unaff_r6 & unaff_r4);\u000a    in_r3 = (lame_global_flags *)(unaff_r6 & 0x57000000);\u000a    in_ZR = in_r3 == gfp;\u000a  } while( true );\u000a}\u000a\u000a
p871
S'ldr r5,[sp,#0x30]\n'
p872
S'0c 9d\n'
p873
S'.text:0001e154\n'
p874
tp875
sS'lame_get_encoder_delay'
p876
(S'\n__stdcall lame_get_encoder_delay()\n'
p877
V\u000aundefined4 lame_get_encoder_delay(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f19c);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p878
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f194\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f194\nldr r0,[0x0002f19c]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p879
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 5c f9\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 5a f9\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p880
S'.text:0002f16c\n.text:0002f16e\n.text:0002f170\n.text:0002f172\n.text:0002f174\n.text:0002f178\n.text:0002f17a\n.text:0002f17c\n.text:0002f17e\n.text:0002f180\n.text:0002f182\n.text:0002f184\n.text:0002f186\n.text:0002f188\n.text:0002f18c\n.text:0002f18e\n.text:0002f190\n.text:0002f192\n.text:0002f194\n.text:0002f196\n.text:0002f198\n'
p881
tp882
sS'lame_set_useTemporal'
p883
(S'\n__stdcall lame_set_useTemporal()\n'
p884
V\u000aundefined4 lame_set_useTemporal(int iParm1,uint uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if ((uParm2 < 2) && (iVar1 != 0)) {\u000a    *(uint *)(iParm1 + 0xf4) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p885
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r4,#0x1\nbhi 0x0002edec\ncmp r1,#0x0\nbeq 0x0002edec\nmov r0,#0xf4\nstr r4,[r5,r0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p886
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 2e fb\n01 b4\n02 bc\n00 22\nd0 43\n01 2c\n05 d8\n00 29\n03 d0\nf4 20\n2c 50\n04 b4\n01 bc\nb0 bd\n'
p887
S'.text:0002edc4\n.text:0002edc6\n.text:0002edc8\n.text:0002edca\n.text:0002edcc\n.text:0002edce\n.text:0002edd0\n.text:0002edd4\n.text:0002edd6\n.text:0002edd8\n.text:0002edda\n.text:0002eddc\n.text:0002edde\n.text:0002ede0\n.text:0002ede2\n.text:0002ede4\n.text:0002ede6\n.text:0002ede8\n.text:0002edea\n.text:0002edec\n'
p888
tp889
sS'FUN_00025070'
p890
(S'\n__stdcall FUN_00025070(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23)\n'
p891
V\u000a/* WARNING: Removing unreachable block (ram,0x000250d0) */\u000a\u000avoid FUN_00025070(void)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  undefined4 uVar2;\u000a  undefined4 param_4;\u000a  undefined4 uVar3;\u000a  int unaff_r4;\u000a  undefined param_5;\u000a  undefined4 *param_11;\u000a  undefined4 param_12;\u000a  undefined *param_13;\u000a  undefined4 *param_14;\u000a  undefined *param_15;\u000a  undefined4 param_16;\u000a  undefined *param_17;\u000a  undefined4 param_18;\u000a  undefined4 param_19;\u000a  undefined4 *param_21;\u000a  undefined4 param_22;\u000a  undefined *param_23;\u000a  \u000a  param_17 = &stack0x00000004 + DAT_000251d4;\u000a  param_15 = &stack0x00000138;\u000a  param_12 = 0;\u000a  param_13 = &stack0x00000174;\u000a  param_19 = 0;\u000a  *(undefined4 *)(&stack0x00000000 + DAT_00025214) = 0;\u000a  *(undefined4 *)(&stack0x00000000 + DAT_00025218) = 0;\u000a  *(undefined4 *)(&stack0x00000000 + DAT_0002521c) = 0;\u000a  *param_11 = 0;\u000a  param_18 = 1;\u000a  param_23 = &stack0x00000000 + DAT_000251f0;\u000a  param_21 = (undefined4 *)(unaff_r4 + DAT_00025220);\u000a  puVar1 = (undefined4 *)(&stack0x00000000 + DAT_00025224);\u000a  uVar2 = param_21[1];\u000a  uVar3 = param_21[2];\u000a  *puVar1 = *param_21;\u000a  puVar1[1] = uVar2;\u000a  puVar1[2] = uVar3;\u000a  param_22 = param_14[2];\u000a  param_16 = param_4;\u000a                    /* WARNING: Subroutine does not return */\u000a  __divsf3(param_22,*param_14);\u000a}\u000a\u000a
p892
S'str r3,[sp,#0x100]\nldr r0,[0x000251d4]\nadd r0,sp\nadd r0,#0x4\nstr r0,[sp,#0x108]\nadd r0,sp,#0x134\nadd r0,#0x4\nstr r0,[sp,#0xf8]\nmov r0,#0x0\nstr r0,[sp,#0xdc]\nadd r1,sp,#0x174\nstr r1,[sp,#0xf0]\npush { r0 }\npop { r6 }\nstr r6,[sp,#0x110]\nldr r5,[sp,#0xdc]\nldr r1,[0x00025214]\nadd r1,sp\nstr r5,[r1,#0x0]\nldr r1,[0x00025218]\nadd r1,sp\nstr r5,[r1,#0x0]\nldr r1,[0x0002521c]\nadd r1,sp\nstr r5,[r1,#0x0]\nldr r0,[sp,#0x94]\nstr r5,[r0,#0x0]\nmov r1,#0x1\nstr r1,[sp,#0x10c]\npush { r6 }\npop { r0 }\nand r0,r1\nmul r0,r2\nldr r1,[0x000251f0]\nadd r1,sp\nadd r0,r1,r0\nstr r0,[sp,#0x124]\nmov r0,#0x24\nmul r0,r6\nadd r1,r4,r0\nstr r1,[sp,#0x114]\nldr r0,[0x00025220]\nadd r0,r1,r0\nstr r0,[sp,#0x11c]\ncmp r6,#0x2\npush { r5 }\npop { r4 }\nbne 0x000250fa\nldr r5,[0x000251f0]\nadd r5,sp\nldr r6,[r5,r4]\nldr r1,[r3,r4]\nstr r1,[sp,#0x120]\npush { r6 }\npop { r0 }\nbl 0x00037a70\nldr r0,[0x00025224]\nadd r0,sp\nldr r4,[sp,#0x11c]\nldmia r4!,{ r1, r2, r3 }\nstmia r0!,{  r1, r2, r3 }\nmov r0,#0xb\nmvn r6,r0\nmov r4,#0x0\nldr r5,[sp,#0xf4]\nldr r0,[r5,#0x8]\nstr r0,[sp,#0x120]\nldr r1,[r5,#0x0]\nbl 0x00037a90\n'
p893
S'40 93\n58 48\n68 44\n04 30\n42 90\n4d a8\n04 30\n3e 90\n00 20\n37 90\n5d a9\n3c 91\n01 b4\n40 bc\n44 96\n37 9d\n60 49\n69 44\n0d 60\n60 49\n69 44\n0d 60\n5f 49\n69 44\n0d 60\n25 98\n05 60\n01 21\n43 91\n40 b4\n01 bc\n08 40\n50 43\n4f 49\n69 44\n08 18\n49 90\n24 20\n70 43\n21 18\n45 91\n57 48\n08 18\n47 90\n02 2e\n20 b4\n10 bc\n14 d1\n47 4d\n6d 44\n2e 59\n19 59\n48 91\n40 b4\n01 bc\n12 f0 c7 fc\n4a 48\n68 44\n47 9c\n0e cc\n0e c0\n0b 20\nc6 43\n00 24\n3d 9d\na8 68\n48 90\n29 68\n12 f0 bd fc\n'
p894
S'.text:00025070\n.text:00025072\n.text:00025074\n.text:00025076\n.text:00025078\n.text:0002507a\n.text:0002507c\n.text:0002507e\n.text:00025080\n.text:00025082\n.text:00025084\n.text:00025086\n.text:00025088\n.text:0002508a\n.text:0002508c\n.text:0002508e\n.text:00025090\n.text:00025092\n.text:00025094\n.text:00025096\n.text:00025098\n.text:0002509a\n.text:0002509c\n.text:0002509e\n.text:000250a0\n.text:000250a2\n.text:000250a4\n.text:000250a6\n.text:000250a8\n.text:000250aa\n.text:000250ac\n.text:000250ae\n.text:000250b0\n.text:000250b2\n.text:000250b4\n.text:000250b6\n.text:000250b8\n.text:000250ba\n.text:000250bc\n.text:000250be\n.text:000250c0\n.text:000250c2\n.text:000250c4\n.text:000250c6\n.text:000250c8\n.text:000250ca\n.text:000250cc\n.text:000250ce\n.text:000250d0\n.text:000250d2\n.text:000250d4\n.text:000250d6\n.text:000250d8\n.text:000250da\n.text:000250dc\n.text:000250de\n.text:000250fa\n.text:000250fc\n.text:000250fe\n.text:00025100\n.text:00025102\n.text:00025104\n.text:00025106\n.text:00025108\n.text:0002510a\n.text:0002510c\n.text:0002510e\n.text:00025110\n.text:00025112\n'
p895
tp896
sS'lame_get_id3v1_tag'
p897
(S'\n__stdcall lame_get_id3v1_tag()\n'
p898
V\u000avoid lame_get_id3v1_tag(void)\u000a\u000a{\u000a  (*(__aeabi_memset + DAT_00037d8c))();\u000a  return;\u000a}\u000a\u000a
p899
S'ldr r12,[0x37d8c]\nadd pc,r12,pc\n'
p900
S'00 c0 9f e5\n0f f0 8c e0\n'
p901
S'.text:00037d84\n.text:00037d88\n'
p902
tp903
sS'unwind_UCB_from_context'
p904
(S'\n__stdcall unwind_UCB_from_context()\n'
p905
V\u000aundefined4\u000aunwind_UCB_from_context(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 uStack12;\u000a  \u000a  uStack12 = uParm4;\u000a  _Unwind_VRS_Get(uParm1,0,0xc,0,&uStack12,uParm2,uParm3);\u000a  return uStack12;\u000a}\u000a\u000a
p906
S'b 0x000374b0\n'
p907
S'f4 ff ff ea\n'
p908
S'.text:000374d8\n'
p909
tp910
sS'mdct_sub48'
p911
(S'\n__stdcall mdct_sub48()\n'
p912
V\u000avoid mdct_sub48(void)\u000a\u000a{\u000a  (*(L3psycho_anal_vbr + DAT_00037a5c))();\u000a  return;\u000a}\u000a\u000a
p913
S'ldr r12,[0x37a5c]\nadd pc,r12,pc\n'
p914
S'00 c0 9f e5\n0f f0 8c e0\n'
p915
S'.text:00037a54\n.text:00037a58\n'
p916
tp917
sS'lame_set_ogg'
p918
(S'\n__stdcall lame_set_ogg(lame_global_flags * gfp, int ogg)\n'
p919
V\u000aint lame_set_ogg(lame_global_flags *gfp,int ogg)\u000a\u000a{\u000a  uint uVar1;\u000a  lame_global_flags *gfp_00;\u000a  int iVar2;\u000a  undefined *puVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int *unaff_r4;\u000a  uint uVar9;\u000a  uint unaff_r5;\u000a  undefined4 *puVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint uStack00000030;\u000a  \u000a  do {\u000a    iVar2 = unaff_r4[4];\u000a    if (unaff_r4[8] == 1) {\u000a      iVar5 = iVar2 * 2 + 0xd;\u000a      if (iVar2 == 0) {\u000a        iVar5 = 0xb;\u000a      }\u000a      gfp = (lame_global_flags *)((int)gfp << 1);\u000a    }\u000a    else {\u000a      iVar5 = iVar2 + 0xc;\u000a      if (iVar2 == 0) {\u000a        iVar5 = 0xb;\u000a      }\u000a    }\u000a    iVar5 = (int)&gfp->class_id + iVar5;\u000a    while( true ) {\u000a      while( true ) {\u000a        unaff_r5 = iVar5 + unaff_r5;\u000a        unaff_r4 = (int *)*unaff_r4;\u000a        if (unaff_r4 == (int *)0x0) {\u000a          if ((*in_stack_00000010 & 0x20) != 0) {\u000a            unaff_r5 = *(int *)(in_stack_0000001c + DAT_0001e1e4) + unaff_r5;\u000a          }\u000a          uVar1 = unaff_r5;\u000a          if ((in_stack_00000014 < unaff_r5) || (uVar1 = 0, in_stack_00000018 == (undefined *)0x0))\u000a          goto LAB_0001e470;\u000a          *in_stack_00000018 = 0x49;\u000a          in_stack_00000018[1] = 0x44;\u000a          in_stack_00000018[2] = 0x33;\u000a          in_stack_00000018[3] = 3;\u000a          uStack00000030 = 0;\u000a          in_stack_00000018[4] = 0;\u000a          in_stack_00000018[5] = 0;\u000a          uVar1 = unaff_r5 - 10;\u000a          in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a          in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a          in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a          in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a          puVar12 = in_stack_00000018 + 10;\u000a          puVar10 = (undefined4 *)*in_stack_00000008;\u000a          goto LAB_0001e09c;\u000a        }\u000a        uVar1 = unaff_r4[1];\u000a        uVar11 = 0xff;\u000a        if ((uVar1 != DAT_0001e1dc) && (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 != DAT_0001e1e0)\u000a           ) break;\u000a        iVar5 = unaff_r4[4] * 2 + 0x10;\u000a        if (unaff_r4[5] != 1) {\u000a          iVar5 = unaff_r4[4] + 0xf;\u000a        }\u000a        iVar2 = unaff_r4[7];\u000a        if (unaff_r4[8] == 1) {\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        iVar5 = iVar5 + iVar2;\u000a      }\u000a      do {\u000a        uVar9 = uVar11 & 0x57000000;\u000a        uVar4 = 0;\u000a        if (uVar9 != (uVar11 & uVar1)) {\u000a          uVar4 = uVar11 & uVar1;\u000a        }\u000a        if (uVar9 == 0) {\u000a          uVar4 = uVar9;\u000a        }\u000a        uVar7 = uVar7 | uVar4;\u000a        iVar2 = iVar2 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar7 != 0) break;\u000a      iVar5 = sizeOfWxxxNode(unaff_r4);\u000a    }\u000a    gfp = (lame_global_flags *)unaff_r4[7];\u000a  } while( true );\u000aLAB_0001e09c:\u000a  if (puVar10 == (undefined4 *)0x0) {\u000a    if (__s != (char *)0x0) {\u000a      iVar2 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar12,in_stack_00000018 + (unaff_r5 - (int)puVar12));\u000a    uVar1 = unaff_r5;\u000aLAB_0001e470:\u000a    if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a      return uVar1;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  uVar1 = puVar10[1];\u000a  uVar11 = 0xff;\u000a  iVar2 = 4;\u000a  if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a    iVar2 = puVar10[4] * 2 + 0x10;\u000a    if (puVar10[5] != 1) {\u000a      iVar2 = puVar10[4] + 0xf;\u000a    }\u000a    iVar5 = 0;\u000a    if (puVar10[8] == 1) {\u000a      iVar5 = puVar10[8];\u000a    }\u000a    uVar11 = (puVar10[7] << iVar5) + iVar2;\u000a    iVar2 = 4;\u000a    if (10 < uVar11) {\u000a      do {\u000a        puVar12[iVar2 + -1] = (char)uVar1;\u000a        iVar2 = iVar2 + -1;\u000a        uVar1 = uVar1 >> 8;\u000a      } while (0 < iVar2);\u000a      uVar11 = uVar11 - 10;\u000a      iVar2 = 4;\u000a      do {\u000a        puVar12[iVar2 + 3] = (char)uVar11;\u000a        iVar2 = iVar2 + -1;\u000a        uVar11 = uVar11 >> 8;\u000a      } while (0 < iVar2);\u000a      puVar12[8] = 0;\u000a      puVar12[9] = 0;\u000a      *(bool *)(puVar12 + 10) = puVar10[8] == 1;\u000a      puVar12[0xb] = *(undefined *)(puVar10 + 2);\u000a      puVar12[0xc] = *(undefined *)((int)puVar10 + 9);\u000a      puVar12[0xd] = *(undefined *)((int)puVar10 + 10);\u000a      puVar12 = puVar12 + 0xe;\u000a      if (puVar10[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar10[3],puVar10[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar2;\u000a      }\u000a      iVar2 = puVar10[4];\u000a      if (iVar2 != 0) {\u000a        puVar3 = (undefined *)puVar10[3];\u000a        iVar5 = iVar2;\u000a        puVar8 = puVar12;\u000a        do {\u000a          *puVar8 = *puVar3;\u000a          puVar8 = puVar8 + 1;\u000a          puVar3 = puVar3 + 1;\u000a          iVar5 = iVar5 + -1;\u000a        } while (iVar5 != 0);\u000a        puVar12 = puVar12 + iVar2;\u000a      }\u000a      *puVar12 = 0;\u000a      puVar12 = puVar12 + 1;\u000a      if (puVar10[8] == 1) {\u000aLAB_0001e338:\u000a        puVar12 = (undefined *)writeUcs2s(puVar12,puVar10[6],puVar10[7]);\u000a      }\u000a      else {\u000a        iVar2 = puVar10[7];\u000a        if (iVar2 != 0) {\u000a          puVar3 = (undefined *)puVar10[6];\u000a          iVar5 = iVar2;\u000a          puVar8 = puVar12;\u000a          do {\u000a            *puVar8 = *puVar3;\u000a            puVar8 = puVar8 + 1;\u000a            puVar3 = puVar3 + 1;\u000a            iVar5 = iVar5 + -1;\u000a          } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a          puVar12 = puVar12 + iVar2;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    do {\u000a      uVar9 = uVar11 & 0x57000000;\u000a      uVar4 = uStack00000030;\u000a      if (uVar9 != (uVar11 & uVar1)) {\u000a        uVar4 = uVar11 & uVar1;\u000a      }\u000a      if (uVar9 == 0) {\u000a        uVar4 = uVar9;\u000a      }\u000a      uVar7 = uVar7 | uVar4;\u000a      iVar2 = iVar2 + -1;\u000a      uVar11 = uVar11 << 8;\u000a    } while (iVar2 != 0);\u000a    if (uVar7 == 0) {\u000a      uVar11 = sizeOfWxxxNode(puVar10);\u000a      iVar2 = 4;\u000a      if (10 < uVar11) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a        uVar11 = uVar11 - 10;\u000a        iVar2 = 4;\u000a        do {\u000a          puVar12[iVar2 + 3] = (char)uVar11;\u000a          iVar2 = iVar2 + -1;\u000a          uVar11 = uVar11 >> 8;\u000a        } while (0 < iVar2);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        puVar8 = puVar12 + 10;\u000a        if (puVar10[4] != 0) {\u000a          *(bool *)(puVar12 + 10) = puVar10[5] == 1;\u000a          puVar12 = puVar12 + 0xb;\u000a          if (puVar10[5] == 1) {\u000a            puVar8 = (undefined *)writeUcs2s(puVar12,puVar10[3],puVar10[4]);\u000a            *puVar8 = 0;\u000a            puVar8[1] = 0;\u000a            puVar8 = puVar8 + 2;\u000a          }\u000a          else {\u000a            iVar2 = puVar10[4];\u000a            if (iVar2 != 0) {\u000a              puVar3 = (undefined *)puVar10[3];\u000a              iVar5 = iVar2;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar3;\u000a                puVar8 = puVar8 + 1;\u000a                puVar3 = puVar3 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              puVar12 = puVar12 + iVar2;\u000a            }\u000a            *puVar12 = 0;\u000a            puVar8 = puVar12 + 1;\u000a          }\u000a        }\u000a        if (puVar10[8] == 1) {\u000a          puVar12 = (undefined *)writeLoBytes(puVar8,puVar10[6],puVar10[7]);\u000a        }\u000a        else {\u000a          iVar2 = puVar10[7];\u000a          puVar12 = puVar8;\u000a          if (iVar2 != 0) {\u000a            puVar3 = (undefined *)puVar10[6];\u000a            iVar5 = iVar2;\u000a            puVar12 = puVar8;\u000a            do {\u000a              *puVar12 = *puVar3;\u000a              puVar12 = puVar12 + 1;\u000a              puVar3 = puVar3 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a            puVar12 = puVar8 + iVar2;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      iVar2 = puVar10[7];\u000a      iVar5 = puVar10[4];\u000a      if (puVar10[8] == 1) {\u000a        iVar6 = iVar5 * 2 + 0xd;\u000a        if (iVar5 == 0) {\u000a          iVar6 = 0xb;\u000a        }\u000a        iVar2 = iVar2 << 1;\u000a      }\u000a      else {\u000a        iVar6 = iVar5 + 0xc;\u000a        if (iVar5 == 0) {\u000a          iVar6 = 0xb;\u000a        }\u000a      }\u000a      iVar5 = 4;\u000a      if (10 < (uint)(iVar6 + iVar2)) {\u000a        do {\u000a          puVar12[iVar5 + -1] = (char)uVar1;\u000a          iVar5 = iVar5 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar5);\u000a        uVar1 = (iVar6 + iVar2) - 10;\u000a        iVar2 = 4;\u000a        do {\u000a          puVar12[iVar2 + 3] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        *(bool *)(puVar12 + 10) = puVar10[8] == 1;\u000a        puVar12 = puVar12 + 0xb;\u000a        iVar2 = puVar10[4];\u000a        if (iVar2 != 0) {\u000a          if (puVar10[5] == 1) {\u000a            puVar12 = (undefined *)writeUcs2s(puVar12,puVar10[3]);\u000a            *puVar12 = 0;\u000a            puVar12[1] = 0;\u000a            puVar12 = puVar12 + 2;\u000a          }\u000a          else {\u000a            puVar3 = (undefined *)puVar10[3];\u000a            iVar5 = iVar2;\u000a            puVar8 = puVar12;\u000a            do {\u000a              *puVar8 = *puVar3;\u000a              puVar8 = puVar8 + 1;\u000a              puVar3 = puVar3 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a            puVar12[iVar2] = 0;\u000a            puVar12 = puVar12 + iVar2 + 1;\u000a          }\u000a        }\u000a        if (puVar10[8] == 1) goto LAB_0001e338;\u000a        iVar2 = puVar10[7];\u000a        if (iVar2 != 0) {\u000a          puVar3 = (undefined *)puVar10[6];\u000a          iVar5 = iVar2;\u000a          puVar8 = puVar12;\u000a          do {\u000a            *puVar8 = *puVar3;\u000a            puVar8 = puVar8 + 1;\u000a            puVar3 = puVar3 + 1;\u000a            iVar5 = iVar5 + -1;\u000a          } while (iVar5 != 0);\u000a          goto LAB_0001e36a;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  puVar10 = (undefined4 *)*puVar10;\u000a  goto LAB_0001e09c;\u000a}\u000a\u000a
p920
S'ldr r2,[r4,#0x20]\nldr r1,[r4,#0x10]\ncmp r2,#0x1\n'
p921
S'22 6a\n21 69\n01 2a\n'
p922
S'.text:0001dff4\n.text:0001dff6\n.text:0001dff8\n'
p923
tp924
sS'lame_encode_buffer_interleaved_ieee_float'
p925
(S'\n__stdcall lame_encode_buffer_interleaved_ieee_float(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p926
V\u000avoid lame_encode_buffer_interleaved_ieee_float\u000a               (undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4,\u000a               undefined4 param_5)\u000a\u000a{\u000a  lame_encode_buffer_template(param_1,param_2,param_2 + 4,param_3,param_4,param_5,3,2,DAT_00021134);\u000a  return;\u000a}\u000a\u000a
p927
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\npush { r2 }\npop { r4 }\nldr r2,[0x00021134]\nmov r5,sp\nstr r2,[r5,#0x10]\nmov r2,#0x2\nstr r2,[r5,#0xc]\nmov r2,#0x3\nstr r2,[r5,#0x8]\nldr r2,[sp,#0x28]\nstr r2,[r5,#0x4]\nstr r3,[r5,#0x0]\nadd r2,r1,#0x4\npush { r4 }\npop { r3 }\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p928
S'b0 b5\n02 af\n86 b0\n04 b4\n10 bc\n08 4a\n6d 46\n2a 61\n02 22\nea 60\n03 22\naa 60\n0a 9a\n6a 60\n2b 60\n0a 1d\n10 b4\n08 bc\nff f7 00 fe\n06 b0\nb0 bd\n'
p929
S'.text:00021108\n.text:0002110a\n.text:0002110c\n.text:0002110e\n.text:00021110\n.text:00021112\n.text:00021114\n.text:00021116\n.text:00021118\n.text:0002111a\n.text:0002111c\n.text:0002111e\n.text:00021120\n.text:00021122\n.text:00021124\n.text:00021126\n.text:00021128\n.text:0002112a\n.text:0002112c\n.text:00021130\n.text:00021132\n'
p930
tp931
sS'lame_set_force_ms'
p932
(S'\n__stdcall lame_set_force_ms(lame_global_flags * gfp, int force_ms)\n'
p933
V\u000aint lame_set_force_ms(lame_global_flags *gfp,int force_ms)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  int iVar1;\u000a  undefined *puVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  undefined *puVar6;\u000a  int *in_r3;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint unaff_r4;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    iVar3 = 0;\u000a    if (*(int *)((int)in_r3 + 0x20) == 1) {\u000a      iVar3 = *(int *)((int)in_r3 + 0x20);\u000a    }\u000a    uVar10 = (int)&gfp->class_id + (*(int *)((int)in_r3 + 0x1c) << iVar3);\u000a    iVar3 = 4;\u000a    if (10 < uVar10) {\u000a      do {\u000a        unaff_r6[iVar3 + -1] = (char)unaff_r4;\u000a        iVar3 = iVar3 + -1;\u000a        unaff_r4 = unaff_r4 >> 8;\u000a      } while (0 < iVar3);\u000a      uVar10 = uVar10 - 10;\u000a      iVar3 = 4;\u000a      do {\u000a        unaff_r6[iVar3 + 3] = (char)uVar10;\u000a        iVar3 = iVar3 + -1;\u000a        uVar10 = uVar10 >> 8;\u000a      } while (0 < iVar3);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a      unaff_r6[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a      unaff_r6[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a      unaff_r6[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a      puVar8 = unaff_r6 + 0xe;\u000a      if (in_stack_00000028[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar8,in_stack_00000028[3],in_stack_00000028[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar3 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar3;\u000a      }\u000a      iVar3 = in_stack_00000028[4];\u000a      if (iVar3 != 0) {\u000a        puVar6 = (undefined *)in_stack_00000028[3];\u000a        iVar1 = iVar3;\u000a        puVar2 = puVar8;\u000a        do {\u000a          *puVar2 = *puVar6;\u000a          puVar2 = puVar2 + 1;\u000a          puVar6 = puVar6 + 1;\u000a          iVar1 = iVar1 + -1;\u000a        } while (iVar1 != 0);\u000a        puVar8 = puVar8 + iVar3;\u000a      }\u000a      *puVar8 = 0;\u000a      unaff_r6 = puVar8 + 1;\u000a      if (in_stack_00000028[8] == 1) goto LAB_0001e338;\u000a      iVar3 = in_stack_00000028[7];\u000a      if (iVar3 != 0) {\u000a        puVar2 = (undefined *)in_stack_00000028[6];\u000a        iVar1 = iVar3;\u000a        puVar8 = unaff_r6;\u000a        do {\u000a          *puVar8 = *puVar2;\u000a          puVar8 = puVar8 + 1;\u000a          puVar2 = puVar2 + 1;\u000a          iVar1 = iVar1 + -1;\u000a          if (iVar1 == 0) goto LAB_0001e36a;\u000a        } while( true );\u000a      }\u000a    }\u000a    while( true ) {\u000a      in_r3 = (int *)*in_stack_00000028;\u000a      if (in_r3 == (int *)0x0) {\u000a        if (__s != (char *)0x0) {\u000a          iVar3 = 4;\u000a          if ((*in_stack_00000004 != 0) &&\u000a             (uVar10 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0))\u000a          {\u000a            do {\u000a              unaff_r6[iVar3 + -1] = (char)uVar10;\u000a              iVar3 = iVar3 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a            strlen(__s);\u000a          }\u000a        }\u000a        __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a        if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a          return in_stack_0000002c;\u000a        }\u000a                    /* WARNING: Subroutine does not return */\u000a        __stack_chk_fail();\u000a      }\u000a      unaff_r4 = in_r3[1];\u000a      uVar10 = 0xff;\u000a      iVar3 = 4;\u000a      if ((unaff_r4 == DAT_0001e494) || (uVar4 = in_stack_00000030, unaff_r4 == DAT_0001e498))\u000a      break;\u000a      do {\u000a        uVar7 = uVar10 & 0x57000000;\u000a        uVar9 = in_stack_00000030;\u000a        if (uVar7 != (uVar10 & unaff_r4)) {\u000a          uVar9 = uVar10 & unaff_r4;\u000a        }\u000a        if (uVar7 == 0) {\u000a          uVar9 = uVar7;\u000a        }\u000a        uVar4 = uVar4 | uVar9;\u000a        iVar3 = iVar3 + -1;\u000a        uVar10 = uVar10 << 8;\u000a      } while (iVar3 != 0);\u000a      if (uVar4 == 0) {\u000a        uVar10 = sizeOfWxxxNode(in_r3);\u000a        iVar3 = 4;\u000a        in_stack_00000028 = in_r3;\u000a        if (10 < uVar10) {\u000a          do {\u000a            unaff_r6[iVar3 + -1] = (char)unaff_r4;\u000a            iVar3 = iVar3 + -1;\u000a            unaff_r4 = unaff_r4 >> 8;\u000a          } while (0 < iVar3);\u000a          uVar10 = uVar10 - 10;\u000a          iVar3 = 4;\u000a          do {\u000a            unaff_r6[iVar3 + 3] = (char)uVar10;\u000a            iVar3 = iVar3 + -1;\u000a            uVar10 = uVar10 >> 8;\u000a          } while (0 < iVar3);\u000a          unaff_r6[8] = 0;\u000a          unaff_r6[9] = 0;\u000a          puVar8 = unaff_r6 + 10;\u000a          if (in_r3[4] != 0) {\u000a            *(bool *)(unaff_r6 + 10) = in_r3[5] == 1;\u000a            puVar8 = unaff_r6 + 0xb;\u000a            if (in_r3[5] == 1) {\u000a              puVar8 = (undefined *)writeUcs2s(puVar8,in_r3[3],in_r3[4]);\u000a              *puVar8 = 0;\u000a              puVar8[1] = 0;\u000a              puVar8 = puVar8 + 2;\u000a            }\u000a            else {\u000a              iVar3 = in_r3[4];\u000a              if (iVar3 != 0) {\u000a                puVar6 = (undefined *)in_r3[3];\u000a                iVar1 = iVar3;\u000a                puVar2 = puVar8;\u000a                do {\u000a                  *puVar2 = *puVar6;\u000a                  puVar2 = puVar2 + 1;\u000a                  puVar6 = puVar6 + 1;\u000a                  iVar1 = iVar1 + -1;\u000a                } while (iVar1 != 0);\u000a                puVar8 = puVar8 + iVar3;\u000a              }\u000a              *puVar8 = 0;\u000a              puVar8 = puVar8 + 1;\u000a            }\u000a          }\u000a          if (in_r3[8] == 1) {\u000a            unaff_r6 = (undefined *)writeLoBytes(puVar8,in_r3[6],in_r3[7]);\u000a            in_stack_00000028 = in_r3;\u000a          }\u000a          else {\u000a            iVar3 = in_r3[7];\u000a            in_stack_00000028 = in_r3;\u000a            unaff_r6 = puVar8;\u000a            if (iVar3 != 0) {\u000a              puVar6 = (undefined *)in_r3[6];\u000a              iVar1 = iVar3;\u000a              puVar2 = puVar8;\u000a              do {\u000a                *puVar2 = *puVar6;\u000a                puVar2 = puVar2 + 1;\u000a                puVar6 = puVar6 + 1;\u000a                iVar1 = iVar1 + -1;\u000a              } while (iVar1 != 0);\u000a              in_stack_00000028 = in_r3;\u000a              unaff_r6 = puVar8 + iVar3;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        iVar3 = in_r3[7];\u000a        iVar1 = in_r3[4];\u000a        if (in_r3[8] == 1) {\u000a          iVar5 = iVar1 * 2 + 0xd;\u000a          if (iVar1 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar1 + 0xc;\u000a          if (iVar1 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar1 = 4;\u000a        in_stack_00000028 = in_r3;\u000a        if (10 < (uint)(iVar5 + iVar3)) {\u000a          do {\u000a            unaff_r6[iVar1 + -1] = (char)unaff_r4;\u000a            iVar1 = iVar1 + -1;\u000a            unaff_r4 = unaff_r4 >> 8;\u000a          } while (0 < iVar1);\u000a          uVar10 = (iVar5 + iVar3) - 10;\u000a          iVar3 = 4;\u000a          do {\u000a            unaff_r6[iVar3 + 3] = (char)uVar10;\u000a            iVar3 = iVar3 + -1;\u000a            uVar10 = uVar10 >> 8;\u000a          } while (0 < iVar3);\u000a          unaff_r6[8] = 0;\u000a          unaff_r6[9] = 0;\u000a          *(bool *)(unaff_r6 + 10) = in_r3[8] == 1;\u000a          unaff_r6 = unaff_r6 + 0xb;\u000a          iVar3 = in_r3[4];\u000a          if (iVar3 != 0) {\u000a            if (in_r3[5] == 1) {\u000a              puVar8 = (undefined *)writeUcs2s(unaff_r6,in_r3[3]);\u000a              *puVar8 = 0;\u000a              puVar8[1] = 0;\u000a              unaff_r6 = puVar8 + 2;\u000a            }\u000a            else {\u000a              puVar2 = (undefined *)in_r3[3];\u000a              iVar1 = iVar3;\u000a              puVar8 = unaff_r6;\u000a              do {\u000a                *puVar8 = *puVar2;\u000a                puVar8 = puVar8 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar1 = iVar1 + -1;\u000a              } while (iVar1 != 0);\u000a              unaff_r6[iVar3] = 0;\u000a              unaff_r6 = unaff_r6 + iVar3 + 1;\u000a            }\u000a          }\u000a          in_stack_00000028 = in_r3;\u000a          if (in_r3[8] == 1) {\u000aLAB_0001e338:\u000a            unaff_r6 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[6],in_stack_00000028[7]);\u000a          }\u000a          else {\u000a            iVar3 = in_r3[7];\u000a            in_stack_00000028 = in_r3;\u000a            if (iVar3 != 0) {\u000a              puVar2 = (undefined *)in_r3[6];\u000a              iVar1 = iVar3;\u000a              puVar8 = unaff_r6;\u000a              do {\u000a                *puVar8 = *puVar2;\u000a                puVar8 = puVar8 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar1 = iVar1 + -1;\u000a                in_stack_00000028 = in_r3;\u000a              } while (iVar1 != 0);\u000aLAB_0001e36a:\u000a              unaff_r6 = unaff_r6 + iVar3;\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a    gfp = (lame_global_flags *)(in_r3[4] * 2 + 0x10);\u000a    in_stack_00000028 = in_r3;\u000a    if (in_r3[5] != 1) {\u000a      gfp = (lame_global_flags *)(in_r3[4] + 0xf);\u000a      in_stack_00000028 = in_r3;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p934
S'ldr r2,[r3,#0x20]\n'
p935
S'1a 6a\n'
p936
S'.text:0001e0d0\n'
p937
tp938
sS'init_xrpow'
p939
(S'\n__stdcall init_xrpow()\n'
p940
V\u000aundefined4 init_xrpow(int iParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  undefined4 local_1c;\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_000295b4 + 0x29520);\u000a  local_1c = 0;\u000a  iVar3 = *(int *)(iParm2 + DAT_000295b8);\u000a  *(undefined4 *)(iParm2 + DAT_000295bc) = 0;\u000a  __aeabi_memclr4(iParm3 + iVar3 * 4,(0x240 - iVar3) * 4);\u000a  (**(code **)(iParm1 + DAT_000295c0))(iParm2,iParm3,iVar3,&local_1c);\u000a  iVar3 = __aeabi_fcmpgt(local_1c,DAT_000295c4);\u000a  if (iVar3 == 0) {\u000a    __aeabi_memclr4(iParm2 + 0x900);\u000a    uVar1 = 0;\u000a  }\u000a  else {\u000a    uVar2 = *(uint *)(iParm1 + DAT_000295c8);\u000a    uVar1 = 1;\u000a    if (0 < *(int *)(iParm2 + 0x1300)) {\u000a      iParm1 = iParm1 + DAT_000295cc;\u000a      iVar3 = 0;\u000a      do {\u000a        *(uint *)(iParm1 + iVar3 * 4) = uVar2 >> 1 & 1;\u000a        iVar3 = iVar3 + 1;\u000a      } while (iVar3 < *(int *)(iParm2 + 0x1300));\u000a    }\u000a  }\u000a  if (**(int **)(DAT_000295d0 + 0x295a0) != local_18) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p941
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1c\nstr r2,[sp,#0x10]\npush { r1 }\npop { r6 }\npush { r0 }\npop { r5 }\nstr r5,[sp,#0x8]\nldr r0,[0x000295b4]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x18]\nmov r1,#0x0\nstr r1,[sp,#0xc]\nstr r1,[sp,#0x14]\nldr r0,[0x000295b8]\nldr r4,[r6,r0]\nldr r0,[0x000295bc]\nstr r1,[r6,r0]\nlsl r0,r4,#0x2\nadd r0,r2,r0\nmov r1,#0x9\nstr r1,[sp,#0x4]\nlsl r1,r1,#0x6\nsub r1,r1,r4\nlsl r1,r1,#0x2\nbl 0x00037a40\nldr r0,[0x000295c0]\nldr r5,[r5,r0]\nadd r3,sp,#0x14\npush { r6 }\npop { r0 }\nldr r1,[sp,#0x10]\npush { r4 }\npop { r2 }\nblx r5\nldr r1,[0x000295c4]\nldr r0,[sp,#0x14]\nbl 0x00037a80\ncmp r0,#0x0\nbeq 0x0002958e\nmov r0,#0x13\nlsl r2,r0,#0x8\nadd r5,r6,r2\nldr r1,[0x000295c8]\nldr r3,[sp,#0x8]\nldr r1,[r3,r1]\nlsr r1,r1,#0x1\nmov r0,#0x1\nand r1,r0\nldr r2,[r6,r2]\ncmp r2,#0x1\nblt 0x0002959a\nldr r2,[0x000295cc]\nadd r2,r3,r2\nmov r3,#0x0\nlsl r4,r3,#0x2\nstr r1,[r2,r4]\nadd r3,#0x1\nldr r4,[r5,#0x0]\ncmp r3,r4\nblt 0x00029580\nb 0x0002959a\nldr r0,[sp,#0x4]\nlsl r1,r0,#0x8\nadd r0,r6,r1\nbl 0x00037a40\nldr r0,[sp,#0xc]\nldr r1,[0x000295d0]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r2,[r1,#0x0]\nldr r1,[sp,#0x18]\nsub r1,r2,r1\ncmp r1,#0x0\nbne 0x000295ae\nadd sp,#0x1c\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p942
S'f0 b5\n03 af\n87 b0\n04 92\n02 b4\n40 bc\n01 b4\n20 bc\n02 95\n26 48\n78 44\n00 68\n00 68\n06 90\n00 21\n03 91\n05 91\n23 48\n34 58\n23 48\n31 50\na0 00\n10 18\n09 21\n01 91\n89 01\n09 1b\n89 00\n0e f0 7e fa\n1e 48\n2d 58\n05 ab\n40 b4\n01 bc\n04 99\n10 b4\n04 bc\na8 47\n1b 49\n05 98\n0e f0 91 fa\n00 28\n15 d0\n13 20\n02 02\nb5 18\n17 49\n02 9b\n59 58\n49 08\n01 20\n01 40\nb2 58\n01 2a\n0f db\n14 4a\n9a 18\n00 23\n9c 00\n11 51\n01 33\n2c 68\na3 42\nf9 db\n05 e0\n01 98\n01 02\n70 18\n0e f0 54 fa\n03 98\n0d 49\n79 44\n09 68\n0a 68\n06 99\n51 1a\n00 29\n01 d1\n07 b0\nf0 bd\n0e f0 ff f9\n'
p943
S'.text:00029508\n.text:0002950a\n.text:0002950c\n.text:0002950e\n.text:00029510\n.text:00029512\n.text:00029514\n.text:00029516\n.text:00029518\n.text:0002951a\n.text:0002951c\n.text:0002951e\n.text:00029520\n.text:00029522\n.text:00029524\n.text:00029526\n.text:00029528\n.text:0002952a\n.text:0002952c\n.text:0002952e\n.text:00029530\n.text:00029532\n.text:00029534\n.text:00029536\n.text:00029538\n.text:0002953a\n.text:0002953c\n.text:0002953e\n.text:00029540\n.text:00029544\n.text:00029546\n.text:00029548\n.text:0002954a\n.text:0002954c\n.text:0002954e\n.text:00029550\n.text:00029552\n.text:00029554\n.text:00029556\n.text:00029558\n.text:0002955a\n.text:0002955e\n.text:00029560\n.text:00029562\n.text:00029564\n.text:00029566\n.text:00029568\n.text:0002956a\n.text:0002956c\n.text:0002956e\n.text:00029570\n.text:00029572\n.text:00029574\n.text:00029576\n.text:00029578\n.text:0002957a\n.text:0002957c\n.text:0002957e\n.text:00029580\n.text:00029582\n.text:00029584\n.text:00029586\n.text:00029588\n.text:0002958a\n.text:0002958c\n.text:0002958e\n.text:00029590\n.text:00029592\n.text:00029594\n.text:00029598\n.text:0002959a\n.text:0002959c\n.text:0002959e\n.text:000295a0\n.text:000295a2\n.text:000295a4\n.text:000295a6\n.text:000295a8\n.text:000295aa\n.text:000295ac\n.text:000295ae\n'
p944
tp945
sS'lame_print_config'
p946
(S'\n__stdcall lame_print_config()\n'
p947
V\u000avoid lame_print_config(int iParm1)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  int iVar5;\u000a  \u000a  iVar5 = *(int *)(iParm1 + 0x120);\u000a  uVar1 = *(undefined4 *)(iVar5 + 0x40);\u000a  uVar2 = get_lame_version();\u000a  uVar3 = get_lame_os_bitness();\u000a  uVar4 = get_lame_url();\u000a  lame_msgf(iVar5,DAT_00020754 + 0x204e8,uVar2,uVar3,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a  __floatsidf(uVar1);\u000a}\u000a\u000a
p948
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x124\nldr r1,[0x00020750]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x120]\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r4,[r0,r1]\nldr r0,[r4,#0x3c]\nstr r0,[sp,#0x14]\nldr r0,[r4,#0x40]\nstr r0,[sp,#0x1c]\nbl 0x00037c60\npush { r0 }\npop { r5 }\nbl 0x00037c50\npush { r0 }\npop { r6 }\nbl 0x00037c70\nmov r1,sp\nstr r0,[r1,#0x0]\nldr r1,[0x00020754]\nadd r1,pc\npush { r4 }\npop { r0 }\npush { r5 }\npop { r2 }\npush { r6 }\npop { r3 }\nbl 0x00037e70\nldr r0,[sp,#0x1c]\nbl 0x00037b90\n'
p949
S'f0 b5\n03 af\nc9 b0\na7 49\n79 44\n09 68\n09 68\n48 91\n09 21\n49 01\n44 58\ne0 6b\n05 90\n20 6c\n07 90\n17 f0 c9 fb\n01 b4\n20 bc\n17 f0 bd fb\n01 b4\n40 bc\n17 f0 c9 fb\n69 46\n08 60\n9c 49\n79 44\n10 b4\n01 bc\n20 b4\n04 bc\n40 b4\n08 bc\n17 f0 bd fc\n07 98\n17 f0 4a fb\n'
p950
S'.text:000204ac\n.text:000204ae\n.text:000204b0\n.text:000204b2\n.text:000204b4\n.text:000204b6\n.text:000204b8\n.text:000204ba\n.text:000204bc\n.text:000204be\n.text:000204c0\n.text:000204c2\n.text:000204c4\n.text:000204c6\n.text:000204c8\n.text:000204ca\n.text:000204ce\n.text:000204d0\n.text:000204d2\n.text:000204d6\n.text:000204d8\n.text:000204da\n.text:000204de\n.text:000204e0\n.text:000204e2\n.text:000204e4\n.text:000204e6\n.text:000204e8\n.text:000204ea\n.text:000204ec\n.text:000204ee\n.text:000204f0\n.text:000204f2\n.text:000204f6\n.text:000204f8\n'
p951
tp952
sS'lame_get_maskingadjust'
p953
(S'\n__stdcall lame_get_maskingadjust(lame_global_flags * gfp)\n'
p954
V\u000a/* WARNING: Control flow encountered bad instruction data */\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000afloat lame_get_maskingadjust(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  undefined4 uVar6;\u000a  code *pcVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int unaff_r4;\u000a  int unaff_r5;\u000a  uint unaff_r8;\u000a  undefined4 in_cr0;\u000a  undefined4 in_cr12;\u000a  int iStack00000004;\u000a  undefined4 uStack00000008;\u000a  undefined4 uStack0000000c;\u000a  undefined4 uStack00000010;\u000a  undefined4 uStack00000014;\u000a  undefined4 uStack00000018;\u000a  undefined4 uStack0000001c;\u000a  undefined4 uStack00000020;\u000a  int iStack00000024;\u000a  int iStack00000028;\u000a  uint uStack0000002c;\u000a  int iStack00000030;\u000a  int iStack00000040;\u000a  int iStack00000048;\u000a  int in_stack_0000004c;\u000a  int *piStack00000054;\u000a  int iStack00000058;\u000a  uint *puStack0000005c;\u000a  undefined4 *puStack00000064;\u000a  int iStack00000068;\u000a  int iStack0000006c;\u000a  int in_stack_00000070;\u000a  int in_stack_00000074;\u000a  int iStack0000007c;\u000a  uint *puStack00000080;\u000a  uint in_stack_00000084;\u000a  uint in_stack_00000088;\u000a  \u000a  *(lame_global_flags **)(unaff_r5 + DAT_0001ee28) = gfp;\u000a  *(undefined4 *)(unaff_r5 + DAT_0001ee2c) = *(undefined4 *)(unaff_r4 + 0x118);\u000a  if (*(int *)(unaff_r4 + 0x128) == 0) {\u000a    uVar1 = *(uint *)(unaff_r5 + DAT_0001ee30) & 0xfffffffd;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  else {\u000a    uVar1 = has_3DNow();\u000a    uVar1 = *(uint *)(unaff_r5 + DAT_0001ee30) & 0xfffffffd | (uVar1 & 1) << 1;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  if (*(int *)(unaff_r4 + 0x124) == 0) {\u000a    uVar1 = uVar1 & 0xfffffffe;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  else {\u000a    uVar1 = has_MMX();\u000a    uVar1 = *(uint *)(unaff_r5 + DAT_0001ee30) & 0xfffffffe | uVar1 & 1;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  if (*(int *)(unaff_r4 + 300) == 0) {\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1 & 0xfffffff3;\u000a  }\u000a  else {\u000a    uVar1 = has_SSE();\u000a    iVar2 = DAT_0001ee30;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) =\u000a         *(uint *)(unaff_r5 + DAT_0001ee30) & 0xfffffffb | (uVar1 & 1) << 2;\u000a    uVar1 = has_SSE2();\u000a    *(uint *)(unaff_r5 + iVar2) = *(uint *)(unaff_r5 + iVar2) & 0xfffffff7 | (uVar1 & 1) << 3;\u000a  }\u000a  iStack00000040 = unaff_r5 + DAT_0001ef9c;\u000a  if (*(int *)(unaff_r5 + DAT_0001ef9c) == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(1,DAT_0001efa0);\u000a  }\u000a  puStack00000064 = (undefined4 *)(unaff_r5 + lame_set_force_short_blocks);\u000a  if (*(int *)(unaff_r5 + lame_set_force_short_blocks) == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(1,DAT_0001efbc);\u000a  }\u000a  *(undefined4 *)(unaff_r5 + 0xa0) = *(undefined4 *)(unaff_r4 + 0x78);\u000a  iStack00000048 = 0xa4;\u000a  *(undefined4 *)(unaff_r5 + 0xa4) = *(undefined4 *)(unaff_r4 + 0x68);\u000a  iStack00000058 = 0xa8;\u000a  *(undefined4 *)(unaff_r5 + 0xa8) = *(undefined4 *)(unaff_r4 + 0x6c);\u000a  uStack00000020 = 0xac;\u000a  *(undefined4 *)(unaff_r5 + 0xac) = *(undefined4 *)(unaff_r4 + 0x70);\u000a  uStack00000018 = 0xb0;\u000a  *(undefined4 *)(unaff_r5 + 0xb0) = *(undefined4 *)(unaff_r4 + 0x74);\u000a  iVar2 = *(int *)(unaff_r4 + 8);\u000a  *(int *)(unaff_r5 + 0x44) = iVar2;\u000a  iStack00000030 = unaff_r5 + 0xa0;\u000a  if (iVar2 == 1) {\u000a    *(undefined4 *)(unaff_r4 + 0x30) = 3;\u000a    *(undefined4 *)(unaff_r5 + 0x48) = 1;\u000aLAB_0001ec5e:\u000a    uVar3 = 0;\u000a    *(undefined4 *)(unaff_r4 + 0x34) = 0;\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = *(int *)(unaff_r4 + 0x30);\u000a    uVar3 = 1;\u000a    if (iVar2 != 3) {\u000a      uVar3 = 2;\u000a    }\u000a    *(undefined4 *)(unaff_r5 + 0x48) = uVar3;\u000a    if (iVar2 == 3) goto LAB_0001ec5e;\u000a    uVar3 = *(undefined4 *)(unaff_r4 + 0x34);\u000a    iVar2 = 2;\u000a  }\u000a  piStack00000054 = (int *)(unaff_r5 + 0x48);\u000a  *(undefined4 *)(unaff_r5 + 0x50) = uVar3;\u000a  iVar4 = *(int *)(unaff_r4 + 0x9c);\u000a  puStack0000005c = (uint *)(unaff_r4 + 0x9c);\u000a  if ((iVar4 == 4) || (iVar4 == 1)) {\u000aLAB_0001ed14:\u000a    *(undefined4 *)(unaff_r5 + 0x98) = *(undefined4 *)(unaff_r4 + 0x38);\u000a    iStack00000024 = unaff_r5 + 0x98;\u000a    iVar2 = 0xa0;\u000a  }\u000a  else {\u000a    if (iVar4 != 0) {\u000a      *(undefined4 *)(unaff_r4 + 0x38) = in_stack_00000074;\u000a      goto LAB_0001ed14;\u000a    }\u000a    if ((*(int *)(unaff_r4 + 0xa8) != 0x80) && (*(int *)(unaff_r4 + 0x60) == 0)) {\u000a      *(int *)(unaff_r4 + 0x60) = *(int *)(unaff_r4 + 0xa8);\u000a    }\u000a    in_stack_00000088 = 0xa0;\u000a    *(undefined4 *)(unaff_r5 + 0x98) = *(undefined4 *)(unaff_r4 + 0x38);\u000a    iStack00000024 = unaff_r5 + 0x98;\u000a    if (*(int *)(unaff_r4 + 0x60) == 0) {\u000a      uVar1 = *(uint *)(unaff_r4 + 100);\u000a      in_stack_00000084 = iVar2;\u000a      puStack00000080 = (uint *)__aeabi_fcmpeq(uVar1,0);\u000a      __unordsf2(uVar1,0);\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(DAT_0001efc0 & uVar1);\u000a    }\u000a    in_stack_00000084 = iVar2;\u000a    iVar4 = __aeabi_fcmpgt(*(undefined4 *)(unaff_r4 + 100),0);\u000a    iVar2 = in_stack_00000088;\u000a    if (iVar4 != 0) {\u000a      iVar2 = *(int *)(unaff_r4 + 0x10);\u000a      if (iVar2 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __floatsidf(*(undefined4 *)(unaff_r4 + 0xc));\u000a      }\u000a      iVar4 = iVar2 * in_stack_00000084;\u000a      in_stack_00000084 = iVar2;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(iVar4 * 0x10);\u000a    }\u000a  }\u000a  uStack0000002c = *(uint *)(unaff_r4 + 0x10);\u000a  if (uStack0000002c == 0) {\u000a    uVar1 = 0;\u000a    if ((*puStack0000005c == 4) || (*puStack0000005c == 1)) {\u000a      uVar3 = __floatsisf(*(undefined4 *)(unaff_r4 + iStack00000048));\u000a                    /* WARNING: Subroutine does not return */\u000a      __addsf3(uVar3,*(undefined4 *)(unaff_r4 + 0xa0));\u000a    }\u000a  }\u000a  else {\u000a    if (DAT_0001efd8 < (int)uStack0000002c) {\u000a      iVar4 = *(int *)(unaff_r4 + iStack00000058);\u000a      if (DAT_0001efe0 < (int)uStack0000002c) {\u000a        if (iVar4 < 0x21) {\u000a          iVar4 = 0x20;\u000a        }\u000a        if (0x13f < iVar4) {\u000a          iVar4 = 0x140;\u000a        }\u000a      }\u000a      else {\u000a        if (iVar4 < 9) {\u000a          iVar4 = 8;\u000a        }\u000a        if (0x9f < iVar4) {\u000a          iVar4 = iVar2;\u000a        }\u000a      }\u000a      *(int *)(unaff_r4 + 0xa8) = iVar4;\u000a      uVar1 = uStack0000002c;\u000a    }\u000a    else {\u000a      iVar2 = *(int *)(unaff_r4 + iStack00000058);\u000a      if (iVar2 < 9) {\u000a        iVar2 = 8;\u000a      }\u000a      if (0x3f < iVar2) {\u000a        iVar2 = 0x40;\u000a      }\u000a      *(int *)(unaff_r4 + iStack00000058) = iVar2;\u000a      uVar1 = uStack0000002c;\u000a    }\u000a  }\u000a  uStack0000002c = 0xb8;\u000a  uVar5 = *(uint *)(unaff_r4 + 0xb8);\u000a  puStack00000080 = (uint *)(unaff_r4 + 0xb8);\u000a  if (uVar5 != 0) goto LAB_0001f0ca;\u000a  uVar1 = *puStack0000005c;\u000a  if (uVar1 < 5) {\u000a    switch(uVar1) {\u000a    case 0:\u000a      iVar2 = nearestBitrateFullIndex((uint)*(ushort *)(unaff_r4 + 0x60));\u000a      iVar2 = iVar2 << 3;\u000a      iVar4 = DAT_0001f3b4 + 0x1f01e;\u000a      break;\u000a    default:\u000a      pcVar7 = DAT_0001f3a4;\u000a      if (*(uint *)(unaff_r4 + iStack00000048) < 10) {\u000a        iVar2 = *(uint *)(unaff_r4 + iStack00000048) << 2;\u000a        pcVar7 = lame_get_force_short_blocks + DAT_0001f3a8;\u000a        goto LAB_0001f030;\u000a      }\u000a      goto LAB_0001f0a6;\u000a    case 2:\u000a      if (0xfffe105b < (&switchdataD_0001efa4)[uVar1]) {\u000a                    /* WARNING: Bad instruction - Truncating control flow here */\u000a        halt_baddata();\u000a      }\u000a      iVar2 = iStack00000048;\u000a      pcVar7 = DAT_0001f3ac;\u000a      if ((int)&switchdataD_0001efa4 + (&switchdataD_0001efa4)[uVar1] == 0) {\u000a        register0x00000054 =\u000a             (BADSPACEBASE *)(iStack00000048 + ((uint)register0x00000054 >> (unaff_r8 & 0xff)));\u000a        iVar2 = iStack00000048;\u000a        pcVar7 = DAT_0001f3ac;\u000a      }\u000aLAB_0001f030:\u000a      *(code **)((undefined *)register0x00000054 + 0x7c) = pcVar7 + iVar2;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(*(undefined4 *)(pcVar7 + iVar2));\u000a    case 3:\u000a      coprocessor_function2(0,0xd,6,in_cr0,in_cr12,in_cr0);\u000a      iVar4 = _UNK_0001f3bc + 0x1f0a0;\u000a      iVar2 = iStack00000058;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(*(undefined4 *)(iVar4 + iVar2 + 4));\u000a  }\u000a  pcVar7 = DAT_0001f3ac;\u000a  if (*(uint *)(unaff_r4 + iStack00000048) < 10) {\u000a    iVar2 = *(uint *)(unaff_r4 + iStack00000048) << 2;\u000a    pcVar7 = (code *)(DAT_0001f3b0 + 0x1f00e);\u000a    goto LAB_0001f030;\u000a  }\u000aLAB_0001f0a6:\u000a  if ((*(int *)(unaff_r4 + 0x30) == 3) && ((*puStack0000005c == 3 || (*puStack0000005c == 0)))) {\u000a    __muldf3(0,pcVar7,0,DAT_0001f3c0);\u000a  }\u000a  uVar5 = __fixdfsi();\u000a  *puStack00000080 = uVar5;\u000a  uVar1 = *(uint *)(unaff_r4 + 0x10);\u000aLAB_0001f0ca:\u000a  if (uVar1 == 0) {\u000a    uVar8 = *(uint *)(unaff_r4 + 0xc);\u000a    if (uVar5 * 2 - uVar8 != 0 && (int)uVar8 <= (int)(uVar5 * 2)) {\u000a      uVar5 = (int)(uVar8 + (uVar8 >> 0x1f)) >> 1;\u000a      *puStack00000080 = uVar5;\u000a    }\u000a    uVar1 = lame_get_totalframes;\u000a    if ((((((int)uVar8 <= DAT_0001f3c8) && (uVar1 = DAT_0001f3cc, (int)uVar8 <= DAT_0001f3d0)) &&\u000a         (uVar1 = 32000, (int)uVar8 <= DAT_0001f3d4)) &&\u000a        ((uVar1 = DAT_0001f3d8, (int)uVar8 <= DAT_0001f3dc &&\u000a         (uVar1 = DAT_0001f3e0, (int)uVar8 <= DAT_0001f3e4)))) &&\u000a       (((uVar1 = 16000, (int)uVar8 <= DAT_0001f3e8 &&\u000a         ((uVar1 = DAT_0001f3ec, (int)uVar8 <= DAT_0001f3f0 &&\u000a          (uVar1 = DAT_0001f3f4, (int)uVar8 <= DAT_0001f3f8)))) &&\u000a        (uVar1 = 8000, (int)uVar8 <= DAT_0001f3fc)))) {\u000a      uVar1 = DAT_0001f3cc;\u000a    }\u000a    if (uVar5 != 0xffffffff) {\u000a      uVar9 = DAT_0001f3cc;\u000a      if (DAT_0001f400 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = 32000;\u000a      if (DAT_0001f404 <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = DAT_0001f3d8;\u000a      if (DAT_0001f408 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = DAT_0001f3e0;\u000a      if (DAT_0001f40c <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = 16000;\u000a      if (DAT_0001f410 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = DAT_0001f3ec;\u000a      if (DAT_0001f414 <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = DAT_0001f3f4;\u000a      if (DAT_0001f418 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = 8000;\u000a      if (DAT_0001f41c <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      if ((((((int)uVar8 < (int)uVar1) &&\u000a            (uVar1 = lame_get_totalframes, (int)uVar8 <= (int)DAT_0001f3cc)) &&\u000a           (uVar1 = DAT_0001f3cc, (int)uVar8 < 0x7d01)) &&\u000a          (((uVar1 = 32000, (int)uVar8 <= (int)DAT_0001f3d8 &&\u000a            (uVar1 = DAT_0001f3d8, (int)uVar8 <= (int)DAT_0001f3e0)) &&\u000a           ((uVar1 = DAT_0001f3e0, (int)uVar8 < 0x3e81 &&\u000a            ((uVar1 = 16000, (int)uVar8 <= (int)DAT_0001f3ec &&\u000a             (uVar1 = DAT_0001f3ec, (int)uVar8 <= (int)DAT_0001f3f4)))))))) &&\u000a         (uVar1 = DAT_0001f3f4, (int)uVar8 < 0x1f41)) {\u000a        uVar1 = 8000;\u000a      }\u000a    }\u000a    *(uint *)(unaff_r4 + 0x10) = uVar1;\u000a  }\u000a  in_stack_00000084 = *puStack0000005c;\u000a  if ((in_stack_00000084 == 4) || (in_stack_00000084 == 1)) {\u000a    uVar8 = DAT_0001f3d8;\u000a    if ((int)uVar5 <= (int)DAT_0001f3d8) {\u000a      uVar8 = uVar5;\u000a    }\u000a    uVar5 = (int)(uVar1 + (uVar1 >> 0x1f)) >> 1;\u000a    if ((int)uVar8 <= (int)uVar5) {\u000a      uVar5 = uVar8;\u000a    }\u000a    *puStack00000080 = uVar5;\u000a  }\u000a  else {\u000a    uVar8 = DAT_0001f420;\u000a    if ((int)uVar5 <= (int)DAT_0001f420) {\u000a      uVar8 = uVar5;\u000a    }\u000a    uVar5 = (int)(uVar1 + (uVar1 >> 0x1f)) >> 1;\u000a    if ((int)uVar8 <= (int)uVar5) {\u000a      uVar5 = uVar8;\u000a    }\u000a    *puStack00000080 = uVar5;\u000a    if (in_stack_00000084 == 0) {\u000a      in_stack_00000088 = uVar1;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(uVar1 * *piStack00000054 * 0x10);\u000a    }\u000a  }\u000a  if (in_stack_00000084 == 3) {\u000a    in_stack_00000088 = uVar1;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(uVar1 * *piStack00000054 * 0x10);\u000a  }\u000a  if (*(int *)(unaff_r4 + 0x24) == 0) {\u000a    *(undefined4 *)(unaff_r4 + 0x3c) = 0;\u000a    *(undefined4 *)(unaff_r4 + 0x40) = 0;\u000a    *(undefined4 *)(unaff_r5 + 0x84) = 0;\u000a    *(undefined4 *)(unaff_r5 + 0x80) = 0;\u000a    *(undefined4 *)(unaff_r5 + 0x88) = 0;\u000a    in_stack_00000088 = uVar1;\u000a  }\u000a  else {\u000a    iVar2 = *(int *)(unaff_r4 + 0x3c);\u000a    iVar4 = *(int *)(unaff_r4 + 0x40);\u000a    *(int *)(unaff_r5 + 0x80) = iVar2;\u000a    *(int *)(unaff_r5 + 0x88) = iVar4;\u000a    if (iVar4 != 0) {\u000a      *(undefined4 *)(unaff_r5 + 0x84) = 1;\u000a    }\u000a    in_stack_00000088 = uVar1;\u000a    if (iVar2 != 0) {\u000a      in_stack_00000088 = uVar1;\u000a      iVar2 = InitGainAnalysis(*puStack00000064,uVar1);\u000a      if (iVar2 == 0) {\u000a        FUN_0001fb98();\u000a      }\u000a      in_stack_00000084 = *puStack0000005c;\u000a      uVar5 = *puStack00000080;\u000a      in_stack_00000088 = *(uint *)(unaff_r4 + 0x10);\u000a    }\u000a  }\u000a  uVar3 = in_stack_00000074;\u000a  *(undefined4 *)(unaff_r5 + 0x90) = *(undefined4 *)(unaff_r4 + 0x80);\u000a  *(uint *)(unaff_r5 + 0x34) = uVar5;\u000a  iStack0000007c = *(int *)(unaff_r4 + 0xbc);\u000a  *(int *)(unaff_r5 + 0x38) = iStack0000007c;\u000a  *(undefined4 *)(unaff_r5 + 0x3c) = *(undefined4 *)(unaff_r4 + 0xc);\u000a  *(uint *)(unaff_r5 + 0x40) = in_stack_00000088;\u000a  uVar6 = 1;\u000a  if (DAT_0001f428 <= (int)in_stack_00000088) {\u000a    uVar6 = 2;\u000a  }\u000a  *(undefined4 *)(unaff_r5 + 0x4c) = uVar6;\u000a  iStack00000028 = in_stack_0000004c << 6;\u000a  *(int *)(unaff_r5 + DAT_0001f42c) = iStack00000028;\u000a  if (1 < in_stack_00000084 - 1) {\u000a    if (in_stack_00000084 == 3) {\u000a      uStack0000000c = 0xbc;\u000a      puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(in_stack_00000088 * *piStack00000054 * 0x10);\u000a    }\u000a    if (in_stack_00000084 != 4) {\u000a      uStack0000000c = 0xbc;\u000a      puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(in_stack_00000088 * *piStack00000054 * 0x10);\u000a    }\u000a  }\u000a  uStack0000000c = 0xbc;\u000a  *(undefined4 *)(unaff_r4 + 100) =\u000a       *(undefined4 *)(DAT_0001f430 + 0x1f382 + *(int *)(unaff_r4 + iStack00000048) * 4);\u000a  iVar2 = *(int *)(unaff_r4 + 0x30);\u000a  if (iVar2 == 4) {\u000a    iVar2 = 1;\u000a    *(undefined4 *)(unaff_r4 + 0x30) = 1;\u000a  }\u000a  *(int *)(unaff_r5 + in_stack_00000070) = iVar2;\u000a  iStack00000004 = unaff_r5 + 0xb4;\u000a  if (0 < iStack0000007c) {\u000a    puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(iStack0000007c);\u000a  }\u000a  *(undefined4 *)(unaff_r5 + 0x100) = in_stack_00000074;\u000a  *(undefined4 *)(unaff_r5 + 0x104) = in_stack_00000074;\u000a  puStack00000064 = (undefined4 *)in_stack_00000074;\u000a  uStack00000010 = 0xf8;\u000a  *(undefined4 *)(unaff_r5 + 0xf8) = in_stack_00000074;\u000a  uStack00000014 = 0xfc;\u000a  *(undefined4 *)(unaff_r5 + 0xfc) = in_stack_00000074;\u000a  in_stack_00000070 = unaff_r5 + 0xfc;\u000a  iStack0000006c = unaff_r5 + 0xf8;\u000a  if ((0 < (int)uVar5) && ((int)uVar5 < (int)(in_stack_00000088 + (in_stack_00000088 >> 0x1f)) >> 1)\u000a     ) {\u000a    puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(uVar5);\u000a  }\u000a  uStack0000001c = 1;\u000a  in_stack_00000074 = unaff_r5 + 0x100;\u000a  uStack00000008 = 0x104;\u000a  iStack00000068 = unaff_r5 + 0x104;\u000a  puStack00000080 = (uint *)uVar5;\u000a  __aeabi_fcmpgt(uVar3,0);\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(uVar3);\u000a}\u000a\u000a
p955
S'ldr r1,[0x0001ee28]\nstr r0,[r5,r1]\nmov r0,#0x23\nlsl r0,r0,#0x3\nldr r0,[r4,r0]\nldr r1,[0x0001ee2c]\nstr r0,[r5,r1]\nmov r0,#0x25\nlsl r0,r0,#0x3\nldr r0,[r4,r0]\ncmp r0,#0x0\nbeq 0x0001eb22\nstr r3,[sp,#0x34]\nstr r2,[sp,#0x38]\n'
p956
S'ce 49\n68 50\n23 20\nc0 00\n20 58\ncc 49\n68 50\n25 20\nc0 00\n20 58\n00 28\n0d d0\n0d 93\n0e 92\n'
p957
S'.text:0001eaee\n.text:0001eaf0\n.text:0001eaf2\n.text:0001eaf4\n.text:0001eaf6\n.text:0001eaf8\n.text:0001eafa\n.text:0001eafc\n.text:0001eafe\n.text:0001eb00\n.text:0001eb02\n.text:0001eb04\n.text:0001eb06\n.text:0001eb08\n'
p958
tp959
sS'__aeabi_cdcmple'
p960
(S'\n__stdcall __aeabi_cdcmple()\n'
p961
V\u000aundefined4 __aeabi_cdcmple(undefined4 uParm1)\u000a\u000a{\u000a  __eqdf2();\u000a  return uParm1;\u000a}\u000a\u000a
p962
S'stmdb sp!,{ r0 lr }\nbl 0x00016b58\ncmp r0,#0x0\ncmnmi r0,#0x0\nldmia sp!,{r0 pc }\n'
p963
S'01 40 2d e9\n0f 84 ff eb\n00 00 50 e3\n00 00 70 43\n01 80 bd e8\n'
p964
S'.text:00035b10\n.text:00035b14\n.text:00035b18\n.text:00035b1c\n.text:00035b20\n'
p965
tp966
sS'lame_set_maskingadjust'
p967
(S'\n__stdcall lame_set_maskingadjust()\n'
p968
V\u000avoid lame_set_maskingadjust(void)\u000a\u000a{\u000a  (*(lame_set_maskingadjust_short + DAT_0003816c))();\u000a  return;\u000a}\u000a\u000a
p969
S'ldr r12,[0x3816c]\nadd pc,r12,pc\n'
p970
S'00 c0 9f e5\n0f f0 8c e0\n'
p971
S'.text:00038164\n.text:00038168\n'
p972
tp973
sS'lame_get_VBR_max_bitrate_kbps'
p974
(S'\n__stdcall lame_get_VBR_max_bitrate_kbps(lame_global_flags * gfp)\n'
p975
V\u000aint lame_get_VBR_max_bitrate_kbps(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  int unaff_r4;\u000a  int unaff_r5;\u000a  int iVar2;\u000a  int unaff_r6;\u000a  lame_global_flags *plStack00000004;\u000a  \u000a  do {\u000a    iVar2 = unaff_r5;\u000a    iVar1 = unaff_r4 + unaff_r6;\u000a    unaff_r6 = unaff_r6 + 2;\u000a    unaff_r5 = iVar2 + 1;\u000a  } while (*(short *)(iVar1 + 2) != 0);\u000a  if (unaff_r5 != 0) {\u000a    plStack00000004 = gfp;\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(iVar2 + 2,2);\u000a  }\u000a  return (int)gfp;\u000a}\u000a\u000a
p976
S'add r1,r4,r6\nldrh r1,[r1,#0x2]\nadd r6,#0x2\nadd r5,#0x1\ncmp r1,#0x0\nbne 0x0001e95e\nstr r0,[sp,#0x4]\nadd r0,r5,#0x1\ncmp r5,#0x0\nbeq 0x0001e9a4\nmov r1,#0x2\nbl 0x00037cb0\n'
p977
S'a1 19\n49 88\n02 36\n01 35\n00 29\nf9 d1\n01 90\n68 1c\n00 2d\n18 d0\n02 21\n19 f0 9c f9\n'
p978
S'.text:0001e95e\n.text:0001e960\n.text:0001e962\n.text:0001e964\n.text:0001e966\n.text:0001e968\n.text:0001e96a\n.text:0001e96c\n.text:0001e96e\n.text:0001e970\n.text:0001e972\n.text:0001e974\n'
p979
tp980
sS'lame_encode_mp3_frame'
p981
(S'\n__stdcall lame_encode_mp3_frame()\n'
p982
V\u000avoid lame_encode_mp3_frame(void)\u000a\u000a{\u000a  (*(flush_bitstream + DAT_0003802c))();\u000a  return;\u000a}\u000a\u000a
p983
S'ldr r12,[0x3802c]\nadd pc,r12,pc\n'
p984
S'00 c0 9f e5\n0f f0 8c e0\n'
p985
S'.text:00038024\n.text:00038028\n'
p986
tp987
sS'getframebits'
p988
(S'\n__stdcall getframebits()\n'
p989
V\u000avoid getframebits(void)\u000a\u000a{\u000a  (*(athAdjust + DAT_000383bc))();\u000a  return;\u000a}\u000a\u000a
p990
S'ldr r12,[0x383bc]\nadd pc,r12,pc\n'
p991
S'00 c0 9f e5\n0f f0 8c e0\n'
p992
S'.text:000383b4\n.text:000383b8\n'
p993
tp994
sS'unwind_phase2_forced'
p995
(S'\n__stdcall unwind_phase2_forced()\n'
p996
V\u000aint unwind_phase2_forced(int iParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  code *pcVar5;\u000a  undefined4 uVar6;\u000a  undefined4 local_3e8;\u000a  undefined4 local_3e4;\u000a  undefined4 uStack992;\u000a  undefined4 uStack988;\u000a  undefined4 uStack984;\u000a  undefined4 local_3d4;\u000a  undefined4 uStack976;\u000a  undefined4 uStack972;\u000a  undefined4 uStack968;\u000a  undefined4 local_3c4;\u000a  undefined4 uStack960;\u000a  undefined4 uStack956;\u000a  undefined4 uStack952;\u000a  undefined4 local_3b4;\u000a  undefined4 local_3b0;\u000a  undefined4 uStack940;\u000a  undefined4 local_3a8;\u000a  undefined4 local_3a4;\u000a  undefined auStack520 [56];\u000a  undefined4 local_1d0;\u000a  \u000a  pcVar5 = *(code **)(iParm1 + 0xc);\u000a  uVar6 = *(undefined4 *)(iParm1 + 0x18);\u000a  local_3e4 = *(undefined4 *)(iParm2 + 4);\u000a  uStack992 = *(undefined4 *)(iParm2 + 8);\u000a  uStack988 = *(undefined4 *)(iParm2 + 0xc);\u000a  uStack984 = *(undefined4 *)(iParm2 + 0x10);\u000a  local_3d4 = *(undefined4 *)(iParm2 + 0x14);\u000a  uStack976 = *(undefined4 *)(iParm2 + 0x18);\u000a  uStack972 = *(undefined4 *)(iParm2 + 0x1c);\u000a  uStack968 = *(undefined4 *)(iParm2 + 0x20);\u000a  local_3c4 = *(undefined4 *)(iParm2 + 0x24);\u000a  uStack960 = *(undefined4 *)(iParm2 + 0x28);\u000a  uStack956 = *(undefined4 *)(iParm2 + 0x2c);\u000a  uStack952 = *(undefined4 *)(iParm2 + 0x30);\u000a  local_3b4 = *(undefined4 *)(iParm2 + 0x34);\u000a  local_3b0 = *(undefined4 *)(iParm2 + 0x38);\u000a  uStack940 = *(undefined4 *)(iParm2 + 0x3c);\u000a  local_3a8 = *(undefined4 *)(iParm2 + 0x40);\u000a  iVar4 = 0;\u000a  local_3e8 = 0;\u000a  do {\u000a    iVar1 = get_eit_entry(iParm1,local_3a8);\u000a    if (iParm3 == 0) {\u000a      uVar3 = 9;\u000a    }\u000a    else {\u000a      uVar3 = 10;\u000a    }\u000a    if (iVar1 == 0) {\u000a      *(undefined4 *)(iParm1 + 0x14) = local_3a8;\u000a      memcpy(auStack520,&local_3e8,0x1e0);\u000a      iVar4 = (**(code **)(iParm1 + 0x10))(uVar3,iParm1,auStack520);\u000a      local_3a4 = local_1d0;\u000a    }\u000a    else {\u000a      uVar3 = uVar3 | 0x10;\u000a      local_3a4 = local_3b0;\u000a    }\u000a    iVar2 = (*pcVar5)(1,uVar3,iParm1,iParm1,&local_3e8,uVar6);\u000a    if (iVar2 != 0) {\u000a      return 9;\u000a    }\u000a    if (iVar1 != 0) {\u000a      return iVar1;\u000a    }\u000a    memcpy(&local_3e8,auStack520,0x1e0);\u000a    iParm3 = iVar1;\u000a  } while (iVar4 == 8);\u000a  if (iVar4 == 7) {\u000a    _Unwind_DebugHook(0,local_3a8);\u000a    restore_core_regs(&local_3e4);\u000a  }\u000a  return 9;\u000a}\u000a\u000a
p997
S'stmdb sp!,{ r4 r5 r6 r7 r8 r9 r10 r11 lr }\nadd lr,r1,#0x4\nldr r8,[r0,#0xc]\nldr r9,[r0,#0x18]\ncpy r4,r0\ncpy r6,r2\nldmia lr!,{r0 r1 r2 r3 }\nsub sp,sp,#0x3cc\nadd r12,sp,#0xc\nstmia r12!,{r0 r1 r2 r3 }\nldmia lr!,{r0 r1 r2 r3 }\nstmia r12!,{r0 r1 r2 r3 }\nldmia lr!,{r0 r1 r2 r3 }\nstmia r12!,{r0 r1 r2 r3 }\nldmia lr,{r0 r1 r2 r3 }\nmov r7,#0x0\nadd r11,sp,#0x8\nadd r10,sp,#0x1e8\nstmia r12,{r0 r1 r2 r3 }\nstr r7,[sp,#0x8]\ncpy r0,r4\nldr r1,[sp,#0x48]\nbl 0x000364cc\ncmp r6,#0x0\nmovne r6,#0xa\nmoveq r6,#0x9\nsubs r5,r0,#0x0\norrne r6,r6,#0x10\nldrne r3,[sp,#0x40]\nbne 0x0003676c\nldr r3,[sp,#0x48]\nstr r3,[r4,#0x14]\ncpy r1,r11\nmov r2,#0x1e0\ncpy r0,r10\nbl 0x00016c0c\nldr r3,[r4,#0x10]\ncpy r0,r6\ncpy r1,r4\ncpy r2,r10\nblx r3\nldr r3,[sp,#0x220]\ncpy r7,r0\nstr r3,[sp,#0x4c]\nstr r11,[sp,#0x0]\nstr r9,[sp,#0x4]\nmov r0,#0x1\ncpy r1,r6\ncpy r2,r4\ncpy r3,r4\nblx r8\ncmp r0,#0x0\nbne 0x000367d4\ncmp r5,#0x0\nbne 0x000367dc\ncpy r0,r11\ncpy r1,r10\nmov r2,#0x1e0\nbl 0x00016c0c\ncmp r7,#0x8\ncpy r6,r5\nbeq 0x00036710\ncmp r7,#0x7\nbne 0x000367d4\ncpy r0,r5\nldr r1,[sp,#0x48]\nbl 0x00036658\nadd r0,sp,#0xc\nbl 0x00016c00\nmov r0,#0x9\nb 0x000367e0\ncpy r0,r5\nadd sp,sp,#0x3cc\nldmia sp!,{ r4 r5 r6 r7 r8 r9 r10 r11 pc }\n'
p998
S'f0 4f 2d e9\n04 e0 81 e2\n0c 80 90 e5\n18 90 90 e5\n00 40 a0 e1\n02 60 a0 e1\n0f 00 be e8\nf3 df 4d e2\n0c c0 8d e2\n0f 00 ac e8\n0f 00 be e8\n0f 00 ac e8\n0f 00 be e8\n0f 00 ac e8\n0f 00 9e e8\n00 70 a0 e3\n08 b0 8d e2\n7a af 8d e2\n0f 00 8c e8\n08 70 8d e5\n04 00 a0 e1\n48 10 9d e5\n6b ff ff eb\n00 00 56 e3\n0a 60 a0 13\n09 60 a0 03\n00 50 50 e2\n10 60 86 13\n40 30 9d 15\n0c 00 00 1a\n48 30 9d e5\n14 30 84 e5\n0b 10 a0 e1\n1e 2e a0 e3\n0a 00 a0 e1\n2e 81 ff eb\n10 30 94 e5\n06 00 a0 e1\n04 10 a0 e1\n0a 20 a0 e1\n33 ff 2f e1\n20 32 9d e5\n00 70 a0 e1\n4c 30 8d e5\n00 b0 8d e5\n04 90 8d e5\n01 00 a0 e3\n06 10 a0 e1\n04 20 a0 e1\n04 30 a0 e1\n38 ff 2f e1\n00 00 50 e3\n0f 00 00 1a\n00 00 55 e3\n0f 00 00 1a\n0b 00 a0 e1\n0a 10 a0 e1\n1e 2e a0 e3\n17 81 ff eb\n08 00 57 e3\n05 60 a0 e1\nd5 ff ff 0a\n07 00 57 e3\n04 00 00 1a\n05 00 a0 e1\n48 10 9d e5\na2 ff ff eb\n0c 00 8d e2\n0a 81 ff eb\n09 00 a0 e3\n00 00 00 ea\n05 00 a0 e1\nf3 df 8d e2\nf0 8f bd e8\n'
p999
S'.text:000366c0\n.text:000366c4\n.text:000366c8\n.text:000366cc\n.text:000366d0\n.text:000366d4\n.text:000366d8\n.text:000366dc\n.text:000366e0\n.text:000366e4\n.text:000366e8\n.text:000366ec\n.text:000366f0\n.text:000366f4\n.text:000366f8\n.text:000366fc\n.text:00036700\n.text:00036704\n.text:00036708\n.text:0003670c\n.text:00036710\n.text:00036714\n.text:00036718\n.text:0003671c\n.text:00036720\n.text:00036724\n.text:00036728\n.text:0003672c\n.text:00036730\n.text:00036734\n.text:00036738\n.text:0003673c\n.text:00036740\n.text:00036744\n.text:00036748\n.text:0003674c\n.text:00036750\n.text:00036754\n.text:00036758\n.text:0003675c\n.text:00036760\n.text:00036764\n.text:00036768\n.text:0003676c\n.text:00036770\n.text:00036774\n.text:00036778\n.text:0003677c\n.text:00036780\n.text:00036784\n.text:00036788\n.text:0003678c\n.text:00036790\n.text:00036794\n.text:00036798\n.text:0003679c\n.text:000367a0\n.text:000367a4\n.text:000367a8\n.text:000367ac\n.text:000367b0\n.text:000367b4\n.text:000367b8\n.text:000367bc\n.text:000367c0\n.text:000367c4\n.text:000367c8\n.text:000367cc\n.text:000367d0\n.text:000367d4\n.text:000367d8\n.text:000367dc\n.text:000367e0\n.text:000367e4\n'
p1000
tp1001
sS'has_SSE2'
p1002
(S'\n__stdcall has_SSE2()\n'
p1003
V\u000avoid has_SSE2(void)\u000a\u000a{\u000a  (*(__aeabi_fcmpeq + DAT_00037ddc))();\u000a  return;\u000a}\u000a\u000a
p1004
S'ldr r12,[0x37ddc]\nadd pc,r12,pc\n'
p1005
S'00 c0 9f e5\n0f f0 8c e0\n'
p1006
S'.text:00037dd4\n.text:00037dd8\n'
p1007
tp1008
sS'ceil'
p1009
(S'\n__stdcall ceil(double __x)\n'
p1010
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000adouble ceil(double __x)\u000a\u000a{\u000a  double dVar1;\u000a  \u000a  dVar1 = (double)(*(__floatunsisf + DAT_00037c2c))();\u000a  return dVar1;\u000a}\u000a\u000a
p1011
S'ldr r12,[0x37c2c]\nadd pc,r12,pc\n'
p1012
S'00 c0 9f e5\n0f f0 8c e0\n'
p1013
S'.text:00037c24\n.text:00037c28\n'
p1014
tp1015
sS'FUN_000220ee'
p1016
(S'\n__stdcall FUN_000220ee(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined4 param_6, undefined4 param_7, undefined param_8, undefined param_9, undefined4 param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23, undefined4 param_24, undefined4 param_25)\n'
p1017
V\u000avoid FUN_000220ee(undefined4 param_1,int param_2,undefined4 param_3,undefined4 *param_4)\u000a\u000a{\u000a  int extraout_r1;\u000a  int unaff_r4;\u000a  int iVar1;\u000a  int in_stack_00000040;\u000a  \u000a  if (*(int *)(unaff_r4 + 0x4c) < 1) {\u000a    FUN_00022eee();\u000a    param_2 = extraout_r1;\u000a  }\u000a  iVar1 = unaff_r4 + in_stack_00000040 * 0x1200 + 0x900 + DAT_00022278;\u000a  window_subband(param_2 + 0x478,iVar1);\u000a  window_subband(param_2 + 0x4f8,iVar1 + 0x80);\u000a                    /* WARNING: Subroutine does not return */\u000a  __subsf3(0x80000000,*param_4);\u000a}\u000a\u000a
p1018
S'ldr r0,[r4,#0x4c]\ncmp r0,#0x1\nbge 0x000220f8\nbl 0x00022eee\nmov r0,#0x8f\nlsl r0,r0,#0x3\nadd r0,r1,r0\nstr r0,[sp,#0x3c]\nmov r1,#0x0\nstr r1,[sp,#0x30]\nldr r0,[sp,#0x28]\nstr r0,[sp,#0x50]\nldr r0,[sp,#0x24]\nstr r0,[sp,#0x4c]\nldr r0,[sp,#0x20]\nstr r0,[sp,#0x48]\nldr r0,[sp,#0x1c]\nstr r0,[sp,#0x90]\nstr r0,[sp,#0x8c]\nldr r0,[sp,#0x18]\nstr r0,[sp,#0x88]\nstr r5,[sp,#0x84]\nstr r5,[sp,#0x8]\nstr r6,[sp,#0x80]\nstr r6,[sp,#0x4]\nldr r0,[sp,#0x14]\n'
p1019
S'e0 6c\n01 28\n01 da\n00 f0 fb fe\n8f 20\nc0 00\n08 18\n0f 90\n00 21\n0c 91\n0a 98\n14 90\n09 98\n13 90\n08 98\n12 90\n07 98\n24 90\n23 90\n06 98\n22 90\n21 95\n02 95\n20 96\n01 96\n05 98\n'
p1020
S'.text:000220ee\n.text:000220f0\n.text:000220f2\n.text:000220f4\n.text:000220f8\n.text:000220fa\n.text:000220fc\n.text:000220fe\n.text:00022100\n.text:00022102\n.text:00022104\n.text:00022106\n.text:00022108\n.text:0002210a\n.text:0002210c\n.text:0002210e\n.text:00022110\n.text:00022112\n.text:00022114\n.text:00022116\n.text:00022118\n.text:0002211a\n.text:0002211c\n.text:0002211e\n.text:00022120\n.text:00022122\n'
p1021
tp1022
sS'exit'
p1023
(S'\n__stdcall exit(int __status)\n'
p1024
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(getframebits + DAT_000383ac))();\u000a  return;\u000a}\u000a\u000a
p1025
S'ldr r12,[0x383ac]\nadd pc,r12,pc\n'
p1026
S'00 c0 9f e5\n0f f0 8c e0\n'
p1027
S'.text:000383a4\n.text:000383a8\n'
p1028
tp1029
sS'FUN_000188a0'
p1030
(S'\n__stdcall FUN_000188a0(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19)\n'
p1031
V\u000avoid FUN_000188a0(undefined4 param_1,int param_2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int extraout_r1;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint unaff_r5;\u000a  int unaff_r6;\u000a  int iVar6;\u000a  undefined4 param_11;\u000a  int param_12;\u000a  uint param_13;\u000a  int param_15;\u000a  int param_16;\u000a  int param_18;\u000a  int *param_19;\u000a  \u000a  if (0 < *(int *)(unaff_r6 + 0x48)) {\u000a    param_12 = 0;\u000a    param_11 = 0;\u000a    do {\u000a      iVar4 = 0;\u000a      do {\u000a        iVar1 = *(int *)(unaff_r6 + param_12 * 0x10 + iVar4 * 4 + DAT_0001893c);\u000a        iVar6 = 1;\u000a        do {\u000a          iVar5 = param_15 - (unaff_r5 & param_13);\u000a          iVar2 = iVar6;\u000a          if (iVar5 <= iVar6) {\u000a            iVar2 = iVar5;\u000a          }\u000a          iVar6 = iVar6 - iVar2;\u000a          iVar3 = param_18 + param_16 * param_2 + ((int)unaff_r5 >> 3);\u000a          *(byte *)(iVar3 + DAT_00018934) =\u000a               *(byte *)(iVar3 + DAT_00018934) | (byte)((iVar1 >> iVar6) << iVar5 - iVar2);\u000a          unaff_r5 = iVar2 + unaff_r5;\u000a          param_2 = *param_19;\u000a        } while (0 < iVar6);\u000a        *(uint *)(param_18 + param_2 * param_16 + DAT_00018938) = unaff_r5;\u000a        iVar4 = iVar4 + 1;\u000a        unaff_r6 = param_18;\u000a      } while (iVar4 != 4);\u000a      param_12 = param_12 + 1;\u000a      unaff_r6 = param_18;\u000a    } while (param_12 < *(int *)(param_18 + 0x48));\u000a    FUN_00018944();\u000a    return;\u000a  }\u000a  param_11 = 0;\u000a  if (*(int *)(unaff_r6 + 0x48) < 1) {\u000a    FUN_00019276();\u000a    param_2 = extraout_r1;\u000a  }\u000a  FUN_00018960(*(undefined4 *)(unaff_r6 + param_2 * param_16 + DAT_0001895c),param_2,DAT_0001895c,0)\u000a  ;\u000a  return;\u000a}\u000a\u000a
p1032
S'ldr r4,[r6,#0x48]\nmov r0,#0x0\ncmp r4,#0x1\nblt 0x00018940\nstr r0,[sp,#0x74]\nstr r0,[sp,#0x6c]\nldr r2,[sp,#0x6c]\nstr r2,[sp,#0x7c]\nldr r0,[sp,#0x74]\nlsl r0,r0,#0x4\nadd r0,r6,r0\nlsl r3,r2,#0x2\nadd r0,r0,r3\nldr r3,[0x0001893c]\nldr r0,[r0,r3]\nstr r0,[sp,#0x88]\nmov r6,#0x1\npush { r5 }\npop { r0 }\npush { r5 }\npop { r4 }\nldr r2,[sp,#0x78]\nand r0,r2\nldr r2,[sp,#0x80]\nsub r3,r2,r0\ncmp r6,r3\npush { r6 }\npop { r0 }\nblt 0x000188de\npush { r3 }\npop { r0 }\nsub r3,r3,r0\nsub r6,r6,r0\nldr r5,[sp,#0x88]\nasr r5,r6\nlsl r5,r3\nldr r2,[sp,#0x84]\nmul r1,r2\nldr r2,[sp,#0x8c]\nadd r1,r2,r1\nasr r3,r4,#0x3\nadd r1,r1,r3\nldr r3,[0x00018934]\nldrb r2,[r1,r3]\norr r2,r5\npush { r4 }\npop { r5 }\nstrb r2,[r1,r3]\nadd r5,r0,r5\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r6,#0x0\nbgt 0x000188c2\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r6,[sp,#0x8c]\nadd r0,r6,r0\nldr r2,[0x00018938]\nstr r5,[r0,r2]\nldr r2,[sp,#0x7c]\nadd r2,#0x1\ncmp r2,#0x4\nbne 0x000188ae\nldr r4,[r6,#0x48]\nldr r0,[sp,#0x74]\nadd r0,#0x1\nstr r0,[sp,#0x74]\ncmp r0,r4\nblt 0x000188ac\nldr r5,[sp,#0x6c]\nb 0x00018944\n'
p1033
S'b4 6c\n00 20\n01 2c\n4b db\n1d 90\n1b 90\n1b 9a\n1f 92\n1d 98\n00 01\n30 18\n93 00\nc0 18\n20 4b\nc0 58\n22 90\n01 26\n20 b4\n01 bc\n20 b4\n10 bc\n1e 9a\n10 40\n20 9a\n13 1a\n9e 42\n40 b4\n01 bc\n01 db\n08 b4\n01 bc\n1b 1a\n36 1a\n22 9d\n35 41\n9d 40\n21 9a\n51 43\n23 9a\n51 18\ne3 10\nc9 18\n0f 4b\nca 5c\n2a 43\n10 b4\n20 bc\nca 54\n45 19\n24 98\n01 68\n00 2e\ndb dc\n21 98\n48 43\n23 9e\n30 18\n09 4a\n85 50\n1f 9a\n01 32\n04 2a\nc7 d1\nb4 6c\n1d 98\n01 30\n1d 90\na0 42\nc0 db\n1b 9d\n0a e0\n'
p1034
S'.text:000188a0\n.text:000188a2\n.text:000188a4\n.text:000188a6\n.text:000188a8\n.text:000188aa\n.text:000188ac\n.text:000188ae\n.text:000188b0\n.text:000188b2\n.text:000188b4\n.text:000188b6\n.text:000188b8\n.text:000188ba\n.text:000188bc\n.text:000188be\n.text:000188c0\n.text:000188c2\n.text:000188c4\n.text:000188c6\n.text:000188c8\n.text:000188ca\n.text:000188cc\n.text:000188ce\n.text:000188d0\n.text:000188d2\n.text:000188d4\n.text:000188d6\n.text:000188d8\n.text:000188da\n.text:000188dc\n.text:000188de\n.text:000188e0\n.text:000188e2\n.text:000188e4\n.text:000188e6\n.text:000188e8\n.text:000188ea\n.text:000188ec\n.text:000188ee\n.text:000188f0\n.text:000188f2\n.text:000188f4\n.text:000188f6\n.text:000188f8\n.text:000188fa\n.text:000188fc\n.text:000188fe\n.text:00018900\n.text:00018902\n.text:00018904\n.text:00018906\n.text:00018908\n.text:0001890a\n.text:0001890c\n.text:0001890e\n.text:00018910\n.text:00018912\n.text:00018914\n.text:00018916\n.text:00018918\n.text:0001891a\n.text:0001891c\n.text:0001891e\n.text:00018920\n.text:00018922\n.text:00018924\n.text:00018926\n.text:00018928\n.text:0001892a\n.text:0001892c\n'
p1035
tp1036
sS'__truncdfsf2'
p1037
(S'\n__stdcall __truncdfsf2()\n'
p1038
V\u000avoid __truncdfsf2(void)\u000a\u000a{\u000a  (*(__aeabi_fcmple + DAT_00037afc))();\u000a  return;\u000a}\u000a\u000a
p1039
S'ldr r12,[0x37afc]\nadd pc,r12,pc\n'
p1040
S'00 c0 9f e5\n0f f0 8c e0\n'
p1041
S'.text:00037af4\n.text:00037af8\n'
p1042
tp1043
sS'id3tag_set_textinfo_latin1'
p1044
(S'\n__stdcall id3tag_set_textinfo_latin1()\n'
p1045
V\u000aundefined4 id3tag_set_textinfo_latin1(undefined4 uParm1,undefined4 uParm2,int iParm3)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  undefined4 uVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  int iVar8;\u000a  void *pvStack28;\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_0001d2c8 + 0x1d114);\u000a  uVar1 = toID3v2TagId(uParm2);\u000a  uVar5 = 0xffffffff;\u000a  if ((uVar1 == 0) || (uVar5 = 0, iParm3 == 0)) goto LAB_0001d2ac;\u000a  uVar7 = 0xff;\u000a  iVar8 = 0;\u000a  iVar6 = 4;\u000a  if (DAT_0001d2cc < (int)uVar1) {\u000a    if (DAT_0001d2d0 < (int)uVar1) {\u000a      if (uVar1 != DAT_0001d2d4) {\u000a        uVar3 = 0;\u000a        if (uVar1 == DAT_0001d2d8) {\u000a          uVar5 = FUN_0001d244(DAT_0001d2d8,iParm3);\u000a          return uVar5;\u000a        }\u000aLAB_0001d1ae:\u000a        do {\u000a          uVar4 = uVar7 & 0x54000000;\u000a          uVar2 = 0;\u000a          if (uVar4 != (uVar7 & uVar1)) {\u000a            uVar2 = uVar7 & uVar1;\u000a          }\u000a          if (uVar4 == 0) {\u000a            uVar2 = uVar4;\u000a          }\u000a          uVar3 = uVar3 | uVar2;\u000a          iVar6 = iVar6 + -1;\u000a          uVar7 = uVar7 << 8;\u000a        } while (iVar6 != 0);\u000a        uVar7 = 0xff;\u000a        iVar6 = 4;\u000a        uVar2 = uVar1;\u000a        if (uVar3 != 0) {\u000a          uVar3 = 0;\u000a          do {\u000a            uVar4 = uVar7 & 0x57000000;\u000a            uVar2 = 0;\u000a            if (uVar4 != (uVar7 & uVar1)) {\u000a              uVar2 = uVar7 & uVar1;\u000a            }\u000a            if (uVar4 == 0) {\u000a              uVar2 = uVar4;\u000a            }\u000a            uVar3 = uVar3 | uVar2;\u000a            iVar6 = iVar6 + -1;\u000a            uVar7 = uVar7 << 8;\u000a          } while (iVar6 != 0);\u000a          uVar5 = 0xffffff01;\u000a          uVar2 = uVar1;\u000a          if (uVar3 != 0) goto LAB_0001d2ac;\u000a        }\u000a        goto LAB_0001d2a0;\u000a      }\u000a      iVar6 = 0;\u000a      uVar2 = DAT_0001d2d4;\u000a    }\u000a    else {\u000a      if (uVar1 == DAT_0001d2dc) goto code_r0x0001d244;\u000a      uVar3 = 0;\u000a      if (uVar1 != DAT_0001d2e0) goto LAB_0001d1ae;\u000a      iVar6 = DAT_0001d2f0 + 0x1d170;\u000a      uVar2 = DAT_0001d2e0;\u000a    }\u000a    iVar8 = iParm3;\u000a    iParm3 = 0;\u000a  }\u000a  else {\u000a    if (uVar1 == DAT_0001d2e4) {\u000acode_r0x0001d244:\u000a      while( true ) {\u000a        uVar5 = 0xfffffff9;\u000a        if (*(char *)(iParm3 + iVar8) == 0) break;\u000a        if (*(char *)(iParm3 + iVar8) == '=') {\u000a          if (-1 < iVar8) {\u000a            pvStack28 = (void *)0x0;\u000a            local_strdup(&pvStack28);\u000a            *(undefined *)((int)pvStack28 + iVar8) = 0;\u000a            uVar5 = id3v2_add_latin1(uParm1,uVar1,DAT_0001d2f4 + 0x1d274,pvStack28,\u000a                                     (int)pvStack28 + iVar8 + 1);\u000a            free(pvStack28);\u000a          }\u000a          break;\u000a        }\u000a        iVar8 = iVar8 + 1;\u000a      }\u000a      goto LAB_0001d2ac;\u000a    }\u000a    uVar2 = DAT_0001d2e8;\u000a    if (uVar1 != DAT_0001d2e8) {\u000a      uVar3 = 0;\u000a      if (uVar1 == DAT_0001d2ec) {\u000a        uVar5 = id3tag_set_genre(uParm1,iParm3);\u000a        goto LAB_0001d2ac;\u000a      }\u000a      goto LAB_0001d1ae;\u000a    }\u000aLAB_0001d2a0:\u000a    iVar6 = 0;\u000a    iVar8 = 0;\u000a  }\u000a  uVar5 = id3v2_add_latin1(uParm1,uVar2,iVar6,iVar8,iParm3);\u000aLAB_0001d2ac:\u000a  if (**(int **)(DAT_0001d2f8 + 0x1d2b2) != local_18) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return uVar5;\u000a}\u000a\u000a
p1046
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1c\npush { r2 }\npop { r4 }\npush { r0 }\npop { r5 }\nldr r0,[0x0001d2c8]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x18]\npush { r1 }\npop { r0 }\nbl 0x0001cedc\npush { r4 }\npop { r1 }\nmov r2,#0x0\nmvn r4,r2\ncmp r0,#0x0\npush { r0 }\npop { r3 }\nbne 0x0001d132\nb 0x0001d2ac\ncmp r1,#0x0\npush { r2 }\npop { r4 }\nbne 0x0001d13c\nb 0x0001d2ac\nstr r5,[sp,#0xc]\nmov r5,#0xff\nmov r6,#0x0\nmov r4,#0x4\nldr r0,[0x0001d2cc]\ncmp r3,r0\nble 0x0001d170\nldr r0,[0x0001d2d0]\ncmp r3,r0\nbgt 0x0001d194\nldr r0,[0x0001d2dc]\ncmp r3,r0\nbeq 0x0001d23c\nstr r1,[sp,#0x8]\nldr r0,[0x0001d2e0]\ncmp r3,r0\npush { r6 }\npop { r2 }\nbne 0x0001d1ae\nmov r0,#0x0\nmov r1,sp\nstr r0,[r1,#0x0]\nldr r1,[0x0001d2e0]\nldr r2,[0x0001d2f0]\nadd r2,pc\nb 0x0001d290\nldr r0,[0x0001d2e4]\ncmp r3,r0\nbeq 0x0001d23c\nldr r0,[0x0001d2e8]\ncmp r3,r0\nbne 0x0001d17e\nb 0x0001d296\nstr r1,[sp,#0x8]\nldr r0,[0x0001d2ec]\ncmp r3,r0\npush { r6 }\npop { r2 }\nbne 0x0001d1ae\nldr r0,[sp,#0xc]\nldr r1,[sp,#0x8]\nbl 0x00037cd0\nb 0x0001d2a8\nstr r1,[sp,#0x8]\nldr r0,[0x0001d2d4]\ncmp r3,r0\nbeq 0x0001d288\nldr r0,[0x0001d2d8]\ncmp r3,r0\npush { r6 }\npop { r2 }\nbne 0x0001d1ae\npush { r3 }\npop { r5 }\nldr r1,[sp,#0x8]\nb 0x0001d244\nstr r3,[sp,#0x10]\npush { r4 }\npop { r1 }\npush { r5 }\npop { r0 }\nand r0,r3\nmov r3,#0x15\nlsl r3,r3,#0x1a\nand r3,r5\ncmp r3,r0\npush { r6 }\npop { r4 }\nbeq 0x0001d1cc\npush { r0 }\npop { r4 }\ncmp r3,#0x0\nbne 0x0001d1d4\npush { r3 }\npop { r4 }\norr r2,r4\npush { r1 }\npop { r4 }\nsub r4,#0x1\nlsl r5,r5,#0x8\ncmp r4,#0x0\nldr r3,[sp,#0x10]\nbne 0x0001d1ae\nmov r1,#0xff\nmov r6,#0x0\nmov r3,#0x4\ncmp r2,#0x0\nldr r0,[sp,#0xc]\nldr r2,[sp,#0x8]\nbeq 0x0001d232\npush { r6 }\npop { r2 }\npush { r1 }\npop { r5 }\nldr r0,[sp,#0x10]\nand r5,r0\nmov r4,#0x57\nlsl r4,r4,#0x18\nand r4,r1\ncmp r4,r5\npush { r6 }\npop { r0 }\nbeq 0x0001d210\npush { r5 }\npop { r6 }\ncmp r4,#0x0\nbne 0x0001d218\npush { r4 }\npop { r6 }\norr r2,r6\nsub r3,#0x1\nlsl r1,r1,#0x8\ncmp r3,#0x0\npush { r0 }\npop { r6 }\nbne 0x0001d1f6\nmov r0,#0xfe\nmvn r4,r0\ncmp r2,#0x0\nldr r0,[sp,#0xc]\nldr r2,[sp,#0x8]\nbne 0x0001d2ac\nmov r1,sp\nstr r2,[r1,#0x0]\nmov r2,#0x0\nldr r1,[sp,#0x10]\nb 0x0001d2a0\npush { r3 }\npop { r5 }\n'
p1047
S'f0 b5\n03 af\n87 b0\n04 b4\n10 bc\n01 b4\n20 bc\n6e 48\n78 44\n00 68\n00 68\n06 90\n02 b4\n01 bc\nff f7 de fe\n10 b4\n02 bc\n00 22\nd4 43\n00 28\n01 b4\n08 bc\n00 d1\nbc e0\n00 29\n04 b4\n10 bc\n00 d1\nb7 e0\n03 95\nff 25\n00 26\n04 24\n61 48\n83 42\n12 dd\n61 48\n83 42\n21 dc\n62 48\n83 42\n72 d0\n02 91\n61 48\n83 42\n40 b4\n04 bc\n25 d1\n00 20\n69 46\n08 60\n5d 49\n61 4a\n7a 44\n8f e0\n5c 48\n83 42\n62 d0\n5c 48\n83 42\n00 d1\n8b e0\n02 91\n5a 48\n83 42\n40 b4\n04 bc\n11 d1\n03 98\n02 99\n1a f0 9f fd\n89 e0\n02 91\n4f 48\n83 42\n75 d0\n4e 48\n83 42\n40 b4\n04 bc\n03 d1\n08 b4\n20 bc\n02 99\n4a e0\n04 93\n10 b4\n02 bc\n20 b4\n01 bc\n18 40\n15 23\n9b 06\n2b 40\n83 42\n40 b4\n10 bc\n01 d0\n01 b4\n10 bc\n00 2b\n01 d1\n08 b4\n10 bc\n22 43\n02 b4\n10 bc\n01 3c\n2d 02\n00 2c\n04 9b\ne4 d1\nff 21\n00 26\n04 23\n00 2a\n03 98\n02 9a\n1f d0\n40 b4\n04 bc\n02 b4\n20 bc\n04 98\n05 40\n57 24\n24 06\n0c 40\nac 42\n40 b4\n01 bc\n01 d0\n20 b4\n40 bc\n00 2c\n01 d1\n10 b4\n40 bc\n32 43\n01 3b\n09 02\n00 2b\n01 b4\n40 bc\ne7 d1\nfe 20\nc4 43\n00 2a\n03 98\n02 9a\n3c d1\n69 46\n0a 60\n00 22\n04 99\n31 e0\n08 b4\n20 bc\n'
p1048
S'.text:0001d100\n.text:0001d102\n.text:0001d104\n.text:0001d106\n.text:0001d108\n.text:0001d10a\n.text:0001d10c\n.text:0001d10e\n.text:0001d110\n.text:0001d112\n.text:0001d114\n.text:0001d116\n.text:0001d118\n.text:0001d11a\n.text:0001d11c\n.text:0001d120\n.text:0001d122\n.text:0001d124\n.text:0001d126\n.text:0001d128\n.text:0001d12a\n.text:0001d12c\n.text:0001d12e\n.text:0001d130\n.text:0001d132\n.text:0001d134\n.text:0001d136\n.text:0001d138\n.text:0001d13a\n.text:0001d13c\n.text:0001d13e\n.text:0001d140\n.text:0001d142\n.text:0001d144\n.text:0001d146\n.text:0001d148\n.text:0001d14a\n.text:0001d14c\n.text:0001d14e\n.text:0001d150\n.text:0001d152\n.text:0001d154\n.text:0001d156\n.text:0001d158\n.text:0001d15a\n.text:0001d15c\n.text:0001d15e\n.text:0001d160\n.text:0001d162\n.text:0001d164\n.text:0001d166\n.text:0001d168\n.text:0001d16a\n.text:0001d16c\n.text:0001d16e\n.text:0001d170\n.text:0001d172\n.text:0001d174\n.text:0001d176\n.text:0001d178\n.text:0001d17a\n.text:0001d17c\n.text:0001d17e\n.text:0001d180\n.text:0001d182\n.text:0001d184\n.text:0001d186\n.text:0001d188\n.text:0001d18a\n.text:0001d18c\n.text:0001d18e\n.text:0001d192\n.text:0001d194\n.text:0001d196\n.text:0001d198\n.text:0001d19a\n.text:0001d19c\n.text:0001d19e\n.text:0001d1a0\n.text:0001d1a2\n.text:0001d1a4\n.text:0001d1a6\n.text:0001d1a8\n.text:0001d1aa\n.text:0001d1ac\n.text:0001d1ae\n.text:0001d1b0\n.text:0001d1b2\n.text:0001d1b4\n.text:0001d1b6\n.text:0001d1b8\n.text:0001d1ba\n.text:0001d1bc\n.text:0001d1be\n.text:0001d1c0\n.text:0001d1c2\n.text:0001d1c4\n.text:0001d1c6\n.text:0001d1c8\n.text:0001d1ca\n.text:0001d1cc\n.text:0001d1ce\n.text:0001d1d0\n.text:0001d1d2\n.text:0001d1d4\n.text:0001d1d6\n.text:0001d1d8\n.text:0001d1da\n.text:0001d1dc\n.text:0001d1de\n.text:0001d1e0\n.text:0001d1e2\n.text:0001d1e4\n.text:0001d1e6\n.text:0001d1e8\n.text:0001d1ea\n.text:0001d1ec\n.text:0001d1ee\n.text:0001d1f0\n.text:0001d1f2\n.text:0001d1f4\n.text:0001d1f6\n.text:0001d1f8\n.text:0001d1fa\n.text:0001d1fc\n.text:0001d1fe\n.text:0001d200\n.text:0001d202\n.text:0001d204\n.text:0001d206\n.text:0001d208\n.text:0001d20a\n.text:0001d20c\n.text:0001d20e\n.text:0001d210\n.text:0001d212\n.text:0001d214\n.text:0001d216\n.text:0001d218\n.text:0001d21a\n.text:0001d21c\n.text:0001d21e\n.text:0001d220\n.text:0001d222\n.text:0001d224\n.text:0001d226\n.text:0001d228\n.text:0001d22a\n.text:0001d22c\n.text:0001d22e\n.text:0001d230\n.text:0001d232\n.text:0001d234\n.text:0001d236\n.text:0001d238\n.text:0001d23a\n.text:0001d23c\n.text:0001d23e\n'
p1049
tp1050
sS'__subsf3'
p1051
(S'\n__stdcall __subsf3()\n'
p1052
V\u000avoid __subsf3(void)\u000a\u000a{\u000a  (*(__floatsidf + DAT_00037b8c))();\u000a  return;\u000a}\u000a\u000a
p1053
S'ldr r12,[0x37b8c]\nadd pc,r12,pc\n'
p1054
S'00 c0 9f e5\n0f f0 8c e0\n'
p1055
S'.text:00037b84\n.text:00037b88\n'
p1056
tp1057
sS'lame_get_sfscale'
p1058
(S'\n__stdcall lame_get_sfscale()\n'
p1059
V\u000aundefined4 lame_get_sfscale(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if ((iVar1 != 0) && (uVar2 = 1, *(int *)(iParm1 + 0x54) != 2)) {\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1060
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ef18\nldr r2,[r4,#0x54]\nmov r0,#0x1\nmov r1,#0x0\ncmp r2,#0x2\nbeq 0x0002ef18\npush { r1 }\npop { r0 }\npop { r4, r6, r7, pc }\n'
p1061
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 98 fa\n01 b4\n02 bc\n00 20\n00 29\n06 d0\n62 6d\n01 20\n00 21\n02 2a\n01 d0\n02 b4\n01 bc\nd0 bd\n'
p1062
S'.text:0002eef4\n.text:0002eef6\n.text:0002eef8\n.text:0002eefa\n.text:0002eefc\n.text:0002ef00\n.text:0002ef02\n.text:0002ef04\n.text:0002ef06\n.text:0002ef08\n.text:0002ef0a\n.text:0002ef0c\n.text:0002ef0e\n.text:0002ef10\n.text:0002ef12\n.text:0002ef14\n.text:0002ef16\n.text:0002ef18\n'
p1063
tp1064
sS'_Unwind_Resume_or_Rethrow'
p1065
(S'\n__stdcall _Unwind_Resume_or_Rethrow()\n'
p1066
V\u000avoid _Unwind_Resume_or_Rethrow\u000a               (undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  undefined4 uStack56;\u000a  undefined4 uStack52;\u000a  undefined4 uStack4;\u000a  \u000a  uStack4 = 0x373ec;\u000a  uStack68 = 0;\u000a  uStack64 = uParm1;\u000a  uStack60 = uParm2;\u000a  uStack56 = uParm3;\u000a  uStack52 = uParm4;\u000a  __gnu_Unwind_Resume_or_Rethrow(uParm1,&uStack68,uParm3,0,uParm3);\u000a  return;\u000a}\u000a\u000a
p1067
S'stmdb sp!,{ sp lr pc}\nstmdb sp!,{ r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 }\nmov r3,#0x0\nstmdb sp!,{ r2 r3 }\nadd r1,sp,#0x4\nbl 0x00016ca8\nldr lr,[sp,#0x40]\nadd sp,sp,#0x48\nbx lr\n'
p1068
S'00 e0 2d e9\nff 1f 2d e9\n00 30 a0 e3\n0c 00 2d e9\n04 10 8d e2\n2a 7e ff eb\n40 e0 9d e5\n48 d0 8d e2\n1e ff 2f e1\n'
p1069
S'.text:000373e4\n.text:000373e8\n.text:000373ec\n.text:000373f0\n.text:000373f4\n.text:000373f8\n.text:000373fc\n.text:00037400\n.text:00037404\n'
p1070
tp1071
sS'ResvFrameEnd'
p1072
(S'\n__stdcall ResvFrameEnd()\n'
p1073
V\u000avoid ResvFrameEnd(void)\u000a\u000a{\u000a  (*(calc_noise + DAT_0003832c))();\u000a  return;\u000a}\u000a\u000a
p1074
S'ldr r12,[0x3832c]\nadd pc,r12,pc\n'
p1075
S'00 c0 9f e5\n0f f0 8c e0\n'
p1076
S'.text:00038324\n.text:00038328\n'
p1077
tp1078
sS'lame_init_bitstream'
p1079
(S'\n__stdcall lame_init_bitstream()\n'
p1080
V\u000aundefined4 lame_init_bitstream(int *piParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  uVar2 = 0xfffffffd;\u000a  if (((piParm1 != (int *)0x0) && (*piParm1 == DAT_0002049c)) && (iVar3 = piParm1[0x48], iVar3 != 0)\u000a     ) {\u000a    uVar2 = 0;\u000a    *(undefined4 *)(iVar3 + DAT_000204a0) = 0;\u000a    iVar1 = iVar3 + DAT_000204a4;\u000a    if (piParm1[0x11] != 0) {\u000a      id3tag_write_v2(piParm1);\u000a    }\u000a    *(undefined4 *)(iVar3 + DAT_000204a8) = 0;\u000a    __aeabi_memclr8(iVar1,0x2c0);\u000a    if (*(int *)(iVar3 + 0x9c) != 0) {\u000a      InitVbrTag(piParm1);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1081
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r0 }\npop { r5 }\nmov r0,#0x2\nmvn r4,r0\ncmp r5,#0x0\nbeq 0x00020494\nldr r0,[r5,#0x0]\nldr r1,[0x0002049c]\ncmp r0,r1\nbne 0x00020494\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r6,[r5,r0]\ncmp r6,#0x0\nbeq 0x00020494\nldr r0,[0x000204a0]\nmov r4,#0x0\nstr r4,[r6,r0]\nldr r0,[0x000204a4]\nadd r2,r6,r0\nldr r0,[r5,#0x44]\ncmp r0,#0x0\nbeq 0x00020474\npush { r5 }\npop { r0 }\nstr r2,[sp,#0x0]\nbl 0x00037fc0\nldr r2,[sp,#0x0]\nldr r0,[0x000204a8]\nstr r4,[r6,r0]\nmov r0,#0xb\nlsl r1,r0,#0x6\npush { r2 }\npop { r0 }\nbl 0x000379f0\nmov r0,#0x9c\nldr r0,[r6,r0]\ncmp r0,#0x0\nbeq 0x00020494\npush { r5 }\npop { r0 }\nbl 0x00037fd0\npush { r4 }\npop { r0 }\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p1082
S'f0 b5\n03 af\n81 b0\n01 b4\n20 bc\n02 20\nc4 43\n00 2d\n26 d0\n28 68\n14 49\n88 42\n22 d1\n09 20\n40 01\n2e 58\n00 2e\n1d d0\n11 48\n00 24\n34 50\n11 48\n32 18\n68 6c\n00 28\n05 d0\n20 b4\n01 bc\n00 92\n17 f0 a7 fd\n00 9a\n0c 48\n34 50\n0b 20\n81 01\n04 b4\n01 bc\n17 f0 b6 fa\n9c 20\n30 58\n00 28\n03 d0\n20 b4\n01 bc\n17 f0 9e fd\n10 b4\n01 bc\n01 b0\nf0 bd\n'
p1083
S'.text:00020434\n.text:00020436\n.text:00020438\n.text:0002043a\n.text:0002043c\n.text:0002043e\n.text:00020440\n.text:00020442\n.text:00020444\n.text:00020446\n.text:00020448\n.text:0002044a\n.text:0002044c\n.text:0002044e\n.text:00020450\n.text:00020452\n.text:00020454\n.text:00020456\n.text:00020458\n.text:0002045a\n.text:0002045c\n.text:0002045e\n.text:00020460\n.text:00020462\n.text:00020464\n.text:00020466\n.text:00020468\n.text:0002046a\n.text:0002046c\n.text:0002046e\n.text:00020472\n.text:00020474\n.text:00020476\n.text:00020478\n.text:0002047a\n.text:0002047c\n.text:0002047e\n.text:00020480\n.text:00020484\n.text:00020486\n.text:00020488\n.text:0002048a\n.text:0002048c\n.text:0002048e\n.text:00020490\n.text:00020494\n.text:00020496\n.text:00020498\n.text:0002049a\n'
p1084
tp1085
sS'iteration_finish_one'
p1086
(S'\n__stdcall iteration_finish_one()\n'
p1087
V\u000avoid iteration_finish_one(int iParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  best_scalefac_store(iParm1,iParm2,iParm3,iParm1 + 0x130);\u000a  iVar1 = iParm1 + 0x130 + iParm2 * DAT_00029a00 + iParm3 * DAT_00029a04;\u000a  if (*(int *)(iParm1 + 0x24) == 1) {\u000a    best_huffman_divide(iParm1,iVar1);\u000a  }\u000a  ResvAdjust(iParm1,iVar1);\u000a  return;\u000a}\u000a\u000a
p1088
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\nstr r2,[sp,#0x0]\npush { r1 }\npop { r6 }\npush { r0 }\npop { r4 }\nmov r0,#0x13\nlsl r0,r0,#0x4\nadd r5,r4,r0\npush { r4 }\npop { r0 }\npush { r5 }\npop { r3 }\nbl 0x00038360\nldr r0,[0x00029a00]\nmul r0,r6\nadd r0,r5,r0\nldr r1,[0x00029a04]\nldr r2,[sp,#0x0]\nmul r1,r2\nadd r5,r0,r1\nldr r0,[r4,#0x24]\ncmp r0,#0x1\nbne 0x000299ee\npush { r4 }\npop { r0 }\npush { r5 }\npop { r1 }\nbl 0x00038370\npush { r4 }\npop { r0 }\npush { r5 }\npop { r1 }\nbl 0x00038380\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p1089
S'f0 b5\n03 af\n81 b0\n00 92\n02 b4\n40 bc\n01 b4\n10 bc\n13 20\n00 01\n25 18\n10 b4\n01 bc\n20 b4\n08 bc\n0e f0 c9 fc\n0c 48\n70 43\n28 18\n0b 49\n00 9a\n51 43\n45 18\n60 6a\n01 28\n05 d1\n10 b4\n01 bc\n20 b4\n02 bc\n0e f0 c1 fc\n10 b4\n01 bc\n20 b4\n02 bc\n0e f0 c3 fc\n01 b0\nf0 bd\n'
p1090
S'.text:000299ac\n.text:000299ae\n.text:000299b0\n.text:000299b2\n.text:000299b4\n.text:000299b6\n.text:000299b8\n.text:000299ba\n.text:000299bc\n.text:000299be\n.text:000299c0\n.text:000299c2\n.text:000299c4\n.text:000299c6\n.text:000299c8\n.text:000299ca\n.text:000299ce\n.text:000299d0\n.text:000299d2\n.text:000299d4\n.text:000299d6\n.text:000299d8\n.text:000299da\n.text:000299dc\n.text:000299de\n.text:000299e0\n.text:000299e2\n.text:000299e4\n.text:000299e6\n.text:000299e8\n.text:000299ea\n.text:000299ee\n.text:000299f0\n.text:000299f2\n.text:000299f4\n.text:000299f6\n.text:000299fa\n.text:000299fc\n'
p1091
tp1092
sS'lame_set_msgf'
p1093
(S'\n__stdcall lame_set_msgf(lame_global_flags * gfp, anon_subr_void_char_ptr_va_list * func)\n'
p1094
V\u000aint lame_set_msgf(lame_global_flags *gfp,void (*func)(char *,va_list))\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000acode_r0x0001e330:\u000a  puVar11 = (undefined *)((int)&gfp->class_id + 1);\u000aLAB_0001e332:\u000a  if (unaff_r5[8] != 1) {\u000a    iVar2 = unaff_r5[7];\u000a    if (iVar2 == 0) goto LAB_0001e09a;\u000a    puVar1 = (undefined *)unaff_r5[6];\u000a    iVar4 = iVar2;\u000a    puVar7 = puVar11;\u000a    do {\u000a      *puVar7 = *puVar1;\u000a      puVar7 = puVar7 + 1;\u000a      puVar1 = puVar1 + 1;\u000a      iVar4 = iVar4 + -1;\u000a      if (iVar4 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[6],unaff_r5[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          unaff_r5 = (int *)*unaff_r5;\u000a          if (unaff_r5 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar2 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0\u000a                 )) {\u000a                do {\u000a                  puVar11[iVar2 + -1] = (char)uVar8;\u000a                  iVar2 = iVar2 + -1;\u000a                  uVar8 = uVar8 >> 8;\u000a                } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(puVar11,(in_stack_0000002c + in_stack_00000018) - (int)puVar11);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar8 = unaff_r5[1];\u000a          uVar10 = 0xff;\u000a          iVar2 = 4;\u000a          if ((uVar8 == DAT_0001e494) || (uVar3 = in_stack_00000030, uVar8 == DAT_0001e498)) break;\u000a          do {\u000a            uVar6 = uVar10 & 0x57000000;\u000a            uVar9 = in_stack_00000030;\u000a            if (uVar6 != (uVar10 & uVar8)) {\u000a              uVar9 = uVar10 & uVar8;\u000a            }\u000a            if (uVar6 == 0) {\u000a              uVar9 = uVar6;\u000a            }\u000a            uVar3 = uVar3 | uVar9;\u000a            iVar2 = iVar2 + -1;\u000a            uVar10 = uVar10 << 8;\u000a          } while (iVar2 != 0);\u000a          if (uVar3 == 0) {\u000a            uVar10 = sizeOfWxxxNode(unaff_r5);\u000a            iVar2 = 4;\u000a            if (10 < uVar10) {\u000a              do {\u000a                puVar11[iVar2 + -1] = (char)uVar8;\u000a                iVar2 = iVar2 + -1;\u000a                uVar8 = uVar8 >> 8;\u000a              } while (0 < iVar2);\u000a              uVar10 = uVar10 - 10;\u000a              iVar2 = 4;\u000a              do {\u000a                puVar11[iVar2 + 3] = (char)uVar10;\u000a                iVar2 = iVar2 + -1;\u000a                uVar10 = uVar10 >> 8;\u000a              } while (0 < iVar2);\u000a              puVar11[8] = 0;\u000a              puVar11[9] = 0;\u000a              puVar7 = puVar11 + 10;\u000a              if (unaff_r5[4] != 0) {\u000a                *(bool *)(puVar11 + 10) = unaff_r5[5] == 1;\u000a                puVar11 = puVar11 + 0xb;\u000a                if (unaff_r5[5] == 1) {\u000a                  puVar7 = (undefined *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a                  *puVar7 = 0;\u000a                  puVar7[1] = 0;\u000a                  puVar7 = puVar7 + 2;\u000a                }\u000a                else {\u000a                  iVar2 = unaff_r5[4];\u000a                  if (iVar2 != 0) {\u000a                    puVar1 = (undefined *)unaff_r5[3];\u000a                    iVar4 = iVar2;\u000a                    puVar7 = puVar11;\u000a                    do {\u000a                      *puVar7 = *puVar1;\u000a                      puVar7 = puVar7 + 1;\u000a                      puVar1 = puVar1 + 1;\u000a                      iVar4 = iVar4 + -1;\u000a                    } while (iVar4 != 0);\u000a                    puVar11 = puVar11 + iVar2;\u000a                  }\u000a                  *puVar11 = 0;\u000a                  puVar7 = puVar11 + 1;\u000a                }\u000a              }\u000a              if (unaff_r5[8] == 1) {\u000a                puVar11 = (undefined *)writeLoBytes(puVar7,unaff_r5[6],unaff_r5[7]);\u000a              }\u000a              else {\u000a                iVar2 = unaff_r5[7];\u000a                puVar11 = puVar7;\u000a                if (iVar2 != 0) {\u000a                  puVar1 = (undefined *)unaff_r5[6];\u000a                  iVar4 = iVar2;\u000a                  puVar11 = puVar7;\u000a                  do {\u000a                    *puVar11 = *puVar1;\u000a                    puVar11 = puVar11 + 1;\u000a                    puVar1 = puVar1 + 1;\u000a                    iVar4 = iVar4 + -1;\u000a                  } while (iVar4 != 0);\u000a                  puVar11 = puVar7 + iVar2;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            iVar2 = unaff_r5[7];\u000a            iVar4 = unaff_r5[4];\u000a            if (unaff_r5[8] == 1) {\u000a              iVar5 = iVar4 * 2 + 0xd;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a              iVar2 = iVar2 << 1;\u000a            }\u000a            else {\u000a              iVar5 = iVar4 + 0xc;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a            }\u000a            iVar4 = 4;\u000a            if (10 < (uint)(iVar5 + iVar2)) goto LAB_0001e2be;\u000a          }\u000a        }\u000a        iVar2 = unaff_r5[4] * 2 + 0x10;\u000a        if (unaff_r5[5] != 1) {\u000a          iVar2 = unaff_r5[4] + 0xf;\u000a        }\u000a        iVar4 = 0;\u000a        if (unaff_r5[8] == 1) {\u000a          iVar4 = unaff_r5[8];\u000a        }\u000a        uVar10 = (unaff_r5[7] << iVar4) + iVar2;\u000a        iVar2 = 4;\u000a      } while (uVar10 < 0xb);\u000a      do {\u000a        puVar11[iVar2 + -1] = (char)uVar8;\u000a        iVar2 = iVar2 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar2);\u000a      uVar10 = uVar10 - 10;\u000a      iVar2 = 4;\u000a      do {\u000a        puVar11[iVar2 + 3] = (char)uVar10;\u000a        iVar2 = iVar2 + -1;\u000a        uVar10 = uVar10 >> 8;\u000a      } while (0 < iVar2);\u000a      puVar11[8] = 0;\u000a      puVar11[9] = 0;\u000a      *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a      puVar11[0xb] = *(undefined *)(unaff_r5 + 2);\u000a      puVar11[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a      puVar11[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a      puVar11 = puVar11 + 0xe;\u000a      if (unaff_r5[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar2;\u000a      }\u000a      iVar2 = unaff_r5[4];\u000a      if (iVar2 != 0) {\u000a        puVar1 = (undefined *)unaff_r5[3];\u000a        iVar4 = iVar2;\u000a        puVar7 = puVar11;\u000a        do {\u000a          *puVar7 = *puVar1;\u000a          puVar7 = puVar7 + 1;\u000a          puVar1 = puVar1 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000a        puVar11 = puVar11 + iVar2;\u000a      }\u000a      *puVar11 = 0;\u000a      puVar11 = puVar11 + 1;\u000a      if (unaff_r5[8] == 1) break;\u000a      iVar2 = unaff_r5[7];\u000a      if (iVar2 != 0) {\u000a        puVar1 = (undefined *)unaff_r5[6];\u000a        iVar4 = iVar2;\u000a        puVar7 = puVar11;\u000a        do {\u000a          *puVar7 = *puVar1;\u000a          puVar7 = puVar7 + 1;\u000a          puVar1 = puVar1 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a        puVar11 = puVar11 + iVar2;\u000a      }\u000a    }\u000a  } while( true );\u000aLAB_0001e2be:\u000a  do {\u000a    puVar11[iVar4 + -1] = (char)uVar8;\u000a    iVar4 = iVar4 + -1;\u000a    uVar8 = uVar8 >> 8;\u000a  } while (0 < iVar4);\u000a  uVar8 = (iVar5 + iVar2) - 10;\u000a  iVar2 = 4;\u000a  do {\u000a    puVar11[iVar2 + 3] = (char)uVar8;\u000a    iVar2 = iVar2 + -1;\u000a    uVar8 = uVar8 >> 8;\u000a  } while (0 < iVar2);\u000a  puVar11[8] = 0;\u000a  puVar11[9] = 0;\u000a  *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a  puVar11 = puVar11 + 0xb;\u000a  iVar2 = unaff_r5[4];\u000a  if (iVar2 == 0) goto LAB_0001e332;\u000a  if (unaff_r5[5] == 1) {\u000a    puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[3]);\u000a    *puVar11 = 0;\u000a    puVar11[1] = 0;\u000a    puVar11 = puVar11 + 2;\u000a    goto LAB_0001e332;\u000a  }\u000a  puVar1 = (undefined *)unaff_r5[3];\u000a  iVar4 = iVar2;\u000a  puVar7 = puVar11;\u000a  do {\u000a    *puVar7 = *puVar1;\u000a    puVar7 = puVar7 + 1;\u000a    puVar1 = puVar1 + 1;\u000a    iVar4 = iVar4 + -1;\u000a  } while (iVar4 != 0);\u000a  puVar11[iVar2] = 0;\u000a  gfp = (lame_global_flags *)(puVar11 + iVar2);\u000a  goto code_r0x0001e330;\u000a}\u000a\u000a
p1095
S'add r6,r0,#0x1\n'
p1096
S'46 1c\n'
p1097
S'.text:0001e330\n'
p1098
tp1099
sS'__subdf3'
p1100
(S'\n__stdcall __subdf3()\n'
p1101
V\u000avoid __subdf3(void)\u000a\u000a{\u000a  (*(__divdf3 + DAT_00037bbc))();\u000a  return;\u000a}\u000a\u000a
p1102
S'ldr r12,[0x37bbc]\nadd pc,r12,pc\n'
p1103
S'00 c0 9f e5\n0f f0 8c e0\n'
p1104
S'.text:00037bb4\n.text:00037bb8\n'
p1105
tp1106
sS'__aeabi_l2f'
p1107
(S'\n__stdcall __aeabi_l2f()\n'
p1108
V\u000auint __aeabi_l2f(uint uParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  bool bVar7;\u000a  \u000a  if ((uParm1 | uParm2) == 0) {\u000a    return uParm1;\u000a  }\u000a  uVar5 = uParm2 & 0x80000000;\u000a  if ((int)uVar5 < 0) {\u000a    bVar7 = uParm1 != 0;\u000a    uParm1 = -uParm1;\u000a    uParm2 = -(uParm2 + (uint)bVar7);\u000a  }\u000a  uVar1 = uParm1;\u000a  uVar2 = uParm2;\u000a  if (uParm2 == 0) {\u000a    uVar1 = 0;\u000a    uVar2 = uParm1;\u000a  }\u000a  uVar5 = uVar5 | 0x5b000000;\u000a  if (uParm2 == 0) {\u000a    uVar5 = uVar5 + 0xf0000000;\u000a  }\u000a  iVar3 = count_leading_zeroes(uVar2);\u000a  uVar4 = iVar3 - 8;\u000a  iVar6 = (uVar5 - 0x800000) + uVar4 * -0x800000;\u000a  if (iVar3 < 8) {\u000a    uVar5 = uVar2 << (iVar3 + 0x18U & 0xff);\u000a    uVar2 = iVar6 + (uVar2 >> (0x20 - (iVar3 + 0x18U) & 0xff)) + (uVar5 >> 0x1f);\u000a    if ((uVar1 | uVar5 << 1) == 0) {\u000a      uVar2 = uVar2 & ~(uVar5 >> 0x1f);\u000a    }\u000a    return uVar2;\u000a  }\u000a  uVar5 = uVar1 << (uVar4 & 0xff);\u000a  uVar2 = iVar6 + (uVar2 << (uVar4 & 0xff)) +\u000a          (uVar1 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar5);\u000a  if (uVar5 == 0x80000000) {\u000a    uVar2 = uVar2 & 0xfffffffe;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1109
S'orrs r2,r0,r1\nbxeq lr\nands r3,r1,#0x80000000\nbpl 0x00035ec4\nrsbs r0,r0,#0x0\nrsc r1,r1,#0x0\n'
p1110
S'01 20 90 e1\n1e ff 2f 01\n02 31 11 e2\n01 00 00 5a\n00 00 70 e2\n00 10 e1 e2\n'
p1111
S'.text:00035eac\n.text:00035eb0\n.text:00035eb4\n.text:00035eb8\n.text:00035ebc\n.text:00035ec0\n'
p1112
tp1113
sS'__aeabi_l2d'
p1114
(S'\n__stdcall __aeabi_l2d()\n'
p1115
V\u000aulonglong __aeabi_l2d(uint uParm1,uint uParm2)\u000a\u000a{\u000a  byte bVar1;\u000a  byte bVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  int iVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  bool bVar11;\u000a  bool bVar12;\u000a  bool bVar13;\u000a  \u000a  if ((uParm1 | uParm2) == 0) {\u000a    return CONCAT44(uParm1,uParm2);\u000a  }\u000a  uVar9 = uParm2 & 0x80000000;\u000a  uVar5 = uParm2;\u000a  if ((int)uVar9 < 0) {\u000a    bVar12 = uParm1 != 0;\u000a    uParm1 = -uParm1;\u000a    uVar5 = -(uParm2 + (uint)bVar12);\u000a  }\u000a  iVar8 = 0x432;\u000a  uVar10 = uVar5 >> 0x16;\u000a  if (uVar10 != 0) {\u000a    iVar8 = 3;\u000a    if (uVar5 >> 0x19 != 0) {\u000a      iVar8 = 6;\u000a    }\u000a    if (uVar5 >> 0x1c != 0) {\u000a      iVar8 = iVar8 + 3;\u000a    }\u000a    iVar8 = iVar8 + (uVar5 >> 0x1f);\u000a    uVar10 = uParm1 << (0x20U - iVar8 & 0xff);\u000a    uParm1 = uParm1 >> iVar8 | uVar5 << (0x20U - iVar8 & 0xff);\u000a    uVar5 = uVar5 >> iVar8;\u000a    iVar8 = iVar8 + 0x432;\u000a  }\u000a  if (0xfffff < uVar5) {\u000a    if (0x1fffff < uVar5) {\u000a      bVar1 = (byte)uVar5;\u000a      uVar5 = uVar5 >> 1;\u000a      bVar2 = (byte)uParm1;\u000a      uParm1 = (uint)(bVar1 & 1) << 0x1f | uParm1 >> 1;\u000a      uVar10 = (uint)(bVar2 & 1) << 0x1f | uVar10 >> 1;\u000a      iVar8 = iVar8 + 1;\u000a      if (0xffbfffff < (uint)(iVar8 * 0x200000)) {\u000a        return (ulonglong)(uVar9 | 0x7ff00000);\u000a      }\u000a    }\u000aLAB_00035358:\u000a    bVar12 = 0x7fffffff < uVar10;\u000a    if (uVar10 == 0x80000000) {\u000a      bVar12 = (bool)((byte)uParm1 & 1);\u000a    }\u000a    return CONCAT44(uParm1 + (uint)bVar12,\u000a                    uVar5 + iVar8 * 0x100000 + (uint)CARRY4(uParm1,(uint)bVar12) | uVar9);\u000a  }\u000a  uVar3 = uVar10 >> 0x1f;\u000a  uVar10 = uVar10 << 1;\u000a  uVar3 = uParm1 + uVar3;\u000a  bVar12 = CARRY4(uParm1,uVar3);\u000a  uParm1 = uParm1 + uVar3;\u000a  uVar5 = uVar5 * 2 + (uint)bVar12;\u000a  iVar8 = iVar8 + -1;\u000a  if ((uVar5 & 0x100000) != 0) goto LAB_00035358;\u000a  uVar3 = uParm1;\u000a  uVar4 = uVar5;\u000a  if (uVar5 == 0) {\u000a    uVar3 = 0;\u000a    uVar4 = uParm1;\u000a  }\u000a  iVar6 = count_leading_zeroes(uVar4);\u000a  if (uVar5 == 0) {\u000a    iVar6 = iVar6 + 0x20;\u000a  }\u000a  uVar7 = iVar6 - 0xb;\u000a  bVar13 = SBORROW4(uVar7,0x20);\u000a  uVar5 = iVar6 - 0x2b;\u000a  bVar12 = (int)uVar5 < 0;\u000a  bVar11 = uVar5 == 0;\u000a  if ((int)uVar7 < 0x20) {\u000a    bVar13 = SCARRY4(uVar5,0xc);\u000a    iVar6 = iVar6 + -0x1f;\u000a    bVar12 = iVar6 < 0;\u000a    bVar11 = iVar6 == 0;\u000a    uVar5 = uVar7;\u000a    if (!bVar11 && bVar12 == bVar13) {\u000a      uVar3 = uVar4 << (uVar7 & 0xff);\u000a      uVar4 = uVar4 >> (0xcU - iVar6 & 0xff);\u000a      goto LAB_000353d8;\u000a    }\u000a  }\u000a  if (bVar11 || bVar12 != bVar13) {\u000a    uVar10 = 0x20 - uVar5;\u000a  }\u000a  uVar4 = uVar4 << (uVar5 & 0xff);\u000a  if (bVar11 || bVar12 != bVar13) {\u000a    uVar4 = uVar4 | uVar3 >> (uVar10 & 0xff);\u000a  }\u000a  if (bVar11 || bVar12 != bVar13) {\u000a    uVar3 = uVar3 << (uVar5 & 0xff);\u000a  }\u000aLAB_000353d8:\u000a  if ((int)uVar7 <= iVar8) {\u000a    return CONCAT44(uVar3,uVar4 + (iVar8 - uVar7) * 0x100000 | uVar9);\u000a  }\u000a  uVar5 = ~(iVar8 - uVar7);\u000a  if (0x1e < (int)uVar5) {\u000a    return CONCAT44(uVar4 >> (uVar5 - 0x1f & 0xff),uParm2) & 0xffffffff80000000;\u000a  }\u000a  iVar8 = uVar5 - 0x13;\u000a  if (iVar8 == 0 || iVar8 < 0 != SCARRY4(uVar5 - 0x1f,0xc)) {\u000a    uVar5 = uVar5 + 1;\u000a    return CONCAT44(uVar3 >> (uVar5 & 0xff) | uVar4 << (0x20 - uVar5 & 0xff),\u000a                    uVar9 | uVar4 >> (uVar5 & 0xff));\u000a  }\u000a  return CONCAT44(uVar3 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar4 << (0xcU - iVar8 & 0xff),uParm2) &\u000a         0xffffffff80000000;\u000a}\u000a\u000a
p1116
S'orrs r2,r0,r1\nbxeq lr\nstmdb sp!,{ r4 r5 lr }\nands r5,r1,#0x80000000\nbpl 0x000355a8\nrsbs r0,r0,#0x0\nrsc r1,r1,#0x0\n'
p1117
S'01 20 90 e1\n1e ff 2f 01\n30 40 2d e9\n02 51 11 e2\n01 00 00 5a\n00 00 70 e2\n00 10 e1 e2\n'
p1118
S'.text:0003558c\n.text:00035590\n.text:00035594\n.text:00035598\n.text:0003559c\n.text:000355a0\n.text:000355a4\n'
p1119
tp1120
sS'lame_get_athaa_sensitivity'
p1121
(S'\n__stdcall lame_get_athaa_sensitivity()\n'
p1122
V\u000aundefined4 lame_get_athaa_sensitivity(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xec);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1123
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ed62\nmov r0,#0xec\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p1124
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 6e fb\n01 b4\n02 bc\n00 20\n00 29\n01 d0\nec 20\n20 58\nd0 bd\n'
p1125
S'.text:0002ed48\n.text:0002ed4a\n.text:0002ed4c\n.text:0002ed4e\n.text:0002ed50\n.text:0002ed54\n.text:0002ed56\n.text:0002ed58\n.text:0002ed5a\n.text:0002ed5c\n.text:0002ed5e\n.text:0002ed60\n.text:0002ed62\n'
p1126
tp1127
sS'lame_get_noclipScale'
p1128
(S'\n__stdcall lame_get_noclipScale()\n'
p1129
V\u000aundefined4 lame_get_noclipScale(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f3c0);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1130
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f3b8\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f3b8\nldr r0,[0x0002f3c0]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p1131
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 4a f8\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 48 f8\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p1132
S'.text:0002f390\n.text:0002f392\n.text:0002f394\n.text:0002f396\n.text:0002f398\n.text:0002f39c\n.text:0002f39e\n.text:0002f3a0\n.text:0002f3a2\n.text:0002f3a4\n.text:0002f3a6\n.text:0002f3a8\n.text:0002f3aa\n.text:0002f3ac\n.text:0002f3b0\n.text:0002f3b2\n.text:0002f3b4\n.text:0002f3b6\n.text:0002f3b8\n.text:0002f3ba\n.text:0002f3bc\n'
p1133
tp1134
sS'get_max_frame_buffer_size_by_constraint'
p1135
(S'\n__stdcall get_max_frame_buffer_size_by_constraint()\n'
p1136
V\u000aint get_max_frame_buffer_size_by_constraint(int *piParm1,int iParm2)\u000a\u000a{\u000a  int *piVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  \u000a  if (piParm1[0x1a] < DAT_00016fc0) {\u000a    iVar4 = *piParm1;\u000a    if (iParm2 == 2) goto LAB_00016fb2;\u000a    if (iParm2 != 1) {\u000a      return 0x2d00;\u000a    }\u000a    iVar2 = piParm1[0xc];\u000a    iVar3 = *(int *)(DAT_00016fc4 + 0x16f8a) + iVar4 * 0x40;\u000a    piVar1 = (int *)(iVar3 + 0x20);\u000a    if (15999 < iVar2) {\u000a      piVar1 = (int *)(iVar3 + 0x38);\u000a    }\u000a    iVar4 = *piVar1 * (DAT_00016fc8 * iVar4 + DAT_00016fc8);\u000a  }\u000a  else {\u000a    iVar4 = *piParm1;\u000a    if (iParm2 != 1) {\u000aLAB_00016fb2:\u000a      return iVar4 * 0x1e00 + 0x1e00;\u000a    }\u000a    iVar4 = (DAT_00016fc8 * iVar4 + DAT_00016fc8) * piParm1[0x1a];\u000a    iVar2 = piParm1[0xc];\u000a  }\u000a  iVar4 = __divsi3(iVar4,iVar2);\u000a  return iVar4 << 3;\u000a}\u000a\u000a
p1137
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\nldr r2,[r0,#0x68]\nldr r3,[0x00016fc0]\ncmp r2,r3\nblt 0x00016f72\nldr r3,[r0,#0x0]\ncmp r1,#0x1\nbne 0x00016fb2\nldr r1,[0x00016fc8]\nmul r3,r1\nadd r1,r3,r1\nmul r2,r1\nldr r1,[r0,#0x30]\npush { r2 }\npop { r0 }\nb 0x00016faa\nmov r2,#0x2d\nlsl r2,r2,#0x8\nldr r3,[r0,#0x0]\ncmp r1,#0x2\nbeq 0x00016fb2\ncmp r1,#0x1\nbne 0x00016fba\nldr r1,[r0,#0x30]\nlsl r0,r3,#0x6\nldr r2,[0x00016fc4]\nadd r2,pc\nldr r2,[r2,#0x0]\nadd r2,r2,r0\npush { r2 }\npop { r0 }\nadd r0,#0x20\nadd r2,#0x38\nmov r4,#0x7d\nlsl r4,r4,#0x7\ncmp r1,r4\nblt 0x00016fa0\npush { r2 }\npop { r0 }\nldr r2,[r0,#0x0]\nldr r0,[0x00016fc8]\nmul r3,r0\nadd r0,r3,r0\nmul r0,r2\nbl 0x00037980\nlsl r2,r0,#0x3\nb 0x00016fba\nmov r0,#0xf\nlsl r0,r0,#0x9\nmul r3,r0\nadd r2,r3,r0\npush { r2 }\npop { r0 }\npop { r4, r6, r7, pc }\n'
p1138
S'd0 b5\n02 af\n82 6e\n1a 4b\n9a 42\n0a db\n03 68\n01 29\n27 d1\n19 49\n4b 43\n59 18\n4a 43\n01 6b\n04 b4\n01 bc\n1b e0\n2d 22\n12 02\n03 68\n02 29\n1a d0\n01 29\n1c d1\n01 6b\n98 01\n0f 4a\n7a 44\n12 68\n12 18\n04 b4\n01 bc\n20 30\n38 32\n7d 24\ne4 01\na1 42\n01 db\n04 b4\n01 bc\n02 68\n09 48\n43 43\n18 18\n50 43\n20 f0 e9 fc\nc2 00\n03 e0\n0f 20\n40 02\n43 43\n1a 18\n04 b4\n01 bc\nd0 bd\n'
p1139
S'.text:00016f50\n.text:00016f52\n.text:00016f54\n.text:00016f56\n.text:00016f58\n.text:00016f5a\n.text:00016f5c\n.text:00016f5e\n.text:00016f60\n.text:00016f62\n.text:00016f64\n.text:00016f66\n.text:00016f68\n.text:00016f6a\n.text:00016f6c\n.text:00016f6e\n.text:00016f70\n.text:00016f72\n.text:00016f74\n.text:00016f76\n.text:00016f78\n.text:00016f7a\n.text:00016f7c\n.text:00016f7e\n.text:00016f80\n.text:00016f82\n.text:00016f84\n.text:00016f86\n.text:00016f88\n.text:00016f8a\n.text:00016f8c\n.text:00016f8e\n.text:00016f90\n.text:00016f92\n.text:00016f94\n.text:00016f96\n.text:00016f98\n.text:00016f9a\n.text:00016f9c\n.text:00016f9e\n.text:00016fa0\n.text:00016fa2\n.text:00016fa4\n.text:00016fa6\n.text:00016fa8\n.text:00016faa\n.text:00016fae\n.text:00016fb0\n.text:00016fb2\n.text:00016fb4\n.text:00016fb6\n.text:00016fb8\n.text:00016fba\n.text:00016fbc\n.text:00016fbe\n'
p1140
tp1141
sS'lame_get_lowpassfreq'
p1142
(S'\n__stdcall lame_get_lowpassfreq(lame_global_flags * gfp)\n'
p1143
V\u000aint lame_get_lowpassfreq(lame_global_flags *gfp)\u000a\u000a{\u000a  ushort uVar1;\u000a  uint uVar2;\u000a  ushort *in_r1;\u000a  ushort *puVar3;\u000a  int in_r2;\u000a  int iVar4;\u000a  undefined uVar5;\u000a  undefined uVar6;\u000a  undefined uVar7;\u000a  undefined *puVar8;\u000a  uint uVar9;\u000a  \u000a  uVar2 = DAT_0001ea54;\u000a  uVar1 = *in_r1;\u000a  uVar9 = (uint)uVar1;\u000a  uVar5 = (undefined)(uVar1 >> 8);\u000a  uVar6 = uVar5;\u000a  if (uVar9 != DAT_0001ea54) {\u000a    uVar6 = (char)uVar1;\u000a  }\u000a  *(undefined *)&gfp->class_id = uVar6;\u000a  uVar6 = (char)uVar1;\u000a  if (uVar9 != uVar2) {\u000a    uVar6 = uVar5;\u000a  }\u000a  *(undefined *)((int)&gfp->class_id + 1) = uVar6;\u000a  if (in_r2 != 1) {\u000a    iVar4 = 1 - in_r2;\u000a    puVar8 = (undefined *)((int)&gfp->class_id + 3);\u000a    puVar3 = in_r1 + 1;\u000a    do {\u000a      uVar2 = DAT_0001ea54;\u000a      uVar5 = (undefined)*puVar3;\u000a      uVar7 = (undefined)(*puVar3 >> 8);\u000a      uVar6 = uVar7;\u000a      if (uVar9 != DAT_0001ea54) {\u000a        uVar6 = uVar5;\u000a      }\u000a      puVar8[-1] = uVar6;\u000a      if (uVar9 != uVar2) {\u000a        uVar5 = uVar7;\u000a      }\u000a      *puVar8 = uVar5;\u000a      puVar8 = puVar8 + 2;\u000a      iVar4 = iVar4 + 1;\u000a      puVar3 = puVar3 + 1;\u000a    } while (iVar4 != 0);\u000a  }\u000a  return (int)((int)&gfp->class_id + in_r2 * 2);\u000a}\u000a\u000a
p1144
S'sub sp,#0xc\nldrh r7,[r1,#0x0]\nlsr r4,r7,#0x8\nldr r5,[0x0001ea54]\ncmp r7,r5\npush { r4 }\npop { r3 }\nbeq 0x0001e9fa\npush { r7 }\npop { r3 }\nstrb r3,[r0,#0x0]\ncmp r7,r5\npush { r7 }\npop { r3 }\n'
p1145
S'83 b0\n0f 88\n3c 0a\n19 4d\naf 42\n10 b4\n08 bc\n01 d0\n80 b4\n08 bc\n03 70\naf 42\n80 b4\n08 bc\n'
p1146
S'.text:0001e9e6\n.text:0001e9e8\n.text:0001e9ea\n.text:0001e9ec\n.text:0001e9ee\n.text:0001e9f0\n.text:0001e9f2\n.text:0001e9f4\n.text:0001e9f6\n.text:0001e9f8\n.text:0001e9fa\n.text:0001e9fc\n.text:0001e9fe\n.text:0001ea00\n'
p1147
tp1148
sS'lame_set_analysis'
p1149
(S'\n__stdcall lame_set_analysis(lame_global_flags * gfp, int analysis)\n'
p1150
V\u000aint lame_set_analysis(lame_global_flags *gfp,int analysis)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  lame_global_flags *gfp_00;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int unaff_r4;\u000a  undefined4 *puVar9;\u000a  int unaff_r5;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int *piStack00000004;\u000a  undefined4 *puStack00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint in_stack_0000002c;\u000a  uint uStack00000030;\u000a  \u000a  *(lame_global_flags **)(unaff_r4 + unaff_r5) = gfp;\u000a  piStack00000004 = (int *)(in_stack_0000001c + DAT_0001e1c8);\u000a  if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a      (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a     (uVar1 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar1 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar1 * 4));\u000a  }\u000a  puVar9 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a  puStack00000008 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a  while (puVar9 != (undefined4 *)0x0) {\u000a    uVar1 = puVar9[1];\u000a    uVar11 = 0xff;\u000a    if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 == DAT_0001e1e0)) {\u000a      iVar2 = puVar9[4] * 2 + 0x10;\u000a      if (puVar9[5] != 1) {\u000a        iVar2 = puVar9[4] + 0xf;\u000a      }\u000a      iVar3 = puVar9[7];\u000a      if (puVar9[8] == 1) {\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      iVar2 = iVar2 + iVar3;\u000a    }\u000a    else {\u000a      do {\u000a        uVar10 = uVar11 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar10 != (uVar11 & uVar1)) {\u000a          uVar6 = uVar11 & uVar1;\u000a        }\u000a        if (uVar10 == 0) {\u000a          uVar6 = uVar10;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar2 = iVar2 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar2 = sizeOfWxxxNode(puVar9);\u000a      }\u000a      else {\u000a        iVar3 = puVar9[7];\u000a        iVar4 = puVar9[4];\u000a        if (puVar9[8] == 1) {\u000a          iVar2 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar2 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a        }\u000a        iVar2 = iVar2 + iVar3;\u000a      }\u000a    }\u000a    in_stack_0000002c = iVar2 + in_stack_0000002c;\u000a    puVar9 = (undefined4 *)*puVar9;\u000a  }\u000a  if ((*in_stack_00000010 & 0x20) != 0) {\u000a    in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a  }\u000a  uVar1 = in_stack_0000002c;\u000a  if ((in_stack_0000002c <= in_stack_00000014) && (uVar1 = 0, in_stack_00000018 != (undefined *)0x0)\u000a     ) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    uStack00000030 = 0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar1 = in_stack_0000002c - 10;\u000a    in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a    puVar12 = in_stack_00000018 + 10;\u000a    puVar9 = (undefined4 *)*puStack00000008;\u000a    while (puVar9 != (undefined4 *)0x0) {\u000a      uVar1 = puVar9[1];\u000a      uVar11 = 0xff;\u000a      iVar2 = 4;\u000a      if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a        iVar2 = puVar9[4] * 2 + 0x10;\u000a        if (puVar9[5] != 1) {\u000a          iVar2 = puVar9[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (puVar9[8] == 1) {\u000a          iVar3 = puVar9[8];\u000a        }\u000a        uVar11 = (puVar9[7] << iVar3) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar11) {\u000a          do {\u000a            puVar12[iVar2 + -1] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar11 = uVar11 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar12[iVar2 + 3] = (char)uVar11;\u000a            iVar2 = iVar2 + -1;\u000a            uVar11 = uVar11 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar12[8] = 0;\u000a          puVar12[9] = 0;\u000a          *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a          puVar12[0xb] = *(undefined *)(puVar9 + 2);\u000a          puVar12[0xc] = *(undefined *)((int)puVar9 + 9);\u000a          puVar12[0xd] = *(undefined *)((int)puVar9 + 10);\u000a          puVar12 = puVar12 + 0xe;\u000a          if (puVar9[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = puVar9[4];\u000a          if (iVar2 != 0) {\u000a            puVar5 = (undefined *)puVar9[3];\u000a            iVar3 = iVar2;\u000a            puVar8 = puVar12;\u000a            do {\u000a              *puVar8 = *puVar5;\u000a              puVar8 = puVar8 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar12 = puVar12 + iVar2;\u000a          }\u000a          *puVar12 = 0;\u000a          puVar12 = puVar12 + 1;\u000a          if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a            puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[6],puVar9[7]);\u000a          }\u000a          else {\u000a            iVar2 = puVar9[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar9[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              puVar12 = puVar12 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar10 = uVar11 & 0x57000000;\u000a          uVar6 = uStack00000030;\u000a          if (uVar10 != (uVar11 & uVar1)) {\u000a            uVar6 = uVar11 & uVar1;\u000a          }\u000a          if (uVar10 == 0) {\u000a            uVar6 = uVar10;\u000a          }\u000a          uVar7 = uVar7 | uVar6;\u000a          iVar2 = iVar2 + -1;\u000a          uVar11 = uVar11 << 8;\u000a        } while (iVar2 != 0);\u000a        if (uVar7 == 0) {\u000a          uVar11 = sizeOfWxxxNode(puVar9);\u000a          iVar2 = 4;\u000a          if (10 < uVar11) {\u000a            do {\u000a              puVar12[iVar2 + -1] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar11 = uVar11 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar12[iVar2 + 3] = (char)uVar11;\u000a              iVar2 = iVar2 + -1;\u000a              uVar11 = uVar11 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar12[8] = 0;\u000a            puVar12[9] = 0;\u000a            puVar8 = puVar12 + 10;\u000a            if (puVar9[4] != 0) {\u000a              *(bool *)(puVar12 + 10) = puVar9[5] == 1;\u000a              puVar12 = puVar12 + 0xb;\u000a              if (puVar9[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a              }\u000a              else {\u000a                iVar2 = puVar9[4];\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar9[3];\u000a                  iVar3 = iVar2;\u000a                  puVar8 = puVar12;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar12 = puVar12 + iVar2;\u000a                }\u000a                *puVar12 = 0;\u000a                puVar8 = puVar12 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) {\u000a              puVar12 = (undefined *)writeLoBytes(puVar8,puVar9[6],puVar9[7]);\u000a            }\u000a            else {\u000a              iVar2 = puVar9[7];\u000a              puVar12 = puVar8;\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar9[6];\u000a                iVar3 = iVar2;\u000a                puVar12 = puVar8;\u000a                do {\u000a                  *puVar12 = *puVar5;\u000a                  puVar12 = puVar12 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar12 = puVar8 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar2 = puVar9[7];\u000a          iVar3 = puVar9[4];\u000a          if (puVar9[8] == 1) {\u000a            iVar4 = iVar3 * 2 + 0xd;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a            iVar2 = iVar2 << 1;\u000a          }\u000a          else {\u000a            iVar4 = iVar3 + 0xc;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a          }\u000a          iVar3 = 4;\u000a          if (10 < (uint)(iVar4 + iVar2)) {\u000a            do {\u000a              puVar12[iVar3 + -1] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar1 = (iVar4 + iVar2) - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar12[iVar2 + 3] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar12[8] = 0;\u000a            puVar12[9] = 0;\u000a            *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a            puVar12 = puVar12 + 0xb;\u000a            iVar2 = puVar9[4];\u000a            if (iVar2 != 0) {\u000a              if (puVar9[5] == 1) {\u000a                puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[3]);\u000a                *puVar12 = 0;\u000a                puVar12[1] = 0;\u000a                puVar12 = puVar12 + 2;\u000a              }\u000a              else {\u000a                puVar5 = (undefined *)puVar9[3];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar12;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar12[iVar2] = 0;\u000a                puVar12 = puVar12 + iVar2 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) goto LAB_0001e338;\u000a            iVar2 = puVar9[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar9[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar9 = (undefined4 *)*puVar9;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar2 = 4;\u000a      if ((*piStack00000004 != 0) &&\u000a         (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar12,in_stack_00000018 + (in_stack_0000002c - (int)puVar12));\u000a    uVar1 = in_stack_0000002c;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return uVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1151
S'str r0,[r4,r5]\n'
p1152
S'60 51\n'
p1153
S'.text:0001df2e\n'
p1154
tp1155
sS'FindNearestBitrate'
p1156
(S'\n__stdcall FindNearestBitrate()\n'
p1157
V\u000avoid FindNearestBitrate(void)\u000a\u000a{\u000a  (*(nearestBitrateFullIndex + DAT_00037e4c))();\u000a  return;\u000a}\u000a\u000a
p1158
S'ldr r12,[0x37e4c]\nadd pc,r12,pc\n'
p1159
S'00 c0 9f e5\n0f f0 8c e0\n'
p1160
S'.text:00037e44\n.text:00037e48\n'
p1161
tp1162
sS'__gnu_Unwind_RaiseException'
p1163
(S'\n__stdcall __gnu_Unwind_RaiseException()\n'
p1164
V\u000aundefined4 __gnu_Unwind_RaiseException(int iParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 local_1f8;\u000a  undefined4 local_1f4;\u000a  undefined4 uStack496;\u000a  undefined4 uStack492;\u000a  undefined4 uStack488;\u000a  undefined4 local_1e4;\u000a  undefined4 uStack480;\u000a  undefined4 uStack476;\u000a  undefined4 uStack472;\u000a  undefined4 local_1d4;\u000a  undefined4 uStack464;\u000a  undefined4 uStack460;\u000a  undefined4 uStack456;\u000a  undefined4 local_1c4;\u000a  undefined4 uStack448;\u000a  undefined4 uStack444;\u000a  undefined4 local_1b8;\u000a  \u000a  *(undefined4 *)(iParm2 + 0x40) = *(undefined4 *)(iParm2 + 0x3c);\u000a  local_1f4 = *(undefined4 *)(iParm2 + 4);\u000a  uStack496 = *(undefined4 *)(iParm2 + 8);\u000a  uStack492 = *(undefined4 *)(iParm2 + 0xc);\u000a  uStack488 = *(undefined4 *)(iParm2 + 0x10);\u000a  local_1e4 = *(undefined4 *)(iParm2 + 0x14);\u000a  uStack480 = *(undefined4 *)(iParm2 + 0x18);\u000a  uStack476 = *(undefined4 *)(iParm2 + 0x1c);\u000a  uStack472 = *(undefined4 *)(iParm2 + 0x20);\u000a  local_1d4 = *(undefined4 *)(iParm2 + 0x24);\u000a  uStack464 = *(undefined4 *)(iParm2 + 0x28);\u000a  uStack460 = *(undefined4 *)(iParm2 + 0x2c);\u000a  uStack456 = *(undefined4 *)(iParm2 + 0x30);\u000a  local_1c4 = *(undefined4 *)(iParm2 + 0x34);\u000a  uStack448 = *(undefined4 *)(iParm2 + 0x38);\u000a  uStack444 = *(undefined4 *)(iParm2 + 0x3c);\u000a  local_1b8 = *(undefined4 *)(iParm2 + 0x40);\u000a  local_1f8 = 0xffffffff;\u000a  do {\u000a    iVar1 = get_eit_entry(iParm1,local_1b8);\u000a    if (iVar1 != 0) {\u000a      return 9;\u000a    }\u000a    iVar1 = (**(code **)(iParm1 + 0x10))(0,iParm1,&local_1f8);\u000a  } while (iVar1 == 8);\u000a  restore_non_core_regs(&local_1f8);\u000a  if (iVar1 == 6) {\u000a    unwind_phase2(iParm1,iParm2);\u000a  }\u000a  return 9;\u000a}\u000a\u000a
p1165
S'stmdb sp!,{ r4 r5 r6 r7 lr }\nldr r3,[r1,#0x3c]\nadd lr,r1,#0x4\nstr r3,[r1,#0x40]\ncpy r5,r0\ncpy r4,r1\nldmia lr!,{r0 r1 r2 r3 }\nsub sp,sp,#0x1e4\nadd r12,sp,#0x4\nstmia r12!,{r0 r1 r2 r3 }\nldmia lr!,{r0 r1 r2 r3 }\nstmia r12!,{r0 r1 r2 r3 }\nldmia lr!,{r0 r1 r2 r3 }\nstmia r12!,{r0 r1 r2 r3 }\nldmia lr,{r0 r1 r2 r3 }\nadd r6,sp,#0x1e0\nstmia r12,{r0 r1 r2 r3 }\nmvn r3,#0x0\nstr r3,[r6,#-0x1e0]!\ncpy r0,r5\nldr r1,[sp,#0x40]\nbl 0x000364cc\ncmp r0,#0x0\nbne 0x00036888\nldr r3,[r5,#0x10]\ncpy r1,r5\ncpy r2,r6\nblx r3\ncmp r0,#0x8\ncpy r7,r0\nbeq 0x0003683c\ncpy r0,r6\nbl 0x000365d0\ncmp r7,#0x6\nbne 0x00036888\ncpy r0,r5\ncpy r1,r4\nbl 0x0003665c\nmov r0,#0x9\nadd sp,sp,#0x1e4\nldmia sp!,{ r4 r5 r6 r7 pc }\n'
p1166
S'f0 40 2d e9\n3c 30 91 e5\n04 e0 81 e2\n40 30 81 e5\n00 50 a0 e1\n01 40 a0 e1\n0f 00 be e8\n79 df 4d e2\n04 c0 8d e2\n0f 00 ac e8\n0f 00 be e8\n0f 00 ac e8\n0f 00 be e8\n0f 00 ac e8\n0f 00 9e e8\n1e 6e 8d e2\n0f 00 8c e8\n00 30 e0 e3\ne0 31 26 e5\n05 00 a0 e1\n40 10 9d e5\n20 ff ff eb\n00 00 50 e3\n0d 00 00 1a\n10 30 95 e5\n05 10 a0 e1\n06 20 a0 e1\n33 ff 2f e1\n08 00 50 e3\n00 70 a0 e1\nf3 ff ff 0a\n06 00 a0 e1\n56 ff ff eb\n06 00 57 e3\n02 00 00 1a\n05 00 a0 e1\n04 10 a0 e1\n74 ff ff eb\n09 00 a0 e3\n79 df 8d e2\nf0 80 bd e8\n'
p1167
S'.text:000367f0\n.text:000367f4\n.text:000367f8\n.text:000367fc\n.text:00036800\n.text:00036804\n.text:00036808\n.text:0003680c\n.text:00036810\n.text:00036814\n.text:00036818\n.text:0003681c\n.text:00036820\n.text:00036824\n.text:00036828\n.text:0003682c\n.text:00036830\n.text:00036834\n.text:00036838\n.text:0003683c\n.text:00036840\n.text:00036844\n.text:00036848\n.text:0003684c\n.text:00036850\n.text:00036854\n.text:00036858\n.text:0003685c\n.text:00036860\n.text:00036864\n.text:00036868\n.text:0003686c\n.text:00036870\n.text:00036874\n.text:00036878\n.text:0003687c\n.text:00036880\n.text:00036884\n.text:00036888\n.text:0003688c\n.text:00036890\n'
p1168
tp1169
sS'__aeabi_drsub'
p1170
(S'\n__stdcall __aeabi_drsub()\n'
p1171
V\u000avoid __aeabi_drsub(undefined4 uParm1,uint uParm2)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __adddf3(uParm1,uParm2 ^ 0x80000000);\u000a}\u000a\u000a
p1172
S'eor r1,r1,#0x80000000\nb 0x00035240\n'
p1173
S'02 11 21 e2\n00 00 00 ea\n'
p1174
S'.text:00035234\n.text:00035238\n'
p1175
tp1176
sS'__floatunsisf'
p1177
(S'\n__stdcall __floatunsisf()\n'
p1178
V\u000avoid __floatunsisf(void)\u000a\u000a{\u000a  (*(free_id3tag + DAT_00037c3c))();\u000a  return;\u000a}\u000a\u000a
p1179
S'ldr r12,[0x37c3c]\nadd pc,r12,pc\n'
p1180
S'00 c0 9f e5\n0f f0 8c e0\n'
p1181
S'.text:00037c34\n.text:00037c38\n'
p1182
tp1183
sS'ATHformula'
p1184
(S'\n__stdcall ATHformula(SessionConfig_t * cfg, FLOAT f)\n'
p1185
V\u000aFLOAT ATHformula(SessionConfig_t *cfg,FLOAT f)\u000a\u000a{\u000a  undefined4 unaff_r5;\u000a  undefined4 unaff_r6;\u000a  FLOAT FVar1;\u000a  undefined4 in_stack_00000000;\u000a  undefined4 in_stack_00000004;\u000a  \u000a  flush_bitstream(in_stack_00000000);\u000a  copy_buffer(unaff_r5,unaff_r6,in_stack_00000004,1);\u000a  FVar1 = (FLOAT)save_gain_values(unaff_r5);\u000a  return FVar1;\u000a}\u000a\u000a
p1186
S'pop { r0 }\nbl 0x00038030\nmov r3,#0x1\npush { r5 }\npop { r0 }\npush { r6 }\npop { r1 }\nldr r2,[sp,#0x0]\nbl 0x00037b50\npush { r0 }\npop { r4 }\npush { r5 }\npop { r0 }\nbl 0x00021294\n'
p1187
S'01 bc\n16 f0 e3 fe\n01 23\n20 b4\n01 bc\n40 b4\n02 bc\n00 9a\n16 f0 6b fc\n01 b4\n10 bc\n20 b4\n01 bc\n00 f0 07 f8\n'
p1188
S'.text:00021264\n.text:00021266\n.text:0002126a\n.text:0002126c\n.text:0002126e\n.text:00021270\n.text:00021272\n.text:00021274\n.text:00021276\n.text:0002127a\n.text:0002127c\n.text:0002127e\n.text:00021280\n.text:00021282\n'
p1189
tp1190
sS'atoi'
p1191
(S'\n__stdcall atoi(char * __nptr)\n'
p1192
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint atoi(char *__nptr)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(strchr + DAT_00037cec))();\u000a  return iVar1;\u000a}\u000a\u000a
p1193
S'ldr r12,[0x37cec]\nadd pc,r12,pc\n'
p1194
S'00 c0 9f e5\n0f f0 8c e0\n'
p1195
S'.text:00037ce4\n.text:00037ce8\n'
p1196
tp1197
sS'malloc'
p1198
(S'\n__stdcall malloc(size_t __size)\n'
p1199
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(__aeabi_fcmplt + DAT_00037a2c))();\u000a  return pvVar1;\u000a}\u000a\u000a
p1200
S'ldr r12,[0x37a2c]\nadd pc,r12,pc\n'
p1201
S'00 c0 9f e5\n0f f0 8c e0\n'
p1202
S'.text:00037a24\n.text:00037a28\n'
p1203
tp1204
sS'lame_set_quality'
p1205
(S'\n__stdcall lame_set_quality()\n'
p1206
V\u000avoid lame_set_quality(void)\u000a\u000a{\u000a  (*(lame_init_params + DAT_0003796c))();\u000a  return;\u000a}\u000a\u000a
p1207
S'ldr r12,[0x3796c]\nadd pc,r12,pc\n'
p1208
S'00 c0 9f e5\n0f f0 8c e0\n'
p1209
S'.text:00037964\n.text:00037968\n'
p1210
tp1211
sS'__eqsf2'
p1212
(S'\n__stdcall __eqsf2()\n'
p1213
V\u000auint __eqsf2(uint uParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  \u000a  uVar1 = uParm1 * 2;\u000a  uVar2 = uParm2 * 2;\u000a  bVar5 = ~((int)uVar1 >> 0x18) == 0;\u000a  if (!bVar5) {\u000a    bVar5 = ~((int)uVar2 >> 0x18) == 0;\u000a  }\u000a  if ((bVar5) &&\u000a     (((~((int)uVar1 >> 0x18) == 0 && ((uParm1 & 0x7fffff) != 0)) ||\u000a      ((~((int)uVar2 >> 0x18) == 0 && ((uParm2 & 0x7fffff) != 0)))))) {\u000a    return 1;\u000a  }\u000a  uVar3 = uVar1 | uParm2 & 0x7fffffff;\u000a  bVar5 = uVar3 == 0;\u000a  if (!bVar5) {\u000a    uVar3 = uParm1 ^ uParm2;\u000a    bVar5 = uVar3 == 0;\u000a  }\u000a  bVar4 = -1 < (int)uVar3;\u000a  if (bVar4) {\u000a    uParm1 = uVar1 + uParm2 * -2;\u000a    bVar5 = uParm1 == 0;\u000a  }\u000a  if ((bVar4 && uVar1 >= uVar2) && !bVar5) {\u000a    uParm1 = (int)uParm2 >> 0x1f;\u000a  }\u000a  if (!bVar4 || uVar1 < uVar2) {\u000a    uParm1 = ~((int)uParm2 >> 0x1f);\u000a  }\u000a  if (!bVar5) {\u000a    uParm1 = uParm1 | 1;\u000a  }\u000a  return uParm1;\u000a}\u000a\u000a
p1214
S'mov r12,#0x1\nstr r12,[sp,#-0x4]!\nmov r2,r0, lsl #0x1\nmov r3,r1, lsl #0x1\nmvns r12,r2, asr #0x18\nmvnnes r12,r3, asr #0x18\nbeq 0x0003626c\nadd sp,sp,#0x4\norrs r12,r2,r3, lsr #0x1\nteqne r0,r1\nsubpls r0,r2,r3\nmovhi r0,r1, asr #0x1f\nmvncc r0,r1, asr #0x1f\norrne r0,r0,#0x1\nbx lr\nmvns r12,r2, asr #0x18\nbne 0x0003627c\nmovs r12,r0, lsl #0x9\nbne 0x0003628c\nmvns r12,r3, asr #0x18\nbne 0x0003624c\nmovs r12,r1, lsl #0x9\nbeq 0x0003624c\nldr r0,[sp],#0x4\nbx lr\n'
p1215
S'01 c0 a0 e3\n04 c0 2d e5\n80 20 a0 e1\n81 30 a0 e1\n42 cc f0 e1\n43 cc f0 11\n07 00 00 0a\n04 d0 8d e2\na3 c0 92 e1\n01 00 30 11\n03 00 52 50\nc1 0f a0 81\nc1 0f e0 31\n01 00 80 13\n1e ff 2f e1\n42 cc f0 e1\n01 00 00 1a\n80 c4 b0 e1\n03 00 00 1a\n43 cc f0 e1\nf1 ff ff 1a\n81 c4 b0 e1\nef ff ff 0a\n04 00 9d e4\n1e ff 2f e1\n'
p1216
S'.text:00036230\n.text:00036234\n.text:00036238\n.text:0003623c\n.text:00036240\n.text:00036244\n.text:00036248\n.text:0003624c\n.text:00036250\n.text:00036254\n.text:00036258\n.text:0003625c\n.text:00036260\n.text:00036264\n.text:00036268\n.text:0003626c\n.text:00036270\n.text:00036274\n.text:00036278\n.text:0003627c\n.text:00036280\n.text:00036284\n.text:00036288\n.text:0003628c\n.text:00036290\n'
p1217
tp1218
sS'lame_encode_buffer_float'
p1219
(S'\n__stdcall lame_encode_buffer_float(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p1220
V\u000avoid lame_encode_buffer_float(void)\u000a\u000a{\u000a  lame_encode_buffer_template();\u000a  return;\u000a}\u000a\u000a
p1221
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\nmov r4,#0x7f\nlsl r4,r4,#0x17\nmov r5,sp\nstr r4,[r5,#0x10]\nmov r4,#0x1\nstr r4,[r5,#0xc]\nmov r4,#0x3\nstr r4,[r5,#0x8]\nldr r4,[sp,#0x2c]\nstr r4,[r5,#0x4]\nldr r4,[sp,#0x28]\nstr r4,[r5,#0x0]\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p1222
S'b0 b5\n02 af\n86 b0\n7f 24\ne4 05\n6d 46\n2c 61\n01 24\nec 60\n03 24\nac 60\n0b 9c\n6c 60\n0a 9c\n2c 60\nff f7 2b fe\n06 b0\nb0 bd\n'
p1223
S'.text:000210b8\n.text:000210ba\n.text:000210bc\n.text:000210be\n.text:000210c0\n.text:000210c2\n.text:000210c4\n.text:000210c6\n.text:000210c8\n.text:000210ca\n.text:000210cc\n.text:000210ce\n.text:000210d0\n.text:000210d2\n.text:000210d4\n.text:000210d6\n.text:000210da\n.text:000210dc\n'
p1224
tp1225
sS'lame_get_mf_samples_to_encode'
p1226
(S'\n__stdcall lame_get_mf_samples_to_encode()\n'
p1227
V\u000aundefined4 lame_get_mf_samples_to_encode(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f26c);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1228
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f264\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f264\nldr r0,[0x0002f26c]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p1229
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 f4 f8\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 f2 f8\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p1230
S'.text:0002f23c\n.text:0002f23e\n.text:0002f240\n.text:0002f242\n.text:0002f244\n.text:0002f248\n.text:0002f24a\n.text:0002f24c\n.text:0002f24e\n.text:0002f250\n.text:0002f252\n.text:0002f254\n.text:0002f256\n.text:0002f258\n.text:0002f25c\n.text:0002f25e\n.text:0002f260\n.text:0002f262\n.text:0002f264\n.text:0002f266\n.text:0002f268\n'
p1231
tp1232
sS'lame_encode_buffer_int'
p1233
(S'\n__stdcall lame_encode_buffer_int(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p1234
V\u000avoid lame_encode_buffer_int(void)\u000a\u000a{\u000a  lame_encode_buffer_template();\u000a  return;\u000a}\u000a\u000a
p1235
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\nmov r4,#0x6f\nlsl r4,r4,#0x17\nmov r5,sp\nstr r4,[r5,#0x10]\nmov r4,#0x1\nstr r4,[r5,#0xc]\nstr r4,[r5,#0x8]\nldr r4,[sp,#0x2c]\nstr r4,[r5,#0x4]\nldr r4,[sp,#0x28]\nstr r4,[r5,#0x0]\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p1236
S'b0 b5\n02 af\n86 b0\n6f 24\ne4 05\n6d 46\n2c 61\n01 24\nec 60\nac 60\n0b 9c\n6c 60\n0a 9c\n2c 60\nff f7 be fd\n06 b0\nb0 bd\n'
p1237
S'.text:00021194\n.text:00021196\n.text:00021198\n.text:0002119a\n.text:0002119c\n.text:0002119e\n.text:000211a0\n.text:000211a2\n.text:000211a4\n.text:000211a6\n.text:000211a8\n.text:000211aa\n.text:000211ac\n.text:000211ae\n.text:000211b0\n.text:000211b4\n.text:000211b6\n'
p1238
tp1239
sS'best_scalefac_store'
p1240
(S'\n__stdcall best_scalefac_store()\n'
p1241
V\u000avoid best_scalefac_store(void)\u000a\u000a{\u000a  (*(best_huffman_divide + DAT_0003836c))();\u000a  return;\u000a}\u000a\u000a
p1242
S'ldr r12,[0x3836c]\nadd pc,r12,pc\n'
p1243
S'00 c0 9f e5\n0f f0 8c e0\n'
p1244
S'.text:00038364\n.text:00038368\n'
p1245
tp1246
sS'lame_encode_flush'
p1247
(S'\n__stdcall lame_encode_flush()\n'
p1248
V\u000avoid lame_encode_flush(void)\u000a\u000a{\u000a  (*(lame_init + DAT_0003790c))();\u000a  return;\u000a}\u000a\u000a
p1249
S'ldr r12,[0x3790c]\nadd pc,r12,pc\n'
p1250
S'00 c0 9f e5\n0f f0 8c e0\n'
p1251
S'.text:00037904\n.text:00037908\n'
p1252
tp1253
sS'init_xrpow_core_c'
p1254
(S'\n__stdcall init_xrpow_core_c()\n'
p1255
V\u000avoid init_xrpow_core_c(uint *puParm1,undefined4 uParm2,int iParm3,undefined4 *puParm4)\u000a\u000a{\u000a  *puParm4 = 0;\u000a  if (-1 < iParm3) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __addsf3(DAT_00028c34 & *puParm1);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1256
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\npush { r3 }\npop { r5 }\nstr r5,[sp,#0x4]\nstr r1,[sp,#0x10]\npush { r0 }\npop { r3 }\nmov r1,#0x0\nstr r1,[r5,#0x0]\ncmp r2,#0x0\nblt 0x00028c2c\nldr r0,[0x00028c30]\nadd r0,r3,r0\nstr r0,[sp,#0x8]\nadd r6,r2,#0x1\nb 0x00028bba\nstr r3,[sp,#0xc]\nldr r0,[r3,#0x0]\nldr r4,[0x00028c34]\nand r4,r0\npush { r4 }\npop { r0 }\nbl 0x00037a70\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p1257
S'f0 b5\n03 af\n85 b0\n08 b4\n20 bc\n01 95\n04 91\n01 b4\n08 bc\n00 21\n29 60\n00 2a\n3e db\n20 48\n18 18\n02 90\n56 1c\n00 e0\n03 93\n18 68\n1d 4c\n04 40\n10 b4\n01 bc\n0e f0 53 ff\n05 b0\nf0 bd\n'
p1258
S'.text:00028b94\n.text:00028b96\n.text:00028b98\n.text:00028b9a\n.text:00028b9c\n.text:00028b9e\n.text:00028ba0\n.text:00028ba2\n.text:00028ba4\n.text:00028ba6\n.text:00028ba8\n.text:00028baa\n.text:00028bac\n.text:00028bae\n.text:00028bb0\n.text:00028bb2\n.text:00028bb4\n.text:00028bb6\n.text:00028bba\n.text:00028bbc\n.text:00028bbe\n.text:00028bc0\n.text:00028bc2\n.text:00028bc4\n.text:00028bc6\n.text:00028c2c\n.text:00028c2e\n'
p1259
tp1260
sS'lame_set_preset'
p1261
(S'\n__stdcall lame_set_preset()\n'
p1262
V\u000aundefined4 lame_set_preset(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0x98) = uParm2;\u000a    uVar2 = apply_preset(iParm1,uParm2,1);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1263
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\nmvn r0,r0\ncmp r1,#0x0\nbeq 0x0002f4b8\nmov r0,#0x98\nstr r4,[r5,r0]\nmov r2,#0x1\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nbl 0x00037e90\npop { r4, r5, r7, pc }\n'
p1264
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n08 f0 cb ff\n01 b4\n02 bc\n00 20\nc0 43\n00 29\n08 d0\n98 20\n2c 50\n01 22\n20 b4\n01 bc\n10 b4\n02 bc\n08 f0 ec fc\nb0 bd\n'
p1265
S'.text:0002f48a\n.text:0002f48c\n.text:0002f48e\n.text:0002f490\n.text:0002f492\n.text:0002f494\n.text:0002f496\n.text:0002f49a\n.text:0002f49c\n.text:0002f49e\n.text:0002f4a0\n.text:0002f4a2\n.text:0002f4a4\n.text:0002f4a6\n.text:0002f4a8\n.text:0002f4aa\n.text:0002f4ac\n.text:0002f4ae\n.text:0002f4b0\n.text:0002f4b2\n.text:0002f4b4\n.text:0002f4b8\n'
p1266
tp1267
sS'id3tag_set_fieldvalue_utf16'
p1268
(S'\n__stdcall id3tag_set_fieldvalue_utf16()\n'
p1269
V\u000avoid id3tag_set_fieldvalue_utf16(void)\u000a\u000a{\u000a  (*(__aeabi_dcmpgt + DAT_00037d2c))();\u000a  return;\u000a}\u000a\u000a
p1270
S'ldr r12,[0x37d2c]\nadd pc,r12,pc\n'
p1271
S'00 c0 9f e5\n0f f0 8c e0\n'
p1272
S'.text:00037d24\n.text:00037d28\n'
p1273
tp1274
sS'FUN_0002040c'
p1275
(S'\n__stdcall FUN_0002040c()\n'
p1276
V\u000aundefined4 FUN_0002040c(undefined4 uParm1,undefined4 uParm2)\u000a\u000a{\u000a  return uParm2;\u000a}\u000a\u000a
p1277
S'push { r1 }\npop { r0 }\nadd sp,#0x8c\npop { r4, r5, r6, r7, pc }\n'
p1278
S'02 b4\n01 bc\n23 b0\nf0 bd\n'
p1279
S'.text:0002040c\n.text:0002040e\n.text:00020410\n.text:00020412\n'
p1280
tp1281
sS'quantizeAndCountBits'
p1282
(S'\n__stdcall quantizeAndCountBits()\n'
p1283
V\u000avoid quantizeAndCountBits(int iParm1)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  undefined4 uVar7;\u000a  undefined4 *puVar8;\u000a  int iVar9;\u000a  int local_5c;\u000a  int local_48;\u000a  \u000a  iVar5 = *(int *)(iParm1 + 0x10);\u000a  local_5c = 2;\u000a  if (*(int *)(iVar5 + DAT_00033c24) != 0) {\u000a    local_5c = 4;\u000a  }\u000a  puVar8 = *(undefined4 **)(iParm1 + 8);\u000a  uVar1 = 0;\u000a  local_48 = 0;\u000a  while( true ) {\u000a    iVar6 = iVar5 + local_48 * 4;\u000a    iVar9 = 0;\u000a    if (*(int *)(iVar5 + 0x12e0) != 0) {\u000a      iVar9 = *(int *)(*(int *)(DAT_00033c30 + 0x339ba) + local_48 * 4);\u000a    }\u000a    uVar3 = *(uint *)(iVar6 + DAT_00033c34);\u000a    uVar4 = (*(uint *)(iVar5 + DAT_00033c2c) - uVar1) + 1;\u000a    uVar2 = uVar3;\u000a    if (uVar4 < uVar3) {\u000a      uVar2 = uVar4;\u000a    }\u000a    uVar4 = uVar2 & 3;\u000a    uVar7 = *(undefined4 *)\u000a             (*(int *)(DAT_00033c40 + 0x339aa) +\u000a             ((*(int *)(iVar5 + *(int *)(iVar6 + DAT_00033c38) * 4 + DAT_00033c3c) * -8 -\u000a              local_5c * (iVar9 + *(int *)(iVar6 + 0x1200))) + *(int *)(iVar5 + DAT_00033c28) &\u000a             0xffU) * 4);\u000a    uVar1 = uVar3 + uVar1;\u000a    local_48 = local_48 + 1;\u000a    if (uVar2 >> 2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __mulsf3(uVar7,*puVar8);\u000a    }\u000a    if (uVar4 == 1) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __mulsf3(uVar7,*puVar8);\u000a    }\u000a    if (uVar4 == 2) break;\u000a    if (uVar4 == 3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __mulsf3(uVar7,puVar8[2]);\u000a    }\u000a    if (*(uint *)(iVar5 + DAT_00033c2c) < uVar1) {\u000a      uVar7 = noquant_count_bits(*(undefined4 *)(iParm1 + 0xc),iVar5,0);\u000a      *(undefined4 *)(*(int *)(iParm1 + 0x10) + 0x12a0) = uVar7;\u000a      return;\u000a    }\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(uVar7,puVar8[1]);\u000a}\u000a\u000a
p1284
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x6c\nldr r3,[r0,#0x10]\nldr r1,[0x00033c24]\nldr r1,[r3,r1]\nmov r2,#0x2\nstr r2,[sp,#0x24]\nmov r2,#0x4\ncmp r1,#0x0\nbeq 0x00033974\nstr r2,[sp,#0x24]\nldr r1,[0x00033c28]\nstr r3,[sp,#0x30]\nadd r1,r3,r1\nstr r1,[sp,#0x20]\nmov r1,#0x97\nlsl r1,r1,#0x5\nadd r1,r3,r1\nstr r1,[sp,#0x1c]\nmov r1,#0x9\nstr r1,[sp,#0x18]\nlsl r1,r1,#0x8\nadd r1,r3,r1\nstr r1,[sp,#0x40]\nldr r1,[0x00033c2c]\nldr r4,[r3,r1]\nstr r4,[sp,#0x14]\nmov r1,#0x1\nmvn r1,r1\nsub r1,r1,r4\nstr r1,[sp,#0x8]\nldr r6,[r0,#0x8]\nstr r0,[sp,#0x0]\nmov r1,#0x0\nstr r1,[sp,#0x10]\nldr r0,[0x00033c40]\nadd r0,pc\nldr r0,[r0,#0x0]\nstr r0,[sp,#0xc]\nldr r0,[0x00033c44]\nadd r0,pc\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x44]\nldr r0,[0x00033c30]\nadd r0,pc\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x4]\npush { r1 }\npop { r0 }\nstr r1,[sp,#0x38]\nstr r6,[sp,#0x3c]\nldr r1,[sp,#0x38]\nlsl r1,r1,#0x2\nldr r2,[sp,#0x30]\nadd r3,r2,r1\nldr r2,[sp,#0x18]\nlsl r2,r2,#0x9\nldr r5,[r3,r2]\nldr r2,[sp,#0x1c]\nldr r2,[r2,#0x0]\ncmp r2,#0x0\nldr r6,[sp,#0x10]\nbeq 0x000339e0\nldr r2,[sp,#0x4]\nldr r6,[r2,r1]\nldr r1,[0x00033c34]\nldr r1,[r3,r1]\nsub r2,r4,r0\nadd r2,#0x1\ncmp r1,r2\nstr r0,[sp,#0x68]\npush { r1 }\npop { r0 }\nbls 0x000339f6\npush { r2 }\npop { r0 }\nmov r2,#0x3\npush { r0 }\npop { r4 }\nand r4,r2\nstr r4,[sp,#0x34]\nadd r5,r6,r5\nldr r6,[sp,#0x24]\nmul r5,r6\nldr r6,[0x00033c38]\nldr r3,[r3,r6]\nlsl r3,r3,#0x2\nldr r6,[sp,#0x30]\nadd r3,r6,r3\nldr r6,[0x00033c3c]\nldr r3,[r3,r6]\nlsl r3,r3,#0x3\nrsb r3,r3\nsub r3,r3,r5\nldr r5,[sp,#0x20]\nldr r5,[r5,#0x0]\nadd r3,r3,r5\nmov r5,#0xff\nand r5,r3\nlsl r3,r5,#0x2\nldr r5,[sp,#0xc]\nldr r5,[r5,r3]\nlsr r3,r0,#0x2\nldr r6,[sp,#0x68]\nadd r0,r1,r6\nldr r4,[sp,#0x38]\nadd r4,#0x1\nstr r4,[sp,#0x38]\ncmp r3,#0x0\npush { r6 }\npop { r4 }\nbeq 0x00033b34\nstr r0,[sp,#0x2c]\nldr r3,[sp,#0x8]\nadd r0,r4,r3\nmvn r1,r1\ncmp r0,r1\npush { r0 }\npop { r3 }\nbhi 0x00033a52\npush { r1 }\npop { r3 }\nmvn r2,r2\nbic r2,r3\nstr r2,[sp,#0x28]\ncmp r0,r1\nldr r2,[sp,#0x3c]\nbhi 0x00033a62\npush { r1 }\npop { r0 }\nmvn r0,r0\nlsr r0,r0,#0x2\nrsb r0,r0\npush { r2 }\npop { r1 }\nldr r6,[sp,#0x40]\nstr r6,[sp,#0x60]\nstr r1,[sp,#0x68]\nstr r0,[sp,#0x64]\nldr r0,[sp,#0x68]\nldr r1,[r0,#0x0]\npush { r5 }\npop { r0 }\nbl 0x00037aa0\nstr r0,[sp,#0x2c]\nldr r1,[sp,#0x40]\nldr r6,[sp,#0x3c]\nldr r2,[sp,#0x34]\nmov r0,#0x0\ncmp r2,#0x1\nbeq 0x00033b6c\nstr r1,[sp,#0x40]\ncmp r2,#0x2\nbeq 0x00033b56\ncmp r2,#0x3\nbne 0x00033c00\nldr r1,[r6,#0x8]\npush { r5 }\npop { r0 }\nbl 0x00037aa0\nstr r0,[sp,#0x68]\nldr r1,[r6,#0x4]\npush { r5 }\npop { r0 }\nbl 0x00037aa0\nstr r1,[sp,#0x40]\npush { r5 }\npop { r2 }\npush { r0 }\npop { r5 }\nstr r0,[sp,#0x68]\nldr r1,[r6,#0x0]\nstr r6,[sp,#0x3c]\npush { r2 }\npop { r0 }\nbl 0x00037aa0\n'
p1285
S'f0 b5\n03 af\n9b b0\n03 69\naf 49\n59 58\n02 22\n09 92\n04 22\n00 29\n00 d0\n09 92\nac 49\n0c 93\n59 18\n08 91\n97 21\n49 01\n59 18\n07 91\n09 21\n06 91\n09 02\n59 18\n10 91\na7 49\n5c 58\n05 94\n01 21\nc9 43\n09 1b\n02 91\n86 68\n00 90\n00 21\n04 91\na6 48\n78 44\n00 68\n03 90\na5 48\n78 44\n00 68\n11 90\n9e 48\n78 44\n00 68\n01 90\n02 b4\n01 bc\n0e 91\n0f 96\n0e 99\n89 00\n0c 9a\n53 18\n06 9a\n52 02\n9d 58\n07 9a\n12 68\n00 2a\n04 9e\n01 d0\n01 9a\n56 58\n94 49\n59 58\n22 1a\n01 32\n91 42\n1a 90\n02 b4\n01 bc\n01 d9\n04 b4\n01 bc\n03 22\n01 b4\n10 bc\n14 40\n0d 94\n75 19\n09 9e\n75 43\n8c 4e\n9b 59\n9b 00\n0c 9e\nf3 18\n8a 4e\n9b 59\ndb 00\n5b 42\n5b 1b\n08 9d\n2d 68\n5b 19\nff 25\n1d 40\nab 00\n03 9d\ned 58\n83 08\n1a 9e\n88 19\n0e 9c\n01 34\n0e 94\n00 2b\n40 b4\n10 bc\n7a d0\n0b 90\n02 9b\ne0 18\nc9 43\n88 42\n01 b4\n08 bc\n01 d8\n02 b4\n08 bc\nd2 43\n9a 43\n0a 92\n88 42\n0f 9a\n01 d8\n02 b4\n01 bc\nc0 43\n80 08\n40 42\n04 b4\n02 bc\n10 9e\n18 96\n1a 91\n19 90\n1a 98\n01 68\n20 b4\n01 bc\n04 f0 10 f8\n0b 90\n10 99\n0f 9e\n0d 9a\n00 20\n01 2a\n14 d0\n10 91\n02 2a\n06 d0\n03 2a\n59 d1\nb1 68\n20 b4\n01 bc\n03 f0 a5 ff\n1a 90\n71 68\n20 b4\n01 bc\n03 f0 9f ff\n10 91\n20 b4\n04 bc\n01 b4\n20 bc\n1a 90\n31 68\n0f 96\n04 b4\n01 bc\n03 f0 8e ff\n'
p1286
S'.text:0003395c\n.text:0003395e\n.text:00033960\n.text:00033962\n.text:00033964\n.text:00033966\n.text:00033968\n.text:0003396a\n.text:0003396c\n.text:0003396e\n.text:00033970\n.text:00033972\n.text:00033974\n.text:00033976\n.text:00033978\n.text:0003397a\n.text:0003397c\n.text:0003397e\n.text:00033980\n.text:00033982\n.text:00033984\n.text:00033986\n.text:00033988\n.text:0003398a\n.text:0003398c\n.text:0003398e\n.text:00033990\n.text:00033992\n.text:00033994\n.text:00033996\n.text:00033998\n.text:0003399a\n.text:0003399c\n.text:0003399e\n.text:000339a0\n.text:000339a2\n.text:000339a4\n.text:000339a6\n.text:000339a8\n.text:000339aa\n.text:000339ac\n.text:000339ae\n.text:000339b0\n.text:000339b2\n.text:000339b4\n.text:000339b6\n.text:000339b8\n.text:000339ba\n.text:000339bc\n.text:000339be\n.text:000339c0\n.text:000339c2\n.text:000339c4\n.text:000339c6\n.text:000339c8\n.text:000339ca\n.text:000339cc\n.text:000339ce\n.text:000339d0\n.text:000339d2\n.text:000339d4\n.text:000339d6\n.text:000339d8\n.text:000339da\n.text:000339dc\n.text:000339de\n.text:000339e0\n.text:000339e2\n.text:000339e4\n.text:000339e6\n.text:000339e8\n.text:000339ea\n.text:000339ec\n.text:000339ee\n.text:000339f0\n.text:000339f2\n.text:000339f4\n.text:000339f6\n.text:000339f8\n.text:000339fa\n.text:000339fc\n.text:000339fe\n.text:00033a00\n.text:00033a02\n.text:00033a04\n.text:00033a06\n.text:00033a08\n.text:00033a0a\n.text:00033a0c\n.text:00033a0e\n.text:00033a10\n.text:00033a12\n.text:00033a14\n.text:00033a16\n.text:00033a18\n.text:00033a1a\n.text:00033a1c\n.text:00033a1e\n.text:00033a20\n.text:00033a22\n.text:00033a24\n.text:00033a26\n.text:00033a28\n.text:00033a2a\n.text:00033a2c\n.text:00033a2e\n.text:00033a30\n.text:00033a32\n.text:00033a34\n.text:00033a36\n.text:00033a38\n.text:00033a3a\n.text:00033a3c\n.text:00033a3e\n.text:00033a40\n.text:00033a42\n.text:00033a44\n.text:00033a46\n.text:00033a48\n.text:00033a4a\n.text:00033a4c\n.text:00033a4e\n.text:00033a50\n.text:00033a52\n.text:00033a54\n.text:00033a56\n.text:00033a58\n.text:00033a5a\n.text:00033a5c\n.text:00033a5e\n.text:00033a60\n.text:00033a62\n.text:00033a64\n.text:00033a66\n.text:00033a68\n.text:00033a6a\n.text:00033a6c\n.text:00033a6e\n.text:00033a70\n.text:00033a72\n.text:00033a74\n.text:00033a76\n.text:00033a78\n.text:00033a7a\n.text:00033a7c\n.text:00033b34\n.text:00033b36\n.text:00033b38\n.text:00033b3a\n.text:00033b3c\n.text:00033b3e\n.text:00033b40\n.text:00033b42\n.text:00033b44\n.text:00033b46\n.text:00033b48\n.text:00033b4a\n.text:00033b4c\n.text:00033b4e\n.text:00033b50\n.text:00033b52\n.text:00033b56\n.text:00033b58\n.text:00033b5a\n.text:00033b5c\n.text:00033b5e\n.text:00033b6c\n.text:00033b6e\n.text:00033b70\n.text:00033b72\n.text:00033b74\n.text:00033b76\n.text:00033b78\n.text:00033b7a\n.text:00033b7c\n.text:00033b7e\n.text:00033b80\n'
p1287
tp1288
sS'init_log_table'
p1289
(S'\n__stdcall init_log_table()\n'
p1290
V\u000avoid init_log_table(void)\u000a\u000a{\u000a  (*(code *)(&UNK_000380b0 + DAT_000380ac))();\u000a  return;\u000a}\u000a\u000a
p1291
S'ldr r12,[0x380ac]\nadd pc,r12,pc\n'
p1292
S'00 c0 9f e5\n0f f0 8c e0\n'
p1293
S'.text:000380a4\n.text:000380a8\n'
p1294
tp1295
sS'__aeabi_memcpy'
p1296
(S'\n__stdcall __aeabi_memcpy()\n'
p1297
V\u000avoid __aeabi_memcpy(void)\u000a\u000a{\u000a  (*(get_lame_short_version + DAT_000379cc))();\u000a  return;\u000a}\u000a\u000a
p1298
S'ldr r12,[0x379cc]\nadd pc,r12,pc\n'
p1299
S'00 c0 9f e5\n0f f0 8c e0\n'
p1300
S'.text:000379c4\n.text:000379c8\n'
p1301
tp1302
sS'window_subband'
p1303
(S'\n__stdcall window_subband()\n'
p1304
V\u000avoid window_subband(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(*(undefined4 *)(DAT_00023048 + 0x23012),*(undefined4 *)(iParm1 + DAT_00023034),\u000a           (undefined4 *)(DAT_00023048 + 0x23012),0,0x41,uParm2,iParm1 + -0x78,iParm1 + -0xf8,\u000a           iParm1 + 0x280,iParm1 + 0x180,iParm1 + 0x100,iParm1 + 0x200,iParm1 + 0x300,iParm1 + 0x188\u000a           ,7,iParm1 + 0x208,iParm1 + 0x108,iParm1 + DAT_00023044,iParm1 + DAT_00023040,\u000a           iParm1 + DAT_0002303c,iParm1 + DAT_00023038,iParm1 + DAT_00023030,iParm1 + DAT_0002302c,\u000a           iParm1 + DAT_00023028,iParm1 + DAT_00023024,iParm1 + DAT_00023020,iParm1 + DAT_0002301c);\u000a}\u000a\u000a
p1305
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x8c\nstr r1,[sp,#0x4]\npush { r0 }\npop { r4 }\nstr r4,[sp,#0x7c]\nldr r0,[0x0002301c]\nadd r0,r4,r0\nstr r0,[sp,#0x58]\nldr r0,[0x00023020]\nadd r0,r4,r0\nstr r0,[sp,#0x54]\nldr r0,[0x00023024]\nadd r0,r4,r0\nstr r0,[sp,#0x50]\nldr r0,[0x00023028]\nadd r0,r4,r0\nstr r0,[sp,#0x4c]\nldr r0,[0x0002302c]\nadd r0,r4,r0\nstr r0,[sp,#0x48]\nldr r0,[0x00023030]\nadd r0,r4,r0\nstr r0,[sp,#0x44]\nldr r0,[0x00023034]\nadd r0,r4,r0\nstr r0,[sp,#0x78]\nldr r0,[0x00023038]\nadd r0,r4,r0\nstr r0,[sp,#0x40]\nldr r0,[0x0002303c]\nadd r0,r4,r0\nstr r0,[sp,#0x3c]\nldr r0,[0x00023040]\nadd r0,r4,r0\nstr r0,[sp,#0x38]\nldr r0,[0x00023044]\nadd r0,r4,r0\nstr r0,[sp,#0x34]\nmov r0,#0x21\nlsl r0,r0,#0x3\nadd r0,r4,r0\nstr r0,[sp,#0x30]\nmov r0,#0x41\nstr r0,[sp,#0x0]\nlsl r0,r0,#0x3\nadd r0,r4,r0\nstr r0,[sp,#0x2c]\nmov r0,#0x7\nstr r0,[sp,#0x28]\nlsl r0,r0,#0x7\nadd r0,r4,r0\nstr r0,[sp,#0x74]\nmov r0,#0x31\nlsl r0,r0,#0x3\nadd r0,r4,r0\nstr r0,[sp,#0x24]\nmov r0,#0x3\nlsl r2,r0,#0x8\nadd r2,r4,r2\nstr r2,[sp,#0x20]\nmov r3,#0x1\nlsl r2,r3,#0x9\nadd r2,r4,r2\nstr r2,[sp,#0x1c]\nlsl r2,r3,#0x8\nadd r2,r4,r2\nstr r2,[sp,#0x18]\nlsl r0,r0,#0x7\nadd r0,r4,r0\nstr r0,[sp,#0x14]\nmov r0,#0x5\nlsl r0,r0,#0x7\nadd r0,r4,r0\nstr r0,[sp,#0x10]\npush { r4 }\npop { r0 }\nsub r0,#0xf8\nstr r0,[sp,#0xc]\nsub r4,#0x78\nstr r4,[sp,#0x8]\nldr r2,[0x00023048]\nadd r2,pc\nmov r3,#0x0\npush { r1 }\npop { r6 }\npush { r3 }\npop { r5 }\nb 0x0002304c\n'
p1306
S'f0 b5\n03 af\na3 b0\n01 91\n01 b4\n10 bc\n1f 94\n29 48\n20 18\n16 90\n28 48\n20 18\n15 90\n28 48\n20 18\n14 90\n27 48\n20 18\n13 90\n27 48\n20 18\n12 90\n26 48\n20 18\n11 90\n26 48\n20 18\n1e 90\n25 48\n20 18\n10 90\n25 48\n20 18\n0f 90\n24 48\n20 18\n0e 90\n24 48\n20 18\n0d 90\n21 20\nc0 00\n20 18\n0c 90\n41 20\n00 90\nc0 00\n20 18\n0b 90\n07 20\n0a 90\nc0 01\n20 18\n1d 90\n31 20\nc0 00\n20 18\n09 90\n03 20\n02 02\na2 18\n08 92\n01 23\n5a 02\na2 18\n07 92\n1a 02\na2 18\n06 92\nc0 01\n20 18\n05 90\n05 20\nc0 01\n20 18\n04 90\n10 b4\n01 bc\nf8 38\n03 90\n78 3c\n02 94\n0e 4a\n7a 44\n00 23\n02 b4\n40 bc\n08 b4\n20 bc\n17 e0\n'
p1307
S'.text:00022f68\n.text:00022f6a\n.text:00022f6c\n.text:00022f6e\n.text:00022f70\n.text:00022f72\n.text:00022f74\n.text:00022f76\n.text:00022f78\n.text:00022f7a\n.text:00022f7c\n.text:00022f7e\n.text:00022f80\n.text:00022f82\n.text:00022f84\n.text:00022f86\n.text:00022f88\n.text:00022f8a\n.text:00022f8c\n.text:00022f8e\n.text:00022f90\n.text:00022f92\n.text:00022f94\n.text:00022f96\n.text:00022f98\n.text:00022f9a\n.text:00022f9c\n.text:00022f9e\n.text:00022fa0\n.text:00022fa2\n.text:00022fa4\n.text:00022fa6\n.text:00022fa8\n.text:00022faa\n.text:00022fac\n.text:00022fae\n.text:00022fb0\n.text:00022fb2\n.text:00022fb4\n.text:00022fb6\n.text:00022fb8\n.text:00022fba\n.text:00022fbc\n.text:00022fbe\n.text:00022fc0\n.text:00022fc2\n.text:00022fc4\n.text:00022fc6\n.text:00022fc8\n.text:00022fca\n.text:00022fcc\n.text:00022fce\n.text:00022fd0\n.text:00022fd2\n.text:00022fd4\n.text:00022fd6\n.text:00022fd8\n.text:00022fda\n.text:00022fdc\n.text:00022fde\n.text:00022fe0\n.text:00022fe2\n.text:00022fe4\n.text:00022fe6\n.text:00022fe8\n.text:00022fea\n.text:00022fec\n.text:00022fee\n.text:00022ff0\n.text:00022ff2\n.text:00022ff4\n.text:00022ff6\n.text:00022ff8\n.text:00022ffa\n.text:00022ffc\n.text:00022ffe\n.text:00023000\n.text:00023002\n.text:00023004\n.text:00023006\n.text:00023008\n.text:0002300a\n.text:0002300c\n.text:0002300e\n.text:00023010\n.text:00023012\n.text:00023014\n.text:00023016\n.text:00023018\n.text:0002301a\n'
p1308
tp1309
sS'freegfc'
p1310
(S'\n__stdcall freegfc()\n'
p1311
V\u000avoid freegfc(void)\u000a\u000a{\u000a  (*(__fixdfsi + DAT_00037e0c))();\u000a  return;\u000a}\u000a\u000a
p1312
S'ldr r12,[0x37e0c]\nadd pc,r12,pc\n'
p1313
S'00 c0 9f e5\n0f f0 8c e0\n'
p1314
S'.text:00037e04\n.text:00037e08\n'
p1315
tp1316
sS'get_framebits'
p1317
(S'\n__stdcall get_framebits(lame_internal_flags * gfc, int * frameBits)\n'
p1318
V\u000avoid get_framebits(lame_internal_flags *gfc,int *frameBits)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int in_r2;\u000a  undefined4 *in_r3;\u000a  int iVar2;\u000a  ulong *unaff_r4;\u000a  int iVar3;\u000a  undefined4 uVar4;\u000a  int unaff_r5;\u000a  undefined4 uVar5;\u000a  int unaff_r6;\u000a  undefined4 uVar6;\u000a  int in_stack_00000004;\u000a  uint in_stack_0000000c;\u000a  int *in_stack_00000014;\u000a  int in_stack_00000024;\u000a  int in_stack_00000028;\u000a  int *in_stack_0000002c;\u000a  lame_internal_flags **in_stack_00000030;\u000a  undefined4 *in_stack_00000034;\u000a  int iStack00000038;\u000a  int iStack0000003c;\u000a  int *in_stack_00000040;\u000a  int *in_stack_00000044;\u000a  int iStack00000048;\u000a  int *in_stack_0000004c;\u000a  undefined4 *in_stack_00000050;\u000a  int in_stack_00000054;\u000a  int in_stack_00000058;\u000a  int *in_stack_0000005c;\u000a  undefined4 *in_stack_00000060;\u000a  int in_stack_00000064;\u000a  int *in_stack_00000068;\u000a  int in_stack_0000006c;\u000a  ulong *puStack00000070;\u000a  int iStack00000074;\u000a  int iStack00000080;\u000a  \u000a  while( true ) {\u000a    if (unaff_r5 != 0) {\u000a      iStack00000038 = (in_r2 + unaff_r5) * 4;\u000a      puStack00000070 = &gfc->class_id + in_r2 + unaff_r5;\u000a      iStack00000074 = *in_stack_00000050;\u000a      iStack0000003c = unaff_r6;\u000a      iStack00000048 = in_r2;\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(*in_r3);\u000a    }\u000a    if (0xe < in_stack_00000064 + 7U) {\u000a      iStack00000074 = in_stack_0000006c >> 3;\u000a      puStack00000070 = (ulong *)*in_stack_00000050;\u000a      iStack00000048 = in_r2;\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(*in_r3);\u000a    }\u000a    iVar3 = in_r2 + in_stack_00000064;\u000a    *in_stack_00000068 = iVar3;\u000a    in_stack_00000058 = in_stack_00000064 + in_stack_00000058;\u000a    in_stack_00000054 = in_stack_00000054 - in_stack_00000064;\u000a    if (iVar3 == *in_stack_0000004c) {\u000a      puStack00000070 = unaff_r4;\u000a                    /* WARNING: Subroutine does not return */\u000a      __adddf3(*in_stack_00000060,in_stack_00000060[1],*in_stack_00000050,in_stack_00000050[1]);\u000a    }\u000a    if (*in_stack_0000004c < iVar3) break;\u000a    if (in_stack_00000054 < 1) {\u000a      if (9 < in_stack_0000000c) {\u000a        iVar3 = in_stack_00000024 + in_stack_0000000c * 4;\u000a        uVar4 = *(undefined4 *)(iVar3 + -0x24);\u000a        uVar5 = *(undefined4 *)(iVar3 + -0x20);\u000a        *in_stack_00000034 = *(undefined4 *)(iVar3 + -0x28);\u000a        in_stack_00000034[1] = uVar4;\u000a        in_stack_00000034[2] = uVar5;\u000a        uVar4 = *(undefined4 *)(iVar3 + -0x18);\u000a        uVar5 = *(undefined4 *)(iVar3 + -0x14);\u000a        in_stack_00000034[3] = *(undefined4 *)(iVar3 + -0x1c);\u000a        in_stack_00000034[4] = uVar4;\u000a        in_stack_00000034[5] = uVar5;\u000a        uVar4 = *(undefined4 *)(iVar3 + -0xc);\u000a        uVar5 = *(undefined4 *)(iVar3 + -8);\u000a        uVar6 = *(undefined4 *)(iVar3 + -4);\u000a        in_stack_00000034[6] = *(undefined4 *)(iVar3 + -0x10);\u000a        in_stack_00000034[7] = uVar4;\u000a        in_stack_00000034[8] = uVar5;\u000a        in_stack_00000034[9] = uVar6;\u000a        puVar1 = (undefined4 *)((int)in_stack_00000034 + DAT_0001c240);\u000a        iVar3 = in_stack_00000028 + in_stack_0000000c * 4;\u000a        uVar4 = *(undefined4 *)(iVar3 + -0x24);\u000a        uVar5 = *(undefined4 *)(iVar3 + -0x20);\u000a        *puVar1 = *(undefined4 *)(iVar3 + -0x28);\u000a        puVar1[1] = uVar4;\u000a        puVar1[2] = uVar5;\u000a        uVar4 = *(undefined4 *)(iVar3 + -0x18);\u000a        uVar5 = *(undefined4 *)(iVar3 + -0x14);\u000a        puVar1[3] = *(undefined4 *)(iVar3 + -0x1c);\u000a        puVar1[4] = uVar4;\u000a        puVar1[5] = uVar5;\u000a        uVar4 = *(undefined4 *)(iVar3 + -0xc);\u000a        uVar5 = *(undefined4 *)(iVar3 + -8);\u000a        uVar6 = *(undefined4 *)(iVar3 + -4);\u000a        puVar1[6] = *(undefined4 *)(iVar3 + -0x10);\u000a        puVar1[7] = uVar4;\u000a        puVar1[8] = uVar5;\u000a        puVar1[9] = uVar6;\u000a        return;\u000a      }\u000a      iVar3 = (10 - in_stack_0000000c) * 4;\u000a      puStack00000070 = unaff_r4;\u000a      __aeabi_memmove4(in_stack_00000034,in_stack_00000034 + in_stack_0000000c,iVar3);\u000a      __aeabi_memmove4((int)in_stack_00000034 + DAT_0001c240,\u000a                       (int)in_stack_00000034 + DAT_0001c240 + in_stack_0000000c * 4,iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a      __aeabi_memcpy4(in_stack_00000004 + in_stack_0000000c * -4,in_stack_00000024,\u000a                      in_stack_0000000c * 4);\u000a    }\u000a    in_stack_00000064 = *in_stack_0000004c - *in_stack_00000068;\u000a    if (in_stack_00000054 <= in_stack_00000064) {\u000a      in_stack_00000064 = in_stack_00000054;\u000a    }\u000a    if (in_stack_00000058 < 10) {\u000a      iVar3 = 10 - in_stack_00000058;\u000a      if (in_stack_00000064 <= 10 - in_stack_00000058) {\u000a        iVar3 = in_stack_00000064;\u000a      }\u000a      iStack00000080 = *in_stack_00000014;\u000a      in_stack_00000064 = iVar3;\u000a      iVar3 = in_stack_00000034[0x14];\u000a    }\u000a    else {\u000a      iStack00000080 = in_stack_00000028;\u000a      iVar3 = in_stack_00000024;\u000a    }\u000a    iVar2 = DAT_0001bd60 + 0x1bc00;\u000a    puStack00000070 = unaff_r4;\u000a    filterYule(iVar3 + in_stack_00000058 * 4,*in_stack_0000002c + *in_stack_00000068 * 4,\u000a               in_stack_00000064,iVar2 + *in_stack_0000005c * 0x54);\u000a    filterYule(iStack00000080 + in_stack_00000058 * 4,*in_stack_00000040 + *in_stack_00000068 * 4,\u000a               in_stack_00000064,iVar2 + *in_stack_0000005c * 0x54);\u000a    iVar3 = DAT_0001bd64 + 0x1bc44;\u000a    filterButter(*in_stack_0000002c + *in_stack_00000068 * 4,\u000a                 *in_stack_00000044 + *in_stack_00000068 * 4,in_stack_00000064,\u000a                 iVar3 + *in_stack_0000005c * 0x14);\u000a    filterButter(*in_stack_00000040 + *in_stack_00000068 * 4,\u000a                 &(*in_stack_00000030)->class_id + *in_stack_00000068,in_stack_00000064,\u000a                 iVar3 + *in_stack_0000005c * 0x14);\u000a    in_stack_0000006c = in_stack_00000064 + ((uint)(in_stack_00000064 >> 0x1f) >> 0x1d);\u000a    unaff_r5 = in_stack_00000064 % 8;\u000a    gfc = *in_stack_00000030;\u000a    in_r2 = *in_stack_00000068;\u000a    unaff_r4 = &gfc->class_id + in_r2;\u000a    unaff_r6 = *in_stack_00000044;\u000a    in_r3 = (undefined4 *)(unaff_r6 + in_r2 * 4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1319
S'cmp r5,#0x0\nbeq 0x0001bd68\nstr r6,[sp,#0x3c]\nadd r1,r2,r5\nstr r2,[sp,#0x48]\nlsl r1,r1,#0x2\nstr r1,[sp,#0x38]\nadd r0,r0,r1\nstr r0,[sp,#0x70]\nldr r0,[sp,#0x50]\nldr r2,[r0,#0x0]\nldr r1,[r0,#0x4]\nldr r0,[sp,#0x60]\nldr r6,[r0,#0x0]\nldr r0,[r0,#0x4]\nstr r0,[sp,#0x7c]\nstr r2,[sp,#0x74]\nstr r1,[sp,#0x78]\nstr r3,[sp,#0x80]\nldr r0,[r3,#0x0]\nbl 0x00037ac0\n'
p1320
S'00 2d\n69 d0\n0f 96\n51 19\n12 92\n89 00\n0e 91\n40 18\n1c 90\n14 98\n02 68\n41 68\n18 98\n06 68\n40 68\n1f 90\n1d 92\n1e 91\n20 93\n18 68\n1b f0 02 ff\n'
p1321
S'.text:0001bc90\n.text:0001bc92\n.text:0001bc94\n.text:0001bc96\n.text:0001bc98\n.text:0001bc9a\n.text:0001bc9c\n.text:0001bc9e\n.text:0001bca0\n.text:0001bca2\n.text:0001bca4\n.text:0001bca6\n.text:0001bca8\n.text:0001bcaa\n.text:0001bcac\n.text:0001bcae\n.text:0001bcb0\n.text:0001bcb2\n.text:0001bcb4\n.text:0001bcb6\n.text:0001bcb8\n'
p1322
tp1323
sS'__aeabi_dcmple'
p1324
(S'\n__stdcall __aeabi_dcmple()\n'
p1325
V\u000avoid __aeabi_dcmple(void)\u000a\u000a{\u000a  (*(__aeabi_memmove4 + DAT_00037bfc))();\u000a  return;\u000a}\u000a\u000a
p1326
S'ldr r12,[0x37bfc]\nadd pc,r12,pc\n'
p1327
S'00 c0 9f e5\n0f f0 8c e0\n'
p1328
S'.text:00037bf4\n.text:00037bf8\n'
p1329
tp1330
sS'_Unwind_GetLanguageSpecificData'
p1331
(S'\n__stdcall _Unwind_GetLanguageSpecificData()\n'
p1332
V\u000aint _Unwind_GetLanguageSpecificData(void)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = unwind_UCB_from_context();\u000a  return *(int *)(iVar1 + 0x4c) + (uint)*(byte *)(*(int *)(iVar1 + 0x4c) + 7) * 4 + 8;\u000a}\u000a\u000a
p1333
S'stmdb sp!,{ r3 lr }\nbl 0x000374d8\nldr r3,[r0,#0x4c]\nldrb r0,[r3,#0x7]\nadd r0,r3,r0, lsl #0x2\nadd r0,r0,#0x8\nldmia sp!,{ r3 pc }\n'
p1334
S'08 40 2d e9\n06 ff ff eb\n4c 30 90 e5\n07 00 d3 e5\n00 01 83 e0\n08 00 80 e2\n08 80 bd e8\n'
p1335
S'.text:000378b4\n.text:000378b8\n.text:000378bc\n.text:000378c0\n.text:000378c4\n.text:000378c8\n.text:000378cc\n'
p1336
tp1337
sS'id3tag_v2_only'
p1338
(S'\n__stdcall id3tag_v2_only()\n'
p1339
V\u000avoid id3tag_v2_only(int iParm1)\u000a\u000a{\u000a  *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001c9f8) =\u000a       *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001c9f8) & 0xfffffff3 | 8;\u000a  return;\u000a}\u000a\u000a
p1340
S'mov r1,#0x9\nlsl r1,r1,#0x5\nldr r0,[r0,r1]\nldr r1,[0x0001c9f8]\nldr r2,[r0,r1]\nmov r3,#0xc\nmvn r3,r3\nand r3,r2\nmov r2,#0x8\norr r2,r3\nstr r2,[r0,r1]\nbx lr\n'
p1341
S'09 21\n49 01\n40 58\n04 49\n42 58\n0c 23\ndb 43\n13 40\n08 22\n1a 43\n42 50\n70 47\n'
p1342
S'.text:0001c9e0\n.text:0001c9e2\n.text:0001c9e4\n.text:0001c9e6\n.text:0001c9e8\n.text:0001c9ea\n.text:0001c9ec\n.text:0001c9ee\n.text:0001c9f0\n.text:0001c9f2\n.text:0001c9f4\n.text:0001c9f6\n'
p1343
tp1344
sS'noquant_count_bits'
p1345
(S'\n__stdcall noquant_count_bits()\n'
p1346
V\u000avoid noquant_count_bits(void)\u000a\u000a{\u000a  (*(best_scalefac_store + DAT_0003835c))();\u000a  return;\u000a}\u000a\u000a
p1347
S'ldr r12,[0x3835c]\nadd pc,r12,pc\n'
p1348
S'00 c0 9f e5\n0f f0 8c e0\n'
p1349
S'.text:00038354\n.text:00038358\n'
p1350
tp1351
sS'lame_set_bWriteVbrTag'
p1352
(S'\n__stdcall lame_set_bWriteVbrTag(lame_global_flags * gfp, int bWriteVbrTag)\n'
p1353
V\u000aint lame_set_bWriteVbrTag(lame_global_flags *gfp,int bWriteVbrTag)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  lame_global_flags *gfp_00;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  undefined4 *puVar9;\u000a  uint unaff_r5;\u000a  uint uVar10;\u000a  int unaff_r6;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int *in_stack_00000004;\u000a  undefined4 *puStack00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint uStack00000030;\u000a  \u000a  puVar9 = *(undefined4 **)(unaff_r6 + DAT_0001e1d8);\u000a  puStack00000008 = (undefined4 *)(unaff_r6 + DAT_0001e1d8);\u000a  while (puVar9 != (undefined4 *)0x0) {\u000a    uVar1 = puVar9[1];\u000a    uVar11 = 0xff;\u000a    if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 == DAT_0001e1e0)) {\u000a      iVar2 = puVar9[4] * 2 + 0x10;\u000a      if (puVar9[5] != 1) {\u000a        iVar2 = puVar9[4] + 0xf;\u000a      }\u000a      iVar3 = puVar9[7];\u000a      if (puVar9[8] == 1) {\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      iVar2 = iVar2 + iVar3;\u000a    }\u000a    else {\u000a      do {\u000a        uVar10 = uVar11 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar10 != (uVar11 & uVar1)) {\u000a          uVar6 = uVar11 & uVar1;\u000a        }\u000a        if (uVar10 == 0) {\u000a          uVar6 = uVar10;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar2 = iVar2 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar2 = sizeOfWxxxNode(puVar9);\u000a      }\u000a      else {\u000a        iVar3 = puVar9[7];\u000a        iVar4 = puVar9[4];\u000a        if (puVar9[8] == 1) {\u000a          iVar2 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar2 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a        }\u000a        iVar2 = iVar2 + iVar3;\u000a      }\u000a    }\u000a    unaff_r5 = iVar2 + unaff_r5;\u000a    puVar9 = (undefined4 *)*puVar9;\u000a  }\u000a  if ((*in_stack_00000010 & 0x20) != 0) {\u000a    unaff_r5 = *(int *)(in_stack_0000001c + DAT_0001e1e4) + unaff_r5;\u000a  }\u000a  uVar1 = unaff_r5;\u000a  if ((unaff_r5 <= in_stack_00000014) && (uVar1 = 0, in_stack_00000018 != (undefined *)0x0)) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    uStack00000030 = 0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar1 = unaff_r5 - 10;\u000a    in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a    puVar12 = in_stack_00000018 + 10;\u000a    puVar9 = (undefined4 *)*puStack00000008;\u000a    while (puVar9 != (undefined4 *)0x0) {\u000a      uVar1 = puVar9[1];\u000a      uVar11 = 0xff;\u000a      iVar2 = 4;\u000a      if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a        iVar2 = puVar9[4] * 2 + 0x10;\u000a        if (puVar9[5] != 1) {\u000a          iVar2 = puVar9[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (puVar9[8] == 1) {\u000a          iVar3 = puVar9[8];\u000a        }\u000a        uVar11 = (puVar9[7] << iVar3) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar11) {\u000a          do {\u000a            puVar12[iVar2 + -1] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar11 = uVar11 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar12[iVar2 + 3] = (char)uVar11;\u000a            iVar2 = iVar2 + -1;\u000a            uVar11 = uVar11 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar12[8] = 0;\u000a          puVar12[9] = 0;\u000a          *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a          puVar12[0xb] = *(undefined *)(puVar9 + 2);\u000a          puVar12[0xc] = *(undefined *)((int)puVar9 + 9);\u000a          puVar12[0xd] = *(undefined *)((int)puVar9 + 10);\u000a          puVar12 = puVar12 + 0xe;\u000a          if (puVar9[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = puVar9[4];\u000a          if (iVar2 != 0) {\u000a            puVar5 = (undefined *)puVar9[3];\u000a            iVar3 = iVar2;\u000a            puVar8 = puVar12;\u000a            do {\u000a              *puVar8 = *puVar5;\u000a              puVar8 = puVar8 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar12 = puVar12 + iVar2;\u000a          }\u000a          *puVar12 = 0;\u000a          puVar12 = puVar12 + 1;\u000a          if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a            puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[6],puVar9[7]);\u000a          }\u000a          else {\u000a            iVar2 = puVar9[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar9[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              puVar12 = puVar12 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar10 = uVar11 & 0x57000000;\u000a          uVar6 = uStack00000030;\u000a          if (uVar10 != (uVar11 & uVar1)) {\u000a            uVar6 = uVar11 & uVar1;\u000a          }\u000a          if (uVar10 == 0) {\u000a            uVar6 = uVar10;\u000a          }\u000a          uVar7 = uVar7 | uVar6;\u000a          iVar2 = iVar2 + -1;\u000a          uVar11 = uVar11 << 8;\u000a        } while (iVar2 != 0);\u000a        if (uVar7 == 0) {\u000a          uVar11 = sizeOfWxxxNode(puVar9);\u000a          iVar2 = 4;\u000a          if (10 < uVar11) {\u000a            do {\u000a              puVar12[iVar2 + -1] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar11 = uVar11 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar12[iVar2 + 3] = (char)uVar11;\u000a              iVar2 = iVar2 + -1;\u000a              uVar11 = uVar11 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar12[8] = 0;\u000a            puVar12[9] = 0;\u000a            puVar8 = puVar12 + 10;\u000a            if (puVar9[4] != 0) {\u000a              *(bool *)(puVar12 + 10) = puVar9[5] == 1;\u000a              puVar12 = puVar12 + 0xb;\u000a              if (puVar9[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a              }\u000a              else {\u000a                iVar2 = puVar9[4];\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar9[3];\u000a                  iVar3 = iVar2;\u000a                  puVar8 = puVar12;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar12 = puVar12 + iVar2;\u000a                }\u000a                *puVar12 = 0;\u000a                puVar8 = puVar12 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) {\u000a              puVar12 = (undefined *)writeLoBytes(puVar8,puVar9[6],puVar9[7]);\u000a            }\u000a            else {\u000a              iVar2 = puVar9[7];\u000a              puVar12 = puVar8;\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar9[6];\u000a                iVar3 = iVar2;\u000a                puVar12 = puVar8;\u000a                do {\u000a                  *puVar12 = *puVar5;\u000a                  puVar12 = puVar12 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar12 = puVar8 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar2 = puVar9[7];\u000a          iVar3 = puVar9[4];\u000a          if (puVar9[8] == 1) {\u000a            iVar4 = iVar3 * 2 + 0xd;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a            iVar2 = iVar2 << 1;\u000a          }\u000a          else {\u000a            iVar4 = iVar3 + 0xc;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a          }\u000a          iVar3 = 4;\u000a          if (10 < (uint)(iVar4 + iVar2)) {\u000a            do {\u000a              puVar12[iVar3 + -1] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar1 = (iVar4 + iVar2) - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar12[iVar2 + 3] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar12[8] = 0;\u000a            puVar12[9] = 0;\u000a            *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a            puVar12 = puVar12 + 0xb;\u000a            iVar2 = puVar9[4];\u000a            if (iVar2 != 0) {\u000a              if (puVar9[5] == 1) {\u000a                puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[3]);\u000a                *puVar12 = 0;\u000a                puVar12[1] = 0;\u000a                puVar12 = puVar12 + 2;\u000a              }\u000a              else {\u000a                puVar5 = (undefined *)puVar9[3];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar12;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar12[iVar2] = 0;\u000a                puVar12 = puVar12 + iVar2 + 1;\u000a              }\u000a            }\u000a            if (puVar9[8] == 1) goto LAB_0001e338;\u000a            iVar2 = puVar9[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar9[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar9 = (undefined4 *)*puVar9;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar2 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar12,in_stack_00000018 + (unaff_r5 - (int)puVar12));\u000a    uVar1 = unaff_r5;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return uVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1354
S'ldr r0,[0x0001e1d8]\nldr r4,[r6,r0]\nadd r0,r6,r0\nstr r0,[sp,#0x8]\nb 0x0001df7e\nadd r5,r0,r5\nldr r4,[r4,#0x0]\ncmp r4,#0x0\nbeq 0x0001e02e\nstr r4,[sp,#0x28]\nstr r5,[sp,#0x2c]\nldr r0,[r4,#0x4]\nmov r6,#0xff\nmov r1,#0x0\nstr r1,[sp,#0x30]\nldr r1,[0x0001e1dc]\ncmp r0,r1\nbeq 0x0001df9e\nldr r1,[0x0001e1e0]\ncmp r0,r1\n'
p1355
S'99 48\n34 58\n30 18\n02 90\n01 e0\n45 19\n24 68\n00 2c\n55 d0\n0a 94\n0b 95\n60 68\nff 26\n00 21\n0c 91\n93 49\n88 42\n04 d0\n92 49\n88 42\n'
p1356
S'.text:0001df70\n.text:0001df72\n.text:0001df74\n.text:0001df76\n.text:0001df78\n.text:0001df7a\n.text:0001df7c\n.text:0001df7e\n.text:0001df80\n.text:0001df82\n.text:0001df84\n.text:0001df86\n.text:0001df88\n.text:0001df8a\n.text:0001df8c\n.text:0001df8e\n.text:0001df90\n.text:0001df92\n.text:0001df94\n.text:0001df96\n'
p1357
tp1358
sS'unwind_phase2'
p1359
(S'\n__stdcall unwind_phase2()\n'
p1360
V\u000aint unwind_phase2(int iParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  code *pcVar6;\u000a  undefined4 uVar7;\u000a  undefined8 uVar8;\u000a  undefined4 uStack1016;\u000a  undefined4 uStack1012;\u000a  undefined4 uStack1008;\u000a  undefined4 uStack1004;\u000a  undefined4 uStack1000;\u000a  undefined4 uStack996;\u000a  undefined4 uStack992;\u000a  undefined4 uStack988;\u000a  undefined4 uStack984;\u000a  undefined4 uStack980;\u000a  undefined4 uStack976;\u000a  undefined4 uStack972;\u000a  undefined4 uStack968;\u000a  undefined4 uStack964;\u000a  undefined4 uStack960;\u000a  undefined4 uStack956;\u000a  undefined4 uStack952;\u000a  undefined4 uStack948;\u000a  undefined auStack536 [56];\u000a  undefined4 uStack480;\u000a  int iStack52;\u000a  int iStack48;\u000a  int iStack44;\u000a  code *pcStack20;\u000a  \u000a  do {\u000a    iStack44 = get_eit_entry(iParm1,*(undefined4 *)(iParm2 + 0x40));\u000a    if (iStack44 != 0) goto LAB_0003667c;\u000a    *(undefined4 *)(iParm1 + 0x14) = *(undefined4 *)(iParm2 + 0x40);\u000a    iVar3 = iParm2;\u000a    iVar1 = (**(code **)(iParm1 + 0x10))(1,iParm1);\u000a  } while (iVar1 == 8);\u000a  if (iVar1 == 7) {\u000a    _Unwind_DebugHook(0,*(undefined4 *)(iParm2 + 0x40));\u000a    pcStack20 = unwind_phase2_forced;\u000a    uVar8 = restore_core_regs(iParm2 + 4);\u000a    iVar1 = (int)((ulonglong)uVar8 >> 0x20);\u000a    iVar5 = (int)uVar8;\u000a    pcVar6 = *(code **)(iVar1 + 0xc);\u000a    uVar7 = *(undefined4 *)(iVar1 + 0x18);\u000a    uStack1012 = *(undefined4 *)(iVar5 + 4);\u000a    uStack1008 = *(undefined4 *)(iVar5 + 8);\u000a    uStack1004 = *(undefined4 *)(iVar5 + 0xc);\u000a    uStack1000 = *(undefined4 *)(iVar5 + 0x10);\u000a    uStack996 = *(undefined4 *)(iVar5 + 0x14);\u000a    uStack992 = *(undefined4 *)(iVar5 + 0x18);\u000a    uStack988 = *(undefined4 *)(iVar5 + 0x1c);\u000a    uStack984 = *(undefined4 *)(iVar5 + 0x20);\u000a    uStack980 = *(undefined4 *)(iVar5 + 0x24);\u000a    uStack976 = *(undefined4 *)(iVar5 + 0x28);\u000a    uStack972 = *(undefined4 *)(iVar5 + 0x2c);\u000a    uStack968 = *(undefined4 *)(iVar5 + 0x30);\u000a    uStack964 = *(undefined4 *)(iVar5 + 0x34);\u000a    uStack960 = *(undefined4 *)(iVar5 + 0x38);\u000a    uStack956 = *(undefined4 *)(iVar5 + 0x3c);\u000a    uStack952 = *(undefined4 *)(iVar5 + 0x40);\u000a    iVar5 = 0;\u000a    uStack1016 = 0;\u000a    iStack52 = iParm2;\u000a    iStack48 = iParm1;\u000a    do {\u000a      iVar2 = get_eit_entry(iVar1,uStack952);\u000a      if (iVar3 == 0) {\u000a        uVar4 = 9;\u000a      }\u000a      else {\u000a        uVar4 = 10;\u000a      }\u000a      if (iVar2 == 0) {\u000a        *(undefined4 *)(iVar1 + 0x14) = uStack952;\u000a        memcpy(auStack536,&uStack1016,0x1e0);\u000a        iVar5 = (**(code **)(iVar1 + 0x10))(uVar4,iVar1,auStack536);\u000a        uStack948 = uStack480;\u000a      }\u000a      else {\u000a        uVar4 = uVar4 | 0x10;\u000a        uStack948 = uStack960;\u000a      }\u000a      iVar3 = (*pcVar6)(1,uVar4,iVar1,iVar1,&uStack1016,uVar7);\u000a      if (iVar3 != 0) {\u000a        return 9;\u000a      }\u000a      if (iVar2 != 0) {\u000a        return iVar2;\u000a      }\u000a      memcpy(&uStack1016,auStack536,0x1e0);\u000a      iVar3 = iVar2;\u000a    } while (iVar5 == 8);\u000a    if (iVar5 == 7) {\u000a      _Unwind_DebugHook(0,uStack952);\u000a      restore_core_regs(&uStack1012);\u000a    }\u000a    return 9;\u000a  }\u000aLAB_0003667c:\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1361
S'stmdb sp!,{ r4 r5 r6 lr }\ncpy r5,r0\ncpy r4,r1\ncpy r0,r5\nldr r1,[r4,#0x40]\nbl 0x000364cc\nsubs r6,r0,#0x0\nbeq 0x00036680\nbl 0x00016bf4\nldr r3,[r4,#0x40]\nstr r3,[r5,#0x14]\nmov r0,#0x1\nldr r3,[r5,#0x10]\ncpy r1,r5\ncpy r2,r4\nblx r3\ncmp r0,#0x8\nbeq 0x00036668\ncmp r0,#0x7\nbne 0x0003667c\ncpy r0,r6\nldr r1,[r4,#0x40]\nbl 0x00036658\nadd r0,r4,#0x4\nbl 0x00016c00\n'
p1362
S'70 40 2d e9\n00 50 a0 e1\n01 40 a0 e1\n05 00 a0 e1\n40 10 94 e5\n95 ff ff eb\n00 60 50 e2\n00 00 00 0a\n5c 81 ff eb\n40 30 94 e5\n14 30 85 e5\n01 00 a0 e3\n10 30 95 e5\n05 10 a0 e1\n04 20 a0 e1\n33 ff 2f e1\n08 00 50 e3\nf0 ff ff 0a\n07 00 50 e3\nf3 ff ff 1a\n06 00 a0 e1\n40 10 94 e5\ne7 ff ff eb\n04 00 84 e2\n4f 81 ff eb\n'
p1363
S'.text:0003665c\n.text:00036660\n.text:00036664\n.text:00036668\n.text:0003666c\n.text:00036670\n.text:00036674\n.text:00036678\n.text:0003667c\n.text:00036680\n.text:00036684\n.text:00036688\n.text:0003668c\n.text:00036690\n.text:00036694\n.text:00036698\n.text:0003669c\n.text:000366a0\n.text:000366a4\n.text:000366a8\n.text:000366ac\n.text:000366b0\n.text:000366b4\n.text:000366b8\n.text:000366bc\n'
p1364
tp1365
sS'__gnu_unwind_24bit'
p1366
(S'\n__stdcall __gnu_unwind_24bit()\n'
p1367
V\u000a_Unwind_Reason_Code __gnu_unwind_24bit(void)\u000a\u000a{\u000a  int in_r1;\u000a  int unaff_r4;\u000a  int iStack000000d8;\u000a  int iStack000000dc;\u000a  int iStack000000ec;\u000a  int in_stack_00000104;\u000a  int in_stack_00000108;\u000a  int *in_stack_00000110;\u000a  int iStack00000114;\u000a  int iStack00000118;\u000a  int iStack00000124;\u000a  \u000a  iStack00000124 = in_stack_00000104 + 0x870;\u000a  iStack00000118 = iStack00000124 + unaff_r4 * 8;\u000a  iStack000000ec = *(int *)(iStack00000118 + DAT_00026770);\u000a  iStack000000dc = iStack000000ec * 4;\u000a  iStack000000d8 = in_stack_00000108 * 4;\u000a  iStack00000114 = *in_stack_00000110;\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(*(undefined4 *)(iStack00000114 + iStack000000d8),\u000a           *(undefined4 *)(&stack0x00000000 + iStack000000dc + in_r1 + DAT_0002676c));\u000a}\u000a\u000a
p1368
S'str r1,[sp,#0x100]\nldr r0,[0x0002676c]\nadd r0,sp\nadd r0,r0,r1\n'
p1369
S'40 91\n46 48\n68 44\n40 18\n'
p1370
S'.text:00026650\n.text:00026652\n.text:00026654\n.text:00026656\n'
p1371
tp1372
sS'quantize_lines_xrpow_01'
p1373
(S'\n__stdcall quantize_lines_xrpow_01(uint l, FLOAT istep, FLOAT * xr, int * ix)\n'
p1374
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000avoid quantize_lines_xrpow_01(uint l,FLOAT istep,FLOAT *xr,int *ix)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 *puVar2;\u000a  int *piVar3;\u000a  int *piVar4;\u000a  int *piVar5;\u000a  int *piVar6;\u000a  int iVar7;\u000a  int *piVar8;\u000a  undefined4 uVar9;\u000a  int iVar10;\u000a  void *pvVar11;\u000a  int iVar12;\u000a  int iVar13;\u000a  int *in_r3;\u000a  int unaff_r4;\u000a  int iVar14;\u000a  int unaff_r5;\u000a  int iVar15;\u000a  int iVar16;\u000a  FLOAT extraout_s0;\u000a  FLOAT extraout_s0_00;\u000a  FLOAT extraout_s0_01;\u000a  int iStack00000024;\u000a  int *piStack00000034;\u000a  undefined4 *in_stack_0000003c;\u000a  void **in_stack_00000040;\u000a  int in_stack_00000044;\u000a  int in_stack_00000048;\u000a  undefined4 in_stack_00000058;\u000a  void *in_stack_0000005c;\u000a  int in_stack_00000060;\u000a  int *in_stack_00000064;\u000a  int in_stack_00000068;\u000a  int in_stack_00000080;\u000a  \u000a  if (l == 0) {\u000a    free(ix);\u000a    if (*in_stack_00000040 != (void *)0x0) {\u000a      free(*in_stack_00000040);\u000a    }\u000a    *in_stack_0000003c = 0;\u000a    *in_stack_00000040 = (void *)0x0;\u000a    *(undefined4 *)((int)in_r3 + DAT_00021098) = 0;\u000a    istep = (FLOAT)lame_errorf(in_r3,DAT_000210b0 + 0x20e64);\u000a  }\u000a  else {\u000a    if (in_r3[0x11] < 2) {\u000a      unaff_r5 = unaff_r4;\u000a      if (unaff_r4 == 0) goto LAB_00021072;\u000a    }\u000a    else {\u000a      if ((unaff_r4 == 0) || (unaff_r5 == 0)) goto LAB_00021072;\u000a    }\u000a    piStack00000034 = in_r3;\u000a    istep = (FLOAT)lame_copy_inbuffer(in_r3,unaff_r4,unaff_r5,in_stack_00000048);\u000a    piVar8 = piStack00000034;\u000a    iVar1 = in_stack_00000044 * 0x40 * piStack00000034[0x13];\u000a    if ((*piStack00000034 == _freegfc) &&\u000a       (iStack00000024 = copy_buffer(), istep = extraout_s0, -1 < iStack00000024)) {\u000a      in_stack_00000060 = (int)piVar8 + DAT_000210a0;\u000a      pvVar11 = *in_stack_00000040;\u000a      uVar9 = *in_stack_0000003c;\u000a      iVar10 = piVar8[0x13];\u000a      in_stack_00000064 = piVar8 + 0x4280;\u000a      puVar2 = (undefined4 *)((int)piVar8 + DAT_000210a4);\u000a      piVar3 = (int *)((int)piVar8 + DAT_000210a8);\u000a      piVar4 = (int *)((int)piVar8 + DAT_000210ac);\u000a      piVar5 = piVar8 + 0x22;\u000a      piVar6 = piVar8 + 0x20;\u000a      istep = extraout_s0;\u000a      if (0 < in_stack_00000048) {\u000a        iStack00000024 = in_stack_00000080 + iStack00000024;\u000a        do {\u000a          iVar15 = 0;\u000a          in_stack_00000058 = uVar9;\u000a          in_stack_0000005c = pvVar11;\u000a          istep = (FLOAT)fill_buffer(piVar8,&stack0x00000060,&stack0x00000058);\u000a          if (((*piVar6 != 0) && (*piVar5 == 0)) &&\u000a             (iVar7 = AnalyzeSamples(*puVar2,in_stack_00000060 + *piVar4 * 4,\u000a                                     in_stack_00000064 + *piVar4,0), istep = extraout_s0_00,\u000a             iVar7 == 0)) break;\u000a          piVar8 = piStack00000034;\u000a          iVar7 = *piVar4;\u000a          *piVar4 = iVar7;\u000a          iVar12 = *piVar3;\u000a          if (iVar12 < 1) {\u000a            iVar12 = 0x6c0;\u000a            *piVar3 = 0x6c0;\u000a          }\u000a          *piVar3 = iVar12;\u000a          if (iVar10 * in_stack_00000044 * 0x40 + 0x2f0 <= iVar7) {\u000a            iVar7 = lame_encode_mp3_frame\u000a                              (piStack00000034,in_stack_00000060,in_stack_00000064,iStack00000024);\u000a            istep = extraout_s0_01;\u000a            if (iVar7 < 0) break;\u000a            iVar12 = *piVar4;\u000a            *piVar4 = iVar12 - iVar1;\u000a            *piVar3 = *piVar3 - iVar1;\u000a            iStack00000024 = iStack00000024 + iVar7;\u000a            iVar7 = piVar8[0x12];\u000a            istep = extraout_s0_01;\u000a            if (0 < iVar7) {\u000a              do {\u000a                if (0 < iVar12 - iVar1) {\u000a                  iVar13 = (&stack0x00000060)[iVar15];\u000a                  iVar16 = *piVar4;\u000a                  iVar14 = 0;\u000a                  do {\u000a                    *(undefined4 *)(iVar13 + iVar14 * 4) =\u000a                         *(undefined4 *)(iVar13 + iVar1 * 4 + iVar14 * 4);\u000a                    iVar14 = iVar14 + 1;\u000a                  } while (iVar14 < iVar16);\u000a                }\u000a                iVar15 = iVar15 + 1;\u000a                piVar8 = piStack00000034;\u000a                istep = extraout_s0_01;\u000a              } while (iVar15 != iVar7);\u000a            }\u000a          }\u000a        } while (0 < in_stack_00000048);\u000a      }\u000a    }\u000a  }\u000aLAB_00021072:\u000a  if (**(int **)(DAT_000210b4 + 0x21078) == in_stack_00000068) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail(istep);\u000a}\u000a\u000a
p1375
S'cmp r0,#0x0\nbeq 0x00020e2c\nldr r0,[sp,#0x90]\nstr r0,[sp,#0x38]\nldr r1,[sp,#0x8c]\nldr r2,[sp,#0x88]\npush { r3 }\npop { r0 }\nldr r3,[r0,#0x44]\ncmp r3,#0x2\nblt 0x00020e72\ncmp r4,#0x0\nbne 0x00020e10\nb 0x00021072\ncmp r5,#0x0\nbne 0x00020e16\nb 0x00021072\nstr r0,[sp,#0x34]\nmov r3,sp\nstr r2,[r3,#0x0]\nstr r1,[r3,#0x4]\nldr r1,[sp,#0x38]\nstr r1,[r3,#0x8]\npush { r4 }\npop { r1 }\npush { r5 }\npop { r2 }\nb 0x00020e8c\npush { r2 }\npop { r0 }\npush { r3 }\npop { r4 }\nbl 0x00037ca0\npush { r4 }\npop { r3 }\nldr r0,[sp,#0x40]\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x00020e50\npush { r3 }\npop { r4 }\nbl 0x00037ca0\npush { r4 }\npop { r3 }\nmov r0,#0x0\nldr r1,[sp,#0x3c]\nstr r0,[r1,#0x0]\nldr r1,[sp,#0x40]\nstr r0,[r1,#0x0]\nldr r1,[0x00021098]\nstr r0,[r3,r1]\nldr r1,[0x000210b0]\nadd r1,pc\npush { r3 }\npop { r0 }\nbl 0x00037990\nmov r0,#0x1\n'
p1376
S'00 28\n19 d0\n24 98\n0e 90\n23 99\n22 9a\n08 b4\n01 bc\n43 6c\n02 2b\n33 db\n00 2c\n00 d1\n30 e1\n00 2d\n00 d1\n2d e1\n0d 90\n6b 46\n1a 60\n59 60\n0e 99\n99 60\n10 b4\n02 bc\n20 b4\n04 bc\n2f e0\n04 b4\n01 bc\n08 b4\n10 bc\n16 f0 34 ff\n10 b4\n08 bc\n10 98\n00 68\n00 28\n05 d0\n08 b4\n10 bc\n16 f0 2a ff\n10 b4\n08 bc\n00 20\n0f 99\n08 60\n10 99\n08 60\n8f 49\n58 50\n94 49\n79 44\n08 b4\n01 bc\n16 f0 93 fd\n01 20\n'
p1377
S'.text:00020df4\n.text:00020df6\n.text:00020df8\n.text:00020dfa\n.text:00020dfc\n.text:00020dfe\n.text:00020e00\n.text:00020e02\n.text:00020e04\n.text:00020e06\n.text:00020e08\n.text:00020e0a\n.text:00020e0c\n.text:00020e0e\n.text:00020e10\n.text:00020e12\n.text:00020e14\n.text:00020e16\n.text:00020e18\n.text:00020e1a\n.text:00020e1c\n.text:00020e1e\n.text:00020e20\n.text:00020e22\n.text:00020e24\n.text:00020e26\n.text:00020e28\n.text:00020e2a\n.text:00020e2c\n.text:00020e2e\n.text:00020e30\n.text:00020e32\n.text:00020e34\n.text:00020e38\n.text:00020e3a\n.text:00020e3c\n.text:00020e3e\n.text:00020e40\n.text:00020e42\n.text:00020e44\n.text:00020e46\n.text:00020e48\n.text:00020e4c\n.text:00020e4e\n.text:00020e50\n.text:00020e52\n.text:00020e54\n.text:00020e56\n.text:00020e58\n.text:00020e5a\n.text:00020e5c\n.text:00020e5e\n.text:00020e60\n.text:00020e62\n.text:00020e64\n.text:00020e66\n.text:00020e6a\n'
p1378
tp1379
sS'lame_set_debugf'
p1380
(S'\n__stdcall lame_set_debugf(lame_global_flags * gfp, anon_subr_void_char_ptr_va_list * func)\n'
p1381
V\u000aint lame_set_debugf(lame_global_flags *gfp,void (*func)(char *,va_list))\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000acode_r0x0001e308:\u000a  *(undefined *)&gfp->class_id = 0;\u000a  *(undefined *)((int)&gfp->class_id + 1) = 0;\u000a  puVar11 = (undefined *)((int)&gfp->class_id + 2);\u000aLAB_0001e332:\u000a  if (unaff_r5[8] != 1) {\u000a    iVar2 = unaff_r5[7];\u000a    if (iVar2 == 0) goto LAB_0001e09a;\u000a    puVar1 = (undefined *)unaff_r5[6];\u000a    iVar4 = iVar2;\u000a    puVar7 = puVar11;\u000a    do {\u000a      *puVar7 = *puVar1;\u000a      puVar7 = puVar7 + 1;\u000a      puVar1 = puVar1 + 1;\u000a      iVar4 = iVar4 + -1;\u000a      if (iVar4 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[6],unaff_r5[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          unaff_r5 = (int *)*unaff_r5;\u000a          if (unaff_r5 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar2 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0\u000a                 )) {\u000a                do {\u000a                  puVar11[iVar2 + -1] = (char)uVar8;\u000a                  iVar2 = iVar2 + -1;\u000a                  uVar8 = uVar8 >> 8;\u000a                } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(puVar11,(in_stack_0000002c + in_stack_00000018) - (int)puVar11);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar8 = unaff_r5[1];\u000a          uVar10 = 0xff;\u000a          iVar2 = 4;\u000a          if ((uVar8 == DAT_0001e494) || (uVar3 = in_stack_00000030, uVar8 == DAT_0001e498)) break;\u000a          do {\u000a            uVar6 = uVar10 & 0x57000000;\u000a            uVar9 = in_stack_00000030;\u000a            if (uVar6 != (uVar10 & uVar8)) {\u000a              uVar9 = uVar10 & uVar8;\u000a            }\u000a            if (uVar6 == 0) {\u000a              uVar9 = uVar6;\u000a            }\u000a            uVar3 = uVar3 | uVar9;\u000a            iVar2 = iVar2 + -1;\u000a            uVar10 = uVar10 << 8;\u000a          } while (iVar2 != 0);\u000a          if (uVar3 == 0) {\u000a            uVar10 = sizeOfWxxxNode(unaff_r5);\u000a            iVar2 = 4;\u000a            if (10 < uVar10) {\u000a              do {\u000a                puVar11[iVar2 + -1] = (char)uVar8;\u000a                iVar2 = iVar2 + -1;\u000a                uVar8 = uVar8 >> 8;\u000a              } while (0 < iVar2);\u000a              uVar10 = uVar10 - 10;\u000a              iVar2 = 4;\u000a              do {\u000a                puVar11[iVar2 + 3] = (char)uVar10;\u000a                iVar2 = iVar2 + -1;\u000a                uVar10 = uVar10 >> 8;\u000a              } while (0 < iVar2);\u000a              puVar11[8] = 0;\u000a              puVar11[9] = 0;\u000a              puVar7 = puVar11 + 10;\u000a              if (unaff_r5[4] != 0) {\u000a                *(bool *)(puVar11 + 10) = unaff_r5[5] == 1;\u000a                puVar11 = puVar11 + 0xb;\u000a                if (unaff_r5[5] == 1) {\u000a                  puVar7 = (undefined *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a                  *puVar7 = 0;\u000a                  puVar7[1] = 0;\u000a                  puVar7 = puVar7 + 2;\u000a                }\u000a                else {\u000a                  iVar2 = unaff_r5[4];\u000a                  if (iVar2 != 0) {\u000a                    puVar1 = (undefined *)unaff_r5[3];\u000a                    iVar4 = iVar2;\u000a                    puVar7 = puVar11;\u000a                    do {\u000a                      *puVar7 = *puVar1;\u000a                      puVar7 = puVar7 + 1;\u000a                      puVar1 = puVar1 + 1;\u000a                      iVar4 = iVar4 + -1;\u000a                    } while (iVar4 != 0);\u000a                    puVar11 = puVar11 + iVar2;\u000a                  }\u000a                  *puVar11 = 0;\u000a                  puVar7 = puVar11 + 1;\u000a                }\u000a              }\u000a              if (unaff_r5[8] == 1) {\u000a                puVar11 = (undefined *)writeLoBytes(puVar7,unaff_r5[6],unaff_r5[7]);\u000a              }\u000a              else {\u000a                iVar2 = unaff_r5[7];\u000a                puVar11 = puVar7;\u000a                if (iVar2 != 0) {\u000a                  puVar1 = (undefined *)unaff_r5[6];\u000a                  iVar4 = iVar2;\u000a                  puVar11 = puVar7;\u000a                  do {\u000a                    *puVar11 = *puVar1;\u000a                    puVar11 = puVar11 + 1;\u000a                    puVar1 = puVar1 + 1;\u000a                    iVar4 = iVar4 + -1;\u000a                  } while (iVar4 != 0);\u000a                  puVar11 = puVar7 + iVar2;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            iVar2 = unaff_r5[7];\u000a            iVar4 = unaff_r5[4];\u000a            if (unaff_r5[8] == 1) {\u000a              iVar5 = iVar4 * 2 + 0xd;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a              iVar2 = iVar2 << 1;\u000a            }\u000a            else {\u000a              iVar5 = iVar4 + 0xc;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a            }\u000a            iVar4 = 4;\u000a            if (10 < (uint)(iVar5 + iVar2)) goto LAB_0001e2be;\u000a          }\u000a        }\u000a        iVar2 = unaff_r5[4] * 2 + 0x10;\u000a        if (unaff_r5[5] != 1) {\u000a          iVar2 = unaff_r5[4] + 0xf;\u000a        }\u000a        iVar4 = 0;\u000a        if (unaff_r5[8] == 1) {\u000a          iVar4 = unaff_r5[8];\u000a        }\u000a        uVar10 = (unaff_r5[7] << iVar4) + iVar2;\u000a        iVar2 = 4;\u000a      } while (uVar10 < 0xb);\u000a      do {\u000a        puVar11[iVar2 + -1] = (char)uVar8;\u000a        iVar2 = iVar2 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar2);\u000a      uVar10 = uVar10 - 10;\u000a      iVar2 = 4;\u000a      do {\u000a        puVar11[iVar2 + 3] = (char)uVar10;\u000a        iVar2 = iVar2 + -1;\u000a        uVar10 = uVar10 >> 8;\u000a      } while (0 < iVar2);\u000a      puVar11[8] = 0;\u000a      puVar11[9] = 0;\u000a      *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a      puVar11[0xb] = *(undefined *)(unaff_r5 + 2);\u000a      puVar11[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a      puVar11[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a      puVar11 = puVar11 + 0xe;\u000a      if (unaff_r5[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar2;\u000a      }\u000a      iVar2 = unaff_r5[4];\u000a      if (iVar2 != 0) {\u000a        puVar1 = (undefined *)unaff_r5[3];\u000a        iVar4 = iVar2;\u000a        puVar7 = puVar11;\u000a        do {\u000a          *puVar7 = *puVar1;\u000a          puVar7 = puVar7 + 1;\u000a          puVar1 = puVar1 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000a        puVar11 = puVar11 + iVar2;\u000a      }\u000a      *puVar11 = 0;\u000a      puVar11 = puVar11 + 1;\u000a      if (unaff_r5[8] == 1) break;\u000a      iVar2 = unaff_r5[7];\u000a      if (iVar2 != 0) {\u000a        puVar1 = (undefined *)unaff_r5[6];\u000a        iVar4 = iVar2;\u000a        puVar7 = puVar11;\u000a        do {\u000a          *puVar7 = *puVar1;\u000a          puVar7 = puVar7 + 1;\u000a          puVar1 = puVar1 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a        puVar11 = puVar11 + iVar2;\u000a      }\u000a    }\u000a  } while( true );\u000aLAB_0001e2be:\u000a  do {\u000a    puVar11[iVar4 + -1] = (char)uVar8;\u000a    iVar4 = iVar4 + -1;\u000a    uVar8 = uVar8 >> 8;\u000a  } while (0 < iVar4);\u000a  uVar8 = (iVar5 + iVar2) - 10;\u000a  iVar2 = 4;\u000a  do {\u000a    puVar11[iVar2 + 3] = (char)uVar8;\u000a    iVar2 = iVar2 + -1;\u000a    uVar8 = uVar8 >> 8;\u000a  } while (0 < iVar2);\u000a  puVar11[8] = 0;\u000a  puVar11[9] = 0;\u000a  *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a  puVar11 = puVar11 + 0xb;\u000a  iVar2 = unaff_r5[4];\u000a  if (iVar2 == 0) goto LAB_0001e332;\u000a  if (unaff_r5[5] != 1) {\u000a    puVar1 = (undefined *)unaff_r5[3];\u000a    iVar4 = iVar2;\u000a    puVar7 = puVar11;\u000a    do {\u000a      *puVar7 = *puVar1;\u000a      puVar7 = puVar7 + 1;\u000a      puVar1 = puVar1 + 1;\u000a      iVar4 = iVar4 + -1;\u000a    } while (iVar4 != 0);\u000a    puVar11[iVar2] = 0;\u000a    puVar11 = puVar11 + iVar2 + 1;\u000a    goto LAB_0001e332;\u000a  }\u000a  gfp = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3]);\u000a  goto code_r0x0001e308;\u000a}\u000a\u000a
p1382
S'mov r1,#0x0\nstrb r1,[r0,#0x0]\nstrb r1,[r0,#0x1]\nadd r6,r0,#0x2\nb 0x0001e332\n'
p1383
S'00 21\n01 70\n41 70\n86 1c\n0f e0\n'
p1384
S'.text:0001e308\n.text:0001e30a\n.text:0001e30c\n.text:0001e30e\n.text:0001e310\n'
p1385
tp1386
sS'lame_get_totalframes'
p1387
(S'\n__stdcall lame_get_totalframes()\n'
p1388
V\u000aundefined4 lame_get_totalframes(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  int extraout_r1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar3 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar2 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar2);\u000a    if (iVar1 != 0) {\u000a      iVar1 = *(int *)(iVar2 + 0x4c) * 0x240;\u000a      uVar3 = 0;\u000a      if (*(int *)(iParm1 + 4) != -1) {\u000a        if ((0 < *(int *)(iParm1 + 0xc)) && (*(int *)(iParm1 + 0xc) != *(int *)(iParm1 + 0x10))) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __floatsidf();\u000a        }\u000a        iVar4 = *(int *)(iParm1 + 4) + 0x240;\u000a        __aeabi_uidivmod(iVar4,iVar1);\u000a        iVar4 = (iVar1 - extraout_r1) + iVar4;\u000a        iVar2 = iVar4 + iVar1;\u000a        if (8 < (uint)(iVar1 - extraout_r1) >> 6) {\u000a          iVar2 = iVar4;\u000a        }\u000a        uVar3 = __udivsi3(iVar2,iVar1);\u000a      }\u000a    }\u000a  }\u000a  return uVar3;\u000a}\u000a\u000a
p1389
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r0 }\npop { r6 }\nbl 0x00038430\nmov r5,#0x0\ncmp r0,#0x0\nbeq 0x0002f482\nmov r0,#0x9\nstr r0,[sp,#0x8]\nlsl r0,r0,#0x5\nldr r4,[r6,r0]\npush { r4 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f482\nldr r0,[sp,#0x8]\nlsl r1,r0,#0x6\nldr r4,[r4,#0x4c]\nmul r4,r1\nldr r0,[r6,#0x4]\nmov r5,#0x0\nmvn r2,r5\ncmp r0,r2\nbeq 0x0002f482\nldr r5,[r6,#0xc]\ncmp r5,#0x1\nblt 0x0002f458\nstr r0,[sp,#0x4]\nstr r1,[sp,#0x8]\nldr r0,[r6,#0x10]\ncmp r5,r0\nbeq 0x0002f454\nbl 0x00037b90\nldr r1,[sp,#0x8]\nldr r0,[sp,#0x4]\nadd r5,r0,r1\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nbl 0x00038450\nsub r2,r4,r1\nadd r1,r2,r5\nadd r0,r1,r4\nlsr r2,r2,#0x6\ncmp r2,#0x9\nbcc 0x0002f476\npush { r1 }\npop { r0 }\npush { r4 }\npop { r1 }\nbl 0x00038460\npush { r0 }\npop { r5 }\npush { r5 }\npop { r0 }\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p1390
S'f0 b5\n03 af\n83 b0\n01 b4\n40 bc\n09 f0 2f f8\n00 25\n00 28\n54 d0\n09 20\n02 90\n40 01\n34 58\n10 b4\n01 bc\n09 f0 2c f8\n00 28\n4a d0\n02 98\n81 01\ne4 6c\n4c 43\n70 68\n00 25\nea 43\n90 42\n41 d0\nf5 68\n01 2d\n29 db\n01 90\n02 91\n30 69\n85 42\n22 d0\n08 f0 bf fb\n02 99\n01 98\n45 18\n20 b4\n01 bc\n10 b4\n02 bc\n08 f0 f5 ff\n62 1a\n51 19\n08 19\n92 09\n09 2a\n01 d3\n02 b4\n01 bc\n10 b4\n02 bc\n08 f0 f1 ff\n01 b4\n20 bc\n20 b4\n01 bc\n03 b0\nf0 bd\n'
p1391
S'.text:0002f3c4\n.text:0002f3c6\n.text:0002f3c8\n.text:0002f3ca\n.text:0002f3cc\n.text:0002f3ce\n.text:0002f3d2\n.text:0002f3d4\n.text:0002f3d6\n.text:0002f3d8\n.text:0002f3da\n.text:0002f3dc\n.text:0002f3de\n.text:0002f3e0\n.text:0002f3e2\n.text:0002f3e4\n.text:0002f3e8\n.text:0002f3ea\n.text:0002f3ec\n.text:0002f3ee\n.text:0002f3f0\n.text:0002f3f2\n.text:0002f3f4\n.text:0002f3f6\n.text:0002f3f8\n.text:0002f3fa\n.text:0002f3fc\n.text:0002f3fe\n.text:0002f400\n.text:0002f402\n.text:0002f404\n.text:0002f406\n.text:0002f408\n.text:0002f40a\n.text:0002f40c\n.text:0002f40e\n.text:0002f454\n.text:0002f456\n.text:0002f458\n.text:0002f45a\n.text:0002f45c\n.text:0002f45e\n.text:0002f460\n.text:0002f462\n.text:0002f466\n.text:0002f468\n.text:0002f46a\n.text:0002f46c\n.text:0002f46e\n.text:0002f470\n.text:0002f472\n.text:0002f474\n.text:0002f476\n.text:0002f478\n.text:0002f47a\n.text:0002f47e\n.text:0002f480\n.text:0002f482\n.text:0002f484\n.text:0002f486\n.text:0002f488\n'
p1392
tp1393
sS'lame_set_out_samplerate'
p1394
(S'\n__stdcall lame_set_out_samplerate()\n'
p1395
V\u000avoid lame_set_out_samplerate(void)\u000a\u000a{\u000a  (*(lame_set_brate + DAT_0003794c))();\u000a  return;\u000a}\u000a\u000a
p1396
S'ldr r12,[0x3794c]\nadd pc,r12,pc\n'
p1397
S'00 c0 9f e5\n0f f0 8c e0\n'
p1398
S'.text:00037944\n.text:00037948\n'
p1399
tp1400
sS'__gnu_unwind_get_pr_addr'
p1401
(S'\n__stdcall __gnu_unwind_get_pr_addr()\n'
p1402
V\u000aundefined4 __gnu_unwind_get_pr_addr(int iParm1)\u000a\u000a{\u000a  if (iParm1 == 1) {\u000a    return *(undefined4 *)(DAT_000364c4 + 0x364ac);\u000a  }\u000a  if (iParm1 != 2) {\u000a    if (iParm1 == 0) {\u000a      return *(undefined4 *)(DAT_000364c0 + 0x364a0);\u000a    }\u000a    return 0;\u000a  }\u000a  return *(undefined4 *)(DAT_000364c8 + 0x364b8);\u000a}\u000a\u000a
p1403
S'cmp r0,#0x1\nbeq 0x000364a0\ncmp r0,#0x2\nbeq 0x000364ac\ncmp r0,#0x0\nbne 0x000364b8\nldr r0,[0x364c0]\nldr r0,[pc,r0]\nbx lr\nldr r0,[0x364c4]\nldr r0,[pc,r0]\nbx lr\nldr r0,[0x364c8]\nldr r0,[pc,r0]\nbx lr\nmov r0,#0x0\nbx lr\n'
p1404
S'01 00 50 e3\n06 00 00 0a\n02 00 50 e3\n07 00 00 0a\n00 00 50 e3\n08 00 00 1a\n24 00 9f e5\n00 00 9f e7\n1e ff 2f e1\n1c 00 9f e5\n00 00 9f e7\n1e ff 2f e1\n14 00 9f e5\n00 00 9f e7\n1e ff 2f e1\n00 00 a0 e3\n1e ff 2f e1\n'
p1405
S'.text:0003647c\n.text:00036480\n.text:00036484\n.text:00036488\n.text:0003648c\n.text:00036490\n.text:00036494\n.text:00036498\n.text:0003649c\n.text:000364a0\n.text:000364a4\n.text:000364a8\n.text:000364ac\n.text:000364b0\n.text:000364b4\n.text:000364b8\n.text:000364bc\n'
p1406
tp1407
sS'raise'
p1408
(S'\n__stdcall raise(int __sig)\n'
p1409
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint raise(int __sig)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_raise_00040f98)();\u000a  return iVar1;\u000a}\u000a\u000a
p1410
S'adr r12,0x16ba8\nadd r12,r12,#0x2a000\nldr pc,[r12,#0x3f0]!\n'
p1411
S'00 c6 8f e2\n2a ca 8c e2\nf0 f3 bc e5\n'
p1412
S'.plt:00016ba0\n.plt:00016ba4\n.plt:00016ba8\n'
p1413
tp1414
sS'_Unwind_GetTextRelBase'
p1415
(S'\n__stdcall _Unwind_GetTextRelBase()\n'
p1416
V\u000avoid _Unwind_GetTextRelBase(void)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1417
S'stmdb sp!,{ r3 lr }\nbl 0x00016bf4\n'
p1418
S'08 40 2d e9\nc4 7c ff eb\n'
p1419
S'.text:000378d8\n.text:000378dc\n'
p1420
tp1421
sS'id3tag_write_v2'
p1422
(S'\n__stdcall id3tag_write_v2()\n'
p1423
V\u000avoid id3tag_write_v2(void)\u000a\u000a{\u000a  (*(InitVbrTag + DAT_00037fcc))();\u000a  return;\u000a}\u000a\u000a
p1424
S'ldr r12,[0x37fcc]\nadd pc,r12,pc\n'
p1425
S'00 c0 9f e5\n0f f0 8c e0\n'
p1426
S'.text:00037fc4\n.text:00037fc8\n'
p1427
tp1428
sS'id3tag_write_v1'
p1429
(S'\n__stdcall id3tag_write_v1()\n'
p1430
V\u000avoid id3tag_write_v1(void)\u000a\u000a{\u000a  (*(fseek + DAT_0003807c))();\u000a  return;\u000a}\u000a\u000a
p1431
S'ldr r12,[0x3807c]\nadd pc,r12,pc\n'
p1432
S'00 c0 9f e5\n0f f0 8c e0\n'
p1433
S'.text:00038074\n.text:00038078\n'
p1434
tp1435
sS'__aeabi_fcmplt'
p1436
(S'\n__stdcall __aeabi_fcmplt()\n'
p1437
V\u000avoid __aeabi_fcmplt(void)\u000a\u000a{\u000a  (*(__aeabi_memclr4 + DAT_00037a3c))();\u000a  return;\u000a}\u000a\u000a
p1438
S'ldr r12,[0x37a3c]\nadd pc,r12,pc\n'
p1439
S'00 c0 9f e5\n0f f0 8c e0\n'
p1440
S'.text:00037a34\n.text:00037a38\n'
p1441
tp1442
sS'get_lame_url'
p1443
(S'\n__stdcall get_lame_url()\n'
p1444
V\u000avoid get_lame_url(void)\u000a\u000a{\u000a  (*(sprintf + DAT_00037c7c))();\u000a  return;\u000a}\u000a\u000a
p1445
S'ldr r12,[0x37c7c]\nadd pc,r12,pc\n'
p1446
S'00 c0 9f e5\n0f f0 8c e0\n'
p1447
S'.text:00037c74\n.text:00037c78\n'
p1448
tp1449
sS'__gnu_Unwind_Save_VFP_D'
p1450
(S'\n__stdcall __gnu_Unwind_Save_VFP_D()\n'
p1451
V\u000a/* WARNING: Control flow encountered unimplemented instructions */\u000a\u000avoid __gnu_Unwind_Save_VFP_D(void)\u000a\u000a{\u000a                    /* WARNING: Unimplemented instruction - Truncating control flow here */\u000a  halt_unimplemented();\u000a}\u000a\u000a
p1452
S'vstmia r0,{d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15}\nbx lr\n'
p1453
S'20 0b 80 ec\n1e ff 2f e1\n'
p1454
S'.text:000372d4\n.text:000372d8\n'
p1455
tp1456
sS'restore_core_regs'
p1457
(S'\n__stdcall restore_core_regs()\n'
p1458
V\u000aundefined8 restore_core_regs(undefined4 *puParm1)\u000a\u000a{\u000a  return CONCAT44(*puParm1,puParm1[1]);\u000a}\u000a\u000a
p1459
S'add r1,r0,#0x34\nldmia r1,{ r3 r4 r5 }\nstmdb sp!,{ r3 r4 r5 }\nldmia r0,{r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 }\nldmia sp,{ sp lr pc }\n'
p1460
S'34 10 80 e2\n38 00 91 e8\n38 00 2d e9\nff 0f 90 e8\n00 e0 9d e8\n'
p1461
S'.text:000372a8\n.text:000372ac\n.text:000372b0\n.text:000372b4\n.text:000372b8\n'
p1462
tp1463
sS'next_unwind_byte'
p1464
(S'\n__stdcall next_unwind_byte()\n'
p1465
V\u000auint next_unwind_byte(uint *puParm1)\u000a\u000a{\u000a  char cVar1;\u000a  uint uVar2;\u000a  \u000a  if (*(char *)(puParm1 + 2) == 0) {\u000a    if (*(char *)((int)puParm1 + 9) == 0) {\u000a      return 0xb0;\u000a    }\u000a    *(char *)((int)puParm1 + 9) = *(char *)((int)puParm1 + 9) + -1;\u000a    *puParm1 = *(uint *)puParm1[1];\u000a    *(uint **)(puParm1 + 1) = (uint *)puParm1[1] + 1;\u000a    cVar1 = 3;\u000a  }\u000a  else {\u000a    cVar1 = *(char *)(puParm1 + 2) + -1;\u000a  }\u000a  *(char *)(puParm1 + 2) = cVar1;\u000a  uVar2 = *puParm1;\u000a  *puParm1 = uVar2 << 8;\u000a  return uVar2 >> 0x18;\u000a}\u000a\u000a
p1466
S'ldrb r3,[r0,#0x8]\ncmp r3,#0x0\nbne 0x0003748c\nldrb r3,[r0,#0x9]\ncmp r3,#0x0\nbeq 0x000374a8\nsub r3,r3,#0x1\nstrb r3,[r0,#0x9]\nldr r3,[r0,#0x4]\nadd r2,r3,#0x4\nldr r3,[r3,#0x0]\nstr r3,[r0,#0x0]\nstr r2,[r0,#0x4]\nmov r3,#0x3\nb 0x00037490\nsub r3,r3,#0x1\nstrb r3,[r0,#0x8]\nldr r3,[r0,#0x0]\nmov r2,r3, lsl #0x8\nstr r2,[r0,#0x0]\nmov r0,r3, lsr #0x18\nbx lr\nmov r0,#0xb0\nbx lr\n'
p1467
S'08 30 d0 e5\n00 00 53 e3\n0b 00 00 1a\n09 30 d0 e5\n00 00 53 e3\n0f 00 00 0a\n01 30 43 e2\n09 30 c0 e5\n04 30 90 e5\n04 20 83 e2\n00 30 93 e5\n00 30 80 e5\n04 20 80 e5\n03 30 a0 e3\n00 00 00 ea\n01 30 43 e2\n08 30 c0 e5\n00 30 90 e5\n03 24 a0 e1\n00 20 80 e5\n23 0c a0 e1\n1e ff 2f e1\nb0 00 a0 e3\n1e ff 2f e1\n'
p1468
S'.text:00037450\n.text:00037454\n.text:00037458\n.text:0003745c\n.text:00037460\n.text:00037464\n.text:00037468\n.text:0003746c\n.text:00037470\n.text:00037474\n.text:00037478\n.text:0003747c\n.text:00037480\n.text:00037484\n.text:00037488\n.text:0003748c\n.text:00037490\n.text:00037494\n.text:00037498\n.text:0003749c\n.text:000374a0\n.text:000374a4\n.text:000374a8\n.text:000374ac\n'
p1469
tp1470
sS'__gnu_Unwind_Backtrace'
p1471
(S'\n__stdcall __gnu_Unwind_Backtrace()\n'
p1472
V\u000aint __gnu_Unwind_Backtrace(code *pcParm1,undefined4 uParm2,int iParm3)\u000a\u000a{\u000a  int iVar1;\u000a  undefined auStack592 [16];\u000a  code *local_240;\u000a  undefined4 local_1f8;\u000a  undefined4 local_1f4;\u000a  undefined4 uStack496;\u000a  undefined4 uStack492;\u000a  undefined4 uStack488;\u000a  undefined4 local_1e4;\u000a  undefined4 uStack480;\u000a  undefined4 uStack476;\u000a  undefined4 uStack472;\u000a  undefined4 local_1d4;\u000a  undefined4 uStack464;\u000a  undefined4 uStack460;\u000a  undefined4 uStack456;\u000a  undefined4 local_1c4;\u000a  undefined4 uStack448;\u000a  undefined4 uStack444;\u000a  undefined4 local_1b8;\u000a  \u000a  *(undefined4 *)(iParm3 + 0x40) = *(undefined4 *)(iParm3 + 0x3c);\u000a  local_1f4 = *(undefined4 *)(iParm3 + 4);\u000a  uStack496 = *(undefined4 *)(iParm3 + 8);\u000a  uStack492 = *(undefined4 *)(iParm3 + 0xc);\u000a  uStack488 = *(undefined4 *)(iParm3 + 0x10);\u000a  local_1e4 = *(undefined4 *)(iParm3 + 0x14);\u000a  uStack480 = *(undefined4 *)(iParm3 + 0x18);\u000a  uStack476 = *(undefined4 *)(iParm3 + 0x1c);\u000a  uStack472 = *(undefined4 *)(iParm3 + 0x20);\u000a  local_1d4 = *(undefined4 *)(iParm3 + 0x24);\u000a  uStack464 = *(undefined4 *)(iParm3 + 0x28);\u000a  uStack460 = *(undefined4 *)(iParm3 + 0x2c);\u000a  uStack456 = *(undefined4 *)(iParm3 + 0x30);\u000a  local_1c4 = *(undefined4 *)(iParm3 + 0x34);\u000a  uStack448 = *(undefined4 *)(iParm3 + 0x38);\u000a  uStack444 = *(undefined4 *)(iParm3 + 0x3c);\u000a  local_1b8 = *(undefined4 *)(iParm3 + 0x40);\u000a  local_1f8 = 0xffffffff;\u000a  do {\u000a    iVar1 = get_eit_entry(auStack592,local_1b8);\u000a    if (iVar1 != 0) {\u000aLAB_00036ad0:\u000a      iVar1 = 9;\u000a      break;\u000a    }\u000a    _Unwind_SetGR(&local_1f8,0xc,auStack592);\u000a    iVar1 = (*pcParm1)(&local_1f8,uParm2);\u000a    if (iVar1 != 0) goto LAB_00036ad0;\u000a    iVar1 = (*local_240)(8,auStack592,&local_1f8);\u000a  } while ((iVar1 - 5U & 0xfffffffb) != 0);\u000a  restore_non_core_regs(&local_1f8);\u000a  return iVar1;\u000a}\u000a\u000a
p1473
S'ldr r3,[r2,#0x3c]\nadd r12,r2,#0x4\nstmdb sp!,{ r4 r5 r6 r7 r8 lr }\nstr r3,[r2,#0x40]\ncpy r7,r0\ncpy r8,r1\nldmia r12!,{r0 r1 r2 r3 }\nsub sp,sp,#0x238\nadd lr,sp,#0x5c\nstmia lr!,{r0 r1 r2 r3 }\nldmia r12!,{r0 r1 r2 r3 }\nstmia lr!,{r0 r1 r2 r3 }\nldmia r12!,{r0 r1 r2 r3 }\nstmia lr!,{r0 r1 r2 r3 }\nldmia r12,{r0 r1 r2 r3 }\ncpy r6,sp\nstmia lr,{r0 r1 r2 r3 }\nadd r4,sp,#0x58\nmvn r3,#0x0\nstr r3,[sp,#0x58]\ncpy r0,r6\nldr r1,[sp,#0x98]\nbl 0x000364cc\ncmp r0,#0x0\nbeq 0x00036ad8\nmov r5,#0x9\nb 0x00036b20\ncpy r0,r4\nmov r1,#0xc\ncpy r2,r6\nbl 0x00036a40\ncpy r0,r4\ncpy r1,r8\nblx r7\ncmp r0,#0x0\nbne 0x00036ad0\nldr r3,[sp,#0x10]\nmov r0,#0x8\ncpy r1,r6\ncpy r2,r4\nblx r3\nsub r3,r0,#0x5\nbics r3,r3,#0x4\ncpy r5,r0\nbne 0x00036abc\ncpy r0,r4\nbl 0x000365d0\ncpy r0,r5\nadd sp,sp,#0x238\nldmia sp!,{ r4 r5 r6 r7 r8 pc }\n'
p1474
S'3c 30 92 e5\n04 c0 82 e2\nf0 41 2d e9\n40 30 82 e5\n00 70 a0 e1\n01 80 a0 e1\n0f 00 bc e8\n8e df 4d e2\n5c e0 8d e2\n0f 00 ae e8\n0f 00 bc e8\n0f 00 ae e8\n0f 00 bc e8\n0f 00 ae e8\n0f 00 9c e8\n0d 60 a0 e1\n0f 00 8e e8\n58 40 8d e2\n00 30 e0 e3\n58 30 8d e5\n06 00 a0 e1\n98 10 9d e5\n80 fe ff eb\n00 00 50 e3\n01 00 00 0a\n09 50 a0 e3\n11 00 00 ea\n04 00 a0 e1\n0c 10 a0 e3\n06 20 a0 e1\nd5 ff ff eb\n04 00 a0 e1\n08 10 a0 e1\n37 ff 2f e1\n00 00 50 e3\nf4 ff ff 1a\n10 30 9d e5\n08 00 a0 e3\n06 10 a0 e1\n04 20 a0 e1\n33 ff 2f e1\n05 30 40 e2\n04 30 d3 e3\n00 50 a0 e1\ne6 ff ff 1a\n04 00 a0 e1\na9 fe ff eb\n05 00 a0 e1\n8e df 8d e2\nf0 81 bd e8\n'
p1475
S'.text:00036a6c\n.text:00036a70\n.text:00036a74\n.text:00036a78\n.text:00036a7c\n.text:00036a80\n.text:00036a84\n.text:00036a88\n.text:00036a8c\n.text:00036a90\n.text:00036a94\n.text:00036a98\n.text:00036a9c\n.text:00036aa0\n.text:00036aa4\n.text:00036aa8\n.text:00036aac\n.text:00036ab0\n.text:00036ab4\n.text:00036ab8\n.text:00036abc\n.text:00036ac0\n.text:00036ac4\n.text:00036ac8\n.text:00036acc\n.text:00036ad0\n.text:00036ad4\n.text:00036ad8\n.text:00036adc\n.text:00036ae0\n.text:00036ae4\n.text:00036ae8\n.text:00036aec\n.text:00036af0\n.text:00036af4\n.text:00036af8\n.text:00036afc\n.text:00036b00\n.text:00036b04\n.text:00036b08\n.text:00036b0c\n.text:00036b10\n.text:00036b14\n.text:00036b18\n.text:00036b1c\n.text:00036b20\n.text:00036b24\n.text:00036b28\n.text:00036b2c\n.text:00036b30\n'
p1476
tp1477
sS'lookupGenre'
p1478
(S'\n__stdcall lookupGenre()\n'
p1479
V\u000auint lookupGenre(char *pcParm1)\u000a\u000a{\u000a  ushort uVar1;\u000a  ushort uVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  byte *pbVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  byte *pbVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  int iVar11;\u000a  uint local_2c;\u000a  byte *local_28;\u000a  uint local_20;\u000a  char *local_1c;\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_0001db20 + 0x1d9c4);\u000a  uVar3 = strtol(pcParm1,&local_1c,10);\u000a  if (*local_1c == 0) {\u000a    uVar9 = 0xffffffff;\u000a    if (uVar3 < 0x94) {\u000aLAB_0001db04:\u000a      uVar9 = uVar3;\u000a    }\u000a  }\u000a  else {\u000a    iVar4 = **(int **)(DAT_0001db24 + 0x1d9e6) + 2;\u000a    uVar3 = 0;\u000a    do {\u000a      iVar11 = 0;\u000a      do {\u000a        uVar1 = *(ushort *)(iVar4 + (uint)(byte)pcParm1[iVar11] * 2);\u000a        uVar2 = *(ushort *)\u000a                 (iVar4 + (uint)*(byte *)(*(int *)(iRam0001db34 + 0x1d9f8 + uVar3 * 4) + iVar11) * 2\u000a                 ) ^ uVar1;\u000a        if ((uVar1 & 0xff) == 0) {\u000a          if ((uVar2 & 0xff) == 0) {\u000a            if (uVar3 != 0x94) goto LAB_0001db04;\u000a            goto LAB_0001da34;\u000a          }\u000a          break;\u000a        }\u000a        iVar11 = iVar11 + 1;\u000a      } while ((uVar2 & 0xff) == 0);\u000a      uVar3 = uVar3 + 1;\u000a    } while ((int)uVar3 < 0x94);\u000aLAB_0001da34:\u000a    uVar3 = 0;\u000a    pbVar5 = (byte *)nextUpperAlpha(pcParm1,0);\u000a    iVar4 = **(int **)(DAT_0001db28 + 0x1da4e) + 2;\u000a    uVar6 = (uint)*(ushort *)(iVar4 + (uint)*pbVar5 * 2);\u000a    uVar7 = uVar6 & 0xff;\u000a    do {\u000a      pbVar8 = (byte *)nextUpperAlpha(*(undefined4 *)(iRam0001db30 + 0x1da66 + uVar3 * 4),0);\u000a      uVar10 = (uint)*pbVar8;\u000a      local_20 = (uint)*(ushort *)(iVar4 + uVar10 * 2);\u000a      uVar9 = uVar7;\u000a      local_2c = uVar6;\u000a      local_28 = pbVar5;\u000a      if (uVar7 == (local_20 & 0xff)) {\u000a        do {\u000a          if (uVar9 == 0) {\u000a            uVar9 = 0xfffffffe;\u000a            if (uVar3 == 0x94) goto LAB_0001db08;\u000a            goto LAB_0001db04;\u000a          }\u000a          if ((uVar10 != 0) && (local_28[1] == 0x2e)) {\u000a            do {\u000a              pbVar8 = pbVar8 + 1;\u000a              if (uVar10 == 0x20) break;\u000a              uVar10 = (uint)*pbVar8;\u000a            } while (*pbVar8 != 0);\u000a          }\u000a          local_28 = (byte *)nextUpperAlpha(local_28,local_2c & 0xff);\u000a          pbVar8 = (byte *)nextUpperAlpha(pbVar8,local_20 & 0xff);\u000a          local_2c = (uint)*(ushort *)(iVar4 + (uint)*local_28 * 2);\u000a          uVar9 = local_2c & 0xff;\u000a          uVar10 = (uint)*pbVar8;\u000a          local_20 = (uint)*(ushort *)(iVar4 + uVar10 * 2);\u000a        } while (uVar9 == (local_20 & 0xff));\u000a      }\u000a      uVar9 = 0xfffffffe;\u000a      uVar3 = uVar3 + 1;\u000a    } while ((int)uVar3 < 0x94);\u000a  }\u000aLAB_0001db08:\u000a  if (**(int **)(iRam0001db2c + 0x1db0e) != local_18) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return uVar9;\u000a}\u000a\u000a
p1480
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x2c\npush { r0 }\npop { r4 }\nldr r0,[0x0001db20]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x28]\nadd r1,sp,#0x24\nmov r2,#0xa\npush { r4 }\npop { r0 }\nbl 0x00037d00\npush { r0 }\npop { r1 }\nldr r0,[sp,#0x24]\nldrb r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x0001da24\nldr r0,[0x0001db24]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nadd r0,#0x2\nmov r1,#0x0\nstr r1,[sp,#0x20]\nstr r1,[sp,#0x1c]\nlsl r1,r1,#0x2\nldr r2,[0x0001db34]\nadd r2,pc\nldr r3,[r2,r1]\nldr r6,[sp,#0x20]\nldrb r1,[r3,r6]\nlsl r1,r1,#0x1\nldrh r2,[r0,r1]\nldrb r1,[r4,r6]\nlsl r1,r1,#0x1\nldrh r1,[r0,r1]\nmov r5,#0xff\neor r2,r1\ntst r1,r5\nbeq 0x0001da16\nadd r6,#0x1\ntst r2,r5\nbeq 0x0001d9fa\nb 0x0001da1a\ntst r2,r5\nbeq 0x0001da2e\nldr r1,[sp,#0x1c]\nadd r1,#0x1\ncmp r1,#0x94\nblt 0x0001d9ee\nb 0x0001da34\nmov r0,#0x0\nmvn r0,r0\ncmp r1,#0x93\nbhi 0x0001db08\nb 0x0001db04\nldr r1,[sp,#0x1c]\ncmp r1,#0x94\nbne 0x0001db04\nmov r6,#0x0\npush { r4 }\npop { r0 }\npush { r6 }\npop { r1 }\nbl 0x0001e9ac\nstr r0,[sp,#0x8]\nldrb r0,[r0,#0x0]\nlsl r0,r0,#0x1\nldr r1,[0x0001db28]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nadd r1,#0x2\nstr r1,[sp,#0x10]\nldrh r0,[r1,r0]\nstr r0,[sp,#0x4]\nand r0,r5\nstr r0,[sp,#0xc]\nstr r6,[sp,#0x1c]\nlsl r0,r6,#0x2\nldr r1,[0x0001db30]\nadd r1,pc\nldr r0,[r1,r0]\nmov r1,#0x0\nbl 0x0001e9ac\npush { r0 }\npop { r6 }\nldrb r4,[r6,#0x0]\nlsl r1,r4,#0x1\nldr r2,[sp,#0x10]\nldrh r1,[r2,r1]\nstr r1,[sp,#0x20]\nand r1,r5\nldr r2,[sp,#0xc]\ncmp r2,r1\nbne 0x0001daec\nldr r2,[sp,#0xc]\nldr r0,[sp,#0x4]\nstr r0,[sp,#0x14]\nldr r0,[sp,#0x8]\nstr r0,[sp,#0x18]\ncmp r2,#0x0\nbeq 0x0001dafa\ntst r4,r5\nbeq 0x0001dab2\nldr r0,[sp,#0x18]\nldrb r2,[r0,#0x1]\ncmp r2,#0x2e\nbne 0x0001dab4\nadd r2,r6,#0x1\npush { r2 }\npop { r6 }\nand r4,r5\ncmp r4,#0x20\nbeq 0x0001dab4\nadd r2,r6,#0x1\nldrb r4,[r6,#0x0]\ncmp r4,#0x0\nbne 0x0001da9e\nb 0x0001dab4\nldr r0,[sp,#0x18]\nldr r1,[sp,#0x14]\nand r1,r5\nbl 0x0001e9ac\n'
p1481
S'f0 b5\n03 af\n8b b0\n01 b4\n10 bc\n58 48\n78 44\n00 68\n00 68\n0a 90\n09 a9\n0a 22\n10 b4\n01 bc\n1a f0 96 f9\n01 b4\n02 bc\n09 98\n00 78\n00 28\n21 d0\n50 48\n78 44\n00 68\n00 68\n02 30\n00 21\n08 91\n07 91\n89 00\n50 4a\n7a 44\n53 58\n08 9e\n99 5d\n49 00\n42 5a\na1 5d\n49 00\n41 5a\nff 25\n4a 40\n29 42\n03 d0\n01 36\n2a 42\nf2 d0\n01 e0\n2a 42\n09 d0\n07 99\n01 31\n94 29\ne5 db\n07 e0\n00 20\nc0 43\n93 29\n6d d8\n6a e0\n07 99\n94 29\n67 d1\n00 26\n10 b4\n01 bc\n40 b4\n02 bc\n00 f0 b5 ff\n02 90\n00 78\n40 00\n37 49\n79 44\n09 68\n09 68\n02 31\n04 91\n08 5a\n01 90\n28 40\n03 90\n07 96\nb0 00\n33 49\n79 44\n08 58\n00 21\n00 f0 a0 ff\n01 b4\n40 bc\n34 78\n61 00\n04 9a\n51 5a\n08 91\n29 40\n03 9a\n8a 42\n34 d1\n03 9a\n01 98\n05 90\n02 98\n06 90\n00 2a\n34 d0\n2c 42\n0e d0\n06 98\n42 78\n2e 2a\n0b d1\n72 1c\n04 b4\n40 bc\n2c 40\n20 2c\n05 d0\n72 1c\n34 78\n00 2c\nf6 d1\n00 e0\n06 98\n05 99\n29 40\n00 f0 78 ff\n'
p1482
S'.text:0001d9b4\n.text:0001d9b6\n.text:0001d9b8\n.text:0001d9ba\n.text:0001d9bc\n.text:0001d9be\n.text:0001d9c0\n.text:0001d9c2\n.text:0001d9c4\n.text:0001d9c6\n.text:0001d9c8\n.text:0001d9ca\n.text:0001d9cc\n.text:0001d9ce\n.text:0001d9d0\n.text:0001d9d4\n.text:0001d9d6\n.text:0001d9d8\n.text:0001d9da\n.text:0001d9dc\n.text:0001d9de\n.text:0001d9e0\n.text:0001d9e2\n.text:0001d9e4\n.text:0001d9e6\n.text:0001d9e8\n.text:0001d9ea\n.text:0001d9ec\n.text:0001d9ee\n.text:0001d9f0\n.text:0001d9f2\n.text:0001d9f4\n.text:0001d9f6\n.text:0001d9f8\n.text:0001d9fa\n.text:0001d9fc\n.text:0001d9fe\n.text:0001da00\n.text:0001da02\n.text:0001da04\n.text:0001da06\n.text:0001da08\n.text:0001da0a\n.text:0001da0c\n.text:0001da0e\n.text:0001da10\n.text:0001da12\n.text:0001da14\n.text:0001da16\n.text:0001da18\n.text:0001da1a\n.text:0001da1c\n.text:0001da1e\n.text:0001da20\n.text:0001da22\n.text:0001da24\n.text:0001da26\n.text:0001da28\n.text:0001da2a\n.text:0001da2c\n.text:0001da2e\n.text:0001da30\n.text:0001da32\n.text:0001da34\n.text:0001da36\n.text:0001da38\n.text:0001da3a\n.text:0001da3c\n.text:0001da3e\n.text:0001da42\n.text:0001da44\n.text:0001da46\n.text:0001da48\n.text:0001da4a\n.text:0001da4c\n.text:0001da4e\n.text:0001da50\n.text:0001da52\n.text:0001da54\n.text:0001da56\n.text:0001da58\n.text:0001da5a\n.text:0001da5c\n.text:0001da5e\n.text:0001da60\n.text:0001da62\n.text:0001da64\n.text:0001da66\n.text:0001da68\n.text:0001da6c\n.text:0001da6e\n.text:0001da70\n.text:0001da72\n.text:0001da74\n.text:0001da76\n.text:0001da78\n.text:0001da7a\n.text:0001da7c\n.text:0001da7e\n.text:0001da80\n.text:0001da82\n.text:0001da84\n.text:0001da86\n.text:0001da88\n.text:0001da8a\n.text:0001da8c\n.text:0001da8e\n.text:0001da90\n.text:0001da92\n.text:0001da94\n.text:0001da96\n.text:0001da98\n.text:0001da9a\n.text:0001da9c\n.text:0001da9e\n.text:0001daa0\n.text:0001daa2\n.text:0001daa4\n.text:0001daa6\n.text:0001daa8\n.text:0001daaa\n.text:0001daac\n.text:0001daae\n.text:0001dab0\n.text:0001dab2\n.text:0001dab4\n.text:0001dab6\n.text:0001dab8\n'
p1483
tp1484
sS'lame_set_asm_optimizations'
p1485
(S'\n__stdcall lame_set_asm_optimizations()\n'
p1486
V\u000aint lame_set_asm_optimizations(int iParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  iVar2 = -1;\u000a  if (iVar1 != 0) {\u000a    iVar1 = 0;\u000a    if (iParm3 == 1) {\u000a      iVar1 = iParm3;\u000a    }\u000a    if (iParm2 == 3) {\u000a      *(int *)(iParm1 + 300) = iVar1;\u000a      iVar2 = 3;\u000a    }\u000a    else {\u000a      if (iParm2 == 2) {\u000a        *(int *)(iParm1 + 0x128) = iVar1;\u000a        iVar2 = 2;\u000a      }\u000a      else {\u000a        iVar2 = iParm2;\u000a        if (iParm2 == 1) {\u000a          *(int *)(iParm1 + 0x124) = iVar1;\u000a          iVar2 = 1;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1487
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r2 }\npop { r6 }\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002f510\ncmp r6,#0x1\nbne 0x0002f4e4\npush { r6 }\npop { r2 }\ncmp r5,#0x3\nbeq 0x0002f4fe\ncmp r5,#0x2\nbeq 0x0002f508\ncmp r5,#0x1\npush { r5 }\npop { r0 }\nbne 0x0002f510\nmov r0,#0x49\nlsl r0,r0,#0x2\nstr r2,[r4,r0]\nmov r0,#0x1\nb 0x0002f510\nmov r0,#0x4b\nlsl r0,r0,#0x2\nstr r2,[r4,r0]\nmov r0,#0x3\nb 0x0002f510\nmov r0,#0x25\nlsl r0,r0,#0x3\nstr r2,[r4,r0]\nmov r0,#0x2\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p1488
S'f0 b5\n03 af\n81 b0\n04 b4\n40 bc\n02 b4\n20 bc\n01 b4\n10 bc\n08 f0 b0 ff\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n19 d0\n01 2e\n01 d1\n40 b4\n04 bc\n03 2d\n0a d0\n02 2d\n0d d0\n01 2d\n20 b4\n01 bc\n0d d1\n49 20\n80 00\n22 50\n01 20\n08 e0\n4b 20\n80 00\n22 50\n03 20\n03 e0\n25 20\nc0 00\n22 50\n02 20\n01 b0\nf0 bd\n'
p1489
S'.text:0002f4ba\n.text:0002f4bc\n.text:0002f4be\n.text:0002f4c0\n.text:0002f4c2\n.text:0002f4c4\n.text:0002f4c6\n.text:0002f4c8\n.text:0002f4ca\n.text:0002f4cc\n.text:0002f4d0\n.text:0002f4d2\n.text:0002f4d4\n.text:0002f4d6\n.text:0002f4d8\n.text:0002f4da\n.text:0002f4dc\n.text:0002f4de\n.text:0002f4e0\n.text:0002f4e2\n.text:0002f4e4\n.text:0002f4e6\n.text:0002f4e8\n.text:0002f4ea\n.text:0002f4ec\n.text:0002f4ee\n.text:0002f4f0\n.text:0002f4f2\n.text:0002f4f4\n.text:0002f4f6\n.text:0002f4f8\n.text:0002f4fa\n.text:0002f4fc\n.text:0002f4fe\n.text:0002f500\n.text:0002f502\n.text:0002f504\n.text:0002f506\n.text:0002f508\n.text:0002f50a\n.text:0002f50c\n.text:0002f50e\n.text:0002f510\n.text:0002f512\n'
p1490
tp1491
sS'InitVbrTag'
p1492
(S'\n__stdcall InitVbrTag()\n'
p1493
V\u000avoid InitVbrTag(void)\u000a\u000a{\u000a  (*(isResamplingNecessary + DAT_00037fdc))();\u000a  return;\u000a}\u000a\u000a
p1494
S'ldr r12,[0x37fdc]\nadd pc,r12,pc\n'
p1495
S'00 c0 9f e5\n0f f0 8c e0\n'
p1496
S'.text:00037fd4\n.text:00037fd8\n'
p1497
tp1498
sS'calc_sfb_noise_x34'
p1499
(S'\n__stdcall calc_sfb_noise_x34()\n'
p1500
V\u000aundefined4 calc_sfb_noise_x34(undefined4 uParm1,undefined4 *puParm2,uint uParm3,int iParm4)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  uint uVar2;\u000a  \u000a  uVar2 = uParm3 & 3;\u000a  uVar1 = *(undefined4 *)(*(int *)(DAT_00034048 + 0x33cca) + iParm4 * 4);\u000a  if (uParm3 >> 2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(uVar1,*puParm2);\u000a  }\u000a  if (uVar2 == 1) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(uVar1,*puParm2);\u000a  }\u000a  if (uVar2 == 2) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(uVar1,puParm2[1]);\u000a  }\u000a  if (uVar2 != 3) {\u000a    return 0;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(uVar1,puParm2[2]);\u000a}\u000a\u000a
p1501
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4c\npush { r1 }\npop { r4 }\nmov r5,#0x3\nand r5,r2\nlsl r3,r3,#0x2\nldr r1,[0x00034048]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,r3]\nstr r1,[sp,#0x44]\nldr r1,[0x0003404c]\nadd r1,pc\nldr r1,[r1,#0x0]\nadd r3,r3,r1\nmov r1,#0x1d\nlsl r1,r1,#0x4\nldr r1,[r3,r1]\nstr r1,[sp,#0x38]\nlsr r2,r2,#0x2\nmov r6,#0x0\ncmp r2,#0x0\nbne 0x00033ce8\nb 0x00033eba\nstr r5,[sp,#0x8]\nstr r6,[sp,#0x14]\nlsl r1,r2,#0x4\nadd r1,r4,r1\nstr r1,[sp,#0xc]\nlsl r1,r2,#0x2\nstr r1,[sp,#0x4]\nrsb r2,r2\nmov r1,#0x0\nstr r1,[sp,#0x3c]\nldr r1,[0x00034050]\nadd r1,pc\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x34]\nldr r1,[0x00034054]\nadd r1,pc\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x30]\nstr r0,[sp,#0x48]\nstr r0,[sp,#0x10]\nstr r4,[sp,#0x28]\nstr r2,[sp,#0x2c]\nldr r1,[r4,#0x0]\nldr r0,[sp,#0x44]\npush { r0 }\npop { r6 }\nbl 0x00037aa0\nstr r0,[sp,#0x10]\nstr r6,[sp,#0x3c]\nstr r4,[sp,#0xc]\ncmp r5,#0x1\npush { r6 }\npop { r4 }\npush { r6 }\npop { r1 }\nldr r0,[sp,#0x44]\nbeq 0x00033efe\ncmp r5,#0x2\npush { r6 }\npop { r4 }\nbeq 0x00033eec\ncmp r5,#0x3\nbeq 0x00033edc\nb 0x00034042\nldr r0,[sp,#0xc]\nldr r1,[r0,#0x8]\nldr r0,[sp,#0x44]\nbl 0x00037aa0\nstr r0,[sp,#0x44]\nldr r0,[sp,#0xc]\nldr r1,[r0,#0x4]\nldr r0,[sp,#0x44]\nbl 0x00037aa0\nstr r1,[sp,#0x48]\nstr r4,[sp,#0x40]\nstr r6,[sp,#0x14]\nldr r1,[sp,#0xc]\nldr r1,[r1,#0x0]\nbl 0x00037aa0\n'
p1502
S'f0 b5\n03 af\n93 b0\n02 b4\n10 bc\n03 25\n15 40\n9b 00\ne0 49\n79 44\n09 68\nc9 58\n11 91\ndf 49\n79 44\n09 68\n5b 18\n1d 21\n09 01\n59 58\n0e 91\n92 08\n00 26\n00 2a\n00 d1\ne8 e0\n02 95\n05 96\n11 01\n61 18\n03 91\n91 00\n01 91\n52 42\n00 21\n0f 91\nd4 49\n79 44\n09 68\n0d 91\nd3 49\n79 44\n09 68\n0c 91\n12 90\n04 90\n0a 94\n0b 92\n21 68\n11 98\n01 b4\n40 bc\n03 f0 c0 fe\n04 90\n0f 96\n03 94\n01 2d\n40 b4\n10 bc\n40 b4\n02 bc\n11 98\n17 d0\n02 2d\n40 b4\n10 bc\n0a d0\n03 2d\n00 d0\nb2 e0\n03 98\n81 68\n11 98\n03 f0 dd fd\n11 90\n03 98\n41 68\n11 98\n03 f0 d4 fd\n12 91\n10 94\n05 96\n03 99\n09 68\n03 f0 ca fd\n'
p1503
S'.text:00033cb4\n.text:00033cb6\n.text:00033cb8\n.text:00033cba\n.text:00033cbc\n.text:00033cbe\n.text:00033cc0\n.text:00033cc2\n.text:00033cc4\n.text:00033cc6\n.text:00033cc8\n.text:00033cca\n.text:00033ccc\n.text:00033cce\n.text:00033cd0\n.text:00033cd2\n.text:00033cd4\n.text:00033cd6\n.text:00033cd8\n.text:00033cda\n.text:00033cdc\n.text:00033cde\n.text:00033ce0\n.text:00033ce2\n.text:00033ce4\n.text:00033ce6\n.text:00033ce8\n.text:00033cea\n.text:00033cec\n.text:00033cee\n.text:00033cf0\n.text:00033cf2\n.text:00033cf4\n.text:00033cf6\n.text:00033cf8\n.text:00033cfa\n.text:00033cfc\n.text:00033cfe\n.text:00033d00\n.text:00033d02\n.text:00033d04\n.text:00033d06\n.text:00033d08\n.text:00033d0a\n.text:00033d0c\n.text:00033d0e\n.text:00033d10\n.text:00033d12\n.text:00033d14\n.text:00033d16\n.text:00033d18\n.text:00033d1a\n.text:00033d1c\n.text:00033eba\n.text:00033ebc\n.text:00033ebe\n.text:00033ec0\n.text:00033ec2\n.text:00033ec4\n.text:00033ec6\n.text:00033ec8\n.text:00033eca\n.text:00033ecc\n.text:00033ece\n.text:00033ed0\n.text:00033ed2\n.text:00033ed4\n.text:00033ed6\n.text:00033ed8\n.text:00033eda\n.text:00033edc\n.text:00033ede\n.text:00033ee0\n.text:00033ee2\n.text:00033eec\n.text:00033eee\n.text:00033ef0\n.text:00033ef2\n.text:00033ef4\n.text:00033efe\n.text:00033f00\n.text:00033f02\n.text:00033f04\n.text:00033f06\n.text:00033f08\n'
p1504
tp1505
sS'lame_encode_buffer_long2'
p1506
(S'\n__stdcall lame_encode_buffer_long2(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p1507
V\u000avoid lame_encode_buffer_long2(void)\u000a\u000a{\u000a  lame_encode_buffer_template();\u000a  return;\u000a}\u000a\u000a
p1508
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\nmov r4,#0x6f\nlsl r4,r4,#0x17\nmov r5,sp\nstr r4,[r5,#0x10]\nmov r4,#0x1\nstr r4,[r5,#0xc]\nmov r4,#0x2\nstr r4,[r5,#0x8]\nldr r4,[sp,#0x2c]\nstr r4,[r5,#0x4]\nldr r4,[sp,#0x28]\nstr r4,[r5,#0x0]\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p1509
S'b0 b5\n02 af\n86 b0\n6f 24\ne4 05\n6d 46\n2c 61\n01 24\nec 60\n02 24\nac 60\n0b 9c\n6c 60\n0a 9c\n2c 60\nff f7 ab fd\n06 b0\nb0 bd\n'
p1510
S'.text:000211b8\n.text:000211ba\n.text:000211bc\n.text:000211be\n.text:000211c0\n.text:000211c2\n.text:000211c4\n.text:000211c6\n.text:000211c8\n.text:000211ca\n.text:000211cc\n.text:000211ce\n.text:000211d0\n.text:000211d2\n.text:000211d4\n.text:000211d6\n.text:000211da\n.text:000211dc\n'
p1511
tp1512
sS'__aeabi_fcmple'
p1513
(S'\n__stdcall __aeabi_fcmple()\n'
p1514
V\u000avoid __aeabi_fcmple(void)\u000a\u000a{\u000a  (*(__aeabi_memcpy4 + DAT_00037b0c))();\u000a  return;\u000a}\u000a\u000a
p1515
S'ldr r12,[0x37b0c]\nadd pc,r12,pc\n'
p1516
S'00 c0 9f e5\n0f f0 8c e0\n'
p1517
S'.text:00037b04\n.text:00037b08\n'
p1518
tp1519
sS'filterButter'
p1520
(S'\n__stdcall filterButter()\n'
p1521
V\u000avoid filterButter(undefined4 *puParm1,undefined4 uParm2,int iParm3,undefined4 *puParm4)\u000a\u000a{\u000a  if (iParm3 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(*puParm1,*puParm4,iParm3,puParm4,puParm4 + 1,puParm4 + 2,puParm4 + 3,puParm4 + 4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1522
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1c\npush { r1 }\npop { r6 }\npush { r0 }\npop { r4 }\ncmp r2,#0x0\nbeq 0x0001c756\nstr r3,[sp,#0x10]\npush { r3 }\npop { r0 }\nadd r0,#0x10\nstr r0,[sp,#0xc]\npush { r3 }\npop { r0 }\nadd r0,#0xc\nstr r0,[sp,#0x8]\npush { r3 }\npop { r0 }\nadd r0,#0x8\nstr r0,[sp,#0x4]\nadd r0,r3,#0x4\nstr r0,[sp,#0x0]\nstr r2,[sp,#0x18]\nldr r0,[r4,#0x0]\nldr r1,[sp,#0x10]\nldr r1,[r1,#0x0]\nbl 0x00037aa0\nadd sp,#0x1c\npop { r4, r5, r6, r7, pc }\n'
p1523
S'f0 b5\n03 af\n87 b0\n02 b4\n40 bc\n01 b4\n10 bc\n00 2a\n4b d0\n04 93\n08 b4\n01 bc\n10 30\n03 90\n08 b4\n01 bc\n0c 30\n02 90\n08 b4\n01 bc\n08 30\n01 90\n18 1d\n00 90\n06 92\n20 68\n04 99\n09 68\n1b f0 dc f9\n07 b0\nf0 bd\n'
p1524
S'.text:0001c6ac\n.text:0001c6ae\n.text:0001c6b0\n.text:0001c6b2\n.text:0001c6b4\n.text:0001c6b6\n.text:0001c6b8\n.text:0001c6ba\n.text:0001c6bc\n.text:0001c6be\n.text:0001c6c0\n.text:0001c6c2\n.text:0001c6c4\n.text:0001c6c6\n.text:0001c6c8\n.text:0001c6ca\n.text:0001c6cc\n.text:0001c6ce\n.text:0001c6d0\n.text:0001c6d2\n.text:0001c6d4\n.text:0001c6d6\n.text:0001c6d8\n.text:0001c6da\n.text:0001c6dc\n.text:0001c6de\n.text:0001c6e0\n.text:0001c6e2\n.text:0001c6e4\n.text:0001c756\n.text:0001c758\n'
p1525
tp1526
sS'lame_get_ReplayGain_input'
p1527
(S'\n__stdcall lame_get_ReplayGain_input(lame_global_flags * gfp)\n'
p1528
V\u000aint lame_get_ReplayGain_input(lame_global_flags *gfp)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000acode_r0x0001e20e:\u000a  if (unaff_r5[8] != 1) {\u000a    iVar2 = unaff_r5[7];\u000a    if (iVar2 == 0) goto LAB_0001e09a;\u000a    puVar7 = (undefined *)unaff_r5[6];\u000a    iVar4 = iVar2;\u000a    puVar11 = unaff_r6;\u000a    do {\u000a      *puVar11 = *puVar7;\u000a      puVar11 = puVar11 + 1;\u000a      puVar7 = puVar7 + 1;\u000a      iVar4 = iVar4 + -1;\u000a      if (iVar4 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    unaff_r6 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[6],unaff_r5[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          while( true ) {\u000a            unaff_r5 = (int *)*unaff_r5;\u000a            if (unaff_r5 == (int *)0x0) {\u000a              if (__s != (char *)0x0) {\u000a                iVar2 = 4;\u000a                if ((*in_stack_00000004 != 0) &&\u000a                   (uVar8 = DAT_0001e49c,\u000a                   *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a                  do {\u000a                    unaff_r6[iVar2 + -1] = (char)uVar8;\u000a                    iVar2 = iVar2 + -1;\u000a                    uVar8 = uVar8 >> 8;\u000a                  } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a                  strlen(__s);\u000a                }\u000a              }\u000a              __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a              if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a                return in_stack_0000002c;\u000a              }\u000a                    /* WARNING: Subroutine does not return */\u000a              __stack_chk_fail();\u000a            }\u000a            uVar8 = unaff_r5[1];\u000a            uVar10 = 0xff;\u000a            iVar2 = 4;\u000a            if ((uVar8 != DAT_0001e494) && (uVar3 = in_stack_00000030, uVar8 != DAT_0001e498))\u000a            break;\u000a            iVar2 = unaff_r5[4] * 2 + 0x10;\u000a            if (unaff_r5[5] != 1) {\u000a              iVar2 = unaff_r5[4] + 0xf;\u000a            }\u000a            iVar4 = 0;\u000a            if (unaff_r5[8] == 1) {\u000a              iVar4 = unaff_r5[8];\u000a            }\u000a            uVar10 = (unaff_r5[7] << iVar4) + iVar2;\u000a            iVar2 = 4;\u000a            if (10 < uVar10) goto LAB_0001e0ea;\u000a          }\u000a          do {\u000a            uVar6 = uVar10 & 0x57000000;\u000a            uVar9 = in_stack_00000030;\u000a            if (uVar6 != (uVar10 & uVar8)) {\u000a              uVar9 = uVar10 & uVar8;\u000a            }\u000a            if (uVar6 == 0) {\u000a              uVar9 = uVar6;\u000a            }\u000a            uVar3 = uVar3 | uVar9;\u000a            iVar2 = iVar2 + -1;\u000a            uVar10 = uVar10 << 8;\u000a          } while (iVar2 != 0);\u000a          if (uVar3 != 0) break;\u000a          uVar10 = sizeOfWxxxNode(unaff_r5);\u000a          iVar2 = 4;\u000a          if (10 < uVar10) {\u000a            do {\u000a              unaff_r6[iVar2 + -1] = (char)uVar8;\u000a              iVar2 = iVar2 + -1;\u000a              uVar8 = uVar8 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar10 = uVar10 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              unaff_r6[iVar2 + 3] = (char)uVar10;\u000a              iVar2 = iVar2 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar2);\u000a            unaff_r6[8] = 0;\u000a            unaff_r6[9] = 0;\u000a            puVar11 = unaff_r6 + 10;\u000a            if (unaff_r5[4] != 0) {\u000a              *(bool *)(unaff_r6 + 10) = unaff_r5[5] == 1;\u000a              puVar11 = unaff_r6 + 0xb;\u000a              if (unaff_r5[5] == 1) {\u000a                puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a                *puVar11 = 0;\u000a                puVar11[1] = 0;\u000a                puVar11 = puVar11 + 2;\u000a              }\u000a              else {\u000a                iVar2 = unaff_r5[4];\u000a                if (iVar2 != 0) {\u000a                  puVar1 = (undefined *)unaff_r5[3];\u000a                  iVar4 = iVar2;\u000a                  puVar7 = puVar11;\u000a                  do {\u000a                    *puVar7 = *puVar1;\u000a                    puVar7 = puVar7 + 1;\u000a                    puVar1 = puVar1 + 1;\u000a                    iVar4 = iVar4 + -1;\u000a                  } while (iVar4 != 0);\u000a                  puVar11 = puVar11 + iVar2;\u000a                }\u000a                *puVar11 = 0;\u000a                puVar11 = puVar11 + 1;\u000a              }\u000a            }\u000a            if (unaff_r5[8] == 1) {\u000a              unaff_r6 = (undefined *)writeLoBytes(puVar11,unaff_r5[6],unaff_r5[7]);\u000a            }\u000a            else {\u000a              iVar2 = unaff_r5[7];\u000a              unaff_r6 = puVar11;\u000a              if (iVar2 != 0) {\u000a                puVar1 = (undefined *)unaff_r5[6];\u000a                iVar4 = iVar2;\u000a                puVar7 = puVar11;\u000a                do {\u000a                  *puVar7 = *puVar1;\u000a                  puVar7 = puVar7 + 1;\u000a                  puVar1 = puVar1 + 1;\u000a                  iVar4 = iVar4 + -1;\u000a                } while (iVar4 != 0);\u000a                unaff_r6 = puVar11 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        iVar2 = unaff_r5[7];\u000a        iVar4 = unaff_r5[4];\u000a        if (unaff_r5[8] == 1) {\u000a          iVar5 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar4 = 4;\u000a      } while ((uint)(iVar5 + iVar2) < 0xb);\u000a      do {\u000a        unaff_r6[iVar4 + -1] = (char)uVar8;\u000a        iVar4 = iVar4 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar4);\u000a      uVar8 = (iVar5 + iVar2) - 10;\u000a      iVar2 = 4;\u000a      do {\u000a        unaff_r6[iVar2 + 3] = (char)uVar8;\u000a        iVar2 = iVar2 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar2);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = unaff_r5[8] == 1;\u000a      unaff_r6 = unaff_r6 + 0xb;\u000a      iVar2 = unaff_r5[4];\u000a      if (iVar2 != 0) {\u000a        if (unaff_r5[5] == 1) {\u000a          puVar11 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[3]);\u000a          *puVar11 = 0;\u000a          puVar11[1] = 0;\u000a          unaff_r6 = puVar11 + 2;\u000a        }\u000a        else {\u000a          puVar7 = (undefined *)unaff_r5[3];\u000a          iVar4 = iVar2;\u000a          puVar11 = unaff_r6;\u000a          do {\u000a            *puVar11 = *puVar7;\u000a            puVar11 = puVar11 + 1;\u000a            puVar7 = puVar7 + 1;\u000a            iVar4 = iVar4 + -1;\u000a          } while (iVar4 != 0);\u000a          unaff_r6[iVar2] = 0;\u000a          unaff_r6 = unaff_r6 + iVar2 + 1;\u000a        }\u000a      }\u000a      if (unaff_r5[8] == 1) break;\u000a      iVar2 = unaff_r5[7];\u000a      if (iVar2 != 0) {\u000a        puVar7 = (undefined *)unaff_r5[6];\u000a        iVar4 = iVar2;\u000a        puVar11 = unaff_r6;\u000a        do {\u000a          *puVar11 = *puVar7;\u000a          puVar11 = puVar11 + 1;\u000a          puVar7 = puVar7 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a        unaff_r6 = unaff_r6 + iVar2;\u000a      }\u000a    }\u000a  } while( true );\u000aLAB_0001e0ea:\u000a  do {\u000a    unaff_r6[iVar2 + -1] = (char)uVar8;\u000a    iVar2 = iVar2 + -1;\u000a    uVar8 = uVar8 >> 8;\u000a  } while (0 < iVar2);\u000a  uVar10 = uVar10 - 10;\u000a  iVar2 = 4;\u000a  do {\u000a    unaff_r6[iVar2 + 3] = (char)uVar10;\u000a    iVar2 = iVar2 + -1;\u000a    uVar10 = uVar10 >> 8;\u000a  } while (0 < iVar2);\u000a  unaff_r6[8] = 0;\u000a  unaff_r6[9] = 0;\u000a  *(bool *)(unaff_r6 + 10) = unaff_r5[8] == 1;\u000a  unaff_r6[0xb] = *(undefined *)(unaff_r5 + 2);\u000a  unaff_r6[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a  unaff_r6[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a  puVar11 = unaff_r6 + 0xe;\u000a  if (unaff_r5[5] == 1) {\u000a    gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a    *(undefined *)&gfp_00->class_id = 0;\u000a    *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a    iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a    return iVar2;\u000a  }\u000a  iVar2 = unaff_r5[4];\u000a  if (iVar2 != 0) {\u000a    puVar1 = (undefined *)unaff_r5[3];\u000a    iVar4 = iVar2;\u000a    puVar7 = puVar11;\u000a    do {\u000a      *puVar7 = *puVar1;\u000a      puVar7 = puVar7 + 1;\u000a      puVar1 = puVar1 + 1;\u000a      iVar4 = iVar4 + -1;\u000a    } while (iVar4 != 0);\u000a    puVar11 = puVar11 + iVar2;\u000a  }\u000a  *puVar11 = 0;\u000a  unaff_r6 = puVar11 + 1;\u000a  goto code_r0x0001e20e;\u000a}\u000a\u000a
p1529
S'ldr r0,[r5,#0x20]\ncmp r0,#0x1\nbne 0x0001e216\nb 0x0001e338\nldr r0,[r5,#0x1c]\ncmp r0,#0x0\nbne 0x0001e21e\nb 0x0001e09a\nldr r1,[r5,#0x18]\npush { r0 }\npop { r2 }\npush { r6 }\npop { r3 }\n'
p1530
S'28 6a\n01 28\n00 d1\n90 e0\ne8 69\n00 28\n00 d1\n3d e7\na9 69\n01 b4\n04 bc\n40 b4\n08 bc\n'
p1531
S'.text:0001e20e\n.text:0001e210\n.text:0001e212\n.text:0001e214\n.text:0001e216\n.text:0001e218\n.text:0001e21a\n.text:0001e21c\n.text:0001e21e\n.text:0001e220\n.text:0001e222\n.text:0001e224\n.text:0001e226\n'
p1532
tp1533
sS'__aeabi_dcmplt'
p1534
(S'\n__stdcall __aeabi_dcmplt()\n'
p1535
V\u000avoid __aeabi_dcmplt(void)\u000a\u000a{\u000a  (*(__aeabi_memclr + DAT_00037d4c))();\u000a  return;\u000a}\u000a\u000a
p1536
S'ldr r12,[0x37d4c]\nadd pc,r12,pc\n'
p1537
S'00 c0 9f e5\n0f f0 8c e0\n'
p1538
S'.text:00037d44\n.text:00037d48\n'
p1539
tp1540
sS'id3tag_add_v2'
p1541
(S'\n__stdcall id3tag_add_v2()\n'
p1542
V\u000avoid id3tag_add_v2(int iParm1)\u000a\u000a{\u000a  *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001c9c0) =\u000a       *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001c9c0) & 0xfffffff9 | 2;\u000a  return;\u000a}\u000a\u000a
p1543
S'mov r1,#0x9\nlsl r1,r1,#0x5\nldr r0,[r0,r1]\nldr r1,[0x0001c9c0]\nldr r2,[r0,r1]\nmov r3,#0x6\nmvn r3,r3\nand r3,r2\nmov r2,#0x2\norr r2,r3\nstr r2,[r0,r1]\nbx lr\n'
p1544
S'09 21\n49 01\n40 58\n04 49\n42 58\n06 23\ndb 43\n13 40\n02 22\n1a 43\n42 50\n70 47\n'
p1545
S'.text:0001c9a8\n.text:0001c9aa\n.text:0001c9ac\n.text:0001c9ae\n.text:0001c9b0\n.text:0001c9b2\n.text:0001c9b4\n.text:0001c9b6\n.text:0001c9b8\n.text:0001c9ba\n.text:0001c9bc\n.text:0001c9be\n'
p1546
tp1547
sS'lame_get_VBR'
p1548
(S'\n__stdcall lame_get_VBR()\n'
p1549
V\u000avoid lame_get_VBR(void)\u000a\u000a{\u000a  (*(lame_set_VBR_q + DAT_0003820c))();\u000a  return;\u000a}\u000a\u000a
p1550
S'ldr r12,[0x3820c]\nadd pc,r12,pc\n'
p1551
S'00 c0 9f e5\n0f f0 8c e0\n'
p1552
S'.text:00038204\n.text:00038208\n'
p1553
tp1554
sS'Java_io_dcloud_feature_audio_mp3_SimpleLame_init'
p1555
(S'\n__stdcall Java_io_dcloud_feature_audio_mp3_SimpleLame_init(int0_t param_1, int0_t param_2)\n'
p1556
V\u000a/* Java_io_dcloud_feature_audio_mp3_SimpleLame_init(int0_t, int0_t) */\u000a\u000avoid Java_io_dcloud_feature_audio_mp3_SimpleLame_init(int0_t param_1,int0_t param_2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 in_r2;\u000a  undefined4 in_r3;\u000a  undefined4 *puVar2;\u000a  undefined4 in_stack_00000000;\u000a  undefined4 in_stack_00000004;\u000a  undefined4 in_stack_00000008;\u000a  \u000a  if (*(int *)(DAT_00016ef0 + 0x16e94) != 0) {\u000a    lame_close();\u000a    *(undefined4 *)(DAT_00016ef4 + 0x16eae) = 0;\u000a  }\u000a  uVar1 = lame_init();\u000a  puVar2 = (undefined4 *)(DAT_00016ef8 + 0x16eba);\u000a  *puVar2 = uVar1;\u000a  lame_set_in_samplerate(uVar1,in_r2);\u000a  lame_set_num_channels(*puVar2,in_r3);\u000a  lame_set_out_samplerate(*puVar2,in_stack_00000000);\u000a  lame_set_brate(*puVar2,in_stack_00000004);\u000a  lame_set_quality(*puVar2,in_stack_00000008);\u000a  lame_init_params(*puVar2);\u000a  return;\u000a}\u000a\u000a
p1557
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r3 }\npop { r6 }\npush { r2 }\npop { r5 }\nldr r0,[0x00016ef0]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r1,[sp,#0x28]\nstr r1,[sp,#0x8]\nldr r1,[sp,#0x24]\nstr r1,[sp,#0x4]\nldr r1,[sp,#0x20]\nstr r1,[sp,#0x0]\ncmp r0,#0x0\nbeq 0x00016eb0\nbl 0x000378e0\nldr r0,[0x00016ef4]\nadd r0,pc\nmov r1,#0x0\nstr r1,[r0,#0x0]\nbl 0x00037910\nldr r4,[0x00016ef8]\nadd r4,pc\nstr r0,[r4,#0x0]\npush { r5 }\npop { r1 }\nbl 0x00037920\nldr r0,[r4,#0x0]\npush { r6 }\npop { r1 }\nbl 0x00037930\nldr r0,[r4,#0x0]\nldr r1,[sp,#0x0]\nbl 0x00037940\nldr r0,[r4,#0x0]\nldr r1,[sp,#0x4]\nbl 0x00037950\nldr r0,[r4,#0x0]\nldr r1,[sp,#0x8]\nbl 0x00037960\n'
p1558
S'f0 b5\n03 af\n83 b0\n08 b4\n40 bc\n04 b4\n20 bc\n18 48\n78 44\n00 68\n0a 99\n02 91\n09 99\n01 91\n08 99\n00 91\n00 28\n05 d0\n20 f0 1c fd\n12 48\n78 44\n00 21\n01 60\n20 f0 2e fd\n10 4c\n7c 44\n20 60\n20 b4\n02 bc\n20 f0 2f fd\n20 68\n40 b4\n02 bc\n20 f0 32 fd\n20 68\n00 99\n20 f0 36 fd\n20 68\n01 99\n20 f0 3a fd\n20 68\n02 99\n20 f0 3e fd\n'
p1559
S'.text:00016e80\n.text:00016e82\n.text:00016e84\n.text:00016e86\n.text:00016e88\n.text:00016e8a\n.text:00016e8c\n.text:00016e8e\n.text:00016e90\n.text:00016e92\n.text:00016e94\n.text:00016e96\n.text:00016e98\n.text:00016e9a\n.text:00016e9c\n.text:00016e9e\n.text:00016ea0\n.text:00016ea2\n.text:00016ea4\n.text:00016ea8\n.text:00016eaa\n.text:00016eac\n.text:00016eae\n.text:00016eb0\n.text:00016eb4\n.text:00016eb6\n.text:00016eb8\n.text:00016eba\n.text:00016ebc\n.text:00016ebe\n.text:00016ec2\n.text:00016ec4\n.text:00016ec6\n.text:00016ec8\n.text:00016ecc\n.text:00016ece\n.text:00016ed0\n.text:00016ed4\n.text:00016ed6\n.text:00016ed8\n.text:00016edc\n.text:00016ede\n.text:00016ee0\n'
p1560
tp1561
sS'PutVbrTag'
p1562
(S'\n__stdcall PutVbrTag()\n'
p1563
V\u000avoid PutVbrTag(void)\u000a\u000a{\u000a  (*(init_log_table + DAT_0003809c))();\u000a  return;\u000a}\u000a\u000a
p1564
S'ldr r12,[0x3809c]\nadd pc,r12,pc\n'
p1565
S'00 c0 9f e5\n0f f0 8c e0\n'
p1566
S'.text:00038094\n.text:00038098\n'
p1567
tp1568
sS'lame_get_lowpasswidth'
p1569
(S'\n__stdcall lame_get_lowpasswidth(lame_global_flags * gfp)\n'
p1570
V\u000aint lame_get_lowpasswidth(lame_global_flags *gfp)\u000a\u000a{\u000a  ushort *in_r1;\u000a  int in_r2;\u000a  undefined uVar1;\u000a  uint in_r3;\u000a  int unaff_r4;\u000a  undefined *unaff_r5;\u000a  undefined uVar2;\u000a  uint unaff_r6;\u000a  int unaff_r7;\u000a  bool in_ZR;\u000a  int in_stack_00000000;\u000a  int in_stack_00000004;\u000a  uint in_stack_00000008;\u000a  \u000a  while( true ) {\u000a    uVar2 = (undefined)unaff_r6;\u000a    uVar1 = (char)in_r3;\u000a    if (in_ZR == false) {\u000a      uVar1 = uVar2;\u000a    }\u000a    unaff_r5[-1] = uVar1;\u000a    if (unaff_r7 != unaff_r4) {\u000a      uVar2 = (undefined)in_stack_00000008;\u000a    }\u000a    *unaff_r5 = uVar2;\u000a    unaff_r5 = unaff_r5 + 2;\u000a    in_r2 = in_r2 + 1;\u000a    in_r1 = in_r1 + 1;\u000a    if (in_r2 == 0) break;\u000a    unaff_r6 = (uint)*in_r1;\u000a    in_r3 = (uint)(*in_r1 >> 8);\u000a    in_ZR = unaff_r7 == DAT_0001ea54;\u000a    unaff_r4 = DAT_0001ea54;\u000a    in_stack_00000008 = in_r3;\u000a  }\u000a  return in_stack_00000004 + in_stack_00000000;\u000a}\u000a\u000a
p1571
S'beq 0x0001ea2e\npush { r6 }\npop { r3 }\nmov r0,#0x0\nmvn r0,r0\nstrb r3,[r5,r0]\ncmp r7,r4\nbeq 0x0001ea3a\nldr r6,[sp,#0x8]\nstrb r6,[r5,#0x0]\nadd r5,#0x2\nadd r2,#0x1\nadd r1,#0x2\ncmp r2,#0x0\n'
p1572
S'01 d0\n40 b4\n08 bc\n00 20\nc0 43\n2b 54\na7 42\n00 d0\n02 9e\n2e 70\n02 35\n01 32\n02 31\n00 2a\n'
p1573
S'.text:0001ea28\n.text:0001ea2a\n.text:0001ea2c\n.text:0001ea2e\n.text:0001ea30\n.text:0001ea32\n.text:0001ea34\n.text:0001ea36\n.text:0001ea38\n.text:0001ea3a\n.text:0001ea3c\n.text:0001ea3e\n.text:0001ea40\n.text:0001ea42\n'
p1574
tp1575
sS'InitGainAnalysis'
p1576
(S'\n__stdcall InitGainAnalysis()\n'
p1577
V\u000avoid InitGainAnalysis(void)\u000a\u000a{\u000a  (*(lame_msgf + DAT_00037e6c))();\u000a  return;\u000a}\u000a\u000a
p1578
S'ldr r12,[0x37e6c]\nadd pc,r12,pc\n'
p1579
S'00 c0 9f e5\n0f f0 8c e0\n'
p1580
S'.text:00037e64\n.text:00037e68\n'
p1581
tp1582
sS'lame_set_brate'
p1583
(S'\n__stdcall lame_set_brate()\n'
p1584
V\u000avoid lame_set_brate(void)\u000a\u000a{\u000a  (*(lame_set_quality + DAT_0003795c))();\u000a  return;\u000a}\u000a\u000a
p1585
S'ldr r12,[0x3795c]\nadd pc,r12,pc\n'
p1586
S'00 c0 9f e5\n0f f0 8c e0\n'
p1587
S'.text:00037954\n.text:00037958\n'
p1588
tp1589
sS'lame_get_size_mp3buffer'
p1590
(S'\n__stdcall lame_get_size_mp3buffer()\n'
p1591
V\u000aundefined4 lame_get_size_mp3buffer(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  undefined4 local_18;\u000a  int local_14;\u000a  \u000a  local_14 = **(int **)(DAT_0002f2cc + 0x2f280);\u000a  iVar1 = is_lame_global_flags_valid(iParm1);\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar3 = *(undefined4 *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(uVar3);\u000a    uVar2 = 0;\u000a    if (iVar1 != 0) {\u000a      compute_flushbits(uVar3,&local_18);\u000a      uVar2 = local_18;\u000a    }\u000a  }\u000a  if (**(int **)(DAT_0002f2d0 + 0x2f2b6) == local_14) {\u000a    return uVar2;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1592
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x8\npush { r0 }\npop { r5 }\nldr r0,[0x0002f2cc]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x4]\npush { r5 }\npop { r0 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f2b0\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f2b0\nmov r1,sp\npush { r5 }\npop { r0 }\nbl 0x000379a0\nldr r4,[sp,#0x0]\nldr r0,[0x0002f2d0]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0x4]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x0002f2c8\npush { r4 }\npop { r0 }\nadd sp,#0x8\npop { r4, r5, r7, pc }\nbl 0x000379b0\n'
p1593
S'b0 b5\n02 af\n82 b0\n01 b4\n20 bc\n14 48\n78 44\n00 68\n00 68\n01 90\n20 b4\n01 bc\n09 f0 d2 f8\n00 24\n00 28\n0e d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 d0 f8\n00 28\n05 d0\n69 46\n20 b4\n01 bc\n08 f0 79 fb\n00 9c\n07 48\n78 44\n00 68\n00 68\n01 99\n40 1a\n00 28\n03 d1\n10 b4\n01 bc\n02 b0\nb0 bd\n08 f0 72 fb\n'
p1594
S'.text:0002f270\n.text:0002f272\n.text:0002f274\n.text:0002f276\n.text:0002f278\n.text:0002f27a\n.text:0002f27c\n.text:0002f27e\n.text:0002f280\n.text:0002f282\n.text:0002f284\n.text:0002f286\n.text:0002f288\n.text:0002f28c\n.text:0002f28e\n.text:0002f290\n.text:0002f292\n.text:0002f294\n.text:0002f296\n.text:0002f298\n.text:0002f29a\n.text:0002f29c\n.text:0002f2a0\n.text:0002f2a2\n.text:0002f2a4\n.text:0002f2a6\n.text:0002f2a8\n.text:0002f2aa\n.text:0002f2ae\n.text:0002f2b0\n.text:0002f2b2\n.text:0002f2b4\n.text:0002f2b6\n.text:0002f2b8\n.text:0002f2ba\n.text:0002f2bc\n.text:0002f2be\n.text:0002f2c0\n.text:0002f2c2\n.text:0002f2c4\n.text:0002f2c6\n.text:0002f2c8\n'
p1595
tp1596
sS'scale_bitcount'
p1597
(S'\n__stdcall scale_bitcount()\n'
p1598
V\u000avoid scale_bitcount(void)\u000a\u000a{\u000a  (*(code *)(&UNK_000383f0 + DAT_000383ec))();\u000a  return;\u000a}\u000a\u000a
p1599
S'ldr r12,[0x383ec]\nadd pc,r12,pc\n'
p1600
S'00 c0 9f e5\n0f f0 8c e0\n'
p1601
S'.text:000383e4\n.text:000383e8\n'
p1602
tp1603
sS'writeUcs2s'
p1604
(S'\n__stdcall writeUcs2s()\n'
p1605
V\u000aundefined * writeUcs2s(undefined *puParm1,ushort *puParm2,int iParm3)\u000a\u000a{\u000a  ushort uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  undefined uVar4;\u000a  undefined uVar5;\u000a  undefined uVar6;\u000a  undefined *puVar7;\u000a  uint uVar8;\u000a  \u000a  uVar2 = DAT_0001ea54;\u000a  if (iParm3 != 0) {\u000a    uVar1 = *puParm2;\u000a    uVar8 = (uint)uVar1;\u000a    uVar4 = (undefined)(uVar1 >> 8);\u000a    uVar5 = uVar4;\u000a    if (uVar8 != DAT_0001ea54) {\u000a      uVar5 = (char)uVar1;\u000a    }\u000a    *puParm1 = uVar5;\u000a    uVar5 = (char)uVar1;\u000a    if (uVar8 != uVar2) {\u000a      uVar5 = uVar4;\u000a    }\u000a    puParm1[1] = uVar5;\u000a    if (iParm3 != 1) {\u000a      iVar3 = 1 - iParm3;\u000a      puVar7 = puParm1 + 3;\u000a      puParm2 = puParm2 + 1;\u000a      do {\u000a        uVar2 = DAT_0001ea54;\u000a        uVar4 = (undefined)*puParm2;\u000a        uVar6 = (undefined)(*puParm2 >> 8);\u000a        uVar5 = uVar6;\u000a        if (uVar8 != DAT_0001ea54) {\u000a          uVar5 = uVar4;\u000a        }\u000a        puVar7[-1] = uVar5;\u000a        if (uVar8 != uVar2) {\u000a          uVar4 = uVar6;\u000a        }\u000a        *puVar7 = uVar4;\u000a        puVar7 = puVar7 + 2;\u000a        iVar3 = iVar3 + 1;\u000a        puParm2 = puParm2 + 1;\u000a      } while (iVar3 != 0);\u000a    }\u000a    return puParm1 + iParm3 * 2;\u000a  }\u000a  return puParm1;\u000a}\u000a\u000a
p1606
S'cmp r2,#0x0\nbeq 0x0001ea50\npush { r4, r5, r6, r7, lr }\n'
p1607
S'00 2a\n35 d0\nf0 b5\n'
p1608
S'.text:0001e9e0\n.text:0001e9e2\n.text:0001e9e4\n'
p1609
tp1610
sS'ATHmdct'
p1611
(S'\n__stdcall ATHmdct(SessionConfig_t * cfg, FLOAT f)\n'
p1612
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000aFLOAT ATHmdct(SessionConfig_t *cfg,FLOAT f)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint unaff_r5;\u000a  byte *unaff_r6;\u000a  FLOAT extraout_s0;\u000a  FLOAT extraout_s0_00;\u000a  FLOAT extraout_s0_01;\u000a  FLOAT FVar4;\u000a  uint in_stack_00000004;\u000a  SessionConfig_t *in_stack_00000008;\u000a  uint in_stack_0000000c;\u000a  int in_stack_00000010;\u000a  uint uStack00000014;\u000a  SessionConfig_t *pSStack00000018;\u000a  int in_stack_0000001c;\u000a  uint in_stack_00000020;\u000a  int in_stack_00000028;\u000a  \u000a  do {\u000a    pSStack00000018 = cfg;\u000a    unaff_r6 = (byte *)nextUpperAlpha(f,unaff_r6,in_stack_00000020 & unaff_r5);\u000a    uStack00000014 = (uint)*(ushort *)(in_stack_00000010 + (uint)*(byte *)&cfg->version * 2);\u000a    uVar3 = (uint)*unaff_r6;\u000a    in_stack_00000020 = (uint)*(ushort *)(in_stack_00000010 + uVar3 * 2);\u000a    uVar2 = uStack00000014 & unaff_r5;\u000a    FVar4 = extraout_s0_01;\u000a    if ((uStack00000014 & unaff_r5) != (in_stack_00000020 & unaff_r5)) {\u000a      do {\u000a        iVar1 = -2;\u000a        in_stack_0000001c = in_stack_0000001c + 1;\u000a        if (0x93 < in_stack_0000001c) goto LAB_0001db08;\u000a        unaff_r6 = (byte *)nextUpperAlpha(*(undefined4 *)\u000a                                           (iRam0001db30 + 0x1da66 + in_stack_0000001c * 4),0);\u000a        uVar3 = (uint)*unaff_r6;\u000a        in_stack_00000020 = (uint)*(ushort *)(in_stack_00000010 + uVar3 * 2);\u000a        FVar4 = extraout_s0;\u000a      } while (in_stack_0000000c != (in_stack_00000020 & unaff_r5));\u000a      uStack00000014 = in_stack_00000004;\u000a      pSStack00000018 = in_stack_00000008;\u000a      uVar2 = in_stack_0000000c;\u000a      FVar4 = extraout_s0;\u000a    }\u000a    if (uVar2 == 0) {\u000a      iVar1 = -2;\u000a      if (in_stack_0000001c != 0x94) {\u000a        iVar1 = in_stack_0000001c;\u000a      }\u000aLAB_0001db08:\u000a      if (**(int **)(_ResvFrameBegin + 0x1db0e) != in_stack_00000028) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __stack_chk_fail(iVar1);\u000a      }\u000a      return FVar4;\u000a    }\u000a    if (((uVar3 & unaff_r5) != 0) && (*(char *)((int)&pSStack00000018->version + 1) == '.')) {\u000a      do {\u000a        unaff_r6 = unaff_r6 + 1;\u000a        if ((uVar3 & unaff_r5) == 0x20) break;\u000a        uVar3 = (uint)*unaff_r6;\u000a      } while (*unaff_r6 != 0);\u000a    }\u000a    cfg = (SessionConfig_t *)nextUpperAlpha(pSStack00000018,uStack00000014 & unaff_r5);\u000a    f = extraout_s0_00;\u000a  } while( true );\u000a}\u000a\u000a
p1613
S'push { r0 }\npop { r4 }\nstr r4,[sp,#0x18]\nldr r1,[sp,#0x20]\nand r1,r5\npush { r6 }\npop { r0 }\nbl 0x0001e9ac\npush { r0 }\npop { r6 }\nldrb r0,[r4,#0x0]\nlsl r0,r0,#0x1\nldr r1,[sp,#0x10]\nldrh r2,[r1,r0]\nstr r2,[sp,#0x14]\nand r2,r5\nldrb r4,[r6,#0x0]\nlsl r3,r4,#0x1\nldrh r3,[r1,r3]\nstr r3,[sp,#0x20]\nand r3,r5\ncmp r2,r3\nbeq 0x0001da8c\n'
p1614
S'01 b4\n10 bc\n06 94\n08 99\n29 40\n40 b4\n01 bc\n00 f0 6f ff\n01 b4\n40 bc\n20 78\n40 00\n04 99\n0a 5a\n05 92\n2a 40\n34 78\n63 00\ncb 5a\n08 93\n2b 40\n9a 42\ncf d0\n'
p1615
S'.text:0001dabc\n.text:0001dabe\n.text:0001dac0\n.text:0001dac2\n.text:0001dac4\n.text:0001dac6\n.text:0001dac8\n.text:0001daca\n.text:0001dace\n.text:0001dad0\n.text:0001dad2\n.text:0001dad4\n.text:0001dad6\n.text:0001dad8\n.text:0001dada\n.text:0001dadc\n.text:0001dade\n.text:0001dae0\n.text:0001dae2\n.text:0001dae4\n.text:0001dae6\n.text:0001dae8\n.text:0001daea\n'
p1616
tp1617
sS'lame_get_quant_comp'
p1618
(S'\n__stdcall lame_get_quant_comp()\n'
p1619
V\u000avoid lame_get_quant_comp(void)\u000a\u000a{\u000a  (*(lame_set_quant_comp + DAT_00037eec))();\u000a  return;\u000a}\u000a\u000a
p1620
S'ldr r12,[0x37eec]\nadd pc,r12,pc\n'
p1621
S'00 c0 9f e5\n0f f0 8c e0\n'
p1622
S'.text:00037ee4\n.text:00037ee8\n'
p1623
tp1624
sS'get_lame_os_bitness'
p1625
(S'\n__stdcall get_lame_os_bitness()\n'
p1626
V\u000avoid get_lame_os_bitness(void)\u000a\u000a{\u000a  (*(get_lame_version + DAT_00037c5c))();\u000a  return;\u000a}\u000a\u000a
p1627
S'ldr r12,[0x37c5c]\nadd pc,r12,pc\n'
p1628
S'00 c0 9f e5\n0f f0 8c e0\n'
p1629
S'.text:00037c54\n.text:00037c58\n'
p1630
tp1631
sS'lame_set_experimentalX'
p1632
(S'\n__stdcall lame_set_experimentalX(lame_global_flags * gfp, int experimentalX)\n'
p1633
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000aint lame_set_experimentalX(lame_global_flags *gfp,int experimentalX)\u000a\u000a{\u000a  char cVar1;\u000a  int iVar2;\u000a  char *pcVar3;\u000a  char *pcVar4;\u000a  int *piVar5;\u000a  int iVar6;\u000a  uint in_r2;\u000a  uint uVar7;\u000a  char *pcVar8;\u000a  int in_r3;\u000a  int iVar9;\u000a  int iVar10;\u000a  char *pcVar11;\u000a  int iStack00000018;\u000a  \u000a  iStack00000018 = *(int *)gfp[0x198].tune;\u000a  iVar2 = 0;\u000a  if (in_r3 != 0) {\u000a    if (in_r2 < 0x80) {\u000a      iVar2 = 0x80;\u000a    }\u000a    else {\u000a      if (((experimentalX != 0) && (iVar9 = *(int *)(in_r3 + 0x120), iVar9 != 0)) &&\u000a         (uVar7 = *(uint *)(iVar9 + DAT_0001e760), (uVar7 & 9) == 1)) {\u000a        *(undefined *)experimentalX = 0x54;\u000a        *(undefined *)(experimentalX + 1) = 0x41;\u000a        *(undefined *)(experimentalX + 2) = 0x47;\u000a        pcVar3 = *(char **)(iVar9 + DAT_0001e764);\u000a        pcVar4 = (char *)(experimentalX + 3);\u000a        iVar2 = 0x1e;\u000a        do {\u000a          iVar10 = 0;\u000a          while ((cVar1 = (char)((uVar7 & 0x10) << 1), pcVar3 == (char *)0x0 || (*pcVar3 == 0))) {\u000a            pcVar4[-iVar10] = cVar1;\u000a            iVar10 = iVar10 + -1;\u000a            if (-iVar10 == iVar2) {\u000a              pcVar4 = pcVar4 + -iVar10;\u000a              goto LAB_0001e604;\u000a            }\u000a          }\u000a          pcVar11 = pcVar4 + -iVar10;\u000a          *pcVar11 = *pcVar3;\u000a          pcVar4 = pcVar11 + 1;\u000a          iVar2 = iVar2 + iVar10 + -1;\u000a          pcVar3 = pcVar3 + 1;\u000a        } while (iVar2 != 0);\u000a        pcVar4 = pcVar11 + 1;\u000aLAB_0001e604:\u000a        pcVar3 = *(char **)(iVar9 + DAT_0001e768);\u000a        iVar2 = 0x1e;\u000a        do {\u000a          iVar10 = 0;\u000a          while ((pcVar3 == (char *)0x0 || (*pcVar3 == 0))) {\u000a            pcVar4[-iVar10] = cVar1;\u000a            iVar10 = iVar10 + -1;\u000a            if (-iVar10 == iVar2) {\u000a              pcVar4 = pcVar4 + -iVar10;\u000a              goto LAB_0001e63c;\u000a            }\u000a          }\u000a          pcVar11 = pcVar4 + -iVar10;\u000a          *pcVar11 = *pcVar3;\u000a          pcVar4 = pcVar11 + 1;\u000a          iVar2 = iVar2 + iVar10 + -1;\u000a          pcVar3 = pcVar3 + 1;\u000a        } while (iVar2 != 0);\u000a        pcVar4 = pcVar11 + 1;\u000aLAB_0001e63c:\u000a        pcVar3 = *(char **)(iVar9 + _DAT_0001e76c);\u000a        iVar2 = 0x1e;\u000a        do {\u000a          iVar10 = 0;\u000a          while ((pcVar3 == (char *)0x0 || (*pcVar3 == 0))) {\u000a            pcVar4[-iVar10] = cVar1;\u000a            iVar10 = iVar10 + -1;\u000a            if (-iVar10 == iVar2) {\u000a              pcVar4 = pcVar4 + -iVar10;\u000a              goto LAB_0001e674;\u000a            }\u000a          }\u000a          pcVar11 = pcVar4 + -iVar10;\u000a          *pcVar11 = *pcVar3;\u000a          pcVar4 = pcVar11 + 1;\u000a          iVar2 = iVar2 + iVar10 + -1;\u000a          pcVar3 = pcVar3 + 1;\u000a        } while (iVar2 != 0);\u000a        pcVar4 = pcVar11 + 1;\u000aLAB_0001e674:\u000a        iVar2 = iRam0001e770;\u000a        sprintf(&stack0x00000010,(char *)(iRam0001e774 + 0x1e684),\u000a                *(undefined4 *)(iVar9 + iRam0001e770));\u000a        pcVar3 = &stack0x00000010;\u000a        if (*(char **)(iVar9 + iVar2) == (char *)0x0) {\u000a          pcVar3 = *(char **)(iVar9 + iVar2);\u000a        }\u000a        iVar2 = 4;\u000a        do {\u000a          iVar10 = 0;\u000a          while ((pcVar3 == (char *)0x0 || (*pcVar3 == 0))) {\u000a            pcVar4[-iVar10] = cVar1;\u000a            iVar10 = iVar10 + -1;\u000a            if (-iVar10 == iVar2) {\u000a              iVar2 = 0x1c;\u000a              if (*(int *)(iVar9 + iRam0001e778) == 0) {\u000a                iVar2 = 0x1e;\u000a              }\u000a              piVar5 = (int *)(iVar9 + iRam0001e778);\u000a              pcVar11 = *(char **)(iVar9 + iRam0001e77c);\u000a              pcVar3 = pcVar4 + -iVar10;\u000a              goto LAB_0001e6e4;\u000a            }\u000a          }\u000a          pcVar4[-iVar10] = *pcVar3;\u000a          pcVar4 = pcVar4 + -iVar10 + 1;\u000a          iVar2 = iVar2 + iVar10 + -1;\u000a          pcVar3 = pcVar3 + 1;\u000a          if (iVar2 == 0) {\u000a            iVar2 = lame_get_experimentalZ((lame_global_flags *)0x0);\u000a            return iVar2;\u000a          }\u000a        } while( true );\u000a      }\u000a    }\u000a  }\u000a  goto LAB_0001e742;\u000aLAB_0001e6e4:\u000a  do {\u000a    pcVar4 = pcVar3;\u000a    iVar10 = 0;\u000a    while ((iVar6 = iVar10, pcVar11 == (char *)0x0 || (*pcVar11 == 0))) {\u000a      pcVar4[-iVar6] = cVar1;\u000a      iVar10 = iVar6 + -1;\u000a      if (-iVar10 == iVar2) {\u000a        pcVar8 = pcVar4 + -iVar10;\u000a        goto LAB_0001e720;\u000a      }\u000a    }\u000a    pcVar8 = pcVar4 + -iVar6;\u000a    *pcVar8 = *pcVar11;\u000a    iVar2 = iVar2 + iVar6 + -1;\u000a    pcVar11 = pcVar11 + 1;\u000a    pcVar3 = pcVar8 + 1;\u000a  } while (iVar2 != 0);\u000a  pcVar8 = pcVar8 + 1;\u000aLAB_0001e720:\u000a  if (*piVar5 != 0) {\u000a    *pcVar8 = 0;\u000a    (pcVar4 + -iVar6)[2] = (char)*piVar5;\u000a    pcVar8 = pcVar4 + -iVar6 + 3;\u000a  }\u000a  *pcVar8 = (char)*(undefined4 *)(iVar9 + iRam0001e780);\u000a  iVar2 = 0x80;\u000aLAB_0001e742:\u000a  if (**(int **)(iRam0001e784 + 0x1e748) != iStack00000018) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1634
S'add r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x18]\nmov r0,#0x0\ncmp r3,#0x0\nbne 0x0001e58c\nb 0x0001e742\nmov r5,#0x80\ncmp r2,#0x80\nbcs 0x0001e598\npush { r5 }\npop { r0 }\nb 0x0001e742\nmov r4,#0x9\nlsl r2,r4,#0x5\ncmp r1,#0x0\nbne 0x0001e5a2\nb 0x0001e742\nldr r3,[r3,r2]\ncmp r3,#0x0\nbne 0x0001e5aa\nb 0x0001e742\nldr r2,[0x0001e760]\nldr r2,[r3,r2]\nand r4,r2\ncmp r4,#0x1\nbeq 0x0001e5b6\nb 0x0001e742\nstr r5,[sp,#0x8]\nmov r0,#0x54\nstrb r0,[r1,#0x0]\nmov r0,#0x41\nstrb r0,[r1,#0x1]\nmov r0,#0x47\n'
p1635
S'78 44\n00 68\n00 68\n06 90\n00 20\n00 2b\n00 d1\nda e0\n80 25\n80 2a\n02 d2\n20 b4\n01 bc\nd4 e0\n09 24\n62 01\n00 29\n00 d1\ncf e0\n9b 58\n00 2b\n00 d1\ncb e0\n6d 4a\n9a 58\n14 40\n01 2c\n00 d0\nc5 e0\n02 95\n54 20\n08 70\n41 20\n48 70\n47 20\n'
p1636
S'.text:0001e57c\n.text:0001e57e\n.text:0001e580\n.text:0001e582\n.text:0001e584\n.text:0001e586\n.text:0001e588\n.text:0001e58a\n.text:0001e58c\n.text:0001e58e\n.text:0001e590\n.text:0001e592\n.text:0001e594\n.text:0001e596\n.text:0001e598\n.text:0001e59a\n.text:0001e59c\n.text:0001e59e\n.text:0001e5a0\n.text:0001e5a2\n.text:0001e5a4\n.text:0001e5a6\n.text:0001e5a8\n.text:0001e5aa\n.text:0001e5ac\n.text:0001e5ae\n.text:0001e5b0\n.text:0001e5b2\n.text:0001e5b4\n.text:0001e5b6\n.text:0001e5b8\n.text:0001e5ba\n.text:0001e5bc\n.text:0001e5be\n.text:0001e5c0\n'
p1637
tp1638
sS'lame_get_out_samplerate'
p1639
(S'\n__stdcall lame_get_out_samplerate(lame_global_flags * gfp)\n'
p1640
V\u000aint lame_get_out_samplerate(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar7;\u000a  lame_global_flags *plVar8;\u000a  undefined *puVar9;\u000a  int unaff_r4;\u000a  undefined4 *puVar10;\u000a  int unaff_r5;\u000a  uint uVar11;\u000a  lame_global_flags *plVar12;\u000a  undefined4 unaff_r6;\u000a  uint uVar13;\u000a  undefined *puVar14;\u000a  undefined *puStack00000000;\u000a  int *piStack00000004;\u000a  undefined4 *puStack00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint in_stack_0000002c;\u000a  lame_global_flags *plStack00000030;\u000a  \u000a  puStack00000000 = &stack0x00000038;\u000a  plStack00000030 = gfp;\u000a  id3v2_add_latin1(unaff_r6,DAT_0001e1c0,DAT_0001e1c4 + 0x1df24,0);\u000a  *(lame_global_flags **)(unaff_r4 + unaff_r5) = plStack00000030;\u000a  piStack00000004 = (int *)(in_stack_0000001c + DAT_0001e1c8);\u000a  if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a      (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a     (uVar1 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar1 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar1 * 4));\u000a  }\u000a  puVar10 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a  puStack00000008 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a  while (puVar10 != (undefined4 *)0x0) {\u000a    uVar1 = puVar10[1];\u000a    uVar13 = 0xff;\u000a    plStack00000030 = (lame_global_flags *)0x0;\u000a    if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 == DAT_0001e1e0)) {\u000a      iVar2 = puVar10[4] * 2 + 0x10;\u000a      if (puVar10[5] != 1) {\u000a        iVar2 = puVar10[4] + 0xf;\u000a      }\u000a      iVar3 = puVar10[7];\u000a      if (puVar10[8] == 1) {\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      iVar2 = iVar2 + iVar3;\u000a    }\u000a    else {\u000a      do {\u000a        uVar11 = uVar13 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar11 != (uVar13 & uVar1)) {\u000a          uVar6 = uVar13 & uVar1;\u000a        }\u000a        if (uVar11 == 0) {\u000a          uVar6 = uVar11;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar2 = iVar2 + -1;\u000a        uVar13 = uVar13 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar2 = sizeOfWxxxNode(puVar10);\u000a      }\u000a      else {\u000a        iVar3 = puVar10[7];\u000a        iVar4 = puVar10[4];\u000a        if (puVar10[8] == 1) {\u000a          iVar2 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar2 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a        }\u000a        iVar2 = iVar2 + iVar3;\u000a      }\u000a    }\u000a    in_stack_0000002c = iVar2 + in_stack_0000002c;\u000a    puVar10 = (undefined4 *)*puVar10;\u000a  }\u000a  if ((*in_stack_00000010 & 0x20) != 0) {\u000a    in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a  }\u000a  uVar1 = in_stack_0000002c;\u000a  if ((in_stack_0000002c <= in_stack_00000014) && (uVar1 = 0, in_stack_00000018 != (undefined *)0x0)\u000a     ) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    plStack00000030 = (lame_global_flags *)0x0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar1 = in_stack_0000002c - 10;\u000a    in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a    puVar14 = in_stack_00000018 + 10;\u000a    puVar10 = (undefined4 *)*puStack00000008;\u000a    while (puVar10 != (undefined4 *)0x0) {\u000a      uVar1 = puVar10[1];\u000a      uVar13 = 0xff;\u000a      iVar2 = 4;\u000a      if ((uVar1 == DAT_0001e494) || (gfp_00 = plStack00000030, uVar1 == DAT_0001e498)) {\u000a        iVar2 = puVar10[4] * 2 + 0x10;\u000a        if (puVar10[5] != 1) {\u000a          iVar2 = puVar10[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (puVar10[8] == 1) {\u000a          iVar3 = puVar10[8];\u000a        }\u000a        uVar13 = (puVar10[7] << iVar3) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar13) {\u000a          do {\u000a            puVar14[iVar2 + -1] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar13 = uVar13 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar14[iVar2 + 3] = (char)uVar13;\u000a            iVar2 = iVar2 + -1;\u000a            uVar13 = uVar13 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar14[8] = 0;\u000a          puVar14[9] = 0;\u000a          *(bool *)(puVar14 + 10) = puVar10[8] == 1;\u000a          puVar14[0xb] = *(undefined *)(puVar10 + 2);\u000a          puVar14[0xc] = *(undefined *)((int)puVar10 + 9);\u000a          puVar14[0xd] = *(undefined *)((int)puVar10 + 10);\u000a          puVar14 = puVar14 + 0xe;\u000a          if (puVar10[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar14,puVar10[3],puVar10[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = puVar10[4];\u000a          if (iVar2 != 0) {\u000a            puVar5 = (undefined *)puVar10[3];\u000a            iVar3 = iVar2;\u000a            puVar9 = puVar14;\u000a            do {\u000a              *puVar9 = *puVar5;\u000a              puVar9 = puVar9 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar14 = puVar14 + iVar2;\u000a          }\u000a          *puVar14 = 0;\u000a          puVar14 = puVar14 + 1;\u000a          if (puVar10[8] == 1) {\u000aLAB_0001e338:\u000a            puVar14 = (undefined *)writeUcs2s(puVar14,puVar10[6],puVar10[7]);\u000a          }\u000a          else {\u000a            iVar2 = puVar10[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar10[6];\u000a              iVar3 = iVar2;\u000a              puVar9 = puVar14;\u000a              do {\u000a                *puVar9 = *puVar5;\u000a                puVar9 = puVar9 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              puVar14 = puVar14 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          plVar8 = (lame_global_flags *)(uVar13 & 0x57000000);\u000a          plVar12 = plStack00000030;\u000a          if (plVar8 != (lame_global_flags *)(uVar13 & uVar1)) {\u000a            plVar12 = (lame_global_flags *)(uVar13 & uVar1);\u000a          }\u000a          if (plVar8 == (lame_global_flags *)0x0) {\u000a            plVar12 = plVar8;\u000a          }\u000a          gfp_00 = (lame_global_flags *)((uint)gfp_00 | (uint)plVar12);\u000a          iVar2 = iVar2 + -1;\u000a          uVar13 = uVar13 << 8;\u000a        } while (iVar2 != 0);\u000a        if (gfp_00 == (lame_global_flags *)0x0) {\u000a          uVar13 = sizeOfWxxxNode(puVar10);\u000a          iVar2 = 4;\u000a          if (10 < uVar13) {\u000a            do {\u000a              puVar14[iVar2 + -1] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar13 = uVar13 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar14[iVar2 + 3] = (char)uVar13;\u000a              iVar2 = iVar2 + -1;\u000a              uVar13 = uVar13 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar14[8] = 0;\u000a            puVar14[9] = 0;\u000a            puVar9 = puVar14 + 10;\u000a            if (puVar10[4] != 0) {\u000a              *(bool *)(puVar14 + 10) = puVar10[5] == 1;\u000a              puVar14 = puVar14 + 0xb;\u000a              if (puVar10[5] == 1) {\u000a                puVar9 = (undefined *)writeUcs2s(puVar14,puVar10[3],puVar10[4]);\u000a                *puVar9 = 0;\u000a                puVar9[1] = 0;\u000a                puVar9 = puVar9 + 2;\u000a              }\u000a              else {\u000a                iVar2 = puVar10[4];\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar10[3];\u000a                  iVar3 = iVar2;\u000a                  puVar9 = puVar14;\u000a                  do {\u000a                    *puVar9 = *puVar5;\u000a                    puVar9 = puVar9 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar14 = puVar14 + iVar2;\u000a                }\u000a                *puVar14 = 0;\u000a                puVar9 = puVar14 + 1;\u000a              }\u000a            }\u000a            if (puVar10[8] == 1) {\u000a              puVar14 = (undefined *)writeLoBytes(puVar9,puVar10[6],puVar10[7]);\u000a            }\u000a            else {\u000a              iVar2 = puVar10[7];\u000a              puVar14 = puVar9;\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar10[6];\u000a                iVar3 = iVar2;\u000a                puVar14 = puVar9;\u000a                do {\u000a                  *puVar14 = *puVar5;\u000a                  puVar14 = puVar14 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar14 = puVar9 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar2 = puVar10[7];\u000a          iVar3 = puVar10[4];\u000a          if (puVar10[8] == 1) {\u000a            iVar4 = iVar3 * 2 + 0xd;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a            iVar2 = iVar2 << 1;\u000a          }\u000a          else {\u000a            iVar4 = iVar3 + 0xc;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a          }\u000a          iVar3 = 4;\u000a          if (10 < (uint)(iVar4 + iVar2)) {\u000a            do {\u000a              puVar14[iVar3 + -1] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar1 = (iVar4 + iVar2) - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar14[iVar2 + 3] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar14[8] = 0;\u000a            puVar14[9] = 0;\u000a            *(bool *)(puVar14 + 10) = puVar10[8] == 1;\u000a            puVar14 = puVar14 + 0xb;\u000a            iVar2 = puVar10[4];\u000a            if (iVar2 != 0) {\u000a              if (puVar10[5] == 1) {\u000a                puVar14 = (undefined *)writeUcs2s(puVar14,puVar10[3]);\u000a                *puVar14 = 0;\u000a                puVar14[1] = 0;\u000a                puVar14 = puVar14 + 2;\u000a              }\u000a              else {\u000a                puVar5 = (undefined *)puVar10[3];\u000a                iVar3 = iVar2;\u000a                puVar9 = puVar14;\u000a                do {\u000a                  *puVar9 = *puVar5;\u000a                  puVar9 = puVar9 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar14[iVar2] = 0;\u000a                puVar14 = puVar14 + iVar2 + 1;\u000a              }\u000a            }\u000a            if (puVar10[8] == 1) goto LAB_0001e338;\u000a            iVar2 = puVar10[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar10[6];\u000a              iVar3 = iVar2;\u000a              puVar9 = puVar14;\u000a              do {\u000a                *puVar9 = *puVar5;\u000a                puVar9 = puVar9 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar10 = (undefined4 *)*puVar10;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar3 = *(int *)(in_stack_0000001c + lame_get_error_protection);\u000a      iVar2 = 4;\u000a      if ((*piStack00000004 != 0) && (uVar1 = DAT_0001e49c, iVar3 != 0)) {\u000a        do {\u000a          puVar14[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a        plStack00000030 = (lame_global_flags *)iVar3;\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar14,in_stack_00000018 + (in_stack_0000002c - (int)puVar14));\u000a    uVar1 = in_stack_0000002c;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return uVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1641
S'str r0,[sp,#0x30]\nadd r0,sp,#0x38\nmov r1,sp\nstr r0,[r1,#0x0]\nldr r1,[0x0001e1c0]\nldr r2,[0x0001e1c4]\nadd r2,pc\nmov r3,#0x0\npush { r6 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x30]\n'
p1642
S'0c 90\n0e a8\n69 46\n08 60\na8 49\na9 4a\n7a 44\n00 23\n40 b4\n01 bc\nff f7 42 fa\n0c 98\n'
p1643
S'.text:0001df14\n.text:0001df16\n.text:0001df18\n.text:0001df1a\n.text:0001df1c\n.text:0001df1e\n.text:0001df20\n.text:0001df22\n.text:0001df24\n.text:0001df26\n.text:0001df28\n.text:0001df2c\n'
p1644
tp1645
sS'lame_set_experimentalZ'
p1646
(S'\n__stdcall lame_set_experimentalZ(lame_global_flags * gfp, int experimentalZ)\n'
p1647
V\u000aint lame_set_experimentalZ(lame_global_flags *gfp,int experimentalZ)\u000a\u000a{\u000a  char *pcVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int in_r2;\u000a  int iVar4;\u000a  char *pcVar5;\u000a  uint in_r3;\u000a  byte *unaff_r4;\u000a  char *pcVar6;\u000a  char unaff_r5;\u000a  undefined *unaff_r6;\u000a  char *pcVar7;\u000a  int *piStack00000004;\u000a  int in_stack_00000008;\u000a  int in_stack_0000000c;\u000a  int in_stack_00000018;\u000a  \u000a  do {\u000a    if (in_r3 != 0) {\u000a      unaff_r6[-experimentalZ] = (char)in_r3;\u000a      unaff_r6 = unaff_r6 + -experimentalZ + 1;\u000a      gfp = (lame_global_flags *)((int)&gfp->attackthre_s + experimentalZ + 3);\u000a      unaff_r4 = unaff_r4 + 1;\u000a      if (gfp == (lame_global_flags *)0x0) {\u000a        iVar4 = lame_get_experimentalZ((lame_global_flags *)0x0);\u000a        return iVar4;\u000a      }\u000a      in_r2 = -(int)gfp;\u000a      experimentalZ = 0;\u000a      goto LAB_0001e69e;\u000a    }\u000a    do {\u000a      unaff_r6[-experimentalZ] = unaff_r5;\u000a      experimentalZ = experimentalZ + -1;\u000a      if (in_r2 == experimentalZ) {\u000a        iVar4 = 0x1c;\u000a        if (*(int *)(in_stack_0000000c + iRam0001e778) == 0) {\u000a          iVar4 = 0x1e;\u000a        }\u000a        piStack00000004 = (int *)(in_stack_0000000c + iRam0001e778);\u000a        pcVar6 = *(char **)(in_stack_0000000c + iRam0001e77c);\u000a        pcVar1 = unaff_r6 + -experimentalZ;\u000a        goto LAB_0001e6e4;\u000a      }\u000aLAB_0001e69e:\u000a    } while (unaff_r4 == (byte *)0x0);\u000a    in_r3 = (uint)*unaff_r4;\u000a  } while( true );\u000aLAB_0001e6e4:\u000a  pcVar7 = pcVar1;\u000a  iVar3 = 0;\u000a  while( true ) {\u000a    iVar2 = iVar3;\u000a    if ((pcVar6 != (char *)0x0) && (*pcVar6 != 0)) break;\u000a    pcVar7[-iVar2] = unaff_r5;\u000a    iVar3 = iVar2 + -1;\u000a    if (-iVar3 == iVar4) {\u000a      pcVar5 = pcVar7 + -iVar3;\u000a      goto LAB_0001e720;\u000a    }\u000a  }\u000a  pcVar5 = pcVar7 + -iVar2;\u000a  *pcVar5 = *pcVar6;\u000a  iVar4 = iVar4 + iVar2 + -1;\u000a  pcVar6 = pcVar6 + 1;\u000a  pcVar1 = pcVar5 + 1;\u000a  if (iVar4 == 0) {\u000a    pcVar5 = pcVar5 + 1;\u000aLAB_0001e720:\u000a    if (*piStack00000004 != 0) {\u000a      *pcVar5 = 0;\u000a      (pcVar7 + -iVar2)[2] = (char)*piStack00000004;\u000a      pcVar5 = pcVar7 + -iVar2 + 3;\u000a    }\u000a    *pcVar5 = (char)*(undefined4 *)(in_stack_0000000c + iRam0001e780);\u000a    if (**(int **)(iRam0001e784 + 0x1e748) == in_stack_00000018) {\u000a      return in_stack_00000008;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  goto LAB_0001e6e4;\u000a}\u000a\u000a
p1648
S'cmp r3,#0x0\nbne 0x0001e6b4\nsub r3,r6,r1\nstrb r5,[r3,#0x0]\nsub r1,#0x1\ncmp r2,r1\nbne 0x0001e69e\nb 0x0001e6c8\nsub r2,r6,r1\nstrb r3,[r2,#0x0]\nadd r6,r2,#0x1\nadd r0,r0,r1\nsub r0,#0x1\nadd r4,#0x1\ncmp r0,#0x0\nbne 0x0001e69a\nadd r6,r2,#0x1\nb 0x0001e6ca\nsub r6,r6,r1\n'
p1649
S'00 2b\n05 d1\n73 1a\n1d 70\n01 39\n8a 42\nf5 d1\n09 e0\n72 1a\n13 70\n56 1c\n40 18\n01 38\n01 34\n00 28\nea d1\n56 1c\n00 e0\n76 1a\n'
p1650
S'.text:0001e6a4\n.text:0001e6a6\n.text:0001e6a8\n.text:0001e6aa\n.text:0001e6ac\n.text:0001e6ae\n.text:0001e6b0\n.text:0001e6b2\n.text:0001e6b4\n.text:0001e6b6\n.text:0001e6b8\n.text:0001e6ba\n.text:0001e6bc\n.text:0001e6be\n.text:0001e6c0\n.text:0001e6c2\n.text:0001e6c4\n.text:0001e6c6\n.text:0001e6c8\n'
p1651
tp1652
sS'id3tag_set_textinfo_utf16'
p1653
(S'\n__stdcall id3tag_set_textinfo_utf16()\n'
p1654
V\u000avoid id3tag_set_textinfo_utf16(void)\u000a\u000a{\u000a  (*(id3tag_set_genre + DAT_00037ccc))();\u000a  return;\u000a}\u000a\u000a
p1655
S'ldr r12,[0x37ccc]\nadd pc,r12,pc\n'
p1656
S'00 c0 9f e5\n0f f0 8c e0\n'
p1657
S'.text:00037cc4\n.text:00037cc8\n'
p1658
tp1659
sS'lame_set_experimentalY'
p1660
(S'\n__stdcall lame_set_experimentalY()\n'
p1661
V\u000aundefined4 lame_set_experimentalY(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0x8c) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1662
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\n'
p1663
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 df fe\n01 b4\n'
p1664
S'.text:0002e662\n.text:0002e664\n.text:0002e666\n.text:0002e668\n.text:0002e66a\n.text:0002e66c\n.text:0002e66e\n.text:0002e672\n'
p1665
tp1666
sS'ResvFrameBegin'
p1667
(S'\n__stdcall ResvFrameBegin()\n'
p1668
V\u000avoid ResvFrameBegin(void)\u000a\u000a{\u000a  (*(on_pe + DAT_000382ec))();\u000a  return;\u000a}\u000a\u000a
p1669
S'ldr r12,[0x382ec]\nadd pc,r12,pc\n'
p1670
S'00 c0 9f e5\n0f f0 8c e0\n'
p1671
S'.text:000382e4\n.text:000382e8\n'
p1672
tp1673
sS'lame_encode_finish'
p1674
(S'\n__stdcall lame_encode_finish()\n'
p1675
V\u000aundefined4 lame_encode_finish(undefined4 uParm1)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  \u000a  uVar1 = lame_encode_flush();\u000a  lame_close(uParm1);\u000a  return uVar1;\u000a}\u000a\u000a
p1676
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00037900\npush { r0 }\npop { r5 }\npush { r4 }\npop { r0 }\nbl 0x000378e0\npush { r5 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p1677
S'b0 b5\n02 af\n01 b4\n10 bc\n16 f0 ec f8\n01 b4\n20 bc\n10 b4\n01 bc\n16 f0 d6 f8\n20 b4\n01 bc\nb0 bd\n'
p1678
S'.text:0002171c\n.text:0002171e\n.text:00021720\n.text:00021722\n.text:00021724\n.text:00021728\n.text:0002172a\n.text:0002172c\n.text:0002172e\n.text:00021730\n.text:00021734\n.text:00021736\n.text:00021738\n'
p1679
tp1680
sS'lame_get_maskingadjust_short'
p1681
(S'\n__stdcall lame_get_maskingadjust_short(lame_global_flags * gfp)\n'
p1682
V\u000a/* WARNING: Control flow encountered bad instruction data */\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000afloat lame_get_maskingadjust_short(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  undefined4 uVar6;\u000a  uint in_r1;\u000a  code *pcVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int unaff_r4;\u000a  int unaff_r5;\u000a  uint unaff_r8;\u000a  undefined4 in_cr0;\u000a  undefined4 in_cr12;\u000a  int iStack00000004;\u000a  undefined4 uStack00000008;\u000a  undefined4 uStack0000000c;\u000a  undefined4 uStack00000010;\u000a  undefined4 uStack00000014;\u000a  undefined4 uStack00000018;\u000a  undefined4 uStack0000001c;\u000a  undefined4 uStack00000020;\u000a  int iStack00000024;\u000a  int iStack00000028;\u000a  uint uStack0000002c;\u000a  int iStack00000030;\u000a  int iStack00000040;\u000a  int iStack00000048;\u000a  int in_stack_0000004c;\u000a  int *piStack00000054;\u000a  int iStack00000058;\u000a  uint *puStack0000005c;\u000a  undefined4 *puStack00000064;\u000a  int iStack00000068;\u000a  int iStack0000006c;\u000a  int in_stack_00000070;\u000a  int in_stack_00000074;\u000a  int iStack0000007c;\u000a  uint *puStack00000080;\u000a  uint in_stack_00000084;\u000a  uint in_stack_00000088;\u000a  \u000a  *(uint *)((int)&gfp->class_id + unaff_r5) = in_r1;\u000a  if (*(int *)(unaff_r4 + 0x124) == 0) {\u000a    uVar1 = in_r1 & 0xfffffffe;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  else {\u000a    uVar1 = has_MMX();\u000a    uVar1 = *(uint *)(unaff_r5 + DAT_0001ee30) & 0xfffffffe | uVar1 & 1;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  if (*(int *)(unaff_r4 + 300) == 0) {\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) = uVar1 & 0xfffffff3;\u000a  }\u000a  else {\u000a    uVar1 = has_SSE();\u000a    iVar2 = DAT_0001ee30;\u000a    *(uint *)(unaff_r5 + DAT_0001ee30) =\u000a         *(uint *)(unaff_r5 + DAT_0001ee30) & 0xfffffffb | (uVar1 & 1) << 2;\u000a    uVar1 = has_SSE2();\u000a    *(uint *)(unaff_r5 + iVar2) = *(uint *)(unaff_r5 + iVar2) & 0xfffffff7 | (uVar1 & 1) << 3;\u000a  }\u000a  iStack00000040 = unaff_r5 + DAT_0001ef9c;\u000a  if (*(int *)(unaff_r5 + DAT_0001ef9c) == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(1,DAT_0001efa0);\u000a  }\u000a  puStack00000064 = (undefined4 *)(unaff_r5 + lame_set_force_short_blocks);\u000a  if (*(int *)(unaff_r5 + lame_set_force_short_blocks) == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(1,DAT_0001efbc);\u000a  }\u000a  *(undefined4 *)(unaff_r5 + 0xa0) = *(undefined4 *)(unaff_r4 + 0x78);\u000a  iStack00000048 = 0xa4;\u000a  *(undefined4 *)(unaff_r5 + 0xa4) = *(undefined4 *)(unaff_r4 + 0x68);\u000a  iStack00000058 = 0xa8;\u000a  *(undefined4 *)(unaff_r5 + 0xa8) = *(undefined4 *)(unaff_r4 + 0x6c);\u000a  uStack00000020 = 0xac;\u000a  *(undefined4 *)(unaff_r5 + 0xac) = *(undefined4 *)(unaff_r4 + 0x70);\u000a  uStack00000018 = 0xb0;\u000a  *(undefined4 *)(unaff_r5 + 0xb0) = *(undefined4 *)(unaff_r4 + 0x74);\u000a  iVar2 = *(int *)(unaff_r4 + 8);\u000a  *(int *)(unaff_r5 + 0x44) = iVar2;\u000a  iStack00000030 = unaff_r5 + 0xa0;\u000a  if (iVar2 == 1) {\u000a    *(undefined4 *)(unaff_r4 + 0x30) = 3;\u000a    *(undefined4 *)(unaff_r5 + 0x48) = 1;\u000aLAB_0001ec5e:\u000a    uVar3 = 0;\u000a    *(undefined4 *)(unaff_r4 + 0x34) = 0;\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = *(int *)(unaff_r4 + 0x30);\u000a    uVar3 = 1;\u000a    if (iVar2 != 3) {\u000a      uVar3 = 2;\u000a    }\u000a    *(undefined4 *)(unaff_r5 + 0x48) = uVar3;\u000a    if (iVar2 == 3) goto LAB_0001ec5e;\u000a    uVar3 = *(undefined4 *)(unaff_r4 + 0x34);\u000a    iVar2 = 2;\u000a  }\u000a  piStack00000054 = (int *)(unaff_r5 + 0x48);\u000a  *(undefined4 *)(unaff_r5 + 0x50) = uVar3;\u000a  iVar4 = *(int *)(unaff_r4 + 0x9c);\u000a  puStack0000005c = (uint *)(unaff_r4 + 0x9c);\u000a  if ((iVar4 == 4) || (iVar4 == 1)) {\u000aLAB_0001ed14:\u000a    *(undefined4 *)(unaff_r5 + 0x98) = *(undefined4 *)(unaff_r4 + 0x38);\u000a    iStack00000024 = unaff_r5 + 0x98;\u000a    iVar2 = 0xa0;\u000a  }\u000a  else {\u000a    if (iVar4 != 0) {\u000a      *(undefined4 *)(unaff_r4 + 0x38) = in_stack_00000074;\u000a      goto LAB_0001ed14;\u000a    }\u000a    if ((*(int *)(unaff_r4 + 0xa8) != 0x80) && (*(int *)(unaff_r4 + 0x60) == 0)) {\u000a      *(int *)(unaff_r4 + 0x60) = *(int *)(unaff_r4 + 0xa8);\u000a    }\u000a    in_stack_00000088 = 0xa0;\u000a    *(undefined4 *)(unaff_r5 + 0x98) = *(undefined4 *)(unaff_r4 + 0x38);\u000a    iStack00000024 = unaff_r5 + 0x98;\u000a    if (*(int *)(unaff_r4 + 0x60) == 0) {\u000a      uVar1 = *(uint *)(unaff_r4 + 100);\u000a      in_stack_00000084 = iVar2;\u000a      puStack00000080 = (uint *)__aeabi_fcmpeq(uVar1,0);\u000a      __unordsf2(uVar1,0);\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(DAT_0001efc0 & uVar1);\u000a    }\u000a    in_stack_00000084 = iVar2;\u000a    iVar4 = __aeabi_fcmpgt(*(undefined4 *)(unaff_r4 + 100),0);\u000a    iVar2 = in_stack_00000088;\u000a    if (iVar4 != 0) {\u000a      iVar2 = *(int *)(unaff_r4 + 0x10);\u000a      if (iVar2 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __floatsidf(*(undefined4 *)(unaff_r4 + 0xc));\u000a      }\u000a      iVar4 = iVar2 * in_stack_00000084;\u000a      in_stack_00000084 = iVar2;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(iVar4 * 0x10);\u000a    }\u000a  }\u000a  uStack0000002c = *(uint *)(unaff_r4 + 0x10);\u000a  if (uStack0000002c == 0) {\u000a    uVar1 = 0;\u000a    if ((*puStack0000005c == 4) || (*puStack0000005c == 1)) {\u000a      uVar3 = __floatsisf(*(undefined4 *)(unaff_r4 + iStack00000048));\u000a                    /* WARNING: Subroutine does not return */\u000a      __addsf3(uVar3,*(undefined4 *)(unaff_r4 + 0xa0));\u000a    }\u000a  }\u000a  else {\u000a    if (DAT_0001efd8 < (int)uStack0000002c) {\u000a      iVar4 = *(int *)(unaff_r4 + iStack00000058);\u000a      if (DAT_0001efe0 < (int)uStack0000002c) {\u000a        if (iVar4 < 0x21) {\u000a          iVar4 = 0x20;\u000a        }\u000a        if (0x13f < iVar4) {\u000a          iVar4 = 0x140;\u000a        }\u000a      }\u000a      else {\u000a        if (iVar4 < 9) {\u000a          iVar4 = 8;\u000a        }\u000a        if (0x9f < iVar4) {\u000a          iVar4 = iVar2;\u000a        }\u000a      }\u000a      *(int *)(unaff_r4 + 0xa8) = iVar4;\u000a      uVar1 = uStack0000002c;\u000a    }\u000a    else {\u000a      iVar2 = *(int *)(unaff_r4 + iStack00000058);\u000a      if (iVar2 < 9) {\u000a        iVar2 = 8;\u000a      }\u000a      if (0x3f < iVar2) {\u000a        iVar2 = 0x40;\u000a      }\u000a      *(int *)(unaff_r4 + iStack00000058) = iVar2;\u000a      uVar1 = uStack0000002c;\u000a    }\u000a  }\u000a  uStack0000002c = 0xb8;\u000a  uVar5 = *(uint *)(unaff_r4 + 0xb8);\u000a  puStack00000080 = (uint *)(unaff_r4 + 0xb8);\u000a  if (uVar5 != 0) goto LAB_0001f0ca;\u000a  uVar1 = *puStack0000005c;\u000a  if (uVar1 < 5) {\u000a    switch(uVar1) {\u000a    case 0:\u000a      iVar2 = nearestBitrateFullIndex((uint)*(ushort *)(unaff_r4 + 0x60));\u000a      iVar2 = iVar2 << 3;\u000a      iVar4 = DAT_0001f3b4 + 0x1f01e;\u000a      break;\u000a    default:\u000a      pcVar7 = DAT_0001f3a4;\u000a      if (*(uint *)(unaff_r4 + iStack00000048) < 10) {\u000a        iVar2 = *(uint *)(unaff_r4 + iStack00000048) << 2;\u000a        pcVar7 = lame_get_force_short_blocks + DAT_0001f3a8;\u000a        goto LAB_0001f030;\u000a      }\u000a      goto LAB_0001f0a6;\u000a    case 2:\u000a      if (0xfffe105b < (&switchdataD_0001efa4)[uVar1]) {\u000a                    /* WARNING: Bad instruction - Truncating control flow here */\u000a        halt_baddata();\u000a      }\u000a      iVar2 = iStack00000048;\u000a      pcVar7 = DAT_0001f3ac;\u000a      if ((int)&switchdataD_0001efa4 + (&switchdataD_0001efa4)[uVar1] == 0) {\u000a        register0x00000054 =\u000a             (BADSPACEBASE *)(iStack00000048 + ((uint)register0x00000054 >> (unaff_r8 & 0xff)));\u000a        iVar2 = iStack00000048;\u000a        pcVar7 = DAT_0001f3ac;\u000a      }\u000aLAB_0001f030:\u000a      *(code **)((undefined *)register0x00000054 + 0x7c) = pcVar7 + iVar2;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(*(undefined4 *)(pcVar7 + iVar2));\u000a    case 3:\u000a      coprocessor_function2(0,0xd,6,in_cr0,in_cr12,in_cr0);\u000a      iVar4 = _UNK_0001f3bc + 0x1f0a0;\u000a      iVar2 = iStack00000058;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(*(undefined4 *)(iVar4 + iVar2 + 4));\u000a  }\u000a  pcVar7 = DAT_0001f3ac;\u000a  if (*(uint *)(unaff_r4 + iStack00000048) < 10) {\u000a    iVar2 = *(uint *)(unaff_r4 + iStack00000048) << 2;\u000a    pcVar7 = (code *)(DAT_0001f3b0 + 0x1f00e);\u000a    goto LAB_0001f030;\u000a  }\u000aLAB_0001f0a6:\u000a  if ((*(int *)(unaff_r4 + 0x30) == 3) && ((*puStack0000005c == 3 || (*puStack0000005c == 0)))) {\u000a    __muldf3(0,pcVar7,0,DAT_0001f3c0);\u000a  }\u000a  uVar5 = __fixdfsi();\u000a  *puStack00000080 = uVar5;\u000a  uVar1 = *(uint *)(unaff_r4 + 0x10);\u000aLAB_0001f0ca:\u000a  if (uVar1 == 0) {\u000a    uVar8 = *(uint *)(unaff_r4 + 0xc);\u000a    if (uVar5 * 2 - uVar8 != 0 && (int)uVar8 <= (int)(uVar5 * 2)) {\u000a      uVar5 = (int)(uVar8 + (uVar8 >> 0x1f)) >> 1;\u000a      *puStack00000080 = uVar5;\u000a    }\u000a    uVar1 = lame_get_totalframes;\u000a    if ((((((int)uVar8 <= DAT_0001f3c8) && (uVar1 = DAT_0001f3cc, (int)uVar8 <= DAT_0001f3d0)) &&\u000a         (uVar1 = 32000, (int)uVar8 <= DAT_0001f3d4)) &&\u000a        ((uVar1 = DAT_0001f3d8, (int)uVar8 <= DAT_0001f3dc &&\u000a         (uVar1 = DAT_0001f3e0, (int)uVar8 <= DAT_0001f3e4)))) &&\u000a       (((uVar1 = 16000, (int)uVar8 <= DAT_0001f3e8 &&\u000a         ((uVar1 = DAT_0001f3ec, (int)uVar8 <= DAT_0001f3f0 &&\u000a          (uVar1 = DAT_0001f3f4, (int)uVar8 <= DAT_0001f3f8)))) &&\u000a        (uVar1 = 8000, (int)uVar8 <= DAT_0001f3fc)))) {\u000a      uVar1 = DAT_0001f3cc;\u000a    }\u000a    if (uVar5 != 0xffffffff) {\u000a      uVar9 = DAT_0001f3cc;\u000a      if (DAT_0001f400 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = 32000;\u000a      if (DAT_0001f404 <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = DAT_0001f3d8;\u000a      if (DAT_0001f408 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = DAT_0001f3e0;\u000a      if (DAT_0001f40c <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = 16000;\u000a      if (DAT_0001f410 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = DAT_0001f3ec;\u000a      if (DAT_0001f414 <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = DAT_0001f3f4;\u000a      if (DAT_0001f418 <= (int)uVar5) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = 8000;\u000a      if (DAT_0001f41c <= (int)uVar5) {\u000a        uVar1 = uVar9;\u000a      }\u000a      if ((((((int)uVar8 < (int)uVar1) &&\u000a            (uVar1 = lame_get_totalframes, (int)uVar8 <= (int)DAT_0001f3cc)) &&\u000a           (uVar1 = DAT_0001f3cc, (int)uVar8 < 0x7d01)) &&\u000a          (((uVar1 = 32000, (int)uVar8 <= (int)DAT_0001f3d8 &&\u000a            (uVar1 = DAT_0001f3d8, (int)uVar8 <= (int)DAT_0001f3e0)) &&\u000a           ((uVar1 = DAT_0001f3e0, (int)uVar8 < 0x3e81 &&\u000a            ((uVar1 = 16000, (int)uVar8 <= (int)DAT_0001f3ec &&\u000a             (uVar1 = DAT_0001f3ec, (int)uVar8 <= (int)DAT_0001f3f4)))))))) &&\u000a         (uVar1 = DAT_0001f3f4, (int)uVar8 < 0x1f41)) {\u000a        uVar1 = 8000;\u000a      }\u000a    }\u000a    *(uint *)(unaff_r4 + 0x10) = uVar1;\u000a  }\u000a  in_stack_00000084 = *puStack0000005c;\u000a  if ((in_stack_00000084 == 4) || (in_stack_00000084 == 1)) {\u000a    uVar8 = DAT_0001f3d8;\u000a    if ((int)uVar5 <= (int)DAT_0001f3d8) {\u000a      uVar8 = uVar5;\u000a    }\u000a    uVar5 = (int)(uVar1 + (uVar1 >> 0x1f)) >> 1;\u000a    if ((int)uVar8 <= (int)uVar5) {\u000a      uVar5 = uVar8;\u000a    }\u000a    *puStack00000080 = uVar5;\u000a  }\u000a  else {\u000a    uVar8 = DAT_0001f420;\u000a    if ((int)uVar5 <= (int)DAT_0001f420) {\u000a      uVar8 = uVar5;\u000a    }\u000a    uVar5 = (int)(uVar1 + (uVar1 >> 0x1f)) >> 1;\u000a    if ((int)uVar8 <= (int)uVar5) {\u000a      uVar5 = uVar8;\u000a    }\u000a    *puStack00000080 = uVar5;\u000a    if (in_stack_00000084 == 0) {\u000a      in_stack_00000088 = uVar1;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(uVar1 * *piStack00000054 * 0x10);\u000a    }\u000a  }\u000a  if (in_stack_00000084 == 3) {\u000a    in_stack_00000088 = uVar1;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(uVar1 * *piStack00000054 * 0x10);\u000a  }\u000a  if (*(int *)(unaff_r4 + 0x24) == 0) {\u000a    *(undefined4 *)(unaff_r4 + 0x3c) = 0;\u000a    *(undefined4 *)(unaff_r4 + 0x40) = 0;\u000a    *(undefined4 *)(unaff_r5 + 0x84) = 0;\u000a    *(undefined4 *)(unaff_r5 + 0x80) = 0;\u000a    *(undefined4 *)(unaff_r5 + 0x88) = 0;\u000a    in_stack_00000088 = uVar1;\u000a  }\u000a  else {\u000a    iVar2 = *(int *)(unaff_r4 + 0x3c);\u000a    iVar4 = *(int *)(unaff_r4 + 0x40);\u000a    *(int *)(unaff_r5 + 0x80) = iVar2;\u000a    *(int *)(unaff_r5 + 0x88) = iVar4;\u000a    if (iVar4 != 0) {\u000a      *(undefined4 *)(unaff_r5 + 0x84) = 1;\u000a    }\u000a    in_stack_00000088 = uVar1;\u000a    if (iVar2 != 0) {\u000a      in_stack_00000088 = uVar1;\u000a      iVar2 = InitGainAnalysis(*puStack00000064,uVar1);\u000a      if (iVar2 == 0) {\u000a        FUN_0001fb98();\u000a      }\u000a      in_stack_00000084 = *puStack0000005c;\u000a      uVar5 = *puStack00000080;\u000a      in_stack_00000088 = *(uint *)(unaff_r4 + 0x10);\u000a    }\u000a  }\u000a  uVar3 = in_stack_00000074;\u000a  *(undefined4 *)(unaff_r5 + 0x90) = *(undefined4 *)(unaff_r4 + 0x80);\u000a  *(uint *)(unaff_r5 + 0x34) = uVar5;\u000a  iStack0000007c = *(int *)(unaff_r4 + 0xbc);\u000a  *(int *)(unaff_r5 + 0x38) = iStack0000007c;\u000a  *(undefined4 *)(unaff_r5 + 0x3c) = *(undefined4 *)(unaff_r4 + 0xc);\u000a  *(uint *)(unaff_r5 + 0x40) = in_stack_00000088;\u000a  uVar6 = 1;\u000a  if (DAT_0001f428 <= (int)in_stack_00000088) {\u000a    uVar6 = 2;\u000a  }\u000a  *(undefined4 *)(unaff_r5 + 0x4c) = uVar6;\u000a  iStack00000028 = in_stack_0000004c << 6;\u000a  *(int *)(unaff_r5 + DAT_0001f42c) = iStack00000028;\u000a  if (1 < in_stack_00000084 - 1) {\u000a    if (in_stack_00000084 == 3) {\u000a      uStack0000000c = 0xbc;\u000a      puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(in_stack_00000088 * *piStack00000054 * 0x10);\u000a    }\u000a    if (in_stack_00000084 != 4) {\u000a      uStack0000000c = 0xbc;\u000a      puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(in_stack_00000088 * *piStack00000054 * 0x10);\u000a    }\u000a  }\u000a  uStack0000000c = 0xbc;\u000a  *(undefined4 *)(unaff_r4 + 100) =\u000a       *(undefined4 *)(DAT_0001f430 + 0x1f382 + *(int *)(unaff_r4 + iStack00000048) * 4);\u000a  iVar2 = *(int *)(unaff_r4 + 0x30);\u000a  if (iVar2 == 4) {\u000a    iVar2 = 1;\u000a    *(undefined4 *)(unaff_r4 + 0x30) = 1;\u000a  }\u000a  *(int *)(unaff_r5 + in_stack_00000070) = iVar2;\u000a  iStack00000004 = unaff_r5 + 0xb4;\u000a  if (0 < iStack0000007c) {\u000a    puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(iStack0000007c);\u000a  }\u000a  *(undefined4 *)(unaff_r5 + 0x100) = in_stack_00000074;\u000a  *(undefined4 *)(unaff_r5 + 0x104) = in_stack_00000074;\u000a  puStack00000064 = (undefined4 *)in_stack_00000074;\u000a  uStack00000010 = 0xf8;\u000a  *(undefined4 *)(unaff_r5 + 0xf8) = in_stack_00000074;\u000a  uStack00000014 = 0xfc;\u000a  *(undefined4 *)(unaff_r5 + 0xfc) = in_stack_00000074;\u000a  in_stack_00000070 = unaff_r5 + 0xfc;\u000a  iStack0000006c = unaff_r5 + 0xf8;\u000a  if ((0 < (int)uVar5) && ((int)uVar5 < (int)(in_stack_00000088 + (in_stack_00000088 >> 0x1f)) >> 1)\u000a     ) {\u000a    puStack00000080 = (uint *)uVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(uVar5);\u000a  }\u000a  uStack0000001c = 1;\u000a  in_stack_00000074 = unaff_r5 + 0x100;\u000a  uStack00000008 = 0x104;\u000a  iStack00000068 = unaff_r5 + 0x104;\u000a  puStack00000080 = (uint *)uVar5;\u000a  __aeabi_fcmpgt(uVar3,0);\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(uVar3);\u000a}\u000a\u000a
p1683
S'str r1,[r5,r0]\n'
p1684
S'29 50\n'
p1685
S'.text:0001eb30\n'
p1686
tp1687
sS'lame_set_preset_notune'
p1688
(S'\n__stdcall lame_set_preset_notune()\n'
p1689
V\u000aundefined4 lame_set_preset_notune(void)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p1690
S'mov r0,#0x0\nbx lr\n'
p1691
S'00 20\n70 47\n'
p1692
S'.text:0002f5b6\n.text:0002f5b8\n'
p1693
tp1694
sS'FUN_00022f32'
p1695
(S'\n__stdcall FUN_00022f32(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11)\n'
p1696
V\u000avoid FUN_00022f32(void)\u000a\u000a{\u000a  int param_11;\u000a  \u000a  if (**(int **)(DAT_00022f60 + 0x22f38) == param_11) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1697
S'ldr r0,[0x00022f60]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0x1a8]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x00022f46\nadd sp,#0x1ac\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p1698
S'0b 48\n78 44\n00 68\n00 68\n6a 99\n40 1a\n00 28\n01 d1\n6b b0\nf0 bd\n14 f0 33 fd\n'
p1699
S'.text:00022f32\n.text:00022f34\n.text:00022f36\n.text:00022f38\n.text:00022f3a\n.text:00022f3c\n.text:00022f3e\n.text:00022f40\n.text:00022f42\n.text:00022f44\n.text:00022f46\n'
p1700
tp1701
sS'lame_bitrate_stereo_mode_hist'
p1702
(S'\n__stdcall lame_bitrate_stereo_mode_hist()\n'
p1703
V\u000avoid lame_bitrate_stereo_mode_hist(int *piParm1,undefined4 *puParm2)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  undefined4 *puVar4;\u000a  int *piVar5;\u000a  undefined4 *puVar6;\u000a  \u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_00021b10)) &&\u000a      (piVar5 = (int *)piParm1[0x48], piVar5 != (int *)0x0)) && (*piVar5 == DAT_00021b10)) {\u000a    if (piVar5[0x26] == 0) {\u000a      puVar1 = (undefined4 *)((int)piVar5 + DAT_00021b18);\u000a      iVar3 = 0;\u000a      do {\u000a        iVar3 = iVar3 + 1;\u000a        iVar2 = 4;\u000a        puVar4 = puVar1;\u000a        puVar6 = puParm2;\u000a        do {\u000a          *puVar6 = *puVar4;\u000a          puVar4 = puVar4 + 1;\u000a          iVar2 = iVar2 + -1;\u000a          puVar6 = puVar6 + 1;\u000a        } while (iVar2 != 0);\u000a        puVar1 = puVar1 + 5;\u000a        puParm2 = puParm2 + 4;\u000a      } while (iVar3 != 0xe);\u000a    }\u000a    else {\u000a      __aeabi_memclr4(puParm2,0xe0);\u000a      iVar3 = DAT_00021b14;\u000a      iVar2 = 0;\u000a      do {\u000a        puParm2[iVar2 * 0x3fffffff] = *(undefined4 *)((int)piVar5 + iVar2 * -4 + iVar3);\u000a        iVar2 = iVar2 + -1;\u000a      } while (iVar2 != -4);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1704
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r1 }\npop { r4 }\ncmp r0,#0x0\nbeq 0x00021b0a\nldr r1,[r0,#0x0]\nldr r2,[0x00021b10]\ncmp r1,r2\nbne 0x00021b0a\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r5,[r0,r1]\ncmp r5,#0x0\nbeq 0x00021b0a\nldr r0,[r5,#0x0]\nldr r1,[0x00021b10]\ncmp r0,r1\nbne 0x00021b0a\nmov r0,#0x98\nldr r0,[r5,r0]\ncmp r0,#0x0\nbeq 0x00021ae2\nmov r1,#0xe0\npush { r4 }\npop { r0 }\nbl 0x00037a40\nldr r0,[0x00021b14]\nadd r0,r5,r0\nmov r1,#0x0\nlsl r2,r1,#0x2\nsub r3,r4,r2\nsub r2,r0,r2\nldr r2,[r2,#0x0]\nstr r2,[r3,#0x0]\nsub r1,#0x1\nmov r2,#0x3\nmvn r2,r2\ncmp r1,r2\nbne 0x00021acc\nb 0x00021b0a\nldr r0,[0x00021b18]\nadd r0,r5,r0\nmov r1,#0x0\nadd r1,#0x1\nmov r2,#0x4\npush { r0 }\npop { r3 }\npush { r4 }\npop { r5 }\nldr r6,[r3,#0x0]\nstr r6,[r5,#0x0]\nadd r3,#0x4\nsub r2,#0x1\nadd r5,#0x4\ncmp r2,#0x0\nbne 0x00021af4\nadd r0,#0x14\nadd r4,#0x10\ncmp r1,#0xe\nbne 0x00021ae8\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p1705
S'f0 b5\n03 af\n81 b0\n02 b4\n10 bc\n00 28\n37 d0\n01 68\n1c 4a\n91 42\n33 d1\n09 21\n49 01\n45 58\n00 2d\n2e d0\n28 68\n18 49\n88 42\n2a d1\n98 20\n28 58\n00 28\n12 d0\ne0 21\n10 b4\n01 bc\n15 f0 bd ff\n13 48\n28 18\n00 21\n8a 00\na3 1a\n82 1a\n12 68\n1a 60\n01 39\n03 22\nd2 43\n91 42\nf5 d1\n13 e0\n0d 48\n28 18\n00 21\n01 31\n04 22\n01 b4\n08 bc\n10 b4\n20 bc\n1e 68\n2e 60\n04 33\n01 3a\n04 35\n00 2a\nf8 d1\n14 30\n10 34\n0e 29\nee d1\n01 b0\nf0 bd\n'
p1706
S'.text:00021a8c\n.text:00021a8e\n.text:00021a90\n.text:00021a92\n.text:00021a94\n.text:00021a96\n.text:00021a98\n.text:00021a9a\n.text:00021a9c\n.text:00021a9e\n.text:00021aa0\n.text:00021aa2\n.text:00021aa4\n.text:00021aa6\n.text:00021aa8\n.text:00021aaa\n.text:00021aac\n.text:00021aae\n.text:00021ab0\n.text:00021ab2\n.text:00021ab4\n.text:00021ab6\n.text:00021ab8\n.text:00021aba\n.text:00021abc\n.text:00021abe\n.text:00021ac0\n.text:00021ac2\n.text:00021ac6\n.text:00021ac8\n.text:00021aca\n.text:00021acc\n.text:00021ace\n.text:00021ad0\n.text:00021ad2\n.text:00021ad4\n.text:00021ad6\n.text:00021ad8\n.text:00021ada\n.text:00021adc\n.text:00021ade\n.text:00021ae0\n.text:00021ae2\n.text:00021ae4\n.text:00021ae6\n.text:00021ae8\n.text:00021aea\n.text:00021aec\n.text:00021aee\n.text:00021af0\n.text:00021af2\n.text:00021af4\n.text:00021af6\n.text:00021af8\n.text:00021afa\n.text:00021afc\n.text:00021afe\n.text:00021b00\n.text:00021b02\n.text:00021b04\n.text:00021b06\n.text:00021b08\n.text:00021b0a\n.text:00021b0c\n'
p1707
tp1708
sS'FUN_0001d244'
p1709
(S'\n__stdcall FUN_0001d244(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined param_6, undefined param_7, undefined4 param_8, undefined param_9, undefined4 param_10, undefined4 param_11)\n'
p1710
V\u000aundefined4 FUN_0001d244(undefined4 param_1,int param_2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 unaff_r5;\u000a  int unaff_r6;\u000a  undefined4 param_8;\u000a  void *param_10;\u000a  int param_11;\u000a  \u000a  do {\u000a    uVar1 = 0xfffffff9;\u000a    if (*(char *)(param_2 + unaff_r6) == 0) {\u000aLAB_0001d2ac:\u000a      if (**(int **)(DAT_0001d2f8 + 0x1d2b2) == param_11) {\u000a        return uVar1;\u000a      }\u000a                    /* WARNING: Subroutine does not return */\u000a      __stack_chk_fail();\u000a    }\u000a    if (*(char *)(param_2 + unaff_r6) == '=') {\u000a      if (-1 < unaff_r6) {\u000a        param_10 = (void *)0x0;\u000a        local_strdup(&stack0x00000014);\u000a        *(undefined *)((int)param_10 + unaff_r6) = 0;\u000a        uVar1 = id3v2_add_latin1(param_8,unaff_r5,DAT_0001d2f4 + 0x1d274);\u000a        free(param_10);\u000a      }\u000a      goto LAB_0001d2ac;\u000a    }\u000a    unaff_r6 = unaff_r6 + 1;\u000a  } while( true );\u000a}\u000a\u000a
p1711
S'ldrb r0,[r1,r6]\nmov r2,#0x6\nmvn r4,r2\ncmp r0,#0x0\nbeq 0x0001d2ac\ncmp r0,#0x3d\nbne 0x0001d242\ncmp r6,#0x0\nblt 0x0001d2ac\nmov r4,#0x0\nstr r4,[sp,#0x14]\nadd r0,sp,#0x14\nbl 0x0001d66c\nldr r0,[sp,#0x14]\nstrb r4,[r0,r6]\nldr r3,[sp,#0x14]\nadd r0,r3,r6\nadd r0,#0x1\nmov r1,sp\nstr r0,[r1,#0x0]\nldr r2,[0x0001d2f4]\nadd r2,pc\nldr r0,[sp,#0xc]\npush { r5 }\npop { r1 }\nbl 0x0001d3b0\npush { r0 }\npop { r4 }\nldr r0,[sp,#0x14]\nbl 0x00037ca0\nb 0x0001d2ac\n'
p1712
S'88 5d\n06 22\nd4 43\n00 28\n2e d0\n3d 28\nf7 d1\n00 2e\n2a db\n00 24\n05 94\n05 a8\n00 f0 06 fa\n05 98\n84 55\n05 9b\n98 19\n01 30\n69 46\n08 60\n21 4a\n7a 44\n03 98\n20 b4\n02 bc\n00 f0 9a f8\n01 b4\n10 bc\n05 98\n1a f0 0d fd\n11 e0\n'
p1713
S'.text:0001d244\n.text:0001d246\n.text:0001d248\n.text:0001d24a\n.text:0001d24c\n.text:0001d24e\n.text:0001d250\n.text:0001d252\n.text:0001d254\n.text:0001d256\n.text:0001d258\n.text:0001d25a\n.text:0001d25c\n.text:0001d260\n.text:0001d262\n.text:0001d264\n.text:0001d266\n.text:0001d268\n.text:0001d26a\n.text:0001d26c\n.text:0001d26e\n.text:0001d270\n.text:0001d272\n.text:0001d274\n.text:0001d276\n.text:0001d278\n.text:0001d27c\n.text:0001d27e\n.text:0001d280\n.text:0001d282\n.text:0001d286\n'
p1714
tp1715
sS'__cxa_type_match'
p1716
(S'\n__stdcall __cxa_type_match()\n'
p1717
V\u000avoid __cxa_type_match(void)\u000a\u000a{\u000a  (*(code *)PTR___cxa_type_match_00040fd0)();\u000a  return;\u000a}\u000a\u000a
p1718
S'adr r12,0x16c50\nadd r12,r12,#0x2a000\nldr pc,[r12,#0x380]!\n'
p1719
S'00 c6 8f e2\n2a ca 8c e2\n80 f3 bc e5\n'
p1720
S'.plt:00016c48\n.plt:00016c4c\n.plt:00016c50\n'
p1721
tp1722
sS'flush_bitstream'
p1723
(S'\n__stdcall flush_bitstream()\n'
p1724
V\u000avoid flush_bitstream(void)\u000a\u000a{\u000a  (*(GetTitleGain + DAT_0003803c))();\u000a  return;\u000a}\u000a\u000a
p1725
S'ldr r12,[0x3803c]\nadd pc,r12,pc\n'
p1726
S'00 c0 9f e5\n0f f0 8c e0\n'
p1727
S'.text:00038034\n.text:00038038\n'
p1728
tp1729
sS'FUN_00027ebc'
p1730
(S'\n__stdcall FUN_00027ebc(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11)\n'
p1731
V\u000aundefined4 FUN_00027ebc(void)\u000a\u000a{\u000a  undefined4 unaff_r4;\u000a  int param_11;\u000a  \u000a  if (**(int **)(DAT_00027f50 + 0x27ec2) == param_11) {\u000a    return unaff_r4;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1732
S'ldr r0,[0x00027f50]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0x380]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x00027ed8\npush { r4 }\npop { r0 }\nsub r4,r7,#0x7\nsub r4,#0x5\nmov sp,r4\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p1733
S'24 48\n78 44\n00 68\n00 68\ne0 99\n40 1a\n00 28\n05 d1\n10 b4\n01 bc\nfc 1f\n05 3c\na5 46\nf0 bd\n0f f0 6a fd\n'
p1734
S'.text:00027ebc\n.text:00027ebe\n.text:00027ec0\n.text:00027ec2\n.text:00027ec4\n.text:00027ec6\n.text:00027ec8\n.text:00027eca\n.text:00027ecc\n.text:00027ece\n.text:00027ed0\n.text:00027ed2\n.text:00027ed4\n.text:00027ed6\n.text:00027ed8\n'
p1735
tp1736
sS'isResamplingNecessary'
p1737
(S'\n__stdcall isResamplingNecessary()\n'
p1738
V\u000avoid isResamplingNecessary(void)\u000a\u000a{\u000a  (*(strcat + DAT_00037fec))();\u000a  return;\u000a}\u000a\u000a
p1739
S'ldr r12,[0x37fec]\nadd pc,r12,pc\n'
p1740
S'00 c0 9f e5\n0f f0 8c e0\n'
p1741
S'.text:00037fe4\n.text:00037fe8\n'
p1742
tp1743
sS'__gnu_Unwind_Find_exidx'
p1744
(S'\n__stdcall __gnu_Unwind_Find_exidx()\n'
p1745
V\u000avoid __gnu_Unwind_Find_exidx(void)\u000a\u000a{\u000a  (*(code *)PTR___gnu_Unwind_Find_exidx_00040f9c)();\u000a  return;\u000a}\u000a\u000a
p1746
S'adr r12,0x16bb4\nadd r12,r12,#0x2a000\nldr pc,[r12,#0x3e8]!\n'
p1747
S'00 c6 8f e2\n2a ca 8c e2\ne8 f3 bc e5\n'
p1748
S'.plt:00016bac\n.plt:00016bb0\n.plt:00016bb4\n'
p1749
tp1750
sS'lame_get_force_ms'
p1751
(S'\n__stdcall lame_get_force_ms(lame_global_flags * gfp)\n'
p1752
V\u000aint lame_get_force_ms(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  lame_global_flags *gfp_00;\u000a  undefined in_r1;\u000a  undefined *puVar2;\u000a  int in_r2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint unaff_r4;\u000a  uint uVar9;\u000a  undefined *unaff_r6;\u000a  undefined *puVar10;\u000a  bool in_NG;\u000a  bool in_ZR;\u000a  char in_OV;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  while (!in_ZR && in_NG == (bool)in_OV) {\u000aLAB_0001e0ea:\u000a    in_r1 = 0;\u000a    unaff_r6[in_r2 + -1] = (char)unaff_r4;\u000a    in_r2 = in_r2 + -1;\u000a    unaff_r4 = unaff_r4 >> 8;\u000a    in_NG = in_r2 < 0;\u000a    in_ZR = in_r2 == 0;\u000a    in_OV = 0;\u000a  }\u000a  uVar1 = (int)&gfp->tune_value_a + 2;\u000a  iVar3 = 4;\u000a  do {\u000a    unaff_r6[iVar3 + 3] = (char)uVar1;\u000a    iVar3 = iVar3 + -1;\u000a    uVar1 = uVar1 >> 8;\u000a  } while (0 < iVar3);\u000a  unaff_r6[8] = in_r1;\u000a  unaff_r6[9] = in_r1;\u000a  if (in_stack_00000028[8] == 1) {\u000a    in_r1 = 1;\u000a  }\u000a  unaff_r6[10] = in_r1;\u000a  unaff_r6[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a  unaff_r6[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a  unaff_r6[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a  puVar10 = unaff_r6 + 0xe;\u000a  if (in_stack_00000028[5] == 1) {\u000a    gfp_00 = (lame_global_flags *)writeUcs2s(puVar10,in_stack_00000028[3],in_stack_00000028[4]);\u000a    *(undefined *)&gfp_00->class_id = 0;\u000a    *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a    iVar3 = lame_get_ReplayGain_input(gfp_00);\u000a    return iVar3;\u000a  }\u000a  iVar3 = in_stack_00000028[4];\u000a  if (iVar3 != 0) {\u000a    puVar2 = (undefined *)in_stack_00000028[3];\u000a    iVar5 = iVar3;\u000a    puVar8 = puVar10;\u000a    do {\u000a      *puVar8 = *puVar2;\u000a      puVar8 = puVar8 + 1;\u000a      puVar2 = puVar2 + 1;\u000a      iVar5 = iVar5 + -1;\u000a    } while (iVar5 != 0);\u000a    puVar10 = puVar10 + iVar3;\u000a  }\u000a  *puVar10 = 0;\u000a  unaff_r6 = puVar10 + 1;\u000a  if (in_stack_00000028[8] != 1) {\u000a    iVar3 = in_stack_00000028[7];\u000a    if (iVar3 == 0) goto LAB_0001e09a;\u000a    puVar8 = (undefined *)in_stack_00000028[6];\u000a    iVar5 = iVar3;\u000a    puVar10 = unaff_r6;\u000a    do {\u000a      *puVar10 = *puVar8;\u000a      puVar10 = puVar10 + 1;\u000a      puVar8 = puVar8 + 1;\u000a      iVar5 = iVar5 + -1;\u000a      if (iVar5 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    unaff_r6 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[6],in_stack_00000028[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          while( true ) {\u000a            in_stack_00000028 = (int *)*in_stack_00000028;\u000a            if (in_stack_00000028 == (int *)0x0) {\u000a              if (__s != (char *)0x0) {\u000a                iVar3 = 4;\u000a                if ((*in_stack_00000004 != 0) &&\u000a                   (uVar1 = DAT_0001e49c,\u000a                   *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a                  do {\u000a                    unaff_r6[iVar3 + -1] = (char)uVar1;\u000a                    iVar3 = iVar3 + -1;\u000a                    uVar1 = uVar1 >> 8;\u000a                  } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a                  strlen(__s);\u000a                }\u000a              }\u000a              __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a              if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a                return in_stack_0000002c;\u000a              }\u000a                    /* WARNING: Subroutine does not return */\u000a              __stack_chk_fail();\u000a            }\u000a            unaff_r4 = in_stack_00000028[1];\u000a            uVar1 = 0xff;\u000a            iVar3 = 4;\u000a            if ((unaff_r4 != DAT_0001e494) && (uVar4 = in_stack_00000030, unaff_r4 != DAT_0001e498))\u000a            break;\u000a            iVar3 = in_stack_00000028[4] * 2 + 0x10;\u000a            if (in_stack_00000028[5] != 1) {\u000a              iVar3 = in_stack_00000028[4] + 0xf;\u000a            }\u000a            iVar5 = 0;\u000a            if (in_stack_00000028[8] == 1) {\u000a              iVar5 = in_stack_00000028[8];\u000a            }\u000a            gfp = (lame_global_flags *)((in_stack_00000028[7] << iVar5) + iVar3);\u000a            in_r2 = 4;\u000a            if ((lame_global_flags *)0xa < gfp) goto LAB_0001e0ea;\u000a          }\u000a          do {\u000a            uVar7 = uVar1 & 0x57000000;\u000a            uVar9 = in_stack_00000030;\u000a            if (uVar7 != (uVar1 & unaff_r4)) {\u000a              uVar9 = uVar1 & unaff_r4;\u000a            }\u000a            if (uVar7 == 0) {\u000a              uVar9 = uVar7;\u000a            }\u000a            uVar4 = uVar4 | uVar9;\u000a            iVar3 = iVar3 + -1;\u000a            uVar1 = uVar1 << 8;\u000a          } while (iVar3 != 0);\u000a          if (uVar4 != 0) break;\u000a          uVar1 = sizeOfWxxxNode(in_stack_00000028);\u000a          iVar3 = 4;\u000a          if (10 < uVar1) {\u000a            do {\u000a              unaff_r6[iVar3 + -1] = (char)unaff_r4;\u000a              iVar3 = iVar3 + -1;\u000a              unaff_r4 = unaff_r4 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar1 = uVar1 - 10;\u000a            iVar3 = 4;\u000a            do {\u000a              unaff_r6[iVar3 + 3] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            unaff_r6[8] = 0;\u000a            unaff_r6[9] = 0;\u000a            puVar10 = unaff_r6 + 10;\u000a            if (in_stack_00000028[4] != 0) {\u000a              *(bool *)(unaff_r6 + 10) = in_stack_00000028[5] == 1;\u000a              puVar10 = unaff_r6 + 0xb;\u000a              if (in_stack_00000028[5] == 1) {\u000a                puVar10 = (undefined *)writeUcs2s(puVar10,in_stack_00000028[3],in_stack_00000028[4])\u000a                ;\u000a                *puVar10 = 0;\u000a                puVar10[1] = 0;\u000a                puVar10 = puVar10 + 2;\u000a              }\u000a              else {\u000a                iVar3 = in_stack_00000028[4];\u000a                if (iVar3 != 0) {\u000a                  puVar2 = (undefined *)in_stack_00000028[3];\u000a                  iVar5 = iVar3;\u000a                  puVar8 = puVar10;\u000a                  do {\u000a                    *puVar8 = *puVar2;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar2 = puVar2 + 1;\u000a                    iVar5 = iVar5 + -1;\u000a                  } while (iVar5 != 0);\u000a                  puVar10 = puVar10 + iVar3;\u000a                }\u000a                *puVar10 = 0;\u000a                puVar10 = puVar10 + 1;\u000a              }\u000a            }\u000a            if (in_stack_00000028[8] == 1) {\u000a              unaff_r6 = (undefined *)\u000a                         writeLoBytes(puVar10,in_stack_00000028[6],in_stack_00000028[7]);\u000a            }\u000a            else {\u000a              iVar3 = in_stack_00000028[7];\u000a              unaff_r6 = puVar10;\u000a              if (iVar3 != 0) {\u000a                puVar2 = (undefined *)in_stack_00000028[6];\u000a                iVar5 = iVar3;\u000a                puVar8 = puVar10;\u000a                do {\u000a                  *puVar8 = *puVar2;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                unaff_r6 = puVar10 + iVar3;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        iVar3 = in_stack_00000028[7];\u000a        iVar5 = in_stack_00000028[4];\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar6 = iVar5 * 2 + 0xd;\u000a          if (iVar5 == 0) {\u000a            iVar6 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar6 = iVar5 + 0xc;\u000a          if (iVar5 == 0) {\u000a            iVar6 = 0xb;\u000a          }\u000a        }\u000a        iVar5 = 4;\u000a      } while ((uint)(iVar6 + iVar3) < 0xb);\u000a      do {\u000a        unaff_r6[iVar5 + -1] = (char)unaff_r4;\u000a        iVar5 = iVar5 + -1;\u000a        unaff_r4 = unaff_r4 >> 8;\u000a      } while (0 < iVar5);\u000a      uVar1 = (iVar6 + iVar3) - 10;\u000a      iVar3 = 4;\u000a      do {\u000a        unaff_r6[iVar3 + 3] = (char)uVar1;\u000a        iVar3 = iVar3 + -1;\u000a        uVar1 = uVar1 >> 8;\u000a      } while (0 < iVar3);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a      unaff_r6 = unaff_r6 + 0xb;\u000a      iVar3 = in_stack_00000028[4];\u000a      if (iVar3 != 0) {\u000a        if (in_stack_00000028[5] == 1) {\u000a          puVar10 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[3]);\u000a          *puVar10 = 0;\u000a          puVar10[1] = 0;\u000a          unaff_r6 = puVar10 + 2;\u000a        }\u000a        else {\u000a          puVar8 = (undefined *)in_stack_00000028[3];\u000a          iVar5 = iVar3;\u000a          puVar10 = unaff_r6;\u000a          do {\u000a            *puVar10 = *puVar8;\u000a            puVar10 = puVar10 + 1;\u000a            puVar8 = puVar8 + 1;\u000a            iVar5 = iVar5 + -1;\u000a          } while (iVar5 != 0);\u000a          unaff_r6[iVar3] = 0;\u000a          unaff_r6 = unaff_r6 + iVar3 + 1;\u000a        }\u000a      }\u000a      if (in_stack_00000028[8] == 1) break;\u000a      iVar3 = in_stack_00000028[7];\u000a      if (iVar3 != 0) {\u000a        puVar8 = (undefined *)in_stack_00000028[6];\u000a        iVar5 = iVar3;\u000a        puVar10 = unaff_r6;\u000a        do {\u000a          *puVar10 = *puVar8;\u000a          puVar10 = puVar10 + 1;\u000a          puVar8 = puVar8 + 1;\u000a          iVar5 = iVar5 + -1;\u000a        } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a        unaff_r6 = unaff_r6 + iVar3;\u000a      }\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p1753
S'bgt 0x0001e0ea\nsub r0,#0xa\nmov r2,#0x4\nadd r3,r6,r2\nstrb r0,[r3,#0x3]\nsub r2,#0x1\nlsr r0,r0,#0x8\ncmp r2,#0x0\nbgt 0x0001e0fe\nstrb r1,[r6,#0x8]\nstrb r1,[r6,#0x9]\nldr r5,[sp,#0x28]\nldr r0,[r5,#0x20]\n'
p1754
S'f7 dc\n0a 38\n04 22\nb3 18\nd8 70\n01 3a\n00 0a\n00 2a\nf9 dc\n31 72\n71 72\n0a 9d\n28 6a\n'
p1755
S'.text:0001e0f8\n.text:0001e0fa\n.text:0001e0fc\n.text:0001e0fe\n.text:0001e100\n.text:0001e102\n.text:0001e104\n.text:0001e106\n.text:0001e108\n.text:0001e10a\n.text:0001e10c\n.text:0001e10e\n.text:0001e110\n'
p1756
tp1757
sS'__gnu_Unwind_Save_VFP'
p1758
(S'\n__stdcall __gnu_Unwind_Save_VFP()\n'
p1759
V\u000avoid __gnu_Unwind_Save_VFP(undefined4 uParm1)\u000a\u000a{\u000a  undefined4 in_cr0;\u000a  \u000a  coprocessor_store(0xb,in_cr0,uParm1);\u000a  return;\u000a}\u000a\u000a
p1760
S'stc p11,cr0,[r0],{0x21}\nbx lr\n'
p1761
S'21 0b 80 ec\n1e ff 2f e1\n'
p1762
S'.text:000372c4\n.text:000372c8\n'
p1763
tp1764
sS'find_scalefac_x34'
p1765
(S'\n__stdcall find_scalefac_x34(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p1766
V\u000auint find_scalefac_x34(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  undefined4 uVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  int iVar9;\u000a  uint uVar10;\u000a  int **ppiVar11;\u000a  uint uStack24;\u000a  undefined4 uStack4;\u000a  \u000a  iVar2 = DAT_00033330;\u000a  ppiVar11 = (int **)(&stack0xffffffec + DAT_00033330);\u000a  puVar1 = (undefined4 *)(&stack0x00000028 + DAT_00033330);\u000a  *(undefined4 **)(&stack0xffffffec + DAT_00033330) = puVar1;\u000a  *(undefined4 *)(&stack0x00000018 + iVar2) = param_3;\u000a  *(undefined4 *)(&stack0xfffffff8 + iVar2) = param_1;\u000a  *(undefined4 *)((int)&uStack4 + iVar2) = param_2;\u000a  *(undefined4 *)(&stack0x00000000 + iVar2) = param_4;\u000a  *puVar1 = **(undefined4 **)(DAT_00033328 + 0x33188);\u000a  *(undefined4 *)(&stack0x0000000c + iVar2) = 1;\u000a  __aeabi_memclr4(&stack0x0000002c + iVar2,0x800,&stack0x00000004 + iVar2);\u000a  *(undefined4 *)(&stack0x0000001c + iVar2) = 0xff;\u000a  uVar3 = 0x80;\u000a  uVar7 = 0;\u000a  uVar6 = *(uint *)(&stack0xffffffec + DAT_00033334 + iVar2);\u000a  *(uint *)(&stack0x00000004 + iVar2) = uVar6;\u000a  *(undefined4 *)(&stack0x00000014 + iVar2) = 0;\u000a  *(uint *)((int)&uStack24 + iVar2) = 0x80;\u000a  uVar8 = *(uint *)((int)&uStack24 + iVar2);\u000a  *(undefined4 *)(&stack0x00000010 + iVar2) = 0xff;\u000a  do {\u000a    *(uint *)((int)&uStack24 + iVar2) = uVar3;\u000a    uVar10 = *(uint *)((int)&uStack24 + iVar2) & *(uint *)(&stack0x0000001c + iVar2);\u000a    uVar8 = uVar8 >> 1;\u000a    if (uVar6 < uVar10) {\u000a      *(uint *)(&stack0x00000020 + iVar2) = uVar8;\u000a      *(uint *)(&stack0x00000024 + iVar2) = uVar3;\u000a      iVar9 = uVar10 * 8;\u000a      if (*(int *)(&stack0x0000002c + iVar9 + iVar2) == 0) {\u000a        *(undefined **)(&stack0x00000008 + iVar2) = &stack0x0000002c + iVar2;\u000a        *(undefined4 *)(&stack0x0000002c + iVar2 + iVar9) = 1;\u000a        uVar4 = calc_sfb_noise_x34(*(undefined4 *)(&stack0xfffffff8 + iVar2),\u000a                                   *(undefined4 *)((int)&uStack4 + iVar2),\u000a                                   *(undefined4 *)(&stack0x00000000 + iVar2),\u000a                                   *(uint *)(&stack0x00000024 + iVar2) & 0xff);\u000a        *(undefined4 *)(*(int *)(&stack0x00000008 + iVar2) + iVar9 + 4) = uVar4;\u000a      }\u000a      else {\u000a        uVar4 = *(undefined4 *)(&stack0xffffffec + iVar9 + iVar2 + 0x44);\u000a      }\u000a      iVar9 = __aeabi_fcmpgt(uVar4,*(undefined4 *)(&stack0x00000018 + iVar2));\u000a      iVar5 = 0;\u000a      uVar8 = *(uint *)(&stack0x00000020 + iVar2);\u000a      if (iVar9 == 0) {\u000a        uVar3 = 0xff;\u000a        if ((*(uint *)(&stack0x00000024 + iVar2) & 0xff) == 0xff) {\u000aLAB_00033262:\u000a          *(uint *)(&stack0x00000020 + iVar2) = uVar8;\u000a          *(uint *)((int)&uStack24 + iVar2) = uVar10;\u000a          uVar6 = *(uint *)((int)&uStack24 + iVar2) + 0xff;\u000a          *(uint *)((int)&uStack24 + iVar2) = uVar6;\u000a          iVar9 = (*(uint *)((int)&uStack24 + iVar2) & uVar3) * 8;\u000a          if (*(int *)(&stack0x0000002c + iVar9 + iVar2) == 0) {\u000a            *(int *)(&stack0x00000008 + iVar2) = iVar5;\u000a            *(undefined **)(&stack0xfffffff4 + iVar2) = &stack0x0000002c + iVar2;\u000a            *(undefined4 *)(&stack0x0000002c + iVar2 + iVar9) = 1;\u000a            uVar4 = calc_sfb_noise_x34(*(undefined4 *)(&stack0xfffffff8 + iVar2),\u000a                                       *(undefined4 *)((int)&uStack4 + iVar2),\u000a                                       *(undefined4 *)(&stack0x00000000 + iVar2),uVar6 & uVar3);\u000a            *(undefined4 *)(*(int *)(&stack0xfffffff4 + iVar2) + iVar9 + 4) = uVar4;\u000a          }\u000a          else {\u000a            *(int *)(&stack0x00000008 + iVar2) = iVar5;\u000a            uVar4 = *(undefined4 *)(&stack0xffffffec + iVar9 + iVar2 + 0x44);\u000a          }\u000a          iVar9 = __aeabi_fcmpgt(uVar4,*(undefined4 *)(&stack0x00000018 + iVar2));\u000a          uVar6 = *(uint *)(&stack0x00000024 + iVar2);\u000a          uVar8 = *(uint *)(&stack0x00000020 + iVar2);\u000a          iVar5 = *(int *)(&stack0x00000008 + iVar2);\u000a          if (iVar9 == 0) {\u000aLAB_000332b4:\u000a            iVar5 = *(int *)(&stack0x0000000c + iVar2);\u000a          }\u000a        }\u000a        else {\u000a          *(uint *)((int)&uStack24 + iVar2) = uVar10 + 1;\u000a          iVar9 = (*(uint *)((int)&uStack24 + iVar2) & 0xff) * 8;\u000a          if (*(int *)(&stack0x0000002c + iVar9 + iVar2) == 0) {\u000a            *(undefined4 *)(&stack0x00000008 + iVar2) = 0;\u000a            *(undefined **)(&stack0xfffffff0 + iVar2) = &stack0x0000002c + iVar2;\u000a            *(undefined4 *)(&stack0x0000002c + iVar2 + iVar9) =\u000a                 *(undefined4 *)(&stack0x0000000c + iVar2);\u000a            *(undefined4 *)(&stack0xfffffff4 + iVar2) = 0xff;\u000a            uVar4 = calc_sfb_noise_x34(*(undefined4 *)(&stack0xfffffff8 + iVar2),\u000a                                       *(undefined4 *)((int)&uStack4 + iVar2),\u000a                                       *(undefined4 *)(&stack0x00000000 + iVar2),uVar10 + 1 & 0xff);\u000a            *(undefined4 *)(*(int *)(&stack0xfffffff0 + iVar2) + iVar9 + 4) = uVar4;\u000a          }\u000a          else {\u000a            *(undefined4 *)(&stack0xfffffff4 + iVar2) = 0xff;\u000a            *(undefined4 *)(&stack0x00000008 + iVar2) = 0;\u000a            uVar4 = *(undefined4 *)(&stack0xffffffec + iVar9 + iVar2 + 0x44);\u000a          }\u000a          iVar9 = __aeabi_fcmpgt(uVar4,*(undefined4 *)(&stack0x00000018 + iVar2));\u000a          uVar8 = *(uint *)(&stack0x00000020 + iVar2);\u000a          if (iVar9 == 0) {\u000a            uVar6 = *(uint *)(&stack0x00000024 + iVar2);\u000a            uVar3 = *(uint *)(&stack0xfffffff4 + iVar2);\u000a            iVar5 = *(int *)(&stack0x00000008 + iVar2);\u000a            if ((uVar6 & uVar3) != 0) goto LAB_00033262;\u000a            goto LAB_000332b4;\u000a          }\u000a          uVar6 = *(uint *)(&stack0x00000024 + iVar2);\u000a          iVar5 = *(int *)(&stack0x00000008 + iVar2);\u000a        }\u000a      }\u000a      else {\u000a        uVar6 = *(uint *)(&stack0x00000024 + iVar2);\u000a      }\u000a      uVar4 = *(undefined4 *)(&stack0x0000000c + iVar2);\u000a      if (iVar5 == 0) {\u000a        uVar4 = *(undefined4 *)(&stack0x00000014 + iVar2);\u000a      }\u000a      *(int *)((int)&uStack24 + iVar2) = iVar5;\u000a      iVar9 = *(int *)((int)&uStack24 + iVar2);\u000a      if (iVar5 == 0) {\u000a        uVar6 = *(uint *)(&stack0x00000010 + iVar2);\u000a      }\u000a      *(uint *)(&stack0x00000024 + iVar2) = -(uVar8 & 0xff);\u000a      *(uint *)((int)&uStack24 + iVar2) = uVar8;\u000a      uVar3 = *(uint *)((int)&uStack24 + iVar2);\u000a      if (iVar9 == 0) {\u000a        uVar3 = *(uint *)(&stack0x00000024 + iVar2);\u000a      }\u000a      *(uint *)(&stack0x00000010 + iVar2) = uVar6;\u000a      *(undefined4 *)(&stack0x00000014 + iVar2) = uVar4;\u000a      uVar6 = *(uint *)(&stack0x00000004 + iVar2);\u000a    }\u000a    else {\u000a      uVar3 = uVar8 & 0xff;\u000a    }\u000a    uVar3 = uVar3 + uVar10;\u000a    uVar7 = uVar7 + 1;\u000a    *(uint *)((int)&uStack24 + iVar2) = uVar7;\u000a    if (7 < (*(uint *)((int)&uStack24 + iVar2) & 0xff)) {\u000a      if ((*(uint *)(&stack0x00000014 + iVar2) & 0xff) != 0) {\u000a        uVar3 = *(uint *)(&stack0x00000010 + iVar2);\u000a      }\u000a      *(uint *)((int)&uStack24 + iVar2) = uVar3;\u000a      if ((*(uint *)((int)&uStack24 + iVar2) & 0xff) <= uVar6) {\u000a        *(uint *)((int)&uStack24 + iVar2) = uVar6;\u000a        uVar3 = *(uint *)((int)&uStack24 + iVar2);\u000a      }\u000a      if (**(int **)(DAT_0003332c + 0x33310) != **ppiVar11) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __stack_chk_fail();\u000a      }\u000a      return uVar3 & 0xff;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p1767
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nldr r6,[0x00033330]\nadd sp,r6\nadd r4,sp,#0x3c\nstr r4,[sp,#0x0]\nstr r2,[sp,#0x2c]\nadd r2,sp,#0xc\nstmia r2!,{ r0, r1, r3 }\nldr r0,[0x00033328]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r4,#0x0]\nmov r0,#0x1\nstr r0,[sp,#0x20]\nlsl r1,r0,#0xb\nadd r0,sp,#0x40\nbl 0x00037a40\nmov r1,#0xff\nstr r1,[sp,#0x30]\nmov r0,#0x80\nmov r4,#0x0\nldr r2,[0x00033334]\nadd r2,sp\nldr r2,[r2,#0x0]\nstr r2,[sp,#0x18]\nstr r4,[sp,#0x28]\npush { r0 }\npop { r5 }\nstr r1,[sp,#0x24]\npush { r0 }\npop { r6 }\nldr r1,[sp,#0x30]\nand r6,r1\nlsr r5,r5,#0x1\ncmp r6,r2\nbls 0x000331d4\nstr r5,[sp,#0x34]\nstr r0,[sp,#0x38]\nlsl r5,r6,#0x3\nadd r0,sp,#0x40\nldr r0,[r0,r5]\ncmp r0,#0x0\nbeq 0x000331da\nadd r0,sp,#0x40\nadd r0,r0,r5\nldr r0,[r0,#0x4]\nb 0x000331f6\nmov r1,#0xff\nand r1,r5\nb 0x000332e0\nadd r1,sp,#0x40\nstr r1,[sp,#0x1c]\nmov r0,#0x1\nstr r0,[r1,r5]\nmov r3,#0xff\nldr r0,[sp,#0x38]\nand r3,r0\nadd r2,sp,#0xc\nldmia r2,{ r0, r1, r2 }\nbl 0x00033cb4\nldr r1,[sp,#0x1c]\nadd r1,r1,r5\nstr r0,[r1,#0x4]\nldr r1,[sp,#0x2c]\nbl 0x00037a80\nmov r1,#0x0\ncmp r0,#0x0\nldr r5,[sp,#0x34]\nbeq 0x00033208\nldr r3,[sp,#0x38]\nb 0x000332b6\nmov r2,#0xff\nldr r0,[sp,#0x38]\nand r0,r2\ncmp r0,#0xff\nbeq 0x00033262\nadd r3,r6,#0x1\npush { r3 }\npop { r0 }\nand r0,r2\nlsl r5,r0,#0x3\nadd r0,sp,#0x40\nldr r0,[r0,r5]\ncmp r0,#0x0\nbeq 0x00033230\nstr r2,[sp,#0x8]\nstr r1,[sp,#0x1c]\nadd r0,sp,#0x40\nadd r0,r0,r5\nldr r0,[r0,#0x4]\nb 0x0003324c\nstr r1,[sp,#0x1c]\nadd r1,sp,#0x40\nstr r1,[sp,#0x4]\nldr r0,[sp,#0x20]\nstr r0,[r1,r5]\nand r3,r2\nstr r2,[sp,#0x8]\nadd r2,sp,#0xc\nldmia r2,{ r0, r1, r2 }\nbl 0x00033cb4\nldr r1,[sp,#0x4]\nadd r1,r1,r5\nstr r0,[r1,#0x4]\nldr r1,[sp,#0x2c]\nbl 0x00037a80\ncmp r0,#0x0\nldr r5,[sp,#0x34]\nbne 0x00033284\nldr r3,[sp,#0x38]\nldr r2,[sp,#0x8]\ntst r3,r2\nldr r1,[sp,#0x1c]\nbeq 0x000332b4\nstr r5,[sp,#0x34]\npush { r6 }\npop { r3 }\nadd r3,#0xff\npush { r3 }\npop { r0 }\nand r0,r2\nlsl r5,r0,#0x3\nadd r0,sp,#0x40\nldr r0,[r0,r5]\ncmp r0,#0x0\nbeq 0x0003328a\nstr r1,[sp,#0x1c]\nadd r0,sp,#0x40\nadd r0,r0,r5\nldr r0,[r0,#0x4]\nb 0x000332a4\nldr r3,[sp,#0x38]\nldr r1,[sp,#0x1c]\nb 0x000332b6\nstr r1,[sp,#0x1c]\nadd r1,sp,#0x40\nstr r1,[sp,#0x8]\nmov r0,#0x1\nstr r0,[r1,r5]\nand r3,r2\nadd r2,sp,#0xc\nldmia r2,{ r0, r1, r2 }\nbl 0x00033cb4\nldr r1,[sp,#0x8]\nadd r1,r1,r5\nstr r0,[r1,#0x4]\nldr r1,[sp,#0x2c]\nbl 0x00037a80\ncmp r0,#0x0\nldr r3,[sp,#0x38]\nldr r5,[sp,#0x34]\nldr r1,[sp,#0x1c]\nbne 0x000332b6\nldr r1,[sp,#0x20]\ncmp r1,#0x0\nldr r0,[sp,#0x20]\nbne 0x000332be\nldr r0,[sp,#0x28]\ncmp r1,#0x0\npush { r1 }\npop { r2 }\nbne 0x000332c8\nldr r3,[sp,#0x24]\nmov r1,#0xff\nand r1,r5\nrsb r1,r1\nstr r1,[sp,#0x38]\ncmp r2,#0x0\npush { r5 }\npop { r1 }\nbne 0x000332da\nldr r1,[sp,#0x38]\nstr r3,[sp,#0x24]\nstr r0,[sp,#0x28]\nldr r2,[sp,#0x18]\nadd r0,r1,r6\nadd r4,#0x1\nmov r3,#0xff\npush { r4 }\npop { r1 }\nand r1,r3\ncmp r1,#0x8\nbcs 0x000332f2\nb 0x000331b0\nldr r1,[sp,#0x28]\ntst r1,r3\nbeq 0x000332fa\nldr r0,[sp,#0x24]\npush { r0 }\npop { r1 }\nand r1,r3\ncmp r1,r2\nbhi 0x00033308\npush { r2 }\npop { r0 }\nand r0,r3\nldr r1,[0x0003332c]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r2,[r1,#0x0]\nldr r1,[sp,#0x0]\nldr r1,[r1,#0x0]\nsub r1,r2,r1\ncmp r1,#0x0\nbne 0x00033324\nsub r4,r7,#0x7\nsub r4,#0x5\nmov sp,r4\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p1768
S'f0 b5\n03 af\n6e 4e\nb5 44\n0f ac\n00 94\n0b 92\n03 aa\n0b c2\n69 48\n78 44\n00 68\n00 68\n20 60\n01 20\n08 90\nc1 02\n10 a8\n04 f0 54 fc\nff 21\n0c 91\n80 20\n00 24\n64 4a\n6a 44\n12 68\n06 92\n0a 94\n01 b4\n20 bc\n09 91\n01 b4\n40 bc\n0c 99\n0e 40\n6d 08\n96 42\n0a d9\n0d 95\n0e 90\nf5 00\n10 a8\n40 59\n00 28\n06 d0\n10 a8\n40 19\n40 68\n10 e0\nff 21\n29 40\n82 e0\n10 a9\n07 91\n01 20\n48 51\nff 23\n0e 98\n03 40\n03 aa\n07 ca\n00 f0 62 fd\n07 99\n49 19\n48 60\n0b 99\n04 f0 42 fc\n00 21\n00 28\n0d 9d\n01 d0\n0e 9b\n56 e0\nff 22\n0e 98\n10 40\nff 28\n27 d0\n73 1c\n08 b4\n01 bc\n10 40\nc5 00\n10 a8\n40 59\n00 28\n05 d0\n02 92\n07 91\n10 a8\n40 19\n40 68\n0d e0\n07 91\n10 a9\n01 91\n08 98\n48 51\n13 40\n02 92\n03 aa\n07 ca\n00 f0 37 fd\n01 99\n49 19\n48 60\n0b 99\n04 f0 17 fc\n00 28\n0d 9d\n15 d1\n0e 9b\n02 9a\n13 42\n07 99\n28 d0\n0d 95\n40 b4\n08 bc\nff 33\n08 b4\n01 bc\n10 40\nc5 00\n10 a8\n40 59\n00 28\n07 d0\n07 91\n10 a8\n40 19\n40 68\n0f e0\n0e 9b\n07 99\n15 e0\n07 91\n10 a9\n02 91\n01 20\n48 51\n13 40\n03 aa\n07 ca\n00 f0 0b fd\n02 99\n49 19\n48 60\n0b 99\n04 f0 eb fb\n00 28\n0e 9b\n0d 9d\n07 99\n00 d1\n08 99\n00 29\n08 98\n00 d1\n0a 98\n00 29\n02 b4\n04 bc\n00 d1\n09 9b\nff 21\n29 40\n49 42\n0e 91\n00 2a\n20 b4\n02 bc\n00 d1\n0e 99\n09 93\n0a 90\n06 9a\n88 19\n01 34\nff 23\n10 b4\n02 bc\n19 40\n08 29\n00 d2\n5e e7\n0a 99\n19 42\n00 d0\n09 98\n01 b4\n02 bc\n19 40\n91 42\n01 d8\n04 b4\n01 bc\n18 40\n08 49\n79 44\n09 68\n0a 68\n00 99\n09 68\n51 1a\n00 29\n03 d1\nfc 1f\n05 3c\na5 46\nf0 bd\n04 f0 44 fb\n'
p1769
S'.text:00033170\n.text:00033172\n.text:00033174\n.text:00033176\n.text:00033178\n.text:0003317a\n.text:0003317c\n.text:0003317e\n.text:00033180\n.text:00033182\n.text:00033184\n.text:00033186\n.text:00033188\n.text:0003318a\n.text:0003318c\n.text:0003318e\n.text:00033190\n.text:00033192\n.text:00033194\n.text:00033198\n.text:0003319a\n.text:0003319c\n.text:0003319e\n.text:000331a0\n.text:000331a2\n.text:000331a4\n.text:000331a6\n.text:000331a8\n.text:000331aa\n.text:000331ac\n.text:000331ae\n.text:000331b0\n.text:000331b2\n.text:000331b4\n.text:000331b6\n.text:000331b8\n.text:000331ba\n.text:000331bc\n.text:000331be\n.text:000331c0\n.text:000331c2\n.text:000331c4\n.text:000331c6\n.text:000331c8\n.text:000331ca\n.text:000331cc\n.text:000331ce\n.text:000331d0\n.text:000331d2\n.text:000331d4\n.text:000331d6\n.text:000331d8\n.text:000331da\n.text:000331dc\n.text:000331de\n.text:000331e0\n.text:000331e2\n.text:000331e4\n.text:000331e6\n.text:000331e8\n.text:000331ea\n.text:000331ec\n.text:000331f0\n.text:000331f2\n.text:000331f4\n.text:000331f6\n.text:000331f8\n.text:000331fc\n.text:000331fe\n.text:00033200\n.text:00033202\n.text:00033204\n.text:00033206\n.text:00033208\n.text:0003320a\n.text:0003320c\n.text:0003320e\n.text:00033210\n.text:00033212\n.text:00033214\n.text:00033216\n.text:00033218\n.text:0003321a\n.text:0003321c\n.text:0003321e\n.text:00033220\n.text:00033222\n.text:00033224\n.text:00033226\n.text:00033228\n.text:0003322a\n.text:0003322c\n.text:0003322e\n.text:00033230\n.text:00033232\n.text:00033234\n.text:00033236\n.text:00033238\n.text:0003323a\n.text:0003323c\n.text:0003323e\n.text:00033240\n.text:00033242\n.text:00033246\n.text:00033248\n.text:0003324a\n.text:0003324c\n.text:0003324e\n.text:00033252\n.text:00033254\n.text:00033256\n.text:00033258\n.text:0003325a\n.text:0003325c\n.text:0003325e\n.text:00033260\n.text:00033262\n.text:00033264\n.text:00033266\n.text:00033268\n.text:0003326a\n.text:0003326c\n.text:0003326e\n.text:00033270\n.text:00033272\n.text:00033274\n.text:00033276\n.text:00033278\n.text:0003327a\n.text:0003327c\n.text:0003327e\n.text:00033280\n.text:00033282\n.text:00033284\n.text:00033286\n.text:00033288\n.text:0003328a\n.text:0003328c\n.text:0003328e\n.text:00033290\n.text:00033292\n.text:00033294\n.text:00033296\n.text:00033298\n.text:0003329a\n.text:0003329e\n.text:000332a0\n.text:000332a2\n.text:000332a4\n.text:000332a6\n.text:000332aa\n.text:000332ac\n.text:000332ae\n.text:000332b0\n.text:000332b2\n.text:000332b4\n.text:000332b6\n.text:000332b8\n.text:000332ba\n.text:000332bc\n.text:000332be\n.text:000332c0\n.text:000332c2\n.text:000332c4\n.text:000332c6\n.text:000332c8\n.text:000332ca\n.text:000332cc\n.text:000332ce\n.text:000332d0\n.text:000332d2\n.text:000332d4\n.text:000332d6\n.text:000332d8\n.text:000332da\n.text:000332dc\n.text:000332de\n.text:000332e0\n.text:000332e2\n.text:000332e4\n.text:000332e6\n.text:000332e8\n.text:000332ea\n.text:000332ec\n.text:000332ee\n.text:000332f0\n.text:000332f2\n.text:000332f4\n.text:000332f6\n.text:000332f8\n.text:000332fa\n.text:000332fc\n.text:000332fe\n.text:00033300\n.text:00033302\n.text:00033304\n.text:00033306\n.text:00033308\n.text:0003330a\n.text:0003330c\n.text:0003330e\n.text:00033310\n.text:00033312\n.text:00033314\n.text:00033316\n.text:00033318\n.text:0003331a\n.text:0003331c\n.text:0003331e\n.text:00033320\n.text:00033322\n.text:00033324\n'
p1770
tp1771
sS'__lesf2'
p1772
(S'\n__stdcall __lesf2()\n'
p1773
V\u000auint __lesf2(uint uParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  \u000a  uVar1 = uParm1 * 2;\u000a  uVar2 = uParm2 * 2;\u000a  bVar5 = ~((int)uVar1 >> 0x18) == 0;\u000a  if (!bVar5) {\u000a    bVar5 = ~((int)uVar2 >> 0x18) == 0;\u000a  }\u000a  if ((bVar5) &&\u000a     (((~((int)uVar1 >> 0x18) == 0 && ((uParm1 & 0x7fffff) != 0)) ||\u000a      ((~((int)uVar2 >> 0x18) == 0 && ((uParm2 & 0x7fffff) != 0)))))) {\u000a    return 1;\u000a  }\u000a  uVar3 = uVar1 | uParm2 & 0x7fffffff;\u000a  bVar5 = uVar3 == 0;\u000a  if (!bVar5) {\u000a    uVar3 = uParm1 ^ uParm2;\u000a    bVar5 = uVar3 == 0;\u000a  }\u000a  bVar4 = -1 < (int)uVar3;\u000a  if (bVar4) {\u000a    uParm1 = uVar1 + uParm2 * -2;\u000a    bVar5 = uParm1 == 0;\u000a  }\u000a  if ((bVar4 && uVar1 >= uVar2) && !bVar5) {\u000a    uParm1 = (int)uParm2 >> 0x1f;\u000a  }\u000a  if (!bVar4 || uVar1 < uVar2) {\u000a    uParm1 = ~((int)uParm2 >> 0x1f);\u000a  }\u000a  if (!bVar5) {\u000a    uParm1 = uParm1 | 1;\u000a  }\u000a  return uParm1;\u000a}\u000a\u000a
p1774
S'mov r12,#0x1\nb 0x00036234\n'
p1775
S'01 c0 a0 e3\n00 00 00 ea\n'
p1776
S'.text:00036228\n.text:0003622c\n'
p1777
tp1778
sS'lame_get_experimentalZ'
p1779
(S'\n__stdcall lame_get_experimentalZ(lame_global_flags * gfp)\n'
p1780
V\u000aint lame_get_experimentalZ(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  char unaff_r5;\u000a  char *unaff_r6;\u000a  char *pcVar6;\u000a  int *piStack00000004;\u000a  int in_stack_00000008;\u000a  int in_stack_0000000c;\u000a  int in_stack_00000018;\u000a  \u000a  iVar3 = 0x1c;\u000a  if (*(int *)(in_stack_0000000c + iRam0001e778) == 0) {\u000a    iVar3 = 0x1e;\u000a  }\u000a  piStack00000004 = (int *)(in_stack_0000000c + iRam0001e778);\u000a  pcVar5 = *(char **)(in_stack_0000000c + iRam0001e77c);\u000a  do {\u000a    pcVar6 = unaff_r6;\u000a    iVar2 = 0;\u000a    while( true ) {\u000a      iVar1 = iVar2;\u000a      if ((pcVar5 != (char *)0x0) && (*pcVar5 != 0)) break;\u000a      pcVar6[-iVar1] = unaff_r5;\u000a      iVar2 = iVar1 + -1;\u000a      if (-iVar2 == iVar3) {\u000a        pcVar4 = pcVar6 + -iVar2;\u000a        goto LAB_0001e720;\u000a      }\u000a    }\u000a    pcVar4 = pcVar6 + -iVar1;\u000a    *pcVar4 = *pcVar5;\u000a    iVar3 = iVar3 + iVar1 + -1;\u000a    pcVar5 = pcVar5 + 1;\u000a    unaff_r6 = pcVar4 + 1;\u000a    if (iVar3 == 0) {\u000a      pcVar4 = pcVar4 + 1;\u000aLAB_0001e720:\u000a      if (*piStack00000004 != 0) {\u000a        *pcVar4 = 0;\u000a        (pcVar6 + -iVar1)[2] = (char)*piStack00000004;\u000a        pcVar4 = pcVar6 + -iVar1 + 3;\u000a      }\u000a      *pcVar4 = (char)*(undefined4 *)(in_stack_0000000c + iRam0001e780);\u000a      if (**(int **)(iRam0001e784 + 0x1e748) == in_stack_00000018) {\u000a        return in_stack_00000008;\u000a      }\u000a                    /* WARNING: Subroutine does not return */\u000a      __stack_chk_fail();\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p1781
S'ldr r0,[0x0001e778]\nldr r4,[sp,#0xc]\nldr r3,[r4,r0]\nmov r2,#0x1c\nmov r1,#0x1e\ncmp r3,#0x0\nbne 0x0001e6dc\npush { r1 }\npop { r2 }\nadd r0,r4,r0\nstr r0,[sp,#0x4]\nldr r0,[0x0001e77c]\nldr r4,[r4,r0]\npush { r6 }\n'
p1782
S'2b 48\n03 9c\n23 58\n1c 22\n1e 21\n00 2b\n01 d1\n02 b4\n04 bc\n20 18\n01 90\n26 48\n24 58\n40 b4\n'
p1783
S'.text:0001e6ca\n.text:0001e6cc\n.text:0001e6ce\n.text:0001e6d0\n.text:0001e6d2\n.text:0001e6d4\n.text:0001e6d6\n.text:0001e6d8\n.text:0001e6da\n.text:0001e6dc\n.text:0001e6de\n.text:0001e6e0\n.text:0001e6e2\n.text:0001e6e4\n'
p1784
tp1785
sS'lame_get_experimentalX'
p1786
(S'\n__stdcall lame_get_experimentalX(lame_global_flags * gfp)\n'
p1787
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000aint lame_get_experimentalX(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  char *in_r1;\u000a  char *pcVar2;\u000a  int in_r2;\u000a  lame_global_flags *plVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int unaff_r4;\u000a  undefined unaff_r5;\u000a  lame_global_flags *plVar6;\u000a  lame_global_flags *plVar7;\u000a  int *piStack00000004;\u000a  int in_stack_00000008;\u000a  int in_stack_0000000c;\u000a  int in_stack_00000018;\u000a  \u000a  while( true ) {\u000a    iVar4 = 0;\u000a    while ((in_r1 == (char *)0x0 || (*in_r1 == 0))) {\u000a      *(undefined *)&((lame_global_flags *)((int)gfp - iVar4))->class_id = unaff_r5;\u000a      iVar4 = iVar4 + -1;\u000a      if (unaff_r4 == iVar4) {\u000a        gfp = (lame_global_flags *)((int)gfp - iVar4);\u000a        goto LAB_0001e63c;\u000a      }\u000a    }\u000a    plVar3 = (lame_global_flags *)((int)gfp - iVar4);\u000a    *(char *)&plVar3->class_id = *in_r1;\u000a    gfp = (lame_global_flags *)((int)&plVar3->class_id + 1);\u000a    in_r2 = in_r2 + iVar4 + -1;\u000a    in_r1 = in_r1 + 1;\u000a    if (in_r2 == 0) break;\u000a    unaff_r4 = -in_r2;\u000a  }\u000a  gfp = (lame_global_flags *)((int)&plVar3->class_id + 1);\u000aLAB_0001e63c:\u000a  pcVar2 = *(char **)(in_stack_0000000c + _DAT_0001e76c);\u000a  iVar4 = 0x1e;\u000a  do {\u000a    iVar5 = 0;\u000a    while ((pcVar2 == (char *)0x0 || (*pcVar2 == 0))) {\u000a      *(undefined *)&((lame_global_flags *)((int)gfp - iVar5))->class_id = unaff_r5;\u000a      iVar5 = iVar5 + -1;\u000a      if (-iVar5 == iVar4) {\u000a        gfp = (lame_global_flags *)((int)gfp - iVar5);\u000a        goto LAB_0001e674;\u000a      }\u000a    }\u000a    plVar3 = (lame_global_flags *)((int)gfp - iVar5);\u000a    *(char *)&plVar3->class_id = *pcVar2;\u000a    gfp = (lame_global_flags *)((int)&plVar3->class_id + 1);\u000a    iVar4 = iVar4 + iVar5 + -1;\u000a    pcVar2 = pcVar2 + 1;\u000a  } while (iVar4 != 0);\u000a  gfp = (lame_global_flags *)((int)&plVar3->class_id + 1);\u000aLAB_0001e674:\u000a  piStack00000004 = (int *)ram0x0001e770;\u000a  sprintf(&stack0x00000010,(char *)(iRam0001e774 + 0x1e684),\u000a          *(undefined4 *)(in_stack_0000000c + ram0x0001e770));\u000a  pcVar2 = &stack0x00000010;\u000a  if (*(char **)(in_stack_0000000c + (int)piStack00000004) == (char *)0x0) {\u000a    pcVar2 = *(char **)(in_stack_0000000c + (int)piStack00000004);\u000a  }\u000a  iVar4 = 4;\u000a  do {\u000a    iVar5 = 0;\u000a    while ((pcVar2 == (char *)0x0 || (*pcVar2 == 0))) {\u000a      *(undefined *)&((lame_global_flags *)((int)gfp - iVar5))->class_id = unaff_r5;\u000a      iVar5 = iVar5 + -1;\u000a      if (-iVar5 == iVar4) {\u000a        iVar4 = 0x1c;\u000a        if (*(int *)(in_stack_0000000c + iRam0001e778) == 0) {\u000a          iVar4 = 0x1e;\u000a        }\u000a        piStack00000004 = (int *)(in_stack_0000000c + iRam0001e778);\u000a        pcVar2 = *(char **)(in_stack_0000000c + iRam0001e77c);\u000a        plVar3 = (lame_global_flags *)((int)gfp - iVar5);\u000a        goto LAB_0001e6e4;\u000a      }\u000a    }\u000a    *(char *)&((lame_global_flags *)((int)gfp - iVar5))->class_id = *pcVar2;\u000a    gfp = (lame_global_flags *)((int)&((lame_global_flags *)((int)gfp - iVar5))->class_id + 1);\u000a    iVar4 = iVar4 + iVar5 + -1;\u000a    pcVar2 = pcVar2 + 1;\u000a    if (iVar4 == 0) {\u000a      iVar4 = lame_get_experimentalZ((lame_global_flags *)0x0);\u000a      return iVar4;\u000a    }\u000a  } while( true );\u000aLAB_0001e6e4:\u000a  plVar6 = plVar3;\u000a  iVar5 = 0;\u000a  while( true ) {\u000a    iVar1 = iVar5;\u000a    if ((pcVar2 != (char *)0x0) && (*pcVar2 != 0)) break;\u000a    *(undefined *)&((lame_global_flags *)((int)plVar6 - iVar1))->class_id = unaff_r5;\u000a    iVar5 = iVar1 + -1;\u000a    if (-iVar5 == iVar4) {\u000a      plVar3 = (lame_global_flags *)((int)plVar6 - iVar5);\u000a      goto LAB_0001e720;\u000a    }\u000a  }\u000a  plVar7 = (lame_global_flags *)((int)plVar6 - iVar1);\u000a  *(char *)&plVar7->class_id = *pcVar2;\u000a  iVar4 = iVar4 + iVar1 + -1;\u000a  pcVar2 = pcVar2 + 1;\u000a  plVar3 = (lame_global_flags *)((int)&plVar7->class_id + 1);\u000a  if (iVar4 == 0) {\u000a    plVar3 = (lame_global_flags *)((int)&plVar7->class_id + 1);\u000aLAB_0001e720:\u000a    if (*piStack00000004 != 0) {\u000a      *(undefined *)&plVar3->class_id = 0;\u000a      *(undefined *)((int)&((lame_global_flags *)((int)plVar6 - iVar1))->class_id + 2) =\u000a           (char)*piStack00000004;\u000a      plVar3 = (lame_global_flags *)\u000a               ((int)&((lame_global_flags *)((int)plVar6 - iVar1))->class_id + 3);\u000a    }\u000a    *(char *)&plVar3->class_id = (char)*(undefined4 *)(in_stack_0000000c + iRam0001e780);\u000a    if (**(int **)(iRam0001e784 + 0x1e748) == in_stack_00000018) {\u000a      return in_stack_00000008;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  goto LAB_0001e6e4;\u000a}\u000a\u000a
p1788
S'mov r3,#0x0\n'
p1789
S'00 23\n'
p1790
S'.text:0001e60e\n'
p1791
tp1792
sS'__floatsisf'
p1793
(S'\n__stdcall __floatsisf()\n'
p1794
V\u000avoid __floatsisf(void)\u000a\u000a{\u000a  (*(format_bitstream + DAT_00037b3c))();\u000a  return;\u000a}\u000a\u000a
p1795
S'ldr r12,[0x37b3c]\nadd pc,r12,pc\n'
p1796
S'00 c0 9f e5\n0f f0 8c e0\n'
p1797
S'.text:00037b34\n.text:00037b38\n'
p1798
tp1799
sS'lame_set_ATHlower'
p1800
(S'\n__stdcall lame_set_ATHlower()\n'
p1801
V\u000avoid lame_set_ATHlower(void)\u000a\u000a{\u000a  (*(lame_set_ATHcurve + DAT_0003818c))();\u000a  return;\u000a}\u000a\u000a
p1802
S'ldr r12,[0x3818c]\nadd pc,r12,pc\n'
p1803
S'00 c0 9f e5\n0f f0 8c e0\n'
p1804
S'.text:00038184\n.text:00038188\n'
p1805
tp1806
sS'id3tag_pad_v2'
p1807
(S'\n__stdcall id3tag_pad_v2()\n'
p1808
V\u000avoid id3tag_pad_v2(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = *(int *)(iParm1 + 0x120);\u000a  *(uint *)(iVar1 + DAT_0001ca38) = *(uint *)(iVar1 + DAT_0001ca38) & 0xffffffd9 | 0x22;\u000a  *(undefined4 *)(iVar1 + DAT_0001ca3c) = 0x80;\u000a  return;\u000a}\u000a\u000a
p1809
S'mov r1,#0x9\nlsl r1,r1,#0x5\nldr r0,[r0,r1]\nldr r1,[0x0001ca38]\nldr r2,[r0,r1]\nmov r3,#0x26\nmvn r3,r3\nand r3,r2\nmov r2,#0x22\norr r2,r3\nstr r2,[r0,r1]\nldr r1,[0x0001ca3c]\nmov r2,#0x80\nstr r2,[r0,r1]\nbx lr\n'
p1810
S'09 21\n49 01\n40 58\n06 49\n42 58\n26 23\ndb 43\n13 40\n22 22\n1a 43\n42 50\n03 49\n80 22\n42 50\n70 47\n'
p1811
S'.text:0001ca18\n.text:0001ca1a\n.text:0001ca1c\n.text:0001ca1e\n.text:0001ca20\n.text:0001ca22\n.text:0001ca24\n.text:0001ca26\n.text:0001ca28\n.text:0001ca2a\n.text:0001ca2c\n.text:0001ca2e\n.text:0001ca30\n.text:0001ca32\n.text:0001ca34\n'
p1812
tp1813
sS'_Unwind_GetRegionStart'
p1814
(S'\n__stdcall _Unwind_GetRegionStart()\n'
p1815
V\u000aundefined4 _Unwind_GetRegionStart(void)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = unwind_UCB_from_context();\u000a  return *(undefined4 *)(iVar1 + 0x48);\u000a}\u000a\u000a
p1816
S'stmdb sp!,{ r3 lr }\nbl 0x000374d8\nldr r0,[r0,#0x48]\nldmia sp!,{ r3 pc }\n'
p1817
S'08 40 2d e9\n0a ff ff eb\n48 00 90 e5\n08 80 bd e8\n'
p1818
S'.text:000378a4\n.text:000378a8\n.text:000378ac\n.text:000378b0\n'
p1819
tp1820
sS'lame_get_id3v2_tag'
p1821
(S'\n__stdcall lame_get_id3v2_tag()\n'
p1822
V\u000avoid lame_get_id3v2_tag(void)\u000a\u000a{\u000a  (*(add_dummy_byte + DAT_00037d6c))();\u000a  return;\u000a}\u000a\u000a
p1823
S'ldr r12,[0x37d6c]\nadd pc,r12,pc\n'
p1824
S'00 c0 9f e5\n0f f0 8c e0\n'
p1825
S'.text:00037d64\n.text:00037d68\n'
p1826
tp1827
sS'__aeabi_cfcmple'
p1828
(S'\n__stdcall __aeabi_cfcmple()\n'
p1829
V\u000aundefined8 __aeabi_cfcmple(undefined4 uParm1,undefined4 uParm2)\u000a\u000a{\u000a  __eqsf2();\u000a  return CONCAT44(uParm1,uParm2);\u000a}\u000a\u000a
p1830
S'stmdb sp!,{ r0 r1 r2 r3 lr }\nbl 0x00016b7c\ncmp r0,#0x0\ncmnmi r0,#0x0\nldmia sp!,{r0 r1 r2 r3 pc }\n'
p1831
S'0f 40 2d e9\n33 82 ff eb\n00 00 50 e3\n00 00 70 43\n0f 80 bd e8\n'
p1832
S'.text:000362a4\n.text:000362a8\n.text:000362ac\n.text:000362b0\n.text:000362b4\n'
p1833
tp1834
sS'get_psy_version'
p1835
(S'\n__stdcall get_psy_version()\n'
p1836
V\u000aundefined * get_psy_version(void)\u000a\u000a{\u000a  return &UNK_0003502e + DAT_00035030;\u000a}\u000a\u000a
p1837
S'ldr r0,[0x00035030]\nadd r0,pc\nbx lr\n'
p1838
S'01 48\n78 44\n70 47\n'
p1839
S'.text:00035028\n.text:0003502a\n.text:0003502c\n'
p1840
tp1841
sS'divsi3_skip_div0_test'
p1842
(S'\n__stdcall divsi3_skip_div0_test()\n'
p1843
V\u000a/* divsi3_skip_div0_test */\u000a\u000auint divsi3_skip_div0_test(uint uParm1,uint uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  uint uVar6;\u000a  bool in_NG;\u000a  bool bVar7;\u000a  \u000a  uVar6 = uParm1 ^ uParm2;\u000a  if (in_NG) {\u000a    uParm2 = -uParm2;\u000a  }\u000a  if (uParm2 - 1 == 0) {\u000a    if ((int)(uVar6 ^ uParm1) < 0) {\u000a      uParm1 = -uParm1;\u000a    }\u000a    return uParm1;\u000a  }\u000a  uVar5 = uParm1;\u000a  if ((int)uParm1 < 0) {\u000a    uVar5 = -uParm1;\u000a  }\u000a  if (uVar5 <= uParm2) {\u000a    if (uVar5 < uParm2) {\u000a      uParm1 = 0;\u000a    }\u000a    if (uVar5 == uParm2) {\u000a      uParm1 = (int)uVar6 >> 0x1f | 1;\u000a    }\u000a    return uParm1;\u000a  }\u000a  if ((uParm2 & uParm2 - 1) == 0) {\u000a    iVar1 = count_leading_zeroes(uParm2);\u000a    uVar5 = uVar5 >> (0x1fU - iVar1 & 0xff);\u000a    if ((int)uVar6 < 0) {\u000a      uVar5 = -uVar5;\u000a    }\u000a    return uVar5;\u000a  }\u000a  iVar3 = count_leading_zeroes(uParm2);\u000a  iVar1 = count_leading_zeroes(uVar5);\u000a  uParm2 = uParm2 << (iVar3 - iVar1 & 0xffU);\u000a  uVar4 = 1 << (iVar3 - iVar1 & 0xffU);\u000a  uVar2 = 0;\u000a  while( true ) {\u000a    if (uParm2 <= uVar5) {\u000a      uVar5 = uVar5 - uParm2;\u000a      uVar2 = uVar2 | uVar4;\u000a    }\u000a    if (uParm2 >> 1 <= uVar5) {\u000a      uVar5 = uVar5 - (uParm2 >> 1);\u000a      uVar2 = uVar2 | uVar4 >> 1;\u000a    }\u000a    if (uParm2 >> 2 <= uVar5) {\u000a      uVar5 = uVar5 - (uParm2 >> 2);\u000a      uVar2 = uVar2 | uVar4 >> 2;\u000a    }\u000a    if (uParm2 >> 3 <= uVar5) {\u000a      uVar5 = uVar5 - (uParm2 >> 3);\u000a      uVar2 = uVar2 | uVar4 >> 3;\u000a    }\u000a    bVar7 = uVar5 == 0;\u000a    if (!bVar7) {\u000a      uVar4 = uVar4 >> 4;\u000a      bVar7 = uVar4 == 0;\u000a    }\u000a    if (bVar7) break;\u000a    uParm2 = uParm2 >> 4;\u000a  }\u000a  if ((int)uVar6 < 0) {\u000a    uVar2 = -uVar2;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1844
S'eor r12,r0,r1\nrsbmi r1,r1,#0x0\nsubs r2,r1,#0x1\nbeq 0x000351d0\nmovs r3,r0\nrsbmi r3,r0,#0x0\ncmp r3,r1\nbls 0x000351dc\ntst r1,r2\nbeq 0x000351ec\nclz r2,r1\nclz r0,r3\nsub r0,r2,r0\nmov r2,#0x1\nmov r1,r1, lsl r0\nmov r2,r2, lsl r0\nmov r0,#0x0\ncmp r3,r1\nsubcs r3,r3,r1\norrcs r0,r0,r2\ncmp r3,r1, lsr #0x1\nsubcs r3,r3,r1, lsr #0x1\norrcs r0,r0,r2, lsr #0x1\ncmp r3,r1, lsr #0x2\nsubcs r3,r3,r1, lsr #0x2\norrcs r0,r0,r2, lsr #0x2\ncmp r3,r1, lsr #0x3\nsubcs r3,r3,r1, lsr #0x3\norrcs r0,r0,r2, lsr #0x3\ncmp r3,#0x0\nmovnes r2,r2, lsr #0x4\nmovne r1,r1, lsr #0x4\nbne 0x00035184\ncmp r12,#0x0\nrsbmi r0,r0,#0x0\nbx lr\nteq r12,r0\nrsbmi r0,r0,#0x0\nbx lr\nmovcc r0,#0x0\nmoveq r0,r12, asr #0x1f\norreq r0,r0,#0x1\nbx lr\nclz r2,r1\nrsb r2,r2,#0x1f\ncmp r12,#0x0\nmov r0,r3, lsr r2\nrsbmi r0,r0,#0x0\nbx lr\n'
p1845
S'01 c0 20 e0\n00 10 61 42\n01 20 51 e2\n1f 00 00 0a\n00 30 b0 e1\n00 30 60 42\n01 00 53 e1\n1e 00 00 9a\n02 00 11 e1\n20 00 00 0a\n11 2f 6f e1\n13 0f 6f e1\n00 00 42 e0\n01 20 a0 e3\n11 10 a0 e1\n12 20 a0 e1\n00 00 a0 e3\n01 00 53 e1\n01 30 43 20\n02 00 80 21\na1 00 53 e1\na1 30 43 20\na2 00 80 21\n21 01 53 e1\n21 31 43 20\n22 01 80 21\na1 01 53 e1\na1 31 43 20\na2 01 80 21\n00 00 53 e3\n22 22 b0 11\n21 12 a0 11\nef ff ff 1a\n00 00 5c e3\n00 00 60 42\n1e ff 2f e1\n00 00 3c e1\n00 00 60 42\n1e ff 2f e1\n00 00 a0 33\ncc 0f a0 01\n01 00 80 03\n1e ff 2f e1\n11 2f 6f e1\n1f 20 62 e2\n00 00 5c e3\n33 02 a0 e1\n00 00 60 42\n1e ff 2f e1\n'
p1846
S'.text:00035140\n.text:00035144\n.text:00035148\n.text:0003514c\n.text:00035150\n.text:00035154\n.text:00035158\n.text:0003515c\n.text:00035160\n.text:00035164\n.text:00035168\n.text:0003516c\n.text:00035170\n.text:00035174\n.text:00035178\n.text:0003517c\n.text:00035180\n.text:00035184\n.text:00035188\n.text:0003518c\n.text:00035190\n.text:00035194\n.text:00035198\n.text:0003519c\n.text:000351a0\n.text:000351a4\n.text:000351a8\n.text:000351ac\n.text:000351b0\n.text:000351b4\n.text:000351b8\n.text:000351bc\n.text:000351c0\n.text:000351c4\n.text:000351c8\n.text:000351cc\n.text:000351d0\n.text:000351d4\n.text:000351d8\n.text:000351dc\n.text:000351e0\n.text:000351e4\n.text:000351e8\n.text:000351ec\n.text:000351f0\n.text:000351f4\n.text:000351f8\n.text:000351fc\n.text:00035200\n'
p1847
tp1848
sS'id3v2_add_ucs2'
p1849
(S'\n__stdcall id3v2_add_ucs2(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p1850
V\u000aundefined4\u000aid3v2_add_ucs2(int param_1,int param_2,undefined4 param_3,short *param_4,undefined4 param_5)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  short *psVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  short *psVar7;\u000a  undefined4 *puVar8;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  \u000a  if (param_1 == 0) {\u000a    return 0xffffff01;\u000a  }\u000a  iVar5 = *(int *)(param_1 + 0x120);\u000a  if (iVar5 == 0) {\u000a    return 0xffffff01;\u000a  }\u000a  puVar1 = *(undefined4 **)(iVar5 + DAT_0001d0ac);\u000a  puVar9 = (undefined4 *)(iVar5 + DAT_0001d0ac);\u000a  while ((puVar8 = (undefined4 *)0x0, puVar1 != (undefined4 *)0x0 &&\u000a         (puVar8 = puVar1, puVar1[1] != param_2))) {\u000a    puVar1 = (undefined4 *)*puVar1;\u000a  }\u000a  if (DAT_0001d0b0 < param_2) {\u000a    if (DAT_0001d0b4 < param_2) {\u000a      if ((param_2 != DAT_0001d0b8) && (iVar2 = DAT_0001d0c0, param_2 != DAT_0001d0bc))\u000a      goto LAB_0001cfbc;\u000a    }\u000a    else {\u000a      if ((param_2 != DAT_0001d0c4) && (iVar2 = DAT_0001d0cc, param_2 != DAT_0001d0c8))\u000a      goto LAB_0001cfbc;\u000a    }\u000a  }\u000a  else {\u000a    if (DAT_0001d0d0 < param_2) {\u000a      if ((param_2 != DAT_0001d0d4) && (iVar2 = DAT_0001d0dc, param_2 != DAT_0001d0d8))\u000a      goto LAB_0001cfbc;\u000a    }\u000a    else {\u000a      if ((param_2 != DAT_0001d0e0) && (iVar2 = DAT_0001d0e8, param_2 != DAT_0001d0e4)) {\u000aLAB_0001cfbc:\u000a        if (param_2 != iVar2) {\u000a          if (puVar8 != (undefined4 *)0x0) {\u000aLAB_0001d064:\u000a            puVar8[1] = param_2;\u000a            setLang(puVar8 + 2,param_3);\u000a            uVar3 = local_ucs2_strdup(puVar8 + 3,param_4);\u000a            puVar8[4] = uVar3;\u000a            puVar8[5] = 1;\u000a            uVar3 = local_ucs2_strdup(puVar8 + 6,param_5);\u000a            puVar8[7] = uVar3;\u000a            puVar8[8] = 1;\u000a            *(uint *)(iVar5 + DAT_0001d0f0) = *(uint *)(iVar5 + DAT_0001d0f0) | 3;\u000a            return 0;\u000a          }\u000a          goto LAB_0001d036;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  if (puVar8 != (undefined4 *)0x0) {\u000a    do {\u000a      iVar2 = isSameLang(puVar8 + 2,param_3);\u000a      if (iVar2 != 0) {\u000a        uVar10 = puVar8[4];\u000a        if (puVar8[5] == 1) {\u000a          if (uVar10 == 0) goto LAB_0001d064;\u000a          if (param_4 != (short *)0x0) {\u000a            psVar4 = (short *)puVar8[3];\u000a            uVar6 = 0;\u000a            psVar7 = param_4;\u000a            while (uVar6 = uVar6 + 1, *psVar4 == *psVar7) {\u000a              psVar4 = psVar4 + 1;\u000a              psVar7 = psVar7 + 1;\u000a              if (uVar10 <= uVar6) goto LAB_0001d064;\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (uVar10 == 0) goto LAB_0001d064;\u000a        }\u000a      }\u000a      puVar1 = puVar9;\u000a      if (puVar8 != (undefined4 *)0x0) {\u000a        puVar1 = puVar8;\u000a      }\u000a      puVar8 = (undefined4 *)*puVar1;\u000a      while( true ) {\u000a        if (puVar8 == (undefined4 *)0x0) goto LAB_0001d036;\u000a        if (puVar8[1] == param_2) break;\u000a        puVar8 = (undefined4 *)*puVar8;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_0001d036:\u000a                    /* WARNING: Subroutine does not return */\u000a  calloc(1,0x24);\u000a}\u000a\u000a
p1851
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\nstr r2,[sp,#0xc]\npush { r1 }\npop { r6 }\nstr r6,[sp,#0x10]\npush { r0 }\npop { r1 }\nmov r0,#0xfe\nmvn r0,r0\ncmp r1,#0x0\nbne 0x0001cf3c\nb 0x0001d0a6\nstr r3,[sp,#0x8]\nmov r2,#0x9\nlsl r2,r2,#0x5\nldr r2,[r1,r2]\ncmp r2,#0x0\nbne 0x0001cf4a\nb 0x0001d0a6\nldr r1,[0x0001d0ac]\nldr r0,[r2,r1]\nadd r5,r2,r1\nmov r4,#0x0\nb 0x0001cf56\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x0001cf64\nldr r1,[r0,#0x4]\ncmp r1,r6\nbne 0x0001cf54\npush { r0 }\npop { r4 }\nldr r0,[0x0001d0b0]\ncmp r6,r0\nbgt 0x0001cf82\nldr r0,[0x0001d0d0]\ncmp r6,r0\nbgt 0x0001cf9a\nstr r2,[sp,#0x4]\nldr r0,[0x0001d0e0]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0e4]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0e8]\nb 0x0001cfbc\nldr r0,[0x0001d0b4]\ncmp r6,r0\nbgt 0x0001cfac\nstr r2,[sp,#0x4]\nldr r0,[0x0001d0c4]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0c8]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0cc]\nb 0x0001cfbc\nstr r2,[sp,#0x4]\nldr r0,[0x0001d0d4]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0d8]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0dc]\nb 0x0001cfbc\nstr r2,[sp,#0x4]\nldr r0,[0x0001d0b8]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0bc]\ncmp r6,r0\nbeq 0x0001cfc0\nldr r0,[0x0001d0c0]\ncmp r6,r0\nbne 0x0001d032\ncmp r4,#0x0\nbeq 0x0001d036\nstr r5,[sp,#0x0]\nb 0x0001cfe6\ncmp r4,#0x0\nldr r5,[sp,#0x0]\npush { r5 }\npop { r0 }\nbeq 0x0001cfd6\npush { r4 }\npop { r0 }\nldr r4,[r0,#0x0]\nb 0x0001cfdc\nldr r4,[r4,#0x0]\ncmp r4,#0x0\nbeq 0x0001d036\nldr r0,[r4,#0x4]\ncmp r0,r6\nbne 0x0001cfda\npush { r4 }\npop { r0 }\nadd r0,#0x8\nldr r1,[sp,#0xc]\nbl 0x0001e86c\ncmp r0,#0x0\nbeq 0x0001cfc8\nldr r5,[r4,#0x10]\nldr r1,[r4,#0x14]\ncmp r1,#0x1\nbne 0x0001d02c\ncmp r5,#0x0\nbeq 0x0001d064\nldr r0,[sp,#0x8]\ncmp r0,#0x0\nbeq 0x0001cfc8\nldr r1,[r4,#0xc]\nmov r2,#0x0\nldr r3,[sp,#0x8]\nadd r2,#0x1\npush { r5 }\npop { r6 }\nldrh r5,[r3,#0x0]\nldrh r0,[r1,#0x0]\ncmp r0,r5\npush { r6 }\npop { r5 }\nldr r6,[sp,#0x10]\nbne 0x0001cfc8\nadd r1,#0x2\nadd r3,#0x2\ncmp r2,r5\nbcc 0x0001d00e\nb 0x0001d064\ncmp r5,#0x0\nbne 0x0001cfc8\nb 0x0001d064\ncmp r4,#0x0\nbne 0x0001d064\nmov r0,#0x1\nmov r1,#0x24\nbl 0x00037cb0\nldr r5,[sp,#0x28]\nstr r6,[r4,#0x4]\npush { r4 }\npop { r0 }\nadd r0,#0x8\nldr r1,[sp,#0xc]\nbl 0x0001e8f8\npush { r4 }\npop { r0 }\nadd r0,#0xc\nldr r1,[sp,#0x8]\nbl 0x0001e934\nmov r6,#0x1\nstr r0,[r4,#0x10]\nstr r6,[r4,#0x14]\npush { r4 }\npop { r0 }\nadd r0,#0x18\npush { r5 }\npop { r1 }\nbl 0x0001e934\nstr r0,[r4,#0x1c]\nstr r6,[r4,#0x20]\nldr r0,[0x0001d0f0]\nldr r3,[sp,#0x4]\nldr r1,[r3,r0]\nmov r2,#0x3\norr r2,r1\nstr r2,[r3,r0]\nmov r0,#0x0\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p1852
S'f0 b5\n03 af\n85 b0\n03 92\n02 b4\n40 bc\n04 96\n01 b4\n02 bc\nfe 20\nc0 43\n00 29\n00 d1\nb4 e0\n02 93\n09 22\n52 01\n8a 58\n00 2a\n00 d1\nad e0\n58 49\n50 58\n55 18\n00 24\n00 e0\n00 68\n00 28\n04 d0\n41 68\nb1 42\nf9 d1\n01 b4\n10 bc\n52 48\n86 42\n0b dc\n59 48\n86 42\n14 dc\n01 92\n5b 48\n86 42\n23 d0\n5a 48\n86 42\n20 d0\n5a 48\n1c e0\n4c 48\n86 42\n11 dc\n01 92\n4e 48\n86 42\n17 d0\n4d 48\n86 42\n14 d0\n4d 48\n10 e0\n01 92\n4d 48\n86 42\n0e d0\n4d 48\n86 42\n0b d0\n4c 48\n07 e0\n01 92\n42 48\n86 42\n05 d0\n41 48\n86 42\n02 d0\n41 48\n86 42\n38 d1\n00 2c\n38 d0\n00 95\n0e e0\n00 2c\n00 9d\n20 b4\n01 bc\n01 d0\n10 b4\n01 bc\n04 68\n00 e0\n24 68\n00 2c\n2a d0\n60 68\nb0 42\nf9 d1\n10 b4\n01 bc\n08 30\n03 99\n01 f0 3d fc\n00 28\ne8 d0\n25 69\n61 69\n01 29\n16 d1\n00 2d\n30 d0\n02 98\n00 28\ndf d0\ne1 68\n00 22\n02 9b\n01 32\n20 b4\n40 bc\n1d 88\n08 88\na8 42\n40 b4\n20 bc\n04 9e\nd2 d1\n02 31\n02 33\naa 42\nf1 d3\n1b e0\n00 2d\ncb d1\n18 e0\n00 2c\n16 d1\n01 20\n24 21\n1a f0 39 fe\n0a 9d\n66 60\n10 b4\n01 bc\n08 30\n03 99\n01 f0 42 fc\n10 b4\n01 bc\n0c 30\n02 99\n01 f0 5a fc\n01 26\n20 61\n66 61\n10 b4\n01 bc\n18 30\n20 b4\n02 bc\n01 f0 50 fc\ne0 61\n26 62\n15 48\n01 9b\n19 58\n03 22\n0a 43\n1a 50\n00 20\n05 b0\nf0 bd\n'
p1853
S'.text:0001cf20\n.text:0001cf22\n.text:0001cf24\n.text:0001cf26\n.text:0001cf28\n.text:0001cf2a\n.text:0001cf2c\n.text:0001cf2e\n.text:0001cf30\n.text:0001cf32\n.text:0001cf34\n.text:0001cf36\n.text:0001cf38\n.text:0001cf3a\n.text:0001cf3c\n.text:0001cf3e\n.text:0001cf40\n.text:0001cf42\n.text:0001cf44\n.text:0001cf46\n.text:0001cf48\n.text:0001cf4a\n.text:0001cf4c\n.text:0001cf4e\n.text:0001cf50\n.text:0001cf52\n.text:0001cf54\n.text:0001cf56\n.text:0001cf58\n.text:0001cf5a\n.text:0001cf5c\n.text:0001cf5e\n.text:0001cf60\n.text:0001cf62\n.text:0001cf64\n.text:0001cf66\n.text:0001cf68\n.text:0001cf6a\n.text:0001cf6c\n.text:0001cf6e\n.text:0001cf70\n.text:0001cf72\n.text:0001cf74\n.text:0001cf76\n.text:0001cf78\n.text:0001cf7a\n.text:0001cf7c\n.text:0001cf7e\n.text:0001cf80\n.text:0001cf82\n.text:0001cf84\n.text:0001cf86\n.text:0001cf88\n.text:0001cf8a\n.text:0001cf8c\n.text:0001cf8e\n.text:0001cf90\n.text:0001cf92\n.text:0001cf94\n.text:0001cf96\n.text:0001cf98\n.text:0001cf9a\n.text:0001cf9c\n.text:0001cf9e\n.text:0001cfa0\n.text:0001cfa2\n.text:0001cfa4\n.text:0001cfa6\n.text:0001cfa8\n.text:0001cfaa\n.text:0001cfac\n.text:0001cfae\n.text:0001cfb0\n.text:0001cfb2\n.text:0001cfb4\n.text:0001cfb6\n.text:0001cfb8\n.text:0001cfba\n.text:0001cfbc\n.text:0001cfbe\n.text:0001cfc0\n.text:0001cfc2\n.text:0001cfc4\n.text:0001cfc6\n.text:0001cfc8\n.text:0001cfca\n.text:0001cfcc\n.text:0001cfce\n.text:0001cfd0\n.text:0001cfd2\n.text:0001cfd4\n.text:0001cfd6\n.text:0001cfd8\n.text:0001cfda\n.text:0001cfdc\n.text:0001cfde\n.text:0001cfe0\n.text:0001cfe2\n.text:0001cfe4\n.text:0001cfe6\n.text:0001cfe8\n.text:0001cfea\n.text:0001cfec\n.text:0001cfee\n.text:0001cff2\n.text:0001cff4\n.text:0001cff6\n.text:0001cff8\n.text:0001cffa\n.text:0001cffc\n.text:0001cffe\n.text:0001d000\n.text:0001d002\n.text:0001d004\n.text:0001d006\n.text:0001d008\n.text:0001d00a\n.text:0001d00c\n.text:0001d00e\n.text:0001d010\n.text:0001d012\n.text:0001d014\n.text:0001d016\n.text:0001d018\n.text:0001d01a\n.text:0001d01c\n.text:0001d01e\n.text:0001d020\n.text:0001d022\n.text:0001d024\n.text:0001d026\n.text:0001d028\n.text:0001d02a\n.text:0001d02c\n.text:0001d02e\n.text:0001d030\n.text:0001d032\n.text:0001d034\n.text:0001d036\n.text:0001d038\n.text:0001d03a\n.text:0001d064\n.text:0001d066\n.text:0001d068\n.text:0001d06a\n.text:0001d06c\n.text:0001d06e\n.text:0001d070\n.text:0001d074\n.text:0001d076\n.text:0001d078\n.text:0001d07a\n.text:0001d07c\n.text:0001d080\n.text:0001d082\n.text:0001d084\n.text:0001d086\n.text:0001d088\n.text:0001d08a\n.text:0001d08c\n.text:0001d08e\n.text:0001d090\n.text:0001d094\n.text:0001d096\n.text:0001d098\n.text:0001d09a\n.text:0001d09c\n.text:0001d09e\n.text:0001d0a0\n.text:0001d0a2\n.text:0001d0a4\n.text:0001d0a6\n.text:0001d0a8\n'
p1854
tp1855
sS'lame_get_in_samplerate'
p1856
(S'\n__stdcall lame_get_in_samplerate(lame_global_flags * gfp)\n'
p1857
V\u000a/* WARNING: Removing unreachable block (ram,0x0001de68) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3d0) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e2) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e6) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e8) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3f8) */\u000a\u000aint lame_get_in_samplerate(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint unaff_r4;\u000a  undefined4 *puVar9;\u000a  undefined *puVar10;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar11;\u000a  undefined4 *puVar12;\u000a  int unaff_r6;\u000a  uint uVar13;\u000a  undefined *puVar14;\u000a  undefined8 uVar15;\u000a  byte *in_stack_00000010;\u000a  lame_global_flags *in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  undefined *puStack00000024;\u000a  uint uStack00000030;\u000a  \u000a  puStack00000024 = (undefined *)0x4;\u000a  if ((unaff_r4 & 4) == 0) {\u000a    if (*(char **)(in_stack_0000001c + DAT_0001e19c) != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      strlen(*(char **)(in_stack_0000001c + DAT_0001e19c));\u000a    }\u000a    if (*(char **)(in_stack_0000001c + DAT_0001e1a0) != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      strlen(*(char **)(in_stack_0000001c + DAT_0001e1a0));\u000a    }\u000a    if (*(char **)(in_stack_0000001c + lame_get_decode_on_the_fly) != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      strlen(*(char **)(in_stack_0000001c + lame_get_decode_on_the_fly));\u000a    }\u000a    if (*(char **)(in_stack_0000001c + DAT_0001e1a8) != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      strlen(*(char **)(in_stack_0000001c + DAT_0001e1a8));\u000a    }\u000a    gfp = (lame_global_flags *)0x0;\u000a    if ((unaff_r4 & 10) != 0) {\u000a      if (*(int *)(unaff_r6 + 4) != -1) {\u000a        uVar15 = __floatunsidf();\u000a        __muldf3((int)((ulonglong)uVar15 >> 0x20),(int)uVar15,0,DAT_0001e1b0);\u000a                    /* WARNING: Subroutine does not return */\u000a        __floatsidf(*(undefined4 *)(in_stack_0000001c + 0x3c));\u000a      }\u000a      gfp_00 = (lame_global_flags *)0xa;\u000a      if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a          (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a         (uVar1 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar1 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar1 * 4));\u000a      }\u000a      puVar9 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a      puVar12 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a      while (puVar9 != (undefined4 *)0x0) {\u000a        uVar1 = puVar9[1];\u000a        uVar13 = 0xff;\u000a        if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, puVar10 = puStack00000024, uVar1 == DAT_0001e1e0)\u000a           ) {\u000a          iVar2 = puVar9[4] * 2 + 0x10;\u000a          if (puVar9[5] != 1) {\u000a            iVar2 = puVar9[4] + 0xf;\u000a          }\u000a          iVar3 = puVar9[7];\u000a          if (puVar9[8] == 1) {\u000a            iVar3 = iVar3 << 1;\u000a          }\u000a          iVar2 = iVar2 + iVar3;\u000a        }\u000a        else {\u000a          do {\u000a            uVar11 = uVar13 & 0x57000000;\u000a            uVar6 = 0;\u000a            if (uVar11 != (uVar13 & uVar1)) {\u000a              uVar6 = uVar13 & uVar1;\u000a            }\u000a            if (uVar11 == 0) {\u000a              uVar6 = uVar11;\u000a            }\u000a            uVar7 = uVar7 | uVar6;\u000a            puVar10 = puVar10 + -1;\u000a            uVar13 = uVar13 << 8;\u000a          } while (puVar10 != (undefined *)0x0);\u000a          if (uVar7 == 0) {\u000a            iVar2 = sizeOfWxxxNode(puVar9);\u000a          }\u000a          else {\u000a            iVar3 = puVar9[7];\u000a            iVar4 = puVar9[4];\u000a            if (puVar9[8] == 1) {\u000a              iVar2 = iVar4 * 2 + 0xd;\u000a              if (iVar4 == 0) {\u000a                iVar2 = 0xb;\u000a              }\u000a              iVar3 = iVar3 << 1;\u000a            }\u000a            else {\u000a              iVar2 = iVar4 + 0xc;\u000a              if (iVar4 == 0) {\u000a                iVar2 = 0xb;\u000a              }\u000a            }\u000a            iVar2 = iVar2 + iVar3;\u000a          }\u000a        }\u000a        gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + iVar2);\u000a        puVar9 = (undefined4 *)*puVar9;\u000a      }\u000a      if ((*in_stack_00000010 & 0x20) != 0) {\u000a        gfp_00 = (lame_global_flags *)\u000a                 ((int)&gfp_00->class_id + *(int *)(in_stack_0000001c + DAT_0001e1e4));\u000a      }\u000a      gfp = gfp_00;\u000a      if ((gfp_00 <= in_stack_00000014) &&\u000a         (gfp = (lame_global_flags *)0x0, in_stack_00000018 != (undefined *)0x0)) {\u000a        *in_stack_00000018 = 0x49;\u000a        in_stack_00000018[1] = 0x44;\u000a        in_stack_00000018[2] = 0x33;\u000a        in_stack_00000018[3] = 3;\u000a        uStack00000030 = 0;\u000a        in_stack_00000018[4] = 0;\u000a        in_stack_00000018[5] = 0;\u000a        uVar1 = (int)&gfp_00->tune_value_a + 2;\u000a        in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a        in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a        in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a        in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a        puVar12 = (undefined4 *)*puVar12;\u000a        puVar10 = in_stack_00000018 + 10;\u000a        while (puVar12 != (undefined4 *)0x0) {\u000a          uVar1 = puVar12[1];\u000a          uVar13 = 0xff;\u000a          iVar2 = 4;\u000a          if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a            iVar2 = puVar12[4] * 2 + 0x10;\u000a            if (puVar12[5] != 1) {\u000a              iVar2 = puVar12[4] + 0xf;\u000a            }\u000a            iVar3 = 0;\u000a            if (puVar12[8] == 1) {\u000a              iVar3 = puVar12[8];\u000a            }\u000a            uVar13 = (puVar12[7] << iVar3) + iVar2;\u000a            iVar2 = 4;\u000a            puVar14 = puVar10;\u000a            puStack00000024 = puVar10;\u000a            if (10 < uVar13) {\u000a              do {\u000a                puVar10[iVar2 + -1] = (char)uVar1;\u000a                iVar2 = iVar2 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar2);\u000a              uVar13 = uVar13 - 10;\u000a              iVar2 = 4;\u000a              do {\u000a                puVar10[iVar2 + 3] = (char)uVar13;\u000a                iVar2 = iVar2 + -1;\u000a                uVar13 = uVar13 >> 8;\u000a              } while (0 < iVar2);\u000a              puVar10[8] = 0;\u000a              puVar10[9] = 0;\u000a              *(bool *)(puVar10 + 10) = puVar12[8] == 1;\u000a              puVar10[0xb] = *(undefined *)(puVar12 + 2);\u000a              puVar10[0xc] = *(undefined *)((int)puVar12 + 9);\u000a              puVar10[0xd] = *(undefined *)((int)puVar12 + 10);\u000a              puVar14 = puVar10 + 0xe;\u000a              if (puVar12[5] == 1) {\u000a                puStack00000024 = puVar10;\u000a                gfp_00 = (lame_global_flags *)writeUcs2s(puVar14,puVar12[3],puVar12[4]);\u000a                *(undefined *)&gfp_00->class_id = 0;\u000a                *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a                iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a                return iVar2;\u000a              }\u000a              iVar2 = puVar12[4];\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar12[3];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar14;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar14 = puVar14 + iVar2;\u000a              }\u000a              *puVar14 = 0;\u000a              puVar14 = puVar14 + 1;\u000a              puStack00000024 = puVar10;\u000a              if (puVar12[8] == 1) {\u000aLAB_0001e338:\u000a                puVar14 = (undefined *)writeUcs2s(puVar14,puVar12[6],puVar12[7]);\u000a              }\u000a              else {\u000a                iVar2 = puVar12[7];\u000a                puStack00000024 = puVar10;\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar12[6];\u000a                  iVar3 = iVar2;\u000a                  puVar8 = puVar14;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                    puStack00000024 = puVar10;\u000a                  } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a                  puVar14 = puVar14 + iVar2;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            do {\u000a              uVar11 = uVar13 & 0x57000000;\u000a              uVar6 = uStack00000030;\u000a              if (uVar11 != (uVar13 & uVar1)) {\u000a                uVar6 = uVar13 & uVar1;\u000a              }\u000a              if (uVar11 == 0) {\u000a                uVar6 = uVar11;\u000a              }\u000a              uVar7 = uVar7 | uVar6;\u000a              iVar2 = iVar2 + -1;\u000a              uVar13 = uVar13 << 8;\u000a            } while (iVar2 != 0);\u000a            if (uVar7 == 0) {\u000a              puStack00000024 = puVar10;\u000a              uVar13 = sizeOfWxxxNode(puVar12);\u000a              iVar2 = 4;\u000a              puVar14 = puVar10;\u000a              if (10 < uVar13) {\u000a                do {\u000a                  puVar10[iVar2 + -1] = (char)uVar1;\u000a                  iVar2 = iVar2 + -1;\u000a                  uVar1 = uVar1 >> 8;\u000a                } while (0 < iVar2);\u000a                uVar13 = uVar13 - 10;\u000a                iVar2 = 4;\u000a                do {\u000a                  puVar10[iVar2 + 3] = (char)uVar13;\u000a                  iVar2 = iVar2 + -1;\u000a                  uVar13 = uVar13 >> 8;\u000a                } while (0 < iVar2);\u000a                puVar10[8] = 0;\u000a                puVar10[9] = 0;\u000a                puVar14 = puVar10 + 10;\u000a                if (puVar12[4] != 0) {\u000a                  *(bool *)(puVar10 + 10) = puVar12[5] == 1;\u000a                  puVar10 = puVar10 + 0xb;\u000a                  if (puVar12[5] == 1) {\u000a                    puVar14 = (undefined *)writeUcs2s(puVar10,puVar12[3],puVar12[4]);\u000a                    *puVar14 = 0;\u000a                    puVar14[1] = 0;\u000a                    puVar14 = puVar14 + 2;\u000a                  }\u000a                  else {\u000a                    iVar2 = puVar12[4];\u000a                    if (iVar2 != 0) {\u000a                      puVar8 = (undefined *)puVar12[3];\u000a                      iVar3 = iVar2;\u000a                      puVar14 = puVar10;\u000a                      do {\u000a                        *puVar14 = *puVar8;\u000a                        puVar14 = puVar14 + 1;\u000a                        puVar8 = puVar8 + 1;\u000a                        iVar3 = iVar3 + -1;\u000a                      } while (iVar3 != 0);\u000a                      puVar10 = puVar10 + iVar2;\u000a                    }\u000a                    *puVar10 = 0;\u000a                    puVar14 = puVar10 + 1;\u000a                  }\u000a                }\u000a                if (puVar12[8] == 1) {\u000a                  puVar14 = (undefined *)writeLoBytes(puVar14,puVar12[6],puVar12[7]);\u000a                }\u000a                else {\u000a                  iVar2 = puVar12[7];\u000a                  if (iVar2 != 0) {\u000a                    puVar8 = (undefined *)puVar12[6];\u000a                    iVar3 = iVar2;\u000a                    puVar10 = puVar14;\u000a                    do {\u000a                      *puVar10 = *puVar8;\u000a                      puVar10 = puVar10 + 1;\u000a                      puVar8 = puVar8 + 1;\u000a                      iVar3 = iVar3 + -1;\u000a                    } while (iVar3 != 0);\u000a                    puVar14 = puVar14 + iVar2;\u000a                  }\u000a                }\u000a              }\u000a            }\u000a            else {\u000a              iVar2 = puVar12[7];\u000a              iVar3 = puVar12[4];\u000a              if (puVar12[8] == 1) {\u000a                iVar4 = iVar3 * 2 + 0xd;\u000a                if (iVar3 == 0) {\u000a                  iVar4 = 0xb;\u000a                }\u000a                iVar2 = iVar2 << 1;\u000a              }\u000a              else {\u000a                iVar4 = iVar3 + 0xc;\u000a                if (iVar3 == 0) {\u000a                  iVar4 = 0xb;\u000a                }\u000a              }\u000a              iVar3 = 4;\u000a              puVar14 = puVar10;\u000a              puStack00000024 = puVar10;\u000a              if (10 < (uint)(iVar4 + iVar2)) {\u000a                do {\u000a                  puVar10[iVar3 + -1] = (char)uVar1;\u000a                  iVar3 = iVar3 + -1;\u000a                  uVar1 = uVar1 >> 8;\u000a                } while (0 < iVar3);\u000a                uVar1 = (iVar4 + iVar2) - 10;\u000a                iVar2 = 4;\u000a                do {\u000a                  puVar10[iVar2 + 3] = (char)uVar1;\u000a                  iVar2 = iVar2 + -1;\u000a                  uVar1 = uVar1 >> 8;\u000a                } while (0 < iVar2);\u000a                puVar10[8] = 0;\u000a                puVar10[9] = 0;\u000a                *(bool *)(puVar10 + 10) = puVar12[8] == 1;\u000a                puVar14 = puVar10 + 0xb;\u000a                iVar2 = puVar12[4];\u000a                puStack00000024 = puVar10;\u000a                if (iVar2 != 0) {\u000a                  if (puVar12[5] == 1) {\u000a                    puStack00000024 = puVar10;\u000a                    puVar14 = (undefined *)writeUcs2s(puVar14,puVar12[3]);\u000a                    *puVar14 = 0;\u000a                    puVar14[1] = 0;\u000a                    puVar14 = puVar14 + 2;\u000a                  }\u000a                  else {\u000a                    puVar5 = (undefined *)puVar12[3];\u000a                    iVar3 = iVar2;\u000a                    puVar8 = puVar14;\u000a                    do {\u000a                      *puVar8 = *puVar5;\u000a                      puVar8 = puVar8 + 1;\u000a                      puVar5 = puVar5 + 1;\u000a                      iVar3 = iVar3 + -1;\u000a                    } while (iVar3 != 0);\u000a                    puVar14[iVar2] = 0;\u000a                    puVar14 = puVar14 + iVar2 + 1;\u000a                    puStack00000024 = puVar10;\u000a                  }\u000a                }\u000a                if (puVar12[8] == 1) goto LAB_0001e338;\u000a                iVar2 = puVar12[7];\u000a                if (iVar2 != 0) {\u000a                  puVar8 = (undefined *)puVar12[6];\u000a                  iVar3 = iVar2;\u000a                  puVar10 = puVar14;\u000a                  do {\u000a                    *puVar10 = *puVar8;\u000a                    puVar10 = puVar10 + 1;\u000a                    puVar8 = puVar8 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  goto LAB_0001e36a;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          puVar12 = (undefined4 *)*puVar12;\u000a          puVar10 = puVar14;\u000a        }\u000a        __aeabi_memclr(puVar10,((int)gfp_00 + (int)in_stack_00000018) - (int)puVar10);\u000a        gfp = gfp_00;\u000a      }\u000a    }\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a    return (int)gfp;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p1858
S'mov r1,#0x4\nstr r1,[sp,#0x24]\ntst r4,r1\nbeq 0x0001dde0\nb 0x0001e470\nldr r0,[0x0001e19c]\nldr r1,[sp,#0x1c]\nldr r0,[r1,r0]\nmov r1,#0xa\nstr r1,[sp,#0x2c]\nand r4,r1\nmov r5,#0x0\ncmp r0,#0x0\n'
p1859
S'04 21\n09 91\n0c 42\n00 d0\n47 e3\nee 48\n07 99\n08 58\n0a 21\n0b 91\n0c 40\n00 25\n00 28\n'
p1860
S'.text:0001ddd6\n.text:0001ddd8\n.text:0001ddda\n.text:0001dddc\n.text:0001ddde\n.text:0001dde0\n.text:0001dde2\n.text:0001dde4\n.text:0001dde6\n.text:0001dde8\n.text:0001ddea\n.text:0001ddec\n.text:0001ddee\n'
p1861
tp1862
sS'lame_get_quant_comp_short'
p1863
(S'\n__stdcall lame_get_quant_comp_short()\n'
p1864
V\u000avoid lame_get_quant_comp_short(void)\u000a\u000a{\u000a  (*(lame_set_quant_comp_short + DAT_00037f0c))();\u000a  return;\u000a}\u000a\u000a
p1865
S'ldr r12,[0x37f0c]\nadd pc,r12,pc\n'
p1866
S'00 c0 9f e5\n0f f0 8c e0\n'
p1867
S'.text:00037f04\n.text:00037f08\n'
p1868
tp1869
sS'lame_get_compression_ratio'
p1870
(S'\n__stdcall lame_get_compression_ratio(lame_global_flags * gfp)\n'
p1871
V\u000afloat lame_get_compression_ratio(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int unaff_r6;\u000a  float fVar3;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  int iStack00000030;\u000a  \u000a  if (gfp != (lame_global_flags *)0x0) {\u000a    iStack00000030 = *(int *)(in_stack_0000001c + lame_get_error_protection);\u000a    iVar2 = 4;\u000a    if ((*in_stack_00000004 != 0) && (uVar1 = DAT_0001e49c, iStack00000030 != 0)) {\u000a      do {\u000a        *(undefined *)(unaff_r6 + iVar2 + -1) = (char)uVar1;\u000a        iVar2 = iVar2 + -1;\u000a        uVar1 = uVar1 >> 8;\u000a      } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a      strlen(__s);\u000a    }\u000a  }\u000a  fVar3 = (float)__aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - unaff_r6);\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) != *in_stack_00000020) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail(in_stack_0000002c);\u000a  }\u000a  return fVar3;\u000a}\u000a\u000a
p1872
S'cmp r0,#0x0\nldr r1,[sp,#0x1c]\nbeq 0x0001e45c\nldr r0,[0x0001e490]\nldr r2,[r1,r0]\nldr r0,[sp,#0x4]\nldr r5,[r0,#0x0]\nldr r0,[0x0001e49c]\nmov r1,#0x4\ncmp r5,#0x0\nldr r4,[sp,#0x2c]\nbeq 0x0001e45e\ncmp r2,#0x0\n'
p1873
S'00 28\n07 99\n45 d0\n2f 48\n0a 58\n01 98\n05 68\n30 48\n04 21\n00 2d\n0b 9c\n3d d0\n00 2a\n'
p1874
S'.text:0001e3ca\n.text:0001e3cc\n.text:0001e3ce\n.text:0001e3d0\n.text:0001e3d2\n.text:0001e3d4\n.text:0001e3d6\n.text:0001e3d8\n.text:0001e3da\n.text:0001e3dc\n.text:0001e3de\n.text:0001e3e0\n.text:0001e3e2\n'
p1875
tp1876
sS'lame_get_highpasswidth'
p1877
(S'\n__stdcall lame_get_highpasswidth(lame_global_flags * gfp)\n'
p1878
V\u000a/* WARNING: Control flow encountered bad instruction data */\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000aint lame_get_highpasswidth(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  undefined4 uVar5;\u000a  int iVar6;\u000a  code *pcVar7;\u000a  uint uVar8;\u000a  undefined4 in_r3;\u000a  uint uVar9;\u000a  int unaff_r4;\u000a  undefined4 *unaff_r5;\u000a  uint unaff_r8;\u000a  undefined4 in_cr0;\u000a  undefined4 in_cr12;\u000a  undefined4 *puStack00000004;\u000a  undefined4 uStack00000008;\u000a  undefined4 uStack0000000c;\u000a  undefined4 uStack00000010;\u000a  undefined4 uStack00000014;\u000a  undefined4 uStack00000018;\u000a  undefined4 uStack0000001c;\u000a  undefined4 uStack00000020;\u000a  undefined4 *puStack00000024;\u000a  int iStack00000028;\u000a  uint uStack0000002c;\u000a  undefined4 *puStack00000030;\u000a  undefined4 uStack00000034;\u000a  undefined4 uStack00000038;\u000a  undefined4 uStack0000003c;\u000a  int iStack00000040;\u000a  int iStack00000044;\u000a  int iStack00000048;\u000a  int in_stack_0000004c;\u000a  undefined4 *puStack00000050;\u000a  int *piStack00000054;\u000a  int iStack00000058;\u000a  uint *puStack0000005c;\u000a  undefined4 *puStack00000064;\u000a  undefined4 *puStack00000068;\u000a  undefined4 *puStack0000006c;\u000a  undefined4 *puStack00000070;\u000a  undefined4 *puStack00000074;\u000a  int iStack0000007c;\u000a  uint *puStack00000080;\u000a  uint in_stack_00000084;\u000a  uint in_stack_00000088;\u000a  \u000a  *unaff_r5 = in_r3;\u000a  puStack00000070 = (undefined4 *)0xb4;\u000a  unaff_r5[0x1f] = *(undefined4 *)(unaff_r4 + 0xb4);\u000a  iVar6 = *(int *)(unaff_r4 + 0x20);\u000a  uStack0000003c = 0x8c;\u000a  unaff_r5[0x23] = iVar6;\u000a  iStack00000044 = (int)&gfp->class_id + unaff_r4;\u000a  puStack00000050 = unaff_r5 + 4;\u000a  if (iVar6 != 0) {\u000a    *(undefined4 *)(unaff_r4 + 0x24) = in_r3;\u000a  }\u000a  if (*(int *)((int)unaff_r5 + DAT_0001ee20) != 0) {\u000a    *(undefined4 *)(unaff_r4 + 0x24) = in_r3;\u000a  }\u000a  *(undefined4 *)((int)unaff_r5 + DAT_0001ee24) = *(undefined4 *)(unaff_r4 + 0x110);\u000a  *(undefined4 *)((int)unaff_r5 + DAT_0001ee28) = *(undefined4 *)(unaff_r4 + 0x114);\u000a  *(undefined4 *)((int)unaff_r5 + DAT_0001ee2c) = *(undefined4 *)(unaff_r4 + 0x118);\u000a  if (*(int *)(unaff_r4 + 0x128) == 0) {\u000a    uStack00000034 = 0x114;\u000a    uStack00000038 = 0x110;\u000a    uVar1 = *(uint *)((int)unaff_r5 + DAT_0001ee30) & 0xfffffffd;\u000a    *(uint *)((int)unaff_r5 + DAT_0001ee30) = uVar1;\u000a    puStack00000074 = (undefined4 *)in_r3;\u000a  }\u000a  else {\u000a    uStack00000034 = 0x114;\u000a    uStack00000038 = 0x110;\u000a    puStack00000074 = (undefined4 *)in_r3;\u000a    uVar1 = has_3DNow();\u000a    uVar1 = *(uint *)((int)unaff_r5 + DAT_0001ee30) & 0xfffffffd | (uVar1 & 1) << 1;\u000a    *(uint *)((int)unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  if (*(int *)(unaff_r4 + 0x124) == 0) {\u000a    uVar1 = uVar1 & 0xfffffffe;\u000a    *(uint *)((int)unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  else {\u000a    uVar1 = has_MMX();\u000a    uVar1 = *(uint *)((int)unaff_r5 + DAT_0001ee30) & 0xfffffffe | uVar1 & 1;\u000a    *(uint *)((int)unaff_r5 + DAT_0001ee30) = uVar1;\u000a  }\u000a  if (*(int *)(unaff_r4 + 300) == 0) {\u000a    *(uint *)((int)unaff_r5 + DAT_0001ee30) = uVar1 & 0xfffffff3;\u000a  }\u000a  else {\u000a    uVar1 = has_SSE();\u000a    iVar6 = DAT_0001ee30;\u000a    *(uint *)((int)unaff_r5 + DAT_0001ee30) =\u000a         *(uint *)((int)unaff_r5 + DAT_0001ee30) & 0xfffffffb | (uVar1 & 1) << 2;\u000a    uVar1 = has_SSE2();\u000a    *(uint *)((int)unaff_r5 + iVar6) =\u000a         *(uint *)((int)unaff_r5 + iVar6) & 0xfffffff7 | (uVar1 & 1) << 3;\u000a  }\u000a  iStack00000040 = (int)unaff_r5 + DAT_0001ef9c;\u000a  if (*(int *)((int)unaff_r5 + DAT_0001ef9c) == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(1,DAT_0001efa0);\u000a  }\u000a  puStack00000064 = (undefined4 *)((int)unaff_r5 + lame_set_force_short_blocks);\u000a  if (*(int *)((int)unaff_r5 + lame_set_force_short_blocks) == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(1,DAT_0001efbc);\u000a  }\u000a  unaff_r5[0x28] = *(undefined4 *)(unaff_r4 + 0x78);\u000a  iStack00000048 = 0xa4;\u000a  unaff_r5[0x29] = *(undefined4 *)(unaff_r4 + 0x68);\u000a  iStack00000058 = 0xa8;\u000a  unaff_r5[0x2a] = *(undefined4 *)(unaff_r4 + 0x6c);\u000a  uStack00000020 = 0xac;\u000a  unaff_r5[0x2b] = *(undefined4 *)(unaff_r4 + 0x70);\u000a  uStack00000018 = 0xb0;\u000a  unaff_r5[0x2c] = *(undefined4 *)(unaff_r4 + 0x74);\u000a  iVar6 = *(int *)(unaff_r4 + 8);\u000a  unaff_r5[0x11] = iVar6;\u000a  puStack00000030 = unaff_r5 + 0x28;\u000a  if (iVar6 == 1) {\u000a    *(undefined4 *)(unaff_r4 + 0x30) = 3;\u000a    unaff_r5[0x12] = 1;\u000aLAB_0001ec5e:\u000a    uVar2 = 0;\u000a    *(undefined4 *)(unaff_r4 + 0x34) = 0;\u000a    iVar6 = 1;\u000a  }\u000a  else {\u000a    iVar6 = *(int *)(unaff_r4 + 0x30);\u000a    uVar2 = 1;\u000a    if (iVar6 != 3) {\u000a      uVar2 = 2;\u000a    }\u000a    unaff_r5[0x12] = uVar2;\u000a    if (iVar6 == 3) goto LAB_0001ec5e;\u000a    uVar2 = *(undefined4 *)(unaff_r4 + 0x34);\u000a    iVar6 = 2;\u000a  }\u000a  piStack00000054 = unaff_r5 + 0x12;\u000a  unaff_r5[0x14] = uVar2;\u000a  iVar3 = *(int *)(unaff_r4 + 0x9c);\u000a  puStack0000005c = (uint *)(unaff_r4 + 0x9c);\u000a  if ((iVar3 == 4) || (iVar3 == 1)) {\u000aLAB_0001ed14:\u000a    unaff_r5[0x26] = *(undefined4 *)(unaff_r4 + 0x38);\u000a    puStack00000024 = unaff_r5 + 0x26;\u000a    iVar6 = 0xa0;\u000a  }\u000a  else {\u000a    if (iVar3 != 0) {\u000a      *(undefined4 **)(unaff_r4 + 0x38) = puStack00000074;\u000a      goto LAB_0001ed14;\u000a    }\u000a    if ((*(int *)(unaff_r4 + 0xa8) != 0x80) && (*(int *)(unaff_r4 + 0x60) == 0)) {\u000a      *(int *)(unaff_r4 + 0x60) = *(int *)(unaff_r4 + 0xa8);\u000a    }\u000a    in_stack_00000088 = 0xa0;\u000a    unaff_r5[0x26] = *(undefined4 *)(unaff_r4 + 0x38);\u000a    puStack00000024 = unaff_r5 + 0x26;\u000a    if (*(int *)(unaff_r4 + 0x60) == 0) {\u000a      uVar1 = *(uint *)(unaff_r4 + 100);\u000a      in_stack_00000084 = iVar6;\u000a      puStack00000080 = (uint *)__aeabi_fcmpeq(uVar1,0);\u000a      __unordsf2(uVar1,0);\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(DAT_0001efc0 & uVar1);\u000a    }\u000a    in_stack_00000084 = iVar6;\u000a    iVar3 = __aeabi_fcmpgt(*(undefined4 *)(unaff_r4 + 100),0);\u000a    iVar6 = in_stack_00000088;\u000a    if (iVar3 != 0) {\u000a      iVar6 = *(int *)(unaff_r4 + 0x10);\u000a      if (iVar6 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __floatsidf(*(undefined4 *)(unaff_r4 + 0xc));\u000a      }\u000a      iVar3 = iVar6 * in_stack_00000084;\u000a      in_stack_00000084 = iVar6;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(iVar3 * 0x10);\u000a    }\u000a  }\u000a  uStack0000002c = *(uint *)(unaff_r4 + 0x10);\u000a  if (uStack0000002c == 0) {\u000a    uVar1 = 0;\u000a    if ((*puStack0000005c == 4) || (*puStack0000005c == 1)) {\u000a      uVar2 = __floatsisf(*(undefined4 *)(unaff_r4 + iStack00000048));\u000a                    /* WARNING: Subroutine does not return */\u000a      __addsf3(uVar2,*(undefined4 *)(unaff_r4 + 0xa0));\u000a    }\u000a  }\u000a  else {\u000a    if (DAT_0001efd8 < (int)uStack0000002c) {\u000a      iVar3 = *(int *)(unaff_r4 + iStack00000058);\u000a      if (DAT_0001efe0 < (int)uStack0000002c) {\u000a        if (iVar3 < 0x21) {\u000a          iVar3 = 0x20;\u000a        }\u000a        if (0x13f < iVar3) {\u000a          iVar3 = 0x140;\u000a        }\u000a      }\u000a      else {\u000a        if (iVar3 < 9) {\u000a          iVar3 = 8;\u000a        }\u000a        if (0x9f < iVar3) {\u000a          iVar3 = iVar6;\u000a        }\u000a      }\u000a      *(int *)(unaff_r4 + 0xa8) = iVar3;\u000a      uVar1 = uStack0000002c;\u000a    }\u000a    else {\u000a      iVar6 = *(int *)(unaff_r4 + iStack00000058);\u000a      if (iVar6 < 9) {\u000a        iVar6 = 8;\u000a      }\u000a      if (0x3f < iVar6) {\u000a        iVar6 = 0x40;\u000a      }\u000a      *(int *)(unaff_r4 + iStack00000058) = iVar6;\u000a      uVar1 = uStack0000002c;\u000a    }\u000a  }\u000a  uStack0000002c = 0xb8;\u000a  uVar4 = *(uint *)(unaff_r4 + 0xb8);\u000a  puStack00000080 = (uint *)(unaff_r4 + 0xb8);\u000a  if (uVar4 != 0) goto LAB_0001f0ca;\u000a  uVar1 = *puStack0000005c;\u000a  if (uVar1 < 5) {\u000a    switch(uVar1) {\u000a    case 0:\u000a      iVar6 = nearestBitrateFullIndex((uint)*(ushort *)(unaff_r4 + 0x60));\u000a      iVar6 = iVar6 << 3;\u000a      iVar3 = DAT_0001f3b4 + 0x1f01e;\u000a      break;\u000a    default:\u000a      pcVar7 = DAT_0001f3a4;\u000a      if (*(uint *)(unaff_r4 + iStack00000048) < 10) {\u000a        iVar6 = *(uint *)(unaff_r4 + iStack00000048) << 2;\u000a        pcVar7 = lame_get_force_short_blocks + DAT_0001f3a8;\u000a        goto LAB_0001f030;\u000a      }\u000a      goto LAB_0001f0a6;\u000a    case 2:\u000a      if (0xfffe105b < (&switchdataD_0001efa4)[uVar1]) {\u000a                    /* WARNING: Bad instruction - Truncating control flow here */\u000a        halt_baddata();\u000a      }\u000a      iVar6 = iStack00000048;\u000a      pcVar7 = DAT_0001f3ac;\u000a      if ((int)&switchdataD_0001efa4 + (&switchdataD_0001efa4)[uVar1] == 0) {\u000a        register0x00000054 =\u000a             (BADSPACEBASE *)(iStack00000048 + ((uint)register0x00000054 >> (unaff_r8 & 0xff)));\u000a        iVar6 = iStack00000048;\u000a        pcVar7 = DAT_0001f3ac;\u000a      }\u000aLAB_0001f030:\u000a      *(code **)((undefined *)register0x00000054 + 0x7c) = pcVar7 + iVar6;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(*(undefined4 *)(pcVar7 + iVar6));\u000a    case 3:\u000a      coprocessor_function2(0,0xd,6,in_cr0,in_cr12,in_cr0);\u000a      iVar3 = _UNK_0001f3bc + 0x1f0a0;\u000a      iVar6 = iStack00000058;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(*(undefined4 *)(iVar3 + iVar6 + 4));\u000a  }\u000a  pcVar7 = DAT_0001f3ac;\u000a  if (*(uint *)(unaff_r4 + iStack00000048) < 10) {\u000a    iVar6 = *(uint *)(unaff_r4 + iStack00000048) << 2;\u000a    pcVar7 = (code *)(DAT_0001f3b0 + 0x1f00e);\u000a    goto LAB_0001f030;\u000a  }\u000aLAB_0001f0a6:\u000a  if ((*(int *)(unaff_r4 + 0x30) == 3) && ((*puStack0000005c == 3 || (*puStack0000005c == 0)))) {\u000a    __muldf3(0,pcVar7,0,DAT_0001f3c0);\u000a  }\u000a  uVar4 = __fixdfsi();\u000a  *puStack00000080 = uVar4;\u000a  uVar1 = *(uint *)(unaff_r4 + 0x10);\u000aLAB_0001f0ca:\u000a  if (uVar1 == 0) {\u000a    uVar8 = *(uint *)(unaff_r4 + 0xc);\u000a    if (uVar4 * 2 - uVar8 != 0 && (int)uVar8 <= (int)(uVar4 * 2)) {\u000a      uVar4 = (int)(uVar8 + (uVar8 >> 0x1f)) >> 1;\u000a      *puStack00000080 = uVar4;\u000a    }\u000a    uVar1 = lame_get_totalframes;\u000a    if ((((((int)uVar8 <= DAT_0001f3c8) && (uVar1 = DAT_0001f3cc, (int)uVar8 <= DAT_0001f3d0)) &&\u000a         (uVar1 = 32000, (int)uVar8 <= DAT_0001f3d4)) &&\u000a        ((uVar1 = DAT_0001f3d8, (int)uVar8 <= DAT_0001f3dc &&\u000a         (uVar1 = DAT_0001f3e0, (int)uVar8 <= DAT_0001f3e4)))) &&\u000a       (((uVar1 = 16000, (int)uVar8 <= DAT_0001f3e8 &&\u000a         ((uVar1 = DAT_0001f3ec, (int)uVar8 <= DAT_0001f3f0 &&\u000a          (uVar1 = DAT_0001f3f4, (int)uVar8 <= DAT_0001f3f8)))) &&\u000a        (uVar1 = 8000, (int)uVar8 <= DAT_0001f3fc)))) {\u000a      uVar1 = DAT_0001f3cc;\u000a    }\u000a    if (uVar4 != 0xffffffff) {\u000a      uVar9 = DAT_0001f3cc;\u000a      if (DAT_0001f400 <= (int)uVar4) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = 32000;\u000a      if (DAT_0001f404 <= (int)uVar4) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = DAT_0001f3d8;\u000a      if (DAT_0001f408 <= (int)uVar4) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = DAT_0001f3e0;\u000a      if (DAT_0001f40c <= (int)uVar4) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = 16000;\u000a      if (DAT_0001f410 <= (int)uVar4) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = DAT_0001f3ec;\u000a      if (DAT_0001f414 <= (int)uVar4) {\u000a        uVar1 = uVar9;\u000a      }\u000a      uVar9 = DAT_0001f3f4;\u000a      if (DAT_0001f418 <= (int)uVar4) {\u000a        uVar9 = uVar1;\u000a      }\u000a      uVar1 = 8000;\u000a      if (DAT_0001f41c <= (int)uVar4) {\u000a        uVar1 = uVar9;\u000a      }\u000a      if ((((((int)uVar8 < (int)uVar1) &&\u000a            (uVar1 = lame_get_totalframes, (int)uVar8 <= (int)DAT_0001f3cc)) &&\u000a           (uVar1 = DAT_0001f3cc, (int)uVar8 < 0x7d01)) &&\u000a          (((uVar1 = 32000, (int)uVar8 <= (int)DAT_0001f3d8 &&\u000a            (uVar1 = DAT_0001f3d8, (int)uVar8 <= (int)DAT_0001f3e0)) &&\u000a           ((uVar1 = DAT_0001f3e0, (int)uVar8 < 0x3e81 &&\u000a            ((uVar1 = 16000, (int)uVar8 <= (int)DAT_0001f3ec &&\u000a             (uVar1 = DAT_0001f3ec, (int)uVar8 <= (int)DAT_0001f3f4)))))))) &&\u000a         (uVar1 = DAT_0001f3f4, (int)uVar8 < 0x1f41)) {\u000a        uVar1 = 8000;\u000a      }\u000a    }\u000a    *(uint *)(unaff_r4 + 0x10) = uVar1;\u000a  }\u000a  in_stack_00000084 = *puStack0000005c;\u000a  if ((in_stack_00000084 == 4) || (in_stack_00000084 == 1)) {\u000a    uVar8 = DAT_0001f3d8;\u000a    if ((int)uVar4 <= (int)DAT_0001f3d8) {\u000a      uVar8 = uVar4;\u000a    }\u000a    uVar4 = (int)(uVar1 + (uVar1 >> 0x1f)) >> 1;\u000a    if ((int)uVar8 <= (int)uVar4) {\u000a      uVar4 = uVar8;\u000a    }\u000a    *puStack00000080 = uVar4;\u000a  }\u000a  else {\u000a    uVar8 = DAT_0001f420;\u000a    if ((int)uVar4 <= (int)DAT_0001f420) {\u000a      uVar8 = uVar4;\u000a    }\u000a    uVar4 = (int)(uVar1 + (uVar1 >> 0x1f)) >> 1;\u000a    if ((int)uVar8 <= (int)uVar4) {\u000a      uVar4 = uVar8;\u000a    }\u000a    *puStack00000080 = uVar4;\u000a    if (in_stack_00000084 == 0) {\u000a      in_stack_00000088 = uVar1;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(uVar1 * *piStack00000054 * 0x10);\u000a    }\u000a  }\u000a  if (in_stack_00000084 == 3) {\u000a    in_stack_00000088 = uVar1;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(uVar1 * *piStack00000054 * 0x10);\u000a  }\u000a  if (*(int *)(unaff_r4 + 0x24) == 0) {\u000a    *(undefined4 *)(unaff_r4 + 0x3c) = 0;\u000a    *(undefined4 *)(unaff_r4 + 0x40) = 0;\u000a    unaff_r5[0x21] = 0;\u000a    unaff_r5[0x20] = 0;\u000a    unaff_r5[0x22] = 0;\u000a    in_stack_00000088 = uVar1;\u000a  }\u000a  else {\u000a    iVar6 = *(int *)(unaff_r4 + 0x3c);\u000a    iVar3 = *(int *)(unaff_r4 + 0x40);\u000a    unaff_r5[0x20] = iVar6;\u000a    unaff_r5[0x22] = iVar3;\u000a    if (iVar3 != 0) {\u000a      unaff_r5[0x21] = 1;\u000a    }\u000a    in_stack_00000088 = uVar1;\u000a    if (iVar6 != 0) {\u000a      in_stack_00000088 = uVar1;\u000a      iVar6 = InitGainAnalysis(*puStack00000064,uVar1);\u000a      if (iVar6 == 0) {\u000a        FUN_0001fb98();\u000a      }\u000a      in_stack_00000084 = *puStack0000005c;\u000a      uVar4 = *puStack00000080;\u000a      in_stack_00000088 = *(uint *)(unaff_r4 + 0x10);\u000a    }\u000a  }\u000a  uVar2 = puStack00000074;\u000a  unaff_r5[0x24] = *(undefined4 *)(unaff_r4 + 0x80);\u000a  unaff_r5[0xd] = uVar4;\u000a  iStack0000007c = *(int *)(unaff_r4 + 0xbc);\u000a  unaff_r5[0xe] = iStack0000007c;\u000a  unaff_r5[0xf] = *(undefined4 *)(unaff_r4 + 0xc);\u000a  unaff_r5[0x10] = in_stack_00000088;\u000a  uVar5 = 1;\u000a  if (DAT_0001f428 <= (int)in_stack_00000088) {\u000a    uVar5 = 2;\u000a  }\u000a  unaff_r5[0x13] = uVar5;\u000a  iStack00000028 = in_stack_0000004c << 6;\u000a  *(int *)((int)unaff_r5 + DAT_0001f42c) = iStack00000028;\u000a  if (1 < in_stack_00000084 - 1) {\u000a    if (in_stack_00000084 == 3) {\u000a      uStack0000000c = 0xbc;\u000a      puStack00000080 = (uint *)uVar4;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(in_stack_00000088 * *piStack00000054 * 0x10);\u000a    }\u000a    if (in_stack_00000084 != 4) {\u000a      uStack0000000c = 0xbc;\u000a      puStack00000080 = (uint *)uVar4;\u000a                    /* WARNING: Subroutine does not return */\u000a      __floatsidf(in_stack_00000088 * *piStack00000054 * 0x10);\u000a    }\u000a  }\u000a  uStack0000000c = 0xbc;\u000a  *(undefined4 *)(unaff_r4 + 100) =\u000a       *(undefined4 *)(DAT_0001f430 + 0x1f382 + *(int *)(unaff_r4 + iStack00000048) * 4);\u000a  iVar6 = *(int *)(unaff_r4 + 0x30);\u000a  if (iVar6 == 4) {\u000a    iVar6 = 1;\u000a    *(undefined4 *)(unaff_r4 + 0x30) = 1;\u000a  }\u000a  *(int *)((int)unaff_r5 + (int)puStack00000070) = iVar6;\u000a  puStack00000004 = unaff_r5 + 0x2d;\u000a  if (0 < iStack0000007c) {\u000a    puStack00000080 = (uint *)uVar4;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(iStack0000007c);\u000a  }\u000a  *(undefined4 **)(unaff_r5 + 0x40) = puStack00000074;\u000a  *(undefined4 **)(unaff_r5 + 0x41) = puStack00000074;\u000a  puStack00000064 = puStack00000074;\u000a  uStack00000010 = 0xf8;\u000a  *(undefined4 **)(unaff_r5 + 0x3e) = puStack00000074;\u000a  uStack00000014 = 0xfc;\u000a  *(undefined4 **)(unaff_r5 + 0x3f) = puStack00000074;\u000a  puStack00000070 = unaff_r5 + 0x3f;\u000a  puStack0000006c = unaff_r5 + 0x3e;\u000a  if ((0 < (int)uVar4) && ((int)uVar4 < (int)(in_stack_00000088 + (in_stack_00000088 >> 0x1f)) >> 1)\u000a     ) {\u000a    puStack00000080 = (uint *)uVar4;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(uVar4);\u000a  }\u000a  uStack0000001c = 1;\u000a  puStack00000074 = unaff_r5 + 0x40;\u000a  uStack00000008 = 0x104;\u000a  puStack00000068 = unaff_r5 + 0x41;\u000a  puStack00000080 = (uint *)uVar4;\u000a  __aeabi_fcmpgt(uVar2,0);\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(uVar2);\u000a}\u000a\u000a
p1879
S'str r3,[r5,#0x0]\nmov r1,#0xb4\nstr r1,[sp,#0x70]\nldr r1,[r4,r1]\nstr r1,[r5,#0x7c]\nldr r1,[r4,#0x20]\nmov r2,#0x8c\nstr r2,[sp,#0x3c]\nstr r1,[r5,r2]\nadd r0,r4,r0\nstr r0,[sp,#0x44]\npush { r5 }\npop { r6 }\nadd r6,#0x10\n'
p1880
S'2b 60\nb4 21\n1c 91\n61 58\ne9 67\n21 6a\n8c 22\n0f 92\na9 50\n20 18\n11 90\n20 b4\n40 bc\n10 36\n'
p1881
S'.text:0001eaac\n.text:0001eaae\n.text:0001eab0\n.text:0001eab2\n.text:0001eab4\n.text:0001eab6\n.text:0001eab8\n.text:0001eaba\n.text:0001eabc\n.text:0001eabe\n.text:0001eac0\n.text:0001eac2\n.text:0001eac4\n.text:0001eac6\n'
p1882
tp1883
sS'strchr'
p1884
(S'\n__stdcall strchr(char * __s, int __c)\n'
p1885
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(strtol + DAT_00037cfc))();\u000a  return pcVar1;\u000a}\u000a\u000a
p1886
S'ldr r12,[0x37cfc]\nadd pc,r12,pc\n'
p1887
S'00 c0 9f e5\n0f f0 8c e0\n'
p1888
S'.text:00037cf4\n.text:00037cf8\n'
p1889
tp1890
sS'map2MP3Frequency'
p1891
(S'\n__stdcall map2MP3Frequency(int freq)\n'
p1892
V\u000aint map2MP3Frequency(int freq)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int in_r1;\u000a  int unaff_r4;\u000a  int unaff_r5;\u000a  int *unaff_r6;\u000a  undefined4 in_stack_00000020;\u000a  int in_stack_00000048;\u000a  int in_stack_00000050;\u000a  \u000a  if (in_r1 != 0) {\u000a    id3tag_write_v1();\u000a    iVar1 = in_stack_00000048 - unaff_r5;\u000a    if (in_stack_00000048 == 0) {\u000a      iVar1 = in_stack_00000048;\u000a    }\u000a    iVar1 = copy_buffer(in_stack_00000020,in_stack_00000050 + unaff_r4,iVar1,0);\u000a    iVar2 = iVar1 + unaff_r5;\u000a    unaff_r5 = iVar1;\u000a    if (-1 < iVar1) {\u000a      unaff_r5 = iVar2;\u000a    }\u000a  }\u000a  if (**(int **)(DAT_0002169c + 0x2165e) != *unaff_r6) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return unaff_r5;\u000a}\u000a\u000a
p1893
S'cmp r1,#0x0\nbeq 0x00021654\nbl 0x00038070\nldr r0,[sp,#0x50]\nadd r1,r0,r4\nldr r0,[sp,#0x48]\nsub r2,r0,r5\ncmp r0,#0x0\nbne 0x0002163c\npush { r0 }\npop { r2 }\nmov r3,#0x0\nldr r0,[sp,#0x20]\nbl 0x00037b50\npush { r0 }\npop { r4 }\nadd r0,r4,r5\ncmp r4,#0x0\nblt 0x00021658\npush { r0 }\npop { r4 }\nb 0x00021658\npush { r5 }\npop { r4 }\n'
p1894
S'00 29\n15 d0\n16 f0 22 fd\n14 98\n01 19\n12 98\n42 1b\n00 28\n01 d1\n01 b4\n04 bc\n00 23\n08 98\n16 f0 86 fa\n01 b4\n10 bc\n60 19\n00 2c\n04 db\n01 b4\n10 bc\n01 e0\n20 b4\n10 bc\n'
p1895
S'.text:00021624\n.text:00021626\n.text:00021628\n.text:0002162c\n.text:0002162e\n.text:00021630\n.text:00021632\n.text:00021634\n.text:00021636\n.text:00021638\n.text:0002163a\n.text:0002163c\n.text:0002163e\n.text:00021640\n.text:00021644\n.text:00021646\n.text:00021648\n.text:0002164a\n.text:0002164c\n.text:0002164e\n.text:00021650\n.text:00021652\n.text:00021654\n.text:00021656\n'
p1896
tp1897
sS'calc_noise'
p1898
(S'\n__stdcall calc_noise()\n'
p1899
V\u000avoid calc_noise(void)\u000a\u000a{\u000a  (*(qsort + DAT_0003833c))();\u000a  return;\u000a}\u000a\u000a
p1900
S'ldr r12,[0x3833c]\nadd pc,r12,pc\n'
p1901
S'00 c0 9f e5\n0f f0 8c e0\n'
p1902
S'.text:00038334\n.text:00038338\n'
p1903
tp1904
sS'fseek'
p1905
(S'\n__stdcall fseek(FILE * __stream, long __off, int __whence)\n'
p1906
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fseek(FILE *__stream,long __off,int __whence)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(PutVbrTag + DAT_0003808c))();\u000a  return iVar1;\u000a}\u000a\u000a
p1907
S'ldr r12,[0x3808c]\nadd pc,r12,pc\n'
p1908
S'00 c0 9f e5\n0f f0 8c e0\n'
p1909
S'.text:00038084\n.text:00038088\n'
p1910
tp1911
sS'lame_get_findReplayGain'
p1912
(S'\n__stdcall lame_get_findReplayGain(lame_global_flags * gfp)\n'
p1913
V\u000aint lame_get_findReplayGain(lame_global_flags *gfp)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  int in_r1;\u000a  undefined *puVar1;\u000a  uint uVar2;\u000a  int in_r2;\u000a  int iVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  undefined *puVar6;\u000a  uint unaff_r4;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  undefined *puVar9;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    if (in_r2 == 1) {\u000a      iVar4 = in_r1 * 2 + 0xd;\u000a      if (in_r1 == 0) {\u000a        iVar4 = 0xb;\u000a      }\u000a      gfp = (lame_global_flags *)((int)gfp << 1);\u000a    }\u000a    else {\u000a      iVar4 = in_r1 + 0xc;\u000a      if (in_r1 == 0) {\u000a        iVar4 = 0xb;\u000a      }\u000a    }\u000a    uVar8 = (int)&gfp->class_id + iVar4;\u000a    iVar4 = 4;\u000a    if (10 < uVar8) {\u000a      do {\u000a        unaff_r6[iVar4 + -1] = (char)unaff_r4;\u000a        iVar4 = iVar4 + -1;\u000a        unaff_r4 = unaff_r4 >> 8;\u000a      } while (0 < iVar4);\u000a      uVar8 = uVar8 - 10;\u000a      iVar4 = 4;\u000a      do {\u000a        unaff_r6[iVar4 + 3] = (char)uVar8;\u000a        iVar4 = iVar4 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar4);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a      unaff_r6 = unaff_r6 + 0xb;\u000a      iVar4 = in_stack_00000028[4];\u000a      if (iVar4 != 0) {\u000a        if (in_stack_00000028[5] == 1) {\u000a          puVar9 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[3]);\u000a          *puVar9 = 0;\u000a          puVar9[1] = 0;\u000a          unaff_r6 = puVar9 + 2;\u000a        }\u000a        else {\u000a          puVar6 = (undefined *)in_stack_00000028[3];\u000a          iVar3 = iVar4;\u000a          puVar9 = unaff_r6;\u000a          do {\u000a            *puVar9 = *puVar6;\u000a            puVar9 = puVar9 + 1;\u000a            puVar6 = puVar6 + 1;\u000a            iVar3 = iVar3 + -1;\u000a          } while (iVar3 != 0);\u000a          unaff_r6[iVar4] = 0;\u000a          unaff_r6 = unaff_r6 + iVar4 + 1;\u000a        }\u000a      }\u000a      if (in_stack_00000028[8] == 1) goto LAB_0001e338;\u000a      iVar4 = in_stack_00000028[7];\u000a      if (iVar4 != 0) {\u000a        puVar6 = (undefined *)in_stack_00000028[6];\u000a        iVar3 = iVar4;\u000a        puVar9 = unaff_r6;\u000a        do {\u000a          *puVar9 = *puVar6;\u000a          puVar9 = puVar9 + 1;\u000a          puVar6 = puVar6 + 1;\u000a          iVar3 = iVar3 + -1;\u000a          if (iVar3 == 0) goto LAB_0001e36a;\u000a        } while( true );\u000a      }\u000a    }\u000a    while( true ) {\u000a      while( true ) {\u000a        in_stack_00000028 = (int *)*in_stack_00000028;\u000a        if (in_stack_00000028 == (int *)0x0) {\u000a          if (__s != (char *)0x0) {\u000a            iVar4 = 4;\u000a            if ((*in_stack_00000004 != 0) &&\u000a               (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0))\u000a            {\u000a              do {\u000a                unaff_r6[iVar4 + -1] = (char)uVar8;\u000a                iVar4 = iVar4 + -1;\u000a                uVar8 = uVar8 >> 8;\u000a              } while (0 < iVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a              strlen(__s);\u000a            }\u000a          }\u000a          __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a          if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a            return in_stack_0000002c;\u000a          }\u000a                    /* WARNING: Subroutine does not return */\u000a          __stack_chk_fail();\u000a        }\u000a        unaff_r4 = in_stack_00000028[1];\u000a        uVar8 = 0xff;\u000a        iVar4 = 4;\u000a        if ((unaff_r4 != DAT_0001e494) && (uVar2 = in_stack_00000030, unaff_r4 != DAT_0001e498))\u000a        break;\u000a        iVar4 = in_stack_00000028[4] * 2 + 0x10;\u000a        if (in_stack_00000028[5] != 1) {\u000a          iVar4 = in_stack_00000028[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar3 = in_stack_00000028[8];\u000a        }\u000a        uVar8 = (in_stack_00000028[7] << iVar3) + iVar4;\u000a        iVar4 = 4;\u000a        if (10 < uVar8) {\u000a          do {\u000a            unaff_r6[iVar4 + -1] = (char)unaff_r4;\u000a            iVar4 = iVar4 + -1;\u000a            unaff_r4 = unaff_r4 >> 8;\u000a          } while (0 < iVar4);\u000a          uVar8 = uVar8 - 10;\u000a          iVar4 = 4;\u000a          do {\u000a            unaff_r6[iVar4 + 3] = (char)uVar8;\u000a            iVar4 = iVar4 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar4);\u000a          unaff_r6[8] = 0;\u000a          unaff_r6[9] = 0;\u000a          *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a          unaff_r6[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a          unaff_r6[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a          unaff_r6[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a          puVar9 = unaff_r6 + 0xe;\u000a          if (in_stack_00000028[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)\u000a                     writeUcs2s(puVar9,in_stack_00000028[3],in_stack_00000028[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar4 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar4;\u000a          }\u000a          iVar4 = in_stack_00000028[4];\u000a          if (iVar4 != 0) {\u000a            puVar1 = (undefined *)in_stack_00000028[3];\u000a            iVar3 = iVar4;\u000a            puVar6 = puVar9;\u000a            do {\u000a              *puVar6 = *puVar1;\u000a              puVar6 = puVar6 + 1;\u000a              puVar1 = puVar1 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar9 = puVar9 + iVar4;\u000a          }\u000a          *puVar9 = 0;\u000a          unaff_r6 = puVar9 + 1;\u000a          if (in_stack_00000028[8] == 1) {\u000aLAB_0001e338:\u000a            unaff_r6 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[6],in_stack_00000028[7]);\u000a          }\u000a          else {\u000a            iVar4 = in_stack_00000028[7];\u000a            if (iVar4 != 0) {\u000a              puVar6 = (undefined *)in_stack_00000028[6];\u000a              iVar3 = iVar4;\u000a              puVar9 = unaff_r6;\u000a              do {\u000a                *puVar9 = *puVar6;\u000a                puVar9 = puVar9 + 1;\u000a                puVar6 = puVar6 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              unaff_r6 = unaff_r6 + iVar4;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      do {\u000a        uVar5 = uVar8 & 0x57000000;\u000a        uVar7 = in_stack_00000030;\u000a        if (uVar5 != (uVar8 & unaff_r4)) {\u000a          uVar7 = uVar8 & unaff_r4;\u000a        }\u000a        if (uVar5 == 0) {\u000a          uVar7 = uVar5;\u000a        }\u000a        uVar2 = uVar2 | uVar7;\u000a        iVar4 = iVar4 + -1;\u000a        uVar8 = uVar8 << 8;\u000a      } while (iVar4 != 0);\u000a      if (uVar2 != 0) break;\u000a      uVar8 = sizeOfWxxxNode(in_stack_00000028);\u000a      iVar4 = 4;\u000a      if (10 < uVar8) {\u000a        do {\u000a          unaff_r6[iVar4 + -1] = (char)unaff_r4;\u000a          iVar4 = iVar4 + -1;\u000a          unaff_r4 = unaff_r4 >> 8;\u000a        } while (0 < iVar4);\u000a        uVar8 = uVar8 - 10;\u000a        iVar4 = 4;\u000a        do {\u000a          unaff_r6[iVar4 + 3] = (char)uVar8;\u000a          iVar4 = iVar4 + -1;\u000a          uVar8 = uVar8 >> 8;\u000a        } while (0 < iVar4);\u000a        unaff_r6[8] = 0;\u000a        unaff_r6[9] = 0;\u000a        puVar9 = unaff_r6 + 10;\u000a        if (in_stack_00000028[4] != 0) {\u000a          *(bool *)(unaff_r6 + 10) = in_stack_00000028[5] == 1;\u000a          puVar9 = unaff_r6 + 0xb;\u000a          if (in_stack_00000028[5] == 1) {\u000a            puVar9 = (undefined *)writeUcs2s(puVar9,in_stack_00000028[3],in_stack_00000028[4]);\u000a            *puVar9 = 0;\u000a            puVar9[1] = 0;\u000a            puVar9 = puVar9 + 2;\u000a          }\u000a          else {\u000a            iVar4 = in_stack_00000028[4];\u000a            if (iVar4 != 0) {\u000a              puVar1 = (undefined *)in_stack_00000028[3];\u000a              iVar3 = iVar4;\u000a              puVar6 = puVar9;\u000a              do {\u000a                *puVar6 = *puVar1;\u000a                puVar6 = puVar6 + 1;\u000a                puVar1 = puVar1 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              puVar9 = puVar9 + iVar4;\u000a            }\u000a            *puVar9 = 0;\u000a            puVar9 = puVar9 + 1;\u000a          }\u000a        }\u000a        if (in_stack_00000028[8] == 1) {\u000a          unaff_r6 = (undefined *)writeLoBytes(puVar9,in_stack_00000028[6],in_stack_00000028[7]);\u000a        }\u000a        else {\u000a          iVar4 = in_stack_00000028[7];\u000a          unaff_r6 = puVar9;\u000a          if (iVar4 != 0) {\u000a            puVar1 = (undefined *)in_stack_00000028[6];\u000a            iVar3 = iVar4;\u000a            puVar6 = puVar9;\u000a            do {\u000a              *puVar6 = *puVar1;\u000a              puVar6 = puVar6 + 1;\u000a              puVar1 = puVar1 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            unaff_r6 = puVar9 + iVar4;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    gfp = (lame_global_flags *)in_stack_00000028[7];\u000a    in_r2 = in_stack_00000028[8];\u000a    in_r1 = in_stack_00000028[4];\u000a  } while( true );\u000a}\u000a\u000a
p1914
S'cmp r2,#0x1\n'
p1915
S'01 2a\n'
p1916
S'.text:0001e17c\n'
p1917
tp1918
sS'lame_get_ReplayGain_decode'
p1919
(S'\n__stdcall lame_get_ReplayGain_decode(lame_global_flags * gfp)\n'
p1920
V\u000aint lame_get_ReplayGain_decode(lame_global_flags *gfp)\u000a\u000a{\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000aLAB_0001e36a:\u000a  do {\u000a    unaff_r6 = unaff_r6 + (int)gfp;\u000aLAB_0001e09a:\u000a    unaff_r5 = (int *)*unaff_r5;\u000a    if (unaff_r5 == (int *)0x0) {\u000a      if (__s != (char *)0x0) {\u000a        iVar2 = 4;\u000a        if ((*in_stack_00000004 != 0) &&\u000a           (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a          do {\u000a            unaff_r6[iVar2 + -1] = (char)uVar8;\u000a            iVar2 = iVar2 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a          strlen(__s);\u000a        }\u000a      }\u000a      __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a      if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a        return in_stack_0000002c;\u000a      }\u000a                    /* WARNING: Subroutine does not return */\u000a      __stack_chk_fail();\u000a    }\u000a    uVar8 = unaff_r5[1];\u000a    uVar10 = 0xff;\u000a    iVar2 = 4;\u000a    if ((uVar8 != DAT_0001e494) && (uVar3 = in_stack_00000030, uVar8 != DAT_0001e498)) {\u000a      do {\u000a        uVar6 = uVar10 & 0x57000000;\u000a        uVar9 = in_stack_00000030;\u000a        if (uVar6 != (uVar10 & uVar8)) {\u000a          uVar9 = uVar10 & uVar8;\u000a        }\u000a        if (uVar6 == 0) {\u000a          uVar9 = uVar6;\u000a        }\u000a        uVar3 = uVar3 | uVar9;\u000a        iVar2 = iVar2 + -1;\u000a        uVar10 = uVar10 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar3 == 0) {\u000a        uVar10 = sizeOfWxxxNode(unaff_r5);\u000a        iVar2 = 4;\u000a        if (10 < uVar10) {\u000a          do {\u000a            unaff_r6[iVar2 + -1] = (char)uVar8;\u000a            iVar2 = iVar2 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar10 = uVar10 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            unaff_r6[iVar2 + 3] = (char)uVar10;\u000a            iVar2 = iVar2 + -1;\u000a            uVar10 = uVar10 >> 8;\u000a          } while (0 < iVar2);\u000a          unaff_r6[8] = 0;\u000a          unaff_r6[9] = 0;\u000a          puVar11 = unaff_r6 + 10;\u000a          if (unaff_r5[4] != 0) {\u000a            *(bool *)(unaff_r6 + 10) = unaff_r5[5] == 1;\u000a            puVar11 = unaff_r6 + 0xb;\u000a            if (unaff_r5[5] == 1) {\u000a              puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a              *puVar11 = 0;\u000a              puVar11[1] = 0;\u000a              puVar11 = puVar11 + 2;\u000a            }\u000a            else {\u000a              iVar2 = unaff_r5[4];\u000a              if (iVar2 != 0) {\u000a                puVar1 = (undefined *)unaff_r5[3];\u000a                iVar4 = iVar2;\u000a                puVar7 = puVar11;\u000a                do {\u000a                  *puVar7 = *puVar1;\u000a                  puVar7 = puVar7 + 1;\u000a                  puVar1 = puVar1 + 1;\u000a                  iVar4 = iVar4 + -1;\u000a                } while (iVar4 != 0);\u000a                puVar11 = puVar11 + iVar2;\u000a              }\u000a              *puVar11 = 0;\u000a              puVar11 = puVar11 + 1;\u000a            }\u000a          }\u000a          if (unaff_r5[8] == 1) {\u000a            unaff_r6 = (undefined *)writeLoBytes(puVar11,unaff_r5[6],unaff_r5[7]);\u000a          }\u000a          else {\u000a            iVar2 = unaff_r5[7];\u000a            unaff_r6 = puVar11;\u000a            if (iVar2 != 0) {\u000a              puVar1 = (undefined *)unaff_r5[6];\u000a              iVar4 = iVar2;\u000a              puVar7 = puVar11;\u000a              do {\u000a                *puVar7 = *puVar1;\u000a                puVar7 = puVar7 + 1;\u000a                puVar1 = puVar1 + 1;\u000a                iVar4 = iVar4 + -1;\u000a              } while (iVar4 != 0);\u000a              unaff_r6 = puVar11 + iVar2;\u000a            }\u000a          }\u000a        }\u000a        goto LAB_0001e09a;\u000a      }\u000a      iVar2 = unaff_r5[7];\u000a      iVar4 = unaff_r5[4];\u000a      if (unaff_r5[8] == 1) {\u000a        iVar5 = iVar4 * 2 + 0xd;\u000a        if (iVar4 == 0) {\u000a          iVar5 = 0xb;\u000a        }\u000a        iVar2 = iVar2 << 1;\u000a      }\u000a      else {\u000a        iVar5 = iVar4 + 0xc;\u000a        if (iVar4 == 0) {\u000a          iVar5 = 0xb;\u000a        }\u000a      }\u000a      iVar4 = 4;\u000a      if ((uint)(iVar5 + iVar2) < 0xb) goto LAB_0001e09a;\u000a      do {\u000a        unaff_r6[iVar4 + -1] = (char)uVar8;\u000a        iVar4 = iVar4 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar4);\u000a      uVar8 = (iVar5 + iVar2) - 10;\u000a      iVar2 = 4;\u000a      do {\u000a        unaff_r6[iVar2 + 3] = (char)uVar8;\u000a        iVar2 = iVar2 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar2);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = unaff_r5[8] == 1;\u000a      unaff_r6 = unaff_r6 + 0xb;\u000a      iVar2 = unaff_r5[4];\u000a      if (iVar2 != 0) {\u000a        if (unaff_r5[5] == 1) {\u000a          puVar11 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[3]);\u000a          *puVar11 = 0;\u000a          puVar11[1] = 0;\u000a          unaff_r6 = puVar11 + 2;\u000a        }\u000a        else {\u000a          puVar7 = (undefined *)unaff_r5[3];\u000a          iVar4 = iVar2;\u000a          puVar11 = unaff_r6;\u000a          do {\u000a            *puVar11 = *puVar7;\u000a            puVar11 = puVar11 + 1;\u000a            puVar7 = puVar7 + 1;\u000a            iVar4 = iVar4 + -1;\u000a          } while (iVar4 != 0);\u000a          unaff_r6[iVar2] = 0;\u000a          unaff_r6 = unaff_r6 + iVar2 + 1;\u000a        }\u000a      }\u000a      if (unaff_r5[8] == 1) goto LAB_0001e338;\u000a      gfp = (lame_global_flags *)unaff_r5[7];\u000a      if (gfp == (lame_global_flags *)0x0) goto LAB_0001e09a;\u000a      puVar7 = (undefined *)unaff_r5[6];\u000a      gfp_00 = gfp;\u000a      puVar11 = unaff_r6;\u000a      do {\u000a        *puVar11 = *puVar7;\u000a        puVar11 = puVar11 + 1;\u000a        puVar7 = puVar7 + 1;\u000a        gfp_00 = (lame_global_flags *)((int)&gfp_00->attackthre_s + 3);\u000a      } while (gfp_00 != (lame_global_flags *)0x0);\u000a      goto LAB_0001e36a;\u000a    }\u000a    iVar2 = unaff_r5[4] * 2 + 0x10;\u000a    if (unaff_r5[5] != 1) {\u000a      iVar2 = unaff_r5[4] + 0xf;\u000a    }\u000a    iVar4 = 0;\u000a    if (unaff_r5[8] == 1) {\u000a      iVar4 = unaff_r5[8];\u000a    }\u000a    uVar10 = (unaff_r5[7] << iVar4) + iVar2;\u000a    iVar2 = 4;\u000a    if (uVar10 < 0xb) goto LAB_0001e09a;\u000a    do {\u000a      unaff_r6[iVar2 + -1] = (char)uVar8;\u000a      iVar2 = iVar2 + -1;\u000a      uVar8 = uVar8 >> 8;\u000a    } while (0 < iVar2);\u000a    uVar10 = uVar10 - 10;\u000a    iVar2 = 4;\u000a    do {\u000a      unaff_r6[iVar2 + 3] = (char)uVar10;\u000a      iVar2 = iVar2 + -1;\u000a      uVar10 = uVar10 >> 8;\u000a    } while (0 < iVar2);\u000a    unaff_r6[8] = 0;\u000a    unaff_r6[9] = 0;\u000a    *(bool *)(unaff_r6 + 10) = unaff_r5[8] == 1;\u000a    unaff_r6[0xb] = *(undefined *)(unaff_r5 + 2);\u000a    unaff_r6[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a    unaff_r6[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a    puVar11 = unaff_r6 + 0xe;\u000a    if (unaff_r5[5] == 1) {\u000a      gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a      *(undefined *)&gfp_00->class_id = 0;\u000a      *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a      iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a      return iVar2;\u000a    }\u000a    iVar2 = unaff_r5[4];\u000a    if (iVar2 != 0) {\u000a      puVar1 = (undefined *)unaff_r5[3];\u000a      iVar4 = iVar2;\u000a      puVar7 = puVar11;\u000a      do {\u000a        *puVar7 = *puVar1;\u000a        puVar7 = puVar7 + 1;\u000a        puVar1 = puVar1 + 1;\u000a        iVar4 = iVar4 + -1;\u000a      } while (iVar4 != 0);\u000a      puVar11 = puVar11 + iVar2;\u000a    }\u000a    *puVar11 = 0;\u000a    unaff_r6 = puVar11 + 1;\u000a    if (unaff_r5[8] == 1) {\u000aLAB_0001e338:\u000a      unaff_r6 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[6],unaff_r5[7]);\u000a      goto LAB_0001e09a;\u000a    }\u000a    gfp = (lame_global_flags *)unaff_r5[7];\u000a    if (gfp == (lame_global_flags *)0x0) goto LAB_0001e09a;\u000a    puVar7 = (undefined *)unaff_r5[6];\u000a    gfp_00 = gfp;\u000a    puVar11 = unaff_r6;\u000a    do {\u000a      *puVar11 = *puVar7;\u000a      puVar11 = puVar11 + 1;\u000a      puVar7 = puVar7 + 1;\u000a      gfp_00 = (lame_global_flags *)((int)&gfp_00->attackthre_s + 3);\u000a    } while (gfp_00 != (lame_global_flags *)0x0);\u000a  } while( true );\u000a}\u000a\u000a
p1921
S'b 0x0001e36a\n'
p1922
S'98 e0\n'
p1923
S'.text:0001e236\n'
p1924
tp1925
sS'lame_get_AudiophileGain'
p1926
(S'\n__stdcall lame_get_AudiophileGain()\n'
p1927
V\u000aundefined4 lame_get_AudiophileGain(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  if (iVar1 != 0) {\u000a    is_lame_internal_flags_valid(*(undefined4 *)(iParm1 + 0x120));\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1928
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f322\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r0,[r4,r0]\nbl 0x00038440\nmov r0,#0x0\npop { r4, r6, r7, pc }\n'
p1929
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 8e f8\n00 28\n04 d0\n09 20\n40 01\n20 58\n09 f0 8f f8\n00 20\nd0 bd\n'
p1930
S'.text:0002f308\n.text:0002f30a\n.text:0002f30c\n.text:0002f30e\n.text:0002f310\n.text:0002f314\n.text:0002f316\n.text:0002f318\n.text:0002f31a\n.text:0002f31c\n.text:0002f31e\n.text:0002f322\n.text:0002f324\n'
p1931
tp1932
sS'huffman_init'
p1933
(S'\n__stdcall huffman_init(lame_internal_flags * gfc)\n'
p1934
V\u000avoid huffman_init(lame_internal_flags *gfc)\u000a\u000a{\u000a  int unaff_r4;\u000a  \u000a  lame_msgf(unaff_r4,DAT_00020cb4 + 0x20a6a);\u000a  lame_msgf(unaff_r4,DAT_00020cb8 + 0x20a7a,*(undefined4 *)(unaff_r4 + 0xd0));\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(*(undefined4 *)(unaff_r4 + 0xcc));\u000a}\u000a\u000a
p1935
S'mov r0,#0xd4\nldr r0,[r4,r0]\ncmp r0,#0x0\nbeq 0x00020a58\nldr r2,[0x00020cac]\nadd r2,pc\nmov r0,#0xdc\nldr r0,[r4,r0]\ncmp r0,#0x0\nbeq 0x00020a64\nldr r2,[0x00020cb0]\nadd r2,pc\nldr r1,[0x00020cb4]\nadd r1,pc\npush { r4 }\npop { r0 }\nbl 0x00037e70\nmov r0,#0xd0\nldr r2,[r4,r0]\nldr r1,[0x00020cb8]\nadd r1,pc\npush { r4 }\npop { r0 }\nbl 0x00037e70\nmov r0,#0xcc\nldr r0,[r4,r0]\nbl 0x00037ac0\n'
p1936
S'd4 20\n20 58\n00 28\n01 d0\n95 4a\n7a 44\ndc 20\n20 58\n00 28\n01 d0\n93 4a\n7a 44\n93 49\n79 44\n10 b4\n01 bc\n17 f0 00 fa\nd0 20\n22 58\n90 49\n79 44\n10 b4\n01 bc\n17 f0 f8 f9\ncc 20\n20 58\n17 f0 1c f8\n'
p1937
S'.text:00020a4c\n.text:00020a4e\n.text:00020a50\n.text:00020a52\n.text:00020a54\n.text:00020a56\n.text:00020a58\n.text:00020a5a\n.text:00020a5c\n.text:00020a5e\n.text:00020a60\n.text:00020a62\n.text:00020a64\n.text:00020a66\n.text:00020a68\n.text:00020a6a\n.text:00020a6c\n.text:00020a70\n.text:00020a72\n.text:00020a74\n.text:00020a76\n.text:00020a78\n.text:00020a7a\n.text:00020a7c\n.text:00020a80\n.text:00020a82\n.text:00020a84\n'
p1938
tp1939
sS'bitcount'
p1940
(S'\n__stdcall bitcount()\n'
p1941
V\u000avoid bitcount(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = scale_bitcount(*(undefined4 *)(iParm1 + 0xc),*(undefined4 *)(iParm1 + 0x10));\u000a  if (iVar1 == 0) {\u000a    return;\u000a  }\u000a  lame_errorf(*(undefined4 *)(iParm1 + 0xc),DAT_00033958 + 0x3394e);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(-1);\u000a}\u000a\u000a
p1942
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nldr r0,[r4,#0xc]\nldr r1,[r4,#0x10]\nbl 0x000383e0\ncmp r0,#0x0\nbne 0x00033946\npop { r4, r6, r7, pc }\nldr r0,[r4,#0xc]\nldr r1,[0x00033958]\nadd r1,pc\nbl 0x00037990\nmov r0,#0x0\nmvn r0,r0\nbl 0x000383a0\n'
p1943
S'd0 b5\n02 af\n01 b4\n10 bc\ne0 68\n21 69\n04 f0 50 fd\n00 28\n00 d1\nd0 bd\ne0 68\n03 49\n79 44\n04 f0 20 f8\n00 20\nc0 43\n04 f0 24 fd\n'
p1944
S'.text:00033930\n.text:00033932\n.text:00033934\n.text:00033936\n.text:00033938\n.text:0003393a\n.text:0003393c\n.text:00033940\n.text:00033942\n.text:00033944\n.text:00033946\n.text:00033948\n.text:0003394a\n.text:0003394c\n.text:00033950\n.text:00033952\n.text:00033954\n'
p1945
tp1946
sS'on_pe'
p1947
(S'\n__stdcall on_pe(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined4 param_6)\n'
p1948
V\u000avoid on_pe(void)\u000a\u000a{\u000a  (*(reduce_side + DAT_000382fc))();\u000a  return;\u000a}\u000a\u000a
p1949
S'ldr r12,[0x382fc]\nadd pc,r12,pc\n'
p1950
S'00 c0 9f e5\n0f f0 8c e0\n'
p1951
S'.text:000382f4\n.text:000382f8\n'
p1952
tp1953
sS'lame_set_ATHtype'
p1954
(S'\n__stdcall lame_set_ATHtype()\n'
p1955
V\u000avoid lame_set_ATHtype(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038240 + DAT_0003823c))();\u000a  return;\u000a}\u000a\u000a
p1956
S'ldr r12,[0x3823c]\nadd pc,r12,pc\n'
p1957
S'00 c0 9f e5\n0f f0 8c e0\n'
p1958
S'.text:00038234\n.text:00038238\n'
p1959
tp1960
sS'lame_get_frameNum'
p1961
(S'\n__stdcall lame_get_frameNum()\n'
p1962
V\u000aundefined4 lame_get_frameNum(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f238);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p1963
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f230\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f230\nldr r0,[0x0002f238]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p1964
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 0e f9\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 0c f9\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p1965
S'.text:0002f208\n.text:0002f20a\n.text:0002f20c\n.text:0002f20e\n.text:0002f210\n.text:0002f214\n.text:0002f216\n.text:0002f218\n.text:0002f21a\n.text:0002f21c\n.text:0002f21e\n.text:0002f220\n.text:0002f222\n.text:0002f224\n.text:0002f228\n.text:0002f22a\n.text:0002f22c\n.text:0002f22e\n.text:0002f230\n.text:0002f232\n.text:0002f234\n'
p1966
tp1967
sS'fill_buffer'
p1968
(S'\n__stdcall fill_buffer()\n'
p1969
V\u000avoid fill_buffer(void)\u000a\u000a{\u000a  (*(AnalyzeSamples + DAT_0003800c))();\u000a  return;\u000a}\u000a\u000a
p1970
S'ldr r12,[0x3800c]\nadd pc,r12,pc\n'
p1971
S'00 c0 9f e5\n0f f0 8c e0\n'
p1972
S'.text:00038004\n.text:00038008\n'
p1973
tp1974
sS'has_MMX'
p1975
(S'\n__stdcall has_MMX()\n'
p1976
V\u000avoid has_MMX(void)\u000a\u000a{\u000a  (*(has_SSE + DAT_00037dbc))();\u000a  return;\u000a}\u000a\u000a
p1977
S'ldr r12,[0x37dbc]\nadd pc,r12,pc\n'
p1978
S'00 c0 9f e5\n0f f0 8c e0\n'
p1979
S'.text:00037db4\n.text:00037db8\n'
p1980
tp1981
sS'__aeabi_dcmpgt'
p1982
(S'\n__stdcall __aeabi_dcmpgt()\n'
p1983
V\u000avoid __aeabi_dcmpgt(void)\u000a\u000a{\u000a  (*(__aeabi_dcmplt + DAT_00037d3c))();\u000a  return;\u000a}\u000a\u000a
p1984
S'ldr r12,[0x37d3c]\nadd pc,r12,pc\n'
p1985
S'00 c0 9f e5\n0f f0 8c e0\n'
p1986
S'.text:00037d34\n.text:00037d38\n'
p1987
tp1988
sS'search_EIT_table'
p1989
(S'\n__stdcall search_EIT_table()\n'
p1990
V\u000aint search_EIT_table(int iParm1,int iParm2,uint uParm3)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  \u000a  if (iParm2 == 0) {\u000a    return 0;\u000a  }\u000a  iVar6 = 0;\u000a  iVar5 = iParm2 + -1;\u000a  do {\u000a    while( true ) {\u000a      iVar1 = (int)(iVar6 + iVar5 + ((uint)(iVar6 + iVar5) >> 0x1f)) >> 1;\u000a      iVar4 = iParm1 + iVar1 * 8;\u000a      uVar2 = selfrel_offset31(iVar4);\u000a      if (iVar1 == iParm2 + -1) break;\u000a      iVar3 = selfrel_offset31(iParm1 + iVar1 * 8 + 8);\u000a      if (uParm3 < uVar2) goto LAB_0003643c;\u000a      if (uParm3 <= iVar3 - 1U) {\u000a        return iVar4;\u000a      }\u000a      iVar6 = iVar1 + 1;\u000a    }\u000a    if (uVar2 <= uParm3) {\u000a      return iVar4;\u000a    }\u000aLAB_0003643c:\u000a    if (iVar1 == iVar6) {\u000a      return 0;\u000a    }\u000a    iVar5 = iVar1 + -1;\u000a  } while( true );\u000a}\u000a\u000a
p1991
S'stmdb sp!,{ r0 r1 r2 r4 r5 r6 r7 r8 r9 r10 r11 lr }\ncmp r1,#0x0\ncpy r5,r1\nbeq 0x00036470\nsub r8,r1,#0x1\ncpy r6,r2\ncpy r7,r0\ncpy r9,r8\nmov r11,#0x0\nadd r4,r11,r9\nadd r4,r4,r4, lsr #0x1f\nmov r4,r4, asr #0x1\nmov r10,r4, lsl #0x3\nadd r5,r7,r10\ncpy r0,r5\nbl 0x000363c0\ncmp r4,r8\nbeq 0x00036468\nstr r0,[sp,#0x4]\nadd r0,r10,#0x8\nadd r0,r7,r0\nbl 0x000363c0\nldr r3,[sp,#0x4]\ncmp r6,r3\nbcs 0x0003644c\ncmp r4,r11\nbeq 0x00036460\nsub r9,r4,#0x1\nb 0x000363fc\nsub r0,r0,#0x1\ncmp r6,r0\nbls 0x00036470\nadd r11,r4,#0x1\nb 0x000363fc\nmov r5,#0x0\nb 0x00036470\ncmp r6,r0\nbcc 0x0003643c\ncpy r0,r5\nadd sp,sp,#0xc\nldmia sp!,{ r4 r5 r6 r7 r8 r9 r10 r11 pc }\n'
p1992
S'f7 4f 2d e9\n00 00 51 e3\n01 50 a0 e1\n21 00 00 0a\n01 80 41 e2\n02 60 a0 e1\n00 70 a0 e1\n08 90 a0 e1\n00 b0 a0 e3\n09 40 8b e0\na4 4f 84 e0\nc4 40 a0 e1\n84 a1 a0 e1\n0a 50 87 e0\n05 00 a0 e1\ne9 ff ff eb\n08 00 54 e1\n11 00 00 0a\n04 00 8d e5\n08 00 8a e2\n00 00 87 e0\ne3 ff ff eb\n04 30 9d e5\n03 00 56 e1\n03 00 00 2a\n0b 00 54 e1\n06 00 00 0a\n01 90 44 e2\neb ff ff ea\n01 00 40 e2\n00 00 56 e1\n05 00 00 9a\n01 b0 84 e2\ne6 ff ff ea\n00 50 a0 e3\n01 00 00 ea\n00 00 56 e1\nf2 ff ff 3a\n05 00 a0 e1\n0c d0 8d e2\nf0 8f bd e8\n'
p1993
S'.text:000363d8\n.text:000363dc\n.text:000363e0\n.text:000363e4\n.text:000363e8\n.text:000363ec\n.text:000363f0\n.text:000363f4\n.text:000363f8\n.text:000363fc\n.text:00036400\n.text:00036404\n.text:00036408\n.text:0003640c\n.text:00036410\n.text:00036414\n.text:00036418\n.text:0003641c\n.text:00036420\n.text:00036424\n.text:00036428\n.text:0003642c\n.text:00036430\n.text:00036434\n.text:00036438\n.text:0003643c\n.text:00036440\n.text:00036444\n.text:00036448\n.text:0003644c\n.text:00036450\n.text:00036454\n.text:00036458\n.text:0003645c\n.text:00036460\n.text:00036464\n.text:00036468\n.text:0003646c\n.text:00036470\n.text:00036474\n.text:00036478\n'
p1994
tp1995
sS'__aeabi_memset'
p1996
(S'\n__stdcall __aeabi_memset()\n'
p1997
V\u000avoid __aeabi_memset(void)\u000a\u000a{\u000a  (*(has_3DNow + DAT_00037d9c))();\u000a  return;\u000a}\u000a\u000a
p1998
S'ldr r12,[0x37d9c]\nadd pc,r12,pc\n'
p1999
S'00 c0 9f e5\n0f f0 8c e0\n'
p2000
S'.text:00037d94\n.text:00037d98\n'
p2001
tp2002
sS'concatSep'
p2003
(S'\n__stdcall concatSep()\n'
p2004
V\u000avoid concatSep(char *pcParm1,char *pcParm2)\u000a\u000a{\u000a  if (*pcParm1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(pcParm1);\u000a  }\u000a  strcat(pcParm1,pcParm2);\u000a  return;\u000a}\u000a\u000a
p2005
S'push { r4, r5, r7, lr }\n'
p2006
S'b0 b5\n'
p2007
S'.text:000207a0\n'
p2008
tp2009
sS'lame_set_msfix'
p2010
(S'\n__stdcall lame_set_msfix()\n'
p2011
V\u000avoid lame_set_msfix(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  if (iVar1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __truncdfsf2(uParm3,uParm4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2012
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r3 }\npop { r5 }\npush { r2 }\npop { r6 }\npush { r0 }\npop { r4 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f592\npush { r6 }\npop { r0 }\npush { r5 }\npop { r1 }\nbl 0x00037af0\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p2013
S'f0 b5\n03 af\n81 b0\n08 b4\n20 bc\n04 b4\n40 bc\n01 b4\n10 bc\n08 f0 59 ff\n00 28\n07 d0\n40 b4\n01 bc\n20 b4\n02 bc\n08 f0 b1 fa\n01 b0\nf0 bd\n'
p2014
S'.text:0002f568\n.text:0002f56a\n.text:0002f56c\n.text:0002f56e\n.text:0002f570\n.text:0002f572\n.text:0002f574\n.text:0002f576\n.text:0002f578\n.text:0002f57a\n.text:0002f57e\n.text:0002f580\n.text:0002f582\n.text:0002f584\n.text:0002f586\n.text:0002f588\n.text:0002f58a\n.text:0002f592\n.text:0002f594\n'
p2015
tp2016
sS'lame_set_highpasswidth'
p2017
(S'\n__stdcall lame_set_highpasswidth(lame_global_flags * gfp, int highpasswidth)\n'
p2018
V\u000aint lame_set_highpasswidth(lame_global_flags *gfp,int highpasswidth)\u000a\u000a{\u000a  int in_r2;\u000a  int in_r3;\u000a  \u000a  return (uint)(in_r2 == in_r3);\u000a}\u000a\u000a
p2019
S'mov r0,#0x1\nmov r1,#0x0\ncmp r2,r3\nbeq 0x0001ea92\npush { r1 }\npop { r0 }\n'
p2020
S'01 20\n00 21\n9a 42\n01 d0\n02 b4\n01 bc\n'
p2021
S'.text:0001ea86\n.text:0001ea88\n.text:0001ea8a\n.text:0001ea8c\n.text:0001ea8e\n.text:0001ea90\n'
p2022
tp2023
sS'__fixsfsi'
p2024
(S'\n__stdcall __fixsfsi()\n'
p2025
V\u000auint __fixsfsi(uint uParm1)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  \u000a  if (uParm1 << 1 < 0x7f000000) {\u000a    return 0;\u000a  }\u000a  uVar1 = (uParm1 << 1) >> 0x18;\u000a  uVar2 = 0x9e - uVar1;\u000a  if (uVar1 < 0x9f && uVar2 != 0) {\u000a    uVar1 = (uParm1 << 8 | 0x80000000) >> (uVar2 & 0xff);\u000a    if ((uParm1 & 0x80000000) != 0) {\u000a      uVar1 = -uVar1;\u000a    }\u000a    return uVar1;\u000a  }\u000a  if ((uVar2 == 0xffffff9f) && ((uParm1 & 0x7fffff) != 0)) {\u000a    return 0;\u000a  }\u000a  uParm1 = uParm1 & 0x80000000;\u000a  if (uParm1 == 0) {\u000a    uParm1 = 0x7fffffff;\u000a  }\u000a  return uParm1;\u000a}\u000a\u000a
p2026
S'mov r2,r0, lsl #0x1\ncmp r2,#0x7f000000\nbcc 0x00036384\nmov r3,#0x9e\nsubs r2,r3,r2, lsr #0x18\nbls 0x0003638c\nmov r3,r0, lsl #0x8\norr r3,r3,#0x80000000\ntst r0,#0x80000000\nmov r0,r3, lsr r2\nrsbne r0,r0,#0x0\nbx lr\nmov r0,#0x0\nbx lr\ncmn r2,#0x61\nbne 0x0003639c\nmovs r2,r0, lsl #0x9\nbne 0x000363a8\nands r0,r0,#0x80000000\nmvneq r0,#0x80000000\nbx lr\nmov r0,#0x0\nbx lr\n'
p2027
S'80 20 a0 e1\n7f 04 52 e3\n08 00 00 3a\n9e 30 a0 e3\n22 2c 53 e0\n07 00 00 9a\n00 34 a0 e1\n02 31 83 e3\n02 01 10 e3\n33 02 a0 e1\n00 00 60 12\n1e ff 2f e1\n00 00 a0 e3\n1e ff 2f e1\n61 00 72 e3\n01 00 00 1a\n80 24 b0 e1\n02 00 00 1a\n02 01 10 e2\n02 01 e0 03\n1e ff 2f e1\n00 00 a0 e3\n1e ff 2f e1\n'
p2028
S'.text:00036354\n.text:00036358\n.text:0003635c\n.text:00036360\n.text:00036364\n.text:00036368\n.text:0003636c\n.text:00036370\n.text:00036374\n.text:00036378\n.text:0003637c\n.text:00036380\n.text:00036384\n.text:00036388\n.text:0003638c\n.text:00036390\n.text:00036394\n.text:00036398\n.text:0003639c\n.text:000363a0\n.text:000363a4\n.text:000363a8\n.text:000363ac\n'
p2029
tp2030
sS'lame_get_ATHlower'
p2031
(S'\n__stdcall lame_get_ATHlower()\n'
p2032
V\u000avoid lame_get_ATHlower(void)\u000a\u000a{\u000a  (*(code *)(&UNK_000381d0 + DAT_000381cc))();\u000a  return;\u000a}\u000a\u000a
p2033
S'ldr r12,[0x381cc]\nadd pc,r12,pc\n'
p2034
S'00 c0 9f e5\n0f f0 8c e0\n'
p2035
S'.text:000381c4\n.text:000381c8\n'
p2036
tp2037
sS'format_bitstream'
p2038
(S'\n__stdcall format_bitstream()\n'
p2039
V\u000avoid format_bitstream(void)\u000a\u000a{\u000a  (*(copy_buffer + DAT_00037b4c))();\u000a  return;\u000a}\u000a\u000a
p2040
S'ldr r12,[0x37b4c]\nadd pc,r12,pc\n'
p2041
S'00 c0 9f e5\n0f f0 8c e0\n'
p2042
S'.text:00037b44\n.text:00037b48\n'
p2043
tp2044
sS'get_lame_tag_encoder_short_version'
p2045
(S'\n__stdcall get_lame_tag_encoder_short_version()\n'
p2046
V\u000avoid get_lame_tag_encoder_short_version(void)\u000a\u000a{\u000a  (*(strncpy + DAT_000384cc))();\u000a  return;\u000a}\u000a\u000a
p2047
S'ldr r12,[0x384cc]\nadd pc,r12,pc\n'
p2048
S'00 c0 9f e5\n0f f0 8c e0\n'
p2049
S'.text:000384c4\n.text:000384c8\n'
p2050
tp2051
sS'GetVbrTag'
p2052
(S'\n__stdcall GetVbrTag()\n'
p2053
V\u000aundefined4 GetVbrTag(uint *puParm1,int iParm2)\u000a\u000a{\u000a  byte bVar1;\u000a  byte bVar2;\u000a  byte bVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  char *pcVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint *puVar9;\u000a  int iVar10;\u000a  undefined4 uVar11;\u000a  uint uVar12;\u000a  int iVar13;\u000a  char *pcVar14;\u000a  uint local_20;\u000a  \u000a  puParm1[2] = 0;\u000a  bVar1 = *(byte *)(iParm2 + 1);\u000a  if ((bVar1 & 6) != 2) {\u000a    return 0;\u000a  }\u000a  bVar2 = *(byte *)(iParm2 + 2);\u000a  uVar12 = (uint)bVar2 & 0xc;\u000a  uVar7 = (uint)(bVar1 >> 3) & 1;\u000a  puVar9 = (uint *)(*(int *)(DAT_000345c0 + 0x343e4) + uVar12 + 0x20);\u000a  if ((bVar1 & 0xf0) != 0xe0) {\u000a    puVar9 = (uint *)(*(int *)(DAT_000345c0 + 0x343e4) + uVar7 * 0x10 + uVar12);\u000a  }\u000a  bVar3 = *(byte *)(iParm2 + 3);\u000a  puParm1[1] = *puVar9;\u000a  iVar10 = *(int *)(DAT_000345c4 + 0x34412);\u000a  if ((bVar1 >> 3 & 1) == 0) {\u000a    if (2 < bVar3 >> 6) {\u000a      pcVar6 = (char *)(iParm2 + 0xd);\u000a      goto LAB_0003443c;\u000a    }\u000a  }\u000a  else {\u000a    if (bVar3 >> 6 < 3) {\u000a      pcVar6 = (char *)(iParm2 + 0x24);\u000a      goto LAB_0003443c;\u000a    }\u000a  }\u000a  pcVar6 = (char *)(iParm2 + 0x15);\u000aLAB_0003443c:\u000a  uVar11 = 0;\u000a  if (*pcVar6 == 'I') {\u000a    bVar4 = false;\u000a    bVar5 = false;\u000a    if (pcVar6[1] == 'n') {\u000a      bVar4 = false;\u000a      bVar5 = false;\u000a      if (pcVar6[2] == 'f') {\u000a        bVar5 = true;\u000a        bVar4 = false;\u000a        if (pcVar6[3] != 'o') {\u000a          bVar5 = false;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    bVar4 = false;\u000a    bVar5 = false;\u000a    if (*pcVar6 == 'X') {\u000a      bVar4 = false;\u000a      bVar5 = false;\u000a      if (pcVar6[1] == 'i') {\u000a        bVar4 = false;\u000a        bVar5 = false;\u000a        if (pcVar6[2] == 'n') {\u000a          bVar5 = false;\u000a          bVar4 = true;\u000a          if (pcVar6[3] != 'g') {\u000a            bVar4 = false;\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a  if ((bVar4) || (bVar5)) {\u000a    *puParm1 = uVar7;\u000a    bVar1 = pcVar6[7];\u000a    puParm1[2] = CONCAT31(CONCAT21(CONCAT11(pcVar6[4],pcVar6[5]),pcVar6[6]),bVar1);\u000a    pcVar14 = pcVar6 + 8;\u000a    uVar11 = 1;\u000a    if ((bVar1 & 1) != 0) {\u000a      puParm1[3] = CONCAT31(CONCAT21(CONCAT11(pcVar6[8],pcVar6[9]),pcVar6[10]),pcVar6[0xb]);\u000a      pcVar14 = pcVar6 + 0xc;\u000a    }\u000a    if ((bVar1 & 2) != 0) {\u000a      puParm1[4] = CONCAT31(CONCAT21(CONCAT11(*pcVar14,pcVar14[1]),pcVar14[2]),pcVar14[3]);\u000a      pcVar14 = pcVar14 + 4;\u000a    }\u000a    if ((bVar1 & 4) != 0) {\u000a      iVar13 = 0;\u000a      do {\u000a        *(char *)((int)puParm1 + iVar13 + 0x18) = pcVar14[iVar13];\u000a        iVar13 = iVar13 + 1;\u000a      } while (iVar13 != 100);\u000a      pcVar14 = pcVar14 + 100;\u000a    }\u000a    iVar10 = *(int *)(iVar10 + uVar7 * 0x40 + ((uint)(bVar2 >> 2) & 0x3c));\u000a    local_20 = 0xffffffff;\u000a    puParm1[5] = 0xffffffff;\u000a    if ((bVar1 & 8) != 0) {\u000a      puParm1[5] = CONCAT31(CONCAT21(CONCAT11(*pcVar14,pcVar14[1]),pcVar14[2]),pcVar14[3]);\u000a      pcVar14 = pcVar14 + 4;\u000a    }\u000a    uVar7 = __divsi3(iVar10 * ((-uVar7 & DAT_000345c8) + DAT_000345c8),puParm1[1]);\u000a    puParm1[0x1f] = uVar7;\u000a    uVar7 = DAT_000345cc;\u000a    bVar1 = pcVar14[0x16];\u000a    uVar8 = (uint)(bVar1 >> 4) | (uint)(byte)pcVar14[0x15] << 4;\u000a    uVar12 = 0xffffffff;\u000a    if (uVar8 <= DAT_000345cc) {\u000a      uVar12 = uVar8;\u000a    }\u000a    bVar2 = pcVar14[0x17];\u000a    puParm1[0x20] = uVar12;\u000a    uVar12 = ((uint)bVar1 & 0xf) << 8 | (uint)bVar2;\u000a    if (uVar12 <= uVar7) {\u000a      local_20 = uVar12;\u000a    }\u000a    puParm1[0x21] = local_20;\u000a  }\u000a  return uVar11;\u000a}\u000a\u000a
p2054
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\nmov r4,#0x0\nstr r4,[r0,#0x8]\nldrb r3,[r1,#0x1]\nmov r2,#0x6\nand r2,r3\ncmp r2,#0x2\nbeq 0x000343ca\nb 0x000345b6\nstr r0,[sp,#0x10]\nldrb r0,[r1,#0x2]\nstr r0,[sp,#0xc]\nmov r5,#0xc\nand r5,r0\nlsr r2,r3,#0x3\nmov r0,#0x1\nstr r0,[sp,#0x4]\nand r2,r0\nlsl r4,r2,#0x4\nldr r6,[0x000345c0]\nadd r6,pc\nldr r6,[r6,#0x0]\nadd r4,r6,r4\nadd r4,r4,r5\nmov r0,#0xf0\nand r0,r3\nadd r3,r6,r5\nadd r3,#0x20\ncmp r0,#0xe0\nbeq 0x000343f8\npush { r4 }\npop { r3 }\nldr r0,[r3,#0x0]\nldrb r3,[r1,#0x3]\nldr r5,[sp,#0x10]\nstr r0,[r5,#0x4]\nldr r0,[sp,#0xc]\nlsr r0,r0,#0x2\nmov r4,#0x3c\nand r4,r0\nstr r4,[sp,#0x8]\nlsl r0,r2,#0x6\nldr r4,[0x000345c4]\nadd r4,pc\nldr r4,[r4,#0x0]\nadd r4,r4,r0\ncmp r2,#0x0\nstr r2,[sp,#0xc]\nbne 0x00034428\nlsr r0,r3,#0x6\ncmp r0,#0x2\nbls 0x00034436\npush { r4 }\npop { r2 }\nadd r1,#0xd\nb 0x0003443c\nlsr r0,r3,#0x6\ncmp r0,#0x2\nbhi 0x00034436\npush { r4 }\npop { r2 }\nadd r1,#0x24\nb 0x0003443c\npush { r4 }\npop { r2 }\nadd r1,#0x15\nldrb r3,[r1,#0x0]\nmov r4,#0x0\npush { r5 }\npop { r6 }\ncmp r3,#0x49\nbeq 0x00034480\ncmp r3,#0x58\npush { r4 }\npop { r5 }\npush { r4 }\npop { r3 }\nbne 0x000344aa\nldrb r0,[r1,#0x1]\ncmp r0,#0x69\npush { r4 }\npop { r5 }\npush { r4 }\npop { r3 }\nbne 0x000344aa\nldrb r0,[r1,#0x2]\ncmp r0,#0x6e\npush { r4 }\npop { r5 }\npush { r4 }\npop { r3 }\nbne 0x000344aa\nldrb r0,[r1,#0x3]\nmov r3,#0x0\ncmp r0,#0x67\nldr r5,[sp,#0x4]\nbeq 0x000344aa\npush { r3 }\npop { r5 }\nb 0x000344aa\nldrb r0,[r1,#0x1]\ncmp r0,#0x6e\npush { r4 }\npop { r5 }\npush { r4 }\npop { r3 }\nbne 0x000344aa\nldrb r0,[r1,#0x2]\ncmp r0,#0x66\npush { r4 }\npop { r5 }\npush { r4 }\npop { r3 }\nbne 0x000344aa\nldrb r0,[r1,#0x3]\nmov r3,#0x1\nmov r5,#0x0\ncmp r0,#0x6f\nbeq 0x000344aa\npush { r5 }\npop { r3 }\ncmp r5,#0x0\npush { r6 }\npop { r5 }\nbne 0x000344b6\ncmp r3,#0x1\nbne 0x000345b6\nldr r0,[sp,#0xc]\nstr r0,[r5,#0x0]\nldrb r0,[r1,#0x5]\nldrb r3,[r1,#0x4]\nlsl r3,r3,#0x8\norr r3,r0\nlsl r0,r3,#0x8\nldrb r3,[r1,#0x6]\norr r3,r0\nlsl r0,r3,#0x8\nldrb r3,[r1,#0x7]\norr r0,r3\nstr r0,[r5,#0x8]\npush { r1 }\npop { r6 }\nadd r6,#0x8\nmov r4,#0x1\ntst r3,r4\nbeq 0x00034500\nldrb r0,[r1,#0x9]\npush { r5 }\npop { r6 }\nldrb r5,[r1,#0x8]\nlsl r5,r5,#0x8\norr r5,r0\nlsl r0,r5,#0x8\nldrb r5,[r1,#0xa]\norr r5,r0\nlsl r0,r5,#0x8\nldrb r5,[r1,#0xb]\norr r5,r0\nstr r5,[r6,#0xc]\npush { r6 }\npop { r5 }\nadd r1,#0xc\npush { r1 }\npop { r6 }\nmov r0,#0x2\ntst r3,r0\nbeq 0x0003451e\nldrb r0,[r6,#0x1]\nldrb r1,[r6,#0x0]\nlsl r1,r1,#0x8\norr r1,r0\nlsl r0,r1,#0x8\nldrb r1,[r6,#0x2]\norr r1,r0\nlsl r0,r1,#0x8\nldrb r1,[r6,#0x3]\norr r1,r0\nstr r1,[r5,#0x10]\nadd r6,#0x4\nmov r0,#0x4\ntst r3,r0\nbeq 0x0003453a\npush { r5 }\npop { r1 }\nadd r1,#0x18\nmov r5,#0x0\nldrb r0,[r6,r5]\nstrb r0,[r1,r5]\nadd r5,#0x1\ncmp r5,#0x64\nbne 0x0003452c\nadd r6,#0x64\nldr r5,[sp,#0x10]\nldr r0,[sp,#0x8]\nldr r1,[r2,r0]\nmov r0,#0x0\nmvn r0,r0\nstr r0,[sp,#0x8]\nstr r0,[r5,#0x14]\nmov r0,#0x8\ntst r3,r0\nbeq 0x00034564\nldrb r0,[r6,#0x1]\nldrb r2,[r6,#0x0]\nlsl r2,r2,#0x8\norr r2,r0\nlsl r0,r2,#0x8\nldrb r2,[r6,#0x2]\norr r2,r0\nlsl r0,r2,#0x8\nldrb r2,[r6,#0x3]\norr r2,r0\nstr r2,[r5,#0x14]\nadd r6,#0x4\nldr r0,[sp,#0xc]\nrsb r0,r0\nldr r2,[0x000345c8]\nand r0,r2\nadd r0,r0,r2\nmul r0,r1\nldr r1,[r5,#0x4]\nbl 0x00037980\nstr r0,[r5,#0x7c]\nldrb r0,[r6,#0x15]\nlsl r0,r0,#0x4\nldrb r1,[r6,#0x16]\nlsr r2,r1,#0x4\norr r2,r0\nldr r0,[0x000345cc]\nstr r0,[sp,#0xc]\ncmp r2,r0\nldr r3,[sp,#0x8]\npush { r5 }\npop { r0 }\nbhi 0x00034594\npush { r2 }\npop { r3 }\nldrb r2,[r6,#0x17]\nmov r5,#0x80\nstr r3,[r0,r5]\nmov r3,#0xf\nlsl r3,r3,#0x8\nlsl r1,r1,#0x8\nand r1,r3\norr r1,r2\nldr r2,[sp,#0xc]\ncmp r1,r2\npush { r0 }\npop { r2 }\nbhi 0x000345b0\nstr r1,[sp,#0x8]\nmov r0,#0x84\nldr r1,[sp,#0x8]\nstr r1,[r2,r0]\npush { r4 }\npop { r0 }\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p2055
S'f0 b5\n03 af\n85 b0\n00 24\n84 60\n4b 78\n06 22\n1a 40\n02 2a\n00 d0\nf5 e0\n04 90\n88 78\n03 90\n0c 25\n05 40\nda 08\n01 20\n01 90\n02 40\n14 01\n78 4e\n7e 44\n36 68\n34 19\n64 19\nf0 20\n18 40\n73 19\n20 33\ne0 28\n01 d0\n10 b4\n08 bc\n18 68\ncb 78\n04 9d\n68 60\n03 98\n80 08\n3c 24\n04 40\n02 94\n90 01\n6d 4c\n7c 44\n24 68\n24 18\n00 2a\n03 92\n06 d1\n98 09\n02 28\n0a d9\n10 b4\n04 bc\n0d 31\n09 e0\n98 09\n02 28\n03 d8\n10 b4\n04 bc\n24 31\n02 e0\n10 b4\n04 bc\n15 31\n0b 78\n00 24\n20 b4\n40 bc\n49 2b\n1b d0\n58 2b\n10 b4\n20 bc\n10 b4\n08 bc\n2a d1\n48 78\n69 28\n10 b4\n20 bc\n10 b4\n08 bc\n23 d1\n88 78\n6e 28\n10 b4\n20 bc\n10 b4\n08 bc\n1c d1\nc8 78\n00 23\n67 28\n01 9d\n17 d0\n08 b4\n20 bc\n14 e0\n48 78\n6e 28\n10 b4\n20 bc\n10 b4\n08 bc\n0d d1\n88 78\n66 28\n10 b4\n20 bc\n10 b4\n08 bc\n06 d1\nc8 78\n01 23\n00 25\n6f 28\n01 d0\n20 b4\n08 bc\n00 2d\n40 b4\n20 bc\n01 d1\n01 2b\n7f d1\n03 98\n28 60\n48 79\n0b 79\n1b 02\n03 43\n18 02\n8b 79\n03 43\n18 02\ncb 79\n18 43\na8 60\n02 b4\n40 bc\n08 36\n01 24\n23 42\n11 d0\n48 7a\n20 b4\n40 bc\n0d 7a\n2d 02\n05 43\n28 02\n8d 7a\n05 43\n28 02\ncd 7a\n05 43\nf5 60\n40 b4\n20 bc\n0c 31\n02 b4\n40 bc\n02 20\n03 42\n0b d0\n70 78\n31 78\n09 02\n01 43\n08 02\nb1 78\n01 43\n08 02\nf1 78\n01 43\n29 61\n04 36\n04 20\n03 42\n0a d0\n20 b4\n02 bc\n18 31\n00 25\n70 5d\n48 55\n01 35\n64 2d\nfa d1\n64 36\n04 9d\n02 98\n11 58\n00 20\nc0 43\n02 90\n68 61\n08 20\n03 42\n0b d0\n70 78\n32 78\n12 02\n02 43\n10 02\nb2 78\n02 43\n10 02\nf2 78\n02 43\n6a 61\n04 36\n03 98\n40 42\n17 4a\n10 40\n80 18\n48 43\n69 68\n03 f0 05 fa\ne8 67\n70 7d\n00 01\nb1 7d\n0a 09\n02 43\n12 48\n03 90\n82 42\n02 9b\n20 b4\n01 bc\n01 d8\n04 b4\n08 bc\nf2 7d\n80 25\n43 51\n0f 23\n1b 02\n09 02\n19 40\n11 43\n03 9a\n91 42\n01 b4\n04 bc\n00 d8\n02 91\n84 20\n02 99\n11 50\n10 b4\n01 bc\n05 b0\nf0 bd\n'
p2056
S'.text:000343b4\n.text:000343b6\n.text:000343b8\n.text:000343ba\n.text:000343bc\n.text:000343be\n.text:000343c0\n.text:000343c2\n.text:000343c4\n.text:000343c6\n.text:000343c8\n.text:000343ca\n.text:000343cc\n.text:000343ce\n.text:000343d0\n.text:000343d2\n.text:000343d4\n.text:000343d6\n.text:000343d8\n.text:000343da\n.text:000343dc\n.text:000343de\n.text:000343e0\n.text:000343e2\n.text:000343e4\n.text:000343e6\n.text:000343e8\n.text:000343ea\n.text:000343ec\n.text:000343ee\n.text:000343f0\n.text:000343f2\n.text:000343f4\n.text:000343f6\n.text:000343f8\n.text:000343fa\n.text:000343fc\n.text:000343fe\n.text:00034400\n.text:00034402\n.text:00034404\n.text:00034406\n.text:00034408\n.text:0003440a\n.text:0003440c\n.text:0003440e\n.text:00034410\n.text:00034412\n.text:00034414\n.text:00034416\n.text:00034418\n.text:0003441a\n.text:0003441c\n.text:0003441e\n.text:00034420\n.text:00034422\n.text:00034424\n.text:00034426\n.text:00034428\n.text:0003442a\n.text:0003442c\n.text:0003442e\n.text:00034430\n.text:00034432\n.text:00034434\n.text:00034436\n.text:00034438\n.text:0003443a\n.text:0003443c\n.text:0003443e\n.text:00034440\n.text:00034442\n.text:00034444\n.text:00034446\n.text:00034448\n.text:0003444a\n.text:0003444c\n.text:0003444e\n.text:00034450\n.text:00034452\n.text:00034454\n.text:00034456\n.text:00034458\n.text:0003445a\n.text:0003445c\n.text:0003445e\n.text:00034460\n.text:00034462\n.text:00034464\n.text:00034466\n.text:00034468\n.text:0003446a\n.text:0003446c\n.text:0003446e\n.text:00034470\n.text:00034472\n.text:00034474\n.text:00034476\n.text:00034478\n.text:0003447a\n.text:0003447c\n.text:0003447e\n.text:00034480\n.text:00034482\n.text:00034484\n.text:00034486\n.text:00034488\n.text:0003448a\n.text:0003448c\n.text:0003448e\n.text:00034490\n.text:00034492\n.text:00034494\n.text:00034496\n.text:00034498\n.text:0003449a\n.text:0003449c\n.text:0003449e\n.text:000344a0\n.text:000344a2\n.text:000344a4\n.text:000344a6\n.text:000344a8\n.text:000344aa\n.text:000344ac\n.text:000344ae\n.text:000344b0\n.text:000344b2\n.text:000344b4\n.text:000344b6\n.text:000344b8\n.text:000344ba\n.text:000344bc\n.text:000344be\n.text:000344c0\n.text:000344c2\n.text:000344c4\n.text:000344c6\n.text:000344c8\n.text:000344ca\n.text:000344cc\n.text:000344ce\n.text:000344d0\n.text:000344d2\n.text:000344d4\n.text:000344d6\n.text:000344d8\n.text:000344da\n.text:000344dc\n.text:000344de\n.text:000344e0\n.text:000344e2\n.text:000344e4\n.text:000344e6\n.text:000344e8\n.text:000344ea\n.text:000344ec\n.text:000344ee\n.text:000344f0\n.text:000344f2\n.text:000344f4\n.text:000344f6\n.text:000344f8\n.text:000344fa\n.text:000344fc\n.text:000344fe\n.text:00034500\n.text:00034502\n.text:00034504\n.text:00034506\n.text:00034508\n.text:0003450a\n.text:0003450c\n.text:0003450e\n.text:00034510\n.text:00034512\n.text:00034514\n.text:00034516\n.text:00034518\n.text:0003451a\n.text:0003451c\n.text:0003451e\n.text:00034520\n.text:00034522\n.text:00034524\n.text:00034526\n.text:00034528\n.text:0003452a\n.text:0003452c\n.text:0003452e\n.text:00034530\n.text:00034532\n.text:00034534\n.text:00034536\n.text:00034538\n.text:0003453a\n.text:0003453c\n.text:0003453e\n.text:00034540\n.text:00034542\n.text:00034544\n.text:00034546\n.text:00034548\n.text:0003454a\n.text:0003454c\n.text:0003454e\n.text:00034550\n.text:00034552\n.text:00034554\n.text:00034556\n.text:00034558\n.text:0003455a\n.text:0003455c\n.text:0003455e\n.text:00034560\n.text:00034562\n.text:00034564\n.text:00034566\n.text:00034568\n.text:0003456a\n.text:0003456c\n.text:0003456e\n.text:00034570\n.text:00034572\n.text:00034576\n.text:00034578\n.text:0003457a\n.text:0003457c\n.text:0003457e\n.text:00034580\n.text:00034582\n.text:00034584\n.text:00034586\n.text:00034588\n.text:0003458a\n.text:0003458c\n.text:0003458e\n.text:00034590\n.text:00034592\n.text:00034594\n.text:00034596\n.text:00034598\n.text:0003459a\n.text:0003459c\n.text:0003459e\n.text:000345a0\n.text:000345a2\n.text:000345a4\n.text:000345a6\n.text:000345a8\n.text:000345aa\n.text:000345ac\n.text:000345ae\n.text:000345b0\n.text:000345b2\n.text:000345b4\n.text:000345b6\n.text:000345b8\n.text:000345ba\n.text:000345bc\n'
p2057
tp2058
sS'local_strdup'
p2059
(S'\n__stdcall local_strdup()\n'
p2060
V\u000aundefined4 local_strdup(void **ppvParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  \u000a  if (ppvParm1 != (void **)0x0) {\u000a    free(*ppvParm1);\u000a    *ppvParm1 = (void *)0x0;\u000a    iVar1 = -1;\u000a    if (iParm2 != 0) {\u000a      do {\u000a        iVar2 = iVar1;\u000a        iVar1 = iVar2 + 1;\u000a      } while (*(char *)(iParm2 + iVar2 + 1) != 0);\u000a      if (iVar2 + 1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        calloc(iVar2 + 2,1);\u000a      }\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p2061
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r1 }\npop { r4 }\npush { r0 }\npop { r6 }\nmov r5,#0x0\ncmp r6,#0x0\nbeq 0x0001d6d0\nldr r0,[r6,#0x0]\nbl 0x00037ca0\nmov r5,#0x0\nstr r5,[r6,#0x0]\nstr r6,[sp,#0x0]\nmvn r6,r5\ncmp r4,#0x0\nbeq 0x0001d6d0\nadd r0,r4,r6\nldrb r0,[r0,#0x1]\nadd r6,#0x1\ncmp r0,#0x0\nbne 0x0001d692\nadd r0,r6,#0x1\ncmp r6,#0x0\nbeq 0x0001d6d0\nmov r1,#0x1\nbl 0x00037cb0\npush { r5 }\npop { r0 }\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p2062
S'f0 b5\n03 af\n81 b0\n02 b4\n10 bc\n01 b4\n40 bc\n00 25\n00 2e\n27 d0\n30 68\n1a f0 0d fb\n00 25\n35 60\n00 96\nee 43\n00 2c\n1e d0\na0 19\n40 78\n01 36\n00 28\nfa d1\n70 1c\n00 2e\n16 d0\n01 21\n1a f0 04 fb\n20 b4\n01 bc\n01 b0\nf0 bd\n'
p2063
S'.text:0001d66c\n.text:0001d66e\n.text:0001d670\n.text:0001d672\n.text:0001d674\n.text:0001d676\n.text:0001d678\n.text:0001d67a\n.text:0001d67c\n.text:0001d67e\n.text:0001d680\n.text:0001d682\n.text:0001d686\n.text:0001d688\n.text:0001d68a\n.text:0001d68c\n.text:0001d68e\n.text:0001d690\n.text:0001d692\n.text:0001d694\n.text:0001d696\n.text:0001d698\n.text:0001d69a\n.text:0001d69c\n.text:0001d69e\n.text:0001d6a0\n.text:0001d6a2\n.text:0001d6a4\n.text:0001d6d0\n.text:0001d6d2\n.text:0001d6d4\n.text:0001d6d6\n'
p2064
tp2065
sS'VBR_new_iteration_loop'
p2066
(S'\n__stdcall VBR_new_iteration_loop()\n'
p2067
V\u000avoid VBR_new_iteration_loop(int iParm1,undefined4 uParm2,undefined4 uParm3,int iParm4)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  undefined4 *puVar5;\u000a  uint uVar6;\u000a  int iVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  int *piVar10;\u000a  undefined *puVar11;\u000a  int iVar12;\u000a  undefined *puVar13;\u000a  int *piStack24;\u000a  int iStack4;\u000a  \u000a  iVar1 = DAT_00029e00;\u000a  puVar13 = (int *)(&stack0xffffffec + DAT_00029e00);\u000a  puVar13 = &stack0xffffffec + DAT_00029e00;\u000a  puVar5 = (undefined4 *)(&stack0x00000050 + DAT_00029e00);\u000a  *(undefined4 **)(&stack0xfffffff4 + DAT_00029e00) = puVar5;\u000a  *(int *)((int)&piStack24 + iVar1) = iParm4;\u000a  iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a  *(undefined4 *)(&stack0x0000000c + iVar1) = uParm2;\u000a  *(int *)((int)&piStack24 + iVar1) = iParm1;\u000a  iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a  *puVar5 = **(undefined4 **)(DAT_00029e04 + 0x29a24);\u000a  *(undefined4 *)(&stack0x00000034 + iVar1) = 9;\u000a  __aeabi_memclr4(&stack0x000000a4 + iVar1,0x2400);\u000a  *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a  iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a  iVar4 = *(int *)(iVar7 + 0x98);\u000a  *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a  *(int *)(&stack0xfffffff8 + iVar1) = *(int *)((int)&piStack24 + iVar1) + 0x98;\u000a  *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a  iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a  if (iVar4 == 0) {\u000a    *(undefined4 *)(iVar7 + DAT_00029e08) = *(undefined4 *)(iVar7 + 0x74);\u000a    *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a    iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a    ResvFrameBegin(iVar7,&stack0x00000054 + iVar1);\u000a    *(undefined4 *)((int)&iStack4 + iVar1) = *(undefined4 *)(iVar4 + DAT_00029e0c);\u000a    *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a    iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a    *(undefined **)(int *)((int)&piStack24 + iVar1) = &stack0x00000068 + iVar1;\u000a    get_framebits(iVar7,*(int *)((int)&piStack24 + iVar1));\u000a    *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a    iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a    *(undefined4 *)(&stack0x00000024 + iVar1) =\u000a         *(undefined4 *)(&stack0x00000068 + iVar1 + *(int *)(iVar7 + 0x74) * 4);\u000a  }\u000a  else {\u000a    *(undefined4 *)(iVar7 + DAT_00029e08) = 0;\u000a    *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a    iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a    uVar2 = ResvFrameBegin(iVar7,&stack0x00000054 + iVar1);\u000a    *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a    iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a    *(undefined4 *)(&stack0x00000024 + iVar1) = uVar2;\u000a    *(undefined4 *)(&stack0x00000068 + iVar1) = uVar2;\u000a    *(undefined4 *)((int)&iStack4 + iVar1) = *(undefined4 *)(iVar7 + DAT_00029e0c);\u000a  }\u000a  iVar8 = *(int *)(iVar7 + 0x4c);\u000a  iVar4 = 1;\u000a  *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a  iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a  if (iVar8 < 1) {\u000aLAB_00029c56:\u000a    *(undefined4 *)((int)&iStack4 + iVar1) = 0;\u000a    *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a    iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a  }\u000a  else {\u000a    *(int *)(&stack0x00000030 + iVar1) = iVar7 + DAT_00029e10;\u000a    *(int *)(&stack0x0000002c + iVar1) = iVar7 + DAT_00029e14;\u000a    *(int *)(&stack0x00000008 + iVar1) = iVar7 + DAT_00029e18;\u000a    iVar12 = iVar7 + 0x130;\u000a    *(int *)(&stack0x00000000 + iVar1) = iVar12;\u000a    *(undefined4 *)(&stack0x00000028 + iVar1) = 1;\u000a    *(undefined4 *)(&stack0x00000004 + iVar1) = 0;\u000a    *(undefined **)(&stack0x00000020 + iVar1) = &stack0x00000058 + iVar1;\u000a    *(undefined **)(&stack0x0000001c + iVar1) = &stack0xffffffec + DAT_00029e38 + iVar1;\u000a    *(int *)((int)&piStack24 + iVar1) = 0;\u000a    iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a    *(undefined4 *)(&stack0x00000044 + iVar1) = 0;\u000a    do {\u000a      *(int *)(&stack0x00000018 + iVar1) = iVar4;\u000a      *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a      iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a      uVar2 = *(undefined4 *)(&stack0x00000054 + iVar1);\u000a      *puVar13 = iVar4;\u000a      *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a      iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a      *(undefined4 *)(&stack0xfffffff0 + iVar1) = *(undefined4 *)(&stack0x00000004 + iVar1);\u000a      *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a      iVar8 = *(int *)((int)&piStack24 + iVar1);\u000a      on_pe(iVar7,*(undefined4 *)(&stack0x0000000c + iVar1),&stack0x00000058 + iVar4 * 8 + iVar1,\u000a            uVar2);\u000a      if (**(int **)(&stack0x00000008 + iVar1) == 2) {\u000a        ms_convert(*(undefined4 *)(&stack0x00000000 + iVar1),\u000a                   *(undefined4 *)(&stack0x00000018 + iVar1));\u000a      }\u000a      *(int *)((int)&piStack24 + iVar1) = iVar8;\u000a      iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a      *(int *)(&stack0x0000004c + iVar1) = iVar7;\u000a      iVar4 = *(int *)(iVar7 + 0x48);\u000a      *(int *)(&stack0x00000010 + iVar1) = iVar12;\u000a      *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a      *(int *)(&stack0x00000014 + iVar1) = iVar9;\u000a      if (0 < iVar4) {\u000a        *(int *)(&stack0x0000003c + iVar1) = *(int *)((int)&piStack24 + iVar1);\u000a        *(undefined4 *)(&stack0x00000048 + iVar1) = *(undefined4 *)(&stack0x0000001c + iVar1);\u000a        *(undefined4 *)(&stack0x00000040 + iVar1) = 0;\u000a        uVar2 = **(undefined4 **)(&stack0x0000002c + iVar1);\u000a        *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a                    /* WARNING: Subroutine does not return */\u000a        __extendsfdf2(uVar2);\u000a      }\u000a      *(int *)(&stack0x00000048 + iVar1) = iVar4;\u000a      iVar12 = *(int *)(&stack0x00000010 + iVar1) + DAT_00029e2c;\u000a      iVar9 = *(int *)(&stack0x00000014 + iVar1) + 0x3d0;\u000a      *(int *)(&stack0x0000001c + iVar1) = *(int *)(&stack0x0000001c + iVar1) + 0x138;\u000a      *(int *)(&stack0x00000020 + iVar1) = *(int *)(&stack0x00000020 + iVar1) + 8;\u000a      iVar8 = *(int *)(iVar7 + 0x4c);\u000a      iVar4 = *(int *)(&stack0x00000018 + iVar1) + 1;\u000a    } while (iVar4 < iVar8);\u000a    if (0 < iVar8) {\u000a      *(int *)((int)&piStack24 + iVar1) = *(int *)(&stack0x00000048 + iVar1);\u000a      iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a      uVar3 = 1;\u000a      *(undefined4 *)(&stack0x00000030 + iVar1) = 0;\u000a      *(uint *)((int)&piStack24 + iVar1) = 1;\u000a      uVar6 = *(uint *)((int)&piStack24 + iVar1);\u000a      if (*(int *)(&stack0x00000044 + iVar1) <= *(int *)(&stack0x00000024 + iVar1)) {\u000a        uVar6 = *(uint *)(&stack0x00000030 + iVar1);\u000a      }\u000a      if (*(int *)(&stack0x00000044 + iVar1) < 1) {\u000a        uVar3 = *(uint *)(&stack0x00000030 + iVar1);\u000a      }\u000a      uVar6 = uVar6 & uVar3;\u000a      piVar10 = (int *)(&stack0x00000058 + iVar1);\u000a      iVar9 = *(int *)(&stack0x00000030 + iVar1);\u000a      *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a      iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a      do {\u000a        *(int *)(&stack0x00000038 + iVar1) = iVar9;\u000a        *(int **)(&stack0x0000003c + iVar1) = piVar10;\u000a        *(int *)(&stack0x00000040 + iVar1) = iVar8;\u000a        *(int **)((int)&piStack24 + iVar1) = piVar10;\u000a        piVar10 = *(int **)((int)&piStack24 + iVar1);\u000a        iVar9 = *(int *)(&stack0x00000030 + iVar1);\u000a        if (0 < iVar4) {\u000a          do {\u000a            if (uVar6 == 1) {\u000a              *(int *)(&stack0x00000048 + iVar1) = iVar4;\u000a              iVar7 = *piVar10;\u000a              *(uint *)((int)&piStack24 + iVar1) = 1;\u000a              uVar3 = *(uint *)((int)&piStack24 + iVar1);\u000a              iVar4 = __divsi3(*(int *)(&stack0x00000024 + iVar1) * iVar7,\u000a                               *(undefined4 *)(&stack0x00000044 + iVar1));\u000a              *(uint *)((int)&piStack24 + iVar1) = uVar3;\u000a              uVar6 = *(uint *)((int)&piStack24 + iVar1);\u000a              iVar7 = *(int *)(&stack0x0000004c + iVar1);\u000a              *piVar10 = iVar4;\u000a              iVar4 = *(int *)(&stack0x00000048 + iVar1);\u000a            }\u000a            piVar10 = piVar10 + 1;\u000a            iVar9 = iVar9 + 1;\u000a          } while (iVar9 < iVar4);\u000a        }\u000a        piVar10 = (int *)(*(int *)(&stack0x0000003c + iVar1) + 8);\u000a        iVar9 = *(int *)(&stack0x00000038 + iVar1) + 1;\u000a        iVar8 = *(int *)(&stack0x00000040 + iVar1);\u000a      } while (iVar9 < iVar8);\u000a    }\u000a    iVar9 = 0;\u000a    iVar4 = *(int *)(&stack0x00000028 + iVar1);\u000a    if (iVar4 != 0) goto LAB_00029c56;\u000a  }\u000a  *(int *)(&stack0x00000028 + iVar1) = iVar9;\u000a  if (0 < iVar8) {\u000a    iVar9 = iVar7 + 0x130;\u000a    iVar4 = *(int *)(iVar7 + 0x48);\u000a    *(undefined4 *)(&stack0x0000002c + iVar1) = 0;\u000a    puVar11 = &stack0x000000a4 + iVar1;\u000a    *(undefined4 *)(&stack0x00000044 + iVar1) = 0;\u000a    *(undefined **)(int *)((int)&piStack24 + iVar1) = &stack0x00000058 + iVar1;\u000a    puVar5 = *(undefined4 **)(int *)((int)&piStack24 + iVar1);\u000a    do {\u000a      *(int *)(&stack0x00000040 + iVar1) = iVar8;\u000a      *(undefined4 **)(&stack0x00000030 + iVar1) = puVar5;\u000a      *(undefined **)(&stack0x00000038 + iVar1) = puVar11;\u000a      *(int *)(&stack0x0000003c + iVar1) = iVar9;\u000a      *(undefined **)(int *)((int)&piStack24 + iVar1) = puVar11;\u000a      iVar8 = *(int *)((int)&piStack24 + iVar1);\u000a      iVar12 = *(int *)(&stack0x0000002c + iVar1);\u000a      if (0 < iVar4) {\u000a        do {\u000a          *(int *)(&stack0x0000004c + iVar1) = iVar7;\u000a          *(undefined4 **)(&stack0x00000048 + iVar1) = puVar5;\u000a          *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a          iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a          *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a          iVar4 = *(int *)((int)&piStack24 + iVar1);\u000a          *(int *)((int)&piStack24 + iVar1) = iVar8;\u000a          iVar7 = init_xrpow(iVar7,iVar4,*(int *)((int)&piStack24 + iVar1));\u000a          puVar5 = *(undefined4 **)(&stack0x00000048 + iVar1);\u000a          if (iVar7 == 0) {\u000a            *puVar5 = 0;\u000a          }\u000a          iVar9 = iVar9 + DAT_00029e28;\u000a          iVar8 = iVar8 + *(int *)(&stack0x00000034 + iVar1) * 0x100;\u000a          puVar5 = puVar5 + 1;\u000a          iVar4 = *(int *)(*(int *)(&stack0x0000004c + iVar1) + 0x48);\u000a          iVar12 = iVar12 + 1;\u000a          *(int *)((int)&piStack24 + iVar1) = *(int *)(&stack0x0000004c + iVar1);\u000a          iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a        } while (iVar12 < iVar4);\u000a        *(undefined4 *)(&stack0x00000040 + iVar1) = *(undefined4 *)(iVar7 + 0x4c);\u000a      }\u000a      iVar9 = *(int *)(&stack0x0000003c + iVar1) + DAT_00029e2c;\u000a      puVar11 = (undefined *)\u000a                (*(int *)(&stack0x00000038 + iVar1) + *(int *)(&stack0x00000034 + iVar1) * 0x200);\u000a      puVar5 = (undefined4 *)(*(int *)(&stack0x00000030 + iVar1) + 8);\u000a      iVar12 = *(int *)(&stack0x00000044 + iVar1);\u000a      *(int *)(&stack0x00000044 + iVar1) = iVar12 + 1;\u000a      iVar8 = *(int *)(&stack0x00000040 + iVar1);\u000a    } while (iVar12 + 1 < iVar8);\u000a  }\u000a  iVar4 = DAT_00029e38 + iVar1;\u000a  *(int *)((int)&piStack24 + iVar1) = iVar7;\u000a  iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a  *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a  iVar7 = VBR_encode_frame(*(int *)((int)&piStack24 + iVar1),&stack0x000000a4 + iVar1,\u000a                           &stack0xffffffec + iVar4,&stack0x00000058 + iVar1);\u000a  if (**(int **)(&stack0xfffffff8 + iVar1) == 0) {\u000a    if ((*(int *)(&stack0x00000028 + iVar1) == 0) || (iVar4 = 1, *(int *)(iVar9 + 0x7c) != 0)) {\u000a      iVar4 = *(int *)(iVar9 + 0x70);\u000a    }\u000a    iVar8 = *(int *)(iVar9 + 0x74);\u000a    *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a    iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a    while ((iVar4 < iVar8 && (*(int *)(&stack0x00000068 + iVar4 * 4 + iVar1) < iVar7))) {\u000a      iVar4 = iVar4 + 1;\u000a    }\u000a    *(int *)((int)&piStack24 + iVar1) = iVar8;\u000a    iVar12 = *(int *)((int)&piStack24 + iVar1);\u000a    if (iVar4 <= iVar8) {\u000a      *(int *)((int)&piStack24 + iVar1) = iVar4;\u000a      iVar12 = *(int *)((int)&piStack24 + iVar1);\u000a    }\u000a    iVar4 = DAT_00029e08;\u000a    if (*(int *)((int)&iStack4 + iVar1) < 1) {\u000a      *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a      iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a      *(int *)(iVar9 + iVar4) = iVar12;\u000a      *(int *)((int)&piStack24 + iVar1) = iVar12;\u000a      iVar8 = *(int *)((int)&piStack24 + iVar1);\u000a      goto LAB_00029d6c;\u000a    }\u000a    while ((iVar12 < iVar8 &&\u000a           (*(int *)((int)&iStack4 + iVar1) < *(int *)(&stack0x00000068 + iVar8 * 4 + iVar1) - iVar7\u000a           ))) {\u000a      iVar8 = iVar8 + -1;\u000a    }\u000a    *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a    iVar9 = *(int *)((int)&piStack24 + iVar1);\u000a  }\u000a  else {\u000a    iVar8 = 0;\u000a    iVar4 = DAT_00029e08;\u000a  }\u000a  *(int *)(iVar9 + iVar4) = iVar8;\u000aLAB_00029d6c:\u000a  if (*(int *)(&stack0x00000068 + iVar8 * 4 + iVar1) < iVar7) {\u000a    iVar7 = DAT_00029e34 + 0x29dee;\u000a    *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a    lame_errorf(*(int *)((int)&piStack24 + iVar1),iVar7);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0xffffffff,*puVar13);\u000a  }\u000a  *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a  ResvFrameBegin(*(int *)((int)&piStack24 + iVar1),&stack0x00000054 + iVar1);\u000a  iVar7 = *(int *)(iVar9 + 0x4c);\u000a  if (0 < iVar7) {\u000a    iVar12 = iVar9 + 0x130;\u000a    iVar4 = *(int *)(iVar9 + 0x48);\u000a    iVar8 = 0;\u000a    *(undefined4 *)(&stack0x00000040 + iVar1) = 0;\u000a    do {\u000a      *(int *)(&stack0x00000044 + iVar1) = iVar8;\u000a      *(int *)(&stack0x00000048 + iVar1) = iVar12;\u000a      iVar8 = *(int *)(&stack0x00000040 + iVar1);\u000a      if (0 < iVar4) {\u000a        do {\u000a          *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a          iVar7 = *(int *)((int)&piStack24 + iVar1);\u000a          *(int *)((int)&piStack24 + iVar1) = iVar12;\u000a          ResvAdjust(iVar7,*(int *)((int)&piStack24 + iVar1));\u000a          iVar12 = iVar12 + DAT_00029e28;\u000a          iVar8 = iVar8 + 1;\u000a          iVar4 = *(int *)(iVar9 + 0x48);\u000a        } while (iVar8 < iVar4);\u000a        iVar7 = *(int *)(iVar9 + 0x4c);\u000a      }\u000a      iVar12 = *(int *)(&stack0x00000048 + iVar1) + DAT_00029e2c;\u000a      iVar8 = *(int *)(&stack0x00000044 + iVar1) + 1;\u000a    } while (iVar8 < iVar7);\u000a  }\u000a  *(int *)((int)&piStack24 + iVar1) = iVar9;\u000a  ResvFrameEnd(*(int *)((int)&piStack24 + iVar1),*(undefined4 *)(&stack0x00000054 + iVar1));\u000a  if (**(int **)(DAT_00029e30 + 0x29dd4) == **(int **)(&stack0xfffffff4 + iVar1)) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p2068
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nldr r6,[0x00029e00]\nadd sp,r6\nadd r2,sp,#0x64\nstr r2,[sp,#0x8]\npush { r3 }\npop { r5 }\nstr r1,[sp,#0x20]\npush { r0 }\npop { r4 }\nldr r0,[0x00029e04]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r2,#0x0]\nmov r0,#0x9\nstr r0,[sp,#0x48]\nlsl r1,r0,#0xa\nadd r0,sp,#0xb8\nbl 0x00037a40\npush { r4 }\npop { r0 }\nmov r1,#0x98\nldr r1,[r0,r1]\npush { r0 }\npop { r2 }\nadd r2,#0x98\nstr r2,[sp,#0xc]\npush { r5 }\npop { r6 }\ncmp r1,#0x0\nbeq 0x00029a6c\nldr r2,[0x00029e08]\nmov r1,#0x0\nstr r1,[r0,r2]\nadd r1,sp,#0x68\npush { r0 }\npop { r4 }\nbl 0x000382e0\npush { r4 }\npop { r3 }\nstr r0,[sp,#0x38]\nstr r0,[sp,#0x7c]\nldr r0,[0x00029e0c]\nldr r0,[r3,r0]\nstr r0,[sp,#0x10]\nb 0x00029a9c\nldr r2,[r0,#0x74]\nldr r1,[0x00029e08]\nstr r2,[r0,r1]\nadd r1,sp,#0x68\npush { r0 }\npop { r5 }\nbl 0x000382e0\nldr r0,[0x00029e0c]\nldr r0,[r5,r0]\nstr r0,[sp,#0x10]\nadd r4,sp,#0x7c\npush { r5 }\npop { r0 }\npush { r4 }\npop { r1 }\nbl 0x0002bc90\npush { r5 }\npop { r3 }\nldr r0,[r3,#0x74]\nlsl r0,r0,#0x2\nldr r0,[r4,r0]\nstr r0,[sp,#0x38]\nldr r4,[r3,#0x4c]\nmov r1,#0x1\ncmp r4,#0x1\npush { r6 }\npop { r5 }\nbge 0x00029aaa\nb 0x00029c56\nldr r0,[0x00029e10]\nadd r0,r3,r0\nstr r0,[sp,#0x44]\nldr r0,[0x00029e14]\nadd r0,r3,r0\nstr r0,[sp,#0x40]\nldr r0,[0x00029e18]\nadd r0,r3,r0\nstr r0,[sp,#0x1c]\nmov r0,#0x13\nlsl r0,r0,#0x4\nadd r6,r3,r0\nstr r6,[sp,#0x14]\nmov r0,#0x1\nstr r0,[sp,#0x3c]\nmov r0,#0x0\nstr r0,[sp,#0x18]\nadd r2,sp,#0x6c\nstr r2,[sp,#0x34]\nldr r2,[0x00029e38]\nadd r2,sp\nstr r2,[sp,#0x30]\npush { r0 }\npop { r2 }\nstr r0,[sp,#0x58]\nstr r2,[sp,#0x2c]\npush { r3 }\npop { r0 }\nldr r3,[sp,#0x68]\nmov r1,sp\nstr r2,[r1,#0x0]\npush { r2 }\npop { r4 }\nldr r2,[sp,#0x18]\nstr r2,[r1,#0x4]\nlsl r2,r4,#0x3\nadd r1,sp,#0x6c\nadd r2,r1,r2\npush { r0 }\npop { r4 }\nldr r1,[sp,#0x20]\nbl 0x000382f0\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0x0]\ncmp r0,#0x2\nbne 0x00029b10\nldr r0,[sp,#0x14]\nldr r1,[sp,#0x2c]\nbl 0x0002a3ac\npush { r4 }\npop { r3 }\nstr r3,[sp,#0x60]\nldr r0,[r3,#0x48]\nmov r1,#0x0\ncmp r0,#0x1\nstr r6,[sp,#0x24]\npush { r5 }\npop { r2 }\nstr r5,[sp,#0x28]\nldr r5,[sp,#0x30]\nldr r4,[sp,#0x34]\nblt 0x00029bae\nstr r2,[sp,#0x50]\nstr r5,[sp,#0x5c]\nstr r1,[sp,#0x54]\nldr r0,[sp,#0x40]\nldr r0,[r0,#0x0]\npush { r3 }\npop { r5 }\nbl 0x00037ac0\nstr r0,[sp,#0x5c]\nldr r0,[0x00029e2c]\nldr r6,[sp,#0x24]\nadd r6,r6,r0\nmov r0,#0x3d\nlsl r0,r0,#0x4\nldr r5,[sp,#0x28]\nadd r5,r5,r0\nmov r0,#0x27\nlsl r0,r0,#0x3\nldr r1,[sp,#0x30]\nadd r1,r1,r0\nstr r1,[sp,#0x30]\nldr r0,[sp,#0x34]\nadd r0,#0x8\nstr r0,[sp,#0x34]\nldr r4,[r3,#0x4c]\nldr r2,[sp,#0x2c]\nadd r2,#0x1\ncmp r2,r4\nblt 0x00029adc\ncmp r4,#0x1\nldr r0,[sp,#0x5c]\nblt 0x00029c4e\npush { r0 }\npop { r5 }\nmov r0,#0x1\nmov r1,#0x0\nstr r1,[sp,#0x44]\nldr r1,[sp,#0x38]\nldr r2,[sp,#0x58]\ncmp r2,r1\npush { r0 }\npop { r2 }\nbgt 0x00029bf6\nldr r2,[sp,#0x44]\nldr r1,[sp,#0x58]\ncmp r1,#0x0\nbgt 0x00029bfe\nldr r0,[sp,#0x44]\nand r2,r0\nadd r1,sp,#0x6c\nldr r6,[sp,#0x44]\npush { r5 }\npop { r0 }\nstr r6,[sp,#0x4c]\nstr r1,[sp,#0x50]\nstr r4,[sp,#0x54]\ncmp r0,#0x1\npush { r1 }\npop { r6 }\nldr r4,[sp,#0x44]\nblt 0x00029c40\ncmp r2,#0x1\nbne 0x00029c38\nstr r0,[sp,#0x5c]\nldr r0,[r6,#0x0]\nldr r1,[sp,#0x38]\nmul r0,r1\nldr r1,[sp,#0x58]\npush { r2 }\npop { r5 }\nbl 0x00037980\npush { r5 }\npop { r2 }\nldr r3,[sp,#0x60]\nstr r0,[r6,#0x0]\nldr r0,[sp,#0x5c]\nadd r6,#0x4\nadd r4,#0x1\ncmp r4,r0\nblt 0x00029c18\nldr r1,[sp,#0x50]\nadd r1,#0x8\nldr r6,[sp,#0x4c]\nadd r6,#0x1\nldr r4,[sp,#0x54]\ncmp r6,r4\nblt 0x00029c08\nmov r0,#0x0\nldr r1,[sp,#0x3c]\ncmp r1,#0x0\nbeq 0x00029c5e\nmov r0,#0x0\nstr r0,[sp,#0x10]\npush { r1 }\npop { r0 }\nstr r0,[sp,#0x3c]\ncmp r4,#0x1\nblt 0x00029ce6\nmov r0,#0x13\nlsl r0,r0,#0x4\nadd r5,r3,r0\nldr r0,[r3,#0x48]\nmov r1,#0x0\nstr r1,[sp,#0x40]\nadd r6,sp,#0xb8\nadd r2,sp,#0x6c\nstr r1,[sp,#0x58]\npush { r2 }\npop { r1 }\nstr r4,[sp,#0x54]\nstr r1,[sp,#0x44]\nstr r6,[sp,#0x4c]\nstr r5,[sp,#0x50]\ncmp r0,#0x1\npush { r6 }\npop { r4 }\nldr r6,[sp,#0x40]\nblt 0x00029cc8\nstr r3,[sp,#0x60]\nstr r1,[sp,#0x5c]\npush { r3 }\npop { r0 }\npush { r5 }\npop { r1 }\npush { r4 }\npop { r2 }\nbl 0x00029508\nldr r1,[sp,#0x5c]\ncmp r0,#0x0\nbne 0x00029caa\nmov r0,#0x0\nstr r0,[r1,#0x0]\nldr r0,[0x00029e28]\nadd r5,r5,r0\nldr r0,[sp,#0x48]\nlsl r0,r0,#0x8\nadd r4,r4,r0\nadd r1,#0x4\nldr r2,[sp,#0x60]\nldr r0,[r2,#0x48]\nadd r6,#0x1\ncmp r6,r0\npush { r2 }\npop { r3 }\nblt 0x00029c8c\nldr r1,[r3,#0x4c]\nstr r1,[sp,#0x54]\nldr r1,[0x00029e2c]\nldr r5,[sp,#0x50]\nadd r5,r5,r1\nldr r1,[sp,#0x48]\nlsl r1,r1,#0x9\nldr r6,[sp,#0x4c]\nadd r6,r6,r1\nldr r1,[sp,#0x44]\nadd r1,#0x8\nldr r2,[sp,#0x58]\nadd r2,#0x1\nstr r2,[sp,#0x58]\nldr r4,[sp,#0x54]\ncmp r2,r4\nblt 0x00029c7a\nadd r1,sp,#0xb8\nldr r2,[0x00029e38]\nadd r2,sp\npush { r3 }\npop { r6 }\nadd r3,sp,#0x6c\npush { r6 }\npop { r0 }\nbl 0x00038390\nldr r1,[sp,#0xc]\nldr r1,[r1,#0x0]\ncmp r1,#0x0\nbeq 0x00029d08\nldr r2,[0x00029e08]\nmov r1,#0x0\nb 0x00029d6a\nldr r1,[sp,#0x3c]\ncmp r1,#0x0\nbeq 0x00029d16\nldr r1,[r6,#0x7c]\nmov r2,#0x1\ncmp r1,#0x0\nbeq 0x00029d18\nldr r2,[r6,#0x70]\nldr r1,[r6,#0x74]\npush { r6 }\npop { r5 }\ncmp r2,r1\nldr r6,[sp,#0x10]\nbge 0x00029d34\nlsl r3,r2,#0x2\nadd r4,sp,#0x7c\nldr r3,[r4,r3]\ncmp r0,r3\nble 0x00029d34\nadd r2,#0x1\ncmp r2,r1\nblt 0x00029d24\ncmp r2,r1\npush { r1 }\npop { r3 }\nbgt 0x00029d40\npush { r2 }\npop { r3 }\ncmp r6,#0x1\nbge 0x00029d54\nldr r1,[0x00029e08]\npush { r5 }\npop { r6 }\nstr r3,[r6,r1]\npush { r3 }\npop { r1 }\nb 0x00029d6c\nsub r1,#0x1\ncmp r1,r3\nble 0x00029d64\nlsl r2,r1,#0x2\nadd r4,sp,#0x7c\nldr r2,[r4,r2]\nsub r2,r2,r0\ncmp r2,r6\nbgt 0x00029d52\nldr r2,[0x00029e08]\npush { r5 }\npop { r6 }\nstr r1,[r6,r2]\nlsl r1,r1,#0x2\nadd r2,sp,#0x7c\nldr r1,[r2,r1]\ncmp r0,r1\nbgt 0x00029de8\nadd r1,sp,#0x68\npush { r6 }\npop { r0 }\nbl 0x000382e0\nldr r3,[r6,#0x4c]\ncmp r3,#0x1\nblt 0x00029dc4\nmov r1,#0x13\nlsl r1,r1,#0x4\nadd r4,r6,r1\nldr r1,[r6,#0x48]\nmov r2,#0x0\nstr r2,[sp,#0x54]\nstr r2,[sp,#0x58]\nstr r4,[sp,#0x5c]\ncmp r1,#0x1\nldr r5,[sp,#0x54]\nblt 0x00029db6\npush { r6 }\npop { r0 }\npush { r4 }\npop { r1 }\nbl 0x00038380\nldr r1,[0x00029e28]\nadd r4,r4,r1\nadd r5,#0x1\nldr r1,[r6,#0x48]\ncmp r5,r1\nblt 0x00029d9c\nldr r3,[r6,#0x4c]\nldr r2,[0x00029e2c]\nldr r4,[sp,#0x5c]\nadd r4,r4,r2\nldr r2,[sp,#0x58]\nadd r2,#0x1\ncmp r2,r3\nblt 0x00029d92\nldr r1,[sp,#0x68]\npush { r6 }\npop { r0 }\nbl 0x00038320\nldr r0,[0x00029e30]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0x8]\nldr r1,[r1,#0x0]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x00029dfc\nsub r4,r7,#0x7\nsub r4,#0x5\nmov sp,r4\npop { r4, r5, r6, r7, pc }\nldr r1,[0x00029e34]\nadd r1,pc\npush { r6 }\npop { r0 }\nbl 0x00037990\nmov r0,#0x0\nmvn r0,r0\nbl 0x000383a0\nbl 0x000379b0\n'
p2069
S'f0 b5\n03 af\nfc 4e\nb5 44\n19 aa\n02 92\n08 b4\n20 bc\n08 91\n01 b4\n10 bc\nf9 48\n78 44\n00 68\n00 68\n10 60\n09 20\n12 90\n81 02\n2e a8\n0e f0 06 f8\n10 b4\n01 bc\n98 21\n41 58\n01 b4\n04 bc\n98 32\n03 92\n20 b4\n40 bc\n00 29\n0f d0\nee 4a\n00 21\n81 50\n1a a9\n01 b4\n10 bc\n0e f0 42 fc\n10 b4\n08 bc\n0e 90\n1f 90\ne9 48\n18 58\n04 90\n17 e0\n42 6f\ne6 49\n42 50\n1a a9\n01 b4\n20 bc\n0e f0 32 fc\ne3 48\n28 58\n04 90\n1f ac\n20 b4\n01 bc\n10 b4\n02 bc\n02 f0 00 f9\n20 b4\n08 bc\n58 6f\n80 00\n20 58\n0e 90\ndc 6c\n01 21\n01 2c\n40 b4\n20 bc\n00 da\nd5 e0\nd9 48\n18 18\n11 90\nd8 48\n18 18\n10 90\nd8 48\n18 18\n07 90\n13 20\n00 01\n1e 18\n05 96\n01 20\n0f 90\n00 20\n06 90\n1b aa\n0d 92\nd9 4a\n6a 44\n0c 92\n01 b4\n04 bc\n16 90\n0b 92\n08 b4\n01 bc\n1a 9b\n69 46\n0a 60\n04 b4\n10 bc\n06 9a\n4a 60\ne2 00\n1b a9\n8a 18\n01 b4\n10 bc\n08 99\n0e f0 f8 fb\n07 98\n00 68\n02 28\n03 d1\n05 98\n0b 99\n00 f0 4e fc\n10 b4\n08 bc\n18 93\n98 6c\n00 21\n01 28\n09 96\n20 b4\n04 bc\n0a 95\n0c 9d\n0d 9c\n41 db\n14 92\n17 95\n15 91\n10 98\n00 68\n08 b4\n20 bc\n0d f0 c2 ff\n17 90\n9e 48\n09 9e\n36 18\n3d 20\n00 01\n0a 9d\n2d 18\n27 20\nc0 00\n0c 99\n09 18\n0c 91\n0d 98\n08 30\n0d 90\ndc 6c\n0b 9a\n01 32\na2 42\n81 db\n01 2c\n17 98\n37 db\n01 b4\n20 bc\n01 20\n00 21\n11 91\n0e 99\n16 9a\n8a 42\n01 b4\n04 bc\n00 dc\n11 9a\n16 99\n00 29\n00 dc\n11 98\n02 40\n1b a9\n11 9e\n20 b4\n01 bc\n13 96\n14 91\n15 94\n01 28\n02 b4\n40 bc\n11 9c\n13 db\n01 2a\n0d d1\n17 90\n30 68\n0e 99\n48 43\n16 99\n04 b4\n20 bc\n0d f0 a9 fe\n20 b4\n04 bc\n18 9b\n30 60\n17 98\n04 36\n01 34\n84 42\neb db\n14 99\n08 31\n13 9e\n01 36\n15 9c\na6 42\ndc db\n00 20\n0f 99\n00 29\n03 d0\n00 20\n04 90\n02 b4\n01 bc\n0f 90\n01 2c\n40 db\n13 20\n00 01\n1d 18\n98 6c\n00 21\n10 91\n2e ae\n1b aa\n16 91\n04 b4\n02 bc\n15 94\n11 91\n13 96\n14 95\n01 28\n40 b4\n10 bc\n10 9e\n1d db\n18 93\n17 91\n08 b4\n01 bc\n20 b4\n02 bc\n10 b4\n04 bc\nff f7 34 fc\n17 99\n00 28\n01 d1\n00 20\n08 60\n5f 48\n2d 18\n12 98\n00 02\n24 18\n04 31\n18 9a\n90 6c\n01 36\n86 42\n04 b4\n08 bc\ne3 db\nd9 6c\n15 91\n58 49\n14 9d\n6d 18\n12 99\n49 02\n13 9e\n76 18\n11 99\n08 31\n16 9a\n01 32\n16 92\n15 9c\na2 42\nc9 db\n2e a9\n53 4a\n6a 44\n08 b4\n40 bc\n1b ab\n40 b4\n01 bc\n0e f0 4b fb\n03 99\n09 68\n00 29\n02 d0\n41 4a\n00 21\n30 e0\n0f 99\n00 29\n03 d0\nf1 6f\n01 22\n00 29\n00 d0\n32 6f\n71 6f\n40 b4\n20 bc\n8a 42\n04 9e\n07 da\n93 00\n1f ac\ne3 58\n98 42\n02 dd\n01 32\n8a 42\nf7 db\n8a 42\n02 b4\n08 bc\n01 dc\n04 b4\n08 bc\n01 2e\n07 da\n30 49\n20 b4\n40 bc\n73 50\n08 b4\n02 bc\n0c e0\n01 39\n99 42\n05 dd\n8a 00\n1f ac\na2 58\n12 1a\nb2 42\nf6 dc\n28 4a\n20 b4\n40 bc\nb1 50\n89 00\n1f aa\n51 58\n88 42\n38 dc\n1a a9\n40 b4\n01 bc\n0e f0 b0 fa\nf3 6c\n01 2b\n1e db\n13 21\n09 01\n74 18\nb1 6c\n00 22\n15 92\n16 92\n17 94\n01 29\n15 9d\n0c db\n40 b4\n01 bc\n10 b4\n02 bc\n0e f0 ec fa\n1f 49\n64 18\n01 35\nb1 6c\n8d 42\nf3 db\nf3 6c\n1d 4a\n17 9c\na4 18\n16 9a\n01 32\n9a 42\ne6 db\n1a 99\n40 b4\n01 bc\n0e f0 a9 fa\n18 48\n78 44\n00 68\n00 68\n02 99\n09 68\n40 1a\n00 28\n0d d1\nfc 1f\n05 3c\na5 46\nf0 bd\n12 49\n79 44\n40 b4\n01 bc\n0d f0 ce fd\n00 20\nc0 43\n0e f0 d2 fa\n0d f0 d8 fd\n'
p2070
S'.text:00029a08\n.text:00029a0a\n.text:00029a0c\n.text:00029a0e\n.text:00029a10\n.text:00029a12\n.text:00029a14\n.text:00029a16\n.text:00029a18\n.text:00029a1a\n.text:00029a1c\n.text:00029a1e\n.text:00029a20\n.text:00029a22\n.text:00029a24\n.text:00029a26\n.text:00029a28\n.text:00029a2a\n.text:00029a2c\n.text:00029a2e\n.text:00029a30\n.text:00029a34\n.text:00029a36\n.text:00029a38\n.text:00029a3a\n.text:00029a3c\n.text:00029a3e\n.text:00029a40\n.text:00029a42\n.text:00029a44\n.text:00029a46\n.text:00029a48\n.text:00029a4a\n.text:00029a4c\n.text:00029a4e\n.text:00029a50\n.text:00029a52\n.text:00029a54\n.text:00029a56\n.text:00029a58\n.text:00029a5c\n.text:00029a5e\n.text:00029a60\n.text:00029a62\n.text:00029a64\n.text:00029a66\n.text:00029a68\n.text:00029a6a\n.text:00029a6c\n.text:00029a6e\n.text:00029a70\n.text:00029a72\n.text:00029a74\n.text:00029a76\n.text:00029a78\n.text:00029a7c\n.text:00029a7e\n.text:00029a80\n.text:00029a82\n.text:00029a84\n.text:00029a86\n.text:00029a88\n.text:00029a8a\n.text:00029a8c\n.text:00029a90\n.text:00029a92\n.text:00029a94\n.text:00029a96\n.text:00029a98\n.text:00029a9a\n.text:00029a9c\n.text:00029a9e\n.text:00029aa0\n.text:00029aa2\n.text:00029aa4\n.text:00029aa6\n.text:00029aa8\n.text:00029aaa\n.text:00029aac\n.text:00029aae\n.text:00029ab0\n.text:00029ab2\n.text:00029ab4\n.text:00029ab6\n.text:00029ab8\n.text:00029aba\n.text:00029abc\n.text:00029abe\n.text:00029ac0\n.text:00029ac2\n.text:00029ac4\n.text:00029ac6\n.text:00029ac8\n.text:00029aca\n.text:00029acc\n.text:00029ace\n.text:00029ad0\n.text:00029ad2\n.text:00029ad4\n.text:00029ad6\n.text:00029ad8\n.text:00029ada\n.text:00029adc\n.text:00029ade\n.text:00029ae0\n.text:00029ae2\n.text:00029ae4\n.text:00029ae6\n.text:00029ae8\n.text:00029aea\n.text:00029aec\n.text:00029aee\n.text:00029af0\n.text:00029af2\n.text:00029af4\n.text:00029af6\n.text:00029af8\n.text:00029afa\n.text:00029afc\n.text:00029b00\n.text:00029b02\n.text:00029b04\n.text:00029b06\n.text:00029b08\n.text:00029b0a\n.text:00029b0c\n.text:00029b10\n.text:00029b12\n.text:00029b14\n.text:00029b16\n.text:00029b18\n.text:00029b1a\n.text:00029b1c\n.text:00029b1e\n.text:00029b20\n.text:00029b22\n.text:00029b24\n.text:00029b26\n.text:00029b28\n.text:00029b2a\n.text:00029b2c\n.text:00029b2e\n.text:00029b30\n.text:00029b32\n.text:00029b34\n.text:00029b36\n.text:00029b38\n.text:00029bae\n.text:00029bb0\n.text:00029bb2\n.text:00029bb4\n.text:00029bb6\n.text:00029bb8\n.text:00029bba\n.text:00029bbc\n.text:00029bbe\n.text:00029bc0\n.text:00029bc2\n.text:00029bc4\n.text:00029bc6\n.text:00029bc8\n.text:00029bca\n.text:00029bcc\n.text:00029bce\n.text:00029bd0\n.text:00029bd2\n.text:00029bd4\n.text:00029bd6\n.text:00029bd8\n.text:00029bda\n.text:00029bdc\n.text:00029bde\n.text:00029be0\n.text:00029be2\n.text:00029be4\n.text:00029be6\n.text:00029be8\n.text:00029bea\n.text:00029bec\n.text:00029bee\n.text:00029bf0\n.text:00029bf2\n.text:00029bf4\n.text:00029bf6\n.text:00029bf8\n.text:00029bfa\n.text:00029bfc\n.text:00029bfe\n.text:00029c00\n.text:00029c02\n.text:00029c04\n.text:00029c06\n.text:00029c08\n.text:00029c0a\n.text:00029c0c\n.text:00029c0e\n.text:00029c10\n.text:00029c12\n.text:00029c14\n.text:00029c16\n.text:00029c18\n.text:00029c1a\n.text:00029c1c\n.text:00029c1e\n.text:00029c20\n.text:00029c22\n.text:00029c24\n.text:00029c26\n.text:00029c28\n.text:00029c2a\n.text:00029c2e\n.text:00029c30\n.text:00029c32\n.text:00029c34\n.text:00029c36\n.text:00029c38\n.text:00029c3a\n.text:00029c3c\n.text:00029c3e\n.text:00029c40\n.text:00029c42\n.text:00029c44\n.text:00029c46\n.text:00029c48\n.text:00029c4a\n.text:00029c4c\n.text:00029c4e\n.text:00029c50\n.text:00029c52\n.text:00029c54\n.text:00029c56\n.text:00029c58\n.text:00029c5a\n.text:00029c5c\n.text:00029c5e\n.text:00029c60\n.text:00029c62\n.text:00029c64\n.text:00029c66\n.text:00029c68\n.text:00029c6a\n.text:00029c6c\n.text:00029c6e\n.text:00029c70\n.text:00029c72\n.text:00029c74\n.text:00029c76\n.text:00029c78\n.text:00029c7a\n.text:00029c7c\n.text:00029c7e\n.text:00029c80\n.text:00029c82\n.text:00029c84\n.text:00029c86\n.text:00029c88\n.text:00029c8a\n.text:00029c8c\n.text:00029c8e\n.text:00029c90\n.text:00029c92\n.text:00029c94\n.text:00029c96\n.text:00029c98\n.text:00029c9a\n.text:00029c9c\n.text:00029ca0\n.text:00029ca2\n.text:00029ca4\n.text:00029ca6\n.text:00029ca8\n.text:00029caa\n.text:00029cac\n.text:00029cae\n.text:00029cb0\n.text:00029cb2\n.text:00029cb4\n.text:00029cb6\n.text:00029cb8\n.text:00029cba\n.text:00029cbc\n.text:00029cbe\n.text:00029cc0\n.text:00029cc2\n.text:00029cc4\n.text:00029cc6\n.text:00029cc8\n.text:00029cca\n.text:00029ccc\n.text:00029cce\n.text:00029cd0\n.text:00029cd2\n.text:00029cd4\n.text:00029cd6\n.text:00029cd8\n.text:00029cda\n.text:00029cdc\n.text:00029cde\n.text:00029ce0\n.text:00029ce2\n.text:00029ce4\n.text:00029ce6\n.text:00029ce8\n.text:00029cea\n.text:00029cec\n.text:00029cee\n.text:00029cf0\n.text:00029cf2\n.text:00029cf4\n.text:00029cf6\n.text:00029cfa\n.text:00029cfc\n.text:00029cfe\n.text:00029d00\n.text:00029d02\n.text:00029d04\n.text:00029d06\n.text:00029d08\n.text:00029d0a\n.text:00029d0c\n.text:00029d0e\n.text:00029d10\n.text:00029d12\n.text:00029d14\n.text:00029d16\n.text:00029d18\n.text:00029d1a\n.text:00029d1c\n.text:00029d1e\n.text:00029d20\n.text:00029d22\n.text:00029d24\n.text:00029d26\n.text:00029d28\n.text:00029d2a\n.text:00029d2c\n.text:00029d2e\n.text:00029d30\n.text:00029d32\n.text:00029d34\n.text:00029d36\n.text:00029d38\n.text:00029d3a\n.text:00029d3c\n.text:00029d3e\n.text:00029d40\n.text:00029d42\n.text:00029d44\n.text:00029d46\n.text:00029d48\n.text:00029d4a\n.text:00029d4c\n.text:00029d4e\n.text:00029d50\n.text:00029d52\n.text:00029d54\n.text:00029d56\n.text:00029d58\n.text:00029d5a\n.text:00029d5c\n.text:00029d5e\n.text:00029d60\n.text:00029d62\n.text:00029d64\n.text:00029d66\n.text:00029d68\n.text:00029d6a\n.text:00029d6c\n.text:00029d6e\n.text:00029d70\n.text:00029d72\n.text:00029d74\n.text:00029d76\n.text:00029d78\n.text:00029d7a\n.text:00029d7c\n.text:00029d80\n.text:00029d82\n.text:00029d84\n.text:00029d86\n.text:00029d88\n.text:00029d8a\n.text:00029d8c\n.text:00029d8e\n.text:00029d90\n.text:00029d92\n.text:00029d94\n.text:00029d96\n.text:00029d98\n.text:00029d9a\n.text:00029d9c\n.text:00029d9e\n.text:00029da0\n.text:00029da2\n.text:00029da4\n.text:00029da8\n.text:00029daa\n.text:00029dac\n.text:00029dae\n.text:00029db0\n.text:00029db2\n.text:00029db4\n.text:00029db6\n.text:00029db8\n.text:00029dba\n.text:00029dbc\n.text:00029dbe\n.text:00029dc0\n.text:00029dc2\n.text:00029dc4\n.text:00029dc6\n.text:00029dc8\n.text:00029dca\n.text:00029dce\n.text:00029dd0\n.text:00029dd2\n.text:00029dd4\n.text:00029dd6\n.text:00029dd8\n.text:00029dda\n.text:00029ddc\n.text:00029dde\n.text:00029de0\n.text:00029de2\n.text:00029de4\n.text:00029de6\n.text:00029de8\n.text:00029dea\n.text:00029dec\n.text:00029dee\n.text:00029df0\n.text:00029df4\n.text:00029df6\n.text:00029df8\n.text:00029dfc\n'
p2071
tp2072
sS'lame_set_write_id3tag_automatic'
p2073
(S'\n__stdcall lame_set_write_id3tag_automatic()\n'
p2074
V\u000avoid lame_set_write_id3tag_automatic(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0x44) = uParm2;\u000a  }\u000a  return;\u000a}\u000a\u000a
p2075
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f52a\nstr r4,[r5,#0x44]\npop { r4, r5, r7, pc }\n'
p2076
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n08 f0 86 ff\n00 28\n00 d0\n6c 64\nb0 bd\n'
p2077
S'.text:0002f514\n.text:0002f516\n.text:0002f518\n.text:0002f51a\n.text:0002f51c\n.text:0002f51e\n.text:0002f520\n.text:0002f524\n.text:0002f526\n.text:0002f528\n.text:0002f52a\n'
p2078
tp2079
sS'__aeabi_memclr8'
p2080
(S'\n__stdcall __aeabi_memclr8()\n'
p2081
V\u000avoid __aeabi_memclr8(void)\u000a\u000a{\u000a  (*(CRC_writeheader + DAT_000379fc))();\u000a  return;\u000a}\u000a\u000a
p2082
S'ldr r12,[0x379fc]\nadd pc,r12,pc\n'
p2083
S'00 c0 9f e5\n0f f0 8c e0\n'
p2084
S'.text:000379f4\n.text:000379f8\n'
p2085
tp2086
sS'lame_get_version'
p2087
(S'\n__stdcall lame_get_version()\n'
p2088
V\u000aundefined4 lame_get_version(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + 0x10);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2089
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f166\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f166\nldr r4,[r5,#0x10]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2090
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 72 f9\n00 24\n00 28\n09 d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 70 f9\n00 28\n00 d0\n2c 69\n10 b4\n01 bc\nb0 bd\n'
p2091
S'.text:0002f140\n.text:0002f142\n.text:0002f144\n.text:0002f146\n.text:0002f148\n.text:0002f14c\n.text:0002f14e\n.text:0002f150\n.text:0002f152\n.text:0002f154\n.text:0002f156\n.text:0002f158\n.text:0002f15a\n.text:0002f15c\n.text:0002f160\n.text:0002f162\n.text:0002f164\n.text:0002f166\n.text:0002f168\n.text:0002f16a\n'
p2092
tp2093
sS'lame_set_num_channels'
p2094
(S'\n__stdcall lame_set_num_channels()\n'
p2095
V\u000avoid lame_set_num_channels(void)\u000a\u000a{\u000a  (*(lame_set_out_samplerate + DAT_0003793c))();\u000a  return;\u000a}\u000a\u000a
p2096
S'ldr r12,[0x3793c]\nadd pc,r12,pc\n'
p2097
S'00 c0 9f e5\n0f f0 8c e0\n'
p2098
S'.text:00037934\n.text:00037938\n'
p2099
tp2100
sS'lame_set_cwlimit'
p2101
(S'\n__stdcall lame_set_cwlimit()\n'
p2102
V\u000aundefined4 lame_set_cwlimit(void)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p2103
S'mov r0,#0x0\nbx lr\n'
p2104
S'00 20\n70 47\n'
p2105
S'.text:0002ed64\n.text:0002ed66\n'
p2106
tp2107
sS'lame_get_encoder_padding'
p2108
(S'\n__stdcall lame_get_encoder_padding()\n'
p2109
V\u000aundefined4 lame_get_encoder_padding(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f1d0);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2110
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f1c8\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f1c8\nldr r0,[0x0002f1d0]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2111
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 42 f9\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 40 f9\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p2112
S'.text:0002f1a0\n.text:0002f1a2\n.text:0002f1a4\n.text:0002f1a6\n.text:0002f1a8\n.text:0002f1ac\n.text:0002f1ae\n.text:0002f1b0\n.text:0002f1b2\n.text:0002f1b4\n.text:0002f1b6\n.text:0002f1b8\n.text:0002f1ba\n.text:0002f1bc\n.text:0002f1c0\n.text:0002f1c2\n.text:0002f1c4\n.text:0002f1c6\n.text:0002f1c8\n.text:0002f1ca\n.text:0002f1cc\n'
p2113
tp2114
sS'disable_FPE'
p2115
(S'\n__stdcall disable_FPE(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11)\n'
p2116
V\u000avoid disable_FPE(undefined4 param_1,int param_2,int param_3)\u000a\u000a{\u000a  int unaff_r4;\u000a  int iVar1;\u000a  undefined4 *unaff_r6;\u000a  int iStack0000002c;\u000a  undefined4 in_stack_00000030;\u000a  undefined4 uStack00000038;\u000a  int iStack0000003c;\u000a  int in_stack_00000040;\u000a  int iStack000000e4;\u000a  undefined4 uStack000000e8;\u000a  int iStack000000ec;\u000a  undefined4 uStack00000150;\u000a  int iStack0000015c;\u000a  \u000a  uStack000000e8 = 9;\u000a  uStack00000038 = 0x900;\u000a  iStack000000ec = (1 - param_2) * 0x900;\u000a  iStack000000e4 = in_stack_00000040 * 0x1200;\u000a  iStack0000002c = unaff_r4 + iStack000000e4;\u000a  iVar1 = iStack0000002c + iStack000000ec + DAT_00022278;\u000a  uStack00000150 = in_stack_00000030;\u000a  iStack0000003c = param_3;\u000a  iStack0000015c = param_3;\u000a  window_subband(param_3,iVar1);\u000a  window_subband(iStack0000015c + 0x80,iVar1 + 0x80);\u000a                    /* WARNING: Subroutine does not return */\u000a  __subsf3(0x80000000,*unaff_r6);\u000a}\u000a\u000a
p2117
S'str r6,[sp,#0x34]\n'
p2118
S'0d 96\n'
p2119
S'.text:00022134\n'
p2120
tp2121
sS'lame_encode_buffer_ieee_double'
p2122
(S'\n__stdcall lame_encode_buffer_ieee_double(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p2123
V\u000avoid lame_encode_buffer_ieee_double(void)\u000a\u000a{\u000a  lame_encode_buffer_template();\u000a  return;\u000a}\u000a\u000a
p2124
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\nldr r4,[0x0002115c]\nmov r5,sp\nstr r4,[r5,#0x10]\nmov r4,#0x1\nstr r4,[r5,#0xc]\nmov r4,#0x4\nstr r4,[r5,#0x8]\nldr r4,[sp,#0x2c]\nstr r4,[r5,#0x4]\nldr r4,[sp,#0x28]\nstr r4,[r5,#0x0]\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p2125
S'b0 b5\n02 af\n86 b0\n07 4c\n6d 46\n2c 61\n01 24\nec 60\n04 24\nac 60\n0b 9c\n6c 60\n0a 9c\n2c 60\nff f7 ec fd\n06 b0\nb0 bd\n'
p2126
S'.text:00021138\n.text:0002113a\n.text:0002113c\n.text:0002113e\n.text:00021140\n.text:00021142\n.text:00021144\n.text:00021146\n.text:00021148\n.text:0002114a\n.text:0002114c\n.text:0002114e\n.text:00021150\n.text:00021152\n.text:00021154\n.text:00021158\n.text:0002115a\n'
p2127
tp2128
sS'__aeabi_memclr4'
p2129
(S'\n__stdcall __aeabi_memclr4()\n'
p2130
V\u000avoid __aeabi_memclr4(void)\u000a\u000a{\u000a  (*(mdct_sub48 + DAT_00037a4c))();\u000a  return;\u000a}\u000a\u000a
p2131
S'ldr r12,[0x37a4c]\nadd pc,r12,pc\n'
p2132
S'00 c0 9f e5\n0f f0 8c e0\n'
p2133
S'.text:00037a44\n.text:00037a48\n'
p2134
tp2135
sS'lame_set_short_threshold'
p2136
(S'\n__stdcall lame_set_short_threshold()\n'
p2137
V\u000aundefined4 lame_set_short_threshold(int iParm1,undefined4 uParm2,undefined4 uParm3)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    iVar1 = is_lame_global_flags_valid(iParm1);\u000a    if (iVar1 != 0) {\u000a      *(undefined4 *)(iParm1 + 0x108) = uParm2;\u000a    }\u000a    iVar1 = is_lame_global_flags_valid(iParm1);\u000a    if (iVar1 != 0) {\u000a      *(undefined4 *)(iParm1 + 0x10c) = uParm3;\u000a    }\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2138
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\nstr r2,[sp,#0x0]\npush { r1 }\npop { r6 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r4,#0x0\nmvn r0,r4\ncmp r1,#0x0\nbeq 0x0002f0fa\npush { r5 }\npop { r0 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f0e2\nmov r0,#0x21\nlsl r0,r0,#0x3\nstr r6,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f0f6\nmov r0,#0x43\nlsl r0,r0,#0x2\nldr r1,[sp,#0x0]\nstr r1,[r5,r0]\npush { r4 }\npop { r0 }\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p2139
S'f0 b5\n03 af\n81 b0\n00 92\n02 b4\n40 bc\n01 b4\n20 bc\n09 f0 b6 f9\n01 b4\n02 bc\n00 24\ne0 43\n00 29\n14 d0\n20 b4\n01 bc\n09 f0 ac f9\n00 28\n02 d0\n21 20\nc0 00\n2e 50\n20 b4\n01 bc\n09 f0 a3 f9\n00 28\n03 d0\n43 20\n80 00\n00 99\n29 50\n10 b4\n01 bc\n01 b0\nf0 bd\n'
p2140
S'.text:0002f0b0\n.text:0002f0b2\n.text:0002f0b4\n.text:0002f0b6\n.text:0002f0b8\n.text:0002f0ba\n.text:0002f0bc\n.text:0002f0be\n.text:0002f0c0\n.text:0002f0c4\n.text:0002f0c6\n.text:0002f0c8\n.text:0002f0ca\n.text:0002f0cc\n.text:0002f0ce\n.text:0002f0d0\n.text:0002f0d2\n.text:0002f0d4\n.text:0002f0d8\n.text:0002f0da\n.text:0002f0dc\n.text:0002f0de\n.text:0002f0e0\n.text:0002f0e2\n.text:0002f0e4\n.text:0002f0e6\n.text:0002f0ea\n.text:0002f0ec\n.text:0002f0ee\n.text:0002f0f0\n.text:0002f0f2\n.text:0002f0f4\n.text:0002f0f6\n.text:0002f0f8\n.text:0002f0fa\n.text:0002f0fc\n'
p2141
tp2142
sS'lame_set_tune'
p2143
(S'\n__stdcall lame_set_tune()\n'
p2144
V\u000avoid lame_set_tune(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0x104) = uParm2;\u000a    *(undefined4 *)(iParm1 + 0x100) = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p2145
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002f566\nmov r0,#0x41\nlsl r0,r0,#0x2\nstr r5,[r4,r0]\nmov r0,#0x1\nlsl r1,r0,#0x8\nstr r0,[r4,r1]\npop { r4, r5, r7, pc }\n'
p2146
S'b0 b5\n02 af\n02 b4\n20 bc\n01 b4\n10 bc\n08 f0 6d ff\n00 28\n05 d0\n41 20\n80 00\n25 50\n01 20\n01 02\n60 50\nb0 bd\n'
p2147
S'.text:0002f546\n.text:0002f548\n.text:0002f54a\n.text:0002f54c\n.text:0002f54e\n.text:0002f550\n.text:0002f552\n.text:0002f556\n.text:0002f558\n.text:0002f55a\n.text:0002f55c\n.text:0002f55e\n.text:0002f560\n.text:0002f562\n.text:0002f564\n.text:0002f566\n'
p2148
tp2149
sS'FUN_00019280'
p2150
(S'\n__stdcall FUN_00019280(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6, undefined4 param_7, undefined4 param_8, undefined4 param_9, undefined4 param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23, undefined4 param_24, undefined4 param_25, undefined4 param_26, undefined4 param_27, undefined4 param_28, undefined4 param_29, undefined4 param_30, undefined4 param_31, undefined4 param_32, undefined4 param_33, undefined4 param_34, undefined4 param_35, undefined4 param_36, undefined4 param_37, undefined4 param_38, undefined4 param_39, undefined4 param_40, undefined4 param_41, undefined4 param_42)\n'
p2151
V\u000aundefined4 FUN_00019280(undefined4 param_1,uint param_2)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  uint *puVar8;\u000a  int iVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  int iVar12;\u000a  int iVar13;\u000a  int *piVar14;\u000a  int iVar15;\u000a  int *piVar16;\u000a  int *piVar17;\u000a  int *piVar18;\u000a  int iVar19;\u000a  int iVar20;\u000a  int unaff_r6;\u000a  int iVar21;\u000a  int *param_14;\u000a  int param_15;\u000a  int param_16;\u000a  int param_21;\u000a  int param_23;\u000a  int param_26;\u000a  int param_27;\u000a  int param_30;\u000a  int *param_31;\u000a  int param_34;\u000a  int param_38;\u000a  int param_40;\u000a  uint *param_41;\u000a  int param_42;\u000a  \u000a  if (*param_31 != 0) {\u000a    CRC_writeheader(unaff_r6,unaff_r6 + param_38 * param_2 + DAT_000192b0);\u000a    param_2 = *param_41;\u000a  }\u000a  uVar1 = param_2 + 1 & 0xff;\u000a  *param_41 = uVar1;\u000a  *(int *)(unaff_r6 + DAT_00019630 + param_38 * uVar1) =\u000a       *(int *)(unaff_r6 + DAT_00019630 + param_38 * param_2) + param_15;\u000a  puVar8 = (uint *)(unaff_r6 + DAT_00019634);\u000a  if (*param_41 == *(uint *)(unaff_r6 + DAT_00019634)) {\u000a    lame_errorf(unaff_r6,DAT_00019638 + 0x19306);\u000a  }\u000a  iVar2 = *(int *)(unaff_r6 + 0x18);\u000a  if (*(int *)(unaff_r6 + 0x10) == 1) {\u000a    piVar16 = (int *)(unaff_r6 + 0x11c);\u000a    piVar17 = (int *)(unaff_r6 + 0x124);\u000a    piVar3 = (int *)(unaff_r6 + 0x128);\u000a    piVar18 = (int *)(unaff_r6 + 300);\u000a    iVar7 = *(int *)(unaff_r6 + 0x48);\u000a    param_21 = 0;\u000a    iVar6 = *(int *)(DAT_0001963c + 0x19346);\u000a    iVar19 = *(int *)(DAT_00019640 + 0x1934e);\u000a    param_27 = 0;\u000a    iVar9 = 0;\u000a    do {\u000a      iVar4 = param_21;\u000a      if (0 < iVar7) {\u000a        do {\u000a          iVar7 = unaff_r6 + param_27 * DAT_00019648 + iVar4 * DAT_00019644;\u000a          param_31 = *(int **)(iVar7 + DAT_0001964c);\u000a          piVar14 = (int *)(iVar7 + DAT_0001964c);\u000a          iVar5 = iVar7 + 0x130;\u000a          iVar10 = *(int *)(iVar7 + 0x13e0) * 4;\u000a          param_30 = 0;\u000a          iVar7 = param_21;\u000a          if (0 < (int)param_31) {\u000a            iVar20 = *(int *)(iVar19 + iVar10);\u000a            iVar7 = 0;\u000a            param_30 = 0;\u000a            do {\u000a              iVar11 = *(int *)(unaff_r6 + param_27 * DAT_00019648 + iVar4 * DAT_00019644 +\u000a                                iVar7 * 4 + DAT_00019650);\u000a              if (iVar11 != -1) {\u000a                iVar12 = iVar20;\u000a                if (0 < iVar20) {\u000a                  do {\u000a                    iVar13 = *piVar18;\u000a                    if (iVar13 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar13 = *piVar3 + 1;\u000a                      *piVar3 = iVar13;\u000a                      iVar21 = param_40 + param_38 * *puVar8;\u000a                      if (*(int *)(iVar21 + DAT_00019630) == *piVar17) {\u000a                        __aeabi_memcpy(*piVar16 + iVar13,iVar21 + DAT_00019654,\u000a                                       *(undefined4 *)(param_40 + 0x18));\u000a                        iVar21 = *(int *)(param_40 + 0x18);\u000a                        iVar13 = *piVar3 + iVar21;\u000a                        *piVar3 = iVar13;\u000a                        *piVar17 = *piVar17 + iVar21 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar13) = 0;\u000a                      iVar13 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar12;\u000a                    if (iVar13 <= iVar12) {\u000a                      iVar21 = iVar13;\u000a                    }\u000a                    *piVar18 = iVar13 - iVar21;\u000a                    iVar12 = iVar12 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((iVar11 >> iVar12) << iVar13 - iVar21);\u000a                    *piVar17 = *piVar17 + iVar21;\u000a                  } while (0 < iVar12);\u000a                  param_31 = (int *)*piVar14;\u000a                }\u000a                param_30 = param_30 + iVar20;\u000a                unaff_r6 = param_40;\u000a              }\u000a              iVar7 = iVar7 + 1;\u000a            } while (iVar7 < (int)param_31);\u000a          }\u000a          iVar20 = unaff_r6 + param_27 * DAT_00019648 + iVar4 * DAT_00019644;\u000a          param_26 = *(int *)(iVar20 + DAT_00019658);\u000a          piVar14 = (int *)(iVar20 + DAT_00019658);\u000a          if (iVar7 < param_26) {\u000a            iVar10 = *(int *)(iVar6 + iVar10);\u000a            do {\u000a              iVar20 = *(int *)(unaff_r6 + param_27 * DAT_00019648 + iVar4 * DAT_00019644 +\u000a                                iVar7 * 4 + DAT_00019650);\u000a              if (iVar20 != -1) {\u000a                iVar11 = iVar10;\u000a                if (0 < iVar10) {\u000a                  do {\u000a                    iVar12 = *piVar18;\u000a                    if (iVar12 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar12 = *piVar3 + 1;\u000a                      *piVar3 = iVar12;\u000a                      iVar13 = param_40 + param_38 * *puVar8;\u000a                      if (*(int *)(iVar13 + DAT_00019630) == *piVar17) {\u000a                        __aeabi_memcpy(*piVar16 + iVar12,iVar13 + DAT_00019654,\u000a                                       *(undefined4 *)(param_40 + 0x18));\u000a                        iVar13 = *(int *)(param_40 + 0x18);\u000a                        iVar12 = *piVar3 + iVar13;\u000a                        *piVar3 = iVar12;\u000a                        *piVar17 = *piVar17 + iVar13 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar12) = 0;\u000a                      iVar12 = *piVar18;\u000a                    }\u000a                    iVar13 = iVar11;\u000a                    if (iVar12 <= iVar11) {\u000a                      iVar13 = iVar12;\u000a                    }\u000a                    *piVar18 = iVar12 - iVar13;\u000a                    iVar11 = iVar11 - iVar13;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((iVar20 >> iVar11) << iVar12 - iVar13);\u000a                    *piVar17 = *piVar17 + iVar13;\u000a                  } while (0 < iVar11);\u000a                  param_26 = *piVar14;\u000a                }\u000a                param_30 = param_30 + iVar10;\u000a                unaff_r6 = param_40;\u000a              }\u000a              iVar7 = iVar7 + 1;\u000a            } while (iVar7 < param_26);\u000a          }\u000a          if (*(int *)(unaff_r6 + param_27 * DAT_00019648 + iVar4 * DAT_00019644 + DAT_0001965c) ==\u000a              2) {\u000a            iVar7 = ShortHuffmancodebits(unaff_r6,iVar5);\u000a          }\u000a          else {\u000a            iVar7 = LongHuffmancodebits(unaff_r6,iVar5);\u000a          }\u000a          iVar10 = huffman_coder_count1(unaff_r6,iVar5);\u000a          iVar9 = param_30 + iVar9 + iVar7 + iVar10;\u000a          iVar4 = iVar4 + 1;\u000a          iVar7 = *(int *)(unaff_r6 + 0x48);\u000a        } while (iVar4 < iVar7);\u000a      }\u000a      param_27 = param_27 + 1;\u000a    } while (param_27 != 2);\u000a  }\u000a  else {\u000a    iVar9 = 0;\u000a    if (0 < *(int *)(unaff_r6 + 0x48)) {\u000a      piVar16 = (int *)(unaff_r6 + 0x11c);\u000a      piVar17 = (int *)(unaff_r6 + 0x124);\u000a      piVar3 = (int *)(unaff_r6 + 0x128);\u000a      piVar18 = (int *)(unaff_r6 + 300);\u000a      param_16 = 0;\u000a      iVar7 = 0;\u000a      iVar9 = 0;\u000a      do {\u000a        iVar4 = unaff_r6 + iVar7 * iteration_finish_one;\u000a        piVar14 = (int *)(iVar4 + DAT_000199b0);\u000a        iVar10 = iVar4 + 0x130;\u000a        param_26 = 0;\u000a        param_23 = 0;\u000a        iVar6 = param_16;\u000a        iVar19 = param_16;\u000a        if (*(int *)(iVar4 + DAT_000199b4) == 2) {\u000a          do {\u000a            iVar4 = *(int *)(*piVar14 + iVar6 * 4);\u000a            iVar5 = __divsi3();\u000a            if (2 < iVar4) {\u000a              iVar4 = *(int *)(unaff_r6 + iVar7 * iteration_finish_one + iVar6 * 4 + DAT_000199b8);\u000a              iVar20 = 0;\u000a              do {\u000a                iVar11 = iVar19 * 0xc;\u000a                param_31 = *(int **)(param_40 + iVar7 * iteration_finish_one + iVar11 + DAT_000199bc\u000a                                    );\u000a                if ((int)param_31 < 1) {\u000a                  param_31 = (int *)0x0;\u000a                }\u000a                iVar12 = iVar4;\u000a                if (0 < iVar4) {\u000a                  do {\u000a                    iVar13 = *piVar18;\u000a                    if (iVar13 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar13 = *piVar3 + 1;\u000a                      *piVar3 = iVar13;\u000a                      iVar21 = param_40 + param_38 * *puVar8;\u000a                      if (*(int *)(iVar21 + DAT_000199c0) == *piVar17) {\u000a                        __aeabi_memcpy(*piVar16 + iVar13,iVar21 + DAT_000199c4,\u000a                                       *(undefined4 *)(param_40 + 0x18));\u000a                        iVar21 = *(int *)(param_40 + 0x18);\u000a                        iVar13 = *piVar3 + iVar21;\u000a                        *piVar3 = iVar13;\u000a                        *piVar17 = *piVar17 + iVar21 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar13) = 0;\u000a                      iVar13 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar12;\u000a                    if (iVar13 <= iVar12) {\u000a                      iVar21 = iVar13;\u000a                    }\u000a                    *piVar18 = iVar13 - iVar21;\u000a                    iVar12 = iVar12 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)(((int)param_31 >> iVar12) << iVar13 - iVar21);\u000a                    iVar21 = *piVar17 + iVar21;\u000a                    *piVar17 = iVar21;\u000a                  } while (0 < iVar12);\u000a                  param_34 = *(int *)(param_40 + iVar7 * iteration_finish_one + iVar11 +\u000a                                     DAT_000199c8);\u000a                  iVar12 = iVar4;\u000a                  if (param_34 < 1) {\u000a                    param_34 = 0;\u000a                    iVar12 = iVar4;\u000a                  }\u000a                  do {\u000a                    iVar13 = *piVar18;\u000a                    if (iVar13 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar13 = *piVar3 + 1;\u000a                      *piVar3 = iVar13;\u000a                      iVar15 = param_40 + param_38 * *puVar8;\u000a                      if (*(int *)(iVar15 + DAT_000199c0) == iVar21) {\u000a                        __aeabi_memcpy(*piVar16 + iVar13,iVar15 + DAT_000199c4,\u000a                                       *(undefined4 *)(param_40 + 0x18));\u000a                        iVar21 = *(int *)(param_40 + 0x18);\u000a                        iVar13 = *piVar3 + iVar21;\u000a                        *piVar3 = iVar13;\u000a                        *piVar17 = *piVar17 + iVar21 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar13) = 0;\u000a                      iVar13 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar12;\u000a                    if (iVar13 <= iVar12) {\u000a                      iVar21 = iVar13;\u000a                    }\u000a                    *piVar18 = iVar13 - iVar21;\u000a                    iVar12 = iVar12 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((param_34 >> iVar12) << iVar13 - iVar21);\u000a                    iVar21 = *piVar17 + iVar21;\u000a                    *piVar17 = iVar21;\u000a                  } while (0 < iVar12);\u000a                  param_34 = *(int *)(param_40 + iVar7 * DAT_00019c6c + iVar11 + DAT_00019c78);\u000a                  iVar11 = iVar4;\u000a                  if (param_34 < 1) {\u000a                    param_34 = 0;\u000a                    iVar11 = iVar4;\u000a                  }\u000a                  do {\u000a                    iVar12 = *piVar18;\u000a                    if (iVar12 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar12 = *piVar3 + 1;\u000a                      *piVar3 = iVar12;\u000a                      iVar13 = param_40 + param_38 * *puVar8;\u000a                      if (*(int *)(iVar13 + DAT_00019c64) == iVar21) {\u000a                        __aeabi_memcpy(*piVar16 + iVar12,iVar13 + DAT_00019c68,\u000a                                       *(undefined4 *)(param_40 + 0x18));\u000a                        iVar13 = *(int *)(param_40 + 0x18);\u000a                        iVar12 = *piVar3 + iVar13;\u000a                        *piVar3 = iVar12;\u000a                        *piVar17 = *piVar17 + iVar13 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar12) = 0;\u000a                      iVar12 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar11;\u000a                    if (iVar12 <= iVar11) {\u000a                      iVar21 = iVar12;\u000a                    }\u000a                    *piVar18 = iVar12 - iVar21;\u000a                    iVar11 = iVar11 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((param_34 >> iVar11) << iVar12 - iVar21);\u000a                    iVar21 = *piVar17 + iVar21;\u000a                    *piVar17 = iVar21;\u000a                  } while (0 < iVar11);\u000a                }\u000a                param_26 = param_26 + iVar4 * 3;\u000a                iVar19 = iVar19 + 1;\u000a                iVar20 = iVar20 + 1;\u000a              } while (iVar20 < iVar5);\u000a            }\u000a            iVar6 = iVar6 + 1;\u000a            unaff_r6 = param_40;\u000a          } while (iVar6 != 4);\u000a          iVar6 = ShortHuffmancodebits(param_40,iVar10);\u000a          unaff_r6 = param_40;\u000a        }\u000a        else {\u000a          do {\u000a            iVar19 = *(int *)(*piVar14 + iVar6 * 4);\u000a            if (0 < iVar19) {\u000a              iVar5 = *(int *)(unaff_r6 + iVar7 * DAT_00019c6c + iVar6 * 4 + DAT_00019c70);\u000a              iVar20 = 0;\u000a              iVar4 = param_23;\u000a              do {\u000a                param_34 = *(int *)(unaff_r6 + iVar7 * DAT_00019c6c + iVar4 * 4 + DAT_00019c74);\u000a                iVar11 = iVar5;\u000a                if (param_34 < 1) {\u000a                  param_34 = 0;\u000a                  iVar11 = iVar5;\u000a                }\u000a                while (0 < iVar11) {\u000a                  iVar12 = *piVar18;\u000a                  if (iVar12 == 0) {\u000a                    *piVar18 = 8;\u000a                    iVar12 = *piVar3 + 1;\u000a                    *piVar3 = iVar12;\u000a                    iVar13 = param_40 + param_38 * *puVar8;\u000a                    if (*(int *)(iVar13 + DAT_00019c64) == *piVar17) {\u000a                      __aeabi_memcpy(*piVar16 + iVar12,iVar13 + DAT_00019c68,\u000a                                     *(undefined4 *)(param_40 + 0x18));\u000a                      iVar13 = *(int *)(param_40 + 0x18);\u000a                      iVar12 = *piVar3 + iVar13;\u000a                      *piVar3 = iVar12;\u000a                      *piVar17 = *piVar17 + iVar13 * 8;\u000a                      *puVar8 = *puVar8 + 1 & 0xff;\u000a                    }\u000a                    *(undefined *)(*piVar16 + iVar12) = 0;\u000a                    iVar12 = *piVar18;\u000a                  }\u000a                  iVar13 = iVar11;\u000a                  if (iVar12 <= iVar11) {\u000a                    iVar13 = iVar12;\u000a                  }\u000a                  *piVar18 = iVar12 - iVar13;\u000a                  *(byte *)(*piVar16 + *piVar3) =\u000a                       *(byte *)(*piVar16 + *piVar3) |\u000a                       (byte)((param_34 >> iVar11 - iVar13) << iVar12 - iVar13);\u000a                  *piVar17 = *piVar17 + iVar13;\u000a                  iVar11 = iVar11 - iVar13;\u000a                }\u000a                iVar4 = iVar4 + 1;\u000a                iVar20 = iVar20 + 1;\u000a                unaff_r6 = param_40;\u000a              } while (iVar20 != iVar19);\u000a              param_23 = iVar19 + param_23;\u000a              param_26 = iVar19 * iVar5 + param_26;\u000a              unaff_r6 = param_40;\u000a            }\u000a            iVar6 = iVar6 + 1;\u000a          } while (iVar6 != 4);\u000a          iVar6 = LongHuffmancodebits(unaff_r6,iVar10);\u000a        }\u000a        iVar19 = huffman_coder_count1(unaff_r6,iVar10);\u000a        iVar9 = param_26 + iVar9 + iVar6 + iVar19;\u000a        iVar7 = iVar7 + 1;\u000a      } while (iVar7 < *(int *)(unaff_r6 + 0x48));\u000a    }\u000a  }\u000a  iVar7 = DAT_00019c7c;\u000a  drain_into_ancillary(unaff_r6,*(undefined4 *)(unaff_r6 + DAT_00019c7c));\u000a  param_15 = param_15 - (iVar9 + iVar2 * 8 + *(int *)(unaff_r6 + iVar7));\u000a  *param_14 = ((int)(param_15 + ((uint)(param_15 >> 0x1f) >> 0x1d)) >> 3) + *param_14;\u000a  iVar2 = DAT_00019c80;\u000a  piVar16 = (int *)(unaff_r6 + DAT_00019c80);\u000a  iVar7 = compute_flushbits(unaff_r6,&stack0x00000094);\u000a  if (iVar7 != *(int *)(unaff_r6 + iVar2)) {\u000a    lame_errorf(unaff_r6,DAT_00019c84 + 0x19b76);\u000a    iVar7 = *piVar16;\u000a  }\u000a  if (*param_14 * 8 - iVar7 != 0) {\u000a    lame_errorf(unaff_r6,DAT_00019c88 + 0x19bde,*param_14 * 8,iVar7);\u000a    lame_errorf(unaff_r6,DAT_00019c8c + 0x19bee);\u000a    lame_errorf(unaff_r6,DAT_00019c90 + 0x19bfa);\u000a    lame_errorf(unaff_r6,DAT_00019c94 + 0x19c06);\u000a    lame_errorf(unaff_r6,DAT_00019c98 + 0x19c12);\u000a    *piVar16 = *param_14 << 3;\u000a  }\u000a  iVar2 = *(int *)(unaff_r6 + 0x124);\u000a  if (DAT_00019c9c <= iVar2) {\u000a    piVar16 = (int *)(unaff_r6 + DAT_00019c64);\u000a    iVar7 = 0x100;\u000a    do {\u000a      *piVar16 = *piVar16 - iVar2;\u000a      piVar16 = piVar16 + 0xc;\u000a      iVar7 = iVar7 + -1;\u000a    } while (iVar7 != 0);\u000a    *(undefined4 *)(unaff_r6 + 0x124) = 0;\u000a  }\u000a  if (**(int **)(DAT_00019ca0 + 0x19c52) == param_42) {\u000a    return 0;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p2152
S'ldr r0,[sp,#0x68]\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x000192d0\nldr r4,[sp,#0x84]\nmul r1,r4\nadd r0,r6,r1\nldr r1,[0x000192b0]\nadd r1,r0,r1\npush { r6 }\npop { r0 }\nbl 0x00037a00\nldr r2,[sp,#0x90]\nldr r1,[r2,#0x0]\nb 0x000192d4\nldr r4,[sp,#0x84]\nldr r2,[sp,#0x90]\nadd r0,r1,#0x1\nmov r3,#0xff\nstr r3,[sp,#0x6c]\nand r0,r3\nstr r0,[r2,#0x0]\nmul r1,r4\npush { r2 }\npop { r5 }\nldr r2,[0x00019630]\nadd r2,r6,r2\nldr r1,[r2,r1]\nldr r3,[sp,#0x28]\nadd r1,r1,r3\nmul r0,r4\nstr r1,[r2,r0]\nldr r0,[0x00019634]\nadd r1,r6,r0\nstr r1,[sp,#0x88]\nldr r0,[r6,r0]\nldr r1,[r5,#0x0]\ncmp r1,r0\nbne 0x0001930c\nldr r1,[0x00019638]\nadd r1,pc\npush { r6 }\npop { r0 }\nbl 0x00037990\nldr r0,[r6,#0x18]\nlsl r0,r0,#0x3\nstr r0,[sp,#0x20]\nldr r0,[r6,#0x10]\ncmp r0,#0x1\nbeq 0x0001931a\nb 0x00019660\nmov r0,#0x47\nlsl r0,r0,#0x2\nadd r0,r6,r0\nstr r0,[sp,#0x80]\nmov r0,#0x49\nlsl r0,r0,#0x2\nadd r3,r6,r0\nstr r3,[sp,#0x7c]\nmov r0,#0x25\nlsl r0,r0,#0x3\nadd r0,r6,r0\nstr r0,[sp,#0x90]\nmov r0,#0x4b\nlsl r0,r0,#0x2\nadd r4,r6,r0\nstr r4,[sp,#0x74]\nldr r0,[r6,#0x48]\nmov r2,#0x0\nstr r2,[sp,#0x40]\nldr r1,[0x0001963c]\nadd r1,pc\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x34]\nldr r1,[0x00019640]\nadd r1,pc\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x38]\nstr r2,[sp,#0x58]\npush { r2 }\npop { r1 }\ncmp r0,#0x1\nldr r5,[sp,#0x40]\nbge 0x0001935e\nb 0x00019622\nstr r5,[sp,#0x5c]\nstr r1,[sp,#0x3c]\npush { r6 }\npop { r0 }\nldr r6,[0x00019644]\nmul r6,r5\nldr r1,[0x00019648]\nldr r2,[sp,#0x58]\nmul r1,r2\nadd r1,r0,r1\nadd r1,r1,r6\nldr r2,[0x0001964c]\nldr r6,[r1,r2]\nstr r6,[sp,#0x68]\nadd r2,r1,r2\nstr r2,[sp,#0x4c]\nmov r2,#0x13\nlsl r2,r2,#0x4\nadd r2,r1,r2\nstr r2,[sp,#0x44]\nmov r2,#0x9f\nlsl r2,r2,#0x5\nldr r1,[r1,r2]\npush { r5 }\npop { r2 }\nlsl r1,r1,#0x2\nstr r1,[sp,#0x48]\ncmp r6,#0x1\nldr r1,[sp,#0x40]\npush { r1 }\npop { r5 }\nstr r1,[sp,#0x64]\nblt 0x000194a0\nldr r1,[sp,#0x38]\nldr r5,[sp,#0x48]\nldr r1,[r1,r5]\nstr r1,[sp,#0x54]\nmov r1,#0x0\nstr r1,[sp,#0x50]\npush { r1 }\npop { r5 }\nstr r1,[sp,#0x64]\nldr r1,[0x00019644]\nmul r1,r2\nldr r2,[0x00019648]\npush { r5 }\npop { r6 }\nldr r5,[sp,#0x58]\nmul r2,r5\npush { r6 }\npop { r5 }\nadd r2,r0,r2\nadd r1,r2,r1\nlsl r2,r5,#0x2\nadd r1,r1,r2\nldr r2,[0x00019650]\nldr r2,[r1,r2]\nstr r2,[sp,#0x70]\nldr r1,[sp,#0x50]\nmvn r1,r1\ncmp r2,r1\nbeq 0x00019496\nstr r5,[sp,#0x60]\nldr r6,[sp,#0x54]\ncmp r6,#0x1\nblt 0x0001948a\nldr r1,[r4,#0x0]\ncmp r1,#0x0\nldr r5,[sp,#0x90]\nbne 0x00019452\nmov r0,#0x8\nstr r0,[r4,#0x0]\nldr r0,[r5,#0x0]\nadd r0,#0x1\nstr r0,[r5,#0x0]\nldr r1,[sp,#0x88]\nldr r1,[r1,#0x0]\nldr r2,[sp,#0x84]\nmul r1,r2\nldr r5,[sp,#0x8c]\nadd r1,r5,r1\nldr r2,[0x00019630]\nldr r2,[r1,r2]\npush { r3 }\npop { r4 }\nldr r3,[r4,#0x0]\ncmp r2,r3\nbne 0x00019444\nldr r2,[sp,#0x80]\nldr r2,[r2,#0x0]\nadd r0,r2,r0\nldr r2,[0x00019654]\nadd r1,r1,r2\nldr r2,[r5,#0x18]\nbl 0x000379c0\nldr r1,[r5,#0x18]\nldr r3,[sp,#0x90]\nldr r0,[r3,#0x0]\nadd r0,r0,r1\nstr r0,[r3,#0x0]\nlsl r1,r1,#0x3\nldr r2,[r4,#0x0]\nadd r1,r2,r1\nstr r1,[r4,#0x0]\nldr r4,[sp,#0x88]\nldr r1,[r4,#0x0]\nadd r1,#0x1\nldr r2,[sp,#0x6c]\nand r1,r2\nstr r1,[r4,#0x0]\nldr r1,[sp,#0x80]\npush { r3 }\npop { r5 }\nb 0x00019448\nldr r1,[sp,#0x80]\nldr r5,[sp,#0x90]\nldr r1,[r1,#0x0]\nmov r2,#0x0\nstrb r2,[r1,r0]\nldr r4,[sp,#0x74]\nldr r1,[r4,#0x0]\ncmp r6,r1\npush { r6 }\npop { r0 }\nblt 0x0001945e\npush { r1 }\npop { r0 }\nsub r1,r1,r0\nstr r1,[r4,#0x0]\nsub r6,r6,r0\nldr r2,[sp,#0x70]\nasr r2,r6\nlsl r2,r1\nldr r1,[r5,#0x0]\nstr r5,[sp,#0x90]\nldr r3,[sp,#0x80]\nldr r3,[r3,#0x0]\nldrb r5,[r3,r1]\norr r5,r2\nstrb r5,[r3,r1]\nldr r3,[sp,#0x7c]\nldr r1,[r3,#0x0]\nadd r0,r1,r0\nstr r0,[r3,#0x0]\ncmp r6,#0x0\nbgt 0x000193e2\nldr r0,[sp,#0x4c]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x68]\nldr r1,[sp,#0x64]\nldr r0,[sp,#0x54]\nadd r1,r1,r0\nstr r1,[sp,#0x64]\nldr r0,[sp,#0x8c]\nldr r5,[sp,#0x60]\nadd r5,#0x1\nldr r1,[sp,#0x68]\ncmp r5,r1\nldr r2,[sp,#0x5c]\nblt 0x000193b2\nstr r2,[sp,#0x5c]\nldr r6,[0x00019644]\nmul r6,r2\nldr r1,[0x00019648]\nldr r2,[sp,#0x58]\nmul r1,r2\nadd r1,r0,r1\nadd r1,r1,r6\nldr r2,[0x00019658]\nldr r6,[r1,r2]\nstr r6,[sp,#0x54]\nadd r1,r1,r2\nstr r1,[sp,#0x4c]\ncmp r5,r6\nbge 0x000195be\nldr r1,[sp,#0x34]\nldr r2,[sp,#0x48]\nldr r1,[r1,r2]\nstr r1,[sp,#0x50]\nldr r2,[sp,#0x5c]\npush { r5 }\npop { r6 }\nldr r1,[0x00019644]\nmul r1,r2\nldr r2,[0x00019648]\nldr r5,[sp,#0x58]\nmul r2,r5\nadd r2,r0,r2\nadd r1,r2,r1\nlsl r2,r6,#0x2\nadd r1,r1,r2\nldr r2,[0x00019650]\nldr r2,[r1,r2]\nstr r2,[sp,#0x70]\nmov r1,#0x0\nstr r1,[sp,#0x68]\nmvn r1,r1\ncmp r2,r1\nbeq 0x000195b2\nstr r6,[sp,#0x60]\nldr r6,[sp,#0x50]\ncmp r6,#0x1\nblt 0x000195a6\nldr r1,[r4,#0x0]\ncmp r1,#0x0\nldr r2,[sp,#0x88]\nldr r5,[sp,#0x90]\nbne 0x0001956a\nmov r0,#0x8\nldr r1,[sp,#0x74]\nstr r0,[r1,#0x0]\nldr r0,[r5,#0x0]\n'
p2153
S'1a 98\n00 68\n00 28\n23 d0\n21 9c\n61 43\n70 18\n08 49\n41 18\n40 b4\n01 bc\n1e f0 b3 fb\n24 9a\n11 68\n19 e0\n21 9c\n24 9a\n48 1c\nff 23\n1b 93\n18 40\n10 60\n61 43\n04 b4\n20 bc\nd2 4a\nb2 18\n51 58\n0a 9b\nc9 18\n60 43\n11 50\nd0 48\n31 18\n22 91\n30 58\n29 68\n81 42\n05 d1\ncd 49\n79 44\n40 b4\n01 bc\n1e f0 42 fb\nb0 69\nc0 00\n08 90\n30 69\n01 28\n00 d0\na2 e1\n47 20\n80 00\n30 18\n20 90\n49 20\n80 00\n33 18\n1f 93\n25 20\nc0 00\n30 18\n24 90\n4b 20\n80 00\n34 18\n1d 94\nb0 6c\n00 22\n10 92\nbe 49\n79 44\n09 68\n0d 91\nbd 49\n79 44\n09 68\n0e 91\n16 92\n04 b4\n02 bc\n01 28\n10 9d\n00 da\n61 e1\n17 95\n0f 91\n40 b4\n01 bc\nb7 4e\n6e 43\nb7 49\n16 9a\n51 43\n41 18\n89 19\nb5 4a\n8e 58\n1a 96\n8a 18\n13 92\n13 22\n12 01\n8a 18\n11 92\n9f 22\n52 01\n89 58\n20 b4\n04 bc\n89 00\n12 91\n01 2e\n10 99\n02 b4\n20 bc\n19 91\n7f db\n0e 99\n12 9d\n49 59\n15 91\n00 21\n14 91\n02 b4\n20 bc\n19 91\na4 49\n51 43\na4 4a\n20 b4\n40 bc\n16 9d\n6a 43\n40 b4\n20 bc\n82 18\n51 18\naa 00\n89 18\na0 4a\n8a 58\n1c 92\n14 99\nc9 43\n8a 42\n5d d0\n18 95\n15 9e\n01 2e\n53 db\n21 68\n00 29\n24 9d\n33 d1\n08 20\n20 60\n28 68\n01 30\n28 60\n22 99\n09 68\n21 9a\n51 43\n23 9d\n69 18\n8b 4a\n8a 58\n08 b4\n10 bc\n23 68\n9a 42\n1a d1\n20 9a\n12 68\n10 18\n8f 4a\n89 18\naa 69\n1e f0 d1 fa\na9 69\n24 9b\n18 68\n40 18\n18 60\nc9 00\n22 68\n51 18\n21 60\n22 9c\n21 68\n01 31\n1b 9a\n11 40\n21 60\n20 99\n08 b4\n20 bc\n01 e0\n20 99\n24 9d\n09 68\n00 22\n0a 54\n1d 9c\n21 68\n8e 42\n40 b4\n01 bc\n01 db\n02 b4\n01 bc\n09 1a\n21 60\n36 1a\n1c 9a\n32 41\n8a 40\n29 68\n24 95\n20 9b\n1b 68\n5d 5c\n15 43\n5d 54\n1f 9b\n19 68\n08 18\n18 60\n00 2e\nae dc\n13 98\n00 68\n1a 90\n19 99\n15 98\n09 18\n19 91\n23 98\n18 9d\n01 35\n1a 99\n8d 42\n17 9a\n88 db\n17 92\n68 4e\n56 43\n68 49\n16 9a\n51 43\n41 18\n89 19\n69 4a\n8e 58\n15 96\n89 18\n13 91\nb5 42\n7f da\n0d 99\n12 9a\n89 58\n14 91\n17 9a\n20 b4\n40 bc\n5d 49\n51 43\n5d 4a\n16 9d\n6a 43\n82 18\n51 18\nb2 00\n89 18\n5c 4a\n8a 58\n1c 92\n00 21\n1a 91\nc9 43\n8a 42\n61 d0\n18 96\n14 9e\n01 2e\n57 db\n21 68\n00 29\n22 9a\n24 9d\n34 d1\n08 20\n1d 99\n08 60\n28 68\n'
p2154
S'.text:00019280\n.text:00019282\n.text:00019284\n.text:00019286\n.text:00019288\n.text:0001928a\n.text:0001928c\n.text:0001928e\n.text:00019290\n.text:00019292\n.text:00019294\n.text:00019296\n.text:0001929a\n.text:0001929c\n.text:0001929e\n.text:000192d0\n.text:000192d2\n.text:000192d4\n.text:000192d6\n.text:000192d8\n.text:000192da\n.text:000192dc\n.text:000192de\n.text:000192e0\n.text:000192e2\n.text:000192e4\n.text:000192e6\n.text:000192e8\n.text:000192ea\n.text:000192ec\n.text:000192ee\n.text:000192f0\n.text:000192f2\n.text:000192f4\n.text:000192f6\n.text:000192f8\n.text:000192fa\n.text:000192fc\n.text:000192fe\n.text:00019300\n.text:00019302\n.text:00019304\n.text:00019306\n.text:00019308\n.text:0001930c\n.text:0001930e\n.text:00019310\n.text:00019312\n.text:00019314\n.text:00019316\n.text:00019318\n.text:0001931a\n.text:0001931c\n.text:0001931e\n.text:00019320\n.text:00019322\n.text:00019324\n.text:00019326\n.text:00019328\n.text:0001932a\n.text:0001932c\n.text:0001932e\n.text:00019330\n.text:00019332\n.text:00019334\n.text:00019336\n.text:00019338\n.text:0001933a\n.text:0001933c\n.text:0001933e\n.text:00019340\n.text:00019342\n.text:00019344\n.text:00019346\n.text:00019348\n.text:0001934a\n.text:0001934c\n.text:0001934e\n.text:00019350\n.text:00019352\n.text:00019354\n.text:00019356\n.text:00019358\n.text:0001935a\n.text:0001935c\n.text:0001935e\n.text:00019360\n.text:00019362\n.text:00019364\n.text:00019366\n.text:00019368\n.text:0001936a\n.text:0001936c\n.text:0001936e\n.text:00019370\n.text:00019372\n.text:00019374\n.text:00019376\n.text:00019378\n.text:0001937a\n.text:0001937c\n.text:0001937e\n.text:00019380\n.text:00019382\n.text:00019384\n.text:00019386\n.text:00019388\n.text:0001938a\n.text:0001938c\n.text:0001938e\n.text:00019390\n.text:00019392\n.text:00019394\n.text:00019396\n.text:00019398\n.text:0001939a\n.text:0001939c\n.text:0001939e\n.text:000193a0\n.text:000193a2\n.text:000193a4\n.text:000193a6\n.text:000193a8\n.text:000193aa\n.text:000193ac\n.text:000193ae\n.text:000193b0\n.text:000193b2\n.text:000193b4\n.text:000193b6\n.text:000193b8\n.text:000193ba\n.text:000193bc\n.text:000193be\n.text:000193c0\n.text:000193c2\n.text:000193c4\n.text:000193c6\n.text:000193c8\n.text:000193ca\n.text:000193cc\n.text:000193ce\n.text:000193d0\n.text:000193d2\n.text:000193d4\n.text:000193d6\n.text:000193d8\n.text:000193da\n.text:000193dc\n.text:000193de\n.text:000193e0\n.text:000193e2\n.text:000193e4\n.text:000193e6\n.text:000193e8\n.text:000193ea\n.text:000193ec\n.text:000193ee\n.text:000193f0\n.text:000193f2\n.text:000193f4\n.text:000193f6\n.text:000193f8\n.text:000193fa\n.text:000193fc\n.text:000193fe\n.text:00019400\n.text:00019402\n.text:00019404\n.text:00019406\n.text:00019408\n.text:0001940a\n.text:0001940c\n.text:0001940e\n.text:00019410\n.text:00019412\n.text:00019414\n.text:00019416\n.text:00019418\n.text:0001941a\n.text:0001941e\n.text:00019420\n.text:00019422\n.text:00019424\n.text:00019426\n.text:00019428\n.text:0001942a\n.text:0001942c\n.text:0001942e\n.text:00019430\n.text:00019432\n.text:00019434\n.text:00019436\n.text:00019438\n.text:0001943a\n.text:0001943c\n.text:0001943e\n.text:00019440\n.text:00019442\n.text:00019444\n.text:00019446\n.text:00019448\n.text:0001944a\n.text:0001944c\n.text:0001944e\n.text:00019450\n.text:00019452\n.text:00019454\n.text:00019456\n.text:00019458\n.text:0001945a\n.text:0001945c\n.text:0001945e\n.text:00019460\n.text:00019462\n.text:00019464\n.text:00019466\n.text:00019468\n.text:0001946a\n.text:0001946c\n.text:0001946e\n.text:00019470\n.text:00019472\n.text:00019474\n.text:00019476\n.text:00019478\n.text:0001947a\n.text:0001947c\n.text:0001947e\n.text:00019480\n.text:00019482\n.text:00019484\n.text:00019486\n.text:00019488\n.text:0001948a\n.text:0001948c\n.text:0001948e\n.text:00019490\n.text:00019492\n.text:00019494\n.text:00019496\n.text:00019498\n.text:0001949a\n.text:0001949c\n.text:0001949e\n.text:000194a0\n.text:000194a2\n.text:000194a4\n.text:000194a6\n.text:000194a8\n.text:000194aa\n.text:000194ac\n.text:000194ae\n.text:000194b0\n.text:000194b2\n.text:000194b4\n.text:000194b6\n.text:000194b8\n.text:000194ba\n.text:000194bc\n.text:000194be\n.text:000194c0\n.text:000194c2\n.text:000194c4\n.text:000194c6\n.text:000194c8\n.text:000194ca\n.text:000194cc\n.text:000194ce\n.text:000194d0\n.text:000194d2\n.text:000194d4\n.text:000194d6\n.text:000194d8\n.text:000194da\n.text:000194dc\n.text:000194de\n.text:000194e0\n.text:000194e2\n.text:000194e4\n.text:000194e6\n.text:000194e8\n.text:000194ea\n.text:000194ec\n.text:000194ee\n.text:000194f0\n.text:000194f2\n.text:000194f4\n.text:000194f6\n.text:000194f8\n.text:000194fa\n.text:000194fc\n.text:000194fe\n.text:00019500\n.text:00019502\n.text:00019504\n.text:00019506\n'
p2155
tp2156
sS'id3tag_set_artist'
p2157
(S'\n__stdcall id3tag_set_artist()\n'
p2158
V\u000avoid id3tag_set_artist(int iParm1,char *pcParm2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  \u000a  if ((((iParm1 != 0) && (pcParm2 != (char *)0x0)) && (iVar2 = *(int *)(iParm1 + 0x120), iVar2 != 0)\u000a      ) && (*pcParm2 != 0)) {\u000a    local_strdup(iVar2 + DAT_0001d748,pcParm2);\u000a    *(uint *)(iVar2 + DAT_0001d74c) = *(uint *)(iVar2 + DAT_0001d74c) | 1;\u000a    iVar2 = DAT_0001d74c;\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    if (iVar3 != 0) {\u000a      uVar1 = *(undefined4 *)(iVar3 + DAT_0001d74c);\u000a      id3v2_add_latin1(iParm1,DAT_0001d750,DAT_0001d754 + 0x1d734,0,pcParm2);\u000a      *(undefined4 *)(iVar3 + iVar2) = uVar1;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p2159
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\ncmp r4,#0x0\nbeq 0x0001d742\nmov r0,#0x9\nlsl r0,r0,#0x5\nadd r1,r4,r0\ncmp r5,#0x0\nbeq 0x0001d742\nldr r6,[r4,r0]\ncmp r6,#0x0\nbeq 0x0001d742\nldrb r0,[r5,#0x0]\ncmp r0,#0x0\nbeq 0x0001d742\nldr r0,[0x0001d748]\nadd r0,r6,r0\nstr r1,[sp,#0x8]\npush { r5 }\npop { r1 }\nbl 0x0001d66c\nldr r0,[0x0001d74c]\nldr r1,[r6,r0]\nmov r2,#0x1\norr r2,r1\nstr r2,[r6,r0]\nldr r0,[sp,#0x8]\nldr r6,[r0,#0x0]\ncmp r6,#0x0\nbeq 0x0001d742\nldr r0,[0x0001d74c]\nstr r0,[sp,#0x4]\nldr r1,[r6,r0]\nstr r1,[sp,#0x8]\nmov r0,sp\nstr r5,[r0,#0x0]\nldr r1,[0x0001d750]\nldr r2,[0x0001d754]\nadd r2,pc\nmov r3,#0x0\npush { r4 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x4]\nstr r0,[r6,r1]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p2160
S'f0 b5\n03 af\n83 b0\n02 b4\n20 bc\n01 b4\n10 bc\n00 2c\n2b d0\n09 20\n40 01\n21 18\n00 2d\n26 d0\n26 58\n00 2e\n23 d0\n28 78\n00 28\n20 d0\n11 48\n30 18\n02 91\n20 b4\n02 bc\nff f7 af ff\n0f 48\n31 58\n01 22\n0a 43\n32 50\n02 98\n06 68\n00 2e\n10 d0\n0a 48\n01 90\n31 58\n02 91\n68 46\n05 60\n08 49\n09 4a\n7a 44\n00 23\n10 b4\n01 bc\nff f7 3a fe\n02 98\n01 99\n70 50\n03 b0\nf0 bd\n'
p2161
S'.text:0001d6d8\n.text:0001d6da\n.text:0001d6dc\n.text:0001d6de\n.text:0001d6e0\n.text:0001d6e2\n.text:0001d6e4\n.text:0001d6e6\n.text:0001d6e8\n.text:0001d6ea\n.text:0001d6ec\n.text:0001d6ee\n.text:0001d6f0\n.text:0001d6f2\n.text:0001d6f4\n.text:0001d6f6\n.text:0001d6f8\n.text:0001d6fa\n.text:0001d6fc\n.text:0001d6fe\n.text:0001d700\n.text:0001d702\n.text:0001d704\n.text:0001d706\n.text:0001d708\n.text:0001d70a\n.text:0001d70e\n.text:0001d710\n.text:0001d712\n.text:0001d714\n.text:0001d716\n.text:0001d718\n.text:0001d71a\n.text:0001d71c\n.text:0001d71e\n.text:0001d720\n.text:0001d722\n.text:0001d724\n.text:0001d726\n.text:0001d728\n.text:0001d72a\n.text:0001d72c\n.text:0001d72e\n.text:0001d730\n.text:0001d732\n.text:0001d734\n.text:0001d736\n.text:0001d738\n.text:0001d73c\n.text:0001d73e\n.text:0001d740\n.text:0001d742\n.text:0001d744\n'
p2162
tp2163
sS'freq2bark'
p2164
(S'\n__stdcall freq2bark(FLOAT freq)\n'
p2165
V\u000aFLOAT freq2bark(FLOAT freq)\u000a\u000a{\u000a  undefined4 in_r0;\u000a  undefined4 in_stack_0000002c;\u000a  \u000a  __divdf3(in_r0,DAT_0002168c);\u000a                    /* WARNING: Subroutine does not return */\u000a  __floatsidf(in_stack_0000002c);\u000a}\u000a\u000a
p2166
S'ldr r1,[0x0002168c]\nbl 0x00037bc0\npush { r0 }\npop { r6 }\npush { r1 }\npop { r4 }\nldr r0,[sp,#0x2c]\nbl 0x00037b90\n'
p2167
S'70 49\n16 f0 79 fb\n01 b4\n40 bc\n02 b4\n10 bc\n0b 98\n16 f0 5a fb\n'
p2168
S'.text:000214c8\n.text:000214ca\n.text:000214ce\n.text:000214d0\n.text:000214d2\n.text:000214d4\n.text:000214d6\n.text:000214d8\n'
p2169
tp2170
sS'lame_set_interChRatio'
p2171
(S'\n__stdcall lame_set_interChRatio()\n'
p2172
V\u000avoid lame_set_interChRatio(void)\u000a\u000a{\u000a  (*(lame_get_VBR + DAT_000381fc))();\u000a  return;\u000a}\u000a\u000a
p2173
S'ldr r12,[0x381fc]\nadd pc,r12,pc\n'
p2174
S'00 c0 9f e5\n0f f0 8c e0\n'
p2175
S'.text:000381f4\n.text:000381f8\n'
p2176
tp2177
sS'lame_get_lametag_frame'
p2178
(S'\n__stdcall lame_get_lametag_frame()\n'
p2179
V\u000avoid lame_get_lametag_frame(void)\u000a\u000a{\u000a  (*(fwrite + DAT_0003850c))();\u000a  return;\u000a}\u000a\u000a
p2180
S'ldr r12,[0x3850c]\nadd pc,r12,pc\n'
p2181
S'00 c0 9f e5\n0f f0 8c e0\n'
p2182
S'.text:00038504\n.text:00038508\n'
p2183
tp2184
sS'lame_set_subblock_gain'
p2185
(S'\n__stdcall lame_set_subblock_gain()\n'
p2186
V\u000aundefined4 lame_set_subblock_gain(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0x58) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2187
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002ef3c\nstr r4,[r5,#0x58]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2188
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 83 fa\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n02 d0\nac 65\n04 b4\n01 bc\nb0 bd\n'
p2189
S'.text:0002ef1a\n.text:0002ef1c\n.text:0002ef1e\n.text:0002ef20\n.text:0002ef22\n.text:0002ef24\n.text:0002ef26\n.text:0002ef2a\n.text:0002ef2c\n.text:0002ef2e\n.text:0002ef30\n.text:0002ef32\n.text:0002ef34\n.text:0002ef36\n.text:0002ef38\n.text:0002ef3a\n.text:0002ef3c\n'
p2190
tp2191
sS'__aeabi_memmove4'
p2192
(S'\n__stdcall __aeabi_memmove4()\n'
p2193
V\u000avoid __aeabi_memmove4(void)\u000a\u000a{\u000a  (*(__floatunsidf + DAT_00037c0c))();\u000a  return;\u000a}\u000a\u000a
p2194
S'ldr r12,[0x37c0c]\nadd pc,r12,pc\n'
p2195
S'00 c0 9f e5\n0f f0 8c e0\n'
p2196
S'.text:00037c04\n.text:00037c08\n'
p2197
tp2198
sS'__ledf2'
p2199
(S'\n__stdcall __ledf2()\n'
p2200
V\u000auint __ledf2(uint uParm1,uint uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  \u000a  bVar2 = ~((int)(uParm2 << 1) >> 0x15) == 0;\u000a  if (!bVar2) {\u000a    bVar2 = ~((int)(uParm4 << 1) >> 0x15) == 0;\u000a  }\u000a  if ((bVar2) &&\u000a     (((~((int)(uParm2 << 1) >> 0x15) == 0 && ((uParm1 | uParm2 << 0xc) != 0)) ||\u000a      ((~((int)(uParm4 << 1) >> 0x15) == 0 && ((uParm3 | uParm4 << 0xc) != 0)))))) {\u000a    return 1;\u000a  }\u000a  bVar2 = (uParm1 | uParm2 << 1) == 0;\u000a  if (bVar2) {\u000a    bVar2 = (uParm3 | uParm4 << 1) == 0;\u000a  }\u000a  if (!bVar2) {\u000a    bVar2 = uParm2 == uParm4;\u000a  }\u000a  if (bVar2) {\u000a    bVar2 = uParm1 == uParm3;\u000a  }\u000a  if (bVar2) {\u000a    return 0;\u000a  }\u000a  uVar1 = uParm2 ^ uParm4;\u000a  bVar2 = uVar1 == 0;\u000a  if (-1 < (int)uVar1) {\u000a    bVar2 = uParm2 == uParm4;\u000a  }\u000a  bVar3 = -1 < (int)uVar1 && uParm4 <= uParm2;\u000a  if (bVar2) {\u000a    bVar3 = uParm3 <= uParm1;\u000a  }\u000a  uParm4 = (int)uParm4 >> 0x1f;\u000a  if (!bVar3) {\u000a    uParm4 = ~uParm4;\u000a  }\u000a  return uParm4 | 1;\u000a}\u000a\u000a
p2201
S'mov r12,#0x1\nb 0x00035a70\n'
p2202
S'01 c0 a0 e3\n00 00 00 ea\n'
p2203
S'.text:00035a64\n.text:00035a68\n'
p2204
tp2205
sS'free'
p2206
(S'\n__stdcall free(void * __ptr)\n'
p2207
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(calloc + DAT_00037cac))();\u000a  return;\u000a}\u000a\u000a
p2208
S'ldr r12,[0x37cac]\nadd pc,r12,pc\n'
p2209
S'00 c0 9f e5\n0f f0 8c e0\n'
p2210
S'.text:00037ca4\n.text:00037ca8\n'
p2211
tp2212
sS'guess_scalefac_x34'
p2213
(S'\n__stdcall guess_scalefac_x34()\n'
p2214
V\u000avoid guess_scalefac_x34(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  \u000a  uVar1 = __floatsisf(uParm4);\u000a                    /* WARNING: Subroutine does not return */\u000a  __divsf3(uParm3,uVar1);\u000a}\u000a\u000a
p2215
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r2 }\npop { r4 }\npush { r3 }\npop { r0 }\nbl 0x00037b30\npush { r0 }\npop { r1 }\npush { r4 }\npop { r0 }\nbl 0x00037a90\n'
p2216
S'd0 b5\n02 af\n04 b4\n10 bc\n08 b4\n01 bc\n04 f0 04 fd\n01 b4\n02 bc\n10 b4\n01 bc\n04 f0 ae fc\n'
p2217
S'.text:00033118\n.text:0003311a\n.text:0003311c\n.text:0003311e\n.text:00033120\n.text:00033122\n.text:00033124\n.text:00033128\n.text:0003312a\n.text:0003312c\n.text:0003312e\n.text:00033130\n'
p2218
tp2219
sS'filterYule'
p2220
(S'\n__stdcall filterYule()\n'
p2221
V\u000avoid filterYule(undefined4 *puParm1,undefined4 uParm2,int iParm3,undefined4 *puParm4)\u000a\u000a{\u000a  if (iParm3 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(*puParm1,*puParm4,iParm3,puParm4,puParm4 + 1,puParm4 + 2,puParm4 + 3,puParm4 + 4,\u000a           puParm4 + 5,puParm4 + 6,puParm4 + 7,puParm4 + 8,puParm4 + 9,puParm4 + 10,puParm4 + 0xb,\u000a           puParm4 + 0xc,puParm4 + 0xd,puParm4 + 0xe,puParm4 + 0xf,puParm4 + 0x10,puParm4 + 0x11,\u000a           puParm4 + 0x12,puParm4 + 0x13,puParm4 + 0x14,puParm4,puParm1,uParm2);\u000a}\u000a\u000a
p2222
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x74\nstr r1,[sp,#0x58]\npush { r0 }\npop { r5 }\nstr r5,[sp,#0x54]\ncmp r2,#0x0\nbne 0x0001c270\nb 0x0001c69e\nldr r0,[sp,#0x58]\nsub r0,#0x4\nstr r0,[sp,#0x6c]\nstr r3,[sp,#0x50]\npush { r3 }\npop { r0 }\nadd r0,#0x50\nstr r0,[sp,#0x4c]\npush { r3 }\npop { r0 }\nadd r0,#0x4c\nstr r0,[sp,#0x48]\npush { r3 }\npop { r0 }\nadd r0,#0x48\nstr r0,[sp,#0x44]\npush { r3 }\npop { r0 }\nadd r0,#0x44\nstr r0,[sp,#0x40]\npush { r3 }\npop { r0 }\nadd r0,#0x40\nstr r0,[sp,#0x3c]\npush { r3 }\npop { r0 }\nadd r0,#0x3c\nstr r0,[sp,#0x38]\npush { r3 }\npop { r0 }\nadd r0,#0x38\nstr r0,[sp,#0x34]\npush { r3 }\npop { r0 }\nadd r0,#0x34\nstr r0,[sp,#0x30]\npush { r3 }\npop { r0 }\nadd r0,#0x30\nstr r0,[sp,#0x2c]\npush { r3 }\npop { r0 }\nadd r0,#0x2c\nstr r0,[sp,#0x28]\npush { r3 }\npop { r0 }\nadd r0,#0x28\nstr r0,[sp,#0x24]\npush { r3 }\npop { r0 }\nadd r0,#0x24\nstr r0,[sp,#0x20]\npush { r3 }\npop { r0 }\nadd r0,#0x20\nstr r0,[sp,#0x1c]\npush { r3 }\npop { r0 }\nadd r0,#0x1c\nstr r0,[sp,#0x18]\npush { r3 }\npop { r0 }\nadd r0,#0x18\nstr r0,[sp,#0x14]\npush { r3 }\npop { r0 }\nadd r0,#0x14\nstr r0,[sp,#0x10]\npush { r3 }\npop { r0 }\nadd r0,#0x10\nstr r0,[sp,#0xc]\npush { r3 }\npop { r0 }\nadd r0,#0xc\nstr r0,[sp,#0x8]\npush { r3 }\npop { r0 }\nadd r0,#0x8\nstr r0,[sp,#0x4]\nadd r0,r3,#0x4\nstr r0,[sp,#0x0]\nmov r0,#0x0\nstr r0,[sp,#0x70]\nstr r2,[sp,#0x64]\nldr r0,[sp,#0x70]\nldr r0,[r5,r0]\nldr r1,[sp,#0x50]\nldr r1,[r1,#0x0]\nbl 0x00037aa0\n'
p2223
S'f0 b5\n03 af\n9d b0\n16 91\n01 b4\n20 bc\n15 95\n00 2a\n00 d1\n16 e2\n16 98\n04 38\n1b 90\n14 93\n08 b4\n01 bc\n50 30\n13 90\n08 b4\n01 bc\n4c 30\n12 90\n08 b4\n01 bc\n48 30\n11 90\n08 b4\n01 bc\n44 30\n10 90\n08 b4\n01 bc\n40 30\n0f 90\n08 b4\n01 bc\n3c 30\n0e 90\n08 b4\n01 bc\n38 30\n0d 90\n08 b4\n01 bc\n34 30\n0c 90\n08 b4\n01 bc\n30 30\n0b 90\n08 b4\n01 bc\n2c 30\n0a 90\n08 b4\n01 bc\n28 30\n09 90\n08 b4\n01 bc\n24 30\n08 90\n08 b4\n01 bc\n20 30\n07 90\n08 b4\n01 bc\n1c 30\n06 90\n08 b4\n01 bc\n18 30\n05 90\n08 b4\n01 bc\n14 30\n04 90\n08 b4\n01 bc\n10 30\n03 90\n08 b4\n01 bc\n0c 30\n02 90\n08 b4\n01 bc\n08 30\n01 90\n18 1d\n00 90\n00 20\n1c 90\n19 92\n1c 98\n28 58\n14 99\n09 68\n1b f0 bd fb\n'
p2224
S'.text:0001c25c\n.text:0001c25e\n.text:0001c260\n.text:0001c262\n.text:0001c264\n.text:0001c266\n.text:0001c268\n.text:0001c26a\n.text:0001c26c\n.text:0001c26e\n.text:0001c270\n.text:0001c272\n.text:0001c274\n.text:0001c276\n.text:0001c278\n.text:0001c27a\n.text:0001c27c\n.text:0001c27e\n.text:0001c280\n.text:0001c282\n.text:0001c284\n.text:0001c286\n.text:0001c288\n.text:0001c28a\n.text:0001c28c\n.text:0001c28e\n.text:0001c290\n.text:0001c292\n.text:0001c294\n.text:0001c296\n.text:0001c298\n.text:0001c29a\n.text:0001c29c\n.text:0001c29e\n.text:0001c2a0\n.text:0001c2a2\n.text:0001c2a4\n.text:0001c2a6\n.text:0001c2a8\n.text:0001c2aa\n.text:0001c2ac\n.text:0001c2ae\n.text:0001c2b0\n.text:0001c2b2\n.text:0001c2b4\n.text:0001c2b6\n.text:0001c2b8\n.text:0001c2ba\n.text:0001c2bc\n.text:0001c2be\n.text:0001c2c0\n.text:0001c2c2\n.text:0001c2c4\n.text:0001c2c6\n.text:0001c2c8\n.text:0001c2ca\n.text:0001c2cc\n.text:0001c2ce\n.text:0001c2d0\n.text:0001c2d2\n.text:0001c2d4\n.text:0001c2d6\n.text:0001c2d8\n.text:0001c2da\n.text:0001c2dc\n.text:0001c2de\n.text:0001c2e0\n.text:0001c2e2\n.text:0001c2e4\n.text:0001c2e6\n.text:0001c2e8\n.text:0001c2ea\n.text:0001c2ec\n.text:0001c2ee\n.text:0001c2f0\n.text:0001c2f2\n.text:0001c2f4\n.text:0001c2f6\n.text:0001c2f8\n.text:0001c2fa\n.text:0001c2fc\n.text:0001c2fe\n.text:0001c300\n.text:0001c302\n.text:0001c304\n.text:0001c306\n.text:0001c308\n.text:0001c30a\n.text:0001c30c\n.text:0001c30e\n.text:0001c310\n.text:0001c312\n.text:0001c314\n.text:0001c316\n.text:0001c318\n.text:0001c31a\n.text:0001c31c\n.text:0001c31e\n.text:0001c320\n.text:0001c322\n'
p2225
tp2226
sS'__fixunsdfsi'
p2227
(S'\n__stdcall __fixunsdfsi()\n'
p2228
V\u000avoid __fixunsdfsi(void)\u000a\u000a{\u000a  (*(__aeabi_dcmple + DAT_00037bec))();\u000a  return;\u000a}\u000a\u000a
p2229
S'ldr r12,[0x37bec]\nadd pc,r12,pc\n'
p2230
S'00 c0 9f e5\n0f f0 8c e0\n'
p2231
S'.text:00037be4\n.text:00037be8\n'
p2232
tp2233
sS'Java_io_dcloud_feature_audio_mp3_SimpleLame_encode'
p2234
(S'\n__stdcall Java_io_dcloud_feature_audio_mp3_SimpleLame_encode(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p2235
V\u000aundefined4\u000aJava_io_dcloud_feature_audio_mp3_SimpleLame_encode\u000a          (int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,\u000a          undefined4 param_6)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  \u000a  uVar1 = (**(code **)(*param_1 + 0x2e8))(param_1,param_3,0);\u000a  uVar2 = (**(code **)(*param_1 + 0x2e8))(param_1,param_4,0);\u000a  uVar3 = (**(code **)(*param_1 + 0x2e0))(param_1,param_6,0);\u000a  uVar4 = (**(code **)(*param_1 + 0x2ac))(param_1,param_6);\u000a  uVar4 = lame_encode_buffer(*(undefined4 *)(DAT_00016e0c + 0x16da0),uVar1,uVar2,param_5,uVar3,uVar4\u000a                            );\u000a  (**(code **)(*param_1 + 0x308))(param_1,param_3,uVar1,0);\u000a  (**(code **)(*param_1 + 0x308))(param_1,param_4,uVar2,0);\u000a  (**(code **)(*param_1 + 0x300))(param_1,param_6,uVar3,0);\u000a  return uVar4;\u000a}\u000a\u000a
p2236
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x34\nstr r3,[sp,#0x30]\nstr r2,[sp,#0x28]\npush { r0 }\npop { r4 }\nmov r0,#0x5d\nlsl r6,r0,#0x3\nldr r0,[r4,#0x0]\nldr r3,[r0,r6]\nmov r5,#0x0\nstr r5,[sp,#0x18]\npush { r4 }\npop { r0 }\npush { r2 }\npop { r1 }\npush { r5 }\npop { r2 }\nblx r3\nstr r0,[sp,#0x20]\nldr r0,[r4,#0x0]\nldr r3,[r0,r6]\npush { r4 }\npop { r0 }\nldr r1,[sp,#0x30]\npush { r5 }\npop { r2 }\nblx r3\nstr r0,[sp,#0x2c]\nmov r0,#0x17\nlsl r0,r0,#0x5\nldr r1,[r4,#0x0]\nldr r3,[r1,r0]\nldr r1,[sp,#0x4c]\nstr r1,[sp,#0x24]\npush { r4 }\npop { r0 }\npush { r1 }\npop { r6 }\npush { r5 }\npop { r2 }\nblx r3\npush { r0 }\npop { r5 }\nstr r5,[sp,#0x1c]\nmov r0,#0xab\nlsl r0,r0,#0x2\nldr r1,[r4,#0x0]\nldr r2,[r1,r0]\npush { r4 }\npop { r0 }\npush { r6 }\npop { r1 }\nblx r2\nldr r1,[0x00016e0c]\nadd r1,pc\nldr r1,[r1,#0x0]\nmov r2,sp\nstr r5,[r2,#0x0]\nstr r0,[r2,#0x4]\nldr r3,[sp,#0x48]\npush { r1 }\npop { r0 }\nldr r6,[sp,#0x20]\npush { r6 }\npop { r1 }\nldr r2,[sp,#0x2c]\nbl 0x000378f0\nstr r0,[sp,#0x14]\nmov r0,#0x61\nlsl r1,r0,#0x3\nstr r1,[sp,#0xc]\nldr r0,[r4,#0x0]\nldr r0,[r0,r1]\nstr r0,[sp,#0x10]\npush { r4 }\npop { r0 }\nldr r1,[sp,#0x28]\npush { r6 }\npop { r2 }\nldr r6,[sp,#0x18]\npush { r6 }\npop { r3 }\nldr r5,[sp,#0x10]\nblx r5\nldr r0,[r4,#0x0]\nldr r1,[sp,#0xc]\nldr r5,[r0,r1]\npush { r4 }\npop { r0 }\nldr r1,[sp,#0x30]\nldr r2,[sp,#0x2c]\npush { r6 }\npop { r3 }\nblx r5\nmov r0,#0x3\nlsl r0,r0,#0x8\nldr r1,[r4,#0x0]\nldr r5,[r1,r0]\npush { r4 }\npop { r0 }\nldr r1,[sp,#0x24]\nldr r2,[sp,#0x1c]\npush { r6 }\npop { r3 }\nblx r5\nldr r0,[sp,#0x14]\nadd sp,#0x34\npop { r4, r5, r6, r7, pc }\n'
p2237
S'f0 b5\n03 af\n8d b0\n0c 93\n0a 92\n01 b4\n10 bc\n5d 20\nc6 00\n20 68\n83 59\n00 25\n06 95\n10 b4\n01 bc\n04 b4\n02 bc\n20 b4\n04 bc\n98 47\n08 90\n20 68\n83 59\n10 b4\n01 bc\n0c 99\n20 b4\n04 bc\n98 47\n0b 90\n17 20\n40 01\n21 68\n0b 58\n13 99\n09 91\n10 b4\n01 bc\n02 b4\n40 bc\n20 b4\n04 bc\n98 47\n01 b4\n20 bc\n07 95\nab 20\n80 00\n21 68\n0a 58\n10 b4\n01 bc\n40 b4\n02 bc\n90 47\n1c 49\n79 44\n09 68\n6a 46\n15 60\n50 60\n12 9b\n02 b4\n01 bc\n08 9e\n40 b4\n02 bc\n0b 9a\n20 f0 9c fd\n05 90\n61 20\nc1 00\n03 91\n20 68\n40 58\n04 90\n10 b4\n01 bc\n0a 99\n40 b4\n04 bc\n06 9e\n40 b4\n08 bc\n04 9d\na8 47\n20 68\n03 99\n45 58\n10 b4\n01 bc\n0c 99\n0b 9a\n40 b4\n08 bc\na8 47\n03 20\n00 02\n21 68\n0d 58\n10 b4\n01 bc\n09 99\n07 9a\n40 b4\n08 bc\na8 47\n05 98\n0d b0\nf0 bd\n'
p2238
S'.text:00016d2c\n.text:00016d2e\n.text:00016d30\n.text:00016d32\n.text:00016d34\n.text:00016d36\n.text:00016d38\n.text:00016d3a\n.text:00016d3c\n.text:00016d3e\n.text:00016d40\n.text:00016d42\n.text:00016d44\n.text:00016d46\n.text:00016d48\n.text:00016d4a\n.text:00016d4c\n.text:00016d4e\n.text:00016d50\n.text:00016d52\n.text:00016d54\n.text:00016d56\n.text:00016d58\n.text:00016d5a\n.text:00016d5c\n.text:00016d5e\n.text:00016d60\n.text:00016d62\n.text:00016d64\n.text:00016d66\n.text:00016d68\n.text:00016d6a\n.text:00016d6c\n.text:00016d6e\n.text:00016d70\n.text:00016d72\n.text:00016d74\n.text:00016d76\n.text:00016d78\n.text:00016d7a\n.text:00016d7c\n.text:00016d7e\n.text:00016d80\n.text:00016d82\n.text:00016d84\n.text:00016d86\n.text:00016d88\n.text:00016d8a\n.text:00016d8c\n.text:00016d8e\n.text:00016d90\n.text:00016d92\n.text:00016d94\n.text:00016d96\n.text:00016d98\n.text:00016d9a\n.text:00016d9c\n.text:00016d9e\n.text:00016da0\n.text:00016da2\n.text:00016da4\n.text:00016da6\n.text:00016da8\n.text:00016daa\n.text:00016dac\n.text:00016dae\n.text:00016db0\n.text:00016db2\n.text:00016db4\n.text:00016db8\n.text:00016dba\n.text:00016dbc\n.text:00016dbe\n.text:00016dc0\n.text:00016dc2\n.text:00016dc4\n.text:00016dc6\n.text:00016dc8\n.text:00016dca\n.text:00016dcc\n.text:00016dce\n.text:00016dd0\n.text:00016dd2\n.text:00016dd4\n.text:00016dd6\n.text:00016dd8\n.text:00016dda\n.text:00016ddc\n.text:00016dde\n.text:00016de0\n.text:00016de2\n.text:00016de4\n.text:00016de6\n.text:00016de8\n.text:00016dea\n.text:00016dec\n.text:00016dee\n.text:00016df0\n.text:00016df2\n.text:00016df4\n.text:00016df6\n.text:00016df8\n.text:00016dfa\n.text:00016dfc\n.text:00016dfe\n.text:00016e00\n.text:00016e02\n.text:00016e04\n.text:00016e06\n.text:00016e08\n'
p2239
tp2240
sS'id3tag_genre_list'
p2241
(S'\n__stdcall id3tag_genre_list()\n'
p2242
V\u000avoid id3tag_genre_list(code *pcParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  \u000a  iVar2 = 0;\u000a  if (pcParm1 != (code *)0x0) {\u000a    do {\u000a      iVar1 = *(int *)(DAT_0001c8b0 + 0x1c898 + iVar2 * 4);\u000a      (*pcParm1)(iVar1,*(undefined4 *)(DAT_0001c8b4 + 0x1c8a0 + iVar1 * 4),uParm2);\u000a      iVar2 = iVar2 + 1;\u000a    } while (iVar2 != 0x94);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2243
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nmov r6,#0x0\ncmp r5,#0x0\nbeq 0x0001c8ac\nlsl r0,r6,#0x2\nldr r1,[0x0001c8b0]\nadd r1,pc\nldr r0,[r1,r0]\nlsl r1,r0,#0x2\nldr r2,[0x0001c8b4]\nadd r2,pc\nldr r1,[r2,r1]\npush { r4 }\npop { r2 }\nblx r5\nadd r6,#0x1\ncmp r6,#0x94\nbne 0x0001c890\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p2244
S'f0 b5\n03 af\n81 b0\n02 b4\n10 bc\n01 b4\n20 bc\n00 26\n00 2d\n0d d0\nb0 00\n07 49\n79 44\n08 58\n81 00\n06 4a\n7a 44\n51 58\n10 b4\n04 bc\na8 47\n01 36\n94 2e\nf1 d1\n01 b0\nf0 bd\n'
p2245
S'.text:0001c87c\n.text:0001c87e\n.text:0001c880\n.text:0001c882\n.text:0001c884\n.text:0001c886\n.text:0001c888\n.text:0001c88a\n.text:0001c88c\n.text:0001c88e\n.text:0001c890\n.text:0001c892\n.text:0001c894\n.text:0001c896\n.text:0001c898\n.text:0001c89a\n.text:0001c89c\n.text:0001c89e\n.text:0001c8a0\n.text:0001c8a2\n.text:0001c8a4\n.text:0001c8a6\n.text:0001c8a8\n.text:0001c8aa\n.text:0001c8ac\n.text:0001c8ae\n'
p2246
tp2247
sS'nearestBitrateFullIndex'
p2248
(S'\n__stdcall nearestBitrateFullIndex()\n'
p2249
V\u000avoid nearestBitrateFullIndex(void)\u000a\u000a{\u000a  (*(InitGainAnalysis + DAT_00037e5c))();\u000a  return;\u000a}\u000a\u000a
p2250
S'ldr r12,[0x37e5c]\nadd pc,r12,pc\n'
p2251
S'00 c0 9f e5\n0f f0 8c e0\n'
p2252
S'.text:00037e54\n.text:00037e58\n'
p2253
tp2254
sS'__aeabi_memcpy4'
p2255
(S'\n__stdcall __aeabi_memcpy4()\n'
p2256
V\u000avoid __aeabi_memcpy4(void)\u000a\u000a{\u000a  (*(__aeabi_memcpy8 + DAT_00037b1c))();\u000a  return;\u000a}\u000a\u000a
p2257
S'ldr r12,[0x37b1c]\nadd pc,r12,pc\n'
p2258
S'00 c0 9f e5\n0f f0 8c e0\n'
p2259
S'.text:00037b14\n.text:00037b18\n'
p2260
tp2261
sS'lame_set_in_samplerate'
p2262
(S'\n__stdcall lame_set_in_samplerate()\n'
p2263
V\u000avoid lame_set_in_samplerate(void)\u000a\u000a{\u000a  (*(lame_set_num_channels + DAT_0003792c))();\u000a  return;\u000a}\u000a\u000a
p2264
S'ldr r12,[0x3792c]\nadd pc,r12,pc\n'
p2265
S'00 c0 9f e5\n0f f0 8c e0\n'
p2266
S'.text:00037924\n.text:00037928\n'
p2267
tp2268
sS'__aeabi_memcpy8'
p2269
(S'\n__stdcall __aeabi_memcpy8()\n'
p2270
V\u000avoid __aeabi_memcpy8(void)\u000a\u000a{\u000a  (*(__floatsisf + DAT_00037b2c))();\u000a  return;\u000a}\u000a\u000a
p2271
S'ldr r12,[0x37b2c]\nadd pc,r12,pc\n'
p2272
S'00 c0 9f e5\n0f f0 8c e0\n'
p2273
S'.text:00037b24\n.text:00037b28\n'
p2274
tp2275
sS'is_lame_internal_flags_valid'
p2276
(S'\n__stdcall is_lame_internal_flags_valid()\n'
p2277
V\u000avoid is_lame_internal_flags_valid(void)\u000a\u000a{\u000a  (*(__aeabi_uidivmod + DAT_0003844c))();\u000a  return;\u000a}\u000a\u000a
p2278
S'ldr r12,[0x3844c]\nadd pc,r12,pc\n'
p2279
S'00 c0 9f e5\n0f f0 8c e0\n'
p2280
S'.text:00038444\n.text:00038448\n'
p2281
tp2282
sS'__aeabi_frsub'
p2283
(S'\n__stdcall __aeabi_frsub()\n'
p2284
V\u000avoid __aeabi_frsub(uint uParm1)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __addsf3(uParm1 ^ 0x80000000);\u000a}\u000a\u000a
p2285
S'eor r0,r0,#0x80000000\nb 0x00035ce4\n'
p2286
S'02 01 20 e2\n00 00 00 ea\n'
p2287
S'.text:00035cd8\n.text:00035cdc\n'
p2288
tp2289
sS'FUN_00019276'
p2290
(S'\n__stdcall FUN_00019276()\n'
p2291
V\u000aundefined4 FUN_00019276(undefined4 uParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  uint extraout_r1;\u000a  uint *puVar8;\u000a  int iVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  int iVar12;\u000a  int iVar13;\u000a  int *piVar14;\u000a  int iVar15;\u000a  int *piVar16;\u000a  int *piVar17;\u000a  int *piVar18;\u000a  int unaff_r5;\u000a  int iVar19;\u000a  int iVar20;\u000a  int unaff_r6;\u000a  int iVar21;\u000a  int *in_stack_00000024;\u000a  int in_stack_00000028;\u000a  int iStack0000002c;\u000a  int iStack00000040;\u000a  int iStack00000048;\u000a  int iStack00000054;\u000a  int iStack00000058;\u000a  int iStack00000064;\u000a  int *in_stack_00000068;\u000a  int iStack00000074;\u000a  int in_stack_00000084;\u000a  int in_stack_0000008c;\u000a  uint *in_stack_00000090;\u000a  int in_stack_00000098;\u000a  \u000a  if (unaff_r5 != 1) {\u000a    FUN_00018944();\u000a    uParm2 = extraout_r1;\u000a  }\u000a  if (*in_stack_00000068 != 0) {\u000a    CRC_writeheader(unaff_r6,unaff_r6 + in_stack_00000084 * uParm2 + DAT_000192b0);\u000a    uParm2 = *in_stack_00000090;\u000a  }\u000a  uVar1 = uParm2 + 1 & 0xff;\u000a  *in_stack_00000090 = uVar1;\u000a  *(int *)(unaff_r6 + DAT_00019630 + in_stack_00000084 * uVar1) =\u000a       *(int *)(unaff_r6 + DAT_00019630 + in_stack_00000084 * uParm2) + in_stack_00000028;\u000a  puVar8 = (uint *)(unaff_r6 + DAT_00019634);\u000a  if (*in_stack_00000090 == *(uint *)(unaff_r6 + DAT_00019634)) {\u000a    lame_errorf(unaff_r6,DAT_00019638 + 0x19306);\u000a  }\u000a  iVar2 = *(int *)(unaff_r6 + 0x18);\u000a  if (*(int *)(unaff_r6 + 0x10) == 1) {\u000a    piVar16 = (int *)(unaff_r6 + 0x11c);\u000a    piVar17 = (int *)(unaff_r6 + 0x124);\u000a    piVar3 = (int *)(unaff_r6 + 0x128);\u000a    piVar18 = (int *)(unaff_r6 + 300);\u000a    iVar7 = *(int *)(unaff_r6 + 0x48);\u000a    iStack00000040 = 0;\u000a    iVar6 = *(int *)(DAT_0001963c + 0x19346);\u000a    iVar19 = *(int *)(DAT_00019640 + 0x1934e);\u000a    iStack00000058 = 0;\u000a    iVar9 = 0;\u000a    do {\u000a      iVar4 = iStack00000040;\u000a      if (0 < iVar7) {\u000a        do {\u000a          iVar7 = unaff_r6 + iStack00000058 * DAT_00019648 + iVar4 * DAT_00019644;\u000a          in_stack_00000068 = *(int **)(iVar7 + DAT_0001964c);\u000a          piVar14 = (int *)(iVar7 + DAT_0001964c);\u000a          iVar5 = iVar7 + 0x130;\u000a          iVar10 = *(int *)(iVar7 + 0x13e0) * 4;\u000a          iStack00000064 = 0;\u000a          iVar7 = iStack00000040;\u000a          if (0 < (int)in_stack_00000068) {\u000a            iVar20 = *(int *)(iVar19 + iVar10);\u000a            iVar7 = 0;\u000a            iStack00000064 = 0;\u000a            do {\u000a              iVar11 = *(int *)(unaff_r6 + iStack00000058 * DAT_00019648 + iVar4 * DAT_00019644 +\u000a                                iVar7 * 4 + DAT_00019650);\u000a              if (iVar11 != -1) {\u000a                iVar12 = iVar20;\u000a                if (0 < iVar20) {\u000a                  do {\u000a                    iVar13 = *piVar18;\u000a                    if (iVar13 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar13 = *piVar3 + 1;\u000a                      *piVar3 = iVar13;\u000a                      iVar21 = in_stack_0000008c + in_stack_00000084 * *puVar8;\u000a                      if (*(int *)(iVar21 + DAT_00019630) == *piVar17) {\u000a                        __aeabi_memcpy(*piVar16 + iVar13,iVar21 + DAT_00019654,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar21 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar13 = *piVar3 + iVar21;\u000a                        *piVar3 = iVar13;\u000a                        *piVar17 = *piVar17 + iVar21 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar13) = 0;\u000a                      iVar13 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar12;\u000a                    if (iVar13 <= iVar12) {\u000a                      iVar21 = iVar13;\u000a                    }\u000a                    *piVar18 = iVar13 - iVar21;\u000a                    iVar12 = iVar12 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((iVar11 >> iVar12) << iVar13 - iVar21);\u000a                    *piVar17 = *piVar17 + iVar21;\u000a                  } while (0 < iVar12);\u000a                  in_stack_00000068 = (int *)*piVar14;\u000a                }\u000a                iStack00000064 = iStack00000064 + iVar20;\u000a                unaff_r6 = in_stack_0000008c;\u000a              }\u000a              iVar7 = iVar7 + 1;\u000a            } while (iVar7 < (int)in_stack_00000068);\u000a          }\u000a          iVar20 = unaff_r6 + iStack00000058 * DAT_00019648 + iVar4 * DAT_00019644;\u000a          iStack00000054 = *(int *)(iVar20 + DAT_00019658);\u000a          piVar14 = (int *)(iVar20 + DAT_00019658);\u000a          if (iVar7 < iStack00000054) {\u000a            iVar10 = *(int *)(iVar6 + iVar10);\u000a            do {\u000a              iVar20 = *(int *)(unaff_r6 + iStack00000058 * DAT_00019648 + iVar4 * DAT_00019644 +\u000a                                iVar7 * 4 + DAT_00019650);\u000a              if (iVar20 != -1) {\u000a                iVar11 = iVar10;\u000a                if (0 < iVar10) {\u000a                  do {\u000a                    iVar12 = *piVar18;\u000a                    if (iVar12 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar12 = *piVar3 + 1;\u000a                      *piVar3 = iVar12;\u000a                      iVar13 = in_stack_0000008c + in_stack_00000084 * *puVar8;\u000a                      if (*(int *)(iVar13 + DAT_00019630) == *piVar17) {\u000a                        __aeabi_memcpy(*piVar16 + iVar12,iVar13 + DAT_00019654,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar13 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar12 = *piVar3 + iVar13;\u000a                        *piVar3 = iVar12;\u000a                        *piVar17 = *piVar17 + iVar13 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar12) = 0;\u000a                      iVar12 = *piVar18;\u000a                    }\u000a                    iVar13 = iVar11;\u000a                    if (iVar12 <= iVar11) {\u000a                      iVar13 = iVar12;\u000a                    }\u000a                    *piVar18 = iVar12 - iVar13;\u000a                    iVar11 = iVar11 - iVar13;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((iVar20 >> iVar11) << iVar12 - iVar13);\u000a                    *piVar17 = *piVar17 + iVar13;\u000a                  } while (0 < iVar11);\u000a                  iStack00000054 = *piVar14;\u000a                }\u000a                iStack00000064 = iStack00000064 + iVar10;\u000a                unaff_r6 = in_stack_0000008c;\u000a              }\u000a              iVar7 = iVar7 + 1;\u000a            } while (iVar7 < iStack00000054);\u000a          }\u000a          if (*(int *)(unaff_r6 + iStack00000058 * DAT_00019648 + iVar4 * DAT_00019644 +\u000a                      DAT_0001965c) == 2) {\u000a            iVar7 = ShortHuffmancodebits(unaff_r6,iVar5);\u000a          }\u000a          else {\u000a            iVar7 = LongHuffmancodebits(unaff_r6,iVar5);\u000a          }\u000a          iVar10 = huffman_coder_count1(unaff_r6,iVar5);\u000a          iVar9 = iStack00000064 + iVar9 + iVar7 + iVar10;\u000a          iVar4 = iVar4 + 1;\u000a          iVar7 = *(int *)(unaff_r6 + 0x48);\u000a        } while (iVar4 < iVar7);\u000a      }\u000a      iStack00000058 = iStack00000058 + 1;\u000a    } while (iStack00000058 != 2);\u000a  }\u000a  else {\u000a    iVar9 = 0;\u000a    if (0 < *(int *)(unaff_r6 + 0x48)) {\u000a      piVar16 = (int *)(unaff_r6 + 0x11c);\u000a      piVar17 = (int *)(unaff_r6 + 0x124);\u000a      piVar3 = (int *)(unaff_r6 + 0x128);\u000a      piVar18 = (int *)(unaff_r6 + 300);\u000a      iStack0000002c = 0;\u000a      iVar7 = 0;\u000a      iVar9 = 0;\u000a      do {\u000a        iVar4 = unaff_r6 + iVar7 * iteration_finish_one;\u000a        piVar14 = (int *)(iVar4 + DAT_000199b0);\u000a        iVar10 = iVar4 + 0x130;\u000a        iStack00000054 = 0;\u000a        iStack00000048 = 0;\u000a        iVar6 = iStack0000002c;\u000a        iVar19 = iStack0000002c;\u000a        if (*(int *)(iVar4 + DAT_000199b4) == 2) {\u000a          do {\u000a            iVar4 = *(int *)(*piVar14 + iVar6 * 4);\u000a            iVar5 = __divsi3();\u000a            if (2 < iVar4) {\u000a              iVar4 = *(int *)(unaff_r6 + iVar7 * iteration_finish_one + iVar6 * 4 + DAT_000199b8);\u000a              iVar20 = 0;\u000a              do {\u000a                iVar11 = iVar19 * 0xc;\u000a                in_stack_00000068 =\u000a                     *(int **)(in_stack_0000008c + iVar7 * iteration_finish_one + iVar11 +\u000a                              DAT_000199bc);\u000a                if ((int)in_stack_00000068 < 1) {\u000a                  in_stack_00000068 = (int *)0x0;\u000a                }\u000a                iVar12 = iVar4;\u000a                if (0 < iVar4) {\u000a                  do {\u000a                    iVar13 = *piVar18;\u000a                    if (iVar13 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar13 = *piVar3 + 1;\u000a                      *piVar3 = iVar13;\u000a                      iVar21 = in_stack_0000008c + in_stack_00000084 * *puVar8;\u000a                      if (*(int *)(iVar21 + DAT_000199c0) == *piVar17) {\u000a                        __aeabi_memcpy(*piVar16 + iVar13,iVar21 + DAT_000199c4,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar21 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar13 = *piVar3 + iVar21;\u000a                        *piVar3 = iVar13;\u000a                        *piVar17 = *piVar17 + iVar21 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar13) = 0;\u000a                      iVar13 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar12;\u000a                    if (iVar13 <= iVar12) {\u000a                      iVar21 = iVar13;\u000a                    }\u000a                    *piVar18 = iVar13 - iVar21;\u000a                    iVar12 = iVar12 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)(((int)in_stack_00000068 >> iVar12) << iVar13 - iVar21);\u000a                    iVar21 = *piVar17 + iVar21;\u000a                    *piVar17 = iVar21;\u000a                  } while (0 < iVar12);\u000a                  iStack00000074 =\u000a                       *(int *)(in_stack_0000008c + iVar7 * iteration_finish_one + iVar11 +\u000a                               DAT_000199c8);\u000a                  iVar12 = iVar4;\u000a                  if (iStack00000074 < 1) {\u000a                    iStack00000074 = 0;\u000a                    iVar12 = iVar4;\u000a                  }\u000a                  do {\u000a                    iVar13 = *piVar18;\u000a                    if (iVar13 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar13 = *piVar3 + 1;\u000a                      *piVar3 = iVar13;\u000a                      iVar15 = in_stack_0000008c + in_stack_00000084 * *puVar8;\u000a                      if (*(int *)(iVar15 + DAT_000199c0) == iVar21) {\u000a                        __aeabi_memcpy(*piVar16 + iVar13,iVar15 + DAT_000199c4,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar21 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar13 = *piVar3 + iVar21;\u000a                        *piVar3 = iVar13;\u000a                        *piVar17 = *piVar17 + iVar21 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar13) = 0;\u000a                      iVar13 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar12;\u000a                    if (iVar13 <= iVar12) {\u000a                      iVar21 = iVar13;\u000a                    }\u000a                    *piVar18 = iVar13 - iVar21;\u000a                    iVar12 = iVar12 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((iStack00000074 >> iVar12) << iVar13 - iVar21);\u000a                    iVar21 = *piVar17 + iVar21;\u000a                    *piVar17 = iVar21;\u000a                  } while (0 < iVar12);\u000a                  iStack00000074 =\u000a                       *(int *)(in_stack_0000008c + iVar7 * DAT_00019c6c + iVar11 + DAT_00019c78);\u000a                  iVar11 = iVar4;\u000a                  if (iStack00000074 < 1) {\u000a                    iStack00000074 = 0;\u000a                    iVar11 = iVar4;\u000a                  }\u000a                  do {\u000a                    iVar12 = *piVar18;\u000a                    if (iVar12 == 0) {\u000a                      *piVar18 = 8;\u000a                      iVar12 = *piVar3 + 1;\u000a                      *piVar3 = iVar12;\u000a                      iVar13 = in_stack_0000008c + in_stack_00000084 * *puVar8;\u000a                      if (*(int *)(iVar13 + DAT_00019c64) == iVar21) {\u000a                        __aeabi_memcpy(*piVar16 + iVar12,iVar13 + DAT_00019c68,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar13 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar12 = *piVar3 + iVar13;\u000a                        *piVar3 = iVar12;\u000a                        *piVar17 = *piVar17 + iVar13 * 8;\u000a                        *puVar8 = *puVar8 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar16 + iVar12) = 0;\u000a                      iVar12 = *piVar18;\u000a                    }\u000a                    iVar21 = iVar11;\u000a                    if (iVar12 <= iVar11) {\u000a                      iVar21 = iVar12;\u000a                    }\u000a                    *piVar18 = iVar12 - iVar21;\u000a                    iVar11 = iVar11 - iVar21;\u000a                    *(byte *)(*piVar16 + *piVar3) =\u000a                         *(byte *)(*piVar16 + *piVar3) |\u000a                         (byte)((iStack00000074 >> iVar11) << iVar12 - iVar21);\u000a                    iVar21 = *piVar17 + iVar21;\u000a                    *piVar17 = iVar21;\u000a                  } while (0 < iVar11);\u000a                }\u000a                iStack00000054 = iStack00000054 + iVar4 * 3;\u000a                iVar19 = iVar19 + 1;\u000a                iVar20 = iVar20 + 1;\u000a              } while (iVar20 < iVar5);\u000a            }\u000a            iVar6 = iVar6 + 1;\u000a            unaff_r6 = in_stack_0000008c;\u000a          } while (iVar6 != 4);\u000a          iVar6 = ShortHuffmancodebits(in_stack_0000008c,iVar10);\u000a          unaff_r6 = in_stack_0000008c;\u000a        }\u000a        else {\u000a          do {\u000a            iVar19 = *(int *)(*piVar14 + iVar6 * 4);\u000a            if (0 < iVar19) {\u000a              iVar5 = *(int *)(unaff_r6 + iVar7 * DAT_00019c6c + iVar6 * 4 + DAT_00019c70);\u000a              iVar20 = 0;\u000a              iVar4 = iStack00000048;\u000a              do {\u000a                iStack00000074 =\u000a                     *(int *)(unaff_r6 + iVar7 * DAT_00019c6c + iVar4 * 4 + DAT_00019c74);\u000a                iVar11 = iVar5;\u000a                if (iStack00000074 < 1) {\u000a                  iStack00000074 = 0;\u000a                  iVar11 = iVar5;\u000a                }\u000a                while (0 < iVar11) {\u000a                  iVar12 = *piVar18;\u000a                  if (iVar12 == 0) {\u000a                    *piVar18 = 8;\u000a                    iVar12 = *piVar3 + 1;\u000a                    *piVar3 = iVar12;\u000a                    iVar13 = in_stack_0000008c + in_stack_00000084 * *puVar8;\u000a                    if (*(int *)(iVar13 + DAT_00019c64) == *piVar17) {\u000a                      __aeabi_memcpy(*piVar16 + iVar12,iVar13 + DAT_00019c68,\u000a                                     *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                      iVar13 = *(int *)(in_stack_0000008c + 0x18);\u000a                      iVar12 = *piVar3 + iVar13;\u000a                      *piVar3 = iVar12;\u000a                      *piVar17 = *piVar17 + iVar13 * 8;\u000a                      *puVar8 = *puVar8 + 1 & 0xff;\u000a                    }\u000a                    *(undefined *)(*piVar16 + iVar12) = 0;\u000a                    iVar12 = *piVar18;\u000a                  }\u000a                  iVar13 = iVar11;\u000a                  if (iVar12 <= iVar11) {\u000a                    iVar13 = iVar12;\u000a                  }\u000a                  *piVar18 = iVar12 - iVar13;\u000a                  *(byte *)(*piVar16 + *piVar3) =\u000a                       *(byte *)(*piVar16 + *piVar3) |\u000a                       (byte)((iStack00000074 >> iVar11 - iVar13) << iVar12 - iVar13);\u000a                  *piVar17 = *piVar17 + iVar13;\u000a                  iVar11 = iVar11 - iVar13;\u000a                }\u000a                iVar4 = iVar4 + 1;\u000a                iVar20 = iVar20 + 1;\u000a                unaff_r6 = in_stack_0000008c;\u000a              } while (iVar20 != iVar19);\u000a              iStack00000048 = iVar19 + iStack00000048;\u000a              iStack00000054 = iVar19 * iVar5 + iStack00000054;\u000a              unaff_r6 = in_stack_0000008c;\u000a            }\u000a            iVar6 = iVar6 + 1;\u000a          } while (iVar6 != 4);\u000a          iVar6 = LongHuffmancodebits(unaff_r6,iVar10);\u000a        }\u000a        iVar19 = huffman_coder_count1(unaff_r6,iVar10);\u000a        iVar9 = iStack00000054 + iVar9 + iVar6 + iVar19;\u000a        iVar7 = iVar7 + 1;\u000a      } while (iVar7 < *(int *)(unaff_r6 + 0x48));\u000a    }\u000a  }\u000a  iVar7 = DAT_00019c7c;\u000a  drain_into_ancillary(unaff_r6,*(undefined4 *)(unaff_r6 + DAT_00019c7c));\u000a  in_stack_00000028 = in_stack_00000028 - (iVar9 + iVar2 * 8 + *(int *)(unaff_r6 + iVar7));\u000a  *in_stack_00000024 =\u000a       ((int)(in_stack_00000028 + ((uint)(in_stack_00000028 >> 0x1f) >> 0x1d)) >> 3) +\u000a       *in_stack_00000024;\u000a  iVar2 = DAT_00019c80;\u000a  piVar16 = (int *)(unaff_r6 + DAT_00019c80);\u000a  iVar7 = compute_flushbits(unaff_r6,&stack0x00000094);\u000a  if (iVar7 != *(int *)(unaff_r6 + iVar2)) {\u000a    lame_errorf(unaff_r6,DAT_00019c84 + 0x19b76);\u000a    iVar7 = *piVar16;\u000a  }\u000a  if (*in_stack_00000024 * 8 - iVar7 != 0) {\u000a    lame_errorf(unaff_r6,DAT_00019c88 + 0x19bde,*in_stack_00000024 * 8,iVar7);\u000a    lame_errorf(unaff_r6,DAT_00019c8c + 0x19bee);\u000a    lame_errorf(unaff_r6,DAT_00019c90 + 0x19bfa);\u000a    lame_errorf(unaff_r6,DAT_00019c94 + 0x19c06);\u000a    lame_errorf(unaff_r6,DAT_00019c98 + 0x19c12);\u000a    *piVar16 = *in_stack_00000024 << 3;\u000a  }\u000a  iVar2 = *(int *)(unaff_r6 + 0x124);\u000a  if (DAT_00019c9c <= iVar2) {\u000a    piVar16 = (int *)(unaff_r6 + DAT_00019c64);\u000a    iVar7 = 0x100;\u000a    do {\u000a      *piVar16 = *piVar16 - iVar2;\u000a      piVar16 = piVar16 + 0xc;\u000a      iVar7 = iVar7 + -1;\u000a    } while (iVar7 != 0);\u000a    *(undefined4 *)(unaff_r6 + 0x124) = 0;\u000a  }\u000a  if (**(int **)(DAT_00019ca0 + 0x19c52) == in_stack_00000098) {\u000a    return 0;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p2292
S'add r5,#0x1\ncmp r5,#0x2\nbeq 0x00019280\nbl 0x00018944\n'
p2293
S'01 35\n02 2d\n01 d0\nff f7 62 fb\n'
p2294
S'.text:00019276\n.text:00019278\n.text:0001927a\n.text:0001927c\n'
p2295
tp2296
sS'lame_encode_buffer_interleaved_ieee_double'
p2297
(S'\n__stdcall lame_encode_buffer_interleaved_ieee_double(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p2298
V\u000avoid lame_encode_buffer_interleaved_ieee_double\u000a               (undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4,\u000a               undefined4 param_5)\u000a\u000a{\u000a  lame_encode_buffer_template(param_1,param_2,param_2 + 8,param_3,param_4,param_5,4,2,DAT_00021190);\u000a  return;\u000a}\u000a\u000a
p2299
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x18\npush { r2 }\npop { r4 }\nldr r2,[0x00021190]\nmov r5,sp\nstr r2,[r5,#0x10]\nmov r2,#0x2\nstr r2,[r5,#0xc]\nmov r2,#0x4\nstr r2,[r5,#0x8]\nldr r2,[sp,#0x28]\nstr r2,[r5,#0x4]\nstr r3,[r5,#0x0]\npush { r1 }\npop { r2 }\nadd r2,#0x8\npush { r4 }\npop { r3 }\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p2300
S'b0 b5\n02 af\n86 b0\n04 b4\n10 bc\n09 4a\n6d 46\n2a 61\n02 22\nea 60\n04 22\naa 60\n0a 9a\n6a 60\n2b 60\n02 b4\n04 bc\n08 32\n10 b4\n08 bc\nff f7 d2 fd\n06 b0\nb0 bd\n'
p2301
S'.text:00021160\n.text:00021162\n.text:00021164\n.text:00021166\n.text:00021168\n.text:0002116a\n.text:0002116c\n.text:0002116e\n.text:00021170\n.text:00021172\n.text:00021174\n.text:00021176\n.text:00021178\n.text:0002117a\n.text:0002117c\n.text:0002117e\n.text:00021180\n.text:00021182\n.text:00021184\n.text:00021186\n.text:00021188\n.text:0002118c\n.text:0002118e\n'
p2302
tp2303
sS'__aeabi_memset4'
p2304
(S'\n__stdcall __aeabi_memset4()\n'
p2305
V\u000avoid __aeabi_memset4(void)\u000a\u000a{\u000a  (*(lame_set_VBR + DAT_000380cc))();\u000a  return;\u000a}\u000a\u000a
p2306
S'ldr r12,[0x380cc]\nadd pc,r12,pc\n'
p2307
S'00 c0 9f e5\n0f f0 8c e0\n'
p2308
S'.text:000380c4\n.text:000380c8\n'
p2309
tp2310
sS'GetTitleGain'
p2311
(S'\n__stdcall GetTitleGain()\n'
p2312
V\u000avoid GetTitleGain(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038050 + DAT_0003804c))();\u000a  return;\u000a}\u000a\u000a
p2313
S'ldr r12,[0x3804c]\nadd pc,r12,pc\n'
p2314
S'00 c0 9f e5\n0f f0 8c e0\n'
p2315
S'.text:00038044\n.text:00038048\n'
p2316
tp2317
sS'lame_get_scale'
p2318
(S'\n__stdcall lame_get_scale()\n'
p2319
V\u000avoid lame_get_scale(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038150 + DAT_0003814c))();\u000a  return;\u000a}\u000a\u000a
p2320
S'ldr r12,[0x3814c]\nadd pc,r12,pc\n'
p2321
S'00 c0 9f e5\n0f f0 8c e0\n'
p2322
S'.text:00038144\n.text:00038148\n'
p2323
tp2324
sS'__on_dlclose'
p2325
(S'\n__stdcall __on_dlclose()\n'
p2326
V\u000avoid __on_dlclose(void)\u000a\u000a{\u000a  (*(code *)PTR___cxa_finalize_00040c68)((int)&DAT_00016ce4 + DAT_00016ce4);\u000a  return;\u000a}\u000a\u000a
p2327
S'ldr r0,[0x16ce4]\nadd r0,pc,r0\nb 0x00016210\n'
p2328
S'04 00 9f e5\n00 00 8f e0\n4a fd ff ea\n'
p2329
S'.text:00016cd8\n.text:00016cdc\n.text:00016ce0\n'
p2330
tp2331
sS'lame_get_subblock_gain'
p2332
(S'\n__stdcall lame_get_subblock_gain()\n'
p2333
V\u000aundefined4 lame_get_subblock_gain(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0x58);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2334
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ef56\nldr r0,[r4,#0x58]\npop { r4, r6, r7, pc }\n'
p2335
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 73 fa\n01 b4\n02 bc\n00 20\n00 29\n00 d0\na0 6d\nd0 bd\n'
p2336
S'.text:0002ef3e\n.text:0002ef40\n.text:0002ef42\n.text:0002ef44\n.text:0002ef46\n.text:0002ef4a\n.text:0002ef4c\n.text:0002ef4e\n.text:0002ef50\n.text:0002ef52\n.text:0002ef54\n.text:0002ef56\n'
p2337
tp2338
sS'lame_bitrate_hist'
p2339
(S'\n__stdcall lame_bitrate_hist()\n'
p2340
V\u000avoid lame_bitrate_hist(int *piParm1,undefined4 *puParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  \u000a  iVar1 = DAT_00021a44;\u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_00021a3c)) &&\u000a      (piVar3 = (int *)piParm1[0x48], piVar3 != (int *)0x0)) && (*piVar3 == DAT_00021a3c)) {\u000a    if (piVar3[0x26] != 0) {\u000a      __aeabi_memclr4(puParm2,0x38);\u000a      *puParm2 = *(undefined4 *)((int)piVar3 + DAT_00021a40);\u000a      return;\u000a    }\u000a    iVar2 = 0;\u000a    do {\u000a      *(undefined4 *)((int)puParm2 - iVar2) = *(undefined4 *)((int)piVar3 + iVar2 * -5 + iVar1);\u000a      iVar2 = iVar2 + -4;\u000a    } while (iVar2 != -0x38);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2341
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\ncmp r0,#0x0\nbeq 0x00021a38\nldr r1,[r0,#0x0]\nldr r2,[0x00021a3c]\ncmp r1,r2\nbne 0x00021a38\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r5,[r0,r1]\ncmp r5,#0x0\nbeq 0x00021a38\nldr r0,[r5,#0x0]\nldr r1,[0x00021a3c]\ncmp r0,r1\nbne 0x00021a38\nmov r0,#0x98\nldr r0,[r5,r0]\ncmp r0,#0x0\nbeq 0x00021a1c\nmov r1,#0x38\npush { r4 }\npop { r0 }\nbl 0x00037a40\nldr r0,[0x00021a40]\nldr r0,[r5,r0]\nstr r0,[r4,#0x0]\npop { r4, r5, r7, pc }\nldr r0,[0x00021a44]\nadd r0,r5,r0\nmov r1,#0x0\nsub r2,r4,r1\nmov r3,#0x4\nmvn r3,r3\nmul r3,r1\nldr r3,[r0,r3]\nstr r3,[r2,#0x0]\nsub r1,#0x4\nmov r2,#0x37\nmvn r2,r2\ncmp r1,r2\nbne 0x00021a22\npop { r4, r5, r7, pc }\n'
p2342
S'b0 b5\n02 af\n02 b4\n10 bc\n00 28\n27 d0\n01 68\n14 4a\n91 42\n23 d1\n09 21\n49 01\n45 58\n00 2d\n1e d0\n28 68\n0f 49\n88 42\n1a d1\n98 20\n28 58\n00 28\n08 d0\n38 21\n10 b4\n01 bc\n16 f0 16 f8\n0a 48\n28 58\n20 60\nb0 bd\n09 48\n28 18\n00 21\n62 1a\n04 23\ndb 43\n4b 43\nc3 58\n13 60\n04 39\n37 22\nd2 43\n91 42\nf4 d1\nb0 bd\n'
p2343
S'.text:000219dc\n.text:000219de\n.text:000219e0\n.text:000219e2\n.text:000219e4\n.text:000219e6\n.text:000219e8\n.text:000219ea\n.text:000219ec\n.text:000219ee\n.text:000219f0\n.text:000219f2\n.text:000219f4\n.text:000219f6\n.text:000219f8\n.text:000219fa\n.text:000219fc\n.text:000219fe\n.text:00021a00\n.text:00021a02\n.text:00021a04\n.text:00021a06\n.text:00021a08\n.text:00021a0a\n.text:00021a0c\n.text:00021a0e\n.text:00021a10\n.text:00021a14\n.text:00021a16\n.text:00021a18\n.text:00021a1a\n.text:00021a1c\n.text:00021a1e\n.text:00021a20\n.text:00021a22\n.text:00021a24\n.text:00021a26\n.text:00021a28\n.text:00021a2a\n.text:00021a2c\n.text:00021a2e\n.text:00021a30\n.text:00021a32\n.text:00021a34\n.text:00021a36\n.text:00021a38\n'
p2344
tp2345
sS'lame_get_brate'
p2346
(S'\n__stdcall lame_get_brate(lame_global_flags * gfp)\n'
p2347
V\u000aint lame_get_brate(lame_global_flags *gfp)\u000a\u000a{\u000a  undefined *puVar1;\u000a  undefined *puVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    unaff_r6 = unaff_r6 + (int)gfp;\u000a    do {\u000a      *unaff_r6 = 0;\u000a      puVar1 = unaff_r6 + 1;\u000aLAB_0001e394:\u000a      do {\u000a        if (unaff_r5[8] == 1) {\u000a          puVar11 = (undefined *)writeLoBytes(puVar1,unaff_r5[6],unaff_r5[7]);\u000a        }\u000a        else {\u000a          iVar3 = unaff_r5[7];\u000a          puVar11 = puVar1;\u000a          if (iVar3 != 0) {\u000a            puVar2 = (undefined *)unaff_r5[6];\u000a            iVar5 = iVar3;\u000a            puVar11 = puVar1;\u000a            do {\u000a              *puVar11 = *puVar2;\u000a              puVar11 = puVar11 + 1;\u000a              puVar2 = puVar2 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a            puVar11 = puVar1 + iVar3;\u000a            unaff_r5 = in_stack_00000028;\u000a          }\u000a        }\u000aLAB_0001e09a:\u000a        do {\u000a          while( true ) {\u000a            unaff_r5 = (int *)*unaff_r5;\u000a            if (unaff_r5 == (int *)0x0) {\u000a              if (__s != (char *)0x0) {\u000a                iVar3 = 4;\u000a                if ((*in_stack_00000004 != 0) &&\u000a                   (uVar8 = DAT_0001e49c,\u000a                   *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a                  do {\u000a                    puVar11[iVar3 + -1] = (char)uVar8;\u000a                    iVar3 = iVar3 + -1;\u000a                    uVar8 = uVar8 >> 8;\u000a                  } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a                  strlen(__s);\u000a                }\u000a              }\u000a              __aeabi_memclr(puVar11,(in_stack_0000002c + in_stack_00000018) - (int)puVar11);\u000a              if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a                return in_stack_0000002c;\u000a              }\u000a                    /* WARNING: Subroutine does not return */\u000a              __stack_chk_fail();\u000a            }\u000a            uVar8 = unaff_r5[1];\u000a            uVar10 = 0xff;\u000a            iVar3 = 4;\u000a            if ((uVar8 != DAT_0001e494) && (uVar4 = in_stack_00000030, uVar8 != DAT_0001e498))\u000a            break;\u000a            iVar3 = unaff_r5[4] * 2 + 0x10;\u000a            if (unaff_r5[5] != 1) {\u000a              iVar3 = unaff_r5[4] + 0xf;\u000a            }\u000a            iVar5 = 0;\u000a            if (unaff_r5[8] == 1) {\u000a              iVar5 = unaff_r5[8];\u000a            }\u000a            uVar10 = (unaff_r5[7] << iVar5) + iVar3;\u000a            iVar3 = 4;\u000a            if (10 < uVar10) {\u000a              do {\u000a                puVar11[iVar3 + -1] = (char)uVar8;\u000a                iVar3 = iVar3 + -1;\u000a                uVar8 = uVar8 >> 8;\u000a              } while (0 < iVar3);\u000a              uVar10 = uVar10 - 10;\u000a              iVar3 = 4;\u000a              do {\u000a                puVar11[iVar3 + 3] = (char)uVar10;\u000a                iVar3 = iVar3 + -1;\u000a                uVar10 = uVar10 >> 8;\u000a              } while (0 < iVar3);\u000a              puVar11[8] = 0;\u000a              puVar11[9] = 0;\u000a              *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a              puVar11[0xb] = *(undefined *)(unaff_r5 + 2);\u000a              puVar11[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a              puVar11[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a              puVar11 = puVar11 + 0xe;\u000a              if (unaff_r5[5] == 1) {\u000a                gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a                *(undefined *)&gfp_00->class_id = 0;\u000a                *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a                iVar3 = lame_get_ReplayGain_input(gfp_00);\u000a                return iVar3;\u000a              }\u000a              iVar3 = unaff_r5[4];\u000a              if (iVar3 != 0) {\u000a                puVar2 = (undefined *)unaff_r5[3];\u000a                iVar5 = iVar3;\u000a                puVar1 = puVar11;\u000a                do {\u000a                  *puVar1 = *puVar2;\u000a                  puVar1 = puVar1 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar11 = puVar11 + iVar3;\u000a              }\u000a              *puVar11 = 0;\u000a              puVar11 = puVar11 + 1;\u000a              if (unaff_r5[8] == 1) {\u000aLAB_0001e338:\u000a                puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[6],unaff_r5[7]);\u000a              }\u000a              else {\u000a                iVar3 = unaff_r5[7];\u000a                if (iVar3 != 0) {\u000a                  puVar2 = (undefined *)unaff_r5[6];\u000a                  iVar5 = iVar3;\u000a                  puVar1 = puVar11;\u000a                  do {\u000a                    *puVar1 = *puVar2;\u000a                    puVar1 = puVar1 + 1;\u000a                    puVar2 = puVar2 + 1;\u000a                    iVar5 = iVar5 + -1;\u000a                  } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a                  puVar11 = puVar11 + iVar3;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          do {\u000a            uVar7 = uVar10 & 0x57000000;\u000a            uVar9 = in_stack_00000030;\u000a            if (uVar7 != (uVar10 & uVar8)) {\u000a              uVar9 = uVar10 & uVar8;\u000a            }\u000a            if (uVar7 == 0) {\u000a              uVar9 = uVar7;\u000a            }\u000a            uVar4 = uVar4 | uVar9;\u000a            iVar3 = iVar3 + -1;\u000a            uVar10 = uVar10 << 8;\u000a          } while (iVar3 != 0);\u000a          if (uVar4 != 0) {\u000a            iVar3 = unaff_r5[7];\u000a            iVar5 = unaff_r5[4];\u000a            if (unaff_r5[8] == 1) {\u000a              iVar6 = iVar5 * 2 + 0xd;\u000a              if (iVar5 == 0) {\u000a                iVar6 = 0xb;\u000a              }\u000a              iVar3 = iVar3 << 1;\u000a            }\u000a            else {\u000a              iVar6 = iVar5 + 0xc;\u000a              if (iVar5 == 0) {\u000a                iVar6 = 0xb;\u000a              }\u000a            }\u000a            iVar5 = 4;\u000a            if (10 < (uint)(iVar6 + iVar3)) {\u000a              do {\u000a                puVar11[iVar5 + -1] = (char)uVar8;\u000a                iVar5 = iVar5 + -1;\u000a                uVar8 = uVar8 >> 8;\u000a              } while (0 < iVar5);\u000a              uVar8 = (iVar6 + iVar3) - 10;\u000a              iVar3 = 4;\u000a              do {\u000a                puVar11[iVar3 + 3] = (char)uVar8;\u000a                iVar3 = iVar3 + -1;\u000a                uVar8 = uVar8 >> 8;\u000a              } while (0 < iVar3);\u000a              puVar11[8] = 0;\u000a              puVar11[9] = 0;\u000a              *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a              puVar11 = puVar11 + 0xb;\u000a              iVar3 = unaff_r5[4];\u000a              if (iVar3 != 0) {\u000a                if (unaff_r5[5] == 1) {\u000a                  puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[3]);\u000a                  *puVar11 = 0;\u000a                  puVar11[1] = 0;\u000a                  puVar11 = puVar11 + 2;\u000a                }\u000a                else {\u000a                  puVar2 = (undefined *)unaff_r5[3];\u000a                  iVar5 = iVar3;\u000a                  puVar1 = puVar11;\u000a                  do {\u000a                    *puVar1 = *puVar2;\u000a                    puVar1 = puVar1 + 1;\u000a                    puVar2 = puVar2 + 1;\u000a                    iVar5 = iVar5 + -1;\u000a                  } while (iVar5 != 0);\u000a                  puVar11[iVar3] = 0;\u000a                  puVar11 = puVar11 + iVar3 + 1;\u000a                }\u000a              }\u000a              if (unaff_r5[8] == 1) goto LAB_0001e338;\u000a              iVar3 = unaff_r5[7];\u000a              if (iVar3 != 0) {\u000a                puVar2 = (undefined *)unaff_r5[6];\u000a                iVar5 = iVar3;\u000a                puVar1 = puVar11;\u000a                do {\u000a                  *puVar1 = *puVar2;\u000a                  puVar1 = puVar1 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                goto LAB_0001e36a;\u000a              }\u000a            }\u000a            goto LAB_0001e09a;\u000a          }\u000a          uVar10 = sizeOfWxxxNode(unaff_r5);\u000a          iVar3 = 4;\u000a        } while (uVar10 < 0xb);\u000a        do {\u000a          puVar11[iVar3 + -1] = (char)uVar8;\u000a          iVar3 = iVar3 + -1;\u000a          uVar8 = uVar8 >> 8;\u000a        } while (0 < iVar3);\u000a        uVar10 = uVar10 - 10;\u000a        iVar3 = 4;\u000a        do {\u000a          puVar11[iVar3 + 3] = (char)uVar10;\u000a          iVar3 = iVar3 + -1;\u000a          uVar10 = uVar10 >> 8;\u000a        } while (0 < iVar3);\u000a        puVar11[8] = 0;\u000a        puVar11[9] = 0;\u000a        puVar1 = puVar11 + 10;\u000a        in_stack_00000028 = unaff_r5;\u000a      } while (unaff_r5[4] == 0);\u000a      *(bool *)(puVar11 + 10) = unaff_r5[5] == 1;\u000a      unaff_r6 = puVar11 + 0xb;\u000a      if (unaff_r5[5] == 1) {\u000a        puVar1 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[3],unaff_r5[4]);\u000a        *puVar1 = 0;\u000a        puVar1[1] = 0;\u000a        puVar1 = puVar1 + 2;\u000a        in_stack_00000028 = unaff_r5;\u000a        goto LAB_0001e394;\u000a      }\u000a      gfp = (lame_global_flags *)unaff_r5[4];\u000a      in_stack_00000028 = unaff_r5;\u000a    } while (gfp == (lame_global_flags *)0x0);\u000a    puVar11 = (undefined *)unaff_r5[3];\u000a    gfp_00 = gfp;\u000a    puVar1 = unaff_r6;\u000a    do {\u000a      *puVar1 = *puVar11;\u000a      puVar1 = puVar1 + 1;\u000a      puVar11 = puVar11 + 1;\u000a      gfp_00 = (lame_global_flags *)((int)&gfp_00->attackthre_s + 3);\u000a      in_stack_00000028 = unaff_r5;\u000a    } while (gfp_00 != (lame_global_flags *)0x0);\u000a  } while( true );\u000a}\u000a\u000a
p2348
S'add r6,r6,r0\n'
p2349
S'36 18\n'
p2350
S'.text:0001e38c\n'
p2351
tp2352
sS'local_ucs2_substr'
p2353
(S'\n__stdcall local_ucs2_substr()\n'
p2354
V\u000avoid local_ucs2_substr(undefined4 uParm1,undefined4 uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  size_t __nmemb;\u000a  \u000a  __nmemb = (2 - uParm3) + uParm4;\u000a  if (uParm4 <= uParm3) {\u000a    __nmemb = 2;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  calloc(__nmemb,2);\u000a}\u000a\u000a
p2355
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\n'
p2356
S'f0 b5\n03 af\n'
p2357
S'.text:0001dcfc\n.text:0001dcfe\n'
p2358
tp2359
sS'lame_set_force_short_blocks'
p2360
(S'\n__stdcall lame_set_force_short_blocks()\n'
p2361
V\u000aundefined4 lame_set_force_short_blocks(int iParm1,uint uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int *piVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if ((uParm2 < 2) && (iVar1 != 0)) {\u000a    piVar3 = (int *)(iParm1 + 0xf0);\u000a    if (uParm2 == 1) {\u000a      *piVar3 = 3;\u000a      return 0;\u000a    }\u000a    uVar2 = 0;\u000a    if (*piVar3 == 3) {\u000a      uVar2 = 0;\u000a      *piVar3 = 0;\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2362
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r5,#0x1\nbhi 0x0002eff6\ncmp r1,#0x0\nbeq 0x0002eff6\nadd r4,#0xf0\ncmp r5,#0x1\nbne 0x0002efe8\nmov r0,#0x3\nstr r0,[r4,#0x0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\nldr r0,[r4,#0x0]\ncmp r0,#0x3\npush { r2 }\npop { r0 }\nbne 0x0002eff6\nmov r0,#0x0\nstr r0,[r4,#0x0]\npop { r4, r5, r7, pc }\n'
p2363
S'b0 b5\n02 af\n02 b4\n20 bc\n01 b4\n10 bc\n09 f0 34 fa\n01 b4\n02 bc\n00 22\nd0 43\n01 2d\n10 d8\n00 29\n0e d0\nf0 34\n01 2d\n04 d1\n03 20\n20 60\n04 b4\n01 bc\nb0 bd\n20 68\n03 28\n04 b4\n01 bc\n01 d1\n00 20\n20 60\nb0 bd\n'
p2364
S'.text:0002efb8\n.text:0002efba\n.text:0002efbc\n.text:0002efbe\n.text:0002efc0\n.text:0002efc2\n.text:0002efc4\n.text:0002efc8\n.text:0002efca\n.text:0002efcc\n.text:0002efce\n.text:0002efd0\n.text:0002efd2\n.text:0002efd4\n.text:0002efd6\n.text:0002efd8\n.text:0002efda\n.text:0002efdc\n.text:0002efde\n.text:0002efe0\n.text:0002efe2\n.text:0002efe4\n.text:0002efe6\n.text:0002efe8\n.text:0002efea\n.text:0002efec\n.text:0002efee\n.text:0002eff0\n.text:0002eff2\n.text:0002eff4\n.text:0002eff6\n'
p2365
tp2366
sS'_Unwind_VRS_Set'
p2367
(S'\n__stdcall _Unwind_VRS_Set(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p2368
V\u000aundefined4\u000a_Unwind_VRS_Set(int param_1,undefined4 param_2,uint param_3,int param_4,undefined4 *param_5)\u000a\u000a{\u000a  bool bVar1;\u000a  \u000a  switch(param_2) {\u000a  case 0:\u000a    bVar1 = param_3 == 0xf;\u000a    if (param_3 < 0x10) {\u000a      bVar1 = param_4 == 0;\u000a    }\u000a    if (bVar1) {\u000a      *(undefined4 *)(param_1 + param_3 * 4 + 4) = *param_5;\u000a      return 0;\u000a    }\u000a    break;\u000a  case 1:\u000a    return 1;\u000a  case 2:\u000a    break;\u000a  case 3:\u000a    return 1;\u000a  case 4:\u000a    return 1;\u000a  }\u000a  return 2;\u000a}\u000a\u000a
p2369
S'cmp r1,#0x4\naddls pc,pc,r1, lsl #0x2\nb 0x00036a38\nb 0x00036a04\nb 0x00036a30\nb 0x00036a38\nb 0x00036a30\nb 0x00036a30\ncmp r2,#0xf\ncmpls r3,#0x0\nmovne r3,#0x1\nmoveq r3,#0x0\nbne 0x00036a38\nldr r1,[sp,#0x0]\nadd r0,r0,r2, lsl #0x2\nldr r1,[r1,#0x0]\nstr r1,[r0,#0x4]\ncpy r0,r3\nbx lr\nmov r0,#0x1\nbx lr\nmov r0,#0x2\nbx lr\n'
p2370
S'04 00 51 e3\n01 f1 8f 90\n11 00 00 ea\n03 00 00 ea\n0d 00 00 ea\n0e 00 00 ea\n0b 00 00 ea\n0a 00 00 ea\n0f 00 52 e3\n00 00 53 93\n01 30 a0 13\n00 30 a0 03\n07 00 00 1a\n00 10 9d e5\n02 01 80 e0\n00 10 91 e5\n04 10 80 e5\n03 00 a0 e1\n1e ff 2f e1\n01 00 a0 e3\n1e ff 2f e1\n02 00 a0 e3\n1e ff 2f e1\n'
p2371
S'.text:000369e4\n.text:000369e8\n.text:000369ec\n.text:000369f0\n.text:000369f4\n.text:000369f8\n.text:000369fc\n.text:00036a00\n.text:00036a04\n.text:00036a08\n.text:00036a0c\n.text:00036a10\n.text:00036a14\n.text:00036a18\n.text:00036a1c\n.text:00036a20\n.text:00036a24\n.text:00036a28\n.text:00036a2c\n.text:00036a30\n.text:00036a34\n.text:00036a38\n.text:00036a3c\n'
p2372
tp2373
sS'count_bit_noESC_from3'
p2374
(S'\n__stdcall count_bit_noESC_from3()\n'
p2375
V\u000aint count_bit_noESC_from3(int *piParm1,int *piParm2,int iParm3,int *piParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  int *piVar9;\u000a  int local_30;\u000a  \u000a  iVar4 = *(int *)(iParm3 * 4 + DAT_00030fb8 + 0x30f24);\u000a  iVar5 = *(int *)(DAT_00030fbc + 0x30f38);\u000a  uVar6 = 0;\u000a  uVar8 = 0;\u000a  uVar7 = 0;\u000a  do {\u000a    iVar2 = *piParm1;\u000a    piVar9 = piParm1 + 1;\u000a    piParm1 = piParm1 + 2;\u000a    iVar2 = *(int *)(iVar5 + iVar4 * 0x10) * iVar2 + *piVar9;\u000a    uVar6 = (uint)*(byte *)(*(int *)(iVar5 + (iVar4 + 2) * 0x10 + 0xc) + iVar2) + uVar6;\u000a    uVar8 = (uint)*(byte *)(*(int *)(iVar5 + (iVar4 + 1) * 0x10 + 0xc) + iVar2) + uVar8;\u000a    uVar7 = (uint)*(byte *)(*(int *)(iVar5 + iVar4 * 0x10 + 0xc) + iVar2) + uVar7;\u000a  } while (piParm1 < piParm2);\u000a  uVar1 = uVar8;\u000a  if (uVar7 <= uVar8) {\u000a    uVar1 = uVar7;\u000a  }\u000a  uVar3 = uVar6;\u000a  if (uVar1 <= uVar6) {\u000a    uVar3 = uVar1;\u000a  }\u000a  *piParm4 = *piParm4 + uVar3;\u000a  local_30 = iVar4 + 1;\u000a  if (uVar7 <= uVar8) {\u000a    local_30 = iVar4;\u000a  }\u000a  iVar4 = iVar4 + 2;\u000a  if (uVar1 <= uVar6) {\u000a    iVar4 = local_30;\u000a  }\u000a  return iVar4;\u000a}\u000a\u000a
p2376
S'push { r4, r5, r6, r7, lr }\nsub sp,#0x20\nstr r3,[sp,#0xc]\nstr r1,[sp,#0x1c]\npush { r0 }\npop { r4 }\nlsl r0,r2,#0x2\nldr r1,[0x00030fb8]\nadd r1,pc\nadd r0,r0,r1\nmov r1,#0x3\nmvn r1,r1\nldr r2,[r0,r1]\nstr r2,[sp,#0x0]\nlsl r0,r2,#0x4\nldr r1,[0x00030fbc]\nadd r1,pc\nldr r3,[r1,#0x0]\nldr r1,[r3,r0]\nstr r1,[sp,#0x18]\nadd r0,r3,r0\nldr r0,[r0,#0xc]\nstr r0,[sp,#0x14]\nadd r0,r2,#0x2\nstr r0,[sp,#0x8]\nlsl r0,r0,#0x4\nadd r0,r3,r0\nldr r0,[r0,#0xc]\nstr r0,[sp,#0x10]\nadd r1,r2,#0x1\nstr r1,[sp,#0x4]\nlsl r5,r1,#0x4\nadd r3,r3,r5\nldr r3,[r3,#0xc]\nmov r5,#0x0\npush { r5 }\npop { r7 }\npush { r5 }\npop { r6 }\nldmia r4!,{ r1, r2 }\nldr r0,[sp,#0x18]\nmul r1,r0\nadd r1,r1,r2\nldr r0,[sp,#0x10]\nldrb r2,[r0,r1]\nadd r5,r2,r5\nldrb r2,[r3,r1]\nadd r7,r2,r7\nldr r0,[sp,#0x14]\nldrb r1,[r0,r1]\nadd r6,r1,r6\nadd r4,#0x0\nldr r1,[sp,#0x1c]\ncmp r4,r1\nbcc 0x00030f62\ncmp r6,r7\npush { r7 }\npop { r0 }\nbhi 0x00030f8e\npush { r6 }\npop { r0 }\ncmp r0,r5\npush { r5 }\npop { r1 }\nbhi 0x00030f9a\npush { r0 }\npop { r1 }\nldr r3,[sp,#0xc]\nldr r2,[r3,#0x0]\nadd r1,r2,r1\nstr r1,[r3,#0x0]\ncmp r6,r7\nbhi 0x00030faa\nldr r1,[sp,#0x0]\nstr r1,[sp,#0x4]\ncmp r0,r5\nldr r0,[sp,#0x8]\nbhi 0x00030fb2\nldr r0,[sp,#0x4]\nadd sp,#0x20\npop { r4, r5, r6, r7, pc }\n'
p2377
S'f0 b5\n88 b0\n03 93\n07 91\n01 b4\n10 bc\n90 00\n25 49\n79 44\n40 18\n03 21\nc9 43\n42 58\n00 92\n10 01\n22 49\n79 44\n0b 68\n19 58\n06 91\n18 18\nc0 68\n05 90\n90 1c\n02 90\n00 01\n18 18\nc0 68\n04 90\n51 1c\n01 91\n0d 01\n5b 19\ndb 68\n00 25\n20 b4\n80 bc\n20 b4\n40 bc\n06 cc\n06 98\n41 43\n89 18\n04 98\n42 5c\n55 19\n5a 5c\nd7 19\n05 98\n41 5c\n8e 19\n00 34\n07 99\n8c 42\nef d3\nbe 42\n80 b4\n01 bc\n01 d8\n40 b4\n01 bc\na8 42\n20 b4\n02 bc\n01 d8\n01 b4\n02 bc\n03 9b\n1a 68\n51 18\n19 60\nbe 42\n01 d8\n00 99\n01 91\na8 42\n02 98\n00 d8\n01 98\n08 b0\nf0 bd\n'
p2378
S'.text:00030f14\n.text:00030f16\n.text:00030f18\n.text:00030f1a\n.text:00030f1c\n.text:00030f1e\n.text:00030f20\n.text:00030f22\n.text:00030f24\n.text:00030f26\n.text:00030f28\n.text:00030f2a\n.text:00030f2c\n.text:00030f2e\n.text:00030f30\n.text:00030f32\n.text:00030f34\n.text:00030f36\n.text:00030f38\n.text:00030f3a\n.text:00030f3c\n.text:00030f3e\n.text:00030f40\n.text:00030f42\n.text:00030f44\n.text:00030f46\n.text:00030f48\n.text:00030f4a\n.text:00030f4c\n.text:00030f4e\n.text:00030f50\n.text:00030f52\n.text:00030f54\n.text:00030f56\n.text:00030f58\n.text:00030f5a\n.text:00030f5c\n.text:00030f5e\n.text:00030f60\n.text:00030f62\n.text:00030f64\n.text:00030f66\n.text:00030f68\n.text:00030f6a\n.text:00030f6c\n.text:00030f6e\n.text:00030f70\n.text:00030f72\n.text:00030f74\n.text:00030f76\n.text:00030f78\n.text:00030f7a\n.text:00030f7c\n.text:00030f7e\n.text:00030f80\n.text:00030f82\n.text:00030f84\n.text:00030f86\n.text:00030f88\n.text:00030f8a\n.text:00030f8c\n.text:00030f8e\n.text:00030f90\n.text:00030f92\n.text:00030f94\n.text:00030f96\n.text:00030f98\n.text:00030f9a\n.text:00030f9c\n.text:00030f9e\n.text:00030fa0\n.text:00030fa2\n.text:00030fa4\n.text:00030fa6\n.text:00030fa8\n.text:00030faa\n.text:00030fac\n.text:00030fae\n.text:00030fb0\n.text:00030fb2\n.text:00030fb4\n'
p2379
tp2380
sS'lame_get_num_channels'
p2381
(S'\n__stdcall lame_get_num_channels(lame_global_flags * gfp)\n'
p2382
V\u000a/* WARNING: Removing unreachable block (ram,0x0001e3d0) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e2) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e6) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e8) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3f8) */\u000a\u000aint lame_get_num_channels(lame_global_flags *gfp)\u000a\u000a{\u000a  char *__s;\u000a  uint uVar1;\u000a  int iVar2;\u000a  lame_global_flags *gfp_00;\u000a  int in_r1;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int unaff_r4;\u000a  undefined4 *puVar9;\u000a  uint unaff_r5;\u000a  uint uVar10;\u000a  undefined4 *puVar11;\u000a  int unaff_r6;\u000a  uint uVar12;\u000a  undefined *puVar13;\u000a  undefined8 uVar14;\u000a  uint in_stack_0000000c;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint in_stack_00000028;\u000a  uint in_stack_0000002c;\u000a  uint uStack00000030;\u000a  \u000a  __s = *(char **)((int)&gfp->class_id + in_r1);\u000a  if (__s != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(__s);\u000a  }\u000a  if (*(char **)(in_stack_0000001c + DAT_0001e1a8) != (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(in_stack_0000001c + DAT_0001e1a8));\u000a  }\u000a  if ((((in_stack_00000028 < 0x1f) && (in_stack_0000000c < 0x1f)) && (unaff_r5 < 0x1f)) &&\u000a     (unaff_r5 < 0x1f)) {\u000a    if ((unaff_r4 == 0) &&\u000a       (uVar1 = 0, unaff_r5 < 0x1d || *(int *)(in_stack_0000001c + DAT_0001e1ac) == 0))\u000a    goto LAB_0001e470;\u000a  }\u000a  if (*(int *)(unaff_r6 + 4) != -1) {\u000a    uVar14 = __floatunsidf();\u000a    __muldf3((int)((ulonglong)uVar14 >> 0x20),(int)uVar14,0,DAT_0001e1b0);\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(*(undefined4 *)(in_stack_0000001c + 0x3c));\u000a  }\u000a  if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a      (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a     (uVar1 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar1 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar1 * 4));\u000a  }\u000a  puVar9 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a  puVar11 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a  while (puVar9 != (undefined4 *)0x0) {\u000a    uVar1 = puVar9[1];\u000a    uVar12 = 0xff;\u000a    if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 == DAT_0001e1e0)) {\u000a      iVar2 = puVar9[4] * 2 + 0x10;\u000a      if (puVar9[5] != 1) {\u000a        iVar2 = puVar9[4] + 0xf;\u000a      }\u000a      iVar3 = puVar9[7];\u000a      if (puVar9[8] == 1) {\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      iVar2 = iVar2 + iVar3;\u000a    }\u000a    else {\u000a      do {\u000a        uVar10 = uVar12 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar10 != (uVar12 & uVar1)) {\u000a          uVar6 = uVar12 & uVar1;\u000a        }\u000a        if (uVar10 == 0) {\u000a          uVar6 = uVar10;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar2 = iVar2 + -1;\u000a        uVar12 = uVar12 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar2 = sizeOfWxxxNode(puVar9);\u000a      }\u000a      else {\u000a        iVar3 = puVar9[7];\u000a        iVar4 = puVar9[4];\u000a        if (puVar9[8] == 1) {\u000a          iVar2 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar2 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a        }\u000a        iVar2 = iVar2 + iVar3;\u000a      }\u000a    }\u000a    in_stack_0000002c = iVar2 + in_stack_0000002c;\u000a    puVar9 = (undefined4 *)*puVar9;\u000a  }\u000a  if ((*in_stack_00000010 & 0x20) != 0) {\u000a    in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a  }\u000a  uVar1 = in_stack_0000002c;\u000a  if ((in_stack_0000002c <= in_stack_00000014) && (uVar1 = 0, in_stack_00000018 != (undefined *)0x0)\u000a     ) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    uStack00000030 = 0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar1 = in_stack_0000002c - 10;\u000a    in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a    puVar13 = in_stack_00000018 + 10;\u000a    puVar11 = (undefined4 *)*puVar11;\u000a    while (puVar11 != (undefined4 *)0x0) {\u000a      uVar1 = puVar11[1];\u000a      uVar12 = 0xff;\u000a      iVar2 = 4;\u000a      if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a        iVar2 = puVar11[4] * 2 + 0x10;\u000a        if (puVar11[5] != 1) {\u000a          iVar2 = puVar11[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (puVar11[8] == 1) {\u000a          iVar3 = puVar11[8];\u000a        }\u000a        uVar12 = (puVar11[7] << iVar3) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar12) {\u000a          do {\u000a            puVar13[iVar2 + -1] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar12 = uVar12 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar13[iVar2 + 3] = (char)uVar12;\u000a            iVar2 = iVar2 + -1;\u000a            uVar12 = uVar12 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar13[8] = 0;\u000a          puVar13[9] = 0;\u000a          *(bool *)(puVar13 + 10) = puVar11[8] == 1;\u000a          puVar13[0xb] = *(undefined *)(puVar11 + 2);\u000a          puVar13[0xc] = *(undefined *)((int)puVar11 + 9);\u000a          puVar13[0xd] = *(undefined *)((int)puVar11 + 10);\u000a          puVar13 = puVar13 + 0xe;\u000a          if (puVar11[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar13,puVar11[3],puVar11[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = puVar11[4];\u000a          if (iVar2 != 0) {\u000a            puVar5 = (undefined *)puVar11[3];\u000a            iVar3 = iVar2;\u000a            puVar8 = puVar13;\u000a            do {\u000a              *puVar8 = *puVar5;\u000a              puVar8 = puVar8 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar13 = puVar13 + iVar2;\u000a          }\u000a          *puVar13 = 0;\u000a          puVar13 = puVar13 + 1;\u000a          if (puVar11[8] == 1) {\u000aLAB_0001e338:\u000a            puVar13 = (undefined *)writeUcs2s(puVar13,puVar11[6],puVar11[7]);\u000a          }\u000a          else {\u000a            iVar2 = puVar11[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar11[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              puVar13 = puVar13 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar10 = uVar12 & 0x57000000;\u000a          uVar6 = uStack00000030;\u000a          if (uVar10 != (uVar12 & uVar1)) {\u000a            uVar6 = uVar12 & uVar1;\u000a          }\u000a          if (uVar10 == 0) {\u000a            uVar6 = uVar10;\u000a          }\u000a          uVar7 = uVar7 | uVar6;\u000a          iVar2 = iVar2 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar2 != 0);\u000a        if (uVar7 == 0) {\u000a          uVar12 = sizeOfWxxxNode(puVar11);\u000a          iVar2 = 4;\u000a          if (10 < uVar12) {\u000a            do {\u000a              puVar13[iVar2 + -1] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar12 = uVar12 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar13[iVar2 + 3] = (char)uVar12;\u000a              iVar2 = iVar2 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            puVar8 = puVar13 + 10;\u000a            if (puVar11[4] != 0) {\u000a              *(bool *)(puVar13 + 10) = puVar11[5] == 1;\u000a              puVar13 = puVar13 + 0xb;\u000a              if (puVar11[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar13,puVar11[3],puVar11[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a              }\u000a              else {\u000a                iVar2 = puVar11[4];\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar11[3];\u000a                  iVar3 = iVar2;\u000a                  puVar8 = puVar13;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar13 = puVar13 + iVar2;\u000a                }\u000a                *puVar13 = 0;\u000a                puVar8 = puVar13 + 1;\u000a              }\u000a            }\u000a            if (puVar11[8] == 1) {\u000a              puVar13 = (undefined *)writeLoBytes(puVar8,puVar11[6],puVar11[7]);\u000a            }\u000a            else {\u000a              iVar2 = puVar11[7];\u000a              puVar13 = puVar8;\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar11[6];\u000a                iVar3 = iVar2;\u000a                puVar13 = puVar8;\u000a                do {\u000a                  *puVar13 = *puVar5;\u000a                  puVar13 = puVar13 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar13 = puVar8 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar2 = puVar11[7];\u000a          iVar3 = puVar11[4];\u000a          if (puVar11[8] == 1) {\u000a            iVar4 = iVar3 * 2 + 0xd;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a            iVar2 = iVar2 << 1;\u000a          }\u000a          else {\u000a            iVar4 = iVar3 + 0xc;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a          }\u000a          iVar3 = 4;\u000a          if (10 < (uint)(iVar4 + iVar2)) {\u000a            do {\u000a              puVar13[iVar3 + -1] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar1 = (iVar4 + iVar2) - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar13[iVar2 + 3] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            *(bool *)(puVar13 + 10) = puVar11[8] == 1;\u000a            puVar13 = puVar13 + 0xb;\u000a            iVar2 = puVar11[4];\u000a            if (iVar2 != 0) {\u000a              if (puVar11[5] == 1) {\u000a                puVar13 = (undefined *)writeUcs2s(puVar13,puVar11[3]);\u000a                *puVar13 = 0;\u000a                puVar13[1] = 0;\u000a                puVar13 = puVar13 + 2;\u000a              }\u000a              else {\u000a                puVar5 = (undefined *)puVar11[3];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar13;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar13[iVar2] = 0;\u000a                puVar13 = puVar13 + iVar2 + 1;\u000a              }\u000a            }\u000a            if (puVar11[8] == 1) goto LAB_0001e338;\u000a            iVar2 = puVar11[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar11[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar11 = (undefined4 *)*puVar11;\u000a    }\u000a    __aeabi_memclr(puVar13,in_stack_00000018 + (in_stack_0000002c - (int)puVar13));\u000a    uVar1 = in_stack_0000002c;\u000a  }\u000aLAB_0001e470:\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) != *in_stack_00000020) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p2383
S'ldr r0,[r1,r0]\ncmp r0,#0x0\npush { r5 }\npop { r2 }\nbeq 0x0001de2e\nbl 0x000379e0\nldr r0,[0x0001e1a8]\nldr r1,[sp,#0x1c]\nldr r0,[r1,r0]\ncmp r0,#0x0\n'
p2384
S'08 58\n00 28\n20 b4\n04 bc\n03 d0\n19 f0 db fd\nde 48\n07 99\n08 58\n00 28\n'
p2385
S'.text:0001de1c\n.text:0001de1e\n.text:0001de20\n.text:0001de22\n.text:0001de24\n.text:0001de26\n.text:0001de2e\n.text:0001de30\n.text:0001de32\n.text:0001de34\n'
p2386
tp2387
sS'save_gain_values'
p2388
(S'\n__stdcall save_gain_values()\n'
p2389
V\u000avoid save_gain_values(int iParm1)\u000a\u000a{\u000a  if (*(int *)(iParm1 + 0x80) != 0) {\u000a    GetTitleGain(*(undefined4 *)(iParm1 + DAT_000213c0));\u000a                    /* WARNING: Subroutine does not return */\u000a    __extendsfdf2();\u000a  }\u000a  if (*(int *)(iParm1 + 0x84) != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __extendsfdf2(*(undefined4 *)(iParm1 + DAT_000213e4));\u000a  }\u000a  return;\u000a}\u000a\u000a
p2390
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1c\npush { r0 }\npop { r4 }\nldr r0,[0x000213bc]\nadd r0,r4,r0\nstr r0,[sp,#0x18]\nmov r0,#0x80\nldr r0,[r4,r0]\ncmp r0,#0x0\nbeq 0x0002134c\nldr r0,[0x000213c0]\nldr r0,[r4,r0]\nstr r4,[sp,#0x14]\nbl 0x00038040\npush { r0 }\npop { r5 }\nbl 0x00037ac0\n'
p2391
S'f0 b5\n03 af\n87 b0\n01 b4\n10 bc\n47 48\n20 18\n06 90\n80 20\n20 58\n00 28\n4f d0\n44 48\n20 58\n05 94\n16 f0 c5 fe\n01 b4\n20 bc\n16 f0 01 fc\n'
p2392
S'.text:00021294\n.text:00021296\n.text:00021298\n.text:0002129a\n.text:0002129c\n.text:0002129e\n.text:000212a0\n.text:000212a2\n.text:000212a4\n.text:000212a6\n.text:000212a8\n.text:000212aa\n.text:000212ac\n.text:000212ae\n.text:000212b0\n.text:000212b2\n.text:000212b6\n.text:000212b8\n.text:000212ba\n'
p2393
tp2394
sS'__adddf3'
p2395
(S'\n__stdcall __adddf3()\n'
p2396
V\u000avoid __adddf3(void)\u000a\u000a{\u000a  (*(__truncdfsf2 + DAT_00037aec))();\u000a  return;\u000a}\u000a\u000a
p2397
S'ldr r12,[0x37aec]\nadd pc,r12,pc\n'
p2398
S'00 c0 9f e5\n0f f0 8c e0\n'
p2399
S'.text:00037ae4\n.text:00037ae8\n'
p2400
tp2401
sS'__gnu_Unwind_Resume'
p2402
(S'\n__stdcall __gnu_Unwind_Resume()\n'
p2403
V\u000avoid __gnu_Unwind_Resume(int iParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = *(int *)(iParm1 + 0xc);\u000a  *(undefined4 *)(iParm2 + 0x40) = *(undefined4 *)(iParm1 + 0x14);\u000a  if (iVar1 == 0) {\u000a    iVar1 = (**(code **)(iParm1 + 0x10))(2,iParm1,iParm2);\u000a    if (iVar1 != 7) {\u000a      if (iVar1 != 8) goto LAB_00036920;\u000a      unwind_phase2(iParm1,iParm2);\u000a    }\u000a    _Unwind_DebugHook(0,*(undefined4 *)(iParm2 + 0x40));\u000a    restore_core_regs(iParm2 + 4);\u000a  }\u000a  else {\u000a    unwind_phase2_forced(iParm1,iParm2,1);\u000a  }\u000aLAB_00036920:\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p2404
S'stmdb sp!,{ r4 r5 r6 lr }\nldr r6,[r0,#0xc]\nldr r3,[r0,#0x14]\ncmp r6,#0x0\ncpy r5,r0\ncpy r4,r1\nstr r3,[r1,#0x40]\nbeq 0x000368dc\nmov r2,#0x1\nbl 0x000366c0\nb 0x00036920\nldr r3,[r0,#0x10]\ncpy r1,r5\nmov r0,#0x2\ncpy r2,r4\nblx r3\ncmp r0,#0x7\nbeq 0x0003690c\ncmp r0,#0x8\nbne 0x00036920\ncpy r0,r5\ncpy r1,r4\nbl 0x0003665c\ncpy r0,r6\nldr r1,[r4,#0x40]\nbl 0x00036658\nadd r0,r4,#0x4\nbl 0x00016c00\nbl 0x00016bf4\n'
p2405
S'70 40 2d e9\n0c 60 90 e5\n14 30 90 e5\n00 00 56 e3\n00 50 a0 e1\n01 40 a0 e1\n40 30 81 e5\n02 00 00 0a\n01 20 a0 e3\n79 ff ff eb\n10 00 00 ea\n10 30 90 e5\n05 10 a0 e1\n02 00 a0 e3\n04 20 a0 e1\n33 ff 2f e1\n07 00 50 e3\n04 00 00 0a\n08 00 50 e3\n07 00 00 1a\n05 00 a0 e1\n04 10 a0 e1\n53 ff ff eb\n06 00 a0 e1\n40 10 94 e5\n4f ff ff eb\n04 00 84 e2\nb7 80 ff eb\nb3 80 ff eb\n'
p2406
S'.text:000368b0\n.text:000368b4\n.text:000368b8\n.text:000368bc\n.text:000368c0\n.text:000368c4\n.text:000368c8\n.text:000368cc\n.text:000368d0\n.text:000368d4\n.text:000368d8\n.text:000368dc\n.text:000368e0\n.text:000368e4\n.text:000368e8\n.text:000368ec\n.text:000368f0\n.text:000368f4\n.text:000368f8\n.text:000368fc\n.text:00036900\n.text:00036904\n.text:00036908\n.text:0003690c\n.text:00036910\n.text:00036914\n.text:00036918\n.text:0003691c\n.text:00036920\n'
p2407
tp2408
sS'count_bit_noESC_from2'
p2409
(S'\n__stdcall count_bit_noESC_from2()\n'
p2410
V\u000aint count_bit_noESC_from2(int *piParm1,int *piParm2,int iParm3,int *piParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int *piVar5;\u000a  uint uVar6;\u000a  \u000a  if (iParm3 + -1 == 1) {\u000a    piVar5 = (int *)(DAT_00030f00 + 0x30eb0);\u000a  }\u000a  else {\u000a    piVar5 = (int *)(DAT_00030f04 + 0x30eaa);\u000a  }\u000a  iVar4 = *(int *)(DAT_00030f08 + 0x30eb8 + (iParm3 + -1) * 4);\u000a  uVar6 = 0;\u000a  do {\u000a    uVar6 = *(int *)(*piVar5 +\u000a                    (*(int *)(*(int *)(DAT_00030f0c + 0x30ec0) + iVar4 * 0x10) * *piParm1 +\u000a                    piParm1[1]) * 4) + uVar6;\u000a    piParm1 = piParm1 + 2;\u000a  } while (piParm1 < piParm2);\u000a  uVar3 = DAT_00030f10 & uVar6;\u000a  uVar6 = uVar6 >> 0x10;\u000a  uVar1 = uVar3;\u000a  if (uVar6 <= uVar3) {\u000a    uVar1 = uVar6;\u000a  }\u000a  *piParm4 = *piParm4 + uVar1;\u000a  iVar2 = iVar4 + 1;\u000a  if (uVar6 <= uVar3) {\u000a    iVar2 = iVar4;\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p2411
S'push { r4, r5, r6, r7, lr }\nsub sp,#0x4\nstr r3,[sp,#0x0]\nsub r2,#0x1\ncmp r2,#0x1\nbeq 0x00030eaa\nldr r4,[0x00030f04]\nadd r4,pc\nb 0x00030eae\nldr r4,[0x00030f00]\nadd r4,pc\nldr r4,[r4,#0x0]\nlsl r2,r2,#0x2\nldr r5,[0x00030f08]\nadd r5,pc\nldr r3,[r5,r2]\nlsl r5,r3,#0x4\nldr r6,[0x00030f0c]\nadd r6,pc\nldr r6,[r6,#0x0]\nldr r6,[r6,r5]\nmov r5,#0x0\nldr r7,[r0,#0x0]\nldr r2,[r0,#0x4]\nmul r7,r6\nadd r2,r7,r2\nlsl r2,r2,#0x2\nldr r2,[r4,r2]\nadd r5,r2,r5\nadd r0,#0x8\ncmp r0,r1\nbcc 0x00030ec4\nldr r1,[0x00030f10]\nand r1,r5\nlsr r4,r5,#0x10\ncmp r4,r1\npush { r1 }\npop { r0 }\nbhi 0x00030eea\npush { r4 }\npop { r0 }\nldr r5,[sp,#0x0]\nldr r2,[r5,#0x0]\nadd r0,r2,r0\nstr r0,[r5,#0x0]\nadd r0,r3,#0x1\ncmp r4,r1\nbhi 0x00030efc\npush { r3 }\npop { r0 }\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p2412
S'f0 b5\n81 b0\n00 93\n01 3a\n01 2a\n02 d0\n17 4c\n7c 44\n01 e0\n15 4c\n7c 44\n24 68\n92 00\n15 4d\n7d 44\nab 58\n1d 01\n14 4e\n7e 44\n36 68\n76 59\n00 25\n07 68\n42 68\n77 43\nba 18\n92 00\na2 58\n55 19\n08 30\n88 42\nf5 d3\n0d 49\n29 40\n2c 0c\n8c 42\n02 b4\n01 bc\n01 d8\n10 b4\n01 bc\n00 9d\n2a 68\n10 18\n28 60\n58 1c\n8c 42\n01 d8\n08 b4\n01 bc\n01 b0\nf0 bd\n'
p2413
S'.text:00030e98\n.text:00030e9a\n.text:00030e9c\n.text:00030e9e\n.text:00030ea0\n.text:00030ea2\n.text:00030ea4\n.text:00030ea6\n.text:00030ea8\n.text:00030eaa\n.text:00030eac\n.text:00030eae\n.text:00030eb0\n.text:00030eb2\n.text:00030eb4\n.text:00030eb6\n.text:00030eb8\n.text:00030eba\n.text:00030ebc\n.text:00030ebe\n.text:00030ec0\n.text:00030ec2\n.text:00030ec4\n.text:00030ec6\n.text:00030ec8\n.text:00030eca\n.text:00030ecc\n.text:00030ece\n.text:00030ed0\n.text:00030ed2\n.text:00030ed4\n.text:00030ed6\n.text:00030ed8\n.text:00030eda\n.text:00030edc\n.text:00030ede\n.text:00030ee0\n.text:00030ee2\n.text:00030ee4\n.text:00030ee6\n.text:00030ee8\n.text:00030eea\n.text:00030eec\n.text:00030eee\n.text:00030ef0\n.text:00030ef2\n.text:00030ef4\n.text:00030ef6\n.text:00030ef8\n.text:00030efa\n.text:00030efc\n.text:00030efe\n'
p2414
tp2415
sS'FUN_00022132'
p2416
(S'\n__stdcall FUN_00022132(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11)\n'
p2417
V\u000avoid FUN_00022132(undefined4 param_1,int param_2,int param_3)\u000a\u000a{\u000a  int unaff_r4;\u000a  int iVar1;\u000a  undefined4 *unaff_r6;\u000a  int iStack0000002c;\u000a  undefined4 in_stack_00000030;\u000a  undefined4 uStack00000038;\u000a  int iStack0000003c;\u000a  int in_stack_00000040;\u000a  int param_11;\u000a  int iStack000000e4;\u000a  undefined4 uStack000000e8;\u000a  int iStack000000ec;\u000a  undefined4 uStack00000150;\u000a  int iStack0000015c;\u000a  \u000a  uStack000000e8 = 9;\u000a  uStack00000038 = 0x900;\u000a  iStack000000ec = (1 - param_2) * 0x900;\u000a  iStack000000e4 = in_stack_00000040 * 0x1200;\u000a  iStack0000002c = unaff_r4 + iStack000000e4;\u000a  iVar1 = iStack0000002c + iStack000000ec + DAT_00022278;\u000a  uStack00000150 = in_stack_00000030;\u000a  iStack0000003c = param_3;\u000a  param_11 = param_2;\u000a  iStack0000015c = param_3;\u000a  window_subband(param_3,iVar1);\u000a  window_subband(iStack0000015c + 0x80,iVar1 + 0x80);\u000a                    /* WARNING: Subroutine does not return */\u000a  __subsf3(0x80000000,*unaff_r6);\u000a}\u000a\u000a
p2418
S'str r1,[sp,#0x44]\n'
p2419
S'11 91\n'
p2420
S'.text:00022132\n'
p2421
tp2422
sS'short_block_constrain'
p2423
(S'\n__stdcall short_block_constrain()\n'
p2424
V\u000avoid short_block_constrain(int iParm1,int *piParm2,undefined4 uParm3,int iParm4)\u000a\u000a{\u000a  int iVar1;\u000a  byte *pbVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  int *piVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  int iVar8;\u000a  undefined4 uVar9;\u000a  uint uVar10;\u000a  int iVar11;\u000a  int iVar12;\u000a  int iVar13;\u000a  uint uVar14;\u000a  uint uVar15;\u000a  int iVar16;\u000a  int local_bc;\u000a  int local_b8;\u000a  int local_b4 [39];\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_0003360c + 0x3334e);\u000a  iVar4 = *(int *)(iParm1 + 0x10);\u000a  iVar1 = *(int *)(iParm1 + 0x14);\u000a  uVar14 = *(uint *)(iVar4 + 0x1300);\u000a  iVar12 = 0;\u000a  if ((int)uVar14 < 1) {\u000a    iVar8 = 0;\u000a    iVar16 = 0;\u000a  }\u000a  else {\u000a    pbVar2 = (byte *)(DAT_00033610 + 0x33370);\u000a    local_bc = 0;\u000a    iVar12 = 0;\u000a    local_b8 = 0;\u000a    piVar5 = piParm2;\u000a    uVar15 = uVar14;\u000a    do {\u000a      iVar7 = iParm4 - *piVar5;\u000a      iVar8 = iVar7;\u000a      if (iVar7 <= iVar12) {\u000a        iVar8 = iVar12;\u000a      }\u000a      iVar12 = iVar8;\u000a      iVar16 = iVar7 + -0x38 + (uint)*pbVar2 * -4;\u000a      if (iVar16 <= local_bc) {\u000a        iVar16 = local_bc;\u000a      }\u000a      iVar8 = iVar7 + -0x38 + (uint)*pbVar2 * -2;\u000a      if (iVar8 <= local_b8) {\u000a        iVar8 = local_b8;\u000a      }\u000a      uVar15 = uVar15 - 1;\u000a      pbVar2 = pbVar2 + 1;\u000a      piVar5 = piVar5 + 1;\u000a      local_bc = iVar16;\u000a      local_b8 = iVar8;\u000a    } while (uVar15 != 0);\u000a  }\u000a  iVar7 = iVar8;\u000a  if (iVar16 <= iVar8) {\u000a    iVar7 = iVar16;\u000a  }\u000a  if (*(int *)(*(int *)(iParm1 + 0xc) + 0x1c) != 2) {\u000a    iVar7 = iVar8;\u000a  }\u000a  iVar11 = iVar7;\u000a  if (iVar12 <= iVar7) {\u000a    iVar11 = iVar12;\u000a  }\u000a  if (iVar8 == iVar7) {\u000a    uVar9 = 0;\u000aLAB_0003341e:\u000a    *(undefined4 *)(iVar4 + DAT_00033614) = uVar9;\u000a  }\u000a  else {\u000a    if (iVar16 == iVar7) {\u000a      uVar9 = 1;\u000a      goto LAB_0003341e;\u000a    }\u000a  }\u000a  iVar12 = DAT_00033618;\u000a  if (iVar1 <= iParm4 - iVar11) {\u000a    iVar1 = iParm4 - iVar11;\u000a  }\u000a  *(int *)(iVar4 + DAT_00033618) = iVar1;\u000a  piVar5 = (int *)(iVar4 + iVar12);\u000a  if (iVar1 < 0) {\u000a    iVar12 = 0;\u000a  }\u000a  else {\u000a    if (iVar1 < 0x100) goto LAB_00033442;\u000a    iVar12 = 0xff;\u000a  }\u000a  *piVar5 = iVar12;\u000aLAB_00033442:\u000a  iVar12 = 0;\u000a  do {\u000a    local_b4[iVar12] = piParm2[iVar12] - iVar1;\u000a    iVar12 = iVar12 + 1;\u000a  } while (iVar12 != 0x27);\u000a  if (0x11 < uVar14) {\u000a    uVar14 = 0x12;\u000a  }\u000a  iVar1 = 1;\u000a  if (*(int *)(iVar4 + DAT_00033614) != 0) {\u000a    iVar1 = 2;\u000a  }\u000a  uVar15 = 0;\u000a  iVar12 = 7;\u000a  do {\u000a    iVar8 = 1000;\u000a    iVar16 = 0;\u000a    uVar10 = uVar15;\u000a    while (uVar10 < uVar14) {\u000a      iVar6 = local_b4[uVar10];\u000a      iVar7 = -iVar6;\u000a      iVar11 = iVar7;\u000a      if (iVar8 == iVar7 || iVar8 + iVar6 < 0 != SBORROW4(iVar8,iVar7)) {\u000a        iVar11 = iVar8;\u000a      }\u000a      if (iVar16 + iVar6 < 0 == SBORROW4(iVar16,iVar7)) {\u000a        iVar7 = iVar16;\u000a      }\u000a      uVar10 = uVar10 + 3;\u000a      iVar8 = iVar11;\u000a      iVar16 = iVar7;\u000a    }\u000a    iVar7 = 0;\u000a    while (uVar10 < 0x27) {\u000a      iVar13 = local_b4[uVar10];\u000a      iVar11 = -iVar13;\u000a      iVar6 = iVar11;\u000a      if (iVar8 == iVar11 || iVar8 + iVar13 < 0 != SBORROW4(iVar8,iVar11)) {\u000a        iVar6 = iVar8;\u000a      }\u000a      if (iVar7 + iVar13 < 0 == SBORROW4(iVar7,iVar11)) {\u000a        iVar11 = iVar7;\u000a      }\u000a      uVar10 = uVar10 + 3;\u000a      iVar7 = iVar11;\u000a      iVar8 = iVar6;\u000a    }\u000a    iVar11 = iVar8 >> 3;\u000a    if (iVar8 < 1) {\u000a      iVar11 = 0;\u000a    }\u000a    iVar16 = iVar16 - (0xf << iVar1);\u000a    iVar7 = iVar7 - (7 << iVar1);\u000a    if (iVar16 <= iVar7) {\u000a      iVar16 = iVar7;\u000a    }\u000a    piVar3 = (int *)(iVar4 + uVar15 * 4 + DAT_0003361c);\u000a    if ((0 < iVar16) && (iVar8 = iVar16 + 7 >> 3, iVar11 <= iVar8)) {\u000a      iVar11 = iVar8;\u000a    }\u000a    *piVar3 = iVar11;\u000a    if (0 < iVar11) {\u000a      iVar8 = *(int *)(iParm1 + uVar15 * 4 + 0x18);\u000a      if (*piVar5 + iVar11 * -8 < iVar8) {\u000a        iVar11 = *piVar5 - iVar8 >> 3;\u000a        *piVar3 = iVar11;\u000a      }\u000a      if (7 < iVar11) {\u000a        iVar11 = 7;\u000a        *piVar3 = 7;\u000a      }\u000a    }\u000a    if (iVar12 <= iVar11) {\u000a      iVar11 = iVar12;\u000a    }\u000a    uVar15 = uVar15 + 1;\u000a    iVar12 = iVar11;\u000a  } while (uVar15 != 3);\u000a  iVar1 = *(int *)(iVar4 + DAT_00033620);\u000a  iVar12 = *(int *)(iVar4 + DAT_00033624);\u000a  iVar8 = *(int *)(iVar4 + DAT_0003361c);\u000a  uVar14 = 0;\u000a  do {\u000a    local_b4[uVar14] = local_b4[uVar14] + iVar8 * 8;\u000a    local_b4[uVar14 + 1] = local_b4[uVar14 + 1] + iVar12 * 8;\u000a    local_b4[uVar14 + 2] = local_b4[uVar14 + 2] + iVar1 * 8;\u000a    uVar14 = uVar14 + 3;\u000a  } while (uVar14 < 0x27);\u000a  if (0 < iVar11) {\u000a    *(int *)(iVar4 + DAT_0003361c) = iVar8 - iVar11;\u000a    iVar1 = iVar4 + DAT_00033624;\u000a    iVar12 = 0;\u000a    do {\u000a      piVar3 = (int *)(iVar1 - iVar12);\u000a      *piVar3 = *piVar3 - iVar11;\u000a      iVar12 = iVar12 + -4;\u000a    } while (iVar12 != -8);\u000a    *piVar5 = *piVar5 + iVar11 * -8;\u000a  }\u000a  set_scalefacs(iVar4,uParm3,local_b4,DAT_00033628 + 0x335ea);\u000a  if (**(int **)(DAT_0003362c + 0x335fa) == local_18) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p2425
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xcc\nstr r3,[sp,#0x18]\nstr r2,[sp,#0x8]\npush { r1 }\npop { r3 }\nstr r0,[sp,#0xc]\nldr r1,[0x0003360c]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nstr r1,[sp,#0xc8]\nmov r1,#0x13\nlsl r2,r1,#0x8\nldr r1,[r0,#0xc]\nstr r1,[sp,#0x0]\nldr r1,[r0,#0x10]\nstr r1,[sp,#0x1c]\nldr r0,[r0,#0x14]\nldr r5,[r1,r2]\nmov r4,#0x0\ncmp r5,#0x1\nblt 0x000333c8\nstr r0,[sp,#0x10]\nldr r0,[0x00033610]\nadd r0,pc\nstr r5,[sp,#0x14]\npush { r3 }\npop { r1 }\nstr r3,[sp,#0x4]\nstr r4,[sp,#0x24]\npush { r4 }\npop { r3 }\nstr r4,[sp,#0x28]\nldr r2,[r1,#0x0]\nldr r4,[sp,#0x18]\nsub r2,r4,r2\ncmp r3,r2\npush { r2 }\npop { r4 }\nblt 0x00033390\npush { r3 }\npop { r4 }\nstr r4,[sp,#0x20]\nsub r2,#0x38\nldrb r3,[r0,#0x0]\nlsl r4,r3,#0x2\nsub r6,r2,r4\nldr r4,[sp,#0x24]\ncmp r4,r6\nblt 0x000333a4\npush { r4 }\npop { r6 }\nlsl r3,r3,#0x1\nsub r2,r2,r3\nldr r3,[sp,#0x28]\ncmp r3,r2\nldr r4,[sp,#0x20]\nblt 0x000333b4\npush { r3 }\npop { r2 }\nsub r5,#0x1\nadd r0,#0x1\nadd r1,#0x4\ncmp r5,#0x0\nstr r2,[sp,#0x28]\nstr r6,[sp,#0x24]\npush { r4 }\npop { r3 }\nbne 0x0003337e\nb 0x000333d6\nstr r0,[sp,#0x10]\nstr r3,[sp,#0x4]\nstr r5,[sp,#0x14]\npush { r4 }\npop { r2 }\npush { r4 }\npop { r6 }\npush { r4 }\npop { r3 }\ncmp r2,r6\npush { r2 }\npop { r0 }\nldr r5,[sp,#0x10]\nblt 0x000333e8\npush { r6 }\npop { r0 }\nstr r6,[sp,#0x28]\nldr r1,[sp,#0x0]\nldr r1,[r1,#0x1c]\ncmp r1,#0x2\nldr r4,[sp,#0x14]\nldr r6,[sp,#0x4]\nbeq 0x000333fa\npush { r2 }\npop { r0 }\ncmp r3,r0\npush { r0 }\npop { r1 }\nbgt 0x00033406\npush { r3 }\npop { r1 }\nldr r3,[sp,#0x18]\nsub r1,r3,r1\ncmp r2,r0\nbne 0x00033414\nldr r0,[0x00033614]\nmov r2,#0x0\nb 0x0003341e\nldr r2,[sp,#0x28]\ncmp r2,r0\nbne 0x00033422\nldr r0,[0x00033614]\nmov r2,#0x1\nldr r3,[sp,#0x1c]\nstr r2,[r3,r0]\ncmp r1,r5\nblt 0x0003342a\npush { r1 }\npop { r5 }\nldr r0,[0x00033618]\nldr r1,[sp,#0x1c]\nstr r5,[r1,r0]\nadd r1,r1,r0\ncmp r5,#0x0\nblt 0x0003343e\ncmp r5,#0xff\nble 0x00033442\nmov r0,#0xff\nb 0x00033440\nmov r0,#0x0\nstr r0,[r1,#0x0]\nstr r1,[sp,#0x10]\nmov r0,#0x0\nlsl r1,r0,#0x2\nldr r2,[r6,r1]\nsub r2,r2,r5\nadd r3,sp,#0x2c\nstr r2,[r3,r1]\nadd r0,#0x1\ncmp r0,#0x27\nbne 0x00033446\nmov r0,#0x12\ncmp r4,#0x12\nbcc 0x00033460\npush { r0 }\npop { r4 }\nldr r0,[0x00033614]\nldr r1,[sp,#0x1c]\nldr r2,[r1,r0]\nmov r0,#0x1\nmov r1,#0x2\ncmp r2,#0x0\nbeq 0x00033472\npush { r1 }\npop { r0 }\nmov r3,#0x7\npush { r3 }\npop { r1 }\nlsl r1,r0\nstr r1,[sp,#0x18]\nmov r1,#0xf\nlsl r1,r0\nstr r1,[sp,#0x14]\nmov r0,#0x0\nstr r0,[sp,#0x24]\npush { r0 }\npop { r5 }\nstr r5,[sp,#0x28]\nstr r3,[sp,#0x20]\nmov r0,#0x7d\nlsl r6,r0,#0x3\ncmp r5,r4\npush { r4 }\npop { r3 }\npush { r5 }\npop { r2 }\nldr r0,[sp,#0x24]\nbcs 0x000334ca\nlsl r1,r2,#0x2\nadd r4,sp,#0x2c\nldr r1,[r4,r1]\nrsb r5,r1\ncmp r6,r5\npush { r5 }\npop { r1 }\nbgt 0x000334b4\npush { r6 }\npop { r1 }\ncmp r0,r5\nblt 0x000334bc\npush { r0 }\npop { r5 }\nadd r2,#0x3\ncmp r2,r3\npush { r5 }\npop { r0 }\npush { r1 }\npop { r6 }\nbcc 0x000334a0\ncmp r2,#0x27\nldr r1,[sp,#0x24]\nbcs 0x000334fa\nlsl r4,r2,#0x2\nadd r5,sp,#0x2c\nldr r4,[r5,r4]\nrsb r5,r4\ncmp r6,r5\npush { r5 }\npop { r4 }\nbgt 0x000334e4\npush { r6 }\npop { r4 }\ncmp r1,r5\nblt 0x000334ec\npush { r1 }\npop { r5 }\nadd r2,#0x3\ncmp r2,#0x27\npush { r5 }\npop { r1 }\npush { r4 }\npop { r6 }\nbcc 0x000334d0\nasr r2,r6,#0x3\ncmp r6,#0x0\nbgt 0x00033502\nldr r2,[sp,#0x24]\nldr r4,[sp,#0x14]\nsub r4,r0,r4\nldr r0,[sp,#0x18]\nsub r0,r1,r0\ncmp r4,r0\nldr r1,[sp,#0x28]\nbgt 0x00033514\npush { r0 }\npop { r4 }\nlsl r5,r1,#0x2\nldr r0,[sp,#0x1c]\nadd r0,r0,r5\nldr r1,[0x0003361c]\nadd r0,r0,r1\ncmp r4,#0x1\nblt 0x0003352e\nadd r1,r4,#0x7\nasr r1,r1,#0x3\ncmp r2,r1\nbgt 0x0003352e\npush { r1 }\npop { r2 }\nstr r2,[r0,#0x0]\ncmp r2,#0x1\nblt 0x0003355e\nlsl r4,r2,#0x3\nldr r1,[sp,#0x10]\nldr r1,[r1,#0x0]\nsub r6,r1,r4\nldr r4,[sp,#0xc]\nadd r4,r4,r5\nldr r4,[r4,#0x18]\ncmp r4,r6\nble 0x0003354c\nsub r1,r1,r4\nasr r2,r1,#0x3\nstr r2,[r0,#0x0]\ncmp r2,#0x8\npush { r3 }\npop { r4 }\nldr r1,[sp,#0x20]\nldr r5,[sp,#0x28]\nblt 0x00033566\nmov r2,#0x7\nstr r2,[r0,#0x0]\nb 0x00033566\npush { r3 }\npop { r4 }\nldr r1,[sp,#0x20]\nldr r5,[sp,#0x28]\ncmp r1,r2\nbgt 0x0003356e\npush { r1 }\npop { r2 }\nadd r5,#0x1\ncmp r5,#0x3\npush { r2 }\npop { r3 }\nbne 0x0003348a\nldr r0,[0x00033620]\nldr r1,[sp,#0x1c]\nldr r0,[r1,r0]\nlsl r0,r0,#0x3\nstr r0,[sp,#0x28]\nldr r0,[0x00033624]\nldr r0,[r1,r0]\nlsl r3,r0,#0x3\nldr r0,[0x0003361c]\nldr r0,[r1,r0]\nstr r0,[sp,#0x24]\nlsl r4,r0,#0x3\nmov r5,#0x0\nlsl r6,r5,#0x2\nadd r0,sp,#0x2c\nldr r1,[r0,r6]\nadd r1,r1,r4\nstr r1,[r0,r6]\nadd r0,r0,r6\nldr r1,[r0,#0x4]\nadd r1,r1,r3\nstr r1,[r0,#0x4]\nldr r1,[r0,#0x8]\nldr r6,[sp,#0x28]\nadd r1,r1,r6\nstr r1,[r0,#0x8]\nadd r5,#0x3\ncmp r5,#0x27\nbcc 0x00033592\ncmp r2,#0x1\nblt 0x000335e2\nldr r0,[sp,#0x24]\nsub r0,r0,r2\nldr r1,[0x0003361c]\nldr r3,[sp,#0x1c]\nstr r0,[r3,r1]\nldr r0,[0x00033624]\nadd r0,r3,r0\nmov r1,#0x0\nsub r3,r0,r1\nldr r4,[r3,#0x0]\nsub r4,r4,r2\nstr r4,[r3,#0x0]\nsub r1,#0x4\nmov r3,#0x7\nmvn r3,r3\ncmp r1,r3\nbne 0x000335c6\nlsl r0,r2,#0x3\nldr r2,[sp,#0x10]\nldr r1,[r2,#0x0]\nsub r0,r1,r0\nstr r0,[r2,#0x0]\nadd r4,sp,#0x2c\nldr r3,[0x00033628]\nadd r3,pc\nldr r0,[sp,#0x1c]\nldr r1,[sp,#0x8]\npush { r4 }\npop { r2 }\nbl 0x00034070\nldr r0,[0x0003362c]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0xc8]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x00033608\nadd sp,#0xcc\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p2426
S'f0 b5\n03 af\nb3 b0\n06 93\n02 92\n02 b4\n08 bc\n03 90\nb0 49\n79 44\n09 68\n09 68\n32 91\n13 21\n0a 02\nc1 68\n00 91\n01 69\n07 91\n40 69\n8d 58\n00 24\n01 2d\n2f db\n04 90\na9 48\n78 44\n05 95\n08 b4\n02 bc\n01 93\n09 94\n10 b4\n08 bc\n0a 94\n0a 68\n06 9c\na2 1a\n93 42\n04 b4\n10 bc\n01 db\n08 b4\n10 bc\n08 94\n38 3a\n03 78\n9c 00\n16 1b\n09 9c\nb4 42\n01 db\n10 b4\n40 bc\n5b 00\nd2 1a\n0a 9b\n93 42\n08 9c\n01 db\n08 b4\n04 bc\n01 3d\n01 30\n04 31\n00 2d\n0a 92\n09 96\n10 b4\n08 bc\ndb d1\n06 e0\n04 90\n01 93\n05 95\n10 b4\n04 bc\n10 b4\n40 bc\n10 b4\n08 bc\nb2 42\n04 b4\n01 bc\n04 9d\n01 db\n40 b4\n01 bc\n0a 96\n00 99\nc9 69\n02 29\n05 9c\n01 9e\n01 d0\n04 b4\n01 bc\n83 42\n01 b4\n02 bc\n01 dc\n08 b4\n02 bc\n06 9b\n59 1a\n82 42\n02 d1\n81 48\n00 22\n04 e0\n0a 9a\n82 42\n03 d1\n7e 48\n01 22\n07 9b\n1a 50\na9 42\n01 db\n02 b4\n20 bc\n7b 48\n07 99\n0d 50\n09 18\n00 2d\n03 db\nff 2d\n03 dd\nff 20\n00 e0\n00 20\n08 60\n04 91\n00 20\n81 00\n72 58\n52 1b\n0b ab\n5a 50\n01 30\n27 28\nf7 d1\n12 20\n12 2c\n01 d3\n01 b4\n10 bc\n6c 48\n07 99\n0a 58\n01 20\n02 21\n00 2a\n01 d0\n02 b4\n01 bc\n07 23\n08 b4\n02 bc\n81 40\n06 91\n0f 21\n81 40\n05 91\n00 20\n09 90\n01 b4\n20 bc\n0a 95\n08 93\n7d 20\nc6 00\na5 42\n10 b4\n08 bc\n20 b4\n04 bc\n09 98\n14 d2\n91 00\n0b ac\n61 58\n4d 42\nae 42\n20 b4\n02 bc\n01 dc\n40 b4\n02 bc\na8 42\n01 db\n01 b4\n20 bc\n03 32\n9a 42\n20 b4\n01 bc\n02 b4\n40 bc\nea d3\n27 2a\n09 99\n14 d2\n94 00\n0b ad\n2c 59\n65 42\nae 42\n20 b4\n10 bc\n01 dc\n40 b4\n10 bc\na9 42\n01 db\n02 b4\n20 bc\n03 32\n27 2a\n20 b4\n02 bc\n10 b4\n40 bc\nea d3\nf2 10\n00 2e\n00 dc\n09 9a\n05 9c\n04 1b\n06 98\n08 1a\n84 42\n0a 99\n01 dc\n01 b4\n10 bc\n8d 00\n07 98\n40 19\n40 49\n40 18\n01 2c\n05 db\ne1 1d\nc9 10\n8a 42\n01 dc\n02 b4\n04 bc\n02 60\n01 2a\n14 db\nd4 00\n04 99\n09 68\n0e 1b\n03 9c\n64 19\na4 69\nb4 42\n02 dd\n09 1b\nca 10\n02 60\n08 2a\n08 b4\n10 bc\n08 99\n0a 9d\n06 db\n07 22\n02 60\n03 e0\n08 b4\n10 bc\n08 99\n0a 9d\n91 42\n01 dc\n02 b4\n04 bc\n01 35\n03 2d\n04 b4\n08 bc\n88 d1\n29 48\n07 99\n08 58\nc0 00\n0a 90\n28 48\n08 58\nc3 00\n24 48\n08 58\n09 90\nc4 00\n00 25\nae 00\n0b a8\n81 59\n09 19\n81 51\n80 19\n41 68\nc9 18\n41 60\n81 68\n0a 9e\n89 19\n81 60\n03 35\n27 2d\nef d3\n01 2a\n15 db\n09 98\n80 1a\n18 49\n07 9b\n58 50\n18 48\n18 18\n00 21\n43 1a\n1c 68\na4 1a\n1c 60\n04 39\n07 23\ndb 43\n99 42\nf6 d1\nd0 00\n04 9a\n11 68\n08 1a\n10 60\n0b ac\n10 4b\n7b 44\n07 98\n02 99\n10 b4\n04 bc\n00 f0 3e fd\n0d 48\n78 44\n00 68\n00 68\n32 99\n40 1a\n00 28\n01 d1\n33 b0\nf0 bd\n04 f0 d2 f9\n'
p2427
S'.text:00033338\n.text:0003333a\n.text:0003333c\n.text:0003333e\n.text:00033340\n.text:00033342\n.text:00033344\n.text:00033346\n.text:00033348\n.text:0003334a\n.text:0003334c\n.text:0003334e\n.text:00033350\n.text:00033352\n.text:00033354\n.text:00033356\n.text:00033358\n.text:0003335a\n.text:0003335c\n.text:0003335e\n.text:00033360\n.text:00033362\n.text:00033364\n.text:00033366\n.text:00033368\n.text:0003336a\n.text:0003336c\n.text:0003336e\n.text:00033370\n.text:00033372\n.text:00033374\n.text:00033376\n.text:00033378\n.text:0003337a\n.text:0003337c\n.text:0003337e\n.text:00033380\n.text:00033382\n.text:00033384\n.text:00033386\n.text:00033388\n.text:0003338a\n.text:0003338c\n.text:0003338e\n.text:00033390\n.text:00033392\n.text:00033394\n.text:00033396\n.text:00033398\n.text:0003339a\n.text:0003339c\n.text:0003339e\n.text:000333a0\n.text:000333a2\n.text:000333a4\n.text:000333a6\n.text:000333a8\n.text:000333aa\n.text:000333ac\n.text:000333ae\n.text:000333b0\n.text:000333b2\n.text:000333b4\n.text:000333b6\n.text:000333b8\n.text:000333ba\n.text:000333bc\n.text:000333be\n.text:000333c0\n.text:000333c2\n.text:000333c4\n.text:000333c6\n.text:000333c8\n.text:000333ca\n.text:000333cc\n.text:000333ce\n.text:000333d0\n.text:000333d2\n.text:000333d4\n.text:000333d6\n.text:000333d8\n.text:000333da\n.text:000333dc\n.text:000333de\n.text:000333e0\n.text:000333e2\n.text:000333e4\n.text:000333e6\n.text:000333e8\n.text:000333ea\n.text:000333ec\n.text:000333ee\n.text:000333f0\n.text:000333f2\n.text:000333f4\n.text:000333f6\n.text:000333f8\n.text:000333fa\n.text:000333fc\n.text:000333fe\n.text:00033400\n.text:00033402\n.text:00033404\n.text:00033406\n.text:00033408\n.text:0003340a\n.text:0003340c\n.text:0003340e\n.text:00033410\n.text:00033412\n.text:00033414\n.text:00033416\n.text:00033418\n.text:0003341a\n.text:0003341c\n.text:0003341e\n.text:00033420\n.text:00033422\n.text:00033424\n.text:00033426\n.text:00033428\n.text:0003342a\n.text:0003342c\n.text:0003342e\n.text:00033430\n.text:00033432\n.text:00033434\n.text:00033436\n.text:00033438\n.text:0003343a\n.text:0003343c\n.text:0003343e\n.text:00033440\n.text:00033442\n.text:00033444\n.text:00033446\n.text:00033448\n.text:0003344a\n.text:0003344c\n.text:0003344e\n.text:00033450\n.text:00033452\n.text:00033454\n.text:00033456\n.text:00033458\n.text:0003345a\n.text:0003345c\n.text:0003345e\n.text:00033460\n.text:00033462\n.text:00033464\n.text:00033466\n.text:00033468\n.text:0003346a\n.text:0003346c\n.text:0003346e\n.text:00033470\n.text:00033472\n.text:00033474\n.text:00033476\n.text:00033478\n.text:0003347a\n.text:0003347c\n.text:0003347e\n.text:00033480\n.text:00033482\n.text:00033484\n.text:00033486\n.text:00033488\n.text:0003348a\n.text:0003348c\n.text:0003348e\n.text:00033490\n.text:00033492\n.text:00033494\n.text:00033496\n.text:00033498\n.text:0003349a\n.text:0003349c\n.text:0003349e\n.text:000334a0\n.text:000334a2\n.text:000334a4\n.text:000334a6\n.text:000334a8\n.text:000334aa\n.text:000334ac\n.text:000334ae\n.text:000334b0\n.text:000334b2\n.text:000334b4\n.text:000334b6\n.text:000334b8\n.text:000334ba\n.text:000334bc\n.text:000334be\n.text:000334c0\n.text:000334c2\n.text:000334c4\n.text:000334c6\n.text:000334c8\n.text:000334ca\n.text:000334cc\n.text:000334ce\n.text:000334d0\n.text:000334d2\n.text:000334d4\n.text:000334d6\n.text:000334d8\n.text:000334da\n.text:000334dc\n.text:000334de\n.text:000334e0\n.text:000334e2\n.text:000334e4\n.text:000334e6\n.text:000334e8\n.text:000334ea\n.text:000334ec\n.text:000334ee\n.text:000334f0\n.text:000334f2\n.text:000334f4\n.text:000334f6\n.text:000334f8\n.text:000334fa\n.text:000334fc\n.text:000334fe\n.text:00033500\n.text:00033502\n.text:00033504\n.text:00033506\n.text:00033508\n.text:0003350a\n.text:0003350c\n.text:0003350e\n.text:00033510\n.text:00033512\n.text:00033514\n.text:00033516\n.text:00033518\n.text:0003351a\n.text:0003351c\n.text:0003351e\n.text:00033520\n.text:00033522\n.text:00033524\n.text:00033526\n.text:00033528\n.text:0003352a\n.text:0003352c\n.text:0003352e\n.text:00033530\n.text:00033532\n.text:00033534\n.text:00033536\n.text:00033538\n.text:0003353a\n.text:0003353c\n.text:0003353e\n.text:00033540\n.text:00033542\n.text:00033544\n.text:00033546\n.text:00033548\n.text:0003354a\n.text:0003354c\n.text:0003354e\n.text:00033550\n.text:00033552\n.text:00033554\n.text:00033556\n.text:00033558\n.text:0003355a\n.text:0003355c\n.text:0003355e\n.text:00033560\n.text:00033562\n.text:00033564\n.text:00033566\n.text:00033568\n.text:0003356a\n.text:0003356c\n.text:0003356e\n.text:00033570\n.text:00033572\n.text:00033574\n.text:00033576\n.text:00033578\n.text:0003357a\n.text:0003357c\n.text:0003357e\n.text:00033580\n.text:00033582\n.text:00033584\n.text:00033586\n.text:00033588\n.text:0003358a\n.text:0003358c\n.text:0003358e\n.text:00033590\n.text:00033592\n.text:00033594\n.text:00033596\n.text:00033598\n.text:0003359a\n.text:0003359c\n.text:0003359e\n.text:000335a0\n.text:000335a2\n.text:000335a4\n.text:000335a6\n.text:000335a8\n.text:000335aa\n.text:000335ac\n.text:000335ae\n.text:000335b0\n.text:000335b2\n.text:000335b4\n.text:000335b6\n.text:000335b8\n.text:000335ba\n.text:000335bc\n.text:000335be\n.text:000335c0\n.text:000335c2\n.text:000335c4\n.text:000335c6\n.text:000335c8\n.text:000335ca\n.text:000335cc\n.text:000335ce\n.text:000335d0\n.text:000335d2\n.text:000335d4\n.text:000335d6\n.text:000335d8\n.text:000335da\n.text:000335dc\n.text:000335de\n.text:000335e0\n.text:000335e2\n.text:000335e4\n.text:000335e6\n.text:000335e8\n.text:000335ea\n.text:000335ec\n.text:000335ee\n.text:000335f0\n.text:000335f4\n.text:000335f6\n.text:000335f8\n.text:000335fa\n.text:000335fc\n.text:000335fe\n.text:00033600\n.text:00033602\n.text:00033604\n.text:00033606\n.text:00033608\n'
p2428
tp2429
sS'__aeabi_unwind_cpp_pr2'
p2430
(S'\n__stdcall __aeabi_unwind_cpp_pr2()\n'
p2431
V\u000avoid __aeabi_unwind_cpp_pr2(void)\u000a\u000a{\u000a  __gnu_unwind_pr_common();\u000a  return;\u000a}\u000a\u000a
p2432
S'mov r3,#0x2\nb 0x00036b34\n'
p2433
S'02 30 a0 e3\nfd fe ff ea\n'
p2434
S'.text:00036f34\n.text:00036f38\n'
p2435
tp2436
sS'__aeabi_unwind_cpp_pr1'
p2437
(S'\n__stdcall __aeabi_unwind_cpp_pr1()\n'
p2438
V\u000avoid __aeabi_unwind_cpp_pr1(void)\u000a\u000a{\u000a  __gnu_unwind_pr_common();\u000a  return;\u000a}\u000a\u000a
p2439
S'mov r3,#0x1\nb 0x00036b34\n'
p2440
S'01 30 a0 e3\nff fe ff ea\n'
p2441
S'.text:00036f2c\n.text:00036f30\n'
p2442
tp2443
sS'__aeabi_unwind_cpp_pr0'
p2444
(S'\n__stdcall __aeabi_unwind_cpp_pr0()\n'
p2445
V\u000avoid __aeabi_unwind_cpp_pr0(void)\u000a\u000a{\u000a  __gnu_unwind_pr_common();\u000a  return;\u000a}\u000a\u000a
p2446
S'mov r3,#0x0\nb 0x00036b34\n'
p2447
S'00 30 a0 e3\n01 ff ff ea\n'
p2448
S'.text:00036f24\n.text:00036f28\n'
p2449
tp2450
sS'floatcompare'
p2451
(S'\n__stdcall floatcompare(void * v1, void * v2)\n'
p2452
V\u000aint floatcompare(void *v1,void *v2)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  undefined4 in_r2;\u000a  undefined4 *in_r3;\u000a  int iVar2;\u000a  int iVar3;\u000a  undefined4 uVar4;\u000a  int unaff_r5;\u000a  undefined4 uVar5;\u000a  undefined4 unaff_r6;\u000a  undefined4 uVar6;\u000a  int in_stack_00000004;\u000a  int in_stack_00000008;\u000a  uint in_stack_0000000c;\u000a  int *in_stack_00000014;\u000a  int in_stack_00000024;\u000a  int in_stack_00000028;\u000a  int *in_stack_0000002c;\u000a  int *in_stack_00000030;\u000a  undefined4 *in_stack_00000034;\u000a  int in_stack_00000038;\u000a  int in_stack_0000003c;\u000a  int *in_stack_00000040;\u000a  int *in_stack_00000044;\u000a  int in_stack_00000048;\u000a  int *in_stack_0000004c;\u000a  undefined4 *in_stack_00000050;\u000a  int in_stack_00000054;\u000a  int in_stack_00000058;\u000a  int *in_stack_0000005c;\u000a  undefined4 *in_stack_00000060;\u000a  int in_stack_00000064;\u000a  int *in_stack_00000068;\u000a  int in_stack_0000006c;\u000a  int iStack00000074;\u000a  undefined4 in_stack_0000007c;\u000a  int iStack00000080;\u000a  \u000a  if (unaff_r5 == 1) {\u000a    *in_stack_00000060 = unaff_r6;\u000a    in_stack_00000060[1] = in_stack_0000007c;\u000a    *in_stack_00000050 = in_r2;\u000a    *(void **)(in_stack_00000050 + 1) = v2;\u000a    in_r3 = (undefined4 *)(in_stack_0000003c + in_stack_00000038);\u000a    do {\u000a      if (0xe < in_stack_00000064 + 7U) {\u000a        iStack00000074 = in_stack_0000006c >> 3;\u000a                    /* WARNING: Subroutine does not return */\u000a        __extendsfdf2(*in_r3);\u000a      }\u000a      iVar3 = in_stack_00000048 + in_stack_00000064;\u000a      *in_stack_00000068 = iVar3;\u000a      in_stack_00000058 = in_stack_00000064 + in_stack_00000058;\u000a      in_stack_00000054 = in_stack_00000054 - in_stack_00000064;\u000a      if (iVar3 == *in_stack_0000004c) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __adddf3(*in_stack_00000060,in_stack_00000060[1],*in_stack_00000050,in_stack_00000050[1]);\u000a      }\u000a      if (*in_stack_0000004c < iVar3) {\u000a        return 0;\u000a      }\u000a      if (in_stack_00000054 < 1) {\u000a        if (9 < in_stack_0000000c) {\u000a          iVar3 = in_stack_00000024 + in_stack_0000000c * 4;\u000a          uVar4 = *(undefined4 *)(iVar3 + -0x24);\u000a          uVar5 = *(undefined4 *)(iVar3 + -0x20);\u000a          *in_stack_00000034 = *(undefined4 *)(iVar3 + -0x28);\u000a          in_stack_00000034[1] = uVar4;\u000a          in_stack_00000034[2] = uVar5;\u000a          uVar4 = *(undefined4 *)(iVar3 + -0x18);\u000a          uVar5 = *(undefined4 *)(iVar3 + -0x14);\u000a          in_stack_00000034[3] = *(undefined4 *)(iVar3 + -0x1c);\u000a          in_stack_00000034[4] = uVar4;\u000a          in_stack_00000034[5] = uVar5;\u000a          uVar4 = *(undefined4 *)(iVar3 + -0xc);\u000a          uVar5 = *(undefined4 *)(iVar3 + -8);\u000a          uVar6 = *(undefined4 *)(iVar3 + -4);\u000a          in_stack_00000034[6] = *(undefined4 *)(iVar3 + -0x10);\u000a          in_stack_00000034[7] = uVar4;\u000a          in_stack_00000034[8] = uVar5;\u000a          in_stack_00000034[9] = uVar6;\u000a          puVar1 = (undefined4 *)((int)in_stack_00000034 + DAT_0001c240);\u000a          iVar3 = in_stack_00000028 + in_stack_0000000c * 4;\u000a          uVar4 = *(undefined4 *)(iVar3 + -0x24);\u000a          uVar5 = *(undefined4 *)(iVar3 + -0x20);\u000a          *puVar1 = *(undefined4 *)(iVar3 + -0x28);\u000a          puVar1[1] = uVar4;\u000a          puVar1[2] = uVar5;\u000a          uVar4 = *(undefined4 *)(iVar3 + -0x18);\u000a          uVar5 = *(undefined4 *)(iVar3 + -0x14);\u000a          puVar1[3] = *(undefined4 *)(iVar3 + -0x1c);\u000a          puVar1[4] = uVar4;\u000a          puVar1[5] = uVar5;\u000a          uVar4 = *(undefined4 *)(iVar3 + -0xc);\u000a          uVar5 = *(undefined4 *)(iVar3 + -8);\u000a          uVar6 = *(undefined4 *)(iVar3 + -4);\u000a          puVar1[6] = *(undefined4 *)(iVar3 + -0x10);\u000a          puVar1[7] = uVar4;\u000a          puVar1[8] = uVar5;\u000a          puVar1[9] = uVar6;\u000a          return in_stack_00000008;\u000a        }\u000a        iVar3 = (10 - in_stack_0000000c) * 4;\u000a        __aeabi_memmove4(in_stack_00000034,in_stack_00000034 + in_stack_0000000c,iVar3);\u000a        __aeabi_memmove4((int)in_stack_00000034 + DAT_0001c240,\u000a                         (int)in_stack_00000034 + DAT_0001c240 + in_stack_0000000c * 4,iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a        __aeabi_memcpy4(in_stack_00000004 + in_stack_0000000c * -4,in_stack_00000024,\u000a                        in_stack_0000000c * 4);\u000a      }\u000a      in_stack_00000064 = *in_stack_0000004c - *in_stack_00000068;\u000a      if (in_stack_00000054 <= in_stack_00000064) {\u000a        in_stack_00000064 = in_stack_00000054;\u000a      }\u000a      if (in_stack_00000058 < 10) {\u000a        iVar3 = 10 - in_stack_00000058;\u000a        if (in_stack_00000064 <= 10 - in_stack_00000058) {\u000a          iVar3 = in_stack_00000064;\u000a        }\u000a        iStack00000080 = *in_stack_00000014;\u000a        in_stack_00000064 = iVar3;\u000a        iVar3 = in_stack_00000034[0x14];\u000a      }\u000a      else {\u000a        iStack00000080 = in_stack_00000028;\u000a        iVar3 = in_stack_00000024;\u000a      }\u000a      iVar2 = DAT_0001bd60 + 0x1bc00;\u000a      filterYule(iVar3 + in_stack_00000058 * 4,*in_stack_0000002c + *in_stack_00000068 * 4,\u000a                 in_stack_00000064,iVar2 + *in_stack_0000005c * 0x54);\u000a      filterYule(iStack00000080 + in_stack_00000058 * 4,*in_stack_00000040 + *in_stack_00000068 * 4,\u000a                 in_stack_00000064,iVar2 + *in_stack_0000005c * 0x54);\u000a      iVar3 = DAT_0001bd64 + 0x1bc44;\u000a      filterButter(*in_stack_0000002c + *in_stack_00000068 * 4,\u000a                   *in_stack_00000044 + *in_stack_00000068 * 4,in_stack_00000064,\u000a                   iVar3 + *in_stack_0000005c * 0x14);\u000a      filterButter(*in_stack_00000040 + *in_stack_00000068 * 4,\u000a                   *in_stack_00000030 + *in_stack_00000068 * 4,in_stack_00000064,\u000a                   iVar3 + *in_stack_0000005c * 0x14);\u000a      in_stack_0000006c = in_stack_00000064 + ((uint)(in_stack_00000064 >> 0x1f) >> 0x1d);\u000a      in_stack_00000048 = *in_stack_00000068;\u000a      in_r3 = (undefined4 *)(*in_stack_00000044 + in_stack_00000048 * 4);\u000a    } while (in_stack_00000064 % 8 == 0);\u000a    in_r2 = *in_stack_00000050;\u000a  }\u000a  iStack00000074 = in_r2;\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(*in_r3);\u000a}\u000a\u000a
p2453
S'sub r5,#0x1\ncmp r5,#0x0\nbne 0x0001bcb0\nldr r0,[sp,#0x60]\nstr r6,[r0,#0x0]\nldr r3,[sp,#0x7c]\nstr r3,[r0,#0x4]\nldr r0,[sp,#0x50]\nstr r2,[r0,#0x0]\nstr r1,[r0,#0x4]\nldr r0,[sp,#0x3c]\nldr r1,[sp,#0x38]\nadd r3,r0,r1\nldr r2,[sp,#0x48]\nb 0x0001bd6a\n'
p2454
S'01 3d\n00 2d\nce d1\n18 98\n06 60\n1f 9b\n43 60\n14 98\n02 60\n41 60\n0f 98\n0e 99\n43 18\n12 9a\n1f e0\n'
p2455
S'.text:0001bd0c\n.text:0001bd0e\n.text:0001bd10\n.text:0001bd12\n.text:0001bd14\n.text:0001bd16\n.text:0001bd18\n.text:0001bd1a\n.text:0001bd1c\n.text:0001bd1e\n.text:0001bd20\n.text:0001bd22\n.text:0001bd24\n.text:0001bd26\n.text:0001bd28\n'
p2456
tp2457
sS'__gnu_Unwind_Restore_VFP_D'
p2458
(S'\n__stdcall __gnu_Unwind_Restore_VFP_D()\n'
p2459
V\u000a/* WARNING: Control flow encountered unimplemented instructions */\u000a\u000avoid __gnu_Unwind_Restore_VFP_D(void)\u000a\u000a{\u000a                    /* WARNING: Unimplemented instruction - Truncating control flow here */\u000a  halt_unimplemented();\u000a}\u000a\u000a
p2460
S'vldmia r0,{d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15}\nbx lr\n'
p2461
S'20 0b 90 ec\n1e ff 2f e1\n'
p2462
S'.text:000372cc\n.text:000372d0\n'
p2463
tp2464
sS'__eqdf2'
p2465
(S'\n__stdcall __eqdf2()\n'
p2466
V\u000auint __eqdf2(uint uParm1,uint uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  \u000a  bVar2 = ~((int)(uParm2 << 1) >> 0x15) == 0;\u000a  if (!bVar2) {\u000a    bVar2 = ~((int)(uParm4 << 1) >> 0x15) == 0;\u000a  }\u000a  if ((bVar2) &&\u000a     (((~((int)(uParm2 << 1) >> 0x15) == 0 && ((uParm1 | uParm2 << 0xc) != 0)) ||\u000a      ((~((int)(uParm4 << 1) >> 0x15) == 0 && ((uParm3 | uParm4 << 0xc) != 0)))))) {\u000a    return 1;\u000a  }\u000a  bVar2 = (uParm1 | uParm2 << 1) == 0;\u000a  if (bVar2) {\u000a    bVar2 = (uParm3 | uParm4 << 1) == 0;\u000a  }\u000a  if (!bVar2) {\u000a    bVar2 = uParm2 == uParm4;\u000a  }\u000a  if (bVar2) {\u000a    bVar2 = uParm1 == uParm3;\u000a  }\u000a  if (bVar2) {\u000a    return 0;\u000a  }\u000a  uVar1 = uParm2 ^ uParm4;\u000a  bVar2 = uVar1 == 0;\u000a  if (-1 < (int)uVar1) {\u000a    bVar2 = uParm2 == uParm4;\u000a  }\u000a  bVar3 = -1 < (int)uVar1 && uParm4 <= uParm2;\u000a  if (bVar2) {\u000a    bVar3 = uParm3 <= uParm1;\u000a  }\u000a  uParm4 = (int)uParm4 >> 0x1f;\u000a  if (!bVar3) {\u000a    uParm4 = ~uParm4;\u000a  }\u000a  return uParm4 | 1;\u000a}\u000a\u000a
p2467
S'mov r12,#0x1\n'
p2468
S'01 c0 a0 e3\n'
p2469
S'.text:00035a6c\n'
p2470
tp2471
sS'lame_set_free_format'
p2472
(S'\n__stdcall lame_set_free_format(lame_global_flags * gfp, int free_format)\n'
p2473
V\u000aint lame_set_free_format(lame_global_flags *gfp,int free_format)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  int iVar1;\u000a  undefined uVar2;\u000a  undefined *puVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  undefined *unaff_r6;\u000a  undefined *puVar12;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000acode_r0x0001e112:\u000a  uVar2 = (undefined)free_format;\u000a  if (gfp == (lame_global_flags *)0x1) {\u000a    uVar2 = 1;\u000a  }\u000a  unaff_r6[10] = uVar2;\u000a  unaff_r6[0xb] = *(undefined *)(unaff_r5 + 2);\u000a  unaff_r6[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a  unaff_r6[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a  puVar12 = unaff_r6 + 0xe;\u000a  if (unaff_r5[5] == 1) {\u000a    gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,unaff_r5[3],unaff_r5[4]);\u000a    *(undefined *)&gfp_00->class_id = 0;\u000a    *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a    iVar1 = lame_get_ReplayGain_input(gfp_00);\u000a    return iVar1;\u000a  }\u000a  iVar1 = unaff_r5[4];\u000a  if (iVar1 != 0) {\u000a    puVar3 = (undefined *)unaff_r5[3];\u000a    iVar5 = iVar1;\u000a    puVar8 = puVar12;\u000a    do {\u000a      *puVar8 = *puVar3;\u000a      puVar8 = puVar8 + 1;\u000a      puVar3 = puVar3 + 1;\u000a      iVar5 = iVar5 + -1;\u000a    } while (iVar5 != 0);\u000a    puVar12 = puVar12 + iVar1;\u000a  }\u000a  *puVar12 = 0;\u000a  unaff_r6 = puVar12 + 1;\u000a  if (unaff_r5[8] != 1) {\u000a    iVar1 = unaff_r5[7];\u000a    if (iVar1 == 0) goto LAB_0001e09a;\u000a    puVar8 = (undefined *)unaff_r5[6];\u000a    iVar5 = iVar1;\u000a    puVar12 = unaff_r6;\u000a    do {\u000a      *puVar12 = *puVar8;\u000a      puVar12 = puVar12 + 1;\u000a      puVar8 = puVar8 + 1;\u000a      iVar5 = iVar5 + -1;\u000a      if (iVar5 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    unaff_r6 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[6],unaff_r5[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          while( true ) {\u000a            unaff_r5 = (int *)*unaff_r5;\u000a            if (unaff_r5 == (int *)0x0) {\u000a              if (__s != (char *)0x0) {\u000a                iVar1 = 4;\u000a                if ((*in_stack_00000004 != 0) &&\u000a                   (uVar9 = DAT_0001e49c,\u000a                   *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a                  do {\u000a                    unaff_r6[iVar1 + -1] = (char)uVar9;\u000a                    iVar1 = iVar1 + -1;\u000a                    uVar9 = uVar9 >> 8;\u000a                  } while (0 < iVar1);\u000a                    /* WARNING: Subroutine does not return */\u000a                  strlen(__s);\u000a                }\u000a              }\u000a              __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a              if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a                return in_stack_0000002c;\u000a              }\u000a                    /* WARNING: Subroutine does not return */\u000a              __stack_chk_fail();\u000a            }\u000a            uVar9 = unaff_r5[1];\u000a            uVar11 = 0xff;\u000a            iVar1 = 4;\u000a            if ((uVar9 != DAT_0001e494) && (uVar4 = in_stack_00000030, uVar9 != DAT_0001e498))\u000a            break;\u000a            iVar1 = unaff_r5[4] * 2 + 0x10;\u000a            if (unaff_r5[5] != 1) {\u000a              iVar1 = unaff_r5[4] + 0xf;\u000a            }\u000a            iVar5 = 0;\u000a            if (unaff_r5[8] == 1) {\u000a              iVar5 = unaff_r5[8];\u000a            }\u000a            uVar11 = (unaff_r5[7] << iVar5) + iVar1;\u000a            iVar1 = 4;\u000a            if (10 < uVar11) goto LAB_0001e0ea;\u000a          }\u000a          do {\u000a            uVar7 = uVar11 & 0x57000000;\u000a            uVar10 = in_stack_00000030;\u000a            if (uVar7 != (uVar11 & uVar9)) {\u000a              uVar10 = uVar11 & uVar9;\u000a            }\u000a            if (uVar7 == 0) {\u000a              uVar10 = uVar7;\u000a            }\u000a            uVar4 = uVar4 | uVar10;\u000a            iVar1 = iVar1 + -1;\u000a            uVar11 = uVar11 << 8;\u000a          } while (iVar1 != 0);\u000a          if (uVar4 != 0) break;\u000a          uVar11 = sizeOfWxxxNode(unaff_r5);\u000a          iVar1 = 4;\u000a          if (10 < uVar11) {\u000a            do {\u000a              unaff_r6[iVar1 + -1] = (char)uVar9;\u000a              iVar1 = iVar1 + -1;\u000a              uVar9 = uVar9 >> 8;\u000a            } while (0 < iVar1);\u000a            uVar11 = uVar11 - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              unaff_r6[iVar1 + 3] = (char)uVar11;\u000a              iVar1 = iVar1 + -1;\u000a              uVar11 = uVar11 >> 8;\u000a            } while (0 < iVar1);\u000a            unaff_r6[8] = 0;\u000a            unaff_r6[9] = 0;\u000a            puVar12 = unaff_r6 + 10;\u000a            if (unaff_r5[4] != 0) {\u000a              *(bool *)(unaff_r6 + 10) = unaff_r5[5] == 1;\u000a              puVar12 = unaff_r6 + 0xb;\u000a              if (unaff_r5[5] == 1) {\u000a                puVar12 = (undefined *)writeUcs2s(puVar12,unaff_r5[3],unaff_r5[4]);\u000a                *puVar12 = 0;\u000a                puVar12[1] = 0;\u000a                puVar12 = puVar12 + 2;\u000a              }\u000a              else {\u000a                iVar1 = unaff_r5[4];\u000a                if (iVar1 != 0) {\u000a                  puVar3 = (undefined *)unaff_r5[3];\u000a                  iVar5 = iVar1;\u000a                  puVar8 = puVar12;\u000a                  do {\u000a                    *puVar8 = *puVar3;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar3 = puVar3 + 1;\u000a                    iVar5 = iVar5 + -1;\u000a                  } while (iVar5 != 0);\u000a                  puVar12 = puVar12 + iVar1;\u000a                }\u000a                *puVar12 = 0;\u000a                puVar12 = puVar12 + 1;\u000a              }\u000a            }\u000a            if (unaff_r5[8] == 1) {\u000a              unaff_r6 = (undefined *)writeLoBytes(puVar12,unaff_r5[6],unaff_r5[7]);\u000a            }\u000a            else {\u000a              iVar1 = unaff_r5[7];\u000a              unaff_r6 = puVar12;\u000a              if (iVar1 != 0) {\u000a                puVar3 = (undefined *)unaff_r5[6];\u000a                iVar5 = iVar1;\u000a                puVar8 = puVar12;\u000a                do {\u000a                  *puVar8 = *puVar3;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                unaff_r6 = puVar12 + iVar1;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        iVar1 = unaff_r5[7];\u000a        iVar5 = unaff_r5[4];\u000a        if (unaff_r5[8] == 1) {\u000a          iVar6 = iVar5 * 2 + 0xd;\u000a          if (iVar5 == 0) {\u000a            iVar6 = 0xb;\u000a          }\u000a          iVar1 = iVar1 << 1;\u000a        }\u000a        else {\u000a          iVar6 = iVar5 + 0xc;\u000a          if (iVar5 == 0) {\u000a            iVar6 = 0xb;\u000a          }\u000a        }\u000a        iVar5 = 4;\u000a      } while ((uint)(iVar6 + iVar1) < 0xb);\u000a      do {\u000a        unaff_r6[iVar5 + -1] = (char)uVar9;\u000a        iVar5 = iVar5 + -1;\u000a        uVar9 = uVar9 >> 8;\u000a      } while (0 < iVar5);\u000a      uVar9 = (iVar6 + iVar1) - 10;\u000a      iVar1 = 4;\u000a      do {\u000a        unaff_r6[iVar1 + 3] = (char)uVar9;\u000a        iVar1 = iVar1 + -1;\u000a        uVar9 = uVar9 >> 8;\u000a      } while (0 < iVar1);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = unaff_r5[8] == 1;\u000a      unaff_r6 = unaff_r6 + 0xb;\u000a      iVar1 = unaff_r5[4];\u000a      if (iVar1 != 0) {\u000a        if (unaff_r5[5] == 1) {\u000a          puVar12 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[3]);\u000a          *puVar12 = 0;\u000a          puVar12[1] = 0;\u000a          unaff_r6 = puVar12 + 2;\u000a        }\u000a        else {\u000a          puVar8 = (undefined *)unaff_r5[3];\u000a          iVar5 = iVar1;\u000a          puVar12 = unaff_r6;\u000a          do {\u000a            *puVar12 = *puVar8;\u000a            puVar12 = puVar12 + 1;\u000a            puVar8 = puVar8 + 1;\u000a            iVar5 = iVar5 + -1;\u000a          } while (iVar5 != 0);\u000a          unaff_r6[iVar1] = 0;\u000a          unaff_r6 = unaff_r6 + iVar1 + 1;\u000a        }\u000a      }\u000a      if (unaff_r5[8] == 1) break;\u000a      iVar1 = unaff_r5[7];\u000a      if (iVar1 != 0) {\u000a        puVar8 = (undefined *)unaff_r5[6];\u000a        iVar5 = iVar1;\u000a        puVar12 = unaff_r6;\u000a        do {\u000a          *puVar12 = *puVar8;\u000a          puVar12 = puVar12 + 1;\u000a          puVar8 = puVar8 + 1;\u000a          iVar5 = iVar5 + -1;\u000a        } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a        unaff_r6 = unaff_r6 + iVar1;\u000a      }\u000a    }\u000a  } while( true );\u000aLAB_0001e0ea:\u000a  do {\u000a    free_format = 0;\u000a    unaff_r6[iVar1 + -1] = (char)uVar9;\u000a    iVar1 = iVar1 + -1;\u000a    uVar9 = uVar9 >> 8;\u000a  } while (0 < iVar1);\u000a  uVar11 = uVar11 - 10;\u000a  iVar1 = 4;\u000a  do {\u000a    unaff_r6[iVar1 + 3] = (char)uVar11;\u000a    iVar1 = iVar1 + -1;\u000a    uVar11 = uVar11 >> 8;\u000a  } while (0 < iVar1);\u000a  unaff_r6[8] = 0;\u000a  unaff_r6[9] = 0;\u000a  gfp = (lame_global_flags *)unaff_r5[8];\u000a  goto code_r0x0001e112;\u000a}\u000a\u000a
p2474
S'cmp r0,#0x1\nbne 0x0001e11a\npush { r0 }\npop { r1 }\nstrb r1,[r6,#0xa]\nldrb r0,[r5,#0x8]\nstrb r0,[r6,#0xb]\nldrb r0,[r5,#0x9]\nstrb r0,[r6,#0xc]\nldrb r0,[r5,#0xa]\nstrb r0,[r6,#0xd]\nadd r6,#0xe\nldr r0,[r5,#0x14]\ncmp r0,#0x1\nbne 0x0001e1e8\nldr r1,[r5,#0xc]\nldr r2,[r5,#0x10]\npush { r6 }\npop { r0 }\nbl 0x0001e9e0\nmov r1,#0x0\nstrb r1,[r0,#0x0]\nstrb r1,[r0,#0x1]\nadd r6,r0,#0x2\nb 0x0001e20e\n'
p2475
S'01 28\n01 d1\n01 b4\n02 bc\nb1 72\n28 7a\nf0 72\n68 7a\n30 73\na8 7a\n70 73\n0e 36\n68 69\n01 28\n5b d1\ne9 68\n2a 69\n40 b4\n01 bc\n00 f0 52 fc\n00 21\n01 70\n41 70\n86 1c\n63 e0\n'
p2476
S'.text:0001e112\n.text:0001e114\n.text:0001e116\n.text:0001e118\n.text:0001e11a\n.text:0001e11c\n.text:0001e11e\n.text:0001e120\n.text:0001e122\n.text:0001e124\n.text:0001e126\n.text:0001e128\n.text:0001e12a\n.text:0001e12c\n.text:0001e12e\n.text:0001e130\n.text:0001e132\n.text:0001e134\n.text:0001e136\n.text:0001e138\n.text:0001e13c\n.text:0001e13e\n.text:0001e140\n.text:0001e142\n.text:0001e144\n'
p2477
tp2478
sS'abort'
p2479
(S'\n__stdcall abort()\n'
p2480
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_00040fb4)();\u000a  return;\u000a}\u000a\u000a
p2481
S'adr r12,0x16bfc\nadd r12,r12,#0x2a000\nldr pc,[r12,#0x3b8]!\n'
p2482
S'00 c6 8f e2\n2a ca 8c e2\nb8 f3 bc e5\n'
p2483
S'.plt:00016bf4\n.plt:00016bf8\n.plt:00016bfc\n'
p2484
tp2485
sS'_Unwind_DeleteException'
p2486
(S'\n__stdcall _Unwind_DeleteException()\n'
p2487
V\u000avoid _Unwind_DeleteException(int iParm1)\u000a\u000a{\u000a  if (*(code **)(iParm1 + 8) == (code *)0x0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Could not recover jumptable at 0x0003695c. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (**(code **)(iParm1 + 8))(1);\u000a  return;\u000a}\u000a\u000a
p2488
S'ldr r3,[r0,#0x8]\ncpy r1,r0\ncmp r3,#0x0\nbxeq lr\nmov r0,#0x1\nbx r3\n'
p2489
S'08 30 90 e5\n00 10 a0 e1\n00 00 53 e3\n1e ff 2f 01\n01 00 a0 e3\n13 ff 2f e1\n'
p2490
S'.text:00036948\n.text:0003694c\n.text:00036950\n.text:00036954\n.text:00036958\n.text:0003695c\n'
p2491
tp2492
sS'lame_get_disable_reservoir'
p2493
(S'\n__stdcall lame_get_disable_reservoir(lame_global_flags * gfp)\n'
p2494
V\u000aint lame_get_disable_reservoir(lame_global_flags *gfp)\u000a\u000a{\u000a  int in_stack_00000004;\u000a  void *__ptr;\u000a  \u000a  free(__ptr);\u000a  return in_stack_00000004;\u000a}\u000a\u000a
p2495
S'ldr r0,[sp,#0x8]\n'
p2496
S'02 98\n'
p2497
S'.text:0001e560\n'
p2498
tp2499
sS'copy_buffer'
p2500
(S'\n__stdcall copy_buffer()\n'
p2501
V\u000avoid copy_buffer(void)\u000a\u000a{\u000a  (*(AddVbrFrame + DAT_00037b5c))();\u000a  return;\u000a}\u000a\u000a
p2502
S'ldr r12,[0x37b5c]\nadd pc,r12,pc\n'
p2503
S'00 c0 9f e5\n0f f0 8c e0\n'
p2504
S'.text:00037b54\n.text:00037b58\n'
p2505
tp2506
sS'lame_get_athaa_type'
p2507
(S'\n__stdcall lame_get_athaa_type()\n'
p2508
V\u000aundefined4 lame_get_athaa_type(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xe8);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2509
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ed18\nmov r0,#0xe8\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p2510
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 93 fb\n01 b4\n02 bc\n00 20\n00 29\n01 d0\ne8 20\n20 58\nd0 bd\n'
p2511
S'.text:0002ecfe\n.text:0002ed00\n.text:0002ed02\n.text:0002ed04\n.text:0002ed06\n.text:0002ed0a\n.text:0002ed0c\n.text:0002ed0e\n.text:0002ed10\n.text:0002ed12\n.text:0002ed14\n.text:0002ed16\n.text:0002ed18\n'
p2512
tp2513
sS'__aeabi_uidivmod'
p2514
(S'\n__stdcall __aeabi_uidivmod()\n'
p2515
V\u000avoid __aeabi_uidivmod(void)\u000a\u000a{\u000a  (*(__udivsi3 + DAT_0003845c))();\u000a  return;\u000a}\u000a\u000a
p2516
S'ldr r12,[0x3845c]\nadd pc,r12,pc\n'
p2517
S'00 c0 9f e5\n0f f0 8c e0\n'
p2518
S'.text:00038454\n.text:00038458\n'
p2519
tp2520
sS'_Unwind_RaiseException'
p2521
(S'\n__stdcall _Unwind_RaiseException()\n'
p2522
V\u000avoid _Unwind_RaiseException(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  undefined4 uStack56;\u000a  undefined4 uStack52;\u000a  undefined4 uStack4;\u000a  \u000a  uStack4 = 0x373a4;\u000a  uStack68 = 0;\u000a  uStack64 = uParm1;\u000a  uStack60 = uParm2;\u000a  uStack56 = uParm3;\u000a  uStack52 = uParm4;\u000a  __gnu_Unwind_RaiseException(uParm1,&uStack68,uParm3,0,uParm3);\u000a  return;\u000a}\u000a\u000a
p2523
S'stmdb sp!,{ sp lr pc}\nstmdb sp!,{ r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 }\nmov r3,#0x0\nstmdb sp!,{ r2 r3 }\nadd r1,sp,#0x4\nbl 0x00016c18\nldr lr,[sp,#0x40]\nadd sp,sp,#0x48\nbx lr\n'
p2524
S'00 e0 2d e9\nff 1f 2d e9\n00 30 a0 e3\n0c 00 2d e9\n04 10 8d e2\n18 7e ff eb\n40 e0 9d e5\n48 d0 8d e2\n1e ff 2f e1\n'
p2525
S'.text:0003739c\n.text:000373a0\n.text:000373a4\n.text:000373a8\n.text:000373ac\n.text:000373b0\n.text:000373b4\n.text:000373b8\n.text:000373bc\n'
p2526
tp2527
sS'lame_encode_buffer_interleaved'
p2528
(S'\n__stdcall lame_encode_buffer_interleaved()\n'
p2529
V\u000avoid lame_encode_buffer_interleaved\u000a               (undefined4 uParm1,int iParm2,undefined4 uParm3,undefined4 uParm4,undefined4 uParm5)\u000a\u000a{\u000a  lame_encode_buffer_template(uParm1,iParm2,iParm2 + 2,uParm3,uParm4,uParm5,0,2,0x3f800000);\u000a  return;\u000a}\u000a\u000a
p2530
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\n'
p2531
S'b0 b5\n02 af\n'
p2532
S'.text:00021204\n.text:00021206\n'
p2533
tp2534
sS'lame_set_strict_ISO'
p2535
(S'\n__stdcall lame_set_strict_ISO(lame_global_flags * gfp, int val)\n'
p2536
V\u000aint lame_set_strict_ISO(lame_global_flags *gfp,int val)\u000a\u000a{\u000a  undefined4 unaff_r5;\u000a  size_t __nmemb;\u000a  \u000a  if (((uint)gfp & 5) == 1) {\u000a    __nmemb = lame_get_id3v2_tag(unaff_r5,0,0);\u000a                    /* WARNING: Subroutine does not return */\u000a    calloc(__nmemb,1);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p2537
S'mov r1,#0x5\nand r1,r0\nmov r0,#0x0\ncmp r1,#0x1\nbne 0x0001e568\nmov r6,#0x0\npush { r5 }\npop { r0 }\npush { r6 }\npop { r1 }\npush { r6 }\npop { r2 }\nbl 0x00037d60\nstr r0,[sp,#0x8]\nmov r1,#0x1\nbl 0x00037cb0\n'
p2538
S'05 21\n01 40\n00 20\n01 29\n34 d1\n00 26\n20 b4\n01 bc\n40 b4\n02 bc\n40 b4\n04 bc\n19 f0 28 fc\n02 90\n01 21\n19 f0 cc fb\n'
p2539
S'.text:0001e4f4\n.text:0001e4f6\n.text:0001e4f8\n.text:0001e4fa\n.text:0001e4fc\n.text:0001e4fe\n.text:0001e500\n.text:0001e502\n.text:0001e504\n.text:0001e506\n.text:0001e508\n.text:0001e50a\n.text:0001e50c\n.text:0001e510\n.text:0001e512\n.text:0001e514\n'
p2540
tp2541
sS'__stack_chk_fail'
p2542
(S'\n__stdcall __stack_chk_fail()\n'
p2543
V\u000avoid __stack_chk_fail(void)\u000a\u000a{\u000a  (*(__aeabi_memcpy + DAT_000379bc))();\u000a  return;\u000a}\u000a\u000a
p2544
S'ldr r12,[0x379bc]\nadd pc,r12,pc\n'
p2545
S'00 c0 9f e5\n0f f0 8c e0\n'
p2546
S'.text:000379b4\n.text:000379b8\n'
p2547
tp2548
sS'_Unwind_DebugHook'
p2549
(S'\n__stdcall _Unwind_DebugHook()\n'
p2550
V\u000avoid _Unwind_DebugHook(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p2551
S'bx lr\n'
p2552
S'1e ff 2f e1\n'
p2553
S'.text:00036658\n'
p2554
tp2555
sS'calloc'
p2556
(S'\n__stdcall calloc(size_t __nmemb, size_t __size)\n'
p2557
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * calloc(size_t __nmemb,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(id3tag_set_textinfo_utf16 + DAT_00037cbc))();\u000a  return pvVar1;\u000a}\u000a\u000a
p2558
S'ldr r12,[0x37cbc]\nadd pc,r12,pc\n'
p2559
S'00 c0 9f e5\n0f f0 8c e0\n'
p2560
S'.text:00037cb4\n.text:00037cb8\n'
p2561
tp2562
sS'lame_set_allow_diff_short'
p2563
(S'\n__stdcall lame_set_allow_diff_short()\n'
p2564
V\u000aundefined4 lame_set_allow_diff_short(int iParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(uint *)(iParm1 + 0xf0) = (uint)(iParm2 == 0);\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2565
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002ed9a\nmov r0,#0x1\ncmp r5,#0x0\nbeq 0x0002ed92\npush { r2 }\npop { r0 }\nmov r1,#0xf0\nstr r0,[r4,r1]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2566
S'b0 b5\n02 af\n02 b4\n20 bc\n01 b4\n10 bc\n09 f0 5a fb\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n08 d0\n01 20\n00 2d\n01 d0\n04 b4\n01 bc\nf0 21\n60 50\n04 b4\n01 bc\nb0 bd\n'
p2567
S'.text:0002ed6c\n.text:0002ed6e\n.text:0002ed70\n.text:0002ed72\n.text:0002ed74\n.text:0002ed76\n.text:0002ed78\n.text:0002ed7c\n.text:0002ed7e\n.text:0002ed80\n.text:0002ed82\n.text:0002ed84\n.text:0002ed86\n.text:0002ed88\n.text:0002ed8a\n.text:0002ed8c\n.text:0002ed8e\n.text:0002ed90\n.text:0002ed92\n.text:0002ed94\n.text:0002ed96\n.text:0002ed98\n.text:0002ed9a\n'
p2568
tp2569
sS'nextUpperAlpha'
p2570
(S'\n__stdcall nextUpperAlpha()\n'
p2571
V\u000avoid nextUpperAlpha(byte *pbParm1,uint uParm2)\u000a\u000a{\u000a  byte bVar1;\u000a  uint uVar2;\u000a  \u000a  bVar1 = *pbParm1;\u000a  if (bVar1 != 0) {\u000a    do {\u000a      uVar2 = (uint)*(byte *)(**(int **)(DAT_0001e9dc + 0x1e9ba) + 2 + (uint)bVar1 * 2);\u000a      if ((uVar2 != uParm2) && (uVar2 - 0x41 < 0x1a)) {\u000a        return;\u000a      }\u000a      bVar1 = pbParm1[1];\u000a      pbParm1 = pbParm1 + 1;\u000a    } while (bVar1 != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2572
S'push { r4, lr }\nldrb r3,[r0,#0x0]\ncmp r3,#0x0\nbeq 0x0001e9d8\nldr r2,[0x0001e9dc]\nadd r2,pc\nldr r2,[r2,#0x0]\nldr r2,[r2,#0x0]\nadd r2,#0x2\nlsl r3,r3,#0x1\n'
p2573
S'10 b5\n03 78\n00 2b\n11 d0\n09 4a\n7a 44\n12 68\n12 68\n02 32\n5b 00\n'
p2574
S'.text:0001e9ac\n.text:0001e9ae\n.text:0001e9b0\n.text:0001e9b2\n.text:0001e9b4\n.text:0001e9b6\n.text:0001e9b8\n.text:0001e9ba\n.text:0001e9bc\n.text:0001e9be\n'
p2575
tp2576
sS'strcat'
p2577
(S'\n__stdcall strcat(char * __dest, char * __src)\n'
p2578
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcat(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)(DAT_00037ffc + 0x38000))();\u000a  return pcVar1;\u000a}\u000a\u000a
p2579
S'ldr r12,[0x37ffc]\nadd pc,r12,pc\n'
p2580
S'00 c0 9f e5\n0f f0 8c e0\n'
p2581
S'.text:00037ff4\n.text:00037ff8\n'
p2582
tp2583
sS'lame_get_VBR_mean_bitrate_kbps'
p2584
(S'\n__stdcall lame_get_VBR_mean_bitrate_kbps()\n'
p2585
V\u000avoid lame_get_VBR_mean_bitrate_kbps(void)\u000a\u000a{\u000a  (*(lame_set_sfscale + DAT_000380ec))();\u000a  return;\u000a}\u000a\u000a
p2586
S'ldr r12,[0x380ec]\nadd pc,r12,pc\n'
p2587
S'00 c0 9f e5\n0f f0 8c e0\n'
p2588
S'.text:000380e4\n.text:000380e8\n'
p2589
tp2590
sS'lame_get_interChRatio'
p2591
(S'\n__stdcall lame_get_interChRatio()\n'
p2592
V\u000avoid lame_get_interChRatio(void)\u000a\u000a{\u000a  (*(lame_set_interChRatio + DAT_000381ec))();\u000a  return;\u000a}\u000a\u000a
p2593
S'ldr r12,[0x381ec]\nadd pc,r12,pc\n'
p2594
S'00 c0 9f e5\n0f f0 8c e0\n'
p2595
S'.text:000381e4\n.text:000381e8\n'
p2596
tp2597
sS'init_xrpow_core_init'
p2598
(S'\n__stdcall init_xrpow_core_init()\n'
p2599
V\u000avoid init_xrpow_core_init(int iParm1)\u000a\u000a{\u000a  *(int *)(iParm1 + DAT_00028b8c) = DAT_00028b90 + 0x28b88;\u000a  return;\u000a}\u000a\u000a
p2600
S'ldr r1,[0x00028b8c]\nldr r2,[0x00028b90]\nadd r2,pc\nstr r2,[r0,r1]\nbx lr\n'
p2601
S'02 49\n03 4a\n7a 44\n42 50\n70 47\n'
p2602
S'.text:00028b80\n.text:00028b82\n.text:00028b84\n.text:00028b86\n.text:00028b88\n'
p2603
tp2604
sS'stereo_demask'
p2605
(S'\n__stdcall stereo_demask()\n'
p2606
V\u000avoid stereo_demask(void)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __truncdfsf2();\u000a}\u000a\u000a
p2607
S'push { r4, r5, r6, r7, lr }\n'
p2608
S'f0 b5\n'
p2609
S'.text:00028ac8\n'
p2610
tp2611
sS'lame_get_noclipGainChange'
p2612
(S'\n__stdcall lame_get_noclipGainChange()\n'
p2613
V\u000aundefined4 lame_get_noclipGainChange(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f38c);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2614
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f384\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f384\nldr r0,[0x0002f38c]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2615
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 64 f8\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 62 f8\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p2616
S'.text:0002f35c\n.text:0002f35e\n.text:0002f360\n.text:0002f362\n.text:0002f364\n.text:0002f368\n.text:0002f36a\n.text:0002f36c\n.text:0002f36e\n.text:0002f370\n.text:0002f372\n.text:0002f374\n.text:0002f376\n.text:0002f378\n.text:0002f37c\n.text:0002f37e\n.text:0002f380\n.text:0002f382\n.text:0002f384\n.text:0002f386\n.text:0002f388\n'
p2617
tp2618
sS'apply_vbr_preset'
p2619
(S'\n__stdcall apply_vbr_preset()\n'
p2620
V\u000avoid apply_vbr_preset(undefined4 uParm1,int iParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  \u000a  iVar1 = lame_get_VBR();\u000a  iVar2 = DAT_00024b08 + 0x2481c;\u000a  if ((iVar1 != 1) && (iVar1 != 4)) {\u000a    iVar2 = DAT_00024b0c + 0x2482a;\u000a  }\u000a  iVar1 = iVar2 + iParm2 * 0x44;\u000a  uVar3 = *(undefined4 *)(iVar1 + 0x54);\u000a  uVar4 = *(undefined4 *)(iVar1 + 0x10);\u000a  lame_set_VBR_q(uParm1,*(undefined4 *)(iVar2 + iParm2 * 0x44));\u000a                    /* WARNING: Subroutine does not return */\u000a  __subsf3(uVar3,uVar4);\u000a}\u000a\u000a
p2621
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x7c\npush { r2 }\npop { r6 }\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038200\nldr r1,[0x00024b08]\nadd r1,pc\ncmp r0,#0x1\nbeq 0x0002482a\nstr r6,[sp,#0x74]\ncmp r0,#0x4\nbeq 0x0002482c\nldr r1,[0x00024b0c]\nadd r1,pc\nb 0x0002482c\nstr r6,[sp,#0x74]\nmov r0,#0x44\nmul r0,r4\nstr r4,[sp,#0x8]\nadd r2,r1,r0\nldr r3,[r2,#0x24]\nstr r3,[sp,#0x34]\nldr r3,[r2,#0x28]\nstr r3,[sp,#0x44]\nldr r3,[r2,#0x2c]\nstr r3,[sp,#0x70]\nldr r3,[r2,#0x34]\nstr r3,[sp,#0x6c]\nldr r3,[r2,#0x38]\nstr r3,[sp,#0x50]\nldr r3,[r2,#0x3c]\nstr r3,[sp,#0x64]\nldr r3,[r2,#0x40]\nstr r3,[sp,#0x60]\nldr r3,[r2,#0x30]\nstr r3,[sp,#0x68]\nldr r3,[r2,#0xc]\nstr r3,[sp,#0x5c]\nldr r3,[r2,#0x8]\nstr r3,[sp,#0x10]\n'
p2622
S'f0 b5\n03 af\n9f b0\n04 b4\n40 bc\n02 b4\n10 bc\n01 b4\n20 bc\n13 f0 f5 fc\nbc 49\n79 44\n01 28\n05 d0\n1d 96\n04 28\n03 d0\nb9 49\n79 44\n00 e0\n1d 96\n44 20\n60 43\n02 94\n0a 18\n53 6a\n0d 93\n93 6a\n11 93\nd3 6a\n1c 93\n53 6b\n1b 93\n93 6b\n14 93\nd3 6b\n19 93\n13 6c\n18 93\n13 6b\n1a 93\nd3 68\n17 93\n93 68\n04 93\n'
p2623
S'.text:00024800\n.text:00024802\n.text:00024804\n.text:00024806\n.text:00024808\n.text:0002480a\n.text:0002480c\n.text:0002480e\n.text:00024810\n.text:00024812\n.text:00024816\n.text:00024818\n.text:0002481a\n.text:0002481c\n.text:0002481e\n.text:00024820\n.text:00024822\n.text:00024824\n.text:00024826\n.text:00024828\n.text:0002482a\n.text:0002482c\n.text:0002482e\n.text:00024830\n.text:00024832\n.text:00024834\n.text:00024836\n.text:00024838\n.text:0002483a\n.text:0002483c\n.text:0002483e\n.text:00024840\n.text:00024842\n.text:00024844\n.text:00024846\n.text:00024848\n.text:0002484a\n.text:0002484c\n.text:0002484e\n.text:00024850\n.text:00024852\n.text:00024854\n.text:00024856\n.text:00024858\n.text:0002485a\n'
p2624
tp2625
sS'lame_get_strict_ISO'
p2626
(S'\n__stdcall lame_get_strict_ISO(lame_global_flags * gfp)\n'
p2627
V\u000aint lame_get_strict_ISO(lame_global_flags *gfp)\u000a\u000a{\u000a  byte *pbVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  byte *__ptr;\u000a  undefined4 unaff_r4;\u000a  undefined4 unaff_r5;\u000a  uint unaff_r6;\u000a  uint uStack00000004;\u000a  uint in_stack_00000008;\u000a  \u000a  uStack00000004 = ~unaff_r6;\u000a  if (__ptr != (byte *)0x0) {\u000a    uVar3 = lame_get_id3v2_tag(unaff_r5,__ptr,in_stack_00000008);\u000a    uVar2 = uVar3;\u000a    pbVar1 = __ptr;\u000a    if (uVar3 <= in_stack_00000008) {\u000a      while (uStack00000004 = uVar2, uVar3 != 0) {\u000a        add_dummy_byte(unaff_r4,(uint)*pbVar1,1);\u000a        uVar3 = uVar3 - 1;\u000a        uVar2 = uStack00000004;\u000a        pbVar1 = pbVar1 + 1;\u000a      }\u000a    }\u000a    free(__ptr);\u000a  }\u000a  return uStack00000004;\u000a}\u000a\u000a
p2628
S'mvn r0,r6\ncmp r1,#0x0\nbeq 0x0001e568\nstr r0,[sp,#0x4]\npush { r5 }\npop { r0 }\npush { r1 }\npop { r5 }\nldr r6,[sp,#0x8]\npush { r6 }\npop { r2 }\nbl 0x00037d60\n'
p2629
S'f0 43\n00 29\n22 d0\n01 90\n20 b4\n01 bc\n02 b4\n20 bc\n02 9e\n40 b4\n04 bc\n19 f0 15 fc\n'
p2630
S'.text:0001e51c\n.text:0001e51e\n.text:0001e520\n.text:0001e522\n.text:0001e524\n.text:0001e526\n.text:0001e528\n.text:0001e52a\n.text:0001e52c\n.text:0001e52e\n.text:0001e530\n.text:0001e532\n'
p2631
tp2632
sS'reduce_side'
p2633
(S'\n__stdcall reduce_side()\n'
p2634
V\u000avoid reduce_side(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038310 + DAT_0003830c))();\u000a  return;\u000a}\u000a\u000a
p2635
S'ldr r12,[0x3830c]\nadd pc,r12,pc\n'
p2636
S'00 c0 9f e5\n0f f0 8c e0\n'
p2637
S'.text:00038304\n.text:00038308\n'
p2638
tp2639
sS'__aeabi_dcmpeq'
p2640
(S'\n__stdcall __aeabi_dcmpeq()\n'
p2641
V\u000auint __aeabi_dcmpeq(void)\u000a\u000a{\u000a  byte in_ZR;\u000a  \u000a  __aeabi_cdcmple();\u000a  return (uint)in_ZR;\u000a}\u000a\u000a
p2642
S'str lr,[sp,#-0x8]!\nbl 0x00016b64\nmoveq r0,#0x1\nmovne r0,#0x0\nldr pc,[sp],#0x8\n'
p2643
S'08 e0 2d e5\n0d 84 ff eb\n01 00 a0 03\n00 00 a0 13\n08 f0 9d e4\n'
p2644
S'.text:00035b24\n.text:00035b28\n.text:00035b2c\n.text:00035b30\n.text:00035b34\n'
p2645
tp2646
sS'lame_get_short_threshold_lrm'
p2647
(S'\n__stdcall lame_get_short_threshold_lrm()\n'
p2648
V\u000avoid lame_get_short_threshold_lrm(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038120 + DAT_0003811c))();\u000a  return;\u000a}\u000a\u000a
p2649
S'ldr r12,[0x3811c]\nadd pc,r12,pc\n'
p2650
S'00 c0 9f e5\n0f f0 8c e0\n'
p2651
S'.text:00038114\n.text:00038118\n'
p2652
tp2653
sS'__aeabi_memclr'
p2654
(S'\n__stdcall __aeabi_memclr()\n'
p2655
V\u000avoid __aeabi_memclr(void)\u000a\u000a{\u000a  (*(lame_get_id3v2_tag + DAT_00037d5c))();\u000a  return;\u000a}\u000a\u000a
p2656
S'ldr r12,[0x37d5c]\nadd pc,r12,pc\n'
p2657
S'00 c0 9f e5\n0f f0 8c e0\n'
p2658
S'.text:00037d54\n.text:00037d58\n'
p2659
tp2660
sS'lame_get_allow_diff_short'
p2661
(S'\n__stdcall lame_get_allow_diff_short()\n'
p2662
V\u000aundefined4 lame_get_allow_diff_short(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if ((iVar1 != 0) && (uVar2 = 1, *(int *)(iParm1 + 0xf0) != 0)) {\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2663
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002edc2\nmov r0,#0xf0\nldr r2,[r4,r0]\nmov r0,#0x1\nmov r1,#0x0\ncmp r2,#0x0\nbeq 0x0002edc2\npush { r1 }\npop { r0 }\npop { r4, r6, r7, pc }\n'
p2664
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 44 fb\n01 b4\n02 bc\n00 20\n00 29\n07 d0\nf0 20\n22 58\n01 20\n00 21\n00 2a\n01 d0\n02 b4\n01 bc\nd0 bd\n'
p2665
S'.text:0002ed9c\n.text:0002ed9e\n.text:0002eda0\n.text:0002eda2\n.text:0002eda4\n.text:0002eda8\n.text:0002edaa\n.text:0002edac\n.text:0002edae\n.text:0002edb0\n.text:0002edb2\n.text:0002edb4\n.text:0002edb6\n.text:0002edb8\n.text:0002edba\n.text:0002edbc\n.text:0002edbe\n.text:0002edc0\n.text:0002edc2\n'
p2666
tp2667
sS'__addsf3'
p2668
(S'\n__stdcall __addsf3()\n'
p2669
V\u000avoid __addsf3(void)\u000a\u000a{\u000a  (*(__aeabi_fcmpgt + DAT_00037a7c))();\u000a  return;\u000a}\u000a\u000a
p2670
S'ldr r12,[0x37a7c]\nadd pc,r12,pc\n'
p2671
S'00 c0 9f e5\n0f f0 8c e0\n'
p2672
S'.text:00037a74\n.text:00037a78\n'
p2673
tp2674
sS'L3psycho_anal_vbr'
p2675
(S'\n__stdcall L3psycho_anal_vbr()\n'
p2676
V\u000avoid L3psycho_anal_vbr(void)\u000a\u000a{\u000a  (*(__addsf3 + DAT_00037a6c))();\u000a  return;\u000a}\u000a\u000a
p2677
S'ldr r12,[0x37a6c]\nadd pc,r12,pc\n'
p2678
S'00 c0 9f e5\n0f f0 8c e0\n'
p2679
S'.text:00037a64\n.text:00037a68\n'
p2680
tp2681
sS'lame_set_padding_type'
p2682
(S'\n__stdcall lame_set_padding_type(lame_global_flags * gfp, Padding_type padding_type)\n'
p2683
V\u000aint lame_set_padding_type(lame_global_flags *gfp,Padding_type padding_type)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (padding_type != PAD_NO) {\u000a    iVar1 = *(int *)(padding_type + 0x10);\u000a    gfp = (lame_global_flags *)0xa;\u000a    if (iVar1 != 0) {\u000a      if (*(int *)(padding_type + 0x14) == 1) {\u000a        gfp = (lame_global_flags *)(iVar1 * 2 + 0xd);\u000a      }\u000a      else {\u000a        gfp = (lame_global_flags *)(iVar1 + 0xc);\u000a      }\u000a    }\u000a    iVar1 = *(int *)(padding_type + 0x1c);\u000a    if (iVar1 != 0) {\u000a      if (*(int *)(padding_type + 0x20) != 1) {\u000a        return (int)&gfp->class_id + iVar1;\u000a      }\u000a      gfp = (lame_global_flags *)((int)&gfp->attackthre_s + iVar1 + 3);\u000a    }\u000a  }\u000a  return (int)gfp;\u000a}\u000a\u000a
p2684
S'cmp r1,#0x0\nbeq 0x0001e4d8\n'
p2685
S'00 29\n14 d0\n'
p2686
S'.text:0001e4aa\n.text:0001e4ac\n'
p2687
tp2688
sS'malloc_aligned'
p2689
(S'\n__stdcall malloc_aligned(aligned_pointer_t * ptr, uint size, uint bytes)\n'
p2690
V\u000avoid malloc_aligned(aligned_pointer_t *ptr,uint size,uint bytes)\u000a\u000a{\u000a  lame_encode_buffer_template(ptr,size,size + 2,bytes);\u000a  return;\u000a}\u000a\u000a
p2691
S'sub sp,#0x18\npush { r2 }\npop { r4 }\nmov r2,#0x7f\nlsl r2,r2,#0x17\nmov r5,sp\nstr r2,[r5,#0x10]\nmov r2,#0x2\nstr r2,[r5,#0xc]\nmov r2,#0x0\nstr r2,[r5,#0x8]\nldr r2,[sp,#0x28]\nstr r2,[r5,#0x4]\nstr r3,[r5,#0x0]\nadd r2,r1,#0x2\npush { r4 }\npop { r3 }\nbl 0x00020d30\nadd sp,#0x18\npop { r4, r5, r7, pc }\n'
p2692
S'86 b0\n04 b4\n10 bc\n7f 22\nd2 05\n6d 46\n2a 61\n02 22\nea 60\n00 22\naa 60\n0a 9a\n6a 60\n2b 60\n8a 1c\n10 b4\n08 bc\nff f7 81 fd\n06 b0\nb0 bd\n'
p2693
S'.text:00021208\n.text:0002120a\n.text:0002120c\n.text:0002120e\n.text:00021210\n.text:00021212\n.text:00021214\n.text:00021216\n.text:00021218\n.text:0002121a\n.text:0002121c\n.text:0002121e\n.text:00021220\n.text:00021222\n.text:00021224\n.text:00021226\n.text:00021228\n.text:0002122a\n.text:0002122e\n.text:00021230\n'
p2694
tp2695
sS'__aeabi_dcmpge'
p2696
(S'\n__stdcall __aeabi_dcmpge()\n'
p2697
V\u000auint __aeabi_dcmpge(void)\u000a\u000a{\u000a  bool in_ZR;\u000a  bool in_CY;\u000a  \u000a  __aeabi_cdrcmple();\u000a  return (uint)(!in_CY || in_ZR);\u000a}\u000a\u000a
p2698
S'str lr,[sp,#-0x8]!\nbl 0x00016b70\nmovls r0,#0x1\nmovhi r0,#0x0\nldr pc,[sp],#0x8\n'
p2699
S'08 e0 2d e5\n01 84 ff eb\n01 00 a0 93\n00 00 a0 83\n08 f0 9d e4\n'
p2700
S'.text:00035b60\n.text:00035b64\n.text:00035b68\n.text:00035b6c\n.text:00035b70\n'
p2701
tp2702
sS'__gnu_Unwind_ForcedUnwind'
p2703
(S'\n__stdcall __gnu_Unwind_ForcedUnwind()\n'
p2704
V\u000avoid __gnu_Unwind_ForcedUnwind(int iParm1,undefined4 uParm2,undefined4 uParm3,int iParm4)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  \u000a  *(undefined4 *)(iParm1 + 0x18) = uParm3;\u000a  uVar1 = *(undefined4 *)(iParm4 + 0x3c);\u000a  *(undefined4 *)(iParm1 + 0xc) = uParm2;\u000a  *(undefined4 *)(iParm4 + 0x40) = uVar1;\u000a  unwind_phase2_forced(iParm1,iParm4,0);\u000a  return;\u000a}\u000a\u000a
p2705
S'str r2,[r0,#0x18]\nldr r2,[r3,#0x3c]\nstr r1,[r0,#0xc]\nstr r2,[r3,#0x40]\ncpy r1,r3\nmov r2,#0x0\nb 0x000366c0\n'
p2706
S'18 20 80 e5\n3c 20 93 e5\n0c 10 80 e5\n40 20 83 e5\n03 10 a0 e1\n00 20 a0 e3\n83 ff ff ea\n'
p2707
S'.text:00036894\n.text:00036898\n.text:0003689c\n.text:000368a0\n.text:000368a4\n.text:000368a8\n.text:000368ac\n'
p2708
tp2709
sS'lame_set_nogap_total'
p2710
(S'\n__stdcall lame_set_nogap_total(lame_global_flags * gfp, int the_nogap_total)\n'
p2711
V\u000aint lame_set_nogap_total(lame_global_flags *gfp,int the_nogap_total)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar1;\u000a  undefined uVar2;\u000a  undefined *puVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  int in_r2;\u000a  int iVar7;\u000a  uint uVar8;\u000a  undefined *puVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  uint uVar12;\u000a  undefined *unaff_r6;\u000a  bool in_NG;\u000a  bool in_ZR;\u000a  char in_OV;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    uVar2 = (undefined)the_nogap_total;\u000a    puVar1 = unaff_r6;\u000a    if (in_ZR || in_NG != (bool)in_OV) {\u000a      unaff_r6[8] = uVar2;\u000a      unaff_r6[9] = uVar2;\u000a      puVar1 = unaff_r6 + 10;\u000a      if (in_stack_00000028[4] != 0) {\u000a        if (in_stack_00000028[5] == 1) {\u000a          uVar2 = 1;\u000a        }\u000a        unaff_r6[10] = uVar2;\u000a        puVar1 = unaff_r6 + 0xb;\u000a        if (in_stack_00000028[5] == 1) {\u000a          puVar1 = (undefined *)writeUcs2s(puVar1,in_stack_00000028[3],in_stack_00000028[4]);\u000a          *puVar1 = 0;\u000a          puVar1[1] = 0;\u000a          puVar1 = puVar1 + 2;\u000a        }\u000a        else {\u000a          iVar4 = in_stack_00000028[4];\u000a          if (iVar4 != 0) {\u000a            puVar3 = (undefined *)in_stack_00000028[3];\u000a            iVar6 = iVar4;\u000a            puVar9 = puVar1;\u000a            do {\u000a              *puVar9 = *puVar3;\u000a              puVar9 = puVar9 + 1;\u000a              puVar3 = puVar3 + 1;\u000a              iVar6 = iVar6 + -1;\u000a            } while (iVar6 != 0);\u000a            puVar1 = puVar1 + iVar4;\u000a          }\u000a          *puVar1 = 0;\u000a          puVar1 = puVar1 + 1;\u000a        }\u000a      }\u000a      if (in_stack_00000028[8] == 1) {\u000a        puVar1 = (undefined *)writeLoBytes(puVar1,in_stack_00000028[6],in_stack_00000028[7]);\u000a      }\u000a      else {\u000a        iVar4 = in_stack_00000028[7];\u000a        if (iVar4 != 0) {\u000a          puVar3 = (undefined *)in_stack_00000028[6];\u000a          iVar6 = iVar4;\u000a          puVar9 = puVar1;\u000a          do {\u000a            *puVar9 = *puVar3;\u000a            puVar9 = puVar9 + 1;\u000a            puVar3 = puVar3 + 1;\u000a            iVar6 = iVar6 + -1;\u000a          } while (iVar6 != 0);\u000a          puVar1 = puVar1 + iVar4;\u000a        }\u000a      }\u000aLAB_0001e09a:\u000a      do {\u000a        while( true ) {\u000a          in_stack_00000028 = (int *)*in_stack_00000028;\u000a          if (in_stack_00000028 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar4 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar10 = DAT_0001e49c,\u000a                 *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a                do {\u000a                  puVar1[iVar4 + -1] = (char)uVar10;\u000a                  iVar4 = iVar4 + -1;\u000a                  uVar10 = uVar10 >> 8;\u000a                } while (0 < iVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(puVar1,(in_stack_0000002c + in_stack_00000018) - (int)puVar1);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar10 = in_stack_00000028[1];\u000a          uVar12 = 0xff;\u000a          iVar4 = 4;\u000a          if ((uVar10 != DAT_0001e494) && (uVar5 = in_stack_00000030, uVar10 != DAT_0001e498))\u000a          break;\u000a          iVar4 = in_stack_00000028[4] * 2 + 0x10;\u000a          if (in_stack_00000028[5] != 1) {\u000a            iVar4 = in_stack_00000028[4] + 0xf;\u000a          }\u000a          iVar6 = 0;\u000a          if (in_stack_00000028[8] == 1) {\u000a            iVar6 = in_stack_00000028[8];\u000a          }\u000a          uVar12 = (in_stack_00000028[7] << iVar6) + iVar4;\u000a          iVar4 = 4;\u000a          if (10 < uVar12) {\u000a            do {\u000a              puVar1[iVar4 + -1] = (char)uVar10;\u000a              iVar4 = iVar4 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar4);\u000a            uVar12 = uVar12 - 10;\u000a            iVar4 = 4;\u000a            do {\u000a              puVar1[iVar4 + 3] = (char)uVar12;\u000a              iVar4 = iVar4 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar4);\u000a            puVar1[8] = 0;\u000a            puVar1[9] = 0;\u000a            *(bool *)(puVar1 + 10) = in_stack_00000028[8] == 1;\u000a            puVar1[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a            puVar1[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a            puVar1[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a            puVar1 = puVar1 + 0xe;\u000a            if (in_stack_00000028[5] == 1) {\u000a              gfp_00 = (lame_global_flags *)\u000a                       writeUcs2s(puVar1,in_stack_00000028[3],in_stack_00000028[4]);\u000a              *(undefined *)&gfp_00->class_id = 0;\u000a              *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a              iVar4 = lame_get_ReplayGain_input(gfp_00);\u000a              return iVar4;\u000a            }\u000a            iVar4 = in_stack_00000028[4];\u000a            if (iVar4 != 0) {\u000a              puVar3 = (undefined *)in_stack_00000028[3];\u000a              iVar6 = iVar4;\u000a              puVar9 = puVar1;\u000a              do {\u000a                *puVar9 = *puVar3;\u000a                puVar9 = puVar9 + 1;\u000a                puVar3 = puVar3 + 1;\u000a                iVar6 = iVar6 + -1;\u000a              } while (iVar6 != 0);\u000a              puVar1 = puVar1 + iVar4;\u000a            }\u000a            *puVar1 = 0;\u000a            puVar1 = puVar1 + 1;\u000a            if (in_stack_00000028[8] == 1) {\u000aLAB_0001e338:\u000a              puVar1 = (undefined *)writeUcs2s(puVar1,in_stack_00000028[6],in_stack_00000028[7]);\u000a            }\u000a            else {\u000a              iVar4 = in_stack_00000028[7];\u000a              if (iVar4 != 0) {\u000a                puVar3 = (undefined *)in_stack_00000028[6];\u000a                iVar6 = iVar4;\u000a                puVar9 = puVar1;\u000a                do {\u000a                  *puVar9 = *puVar3;\u000a                  puVar9 = puVar9 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar6 = iVar6 + -1;\u000a                } while (iVar6 != 0);\u000aLAB_0001e36a:\u000a                puVar1 = puVar1 + iVar4;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        do {\u000a          uVar8 = uVar12 & 0x57000000;\u000a          uVar11 = in_stack_00000030;\u000a          if (uVar8 != (uVar12 & uVar10)) {\u000a            uVar11 = uVar12 & uVar10;\u000a          }\u000a          if (uVar8 == 0) {\u000a            uVar11 = uVar8;\u000a          }\u000a          uVar5 = uVar5 | uVar11;\u000a          iVar4 = iVar4 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar4 != 0);\u000a        if (uVar5 != 0) {\u000a          iVar4 = in_stack_00000028[7];\u000a          iVar6 = in_stack_00000028[4];\u000a          if (in_stack_00000028[8] == 1) {\u000a            iVar7 = iVar6 * 2 + 0xd;\u000a            if (iVar6 == 0) {\u000a              iVar7 = 0xb;\u000a            }\u000a            iVar4 = iVar4 << 1;\u000a          }\u000a          else {\u000a            iVar7 = iVar6 + 0xc;\u000a            if (iVar6 == 0) {\u000a              iVar7 = 0xb;\u000a            }\u000a          }\u000a          iVar6 = 4;\u000a          if (10 < (uint)(iVar7 + iVar4)) {\u000a            do {\u000a              puVar1[iVar6 + -1] = (char)uVar10;\u000a              iVar6 = iVar6 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar6);\u000a            uVar10 = (iVar7 + iVar4) - 10;\u000a            iVar4 = 4;\u000a            do {\u000a              puVar1[iVar4 + 3] = (char)uVar10;\u000a              iVar4 = iVar4 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar4);\u000a            puVar1[8] = 0;\u000a            puVar1[9] = 0;\u000a            *(bool *)(puVar1 + 10) = in_stack_00000028[8] == 1;\u000a            puVar1 = puVar1 + 0xb;\u000a            iVar4 = in_stack_00000028[4];\u000a            if (iVar4 != 0) {\u000a              if (in_stack_00000028[5] == 1) {\u000a                puVar1 = (undefined *)writeUcs2s(puVar1,in_stack_00000028[3]);\u000a                *puVar1 = 0;\u000a                puVar1[1] = 0;\u000a                puVar1 = puVar1 + 2;\u000a              }\u000a              else {\u000a                puVar3 = (undefined *)in_stack_00000028[3];\u000a                iVar6 = iVar4;\u000a                puVar9 = puVar1;\u000a                do {\u000a                  *puVar9 = *puVar3;\u000a                  puVar9 = puVar9 + 1;\u000a                  puVar3 = puVar3 + 1;\u000a                  iVar6 = iVar6 + -1;\u000a                } while (iVar6 != 0);\u000a                puVar1[iVar4] = 0;\u000a                puVar1 = puVar1 + iVar4 + 1;\u000a              }\u000a            }\u000a            if (in_stack_00000028[8] == 1) goto LAB_0001e338;\u000a            iVar4 = in_stack_00000028[7];\u000a            if (iVar4 != 0) {\u000a              puVar3 = (undefined *)in_stack_00000028[6];\u000a              iVar6 = iVar4;\u000a              puVar9 = puVar1;\u000a              do {\u000a                *puVar9 = *puVar3;\u000a                puVar9 = puVar9 + 1;\u000a                puVar3 = puVar3 + 1;\u000a                iVar6 = iVar6 + -1;\u000a              } while (iVar6 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a          goto LAB_0001e09a;\u000a        }\u000a        uVar12 = sizeOfWxxxNode(in_stack_00000028);\u000a        iVar4 = 4;\u000a      } while (uVar12 < 0xb);\u000a      do {\u000a        the_nogap_total = 0;\u000a        puVar1[iVar4 + -1] = (char)uVar10;\u000a        iVar4 = iVar4 + -1;\u000a        uVar10 = uVar10 >> 8;\u000a      } while (0 < iVar4);\u000a      gfp = (lame_global_flags *)(uVar12 - 10);\u000a      in_r2 = 4;\u000a    }\u000a    puVar1[in_r2 + 3] = (char)gfp;\u000a    in_r2 = in_r2 + -1;\u000a    gfp = (lame_global_flags *)((uint)gfp >> 8);\u000a    in_NG = in_r2 < 0;\u000a    in_ZR = in_r2 == 0;\u000a    in_OV = 0;\u000a    unaff_r6 = puVar1;\u000a  } while( true );\u000a}\u000a\u000a
p2712
S'bgt 0x0001e25a\nstrb r1,[r6,#0x8]\nstrb r1,[r6,#0x9]\npush { r6 }\npop { r0 }\nadd r0,#0xa\nldr r5,[sp,#0x28]\nldr r2,[r5,#0x10]\ncmp r2,#0x0\nbne 0x0001e27a\nb 0x0001e394\nldr r0,[r5,#0x14]\ncmp r0,#0x1\nbne 0x0001e284\npush { r0 }\npop { r1 }\nstrb r1,[r6,#0xa]\nadd r6,#0xb\n'
p2713
S'f9 dc\n31 72\n71 72\n40 b4\n01 bc\n0a 30\n0a 9d\n2a 69\n00 2a\n00 d1\n8c e0\n68 69\n01 28\n01 d1\n01 b4\n02 bc\nb1 72\n0b 36\n'
p2714
S'.text:0001e264\n.text:0001e266\n.text:0001e268\n.text:0001e26a\n.text:0001e26c\n.text:0001e26e\n.text:0001e270\n.text:0001e272\n.text:0001e274\n.text:0001e276\n.text:0001e278\n.text:0001e27a\n.text:0001e27c\n.text:0001e27e\n.text:0001e280\n.text:0001e282\n.text:0001e284\n.text:0001e286\n'
p2715
tp2716
sS'trancate_smallspectrums'
p2717
(S'\n__stdcall trancate_smallspectrums()\n'
p2718
V\u000avoid trancate_smallspectrums(int iParm1,int iParm2,undefined4 uParm3,int iParm4)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  size_t __nmemb;\u000a  int local_108;\u000a  undefined auStack204 [24];\u000a  undefined4 auStack180 [39];\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_00029988 + 0x295ea);\u000a  if ((((*(uint *)(iParm1 + DAT_0002998c) & 4) != 0) || (*(int *)(iParm2 + DAT_00029990) != 2)) &&\u000a     ((*(uint *)(iParm1 + DAT_0002998c) & 0x80) == 0)) {\u000a    calc_noise(iParm2,uParm3,auStack180,auStack204,0);\u000a    iVar3 = 0;\u000a    do {\u000a      uVar5 = 0;\u000a      if (*(int *)(iParm2 + 0x900 + iVar3) != 0) {\u000a        uVar5 = DAT_00029994 & *(uint *)(iParm2 + iVar3);\u000a      }\u000a      *(uint *)(iParm4 + iVar3) = uVar5;\u000a      iVar3 = iVar3 + 4;\u000a    } while (iVar3 != 0x900);\u000a    iVar3 = 6;\u000a    if (*(int *)(iParm2 + DAT_00029990) != 2) {\u000a      iVar3 = 8;\u000a    }\u000a    local_108 = 0;\u000a    do {\u000a      __nmemb = *(size_t *)(iParm2 + iVar3 * 4 + DAT_00029998);\u000a      iVar4 = __nmemb + local_108;\u000a      iVar1 = __aeabi_fcmpge(auStack180[iVar3],0x3f800000);\u000a      if (iVar1 == 0) {\u000a        qsort((void *)(iParm4 + local_108 * 4),__nmemb,4,(__compar_fn_t)(DAT_000299a8 + 0x296b4));\u000a        uVar5 = *(uint *)(iVar4 * 4 + iParm4 + -4);\u000a        __aeabi_fcmpeq(uVar5,0);\u000a        __unordsf2(uVar5,0);\u000a                    /* WARNING: Subroutine does not return */\u000a        __extendsfdf2(DAT_00029994 & uVar5);\u000a      }\u000a      iVar3 = iVar3 + 1;\u000a      local_108 = iVar4;\u000a    } while (iVar3 < *(int *)(iParm2 + 0x1300));\u000a    uVar2 = noquant_count_bits(iParm1,iParm2,0);\u000a    *(undefined4 *)(iParm2 + 0x12a0) = uVar2;\u000a  }\u000a  if (**(int **)(DAT_000299a4 + 0x29974) != local_18) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return;\u000a}\u000a\u000a
p2719
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x124\nstr r3,[sp,#0x38]\nstr r2,[sp,#0xc]\npush { r1 }\npop { r5 }\nstr r5,[sp,#0x20]\nldr r1,[0x00029988]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x120]\nldr r1,[0x0002998c]\nldr r2,[r0,r1]\nmov r1,#0x4\ntst r2,r1\nbne 0x0002960c\nmov r1,#0x80\nand r2,r1\nldr r1,[0x00029990]\nldr r1,[r5,r1]\ncmp r1,#0x2\nbne 0x00029606\nb 0x0002996e\ncmp r2,#0x0\nbeq 0x00029614\nb 0x0002996e\nmov r1,#0x80\ntst r2,r1\nbeq 0x00029614\nb 0x0002996e\nstr r0,[sp,#0x8]\nmov r4,#0x0\nmov r0,sp\nstr r4,[r0,#0x0]\nadd r2,sp,#0x84\nadd r3,sp,#0x6c\npush { r5 }\npop { r0 }\nldr r1,[sp,#0xc]\nbl 0x00038330\nmov r0,#0x9\nlsl r6,r0,#0x8\nadd r0,r5,r6\npush { r4 }\npop { r1 }\nldr r2,[r0,r1]\ncmp r2,#0x0\npush { r4 }\npop { r2 }\nbeq 0x00029644\nldr r3,[r5,r1]\nldr r2,[0x00029994]\nand r2,r3\nldr r3,[sp,#0x38]\nstr r2,[r3,r1]\nadd r1,#0x4\ncmp r1,r6\nbne 0x00029634\nstr r6,[sp,#0x14]\nldr r0,[0x00029990]\nldr r1,[r5,r0]\nmov r2,#0x6\nmov r0,#0x8\ncmp r1,#0x2\nbeq 0x00029660\npush { r0 }\npop { r2 }\nmov r0,#0x13\nlsl r0,r0,#0x8\nadd r0,r5,r0\nstr r0,[sp,#0x1c]\nldr r0,[sp,#0x38]\nadd r0,#0x4\nstr r0,[sp,#0x24]\nmov r0,#0x0\nstr r0,[sp,#0x30]\nstr r2,[sp,#0x28]\nldr r3,[sp,#0x30]\nstr r3,[sp,#0x34]\nlsl r4,r2,#0x2\nstr r4,[sp,#0x68]\nadd r0,sp,#0x84\nadd r1,r0,r4\nstr r1,[sp,#0x64]\nadd r1,r5,r4\nldr r2,[0x00029998]\nldr r5,[r1,r2]\nadd r1,r5,r3\nstr r1,[sp,#0x30]\nldr r0,[r0,r4]\nmov r1,#0x7f\nlsl r1,r1,#0x17\nbl 0x00037ab0\ncmp r0,#0x0\nbeq 0x0002969c\nb 0x0002994c\nldr r0,[sp,#0x34]\nlsl r0,r0,#0x2\nstr r0,[sp,#0x10]\nldr r4,[sp,#0x38]\nadd r0,r4,r0\nmov r2,#0x4\npush { r5 }\npop { r1 }\nstr r5,[sp,#0x4c]\nldr r3,[0x000299a8]\nadd r3,pc\nbl 0x00038340\nldr r0,[sp,#0x30]\nlsl r0,r0,#0x2\nadd r0,r0,r4\nmov r1,#0x3\nmvn r1,r1\nstr r1,[sp,#0x18]\nldr r4,[r0,r1]\nmov r5,#0x0\npush { r4 }\npop { r0 }\npush { r5 }\npop { r1 }\nbl 0x00037de0\npush { r0 }\npop { r6 }\npush { r4 }\npop { r0 }\npush { r5 }\npop { r1 }\nbl 0x00037df0\npush { r0 }\npop { r5 }\norr r5,r6\nldr r0,[0x00029994]\nand r0,r4\nbl 0x00037ac0\n'
p2720
S'f0 b5\n03 af\nc9 b0\n0e 93\n03 92\n02 b4\n20 bc\n08 95\ne8 49\n79 44\n09 68\n09 68\n48 91\ne7 49\n42 58\n04 21\n0a 42\n09 d1\n80 21\n0a 40\ne4 49\n69 58\n02 29\n00 d1\nb3 e1\n00 2a\n04 d0\nb0 e1\n80 21\n0a 42\n00 d0\nac e1\n02 90\n00 24\n68 46\n04 60\n21 aa\n1b ab\n20 b4\n01 bc\n03 99\n0e f0 83 fe\n09 20\n06 02\na8 19\n10 b4\n02 bc\n42 58\n00 2a\n10 b4\n04 bc\n02 d0\n6b 58\nd4 4a\n1a 40\n0e 9b\n5a 50\n04 31\nb1 42\nf2 d1\n05 96\ncf 48\n29 58\n06 22\n08 20\n02 29\n01 d0\n01 b4\n04 bc\n13 20\n00 02\n28 18\n07 90\n0e 98\n04 30\n09 90\n00 20\n0c 90\n0a 92\n0c 9b\n0d 93\n94 00\n1a 94\n21 a8\n01 19\n19 91\n29 19\nc4 4a\n8d 58\ne9 18\n0c 91\n00 59\n7f 21\nc9 05\n0e f0 0d fa\n00 28\n00 d0\n57 e1\n0d 98\n80 00\n04 90\n0e 9c\n20 18\n04 22\n20 b4\n02 bc\n13 95\nbe 4b\n7b 44\n0e f0 45 fe\n0c 98\n80 00\n00 19\n03 21\nc9 43\n06 91\n44 58\n00 25\n10 b4\n01 bc\n20 b4\n02 bc\n0e f0 87 fb\n01 b4\n40 bc\n10 b4\n01 bc\n20 b4\n02 bc\n0e f0 87 fb\n01 b4\n20 bc\n35 43\naa 48\n20 40\n0e f0 e8 f9\n'
p2721
S'.text:000295d4\n.text:000295d6\n.text:000295d8\n.text:000295da\n.text:000295dc\n.text:000295de\n.text:000295e0\n.text:000295e2\n.text:000295e4\n.text:000295e6\n.text:000295e8\n.text:000295ea\n.text:000295ec\n.text:000295ee\n.text:000295f0\n.text:000295f2\n.text:000295f4\n.text:000295f6\n.text:000295f8\n.text:000295fa\n.text:000295fc\n.text:000295fe\n.text:00029600\n.text:00029602\n.text:00029604\n.text:00029606\n.text:00029608\n.text:0002960a\n.text:0002960c\n.text:0002960e\n.text:00029610\n.text:00029612\n.text:00029614\n.text:00029616\n.text:00029618\n.text:0002961a\n.text:0002961c\n.text:0002961e\n.text:00029620\n.text:00029622\n.text:00029624\n.text:00029626\n.text:0002962a\n.text:0002962c\n.text:0002962e\n.text:00029630\n.text:00029632\n.text:00029634\n.text:00029636\n.text:00029638\n.text:0002963a\n.text:0002963c\n.text:0002963e\n.text:00029640\n.text:00029642\n.text:00029644\n.text:00029646\n.text:00029648\n.text:0002964a\n.text:0002964c\n.text:0002964e\n.text:00029650\n.text:00029652\n.text:00029654\n.text:00029656\n.text:00029658\n.text:0002965a\n.text:0002965c\n.text:0002965e\n.text:00029660\n.text:00029662\n.text:00029664\n.text:00029666\n.text:00029668\n.text:0002966a\n.text:0002966c\n.text:0002966e\n.text:00029670\n.text:00029672\n.text:00029674\n.text:00029676\n.text:00029678\n.text:0002967a\n.text:0002967c\n.text:0002967e\n.text:00029680\n.text:00029682\n.text:00029684\n.text:00029686\n.text:00029688\n.text:0002968a\n.text:0002968c\n.text:0002968e\n.text:00029690\n.text:00029692\n.text:00029696\n.text:00029698\n.text:0002969a\n.text:0002969c\n.text:0002969e\n.text:000296a0\n.text:000296a2\n.text:000296a4\n.text:000296a6\n.text:000296a8\n.text:000296aa\n.text:000296ac\n.text:000296ae\n.text:000296b0\n.text:000296b2\n.text:000296b6\n.text:000296b8\n.text:000296ba\n.text:000296bc\n.text:000296be\n.text:000296c0\n.text:000296c2\n.text:000296c4\n.text:000296c6\n.text:000296c8\n.text:000296ca\n.text:000296cc\n.text:000296ce\n.text:000296d2\n.text:000296d4\n.text:000296d6\n.text:000296d8\n.text:000296da\n.text:000296dc\n.text:000296de\n.text:000296e2\n.text:000296e4\n.text:000296e6\n.text:000296e8\n.text:000296ea\n.text:000296ec\n'
p2722
tp2723
sS'__cxa_begin_cleanup'
p2724
(S'\n__stdcall __cxa_begin_cleanup()\n'
p2725
V\u000avoid __cxa_begin_cleanup(void)\u000a\u000a{\u000a  (*(code *)PTR___cxa_begin_cleanup_00040fcc)();\u000a  return;\u000a}\u000a\u000a
p2726
S'adr r12,0x16c44\nadd r12,r12,#0x2a000\nldr pc,[r12,#0x388]!\n'
p2727
S'00 c6 8f e2\n2a ca 8c e2\n88 f3 bc e5\n'
p2728
S'.plt:00016c3c\n.plt:00016c40\n.plt:00016c44\n'
p2729
tp2730
sS'setLameTagFrameHeader'
p2731
(S'\n__stdcall setLameTagFrameHeader()\n'
p2732
V\u000avoid setLameTagFrameHeader(int iParm1,undefined *puParm2)\u000a\u000a{\u000a  byte bVar1;\u000a  byte bVar2;\u000a  undefined4 uVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  byte bVar6;\u000a  bool bVar7;\u000a  \u000a  *puParm2 = 0xff;\u000a  bVar6 = puParm2[1];\u000a  uVar4 = (uint)bVar6 << 3 | 7;\u000a  puParm2[1] = (char)uVar4;\u000a  bVar7 = DAT_00034850 < *(int *)(iParm1 + 0x40);\u000a  puParm2[1] = (byte)(uVar4 << 1) | bVar7;\u000a  uVar4 = (*(uint *)(iParm1 + 0x10) & 1 | (((uint)bVar6 << 3 & 0xf | 7) << 1 | (uint)bVar7) << 1) <<\u000a          2 | 1;\u000a  puParm2[1] = (char)uVar4;\u000a  bVar7 = *(int *)(iParm1 + 0xa0) == 0;\u000a  bVar1 = (byte)(uVar4 << 1);\u000a  puParm2[1] = bVar1 | bVar7;\u000a  uVar4 = *(uint *)(iParm1 + DAT_00034854) & 0xf;\u000a  bVar6 = puParm2[2];\u000a  puParm2[2] = (byte)((uint)bVar6 << 4) | (byte)uVar4;\u000a  uVar4 = *(uint *)(iParm1 + 0x14) & 3 | ((uint)bVar6 << 4 & 0x1f | uVar4) << 2;\u000a  puParm2[2] = (char)(uVar4 << 1);\u000a  puParm2[2] = (byte)*(undefined4 *)(iParm1 + 0xac) & 1 | (byte)(uVar4 << 2);\u000a  uVar4 = (uint)(byte)puParm2[3] << 2 | *(uint *)(iParm1 + 0xb4) & 3;\u000a  puParm2[3] = (char)uVar4;\u000a  uVar4 = uVar4 << 2 | *(uint *)(iParm1 + DAT_00034858) & 3;\u000a  puParm2[3] = (char)uVar4;\u000a  uVar4 = *(uint *)(iParm1 + 0xa4) & 1 | uVar4 << 1;\u000a  puParm2[3] = (char)uVar4;\u000a  uVar4 = *(uint *)(iParm1 + 0xa8) & 1 | uVar4 << 1;\u000a  puParm2[3] = (char)uVar4;\u000a  puParm2[3] = (byte)*(undefined4 *)(iParm1 + 0xb0) & 3 | (byte)(uVar4 << 2);\u000a  *puParm2 = 0xff;\u000a  iVar5 = *(int *)(iParm1 + 0x10);\u000a  uVar3 = 0x80;\u000a  if ((iVar5 != 1) && (uVar3 = 0x20, 15999 < *(int *)(iParm1 + 0x40))) {\u000a    uVar3 = 0x40;\u000a  }\u000a  if (*(int *)(iParm1 + 0x68) == 0) {\u000a    uVar3 = *(undefined4 *)(iParm1 + 0x78);\u000a  }\u000a  bVar6 = 0;\u000a  if (*(int *)(iParm1 + 0x98) == 0) {\u000a    iVar5 = BitrateIndex(uVar3,iVar5,*(undefined4 *)(iParm1 + 0x40));\u000a    bVar6 = (byte)(iVar5 << 4);\u000a    iVar5 = *(int *)(iParm1 + 0x10);\u000a  }\u000a  if (iVar5 == 1) {\u000a    bVar2 = 10;\u000a  }\u000a  else {\u000a    bVar2 = 2;\u000a  }\u000a  puParm2[1] = bVar1 & 0xf1 | bVar7 | bVar2;\u000a  puParm2[2] = puParm2[2] & 0xd | bVar6;\u000a  return;\u000a}\u000a\u000a
p2733
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nmov r0,#0xff\nstr r0,[sp,#0x8]\nstrb r0,[r4,#0x0]\nldrb r0,[r4,#0x1]\nlsl r0,r0,#0x3\nmov r1,#0x7\norr r1,r0\nstrb r1,[r4,#0x1]\nldr r3,[r5,#0x40]\nldr r6,[0x00034850]\nmov r0,#0x1\nmov r2,#0x0\ncmp r3,r6\npush { r0 }\npop { r3 }\nbgt 0x00034752\npush { r2 }\npop { r3 }\nlsl r1,r1,#0x1\norr r1,r3\nstrb r1,[r4,#0x1]\nlsl r1,r1,#0x1\nmov r3,#0x3e\nand r3,r1\nldr r1,[r5,#0x10]\nand r1,r0\norr r1,r3\nlsl r1,r1,#0x2\norr r1,r0\nstrb r1,[r4,#0x1]\nlsl r1,r1,#0x1\nmov r3,#0xa0\nldr r3,[r5,r3]\ncmp r3,#0x0\npush { r0 }\npop { r3 }\nbeq 0x0003477c\npush { r2 }\npop { r3 }\norr r1,r3\nstrb r1,[r4,#0x1]\nldr r2,[0x00034854]\nldr r2,[r5,r2]\nmov r3,#0xf\nand r3,r2\nldrb r2,[r4,#0x2]\nlsl r2,r2,#0x4\norr r2,r3\nstrb r2,[r4,#0x2]\nlsl r2,r2,#0x2\nmov r3,#0x7c\nand r3,r2\nldr r6,[r5,#0x14]\nmov r2,#0x3\nand r6,r2\norr r6,r3\nlsl r3,r6,#0x1\nstrb r3,[r4,#0x2]\nlsl r3,r6,#0x2\nmov r6,#0xac\nldr r6,[r5,r6]\nand r6,r0\norr r6,r3\nstrb r6,[r4,#0x2]\nmov r3,#0xb4\nldr r3,[r5,r3]\nand r3,r2\nldrb r6,[r4,#0x3]\nlsl r6,r6,#0x2\norr r6,r3\nstrb r6,[r4,#0x3]\nldr r3,[0x00034858]\nldr r3,[r5,r3]\nand r3,r2\nlsl r6,r6,#0x2\norr r6,r3\nstrb r6,[r4,#0x3]\nlsl r3,r6,#0x1\nmov r6,#0xa4\nldr r6,[r5,r6]\nand r6,r0\norr r6,r3\nstrb r6,[r4,#0x3]\nlsl r3,r6,#0x1\nmov r6,#0xa8\nldr r6,[r5,r6]\nand r6,r0\norr r6,r3\nstrb r6,[r4,#0x3]\nlsl r0,r6,#0x2\nmov r3,#0xb0\nldr r3,[r5,r3]\nand r3,r2\norr r3,r0\nstrb r3,[r4,#0x3]\nldr r0,[sp,#0x8]\nstrb r0,[r4,#0x0]\nmov r6,#0xf1\nand r6,r1\nldr r1,[r5,#0x10]\nmov r0,#0x80\ncmp r1,#0x1\nbeq 0x00034812\nmov r0,#0x7d\nlsl r0,r0,#0x7\nstr r0,[sp,#0x4]\nldr r2,[r5,#0x40]\nmov r0,#0x20\nmov r3,#0x40\nstr r3,[sp,#0x0]\nldr r3,[sp,#0x4]\ncmp r2,r3\nblt 0x00034812\nldr r0,[sp,#0x0]\nldr r2,[r5,#0x68]\ncmp r2,#0x0\nbne 0x0003481a\nldr r0,[r5,#0x78]\nmov r2,#0x98\nldr r3,[r5,r2]\nmov r2,#0x0\ncmp r3,#0x0\nbne 0x0003482e\nldr r2,[r5,#0x40]\nbl 0x00037eb0\nlsl r2,r0,#0x4\nldr r1,[r5,#0x10]\ncmp r1,#0x1\nbne 0x00034836\nmov r0,#0xa\nb 0x00034838\nmov r0,#0x2\norr r6,r0\nstrb r6,[r4,#0x1]\nldr r0,[sp,#0x8]\nand r2,r0\nldrb r1,[r4,#0x2]\nmov r0,#0xd\nand r0,r1\norr r0,r2\nstrb r0,[r4,#0x2]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p2734
S'f0 b5\n03 af\n83 b0\n02 b4\n10 bc\n01 b4\n20 bc\nff 20\n02 90\n20 70\n60 78\nc0 00\n07 21\n01 43\n61 70\n2b 6c\n43 4e\n01 20\n00 22\nb3 42\n01 b4\n08 bc\n01 dc\n04 b4\n08 bc\n49 00\n19 43\n61 70\n49 00\n3e 23\n0b 40\n29 69\n01 40\n19 43\n89 00\n01 43\n61 70\n49 00\na0 23\neb 58\n00 2b\n01 b4\n08 bc\n01 d0\n04 b4\n08 bc\n19 43\n61 70\n34 4a\naa 58\n0f 23\n13 40\na2 78\n12 01\n1a 43\na2 70\n92 00\n7c 23\n13 40\n6e 69\n03 22\n16 40\n1e 43\n73 00\na3 70\nb3 00\nac 26\nae 59\n06 40\n1e 43\na6 70\nb4 23\neb 58\n13 40\ne6 78\nb6 00\n1e 43\ne6 70\n26 4b\neb 58\n13 40\nb6 00\n1e 43\ne6 70\n73 00\na4 26\nae 59\n06 40\n1e 43\ne6 70\n73 00\na8 26\nae 59\n06 40\n1e 43\ne6 70\nb0 00\nb0 23\neb 58\n13 40\n03 43\ne3 70\n02 98\n20 70\nf1 26\n0e 40\n29 69\n80 20\n01 29\n0a d0\n7d 20\nc0 01\n01 90\n2a 6c\n20 20\n40 23\n00 93\n01 9b\n9a 42\n00 db\n00 98\naa 6e\n00 2a\n00 d1\na8 6f\n98 22\nab 58\n00 22\n00 2b\n04 d1\n2a 6c\n03 f0 43 fb\n02 01\n29 69\n01 29\n01 d1\n0a 20\n00 e0\n02 20\n06 43\n66 70\n02 98\n02 40\na1 78\n0d 20\n08 40\n10 43\na0 70\n03 b0\nf0 bd\n'
p2735
S'.text:00034720\n.text:00034722\n.text:00034724\n.text:00034726\n.text:00034728\n.text:0003472a\n.text:0003472c\n.text:0003472e\n.text:00034730\n.text:00034732\n.text:00034734\n.text:00034736\n.text:00034738\n.text:0003473a\n.text:0003473c\n.text:0003473e\n.text:00034740\n.text:00034742\n.text:00034744\n.text:00034746\n.text:00034748\n.text:0003474a\n.text:0003474c\n.text:0003474e\n.text:00034750\n.text:00034752\n.text:00034754\n.text:00034756\n.text:00034758\n.text:0003475a\n.text:0003475c\n.text:0003475e\n.text:00034760\n.text:00034762\n.text:00034764\n.text:00034766\n.text:00034768\n.text:0003476a\n.text:0003476c\n.text:0003476e\n.text:00034770\n.text:00034772\n.text:00034774\n.text:00034776\n.text:00034778\n.text:0003477a\n.text:0003477c\n.text:0003477e\n.text:00034780\n.text:00034782\n.text:00034784\n.text:00034786\n.text:00034788\n.text:0003478a\n.text:0003478c\n.text:0003478e\n.text:00034790\n.text:00034792\n.text:00034794\n.text:00034796\n.text:00034798\n.text:0003479a\n.text:0003479c\n.text:0003479e\n.text:000347a0\n.text:000347a2\n.text:000347a4\n.text:000347a6\n.text:000347a8\n.text:000347aa\n.text:000347ac\n.text:000347ae\n.text:000347b0\n.text:000347b2\n.text:000347b4\n.text:000347b6\n.text:000347b8\n.text:000347ba\n.text:000347bc\n.text:000347be\n.text:000347c0\n.text:000347c2\n.text:000347c4\n.text:000347c6\n.text:000347c8\n.text:000347ca\n.text:000347cc\n.text:000347ce\n.text:000347d0\n.text:000347d2\n.text:000347d4\n.text:000347d6\n.text:000347d8\n.text:000347da\n.text:000347dc\n.text:000347de\n.text:000347e0\n.text:000347e2\n.text:000347e4\n.text:000347e6\n.text:000347e8\n.text:000347ea\n.text:000347ec\n.text:000347ee\n.text:000347f0\n.text:000347f2\n.text:000347f4\n.text:000347f6\n.text:000347f8\n.text:000347fa\n.text:000347fc\n.text:000347fe\n.text:00034800\n.text:00034802\n.text:00034804\n.text:00034806\n.text:00034808\n.text:0003480a\n.text:0003480c\n.text:0003480e\n.text:00034810\n.text:00034812\n.text:00034814\n.text:00034816\n.text:00034818\n.text:0003481a\n.text:0003481c\n.text:0003481e\n.text:00034820\n.text:00034822\n.text:00034824\n.text:00034826\n.text:0003482a\n.text:0003482c\n.text:0003482e\n.text:00034830\n.text:00034832\n.text:00034834\n.text:00034836\n.text:00034838\n.text:0003483a\n.text:0003483c\n.text:0003483e\n.text:00034840\n.text:00034842\n.text:00034844\n.text:00034846\n.text:00034848\n.text:0003484a\n.text:0003484c\n'
p2736
tp2737
sS'fft_long'
p2738
(S'\n__stdcall fft_long()\n'
p2739
V\u000avoid fft_long(void)\u000a\u000a{\u000a  (*(fft_short + DAT_0003826c))();\u000a  return;\u000a}\u000a\u000a
p2740
S'ldr r12,[0x3826c]\nadd pc,r12,pc\n'
p2741
S'00 c0 9f e5\n0f f0 8c e0\n'
p2742
S'.text:00038264\n.text:00038268\n'
p2743
tp2744
sS'CRC_writeheader'
p2745
(S'\n__stdcall CRC_writeheader()\n'
p2746
V\u000avoid CRC_writeheader(void)\u000a\u000a{\u000a  (*(UpdateMusicCRC + DAT_00037a0c))();\u000a  return;\u000a}\u000a\u000a
p2747
S'ldr r12,[0x37a0c]\nadd pc,r12,pc\n'
p2748
S'00 c0 9f e5\n0f f0 8c e0\n'
p2749
S'.text:00037a04\n.text:00037a08\n'
p2750
tp2751
sS'lame_set_no_short_blocks'
p2752
(S'\n__stdcall lame_set_no_short_blocks()\n'
p2753
V\u000aundefined4 lame_set_no_short_blocks(int iParm1,uint uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  uint uVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if ((uParm2 < 2) && (iVar1 != 0)) {\u000a    uVar3 = 2;\u000a    if (uParm2 == 0) {\u000a      uVar3 = uParm2;\u000a    }\u000a    *(uint *)(iParm1 + 0xf0) = uVar3;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2754
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r5,#0x1\nbhi 0x0002ef8a\ncmp r1,#0x0\nbeq 0x0002ef8a\nmov r0,#0x2\ncmp r5,#0x0\nbne 0x0002ef82\npush { r5 }\npop { r0 }\nmov r1,#0xf0\nstr r0,[r4,r1]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2755
S'b0 b5\n02 af\n02 b4\n20 bc\n01 b4\n10 bc\n09 f0 64 fa\n01 b4\n02 bc\n00 22\nd0 43\n01 2d\n0a d8\n00 29\n08 d0\n02 20\n00 2d\n01 d1\n20 b4\n01 bc\nf0 21\n60 50\n04 b4\n01 bc\nb0 bd\n'
p2756
S'.text:0002ef58\n.text:0002ef5a\n.text:0002ef5c\n.text:0002ef5e\n.text:0002ef60\n.text:0002ef62\n.text:0002ef64\n.text:0002ef68\n.text:0002ef6a\n.text:0002ef6c\n.text:0002ef6e\n.text:0002ef70\n.text:0002ef72\n.text:0002ef74\n.text:0002ef76\n.text:0002ef78\n.text:0002ef7a\n.text:0002ef7c\n.text:0002ef7e\n.text:0002ef80\n.text:0002ef82\n.text:0002ef84\n.text:0002ef86\n.text:0002ef88\n.text:0002ef8a\n'
p2757
tp2758
sS'_Unwind_GetGR'
p2759
(S'\n__stdcall _Unwind_GetGR()\n'
p2760
V\u000aundefined4 _Unwind_GetGR(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 local_c;\u000a  \u000a  local_c = uParm4;\u000a  _Unwind_VRS_Get(uParm1,0,uParm2,0,&local_c,uParm2,uParm3);\u000a  return local_c;\u000a}\u000a\u000a
p2761
S'stmdb sp!,{ r0 r1 r2 r3 r4 lr }\ncpy r2,r1\nadd r3,sp,#0xc\nmov r1,#0x0\nstr r3,[sp,#0x0]\ncpy r3,r1\nbl 0x00016c24\nldr r0,[sp,#0xc]\nadd sp,sp,#0x14\nldr pc,[sp],#0x4\n'
p2762
S'1f 40 2d e9\n01 20 a0 e1\n0c 30 8d e2\n00 10 a0 e3\n00 30 8d e5\n01 30 a0 e1\n92 80 ff eb\n0c 00 9d e5\n14 d0 8d e2\n04 f0 9d e4\n'
p2763
S'.text:000369bc\n.text:000369c0\n.text:000369c4\n.text:000369c8\n.text:000369cc\n.text:000369d0\n.text:000369d4\n.text:000369d8\n.text:000369dc\n.text:000369e0\n'
p2764
tp2765
sS'lame_get_bWriteVbrTag'
p2766
(S'\n__stdcall lame_get_bWriteVbrTag(lame_global_flags * gfp)\n'
p2767
V\u000aint lame_get_bWriteVbrTag(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  lame_global_flags *gfp_00;\u000a  int iVar3;\u000a  undefined *puVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  uint unaff_r6;\u000a  undefined *puVar11;\u000a  uint uVar12;\u000a  bool in_ZR;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  int *in_stack_00000028;\u000a  uint in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    uVar2 = in_stack_00000030;\u000a    iVar1 = in_stack_00000024;\u000a    if (in_ZR == false) {\u000a      do {\u000a        uVar5 = unaff_r6 & 0x57000000;\u000a        uVar12 = in_stack_00000030;\u000a        if (uVar5 != (unaff_r6 & (uint)gfp)) {\u000a          uVar12 = unaff_r6 & (uint)gfp;\u000a        }\u000a        if (uVar5 == 0) {\u000a          uVar12 = uVar5;\u000a        }\u000a        uVar2 = uVar2 | uVar12;\u000a        iVar1 = iVar1 + -1;\u000a        unaff_r6 = unaff_r6 << 8;\u000a      } while (iVar1 != 0);\u000a      if (uVar2 != 0) {\u000a        iVar3 = in_stack_00000028[7];\u000a        iVar6 = in_stack_00000028[4];\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar1 = iVar6 * 2 + 0xd;\u000a          if (iVar6 == 0) {\u000a            iVar1 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar1 = iVar6 + 0xc;\u000a          if (iVar6 == 0) {\u000a            iVar1 = 0xb;\u000a          }\u000a        }\u000a        iVar1 = iVar1 + iVar3;\u000a        goto LAB_0001df7a;\u000a      }\u000a      iVar1 = sizeOfWxxxNode(in_stack_00000028);\u000a      goto LAB_0001df7a;\u000a    }\u000a    do {\u000a      iVar1 = in_stack_00000028[4] * 2 + 0x10;\u000a      if (in_stack_00000028[5] != 1) {\u000a        iVar1 = in_stack_00000028[4] + 0xf;\u000a      }\u000a      iVar3 = in_stack_00000028[7];\u000a      if (in_stack_00000028[8] == 1) {\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      iVar1 = iVar1 + iVar3;\u000aLAB_0001df7a:\u000a      in_stack_0000002c = iVar1 + in_stack_0000002c;\u000a      in_stack_00000028 = (int *)*in_stack_00000028;\u000a      if (in_stack_00000028 == (int *)0x0) {\u000a        if ((*in_stack_00000010 & 0x20) != 0) {\u000a          in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a        }\u000a        uVar2 = in_stack_0000002c;\u000a        if ((in_stack_00000014 < in_stack_0000002c) ||\u000a           (uVar2 = 0, in_stack_00000018 == (undefined *)0x0)) goto LAB_0001e470;\u000a        *in_stack_00000018 = 0x49;\u000a        in_stack_00000018[1] = 0x44;\u000a        in_stack_00000018[2] = 0x33;\u000a        in_stack_00000018[3] = 3;\u000a        in_stack_00000030 = 0;\u000a        in_stack_00000018[4] = 0;\u000a        in_stack_00000018[5] = 0;\u000a        uVar2 = in_stack_0000002c - 10;\u000a        in_stack_00000018[6] = (byte)(uVar2 >> 0x15) & 0x7f;\u000a        in_stack_00000018[7] = (byte)(uVar2 >> 0xe) & 0x7f;\u000a        in_stack_00000018[8] = (byte)(uVar2 >> 7) & 0x7f;\u000a        in_stack_00000018[9] = (byte)uVar2 & 0x7f;\u000a        puVar11 = in_stack_00000018 + 10;\u000a        puVar9 = (undefined4 *)*in_stack_00000008;\u000a        goto LAB_0001e09c;\u000a      }\u000a      gfp = (lame_global_flags *)in_stack_00000028[1];\u000a      unaff_r6 = 0xff;\u000a      in_stack_00000030 = 0;\u000a    } while (gfp == DAT_0001e1dc);\u000a    in_ZR = gfp == DAT_0001e1e0;\u000a  } while( true );\u000aLAB_0001e09c:\u000a  if (puVar9 == (undefined4 *)0x0) {\u000a    if (__s != (char *)0x0) {\u000a      iVar1 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar2 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar11[iVar1 + -1] = (char)uVar2;\u000a          iVar1 = iVar1 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar1);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar11,in_stack_00000018 + (in_stack_0000002c - (int)puVar11));\u000a    uVar2 = in_stack_0000002c;\u000aLAB_0001e470:\u000a    if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a      return uVar2;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  uVar2 = puVar9[1];\u000a  uVar12 = 0xff;\u000a  iVar1 = 4;\u000a  if ((uVar2 == DAT_0001e494) || (uVar5 = in_stack_00000030, uVar2 == DAT_0001e498)) {\u000a    iVar1 = puVar9[4] * 2 + 0x10;\u000a    if (puVar9[5] != 1) {\u000a      iVar1 = puVar9[4] + 0xf;\u000a    }\u000a    iVar3 = 0;\u000a    if (puVar9[8] == 1) {\u000a      iVar3 = puVar9[8];\u000a    }\u000a    uVar12 = (puVar9[7] << iVar3) + iVar1;\u000a    iVar1 = 4;\u000a    if (10 < uVar12) {\u000a      do {\u000a        puVar11[iVar1 + -1] = (char)uVar2;\u000a        iVar1 = iVar1 + -1;\u000a        uVar2 = uVar2 >> 8;\u000a      } while (0 < iVar1);\u000a      uVar12 = uVar12 - 10;\u000a      iVar1 = 4;\u000a      do {\u000a        puVar11[iVar1 + 3] = (char)uVar12;\u000a        iVar1 = iVar1 + -1;\u000a        uVar12 = uVar12 >> 8;\u000a      } while (0 < iVar1);\u000a      puVar11[8] = 0;\u000a      puVar11[9] = 0;\u000a      *(bool *)(puVar11 + 10) = puVar9[8] == 1;\u000a      puVar11[0xb] = *(undefined *)(puVar9 + 2);\u000a      puVar11[0xc] = *(undefined *)((int)puVar9 + 9);\u000a      puVar11[0xd] = *(undefined *)((int)puVar9 + 10);\u000a      puVar11 = puVar11 + 0xe;\u000a      if (puVar9[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,puVar9[3],puVar9[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar1 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar1;\u000a      }\u000a      iVar1 = puVar9[4];\u000a      if (iVar1 != 0) {\u000a        puVar4 = (undefined *)puVar9[3];\u000a        iVar3 = iVar1;\u000a        puVar8 = puVar11;\u000a        do {\u000a          *puVar8 = *puVar4;\u000a          puVar8 = puVar8 + 1;\u000a          puVar4 = puVar4 + 1;\u000a          iVar3 = iVar3 + -1;\u000a        } while (iVar3 != 0);\u000a        puVar11 = puVar11 + iVar1;\u000a      }\u000a      *puVar11 = 0;\u000a      puVar11 = puVar11 + 1;\u000a      if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a        puVar11 = (undefined *)writeUcs2s(puVar11,puVar9[6],puVar9[7]);\u000a      }\u000a      else {\u000a        iVar1 = puVar9[7];\u000a        if (iVar1 != 0) {\u000a          puVar4 = (undefined *)puVar9[6];\u000a          iVar3 = iVar1;\u000a          puVar8 = puVar11;\u000a          do {\u000a            *puVar8 = *puVar4;\u000a            puVar8 = puVar8 + 1;\u000a            puVar4 = puVar4 + 1;\u000a            iVar3 = iVar3 + -1;\u000a          } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a          puVar11 = puVar11 + iVar1;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    do {\u000a      uVar7 = uVar12 & 0x57000000;\u000a      uVar10 = in_stack_00000030;\u000a      if (uVar7 != (uVar12 & uVar2)) {\u000a        uVar10 = uVar12 & uVar2;\u000a      }\u000a      if (uVar7 == 0) {\u000a        uVar10 = uVar7;\u000a      }\u000a      uVar5 = uVar5 | uVar10;\u000a      iVar1 = iVar1 + -1;\u000a      uVar12 = uVar12 << 8;\u000a    } while (iVar1 != 0);\u000a    if (uVar5 == 0) {\u000a      uVar12 = sizeOfWxxxNode(puVar9);\u000a      iVar1 = 4;\u000a      if (10 < uVar12) {\u000a        do {\u000a          puVar11[iVar1 + -1] = (char)uVar2;\u000a          iVar1 = iVar1 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar1);\u000a        uVar12 = uVar12 - 10;\u000a        iVar1 = 4;\u000a        do {\u000a          puVar11[iVar1 + 3] = (char)uVar12;\u000a          iVar1 = iVar1 + -1;\u000a          uVar12 = uVar12 >> 8;\u000a        } while (0 < iVar1);\u000a        puVar11[8] = 0;\u000a        puVar11[9] = 0;\u000a        puVar8 = puVar11 + 10;\u000a        if (puVar9[4] != 0) {\u000a          *(bool *)(puVar11 + 10) = puVar9[5] == 1;\u000a          puVar11 = puVar11 + 0xb;\u000a          if (puVar9[5] == 1) {\u000a            puVar8 = (undefined *)writeUcs2s(puVar11,puVar9[3],puVar9[4]);\u000a            *puVar8 = 0;\u000a            puVar8[1] = 0;\u000a            puVar8 = puVar8 + 2;\u000a          }\u000a          else {\u000a            iVar1 = puVar9[4];\u000a            if (iVar1 != 0) {\u000a              puVar4 = (undefined *)puVar9[3];\u000a              iVar3 = iVar1;\u000a              puVar8 = puVar11;\u000a              do {\u000a                *puVar8 = *puVar4;\u000a                puVar8 = puVar8 + 1;\u000a                puVar4 = puVar4 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              puVar11 = puVar11 + iVar1;\u000a            }\u000a            *puVar11 = 0;\u000a            puVar8 = puVar11 + 1;\u000a          }\u000a        }\u000a        if (puVar9[8] == 1) {\u000a          puVar11 = (undefined *)writeLoBytes(puVar8,puVar9[6],puVar9[7]);\u000a        }\u000a        else {\u000a          iVar1 = puVar9[7];\u000a          puVar11 = puVar8;\u000a          if (iVar1 != 0) {\u000a            puVar4 = (undefined *)puVar9[6];\u000a            iVar3 = iVar1;\u000a            puVar11 = puVar8;\u000a            do {\u000a              *puVar11 = *puVar4;\u000a              puVar11 = puVar11 + 1;\u000a              puVar4 = puVar4 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar11 = puVar8 + iVar1;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      iVar1 = puVar9[7];\u000a      iVar3 = puVar9[4];\u000a      if (puVar9[8] == 1) {\u000a        iVar6 = iVar3 * 2 + 0xd;\u000a        if (iVar3 == 0) {\u000a          iVar6 = 0xb;\u000a        }\u000a        iVar1 = iVar1 << 1;\u000a      }\u000a      else {\u000a        iVar6 = iVar3 + 0xc;\u000a        if (iVar3 == 0) {\u000a          iVar6 = 0xb;\u000a        }\u000a      }\u000a      iVar3 = 4;\u000a      if (10 < (uint)(iVar6 + iVar1)) {\u000a        do {\u000a          puVar11[iVar3 + -1] = (char)uVar2;\u000a          iVar3 = iVar3 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar3);\u000a        uVar2 = (iVar6 + iVar1) - 10;\u000a        iVar1 = 4;\u000a        do {\u000a          puVar11[iVar1 + 3] = (char)uVar2;\u000a          iVar1 = iVar1 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar1);\u000a        puVar11[8] = 0;\u000a        puVar11[9] = 0;\u000a        *(bool *)(puVar11 + 10) = puVar9[8] == 1;\u000a        puVar11 = puVar11 + 0xb;\u000a        iVar1 = puVar9[4];\u000a        if (iVar1 != 0) {\u000a          if (puVar9[5] == 1) {\u000a            puVar11 = (undefined *)writeUcs2s(puVar11,puVar9[3]);\u000a            *puVar11 = 0;\u000a            puVar11[1] = 0;\u000a            puVar11 = puVar11 + 2;\u000a          }\u000a          else {\u000a            puVar4 = (undefined *)puVar9[3];\u000a            iVar3 = iVar1;\u000a            puVar8 = puVar11;\u000a            do {\u000a              *puVar8 = *puVar4;\u000a              puVar8 = puVar8 + 1;\u000a              puVar4 = puVar4 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar11[iVar1] = 0;\u000a            puVar11 = puVar11 + iVar1 + 1;\u000a          }\u000a        }\u000a        if (puVar9[8] == 1) goto LAB_0001e338;\u000a        iVar1 = puVar9[7];\u000a        if (iVar1 != 0) {\u000a          puVar4 = (undefined *)puVar9[6];\u000a          iVar3 = iVar1;\u000a          puVar8 = puVar11;\u000a          do {\u000a            *puVar8 = *puVar4;\u000a            puVar8 = puVar8 + 1;\u000a            puVar4 = puVar4 + 1;\u000a            iVar3 = iVar3 + -1;\u000a          } while (iVar3 != 0);\u000a          goto LAB_0001e36a;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  puVar9 = (undefined4 *)*puVar9;\u000a  goto LAB_0001e09c;\u000a}\u000a\u000a
p2768
S'ldr r4,[sp,#0x24]\nldr r3,[sp,#0x30]\nbne 0x0001dfc2\n'
p2769
S'09 9c\n0c 9b\n11 d1\n'
p2770
S'.text:0001df98\n.text:0001df9a\n.text:0001df9c\n'
p2771
tp2772
sS'quantize_lines_xrpow'
p2773
(S'\n__stdcall quantize_lines_xrpow()\n'
p2774
V\u000avoid quantize_lines_xrpow(uint uParm1,undefined4 uParm2,undefined4 *puParm3,int iParm4)\u000a\u000a{\u000a  if (uParm1 >> 2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(*puParm3,uParm2,puParm3,iParm4,uParm1 & 0xfffffffc,uParm1 & 2,\u000a             iParm4 + (uParm1 >> 2) * 0x10,puParm3,uParm2);\u000a  }\u000a  if ((uParm1 & 2) != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(*puParm3,uParm2);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2775
S'push { r4, r5, r6, r7, lr }\n'
p2776
S'f0 b5\n'
p2777
S'.text:00030c6c\n'
p2778
tp2779
sS'vbrpsy_compute_MS_thresholds'
p2780
(S'\n__stdcall vbrpsy_compute_MS_thresholds(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined4 param_6)\n'
p2781
V\u000avoid vbrpsy_compute_MS_thresholds(void)\u000a\u000a{\u000a  undefined4 param_6;\u000a  \u000a                    /* WARNING: Subroutine does not return */\u000a  __addsf3(param_6,param_6);\u000a}\u000a\u000a
p2782
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4c\npush { r3 }\npop { r6 }\nstr r2,[sp,#0x34]\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nldr r0,[sp,#0x64]\nstr r0,[sp,#0xc]\npush { r0 }\npop { r1 }\nbl 0x00037a70\n'
p2783
S'f0 b5\n03 af\n93 b0\n08 b4\n40 bc\n0d 92\n02 b4\n10 bc\n01 b4\n20 bc\n19 98\n03 90\n01 b4\n02 bc\n10 f0 b6 fd\n'
p2784
S'.text:00026ee4\n.text:00026ee6\n.text:00026ee8\n.text:00026eea\n.text:00026eec\n.text:00026eee\n.text:00026ef0\n.text:00026ef2\n.text:00026ef4\n.text:00026ef6\n.text:00026ef8\n.text:00026efa\n.text:00026efc\n.text:00026efe\n.text:00026f00\n'
p2785
tp2786
sS'vbrpsy_mask_add'
p2787
(S'\n__stdcall vbrpsy_mask_add()\n'
p2788
V\u000avoid vbrpsy_mask_add(undefined4 uParm1)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __aeabi_fcmplt(uParm1,0);\u000a}\u000a\u000a
p2789
S'push { r4, r5, r6, r7, lr }\n'
p2790
S'f0 b5\n'
p2791
S'.text:00028838\n'
p2792
tp2793
sS'apply_preset'
p2794
(S'\n__stdcall apply_preset()\n'
p2795
V\u000avoid apply_preset(void)\u000a\u000a{\u000a  (*(lame_set_VBR_mean_bitrate_kbps + DAT_00037e9c))();\u000a  return;\u000a}\u000a\u000a
p2796
S'ldr r12,[0x37e9c]\nadd pc,r12,pc\n'
p2797
S'00 c0 9f e5\n0f f0 8c e0\n'
p2798
S'.text:00037e94\n.text:00037e98\n'
p2799
tp2800
sS'__atexit_handler_wrapper'
p2801
(S'\n__stdcall __atexit_handler_wrapper()\n'
p2802
V\u000avoid __atexit_handler_wrapper(code *UNRECOVERED_JUMPTABLE)\u000a\u000a{\u000a  if (UNRECOVERED_JUMPTABLE == (code *)0x0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Could not recover jumptable at 0x00016cf0. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*UNRECOVERED_JUMPTABLE)();\u000a  return;\u000a}\u000a\u000a
p2803
S'cmp r0,#0x0\nbxeq lr\nbx r0\n'
p2804
S'00 00 50 e3\n1e ff 2f 01\n10 ff 2f e1\n'
p2805
S'.text:00016ce8\n.text:00016cec\n.text:00016cf0\n'
p2806
tp2807
sS'__divdf3'
p2808
(S'\n__stdcall __divdf3()\n'
p2809
V\u000avoid __divdf3(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037bd0 + DAT_00037bcc))();\u000a  return;\u000a}\u000a\u000a
p2810
S'ldr r12,[0x37bcc]\nadd pc,r12,pc\n'
p2811
S'00 c0 9f e5\n0f f0 8c e0\n'
p2812
S'.text:00037bc4\n.text:00037bc8\n'
p2813
tp2814
sS'UpdateMusicCRC'
p2815
(S'\n__stdcall UpdateMusicCRC()\n'
p2816
V\u000avoid UpdateMusicCRC(void)\u000a\u000a{\u000a  (*(malloc + DAT_00037a1c))();\u000a  return;\u000a}\u000a\u000a
p2817
S'ldr r12,[0x37a1c]\nadd pc,r12,pc\n'
p2818
S'00 c0 9f e5\n0f f0 8c e0\n'
p2819
S'.text:00037a14\n.text:00037a18\n'
p2820
tp2821
sS'lame_set_substep'
p2822
(S'\n__stdcall lame_set_substep()\n'
p2823
V\u000aundefined4 lame_set_substep(int iParm1,uint uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if ((uParm2 < 8) && (iVar1 != 0)) {\u000a    *(uint *)(iParm1 + 0x50) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p2824
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r4,#0x7\nbhi 0x0002eea8\ncmp r1,#0x0\nbeq 0x0002eea8\nstr r4,[r5,#0x50]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p2825
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 cf fa\n01 b4\n02 bc\n00 22\nd0 43\n07 2c\n04 d8\n00 29\n02 d0\n2c 65\n04 b4\n01 bc\nb0 bd\n'
p2826
S'.text:0002ee82\n.text:0002ee84\n.text:0002ee86\n.text:0002ee88\n.text:0002ee8a\n.text:0002ee8c\n.text:0002ee8e\n.text:0002ee92\n.text:0002ee94\n.text:0002ee96\n.text:0002ee98\n.text:0002ee9a\n.text:0002ee9c\n.text:0002ee9e\n.text:0002eea0\n.text:0002eea2\n.text:0002eea4\n.text:0002eea6\n.text:0002eea8\n'
p2827
tp2828
sS'__floatunsidf'
p2829
(S'\n__stdcall __floatunsidf()\n'
p2830
V\u000avoid __floatunsidf(void)\u000a\u000a{\u000a  (*(ceil + DAT_00037c1c))();\u000a  return;\u000a}\u000a\u000a
p2831
S'ldr r12,[0x37c1c]\nadd pc,r12,pc\n'
p2832
S'00 c0 9f e5\n0f f0 8c e0\n'
p2833
S'.text:00037c14\n.text:00037c18\n'
p2834
tp2835
sS'ABR_iteration_loop'
p2836
(S'\n__stdcall ABR_iteration_loop()\n'
p2837
V\u000avoid ABR_iteration_loop(int iParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  int iVar10;\u000a  int iStack24;\u000a  int iStack4;\u000a  \u000a  iVar2 = DAT_0002a0f4;\u000a  puVar1 = (undefined4 *)(&stack0x0000005c + DAT_0002a0f4);\u000a  *(undefined4 **)(&stack0x00000000 + DAT_0002a0f4) = puVar1;\u000a  *(undefined4 *)(&stack0x00000018 + iVar2) = uParm4;\u000a  *(undefined4 *)(&stack0xfffffff8 + iVar2) = uParm3;\u000a  *(undefined4 *)(&stack0x00000024 + iVar2) = uParm2;\u000a  *(int *)((int)&iStack24 + iVar2) = iParm1;\u000a  iVar9 = *(int *)((int)&iStack24 + iVar2);\u000a  *puVar1 = **(undefined4 **)(DAT_0002a0f8 + 0x29e58);\u000a  *(undefined4 *)(&stack0x00000060 + iVar2) = 0;\u000a  iVar5 = DAT_0002a0fc;\u000a  iVar10 = *(int *)(iVar9 + 0x4c);\u000a  *(undefined4 *)(iVar9 + DAT_0002a0fc) = *(undefined4 *)(iVar9 + 0x74);\u000a  *(int *)((int)&iStack24 + iVar2) = iVar9;\u000a  uVar3 = ResvFrameBegin(*(int *)((int)&iStack24 + iVar2),&stack0x00000064 + iVar2);\u000a  *(undefined4 *)(&stack0x00000030 + iVar2) = uVar3;\u000a  *(undefined4 *)(&stack0x0000003c + iVar2) = 1;\u000a  *(undefined4 *)(iVar9 + iVar5) = 1;\u000a  *(int *)((int)&iStack24 + iVar2) = iVar9;\u000a  iVar4 = getframebits(*(int *)((int)&iStack24 + iVar2));\u000a  iVar6 = *(int *)(iVar9 + 0x6c);\u000a  iVar8 = *(int *)(iVar9 + 0x48);\u000a  *(int *)(&stack0x00000048 + iVar2) = iVar8;\u000a  iVar7 = *(int *)(iVar9 + 0x4c);\u000a  *(int *)(&stack0x0000002c + iVar2) = iVar7;\u000a  iVar10 = iVar10 * iVar6 * DAT_0002a100;\u000a  iVar6 = *(int *)(iVar9 + 0x18);\u000a  *(int *)(&stack0x00000064 + iVar2) = iVar10;\u000a  iVar8 = iVar8 * iVar7;\u000a  *(int *)(&stack0x00000058 + iVar2) = iVar8;\u000a  *(int *)(&stack0x00000054 + iVar2) = iVar6 * 8;\u000a  *(int *)((int)&iStack24 + iVar2) = iVar8;\u000a  uVar3 = __divsi3(iVar4 + iVar6 * -8,*(int *)((int)&iStack24 + iVar2));\u000a  *(undefined4 *)(&stack0x00000028 + iVar2) = uVar3;\u000a  *(int *)((int)&iStack4 + iVar2) = iVar9 + iVar5;\u000a  *(int *)(&stack0x00000008 + iVar2) = iVar9 + 0x130;\u000a  if (((uint)*(byte *)(iVar9 + DAT_0002a104) & *(uint *)(&stack0x0000003c + iVar2)) != 0) {\u000a    *(int *)((int)&iStack24 + iVar2) = iVar10;\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(*(int *)((int)&iStack24 + iVar2));\u000a  }\u000a  uVar3 = *(undefined4 *)(iVar9 + 0x40);\u000a  *(int *)((int)&iStack24 + iVar2) = iVar10;\u000a  iVar5 = __divsi3(*(int *)((int)&iStack24 + iVar2),uVar3);\u000a  uVar3 = __divsi3(iVar5 - *(int *)(&stack0x00000054 + iVar2),\u000a                   *(undefined4 *)(&stack0x00000058 + iVar2));\u000a  *(undefined4 *)(&stack0x00000004 + iVar2) = uVar3;\u000a  *(undefined4 *)(&stack0x00000064 + iVar2) = uVar3;\u000a  uVar3 = *(undefined4 *)(iVar9 + 0xf4);\u000a  *(int *)(&stack0x0000000c + iVar2) = iVar9;\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(uVar3);\u000a}\u000a\u000a
p2838
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nldr r6,[0x0002a0f4]\nadd sp,r6\nadd r4,sp,#0x70\nstr r4,[sp,#0x14]\nstr r3,[sp,#0x2c]\nstr r2,[sp,#0xc]\nstr r1,[sp,#0x38]\npush { r0 }\npop { r5 }\nldr r0,[0x0002a0f8]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r4,#0x0]\nmov r0,#0x0\nstr r0,[sp,#0x74]\nldr r6,[r5,#0x4c]\nldr r0,[r5,#0x74]\nldr r4,[0x0002a0fc]\nstr r0,[r5,r4]\nadd r1,sp,#0x78\npush { r5 }\npop { r0 }\nbl 0x000382e0\nstr r0,[sp,#0x44]\nmov r0,#0x1\nstr r0,[sp,#0x50]\nstr r0,[r5,r4]\npush { r5 }\npop { r0 }\nbl 0x000383b0\nldr r1,[r5,#0x6c]\nldr r3,[r5,#0x48]\nstr r3,[sp,#0x5c]\nldr r2,[r5,#0x4c]\nstr r2,[sp,#0x40]\nmul r1,r6\nldr r6,[0x0002a100]\nmul r6,r1\nldr r1,[r5,#0x18]\nstr r6,[sp,#0x78]\nmul r2,r3\nstr r2,[sp,#0x6c]\nlsl r1,r1,#0x3\nstr r1,[sp,#0x68]\nsub r0,r0,r1\npush { r2 }\npop { r1 }\nbl 0x00037980\nstr r0,[sp,#0x3c]\nadd r0,r5,r4\nstr r0,[sp,#0x10]\nmov r0,#0x13\nlsl r0,r0,#0x4\nadd r0,r5,r0\nstr r0,[sp,#0x1c]\nldr r0,[0x0002a104]\nldrb r0,[r5,r0]\nldr r1,[sp,#0x50]\ntst r0,r1\nbeq 0x00029eda\npush { r6 }\npop { r0 }\nbl 0x00037b90\nldr r1,[r5,#0x40]\npush { r6 }\npop { r0 }\nbl 0x00037980\nldr r1,[sp,#0x68]\nsub r0,r0,r1\nldr r1,[sp,#0x6c]\nbl 0x00037980\nstr r0,[sp,#0x18]\nstr r0,[sp,#0x78]\nmov r0,#0xf4\nldr r0,[r5,r0]\nstr r5,[sp,#0x20]\nbl 0x00037ac0\n'
p2839
S'f0 b5\n03 af\nac 4e\nb5 44\n1c ac\n05 94\n0b 93\n03 92\n0e 91\n01 b4\n20 bc\na9 48\n78 44\n00 68\n00 68\n20 60\n00 20\n1d 90\nee 6c\n68 6f\na5 4c\n28 51\n1e a9\n20 b4\n01 bc\n0e f0 37 fa\n11 90\n01 20\n14 90\n28 51\n20 b4\n01 bc\n0e f0 97 fa\ne9 6e\nab 6c\n17 93\nea 6c\n10 92\n71 43\n9c 4e\n4e 43\na9 69\n1e 96\n5a 43\n1b 92\nc9 00\n1a 91\n40 1a\n04 b4\n02 bc\n0d f0 6c fd\n0f 90\n28 19\n04 90\n13 20\n00 01\n28 18\n07 90\n93 48\n28 5c\n14 99\n08 42\n0c d0\n40 b4\n01 bc\n0d f0 64 fe\n29 6c\n40 b4\n01 bc\n0d f0 4e fd\n1a 99\n40 1a\n1b 99\n0d f0 49 fd\n06 90\n1e 90\nf4 20\n28 58\n08 95\n0d f0 e2 fd\n'
p2840
S'.text:00029e3c\n.text:00029e3e\n.text:00029e40\n.text:00029e42\n.text:00029e44\n.text:00029e46\n.text:00029e48\n.text:00029e4a\n.text:00029e4c\n.text:00029e4e\n.text:00029e50\n.text:00029e52\n.text:00029e54\n.text:00029e56\n.text:00029e58\n.text:00029e5a\n.text:00029e5c\n.text:00029e5e\n.text:00029e60\n.text:00029e62\n.text:00029e64\n.text:00029e66\n.text:00029e68\n.text:00029e6a\n.text:00029e6c\n.text:00029e6e\n.text:00029e72\n.text:00029e74\n.text:00029e76\n.text:00029e78\n.text:00029e7a\n.text:00029e7c\n.text:00029e7e\n.text:00029e82\n.text:00029e84\n.text:00029e86\n.text:00029e88\n.text:00029e8a\n.text:00029e8c\n.text:00029e8e\n.text:00029e90\n.text:00029e92\n.text:00029e94\n.text:00029e96\n.text:00029e98\n.text:00029e9a\n.text:00029e9c\n.text:00029e9e\n.text:00029ea0\n.text:00029ea2\n.text:00029ea4\n.text:00029ea8\n.text:00029eaa\n.text:00029eac\n.text:00029eae\n.text:00029eb0\n.text:00029eb2\n.text:00029eb4\n.text:00029eb6\n.text:00029eb8\n.text:00029eba\n.text:00029ebc\n.text:00029ebe\n.text:00029ec0\n.text:00029ec2\n.text:00029ec4\n.text:00029eda\n.text:00029edc\n.text:00029ede\n.text:00029ee0\n.text:00029ee4\n.text:00029ee6\n.text:00029ee8\n.text:00029eea\n.text:00029eee\n.text:00029ef0\n.text:00029ef2\n.text:00029ef4\n.text:00029ef6\n.text:00029ef8\n'
p2841
tp2842
sS'BitrateIndex'
p2843
(S'\n__stdcall BitrateIndex()\n'
p2844
V\u000avoid BitrateIndex(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037ec0 + DAT_00037ebc))();\u000a  return;\u000a}\u000a\u000a
p2845
S'ldr r12,[0x37ebc]\nadd pc,r12,pc\n'
p2846
S'00 c0 9f e5\n0f f0 8c e0\n'
p2847
S'.text:00037eb4\n.text:00037eb8\n'
p2848
tp2849
sS'__gedf2'
p2850
(S'\n__stdcall __gedf2()\n'
p2851
V\u000auint __gedf2(uint uParm1,uint uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  \u000a  bVar2 = ~((int)(uParm2 << 1) >> 0x15) == 0;\u000a  if (!bVar2) {\u000a    bVar2 = ~((int)(uParm4 << 1) >> 0x15) == 0;\u000a  }\u000a  if ((bVar2) &&\u000a     (((~((int)(uParm2 << 1) >> 0x15) == 0 && ((uParm1 | uParm2 << 0xc) != 0)) ||\u000a      ((~((int)(uParm4 << 1) >> 0x15) == 0 && ((uParm3 | uParm4 << 0xc) != 0)))))) {\u000a    return 0xffffffff;\u000a  }\u000a  bVar2 = (uParm1 | uParm2 << 1) == 0;\u000a  if (bVar2) {\u000a    bVar2 = (uParm3 | uParm4 << 1) == 0;\u000a  }\u000a  if (!bVar2) {\u000a    bVar2 = uParm2 == uParm4;\u000a  }\u000a  if (bVar2) {\u000a    bVar2 = uParm1 == uParm3;\u000a  }\u000a  if (bVar2) {\u000a    return 0;\u000a  }\u000a  uVar1 = uParm2 ^ uParm4;\u000a  bVar2 = uVar1 == 0;\u000a  if (-1 < (int)uVar1) {\u000a    bVar2 = uParm2 == uParm4;\u000a  }\u000a  bVar3 = -1 < (int)uVar1 && uParm4 <= uParm2;\u000a  if (bVar2) {\u000a    bVar3 = uParm3 <= uParm1;\u000a  }\u000a  uParm4 = (int)uParm4 >> 0x1f;\u000a  if (!bVar3) {\u000a    uParm4 = ~uParm4;\u000a  }\u000a  return uParm4 | 1;\u000a}\u000a\u000a
p2852
S'mvn r12,#0x0\nb 0x00035a70\n'
p2853
S'00 c0 e0 e3\n02 00 00 ea\n'
p2854
S'.text:00035a5c\n.text:00035a60\n'
p2855
tp2856
sS'id3tag_set_track'
p2857
(S'\n__stdcall id3tag_set_track()\n'
p2858
V\u000aundefined4 id3tag_set_track(int iParm1,char *pcParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  char *pcVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  \u000a  uVar5 = 0;\u000a  if ((((iParm1 != 0) && (pcParm2 != (char *)0x0)) && (iVar1 = *(int *)(iParm1 + 0x120), iVar1 != 0)\u000a      ) && (*pcParm2 != 0)) {\u000a    iVar2 = atoi(pcParm2);\u000a    if (iVar2 - 1U < 0xff) {\u000a      uVar5 = 0;\u000a      if (iVar2 != 0) {\u000a        *(int *)(iVar1 + DAT_0001d9a4) = iVar2;\u000a        *(uint *)(iVar1 + DAT_0001d9a8) = *(uint *)(iVar1 + DAT_0001d9a8) | 1;\u000a      }\u000a    }\u000a    else {\u000a      *(uint *)(iVar1 + DAT_0001d9a8) = *(uint *)(iVar1 + DAT_0001d9a8) | 3;\u000a      uVar5 = 0xffffffff;\u000a    }\u000a    pcVar3 = strchr(pcParm2,0x2f);\u000a    if ((pcVar3 != (char *)0x0) && (*pcVar3 != 0)) {\u000a      *(uint *)(iVar1 + DAT_0001d9a8) = *(uint *)(iVar1 + DAT_0001d9a8) | 3;\u000a    }\u000a    iVar1 = DAT_0001d9a8;\u000a    iVar2 = *(int *)(iParm1 + 0x120);\u000a    if (iVar2 != 0) {\u000a      uVar4 = *(undefined4 *)(iVar2 + DAT_0001d9a8);\u000a      id3v2_add_latin1(iParm1,DAT_0001d9ac,DAT_0001d9b0 + 0x1d98a,0,pcParm2);\u000a      *(undefined4 *)(iVar2 + iVar1) = uVar4;\u000a    }\u000a  }\u000a  return uVar5;\u000a}\u000a\u000a
p2859
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\npush { r1 }\npop { r6 }\npush { r0 }\npop { r5 }\nmov r4,#0x0\ncmp r5,#0x0\nbeq 0x0001d99a\nmov r0,#0x9\nlsl r0,r0,#0x5\nadd r1,r5,r0\ncmp r6,#0x0\nbeq 0x0001d99a\nldr r0,[r5,r0]\nstr r0,[sp,#0x10]\ncmp r0,#0x0\nbeq 0x0001d99a\nldrb r0,[r6,#0x0]\ncmp r0,#0x0\nbeq 0x0001d99a\nstr r1,[sp,#0xc]\npush { r6 }\npop { r0 }\nbl 0x00037ce0\nsub r1,r0,#0x1\ncmp r1,#0xff\nbcc 0x0001d936\nldr r0,[0x0001d9a8]\nldr r3,[sp,#0x10]\nldr r1,[r3,r0]\nmov r2,#0x3\norr r2,r1\nstr r2,[r3,r0]\nmov r0,#0x0\nmvn r4,r0\nb 0x0001d94c\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0001d94c\nldr r1,[0x0001d9a4]\nldr r3,[sp,#0x10]\nstr r0,[r3,r1]\nldr r0,[0x0001d9a8]\nldr r1,[r3,r0]\nmov r2,#0x1\norr r2,r1\nstr r2,[r3,r0]\nmov r1,#0x2f\npush { r6 }\npop { r0 }\nbl 0x00037cf0\ncmp r0,#0x0\nbeq 0x0001d96c\nldrb r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x0001d96c\nldr r0,[0x0001d9a8]\nldr r3,[sp,#0x10]\nldr r1,[r3,r0]\nmov r2,#0x3\norr r2,r1\nstr r2,[r3,r0]\nldr r0,[sp,#0xc]\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x0001d99a\nldr r1,[0x0001d9a8]\nstr r1,[sp,#0xc]\nldr r2,[r0,r1]\nstr r2,[sp,#0x10]\nstr r0,[sp,#0x8]\nmov r0,sp\nstr r6,[r0,#0x0]\nldr r1,[0x0001d9ac]\nldr r2,[0x0001d9b0]\nadd r2,pc\nmov r3,#0x0\npush { r5 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x10]\nldr r1,[sp,#0xc]\nldr r2,[sp,#0x8]\nstr r0,[r2,r1]\npush { r4 }\npop { r0 }\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p2860
S'f0 b5\n03 af\n85 b0\n02 b4\n40 bc\n01 b4\n20 bc\n00 24\n00 2d\n4e d0\n09 20\n40 01\n29 18\n00 2e\n49 d0\n28 58\n04 90\n00 28\n45 d0\n30 78\n00 28\n42 d0\n03 91\n40 b4\n01 bc\n1a f0 e1 f9\n41 1e\nff 29\n08 d3\n20 48\n04 9b\n19 58\n03 22\n0a 43\n1a 50\n00 20\nc4 43\n0a e0\n00 24\n00 28\n07 d0\n19 49\n04 9b\n58 50\n19 48\n19 58\n01 22\n0a 43\n1a 50\n2f 21\n40 b4\n01 bc\n1a f0 cd f9\n00 28\n08 d0\n00 78\n00 28\n05 d0\n11 48\n04 9b\n19 58\n03 22\n0a 43\n1a 50\n03 98\n00 68\n00 28\n12 d0\n0c 49\n03 91\n42 58\n04 92\n02 90\n68 46\n06 60\n0a 49\n0a 4a\n7a 44\n00 23\n20 b4\n01 bc\nff f7 0f fd\n04 98\n03 99\n02 9a\n50 50\n10 b4\n01 bc\n05 b0\nf0 bd\n'
p2861
S'.text:0001d8e8\n.text:0001d8ea\n.text:0001d8ec\n.text:0001d8ee\n.text:0001d8f0\n.text:0001d8f2\n.text:0001d8f4\n.text:0001d8f6\n.text:0001d8f8\n.text:0001d8fa\n.text:0001d8fc\n.text:0001d8fe\n.text:0001d900\n.text:0001d902\n.text:0001d904\n.text:0001d906\n.text:0001d908\n.text:0001d90a\n.text:0001d90c\n.text:0001d90e\n.text:0001d910\n.text:0001d912\n.text:0001d914\n.text:0001d916\n.text:0001d918\n.text:0001d91a\n.text:0001d91e\n.text:0001d920\n.text:0001d922\n.text:0001d924\n.text:0001d926\n.text:0001d928\n.text:0001d92a\n.text:0001d92c\n.text:0001d92e\n.text:0001d930\n.text:0001d932\n.text:0001d934\n.text:0001d936\n.text:0001d938\n.text:0001d93a\n.text:0001d93c\n.text:0001d93e\n.text:0001d940\n.text:0001d942\n.text:0001d944\n.text:0001d946\n.text:0001d948\n.text:0001d94a\n.text:0001d94c\n.text:0001d94e\n.text:0001d950\n.text:0001d952\n.text:0001d956\n.text:0001d958\n.text:0001d95a\n.text:0001d95c\n.text:0001d95e\n.text:0001d960\n.text:0001d962\n.text:0001d964\n.text:0001d966\n.text:0001d968\n.text:0001d96a\n.text:0001d96c\n.text:0001d96e\n.text:0001d970\n.text:0001d972\n.text:0001d974\n.text:0001d976\n.text:0001d978\n.text:0001d97a\n.text:0001d97c\n.text:0001d97e\n.text:0001d980\n.text:0001d982\n.text:0001d984\n.text:0001d986\n.text:0001d988\n.text:0001d98a\n.text:0001d98c\n.text:0001d98e\n.text:0001d992\n.text:0001d994\n.text:0001d996\n.text:0001d998\n.text:0001d99a\n.text:0001d99c\n.text:0001d99e\n.text:0001d9a0\n'
p2862
tp2863
sS'lame_get_highpassfreq'
p2864
(S'\n__stdcall lame_get_highpassfreq(lame_global_flags * gfp)\n'
p2865
V\u000aint lame_get_highpassfreq(lame_global_flags *gfp)\u000a\u000a{\u000a  lame_global_flags *in_r1;\u000a  int in_r2;\u000a  int in_r3;\u000a  \u000a  if (in_r2 != in_r3) {\u000a    gfp = in_r1;\u000a  }\u000a  return (int)gfp;\u000a}\u000a\u000a
p2866
S'cmp r2,r3\nbeq 0x0001ea72\npush { r1 }\npop { r0 }\n'
p2867
S'9a 42\n01 d0\n02 b4\n01 bc\n'
p2868
S'.text:0001ea6a\n.text:0001ea6c\n.text:0001ea6e\n.text:0001ea70\n'
p2869
tp2870
sS'lame_encode_flush_nogap'
p2871
(S'\n__stdcall lame_encode_flush_nogap()\n'
p2872
V\u000aundefined4 lame_encode_flush_nogap(int *piParm1,undefined4 uParm2,undefined4 uParm3)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  int *piVar2;\u000a  \u000a  uVar1 = 0xfffffffd;\u000a  if (((piParm1 != (int *)0x0) && (*piParm1 == DAT_00021290)) &&\u000a     (piVar2 = (int *)piParm1[0x48], piVar2 != (int *)0x0)) {\u000a    if (*piVar2 == DAT_00021290) {\u000a      flush_bitstream(piVar2);\u000a      uVar1 = copy_buffer(piVar2,uParm2,uParm3,1);\u000a      save_gain_values(piVar2);\u000a    }\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p2873
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r1 }\npop { r6 }\nmov r1,#0x2\nmvn r4,r1\ncmp r0,#0x0\n'
p2874
S'f0 b5\n03 af\n81 b0\n02 b4\n40 bc\n02 21\ncc 43\n00 28\n'
p2875
S'.text:00021234\n.text:00021236\n.text:00021238\n.text:0002123a\n.text:0002123c\n.text:0002123e\n.text:00021240\n.text:00021242\n'
p2876
tp2877
sS'flattenDistribution'
p2878
(S'\n__stdcall flattenDistribution(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p2879
V\u000avoid flattenDistribution(int param_1,int param_2,int param_3,int param_4,int param_5)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  \u000a  iVar5 = 0;\u000a  if (param_3 < 1) {\u000a    iVar3 = 0;\u000a    do {\u000a      iVar4 = *(int *)(param_1 + iVar5 * 4);\u000a      *(int *)(param_2 + iVar5 * 4) = iVar4;\u000a      if (iVar4 <= iVar3) {\u000a        iVar4 = iVar3;\u000a      }\u000a      iVar5 = iVar5 + 1;\u000a      iVar3 = iVar4;\u000a    } while (iVar5 != 0x27);\u000a  }\u000a  else {\u000a    iVar3 = 0;\u000a    do {\u000a      iVar4 = *(int *)(param_1 + iVar5 * 4);\u000a      iVar1 = __divsi3(param_4 * (param_5 - iVar4),param_3);\u000a      iVar1 = iVar1 + iVar4;\u000a      iVar4 = 0xff;\u000a      if (iVar1 < 0x100) {\u000a        iVar4 = iVar1;\u000a      }\u000a      iVar2 = 0;\u000a      if (-1 < iVar1) {\u000a        iVar2 = iVar4;\u000a      }\u000a      *(int *)(param_2 + iVar5 * 4) = iVar2;\u000a      if (iVar2 <= iVar3) {\u000a        iVar2 = iVar3;\u000a      }\u000a      iVar5 = iVar5 + 1;\u000a      iVar3 = iVar2;\u000a    } while (iVar5 != 0x27);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2880
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1c\nstr r3,[sp,#0xc]\nstr r2,[sp,#0x8]\nstr r1,[sp,#0x14]\nstr r0,[sp,#0x10]\nmov r6,#0x0\ncmp r2,#0x1\nblt 0x0003422e\nldr r0,[sp,#0x30]\nstr r0,[sp,#0x4]\npush { r6 }\npop { r4 }\nlsl r1,r6,#0x2\nstr r1,[sp,#0x18]\nldr r0,[sp,#0x10]\nldr r5,[r0,r1]\nldr r0,[sp,#0x4]\nsub r0,r0,r5\nldr r1,[sp,#0xc]\nmul r0,r1\nldr r1,[sp,#0x8]\nbl 0x00037980\nadd r2,r0,r5\nmov r1,#0xff\ncmp r2,#0xff\nbgt 0x0003420a\npush { r2 }\npop { r1 }\nmov r0,#0x0\ncmp r2,#0x0\nblt 0x00034214\npush { r1 }\npop { r0 }\nldr r1,[sp,#0x14]\nldr r2,[sp,#0x18]\nstr r0,[r1,r2]\ncmp r4,r0\nblt 0x00034222\npush { r4 }\npop { r0 }\nadd r6,#0x1\ncmp r6,#0x27\npush { r0 }\npop { r4 }\nbne 0x000341e8\nb 0x0003424e\npush { r6 }\npop { r1 }\nldr r3,[sp,#0x14]\nlsl r2,r6,#0x2\nldr r0,[sp,#0x10]\nldr r0,[r0,r2]\nstr r0,[r3,r2]\ncmp r1,r0\nblt 0x00034244\npush { r1 }\npop { r0 }\nadd r6,#0x1\ncmp r6,#0x27\npush { r0 }\npop { r1 }\nbne 0x00034234\nadd sp,#0x1c\npop { r4, r5, r6, r7, pc }\n'
p2881
S'f0 b5\n03 af\n87 b0\n03 93\n02 92\n05 91\n04 90\n00 26\n01 2a\n26 db\n0c 98\n01 90\n40 b4\n10 bc\nb1 00\n06 91\n04 98\n45 58\n01 98\n40 1b\n03 99\n48 43\n02 99\n03 f0 c1 fb\n42 19\nff 21\nff 2a\n01 dc\n04 b4\n02 bc\n00 20\n00 2a\n01 db\n02 b4\n01 bc\n05 99\n06 9a\n88 50\n84 42\n01 db\n10 b4\n01 bc\n01 36\n27 2e\n01 b4\n10 bc\ndd d1\n0f e0\n40 b4\n02 bc\n05 9b\nb2 00\n04 98\n80 58\n98 50\n81 42\n01 db\n02 b4\n01 bc\n01 36\n27 2e\n01 b4\n02 bc\nf2 d1\n07 b0\nf0 bd\n'
p2882
S'.text:000341cc\n.text:000341ce\n.text:000341d0\n.text:000341d2\n.text:000341d4\n.text:000341d6\n.text:000341d8\n.text:000341da\n.text:000341dc\n.text:000341de\n.text:000341e0\n.text:000341e2\n.text:000341e4\n.text:000341e6\n.text:000341e8\n.text:000341ea\n.text:000341ec\n.text:000341ee\n.text:000341f0\n.text:000341f2\n.text:000341f4\n.text:000341f6\n.text:000341f8\n.text:000341fa\n.text:000341fe\n.text:00034200\n.text:00034202\n.text:00034204\n.text:00034206\n.text:00034208\n.text:0003420a\n.text:0003420c\n.text:0003420e\n.text:00034210\n.text:00034212\n.text:00034214\n.text:00034216\n.text:00034218\n.text:0003421a\n.text:0003421c\n.text:0003421e\n.text:00034220\n.text:00034222\n.text:00034224\n.text:00034226\n.text:00034228\n.text:0003422a\n.text:0003422c\n.text:0003422e\n.text:00034230\n.text:00034232\n.text:00034234\n.text:00034236\n.text:00034238\n.text:0003423a\n.text:0003423c\n.text:0003423e\n.text:00034240\n.text:00034242\n.text:00034244\n.text:00034246\n.text:00034248\n.text:0003424a\n.text:0003424c\n.text:0003424e\n.text:00034250\n'
p2883
tp2884
sS'lame_set_decode_only'
p2885
(S'\n__stdcall lame_set_decode_only(lame_global_flags * gfp, int decode_only)\n'
p2886
V\u000aint lame_set_decode_only(lame_global_flags *gfp,int decode_only)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  lame_global_flags *gfp_00;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int *unaff_r4;\u000a  uint unaff_r5;\u000a  uint uVar9;\u000a  undefined4 *puVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int in_stack_00000000;\u000a  int *in_stack_00000008;\u000a  undefined4 *in_stack_0000000c;\u000a  char *__s;\u000a  byte *in_stack_00000014;\u000a  uint in_stack_00000018;\u000a  undefined *in_stack_0000001c;\u000a  int in_stack_00000020;\u000a  int *in_stack_00000024;\u000a  int in_stack_00000028;\u000a  uint uStack00000034;\u000a  \u000a  do {\u000a    iVar3 = unaff_r4[7];\u000a    if (unaff_r4[8] == 1) {\u000a      iVar3 = iVar3 << 1;\u000a    }\u000a    iVar3 = in_stack_00000000 + iVar3;\u000a    while( true ) {\u000a      unaff_r5 = iVar3 + unaff_r5;\u000a      unaff_r4 = (int *)*unaff_r4;\u000a      if (unaff_r4 == (int *)0x0) {\u000a        if ((*in_stack_00000014 & 0x20) != 0) {\u000a          unaff_r5 = *(int *)(in_stack_00000020 + DAT_0001e1e4) + unaff_r5;\u000a        }\u000a        uVar1 = unaff_r5;\u000a        if ((in_stack_00000018 < unaff_r5) || (uVar1 = 0, in_stack_0000001c == (undefined *)0x0))\u000a        goto LAB_0001e470;\u000a        *in_stack_0000001c = 0x49;\u000a        in_stack_0000001c[1] = 0x44;\u000a        in_stack_0000001c[2] = 0x33;\u000a        in_stack_0000001c[3] = 3;\u000a        uStack00000034 = 0;\u000a        in_stack_0000001c[4] = 0;\u000a        in_stack_0000001c[5] = 0;\u000a        uVar1 = unaff_r5 - 10;\u000a        in_stack_0000001c[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a        in_stack_0000001c[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a        in_stack_0000001c[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a        in_stack_0000001c[9] = (byte)uVar1 & 0x7f;\u000a        puVar12 = in_stack_0000001c + 10;\u000a        puVar10 = (undefined4 *)*in_stack_0000000c;\u000a        goto LAB_0001e09c;\u000a      }\u000a      uVar1 = unaff_r4[1];\u000a      uVar11 = 0xff;\u000a      if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar3 = in_stack_00000028, uVar1 == DAT_0001e1e0))\u000a      break;\u000a      do {\u000a        uVar9 = uVar11 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar9 != (uVar11 & uVar1)) {\u000a          uVar6 = uVar11 & uVar1;\u000a        }\u000a        if (uVar9 == 0) {\u000a          uVar6 = uVar9;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar3 = iVar3 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar3 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar3 = sizeOfWxxxNode(unaff_r4);\u000a      }\u000a      else {\u000a        iVar2 = unaff_r4[7];\u000a        iVar4 = unaff_r4[4];\u000a        if (unaff_r4[8] == 1) {\u000a          iVar3 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar3 = 0xb;\u000a          }\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        else {\u000a          iVar3 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar3 = 0xb;\u000a          }\u000a        }\u000a        iVar3 = iVar3 + iVar2;\u000a      }\u000a    }\u000a    in_stack_00000000 = unaff_r4[4] * 2 + 0x10;\u000a    if (unaff_r4[5] != 1) {\u000a      in_stack_00000000 = unaff_r4[4] + 0xf;\u000a    }\u000a  } while( true );\u000aLAB_0001e09c:\u000a  if (puVar10 == (undefined4 *)0x0) {\u000a    if (__s != (char *)0x0) {\u000a      iVar3 = 4;\u000a      if ((*in_stack_00000008 != 0) &&\u000a         (uVar1 = DAT_0001e49c, *(int *)(in_stack_00000020 + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar12[iVar3 + -1] = (char)uVar1;\u000a          iVar3 = iVar3 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar12,in_stack_0000001c + (unaff_r5 - (int)puVar12));\u000a    uVar1 = unaff_r5;\u000aLAB_0001e470:\u000a    if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000024) {\u000a      return uVar1;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  uVar1 = puVar10[1];\u000a  uVar11 = 0xff;\u000a  iVar3 = 4;\u000a  if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000034, uVar1 == DAT_0001e498)) {\u000a    iVar3 = puVar10[4] * 2 + 0x10;\u000a    if (puVar10[5] != 1) {\u000a      iVar3 = puVar10[4] + 0xf;\u000a    }\u000a    iVar2 = 0;\u000a    if (puVar10[8] == 1) {\u000a      iVar2 = puVar10[8];\u000a    }\u000a    uVar11 = (puVar10[7] << iVar2) + iVar3;\u000a    iVar3 = 4;\u000a    if (10 < uVar11) {\u000a      do {\u000a        puVar12[iVar3 + -1] = (char)uVar1;\u000a        iVar3 = iVar3 + -1;\u000a        uVar1 = uVar1 >> 8;\u000a      } while (0 < iVar3);\u000a      uVar11 = uVar11 - 10;\u000a      iVar3 = 4;\u000a      do {\u000a        puVar12[iVar3 + 3] = (char)uVar11;\u000a        iVar3 = iVar3 + -1;\u000a        uVar11 = uVar11 >> 8;\u000a      } while (0 < iVar3);\u000a      puVar12[8] = 0;\u000a      puVar12[9] = 0;\u000a      *(bool *)(puVar12 + 10) = puVar10[8] == 1;\u000a      puVar12[0xb] = *(undefined *)(puVar10 + 2);\u000a      puVar12[0xc] = *(undefined *)((int)puVar10 + 9);\u000a      puVar12[0xd] = *(undefined *)((int)puVar10 + 10);\u000a      puVar12 = puVar12 + 0xe;\u000a      if (puVar10[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar10[3],puVar10[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar3 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar3;\u000a      }\u000a      iVar3 = puVar10[4];\u000a      if (iVar3 != 0) {\u000a        puVar5 = (undefined *)puVar10[3];\u000a        iVar2 = iVar3;\u000a        puVar8 = puVar12;\u000a        do {\u000a          *puVar8 = *puVar5;\u000a          puVar8 = puVar8 + 1;\u000a          puVar5 = puVar5 + 1;\u000a          iVar2 = iVar2 + -1;\u000a        } while (iVar2 != 0);\u000a        puVar12 = puVar12 + iVar3;\u000a      }\u000a      *puVar12 = 0;\u000a      puVar12 = puVar12 + 1;\u000a      if (puVar10[8] == 1) {\u000aLAB_0001e338:\u000a        puVar12 = (undefined *)writeUcs2s(puVar12,puVar10[6],puVar10[7]);\u000a      }\u000a      else {\u000a        iVar3 = puVar10[7];\u000a        if (iVar3 != 0) {\u000a          puVar5 = (undefined *)puVar10[6];\u000a          iVar2 = iVar3;\u000a          puVar8 = puVar12;\u000a          do {\u000a            *puVar8 = *puVar5;\u000a            puVar8 = puVar8 + 1;\u000a            puVar5 = puVar5 + 1;\u000a            iVar2 = iVar2 + -1;\u000a          } while (iVar2 != 0);\u000aLAB_0001e36a:\u000a          puVar12 = puVar12 + iVar3;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    do {\u000a      uVar9 = uVar11 & 0x57000000;\u000a      uVar6 = uStack00000034;\u000a      if (uVar9 != (uVar11 & uVar1)) {\u000a        uVar6 = uVar11 & uVar1;\u000a      }\u000a      if (uVar9 == 0) {\u000a        uVar6 = uVar9;\u000a      }\u000a      uVar7 = uVar7 | uVar6;\u000a      iVar3 = iVar3 + -1;\u000a      uVar11 = uVar11 << 8;\u000a    } while (iVar3 != 0);\u000a    if (uVar7 == 0) {\u000a      uVar11 = sizeOfWxxxNode(puVar10);\u000a      iVar3 = 4;\u000a      if (10 < uVar11) {\u000a        do {\u000a          puVar12[iVar3 + -1] = (char)uVar1;\u000a          iVar3 = iVar3 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar3);\u000a        uVar11 = uVar11 - 10;\u000a        iVar3 = 4;\u000a        do {\u000a          puVar12[iVar3 + 3] = (char)uVar11;\u000a          iVar3 = iVar3 + -1;\u000a          uVar11 = uVar11 >> 8;\u000a        } while (0 < iVar3);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        puVar8 = puVar12 + 10;\u000a        if (puVar10[4] != 0) {\u000a          *(bool *)(puVar12 + 10) = puVar10[5] == 1;\u000a          puVar12 = puVar12 + 0xb;\u000a          if (puVar10[5] == 1) {\u000a            puVar8 = (undefined *)writeUcs2s(puVar12,puVar10[3],puVar10[4]);\u000a            *puVar8 = 0;\u000a            puVar8[1] = 0;\u000a            puVar8 = puVar8 + 2;\u000a          }\u000a          else {\u000a            iVar3 = puVar10[4];\u000a            if (iVar3 != 0) {\u000a              puVar5 = (undefined *)puVar10[3];\u000a              iVar2 = iVar3;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar2 = iVar2 + -1;\u000a              } while (iVar2 != 0);\u000a              puVar12 = puVar12 + iVar3;\u000a            }\u000a            *puVar12 = 0;\u000a            puVar8 = puVar12 + 1;\u000a          }\u000a        }\u000a        if (puVar10[8] == 1) {\u000a          puVar12 = (undefined *)writeLoBytes(puVar8,puVar10[6],puVar10[7]);\u000a        }\u000a        else {\u000a          iVar3 = puVar10[7];\u000a          puVar12 = puVar8;\u000a          if (iVar3 != 0) {\u000a            puVar5 = (undefined *)puVar10[6];\u000a            iVar2 = iVar3;\u000a            puVar12 = puVar8;\u000a            do {\u000a              *puVar12 = *puVar5;\u000a              puVar12 = puVar12 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar2 = iVar2 + -1;\u000a            } while (iVar2 != 0);\u000a            puVar12 = puVar8 + iVar3;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      iVar3 = puVar10[7];\u000a      iVar2 = puVar10[4];\u000a      if (puVar10[8] == 1) {\u000a        iVar4 = iVar2 * 2 + 0xd;\u000a        if (iVar2 == 0) {\u000a          iVar4 = 0xb;\u000a        }\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      else {\u000a        iVar4 = iVar2 + 0xc;\u000a        if (iVar2 == 0) {\u000a          iVar4 = 0xb;\u000a        }\u000a      }\u000a      iVar2 = 4;\u000a      if (10 < (uint)(iVar4 + iVar3)) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a        uVar1 = (iVar4 + iVar3) - 10;\u000a        iVar3 = 4;\u000a        do {\u000a          puVar12[iVar3 + 3] = (char)uVar1;\u000a          iVar3 = iVar3 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar3);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        *(bool *)(puVar12 + 10) = puVar10[8] == 1;\u000a        puVar12 = puVar12 + 0xb;\u000a        iVar3 = puVar10[4];\u000a        if (iVar3 != 0) {\u000a          if (puVar10[5] == 1) {\u000a            puVar12 = (undefined *)writeUcs2s(puVar12,puVar10[3]);\u000a            *puVar12 = 0;\u000a            puVar12[1] = 0;\u000a            puVar12 = puVar12 + 2;\u000a          }\u000a          else {\u000a            puVar5 = (undefined *)puVar10[3];\u000a            iVar2 = iVar3;\u000a            puVar8 = puVar12;\u000a            do {\u000a              *puVar8 = *puVar5;\u000a              puVar8 = puVar8 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar2 = iVar2 + -1;\u000a            } while (iVar2 != 0);\u000a            puVar12[iVar3] = 0;\u000a            puVar12 = puVar12 + iVar3 + 1;\u000a          }\u000a        }\u000a        if (puVar10[8] == 1) goto LAB_0001e338;\u000a        iVar3 = puVar10[7];\u000a        if (iVar3 != 0) {\u000a          puVar5 = (undefined *)puVar10[6];\u000a          iVar2 = iVar3;\u000a          puVar8 = puVar12;\u000a          do {\u000a            *puVar8 = *puVar5;\u000a            puVar8 = puVar8 + 1;\u000a            puVar5 = puVar5 + 1;\u000a            iVar2 = iVar2 + -1;\u000a          } while (iVar2 != 0);\u000a          goto LAB_0001e36a;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  puVar10 = (undefined4 *)*puVar10;\u000a  goto LAB_0001e09c;\u000a}\u000a\u000a
p2887
S'pop { r0 }\n'
p2888
S'01 bc\n'
p2889
S'.text:0001dfb2\n'
p2890
tp2891
sS'lame_set_preset_expopts'
p2892
(S'\n__stdcall lame_set_preset_expopts()\n'
p2893
V\u000aundefined4 lame_set_preset_expopts(void)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p2894
S'mov r0,#0x0\nbx lr\n'
p2895
S'00 20\n70 47\n'
p2896
S'.text:0002f5b2\n.text:0002f5b4\n'
p2897
tp2898
sS'lame_get_analysis'
p2899
(S'\n__stdcall lame_get_analysis(lame_global_flags * gfp)\n'
p2900
V\u000aint lame_get_analysis(lame_global_flags *gfp)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = *(char **)(DAT_0001e1d4 + 0x1df5e + (int)gfp * 4);\u000a                    /* WARNING: Subroutine does not return */\u000a  strlen(__s);\u000a}\u000a\u000a
p2901
S'lsl r0,r0,#0x2\nldr r1,[0x0001e1d4]\nadd r1,pc\nldr r0,[r1,r0]\nstr r0,[sp,#0xc]\nbl 0x000379e0\n'
p2902
S'80 00\n9e 49\n79 44\n08 58\n03 90\n19 f0 3e fd\n'
p2903
S'.text:0001df56\n.text:0001df58\n.text:0001df5a\n.text:0001df5c\n.text:0001df5e\n.text:0001df60\n'
p2904
tp2905
sS'lame_set_compression_ratio'
p2906
(S'\n__stdcall lame_set_compression_ratio(lame_global_flags * gfp, float compression_ratio)\n'
p2907
V\u000aint lame_set_compression_ratio(lame_global_flags *gfp,float compression_ratio)\u000a\u000a{\u000a  undefined *puVar1;\u000a  int in_r1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  lame_global_flags *plVar8;\u000a  int iVar9;\u000a  uint uVar10;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar11;\u000a  int *unaff_r5;\u000a  uint uVar12;\u000a  float extraout_s0;\u000a  float extraout_s0_00;\u000a  float extraout_s0_01;\u000a  undefined4 extraout_s0_02;\u000a  undefined4 extraout_s0_03;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    gfp_00 = gfp;\u000a    if (in_r1 != 0) {\u000a      puVar5 = (undefined *)unaff_r5[6];\u000a      iVar9 = in_r1;\u000a      gfp_00 = gfp;\u000a      do {\u000a        *(undefined *)&gfp_00->class_id = *puVar5;\u000a        gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + 1);\u000a        puVar5 = puVar5 + 1;\u000a        iVar9 = iVar9 + -1;\u000a      } while (iVar9 != 0);\u000a      unaff_r5 = in_stack_00000028;\u000a      gfp_00 = (lame_global_flags *)((int)&gfp->class_id + in_r1);\u000a    }\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          unaff_r5 = (int *)*unaff_r5;\u000a          if (unaff_r5 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar9 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar10 = DAT_0001e49c,\u000a                 *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a                do {\u000a                  *(undefined *)((int)&gfp_00->attackthre_s + iVar9 + 3) = (char)uVar10;\u000a                  iVar9 = iVar9 + -1;\u000a                  uVar10 = uVar10 >> 8;\u000a                } while (0 < iVar9);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(gfp_00,(in_stack_0000002c + in_stack_00000018) - (int)gfp_00);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar10 = unaff_r5[1];\u000a          uVar12 = 0xff;\u000a          iVar9 = 4;\u000a          if ((uVar10 != DAT_0001e494) && (uVar2 = in_stack_00000030, uVar10 != DAT_0001e498))\u000a          break;\u000a          iVar9 = unaff_r5[4] * 2 + 0x10;\u000a          if (unaff_r5[5] != 1) {\u000a            iVar9 = unaff_r5[4] + 0xf;\u000a          }\u000a          iVar3 = 0;\u000a          if (unaff_r5[8] == 1) {\u000a            iVar3 = unaff_r5[8];\u000a          }\u000a          uVar12 = (unaff_r5[7] << iVar3) + iVar9;\u000a          iVar9 = 4;\u000a          if (10 < uVar12) {\u000a            do {\u000a              *(undefined *)((int)&gfp_00->attackthre_s + iVar9 + 3) = (char)uVar10;\u000a              iVar9 = iVar9 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar9);\u000a            uVar12 = uVar12 - 10;\u000a            iVar9 = 4;\u000a            do {\u000a              *(undefined *)((int)&gfp_00->class_id + iVar9 + 3) = (char)uVar12;\u000a              iVar9 = iVar9 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar9);\u000a            *(undefined *)&gfp_00->num_channels = 0;\u000a            *(undefined *)((int)&gfp_00->num_channels + 1) = 0;\u000a            *(bool *)((int)&gfp_00->num_channels + 2) = unaff_r5[8] == 1;\u000a            *(undefined *)((int)&gfp_00->num_channels + 3) = *(undefined *)(unaff_r5 + 2);\u000a            *(undefined *)&gfp_00->samplerate_in = *(undefined *)((int)unaff_r5 + 9);\u000a            *(undefined *)((int)&gfp_00->samplerate_in + 1) = *(undefined *)((int)unaff_r5 + 10);\u000a            puVar5 = (undefined *)((int)&gfp_00->samplerate_in + 2);\u000a            if (unaff_r5[5] == 1) {\u000a              gfp_00 = (lame_global_flags *)writeUcs2s(puVar5,unaff_r5[3],unaff_r5[4]);\u000a              *(undefined *)&gfp_00->class_id = 0;\u000a              *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a              iVar9 = lame_get_ReplayGain_input(gfp_00);\u000a              return iVar9;\u000a            }\u000a            iVar9 = unaff_r5[4];\u000a            if (iVar9 != 0) {\u000a              puVar1 = (undefined *)unaff_r5[3];\u000a              iVar3 = iVar9;\u000a              puVar7 = puVar5;\u000a              do {\u000a                *puVar7 = *puVar1;\u000a                puVar7 = puVar7 + 1;\u000a                puVar1 = puVar1 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              puVar5 = puVar5 + iVar9;\u000a            }\u000a            *puVar5 = 0;\u000a            gfp_00 = (lame_global_flags *)(puVar5 + 1);\u000a            if (unaff_r5[8] == 1) goto LAB_0001e338;\u000a            iVar9 = unaff_r5[7];\u000a            if (iVar9 != 0) {\u000a              puVar5 = (undefined *)unaff_r5[6];\u000a              iVar3 = iVar9;\u000a              plVar8 = gfp_00;\u000a              do {\u000a                *(undefined *)&plVar8->class_id = *puVar5;\u000a                plVar8 = (lame_global_flags *)((int)&plVar8->class_id + 1);\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a        do {\u000a          uVar6 = uVar12 & 0x57000000;\u000a          uVar11 = in_stack_00000030;\u000a          if (uVar6 != (uVar12 & uVar10)) {\u000a            uVar11 = uVar12 & uVar10;\u000a          }\u000a          if (uVar6 == 0) {\u000a            uVar11 = uVar6;\u000a          }\u000a          uVar2 = uVar2 | uVar11;\u000a          iVar9 = iVar9 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar9 != 0);\u000a        if (uVar2 != 0) goto code_r0x0001e174;\u000a        uVar12 = sizeOfWxxxNode(compression_ratio,unaff_r5);\u000a        iVar9 = 4;\u000a        compression_ratio = extraout_s0;\u000a      } while (uVar12 < 0xb);\u000a      do {\u000a        *(undefined *)((int)&gfp_00->attackthre_s + iVar9 + 3) = (char)uVar10;\u000a        iVar9 = iVar9 + -1;\u000a        uVar10 = uVar10 >> 8;\u000a      } while (0 < iVar9);\u000a      uVar12 = uVar12 - 10;\u000a      iVar9 = 4;\u000a      do {\u000a        *(undefined *)((int)&gfp_00->class_id + iVar9 + 3) = (char)uVar12;\u000a        iVar9 = iVar9 + -1;\u000a        uVar12 = uVar12 >> 8;\u000a      } while (0 < iVar9);\u000a      *(undefined *)&gfp_00->num_channels = 0;\u000a      *(undefined *)((int)&gfp_00->num_channels + 1) = 0;\u000a      gfp = (lame_global_flags *)((int)&gfp_00->num_channels + 2);\u000a      compression_ratio = extraout_s0;\u000a      if (unaff_r5[4] != 0) {\u000a        *(bool *)((int)&gfp_00->num_channels + 2) = unaff_r5[5] == 1;\u000a        puVar5 = (undefined *)((int)&gfp_00->num_channels + 3);\u000a        if (unaff_r5[5] == 1) {\u000a          puVar5 = (undefined *)writeUcs2s(puVar5,unaff_r5[3],unaff_r5[4]);\u000a          *puVar5 = 0;\u000a          puVar5[1] = 0;\u000a          gfp = (lame_global_flags *)(puVar5 + 2);\u000a          compression_ratio = extraout_s0_00;\u000a        }\u000a        else {\u000a          iVar9 = unaff_r5[4];\u000a          if (iVar9 != 0) {\u000a            puVar1 = (undefined *)unaff_r5[3];\u000a            iVar3 = iVar9;\u000a            puVar7 = puVar5;\u000a            do {\u000a              *puVar7 = *puVar1;\u000a              puVar7 = puVar7 + 1;\u000a              puVar1 = puVar1 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar5 = puVar5 + iVar9;\u000a          }\u000a          *puVar5 = 0;\u000a          gfp = (lame_global_flags *)(puVar5 + 1);\u000a          compression_ratio = extraout_s0;\u000a        }\u000a      }\u000a      if (unaff_r5[8] != 1) break;\u000a      gfp_00 = (lame_global_flags *)writeLoBytes(gfp,unaff_r5[6],unaff_r5[7]);\u000a      compression_ratio = (float)extraout_s0_03;\u000a    }\u000a    in_r1 = unaff_r5[7];\u000a    in_stack_00000028 = unaff_r5;\u000a  } while( true );\u000acode_r0x0001e174:\u000a  iVar9 = unaff_r5[7];\u000a  iVar3 = unaff_r5[4];\u000a  if (unaff_r5[8] == 1) {\u000a    iVar4 = iVar3 * 2 + 0xd;\u000a    if (iVar3 == 0) {\u000a      iVar4 = 0xb;\u000a    }\u000a    iVar9 = iVar9 << 1;\u000a  }\u000a  else {\u000a    iVar4 = iVar3 + 0xc;\u000a    if (iVar3 == 0) {\u000a      iVar4 = 0xb;\u000a    }\u000a  }\u000a  iVar3 = 4;\u000a  if (10 < (uint)(iVar4 + iVar9)) {\u000a    do {\u000a      *(undefined *)((int)&gfp_00->attackthre_s + iVar3 + 3) = (char)uVar10;\u000a      iVar3 = iVar3 + -1;\u000a      uVar10 = uVar10 >> 8;\u000a    } while (0 < iVar3);\u000a    uVar10 = (iVar4 + iVar9) - 10;\u000a    iVar9 = 4;\u000a    do {\u000a      *(undefined *)((int)&gfp_00->class_id + iVar9 + 3) = (char)uVar10;\u000a      iVar9 = iVar9 + -1;\u000a      uVar10 = uVar10 >> 8;\u000a    } while (0 < iVar9);\u000a    *(undefined *)&gfp_00->num_channels = 0;\u000a    *(undefined *)((int)&gfp_00->num_channels + 1) = 0;\u000a    *(bool *)((int)&gfp_00->num_channels + 2) = unaff_r5[8] == 1;\u000a    gfp_00 = (lame_global_flags *)((int)&gfp_00->num_channels + 3);\u000a    iVar9 = unaff_r5[4];\u000a    if (iVar9 != 0) {\u000a      if (unaff_r5[5] == 1) {\u000a        puVar5 = (undefined *)writeUcs2s(gfp_00,unaff_r5[3]);\u000a        *puVar5 = 0;\u000a        puVar5[1] = 0;\u000a        gfp_00 = (lame_global_flags *)(puVar5 + 2);\u000a        compression_ratio = extraout_s0_01;\u000a      }\u000a      else {\u000a        puVar5 = (undefined *)unaff_r5[3];\u000a        iVar3 = iVar9;\u000a        plVar8 = gfp_00;\u000a        do {\u000a          *(undefined *)&plVar8->class_id = *puVar5;\u000a          plVar8 = (lame_global_flags *)((int)&plVar8->class_id + 1);\u000a          puVar5 = puVar5 + 1;\u000a          iVar3 = iVar3 + -1;\u000a        } while (iVar3 != 0);\u000a        *(undefined *)((int)&gfp_00->class_id + iVar9) = 0;\u000a        gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + iVar9 + 1);\u000a      }\u000a    }\u000a    if (unaff_r5[8] == 1) {\u000aLAB_0001e338:\u000a      gfp_00 = (lame_global_flags *)writeUcs2s(gfp_00,unaff_r5[6],unaff_r5[7]);\u000a      compression_ratio = (float)extraout_s0_02;\u000a    }\u000a    else {\u000a      iVar9 = unaff_r5[7];\u000a      if (iVar9 != 0) {\u000a        puVar5 = (undefined *)unaff_r5[6];\u000a        iVar3 = iVar9;\u000a        plVar8 = gfp_00;\u000a        do {\u000a          *(undefined *)&plVar8->class_id = *puVar5;\u000a          plVar8 = (lame_global_flags *)((int)&plVar8->class_id + 1);\u000a          puVar5 = puVar5 + 1;\u000a          iVar3 = iVar3 + -1;\u000a        } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a        gfp_00 = (lame_global_flags *)((int)&gfp_00->class_id + iVar9);\u000a      }\u000a    }\u000a  }\u000a  goto LAB_0001e09a;\u000a}\u000a\u000a
p2908
S'cmp r1,#0x0\nbeq 0x0001e344\nldr r2,[r5,#0x18]\npush { r1 }\npop { r3 }\npush { r0 }\npop { r4 }\nldrb r5,[r2,#0x0]\nstrb r5,[r4,#0x0]\nadd r4,#0x1\nadd r2,#0x1\nsub r3,#0x1\ncmp r3,#0x0\nbne 0x0001e3b4\nadd r6,r0,r1\n'
p2909
S'00 29\ncc d0\naa 69\n02 b4\n08 bc\n01 b4\n10 bc\n15 78\n25 70\n01 34\n01 32\n01 3b\n00 2b\nf8 d1\n46 18\n'
p2910
S'.text:0001e3a6\n.text:0001e3a8\n.text:0001e3aa\n.text:0001e3ac\n.text:0001e3ae\n.text:0001e3b0\n.text:0001e3b2\n.text:0001e3b4\n.text:0001e3b6\n.text:0001e3b8\n.text:0001e3ba\n.text:0001e3bc\n.text:0001e3be\n.text:0001e3c0\n.text:0001e3c2\n'
p2911
tp2912
sS'VBR_encode_frame'
p2913
(S'\n__stdcall VBR_encode_frame()\n'
p2914
V\u000avoid VBR_encode_frame(void)\u000a\u000a{\u000a  (*(exit + DAT_0003839c))();\u000a  return;\u000a}\u000a\u000a
p2915
S'ldr r12,[0x3839c]\nadd pc,r12,pc\n'
p2916
S'00 c0 9f e5\n0f f0 8c e0\n'
p2917
S'.text:00038394\n.text:00038398\n'
p2918
tp2919
sS'__extendsfdf2'
p2920
(S'\n__stdcall __extendsfdf2()\n'
p2921
V\u000avoid __extendsfdf2(void)\u000a\u000a{\u000a  (*(__muldf3 + DAT_00037acc))();\u000a  return;\u000a}\u000a\u000a
p2922
S'ldr r12,[0x37acc]\nadd pc,r12,pc\n'
p2923
S'00 c0 9f e5\n0f f0 8c e0\n'
p2924
S'.text:00037ac4\n.text:00037ac8\n'
p2925
tp2926
sS'lame_set_original'
p2927
(S'\n__stdcall lame_set_original(lame_global_flags * gfp, int original)\n'
p2928
V\u000aint lame_set_original(lame_global_flags *gfp,int original)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined *puVar2;\u000a  int iVar3;\u000a  undefined unaff_r4;\u000a  undefined *unaff_r5;\u000a  undefined *in_stack_00000000;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000024;\u000a  int in_stack_00000030;\u000a  int in_stack_00000034;\u000a  \u000a  do {\u000a    puVar2 = in_stack_00000000;\u000a    *puVar2 = (char)gfp;\u000a    in_stack_00000000 = puVar2 + 1;\u000a    bVar1 = *(byte *)original;\u000a    gfp = (lame_global_flags *)(uint)bVar1;\u000a    original = (int)((byte *)original + 1);\u000a  } while (bVar1 != 0);\u000a  *in_stack_00000000 = unaff_r4;\u000a  puVar2[2] = unaff_r4;\u000a  puVar2[3] = unaff_r4;\u000a  puVar2 = puVar2 + 4;\u000a  iVar3 = in_stack_00000034;\u000a  do {\u000a    *puVar2 = *unaff_r5;\u000a    puVar2 = puVar2 + 1;\u000a    unaff_r5 = unaff_r5 + 1;\u000a    iVar3 = iVar3 + -1;\u000a  } while (iVar3 != 0);\u000a  __aeabi_memclr(in_stack_00000000 + in_stack_00000034 + 3,\u000a                 (in_stack_00000030 + in_stack_0000001c) -\u000a                 (int)(in_stack_00000000 + in_stack_00000034 + 3));\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000024) {\u000a    return in_stack_00000030;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p2929
S'pop { r3 }\nstrb r0,[r3,#0x0]\nadd r2,r1,#0x1\nadd r3,#0x1\nldrb r0,[r1,#0x0]\ncmp r0,#0x0\npush { r2 }\npop { r1 }\nbne 0x0001e428\nb 0x0001e43e\n'
p2930
S'08 bc\n18 70\n4a 1c\n01 33\n08 78\n00 28\n04 b4\n02 bc\nf7 d1\n01 e0\n'
p2931
S'.text:0001e426\n.text:0001e428\n.text:0001e42a\n.text:0001e42c\n.text:0001e42e\n.text:0001e430\n.text:0001e432\n.text:0001e434\n.text:0001e436\n.text:0001e438\n'
p2932
tp2933
sS'set_frame_pinfo'
p2934
(S'\n__stdcall set_frame_pinfo()\n'
p2935
V\u000avoid set_frame_pinfo(void)\u000a\u000a{\u000a  (*(__subsf3 + DAT_00037b7c))();\u000a  return;\u000a}\u000a\u000a
p2936
S'ldr r12,[0x37b7c]\nadd pc,r12,pc\n'
p2937
S'00 c0 9f e5\n0f f0 8c e0\n'
p2938
S'.text:00037b74\n.text:00037b78\n'
p2939
tp2940
sS'get_eit_entry'
p2941
(S'\n__stdcall get_eit_entry()\n'
p2942
V\u000aundefined4 get_eit_entry(int iParm1,int iParm2,undefined4 uParm3)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  bool bVar4;\u000a  int local_14;\u000a  undefined4 uStack16;\u000a  \u000a  if (*(int *)(DAT_000365c4 + 0x364dc) == 0) {\u000a    iVar1 = *(int *)(DAT_000365cc + 0x36520);\u000a    local_14 = *(int *)(DAT_000365c8 + 0x3651c) - iVar1 >> 3;\u000a    uStack16 = uParm3;\u000a  }\u000a  else {\u000a    local_14 = iParm2;\u000a    uStack16 = uParm3;\u000a    iVar1 = __gnu_Unwind_Find_exidx\u000a                      (iParm2 + -2,&local_14,uParm3,*(int *)(DAT_000365c4 + 0x364dc),iParm1);\u000a    if (iVar1 == 0) goto LAB_000364fc;\u000a  }\u000a  iVar1 = search_EIT_table(iVar1,local_14,iParm2 + -2);\u000a  if (iVar1 != 0) {\u000a    uVar2 = selfrel_offset31();\u000a    iVar3 = *(int *)(iVar1 + 4);\u000a    bVar4 = iVar3 == 1;\u000a    if (bVar4) {\u000a      iVar3 = 0;\u000a      *(undefined4 *)(iParm1 + 0x10) = 0;\u000a    }\u000a    *(undefined4 *)(iParm1 + 0x48) = uVar2;\u000a    if (bVar4) {\u000a      return 5;\u000a    }\u000a    if (iVar3 < 0) {\u000a      *(int *)(iParm1 + 0x4c) = iVar1 + 4;\u000a    }\u000a    else {\u000a      uVar2 = selfrel_offset31();\u000a      *(undefined4 *)(iParm1 + 0x4c) = uVar2;\u000a    }\u000a    *(uint *)(iParm1 + 0x50) = (uint)(iVar3 < 0);\u000a    if ((int)**(uint **)(iParm1 + 0x4c) < 0) {\u000a      iVar1 = __gnu_unwind_get_pr_addr(**(uint **)(iParm1 + 0x4c) >> 0x18 & 0xf);\u000a      *(int *)(iParm1 + 0x10) = iVar1;\u000a      if (iVar1 != 0) {\u000a        return 0;\u000a      }\u000a      return 9;\u000a    }\u000a    uVar2 = selfrel_offset31();\u000a    *(undefined4 *)(iParm1 + 0x10) = uVar2;\u000a    return 0;\u000a  }\u000aLAB_000364fc:\u000a  *(undefined4 *)(iParm1 + 0x10) = 0;\u000a  return 9;\u000a}\u000a\u000a
p2943
S'ldr r3,[0x365c4]\nstmdb sp!,{ r0 r1 r2 r4 r5 lr }\nldr r3,[pc,r3]\ncpy r4,r0\ncmp r3,#0x0\nsub r5,r1,#0x2\nbeq 0x0003650c\ncpy r0,r5\nadd r1,sp,#0x4\nbl 0x00016bac\ncmp r0,#0x0\nbne 0x00036528\nmov r3,#0x0\nstr r3,[r4,#0x10]\nmov r0,#0x9\nb 0x000365bc\nldr r3,[0x365c8]\nldr r0,[0x365cc]\nldr r3,[pc,r3]\nldr r0,[pc,r0]\nrsb r3,r0,r3\nmov r3,r3, asr #0x3\nstr r3,[sp,#0x4]\ncpy r2,r5\nldr r1,[sp,#0x4]\nbl 0x000363d8\nsubs r5,r0,#0x0\nbeq 0x000364fc\nbl 0x000363c0\nldr r3,[r5,#0x4]\ncmp r3,#0x1\nmoveq r3,#0x0\nstreq r3,[r4,#0x10]\nstr r0,[r4,#0x48]\nmoveq r0,#0x5\nbeq 0x000365bc\ncmp r3,#0x0\nadd r0,r5,#0x4\nstrlt r0,[r4,#0x4c]\nmovlt r3,#0x1\nblt 0x0003657c\nbl 0x000363c0\nmov r3,#0x0\nstr r0,[r4,#0x4c]\nldr r0,[r4,#0x4c]\nstr r3,[r4,#0x50]\nldr r3,[r0,#0x0]\ncmp r3,#0x0\nbge 0x000365b0\nmov r0,r3, lsr #0x18\nand r0,r0,#0xf\nbl 0x0003647c\ncmp r0,#0x0\nstr r0,[r4,#0x10]\nmoveq r0,#0x9\nmovne r0,#0x0\nb 0x000365bc\nbl 0x000363c0\nstr r0,[r4,#0x10]\nmov r0,#0x0\nadd sp,sp,#0xc\nldmia sp!,{ r4 r5 pc }\n'
p2944
S'f0 30 9f e5\n37 40 2d e9\n03 30 9f e7\n00 40 a0 e1\n00 00 53 e3\n02 50 41 e2\n08 00 00 0a\n05 00 a0 e1\n04 10 8d e2\nad 81 ff eb\n00 00 50 e3\n0a 00 00 1a\n00 30 a0 e3\n10 30 84 e5\n09 00 a0 e3\n2b 00 00 ea\nb4 30 9f e5\nb4 00 9f e5\n03 30 9f e7\n00 00 9f e7\n03 30 60 e0\nc3 31 a0 e1\n04 30 8d e5\n05 20 a0 e1\n04 10 9d e5\na8 ff ff eb\n00 50 50 e2\nef ff ff 0a\n9f ff ff eb\n04 30 95 e5\n01 00 53 e3\n00 30 a0 03\n10 30 84 05\n48 00 84 e5\n05 00 a0 03\n17 00 00 0a\n00 00 53 e3\n04 00 85 e2\n4c 00 84 b5\n01 30 a0 b3\n02 00 00 ba\n92 ff ff eb\n00 30 a0 e3\n4c 00 84 e5\n4c 00 94 e5\n50 30 84 e5\n00 30 90 e5\n00 00 53 e3\n07 00 00 aa\n23 0c a0 e1\n0f 00 00 e2\nb7 ff ff eb\n00 00 50 e3\n10 00 84 e5\n09 00 a0 03\n00 00 a0 13\n02 00 00 ea\n82 ff ff eb\n10 00 84 e5\n00 00 a0 e3\n0c d0 8d e2\n30 80 bd e8\n'
p2945
S'.text:000364cc\n.text:000364d0\n.text:000364d4\n.text:000364d8\n.text:000364dc\n.text:000364e0\n.text:000364e4\n.text:000364e8\n.text:000364ec\n.text:000364f0\n.text:000364f4\n.text:000364f8\n.text:000364fc\n.text:00036500\n.text:00036504\n.text:00036508\n.text:0003650c\n.text:00036510\n.text:00036514\n.text:00036518\n.text:0003651c\n.text:00036520\n.text:00036524\n.text:00036528\n.text:0003652c\n.text:00036530\n.text:00036534\n.text:00036538\n.text:0003653c\n.text:00036540\n.text:00036544\n.text:00036548\n.text:0003654c\n.text:00036550\n.text:00036554\n.text:00036558\n.text:0003655c\n.text:00036560\n.text:00036564\n.text:00036568\n.text:0003656c\n.text:00036570\n.text:00036574\n.text:00036578\n.text:0003657c\n.text:00036580\n.text:00036584\n.text:00036588\n.text:0003658c\n.text:00036590\n.text:00036594\n.text:00036598\n.text:0003659c\n.text:000365a0\n.text:000365a4\n.text:000365a8\n.text:000365ac\n.text:000365b0\n.text:000365b4\n.text:000365b8\n.text:000365bc\n.text:000365c0\n'
p2946
tp2947
sS'lame_bitrate_kbps'
p2948
(S'\n__stdcall lame_bitrate_kbps()\n'
p2949
V\u000avoid lame_bitrate_kbps(int *piParm1,int *piParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  \u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_000219d4)) &&\u000a      (piVar3 = (int *)piParm1[0x48], piVar3 != (int *)0x0)) && (*piVar3 == DAT_000219d4)) {\u000a    if (piVar3[0x26] != 0) {\u000a      __aeabi_memset4(piParm2,0x38,0xff);\u000a      *piParm2 = piVar3[0x1e];\u000a      return;\u000a    }\u000a    iVar1 = 0;\u000a    iVar2 = *(int *)(DAT_000219d8 + 0x219bc);\u000a    do {\u000a      piParm2[iVar1] = *(int *)(iVar2 + piVar3[4] * 0x40 + iVar1 * 4 + 4);\u000a      iVar1 = iVar1 + 1;\u000a    } while (iVar1 != 0xe);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2950
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\ncmp r0,#0x0\nbeq 0x000219d0\nldr r1,[r0,#0x0]\nldr r2,[0x000219d4]\ncmp r1,r2\nbne 0x000219d0\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r5,[r0,r1]\ncmp r5,#0x0\nbeq 0x000219d0\nldr r0,[r5,#0x0]\nldr r1,[0x000219d4]\ncmp r0,r1\nbne 0x000219d0\nmov r0,#0x98\nldr r0,[r5,r0]\ncmp r0,#0x0\nbeq 0x000219b4\nmov r1,#0x38\nmov r2,#0xff\npush { r4 }\npop { r0 }\nbl 0x000380c0\nldr r0,[r5,#0x78]\nstr r0,[r4,#0x0]\npop { r4, r5, r7, pc }\nmov r0,#0x0\nldr r1,[0x000219d8]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r2,[r5,#0x10]\nlsl r2,r2,#0x6\nadd r2,r1,r2\nlsl r3,r0,#0x2\nadd r2,r2,r3\nldr r2,[r2,#0x4]\nstr r2,[r4,r3]\nadd r0,#0x1\ncmp r0,#0xe\nbne 0x000219bc\npop { r4, r5, r7, pc }\n'
p2951
S'b0 b5\n02 af\n02 b4\n10 bc\n00 28\n27 d0\n01 68\n14 4a\n91 42\n23 d1\n09 21\n49 01\n45 58\n00 2d\n1e d0\n28 68\n0f 49\n88 42\n1a d1\n98 20\n28 58\n00 28\n08 d0\n38 21\nff 22\n10 b4\n01 bc\n16 f0 89 fb\na8 6f\n20 60\nb0 bd\n00 20\n08 49\n79 44\n09 68\n2a 69\n92 01\n8a 18\n83 00\nd2 18\n52 68\ne2 50\n01 30\n0e 28\nf5 d1\nb0 bd\n'
p2952
S'.text:00021974\n.text:00021976\n.text:00021978\n.text:0002197a\n.text:0002197c\n.text:0002197e\n.text:00021980\n.text:00021982\n.text:00021984\n.text:00021986\n.text:00021988\n.text:0002198a\n.text:0002198c\n.text:0002198e\n.text:00021990\n.text:00021992\n.text:00021994\n.text:00021996\n.text:00021998\n.text:0002199a\n.text:0002199c\n.text:0002199e\n.text:000219a0\n.text:000219a2\n.text:000219a4\n.text:000219a6\n.text:000219a8\n.text:000219aa\n.text:000219ae\n.text:000219b0\n.text:000219b2\n.text:000219b4\n.text:000219b6\n.text:000219b8\n.text:000219ba\n.text:000219bc\n.text:000219be\n.text:000219c0\n.text:000219c2\n.text:000219c4\n.text:000219c6\n.text:000219c8\n.text:000219ca\n.text:000219cc\n.text:000219ce\n.text:000219d0\n'
p2953
tp2954
sS'__muldf3'
p2955
(S'\n__stdcall __muldf3()\n'
p2956
V\u000avoid __muldf3(void)\u000a\u000a{\u000a  (*(__adddf3 + DAT_00037adc))();\u000a  return;\u000a}\u000a\u000a
p2957
S'ldr r12,[0x37adc]\nadd pc,r12,pc\n'
p2958
S'00 c0 9f e5\n0f f0 8c e0\n'
p2959
S'.text:00037ad4\n.text:00037ad8\n'
p2960
tp2961
sS'fread'
p2962
(S'\n__stdcall fread(void * __ptr, size_t __size, size_t __n, FILE * __stream)\n'
p2963
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(lame_get_lametag_frame + DAT_000384fc))();\u000a  return sVar1;\u000a}\u000a\u000a
p2964
S'ldr r12,[0x384fc]\nadd pc,r12,pc\n'
p2965
S'00 c0 9f e5\n0f f0 8c e0\n'
p2966
S'.text:000384f4\n.text:000384f8\n'
p2967
tp2968
sS'init_outer_loop'
p2969
(S'\n__stdcall init_outer_loop(lame_internal_flags * gfc, gr_info * cod_info)\n'
p2970
V\u000avoid init_outer_loop(lame_internal_flags *gfc,gr_info *cod_info)\u000a\u000a{\u000a  FLOAT FVar1;\u000a  FLOAT *pFVar2;\u000a  FLOAT *pFVar3;\u000a  undefined4 *puVar4;\u000a  int *piVar5;\u000a  undefined4 uVar6;\u000a  FLOAT FVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  FLOAT FVar10;\u000a  lame_internal_flags *plVar11;\u000a  undefined4 *puVar12;\u000a  int iVar13;\u000a  int *piVar14;\u000a  int iVar15;\u000a  int unaff_r6;\u000a  FLOAT *in_stack_00000000;\u000a  FLOAT *in_stack_00000004;\u000a  FLOAT *in_stack_00000008;\u000a  FLOAT *in_stack_0000000c;\u000a  int in_stack_00000010;\u000a  int *in_stack_00000018;\u000a  FLOAT *in_stack_0000001c;\u000a  undefined4 in_stack_00000020;\u000a  int *in_stack_00000024;\u000a  FLOAT *in_stack_00000028;\u000a  int iStack00000034;\u000a  FLOAT *in_stack_00000038;\u000a  int in_stack_0000003c;\u000a  int in_stack_00000040;\u000a  int in_stack_00000044;\u000a  int in_stack_00000048;\u000a  int in_stack_0000004c;\u000a  int start;\u000a  int start_1;\u000a  FLOAT ixwork [576];\u000a  \u000a  FVar10 = ixwork[14];\u000a  iVar8 = 0;\u000a  plVar11 = (lame_internal_flags *)0x0;\u000a  do {\u000a    if ((int)plVar11 < (int)ixwork[12]) {\u000a      *(undefined4 *)((int)&stack0x00000000 + (int)plVar11 * 4 + DAT_0001a790) = 0;\u000a      if (*(int *)((int)ixwork[14] + 0x48) == 2) {\u000a        *(undefined4 *)((int)&stack0x00000000 + (int)plVar11 * 4 + DAT_0001a798) = 0;\u000a      }\u000a    }\u000a    else {\u000a      *(undefined4 *)((int)&stack0x00000000 + (int)plVar11 * 4 + DAT_0001a790) =\u000a           *(undefined4 *)((int)ixwork[10] + iVar8 * 4);\u000a      if (*(int *)((int)ixwork[14] + 0x48) == 2) {\u000a        *(undefined4 *)((int)&stack0x00000000 + (int)plVar11 * 4 + DAT_0001a798) =\u000a             *(undefined4 *)((int)ixwork[9] + iVar8 * 4);\u000a      }\u000a      iVar8 = iVar8 + 1;\u000a    }\u000a    plVar11 = (lame_internal_flags *)((int)&plVar11->class_id + 1);\u000a  } while (gfc != plVar11);\u000a  if (0 < (int)ixwork[13]) {\u000a    puVar4 = (undefined4 *)((int)ixwork[14] + DAT_0001a7a0);\u000a    iVar9 = *(int *)((int)ixwork[14] + 0x48);\u000a    iVar8 = unaff_r6;\u000a    do {\u000a      puVar12 = puVar4;\u000a      iVar13 = unaff_r6;\u000a      if (0 < iVar9) {\u000a        do {\u000a          *puVar12 = 2;\u000a          puVar12 = (undefined4 *)((int)puVar12 + DAT_0001a7a4);\u000a          iVar13 = iVar13 + 1;\u000a          iVar9 = *(int *)((int)ixwork[14] + 0x48);\u000a        } while (iVar13 < iVar9);\u000a        ixwork[13] = *(FLOAT *)((int)ixwork[14] + 0x4c);\u000a      }\u000a      puVar4 = (undefined4 *)((int)puVar4 + DAT_0001a7a8);\u000a      iVar8 = iVar8 + 1;\u000a    } while (iVar8 < (int)ixwork[13]);\u000a  }\u000a  ixwork[11] = (FLOAT)gfc;\u000a  mdct_sub48(ixwork[14],(int)&stack0x00000000 + DAT_0001a790,(int)&stack0x00000000 + DAT_0001a798);\u000a  iVar8 = DAT_0001a7ac;\u000a  *(undefined4 *)((int)FVar10 + DAT_0001a7ac) = 0;\u000a  iVar9 = DAT_0001a7b4;\u000a  iVar13 = *(int *)((int)FVar10 + DAT_0001a7b4) - *(int *)((int)FVar10 + DAT_0001a7b0);\u000a  *(int *)((int)FVar10 + DAT_0001a7b4) = iVar13;\u000a  if (iVar13 < 0) {\u000a    *(int *)((int)FVar10 + iVar9) = *(int *)((int)FVar10 + 0x40) + iVar13;\u000a    *(undefined4 *)((int)FVar10 + iVar8) = 1;\u000a  }\u000a  *(undefined4 *)((int)&stack0x00000000 + DAT_0001a7b8) = 0;\u000a  *(undefined4 *)((int)&stack0x00000000 + DAT_0001a790) = 0;\u000a  iStack00000034 = 0;\u000a  if (0 < *(int *)((int)FVar10 + 0x4c)) {\u000a    ixwork[13] = (FLOAT)((int)FVar10 + DAT_0001a7a0);\u000a    ixwork[12] = (FLOAT)((int)FVar10 + 0xb4);\u000a    iVar8 = 0;\u000a    do {\u000a      FVar7 = ixwork[14];\u000a      iVar9 = *(int *)((int)FVar10 + 0x48);\u000a      if (0 < iVar9) {\u000a        iVar13 = 0;\u000a        do {\u000a          *(int *)((int)&stack0x00000000 + iVar13 * 4 + DAT_0001a790) =\u000a               (int)ixwork[iVar13 + 0x22] + (iVar8 * 0x240 + 0x130) * 4;\u000a          iVar13 = iVar13 + 1;\u000a        } while (iVar13 < iVar9);\u000a      }\u000a      in_stack_00000010 = (int)&stack0x00000000 + DAT_0001a798;\u000a      in_stack_00000000 = ixwork + 0x24;\u000a      in_stack_0000000c = ixwork + iVar8 * 4 + 0x1a;\u000a      in_stack_00000008 = ixwork + iVar8 * 2 + 0x12;\u000a      in_stack_00000004 = ixwork + iVar8 * 2 + 0x16;\u000a      iVar9 = L3psycho_anal_vbr(ixwork[14],(int)&stack0x00000000 + DAT_0001a790,iVar8,\u000a                                (int)&stack0x00000000 + DAT_0001a7bc);\u000a      if (iVar9 != 0) {\u000a        FVar7 = -NAN;\u000a        goto LAB_0001adae;\u000a      }\u000a      if (*(int *)ixwork[12] == 1) {\u000a        ixwork[11] = ixwork[iVar8 * 4 + 0x1d];\u000a                    /* WARNING: Subroutine does not return */\u000a        __addsf3(ixwork[iVar8 * 4 + 0x1c]);\u000a      }\u000a      iVar9 = *(int *)((int)FVar7 + 0x48);\u000a      iVar13 = 0;\u000a      puVar4 = (undefined4 *)ixwork[13];\u000a      if (0 < iVar9) {\u000a        do {\u000a          *puVar4 = *(undefined4 *)((int)&stack0x00000000 + iVar13 * 4 + DAT_0001a798);\u000a          puVar4[1] = 0;\u000a          puVar4 = (undefined4 *)((int)puVar4 + DAT_0001a7a4);\u000a          iVar13 = iVar13 + 1;\u000a        } while (iVar13 < iVar9);\u000a      }\u000a      ixwork[13] = (FLOAT)((int)ixwork[13] + DAT_0001a7a8);\u000a      iVar8 = iVar8 + 1;\u000a      FVar10 = ixwork[14];\u000a    } while (iVar8 < *(int *)((int)ixwork[14] + 0x4c));\u000a  }\u000a  iVar8 = iStack00000034;\u000a  piVar5 = *(int **)((int)FVar10 + DAT_0001a7c0);\u000a  if (*piVar5 != 0) {\u000a    uVar6 = *(undefined4 *)((int)FVar10 + DAT_0001a7c4);\u000a    if (*(int *)((int)FVar10 + 0x48) == 2) {\u000a      uVar6 = *(undefined4 *)((int)FVar10 + DAT_0001a7cc);\u000a    }\u000a    ixwork[13] = (FLOAT)piVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a    __addsf3(*(undefined4 *)((int)FVar10 + DAT_0001a7c4),uVar6);\u000a  }\u000a  piVar5[2] = 0x3f800000;\u000a  mdct_sub48(FVar10,ixwork[34],ixwork[9]);\u000a  iVar9 = DAT_0001a7f0;\u000a  *(int *)((int)FVar10 + DAT_0001a7f0) = iVar8;\u000a  piVar5 = (int *)((int)FVar10 + iVar9);\u000a  if (*(int *)((int)FVar10 + 0x50) == 0) {\u000a    FVar7 = 0.00000000;\u000a    if (*(int *)((int)FVar10 + 0xb4) != 1) goto LAB_0001a8c0;\u000a    ixwork[7] = *(FLOAT *)((int)FVar10 + 0x4c);\u000a    FVar1 = FVar7;\u000a    if (0 < (int)ixwork[7]) {\u000a      ixwork[5] = 0.00000000;\u000a      ixwork[11] = *(FLOAT *)((int)FVar10 + 0x48);\u000a      ixwork[6] = 0.00000000;\u000a      ixwork[13] = 0.00000000;\u000a      ixwork[12] = 0.00000000;\u000a      pFVar2 = ixwork + 0x12;\u000a      FVar7 = 0.00000000;\u000a      pFVar3 = ixwork + 0x16;\u000a      do {\u000a        ixwork[9] = (FLOAT)pFVar3;\u000a        ixwork[8] = FVar7;\u000a        ixwork[10] = (FLOAT)pFVar2;\u000a        if (0 < (int)ixwork[11]) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __addsf3(0,*(FLOAT *)ixwork[10]);\u000a        }\u000a        pFVar2 = (FLOAT *)ixwork[10] + 2;\u000a        FVar7 = (FLOAT)((int)ixwork[8] + 1);\u000a        pFVar3 = (FLOAT *)ixwork[9] + 2;\u000a      } while ((int)ixwork[8] + 1 < (int)ixwork[7]);\u000a      ixwork[14] = FVar10;\u000a      iVar9 = __aeabi_fcmple(0,0);\u000a      FVar7 = 0.00000000;\u000a      FVar1 = ixwork[5];\u000a      FVar10 = ixwork[14];\u000a      iVar8 = iStack00000034;\u000a      if (iVar9 == 0) goto LAB_0001a8c0;\u000a    }\u000a    FVar7 = FVar1;\u000a    if ((*(int *)((int)FVar10 + DAT_0001a8b4) != *(int *)((int)FVar10 + DAT_0001a8b0)) ||\u000a       (iVar9 = (int)FVar10 + ((int)ixwork[7] + -1) * DAT_0001a8b8,\u000a       *(int *)(iVar9 + DAT_0001a8b4) != *(int *)(iVar9 + DAT_0001a8b0))) goto LAB_0001a8c0;\u000a    *piVar5 = 2;\u000a  }\u000a  else {\u000a    *piVar5 = 2;\u000a  }\u000a  FVar7 = 0.00000000;\u000aLAB_0001a8c0:\u000a  in_stack_00000028 = ixwork + 0x12;\u000a  if (FVar7 == 0.00000000) {\u000a    in_stack_00000028 = ixwork + 0x16;\u000a  }\u000a  in_stack_0000001c = ixwork + 0x24;\u000a  if (FVar7 == 0.00000000) {\u000a    in_stack_0000001c = (FLOAT *)((int)&stack0x00000000 + DAT_0001a8d8);\u000a  }\u000a  in_stack_00000018 = (int *)((int)FVar10 + 0x8c);\u000a  if (((*(int *)((int)FVar10 + 0x8c) != 0) &&\u000a      (ixwork[2] = (FLOAT)((int)FVar10 + DAT_0001a904), *(int *)((int)FVar10 + DAT_0001a904) != 0))\u000a     && (ixwork[13] = *(FLOAT *)((int)FVar10 + 0x4c), 0 < (int)ixwork[13])) {\u000a    ixwork[1] = 0.00000000;\u000a    start = DAT_0001a944;\u000a    in_stack_0000004c = DAT_0001a948;\u000a    in_stack_00000048 = DAT_0001a94c;\u000a    in_stack_00000044 = DAT_0001a950;\u000a    in_stack_00000040 = DAT_0001a954;\u000a    in_stack_0000003c = DAT_0001a958;\u000a    in_stack_00000038 = in_stack_00000028;\u000a    do {\u000a      if (0 < *(int *)((int)FVar10 + 0x48)) {\u000a        iStack00000034 = iVar8;\u000a                    /* WARNING: Subroutine does not return */\u000a        __extendsfdf2(ixwork[(int)ixwork[1] + 0x10]);\u000a      }\u000a      in_stack_0000003c = in_stack_0000003c + 0x8000;\u000a      in_stack_00000040 = in_stack_00000040 + 0x2400;\u000a      start = start + 0x8000;\u000a      in_stack_00000038 = in_stack_00000038 + 2;\u000a      in_stack_00000044 = in_stack_00000044 + 0x20;\u000a      in_stack_00000048 = in_stack_00000048 + 2;\u000a      in_stack_0000004c = in_stack_0000004c + 0x20;\u000a      ixwork[1] = (FLOAT)((int)ixwork[1] + 1);\u000a    } while ((int)ixwork[1] < (int)ixwork[13]);\u000a  }\u000a  ixwork[8] = *(FLOAT *)((int)&stack0x00000000 + DAT_0001ae1c);\u000a  if ((*(int *)((int)FVar10 + 0x68) == 3) || (*(int *)((int)FVar10 + 0x68) == 0)) {\u000a    puVar4 = (undefined4 *)((int)FVar10 + DAT_0001addc);\u000a    iVar9 = 0x12;\u000a    do {\u000a      *puVar4 = puVar4[1];\u000a      iVar13 = DAT_0001ade0;\u000a      puVar4 = puVar4 + 1;\u000a      iVar9 = iVar9 + -1;\u000a    } while (iVar9 != 0);\u000a    ixwork[12] = *(FLOAT *)((int)FVar10 + 0x4c);\u000a    if (0 < (int)ixwork[12]) {\u000a      ixwork[10] = 0.00000000;\u000a      FVar7 = 0.00000000;\u000a      ixwork[13] = (FLOAT)in_stack_00000028;\u000a      do {\u000a        ixwork[11] = FVar7;\u000a        if (0 < *(int *)((int)FVar10 + 0x48)) {\u000a          iStack00000034 = iVar8;\u000a                    /* WARNING: Subroutine does not return */\u000a          __addsf3(0,*(FLOAT *)ixwork[13]);\u000a        }\u000a        ixwork[13] = (FLOAT)((FLOAT *)ixwork[13] + 2);\u000a        FVar7 = (FLOAT)((int)ixwork[11] + 1);\u000a      } while ((int)ixwork[11] + 1 < (int)ixwork[12]);\u000a    }\u000a    *(undefined4 *)((int)FVar10 + DAT_0001ade0) = 0;\u000a    ixwork[13] = (FLOAT)((int)FVar10 + DAT_0001addc);\u000a    iStack00000034 = iVar8;\u000a                    /* WARNING: Subroutine does not return */\u000a    __addsf3(*(undefined4 *)ixwork[13],*(undefined4 *)((int)FVar10 + iVar13));\u000a  }\u000a  iStack00000034 = iVar8;\u000a  ixwork[14] = FVar10;\u000a  (**(code **)((int)FVar10 + DAT_0001adec))\u000a            (FVar10,in_stack_00000028,ixwork + 0x10,in_stack_0000001c);\u000a  format_bitstream(FVar10);\u000a  ixwork[7] = (FLOAT)copy_buffer(FVar10,in_stack_00000020,ixwork[8],1);\u000a  if (*(int *)((int)FVar10 + 0x9c) != 0) {\u000a    AddVbrFrame(FVar10);\u000a  }\u000a  FVar7 = ixwork[14];\u000a  if ((*in_stack_00000018 != 0) && (iVar8 = *(int *)((int)FVar10 + DAT_0001add8), iVar8 != 0)) {\u000a    ixwork[11] = *(FLOAT *)((int)FVar10 + 0x48);\u000a    if (0 < (int)ixwork[11]) {\u000a      iVar9 = *(int *)((int)ixwork[14] + 0x4c);\u000a      ixwork[12] = (FLOAT)(iVar8 + DAT_0001adf0);\u000a      ixwork[10] = (FLOAT)(iVar9 * 0x1200);\u000a      ixwork[13] = (FLOAT)(iVar8 + 0x18);\u000a      iVar8 = 0x110;\u000a      puVar4 = (undefined4 *)ixwork[13];\u000a      do {\u000a        uVar6 = puVar4[iVar9 * 0x480 + 1];\u000a        *puVar4 = puVar4[iVar9 * 0x480];\u000a        puVar4[1] = uVar6;\u000a        puVar4 = puVar4 + 2;\u000a        iVar8 = iVar8 + -1;\u000a      } while (iVar8 != 0);\u000a                    /* WARNING: Subroutine does not return */\u000a      __extendsfdf2(*(undefined4 *)ixwork[iStack00000034 + 0x22]);\u000a    }\u000a    *(undefined4 *)((int)ixwork[14] + DAT_0001adf4) = 0x3f800000;\u000a    set_frame_pinfo(ixwork[14],in_stack_0000001c);\u000a    FVar10 = FVar7;\u000a  }\u000a  *(int *)((int)FVar10 + DAT_0001adf8) = *(int *)((int)FVar10 + DAT_0001adf8) + 1;\u000a  iVar8 = DAT_0001adfc;\u000a  iVar9 = (int)FVar10 + *(int *)((int)FVar10 + DAT_0001adfc) * 0x14;\u000a  *(int *)(iVar9 + DAT_0001ae00) = *(int *)(iVar9 + DAT_0001ae00) + 1;\u000a  *(int *)((int)FVar10 + DAT_0001ae04) = *(int *)((int)FVar10 + DAT_0001ae04) + 1;\u000a  piVar14 = (int *)((int)FVar10 + iVar8);\u000a  if (*(int *)((int)FVar10 + 0x48) == 2) {\u000a    iVar8 = (int)FVar10 + DAT_0001ae08;\u000a    iVar9 = iVar8 + *piVar14 * 0x14;\u000a    *(int *)(iVar9 + *piVar5 * 4) = *(int *)(iVar9 + *piVar5 * 4) + 1;\u000a    iVar8 = iVar8 + *piVar5 * 4;\u000a    *(int *)(iVar8 + 300) = *(int *)(iVar8 + 300) + 1;\u000a  }\u000a  ixwork[9] = *(FLOAT *)((int)FVar10 + 0x4c);\u000a  FVar7 = ixwork[7];\u000a  if (0 < (int)ixwork[9]) {\u000a    ixwork[12] = (FLOAT)((int)FVar10 + DAT_0001ae0c);\u000a    iVar8 = *(int *)((int)FVar10 + 0x48);\u000a    ixwork[8] = 0.00000000;\u000a    FVar1 = 0.00000000;\u000a    piVar5 = (int *)((int)FVar10 + DAT_0001adcc);\u000a    do {\u000a      ixwork[11] = (FLOAT)piVar5;\u000a      ixwork[10] = FVar1;\u000a      iVar9 = 0;\u000a      piVar5 = (int *)ixwork[11];\u000a      if (0 < iVar8) {\u000a        do {\u000a          iVar13 = (int)FVar10 + DAT_0001ae10;\u000a          iVar15 = iVar13 + *piVar14 * 0x18;\u000a          iVar8 = 4;\u000a          if (piVar5[1] == 0) {\u000a            iVar8 = *piVar5;\u000a          }\u000a          iVar8 = iVar8 * 4;\u000a          *(int *)(iVar15 + iVar8) = *(int *)(iVar15 + iVar8) + 1;\u000a          iVar15 = iVar13 + *piVar14 * 0x18;\u000a          *(int *)(iVar15 + 0x14) = *(int *)(iVar15 + 0x14) + 1;\u000a          *(int *)(iVar13 + iVar8 + 0x168) = *(int *)(iVar13 + iVar8 + 0x168) + 1;\u000a          *(int *)ixwork[12] = *(int *)ixwork[12] + 1;\u000a          piVar5 = (int *)((int)piVar5 + DAT_0001add0);\u000a          iVar9 = iVar9 + 1;\u000a          iVar8 = *(int *)((int)ixwork[14] + 0x48);\u000a          FVar10 = ixwork[14];\u000a        } while (iVar9 < iVar8);\u000a        ixwork[9] = *(FLOAT *)((int)ixwork[14] + 0x4c);\u000a        FVar10 = ixwork[14];\u000a      }\u000a      FVar1 = (FLOAT)((int)ixwork[10] + 1);\u000a      FVar7 = ixwork[7];\u000a      piVar5 = (int *)((int)ixwork[11] + DAT_0001add4);\u000a      ixwork[13] = (FLOAT)piVar14;\u000a    } while ((int)ixwork[10] + 1 < (int)ixwork[9]);\u000a  }\u000aLAB_0001adae:\u000a  if (**(int **)(DAT_0001ae14 + 0x1adb4) != *in_stack_00000024) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail(FVar7);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2971
S'str r0,[sp,#0x8c]\nmov r2,#0x0\npush { r2 }\npop { r3 }\npush { r6 }\npop { r0 }\nldr r1,[sp,#0x90]\ncmp r3,r1\nbge 0x0001a430\nlsl r4,r3,#0x2\nldr r6,[0x0001a790]\nadd r6,sp\nmov r5,#0x0\nstr r5,[r6,r4]\nldr r1,[sp,#0x98]\nldr r6,[r1,#0x48]\ncmp r6,#0x2\nbne 0x0001a452\nldr r6,[0x0001a798]\nadd r6,sp\nstr r5,[r6,r4]\nb 0x0001a452\nlsl r4,r2,#0x2\nldr r1,[sp,#0x88]\nldr r6,[r1,r4]\nlsl r5,r3,#0x2\nldr r1,[0x0001a790]\nadd r1,sp\nstr r6,[r1,r5]\nldr r1,[sp,#0x98]\nldr r1,[r1,#0x48]\ncmp r1,#0x2\nbne 0x0001a450\nldr r1,[sp,#0x84]\nldr r1,[r1,r4]\nldr r4,[0x0001a798]\nadd r4,sp\nstr r1,[r4,r5]\nadd r2,#0x1\npush { r0 }\npop { r6 }\nadd r3,#0x1\nldr r0,[sp,#0x8c]\ncmp r0,r3\nbne 0x0001a40c\nldr r0,[sp,#0x94]\ncmp r0,#0x1\nblt 0x0001a49e\nldr r0,[0x0001a7a0]\nldr r1,[sp,#0x98]\nadd r0,r1,r0\nldr r2,[r1,#0x48]\npush { r6 }\npop { r1 }\nldr r5,[sp,#0x98]\ncmp r2,#0x1\npush { r0 }\npop { r3 }\npush { r6 }\npop { r4 }\nblt 0x0001a492\nmov r2,#0x2\nstr r2,[r3,#0x0]\nldr r2,[0x0001a7a4]\nadd r3,r3,r2\nadd r4,#0x1\nldr r2,[r5,#0x48]\ncmp r4,r2\nblt 0x0001a47e\nldr r3,[r5,#0x4c]\nstr r3,[sp,#0x94]\nldr r3,[0x0001a7a8]\nadd r0,r0,r3\nadd r1,#0x1\nldr r3,[sp,#0x94]\ncmp r1,r3\nblt 0x0001a472\nldr r1,[0x0001a790]\nadd r1,sp\nldr r2,[0x0001a798]\nadd r2,sp\nldr r4,[sp,#0x98]\npush { r4 }\npop { r0 }\nbl 0x00037a50\nldr r0,[0x0001a7ac]\nmov r5,#0x0\nstr r5,[r4,r0]\nldr r1,[0x0001a7b0]\nldr r1,[r4,r1]\nldr r2,[0x0001a7b4]\nldr r3,[r4,r2]\nsub r1,r3,r1\nstr r1,[r4,r2]\nadd r2,r4,r2\nadd r0,r4,r0\ncmp r1,#0x0\nbge 0x0001a4d4\nldr r3,[r4,#0x40]\nadd r1,r3,r1\nstr r1,[r2,#0x0]\nmov r1,#0x1\nstr r1,[r0,#0x0]\nldr r0,[0x0001a7b8]\nadd r0,sp\nstr r5,[r0,#0x0]\nldr r0,[0x0001a790]\nadd r0,sp\nstr r5,[r0,#0x0]\nstr r5,[sp,#0x34]\nldr r5,[r4,#0x4c]\ncmp r5,#0x1\nblt 0x0001a5cc\nldr r0,[0x0001a7a0]\nadd r0,r4,r0\nstr r0,[sp,#0x94]\npush { r4 }\npop { r0 }\nadd r0,#0xb4\nstr r0,[sp,#0x90]\nmov r6,#0x0\nldr r0,[r4,#0x48]\ncmp r0,#0x1\nblt 0x0001a522\nmov r1,#0x9\nlsl r1,r1,#0x6\nmul r1,r6\nmov r2,#0x13\nlsl r2,r2,#0x4\nadd r1,r1,r2\nmov r2,#0x0\nlsl r3,r2,#0x2\nadd r5,sp,#0xe8\nldr r5,[r5,r3]\nlsl r4,r1,#0x2\nadd r4,r5,r4\nldr r5,[0x0001a790]\nadd r5,sp\nstr r4,[r5,r3]\nadd r2,#0x1\ncmp r2,r0\nblt 0x0001a50c\nldr r0,[0x0001a798]\nadd r0,sp\nmov r1,sp\nstr r0,[r1,#0x10]\nadd r0,sp,#0xf0\nstr r0,[r1,#0x0]\nlsl r5,r6,#0x4\nadd r0,sp,#0xc8\nadd r0,r0,r5\nstr r0,[r1,#0xc]\nlsl r0,r6,#0x3\nadd r2,sp,#0xa8\nadd r2,r2,r0\nstr r2,[r1,#0x8]\nadd r2,sp,#0xb8\nadd r0,r2,r0\nstr r0,[r1,#0x4]\nldr r1,[0x0001a790]\nadd r1,sp\nldr r3,[0x0001a7bc]\nadd r3,sp\nldr r4,[sp,#0x98]\npush { r4 }\npop { r0 }\npush { r6 }\npop { r2 }\nbl 0x00037a60\ncmp r0,#0x0\nbeq 0x0001a560\nb 0x0001a692\nldr r0,[sp,#0x90]\nldr r0,[r0,#0x0]\ncmp r0,#0x1\nbne 0x0001a596\nadd r0,sp,#0xc8\nadd r1,r0,r5\nldr r0,[r1,#0x8]\nldr r1,[r1,#0xc]\nstr r1,[sp,#0x8c]\nbl 0x00037a70\nldr r0,[r4,#0x48]\nmov r1,#0x0\ncmp r0,#0x1\nldr r2,[sp,#0x94]\npush { r1 }\npop { r3 }\nblt 0x0001a5ba\nlsl r4,r3,#0x2\nldr r5,[0x0001a798]\nadd r5,sp\nldr r4,[r5,r4]\nstr r4,[r2,#0x0]\nstr r1,[r2,#0x4]\nldr r4,[0x0001a7a4]\nadd r2,r2,r4\nadd r3,#0x1\ncmp r3,r0\nblt 0x0001a5a4\nldr r0,[0x0001a7a8]\nldr r1,[sp,#0x94]\nadd r1,r1,r0\nstr r1,[sp,#0x94]\nldr r4,[sp,#0x98]\nldr r5,[r4,#0x4c]\nadd r6,#0x1\ncmp r6,r5\nblt 0x0001a4f8\nldr r0,[0x0001a7c0]\nldr r1,[r4,r0]\nldr r0,[r1,#0x0]\ncmp r0,#0x0\nbeq 0x0001a698\nstr r1,[sp,#0x94]\nldr r0,[0x0001a7c4]\nldr r0,[r4,r0]\nldr r1,[0x0001a7c8]\npush { r4 }\npop { r2 }\nstr r2,[sp,#0x98]\nldr r4,[r2,r1]\nldr r1,[r2,#0x48]\ncmp r1,#0x2\npush { r4 }\npop { r6 }\npush { r0 }\npop { r1 }\nbne 0x0001a5fe\nldr r1,[0x0001a7cc]\nldr r3,[sp,#0x98]\nldr r1,[r3,r1]\nldr r2,[0x0001a7d0]\nldr r6,[r3,r2]\nbl 0x00037a70\nmov r0,#0x3\nmvn r0,r0\nb 0x0001adae\nmov r0,#0x7f\nlsl r0,r0,#0x17\nstr r0,[r1,#0x8]\nb 0x0001a766\n'
p2972
S'23 90\n00 22\n04 b4\n08 bc\n40 b4\n01 bc\n24 99\n8b 42\n0c da\n9c 00\ndd 4e\n6e 44\n00 25\n35 51\n26 99\n8e 6c\n02 2e\n14 d1\ndb 4e\n6e 44\n35 51\n10 e0\n94 00\n22 99\n0e 59\n9d 00\nd5 49\n69 44\n4e 51\n26 99\n89 6c\n02 29\n04 d1\n21 99\n09 59\nd3 4c\n6c 44\n61 51\n01 32\n01 b4\n40 bc\n01 33\n23 98\n98 42\nd6 d1\n25 98\n01 28\n1c db\nce 48\n26 99\n08 18\n8a 6c\n40 b4\n02 bc\n26 9d\n01 2a\n01 b4\n08 bc\n40 b4\n10 bc\n09 db\n02 22\n1a 60\nc8 4a\n9b 18\n01 34\naa 6c\n94 42\nf7 db\neb 6c\n25 93\nc5 4b\nc0 18\n01 31\n25 9b\n99 42\ne9 db\nbc 49\n69 44\nbd 4a\n6a 44\n26 9c\n10 b4\n01 bc\n1d f0 d0 fa\nbe 48\n00 25\n25 50\nbe 49\n61 58\nbe 4a\na3 58\n59 1a\na1 50\na2 18\n20 18\n00 29\n04 da\n23 6c\n59 18\n11 60\n01 21\n01 60\nb8 48\n68 44\n05 60\nad 48\n68 44\n05 60\n0d 95\ne5 6c\n01 2d\n71 db\nad 48\n20 18\n25 90\n10 b4\n01 bc\nb4 30\n24 90\n00 26\na0 6c\n01 28\n11 db\n09 21\n89 01\n71 43\n13 22\n12 01\n89 18\n00 22\n93 00\n3a ad\ned 58\n8c 00\n2c 19\n9e 4d\n6d 44\nec 50\n01 32\n82 42\nf4 db\n9d 48\n68 44\n69 46\n08 61\n3c a8\n08 60\n35 01\n32 a8\n40 19\nc8 60\nf0 00\n2a aa\n12 18\n8a 60\n2e aa\n10 18\n48 60\n92 49\n69 44\n9c 4b\n6b 44\n26 9c\n10 b4\n01 bc\n40 b4\n04 bc\n1d f0 83 fa\n00 28\n00 d0\n98 e0\n24 98\n00 68\n01 28\n16 d1\n32 a8\n41 19\n88 68\nc9 68\n23 91\n1d f0 7d fa\na0 6c\n00 21\n01 28\n25 9a\n02 b4\n08 bc\n0a db\n9c 00\n7c 4d\n6d 44\n2c 59\n14 60\n51 60\n7c 4c\n12 19\n01 33\n83 42\nf4 db\n7b 48\n25 99\n09 18\n25 91\n26 9c\ne5 6c\n01 36\nae 42\n95 db\n7c 48\n21 58\n08 68\n00 28\n60 d0\n25 91\n7a 48\n20 58\n7a 49\n10 b4\n04 bc\n26 92\n54 58\n91 6c\n02 29\n10 b4\n40 bc\n01 b4\n02 bc\n04 d1\n75 49\n26 9b\n59 58\n75 4a\n9e 58\n1d f0 37 fa\n03 20\nc0 43\n8a e3\n7f 20\nc0 05\n88 60\n62 e0\n'
p2973
S'.text:0001a404\n.text:0001a406\n.text:0001a408\n.text:0001a40a\n.text:0001a40c\n.text:0001a40e\n.text:0001a410\n.text:0001a412\n.text:0001a414\n.text:0001a416\n.text:0001a418\n.text:0001a41a\n.text:0001a41c\n.text:0001a41e\n.text:0001a420\n.text:0001a422\n.text:0001a424\n.text:0001a426\n.text:0001a428\n.text:0001a42a\n.text:0001a42c\n.text:0001a42e\n.text:0001a430\n.text:0001a432\n.text:0001a434\n.text:0001a436\n.text:0001a438\n.text:0001a43a\n.text:0001a43c\n.text:0001a43e\n.text:0001a440\n.text:0001a442\n.text:0001a444\n.text:0001a446\n.text:0001a448\n.text:0001a44a\n.text:0001a44c\n.text:0001a44e\n.text:0001a450\n.text:0001a452\n.text:0001a454\n.text:0001a456\n.text:0001a458\n.text:0001a45a\n.text:0001a45c\n.text:0001a45e\n.text:0001a460\n.text:0001a462\n.text:0001a464\n.text:0001a466\n.text:0001a468\n.text:0001a46a\n.text:0001a46c\n.text:0001a46e\n.text:0001a470\n.text:0001a472\n.text:0001a474\n.text:0001a476\n.text:0001a478\n.text:0001a47a\n.text:0001a47c\n.text:0001a47e\n.text:0001a480\n.text:0001a482\n.text:0001a484\n.text:0001a486\n.text:0001a488\n.text:0001a48a\n.text:0001a48c\n.text:0001a48e\n.text:0001a490\n.text:0001a492\n.text:0001a494\n.text:0001a496\n.text:0001a498\n.text:0001a49a\n.text:0001a49c\n.text:0001a49e\n.text:0001a4a0\n.text:0001a4a2\n.text:0001a4a4\n.text:0001a4a6\n.text:0001a4a8\n.text:0001a4aa\n.text:0001a4ac\n.text:0001a4b0\n.text:0001a4b2\n.text:0001a4b4\n.text:0001a4b6\n.text:0001a4b8\n.text:0001a4ba\n.text:0001a4bc\n.text:0001a4be\n.text:0001a4c0\n.text:0001a4c2\n.text:0001a4c4\n.text:0001a4c6\n.text:0001a4c8\n.text:0001a4ca\n.text:0001a4cc\n.text:0001a4ce\n.text:0001a4d0\n.text:0001a4d2\n.text:0001a4d4\n.text:0001a4d6\n.text:0001a4d8\n.text:0001a4da\n.text:0001a4dc\n.text:0001a4de\n.text:0001a4e0\n.text:0001a4e2\n.text:0001a4e4\n.text:0001a4e6\n.text:0001a4e8\n.text:0001a4ea\n.text:0001a4ec\n.text:0001a4ee\n.text:0001a4f0\n.text:0001a4f2\n.text:0001a4f4\n.text:0001a4f6\n.text:0001a4f8\n.text:0001a4fa\n.text:0001a4fc\n.text:0001a4fe\n.text:0001a500\n.text:0001a502\n.text:0001a504\n.text:0001a506\n.text:0001a508\n.text:0001a50a\n.text:0001a50c\n.text:0001a50e\n.text:0001a510\n.text:0001a512\n.text:0001a514\n.text:0001a516\n.text:0001a518\n.text:0001a51a\n.text:0001a51c\n.text:0001a51e\n.text:0001a520\n.text:0001a522\n.text:0001a524\n.text:0001a526\n.text:0001a528\n.text:0001a52a\n.text:0001a52c\n.text:0001a52e\n.text:0001a530\n.text:0001a532\n.text:0001a534\n.text:0001a536\n.text:0001a538\n.text:0001a53a\n.text:0001a53c\n.text:0001a53e\n.text:0001a540\n.text:0001a542\n.text:0001a544\n.text:0001a546\n.text:0001a548\n.text:0001a54a\n.text:0001a54c\n.text:0001a54e\n.text:0001a550\n.text:0001a552\n.text:0001a554\n.text:0001a556\n.text:0001a55a\n.text:0001a55c\n.text:0001a55e\n.text:0001a560\n.text:0001a562\n.text:0001a564\n.text:0001a566\n.text:0001a568\n.text:0001a56a\n.text:0001a56c\n.text:0001a56e\n.text:0001a570\n.text:0001a572\n.text:0001a596\n.text:0001a598\n.text:0001a59a\n.text:0001a59c\n.text:0001a59e\n.text:0001a5a0\n.text:0001a5a2\n.text:0001a5a4\n.text:0001a5a6\n.text:0001a5a8\n.text:0001a5aa\n.text:0001a5ac\n.text:0001a5ae\n.text:0001a5b0\n.text:0001a5b2\n.text:0001a5b4\n.text:0001a5b6\n.text:0001a5b8\n.text:0001a5ba\n.text:0001a5bc\n.text:0001a5be\n.text:0001a5c0\n.text:0001a5c2\n.text:0001a5c4\n.text:0001a5c6\n.text:0001a5c8\n.text:0001a5ca\n.text:0001a5cc\n.text:0001a5ce\n.text:0001a5d0\n.text:0001a5d2\n.text:0001a5d4\n.text:0001a5d6\n.text:0001a5d8\n.text:0001a5da\n.text:0001a5dc\n.text:0001a5de\n.text:0001a5e0\n.text:0001a5e2\n.text:0001a5e4\n.text:0001a5e6\n.text:0001a5e8\n.text:0001a5ea\n.text:0001a5ec\n.text:0001a5ee\n.text:0001a5f0\n.text:0001a5f2\n.text:0001a5f4\n.text:0001a5f6\n.text:0001a5f8\n.text:0001a5fa\n.text:0001a5fc\n.text:0001a5fe\n.text:0001a692\n.text:0001a694\n.text:0001a696\n.text:0001a698\n.text:0001a69a\n.text:0001a69c\n.text:0001a69e\n'
p2974
tp2975
sS'sizeOfWxxxNode'
p2976
(S'\n__stdcall sizeOfWxxxNode()\n'
p2977
V\u000aint sizeOfWxxxNode(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  \u000a  iVar1 = 0;\u000a  if (iParm1 != 0) {\u000a    iVar2 = *(int *)(iParm1 + 0x10);\u000a    iVar1 = 10;\u000a    if (iVar2 != 0) {\u000a      if (*(int *)(iParm1 + 0x14) == 1) {\u000a        iVar1 = iVar2 * 2 + 0xd;\u000a      }\u000a      else {\u000a        iVar1 = iVar2 + 0xc;\u000a      }\u000a    }\u000a    iVar2 = *(int *)(iParm1 + 0x1c);\u000a    if (iVar2 != 0) {\u000a      if (*(int *)(iParm1 + 0x20) != 1) {\u000a        return iVar2 + iVar1;\u000a      }\u000a      iVar1 = iVar1 + iVar2 + -1;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p2978
S'push { r0 }\npop { r1 }\nmov r0,#0x0\n'
p2979
S'01 b4\n02 bc\n00 20\n'
p2980
S'.text:0001e4a4\n.text:0001e4a6\n.text:0001e4a8\n'
p2981
tp2982
sS'free_aligned'
p2983
(S'\n__stdcall free_aligned(aligned_pointer_t * ptr)\n'
p2984
V\u000avoid free_aligned(aligned_pointer_t *ptr)\u000a\u000a{\u000a  undefined4 in_r2;\u000a  void **ppvVar1;\u000a  undefined4 unaff_r6;\u000a  char in_ZR;\u000a  undefined4 uStack00000000;\u000a  \u000a  if (((in_ZR == 0) && (ptr->aligned == DAT_00021290)) &&\u000a     (ppvVar1 = (void **)ptr[0x24].aligned, ppvVar1 != (void **)0x0)) {\u000a    if (*ppvVar1 == DAT_00021290) {\u000a      uStack00000000 = in_r2;\u000a      flush_bitstream(ppvVar1);\u000a      copy_buffer(ppvVar1,unaff_r6,uStack00000000,1);\u000a      save_gain_values(ppvVar1);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p2985
S'beq 0x00021286\nldr r1,[r0,#0x0]\nldr r3,[0x00021290]\ncmp r1,r3\nbne 0x00021286\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r5,[r0,r1]\ncmp r5,#0x0\nbeq 0x00021286\nstr r2,[sp,#0x0]\nldr r0,[r5,#0x0]\nldr r1,[0x00021290]\ncmp r0,r1\nbne 0x00021286\npush { r5 }\n'
p2986
S'1f d0\n01 68\n11 4b\n99 42\n1b d1\n09 21\n49 01\n45 58\n00 2d\n16 d0\n00 92\n28 68\n0c 49\n88 42\n11 d1\n20 b4\n'
p2987
S'.text:00021244\n.text:00021246\n.text:00021248\n.text:0002124a\n.text:0002124c\n.text:0002124e\n.text:00021250\n.text:00021252\n.text:00021254\n.text:00021256\n.text:00021258\n.text:0002125a\n.text:0002125c\n.text:0002125e\n.text:00021260\n.text:00021262\n'
p2988
tp2989
sS'FUN_00025f78'
p2990
(S'\n__stdcall FUN_00025f78(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6, undefined4 param_7, undefined param_8, undefined4 param_9, undefined4 param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23, undefined4 param_24, undefined4 param_25, undefined4 param_26, undefined4 param_27, undefined4 param_28, undefined4 param_29, undefined4 param_30, undefined4 param_31, undefined4 param_32, undefined4 param_33, undefined4 param_34, undefined4 param_35, undefined4 param_36, undefined4 param_37, undefined4 param_38, undefined4 param_39, undefined4 param_40, undefined4 param_41, undefined4 param_42, undefined4 param_43, undefined4 param_44, undefined4 param_45)\n'
p2991
V\u000a/* WARNING: Removing unreachable block (ram,0x00026196) */\u000a\u000aundefined4 FUN_00025f78(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  uint uVar4;\u000a  undefined4 *puVar5;\u000a  undefined4 *puVar6;\u000a  int iVar7;\u000a  undefined4 *puVar8;\u000a  undefined4 *puVar9;\u000a  int *piVar10;\u000a  int *piVar11;\u000a  uint uVar12;\u000a  int iVar13;\u000a  undefined4 uVar14;\u000a  int iVar15;\u000a  int param_5;\u000a  undefined4 param_6;\u000a  undefined4 param_7;\u000a  int *param_8;\u000a  int param_9;\u000a  int param_10;\u000a  int param_11;\u000a  int *param_12;\u000a  undefined4 *param_13;\u000a  undefined4 *param_14;\u000a  int param_15;\u000a  int param_16;\u000a  undefined4 *param_17;\u000a  undefined4 *param_18;\u000a  int in_stack_00000038;\u000a  int in_stack_0000003c;\u000a  int param_19;\u000a  int *param_20;\u000a  int in_stack_00000048;\u000a  int *param_21;\u000a  int in_stack_00000050;\u000a  int in_stack_00000054;\u000a  int param_22;\u000a  int in_stack_0000005c;\u000a  undefined4 *param_23;\u000a  undefined4 *param_24;\u000a  int param_25;\u000a  int param_26;\u000a  undefined4 in_stack_00000070;\u000a  int param_27;\u000a  int in_stack_0000007c;\u000a  int param_28;\u000a  int in_stack_00000084;\u000a  int in_stack_00000088;\u000a  int param_29;\u000a  int *param_30;\u000a  int param_31;\u000a  undefined4 *in_stack_0000009c;\u000a  undefined4 *in_stack_000000a0;\u000a  uint in_stack_000000a4;\u000a  int param_32;\u000a  uint param_33;\u000a  undefined4 in_stack_000000b0;\u000a  int param_34;\u000a  int in_stack_000000b8;\u000a  undefined4 *param_35;\u000a  int param_36;\u000a  int param_37;\u000a  int in_stack_000000dc;\u000a  undefined4 in_stack_000000e0;\u000a  undefined4 *in_stack_000000e4;\u000a  uint in_stack_000000e8;\u000a  undefined *in_stack_000000ec;\u000a  undefined4 *in_stack_000000f0;\u000a  int in_stack_000000f4;\u000a  undefined4 in_stack_000000f8;\u000a  undefined4 *in_stack_000000fc;\u000a  int in_stack_00000100;\u000a  int in_stack_00000104;\u000a  uint in_stack_00000108;\u000a  int in_stack_0000010c;\u000a  undefined4 *param_38;\u000a  undefined4 *param_39;\u000a  undefined4 *param_40;\u000a  undefined *param_41;\u000a  int param_42;\u000a  undefined4 *param_43;\u000a  int param_44;\u000a  int param_45;\u000a  \u000a  iVar2 = param_36;\u000a  if ((*param_21 == 1) && (param_45 + param_44 == 2)) {\u000a    param_7 = *(undefined4 *)(param_26 + DAT_000261d8);\u000a    param_6 = *param_14;\u000a    param_5 = param_15;\u000a    vbrpsy_compute_MS_thresholds\u000a              ((int)&stack0x00000000 + DAT_000261c0,&stack0x000001a4,param_26 + 0x300,\u000a               *(int *)(param_36 + DAT_000261d4) + 0xd4);\u000a  }\u000a  iVar7 = param_44;\u000a  piVar10 = param_30;\u000a  if (0 < (int)param_33) {\u000a    param_41 = (undefined *)(iVar2 + DAT_000261dc);\u000a    param_40 = (undefined4 *)(iVar2 + DAT_000261e0);\u000a    param_38 = (undefined4 *)0x0;\u000a    param_39 = (undefined4 *)0x0;\u000a    param_5 = iVar2 + DAT_000261e4;\u000a    iVar7 = (int)&stack0x00000000 + DAT_000261c0;\u000a    convert_partition2scalefac(*param_30,iVar7,&stack0x000001a4,iVar2 + DAT_000261e8);\u000a    param_5 = (int)&stack0x00000000 + DAT_000261ec;\u000a    convert_partition2scalefac\u000a              (*piVar10 + 0x10e0,iVar7,&stack0x000001a4,(int)&stack0x00000000 + DAT_000261d0);\u000a    param_42 = (int)param_40;\u000a    param_43 = (undefined4 *)param_41;\u000a                    /* WARNING: Subroutine does not return */\u000a    __mulsf3(*(undefined4 *)((int)&stack0x00000000 + (int)param_38 * 4 + DAT_000261ec),0x3c800000);\u000a  }\u000a  param_20 = *(int **)((int)&stack0x00000000 + DAT_000261f0);\u000a  param_10 = *(int *)((int)&stack0x00000000 + DAT_000261f4);\u000a  param_9 = *(int *)((int)&stack0x00000000 + DAT_000261f8);\u000a  param_24 = (undefined4 *)(iVar2 + DAT_000261dc);\u000a  param_23 = (undefined4 *)(iVar2 + DAT_000261e0);\u000a  param_29 = (int)&stack0x00000000 + DAT_00026200;\u000a  in_stack_00000088 = param_29 + DAT_000261fc;\u000a  param_18 = (undefined4 *)(iVar2 + DAT_00026204);\u000a  param_17 = (undefined4 *)(iVar2 + DAT_00026208);\u000a  param_35 = (undefined4 *)(iVar2 + DAT_0002620c);\u000a  param_13 = (undefined4 *)(param_26 + DAT_00026210);\u000a  param_12 = (int *)(iVar2 + DAT_000261d4);\u000a  in_stack_00000084 = param_29 + 0x3fc;\u000a  param_11 = param_26 + 0xb70;\u000a  param_32 = *(int *)(*param_30 + DAT_00026214);\u000a  param_37 = (int)&stack0x00000000 + DAT_00026218 + 1;\u000a  param_16 = (int)&stack0x00000004 + DAT_000261c0;\u000a  param_26 = (int)&stack0x00000000 + DAT_000261ec + 8;\u000a  param_29 = param_29 + 4;\u000a  param_34 = (int)&stack0x00000000 + DAT_0002621c;\u000a  param_28 = (int)&stack0x00000004 + DAT_0002621c;\u000a  param_27 = (int)&stack0x00000000 + DAT_000261ec + 4;\u000a  param_25 = (int)&stack0x00000004 + DAT_000261d0;\u000a  param_19 = -param_45;\u000a  param_31 = 0;\u000a  param_22 = param_44;\u000a  if (0 < (int)param_33) {\u000a    in_stack_0000007c = (int)&stack0x00000000 + DAT_0002621c;\u000a    uVar12 = 0;\u000a    uVar1 = 0;\u000a    puVar5 = param_18;\u000a    puVar8 = param_17;\u000a    in_stack_000000b8 = param_16;\u000a    do {\u000a      in_stack_0000009c = puVar8;\u000a      in_stack_000000a0 = puVar5;\u000a      in_stack_000000a4 = uVar1;\u000a      uVar4 = uVar12;\u000a      in_stack_000000b0 = 1;\u000a      iVar2 = (in_stack_000000a4 & 1) * 0xc00;\u000a      puVar5 = (undefined4 *)(in_stack_00000088 + iVar2);\u000a      param_40 = (undefined4 *)(in_stack_00000084 + iVar2);\u000a      if ((param_32 != 0) || ((&stack0x0000012c)[uVar4 & 1] == 0)) {\u000a        param_38 = (undefined4 *)((uVar4 & 1) * 0xc00);\u000a        in_stack_000000e8 = uVar4;\u000a        param_39 = (undefined4 *)(param_29 + iVar2);\u000a        if ((int)uVar4 < 2) {\u000a          in_stack_000000e8 = uVar4;\u000a          param_39 = (undefined4 *)(param_29 + iVar2);\u000a          fft_short(param_36,(int)&stack0x00000000 + (int)param_38 + DAT_0002655c,uVar4,\u000a                    in_stack_00000070);\u000a        }\u000a        if (uVar4 == 2) {\u000a          param_43 = (undefined4 *)*param_40;\u000a          param_42 = *puVar5;\u000a                    /* WARNING: Subroutine does not return */\u000a          __addsf3();\u000a        }\u000a        uVar14 = *(undefined4 *)\u000a                  ((int)&stack0x00000000 + param_31 * 0x400 + (int)param_38 + DAT_0002655c);\u000a                    /* WARNING: Subroutine does not return */\u000a        __mulsf3(uVar14,uVar14);\u000a      }\u000a      iVar2 = *(int *)(*param_30 + DAT_00026210);\u000a      puVar5 = in_stack_000000a0;\u000a      puVar8 = in_stack_0000009c;\u000a      if (0 < iVar2) {\u000a        do {\u000a          *puVar8 = *puVar5;\u000a          puVar5 = puVar5 + 1;\u000a          puVar8 = puVar8 + 1;\u000a          iVar2 = iVar2 + -1;\u000a        } while (iVar2 != 0);\u000a      }\u000a      in_stack_000000b8 = in_stack_000000b8 + 0x100;\u000a      uVar12 = uVar4 + 1;\u000a      uVar1 = in_stack_000000a4 + 1;\u000a      puVar5 = in_stack_000000a0 + 0x40;\u000a      puVar8 = in_stack_0000009c + 0x40;\u000a      in_stack_000000e8 = uVar4;\u000a    } while (uVar4 + 1 != param_33);\u000a  }\u000a  if ((*param_21 == 1) && (param_44 == param_19)) {\u000a    param_6 = *param_14;\u000a    param_7 = *param_13;\u000a    param_5 = param_15;\u000a    vbrpsy_compute_MS_thresholds\u000a              ((int)&stack0x00000000 + DAT_00026b18,&stack0x000001a4,param_11,*param_12 + 0x1d4);\u000a  }\u000a  param_22 = iVar7;\u000a  uVar12 = 0;\u000a  puVar5 = param_24;\u000a  puVar8 = param_23;\u000a  if (0 < (int)param_33) {\u000a    do {\u000a      if ((param_32 != 0) || ((&stack0x0000012c)[uVar12 & 1] == 0)) {\u000a        param_5 = (int)&stack0x00000000 + DAT_00026b1c;\u000a        convert_partition2scalefac\u000a                  (*param_30 + 0x870,(int)&stack0x00000000 + uVar12 * 0x100 + DAT_00026b18,\u000a                   &stack0x000001a4 + uVar12 * 0x100,(int)&stack0x00000000 + DAT_00026b14);\u000a        iVar2 = 0;\u000a        puVar6 = puVar5;\u000a        puVar9 = puVar8;\u000a        do {\u000a          *puVar6 = *(undefined4 *)((int)&stack0x00000000 + iVar2 * 4 + DAT_00026b14);\u000a          *puVar9 = *(undefined4 *)((int)&stack0x00000000 + iVar2 * 4 + DAT_00026b1c);\u000a          puVar6 = puVar6 + 3;\u000a          puVar9 = puVar9 + 3;\u000a          iVar2 = iVar2 + 1;\u000a          param_43 = puVar5;\u000a        } while (iVar2 != 0xd);\u000a      }\u000a      puVar5 = puVar5 + 0x3d;\u000a      puVar8 = puVar8 + 0x3d;\u000a      uVar12 = uVar12 + 1;\u000a    } while (uVar12 != param_33);\u000a  }\u000a  param_34 = param_34 + 0x204;\u000a  iVar2 = 1;\u000a  param_29 = param_29 + 0x400;\u000a  param_28 = param_28 + 0x204;\u000a  param_24 = param_24 + 1;\u000a  param_23 = param_23 + 1;\u000a  param_31 = param_31 + 1;\u000a  if (param_31 != 3) {\u000a    FUN_0002612a();\u000a  }\u000a  if ((int)param_33 < 1) {\u000a    iVar7 = *(int *)(param_36 + 0x48);\u000a    if (0 < iVar7) {\u000a      piVar3 = (int *)(param_36 + DAT_00026eac);\u000a      piVar10 = param_20;\u000a      piVar11 = &stack0x00000130;\u000a      iVar15 = param_22;\u000a      while( true ) {\u000a        iVar7 = iVar7 + -1;\u000a        iVar13 = *piVar3;\u000a        if (iVar15 == 0) {\u000a          iVar15 = 2;\u000a          if (iVar13 == 3) {\u000a            iVar13 = 2;\u000a            *piVar3 = 2;\u000a            iVar15 = 2;\u000a          }\u000a          else {\u000a            if (iVar13 == 0) {\u000a              *piVar3 = iVar2;\u000a              iVar13 = iVar2;\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar15 = 3;\u000a          if (iVar13 != 2) {\u000a            iVar15 = 0;\u000a          }\u000a        }\u000a        *piVar10 = iVar13;\u000a        *piVar3 = iVar15;\u000a        if (iVar7 == 0) break;\u000a        piVar10 = piVar10 + 1;\u000a        piVar3 = piVar3 + 1;\u000a        iVar15 = *piVar11;\u000a        piVar11 = piVar11 + 1;\u000a      }\u000a    }\u000a    in_stack_000000dc = iVar2;\u000a    if (0 < (int)param_33) {\u000a      param_10 = param_10 + -8;\u000a      uVar12 = 0;\u000a      in_stack_000000dc = iVar2;\u000a      do {\u000a        if ((int)uVar12 < 2) {\u000a          puVar5 = (undefined4 *)\u000a                   (in_stack_00000048 + in_stack_0000005c * in_stack_00000050 +\u000a                   uVar12 * in_stack_00000054 * 8);\u000a          iVar2 = param_20[uVar12];\u000a          in_stack_00000104 = param_9;\u000a        }\u000a        else {\u000a          if ((*param_20 == 2) || (iVar2 = 0, param_20[1] == 2)) {\u000a            iVar2 = 2;\u000a          }\u000a          puVar5 = (undefined4 *)\u000a                   (uVar12 * in_stack_00000054 * 8 +\u000a                    in_stack_00000038 + in_stack_0000005c * in_stack_00000050 + DAT_00026eb4);\u000a          in_stack_00000104 = param_10;\u000a        }\u000a        param_41 = (undefined *)*param_35;\u000a        param_42 = DAT_00026eb8;\u000a        iVar7 = 0x15;\u000a        if (iVar2 == 2) {\u000a          puVar5 = puVar5 + 0x53;\u000a          iVar2 = 0;\u000a          param_42 = DAT_00026ec8;\u000a          in_stack_00000108 = uVar12;\u000a          do {\u000a            param_39 = (undefined4 *)(DAT_00026edc + 0x26ce2 + iVar2 * 4);\u000a            iVar7 = 3;\u000a            in_stack_0000010c = iVar2;\u000a            param_38 = puVar5;\u000a            do {\u000a              uVar14 = puVar5[-0x3d];\u000a              iVar2 = __aeabi_fcmpgt(uVar14,0);\u000a              if (iVar2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a                __mulsf3(param_41,uVar14);\u000a              }\u000a              iVar7 = iVar7 + -1;\u000a              puVar5 = puVar5 + 1;\u000a            } while (iVar7 != 0);\u000a            puVar5 = param_38 + 3;\u000a            iVar2 = in_stack_0000010c + 1;\u000a          } while (iVar2 != 0xc);\u000a        }\u000a        else {\u000a          param_43 = (undefined4 *)(&LAB_00026da4 + DAT_00026ed8);\u000a          in_stack_00000108 = uVar12;\u000a          do {\u000a            uVar14 = *puVar5;\u000a            iVar2 = __aeabi_fcmpgt(uVar14,0);\u000a            if (iVar2 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a              __mulsf3(param_41,uVar14);\u000a            }\u000a            iVar7 = iVar7 + -1;\u000a            puVar5 = puVar5 + 1;\u000a            param_43 = param_43 + 1;\u000a          } while (iVar7 != 0);\u000a        }\u000a        *(undefined4 *)(in_stack_00000104 + in_stack_00000108 * 4) = param_42;\u000a        if (in_stack_0000003c != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __extendsfdf2(param_42,in_stack_00000108 << 3);\u000a        }\u000a        uVar12 = in_stack_00000108 + 1;\u000a      } while (uVar12 != param_33);\u000a    }\u000a    if (**(int **)(DAT_00026ed4 + 0x26e8e) == *param_8) {\u000a      return 0;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  in_stack_000000e4 = (undefined4 *)(param_36 + DAT_00026b20);\u000a  in_stack_000000f0 = &stack0x00000130;\u000a  in_stack_000000e0 = 0;\u000a  in_stack_000000ec = &stack0x00000174;\u000a  in_stack_000000e8 = 0;\u000a  in_stack_00000104 = param_36 + DAT_00026b24;\u000a  in_stack_000000f8 = 0;\u000a  in_stack_000000f4 = param_36 + DAT_00026b20;\u000a  in_stack_00000100 = (int)&stack0x00000000 + DAT_00026b28 + 0x5c;\u000a  in_stack_00000108 = (int)&stack0x00000000 + DAT_00026b28 + 0x60;\u000a  param_40 = (undefined4 *)((int)&stack0x00000000 + DAT_00026b14);\u000a  param_43 = (undefined4 *)0x1;\u000a  in_stack_000000dc = iVar2;\u000a  in_stack_000000fc = in_stack_000000e4;\u000a  param_39 = in_stack_000000e4;\u000a  param_41 = in_stack_000000ec;\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(*in_stack_000000e4);\u000a}\u000a\u000a
p2992
S'ldr r0,[sp,#0x4c]\nldr r0,[r0,#0x0]\ncmp r0,#0x1\nldr r4,[sp,#0xd0]\nbne 0x00025fb6\nldr r0,[sp,#0x12c]\nldr r1,[sp,#0x130]\nadd r0,r1,r0\ncmp r0,#0x2\nbne 0x00025fb6\nldr r0,[0x000261d4]\nldr r3,[r4,r0]\nldr r0,[0x000261d8]\nldr r6,[sp,#0x6c]\nldr r0,[r6,r0]\nldr r1,[sp,#0x24]\nldr r1,[r1,#0x0]\nmov r2,sp\nldr r5,[sp,#0x28]\nstr r5,[r2,#0x0]\nstr r1,[r2,#0x4]\nstr r0,[r2,#0x8]\nmov r0,#0x3\nlsl r0,r0,#0x8\nadd r2,r6,r0\nadd r3,#0xd4\nldr r0,[0x000261c0]\nadd r0,sp\nadd r1,sp,#0x1a4\nbl 0x00026ee4\nldr r0,[sp,#0xac]\ncmp r0,#0x1\nblt 0x00026082\nldr r0,[0x000261dc]\nadd r1,r4,r0\nldr r0,[0x000261e0]\nadd r3,r4,r0\nmov r0,#0x0\nstr r0,[sp,#0x110]\npush { r0 }\npop { r2 }\nstr r3,[sp,#0x118]\nstr r1,[sp,#0x11c]\nstr r2,[sp,#0x114]\nmov r0,#0xf4\nmul r0,r2\nadd r1,r4,r0\nldr r0,[0x000261e4]\npush { r2 }\npop { r4 }\nadd r2,r1,r0\nldr r6,[sp,#0x90]\nldr r0,[r6,#0x0]\nmov r3,sp\nstr r2,[r3,#0x0]\nlsl r2,r4,#0x8\nldr r3,[0x000261c0]\nadd r3,sp\nadd r4,r3,r2\nadd r3,sp,#0x1a4\nadd r5,r3,r2\nldr r2,[0x000261e8]\nadd r3,r1,r2\npush { r4 }\npop { r1 }\npush { r5 }\npop { r2 }\nbl 0x0002896c\nldr r0,[r6,#0x0]\nldr r1,[0x000261ec]\nadd r1,sp\nmov r2,sp\nstr r1,[r2,#0x0]\nmov r1,#0x87\nlsl r1,r1,#0x5\nadd r0,r0,r1\nldr r3,[0x000261d0]\nadd r3,sp\npush { r4 }\npop { r1 }\npush { r5 }\npop { r2 }\nbl 0x0002896c\nldr r2,[sp,#0x11c]\nldr r5,[sp,#0x118]\nldr r6,[sp,#0x110]\nstr r5,[sp,#0x120]\nstr r2,[sp,#0x124]\nlsl r0,r6,#0x2\nldr r1,[0x000261d0]\nadd r1,sp\nldr r4,[r1,r0]\nldr r1,[0x000261ec]\nadd r1,sp\nldr r0,[r1,r0]\nmov r1,#0x79\nlsl r1,r1,#0x17\npush { r2 }\npop { r5 }\nbl 0x00037aa0\nldr r0,[0x000261f0]\nadd r0,sp\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x44]\nldr r0,[0x000261f4]\nadd r0,sp\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x14]\nldr r0,[0x000261f8]\nadd r0,sp\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x10]\nldr r0,[0x000261dc]\nadd r0,r4,r0\nstr r0,[sp,#0x64]\nldr r0,[0x000261e0]\nadd r0,r4,r0\nstr r0,[sp,#0x60]\nldr r1,[0x000261fc]\nldr r0,[0x00026200]\nadd r0,sp\nadd r5,r0,r1\nldr r1,[0x00026204]\nadd r1,r4,r1\nstr r1,[sp,#0x34]\nldr r1,[0x00026208]\nadd r1,r4,r1\nstr r1,[sp,#0x30]\nldr r1,[0x0002620c]\nadd r1,r4,r1\nstr r1,[sp,#0xc0]\nldr r1,[0x00026210]\nldr r2,[sp,#0x6c]\nadd r1,r2,r1\nstr r1,[sp,#0x20]\nldr r1,[0x000261d4]\nadd r1,r4,r1\nstr r1,[sp,#0x1c]\nmov r1,#0xff\nlsl r1,r1,#0x2\nadd r4,r0,r1\nmov r1,#0xb7\nlsl r1,r1,#0x4\nadd r1,r2,r1\nstr r1,[sp,#0x18]\nldr r1,[sp,#0x90]\nldr r1,[r1,#0x0]\nldr r2,[0x00026214]\nldr r1,[r1,r2]\nstr r1,[sp,#0xa8]\nldr r1,[0x00026218]\nadd r1,sp\nadd r1,#0x1\nstr r1,[sp,#0xd4]\nldr r1,[0x000261c0]\nadd r1,sp\nadd r1,#0x4\nstr r1,[sp,#0x2c]\nldr r1,[0x000261ec]\nadd r1,sp\npush { r1 }\npop { r2 }\nadd r2,#0x8\nstr r2,[sp,#0x6c]\nadd r0,#0x4\nstr r0,[sp,#0x8c]\nldr r0,[0x0002621c]\nadd r0,sp\nstr r0,[sp,#0xb4]\nadd r0,#0x4\nstr r0,[sp,#0x80]\nadd r0,r1,#0x4\nstr r0,[sp,#0x74]\nldr r0,[0x000261d0]\nadd r0,sp\nadd r0,#0x4\nstr r0,[sp,#0x68]\nldr r0,[sp,#0x130]\nrsb r0,r0\nstr r0,[sp,#0x40]\nmov r0,#0x0\nstr r0,[sp,#0x98]\nldr r0,[sp,#0x12c]\nstr r0,[sp,#0x58]\n'
p2993
S'13 98\n00 68\n01 28\n34 9c\n19 d1\n4b 98\n4c 99\n08 18\n02 28\n14 d1\n91 48\n23 58\n91 48\n1b 9e\n30 58\n09 99\n09 68\n6a 46\n0a 9d\n15 60\n51 60\n90 60\n03 20\n00 02\n32 18\nd4 33\n84 48\n68 44\n69 a9\n00 f0 97 ff\n2b 98\n01 28\n62 db\n87 48\n21 18\n87 48\n23 18\n00 20\n44 90\n01 b4\n04 bc\n46 93\n47 91\n45 92\nf4 20\n50 43\n21 18\n82 48\n04 b4\n10 bc\n0a 18\n24 9e\n30 68\n6b 46\n1a 60\n22 02\n75 4b\n6b 44\n9c 18\n69 ab\n9d 18\n7c 4a\n8b 18\n10 b4\n02 bc\n20 b4\n04 bc\n02 f0 b4 fc\n30 68\n79 49\n69 44\n6a 46\n11 60\n87 21\n49 01\n40 18\n6e 4b\n6b 44\n10 b4\n02 bc\n20 b4\n04 bc\n02 f0 a4 fc\n47 9a\n46 9d\n44 9e\n48 95\n49 92\nb0 00\n67 49\n69 44\n0c 58\n6d 49\n69 44\n08 58\n79 21\nc9 05\n04 b4\n20 bc\n11 f0 2c fd\n5b 48\n68 44\n00 68\n11 90\n5a 48\n68 44\n00 68\n05 90\n59 48\n68 44\n00 68\n04 90\n50 48\n20 18\n19 90\n4f 48\n20 18\n18 90\n55 49\n55 48\n68 44\n45 18\n55 49\n61 18\n0d 91\n54 49\n61 18\n0c 91\n54 49\n61 18\n30 91\n53 49\n1b 9a\n51 18\n08 91\n42 49\n61 18\n07 91\nff 21\n89 00\n44 18\nb7 21\n09 01\n51 18\n06 91\n24 99\n09 68\n4c 4a\n89 58\n2a 91\n4c 49\n69 44\n01 31\n35 91\n34 49\n69 44\n04 31\n0b 91\n3d 49\n69 44\n02 b4\n04 bc\n08 32\n1b 92\n04 30\n23 90\n45 48\n68 44\n2d 90\n04 30\n20 90\n08 1d\n1d 90\n2e 48\n68 44\n04 30\n1a 90\n4c 98\n40 42\n10 90\n00 20\n26 90\n4b 98\n16 90\n'
p2994
S'.text:00025f78\n.text:00025f7a\n.text:00025f7c\n.text:00025f7e\n.text:00025f80\n.text:00025f82\n.text:00025f84\n.text:00025f86\n.text:00025f88\n.text:00025f8a\n.text:00025f8c\n.text:00025f8e\n.text:00025f90\n.text:00025f92\n.text:00025f94\n.text:00025f96\n.text:00025f98\n.text:00025f9a\n.text:00025f9c\n.text:00025f9e\n.text:00025fa0\n.text:00025fa2\n.text:00025fa4\n.text:00025fa6\n.text:00025fa8\n.text:00025faa\n.text:00025fac\n.text:00025fae\n.text:00025fb0\n.text:00025fb2\n.text:00025fb6\n.text:00025fb8\n.text:00025fba\n.text:00025fbc\n.text:00025fbe\n.text:00025fc0\n.text:00025fc2\n.text:00025fc4\n.text:00025fc6\n.text:00025fc8\n.text:00025fca\n.text:00025fcc\n.text:00025fce\n.text:00025fd0\n.text:00025fd2\n.text:00025fd4\n.text:00025fd6\n.text:00025fd8\n.text:00025fda\n.text:00025fdc\n.text:00025fde\n.text:00025fe0\n.text:00025fe2\n.text:00025fe4\n.text:00025fe6\n.text:00025fe8\n.text:00025fea\n.text:00025fec\n.text:00025fee\n.text:00025ff0\n.text:00025ff2\n.text:00025ff4\n.text:00025ff6\n.text:00025ff8\n.text:00025ffa\n.text:00025ffc\n.text:00025ffe\n.text:00026000\n.text:00026004\n.text:00026006\n.text:00026008\n.text:0002600a\n.text:0002600c\n.text:0002600e\n.text:00026010\n.text:00026012\n.text:00026014\n.text:00026016\n.text:00026018\n.text:0002601a\n.text:0002601c\n.text:0002601e\n.text:00026020\n.text:00026024\n.text:00026026\n.text:00026028\n.text:0002602a\n.text:0002602c\n.text:0002602e\n.text:00026030\n.text:00026032\n.text:00026034\n.text:00026036\n.text:00026038\n.text:0002603a\n.text:0002603c\n.text:0002603e\n.text:00026040\n.text:00026042\n.text:00026044\n.text:00026082\n.text:00026084\n.text:00026086\n.text:00026088\n.text:0002608a\n.text:0002608c\n.text:0002608e\n.text:00026090\n.text:00026092\n.text:00026094\n.text:00026096\n.text:00026098\n.text:0002609a\n.text:0002609c\n.text:0002609e\n.text:000260a0\n.text:000260a2\n.text:000260a4\n.text:000260a6\n.text:000260a8\n.text:000260aa\n.text:000260ac\n.text:000260ae\n.text:000260b0\n.text:000260b2\n.text:000260b4\n.text:000260b6\n.text:000260b8\n.text:000260ba\n.text:000260bc\n.text:000260be\n.text:000260c0\n.text:000260c2\n.text:000260c4\n.text:000260c6\n.text:000260c8\n.text:000260ca\n.text:000260cc\n.text:000260ce\n.text:000260d0\n.text:000260d2\n.text:000260d4\n.text:000260d6\n.text:000260d8\n.text:000260da\n.text:000260dc\n.text:000260de\n.text:000260e0\n.text:000260e2\n.text:000260e4\n.text:000260e6\n.text:000260e8\n.text:000260ea\n.text:000260ec\n.text:000260ee\n.text:000260f0\n.text:000260f2\n.text:000260f4\n.text:000260f6\n.text:000260f8\n.text:000260fa\n.text:000260fc\n.text:000260fe\n.text:00026100\n.text:00026102\n.text:00026104\n.text:00026106\n.text:00026108\n.text:0002610a\n.text:0002610c\n.text:0002610e\n.text:00026110\n.text:00026112\n.text:00026114\n.text:00026116\n.text:00026118\n.text:0002611a\n.text:0002611c\n.text:0002611e\n.text:00026120\n.text:00026122\n.text:00026124\n.text:00026126\n.text:00026128\n'
p2995
tp2996
sS'setLang'
p2997
(S'\n__stdcall setLang()\n'
p2998
V\u000avoid setLang(undefined *puParm1,char *pcParm2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if ((pcParm2 == (char *)0x0) || (iVar1 = 0, *pcParm2 == 0)) {\u000a    *puParm1 = 0x58;\u000a    puParm1[1] = 0x58;\u000a    puParm1[2] = 0x58;\u000a  }\u000a  else {\u000a    do {\u000a      puParm1[iVar1] = pcParm2[iVar1];\u000a      iVar1 = iVar1 + 1;\u000a      if (2 < iVar1) {\u000a        return;\u000a      }\u000a    } while (*pcParm2 != 0);\u000a    if (iVar1 < 3) {\u000a      __aeabi_memset(puParm1 + iVar1,3 - iVar1,0x20);\u000a      return;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p2999
S'cmp r1,#0x0\nbeq 0x0001e92a\nldrb r3,[r1,#0x0]\nmov r2,#0x0\ncmp r3,#0x0\nbeq 0x0001e92a\nldrb r3,[r1,r2]\nstrb r3,[r0,r2]\nadd r2,#0x1\ncmp r2,#0x2\nbgt 0x0001e932\nldrb r3,[r1,#0x0]\ncmp r3,#0x0\nbne 0x0001e904\ncmp r2,#0x2\nbgt 0x0001e932\npush { r7, lr }\nadd r7,sp,#0x0\n'
p3000
S'00 29\n16 d0\n0b 78\n00 22\n00 2b\n12 d0\n8b 5c\n83 54\n01 32\n02 2a\n11 dc\n0b 78\n00 2b\nf7 d1\n02 2a\n0c dc\n80 b5\n00 af\n'
p3001
S'.text:0001e8f8\n.text:0001e8fa\n.text:0001e8fc\n.text:0001e8fe\n.text:0001e900\n.text:0001e902\n.text:0001e904\n.text:0001e906\n.text:0001e908\n.text:0001e90a\n.text:0001e90c\n.text:0001e90e\n.text:0001e910\n.text:0001e912\n.text:0001e914\n.text:0001e916\n.text:0001e918\n.text:0001e91a\n'
p3002
tp3003
sS'lame_set_mode_automs'
p3004
(S'\n__stdcall lame_set_mode_automs(lame_global_flags * gfp, int mode_automs)\n'
p3005
V\u000aint lame_set_mode_automs(lame_global_flags *gfp,int mode_automs)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  uint uVar8;\u000a  undefined4 *puVar9;\u000a  uint uVar10;\u000a  int unaff_r6;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  puVar12 = (undefined *)(unaff_r6 + 10);\u000a  puVar9 = (undefined4 *)*in_stack_00000008;\u000a  do {\u000a    if (puVar9 == (undefined4 *)0x0) {\u000a      if (__s != (char *)0x0) {\u000a        iVar2 = 4;\u000a        if ((*in_stack_00000004 != 0) &&\u000a           (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a          do {\u000a            puVar12[iVar2 + -1] = (char)uVar8;\u000a            iVar2 = iVar2 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a          strlen(__s);\u000a        }\u000a      }\u000a      __aeabi_memclr(puVar12,(in_stack_0000002c + in_stack_00000018) - (int)puVar12);\u000a      if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a        return in_stack_0000002c;\u000a      }\u000a                    /* WARNING: Subroutine does not return */\u000a      __stack_chk_fail();\u000a    }\u000a    uVar8 = puVar9[1];\u000a    uVar11 = 0xff;\u000a    iVar2 = 4;\u000a    if ((uVar8 == DAT_0001e494) || (uVar3 = in_stack_00000030, uVar8 == DAT_0001e498)) {\u000a      iVar2 = puVar9[4] * 2 + 0x10;\u000a      if (puVar9[5] != 1) {\u000a        iVar2 = puVar9[4] + 0xf;\u000a      }\u000a      iVar4 = 0;\u000a      if (puVar9[8] == 1) {\u000a        iVar4 = puVar9[8];\u000a      }\u000a      uVar11 = (puVar9[7] << iVar4) + iVar2;\u000a      iVar2 = 4;\u000a      if (10 < uVar11) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar8;\u000a          iVar2 = iVar2 + -1;\u000a          uVar8 = uVar8 >> 8;\u000a        } while (0 < iVar2);\u000a        uVar11 = uVar11 - 10;\u000a        iVar2 = 4;\u000a        do {\u000a          puVar12[iVar2 + 3] = (char)uVar11;\u000a          iVar2 = iVar2 + -1;\u000a          uVar11 = uVar11 >> 8;\u000a        } while (0 < iVar2);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a        puVar12[0xb] = *(undefined *)(puVar9 + 2);\u000a        puVar12[0xc] = *(undefined *)((int)puVar9 + 9);\u000a        puVar12[0xd] = *(undefined *)((int)puVar9 + 10);\u000a        puVar12 = puVar12 + 0xe;\u000a        if (puVar9[5] == 1) {\u000a          gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a          *(undefined *)&gfp_00->class_id = 0;\u000a          *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a          iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a          return iVar2;\u000a        }\u000a        iVar2 = puVar9[4];\u000a        if (iVar2 != 0) {\u000a          puVar1 = (undefined *)puVar9[3];\u000a          iVar4 = iVar2;\u000a          puVar7 = puVar12;\u000a          do {\u000a            *puVar7 = *puVar1;\u000a            puVar7 = puVar7 + 1;\u000a            puVar1 = puVar1 + 1;\u000a            iVar4 = iVar4 + -1;\u000a          } while (iVar4 != 0);\u000a          puVar12 = puVar12 + iVar2;\u000a        }\u000a        *puVar12 = 0;\u000a        puVar12 = puVar12 + 1;\u000a        if (puVar9[8] == 1) {\u000aLAB_0001e338:\u000a          puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[6],puVar9[7]);\u000a        }\u000a        else {\u000a          iVar2 = puVar9[7];\u000a          if (iVar2 != 0) {\u000a            puVar1 = (undefined *)puVar9[6];\u000a            iVar4 = iVar2;\u000a            puVar7 = puVar12;\u000a            do {\u000a              *puVar7 = *puVar1;\u000a              puVar7 = puVar7 + 1;\u000a              puVar1 = puVar1 + 1;\u000a              iVar4 = iVar4 + -1;\u000a            } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a            puVar12 = puVar12 + iVar2;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      do {\u000a        uVar6 = uVar11 & 0x57000000;\u000a        uVar10 = in_stack_00000030;\u000a        if (uVar6 != (uVar11 & uVar8)) {\u000a          uVar10 = uVar11 & uVar8;\u000a        }\u000a        if (uVar6 == 0) {\u000a          uVar10 = uVar6;\u000a        }\u000a        uVar3 = uVar3 | uVar10;\u000a        iVar2 = iVar2 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar3 == 0) {\u000a        uVar11 = sizeOfWxxxNode(puVar9);\u000a        iVar2 = 4;\u000a        if (10 < uVar11) {\u000a          do {\u000a            puVar12[iVar2 + -1] = (char)uVar8;\u000a            iVar2 = iVar2 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar11 = uVar11 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar12[iVar2 + 3] = (char)uVar11;\u000a            iVar2 = iVar2 + -1;\u000a            uVar11 = uVar11 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar12[8] = 0;\u000a          puVar12[9] = 0;\u000a          puVar7 = puVar12 + 10;\u000a          if (puVar9[4] != 0) {\u000a            *(bool *)(puVar12 + 10) = puVar9[5] == 1;\u000a            puVar12 = puVar12 + 0xb;\u000a            if (puVar9[5] == 1) {\u000a              puVar7 = (undefined *)writeUcs2s(puVar12,puVar9[3],puVar9[4]);\u000a              *puVar7 = 0;\u000a              puVar7[1] = 0;\u000a              puVar7 = puVar7 + 2;\u000a            }\u000a            else {\u000a              iVar2 = puVar9[4];\u000a              if (iVar2 != 0) {\u000a                puVar1 = (undefined *)puVar9[3];\u000a                iVar4 = iVar2;\u000a                puVar7 = puVar12;\u000a                do {\u000a                  *puVar7 = *puVar1;\u000a                  puVar7 = puVar7 + 1;\u000a                  puVar1 = puVar1 + 1;\u000a                  iVar4 = iVar4 + -1;\u000a                } while (iVar4 != 0);\u000a                puVar12 = puVar12 + iVar2;\u000a              }\u000a              *puVar12 = 0;\u000a              puVar7 = puVar12 + 1;\u000a            }\u000a          }\u000a          if (puVar9[8] == 1) {\u000a            puVar12 = (undefined *)writeLoBytes(puVar7,puVar9[6],puVar9[7]);\u000a          }\u000a          else {\u000a            iVar2 = puVar9[7];\u000a            puVar12 = puVar7;\u000a            if (iVar2 != 0) {\u000a              puVar1 = (undefined *)puVar9[6];\u000a              iVar4 = iVar2;\u000a              puVar12 = puVar7;\u000a              do {\u000a                *puVar12 = *puVar1;\u000a                puVar12 = puVar12 + 1;\u000a                puVar1 = puVar1 + 1;\u000a                iVar4 = iVar4 + -1;\u000a              } while (iVar4 != 0);\u000a              puVar12 = puVar7 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        iVar2 = puVar9[7];\u000a        iVar4 = puVar9[4];\u000a        if (puVar9[8] == 1) {\u000a          iVar5 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar4 = 4;\u000a        if (10 < (uint)(iVar5 + iVar2)) {\u000a          do {\u000a            puVar12[iVar4 + -1] = (char)uVar8;\u000a            iVar4 = iVar4 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar4);\u000a          uVar8 = (iVar5 + iVar2) - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar12[iVar2 + 3] = (char)uVar8;\u000a            iVar2 = iVar2 + -1;\u000a            uVar8 = uVar8 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar12[8] = 0;\u000a          puVar12[9] = 0;\u000a          *(bool *)(puVar12 + 10) = puVar9[8] == 1;\u000a          puVar12 = puVar12 + 0xb;\u000a          iVar2 = puVar9[4];\u000a          if (iVar2 != 0) {\u000a            if (puVar9[5] == 1) {\u000a              puVar12 = (undefined *)writeUcs2s(puVar12,puVar9[3]);\u000a              *puVar12 = 0;\u000a              puVar12[1] = 0;\u000a              puVar12 = puVar12 + 2;\u000a            }\u000a            else {\u000a              puVar1 = (undefined *)puVar9[3];\u000a              iVar4 = iVar2;\u000a              puVar7 = puVar12;\u000a              do {\u000a                *puVar7 = *puVar1;\u000a                puVar7 = puVar7 + 1;\u000a                puVar1 = puVar1 + 1;\u000a                iVar4 = iVar4 + -1;\u000a              } while (iVar4 != 0);\u000a              puVar12[iVar2] = 0;\u000a              puVar12 = puVar12 + iVar2 + 1;\u000a            }\u000a          }\u000a          if (puVar9[8] == 1) goto LAB_0001e338;\u000a          iVar2 = puVar9[7];\u000a          if (iVar2 != 0) {\u000a            puVar1 = (undefined *)puVar9[6];\u000a            iVar4 = iVar2;\u000a            puVar7 = puVar12;\u000a            do {\u000a              *puVar7 = *puVar1;\u000a              puVar7 = puVar7 + 1;\u000a              puVar1 = puVar1 + 1;\u000a              iVar4 = iVar4 + -1;\u000a            } while (iVar4 != 0);\u000a            goto LAB_0001e36a;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    puVar9 = (undefined4 *)*puVar9;\u000a  } while( true );\u000a}\u000a\u000a
p3006
S'add r6,#0xa\nldr r0,[sp,#0x8]\nldr r5,[r0,#0x0]\nb 0x0001e09c\n'
p3007
S'0a 36\n02 98\n05 68\n00 e0\n'
p3008
S'.text:0001e092\n.text:0001e094\n.text:0001e096\n.text:0001e098\n'
p3009
tp3010
sS'id3tag_set_year'
p3011
(S'\n__stdcall id3tag_set_year()\n'
p3012
V\u000avoid id3tag_set_year(int iParm1,char *pcParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  \u000a  if ((((iParm1 != 0) && (pcParm2 != (char *)0x0)) && (iVar3 = *(int *)(iParm1 + 0x120), iVar3 != 0)\u000a      ) && (*pcParm2 != 0)) {\u000a    iVar1 = atoi(pcParm2);\u000a    iVar4 = 0;\u000a    if (-1 < iVar1) {\u000a      iVar4 = iVar1;\u000a    }\u000a    iVar1 = DAT_0001d860;\u000a    if (iVar4 <= DAT_0001d860) {\u000a      iVar1 = iVar4;\u000a    }\u000a    if (iVar1 != 0) {\u000a      *(int *)(iVar3 + DAT_0001d864) = iVar1;\u000a      *(uint *)(iVar3 + DAT_0001d868) = *(uint *)(iVar3 + DAT_0001d868) | 1;\u000a    }\u000a    iVar3 = DAT_0001d868;\u000a    iVar4 = *(int *)(iParm1 + 0x120);\u000a    if (iVar4 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar4 + DAT_0001d868);\u000a      id3v2_add_latin1(iParm1,DAT_0001d86c,DAT_0001d870 + 0x1d84c,0,pcParm2);\u000a      *(undefined4 *)(iVar4 + iVar3) = uVar2;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p3013
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\ncmp r4,#0x0\nbeq 0x0001d85a\nmov r0,#0x9\nlsl r0,r0,#0x5\nadd r1,r4,r0\ncmp r5,#0x0\nbeq 0x0001d85a\nldr r6,[r4,r0]\ncmp r6,#0x0\nbeq 0x0001d85a\nldrb r0,[r5,#0x0]\ncmp r0,#0x0\nbeq 0x0001d85a\nstr r1,[sp,#0x8]\npush { r5 }\npop { r0 }\nbl 0x00037ce0\nmov r1,#0x0\ncmp r0,#0x0\nblt 0x0001d814\npush { r0 }\npop { r1 }\nldr r0,[0x0001d860]\ncmp r1,r0\nbgt 0x0001d81e\npush { r1 }\npop { r0 }\ncmp r0,#0x0\nbeq 0x0001d830\nldr r1,[0x0001d864]\nstr r0,[r6,r1]\nldr r0,[0x0001d868]\nldr r1,[r6,r0]\nmov r2,#0x1\norr r2,r1\nstr r2,[r6,r0]\nldr r0,[sp,#0x8]\nldr r6,[r0,#0x0]\ncmp r6,#0x0\nbeq 0x0001d85a\nldr r0,[0x0001d868]\nstr r0,[sp,#0x4]\nldr r1,[r6,r0]\nstr r1,[sp,#0x8]\nmov r0,sp\nstr r5,[r0,#0x0]\nldr r1,[0x0001d86c]\nldr r2,[0x0001d870]\nadd r2,pc\nmov r3,#0x0\npush { r4 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x4]\nstr r0,[r6,r1]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p3014
S'f0 b5\n03 af\n83 b0\n02 b4\n20 bc\n01 b4\n10 bc\n00 2c\n37 d0\n09 20\n40 01\n21 18\n00 2d\n32 d0\n26 58\n00 2e\n2f d0\n28 78\n00 28\n2c d0\n02 91\n20 b4\n01 bc\n1a f0 6b fa\n00 21\n00 28\n01 db\n01 b4\n02 bc\n12 48\n81 42\n01 dc\n02 b4\n01 bc\n00 28\n06 d0\n10 49\n70 50\n10 48\n31 58\n01 22\n0a 43\n32 50\n02 98\n06 68\n00 2e\n10 d0\n0b 48\n01 90\n31 58\n02 91\n68 46\n05 60\n09 49\n0a 4a\n7a 44\n00 23\n10 b4\n01 bc\nff f7 ae fd\n02 98\n01 99\n70 50\n03 b0\nf0 bd\n'
p3015
S'.text:0001d7d8\n.text:0001d7da\n.text:0001d7dc\n.text:0001d7de\n.text:0001d7e0\n.text:0001d7e2\n.text:0001d7e4\n.text:0001d7e6\n.text:0001d7e8\n.text:0001d7ea\n.text:0001d7ec\n.text:0001d7ee\n.text:0001d7f0\n.text:0001d7f2\n.text:0001d7f4\n.text:0001d7f6\n.text:0001d7f8\n.text:0001d7fa\n.text:0001d7fc\n.text:0001d7fe\n.text:0001d800\n.text:0001d802\n.text:0001d804\n.text:0001d806\n.text:0001d80a\n.text:0001d80c\n.text:0001d80e\n.text:0001d810\n.text:0001d812\n.text:0001d814\n.text:0001d816\n.text:0001d818\n.text:0001d81a\n.text:0001d81c\n.text:0001d81e\n.text:0001d820\n.text:0001d822\n.text:0001d824\n.text:0001d826\n.text:0001d828\n.text:0001d82a\n.text:0001d82c\n.text:0001d82e\n.text:0001d830\n.text:0001d832\n.text:0001d834\n.text:0001d836\n.text:0001d838\n.text:0001d83a\n.text:0001d83c\n.text:0001d83e\n.text:0001d840\n.text:0001d842\n.text:0001d844\n.text:0001d846\n.text:0001d848\n.text:0001d84a\n.text:0001d84c\n.text:0001d84e\n.text:0001d850\n.text:0001d854\n.text:0001d856\n.text:0001d858\n.text:0001d85a\n.text:0001d85c\n'
p3016
tp3017
sS'restore_non_core_regs'
p3018
(S'\n__stdcall restore_non_core_regs()\n'
p3019
V\u000avoid restore_non_core_regs(uint *puParm1)\u000a\u000a{\u000a  if ((*puParm1 & 1) == 0) {\u000a    if ((*puParm1 & 2) == 0) {\u000a      __gnu_Unwind_Restore_VFP(puParm1 + 0x12);\u000a    }\u000a    else {\u000a      __gnu_Unwind_Restore_VFP_D();\u000a    }\u000a  }\u000a  if ((*puParm1 & 4) == 0) {\u000a    __gnu_Unwind_Restore_VFP_D_16_to_31(puParm1 + 0x34);\u000a  }\u000a  if ((*puParm1 & 8) == 0) {\u000a    __gnu_Unwind_Restore_WMMXD(puParm1 + 0x54);\u000a  }\u000a  if ((*puParm1 & 0x10) != 0) {\u000a    return;\u000a  }\u000a  __gnu_Unwind_Restore_WMMXC(puParm1 + 0x74);\u000a  return;\u000a}\u000a\u000a
p3020
S'ldr r3,[r0,#0x0]\nstmdb sp!,{ r4 lr }\ntst r3,#0x1\ncpy r4,r0\nbne 0x000365fc\ntst r3,#0x2\nadd r0,r0,#0x48\nbeq 0x000365f8\nbl 0x00016bb8\nb 0x000365fc\nbl 0x00016bc4\nldr r3,[r4,#0x0]\ntst r3,#0x4\nbne 0x00036610\nadd r0,r4,#0xd0\nbl 0x00016bd0\nldr r3,[r4,#0x0]\ntst r3,#0x8\nbne 0x00036624\nadd r0,r4,#0x150\nbl 0x00016bdc\nldr r3,[r4,#0x0]\ntst r3,#0x10\nldmneia sp!,{ r4 pc }\nadd r0,r4,#0x1d0\nldmia sp!,{ r4 lr }\nb 0x00016be8\n'
p3021
S'00 30 90 e5\n10 40 2d e9\n01 00 13 e3\n00 40 a0 e1\n05 00 00 1a\n02 00 13 e3\n48 00 80 e2\n01 00 00 0a\n70 81 ff eb\n00 00 00 ea\n71 81 ff eb\n00 30 94 e5\n04 00 13 e3\n01 00 00 1a\nd0 00 84 e2\n6f 81 ff eb\n00 30 94 e5\n08 00 13 e3\n01 00 00 1a\n15 0e 84 e2\n6d 81 ff eb\n00 30 94 e5\n10 00 13 e3\n10 80 bd 18\n1d 0e 84 e2\n10 40 bd e8\n6a 81 ff ea\n'
p3022
S'.text:000365d0\n.text:000365d4\n.text:000365d8\n.text:000365dc\n.text:000365e0\n.text:000365e4\n.text:000365e8\n.text:000365ec\n.text:000365f0\n.text:000365f4\n.text:000365f8\n.text:000365fc\n.text:00036600\n.text:00036604\n.text:00036608\n.text:0003660c\n.text:00036610\n.text:00036614\n.text:00036618\n.text:0003661c\n.text:00036620\n.text:00036624\n.text:00036628\n.text:0003662c\n.text:00036630\n.text:00036634\n.text:00036638\n'
p3023
tp3024
sS'lame_get_substep'
p3025
(S'\n__stdcall lame_get_substep()\n'
p3026
V\u000aundefined4 lame_get_substep(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0x50);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3027
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002eec2\nldr r0,[r4,#0x50]\npop { r4, r6, r7, pc }\n'
p3028
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 bd fa\n01 b4\n02 bc\n00 20\n00 29\n00 d0\n20 6d\nd0 bd\n'
p3029
S'.text:0002eeaa\n.text:0002eeac\n.text:0002eeae\n.text:0002eeb0\n.text:0002eeb2\n.text:0002eeb6\n.text:0002eeb8\n.text:0002eeba\n.text:0002eebc\n.text:0002eebe\n.text:0002eec0\n.text:0002eec2\n'
p3030
tp3031
sS'FUN_0001fb98'
p3032
(S'\n__stdcall FUN_0001fb98(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined4 param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16, undefined4 param_17, undefined4 param_18, undefined4 param_19, undefined4 param_20, undefined4 param_21, undefined4 param_22, undefined4 param_23, undefined4 param_24, undefined4 param_25, undefined4 param_26, undefined4 param_27, undefined4 param_28, undefined4 param_29, undefined4 param_30, undefined4 param_31)\n'
p3033
V\u000avoid FUN_0001fb98(void)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined4 unaff_r4;\u000a  undefined4 unaff_r5;\u000a  int param_7;\u000a  int param_11;\u000a  undefined4 param_12;\u000a  int param_13;\u000a  undefined4 param_14;\u000a  int param_15;\u000a  int **param_16;\u000a  int *param_17;\u000a  int param_18;\u000a  uint param_19;\u000a  int *param_20;\u000a  int param_21;\u000a  int *param_22;\u000a  int param_23;\u000a  int param_24;\u000a  int param_27;\u000a  int param_28;\u000a  int param_29;\u000a  int param_30;\u000a  int param_31;\u000a  \u000a  freegfc(unaff_r5);\u000a  *param_17 = param_28;\u000a  FUN_0002040c(5,0xfffffffa);\u000a  apply_preset(param_23,*(int *)(param_23 + param_18) * ~param_19 + param_27 * 4,unaff_r4);\u000a  if ((*(int *)(param_23 + param_15) == 0) &&\u000a     (unaff_r4 = param_12, *(int *)(param_29 + 0x40) <= DAT_0001feac)) {\u000a    param_12 = 0;\u000a    unaff_r4 = param_12;\u000a  }\u000a  *(undefined4 *)(param_29 + DAT_0001feb0) = unaff_r4;\u000a  if (*(int *)(param_23 + 0x2c) < 7) {\u000a    if (*(int *)(param_23 + 0x2c) < 0) {\u000a      *(int *)(param_23 + 0x2c) = param_30;\u000a    }\u000a  }\u000a  else {\u000a    *(undefined4 *)(param_23 + 0x2c) = param_14;\u000a  }\u000a  *(undefined4 *)(param_29 + DAT_0001febc) = *(undefined4 *)(DAT_0001fec4 + 0x1fce4);\u000a  *(undefined4 *)(param_29 + DAT_0001fecc) = *(undefined4 *)(param_23 + 200);\u000a  *(undefined4 *)(param_29 + DAT_0001fed0) = *(undefined4 *)(param_23 + param_28);\u000a  if (*(int *)(param_23 + 0x100) != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __addsf3(*(undefined4 *)(param_23 + param_7));\u000a  }\u000a  if (*param_22 == 0) {\u000a    iVar2 = *(int *)(param_23 + param_21);\u000a    iVar3 = 0;\u000a  }\u000a  else {\u000a    *(undefined4 *)(param_29 + 0x70) = 1;\u000a    param_31 = 1;\u000a    uVar1 = 8;\u000a    if (param_24 <= *(int *)(param_29 + 0x40)) {\u000a      uVar1 = 0xe;\u000a    }\u000a    *(undefined4 *)(param_29 + 0x74) = uVar1;\u000a    if (*(int *)(param_23 + param_13) != 0) {\u000a      iVar2 = FindNearestBitrate(*(int *)(param_23 + param_13),*(undefined4 *)(param_29 + 0x10));\u000a      *(int *)(param_23 + 0xac) = iVar2;\u000a      param_31 = BitrateIndex(iVar2,*(undefined4 *)(param_29 + 0x10),\u000a                              *(undefined4 *)(param_29 + 0x40));\u000a      *(int *)(param_29 + 0x70) = param_31;\u000a      if (param_31 < 0) {\u000a        FUN_0002040c(param_31,0xffffffff);\u000a        return;\u000a      }\u000a    }\u000a    if (*(int *)(param_23 + param_11) == 0) {\u000a      iVar3 = *(int *)(param_29 + 0x74);\u000a    }\u000a    else {\u000a      iVar2 = FindNearestBitrate(*(int *)(param_23 + param_11),*(undefined4 *)(param_29 + 0x10),\u000a                                 *(undefined4 *)(param_29 + 0x40));\u000a      *(int *)(param_23 + 0xb0) = iVar2;\u000a      iVar3 = BitrateIndex(iVar2,*(undefined4 *)(param_29 + 0x10),*(undefined4 *)(param_29 + 0x40));\u000a      *(int *)(param_29 + 0x74) = iVar3;\u000a      if (iVar3 < 0) {\u000a        FUN_0002040c(iVar3,0xffffffff);\u000a        return;\u000a      }\u000a      param_31 = *(int *)(param_29 + 0x70);\u000a    }\u000a    iVar4 = *(int *)(DAT_0001fed4 + 0x1fdfc) + *param_20 * 0x40;\u000a    iVar2 = *(int *)(iVar4 + param_31 * 4);\u000a    *(int *)(param_23 + 0xac) = iVar2;\u000a    iVar3 = *(int *)(iVar4 + iVar3 * 4);\u000a    *(int *)(param_23 + 0xb0) = iVar3;\u000a    if (*(int *)(param_23 + param_21) <= iVar3) {\u000a      iVar3 = *(int *)(param_23 + param_21);\u000a    }\u000a    if (iVar2 <= iVar3) {\u000a      iVar2 = iVar3;\u000a    }\u000a    *(int *)(param_23 + param_21) = iVar2;\u000a    iVar3 = *param_22;\u000a  }\u000a  *(undefined4 *)(param_29 + 100) = *(undefined4 *)(param_23 + 0x98);\u000a  *(undefined4 *)(param_29 + 0x9c) = *(undefined4 *)(param_23 + 0x24);\u000a  *(int *)(param_29 + 0x68) = iVar3;\u000a  *(undefined4 *)(param_29 + DAT_0001fed8) = *(undefined4 *)(param_23 + 0x50);\u000a  *(undefined4 *)(param_29 + 0x1c) = *(undefined4 *)(param_23 + 0x54);\u000a  *(undefined4 *)(param_29 + 0x20) = *(undefined4 *)(param_23 + 0x58);\u000a  *(undefined4 *)(param_29 + 0x24) = *(undefined4 *)(param_23 + 0x5c);\u000a  *(undefined4 *)(param_29 + 0x78) = *(undefined4 *)(param_23 + 0x60);\u000a  *(int *)(param_29 + 0x6c) = iVar2;\u000a  *(undefined4 *)(param_29 + 0xf4) = *(undefined4 *)(param_23 + 100);\u000a  iVar2 = *param_17;\u000a  switch(*(undefined4 *)(param_23 + 0x2c)) {\u000a  case 0:\u000a    if (*(int *)(iVar2 + 0x1c) == 0) {\u000a      *(undefined4 *)(iVar2 + 0x1c) = 1;\u000a    }\u000a    if (*(int *)(iVar2 + DAT_00020390) == 0) {\u000a      *(undefined4 *)(iVar2 + DAT_00020390) = 2;\u000a    }\u000a    uVar1 = 1;\u000a    *(undefined4 *)(iVar2 + 0x28) = 2;\u000a    *(undefined4 *)(iVar2 + 0x2c) = 1;\u000a    if (*(int *)(iVar2 + 0x20) == -1) {\u000a      *(undefined4 *)(iVar2 + 0x20) = 1;\u000a    }\u000a    goto LAB_0001ffde;\u000a  case 1:\u000a    if (*(int *)(iVar2 + 0x1c) == 0) {\u000a      *(undefined4 *)(iVar2 + 0x1c) = 1;\u000a    }\u000a    if (*(int *)(iVar2 + DAT_00020390) == 0) {\u000a      *(undefined4 *)(iVar2 + DAT_00020390) = 2;\u000a    }\u000a    *(undefined4 *)(iVar2 + 0x28) = 2;\u000a    goto LAB_0002002a;\u000a  case 2:\u000a    if (*(int *)(iVar2 + 0x1c) == 0) {\u000a      *(undefined4 *)(iVar2 + 0x1c) = 1;\u000a    }\u000a    if (*(int *)(iVar2 + DAT_00020390) == 0) {\u000a      *(undefined4 *)(iVar2 + DAT_00020390) = 2;\u000a    }\u000a    goto LAB_00020026;\u000a  case 3:\u000a    if (*(int *)(iVar2 + 0x1c) == 0) {\u000a      *(undefined4 *)(iVar2 + 0x1c) = 1;\u000a    }\u000aLAB_00020026:\u000a    *(undefined4 *)(iVar2 + 0x28) = 1;\u000aLAB_0002002a:\u000a    *(undefined4 *)(iVar2 + 0x2c) = 1;\u000a    if (*(int *)(iVar2 + 0x20) == -1) {\u000a      *(undefined4 *)(iVar2 + 0x20) = 1;\u000a    }\u000a    *(undefined4 *)(iVar2 + 0x24) = 1;\u000a    *(undefined4 *)(iVar2 + 0x30) = 0;\u000a    goto LAB_00020080;\u000a  case 4:\u000a    if (*(int *)(iVar2 + 0x1c) == 0) {\u000a      *(undefined4 *)(iVar2 + 0x1c) = 1;\u000a    }\u000a    uVar1 = 0;\u000a    *(undefined4 *)(iVar2 + 0x28) = 0;\u000a    *(undefined4 *)(iVar2 + 0x2c) = 0;\u000a    if (*(int *)(iVar2 + 0x20) == -1) {\u000a      *(undefined4 *)(iVar2 + 0x20) = 1;\u000a    }\u000a    *(undefined4 *)(iVar2 + 0x24) = 1;\u000a    break;\u000a  case 5:\u000a  case 6:\u000a    if (*(int *)(iVar2 + 0x1c) == 0) {\u000a      *(undefined4 *)(iVar2 + 0x1c) = 1;\u000a    }\u000a    uVar1 = 0;\u000a    *(undefined4 *)(iVar2 + 0x28) = 0;\u000a    *(undefined4 *)(iVar2 + 0x2c) = 0;\u000a    if (*(int *)(iVar2 + 0x20) == -1) {\u000a      *(undefined4 *)(iVar2 + 0x20) = 1;\u000a    }\u000aLAB_0001ffde:\u000a    *(undefined4 *)(iVar2 + 0x24) = uVar1;\u000a    break;\u000a  case 7:\u000a    goto switchD_0001fe74_caseD_7;\u000a  case 8:\u000a    *(undefined4 *)(param_23 + 0x2c) = 7;\u000aswitchD_0001fe74_caseD_7:\u000a    *(undefined4 *)(iVar2 + 0x1c) = 0;\u000a    *(undefined4 *)(iVar2 + 0x24) = 0;\u000a    *(undefined4 *)(iVar2 + 0x28) = 0;\u000a    *(undefined4 *)(iVar2 + 0x2c) = 0;\u000a    *(undefined4 *)(iVar2 + 0x30) = 0;\u000a    if ((*param_22 != 4) && (*param_22 != 1)) goto LAB_00020080;\u000a    uVar1 = 0xffffffff;\u000a    break;\u000a  default:\u000a    uVar1 = 0;\u000a    *(undefined4 *)(iVar2 + 0x1c) = 0;\u000a    *(undefined4 *)(iVar2 + 0x24) = 0;\u000a    *(undefined4 *)(iVar2 + 0x28) = 0;\u000a    *(undefined4 *)(iVar2 + 0x2c) = 0;\u000a  }\u000a  *(undefined4 *)(iVar2 + 0x30) = uVar1;\u000aLAB_00020080:\u000a  if (-1 < *(int *)(param_23 + 0xe8)) {\u000a    param_30 = *(int *)(param_23 + 0xe8);\u000a  }\u000a  **param_16 = param_30;\u000a                    /* WARNING: Subroutine does not return */\u000a  __extendsfdf2(*(undefined4 *)(param_23 + 0xec));\u000a}\u000a\u000a
p3034
S'push { r5 }\npop { r0 }\nbl 0x00037e00\nldr r0,[sp,#0x44]\nldr r1,[sp,#0x74]\nstr r1,[r0,#0x0]\nmov r0,#0x5\nmvn r1,r0\nbl 0x0002040c\nldr r6,[sp,#0x60]\nldr r0,[sp,#0x48]\nldr r0,[r6,r0]\nldr r1,[sp,#0x4c]\nmvn r1,r1\nmul r1,r0\nldr r0,[sp,#0x70]\nlsl r0,r0,#0x2\nadd r1,r1,r0\npush { r6 }\npop { r0 }\npush { r4 }\npop { r2 }\nbl 0x00037e90\nldr r0,[sp,#0x3c]\nldr r0,[r6,r0]\ncmp r0,#0x0\nbne 0x0001fbe4\nldr r0,[sp,#0x78]\nldr r1,[r0,#0x40]\nldr r2,[0x0001feac]\nmov r0,#0x0\ncmp r1,r2\nbgt 0x0001fbe2\nstr r0,[sp,#0x1c]\nldr r4,[sp,#0x1c]\nldr r0,[0x0001feb0]\nldr r1,[sp,#0x78]\nstr r4,[r1,r0]\nldr r0,[r6,#0x2c]\ncmp r0,#0x7\nldr r1,[sp,#0x28]\nblt 0x0001fcd4\nstr r5,[sp,#0x68]\nstr r1,[r6,#0x2c]\nb 0x0001fcde\nstr r5,[sp,#0x68]\ncmp r0,#0x0\nbge 0x0001fcde\nldr r0,[sp,#0x7c]\nstr r0,[r6,#0x2c]\nldr r0,[0x0001fec4]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r1,[0x0001febc]\nldr r3,[sp,#0x78]\nstr r0,[r3,r1]\nb 0x0001fcfe\nmov r0,#0xc8\nstr r0,[sp,#0x6c]\nldr r1,[r6,r0]\nldr r0,[0x0001fecc]\nstr r1,[r3,r0]\nldr r2,[sp,#0x74]\nldr r5,[r6,r2]\nldr r2,[0x0001fed0]\nstr r5,[r3,r2]\nadd r4,r3,r2\nadd r3,r3,r0\nmov r2,#0x1\nlsl r0,r2,#0x8\nldr r0,[r6,r0]\ncmp r0,#0x0\nbeq 0x0001fd4e\nstr r4,[sp,#0x4c]\npush { r6 }\npop { r4 }\nldr r0,[sp,#0x8]\nldr r6,[r4,r0]\npush { r6 }\npop { r0 }\nstr r2,[sp,#0x84]\nstr r3,[sp,#0x48]\nbl 0x00037a70\nldr r0,[sp,#0x5c]\nldr r0,[r0,#0x0]\ncmp r0,#0x0\nbeq 0x0001fde6\nldr r3,[sp,#0x78]\nstr r2,[r3,#0x70]\nstr r2,[sp,#0x84]\nldr r2,[r3,#0x40]\nmov r0,#0x8\nmov r1,#0xe\nldr r4,[sp,#0x64]\ncmp r2,r4\nblt 0x0001fd6c\npush { r1 }\npop { r0 }\nstr r0,[r3,#0x74]\nldr r0,[sp,#0x20]\nldr r0,[r6,r0]\npush { r6 }\npop { r1 }\npush { r3 }\npop { r6 }\npush { r1 }\npop { r4 }\npush { r1 }\npop { r5 }\nadd r4,#0xac\ncmp r0,#0x0\nbeq 0x0001fda6\nldr r1,[r6,#0x10]\nbl 0x00037e40\nstr r0,[r4,#0x0]\nldr r2,[r6,#0x40]\nldr r1,[r6,#0x10]\nbl 0x00037eb0\nstr r0,[sp,#0x84]\nstr r0,[r6,#0x70]\nmov r1,#0x0\nmvn r1,r1\ncmp r0,#0x0\nbge 0x0001fda6\nb 0x0002040c\npush { r6 }\npop { r3 }\nldr r0,[sp,#0x18]\nldr r0,[r5,r0]\npush { r5 }\npop { r6 }\nadd r6,#0xb0\ncmp r0,#0x0\nbeq 0x0001fdf2\npush { r3 }\npop { r5 }\nldr r2,[r5,#0x40]\nldr r1,[r5,#0x10]\nbl 0x00037e40\nstr r0,[r6,#0x0]\nldr r2,[r5,#0x40]\nldr r1,[r5,#0x10]\nbl 0x00037eb0\nstr r0,[r5,#0x74]\nmov r1,#0x0\nmvn r1,r1\ncmp r0,#0x0\nbge 0x0001fdda\nb 0x0002040c\nldr r1,[r5,#0x70]\npush { r5 }\npop { r3 }\npush { r1 }\npop { r5 }\nb 0x0001fdf6\nldr r0,[sp,#0x58]\nldr r1,[r6,r0]\nmov r0,#0x0\nldr r5,[sp,#0x78]\nldr r4,[sp,#0x44]\nb 0x0001fe34\nldr r0,[r3,#0x74]\nldr r5,[sp,#0x84]\nldr r1,[0x0001fed4]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r2,[sp,#0x50]\nldr r2,[r2,#0x0]\nlsl r2,r2,#0x6\nadd r2,r1,r2\nlsl r1,r5,#0x2\nldr r1,[r2,r1]\nstr r1,[r4,#0x0]\nlsl r0,r0,#0x2\nldr r0,[r2,r0]\nstr r0,[r6,#0x0]\nldr r6,[sp,#0x60]\nldr r2,[sp,#0x58]\nldr r2,[r6,r2]\ncmp r0,r2\nldr r4,[sp,#0x44]\nblt 0x0001fe20\npush { r2 }\npop { r0 }\ncmp r1,r0\npush { r3 }\npop { r5 }\nbgt 0x0001fe2c\npush { r0 }\npop { r1 }\nldr r0,[sp,#0x58]\nstr r1,[r6,r0]\nldr r0,[sp,#0x5c]\nldr r0,[r0,#0x0]\nmov r2,#0x98\nldr r2,[r6,r2]\nstr r2,[r5,#0x64]\nldr r2,[r6,#0x24]\nmov r3,#0x9c\nstr r2,[r5,r3]\nstr r0,[r5,#0x68]\nldr r0,[r6,#0x50]\nldr r2,[0x0001fed8]\nstr r0,[r5,r2]\nldr r0,[r6,#0x54]\nstr r0,[r5,#0x1c]\nldr r0,[r6,#0x58]\nstr r0,[r5,#0x20]\nldr r0,[r6,#0x5c]\nstr r0,[r5,#0x24]\nldr r0,[r6,#0x60]\nstr r0,[r5,#0x78]\nstr r1,[r5,#0x6c]\nldr r0,[r6,#0x64]\nmov r1,#0xf4\nstr r1,[sp,#0x64]\nstr r0,[r5,r1]\nldr r0,[r4,#0x0]\nldr r1,[r6,#0x2c]\ncmp r1,#0x8\nbls 0x0001fe6c\nb 0x0001ffa6\nlsl r1,r1,#0x2\nadr r2,[0x1fe7c]\nldr r1,[r1,r2]\nadd r1,r1,r2\nmov pc,r1\nldr r1,[r0,#0x1c]\ncmp r1,#0x0\nbne 0x0001fee6\nmov r1,#0x1\nstr r1,[r0,#0x1c]\nmov r1,#0x0\nstr r1,[r0,#0x28]\nstr r1,[r0,#0x2c]\nmvn r2,r1\nldr r3,[r0,#0x20]\ncmp r3,r2\nbne 0x0001ffde\nmov r2,#0x1\nstr r2,[r0,#0x20]\nb 0x0001ffde\nmov r1,#0x0\nstr r1,[r0,#0x1c]\nstr r1,[r0,#0x24]\nstr r1,[r0,#0x28]\nstr r1,[r0,#0x2c]\nb 0x0002007e\nldr r1,[r0,#0x1c]\ncmp r1,#0x0\nbne 0x0001ffbc\nmov r1,#0x1\nstr r1,[r0,#0x1c]\nldr r2,[0x00020390]\nadd r1,r0,r2\nldr r2,[r0,r2]\ncmp r2,#0x0\nbne 0x0001ffca\nmov r2,#0x2\nstr r2,[r1,#0x0]\nmov r2,#0x2\nmov r1,#0x1\nstr r2,[r0,#0x28]\nstr r1,[r0,#0x2c]\nmov r2,#0x0\nmvn r2,r2\nldr r3,[r0,#0x20]\ncmp r3,r2\nbne 0x0001ffde\nstr r1,[r0,#0x20]\nstr r1,[r0,#0x24]\nb 0x0002007e\nldr r1,[r0,#0x1c]\ncmp r1,#0x0\nbne 0x0001ffec\nmov r1,#0x1\nstr r1,[r0,#0x1c]\nldr r2,[0x00020390]\nadd r1,r0,r2\nldr r2,[r0,r2]\ncmp r2,#0x0\nbne 0x0001fffa\nmov r2,#0x2\nstr r2,[r1,#0x0]\nmov r2,#0x2\nmov r1,#0x1\nstr r2,[r0,#0x28]\nb 0x0002002a\nldr r1,[r0,#0x1c]\ncmp r1,#0x0\nbne 0x0002000c\nmov r1,#0x1\nstr r1,[r0,#0x1c]\nldr r2,[0x00020390]\nadd r1,r0,r2\nldr r2,[r0,r2]\ncmp r2,#0x0\nbne 0x00020026\nmov r2,#0x2\nstr r2,[r1,#0x0]\nb 0x00020026\nldr r1,[r0,#0x1c]\ncmp r1,#0x0\nbne 0x00020026\nmov r1,#0x1\nstr r1,[r0,#0x1c]\nmov r1,#0x1\nstr r1,[r0,#0x28]\nstr r1,[r0,#0x2c]\nmov r2,#0x0\nmvn r3,r2\nldr r4,[r0,#0x20]\ncmp r4,r3\nbne 0x00020038\nstr r1,[r0,#0x20]\nstr r1,[r0,#0x24]\nstr r2,[r0,#0x30]\nb 0x00020080\nldr r1,[r0,#0x1c]\ncmp r1,#0x0\nbne 0x00020048\nmov r1,#0x1\nstr r1,[r0,#0x1c]\nmov r1,#0x0\nstr r1,[r0,#0x28]\nstr r1,[r0,#0x2c]\nmvn r2,r1\nldr r3,[r0,#0x20]\ncmp r3,r2\nbne 0x0002005a\nmov r2,#0x1\nstr r2,[r0,#0x20]\nmov r2,#0x1\nstr r2,[r0,#0x24]\nb 0x0002007e\nmov r1,#0x7\nstr r1,[r6,#0x2c]\nmov r1,#0x0\nstr r1,[r0,#0x1c]\nstr r1,[r0,#0x24]\nstr r1,[r0,#0x28]\nstr r1,[r0,#0x2c]\nstr r1,[r0,#0x30]\nldr r2,[sp,#0x5c]\nldr r2,[r2,#0x0]\ncmp r2,#0x4\nbeq 0x0002007c\ncmp r2,#0x1\nbne 0x00020080\nmvn r1,r1\nstr r1,[r0,#0x30]\nmov r0,#0xe8\nstr r0,[sp,#0x58]\nldr r0,[r6,r0]\ncmp r0,#0x0\nblt 0x0002008c\nstr r0,[sp,#0x7c]\nldr r5,[sp,#0x40]\nldr r0,[r5,#0x0]\nldr r1,[sp,#0x7c]\nstr r1,[r0,#0x0]\nmov r0,#0xec\nstr r0,[sp,#0x5c]\nldr r0,[r6,r0]\nbl 0x00037ac0\n'
p3035
S'20 b4\n01 bc\n18 f0 30 f9\n11 98\n1d 99\n01 60\n05 20\nc1 43\n00 f0 2f fc\n18 9e\n12 98\n30 58\n13 99\nc9 43\n41 43\n1c 98\n80 00\n09 18\n40 b4\n01 bc\n10 b4\n04 bc\n18 f0 62 f9\n0f 98\n30 58\n00 28\n07 d1\n1e 98\n01 6c\nb4 4a\n00 20\n91 42\n00 dc\n07 90\n07 9c\nb2 48\n1e 99\n0c 50\nf0 6a\n07 28\n0a 99\n70 db\n1a 95\nf1 62\n72 e0\n1a 95\n00 28\n01 da\n1f 98\nf0 62\n79 48\n78 44\n00 68\n75 49\n1e 9b\n58 50\n08 e0\nc8 20\n1b 90\n31 58\n71 48\n19 50\n1d 9a\nb5 58\n70 4a\n9d 50\n9c 18\n1b 18\n01 22\n10 02\n30 58\n00 28\n17 d0\n13 94\n40 b4\n10 bc\n02 98\n26 58\n40 b4\n01 bc\n21 92\n12 93\n17 f0 9e fe\n17 98\n00 68\n00 28\n47 d0\n1e 9b\n1a 67\n21 92\n1a 6c\n08 20\n0e 21\n19 9c\na2 42\n01 db\n02 b4\n01 bc\n58 67\n08 98\n30 58\n40 b4\n02 bc\n08 b4\n40 bc\n02 b4\n10 bc\n02 b4\n20 bc\nac 34\n00 28\n0e d0\n31 69\n18 f0 59 f8\n20 60\n32 6c\n31 69\n18 f0 8c f8\n21 90\n30 67\n00 21\nc9 43\n00 28\n00 da\n32 e3\n40 b4\n08 bc\n06 98\n28 58\n20 b4\n40 bc\nb0 36\n00 28\n1c d0\n08 b4\n20 bc\n2a 6c\n29 69\n18 f0 3e f8\n30 60\n2a 6c\n29 69\n18 f0 71 f8\n68 67\n00 21\nc9 43\n00 28\n00 da\n18 e3\n29 6f\n20 b4\n08 bc\n02 b4\n20 bc\n07 e0\n16 98\n31 58\n00 20\n1e 9d\n11 9c\n20 e0\n58 6f\n21 9d\n37 49\n79 44\n09 68\n14 9a\n12 68\n92 01\n8a 18\na9 00\n51 58\n21 60\n80 00\n10 58\n30 60\n18 9e\n16 9a\nb2 58\n90 42\n11 9c\n01 db\n04 b4\n01 bc\n81 42\n08 b4\n20 bc\n01 dc\n01 b4\n02 bc\n16 98\n31 50\n17 98\n00 68\n98 22\nb2 58\n6a 66\n72 6a\n9c 23\nea 50\na8 66\n30 6d\n24 4a\na8 50\n70 6d\ne8 61\nb0 6d\n28 62\nf0 6d\n68 62\n30 6e\na8 67\ne9 66\n70 6e\nf4 21\n19 91\n68 50\n20 68\nf1 6a\n08 29\n00 d9\n9c e0\n89 00\n03 a2\n89 58\n89 18\n8f 46\nc1 69\n00 29\n01 d1\n01 21\nc1 61\n00 21\n81 62\nc1 62\nca 43\n03 6a\n93 42\n74 d1\n01 22\n02 62\n71 e0\n00 21\nc1 61\n41 62\n81 62\nc1 62\n65 e0\nc1 69\n00 29\n01 d1\n01 21\nc1 61\nf4 4a\n81 18\n82 58\n00 2a\n01 d1\n02 22\n0a 60\n02 22\n01 21\n82 62\nc1 62\n00 22\nd2 43\n03 6a\n93 42\n00 d1\n01 62\n41 62\n4d e0\nc1 69\n00 29\n01 d1\n01 21\nc1 61\ne8 4a\n81 18\n82 58\n00 2a\n01 d1\n02 22\n0a 60\n02 22\n01 21\n82 62\n13 e0\nc1 69\n00 29\n01 d1\n01 21\nc1 61\ne0 4a\n81 18\n82 58\n00 2a\n07 d1\n02 22\n0a 60\n04 e0\nc1 69\n00 29\n01 d1\n01 21\nc1 61\n01 21\n81 62\nc1 62\n00 22\nd3 43\n04 6a\n9c 42\n00 d1\n01 62\n41 62\n02 63\n20 e0\nc1 69\n00 29\n01 d1\n01 21\nc1 61\n00 21\n81 62\nc1 62\nca 43\n03 6a\n93 42\n01 d1\n01 22\n02 62\n01 22\n42 62\n0e e0\n07 21\nf1 62\n00 21\nc1 61\n41 62\n81 62\nc1 62\n01 63\n17 9a\n12 68\n04 2a\n01 d0\n01 2a\n01 d1\nc9 43\n01 63\ne8 20\n16 90\n30 58\n00 28\n00 db\n1f 90\n10 9d\n28 68\n1f 99\n01 60\nec 20\n17 90\n30 58\n17 f0 11 fd\n'
p3036
S'.text:0001fb98\n.text:0001fb9a\n.text:0001fb9c\n.text:0001fba0\n.text:0001fba2\n.text:0001fba4\n.text:0001fba6\n.text:0001fba8\n.text:0001fbaa\n.text:0001fbae\n.text:0001fbb0\n.text:0001fbb2\n.text:0001fbb4\n.text:0001fbb6\n.text:0001fbb8\n.text:0001fbba\n.text:0001fbbc\n.text:0001fbbe\n.text:0001fbc0\n.text:0001fbc2\n.text:0001fbc4\n.text:0001fbc6\n.text:0001fbc8\n.text:0001fbcc\n.text:0001fbce\n.text:0001fbd0\n.text:0001fbd2\n.text:0001fbd4\n.text:0001fbd6\n.text:0001fbd8\n.text:0001fbda\n.text:0001fbdc\n.text:0001fbde\n.text:0001fbe0\n.text:0001fbe2\n.text:0001fbe4\n.text:0001fbe6\n.text:0001fbe8\n.text:0001fbea\n.text:0001fbec\n.text:0001fbee\n.text:0001fbf0\n.text:0001fbf2\n.text:0001fbf4\n.text:0001fbf6\n.text:0001fcd4\n.text:0001fcd6\n.text:0001fcd8\n.text:0001fcda\n.text:0001fcdc\n.text:0001fcde\n.text:0001fce0\n.text:0001fce2\n.text:0001fce4\n.text:0001fce6\n.text:0001fce8\n.text:0001fcea\n.text:0001fcfe\n.text:0001fd00\n.text:0001fd02\n.text:0001fd04\n.text:0001fd06\n.text:0001fd08\n.text:0001fd0a\n.text:0001fd0c\n.text:0001fd0e\n.text:0001fd10\n.text:0001fd12\n.text:0001fd14\n.text:0001fd16\n.text:0001fd18\n.text:0001fd1a\n.text:0001fd1c\n.text:0001fd1e\n.text:0001fd20\n.text:0001fd22\n.text:0001fd24\n.text:0001fd26\n.text:0001fd28\n.text:0001fd2a\n.text:0001fd2c\n.text:0001fd2e\n.text:0001fd30\n.text:0001fd4e\n.text:0001fd50\n.text:0001fd52\n.text:0001fd54\n.text:0001fd56\n.text:0001fd58\n.text:0001fd5a\n.text:0001fd5c\n.text:0001fd5e\n.text:0001fd60\n.text:0001fd62\n.text:0001fd64\n.text:0001fd66\n.text:0001fd68\n.text:0001fd6a\n.text:0001fd6c\n.text:0001fd6e\n.text:0001fd70\n.text:0001fd72\n.text:0001fd74\n.text:0001fd76\n.text:0001fd78\n.text:0001fd7a\n.text:0001fd7c\n.text:0001fd7e\n.text:0001fd80\n.text:0001fd82\n.text:0001fd84\n.text:0001fd86\n.text:0001fd88\n.text:0001fd8a\n.text:0001fd8e\n.text:0001fd90\n.text:0001fd92\n.text:0001fd94\n.text:0001fd98\n.text:0001fd9a\n.text:0001fd9c\n.text:0001fd9e\n.text:0001fda0\n.text:0001fda2\n.text:0001fda4\n.text:0001fda6\n.text:0001fda8\n.text:0001fdaa\n.text:0001fdac\n.text:0001fdae\n.text:0001fdb0\n.text:0001fdb2\n.text:0001fdb4\n.text:0001fdb6\n.text:0001fdb8\n.text:0001fdba\n.text:0001fdbc\n.text:0001fdbe\n.text:0001fdc0\n.text:0001fdc4\n.text:0001fdc6\n.text:0001fdc8\n.text:0001fdca\n.text:0001fdce\n.text:0001fdd0\n.text:0001fdd2\n.text:0001fdd4\n.text:0001fdd6\n.text:0001fdd8\n.text:0001fdda\n.text:0001fddc\n.text:0001fdde\n.text:0001fde0\n.text:0001fde2\n.text:0001fde4\n.text:0001fde6\n.text:0001fde8\n.text:0001fdea\n.text:0001fdec\n.text:0001fdee\n.text:0001fdf0\n.text:0001fdf2\n.text:0001fdf4\n.text:0001fdf6\n.text:0001fdf8\n.text:0001fdfa\n.text:0001fdfc\n.text:0001fdfe\n.text:0001fe00\n.text:0001fe02\n.text:0001fe04\n.text:0001fe06\n.text:0001fe08\n.text:0001fe0a\n.text:0001fe0c\n.text:0001fe0e\n.text:0001fe10\n.text:0001fe12\n.text:0001fe14\n.text:0001fe16\n.text:0001fe18\n.text:0001fe1a\n.text:0001fe1c\n.text:0001fe1e\n.text:0001fe20\n.text:0001fe22\n.text:0001fe24\n.text:0001fe26\n.text:0001fe28\n.text:0001fe2a\n.text:0001fe2c\n.text:0001fe2e\n.text:0001fe30\n.text:0001fe32\n.text:0001fe34\n.text:0001fe36\n.text:0001fe38\n.text:0001fe3a\n.text:0001fe3c\n.text:0001fe3e\n.text:0001fe40\n.text:0001fe42\n.text:0001fe44\n.text:0001fe46\n.text:0001fe48\n.text:0001fe4a\n.text:0001fe4c\n.text:0001fe4e\n.text:0001fe50\n.text:0001fe52\n.text:0001fe54\n.text:0001fe56\n.text:0001fe58\n.text:0001fe5a\n.text:0001fe5c\n.text:0001fe5e\n.text:0001fe60\n.text:0001fe62\n.text:0001fe64\n.text:0001fe66\n.text:0001fe68\n.text:0001fe6a\n.text:0001fe6c\n.text:0001fe6e\n.text:0001fe70\n.text:0001fe72\n.text:0001fe74\n.text:0001fedc\n.text:0001fede\n.text:0001fee0\n.text:0001fee2\n.text:0001fee4\n.text:0001fee6\n.text:0001fee8\n.text:0001feea\n.text:0001feec\n.text:0001feee\n.text:0001fef0\n.text:0001fef2\n.text:0001fef4\n.text:0001fef6\n.text:0001fef8\n.text:0001ffa6\n.text:0001ffa8\n.text:0001ffaa\n.text:0001ffac\n.text:0001ffae\n.text:0001ffb0\n.text:0001ffb2\n.text:0001ffb4\n.text:0001ffb6\n.text:0001ffb8\n.text:0001ffba\n.text:0001ffbc\n.text:0001ffbe\n.text:0001ffc0\n.text:0001ffc2\n.text:0001ffc4\n.text:0001ffc6\n.text:0001ffc8\n.text:0001ffca\n.text:0001ffcc\n.text:0001ffce\n.text:0001ffd0\n.text:0001ffd2\n.text:0001ffd4\n.text:0001ffd6\n.text:0001ffd8\n.text:0001ffda\n.text:0001ffdc\n.text:0001ffde\n.text:0001ffe0\n.text:0001ffe2\n.text:0001ffe4\n.text:0001ffe6\n.text:0001ffe8\n.text:0001ffea\n.text:0001ffec\n.text:0001ffee\n.text:0001fff0\n.text:0001fff2\n.text:0001fff4\n.text:0001fff6\n.text:0001fff8\n.text:0001fffa\n.text:0001fffc\n.text:0001fffe\n.text:00020000\n.text:00020002\n.text:00020004\n.text:00020006\n.text:00020008\n.text:0002000a\n.text:0002000c\n.text:0002000e\n.text:00020010\n.text:00020012\n.text:00020014\n.text:00020016\n.text:00020018\n.text:0002001a\n.text:0002001c\n.text:0002001e\n.text:00020020\n.text:00020022\n.text:00020024\n.text:00020026\n.text:00020028\n.text:0002002a\n.text:0002002c\n.text:0002002e\n.text:00020030\n.text:00020032\n.text:00020034\n.text:00020036\n.text:00020038\n.text:0002003a\n.text:0002003c\n.text:0002003e\n.text:00020040\n.text:00020042\n.text:00020044\n.text:00020046\n.text:00020048\n.text:0002004a\n.text:0002004c\n.text:0002004e\n.text:00020050\n.text:00020052\n.text:00020054\n.text:00020056\n.text:00020058\n.text:0002005a\n.text:0002005c\n.text:0002005e\n.text:00020060\n.text:00020062\n.text:00020064\n.text:00020066\n.text:00020068\n.text:0002006a\n.text:0002006c\n.text:0002006e\n.text:00020070\n.text:00020072\n.text:00020074\n.text:00020076\n.text:00020078\n.text:0002007a\n.text:0002007c\n.text:0002007e\n.text:00020080\n.text:00020082\n.text:00020084\n.text:00020086\n.text:00020088\n.text:0002008a\n.text:0002008c\n.text:0002008e\n.text:00020090\n.text:00020092\n.text:00020094\n.text:00020096\n.text:00020098\n.text:0002009a\n'
p3037
tp3038
sS'lame_set_quant_comp'
p3039
(S'\n__stdcall lame_set_quant_comp()\n'
p3040
V\u000avoid lame_set_quant_comp(void)\u000a\u000a{\u000a  (*(lame_get_quant_comp_short + DAT_00037efc))();\u000a  return;\u000a}\u000a\u000a
p3041
S'ldr r12,[0x37efc]\nadd pc,r12,pc\n'
p3042
S'00 c0 9f e5\n0f f0 8c e0\n'
p3043
S'.text:00037ef4\n.text:00037ef8\n'
p3044
tp3045
sS'__divsf3'
p3046
(S'\n__stdcall __divsf3()\n'
p3047
V\u000avoid __divsf3(void)\u000a\u000a{\u000a  (*(__mulsf3 + DAT_00037a9c))();\u000a  return;\u000a}\u000a\u000a
p3048
S'ldr r12,[0x37a9c]\nadd pc,r12,pc\n'
p3049
S'00 c0 9f e5\n0f f0 8c e0\n'
p3050
S'.text:00037a94\n.text:00037a98\n'
p3051
tp3052
sS'id3tag_set_album'
p3053
(S'\n__stdcall id3tag_set_album()\n'
p3054
V\u000avoid id3tag_set_album(int iParm1,char *pcParm2)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  \u000a  if ((((iParm1 != 0) && (pcParm2 != (char *)0x0)) && (iVar2 = *(int *)(iParm1 + 0x120), iVar2 != 0)\u000a      ) && (*pcParm2 != 0)) {\u000a    local_strdup(iVar2 + DAT_0001d7c8,pcParm2);\u000a    *(uint *)(iVar2 + DAT_0001d7cc) = *(uint *)(iVar2 + DAT_0001d7cc) | 1;\u000a    iVar2 = DAT_0001d7cc;\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    if (iVar3 != 0) {\u000a      uVar1 = *(undefined4 *)(iVar3 + DAT_0001d7cc);\u000a      id3v2_add_latin1(iParm1,DAT_0001d7d0,DAT_0001d7d4 + 0x1d7b4,0,pcParm2);\u000a      *(undefined4 *)(iVar3 + iVar2) = uVar1;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p3055
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r1 }\npop { r5 }\npush { r0 }\npop { r4 }\ncmp r4,#0x0\nbeq 0x0001d7c2\nmov r0,#0x9\nlsl r0,r0,#0x5\nadd r1,r4,r0\ncmp r5,#0x0\nbeq 0x0001d7c2\nldr r6,[r4,r0]\ncmp r6,#0x0\nbeq 0x0001d7c2\nldrb r0,[r5,#0x0]\ncmp r0,#0x0\nbeq 0x0001d7c2\nldr r0,[0x0001d7c8]\nadd r0,r6,r0\nstr r1,[sp,#0x8]\npush { r5 }\npop { r1 }\nbl 0x0001d66c\nldr r0,[0x0001d7cc]\nldr r1,[r6,r0]\nmov r2,#0x1\norr r2,r1\nstr r2,[r6,r0]\nldr r0,[sp,#0x8]\nldr r6,[r0,#0x0]\ncmp r6,#0x0\nbeq 0x0001d7c2\nldr r0,[0x0001d7cc]\nstr r0,[sp,#0x4]\nldr r1,[r6,r0]\nstr r1,[sp,#0x8]\nmov r0,sp\nstr r5,[r0,#0x0]\nldr r1,[0x0001d7d0]\nldr r2,[0x0001d7d4]\nadd r2,pc\nmov r3,#0x0\npush { r4 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x4]\nstr r0,[r6,r1]\nadd sp,#0xc\npop { r4, r5, r6, r7, pc }\n'
p3056
S'f0 b5\n03 af\n83 b0\n02 b4\n20 bc\n01 b4\n10 bc\n00 2c\n2b d0\n09 20\n40 01\n21 18\n00 2d\n26 d0\n26 58\n00 2e\n23 d0\n28 78\n00 28\n20 d0\n11 48\n30 18\n02 91\n20 b4\n02 bc\nff f7 6f ff\n0f 48\n31 58\n01 22\n0a 43\n32 50\n02 98\n06 68\n00 2e\n10 d0\n0a 48\n01 90\n31 58\n02 91\n68 46\n05 60\n08 49\n09 4a\n7a 44\n00 23\n10 b4\n01 bc\nff f7 fa fd\n02 98\n01 99\n70 50\n03 b0\nf0 bd\n'
p3057
S'.text:0001d758\n.text:0001d75a\n.text:0001d75c\n.text:0001d75e\n.text:0001d760\n.text:0001d762\n.text:0001d764\n.text:0001d766\n.text:0001d768\n.text:0001d76a\n.text:0001d76c\n.text:0001d76e\n.text:0001d770\n.text:0001d772\n.text:0001d774\n.text:0001d776\n.text:0001d778\n.text:0001d77a\n.text:0001d77c\n.text:0001d77e\n.text:0001d780\n.text:0001d782\n.text:0001d784\n.text:0001d786\n.text:0001d788\n.text:0001d78a\n.text:0001d78e\n.text:0001d790\n.text:0001d792\n.text:0001d794\n.text:0001d796\n.text:0001d798\n.text:0001d79a\n.text:0001d79c\n.text:0001d79e\n.text:0001d7a0\n.text:0001d7a2\n.text:0001d7a4\n.text:0001d7a6\n.text:0001d7a8\n.text:0001d7aa\n.text:0001d7ac\n.text:0001d7ae\n.text:0001d7b0\n.text:0001d7b2\n.text:0001d7b4\n.text:0001d7b6\n.text:0001d7b8\n.text:0001d7bc\n.text:0001d7be\n.text:0001d7c0\n.text:0001d7c2\n.text:0001d7c4\n'
p3058
tp3059
sS'lame_get_ogg'
p3060
(S'\n__stdcall lame_get_ogg(lame_global_flags * gfp)\n'
p3061
V\u000aint lame_get_ogg(lame_global_flags *gfp)\u000a\u000a{\u000a  uint uVar1;\u000a  lame_global_flags *gfp_00;\u000a  int iVar2;\u000a  int in_r1;\u000a  undefined *puVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int *unaff_r4;\u000a  uint uVar9;\u000a  uint unaff_r5;\u000a  undefined4 *puVar10;\u000a  uint uVar11;\u000a  undefined *puVar12;\u000a  bool in_ZR;\u000a  int *in_stack_00000004;\u000a  undefined4 *in_stack_00000008;\u000a  char *__s;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint uStack00000030;\u000a  \u000a  do {\u000a    if (in_ZR == false) {\u000a      iVar5 = in_r1 + 0xc;\u000a      if (in_r1 == 0) {\u000a        iVar5 = 0xb;\u000a      }\u000a    }\u000a    else {\u000a      iVar5 = in_r1 * 2 + 0xd;\u000a      if (in_r1 == 0) {\u000a        iVar5 = 0xb;\u000a      }\u000a      gfp = (lame_global_flags *)((int)gfp << 1);\u000a    }\u000a    iVar5 = (int)&gfp->class_id + iVar5;\u000a    while( true ) {\u000a      while( true ) {\u000a        unaff_r5 = iVar5 + unaff_r5;\u000a        unaff_r4 = (int *)*unaff_r4;\u000a        if (unaff_r4 == (int *)0x0) {\u000a          if ((*in_stack_00000010 & 0x20) != 0) {\u000a            unaff_r5 = *(int *)(in_stack_0000001c + DAT_0001e1e4) + unaff_r5;\u000a          }\u000a          uVar1 = unaff_r5;\u000a          if ((in_stack_00000014 < unaff_r5) || (uVar1 = 0, in_stack_00000018 == (undefined *)0x0))\u000a          goto LAB_0001e470;\u000a          *in_stack_00000018 = 0x49;\u000a          in_stack_00000018[1] = 0x44;\u000a          in_stack_00000018[2] = 0x33;\u000a          in_stack_00000018[3] = 3;\u000a          uStack00000030 = 0;\u000a          in_stack_00000018[4] = 0;\u000a          in_stack_00000018[5] = 0;\u000a          uVar1 = unaff_r5 - 10;\u000a          in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a          in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a          in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a          in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a          puVar12 = in_stack_00000018 + 10;\u000a          puVar10 = (undefined4 *)*in_stack_00000008;\u000a          goto LAB_0001e09c;\u000a        }\u000a        uVar1 = unaff_r4[1];\u000a        uVar11 = 0xff;\u000a        if ((uVar1 != DAT_0001e1dc) && (uVar7 = 0, iVar5 = in_stack_00000024, uVar1 != DAT_0001e1e0)\u000a           ) break;\u000a        iVar5 = unaff_r4[4] * 2 + 0x10;\u000a        if (unaff_r4[5] != 1) {\u000a          iVar5 = unaff_r4[4] + 0xf;\u000a        }\u000a        iVar2 = unaff_r4[7];\u000a        if (unaff_r4[8] == 1) {\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        iVar5 = iVar5 + iVar2;\u000a      }\u000a      do {\u000a        uVar9 = uVar11 & 0x57000000;\u000a        uVar4 = 0;\u000a        if (uVar9 != (uVar11 & uVar1)) {\u000a          uVar4 = uVar11 & uVar1;\u000a        }\u000a        if (uVar9 == 0) {\u000a          uVar4 = uVar9;\u000a        }\u000a        uVar7 = uVar7 | uVar4;\u000a        iVar5 = iVar5 + -1;\u000a        uVar11 = uVar11 << 8;\u000a      } while (iVar5 != 0);\u000a      if (uVar7 != 0) break;\u000a      iVar5 = sizeOfWxxxNode(unaff_r4);\u000a    }\u000a    gfp = (lame_global_flags *)unaff_r4[7];\u000a    in_r1 = unaff_r4[4];\u000a    in_ZR = unaff_r4[8] == 1;\u000a  } while( true );\u000aLAB_0001e09c:\u000a  if (puVar10 == (undefined4 *)0x0) {\u000a    if (__s != (char *)0x0) {\u000a      iVar5 = 4;\u000a      if ((*in_stack_00000004 != 0) &&\u000a         (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar12[iVar5 + -1] = (char)uVar1;\u000a          iVar5 = iVar5 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar5);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar12,in_stack_00000018 + (unaff_r5 - (int)puVar12));\u000a    uVar1 = unaff_r5;\u000aLAB_0001e470:\u000a    if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a      return uVar1;\u000a    }\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  uVar1 = puVar10[1];\u000a  uVar11 = 0xff;\u000a  iVar5 = 4;\u000a  if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a    iVar5 = puVar10[4] * 2 + 0x10;\u000a    if (puVar10[5] != 1) {\u000a      iVar5 = puVar10[4] + 0xf;\u000a    }\u000a    iVar2 = 0;\u000a    if (puVar10[8] == 1) {\u000a      iVar2 = puVar10[8];\u000a    }\u000a    uVar11 = (puVar10[7] << iVar2) + iVar5;\u000a    iVar5 = 4;\u000a    if (10 < uVar11) {\u000a      do {\u000a        puVar12[iVar5 + -1] = (char)uVar1;\u000a        iVar5 = iVar5 + -1;\u000a        uVar1 = uVar1 >> 8;\u000a      } while (0 < iVar5);\u000a      uVar11 = uVar11 - 10;\u000a      iVar5 = 4;\u000a      do {\u000a        puVar12[iVar5 + 3] = (char)uVar11;\u000a        iVar5 = iVar5 + -1;\u000a        uVar11 = uVar11 >> 8;\u000a      } while (0 < iVar5);\u000a      puVar12[8] = 0;\u000a      puVar12[9] = 0;\u000a      *(bool *)(puVar12 + 10) = puVar10[8] == 1;\u000a      puVar12[0xb] = *(undefined *)(puVar10 + 2);\u000a      puVar12[0xc] = *(undefined *)((int)puVar10 + 9);\u000a      puVar12[0xd] = *(undefined *)((int)puVar10 + 10);\u000a      puVar12 = puVar12 + 0xe;\u000a      if (puVar10[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar12,puVar10[3],puVar10[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar5 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar5;\u000a      }\u000a      iVar5 = puVar10[4];\u000a      if (iVar5 != 0) {\u000a        puVar3 = (undefined *)puVar10[3];\u000a        iVar2 = iVar5;\u000a        puVar8 = puVar12;\u000a        do {\u000a          *puVar8 = *puVar3;\u000a          puVar8 = puVar8 + 1;\u000a          puVar3 = puVar3 + 1;\u000a          iVar2 = iVar2 + -1;\u000a        } while (iVar2 != 0);\u000a        puVar12 = puVar12 + iVar5;\u000a      }\u000a      *puVar12 = 0;\u000a      puVar12 = puVar12 + 1;\u000a      if (puVar10[8] == 1) {\u000aLAB_0001e338:\u000a        puVar12 = (undefined *)writeUcs2s(puVar12,puVar10[6],puVar10[7]);\u000a      }\u000a      else {\u000a        iVar5 = puVar10[7];\u000a        if (iVar5 != 0) {\u000a          puVar3 = (undefined *)puVar10[6];\u000a          iVar2 = iVar5;\u000a          puVar8 = puVar12;\u000a          do {\u000a            *puVar8 = *puVar3;\u000a            puVar8 = puVar8 + 1;\u000a            puVar3 = puVar3 + 1;\u000a            iVar2 = iVar2 + -1;\u000a          } while (iVar2 != 0);\u000aLAB_0001e36a:\u000a          puVar12 = puVar12 + iVar5;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    do {\u000a      uVar9 = uVar11 & 0x57000000;\u000a      uVar4 = uStack00000030;\u000a      if (uVar9 != (uVar11 & uVar1)) {\u000a        uVar4 = uVar11 & uVar1;\u000a      }\u000a      if (uVar9 == 0) {\u000a        uVar4 = uVar9;\u000a      }\u000a      uVar7 = uVar7 | uVar4;\u000a      iVar5 = iVar5 + -1;\u000a      uVar11 = uVar11 << 8;\u000a    } while (iVar5 != 0);\u000a    if (uVar7 == 0) {\u000a      uVar11 = sizeOfWxxxNode(puVar10);\u000a      iVar5 = 4;\u000a      if (10 < uVar11) {\u000a        do {\u000a          puVar12[iVar5 + -1] = (char)uVar1;\u000a          iVar5 = iVar5 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar5);\u000a        uVar11 = uVar11 - 10;\u000a        iVar5 = 4;\u000a        do {\u000a          puVar12[iVar5 + 3] = (char)uVar11;\u000a          iVar5 = iVar5 + -1;\u000a          uVar11 = uVar11 >> 8;\u000a        } while (0 < iVar5);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        puVar8 = puVar12 + 10;\u000a        if (puVar10[4] != 0) {\u000a          *(bool *)(puVar12 + 10) = puVar10[5] == 1;\u000a          puVar12 = puVar12 + 0xb;\u000a          if (puVar10[5] == 1) {\u000a            puVar8 = (undefined *)writeUcs2s(puVar12,puVar10[3],puVar10[4]);\u000a            *puVar8 = 0;\u000a            puVar8[1] = 0;\u000a            puVar8 = puVar8 + 2;\u000a          }\u000a          else {\u000a            iVar5 = puVar10[4];\u000a            if (iVar5 != 0) {\u000a              puVar3 = (undefined *)puVar10[3];\u000a              iVar2 = iVar5;\u000a              puVar8 = puVar12;\u000a              do {\u000a                *puVar8 = *puVar3;\u000a                puVar8 = puVar8 + 1;\u000a                puVar3 = puVar3 + 1;\u000a                iVar2 = iVar2 + -1;\u000a              } while (iVar2 != 0);\u000a              puVar12 = puVar12 + iVar5;\u000a            }\u000a            *puVar12 = 0;\u000a            puVar8 = puVar12 + 1;\u000a          }\u000a        }\u000a        if (puVar10[8] == 1) {\u000a          puVar12 = (undefined *)writeLoBytes(puVar8,puVar10[6],puVar10[7]);\u000a        }\u000a        else {\u000a          iVar5 = puVar10[7];\u000a          puVar12 = puVar8;\u000a          if (iVar5 != 0) {\u000a            puVar3 = (undefined *)puVar10[6];\u000a            iVar2 = iVar5;\u000a            puVar12 = puVar8;\u000a            do {\u000a              *puVar12 = *puVar3;\u000a              puVar12 = puVar12 + 1;\u000a              puVar3 = puVar3 + 1;\u000a              iVar2 = iVar2 + -1;\u000a            } while (iVar2 != 0);\u000a            puVar12 = puVar8 + iVar5;\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      iVar5 = puVar10[7];\u000a      iVar2 = puVar10[4];\u000a      if (puVar10[8] == 1) {\u000a        iVar6 = iVar2 * 2 + 0xd;\u000a        if (iVar2 == 0) {\u000a          iVar6 = 0xb;\u000a        }\u000a        iVar5 = iVar5 << 1;\u000a      }\u000a      else {\u000a        iVar6 = iVar2 + 0xc;\u000a        if (iVar2 == 0) {\u000a          iVar6 = 0xb;\u000a        }\u000a      }\u000a      iVar2 = 4;\u000a      if (10 < (uint)(iVar6 + iVar5)) {\u000a        do {\u000a          puVar12[iVar2 + -1] = (char)uVar1;\u000a          iVar2 = iVar2 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar2);\u000a        uVar1 = (iVar6 + iVar5) - 10;\u000a        iVar5 = 4;\u000a        do {\u000a          puVar12[iVar5 + 3] = (char)uVar1;\u000a          iVar5 = iVar5 + -1;\u000a          uVar1 = uVar1 >> 8;\u000a        } while (0 < iVar5);\u000a        puVar12[8] = 0;\u000a        puVar12[9] = 0;\u000a        *(bool *)(puVar12 + 10) = puVar10[8] == 1;\u000a        puVar12 = puVar12 + 0xb;\u000a        iVar5 = puVar10[4];\u000a        if (iVar5 != 0) {\u000a          if (puVar10[5] == 1) {\u000a            puVar12 = (undefined *)writeUcs2s(puVar12,puVar10[3]);\u000a            *puVar12 = 0;\u000a            puVar12[1] = 0;\u000a            puVar12 = puVar12 + 2;\u000a          }\u000a          else {\u000a            puVar3 = (undefined *)puVar10[3];\u000a            iVar2 = iVar5;\u000a            puVar8 = puVar12;\u000a            do {\u000a              *puVar8 = *puVar3;\u000a              puVar8 = puVar8 + 1;\u000a              puVar3 = puVar3 + 1;\u000a              iVar2 = iVar2 + -1;\u000a            } while (iVar2 != 0);\u000a            puVar12[iVar5] = 0;\u000a            puVar12 = puVar12 + iVar5 + 1;\u000a          }\u000a        }\u000a        if (puVar10[8] == 1) goto LAB_0001e338;\u000a        iVar5 = puVar10[7];\u000a        if (iVar5 != 0) {\u000a          puVar3 = (undefined *)puVar10[6];\u000a          iVar2 = iVar5;\u000a          puVar8 = puVar12;\u000a          do {\u000a            *puVar8 = *puVar3;\u000a            puVar8 = puVar8 + 1;\u000a            puVar3 = puVar3 + 1;\u000a            iVar2 = iVar2 + -1;\u000a          } while (iVar2 != 0);\u000a          goto LAB_0001e36a;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  puVar10 = (undefined4 *)*puVar10;\u000a  goto LAB_0001e09c;\u000a}\u000a\u000a
p3062
S'bne 0x0001e01a\nlsl r2,r1,#0x1\n'
p3063
S'0e d1\n4a 00\n'
p3064
S'.text:0001dffa\n.text:0001dffc\n'
p3065
tp3066
sS'lame_get_framesize'
p3067
(S'\n__stdcall lame_get_framesize()\n'
p3068
V\u000aint lame_get_framesize(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  iVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      iVar2 = *(int *)(iVar3 + 0x4c) * 0x240;\u000a    }\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p3069
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f200\nmov r6,#0x9\nlsl r0,r6,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f200\nlsl r0,r6,#0x6\nldr r4,[r5,#0x4c]\nmul r4,r0\npush { r4 }\npop { r0 }\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p3070
S'f0 b5\n03 af\n81 b0\n01 b4\n20 bc\n09 f0 27 f9\n00 24\n00 28\n0b d0\n09 26\n70 01\n2d 58\n20 b4\n01 bc\n09 f0 25 f9\n00 28\n02 d0\nb0 01\nec 6c\n44 43\n10 b4\n01 bc\n01 b0\nf0 bd\n'
p3071
S'.text:0002f1d4\n.text:0002f1d6\n.text:0002f1d8\n.text:0002f1da\n.text:0002f1dc\n.text:0002f1de\n.text:0002f1e2\n.text:0002f1e4\n.text:0002f1e6\n.text:0002f1e8\n.text:0002f1ea\n.text:0002f1ec\n.text:0002f1ee\n.text:0002f1f0\n.text:0002f1f2\n.text:0002f1f6\n.text:0002f1f8\n.text:0002f1fa\n.text:0002f1fc\n.text:0002f1fe\n.text:0002f200\n.text:0002f202\n.text:0002f204\n.text:0002f206\n'
p3072
tp3073
sS'count_bit_noESC'
p3074
(S'\n__stdcall count_bit_noESC()\n'
p3075
V\u000aundefined4 count_bit_noESC(int *piParm1,int *piParm2,undefined4 uParm3,int *piParm4)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  \u000a  iVar1 = 0;\u000a  do {\u000a    iVar2 = *piParm1;\u000a    piVar3 = piParm1 + 1;\u000a    piParm1 = piParm1 + 2;\u000a    iVar1 = (uint)*(byte *)(*(int *)(*(int *)(DAT_00030e94 + 0x30e74) + 0x1c) + iVar2 * 2 + *piVar3)\u000a            + iVar1;\u000a  } while (piParm1 < piParm2);\u000a  *piParm4 = *piParm4 + iVar1;\u000a  return 1;\u000a}\u000a\u000a
p3076
S'push { r4, r5, r6, lr }\nldr r2,[0x00030e94]\nadd r2,pc\nldr r2,[r2,#0x0]\nldr r4,[r2,#0x1c]\nmov r2,#0x0\nldmia r0!,{ r5, r6 }\nlsl r5,r5,#0x1\nadd r5,r5,r6\nldrb r5,[r4,r5]\nadd r2,r5,r2\nadd r0,#0x0\ncmp r0,r1\nbcc 0x00030e78\nldr r0,[r3,#0x0]\nadd r0,r0,r2\nstr r0,[r3,#0x0]\nmov r0,#0x1\npop { r4, r5, r6, pc }\n'
p3077
S'70 b5\n09 4a\n7a 44\n12 68\nd4 69\n00 22\n60 c8\n6d 00\nad 19\n65 5d\naa 18\n00 30\n88 42\nf7 d3\n18 68\n80 18\n18 60\n01 20\n70 bd\n'
p3078
S'.text:00030e6c\n.text:00030e6e\n.text:00030e70\n.text:00030e72\n.text:00030e74\n.text:00030e76\n.text:00030e78\n.text:00030e7a\n.text:00030e7c\n.text:00030e7e\n.text:00030e80\n.text:00030e82\n.text:00030e84\n.text:00030e86\n.text:00030e88\n.text:00030e8a\n.text:00030e8c\n.text:00030e8e\n.text:00030e90\n'
p3079
tp3080
sS'has_SSE'
p3081
(S'\n__stdcall has_SSE()\n'
p3082
V\u000avoid has_SSE(void)\u000a\u000a{\u000a  (*(has_SSE2 + DAT_00037dcc))();\u000a  return;\u000a}\u000a\u000a
p3083
S'ldr r12,[0x37dcc]\nadd pc,r12,pc\n'
p3084
S'00 c0 9f e5\n0f f0 8c e0\n'
p3085
S'.text:00037dc4\n.text:00037dc8\n'
p3086
tp3087
sS'ms_convert'
p3088
(S'\n__stdcall ms_convert()\n'
p3089
V\u000avoid ms_convert(void)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __addsf3();\u000a}\u000a\u000a
p3090
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\nldr r2,[0x0002a3f8]\nmul r2,r1\nadd r4,r0,r2\nmov r0,#0x9\nlsl r5,r0,#0x6\nldr r0,[0x0002a3fc]\nstr r0,[sp,#0x8]\nldr r1,[r4,r0]\nstr r1,[sp,#0x4]\nldr r0,[r4,#0x0]\nstr r0,[sp,#0x0]\nbl 0x00037a70\n'
p3091
S'f0 b5\n03 af\n83 b0\n11 4a\n4a 43\n84 18\n09 20\n85 01\n0f 48\n02 90\n21 58\n01 91\n20 68\n00 90\n0d f0 52 fb\n'
p3092
S'.text:0002a3ac\n.text:0002a3ae\n.text:0002a3b0\n.text:0002a3b2\n.text:0002a3b4\n.text:0002a3b6\n.text:0002a3b8\n.text:0002a3ba\n.text:0002a3bc\n.text:0002a3be\n.text:0002a3c0\n.text:0002a3c2\n.text:0002a3c4\n.text:0002a3c6\n.text:0002a3c8\n'
p3093
tp3094
sS'id3tag_set_fieldvalue_ucs2'
p3095
(S'\n__stdcall id3tag_set_fieldvalue_ucs2()\n'
p3096
V\u000avoid id3tag_set_fieldvalue_ucs2(void)\u000a\u000a{\u000a  id3tag_set_fieldvalue_utf16();\u000a  return;\u000a}\u000a\u000a
p3097
S'push { r7, lr }\nadd r7,sp,#0x0\nbl 0x00037d20\npop { r7, pc }\n'
p3098
S'80 b5\n00 af\n19 f0 c8 ff\n80 bd\n'
p3099
S'.text:0001dd88\n.text:0001dd8a\n.text:0001dd8c\n.text:0001dd90\n'
p3100
tp3101
sS'strtol'
p3102
(S'\n__stdcall strtol(char * __nptr, char * * __endptr, int __base)\n'
p3103
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000along strtol(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = (*(code *)(&UNK_00037d10 + DAT_00037d0c))();\u000a  return lVar1;\u000a}\u000a\u000a
p3104
S'ldr r12,[0x37d0c]\nadd pc,r12,pc\n'
p3105
S'00 c0 9f e5\n0f f0 8c e0\n'
p3106
S'.text:00037d04\n.text:00037d08\n'
p3107
tp3108
sS'_Unwind_decode_typeinfo_ptr.isra.0'
p3109
(S'\n__stdcall _Unwind_decode_typeinfo_ptr.isra.0()\n'
p3110
V\u000aint _Unwind_decode_typeinfo_ptr_isra_0(int *piParm1)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = *piParm1;\u000a  if (iVar1 != 0) {\u000a    iVar1 = *(int *)(iVar1 + (int)piParm1);\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p3111
S'ldr r3,[r0,#0x0]\ncmp r3,#0x0\nldrne r0,[r3,r0]\ncpyeq r0,r3\nbx lr\n'
p3112
S'00 30 90 e5\n00 00 53 e3\n00 00 93 17\n03 00 a0 01\n1e ff 2f e1\n'
p3113
S'.text:0003663c\n.text:00036640\n.text:00036644\n.text:00036648\n.text:0003664c\n'
p3114
tp3115
sS'lame_set_ReplayGain_decode'
p3116
(S'\n__stdcall lame_set_ReplayGain_decode(lame_global_flags * gfp, int arg)\n'
p3117
V\u000aint lame_set_ReplayGain_decode(lame_global_flags *gfp,int arg)\u000a\u000a{\u000a  undefined *puVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  lame_global_flags *in_r2;\u000a  int iVar5;\u000a  lame_global_flags *gfp_00;\u000a  uint uVar6;\u000a  undefined *puVar7;\u000a  undefined *in_r3;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000acode_r0x0001e228:\u000a  do {\u000a    *in_r3 = *(undefined *)arg;\u000a    in_r3 = in_r3 + 1;\u000a    arg = (int)((undefined *)arg + 1);\u000a    in_r2 = (lame_global_flags *)((int)&in_r2->attackthre_s + 3);\u000a  } while (in_r2 != (lame_global_flags *)0x0);\u000a  do {\u000a    in_r3 = unaff_r6 + (int)gfp;\u000aLAB_0001e09a:\u000a    do {\u000a      do {\u000a        while( true ) {\u000a          unaff_r5 = (int *)*unaff_r5;\u000a          if (unaff_r5 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar2 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0\u000a                 )) {\u000a                do {\u000a                  in_r3[iVar2 + -1] = (char)uVar8;\u000a                  iVar2 = iVar2 + -1;\u000a                  uVar8 = uVar8 >> 8;\u000a                } while (0 < iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(in_r3,(in_stack_0000002c + in_stack_00000018) - (int)in_r3);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar8 = unaff_r5[1];\u000a          uVar10 = 0xff;\u000a          iVar2 = 4;\u000a          if ((uVar8 != DAT_0001e494) && (uVar3 = in_stack_00000030, uVar8 != DAT_0001e498)) break;\u000a          iVar2 = unaff_r5[4] * 2 + 0x10;\u000a          if (unaff_r5[5] != 1) {\u000a            iVar2 = unaff_r5[4] + 0xf;\u000a          }\u000a          iVar4 = 0;\u000a          if (unaff_r5[8] == 1) {\u000a            iVar4 = unaff_r5[8];\u000a          }\u000a          uVar10 = (unaff_r5[7] << iVar4) + iVar2;\u000a          iVar2 = 4;\u000a          if (10 < uVar10) {\u000a            do {\u000a              in_r3[iVar2 + -1] = (char)uVar8;\u000a              iVar2 = iVar2 + -1;\u000a              uVar8 = uVar8 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar10 = uVar10 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              in_r3[iVar2 + 3] = (char)uVar10;\u000a              iVar2 = iVar2 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar2);\u000a            in_r3[8] = 0;\u000a            in_r3[9] = 0;\u000a            *(bool *)(in_r3 + 10) = unaff_r5[8] == 1;\u000a            in_r3[0xb] = *(undefined *)(unaff_r5 + 2);\u000a            in_r3[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a            in_r3[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a            puVar11 = in_r3 + 0xe;\u000a            if (unaff_r5[5] == 1) {\u000a              gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a              *(undefined *)&gfp_00->class_id = 0;\u000a              *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a              iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a              return iVar2;\u000a            }\u000a            iVar2 = unaff_r5[4];\u000a            if (iVar2 != 0) {\u000a              puVar1 = (undefined *)unaff_r5[3];\u000a              iVar4 = iVar2;\u000a              puVar7 = puVar11;\u000a              do {\u000a                *puVar7 = *puVar1;\u000a                puVar7 = puVar7 + 1;\u000a                puVar1 = puVar1 + 1;\u000a                iVar4 = iVar4 + -1;\u000a              } while (iVar4 != 0);\u000a              puVar11 = puVar11 + iVar2;\u000a            }\u000a            *puVar11 = 0;\u000a            in_r3 = puVar11 + 1;\u000a            if (unaff_r5[8] == 1) {\u000aLAB_0001e338:\u000a              in_r3 = (undefined *)writeUcs2s(in_r3,unaff_r5[6],unaff_r5[7]);\u000a            }\u000a            else {\u000a              gfp = (lame_global_flags *)unaff_r5[7];\u000a              if (gfp != (lame_global_flags *)0x0) {\u000a                arg = unaff_r5[6];\u000a                in_r2 = gfp;\u000a                unaff_r6 = in_r3;\u000a                goto code_r0x0001e228;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        do {\u000a          uVar6 = uVar10 & 0x57000000;\u000a          uVar9 = in_stack_00000030;\u000a          if (uVar6 != (uVar10 & uVar8)) {\u000a            uVar9 = uVar10 & uVar8;\u000a          }\u000a          if (uVar6 == 0) {\u000a            uVar9 = uVar6;\u000a          }\u000a          uVar3 = uVar3 | uVar9;\u000a          iVar2 = iVar2 + -1;\u000a          uVar10 = uVar10 << 8;\u000a        } while (iVar2 != 0);\u000a        if (uVar3 == 0) {\u000a          uVar10 = sizeOfWxxxNode(unaff_r5);\u000a          iVar2 = 4;\u000a          if (10 < uVar10) {\u000a            do {\u000a              in_r3[iVar2 + -1] = (char)uVar8;\u000a              iVar2 = iVar2 + -1;\u000a              uVar8 = uVar8 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar10 = uVar10 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              in_r3[iVar2 + 3] = (char)uVar10;\u000a              iVar2 = iVar2 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar2);\u000a            in_r3[8] = 0;\u000a            in_r3[9] = 0;\u000a            puVar11 = in_r3 + 10;\u000a            if (unaff_r5[4] != 0) {\u000a              *(bool *)(in_r3 + 10) = unaff_r5[5] == 1;\u000a              puVar11 = in_r3 + 0xb;\u000a              if (unaff_r5[5] == 1) {\u000a                puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a                *puVar11 = 0;\u000a                puVar11[1] = 0;\u000a                puVar11 = puVar11 + 2;\u000a              }\u000a              else {\u000a                iVar2 = unaff_r5[4];\u000a                if (iVar2 != 0) {\u000a                  puVar1 = (undefined *)unaff_r5[3];\u000a                  iVar4 = iVar2;\u000a                  puVar7 = puVar11;\u000a                  do {\u000a                    *puVar7 = *puVar1;\u000a                    puVar7 = puVar7 + 1;\u000a                    puVar1 = puVar1 + 1;\u000a                    iVar4 = iVar4 + -1;\u000a                  } while (iVar4 != 0);\u000a                  puVar11 = puVar11 + iVar2;\u000a                }\u000a                *puVar11 = 0;\u000a                puVar11 = puVar11 + 1;\u000a              }\u000a            }\u000a            if (unaff_r5[8] == 1) {\u000a              in_r3 = (undefined *)writeLoBytes(puVar11,unaff_r5[6],unaff_r5[7]);\u000a            }\u000a            else {\u000a              iVar2 = unaff_r5[7];\u000a              in_r3 = puVar11;\u000a              if (iVar2 != 0) {\u000a                puVar1 = (undefined *)unaff_r5[6];\u000a                iVar4 = iVar2;\u000a                puVar7 = puVar11;\u000a                do {\u000a                  *puVar7 = *puVar1;\u000a                  puVar7 = puVar7 + 1;\u000a                  puVar1 = puVar1 + 1;\u000a                  iVar4 = iVar4 + -1;\u000a                } while (iVar4 != 0);\u000a                in_r3 = puVar11 + iVar2;\u000a              }\u000a            }\u000a          }\u000a          goto LAB_0001e09a;\u000a        }\u000a        iVar2 = unaff_r5[7];\u000a        iVar4 = unaff_r5[4];\u000a        if (unaff_r5[8] == 1) {\u000a          iVar5 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a          iVar2 = iVar2 << 1;\u000a        }\u000a        else {\u000a          iVar5 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar5 = 0xb;\u000a          }\u000a        }\u000a        iVar4 = 4;\u000a      } while ((uint)(iVar5 + iVar2) < 0xb);\u000a      do {\u000a        in_r3[iVar4 + -1] = (char)uVar8;\u000a        iVar4 = iVar4 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar4);\u000a      uVar8 = (iVar5 + iVar2) - 10;\u000a      iVar2 = 4;\u000a      do {\u000a        in_r3[iVar2 + 3] = (char)uVar8;\u000a        iVar2 = iVar2 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar2);\u000a      in_r3[8] = 0;\u000a      in_r3[9] = 0;\u000a      *(bool *)(in_r3 + 10) = unaff_r5[8] == 1;\u000a      in_r3 = in_r3 + 0xb;\u000a      iVar2 = unaff_r5[4];\u000a      if (iVar2 != 0) {\u000a        if (unaff_r5[5] == 1) {\u000a          puVar11 = (undefined *)writeUcs2s(in_r3,unaff_r5[3]);\u000a          *puVar11 = 0;\u000a          puVar11[1] = 0;\u000a          in_r3 = puVar11 + 2;\u000a        }\u000a        else {\u000a          puVar7 = (undefined *)unaff_r5[3];\u000a          iVar4 = iVar2;\u000a          puVar11 = in_r3;\u000a          do {\u000a            *puVar11 = *puVar7;\u000a            puVar11 = puVar11 + 1;\u000a            puVar7 = puVar7 + 1;\u000a            iVar4 = iVar4 + -1;\u000a          } while (iVar4 != 0);\u000a          in_r3[iVar2] = 0;\u000a          in_r3 = in_r3 + iVar2 + 1;\u000a        }\u000a      }\u000a      if (unaff_r5[8] == 1) goto LAB_0001e338;\u000a      gfp = (lame_global_flags *)unaff_r5[7];\u000a    } while (gfp == (lame_global_flags *)0x0);\u000a    puVar7 = (undefined *)unaff_r5[6];\u000a    gfp_00 = gfp;\u000a    puVar11 = in_r3;\u000a    do {\u000a      *puVar11 = *puVar7;\u000a      puVar11 = puVar11 + 1;\u000a      puVar7 = puVar7 + 1;\u000a      gfp_00 = (lame_global_flags *)((int)&gfp_00->attackthre_s + 3);\u000a      unaff_r6 = in_r3;\u000a    } while (gfp_00 != (lame_global_flags *)0x0);\u000a  } while( true );\u000a}\u000a\u000a
p3118
S'ldrb r4,[r1,#0x0]\nstrb r4,[r3,#0x0]\nadd r3,#0x1\nadd r1,#0x1\nsub r2,#0x1\ncmp r2,#0x0\nbne 0x0001e228\n'
p3119
S'0c 78\n1c 70\n01 33\n01 31\n01 3a\n00 2a\nf8 d1\n'
p3120
S'.text:0001e228\n.text:0001e22a\n.text:0001e22c\n.text:0001e22e\n.text:0001e230\n.text:0001e232\n.text:0001e234\n'
p3121
tp3122
sS'lame_bitrate_block_type_hist'
p3123
(S'\n__stdcall lame_bitrate_block_type_hist()\n'
p3124
V\u000avoid lame_bitrate_block_type_hist(int *piParm1,undefined4 *puParm2)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  undefined4 *puVar4;\u000a  int *piVar5;\u000a  undefined4 *puVar6;\u000a  \u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_00021be4)) &&\u000a      (piVar5 = (int *)piParm1[0x48], piVar5 != (int *)0x0)) && (*piVar5 == DAT_00021be4)) {\u000a    if (piVar5[0x26] == 0) {\u000a      puVar1 = (undefined4 *)((int)piVar5 + DAT_00021bec);\u000a      iVar3 = 0;\u000a      do {\u000a        iVar3 = iVar3 + 1;\u000a        iVar2 = 6;\u000a        puVar4 = puVar1;\u000a        puVar6 = puParm2;\u000a        do {\u000a          *puVar6 = *puVar4;\u000a          puVar4 = puVar4 + 1;\u000a          iVar2 = iVar2 + -1;\u000a          puVar6 = puVar6 + 1;\u000a        } while (iVar2 != 0);\u000a        puVar1 = puVar1 + 6;\u000a        puParm2 = puParm2 + 6;\u000a      } while (iVar3 != 0xe);\u000a    }\u000a    else {\u000a      __aeabi_memclr4(puParm2,0x150);\u000a      iVar3 = DAT_00021be8;\u000a      iVar2 = 0;\u000a      do {\u000a        puParm2[iVar2 * 0x3fffffff] = *(undefined4 *)((int)piVar5 + iVar2 * -4 + iVar3);\u000a        iVar2 = iVar2 + -1;\u000a      } while (iVar2 != -6);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p3125
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r1 }\npop { r4 }\ncmp r0,#0x0\nbeq 0x00021be0\nldr r1,[r0,#0x0]\nldr r2,[0x00021be4]\ncmp r1,r2\nbne 0x00021be0\nmov r1,#0x9\nlsl r1,r1,#0x5\nldr r5,[r0,r1]\ncmp r5,#0x0\nbeq 0x00021be0\nldr r0,[r5,#0x0]\nldr r1,[0x00021be4]\ncmp r0,r1\nbne 0x00021be0\nmov r0,#0x98\nldr r0,[r5,r0]\ncmp r0,#0x0\nbeq 0x00021bb8\nmov r0,#0x15\nlsl r1,r0,#0x4\npush { r4 }\npop { r0 }\nbl 0x00037a40\nldr r0,[0x00021be8]\nadd r0,r5,r0\nmov r1,#0x0\nlsl r2,r1,#0x2\nsub r3,r4,r2\nsub r2,r0,r2\nldr r2,[r2,#0x0]\nstr r2,[r3,#0x0]\nsub r1,#0x1\nmov r2,#0x5\nmvn r2,r2\ncmp r1,r2\nbne 0x00021ba2\nb 0x00021be0\nldr r0,[0x00021bec]\nadd r0,r5,r0\nmov r1,#0x0\nadd r1,#0x1\nmov r2,#0x6\npush { r0 }\npop { r3 }\npush { r4 }\npop { r5 }\nldr r6,[r3,#0x0]\nstr r6,[r5,#0x0]\nadd r3,#0x4\nsub r2,#0x1\nadd r5,#0x4\ncmp r2,#0x0\nbne 0x00021bca\nadd r0,#0x18\nadd r4,#0x18\ncmp r1,#0xe\nbne 0x00021bbe\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p3126
S'f0 b5\n03 af\n81 b0\n02 b4\n10 bc\n00 28\n38 d0\n01 68\n1c 4a\n91 42\n34 d1\n09 21\n49 01\n45 58\n00 2d\n2f d0\n28 68\n18 49\n88 42\n2b d1\n98 20\n28 58\n00 28\n13 d0\n15 20\n01 01\n10 b4\n01 bc\n15 f0 52 ff\n12 48\n28 18\n00 21\n8a 00\na3 1a\n82 1a\n12 68\n1a 60\n01 39\n05 22\nd2 43\n91 42\nf5 d1\n13 e0\n0c 48\n28 18\n00 21\n01 31\n06 22\n01 b4\n08 bc\n10 b4\n20 bc\n1e 68\n2e 60\n04 33\n01 3a\n04 35\n00 2a\nf8 d1\n18 30\n18 34\n0e 29\nee d1\n01 b0\nf0 bd\n'
p3127
S'.text:00021b60\n.text:00021b62\n.text:00021b64\n.text:00021b66\n.text:00021b68\n.text:00021b6a\n.text:00021b6c\n.text:00021b6e\n.text:00021b70\n.text:00021b72\n.text:00021b74\n.text:00021b76\n.text:00021b78\n.text:00021b7a\n.text:00021b7c\n.text:00021b7e\n.text:00021b80\n.text:00021b82\n.text:00021b84\n.text:00021b86\n.text:00021b88\n.text:00021b8a\n.text:00021b8c\n.text:00021b8e\n.text:00021b90\n.text:00021b92\n.text:00021b94\n.text:00021b96\n.text:00021b98\n.text:00021b9c\n.text:00021b9e\n.text:00021ba0\n.text:00021ba2\n.text:00021ba4\n.text:00021ba6\n.text:00021ba8\n.text:00021baa\n.text:00021bac\n.text:00021bae\n.text:00021bb0\n.text:00021bb2\n.text:00021bb4\n.text:00021bb6\n.text:00021bb8\n.text:00021bba\n.text:00021bbc\n.text:00021bbe\n.text:00021bc0\n.text:00021bc2\n.text:00021bc4\n.text:00021bc6\n.text:00021bc8\n.text:00021bca\n.text:00021bcc\n.text:00021bce\n.text:00021bd0\n.text:00021bd2\n.text:00021bd4\n.text:00021bd6\n.text:00021bd8\n.text:00021bda\n.text:00021bdc\n.text:00021bde\n.text:00021be0\n.text:00021be2\n'
p3128
tp3129
sS'lame_set_ATHcurve'
p3130
(S'\n__stdcall lame_set_ATHcurve()\n'
p3131
V\u000avoid lame_set_ATHcurve(void)\u000a\u000a{\u000a  (*(code *)(&UNK_000381a0 + DAT_0003819c))();\u000a  return;\u000a}\u000a\u000a
p3132
S'ldr r12,[0x3819c]\nadd pc,r12,pc\n'
p3133
S'00 c0 9f e5\n0f f0 8c e0\n'
p3134
S'.text:00038194\n.text:00038198\n'
p3135
tp3136
sS'lame_close'
p3137
(S'\n__stdcall lame_close()\n'
p3138
V\u000avoid lame_close(void)\u000a\u000a{\u000a  (*(lame_encode_buffer + DAT_000378ec))();\u000a  return;\u000a}\u000a\u000a
p3139
S'ldr r12,[0x378ec]\nadd pc,r12,pc\n'
p3140
S'00 c0 9f e5\n0f f0 8c e0\n'
p3141
S'.text:000378e4\n.text:000378e8\n'
p3142
tp3143
sS'lame_init_params'
p3144
(S'\n__stdcall lame_init_params()\n'
p3145
V\u000avoid lame_init_params(void)\u000a\u000a{\u000a  (*(__divsi3 + DAT_0003797c))();\u000a  return;\u000a}\u000a\u000a
p3146
S'ldr r12,[0x3797c]\nadd pc,r12,pc\n'
p3147
S'00 c0 9f e5\n0f f0 8c e0\n'
p3148
S'.text:00037974\n.text:00037978\n'
p3149
tp3150
sS'get_lame_version'
p3151
(S'\n__stdcall get_lame_version()\n'
p3152
V\u000avoid get_lame_version(void)\u000a\u000a{\u000a  (*(get_lame_url + DAT_00037c6c))();\u000a  return;\u000a}\u000a\u000a
p3153
S'ldr r12,[0x37c6c]\nadd pc,r12,pc\n'
p3154
S'00 c0 9f e5\n0f f0 8c e0\n'
p3155
S'.text:00037c64\n.text:00037c68\n'
p3156
tp3157
sS'lame_set_lowpasswidth'
p3158
(S'\n__stdcall lame_set_lowpasswidth(lame_global_flags * gfp, int lowpasswidth)\n'
p3159
V\u000aint lame_set_lowpasswidth(lame_global_flags *gfp,int lowpasswidth)\u000a\u000a{\u000a  int iVar1;\u000a  undefined2 *puVar2;\u000a  int in_r2;\u000a  int iVar3;\u000a  undefined in_r3;\u000a  undefined uVar4;\u000a  undefined uVar5;\u000a  undefined unaff_r4;\u000a  undefined *puVar6;\u000a  undefined uVar7;\u000a  int unaff_r7;\u000a  char in_ZR;\u000a  \u000a  if (in_ZR == 0) {\u000a    in_r3 = unaff_r4;\u000a  }\u000a  *(undefined *)((int)&gfp->class_id + 1) = in_r3;\u000a  if (in_r2 != 1) {\u000a    iVar3 = 1 - in_r2;\u000a    puVar6 = (undefined *)((int)&gfp->class_id + 3);\u000a    puVar2 = (undefined2 *)(lowpasswidth + 2);\u000a    do {\u000a      iVar1 = DAT_0001ea54;\u000a      uVar7 = (undefined)*puVar2;\u000a      uVar4 = (undefined)((ushort)*puVar2 >> 8);\u000a      uVar5 = uVar4;\u000a      if (unaff_r7 != DAT_0001ea54) {\u000a        uVar5 = uVar7;\u000a      }\u000a      puVar6[-1] = uVar5;\u000a      if (unaff_r7 != iVar1) {\u000a        uVar7 = uVar4;\u000a      }\u000a      *puVar6 = uVar7;\u000a      puVar6 = puVar6 + 2;\u000a      iVar3 = iVar3 + 1;\u000a      puVar2 = puVar2 + 1;\u000a    } while (iVar3 != 0);\u000a  }\u000a  return (int)((int)&gfp->class_id + in_r2 * 2);\u000a}\u000a\u000a
p3160
S'beq 0x0001ea08\npush { r4 }\npop { r3 }\nstrb r3,[r0,#0x1]\nstr r0,[sp,#0x4]\nlsl r0,r2,#0x1\nstr r0,[sp,#0x0]\ncmp r2,#0x1\nbeq 0x0001ea46\nmov r3,#0x1\nsub r2,r3,r2\nldr r0,[sp,#0x4]\nadd r5,r0,#0x3\nadd r1,#0x2\nldrh r6,[r1,#0x0]\nlsr r3,r6,#0x8\nstr r3,[sp,#0x8]\nldr r4,[0x0001ea54]\ncmp r7,r4\n'
p3161
S'01 d0\n10 b4\n08 bc\n43 70\n01 90\n50 00\n00 90\n01 2a\n18 d0\n01 23\n9a 1a\n01 98\nc5 1c\n02 31\n0e 88\n33 0a\n02 93\n0b 4c\na7 42\n'
p3162
S'.text:0001ea02\n.text:0001ea04\n.text:0001ea06\n.text:0001ea08\n.text:0001ea0a\n.text:0001ea0c\n.text:0001ea0e\n.text:0001ea10\n.text:0001ea12\n.text:0001ea14\n.text:0001ea16\n.text:0001ea18\n.text:0001ea1a\n.text:0001ea1c\n.text:0001ea1e\n.text:0001ea20\n.text:0001ea22\n.text:0001ea24\n.text:0001ea26\n'
p3163
tp3164
sS'lame_set_quant_comp_short'
p3165
(S'\n__stdcall lame_set_quant_comp_short()\n'
p3166
V\u000avoid lame_set_quant_comp_short(void)\u000a\u000a{\u000a  (*(lame_get_msfix + DAT_00037f1c))();\u000a  return;\u000a}\u000a\u000a
p3167
S'ldr r12,[0x37f1c]\nadd pc,r12,pc\n'
p3168
S'00 c0 9f e5\n0f f0 8c e0\n'
p3169
S'.text:00037f14\n.text:00037f18\n'
p3170
tp3171
sS'isSameLang'
p3172
(S'\n__stdcall isSameLang()\n'
p3173
V\u000aundefined4 isSameLang(int iParm1)\u000a\u000a{\u000a  ushort uVar1;\u000a  ushort uVar2;\u000a  undefined4 uVar3;\u000a  int iVar4;\u000a  ushort uVar5;\u000a  byte abStack28 [4];\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_0001e8ec + 0x1e87c);\u000a  setLang(abStack28);\u000a  iVar4 = 0;\u000a  do {\u000a    uVar1 = *(ushort *)\u000a             (**(int **)(lame_get_VBR_quality + DAT_0001e8f0) + 2 +\u000a             (uint)*(byte *)(iParm1 + iVar4) * 2);\u000a    uVar2 = 0x20;\u000a    if (0x1f < (uVar1 & 0xe0)) {\u000a      uVar2 = uVar1;\u000a    }\u000a    uVar1 = *(ushort *)\u000a             (**(int **)(lame_get_VBR_quality + DAT_0001e8f0) + 2 + (uint)abStack28[iVar4] * 2);\u000a    uVar5 = 0x20;\u000a    if (0x1f < (uVar1 & 0xe0)) {\u000a      uVar5 = uVar1;\u000a    }\u000a    iVar4 = iVar4 + 1;\u000a    uVar3 = 0;\u000a  } while ((((uVar5 ^ uVar2) & 0xff) == 0) && (uVar3 = 1, iVar4 < 3));\u000a  if (**(int **)(DAT_0001e8f4 + 0x1e8d8) == local_18) {\u000a    return uVar3;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3174
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xc\npush { r0 }\npop { r4 }\nldr r0,[0x0001e8ec]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x8]\nadd r0,sp,#0x4\nbl 0x0001e8f8\nldr r0,[0x0001e8f0]\nadd r0,pc\nldr r0,[r0,#0x0]\n'
p3175
S'f0 b5\n03 af\n83 b0\n01 b4\n10 bc\n1d 48\n78 44\n00 68\n00 68\n02 90\n01 a8\n00 f0 39 f8\n1a 48\n78 44\n00 68\n'
p3176
S'.text:0001e86c\n.text:0001e86e\n.text:0001e870\n.text:0001e872\n.text:0001e874\n.text:0001e876\n.text:0001e878\n.text:0001e87a\n.text:0001e87c\n.text:0001e87e\n.text:0001e880\n.text:0001e882\n.text:0001e886\n.text:0001e888\n.text:0001e88a\n'
p3177
tp3178
sS'lame_set_maskingadjust_short'
p3179
(S'\n__stdcall lame_set_maskingadjust_short()\n'
p3180
V\u000avoid lame_set_maskingadjust_short(void)\u000a\u000a{\u000a  (*(lame_set_ATHlower + DAT_0003817c))();\u000a  return;\u000a}\u000a\u000a
p3181
S'ldr r12,[0x3817c]\nadd pc,r12,pc\n'
p3182
S'00 c0 9f e5\n0f f0 8c e0\n'
p3183
S'.text:00038174\n.text:00038178\n'
p3184
tp3185
sS'id3tag_set_pad'
p3186
(S'\n__stdcall id3tag_set_pad()\n'
p3187
V\u000avoid id3tag_set_pad(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = *(int *)(iParm1 + 0x120);\u000a  *(uint *)(iVar1 + DAT_0001ca60) = *(uint *)(iVar1 + DAT_0001ca60) & 0xffffffd9 | 0x22;\u000a  *(undefined4 *)(iVar1 + DAT_0001ca64) = uParm2;\u000a  return;\u000a}\u000a\u000a
p3188
S'push { r4, lr }\nmov r2,#0x9\nlsl r2,r2,#0x5\nldr r0,[r0,r2]\nldr r2,[0x0001ca60]\nldr r3,[r0,r2]\nmov r4,#0x26\nmvn r4,r4\nand r4,r3\nmov r3,#0x22\norr r3,r4\nstr r3,[r0,r2]\nldr r2,[0x0001ca64]\nstr r1,[r0,r2]\npop { r4, pc }\n'
p3189
S'10 b5\n09 22\n52 01\n80 58\n05 4a\n83 58\n26 24\ne4 43\n1c 40\n22 23\n23 43\n83 50\n02 4a\n81 50\n10 bd\n'
p3190
S'.text:0001ca40\n.text:0001ca42\n.text:0001ca44\n.text:0001ca46\n.text:0001ca48\n.text:0001ca4a\n.text:0001ca4c\n.text:0001ca4e\n.text:0001ca50\n.text:0001ca52\n.text:0001ca54\n.text:0001ca56\n.text:0001ca58\n.text:0001ca5a\n.text:0001ca5c\n'
p3191
tp3192
sS'lame_get_RadioGain'
p3193
(S'\n__stdcall lame_get_RadioGain()\n'
p3194
V\u000aundefined4 lame_get_RadioGain(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f304);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3195
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f2fc\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f2fc\nldr r0,[0x0002f304]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3196
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 a8 f8\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 a6 f8\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p3197
S'.text:0002f2d4\n.text:0002f2d6\n.text:0002f2d8\n.text:0002f2da\n.text:0002f2dc\n.text:0002f2e0\n.text:0002f2e2\n.text:0002f2e4\n.text:0002f2e6\n.text:0002f2e8\n.text:0002f2ea\n.text:0002f2ec\n.text:0002f2ee\n.text:0002f2f0\n.text:0002f2f4\n.text:0002f2f6\n.text:0002f2f8\n.text:0002f2fa\n.text:0002f2fc\n.text:0002f2fe\n.text:0002f300\n'
p3198
tp3199
sS'__aeabi_ul2d'
p3200
(S'\n__stdcall __aeabi_ul2d()\n'
p3201
V\u000alonglong __aeabi_ul2d(uint uParm1,uint uParm2)\u000a\u000a{\u000a  byte bVar1;\u000a  byte bVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  int iVar9;\u000a  bool bVar10;\u000a  bool bVar11;\u000a  bool bVar12;\u000a  \u000a  if ((uParm1 | uParm2) == 0) {\u000a    return CONCAT44(uParm1,uParm2);\u000a  }\u000a  iVar9 = 0x432;\u000a  uVar8 = uParm2 >> 0x16;\u000a  if (uVar8 != 0) {\u000a    iVar9 = 3;\u000a    if (uParm2 >> 0x19 != 0) {\u000a      iVar9 = 6;\u000a    }\u000a    if (uParm2 >> 0x1c != 0) {\u000a      iVar9 = iVar9 + 3;\u000a    }\u000a    iVar9 = iVar9 + (uParm2 >> 0x1f);\u000a    uVar8 = uParm1 << (0x20U - iVar9 & 0xff);\u000a    uParm1 = uParm1 >> iVar9 | uParm2 << (0x20U - iVar9 & 0xff);\u000a    uParm2 = uParm2 >> iVar9;\u000a    iVar9 = iVar9 + 0x432;\u000a  }\u000a  if (0xfffff < uParm2) {\u000a    if (0x1fffff < uParm2) {\u000a      bVar1 = (byte)uParm2;\u000a      uParm2 = uParm2 >> 1;\u000a      bVar2 = (byte)uParm1;\u000a      uParm1 = (uint)(bVar1 & 1) << 0x1f | uParm1 >> 1;\u000a      uVar8 = (uint)(bVar2 & 1) << 0x1f | uVar8 >> 1;\u000a      iVar9 = iVar9 + 1;\u000a      if (0xffbfffff < (uint)(iVar9 * 0x200000)) {\u000a        return 0x7ff00000;\u000a      }\u000a    }\u000aLAB_00035358:\u000a    bVar11 = 0x7fffffff < uVar8;\u000a    if (uVar8 == 0x80000000) {\u000a      bVar11 = (bool)((byte)uParm1 & 1);\u000a    }\u000a    return CONCAT44(uParm1 + (uint)bVar11,\u000a                    uParm2 + iVar9 * 0x100000 + (uint)CARRY4(uParm1,(uint)bVar11));\u000a  }\u000a  uVar3 = uVar8 >> 0x1f;\u000a  uVar8 = uVar8 << 1;\u000a  uVar3 = uParm1 + uVar3;\u000a  bVar11 = CARRY4(uParm1,uVar3);\u000a  uParm1 = uParm1 + uVar3;\u000a  uParm2 = uParm2 * 2 + (uint)bVar11;\u000a  iVar9 = iVar9 + -1;\u000a  if ((uParm2 & 0x100000) != 0) goto LAB_00035358;\u000a  uVar3 = uParm1;\u000a  uVar4 = uParm2;\u000a  if (uParm2 == 0) {\u000a    uVar3 = 0;\u000a    uVar4 = uParm1;\u000a  }\u000a  iVar6 = count_leading_zeroes(uVar4);\u000a  if (uParm2 == 0) {\u000a    iVar6 = iVar6 + 0x20;\u000a  }\u000a  uVar7 = iVar6 - 0xb;\u000a  bVar12 = SBORROW4(uVar7,0x20);\u000a  uVar5 = iVar6 - 0x2b;\u000a  bVar11 = (int)uVar5 < 0;\u000a  bVar10 = uVar5 == 0;\u000a  if ((int)uVar7 < 0x20) {\u000a    bVar12 = SCARRY4(uVar5,0xc);\u000a    iVar6 = iVar6 + -0x1f;\u000a    bVar11 = iVar6 < 0;\u000a    bVar10 = iVar6 == 0;\u000a    uVar5 = uVar7;\u000a    if (!bVar10 && bVar11 == bVar12) {\u000a      uVar3 = uVar4 << (uVar7 & 0xff);\u000a      uVar4 = uVar4 >> (0xcU - iVar6 & 0xff);\u000a      goto LAB_000353d8;\u000a    }\u000a  }\u000a  if (bVar10 || bVar11 != bVar12) {\u000a    uVar8 = 0x20 - uVar5;\u000a  }\u000a  uVar4 = uVar4 << (uVar5 & 0xff);\u000a  if (bVar10 || bVar11 != bVar12) {\u000a    uVar4 = uVar4 | uVar3 >> (uVar8 & 0xff);\u000a  }\u000a  if (bVar10 || bVar11 != bVar12) {\u000a    uVar3 = uVar3 << (uVar5 & 0xff);\u000a  }\u000aLAB_000353d8:\u000a  if ((int)uVar7 <= iVar9) {\u000a    return CONCAT44(uVar3,uVar4 + (iVar9 - uVar7) * 0x100000);\u000a  }\u000a  uVar8 = ~(iVar9 - uVar7);\u000a  if (0x1e < (int)uVar8) {\u000a    return (ulonglong)(uVar4 >> (uVar8 - 0x1f & 0xff)) << 0x20;\u000a  }\u000a  iVar9 = uVar8 - 0x13;\u000a  if (iVar9 == 0 || iVar9 < 0 != SCARRY4(uVar8 - 0x1f,0xc)) {\u000a    uVar8 = uVar8 + 1;\u000a    return CONCAT44(uVar3 >> (uVar8 & 0xff) | uVar4 << (0x20 - uVar8 & 0xff),uVar4 >> (uVar8 & 0xff)\u000a                   );\u000a  }\u000a  return (ulonglong)(uVar3 >> (0x20 - (0xcU - iVar9) & 0xff) | uVar4 << (0xcU - iVar9 & 0xff)) <<\u000a         0x20;\u000a}\u000a\u000a
p3202
S'orrs r2,r0,r1\nbxeq lr\nstmdb sp!,{ r4 r5 lr }\nmov r5,#0x0\nb 0x000355a8\n'
p3203
S'01 20 90 e1\n1e ff 2f 01\n30 40 2d e9\n00 50 a0 e3\n06 00 00 ea\n'
p3204
S'.text:00035578\n.text:0003557c\n.text:00035580\n.text:00035584\n.text:00035588\n'
p3205
tp3206
sS'__aeabi_ul2f'
p3207
(S'\n__stdcall __aeabi_ul2f()\n'
p3208
V\u000auint __aeabi_ul2f(uint uParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  \u000a  if ((uParm1 | uParm2) == 0) {\u000a    return uParm1;\u000a  }\u000a  uVar2 = uParm1;\u000a  uVar3 = uParm2;\u000a  if (uParm2 == 0) {\u000a    uVar2 = 0;\u000a    uVar3 = uParm1;\u000a  }\u000a  iVar6 = 0x5b000000;\u000a  if (uParm2 == 0) {\u000a    iVar6 = 0x4b000000;\u000a  }\u000a  iVar4 = count_leading_zeroes(uVar3);\u000a  uVar5 = iVar4 - 8;\u000a  iVar6 = iVar6 + -0x800000 + uVar5 * -0x800000;\u000a  if (iVar4 < 8) {\u000a    uVar5 = uVar3 << (iVar4 + 0x18U & 0xff);\u000a    uVar3 = iVar6 + (uVar3 >> (0x20 - (iVar4 + 0x18U) & 0xff)) + (uVar5 >> 0x1f);\u000a    if ((uVar2 | uVar5 << 1) == 0) {\u000a      uVar3 = uVar3 & ~(uVar5 >> 0x1f);\u000a    }\u000a    return uVar3;\u000a  }\u000a  uVar1 = uVar2 << (uVar5 & 0xff);\u000a  uVar3 = iVar6 + (uVar3 << (uVar5 & 0xff)) +\u000a          (uVar2 >> (0x20 - uVar5 & 0xff)) + (uint)(0x7fffffff < uVar1);\u000a  if (uVar1 == 0x80000000) {\u000a    uVar3 = uVar3 & 0xfffffffe;\u000a  }\u000a  return uVar3;\u000a}\u000a\u000a
p3209
S'orrs r2,r0,r1\nbxeq lr\nmov r3,#0x0\nb 0x00035ec4\n'
p3210
S'01 20 90 e1\n1e ff 2f 01\n00 30 a0 e3\n05 00 00 ea\n'
p3211
S'.text:00035e9c\n.text:00035ea0\n.text:00035ea4\n.text:00035ea8\n'
p3212
tp3213
sS'compute_bark_values'
p3214
(S'\n__stdcall compute_bark_values()\n'
p3215
V\u000avoid compute_bark_values(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  \u000a  uVar1 = __floatsisf(uParm3);\u000a                    /* WARNING: Subroutine does not return */\u000a  __divsf3(uParm2,uVar1);\u000a}\u000a\u000a
p3216
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x2c\nstr r3,[sp,#0x28]\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nldr r0,[0x00028464]\nldr r6,[r5,r0]\npush { r2 }\npop { r0 }\nbl 0x00037b30\npush { r0 }\npop { r1 }\npush { r4 }\npop { r0 }\nbl 0x00037a90\n'
p3217
S'f0 b5\n03 af\n8b b0\n0a 93\n02 b4\n10 bc\n01 b4\n20 bc\n43 48\n2e 58\n04 b4\n01 bc\n0f f0 e8 fb\n01 b4\n02 bc\n10 b4\n01 bc\n0f f0 92 fb\n'
p3218
S'.text:00028344\n.text:00028346\n.text:00028348\n.text:0002834a\n.text:0002834c\n.text:0002834e\n.text:00028350\n.text:00028352\n.text:00028354\n.text:00028356\n.text:00028358\n.text:0002835a\n.text:0002835c\n.text:00028360\n.text:00028362\n.text:00028364\n.text:00028366\n.text:00028368\n'
p3219
tp3220
sS'lame_get_scale_left'
p3221
(S'\n__stdcall lame_get_scale_left(lame_global_flags * gfp)\n'
p3222
V\u000afloat lame_get_scale_left(lame_global_flags *gfp)\u000a\u000a{\u000a  undefined4 in_r1;\u000a  undefined4 extraout_r1;\u000a  undefined4 unaff_r5;\u000a  int in_stack_0000001c;\u000a  undefined4 uStack00000028;\u000a  \u000a  __muldf3(gfp,in_r1,unaff_r5,DAT_0001e1b0);\u000a  uStack00000028 = extraout_r1;\u000a                    /* WARNING: Subroutine does not return */\u000a  __floatsidf(*(undefined4 *)(in_stack_0000001c + 0x3c));\u000a}\u000a\u000a
p3223
S'ldr r3,[0x0001e1b0]\npush { r5 }\npop { r2 }\nbl 0x00037ad0\npush { r0 }\npop { r4 }\nstr r1,[sp,#0x28]\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0x3c]\nbl 0x00037b90\n'
p3224
S'c5 4b\n20 b4\n04 bc\n19 f0 17 fe\n01 b4\n10 bc\n0a 91\n07 98\nc0 6b\n19 f0 70 fe\n'
p3225
S'.text:0001de98\n.text:0001de9a\n.text:0001de9c\n.text:0001de9e\n.text:0001dea2\n.text:0001dea4\n.text:0001dea6\n.text:0001dea8\n.text:0001deaa\n.text:0001deac\n'
p3226
tp3227
sS'lame_set_short_threshold_lrm'
p3228
(S'\n__stdcall lame_set_short_threshold_lrm()\n'
p3229
V\u000aundefined4 lame_set_short_threshold_lrm(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0x108) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3230
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002f04a\nmov r0,#0x21\nlsl r0,r0,#0x3\nstr r4,[r5,r0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3231
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 fe f9\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n04 d0\n21 20\nc0 00\n2c 50\n04 b4\n01 bc\nb0 bd\n'
p3232
S'.text:0002f024\n.text:0002f026\n.text:0002f028\n.text:0002f02a\n.text:0002f02c\n.text:0002f02e\n.text:0002f030\n.text:0002f034\n.text:0002f036\n.text:0002f038\n.text:0002f03a\n.text:0002f03c\n.text:0002f03e\n.text:0002f040\n.text:0002f042\n.text:0002f044\n.text:0002f046\n.text:0002f048\n.text:0002f04a\n'
p3233
tp3234
sS'__mulsf3'
p3235
(S'\n__stdcall __mulsf3()\n'
p3236
V\u000avoid __mulsf3(void)\u000a\u000a{\u000a  (*(__aeabi_fcmpge + DAT_00037aac))();\u000a  return;\u000a}\u000a\u000a
p3237
S'ldr r12,[0x37aac]\nadd pc,r12,pc\n'
p3238
S'00 c0 9f e5\n0f f0 8c e0\n'
p3239
S'.text:00037aa4\n.text:00037aa8\n'
p3240
tp3241
sS'lame_get_nogap_currentindex'
p3242
(S'\n__stdcall lame_get_nogap_currentindex(lame_global_flags * gfp)\n'
p3243
V\u000aint lame_get_nogap_currentindex(lame_global_flags *gfp)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  uint uVar1;\u000a  undefined in_r1;\u000a  undefined *puVar2;\u000a  uint uVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int in_r2;\u000a  int iVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  uint unaff_r4;\u000a  uint uVar9;\u000a  undefined *puVar10;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  while( true ) {\u000a    in_r2 = in_r2 + -1;\u000a    unaff_r4 = unaff_r4 >> 8;\u000a    if (in_r2 < 1) break;\u000aLAB_0001e2be:\u000a    in_r1 = 0;\u000a    unaff_r6[in_r2 + -1] = (char)unaff_r4;\u000a  }\u000a  uVar1 = (int)&gfp->tune_value_a + 2;\u000a  iVar6 = 4;\u000a  do {\u000a    unaff_r6[iVar6 + 3] = (char)uVar1;\u000a    iVar6 = iVar6 + -1;\u000a    uVar1 = uVar1 >> 8;\u000a  } while (0 < iVar6);\u000a  unaff_r6[8] = in_r1;\u000a  unaff_r6[9] = in_r1;\u000a  if (in_stack_00000028[8] == 1) {\u000a    in_r1 = 1;\u000a  }\u000a  unaff_r6[10] = in_r1;\u000a  unaff_r6 = unaff_r6 + 0xb;\u000a  iVar6 = in_stack_00000028[4];\u000a  if (iVar6 != 0) {\u000a    if (in_stack_00000028[5] == 1) {\u000a      puVar10 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[3]);\u000a      *puVar10 = 0;\u000a      puVar10[1] = 0;\u000a      unaff_r6 = puVar10 + 2;\u000a    }\u000a    else {\u000a      puVar8 = (undefined *)in_stack_00000028[3];\u000a      iVar4 = iVar6;\u000a      puVar10 = unaff_r6;\u000a      do {\u000a        *puVar10 = *puVar8;\u000a        puVar10 = puVar10 + 1;\u000a        puVar8 = puVar8 + 1;\u000a        iVar4 = iVar4 + -1;\u000a      } while (iVar4 != 0);\u000a      unaff_r6[iVar6] = 0;\u000a      unaff_r6 = unaff_r6 + iVar6 + 1;\u000a    }\u000a  }\u000a  if (in_stack_00000028[8] != 1) {\u000a    iVar6 = in_stack_00000028[7];\u000a    if (iVar6 == 0) goto LAB_0001e09a;\u000a    puVar8 = (undefined *)in_stack_00000028[6];\u000a    iVar4 = iVar6;\u000a    puVar10 = unaff_r6;\u000a    do {\u000a      *puVar10 = *puVar8;\u000a      puVar10 = puVar10 + 1;\u000a      puVar8 = puVar8 + 1;\u000a      iVar4 = iVar4 + -1;\u000a      if (iVar4 == 0) goto LAB_0001e36a;\u000a    } while( true );\u000a  }\u000a  do {\u000a    unaff_r6 = (undefined *)writeUcs2s(unaff_r6,in_stack_00000028[6],in_stack_00000028[7]);\u000aLAB_0001e09a:\u000a    while( true ) {\u000a      do {\u000a        while( true ) {\u000a          in_stack_00000028 = (int *)*in_stack_00000028;\u000a          if (in_stack_00000028 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar6 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar1 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0\u000a                 )) {\u000a                do {\u000a                  unaff_r6[iVar6 + -1] = (char)uVar1;\u000a                  iVar6 = iVar6 + -1;\u000a                  uVar1 = uVar1 >> 8;\u000a                } while (0 < iVar6);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(unaff_r6,(in_stack_0000002c + in_stack_00000018) - (int)unaff_r6);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          unaff_r4 = in_stack_00000028[1];\u000a          uVar1 = 0xff;\u000a          iVar6 = 4;\u000a          if ((unaff_r4 == DAT_0001e494) || (uVar3 = in_stack_00000030, unaff_r4 == DAT_0001e498))\u000a          break;\u000a          do {\u000a            uVar7 = uVar1 & 0x57000000;\u000a            uVar9 = in_stack_00000030;\u000a            if (uVar7 != (uVar1 & unaff_r4)) {\u000a              uVar9 = uVar1 & unaff_r4;\u000a            }\u000a            if (uVar7 == 0) {\u000a              uVar9 = uVar7;\u000a            }\u000a            uVar3 = uVar3 | uVar9;\u000a            iVar6 = iVar6 + -1;\u000a            uVar1 = uVar1 << 8;\u000a          } while (iVar6 != 0);\u000a          if (uVar3 == 0) {\u000a            uVar1 = sizeOfWxxxNode(in_stack_00000028);\u000a            iVar6 = 4;\u000a            if (10 < uVar1) {\u000a              do {\u000a                unaff_r6[iVar6 + -1] = (char)unaff_r4;\u000a                iVar6 = iVar6 + -1;\u000a                unaff_r4 = unaff_r4 >> 8;\u000a              } while (0 < iVar6);\u000a              uVar1 = uVar1 - 10;\u000a              iVar6 = 4;\u000a              do {\u000a                unaff_r6[iVar6 + 3] = (char)uVar1;\u000a                iVar6 = iVar6 + -1;\u000a                uVar1 = uVar1 >> 8;\u000a              } while (0 < iVar6);\u000a              unaff_r6[8] = 0;\u000a              unaff_r6[9] = 0;\u000a              puVar10 = unaff_r6 + 10;\u000a              if (in_stack_00000028[4] != 0) {\u000a                *(bool *)(unaff_r6 + 10) = in_stack_00000028[5] == 1;\u000a                puVar10 = unaff_r6 + 0xb;\u000a                if (in_stack_00000028[5] == 1) {\u000a                  puVar10 = (undefined *)\u000a                            writeUcs2s(puVar10,in_stack_00000028[3],in_stack_00000028[4]);\u000a                  *puVar10 = 0;\u000a                  puVar10[1] = 0;\u000a                  puVar10 = puVar10 + 2;\u000a                }\u000a                else {\u000a                  iVar6 = in_stack_00000028[4];\u000a                  if (iVar6 != 0) {\u000a                    puVar2 = (undefined *)in_stack_00000028[3];\u000a                    iVar4 = iVar6;\u000a                    puVar8 = puVar10;\u000a                    do {\u000a                      *puVar8 = *puVar2;\u000a                      puVar8 = puVar8 + 1;\u000a                      puVar2 = puVar2 + 1;\u000a                      iVar4 = iVar4 + -1;\u000a                    } while (iVar4 != 0);\u000a                    puVar10 = puVar10 + iVar6;\u000a                  }\u000a                  *puVar10 = 0;\u000a                  puVar10 = puVar10 + 1;\u000a                }\u000a              }\u000a              if (in_stack_00000028[8] == 1) {\u000a                unaff_r6 = (undefined *)\u000a                           writeLoBytes(puVar10,in_stack_00000028[6],in_stack_00000028[7]);\u000a              }\u000a              else {\u000a                iVar6 = in_stack_00000028[7];\u000a                unaff_r6 = puVar10;\u000a                if (iVar6 != 0) {\u000a                  puVar2 = (undefined *)in_stack_00000028[6];\u000a                  iVar4 = iVar6;\u000a                  puVar8 = puVar10;\u000a                  do {\u000a                    *puVar8 = *puVar2;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar2 = puVar2 + 1;\u000a                    iVar4 = iVar4 + -1;\u000a                  } while (iVar4 != 0);\u000a                  unaff_r6 = puVar10 + iVar6;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            iVar6 = in_stack_00000028[7];\u000a            iVar4 = in_stack_00000028[4];\u000a            if (in_stack_00000028[8] == 1) {\u000a              iVar5 = iVar4 * 2 + 0xd;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a              iVar6 = iVar6 << 1;\u000a            }\u000a            else {\u000a              iVar5 = iVar4 + 0xc;\u000a              if (iVar4 == 0) {\u000a                iVar5 = 0xb;\u000a              }\u000a            }\u000a            gfp = (lame_global_flags *)(iVar5 + iVar6);\u000a            in_r2 = 4;\u000a            if ((lame_global_flags *)0xa < gfp) goto LAB_0001e2be;\u000a          }\u000a        }\u000a        iVar6 = in_stack_00000028[4] * 2 + 0x10;\u000a        if (in_stack_00000028[5] != 1) {\u000a          iVar6 = in_stack_00000028[4] + 0xf;\u000a        }\u000a        iVar4 = 0;\u000a        if (in_stack_00000028[8] == 1) {\u000a          iVar4 = in_stack_00000028[8];\u000a        }\u000a        uVar1 = (in_stack_00000028[7] << iVar4) + iVar6;\u000a        iVar6 = 4;\u000a      } while (uVar1 < 0xb);\u000a      do {\u000a        unaff_r6[iVar6 + -1] = (char)unaff_r4;\u000a        iVar6 = iVar6 + -1;\u000a        unaff_r4 = unaff_r4 >> 8;\u000a      } while (0 < iVar6);\u000a      uVar1 = uVar1 - 10;\u000a      iVar6 = 4;\u000a      do {\u000a        unaff_r6[iVar6 + 3] = (char)uVar1;\u000a        iVar6 = iVar6 + -1;\u000a        uVar1 = uVar1 >> 8;\u000a      } while (0 < iVar6);\u000a      unaff_r6[8] = 0;\u000a      unaff_r6[9] = 0;\u000a      *(bool *)(unaff_r6 + 10) = in_stack_00000028[8] == 1;\u000a      unaff_r6[0xb] = *(undefined *)(in_stack_00000028 + 2);\u000a      unaff_r6[0xc] = *(undefined *)((int)in_stack_00000028 + 9);\u000a      unaff_r6[0xd] = *(undefined *)((int)in_stack_00000028 + 10);\u000a      puVar10 = unaff_r6 + 0xe;\u000a      if (in_stack_00000028[5] == 1) {\u000a        gfp_00 = (lame_global_flags *)writeUcs2s(puVar10,in_stack_00000028[3],in_stack_00000028[4]);\u000a        *(undefined *)&gfp_00->class_id = 0;\u000a        *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a        iVar6 = lame_get_ReplayGain_input(gfp_00);\u000a        return iVar6;\u000a      }\u000a      iVar6 = in_stack_00000028[4];\u000a      if (iVar6 != 0) {\u000a        puVar2 = (undefined *)in_stack_00000028[3];\u000a        iVar4 = iVar6;\u000a        puVar8 = puVar10;\u000a        do {\u000a          *puVar8 = *puVar2;\u000a          puVar8 = puVar8 + 1;\u000a          puVar2 = puVar2 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000a        puVar10 = puVar10 + iVar6;\u000a      }\u000a      *puVar10 = 0;\u000a      unaff_r6 = puVar10 + 1;\u000a      if (in_stack_00000028[8] == 1) break;\u000a      iVar6 = in_stack_00000028[7];\u000a      if (iVar6 != 0) {\u000a        puVar8 = (undefined *)in_stack_00000028[6];\u000a        iVar4 = iVar6;\u000a        puVar10 = unaff_r6;\u000a        do {\u000a          *puVar10 = *puVar8;\u000a          puVar10 = puVar10 + 1;\u000a          puVar8 = puVar8 + 1;\u000a          iVar4 = iVar4 + -1;\u000a        } while (iVar4 != 0);\u000aLAB_0001e36a:\u000a        unaff_r6 = unaff_r6 + iVar6;\u000a      }\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p3244
S'sub r2,#0x1\nlsr r4,r4,#0x8\ncmp r2,#0x0\nbgt 0x0001e2be\nsub r0,#0xa\nmov r2,#0x4\nadd r3,r6,r2\nstrb r0,[r3,#0x3]\nsub r2,#0x1\nlsr r0,r0,#0x8\ncmp r2,#0x0\nbgt 0x0001e2d2\nstrb r1,[r6,#0x8]\n'
p3245
S'01 3a\n24 0a\n00 2a\nf7 dc\n0a 38\n04 22\nb3 18\nd8 70\n01 3a\n00 0a\n00 2a\nf9 dc\n31 72\n'
p3246
S'.text:0001e2c6\n.text:0001e2c8\n.text:0001e2ca\n.text:0001e2cc\n.text:0001e2ce\n.text:0001e2d0\n.text:0001e2d2\n.text:0001e2d4\n.text:0001e2d6\n.text:0001e2d8\n.text:0001e2da\n.text:0001e2dc\n.text:0001e2de\n'
p3247
tp3248
sS'__floatsidf'
p3249
(S'\n__stdcall __floatsidf()\n'
p3250
V\u000avoid __floatsidf(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037ba0 + DAT_00037b9c))();\u000a  return;\u000a}\u000a\u000a
p3251
S'ldr r12,[0x37b9c]\nadd pc,r12,pc\n'
p3252
S'00 c0 9f e5\n0f f0 8c e0\n'
p3253
S'.text:00037b94\n.text:00037b98\n'
p3254
tp3255
sS'__aeabi_cfrcmple'
p3256
(S'\n__stdcall __aeabi_cfrcmple()\n'
p3257
V\u000avoid __aeabi_cfrcmple(undefined4 uParm1,undefined4 uParm2)\u000a\u000a{\u000a  __aeabi_cfcmple(uParm2,uParm1);\u000a  return;\u000a}\u000a\u000a
p3258
S'cpy r12,r0\ncpy r0,r1\ncpy r1,r12\nb 0x000362a4\n'
p3259
S'00 c0 a0 e1\n01 00 a0 e1\n0c 10 a0 e1\nff ff ff ea\n'
p3260
S'.text:00036294\n.text:00036298\n.text:0003629c\n.text:000362a0\n'
p3261
tp3262
sS'lame_set_extension'
p3263
(S'\n__stdcall lame_set_extension(lame_global_flags * gfp, int extension)\n'
p3264
V\u000aint lame_set_extension(lame_global_flags *gfp,int extension)\u000a\u000a{\u000a  int in_r2;\u000a  int iVar1;\u000a  \u000a  if (in_r2 != 0) {\u000a    if (*(int *)(extension + 0x14) == 1) {\u000a      gfp = (lame_global_flags *)(in_r2 * 2 + 0xd);\u000a    }\u000a    else {\u000a      gfp = (lame_global_flags *)(in_r2 + 0xc);\u000a    }\u000a  }\u000a  iVar1 = *(int *)(extension + 0x1c);\u000a  if (iVar1 != 0) {\u000a    if (*(int *)(extension + 0x20) != 1) {\u000a      return (int)&gfp->class_id + iVar1;\u000a    }\u000a    gfp = (lame_global_flags *)((int)&gfp->attackthre_s + iVar1 + 3);\u000a  }\u000a  return (int)gfp;\u000a}\u000a\u000a
p3265
S'cmp r2,#0x0\nbeq 0x0001e4c8\nldr r0,[r1,#0x14]\ncmp r0,#0x1\nbne 0x0001e4c2\nlsl r0,r2,#0x1\nadd r0,#0xd\nb 0x0001e4c8\nadd r2,#0xc\npush { r2 }\npop { r0 }\nldr r2,[r1,#0x1c]\ncmp r2,#0x0\nbeq 0x0001e4d8\nldr r1,[r1,#0x20]\ncmp r1,#0x1\nbne 0x0001e4da\nadd r0,r0,r2\nsub r0,#0x1\nbx lr\n'
p3266
S'00 2a\n08 d0\n48 69\n01 28\n02 d1\n50 00\n0d 30\n02 e0\n0c 32\n04 b4\n01 bc\nca 69\n00 2a\n04 d0\n09 6a\n01 29\n02 d1\n80 18\n01 38\n70 47\n'
p3267
S'.text:0001e4b2\n.text:0001e4b4\n.text:0001e4b6\n.text:0001e4b8\n.text:0001e4ba\n.text:0001e4bc\n.text:0001e4be\n.text:0001e4c0\n.text:0001e4c2\n.text:0001e4c4\n.text:0001e4c6\n.text:0001e4c8\n.text:0001e4ca\n.text:0001e4cc\n.text:0001e4ce\n.text:0001e4d0\n.text:0001e4d2\n.text:0001e4d4\n.text:0001e4d6\n.text:0001e4d8\n'
p3268
tp3269
sS'FUN_00018848'
p3270
(S'\n__stdcall FUN_00018848(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12, undefined4 param_13, undefined4 param_14, undefined4 param_15, undefined4 param_16)\n'
p3271
V\u000avoid FUN_00018848(undefined4 param_1,int param_2)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int extraout_r1;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int unaff_r4;\u000a  uint unaff_r6;\u000a  undefined4 uStack0000006c;\u000a  int iStack00000074;\u000a  uint param_11;\u000a  int param_12;\u000a  int param_13;\u000a  int param_14;\u000a  int param_15;\u000a  int *param_16;\u000a  \u000a  do {\u000a    iVar5 = param_12 - (unaff_r6 & param_11);\u000a    iVar4 = unaff_r4;\u000a    if (iVar5 <= unaff_r4) {\u000a      iVar4 = iVar5;\u000a    }\u000a    unaff_r4 = unaff_r4 - iVar4;\u000a    iVar1 = param_15 + param_13 * param_2 + ((int)unaff_r6 >> 3);\u000a    *(byte *)(iVar1 + DAT_00018934) =\u000a         *(byte *)(iVar1 + DAT_00018934) | (byte)((param_14 >> unaff_r4) << iVar5 - iVar4);\u000a    unaff_r6 = iVar4 + unaff_r6;\u000a    param_2 = *param_16;\u000a  } while (0 < unaff_r4);\u000a  *(uint *)(param_15 + param_2 * param_13 + DAT_00018938) = unaff_r6;\u000a  if (0 < *(int *)(param_15 + 0x48)) {\u000a    iStack00000074 = 0;\u000a    uStack0000006c = 0;\u000a    do {\u000a      iVar4 = 0;\u000a      do {\u000a        iVar5 = *(int *)(param_15 + iStack00000074 * 0x10 + iVar4 * 4 + DAT_0001893c);\u000a        iVar1 = 1;\u000a        do {\u000a          iVar6 = param_12 - (unaff_r6 & param_11);\u000a          iVar2 = iVar1;\u000a          if (iVar6 <= iVar1) {\u000a            iVar2 = iVar6;\u000a          }\u000a          iVar1 = iVar1 - iVar2;\u000a          iVar3 = param_15 + param_13 * param_2 + ((int)unaff_r6 >> 3);\u000a          *(byte *)(iVar3 + DAT_00018934) =\u000a               *(byte *)(iVar3 + DAT_00018934) | (byte)((iVar5 >> iVar1) << iVar6 - iVar2);\u000a          unaff_r6 = iVar2 + unaff_r6;\u000a          param_2 = *param_16;\u000a        } while (0 < iVar1);\u000a        *(uint *)(param_15 + param_2 * param_13 + DAT_00018938) = unaff_r6;\u000a        iVar4 = iVar4 + 1;\u000a      } while (iVar4 != 4);\u000a      iStack00000074 = iStack00000074 + 1;\u000a    } while (iStack00000074 < *(int *)(param_15 + 0x48));\u000a    FUN_00018944();\u000a    return;\u000a  }\u000a  uStack0000006c = 0;\u000a  if (*(int *)(param_15 + 0x48) < 1) {\u000a    FUN_00019276();\u000a    param_2 = extraout_r1;\u000a  }\u000a  FUN_00018960(*(undefined4 *)(param_15 + param_2 * param_13 + DAT_0001895c),param_2,DAT_0001895c,0)\u000a  ;\u000a  return;\u000a}\u000a\u000a
p3272
S'push { r6 }\npop { r5 }\npush { r5 }\npop { r0 }\npush { r5 }\npop { r2 }\nldr r3,[sp,#0x78]\nand r0,r3\nldr r3,[sp,#0x80]\nsub r3,r3,r0\ncmp r4,r3\npush { r4 }\npop { r5 }\nblt 0x00018868\npush { r3 }\npop { r5 }\nsub r0,r3,r5\nsub r4,r4,r5\nldr r3,[sp,#0x88]\nasr r3,r4\nlsl r3,r0\nldr r0,[sp,#0x84]\nmul r1,r0\nldr r0,[sp,#0x8c]\nadd r0,r0,r1\nasr r1,r2,#0x3\nadd r0,r0,r1\nldr r1,[0x00018934]\nldrb r6,[r0,r1]\norr r6,r3\nstrb r6,[r0,r1]\nadd r2,r5,r2\npush { r2 }\npop { r5 }\nldr r0,[sp,#0x90]\nldr r1,[r0,#0x0]\ncmp r4,#0x0\nbgt 0x0001884c\nldr r0,[sp,#0x84]\nmul r0,r1\nldr r6,[sp,#0x8c]\nadd r0,r6,r0\nldr r3,[0x00018938]\nstr r5,[r0,r3]\n'
p3273
S'40 b4\n20 bc\n20 b4\n01 bc\n20 b4\n04 bc\n1e 9b\n18 40\n20 9b\n1b 1a\n9c 42\n10 b4\n20 bc\n01 db\n08 b4\n20 bc\n58 1b\n64 1b\n22 9b\n23 41\n83 40\n21 98\n41 43\n23 98\n40 18\nd1 10\n40 18\n2d 49\n46 5c\n1e 43\n46 54\naa 18\n04 b4\n20 bc\n24 98\n01 68\n00 2c\ndb dc\n21 98\n48 43\n23 9e\n30 18\n26 4b\nc5 50\n'
p3274
S'.text:00018848\n.text:0001884a\n.text:0001884c\n.text:0001884e\n.text:00018850\n.text:00018852\n.text:00018854\n.text:00018856\n.text:00018858\n.text:0001885a\n.text:0001885c\n.text:0001885e\n.text:00018860\n.text:00018862\n.text:00018864\n.text:00018866\n.text:00018868\n.text:0001886a\n.text:0001886c\n.text:0001886e\n.text:00018870\n.text:00018872\n.text:00018874\n.text:00018876\n.text:00018878\n.text:0001887a\n.text:0001887c\n.text:0001887e\n.text:00018880\n.text:00018882\n.text:00018884\n.text:00018886\n.text:00018888\n.text:0001888a\n.text:0001888c\n.text:0001888e\n.text:00018890\n.text:00018892\n.text:00018894\n.text:00018896\n.text:00018898\n.text:0001889a\n.text:0001889c\n.text:0001889e\n'
p3275
tp3276
sS'lame_get_padding_type'
p3277
(S'\n__stdcall lame_get_padding_type(lame_global_flags * gfp)\n'
p3278
V\u000aPadding_type lame_get_padding_type(lame_global_flags *gfp)\u000a\u000a{\u000a  Padding_type PVar1;\u000a  int in_r1;\u000a  int iVar2;\u000a  \u000a  iVar2 = *(int *)(in_r1 + 0x10);\u000a  PVar1 = 10;\u000a  if (iVar2 != 0) {\u000a    if (*(int *)(in_r1 + 0x14) == 1) {\u000a      PVar1 = iVar2 * 2 + 0xd;\u000a    }\u000a    else {\u000a      PVar1 = iVar2 + 0xc;\u000a    }\u000a  }\u000a  iVar2 = *(int *)(in_r1 + 0x1c);\u000a  if (iVar2 != 0) {\u000a    if (*(int *)(in_r1 + 0x20) != 1) {\u000a      return iVar2 + PVar1;\u000a    }\u000a    PVar1 = PVar1 + iVar2 + ~PAD_NO;\u000a  }\u000a  return PVar1;\u000a}\u000a\u000a
p3279
S'ldr r2,[r1,#0x10]\nmov r0,#0xa\n'
p3280
S'0a 69\n0a 20\n'
p3281
S'.text:0001e4ae\n.text:0001e4b0\n'
p3282
tp3283
sS'lame_encode_buffer'
p3284
(S'\n__stdcall lame_encode_buffer(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5, undefined4 param_6)\n'
p3285
V\u000avoid lame_encode_buffer(void)\u000a\u000a{\u000a  (*(lame_encode_flush + DAT_000378fc))();\u000a  return;\u000a}\u000a\u000a
p3286
S'ldr r12,[0x378fc]\nadd pc,r12,pc\n'
p3287
S'00 c0 9f e5\n0f f0 8c e0\n'
p3288
S'.text:000378f4\n.text:000378f8\n'
p3289
tp3290
sS'get_lame_version_numerical'
p3291
(S'\n__stdcall get_lame_version_numerical()\n'
p3292
V\u000avoid get_lame_version_numerical(undefined4 *puParm1)\u000a\u000a{\u000a  *puParm1 = 3;\u000a  puParm1[1] = 99;\u000a  puParm1[2] = 0;\u000a  puParm1[3] = 0;\u000a  puParm1[4] = 1;\u000a  puParm1[5] = 0;\u000a  puParm1[6] = 0;\u000a  puParm1[7] = 0;\u000a  puParm1[8] = DAT_00035060 + 0x3505c;\u000a  return;\u000a}\u000a\u000a
p3293
S'push { r4, lr }\nmov r1,#0x3\nmov r2,#0x63\nmov r3,#0x0\nmov r4,#0x1\nstmia r0!,{  r1, r2, r3 }\nstr r3,[r0,#0x0]\nstr r4,[r0,#0x4]\nstr r3,[r0,#0x8]\nstr r3,[r0,#0xc]\nstr r3,[r0,#0x10]\nldr r1,[0x00035060]\nadd r1,pc\nstr r1,[r0,#0x14]\npop { r4, pc }\n'
p3294
S'10 b5\n03 21\n63 22\n00 23\n01 24\n0e c0\n03 60\n44 60\n83 60\nc3 60\n03 61\n02 49\n79 44\n41 61\n10 bd\n'
p3295
S'.text:00035040\n.text:00035042\n.text:00035044\n.text:00035046\n.text:00035048\n.text:0003504a\n.text:0003504c\n.text:0003504e\n.text:00035050\n.text:00035052\n.text:00035054\n.text:00035056\n.text:00035058\n.text:0003505a\n.text:0003505c\n'
p3296
tp3297
sS'id3tag_set_comment_utf16'
p3298
(S'\n__stdcall id3tag_set_comment_utf16()\n'
p3299
V\u000avoid id3tag_set_comment_utf16\u000a               (undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  id3v2_add_ucs2(uParm1,DAT_0001d5c4,uParm2,uParm3,uParm4);\u000a  return;\u000a}\u000a\u000a
p3300
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x8\npush { r2 }\npop { r4 }\npush { r1 }\npop { r2 }\nmov r1,sp\nstr r3,[r1,#0x0]\nldr r1,[0x0001d5c4]\npush { r4 }\npop { r3 }\nbl 0x0001cf20\nadd sp,#0x8\npop { r4, r6, r7, pc }\n'
p3301
S'd0 b5\n02 af\n82 b0\n04 b4\n10 bc\n02 b4\n04 bc\n69 46\n0b 60\n03 49\n10 b4\n08 bc\nff f7 b0 fc\n02 b0\nd0 bd\n'
p3302
S'.text:0001d5a4\n.text:0001d5a6\n.text:0001d5a8\n.text:0001d5aa\n.text:0001d5ac\n.text:0001d5ae\n.text:0001d5b0\n.text:0001d5b2\n.text:0001d5b4\n.text:0001d5b6\n.text:0001d5b8\n.text:0001d5ba\n.text:0001d5bc\n.text:0001d5c0\n.text:0001d5c2\n'
p3303
tp3304
sS'lame_get_nogap_total'
p3305
(S'\n__stdcall lame_get_nogap_total(lame_global_flags * gfp)\n'
p3306
V\u000aint lame_get_nogap_total(lame_global_flags *gfp)\u000a\u000a{\u000a  lame_global_flags *gfp_00;\u000a  undefined *puVar1;\u000a  undefined *puVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  int *unaff_r5;\u000a  uint uVar10;\u000a  undefined *puVar11;\u000a  undefined *unaff_r6;\u000a  int *in_stack_00000004;\u000a  char *__s;\u000a  int in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int *in_stack_00000028;\u000a  int in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  \u000a  do {\u000a    if (unaff_r5[5] == 1) {\u000a      puVar1 = (undefined *)writeUcs2s(unaff_r6,unaff_r5[3],unaff_r5[4]);\u000a      *puVar1 = 0;\u000a      puVar1[1] = 0;\u000a      puVar1 = puVar1 + 2;\u000a    }\u000a    else {\u000a      iVar3 = unaff_r5[4];\u000a      if (iVar3 != 0) {\u000a        puVar11 = (undefined *)unaff_r5[3];\u000a        iVar5 = iVar3;\u000a        puVar1 = unaff_r6;\u000a        do {\u000a          *puVar1 = *puVar11;\u000a          puVar1 = puVar1 + 1;\u000a          puVar11 = puVar11 + 1;\u000a          iVar5 = iVar5 + -1;\u000a        } while (iVar5 != 0);\u000a        unaff_r6 = unaff_r6 + iVar3;\u000a      }\u000a      *unaff_r6 = 0;\u000a      puVar1 = unaff_r6 + 1;\u000a    }\u000a    do {\u000a      if (unaff_r5[8] == 1) {\u000a        puVar11 = (undefined *)writeLoBytes(puVar1,unaff_r5[6],unaff_r5[7]);\u000a      }\u000a      else {\u000a        iVar3 = unaff_r5[7];\u000a        puVar11 = puVar1;\u000a        if (iVar3 != 0) {\u000a          puVar2 = (undefined *)unaff_r5[6];\u000a          iVar5 = iVar3;\u000a          puVar11 = puVar1;\u000a          do {\u000a            *puVar11 = *puVar2;\u000a            puVar11 = puVar11 + 1;\u000a            puVar2 = puVar2 + 1;\u000a            iVar5 = iVar5 + -1;\u000a          } while (iVar5 != 0);\u000a          puVar11 = puVar1 + iVar3;\u000a          unaff_r5 = in_stack_00000028;\u000a        }\u000a      }\u000aLAB_0001e09a:\u000a      do {\u000a        while( true ) {\u000a          unaff_r5 = (int *)*unaff_r5;\u000a          if (unaff_r5 == (int *)0x0) {\u000a            if (__s != (char *)0x0) {\u000a              iVar3 = 4;\u000a              if ((*in_stack_00000004 != 0) &&\u000a                 (uVar8 = DAT_0001e49c, *(int *)(in_stack_0000001c + lame_get_error_protection) != 0\u000a                 )) {\u000a                do {\u000a                  puVar11[iVar3 + -1] = (char)uVar8;\u000a                  iVar3 = iVar3 + -1;\u000a                  uVar8 = uVar8 >> 8;\u000a                } while (0 < iVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a                strlen(__s);\u000a              }\u000a            }\u000a            __aeabi_memclr(puVar11,(in_stack_0000002c + in_stack_00000018) - (int)puVar11);\u000a            if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000020) {\u000a              return in_stack_0000002c;\u000a            }\u000a                    /* WARNING: Subroutine does not return */\u000a            __stack_chk_fail();\u000a          }\u000a          uVar8 = unaff_r5[1];\u000a          uVar10 = 0xff;\u000a          iVar3 = 4;\u000a          if ((uVar8 != DAT_0001e494) && (uVar4 = in_stack_00000030, uVar8 != DAT_0001e498)) break;\u000a          iVar3 = unaff_r5[4] * 2 + 0x10;\u000a          if (unaff_r5[5] != 1) {\u000a            iVar3 = unaff_r5[4] + 0xf;\u000a          }\u000a          iVar5 = 0;\u000a          if (unaff_r5[8] == 1) {\u000a            iVar5 = unaff_r5[8];\u000a          }\u000a          uVar10 = (unaff_r5[7] << iVar5) + iVar3;\u000a          iVar3 = 4;\u000a          if (10 < uVar10) {\u000a            do {\u000a              puVar11[iVar3 + -1] = (char)uVar8;\u000a              iVar3 = iVar3 + -1;\u000a              uVar8 = uVar8 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar10 = uVar10 - 10;\u000a            iVar3 = 4;\u000a            do {\u000a              puVar11[iVar3 + 3] = (char)uVar10;\u000a              iVar3 = iVar3 + -1;\u000a              uVar10 = uVar10 >> 8;\u000a            } while (0 < iVar3);\u000a            puVar11[8] = 0;\u000a            puVar11[9] = 0;\u000a            *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a            puVar11[0xb] = *(undefined *)(unaff_r5 + 2);\u000a            puVar11[0xc] = *(undefined *)((int)unaff_r5 + 9);\u000a            puVar11[0xd] = *(undefined *)((int)unaff_r5 + 10);\u000a            puVar11 = puVar11 + 0xe;\u000a            if (unaff_r5[5] == 1) {\u000a              gfp_00 = (lame_global_flags *)writeUcs2s(puVar11,unaff_r5[3],unaff_r5[4]);\u000a              *(undefined *)&gfp_00->class_id = 0;\u000a              *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a              iVar3 = lame_get_ReplayGain_input(gfp_00);\u000a              return iVar3;\u000a            }\u000a            iVar3 = unaff_r5[4];\u000a            if (iVar3 != 0) {\u000a              puVar2 = (undefined *)unaff_r5[3];\u000a              iVar5 = iVar3;\u000a              puVar1 = puVar11;\u000a              do {\u000a                *puVar1 = *puVar2;\u000a                puVar1 = puVar1 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              puVar11 = puVar11 + iVar3;\u000a            }\u000a            *puVar11 = 0;\u000a            puVar11 = puVar11 + 1;\u000a            if (unaff_r5[8] == 1) {\u000aLAB_0001e338:\u000a              puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[6],unaff_r5[7]);\u000a            }\u000a            else {\u000a              iVar3 = unaff_r5[7];\u000a              if (iVar3 != 0) {\u000a                puVar2 = (undefined *)unaff_r5[6];\u000a                iVar5 = iVar3;\u000a                puVar1 = puVar11;\u000a                do {\u000a                  *puVar1 = *puVar2;\u000a                  puVar1 = puVar1 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000aLAB_0001e36a:\u000a                puVar11 = puVar11 + iVar3;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        do {\u000a          uVar7 = uVar10 & 0x57000000;\u000a          uVar9 = in_stack_00000030;\u000a          if (uVar7 != (uVar10 & uVar8)) {\u000a            uVar9 = uVar10 & uVar8;\u000a          }\u000a          if (uVar7 == 0) {\u000a            uVar9 = uVar7;\u000a          }\u000a          uVar4 = uVar4 | uVar9;\u000a          iVar3 = iVar3 + -1;\u000a          uVar10 = uVar10 << 8;\u000a        } while (iVar3 != 0);\u000a        if (uVar4 != 0) {\u000a          iVar3 = unaff_r5[7];\u000a          iVar5 = unaff_r5[4];\u000a          if (unaff_r5[8] == 1) {\u000a            iVar6 = iVar5 * 2 + 0xd;\u000a            if (iVar5 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a            iVar3 = iVar3 << 1;\u000a          }\u000a          else {\u000a            iVar6 = iVar5 + 0xc;\u000a            if (iVar5 == 0) {\u000a              iVar6 = 0xb;\u000a            }\u000a          }\u000a          iVar5 = 4;\u000a          if (10 < (uint)(iVar6 + iVar3)) {\u000a            do {\u000a              puVar11[iVar5 + -1] = (char)uVar8;\u000a              iVar5 = iVar5 + -1;\u000a              uVar8 = uVar8 >> 8;\u000a            } while (0 < iVar5);\u000a            uVar8 = (iVar6 + iVar3) - 10;\u000a            iVar3 = 4;\u000a            do {\u000a              puVar11[iVar3 + 3] = (char)uVar8;\u000a              iVar3 = iVar3 + -1;\u000a              uVar8 = uVar8 >> 8;\u000a            } while (0 < iVar3);\u000a            puVar11[8] = 0;\u000a            puVar11[9] = 0;\u000a            *(bool *)(puVar11 + 10) = unaff_r5[8] == 1;\u000a            puVar11 = puVar11 + 0xb;\u000a            iVar3 = unaff_r5[4];\u000a            if (iVar3 != 0) {\u000a              if (unaff_r5[5] == 1) {\u000a                puVar11 = (undefined *)writeUcs2s(puVar11,unaff_r5[3]);\u000a                *puVar11 = 0;\u000a                puVar11[1] = 0;\u000a                puVar11 = puVar11 + 2;\u000a              }\u000a              else {\u000a                puVar2 = (undefined *)unaff_r5[3];\u000a                iVar5 = iVar3;\u000a                puVar1 = puVar11;\u000a                do {\u000a                  *puVar1 = *puVar2;\u000a                  puVar1 = puVar1 + 1;\u000a                  puVar2 = puVar2 + 1;\u000a                  iVar5 = iVar5 + -1;\u000a                } while (iVar5 != 0);\u000a                puVar11[iVar3] = 0;\u000a                puVar11 = puVar11 + iVar3 + 1;\u000a              }\u000a            }\u000a            if (unaff_r5[8] == 1) goto LAB_0001e338;\u000a            iVar3 = unaff_r5[7];\u000a            if (iVar3 != 0) {\u000a              puVar2 = (undefined *)unaff_r5[6];\u000a              iVar5 = iVar3;\u000a              puVar1 = puVar11;\u000a              do {\u000a                *puVar1 = *puVar2;\u000a                puVar1 = puVar1 + 1;\u000a                puVar2 = puVar2 + 1;\u000a                iVar5 = iVar5 + -1;\u000a              } while (iVar5 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a          goto LAB_0001e09a;\u000a        }\u000a        uVar10 = sizeOfWxxxNode(unaff_r5);\u000a        iVar3 = 4;\u000a      } while (uVar10 < 0xb);\u000a      do {\u000a        puVar11[iVar3 + -1] = (char)uVar8;\u000a        iVar3 = iVar3 + -1;\u000a        uVar8 = uVar8 >> 8;\u000a      } while (0 < iVar3);\u000a      uVar10 = uVar10 - 10;\u000a      iVar3 = 4;\u000a      do {\u000a        puVar11[iVar3 + 3] = (char)uVar10;\u000a        iVar3 = iVar3 + -1;\u000a        uVar10 = uVar10 >> 8;\u000a      } while (0 < iVar3);\u000a      puVar11[8] = 0;\u000a      puVar11[9] = 0;\u000a      puVar1 = puVar11 + 10;\u000a      in_stack_00000028 = unaff_r5;\u000a    } while (unaff_r5[4] == 0);\u000a    *(bool *)(puVar11 + 10) = unaff_r5[5] == 1;\u000a    unaff_r6 = puVar11 + 0xb;\u000a    in_stack_00000028 = unaff_r5;\u000a  } while( true );\u000a}\u000a\u000a
p3307
S'ldr r0,[r5,#0x14]\ncmp r0,#0x1\nbne 0x0001e36e\nldr r1,[r5,#0xc]\nldr r2,[r5,#0x10]\npush { r6 }\npop { r0 }\nbl 0x0001e9e0\nmov r1,#0x0\nstrb r1,[r0,#0x0]\nstrb r1,[r0,#0x1]\nadd r0,#0x2\n'
p3308
S'68 69\n01 28\n6f d1\ne9 68\n2a 69\n40 b4\n01 bc\n00 f0 a3 fb\n00 21\n01 70\n41 70\n02 30\n'
p3309
S'.text:0001e288\n.text:0001e28a\n.text:0001e28c\n.text:0001e28e\n.text:0001e290\n.text:0001e292\n.text:0001e294\n.text:0001e296\n.text:0001e29a\n.text:0001e29c\n.text:0001e29e\n.text:0001e2a0\n'
p3310
tp3311
sS'id3tag_v1_only'
p3312
(S'\n__stdcall id3tag_v1_only()\n'
p3313
V\u000avoid id3tag_v1_only(int iParm1)\u000a\u000a{\u000a  *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001c9dc) =\u000a       *(uint *)(*(int *)(iParm1 + 0x120) + DAT_0001c9dc) & 0xfffffff1 | 4;\u000a  return;\u000a}\u000a\u000a
p3314
S'mov r1,#0x9\nlsl r1,r1,#0x5\nldr r0,[r0,r1]\nldr r1,[0x0001c9dc]\nldr r2,[r0,r1]\nmov r3,#0xe\nmvn r3,r3\nand r3,r2\nmov r2,#0x4\norr r2,r3\nstr r2,[r0,r1]\nbx lr\n'
p3315
S'09 21\n49 01\n40 58\n04 49\n42 58\n0e 23\ndb 43\n13 40\n04 22\n1a 43\n42 50\n70 47\n'
p3316
S'.text:0001c9c4\n.text:0001c9c6\n.text:0001c9c8\n.text:0001c9ca\n.text:0001c9cc\n.text:0001c9ce\n.text:0001c9d0\n.text:0001c9d2\n.text:0001c9d4\n.text:0001c9d6\n.text:0001c9d8\n.text:0001c9da\n'
p3317
tp3318
sS'lame_get_short_threshold_s'
p3319
(S'\n__stdcall lame_get_short_threshold_s()\n'
p3320
V\u000aundefined4 lame_get_short_threshold_s(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0x10c);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3321
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002f0ae\nmov r0,#0x43\nlsl r0,r0,#0x2\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p3322
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 c9 f9\n01 b4\n02 bc\n00 20\n00 29\n02 d0\n43 20\n80 00\n20 58\nd0 bd\n'
p3323
S'.text:0002f092\n.text:0002f094\n.text:0002f096\n.text:0002f098\n.text:0002f09a\n.text:0002f09e\n.text:0002f0a0\n.text:0002f0a2\n.text:0002f0a4\n.text:0002f0a6\n.text:0002f0a8\n.text:0002f0aa\n.text:0002f0ac\n.text:0002f0ae\n'
p3324
tp3325
sS'lame_set_VBR_quality'
p3326
(S'\n__stdcall lame_set_VBR_quality(lame_global_flags * gfp, float VBR_q)\n'
p3327
V\u000aint lame_set_VBR_quality(lame_global_flags *gfp,float VBR_q)\u000a\u000a{\u000a  lame_global_flags *in_r1;\u000a  int unaff_r4;\u000a  \u000a  if (gfp == in_r1) {\u000a    return unaff_r4;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3328
S'sub r0,r0,r1\ncmp r0,#0x0\nbne 0x0001e7e2\npush { r4 }\npop { r0 }\nadd sp,#0x84\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p3329
S'40 1a\n00 28\n03 d1\n10 b4\n01 bc\n21 b0\nf0 bd\n19 f0 e5 f8\n'
p3330
S'.text:0001e7d4\n.text:0001e7d6\n.text:0001e7d8\n.text:0001e7da\n.text:0001e7dc\n.text:0001e7de\n.text:0001e7e0\n.text:0001e7e2\n'
p3331
tp3332
sS'lame_set_VBR'
p3333
(S'\n__stdcall lame_set_VBR()\n'
p3334
V\u000avoid lame_set_VBR(void)\u000a\u000a{\u000a  (*(lame_get_VBR_mean_bitrate_kbps + DAT_000380dc))();\u000a  return;\u000a}\u000a\u000a
p3335
S'ldr r12,[0x380dc]\nadd pc,r12,pc\n'
p3336
S'00 c0 9f e5\n0f f0 8c e0\n'
p3337
S'.text:000380d4\n.text:000380d8\n'
p3338
tp3339
sS'lame_set_lowpassfreq'
p3340
(S'\n__stdcall lame_set_lowpassfreq(lame_global_flags * gfp, int lowpassfreq)\n'
p3341
V\u000aint lame_set_lowpassfreq(lame_global_flags *gfp,int lowpassfreq)\u000a\u000a{\u000a  byte bVar1;\u000a  int in_r2;\u000a  int in_r3;\u000a  \u000a  while (((uint)*(byte *)(in_r2 + in_r3) == lowpassfreq ||\u000a         (0x19 < (uint)*(byte *)(in_r2 + in_r3) - 0x41))) {\u000a    bVar1 = *(byte *)((int)&gfp->class_id + 1);\u000a    gfp = (lame_global_flags *)((int)&gfp->class_id + 1);\u000a    if (bVar1 == 0) {\u000a      return (int)gfp;\u000a    }\u000a    in_r3 = (uint)bVar1 << 1;\u000a  }\u000a  return (int)gfp;\u000a}\u000a\u000a
p3342
S'ldrb r4,[r2,r3]\npush { r4 }\npop { r3 }\nsub r3,#0x41\ncmp r4,r1\nbeq 0x0001e9d0\ncmp r3,#0x1a\nbcc 0x0001e9d8\nldrb r3,[r0,#0x1]\nadd r0,#0x1\ncmp r3,#0x0\nbne 0x0001e9be\n'
p3343
S'd4 5c\n10 b4\n08 bc\n41 3b\n8c 42\n01 d0\n1a 2b\n03 d3\n43 78\n01 30\n00 2b\nf2 d1\n'
p3344
S'.text:0001e9c0\n.text:0001e9c2\n.text:0001e9c4\n.text:0001e9c6\n.text:0001e9c8\n.text:0001e9ca\n.text:0001e9cc\n.text:0001e9ce\n.text:0001e9d0\n.text:0001e9d2\n.text:0001e9d4\n.text:0001e9d6\n'
p3345
tp3346
sS'lame_get_ATHtype'
p3347
(S'\n__stdcall lame_get_ATHtype()\n'
p3348
V\u000aundefined4 lame_get_ATHtype(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xdc);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3349
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ec52\nmov r0,#0xdc\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p3350
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 f6 fb\n01 b4\n02 bc\n00 20\n00 29\n01 d0\ndc 20\n20 58\nd0 bd\n'
p3351
S'.text:0002ec38\n.text:0002ec3a\n.text:0002ec3c\n.text:0002ec3e\n.text:0002ec40\n.text:0002ec44\n.text:0002ec46\n.text:0002ec48\n.text:0002ec4a\n.text:0002ec4c\n.text:0002ec4e\n.text:0002ec50\n.text:0002ec52\n'
p3352
tp3353
sS'long_block_constrain'
p3354
(S'\n__stdcall long_block_constrain()\n'
p3355
V\u000avoid long_block_constrain(int iParm1,int iParm2,int iParm3,int iParm4)\u000a\u000a{\u000a  bool bVar1;\u000a  bool bVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  undefined4 uVar6;\u000a  int iVar7;\u000a  uint uVar8;\u000a  int iVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  int local_f0;\u000a  int local_e4;\u000a  int local_e0;\u000a  int local_d8;\u000a  int local_d0;\u000a  int local_c4;\u000a  int local_c0;\u000a  int local_bc;\u000a  int local_b8;\u000a  int local_b4 [39];\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_00033900 + 0x33648);\u000a  if (*(int *)(*(int *)(iParm1 + 0xc) + 0x4c) == 2) {\u000a    local_d0 = DAT_00033904 + 0x33664;\u000a  }\u000a  else {\u000a    local_d0 = DAT_00033908 + 0x3365c;\u000a  }\u000a  iVar5 = *(int *)(iParm1 + 0x10);\u000a  local_e0 = *(int *)(iParm1 + 0x14);\u000a  iVar3 = *(int *)(iVar5 + 0x1300);\u000a  bVar2 = true;\u000a  iVar7 = 0;\u000a  if (iVar3 < 1) {\u000a    local_e4 = 0;\u000a    local_b8 = 0;\u000a    local_f0 = 0;\u000a    local_d8 = 0;\u000a    local_c4 = 0;\u000a    bVar1 = true;\u000a  }\u000a  else {\u000a    local_e4 = 0;\u000a    local_c0 = 0;\u000a    local_c4 = 0;\u000a    local_bc = 0;\u000a    iVar11 = 0;\u000a    iVar4 = local_c4;\u000a    do {\u000a      local_c4 = iVar4;\u000a      iVar4 = iParm4 - *(int *)(iParm2 + iVar7 * -4);\u000a      uVar8 = (uint)*(byte *)((DAT_0003392c + 0x336a8) - iVar7);\u000a      local_b8 = iVar4 + uVar8 * -4;\u000a      if (local_b8 <= iVar11) {\u000a        local_b8 = iVar11;\u000a      }\u000a      iVar11 = iVar4 + uVar8 * -2;\u000a      if (iVar11 <= local_e4) {\u000a        iVar11 = local_e4;\u000a      }\u000a      local_e4 = iVar11;\u000a      iVar11 = (uint)*(byte *)(local_d0 - iVar7) +\u000a               *(int *)(*(int *)(DAT_0003390c + 0x33686) + iVar7 * -4);\u000a      local_d8 = iVar4 + iVar11 * -4;\u000a      if (local_d8 <= local_c4) {\u000a        local_d8 = local_c4;\u000a      }\u000a      local_f0 = iVar4 + iVar11 * -2;\u000a      if (local_f0 <= local_c0) {\u000a        local_f0 = local_c0;\u000a      }\u000a      local_c4 = iVar4;\u000a      if (iVar4 <= local_bc) {\u000a        local_c4 = local_bc;\u000a      }\u000a      iVar7 = iVar7 + -1;\u000a      iVar11 = local_b8;\u000a      iVar4 = local_d8;\u000a      local_c0 = local_f0;\u000a      local_bc = local_c4;\u000a    } while (iVar3 + iVar7 != 0);\u000a    iVar7 = local_e0;\u000a    if (local_e0 <= iParm4 - local_f0) {\u000a      iVar7 = iParm4 - local_f0;\u000a    }\u000a    bVar1 = true;\u000a    if (iVar3 < 1) {\u000a      bVar2 = true;\u000a    }\u000a    else {\u000a      iVar11 = 0;\u000a      bVar2 = true;\u000a      do {\u000a        iVar4 = iVar7 - *(int *)(iParm3 + iVar11 * 4);\u000a        iVar9 = *(int *)(*(int *)(DAT_00033910 + 0x33740) + iVar11 * 4);\u000a        iVar10 = iVar9 * 2;\u000a        if (iVar4 == iVar10 || iVar4 + iVar9 * -2 < 0 != SBORROW4(iVar4,iVar10)) {\u000a          bVar1 = false;\u000a        }\u000a        if (iVar4 == iVar10 || iVar4 + iVar9 * -2 < 0 != SBORROW4(iVar4,iVar10)) {\u000a          bVar2 = false;\u000a        }\u000a        iVar11 = iVar11 + 1;\u000a      } while ((iVar4 != iVar10 && iVar4 + iVar9 * -2 < 0 == SBORROW4(iVar4,iVar10)) &&\u000a              (iVar11 < iVar3));\u000a      if (bVar1) {\u000a        iVar7 = local_e0;\u000a        if (local_e0 <= iParm4 - local_d8) {\u000a          iVar7 = iParm4 - local_d8;\u000a        }\u000a        bVar1 = true;\u000a        if (0 < iVar3) {\u000a          bVar1 = true;\u000a          iVar11 = 0;\u000a          do {\u000a            iVar4 = iVar7 - *(int *)(iParm3 + iVar11 * 4);\u000a            iVar9 = *(int *)(*(int *)(DAT_00033914 + 0x33796) + iVar11 * 4);\u000a            iVar10 = iVar9 * 4;\u000a            if (iVar4 == iVar10 || iVar4 + iVar9 * -4 < 0 != SBORROW4(iVar4,iVar10)) {\u000a              bVar1 = false;\u000a            }\u000a            iVar11 = iVar11 + 1;\u000a          } while ((iVar4 != iVar10 && iVar4 + iVar9 * -4 < 0 == SBORROW4(iVar4,iVar10)) &&\u000a                  (iVar11 < iVar3));\u000a        }\u000a      }\u000a    }\u000a  }\u000a  iVar3 = local_b8;\u000a  if (bVar1) {\u000a    iVar3 = local_d8;\u000a  }\u000a  iVar7 = local_e4;\u000a  if (bVar2) {\u000a    iVar7 = local_f0;\u000a  }\u000a  if (*(int *)(*(int *)(iParm1 + 0xc) + 0x1c) != 2) {\u000a    local_b8 = local_e4;\u000a    iVar3 = iVar7;\u000a  }\u000a  iVar11 = local_e4;\u000a  if (iVar7 <= local_e4) {\u000a    iVar11 = iVar7;\u000a  }\u000a  if (local_b8 <= iVar11) {\u000a    iVar11 = local_b8;\u000a  }\u000a  if (iVar3 <= iVar11) {\u000a    iVar11 = iVar3;\u000a  }\u000a  iVar4 = iVar11;\u000a  if (local_c4 <= iVar11) {\u000a    iVar4 = local_c4;\u000a  }\u000a  if (local_e0 <= iParm4 - iVar4) {\u000a    local_e0 = iParm4 - iVar4;\u000a  }\u000a  if (local_e4 == iVar11) {\u000a    *(undefined4 *)(iVar5 + DAT_00033918) = 0;\u000a    *(undefined4 *)(iVar5 + 0x12e0) = 0;\u000a    local_d0 = DAT_00033920 + 0x3386e;\u000a  }\u000a  else {\u000a    if (iVar7 == iVar11) {\u000a      *(undefined4 *)(iVar5 + DAT_00033918) = 0;\u000aLAB_000338aa:\u000a      *(undefined4 *)(iVar5 + 0x12e0) = 1;\u000a    }\u000a    else {\u000a      if (local_b8 == iVar11) {\u000a        *(undefined4 *)(iVar5 + DAT_00033918) = 1;\u000a        *(undefined4 *)(iVar5 + 0x12e0) = 0;\u000a        local_d0 = DAT_0003391c + 0x3389a;\u000a      }\u000a      else {\u000a        if (iVar3 == iVar11) {\u000a          *(undefined4 *)(iVar5 + DAT_00033918) = 1;\u000a          goto LAB_000338aa;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  iVar3 = DAT_00033924;\u000a  *(int *)(iVar5 + DAT_00033924) = local_e0;\u000a  if (local_e0 < 0) {\u000a    uVar6 = 0;\u000a  }\u000a  else {\u000a    if (local_e0 < 0x100) goto LAB_000338c4;\u000a    uVar6 = 0xff;\u000a  }\u000a  *(undefined4 *)(iVar5 + iVar3) = uVar6;\u000aLAB_000338c4:\u000a  iVar3 = 0;\u000a  do {\u000a    local_b4[iVar3] = *(int *)(iParm2 + iVar3 * 4) - local_e0;\u000a    iVar3 = iVar3 + 1;\u000a  } while (iVar3 != 0x27);\u000a  set_scalefacs(iVar5,iParm3,local_b4,local_d0);\u000a  if (**(int **)(DAT_00033928 + 0x338ec) == local_18) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3356
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xdc\nstr r3,[sp,#0x24]\nstr r2,[sp,#0x14]\npush { r1 }\npop { r6 }\npush { r0 }\npop { r5 }\nldr r0,[0x00033900]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[sp,#0xd8]\nldr r1,[r5,#0xc]\nldr r0,[r1,#0x4c]\ncmp r0,#0x2\nbeq 0x0003365c\nstr r1,[sp,#0x4]\nldr r0,[0x00033908]\nadd r0,pc\nb 0x00033662\nstr r1,[sp,#0x4]\nldr r0,[0x00033904]\nadd r0,pc\nstr r0,[sp,#0x20]\nmov r0,#0x13\nlsl r0,r0,#0x8\nldr r1,[r5,#0x10]\nldr r4,[r5,#0x14]\nldr r0,[r1,r0]\nstr r0,[sp,#0x28]\nmov r5,#0x1\nmov r3,#0x0\ncmp r0,#0x1\nbge 0x0003367a\nb 0x000337c6\nstr r4,[sp,#0x10]\nstr r1,[sp,#0x8]\nstr r6,[sp,#0x1c]\nldr r0,[0x0003390c]\nadd r0,pc\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x18]\npush { r3 }\npop { r4 }\npush { r3 }\npop { r6 }\nstr r3,[sp,#0x30]\nstr r3,[sp,#0x2c]\nstr r3,[sp,#0x34]\nlsl r1,r3,#0x2\nldr r2,[sp,#0x1c]\nsub r5,r2,r1\nldr r5,[r5,#0x0]\nldr r2,[sp,#0x24]\nsub r0,r2,r5\nldr r2,[0x0003392c]\nadd r2,pc\nsub r5,r2,r3\nldrb r5,[r5,#0x0]\nlsl r2,r5,#0x2\nsub r2,r0,r2\ncmp r6,r2\nblt 0x000336b6\npush { r6 }\npop { r2 }\nstr r2,[sp,#0x38]\nlsl r2,r5,#0x1\nsub r6,r0,r2\ncmp r4,r6\nblt 0x000336c4\npush { r4 }\npop { r6 }\nldr r2,[sp,#0x20]\nsub r2,r2,r3\nldrb r2,[r2,#0x0]\nldr r4,[sp,#0x18]\nsub r1,r4,r1\nldr r1,[r1,#0x0]\nadd r1,r2,r1\nlsl r2,r1,#0x2\nsub r5,r0,r2\npush { r0 }\npop { r2 }\nldr r0,[sp,#0x2c]\ncmp r0,r5\nblt 0x000336e4\npush { r0 }\npop { r5 }\nlsl r0,r1,#0x1\nsub r1,r2,r0\nldr r0,[sp,#0x30]\ncmp r0,r1\nblt 0x000336f2\npush { r0 }\npop { r1 }\nldr r0,[sp,#0x34]\ncmp r0,r2\nblt 0x000336fc\npush { r0 }\npop { r2 }\nsub r3,#0x1\nldr r0,[sp,#0x28]\nadd r0,r0,r3\ncmp r0,#0x0\npush { r6 }\npop { r0 }\npush { r0 }\npop { r4 }\nldr r6,[sp,#0x38]\nstr r1,[sp,#0x30]\nstr r5,[sp,#0x2c]\nstr r2,[sp,#0x34]\nbne 0x00033696\nstr r0,[sp,#0xc]\nstr r5,[sp,#0x18]\nstr r2,[sp,#0x2c]\nstr r1,[sp,#0x0]\nldr r0,[sp,#0x24]\nsub r0,r0,r1\nldr r4,[sp,#0x10]\ncmp r0,r4\npush { r4 }\npop { r6 }\nblt 0x00033730\npush { r0 }\npop { r6 }\nmov r2,#0x1\nmov r0,#0x0\nldr r1,[sp,#0x28]\ncmp r1,#0x1\nblt 0x000337dc\nldr r1,[0x00033910]\nadd r1,pc\nldr r3,[r1,#0x0]\npush { r0 }\npop { r4 }\nstr r2,[sp,#0x34]\nlsl r5,r4,#0x2\nldr r1,[sp,#0x14]\nldr r1,[r1,r5]\nsub r1,r6,r1\nldr r5,[r3,r5]\nlsl r5,r5,#0x1\ncmp r1,r5\nbgt 0x0003375a\npush { r0 }\npop { r2 }\ncmp r1,r5\nbgt 0x00033760\nstr r0,[sp,#0x34]\nadd r4,#0x1\ncmp r1,r5\nble 0x0003376c\nldr r1,[sp,#0x28]\ncmp r4,r1\nblt 0x00033746\ncmp r2,#0x1\nbne 0x000337e8\nldr r0,[sp,#0x24]\nldr r1,[sp,#0x18]\nsub r1,r0,r1\nldr r4,[sp,#0x10]\ncmp r1,r4\npush { r4 }\npop { r0 }\nblt 0x00033784\npush { r1 }\npop { r0 }\nmov r2,#0x1\nmov r6,#0x0\nldr r1,[sp,#0x28]\ncmp r1,#0x1\nblt 0x000337ee\nstr r2,[sp,#0x30]\nldr r1,[0x00033914]\nadd r1,pc\nldr r1,[r1,#0x0]\npush { r6 }\npop { r3 }\nldr r2,[sp,#0x14]\nlsl r5,r3,#0x2\nldr r4,[r2,r5]\nsub r4,r0,r4\nldr r5,[r1,r5]\nlsl r5,r5,#0x2\ncmp r4,r5\nbgt 0x000337ac\nstr r6,[sp,#0x30]\nadd r3,#0x1\ncmp r4,r5\nble 0x000337b8\nldr r4,[sp,#0x28]\ncmp r3,r4\nblt 0x0003379c\nldr r6,[sp,#0x1c]\nldr r4,[sp,#0x10]\nldr r0,[sp,#0x38]\nldr r1,[sp,#0x4]\nldr r5,[sp,#0x34]\nldr r2,[sp,#0x30]\nb 0x000337f6\nstr r1,[sp,#0x8]\nstr r3,[sp,#0xc]\npush { r3 }\npop { r0 }\nstr r3,[sp,#0x0]\nstr r3,[sp,#0x18]\nstr r3,[sp,#0x2c]\npush { r5 }\npop { r2 }\nldr r1,[sp,#0x4]\nb 0x000337f6\npush { r2 }\npop { r5 }\nldr r6,[sp,#0x1c]\nldr r0,[sp,#0x38]\nldr r1,[sp,#0x4]\nb 0x000337f6\nldr r6,[sp,#0x1c]\nldr r4,[sp,#0x10]\nb 0x000337f0\nldr r6,[sp,#0x1c]\nldr r0,[sp,#0x38]\nldr r1,[sp,#0x4]\nldr r5,[sp,#0x34]\nstr r0,[sp,#0x38]\ncmp r2,#0x0\npush { r0 }\npop { r2 }\nbeq 0x00033802\nldr r2,[sp,#0x18]\ncmp r5,#0x0\nldr r0,[sp,#0xc]\nbeq 0x0003380a\nldr r0,[sp,#0x0]\nldr r1,[r1,#0x1c]\ncmp r1,#0x2\nbeq 0x00033814\npush { r0 }\npop { r2 }\nstr r4,[sp,#0x10]\ncmp r1,#0x2\nbeq 0x0003381e\nldr r1,[sp,#0xc]\nstr r1,[sp,#0x38]\nldr r3,[sp,#0xc]\ncmp r3,r0\npush { r3 }\npop { r4 }\nblt 0x0003382c\npush { r0 }\npop { r4 }\nldr r1,[sp,#0x38]\ncmp r4,r1\nblt 0x00033834\nldr r4,[sp,#0x38]\ncmp r4,r2\nblt 0x0003383c\npush { r2 }\npop { r4 }\nldr r5,[sp,#0x2c]\ncmp r5,r4\npush { r4 }\npop { r1 }\nbgt 0x0003384a\npush { r5 }\npop { r1 }\nldr r5,[sp,#0x24]\nsub r1,r5,r1\nldr r5,[sp,#0x10]\ncmp r1,r5\nblt 0x00033856\nstr r1,[sp,#0x10]\ncmp r3,r4\nldr r3,[sp,#0x8]\nbne 0x0003386e\nldr r0,[0x00033918]\nmov r1,#0x0\nstr r1,[r3,r0]\nmov r0,#0x97\nlsl r0,r0,#0x5\nstr r1,[r3,r0]\nldr r0,[0x00033920]\nadd r0,pc\nb 0x00033898\ncmp r0,r4\nbne 0x00033880\nldr r0,[0x00033918]\nmov r1,#0x0\nstr r1,[r3,r0]\nmov r0,#0x97\nlsl r0,r0,#0x5\nmov r1,#0x1\nb 0x000338aa\nldr r0,[sp,#0x38]\ncmp r0,r4\nbne 0x0003389c\nldr r0,[0x00033918]\nmov r1,#0x1\nstr r1,[r3,r0]\nmov r0,#0x97\nlsl r0,r0,#0x5\nmov r1,#0x0\nstr r1,[r3,r0]\nldr r0,[0x0003391c]\nadd r0,pc\nstr r0,[sp,#0x20]\nb 0x000338ac\ncmp r2,r4\nbne 0x000338ac\nldr r0,[0x00033918]\nmov r1,#0x1\nstr r1,[r3,r0]\nmov r0,#0x97\nlsl r0,r0,#0x5\nstr r1,[r3,r0]\nldr r4,[sp,#0x10]\nldr r0,[0x00033924]\nstr r4,[r3,r0]\nadd r0,r3,r0\ncmp r4,#0x0\nblt 0x000338c0\ncmp r4,#0xff\nble 0x000338c4\nmov r1,#0xff\nb 0x000338c2\nmov r1,#0x0\nstr r1,[r0,#0x0]\nmov r0,#0x0\nlsl r1,r0,#0x2\nldr r3,[r6,r1]\nsub r5,r3,r4\nadd r3,sp,#0x3c\nstr r5,[r3,r1]\nadd r0,#0x1\ncmp r0,#0x27\nbne 0x000338c6\nadd r4,sp,#0x3c\nldr r0,[sp,#0x8]\nldr r1,[sp,#0x14]\npush { r4 }\npop { r2 }\nldr r3,[sp,#0x20]\nbl 0x00034070\nldr r0,[0x00033928]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0xd8]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x000338fa\nadd sp,#0xdc\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p3357
S'f0 b5\n03 af\nb7 b0\n09 93\n05 92\n02 b4\n40 bc\n01 b4\n20 bc\naf 48\n78 44\n00 68\n00 68\n36 90\ne9 68\nc8 6c\n02 28\n03 d0\n01 91\nac 48\n78 44\n02 e0\n01 91\na9 48\n78 44\n08 90\n13 20\n00 02\n29 69\n6c 69\n08 58\n0a 90\n01 25\n00 23\n01 28\n00 da\na5 e0\n04 94\n02 91\n07 96\na2 48\n78 44\n00 68\n06 90\n08 b4\n10 bc\n08 b4\n40 bc\n0c 93\n0b 93\n0d 93\n99 00\n07 9a\n55 1a\n2d 68\n09 9a\n50 1b\na2 4a\n7a 44\nd5 1a\n2d 78\naa 00\n82 1a\n96 42\n01 db\n40 b4\n04 bc\n0e 92\n6a 00\n86 1a\nb4 42\n01 db\n10 b4\n40 bc\n08 9a\nd2 1a\n12 78\n06 9c\n61 1a\n09 68\n51 18\n8a 00\n85 1a\n01 b4\n04 bc\n0b 98\na8 42\n01 db\n01 b4\n20 bc\n48 00\n11 1a\n0c 98\n88 42\n01 db\n01 b4\n02 bc\n0d 98\n90 42\n01 db\n01 b4\n04 bc\n01 3b\n0a 98\nc0 18\n00 28\n40 b4\n01 bc\n01 b4\n10 bc\n0e 9e\n0c 91\n0b 95\n0d 92\nbf d1\n03 90\n06 95\n0b 92\n00 91\n09 98\n40 1a\n04 9c\na0 42\n10 b4\n40 bc\n01 db\n01 b4\n40 bc\n01 22\n00 20\n0a 99\n01 29\n50 db\n75 49\n79 44\n0b 68\n01 b4\n10 bc\n0d 92\na5 00\n05 99\n49 59\n71 1a\n5d 59\n6d 00\na9 42\n01 dc\n01 b4\n04 bc\na9 42\n00 dc\n0d 90\n01 34\na9 42\n02 dd\n0a 99\n8c 42\nec db\n01 2a\n3b d1\n09 98\n06 99\n41 1a\n04 9c\na1 42\n10 b4\n01 bc\n01 db\n02 b4\n01 bc\n01 22\n00 26\n0a 99\n01 29\n2f db\n0c 92\n60 49\n79 44\n09 68\n40 b4\n08 bc\n05 9a\n9d 00\n54 59\n04 1b\n4d 59\nad 00\nac 42\n00 dc\n0c 96\n01 33\nac 42\n02 dd\n0a 9c\na3 42\nf1 db\n07 9e\n04 9c\n0e 98\n01 99\n0d 9d\n0c 9a\n17 e0\n02 91\n03 93\n08 b4\n01 bc\n00 93\n06 93\n0b 93\n20 b4\n04 bc\n01 99\n0c e0\n04 b4\n20 bc\n07 9e\n0e 98\n01 99\n06 e0\n07 9e\n04 9c\n00 e0\n07 9e\n0e 98\n01 99\n0d 9d\n0e 90\n00 2a\n01 b4\n04 bc\n00 d0\n06 9a\n00 2d\n03 98\n00 d0\n00 98\nc9 69\n02 29\n01 d0\n01 b4\n04 bc\n04 94\n02 29\n01 d0\n03 99\n0e 91\n03 9b\n83 42\n08 b4\n10 bc\n01 db\n01 b4\n10 bc\n0e 99\n8c 42\n00 db\n0e 9c\n94 42\n01 db\n04 b4\n10 bc\n0b 9d\na5 42\n10 b4\n02 bc\n01 dc\n20 b4\n02 bc\n09 9d\n69 1a\n04 9d\na9 42\n00 db\n04 91\na3 42\n02 9b\n08 d1\n2e 48\n00 21\n19 50\n97 20\n40 01\n19 50\n2d 48\n78 44\n14 e0\na0 42\n06 d1\n29 48\n00 21\n19 50\n97 20\n40 01\n01 21\n14 e0\n0e 98\na0 42\n0a d1\n24 48\n01 21\n19 50\n97 20\n40 01\n00 21\n19 50\n21 48\n78 44\n08 90\n07 e0\na2 42\n05 d1\n1d 48\n01 21\n19 50\n97 20\n40 01\n19 50\n04 9c\n1d 48\n1c 50\n18 18\n00 2c\n03 db\nff 2c\n03 dd\nff 21\n00 e0\n00 21\n01 60\n00 20\n81 00\n73 58\n1d 1b\n0f ab\n5d 50\n01 30\n27 28\nf7 d1\n0f ac\n02 98\n05 99\n10 b4\n04 bc\n08 9b\n00 f0 c5 fb\n10 48\n78 44\n00 68\n00 68\n36 99\n40 1a\n00 28\n01 d1\n37 b0\nf0 bd\n04 f0 59 f8\n'
p3358
S'.text:00033630\n.text:00033632\n.text:00033634\n.text:00033636\n.text:00033638\n.text:0003363a\n.text:0003363c\n.text:0003363e\n.text:00033640\n.text:00033642\n.text:00033644\n.text:00033646\n.text:00033648\n.text:0003364a\n.text:0003364c\n.text:0003364e\n.text:00033650\n.text:00033652\n.text:00033654\n.text:00033656\n.text:00033658\n.text:0003365a\n.text:0003365c\n.text:0003365e\n.text:00033660\n.text:00033662\n.text:00033664\n.text:00033666\n.text:00033668\n.text:0003366a\n.text:0003366c\n.text:0003366e\n.text:00033670\n.text:00033672\n.text:00033674\n.text:00033676\n.text:00033678\n.text:0003367a\n.text:0003367c\n.text:0003367e\n.text:00033680\n.text:00033682\n.text:00033684\n.text:00033686\n.text:00033688\n.text:0003368a\n.text:0003368c\n.text:0003368e\n.text:00033690\n.text:00033692\n.text:00033694\n.text:00033696\n.text:00033698\n.text:0003369a\n.text:0003369c\n.text:0003369e\n.text:000336a0\n.text:000336a2\n.text:000336a4\n.text:000336a6\n.text:000336a8\n.text:000336aa\n.text:000336ac\n.text:000336ae\n.text:000336b0\n.text:000336b2\n.text:000336b4\n.text:000336b6\n.text:000336b8\n.text:000336ba\n.text:000336bc\n.text:000336be\n.text:000336c0\n.text:000336c2\n.text:000336c4\n.text:000336c6\n.text:000336c8\n.text:000336ca\n.text:000336cc\n.text:000336ce\n.text:000336d0\n.text:000336d2\n.text:000336d4\n.text:000336d6\n.text:000336d8\n.text:000336da\n.text:000336dc\n.text:000336de\n.text:000336e0\n.text:000336e2\n.text:000336e4\n.text:000336e6\n.text:000336e8\n.text:000336ea\n.text:000336ec\n.text:000336ee\n.text:000336f0\n.text:000336f2\n.text:000336f4\n.text:000336f6\n.text:000336f8\n.text:000336fa\n.text:000336fc\n.text:000336fe\n.text:00033700\n.text:00033702\n.text:00033704\n.text:00033706\n.text:00033708\n.text:0003370a\n.text:0003370c\n.text:0003370e\n.text:00033710\n.text:00033712\n.text:00033714\n.text:00033716\n.text:00033718\n.text:0003371a\n.text:0003371c\n.text:0003371e\n.text:00033720\n.text:00033722\n.text:00033724\n.text:00033726\n.text:00033728\n.text:0003372a\n.text:0003372c\n.text:0003372e\n.text:00033730\n.text:00033732\n.text:00033734\n.text:00033736\n.text:00033738\n.text:0003373a\n.text:0003373c\n.text:0003373e\n.text:00033740\n.text:00033742\n.text:00033744\n.text:00033746\n.text:00033748\n.text:0003374a\n.text:0003374c\n.text:0003374e\n.text:00033750\n.text:00033752\n.text:00033754\n.text:00033756\n.text:00033758\n.text:0003375a\n.text:0003375c\n.text:0003375e\n.text:00033760\n.text:00033762\n.text:00033764\n.text:00033766\n.text:00033768\n.text:0003376a\n.text:0003376c\n.text:0003376e\n.text:00033770\n.text:00033772\n.text:00033774\n.text:00033776\n.text:00033778\n.text:0003377a\n.text:0003377c\n.text:0003377e\n.text:00033780\n.text:00033782\n.text:00033784\n.text:00033786\n.text:00033788\n.text:0003378a\n.text:0003378c\n.text:0003378e\n.text:00033790\n.text:00033792\n.text:00033794\n.text:00033796\n.text:00033798\n.text:0003379a\n.text:0003379c\n.text:0003379e\n.text:000337a0\n.text:000337a2\n.text:000337a4\n.text:000337a6\n.text:000337a8\n.text:000337aa\n.text:000337ac\n.text:000337ae\n.text:000337b0\n.text:000337b2\n.text:000337b4\n.text:000337b6\n.text:000337b8\n.text:000337ba\n.text:000337bc\n.text:000337be\n.text:000337c0\n.text:000337c2\n.text:000337c4\n.text:000337c6\n.text:000337c8\n.text:000337ca\n.text:000337cc\n.text:000337ce\n.text:000337d0\n.text:000337d2\n.text:000337d4\n.text:000337d6\n.text:000337d8\n.text:000337da\n.text:000337dc\n.text:000337de\n.text:000337e0\n.text:000337e2\n.text:000337e4\n.text:000337e6\n.text:000337e8\n.text:000337ea\n.text:000337ec\n.text:000337ee\n.text:000337f0\n.text:000337f2\n.text:000337f4\n.text:000337f6\n.text:000337f8\n.text:000337fa\n.text:000337fc\n.text:000337fe\n.text:00033800\n.text:00033802\n.text:00033804\n.text:00033806\n.text:00033808\n.text:0003380a\n.text:0003380c\n.text:0003380e\n.text:00033810\n.text:00033812\n.text:00033814\n.text:00033816\n.text:00033818\n.text:0003381a\n.text:0003381c\n.text:0003381e\n.text:00033820\n.text:00033822\n.text:00033824\n.text:00033826\n.text:00033828\n.text:0003382a\n.text:0003382c\n.text:0003382e\n.text:00033830\n.text:00033832\n.text:00033834\n.text:00033836\n.text:00033838\n.text:0003383a\n.text:0003383c\n.text:0003383e\n.text:00033840\n.text:00033842\n.text:00033844\n.text:00033846\n.text:00033848\n.text:0003384a\n.text:0003384c\n.text:0003384e\n.text:00033850\n.text:00033852\n.text:00033854\n.text:00033856\n.text:00033858\n.text:0003385a\n.text:0003385c\n.text:0003385e\n.text:00033860\n.text:00033862\n.text:00033864\n.text:00033866\n.text:00033868\n.text:0003386a\n.text:0003386c\n.text:0003386e\n.text:00033870\n.text:00033872\n.text:00033874\n.text:00033876\n.text:00033878\n.text:0003387a\n.text:0003387c\n.text:0003387e\n.text:00033880\n.text:00033882\n.text:00033884\n.text:00033886\n.text:00033888\n.text:0003388a\n.text:0003388c\n.text:0003388e\n.text:00033890\n.text:00033892\n.text:00033894\n.text:00033896\n.text:00033898\n.text:0003389a\n.text:0003389c\n.text:0003389e\n.text:000338a0\n.text:000338a2\n.text:000338a4\n.text:000338a6\n.text:000338a8\n.text:000338aa\n.text:000338ac\n.text:000338ae\n.text:000338b0\n.text:000338b2\n.text:000338b4\n.text:000338b6\n.text:000338b8\n.text:000338ba\n.text:000338bc\n.text:000338be\n.text:000338c0\n.text:000338c2\n.text:000338c4\n.text:000338c6\n.text:000338c8\n.text:000338ca\n.text:000338cc\n.text:000338ce\n.text:000338d0\n.text:000338d2\n.text:000338d4\n.text:000338d6\n.text:000338d8\n.text:000338da\n.text:000338dc\n.text:000338de\n.text:000338e0\n.text:000338e2\n.text:000338e6\n.text:000338e8\n.text:000338ea\n.text:000338ec\n.text:000338ee\n.text:000338f0\n.text:000338f2\n.text:000338f4\n.text:000338f6\n.text:000338f8\n.text:000338fa\n'
p3359
tp3360
sS'lame_get_noATH'
p3361
(S'\n__stdcall lame_get_noATH()\n'
p3362
V\u000aundefined4 lame_get_noATH(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0xd8);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3363
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x0\ncmp r1,#0x0\nbeq 0x0002ec10\nmov r0,#0xd8\nldr r0,[r4,r0]\npop { r4, r6, r7, pc }\n'
p3364
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 17 fc\n01 b4\n02 bc\n00 20\n00 29\n01 d0\nd8 20\n20 58\nd0 bd\n'
p3365
S'.text:0002ebf6\n.text:0002ebf8\n.text:0002ebfa\n.text:0002ebfc\n.text:0002ebfe\n.text:0002ec02\n.text:0002ec04\n.text:0002ec06\n.text:0002ec08\n.text:0002ec0a\n.text:0002ec0c\n.text:0002ec0e\n.text:0002ec10\n'
p3366
tp3367
sS'lame_errorf'
p3368
(S'\n__stdcall lame_errorf()\n'
p3369
V\u000avoid lame_errorf(void)\u000a\u000a{\u000a  (*(compute_flushbits + DAT_0003799c))();\u000a  return;\u000a}\u000a\u000a
p3370
S'ldr r12,[0x3799c]\nadd pc,r12,pc\n'
p3371
S'00 c0 9f e5\n0f f0 8c e0\n'
p3372
S'.text:00037994\n.text:00037998\n'
p3373
tp3374
sS'id3tag_init'
p3375
(S'\n__stdcall id3tag_init()\n'
p3376
V\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000avoid id3tag_init(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  undefined4 uVar3;\u000a  char *__format;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  char acStack1048 [1028];\u000a  \u000a  iVar1 = **(int **)(DAT_0001c984 + 0x1c8d0);\u000a  iVar6 = *(int *)(iParm1 + 0x120);\u000a  free_id3tag(iVar6);\u000a  __aeabi_memclr8(iVar6 + DAT_0001c988,0x38);\u000a  *(undefined4 *)(iVar6 + DAT_0001c98c) = 0xff;\u000a  *(undefined4 *)(iVar6 + DAT_0001c990) = 0x80;\u000a  pcVar4 = (char *)get_lame_os_bitness();\u000a  pcVar2 = (char *)get_lame_version();\u000a  pcVar5 = (char *)get_lame_url();\u000a  if (*pcVar4 == 0) {\u000a    __format = (char *)(DAT_0001c998 + 0x1c936);\u000a    pcVar4 = pcVar2;\u000a  }\u000a  else {\u000a    __format = (char *)(DAT_0001c994 + 0x1c926);\u000a    pcVar5 = pcVar2;\u000a  }\u000a  sprintf(acStack1048,__format,pcVar4,pcVar5);\u000a  iVar6 = DAT_0001c988;\u000a  iVar7 = *(int *)(iParm1 + 0x120);\u000a  if (iVar7 != 0) {\u000a    uVar3 = *(undefined4 *)(iVar7 + DAT_0001c988);\u000a    id3v2_add_latin1(iParm1,DAT_0001c99c,DAT_0001c9a0 + 0x1c958,0,acStack1048);\u000a    *(undefined4 *)(iVar7 + iVar6) = uVar3;\u000a  }\u000a  if (**(int **)(DAT_0001c9a4 + 0x1c96a) == iVar1) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3377
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x1fc\nsub sp,#0x1fc\nsub sp,#0x1c\nadd r1,sp,#0xc\nstr r1,[sp,#0x8]\npush { r0 }\npop { r4 }\nldr r0,[0x0001c984]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r1,#0x0]\nmov r0,#0x9\nlsl r6,r0,#0x5\nldr r5,[r4,r6]\npush { r5 }\npop { r0 }\nbl 0x00037c40\nldr r0,[0x0001c988]\nadd r0,r5,r0\nmov r1,#0x38\nbl 0x000379f0\nldr r0,[0x0001c98c]\nmov r1,#0xff\nstr r1,[r5,r0]\nldr r0,[0x0001c990]\nmov r1,#0x80\nstr r1,[r5,r0]\nadd r0,r4,r6\nstr r0,[sp,#0x4]\nbl 0x00037c50\npush { r0 }\npop { r6 }\nbl 0x00037c60\npush { r0 }\npop { r5 }\nbl 0x00037c70\npush { r0 }\npop { r3 }\nldrb r0,[r6,#0x0]\ncmp r0,#0x0\nbeq 0x0001c92e\nmov r0,sp\nstr r3,[r0,#0x0]\nadd r0,sp,#0x10\nldr r1,[0x0001c994]\nadd r1,pc\npush { r6 }\npop { r2 }\npush { r5 }\npop { r3 }\nb 0x0001c938\nadd r0,sp,#0x10\nldr r1,[0x0001c998]\nadd r1,pc\npush { r5 }\npop { r2 }\nbl 0x00037c80\nldr r0,[sp,#0x4]\nldr r5,[r0,#0x0]\ncmp r5,#0x0\nbeq 0x0001c964\nldr r6,[0x0001c988]\nldr r0,[r5,r6]\nstr r0,[sp,#0x4]\nadd r0,sp,#0x10\nmov r1,sp\nstr r0,[r1,#0x0]\nldr r1,[0x0001c99c]\nldr r2,[0x0001c9a0]\nadd r2,pc\nmov r3,#0x0\npush { r4 }\npop { r0 }\nbl 0x0001d3b0\nldr r0,[sp,#0x4]\nstr r0,[r5,r6]\nldr r0,[0x0001c9a4]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nldr r1,[sp,#0x8]\nldr r1,[r1,#0x0]\nsub r0,r0,r1\ncmp r0,#0x0\nbne 0x0001c97e\nsub r4,r7,#0x7\nsub r4,#0x5\nmov sp,r4\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p3378
S'f0 b5\n03 af\nff b0\nff b0\n87 b0\n03 a9\n02 91\n01 b4\n10 bc\n2e 48\n78 44\n00 68\n00 68\n08 60\n09 20\n46 01\na5 59\n20 b4\n01 bc\n1b f0 af f9\n29 48\n28 18\n38 21\n1b f0 82 f8\n27 48\nff 21\n29 50\n27 48\n80 21\n29 50\na0 19\n01 90\n1b f0 a8 f9\n01 b4\n40 bc\n1b f0 ac f9\n01 b4\n20 bc\n1b f0 b0 f9\n01 b4\n08 bc\n30 78\n00 28\n09 d0\n68 46\n03 60\n04 a8\n1c 49\n79 44\n40 b4\n04 bc\n20 b4\n08 bc\n04 e0\n04 a8\n19 49\n79 44\n20 b4\n04 bc\n1b f0 a2 f9\n01 98\n05 68\n00 2d\n0f d0\n10 4e\na8 59\n01 90\n04 a8\n69 46\n08 60\n12 49\n13 4a\n7a 44\n00 23\n10 b4\n01 bc\n00 f0 28 fd\n01 98\na8 51\n0f 48\n78 44\n00 68\n00 68\n02 99\n09 68\n40 1a\n00 28\n03 d1\nfc 1f\n05 3c\na5 46\nf0 bd\n1b f0 17 f8\n'
p3379
S'.text:0001c8b8\n.text:0001c8ba\n.text:0001c8bc\n.text:0001c8be\n.text:0001c8c0\n.text:0001c8c2\n.text:0001c8c4\n.text:0001c8c6\n.text:0001c8c8\n.text:0001c8ca\n.text:0001c8cc\n.text:0001c8ce\n.text:0001c8d0\n.text:0001c8d2\n.text:0001c8d4\n.text:0001c8d6\n.text:0001c8d8\n.text:0001c8da\n.text:0001c8dc\n.text:0001c8de\n.text:0001c8e2\n.text:0001c8e4\n.text:0001c8e6\n.text:0001c8e8\n.text:0001c8ec\n.text:0001c8ee\n.text:0001c8f0\n.text:0001c8f2\n.text:0001c8f4\n.text:0001c8f6\n.text:0001c8f8\n.text:0001c8fa\n.text:0001c8fc\n.text:0001c900\n.text:0001c902\n.text:0001c904\n.text:0001c908\n.text:0001c90a\n.text:0001c90c\n.text:0001c910\n.text:0001c912\n.text:0001c914\n.text:0001c916\n.text:0001c918\n.text:0001c91a\n.text:0001c91c\n.text:0001c91e\n.text:0001c920\n.text:0001c922\n.text:0001c924\n.text:0001c926\n.text:0001c928\n.text:0001c92a\n.text:0001c92c\n.text:0001c92e\n.text:0001c930\n.text:0001c932\n.text:0001c934\n.text:0001c936\n.text:0001c938\n.text:0001c93c\n.text:0001c93e\n.text:0001c940\n.text:0001c942\n.text:0001c944\n.text:0001c946\n.text:0001c948\n.text:0001c94a\n.text:0001c94c\n.text:0001c94e\n.text:0001c950\n.text:0001c952\n.text:0001c954\n.text:0001c956\n.text:0001c958\n.text:0001c95a\n.text:0001c95c\n.text:0001c960\n.text:0001c962\n.text:0001c964\n.text:0001c966\n.text:0001c968\n.text:0001c96a\n.text:0001c96c\n.text:0001c96e\n.text:0001c970\n.text:0001c972\n.text:0001c974\n.text:0001c976\n.text:0001c978\n.text:0001c97a\n.text:0001c97c\n.text:0001c97e\n'
p3380
tp3381
sS'FUN_000357cc'
p3382
(S'\n__stdcall FUN_000357cc()\n'
p3383
V\u000aulonglong FUN_000357cc(uint uParm1,uint uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint unaff_r4;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint in_r12;\u000a  bool bVar5;\u000a  \u000a  uVar3 = in_r12 & uParm4 >> 0x14;\u000a  if (unaff_r4 == in_r12 || uVar3 == in_r12) {\u000a    bVar5 = (uParm1 | uParm2 << 1) == 0;\u000a    uVar4 = uParm3;\u000a    uVar1 = uParm4;\u000a    if (!bVar5) {\u000a      bVar5 = (uParm3 | uParm4 << 1) == 0;\u000a      uVar4 = uParm1;\u000a      uVar1 = uParm2;\u000a    }\u000a    uVar2 = uVar1;\u000a    if (((!bVar5) && ((unaff_r4 != in_r12 || (uVar2 = uVar1, (uVar4 | uVar1 << 0xc) == 0)))) &&\u000a       ((uVar3 != in_r12 || (uVar4 = uParm3, uVar2 = uParm4, (uParm3 | uParm4 << 0xc) == 0)))) {\u000a      return (ulonglong)((uVar1 ^ uParm4) & 0x80000000 | 0x7ff00000);\u000a    }\u000a    return CONCAT44(uVar4,uVar2) | 0x7ff80000;\u000a  }\u000a  bVar5 = (uParm1 | uParm2 << 1) == 0;\u000a  if (!bVar5) {\u000a    bVar5 = (uParm3 | uParm4 << 1) == 0;\u000a  }\u000a  if (bVar5) {\u000a    return (ulonglong)((uParm2 ^ uParm4) & 0x80000000);\u000a  }\u000a  if (unaff_r4 == 0) {\u000a    uVar4 = uParm2 & 0x80000000;\u000a    do {\u000a      uVar1 = uParm1 >> 0x1f;\u000a      uParm1 = uParm1 << 1;\u000a      uParm2 = uParm2 * 2 + uVar1;\u000a    } while ((uParm2 & 0x100000) == 0);\u000a    uParm2 = uParm2 | uVar4;\u000a    if (uVar3 != 0) {\u000a      return CONCAT44(uParm1,uParm2);\u000a    }\u000a  }\u000a  do {\u000a    uVar3 = uParm3 >> 0x1f;\u000a    uParm3 = uParm3 << 1;\u000a    uParm4 = uParm4 * 2 + uVar3;\u000a  } while ((uParm4 & 0x100000) == 0);\u000a  return CONCAT44(uParm1,uParm2);\u000a}\u000a\u000a
p3384
S'teq r4,r12\nand r5,r12,r3, lsr #0x14\nteqne r5,r12\nbeq 0x000357f8\norrs r6,r0,r1, lsl #0x1\norrnes r6,r2,r3, lsl #0x1\nbne 0x00035780\neor r1,r1,r3\nand r1,r1,#0x80000000\nmov r0,#0x0\nldmia sp!,{ r4 r5 r6 pc }\norrs r6,r0,r1, lsl #0x1\ncpyeq r0,r2\ncpyeq r1,r3\norrnes r6,r2,r3, lsl #0x1\nbeq 0x0003584c\nteq r4,r12\nbne 0x0003581c\norrs r6,r0,r1, lsl #0xc\nbne 0x0003584c\nteq r5,r12\nbne 0x00035834\norrs r6,r2,r3, lsl #0xc\ncpyne r0,r2\ncpyne r1,r3\nbne 0x0003584c\neor r1,r1,r3\n'
p3385
S'0c 00 34 e1\n23 5a 0c e0\n0c 00 35 11\n06 00 00 0a\n81 60 90 e1\n83 60 92 11\ne5 ff ff 1a\n03 10 21 e0\n02 11 01 e2\n00 00 a0 e3\n70 80 bd e8\n81 60 90 e1\n02 00 a0 01\n03 10 a0 01\n83 60 92 11\n0f 00 00 0a\n0c 00 34 e1\n01 00 00 1a\n01 66 90 e1\n0b 00 00 1a\n0c 00 35 e1\n03 00 00 1a\n03 66 92 e1\n02 00 a0 11\n03 10 a0 11\n05 00 00 1a\n03 10 21 e0\n'
p3386
S'.text:000357cc\n.text:000357d0\n.text:000357d4\n.text:000357d8\n.text:000357dc\n.text:000357e0\n.text:000357e4\n.text:000357e8\n.text:000357ec\n.text:000357f0\n.text:000357f4\n.text:000357f8\n.text:000357fc\n.text:00035800\n.text:00035804\n.text:00035808\n.text:0003580c\n.text:00035810\n.text:00035814\n.text:00035818\n.text:0003581c\n.text:00035820\n.text:00035824\n.text:00035828\n.text:0003582c\n.text:00035830\n.text:00035834\n'
p3387
tp3388
sS'lame_set_noATH'
p3389
(S'\n__stdcall lame_set_noATH()\n'
p3390
V\u000aundefined4 lame_set_noATH(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0xd8) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3391
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002ebf4\nmov r0,#0xd8\nstr r4,[r5,r0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3392
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 28 fc\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n03 d0\nd8 20\n2c 50\n04 b4\n01 bc\nb0 bd\n'
p3393
S'.text:0002ebd0\n.text:0002ebd2\n.text:0002ebd4\n.text:0002ebd6\n.text:0002ebd8\n.text:0002ebda\n.text:0002ebdc\n.text:0002ebe0\n.text:0002ebe2\n.text:0002ebe4\n.text:0002ebe6\n.text:0002ebe8\n.text:0002ebea\n.text:0002ebec\n.text:0002ebee\n.text:0002ebf0\n.text:0002ebf2\n.text:0002ebf4\n'
p3394
tp3395
sS'add_dummy_byte'
p3396
(S'\n__stdcall add_dummy_byte()\n'
p3397
V\u000avoid add_dummy_byte(void)\u000a\u000a{\u000a  (*(lame_get_id3v1_tag + DAT_00037d7c))();\u000a  return;\u000a}\u000a\u000a
p3398
S'ldr r12,[0x37d7c]\nadd pc,r12,pc\n'
p3399
S'00 c0 9f e5\n0f f0 8c e0\n'
p3400
S'.text:00037d74\n.text:00037d78\n'
p3401
tp3402
sS'__gesf2'
p3403
(S'\n__stdcall __gesf2()\n'
p3404
V\u000auint __gesf2(uint uParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  \u000a  uVar1 = uParm1 * 2;\u000a  uVar2 = uParm2 * 2;\u000a  bVar5 = ~((int)uVar1 >> 0x18) == 0;\u000a  if (!bVar5) {\u000a    bVar5 = ~((int)uVar2 >> 0x18) == 0;\u000a  }\u000a  if ((bVar5) &&\u000a     (((~((int)uVar1 >> 0x18) == 0 && ((uParm1 & 0x7fffff) != 0)) ||\u000a      ((~((int)uVar2 >> 0x18) == 0 && ((uParm2 & 0x7fffff) != 0)))))) {\u000a    return 0xffffffff;\u000a  }\u000a  uVar3 = uVar1 | uParm2 & 0x7fffffff;\u000a  bVar5 = uVar3 == 0;\u000a  if (!bVar5) {\u000a    uVar3 = uParm1 ^ uParm2;\u000a    bVar5 = uVar3 == 0;\u000a  }\u000a  bVar4 = -1 < (int)uVar3;\u000a  if (bVar4) {\u000a    uParm1 = uVar1 + uParm2 * -2;\u000a    bVar5 = uParm1 == 0;\u000a  }\u000a  if ((bVar4 && uVar1 >= uVar2) && !bVar5) {\u000a    uParm1 = (int)uParm2 >> 0x1f;\u000a  }\u000a  if (!bVar4 || uVar1 < uVar2) {\u000a    uParm1 = ~((int)uParm2 >> 0x1f);\u000a  }\u000a  if (!bVar5) {\u000a    uParm1 = uParm1 | 1;\u000a  }\u000a  return uParm1;\u000a}\u000a\u000a
p3405
S'mvn r12,#0x0\nb 0x00036234\n'
p3406
S'00 c0 e0 e3\n02 00 00 ea\n'
p3407
S'.text:00036220\n.text:00036224\n'
p3408
tp3409
sS'choose_table_nonMMX'
p3410
(S'\n__stdcall choose_table_nonMMX()\n'
p3411
V\u000aint choose_table_nonMMX(uint *puParm1,uint *puParm2,int *piParm3)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  uint *puVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  \u000a  uVar9 = 0;\u000a  puVar8 = puParm1;\u000a  uVar10 = 0;\u000a  do {\u000a    uVar2 = puVar8[1];\u000a    if ((int)puVar8[1] <= (int)uVar10) {\u000a      uVar2 = uVar10;\u000a    }\u000a    uVar10 = *puVar8;\u000a    if ((int)*puVar8 <= (int)uVar9) {\u000a      uVar10 = uVar9;\u000a    }\u000a    uVar9 = uVar10;\u000a    puVar8 = puVar8 + 2;\u000a    uVar10 = uVar2;\u000a  } while (puVar8 < puParm2);\u000a  if ((int)uVar2 <= (int)uVar9) {\u000a    uVar2 = uVar9;\u000a  }\u000a  if (uVar2 < 0x10) {\u000a    iVar1 = (**(code **)(DAT_00030c68 + 0x30b3a + uVar2 * 4))(puParm1,puParm2,uVar2,piParm3);\u000a  }\u000a  else {\u000a    if (DAT_00030c4c <= uVar2) {\u000a      *piParm3 = DAT_00030c64;\u000a      return 0xffffffff;\u000a    }\u000a    iVar1 = 0;\u000a    do {\u000a      iVar3 = iVar1;\u000a      if (uVar2 - 0xf <= *(uint *)(*(int *)(DAT_00030c50 + 0x30b5e) + iVar3 * 0x10 + 0x184)) {\u000a        iVar3 = iVar3 + 0x18;\u000a        goto LAB_00030b82;\u000a      }\u000a      iVar1 = iVar3 + 1;\u000a    } while (iVar3 + 0x19 < 0x20);\u000a    iVar3 = iVar3 + 0x19;\u000aLAB_00030b82:\u000a    iVar1 = iVar3 + -8;\u000a    if (iVar1 < 0x18) {\u000a      iVar4 = iVar3;\u000a      do {\u000a        iVar1 = iVar4;\u000a        if (uVar2 - 0xf <= *(uint *)(*(int *)(DAT_00030c54 + 0x30b92) + iVar1 * 0x10 + -0x7c)) {\u000a          iVar1 = iVar1 + -8;\u000a          goto LAB_00030bba;\u000a        }\u000a        iVar4 = iVar1 + 1;\u000a      } while (iVar1 + -7 < 0x18);\u000a      iVar1 = iVar1 + -7;\u000a    }\u000aLAB_00030bba:\u000a    iVar4 = *(int *)(*(int *)(DAT_00030c58 + 0x30bc4) + iVar1 * 0x10) * 0x10000 +\u000a            *(int *)(*(int *)(DAT_00030c58 + 0x30bc4) + iVar3 * 0x10);\u000a    uVar10 = 0;\u000a    do {\u000a      uVar9 = *puParm1;\u000a      iVar6 = 0xf0;\u000a      if (uVar9 < 0xf) {\u000a        iVar6 = uVar9 << 4;\u000a      }\u000a      uVar5 = puParm1[1];\u000a      uVar2 = 0xf;\u000a      if (uVar5 < 0xf) {\u000a        uVar2 = uVar5;\u000a      }\u000a      uVar7 = uVar10 + iVar4;\u000a      if (uVar9 < 0xf) {\u000a        uVar7 = uVar10;\u000a      }\u000a      uVar7 = uVar7 + *(int *)(*(int *)(DAT_00030c5c + 0x30bd8) + (uVar2 + iVar6) * 4);\u000a      uVar10 = uVar7 + iVar4;\u000a      if (uVar5 < 0xf) {\u000a        uVar10 = uVar7;\u000a      }\u000a      puParm1 = puParm1 + 2;\u000a    } while (puParm1 < puParm2);\u000a    uVar2 = DAT_00030c60 & uVar10;\u000a    uVar10 = uVar10 >> 0x10;\u000a    uVar9 = uVar2;\u000a    if (uVar10 <= uVar2) {\u000a      uVar9 = uVar10;\u000a    }\u000a    *piParm3 = *piParm3 + uVar9;\u000a    if (uVar2 < uVar10) {\u000a      return iVar3;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p3412
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x14\nstr r2,[sp,#0x4]\nmov r6,#0x0\npush { r6 }\npop { r4 }\npush { r0 }\npop { r3 }\nldr r2,[r3,#0x4]\ncmp r6,r2\nblt 0x00030b0c\npush { r6 }\npop { r2 }\nldr r5,[r3,#0x0]\ncmp r4,r5\nblt 0x00030b16\npush { r4 }\npop { r5 }\nadd r3,#0x8\ncmp r3,r1\npush { r2 }\npop { r6 }\npush { r5 }\npop { r4 }\nbcc 0x00030b02\nstr r1,[sp,#0xc]\ncmp r5,r2\nblt 0x00030b2e\npush { r5 }\npop { r2 }\ncmp r2,#0xf\nbhi 0x00030b42\nlsl r1,r2,#0x2\nldr r3,[0x00030c68]\nadd r3,pc\nldr r4,[r3,r1]\nldr r1,[sp,#0xc]\nldr r3,[sp,#0x4]\nblx r4\nb 0x00030c3e\nldr r1,[0x00030c4c]\ncmp r2,r1\nbcc 0x00030b54\nldr r0,[0x00030c64]\nldr r1,[sp,#0x4]\nstr r0,[r1,#0x0]\nmov r0,#0x0\nmvn r4,r0\nb 0x00030c42\nsub r2,#0xf\nmov r4,#0x0\nldr r1,[0x00030c50]\nadd r1,pc\nldr r3,[r1,#0x0]\nlsl r1,r4,#0x4\nadd r1,r3,r1\nmov r5,#0x61\nlsl r5,r5,#0x2\nldr r1,[r1,r5]\ncmp r1,r2\nbcs 0x00030b80\nadd r1,r4,#0x1\nadd r4,#0x19\ncmp r4,#0x20\npush { r1 }\npop { r4 }\nblt 0x00030b5e\nadd r1,#0x18\npush { r1 }\npop { r4 }\nb 0x00030b82\nadd r4,#0x18\npush { r4 }\npop { r6 }\nsub r6,#0x8\ncmp r6,#0x17\nbgt 0x00030bba\nldr r1,[0x00030c54]\nadd r1,pc\nldr r5,[r1,#0x0]\npush { r4 }\npop { r3 }\nlsl r1,r3,#0x4\nadd r1,r5,r1\nmov r6,#0x7b\nmvn r6,r6\nldr r1,[r1,r6]\ncmp r1,r2\nbcs 0x00030bb4\nadd r6,r3,#0x1\nsub r1,r3,#0x7\ncmp r1,#0x18\npush { r6 }\npop { r3 }\nblt 0x00030b96\nsub r6,#0x8\nb 0x00030bba\nsub r3,#0x8\npush { r3 }\npop { r6 }\nstr r6,[sp,#0x0]\nlsl r1,r4,#0x4\nldr r2,[0x00030c58]\nadd r2,pc\nldr r2,[r2,#0x0]\nldr r1,[r2,r1]\nlsl r3,r6,#0x4\nldr r2,[r2,r3]\nlsl r2,r2,#0x10\nadd r1,r2,r1\nstr r1,[sp,#0x10]\nmov r6,#0x0\nldr r1,[0x00030c5c]\nadd r1,pc\nldr r1,[r1,#0x0]\nstr r1,[sp,#0x8]\nldr r5,[r0,#0x0]\nlsl r1,r5,#0x4\nmov r2,#0xf0\ncmp r5,#0xe\nbhi 0x00030be8\npush { r1 }\npop { r2 }\nldr r1,[r0,#0x4]\nmov r3,#0xf\ncmp r1,#0xe\nbhi 0x00030bf4\npush { r1 }\npop { r3 }\nadd r2,r3,r2\nlsl r2,r2,#0x2\nldr r3,[sp,#0x8]\nldr r2,[r3,r2]\nldr r3,[sp,#0x10]\nadd r3,r6,r3\ncmp r5,#0xe\nbhi 0x00030c08\npush { r6 }\npop { r3 }\nadd r2,r3,r2\nldr r3,[sp,#0x10]\nadd r6,r2,r3\ncmp r1,#0xe\nbhi 0x00030c16\npush { r2 }\npop { r6 }\nadd r0,#0x8\nldr r1,[sp,#0xc]\ncmp r0,r1\nbcc 0x00030bda\nldr r0,[0x00030c60]\nand r0,r6\nlsr r1,r6,#0x10\ncmp r1,r0\npush { r0 }\npop { r2 }\nbhi 0x00030c30\npush { r1 }\npop { r2 }\nldr r5,[sp,#0x4]\nldr r3,[r5,#0x0]\nadd r2,r3,r2\nstr r2,[r5,#0x0]\ncmp r1,r0\nldr r0,[sp,#0x0]\nbhi 0x00030c42\npush { r0 }\npop { r4 }\npush { r4 }\npop { r0 }\nadd sp,#0x14\npop { r4, r5, r6, r7, pc }\n'
p3413
S'f0 b5\n03 af\n85 b0\n01 92\n00 26\n40 b4\n10 bc\n01 b4\n08 bc\n5a 68\n96 42\n01 db\n40 b4\n04 bc\n1d 68\nac 42\n01 db\n10 b4\n20 bc\n08 33\n8b 42\n04 b4\n40 bc\n20 b4\n10 bc\nee d3\n03 91\n95 42\n01 db\n20 b4\n04 bc\n0f 2a\n07 d8\n91 00\n4c 4b\n7b 44\n5c 58\n03 99\n01 9b\na0 47\n7d e0\n42 49\n8a 42\n05 d3\n46 48\n01 99\n08 60\n00 20\nc4 43\n76 e0\n0f 3a\n00 24\n3d 49\n79 44\n0b 68\n21 01\n59 18\n61 25\nad 00\n49 59\n91 42\n09 d2\n61 1c\n19 34\n20 2c\n02 b4\n10 bc\nf2 db\n18 31\n02 b4\n10 bc\n00 e0\n18 34\n10 b4\n40 bc\n08 3e\n17 2e\n16 dc\n31 49\n79 44\n0d 68\n10 b4\n08 bc\n19 01\n69 18\n7b 26\nf6 43\n89 59\n91 42\n07 d2\n5e 1c\nd9 1f\n18 29\n40 b4\n08 bc\nf2 db\n08 3e\n02 e0\n08 3b\n08 b4\n40 bc\n00 96\n21 01\n26 4a\n7a 44\n12 68\n51 58\n33 01\nd2 58\n12 04\n51 18\n04 91\n00 26\n22 49\n79 44\n09 68\n02 91\n05 68\n29 01\nf0 22\n0e 2d\n01 d8\n02 b4\n04 bc\n41 68\n0f 23\n0e 29\n01 d8\n02 b4\n08 bc\n9a 18\n92 00\n02 9b\n9a 58\n04 9b\nf3 18\n0e 2d\n01 d8\n40 b4\n08 bc\n9a 18\n04 9b\nd6 18\n0e 29\n01 d8\n04 b4\n40 bc\n08 30\n03 99\n88 42\ndd d3\n10 48\n30 40\n31 0c\n81 42\n01 b4\n04 bc\n01 d8\n02 b4\n04 bc\n01 9d\n2b 68\n9a 18\n2a 60\n81 42\n00 98\n01 d8\n01 b4\n10 bc\n10 b4\n01 bc\n05 b0\nf0 bd\n'
p3414
S'.text:00030af0\n.text:00030af2\n.text:00030af4\n.text:00030af6\n.text:00030af8\n.text:00030afa\n.text:00030afc\n.text:00030afe\n.text:00030b00\n.text:00030b02\n.text:00030b04\n.text:00030b06\n.text:00030b08\n.text:00030b0a\n.text:00030b0c\n.text:00030b0e\n.text:00030b10\n.text:00030b12\n.text:00030b14\n.text:00030b16\n.text:00030b18\n.text:00030b1a\n.text:00030b1c\n.text:00030b1e\n.text:00030b20\n.text:00030b22\n.text:00030b24\n.text:00030b26\n.text:00030b28\n.text:00030b2a\n.text:00030b2c\n.text:00030b2e\n.text:00030b30\n.text:00030b32\n.text:00030b34\n.text:00030b36\n.text:00030b38\n.text:00030b3a\n.text:00030b3c\n.text:00030b3e\n.text:00030b40\n.text:00030b42\n.text:00030b44\n.text:00030b46\n.text:00030b48\n.text:00030b4a\n.text:00030b4c\n.text:00030b4e\n.text:00030b50\n.text:00030b52\n.text:00030b54\n.text:00030b56\n.text:00030b58\n.text:00030b5a\n.text:00030b5c\n.text:00030b5e\n.text:00030b60\n.text:00030b62\n.text:00030b64\n.text:00030b66\n.text:00030b68\n.text:00030b6a\n.text:00030b6c\n.text:00030b6e\n.text:00030b70\n.text:00030b72\n.text:00030b74\n.text:00030b76\n.text:00030b78\n.text:00030b7a\n.text:00030b7c\n.text:00030b7e\n.text:00030b80\n.text:00030b82\n.text:00030b84\n.text:00030b86\n.text:00030b88\n.text:00030b8a\n.text:00030b8c\n.text:00030b8e\n.text:00030b90\n.text:00030b92\n.text:00030b94\n.text:00030b96\n.text:00030b98\n.text:00030b9a\n.text:00030b9c\n.text:00030b9e\n.text:00030ba0\n.text:00030ba2\n.text:00030ba4\n.text:00030ba6\n.text:00030ba8\n.text:00030baa\n.text:00030bac\n.text:00030bae\n.text:00030bb0\n.text:00030bb2\n.text:00030bb4\n.text:00030bb6\n.text:00030bb8\n.text:00030bba\n.text:00030bbc\n.text:00030bbe\n.text:00030bc0\n.text:00030bc2\n.text:00030bc4\n.text:00030bc6\n.text:00030bc8\n.text:00030bca\n.text:00030bcc\n.text:00030bce\n.text:00030bd0\n.text:00030bd2\n.text:00030bd4\n.text:00030bd6\n.text:00030bd8\n.text:00030bda\n.text:00030bdc\n.text:00030bde\n.text:00030be0\n.text:00030be2\n.text:00030be4\n.text:00030be6\n.text:00030be8\n.text:00030bea\n.text:00030bec\n.text:00030bee\n.text:00030bf0\n.text:00030bf2\n.text:00030bf4\n.text:00030bf6\n.text:00030bf8\n.text:00030bfa\n.text:00030bfc\n.text:00030bfe\n.text:00030c00\n.text:00030c02\n.text:00030c04\n.text:00030c06\n.text:00030c08\n.text:00030c0a\n.text:00030c0c\n.text:00030c0e\n.text:00030c10\n.text:00030c12\n.text:00030c14\n.text:00030c16\n.text:00030c18\n.text:00030c1a\n.text:00030c1c\n.text:00030c1e\n.text:00030c20\n.text:00030c22\n.text:00030c24\n.text:00030c26\n.text:00030c28\n.text:00030c2a\n.text:00030c2c\n.text:00030c2e\n.text:00030c30\n.text:00030c32\n.text:00030c34\n.text:00030c36\n.text:00030c38\n.text:00030c3a\n.text:00030c3c\n.text:00030c3e\n.text:00030c40\n.text:00030c42\n.text:00030c44\n.text:00030c46\n.text:00030c48\n'
p3415
tp3416
sS'get_lame_short_version'
p3417
(S'\n__stdcall get_lame_short_version()\n'
p3418
V\u000avoid get_lame_short_version(void)\u000a\u000a{\u000a  (*(strlen + DAT_000379dc))();\u000a  return;\u000a}\u000a\u000a
p3419
S'ldr r12,[0x379dc]\nadd pc,r12,pc\n'
p3420
S'00 c0 9f e5\n0f f0 8c e0\n'
p3421
S'.text:000379d4\n.text:000379d8\n'
p3422
tp3423
sS'__fixdfsi'
p3424
(S'\n__stdcall __fixdfsi()\n'
p3425
V\u000avoid __fixdfsi(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037e20 + DAT_00037e1c))();\u000a  return;\u000a}\u000a\u000a
p3426
S'ldr r12,[0x37e1c]\nadd pc,r12,pc\n'
p3427
S'00 c0 9f e5\n0f f0 8c e0\n'
p3428
S'.text:00037e14\n.text:00037e18\n'
p3429
tp3430
sS'lame_set_ATHonly'
p3431
(S'\n__stdcall lame_set_ATHonly()\n'
p3432
V\u000aundefined4 lame_set_ATHonly(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0xd0) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3433
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002eb70\nmov r0,#0xd0\nstr r4,[r5,r0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3434
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 6a fc\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n03 d0\nd0 20\n2c 50\n04 b4\n01 bc\nb0 bd\n'
p3435
S'.text:0002eb4c\n.text:0002eb4e\n.text:0002eb50\n.text:0002eb52\n.text:0002eb54\n.text:0002eb56\n.text:0002eb58\n.text:0002eb5c\n.text:0002eb5e\n.text:0002eb60\n.text:0002eb62\n.text:0002eb64\n.text:0002eb66\n.text:0002eb68\n.text:0002eb6a\n.text:0002eb6c\n.text:0002eb6e\n.text:0002eb70\n'
p3436
tp3437
sS'lame_get_extension'
p3438
(S'\n__stdcall lame_get_extension(lame_global_flags * gfp)\n'
p3439
V\u000aint lame_get_extension(lame_global_flags *gfp)\u000a\u000a{\u000a  int in_r2;\u000a  \u000a  return (int)&gfp->class_id + in_r2;\u000a}\u000a\u000a
p3440
S'add r0,r2,r0\nbx lr\n'
p3441
S'10 18\n70 47\n'
p3442
S'.text:0001e4da\n.text:0001e4dc\n'
p3443
tp3444
sS'lame_get_VBR_hard_min'
p3445
(S'\n__stdcall lame_get_VBR_hard_min(lame_global_flags * gfp)\n'
p3446
V\u000aint lame_get_VBR_hard_min(lame_global_flags *gfp)\u000a\u000a{\u000a  int in_stack_00000004;\u000a  \u000a  return in_stack_00000004;\u000a}\u000a\u000a
p3447
S'ldr r0,[sp,#0x4]\n'
p3448
S'01 98\n'
p3449
S'.text:0001e9a4\n'
p3450
tp3451
sS'__gnu_Unwind_Save_WMMXC'
p3452
(S'\n__stdcall __gnu_Unwind_Save_WMMXC()\n'
p3453
V\u000aint __gnu_Unwind_Save_WMMXC(int iParm1)\u000a\u000a{\u000a  undefined4 in_cr8;\u000a  undefined4 in_cr9;\u000a  undefined4 in_cr10;\u000a  undefined4 in_cr11;\u000a  \u000a  coprocessor_store2(1,in_cr8,iParm1);\u000a  coprocessor_store2(1,in_cr9,iParm1 + 4);\u000a  coprocessor_store2(1,in_cr10,iParm1 + 8);\u000a  coprocessor_store2(1,in_cr11,iParm1 + 0xc);\u000a  return iParm1 + 0x10;\u000a}\u000a\u000a
p3454
S'stc2 p1,cr8,[r0],#0x4\nstc2 p1,cr9,[r0],#0x4\nstc2 p1,cr10,[r0],#0x4\nstc2 p1,cr11,[r0],#0x4\nbx lr\n'
p3455
S'01 81 a0 fc\n01 91 a0 fc\n01 a1 a0 fc\n01 b1 a0 fc\n1e ff 2f e1\n'
p3456
S'.text:00037388\n.text:0003738c\n.text:00037390\n.text:00037394\n.text:00037398\n'
p3457
tp3458
sS'_Unwind_SetGR'
p3459
(S'\n__stdcall _Unwind_SetGR()\n'
p3460
V\u000avoid _Unwind_SetGR(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3)\u000a\u000a{\u000a  undefined4 local_c;\u000a  \u000a  local_c = uParm3;\u000a  _Unwind_VRS_Set(uParm1,0,uParm2,0,&local_c,uParm2,uParm3);\u000a  return;\u000a}\u000a\u000a
p3461
S'stmdb sp!,{ r0 r1 r2 r3 r4 lr }\ncpy r12,r1\nadd r3,sp,#0x10\nmov r1,#0x0\nstr r2,[r3,#-0x4]!\ncpy r2,r12\nstr r3,[sp,#0x0]\ncpy r3,r1\nbl 0x00016c30\nadd sp,sp,#0x14\nldr pc,[sp],#0x4\n'
p3462
S'1f 40 2d e9\n01 c0 a0 e1\n10 30 8d e2\n00 10 a0 e3\n04 20 23 e5\n0c 20 a0 e1\n00 30 8d e5\n01 30 a0 e1\n72 80 ff eb\n14 d0 8d e2\n04 f0 9d e4\n'
p3463
S'.text:00036a40\n.text:00036a44\n.text:00036a48\n.text:00036a4c\n.text:00036a50\n.text:00036a54\n.text:00036a58\n.text:00036a5c\n.text:00036a60\n.text:00036a64\n.text:00036a68\n'
p3464
tp3465
sS'__gnu_Unwind_Save_WMMXD'
p3466
(S'\n__stdcall __gnu_Unwind_Save_WMMXD()\n'
p3467
V\u000aint __gnu_Unwind_Save_WMMXD(int iParm1)\u000a\u000a{\u000a  undefined4 in_cr0;\u000a  undefined4 in_cr1;\u000a  undefined4 in_cr2;\u000a  undefined4 in_cr3;\u000a  undefined4 in_cr4;\u000a  undefined4 in_cr5;\u000a  undefined4 in_cr6;\u000a  undefined4 in_cr7;\u000a  undefined4 in_cr8;\u000a  undefined4 in_cr9;\u000a  undefined4 in_cr10;\u000a  undefined4 in_cr11;\u000a  undefined4 in_cr12;\u000a  undefined4 in_cr13;\u000a  undefined4 in_cr14;\u000a  undefined4 in_cr15;\u000a  \u000a  coprocessor_storelong(1,in_cr0,iParm1);\u000a  coprocessor_storelong(1,in_cr1,iParm1 + 8);\u000a  coprocessor_storelong(1,in_cr2,iParm1 + 0x10);\u000a  coprocessor_storelong(1,in_cr3,iParm1 + 0x18);\u000a  coprocessor_storelong(1,in_cr4,iParm1 + 0x20);\u000a  coprocessor_storelong(1,in_cr5,iParm1 + 0x28);\u000a  coprocessor_storelong(1,in_cr6,iParm1 + 0x30);\u000a  coprocessor_storelong(1,in_cr7,iParm1 + 0x38);\u000a  coprocessor_storelong(1,in_cr8,iParm1 + 0x40);\u000a  coprocessor_storelong(1,in_cr9,iParm1 + 0x48);\u000a  coprocessor_storelong(1,in_cr10,iParm1 + 0x50);\u000a  coprocessor_storelong(1,in_cr11,iParm1 + 0x58);\u000a  coprocessor_storelong(1,in_cr12,iParm1 + 0x60);\u000a  coprocessor_storelong(1,in_cr13,iParm1 + 0x68);\u000a  coprocessor_storelong(1,in_cr14,iParm1 + 0x70);\u000a  coprocessor_storelong(1,in_cr15,iParm1 + 0x78);\u000a  return iParm1 + 0x80;\u000a}\u000a\u000a
p3468
S'stcl p1,cr0,[r0],#0x8\nstcl p1,cr1,[r0],#0x8\nstcl p1,cr2,[r0],#0x8\nstcl p1,cr3,[r0],#0x8\nstcl p1,cr4,[r0],#0x8\nstcl p1,cr5,[r0],#0x8\nstcl p1,cr6,[r0],#0x8\nstcl p1,cr7,[r0],#0x8\nstcl p1,cr8,[r0],#0x8\nstcl p1,cr9,[r0],#0x8\nstcl p1,cr10,[r0],#0x8\nstcl p1,cr11,[r0],#0x8\nstcl p1,cr12,[r0],#0x8\nstcl p1,cr13,[r0],#0x8\nstcl p1,cr14,[r0],#0x8\nstcl p1,cr15,[r0],#0x8\nbx lr\n'
p3469
S'02 01 e0 ec\n02 11 e0 ec\n02 21 e0 ec\n02 31 e0 ec\n02 41 e0 ec\n02 51 e0 ec\n02 61 e0 ec\n02 71 e0 ec\n02 81 e0 ec\n02 91 e0 ec\n02 a1 e0 ec\n02 b1 e0 ec\n02 c1 e0 ec\n02 d1 e0 ec\n02 e1 e0 ec\n02 f1 e0 ec\n1e ff 2f e1\n'
p3470
S'.text:00037330\n.text:00037334\n.text:00037338\n.text:0003733c\n.text:00037340\n.text:00037344\n.text:00037348\n.text:0003734c\n.text:00037350\n.text:00037354\n.text:00037358\n.text:0003735c\n.text:00037360\n.text:00037364\n.text:00037368\n.text:0003736c\n.text:00037370\n'
p3471
tp3472
sS'lame_get_PeakSample'
p3473
(S'\n__stdcall lame_get_PeakSample()\n'
p3474
V\u000aundefined4 lame_get_PeakSample(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  int iVar3;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    iVar3 = *(int *)(iParm1 + 0x120);\u000a    iVar1 = is_lame_internal_flags_valid(iVar3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = *(undefined4 *)(iVar3 + DAT_0002f358);\u000a    }\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3475
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r5 }\nbl 0x00038430\nmov r4,#0x0\ncmp r0,#0x0\nbeq 0x0002f350\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r5,[r5,r0]\npush { r5 }\npop { r0 }\nbl 0x00038440\ncmp r0,#0x0\nbeq 0x0002f350\nldr r0,[0x0002f358]\nldr r4,[r5,r0]\npush { r4 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3476
S'b0 b5\n02 af\n01 b4\n20 bc\n09 f0 7e f8\n00 24\n00 28\n0a d0\n09 20\n40 01\n2d 58\n20 b4\n01 bc\n09 f0 7c f8\n00 28\n01 d0\n02 48\n2c 58\n10 b4\n01 bc\nb0 bd\n'
p3477
S'.text:0002f328\n.text:0002f32a\n.text:0002f32c\n.text:0002f32e\n.text:0002f330\n.text:0002f334\n.text:0002f336\n.text:0002f338\n.text:0002f33a\n.text:0002f33c\n.text:0002f33e\n.text:0002f340\n.text:0002f342\n.text:0002f344\n.text:0002f348\n.text:0002f34a\n.text:0002f34c\n.text:0002f34e\n.text:0002f350\n.text:0002f352\n.text:0002f354\n'
p3478
tp3479
sS'free_id3tag'
p3480
(S'\n__stdcall free_id3tag()\n'
p3481
V\u000avoid free_id3tag(void)\u000a\u000a{\u000a  (*(get_lame_os_bitness + DAT_00037c4c))();\u000a  return;\u000a}\u000a\u000a
p3482
S'ldr r12,[0x37c4c]\nadd pc,r12,pc\n'
p3483
S'00 c0 9f e5\n0f f0 8c e0\n'
p3484
S'.text:00037c44\n.text:00037c48\n'
p3485
tp3486
sS'_Unwind_VRS_Get'
p3487
(S'\n__stdcall _Unwind_VRS_Get(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined4 param_5)\n'
p3488
V\u000aundefined4\u000a_Unwind_VRS_Get(int param_1,undefined4 param_2,uint param_3,int param_4,undefined4 *param_5)\u000a\u000a{\u000a  bool bVar1;\u000a  \u000a  switch(param_2) {\u000a  case 0:\u000a    bVar1 = param_3 == 0xf;\u000a    if (param_3 < 0x10) {\u000a      bVar1 = param_4 == 0;\u000a    }\u000a    if (bVar1) {\u000a      *param_5 = *(undefined4 *)(param_1 + param_3 * 4 + 4);\u000a      return 0;\u000a    }\u000a    break;\u000a  case 1:\u000a    return 1;\u000a  case 2:\u000a    break;\u000a  case 3:\u000a    return 1;\u000a  case 4:\u000a    return 1;\u000a  }\u000a  return 2;\u000a}\u000a\u000a
p3489
S'cmp r1,#0x4\naddls pc,pc,r1, lsl #0x2\nb 0x000369b4\nb 0x00036980\nb 0x000369ac\nb 0x000369b4\nb 0x000369ac\nb 0x000369ac\ncmp r2,#0xf\ncmpls r3,#0x0\nmovne r3,#0x1\nmoveq r3,#0x0\nbne 0x000369b4\nadd r0,r0,r2, lsl #0x2\nldr r2,[sp,#0x0]\nldr r1,[r0,#0x4]\nstr r1,[r2,#0x0]\ncpy r0,r3\nbx lr\nmov r0,#0x1\nbx lr\nmov r0,#0x2\nbx lr\n'
p3490
S'04 00 51 e3\n01 f1 8f 90\n11 00 00 ea\n03 00 00 ea\n0d 00 00 ea\n0e 00 00 ea\n0b 00 00 ea\n0a 00 00 ea\n0f 00 52 e3\n00 00 53 93\n01 30 a0 13\n00 30 a0 03\n07 00 00 1a\n02 01 80 e0\n00 20 9d e5\n04 10 90 e5\n00 10 82 e5\n03 00 a0 e1\n1e ff 2f e1\n01 00 a0 e3\n1e ff 2f e1\n02 00 a0 e3\n1e ff 2f e1\n'
p3491
S'.text:00036960\n.text:00036964\n.text:00036968\n.text:0003696c\n.text:00036970\n.text:00036974\n.text:00036978\n.text:0003697c\n.text:00036980\n.text:00036984\n.text:00036988\n.text:0003698c\n.text:00036990\n.text:00036994\n.text:00036998\n.text:0003699c\n.text:000369a0\n.text:000369a4\n.text:000369a8\n.text:000369ac\n.text:000369b0\n.text:000369b4\n.text:000369b8\n'
p3492
tp3493
sS'VBR_old_iteration_loop'
p3494
(S'\n__stdcall VBR_old_iteration_loop()\n'
p3495
V\u000avoid VBR_old_iteration_loop(int iParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  int iVar2;\u000a  undefined4 uVar3;\u000a  uint uVar4;\u000a  undefined *puVar5;\u000a  int iVar6;\u000a  int *piVar7;\u000a  int iVar8;\u000a  undefined4 uVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  int *piVar12;\u000a  undefined4 *puVar13;\u000a  int iVar14;\u000a  int *piVar15;\u000a  int *piStack24;\u000a  int iStack4;\u000a  \u000a  iVar2 = DAT_00028f5c;\u000a  piVar15 = (int *)(&stack0xffffffec + DAT_00028f5c);\u000a  piVar15 = (undefined4 *)(&stack0xffffffec + DAT_00028f5c);\u000a  puVar1 = (undefined4 *)(&stack0x00000074 + DAT_00028f5c);\u000a  *(undefined4 **)(&stack0xfffffff8 + DAT_00028f5c) = puVar1;\u000a  puVar13 = (undefined4 *)(&stack0xffffffec + DAT_00028f60 + iVar2);\u000a  *(undefined4 **)(&stack0x00000010 + iVar2) = puVar13;\u000a  *(undefined4 *)(&stack0x00000038 + iVar2) = uParm4;\u000a  *(undefined4 *)(&stack0x00000000 + iVar2) = uParm3;\u000a  *(undefined4 *)(&stack0x0000000c + iVar2) = uParm2;\u000a  *(int *)((int)&piStack24 + iVar2) = iParm1;\u000a  iVar11 = *(int *)((int)&piStack24 + iVar2);\u000a  *(int *)(&stack0x00000060 + iVar2) = iVar11;\u000a  *puVar1 = **(undefined4 **)(DAT_00028f64 + 0x28c5c);\u000a  iVar6 = DAT_00028f68;\u000a  *(undefined4 *)(iVar11 + DAT_00028f68) = *(undefined4 *)(iVar11 + 0x74);\u000a  iVar8 = DAT_00028f60 + iVar2;\u000a  *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a  uVar3 = ResvFrameBegin(*(int *)((int)&piStack24 + iVar2),&stack0xffffffec + iVar8);\u000a  uVar3 = __divsi3(uVar3,*(undefined4 *)(iVar11 + 0x4c));\u000a  *puVar13 = uVar3;\u000a  *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a  get_framebits(*(int *)((int)&piStack24 + iVar2),&stack0x0000009c + iVar2);\u000a  *(int *)(&stack0x00000030 + iVar2) = iVar11 + iVar6;\u000a  iVar8 = *(int *)(iVar11 + 0x4c);\u000a  if (iVar8 < 1) {\u000a    *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a    piVar7 = (int *)(*(int *)((int)&piStack24 + iVar2) + 0x48);\u000a    *(undefined4 *)(&stack0x00000028 + iVar2) = 1;\u000a  }\u000a  else {\u000a    *(int *)(&stack0x00000034 + iVar2) = iVar11 + DAT_00028f6c;\u000a    *(int *)(&stack0x00000048 + iVar2) = iVar11 + DAT_00028f70;\u000a    *(int *)(&stack0x0000004c + iVar2) = iVar11 + DAT_00028f74;\u000a    *(int *)(&stack0x00000044 + iVar2) = iVar11 + DAT_00028f78;\u000a    *(int *)(&stack0x00000008 + iVar2) = iVar11 + DAT_00028f7c;\u000a    *(int *)((int)&iStack4 + iVar2) = iVar11 + 0x130;\u000a    *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a    piVar7 = (int *)(*(int *)((int)&piStack24 + iVar2) + 0x48);\u000a    *(int **)(&stack0x00000040 + iVar2) = piVar7;\u000a    *(undefined4 *)(&stack0x00000028 + iVar2) = 1;\u000a    *(undefined4 *)(&stack0x00000004 + iVar2) = 0;\u000a    *(undefined **)(&stack0x0000002c + iVar2) = &stack0x0000007c + iVar2;\u000a    *(undefined **)(&stack0x00000024 + iVar2) = &stack0x0000008c + iVar2;\u000a    *(undefined **)(&stack0x00000020 + iVar2) = &stack0xffffffec + DAT_00028f80 + iVar2;\u000a    *(int *)(&stack0x0000001c + iVar2) = iVar11 + 0x130;\u000a    uVar3 = *(undefined4 *)(&stack0x0000000c + iVar2);\u000a    *(undefined4 *)(&stack0x00000018 + iVar2) = uVar3;\u000a    *(undefined4 *)(&stack0x00000068 + iVar2) = 0;\u000a    *(int *)((int)&piStack24 + iVar2) = 0;\u000a    iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a    do {\u000a      *(int *)(&stack0x00000014 + iVar2) = iVar6;\u000a      uVar9 = **(undefined4 **)(&stack0x00000010 + iVar2);\u000a      *piVar15 = iVar6;\u000a      *(undefined4 *)(&stack0xfffffff0 + iVar2) = *(undefined4 *)(&stack0x00000004 + iVar2);\u000a      *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a      iVar8 = *(int *)((int)&piStack24 + iVar2);\u000a      *(undefined **)(int *)((int)&piStack24 + iVar2) = &stack0x0000007c + iVar6 * 8 + iVar2;\u000a      uVar3 = on_pe(iVar8,uVar3,*(int *)((int)&piStack24 + iVar2),uVar9);\u000a      *(undefined4 *)((int)&piStack24 + iVar2) = uVar3;\u000a      if (**(int **)(&stack0x00000008 + iVar2) == 2) {\u000a        iVar8 = *(int *)(&stack0x00000014 + iVar2);\u000a        *(undefined4 *)(&stack0x00000070 + iVar2) = *(undefined4 *)((int)&piStack24 + iVar2);\u000a        *(int *)((int)&piStack24 + iVar2) = iVar8;\u000a        ms_convert(*(undefined4 *)((int)&iStack4 + iVar2),*(int *)((int)&piStack24 + iVar2));\u000a        uVar3 = *(undefined4 *)(*(int *)(&stack0x00000000 + iVar2) + iVar8 * 4);\u000a        uVar9 = **(undefined4 **)(&stack0x00000010 + iVar2);\u000a        *(undefined **)(int *)((int)&piStack24 + iVar2) = &stack0x0000007c + iVar6 * 8 + iVar2;\u000a        reduce_side(*(int *)((int)&piStack24 + iVar2),uVar3,uVar9,\u000a                    *(undefined4 *)(&stack0x00000070 + iVar2));\u000a      }\u000a      iVar8 = *piVar7;\u000a      *(undefined4 *)(&stack0x00000070 + iVar2) = *(undefined4 *)(&stack0x00000038 + iVar2);\u000a      *(undefined4 *)(&stack0x0000006c + iVar2) = *(undefined4 *)(&stack0x00000020 + iVar2);\u000a      if (0 < iVar8) {\u000a        *(undefined4 *)(&stack0x00000050 + iVar2) = *(undefined4 *)(&stack0x0000002c + iVar2);\u000a        *(undefined4 *)(&stack0x00000054 + iVar2) = *(undefined4 *)(&stack0x00000024 + iVar2);\u000a        *(undefined4 **)(&stack0x00000058 + iVar2) = *(undefined4 **)(&stack0x00000018 + iVar2);\u000a        *(undefined4 *)(&stack0x0000005c + iVar2) = *(undefined4 *)(&stack0x00000034 + iVar2);\u000a        *(undefined4 *)(&stack0x00000064 + iVar2) = 0;\u000a        uVar3 = **(undefined4 **)(&stack0x00000018 + iVar2);\u000a        *(undefined4 *)((int)&piStack24 + iVar2) = *(undefined4 *)(&stack0x00000034 + iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a        __extendsfdf2(uVar3);\u000a      }\u000a      *(int *)(&stack0x00000070 + iVar2) = iVar8;\u000a      iVar8 = DAT_00028fb8;\u000a      *(int *)(&stack0x0000001c + iVar2) = *(int *)(&stack0x0000001c + iVar2) + DAT_00028fb8;\u000a      *(int *)(&stack0x00000034 + iVar2) = *(int *)(&stack0x00000034 + iVar2) + iVar8;\u000a      *(int *)(&stack0x00000038 + iVar2) = *(int *)(&stack0x00000038 + iVar2) + 0x3d0;\u000a      *(int *)(&stack0x00000020 + iVar2) = *(int *)(&stack0x00000020 + iVar2) + 0x138;\u000a      *(int *)(&stack0x00000018 + iVar2) = *(int *)(&stack0x00000018 + iVar2) + 8;\u000a      *(int *)(&stack0x00000024 + iVar2) = *(int *)(&stack0x00000024 + iVar2) + 8;\u000a      *(int *)(&stack0x0000002c + iVar2) = *(int *)(&stack0x0000002c + iVar2) + 8;\u000a      iVar11 = *(int *)(&stack0x00000060 + iVar2);\u000a      iVar8 = *(int *)(iVar11 + 0x4c);\u000a      iVar6 = *(int *)(&stack0x00000014 + iVar2) + 1;\u000a      piVar7 = *(int **)(&stack0x00000040 + iVar2);\u000a      uVar3 = *(undefined4 *)(&stack0x0000000c + iVar2);\u000a    } while (iVar6 < iVar8);\u000a    if (0 < iVar8) {\u000a      iVar6 = 0;\u000a      *(undefined **)(&stack0x0000005c + iVar2) = &stack0x0000008c + iVar2;\u000a      *(undefined **)(&stack0x00000058 + iVar2) = &stack0x0000007c + iVar2;\u000a      do {\u000a        *(int *)(&stack0x00000054 + iVar2) = iVar6;\u000a        *(int *)(&stack0x0000003c + iVar2) = iVar8;\u000a        if (0 < *(int *)(&stack0x00000070 + iVar2)) {\u000a          uVar4 = 1;\u000a          iVar8 = 0;\u000a          *(undefined4 *)(&stack0x0000006c + iVar2) = 1;\u000a          if (*(int *)(&stack0x00000068 + iVar2) < 1) {\u000a            *(undefined4 *)(&stack0x0000006c + iVar2) = 0;\u000a          }\u000a          iVar6 = *(int *)(&stack0x0000009c +\u000a                          *(int *)(*(int *)(&stack0x00000060 + iVar2) + 0x74) * 4 + iVar2);\u000a          *(int *)(&stack0x00000064 + iVar2) = iVar6;\u000a          if (*(int *)(&stack0x00000068 + iVar2) <= iVar6) {\u000a            *(uint *)((int)&piStack24 + iVar2) = 0;\u000a            uVar4 = *(uint *)((int)&piStack24 + iVar2);\u000a          }\u000a          *(uint *)(&stack0x0000006c + iVar2) = *(uint *)(&stack0x0000006c + iVar2) & uVar4;\u000a          piVar12 = *(int **)(&stack0x00000058 + iVar2);\u000a          piVar7 = *(int **)(&stack0x0000005c + iVar2);\u000a          do {\u000a            iVar6 = *piVar12;\u000a            if (*(int *)(&stack0x0000006c + iVar2) == 1) {\u000a              iVar6 = __divsi3(*(int *)(&stack0x00000064 + iVar2) * iVar6,\u000a                               *(undefined4 *)(&stack0x00000068 + iVar2));\u000a              *piVar12 = iVar6;\u000a            }\u000a            if (iVar6 < *piVar7) {\u000a              *piVar7 = iVar6;\u000a            }\u000a            piVar12 = piVar12 + 1;\u000a            piVar7 = piVar7 + 1;\u000a            iVar8 = iVar8 + 1;\u000a          } while (iVar8 < *(int *)(&stack0x00000070 + iVar2));\u000a        }\u000a        *(int *)(&stack0x00000058 + iVar2) = *(int *)(&stack0x00000058 + iVar2) + 8;\u000a        *(int *)(&stack0x0000005c + iVar2) = *(int *)(&stack0x0000005c + iVar2) + 8;\u000a        iVar6 = *(int *)(&stack0x00000054 + iVar2) + 1;\u000a        iVar8 = *(int *)(&stack0x0000003c + iVar2);\u000a      } while (iVar6 < iVar8);\u000a      iVar11 = *(int *)(&stack0x00000060 + iVar2);\u000a      piVar7 = *(int **)(&stack0x00000040 + iVar2);\u000a    }\u000a  }\u000a  *(int **)(&stack0x00000040 + iVar2) = piVar7;\u000a  *(int *)(&stack0x0000002c + iVar2) = iVar11 + DAT_00028fbc;\u000a  *(int *)(&stack0x0000004c + iVar2) = iVar11 + DAT_00028fc0;\u000a  *(undefined4 *)(&stack0x00000048 + iVar2) = 0x900;\u000a  *(undefined **)(&stack0x00000034 + iVar2) = &stack0xffffffec + DAT_00028f60 + iVar2 + 0x900;\u000a  *(undefined4 *)(&stack0x00000024 + iVar2) = 0;\u000a  *(int *)((int)&piStack24 + iVar2) = 0;\u000a  iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a  *(int *)((int)&piStack24 + iVar2) = 0;\u000a  iVar10 = *(int *)((int)&piStack24 + iVar2);\u000a  do {\u000a    while (*(int *)(&stack0x00000038 + iVar2) = iVar6, iVar8 <= iVar6) {\u000a      if ((*(int *)(&stack0x00000028 + iVar2) == 0) || (iVar8 = 1, *(int *)(iVar11 + 0x7c) != 0)) {\u000a        iVar8 = *(int *)(iVar11 + 0x70);\u000a      }\u000a      **(int **)(&stack0x00000030 + iVar2) = iVar8;\u000a      iVar6 = *(int *)(iVar11 + 0x74);\u000a      while ((iVar8 < iVar6 && (*(int *)(&stack0x0000009c + iVar8 * 4 + iVar2) < iVar10))) {\u000a        iVar8 = iVar8 + 1;\u000a        **(int **)(&stack0x00000030 + iVar2) = iVar8;\u000a      }\u000a      *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a      iVar6 = ResvFrameBegin(*(int *)((int)&piStack24 + iVar2),&stack0x00000078 + iVar2);\u000a      iVar8 = *(int *)(iVar11 + 0x4c);\u000a      *(int *)(&stack0x0000003c + iVar2) = iVar8;\u000a      if (iVar10 <= iVar6) {\u000a        piVar7 = *(int **)(&stack0x00000040 + iVar2);\u000a        *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a        iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a        if (0 < iVar8) {\u000a          iVar11 = *piVar7;\u000a          iVar10 = 0;\u000a          *(undefined4 *)(&stack0x0000006c + iVar2) = 0;\u000a          do {\u000a            *(int *)(&stack0x00000070 + iVar2) = iVar10;\u000a            iVar10 = *(int *)(&stack0x0000006c + iVar2);\u000a            *(int **)((int)&piStack24 + iVar2) = piVar7;\u000a            piVar7 = *(int **)((int)&piStack24 + iVar2);\u000a            if (0 < iVar11) {\u000a              do {\u000a                *(int *)((int)&piStack24 + iVar2) = iVar6;\u000a                iVar8 = *(int *)((int)&piStack24 + iVar2);\u000a                *(int *)((int)&piStack24 + iVar2) = iVar10;\u000a                iteration_finish_one\u000a                          (iVar8,*(undefined4 *)(&stack0x00000070 + iVar2),\u000a                           *(int *)((int)&piStack24 + iVar2));\u000a                iVar10 = iVar10 + 1;\u000a                iVar11 = *piVar7;\u000a              } while (iVar10 < iVar11);\u000a              iVar8 = *(int *)(iVar6 + 0x4c);\u000a            }\u000a            *(int **)((int)&piStack24 + iVar2) = piVar7;\u000a            piVar7 = *(int **)((int)&piStack24 + iVar2);\u000a            iVar10 = *(int *)(&stack0x00000070 + iVar2) + 1;\u000a          } while (iVar10 < iVar8);\u000a        }\u000a        *(int *)((int)&piStack24 + iVar2) = iVar6;\u000a        ResvFrameEnd(*(int *)((int)&piStack24 + iVar2),*(undefined4 *)(&stack0x00000078 + iVar2));\u000a        if (**(int **)(DAT_000294dc + 0x294ac) != **(int **)(&stack0xfffffff8 + iVar2)) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __stack_chk_fail();\u000a        }\u000a        return;\u000a      }\u000a      *(int *)((int)&piStack24 + iVar2) = *(int *)(&stack0x00000024 + iVar2);\u000a      iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a      *(int *)((int)&piStack24 + iVar2) = *(int *)(&stack0x00000024 + iVar2);\u000a      iVar10 = *(int *)((int)&piStack24 + iVar2);\u000a      if (0 < iVar8) {\u000a        *(undefined4 *)(&stack0x00000054 + iVar2) = **(undefined4 **)(&stack0x00000040 + iVar2);\u000a        *(undefined4 *)(&stack0x00000064 + iVar2) = 0;\u000a        puVar5 = &stack0xffffffec + DAT_00029504 + iVar2;\u000a        do {\u000a          if (0 < *(int *)(&stack0x00000054 + iVar2)) {\u000a            *(undefined4 *)(&stack0x00000054 + iVar2) = **(undefined4 **)(&stack0x00000040 + iVar2);\u000a            *(undefined4 *)(&stack0x00000050 + iVar2) = 0;\u000a            *(undefined **)(&stack0x0000005c + iVar2) = puVar5;\u000a            *(undefined **)(&stack0x00000044 + iVar2) = puVar5;\u000a            *(int *)((int)&piStack24 + iVar2) = 0;\u000a            iVar8 = *(int *)((int)&piStack24 + iVar2);\u000a            *(int *)(&stack0x00000068 + iVar2) = iVar8;\u000a            iVar6 = *(int *)(*(int *)(&stack0x00000060 + iVar2) +\u000a                             *(int *)(&stack0x00000064 + iVar2) * DAT_000294d8 +\u000a                             iVar8 * DAT_000294d4 + DAT_000294e0);\u000a            *(int *)(&stack0x0000006c + iVar2) = iVar6;\u000a            puVar5 = &stack0xffffffec +\u000a                     iVar8 * 0x9c +\u000a                     *(int *)(&stack0x00000064 + iVar2) * 0x138 + DAT_00029504 + iVar2;\u000a            if (0 < iVar6) {\u000a              *(undefined **)(&stack0x00000070 + iVar2) = puVar5;\u000a              *(undefined4 *)((int)&piStack24 + iVar2) = *(undefined4 *)(&stack0x00000050 + iVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a              __floatsidf(*(undefined4 *)((int)&piStack24 + iVar2));\u000a            }\u000a            if ((*(int *)(*(int *)(&stack0x00000060 + iVar2) +\u000a                          *(int *)(&stack0x00000064 + iVar2) * DAT_000294d8 +\u000a                          *(int *)(&stack0x00000068 + iVar2) * DAT_000294d4 + DAT_000294cc) == 2) &&\u000a               (iVar8 = *(int *)(*(int *)(&stack0x00000060 + iVar2) +\u000a                                 *(int *)(&stack0x00000064 + iVar2) * DAT_000294d8 +\u000a                                 *(int *)(&stack0x00000068 + iVar2) * DAT_000294d4 + DAT_000294f0),\u000a               iVar8 < 0xd)) {\u000a              *(undefined **)(&stack0x00000070 + iVar2) = puVar5;\u000a              *(int *)((int)&piStack24 + iVar2) = iVar8;\u000a                    /* WARNING: Subroutine does not return */\u000a              __floatsidf(*(int *)((int)&piStack24 + iVar2));\u000a            }\u000a            *(int *)(&stack0x0000006c + iVar2) = *(int *)(&stack0x00000068 + iVar2) * 4;\u000a                    /* WARNING: Subroutine does not return */\u000a            __floatsidf(*(undefined4 *)\u000a                         (&stack0x0000008c +\u000a                         *(int *)(&stack0x00000068 + iVar2) * 4 +\u000a                         *(int *)(&stack0x00000064 + iVar2) * 8 + iVar2));\u000a          }\u000a          puVar5 = puVar5 + 0x138;\u000a          iVar10 = *(int *)(&stack0x00000064 + iVar2);\u000a          *(int *)(&stack0x00000064 + iVar2) = iVar10 + 1;\u000a          iVar6 = 0;\u000a        } while (iVar10 + 1 < iVar8);\u000a        *(int *)((int)&piStack24 + iVar2) = 0;\u000a        iVar10 = *(int *)((int)&piStack24 + iVar2);\u000a      }\u000a    }\u000a    *(int *)(&stack0x0000003c + iVar2) = iVar10;\u000a    iVar10 = 0;\u000a    if (0 < **(int **)(&stack0x00000040 + iVar2)) {\u000a      do {\u000a        iVar8 = iVar11 + iVar6 * DAT_000291a0 + iVar10 * DAT_0002919c + 0x130;\u000a        *(int *)(&stack0x0000006c + iVar2) = iVar8;\u000a        *(int *)((int)&piStack24 + iVar2) = iVar6;\u000a        iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a        *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a        iVar8 = init_xrpow(*(int *)((int)&piStack24 + iVar2),iVar8,&stack0x000000d8 + iVar2);\u000a        if (iVar8 == 0) {\u000aLAB_0002916e:\u000a          *(int *)((int)&piStack24 + iVar2) = iVar6;\u000a          iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a        }\u000a        else {\u000a          if (*(int *)(&stack0x0000007c + iVar10 * 4 + iVar6 * 8 + iVar2) == 0) goto LAB_0002916e;\u000a          *(int *)(&stack0x00000070 + iVar2) =\u000a               *(int *)(&stack0x0000007c + iVar10 * 4 + iVar6 * 8 + iVar2);\u000a          *(undefined4 *)(&stack0x00000064 + iVar2) =\u000a               *(undefined4 *)(&stack0x0000008c + iVar10 * 4 + iVar6 * 8 + iVar2);\u000a          *(undefined4 *)(&stack0x00000050 + iVar2) = **(undefined4 **)(&stack0x0000004c + iVar2);\u000a          __aeabi_memclr4(*(undefined4 *)(&stack0x00000034 + iVar2),\u000a                          *(undefined4 *)(&stack0x00000048 + iVar2));\u000a          *(int *)(&stack0x00000044 + iVar2) =\u000a               iVar11 + iVar6 * DAT_000291a0 + iVar10 * DAT_0002919c + DAT_000291a4;\u000a          *(int *)(&stack0x00000068 + iVar2) = iVar10;\u000a          iVar14 = *(int *)(&stack0x00000070 + iVar2);\u000a          *(undefined **)(&stack0x0000005c + iVar2) =\u000a               &stack0xffffffec + iVar10 * 0x9c + iVar6 * 0x138 + DAT_000291a8 + iVar2;\u000a          iVar8 = *(int *)(&stack0x00000064 + iVar2) + iVar14 +\u000a                  ((uint)(*(int *)(&stack0x00000064 + iVar2) + iVar14) >> 0x1f);\u000a          *(int *)((int)&piStack24 + iVar2) = iVar14;\u000a          *(int *)(&stack0x00000058 + iVar2) = *(int *)((int)&piStack24 + iVar2) + -0x2a;\u000a          *(undefined4 *)(&stack0x00000054 + iVar2) = 0;\u000a          *(int *)((int)&piStack24 + iVar2) = 0;\u000a          iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a          do {\u000a            iVar8 = iVar8 >> 1;\u000a            *(int *)(&stack0x00000070 + iVar2) = iVar6;\u000a            uVar3 = *(undefined4 *)(&stack0x00000054 + iVar2);\u000a            if (iVar8 <= *(int *)(&stack0x00000058 + iVar2)) {\u000a              uVar3 = *(undefined4 *)(&stack0x00000050 + iVar2);\u000a            }\u000a            **(undefined4 **)(&stack0x0000004c + iVar2) = uVar3;\u000a            *piVar15 = *(undefined4 *)(&stack0x00000068 + iVar2);\u000a            *(int *)(&stack0xfffffff0 + iVar2) = iVar8;\u000a            *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a            iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a            uVar3 = *(undefined4 *)(&stack0x0000006c + iVar2);\u000a            *(undefined4 *)((int)&piStack24 + iVar2) = uVar3;\u000a            iVar11 = outer_loop(iVar6,*(undefined4 *)((int)&piStack24 + iVar2),\u000a                                *(undefined4 *)(&stack0x0000005c + iVar2),&stack0x000000d8 + iVar2);\u000a            iVar6 = DAT_000294d4;\u000a            if (iVar11 < 1) {\u000a              iVar8 = DAT_000294c4 + iVar2;\u000a              *(undefined4 *)((int)&piStack24 + iVar2) = uVar3;\u000a                    /* WARNING: Subroutine does not return */\u000a              __aeabi_memcpy4(&stack0xffffffec + iVar8,*(undefined4 *)((int)&piStack24 + iVar2),\u000a                              iVar6);\u000a            }\u000a            *(int *)((int)&piStack24 + iVar2) = iVar8;\u000a            iVar10 = *(int *)((int)&piStack24 + iVar2) + 0x20;\u000a            *(int *)(&stack0x00000064 + iVar2) = iVar10;\u000a            iVar8 = iVar14 + iVar10 + ((uint)(iVar14 + iVar10) >> 0x1f);\u000a            if (*(int *)(&stack0x00000070 + iVar2) != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a              __aeabi_memcpy4(*(undefined4 *)(&stack0x0000006c + iVar2),\u000a                              &stack0xffffffec + DAT_000291ac + iVar2,DAT_0002919c);\u000a            }\u000a            *(int *)((int)&piStack24 + iVar2) = 0;\u000a            iVar6 = *(int *)((int)&piStack24 + iVar2);\u000a            iVar11 = *(int *)(&stack0x00000060 + iVar2);\u000a          } while (0xc < iVar14 - iVar10);\u000a          **(undefined4 **)(&stack0x0000004c + iVar2) = *(undefined4 *)(&stack0x00000050 + iVar2);\u000a          if (iVar6 == 2) {\u000a                    /* WARNING: Subroutine does not return */\u000a            __aeabi_memcpy4(iVar11 + *(int *)(&stack0x00000038 + iVar2) * DAT_000294d8 +\u000a                            *(int *)(&stack0x00000068 + iVar2) * DAT_000294d4 + 0xa30,\u000a                            *(undefined4 *)(&stack0x00000034 + iVar2),\u000a                            *(undefined4 *)(&stack0x00000048 + iVar2));\u000a          }\u000a          iVar8 = *(int *)(&stack0x0000003c + iVar2);\u000a          if ((**(byte **)(&stack0x0000002c + iVar2) & 1) != 0) {\u000a            *(int *)((int)&piStack24 + iVar2) = iVar11;\u000a            trancate_smallspectrums\u000a                      (*(int *)((int)&piStack24 + iVar2),*(undefined4 *)(&stack0x0000006c + iVar2),\u000a                       *(undefined4 *)(&stack0x0000005c + iVar2),&stack0x000000d8 + iVar2);\u000a          }\u000a          iVar10 = *(int *)(&stack0x00000068 + iVar2);\u000a          iVar6 = *(int *)(&stack0x00000038 + iVar2);\u000a          *(int *)(&stack0x0000003c + iVar2) =\u000a               **(int **)(&stack0x00000044 + iVar2) + iVar8 +\u000a               *(int *)(iVar11 + iVar6 * DAT_000294d8 + iVar10 * DAT_000294d4 + DAT_00029500);\u000a        }\u000a        iVar10 = iVar10 + 1;\u000a      } while (iVar10 < **(int **)(&stack0x00000040 + iVar2));\u000a      iVar8 = *(int *)(iVar11 + 0x4c);\u000a    }\u000a    iVar6 = iVar6 + 1;\u000a    iVar10 = *(int *)(&stack0x0000003c + iVar2);\u000a  } while( true );\u000a}\u000a\u000a
p3496
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nldr r5,[0x00028f5c]\nadd sp,r5\nadd r4,sp,#0x88\nstr r4,[sp,#0xc]\nldr r6,[0x00028f60]\nadd r6,sp\nstr r6,[sp,#0x24]\nstr r3,[sp,#0x4c]\nstr r2,[sp,#0x14]\nstr r1,[sp,#0x20]\npush { r0 }\npop { r5 }\nstr r5,[sp,#0x74]\nldr r0,[0x00028f64]\nadd r0,pc\nldr r0,[r0,#0x0]\nldr r0,[r0,#0x0]\nstr r0,[r4,#0x0]\nldr r0,[r5,#0x74]\nldr r4,[0x00028f68]\nstr r0,[r5,r4]\nldr r1,[0x00028f60]\nadd r1,sp\npush { r5 }\npop { r0 }\nbl 0x000382e0\nldr r1,[r5,#0x4c]\nbl 0x00037980\nstr r0,[r6,#0x0]\nadd r1,sp,#0xb0\npush { r5 }\npop { r0 }\nbl 0x0002bc90\nadd r0,r5,r4\nstr r0,[sp,#0x44]\nldr r3,[r5,#0x4c]\ncmp r3,#0x0\nbgt 0x00028c90\nb 0x00028f26\nldr r0,[0x00028f6c]\nadd r0,r5,r0\nstr r0,[sp,#0x48]\nldr r0,[0x00028f70]\nadd r0,r5,r0\nstr r0,[sp,#0x5c]\nldr r0,[0x00028f74]\nadd r0,r5,r0\nstr r0,[sp,#0x60]\nldr r0,[0x00028f78]\nadd r0,r5,r0\nstr r0,[sp,#0x58]\nldr r0,[0x00028f7c]\nadd r0,r5,r0\nstr r0,[sp,#0x1c]\nmov r0,#0x13\nlsl r0,r0,#0x4\nadd r1,r5,r0\nstr r1,[sp,#0x10]\npush { r5 }\npop { r6 }\nadd r6,#0x48\nstr r6,[sp,#0x54]\nmov r0,#0x1\nstr r0,[sp,#0x3c]\nmov r0,#0x0\nstr r0,[sp,#0x18]\nadd r2,sp,#0x90\nstr r2,[sp,#0x40]\nadd r2,sp,#0xa0\nstr r2,[sp,#0x38]\nldr r2,[0x00028f80]\nadd r2,sp\nstr r2,[sp,#0x34]\nstr r1,[sp,#0x30]\nldr r1,[sp,#0x20]\nstr r1,[sp,#0x2c]\nstr r0,[sp,#0x7c]\npush { r0 }\npop { r4 }\nstr r4,[sp,#0x28]\nldr r0,[sp,#0x24]\nldr r3,[r0,#0x0]\nmov r0,sp\nstr r4,[r0,#0x0]\nldr r2,[sp,#0x18]\nstr r2,[r0,#0x4]\nlsl r0,r4,#0x3\nadd r2,sp,#0x90\nadd r4,r2,r0\npush { r5 }\npop { r0 }\npush { r4 }\npop { r2 }\nbl 0x000382f0\npush { r0 }\npop { r1 }\nldr r0,[sp,#0x1c]\nldr r0,[r0,#0x0]\ncmp r0,#0x2\nbne 0x00028d2e\nldr r0,[sp,#0x10]\nldr r5,[sp,#0x28]\nstr r1,[sp,#0x84]\npush { r5 }\npop { r1 }\nbl 0x0002a3ac\nlsl r0,r5,#0x2\nldr r1,[sp,#0x14]\nldr r1,[r1,r0]\nldr r0,[sp,#0x24]\nldr r2,[r0,#0x0]\npush { r4 }\npop { r0 }\nldr r3,[sp,#0x84]\nbl 0x00038300\nldr r5,[r6,#0x0]\nmov r0,#0x0\ncmp r5,#0x1\nldr r6,[sp,#0x30]\nldr r2,[sp,#0x48]\nldr r1,[sp,#0x2c]\nldr r3,[sp,#0x4c]\nstr r3,[sp,#0x84]\nldr r3,[sp,#0x34]\nstr r3,[sp,#0x80]\nldr r3,[sp,#0x38]\nldr r4,[sp,#0x40]\nbge 0x00028d4a\nb 0x00028e54\nstr r4,[sp,#0x64]\nstr r3,[sp,#0x68]\nstr r1,[sp,#0x6c]\nstr r2,[sp,#0x70]\nstr r0,[sp,#0x78]\nldr r0,[r1,#0x0]\npush { r2 }\npop { r5 }\nbl 0x00037ac0\n'
p3497
S'f0 b5\n03 af\nc7 4d\nad 44\n22 ac\n03 94\nc6 4e\n6e 44\n09 96\n13 93\n05 92\n08 91\n01 b4\n20 bc\n1d 95\nc3 48\n78 44\n00 68\n00 68\n20 60\n68 6f\nc1 4c\n28 51\nbe 49\n69 44\n20 b4\n01 bc\n0f f0 37 fb\ne9 6c\n0e f0 84 fe\n30 60\n2c a9\n20 b4\n01 bc\n03 f0 06 f8\n28 19\n11 90\neb 6c\n00 2b\n00 dc\n4a e1\nb6 48\n28 18\n12 90\nb6 48\n28 18\n17 90\nb5 48\n28 18\n18 90\nb5 48\n28 18\n16 90\nb4 48\n28 18\n07 90\n13 20\n00 01\n29 18\n04 91\n20 b4\n40 bc\n48 36\n15 96\n01 20\n0f 90\n00 20\n06 90\n24 aa\n10 92\n28 aa\n0e 92\nac 4a\n6a 44\n0d 92\n0c 91\n08 99\n0b 91\n1f 90\n01 b4\n10 bc\n0a 94\n09 98\n03 68\n68 46\n04 60\n06 9a\n42 60\ne0 00\n24 aa\n14 18\n20 b4\n01 bc\n10 b4\n04 bc\n0f f0 f8 fa\n01 b4\n02 bc\n07 98\n00 68\n02 28\n10 d1\n04 98\n0a 9d\n21 91\n20 b4\n02 bc\n01 f0 49 fb\na8 00\n05 99\n09 58\n09 98\n02 68\n10 b4\n01 bc\n21 9b\n0f f0 e9 fa\n35 68\n00 20\n01 2d\n0c 9e\n12 9a\n0b 99\n13 9b\n21 93\n0d 9b\n20 93\n0e 9b\n10 9c\n00 da\n84 e0\n19 94\n1a 93\n1b 91\n1c 92\n1e 90\n08 68\n04 b4\n20 bc\n0e f0 b1 fe\n'
p3498
S'.text:00028c38\n.text:00028c3a\n.text:00028c3c\n.text:00028c3e\n.text:00028c40\n.text:00028c42\n.text:00028c44\n.text:00028c46\n.text:00028c48\n.text:00028c4a\n.text:00028c4c\n.text:00028c4e\n.text:00028c50\n.text:00028c52\n.text:00028c54\n.text:00028c56\n.text:00028c58\n.text:00028c5a\n.text:00028c5c\n.text:00028c5e\n.text:00028c60\n.text:00028c62\n.text:00028c64\n.text:00028c66\n.text:00028c68\n.text:00028c6a\n.text:00028c6c\n.text:00028c6e\n.text:00028c72\n.text:00028c74\n.text:00028c78\n.text:00028c7a\n.text:00028c7c\n.text:00028c7e\n.text:00028c80\n.text:00028c84\n.text:00028c86\n.text:00028c88\n.text:00028c8a\n.text:00028c8c\n.text:00028c8e\n.text:00028c90\n.text:00028c92\n.text:00028c94\n.text:00028c96\n.text:00028c98\n.text:00028c9a\n.text:00028c9c\n.text:00028c9e\n.text:00028ca0\n.text:00028ca2\n.text:00028ca4\n.text:00028ca6\n.text:00028ca8\n.text:00028caa\n.text:00028cac\n.text:00028cae\n.text:00028cb0\n.text:00028cb2\n.text:00028cb4\n.text:00028cb6\n.text:00028cb8\n.text:00028cba\n.text:00028cbc\n.text:00028cbe\n.text:00028cc0\n.text:00028cc2\n.text:00028cc4\n.text:00028cc6\n.text:00028cc8\n.text:00028cca\n.text:00028ccc\n.text:00028cce\n.text:00028cd0\n.text:00028cd2\n.text:00028cd4\n.text:00028cd6\n.text:00028cd8\n.text:00028cda\n.text:00028cdc\n.text:00028cde\n.text:00028ce0\n.text:00028ce2\n.text:00028ce4\n.text:00028ce6\n.text:00028ce8\n.text:00028cea\n.text:00028cec\n.text:00028cee\n.text:00028cf0\n.text:00028cf2\n.text:00028cf4\n.text:00028cf6\n.text:00028cf8\n.text:00028cfa\n.text:00028cfc\n.text:00028d00\n.text:00028d02\n.text:00028d04\n.text:00028d06\n.text:00028d08\n.text:00028d0a\n.text:00028d0c\n.text:00028d0e\n.text:00028d10\n.text:00028d12\n.text:00028d14\n.text:00028d16\n.text:00028d1a\n.text:00028d1c\n.text:00028d1e\n.text:00028d20\n.text:00028d22\n.text:00028d24\n.text:00028d26\n.text:00028d28\n.text:00028d2a\n.text:00028d2e\n.text:00028d30\n.text:00028d32\n.text:00028d34\n.text:00028d36\n.text:00028d38\n.text:00028d3a\n.text:00028d3c\n.text:00028d3e\n.text:00028d40\n.text:00028d42\n.text:00028d44\n.text:00028d46\n.text:00028d48\n.text:00028d4a\n.text:00028d4c\n.text:00028d4e\n.text:00028d50\n.text:00028d52\n.text:00028d54\n.text:00028d56\n.text:00028d58\n.text:00028d5a\n'
p3499
tp3500
sS'FUN_00018960'
p3501
(S'\n__stdcall FUN_00018960(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11)\n'
p3502
V\u000aundefined4 FUN_00018960(uint param_1,uint param_2,undefined4 param_3,int *param_4)\u000a\u000a{\u000a  uint *puVar1;\u000a  int *piVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint extraout_r1;\u000a  uint extraout_r1_00;\u000a  int iVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  uint uVar12;\u000a  int *piVar13;\u000a  int iVar14;\u000a  int *piVar15;\u000a  int iVar16;\u000a  int iVar17;\u000a  int iVar18;\u000a  int *piVar19;\u000a  int unaff_r5;\u000a  int iVar20;\u000a  int unaff_r6;\u000a  int iVar21;\u000a  int *in_stack_00000024;\u000a  int in_stack_00000028;\u000a  int iStack0000002c;\u000a  int iStack00000040;\u000a  int iStack00000048;\u000a  int iStack00000054;\u000a  int iStack00000058;\u000a  int iStack00000064;\u000a  int *in_stack_00000068;\u000a  int in_stack_0000006c;\u000a  int *param_11;\u000a  int iStack00000074;\u000a  uint in_stack_00000078;\u000a  int *piStack0000007c;\u000a  int in_stack_00000080;\u000a  int in_stack_00000084;\u000a  uint *puStack00000088;\u000a  int in_stack_0000008c;\u000a  uint *in_stack_00000090;\u000a  int in_stack_00000098;\u000a  \u000a  iVar11 = unaff_r6 + unaff_r5 * DAT_00018984 + (int)param_4 * DAT_00018980;\u000a  iVar16 = *(int *)(iVar11 + DAT_00018988);\u000a  iVar11 = *(int *)(iVar11 + DAT_0001898c);\u000a  iVar18 = 0xc;\u000a  do {\u000a    iVar17 = in_stack_00000080 - (param_1 & in_stack_00000078);\u000a    iVar6 = iVar18;\u000a    if (iVar17 <= iVar18) {\u000a      iVar6 = iVar17;\u000a    }\u000a    iVar18 = iVar18 - iVar6;\u000a    iVar5 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar5 + DAT_000189d4) =\u000a         *(byte *)(iVar5 + DAT_000189d4) | (byte)((iVar11 + iVar16 >> iVar18) << iVar17 - iVar6);\u000a    param_1 = iVar6 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar18);\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018a04) = param_1;\u000a  uVar12 = *(uint *)(in_stack_0000008c + in_stack_0000006c * DAT_00018a0c +\u000a                     (int)param_4 * DAT_00018a08 + DAT_00018a10);\u000a  iVar11 = 9;\u000a  do {\u000a    iVar18 = in_stack_00000080 - (param_1 & in_stack_00000078);\u000a    iVar16 = iVar11;\u000a    if (iVar18 <= iVar11) {\u000a      iVar16 = iVar18;\u000a    }\u000a    iVar11 = iVar11 - iVar16;\u000a    iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar6 + DAT_00018a58) =\u000a         *(byte *)(iVar6 + DAT_00018a58) |\u000a         (byte)((((int)(uVar12 + (uVar12 >> 0x1f)) >> 1) >> iVar11) << iVar18 - iVar16);\u000a    param_1 = iVar16 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar11);\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018a84) = param_1;\u000a  iVar16 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_00018a8c +\u000a                    (int)param_4 * DAT_00018a88 + DAT_00018a90);\u000a  iVar11 = in_stack_00000080;\u000a  do {\u000a    iVar6 = in_stack_00000080 - (param_1 & in_stack_00000078);\u000a    iVar18 = iVar11;\u000a    if (iVar6 <= iVar11) {\u000a      iVar18 = iVar6;\u000a    }\u000a    iVar11 = iVar11 - iVar18;\u000a    iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar17 + DAT_00018ea0) =\u000a         *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar16 >> iVar11) << iVar6 - iVar18);\u000a    param_1 = iVar18 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar11);\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a  iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_00018eac +\u000a                    (int)param_4 * DAT_00018ea8 + 0x13e0);\u000a  iVar16 = 4;\u000a  do {\u000a    puStack00000088 = (uint *)0x8;\u000a    iVar6 = 8 - (param_1 & in_stack_00000078);\u000a    iVar18 = iVar16;\u000a    if (iVar6 <= iVar16) {\u000a      iVar18 = iVar6;\u000a    }\u000a    iVar16 = iVar16 - iVar18;\u000a    iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar17 + DAT_00018ea0) =\u000a         *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a    iVar6 = DAT_00018ea4;\u000a    param_1 = iVar18 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar16);\u000a  iVar11 = in_stack_0000008c + param_2 * in_stack_00000084;\u000a  *(uint *)(iVar11 + DAT_00018ea4) = param_1;\u000a  iVar16 = in_stack_0000008c + in_stack_0000006c * DAT_00018eac + (int)param_4 * DAT_00018ea8;\u000a  piVar15 = (int *)(iVar16 + DAT_00018eb0);\u000a  iVar18 = 1;\u000a  if (*(int *)(iVar16 + DAT_00018eb0) == 0) {\u000a    do {\u000a      iVar17 = 8 - (param_1 & in_stack_00000078);\u000a      iVar16 = iVar18;\u000a      if (iVar17 <= iVar18) {\u000a        iVar16 = iVar17;\u000a      }\u000a      param_1 = iVar16 + param_1;\u000a      iVar18 = iVar18 - iVar16;\u000a    } while (0 < iVar18);\u000a    *(uint *)(iVar11 + iVar6) = param_1;\u000a    iVar11 = in_stack_0000008c + in_stack_0000006c * DAT_000192a4 + (int)param_4 * DAT_000192a0;\u000a    piStack0000007c = *(int **)(iVar11 + DAT_000192a8);\u000a    if (piStack0000007c == (int *)0xe) {\u000a      piStack0000007c = (int *)0x10;\u000a      *(undefined4 *)(iVar11 + DAT_000192a8) = 0x10;\u000a      param_2 = *in_stack_00000090;\u000a      param_1 = *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac);\u000a    }\u000a    iVar11 = 5;\u000a    do {\u000a      iVar18 = 8 - (param_1 & in_stack_00000078);\u000a      iVar16 = iVar11;\u000a      if (iVar18 <= iVar11) {\u000a        iVar16 = iVar18;\u000a      }\u000a      iVar11 = iVar11 - iVar16;\u000a      iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar6 + DAT_000192b0) =\u000a           *(byte *)(iVar6 + DAT_000192b0) |\u000a           (byte)(((int)piStack0000007c >> iVar11) << iVar18 - iVar16);\u000a      param_1 = iVar16 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar11);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a    iVar11 = in_stack_0000008c + in_stack_0000006c * DAT_000192a4 + (int)param_4 * DAT_000192a0;\u000a    piStack0000007c = *(int **)(iVar11 + DAT_000192b4);\u000a    if (piStack0000007c == (int *)0xe) {\u000a      piStack0000007c = (int *)0x10;\u000a      *(undefined4 *)(iVar11 + DAT_000192b4) = 0x10;\u000a      param_2 = *in_stack_00000090;\u000a      param_1 = *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac);\u000a    }\u000a    iVar11 = 5;\u000a    do {\u000a      iVar18 = 8 - (param_1 & in_stack_00000078);\u000a      iVar16 = iVar11;\u000a      if (iVar18 <= iVar11) {\u000a        iVar16 = iVar18;\u000a      }\u000a      iVar11 = iVar11 - iVar16;\u000a      iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar6 + DAT_000192b0) =\u000a           *(byte *)(iVar6 + DAT_000192b0) |\u000a           (byte)(((int)piStack0000007c >> iVar11) << iVar18 - iVar16);\u000a      param_1 = iVar16 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar11);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a    iVar11 = in_stack_0000008c + in_stack_0000006c * DAT_000192a4 + (int)param_4 * DAT_000192a0;\u000a    piStack0000007c = *(int **)(iVar11 + DAT_000192b8);\u000a    if (piStack0000007c == (int *)0xe) {\u000a      piStack0000007c = (int *)0x10;\u000a      *(undefined4 *)(iVar11 + DAT_000192b8) = 0x10;\u000a      param_2 = *in_stack_00000090;\u000a      param_1 = *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac);\u000a    }\u000a    iVar11 = 5;\u000a    do {\u000a      iVar18 = 8 - (param_1 & in_stack_00000078);\u000a      iVar16 = iVar11;\u000a      if (iVar18 <= iVar11) {\u000a        iVar16 = iVar18;\u000a      }\u000a      iVar11 = iVar11 - iVar16;\u000a      iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar6 + DAT_000192b0) =\u000a           *(byte *)(iVar6 + DAT_000192b0) |\u000a           (byte)(((int)piStack0000007c >> iVar11) << iVar18 - iVar16);\u000a      param_1 = iVar16 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar11);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a    iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_000192a4 +\u000a                      (int)param_4 * DAT_000192a0 + DAT_000192bc);\u000a    iVar16 = 4;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_000192b0) =\u000a           *(byte *)(iVar17 + DAT_000192b0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a    iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_000192a4 +\u000a                      (int)param_4 * DAT_000192a0 + DAT_000192c0);\u000a    iVar16 = 3;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_000192b0) =\u000a           *(byte *)(iVar17 + DAT_000192b0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a  }\u000a  else {\u000a    do {\u000a      iVar16 = 8 - (param_1 & in_stack_00000078);\u000a      iVar11 = iVar18;\u000a      if (iVar16 <= iVar18) {\u000a        iVar11 = iVar16;\u000a      }\u000a      iVar18 = iVar18 - iVar11;\u000a      iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar6 + DAT_00018ea0) =\u000a           *(byte *)(iVar6 + DAT_00018ea0) | (byte)((1U >> iVar18) << iVar16 - iVar11);\u000a      param_1 = iVar11 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar18);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = *piVar15;\u000a    iVar16 = 2;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_00018ea0) =\u000a           *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_00018eac +\u000a                      (int)param_4 * DAT_00018ea8 + DAT_00018eb4);\u000a    iVar16 = 1;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_00018ea0) =\u000a           *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = in_stack_0000008c + in_stack_0000006c * DAT_00018eac + (int)param_4 * DAT_00018ea8;\u000a    piStack0000007c = *(int **)(iVar11 + DAT_00018eb8);\u000a    if (piStack0000007c == (int *)0xe) {\u000a      piStack0000007c = (int *)0x10;\u000a      *(undefined4 *)(iVar11 + DAT_00018eb8) = 0x10;\u000a      param_2 = *in_stack_00000090;\u000a      param_1 = *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4);\u000a    }\u000a    iVar11 = 5;\u000a    do {\u000a      iVar18 = 8 - (param_1 & in_stack_00000078);\u000a      iVar16 = iVar11;\u000a      if (iVar18 <= iVar11) {\u000a        iVar16 = iVar18;\u000a      }\u000a      iVar11 = iVar11 - iVar16;\u000a      iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar6 + DAT_00018ea0) =\u000a           *(byte *)(iVar6 + DAT_00018ea0) |\u000a           (byte)(((int)piStack0000007c >> iVar11) << iVar18 - iVar16);\u000a      param_1 = iVar16 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar11);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = in_stack_0000008c + in_stack_0000006c * DAT_00018eac + (int)param_4 * DAT_00018ea8;\u000a    piStack0000007c = *(int **)(iVar11 + DAT_00018ebc);\u000a    if (piStack0000007c == (int *)0xe) {\u000a      piStack0000007c = (int *)0x10;\u000a      *(undefined4 *)(iVar11 + DAT_00018ebc) = 0x10;\u000a      param_2 = *in_stack_00000090;\u000a      param_1 = *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4);\u000a    }\u000a    iVar11 = 5;\u000a    do {\u000a      iVar18 = 8 - (param_1 & in_stack_00000078);\u000a      iVar16 = iVar11;\u000a      if (iVar18 <= iVar11) {\u000a        iVar16 = iVar18;\u000a      }\u000a      iVar11 = iVar11 - iVar16;\u000a      iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar6 + DAT_00018ea0) =\u000a           *(byte *)(iVar6 + DAT_00018ea0) |\u000a           (byte)(((int)piStack0000007c >> iVar11) << iVar18 - iVar16);\u000a      param_1 = iVar16 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar11);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_00018eac +\u000a                      (int)param_4 * DAT_00018ea8 + DAT_00018ec0);\u000a    iVar16 = 3;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_00018ea0) =\u000a           *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_00018eac +\u000a                      (int)param_4 * DAT_00018ea8 + DAT_00018ec4);\u000a    iVar16 = 3;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_00018ea0) =\u000a           *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a    *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_00018ea4) = param_1;\u000a    iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_00018eac +\u000a                      (int)param_4 * DAT_00018ea8 + 0x1400);\u000a    iVar16 = 3;\u000a    do {\u000a      iVar6 = 8 - (param_1 & in_stack_00000078);\u000a      iVar18 = iVar16;\u000a      if (iVar6 <= iVar16) {\u000a        iVar18 = iVar6;\u000a      }\u000a      iVar16 = iVar16 - iVar18;\u000a      iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a      *(byte *)(iVar17 + DAT_00018ea0) =\u000a           *(byte *)(iVar17 + DAT_00018ea0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a      param_1 = iVar18 + param_1;\u000a      param_2 = *in_stack_00000090;\u000a    } while (0 < iVar16);\u000a  }\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a  iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_000192a4 +\u000a                    (int)param_4 * DAT_000192a0 + DAT_000192c4);\u000a  iVar16 = 1;\u000a  do {\u000a    iVar6 = 8 - (param_1 & in_stack_00000078);\u000a    iVar18 = iVar16;\u000a    if (iVar6 <= iVar16) {\u000a      iVar18 = iVar6;\u000a    }\u000a    iVar16 = iVar16 - iVar18;\u000a    iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar17 + DAT_000192b0) =\u000a         *(byte *)(iVar17 + DAT_000192b0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a    param_1 = iVar18 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar16);\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a  iVar11 = *(int *)(in_stack_0000008c + in_stack_0000006c * DAT_000192a4 +\u000a                    (int)param_4 * DAT_000192a0 + DAT_000192c8);\u000a  iVar16 = 1;\u000a  do {\u000a    iVar6 = 8 - (param_1 & in_stack_00000078);\u000a    iVar18 = iVar16;\u000a    if (iVar6 <= iVar16) {\u000a      iVar18 = iVar6;\u000a    }\u000a    iVar16 = iVar16 - iVar18;\u000a    iVar17 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar17 + DAT_000192b0) =\u000a         *(byte *)(iVar17 + DAT_000192b0) | (byte)((iVar11 >> iVar16) << iVar6 - iVar18);\u000a    param_1 = iVar18 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar16);\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a  piStack0000007c =\u000a       *(int **)(in_stack_0000008c + in_stack_0000006c * DAT_000192a4 + (int)param_4 * DAT_000192a0\u000a                + DAT_000192cc);\u000a  iVar11 = 1;\u000a  do {\u000a    iVar18 = 8 - (param_1 & in_stack_00000078);\u000a    iVar16 = iVar11;\u000a    if (iVar18 <= iVar11) {\u000a      iVar16 = iVar18;\u000a    }\u000a    iVar11 = iVar11 - iVar16;\u000a    iVar6 = in_stack_0000008c + in_stack_00000084 * param_2 + ((int)param_1 >> 3);\u000a    *(byte *)(iVar6 + DAT_000192b0) =\u000a         *(byte *)(iVar6 + DAT_000192b0) |\u000a         (byte)(((int)piStack0000007c >> iVar11) << iVar18 - iVar16);\u000a    param_1 = iVar16 + param_1;\u000a    param_2 = *in_stack_00000090;\u000a  } while (0 < iVar11);\u000a  *(uint *)(in_stack_0000008c + param_2 * in_stack_00000084 + DAT_000192ac) = param_1;\u000a  param_11 = param_4;\u000a  if ((int)param_4 + 1 < *(int *)(in_stack_0000008c + 0x48)) {\u000a    param_11 = param_4;\u000a    FUN_00018960();\u000a    param_2 = extraout_r1;\u000a  }\u000a  if (in_stack_0000006c != 1) {\u000a    FUN_00018944();\u000a    param_2 = extraout_r1_00;\u000a  }\u000a  if (*in_stack_00000068 != 0) {\u000a    CRC_writeheader(in_stack_0000008c,in_stack_0000008c + in_stack_00000084 * param_2 + DAT_000192b0\u000a                   );\u000a    param_2 = *in_stack_00000090;\u000a  }\u000a  uVar12 = param_2 + 1 & 0xff;\u000a  *in_stack_00000090 = uVar12;\u000a  *(int *)(in_stack_0000008c + DAT_00019630 + in_stack_00000084 * uVar12) =\u000a       *(int *)(in_stack_0000008c + DAT_00019630 + in_stack_00000084 * param_2) + in_stack_00000028;\u000a  puStack00000088 = (uint *)(in_stack_0000008c + DAT_00019634);\u000a  if (*in_stack_00000090 == *(uint *)(in_stack_0000008c + DAT_00019634)) {\u000a    lame_errorf(in_stack_0000008c,DAT_00019638 + 0x19306);\u000a  }\u000a  iVar11 = *(int *)(in_stack_0000008c + 0x18);\u000a  if (*(int *)(in_stack_0000008c + 0x10) == 1) {\u000a    piVar2 = (int *)(in_stack_0000008c + 0x11c);\u000a    piVar15 = (int *)(in_stack_0000008c + 0x124);\u000a    piVar3 = (int *)(in_stack_0000008c + 0x128);\u000a    piVar19 = (int *)(in_stack_0000008c + 300);\u000a    iVar16 = *(int *)(in_stack_0000008c + 0x48);\u000a    iStack00000040 = 0;\u000a    iVar18 = *(int *)(DAT_0001963c + 0x19346);\u000a    iVar6 = *(int *)(DAT_00019640 + 0x1934e);\u000a    iStack00000058 = 0;\u000a    iVar17 = 0;\u000a    piStack0000007c = piVar15;\u000a    do {\u000a      iVar5 = iStack00000040;\u000a      if (0 < iVar16) {\u000a        do {\u000a          iVar16 = in_stack_0000008c + iStack00000058 * DAT_00019648 + iVar5 * DAT_00019644;\u000a          in_stack_00000068 = *(int **)(iVar16 + DAT_0001964c);\u000a          piVar13 = (int *)(iVar16 + DAT_0001964c);\u000a          iVar4 = iVar16 + 0x130;\u000a          iVar7 = *(int *)(iVar16 + 0x13e0) * 4;\u000a          iStack00000064 = 0;\u000a          iVar16 = iStack00000040;\u000a          if (0 < (int)in_stack_00000068) {\u000a            iVar20 = *(int *)(iVar6 + iVar7);\u000a            iVar16 = 0;\u000a            iStack00000064 = 0;\u000a            do {\u000a              param_11 = *(int **)(in_stack_0000008c + iStack00000058 * DAT_00019648 +\u000a                                   iVar5 * DAT_00019644 + iVar16 * 4 + DAT_00019650);\u000a              if (param_11 != (int *)0xffffffff) {\u000a                iVar8 = iVar20;\u000a                if (0 < iVar20) {\u000a                  do {\u000a                    iVar9 = *piVar19;\u000a                    if (iVar9 == 0) {\u000a                      *piVar19 = 8;\u000a                      iVar9 = *piVar3 + 1;\u000a                      *piVar3 = iVar9;\u000a                      iVar10 = in_stack_0000008c + in_stack_00000084 * *puStack00000088;\u000a                      if (*(int *)(iVar10 + DAT_00019630) == *piVar15) {\u000a                        __aeabi_memcpy(*piVar2 + iVar9,iVar10 + DAT_00019654,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar9 = *piVar3 + *(int *)(in_stack_0000008c + 0x18);\u000a                        *piVar3 = iVar9;\u000a                        *piVar15 = *piVar15 + *(int *)(in_stack_0000008c + 0x18) * 8;\u000a                        *puStack00000088 = *puStack00000088 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar2 + iVar9) = 0;\u000a                      iVar9 = *piVar19;\u000a                    }\u000a                    iVar10 = iVar8;\u000a                    if (iVar9 <= iVar8) {\u000a                      iVar10 = iVar9;\u000a                    }\u000a                    *piVar19 = iVar9 - iVar10;\u000a                    iVar8 = iVar8 - iVar10;\u000a                    *(byte *)(*piVar2 + *piVar3) =\u000a                         *(byte *)(*piVar2 + *piVar3) |\u000a                         (byte)(((int)param_11 >> iVar8) << iVar9 - iVar10);\u000a                    *piStack0000007c = *piStack0000007c + iVar10;\u000a                    piVar15 = piStack0000007c;\u000a                  } while (0 < iVar8);\u000a                  in_stack_00000068 = (int *)*piVar13;\u000a                  piVar15 = piStack0000007c;\u000a                }\u000a                iStack00000064 = iStack00000064 + iVar20;\u000a              }\u000a              iVar16 = iVar16 + 1;\u000a            } while (iVar16 < (int)in_stack_00000068);\u000a          }\u000a          iVar20 = in_stack_0000008c + iStack00000058 * DAT_00019648 + iVar5 * DAT_00019644;\u000a          iStack00000054 = *(int *)(iVar20 + DAT_00019658);\u000a          piVar13 = (int *)(iVar20 + DAT_00019658);\u000a          if (iVar16 < iStack00000054) {\u000a            iVar7 = *(int *)(iVar18 + iVar7);\u000a            do {\u000a              param_11 = *(int **)(in_stack_0000008c + iStack00000058 * DAT_00019648 +\u000a                                   iVar5 * DAT_00019644 + iVar16 * 4 + DAT_00019650);\u000a              if (param_11 != (int *)0xffffffff) {\u000a                iVar20 = iVar7;\u000a                if (0 < iVar7) {\u000a                  do {\u000a                    iVar8 = *piVar19;\u000a                    if (iVar8 == 0) {\u000a                      *piVar19 = 8;\u000a                      iVar8 = *piVar3 + 1;\u000a                      *piVar3 = iVar8;\u000a                      iVar9 = in_stack_0000008c + in_stack_00000084 * *puStack00000088;\u000a                      if (*(int *)(iVar9 + DAT_00019630) == *piVar15) {\u000a                        __aeabi_memcpy(*piVar2 + iVar8,iVar9 + DAT_00019654,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar8 = *piVar3 + *(int *)(in_stack_0000008c + 0x18);\u000a                        *piVar3 = iVar8;\u000a                        *piVar15 = *piVar15 + *(int *)(in_stack_0000008c + 0x18) * 8;\u000a                        *puStack00000088 = *puStack00000088 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar2 + iVar8) = 0;\u000a                      iVar8 = *piVar19;\u000a                    }\u000a                    iVar9 = iVar20;\u000a                    if (iVar8 <= iVar20) {\u000a                      iVar9 = iVar8;\u000a                    }\u000a                    *piVar19 = iVar8 - iVar9;\u000a                    iVar20 = iVar20 - iVar9;\u000a                    *(byte *)(*piVar2 + *piVar3) =\u000a                         *(byte *)(*piVar2 + *piVar3) |\u000a                         (byte)(((int)param_11 >> iVar20) << iVar8 - iVar9);\u000a                    *piStack0000007c = *piStack0000007c + iVar9;\u000a                    piVar15 = piStack0000007c;\u000a                  } while (0 < iVar20);\u000a                  iStack00000054 = *piVar13;\u000a                  piVar15 = piStack0000007c;\u000a                }\u000a                iStack00000064 = iStack00000064 + iVar7;\u000a              }\u000a              iVar16 = iVar16 + 1;\u000a            } while (iVar16 < iStack00000054);\u000a          }\u000a          if (*(int *)(in_stack_0000008c + iStack00000058 * DAT_00019648 + iVar5 * DAT_00019644 +\u000a                      DAT_0001965c) == 2) {\u000a            param_11 = (int *)ShortHuffmancodebits(in_stack_0000008c,iVar4);\u000a          }\u000a          else {\u000a            param_11 = (int *)LongHuffmancodebits(in_stack_0000008c,iVar4);\u000a          }\u000a          iVar16 = huffman_coder_count1(in_stack_0000008c,iVar4);\u000a          iVar17 = (int)param_11 + iVar16 + iStack00000064 + iVar17;\u000a          iVar5 = iVar5 + 1;\u000a          iVar16 = *(int *)(in_stack_0000008c + 0x48);\u000a          piVar15 = piStack0000007c;\u000a        } while (iVar5 < iVar16);\u000a      }\u000a      iStack00000058 = iStack00000058 + 1;\u000a    } while (iStack00000058 != 2);\u000a  }\u000a  else {\u000a    iVar17 = 0;\u000a    if (0 < *(int *)(in_stack_0000008c + 0x48)) {\u000a      piVar2 = (int *)(in_stack_0000008c + 0x11c);\u000a      piVar3 = (int *)(in_stack_0000008c + 0x124);\u000a      piStack0000007c = (int *)(in_stack_0000008c + 0x128);\u000a      piVar15 = (int *)(in_stack_0000008c + 300);\u000a      iStack0000002c = 0;\u000a      iVar16 = 0;\u000a      iVar17 = 0;\u000a      param_11 = piVar15;\u000a      do {\u000a        iVar5 = in_stack_0000008c + iVar16 * iteration_finish_one;\u000a        piVar19 = (int *)(iVar5 + DAT_000199b0);\u000a        iVar7 = iVar5 + 0x130;\u000a        iStack00000054 = 0;\u000a        iStack00000048 = 0;\u000a        iVar18 = iStack0000002c;\u000a        iVar6 = iStack0000002c;\u000a        if (*(int *)(iVar5 + DAT_000199b4) == 2) {\u000a          do {\u000a            iVar5 = *(int *)(*piVar19 + iVar18 * 4);\u000a            iVar4 = __divsi3();\u000a            if (2 < iVar5) {\u000a              iVar5 = *(int *)(in_stack_0000008c + iVar16 * iteration_finish_one + iVar18 * 4 +\u000a                              DAT_000199b8);\u000a              iVar20 = 0;\u000a              do {\u000a                piVar13 = piStack0000007c;\u000a                iVar8 = iVar6 * 0xc;\u000a                in_stack_00000068 =\u000a                     *(int **)(in_stack_0000008c + iVar16 * iteration_finish_one + iVar8 +\u000a                              DAT_000199bc);\u000a                if ((int)in_stack_00000068 < 1) {\u000a                  in_stack_00000068 = (int *)0x0;\u000a                }\u000a                iVar9 = iVar5;\u000a                if (0 < iVar5) {\u000a                  do {\u000a                    iVar10 = *piVar15;\u000a                    if (iVar10 == 0) {\u000a                      *piVar15 = 8;\u000a                      iVar10 = *piVar13 + 1;\u000a                      *piVar13 = iVar10;\u000a                      iVar21 = in_stack_0000008c + in_stack_00000084 * *puStack00000088;\u000a                      if (*(int *)(iVar21 + DAT_000199c0) == *piVar3) {\u000a                        __aeabi_memcpy(*piVar2 + iVar10,iVar21 + DAT_000199c4,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar21 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar10 = *piVar13 + iVar21;\u000a                        *piVar13 = iVar10;\u000a                        *piVar3 = *piVar3 + iVar21 * 8;\u000a                        *puStack00000088 = *puStack00000088 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar2 + iVar10) = 0;\u000a                      iVar10 = *param_11;\u000a                      piVar15 = param_11;\u000a                    }\u000a                    iVar21 = iVar9;\u000a                    if (iVar10 <= iVar9) {\u000a                      iVar21 = iVar10;\u000a                    }\u000a                    *piVar15 = iVar10 - iVar21;\u000a                    iVar9 = iVar9 - iVar21;\u000a                    *(byte *)(*piVar2 + *piVar13) =\u000a                         *(byte *)(*piVar2 + *piVar13) |\u000a                         (byte)(((int)in_stack_00000068 >> iVar9) << iVar10 - iVar21);\u000a                    iVar21 = *piVar3 + iVar21;\u000a                    *piVar3 = iVar21;\u000a                  } while (0 < iVar9);\u000a                  iStack00000074 =\u000a                       *(int *)(in_stack_0000008c + iVar16 * iteration_finish_one + iVar8 +\u000a                               DAT_000199c8);\u000a                  iVar9 = iVar5;\u000a                  if (iStack00000074 < 1) {\u000a                    iStack00000074 = 0;\u000a                    iVar9 = iVar5;\u000a                  }\u000a                  do {\u000a                    puVar1 = puStack00000088;\u000a                    iVar10 = *piVar15;\u000a                    if (iVar10 == 0) {\u000a                      *piVar15 = 8;\u000a                      iVar10 = *piStack0000007c + 1;\u000a                      *piStack0000007c = iVar10;\u000a                      iVar14 = in_stack_0000008c + in_stack_00000084 * *puStack00000088;\u000a                      if (*(int *)(iVar14 + DAT_000199c0) == iVar21) {\u000a                        __aeabi_memcpy(*piVar2 + iVar10,iVar14 + DAT_000199c4,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar21 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar10 = *piStack0000007c + iVar21;\u000a                        *piStack0000007c = iVar10;\u000a                        *piVar3 = *piVar3 + iVar21 * 8;\u000a                        *puVar1 = *puVar1 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar2 + iVar10) = 0;\u000a                      iVar10 = *param_11;\u000a                      piVar15 = param_11;\u000a                    }\u000a                    iVar21 = iVar9;\u000a                    if (iVar10 <= iVar9) {\u000a                      iVar21 = iVar10;\u000a                    }\u000a                    *piVar15 = iVar10 - iVar21;\u000a                    iVar9 = iVar9 - iVar21;\u000a                    *(byte *)(*piVar2 + *piStack0000007c) =\u000a                         *(byte *)(*piVar2 + *piStack0000007c) |\u000a                         (byte)((iStack00000074 >> iVar9) << iVar10 - iVar21);\u000a                    iVar21 = *piVar3 + iVar21;\u000a                    *piVar3 = iVar21;\u000a                  } while (0 < iVar9);\u000a                  iStack00000074 =\u000a                       *(int *)(in_stack_0000008c + iVar16 * DAT_00019c6c + iVar8 + DAT_00019c78);\u000a                  iVar8 = iVar5;\u000a                  if (iStack00000074 < 1) {\u000a                    iStack00000074 = 0;\u000a                    iVar8 = iVar5;\u000a                  }\u000a                  do {\u000a                    puVar1 = puStack00000088;\u000a                    iVar9 = *piVar15;\u000a                    if (iVar9 == 0) {\u000a                      *piVar15 = 8;\u000a                      iVar9 = *piStack0000007c + 1;\u000a                      *piStack0000007c = iVar9;\u000a                      iVar10 = in_stack_0000008c + in_stack_00000084 * *puStack00000088;\u000a                      if (*(int *)(iVar10 + DAT_00019c64) == iVar21) {\u000a                        __aeabi_memcpy(*piVar2 + iVar9,iVar10 + DAT_00019c68,\u000a                                       *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                        iVar10 = *(int *)(in_stack_0000008c + 0x18);\u000a                        iVar9 = *piStack0000007c + iVar10;\u000a                        *piStack0000007c = iVar9;\u000a                        *piVar3 = *piVar3 + iVar10 * 8;\u000a                        *puVar1 = *puVar1 + 1 & 0xff;\u000a                      }\u000a                      *(undefined *)(*piVar2 + iVar9) = 0;\u000a                      iVar9 = *param_11;\u000a                      piVar15 = param_11;\u000a                    }\u000a                    iVar21 = iVar8;\u000a                    if (iVar9 <= iVar8) {\u000a                      iVar21 = iVar9;\u000a                    }\u000a                    *piVar15 = iVar9 - iVar21;\u000a                    iVar8 = iVar8 - iVar21;\u000a                    *(byte *)(*piVar2 + *piStack0000007c) =\u000a                         *(byte *)(*piVar2 + *piStack0000007c) |\u000a                         (byte)((iStack00000074 >> iVar8) << iVar9 - iVar21);\u000a                    iVar21 = *piVar3 + iVar21;\u000a                    *piVar3 = iVar21;\u000a                  } while (0 < iVar8);\u000a                }\u000a                iStack00000054 = iStack00000054 + iVar5 * 3;\u000a                iVar6 = iVar6 + 1;\u000a                iVar20 = iVar20 + 1;\u000a              } while (iVar20 < iVar4);\u000a            }\u000a            iVar18 = iVar18 + 1;\u000a          } while (iVar18 != 4);\u000a          iVar18 = ShortHuffmancodebits(in_stack_0000008c,iVar7);\u000a        }\u000a        else {\u000a          do {\u000a            iVar6 = *(int *)(*piVar19 + iVar18 * 4);\u000a            if (0 < iVar6) {\u000a              iVar4 = *(int *)(in_stack_0000008c + iVar16 * DAT_00019c6c + iVar18 * 4 + DAT_00019c70\u000a                              );\u000a              iVar20 = 0;\u000a              iVar5 = iStack00000048;\u000a              do {\u000a                iStack00000074 =\u000a                     *(int *)(in_stack_0000008c + iVar16 * DAT_00019c6c + iVar5 * 4 + DAT_00019c74);\u000a                iVar8 = iVar4;\u000a                piVar13 = piStack0000007c;\u000a                if (iStack00000074 < 1) {\u000a                  iStack00000074 = 0;\u000a                  iVar8 = iVar4;\u000a                  piVar13 = piStack0000007c;\u000a                }\u000a                while (0 < iVar8) {\u000a                  iVar9 = *piVar15;\u000a                  piStack0000007c = piVar13;\u000a                  if (iVar9 == 0) {\u000a                    *piVar15 = 8;\u000a                    iVar9 = *piVar13 + 1;\u000a                    *piVar13 = iVar9;\u000a                    iVar10 = in_stack_0000008c + in_stack_00000084 * *puStack00000088;\u000a                    piStack0000007c = piVar13;\u000a                    if (*(int *)(iVar10 + DAT_00019c64) == *piVar3) {\u000a                      piStack0000007c = piVar13;\u000a                      __aeabi_memcpy(*piVar2 + iVar9,iVar10 + DAT_00019c68,\u000a                                     *(undefined4 *)(in_stack_0000008c + 0x18));\u000a                      iVar10 = *(int *)(in_stack_0000008c + 0x18);\u000a                      iVar9 = *piVar13 + iVar10;\u000a                      *piVar13 = iVar9;\u000a                      *piVar3 = *piVar3 + iVar10 * 8;\u000a                      *puStack00000088 = *puStack00000088 + 1 & 0xff;\u000a                    }\u000a                    *(undefined *)(*piVar2 + iVar9) = 0;\u000a                    iVar9 = *param_11;\u000a                    piVar15 = param_11;\u000a                  }\u000a                  iVar10 = iVar8;\u000a                  if (iVar9 <= iVar8) {\u000a                    iVar10 = iVar9;\u000a                  }\u000a                  *piVar15 = iVar9 - iVar10;\u000a                  *(byte *)(*piVar2 + *piStack0000007c) =\u000a                       *(byte *)(*piVar2 + *piStack0000007c) |\u000a                       (byte)((iStack00000074 >> iVar8 - iVar10) << iVar9 - iVar10);\u000a                  *piVar3 = *piVar3 + iVar10;\u000a                  iVar8 = iVar8 - iVar10;\u000a                  piVar13 = piStack0000007c;\u000a                }\u000a                iVar5 = iVar5 + 1;\u000a                iVar20 = iVar20 + 1;\u000a                piStack0000007c = piVar13;\u000a              } while (iVar20 != iVar6);\u000a              iStack00000048 = iVar6 + iStack00000048;\u000a              iStack00000054 = iVar6 * iVar4 + iStack00000054;\u000a              piStack0000007c = piVar13;\u000a            }\u000a            iVar18 = iVar18 + 1;\u000a          } while (iVar18 != 4);\u000a          iVar18 = LongHuffmancodebits(in_stack_0000008c,iVar7);\u000a        }\u000a        iVar6 = huffman_coder_count1(in_stack_0000008c,iVar7);\u000a        iVar17 = iStack00000054 + iVar17 + iVar18 + iVar6;\u000a        iVar16 = iVar16 + 1;\u000a      } while (iVar16 < *(int *)(in_stack_0000008c + 0x48));\u000a    }\u000a  }\u000a  iVar16 = DAT_00019c7c;\u000a  drain_into_ancillary(in_stack_0000008c,*(undefined4 *)(in_stack_0000008c + DAT_00019c7c));\u000a  puStack00000088 = (uint *)(iVar17 + iVar11 * 8 + *(int *)(in_stack_0000008c + iVar16));\u000a  *in_stack_00000024 =\u000a       ((int)((in_stack_00000028 - (int)puStack00000088) +\u000a             ((uint)(in_stack_00000028 - (int)puStack00000088 >> 0x1f) >> 0x1d)) >> 3) +\u000a       *in_stack_00000024;\u000a  iVar11 = DAT_00019c80;\u000a  piVar15 = (int *)(in_stack_0000008c + DAT_00019c80);\u000a  iVar18 = compute_flushbits(in_stack_0000008c,&stack0x00000094);\u000a  if (iVar18 != *(int *)(in_stack_0000008c + iVar11)) {\u000a    lame_errorf(in_stack_0000008c,DAT_00019c84 + 0x19b76);\u000a    iVar18 = *piVar15;\u000a  }\u000a  if (*in_stack_00000024 * 8 - iVar18 != 0) {\u000a    piStack0000007c = *(int **)(in_stack_0000008c + iVar16);\u000a    param_11 = (int *)(*(int *)(in_stack_0000008c + 0x18) * 8);\u000a    lame_errorf(in_stack_0000008c,DAT_00019c88 + 0x19bde,*in_stack_00000024 * 8,iVar18);\u000a    lame_errorf(in_stack_0000008c,DAT_00019c8c + 0x19bee);\u000a    lame_errorf(in_stack_0000008c,DAT_00019c90 + 0x19bfa);\u000a    lame_errorf(in_stack_0000008c,DAT_00019c94 + 0x19c06);\u000a    lame_errorf(in_stack_0000008c,DAT_00019c98 + 0x19c12);\u000a    *piVar15 = *in_stack_00000024 << 3;\u000a  }\u000a  iVar11 = *(int *)(in_stack_0000008c + 0x124);\u000a  if (DAT_00019c9c <= iVar11) {\u000a    piVar15 = (int *)(in_stack_0000008c + DAT_00019c64);\u000a    iVar16 = 0x100;\u000a    do {\u000a      *piVar15 = *piVar15 - iVar11;\u000a      piVar15 = piVar15 + 0xc;\u000a      iVar16 = iVar16 + -1;\u000a    } while (iVar16 != 0);\u000a    *(undefined4 *)(in_stack_0000008c + 0x124) = 0;\u000a  }\u000a  if (**(int **)(DAT_00019ca0 + 0x19c52) == in_stack_00000098) {\u000a    return 0;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3503
S'str r3,[sp,#0x70]\nldr r2,[0x00018980]\nmul r2,r3\nldr r3,[0x00018984]\nmul r3,r5\nadd r3,r6,r3\n'
p3504
S'1c 93\n07 4a\n5a 43\n07 4b\n6b 43\nf3 18\n'
p3505
S'.text:00018960\n.text:00018962\n.text:00018964\n.text:00018966\n.text:00018968\n.text:0001896a\n'
p3506
tp3507
sS'lame_mp3_tags_fid'
p3508
(S'\n__stdcall lame_mp3_tags_fid()\n'
p3509
V\u000avoid lame_mp3_tags_fid(int *piParm1,FILE *pFParm2)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  \u000a  if ((((piParm1 != (int *)0x0) && (*piParm1 == DAT_000217c8)) &&\u000a      (piVar2 = (int *)piParm1[0x48], piVar2 != (int *)0x0)) &&\u000a     (((*piVar2 == DAT_000217c8 && (pFParm2 != (FILE *)0x0)) &&\u000a      ((piVar2[0x27] != 0 && (iVar1 = fseek(pFParm2,0,0), iVar1 == 0)))))) {\u000a    iVar1 = PutVbrTag(piParm1,pFParm2);\u000a    if (iVar1 == -3) {\u000a      iVar1 = DAT_000217cc + 0x217b8;\u000a    }\u000a    else {\u000a      if (iVar1 == -2) {\u000a        iVar1 = DAT_000217d0 + 0x217be;\u000a      }\u000a      else {\u000a        if (iVar1 != -1) {\u000a          return;\u000a        }\u000a        iVar1 = DAT_000217d4 + 0x217b2;\u000a      }\u000a    }\u000a    lame_errorf(piVar2,iVar1);\u000a  }\u000a  return;\u000a}\u000a\u000a
p3510
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x4\npush { r1 }\npop { r5 }\npush { r0 }\npop { r6 }\ncmp r6,#0x0\nbeq 0x000217c4\nldr r0,[r6,#0x0]\nldr r1,[0x000217c8]\ncmp r0,r1\nbne 0x000217c4\nmov r0,#0x9\nlsl r0,r0,#0x5\nldr r4,[r6,r0]\ncmp r4,#0x0\nbeq 0x000217c4\nldr r0,[r4,#0x0]\nldr r1,[0x000217c8]\ncmp r0,r1\nbne 0x000217c4\nmov r0,#0x9c\ncmp r5,#0x0\nbeq 0x000217c4\nldr r0,[r4,r0]\ncmp r0,#0x0\nbeq 0x000217c4\nmov r1,#0x0\nstr r1,[sp,#0x0]\npush { r5 }\npop { r0 }\npush { r1 }\npop { r2 }\nbl 0x00038080\ncmp r0,#0x0\nbne 0x000217c4\npush { r6 }\npop { r0 }\npush { r5 }\npop { r1 }\nbl 0x00038090\nmov r1,#0x2\nmvn r1,r1\n'
p3511
S'f0 b5\n03 af\n81 b0\n02 b4\n20 bc\n01 b4\n40 bc\n00 2e\n3a d0\n30 68\n1d 49\n88 42\n36 d1\n09 20\n40 01\n34 58\n00 2c\n31 d0\n20 68\n19 49\n88 42\n2d d1\n9c 20\n00 2d\n2a d0\n20 58\n00 28\n27 d0\n00 21\n00 91\n20 b4\n01 bc\n02 b4\n04 bc\n16 f0 7e fc\n00 28\n1d d1\n40 b4\n01 bc\n20 b4\n02 bc\n16 f0 7e fc\n02 21\nc9 43\n'
p3512
S'.text:0002173c\n.text:0002173e\n.text:00021740\n.text:00021742\n.text:00021744\n.text:00021746\n.text:00021748\n.text:0002174a\n.text:0002174c\n.text:0002174e\n.text:00021750\n.text:00021752\n.text:00021754\n.text:00021756\n.text:00021758\n.text:0002175a\n.text:0002175c\n.text:0002175e\n.text:00021760\n.text:00021762\n.text:00021764\n.text:00021766\n.text:00021768\n.text:0002176a\n.text:0002176c\n.text:0002176e\n.text:00021770\n.text:00021772\n.text:00021774\n.text:00021776\n.text:00021778\n.text:0002177a\n.text:0002177c\n.text:0002177e\n.text:00021780\n.text:00021784\n.text:00021786\n.text:00021788\n.text:0002178a\n.text:0002178c\n.text:0002178e\n.text:00021790\n.text:00021794\n.text:00021796\n'
p3513
tp3514
sS'fft_short'
p3515
(S'\n__stdcall fft_short()\n'
p3516
V\u000avoid fft_short(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00038280 + DAT_0003827c))();\u000a  return;\u000a}\u000a\u000a
p3517
S'ldr r12,[0x3827c]\nadd pc,r12,pc\n'
p3518
S'00 c0 9f e5\n0f f0 8c e0\n'
p3519
S'.text:00038274\n.text:00038278\n'
p3520
tp3521
sS'FUN_00018944'
p3522
(S'\n__stdcall FUN_00018944(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined param_9, undefined param_10, undefined4 param_11, undefined4 param_12)\n'
p3523
V\u000avoid FUN_00018944(undefined4 param_1,int param_2)\u000a\u000a{\u000a  int extraout_r1;\u000a  int unaff_r4;\u000a  int unaff_r6;\u000a  int param_12;\u000a  \u000a  if (unaff_r4 < 1) {\u000a    FUN_00019276();\u000a    param_2 = extraout_r1;\u000a  }\u000a  FUN_00018960(*(undefined4 *)(unaff_r6 + param_2 * param_12 + DAT_0001895c),param_2,DAT_0001895c,0)\u000a  ;\u000a  return;\u000a}\u000a\u000a
p3524
S'str r5,[sp,#0x6c]\ncmp r4,#0x1\nbge 0x0001894e\nbl 0x00019276\nldr r0,[sp,#0x84]\nmul r0,r1\nadd r0,r6,r0\nldr r2,[0x0001895c]\nldr r0,[r0,r2]\nmov r3,#0x0\nb 0x00018960\n'
p3525
S'1b 95\n01 2c\n01 da\n00 f0 94 fc\n21 98\n48 43\n30 18\n01 4a\n80 58\n00 23\n01 e0\n'
p3526
S'.text:00018944\n.text:00018946\n.text:00018948\n.text:0001894a\n.text:0001894e\n.text:00018950\n.text:00018952\n.text:00018954\n.text:00018956\n.text:00018958\n.text:0001895a\n'
p3527
tp3528
sS'atexit'
p3529
(S'\n__stdcall atexit(__func * __func)\n'
p3530
V\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_00040c64)\u000a                    ((int)&DAT_00016d0c + DAT_00016d10,__func,DAT_00016d0c + 0x16d08);\u000a  return iVar1;\u000a}\u000a\u000a
p3531
S'cpy r1,r0\nldr r2,[0x16d0c]\nldr r0,[0x16d10]\nadd r2,pc,r2\nadd r0,pc,r0\nb 0x00016204\n'
p3532
S'00 10 a0 e1\n0c 20 9f e5\n0c 00 9f e5\n02 20 8f e0\n00 00 8f e0\n3d fd ff ea\n'
p3533
S'.text:00016cf4\n.text:00016cf8\n.text:00016cfc\n.text:00016d00\n.text:00016d04\n.text:00016d08\n'
p3534
tp3535
sS'id3tag_set_comment_latin1'
p3536
(S'\n__stdcall id3tag_set_comment_latin1()\n'
p3537
V\u000avoid id3tag_set_comment_latin1\u000a               (undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  id3v2_add_latin1(uParm1,DAT_0001d5a0,uParm2,uParm3,uParm4);\u000a  return;\u000a}\u000a\u000a
p3538
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\nsub sp,#0x8\npush { r2 }\npop { r4 }\npush { r1 }\npop { r2 }\nmov r1,sp\nstr r3,[r1,#0x0]\nldr r1,[0x0001d5a0]\npush { r4 }\npop { r3 }\nbl 0x0001d3b0\nadd sp,#0x8\npop { r4, r6, r7, pc }\n'
p3539
S'd0 b5\n02 af\n82 b0\n04 b4\n10 bc\n02 b4\n04 bc\n69 46\n0b 60\n03 49\n10 b4\n08 bc\nff f7 0a ff\n02 b0\nd0 bd\n'
p3540
S'.text:0001d580\n.text:0001d582\n.text:0001d584\n.text:0001d586\n.text:0001d588\n.text:0001d58a\n.text:0001d58c\n.text:0001d58e\n.text:0001d590\n.text:0001d592\n.text:0001d594\n.text:0001d596\n.text:0001d598\n.text:0001d59c\n.text:0001d59e\n'
p3541
tp3542
sS'lame_set_athaa_loudapprox'
p3543
(S'\n__stdcall lame_set_athaa_loudapprox()\n'
p3544
V\u000aundefined4 lame_set_athaa_loudapprox(void)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p3545
S'mov r0,#0x0\nbx lr\n'
p3546
S'00 20\n70 47\n'
p3547
S'.text:0002ed1a\n.text:0002ed1c\n'
p3548
tp3549
sS'writeLoBytes'
p3550
(S'\n__stdcall writeLoBytes()\n'
p3551
V\u000aundefined * writeLoBytes(undefined *puParm1,ushort *puParm2,int iParm3)\u000a\u000a{\u000a  ushort uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  undefined *puVar4;\u000a  uint uVar5;\u000a  undefined uVar6;\u000a  \u000a  if (iParm3 != 0) {\u000a    uVar2 = (uint)*puParm2;\u000a    if ((uVar2 == DAT_0001e860) || (puVar4 = puParm1, iVar3 = iParm3, uVar2 == DAT_0001e864)) {\u000a      iParm3 = iParm3 + -1;\u000a      puParm2 = puParm2 + 1;\u000a      puVar4 = puParm1;\u000a      iVar3 = iParm3;\u000a      if (iParm3 == 0) {\u000a        return puParm1;\u000a      }\u000a    }\u000a    do {\u000a      uVar1 = *puParm2;\u000a      uVar5 = (uint)uVar1;\u000a      puParm2 = puParm2 + 1;\u000a      iParm3 = iParm3 + -1;\u000a      if (uVar2 == DAT_0001e860) {\u000a        uVar5 = uVar5 << 8 | (uint)(uVar1 >> 8);\u000a      }\u000a      uVar6 = 0x20;\u000a      if ((DAT_0001e868 & uVar5 - 0x20) < 0xe0) {\u000a        uVar6 = (undefined)uVar5;\u000a      }\u000a      *puVar4 = uVar6;\u000a      puVar4 = puVar4 + 1;\u000a    } while (iParm3 != 0);\u000a    puParm1 = puParm1 + iVar3;\u000a  }\u000a  return puParm1;\u000a}\u000a\u000a
p3552
S'push { r4, r5, r6, r7, lr }\nsub sp,#0x4\npush { r0 }\npop { r3 }\ncmp r2,#0x0\nbeq 0x0001e856\nldrh r0,[r1,#0x0]\nldr r4,[0x0001e860]\ncmp r0,r4\nbeq 0x0001e80a\nldr r4,[0x0001e864]\ncmp r0,r4\nbne 0x0001e812\nsub r2,#0x1\nadd r1,#0x2\ncmp r2,#0x0\nbeq 0x0001e856\nstr r2,[sp,#0x0]\npush { r2 }\npop { r4 }\npush { r3 }\npop { r2 }\npush { r2 }\npop { r5 }\nldrh r6,[r1,#0x0]\nadd r1,#0x2\nsub r4,#0x1\nldr r7,[0x0001e860]\ncmp r0,r7\nbne 0x0001e832\nlsr r7,r6,#0x8\nlsl r6,r6,#0x8\norr r6,r7\npush { r6 }\npop { r7 }\nsub r7,#0x20\nldr r3,[0x0001e868]\nand r3,r7\nmov r7,#0x20\ncmp r3,#0xdf\nbhi 0x0001e846\npush { r6 }\npop { r7 }\nstrb r7,[r5,#0x0]\nadd r5,#0x1\ncmp r4,#0x0\nbne 0x0001e820\npush { r2 }\npop { r3 }\nldr r0,[sp,#0x0]\nadd r3,r3,r0\npush { r3 }\npop { r0 }\nadd sp,#0x4\npop { r4, r5, r6, r7, pc }\n'
p3553
S'f0 b5\n81 b0\n01 b4\n08 bc\n00 2a\n2c d0\n08 88\n18 4c\na0 42\n02 d0\n17 4c\na0 42\n03 d1\n01 3a\n02 31\n00 2a\n21 d0\n00 92\n04 b4\n10 bc\n08 b4\n04 bc\n04 b4\n20 bc\n0e 88\n02 31\n01 3c\n0e 4f\nb8 42\n02 d1\n37 0a\n36 02\n3e 43\n40 b4\n80 bc\n20 3f\n0b 4b\n3b 40\n20 27\ndf 2b\n01 d8\n40 b4\n80 bc\n2f 70\n01 35\n00 2c\ne8 d1\n04 b4\n08 bc\n00 98\n1b 18\n08 b4\n01 bc\n01 b0\nf0 bd\n'
p3554
S'.text:0001e7f0\n.text:0001e7f2\n.text:0001e7f4\n.text:0001e7f6\n.text:0001e7f8\n.text:0001e7fa\n.text:0001e7fc\n.text:0001e7fe\n.text:0001e800\n.text:0001e802\n.text:0001e804\n.text:0001e806\n.text:0001e808\n.text:0001e80a\n.text:0001e80c\n.text:0001e80e\n.text:0001e810\n.text:0001e812\n.text:0001e814\n.text:0001e816\n.text:0001e818\n.text:0001e81a\n.text:0001e81c\n.text:0001e81e\n.text:0001e820\n.text:0001e822\n.text:0001e824\n.text:0001e826\n.text:0001e828\n.text:0001e82a\n.text:0001e82c\n.text:0001e82e\n.text:0001e830\n.text:0001e832\n.text:0001e834\n.text:0001e836\n.text:0001e838\n.text:0001e83a\n.text:0001e83c\n.text:0001e83e\n.text:0001e840\n.text:0001e842\n.text:0001e844\n.text:0001e846\n.text:0001e848\n.text:0001e84a\n.text:0001e84c\n.text:0001e84e\n.text:0001e850\n.text:0001e852\n.text:0001e854\n.text:0001e856\n.text:0001e858\n.text:0001e85a\n.text:0001e85c\n'
p3555
tp3556
sS'lame_get_msfix'
p3557
(S'\n__stdcall lame_get_msfix()\n'
p3558
V\u000avoid lame_get_msfix(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037f30 + DAT_00037f2c))();\u000a  return;\u000a}\u000a\u000a
p3559
S'ldr r12,[0x37f2c]\nadd pc,r12,pc\n'
p3560
S'00 c0 9f e5\n0f f0 8c e0\n'
p3561
S'.text:00037f24\n.text:00037f28\n'
p3562
tp3563
sS'__gnu_Unwind_Restore_VFP'
p3564
(S'\n__stdcall __gnu_Unwind_Restore_VFP()\n'
p3565
V\u000avoid __gnu_Unwind_Restore_VFP(undefined4 uParm1)\u000a\u000a{\u000a  undefined4 in_cr0;\u000a  \u000a  coprocessor_load(0xb,in_cr0,uParm1);\u000a  return;\u000a}\u000a\u000a
p3566
S'ldc p11,cr0,[r0],{0x21}\nbx lr\n'
p3567
S'21 0b 90 ec\n1e ff 2f e1\n'
p3568
S'.text:000372bc\n.text:000372c0\n'
p3569
tp3570
sS'get_lame_very_short_version'
p3571
(S'\n__stdcall get_lame_very_short_version()\n'
p3572
V\u000aundefined * get_lame_very_short_version(void)\u000a\u000a{\u000a  return &UNK_00035016 + DAT_00035018;\u000a}\u000a\u000a
p3573
S'ldr r0,[0x00035018]\nadd r0,pc\nbx lr\n'
p3574
S'01 48\n78 44\n70 47\n'
p3575
S'.text:00035010\n.text:00035012\n.text:00035014\n'
p3576
tp3577
sS'_Unwind_Backtrace'
p3578
(S'\n__stdcall _Unwind_Backtrace()\n'
p3579
V\u000avoid _Unwind_Backtrace(undefined4 uParm1,undefined4 uParm2,undefined4 uParm3,undefined4 uParm4)\u000a\u000a{\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  undefined4 uStack56;\u000a  undefined4 uStack52;\u000a  undefined4 uStack4;\u000a  \u000a  uStack4 = 0x37434;\u000a  uStack68 = 0;\u000a  uStack64 = uParm1;\u000a  uStack60 = uParm2;\u000a  uStack56 = uParm3;\u000a  uStack52 = uParm4;\u000a  __gnu_Unwind_Backtrace(uParm1,uParm2,&uStack68,0,uParm3);\u000a  return;\u000a}\u000a\u000a
p3580
S'stmdb sp!,{ sp lr pc}\nstmdb sp!,{ r0 r1 r2 r3 r4 r5 r6 r7 r8 r9 r10 r11 r12 }\nmov r3,#0x0\nstmdb sp!,{ r2 r3 }\nadd r2,sp,#0x4\nbl 0x00016cc0\nldr lr,[sp,#0x40]\nadd sp,sp,#0x48\nbx lr\n'
p3581
S'00 e0 2d e9\nff 1f 2d e9\n00 30 a0 e3\n0c 00 2d e9\n04 20 8d e2\n1e 7e ff eb\n40 e0 9d e5\n48 d0 8d e2\n1e ff 2f e1\n'
p3582
S'.text:0003742c\n.text:00037430\n.text:00037434\n.text:00037438\n.text:0003743c\n.text:00037440\n.text:00037444\n.text:00037448\n.text:0003744c\n'
p3583
tp3584
sS'Java_io_dcloud_feature_audio_mp3_SimpleLame_close'
p3585
(S'\n__stdcall Java_io_dcloud_feature_audio_mp3_SimpleLame_close()\n'
p3586
V\u000avoid Java_io_dcloud_feature_audio_mp3_SimpleLame_close(void)\u000a\u000a{\u000a  undefined4 *puVar1;\u000a  \u000a  puVar1 = (undefined4 *)(DAT_00016d28 + 0x16d1e);\u000a  lame_close(*puVar1);\u000a  *puVar1 = 0;\u000a  return;\u000a}\u000a\u000a
p3587
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\nldr r4,[0x00016d28]\nadd r4,pc\nldr r0,[r4,#0x0]\nbl 0x000378e0\nmov r0,#0x0\nstr r0,[r4,#0x0]\npop { r4, r6, r7, pc }\n'
p3588
S'd0 b5\n02 af\n03 4c\n7c 44\n20 68\n20 f0 df fd\n00 20\n20 60\nd0 bd\n'
p3589
S'.text:00016d14\n.text:00016d16\n.text:00016d18\n.text:00016d1a\n.text:00016d1c\n.text:00016d1e\n.text:00016d22\n.text:00016d24\n.text:00016d26\n'
p3590
tp3591
sS'lame_get_write_id3tag_automatic'
p3592
(S'\n__stdcall lame_get_write_id3tag_automatic()\n'
p3593
V\u000aundefined4 lame_get_write_id3tag_automatic(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 1;\u000a  if (iVar1 != 0) {\u000a    uVar2 = *(undefined4 *)(iParm1 + 0x44);\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3594
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r0,#0x1\ncmp r1,#0x0\nbeq 0x0002f544\nldr r0,[r4,#0x44]\npop { r4, r6, r7, pc }\n'
p3595
S'd0 b5\n02 af\n01 b4\n10 bc\n08 f0 7c ff\n01 b4\n02 bc\n01 20\n00 29\n00 d0\n60 6c\nd0 bd\n'
p3596
S'.text:0002f52c\n.text:0002f52e\n.text:0002f530\n.text:0002f532\n.text:0002f534\n.text:0002f538\n.text:0002f53a\n.text:0002f53c\n.text:0002f53e\n.text:0002f540\n.text:0002f542\n.text:0002f544\n'
p3597
tp3598
sS'FUN_000359ec'
p3599
(S'\n__stdcall FUN_000359ec()\n'
p3600
V\u000aulonglong FUN_000359ec(uint uParm1,uint uParm2,uint uParm3,uint uParm4)\u000a\u000a{\u000a  uint uVar1;\u000a  uint unaff_r4;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint in_r12;\u000a  bool bVar4;\u000a  \u000a  uVar2 = in_r12 & uParm4 >> 0x14;\u000a  uVar3 = uParm2;\u000a  if (unaff_r4 != in_r12 || uVar2 != in_r12) {\u000a    if (unaff_r4 == in_r12) {\u000a      uVar3 = uParm2;\u000a      if (((uParm1 | uParm2 << 0xc) == 0) && (uParm1 = uParm3, uVar3 = uParm4, uVar2 != in_r12)) {\u000aLAB_00035834:\u000a        return (ulonglong)((uParm2 ^ uParm4) & 0x80000000 | 0x7ff00000);\u000a      }\u000a    }\u000a    else {\u000a      if (uVar2 == in_r12) {\u000a        uParm1 = uParm3;\u000a        uVar3 = uParm4;\u000a        if ((uParm3 | uParm4 << 0xc) == 0) {\u000aLAB_000357e8:\u000a          return (ulonglong)((uParm2 ^ uParm4) & 0x80000000);\u000a        }\u000a      }\u000a      else {\u000a        bVar4 = (uParm1 | uParm2 << 1) == 0;\u000a        if (!bVar4) {\u000a          bVar4 = (uParm3 | uParm4 << 1) == 0;\u000a        }\u000a        if (!bVar4) {\u000a          if (unaff_r4 == 0) {\u000a            uVar3 = uParm2 & 0x80000000;\u000a            do {\u000a              uVar1 = uParm1 >> 0x1f;\u000a              uParm1 = uParm1 << 1;\u000a              uParm2 = uParm2 * 2 + uVar1;\u000a            } while ((uParm2 & 0x100000) == 0);\u000a            uParm2 = uParm2 | uVar3;\u000a            if (uVar2 != 0) {\u000a              return CONCAT44(uParm1,uParm2);\u000a            }\u000a          }\u000a          do {\u000a            uVar3 = uParm3 >> 0x1f;\u000a            uParm3 = uParm3 << 1;\u000a            uParm4 = uParm4 * 2 + uVar3;\u000a          } while ((uParm4 & 0x100000) == 0);\u000a          return CONCAT44(uParm1,uParm2);\u000a        }\u000a        if ((uParm1 | uParm2 << 1) != 0) goto LAB_00035834;\u000a        uVar3 = uParm2;\u000a        if ((uParm3 | uParm4 << 1) != 0) goto LAB_000357e8;\u000a      }\u000a    }\u000a  }\u000a  return CONCAT44(uParm1,uVar3) | 0x7ff80000;\u000a}\u000a\u000a
p3601
S'and r5,r12,r3, lsr #0x14\nteq r4,r12\nteqeq r5,r12\nbeq 0x0003584c\nteq r4,r12\nbne 0x00035a20\norrs r4,r0,r1, lsl #0xc\nbne 0x0003584c\nteq r5,r12\nbne 0x00035834\ncpy r0,r2\ncpy r1,r3\nb 0x0003584c\nteq r5,r12\nbne 0x00035a3c\norrs r5,r2,r3, lsl #0xc\nbeq 0x000357e8\ncpy r0,r2\ncpy r1,r3\nb 0x0003584c\norrs r6,r0,r1, lsl #0x1\norrnes r6,r2,r3, lsl #0x1\nbne 0x00035780\norrs r4,r0,r1, lsl #0x1\nbne 0x00035834\norrs r5,r2,r3, lsl #0x1\nbne 0x000357e8\nb 0x0003584c\n'
p3602
S'23 5a 0c e0\n0c 00 34 e1\n0c 00 35 01\n93 ff ff 0a\n0c 00 34 e1\n06 00 00 1a\n01 46 90 e1\n8f ff ff 1a\n0c 00 35 e1\n87 ff ff 1a\n02 00 a0 e1\n03 10 a0 e1\n8a ff ff ea\n0c 00 35 e1\n04 00 00 1a\n03 56 92 e1\n6d ff ff 0a\n02 00 a0 e1\n03 10 a0 e1\n83 ff ff ea\n81 60 90 e1\n83 60 92 11\n4d ff ff 1a\n81 40 90 e1\n78 ff ff 1a\n83 50 92 e1\n63 ff ff 1a\n7b ff ff ea\n'
p3603
S'.text:000359ec\n.text:000359f0\n.text:000359f4\n.text:000359f8\n.text:000359fc\n.text:00035a00\n.text:00035a04\n.text:00035a08\n.text:00035a0c\n.text:00035a10\n.text:00035a14\n.text:00035a18\n.text:00035a1c\n.text:00035a20\n.text:00035a24\n.text:00035a28\n.text:00035a2c\n.text:00035a30\n.text:00035a34\n.text:00035a38\n.text:00035a3c\n.text:00035a40\n.text:00035a44\n.text:00035a48\n.text:00035a4c\n.text:00035a50\n.text:00035a54\n.text:00035a58\n'
p3604
tp3605
sS'lame_get_VBR_min_bitrate_kbps'
p3606
(S'\n__stdcall lame_get_VBR_min_bitrate_kbps(lame_global_flags * gfp)\n'
p3607
V\u000aint lame_get_VBR_min_bitrate_kbps(lame_global_flags *gfp)\u000a\u000a{\u000a  int iVar1;\u000a  int in_r2;\u000a  \u000a  iVar1 = __aeabi_memset((int)&gfp->class_id + in_r2,3 - in_r2,0x20);\u000a  return iVar1;\u000a}\u000a\u000a
p3608
S'add r0,r0,r2\nmov r1,#0x3\nsub r1,r1,r2\nmov r2,#0x20\nbl 0x00037d90\npop { r7, pc }\n'
p3609
S'80 18\n03 21\n89 1a\n20 22\n19 f0 34 fa\n80 bd\n'
p3610
S'.text:0001e91c\n.text:0001e91e\n.text:0001e920\n.text:0001e922\n.text:0001e924\n.text:0001e928\n'
p3611
tp3612
sS'lame_set_ATHshort'
p3613
(S'\n__stdcall lame_set_ATHshort()\n'
p3614
V\u000aundefined4 lame_set_ATHshort(int iParm1,undefined4 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if (iVar1 != 0) {\u000a    *(undefined4 *)(iParm1 + 0xd4) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3615
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r1,#0x0\nbeq 0x0002ebb2\nmov r0,#0xd4\nstr r4,[r5,r0]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3616
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 49 fc\n01 b4\n02 bc\n00 22\nd0 43\n00 29\n03 d0\nd4 20\n2c 50\n04 b4\n01 bc\nb0 bd\n'
p3617
S'.text:0002eb8e\n.text:0002eb90\n.text:0002eb92\n.text:0002eb94\n.text:0002eb96\n.text:0002eb98\n.text:0002eb9a\n.text:0002eb9e\n.text:0002eba0\n.text:0002eba2\n.text:0002eba4\n.text:0002eba6\n.text:0002eba8\n.text:0002ebaa\n.text:0002ebac\n.text:0002ebae\n.text:0002ebb0\n.text:0002ebb2\n'
p3618
tp3619
sS'qsort'
p3620
(S'\n__stdcall qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)\n'
p3621
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\u000a\u000a{\u000a  (*(noquant_count_bits + DAT_0003834c))();\u000a  return;\u000a}\u000a\u000a
p3622
S'ldr r12,[0x3834c]\nadd pc,r12,pc\n'
p3623
S'00 c0 9f e5\n0f f0 8c e0\n'
p3624
S'.text:00038344\n.text:00038348\n'
p3625
tp3626
sS'_Unwind_decode_typeinfo_ptr'
p3627
(S'\n__stdcall _Unwind_decode_typeinfo_ptr(_Unwind_Word ptr)\n'
p3628
V\u000a_Unwind_Word _Unwind_decode_typeinfo_ptr(_Unwind_Word ptr)\u000a\u000a{\u000a  int in_r1;\u000a  undefined4 uStack000000c4;\u000a  undefined4 uStack000000d8;\u000a  int iStack000000dc;\u000a  undefined4 uStack000000e4;\u000a  int in_stack_000000e8;\u000a  int iStack000000ec;\u000a  undefined4 uStack000000f0;\u000a  int iStack00000100;\u000a  int in_stack_00000104;\u000a  undefined4 uStack00000108;\u000a  undefined4 *puStack00000110;\u000a  undefined4 *puStack00000114;\u000a  int iStack00000118;\u000a  int iStack00000124;\u000a  \u000a  puStack00000110 = (undefined4 *)(in_r1 + ptr);\u000a  uStack00000108 = 0;\u000a  uStack000000c4 = 1;\u000a  uStack000000f0 = 1;\u000a  uStack000000e4 = 0;\u000a  iStack00000100 = in_stack_000000e8 * 0x100;\u000a  iStack00000118 = in_stack_00000104 + 0x870;\u000a  iStack000000ec = *(int *)(iStack00000118 + DAT_00026770);\u000a  iStack000000dc = iStack000000ec * 4;\u000a  uStack000000d8 = 0;\u000a  puStack00000114 = (undefined4 *)*puStack00000110;\u000a  iStack00000124 = iStack00000118;\u000a                    /* WARNING: Subroutine does not return */\u000a  __mulsf3(*puStack00000114,\u000a           *(undefined4 *)(&stack0x00000000 + iStack000000dc + iStack00000100 + DAT_0002676c));\u000a}\u000a\u000a
p3629
S'add r0,r1,r0\nstr r0,[sp,#0x110]\nmov r4,#0x0\nstr r4,[sp,#0x108]\nmov r0,#0x1\nstr r0,[sp,#0xc4]\nstr r0,[sp,#0xf0]\nstr r4,[sp,#0xe4]\nldr r0,[sp,#0xe8]\nlsl r1,r0,#0x8\n'
p3630
S'08 18\n44 90\n00 24\n42 94\n01 20\n31 90\n3c 90\n39 94\n3a 98\n01 02\n'
p3631
S'.text:0002663c\n.text:0002663e\n.text:00026640\n.text:00026642\n.text:00026644\n.text:00026646\n.text:00026648\n.text:0002664a\n.text:0002664c\n.text:0002664e\n'
p3632
tp3633
sS'lame_set_scale'
p3634
(S'\n__stdcall lame_set_scale(lame_global_flags * gfp, float scale)\n'
p3635
V\u000a/* WARNING: Removing unreachable block (ram,0x0001e3d0) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e2) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e6) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3e8) */\u000a/* WARNING: Removing unreachable block (ram,0x0001e3f8) */\u000a\u000aint lame_set_scale(lame_global_flags *gfp,float scale)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  lame_global_flags *gfp_00;\u000a  int iVar3;\u000a  int iVar4;\u000a  undefined *puVar5;\u000a  uint in_r2;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  undefined *puVar8;\u000a  int unaff_r4;\u000a  undefined4 *puVar9;\u000a  uint unaff_r5;\u000a  uint uVar10;\u000a  undefined4 *puVar11;\u000a  int unaff_r6;\u000a  uint uVar12;\u000a  undefined *puVar13;\u000a  char in_ZR;\u000a  float extraout_s0;\u000a  float extraout_s0_00;\u000a  float extraout_s0_01;\u000a  float extraout_s0_02;\u000a  float extraout_s0_03;\u000a  float extraout_s0_04;\u000a  undefined8 uVar14;\u000a  uint in_stack_0000000c;\u000a  byte *in_stack_00000010;\u000a  uint in_stack_00000014;\u000a  undefined *in_stack_00000018;\u000a  int in_stack_0000001c;\u000a  int *in_stack_00000020;\u000a  int in_stack_00000024;\u000a  uint in_stack_00000028;\u000a  uint in_stack_0000002c;\u000a  uint uStack00000030;\u000a  \u000a  if (in_ZR == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen((char *)gfp);\u000a  }\u000a  if ((((in_stack_00000028 < 0x1f) && (in_stack_0000000c < 0x1f)) && (in_r2 < 0x1f)) &&\u000a     (unaff_r5 < 0x1f)) {\u000a    if ((unaff_r4 == 0) &&\u000a       (uVar1 = 0, unaff_r5 < 0x1d || *(int *)(in_stack_0000001c + DAT_0001e1ac) == 0))\u000a    goto LAB_0001e470;\u000a  }\u000a  if (*(int *)(unaff_r6 + 4) != -1) {\u000a    uVar14 = __floatunsidf();\u000a    __muldf3((int)((ulonglong)uVar14 >> 0x20),(int)uVar14,0,DAT_0001e1b0);\u000a                    /* WARNING: Subroutine does not return */\u000a    __floatsidf(*(undefined4 *)(in_stack_0000001c + 0x3c));\u000a  }\u000a  if (((*(int *)(in_stack_0000001c + DAT_0001e1c8) != 0) &&\u000a      (*(int *)(in_stack_0000001c + lame_get_findPeakSample) != 0)) &&\u000a     (uVar1 = *(int *)(in_stack_0000001c + DAT_0001e1d0) - 1, uVar1 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar1 * 4));\u000a  }\u000a  puVar9 = *(undefined4 **)(in_stack_0000001c + DAT_0001e1d8);\u000a  puVar11 = (undefined4 *)(in_stack_0000001c + DAT_0001e1d8);\u000a  while (puVar9 != (undefined4 *)0x0) {\u000a    uVar1 = puVar9[1];\u000a    uVar12 = 0xff;\u000a    if ((uVar1 == DAT_0001e1dc) || (uVar7 = 0, iVar2 = in_stack_00000024, uVar1 == DAT_0001e1e0)) {\u000a      iVar2 = puVar9[4] * 2 + 0x10;\u000a      if (puVar9[5] != 1) {\u000a        iVar2 = puVar9[4] + 0xf;\u000a      }\u000a      iVar3 = puVar9[7];\u000a      if (puVar9[8] == 1) {\u000a        iVar3 = iVar3 << 1;\u000a      }\u000a      iVar2 = iVar2 + iVar3;\u000a    }\u000a    else {\u000a      do {\u000a        uVar10 = uVar12 & 0x57000000;\u000a        uVar6 = 0;\u000a        if (uVar10 != (uVar12 & uVar1)) {\u000a          uVar6 = uVar12 & uVar1;\u000a        }\u000a        if (uVar10 == 0) {\u000a          uVar6 = uVar10;\u000a        }\u000a        uVar7 = uVar7 | uVar6;\u000a        iVar2 = iVar2 + -1;\u000a        uVar12 = uVar12 << 8;\u000a      } while (iVar2 != 0);\u000a      if (uVar7 == 0) {\u000a        iVar2 = sizeOfWxxxNode(scale,puVar9);\u000a        scale = extraout_s0;\u000a      }\u000a      else {\u000a        iVar3 = puVar9[7];\u000a        iVar4 = puVar9[4];\u000a        if (puVar9[8] == 1) {\u000a          iVar2 = iVar4 * 2 + 0xd;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a          iVar3 = iVar3 << 1;\u000a        }\u000a        else {\u000a          iVar2 = iVar4 + 0xc;\u000a          if (iVar4 == 0) {\u000a            iVar2 = 0xb;\u000a          }\u000a        }\u000a        iVar2 = iVar2 + iVar3;\u000a      }\u000a    }\u000a    in_stack_0000002c = iVar2 + in_stack_0000002c;\u000a    puVar9 = (undefined4 *)*puVar9;\u000a  }\u000a  if ((*in_stack_00000010 & 0x20) != 0) {\u000a    in_stack_0000002c = *(int *)(in_stack_0000001c + DAT_0001e1e4) + in_stack_0000002c;\u000a  }\u000a  uVar1 = in_stack_0000002c;\u000a  if ((in_stack_0000002c <= in_stack_00000014) && (uVar1 = 0, in_stack_00000018 != (undefined *)0x0)\u000a     ) {\u000a    *in_stack_00000018 = 0x49;\u000a    in_stack_00000018[1] = 0x44;\u000a    in_stack_00000018[2] = 0x33;\u000a    in_stack_00000018[3] = 3;\u000a    uStack00000030 = 0;\u000a    in_stack_00000018[4] = 0;\u000a    in_stack_00000018[5] = 0;\u000a    uVar1 = in_stack_0000002c - 10;\u000a    in_stack_00000018[6] = (byte)(uVar1 >> 0x15) & 0x7f;\u000a    in_stack_00000018[7] = (byte)(uVar1 >> 0xe) & 0x7f;\u000a    in_stack_00000018[8] = (byte)(uVar1 >> 7) & 0x7f;\u000a    in_stack_00000018[9] = (byte)uVar1 & 0x7f;\u000a    puVar13 = in_stack_00000018 + 10;\u000a    puVar11 = (undefined4 *)*puVar11;\u000a    while (puVar11 != (undefined4 *)0x0) {\u000a      uVar1 = puVar11[1];\u000a      uVar12 = 0xff;\u000a      iVar2 = 4;\u000a      if ((uVar1 == DAT_0001e494) || (uVar7 = uStack00000030, uVar1 == DAT_0001e498)) {\u000a        iVar2 = puVar11[4] * 2 + 0x10;\u000a        if (puVar11[5] != 1) {\u000a          iVar2 = puVar11[4] + 0xf;\u000a        }\u000a        iVar3 = 0;\u000a        if (puVar11[8] == 1) {\u000a          iVar3 = puVar11[8];\u000a        }\u000a        uVar12 = (puVar11[7] << iVar3) + iVar2;\u000a        iVar2 = 4;\u000a        if (10 < uVar12) {\u000a          do {\u000a            puVar13[iVar2 + -1] = (char)uVar1;\u000a            iVar2 = iVar2 + -1;\u000a            uVar1 = uVar1 >> 8;\u000a          } while (0 < iVar2);\u000a          uVar12 = uVar12 - 10;\u000a          iVar2 = 4;\u000a          do {\u000a            puVar13[iVar2 + 3] = (char)uVar12;\u000a            iVar2 = iVar2 + -1;\u000a            uVar12 = uVar12 >> 8;\u000a          } while (0 < iVar2);\u000a          puVar13[8] = 0;\u000a          puVar13[9] = 0;\u000a          *(bool *)(puVar13 + 10) = puVar11[8] == 1;\u000a          puVar13[0xb] = *(undefined *)(puVar11 + 2);\u000a          puVar13[0xc] = *(undefined *)((int)puVar11 + 9);\u000a          puVar13[0xd] = *(undefined *)((int)puVar11 + 10);\u000a          puVar13 = puVar13 + 0xe;\u000a          if (puVar11[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar13,puVar11[3],puVar11[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar2 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar2;\u000a          }\u000a          iVar2 = puVar11[4];\u000a          if (iVar2 != 0) {\u000a            puVar5 = (undefined *)puVar11[3];\u000a            iVar3 = iVar2;\u000a            puVar8 = puVar13;\u000a            do {\u000a              *puVar8 = *puVar5;\u000a              puVar8 = puVar8 + 1;\u000a              puVar5 = puVar5 + 1;\u000a              iVar3 = iVar3 + -1;\u000a            } while (iVar3 != 0);\u000a            puVar13 = puVar13 + iVar2;\u000a          }\u000a          *puVar13 = 0;\u000a          puVar13 = puVar13 + 1;\u000a          if (puVar11[8] == 1) {\u000aLAB_0001e338:\u000a            puVar13 = (undefined *)writeUcs2s(puVar13,puVar11[6],puVar11[7]);\u000a            scale = extraout_s0_03;\u000a          }\u000a          else {\u000a            iVar2 = puVar11[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar11[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000aLAB_0001e36a:\u000a              puVar13 = puVar13 + iVar2;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar10 = uVar12 & 0x57000000;\u000a          uVar6 = uStack00000030;\u000a          if (uVar10 != (uVar12 & uVar1)) {\u000a            uVar6 = uVar12 & uVar1;\u000a          }\u000a          if (uVar10 == 0) {\u000a            uVar6 = uVar10;\u000a          }\u000a          uVar7 = uVar7 | uVar6;\u000a          iVar2 = iVar2 + -1;\u000a          uVar12 = uVar12 << 8;\u000a        } while (iVar2 != 0);\u000a        if (uVar7 == 0) {\u000a          uVar12 = sizeOfWxxxNode(scale,puVar11);\u000a          iVar2 = 4;\u000a          scale = extraout_s0_00;\u000a          if (10 < uVar12) {\u000a            do {\u000a              puVar13[iVar2 + -1] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            uVar12 = uVar12 - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar13[iVar2 + 3] = (char)uVar12;\u000a              iVar2 = iVar2 + -1;\u000a              uVar12 = uVar12 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            puVar8 = puVar13 + 10;\u000a            scale = extraout_s0_00;\u000a            if (puVar11[4] != 0) {\u000a              *(bool *)(puVar13 + 10) = puVar11[5] == 1;\u000a              puVar13 = puVar13 + 0xb;\u000a              if (puVar11[5] == 1) {\u000a                puVar8 = (undefined *)writeUcs2s(puVar13,puVar11[3],puVar11[4]);\u000a                *puVar8 = 0;\u000a                puVar8[1] = 0;\u000a                puVar8 = puVar8 + 2;\u000a                scale = extraout_s0_01;\u000a              }\u000a              else {\u000a                iVar2 = puVar11[4];\u000a                if (iVar2 != 0) {\u000a                  puVar5 = (undefined *)puVar11[3];\u000a                  iVar3 = iVar2;\u000a                  puVar8 = puVar13;\u000a                  do {\u000a                    *puVar8 = *puVar5;\u000a                    puVar8 = puVar8 + 1;\u000a                    puVar5 = puVar5 + 1;\u000a                    iVar3 = iVar3 + -1;\u000a                  } while (iVar3 != 0);\u000a                  puVar13 = puVar13 + iVar2;\u000a                }\u000a                *puVar13 = 0;\u000a                puVar8 = puVar13 + 1;\u000a                scale = extraout_s0_00;\u000a              }\u000a            }\u000a            if (puVar11[8] == 1) {\u000a              puVar13 = (undefined *)writeLoBytes(puVar8,puVar11[6],puVar11[7]);\u000a              scale = extraout_s0_04;\u000a            }\u000a            else {\u000a              iVar2 = puVar11[7];\u000a              puVar13 = puVar8;\u000a              if (iVar2 != 0) {\u000a                puVar5 = (undefined *)puVar11[6];\u000a                iVar3 = iVar2;\u000a                puVar13 = puVar8;\u000a                do {\u000a                  *puVar13 = *puVar5;\u000a                  puVar13 = puVar13 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar13 = puVar8 + iVar2;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar2 = puVar11[7];\u000a          iVar3 = puVar11[4];\u000a          if (puVar11[8] == 1) {\u000a            iVar4 = iVar3 * 2 + 0xd;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a            iVar2 = iVar2 << 1;\u000a          }\u000a          else {\u000a            iVar4 = iVar3 + 0xc;\u000a            if (iVar3 == 0) {\u000a              iVar4 = 0xb;\u000a            }\u000a          }\u000a          iVar3 = 4;\u000a          if (10 < (uint)(iVar4 + iVar2)) {\u000a            do {\u000a              puVar13[iVar3 + -1] = (char)uVar1;\u000a              iVar3 = iVar3 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar3);\u000a            uVar1 = (iVar4 + iVar2) - 10;\u000a            iVar2 = 4;\u000a            do {\u000a              puVar13[iVar2 + 3] = (char)uVar1;\u000a              iVar2 = iVar2 + -1;\u000a              uVar1 = uVar1 >> 8;\u000a            } while (0 < iVar2);\u000a            puVar13[8] = 0;\u000a            puVar13[9] = 0;\u000a            *(bool *)(puVar13 + 10) = puVar11[8] == 1;\u000a            puVar13 = puVar13 + 0xb;\u000a            iVar2 = puVar11[4];\u000a            if (iVar2 != 0) {\u000a              if (puVar11[5] == 1) {\u000a                puVar13 = (undefined *)writeUcs2s(puVar13,puVar11[3]);\u000a                *puVar13 = 0;\u000a                puVar13[1] = 0;\u000a                puVar13 = puVar13 + 2;\u000a                scale = extraout_s0_02;\u000a              }\u000a              else {\u000a                puVar5 = (undefined *)puVar11[3];\u000a                iVar3 = iVar2;\u000a                puVar8 = puVar13;\u000a                do {\u000a                  *puVar8 = *puVar5;\u000a                  puVar8 = puVar8 + 1;\u000a                  puVar5 = puVar5 + 1;\u000a                  iVar3 = iVar3 + -1;\u000a                } while (iVar3 != 0);\u000a                puVar13[iVar2] = 0;\u000a                puVar13 = puVar13 + iVar2 + 1;\u000a              }\u000a            }\u000a            if (puVar11[8] == 1) goto LAB_0001e338;\u000a            iVar2 = puVar11[7];\u000a            if (iVar2 != 0) {\u000a              puVar5 = (undefined *)puVar11[6];\u000a              iVar3 = iVar2;\u000a              puVar8 = puVar13;\u000a              do {\u000a                *puVar8 = *puVar5;\u000a                puVar8 = puVar8 + 1;\u000a                puVar5 = puVar5 + 1;\u000a                iVar3 = iVar3 + -1;\u000a              } while (iVar3 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar11 = (undefined4 *)*puVar11;\u000a    }\u000a    __aeabi_memclr(puVar13,in_stack_00000018 + (in_stack_0000002c - (int)puVar13));\u000a    uVar1 = in_stack_0000002c;\u000a  }\u000aLAB_0001e470:\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) != *in_stack_00000020) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __stack_chk_fail();\u000a  }\u000a  return uVar1;\u000a}\u000a\u000a
p3636
S'beq 0x0001de48\npush { r2 }\npop { r5 }\nbl 0x000379e0\nldr r0,[sp,#0x28]\ncmp r0,#0x1e\nbhi 0x0001de86\nldr r0,[sp,#0xc]\ncmp r0,#0x1e\nbhi 0x0001de86\ncmp r2,#0x1e\nbhi 0x0001de86\ncmp r5,#0x1e\n'
p3637
S'07 d0\n04 b4\n20 bc\n19 f0 d0 fd\n0a 98\n1e 28\n1b d8\n03 98\n1e 28\n18 d8\n1e 2a\n16 d8\n1e 2d\n'
p3638
S'.text:0001de36\n.text:0001de38\n.text:0001de3a\n.text:0001de3c\n.text:0001de48\n.text:0001de4a\n.text:0001de4c\n.text:0001de4e\n.text:0001de50\n.text:0001de52\n.text:0001de54\n.text:0001de56\n.text:0001de58\n'
p3639
tp3640
sS'lame_get_athaa_loudapprox'
p3641
(S'\n__stdcall lame_get_athaa_loudapprox()\n'
p3642
V\u000aundefined4 lame_get_athaa_loudapprox(void)\u000a\u000a{\u000a  return 2;\u000a}\u000a\u000a
p3643
S'mov r0,#0x2\nbx lr\n'
p3644
S'02 20\n70 47\n'
p3645
S'.text:0002ed1e\n.text:0002ed20\n'
p3646
tp3647
sS'fwrite'
p3648
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p3649
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)(&UNK_00038520 + DAT_0003851c))();\u000a  return sVar1;\u000a}\u000a\u000a
p3650
S'ldr r12,[0x3851c]\nadd pc,r12,pc\n'
p3651
S'00 c0 9f e5\n0f f0 8c e0\n'
p3652
S'.text:00038514\n.text:00038518\n'
p3653
tp3654
sS'__aeabi_ldiv0'
p3655
(S'\n__stdcall __aeabi_ldiv0()\n'
p3656
V\u000avoid __aeabi_ldiv0(void)\u000a\u000a{\u000a  raise(8);\u000a  return;\u000a}\u000a\u000a
p3657
S'stmdb sp!,{ r1 lr }\nmov r0,#0x8\nbl 0x00016ba0\nldmia sp!,{ r1 pc }\n'
p3658
S'02 40 2d e9\n08 00 a0 e3\nf8 81 ff eb\n02 80 bd e8\n'
p3659
S'.text:000363b0\n.text:000363b4\n.text:000363b8\n.text:000363bc\n'
p3660
tp3661
sS'tryGlobalStepsize'
p3662
(S'\n__stdcall tryGlobalStepsize()\n'
p3663
V\u000avoid tryGlobalStepsize(code **ppcParm1,int iParm2,int iParm3,int iParm4)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int aiStack180 [39];\u000a  int local_18;\u000a  \u000a  local_18 = **(int **)(DAT_000342ec + 0x34264);\u000a  uVar1 = *(undefined4 *)(ppcParm1[4] + DAT_000342f0);\u000a  iVar3 = 0;\u000a  iVar2 = 0;\u000a  do {\u000a    iVar5 = *(int *)(iParm3 + iVar2 * 4);\u000a    iVar4 = *(int *)(iParm2 + iVar2 * 4) + iParm4;\u000a    if (iVar5 <= iVar4) {\u000a      iVar5 = iVar4;\u000a    }\u000a    iVar4 = 0xff;\u000a    if (iVar5 < 0x100) {\u000a      iVar4 = iVar5;\u000a    }\u000a    aiStack180[iVar2] = iVar4;\u000a    if (iVar4 <= iVar3) {\u000a      iVar4 = iVar3;\u000a    }\u000a    iVar3 = iVar4;\u000a    iVar2 = iVar2 + 1;\u000a  } while (iVar2 != 0x27);\u000a  (**ppcParm1)(ppcParm1,aiStack180,iParm3,iVar3);\u000a  bitcount(ppcParm1);\u000a  quantizeAndCountBits(ppcParm1);\u000a  *(undefined4 *)(ppcParm1[4] + DAT_000342f0) = uVar1;\u000a  if (**(int **)(DAT_000342f4 + 0x342d8) == local_18) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3664
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0xac\nstr r2,[sp,#0x8]\nstr r0,[sp,#0x4]\nldr r2,[0x000342ec]\nadd r2,pc\nldr r2,[r2,#0x0]\nldr r2,[r2,#0x0]\nstr r2,[sp,#0xa8]\nldr r0,[r0,#0x10]\nldr r2,[0x000342f0]\nldr r0,[r0,r2]\nstr r0,[sp,#0x0]\nmov r2,#0x0\npush { r2 }\npop { r0 }\nlsl r4,r0,#0x2\nldr r5,[sp,#0x8]\nldr r6,[r5,r4]\nldr r5,[r1,r4]\nadd r5,r5,r3\ncmp r5,r6\nblt 0x00034288\npush { r5 }\npop { r6 }\nmov r5,#0xff\ncmp r6,#0xff\nbgt 0x00034292\npush { r6 }\npop { r5 }\nadd r6,sp,#0xc\nstr r5,[r6,r4]\ncmp r2,r5\nblt 0x0003429e\npush { r2 }\npop { r5 }\nadd r0,#0x1\ncmp r0,#0x27\npush { r5 }\npop { r2 }\nbne 0x00034276\nldr r6,[sp,#0x4]\nldr r4,[r6,#0x0]\nadd r1,sp,#0xc\npush { r6 }\npop { r0 }\nldr r2,[sp,#0x8]\npush { r5 }\npop { r3 }\nblx r4\npush { r6 }\npop { r0 }\nbl 0x00033930\npush { r6 }\npop { r0 }\nbl 0x0003395c\nldr r1,[r6,#0x10]\nldr r2,[0x000342f0]\nldr r3,[sp,#0x0]\nstr r3,[r1,r2]\nldr r1,[0x000342f4]\nadd r1,pc\nldr r1,[r1,#0x0]\nldr r1,[r1,#0x0]\nldr r2,[sp,#0xa8]\nsub r1,r1,r2\ncmp r1,#0x0\nbne 0x000342e6\nadd sp,#0xac\npop { r4, r5, r6, r7, pc }\nbl 0x000379b0\n'
p3665
S'f0 b5\n03 af\nab b0\n02 92\n01 90\n23 4a\n7a 44\n12 68\n12 68\n2a 92\n00 69\n21 4a\n80 58\n00 90\n00 22\n04 b4\n01 bc\n84 00\n02 9d\n2e 59\n0d 59\ned 18\nb5 42\n01 db\n20 b4\n40 bc\nff 25\nff 2e\n01 dc\n40 b4\n20 bc\n03 ae\n35 51\naa 42\n01 db\n04 b4\n20 bc\n01 30\n27 28\n20 b4\n04 bc\ne6 d1\n01 9e\n34 68\n03 a9\n40 b4\n01 bc\n02 9a\n20 b4\n08 bc\na0 47\n40 b4\n01 bc\nff f7 37 fb\n40 b4\n01 bc\nff f7 49 fb\n31 69\n08 4a\n00 9b\n8b 50\n08 49\n79 44\n09 68\n09 68\n2a 9a\n89 1a\n00 29\n01 d1\n2b b0\nf0 bd\n03 f0 63 fb\n'
p3666
S'.text:00034254\n.text:00034256\n.text:00034258\n.text:0003425a\n.text:0003425c\n.text:0003425e\n.text:00034260\n.text:00034262\n.text:00034264\n.text:00034266\n.text:00034268\n.text:0003426a\n.text:0003426c\n.text:0003426e\n.text:00034270\n.text:00034272\n.text:00034274\n.text:00034276\n.text:00034278\n.text:0003427a\n.text:0003427c\n.text:0003427e\n.text:00034280\n.text:00034282\n.text:00034284\n.text:00034286\n.text:00034288\n.text:0003428a\n.text:0003428c\n.text:0003428e\n.text:00034290\n.text:00034292\n.text:00034294\n.text:00034296\n.text:00034298\n.text:0003429a\n.text:0003429c\n.text:0003429e\n.text:000342a0\n.text:000342a2\n.text:000342a4\n.text:000342a6\n.text:000342a8\n.text:000342aa\n.text:000342ac\n.text:000342ae\n.text:000342b0\n.text:000342b2\n.text:000342b4\n.text:000342b6\n.text:000342b8\n.text:000342ba\n.text:000342bc\n.text:000342be\n.text:000342c2\n.text:000342c4\n.text:000342c6\n.text:000342ca\n.text:000342cc\n.text:000342ce\n.text:000342d0\n.text:000342d2\n.text:000342d4\n.text:000342d6\n.text:000342d8\n.text:000342da\n.text:000342dc\n.text:000342de\n.text:000342e0\n.text:000342e2\n.text:000342e4\n.text:000342e6\n'
p3667
tp3668
sS'__aeabi_idivmod'
p3669
(S'\n__stdcall __aeabi_idivmod()\n'
p3670
V\u000avoid __aeabi_idivmod(void)\u000a\u000a{\u000a  (*(code *)(&UNK_00037f80 + DAT_00037f7c))();\u000a  return;\u000a}\u000a\u000a
p3671
S'ldr r12,[0x37f7c]\nadd pc,r12,pc\n'
p3672
S'00 c0 9f e5\n0f f0 8c e0\n'
p3673
S'.text:00037f74\n.text:00037f78\n'
p3674
tp3675
sS'fht'
p3676
(S'\n__stdcall fht()\n'
p3677
V\u000avoid fht(void)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  __addsf3();\u000a}\u000a\u000a
p3678
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x84\npush { r0 }\npop { r6 }\nstr r6,[sp,#0x54]\nlsl r2,r1,#0x3\nadd r2,r6,r2\nstr r2,[sp,#0x24]\nlsl r1,r1,#0x1\nstr r1,[sp,#0x4]\nldr r1,[0x0001b454]\nadd r1,pc\nstr r1,[sp,#0x10]\nmov r1,#0x4\nb 0x0001b458\nstr r1,[sp,#0x4c]\nlsl r2,r1,#0x2\nstr r2,[sp,#0x20]\nlsl r3,r1,#0x1\nstr r3,[sp,#0x7c]\nadd r2,r3,r2\nstr r2,[sp,#0x78]\nmov r5,#0xc\nmul r5,r1\nstr r5,[sp,#0x80]\nadd r2,r3,r5\nstr r2,[sp,#0x74]\nlsl r2,r1,#0x3\nstr r2,[sp,#0x50]\nadd r2,r3,r2\nstr r2,[sp,#0x70]\nlsl r2,r1,#0x4\nstr r2,[sp,#0x28]\nasr r1,r1,#0x1\nstr r1,[sp,#0x8]\nldr r0,[sp,#0x20]\nldr r1,[r6,r0]\nstr r1,[sp,#0x6c]\nldr r0,[r6,#0x0]\nstr r0,[sp,#0x68]\nbl 0x00037a70\n'
p3679
S'f0 b5\n03 af\na1 b0\n01 b4\n40 bc\n15 96\nca 00\nb2 18\n09 92\n49 00\n01 91\n02 49\n79 44\n04 91\n04 21\n01 e0\n13 91\n8a 00\n08 92\n4b 00\n1f 93\n9a 18\n1e 92\n0c 25\n4d 43\n20 95\n5a 19\n1d 92\nca 00\n14 92\n9a 18\n1c 92\n0a 01\n0a 92\n49 10\n02 91\n08 98\n31 58\n1b 91\n30 68\n1a 90\n1c f0 f1 fa\n'
p3680
S'.text:0001b434\n.text:0001b436\n.text:0001b438\n.text:0001b43a\n.text:0001b43c\n.text:0001b43e\n.text:0001b440\n.text:0001b442\n.text:0001b444\n.text:0001b446\n.text:0001b448\n.text:0001b44a\n.text:0001b44c\n.text:0001b44e\n.text:0001b450\n.text:0001b452\n.text:0001b458\n.text:0001b45a\n.text:0001b45c\n.text:0001b45e\n.text:0001b460\n.text:0001b462\n.text:0001b464\n.text:0001b466\n.text:0001b468\n.text:0001b46a\n.text:0001b46c\n.text:0001b46e\n.text:0001b470\n.text:0001b472\n.text:0001b474\n.text:0001b476\n.text:0001b478\n.text:0001b47a\n.text:0001b47c\n.text:0001b47e\n.text:0001b480\n.text:0001b482\n.text:0001b484\n.text:0001b486\n.text:0001b488\n.text:0001b48a\n'
p3681
tp3682
sS'FUN_0001892e'
p3683
(S'\n__stdcall FUN_0001892e()\n'
p3684
V\u000avoid FUN_0001892e(undefined4 *puParm1)\u000a\u000a{\u000a  undefined4 unaff_r5;\u000a  \u000a  *puParm1 = unaff_r5;\u000a                    /* WARNING: Subroutine does not return */\u000a  FUN_00019280();\u000a}\u000a\u000a
p3685
S'str r5,[r0,#0x0]\nbl 0x00019280\n'
p3686
S'05 60\n00 f0 a6 fc\n'
p3687
S'.text:0001892e\n.text:00018930\n'
p3688
tp3689
sS'set_scalefacs'
p3690
(S'\n__stdcall set_scalefacs()\n'
p3691
V\u000avoid set_scalefacs(int iParm1,int iParm2,int iParm3,int iParm4)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int *piVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  int *piVar10;\u000a  int iVar11;\u000a  uint uVar12;\u000a  uint uVar13;\u000a  int iVar14;\u000a  int iVar15;\u000a  int iVar16;\u000a  int local_34;\u000a  \u000a  local_34 = 1;\u000a  iVar16 = 2;\u000a  if (*(int *)(iParm1 + DAT_000341b0) != 0) {\u000a    local_34 = 2;\u000a    iVar16 = 4;\u000a  }\u000a  iVar14 = *(int *)(iParm1 + DAT_000341b4);\u000a  iVar6 = *(int *)(iParm1 + 0x12e0);\u000a  if ((iVar6 != 0) && (0xb < iVar14)) {\u000a    iVar1 = iVar14 + -0xb;\u000a    piVar7 = (int *)(iParm3 + 0x2c);\u000a    piVar10 = (int *)(*(int *)(DAT_000341b8 + 0x340bc) + 0x2c);\u000a    do {\u000a      *piVar7 = *piVar7 + iVar16 * *piVar10;\u000a      iVar1 = iVar1 + -1;\u000a      piVar7 = piVar7 + 1;\u000a      piVar10 = piVar10 + 1;\u000a    } while (iVar1 != 0);\u000a  }\u000a  if (0 < iVar14) {\u000a    iVar1 = iParm1 + DAT_000341bc;\u000a    piVar7 = (int *)(iParm1 + DAT_000341c0);\u000a    iVar2 = iParm1 + 0x1200;\u000a    iVar11 = 0;\u000a    iVar3 = *(int *)(DAT_000341c8 + 0x34100);\u000a    do {\u000a      iVar15 = iVar11 * 4;\u000a      iVar4 = *(int *)(iParm1 + *(int *)(iVar1 + iVar15) * 4 + DAT_000341c4);\u000a      iVar8 = *piVar7;\u000a      iVar5 = 0;\u000a      if (iVar6 != 0) {\u000a        iVar5 = *(int *)(iVar3 + iVar15);\u000a      }\u000a      if (*(int *)(iParm3 + iVar15) < 0) {\u000a        iVar9 = *(int *)(iParm2 + iVar15);\u000a        uVar12 = (iVar16 + -1) - *(int *)(iParm3 + iVar15) >> local_34;\u000a        *(uint *)(iVar2 + iVar15) = uVar12;\u000a        uVar13 = (uint)*(byte *)(iParm4 + iVar11);\u000a        if ((int)uVar12 <= (int)(uint)*(byte *)(iParm4 + iVar11)) {\u000a          uVar13 = uVar12;\u000a        }\u000a        *(uint *)(iVar2 + iVar15) = uVar13;\u000a        iVar9 = ((iVar8 + iVar4 * -8) - iVar16 * iVar5) - iVar9;\u000a        if ((0 < (int)uVar13) && (iVar9 < (int)(uVar13 << local_34))) {\u000a          *(int *)(iVar2 + iVar15) = iVar9 >> local_34;\u000a        }\u000a      }\u000a      else {\u000a        *(undefined4 *)(iVar2 + iVar15) = 0;\u000a      }\u000a      iVar11 = iVar11 + 1;\u000a    } while (iVar14 != iVar11);\u000a    if (0x26 < iVar14) {\u000a      return;\u000a    }\u000a  }\u000a  if (iVar14 < 1) {\u000a    iVar14 = 0;\u000a  }\u000a  __aeabi_memclr4(iVar14 * 4 + iParm1 + 0x1200,iVar14 * -4 + 0x9c);\u000a  return;\u000a}\u000a\u000a
p3692
S'push { r4, r5, r6, r7, lr }\nadd r7,sp,#0xc\nsub sp,#0x3c\nstr r3,[sp,#0x10]\nstr r2,[sp,#0x30]\nstr r1,[sp,#0xc]\nldr r1,[0x000341b0]\nldr r2,[r0,r1]\nmov r1,#0x1\nstr r1,[sp,#0x1c]\nmov r6,#0x2\ncmp r2,#0x0\nbeq 0x0003408c\nstr r6,[sp,#0x1c]\nmov r1,#0x4\ncmp r2,#0x0\nbeq 0x00034096\npush { r1 }\npop { r6 }\nldr r1,[0x000341b4]\nldr r5,[r0,r1]\nmov r1,#0x97\nlsl r1,r1,#0x5\nldr r1,[r0,r1]\nstr r1,[sp,#0x2c]\nstr r0,[sp,#0x14]\ncmp r1,#0x0\nbeq 0x000340d2\ncmp r5,#0xc\nblt 0x000340d2\npush { r5 }\npop { r0 }\nsub r0,#0xb\nldr r1,[sp,#0x30]\nadd r1,#0x2c\nldr r2,[0x000341b8]\nadd r2,pc\nldr r2,[r2,#0x0]\nadd r2,#0x2c\nldr r3,[r2,#0x0]\nmul r3,r6\nldr r4,[r1,#0x0]\nadd r3,r4,r3\nstr r3,[r1,#0x0]\nsub r0,#0x1\nadd r1,#0x4\nadd r2,#0x4\ncmp r0,#0x0\nbne 0x000340be\npush { r5 }\npop { r3 }\ncmp r3,#0x1\nldr r4,[sp,#0x14]\nblt 0x00034190\nldr r0,[0x000341bc]\nadd r0,r4,r0\nstr r0,[sp,#0x28]\nldr r0,[0x000341c0]\nadd r0,r4,r0\nstr r0,[sp,#0x24]\nmov r0,#0x9\nlsl r0,r0,#0x9\nadd r0,r4,r0\nstr r0,[sp,#0x38]\nsub r0,r6,#0x1\nstr r0,[sp,#0x4]\nstr r6,[sp,#0x8]\nmov r2,#0x0\nstr r2,[sp,#0x20]\nldr r0,[0x000341c8]\nadd r0,pc\nldr r0,[r0,#0x0]\nstr r0,[sp,#0x18]\npush { r3 }\npop { r6 }\nlsl r5,r2,#0x2\nldr r0,[sp,#0x28]\nldr r0,[r0,r5]\nlsl r0,r0,#0x2\nadd r0,r4,r0\nldr r1,[0x000341c4]\nldr r0,[r0,r1]\nlsl r0,r0,#0x3\nldr r1,[sp,#0x24]\nldr r1,[r1,#0x0]\nsub r0,r1,r0\nstr r0,[sp,#0x34]\nldr r0,[sp,#0x2c]\ncmp r0,#0x0\nldr r0,[sp,#0x20]\nbeq 0x0003412a\nldr r0,[sp,#0x18]\nldr r0,[r0,r5]\nldr r1,[sp,#0x30]\nldr r3,[r1,r5]\ncmp r3,#0x0\nblt 0x0003413e\nmov r0,#0x0\nldr r1,[sp,#0x38]\nstr r0,[r1,r5]\npush { r6 }\npop { r3 }\nb 0x00034186\nldr r1,[sp,#0xc]\nldr r1,[r1,r5]\nldr r4,[sp,#0x4]\nsub r3,r4,r3\nldr r4,[sp,#0x1c]\nasr r3,r4\nldr r4,[sp,#0x38]\nstr r3,[r4,r5]\nldr r4,[sp,#0x10]\nldrb r4,[r4,r2]\ncmp r3,r4\nbgt 0x0003415a\npush { r3 }\npop { r4 }\nldr r3,[sp,#0x38]\nstr r4,[r3,r5]\nldr r3,[sp,#0x8]\nmul r0,r3\nldr r3,[sp,#0x34]\nsub r0,r3,r0\nsub r0,r0,r1\npush { r4 }\npop { r1 }\nldr r3,[sp,#0x1c]\nlsl r1,r3\ncmp r4,#0x1\nldr r4,[sp,#0x14]\npush { r6 }\npop { r3 }\nblt 0x00034186\ncmp r1,r0\nble 0x00034186\nldr r1,[sp,#0x1c]\nasr r0,r1\nldr r1,[sp,#0x38]\nstr r0,[r1,r5]\nadd r2,#0x1\ncmp r3,r2\nbne 0x00034102\ncmp r3,#0x26\nbgt 0x000341ac\nmov r0,#0x0\ncmp r3,#0x0\nbgt 0x0003419a\npush { r0 }\npop { r3 }\nlsl r0,r3,#0x2\nmov r1,#0x9c\nsub r1,r1,r0\nadd r0,r0,r4\nmov r2,#0x9\nlsl r2,r2,#0x9\nadd r0,r0,r2\nbl 0x00037a40\nadd sp,#0x3c\npop { r4, r5, r6, r7, pc }\n'
p3693
S'f0 b5\n03 af\n8f b0\n04 93\n0c 92\n03 91\n4c 49\n42 58\n01 21\n07 91\n02 26\n00 2a\n00 d0\n07 96\n04 21\n00 2a\n01 d0\n02 b4\n40 bc\n47 49\n45 58\n97 21\n49 01\n41 58\n0b 91\n05 90\n00 29\n14 d0\n0c 2d\n12 db\n20 b4\n01 bc\n0b 38\n0c 99\n2c 31\n40 4a\n7a 44\n12 68\n2c 32\n13 68\n73 43\n0c 68\ne3 18\n0b 60\n01 38\n04 31\n04 32\n00 28\nf5 d1\n20 b4\n08 bc\n01 2b\n05 9c\n59 db\n37 48\n20 18\n0a 90\n37 48\n20 18\n09 90\n09 20\n40 02\n20 18\n0e 90\n70 1e\n01 90\n02 96\n00 22\n08 92\n33 48\n78 44\n00 68\n06 90\n08 b4\n40 bc\n95 00\n0a 98\n40 59\n80 00\n20 18\n2c 49\n40 58\nc0 00\n09 99\n09 68\n08 1a\n0d 90\n0b 98\n00 28\n08 98\n01 d0\n06 98\n40 59\n0c 99\n4b 59\n00 2b\n05 db\n00 20\n0e 99\n48 51\n40 b4\n08 bc\n23 e0\n03 99\n49 59\n01 9c\ne3 1a\n07 9c\n23 41\n0e 9c\n63 51\n04 9c\na4 5c\na3 42\n01 dc\n08 b4\n10 bc\n0e 9b\n5c 51\n02 9b\n58 43\n0d 9b\n18 1a\n40 1a\n10 b4\n02 bc\n07 9b\n99 40\n01 2c\n05 9c\n40 b4\n08 bc\n05 db\n81 42\n03 dd\n07 99\n08 41\n0e 99\n48 51\n01 32\n93 42\nba d1\n26 2b\n0d dc\n00 20\n00 2b\n01 dc\n01 b4\n08 bc\n98 00\n9c 21\n09 1a\n00 19\n09 22\n52 02\n80 18\n03 f0 4a fc\n0f b0\nf0 bd\n'
p3694
S'.text:00034070\n.text:00034072\n.text:00034074\n.text:00034076\n.text:00034078\n.text:0003407a\n.text:0003407c\n.text:0003407e\n.text:00034080\n.text:00034082\n.text:00034084\n.text:00034086\n.text:00034088\n.text:0003408a\n.text:0003408c\n.text:0003408e\n.text:00034090\n.text:00034092\n.text:00034094\n.text:00034096\n.text:00034098\n.text:0003409a\n.text:0003409c\n.text:0003409e\n.text:000340a0\n.text:000340a2\n.text:000340a4\n.text:000340a6\n.text:000340a8\n.text:000340aa\n.text:000340ac\n.text:000340ae\n.text:000340b0\n.text:000340b2\n.text:000340b4\n.text:000340b6\n.text:000340b8\n.text:000340ba\n.text:000340bc\n.text:000340be\n.text:000340c0\n.text:000340c2\n.text:000340c4\n.text:000340c6\n.text:000340c8\n.text:000340ca\n.text:000340cc\n.text:000340ce\n.text:000340d0\n.text:000340d2\n.text:000340d4\n.text:000340d6\n.text:000340d8\n.text:000340da\n.text:000340dc\n.text:000340de\n.text:000340e0\n.text:000340e2\n.text:000340e4\n.text:000340e6\n.text:000340e8\n.text:000340ea\n.text:000340ec\n.text:000340ee\n.text:000340f0\n.text:000340f2\n.text:000340f4\n.text:000340f6\n.text:000340f8\n.text:000340fa\n.text:000340fc\n.text:000340fe\n.text:00034100\n.text:00034102\n.text:00034104\n.text:00034106\n.text:00034108\n.text:0003410a\n.text:0003410c\n.text:0003410e\n.text:00034110\n.text:00034112\n.text:00034114\n.text:00034116\n.text:00034118\n.text:0003411a\n.text:0003411c\n.text:0003411e\n.text:00034120\n.text:00034122\n.text:00034124\n.text:00034126\n.text:00034128\n.text:0003412a\n.text:0003412c\n.text:0003412e\n.text:00034130\n.text:00034132\n.text:00034134\n.text:00034136\n.text:00034138\n.text:0003413a\n.text:0003413c\n.text:0003413e\n.text:00034140\n.text:00034142\n.text:00034144\n.text:00034146\n.text:00034148\n.text:0003414a\n.text:0003414c\n.text:0003414e\n.text:00034150\n.text:00034152\n.text:00034154\n.text:00034156\n.text:00034158\n.text:0003415a\n.text:0003415c\n.text:0003415e\n.text:00034160\n.text:00034162\n.text:00034164\n.text:00034166\n.text:00034168\n.text:0003416a\n.text:0003416c\n.text:0003416e\n.text:00034170\n.text:00034172\n.text:00034174\n.text:00034176\n.text:00034178\n.text:0003417a\n.text:0003417c\n.text:0003417e\n.text:00034180\n.text:00034182\n.text:00034184\n.text:00034186\n.text:00034188\n.text:0003418a\n.text:0003418c\n.text:0003418e\n.text:00034190\n.text:00034192\n.text:00034194\n.text:00034196\n.text:00034198\n.text:0003419a\n.text:0003419c\n.text:0003419e\n.text:000341a0\n.text:000341a2\n.text:000341a4\n.text:000341a6\n.text:000341a8\n.text:000341ac\n.text:000341ae\n'
p3695
tp3696
sS'lame_set_scale_right'
p3697
(S'\n__stdcall lame_set_scale_right(lame_global_flags * gfp, float scale)\n'
p3698
V\u000aint lame_set_scale_right(lame_global_flags *gfp,float scale)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  undefined4 uVar3;\u000a  lame_global_flags *gfp_00;\u000a  undefined4 in_r1;\u000a  undefined4 uVar4;\u000a  int iVar5;\u000a  undefined *puVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  undefined *puVar9;\u000a  undefined4 unaff_r4;\u000a  int iVar10;\u000a  undefined4 *puVar11;\u000a  uint unaff_r5;\u000a  uint uVar12;\u000a  undefined4 unaff_r6;\u000a  uint uVar13;\u000a  undefined *puVar14;\u000a  undefined8 uVar15;\u000a  undefined4 in_stack_00000000;\u000a  int *piStack00000008;\u000a  undefined4 *puStack0000000c;\u000a  char *__s;\u000a  byte *in_stack_00000014;\u000a  uint in_stack_00000018;\u000a  undefined *in_stack_0000001c;\u000a  int in_stack_00000020;\u000a  int *in_stack_00000024;\u000a  int in_stack_00000028;\u000a  undefined4 in_stack_0000002c;\u000a  uint in_stack_00000030;\u000a  int *in_stack_00000034;\u000a  \u000a  uVar15 = __divdf3(unaff_r4,in_stack_0000002c,in_stack_00000000,in_r1);\u000a  uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\u000a  uVar4 = (undefined4)uVar15;\u000a  iVar1 = __aeabi_dcmpgt(uVar3,uVar4,DAT_0001e1b4,DAT_0001e1b8);\u000a  uVar2 = ~unaff_r5;\u000a  if ((iVar1 == 0) &&\u000a     (iVar1 = __aeabi_dcmplt(uVar3,uVar4,unaff_r5,unaff_r5), uVar2 = unaff_r5, iVar1 == 0)) {\u000a    uVar2 = __fixunsdfsi(uVar3,uVar4,unaff_r5);\u000a  }\u000a  sprintf(&stack0x0000003c,(char *)(DAT_0001e1bc + 0x1df06),uVar2);\u000a  iVar1 = DAT_0001e198;\u000a  iVar10 = *in_stack_00000034;\u000a  if (iVar10 != 0) {\u000a    uVar3 = *(undefined4 *)(iVar10 + DAT_0001e198);\u000a    id3v2_add_latin1(unaff_r6,DAT_0001e1c0,DAT_0001e1c4 + 0x1df24,0);\u000a    *(undefined4 *)(iVar10 + iVar1) = uVar3;\u000a  }\u000a  piStack00000008 = (int *)(in_stack_00000020 + DAT_0001e1c8);\u000a  if (((*(int *)(in_stack_00000020 + DAT_0001e1c8) != 0) &&\u000a      (*(int *)(in_stack_00000020 + lame_get_findPeakSample) != 0)) &&\u000a     (uVar2 = *(int *)(in_stack_00000020 + DAT_0001e1d0) - 1, uVar2 < 3)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    strlen(*(char **)(DAT_0001e1d4 + 0x1df5e + uVar2 * 4));\u000a  }\u000a  puVar11 = *(undefined4 **)(in_stack_00000020 + DAT_0001e1d8);\u000a  puStack0000000c = (undefined4 *)(in_stack_00000020 + DAT_0001e1d8);\u000a  while (puVar11 != (undefined4 *)0x0) {\u000a    uVar2 = puVar11[1];\u000a    uVar13 = 0xff;\u000a    if ((uVar2 == DAT_0001e1dc) || (uVar8 = 0, iVar1 = in_stack_00000028, uVar2 == DAT_0001e1e0)) {\u000a      iVar1 = puVar11[4] * 2 + 0x10;\u000a      if (puVar11[5] != 1) {\u000a        iVar1 = puVar11[4] + 0xf;\u000a      }\u000a      iVar10 = puVar11[7];\u000a      if (puVar11[8] == 1) {\u000a        iVar10 = iVar10 << 1;\u000a      }\u000a      iVar1 = iVar1 + iVar10;\u000a    }\u000a    else {\u000a      do {\u000a        uVar12 = uVar13 & 0x57000000;\u000a        uVar7 = 0;\u000a        if (uVar12 != (uVar13 & uVar2)) {\u000a          uVar7 = uVar13 & uVar2;\u000a        }\u000a        if (uVar12 == 0) {\u000a          uVar7 = uVar12;\u000a        }\u000a        uVar8 = uVar8 | uVar7;\u000a        iVar1 = iVar1 + -1;\u000a        uVar13 = uVar13 << 8;\u000a      } while (iVar1 != 0);\u000a      if (uVar8 == 0) {\u000a        iVar1 = sizeOfWxxxNode(puVar11);\u000a      }\u000a      else {\u000a        iVar10 = puVar11[7];\u000a        iVar5 = puVar11[4];\u000a        if (puVar11[8] == 1) {\u000a          iVar1 = iVar5 * 2 + 0xd;\u000a          if (iVar5 == 0) {\u000a            iVar1 = 0xb;\u000a          }\u000a          iVar10 = iVar10 << 1;\u000a        }\u000a        else {\u000a          iVar1 = iVar5 + 0xc;\u000a          if (iVar5 == 0) {\u000a            iVar1 = 0xb;\u000a          }\u000a        }\u000a        iVar1 = iVar1 + iVar10;\u000a      }\u000a    }\u000a    in_stack_00000030 = iVar1 + in_stack_00000030;\u000a    puVar11 = (undefined4 *)*puVar11;\u000a  }\u000a  if ((*in_stack_00000014 & 0x20) != 0) {\u000a    in_stack_00000030 = *(int *)(in_stack_00000020 + DAT_0001e1e4) + in_stack_00000030;\u000a  }\u000a  uVar2 = in_stack_00000030;\u000a  if ((in_stack_00000030 <= in_stack_00000018) && (uVar2 = 0, in_stack_0000001c != (undefined *)0x0)\u000a     ) {\u000a    *in_stack_0000001c = 0x49;\u000a    in_stack_0000001c[1] = 0x44;\u000a    in_stack_0000001c[2] = 0x33;\u000a    in_stack_0000001c[3] = 3;\u000a    in_stack_00000034 = (int *)0x0;\u000a    in_stack_0000001c[4] = 0;\u000a    in_stack_0000001c[5] = 0;\u000a    uVar2 = in_stack_00000030 - 10;\u000a    in_stack_0000001c[6] = (byte)(uVar2 >> 0x15) & 0x7f;\u000a    in_stack_0000001c[7] = (byte)(uVar2 >> 0xe) & 0x7f;\u000a    in_stack_0000001c[8] = (byte)(uVar2 >> 7) & 0x7f;\u000a    in_stack_0000001c[9] = (byte)uVar2 & 0x7f;\u000a    puVar14 = in_stack_0000001c + 10;\u000a    puVar11 = (undefined4 *)*puStack0000000c;\u000a    while (puVar11 != (undefined4 *)0x0) {\u000a      uVar2 = puVar11[1];\u000a      uVar13 = 0xff;\u000a      iVar1 = 4;\u000a      if ((uVar2 == DAT_0001e494) || (uVar8 = (uint)in_stack_00000034, uVar2 == DAT_0001e498)) {\u000a        iVar1 = puVar11[4] * 2 + 0x10;\u000a        if (puVar11[5] != 1) {\u000a          iVar1 = puVar11[4] + 0xf;\u000a        }\u000a        iVar10 = 0;\u000a        if (puVar11[8] == 1) {\u000a          iVar10 = puVar11[8];\u000a        }\u000a        uVar13 = (puVar11[7] << iVar10) + iVar1;\u000a        iVar1 = 4;\u000a        if (10 < uVar13) {\u000a          do {\u000a            puVar14[iVar1 + -1] = (char)uVar2;\u000a            iVar1 = iVar1 + -1;\u000a            uVar2 = uVar2 >> 8;\u000a          } while (0 < iVar1);\u000a          uVar13 = uVar13 - 10;\u000a          iVar1 = 4;\u000a          do {\u000a            puVar14[iVar1 + 3] = (char)uVar13;\u000a            iVar1 = iVar1 + -1;\u000a            uVar13 = uVar13 >> 8;\u000a          } while (0 < iVar1);\u000a          puVar14[8] = 0;\u000a          puVar14[9] = 0;\u000a          *(bool *)(puVar14 + 10) = puVar11[8] == 1;\u000a          puVar14[0xb] = *(undefined *)(puVar11 + 2);\u000a          puVar14[0xc] = *(undefined *)((int)puVar11 + 9);\u000a          puVar14[0xd] = *(undefined *)((int)puVar11 + 10);\u000a          puVar14 = puVar14 + 0xe;\u000a          if (puVar11[5] == 1) {\u000a            gfp_00 = (lame_global_flags *)writeUcs2s(puVar14,puVar11[3],puVar11[4]);\u000a            *(undefined *)&gfp_00->class_id = 0;\u000a            *(undefined *)((int)&gfp_00->class_id + 1) = 0;\u000a            iVar1 = lame_get_ReplayGain_input(gfp_00);\u000a            return iVar1;\u000a          }\u000a          iVar1 = puVar11[4];\u000a          if (iVar1 != 0) {\u000a            puVar6 = (undefined *)puVar11[3];\u000a            iVar10 = iVar1;\u000a            puVar9 = puVar14;\u000a            do {\u000a              *puVar9 = *puVar6;\u000a              puVar9 = puVar9 + 1;\u000a              puVar6 = puVar6 + 1;\u000a              iVar10 = iVar10 + -1;\u000a            } while (iVar10 != 0);\u000a            puVar14 = puVar14 + iVar1;\u000a          }\u000a          *puVar14 = 0;\u000a          puVar14 = puVar14 + 1;\u000a          if (puVar11[8] == 1) {\u000aLAB_0001e338:\u000a            puVar14 = (undefined *)writeUcs2s(puVar14,puVar11[6],puVar11[7]);\u000a          }\u000a          else {\u000a            iVar1 = puVar11[7];\u000a            if (iVar1 != 0) {\u000a              puVar6 = (undefined *)puVar11[6];\u000a              iVar10 = iVar1;\u000a              puVar9 = puVar14;\u000a              do {\u000a                *puVar9 = *puVar6;\u000a                puVar9 = puVar9 + 1;\u000a                puVar6 = puVar6 + 1;\u000a                iVar10 = iVar10 + -1;\u000a              } while (iVar10 != 0);\u000aLAB_0001e36a:\u000a              puVar14 = puVar14 + iVar1;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        do {\u000a          uVar12 = uVar13 & 0x57000000;\u000a          uVar7 = (uint)in_stack_00000034;\u000a          if (uVar12 != (uVar13 & uVar2)) {\u000a            uVar7 = uVar13 & uVar2;\u000a          }\u000a          if (uVar12 == 0) {\u000a            uVar7 = uVar12;\u000a          }\u000a          uVar8 = uVar8 | uVar7;\u000a          iVar1 = iVar1 + -1;\u000a          uVar13 = uVar13 << 8;\u000a        } while (iVar1 != 0);\u000a        if (uVar8 == 0) {\u000a          uVar13 = sizeOfWxxxNode(puVar11);\u000a          iVar1 = 4;\u000a          if (10 < uVar13) {\u000a            do {\u000a              puVar14[iVar1 + -1] = (char)uVar2;\u000a              iVar1 = iVar1 + -1;\u000a              uVar2 = uVar2 >> 8;\u000a            } while (0 < iVar1);\u000a            uVar13 = uVar13 - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              puVar14[iVar1 + 3] = (char)uVar13;\u000a              iVar1 = iVar1 + -1;\u000a              uVar13 = uVar13 >> 8;\u000a            } while (0 < iVar1);\u000a            puVar14[8] = 0;\u000a            puVar14[9] = 0;\u000a            puVar9 = puVar14 + 10;\u000a            if (puVar11[4] != 0) {\u000a              *(bool *)(puVar14 + 10) = puVar11[5] == 1;\u000a              puVar14 = puVar14 + 0xb;\u000a              if (puVar11[5] == 1) {\u000a                puVar9 = (undefined *)writeUcs2s(puVar14,puVar11[3],puVar11[4]);\u000a                *puVar9 = 0;\u000a                puVar9[1] = 0;\u000a                puVar9 = puVar9 + 2;\u000a              }\u000a              else {\u000a                iVar1 = puVar11[4];\u000a                if (iVar1 != 0) {\u000a                  puVar6 = (undefined *)puVar11[3];\u000a                  iVar10 = iVar1;\u000a                  puVar9 = puVar14;\u000a                  do {\u000a                    *puVar9 = *puVar6;\u000a                    puVar9 = puVar9 + 1;\u000a                    puVar6 = puVar6 + 1;\u000a                    iVar10 = iVar10 + -1;\u000a                  } while (iVar10 != 0);\u000a                  puVar14 = puVar14 + iVar1;\u000a                }\u000a                *puVar14 = 0;\u000a                puVar9 = puVar14 + 1;\u000a              }\u000a            }\u000a            if (puVar11[8] == 1) {\u000a              puVar14 = (undefined *)writeLoBytes(puVar9,puVar11[6],puVar11[7]);\u000a            }\u000a            else {\u000a              iVar1 = puVar11[7];\u000a              puVar14 = puVar9;\u000a              if (iVar1 != 0) {\u000a                puVar6 = (undefined *)puVar11[6];\u000a                iVar10 = iVar1;\u000a                puVar14 = puVar9;\u000a                do {\u000a                  *puVar14 = *puVar6;\u000a                  puVar14 = puVar14 + 1;\u000a                  puVar6 = puVar6 + 1;\u000a                  iVar10 = iVar10 + -1;\u000a                } while (iVar10 != 0);\u000a                puVar14 = puVar9 + iVar1;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          iVar1 = puVar11[7];\u000a          iVar10 = puVar11[4];\u000a          if (puVar11[8] == 1) {\u000a            iVar5 = iVar10 * 2 + 0xd;\u000a            if (iVar10 == 0) {\u000a              iVar5 = 0xb;\u000a            }\u000a            iVar1 = iVar1 << 1;\u000a          }\u000a          else {\u000a            iVar5 = iVar10 + 0xc;\u000a            if (iVar10 == 0) {\u000a              iVar5 = 0xb;\u000a            }\u000a          }\u000a          iVar10 = 4;\u000a          if (10 < (uint)(iVar5 + iVar1)) {\u000a            do {\u000a              puVar14[iVar10 + -1] = (char)uVar2;\u000a              iVar10 = iVar10 + -1;\u000a              uVar2 = uVar2 >> 8;\u000a            } while (0 < iVar10);\u000a            uVar2 = (iVar5 + iVar1) - 10;\u000a            iVar1 = 4;\u000a            do {\u000a              puVar14[iVar1 + 3] = (char)uVar2;\u000a              iVar1 = iVar1 + -1;\u000a              uVar2 = uVar2 >> 8;\u000a            } while (0 < iVar1);\u000a            puVar14[8] = 0;\u000a            puVar14[9] = 0;\u000a            *(bool *)(puVar14 + 10) = puVar11[8] == 1;\u000a            puVar14 = puVar14 + 0xb;\u000a            iVar1 = puVar11[4];\u000a            if (iVar1 != 0) {\u000a              if (puVar11[5] == 1) {\u000a                puVar14 = (undefined *)writeUcs2s(puVar14,puVar11[3]);\u000a                *puVar14 = 0;\u000a                puVar14[1] = 0;\u000a                puVar14 = puVar14 + 2;\u000a              }\u000a              else {\u000a                puVar6 = (undefined *)puVar11[3];\u000a                iVar10 = iVar1;\u000a                puVar9 = puVar14;\u000a                do {\u000a                  *puVar9 = *puVar6;\u000a                  puVar9 = puVar9 + 1;\u000a                  puVar6 = puVar6 + 1;\u000a                  iVar10 = iVar10 + -1;\u000a                } while (iVar10 != 0);\u000a                puVar14[iVar1] = 0;\u000a                puVar14 = puVar14 + iVar1 + 1;\u000a              }\u000a            }\u000a            if (puVar11[8] == 1) goto LAB_0001e338;\u000a            iVar1 = puVar11[7];\u000a            if (iVar1 != 0) {\u000a              puVar6 = (undefined *)puVar11[6];\u000a              iVar10 = iVar1;\u000a              puVar9 = puVar14;\u000a              do {\u000a                *puVar9 = *puVar6;\u000a                puVar9 = puVar9 + 1;\u000a                puVar6 = puVar6 + 1;\u000a                iVar10 = iVar10 + -1;\u000a              } while (iVar10 != 0);\u000a              goto LAB_0001e36a;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      puVar11 = (undefined4 *)*puVar11;\u000a    }\u000a    if (__s != (char *)0x0) {\u000a      iVar1 = 4;\u000a      if ((*piStack00000008 != 0) &&\u000a         (uVar2 = DAT_0001e49c, *(int *)(in_stack_00000020 + lame_get_error_protection) != 0)) {\u000a        do {\u000a          puVar14[iVar1 + -1] = (char)uVar2;\u000a          iVar1 = iVar1 + -1;\u000a          uVar2 = uVar2 >> 8;\u000a        } while (0 < iVar1);\u000a                    /* WARNING: Subroutine does not return */\u000a        strlen(__s);\u000a      }\u000a    }\u000a    __aeabi_memclr(puVar14,in_stack_0000001c + (in_stack_00000030 - (int)puVar14));\u000a    uVar2 = in_stack_00000030;\u000a  }\u000a  if (**(int **)(DAT_0001e4a0 + 0x1e476) == *in_stack_00000024) {\u000a    return uVar2;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __stack_chk_fail();\u000a}\u000a\u000a
p3699
S'pop { r2 }\npush { r1 }\npop { r3 }\npush { r4 }\npop { r0 }\nldr r1,[sp,#0x28]\nbl 0x00037bc0\npush { r0 }\npop { r4 }\nstr r1,[sp,#0x28]\nldr r2,[0x0001e1b4]\nldr r3,[0x0001e1b8]\nbl 0x00037d30\nmvn r2,r5\ncmp r0,#0x0\nbne 0x0001defe\n'
p3700
S'04 bc\n02 b4\n08 bc\n10 b4\n01 bc\n0a 99\n19 f0 7f fe\n01 b4\n10 bc\n0a 91\nba 4a\nbb 4b\n19 f0 30 ff\nea 43\n00 28\n13 d1\n'
p3701
S'.text:0001deb2\n.text:0001deb4\n.text:0001deb6\n.text:0001deb8\n.text:0001deba\n.text:0001debc\n.text:0001debe\n.text:0001dec2\n.text:0001dec4\n.text:0001dec6\n.text:0001dec8\n.text:0001deca\n.text:0001decc\n.text:0001ded0\n.text:0001ded2\n.text:0001ded4\n'
p3702
tp3703
sS'ResvMaxBits'
p3704
(S'\n__stdcall ResvMaxBits()\n'
p3705
V\u000avoid ResvMaxBits(void)\u000a\u000a{\u000a  (*(is_lame_global_flags_valid + DAT_0003842c))();\u000a  return;\u000a}\u000a\u000a
p3706
S'ldr r12,[0x3842c]\nadd pc,r12,pc\n'
p3707
S'00 c0 9f e5\n0f f0 8c e0\n'
p3708
S'.text:00038424\n.text:00038428\n'
p3709
tp3710
sS'strncpy'
p3711
(S'\n__stdcall strncpy(char * __dest, char * __src, size_t __n)\n'
p3712
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strncpy(char *__dest,char *__src,size_t __n)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(ftell + DAT_000384dc))();\u000a  return pcVar1;\u000a}\u000a\u000a
p3713
S'ldr r12,[0x384dc]\nadd pc,r12,pc\n'
p3714
S'00 c0 9f e5\n0f f0 8c e0\n'
p3715
S'.text:000384d4\n.text:000384d8\n'
p3716
tp3717
sS'lame_set_disable_reservoir'
p3718
(S'\n__stdcall lame_set_disable_reservoir(lame_global_flags * gfp, int disable_reservoir)\n'
p3719
V\u000aint lame_set_disable_reservoir(lame_global_flags *gfp,int disable_reservoir)\u000a\u000a{\u000a  undefined4 unaff_r4;\u000a  byte *__ptr;\u000a  lame_global_flags *plVar1;\u000a  lame_global_flags *unaff_r6;\u000a  byte *pbVar2;\u000a  lame_global_flags *in_stack_00000004;\u000a  \u000a  if ((gfp <= unaff_r6) &&\u000a     (plVar1 = gfp, pbVar2 = __ptr, in_stack_00000004 = gfp, gfp != (lame_global_flags *)0x0)) {\u000a    do {\u000a      add_dummy_byte(unaff_r4,(uint)*pbVar2,1);\u000a      plVar1 = (lame_global_flags *)((int)&plVar1->attackthre_s + 3);\u000a      pbVar2 = pbVar2 + 1;\u000a      in_stack_00000004 = gfp;\u000a    } while (plVar1 != (lame_global_flags *)0x0);\u000a  }\u000a  free(__ptr);\u000a  return (int)in_stack_00000004;\u000a}\u000a\u000a
p3720
S'cmp r0,r6\nbls 0x0001e540\npush { r5 }\npop { r0 }\nb 0x0001e562\nstr r5,[sp,#0x8]\ncmp r0,#0x0\nstr r0,[sp,#0x4]\nbeq 0x0001e560\nldr r5,[sp,#0x4]\nldr r6,[sp,#0x8]\nldrb r1,[r6,#0x0]\nmov r2,#0x1\npush { r4 }\npop { r0 }\nbl 0x00037d70\nsub r5,#0x1\nadd r6,#0x1\ncmp r5,#0x0\nbne 0x0001e54c\n'
p3721
S'b0 42\n02 d9\n20 b4\n01 bc\n10 e0\n02 95\n00 28\n01 90\n0b d0\n01 9d\n02 9e\n31 78\n01 22\n10 b4\n01 bc\n19 f0 0c fc\n01 3d\n01 36\n00 2d\nf5 d1\n'
p3722
S'.text:0001e536\n.text:0001e538\n.text:0001e53a\n.text:0001e53c\n.text:0001e53e\n.text:0001e540\n.text:0001e542\n.text:0001e544\n.text:0001e546\n.text:0001e548\n.text:0001e54a\n.text:0001e54c\n.text:0001e54e\n.text:0001e550\n.text:0001e552\n.text:0001e554\n.text:0001e558\n.text:0001e55a\n.text:0001e55c\n.text:0001e55e\n'
p3723
tp3724
sS'lame_set_emphasis'
p3725
(S'\n__stdcall lame_set_emphasis()\n'
p3726
V\u000aundefined4 lame_set_emphasis(int iParm1,uint uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  uVar2 = 0xffffffff;\u000a  if ((uParm2 < 4) && (iVar1 != 0)) {\u000a    *(uint *)(iParm1 + 0x74) = uParm2;\u000a    uVar2 = 0;\u000a  }\u000a  return uVar2;\u000a}\u000a\u000a
p3727
S'push { r4, r5, r7, lr }\nadd r7,sp,#0x8\npush { r1 }\npop { r4 }\npush { r0 }\npop { r5 }\nbl 0x00038430\npush { r0 }\npop { r1 }\nmov r2,#0x0\nmvn r0,r2\ncmp r4,#0x3\nbhi 0x0002f124\ncmp r1,#0x0\nbeq 0x0002f124\nstr r4,[r5,#0x74]\npush { r2 }\npop { r0 }\npop { r4, r5, r7, pc }\n'
p3728
S'b0 b5\n02 af\n02 b4\n10 bc\n01 b4\n20 bc\n09 f0 91 f9\n01 b4\n02 bc\n00 22\nd0 43\n03 2c\n04 d8\n00 29\n02 d0\n6c 67\n04 b4\n01 bc\nb0 bd\n'
p3729
S'.text:0002f0fe\n.text:0002f100\n.text:0002f102\n.text:0002f104\n.text:0002f106\n.text:0002f108\n.text:0002f10a\n.text:0002f10e\n.text:0002f110\n.text:0002f112\n.text:0002f114\n.text:0002f116\n.text:0002f118\n.text:0002f11a\n.text:0002f11c\n.text:0002f11e\n.text:0002f120\n.text:0002f122\n.text:0002f124\n'
p3730
tp3731
sS'lame_get_no_short_blocks'
p3732
(S'\n__stdcall lame_get_no_short_blocks()\n'
p3733
V\u000aundefined4 lame_get_no_short_blocks(int iParm1)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = is_lame_global_flags_valid();\u000a  if ((iVar1 != 0) && (*(uint *)(iParm1 + 0xf0) < 4)) {\u000a    return *(undefined4 *)(DAT_0002efb4 + 0x2efac + *(uint *)(iParm1 + 0xf0) * 4);\u000a  }\u000a  return 0xffffffff;\u000a}\u000a\u000a
p3734
S'push { r4, r6, r7, lr }\nadd r7,sp,#0x8\npush { r0 }\npop { r4 }\nbl 0x00038430\ncmp r0,#0x0\nbeq 0x0002efae\nmov r0,#0xf0\nldr r0,[r4,r0]\ncmp r0,#0x3\nbhi 0x0002efae\nlsl r0,r0,#0x2\nldr r1,[0x0002efb4]\nadd r1,pc\nldr r0,[r1,r0]\npop { r4, r6, r7, pc }\nmov r0,#0x0\nmvn r0,r0\npop { r4, r6, r7, pc }\n'
p3735
S'd0 b5\n02 af\n01 b4\n10 bc\n09 f0 4c fa\n00 28\n08 d0\nf0 20\n20 58\n03 28\n04 d8\n80 00\n03 49\n79 44\n08 58\nd0 bd\n00 20\nc0 43\nd0 bd\n'
p3736
S'.text:0002ef8c\n.text:0002ef8e\n.text:0002ef90\n.text:0002ef92\n.text:0002ef94\n.text:0002ef98\n.text:0002ef9a\n.text:0002ef9c\n.text:0002ef9e\n.text:0002efa0\n.text:0002efa2\n.text:0002efa4\n.text:0002efa6\n.text:0002efa8\n.text:0002efaa\n.text:0002efac\n.text:0002efae\n.text:0002efb0\n.text:0002efb2\n'
p3737
tp3738
s.