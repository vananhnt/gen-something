(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x601e08]\nPUSH RBP\nLEA RBP,[0x601e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400720\nTEST RBP,RBP\nJZ 0x00400e46\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00400e30\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 06 10 20 00\n55\n48 8d 2d 06 10 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 ff f8 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000400df0\n.text:0000000000400df2\n.text:0000000000400df4\n.text:0000000000400df7\n.text:0000000000400df9\n.text:0000000000400dfb\n.text:0000000000400e02\n.text:0000000000400e03\n.text:0000000000400e0a\n.text:0000000000400e0b\n.text:0000000000400e0e\n.text:0000000000400e11\n.text:0000000000400e14\n.text:0000000000400e18\n.text:0000000000400e1c\n.text:0000000000400e21\n.text:0000000000400e24\n.text:0000000000400e26\n.text:0000000000400e28\n.text:0000000000400e30\n.text:0000000000400e33\n.text:0000000000400e36\n.text:0000000000400e39\n.text:0000000000400e3d\n.text:0000000000400e41\n.text:0000000000400e44\n.text:0000000000400e46\n.text:0000000000400e4a\n.text:0000000000400e4b\n.text:0000000000400e4c\n.text:0000000000400e4e\n.text:0000000000400e50\n.text:0000000000400e52\n.text:0000000000400e54\n'
p6
tp7
sS'_init'
p8
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p9
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00601ff8;\u000a  if (PTR___gmon_start___00601ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00601ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00601ff8]\nTEST RAX,RAX\nJZ 0x00400732\nCALL RAX\nADD RSP,0x8\nRET\n'
p11
S'48 83 ec 08\n48 8b 05 cd 18 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p12
S'.init:0000000000400720\n.init:0000000000400724\n.init:000000000040072b\n.init:000000000040072e\n.init:0000000000400730\n.init:0000000000400732\n.init:0000000000400736\n'
p13
tp14
sS'_start'
p15
(S'\n__stdcall _start()\n'
p16
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00601ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p17
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x400e60\nMOV RCX,0x400df0\nMOV RDI,0x400920\nCALL qword ptr [0x00601ff0]\nHLT\n'
p18
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 60 0e 40 00\n48 c7 c1 f0 0d 40 00\n48 c7 c7 20 09 40 00\nff 15 a6 17 20 00\nf4\n'
p19
S'.text:0000000000400820\n.text:0000000000400822\n.text:0000000000400825\n.text:0000000000400826\n.text:0000000000400829\n.text:000000000040082d\n.text:000000000040082e\n.text:000000000040082f\n.text:0000000000400836\n.text:000000000040083d\n.text:0000000000400844\n.text:000000000040084a\n'
p20
tp21
sS'usage'
p22
(S'\n__stdcall usage(char * program_name)\n'
p23
V\u000avoid usage(char *program_name)\u000a\u000a{\u000a  undefined8 in_RAX;\u000a  undefined8 in_RDX;\u000a  undefined8 extraout_RDX;\u000a  \u000a  printf("Usage: %s [-hq] [--help] [--quiet] [file ...]\u005cn",program_name,in_RDX,program_name);\u000a  puts("Check whether input files are valid UTF-8.");\u000a  printf("This is version %s.\u005cn",&DAT_00400f14,extraout_RDX,in_RAX);\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH RAX\nMOV RCX,RDI\nMOV EDI,0x400ea4\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x004007a0\nMOV EDI,0x401000\nCALL 0x00400770\nMOV EDI,0x400eff\nMOV ESI,0x400f14\nXOR EAX,EAX\nPOP RCX\nJMP 0x004007a0\n'
p25
S'50\n48 89 f9\nbf a4 0e 40 00\n31 c0\n48 89 ce\ne8 8d fc ff ff\nbf 00 10 40 00\ne8 53 fc ff ff\nbf ff 0e 40 00\nbe 14 0f 40 00\n31 c0\n59\ne9 71 fc ff ff\n'
p26
S'.text:0000000000400b00\n.text:0000000000400b01\n.text:0000000000400b04\n.text:0000000000400b09\n.text:0000000000400b0b\n.text:0000000000400b0e\n.text:0000000000400b13\n.text:0000000000400b18\n.text:0000000000400b1d\n.text:0000000000400b22\n.text:0000000000400b27\n.text:0000000000400b29\n.text:0000000000400b2a\n'
p27
tp28
sS'main'
p29
(S'\n__stdcall main(char * * argv)\n'
p30
V\u000aint main(char **argv)\u000a\u000a{\u000a  uint __errnum;\u000a  char *filename;\u000a  FILE *__stream;\u000a  int iVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  char *pcVar4;\u000a  FILE *file;\u000a  char **ppcVar5;\u000a  char **in_RSI;\u000a  int iVar6;\u000a  option options [3];\u000a  undefined4 local_9c;\u000a  undefined *local_98;\u000a  undefined4 local_90;\u000a  undefined8 local_88;\u000a  undefined4 local_80;\u000a  char *local_78;\u000a  undefined4 local_70;\u000a  undefined4 *local_68;\u000a  undefined4 local_60;\u000a  undefined4 local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  undefined4 local_48;\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  \u000a  iVar6 = (int)argv;\u000a  local_98 = &DAT_00400e74;\u000a  local_90 = 0;\u000a  local_88 = 0;\u000a  local_80 = 0x68;\u000a  local_78 = "quiet";\u000a  local_70 = 0;\u000a  local_68 = &local_9c;\u000a  local_60 = 1;\u000a  local_48 = 0;\u000a  uStack68 = 0;\u000a  uStack64 = 0;\u000a  uStack60 = 0;\u000a  local_58 = 0;\u000a  uStack84 = 0;\u000a  uStack80 = 0;\u000a  uStack76 = 0;\u000a  local_9c = 0;\u000a  do {\u000a    while (iVar1 = getopt_long(), 0x3e < iVar1) {\u000a      if (iVar1 != 0x71) {\u000a        if (iVar1 == 0x3f) {\u000a                    /* WARNING: Subroutine does not return */\u000a          exit(1);\u000a        }\u000a        if (iVar1 == 0x68) {\u000a          usage(*in_RSI);\u000a                    /* WARNING: Subroutine does not return */\u000a          exit(0);\u000a        }\u000a        goto LAB_00400ac9;\u000a      }\u000a      local_9c = 1;\u000a    }\u000a    if (iVar1 == -1) {\u000a      if (optind == iVar6) {\u000a        iVar1 = is_utf8_byte_stream(stdin,"stdin");\u000a      }\u000a      else {\u000a        if (iVar6 <= optind) goto LAB_00400aeb;\u000a        ppcVar5 = in_RSI + (long)optind;\u000a        iVar6 = iVar6 - optind;\u000a        iVar1 = 1;\u000a        do {\u000a          file = (FILE *)fopen(*ppcVar5,"r");\u000a          __stream = stderr;\u000a          filename = *ppcVar5;\u000a          if (file == (FILE *)0x0) {\u000a            puVar3 = (uint *)__errno_location();\u000a            __errnum = *puVar3;\u000a            pcVar4 = strerror(__errnum);\u000a            iVar1 = 0;\u000a            fprintf(__stream,"isutf8: %s: error %d: %s\u005cn",filename,(ulong)__errnum,pcVar4);\u000a          }\u000a          else {\u000a            iVar2 = is_utf8_byte_stream(file,filename);\u000a            if (iVar2 == 0) {\u000a              iVar1 = iVar2;\u000a            }\u000a            fclose((FILE *)file);\u000a          }\u000a          ppcVar5 = ppcVar5 + 1;\u000a          iVar6 = iVar6 + -1;\u000a        } while (iVar6 != 0);\u000a      }\u000a      if (iVar1 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(1);\u000a      }\u000aLAB_00400aeb:\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(0);\u000a    }\u000a  } while (iVar1 == 0);\u000aLAB_00400ac9:\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p31
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x78\nMOV RBP,RSI\nMOV R15D,EDI\nMOV qword ptr [RSP + 0x10],0x400e74\nMOV dword ptr [RSP + 0x18],0x0\nMOV qword ptr [RSP + 0x20],0x0\nMOV dword ptr [RSP + 0x28],0x68\nMOV qword ptr [RSP + 0x30],0x400e79\nMOV dword ptr [RSP + 0x38],0x0\nLEA RAX,[RSP + 0xc]\nMOV qword ptr [RSP + 0x40],RAX\nMOV dword ptr [RSP + 0x48],0x1\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM0\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOV dword ptr [RSP + 0xc],0x0\nLEA R14,[RSP + 0x10]\nJMP 0x004009a8\nMOV dword ptr [RSP + 0xc],0x1\nMOV EDX,0x400e7f\nXOR R8D,R8D\nMOV EDI,R15D\nMOV RSI,RBP\nMOV RCX,R14\nCALL 0x00400790\nCMP EAX,0x3e\nJG 0x004009e0\nCMP EAX,-0x1\nJZ 0x00400a07\nTEST EAX,EAX\nJZ 0x004009a8\nJMP 0x00400ac9\nCMP EAX,0x71\nJZ 0x004009a0\nCMP EAX,0x3f\nJZ 0x00400abf\nCMP EAX,0x68\nJNZ 0x00400ac9\nMOV RDI,qword ptr [RBP]\nCALL 0x00400b00\nXOR EDI,EDI\nCALL 0x00400800\nMOVSXD RAX,dword ptr [0x006020a8]\nCMP EAX,R15D\nJZ 0x00400ace\nCMP EAX,R15D\nJGE 0x00400aeb\nLEA RBP,[RBP + RAX*0x8]\nSUB R15D,EAX\nMOV R14D,0x1\nJMP 0x00400a70\nMOV R12,qword ptr [0x006020c0]\nCALL 0x00400760\nMOV EBX,dword ptr [RAX]\nMOV EDI,EBX\nCALL 0x00400810\nMOV R8,RAX\nXOR R14D,R14D\nMOV ESI,0x400e8a\nXOR EAX,EAX\nMOV RDI,R12\nMOV RDX,R13\nMOV ECX,EBX\nCALL 0x004007d0\nJMP 0x00400aa7\nMOV RDI,qword ptr [RBP]\nMOV ESI,0x400e88\nCALL 0x004007f0\nMOV RBX,RAX\nMOV R13,qword ptr [RBP]\nTEST RBX,RBX\nJZ 0x00400a30\nMOV EDX,dword ptr [RSP + 0xc]\nMOV RDI,RBX\nMOV RSI,R13\nCALL 0x00400b30\nTEST EAX,EAX\nCMOVZ R14D,EAX\nMOV RDI,RBX\nCALL 0x00400780\nADD RBP,0x8\nDEC R15D\nJNZ 0x00400a70\nTEST R14D,R14D\nJNZ 0x00400aeb\nMOV EDI,0x1\nCALL 0x00400800\nMOV EDI,0x1\nCALL 0x00400800\nCALL 0x00400750\nMOV RDI,qword ptr [0x006020a0]\nMOV EDX,dword ptr [RSP + 0xc]\nMOV ESI,0x400e82\nCALL 0x00400b30\nMOV R14D,EAX\nTEST R14D,R14D\nJZ 0x00400ab5\nXOR EDI,EDI\nCALL 0x00400800\n'
p32
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 78\n48 89 f5\n41 89 ff\n48 c7 44 24 10 74 0e 40 00\nc7 44 24 18 00 00 00 00\n48 c7 44 24 20 00 00 00 00\nc7 44 24 28 68 00 00 00\n48 c7 44 24 30 79 0e 40 00\nc7 44 24 38 00 00 00 00\n48 8d 44 24 0c\n48 89 44 24 40\nc7 44 24 48 01 00 00 00\n0f 57 c0\n0f 29 44 24 60\n0f 29 44 24 50\nc7 44 24 0c 00 00 00 00\n4c 8d 74 24 10\neb 13\nc7 44 24 0c 01 00 00 00\nba 7f 0e 40 00\n45 31 c0\n44 89 ff\n48 89 ee\n4c 89 f1\ne8 d2 fd ff ff\n83 f8 3e\n7f 1d\n83 f8 ff\n74 3f\n85 c0\n74 dc\ne9 f8 00 00 00\n83 f8 71\n74 bb\n83 f8 3f\n0f 84 d1 00 00 00\n83 f8 68\n0f 85 d2 00 00 00\n48 8b 7d 00\ne8 00 01 00 00\n31 ff\ne8 f9 fd ff ff\n48 63 05 9a 16 20 00\n44 39 f8\n0f 84 b7 00 00 00\n44 39 f8\n0f 8d cb 00 00 00\n48 8d 6c c5 00\n41 29 c7\n41 be 01 00 00 00\neb 40\n4c 8b 25 89 16 20 00\ne8 24 fd ff ff\n8b 18\n89 df\ne8 cb fd ff ff\n49 89 c0\n45 31 f6\nbe 8a 0e 40 00\n31 c0\n4c 89 e7\n4c 89 ea\n89 d9\ne8 71 fd ff ff\neb 46\n48 8b 7d 00\nbe 88 0e 40 00\ne8 72 fd ff ff\n48 89 c3\n4c 8b 6d 00\n48 85 db\n74 a6\n8b 54 24 0c\n48 89 df\n4c 89 ee\ne8 97 00 00 00\n85 c0\n44 0f 44 f0\n48 89 df\ne8 d9 fc ff ff\n48 83 c5 08\n41 ff cf\n75 c0\n45 85 f6\n75 36\nbf 01 00 00 00\ne8 41 fd ff ff\nbf 01 00 00 00\ne8 37 fd ff ff\ne8 82 fc ff ff\n48 8b 3d cb 15 20 00\n8b 54 24 0c\nbe 82 0e 40 00\ne8 4d 00 00 00\n41 89 c6\n45 85 f6\n74 ca\n31 ff\ne8 0e fd ff ff\n'
p33
S'.text:0000000000400920\n.text:0000000000400921\n.text:0000000000400923\n.text:0000000000400925\n.text:0000000000400927\n.text:0000000000400929\n.text:000000000040092a\n.text:000000000040092e\n.text:0000000000400931\n.text:0000000000400934\n.text:000000000040093d\n.text:0000000000400945\n.text:000000000040094e\n.text:0000000000400956\n.text:000000000040095f\n.text:0000000000400967\n.text:000000000040096c\n.text:0000000000400971\n.text:0000000000400979\n.text:000000000040097c\n.text:0000000000400981\n.text:0000000000400986\n.text:000000000040098e\n.text:0000000000400993\n.text:00000000004009a0\n.text:00000000004009a8\n.text:00000000004009ad\n.text:00000000004009b0\n.text:00000000004009b3\n.text:00000000004009b6\n.text:00000000004009b9\n.text:00000000004009be\n.text:00000000004009c1\n.text:00000000004009c3\n.text:00000000004009c6\n.text:00000000004009c8\n.text:00000000004009ca\n.text:00000000004009cc\n.text:00000000004009e0\n.text:00000000004009e3\n.text:00000000004009e5\n.text:00000000004009e8\n.text:00000000004009ee\n.text:00000000004009f1\n.text:00000000004009f7\n.text:00000000004009fb\n.text:0000000000400a00\n.text:0000000000400a02\n.text:0000000000400a07\n.text:0000000000400a0e\n.text:0000000000400a11\n.text:0000000000400a17\n.text:0000000000400a1a\n.text:0000000000400a20\n.text:0000000000400a25\n.text:0000000000400a28\n.text:0000000000400a2e\n.text:0000000000400a30\n.text:0000000000400a37\n.text:0000000000400a3c\n.text:0000000000400a3e\n.text:0000000000400a40\n.text:0000000000400a45\n.text:0000000000400a48\n.text:0000000000400a4b\n.text:0000000000400a50\n.text:0000000000400a52\n.text:0000000000400a55\n.text:0000000000400a58\n.text:0000000000400a5a\n.text:0000000000400a5f\n.text:0000000000400a70\n.text:0000000000400a74\n.text:0000000000400a79\n.text:0000000000400a7e\n.text:0000000000400a81\n.text:0000000000400a85\n.text:0000000000400a88\n.text:0000000000400a8a\n.text:0000000000400a8e\n.text:0000000000400a91\n.text:0000000000400a94\n.text:0000000000400a99\n.text:0000000000400a9b\n.text:0000000000400a9f\n.text:0000000000400aa2\n.text:0000000000400aa7\n.text:0000000000400aab\n.text:0000000000400aae\n.text:0000000000400ab0\n.text:0000000000400ab3\n.text:0000000000400ab5\n.text:0000000000400aba\n.text:0000000000400abf\n.text:0000000000400ac4\n.text:0000000000400ac9\n.text:0000000000400ace\n.text:0000000000400ad5\n.text:0000000000400ad9\n.text:0000000000400ade\n.text:0000000000400ae3\n.text:0000000000400ae6\n.text:0000000000400ae9\n.text:0000000000400aeb\n.text:0000000000400aed\n'
p34
tp35
sS'printf'
p36
(S'\n__stdcall printf(char * __format)\n'
p37
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00602040)();\u000a  return iVar1;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00602040]\n'
p39
S'ff 25 9a 18 20 00\n'
p40
S'.plt:00000000004007a0\n'
p41
tp42
sS'deregister_tm_clones'
p43
(S'\n__stdcall deregister_tm_clones()\n'
p44
V\u000a/* WARNING: Removing unreachable block (ram,0x00400865) */\u000a/* WARNING: Removing unreachable block (ram,0x0040086f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p45
S'MOV EAX,0x602097\nPUSH RBP\nSUB RAX,0x602090\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400880\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400880\nPOP RBP\nMOV EDI,0x602090\nJMP RAX\nPOP RBP\nRET\n'
p46
S'b8 97 20 60 00\n55\n48 2d 90 20 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 90 20 60 00\nff e0\n5d\nc3\n'
p47
S'.text:0000000000400850\n.text:0000000000400855\n.text:0000000000400856\n.text:000000000040085c\n.text:0000000000400860\n.text:0000000000400863\n.text:0000000000400865\n.text:000000000040086a\n.text:000000000040086d\n.text:000000000040086f\n.text:0000000000400870\n.text:0000000000400875\n.text:0000000000400880\n.text:0000000000400881\n'
p48
tp49
sS'memcmp'
p50
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p51
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_00602050)();\u000a  return iVar1;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00602050]\n'
p53
S'ff 25 8a 18 20 00\n'
p54
S'.plt:00000000004007c0\n'
p55
tp56
sS'__errno_location'
p57
(S'\n__stdcall __errno_location()\n'
p58
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00602020)();\u000a  return piVar1;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00602020]\n'
p60
S'ff 25 ba 18 20 00\n'
p61
S'.plt:0000000000400760\n'
p62
tp63
sS'frame_dummy'
p64
(S'\n__stdcall frame_dummy()\n'
p65
V\u000a/* WARNING: Removing unreachable block (ram,0x0040090a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p66
S'MOV EDI,0x601e18\nCMP qword ptr [RDI],0x0\nJNZ 0x00400900\nJMP 0x00400890\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004008fb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400890\n'
p67
S'bf 18 1e 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p68
S'.text:00000000004008f0\n.text:00000000004008f5\n.text:00000000004008f9\n.text:00000000004008fb\n.text:0000000000400900\n.text:0000000000400905\n.text:0000000000400908\n.text:000000000040090a\n.text:000000000040090b\n.text:000000000040090e\n.text:0000000000400910\n.text:0000000000400911\n'
p69
tp70
sS'decodeutf8'
p71
(S'\n__stdcall decodeutf8(uchar * buf)\n'
p72
V\u000aulong decodeutf8(uchar *buf)\u000a\u000a{\u000a  byte bVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  ulong uVar4;\u000a  int in_ESI;\u000a  ulong uVar5;\u000a  ulong uVar6;\u000a  \u000a  uVar6 = 0xffffffff;\u000a  if (0 < in_ESI) {\u000a    bVar1 = *buf;\u000a    if (in_ESI == 1) {\u000a      if (-1 < (char)bVar1) {\u000a        uVar6 = (ulong)bVar1;\u000a      }\u000a    }\u000a    else {\u000a      iVar2 = high_ones();\u000a      if (iVar2 == in_ESI) {\u000a        uVar4 = (ulong)(0xffU >> ((byte)iVar2 & 0x1f) & (uint)bVar1);\u000a        lVar3 = 1;\u000a        do {\u000a          if ((buf[lVar3] & 0xc0) != 0x80) {\u000a            return 0xffffffff;\u000a          }\u000a          uVar5 = uVar4 << 6;\u000a          uVar4 = (ulong)((uint)buf[lVar3] & 0x3f) | uVar5;\u000a          lVar3 = lVar3 + 1;\u000a        } while (lVar3 < (long)in_ESI);\u000a        if (((uVar5 & 0xfffff800) != 0xd800) && ((uVar4 | 1) != 0xffff)) {\u000a          uVar6 = uVar4;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  return uVar6;\u000a}\u000a\u000a
p73
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14D,0xffffffff\nTEST EBP,EBP\nJLE 0x00400d1d\nMOVZX R15D,byte ptr [RBX]\nCMP EBP,0x1\nJNZ 0x00400cac\nTEST R15B,R15B\nCMOVNS R14,R15\nJMP 0x00400d1d\nMOV EDI,R15D\nCALL 0x00400dd0\nCMP EAX,EBP\nJNZ 0x00400d1d\nMOV EDX,0xff\nMOV ECX,EAX\nSHR EDX,CL\nAND EDX,R15D\nMOVSXD RAX,EBP\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVZX EDI,byte ptr [RBX + RCX*0x1]\nMOV ESI,EDI\nAND ESI,0xc0\nCMP ESI,0x80\nJNZ 0x00400d1d\nMOV RSI,RDX\nSHL RSI,0x6\nAND EDI,0x3f\nMOV RDX,RDI\nOR RDX,RSI\nINC RCX\nCMP RCX,RAX\nJL 0x00400cd0\nAND RSI,0xfffff800\nCMP RSI,0xd800\nJZ 0x00400d1d\nMOV RAX,RDX\nOR RAX,0x1\nCMP RAX,0xffff\nCMOVNZ R14,RDX\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p74
S'55\n41 57\n41 56\n53\n50\n89 f5\n48 89 fb\n41 be ff ff ff ff\n85 ed\n0f 8e 83 00 00 00\n44 0f b6 3b\n83 fd 01\n75 09\n45 84 ff\n4d 0f 49 f7\neb 71\n44 89 ff\ne8 1c 01 00 00\n39 e8\n75 65\nba ff 00 00 00\n89 c1\nd3 ea\n44 21 fa\n48 63 c5\nb9 01 00 00 00\n0f 1f 40 00\n0f b6 3c 0b\n89 fe\n81 e6 c0 00 00 00\n81 fe 80 00 00 00\n75 39\n48 89 d6\n48 c1 e6 06\n83 e7 3f\n48 89 fa\n48 09 f2\n48 ff c1\n48 39 c1\n7c d4\n48 81 e6 00 f8 ff ff\n48 81 fe 00 d8 00 00\n74 11\n48 89 d0\n48 83 c8 01\n48 3d ff ff 00 00\n4c 0f 45 f2\n4c 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p75
S'.text:0000000000400c80\n.text:0000000000400c81\n.text:0000000000400c83\n.text:0000000000400c85\n.text:0000000000400c86\n.text:0000000000400c87\n.text:0000000000400c89\n.text:0000000000400c8c\n.text:0000000000400c92\n.text:0000000000400c94\n.text:0000000000400c9a\n.text:0000000000400c9e\n.text:0000000000400ca1\n.text:0000000000400ca3\n.text:0000000000400ca6\n.text:0000000000400caa\n.text:0000000000400cac\n.text:0000000000400caf\n.text:0000000000400cb4\n.text:0000000000400cb6\n.text:0000000000400cb8\n.text:0000000000400cbd\n.text:0000000000400cbf\n.text:0000000000400cc1\n.text:0000000000400cc4\n.text:0000000000400cc7\n.text:0000000000400ccc\n.text:0000000000400cd0\n.text:0000000000400cd4\n.text:0000000000400cd6\n.text:0000000000400cdc\n.text:0000000000400ce2\n.text:0000000000400ce4\n.text:0000000000400ce7\n.text:0000000000400ceb\n.text:0000000000400cee\n.text:0000000000400cf1\n.text:0000000000400cf4\n.text:0000000000400cf7\n.text:0000000000400cfa\n.text:0000000000400cfc\n.text:0000000000400d03\n.text:0000000000400d0a\n.text:0000000000400d0c\n.text:0000000000400d0f\n.text:0000000000400d13\n.text:0000000000400d19\n.text:0000000000400d1d\n.text:0000000000400d20\n.text:0000000000400d24\n.text:0000000000400d25\n.text:0000000000400d27\n.text:0000000000400d29\n.text:0000000000400d2a\n'
p76
tp77
sS'fopen'
p78
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_00602068)();\u000a  return pFVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00602068]\n'
p81
S'ff 25 72 18 20 00\n'
p82
S'.plt:00000000004007f0\n'
p83
tp84
sS'register_tm_clones'
p85
(S'\n__stdcall register_tm_clones()\n'
p86
V\u000a/* WARNING: Removing unreachable block (ram,0x004008b3) */\u000a/* WARNING: Removing unreachable block (ram,0x004008bd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p87
S'MOV ESI,0x602090\nPUSH RBP\nSUB RSI,0x602090\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x004008c8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004008c8\nPOP RBP\nMOV EDI,0x602090\nJMP RAX\nPOP RBP\nRET\n'
p88
S'be 90 20 60 00\n55\n48 81 ee 90 20 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 90 20 60 00\nff e0\n5d\nc3\n'
p89
S'.text:0000000000400890\n.text:0000000000400895\n.text:0000000000400896\n.text:000000000040089d\n.text:00000000004008a1\n.text:00000000004008a4\n.text:00000000004008a7\n.text:00000000004008ab\n.text:00000000004008ae\n.text:00000000004008b1\n.text:00000000004008b3\n.text:00000000004008b8\n.text:00000000004008bb\n.text:00000000004008bd\n.text:00000000004008be\n.text:00000000004008c3\n.text:00000000004008c8\n.text:00000000004008c9\n'
p90
tp91
sS'is_utf8_byte_stream'
p92
(S'\n__stdcall is_utf8_byte_stream(FILE * file, char * filename)\n'
p93
V\u000aint is_utf8_byte_stream(FILE *file,char *filename)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  ulong u;\u000a  int in_EDX;\u000a  long lVar4;\u000a  long lVar5;\u000a  uchar buf [6];\u000a  uchar buf2 [6];\u000a  uchar local_4e [6];\u000a  long local_48;\u000a  char *local_40;\u000a  undefined local_36 [6];\u000a  \u000a  iVar3 = 0;\u000a  local_48 = 1;\u000a  local_40 = filename;\u000aLAB_00400b70:\u000a  lVar5 = 1;\u000a  lVar4 = 0;\u000a  do {\u000a    uVar1 = _IO_getc((_IO_FILE *)file);\u000a    if (((int)uVar1 < 0x80) || ((uVar1 & 0xc0) != 0x80)) {\u000a      if (0 < iVar3) {\u000a        u = decodeutf8(local_4e);\u000a        if (((u == 0xffffffff) || (iVar2 = encodeutf8(u), iVar3 != iVar2)) ||\u000a           (iVar3 = memcmp(local_4e,local_36,(long)iVar3), iVar3 != 0)) goto LAB_00400c36;\u000a        lVar5 = lVar5 + 1;\u000a      }\u000a      iVar3 = 0;\u000a      iVar2 = 1;\u000a      if (0x7f < (int)uVar1) goto LAB_00400c11;\u000a    }\u000a    else {\u000a      if (iVar3 == 6) goto LAB_00400c36;\u000a      iVar2 = iVar3 + 1;\u000aLAB_00400c11:\u000a      local_4e[(long)iVar3] = (uchar)uVar1;\u000a      iVar3 = iVar2;\u000a    }\u000a    if (uVar1 == 0xffffffff) {\u000a      if (iVar3 == 0) {\u000a        return 1;\u000a      }\u000aLAB_00400c36:\u000a      if (in_EDX == 0) {\u000a        printf("%s: line %lu, char %lu, byte offset %lu: invalid UTF-8 code\u005cn",local_40,local_48,\u000a               lVar5,lVar4);\u000a      }\u000a      return 0;\u000a    }\u000a    if (uVar1 == 10) break;\u000a    lVar4 = lVar4 + 1;\u000a  } while( true );\u000a  local_48 = local_48 + 1;\u000a  goto LAB_00400b70;\u000a}\u000a\u000a
p94
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV dword ptr [RSP + 0x4],EDX\nMOV qword ptr [RSP + 0x18],RSI\nMOV RBX,RDI\nXOR R12D,R12D\nMOV EAX,0x1\nMOV qword ptr [RSP + 0x10],RAX\nLEA R15,[RSP + 0x22]\nJMP 0x00400b70\nINC qword ptr [RSP + 0x10]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV R13D,0x1\nXOR EBP,EBP\nJMP 0x00400b83\nINC RBP\nMOV RDI,RBX\nCALL 0x004007e0\nMOV R14D,EAX\nCMP R14D,0x80\nJL 0x00400bc0\nMOV EAX,R14D\nAND EAX,0xc0\nCMP EAX,0x80\nJNZ 0x00400bc0\nCMP R12D,0x6\nJZ 0x00400c36\nLEA EAX,[R12 + 0x1]\nJMP 0x00400c11\nTEST R12D,R12D\nJLE 0x00400c03\nLEA RDI,[RSP + 0xa]\nMOV ESI,R12D\nCALL 0x00400c80\nMOV ECX,0xffffffff\nCMP RAX,RCX\nJZ 0x00400c36\nMOV RDI,RAX\nMOV RSI,R15\nCALL 0x00400d30\nCMP R12D,EAX\nJNZ 0x00400c36\nMOVSXD RDX,R12D\nLEA RDI,[RSP + 0xa]\nMOV RSI,R15\nCALL 0x004007c0\nTEST EAX,EAX\nJNZ 0x00400c36\nINC R13\nXOR R12D,R12D\nMOV EAX,0x1\nCMP R14D,0x7f\nJLE 0x00400c1c\nMOVSXD RCX,R12D\nMOV byte ptr [RSP + RCX*0x1 + 0xa],R14B\nMOV R12D,EAX\nCMP R14D,-0x1\nJZ 0x00400c31\nCMP R14D,0xa\nJNZ 0x00400b80\nJMP 0x00400b60\nTEST R12D,R12D\nJZ 0x00400c5f\nXOR EBX,EBX\nCMP dword ptr [RSP + 0x4],0x0\nJNZ 0x00400c64\nXOR EBX,EBX\nMOV EDI,0x400f18\nXOR EAX,EAX\nMOV RSI,qword ptr [RSP + 0x18]\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,R13\nMOV R8,RBP\nCALL 0x004007a0\nJMP 0x00400c64\nMOV EBX,0x1\nMOV EAX,EBX\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p95
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n89 54 24 04\n48 89 74 24 18\n48 89 fb\n45 31 e4\nb8 01 00 00 00\n48 89 44 24 10\n4c 8d 7c 24 22\neb 12\n48 ff 44 24 10\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 bd 01 00 00 00\n31 ed\neb 09\n48 ff c5\n48 89 df\ne8 55 fc ff ff\n41 89 c6\n41 81 fe 80 00 00 00\n7c 29\n44 89 f0\n25 c0 00 00 00\n3d 80 00 00 00\n75 1a\n41 83 fc 06\n0f 84 86 00 00 00\n41 8d 44 24 01\neb 5a\n45 85 e4\n7e 3e\n48 8d 7c 24 0a\n44 89 e6\ne8 ae 00 00 00\nb9 ff ff ff ff\n48 39 c8\n74 5a\n48 89 c7\n4c 89 fe\ne8 49 01 00 00\n41 39 c4\n75 4a\n49 63 d4\n48 8d 7c 24 0a\n4c 89 fe\ne8 c4 fb ff ff\n85 c0\n75 36\n49 ff c5\n45 31 e4\nb8 01 00 00 00\n41 83 fe 7f\n7e 0b\n49 63 cc\n44 88 74 0c 0a\n41 89 c4\n41 83 fe ff\n74 0f\n41 83 fe 0a\n0f 85 54 ff ff ff\ne9 2f ff ff ff\n45 85 e4\n74 29\n31 db\n83 7c 24 04 00\n75 25\n31 db\nbf 18 0f 40 00\n31 c0\n48 8b 74 24 18\n48 8b 54 24 10\n4c 89 e9\n49 89 e8\ne8 43 fb ff ff\neb 05\nbb 01 00 00 00\n89 d8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p96
S'.text:0000000000400b30\n.text:0000000000400b31\n.text:0000000000400b33\n.text:0000000000400b35\n.text:0000000000400b37\n.text:0000000000400b39\n.text:0000000000400b3a\n.text:0000000000400b3e\n.text:0000000000400b42\n.text:0000000000400b47\n.text:0000000000400b4a\n.text:0000000000400b4d\n.text:0000000000400b52\n.text:0000000000400b57\n.text:0000000000400b5c\n.text:0000000000400b60\n.text:0000000000400b65\n.text:0000000000400b70\n.text:0000000000400b76\n.text:0000000000400b78\n.text:0000000000400b80\n.text:0000000000400b83\n.text:0000000000400b86\n.text:0000000000400b8b\n.text:0000000000400b8e\n.text:0000000000400b95\n.text:0000000000400b97\n.text:0000000000400b9a\n.text:0000000000400b9f\n.text:0000000000400ba4\n.text:0000000000400ba6\n.text:0000000000400baa\n.text:0000000000400bb0\n.text:0000000000400bb5\n.text:0000000000400bc0\n.text:0000000000400bc3\n.text:0000000000400bc5\n.text:0000000000400bca\n.text:0000000000400bcd\n.text:0000000000400bd2\n.text:0000000000400bd7\n.text:0000000000400bda\n.text:0000000000400bdc\n.text:0000000000400bdf\n.text:0000000000400be2\n.text:0000000000400be7\n.text:0000000000400bea\n.text:0000000000400bec\n.text:0000000000400bef\n.text:0000000000400bf4\n.text:0000000000400bf7\n.text:0000000000400bfc\n.text:0000000000400bfe\n.text:0000000000400c00\n.text:0000000000400c03\n.text:0000000000400c06\n.text:0000000000400c0b\n.text:0000000000400c0f\n.text:0000000000400c11\n.text:0000000000400c14\n.text:0000000000400c19\n.text:0000000000400c1c\n.text:0000000000400c20\n.text:0000000000400c22\n.text:0000000000400c26\n.text:0000000000400c2c\n.text:0000000000400c31\n.text:0000000000400c34\n.text:0000000000400c36\n.text:0000000000400c38\n.text:0000000000400c3d\n.text:0000000000400c3f\n.text:0000000000400c41\n.text:0000000000400c46\n.text:0000000000400c48\n.text:0000000000400c4d\n.text:0000000000400c52\n.text:0000000000400c55\n.text:0000000000400c58\n.text:0000000000400c5d\n.text:0000000000400c5f\n.text:0000000000400c64\n.text:0000000000400c66\n.text:0000000000400c6a\n.text:0000000000400c6b\n.text:0000000000400c6d\n.text:0000000000400c6f\n.text:0000000000400c71\n.text:0000000000400c73\n.text:0000000000400c74\n'
p97
tp98
sS'getopt_long'
p99
(S'\n__stdcall getopt_long()\n'
p100
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_00602038)();\u000a  return;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00602038]\n'
p102
S'ff 25 a2 18 20 00\n'
p103
S'.plt:0000000000400790\n'
p104
tp105
sS'fclose'
p106
(S'\n__stdcall fclose(FILE * __stream)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_00602030)();\u000a  return iVar1;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00602030]\n'
p109
S'ff 25 aa 18 20 00\n'
p110
S'.plt:0000000000400780\n'
p111
tp112
sS'fprintf'
p113
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p114
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00602058)();\u000a  return iVar1;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x00602058]\n'
p116
S'ff 25 82 18 20 00\n'
p117
S'.plt:00000000004007d0\n'
p118
tp119
sS'strerror'
p120
(S'\n__stdcall strerror(int __errnum)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strerror(int __errnum)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strerror_00602078)();\u000a  return pcVar1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00602078]\n'
p123
S'ff 25 62 18 20 00\n'
p124
S'.plt:0000000000400810\n'
p125
tp126
sS'puts'
p127
(S'\n__stdcall puts(char * __s)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00602028)();\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00602028]\n'
p130
S'ff 25 b2 18 20 00\n'
p131
S'.plt:0000000000400770\n'
p132
tp133
sS'exit'
p134
(S'\n__stdcall exit(int __status)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00602070)();\u000a  return;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00602070]\n'
p137
S'ff 25 6a 18 20 00\n'
p138
S'.plt:0000000000400800\n'
p139
tp140
sS'__libc_csu_fini'
p141
(S'\n__stdcall __libc_csu_fini()\n'
p142
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p143
S'RET\n'
p144
S'f3 c3\n'
p145
S'.text:0000000000400e60\n'
p146
tp147
sS'encodeutf8'
p148
(S'\n__stdcall encodeutf8(ulong u)\n'
p149
V\u000aint encodeutf8(ulong u)\u000a\u000a{\u000a  anon_struct_0 tab [6];\u000a  int iVar1;\u000a  anon_struct_0 *paVar2;\u000a  long lVar3;\u000a  byte *in_RSI;\u000a  byte bVar4;\u000a  \u000a  bVar4 = (byte)u;\u000a  iVar1 = -1;\u000a  if (u < 0x80000000) {\u000a    paVar2 = (anon_struct_0 *)&ram0x00400fa0;\u000a    lVar3 = 0;\u000a    while (paVar2->max < u) {\u000a      lVar3 = lVar3 + 1;\u000a      paVar2 = paVar2 + 1;\u000a      if (5 < lVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("i < ntab","isutf8.c",0x43,\u000a                      "int encodeutf8(unsigned long, unsigned char *, size_t)");\u000a      }\u000a    }\u000a    if ((int)lVar3 != 0) {\u000a      lVar3 = (long)paVar2->nbytes;\u000a      do {\u000a        in_RSI[lVar3 + -1] = (byte)u & 0x3f | 0x80;\u000a        lVar3 = lVar3 + -1;\u000a        u = u >> 6;\u000a      } while (1 < lVar3);\u000a      bVar4 = (byte)u | (byte)(0xff >> (*(byte *)&paVar2->nbytes & 0x1f)) ^ 0xff;\u000a    }\u000a    *in_RSI = bVar4;\u000a    iVar1 = paVar2->nbytes;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p150
S'MOV EAX,0xffffffff\nCMP RDI,0x7fffffff\nJA 0x00400dc0\nMOV EAX,0x400fa0\nXOR ECX,ECX\nNOP dword ptr [RAX]\nCMP qword ptr [RAX + 0x8],RDI\nJNC 0x00400d7d\nINC RCX\nADD RAX,0x10\nCMP RCX,0x6\nJL 0x00400d50\nPUSH RAX\nMOV EDI,0x400f55\nMOV ESI,0x400f5e\nMOV EDX,0x43\nMOV ECX,0x400f67\nCALL 0x004007b0\nTEST ECX,ECX\nJZ 0x00400dbb\nMOVSXD RCX,dword ptr [RAX]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDX,EDI\nAND DL,0x3f\nOR DL,0x80\nMOV byte ptr [RSI + RCX*0x1 + -0x1],DL\nDEC RCX\nSHR RDI,0x6\nCMP RCX,0x1\nJG 0x00400d90\nMOV CL,byte ptr [RAX]\nMOV EDX,0xff\nSHR EDX,CL\nXOR EDX,0xff\nOR RDI,RDX\nMOV byte ptr [RSI],DIL\nMOV EAX,dword ptr [RAX]\nRET\n'
p151
S'b8 ff ff ff ff\n48 81 ff ff ff ff 7f\n0f 87 7e 00 00 00\nb8 a0 0f 40 00\n31 c9\n0f 1f 80 00 00 00 00\n48 39 78 08\n73 27\n48 ff c1\n48 83 c0 10\n48 83 f9 06\n7c ed\n50\nbf 55 0f 40 00\nbe 5e 0f 40 00\nba 43 00 00 00\nb9 67 0f 40 00\ne8 33 fa ff ff\n85 c9\n74 3a\n48 63 08\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 fa\n80 e2 3f\n80 ca 80\n88 54 0e ff\n48 ff c9\n48 c1 ef 06\n48 83 f9 01\n7f e7\n8a 08\nba ff 00 00 00\nd3 ea\n81 f2 ff 00 00 00\n48 09 d7\n40 88 3e\n8b 00\nc3\n'
p152
S'.text:0000000000400d30\n.text:0000000000400d35\n.text:0000000000400d3c\n.text:0000000000400d42\n.text:0000000000400d47\n.text:0000000000400d49\n.text:0000000000400d50\n.text:0000000000400d54\n.text:0000000000400d56\n.text:0000000000400d59\n.text:0000000000400d5d\n.text:0000000000400d61\n.text:0000000000400d63\n.text:0000000000400d64\n.text:0000000000400d69\n.text:0000000000400d6e\n.text:0000000000400d73\n.text:0000000000400d78\n.text:0000000000400d7d\n.text:0000000000400d7f\n.text:0000000000400d81\n.text:0000000000400d84\n.text:0000000000400d90\n.text:0000000000400d92\n.text:0000000000400d95\n.text:0000000000400d98\n.text:0000000000400d9c\n.text:0000000000400d9f\n.text:0000000000400da3\n.text:0000000000400da7\n.text:0000000000400da9\n.text:0000000000400dab\n.text:0000000000400db0\n.text:0000000000400db2\n.text:0000000000400db8\n.text:0000000000400dbb\n.text:0000000000400dbe\n.text:0000000000400dc0\n'
p153
tp154
sS'abort'
p155
(S'\n__stdcall abort()\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_00602018)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00602018]\n'
p158
S'ff 25 c2 18 20 00\n'
p159
S'.plt:0000000000400750\n'
p160
tp161
sS'__do_global_dtors_aux'
p162
(S'\n__stdcall __do_global_dtors_aux()\n'
p163
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p164
S'CMP byte ptr [0x006020c8],0x0\nJNZ 0x004008ea\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400850\nPOP RBP\nMOV byte ptr [0x006020c8],0x1\nRET\n'
p165
S'80 3d f1 17 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 de 17 20 00 01\nf3 c3\n'
p166
S'.text:00000000004008d0\n.text:00000000004008d7\n.text:00000000004008d9\n.text:00000000004008da\n.text:00000000004008dd\n.text:00000000004008e2\n.text:00000000004008e3\n.text:00000000004008ea\n'
p167
tp168
sS'_IO_getc'
p169
(S'\n__stdcall _IO_getc(_IO_FILE * __fp)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint _IO_getc(_IO_FILE *__fp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR__IO_getc_00602060)();\u000a  return iVar1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00602060]\n'
p172
S'ff 25 7a 18 20 00\n'
p173
S'.plt:00000000004007e0\n'
p174
tp175
sS'_fini'
p176
(S'\n__stdcall _fini()\n'
p177
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p178
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p179
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p180
S'.fini:0000000000400e64\n.fini:0000000000400e68\n.fini:0000000000400e6c\n'
p181
tp182
sS'high_ones'
p183
(S'\n__stdcall high_ones()\n'
p184
V\u000aint high_ones(void)\u000a\u000a{\u000a  int iVar1;\u000a  char in_DIL;\u000a  \u000a  iVar1 = 0;\u000a  if (in_DIL < 0) {\u000a    iVar1 = 0;\u000a    do {\u000a      iVar1 = iVar1 + 1;\u000a      in_DIL = in_DIL * 2;\u000a    } while (in_DIL < 0);\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p185
S'XOR EAX,EAX\nTEST DIL,DIL\nJNS 0x00400de9\nXOR EAX,EAX\nNOP dword ptr [RAX]\nINC EAX\nADD EDI,EDI\nTEST DIL,DIL\nJS 0x00400de0\nRET\n'
p186
S'31 c0\n40 84 ff\n79 12\n31 c0\n0f 1f 80 00 00 00 00\nff c0\n01 ff\n40 84 ff\n78 f7\nc3\n'
p187
S'.text:0000000000400dd0\n.text:0000000000400dd2\n.text:0000000000400dd5\n.text:0000000000400dd7\n.text:0000000000400dd9\n.text:0000000000400de0\n.text:0000000000400de2\n.text:0000000000400de4\n.text:0000000000400de7\n.text:0000000000400de9\n'
p188
tp189
sS'FUN_00400740'
p190
(S'\n__stdcall FUN_00400740()\n'
p191
V\u000avoid FUN_00400740(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00602010)();\u000a  return;\u000a}\u000a\u000a
p192
S'PUSH qword ptr [0x00602008]\nJMP qword ptr [0x00602010]\n'
p193
S'ff 35 c2 18 20 00\nff 25 c4 18 20 00\n'
p194
S'.plt:0000000000400740\n.plt:0000000000400746\n'
p195
tp196
sS'__assert_fail'
p197
(S'\n__stdcall __assert_fail(char * __assertion, char * __file, uint __line, char * __function)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\u000a\u000a{\u000a  (*(code *)PTR___assert_fail_00602048)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x00602048]\n'
p200
S'ff 25 92 18 20 00\n'
p201
S'.plt:00000000004007b0\n'
p202
tp203
s.