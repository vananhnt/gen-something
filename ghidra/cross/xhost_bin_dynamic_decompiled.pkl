(dp0
S'XmuPrintDefaultErrorMessage'
p1
(S'\n__stdcall XmuPrintDefaultErrorMessage()\n'
p2
V\u000avoid XmuPrintDefaultErrorMessage(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuPrintDefaultErrorMessage_00603020)();\u000a  return;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x00603020]\n'
p4
S'ff 25 9a 21 20 00\n'
p5
S'.plt:0000000000400e80\n'
p6
tp7
sS'__libc_csu_init'
p8
(S'\n__stdcall __libc_csu_init()\n'
p9
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x602de8]\nPUSH RBP\nLEA RBP,[0x602df0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400e40\nTEST RBP,RBP\nJZ 0x00401fc6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00401fb0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p11
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 66 0e 20 00\n55\n48 8d 2d 66 0e 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 9f ee ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p12
S'.text:0000000000401f70\n.text:0000000000401f72\n.text:0000000000401f74\n.text:0000000000401f77\n.text:0000000000401f79\n.text:0000000000401f7b\n.text:0000000000401f82\n.text:0000000000401f83\n.text:0000000000401f8a\n.text:0000000000401f8b\n.text:0000000000401f8e\n.text:0000000000401f91\n.text:0000000000401f94\n.text:0000000000401f98\n.text:0000000000401f9c\n.text:0000000000401fa1\n.text:0000000000401fa4\n.text:0000000000401fa6\n.text:0000000000401fa8\n.text:0000000000401fb0\n.text:0000000000401fb3\n.text:0000000000401fb6\n.text:0000000000401fb9\n.text:0000000000401fbd\n.text:0000000000401fc1\n.text:0000000000401fc4\n.text:0000000000401fc6\n.text:0000000000401fca\n.text:0000000000401fcb\n.text:0000000000401fcc\n.text:0000000000401fce\n.text:0000000000401fd0\n.text:0000000000401fd2\n.text:0000000000401fd4\n'
p13
tp14
sS'_init'
p15
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p16
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00602ff8;\u000a  if (PTR___gmon_start___00602ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00602ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p17
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00602ff8]\nTEST RAX,RAX\nJZ 0x00400e52\nCALL RAX\nADD RSP,0x8\nRET\n'
p18
S'48 83 ec 08\n48 8b 05 ad 21 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p19
S'.init:0000000000400e40\n.init:0000000000400e44\n.init:0000000000400e4b\n.init:0000000000400e4e\n.init:0000000000400e50\n.init:0000000000400e52\n.init:0000000000400e56\n'
p20
tp21
sS'strchr'
p22
(S'\n__stdcall strchr(char * __s, int __c)\n'
p23
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_00603078)();\u000a  return pcVar1;\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x00603078]\n'
p25
S'ff 25 42 21 20 00\n'
p26
S'.plt:0000000000400f30\n'
p27
tp28
sS'main'
p29
(S'\n__stdcall main(char * * argv)\n'
p30
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint main(char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  FILE *__stream;\u000a  int __status;\u000a  int iVar2;\u000a  Display *dpy;\u000a  XHostAddress *__ptr;\u000a  char *name;\u000a  undefined8 uVar3;\u000a  long lVar4;\u000a  int iVar5;\u000a  XHostAddress *ha;\u000a  char **in_RSI;\u000a  undefined8 local_38;\u000a  \u000a  iVar1 = (int)argv;\u000a  local_38 = 0;\u000a  ProgramName = *in_RSI;\u000a  if ((iVar1 == 2) && (__status = strcmp(in_RSI[1],"-help"), __status == 0)) {\u000a    fprintf(stderr,"usage: %s [[+-]hostname ...]\u005cn",*in_RSI);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  dpy = (Display *)XOpenDisplay(0);\u000a  name = ProgramName;\u000a  __stream = stderr;\u000a  if (dpy == (Display *)0x0) {\u000a    uVar3 = XDisplayName(0);\u000a    fprintf(__stream,"%s:  unable to open display \u005c"%s\u005c"\u005cn",name,uVar3);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  XSetErrorHandler(local_xerror);\u000a  if (iVar1 != 1) {\u000a    if (iVar1 < 2) {\u000a      __status = 0;\u000a    }\u000a    else {\u000a      iVar5 = 1;\u000a      __status = 0;\u000a      do {\u000a        name = in_RSI[(long)iVar5];\u000a        if (*name == '+') {\u000a          iVar2 = iVar5 + 1;\u000a          if ((iVar2 != iVar1) || (name[1] != 0)) {\u000a            if (name[1] == 0) {\u000a              name = in_RSI[(long)iVar2];\u000a              iVar5 = iVar2;\u000a            }\u000a            else {\u000a              name = name + 1;\u000a            }\u000a            goto LAB_00401365;\u000a          }\u000a          puts("access control disabled, clients can connect from any host");\u000a          XDisableAccessControl(dpy);\u000a        }\u000a        else {\u000a          if (*name == '-') {\u000a            iVar2 = iVar5 + 1;\u000a            if ((iVar2 == iVar1) && (name[1] == 0)) {\u000a              puts("access control enabled, only authorized clients can connect");\u000a              XEnableAccessControl(dpy);\u000a              goto LAB_00401378;\u000a            }\u000a            if (name[1] == 0) {\u000a              name = in_RSI[(long)iVar2];\u000a              iVar5 = iVar2;\u000a            }\u000a            else {\u000a              name = name + 1;\u000a            }\u000a          }\u000aLAB_00401365:\u000a          iVar2 = change_host(dpy,name);\u000a          if (iVar2 == 0) {\u000a            fprintf(stderr,"%s:  bad hostname \u005c"%s\u005c"\u005cn",ProgramName);\u000a            __status = __status + 1;\u000a          }\u000a        }\u000aLAB_00401378:\u000a        iVar5 = iVar5 + 1;\u000a      } while (iVar5 < iVar1);\u000a    }\u000a    XCloseDisplay();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(__status);\u000a  }\u000a  sethostent(1);\u000a  __ptr = (XHostAddress *)XListHosts(dpy,&local_38,(long)&local_38 + 4);\u000a  if (local_38._4_4_ == 0) {\u000a    name = "access control disabled, clients can connect from any host";\u000a  }\u000a  else {\u000a    name = "access control enabled, only authorized clients can connect";\u000a  }\u000a  puts(name);\u000a  if ((int)local_38 != 0) {\u000a    if (0 < (int)local_38) {\u000a      lVar4 = 0;\u000a      ha = __ptr;\u000a      do {\u000a        name = get_hostname(ha);\u000a        iVar1 = ha->family;\u000a        if (name == (char *)0x0) {\u000a          printf("<unknown address in family %d>");\u000a          if (nameserver_timedout != 0) goto LAB_0040147f;\u000aLAB_004014a0:\u000a          putchar(10);\u000a        }\u000a        else {\u000a          switch(iVar1) {\u000a          case 0:\u000a            name = "INET:";\u000a            break;\u000a          case 1:\u000a            name = "DNET:";\u000a            break;\u000a          case 2:\u000a          case 3:\u000a          case 4:\u000aswitchD_004013f2_caseD_2:\u000a            printf("<unknown family type %d>:");\u000a            goto LAB_00401467;\u000a          case 5:\u000a            name = "SI:";\u000a            break;\u000a          case 6:\u000a            name = "INET6:";\u000a            break;\u000a          default:\u000a            if (iVar1 == 0xfc) {\u000a              name = "LOCAL:";\u000a            }\u000a            else {\u000a              if (iVar1 == 0xfd) {\u000a                name = "KRB:";\u000a              }\u000a              else {\u000a                if (iVar1 != 0xfe) goto switchD_004013f2_caseD_2;\u000a                name = "NIS:";\u000a              }\u000a            }\u000a          }\u000a          printf(name);\u000aLAB_00401467:\u000a          printf("%s");\u000a          if (nameserver_timedout == 0) goto LAB_004014a0;\u000aLAB_0040147f:\u000a          printf("\u005ct(no nameserver response within %d seconds)\u005cn");\u000a          nameserver_timedout = 0;\u000a        }\u000a        lVar4 = lVar4 + 1;\u000a        ha = ha + 1;\u000a      } while (lVar4 < (long)(int)local_38);\u000a    }\u000a    free(__ptr);\u000a    endhostent();\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p31
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,RSI\nMOV R13D,EDI\nMOV dword ptr [RSP],0x0\nMOV dword ptr [RSP + 0x4],0x0\nMOV RAX,qword ptr [R12]\nMOV qword ptr [0x00603190],RAX\nCMP R13D,0x2\nJNZ 0x00401238\nMOV RDI,qword ptr [R12 + 0x8]\nMOV ESI,0x402068\nCALL 0x00400fb0\nTEST EAX,EAX\nJZ 0x00401506\nXOR EDI,EDI\nCALL 0x00400fc0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004014d2\nMOV EDI,0x401530\nCALL 0x00401020\nCMP R13D,0x1\nJNZ 0x0040128d\nMOV EDI,0x1\nCALL 0x00401080\nMOV RSI,RSP\nLEA RDX,[RSP + 0x4]\nMOV RDI,R14\nCALL 0x00400f20\nMOV R14,RAX\nCMP dword ptr [RSP + 0x4],0x0\nJZ 0x00401393\nMOV EDI,0x402480\nJMP 0x00401398\nCMP R13D,0x2\nJL 0x00401527\nMOV EBP,0x1\nXOR R15D,R15D\nJMP 0x004012d0\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nMOV ESI,0x4021b8\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x00400fe0\nINC R15D\nJMP 0x00401378\nMOVSXD RAX,EBP\nMOV RBX,qword ptr [R12 + RAX*0x8]\nMOVZX EAX,byte ptr [RBX]\nCMP AL,0x2b\nJZ 0x00401310\nCMP AL,0x2d\nJNZ 0x00401360\nMOVZX ECX,byte ptr [RBX + 0x1]\nLEA EAX,[RBP + 0x1]\nCMP EAX,R13D\nJNZ 0x00401334\nTEST CL,CL\nJNZ 0x00401334\nMOV EDI,0x402480\nCALL 0x00400ed0\nMOV RDI,R14\nCALL 0x00401010\nJMP 0x00401378\nMOVZX ECX,byte ptr [RBX + 0x1]\nLEA EAX,[RBP + 0x1]\nCMP EAX,R13D\nJNZ 0x0040133f\nTEST CL,CL\nJNZ 0x0040133f\nMOV EDI,0x402440\nCALL 0x00400ed0\nMOV RDI,R14\nCALL 0x00401070\nJMP 0x00401378\nTEST CL,CL\nJZ 0x00401348\nINC RBX\nXOR EDX,EDX\nJMP 0x00401365\nTEST CL,CL\nJZ 0x00401355\nINC RBX\nJMP 0x00401360\nMOVSXD RCX,EAX\nMOV RBX,qword ptr [R12 + RCX*0x8]\nMOV EBP,EAX\nXOR EDX,EDX\nJMP 0x00401365\nMOVSXD RCX,EAX\nMOV RBX,qword ptr [R12 + RCX*0x8]\nMOV EBP,EAX\nNOP\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401880\nTEST EAX,EAX\nJZ 0x004012a1\nINC EBP\nCMP EBP,R13D\nJL 0x004012d0\nMOV RDI,R14\nCALL 0x004010b0\nMOV EDI,R15D\nCALL 0x00401090\nMOV EDI,0x402440\nCALL 0x00400ed0\nCMP dword ptr [RSP],0x0\nJZ 0x004014cb\nCMP dword ptr [RSP],0x0\nJLE 0x004014be\nMOV RBP,R14\nXOR EBX,EBX\nJMP 0x004013d0\nMOV EDI,0x40214f\nXOR EAX,EAX\nCALL 0x00400f40\nJMP 0x00401467\nMOV RDI,RBP\nCALL 0x004015a0\nMOV R15,RAX\nTEST R15,R15\nMOV ESI,dword ptr [RBP]\nJZ 0x00401400\nCMP ESI,0xfb\nJG 0x00401420\nCMP ESI,0x6\nJA 0x004013b8\nMOV EAX,ESI\nJMP qword ptr [0x402000 + RAX*0x8]\nMOV EDI,0x402127\nJMP 0x00401460\nMOV EDI,0x40216c\nXOR EAX,EAX\nCALL 0x00400f40\nCMP dword ptr [0x00603198],0x0\nJNZ 0x0040147f\nJMP 0x004014a0\nCMP ESI,0xfc\nJZ 0x00401454\nCMP ESI,0xfd\nJZ 0x0040145b\nCMP ESI,0xfe\nJNZ 0x004013b8\nMOV EDI,0x40213a\nJMP 0x00401460\nMOV EDI,0x40214b\nJMP 0x00401460\nMOV EDI,0x40212d\nJMP 0x00401460\nMOV EDI,0x402134\nJMP 0x00401460\nMOV EDI,0x402144\nJMP 0x00401460\nMOV EDI,0x40213f\nXOR EAX,EAX\nCALL 0x00400f40\nMOV EDI,0x402169\nXOR EAX,EAX\nMOV RSI,R15\nCALL 0x00400f40\nCMP dword ptr [0x00603198],0x0\nJZ 0x004014a0\nMOV EDI,0x40218b\nMOV ESI,0x5\nXOR EAX,EAX\nCALL 0x00400f40\nMOV dword ptr [0x00603198],0x0\nJMP 0x004014aa\nMOV EDI,0xa\nCALL 0x00400ea0\nINC RBX\nMOVSXD RAX,dword ptr [RSP]\nADD RBP,0x10\nCMP RBX,RAX\nJL 0x004013d0\nMOV RDI,R14\nCALL 0x00400e90\nCALL 0x004010c0\nXOR EDI,EDI\nCALL 0x00401090\nMOV RBX,qword ptr [0x00603180]\nMOV RBP,qword ptr [0x00603190]\nXOR EDI,EDI\nCALL 0x00401040\nMOV RCX,RAX\nMOV ESI,0x40208c\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,RBP\nCALL 0x00400fe0\nMOV EDI,0x1\nCALL 0x00401090\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [R12]\nMOV ESI,0x40206e\nXOR EAX,EAX\nCALL 0x00400fe0\nMOV EDI,0x1\nCALL 0x00401090\nXOR R15D,R15D\nJMP 0x00401383\n'
p32
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f4\n41 89 fd\nc7 04 24 00 00 00 00\nc7 44 24 04 00 00 00 00\n49 8b 04 24\n48 89 05 75 1f 20 00\n41 83 fd 02\n75 17\n49 8b 7c 24 08\nbe 68 20 40 00\ne8 80 fd ff ff\n85 c0\n0f 84 ce 02 00 00\n31 ff\ne8 81 fd ff ff\n49 89 c6\n4d 85 f6\n0f 84 87 02 00 00\nbf 30 15 40 00\ne8 cb fd ff ff\n41 83 fd 01\n75 32\nbf 01 00 00 00\ne8 1b fe ff ff\n48 89 e6\n48 8d 54 24 04\n4c 89 f7\ne8 ab fc ff ff\n49 89 c6\n83 7c 24 04 00\n0f 84 10 01 00 00\nbf 80 24 40 00\ne9 0b 01 00 00\n41 83 fd 02\n0f 8c 90 02 00 00\nbd 01 00 00 00\n45 31 ff\neb 2f\n48 8b 3d d8 1e 20 00\n48 8b 15 e1 1e 20 00\nbe b8 21 40 00\n31 c0\n48 89 d9\ne8 22 fd ff ff\n41 ff c7\ne9 b2 00 00 00\n48 63 c5\n49 8b 1c c4\n0f b6 03\n3c 2b\n74 32\n3c 2d\n75 7e\n0f b6 4b 01\n8d 45 01\n44 39 e8\n75 46\n84 c9\n75 42\nbf 80 24 40 00\ne8 d4 fb ff ff\n4c 89 f7\ne8 0c fd ff ff\neb 72\n0f b6 4b 01\n8d 45 01\n44 39 e8\n75 23\n84 c9\n75 1f\nbf 40 24 40 00\ne8 a6 fb ff ff\n4c 89 f7\ne8 3e fd ff ff\neb 44\n84 c9\n74 10\n48 ff c3\n31 d2\neb 26\n84 c9\n74 12\n48 ff c3\neb 18\n48 63 c8\n49 8b 1c cc\n89 c5\n31 d2\neb 10\n48 63 c8\n49 8b 1c cc\n89 c5\n66 90\nba 01 00 00 00\n4c 89 f7\n48 89 de\ne8 10 05 00 00\n85 c0\n0f 84 29 ff ff ff\nff c5\n44 39 ed\n0f 8c 4d ff ff ff\n4c 89 f7\ne8 25 fd ff ff\n44 89 ff\ne8 fd fc ff ff\nbf 40 24 40 00\ne8 33 fb ff ff\n83 3c 24 00\n0f 84 24 01 00 00\n83 3c 24 00\n0f 8e 0d 01 00 00\n4c 89 f5\n31 db\neb 18\nbf 4f 21 40 00\n31 c0\ne8 7c fb ff ff\ne9 9e 00 00 00\n48 89 ef\ne8 c8 01 00 00\n49 89 c7\n4d 85 ff\n8b 75 00\n74 1d\n81 fe fb 00 00 00\n7f 35\n83 fe 06\n77 c8\n89 f0\nff 24 c5 00 20 40 00\nbf 27 21 40 00\neb 60\nbf 6c 21 40 00\n31 c0\ne8 34 fb ff ff\n83 3d 85 1d 20 00 00\n75 6a\ne9 86 00 00 00\n81 fe fc 00 00 00\n74 2c\n81 fe fd 00 00 00\n74 2b\n81 fe fe 00 00 00\n75 80\nbf 3a 21 40 00\neb 21\nbf 4b 21 40 00\neb 1a\nbf 2d 21 40 00\neb 13\nbf 34 21 40 00\neb 0c\nbf 44 21 40 00\neb 05\nbf 3f 21 40 00\n31 c0\ne8 d9 fa ff ff\nbf 69 21 40 00\n31 c0\n4c 89 fe\ne8 ca fa ff ff\n83 3d 1b 1d 20 00 00\n74 21\nbf 8b 21 40 00\nbe 05 00 00 00\n31 c0\ne8 b0 fa ff ff\nc7 05 fe 1c 20 00 00 00 00 00\neb 0e\nbf 0a 00 00 00\ne8 f6 f9 ff ff\n48 ff c3\n48 63 04 24\n48 83 c5 10\n48 39 c3\n0f 8c 12 ff ff ff\n4c 89 f7\ne8 ca f9 ff ff\ne8 f5 fb ff ff\n31 ff\ne8 be fb ff ff\n48 8b 1d a7 1c 20 00\n48 8b 2d b0 1c 20 00\n31 ff\ne8 59 fb ff ff\n48 89 c1\nbe 8c 20 40 00\n31 c0\n48 89 df\n48 89 ea\ne8 e4 fa ff ff\nbf 01 00 00 00\ne8 8a fb ff ff\n48 8b 3d 73 1c 20 00\n49 8b 14 24\nbe 6e 20 40 00\n31 c0\ne8 c3 fa ff ff\nbf 01 00 00 00\ne8 69 fb ff ff\n45 31 ff\ne9 54 fe ff ff\n'
p33
S'.text:00000000004011f0\n.text:00000000004011f1\n.text:00000000004011f3\n.text:00000000004011f5\n.text:00000000004011f7\n.text:00000000004011f9\n.text:00000000004011fa\n.text:00000000004011fb\n.text:00000000004011fe\n.text:0000000000401201\n.text:0000000000401208\n.text:0000000000401210\n.text:0000000000401214\n.text:000000000040121b\n.text:000000000040121f\n.text:0000000000401221\n.text:0000000000401226\n.text:000000000040122b\n.text:0000000000401230\n.text:0000000000401232\n.text:0000000000401238\n.text:000000000040123a\n.text:000000000040123f\n.text:0000000000401242\n.text:0000000000401245\n.text:000000000040124b\n.text:0000000000401250\n.text:0000000000401255\n.text:0000000000401259\n.text:000000000040125b\n.text:0000000000401260\n.text:0000000000401265\n.text:0000000000401268\n.text:000000000040126d\n.text:0000000000401270\n.text:0000000000401275\n.text:0000000000401278\n.text:000000000040127d\n.text:0000000000401283\n.text:0000000000401288\n.text:000000000040128d\n.text:0000000000401291\n.text:0000000000401297\n.text:000000000040129c\n.text:000000000040129f\n.text:00000000004012a1\n.text:00000000004012a8\n.text:00000000004012af\n.text:00000000004012b4\n.text:00000000004012b6\n.text:00000000004012b9\n.text:00000000004012be\n.text:00000000004012c1\n.text:00000000004012d0\n.text:00000000004012d3\n.text:00000000004012d7\n.text:00000000004012da\n.text:00000000004012dc\n.text:00000000004012de\n.text:00000000004012e0\n.text:00000000004012e2\n.text:00000000004012e6\n.text:00000000004012e9\n.text:00000000004012ec\n.text:00000000004012ee\n.text:00000000004012f0\n.text:00000000004012f2\n.text:00000000004012f7\n.text:00000000004012fc\n.text:00000000004012ff\n.text:0000000000401304\n.text:0000000000401310\n.text:0000000000401314\n.text:0000000000401317\n.text:000000000040131a\n.text:000000000040131c\n.text:000000000040131e\n.text:0000000000401320\n.text:0000000000401325\n.text:000000000040132a\n.text:000000000040132d\n.text:0000000000401332\n.text:0000000000401334\n.text:0000000000401336\n.text:0000000000401338\n.text:000000000040133b\n.text:000000000040133d\n.text:000000000040133f\n.text:0000000000401341\n.text:0000000000401343\n.text:0000000000401346\n.text:0000000000401348\n.text:000000000040134b\n.text:000000000040134f\n.text:0000000000401351\n.text:0000000000401353\n.text:0000000000401355\n.text:0000000000401358\n.text:000000000040135c\n.text:000000000040135e\n.text:0000000000401360\n.text:0000000000401365\n.text:0000000000401368\n.text:000000000040136b\n.text:0000000000401370\n.text:0000000000401372\n.text:0000000000401378\n.text:000000000040137a\n.text:000000000040137d\n.text:0000000000401383\n.text:0000000000401386\n.text:000000000040138b\n.text:000000000040138e\n.text:0000000000401393\n.text:0000000000401398\n.text:000000000040139d\n.text:00000000004013a1\n.text:00000000004013a7\n.text:00000000004013ab\n.text:00000000004013b1\n.text:00000000004013b4\n.text:00000000004013b6\n.text:00000000004013b8\n.text:00000000004013bd\n.text:00000000004013bf\n.text:00000000004013c4\n.text:00000000004013d0\n.text:00000000004013d3\n.text:00000000004013d8\n.text:00000000004013db\n.text:00000000004013de\n.text:00000000004013e1\n.text:00000000004013e3\n.text:00000000004013e9\n.text:00000000004013eb\n.text:00000000004013ee\n.text:00000000004013f0\n.text:00000000004013f2\n.text:00000000004013f9\n.text:00000000004013fe\n.text:0000000000401400\n.text:0000000000401405\n.text:0000000000401407\n.text:000000000040140c\n.text:0000000000401413\n.text:0000000000401415\n.text:0000000000401420\n.text:0000000000401426\n.text:0000000000401428\n.text:000000000040142e\n.text:0000000000401430\n.text:0000000000401436\n.text:0000000000401438\n.text:000000000040143d\n.text:000000000040143f\n.text:0000000000401444\n.text:0000000000401446\n.text:000000000040144b\n.text:000000000040144d\n.text:0000000000401452\n.text:0000000000401454\n.text:0000000000401459\n.text:000000000040145b\n.text:0000000000401460\n.text:0000000000401462\n.text:0000000000401467\n.text:000000000040146c\n.text:000000000040146e\n.text:0000000000401471\n.text:0000000000401476\n.text:000000000040147d\n.text:000000000040147f\n.text:0000000000401484\n.text:0000000000401489\n.text:000000000040148b\n.text:0000000000401490\n.text:000000000040149a\n.text:00000000004014a0\n.text:00000000004014a5\n.text:00000000004014aa\n.text:00000000004014ad\n.text:00000000004014b1\n.text:00000000004014b5\n.text:00000000004014b8\n.text:00000000004014be\n.text:00000000004014c1\n.text:00000000004014c6\n.text:00000000004014cb\n.text:00000000004014cd\n.text:00000000004014d2\n.text:00000000004014d9\n.text:00000000004014e0\n.text:00000000004014e2\n.text:00000000004014e7\n.text:00000000004014ea\n.text:00000000004014ef\n.text:00000000004014f1\n.text:00000000004014f4\n.text:00000000004014f7\n.text:00000000004014fc\n.text:0000000000401501\n.text:0000000000401506\n.text:000000000040150d\n.text:0000000000401511\n.text:0000000000401516\n.text:0000000000401518\n.text:000000000040151d\n.text:0000000000401522\n.text:0000000000401527\n.text:000000000040152a\n'
p34
tp35
sS'change_host'
p36
(S'\n__stdcall change_host(Display * dpy, char * name)\n'
p37
V\u000aint change_host(Display *dpy,char *name)\u000a\u000a{\u000a  in_addr addr;\u000a  in6_addr addr6;\u000a  char username [255];\u000a  char domainname [128];\u000a  int iVar1;\u000a  int iVar2;\u000a  size_t sVar3;\u000a  __int32_t **pp_Var4;\u000a  char *__s2;\u000a  passwd *ppVar5;\u000a  size_t sVar6;\u000a  int in_EDX;\u000a  char *__format;\u000a  long lVar7;\u000a  addrinfo *paVar8;\u000a  char *pcVar9;\u000a  bool bVar10;\u000a  char ad [46];\u000a  int local_88;\u000a  undefined4 local_84;\u000a  in6_addr *local_80;\u000a  int local_74;\u000a  addrinfo *local_70;\u000a  uint local_68;\u000a  undefined4 local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  \u000a  local_74 = in_EDX;\u000a  sVar3 = strlen(name);\u000a  __s2 = (char *)malloc(sVar3 + 1);\u000a  if (__s2 == (char *)0x0) {\u000a    fprintf(stderr,"%s: malloc bombed in change_host\u005cn",ProgramName);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  if (sVar3 != 0) {\u000a    pp_Var4 = __ctype_tolower_loc();\u000a    sVar6 = sVar3;\u000a    __format = __s2;\u000a    pcVar9 = name;\u000a    do {\u000a      *__format = *(char *)(*pp_Var4 + (long)*pcVar9);\u000a      pcVar9 = pcVar9 + 1;\u000a      __format = __format + 1;\u000a      sVar6 = sVar6 - 1;\u000a    } while (sVar6 != 0);\u000a  }\u000a  __s2[sVar3] = 0;\u000a  lVar7 = 5;\u000a  iVar1 = strncmp("inet:",__s2,5);\u000a  if (iVar1 == 0) {\u000a    iVar1 = 0;\u000aLAB_004019e7:\u000a    name = name + lVar7;\u000a    free(__s2);\u000aLAB_004019f2:\u000a    __s2 = strchr(name,0x40);\u000a    if (__s2 == (char *)0x0) {\u000a      if (iVar1 == 0xffff) {\u000aLAB_00401aa0:\u000a        addr = inet_addr(name);\u000a        if (addr != 0xffffffff) {\u000a          local_88 = 0;\u000a          local_84 = 4;\u000a          local_80 = (in6_addr *)0x60319c;\u000a          goto LAB_00401bcb;\u000a        }\u000a        if ((iVar1 == 0xffff) || (iVar1 == 6)) goto LAB_00401b9c;\u000a      }\u000a      else {\u000a        if (iVar1 == 6) {\u000aLAB_00401b9c:\u000a          iVar2 = inet_pton(10,name,(void *)0x6031a0);\u000a          if (iVar2 == 1) {\u000a            local_88 = 6;\u000a            local_84 = 0x10;\u000a            local_80 = (in6_addr *)&ram0x006031a0;\u000aLAB_00401bcb:\u000a            if (local_74 == 0) {\u000a              XRemoveHost(dpy,&local_88);\u000a              __s2 = "being removed from access control list";\u000a            }\u000a            else {\u000a              XAddHost();\u000a              __s2 = "being added to access control list";\u000a            }\u000a            printf("%s %s\u005cn",name,__s2);\u000a            return 1;\u000a          }\u000a        }\u000a        else {\u000a          if (iVar1 == 0) goto LAB_00401aa0;\u000a        }\u000a      }\u000a      iVar2 = getaddrinfo(name,(char *)0x0,(addrinfo *)0x0,&local_70);\u000a      if (iVar2 != 0) {\u000a        return 0;\u000a      }\u000a      if (local_70 != (addrinfo *)0x0) {\u000a        bVar10 = false;\u000a        paVar8 = local_70;\u000a        do {\u000a          if ((iVar1 != 6 && paVar8->ai_family == 2) || (iVar1 != 0 && paVar8->ai_family == 10)) {\u000a            iVar2 = paVar8->ai_family;\u000a            local_88 = XFamily();\u000a            bVar10 = iVar2 != 10;\u000a            local_80 = (in6_addr *)(paVar8->ai_addr->sa_data + 6);\u000a            if (bVar10) {\u000a              local_80 = (in6_addr *)(paVar8->ai_addr->sa_data + 2);\u000a            }\u000a            local_84 = 4;\u000a            if (!bVar10) {\u000a              local_84 = 0x10;\u000a            }\u000a            inet_ntop(paVar8->ai_family,local_80,(char *)&local_68,0x2e);\u000a            if (local_74 == 0) {\u000a              XRemoveHost(dpy,&local_88);\u000a            }\u000a            else {\u000a              XAddHost();\u000a            }\u000a            bVar10 = true;\u000a          }\u000a          paVar8 = paVar8->ai_next;\u000a        } while (paVar8 != (addrinfo *)0x0);\u000a        if (bVar10) {\u000a          __s2 = "being removed from access control list";\u000a          if (local_74 != 0) {\u000a            __s2 = "being added to access control list";\u000a          }\u000a          printf("%s %s\u005cn",name,__s2);\u000a          goto LAB_00401cde;\u000a        }\u000a      }\u000a      __s2 = "";\u000a      if (iVar1 == 0) {\u000a        __s2 = "inet ";\u000a      }\u000a      __format = "inet6 ";\u000a      if (iVar1 != 6) {\u000a        __format = __s2;\u000a      }\u000a      fprintf(stderr,"%s: unable to get %saddress for \u005c"%s\u005c"\u005cn",ProgramName,__format,name);\u000aLAB_00401cde:\u000a      freeaddrinfo(local_70);\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    lVar7 = 6;\u000a    iVar1 = strncmp("inet6:",__s2,6);\u000a    if (iVar1 == 0) {\u000a      iVar1 = 6;\u000a      goto LAB_004019e7;\u000a    }\u000a    iVar1 = strncmp("dnet:",__s2,5);\u000a    if (iVar1 == 0) {\u000a      __format = "%s: not compiled for DECnet\u005cn";\u000aLAB_00401e35:\u000a      fprintf(stderr,__format,ProgramName);\u000aLAB_00401e3c:\u000a      free(__s2);\u000a      return 0;\u000a    }\u000a    iVar1 = strncmp("nis:",__s2,4);\u000a    if (iVar1 != 0) {\u000a      iVar1 = strncmp("krb:",__s2,4);\u000a      if (iVar1 == 0) {\u000a        __format = "%s: not compiled for Kerberos 5\u005cn";\u000a        goto LAB_00401e35;\u000a      }\u000a      iVar1 = strncmp("local:",__s2,6);\u000a      if (iVar1 == 0) {\u000a        free(__s2);\u000a        local_68 = local_68 & 0xffffff00;\u000a        local_84 = 0;\u000a        local_80 = (in6_addr *)&local_68;\u000a        local_88 = 0xfc;\u000a        if (local_74 == 0) {\u000a          XRemoveHost(dpy,&local_88);\u000a        }\u000a        else {\u000a          XAddHost(dpy,&local_88);\u000a        }\u000a        __s2 = "being removed from access control list";\u000a        if (local_74 != 0) {\u000a          __s2 = "being added to access control list";\u000a        }\u000a        printf("non-network local connections %s\u005cn",__s2);\u000a        return 1;\u000a      }\u000a      iVar1 = strncmp("si:",__s2,3);\u000a      __format = name + 3;\u000a      if (iVar1 == 0) {\u000a        free(__s2);\u000a        local_58 = strchr(__format,0x3a);\u000a        if ((local_58 != (char *)0x0) && (local_58 != __format)) {\u000a          local_68 = (int)local_58 - (int)__format;\u000a          local_58 = local_58 + 1;\u000a          local_60 = __format;\u000a          sVar3 = strlen(local_58);\u000a          local_64 = (undefined4)sVar3;\u000a          local_88 = 5;\u000a          local_80 = (in6_addr *)&local_68;\u000a          if (local_74 == 0) {\u000a            iVar1 = XRemoveHost(dpy,&local_88);\u000a          }\u000a          else {\u000a            iVar1 = XAddHost(dpy,&local_88);\u000a          }\u000a          __s2 = "failed when ";\u000a          if (iVar1 == 1) {\u000a            __s2 = "";\u000a          }\u000a          pcVar9 = "being removed from access control list";\u000a          if (local_74 != 0) {\u000a            pcVar9 = "being added to access control list";\u000a          }\u000a          printf("%s %s%s\u005cn",__format,__s2,pcVar9);\u000a          return (uint)(iVar1 == 1);\u000a        }\u000a        fprintf(stderr,"%s: type must be specified for server interpreted family \u005c"%s\u005c"\u005cn",\u000a                ProgramName,__format);\u000a        return 0;\u000a      }\u000a      __format = strchr(__s2,0x3a);\u000a      if (__format != (char *)0x0) {\u000a        *__format = 0;\u000a        fprintf(stderr,"%s: unknown address family \u005c"%s\u005c"\u005cn",ProgramName,__s2);\u000a        goto LAB_00401e3c;\u000a      }\u000a      free(__s2);\u000a      iVar1 = 0xffff;\u000a      goto LAB_004019f2;\u000a    }\u000a    name = name + 4;\u000a    free(__s2);\u000a    __s2 = strchr(name,0x40);\u000a    if (__s2 == (char *)0x0) {\u000a      iVar1 = 0xfe;\u000a      goto LAB_004019f2;\u000a    }\u000a  }\u000a  __format = name;\u000a  if (__s2[1] != 0) {\u000aLAB_00401a5a:\u000a    local_88 = 0xfe;\u000a    sVar3 = strlen(__format);\u000a    local_84 = (undefined4)sVar3;\u000a    if (local_74 == 0) {\u000a      local_80 = (in6_addr *)__format;\u000a      XRemoveHost(dpy,&local_88);\u000a    }\u000a    else {\u000a      local_80 = (in6_addr *)__format;\u000a      XAddHost();\u000a    }\u000a    __s2 = "being removed from access control list";\u000a    if (local_74 != 0) {\u000a      __s2 = "being added to access control list";\u000a    }\u000a    if (__format == name) {\u000a      printf("%s %s\u005cn",__format,__s2,__s2);\u000a    }\u000a    else {\u000a      printf("%s@ (%s) %s\u005cn",name,__format);\u000a    }\u000a    return 1;\u000a  }\u000a  *__s2 = 0;\u000a  ppVar5 = getpwnam(name);\u000a  if (ppVar5 == (passwd *)0x0) {\u000a    __s2 = "no such user \u005c"%s\u005c"\u005cn";\u000a  }\u000a  else {\u000a    getdomainname((char *)&ram0x006032b0,0x80);\u000a    __format = &ram0x006031b0;\u000a    iVar1 = user2netname((char *)0x6031b0,ppVar5->pw_uid,(char *)0x6032b0);\u000a    if (iVar1 != 0) goto LAB_00401a5a;\u000a    __s2 = "failed to get netname for \u005c"%s\u005c"\u005cn";\u000a  }\u000a  fprintf(stderr,__s2,name);\u000a  return 0;\u000a}\u000a\u000a
p38
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x58\nMOV dword ptr [RSP + 0x14],EDX\nMOV R12,RSI\nMOV R15,RDI\nMOV RDI,R12\nCALL 0x00400f10\nMOV R13,RAX\nLEA RDI,[R13 + 0x1]\nCALL 0x00401030\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00401f01\nTEST R13,R13\nJZ 0x004018e8\nCALL 0x004010d0\nMOV RCX,R13\nMOV RDX,R14\nMOV RSI,R12\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [RAX]\nMOVSX RBP,byte ptr [RSI]\nMOVZX EBX,byte ptr [RDI + RBP*0x4]\nMOV byte ptr [RDX],BL\nINC RSI\nINC RDX\nDEC RCX\nJNZ 0x004018d0\nMOV byte ptr [R14 + R13*0x1],0x0\nMOV EBX,0x5\nMOV EDI,0x40223c\nMOV EDX,0x5\nMOV RSI,R14\nCALL 0x00400ec0\nTEST EAX,EAX\nJZ 0x004019dc\nMOV EBX,0x6\nMOV EDI,0x402242\nMOV EDX,0x6\nMOV RSI,R14\nCALL 0x00400ec0\nTEST EAX,EAX\nJZ 0x004019e1\nMOV EDI,0x402249\nMOV EDX,0x5\nMOV RSI,R14\nCALL 0x00400ec0\nTEST EAX,EAX\nJZ 0x00401dc4\nMOV EDI,0x40226c\nMOV EDX,0x4\nMOV RSI,R14\nCALL 0x00400ec0\nTEST EAX,EAX\nJZ 0x00401b1d\nMOV EDI,0x402271\nMOV EDX,0x4\nMOV RSI,R14\nCALL 0x00400ec0\nTEST EAX,EAX\nJZ 0x00401e20\nMOV EDI,0x402297\nMOV EDX,0x6\nMOV RSI,R14\nCALL 0x00400ec0\nTEST EAX,EAX\nJZ 0x00401b4c\nMOV EDI,0x40229e\nMOV EDX,0x3\nMOV RSI,R14\nCALL 0x00400ec0\nLEA R13,[R12 + 0x3]\nTEST EAX,EAX\nCMOVNZ R13,R12\nJZ 0x00401d16\nMOV ESI,0x3a\nMOV RDI,R14\nCALL 0x00400f30\nTEST RAX,RAX\nJNZ 0x00401eb6\nMOV RDI,R14\nCALL 0x00400e90\nMOV R13D,0xffff\nJMP 0x004019f2\nXOR R13D,R13D\nJMP 0x004019e7\nMOV R13D,0x6\nADD R12,RBX\nMOV RDI,R14\nCALL 0x00400e90\nMOV R14,R15\nMOV ESI,0x40\nMOV RDI,R12\nCALL 0x00400f30\nTEST RAX,RAX\nMOV R15D,dword ptr [RSP + 0x14]\nJZ 0x00401a84\nCMP byte ptr [RAX + 0x1],0x0\nMOV RBX,R12\nJNZ 0x00401a5a\nMOV byte ptr [RAX],0x0\nMOV RDI,R12\nCALL 0x00400fd0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00401e49\nMOV EDI,0x6032b0\nMOV ESI,0x80\nCALL 0x00400f00\nMOV ESI,dword ptr [RBX + 0x10]\nMOV EBX,0x6031b0\nMOV EDI,0x6031b0\nMOV EDX,0x6032b0\nCALL 0x00400f70\nTEST EAX,EAX\nJZ 0x00401e59\nMOV dword ptr [RSP],0xfe\nMOV RDI,RBX\nCALL 0x00400f10\nMOV dword ptr [RSP + 0x4],EAX\nMOV qword ptr [RSP + 0x8],RBX\nMOV RSI,RSP\nMOV RDI,R14\nTEST R15D,R15D\nJZ 0x00401ad4\nCALL 0x00400eb0\nJMP 0x00401ad9\nCMP R13D,0xffff\nJZ 0x00401aa0\nCMP R13D,0x6\nJZ 0x00401b9c\nTEST R13D,R13D\nJNZ 0x00401bee\nMOV RDI,R12\nCALL 0x00400fa0\nMOV dword ptr [0x0060319c],EAX\nCMP EAX,-0x1\nJZ 0x00401b8d\nMOV dword ptr [RSP],0x0\nMOV dword ptr [RSP + 0x4],0x4\nMOV qword ptr [RSP + 0x8],0x60319c\nJMP 0x00401bcb\nCALL 0x00400f60\nTEST R15D,R15D\nMOV EAX,0x4021d0\nMOV ECX,0x4021f3\nCMOVNZ RCX,RAX\nCMP RBX,R12\nJZ 0x00401b06\nMOV EDI,0x40236d\nXOR EAX,EAX\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x00400f40\nJMP 0x00401dae\nMOV EDI,0x40237a\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00400f40\nJMP 0x00401dae\nADD R12,0x4\nMOV RDI,R14\nCALL 0x00400e90\nMOV ESI,0x40\nMOV RDI,R12\nCALL 0x00400f30\nTEST RAX,RAX\nJZ 0x00401d0b\nMOV R14,R15\nMOV R15D,dword ptr [RSP + 0x14]\nJMP 0x00401a0c\nMOV RDI,R14\nCALL 0x00400e90\nMOV byte ptr [RSP + 0x20],0x0\nMOV dword ptr [RSP + 0x4],0x0\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP],0xfc\nCMP dword ptr [RSP + 0x14],0x0\nJZ 0x00401d84\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x00400eb0\nJMP 0x00401d8f\nCMP R13D,0xffff\nJZ 0x00401b9c\nCMP R13D,0x6\nJNZ 0x00401bee\nMOV EDI,0xa\nMOV EDX,0x6031a0\nMOV RSI,R12\nCALL 0x00401000\nCMP EAX,0x1\nJNZ 0x00401bee\nMOV dword ptr [RSP],0x6\nMOV dword ptr [RSP + 0x4],0x10\nMOV qword ptr [RSP + 0x8],0x6031a0\nMOV RSI,RSP\nMOV RDI,R14\nTEST R15D,R15D\nJZ 0x00401ced\nCALL 0x00400eb0\nMOV EDI,0x40237a\nMOV EDX,0x4021d0\nJMP 0x00401cfc\nXOR EBX,EBX\nLEA RCX,[RSP + 0x18]\nXOR ESI,ESI\nXOR EDX,EDX\nMOV RDI,R12\nCALL 0x004010a0\nTEST EAX,EAX\nJNZ 0x00401db3\nMOV RBP,qword ptr [RSP + 0x18]\nTEST RBP,RBP\nJZ 0x00401e76\nXOR ESI,ESI\nNOP dword ptr [RAX]\nTEST R13D,R13D\nSETNZ CL\nCMP R13D,0x6\nSETNZ BL\nMOV EDX,dword ptr [RBP + 0x4]\nCMP EDX,0x2\nSETZ AL\nCMP EDX,0xa\nSETZ DL\nTEST BL,AL\nJNZ 0x00401c44\nAND CL,DL\nJZ 0x00401ca8\nMOV EBX,dword ptr [RBP + 0x4]\nMOV EDI,EBX\nCALL 0x00401f30\nMOV dword ptr [RSP],EAX\nMOV RSI,qword ptr [RBP + 0x18]\nLEA RAX,[RSI + 0x4]\nADD RSI,0x8\nCMP EBX,0xa\nCMOVNZ RSI,RAX\nMOV EAX,0x4\nMOV ECX,0x10\nCMOVZ EAX,ECX\nMOV qword ptr [RSP + 0x8],RSI\nMOV dword ptr [RSP + 0x4],EAX\nMOV EDI,dword ptr [RBP + 0x4]\nMOV ECX,0x2e\nLEA RDX,[RSP + 0x20]\nCALL 0x00400e70\nMOV RDI,R14\nMOV RSI,RSP\nTEST R15D,R15D\nJZ 0x00401c9e\nCALL 0x00400eb0\nJMP 0x00401ca3\nCALL 0x00400f60\nMOV ESI,0x1\nMOV RBP,qword ptr [RBP + 0x28]\nTEST RBP,RBP\nJNZ 0x00401c20\nCMP ESI,0x1\nJNZ 0x00401e76\nTEST R15D,R15D\nMOV EAX,0x4021d0\nMOV EDX,0x4021f3\nCMOVNZ RDX,RAX\nMOV EDI,0x40237a\nXOR EAX,EAX\nMOV RSI,R12\nCALL 0x00400f40\nMOV RDI,qword ptr [RSP + 0x18]\nCALL 0x004010e0\nJMP 0x00401dae\nCALL 0x00400f60\nMOV EDI,0x40237a\nMOV EDX,0x4021f3\nXOR EAX,EAX\nMOV RSI,R12\nCALL 0x00400f40\nJMP 0x00401dae\nMOV R13D,0xfe\nJMP 0x004019f2\nMOV RDI,R14\nCALL 0x00400e90\nMOV ESI,0x3a\nMOV RDI,R13\nCALL 0x00400f30\nTEST RAX,RAX\nJZ 0x00401edd\nCMP RAX,R13\nJZ 0x00401edd\nMOV qword ptr [RSP + 0x28],R13\nMOV ECX,EAX\nSUB ECX,R13D\nMOV dword ptr [RSP + 0x20],ECX\nINC RAX\nMOV qword ptr [RSP + 0x30],RAX\nMOV RDI,RAX\nCALL 0x00400f10\nMOV dword ptr [RSP + 0x24],EAX\nMOV dword ptr [RSP],0x5\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x8],RAX\nCMP dword ptr [RSP + 0x14],0x0\nJZ 0x00401ddb\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x00400eb0\nJMP 0x00401de6\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x00400f60\nCMP dword ptr [RSP + 0x14],0x0\nMOV EAX,0x4021d0\nMOV ESI,0x4021f3\nCMOVNZ RSI,RAX\nMOV EDI,0x402318\nXOR EAX,EAX\nCALL 0x00400f40\nMOV EBX,0x1\nMOV EAX,EBX\nADD RSP,0x58\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nXOR EBX,EBX\nMOV ESI,0x40224f\nJMP 0x00401e35\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x00400f60\nXOR EBX,EBX\nCMP EAX,0x1\nSETZ BL\nMOV EAX,0x4021cf\nMOV EDX,0x40230b\nCMOVZ RDX,RAX\nCMP dword ptr [RSP + 0x14],0x0\nMOV EAX,0x4021d0\nMOV ECX,0x4021f3\nCMOVNZ RCX,RAX\nMOV EDI,0x402302\nXOR EAX,EAX\nMOV RSI,R13\nCALL 0x00400f40\nJMP 0x00401db3\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nXOR EBX,EBX\nMOV ESI,0x402276\nXOR EAX,EAX\nCALL 0x00400fe0\nMOV RDI,R14\nCALL 0x00400e90\nJMP 0x00401db3\nMOV RDI,qword ptr [0x00603180]\nXOR EBX,EBX\nMOV ESI,0x40233a\nJMP 0x00401e67\nMOV RDI,qword ptr [0x00603180]\nXOR EBX,EBX\nMOV ESI,0x40234d\nXOR EAX,EAX\nMOV RDX,R12\nCALL 0x00400fe0\nJMP 0x00401db3\nTEST R13D,R13D\nMOV EAX,0x402388\nMOV EDX,0x4021cf\nCMOVZ RDX,RAX\nCMP R13D,0x6\nMOV ECX,0x402381\nCMOVNZ RCX,RDX\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nMOV ESI,0x40238e\nXOR EAX,EAX\nMOV R8,R12\nCALL 0x00400fe0\nJMP 0x00401cde\nMOV byte ptr [RAX],0x0\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nXOR EBX,EBX\nMOV ESI,0x4022a2\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00400fe0\nJMP 0x00401e3c\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nXOR EBX,EBX\nMOV ESI,0x4022c3\nXOR EAX,EAX\nMOV RCX,R13\nCALL 0x00400fe0\nJMP 0x00401db3\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nMOV ESI,0x40221a\nXOR EAX,EAX\nCALL 0x00400fe0\nMOV EDI,0x1\nCALL 0x00401090\n'
p39
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 58\n89 54 24 14\n49 89 f4\n49 89 ff\n4c 89 e7\ne8 70 f6 ff ff\n49 89 c5\n49 8d 7d 01\ne8 84 f7 ff ff\n49 89 c6\n4d 85 f6\n0f 84 49 06 00 00\n4d 85 ed\n74 2b\ne8 0e f8 ff ff\n4c 89 e9\n4c 89 f2\n4c 89 e6\n0f 1f 44 00 00\n48 8b 38\n48 0f be 2e\n0f b6 1c af\n88 1a\n48 ff c6\n48 ff c2\n48 ff c9\n75 e8\n43 c6 04 2e 00\nbb 05 00 00 00\nbf 3c 22 40 00\nba 05 00 00 00\n4c 89 f6\ne8 bc f5 ff ff\n85 c0\n0f 84 d0 00 00 00\nbb 06 00 00 00\nbf 42 22 40 00\nba 06 00 00 00\n4c 89 f6\ne8 9d f5 ff ff\n85 c0\n0f 84 b6 00 00 00\nbf 49 22 40 00\nba 05 00 00 00\n4c 89 f6\ne8 83 f5 ff ff\n85 c0\n0f 84 7f 04 00 00\nbf 6c 22 40 00\nba 04 00 00 00\n4c 89 f6\ne8 69 f5 ff ff\n85 c0\n0f 84 be 01 00 00\nbf 71 22 40 00\nba 04 00 00 00\n4c 89 f6\ne8 4f f5 ff ff\n85 c0\n0f 84 a7 04 00 00\nbf 97 22 40 00\nba 06 00 00 00\n4c 89 f6\ne8 35 f5 ff ff\n85 c0\n0f 84 b9 01 00 00\nbf 9e 22 40 00\nba 03 00 00 00\n4c 89 f6\ne8 1b f5 ff ff\n4d 8d 6c 24 03\n85 c0\n4d 0f 45 ec\n0f 84 60 03 00 00\nbe 3a 00 00 00\n4c 89 f7\ne8 6d f5 ff ff\n48 85 c0\n0f 85 ea 04 00 00\n4c 89 f7\ne8 bc f4 ff ff\n41 bd ff ff 00 00\neb 16\n45 31 ed\neb 06\n41 bd 06 00 00 00\n49 01 dc\n4c 89 f7\ne8 9e f4 ff ff\n4d 89 fe\nbe 40 00 00 00\n4c 89 e7\ne8 2e f5 ff ff\n48 85 c0\n44 8b 7c 24 14\n74 78\n80 78 01 00\n4c 89 e3\n75 45\nc6 00 00\n4c 89 e7\ne8 b0 f5 ff ff\n48 89 c3\n48 85 db\n0f 84 1d 04 00 00\nbf b0 32 60 00\nbe 80 00 00 00\ne8 c5 f4 ff ff\n8b 73 10\nbb b0 31 60 00\nbf b0 31 60 00\nba b0 32 60 00\ne8 1e f5 ff ff\n85 c0\n0f 84 ff 03 00 00\nc7 04 24 fe 00 00 00\n48 89 df\ne8 a7 f4 ff ff\n89 44 24 04\n48 89 5c 24 08\n48 89 e6\n4c 89 f7\n45 85 ff\n74 57\ne8 2e f4 ff ff\neb 55\n41 81 fd ff ff 00 00\n74 13\n41 83 fd 06\n0f 84 05 01 00 00\n45 85 ed\n0f 85 4e 01 00 00\n4c 89 e7\ne8 f8 f4 ff ff\n89 05 ee 16 20 00\n83 f8 ff\n0f 84 d6 00 00 00\nc7 04 24 00 00 00 00\nc7 44 24 04 04 00 00 00\n48 c7 44 24 08 9c 31 60 00\ne9 f7 00 00 00\ne8 87 f4 ff ff\n45 85 ff\nb8 d0 21 40 00\nb9 f3 21 40 00\n48 0f 45 c8\n4c 39 e3\n74 17\nbf 6d 23 40 00\n31 c0\n4c 89 e6\n48 89 da\ne8 3f f4 ff ff\ne9 a8 02 00 00\nbf 7a 23 40 00\n31 c0\n48 89 de\n48 89 ca\ne8 28 f4 ff ff\ne9 91 02 00 00\n49 83 c4 04\n4c 89 f7\ne8 67 f3 ff ff\nbe 40 00 00 00\n4c 89 e7\ne8 fa f3 ff ff\n48 85 c0\n0f 84 cc 01 00 00\n4d 89 fe\n44 8b 7c 24 14\ne9 c0 fe ff ff\n4c 89 f7\ne8 3c f3 ff ff\nc6 44 24 20 00\nc7 44 24 04 00 00 00 00\n48 8d 44 24 20\n48 89 44 24 08\nc7 04 24 fc 00 00 00\n83 7c 24 14 00\n0f 84 07 02 00 00\n48 89 e6\n4c 89 ff\ne8 28 f3 ff ff\ne9 02 02 00 00\n41 81 fd ff ff 00 00\n74 06\n41 83 fd 06\n75 52\nbf 0a 00 00 00\nba a0 31 60 00\n4c 89 e6\ne8 52 f4 ff ff\n83 f8 01\n75 3b\nc7 04 24 06 00 00 00\nc7 44 24 04 10 00 00 00\n48 c7 44 24 08 a0 31 60 00\n48 89 e6\n4c 89 f7\n45 85 ff\n0f 84 13 01 00 00\ne8 d1 f2 ff ff\nbf 7a 23 40 00\nba d0 21 40 00\ne9 0e 01 00 00\n31 db\n48 8d 4c 24 18\n31 f6\n31 d2\n4c 89 e7\ne8 9f f4 ff ff\n85 c0\n0f 85 aa 01 00 00\n48 8b 6c 24 18\n48 85 ed\n0f 84 5f 02 00 00\n31 f6\n0f 1f 80 00 00 00 00\n45 85 ed\n0f 95 c1\n41 83 fd 06\n0f 95 c3\n8b 55 04\n83 fa 02\n0f 94 c0\n83 fa 0a\n0f 94 c2\n84 c3\n75 04\n20 d1\n74 64\n8b 5d 04\n89 df\ne8 e2 02 00 00\n89 04 24\n48 8b 75 18\n48 8d 46 04\n48 83 c6 08\n83 fb 0a\n48 0f 45 f0\nb8 04 00 00 00\nb9 10 00 00 00\n0f 44 c1\n48 89 74 24 08\n89 44 24 04\n8b 7d 04\nb9 2e 00 00 00\n48 8d 54 24 20\ne8 e4 f1 ff ff\n4c 89 f7\n48 89 e6\n45 85 ff\n74 07\ne8 14 f2 ff ff\neb 05\ne8 bd f2 ff ff\nbe 01 00 00 00\n48 8b 6d 28\n48 85 ed\n0f 85 6b ff ff ff\n83 fe 01\n0f 85 b8 01 00 00\n45 85 ff\nb8 d0 21 40 00\nba f3 21 40 00\n48 0f 45 d0\nbf 7a 23 40 00\n31 c0\n4c 89 e6\ne8 62 f2 ff ff\n48 8b 7c 24 18\ne8 f8 f3 ff ff\ne9 c1 00 00 00\ne8 6e f2 ff ff\nbf 7a 23 40 00\nba f3 21 40 00\n31 c0\n4c 89 e6\ne8 3a f2 ff ff\ne9 a3 00 00 00\n41 bd fe 00 00 00\ne9 dc fc ff ff\n4c 89 f7\ne8 72 f1 ff ff\nbe 3a 00 00 00\n4c 89 ef\ne8 05 f2 ff ff\n48 85 c0\n0f 84 a9 01 00 00\n4c 39 e8\n0f 84 a0 01 00 00\n4c 89 6c 24 28\n89 c1\n44 29 e9\n89 4c 24 20\n48 ff c0\n48 89 44 24 30\n48 89 c7\ne8 b5 f1 ff ff\n89 44 24 24\nc7 04 24 05 00 00 00\n48 8d 44 24 20\n48 89 44 24 08\n83 7c 24 14 00\n74 64\n48 89 e6\n4c 89 ff\ne8 2e f1 ff ff\neb 62\n48 89 e6\n4c 89 ff\ne8 d1 f1 ff ff\n83 7c 24 14 00\nb8 d0 21 40 00\nbe f3 21 40 00\n48 0f 45 f0\nbf 18 23 40 00\n31 c0\ne8 92 f1 ff ff\nbb 01 00 00 00\n89 d8\n48 83 c4 58\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 3d b5 13 20 00\n48 8b 15 be 13 20 00\n31 db\nbe 4f 22 40 00\neb 5a\n48 89 e6\n4c 89 ff\ne8 7a f1 ff ff\n31 db\n83 f8 01\n0f 94 c3\nb8 cf 21 40 00\nba 0b 23 40 00\n48 0f 44 d0\n83 7c 24 14 00\nb8 d0 21 40 00\nb9 f3 21 40 00\n48 0f 45 c8\nbf 02 23 40 00\n31 c0\n4c 89 ee\ne8 22 f1 ff ff\neb 93\n48 8b 3d 59 13 20 00\n48 8b 15 62 13 20 00\n31 db\nbe 76 22 40 00\n31 c0\ne8 a4 f1 ff ff\n4c 89 f7\ne8 4c f0 ff ff\ne9 6a ff ff ff\n48 8b 3d 30 13 20 00\n31 db\nbe 3a 23 40 00\neb 0e\n48 8b 3d 20 13 20 00\n31 db\nbe 4d 23 40 00\n31 c0\n4c 89 e2\ne8 6f f1 ff ff\ne9 3d ff ff ff\n45 85 ed\nb8 88 23 40 00\nba cf 21 40 00\n48 0f 44 d0\n41 83 fd 06\nb9 81 23 40 00\n48 0f 45 ca\n48 8b 3d e5 12 20 00\n48 8b 15 ee 12 20 00\nbe 8e 23 40 00\n31 c0\n4d 89 e0\ne8 2f f1 ff ff\ne9 28 fe ff ff\nc6 00 00\n48 8b 3d c0 12 20 00\n48 8b 15 c9 12 20 00\n31 db\nbe a2 22 40 00\n31 c0\n4c 89 f1\ne8 08 f1 ff ff\ne9 5f ff ff ff\n48 8b 3d 9c 12 20 00\n48 8b 15 a5 12 20 00\n31 db\nbe c3 22 40 00\n31 c0\n4c 89 e9\ne8 e4 f0 ff ff\ne9 b2 fe ff ff\n48 8b 3d 78 12 20 00\n48 8b 15 81 12 20 00\nbe 1a 22 40 00\n31 c0\ne8 c5 f0 ff ff\nbf 01 00 00 00\ne8 6b f1 ff ff\n'
p40
S'.text:0000000000401880\n.text:0000000000401881\n.text:0000000000401883\n.text:0000000000401885\n.text:0000000000401887\n.text:0000000000401889\n.text:000000000040188a\n.text:000000000040188e\n.text:0000000000401892\n.text:0000000000401895\n.text:0000000000401898\n.text:000000000040189b\n.text:00000000004018a0\n.text:00000000004018a3\n.text:00000000004018a7\n.text:00000000004018ac\n.text:00000000004018af\n.text:00000000004018b2\n.text:00000000004018b8\n.text:00000000004018bb\n.text:00000000004018bd\n.text:00000000004018c2\n.text:00000000004018c5\n.text:00000000004018c8\n.text:00000000004018cb\n.text:00000000004018d0\n.text:00000000004018d3\n.text:00000000004018d7\n.text:00000000004018db\n.text:00000000004018dd\n.text:00000000004018e0\n.text:00000000004018e3\n.text:00000000004018e6\n.text:00000000004018e8\n.text:00000000004018ed\n.text:00000000004018f2\n.text:00000000004018f7\n.text:00000000004018fc\n.text:00000000004018ff\n.text:0000000000401904\n.text:0000000000401906\n.text:000000000040190c\n.text:0000000000401911\n.text:0000000000401916\n.text:000000000040191b\n.text:000000000040191e\n.text:0000000000401923\n.text:0000000000401925\n.text:000000000040192b\n.text:0000000000401930\n.text:0000000000401935\n.text:0000000000401938\n.text:000000000040193d\n.text:000000000040193f\n.text:0000000000401945\n.text:000000000040194a\n.text:000000000040194f\n.text:0000000000401952\n.text:0000000000401957\n.text:0000000000401959\n.text:000000000040195f\n.text:0000000000401964\n.text:0000000000401969\n.text:000000000040196c\n.text:0000000000401971\n.text:0000000000401973\n.text:0000000000401979\n.text:000000000040197e\n.text:0000000000401983\n.text:0000000000401986\n.text:000000000040198b\n.text:000000000040198d\n.text:0000000000401993\n.text:0000000000401998\n.text:000000000040199d\n.text:00000000004019a0\n.text:00000000004019a5\n.text:00000000004019aa\n.text:00000000004019ac\n.text:00000000004019b0\n.text:00000000004019b6\n.text:00000000004019bb\n.text:00000000004019be\n.text:00000000004019c3\n.text:00000000004019c6\n.text:00000000004019cc\n.text:00000000004019cf\n.text:00000000004019d4\n.text:00000000004019da\n.text:00000000004019dc\n.text:00000000004019df\n.text:00000000004019e1\n.text:00000000004019e7\n.text:00000000004019ea\n.text:00000000004019ed\n.text:00000000004019f2\n.text:00000000004019f5\n.text:00000000004019fa\n.text:00000000004019fd\n.text:0000000000401a02\n.text:0000000000401a05\n.text:0000000000401a0a\n.text:0000000000401a0c\n.text:0000000000401a10\n.text:0000000000401a13\n.text:0000000000401a15\n.text:0000000000401a18\n.text:0000000000401a1b\n.text:0000000000401a20\n.text:0000000000401a23\n.text:0000000000401a26\n.text:0000000000401a2c\n.text:0000000000401a31\n.text:0000000000401a36\n.text:0000000000401a3b\n.text:0000000000401a3e\n.text:0000000000401a43\n.text:0000000000401a48\n.text:0000000000401a4d\n.text:0000000000401a52\n.text:0000000000401a54\n.text:0000000000401a5a\n.text:0000000000401a61\n.text:0000000000401a64\n.text:0000000000401a69\n.text:0000000000401a6d\n.text:0000000000401a72\n.text:0000000000401a75\n.text:0000000000401a78\n.text:0000000000401a7b\n.text:0000000000401a7d\n.text:0000000000401a82\n.text:0000000000401a84\n.text:0000000000401a8b\n.text:0000000000401a8d\n.text:0000000000401a91\n.text:0000000000401a97\n.text:0000000000401a9a\n.text:0000000000401aa0\n.text:0000000000401aa3\n.text:0000000000401aa8\n.text:0000000000401aae\n.text:0000000000401ab1\n.text:0000000000401ab7\n.text:0000000000401abe\n.text:0000000000401ac6\n.text:0000000000401acf\n.text:0000000000401ad4\n.text:0000000000401ad9\n.text:0000000000401adc\n.text:0000000000401ae1\n.text:0000000000401ae6\n.text:0000000000401aea\n.text:0000000000401aed\n.text:0000000000401aef\n.text:0000000000401af4\n.text:0000000000401af6\n.text:0000000000401af9\n.text:0000000000401afc\n.text:0000000000401b01\n.text:0000000000401b06\n.text:0000000000401b0b\n.text:0000000000401b0d\n.text:0000000000401b10\n.text:0000000000401b13\n.text:0000000000401b18\n.text:0000000000401b1d\n.text:0000000000401b21\n.text:0000000000401b24\n.text:0000000000401b29\n.text:0000000000401b2e\n.text:0000000000401b31\n.text:0000000000401b36\n.text:0000000000401b39\n.text:0000000000401b3f\n.text:0000000000401b42\n.text:0000000000401b47\n.text:0000000000401b4c\n.text:0000000000401b4f\n.text:0000000000401b54\n.text:0000000000401b59\n.text:0000000000401b61\n.text:0000000000401b66\n.text:0000000000401b6b\n.text:0000000000401b72\n.text:0000000000401b77\n.text:0000000000401b7d\n.text:0000000000401b80\n.text:0000000000401b83\n.text:0000000000401b88\n.text:0000000000401b8d\n.text:0000000000401b94\n.text:0000000000401b96\n.text:0000000000401b9a\n.text:0000000000401b9c\n.text:0000000000401ba1\n.text:0000000000401ba6\n.text:0000000000401ba9\n.text:0000000000401bae\n.text:0000000000401bb1\n.text:0000000000401bb3\n.text:0000000000401bba\n.text:0000000000401bc2\n.text:0000000000401bcb\n.text:0000000000401bce\n.text:0000000000401bd1\n.text:0000000000401bd4\n.text:0000000000401bda\n.text:0000000000401bdf\n.text:0000000000401be4\n.text:0000000000401be9\n.text:0000000000401bee\n.text:0000000000401bf0\n.text:0000000000401bf5\n.text:0000000000401bf7\n.text:0000000000401bf9\n.text:0000000000401bfc\n.text:0000000000401c01\n.text:0000000000401c03\n.text:0000000000401c09\n.text:0000000000401c0e\n.text:0000000000401c11\n.text:0000000000401c17\n.text:0000000000401c19\n.text:0000000000401c20\n.text:0000000000401c23\n.text:0000000000401c26\n.text:0000000000401c2a\n.text:0000000000401c2d\n.text:0000000000401c30\n.text:0000000000401c33\n.text:0000000000401c36\n.text:0000000000401c39\n.text:0000000000401c3c\n.text:0000000000401c3e\n.text:0000000000401c40\n.text:0000000000401c42\n.text:0000000000401c44\n.text:0000000000401c47\n.text:0000000000401c49\n.text:0000000000401c4e\n.text:0000000000401c51\n.text:0000000000401c55\n.text:0000000000401c59\n.text:0000000000401c5d\n.text:0000000000401c60\n.text:0000000000401c64\n.text:0000000000401c69\n.text:0000000000401c6e\n.text:0000000000401c71\n.text:0000000000401c76\n.text:0000000000401c7a\n.text:0000000000401c7d\n.text:0000000000401c82\n.text:0000000000401c87\n.text:0000000000401c8c\n.text:0000000000401c8f\n.text:0000000000401c92\n.text:0000000000401c95\n.text:0000000000401c97\n.text:0000000000401c9c\n.text:0000000000401c9e\n.text:0000000000401ca3\n.text:0000000000401ca8\n.text:0000000000401cac\n.text:0000000000401caf\n.text:0000000000401cb5\n.text:0000000000401cb8\n.text:0000000000401cbe\n.text:0000000000401cc1\n.text:0000000000401cc6\n.text:0000000000401ccb\n.text:0000000000401ccf\n.text:0000000000401cd4\n.text:0000000000401cd6\n.text:0000000000401cd9\n.text:0000000000401cde\n.text:0000000000401ce3\n.text:0000000000401ce8\n.text:0000000000401ced\n.text:0000000000401cf2\n.text:0000000000401cf7\n.text:0000000000401cfc\n.text:0000000000401cfe\n.text:0000000000401d01\n.text:0000000000401d06\n.text:0000000000401d0b\n.text:0000000000401d11\n.text:0000000000401d16\n.text:0000000000401d19\n.text:0000000000401d1e\n.text:0000000000401d23\n.text:0000000000401d26\n.text:0000000000401d2b\n.text:0000000000401d2e\n.text:0000000000401d34\n.text:0000000000401d37\n.text:0000000000401d3d\n.text:0000000000401d42\n.text:0000000000401d44\n.text:0000000000401d47\n.text:0000000000401d4b\n.text:0000000000401d4e\n.text:0000000000401d53\n.text:0000000000401d56\n.text:0000000000401d5b\n.text:0000000000401d5f\n.text:0000000000401d66\n.text:0000000000401d6b\n.text:0000000000401d70\n.text:0000000000401d75\n.text:0000000000401d77\n.text:0000000000401d7a\n.text:0000000000401d7d\n.text:0000000000401d82\n.text:0000000000401d84\n.text:0000000000401d87\n.text:0000000000401d8a\n.text:0000000000401d8f\n.text:0000000000401d94\n.text:0000000000401d99\n.text:0000000000401d9e\n.text:0000000000401da2\n.text:0000000000401da7\n.text:0000000000401da9\n.text:0000000000401dae\n.text:0000000000401db3\n.text:0000000000401db5\n.text:0000000000401db9\n.text:0000000000401dba\n.text:0000000000401dbc\n.text:0000000000401dbe\n.text:0000000000401dc0\n.text:0000000000401dc2\n.text:0000000000401dc3\n.text:0000000000401dc4\n.text:0000000000401dcb\n.text:0000000000401dd2\n.text:0000000000401dd4\n.text:0000000000401dd9\n.text:0000000000401ddb\n.text:0000000000401dde\n.text:0000000000401de1\n.text:0000000000401de6\n.text:0000000000401de8\n.text:0000000000401deb\n.text:0000000000401dee\n.text:0000000000401df3\n.text:0000000000401df8\n.text:0000000000401dfc\n.text:0000000000401e01\n.text:0000000000401e06\n.text:0000000000401e0b\n.text:0000000000401e0f\n.text:0000000000401e14\n.text:0000000000401e16\n.text:0000000000401e19\n.text:0000000000401e1e\n.text:0000000000401e20\n.text:0000000000401e27\n.text:0000000000401e2e\n.text:0000000000401e30\n.text:0000000000401e35\n.text:0000000000401e37\n.text:0000000000401e3c\n.text:0000000000401e3f\n.text:0000000000401e44\n.text:0000000000401e49\n.text:0000000000401e50\n.text:0000000000401e52\n.text:0000000000401e57\n.text:0000000000401e59\n.text:0000000000401e60\n.text:0000000000401e62\n.text:0000000000401e67\n.text:0000000000401e69\n.text:0000000000401e6c\n.text:0000000000401e71\n.text:0000000000401e76\n.text:0000000000401e79\n.text:0000000000401e7e\n.text:0000000000401e83\n.text:0000000000401e87\n.text:0000000000401e8b\n.text:0000000000401e90\n.text:0000000000401e94\n.text:0000000000401e9b\n.text:0000000000401ea2\n.text:0000000000401ea7\n.text:0000000000401ea9\n.text:0000000000401eac\n.text:0000000000401eb1\n.text:0000000000401eb6\n.text:0000000000401eb9\n.text:0000000000401ec0\n.text:0000000000401ec7\n.text:0000000000401ec9\n.text:0000000000401ece\n.text:0000000000401ed0\n.text:0000000000401ed3\n.text:0000000000401ed8\n.text:0000000000401edd\n.text:0000000000401ee4\n.text:0000000000401eeb\n.text:0000000000401eed\n.text:0000000000401ef2\n.text:0000000000401ef4\n.text:0000000000401ef7\n.text:0000000000401efc\n.text:0000000000401f01\n.text:0000000000401f08\n.text:0000000000401f0f\n.text:0000000000401f14\n.text:0000000000401f16\n.text:0000000000401f1b\n.text:0000000000401f20\n'
p41
tp42
sS'local_xerror'
p43
(S'\n__stdcall local_xerror(Display * dpy, XErrorEvent * rep)\n'
p44
V\u000aint local_xerror(Display *dpy,XErrorEvent *rep)\u000a\u000a{\u000a  char *__format;\u000a  \u000a  if (rep->error_code == 2) {\u000a    if (rep->request_code == 'n') {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if (rep->error_code == '\u005cn') {\u000a      if (rep->request_code == 'o') {\u000a        __format = "%s:  must be on local machine to enable or disable access control.\u005cn";\u000a      }\u000a      else {\u000a        if (rep->request_code != 'm') goto LAB_00401567;\u000a        __format = "%s:  must be on local machine to add or remove hosts.\u005cn";\u000a      }\u000a      fprintf(stderr,__format,ProgramName);\u000a      return 1;\u000a    }\u000a  }\u000aLAB_00401567:\u000a  XmuPrintDefaultErrorMessage(dpy,rep,stderr);\u000a  return 0;\u000a}\u000a\u000a
p45
S'PUSH RAX\nMOV AL,byte ptr [RSI + 0x20]\nCMP AL,0x2\nJZ 0x0040155c\nCMP AL,0xa\nJNZ 0x00401567\nMOV AL,byte ptr [RSI + 0x21]\nCMP AL,0x6f\nJZ 0x00401577\nCMP AL,0x6d\nJNZ 0x00401567\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nMOV ESI,0x4023c0\nJMP 0x0040158a\nMOV EAX,0x1\nCMP byte ptr [RSI + 0x21],0x6e\nJZ 0x00401575\nMOV RDX,qword ptr [0x00603180]\nCALL 0x00400e80\nXOR EAX,EAX\nPOP RCX\nRET\nMOV RDI,qword ptr [0x00603180]\nMOV RDX,qword ptr [0x00603190]\nMOV ESI,0x4023f7\nXOR EAX,EAX\nCALL 0x00400fe0\nMOV EAX,0x1\nPOP RCX\nRET\n'
p46
S'50\n8a 46 20\n3c 02\n74 24\n3c 0a\n75 2b\n8a 46 21\n3c 6f\n74 34\n3c 6d\n75 20\n48 8b 3d 32 1c 20 00\n48 8b 15 3b 1c 20 00\nbe c0 23 40 00\neb 2e\nb8 01 00 00 00\n80 7e 21 6e\n74 0e\n48 8b 15 12 1c 20 00\ne8 0d f9 ff ff\n31 c0\n59\nc3\n48 8b 3d 02 1c 20 00\n48 8b 15 0b 1c 20 00\nbe f7 23 40 00\n31 c0\ne8 4f fa ff ff\nb8 01 00 00 00\n59\nc3\n'
p47
S'.text:0000000000401530\n.text:0000000000401531\n.text:0000000000401534\n.text:0000000000401536\n.text:0000000000401538\n.text:000000000040153a\n.text:000000000040153c\n.text:000000000040153f\n.text:0000000000401541\n.text:0000000000401543\n.text:0000000000401545\n.text:0000000000401547\n.text:000000000040154e\n.text:0000000000401555\n.text:000000000040155a\n.text:000000000040155c\n.text:0000000000401561\n.text:0000000000401565\n.text:0000000000401567\n.text:000000000040156e\n.text:0000000000401573\n.text:0000000000401575\n.text:0000000000401576\n.text:0000000000401577\n.text:000000000040157e\n.text:0000000000401585\n.text:000000000040158a\n.text:000000000040158c\n.text:0000000000401591\n.text:0000000000401596\n.text:0000000000401597\n'
p48
tp49
sS'strlen'
p50
(S'\n__stdcall strlen(char * __s)\n'
p51
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_00603068)();\u000a  return sVar1;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00603068]\n'
p53
S'ff 25 52 21 20 00\n'
p54
S'.plt:0000000000400f10\n'
p55
tp56
sS'getpwuid'
p57
(S'\n__stdcall getpwuid(__uid_t __uid)\n'
p58
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000apasswd * getpwuid(__uid_t __uid)\u000a\u000a{\u000a  passwd *ppVar1;\u000a  \u000a  ppVar1 = (passwd *)(*(code *)PTR_getpwuid_00603058)();\u000a  return ppVar1;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00603058]\n'
p60
S'ff 25 62 21 20 00\n'
p61
S'.plt:0000000000400ef0\n'
p62
tp63
sS'strncmp'
p64
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p65
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00603040)();\u000a  return iVar1;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00603040]\n'
p67
S'ff 25 7a 21 20 00\n'
p68
S'.plt:0000000000400ec0\n'
p69
tp70
sS'putchar'
p71
(S'\n__stdcall putchar(int __c)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_00603030)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00603030]\n'
p74
S'ff 25 8a 21 20 00\n'
p75
S'.plt:0000000000400ea0\n'
p76
tp77
sS'frame_dummy'
p78
(S'\n__stdcall frame_dummy()\n'
p79
V\u000a/* WARNING: Removing unreachable block (ram,0x004011da) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p80
S'MOV EDI,0x602df8\nCMP qword ptr [RDI],0x0\nJNZ 0x004011d0\nJMP 0x00401160\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004011cb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401160\n'
p81
S'bf f8 2d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p82
S'.text:00000000004011c0\n.text:00000000004011c5\n.text:00000000004011c9\n.text:00000000004011cb\n.text:00000000004011d0\n.text:00000000004011d5\n.text:00000000004011d8\n.text:00000000004011da\n.text:00000000004011db\n.text:00000000004011de\n.text:00000000004011e0\n.text:00000000004011e1\n'
p83
tp84
sS'XRemoveHost'
p85
(S'\n__stdcall XRemoveHost()\n'
p86
V\u000avoid XRemoveHost(void)\u000a\u000a{\u000a  (*(code *)PTR_XRemoveHost_00603090)();\u000a  return;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00603090]\n'
p88
S'ff 25 2a 21 20 00\n'
p89
S'.plt:0000000000400f60\n'
p90
tp91
sS'strcmp'
p92
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_006030b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x006030b8]\n'
p95
S'ff 25 02 21 20 00\n'
p96
S'.plt:0000000000400fb0\n'
p97
tp98
sS'XListHosts'
p99
(S'\n__stdcall XListHosts()\n'
p100
V\u000avoid XListHosts(void)\u000a\u000a{\u000a  (*(code *)PTR_XListHosts_00603070)();\u000a  return;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00603070]\n'
p102
S'ff 25 4a 21 20 00\n'
p103
S'.plt:0000000000400f20\n'
p104
tp105
sS'sethostent'
p106
(S'\n__stdcall sethostent(int __stay_open)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid sethostent(int __stay_open)\u000a\u000a{\u000a  (*(code *)PTR_sethostent_00603120)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00603120]\n'
p109
S'ff 25 9a 20 20 00\n'
p110
S'.plt:0000000000401080\n'
p111
tp112
sS'XSetErrorHandler'
p113
(S'\n__stdcall XSetErrorHandler()\n'
p114
V\u000avoid XSetErrorHandler(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetErrorHandler_006030f0)();\u000a  return;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x006030f0]\n'
p116
S'ff 25 ca 20 20 00\n'
p117
S'.plt:0000000000401020\n'
p118
tp119
sS'inet_pton'
p120
(S'\n__stdcall inet_pton(int __af, char * __cp, void * __buf)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint inet_pton(int __af,char *__cp,void *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_inet_pton_006030e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x006030e0]\n'
p123
S'ff 25 da 20 20 00\n'
p124
S'.plt:0000000000401000\n'
p125
tp126
sS'XEnableAccessControl'
p127
(S'\n__stdcall XEnableAccessControl()\n'
p128
V\u000avoid XEnableAccessControl(void)\u000a\u000a{\u000a  (*(code *)PTR_XEnableAccessControl_006030e8)();\u000a  return;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x006030e8]\n'
p130
S'ff 25 d2 20 20 00\n'
p131
S'.plt:0000000000401010\n'
p132
tp133
sS'FUN_00400e60'
p134
(S'\n__stdcall FUN_00400e60()\n'
p135
V\u000avoid FUN_00400e60(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00603010)();\u000a  return;\u000a}\u000a\u000a
p136
S'PUSH qword ptr [0x00603008]\nJMP qword ptr [0x00603010]\n'
p137
S'ff 35 a2 21 20 00\nff 25 a4 21 20 00\n'
p138
S'.plt:0000000000400e60\n.plt:0000000000400e66\n'
p139
tp140
sS'getaddrinfo'
p141
(S'\n__stdcall getaddrinfo(char * __name, char * __service, addrinfo * __req, addrinfo * * __pai)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getaddrinfo(char *__name,char *__service,addrinfo *__req,addrinfo **__pai)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getaddrinfo_00603130)();\u000a  return iVar1;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00603130]\n'
p144
S'ff 25 8a 20 20 00\n'
p145
S'.plt:00000000004010a0\n'
p146
tp147
sS'__ctype_tolower_loc'
p148
(S'\n__stdcall __ctype_tolower_loc()\n'
p149
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_00603148)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00603148]\n'
p151
S'ff 25 72 20 20 00\n'
p152
S'.plt:00000000004010d0\n'
p153
tp154
sS'sigaction'
p155
(S'\n__stdcall sigaction(int __sig, sigaction * __act, sigaction * __oact)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sigaction(int __sig,sigaction *__act,sigaction *__oact)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_sigaction_00603050)();\u000a  return iVar1;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00603050]\n'
p158
S'ff 25 6a 21 20 00\n'
p159
S'.plt:0000000000400ee0\n'
p160
tp161
sS'getnameinfo'
p162
(S'\n__stdcall getnameinfo(sockaddr * __sa, socklen_t __salen, char * __host, socklen_t __hostlen, char * __serv, socklen_t __servlen, uint __flags)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getnameinfo(sockaddr *__sa,socklen_t __salen,char *__host,socklen_t __hostlen,char *__serv,\u000a               socklen_t __servlen,uint __flags)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getnameinfo_006030a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x006030a8]\n'
p165
S'ff 25 12 21 20 00\n'
p166
S'.plt:0000000000400f90\n'
p167
tp168
sS'XDisableAccessControl'
p169
(S'\n__stdcall XDisableAccessControl()\n'
p170
V\u000avoid XDisableAccessControl(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisableAccessControl_00603118)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00603118]\n'
p172
S'ff 25 a2 20 20 00\n'
p173
S'.plt:0000000000401070\n'
p174
tp175
sS'exit'
p176
(S'\n__stdcall exit(int __status)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00603128)();\u000a  return;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00603128]\n'
p179
S'ff 25 92 20 20 00\n'
p180
S'.plt:0000000000401090\n'
p181
tp182
sS'__libc_csu_fini'
p183
(S'\n__stdcall __libc_csu_fini()\n'
p184
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p185
S'RET\n'
p186
S'f3 c3\n'
p187
S'.text:0000000000401fe0\n'
p188
tp189
sS'memmove'
p190
(S'\n__stdcall memmove(void * __dest, void * __src, size_t __n)\n'
p191
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memmove(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memmove_00603110)();\u000a  return pvVar1;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00603110]\n'
p193
S'ff 25 aa 20 20 00\n'
p194
S'.plt:0000000000401060\n'
p195
tp196
sS'user2netname'
p197
(S'\n__stdcall user2netname(char * param_1, uid_t param_2, char * param_3)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint user2netname(char *param_1,uid_t param_2,char *param_3)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_user2netname_00603098)();\u000a  return iVar1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x00603098]\n'
p200
S'ff 25 22 21 20 00\n'
p201
S'.plt:0000000000400f70\n'
p202
tp203
sS'netname2user'
p204
(S'\n__stdcall netname2user(char * param_1, uid_t * param_2, gid_t * param_3, int * param_4, gid_t * param_5)\n'
p205
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint netname2user(char *param_1,uid_t *param_2,gid_t *param_3,int *param_4,gid_t *param_5)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_netname2user_00603108)();\u000a  return iVar1;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00603108]\n'
p207
S'ff 25 b2 20 20 00\n'
p208
S'.plt:0000000000401050\n'
p209
tp210
sS'inet_addr'
p211
(S'\n__stdcall inet_addr(char * __cp)\n'
p212
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000ain_addr_t inet_addr(char *__cp)\u000a\u000a{\u000a  in_addr_t iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_inet_addr_006030b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x006030b0]\n'
p214
S'ff 25 0a 21 20 00\n'
p215
S'.plt:0000000000400fa0\n'
p216
tp217
sS'nameserver_lost'
p218
(S'\n__stdcall nameserver_lost()\n'
p219
V\u000avoid nameserver_lost(void)\u000a\u000a{\u000a  nameserver_timedout = 1;\u000a  return;\u000a}\u000a\u000a
p220
S'MOV dword ptr [0x00603198],0x1\nRET\n'
p221
S'c7 05 2e 12 20 00 01 00 00 00\nc3\n'
p222
S'.text:0000000000401f60\n.text:0000000000401f6a\n'
p223
tp224
sS'XOpenDisplay'
p225
(S'\n__stdcall XOpenDisplay()\n'
p226
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_006030c0)();\u000a  return;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x006030c0]\n'
p228
S'ff 25 fa 20 20 00\n'
p229
S'.plt:0000000000400fc0\n'
p230
tp231
sS'_start'
p232
(S'\n__stdcall _start()\n'
p233
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00602ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p234
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x401fe0\nMOV RCX,0x401f70\nMOV RDI,0x4011f0\nCALL qword ptr [0x00602ff0]\nHLT\n'
p235
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 e0 1f 40 00\n48 c7 c1 70 1f 40 00\n48 c7 c7 f0 11 40 00\nff 15 d6 1e 20 00\nf4\n'
p236
S'.text:00000000004010f0\n.text:00000000004010f2\n.text:00000000004010f5\n.text:00000000004010f6\n.text:00000000004010f9\n.text:00000000004010fd\n.text:00000000004010fe\n.text:00000000004010ff\n.text:0000000000401106\n.text:000000000040110d\n.text:0000000000401114\n.text:000000000040111a\n'
p237
tp238
sS'printf'
p239
(S'\n__stdcall printf(char * __format)\n'
p240
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00603080)();\u000a  return iVar1;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x00603080]\n'
p242
S'ff 25 3a 21 20 00\n'
p243
S'.plt:0000000000400f40\n'
p244
tp245
sS'deregister_tm_clones'
p246
(S'\n__stdcall deregister_tm_clones()\n'
p247
V\u000a/* WARNING: Removing unreachable block (ram,0x00401135) */\u000a/* WARNING: Removing unreachable block (ram,0x0040113f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p248
S'MOV EAX,0x60316f\nPUSH RBP\nSUB RAX,0x603168\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401150\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401150\nPOP RBP\nMOV EDI,0x603168\nJMP RAX\nPOP RBP\nRET\n'
p249
S'b8 6f 31 60 00\n55\n48 2d 68 31 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 68 31 60 00\nff e0\n5d\nc3\n'
p250
S'.text:0000000000401120\n.text:0000000000401125\n.text:0000000000401126\n.text:000000000040112c\n.text:0000000000401130\n.text:0000000000401133\n.text:0000000000401135\n.text:000000000040113a\n.text:000000000040113d\n.text:000000000040113f\n.text:0000000000401140\n.text:0000000000401145\n.text:0000000000401150\n.text:0000000000401151\n'
p251
tp252
sS'XDisplayName'
p253
(S'\n__stdcall XDisplayName()\n'
p254
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_00603100)();\u000a  return;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x00603100]\n'
p256
S'ff 25 ba 20 20 00\n'
p257
S'.plt:0000000000401040\n'
p258
tp259
sS'XAddHost'
p260
(S'\n__stdcall XAddHost()\n'
p261
V\u000avoid XAddHost(void)\u000a\u000a{\u000a  (*(code *)PTR_XAddHost_00603038)();\u000a  return;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x00603038]\n'
p263
S'ff 25 82 21 20 00\n'
p264
S'.plt:0000000000400eb0\n'
p265
tp266
sS'alarm'
p267
(S'\n__stdcall alarm(uint __seconds)\n'
p268
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000auint alarm(uint __seconds)\u000a\u000a{\u000a  uint uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_alarm_006030a0)();\u000a  return uVar1;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006030a0]\n'
p270
S'ff 25 1a 21 20 00\n'
p271
S'.plt:0000000000400f80\n'
p272
tp273
sS'endhostent'
p274
(S'\n__stdcall endhostent()\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid endhostent(void)\u000a\u000a{\u000a  (*(code *)PTR_endhostent_00603140)();\u000a  return;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00603140]\n'
p277
S'ff 25 7a 20 20 00\n'
p278
S'.plt:00000000004010c0\n'
p279
tp280
sS'free'
p281
(S'\n__stdcall free(void * __ptr)\n'
p282
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_00603028)();\u000a  return;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x00603028]\n'
p284
S'ff 25 92 21 20 00\n'
p285
S'.plt:0000000000400e90\n'
p286
tp287
sS'snprintf'
p288
(S'\n__stdcall snprintf(char * __s, size_t __maxlen, char * __format)\n'
p289
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint snprintf(char *__s,size_t __maxlen,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_snprintf_00603088)();\u000a  return iVar1;\u000a}\u000a\u000a
p290
S'JMP qword ptr [0x00603088]\n'
p291
S'ff 25 32 21 20 00\n'
p292
S'.plt:0000000000400f50\n'
p293
tp294
sS'getpwnam'
p295
(S'\n__stdcall getpwnam(char * __name)\n'
p296
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000apasswd * getpwnam(char *__name)\u000a\u000a{\u000a  passwd *ppVar1;\u000a  \u000a  ppVar1 = (passwd *)(*(code *)PTR_getpwnam_006030c8)();\u000a  return ppVar1;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x006030c8]\n'
p298
S'ff 25 f2 20 20 00\n'
p299
S'.plt:0000000000400fd0\n'
p300
tp301
sS'malloc'
p302
(S'\n__stdcall malloc(size_t __size)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_006030f8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x006030f8]\n'
p305
S'ff 25 c2 20 20 00\n'
p306
S'.plt:0000000000401030\n'
p307
tp308
sS'register_tm_clones'
p309
(S'\n__stdcall register_tm_clones()\n'
p310
V\u000a/* WARNING: Removing unreachable block (ram,0x00401183) */\u000a/* WARNING: Removing unreachable block (ram,0x0040118d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p311
S'MOV ESI,0x603168\nPUSH RBP\nSUB RSI,0x603168\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401198\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401198\nPOP RBP\nMOV EDI,0x603168\nJMP RAX\nPOP RBP\nRET\n'
p312
S'be 68 31 60 00\n55\n48 81 ee 68 31 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 68 31 60 00\nff e0\n5d\nc3\n'
p313
S'.text:0000000000401160\n.text:0000000000401165\n.text:0000000000401166\n.text:000000000040116d\n.text:0000000000401171\n.text:0000000000401174\n.text:0000000000401177\n.text:000000000040117b\n.text:000000000040117e\n.text:0000000000401181\n.text:0000000000401183\n.text:0000000000401188\n.text:000000000040118b\n.text:000000000040118d\n.text:000000000040118e\n.text:0000000000401193\n.text:0000000000401198\n.text:0000000000401199\n'
p314
tp315
sS'XCloseDisplay'
p316
(S'\n__stdcall XCloseDisplay()\n'
p317
V\u000avoid XCloseDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XCloseDisplay_00603138)();\u000a  return;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x00603138]\n'
p319
S'ff 25 82 20 20 00\n'
p320
S'.plt:00000000004010b0\n'
p321
tp322
sS'fprintf'
p323
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_006030d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x006030d0]\n'
p326
S'ff 25 ea 20 20 00\n'
p327
S'.plt:0000000000400fe0\n'
p328
tp329
sS'puts'
p330
(S'\n__stdcall puts(char * __s)\n'
p331
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00603048)();\u000a  return iVar1;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x00603048]\n'
p333
S'ff 25 72 21 20 00\n'
p334
S'.plt:0000000000400ed0\n'
p335
tp336
sS'getdomainname'
p337
(S'\n__stdcall getdomainname(char * __name, size_t __len)\n'
p338
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getdomainname(char *__name,size_t __len)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getdomainname_00603060)();\u000a  return iVar1;\u000a}\u000a\u000a
p339
S'JMP qword ptr [0x00603060]\n'
p340
S'ff 25 5a 21 20 00\n'
p341
S'.plt:0000000000400f00\n'
p342
tp343
sS'memcpy'
p344
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p345
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_006030d8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x006030d8]\n'
p347
S'ff 25 e2 20 20 00\n'
p348
S'.plt:0000000000400ff0\n'
p349
tp350
sS'__do_global_dtors_aux'
p351
(S'\n__stdcall __do_global_dtors_aux()\n'
p352
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p353
S'CMP byte ptr [0x00603188],0x0\nJNZ 0x004011ba\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401120\nPOP RBP\nMOV byte ptr [0x00603188],0x1\nRET\n'
p354
S'80 3d e1 1f 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 ce 1f 20 00 01\nf3 c3\n'
p355
S'.text:00000000004011a0\n.text:00000000004011a7\n.text:00000000004011a9\n.text:00000000004011aa\n.text:00000000004011ad\n.text:00000000004011b2\n.text:00000000004011b3\n.text:00000000004011ba\n'
p356
tp357
sS'_fini'
p358
(S'\n__stdcall _fini()\n'
p359
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p360
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p361
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p362
S'.fini:0000000000401fe4\n.fini:0000000000401fe8\n.fini:0000000000401fec\n'
p363
tp364
sS'inet_ntop'
p365
(S'\n__stdcall inet_ntop(int __af, void * __cp, char * __buf, socklen_t __len)\n'
p366
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * inet_ntop(int __af,void *__cp,char *__buf,socklen_t __len)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_inet_ntop_00603018)();\u000a  return pcVar1;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x00603018]\n'
p368
S'ff 25 a2 21 20 00\n'
p369
S'.plt:0000000000400e70\n'
p370
tp371
sS'freeaddrinfo'
p372
(S'\n__stdcall freeaddrinfo(addrinfo * __ai)\n'
p373
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid freeaddrinfo(addrinfo *__ai)\u000a\u000a{\u000a  (*(code *)PTR_freeaddrinfo_00603150)();\u000a  return;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x00603150]\n'
p375
S'ff 25 6a 20 20 00\n'
p376
S'.plt:00000000004010e0\n'
p377
tp378
sS'get_hostname'
p379
(S'\n__stdcall get_hostname(XHostAddress * ha)\n'
p380
V\u000achar * get_hostname(XHostAddress *ha)\u000a\u000a{\u000a  int *piVar1;\u000a  undefined4 *puVar2;\u000a  char *pcVar3;\u000a  char inetname [1025];\u000a  char netname [512];\u000a  char *addressString;\u000a  size_t addressStringSize;\u000a  int iVar4;\u000a  long lVar5;\u000a  passwd *ppVar6;\u000a  socklen_t __salen;\u000a  size_t __n;\u000a  ulong __size;\u000a  gid_t gid;\u000a  int gidlen;\u000a  sigaction sa;\u000a  __uid_t _Stack262304;\u000a  gid_t gStack262300;\u000a  uint uStack262296;\u000a  undefined4 uStack262292;\u000a  undefined4 uStack262288;\u000a  undefined4 uStack262284;\u000a  undefined4 uStack262280;\u000a  undefined4 uStack262276;\u000a  undefined4 uStack262272;\u000a  undefined4 uStack262268;\u000a  undefined4 uStack262264;\u000a  undefined4 uStack262260;\u000a  undefined4 uStack262256;\u000a  undefined4 uStack262252;\u000a  undefined4 uStack262248;\u000a  undefined4 uStack262244;\u000a  undefined4 uStack262240;\u000a  undefined4 uStack262236;\u000a  undefined4 uStack262232;\u000a  undefined4 uStack262228;\u000a  undefined4 uStack262224;\u000a  undefined4 uStack262220;\u000a  undefined4 uStack262216;\u000a  undefined4 uStack262212;\u000a  undefined4 uStack262208;\u000a  undefined4 uStack262204;\u000a  undefined4 uStack262200;\u000a  undefined4 uStack262196;\u000a  undefined4 uStack262192;\u000a  undefined4 uStack262188;\u000a  undefined4 uStack262184;\u000a  undefined4 uStack262180;\u000a  undefined4 uStack262176;\u000a  undefined4 uStack262172;\u000a  code *pcStack262168;\u000a  undefined4 uStack262160;\u000a  undefined4 uStack262156;\u000a  undefined4 uStack262152;\u000a  undefined4 uStack262148;\u000a  undefined4 uStack262144;\u000a  undefined4 uStack262140;\u000a  undefined4 uStack262136;\u000a  undefined4 uStack262132;\u000a  undefined4 uStack262128;\u000a  undefined4 uStack262124;\u000a  undefined4 uStack262120;\u000a  undefined4 uStack262116;\u000a  undefined4 uStack262112;\u000a  undefined4 uStack262108;\u000a  undefined4 uStack262104;\u000a  undefined4 uStack262100;\u000a  undefined4 uStack262096;\u000a  undefined4 uStack262092;\u000a  undefined4 uStack262088;\u000a  undefined4 uStack262084;\u000a  undefined4 uStack262080;\u000a  undefined4 uStack262076;\u000a  undefined4 uStack262072;\u000a  undefined4 uStack262068;\u000a  undefined4 uStack262064;\u000a  undefined4 uStack262060;\u000a  undefined4 uStack262056;\u000a  undefined4 uStack262052;\u000a  undefined4 uStack262048;\u000a  undefined4 uStack262044;\u000a  undefined4 uStack262040;\u000a  undefined4 uStack262036;\u000a  undefined4 uStack262032;\u000a  undefined4 uStack262028;\u000a  undefined4 uStack262024;\u000a  undefined4 uStack262020;\u000a  \u000a  iVar4 = ha->family;\u000a  if (iVar4 < 6) {\u000a    if (iVar4 == 0) goto LAB_0040167a;\u000a    if (iVar4 == 5) {\u000a      piVar1 = (int *)ha->address;\u000a      __size = SEXT48(*piVar1 + 2 + piVar1[1]);\u000a      if (addressStringSize < __size) {\u000a        if (addressString != (char *)0x0) {\u000a          free(addressString);\u000a        }\u000a        addressStringSize = __size;\u000a        addressString = (char *)malloc(__size);\u000a      }\u000a      pcVar3 = addressString;\u000a      if (addressString == (char *)0x0) {\u000a        return (char *)0x0;\u000a      }\u000a      memcpy(addressString,*(void **)(piVar1 + 2),(long)*piVar1);\u000a      lVar5 = (long)*piVar1;\u000a      pcVar3[lVar5] = ':';\u000a      memcpy(pcVar3 + lVar5 + 1,*(void **)(piVar1 + 4),(long)piVar1[1]);\u000a      pcVar3[(long)piVar1[1] + 1 + lVar5] = 0;\u000a      return addressString;\u000a    }\u000a  }\u000a  else {\u000a    if (iVar4 == 0xfe) {\u000a      __n = 0x1ff;\u000a      if ((ulong)(long)ha->length < 0x1ff) {\u000a        __n = (long)ha->length;\u000a      }\u000a      memmove((void *)0x603740,ha->address,__n);\u000a      ((char *)&ram0x00603740)[__n] = 0;\u000a      iVar4 = netname2user((char *)0x603740,&_Stack262304,&gStack262300,(int *)&uStack262296,\u000a                           (gid_t *)&pcStack262168);\u000a      if ((iVar4 != 0) && (ppVar6 = getpwuid(_Stack262304), ppVar6 != (passwd *)0x0)) {\u000a        snprintf((char *)0x603740,0x200,"%s@ (%*.*s)",ppVar6->pw_name,(ulong)(uint)ha->length,\u000a                 (ulong)(uint)ha->length,ha->address);\u000a      }\u000a      return (char *)0x603740;\u000a    }\u000a    if (iVar4 == 0xfc) {\u000a      return "";\u000a    }\u000a    if (iVar4 == 6) {\u000aLAB_0040167a:\u000a      inetname[0] = 0;\u000a      uStack262184 = 0;\u000a      uStack262180 = 0;\u000a      uStack262176 = 0;\u000a      uStack262172 = 0;\u000a      uStack262200 = 0;\u000a      uStack262196 = 0;\u000a      uStack262192 = 0;\u000a      uStack262188 = 0;\u000a      uStack262216 = 0;\u000a      uStack262212 = 0;\u000a      uStack262208 = 0;\u000a      uStack262204 = 0;\u000a      uStack262232 = 0;\u000a      uStack262228 = 0;\u000a      uStack262224 = 0;\u000a      uStack262220 = 0;\u000a      uStack262248 = 0;\u000a      uStack262244 = 0;\u000a      uStack262240 = 0;\u000a      uStack262236 = 0;\u000a      uStack262264 = 0;\u000a      uStack262260 = 0;\u000a      uStack262256 = 0;\u000a      uStack262252 = 0;\u000a      uStack262280 = 0;\u000a      uStack262276 = 0;\u000a      uStack262272 = 0;\u000a      uStack262268 = 0;\u000a      uStack262292 = 0;\u000a      uStack262288 = 0;\u000a      uStack262284 = 0;\u000a      if (ha->family == 0) {\u000a        uStack262296 = 2;\u000a        uStack262292 = *(undefined4 *)ha->address;\u000a        __salen = 0x10;\u000a      }\u000a      else {\u000a        uStack262296 = 10;\u000a        puVar2 = (undefined4 *)ha->address;\u000a        uStack262288 = *puVar2;\u000a        uStack262284 = puVar2[1];\u000a        uStack262280 = puVar2[2];\u000a        uStack262276 = puVar2[3];\u000a        __salen = 0x1c;\u000a      }\u000a      uStack262028 = 0;\u000a      uStack262024 = 0;\u000a      uStack262020 = 0;\u000a      uStack262048 = 0;\u000a      uStack262044 = 0;\u000a      uStack262040 = 0;\u000a      uStack262036 = 0;\u000a      uStack262064 = 0;\u000a      uStack262060 = 0;\u000a      uStack262056 = 0;\u000a      uStack262052 = 0;\u000a      uStack262080 = 0;\u000a      uStack262076 = 0;\u000a      uStack262072 = 0;\u000a      uStack262068 = 0;\u000a      uStack262096 = 0;\u000a      uStack262092 = 0;\u000a      uStack262088 = 0;\u000a      uStack262084 = 0;\u000a      uStack262112 = 0;\u000a      uStack262108 = 0;\u000a      uStack262104 = 0;\u000a      uStack262100 = 0;\u000a      uStack262128 = 0;\u000a      uStack262124 = 0;\u000a      uStack262120 = 0;\u000a      uStack262116 = 0;\u000a      uStack262144 = 0;\u000a      uStack262140 = 0;\u000a      uStack262136 = 0;\u000a      uStack262132 = 0;\u000a      uStack262160 = 0;\u000a      uStack262156 = 0;\u000a      uStack262152 = 0;\u000a      uStack262148 = 0;\u000a      pcStack262168 = nameserver_lost;\u000a      uStack262032 = 0;\u000a      sigaction(0xe,(sigaction *)&pcStack262168,(sigaction *)0x0);\u000a      alarm(5);\u000a      getnameinfo((sockaddr *)&uStack262296,__salen,(char *)0x603330,0x401,(char *)0x0,0,0);\u000a      alarm(0);\u000a      if ((nameserver_timedout != 0) || (inetname[0] == 0)) {\u000a        inet_ntop(uStack262296 & 0xffff,ha->address,(char *)0x603330,0x401);\u000a      }\u000a      return (char *)0x603330;\u000a    }\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p381
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40090\nMOV RBX,RDI\nMOV EAX,dword ptr [RBX]\nCMP EAX,0x5\nJLE 0x004015d9\nCMP EAX,0xfe\nJZ 0x004016d6\nCMP EAX,0xfc\nJZ 0x00401766\nCMP EAX,0x6\nJZ 0x0040167a\nJMP 0x00401770\nTEST EAX,EAX\nJZ 0x0040167a\nCMP EAX,0x5\nJNZ 0x00401770\nMOV RBP,qword ptr [RBX + 0x8]\nMOV EAX,dword ptr [RBP]\nMOV ECX,dword ptr [RBP + 0x4]\nLEA EAX,[RAX + RCX*0x1 + 0x2]\nMOVSXD R14,EAX\nMOV RBX,qword ptr [0x00603940]\nCMP qword ptr [0x00603948],R14\nJNC 0x00401631\nTEST RBX,RBX\nJZ 0x00401618\nMOV RDI,RBX\nCALL 0x00400e90\nMOV qword ptr [0x00603948],R14\nMOV RDI,R14\nCALL 0x00401030\nMOV RBX,RAX\nMOV qword ptr [0x00603940],RBX\nTEST RBX,RBX\nJZ 0x0040166e\nMOV RSI,qword ptr [RBP + 0x8]\nMOVSXD RDX,dword ptr [RBP]\nMOV RDI,RBX\nCALL 0x00400ff0\nMOVSXD RAX,dword ptr [RBP]\nLEA R14,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nMOV byte ptr [RBX + RAX*0x1],0x3a\nMOV RSI,qword ptr [RBP + 0x10]\nMOVSXD RDX,dword ptr [RBP + 0x4]\nCALL 0x00400ff0\nMOVSXD RAX,dword ptr [RBP + 0x4]\nMOV byte ptr [RAX + R14*0x1 + 0x1],0x0\nMOV RAX,qword ptr [0x00603940]\nJMP 0x00401868\nMOV byte ptr [0x00603330],0x0\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [0x80 + RSP],XMM0\nMOVAPS xmmword ptr [RSP + 0x70],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM0\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x40],XMM0\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nCMP dword ptr [RBX],0x0\nJZ 0x00401777\nMOV dword ptr [RSP + 0x10],0xa\nMOV RAX,qword ptr [RBX + 0x8]\nMOVUPS XMM0,xmmword ptr [RAX]\nMOVUPS xmmword ptr [RSP + 0x18],XMM0\nMOV EBP,0x1c\nJMP 0x0040178e\nMOVSXD RAX,dword ptr [RBX + 0x4]\nCMP RAX,0x1ff\nMOV EBP,0x1ff\nCMOVC RBP,RAX\nMOV RSI,qword ptr [RBX + 0x8]\nMOV EDI,0x603740\nMOV RDX,RBP\nCALL 0x00401060\nMOV byte ptr [0x603740 + RBP],0x0\nLEA RSI,[RSP + 0x8]\nLEA RDX,[RSP + 0xc]\nLEA RCX,[RSP + 0x10]\nLEA R8,[0x90 + RSP]\nMOV EDI,0x603740\nCALL 0x00401050\nTEST EAX,EAX\nJZ 0x0040175c\nMOV EDI,dword ptr [RSP + 0x8]\nCALL 0x00400ef0\nTEST RAX,RAX\nJZ 0x0040175c\nMOV RCX,qword ptr [RAX]\nMOV R8D,dword ptr [RBX + 0x4]\nMOV RAX,qword ptr [RBX + 0x8]\nMOV qword ptr [RSP],RAX\nMOV EDI,0x603740\nMOV ESI,0x200\nMOV EDX,0x4023b4\nXOR EAX,EAX\nMOV R9D,R8D\nCALL 0x00400f50\nMOV EAX,0x603740\nJMP 0x00401868\nMOV EAX,0x4021cf\nJMP 0x00401868\nXOR EAX,EAX\nJMP 0x00401868\nMOV dword ptr [RSP + 0x10],0x2\nMOV RAX,qword ptr [RBX + 0x8]\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x14],EAX\nMOV EBP,0x10\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [0x118 + RSP],XMM0\nMOVUPS xmmword ptr [0x108 + RSP],XMM0\nMOVUPS xmmword ptr [0xf8 + RSP],XMM0\nMOVUPS xmmword ptr [0xe8 + RSP],XMM0\nMOVUPS xmmword ptr [0xd8 + RSP],XMM0\nMOVUPS xmmword ptr [0xc8 + RSP],XMM0\nMOVUPS xmmword ptr [0xb8 + RSP],XMM0\nMOVUPS xmmword ptr [0xa8 + RSP],XMM0\nMOVUPS xmmword ptr [0x98 + RSP],XMM0\nMOV qword ptr [0x90 + RSP],0x401f60\nMOV dword ptr [0x118 + RSP],0x0\nLEA RSI,[0x90 + RSP]\nMOV EDI,0xe\nXOR EDX,EDX\nCALL 0x00400ee0\nMOV EDI,0x5\nCALL 0x00400f80\nMOV dword ptr [RSP],0x0\nLEA RDI,[RSP + 0x10]\nMOV EDX,0x603330\nMOV ECX,0x401\nXOR R8D,R8D\nXOR R9D,R9D\nMOV ESI,EBP\nCALL 0x00400f90\nXOR EDI,EDI\nCALL 0x00400f80\nCMP dword ptr [0x00603198],0x0\nJNZ 0x0040184b\nMOV AL,byte ptr [0x00603330]\nTEST AL,AL\nJNZ 0x00401863\nMOVZX EDI,word ptr [RSP + 0x10]\nMOV RSI,qword ptr [RBX + 0x8]\nMOV EDX,0x603330\nMOV ECX,0x401\nCALL 0x00400e70\nMOV EAX,0x603330\nADD RSP,0x40090\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p382
S'55\n41 56\n53\n48 81 ec 90 00 04 00\n48 89 fb\n8b 03\n83 f8 05\n7e 24\n3d fe 00 00 00\n0f 84 16 01 00 00\n3d fc 00 00 00\n0f 84 9b 01 00 00\n83 f8 06\n0f 84 a6 00 00 00\ne9 97 01 00 00\n85 c0\n0f 84 99 00 00 00\n83 f8 05\n0f 85 86 01 00 00\n48 8b 6b 08\n8b 45 00\n8b 4d 04\n8d 44 08 02\n4c 63 f0\n48 8b 1d 3e 23 20 00\n4c 39 35 3f 23 20 00\n73 26\n48 85 db\n74 08\n48 89 df\ne8 78 f8 ff ff\n4c 89 35 29 23 20 00\n4c 89 f7\ne8 09 fa ff ff\n48 89 c3\n48 89 1d 0f 23 20 00\n48 85 db\n74 38\n48 8b 75 08\n48 63 55 00\n48 89 df\ne8 aa f9 ff ff\n48 63 45 00\n4c 8d 34 03\n48 8d 7c 03 01\nc6 04 03 3a\n48 8b 75 10\n48 63 55 04\ne8 8c f9 ff ff\n48 63 45 04\n42 c6 44 30 01 00\n48 8b 05 cb 22 20 00\ne9 ee 01 00 00\nc6 05 af 1c 20 00 00\n0f 57 c0\n0f 29 84 24 80 00 00 00\n0f 29 44 24 70\n0f 29 44 24 60\n0f 29 44 24 50\n0f 29 44 24 40\n0f 29 44 24 30\n0f 29 44 24 20\n0f 29 44 24 10\n83 3b 00\n0f 84 bf 00 00 00\nc7 44 24 10 0a 00 00 00\n48 8b 43 08\n0f 10 00\n0f 11 44 24 18\nbd 1c 00 00 00\ne9 b8 00 00 00\n48 63 43 04\n48 3d ff 01 00 00\nbd ff 01 00 00\n48 0f 42 e8\n48 8b 73 08\nbf 40 37 60 00\n48 89 ea\ne8 66 f9 ff ff\nc6 85 40 37 60 00 00\n48 8d 74 24 08\n48 8d 54 24 0c\n48 8d 4c 24 10\n4c 8d 84 24 90 00 00 00\nbf 40 37 60 00\ne8 2e f9 ff ff\n85 c0\n74 36\n8b 7c 24 08\ne8 c1 f7 ff ff\n48 85 c0\n74 28\n48 8b 08\n44 8b 43 04\n48 8b 43 08\n48 89 04 24\nbf 40 37 60 00\nbe 00 02 00 00\nba b4 23 40 00\n31 c0\n45 89 c1\ne8 f4 f7 ff ff\nb8 40 37 60 00\ne9 02 01 00 00\nb8 cf 21 40 00\ne9 f8 00 00 00\n31 c0\ne9 f1 00 00 00\nc7 44 24 10 02 00 00 00\n48 8b 43 08\n8b 00\n89 44 24 14\nbd 10 00 00 00\n0f 57 c0\n0f 11 84 24 18 01 00 00\n0f 11 84 24 08 01 00 00\n0f 11 84 24 f8 00 00 00\n0f 11 84 24 e8 00 00 00\n0f 11 84 24 d8 00 00 00\n0f 11 84 24 c8 00 00 00\n0f 11 84 24 b8 00 00 00\n0f 11 84 24 a8 00 00 00\n0f 11 84 24 98 00 00 00\n48 c7 84 24 90 00 00 00 60 1f 40 00\nc7 84 24 18 01 00 00 00 00 00 00\n48 8d b4 24 90 00 00 00\nbf 0e 00 00 00\n31 d2\ne8 dc f6 ff ff\nbf 05 00 00 00\ne8 72 f7 ff ff\nc7 04 24 00 00 00 00\n48 8d 7c 24 10\nba 30 33 60 00\nb9 01 04 00 00\n45 31 c0\n45 31 c9\n89 ee\ne8 5f f7 ff ff\n31 ff\ne8 48 f7 ff ff\n83 3d 59 19 20 00 00\n75 0a\n8a 05 e9 1a 20 00\n84 c0\n75 18\n0f b7 7c 24 10\n48 8b 73 08\nba 30 33 60 00\nb9 01 04 00 00\ne8 0d f6 ff ff\nb8 30 33 60 00\n48 81 c4 90 00 04 00\n5b\n41 5e\n5d\nc3\n'
p383
S'.text:00000000004015a0\n.text:00000000004015a1\n.text:00000000004015a3\n.text:00000000004015a4\n.text:00000000004015ab\n.text:00000000004015ae\n.text:00000000004015b0\n.text:00000000004015b3\n.text:00000000004015b5\n.text:00000000004015ba\n.text:00000000004015c0\n.text:00000000004015c5\n.text:00000000004015cb\n.text:00000000004015ce\n.text:00000000004015d4\n.text:00000000004015d9\n.text:00000000004015db\n.text:00000000004015e1\n.text:00000000004015e4\n.text:00000000004015ea\n.text:00000000004015ee\n.text:00000000004015f1\n.text:00000000004015f4\n.text:00000000004015f8\n.text:00000000004015fb\n.text:0000000000401602\n.text:0000000000401609\n.text:000000000040160b\n.text:000000000040160e\n.text:0000000000401610\n.text:0000000000401613\n.text:0000000000401618\n.text:000000000040161f\n.text:0000000000401622\n.text:0000000000401627\n.text:000000000040162a\n.text:0000000000401631\n.text:0000000000401634\n.text:0000000000401636\n.text:000000000040163a\n.text:000000000040163e\n.text:0000000000401641\n.text:0000000000401646\n.text:000000000040164a\n.text:000000000040164e\n.text:0000000000401653\n.text:0000000000401657\n.text:000000000040165b\n.text:000000000040165f\n.text:0000000000401664\n.text:0000000000401668\n.text:000000000040166e\n.text:0000000000401675\n.text:000000000040167a\n.text:0000000000401681\n.text:0000000000401684\n.text:000000000040168c\n.text:0000000000401691\n.text:0000000000401696\n.text:000000000040169b\n.text:00000000004016a0\n.text:00000000004016a5\n.text:00000000004016aa\n.text:00000000004016af\n.text:00000000004016b2\n.text:00000000004016b8\n.text:00000000004016c0\n.text:00000000004016c4\n.text:00000000004016c7\n.text:00000000004016cc\n.text:00000000004016d1\n.text:00000000004016d6\n.text:00000000004016da\n.text:00000000004016e0\n.text:00000000004016e5\n.text:00000000004016e9\n.text:00000000004016ed\n.text:00000000004016f2\n.text:00000000004016f5\n.text:00000000004016fa\n.text:0000000000401701\n.text:0000000000401706\n.text:000000000040170b\n.text:0000000000401710\n.text:0000000000401718\n.text:000000000040171d\n.text:0000000000401722\n.text:0000000000401724\n.text:0000000000401726\n.text:000000000040172a\n.text:000000000040172f\n.text:0000000000401732\n.text:0000000000401734\n.text:0000000000401737\n.text:000000000040173b\n.text:000000000040173f\n.text:0000000000401743\n.text:0000000000401748\n.text:000000000040174d\n.text:0000000000401752\n.text:0000000000401754\n.text:0000000000401757\n.text:000000000040175c\n.text:0000000000401761\n.text:0000000000401766\n.text:000000000040176b\n.text:0000000000401770\n.text:0000000000401772\n.text:0000000000401777\n.text:000000000040177f\n.text:0000000000401783\n.text:0000000000401785\n.text:0000000000401789\n.text:000000000040178e\n.text:0000000000401791\n.text:0000000000401799\n.text:00000000004017a1\n.text:00000000004017a9\n.text:00000000004017b1\n.text:00000000004017b9\n.text:00000000004017c1\n.text:00000000004017c9\n.text:00000000004017d1\n.text:00000000004017d9\n.text:00000000004017e5\n.text:00000000004017f0\n.text:00000000004017f8\n.text:00000000004017fd\n.text:00000000004017ff\n.text:0000000000401804\n.text:0000000000401809\n.text:000000000040180e\n.text:0000000000401815\n.text:000000000040181a\n.text:000000000040181f\n.text:0000000000401824\n.text:0000000000401827\n.text:000000000040182a\n.text:000000000040182c\n.text:0000000000401831\n.text:0000000000401833\n.text:0000000000401838\n.text:000000000040183f\n.text:0000000000401841\n.text:0000000000401847\n.text:0000000000401849\n.text:000000000040184b\n.text:0000000000401850\n.text:0000000000401854\n.text:0000000000401859\n.text:000000000040185e\n.text:0000000000401863\n.text:0000000000401868\n.text:000000000040186f\n.text:0000000000401870\n.text:0000000000401872\n.text:0000000000401873\n'
p384
tp385
sS'XFamily'
p386
(S'\n__stdcall XFamily()\n'
p387
V\u000aint XFamily(void)\u000a\u000a{\u000a  _familyMap familyMap [3];\u000a  ulong uVar1;\u000a  int in_EDI;\u000a  \u000a  uVar1 = 0;\u000a  do {\u000a    if (((_familyMap *)&ram0x00402050)[uVar1].af == in_EDI) {\u000a      return *(int *)(uVar1 * 8 + 0x402054);\u000a    }\u000a    uVar1 = uVar1 + 1;\u000a  } while (uVar1 < 3);\u000a  return -1;\u000a}\u000a\u000a
p388
S'XOR EAX,EAX\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP dword ptr [0x402050 + RAX*0x8],EDI\nJZ 0x00401f58\nINC RAX\nCMP RAX,0x2\nJBE 0x00401f40\nMOV EAX,0xffffffff\nRET\nMOV EAX,dword ptr [0x402054 + RAX*0x8]\nRET\n'
p389
S'31 c0\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n39 3c c5 50 20 40 00\n74 0f\n48 ff c0\n48 83 f8 02\n76 ee\nb8 ff ff ff ff\nc3\n8b 04 c5 54 20 40 00\nc3\n'
p390
S'.text:0000000000401f30\n.text:0000000000401f32\n.text:0000000000401f40\n.text:0000000000401f47\n.text:0000000000401f49\n.text:0000000000401f4c\n.text:0000000000401f50\n.text:0000000000401f52\n.text:0000000000401f57\n.text:0000000000401f58\n.text:0000000000401f5f\n'
p391
tp392
s.