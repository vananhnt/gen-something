(dp0
S'to_hour'
p1
(S'\n__stdcall to_hour(long hours)\n'
p2
V\u000aint to_hour(long hours)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ESI;\u000a  int iVar2;\u000a  \u000a  iVar2 = (int)hours;\u000a  if (in_ESI == 0) {\u000a    iVar1 = -1;\u000a    if (hours == 0xc) {\u000a      iVar1 = 0;\u000a    }\u000a    if (hours - 1U < 0xb) {\u000a      iVar1 = iVar2;\u000a    }\u000a    return iVar1;\u000a  }\u000a  if (in_ESI == 1) {\u000a    iVar1 = -1;\u000a    if (hours == 0xc) {\u000a      iVar1 = iVar2;\u000a    }\u000a    if (hours - 1U < 0xb) {\u000a      iVar1 = iVar2 + 0xc;\u000a    }\u000a    return iVar1;\u000a  }\u000a  iVar1 = -1;\u000a  if ((ulong)hours < 0x18) {\u000a    iVar1 = iVar2;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'TEST ESI,ESI\nJZ 0x004048a9\nCMP ESI,0x1\nJNZ 0x004048c7\nLEA RCX,[RDI + -0x1]\nLEA RDX,[RDI + 0xc]\nCMP RDI,0xc\nMOV RAX,-0x1\nCMOVZ RAX,RDI\nCMP RCX,0xb\nCMOVC RAX,RDX\nRET\nLEA RCX,[RDI + -0x1]\nXOR EDX,EDX\nCMP RDI,0xc\nMOV RAX,-0x1\nCMOVZ RAX,RDX\nCMP RCX,0xb\nCMOVC RAX,RDI\nRET\nCMP RDI,0x18\nMOV RAX,-0x1\nCMOVC RAX,RDI\nRET\n'
p4
S'85 f6\n74 25\n83 fe 01\n75 3e\n48 8d 4f ff\n48 8d 57 0c\n48 83 ff 0c\n48 c7 c0 ff ff ff ff\n48 0f 44 c7\n48 83 f9 0b\n48 0f 42 c2\nc3\n48 8d 4f ff\n31 d2\n48 83 ff 0c\n48 c7 c0 ff ff ff ff\n48 0f 44 c2\n48 83 f9 0b\n48 0f 42 c7\nc3\n48 83 ff 18\n48 c7 c0 ff ff ff ff\n48 0f 42 c7\nc3\n'
p5
S'.text:0000000000404880\n.text:0000000000404882\n.text:0000000000404884\n.text:0000000000404887\n.text:0000000000404889\n.text:000000000040488d\n.text:0000000000404891\n.text:0000000000404895\n.text:000000000040489c\n.text:00000000004048a0\n.text:00000000004048a4\n.text:00000000004048a8\n.text:00000000004048a9\n.text:00000000004048ad\n.text:00000000004048af\n.text:00000000004048b3\n.text:00000000004048ba\n.text:00000000004048be\n.text:00000000004048c2\n.text:00000000004048c6\n.text:00000000004048c7\n.text:00000000004048cb\n.text:00000000004048d2\n.text:00000000004048d6\n'
p6
tp7
sS'ungetc'
p8
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p9
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_0060e1d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x0060e1d0]\n'
p11
S'ff 25 1a c6 20 00\n'
p12
S'.plt:0000000000401bb0\n'
p13
tp14
sS'posix_time_parse'
p15
(S'\n__stdcall posix_time_parse(tm * tm, char * s)\n'
p16
V\u000a_Bool posix_time_parse(tm *tm,char *s)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char *pcVar3;\u000a  int *piVar4;\u000a  ulong uVar5;\u000a  ulong in_RDX;\u000a  char *pcVar6;\u000a  char *pcVar7;\u000a  ulong uVar8;\u000a  int *piVar9;\u000a  int pair [6];\u000a  int local_48 [8];\u000a  \u000a  piVar4 = local_48;\u000a  piVar9 = local_48;\u000a  pcVar7 = (char *)strlen(s);\u000a  if (((in_RDX & 8) == 0) || (pcVar3 = strchr(s,0x2e), pcVar3 == (char *)0x0)) {\u000a    pcVar3 = (char *)0x0;\u000a  }\u000a  else {\u000a    pcVar6 = pcVar7 + -(long)(pcVar3 + -(long)s);\u000a    pcVar7 = pcVar3 + -(long)s;\u000a    if (pcVar6 != (char *)0x3) {\u000a      return false;\u000a    }\u000a  }\u000a  if ((char *)0x4 < pcVar7 + -8) {\u000a    return false;\u000a  }\u000a  if (((ulong)pcVar7 & 1) != 0) {\u000a    return false;\u000a  }\u000a  pcVar6 = (char *)0x0;\u000a  do {\u000a    if (9 < (int)s[(long)pcVar6] - 0x30U) {\u000a      return false;\u000a    }\u000a    pcVar6 = pcVar6 + 1;\u000a  } while (pcVar6 < pcVar7);\u000a  uVar8 = (ulong)pcVar7 >> 1;\u000a  if (uVar8 != 0) {\u000a    s = s + 1;\u000a    uVar5 = uVar8;\u000a    do {\u000a      *piVar4 = (int)*s + -0x210 + (int)s[-1] * 10;\u000a      piVar4 = piVar4 + 1;\u000a      s = s + 2;\u000a      uVar5 = uVar5 - 1;\u000a    } while (uVar5 != 0);\u000a  }\u000a  if ((in_RDX & 1) != 0) {\u000a    _Var1 = year(tm,local_48,uVar8 - 4);\u000a    if (_Var1 == false) {\u000a      return false;\u000a    }\u000a    piVar9 = local_48 + (uVar8 - 4);\u000a    uVar8 = 4;\u000a  }\u000a  tm->tm_mon = *piVar9 + -1;\u000a  tm->tm_mday = piVar9[1];\u000a  tm->tm_hour = piVar9[2];\u000a  tm->tm_min = piVar9[3];\u000a  if (((in_RDX & 2) != 0) && (_Var1 = year(tm,piVar9 + 4,uVar8 - 4), _Var1 == false)) {\u000a    return false;\u000a  }\u000a  if (pcVar3 == (char *)0x0) {\u000a    iVar2 = 0;\u000a  }\u000a  else {\u000a    if (9 < (int)pcVar3[1] - 0x30U) {\u000a      return false;\u000a    }\u000a    if (9 < (int)pcVar3[2] - 0x30U) {\u000a      return false;\u000a    }\u000a    iVar2 = (int)pcVar3[2] + -0x30 + ((int)pcVar3[1] - 0x30U) * 10;\u000a  }\u000a  tm->tm_sec = iVar2;\u000a  return true;\u000a}\u000a\u000a
p17
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV R12D,EDX\nMOV RBP,RSI\nMOV R14,RDI\nMOV RDI,RBP\nCALL 0x00401980\nMOV RBX,RAX\nTEST R12B,0x8\nJZ 0x00404da2\nMOV ESI,0x2e\nMOV RDI,RBP\nCALL 0x004019f0\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00404da2\nMOV RAX,R15\nSUB RAX,RBP\nSUB RBX,RAX\nCMP RBX,0x3\nMOV RBX,RAX\nJZ 0x00404da5\nJMP 0x00404eb3\nXOR R15D,R15D\nLEA RCX,[RBX + -0x8]\nXOR EAX,EAX\nCMP RCX,0x4\nJA 0x00404eb5\nMOV ECX,EBX\nAND ECX,0x1\nTEST RCX,RCX\nJNZ 0x00404eb5\nXOR EAX,EAX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVSX ECX,byte ptr [RBP + RAX*0x1]\nADD ECX,-0x30\nCMP ECX,0xa\nJNC 0x00404eb3\nINC RAX\nCMP RAX,RBX\nJC 0x00404dd0\nSHR RBX,1\nJZ 0x00404e21\nINC RBP\nMOV RAX,RSP\nMOV RCX,RBX\nNOP word ptr [RAX + RAX*0x1]\nMOVSX EDX,byte ptr [RBP + -0x1]\nLEA EDX,[RDX + RDX*0x4]\nMOVSX ESI,byte ptr [RBP]\nLEA EDX,[-0x210 + RSI + RDX*0x2]\nMOV dword ptr [RAX],EDX\nADD RAX,0x4\nADD RBP,0x2\nDEC RCX\nJNZ 0x00404e00\nTEST R12B,0x1\nJNZ 0x00404e2c\nMOV RSI,RSP\nJMP 0x00404e4e\nADD RBX,-0x4\nMOV RSI,RSP\nMOV RDI,R14\nMOV RDX,RBX\nMOV ECX,R12D\nCALL 0x00404ed0\nTEST AL,AL\nJZ 0x00404eb3\nLEA RSI,[RSP + RBX*0x4]\nMOV EBX,0x4\nMOV EAX,dword ptr [RSI]\nDEC EAX\nMOV dword ptr [R14 + 0x10],EAX\nMOV EAX,dword ptr [RSI + 0x4]\nMOV dword ptr [R14 + 0xc],EAX\nMOV EAX,dword ptr [RSI + 0x8]\nMOV dword ptr [R14 + 0x8],EAX\nMOV EAX,dword ptr [RSI + 0xc]\nMOV dword ptr [R14 + 0x4],EAX\nTEST R12B,0x2\nJZ 0x00404e8b\nADD RBX,-0x4\nADD RSI,0x10\nMOV RDI,R14\nMOV RDX,RBX\nMOV ECX,R12D\nCALL 0x00404ed0\nTEST AL,AL\nJZ 0x00404eb3\nTEST R15,R15\nJZ 0x00404ec2\nMOVSX EAX,byte ptr [R15 + 0x1]\nADD EAX,-0x30\nCMP EAX,0x9\nJA 0x00404eb3\nMOVSX ECX,byte ptr [R15 + 0x2]\nLEA EDX,[RCX + -0x30]\nCMP EDX,0x9\nJA 0x00404eb3\nLEA EAX,[RAX + RAX*0x4]\nLEA EAX,[RCX + RAX*0x2 + -0x30]\nJMP 0x00404ec4\nXOR EAX,EAX\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EAX,EAX\nMOV dword ptr [R14],EAX\nMOV AL,0x1\nJMP 0x00404eb5\n'
p18
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 20\n41 89 d4\n48 89 f5\n49 89 fe\n48 89 ef\ne8 13 cc ff ff\n48 89 c3\n41 f6 c4 08\n74 2c\nbe 2e 00 00 00\n48 89 ef\ne8 6d cc ff ff\n49 89 c7\n4d 85 ff\n74 17\n4c 89 f8\n48 29 e8\n48 29 c3\n48 83 fb 03\n48 89 c3\n74 08\ne9 11 01 00 00\n45 31 ff\n48 8d 4b f8\n31 c0\n48 83 f9 04\n0f 87 00 01 00 00\n89 d9\n83 e1 01\n48 85 c9\n0f 85 f2 00 00 00\n31 c0\n66 66 2e 0f 1f 84 00 00 00 00 00\n0f be 4c 05 00\n83 c1 d0\n83 f9 0a\n0f 83 d2 00 00 00\n48 ff c0\n48 39 d8\n72 e7\n48 d1 eb\n74 33\n48 ff c5\n48 89 e0\n48 89 d9\n66 0f 1f 84 00 00 00 00 00\n0f be 55 ff\n8d 14 92\n0f be 75 00\n8d 94 56 f0 fd ff ff\n89 10\n48 83 c0 04\n48 83 c5 02\n48 ff c9\n75 df\n41 f6 c4 01\n75 05\n48 89 e6\neb 22\n48 83 c3 fc\n48 89 e6\n4c 89 f7\n48 89 da\n44 89 e1\ne8 8f 00 00 00\n84 c0\n74 6e\n48 8d 34 9c\nbb 04 00 00 00\n8b 06\nff c8\n41 89 46 10\n8b 46 04\n41 89 46 0c\n8b 46 08\n41 89 46 08\n8b 46 0c\n41 89 46 04\n41 f6 c4 02\n74 1a\n48 83 c3 fc\n48 83 c6 10\n4c 89 f7\n48 89 da\n44 89 e1\ne8 49 00 00 00\n84 c0\n74 28\n4d 85 ff\n74 32\n41 0f be 47 01\n83 c0 d0\n83 f8 09\n77 16\n41 0f be 4f 02\n8d 51 d0\n83 fa 09\n77 09\n8d 04 80\n8d 44 41 d0\neb 11\n31 c0\n48 83 c4 20\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n31 c0\n41 89 06\nb0 01\neb ea\n'
p19
S'.text:0000000000404d50\n.text:0000000000404d51\n.text:0000000000404d53\n.text:0000000000404d55\n.text:0000000000404d57\n.text:0000000000404d58\n.text:0000000000404d5c\n.text:0000000000404d5f\n.text:0000000000404d62\n.text:0000000000404d65\n.text:0000000000404d68\n.text:0000000000404d6d\n.text:0000000000404d70\n.text:0000000000404d74\n.text:0000000000404d76\n.text:0000000000404d7b\n.text:0000000000404d7e\n.text:0000000000404d83\n.text:0000000000404d86\n.text:0000000000404d89\n.text:0000000000404d8b\n.text:0000000000404d8e\n.text:0000000000404d91\n.text:0000000000404d94\n.text:0000000000404d98\n.text:0000000000404d9b\n.text:0000000000404d9d\n.text:0000000000404da2\n.text:0000000000404da5\n.text:0000000000404da9\n.text:0000000000404dab\n.text:0000000000404daf\n.text:0000000000404db5\n.text:0000000000404db7\n.text:0000000000404dba\n.text:0000000000404dbd\n.text:0000000000404dc3\n.text:0000000000404dc5\n.text:0000000000404dd0\n.text:0000000000404dd5\n.text:0000000000404dd8\n.text:0000000000404ddb\n.text:0000000000404de1\n.text:0000000000404de4\n.text:0000000000404de7\n.text:0000000000404de9\n.text:0000000000404dec\n.text:0000000000404dee\n.text:0000000000404df1\n.text:0000000000404df4\n.text:0000000000404df7\n.text:0000000000404e00\n.text:0000000000404e04\n.text:0000000000404e07\n.text:0000000000404e0b\n.text:0000000000404e12\n.text:0000000000404e14\n.text:0000000000404e18\n.text:0000000000404e1c\n.text:0000000000404e1f\n.text:0000000000404e21\n.text:0000000000404e25\n.text:0000000000404e27\n.text:0000000000404e2a\n.text:0000000000404e2c\n.text:0000000000404e30\n.text:0000000000404e33\n.text:0000000000404e36\n.text:0000000000404e39\n.text:0000000000404e3c\n.text:0000000000404e41\n.text:0000000000404e43\n.text:0000000000404e45\n.text:0000000000404e49\n.text:0000000000404e4e\n.text:0000000000404e50\n.text:0000000000404e52\n.text:0000000000404e56\n.text:0000000000404e59\n.text:0000000000404e5d\n.text:0000000000404e60\n.text:0000000000404e64\n.text:0000000000404e67\n.text:0000000000404e6b\n.text:0000000000404e6f\n.text:0000000000404e71\n.text:0000000000404e75\n.text:0000000000404e79\n.text:0000000000404e7c\n.text:0000000000404e7f\n.text:0000000000404e82\n.text:0000000000404e87\n.text:0000000000404e89\n.text:0000000000404e8b\n.text:0000000000404e8e\n.text:0000000000404e90\n.text:0000000000404e95\n.text:0000000000404e98\n.text:0000000000404e9b\n.text:0000000000404e9d\n.text:0000000000404ea2\n.text:0000000000404ea5\n.text:0000000000404ea8\n.text:0000000000404eaa\n.text:0000000000404ead\n.text:0000000000404eb1\n.text:0000000000404eb3\n.text:0000000000404eb5\n.text:0000000000404eb9\n.text:0000000000404eba\n.text:0000000000404ebc\n.text:0000000000404ebe\n.text:0000000000404ec0\n.text:0000000000404ec1\n.text:0000000000404ec2\n.text:0000000000404ec4\n.text:0000000000404ec7\n.text:0000000000404ec9\n'
p20
tp21
sS'year'
p22
(S'\n__stdcall year(tm * tm, int * digit_pair, size_t n)\n'
p23
V\u000a_Bool year(tm *tm,int *digit_pair,size_t n)\u000a\u000a{\u000a  int iVar1;\u000a  tm *ptVar2;\u000a  ulong in_RCX;\u000a  time_t tStack24;\u000a  \u000a  if (n == 0) {\u000a    time(&tStack24);\u000a    ptVar2 = localtime(&tStack24);\u000a    if (ptVar2 != (tm *)0x0) {\u000a      iVar1 = ptVar2->tm_year;\u000aLAB_00404f34:\u000a      tm->tm_year = iVar1;\u000a      return true;\u000a    }\u000a  }\u000a  else {\u000a    if (n == 2) {\u000a      if ((in_RCX & 4) != 0) {\u000a        iVar1 = digit_pair[1] + -0x76c + *digit_pair * 100;\u000a        goto LAB_00404f34;\u000a      }\u000a    }\u000a    else {\u000a      if (n != 1) {\u000a                    /* WARNING: Subroutine does not return */\u000a        abort();\u000a      }\u000a      iVar1 = *digit_pair;\u000a      tm->tm_year = iVar1;\u000a      if (0x44 < *digit_pair) {\u000a        return true;\u000a      }\u000a      if ((in_RCX & 0x10) == 0) {\u000a        tm->tm_year = iVar1 + 100;\u000a        return true;\u000a      }\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p24
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RDX,RDX\nJZ 0x00404f01\nCMP RDX,0x2\nJZ 0x00404f1e\nCMP RDX,0x1\nJNZ 0x00404f41\nMOV EDX,dword ptr [RSI]\nMOV dword ptr [RBX + 0x14],EDX\nMOV AL,0x1\nCMP dword ptr [RSI],0x44\nJG 0x00404f39\nTEST CL,0x10\nJNZ 0x00404f23\nADD EDX,0x64\nMOV dword ptr [RBX + 0x14],EDX\nJMP 0x00404f39\nMOV R14,RSP\nMOV RDI,R14\nCALL 0x00401b30\nMOV RDI,R14\nCALL 0x00401870\nTEST RAX,RAX\nJZ 0x00404f23\nMOV EAX,dword ptr [RAX + 0x14]\nJMP 0x00404f34\nTEST CL,0x4\nJNZ 0x00404f27\nXOR EAX,EAX\nJMP 0x00404f39\nIMUL EAX,dword ptr [RSI],0x64\nMOV ECX,dword ptr [RSI + 0x4]\nLEA EAX,[-0x76c + RCX + RAX*0x1]\nMOV dword ptr [RBX + 0x14],EAX\nMOV AL,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nCALL 0x00401880\n'
p25
S'41 56\n53\n50\n48 89 fb\n48 85 d2\n74 25\n48 83 fa 02\n74 3c\n48 83 fa 01\n75 59\n8b 16\n89 53 14\nb0 01\n83 3e 44\n7f 45\nf6 c1 10\n75 2a\n83 c2 64\n89 53 14\neb 38\n49 89 e6\n4c 89 f7\ne8 24 cc ff ff\n4c 89 f7\ne8 5c c9 ff ff\n48 85 c0\n74 0a\n8b 40 14\neb 16\nf6 c1 04\n75 04\n31 c0\neb 12\n6b 06 64\n8b 4e 04\n8d 84 01 94 f8 ff ff\n89 43 14\nb0 01\n48 83 c4 08\n5b\n41 5e\nc3\ne8 3a c9 ff ff\n'
p26
S'.text:0000000000404ed0\n.text:0000000000404ed2\n.text:0000000000404ed3\n.text:0000000000404ed4\n.text:0000000000404ed7\n.text:0000000000404eda\n.text:0000000000404edc\n.text:0000000000404ee0\n.text:0000000000404ee2\n.text:0000000000404ee6\n.text:0000000000404ee8\n.text:0000000000404eea\n.text:0000000000404eed\n.text:0000000000404eef\n.text:0000000000404ef2\n.text:0000000000404ef4\n.text:0000000000404ef7\n.text:0000000000404ef9\n.text:0000000000404efc\n.text:0000000000404eff\n.text:0000000000404f01\n.text:0000000000404f04\n.text:0000000000404f07\n.text:0000000000404f0c\n.text:0000000000404f0f\n.text:0000000000404f14\n.text:0000000000404f17\n.text:0000000000404f19\n.text:0000000000404f1c\n.text:0000000000404f1e\n.text:0000000000404f21\n.text:0000000000404f23\n.text:0000000000404f25\n.text:0000000000404f27\n.text:0000000000404f2a\n.text:0000000000404f2d\n.text:0000000000404f34\n.text:0000000000404f37\n.text:0000000000404f39\n.text:0000000000404f3d\n.text:0000000000404f3e\n.text:0000000000404f40\n.text:0000000000404f41\n'
p27
tp28
sS'version_etc_arn'
p29
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p30
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_0040b73b,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x406ad7;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x406b58;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x406bec;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p31
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x00406968\nMOV EDX,0x40b728\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x00401cd0\nJMP 0x0040697d\nMOV EDX,0x40b734\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x00401cd0\nXOR EDI,EDI\nMOV ESI,0x40b73b\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x40ba10\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401cd0\nXOR EDI,EDI\nMOV ESI,0x40b73f\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00401ac0\nCMP R12,0x9\nJA 0x00406a06\nJMP qword ptr [0x40b6d8 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x40b80a\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401cd0\nXOR EDI,EDI\nMOV ESI,0x40b949\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x38\nJMP 0x00406c77\nXOR EDI,EDI\nMOV ESI,0x40b81a\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401cd0\nXOR EDI,EDI\nMOV ESI,0x40b831\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401cd0\nXOR EDI,EDI\nMOV ESI,0x40b84d\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x18\nJMP 0x00406c77\nXOR EDI,EDI\nMOV ESI,0x40b86d\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x18\nJMP 0x00406c77\nXOR EDI,EDI\nMOV ESI,0x40b891\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x28\nJMP 0x00406c77\nXOR EDI,EDI\nMOV ESI,0x40b8b9\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x28\nJMP 0x00406c77\nXOR EDI,EDI\nMOV ESI,0x40b8e5\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x38\nJMP 0x00406c77\nXOR EDI,EDI\nMOV ESI,0x40b915\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401cd0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x00401880\n'
p32
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba 28 b7 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 6a b3 ff ff\neb 15\nba 34 b7 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 53 b3 ff ff\n31 ff\nbe 3b b7 40 00\nba 05 00 00 00\ne8 d2 af ff ff\n48 89 c1\nbe 01 00 00 00\nba 10 ba 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 25 b3 ff ff\n31 ff\nbe 3f b7 40 00\nba 05 00 00 00\ne8 a4 af ff ff\n48 89 c7\n4c 89 f6\ne8 f9 b0 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 d8 b6 40 00\n31 ff\nbe 0a b8 40 00\nba 05 00 00 00\ne8 7a af ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 ca b2 ff ff\n31 ff\nbe 49 b9 40 00\nba 05 00 00 00\ne8 49 af ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 81 b2 ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe 1a b8 40 00\nba 05 00 00 00\ne8 f7 ae ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 43 b2 ff ff\n31 ff\nbe 31 b8 40 00\nba 05 00 00 00\ne8 c2 ae ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 0a b2 ff ff\n31 ff\nbe 4d b8 40 00\nba 05 00 00 00\ne8 89 ae ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 d4 b1 ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe 6d b8 40 00\nba 05 00 00 00\ne8 4a ae ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 92 b1 ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe 91 b8 40 00\nba 05 00 00 00\ne8 08 ae ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 48 b1 ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe b9 b8 40 00\nba 05 00 00 00\ne8 be ad ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 fe b0 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe e5 b8 40 00\nba 05 00 00 00\ne8 74 ad ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 ac b0 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe 15 b9 40 00\nba 05 00 00 00\ne8 25 ad ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 5d b0 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 fc ab ff ff\n'
p33
S'.text:0000000000406930\n.text:0000000000406932\n.text:0000000000406934\n.text:0000000000406936\n.text:0000000000406937\n.text:0000000000406938\n.text:000000000040693b\n.text:000000000040693e\n.text:0000000000406941\n.text:0000000000406944\n.text:0000000000406947\n.text:000000000040694a\n.text:000000000040694f\n.text:0000000000406952\n.text:0000000000406954\n.text:0000000000406959\n.text:000000000040695b\n.text:000000000040695e\n.text:0000000000406961\n.text:0000000000406966\n.text:0000000000406968\n.text:000000000040696d\n.text:000000000040696f\n.text:0000000000406972\n.text:0000000000406975\n.text:0000000000406978\n.text:000000000040697d\n.text:000000000040697f\n.text:0000000000406984\n.text:0000000000406989\n.text:000000000040698e\n.text:0000000000406991\n.text:0000000000406996\n.text:000000000040699b\n.text:00000000004069a1\n.text:00000000004069a3\n.text:00000000004069a6\n.text:00000000004069ab\n.text:00000000004069ad\n.text:00000000004069b2\n.text:00000000004069b7\n.text:00000000004069bc\n.text:00000000004069bf\n.text:00000000004069c2\n.text:00000000004069c7\n.text:00000000004069cb\n.text:00000000004069cd\n.text:00000000004069d5\n.text:00000000004069d7\n.text:00000000004069dc\n.text:00000000004069e1\n.text:00000000004069e6\n.text:00000000004069e9\n.text:00000000004069ec\n.text:00000000004069f1\n.text:00000000004069f3\n.text:00000000004069f6\n.text:00000000004069fa\n.text:00000000004069fb\n.text:00000000004069fd\n.text:00000000004069ff\n.text:0000000000406a01\n.text:0000000000406a06\n.text:0000000000406a08\n.text:0000000000406a0d\n.text:0000000000406a12\n.text:0000000000406a17\n.text:0000000000406a1a\n.text:0000000000406a1d\n.text:0000000000406a21\n.text:0000000000406a25\n.text:0000000000406a2a\n.text:0000000000406a2f\n.text:0000000000406a32\n.text:0000000000406a36\n.text:0000000000406a3a\n.text:0000000000406a3e\n.text:0000000000406a42\n.text:0000000000406a46\n.text:0000000000406a4a\n.text:0000000000406a4f\n.text:0000000000406a53\n.text:0000000000406a58\n.text:0000000000406a5a\n.text:0000000000406a5f\n.text:0000000000406a64\n.text:0000000000406a69\n.text:0000000000406a6c\n.text:0000000000406a6f\n.text:0000000000406a73\n.text:0000000000406a78\n.text:0000000000406a7a\n.text:0000000000406a7d\n.text:0000000000406a81\n.text:0000000000406a82\n.text:0000000000406a84\n.text:0000000000406a86\n.text:0000000000406a88\n.text:0000000000406a8d\n.text:0000000000406a8f\n.text:0000000000406a94\n.text:0000000000406a99\n.text:0000000000406a9e\n.text:0000000000406aa1\n.text:0000000000406aa4\n.text:0000000000406aa8\n.text:0000000000406aac\n.text:0000000000406ab1\n.text:0000000000406ab3\n.text:0000000000406ab6\n.text:0000000000406aba\n.text:0000000000406abb\n.text:0000000000406abd\n.text:0000000000406abf\n.text:0000000000406ac1\n.text:0000000000406ac6\n.text:0000000000406ac8\n.text:0000000000406acd\n.text:0000000000406ad2\n.text:0000000000406ad7\n.text:0000000000406ada\n.text:0000000000406add\n.text:0000000000406ae1\n.text:0000000000406ae5\n.text:0000000000406ae9\n.text:0000000000406aee\n.text:0000000000406af0\n.text:0000000000406af3\n.text:0000000000406af7\n.text:0000000000406afc\n.text:0000000000406b00\n.text:0000000000406b05\n.text:0000000000406b07\n.text:0000000000406b0c\n.text:0000000000406b11\n.text:0000000000406b16\n.text:0000000000406b19\n.text:0000000000406b1c\n.text:0000000000406b20\n.text:0000000000406b24\n.text:0000000000406b29\n.text:0000000000406b2e\n.text:0000000000406b31\n.text:0000000000406b35\n.text:0000000000406b39\n.text:0000000000406b3e\n.text:0000000000406b42\n.text:0000000000406b47\n.text:0000000000406b49\n.text:0000000000406b4e\n.text:0000000000406b53\n.text:0000000000406b58\n.text:0000000000406b5b\n.text:0000000000406b5e\n.text:0000000000406b62\n.text:0000000000406b66\n.text:0000000000406b6a\n.text:0000000000406b6f\n.text:0000000000406b74\n.text:0000000000406b77\n.text:0000000000406b7b\n.text:0000000000406b7f\n.text:0000000000406b83\n.text:0000000000406b88\n.text:0000000000406b8c\n.text:0000000000406b91\n.text:0000000000406b93\n.text:0000000000406b98\n.text:0000000000406b9d\n.text:0000000000406ba2\n.text:0000000000406ba5\n.text:0000000000406ba8\n.text:0000000000406bac\n.text:0000000000406bb0\n.text:0000000000406bb5\n.text:0000000000406bba\n.text:0000000000406bbd\n.text:0000000000406bc1\n.text:0000000000406bc5\n.text:0000000000406bc9\n.text:0000000000406bcd\n.text:0000000000406bd2\n.text:0000000000406bd6\n.text:0000000000406bdb\n.text:0000000000406bdd\n.text:0000000000406be2\n.text:0000000000406be7\n.text:0000000000406bec\n.text:0000000000406bef\n.text:0000000000406bf2\n.text:0000000000406bf6\n.text:0000000000406bfa\n.text:0000000000406bfe\n.text:0000000000406c03\n.text:0000000000406c08\n.text:0000000000406c0b\n.text:0000000000406c0f\n.text:0000000000406c13\n.text:0000000000406c17\n.text:0000000000406c1b\n.text:0000000000406c1f\n.text:0000000000406c24\n.text:0000000000406c28\n.text:0000000000406c2a\n.text:0000000000406c2c\n.text:0000000000406c31\n.text:0000000000406c36\n.text:0000000000406c3b\n.text:0000000000406c3e\n.text:0000000000406c41\n.text:0000000000406c45\n.text:0000000000406c49\n.text:0000000000406c4e\n.text:0000000000406c53\n.text:0000000000406c56\n.text:0000000000406c5a\n.text:0000000000406c5e\n.text:0000000000406c62\n.text:0000000000406c66\n.text:0000000000406c6a\n.text:0000000000406c6e\n.text:0000000000406c73\n.text:0000000000406c77\n.text:0000000000406c78\n.text:0000000000406c7a\n.text:0000000000406c7c\n.text:0000000000406c7e\n.text:0000000000406c7f\n'
p34
tp35
sS'mktime_internal'
p36
(S'\n__stdcall mktime_internal(tm * tp, anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * offset)\n'
p37
V\u000atime_t mktime_internal(tm *tp,tm *(*convert)(time_t *,tm *),time_t *offset)\u000a\u000a{\u000a  uint uVar1;\u000a  tm *(*convert_00)(time_t *,tm *);\u000a  int iVar2;\u000a  int iVar3;\u000a  time_t tVar4;\u000a  tm *ptVar5;\u000a  uint uVar6;\u000a  time_t tVar7;\u000a  long a;\u000a  int iVar8;\u000a  long lVar9;\u000a  bool bVar10;\u000a  bool bVar11;\u000a  int isdst;\u000a  time_t local_108;\u000a  uint local_100;\u000a  int local_fc;\u000a  uint local_f8;\u000a  int local_f4;\u000a  time_t local_f0;\u000a  time_t local_e8;\u000a  long *local_e0;\u000a  long local_d8;\u000a  long local_d0;\u000a  long local_c8;\u000a  tm *local_c0;\u000a  long local_b8;\u000a  long local_b0;\u000a  tm *(*local_a8)(time_t *,tm *);\u000a  int local_a0;\u000a  int iStack156;\u000a  int iStack152;\u000a  int iStack148;\u000a  int local_90;\u000a  int iStack140;\u000a  int iStack136;\u000a  int iStack132;\u000a  int local_80;\u000a  undefined4 uStack124;\u000a  undefined4 uStack120;\u000a  undefined4 uStack116;\u000a  char *local_70;\u000a  tm local_68;\u000a  \u000a  iVar8 = tp->tm_sec;\u000a  local_b0 = (long)iVar8;\u000a  local_100 = tp->tm_min;\u000a  local_f8 = tp->tm_hour;\u000a  iVar3 = tp->tm_mon;\u000a  local_f4 = tp->tm_isdst;\u000a  iVar2 = iVar3 / 0xc + (iVar3 >> 0x1f) + ((uint)(iVar3 / 6 + (iVar3 >> 0x1f)) >> 0x1f);\u000a  uVar6 = iVar3 + iVar2 * -0xc;\u000a  local_d0 = (long)(int)(iVar2 - (uVar6 >> 0x1f)) + (long)tp->tm_year;\u000a  iVar3 = tp->tm_mday;\u000a  local_e0 = offset;\u000a  local_c0 = tp;\u000a  local_a8 = convert;\u000a  iVar2 = leapyear(local_d0);\u000a  uVar1 = local_f8;\u000a  bVar10 = false;\u000a  local_d8 = (long)iVar3 + -1 +\u000a             (ulong)__mon_yday[(long)iVar2 * 0xd + (long)(int)(((int)uVar6 >> 0x1f & 0xcU) + uVar6)]\u000a  ;\u000a  local_b8 = *local_e0;\u000a  iVar3 = 0;\u000a  if (-1 < local_b0) {\u000a    iVar3 = iVar8;\u000a  }\u000a  local_fc = 0x3b;\u000a  if (iVar3 < 0x3c) {\u000a    local_fc = iVar3;\u000a  }\u000a  local_108 = ydhms_diff(local_d0,local_d8,local_f8,local_100,local_fc,0x46);\u000a  convert_00 = local_a8;\u000a  local_f0 = local_108;\u000a  local_e8 = local_108;\u000a  ranged_convert(local_a8,&local_108,(tm *)&local_a0);\u000a  uVar6 = local_100;\u000a  tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)uVar1,(tm *)(ulong)local_100);\u000a  if (local_108 != tVar4) {\u000a    iVar8 = -6;\u000a    tVar7 = local_e8;\u000a    do {\u000a      a = local_f0;\u000a      if ((local_108 == tVar7) && (local_108 != local_f0)) {\u000a        if (local_80 < 0) goto LAB_0040736b;\u000a        if (local_f4 < 0) {\u000a          if (bVar10 <= (local_80 != 0)) goto LAB_0040736b;\u000a        }\u000a        else {\u000a          if ((local_f4 != 0) != (local_80 != 0)) goto LAB_0040736b;\u000a        }\u000a      }\u000a      iVar8 = iVar8 + 1;\u000a      if (iVar8 == 0) {\u000a        return -1;\u000a      }\u000a      local_f0 = local_108;\u000a      bVar10 = local_80 != 0;\u000a      local_108 = tVar4;\u000a      ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a      tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,(tm *)(ulong)uVar6);\u000a      tVar7 = a;\u000a    } while (local_108 != tVar4);\u000a  }\u000a  iVar8 = isdst_differ();\u000a  if (iVar8 != 0) {\u000a    a = 0x92c70;\u000a    do {\u000a      lVar9 = -1;\u000a      do {\u000a        iVar8 = time_t_int_add_ok(local_108);\u000a        if (iVar8 != 0) {\u000a          local_c8 = lVar9 * a + local_108;\u000a          ranged_convert(convert_00,&local_c8,&local_68);\u000a          iVar8 = isdst_differ();\u000a          if (iVar8 == 0) {\u000a            local_108 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,\u000a                                      (tm *)(ulong)local_100);\u000a            ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a            goto LAB_0040736b;\u000a          }\u000a        }\u000a        bVar10 = lVar9 < 0;\u000a        lVar9 = lVar9 + 2;\u000a      } while (bVar10);\u000a      a = a + 0x92c70;\u000a    } while (a < 0x1005fe28);\u000a  }\u000aLAB_0040736b:\u000a  a = local_b0;\u000a  iVar8 = local_fc;\u000a  *local_e0 = (local_b8 - local_e8) + local_108;\u000a  if ((int)local_b0 != local_a0) {\u000a    bVar10 = local_fc == 0;\u000a    bVar11 = local_a0 == 0x3c;\u000a    iVar3 = time_t_int_add_ok(local_108);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    a = a + local_108;\u000a    iVar3 = time_t_int_add_ok(a);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    local_f0 = a + (long)(int)((uint)(bVar10 && bVar11) - iVar8);\u000a    ptVar5 = (*convert_00)(&local_f0,(tm *)&local_a0);\u000a    if (ptVar5 == (tm *)0x0) {\u000a      return -1;\u000a    }\u000a    local_108 = local_f0;\u000a  }\u000a  local_c0->tm_zone = local_70;\u000a  local_c0->tm_isdst = local_80;\u000a  *(undefined4 *)&local_c0->field_0x24 = uStack124;\u000a  *(undefined4 *)&local_c0->tm_gmtoff = uStack120;\u000a  *(undefined4 *)((long)&local_c0->tm_gmtoff + 4) = uStack116;\u000a  local_c0->tm_mon = local_90;\u000a  local_c0->tm_year = iStack140;\u000a  local_c0->tm_wday = iStack136;\u000a  local_c0->tm_yday = iStack132;\u000a  local_c0->tm_sec = local_a0;\u000a  local_c0->tm_min = iStack156;\u000a  local_c0->tm_hour = iStack152;\u000a  local_c0->tm_mday = iStack148;\u000a  return local_108;\u000a}\u000a\u000a
p38
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV qword ptr [RSP + 0x28],RDX\nMOV qword ptr [RSP + 0x60],RSI\nMOVSXD R15,dword ptr [RDI]\nMOV EAX,dword ptr [RDI + 0x4]\nMOV dword ptr [RSP + 0x8],EAX\nMOV EAX,dword ptr [RDI + 0x8]\nMOV dword ptr [RSP + 0x10],EAX\nMOVSXD RBX,dword ptr [RDI + 0x10]\nMOV EAX,dword ptr [RDI + 0x20]\nMOV dword ptr [RSP + 0x14],EAX\nIMUL RAX,RBX,0x2aaaaaab\nMOV RCX,RAX\nSHR RCX,0x3f\nSAR RAX,0x21\nADD EAX,ECX\nLEA ECX,[RAX*0x4]\nLEA ECX,[RCX + RCX*0x2]\nSUB EBX,ECX\nMOV ECX,EBX\nSHR ECX,0x1f\nSUB EAX,ECX\nMOVSXD RCX,dword ptr [RDI + 0x14]\nMOVSXD R13,EAX\nADD R13,RCX\nMOV qword ptr [RSP + 0x48],RDI\nMOVSXD R14,dword ptr [RDI + 0xc]\nMOV RDI,R13\nCALL 0x00407450\nCDQE\nMOV ECX,EBX\nSAR ECX,0x1f\nAND ECX,0xc\nADD ECX,EBX\nIMUL RAX,RAX,0x1a\nXOR EBP,EBP\nTEST R15,R15\nMOVSXD RCX,ECX\nMOVZX EAX,word ptr [0x40ba40 + RAX + RCX*0x2]\nLEA R12,[R14 + RAX*0x1 + -0x1]\nMOV RAX,qword ptr [RSP + 0x28]\nMOV RDX,qword ptr [RAX]\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x58],R15\nCMOVNS EAX,R15D\nCMP EAX,0x3c\nMOV EBX,0x3b\nCMOVL EBX,EAX\nMOV qword ptr [RSP + 0x50],RDX\nMOV EAX,EDX\nNEG EAX\nMOV R9D,0x46\nMOV RDI,R13\nMOV RSI,R12\nMOV R14D,dword ptr [RSP + 0x10]\nMOV EDX,R14D\nMOV ECX,dword ptr [RSP + 0x8]\nMOV R8D,EBX\nPUSH RAX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x004074b0\nADD RSP,0x20\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,qword ptr [RSP + 0x60]\nMOV R15,RDI\nCALL 0x00407650\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x40],R13\nMOV RDI,R13\nMOV qword ptr [RSP + 0x38],R12\nMOV RSI,R12\nMOV EDX,R14D\nMOV R14D,dword ptr [RSP + 0x10]\nMOV ECX,R14D\nMOV dword ptr [RSP + 0x14],EBX\nMOV R8D,EBX\nLEA R9,[RSP + 0x8]\nPUSH RAX\nCALL 0x004075c0\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJZ 0x0040729d\nMOV R13D,0xfffffffa\nMOV R12,RSP\nMOV RBX,qword ptr [RSP + 0x20]\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP RCX,RBX\nJNZ 0x00407230\nCMP RCX,qword ptr [RSP + 0x18]\nJZ 0x00407230\nMOV ECX,dword ptr [0x88 + RSP]\nTEST ECX,ECX\nJS 0x0040736b\nMOV EDX,dword ptr [RSP + 0x14]\nTEST EDX,EDX\nJS 0x00407216\nTEST ECX,ECX\nSETNZ CL\nTEST EDX,EDX\nSETNZ DL\nXOR DL,CL\nJZ 0x00407230\nJMP 0x0040736b\nXOR EDX,EDX\nTEST ECX,ECX\nSETNZ DL\nCMP EBP,EDX\nJBE 0x0040736b\nNOP dword ptr CS:[RAX + RAX*0x1]\nINC R13D\nJZ 0x0040742c\nMOV RBX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP]\nMOV qword ptr [RSP + 0x18],RCX\nMOV qword ptr [RSP],RAX\nXOR EBP,EBP\nCMP dword ptr [0x88 + RSP],0x0\nSETNZ BPL\nMOV RDI,R15\nMOV RSI,R12\nLEA RDX,[RSP + 0x68]\nCALL 0x00407650\nSUB RSP,0x8\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,R14D\nMOV R8D,dword ptr [RSP + 0x14]\nMOV R9,R12\nPUSH RAX\nCALL 0x004075c0\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJNZ 0x004071e0\nMOV ESI,dword ptr [0x88 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x00407720\nTEST EAX,EAX\nJZ 0x0040736b\nMOV EBX,0x92c70\nLEA R13,[RSP + 0x40]\nLEA RBP,[0xa0 + RSP]\nMOV R14,-0x1\nNOP\nMOV RDI,qword ptr [RSP]\nMOV R12,R14\nIMUL R12,RBX\nMOV ESI,R12D\nCALL 0x00407740\nTEST EAX,EAX\nJZ 0x00407312\nADD R12,qword ptr [RSP]\nMOV qword ptr [RSP + 0x40],R12\nMOV RDI,R15\nMOV RSI,R13\nMOV RDX,RBP\nCALL 0x00407650\nMOV ESI,dword ptr [0xc0 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x00407720\nTEST EAX,EAX\nJZ 0x0040732d\nTEST R14,R14\nLEA R14,[R14 + 0x2]\nJS 0x004072d0\nADD RBX,0x92c70\nCMP RBX,0x1005fe28\nJL 0x004072c7\nJMP 0x0040736b\nSUB RSP,0x8\nLEA R9,[RSP + 0x48]\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,dword ptr [RSP + 0x10]\nMOV R8D,dword ptr [RSP + 0x14]\nPUSH RBP\nCALL 0x004075c0\nADD RSP,0x10\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,R15\nCALL 0x00407650\nMOV RDI,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x50]\nSUB RCX,qword ptr [RSP + 0x20]\nADD RCX,RDI\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [RAX],RCX\nMOV EAX,dword ptr [RSP + 0x68]\nMOV RBX,qword ptr [RSP + 0x58]\nCMP EBX,EAX\nJZ 0x004073f8\nMOV R13D,dword ptr [RSP + 0xc]\nTEST R13D,R13D\nSETZ R12B\nCMP EAX,0x3c\nSETZ BPL\nMOV ESI,EBX\nCALL 0x00407740\nMOV R14,-0x1\nTEST EAX,EAX\nJZ 0x00407433\nAND R12B,BPL\nMOVZX EBP,R12B\nSUB EBP,R13D\nADD RBX,qword ptr [RSP]\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x00407740\nTEST EAX,EAX\nJZ 0x00407433\nMOVSXD RAX,EBP\nADD RBX,RAX\nMOV qword ptr [RSP + 0x18],RBX\nLEA RDI,[RSP + 0x18]\nLEA RSI,[RSP + 0x68]\nCALL R15\nTEST RAX,RAX\nJZ 0x00407433\nMOV RAX,qword ptr [RSP + 0x18]\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [0x98 + RSP]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x68]\nMOVUPS XMM1,xmmword ptr [RSP + 0x78]\nMOVUPS XMM2,xmmword ptr [0x88 + RSP]\nMOVUPS xmmword ptr [RCX + 0x20],XMM2\nMOVUPS xmmword ptr [RCX + 0x10],XMM1\nMOVUPS xmmword ptr [RCX],XMM0\nMOV R14,qword ptr [RSP]\nJMP 0x00407433\nMOV R14,-0x1\nMOV RAX,R14\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p39
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n48 89 54 24 28\n48 89 74 24 60\n4c 63 3f\n8b 47 04\n89 44 24 08\n8b 47 08\n89 44 24 10\n48 63 5f 10\n8b 47 20\n89 44 24 14\n48 69 c3 ab aa aa 2a\n48 89 c1\n48 c1 e9 3f\n48 c1 f8 21\n01 c8\n8d 0c 85 00 00 00 00\n8d 0c 49\n29 cb\n89 d9\nc1 e9 1f\n29 c8\n48 63 4f 14\n4c 63 e8\n49 01 cd\n48 89 7c 24 48\n4c 63 77 0c\n4c 89 ef\ne8 67 03 00 00\n48 98\n89 d9\nc1 f9 1f\n83 e1 0c\n01 d9\n48 6b c0 1a\n31 ed\n4d 85 ff\n48 63 c9\n0f b7 84 48 40 ba 40 00\n4d 8d 64 06 ff\n48 8b 44 24 28\n48 8b 10\nb8 00 00 00 00\n4c 89 7c 24 58\n41 0f 49 c7\n83 f8 3c\nbb 3b 00 00 00\n0f 4c d8\n48 89 54 24 50\n89 d0\nf7 d8\n41 b9 46 00 00 00\n4c 89 ef\n4c 89 e6\n44 8b 74 24 10\n44 89 f2\n8b 4c 24 08\n41 89 d8\n50\n6a 00\n6a 00\n6a 00\ne8 51 03 00 00\n48 83 c4 20\n48 89 44 24 18\n48 89 44 24 20\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n48 8b 7c 24 60\n49 89 ff\ne8 ca 04 00 00\n48 83 ec 08\n4c 89 6c 24 40\n4c 89 ef\n4c 89 64 24 38\n4c 89 e6\n44 89 f2\n44 8b 74 24 10\n44 89 f1\n89 5c 24 14\n41 89 d8\n4c 8d 4c 24 08\n50\ne8 09 04 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 84 d5 00 00 00\n41 bd fa ff ff ff\n49 89 e4\n48 8b 5c 24 20\n66 2e 0f 1f 84 00 00 00 00 00\n48 39 d9\n75 4b\n48 3b 4c 24 18\n74 44\n8b 8c 24 88 00 00 00\n85 c9\n0f 88 70 01 00 00\n8b 54 24 14\n85 d2\n78 13\n85 c9\n0f 95 c1\n85 d2\n0f 95 c2\n30 ca\n74 1f\ne9 55 01 00 00\n31 d2\n85 c9\n0f 95 c2\n39 d5\n0f 86 46 01 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 ff c5\n0f 84 f3 01 00 00\n48 8b 5c 24 18\n48 8b 0c 24\n48 89 4c 24 18\n48 89 04 24\n31 ed\n83 bc 24 88 00 00 00 00\n40 0f 95 c5\n4c 89 ff\n4c 89 e6\n48 8d 54 24 68\ne8 e7 03 00 00\n48 83 ec 08\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n44 89 f1\n44 8b 44 24 14\n4d 89 e1\n50\ne8 34 03 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 85 43 ff ff ff\n8b b4 24 88 00 00 00\n8b 7c 24 14\ne8 73 04 00 00\n85 c0\n0f 84 b6 00 00 00\nbb 70 2c 09 00\n4c 8d 6c 24 40\n48 8d ac 24 a0 00 00 00\n49 c7 c6 ff ff ff ff\n66 90\n48 8b 3c 24\n4d 89 f4\n4c 0f af e3\n44 89 e6\ne8 5d 04 00 00\n85 c0\n74 2b\n4c 03 24 24\n4c 89 64 24 40\n4c 89 ff\n4c 89 ee\n48 89 ea\ne8 52 03 00 00\n8b b4 24 c0 00 00 00\n8b 7c 24 14\ne8 12 04 00 00\n85 c0\n74 1b\n4d 85 f6\n4d 8d 76 02\n78 b5\n48 81 c3 70 2c 09 00\n48 81 fb 28 fe 05 10\n7c 9c\neb 3e\n48 83 ec 08\n4c 8d 4c 24 48\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n8b 4c 24 10\n44 8b 44 24 14\n55\ne8 6d 02 00 00\n48 83 c4 10\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n4c 89 ff\ne8 e5 02 00 00\n48 8b 3c 24\n48 8b 4c 24 50\n48 2b 4c 24 20\n48 01 f9\n48 8b 44 24 28\n48 89 08\n8b 44 24 68\n48 8b 5c 24 58\n39 c3\n74 67\n44 8b 6c 24 0c\n45 85 ed\n41 0f 94 c4\n83 f8 3c\n40 0f 94 c5\n89 de\ne8 95 03 00 00\n49 c7 c6 ff ff ff ff\n85 c0\n74 7d\n41 20 ec\n41 0f b6 ec\n44 29 ed\n48 03 1c 24\n48 89 df\n89 ee\ne8 72 03 00 00\n85 c0\n74 61\n48 63 c5\n48 01 c3\n48 89 5c 24 18\n48 8d 7c 24 18\n48 8d 74 24 68\n41 ff d7\n48 85 c0\n74 44\n48 8b 44 24 18\n48 89 04 24\n48 8b 84 24 98 00 00 00\n48 8b 4c 24 48\n48 89 41 30\n0f 10 44 24 68\n0f 10 4c 24 78\n0f 10 94 24 88 00 00 00\n0f 11 51 20\n0f 11 49 10\n0f 11 01\n4c 8b 34 24\neb 07\n49 c7 c6 ff ff ff ff\n4c 89 f0\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p40
S'.text:0000000000407070\n.text:0000000000407071\n.text:0000000000407073\n.text:0000000000407075\n.text:0000000000407077\n.text:0000000000407079\n.text:000000000040707a\n.text:0000000000407081\n.text:0000000000407086\n.text:000000000040708b\n.text:000000000040708e\n.text:0000000000407091\n.text:0000000000407095\n.text:0000000000407098\n.text:000000000040709c\n.text:00000000004070a0\n.text:00000000004070a3\n.text:00000000004070a7\n.text:00000000004070ae\n.text:00000000004070b1\n.text:00000000004070b5\n.text:00000000004070b9\n.text:00000000004070bb\n.text:00000000004070c2\n.text:00000000004070c5\n.text:00000000004070c7\n.text:00000000004070c9\n.text:00000000004070cc\n.text:00000000004070ce\n.text:00000000004070d2\n.text:00000000004070d5\n.text:00000000004070d8\n.text:00000000004070dd\n.text:00000000004070e1\n.text:00000000004070e4\n.text:00000000004070e9\n.text:00000000004070eb\n.text:00000000004070ed\n.text:00000000004070f0\n.text:00000000004070f3\n.text:00000000004070f5\n.text:00000000004070f9\n.text:00000000004070fb\n.text:00000000004070fe\n.text:0000000000407101\n.text:0000000000407109\n.text:000000000040710e\n.text:0000000000407113\n.text:0000000000407116\n.text:000000000040711b\n.text:0000000000407120\n.text:0000000000407124\n.text:0000000000407127\n.text:000000000040712c\n.text:000000000040712f\n.text:0000000000407134\n.text:0000000000407136\n.text:0000000000407138\n.text:000000000040713e\n.text:0000000000407141\n.text:0000000000407144\n.text:0000000000407149\n.text:000000000040714c\n.text:0000000000407150\n.text:0000000000407153\n.text:0000000000407154\n.text:0000000000407156\n.text:0000000000407158\n.text:000000000040715a\n.text:000000000040715f\n.text:0000000000407163\n.text:0000000000407168\n.text:000000000040716d\n.text:0000000000407171\n.text:0000000000407174\n.text:0000000000407179\n.text:000000000040717e\n.text:0000000000407181\n.text:0000000000407186\n.text:000000000040718a\n.text:000000000040718f\n.text:0000000000407192\n.text:0000000000407197\n.text:000000000040719a\n.text:000000000040719d\n.text:00000000004071a2\n.text:00000000004071a5\n.text:00000000004071a9\n.text:00000000004071ac\n.text:00000000004071b1\n.text:00000000004071b2\n.text:00000000004071b7\n.text:00000000004071bb\n.text:00000000004071bf\n.text:00000000004071c2\n.text:00000000004071c8\n.text:00000000004071ce\n.text:00000000004071d1\n.text:00000000004071d6\n.text:00000000004071e0\n.text:00000000004071e3\n.text:00000000004071e5\n.text:00000000004071ea\n.text:00000000004071ec\n.text:00000000004071f3\n.text:00000000004071f5\n.text:00000000004071fb\n.text:00000000004071ff\n.text:0000000000407201\n.text:0000000000407203\n.text:0000000000407205\n.text:0000000000407208\n.text:000000000040720a\n.text:000000000040720d\n.text:000000000040720f\n.text:0000000000407211\n.text:0000000000407216\n.text:0000000000407218\n.text:000000000040721a\n.text:000000000040721d\n.text:000000000040721f\n.text:0000000000407225\n.text:0000000000407230\n.text:0000000000407233\n.text:0000000000407239\n.text:000000000040723e\n.text:0000000000407242\n.text:0000000000407247\n.text:000000000040724b\n.text:000000000040724d\n.text:0000000000407255\n.text:0000000000407259\n.text:000000000040725c\n.text:000000000040725f\n.text:0000000000407264\n.text:0000000000407269\n.text:000000000040726d\n.text:0000000000407272\n.text:0000000000407277\n.text:000000000040727b\n.text:000000000040727e\n.text:0000000000407283\n.text:0000000000407286\n.text:0000000000407287\n.text:000000000040728c\n.text:0000000000407290\n.text:0000000000407294\n.text:0000000000407297\n.text:000000000040729d\n.text:00000000004072a4\n.text:00000000004072a8\n.text:00000000004072ad\n.text:00000000004072af\n.text:00000000004072b5\n.text:00000000004072ba\n.text:00000000004072bf\n.text:00000000004072c7\n.text:00000000004072ce\n.text:00000000004072d0\n.text:00000000004072d4\n.text:00000000004072d7\n.text:00000000004072db\n.text:00000000004072de\n.text:00000000004072e3\n.text:00000000004072e5\n.text:00000000004072e7\n.text:00000000004072eb\n.text:00000000004072f0\n.text:00000000004072f3\n.text:00000000004072f6\n.text:00000000004072f9\n.text:00000000004072fe\n.text:0000000000407305\n.text:0000000000407309\n.text:000000000040730e\n.text:0000000000407310\n.text:0000000000407312\n.text:0000000000407315\n.text:0000000000407319\n.text:000000000040731b\n.text:0000000000407322\n.text:0000000000407329\n.text:000000000040732b\n.text:000000000040732d\n.text:0000000000407331\n.text:0000000000407336\n.text:000000000040733b\n.text:0000000000407340\n.text:0000000000407344\n.text:0000000000407348\n.text:000000000040734d\n.text:000000000040734e\n.text:0000000000407353\n.text:0000000000407357\n.text:000000000040735b\n.text:000000000040735e\n.text:0000000000407363\n.text:0000000000407366\n.text:000000000040736b\n.text:000000000040736f\n.text:0000000000407374\n.text:0000000000407379\n.text:000000000040737c\n.text:0000000000407381\n.text:0000000000407384\n.text:0000000000407388\n.text:000000000040738d\n.text:000000000040738f\n.text:0000000000407391\n.text:0000000000407396\n.text:0000000000407399\n.text:000000000040739d\n.text:00000000004073a0\n.text:00000000004073a4\n.text:00000000004073a6\n.text:00000000004073ab\n.text:00000000004073b2\n.text:00000000004073b4\n.text:00000000004073b6\n.text:00000000004073b9\n.text:00000000004073bd\n.text:00000000004073c0\n.text:00000000004073c4\n.text:00000000004073c7\n.text:00000000004073c9\n.text:00000000004073ce\n.text:00000000004073d0\n.text:00000000004073d2\n.text:00000000004073d5\n.text:00000000004073d8\n.text:00000000004073dd\n.text:00000000004073e2\n.text:00000000004073e7\n.text:00000000004073ea\n.text:00000000004073ed\n.text:00000000004073ef\n.text:00000000004073f4\n.text:00000000004073f8\n.text:0000000000407400\n.text:0000000000407405\n.text:0000000000407409\n.text:000000000040740e\n.text:0000000000407413\n.text:000000000040741b\n.text:000000000040741f\n.text:0000000000407423\n.text:0000000000407426\n.text:000000000040742a\n.text:000000000040742c\n.text:0000000000407433\n.text:0000000000407436\n.text:000000000040743d\n.text:000000000040743e\n.text:0000000000407440\n.text:0000000000407442\n.text:0000000000407444\n.text:0000000000407446\n.text:0000000000407447\n'
p41
tp42
sS'strchr'
p43
(S'\n__stdcall strchr(char * __s, int __c)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_0060e0f0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x0060e0f0]\n'
p46
S'ff 25 fa c6 20 00\n'
p47
S'.plt:00000000004019f0\n'
p48
tp49
sS'apply_relative_time'
p50
(S'\n__stdcall apply_relative_time(parser_control * pc, relative_time rel)\n'
p51
V\u000avoid apply_relative_time(parser_control *pc,relative_time rel)\u000a\u000a{\u000a  long *plVar1;\u000a  long lVar2;\u000a  int in_ESI;\u000a  \u000a  lVar2 = (long)in_ESI;\u000a  plVar1 = &(pc->rel).ns;\u000a  *plVar1 = *plVar1 + rel.ns * lVar2;\u000a  plVar1 = &(pc->rel).seconds;\u000a  *plVar1 = *plVar1 + rel.seconds * lVar2;\u000a  plVar1 = &(pc->rel).minutes;\u000a  *plVar1 = *plVar1 + rel.minutes * lVar2;\u000a  plVar1 = &(pc->rel).hour;\u000a  *plVar1 = *plVar1 + rel.hour * lVar2;\u000a  plVar1 = &(pc->rel).day;\u000a  *plVar1 = *plVar1 + rel.day * lVar2;\u000a  plVar1 = &(pc->rel).month;\u000a  *plVar1 = *plVar1 + rel.month * lVar2;\u000a  (pc->rel).year = (pc->rel).year + lVar2 * rel.year;\u000a  pc->rels_seen = true;\u000a  return;\u000a}\u000a\u000a
p52
S'MOVSXD RAX,ESI\nMOV RCX,qword ptr [RSP + 0x38]\nIMUL RCX,RAX\nADD qword ptr [0xa0 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x30]\nIMUL RCX,RAX\nADD qword ptr [0x98 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x28]\nIMUL RCX,RAX\nADD qword ptr [0x90 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x20]\nIMUL RCX,RAX\nADD qword ptr [0x88 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x18]\nIMUL RCX,RAX\nADD qword ptr [0x80 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x10]\nIMUL RCX,RAX\nADD qword ptr [RDI + 0x78],RCX\nIMUL RAX,qword ptr [RSP + 0x8]\nADD qword ptr [RDI + 0x70],RAX\nMOV byte ptr [0xa9 + RDI],0x1\nRET\n'
p53
S'48 63 c6\n48 8b 4c 24 38\n48 0f af c8\n48 01 8f a0 00 00 00\n48 8b 4c 24 30\n48 0f af c8\n48 01 8f 98 00 00 00\n48 8b 4c 24 28\n48 0f af c8\n48 01 8f 90 00 00 00\n48 8b 4c 24 20\n48 0f af c8\n48 01 8f 88 00 00 00\n48 8b 4c 24 18\n48 0f af c8\n48 01 8f 80 00 00 00\n48 8b 4c 24 10\n48 0f af c8\n48 01 4f 78\n48 0f af 44 24 08\n48 01 47 70\nc6 87 a9 00 00 00 01\nc3\n'
p54
S'.text:0000000000403d20\n.text:0000000000403d23\n.text:0000000000403d28\n.text:0000000000403d2c\n.text:0000000000403d33\n.text:0000000000403d38\n.text:0000000000403d3c\n.text:0000000000403d43\n.text:0000000000403d48\n.text:0000000000403d4c\n.text:0000000000403d53\n.text:0000000000403d58\n.text:0000000000403d5c\n.text:0000000000403d63\n.text:0000000000403d68\n.text:0000000000403d6c\n.text:0000000000403d73\n.text:0000000000403d78\n.text:0000000000403d7c\n.text:0000000000403d80\n.text:0000000000403d86\n.text:0000000000403d8a\n.text:0000000000403d91\n'
p55
tp56
sS'rpl_fclose'
p57
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p58
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_00408b79;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_00408b79:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401b40\nTEST EAX,EAX\nJS 0x00408b79\nMOV RDI,RBX\nCALL 0x00401bd0\nTEST EAX,EAX\nJZ 0x00408b47\nMOV RDI,RBX\nCALL 0x00401b40\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x00401a20\nCMP RAX,-0x1\nJZ 0x00408b79\nMOV RDI,RBX\nCALL 0x00408b90\nTEST EAX,EAX\nJZ 0x00408b79\nCALL 0x00401890\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x00401940\nTEST EBP,EBP\nJZ 0x00408b72\nCALL 0x00401890\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401940\n'
p60
S'55\n53\n50\n48 89 fb\ne8 25 90 ff ff\n85 c0\n78 5a\n48 89 df\ne8 a9 90 ff ff\n85 c0\n74 1c\n48 89 df\ne8 0d 90 ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 df 8e ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 41 00 00 00\n85 c0\n74 26\ne8 38 8d ff ff\n8b 28\n48 89 df\ne8 de 8d ff ff\n85 ed\n74 0c\ne8 25 8d ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 b9 8d ff ff\n'
p61
S'.text:0000000000408b10\n.text:0000000000408b11\n.text:0000000000408b12\n.text:0000000000408b13\n.text:0000000000408b16\n.text:0000000000408b1b\n.text:0000000000408b1d\n.text:0000000000408b1f\n.text:0000000000408b22\n.text:0000000000408b27\n.text:0000000000408b29\n.text:0000000000408b2b\n.text:0000000000408b2e\n.text:0000000000408b33\n.text:0000000000408b35\n.text:0000000000408b3a\n.text:0000000000408b3c\n.text:0000000000408b41\n.text:0000000000408b45\n.text:0000000000408b47\n.text:0000000000408b4a\n.text:0000000000408b4f\n.text:0000000000408b51\n.text:0000000000408b53\n.text:0000000000408b58\n.text:0000000000408b5a\n.text:0000000000408b5d\n.text:0000000000408b62\n.text:0000000000408b64\n.text:0000000000408b66\n.text:0000000000408b6b\n.text:0000000000408b6d\n.text:0000000000408b72\n.text:0000000000408b76\n.text:0000000000408b77\n.text:0000000000408b78\n.text:0000000000408b79\n.text:0000000000408b7c\n.text:0000000000408b80\n.text:0000000000408b81\n.text:0000000000408b82\n'
p62
tp63
sS'to_uchar'
p64
(S'\n__stdcall to_uchar()\n'
p65
V\u000auchar to_uchar(void)\u000a\u000a{\u000a  uchar in_DIL;\u000a  \u000a  return in_DIL;\u000a}\u000a\u000a
p66
S'MOV EAX,EDI\nRET\n'
p67
S'89 f8\nc3\n'
p68
S'.text:0000000000404b70\n.text:0000000000404b72\n'
p69
tp70
sS'strncmp'
p71
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_0060e048)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x0060e048]\n'
p74
S'ff 25 a2 c7 20 00\n'
p75
S'.plt:00000000004018a0\n'
p76
tp77
sS'xnrealloc'
p78
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p79
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p80
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x00406e84\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x00406e90\nPUSH RAX\nCALL 0x00406fe0\n'
p81
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p82
S'.text:0000000000406e70\n.text:0000000000406e73\n.text:0000000000406e76\n.text:0000000000406e79\n.text:0000000000406e7b\n.text:0000000000406e7f\n.text:0000000000406e82\n.text:0000000000406e84\n.text:0000000000406e85\n'
p83
tp84
sS'quote'
p85
(S'\n__stdcall quote(char * arg)\n'
p86
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p87
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00406490\n'
p88
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p89
S'.text:00000000004064a0\n.text:00000000004064a3\n.text:00000000004064a5\n.text:00000000004064a8\n'
p90
tp91
sS'emit_bug_reporting_address'
p92
(S'\n__stdcall emit_bug_reporting_address()\n'
p93
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40b985\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40b99a\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401c20\nXOR EDI,EDI\nMOV ESI,0x40b9b0\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x409a03\nMOV ECX,0x409bf9\nXOR EAX,EAX\nCALL 0x00401c20\nXOR EDI,EDI\nMOV ESI,0x40b9c4\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401ac0\n'
p95
S'50\n31 ff\nbe 85 b9 40 00\nba 05 00 00 00\ne8 9e ab ff ff\n48 89 c1\nbf 01 00 00 00\nba 9a b9 40 00\n31 c0\n48 89 ce\ne8 47 ae ff ff\n31 ff\nbe b0 b9 40 00\nba 05 00 00 00\ne8 76 ab ff ff\n48 89 c6\nbf 01 00 00 00\nba 03 9a 40 00\nb9 f9 9b 40 00\n31 c0\ne8 1d ae ff ff\n31 ff\nbe c4 b9 40 00\nba 05 00 00 00\ne8 4c ab ff ff\n48 8b 35 0d 75 20 00\n48 89 c7\n58\ne9 9c ac ff ff\n'
p96
S'.text:0000000000406db0\n.text:0000000000406db1\n.text:0000000000406db3\n.text:0000000000406db8\n.text:0000000000406dbd\n.text:0000000000406dc2\n.text:0000000000406dc5\n.text:0000000000406dca\n.text:0000000000406dcf\n.text:0000000000406dd1\n.text:0000000000406dd4\n.text:0000000000406dd9\n.text:0000000000406ddb\n.text:0000000000406de0\n.text:0000000000406de5\n.text:0000000000406dea\n.text:0000000000406ded\n.text:0000000000406df2\n.text:0000000000406df7\n.text:0000000000406dfc\n.text:0000000000406dfe\n.text:0000000000406e03\n.text:0000000000406e05\n.text:0000000000406e0a\n.text:0000000000406e0f\n.text:0000000000406e14\n.text:0000000000406e1b\n.text:0000000000406e1e\n.text:0000000000406e1f\n'
p97
tp98
sS'clone_quoting_options'
p99
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p100
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p101
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401890\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x60e3c0\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00406f90\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p102
S'55\n41 56\n53\n48 89 fb\ne8 24 c8 ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 c0 e3 60 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 05 1f 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p103
S'.text:0000000000405060\n.text:0000000000405061\n.text:0000000000405063\n.text:0000000000405064\n.text:0000000000405067\n.text:000000000040506c\n.text:000000000040506f\n.text:0000000000405072\n.text:0000000000405075\n.text:000000000040507a\n.text:000000000040507e\n.text:0000000000405083\n.text:0000000000405086\n.text:000000000040508b\n.text:000000000040508e\n.text:000000000040508f\n.text:0000000000405091\n.text:0000000000405092\n'
p104
tp105
sS'get_stat_atime'
p106
(S'\n__stdcall get_stat_atime(stat * st)\n'
p107
V\u000atimespec get_stat_atime(stat *st)\u000a\u000a{\u000a  return st->st_atim;\u000a}\u000a\u000a
p108
S'MOV RAX,qword ptr [RDI + 0x48]\nMOV RDX,qword ptr [RDI + 0x50]\nRET\n'
p109
S'48 8b 47 48\n48 8b 57 50\nc3\n'
p110
S'.text:00000000004068f0\n.text:00000000004068f4\n.text:00000000004068f8\n'
p111
tp112
sS'xmalloc'
p113
(S'\n__stdcall xmalloc(size_t n)\n'
p114
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p115
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401b80\nTEST RBX,RBX\nJZ 0x00406e63\nTEST RAX,RAX\nJZ 0x00406e65\nPOP RBX\nRET\nCALL 0x00406fe0\n'
p116
S'53\n48 89 fb\ne8 27 ad ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p117
S'.text:0000000000406e50\n.text:0000000000406e51\n.text:0000000000406e54\n.text:0000000000406e59\n.text:0000000000406e5c\n.text:0000000000406e5e\n.text:0000000000406e61\n.text:0000000000406e63\n.text:0000000000406e64\n.text:0000000000406e65\n'
p118
tp119
sS'leapyear'
p120
(S'\n__stdcall leapyear(long_int year)\n'
p121
V\u000aint leapyear(long_int year)\u000a\u000a{\u000a  bool bVar1;\u000a  \u000a  if ((year & 3U) != 0) {\u000a    return 0;\u000a  }\u000a  bVar1 = true;\u000a  if (year == (year / 100 + (year >> 0x3f) +\u000a              SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * 100) {\u000a    bVar1 = (((uint)SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x46,0) & 0x3ffffff) +\u000a             SUB164(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0) & 3) == 1;\u000a  }\u000a  return (int)(uint)bVar1;\u000a}\u000a\u000a
p122
S'TEST DIL,0x3\nJZ 0x0040745c\nXOR EAX,EAX\nMOVZX EAX,AL\nRET\nMOV RCX,-0x5c28f5c28f5c28f5\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RDX,RDX,0x64\nMOV AL,0x1\nCMP RDI,RDX\nJNZ 0x004074a7\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSHR EDX,0x6\nADD EDX,EAX\nAND EDX,0x3\nCMP RDX,0x1\nSETZ AL\nMOVZX EAX,AL\nRET\n'
p123
S'40 f6 c7 03\n74 06\n31 c0\n0f b6 c0\nc3\n48 b9 0b d7 a3 70 3d 0a d7 a3\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b d2 64\nb0 01\n48 39 d7\n75 1f\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\nc1 ea 06\n01 c2\n83 e2 03\n48 83 fa 01\n0f 94 c0\n0f b6 c0\nc3\n'
p124
S'.text:0000000000407450\n.text:0000000000407454\n.text:0000000000407456\n.text:0000000000407458\n.text:000000000040745b\n.text:000000000040745c\n.text:0000000000407466\n.text:0000000000407469\n.text:000000000040746c\n.text:000000000040746f\n.text:0000000000407472\n.text:0000000000407476\n.text:000000000040747a\n.text:000000000040747d\n.text:0000000000407481\n.text:0000000000407483\n.text:0000000000407486\n.text:0000000000407488\n.text:000000000040748b\n.text:000000000040748e\n.text:0000000000407491\n.text:0000000000407494\n.text:0000000000407498\n.text:000000000040749b\n.text:000000000040749d\n.text:00000000004074a0\n.text:00000000004074a4\n.text:00000000004074a7\n.text:00000000004074aa\n'
p125
tp126
sS'clock_gettime'
p127
(S'\n__stdcall clock_gettime(clockid_t __clock_id, timespec * __tp)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint clock_gettime(clockid_t __clock_id,timespec *__tp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_clock_gettime_0060e080)();\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x0060e080]\n'
p130
S'ff 25 6a c7 20 00\n'
p131
S'.plt:0000000000401910\n'
p132
tp133
sS'quotearg_char_mem'
p134
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p135
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p136
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x0060e3f0]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x0060e3e0]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3d0]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3c0]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x004050c0\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405fb0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p137
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d 18 81 20 00\n48 89 4c 24 30\n0f 10 05 fc 80 20 00\n0f 29 44 24 20\n0f 10 05 e0 80 20 00\n0f 29 44 24 10\n0f 10 05 c4 80 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p138
S'.text:00000000004062c0\n.text:00000000004062c2\n.text:00000000004062c4\n.text:00000000004062c5\n.text:00000000004062c9\n.text:00000000004062cb\n.text:00000000004062ce\n.text:00000000004062d1\n.text:00000000004062d8\n.text:00000000004062dd\n.text:00000000004062e4\n.text:00000000004062e9\n.text:00000000004062f0\n.text:00000000004062f5\n.text:00000000004062fc\n.text:0000000000406300\n.text:0000000000406303\n.text:0000000000406308\n.text:000000000040630b\n.text:000000000040630d\n.text:0000000000406312\n.text:0000000000406314\n.text:0000000000406317\n.text:000000000040631a\n.text:000000000040631d\n.text:0000000000406322\n.text:0000000000406326\n.text:0000000000406327\n.text:0000000000406329\n.text:000000000040632b\n'
p139
tp140
sS'frame_dummy'
p141
(S'\n__stdcall frame_dummy()\n'
p142
V\u000a/* WARNING: Removing unreachable block (ram,0x00401e1a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p143
S'MOV EDI,0x60de18\nCMP qword ptr [RDI],0x0\nJNZ 0x00401e10\nJMP 0x00401da0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401e0b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401da0\n'
p144
S'bf 18 de 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p145
S'.text:0000000000401e00\n.text:0000000000401e05\n.text:0000000000401e09\n.text:0000000000401e0b\n.text:0000000000401e10\n.text:0000000000401e15\n.text:0000000000401e18\n.text:0000000000401e1a\n.text:0000000000401e1b\n.text:0000000000401e1e\n.text:0000000000401e20\n.text:0000000000401e21\n'
p146
tp147
sS'yylex'
p148
(S'\n__stdcall yylex(YYSTYPE * lvalp, parser_control * pc)\n'
p149
V\u000aint yylex(YYSTYPE *lvalp,parser_control *pc)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  _Bool _Var4;\u000a  byte bVar5;\u000a  int iVar6;\u000a  long lVar7;\u000a  table *ptVar8;\u000a  int iVar9;\u000a  char *pcVar10;\u000a  char *pcVar11;\u000a  ulong uVar12;\u000a  byte *pbVar13;\u000a  ulong uVar14;\u000a  byte bVar15;\u000a  uint uVar16;\u000a  int iVar17;\u000a  char buff [20];\u000a  byte local_48 [19];\u000a  byte local_35 [5];\u000a  \u000a  pbVar13 = local_48;\u000aLAB_00403980:\u000a  do {\u000a    bVar5 = *pc->input;\u000a    while (_Var4 = c_isspace(), _Var4 != false) {\u000a      pcVar10 = pc->input;\u000a      pc->input = pcVar10 + 1;\u000a      bVar5 = pcVar10[1];\u000a    }\u000a    if ((uint)bVar5 - 0x30 < 10) {\u000a      if ((bVar5 != 0x2d) && (bVar5 != 0x2b)) {\u000a        iVar9 = 0;\u000a        bVar15 = bVar5;\u000a        break;\u000a      }\u000a    }\u000a    else {\u000a      if ((bVar5 != 0x2b) && (bVar5 != 0x2d)) {\u000a        _Var4 = c_isalpha();\u000a        if (_Var4 != false) {\u000a          do {\u000a            if (pbVar13 < local_35) {\u000a              *pbVar13 = bVar5;\u000a              pbVar13 = pbVar13 + 1;\u000a            }\u000a            pcVar10 = pc->input;\u000a            pc->input = pcVar10 + 1;\u000a            bVar5 = pcVar10[1];\u000a            _Var4 = c_isalpha();\u000a          } while ((_Var4 != false) || (bVar5 == 0x2e));\u000a          *pbVar13 = 0;\u000a          ptVar8 = lookup_word(pc,(char *)local_48);\u000a          if (ptVar8 == (table *)0x0) {\u000a            return 0x3f;\u000a          }\u000a          *(long *)*lvalp = (long)ptVar8->value;\u000a          return ptVar8->type;\u000a        }\u000a        if (bVar5 != 0x28) {\u000a          pc->input = pc->input + 1;\u000a          bVar5 = to_uchar();\u000a          return (uint)bVar5;\u000a        }\u000a        lVar7 = 0;\u000a        do {\u000a          pcVar10 = pc->input;\u000a          pc->input = pcVar10 + 1;\u000a          cVar1 = *pcVar10;\u000a          if (cVar1 == '(') {\u000a            lVar7 = lVar7 + 1;\u000a          }\u000a          else {\u000a            if (cVar1 == ')') {\u000a              lVar7 = lVar7 + -1;\u000a            }\u000a            else {\u000a              if (cVar1 == 0) {\u000a                return 0;\u000a              }\u000a            }\u000a          }\u000a        } while (lVar7 != 0);\u000a        goto LAB_00403980;\u000a      }\u000a    }\u000a    do {\u000a      pcVar10 = pc->input;\u000a      pc->input = pcVar10 + 1;\u000a      bVar15 = pcVar10[1];\u000a      _Var4 = c_isspace();\u000a    } while (_Var4 != false);\u000a    iVar9 = 1;\u000a    if (bVar5 == 0x2d) {\u000a      iVar9 = -1;\u000a    }\u000a  } while (9 < (uint)bVar15 - 0x30);\u000a  pcVar10 = pc->input;\u000a  uVar14 = 0;\u000a  while (uVar12 = (uVar14 - 0x30) + (ulong)bVar15, uVar14 <= uVar12) {\u000a    bVar15 = pcVar10[1];\u000a    pcVar10 = pcVar10 + 1;\u000a    bVar2 = (uint)bVar15 - 0x30 < 10;\u000a    bVar3 = bVar2 && 0x1999999999999999 < uVar12;\u000a    if (bVar2 && 0x1999999999999999 < uVar12) goto LAB_00403a95;\u000a    uVar14 = uVar12 * 10;\u000a  }\u000a  bVar3 = true;\u000a  uVar12 = uVar14;\u000aLAB_00403a95:\u000a  if (bVar3 != true) {\u000a    return 0x3f;\u000a  }\u000a  if (((bVar15 | 2) != 0x2e) || (9 < (int)pcVar10[1] - 0x30U)) {\u000a    (*lvalp)[0] = (byte)((uint)iVar9 >> 0x1f);\u000a    if (iVar9 < 0) {\u000a      *(ulong *)(*lvalp + 8) = -uVar12;\u000a      if (-uVar12 != 0 && (long)uVar12 < 1) {\u000a        return 0x3f;\u000a      }\u000a    }\u000a    else {\u000a      *(ulong *)(*lvalp + 8) = uVar12;\u000a      if ((long)uVar12 < 0) {\u000a        return 0x3f;\u000a      }\u000a    }\u000a    *(char **)(*lvalp + 0x10) = pcVar10 + -(long)pc->input;\u000a    pc->input = pcVar10;\u000a    return (uint)(iVar9 == 0) | 0x112;\u000a  }\u000a  if (iVar9 < 0) {\u000a    uVar14 = -uVar12;\u000a    if (uVar14 != 0 && (long)uVar12 < 1) {\u000a      return 0x3f;\u000a    }\u000a  }\u000a  else {\u000a    uVar14 = uVar12;\u000a    if ((long)uVar12 < 0) {\u000a      return 0x3f;\u000a    }\u000a  }\u000a  pcVar11 = pcVar10 + 2;\u000a  iVar17 = (int)pcVar10[1] + -0x30;\u000a  iVar6 = 8;\u000a  do {\u000a    uVar16 = (int)*pcVar11 - 0x30;\u000a    pcVar10 = pcVar11 + 1;\u000a    if (9 < uVar16) {\u000a      uVar16 = 0;\u000a      pcVar10 = pcVar11;\u000a    }\u000a    pcVar11 = pcVar10;\u000a    iVar17 = uVar16 + iVar17 * 10;\u000a    iVar6 = iVar6 + -1;\u000a  } while (iVar6 != 0);\u000a  if (iVar9 < 0) {\u000a    cVar1 = *pcVar11;\u000a    while ((int)cVar1 - 0x30U < 10) {\u000a      if (cVar1 != '0') {\u000a        iVar17 = iVar17 + 1;\u000a        break;\u000a      }\u000a      cVar1 = pcVar11[1];\u000a      pcVar11 = pcVar11 + 1;\u000a    }\u000a  }\u000a  pcVar11 = pcVar11 + -1;\u000a  do {\u000a    pcVar10 = pcVar11 + 1;\u000a    pcVar11 = pcVar11 + 1;\u000a  } while ((int)*pcVar10 - 0x30U < 10);\u000a  if ((iVar9 < 0) && (iVar17 != 0)) {\u000a    if (0 < (long)uVar14) {\u000a      return 0x3f;\u000a    }\u000a    uVar14 = uVar14 - 1;\u000a    iVar17 = 1000000000 - iVar17;\u000a  }\u000a  *(ulong *)*lvalp = uVar14;\u000a  *(long *)(*lvalp + 8) = (long)iVar17;\u000a  pc->input = pcVar11;\u000a  return (uint)(iVar9 == 0) | 0x114;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R15,RSI\nMOV R14,RDI\nMOV R13D,0xffffffff\nJMP 0x00403980\nMOV EDI,EBX\nCALL 0x00407b50\nTEST AL,AL\nJNZ 0x00403ae3\nCMP R12B,0x28\nJNZ 0x00403b7c\nXOR EAX,EAX\nNOP word ptr [RAX + RAX*0x1]\nMOV RCX,qword ptr [R15]\nLEA RDX,[RCX + 0x1]\nMOV qword ptr [R15],RDX\nMOVZX ECX,byte ptr [RCX]\nCMP CL,0x28\nJZ 0x00403960\nCMP CL,0x29\nJZ 0x00403970\nTEST CL,CL\nJNZ 0x00403973\nJMP 0x00403a18\nINC RAX\nJMP 0x00403973\nDEC RAX\nTEST RAX,RAX\nJNZ 0x00403940\nNOP dword ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [R15]\nMOV R12B,byte ptr [RAX]\nJMP 0x0040399f\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOVZX R12D,byte ptr [RAX + 0x1]\nMOVZX EBX,R12B\nMOV EDI,EBX\nCALL 0x00407c00\nTEST AL,AL\nJNZ 0x00403990\nLEA EAX,[RBX + -0x30]\nCMP EAX,0xa\nJNC 0x004039d0\nCMP R12B,0x2d\nJZ 0x004039e0\nCMP R12B,0x2b\nJZ 0x004039e0\nJMP 0x00403a1f\nCMP R12B,0x2b\nJZ 0x004039e0\nCMP R12B,0x2d\nJNZ 0x0040391c\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOV BPL,byte ptr [RAX + 0x1]\nMOVZX EBX,BPL\nMOV EDI,EBX\nCALL 0x00407c00\nTEST AL,AL\nJNZ 0x004039e0\nCMP R12B,0x2d\nMOV ECX,0x1\nCMOVZ ECX,R13D\nADD EBX,-0x30\nCMP EBX,0x9\nJA 0x00403980\nJMP 0x00403a24\nXOR EAX,EAX\nJMP 0x00403c56\nXOR ECX,ECX\nMOV BPL,R12B\nMOV RDX,qword ptr [R15]\nXOR ESI,ESI\nMOV RAX,0x1999999999999999\nJMP 0x00403a47\nADD RBX,RBX\nLEA RSI,[RBX + RBX*0x4]\nMOVZX EDI,BPL\nLEA RBX,[RSI + RDI*0x1 + -0x30]\nMOV EDI,0x1\nCMP RBX,RSI\nJNC 0x00403a70\nMOV RBX,RSI\nAND DIL,0xf\nJZ 0x00403a40\nJMP 0x00403a95\nMOVZX EBP,byte ptr [RDX + 0x1]\nINC RDX\nMOV ESI,EBP\nADD ESI,-0x30\nMOV EDI,0x8\nCMP ESI,0x9\nJA 0x00403a8f\nXOR EDI,EDI\nCMP RBX,RAX\nSETA DIL\nAND DIL,0xf\nJZ 0x00403a40\nCMP DIL,0x8\nJNZ 0x00403b3f\nOR BPL,0x2\nCMP BPL,0x2e\nJNZ 0x00403ac8\nMOVSX EAX,byte ptr [RDX + 0x1]\nADD EAX,-0x30\nCMP EAX,0x9\nJA 0x00403ac8\nTEST ECX,ECX\nJS 0x00403b96\nTEST RBX,RBX\nJNS 0x00403ba7\nJMP 0x00403b3f\nMOV EAX,ECX\nSHR EAX,0x1f\nMOV byte ptr [R14],AL\nTEST ECX,ECX\nJS 0x00403b49\nMOV qword ptr [R14 + 0x8],RBX\nTEST RBX,RBX\nJNS 0x00403b5e\nJMP 0x00403b3f\nMOV RBX,RSP\nLEA RBP,[RSP + 0x13]\nNOP dword ptr [RAX + RAX*0x1]\nCMP RBX,RBP\nJNC 0x00403afb\nMOV byte ptr [RBX],R12B\nINC RBX\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOVZX R12D,byte ptr [RAX + 0x1]\nMOVZX EDI,R12B\nCALL 0x00407b50\nTEST AL,AL\nJNZ 0x00403af0\nCMP R12B,0x2e\nJZ 0x00403af0\nMOV byte ptr [RBX],0x0\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x00404940\nTEST RAX,RAX\nJZ 0x00403b3f\nMOVSXD RCX,dword ptr [RAX + 0xc]\nMOV qword ptr [R14],RCX\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x00403c56\nMOV EAX,0x3f\nJMP 0x00403c56\nNEG RBX\nMOV qword ptr [R14 + 0x8],RBX\nMOV EAX,0x3f\nTEST RBX,RBX\nJG 0x00403c56\nMOV RAX,RDX\nSUB RAX,qword ptr [R15]\nMOV qword ptr [R14 + 0x10],RAX\nMOV qword ptr [R15],RDX\nXOR EAX,EAX\nTEST ECX,ECX\nSETZ AL\nOR EAX,0x112\nJMP 0x00403c56\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOVSX EDI,byte ptr [RAX]\nCALL 0x00404b70\nMOVZX EAX,AL\nJMP 0x00403c56\nNEG RBX\nMOV EAX,0x3f\nTEST RBX,RBX\nJG 0x00403c56\nMOVSX EDI,byte ptr [RDX + 0x1]\nADD RDX,0x2\nADD EDI,-0x30\nMOV EAX,0x8\nXOR R8D,R8D\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,RDX\nLEA EDI,[RDI + RDI*0x4]\nMOVSX EBP,byte ptr [RSI]\nADD EBP,-0x30\nLEA RDX,[RSI + 0x1]\nCMP EBP,0xa\nCMOVNC RDX,RSI\nCMOVNC EBP,R8D\nLEA EDI,[RBP + RDI*0x2]\nDEC EAX\nJNZ 0x00403bc0\nTEST ECX,ECX\nJNS 0x00403c0b\nMOVSX EAX,byte ptr [RDX]\nLEA ESI,[RAX + -0x30]\nCMP ESI,0x9\nJA 0x00403c0b\nCMP AL,0x30\nJNZ 0x00403c09\nMOVSX EAX,byte ptr [RDX + 0x1]\nINC RDX\nMOV ESI,EAX\nADD ESI,-0x30\nCMP ESI,0xa\nJC 0x00403bf2\nJMP 0x00403c0b\nINC EDI\nDEC RDX\nNOP\nMOVSX EAX,byte ptr [RDX + 0x1]\nINC RDX\nADD EAX,-0x30\nCMP EAX,0xa\nJC 0x00403c10\nTEST ECX,ECX\nJNS 0x00403c3d\nTEST EDI,EDI\nJZ 0x00403c3d\nMOV EAX,0x3f\nTEST RBX,RBX\nJG 0x00403c56\nDEC RBX\nMOV EAX,0x3b9aca00\nSUB EAX,EDI\nMOV EDI,EAX\nMOV qword ptr [R14],RBX\nMOVSXD RAX,EDI\nMOV qword ptr [R14 + 0x8],RAX\nMOV qword ptr [R15],RDX\nXOR EAX,EAX\nTEST ECX,ECX\nSETZ AL\nOR EAX,0x114\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p151
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 f7\n49 89 fe\n41 bd ff ff ff ff\neb 64\n89 df\ne8 2d 42 00 00\n84 c0\n0f 85 b8 01 00 00\n41 80 fc 28\n0f 85 47 02 00 00\n31 c0\n66 0f 1f 84 00 00 00 00 00\n49 8b 0f\n48 8d 51 01\n49 89 17\n0f b6 09\n80 f9 28\n74 0e\n80 f9 29\n74 19\n84 c9\n75 18\ne9 b8 00 00 00\n48 ff c0\neb 0e\n48 ff c8\n48 85 c0\n75 c8\n0f 1f 84 00 00 00 00 00\n49 8b 07\n44 8a 20\neb 17\n49 8b 07\n48 8d 48 01\n49 89 0f\n44 0f b6 60 01\n41 0f b6 dc\n89 df\ne8 56 42 00 00\n84 c0\n75 e2\n8d 43 d0\n83 f8 0a\n73 1a\n41 80 fc 2d\n74 24\n41 80 fc 2b\n74 1e\neb 5b\n41 80 fc 2b\n74 0a\n41 80 fc 2d\n0f 85 3c ff ff ff\n49 8b 07\n48 8d 48 01\n49 89 0f\n40 8a 68 01\n40 0f b6 dd\n89 df\ne8 07 42 00 00\n84 c0\n75 e3\n41 80 fc 2d\nb9 01 00 00 00\n41 0f 44 cd\n83 c3 d0\n83 fb 09\n0f 87 6a ff ff ff\neb 0c\n31 c0\ne9 37 02 00 00\n31 c9\n44 88 e5\n49 8b 17\n31 f6\n48 b8 99 99 99 99 99 99 99 19\neb 12\n48 01 db\n48 8d 34 9b\n40 0f b6 fd\n48 8d 5c 3e d0\nbf 01 00 00 00\n48 39 f3\n73 16\n48 89 f3\n40 80 e7 0f\n74 dd\neb 30\n0f b6 6a 01\n48 ff c2\n89 ee\n83 c6 d0\nbf 08 00 00 00\n83 fe 09\n77 09\n31 ff\n48 39 c3\n40 0f 97 c7\n40 80 e7 0f\n74 ab\n40 80 ff 08\n0f 85 a0 00 00 00\n40 80 cd 02\n40 80 fd 2e\n75 1f\n0f be 42 01\n83 c0 d0\n83 f8 09\n77 13\n85 c9\n0f 88 d9 00 00 00\n48 85 db\n0f 89 e1 00 00 00\neb 77\n89 c8\nc1 e8 1f\n41 88 06\n85 c9\n78 75\n49 89 5e 08\n48 85 db\n0f 89 7d 00 00 00\neb 5c\n48 89 e3\n48 8d 6c 24 13\n0f 1f 44 00 00\n48 39 eb\n73 06\n44 88 23\n48 ff c3\n49 8b 07\n48 8d 48 01\n49 89 0f\n44 0f b6 60 01\n41 0f b6 fc\ne8 3d 40 00 00\n84 c0\n75 d9\n41 80 fc 2e\n74 d3\nc6 03 00\n48 89 e6\n4c 89 ff\ne8 15 0e 00 00\n48 85 c0\n74 0f\n48 63 48 0c\n49 89 0e\n8b 40 08\ne9 17 01 00 00\nb8 3f 00 00 00\ne9 0d 01 00 00\n48 f7 db\n49 89 5e 08\nb8 3f 00 00 00\n48 85 db\n0f 8f f8 00 00 00\n48 89 d0\n49 2b 07\n49 89 46 10\n49 89 17\n31 c0\n85 c9\n0f 94 c0\n0d 12 01 00 00\ne9 da 00 00 00\n49 8b 07\n48 8d 48 01\n49 89 0f\n0f be 38\ne8 e2 0f 00 00\n0f b6 c0\ne9 c0 00 00 00\n48 f7 db\nb8 3f 00 00 00\n48 85 db\n0f 8f af 00 00 00\n0f be 7a 01\n48 83 c2 02\n83 c7 d0\nb8 08 00 00 00\n45 31 c0\n66 0f 1f 44 00 00\n48 89 d6\n8d 3c bf\n0f be 2e\n83 c5 d0\n48 8d 56 01\n83 fd 0a\n48 0f 43 d6\n41 0f 43 e8\n8d 7c 7d 00\nff c8\n75 dd\n85 c9\n79 24\n0f be 02\n8d 70 d0\n83 fe 09\n77 19\n3c 30\n75 13\n0f be 42 01\n48 ff c2\n89 c6\n83 c6 d0\n83 fe 0a\n72 eb\neb 02\nff c7\n48 ff ca\n66 90\n0f be 42 01\n48 ff c2\n83 c0 d0\n83 f8 0a\n72 f1\n85 c9\n79 1a\n85 ff\n74 16\nb8 3f 00 00 00\n48 85 db\n7f 25\n48 ff cb\nb8 00 ca 9a 3b\n29 f8\n89 c7\n49 89 1e\n48 63 c7\n49 89 46 08\n49 89 17\n31 c0\n85 c9\n0f 94 c0\n0d 14 01 00 00\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p152
S'.text:0000000000403900\n.text:0000000000403901\n.text:0000000000403903\n.text:0000000000403905\n.text:0000000000403907\n.text:0000000000403909\n.text:000000000040390a\n.text:000000000040390e\n.text:0000000000403911\n.text:0000000000403914\n.text:000000000040391a\n.text:000000000040391c\n.text:000000000040391e\n.text:0000000000403923\n.text:0000000000403925\n.text:000000000040392b\n.text:000000000040392f\n.text:0000000000403935\n.text:0000000000403937\n.text:0000000000403940\n.text:0000000000403943\n.text:0000000000403947\n.text:000000000040394a\n.text:000000000040394d\n.text:0000000000403950\n.text:0000000000403952\n.text:0000000000403955\n.text:0000000000403957\n.text:0000000000403959\n.text:000000000040395b\n.text:0000000000403960\n.text:0000000000403963\n.text:0000000000403970\n.text:0000000000403973\n.text:0000000000403976\n.text:0000000000403978\n.text:0000000000403980\n.text:0000000000403983\n.text:0000000000403986\n.text:0000000000403990\n.text:0000000000403993\n.text:0000000000403997\n.text:000000000040399a\n.text:000000000040399f\n.text:00000000004039a3\n.text:00000000004039a5\n.text:00000000004039aa\n.text:00000000004039ac\n.text:00000000004039ae\n.text:00000000004039b1\n.text:00000000004039b4\n.text:00000000004039b6\n.text:00000000004039ba\n.text:00000000004039bc\n.text:00000000004039c0\n.text:00000000004039c2\n.text:00000000004039d0\n.text:00000000004039d4\n.text:00000000004039d6\n.text:00000000004039da\n.text:00000000004039e0\n.text:00000000004039e3\n.text:00000000004039e7\n.text:00000000004039ea\n.text:00000000004039ee\n.text:00000000004039f2\n.text:00000000004039f4\n.text:00000000004039f9\n.text:00000000004039fb\n.text:00000000004039fd\n.text:0000000000403a01\n.text:0000000000403a06\n.text:0000000000403a0a\n.text:0000000000403a0d\n.text:0000000000403a10\n.text:0000000000403a16\n.text:0000000000403a18\n.text:0000000000403a1a\n.text:0000000000403a1f\n.text:0000000000403a21\n.text:0000000000403a24\n.text:0000000000403a27\n.text:0000000000403a29\n.text:0000000000403a33\n.text:0000000000403a40\n.text:0000000000403a43\n.text:0000000000403a47\n.text:0000000000403a4b\n.text:0000000000403a50\n.text:0000000000403a55\n.text:0000000000403a58\n.text:0000000000403a5a\n.text:0000000000403a5d\n.text:0000000000403a61\n.text:0000000000403a63\n.text:0000000000403a70\n.text:0000000000403a74\n.text:0000000000403a77\n.text:0000000000403a79\n.text:0000000000403a7c\n.text:0000000000403a81\n.text:0000000000403a84\n.text:0000000000403a86\n.text:0000000000403a88\n.text:0000000000403a8b\n.text:0000000000403a8f\n.text:0000000000403a93\n.text:0000000000403a95\n.text:0000000000403a99\n.text:0000000000403a9f\n.text:0000000000403aa3\n.text:0000000000403aa7\n.text:0000000000403aa9\n.text:0000000000403aad\n.text:0000000000403ab0\n.text:0000000000403ab3\n.text:0000000000403ab5\n.text:0000000000403ab7\n.text:0000000000403abd\n.text:0000000000403ac0\n.text:0000000000403ac6\n.text:0000000000403ac8\n.text:0000000000403aca\n.text:0000000000403acd\n.text:0000000000403ad0\n.text:0000000000403ad2\n.text:0000000000403ad4\n.text:0000000000403ad8\n.text:0000000000403adb\n.text:0000000000403ae1\n.text:0000000000403ae3\n.text:0000000000403ae6\n.text:0000000000403aeb\n.text:0000000000403af0\n.text:0000000000403af3\n.text:0000000000403af5\n.text:0000000000403af8\n.text:0000000000403afb\n.text:0000000000403afe\n.text:0000000000403b02\n.text:0000000000403b05\n.text:0000000000403b0a\n.text:0000000000403b0e\n.text:0000000000403b13\n.text:0000000000403b15\n.text:0000000000403b17\n.text:0000000000403b1b\n.text:0000000000403b1d\n.text:0000000000403b20\n.text:0000000000403b23\n.text:0000000000403b26\n.text:0000000000403b2b\n.text:0000000000403b2e\n.text:0000000000403b30\n.text:0000000000403b34\n.text:0000000000403b37\n.text:0000000000403b3a\n.text:0000000000403b3f\n.text:0000000000403b44\n.text:0000000000403b49\n.text:0000000000403b4c\n.text:0000000000403b50\n.text:0000000000403b55\n.text:0000000000403b58\n.text:0000000000403b5e\n.text:0000000000403b61\n.text:0000000000403b64\n.text:0000000000403b68\n.text:0000000000403b6b\n.text:0000000000403b6d\n.text:0000000000403b6f\n.text:0000000000403b72\n.text:0000000000403b77\n.text:0000000000403b7c\n.text:0000000000403b7f\n.text:0000000000403b83\n.text:0000000000403b86\n.text:0000000000403b89\n.text:0000000000403b8e\n.text:0000000000403b91\n.text:0000000000403b96\n.text:0000000000403b99\n.text:0000000000403b9e\n.text:0000000000403ba1\n.text:0000000000403ba7\n.text:0000000000403bab\n.text:0000000000403baf\n.text:0000000000403bb2\n.text:0000000000403bb7\n.text:0000000000403bba\n.text:0000000000403bc0\n.text:0000000000403bc3\n.text:0000000000403bc6\n.text:0000000000403bc9\n.text:0000000000403bcc\n.text:0000000000403bd0\n.text:0000000000403bd3\n.text:0000000000403bd7\n.text:0000000000403bdb\n.text:0000000000403bdf\n.text:0000000000403be1\n.text:0000000000403be3\n.text:0000000000403be5\n.text:0000000000403be7\n.text:0000000000403bea\n.text:0000000000403bed\n.text:0000000000403bf0\n.text:0000000000403bf2\n.text:0000000000403bf4\n.text:0000000000403bf6\n.text:0000000000403bfa\n.text:0000000000403bfd\n.text:0000000000403bff\n.text:0000000000403c02\n.text:0000000000403c05\n.text:0000000000403c07\n.text:0000000000403c09\n.text:0000000000403c0b\n.text:0000000000403c0e\n.text:0000000000403c10\n.text:0000000000403c14\n.text:0000000000403c17\n.text:0000000000403c1a\n.text:0000000000403c1d\n.text:0000000000403c1f\n.text:0000000000403c21\n.text:0000000000403c23\n.text:0000000000403c25\n.text:0000000000403c27\n.text:0000000000403c2c\n.text:0000000000403c2f\n.text:0000000000403c31\n.text:0000000000403c34\n.text:0000000000403c39\n.text:0000000000403c3b\n.text:0000000000403c3d\n.text:0000000000403c40\n.text:0000000000403c43\n.text:0000000000403c47\n.text:0000000000403c4a\n.text:0000000000403c4c\n.text:0000000000403c4e\n.text:0000000000403c51\n.text:0000000000403c56\n.text:0000000000403c5a\n.text:0000000000403c5b\n.text:0000000000403c5d\n.text:0000000000403c5f\n.text:0000000000403c61\n.text:0000000000403c63\n.text:0000000000403c64\n'
p153
tp154
sS'gettimeofday'
p155
(S'\n__stdcall gettimeofday(timeval * __tv, __timezone_ptr_t __tz)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_gettimeofday_0060e110)();\u000a  return iVar1;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x0060e110]\n'
p158
S'ff 25 da c6 20 00\n'
p159
S'.plt:0000000000401a30\n'
p160
tp161
sS'rpl_utimensat'
p162
(S'\n__stdcall rpl_utimensat(char * file, timespec * times)\n'
p163
V\u000aint rpl_utimensat(char *file,timespec *times)\u000a\u000a{\u000a  long lVar1;\u000a  int utimensat_works_really;\u000a  int iVar2;\u000a  int __fd;\u000a  int *piVar3;\u000a  uint __flag;\u000a  timespec *__times;\u000a  timespec ts [2];\u000a  timespec local_d8;\u000a  timespec local_c8;\u000a  stat local_b8;\u000a  \u000a  if (-1 < utimensat_works_really) {\u000a    __fd = (int)(char *)((ulong)file & 0xffffffff);\u000a    if (__times == (timespec *)0x0) {\u000a      __times = (timespec *)0x0;\u000a    }\u000a    else {\u000a      if ((__times->tv_nsec == 0x3ffffffe) ||\u000a         (local_d8 = (timespec)CONCAT88(local_d8.tv_nsec,local_d8.tv_sec),\u000a         local_c8 = (timespec)CONCAT88(local_c8.tv_nsec,local_c8.tv_sec),\u000a         __times[1].tv_nsec == 0x3ffffffe)) {\u000a        iVar2 = fstatat(__fd,(char *)times,(stat *)&local_b8,__flag);\u000a        if (iVar2 != 0) {\u000a          return -1;\u000a        }\u000a        if (__times->tv_nsec == 0x3ffffffe) {\u000a          if (__times[1].tv_nsec == 0x3ffffffe) {\u000a            return 0;\u000a          }\u000a          local_d8 = (timespec)get_stat_atime(&local_b8);\u000a          lVar1 = __times[1].tv_nsec;\u000a        }\u000a        else {\u000a          local_d8 = *__times;\u000a          lVar1 = __times[1].tv_nsec;\u000a        }\u000a        if (lVar1 == 0x3ffffffe) {\u000a          local_c8 = (timespec)get_stat_mtime(&local_b8);\u000a          __times = &local_d8;\u000a        }\u000a        else {\u000a          local_c8 = __times[1];\u000a          __times = &local_d8;\u000a        }\u000a      }\u000a    }\u000a    __fd = utimensat(__fd,(char *)times,__times,__flag);\u000a    if (__fd == 0) {\u000a      return 0;\u000a    }\u000a    if (__fd == -1) {\u000a      piVar3 = __errno_location();\u000a      if (((__flag & 0xfffffeff) != 0) && (*piVar3 == 0x16)) {\u000a        return -1;\u000a      }\u000a    }\u000a    piVar3 = __errno_location();\u000a    if ((*piVar3 != 0x16) && (*piVar3 != 0x26)) {\u000a      return __fd;\u000a    }\u000a    if (-1 < utimensat_works_really) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x26) {\u000a        utimensat_works_really = -1;\u000a      }\u000a    }\u000a  }\u000a  __fd = local_utimensat((char *)((ulong)file & 0xffffffff),times);\u000a  return __fd;\u000a}\u000a\u000a
p164
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0xb0\nMOV R12D,ECX\nMOV RBP,RDX\nMOV R14,RSI\nMOV R15D,EDI\nCMP dword ptr [0x0060e508],0x0\nJS 0x004078fd\nTEST RBP,RBP\nJZ 0x00407860\nCMP qword ptr [RBP + 0x8],0x3ffffffe\nJZ 0x00407805\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJNZ 0x00407898\nLEA RDX,[RSP + 0x20]\nMOV EDI,R15D\nMOV RSI,R14\nMOV ECX,R12D\nCALL 0x004091a0\nMOV ECX,EAX\nMOV EAX,0xffffffff\nTEST ECX,ECX\nJNZ 0x0040791c\nCMP qword ptr [RBP + 0x8],0x3ffffffe\nJNZ 0x00407864\nXOR EAX,EAX\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJZ 0x0040791c\nLEA RDI,[RSP + 0x20]\nCALL 0x004068f0\nMOV qword ptr [RSP],RAX\nMOV qword ptr [RSP + 0x8],RDX\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJZ 0x00407876\nJMP 0x0040788c\nXOR EBP,EBP\nJMP 0x00407898\nMOVUPS XMM0,xmmword ptr [RBP]\nMOVAPS xmmword ptr [RSP],XMM0\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJNZ 0x0040788c\nLEA RDI,[RSP + 0x20]\nCALL 0x00406910\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],RDX\nJMP 0x00407895\nMOVUPS XMM0,xmmword ptr [RBP + 0x10]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOV RBP,RSP\nMOV EDI,R15D\nMOV RSI,R14\nMOV RDX,RBP\nMOV ECX,R12D\nCALL 0x00401860\nMOV EBX,EAX\nTEST EBX,EBX\nJZ 0x00407910\nCMP EBX,-0x1\nJNZ 0x004078cf\nCALL 0x00401890\nMOV RCX,RAX\nTEST R12D,0xfffffeff\nJZ 0x004078cf\nMOV EAX,0xffffffff\nCMP dword ptr [RCX],0x16\nJZ 0x0040791c\nCALL 0x00401890\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x16\nJZ 0x004078e0\nCMP EAX,0x26\nJNZ 0x00407910\nCMP dword ptr [0x0060e508],0x0\nJS 0x004078fd\nCALL 0x00401890\nCMP dword ptr [RAX],0x26\nJNZ 0x004078fd\nMOV dword ptr [0x0060e508],0xffffffff\nMOV EDI,R15D\nMOV RSI,R14\nMOV RDX,RBP\nMOV ECX,R12D\nCALL 0x00407930\nJMP 0x0040791c\nMOV dword ptr [0x0060e508],0x1\nMOV EAX,EBX\nADD RSP,0xb0\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p165
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec b0 00 00 00\n41 89 cc\n48 89 d5\n49 89 f6\n41 89 ff\n83 3d 26 6d 20 00 00\n0f 88 15 01 00 00\n48 85 ed\n74 73\n48 81 7d 08 fe ff ff 3f\n74 0e\n48 81 7d 18 fe ff ff 3f\n0f 85 93 00 00 00\n48 8d 54 24 20\n44 89 ff\n4c 89 f6\n44 89 e1\ne8 88 19 00 00\n89 c1\nb8 ff ff ff ff\n85 c9\n0f 85 f5 00 00 00\n48 81 7d 08 fe ff ff 3f\n75 33\n31 c0\n48 81 7d 18 fe ff ff 3f\n0f 84 db 00 00 00\n48 8d 7c 24 20\ne8 a5 f0 ff ff\n48 89 04 24\n48 89 54 24 08\n48 81 7d 18 fe ff ff 3f\n74 18\neb 2c\n31 ed\neb 34\n0f 10 45 00\n0f 29 04 24\n48 81 7d 18 fe ff ff 3f\n75 16\n48 8d 7c 24 20\ne8 90 f0 ff ff\n48 89 44 24 10\n48 89 54 24 18\neb 09\n0f 10 45 10\n0f 29 44 24 10\n48 89 e5\n44 89 ff\n4c 89 f6\n48 89 ea\n44 89 e1\ne8 b7 9f ff ff\n89 c3\n85 db\n74 61\n83 fb ff\n75 1b\ne8 d7 9f ff ff\n48 89 c1\n41 f7 c4 ff fe ff ff\n74 0a\nb8 ff ff ff ff\n83 39 16\n74 4d\ne8 bc 9f ff ff\n8b 00\n83 f8 16\n74 05\n83 f8 26\n75 30\n83 3d 21 6c 20 00 00\n78 14\ne8 a2 9f ff ff\n83 38 26\n75 0a\nc7 05 0b 6c 20 00 ff ff ff ff\n44 89 ff\n4c 89 f6\n48 89 ea\n44 89 e1\ne8 22 00 00 00\neb 0c\nc7 05 ee 6b 20 00 01 00 00 00\n89 d8\n48 81 c4 b0 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p166
S'.text:00000000004077c0\n.text:00000000004077c1\n.text:00000000004077c3\n.text:00000000004077c5\n.text:00000000004077c7\n.text:00000000004077c8\n.text:00000000004077cf\n.text:00000000004077d2\n.text:00000000004077d5\n.text:00000000004077d8\n.text:00000000004077db\n.text:00000000004077e2\n.text:00000000004077e8\n.text:00000000004077eb\n.text:00000000004077ed\n.text:00000000004077f5\n.text:00000000004077f7\n.text:00000000004077ff\n.text:0000000000407805\n.text:000000000040780a\n.text:000000000040780d\n.text:0000000000407810\n.text:0000000000407813\n.text:0000000000407818\n.text:000000000040781a\n.text:000000000040781f\n.text:0000000000407821\n.text:0000000000407827\n.text:000000000040782f\n.text:0000000000407831\n.text:0000000000407833\n.text:000000000040783b\n.text:0000000000407841\n.text:0000000000407846\n.text:000000000040784b\n.text:000000000040784f\n.text:0000000000407854\n.text:000000000040785c\n.text:000000000040785e\n.text:0000000000407860\n.text:0000000000407862\n.text:0000000000407864\n.text:0000000000407868\n.text:000000000040786c\n.text:0000000000407874\n.text:0000000000407876\n.text:000000000040787b\n.text:0000000000407880\n.text:0000000000407885\n.text:000000000040788a\n.text:000000000040788c\n.text:0000000000407890\n.text:0000000000407895\n.text:0000000000407898\n.text:000000000040789b\n.text:000000000040789e\n.text:00000000004078a1\n.text:00000000004078a4\n.text:00000000004078a9\n.text:00000000004078ab\n.text:00000000004078ad\n.text:00000000004078af\n.text:00000000004078b2\n.text:00000000004078b4\n.text:00000000004078b9\n.text:00000000004078bc\n.text:00000000004078c3\n.text:00000000004078c5\n.text:00000000004078ca\n.text:00000000004078cd\n.text:00000000004078cf\n.text:00000000004078d4\n.text:00000000004078d6\n.text:00000000004078d9\n.text:00000000004078db\n.text:00000000004078de\n.text:00000000004078e0\n.text:00000000004078e7\n.text:00000000004078e9\n.text:00000000004078ee\n.text:00000000004078f1\n.text:00000000004078f3\n.text:00000000004078fd\n.text:0000000000407900\n.text:0000000000407903\n.text:0000000000407906\n.text:0000000000407909\n.text:000000000040790e\n.text:0000000000407910\n.text:000000000040791a\n.text:000000000040791c\n.text:0000000000407923\n.text:0000000000407924\n.text:0000000000407926\n.text:0000000000407928\n.text:000000000040792a\n.text:000000000040792b\n'
p167
tp168
sS'find_non_slash'
p169
(S'\n__stdcall find_non_slash(char * s)\n'
p170
V\u000achar * find_non_slash(char *s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strspn(s,"/");\u000a  return s + sVar1;\u000a}\u000a\u000a
p171
S'PUSH RBX\nMOV RBX,RDI\nMOV ESI,0x40bff7\nCALL 0x00401a90\nADD RAX,RBX\nPOP RBX\nRET\n'
p172
S'53\n48 89 fb\nbe f7 bf 40 00\ne8 d2 8f ff ff\n48 01 d8\n5b\nc3\n'
p173
S'.text:0000000000408ab0\n.text:0000000000408ab1\n.text:0000000000408ab4\n.text:0000000000408ab9\n.text:0000000000408abe\n.text:0000000000408ac1\n.text:0000000000408ac2\n'
p174
tp175
sS'quotearg_n_style_colon'
p176
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p177
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p178
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x004061e0\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x004050c0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x00405fb0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p179
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p180
S'.text:0000000000406360\n.text:0000000000406361\n.text:0000000000406363\n.text:0000000000406364\n.text:0000000000406368\n.text:000000000040636b\n.text:000000000040636d\n.text:0000000000406372\n.text:0000000000406375\n.text:000000000040637a\n.text:000000000040637f\n.text:0000000000406384\n.text:0000000000406387\n.text:000000000040638c\n.text:0000000000406393\n.text:0000000000406395\n.text:0000000000406398\n.text:000000000040639b\n.text:00000000004063a0\n.text:00000000004063a4\n.text:00000000004063a5\n.text:00000000004063a7\n.text:00000000004063a8\n'
p181
tp182
sS'get_stat_birthtime_ns'
p183
(S'\n__stdcall get_stat_birthtime_ns(stat * st)\n'
p184
V\u000along get_stat_birthtime_ns(stat *st)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p185
S'XOR EAX,EAX\nRET\n'
p186
S'31 c0\nc3\n'
p187
S'.text:00000000004068e0\n.text:00000000004068e2\n'
p188
tp189
sS'time_zone_hhmm'
p190
(S'\n__stdcall time_zone_hhmm(parser_control * pc, textint s, long mm)\n'
p191
V\u000along time_zone_hhmm(parser_control *pc,textint s,long mm)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  \u000a  if ((mm < 0) && (s.digits < 3)) {\u000a    s.value = s.value * 100;\u000a  }\u000a  if (mm < 0) {\u000a    lVar3 = s.value + (s.value / 100 + (s.value >> 0x3f) +\u000a                      SUB168(SEXT816(s.value) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * -0x28;\u000a  }\u000a  else {\u000a    lVar3 = -mm;\u000a    if (s.negative == false) {\u000a      lVar3 = mm;\u000a    }\u000a    lVar3 = lVar3 + s.value * 0x3c;\u000a  }\u000a  iVar2 = (int)lVar3;\u000a  iVar1 = -iVar2;\u000a  if (0 < iVar2) {\u000a    iVar1 = iVar2;\u000a  }\u000a  if (0x5a0 < iVar1) {\u000a    pc->zones_seen = pc->zones_seen + 1;\u000a  }\u000a  return lVar3;\u000a}\u000a\u000a
p192
S'LEA RAX,[RSP + 0x8]\nTEST RSI,RSI\nJNS 0x00403cab\nCMP qword ptr [RSP + 0x18],0x2\nJA 0x00403cab\nIMUL RCX,qword ptr [RAX + 0x8],0x64\nMOV qword ptr [RAX + 0x8],RCX\nMOV RCX,qword ptr [RAX + 0x8]\nTEST RSI,RSI\nJS 0x00403cca\nIMUL RDX,RCX,0x3c\nMOV RCX,RSI\nNEG RCX\nCMP byte ptr [RAX],0x0\nCMOVZ RCX,RSI\nADD RCX,RDX\nJMP 0x00403cf9\nMOV RDX,-0x5c28f5c28f5c28f5\nMOV RAX,RCX\nIMUL RDX\nADD RDX,RCX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RAX,RDX,0x3c\nIMUL RDX,RDX,0x64\nSUB RCX,RDX\nADD RCX,RAX\nMOV EAX,ECX\nNEG EAX\nCMOVL EAX,ECX\nCMP EAX,0x5a1\nJL 0x00403d0e\nINC qword ptr [0xd8 + RDI]\nMOV RAX,RCX\nRET\n'
p193
S'48 8d 44 24 08\n48 85 f6\n79 11\n48 83 7c 24 18 02\n77 09\n48 6b 48 08 64\n48 89 48 08\n48 8b 48 08\n48 85 f6\n78 16\n48 6b d1 3c\n48 89 f1\n48 f7 d9\n80 38 00\n48 0f 44 ce\n48 01 d1\neb 2f\n48 ba 0b d7 a3 70 3d 0a d7 a3\n48 89 c8\n48 f7 ea\n48 01 ca\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b c2 3c\n48 6b d2 64\n48 29 d1\n48 01 c1\n89 c8\nf7 d8\n0f 4c c1\n3d a1 05 00 00\n7c 07\n48 ff 87 d8 00 00 00\n48 89 c8\nc3\n'
p194
S'.text:0000000000403c90\n.text:0000000000403c95\n.text:0000000000403c98\n.text:0000000000403c9a\n.text:0000000000403ca0\n.text:0000000000403ca2\n.text:0000000000403ca7\n.text:0000000000403cab\n.text:0000000000403caf\n.text:0000000000403cb2\n.text:0000000000403cb4\n.text:0000000000403cb8\n.text:0000000000403cbb\n.text:0000000000403cbe\n.text:0000000000403cc1\n.text:0000000000403cc5\n.text:0000000000403cc8\n.text:0000000000403cca\n.text:0000000000403cd4\n.text:0000000000403cd7\n.text:0000000000403cda\n.text:0000000000403cdd\n.text:0000000000403ce0\n.text:0000000000403ce4\n.text:0000000000403ce8\n.text:0000000000403ceb\n.text:0000000000403cef\n.text:0000000000403cf3\n.text:0000000000403cf6\n.text:0000000000403cf9\n.text:0000000000403cfb\n.text:0000000000403cfd\n.text:0000000000403d00\n.text:0000000000403d05\n.text:0000000000403d07\n.text:0000000000403d0e\n.text:0000000000403d11\n'
p195
tp196
sS'fdutimensat'
p197
(S'\n__stdcall fdutimensat(char * file, timespec * ts)\n'
p198
V\u000aint fdutimensat(char *file,timespec *ts)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  timespec *times;\u000a  int iVar3;\u000a  \u000a  iVar3 = (int)(timespec *)((ulong)file & 0xffffffff);\u000a  if (iVar3 < 0) {\u000a    iVar1 = 1;\u000a  }\u000a  else {\u000a    iVar1 = rpl_futimens((timespec *)((ulong)file & 0xffffffff));\u000a  }\u000a  if (times != (timespec *)0x0) {\u000a    if (-1 < iVar3) {\u000a      if (iVar1 != -1) goto LAB_00402db1;\u000a      piVar2 = __errno_location();\u000a      if (*piVar2 != 0x26) {\u000a        return -1;\u000a      }\u000a    }\u000a    iVar1 = rpl_utimensat((char *)((ulong)ts & 0xffffffff),times);\u000a  }\u000aLAB_00402db1:\u000a  if (iVar1 == 1) {\u000a    piVar2 = __errno_location();\u000a    *piVar2 = 9;\u000a    iVar1 = -1;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p199
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R12,RCX\nMOV RBP,RDX\nMOV R15D,ESI\nMOV EBX,EDI\nTEST EBX,EBX\nJS 0x00402d7b\nMOV EDI,EBX\nMOV RSI,R12\nCALL 0x00407060\nTEST RBP,RBP\nJNZ 0x00402d85\nJMP 0x00402db1\nMOV EAX,0x1\nTEST RBP,RBP\nJZ 0x00402db1\nTEST EBX,EBX\nJS 0x00402da0\nCMP EAX,-0x1\nJNZ 0x00402db1\nCALL 0x00401890\nMOV RCX,RAX\nMOV EAX,0xffffffff\nCMP dword ptr [RCX],0x26\nJNZ 0x00402dc6\nMOV EDI,R15D\nMOV RSI,RBP\nMOV RDX,R12\nMOV ECX,R14D\nCALL 0x004077c0\nCMP EAX,0x1\nJNZ 0x00402dc6\nCALL 0x00401890\nMOV dword ptr [RAX],0x9\nMOV EAX,0xffffffff\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p200
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n49 89 cc\n48 89 d5\n41 89 f7\n89 fb\n85 db\n78 11\n89 df\n4c 89 e6\ne8 ec 42 00 00\n48 85 ed\n75 0c\neb 36\nb8 01 00 00 00\n48 85 ed\n74 2c\n85 db\n78 17\n83 f8 ff\n75 23\ne8 fd ea ff ff\n48 89 c1\nb8 ff ff ff ff\n83 39 26\n75 26\n44 89 ff\n48 89 ee\n4c 89 e2\n44 89 f1\ne8 0f 4a 00 00\n83 f8 01\n75 10\ne8 d5 ea ff ff\nc7 00 09 00 00 00\nb8 ff ff ff ff\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p201
S'.text:0000000000402d50\n.text:0000000000402d51\n.text:0000000000402d53\n.text:0000000000402d55\n.text:0000000000402d57\n.text:0000000000402d58\n.text:0000000000402d5b\n.text:0000000000402d5e\n.text:0000000000402d61\n.text:0000000000402d64\n.text:0000000000402d66\n.text:0000000000402d68\n.text:0000000000402d6a\n.text:0000000000402d6c\n.text:0000000000402d6f\n.text:0000000000402d74\n.text:0000000000402d77\n.text:0000000000402d79\n.text:0000000000402d7b\n.text:0000000000402d80\n.text:0000000000402d83\n.text:0000000000402d85\n.text:0000000000402d87\n.text:0000000000402d89\n.text:0000000000402d8c\n.text:0000000000402d8e\n.text:0000000000402d93\n.text:0000000000402d96\n.text:0000000000402d9b\n.text:0000000000402d9e\n.text:0000000000402da0\n.text:0000000000402da3\n.text:0000000000402da6\n.text:0000000000402da9\n.text:0000000000402dac\n.text:0000000000402db1\n.text:0000000000402db4\n.text:0000000000402db6\n.text:0000000000402dbb\n.text:0000000000402dc1\n.text:0000000000402dc6\n.text:0000000000402dc7\n.text:0000000000402dc9\n.text:0000000000402dcb\n.text:0000000000402dcd\n.text:0000000000402dce\n'
p202
tp203
sS'posixtime'
p204
(S'\n__stdcall posixtime(time_t * p, char * s)\n'
p205
V\u000a_Bool posixtime(time_t *p,char *s)\u000a\u000a{\u000a  _Bool _Var1;\u000a  undefined *puVar2;\u000a  tm *tp;\u000a  tm tm0;\u000a  time_t dummy;\u000a  tm tm1;\u000a  char buf [16];\u000a  time_t local_c0;\u000a  uint local_b8;\u000a  uint local_b4;\u000a  uint local_b0;\u000a  uint local_ac;\u000a  uint local_a8;\u000a  uint local_a4;\u000a  int iStack160;\u000a  int iStack156;\u000a  undefined4 uStack148;\u000a  undefined4 uStack144;\u000a  undefined4 uStack140;\u000a  char *local_88;\u000a  time_t local_80;\u000a  uint local_78;\u000a  uint local_74;\u000a  uint local_70;\u000a  uint local_6c;\u000a  uint local_68;\u000a  uint local_64;\u000a  int iStack96;\u000a  int iStack92;\u000a  int local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  char *local_48;\u000a  char local_38 [24];\u000a  \u000a  _Var1 = posix_time_parse((tm *)&local_b8,s);\u000a  if (_Var1 != false) {\u000a    local_48 = local_88;\u000a    uStack84 = uStack148;\u000a    uStack80 = uStack144;\u000a    uStack76 = uStack140;\u000a    local_68 = local_a8;\u000a    local_64 = local_a4;\u000a    iStack96 = iStack160;\u000a    iStack92 = iStack156;\u000a    local_78 = local_b8;\u000a    local_74 = local_b4;\u000a    local_70 = local_b0;\u000a    local_6c = local_ac;\u000a    local_58 = -1;\u000a    tp = (tm *)&local_78;\u000a    local_c0 = rpl_mktime(tp);\u000a    if ((local_c0 != -1) || (tp = (tm *)localtime(&local_c0), tp != (tm *)0x0)) {\u000a      if ((tp->tm_sec ^ local_b8 |\u000a          tp->tm_min ^ local_b4 |\u000a          tp->tm_hour ^ local_b0 | tp->tm_mday ^ local_ac |\u000a          tp->tm_mon ^ local_a8 | tp->tm_year ^ local_a4) == 0) {\u000aLAB_00404d27:\u000a        *p = local_c0;\u000a        return true;\u000a      }\u000a      if (local_b8 == 0x3c) {\u000a        puVar2 = (undefined *)__stpcpy_chk(local_38,s,0x10);\u000a        *puVar2 = 0;\u000a        *(undefined2 *)(puVar2 + -2) = 0x3935;\u000a        _Var1 = posixtime(&local_80,local_38);\u000a        if (_Var1 != false) goto LAB_00404d27;\u000a      }\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p206
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xa8\nMOV R15D,EDX\nMOV RBX,RSI\nMOV R14,RDI\nLEA RDI,[RSP + 0x10]\nCALL 0x00404d50\nTEST AL,AL\nJZ 0x00404d33\nMOV RAX,qword ptr [RSP + 0x40]\nMOV qword ptr [0x80 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x10]\nMOVUPS XMM1,xmmword ptr [RSP + 0x20]\nMOVUPS XMM2,xmmword ptr [RSP + 0x30]\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOV dword ptr [RSP + 0x70],0xffffffff\nLEA RBP,[RSP + 0x50]\nMOV RDI,RBP\nCALL 0x00407770\nMOV qword ptr [RSP + 0x8],RAX\nCMP RAX,-0x1\nJNZ 0x00404cb5\nLEA RDI,[RSP + 0x8]\nCALL 0x00401870\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00404d33\nMOV EAX,dword ptr [RBP + 0x14]\nXOR EAX,dword ptr [RSP + 0x24]\nMOV ECX,dword ptr [RBP + 0x10]\nXOR ECX,dword ptr [RSP + 0x20]\nOR ECX,EAX\nMOV EAX,dword ptr [RBP + 0xc]\nXOR EAX,dword ptr [RSP + 0x1c]\nMOV EDX,dword ptr [RBP + 0x4]\nMOV ESI,dword ptr [RBP + 0x8]\nXOR ESI,dword ptr [RSP + 0x18]\nOR ESI,EAX\nOR ESI,ECX\nXOR EDX,dword ptr [RSP + 0x14]\nOR EDX,ESI\nMOV EAX,dword ptr [RSP + 0x10]\nMOV ECX,dword ptr [RBP]\nXOR ECX,EAX\nOR ECX,EDX\nJZ 0x00404d27\nCMP EAX,0x3c\nJNZ 0x00404d33\nLEA RBP,[0x90 + RSP]\nMOV EDX,0x10\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x00401b50\nMOV byte ptr [RAX],0x0\nMOV word ptr [RAX + -0x2],0x3935\nLEA RDI,[RSP + 0x48]\nMOV RSI,RBP\nMOV EDX,R15D\nCALL 0x00404c30\nTEST AL,AL\nJZ 0x00404d33\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [R14],RAX\nMOV AL,0x1\nJMP 0x00404d35\nXOR EAX,EAX\nADD RSP,0xa8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p207
S'55\n41 57\n41 56\n53\n48 81 ec a8 00 00 00\n41 89 d7\n48 89 f3\n49 89 fe\n48 8d 7c 24 10\ne8 00 01 00 00\n84 c0\n0f 84 db 00 00 00\n48 8b 44 24 40\n48 89 84 24 80 00 00 00\n0f 10 44 24 10\n0f 10 4c 24 20\n0f 10 54 24 30\n0f 29 54 24 70\n0f 29 4c 24 60\n0f 29 44 24 50\nc7 44 24 70 ff ff ff ff\n48 8d 6c 24 50\n48 89 ef\ne8 d8 2a 00 00\n48 89 44 24 08\n48 83 f8 ff\n75 12\n48 8d 7c 24 08\ne8 c3 cb ff ff\n48 89 c5\n48 85 ed\n74 7e\n8b 45 14\n33 44 24 24\n8b 4d 10\n33 4c 24 20\n09 c1\n8b 45 0c\n33 44 24 1c\n8b 55 04\n8b 75 08\n33 74 24 18\n09 c6\n09 ce\n33 54 24 14\n09 f2\n8b 44 24 10\n8b 4d 00\n31 c1\n09 d1\n74 3a\n83 f8 3c\n75 41\n48 8d ac 24 90 00 00 00\nba 10 00 00 00\n48 89 ef\n48 89 de\ne8 46 ce ff ff\nc6 00 00\n66 c7 40 fe 35 39\n48 8d 7c 24 48\n48 89 ee\n44 89 fa\ne8 0d ff ff ff\n84 c0\n74 0c\n48 8b 44 24 08\n49 89 06\nb0 01\neb 02\n31 c0\n48 81 c4 a8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p208
S'.text:0000000000404c30\n.text:0000000000404c31\n.text:0000000000404c33\n.text:0000000000404c35\n.text:0000000000404c36\n.text:0000000000404c3d\n.text:0000000000404c40\n.text:0000000000404c43\n.text:0000000000404c46\n.text:0000000000404c4b\n.text:0000000000404c50\n.text:0000000000404c52\n.text:0000000000404c58\n.text:0000000000404c5d\n.text:0000000000404c65\n.text:0000000000404c6a\n.text:0000000000404c6f\n.text:0000000000404c74\n.text:0000000000404c79\n.text:0000000000404c7e\n.text:0000000000404c83\n.text:0000000000404c8b\n.text:0000000000404c90\n.text:0000000000404c93\n.text:0000000000404c98\n.text:0000000000404c9d\n.text:0000000000404ca1\n.text:0000000000404ca3\n.text:0000000000404ca8\n.text:0000000000404cad\n.text:0000000000404cb0\n.text:0000000000404cb3\n.text:0000000000404cb5\n.text:0000000000404cb8\n.text:0000000000404cbc\n.text:0000000000404cbf\n.text:0000000000404cc3\n.text:0000000000404cc5\n.text:0000000000404cc8\n.text:0000000000404ccc\n.text:0000000000404ccf\n.text:0000000000404cd2\n.text:0000000000404cd6\n.text:0000000000404cd8\n.text:0000000000404cda\n.text:0000000000404cde\n.text:0000000000404ce0\n.text:0000000000404ce4\n.text:0000000000404ce7\n.text:0000000000404ce9\n.text:0000000000404ceb\n.text:0000000000404ced\n.text:0000000000404cf0\n.text:0000000000404cf2\n.text:0000000000404cfa\n.text:0000000000404cff\n.text:0000000000404d02\n.text:0000000000404d05\n.text:0000000000404d0a\n.text:0000000000404d0d\n.text:0000000000404d13\n.text:0000000000404d18\n.text:0000000000404d1b\n.text:0000000000404d1e\n.text:0000000000404d23\n.text:0000000000404d25\n.text:0000000000404d27\n.text:0000000000404d2c\n.text:0000000000404d2f\n.text:0000000000404d31\n.text:0000000000404d33\n.text:0000000000404d35\n.text:0000000000404d3c\n.text:0000000000404d3d\n.text:0000000000404d3f\n.text:0000000000404d41\n.text:0000000000404d42\n'
p209
tp210
sS'quote_mem'
p211
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p212
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p213
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00406470\n'
p214
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p215
S'.text:0000000000406480\n.text:0000000000406483\n.text:0000000000406486\n.text:0000000000406488\n.text:000000000040648b\n.text:000000000040648e\n'
p216
tp217
sS'fileno'
p218
(S'\n__stdcall fileno(FILE * __stream)\n'
p219
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_0060e198)();\u000a  return iVar1;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x0060e198]\n'
p221
S'ff 25 52 c6 20 00\n'
p222
S'.plt:0000000000401b40\n'
p223
tp224
sS'yyparse'
p225
(S'\n__stdcall yyparse(parser_control * pc)\n'
p226
V\u000aint yyparse(parser_control *pc)\u000a\u000a{\u000a  textint *ptVar1;\u000a  char cVar2;\u000a  long lVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  ulong uVar7;\u000a  long lVar8;\u000a  long local_568;\u000a  ulong uVar9;\u000a  relative_time *prVar10;\u000a  long lVar11;\u000a  uint uVar12;\u000a  long lVar13;\u000a  long lVar14;\u000a  long lVar15;\u000a  long_time_t lVar16;\u000a  long lVar17;\u000a  relative_time *prVar18;\u000a  YYSTYPE yylval;\u000a  yytype_int16 yyssa [20];\u000a  YYSTYPE yyvsa [20];\u000a  undefined4 local_598;\u000a  undefined4 uVar19;\u000a  undefined4 uVar20;\u000a  undefined4 uVar21;\u000a  undefined4 uVar22;\u000a  undefined4 uVar23;\u000a  undefined4 uVar24;\u000a  undefined4 uVar25;\u000a  undefined4 local_578;\u000a  undefined4 uVar26;\u000a  undefined4 uVar27;\u000a  undefined4 uVar28;\u000a  long local_530;\u000a  undefined4 local_508;\u000a  undefined4 uStack1284;\u000a  undefined4 local_500;\u000a  undefined4 uStack1276;\u000a  undefined4 local_4f8;\u000a  undefined4 uStack1268;\u000a  undefined4 uStack1264;\u000a  undefined4 uStack1260;\u000a  undefined4 local_4e8;\u000a  undefined4 uStack1252;\u000a  undefined4 uStack1248;\u000a  undefined4 uStack1244;\u000a  long local_4d8;\u000a  short local_4c8 [24];\u000a  relative_time local_498 [20];\u000a  \u000a  local_4e8 = 0;\u000a  uStack1252 = 0;\u000a  uStack1248 = 0;\u000a  uStack1244 = 0;\u000a  local_4f8 = 0;\u000a  uStack1268 = 0;\u000a  uStack1264 = 0;\u000a  uStack1260 = 0;\u000a  local_508 = 0;\u000a  uStack1284 = 0;\u000a  local_500 = 0;\u000a  uStack1276 = 0;\u000a  local_4d8 = 0;\u000a  local_4c8[0] = 0;\u000a  ptVar1 = &pc->year;\u000a  uVar4 = 0xfffffffe;\u000a  uVar7 = 0;\u000a  lVar17 = 0;\u000a  prVar18 = local_498;\u000aLAB_004038d0:\u000a  iVar6 = (int)uVar7;\u000a  if (iVar6 == 0xc) {\u000a    return 0;\u000a  }\u000a  cVar2 = yypact[(long)iVar6];\u000a  if ((int)cVar2 != -0x5d) {\u000a    if (uVar4 == 0xfffffffe) {\u000a      uVar4 = yylex((YYSTYPE *)&local_508,pc);\u000a    }\u000a    if ((int)uVar4 < 1) {\u000a      uVar5 = 0;\u000a      uVar4 = 0;\u000a    }\u000a    else {\u000a      uVar5 = 2;\u000a      if (uVar4 < 0x116) {\u000a        uVar5 = (uint)""[(long)(int)uVar4];\u000a      }\u000a    }\u000a    uVar12 = (int)cVar2 + uVar5;\u000a    if ((0x70 < uVar12) ||\u000a       (uVar9 = SEXT48((int)uVar12),\u000a       (int)\u000a            "\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx04\u005cf\u005cx0ff\u005cx0f\u005cx10\u005cx13\u005cx0f\u005cx13\u005cx13\u005cx14\u005cx13\u005cx19p\u005cx19\u005cx13\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx13\u005cx13\u005cx13k\u005cx13\u005cx14\u005cx19\u005cx19\u005cx19q\u005cx13\u005cx14\u005cx15\u005cx16\u005cx19\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cv\u005cf\u005cr\u005cx0e\u005cx17\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16`\u005cx18\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn"\u000a            [uVar9] != uVar5)) goto LAB_00402f10;\u000a    uVar7 = (ulong)\u000a                   "OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\u005c\u005coZ[jpXo\u005cx05\u005cx06\u005ca\u005cbX\u005cr\u005cx0e\u005cx0f\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16\u005cx01\u005cx17\u005cx18\u005cx19\u005cx1a\u005cx1b\u005cx1c\u005cx1dO\u005cx1e345678\u005cf9=>?@AB<0P/\u005cx06S\u005cbQR\u005cx1aTUVW^_`Yiabc"\u000a                   [uVar9];\u000a    if ((uVar9 | 4) == 0x6f) {\u000a      uVar5 = -(uint)\u000a                     "OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\u005c\u005coZ[jpXo\u005cx05\u005cx06\u005ca\u005cbX\u005cr\u005cx0e\u005cx0f\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16\u005cx01\u005cx17\u005cx18\u005cx19\u005cx1a\u005cx1b\u005cx1c\u005cx1dO\u005cx1e345678\u005cf9=>?@AB<0P/\u005cx06S\u005cbQR\u005cx1aTUVW^_`Yiabc"\u000a                     [uVar9];\u000a      goto LAB_00402f1f;\u000a    }\u000a    prVar18[1].ns = local_4d8;\u000a    *(undefined4 *)&prVar18[1].minutes = local_4e8;\u000a    *(undefined4 *)((long)&prVar18[1].minutes + 4) = uStack1252;\u000a    *(undefined4 *)&prVar18[1].seconds = uStack1248;\u000a    *(undefined4 *)((long)&prVar18[1].seconds + 4) = uStack1244;\u000a    *(undefined4 *)&prVar18[1].day = local_4f8;\u000a    *(undefined4 *)((long)&prVar18[1].day + 4) = uStack1268;\u000a    *(undefined4 *)&prVar18[1].hour = uStack1264;\u000a    *(undefined4 *)((long)&prVar18[1].hour + 4) = uStack1260;\u000a    *(undefined4 *)&prVar18[1].year = local_508;\u000a    *(undefined4 *)((long)&prVar18[1].year + 4) = uStack1284;\u000a    *(undefined4 *)&prVar18[1].month = local_500;\u000a    *(undefined4 *)((long)&prVar18[1].month + 4) = uStack1276;\u000a    prVar10 = prVar18 + 1;\u000a    uVar4 = 0xfffffffe;\u000a    goto LAB_00403767;\u000a  }\u000aLAB_00402f10:\u000a  uVar5 = (uint)"\u005cx05"[(long)iVar6];\u000a  if ("\u005cx05"[(long)iVar6] == 0) {\u000a    return 1;\u000a  }\u000aLAB_00402f1f:\u000a  uVar7 = (ulong)""[(long)(int)uVar5];\u000a  lVar8 = 1 - uVar7;\u000a  lVar14 = prVar18[lVar8].year;\u000a  lVar13 = prVar18[lVar8].month;\u000a  lVar11 = prVar18[lVar8].day;\u000a  local_530 = prVar18[lVar8].hour;\u000a  lVar15 = prVar18[lVar8].minutes;\u000a  lVar16 = prVar18[lVar8].seconds;\u000a  lVar8 = prVar18[lVar8].ns;\u000a  switch(uVar5) {\u000a  case 4:\u000a    local_598 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->month;\u000a    local_578 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    *(undefined4 *)&(pc->seconds).tv_sec = *(undefined4 *)&prVar18->year;\u000a    *(undefined4 *)((long)&(pc->seconds).tv_sec + 4) = local_598;\u000a    *(undefined4 *)&(pc->seconds).tv_nsec = uVar22;\u000a    *(undefined4 *)((long)&(pc->seconds).tv_nsec + 4) = local_578;\u000a    pc->timespec_seen = true;\u000a    break;\u000a  case 7:\u000a    pc->times_seen = pc->times_seen + 1;\u000a    pc->dates_seen = pc->dates_seen + 1;\u000a    break;\u000a  case 8:\u000a    pc->times_seen = pc->times_seen + 1;\u000a    break;\u000a  case 9:\u000a    pc->local_zones_seen = pc->local_zones_seen + 1;\u000a    break;\u000a  case 10:\u000a    pc->zones_seen = pc->zones_seen + 1;\u000a    break;\u000a  case 0xb:\u000a    pc->dates_seen = pc->dates_seen + 1;\u000a    break;\u000a  case 0xc:\u000a    pc->days_seen = pc->days_seen + 1;\u000a    break;\u000a  case 0x12:\u000a    set_hhmmss(pc,prVar18[-1].hour,0,0,0);\u000a    goto LAB_0040333c;\u000a  case 0x13:\u000a    set_hhmmss(pc,prVar18[-3].hour,prVar18[-1].hour,0,0);\u000a    goto LAB_0040333c;\u000a  case 0x14:\u000a    set_hhmmss(pc,prVar18[-5].hour,prVar18[-3].hour,prVar18[-1].day,prVar18[-1].hour);\u000aLAB_0040333c:\u000a    pc->meridian = *(int *)&prVar18->year;\u000a    break;\u000a  case 0x16:\u000a    set_hhmmss(pc,prVar18[-1].hour,0,0,0);\u000a    goto LAB_004033e9;\u000a  case 0x17:\u000a    set_hhmmss(pc,prVar18[-3].hour,prVar18[-1].hour,0,0);\u000a    goto LAB_004033e9;\u000a  case 0x18:\u000a    set_hhmmss(pc,prVar18[-5].hour,prVar18[-3].hour,prVar18[-1].day,prVar18[-1].hour);\u000aLAB_004033e9:\u000a    pc->meridian = 2;\u000a    break;\u000a  case 0x1b:\u000a    pc->zones_seen = pc->zones_seen + 1;\u000a                    /* WARNING: Load size is inaccurate */\u000a    local_568 = time_zone_hhmm(pc,(textint)CONCAT420((int)((ulong)prVar18[-1].minutes >> 0x20),\u000a                                                     CONCAT416((int)prVar18[-1].minutes,\u000a                                                               *(undefined *)&prVar18[-1].day)),\u000a                               prVar18->year);\u000a    goto LAB_00403562;\u000a  case 0x1c:\u000a    local_568 = prVar18->year;\u000a    pc->local_isdst = (int)local_568;\u000a    pc->dsts_seen = pc->dsts_seen + (ulong)(0 < local_568);\u000a    break;\u000a  case 0x1d:\u000a    pc->local_isdst = 1;\u000a    pc->dsts_seen = (ulong)(0 < prVar18[-1].day) + 1 + pc->dsts_seen;\u000a    break;\u000a  case 0x1e:\u000a    local_568 = prVar18->year;\u000a    goto LAB_00403562;\u000a  case 0x1f:\u000a    pc->time_zone = 0x1a4;\u000a    break;\u000a  case 0x20:\u000a    pc->time_zone = prVar18[-1].day;\u000a    goto LAB_00403482;\u000a  case 0x21:\u000a    pc->time_zone = 0x1a4;\u000aLAB_00403482:\u000a    local_568 = prVar18->ns;\u000a    local_598 = *(undefined4 *)&prVar18->year;\u000a    uVar19 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar20 = *(undefined4 *)&prVar18->month;\u000a    uVar21 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->day;\u000a    uVar23 = *(undefined4 *)((long)&prVar18->day + 4);\u000a    uVar24 = *(undefined4 *)&prVar18->hour;\u000a    uVar25 = *(undefined4 *)((long)&prVar18->hour + 4);\u000a    local_578 = *(undefined4 *)&prVar18->minutes;\u000a    uVar26 = *(undefined4 *)((long)&prVar18->minutes + 4);\u000a    uVar27 = *(undefined4 *)&prVar18->seconds;\u000a    uVar28 = *(undefined4 *)((long)&prVar18->seconds + 4);\u000aLAB_004034b1:\u000a    apply_relative_time(pc,(relative_time)\u000a                           CONCAT848(local_568,\u000a                                     CONCAT444(uVar28,CONCAT440(uVar27,CONCAT436(uVar26,CONCAT432(\u000a                                                  local_578,\u000a                                                  CONCAT428(uVar25,CONCAT424(uVar24,CONCAT420(uVar23\u000a                                                  ,CONCAT416(uVar22,CONCAT412(uVar21,CONCAT48(uVar20\u000a                                                  ,CONCAT44(uVar19,local_598)))))))))))));\u000a    break;\u000a  case 0x22:\u000a    lVar3 = prVar18[-2].day;\u000a                    /* WARNING: Load size is inaccurate */\u000a    local_568 = time_zone_hhmm(pc,(textint)CONCAT420((int)((ulong)prVar18[-1].minutes >> 0x20),\u000a                                                     CONCAT416((int)prVar18[-1].minutes,\u000a                                                               *(undefined *)&prVar18[-1].day)),\u000a                               prVar18->year);\u000a    local_568 = local_568 + lVar3;\u000a    goto LAB_00403562;\u000a  case 0x23:\u000a    local_568 = prVar18->year;\u000a    goto LAB_0040355e;\u000a  case 0x24:\u000a    local_568 = prVar18[-1].day;\u000aLAB_0040355e:\u000a    local_568 = local_568 + 0x3c;\u000aLAB_00403562:\u000a    pc->time_zone = local_568;\u000a    break;\u000a  case 0x25:\u000a    pc->day_ordinal = 0;\u000a    goto LAB_00403596;\u000a  case 0x26:\u000a    pc->day_ordinal = 0;\u000a    pc->day_number = *(int *)&prVar18[-1].day;\u000a    break;\u000a  case 0x27:\u000a    local_568 = prVar18[-1].day;\u000a    goto LAB_0040358d;\u000a  case 0x28:\u000a    local_568 = prVar18[-1].hour;\u000aLAB_0040358d:\u000a    pc->day_ordinal = local_568;\u000aLAB_00403596:\u000a    pc->day_number = *(int *)&prVar18->year;\u000a    break;\u000a  case 0x29:\u000a    goto switchD_00402f6a_caseD_29;\u000a  case 0x2a:\u000a    if ((ulong)prVar18[-4].minutes < 4) {\u000a      local_568 = prVar18[-4].hour;\u000a      goto LAB_0040389a;\u000a    }\u000a    (pc->year).digits = prVar18[-4].minutes;\u000a    local_598 = *(undefined4 *)((long)&prVar18[-4].day + 4);\u000a    uVar22 = *(undefined4 *)&prVar18[-4].hour;\u000a    local_578 = *(undefined4 *)((long)&prVar18[-4].hour + 4);\u000a    *(undefined4 *)ptVar1 = *(undefined4 *)&prVar18[-4].day;\u000a    *(undefined4 *)&(pc->year).field_0x4 = local_598;\u000a    *(undefined4 *)&(pc->year).value = uVar22;\u000a    *(undefined4 *)((long)&(pc->year).value + 4) = local_578;\u000a    goto switchD_00402f6a_caseD_29;\u000a  case 0x2b:\u000a    pc->day = prVar18[-2].hour;\u000a    pc->month = prVar18[-1].day;\u000a    (pc->year).value = -prVar18->month;\u000a    (pc->year).digits = prVar18->day;\u000a    break;\u000a  case 0x2c:\u000a    pc->month = prVar18[-2].day;\u000a    pc->day = -prVar18[-1].hour;\u000a    (pc->year).value = -prVar18->month;\u000a    (pc->year).digits = prVar18->day;\u000a    break;\u000a  case 0x2d:\u000a    local_568 = prVar18[-1].day;\u000a    goto LAB_00403631;\u000a  case 0x2e:\u000a    local_568 = prVar18[-3].day;\u000aLAB_0040389a:\u000a    pc->month = local_568;\u000a    pc->day = prVar18[-2].hour;\u000a    goto LAB_004038ab;\u000a  case 0x2f:\u000a    pc->day = prVar18[-1].hour;\u000a    pc->month = prVar18->year;\u000a    break;\u000a  case 0x30:\u000a    pc->day = prVar18[-2].hour;\u000a    pc->month = prVar18[-1].day;\u000aLAB_004038ab:\u000a    (pc->year).digits = prVar18->day;\u000a    local_598 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->month;\u000a    local_578 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    *(undefined4 *)ptVar1 = *(undefined4 *)&prVar18->year;\u000a    *(undefined4 *)&(pc->year).field_0x4 = local_598;\u000a    *(undefined4 *)&(pc->year).value = uVar22;\u000a    *(undefined4 *)((long)&(pc->year).value + 4) = local_578;\u000a    break;\u000a  case 0x32:\u000a    (pc->year).digits = prVar18[-2].minutes;\u000a    local_598 = *(undefined4 *)((long)&prVar18[-2].day + 4);\u000a    uVar22 = *(undefined4 *)&prVar18[-2].hour;\u000a    local_578 = *(undefined4 *)((long)&prVar18[-2].hour + 4);\u000a    *(undefined4 *)ptVar1 = *(undefined4 *)&prVar18[-2].day;\u000a    *(undefined4 *)&(pc->year).field_0x4 = local_598;\u000a    *(undefined4 *)&(pc->year).value = uVar22;\u000a    *(undefined4 *)((long)&(pc->year).value + 4) = local_578;\u000a    pc->month = -prVar18[-1].hour;\u000a    pc->day = -prVar18->month;\u000a    break;\u000a  case 0x33:\u000a    apply_relative_time(pc,*(relative_time *)&prVar18[-1].day);\u000a    break;\u000a  case 0x34:\u000a  case 0x35:\u000a    local_568 = prVar18->ns;\u000a    local_598 = *(undefined4 *)&prVar18->year;\u000a    uVar19 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar20 = *(undefined4 *)&prVar18->month;\u000a    uVar21 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->day;\u000a    uVar23 = *(undefined4 *)((long)&prVar18->day + 4);\u000a    uVar24 = *(undefined4 *)&prVar18->hour;\u000a    uVar25 = *(undefined4 *)((long)&prVar18->hour + 4);\u000a    local_578 = *(undefined4 *)&prVar18->minutes;\u000a    uVar26 = *(undefined4 *)((long)&prVar18->minutes + 4);\u000a    uVar27 = *(undefined4 *)&prVar18->seconds;\u000a    uVar28 = *(undefined4 *)((long)&prVar18->seconds + 4);\u000a    goto LAB_004034b1;\u000a  case 0x36:\u000a    lVar14 = prVar18[-1].day;\u000a    goto LAB_004031bf;\u000a  case 0x37:\u000a  case 0x4b:\u000a    lVar14 = prVar18[-1].hour;\u000aLAB_004031bf:\u000a    lVar13 = 0;\u000a    goto LAB_004036b0;\u000a  case 0x38:\u000a    lVar13 = 0;\u000a    lVar14 = 1;\u000a    goto LAB_004036b0;\u000a  case 0x39:\u000a    lVar13 = prVar18[-1].day;\u000a    goto LAB_004036ae;\u000a  case 0x3a:\u000a  case 0x4c:\u000a    lVar13 = prVar18[-1].hour;\u000a    goto LAB_004036ae;\u000a  case 0x3b:\u000a    lVar13 = 1;\u000aLAB_004036ae:\u000a    lVar14 = 0;\u000aLAB_004036b0:\u000a    lVar11 = 0;\u000aLAB_004036c0:\u000a    local_530 = 0;\u000aLAB_004036df:\u000a    lVar15 = 0;\u000aLAB_004036e2:\u000a    lVar16 = 0;\u000aLAB_004036e5:\u000a    lVar8 = 0;\u000a    break;\u000a  case 0x3c:\u000a    lVar11 = prVar18->year * prVar18[-1].day;\u000a    goto LAB_004036bc;\u000a  case 0x3d:\u000a  case 0x4d:\u000a    lVar11 = prVar18->year * prVar18[-1].hour;\u000a    goto LAB_004036bc;\u000a  case 0x3e:\u000a  case 0x51:\u000a    lVar11 = prVar18->year;\u000aLAB_004036bc:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    goto LAB_004036c0;\u000a  case 0x3f:\u000a    local_530 = prVar18[-1].day;\u000a    goto LAB_004036d4;\u000a  case 0x40:\u000a  case 0x4e:\u000a    local_530 = prVar18[-1].hour;\u000a    goto LAB_004036d4;\u000a  case 0x41:\u000a    local_530 = 1;\u000aLAB_004036d4:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    goto LAB_004036df;\u000a  case 0x42:\u000a    lVar15 = prVar18[-1].day;\u000a    goto LAB_0040378b;\u000a  case 0x43:\u000a  case 0x4f:\u000a    lVar15 = prVar18[-1].hour;\u000a    goto LAB_0040378b;\u000a  case 0x44:\u000a    lVar15 = 1;\u000aLAB_0040378b:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    local_530 = 0;\u000a    goto LAB_004036e2;\u000a  case 0x45:\u000a    lVar16 = prVar18[-1].day;\u000a    goto LAB_004037a9;\u000a  case 0x46:\u000a  case 0x50:\u000a    lVar16 = prVar18[-1].hour;\u000a    goto LAB_004037a9;\u000a  case 0x47:\u000a  case 0x48:\u000a    lVar16 = prVar18[-1].day;\u000a    lVar8 = prVar18[-1].hour;\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    local_530 = 0;\u000a    lVar15 = 0;\u000a    break;\u000a  case 0x49:\u000a    lVar16 = 1;\u000aLAB_004037a9:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    local_530 = 0;\u000a    lVar15 = 0;\u000a    goto LAB_004036e5;\u000a  case 0x55:\u000a  case 0x57:\u000a    lVar14 = prVar18->month;\u000a    lVar13 = 0;\u000a    break;\u000a  case 0x58:\u000a                    /* WARNING: Load size is inaccurate */\u000a    digits_to_date_time(pc,(textint)CONCAT420((int)((ulong)prVar18->day >> 0x20),\u000a                                              CONCAT416((int)prVar18->day,*(undefined *)prVar18)));\u000a    break;\u000a  case 0x59:\u000a                    /* WARNING: Load size is inaccurate */\u000a    digits_to_date_time(pc,(textint)CONCAT420((int)((ulong)prVar18[-1].minutes >> 0x20),\u000a                                              CONCAT416((int)prVar18[-1].minutes,\u000a                                                        *(undefined *)&prVar18[-1].day)));\u000a    apply_relative_time(pc,*prVar18);\u000a    break;\u000a  case 0x5a:\u000a    lVar14 = -1;\u000a    break;\u000a  case 0x5b:\u000a    lVar14 = prVar18->month;\u000a  }\u000aswitchD_00402f6a_caseD_5:\u000a  lVar17 = lVar17 - uVar7;\u000a  local_568 = uVar7 * -0x38;\u000a  prVar10 = (relative_time *)((long)prVar18 + local_568 + 0x38);\u000a  *(long *)((long)prVar18 + local_568 + 0x38) = lVar14;\u000a  *(long *)((long)prVar18 + local_568 + 0x40) = lVar13;\u000a  *(long *)((long)prVar18 + local_568 + 0x48) = lVar11;\u000a  *(long *)((long)prVar18 + local_568 + 0x50) = local_530;\u000a  *(long *)((long)prVar18 + local_568 + 0x58) = lVar15;\u000a  *(long_time_t *)((long)prVar18 + local_568 + 0x60) = lVar16;\u000a  *(long *)((long)prVar18 + local_568 + 0x68) = lVar8;\u000a  uVar12 = (int)(char)""[(ulong)""[(long)(int)uVar5] + 0x44] + (int)local_4c8[lVar17];\u000a  if ((uVar12 < 0x71) &&\u000a     ((int)\u000a           "\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx04\u005cf\u005cx0ff\u005cx0f\u005cx10\u005cx13\u005cx0f\u005cx13\u005cx13\u005cx14\u005cx13\u005cx19p\u005cx19\u005cx13\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx13\u005cx13\u005cx13k\u005cx13\u005cx14\u005cx19\u005cx19\u005cx19q\u005cx13\u005cx14\u005cx15\u005cx16\u005cx19\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cv\u005cf\u005cr\u005cx0e\u005cx17\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16`\u005cx18\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn"\u000a           [(long)(int)uVar12] == (int)local_4c8[lVar17])) {\u000a    uVar7 = (ulong)\u000a                   "OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\u005c\u005coZ[jpXo\u005cx05\u005cx06\u005ca\u005cbX\u005cr\u005cx0e\u005cx0f\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16\u005cx01\u005cx17\u005cx18\u005cx19\u005cx1a\u005cx1b\u005cx1c\u005cx1dO\u005cx1e345678\u005cf9=>?@AB<0P/\u005cx06S\u005cbQR\u005cx1aTUVW^_`Yiabc"\u000a                   [(long)(int)uVar12];\u000a  }\u000a  else {\u000a    uVar7 = (ulong)(uint)(int)yypgoto[(ulong)""[(long)(int)uVar5] + 4];\u000a  }\u000aLAB_00403767:\u000a  local_4c8[lVar17 + 1] = (short)uVar7;\u000a  lVar17 = lVar17 + 1;\u000a  prVar18 = prVar10;\u000a  if (0x12 < lVar17) {\u000a    return 2;\u000a  }\u000a  goto LAB_004038d0;\u000aswitchD_00402f6a_caseD_29:\u000a  local_568 = prVar18[-2].hour;\u000aLAB_00403631:\u000a  pc->month = local_568;\u000a  pc->day = prVar18->month;\u000a  goto switchD_00402f6a_caseD_5;\u000a}\u000a\u000a
p227
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x568\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [0xb0 + RSP],XMM0\nMOVAPS xmmword ptr [0xa0 + RSP],XMM0\nMOVAPS xmmword ptr [0x90 + RSP],XMM0\nMOV qword ptr [0xc0 + RSP],0x0\nLEA R15,[0x100 + RSP]\nMOV word ptr [0xd0 + RSP],0x0\nLEA RAX,[RDI + 0x60]\nMOV qword ptr [0x88 + RSP],RAX\nMOV qword ptr [RSP + 0x48],RDI\nLEA RAX,[RDI + 0x28]\nMOV qword ptr [0x80 + RSP],RAX\nMOV R8D,0xfffffffe\nXOR EAX,EAX\nXOR R12D,R12D\nJMP 0x004038d0\nMOVSXD RBX,EAX\nMOVSX EBP,byte ptr [0x40a0f0 + RBX]\nCMP EBP,-0x5d\nJZ 0x00402f10\nCMP R8D,-0x2\nJNZ 0x00402eba\nLEA RDI,[0x90 + RSP]\nMOV RSI,qword ptr [RSP + 0x48]\nCALL 0x00403900\nMOV R8D,EAX\nTEST R8D,R8D\nJLE 0x00402ed9\nMOV EAX,0x2\nCMP R8D,0x115\nJA 0x00402ede\nMOVSXD RAX,R8D\nMOVZX EAX,byte ptr [0x40a170 + RAX]\nJMP 0x00402ede\nXOR EAX,EAX\nXOR R8D,R8D\nADD EBP,EAX\nCMP EBP,0x70\nJA 0x00402f10\nMOVSXD RCX,EBP\nMOVSX EDX,byte ptr [0x40a290 + RCX]\nCMP EDX,EAX\nJNZ 0x00402f10\nMOVZX EAX,byte ptr [0x40a310 + RCX]\nOR RCX,0x4\nCMP RCX,0x6f\nJNZ 0x00402faf\nNEG EAX\nJMP 0x00402f1f\nMOVZX EAX,byte ptr [0x40a390 + RBX]\nTEST EAX,EAX\nJZ 0x004038e4\nMOVSXD R13,EAX\nMOVZX R14D,byte ptr [0x40a410 + R13]\nMOV EAX,0x1\nSUB RAX,R14\nIMUL RAX,RAX,0x38\nMOV RSI,qword ptr [R15 + RAX*0x1]\nMOV RBP,qword ptr [R15 + RAX*0x1 + 0x8]\nMOV RBX,qword ptr [R15 + RAX*0x1 + 0x10]\nMOV RCX,qword ptr [R15 + RAX*0x1 + 0x18]\nMOV qword ptr [RSP + 0x68],RCX\nMOV R9,qword ptr [R15 + RAX*0x1 + 0x20]\nMOV R10,qword ptr [R15 + RAX*0x1 + 0x28]\nMOV R11,qword ptr [R15 + RAX*0x1 + 0x30]\nLEA EAX,[R13 + -0x4]\nCMP EAX,0x57\nJA 0x004036e8\nJMP qword ptr [0x409df0 + RAX*0x8]\nMOV RAX,qword ptr [R15 + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS XMM1,xmmword ptr [R15 + 0x10]\nMOVUPS XMM2,xmmword ptr [R15 + 0x20]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x60],RSI\nMOV ESI,0x1\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nJMP 0x004034b1\nMOV RCX,qword ptr [0xc0 + RSP]\nMOV qword ptr [R15 + 0x68],RCX\nMOVAPS XMM0,xmmword ptr [0x90 + RSP]\nMOVAPS XMM1,xmmword ptr [0xa0 + RSP]\nMOVAPS XMM2,xmmword ptr [0xb0 + RSP]\nMOVUPS xmmword ptr [R15 + 0x58],XMM2\nMOVUPS xmmword ptr [R15 + 0x48],XMM1\nMOVUPS xmmword ptr [R15 + 0x38],XMM0\nLEA RCX,[R15 + 0x38]\nMOV R8D,0xfffffffe\nJMP 0x00403767\nMOV R10,qword ptr [R15 + -0x38]\nMOV R11,qword ptr [R15 + -0x30]\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nXOR R9D,R9D\nJMP 0x004036e8\nMOV RSI,qword ptr [R15 + -0x30]\nJMP 0x004031bf\nMOV RBP,qword ptr [R15 + -0x30]\nJMP 0x004036ae\nMOV RBX,qword ptr [R15]\nIMUL RBX,qword ptr [R15 + -0x30]\nJMP 0x004036bc\nMOV RBX,qword ptr [R15]\nJMP 0x004036bc\nMOV RAX,qword ptr [R15 + -0x30]\nJMP 0x004036d4\nMOV R9,qword ptr [R15 + -0x30]\nJMP 0x0040378b\nMOV R10,qword ptr [R15 + -0x30]\nJMP 0x004037a9\nMOV RSI,qword ptr [R15 + 0x8]\nXOR EBP,EBP\nJMP 0x004036e8\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15 + -0x30]\nXOR EDX,EDX\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x78],RBX\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV RBX,R11\nCALL 0x00403c70\nMOV R11,RBX\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBX,qword ptr [RSP + 0x78]\nJMP 0x004033e9\nMOV RDI,qword ptr [RSP + 0x48]\nINC qword ptr [0xd8 + RDI]\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15]\nMOV RAX,qword ptr [R15 + -0x28]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV dword ptr [RSP + 0x44],R8D\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403c90\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nJMP 0x00403562\nMOV RAX,qword ptr [R15 + -0x38]\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RDI + 0x18],RAX\nJMP 0x00403482\nMOV RAX,qword ptr [R15]\nJMP 0x0040355e\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x8],0x0\nJMP 0x00403596\nMOV RAX,qword ptr [R15 + -0x38]\nJMP 0x0040358d\nMOV RAX,qword ptr [R15 + -0x30]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RCX + 0x40],RAX\nJMP 0x004036e8\nMOV qword ptr [RSP + 0x60],RSI\nMOV ESI,dword ptr [R15]\nMOV RAX,qword ptr [R15 + -0x8]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS XMM1,xmmword ptr [R15 + -0x28]\nMOVUPS XMM2,xmmword ptr [R15 + -0x18]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403d20\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x004034df\nMOV RSI,qword ptr [R15 + -0x38]\nXOR EBP,EBP\nJMP 0x004036b0\nMOV RBP,qword ptr [R15 + -0x38]\nJMP 0x004036ae\nMOV R9,qword ptr [R15 + -0x38]\nJMP 0x0040378b\nMOVUPS XMM0,xmmword ptr [R15]\nMOV RAX,qword ptr [0x88 + RSP]\nMOVUPS xmmword ptr [RAX],XMM0\nMOV RAX,qword ptr [RSP + 0x48]\nMOV byte ptr [0xa8 + RAX],0x1\nJMP 0x004036e8\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xd0 + RAX]\nINC qword ptr [0xb0 + RAX]\nJMP 0x004036e8\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xd0 + RAX]\nJMP 0x004036e8\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xc0 + RAX]\nJMP 0x004036e8\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xd8 + RAX]\nJMP 0x004036e8\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xb0 + RAX]\nJMP 0x004036e8\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xb8 + RAX]\nJMP 0x004036e8\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15 + -0x30]\nXOR EDX,EDX\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x78],RBX\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV RBX,R11\nCALL 0x00403c70\nMOV R11,RBX\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBX,qword ptr [RSP + 0x78]\nJMP 0x0040333c\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0xa0 + R15]\nMOV RDX,qword ptr [R15 + -0x30]\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403c70\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x0040333c\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0x110 + R15]\nMOV RDX,qword ptr [-0xa0 + R15]\nMOV RCX,qword ptr [R15 + -0x38]\nMOV dword ptr [RSP + 0x44],R8D\nMOV R8,qword ptr [R15 + -0x30]\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x50],R9\nMOV RBP,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403c70\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,RBP\nMOV R9,qword ptr [RSP + 0x50]\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nMOV EAX,dword ptr [R15]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV dword ptr [RCX + 0x20],EAX\nJMP 0x004036e8\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0xa0 + R15]\nMOV RDX,qword ptr [R15 + -0x30]\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403c70\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x004033e9\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0x110 + R15]\nMOV RDX,qword ptr [-0xa0 + R15]\nMOV RCX,qword ptr [R15 + -0x38]\nMOV dword ptr [RSP + 0x44],R8D\nMOV R8,qword ptr [R15 + -0x30]\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x50],R9\nMOV RBP,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403c70\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,RBP\nMOV R9,qword ptr [RSP + 0x50]\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nMOV RAX,qword ptr [RSP + 0x48]\nMOV dword ptr [RAX + 0x20],0x2\nJMP 0x004036e8\nMOV RAX,qword ptr [R15]\nMOV RDX,qword ptr [RSP + 0x48]\nMOV dword ptr [RDX + 0x14],EAX\nXOR ECX,ECX\nTEST RAX,RAX\nSETG CL\nADD qword ptr [0xc8 + RDX],RCX\nJMP 0x004036e8\nMOV RDX,qword ptr [RSP + 0x48]\nMOV dword ptr [RDX + 0x14],0x1\nXOR EAX,EAX\nCMP qword ptr [R15 + -0x38],0x0\nSETG AL\nMOV RCX,qword ptr [0xc8 + RDX]\nLEA RAX,[RAX + RCX*0x1 + 0x1]\nMOV qword ptr [0xc8 + RDX],RAX\nJMP 0x004036e8\nMOV RAX,qword ptr [R15]\nJMP 0x00403562\nMOV RAX,qword ptr [RSP + 0x48]\nMOV qword ptr [RAX + 0x18],0x1a4\nJMP 0x004036e8\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RDI + 0x18],0x1a4\nMOV RAX,qword ptr [R15 + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS XMM1,xmmword ptr [R15 + 0x10]\nMOVUPS XMM2,xmmword ptr [R15 + 0x20]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x60],RSI\nMOV ESI,0x1\nMOV dword ptr [RSP + 0x44],R8D\nMOV qword ptr [RSP + 0x78],RBX\nMOV qword ptr [RSP + 0x50],R9\nMOV RBX,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403d20\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,RBX\nMOV R9,qword ptr [RSP + 0x50]\nMOV RBX,qword ptr [RSP + 0x78]\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nJMP 0x004036e8\nMOV RAX,qword ptr [R15 + -0x70]\nMOV qword ptr [RSP + 0x78],RAX\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15]\nMOV RAX,qword ptr [R15 + -0x28]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403c90\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nADD RAX,qword ptr [RSP + 0x78]\nJMP 0x00403562\nMOV RAX,qword ptr [R15 + -0x38]\nADD RAX,0x3c\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x18],RAX\nJMP 0x004036e8\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x8],0x0\nMOV EAX,dword ptr [R15 + -0x38]\nMOV dword ptr [RCX + 0x10],EAX\nJMP 0x004036e8\nMOV RAX,qword ptr [R15 + -0x30]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x8],RAX\nMOV EAX,dword ptr [R15]\nMOV dword ptr [RCX + 0x10],EAX\nJMP 0x004036e8\nCMP qword ptr [-0xd0 + R15],0x4\nJC 0x00403893\nMOV RAX,qword ptr [-0xd0 + R15]\nMOV RCX,qword ptr [0x80 + RSP]\nMOV qword ptr [RCX + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [-0xe0 + R15]\nMOVUPS xmmword ptr [RCX],XMM0\nMOV RAX,qword ptr [R15 + -0x68]\nJMP 0x00403631\nMOV RAX,qword ptr [R15 + -0x68]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15 + -0x38]\nMOV qword ptr [RCX + 0x40],RAX\nXOR EAX,EAX\nSUB RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RCX + 0x30],RAX\nMOV RAX,qword ptr [R15 + 0x10]\nMOV qword ptr [RCX + 0x38],RAX\nJMP 0x004036e8\nMOV RAX,qword ptr [R15 + -0x70]\nMOV RDX,qword ptr [RSP + 0x48]\nMOV qword ptr [RDX + 0x40],RAX\nXOR EAX,EAX\nXOR ECX,ECX\nSUB RCX,qword ptr [R15 + -0x30]\nMOV qword ptr [RDX + 0x48],RCX\nSUB RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RDX + 0x30],RAX\nMOV RAX,qword ptr [R15 + 0x10]\nMOV qword ptr [RDX + 0x38],RAX\nJMP 0x004036e8\nMOV RAX,qword ptr [R15 + -0x38]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x40],RAX\nMOV RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RCX + 0x48],RAX\nJMP 0x004036e8\nMOV RAX,qword ptr [-0xa8 + R15]\nJMP 0x0040389a\nMOV RAX,qword ptr [R15 + -0x68]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15 + -0x38]\nMOV qword ptr [RCX + 0x40],RAX\nJMP 0x004038ab\nMOV RAX,qword ptr [R15 + -0x60]\nMOV RCX,qword ptr [0x80 + RSP]\nMOV qword ptr [RCX + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x70]\nMOVUPS xmmword ptr [RCX],XMM0\nXOR EAX,EAX\nXOR ECX,ECX\nSUB RCX,qword ptr [R15 + -0x30]\nMOV RDX,qword ptr [RSP + 0x48]\nMOV qword ptr [RDX + 0x40],RCX\nSUB RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RDX + 0x48],RAX\nJMP 0x004036e8\nXOR EBP,EBP\nMOV ESI,0x1\nJMP 0x004036b0\nMOV EBP,0x1\nXOR ESI,ESI\nXOR EBX,EBX\nJMP 0x004036c0\nMOV RBX,qword ptr [R15]\nIMUL RBX,qword ptr [R15 + -0x38]\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nJMP 0x004036df\nMOV RAX,qword ptr [R15 + -0x38]\nJMP 0x004036d4\nMOV EAX,0x1\nMOV qword ptr [RSP + 0x68],RAX\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR R9D,R9D\nXOR R10D,R10D\nXOR R11D,R11D\nSUB R12,R14\nNEG R14\nIMUL RAX,R14,0x38\nLEA RCX,[R15 + RAX*0x1 + 0x38]\nMOV qword ptr [R15 + RAX*0x1 + 0x38],RSI\nMOV qword ptr [R15 + RAX*0x1 + 0x40],RBP\nMOV qword ptr [R15 + RAX*0x1 + 0x48],RBX\nMOV RDX,qword ptr [RSP + 0x68]\nMOV qword ptr [R15 + RAX*0x1 + 0x50],RDX\nMOV qword ptr [R15 + RAX*0x1 + 0x58],R9\nMOV qword ptr [R15 + RAX*0x1 + 0x60],R10\nMOV qword ptr [R15 + RAX*0x1 + 0x68],R11\nMOVZX EAX,byte ptr [0x40a470 + R13]\nMOVSX ESI,byte ptr [0x40a4b4 + RAX]\nMOVSX EDX,word ptr [0xd0 + RSP + R12*0x2]\nADD ESI,EDX\nCMP ESI,0x70\nJA 0x00403760\nMOVSXD RSI,ESI\nMOVSX EDI,byte ptr [0x40a290 + RSI]\nCMP EDI,EDX\nJNZ 0x00403760\nMOVZX EAX,byte ptr [0x40a310 + RSI]\nJMP 0x00403767\nMOVSX EAX,byte ptr [0x40a4d4 + RAX]\nMOV word ptr [0xd2 + RSP + R12*0x2],AX\nINC R12\nCMP R12,0x12\nMOV R15,RCX\nJLE 0x004038d0\nJMP 0x004038dd\nMOV R9D,0x1\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nJMP 0x004036e2\nMOV R10,qword ptr [R15 + -0x38]\nJMP 0x004037a9\nMOV R10D,0x1\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nXOR R9D,R9D\nJMP 0x004036e5\nMOV RAX,qword ptr [R15 + 0x10]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV qword ptr [RSP + 0x60],RSI\nMOV qword ptr [RSP + 0x78],RBX\nMOV qword ptr [RSP + 0x50],R9\nMOV RBX,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00403da0\nJMP 0x004034cd\nMOV RAX,qword ptr [R15 + -0x28]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV qword ptr [RSP + 0x60],RSI\nMOV qword ptr [RSP + 0x78],RBX\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV RBX,R11\nCALL 0x00403da0\nMOV RAX,qword ptr [R15 + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS XMM1,xmmword ptr [R15 + 0x10]\nMOVUPS XMM2,xmmword ptr [R15 + 0x20]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV ESI,0x1\nMOV RDI,qword ptr [RSP + 0x48]\nCALL 0x00403d20\nMOV R11,RBX\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x004034da\nMOV RSI,-0x1\nJMP 0x004036e8\nMOV RSI,qword ptr [R15 + 0x8]\nJMP 0x004036e8\nMOV RAX,qword ptr [-0xd8 + R15]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x40],RAX\nMOV RAX,qword ptr [R15 + -0x68]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15 + 0x10]\nMOV RCX,qword ptr [0x80 + RSP]\nMOV qword ptr [RCX + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS xmmword ptr [RCX],XMM0\nJMP 0x004036e8\nCMP EAX,0xc\nJNZ 0x00402e90\nXOR EAX,EAX\nJMP 0x004038e9\nMOV EAX,0x2\nJMP 0x004038e9\nMOV EAX,0x1\nADD RSP,0x568\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p228
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 68 05 00 00\n0f 57 c0\n0f 29 84 24 b0 00 00 00\n0f 29 84 24 a0 00 00 00\n0f 29 84 24 90 00 00 00\n48 c7 84 24 c0 00 00 00 00 00 00 00\n4c 8d bc 24 00 01 00 00\n66 c7 84 24 d0 00 00 00 00 00\n48 8d 47 60\n48 89 84 24 88 00 00 00\n48 89 7c 24 48\n48 8d 47 28\n48 89 84 24 80 00 00 00\n41 b8 fe ff ff ff\n31 c0\n45 31 e4\ne9 49 0a 00 00\n48 63 d8\n0f be ab f0 a0 40 00\n83 fd a3\n74 71\n41 83 f8 fe\n75 15\n48 8d bc 24 90 00 00 00\n48 8b 74 24 48\ne8 49 0a 00 00\n41 89 c0\n45 85 c0\n7e 1a\nb8 02 00 00 00\n41 81 f8 15 01 00 00\n77 11\n49 63 c0\n0f b6 80 70 a1 40 00\neb 05\n31 c0\n45 31 c0\n01 c5\n83 fd 70\n77 2b\n48 63 cd\n0f be 91 90 a2 40 00\n39 c2\n75 1d\n0f b6 81 10 a3 40 00\n48 83 c9 04\n48 83 f9 6f\n0f 85 a7 00 00 00\nf7 d8\neb 13\n0f b6 83 90 a3 40 00\n85 c0\n0f 84 c5 09 00 00\n4c 63 e8\n45 0f b6 b5 10 a4 40 00\nb8 01 00 00 00\n4c 29 f0\n48 6b c0 38\n49 8b 34 07\n49 8b 6c 07 08\n49 8b 5c 07 10\n49 8b 4c 07 18\n48 89 4c 24 68\n4d 8b 4c 07 20\n4d 8b 54 07 28\n4d 8b 5c 07 30\n41 8d 45 fc\n83 f8 57\n0f 87 7e 07 00 00\nff 24 c5 f0 9d 40 00\n49 8b 47 30\n48 89 44 24 30\n41 0f 10 07\n41 0f 10 4f 10\n41 0f 10 57 20\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\n48 89 74 24 60\nbe 01 00 00 00\n48 89 6c 24 58\n48 8b 7c 24 48\ne9 02 05 00 00\n48 8b 8c 24 c0 00 00 00\n49 89 4f 68\n0f 28 84 24 90 00 00 00\n0f 28 8c 24 a0 00 00 00\n0f 28 94 24 b0 00 00 00\n41 0f 11 57 58\n41 0f 11 4f 48\n41 0f 11 47 38\n49 8d 4f 38\n41 b8 fe ff ff ff\ne9 76 07 00 00\n4d 8b 57 c8\n4d 8b 5f d0\n31 f6\n31 ed\n31 db\n31 c0\n48 89 44 24 68\n45 31 c9\ne9 da 06 00 00\n49 8b 77 d0\ne9 a8 01 00 00\n49 8b 6f d0\ne9 8e 06 00 00\n49 8b 1f\n49 0f af 5f d0\ne9 8f 06 00 00\n49 8b 1f\ne9 87 06 00 00\n49 8b 47 d0\ne9 96 06 00 00\n4d 8b 4f d0\ne9 44 07 00 00\n4d 8b 57 d0\ne9 59 07 00 00\n49 8b 77 08\n31 ed\ne9 8d 06 00 00\n48 89 74 24 60\n49 8b 77 d0\n31 d2\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n48 89 5c 24 78\n4c 89 cd\n4c 89 54 24 50\n4c 89 db\ne8 e1 0b 00 00\n49 89 db\n4c 8b 54 24 50\n49 89 e9\n48 8b 5c 24 78\ne9 45 03 00 00\n48 8b 7c 24 48\n48 ff 87 d8 00 00 00\n48 89 74 24 60\n49 8b 37\n49 8b 47 d8\n48 89 44 24 10\n41 0f 10 47 c8\n0f 11 04 24\n48 89 6c 24 58\n44 89 44 24 44\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 aa 0b 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\ne9 5b 04 00 00\n49 8b 47 c8\n48 89 6c 24 58\n48 8b 7c 24 48\n48 89 47 18\ne9 64 03 00 00\n49 8b 07\ne9 38 04 00 00\n48 8b 4c 24 48\n48 c7 41 08 00 00 00 00\ne9 5e 04 00 00\n49 8b 47 c8\ne9 4c 04 00 00\n49 8b 47 d0\n48 8b 4c 24 48\n48 89 41 48\n49 8b 07\n48 89 41 40\ne9 8e 05 00 00\n48 89 74 24 60\n41 8b 37\n49 8b 47 f8\n48 89 44 24 30\n41 0f 10 47 c8\n41 0f 10 4f d8\n41 0f 10 57 e8\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 77 0b 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\ne9 24 03 00 00\n49 8b 77 c8\n31 ed\ne9 ea 04 00 00\n49 8b 6f c8\ne9 df 04 00 00\n4d 8b 4f c8\ne9 b3 05 00 00\n41 0f 10 07\n48 8b 84 24 88 00 00 00\n0f 11 00\n48 8b 44 24 48\nc6 80 a8 00 00 00 01\ne9 f0 04 00 00\n48 8b 44 24 48\n48 ff 80 d0 00 00 00\n48 ff 80 b0 00 00 00\ne9 d8 04 00 00\n48 8b 44 24 48\n48 ff 80 d0 00 00 00\ne9 c7 04 00 00\n48 8b 44 24 48\n48 ff 80 c0 00 00 00\ne9 b6 04 00 00\n48 8b 44 24 48\n48 ff 80 d8 00 00 00\ne9 a5 04 00 00\n48 8b 44 24 48\n48 ff 80 b0 00 00 00\ne9 94 04 00 00\n48 8b 44 24 48\n48 ff 80 b8 00 00 00\ne9 83 04 00 00\n48 89 74 24 60\n49 8b 77 d0\n31 d2\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n48 89 5c 24 78\n4c 89 cd\n4c 89 54 24 50\n4c 89 db\ne8 d7 09 00 00\n49 89 db\n4c 8b 54 24 50\n49 89 e9\n48 8b 5c 24 78\ne9 8e 00 00 00\n48 89 74 24 60\n49 8b b7 60 ff ff ff\n49 8b 57 d0\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 8c 09 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\neb 49\n48 89 74 24 60\n49 8b b7 f0 fe ff ff\n49 8b 97 60 ff ff ff\n49 8b 4f c8\n44 89 44 24 44\n4d 8b 47 d0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 4c 24 50\n4c 89 d5\n4c 89 5c 24 70\ne8 41 09 00 00\n4c 8b 5c 24 70\n49 89 ea\n4c 8b 4c 24 50\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\n41 8b 07\n48 8b 4c 24 48\n89 41 20\ne9 8d 03 00 00\n48 89 74 24 60\n49 8b b7 60 ff ff ff\n49 8b 57 d0\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 df 08 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\neb 49\n48 89 74 24 60\n49 8b b7 f0 fe ff ff\n49 8b 97 60 ff ff ff\n49 8b 4f c8\n44 89 44 24 44\n4d 8b 47 d0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 4c 24 50\n4c 89 d5\n4c 89 5c 24 70\ne8 94 08 00 00\n4c 8b 5c 24 70\n49 89 ea\n4c 8b 4c 24 50\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\n48 8b 44 24 48\nc7 40 20 02 00 00 00\ne9 df 02 00 00\n49 8b 07\n48 8b 54 24 48\n89 42 14\n31 c9\n48 85 c0\n0f 9f c1\n48 01 8a c8 00 00 00\ne9 c0 02 00 00\n48 8b 54 24 48\nc7 42 14 01 00 00 00\n31 c0\n49 83 7f c8 00\n0f 9f c0\n48 8b 8a c8 00 00 00\n48 8d 44 08 01\n48 89 82 c8 00 00 00\ne9 92 02 00 00\n49 8b 07\ne9 04 01 00 00\n48 8b 44 24 48\n48 c7 40 18 a4 01 00 00\ne9 78 02 00 00\n48 89 6c 24 58\n48 8b 7c 24 48\n48 c7 47 18 a4 01 00 00\n49 8b 47 30\n48 89 44 24 30\n41 0f 10 07\n41 0f 10 4f 10\n41 0f 10 57 20\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\n48 89 74 24 60\nbe 01 00 00 00\n44 89 44 24 44\n48 89 5c 24 78\n4c 89 4c 24 50\n4c 89 d3\n4c 89 5c 24 70\ne8 53 08 00 00\n4c 8b 5c 24 70\n49 89 da\n4c 8b 4c 24 50\n48 8b 5c 24 78\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\ne9 f5 01 00 00\n49 8b 47 90\n48 89 44 24 78\n48 89 74 24 60\n49 8b 37\n49 8b 47 d8\n48 89 44 24 10\n41 0f 10 47 c8\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 59 07 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\n48 03 44 24 78\neb 08\n49 8b 47 c8\n48 83 c0 3c\n48 8b 4c 24 48\n48 89 41 18\ne9 78 01 00 00\n48 8b 4c 24 48\n48 c7 41 08 00 00 00 00\n41 8b 47 c8\n89 41 10\ne9 5f 01 00 00\n49 8b 47 d0\n48 8b 4c 24 48\n48 89 41 08\n41 8b 07\n89 41 10\ne9 47 01 00 00\n49 83 bf 30 ff ff ff 04\n0f 82 e4 02 00 00\n49 8b 87 30 ff ff ff\n48 8b 8c 24 80 00 00 00\n48 89 41 10\n41 0f 10 87 20 ff ff ff\n0f 11 01\n49 8b 47 98\neb 5e\n49 8b 47 98\n48 8b 4c 24 48\n48 89 41 48\n49 8b 47 c8\n48 89 41 40\n31 c0\n49 2b 47 08\n48 89 41 30\n49 8b 47 10\n48 89 41 38\ne9 e9 00 00 00\n49 8b 47 90\n48 8b 54 24 48\n48 89 42 40\n31 c0\n31 c9\n49 2b 4f d0\n48 89 4a 48\n49 2b 47 08\n48 89 42 30\n49 8b 47 10\n48 89 42 38\ne9 bb 00 00 00\n49 8b 47 c8\n48 8b 4c 24 48\n48 89 41 40\n49 8b 47 08\n48 89 41 48\ne9 a1 00 00 00\n49 8b 87 58 ff ff ff\ne9 47 02 00 00\n49 8b 47 98\n48 8b 4c 24 48\n48 89 41 48\n49 8b 47 c8\n48 89 41 40\ne9 3e 02 00 00\n49 8b 47 a0\n48 8b 8c 24 80 00 00 00\n48 89 41 10\n41 0f 10 47 90\n0f 11 01\n31 c0\n31 c9\n49 2b 4f d0\n48 8b 54 24 48\n48 89 4a 40\n49 2b 47 08\n48 89 42 48\neb 48\n31 ed\nbe 01 00 00 00\neb 07\nbd 01 00 00 00\n31 f6\n31 db\neb 0c\n49 8b 1f\n49 0f af 5f c8\n31 f6\n31 ed\n31 c0\n48 89 44 24 68\neb 16\n49 8b 47 c8\neb 05\nb8 01 00 00 00\n48 89 44 24 68\n31 f6\n31 ed\n31 db\n45 31 c9\n45 31 d2\n45 31 db\n4d 29 f4\n49 f7 de\n49 6b c6 38\n49 8d 4c 07 38\n49 89 74 07 38\n49 89 6c 07 40\n49 89 5c 07 48\n48 8b 54 24 68\n49 89 54 07 50\n4d 89 4c 07 58\n4d 89 54 07 60\n4d 89 5c 07 68\n41 0f b6 85 70 a4 40 00\n0f be b0 b4 a4 40 00\n42 0f bf 94 64 d0 00 00 00\n01 d6\n83 fe 70\n77 22\n48 63 f6\n0f be be 90 a2 40 00\n39 d7\n75 14\n0f b6 86 10 a3 40 00\neb 12\n0f be 80 d4 a4 40 00\n66 42 89 84 64 d2 00 00 00\n49 ff c4\n49 83 fc 12\n49 89 cf\n0f 8e 50 01 00 00\ne9 58 01 00 00\n41 b9 01 00 00 00\n31 f6\n31 ed\n31 db\n31 c0\n48 89 44 24 68\ne9 45 ff ff ff\n4d 8b 57 c8\neb 06\n41 ba 01 00 00 00\n31 f6\n31 ed\n31 db\n31 c0\n48 89 44 24 68\n45 31 c9\ne9 27 ff ff ff\n49 8b 47 10\n48 89 44 24 10\n41 0f 10 07\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n48 89 74 24 60\n48 89 5c 24 78\n4c 89 4c 24 50\n4c 89 d3\n4c 89 5c 24 70\ne8 a6 05 00 00\ne9 ce fc ff ff\n49 8b 47 d8\n48 89 44 24 10\n41 0f 10 47 c8\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n48 89 74 24 60\n48 89 5c 24 78\n4c 89 cd\n4c 89 54 24 50\n4c 89 db\ne8 66 05 00 00\n49 8b 47 30\n48 89 44 24 30\n41 0f 10 07\n41 0f 10 4f 10\n41 0f 10 57 20\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\nbe 01 00 00 00\n48 8b 7c 24 48\ne8 b2 04 00 00\n49 89 db\n4c 8b 54 24 50\n49 89 e9\ne9 5c fc ff ff\n48 c7 c6 ff ff ff ff\ne9 5e fe ff ff\n49 8b 77 08\ne9 55 fe ff ff\n49 8b 87 28 ff ff ff\n48 8b 4c 24 48\n48 89 41 40\n49 8b 47 98\n48 89 41 48\n49 8b 47 10\n48 8b 8c 24 80 00 00 00\n48 89 41 10\n41 0f 10 07\n0f 11 01\ne9 21 fe ff ff\n83 f8 0c\n0f 85 b7 f5 ff ff\n31 c0\neb 0c\nb8 02 00 00 00\neb 05\nb8 01 00 00 00\n48 81 c4 68 05 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p229
S'.text:0000000000402e10\n.text:0000000000402e11\n.text:0000000000402e13\n.text:0000000000402e15\n.text:0000000000402e17\n.text:0000000000402e19\n.text:0000000000402e1a\n.text:0000000000402e21\n.text:0000000000402e24\n.text:0000000000402e2c\n.text:0000000000402e34\n.text:0000000000402e3c\n.text:0000000000402e48\n.text:0000000000402e50\n.text:0000000000402e5a\n.text:0000000000402e5e\n.text:0000000000402e66\n.text:0000000000402e6b\n.text:0000000000402e6f\n.text:0000000000402e77\n.text:0000000000402e7d\n.text:0000000000402e7f\n.text:0000000000402e82\n.text:0000000000402e90\n.text:0000000000402e93\n.text:0000000000402e9a\n.text:0000000000402e9d\n.text:0000000000402e9f\n.text:0000000000402ea3\n.text:0000000000402ea5\n.text:0000000000402ead\n.text:0000000000402eb2\n.text:0000000000402eb7\n.text:0000000000402eba\n.text:0000000000402ebd\n.text:0000000000402ebf\n.text:0000000000402ec4\n.text:0000000000402ecb\n.text:0000000000402ecd\n.text:0000000000402ed0\n.text:0000000000402ed7\n.text:0000000000402ed9\n.text:0000000000402edb\n.text:0000000000402ede\n.text:0000000000402ee0\n.text:0000000000402ee3\n.text:0000000000402ee5\n.text:0000000000402ee8\n.text:0000000000402eef\n.text:0000000000402ef1\n.text:0000000000402ef3\n.text:0000000000402efa\n.text:0000000000402efe\n.text:0000000000402f02\n.text:0000000000402f08\n.text:0000000000402f0a\n.text:0000000000402f10\n.text:0000000000402f17\n.text:0000000000402f19\n.text:0000000000402f1f\n.text:0000000000402f22\n.text:0000000000402f2a\n.text:0000000000402f2f\n.text:0000000000402f32\n.text:0000000000402f36\n.text:0000000000402f3a\n.text:0000000000402f3f\n.text:0000000000402f44\n.text:0000000000402f49\n.text:0000000000402f4e\n.text:0000000000402f53\n.text:0000000000402f58\n.text:0000000000402f5d\n.text:0000000000402f61\n.text:0000000000402f64\n.text:0000000000402f6a\n.text:0000000000402f71\n.text:0000000000402f75\n.text:0000000000402f7a\n.text:0000000000402f7e\n.text:0000000000402f83\n.text:0000000000402f88\n.text:0000000000402f8d\n.text:0000000000402f92\n.text:0000000000402f96\n.text:0000000000402f9b\n.text:0000000000402fa0\n.text:0000000000402fa5\n.text:0000000000402faa\n.text:0000000000402faf\n.text:0000000000402fb7\n.text:0000000000402fbb\n.text:0000000000402fc3\n.text:0000000000402fcb\n.text:0000000000402fd3\n.text:0000000000402fd8\n.text:0000000000402fdd\n.text:0000000000402fe2\n.text:0000000000402fe6\n.text:0000000000402fec\n.text:0000000000402ff1\n.text:0000000000402ff5\n.text:0000000000402ff9\n.text:0000000000402ffb\n.text:0000000000402ffd\n.text:0000000000402fff\n.text:0000000000403001\n.text:0000000000403006\n.text:0000000000403009\n.text:000000000040300e\n.text:0000000000403012\n.text:0000000000403017\n.text:000000000040301b\n.text:0000000000403020\n.text:0000000000403023\n.text:0000000000403028\n.text:000000000040302d\n.text:0000000000403030\n.text:0000000000403035\n.text:0000000000403039\n.text:000000000040303e\n.text:0000000000403042\n.text:0000000000403047\n.text:000000000040304b\n.text:0000000000403050\n.text:0000000000403054\n.text:0000000000403056\n.text:000000000040305b\n.text:0000000000403060\n.text:0000000000403064\n.text:0000000000403066\n.text:0000000000403068\n.text:000000000040306d\n.text:0000000000403070\n.text:0000000000403075\n.text:000000000040307a\n.text:000000000040307f\n.text:0000000000403082\n.text:0000000000403087\n.text:000000000040308a\n.text:000000000040308f\n.text:0000000000403092\n.text:0000000000403097\n.text:000000000040309a\n.text:000000000040309f\n.text:00000000004030a4\n.text:00000000004030a9\n.text:00000000004030b0\n.text:00000000004030b5\n.text:00000000004030b8\n.text:00000000004030bc\n.text:00000000004030c1\n.text:00000000004030c6\n.text:00000000004030ca\n.text:00000000004030cf\n.text:00000000004030d4\n.text:00000000004030d7\n.text:00000000004030dc\n.text:00000000004030e1\n.text:00000000004030e6\n.text:00000000004030eb\n.text:00000000004030f0\n.text:00000000004030f3\n.text:00000000004030f8\n.text:00000000004030fd\n.text:0000000000403102\n.text:0000000000403107\n.text:000000000040310b\n.text:0000000000403110\n.text:0000000000403115\n.text:0000000000403119\n.text:000000000040311e\n.text:0000000000403121\n.text:0000000000403126\n.text:000000000040312b\n.text:0000000000403133\n.text:0000000000403138\n.text:000000000040313c\n.text:0000000000403141\n.text:0000000000403145\n.text:000000000040314a\n.text:000000000040314e\n.text:0000000000403151\n.text:0000000000403155\n.text:000000000040315a\n.text:000000000040315f\n.text:0000000000403162\n.text:0000000000403166\n.text:000000000040316b\n.text:0000000000403170\n.text:0000000000403175\n.text:000000000040317a\n.text:000000000040317f\n.text:0000000000403184\n.text:0000000000403188\n.text:000000000040318d\n.text:0000000000403192\n.text:0000000000403197\n.text:000000000040319a\n.text:000000000040319f\n.text:00000000004031a4\n.text:00000000004031a9\n.text:00000000004031ae\n.text:00000000004031b3\n.text:00000000004031b6\n.text:00000000004031bb\n.text:00000000004031bf\n.text:00000000004031c1\n.text:00000000004031c6\n.text:00000000004031ca\n.text:00000000004031cf\n.text:00000000004031d3\n.text:00000000004031d8\n.text:00000000004031dc\n.text:00000000004031e4\n.text:00000000004031e7\n.text:00000000004031ec\n.text:00000000004031f3\n.text:00000000004031f8\n.text:00000000004031fd\n.text:0000000000403204\n.text:000000000040320b\n.text:0000000000403210\n.text:0000000000403215\n.text:000000000040321c\n.text:0000000000403221\n.text:0000000000403226\n.text:000000000040322d\n.text:0000000000403232\n.text:0000000000403237\n.text:000000000040323e\n.text:0000000000403243\n.text:0000000000403248\n.text:000000000040324f\n.text:0000000000403254\n.text:0000000000403259\n.text:0000000000403260\n.text:0000000000403265\n.text:000000000040326a\n.text:000000000040326e\n.text:0000000000403270\n.text:0000000000403272\n.text:0000000000403277\n.text:000000000040327a\n.text:000000000040327f\n.text:0000000000403284\n.text:0000000000403289\n.text:000000000040328c\n.text:0000000000403291\n.text:0000000000403294\n.text:0000000000403299\n.text:000000000040329c\n.text:00000000004032a1\n.text:00000000004032a4\n.text:00000000004032a9\n.text:00000000004032ae\n.text:00000000004032b3\n.text:00000000004032ba\n.text:00000000004032be\n.text:00000000004032c0\n.text:00000000004032c5\n.text:00000000004032c8\n.text:00000000004032cd\n.text:00000000004032d2\n.text:00000000004032d5\n.text:00000000004032da\n.text:00000000004032df\n.text:00000000004032e4\n.text:00000000004032e9\n.text:00000000004032ee\n.text:00000000004032f1\n.text:00000000004032f3\n.text:00000000004032f8\n.text:00000000004032ff\n.text:0000000000403306\n.text:000000000040330a\n.text:000000000040330f\n.text:0000000000403313\n.text:0000000000403318\n.text:000000000040331d\n.text:0000000000403322\n.text:0000000000403325\n.text:000000000040332a\n.text:000000000040332f\n.text:0000000000403334\n.text:0000000000403337\n.text:000000000040333c\n.text:0000000000403341\n.text:0000000000403346\n.text:000000000040334b\n.text:000000000040334e\n.text:0000000000403353\n.text:0000000000403356\n.text:000000000040335b\n.text:0000000000403360\n.text:0000000000403367\n.text:000000000040336b\n.text:000000000040336d\n.text:0000000000403372\n.text:0000000000403375\n.text:000000000040337a\n.text:000000000040337f\n.text:0000000000403382\n.text:0000000000403387\n.text:000000000040338c\n.text:0000000000403391\n.text:0000000000403396\n.text:000000000040339b\n.text:000000000040339e\n.text:00000000004033a0\n.text:00000000004033a5\n.text:00000000004033ac\n.text:00000000004033b3\n.text:00000000004033b7\n.text:00000000004033bc\n.text:00000000004033c0\n.text:00000000004033c5\n.text:00000000004033ca\n.text:00000000004033cf\n.text:00000000004033d2\n.text:00000000004033d7\n.text:00000000004033dc\n.text:00000000004033e1\n.text:00000000004033e4\n.text:00000000004033e9\n.text:00000000004033ee\n.text:00000000004033f3\n.text:00000000004033f8\n.text:00000000004033fd\n.text:0000000000403404\n.text:0000000000403409\n.text:000000000040340c\n.text:0000000000403411\n.text:0000000000403414\n.text:0000000000403416\n.text:0000000000403419\n.text:000000000040341c\n.text:0000000000403423\n.text:0000000000403428\n.text:000000000040342d\n.text:0000000000403434\n.text:0000000000403436\n.text:000000000040343b\n.text:000000000040343e\n.text:0000000000403445\n.text:000000000040344a\n.text:0000000000403451\n.text:0000000000403456\n.text:0000000000403459\n.text:000000000040345e\n.text:0000000000403463\n.text:000000000040346b\n.text:0000000000403470\n.text:0000000000403475\n.text:000000000040347a\n.text:0000000000403482\n.text:0000000000403486\n.text:000000000040348b\n.text:000000000040348f\n.text:0000000000403494\n.text:0000000000403499\n.text:000000000040349e\n.text:00000000004034a3\n.text:00000000004034a7\n.text:00000000004034ac\n.text:00000000004034b1\n.text:00000000004034b6\n.text:00000000004034bb\n.text:00000000004034c0\n.text:00000000004034c3\n.text:00000000004034c8\n.text:00000000004034cd\n.text:00000000004034d2\n.text:00000000004034d5\n.text:00000000004034da\n.text:00000000004034df\n.text:00000000004034e4\n.text:00000000004034e9\n.text:00000000004034ee\n.text:00000000004034f3\n.text:00000000004034f7\n.text:00000000004034fc\n.text:0000000000403501\n.text:0000000000403504\n.text:0000000000403508\n.text:000000000040350d\n.text:0000000000403512\n.text:0000000000403516\n.text:000000000040351b\n.text:0000000000403520\n.text:0000000000403525\n.text:0000000000403528\n.text:000000000040352d\n.text:0000000000403532\n.text:0000000000403537\n.text:000000000040353c\n.text:0000000000403541\n.text:0000000000403544\n.text:0000000000403549\n.text:000000000040354e\n.text:0000000000403553\n.text:0000000000403558\n.text:000000000040355a\n.text:000000000040355e\n.text:0000000000403562\n.text:0000000000403567\n.text:000000000040356b\n.text:0000000000403570\n.text:0000000000403575\n.text:000000000040357d\n.text:0000000000403581\n.text:0000000000403584\n.text:0000000000403589\n.text:000000000040358d\n.text:0000000000403592\n.text:0000000000403596\n.text:0000000000403599\n.text:000000000040359c\n.text:00000000004035a1\n.text:00000000004035a9\n.text:00000000004035af\n.text:00000000004035b6\n.text:00000000004035be\n.text:00000000004035c2\n.text:00000000004035ca\n.text:00000000004035cd\n.text:00000000004035d1\n.text:00000000004035d3\n.text:00000000004035d7\n.text:00000000004035dc\n.text:00000000004035e0\n.text:00000000004035e4\n.text:00000000004035e8\n.text:00000000004035ea\n.text:00000000004035ee\n.text:00000000004035f2\n.text:00000000004035f6\n.text:00000000004035fa\n.text:00000000004035ff\n.text:0000000000403603\n.text:0000000000403608\n.text:000000000040360c\n.text:000000000040360e\n.text:0000000000403610\n.text:0000000000403614\n.text:0000000000403618\n.text:000000000040361c\n.text:0000000000403620\n.text:0000000000403624\n.text:0000000000403628\n.text:000000000040362d\n.text:0000000000403631\n.text:0000000000403636\n.text:000000000040363a\n.text:000000000040363e\n.text:0000000000403642\n.text:0000000000403647\n.text:000000000040364e\n.text:0000000000403653\n.text:0000000000403657\n.text:000000000040365c\n.text:0000000000403660\n.text:0000000000403664\n.text:0000000000403668\n.text:000000000040366d\n.text:0000000000403671\n.text:0000000000403679\n.text:000000000040367d\n.text:0000000000403682\n.text:0000000000403685\n.text:0000000000403687\n.text:0000000000403689\n.text:000000000040368d\n.text:0000000000403692\n.text:0000000000403696\n.text:000000000040369a\n.text:000000000040369e\n.text:00000000004036a0\n.text:00000000004036a2\n.text:00000000004036a7\n.text:00000000004036a9\n.text:00000000004036ae\n.text:00000000004036b0\n.text:00000000004036b2\n.text:00000000004036b4\n.text:00000000004036b7\n.text:00000000004036bc\n.text:00000000004036be\n.text:00000000004036c0\n.text:00000000004036c2\n.text:00000000004036c7\n.text:00000000004036c9\n.text:00000000004036cd\n.text:00000000004036cf\n.text:00000000004036d4\n.text:00000000004036d9\n.text:00000000004036db\n.text:00000000004036dd\n.text:00000000004036df\n.text:00000000004036e2\n.text:00000000004036e5\n.text:00000000004036e8\n.text:00000000004036eb\n.text:00000000004036ee\n.text:00000000004036f2\n.text:00000000004036f7\n.text:00000000004036fc\n.text:0000000000403701\n.text:0000000000403706\n.text:000000000040370b\n.text:0000000000403710\n.text:0000000000403715\n.text:000000000040371a\n.text:000000000040371f\n.text:0000000000403727\n.text:000000000040372e\n.text:0000000000403737\n.text:0000000000403739\n.text:000000000040373c\n.text:000000000040373e\n.text:0000000000403741\n.text:0000000000403748\n.text:000000000040374a\n.text:000000000040374c\n.text:0000000000403753\n.text:0000000000403760\n.text:0000000000403767\n.text:0000000000403770\n.text:0000000000403773\n.text:0000000000403777\n.text:000000000040377a\n.text:0000000000403780\n.text:0000000000403785\n.text:000000000040378b\n.text:000000000040378d\n.text:000000000040378f\n.text:0000000000403791\n.text:0000000000403793\n.text:0000000000403798\n.text:000000000040379d\n.text:00000000004037a1\n.text:00000000004037a3\n.text:00000000004037a9\n.text:00000000004037ab\n.text:00000000004037ad\n.text:00000000004037af\n.text:00000000004037b1\n.text:00000000004037b6\n.text:00000000004037b9\n.text:00000000004037be\n.text:00000000004037c2\n.text:00000000004037c7\n.text:00000000004037cb\n.text:00000000004037cf\n.text:00000000004037d4\n.text:00000000004037d9\n.text:00000000004037de\n.text:00000000004037e3\n.text:00000000004037e8\n.text:00000000004037ed\n.text:00000000004037f0\n.text:00000000004037f5\n.text:00000000004037fa\n.text:00000000004037ff\n.text:0000000000403803\n.text:0000000000403808\n.text:000000000040380d\n.text:0000000000403811\n.text:0000000000403816\n.text:000000000040381b\n.text:0000000000403820\n.text:0000000000403825\n.text:000000000040382a\n.text:000000000040382d\n.text:0000000000403832\n.text:0000000000403835\n.text:000000000040383a\n.text:000000000040383e\n.text:0000000000403843\n.text:0000000000403847\n.text:000000000040384c\n.text:0000000000403851\n.text:0000000000403856\n.text:000000000040385b\n.text:000000000040385f\n.text:0000000000403864\n.text:0000000000403869\n.text:000000000040386e\n.text:0000000000403871\n.text:0000000000403876\n.text:0000000000403879\n.text:000000000040387e\n.text:0000000000403885\n.text:000000000040388a\n.text:000000000040388e\n.text:0000000000403893\n.text:000000000040389a\n.text:000000000040389f\n.text:00000000004038a3\n.text:00000000004038a7\n.text:00000000004038ab\n.text:00000000004038af\n.text:00000000004038b7\n.text:00000000004038bb\n.text:00000000004038bf\n.text:00000000004038c2\n.text:00000000004038d0\n.text:00000000004038d3\n.text:00000000004038d9\n.text:00000000004038db\n.text:00000000004038dd\n.text:00000000004038e2\n.text:00000000004038e4\n.text:00000000004038e9\n.text:00000000004038f0\n.text:00000000004038f1\n.text:00000000004038f3\n.text:00000000004038f5\n.text:00000000004038f7\n.text:00000000004038f9\n.text:00000000004038fa\n'
p230
tp231
sS'mbrtowc'
p232
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_0060e0e0)();\u000a  return sVar1;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x0060e0e0]\n'
p235
S'ff 25 0a c7 20 00\n'
p236
S'.plt:00000000004019d0\n'
p237
tp238
sS'dup2'
p239
(S'\n__stdcall dup2(int __fd, int __fd2)\n'
p240
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint dup2(int __fd,int __fd2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_dup2_0060e0e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x0060e0e8]\n'
p242
S'ff 25 02 c7 20 00\n'
p243
S'.plt:00000000004019e0\n'
p244
tp245
sS'futimens'
p246
(S'\n__stdcall futimens(int __fd, timespec * __times)\n'
p247
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint futimens(int __fd,timespec *__times)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_futimens_0060e240)();\u000a  return iVar1;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x0060e240]\n'
p249
S'ff 25 aa c5 20 00\n'
p250
S'.plt:0000000000401c90\n'
p251
tp252
sS'openat'
p253
(S'\n__stdcall openat(int __fd, char * __file, int __oflag)\n'
p254
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint openat(int __fd,char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_openat_0060e0c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x0060e0c8]\n'
p256
S'ff 25 22 c7 20 00\n'
p257
S'.plt:00000000004019a0\n'
p258
tp259
sS'time_t_add_ok'
p260
(S'\n__stdcall time_t_add_ok(time_t a, time_t b)\n'
p261
V\u000aint time_t_add_ok(time_t a,time_t b)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = time_t_avg(a,b);\u000a  return (int)((uint)((ulong)(tVar1 + 0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p262
S'PUSH RAX\nCALL 0x004077a0\nMOV RCX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nPOP RCX\nRET\n'
p263
S'50\ne8 1a 00 00 00\n48 b9 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\n59\nc3\n'
p264
S'.text:0000000000407780\n.text:0000000000407781\n.text:0000000000407786\n.text:0000000000407790\n.text:0000000000407793\n.text:0000000000407797\n.text:000000000040779a\n.text:000000000040779b\n'
p265
tp266
sS'lutimens'
p267
(S'\n__stdcall lutimens(char * file, timespec * timespec)\n'
p268
V\u000aint lutimens(char *file,timespec *timespec)\u000a\u000a{\u000a  timespec *ptVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int *piVar5;\u000a  long lVar6;\u000a  timespec tVar7;\u000a  timespec adjusted_timespec [2];\u000a  timespec *local_d0;\u000a  undefined4 local_c8;\u000a  undefined4 uStack196;\u000a  undefined4 uStack192;\u000a  undefined4 uStack188;\u000a  undefined4 local_b8;\u000a  undefined4 uStack180;\u000a  undefined4 uStack176;\u000a  undefined4 uStack172;\u000a  stat local_a8;\u000a  \u000a  local_d0 = (timespec *)&local_c8;\u000a  if (timespec == (timespec *)0x0) {\u000a    iVar3 = 0;\u000a    local_d0 = timespec;\u000a  }\u000a  else {\u000a    local_c8 = *(undefined4 *)&timespec->tv_sec;\u000a    uStack196 = *(undefined4 *)((long)&timespec->tv_sec + 4);\u000a    uStack192 = *(undefined4 *)&timespec->tv_nsec;\u000a    uStack188 = *(undefined4 *)((long)&timespec->tv_nsec + 4);\u000a    local_b8 = *(undefined4 *)&timespec[1].tv_sec;\u000a    uStack180 = *(undefined4 *)((long)&timespec[1].tv_sec + 4);\u000a    uStack176 = *(undefined4 *)&timespec[1].tv_nsec;\u000a    uStack172 = *(undefined4 *)((long)&timespec[1].tv_nsec + 4);\u000a    iVar3 = validate_timespec(local_d0);\u000a    if (iVar3 < 0) {\u000a      return -1;\u000a    }\u000a  }\u000a  if (lutimensat_works_really < 0) goto LAB_00408738;\u000a  if (iVar3 == 2) {\u000a    iVar3 = lstat(file,(stat *)&local_a8);\u000a    ptVar1 = local_d0;\u000a    if (iVar3 != 0) {\u000a      return -1;\u000a    }\u000a    if (local_d0->tv_nsec == 0x3ffffffe) {\u000a      tVar7 = get_stat_atime(&local_a8);\u000a      lVar6 = 0;\u000a    }\u000a    else {\u000a      iVar3 = 3;\u000a      if (local_d0[1].tv_nsec != 0x3ffffffe) goto LAB_00408702;\u000a      tVar7 = get_stat_mtime(&local_a8);\u000a      lVar6 = 1;\u000a    }\u000a    ptVar1[lVar6].tv_sec = SUB168((undefined  [16])tVar7,0);\u000a    ptVar1[lVar6].tv_nsec = SUB168((undefined  [16])tVar7 >> 0x40,0);\u000a    iVar3 = 3;\u000a  }\u000aLAB_00408702:\u000a  iVar4 = utimensat(-100,file,(timespec *)local_d0,0x100);\u000a  if (iVar4 < 1) {\u000a    if (iVar4 == 0) {\u000a      utimensat_works_really = 1;\u000a      lutimensat_works_really = 1;\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    piVar5 = __errno_location();\u000a    *piVar5 = 0x26;\u000a  }\u000a  piVar5 = __errno_location();\u000a  if (*piVar5 != 0x26) {\u000a    utimensat_works_really = 1;\u000a    lutimensat_works_really = 1;\u000a    return iVar4;\u000a  }\u000aLAB_00408738:\u000a  lutimensat_works_really = -1;\u000a  if (iVar3 == 0) {\u000a    iVar3 = lstat(file,(stat *)&local_a8);\u000a    if (iVar3 != 0) {\u000a      return -1;\u000a    }\u000a  }\u000a  else {\u000a    if ((iVar3 != 3) && (iVar3 = lstat(file,(stat *)&local_a8), iVar3 != 0)) {\u000a      return -1;\u000a    }\u000a    if ((local_d0 != (timespec *)0x0) &&\u000a       (_Var2 = update_timespec(&local_a8,&local_d0), _Var2 != false)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((local_a8.st_mode & 0xf000) == 0xa000) {\u000a    piVar5 = __errno_location();\u000a    *piVar5 = 0x26;\u000a    return -1;\u000a  }\u000a  iVar3 = fdutimens((char *)0xffffffff,(timespec *)file);\u000a  return iVar3;\u000a}\u000a\u000a
p269
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0xc0\nMOV R14,RDI\nTEST RSI,RSI\nLEA RAX,[RSP + 0x10]\nCMOVZ RAX,RSI\nMOV qword ptr [RSP + 0x8],RAX\nJZ 0x00408687\nMOVUPS XMM0,xmmword ptr [RSI]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [RSI + 0x10]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x004084c0\nMOV EBP,EAX\nTEST EBP,EBP\nJNS 0x00408689\nJMP 0x004087cb\nXOR EBP,EBP\nCMP dword ptr [0x0060e51c],0x0\nJS 0x00408738\nCMP EBP,0x2\nJNZ 0x00408702\nLEA RSI,[RSP + 0x30]\nMOV RDI,R14\nCALL 0x00409190\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x004087e6\nMOV RBX,qword ptr [RSP + 0x8]\nCMP qword ptr [RBX + 0x8],0x3ffffffe\nJNZ 0x004086d2\nLEA RDI,[RSP + 0x30]\nCALL 0x004068f0\nXOR ECX,ECX\nJMP 0x004086f0\nMOV EBP,0x3\nCMP qword ptr [RBX + 0x18],0x3ffffffe\nJNZ 0x00408702\nLEA RDI,[RSP + 0x30]\nCALL 0x00406910\nMOV ECX,0x1\nSHL RCX,0x4\nMOV qword ptr [RBX + RCX*0x1],RAX\nMOV qword ptr [RBX + RCX*0x1 + 0x8],RDX\nMOV EBP,0x3\nMOV RDX,qword ptr [RSP + 0x8]\nMOV EDI,0xffffff9c\nMOV ECX,0x100\nMOV RSI,R14\nCALL 0x00401860\nMOV EBX,EAX\nTEST EBX,EBX\nJLE 0x0040872c\nCALL 0x00401890\nMOV dword ptr [RAX],0x26\nJMP 0x0040872e\nJZ 0x00408784\nCALL 0x00401890\nCMP dword ptr [RAX],0x26\nJNZ 0x00408784\nMOV dword ptr [0x0060e51c],0xffffffff\nTEST EBP,EBP\nJZ 0x0040879a\nCMP EBP,0x3\nJZ 0x00408765\nLEA RSI,[RSP + 0x30]\nMOV RDI,R14\nCALL 0x00409190\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x004087e6\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x004087b0\nLEA RDI,[RSP + 0x30]\nLEA RSI,[RSP + 0x8]\nCALL 0x00408580\nXOR EBX,EBX\nTEST AL,AL\nJZ 0x004087b0\nJMP 0x004087e6\nMOV dword ptr [0x0060e518],0x1\nMOV dword ptr [0x0060e51c],0x1\nJMP 0x004087e6\nLEA RSI,[RSP + 0x30]\nMOV RDI,R14\nCALL 0x00409190\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x004087e6\nMOV EAX,0xf000\nAND EAX,dword ptr [RSP + 0x48]\nCMP EAX,0xa000\nJNZ 0x004087d2\nCALL 0x00401890\nMOV dword ptr [RAX],0x26\nMOV EBX,0xffffffff\nJMP 0x004087e6\nMOV RDX,qword ptr [RSP + 0x8]\nMOV EDI,0xffffffff\nMOV RSI,R14\nCALL 0x00408130\nMOV EBX,EAX\nMOV EAX,EBX\nADD RSP,0xc0\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p270
S'55\n41 56\n53\n48 81 ec c0 00 00 00\n49 89 fe\n48 85 f6\n48 8d 44 24 10\n48 0f 44 c6\n48 89 44 24 08\n74 26\n0f 10 06\n0f 29 44 24 10\n0f 10 46 10\n0f 29 44 24 20\n48 8b 7c 24 08\ne8 44 fe ff ff\n89 c5\n85 ed\n79 07\ne9 44 01 00 00\n31 ed\n83 3d 8c 5e 20 00 00\n0f 88 a2 00 00 00\n83 fd 02\n75 67\n48 8d 74 24 30\n4c 89 f7\ne8 e8 0a 00 00\nbb ff ff ff ff\n85 c0\n0f 85 31 01 00 00\n48 8b 5c 24 08\n48 81 7b 08 fe ff ff 3f\n75 0e\n48 8d 7c 24 30\ne8 22 e2 ff ff\n31 c9\neb 1e\nbd 03 00 00 00\n48 81 7b 18 fe ff ff 3f\n75 21\n48 8d 7c 24 30\ne8 25 e2 ff ff\nb9 01 00 00 00\n48 c1 e1 04\n48 89 04 0b\n48 89 54 0b 08\nbd 03 00 00 00\n48 8b 54 24 08\nbf 9c ff ff ff\nb9 00 01 00 00\n4c 89 f6\ne8 47 91 ff ff\n89 c3\n85 db\n7e 0d\ne8 6c 91 ff ff\nc7 00 26 00 00 00\neb 02\n74 56\ne8 5d 91 ff ff\n83 38 26\n75 4c\nc7 05 da 5d 20 00 ff ff ff ff\n85 ed\n74 54\n83 fd 03\n74 1a\n48 8d 74 24 30\n4c 89 f7\ne8 38 0a 00 00\nbb ff ff ff ff\n85 c0\n0f 85 81 00 00 00\n48 83 7c 24 08 00\n74 43\n48 8d 7c 24 30\n48 8d 74 24 08\ne8 04 fe ff ff\n31 db\n84 c0\n74 2e\neb 62\nc7 05 8a 5d 20 00 01 00 00 00\nc7 05 84 5d 20 00 01 00 00 00\neb 4c\n48 8d 74 24 30\n4c 89 f7\ne8 e9 09 00 00\nbb ff ff ff ff\n85 c0\n75 36\nb8 00 f0 00 00\n23 44 24 48\n3d 00 a0 00 00\n75 12\ne8 cb 90 ff ff\nc7 00 26 00 00 00\nbb ff ff ff ff\neb 14\n48 8b 54 24 08\nbf ff ff ff ff\n4c 89 f6\ne8 4c f9 ff ff\n89 c3\n89 d8\n48 81 c4 c0 00 00 00\n5b\n41 5e\n5d\nc3\n'
p271
S'.text:0000000000408640\n.text:0000000000408641\n.text:0000000000408643\n.text:0000000000408644\n.text:000000000040864b\n.text:000000000040864e\n.text:0000000000408651\n.text:0000000000408656\n.text:000000000040865a\n.text:000000000040865f\n.text:0000000000408661\n.text:0000000000408664\n.text:0000000000408669\n.text:000000000040866d\n.text:0000000000408672\n.text:0000000000408677\n.text:000000000040867c\n.text:000000000040867e\n.text:0000000000408680\n.text:0000000000408682\n.text:0000000000408687\n.text:0000000000408689\n.text:0000000000408690\n.text:0000000000408696\n.text:0000000000408699\n.text:000000000040869b\n.text:00000000004086a0\n.text:00000000004086a3\n.text:00000000004086a8\n.text:00000000004086ad\n.text:00000000004086af\n.text:00000000004086b5\n.text:00000000004086ba\n.text:00000000004086c2\n.text:00000000004086c4\n.text:00000000004086c9\n.text:00000000004086ce\n.text:00000000004086d0\n.text:00000000004086d2\n.text:00000000004086d7\n.text:00000000004086df\n.text:00000000004086e1\n.text:00000000004086e6\n.text:00000000004086eb\n.text:00000000004086f0\n.text:00000000004086f4\n.text:00000000004086f8\n.text:00000000004086fd\n.text:0000000000408702\n.text:0000000000408707\n.text:000000000040870c\n.text:0000000000408711\n.text:0000000000408714\n.text:0000000000408719\n.text:000000000040871b\n.text:000000000040871d\n.text:000000000040871f\n.text:0000000000408724\n.text:000000000040872a\n.text:000000000040872c\n.text:000000000040872e\n.text:0000000000408733\n.text:0000000000408736\n.text:0000000000408738\n.text:0000000000408742\n.text:0000000000408744\n.text:0000000000408746\n.text:0000000000408749\n.text:000000000040874b\n.text:0000000000408750\n.text:0000000000408753\n.text:0000000000408758\n.text:000000000040875d\n.text:000000000040875f\n.text:0000000000408765\n.text:000000000040876b\n.text:000000000040876d\n.text:0000000000408772\n.text:0000000000408777\n.text:000000000040877c\n.text:000000000040877e\n.text:0000000000408780\n.text:0000000000408782\n.text:0000000000408784\n.text:000000000040878e\n.text:0000000000408798\n.text:000000000040879a\n.text:000000000040879f\n.text:00000000004087a2\n.text:00000000004087a7\n.text:00000000004087ac\n.text:00000000004087ae\n.text:00000000004087b0\n.text:00000000004087b5\n.text:00000000004087b9\n.text:00000000004087be\n.text:00000000004087c0\n.text:00000000004087c5\n.text:00000000004087cb\n.text:00000000004087d0\n.text:00000000004087d2\n.text:00000000004087d7\n.text:00000000004087dc\n.text:00000000004087df\n.text:00000000004087e4\n.text:00000000004087e6\n.text:00000000004087e8\n.text:00000000004087ef\n.text:00000000004087f0\n.text:00000000004087f2\n.text:00000000004087f3\n'
p272
tp273
sS'setlocale'
p274
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_0060e200)();\u000a  return pcVar1;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x0060e200]\n'
p277
S'ff 25 ea c5 20 00\n'
p278
S'.plt:0000000000401c10\n'
p279
tp280
sS'access'
p281
(S'\n__stdcall access(char * __name, int __type)\n'
p282
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint access(char *__name,int __type)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_access_0060e228)();\u000a  return iVar1;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x0060e228]\n'
p284
S'ff 25 c2 c5 20 00\n'
p285
S'.plt:0000000000401c60\n'
p286
tp287
sS'c_toupper'
p288
(S'\n__stdcall c_toupper()\n'
p289
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p290
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p291
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p292
S'.text:0000000000407c60\n.text:0000000000407c63\n.text:0000000000407c66\n.text:0000000000407c69\n.text:0000000000407c6c\n'
p293
tp294
sS'fcntl'
p295
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p296
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_0060e078)();\u000a  return iVar1;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x0060e078]\n'
p298
S'ff 25 72 c7 20 00\n'
p299
S'.plt:0000000000401900\n'
p300
tp301
sS'mbsinit'
p302
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_0060e268)();\u000a  return iVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x0060e268]\n'
p305
S'ff 25 82 c5 20 00\n'
p306
S'.plt:0000000000401ce0\n'
p307
tp308
sS'dcgettext'
p309
(S'\n__stdcall dcgettext()\n'
p310
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_0060e0a8)();\u000a  return;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x0060e0a8]\n'
p312
S'ff 25 42 c7 20 00\n'
p313
S'.plt:0000000000401960\n'
p314
tp315
sS'lookup_word'
p316
(S'\n__stdcall lookup_word(parser_control * pc, char * word)\n'
p317
V\u000atable * lookup_word(parser_control *pc,char *word)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  int iVar3;\u000a  size_t sVar4;\u000a  table *ptVar5;\u000a  char *pcVar6;\u000a  char *__s2;\u000a  bool bVar7;\u000a  \u000a  if (*word != 0) {\u000a    __s2 = word + 1;\u000a    do {\u000a      iVar3 = c_toupper();\u000a      __s2[-1] = (char)iVar3;\u000a      cVar1 = *__s2;\u000a      __s2 = __s2 + 1;\u000a    } while (cVar1 != 0);\u000a  }\u000a  ptVar5 = meridian_table;\u000a  __s2 = "AM";\u000a  do {\u000a    iVar3 = strcmp(word,__s2);\u000a    if (iVar3 == 0) {\u000a      return ptVar5;\u000a    }\u000a    __s2 = ptVar5[1].name;\u000a    ptVar5 = ptVar5 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  sVar4 = strlen(word);\u000a  if (sVar4 == 3) {\u000a    bVar7 = true;\u000a  }\u000a  else {\u000a    if (sVar4 == 4) {\u000a      bVar7 = word[3] == '.';\u000a    }\u000a    else {\u000a      bVar7 = false;\u000a    }\u000a  }\u000a  ptVar5 = month_and_day_table;\u000a  __s2 = "JANUARY";\u000a  do {\u000a    if (bVar7) {\u000a      iVar3 = strncmp(word,__s2,3);\u000a    }\u000a    else {\u000a      iVar3 = strcmp(word,__s2);\u000a    }\u000a    if (iVar3 == 0) {\u000a      return ptVar5;\u000a    }\u000a    __s2 = ptVar5[1].name;\u000a    ptVar5 = ptVar5 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  ptVar5 = lookup_zone(pc,word);\u000a  if (ptVar5 == (table *)0x0) {\u000a    iVar3 = strcmp(word,"DST");\u000a    if (iVar3 == 0) {\u000a      ptVar5 = dst_table;\u000a    }\u000a    else {\u000a      ptVar5 = time_units_table;\u000a      __s2 = "YEAR";\u000a      do {\u000a        iVar3 = strcmp(word,__s2);\u000a        if (iVar3 == 0) {\u000a          return ptVar5;\u000a        }\u000a        __s2 = ptVar5[1].name;\u000a        ptVar5 = ptVar5 + 1;\u000a      } while (__s2 != (char *)0x0);\u000a      if (word[sVar4 - 1] == 'S') {\u000a        word[sVar4 - 1] = 0;\u000a        ptVar5 = time_units_table;\u000a        __s2 = "YEAR";\u000a        do {\u000a          iVar3 = strcmp(word,__s2);\u000a          if (iVar3 == 0) {\u000a            return ptVar5;\u000a          }\u000a          __s2 = ptVar5[1].name;\u000a          ptVar5 = ptVar5 + 1;\u000a        } while (__s2 != (char *)0x0);\u000a        word[sVar4 - 1] = 'S';\u000a      }\u000a      ptVar5 = relative_time_table;\u000a      __s2 = "TOMORROW";\u000a      do {\u000a        iVar3 = strcmp(word,__s2);\u000a        if (iVar3 == 0) {\u000a          return ptVar5;\u000a        }\u000a        __s2 = ptVar5[1].name;\u000a        ptVar5 = ptVar5 + 1;\u000a      } while (__s2 != (char *)0x0);\u000a      if (sVar4 == 1) {\u000a        ptVar5 = military_table;\u000a        __s2 = "A";\u000a        do {\u000a          if (*word == *__s2) {\u000a            return ptVar5;\u000a          }\u000a          __s2 = ptVar5[1].name;\u000a          ptVar5 = ptVar5 + 1;\u000a        } while (__s2 != (char *)0x0);\u000a      }\u000a      if (*word != 0) {\u000a        __s2 = word + 1;\u000a        pcVar6 = word;\u000a        bVar7 = false;\u000a        do {\u000a          cVar1 = *__s2;\u000a          bVar2 = true;\u000a          if (__s2[-1] != '.') {\u000a            pcVar6 = pcVar6 + 1;\u000a            bVar2 = bVar7;\u000a          }\u000a          *pcVar6 = cVar1;\u000a          __s2 = __s2 + 1;\u000a          bVar7 = bVar2;\u000a        } while (cVar1 != 0);\u000a        if ((bVar2) && (ptVar5 = lookup_zone(pc,word), ptVar5 != (table *)0x0)) {\u000a          return ptVar5;\u000a        }\u000a      }\u000a      ptVar5 = (table *)0x0;\u000a    }\u000a  }\u000a  return ptVar5;\u000a}\u000a\u000a
p318
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV AL,byte ptr [R15]\nTEST AL,AL\nJZ 0x00404975\nLEA RBX,[R15 + 0x1]\nNOP dword ptr [RAX]\nMOVZX EDI,AL\nCALL 0x00407c60\nMOV byte ptr [RBX + -0x1],AL\nMOVZX EAX,byte ptr [RBX]\nINC RBX\nTEST AL,AL\nJNZ 0x00404960\nMOV EBX,0x40a590\nMOV ESI,0x40aee4\nNOP\nMOV RDI,R15\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404a1c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404980\nMOV RDI,R15\nCALL 0x00401980\nMOV R12,RAX\nCMP R12,0x3\nJZ 0x004049bf\nCMP R12,0x4\nJNZ 0x004049c4\nCMP byte ptr [R15 + 0x3],0x2e\nSETZ BPL\nJMP 0x004049c6\nMOV BPL,0x1\nJMP 0x004049c6\nXOR EBP,EBP\nMOV EBX,0x40a5e0\nMOV ESI,0x40aef4\nTEST BPL,BPL\nJZ 0x004049f0\nMOV EDX,0x3\nMOV RDI,R15\nCALL 0x004018a0\nTEST EAX,EAX\nJNZ 0x004049fc\nJMP 0x00404a1c\nMOV RDI,R15\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404a1c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x004049d0\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00404b80\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00404a28\nMOV RAX,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV ESI,0x40b064\nMOV RDI,R15\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404b5a\nMOV EBX,0x40a780\nMOV ESI,0x40b068\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,R15\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404a1c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404a50\nCMP byte ptr [R15 + R12*0x1 + -0x1],0x53\nJNZ 0x00404aaf\nMOV byte ptr [R15 + R12*0x1 + -0x1],0x0\nMOV EBX,0x40a780\nMOV ESI,0x40b068\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R15\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404a1c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404a90\nMOV byte ptr [R15 + R12*0x1 + -0x1],0x53\nMOV EBX,0x40a830\nMOV ESI,0x40b09d\nNOP dword ptr [RAX]\nMOV RDI,R15\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404a1c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404ac0\nCMP R12,0x1\nJNZ 0x00404b05\nMOV EBX,0x40a980\nMOV ECX,0x40b11e\nMOV AL,byte ptr [R15]\nCMP AL,byte ptr [RCX]\nJZ 0x00404a1c\nMOV RCX,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RCX,RCX\nJNZ 0x00404af0\nCMP byte ptr [R15],0x0\nJZ 0x00404b53\nLEA RAX,[R15 + 0x1]\nXOR EDX,EDX\nMOV RCX,R15\nLEA RDI,[RCX + 0x1]\nMOVZX EBX,byte ptr [RAX]\nCMP byte ptr [RAX + -0x1],0x2e\nMOV SIL,0x1\nJZ 0x00404b26\nMOV ESI,EDX\nCMOVNZ RCX,RDI\nMOV byte ptr [RCX],BL\nINC RAX\nTEST BL,BL\nMOV DL,SIL\nJNZ 0x00404b14\nTEST SIL,0x1\nJZ 0x00404b53\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00404b80\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00404a1c\nXOR EBX,EBX\nJMP 0x00404a1c\nMOV EBX,0x40a770\nJMP 0x00404a1c\n'
p319
S'55\n41 57\n41 56\n41 54\n53\n49 89 f7\n49 89 fe\n41 8a 07\n84 c0\n74 20\n49 8d 5f 01\n0f 1f 80 00 00 00 00\n0f b6 f8\ne8 f8 32 00 00\n88 43 ff\n0f b6 03\n48 ff c3\n84 c0\n75 eb\nbb 90 a5 40 00\nbe e4 ae 40 00\n90\n4c 89 ff\ne8 78 d1 ff ff\n85 c0\n0f 84 8c 00 00 00\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e3\n4c 89 ff\ne8 db cf ff ff\n49 89 c4\n49 83 fc 03\n74 11\n49 83 fc 04\n75 10\n41 80 7f 03 2e\n40 0f 94 c5\neb 07\n40 b5 01\neb 02\n31 ed\nbb e0 a5 40 00\nbe f4 ae 40 00\n40 84 ed\n74 1b\nba 03 00 00 00\n4c 89 ff\ne8 be ce ff ff\n85 c0\n75 16\neb 34\n4c 89 ff\ne8 08 d1 ff ff\n85 c0\n74 20\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 c7\n4c 89 f7\n4c 89 fe\ne8 6c 01 00 00\n48 89 c3\n48 85 db\n74 0c\n48 89 d8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\nbe 64 b0 40 00\n4c 89 ff\ne8 cb d0 ff ff\n85 c0\n0f 84 1d 01 00 00\nbb 80 a7 40 00\nbe 68 b0 40 00\n66 0f 1f 84 00 00 00 00 00\n4c 89 ff\ne8 a8 d0 ff ff\n85 c0\n74 c0\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n43 80 7c 27 ff 53\n75 3e\n43 c6 44 27 ff 00\nbb 80 a7 40 00\nbe 68 b0 40 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ff\ne8 68 d0 ff ff\n85 c0\n74 80\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n43 c6 44 27 ff 53\nbb 30 a8 40 00\nbe 9d b0 40 00\n0f 1f 80 00 00 00 00\n4c 89 ff\ne8 38 d0 ff ff\n85 c0\n0f 84 4c ff ff ff\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e3\n49 83 fc 01\n75 22\nbb 80 a9 40 00\nb9 1e b1 40 00\n41 8a 07\n3a 01\n0f 84 24 ff ff ff\n48 8b 4b 10\n48 83 c3 10\n48 85 c9\n75 eb\n41 80 3f 00\n74 48\n49 8d 47 01\n31 d2\n4c 89 f9\n48 8d 79 01\n0f b6 18\n80 78 ff 2e\n40 b6 01\n74 02\n89 d6\n48 0f 45 cf\n88 19\n48 ff c0\n84 db\n40 88 f2\n75 de\n40 f6 c6 01\n74 17\n4c 89 f7\n4c 89 fe\ne8 39 00 00 00\n48 89 c3\n48 85 db\n0f 85 c9 fe ff ff\n31 db\ne9 c2 fe ff ff\nbb 70 a7 40 00\ne9 b8 fe ff ff\n'
p320
S'.text:0000000000404940\n.text:0000000000404941\n.text:0000000000404943\n.text:0000000000404945\n.text:0000000000404947\n.text:0000000000404948\n.text:000000000040494b\n.text:000000000040494e\n.text:0000000000404951\n.text:0000000000404953\n.text:0000000000404955\n.text:0000000000404959\n.text:0000000000404960\n.text:0000000000404963\n.text:0000000000404968\n.text:000000000040496b\n.text:000000000040496e\n.text:0000000000404971\n.text:0000000000404973\n.text:0000000000404975\n.text:000000000040497a\n.text:000000000040497f\n.text:0000000000404980\n.text:0000000000404983\n.text:0000000000404988\n.text:000000000040498a\n.text:0000000000404990\n.text:0000000000404994\n.text:0000000000404998\n.text:000000000040499b\n.text:000000000040499d\n.text:00000000004049a0\n.text:00000000004049a5\n.text:00000000004049a8\n.text:00000000004049ac\n.text:00000000004049ae\n.text:00000000004049b2\n.text:00000000004049b4\n.text:00000000004049b9\n.text:00000000004049bd\n.text:00000000004049bf\n.text:00000000004049c2\n.text:00000000004049c4\n.text:00000000004049c6\n.text:00000000004049cb\n.text:00000000004049d0\n.text:00000000004049d3\n.text:00000000004049d5\n.text:00000000004049da\n.text:00000000004049dd\n.text:00000000004049e2\n.text:00000000004049e4\n.text:00000000004049e6\n.text:00000000004049f0\n.text:00000000004049f3\n.text:00000000004049f8\n.text:00000000004049fa\n.text:00000000004049fc\n.text:0000000000404a00\n.text:0000000000404a04\n.text:0000000000404a07\n.text:0000000000404a09\n.text:0000000000404a0c\n.text:0000000000404a0f\n.text:0000000000404a14\n.text:0000000000404a17\n.text:0000000000404a1a\n.text:0000000000404a1c\n.text:0000000000404a1f\n.text:0000000000404a20\n.text:0000000000404a22\n.text:0000000000404a24\n.text:0000000000404a26\n.text:0000000000404a27\n.text:0000000000404a28\n.text:0000000000404a2d\n.text:0000000000404a30\n.text:0000000000404a35\n.text:0000000000404a37\n.text:0000000000404a3d\n.text:0000000000404a42\n.text:0000000000404a47\n.text:0000000000404a50\n.text:0000000000404a53\n.text:0000000000404a58\n.text:0000000000404a5a\n.text:0000000000404a5c\n.text:0000000000404a60\n.text:0000000000404a64\n.text:0000000000404a67\n.text:0000000000404a69\n.text:0000000000404a6f\n.text:0000000000404a71\n.text:0000000000404a77\n.text:0000000000404a7c\n.text:0000000000404a81\n.text:0000000000404a90\n.text:0000000000404a93\n.text:0000000000404a98\n.text:0000000000404a9a\n.text:0000000000404a9c\n.text:0000000000404aa0\n.text:0000000000404aa4\n.text:0000000000404aa7\n.text:0000000000404aa9\n.text:0000000000404aaf\n.text:0000000000404ab4\n.text:0000000000404ab9\n.text:0000000000404ac0\n.text:0000000000404ac3\n.text:0000000000404ac8\n.text:0000000000404aca\n.text:0000000000404ad0\n.text:0000000000404ad4\n.text:0000000000404ad8\n.text:0000000000404adb\n.text:0000000000404add\n.text:0000000000404ae1\n.text:0000000000404ae3\n.text:0000000000404ae8\n.text:0000000000404aed\n.text:0000000000404af0\n.text:0000000000404af2\n.text:0000000000404af8\n.text:0000000000404afc\n.text:0000000000404b00\n.text:0000000000404b03\n.text:0000000000404b05\n.text:0000000000404b09\n.text:0000000000404b0b\n.text:0000000000404b0f\n.text:0000000000404b11\n.text:0000000000404b14\n.text:0000000000404b18\n.text:0000000000404b1b\n.text:0000000000404b1f\n.text:0000000000404b22\n.text:0000000000404b24\n.text:0000000000404b26\n.text:0000000000404b2a\n.text:0000000000404b2c\n.text:0000000000404b2f\n.text:0000000000404b31\n.text:0000000000404b34\n.text:0000000000404b36\n.text:0000000000404b3a\n.text:0000000000404b3c\n.text:0000000000404b3f\n.text:0000000000404b42\n.text:0000000000404b47\n.text:0000000000404b4a\n.text:0000000000404b4d\n.text:0000000000404b53\n.text:0000000000404b55\n.text:0000000000404b5a\n.text:0000000000404b5f\n'
p321
tp322
sS'set_cloexec_flag'
p323
(S'\n__stdcall set_cloexec_flag()\n'
p324
V\u000aint set_cloexec_flag(void)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  char in_SIL;\u000a  ulong in_RDI;\u000a  \u000a  iVar3 = 0;\u000a  uVar2 = rpl_fcntl(in_RDI,1,0);\u000a  if ((int)uVar2 < 0) {\u000a    iVar3 = -1;\u000a  }\u000a  else {\u000a    uVar1 = uVar2 & 0xfffffffe;\u000a    if (in_SIL != 0) {\u000a      uVar1 = uVar2 | 1;\u000a    }\u000a    if ((uVar2 != uVar1) && (iVar3 = rpl_fcntl(in_RDI & 0xffffffff,2), iVar3 != -1)) {\u000a      iVar3 = 0;\u000a    }\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p325
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV EBX,EDI\nXOR EBP,EBP\nMOV ESI,0x1\nXOR EDX,EDX\nXOR EAX,EAX\nCALL 0x00408ef0\nTEST EAX,EAX\nJS 0x00408da9\nMOV ECX,EAX\nOR ECX,0x1\nMOV EDX,EAX\nAND EDX,0xfffffffe\nTEST R14B,R14B\nCMOVNZ EDX,ECX\nCMP EAX,EDX\nJZ 0x00408dae\nXOR EBP,EBP\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00408ef0\nCMP EAX,-0x1\nCMOVNZ EAX,EBP\nJMP 0x00408db0\nMOV EBP,0xffffffff\nMOV EAX,EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p326
S'55\n41 56\n53\n41 89 f6\n89 fb\n31 ed\nbe 01 00 00 00\n31 d2\n31 c0\ne8 77 01 00 00\n85 c0\n78 2c\n89 c1\n83 c9 01\n89 c2\n83 e2 fe\n45 84 f6\n0f 45 d1\n39 d0\n74 1d\n31 ed\nbe 02 00 00 00\n31 c0\n89 df\ne8 4f 01 00 00\n83 f8 ff\n0f 45 c5\neb 07\nbd ff ff ff ff\n89 e8\n5b\n41 5e\n5d\nc3\n'
p327
S'.text:0000000000408d60\n.text:0000000000408d61\n.text:0000000000408d63\n.text:0000000000408d64\n.text:0000000000408d67\n.text:0000000000408d69\n.text:0000000000408d6b\n.text:0000000000408d70\n.text:0000000000408d72\n.text:0000000000408d74\n.text:0000000000408d79\n.text:0000000000408d7b\n.text:0000000000408d7d\n.text:0000000000408d7f\n.text:0000000000408d82\n.text:0000000000408d84\n.text:0000000000408d87\n.text:0000000000408d8a\n.text:0000000000408d8d\n.text:0000000000408d8f\n.text:0000000000408d91\n.text:0000000000408d93\n.text:0000000000408d98\n.text:0000000000408d9a\n.text:0000000000408d9c\n.text:0000000000408da1\n.text:0000000000408da4\n.text:0000000000408da7\n.text:0000000000408da9\n.text:0000000000408dae\n.text:0000000000408db0\n.text:0000000000408db1\n.text:0000000000408db3\n.text:0000000000408db4\n'
p328
tp329
sS'parse_datetime'
p330
(S'\n__stdcall parse_datetime(timespec * result, char * p, timespec * now)\n'
p331
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000a_Bool parse_datetime(timespec *result,char *p,timespec *now)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  __syscall_slong_t _Var3;\u000a  ulong uVar4;\u000a  byte bVar5;\u000a  bool bVar6;\u000a  timespec *ptVar7;\u000a  _Bool _Var8;\u000a  int iVar9;\u000a  tm *ptVar10;\u000a  char *__value;\u000a  time_t t;\u000a  char *pcVar11;\u000a  long lVar12;\u000a  ulong n;\u000a  long lVar13;\u000a  char *__s1;\u000a  __time_t _Var14;\u000a  time_t probe;\u000a  parser_control pc;\u000a  timespec gettime_buffer;\u000a  char tz1buf [30];\u000a  char tz0buf [100];\u000a  char *local_268;\u000a  int local_258;\u000a  int local_254;\u000a  int local_250;\u000a  int local_24c;\u000a  int local_248;\u000a  int local_244;\u000a  int local_240;\u000a  int iStack572;\u000a  int local_238;\u000a  undefined4 uStack564;\u000a  undefined4 local_230;\u000a  undefined4 uStack556;\u000a  char *local_228;\u000a  timespec *local_220;\u000a  undefined8 local_218;\u000a  int local_210;\u000a  int iStack524;\u000a  int local_208;\u000a  int iStack516;\u000a  int iStack512;\u000a  int iStack508;\u000a  int local_1f8;\u000a  undefined4 uStack500;\u000a  undefined4 uStack496;\u000a  undefined4 uStack492;\u000a  char *local_1e8;\u000a  char *local_1d8;\u000a  long local_1d0;\u000a  int local_1c8;\u000a  int local_1c4;\u000a  long local_1c0;\u000a  int local_1b8;\u000a  undefined4 local_1b0;\u000a  undefined4 uStack428;\u000a  undefined8 local_1a8;\u000a  size_t local_1a0;\u000a  long local_198;\u000a  long local_190;\u000a  long local_188;\u000a  long local_180;\u000a  undefined8 local_178;\u000a  undefined8 local_170;\u000a  int local_168;\u000a  uint uStack356;\u000a  int local_160;\u000a  uint uStack348;\u000a  int local_158;\u000a  uint uStack340;\u000a  undefined4 local_150;\u000a  undefined4 uStack332;\u000a  undefined4 local_148;\u000a  undefined4 uStack324;\u000a  undefined2 local_140;\u000a  undefined2 uStack318;\u000a  undefined2 uStack316;\u000a  undefined2 uStack314;\u000a  undefined2 local_138;\u000a  undefined4 uStack310;\u000a  undefined2 uStack306;\u000a  _Bool local_130;\u000a  _Bool local_12f;\u000a  undefined4 local_128;\u000a  undefined4 uStack292;\u000a  undefined4 local_120;\u000a  undefined4 uStack284;\u000a  undefined4 local_118;\u000a  undefined4 uStack276;\u000a  undefined4 local_110;\u000a  undefined4 uStack268;\u000a  undefined4 local_108;\u000a  undefined4 uStack260;\u000a  undefined4 local_100;\u000a  undefined4 uStack252;\u000a  char *local_f8;\u000a  int local_f0;\u000a  int local_ec;\u000a  char *local_e8;\u000a  int local_e0;\u000a  int local_dc;\u000a  char *local_d8;\u000a  timespec local_c8;\u000a  char local_b8 [32];\u000a  char local_98 [104];\u000a  \u000a  if (now == (timespec *)0x0) {\u000a    now = &local_c8;\u000a    gettime(now);\u000a  }\u000a  _Var14 = now->tv_sec;\u000a  _Var3 = now->tv_nsec;\u000a  ptVar10 = localtime((time_t *)now);\u000a  if (ptVar10 == (tm *)0x0) {\u000a    return false;\u000a  }\u000a  pcVar11 = p + 3;\u000a  local_220 = result;\u000a  do {\u000a    __s1 = pcVar11;\u000a    _Var8 = c_isspace();\u000a    pcVar11 = __s1 + 1;\u000a  } while (_Var8 != false);\u000a  __s1 = __s1 + -3;\u000a  iVar9 = strncmp(__s1,"TZ=\u005c"",4);\u000a  if (iVar9 == 0) {\u000a    n = 1;\u000a    __value = pcVar11;\u000a    do {\u000a      cVar2 = *__value;\u000a      if (cVar2 == '\u005c\u005c') {\u000a        pcVar1 = __value + 1;\u000a        __value = __value + 1;\u000a        if ((*pcVar1 != '\u005c"') && (*pcVar1 != '\u005c\u005c')) break;\u000a      }\u000a      else {\u000a        if (cVar2 == 0) break;\u000a        if (cVar2 == '\u005c"') goto LAB_0040430a;\u000a      }\u000a      __value = __value + 1;\u000a      n = n + 1;\u000a    } while( true );\u000a  }\u000a  local_268 = (char *)0x0;\u000a  bVar6 = false;\u000aLAB_00403f77:\u000a  local_1d8 = "0";\u000a  if (*__s1 != 0) {\u000a    local_1d8 = __s1;\u000a  }\u000a  local_1a8 = (long)ptVar10->tm_year + 0x76c;\u000a  local_1a0 = 0;\u000a  local_198 = (long)ptVar10->tm_mon + 1;\u000a  local_190 = (long)ptVar10->tm_mday;\u000a  local_188 = (long)ptVar10->tm_hour;\u000a  local_180 = (long)ptVar10->tm_min;\u000a  local_178 = (long)ptVar10->tm_sec;\u000a  local_238 = ptVar10->tm_isdst;\u000a  local_1b8 = 2;\u000a  local_138 = 0;\u000a  uStack310 = 0;\u000a  uStack306 = 0;\u000a  local_130 = false;\u000a  local_12f = false;\u000a  local_148 = 0;\u000a  uStack324 = 0;\u000a  local_140 = 0;\u000a  uStack318 = 0;\u000a  uStack316 = 0;\u000a  uStack314 = 0;\u000a  local_158 = 0;\u000a  uStack340 = 0;\u000a  local_150 = 0;\u000a  uStack332 = 0;\u000a  local_168 = 0;\u000a  uStack356 = 0;\u000a  local_160 = 0;\u000a  uStack348 = 0;\u000a  local_108 = 0;\u000a  uStack260 = 0;\u000a  local_100 = 0;\u000a  uStack252 = 0;\u000a  local_118 = 0;\u000a  uStack276 = 0;\u000a  local_110 = 0;\u000a  uStack268 = 0;\u000a  local_128 = 0;\u000a  uStack292 = 0;\u000a  local_120 = 0;\u000a  uStack284 = 0;\u000a  local_f8 = ptVar10->tm_zone;\u000a  local_f0 = 0x10d;\u000a  local_ec = ptVar10->tm_isdst;\u000a  local_e8 = (char *)0x0;\u000a  lVar12 = 1;\u000a  local_170 = _Var3;\u000a  do {\u000a    _Var14 = _Var14 + 0x76a700;\u000a    local_218 = _Var14;\u000a    ptVar10 = localtime(&local_218);\u000a    if (((ptVar10 != (tm *)0x0) && (ptVar10->tm_zone != (char *)0x0)) &&\u000a       (ptVar10->tm_isdst != local_ec)) {\u000a      local_e0 = 0x10d;\u000a      local_d8 = (char *)0x0;\u000a      local_e8 = ptVar10->tm_zone;\u000a      local_dc = ptVar10->tm_isdst;\u000a      break;\u000a    }\u000a    lVar12 = lVar12 + 1;\u000a  } while (lVar12 < 4);\u000a  if (((local_f8 != (char *)0x0) && (local_e8 != (char *)0x0)) &&\u000a     (iVar9 = strcmp(local_f8,local_e8), iVar9 == 0)) {\u000a    local_ec = -1;\u000a    local_e8 = (char *)0x0;\u000a  }\u000a  iVar9 = yyparse((parser_control *)&local_1d8);\u000a  if (iVar9 == 0) {\u000a    if (local_130 != false) {\u000a      *(int *)&local_220->tv_sec = (int)local_178;\u000a      *(undefined4 *)((long)&local_220->tv_sec + 4) = local_178._4_4_;\u000a      *(undefined4 *)&local_220->tv_nsec = (undefined4)local_170;\u000a      *(undefined4 *)((long)&local_220->tv_nsec + 4) = local_170._4_4_;\u000a      bVar5 = 1;\u000a      goto joined_r0x004046b3;\u000a    }\u000a    if (1 < (CONCAT44(uStack252,local_100) + CONCAT44(uStack276,local_118) |\u000a            CONCAT44(uStack292,local_128) | CONCAT44(uStack260,local_108) |\u000a            CONCAT44(uStack284,local_120) | CONCAT44(uStack268,local_110))) goto LAB_00404197;\u000a    lVar12 = to_year((textint)CONCAT816(local_1a0,\u000a                                        CONCAT412(local_1a8._4_4_,\u000a                                                  CONCAT48((undefined4)local_1a8,\u000a                                                           CONCAT44(uStack428,local_1b0)))));\u000a    local_244 = (int)lVar12 + -0x76c;\u000a    local_248 = (int)local_198 + -1;\u000a    local_24c = (int)local_190;\u000a    if ((CONCAT44(uStack260,local_108) != 0) ||\u000a       ((local_12f != false &&\u000a        ((CONCAT44(uStack284,local_120) | CONCAT44(uStack292,local_128)) == 0)))) {\u000a      local_250 = to_hour(local_188);\u000a      if (-1 < local_250) {\u000a        local_254 = (int)local_180;\u000a        local_258 = (int)local_178;\u000a        goto LAB_004043fb;\u000a      }\u000aLAB_00404765:\u000a      bVar5 = 0;\u000a      goto joined_r0x004046b3;\u000a    }\u000a    local_258 = 0;\u000a    local_254 = 0;\u000a    local_250 = 0;\u000a    local_170 = 0;\u000aLAB_004043fb:\u000a    ptVar7 = local_220;\u000a    if ((CONCAT44(uStack284,local_120) | CONCAT44(uStack292,local_128) |\u000a        CONCAT44(uStack260,local_108)) != 0) {\u000a      local_238 = -1;\u000a    }\u000a    if (CONCAT44(uStack276,local_118) != 0) {\u000a      local_238 = local_1c4;\u000a    }\u000a    local_1e8 = local_228;\u000a    local_1f8 = local_238;\u000a    uStack500 = uStack564;\u000a    uStack496 = local_230;\u000a    uStack492 = uStack556;\u000a    local_208 = local_248;\u000a    iStack516 = local_244;\u000a    iStack512 = local_240;\u000a    iStack508 = iStack572;\u000a    local_218 = CONCAT44(local_254,local_258);\u000a    local_210 = local_250;\u000a    iStack524 = local_24c;\u000a    t = rpl_mktime((tm *)&local_258);\u000a    _Var8 = mktime_ok((tm *)&local_218,(tm *)&local_258,t);\u000a    if (_Var8 != false) {\u000a      lVar12 = CONCAT44(uStack284,local_120);\u000ajoined_r0x004047d6:\u000a      if ((lVar12 != 0) && (CONCAT44(uStack292,local_128) == 0)) {\u000a        iVar9 = (local_1c8 + 7) - local_240;\u000a        local_24c = iVar9 + (iVar9 / 7 + (iVar9 >> 0x1f) +\u000a                            (uint)((ulong)((long)iVar9 * 0x92492493) >> 0x3f)) * -7 + local_24c +\u000a                    ((int)local_1d0 - (uint)(0 < local_1d0 && local_1c8 != local_240)) * 7;\u000a        local_238 = -1;\u000a        t = rpl_mktime((tm *)&local_258);\u000a        if (t == -1) goto LAB_00404765;\u000a      }\u000a      if ((CONCAT44(uStack348,local_160) | CONCAT44(uStack356,local_168) |\u000a          CONCAT44(uStack340,local_158)) == 0) {\u000aLAB_004045e9:\u000a        if (CONCAT44(uStack252,local_100) != 0) {\u000a          t = local_1c0 * -0x3c + t + CONCAT44(uStack556,local_230);\u000a        }\u000a        lVar13 = CONCAT26(uStack306,CONCAT42(uStack310,local_138)) + local_170;\u000a        lVar12 = lVar13 + (lVar13 / 1000000000 + (lVar13 >> 0x3f)) * -1000000000 + 1000000000;\u000a        lVar12 = lVar12 + (lVar12 / 1000000000 + (lVar12 >> 0x3f)) * -1000000000;\u000a        lVar13 = lVar13 - lVar12;\u000a        ptVar7->tv_sec =\u000a             CONCAT44(uStack324,local_148) * 0x3c + CONCAT44(uStack332,local_150) * 0xe10 + t +\u000a             CONCAT26(uStack314,CONCAT24(uStack316,CONCAT22(uStack318,local_140))) +\u000a             lVar13 / 1000000000 + (lVar13 >> 0x3f);\u000a        ptVar7->tv_nsec = lVar12;\u000a        bVar5 = 1;\u000a        goto joined_r0x004046b3;\u000a      }\u000a      if ((uStack340 >> 0x1f ^ (uint)(local_158 + local_24c < local_24c) |\u000a          uStack348 >> 0x1f ^ (uint)(local_160 + local_248 < local_248) |\u000a          uStack356 >> 0x1f ^ (uint)(local_168 + local_244 < local_244)) == 0) {\u000a        local_250 = local_210;\u000a        local_254 = local_218._4_4_;\u000a        local_258 = (int)local_218;\u000a        local_238 = local_1f8;\u000a        local_24c = local_158 + local_24c;\u000a        local_248 = local_160 + local_248;\u000a        local_244 = local_168 + local_244;\u000a        t = rpl_mktime((tm *)&local_258);\u000a        if (t != -1) goto LAB_004045e9;\u000a      }\u000a      goto LAB_00404765;\u000a    }\u000a    if (CONCAT44(uStack252,local_100) == 0) goto LAB_00404765;\u000a    if (!bVar6) {\u000a      local_268 = get_tz(local_98);\u000a    }\u000a    __sprintf_chk(local_b8,1,0x1e);\u000a    iVar9 = setenv("TZ",local_b8,1);\u000a    if (iVar9 != 0) goto LAB_00404765;\u000a    local_228 = local_1e8;\u000a    local_238 = local_1f8;\u000a    uStack564 = uStack500;\u000a    local_230 = uStack496;\u000a    uStack556 = uStack492;\u000a    local_248 = local_208;\u000a    local_244 = iStack516;\u000a    local_240 = iStack512;\u000a    iStack572 = iStack508;\u000a    local_258 = (int)local_218;\u000a    local_254 = local_218._4_4_;\u000a    local_250 = local_210;\u000a    local_24c = iStack524;\u000a    t = rpl_mktime((tm *)&local_258);\u000a    _Var8 = mktime_ok((tm *)&local_218,(tm *)&local_258,t);\u000a    if (_Var8 != false) {\u000a      bVar6 = true;\u000a      lVar12 = CONCAT44(uStack284,local_120);\u000a      goto joined_r0x004047d6;\u000a    }\u000a    bVar5 = 0;\u000a  }\u000a  else {\u000aLAB_00404197:\u000a    bVar5 = 0;\u000ajoined_r0x004046b3:\u000a    if (!bVar6) goto LAB_004041e8;\u000a  }\u000a  if (local_268 == (char *)0x0) {\u000a    iVar9 = unsetenv("TZ");\u000a  }\u000a  else {\u000a    iVar9 = setenv("TZ",local_268,1);\u000a  }\u000a  bVar5 = bVar5 & iVar9 == 0;\u000aLAB_004041e8:\u000a  if (local_268 != local_98) {\u000a    free(local_268);\u000a  }\u000a  return (_Bool)bVar5;\u000aLAB_0040430a:\u000a  local_268 = get_tz(local_98);\u000a  if (n < 0x65) {\u000a    __value = &local_1d8;\u000a  }\u000a  else {\u000a    __value = (char *)xmalloc(n);\u000a  }\u000a  cVar2 = *pcVar11;\u000a  __s1 = pcVar11;\u000a  pcVar11 = __value;\u000a  while (cVar2 != '\u005c"') {\u000a    uVar4 = (ulong)(cVar2 == '\u005c\u005c');\u000a    *pcVar11 = __s1[uVar4];\u000a    pcVar11 = pcVar11 + 1;\u000a    cVar2 = __s1[uVar4 + 1];\u000a    __s1 = __s1 + uVar4 + 1;\u000a  }\u000a  *pcVar11 = 0;\u000a  iVar9 = setenv("TZ",__value,1);\u000a  if (100 < n) {\u000a    free(__value);\u000a  }\u000a  if (iVar9 != 0) {\u000a    bVar5 = 0;\u000a    goto LAB_004041e8;\u000a  }\u000a  do {\u000a    __s1 = __s1 + 1;\u000a    _Var8 = c_isspace();\u000a  } while (_Var8 != false);\u000a  bVar6 = true;\u000a  goto LAB_00403f77;\u000a}\u000a\u000a
p332
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x258\nMOV RBP,RDX\nMOV RBX,RSI\nMOV R13,RDI\nTEST RBP,RBP\nJNZ 0x00403f0f\nLEA RBP,[0x1c0 + RSP]\nMOV RDI,RBP\nCALL 0x00402dd0\nMOV R15,qword ptr [RBP]\nMOV R14,qword ptr [RBP + 0x8]\nMOV RDI,RBP\nCALL 0x00401870\nMOV R12,RAX\nTEST R12,R12\nJZ 0x004040d9\nMOV qword ptr [RSP + 0x68],R13\nADD RBX,0x3\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVZX EDI,byte ptr [RBX + -0x3]\nCALL 0x00407c00\nINC RBX\nTEST AL,AL\nJNZ 0x00403f40\nLEA R13,[RBX + -0x4]\nMOV ESI,0x40aece\nMOV EDX,0x4\nMOV RDI,R13\nCALL 0x004018a0\nTEST EAX,EAX\nJZ 0x004040e0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x20],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nCMP byte ptr [R13],0x0\nMOV EAX,0x40b6ca\nCMOVNZ RAX,R13\nMOV qword ptr [0xb0 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0x14]\nLEA R13,[0xd8 + RSP]\nADD RAX,0x76c\nMOV qword ptr [0xe0 + RSP],RAX\nMOV qword ptr [0xe8 + RSP],0x0\nMOVSXD RAX,dword ptr [R12 + 0x10]\nINC RAX\nMOV qword ptr [0xf0 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0xc]\nMOV qword ptr [0xf8 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0x8]\nMOV qword ptr [0x100 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0x4]\nMOV qword ptr [0x108 + RSP],RAX\nMOVSXD RAX,dword ptr [R12]\nMOV qword ptr [0x110 + RSP],RAX\nMOV qword ptr [0x118 + RSP],R14\nMOV EAX,dword ptr [R12 + 0x20]\nMOV dword ptr [RSP + 0x50],EAX\nMOV dword ptr [0xd0 + RSP],0x2\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [0x14a + RSP],XMM0\nMOVUPS xmmword ptr [0x140 + RSP],XMM0\nMOVUPS xmmword ptr [0x130 + RSP],XMM0\nMOVUPS xmmword ptr [0x120 + RSP],XMM0\nMOVUPS xmmword ptr [0x180 + RSP],XMM0\nMOVUPS xmmword ptr [0x170 + RSP],XMM0\nMOVUPS xmmword ptr [0x160 + RSP],XMM0\nMOV RAX,qword ptr [R12 + 0x30]\nMOV qword ptr [0x190 + RSP],RAX\nMOV dword ptr [0x198 + RSP],0x10d\nMOV EAX,dword ptr [R12 + 0x20]\nMOV dword ptr [0x19c + RSP],EAX\nMOV qword ptr [0x1a0 + RSP],0x0\nADD R15,0x76a700\nMOV EBP,0x1\nLEA RBX,[RSP + 0x70]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV qword ptr [RSP + 0x70],R15\nMOV RDI,RBX\nCALL 0x00401870\nTEST RAX,RAX\nJZ 0x004040c7\nMOV RCX,qword ptr [RAX + 0x30]\nTEST RCX,RCX\nJZ 0x004040c7\nMOV EAX,dword ptr [RAX + 0x20]\nCMP EAX,dword ptr [0x19c + RSP]\nJNZ 0x00404126\nINC RBP\nADD R15,0x76a700\nCMP RBP,0x4\nJL 0x004040a0\nJMP 0x0040414c\nXOR EAX,EAX\nJMP 0x00404202\nMOV EBP,0x1\nMOV RAX,RBX\nJMP 0x004040f6\nINC RAX\nINC RBP\nMOVZX ECX,byte ptr [RAX]\nCMP CL,0x5c\nJZ 0x00404110\nTEST CL,CL\nJZ 0x00403f6e\nCMP CL,0x22\nJNZ 0x004040f0\nJMP 0x0040430a\nMOVZX ECX,byte ptr [RAX + 0x1]\nINC RAX\nCMP CL,0x22\nJZ 0x004040f0\nCMP CL,0x5c\nJZ 0x004040f0\nJMP 0x00403f6e\nMOV qword ptr [0x1a0 + RSP],RCX\nMOV dword ptr [0x1a8 + RSP],0x10d\nMOV dword ptr [0x1ac + RSP],EAX\nMOV qword ptr [0x1b0 + RSP],0x0\nMOV RDI,qword ptr [0x190 + RSP]\nTEST RDI,RDI\nJZ 0x00404186\nMOV RSI,qword ptr [0x1a0 + RSP]\nTEST RSI,RSI\nJZ 0x00404186\nCALL 0x00401b00\nTEST EAX,EAX\nJNZ 0x00404186\nMOV dword ptr [0x19c + RSP],0xffffffff\nMOV qword ptr [0x1a0 + RSP],0x0\nLEA RDI,[0xb0 + RSP]\nCALL 0x00402e10\nTEST EAX,EAX\nJZ 0x0040419b\nXOR EBX,EBX\nJMP 0x004041b4\nCMP byte ptr [0x158 + RSP],0x0\nJZ 0x00404214\nMOVUPS XMM0,xmmword ptr [R13 + 0x38]\nMOV RAX,qword ptr [RSP + 0x68]\nMOVUPS xmmword ptr [RAX],XMM0\nMOV BL,0x1\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R13,qword ptr [RSP + 0x28]\nTEST R13B,R13B\nJZ 0x004041e8\nMOV EDI,0x40aed3\nTEST RBP,RBP\nJZ 0x004041dc\nMOV EDX,0x1\nMOV RSI,RBP\nCALL 0x00401920\nJMP 0x004041e1\nCALL 0x00401c80\nTEST EAX,EAX\nSETZ AL\nAND BL,AL\nLEA RAX,[0x1f0 + RSP]\nCMP RBP,RAX\nJZ 0x004041fd\nMOV RDI,RBP\nCALL 0x00401850\nTEST BL,BL\nSETNZ AL\nADD RSP,0x258\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RAX,qword ptr [0x160 + RSP]\nMOV RCX,qword ptr [0x188 + RSP]\nOR RAX,qword ptr [0x180 + RSP]\nOR RAX,qword ptr [0x168 + RSP]\nOR RAX,qword ptr [0x178 + RSP]\nADD RCX,qword ptr [0x170 + RSP]\nOR RCX,RAX\nCMP RCX,0x1\nJA 0x00404197\nMOV RAX,qword ptr [R13 + 0x10]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R13]\nMOVUPS xmmword ptr [RSP],XMM0\nCALL 0x00404850\nADD EAX,0xfffff894\nMOV dword ptr [RSP + 0x44],EAX\nMOV EAX,0xfffff894\nADD EAX,dword ptr [0xf0 + RSP]\nADD EAX,0x76b\nMOV dword ptr [RSP + 0x40],EAX\nMOV EAX,dword ptr [0xf8 + RSP]\nMOV dword ptr [RSP + 0x3c],EAX\nCMP qword ptr [0x180 + RSP],0x0\nJNZ 0x004042c0\nCMP byte ptr [0x159 + RSP],0x0\nJZ 0x004043c8\nMOV RAX,qword ptr [0x168 + RSP]\nOR RAX,qword ptr [0x160 + RSP]\nJNZ 0x004043c8\nMOV RDI,qword ptr [0x100 + RSP]\nMOV ESI,dword ptr [0xd0 + RSP]\nCALL 0x00404880\nMOV dword ptr [RSP + 0x38],EAX\nTEST EAX,EAX\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R12,qword ptr [RSP + 0x68]\nMOV R13,qword ptr [RSP + 0x28]\nJS 0x00404765\nMOV EAX,dword ptr [0x108 + RSP]\nMOV dword ptr [RSP + 0x34],EAX\nMOV EAX,dword ptr [0x110 + RSP]\nMOV dword ptr [RSP + 0x30],EAX\nJMP 0x004043fb\nLEA RDI,[0x1f0 + RSP]\nCALL 0x004047f0\nMOV R13,RAX\nCMP RBP,0x65\nJC 0x0040432a\nMOV RDI,RBP\nCALL 0x00406e50\nJMP 0x00404332\nLEA RAX,[0xb0 + RSP]\nMOV qword ptr [RSP + 0x20],R13\nMOV CL,byte ptr [RBX]\nMOV RSI,RAX\nCMP CL,0x22\nJNZ 0x00404350\nMOV R13,RBX\nJMP 0x00404373\nXOR EDX,EDX\nCMP CL,0x5c\nSETZ DL\nMOVZX ECX,byte ptr [RBX + RDX*0x1]\nMOV byte ptr [RSI],CL\nINC RSI\nLEA R13,[RBX + RDX*0x1 + 0x1]\nMOVZX ECX,byte ptr [RBX + RDX*0x1 + 0x1]\nCMP CL,0x22\nMOV RBX,R13\nJNZ 0x00404350\nMOV byte ptr [RSI],0x0\nMOV EDI,0x40aed3\nMOV EDX,0x1\nMOV RBX,RAX\nMOV RSI,RBX\nCALL 0x00401920\nCMP RBP,0x65\nJC 0x0040439d\nMOV RDI,RBX\nMOV EBX,EAX\nCALL 0x00401850\nMOV EAX,EBX\nTEST EAX,EAX\nJZ 0x004043b0\nXOR EBX,EBX\nMOV RBP,qword ptr [RSP + 0x20]\nJMP 0x004041e8\nMOVZX EDI,byte ptr [R13 + 0x1]\nINC R13\nCALL 0x00407c00\nTEST AL,AL\nJNZ 0x004043b0\nMOV AL,0x1\nJMP 0x00403f77\nMOV dword ptr [RSP + 0x30],0x0\nMOV dword ptr [RSP + 0x34],0x0\nMOV dword ptr [RSP + 0x38],0x0\nMOV qword ptr [0x118 + RSP],0x0\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R12,qword ptr [RSP + 0x68]\nMOV R13,qword ptr [RSP + 0x28]\nMOV RAX,qword ptr [0x168 + RSP]\nOR RAX,qword ptr [0x160 + RSP]\nOR RAX,qword ptr [0x180 + RSP]\nJZ 0x0040441d\nMOV dword ptr [RSP + 0x50],0xffffffff\nCMP qword ptr [0x170 + RSP],0x0\nJZ 0x00404433\nMOV EAX,dword ptr [0xc4 + RSP]\nMOV dword ptr [RSP + 0x50],EAX\nMOV RAX,qword ptr [RSP + 0x60]\nMOV qword ptr [0xa0 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x30]\nMOVUPS XMM1,xmmword ptr [RSP + 0x40]\nMOVUPS XMM2,xmmword ptr [RSP + 0x50]\nMOVAPS xmmword ptr [0x90 + RSP],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM0\nLEA RBX,[RSP + 0x30]\nMOV RDI,RBX\nCALL 0x00407770\nMOV R14,RAX\nLEA RDI,[RSP + 0x70]\nMOV RSI,RBX\nMOV RDX,R14\nCALL 0x004048e0\nTEST AL,AL\nJZ 0x004046be\nCMP qword ptr [0x168 + RSP],0x0\nJZ 0x0040452c\nMOV RAX,qword ptr [0x160 + RSP]\nTEST RAX,RAX\nJNZ 0x0040452c\nMOV ECX,dword ptr [0xc0 + RSP]\nMOV EDX,dword ptr [RSP + 0x48]\nLEA EAX,[RCX + 0x7]\nSUB EAX,EDX\nCDQE\nIMUL RSI,RAX,-0x6db6db6d\nSHR RSI,0x20\nADD ESI,EAX\nMOV EDI,ESI\nSHR EDI,0x1f\nSAR ESI,0x2\nADD ESI,EDI\nLEA EDI,[RSI*0x8]\nSUB EDI,ESI\nSUB EAX,EDI\nMOV RSI,qword ptr [0xb8 + RSP]\nTEST RSI,RSI\nSETG BL\nCMP ECX,EDX\nSETNZ CL\nAND CL,BL\nMOVZX ECX,CL\nSUB ESI,ECX\nLEA ECX,[RSI*0x8]\nSUB ECX,ESI\nADD EAX,dword ptr [RSP + 0x3c]\nADD EAX,ECX\nMOV dword ptr [RSP + 0x3c],EAX\nMOV dword ptr [RSP + 0x50],0xffffffff\nLEA RDI,[RSP + 0x30]\nCALL 0x00407770\nMOV R14,RAX\nCMP R14,-0x1\nJZ 0x00404765\nMOV RSI,qword ptr [0x120 + RSP]\nMOV RAX,qword ptr [0x128 + RSP]\nMOV RDX,RAX\nOR RDX,RSI\nMOV RCX,qword ptr [0x130 + RSP]\nOR RDX,RCX\nJZ 0x004045e9\nMOV EDX,dword ptr [RSP + 0x44]\nLEA R8D,[RSI + RDX*0x1]\nMOV R11D,dword ptr [RSP + 0x3c]\nMOV EDI,dword ptr [RSP + 0x40]\nLEA R9D,[RAX + RDI*0x1]\nLEA R10D,[RCX + R11*0x1]\nXOR EBX,EBX\nCMP R8D,EDX\nSETL BL\nSHR RSI,0x3f\nXOR ESI,EBX\nXOR EDX,EDX\nCMP R9D,EDI\nSETL DL\nSHR RAX,0x3f\nXOR EAX,EDX\nOR EAX,ESI\nXOR EDX,EDX\nCMP R10D,R11D\nSETL DL\nSHR RCX,0x3f\nXOR ECX,EDX\nOR ECX,EAX\nJNZ 0x00404765\nMOV dword ptr [RSP + 0x44],R8D\nMOV dword ptr [RSP + 0x40],R9D\nMOV dword ptr [RSP + 0x3c],R10D\nMOV EAX,dword ptr [RSP + 0x78]\nMOV dword ptr [RSP + 0x38],EAX\nMOV EAX,dword ptr [RSP + 0x74]\nMOV dword ptr [RSP + 0x34],EAX\nMOV EAX,dword ptr [RSP + 0x70]\nMOV dword ptr [RSP + 0x30],EAX\nMOV EAX,dword ptr [0x90 + RSP]\nMOV dword ptr [RSP + 0x50],EAX\nLEA RDI,[RSP + 0x30]\nCALL 0x00407770\nMOV R14,RAX\nCMP R14,-0x1\nJZ 0x00404765\nCMP qword ptr [0x188 + RSP],0x0\nJZ 0x00404608\nIMUL RAX,qword ptr [0xc8 + RSP],-0x3c\nADD RAX,R14\nADD RAX,qword ptr [RSP + 0x58]\nMOV R14,RAX\nMOV RSI,qword ptr [0x150 + RSP]\nADD RSI,qword ptr [0x118 + RSP]\nMOV RDI,0x112e0be826d694b3\nMOV RAX,RSI\nIMUL RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x1a\nADD RDX,RAX\nIMUL RAX,RDX,0x3b9aca00\nMOV RCX,RSI\nSUB RCX,RAX\nADD RCX,0x3b9aca00\nMOV RAX,RCX\nIMUL RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x1a\nADD RDX,RAX\nIMUL RAX,RDX,0x3b9aca00\nSUB RCX,RAX\nSUB RSI,RCX\nMOV RAX,RSI\nIMUL RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x1a\nADD RDX,RAX\nIMUL RAX,qword ptr [0x138 + RSP],0xe10\nADD RAX,R14\nIMUL RSI,qword ptr [0x140 + RSP],0x3c\nADD RSI,RAX\nADD RSI,qword ptr [0x148 + RSP]\nADD RSI,RDX\nMOV qword ptr [R12],RSI\nMOV qword ptr [R12 + 0x8],RCX\nMOV BL,0x1\nTEST R13B,R13B\nJNZ 0x004041c3\nJMP 0x004041e8\nCMP qword ptr [0x188 + RSP],0x0\nJZ 0x00404765\nMOV R15,qword ptr [0xc8 + RSP]\nMOV RBX,R15\nNEG RBX\nCMOVL RBX,R15\nMOV RCX,-0x7777777777777777\nMOV RAX,RBX\nIMUL RCX\nADD RDX,RBX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x5\nLEA R14,[RDX + RAX*0x1]\nADD EDX,EAX\nIMUL EAX,EDX,0x3c\nSUB EBX,EAX\nTEST R13B,R13B\nJNZ 0x0040471d\nLEA RDI,[0x1f0 + RSP]\nCALL 0x004047f0\nMOV RBP,RAX\nSHR R15,0x3f\nLEA R8,[0x40b185 + R15]\nMOV dword ptr [RSP],EBX\nLEA RBX,[0x1d0 + RSP]\nMOV ESI,0x1\nMOV EDX,0x1e\nMOV ECX,0x40aed6\nXOR EAX,EAX\nMOV RDI,RBX\nMOV R9,R14\nCALL 0x00401d20\nMOV EDI,0x40aed3\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00401920\nTEST EAX,EAX\nJZ 0x00404775\nXOR EBX,EBX\nTEST R13B,R13B\nJNZ 0x004041c3\nJMP 0x004041e8\nMOV RAX,qword ptr [0xa0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOVAPS XMM0,xmmword ptr [RSP + 0x70]\nMOVAPS XMM1,xmmword ptr [0x80 + RSP]\nMOVAPS XMM2,xmmword ptr [0x90 + RSP]\nMOVAPS xmmword ptr [RSP + 0x50],XMM2\nMOVAPS xmmword ptr [RSP + 0x40],XMM1\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nLEA RBX,[RSP + 0x30]\nMOV RDI,RBX\nCALL 0x00407770\nMOV R14,RAX\nLEA RDI,[RSP + 0x70]\nMOV RSI,RBX\nMOV RDX,R14\nCALL 0x004048e0\nTEST AL,AL\nJZ 0x004047e1\nMOV R13B,0x1\nCMP qword ptr [0x168 + RSP],0x0\nJNZ 0x0040449b\nJMP 0x0040452c\nXOR EBX,EBX\nJMP 0x004041c3\n'
p333
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 58 02 00 00\n48 89 d5\n48 89 f3\n49 89 fd\n48 85 ed\n75 10\n48 8d ac 24 c0 01 00 00\n48 89 ef\ne8 c1 ee ff ff\n4c 8b 7d 00\n4c 8b 75 08\n48 89 ef\ne8 51 d9 ff ff\n49 89 c4\n4d 85 e4\n0f 84 ae 01 00 00\n4c 89 6c 24 68\n48 83 c3 03\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 7b fd\ne8 b7 3c 00 00\n48 ff c3\n84 c0\n75 f0\n4c 8d 6b fc\nbe ce ae 40 00\nba 04 00 00 00\n4c 89 ef\ne8 3a d9 ff ff\n85 c0\n0f 84 72 01 00 00\n31 c0\n48 89 44 24 20\n31 c0\n48 89 44 24 28\n41 80 7d 00 00\nb8 ca b6 40 00\n49 0f 45 c5\n48 89 84 24 b0 00 00 00\n49 63 44 24 14\n4c 8d ac 24 d8 00 00 00\n48 05 6c 07 00 00\n48 89 84 24 e0 00 00 00\n48 c7 84 24 e8 00 00 00 00 00 00 00\n49 63 44 24 10\n48 ff c0\n48 89 84 24 f0 00 00 00\n49 63 44 24 0c\n48 89 84 24 f8 00 00 00\n49 63 44 24 08\n48 89 84 24 00 01 00 00\n49 63 44 24 04\n48 89 84 24 08 01 00 00\n49 63 04 24\n48 89 84 24 10 01 00 00\n4c 89 b4 24 18 01 00 00\n41 8b 44 24 20\n89 44 24 50\nc7 84 24 d0 00 00 00 02 00 00 00\n0f 57 c0\n0f 11 84 24 4a 01 00 00\n0f 11 84 24 40 01 00 00\n0f 11 84 24 30 01 00 00\n0f 11 84 24 20 01 00 00\n0f 11 84 24 80 01 00 00\n0f 11 84 24 70 01 00 00\n0f 11 84 24 60 01 00 00\n49 8b 44 24 30\n48 89 84 24 90 01 00 00\nc7 84 24 98 01 00 00 0d 01 00 00\n41 8b 44 24 20\n89 84 24 9c 01 00 00\n48 c7 84 24 a0 01 00 00 00 00 00 00\n49 81 c7 00 a7 76 00\nbd 01 00 00 00\n48 8d 5c 24 70\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 7c 24 70\n48 89 df\ne8 c3 d7 ff ff\n48 85 c0\n74 15\n48 8b 48 30\n48 85 c9\n74 0c\n8b 40 20\n3b 84 24 9c 01 00 00\n75 5f\n48 ff c5\n49 81 c7 00 a7 76 00\n48 83 fd 04\n7c c9\neb 73\n31 c0\ne9 22 01 00 00\nbd 01 00 00 00\n48 89 d8\neb 0c\n48 ff c0\n48 ff c5\n0f b6 08\n80 f9 5c\n74 12\n84 c9\n0f 84 68 fe ff ff\n80 f9 22\n75 e5\ne9 fa 01 00 00\n0f b6 48 01\n48 ff c0\n80 f9 22\n74 d4\n80 f9 5c\n74 cf\ne9 48 fe ff ff\n48 89 8c 24 a0 01 00 00\nc7 84 24 a8 01 00 00 0d 01 00 00\n89 84 24 ac 01 00 00\n48 c7 84 24 b0 01 00 00 00 00 00 00\n48 8b bc 24 90 01 00 00\n48 85 ff\n74 2d\n48 8b b4 24 a0 01 00 00\n48 85 f6\n74 20\ne8 95 d9 ff ff\n85 c0\n75 17\nc7 84 24 9c 01 00 00 ff ff ff ff\n48 c7 84 24 a0 01 00 00 00 00 00 00\n48 8d bc 24 b0 00 00 00\ne8 7d ec ff ff\n85 c0\n74 04\n31 db\neb 19\n80 bc 24 58 01 00 00 00\n74 6f\n41 0f 10 45 38\n48 8b 44 24 68\n0f 11 00\nb3 01\n48 8b 6c 24 20\n4c 8b 6c 24 28\n45 84 ed\n74 25\nbf d3 ae 40 00\n48 85 ed\n74 0f\nba 01 00 00 00\n48 89 ee\ne8 46 d7 ff ff\neb 05\ne8 9f da ff ff\n85 c0\n0f 94 c0\n20 c3\n48 8d 84 24 f0 01 00 00\n48 39 c5\n74 08\n48 89 ef\ne8 53 d6 ff ff\n84 db\n0f 95 c0\n48 81 c4 58 02 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 84 24 60 01 00 00\n48 8b 8c 24 88 01 00 00\n48 0b 84 24 80 01 00 00\n48 0b 84 24 68 01 00 00\n48 0b 84 24 78 01 00 00\n48 03 8c 24 70 01 00 00\n48 09 c1\n48 83 f9 01\n0f 87 46 ff ff ff\n49 8b 45 10\n48 89 44 24 10\n41 0f 10 45 00\n0f 11 04 24\ne8 e8 05 00 00\n05 94 f8 ff ff\n89 44 24 44\nb8 94 f8 ff ff\n03 84 24 f0 00 00 00\n05 6b 07 00 00\n89 44 24 40\n8b 84 24 f8 00 00 00\n89 44 24 3c\n48 83 bc 24 80 01 00 00 00\n75 24\n80 bc 24 59 01 00 00 00\n0f 84 1e 01 00 00\n48 8b 84 24 68 01 00 00\n48 0b 84 24 60 01 00 00\n0f 85 08 01 00 00\n48 8b bc 24 00 01 00 00\n8b b4 24 d0 00 00 00\ne8 ac 05 00 00\n89 44 24 38\n85 c0\n48 8b 6c 24 20\n4c 8b 64 24 68\n4c 8b 6c 24 28\n0f 88 76 04 00 00\n8b 84 24 08 01 00 00\n89 44 24 34\n8b 84 24 10 01 00 00\n89 44 24 30\ne9 f1 00 00 00\n48 8d bc 24 f0 01 00 00\ne8 d9 04 00 00\n49 89 c5\n48 83 fd 65\n72 0a\n48 89 ef\ne8 28 2b 00 00\neb 08\n48 8d 84 24 b0 00 00 00\n4c 89 6c 24 20\n8a 0b\n48 89 c6\n80 f9 22\n75 0f\n49 89 dd\neb 2d\n31 d2\n80 f9 5c\n0f 94 c2\n0f b6 0c 13\n88 0e\n48 ff c6\n4c 8d 6c 13 01\n0f b6 4c 13 01\n80 f9 22\n4c 89 eb\n75 dd\nc6 06 00\nbf d3 ae 40 00\nba 01 00 00 00\n48 89 c3\n48 89 de\ne8 95 d5 ff ff\n48 83 fd 65\n72 0c\n48 89 df\n89 c3\ne8 b5 d4 ff ff\n89 d8\n85 c0\n74 0f\n31 db\n48 8b 6c 24 20\ne9 3b fe ff ff\n41 0f b6 7d 01\n49 ff c5\ne8 43 38 00 00\n84 c0\n75 ef\nb0 01\ne9 af fb ff ff\nc7 44 24 30 00 00 00 00\nc7 44 24 34 00 00 00 00\nc7 44 24 38 00 00 00 00\n48 c7 84 24 18 01 00 00 00 00 00 00\n48 8b 6c 24 20\n4c 8b 64 24 68\n4c 8b 6c 24 28\n48 8b 84 24 68 01 00 00\n48 0b 84 24 60 01 00 00\n48 0b 84 24 80 01 00 00\n74 08\nc7 44 24 50 ff ff ff ff\n48 83 bc 24 70 01 00 00 00\n74 0b\n8b 84 24 c4 00 00 00\n89 44 24 50\n48 8b 44 24 60\n48 89 84 24 a0 00 00 00\n0f 10 44 24 30\n0f 10 4c 24 40\n0f 10 54 24 50\n0f 29 94 24 90 00 00 00\n0f 29 8c 24 80 00 00 00\n0f 29 44 24 70\n48 8d 5c 24 30\n48 89 df\ne8 ff 32 00 00\n49 89 c6\n48 8d 7c 24 70\n48 89 de\n4c 89 f2\ne8 5c 04 00 00\n84 c0\n0f 84 32 02 00 00\n48 83 bc 24 68 01 00 00 00\n0f 84 91 00 00 00\n48 8b 84 24 60 01 00 00\n48 85 c0\n0f 85 80 00 00 00\n8b 8c 24 c0 00 00 00\n8b 54 24 48\n8d 41 07\n29 d0\n48 98\n48 69 f0 93 24 49 92\n48 c1 ee 20\n01 c6\n89 f7\nc1 ef 1f\nc1 fe 02\n01 fe\n8d 3c f5 00 00 00 00\n29 f7\n29 f8\n48 8b b4 24 b8 00 00 00\n48 85 f6\n0f 9f c3\n39 d1\n0f 95 c1\n20 d9\n0f b6 c9\n29 ce\n8d 0c f5 00 00 00 00\n29 f1\n03 44 24 3c\n01 c8\n89 44 24 3c\nc7 44 24 50 ff ff ff ff\n48 8d 7c 24 30\ne8 51 32 00 00\n49 89 c6\n49 83 fe ff\n0f 84 39 02 00 00\n48 8b b4 24 20 01 00 00\n48 8b 84 24 28 01 00 00\n48 89 c2\n48 09 f2\n48 8b 8c 24 30 01 00 00\n48 09 ca\n0f 84 96 00 00 00\n8b 54 24 44\n44 8d 04 16\n44 8b 5c 24 3c\n8b 7c 24 40\n44 8d 0c 38\n46 8d 14 19\n31 db\n41 39 d0\n0f 9c c3\n48 c1 ee 3f\n31 de\n31 d2\n41 39 f9\n0f 9c c2\n48 c1 e8 3f\n31 d0\n09 f0\n31 d2\n45 39 da\n0f 9c c2\n48 c1 e9 3f\n31 d1\n09 c1\n0f 85 c5 01 00 00\n44 89 44 24 44\n44 89 4c 24 40\n44 89 54 24 3c\n8b 44 24 78\n89 44 24 38\n8b 44 24 74\n89 44 24 34\n8b 44 24 70\n89 44 24 30\n8b 84 24 90 00 00 00\n89 44 24 50\n48 8d 7c 24 30\ne8 94 31 00 00\n49 89 c6\n49 83 fe ff\n0f 84 7c 01 00 00\n48 83 bc 24 88 01 00 00 00\n74 14\n48 6b 84 24 c8 00 00 00 c4\n4c 01 f0\n48 03 44 24 58\n49 89 c6\n48 8b b4 24 50 01 00 00\n48 03 b4 24 18 01 00 00\n48 bf b3 94 d6 26 e8 0b 2e 11\n48 89 f0\n48 f7 ef\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 1a\n48 01 c2\n48 69 c2 00 ca 9a 3b\n48 89 f1\n48 29 c1\n48 81 c1 00 ca 9a 3b\n48 89 c8\n48 f7 ef\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 1a\n48 01 c2\n48 69 c2 00 ca 9a 3b\n48 29 c1\n48 29 ce\n48 89 f0\n48 f7 ef\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 1a\n48 01 c2\n48 69 84 24 38 01 00 00 10 0e 00 00\n4c 01 f0\n48 6b b4 24 40 01 00 00 3c\n48 01 c6\n48 03 b4 24 48 01 00 00\n48 01 d6\n49 89 34 24\n49 89 4c 24 08\nb3 01\n45 84 ed\n0f 85 0a fb ff ff\ne9 2a fb ff ff\n48 83 bc 24 88 01 00 00 00\n0f 84 98 00 00 00\n4c 8b bc 24 c8 00 00 00\n4c 89 fb\n48 f7 db\n49 0f 4c df\n48 b9 89 88 88 88 88 88 88 88\n48 89 d8\n48 f7 e9\n48 01 da\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 05\n4c 8d 34 02\n01 c2\n6b c2 3c\n29 c3\n45 84 ed\n75 10\n48 8d bc 24 f0 01 00 00\ne8 d6 00 00 00\n48 89 c5\n49 c1 ef 3f\n4d 8d 87 85 b1 40 00\n89 1c 24\n48 8d 9c 24 d0 01 00 00\nbe 01 00 00 00\nba 1e 00 00 00\nb9 d6 ae 40 00\n31 c0\n48 89 df\n4d 89 f1\ne8 d1 d5 ff ff\nbf d3 ae 40 00\nba 01 00 00 00\n48 89 de\ne8 bf d1 ff ff\n85 c0\n74 10\n31 db\n45 84 ed\n0f 85 53 fa ff ff\ne9 73 fa ff ff\n48 8b 84 24 a0 00 00 00\n48 89 44 24 60\n0f 28 44 24 70\n0f 28 8c 24 80 00 00 00\n0f 28 94 24 90 00 00 00\n0f 29 54 24 50\n0f 29 4c 24 40\n0f 29 44 24 30\n48 8d 5c 24 30\n48 89 df\ne8 bd 2f 00 00\n49 89 c6\n48 8d 7c 24 70\n48 89 de\n4c 89 f2\ne8 1a 01 00 00\n84 c0\n74 17\n41 b5 01\n48 83 bc 24 68 01 00 00 00\n0f 85 bf fc ff ff\ne9 4b fd ff ff\n31 db\ne9 db f9 ff ff\n'
p334
S'.text:0000000000403ee0\n.text:0000000000403ee1\n.text:0000000000403ee3\n.text:0000000000403ee5\n.text:0000000000403ee7\n.text:0000000000403ee9\n.text:0000000000403eea\n.text:0000000000403ef1\n.text:0000000000403ef4\n.text:0000000000403ef7\n.text:0000000000403efa\n.text:0000000000403efd\n.text:0000000000403eff\n.text:0000000000403f07\n.text:0000000000403f0a\n.text:0000000000403f0f\n.text:0000000000403f13\n.text:0000000000403f17\n.text:0000000000403f1a\n.text:0000000000403f1f\n.text:0000000000403f22\n.text:0000000000403f25\n.text:0000000000403f2b\n.text:0000000000403f30\n.text:0000000000403f34\n.text:0000000000403f40\n.text:0000000000403f44\n.text:0000000000403f49\n.text:0000000000403f4c\n.text:0000000000403f4e\n.text:0000000000403f50\n.text:0000000000403f54\n.text:0000000000403f59\n.text:0000000000403f5e\n.text:0000000000403f61\n.text:0000000000403f66\n.text:0000000000403f68\n.text:0000000000403f6e\n.text:0000000000403f70\n.text:0000000000403f75\n.text:0000000000403f77\n.text:0000000000403f7c\n.text:0000000000403f81\n.text:0000000000403f86\n.text:0000000000403f8a\n.text:0000000000403f92\n.text:0000000000403f97\n.text:0000000000403f9f\n.text:0000000000403fa5\n.text:0000000000403fad\n.text:0000000000403fb9\n.text:0000000000403fbe\n.text:0000000000403fc1\n.text:0000000000403fc9\n.text:0000000000403fce\n.text:0000000000403fd6\n.text:0000000000403fdb\n.text:0000000000403fe3\n.text:0000000000403fe8\n.text:0000000000403ff0\n.text:0000000000403ff4\n.text:0000000000403ffc\n.text:0000000000404004\n.text:0000000000404009\n.text:000000000040400d\n.text:0000000000404018\n.text:000000000040401b\n.text:0000000000404023\n.text:000000000040402b\n.text:0000000000404033\n.text:000000000040403b\n.text:0000000000404043\n.text:000000000040404b\n.text:0000000000404053\n.text:0000000000404058\n.text:0000000000404060\n.text:000000000040406b\n.text:0000000000404070\n.text:0000000000404077\n.text:0000000000404083\n.text:000000000040408a\n.text:000000000040408f\n.text:0000000000404094\n.text:00000000004040a0\n.text:00000000004040a5\n.text:00000000004040a8\n.text:00000000004040ad\n.text:00000000004040b0\n.text:00000000004040b2\n.text:00000000004040b6\n.text:00000000004040b9\n.text:00000000004040bb\n.text:00000000004040be\n.text:00000000004040c5\n.text:00000000004040c7\n.text:00000000004040ca\n.text:00000000004040d1\n.text:00000000004040d5\n.text:00000000004040d7\n.text:00000000004040d9\n.text:00000000004040db\n.text:00000000004040e0\n.text:00000000004040e5\n.text:00000000004040e8\n.text:00000000004040f0\n.text:00000000004040f3\n.text:00000000004040f6\n.text:00000000004040f9\n.text:00000000004040fc\n.text:00000000004040fe\n.text:0000000000404100\n.text:0000000000404106\n.text:0000000000404109\n.text:000000000040410b\n.text:0000000000404110\n.text:0000000000404114\n.text:0000000000404117\n.text:000000000040411a\n.text:000000000040411c\n.text:000000000040411f\n.text:0000000000404121\n.text:0000000000404126\n.text:000000000040412e\n.text:0000000000404139\n.text:0000000000404140\n.text:000000000040414c\n.text:0000000000404154\n.text:0000000000404157\n.text:0000000000404159\n.text:0000000000404161\n.text:0000000000404164\n.text:0000000000404166\n.text:000000000040416b\n.text:000000000040416d\n.text:000000000040416f\n.text:000000000040417a\n.text:0000000000404186\n.text:000000000040418e\n.text:0000000000404193\n.text:0000000000404195\n.text:0000000000404197\n.text:0000000000404199\n.text:000000000040419b\n.text:00000000004041a3\n.text:00000000004041a5\n.text:00000000004041aa\n.text:00000000004041af\n.text:00000000004041b2\n.text:00000000004041b4\n.text:00000000004041b9\n.text:00000000004041be\n.text:00000000004041c1\n.text:00000000004041c3\n.text:00000000004041c8\n.text:00000000004041cb\n.text:00000000004041cd\n.text:00000000004041d2\n.text:00000000004041d5\n.text:00000000004041da\n.text:00000000004041dc\n.text:00000000004041e1\n.text:00000000004041e3\n.text:00000000004041e6\n.text:00000000004041e8\n.text:00000000004041f0\n.text:00000000004041f3\n.text:00000000004041f5\n.text:00000000004041f8\n.text:00000000004041fd\n.text:00000000004041ff\n.text:0000000000404202\n.text:0000000000404209\n.text:000000000040420a\n.text:000000000040420c\n.text:000000000040420e\n.text:0000000000404210\n.text:0000000000404212\n.text:0000000000404213\n.text:0000000000404214\n.text:000000000040421c\n.text:0000000000404224\n.text:000000000040422c\n.text:0000000000404234\n.text:000000000040423c\n.text:0000000000404244\n.text:0000000000404247\n.text:000000000040424b\n.text:0000000000404251\n.text:0000000000404255\n.text:000000000040425a\n.text:000000000040425f\n.text:0000000000404263\n.text:0000000000404268\n.text:000000000040426d\n.text:0000000000404271\n.text:0000000000404276\n.text:000000000040427d\n.text:0000000000404282\n.text:0000000000404286\n.text:000000000040428d\n.text:0000000000404291\n.text:000000000040429a\n.text:000000000040429c\n.text:00000000004042a4\n.text:00000000004042aa\n.text:00000000004042b2\n.text:00000000004042ba\n.text:00000000004042c0\n.text:00000000004042c8\n.text:00000000004042cf\n.text:00000000004042d4\n.text:00000000004042d8\n.text:00000000004042da\n.text:00000000004042df\n.text:00000000004042e4\n.text:00000000004042e9\n.text:00000000004042ef\n.text:00000000004042f6\n.text:00000000004042fa\n.text:0000000000404301\n.text:0000000000404305\n.text:000000000040430a\n.text:0000000000404312\n.text:0000000000404317\n.text:000000000040431a\n.text:000000000040431e\n.text:0000000000404320\n.text:0000000000404323\n.text:0000000000404328\n.text:000000000040432a\n.text:0000000000404332\n.text:0000000000404337\n.text:0000000000404339\n.text:000000000040433c\n.text:000000000040433f\n.text:0000000000404341\n.text:0000000000404344\n.text:0000000000404350\n.text:0000000000404352\n.text:0000000000404355\n.text:0000000000404358\n.text:000000000040435c\n.text:000000000040435e\n.text:0000000000404361\n.text:0000000000404366\n.text:000000000040436b\n.text:000000000040436e\n.text:0000000000404371\n.text:0000000000404373\n.text:0000000000404376\n.text:000000000040437b\n.text:0000000000404380\n.text:0000000000404383\n.text:0000000000404386\n.text:000000000040438b\n.text:000000000040438f\n.text:0000000000404391\n.text:0000000000404394\n.text:0000000000404396\n.text:000000000040439b\n.text:000000000040439d\n.text:000000000040439f\n.text:00000000004043a1\n.text:00000000004043a3\n.text:00000000004043a8\n.text:00000000004043b0\n.text:00000000004043b5\n.text:00000000004043b8\n.text:00000000004043bd\n.text:00000000004043bf\n.text:00000000004043c1\n.text:00000000004043c3\n.text:00000000004043c8\n.text:00000000004043d0\n.text:00000000004043d8\n.text:00000000004043e0\n.text:00000000004043ec\n.text:00000000004043f1\n.text:00000000004043f6\n.text:00000000004043fb\n.text:0000000000404403\n.text:000000000040440b\n.text:0000000000404413\n.text:0000000000404415\n.text:000000000040441d\n.text:0000000000404426\n.text:0000000000404428\n.text:000000000040442f\n.text:0000000000404433\n.text:0000000000404438\n.text:0000000000404440\n.text:0000000000404445\n.text:000000000040444a\n.text:000000000040444f\n.text:0000000000404457\n.text:000000000040445f\n.text:0000000000404464\n.text:0000000000404469\n.text:000000000040446c\n.text:0000000000404471\n.text:0000000000404474\n.text:0000000000404479\n.text:000000000040447c\n.text:000000000040447f\n.text:0000000000404484\n.text:0000000000404486\n.text:000000000040448c\n.text:0000000000404495\n.text:000000000040449b\n.text:00000000004044a3\n.text:00000000004044a6\n.text:00000000004044ac\n.text:00000000004044b3\n.text:00000000004044b7\n.text:00000000004044ba\n.text:00000000004044bc\n.text:00000000004044be\n.text:00000000004044c5\n.text:00000000004044c9\n.text:00000000004044cb\n.text:00000000004044cd\n.text:00000000004044d0\n.text:00000000004044d3\n.text:00000000004044d5\n.text:00000000004044dc\n.text:00000000004044de\n.text:00000000004044e0\n.text:00000000004044e8\n.text:00000000004044eb\n.text:00000000004044ee\n.text:00000000004044f0\n.text:00000000004044f3\n.text:00000000004044f5\n.text:00000000004044f8\n.text:00000000004044fa\n.text:0000000000404501\n.text:0000000000404503\n.text:0000000000404507\n.text:0000000000404509\n.text:000000000040450d\n.text:0000000000404515\n.text:000000000040451a\n.text:000000000040451f\n.text:0000000000404522\n.text:0000000000404526\n.text:000000000040452c\n.text:0000000000404534\n.text:000000000040453c\n.text:000000000040453f\n.text:0000000000404542\n.text:000000000040454a\n.text:000000000040454d\n.text:0000000000404553\n.text:0000000000404557\n.text:000000000040455b\n.text:0000000000404560\n.text:0000000000404564\n.text:0000000000404568\n.text:000000000040456c\n.text:000000000040456e\n.text:0000000000404571\n.text:0000000000404574\n.text:0000000000404578\n.text:000000000040457a\n.text:000000000040457c\n.text:000000000040457f\n.text:0000000000404582\n.text:0000000000404586\n.text:0000000000404588\n.text:000000000040458a\n.text:000000000040458c\n.text:000000000040458f\n.text:0000000000404592\n.text:0000000000404596\n.text:0000000000404598\n.text:000000000040459a\n.text:00000000004045a0\n.text:00000000004045a5\n.text:00000000004045aa\n.text:00000000004045af\n.text:00000000004045b3\n.text:00000000004045b7\n.text:00000000004045bb\n.text:00000000004045bf\n.text:00000000004045c3\n.text:00000000004045c7\n.text:00000000004045ce\n.text:00000000004045d2\n.text:00000000004045d7\n.text:00000000004045dc\n.text:00000000004045df\n.text:00000000004045e3\n.text:00000000004045e9\n.text:00000000004045f2\n.text:00000000004045f4\n.text:00000000004045fd\n.text:0000000000404600\n.text:0000000000404605\n.text:0000000000404608\n.text:0000000000404610\n.text:0000000000404618\n.text:0000000000404622\n.text:0000000000404625\n.text:0000000000404628\n.text:000000000040462b\n.text:000000000040462f\n.text:0000000000404633\n.text:0000000000404636\n.text:000000000040463d\n.text:0000000000404640\n.text:0000000000404643\n.text:000000000040464a\n.text:000000000040464d\n.text:0000000000404650\n.text:0000000000404653\n.text:0000000000404657\n.text:000000000040465b\n.text:000000000040465e\n.text:0000000000404665\n.text:0000000000404668\n.text:000000000040466b\n.text:000000000040466e\n.text:0000000000404671\n.text:0000000000404674\n.text:0000000000404678\n.text:000000000040467c\n.text:000000000040467f\n.text:000000000040468b\n.text:000000000040468e\n.text:0000000000404697\n.text:000000000040469a\n.text:00000000004046a2\n.text:00000000004046a5\n.text:00000000004046a9\n.text:00000000004046ae\n.text:00000000004046b0\n.text:00000000004046b3\n.text:00000000004046b9\n.text:00000000004046be\n.text:00000000004046c7\n.text:00000000004046cd\n.text:00000000004046d5\n.text:00000000004046d8\n.text:00000000004046db\n.text:00000000004046df\n.text:00000000004046e9\n.text:00000000004046ec\n.text:00000000004046ef\n.text:00000000004046f2\n.text:00000000004046f5\n.text:00000000004046f9\n.text:00000000004046fd\n.text:0000000000404701\n.text:0000000000404703\n.text:0000000000404706\n.text:0000000000404708\n.text:000000000040470b\n.text:000000000040470d\n.text:0000000000404715\n.text:000000000040471a\n.text:000000000040471d\n.text:0000000000404721\n.text:0000000000404728\n.text:000000000040472b\n.text:0000000000404733\n.text:0000000000404738\n.text:000000000040473d\n.text:0000000000404742\n.text:0000000000404744\n.text:0000000000404747\n.text:000000000040474a\n.text:000000000040474f\n.text:0000000000404754\n.text:0000000000404759\n.text:000000000040475c\n.text:0000000000404761\n.text:0000000000404763\n.text:0000000000404765\n.text:0000000000404767\n.text:000000000040476a\n.text:0000000000404770\n.text:0000000000404775\n.text:000000000040477d\n.text:0000000000404782\n.text:0000000000404787\n.text:000000000040478f\n.text:0000000000404797\n.text:000000000040479c\n.text:00000000004047a1\n.text:00000000004047a6\n.text:00000000004047ab\n.text:00000000004047ae\n.text:00000000004047b3\n.text:00000000004047b6\n.text:00000000004047bb\n.text:00000000004047be\n.text:00000000004047c1\n.text:00000000004047c6\n.text:00000000004047c8\n.text:00000000004047ca\n.text:00000000004047cd\n.text:00000000004047d6\n.text:00000000004047dc\n.text:00000000004047e1\n.text:00000000004047e3\n'
p335
tp336
sS'quotearg_free'
p337
(S'\n__stdcall quotearg_free()\n'
p338
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p339
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x0060e2b8]\nCMP dword ptr [0x0060e2c0],0x2\nJC 0x00405f4a\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00401850\nINC RBX\nMOV EAX,dword ptr [0x0060e2c0]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x00405f30\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x60e400\nCMP RDI,RAX\nJZ 0x00405f73\nCALL 0x00401850\nMOV qword ptr [0x0060e2c8],0x100\nMOV qword ptr [0x0060e2d0],0x60e400\nMOV EAX,0x60e2c8\nCMP R14,RAX\nJZ 0x00405f90\nMOV RDI,R14\nCALL 0x00401850\nMOV qword ptr [0x0060e2b8],0x60e2c8\nMOV dword ptr [0x0060e2c0],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p340
S'41 57\n41 56\n53\n4c 8b 35 9c 83 20 00\n83 3d 9d 83 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 18 b9 ff ff\n48 ff c3\n8b 05 7f 83 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 00 e4 60 00\n48 39 c7\n74 1b\ne8 f3 b8 ff ff\n48 c7 05 60 83 20 00 00 01 00 00\n48 c7 05 5d 83 20 00 00 e4 60 00\nb8 c8 e2 60 00\n49 39 c6\n74 13\n4c 89 f7\ne8 cb b8 ff ff\n48 c7 05 28 83 20 00 c8 e2 60 00\nc7 05 26 83 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p341
S'.text:0000000000405f10\n.text:0000000000405f12\n.text:0000000000405f14\n.text:0000000000405f15\n.text:0000000000405f1c\n.text:0000000000405f23\n.text:0000000000405f25\n.text:0000000000405f29\n.text:0000000000405f2e\n.text:0000000000405f30\n.text:0000000000405f33\n.text:0000000000405f38\n.text:0000000000405f3b\n.text:0000000000405f41\n.text:0000000000405f45\n.text:0000000000405f48\n.text:0000000000405f4a\n.text:0000000000405f4e\n.text:0000000000405f53\n.text:0000000000405f56\n.text:0000000000405f58\n.text:0000000000405f5d\n.text:0000000000405f68\n.text:0000000000405f73\n.text:0000000000405f78\n.text:0000000000405f7b\n.text:0000000000405f7d\n.text:0000000000405f80\n.text:0000000000405f85\n.text:0000000000405f90\n.text:0000000000405f9a\n.text:0000000000405f9b\n.text:0000000000405f9d\n.text:0000000000405f9f\n'
p342
tp343
sS'quotearg_mem'
p344
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p345
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p346
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00406170\n'
p347
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p348
S'.text:0000000000406190\n.text:0000000000406193\n.text:0000000000406196\n.text:0000000000406198\n.text:000000000040619b\n.text:000000000040619e\n'
p349
tp350
sS'get_reldate'
p351
(S'\n__stdcall get_reldate(timespec * result, char * flex_date, timespec * now)\n'
p352
V\u000avoid get_reldate(timespec *result,char *flex_date,timespec *now)\u000a\u000a{\u000a  _Bool _Var1;\u000a  undefined8 uVar2;\u000a  char *pcVar3;\u000a  \u000a  _Var1 = parse_datetime(result,flex_date,now);\u000a  if (_Var1 != false) {\u000a    return;\u000a  }\u000a  uVar2 = dcgettext(0,"invalid date format %s",5);\u000a  pcVar3 = quote(flex_date);\u000a  error(1,0,uVar2,pcVar3);\u000a  return;\u000a}\u000a\u000a
p353
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nCALL 0x00403ee0\nTEST AL,AL\nJZ 0x004026c8\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nXOR EDI,EDI\nMOV ESI,0x4099e5\nMOV EDX,0x5\nCALL 0x00401960\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x004064a0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401c30\n'
p354
S'41 56\n53\n50\n48 89 f3\ne8 24 18 00 00\n84 c0\n74 08\n48 83 c4 08\n5b\n41 5e\nc3\n31 ff\nbe e5 99 40 00\nba 05 00 00 00\ne8 87 f2 ff ff\n49 89 c6\n48 89 df\ne8 bc 3d 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n4c 89 f2\n48 83 c4 08\n5b\n41 5e\ne9 31 f5 ff ff\n'
p355
S'.text:00000000004026b0\n.text:00000000004026b2\n.text:00000000004026b3\n.text:00000000004026b4\n.text:00000000004026b7\n.text:00000000004026bc\n.text:00000000004026be\n.text:00000000004026c0\n.text:00000000004026c4\n.text:00000000004026c5\n.text:00000000004026c7\n.text:00000000004026c8\n.text:00000000004026ca\n.text:00000000004026cf\n.text:00000000004026d4\n.text:00000000004026d9\n.text:00000000004026dc\n.text:00000000004026df\n.text:00000000004026e4\n.text:00000000004026e7\n.text:00000000004026ec\n.text:00000000004026ee\n.text:00000000004026f0\n.text:00000000004026f3\n.text:00000000004026f7\n.text:00000000004026f8\n.text:00000000004026fa\n'
p356
tp357
sS'free_cwd'
p358
(S'\n__stdcall free_cwd(saved_cwd * cwd)\n'
p359
V\u000avoid free_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  if (-1 < cwd->desc) {\u000a    close(cwd->desc);\u000a  }\u000a  free(cwd->name);\u000a  return;\u000a}\u000a\u000a
p360
S'PUSH RBX\nMOV RBX,RDI\nMOV EDI,dword ptr [RBX]\nTEST EDI,EDI\nJS 0x0040810f\nCALL 0x00401a80\nMOV RDI,qword ptr [RBX + 0x8]\nPOP RBX\nJMP 0x00401850\n'
p361
S'53\n48 89 fb\n8b 3b\n85 ff\n78 05\ne8 71 99 ff ff\n48 8b 7b 08\n5b\ne9 37 97 ff ff\n'
p362
S'.text:0000000000408100\n.text:0000000000408101\n.text:0000000000408104\n.text:0000000000408106\n.text:0000000000408108\n.text:000000000040810a\n.text:000000000040810f\n.text:0000000000408113\n.text:0000000000408114\n'
p363
tp364
sS'deregister_tm_clones'
p365
(S'\n__stdcall deregister_tm_clones()\n'
p366
V\u000a/* WARNING: Removing unreachable block (ram,0x00401d75) */\u000a/* WARNING: Removing unreachable block (ram,0x00401d7f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p367
S'MOV EAX,0x60e317\nPUSH RBP\nSUB RAX,0x60e310\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401d90\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401d90\nPOP RBP\nMOV EDI,0x60e310\nJMP RAX\nPOP RBP\nRET\n'
p368
S'b8 17 e3 60 00\n55\n48 2d 10 e3 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 10 e3 60 00\nff e0\n5d\nc3\n'
p369
S'.text:0000000000401d60\n.text:0000000000401d65\n.text:0000000000401d66\n.text:0000000000401d6c\n.text:0000000000401d70\n.text:0000000000401d73\n.text:0000000000401d75\n.text:0000000000401d7a\n.text:0000000000401d7d\n.text:0000000000401d7f\n.text:0000000000401d80\n.text:0000000000401d85\n.text:0000000000401d90\n.text:0000000000401d91\n'
p370
tp371
sS'quotearg_custom'
p372
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p373
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p374
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x004063b0\n'
p375
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p376
S'.text:0000000000406430\n.text:0000000000406433\n.text:0000000000406436\n.text:0000000000406439\n.text:000000000040643b\n.text:000000000040643e\n.text:0000000000406441\n.text:0000000000406444\n'
p377
tp378
sS'free'
p379
(S'\n__stdcall free(void * __ptr)\n'
p380
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_0060e020)();\u000a  return;\u000a}\u000a\u000a
p381
S'JMP qword ptr [0x0060e020]\n'
p382
S'ff 25 ca c7 20 00\n'
p383
S'.plt:0000000000401850\n'
p384
tp385
sS'close'
p386
(S'\n__stdcall close(int __fd)\n'
p387
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_0060e138)();\u000a  return iVar1;\u000a}\u000a\u000a
p388
S'JMP qword ptr [0x0060e138]\n'
p389
S'ff 25 b2 c6 20 00\n'
p390
S'.plt:0000000000401a80\n'
p391
tp392
sS'getenv'
p393
(S'\n__stdcall getenv(char * __name)\n'
p394
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_0060e018)();\u000a  return pcVar1;\u000a}\u000a\u000a
p395
S'JMP qword ptr [0x0060e018]\n'
p396
S'ff 25 d2 c7 20 00\n'
p397
S'.plt:0000000000401840\n'
p398
tp399
sS'stat'
p400
(S'\n__stdcall stat(char * __file, stat * __buf)\n'
p401
V\u000aint stat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___xstat_0060e1a8)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p402
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00401b60\n'
p403
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 e0 89 ff ff\n'
p404
S'.text:0000000000409170\n.text:0000000000409173\n.text:0000000000409176\n.text:000000000040917b\n'
p405
tp406
sS'rpl_fseeko'
p407
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p408
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_0060e230)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p409
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x00408c08\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x00408c08\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x00408c1a\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401c70\nMOV RDI,RBX\nCALL 0x00401b40\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x00401a20\nCMP RAX,-0x1\nJZ 0x00408c43\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x00408c48\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p410
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 56 90 ff ff\n48 89 df\ne8 1e 8f ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 f1 8d ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p411
S'.text:0000000000408be0\n.text:0000000000408be1\n.text:0000000000408be3\n.text:0000000000408be4\n.text:0000000000408be7\n.text:0000000000408bea\n.text:0000000000408bed\n.text:0000000000408bf1\n.text:0000000000408bf5\n.text:0000000000408bf7\n.text:0000000000408bfb\n.text:0000000000408bff\n.text:0000000000408c01\n.text:0000000000408c06\n.text:0000000000408c08\n.text:0000000000408c0b\n.text:0000000000408c0e\n.text:0000000000408c11\n.text:0000000000408c12\n.text:0000000000408c14\n.text:0000000000408c15\n.text:0000000000408c1a\n.text:0000000000408c1d\n.text:0000000000408c22\n.text:0000000000408c24\n.text:0000000000408c27\n.text:0000000000408c2a\n.text:0000000000408c2f\n.text:0000000000408c33\n.text:0000000000408c35\n.text:0000000000408c38\n.text:0000000000408c3f\n.text:0000000000408c41\n.text:0000000000408c43\n.text:0000000000408c48\n.text:0000000000408c49\n.text:0000000000408c4b\n.text:0000000000408c4c\n'
p412
tp413
sS'quote_n_mem'
p414
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p415
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p416
S'MOV ECX,0x60e2d8\nJMP 0x00405fb0\n'
p417
S'b9 d8 e2 60 00\ne9 36 fb ff ff\n'
p418
S'.text:0000000000406470\n.text:0000000000406475\n'
p419
tp420
sS'xstrdup'
p421
(S'\n__stdcall xstrdup(char * string)\n'
p422
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p423
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401980\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00406f90\n'
p424
S'53\n48 89 fb\ne8 b7 a9 ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p425
S'.text:0000000000406fc0\n.text:0000000000406fc1\n.text:0000000000406fc4\n.text:0000000000406fc9\n.text:0000000000406fcd\n.text:0000000000406fd0\n.text:0000000000406fd1\n'
p426
tp427
sS'c_ispunct'
p428
(S'\n__stdcall c_ispunct()\n'
p429
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p430
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x00407bf2\nMOV AL,0x1\nJMP qword ptr [0x40ba78 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p431
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd 78 ba 40 00\nc3\n31 c0\nc3\n'
p432
S'.text:0000000000407be0\n.text:0000000000407be3\n.text:0000000000407be6\n.text:0000000000407be8\n.text:0000000000407bea\n.text:0000000000407bf1\n.text:0000000000407bf2\n.text:0000000000407bf4\n'
p433
tp434
sS'fstat'
p435
(S'\n__stdcall fstat(int __fd, stat * __buf)\n'
p436
V\u000aint fstat(int __fd,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___fxstat_0060e1d8)(1,(ulong)(uint)__fd,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p437
S'MOV RDX,RSI\nMOV ESI,EDI\nMOV EDI,0x1\nJMP 0x00401bc0\n'
p438
S'48 89 f2\n89 fe\nbf 01 00 00 00\ne9 31 8a ff ff\n'
p439
S'.text:0000000000409180\n.text:0000000000409183\n.text:0000000000409185\n.text:000000000040918a\n'
p440
tp441
sS'fscanf'
p442
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p443
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_0060e128)();\u000a  return iVar1;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x0060e128]\n'
p445
S'ff 25 c2 c6 20 00\n'
p446
S'.plt:0000000000401a60\n'
p447
tp448
sS'memcpy'
p449
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p450
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_0060e188)();\u000a  return pvVar1;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x0060e188]\n'
p452
S'ff 25 62 c6 20 00\n'
p453
S'.plt:0000000000401b20\n'
p454
tp455
sS'close_stdout_set_ignore_EPIPE'
p456
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p457
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p458
S'MOV byte ptr [0x0060e3b0],DIL\nRET\n'
p459
S'40 88 3d 89 b7 20 00\nc3\n'
p460
S'.text:0000000000402c20\n.text:0000000000402c27\n'
p461
tp462
sS'iswprint'
p463
(S'\n__stdcall iswprint(wint_t __wc)\n'
p464
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_0060e270)();\u000a  return iVar1;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x0060e270]\n'
p466
S'ff 25 7a c5 20 00\n'
p467
S'.plt:0000000000401cf0\n'
p468
tp469
sS'rpl_futimens'
p470
(S'\n__stdcall rpl_futimens(timespec * times)\n'
p471
V\u000aint rpl_futimens(timespec *times)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = fdutimens((char *)times,(timespec *)0x0);\u000a  return iVar1;\u000a}\u000a\u000a
p472
S'MOV RAX,RSI\nXOR ESI,ESI\nMOV RDX,RAX\nJMP 0x00408130\n'
p473
S'48 89 f0\n31 f6\n48 89 c2\ne9 c3 10 00 00\n'
p474
S'.text:0000000000407060\n.text:0000000000407063\n.text:0000000000407065\n.text:0000000000407068\n'
p475
tp476
sS'c_isspace'
p477
(S'\n__stdcall c_isspace()\n'
p478
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p479
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00407c15\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p480
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p481
S'.text:0000000000407c00\n.text:0000000000407c03\n.text:0000000000407c06\n.text:0000000000407c08\n.text:0000000000407c0d\n.text:0000000000407c0f\n.text:0000000000407c11\n.text:0000000000407c14\n.text:0000000000407c15\n.text:0000000000407c17\n'
p482
tp483
sS'open'
p484
(S'\n__stdcall open(char * __file, int __oflag)\n'
p485
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_0060e220)();\u000a  return iVar1;\u000a}\u000a\u000a
p486
S'JMP qword ptr [0x0060e220]\n'
p487
S'ff 25 ca c5 20 00\n'
p488
S'.plt:0000000000401c50\n'
p489
tp490
sS'quotearg_n_custom_mem'
p491
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p492
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p493
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x0060e3f0]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x0060e3e0]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3d0]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3c0]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00405120\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405fb0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p494
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 17 80 20 00\n48 89 44 24 30\n0f 10 05 fb 7f 20 00\n0f 29 44 24 20\n0f 10 05 df 7f 20 00\n0f 29 44 24 10\n0f 10 05 c3 7f 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p495
S'.text:00000000004063c0\n.text:00000000004063c1\n.text:00000000004063c3\n.text:00000000004063c5\n.text:00000000004063c6\n.text:00000000004063ca\n.text:00000000004063cd\n.text:00000000004063d0\n.text:00000000004063d2\n.text:00000000004063d9\n.text:00000000004063de\n.text:00000000004063e5\n.text:00000000004063ea\n.text:00000000004063f1\n.text:00000000004063f6\n.text:00000000004063fd\n.text:0000000000406401\n.text:0000000000406404\n.text:0000000000406407\n.text:000000000040640c\n.text:000000000040640e\n.text:0000000000406411\n.text:0000000000406414\n.text:0000000000406417\n.text:000000000040641c\n.text:0000000000406420\n.text:0000000000406421\n.text:0000000000406423\n.text:0000000000406425\n.text:0000000000406426\n'
p496
tp497
sS'localtime'
p498
(S'\n__stdcall localtime(time_t * __timer)\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime(time_t *__timer)\u000a\u000a{\u000a  tm *ptVar1;\u000a  \u000a  ptVar1 = (tm *)(*(code *)PTR_localtime_0060e030)();\u000a  return ptVar1;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x0060e030]\n'
p501
S'ff 25 ba c7 20 00\n'
p502
S'.plt:0000000000401870\n'
p503
tp504
sS'localtime_r'
p505
(S'\n__stdcall localtime_r(time_t * __timer, tm * __tp)\n'
p506
V\u000a/* WARNING: Switch with 1 destination removed at 0x004018b0 */\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime_r(time_t *__timer,tm *__tp)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p507
S'JMP qword ptr [0x0060e050]\n'
p508
S'ff 25 9a c7 20 00\n'
p509
S'.plt:00000000004018b0\n'
p510
tp511
sS'_init'
p512
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p513
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___0060dff8;\u000a  if (PTR___gmon_start___0060dff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___0060dff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p514
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x0060dff8]\nTEST RAX,RAX\nJZ 0x0040182a\nCALL RAX\nADD RSP,0x8\nRET\n'
p515
S'48 83 ec 08\n48 8b 05 d5 c7 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p516
S'.init:0000000000401818\n.init:000000000040181c\n.init:0000000000401823\n.init:0000000000401826\n.init:0000000000401828\n.init:000000000040182a\n.init:000000000040182e\n'
p517
tp518
sS'set_quoting_flags'
p519
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p520
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p521
S'TEST RDI,RDI\nMOV ECX,0x60e3c0\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p522
S'48 85 ff\nb9 c0 e3 60 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p523
S'.text:0000000000405100\n.text:0000000000405103\n.text:0000000000405108\n.text:000000000040510c\n.text:000000000040510f\n.text:0000000000405112\n'
p524
tp525
sS'get_stat_birthtime'
p526
(S'\n__stdcall get_stat_birthtime(stat * st)\n'
p527
V\u000atimespec get_stat_birthtime(stat *st)\u000a\u000a{\u000a  return (timespec)CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\u000a}\u000a\u000a
p528
S'MOV RAX,-0x1\nMOV RDX,-0x1\nRET\n'
p529
S'48 c7 c0 ff ff ff ff\n48 c7 c2 ff ff ff ff\nc3\n'
p530
S'.text:0000000000406920\n.text:0000000000406927\n.text:000000000040692e\n'
p531
tp532
sS'realloc'
p533
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p534
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_0060e1f0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p535
S'JMP qword ptr [0x0060e1f0]\n'
p536
S'ff 25 fa c5 20 00\n'
p537
S'.plt:0000000000401bf0\n'
p538
tp539
sS'__fprintf_chk'
p540
(S'\n__stdcall __fprintf_chk()\n'
p541
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_0060e260)();\u000a  return;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x0060e260]\n'
p543
S'ff 25 8a c5 20 00\n'
p544
S'.plt:0000000000401cd0\n'
p545
tp546
sS'get_charset_aliases'
p547
(S'\n__stdcall get_charset_aliases()\n'
p548
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_00407f84_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_00407f84_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_00407f84_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_00407f84_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_00407f84_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_00407f84_caseD_9;\u000a      case -1:\u000a        goto switchD_00407f84_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_00407fdd:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_00407fe3:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_00407f84_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_00407fe3;\u000a  }\u000a  goto LAB_00407fdd;\u000a}\u000a\u000a
p549
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x0060e510]\nTEST R15,R15\nJNZ 0x00407ff2\nMOV EDI,0x40bea4\nCALL 0x00401840\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00407da8\nCMP byte ptr [RBX],0x0\nJNZ 0x00407dad\nMOV EBX,0x40beb4\nMOV RDI,RBX\nCALL 0x00401980\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00407dc7\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x00407dc9\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x00401b80\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00407e1d\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401b20\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00407e28\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00407e45\nMOV R15D,0x40b809\nJMP 0x00407feb\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00401c50\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00407fdd\nMOV ESI,0x409de3\nMOV EDI,EBP\nCALL 0x00401c00\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00407fa4\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x00407f70\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x004018d0\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x004018d0\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x00407f70\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x00401bb0\nMOV ESI,0x40bec3\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x00401a60\nCMP EAX,0x2\nJL 0x00407fc4\nMOV RDI,R12\nCALL 0x00401980\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401980\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00407f4d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x00401bf0\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x00407e94\nJMP 0x00407fad\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x00401b80\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x00407e94\nJMP 0x00407fad\nMOV RDI,RBX\nCALL 0x004018f0\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x00407ed7\nJMP qword ptr [0x40bd68 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x004018f0\nCMP EAX,-0x1\nJZ 0x00407fc4\nCMP EAX,0xa\nJNZ 0x00407f90\nJMP 0x00407f70\nMOV EDI,EBP\nCALL 0x00401a80\nJMP 0x00407fdd\nMOV RDI,R15\nCALL 0x00401850\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x00408b10\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00407fdd\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x00407fe3\nMOV R15D,0x40b809\nMOV RDI,R13\nCALL 0x00401850\nMOV qword ptr [0x0060e510],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p550
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d 88 67 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf a4 be 40 00\ne8 a5 9a ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb b4 be 40 00\n48 89 df\ne8 cb 9b ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 a9 9d ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 33 9d ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf 09 b8 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 fc 9d ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe e3 9d 40 00\n89 ef\ne8 96 9d ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 1b 9a ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 0b 9a ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 cf 9c ff ff\nbe c3 be 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 6a 9b ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 79 9a ff ff\n49 89 c4\n48 89 ef\ne8 6e 9a ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 b6 9c ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 25 9c ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 78 99 ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd 68 bd 40 00\n48 89 df\ne8 58 99 ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 d5 9a ff ff\neb 30\n4c 89 ff\ne8 9b 98 ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 44 0b 00 00\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf 09 b8 40 00\n4c 89 ef\ne8 65 98 ff ff\n4c 89 3d 1e 65 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p551
S'.text:0000000000407d70\n.text:0000000000407d71\n.text:0000000000407d73\n.text:0000000000407d75\n.text:0000000000407d77\n.text:0000000000407d79\n.text:0000000000407d7a\n.text:0000000000407d81\n.text:0000000000407d88\n.text:0000000000407d8b\n.text:0000000000407d91\n.text:0000000000407d96\n.text:0000000000407d9b\n.text:0000000000407d9e\n.text:0000000000407da1\n.text:0000000000407da3\n.text:0000000000407da6\n.text:0000000000407da8\n.text:0000000000407dad\n.text:0000000000407db0\n.text:0000000000407db5\n.text:0000000000407db8\n.text:0000000000407dbb\n.text:0000000000407dbd\n.text:0000000000407dc2\n.text:0000000000407dc5\n.text:0000000000407dc7\n.text:0000000000407dc9\n.text:0000000000407dcd\n.text:0000000000407dd2\n.text:0000000000407dd7\n.text:0000000000407dda\n.text:0000000000407ddd\n.text:0000000000407ddf\n.text:0000000000407de2\n.text:0000000000407de5\n.text:0000000000407de8\n.text:0000000000407ded\n.text:0000000000407df0\n.text:0000000000407df3\n.text:0000000000407df6\n.text:0000000000407df8\n.text:0000000000407dfe\n.text:0000000000407e08\n.text:0000000000407e0d\n.text:0000000000407e17\n.text:0000000000407e1b\n.text:0000000000407e1d\n.text:0000000000407e23\n.text:0000000000407e28\n.text:0000000000407e32\n.text:0000000000407e37\n.text:0000000000407e41\n.text:0000000000407e45\n.text:0000000000407e4a\n.text:0000000000407e4c\n.text:0000000000407e4f\n.text:0000000000407e54\n.text:0000000000407e56\n.text:0000000000407e58\n.text:0000000000407e5e\n.text:0000000000407e63\n.text:0000000000407e65\n.text:0000000000407e6a\n.text:0000000000407e6d\n.text:0000000000407e70\n.text:0000000000407e76\n.text:0000000000407e7b\n.text:0000000000407e80\n.text:0000000000407e82\n.text:0000000000407e87\n.text:0000000000407e8a\n.text:0000000000407e8f\n.text:0000000000407e94\n.text:0000000000407e99\n.text:0000000000407e9c\n.text:0000000000407e9f\n.text:0000000000407ea2\n.text:0000000000407ea5\n.text:0000000000407ea8\n.text:0000000000407ead\n.text:0000000000407eb0\n.text:0000000000407eb5\n.text:0000000000407eb8\n.text:0000000000407ebd\n.text:0000000000407ec0\n.text:0000000000407ec5\n.text:0000000000407eca\n.text:0000000000407ecd\n.text:0000000000407ed2\n.text:0000000000407ed7\n.text:0000000000407ed9\n.text:0000000000407edc\n.text:0000000000407ee1\n.text:0000000000407ee6\n.text:0000000000407ee8\n.text:0000000000407eeb\n.text:0000000000407eee\n.text:0000000000407ef1\n.text:0000000000407ef6\n.text:0000000000407ef9\n.text:0000000000407eff\n.text:0000000000407f02\n.text:0000000000407f07\n.text:0000000000407f0a\n.text:0000000000407f0d\n.text:0000000000407f12\n.text:0000000000407f15\n.text:0000000000407f1a\n.text:0000000000407f1f\n.text:0000000000407f22\n.text:0000000000407f24\n.text:0000000000407f28\n.text:0000000000407f2d\n.text:0000000000407f32\n.text:0000000000407f35\n.text:0000000000407f3a\n.text:0000000000407f3d\n.text:0000000000407f42\n.text:0000000000407f45\n.text:0000000000407f4b\n.text:0000000000407f4d\n.text:0000000000407f52\n.text:0000000000407f56\n.text:0000000000407f5b\n.text:0000000000407f5e\n.text:0000000000407f61\n.text:0000000000407f67\n.text:0000000000407f70\n.text:0000000000407f73\n.text:0000000000407f78\n.text:0000000000407f7b\n.text:0000000000407f7e\n.text:0000000000407f84\n.text:0000000000407f90\n.text:0000000000407f93\n.text:0000000000407f98\n.text:0000000000407f9b\n.text:0000000000407f9d\n.text:0000000000407fa0\n.text:0000000000407fa2\n.text:0000000000407fa4\n.text:0000000000407fa6\n.text:0000000000407fab\n.text:0000000000407fad\n.text:0000000000407fb0\n.text:0000000000407fb5\n.text:0000000000407fb7\n.text:0000000000407fbc\n.text:0000000000407fbf\n.text:0000000000407fc4\n.text:0000000000407fc7\n.text:0000000000407fcc\n.text:0000000000407fd1\n.text:0000000000407fd4\n.text:0000000000407fd6\n.text:0000000000407fdb\n.text:0000000000407fdd\n.text:0000000000407fe3\n.text:0000000000407fe6\n.text:0000000000407feb\n.text:0000000000407ff2\n.text:0000000000407ff5\n.text:0000000000407ffc\n.text:0000000000407ffd\n.text:0000000000407fff\n.text:0000000000408001\n.text:0000000000408003\n.text:0000000000408005\n.text:0000000000408006\n'
p552
tp553
sS'nl_langinfo'
p554
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p555
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0060e1c8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x0060e1c8]\n'
p557
S'ff 25 22 c6 20 00\n'
p558
S'.plt:0000000000401ba0\n'
p559
tp560
sS'x2realloc'
p561
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p562
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p563
S'MOV EDX,0x1\nJMP 0x00406ec0\n'
p564
S'ba 01 00 00 00\neb 89\n'
p565
S'.text:0000000000406f30\n.text:0000000000406f35\n'
p566
tp567
sS'restore_cwd'
p568
(S'\n__stdcall restore_cwd(saved_cwd * cwd)\n'
p569
V\u000aint restore_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (-1 < cwd->desc) {\u000a    iVar1 = fchdir(cwd->desc);\u000a    return iVar1;\u000a  }\u000a  iVar1 = chdir_long(cwd->name);\u000a  return iVar1;\u000a}\u000a\u000a
p570
S'MOV EAX,dword ptr [RDI]\nTEST EAX,EAX\nJS 0x004080ed\nMOV EDI,EAX\nJMP 0x00401be0\nMOV RDI,qword ptr [RDI + 0x8]\nJMP 0x00408800\n'
p571
S'8b 07\n85 c0\n78 07\n89 c7\ne9 f3 9a ff ff\n48 8b 7f 08\ne9 0a 07 00 00\n'
p572
S'.text:00000000004080e0\n.text:00000000004080e2\n.text:00000000004080e4\n.text:00000000004080e6\n.text:00000000004080e8\n.text:00000000004080ed\n.text:00000000004080f1\n'
p573
tp574
sS'strlen'
p575
(S'\n__stdcall strlen(char * __s)\n'
p576
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_0060e0b8)();\u000a  return sVar1;\u000a}\u000a\u000a
p577
S'JMP qword ptr [0x0060e0b8]\n'
p578
S'ff 25 32 c7 20 00\n'
p579
S'.plt:0000000000401980\n'
p580
tp581
sS'memcmp'
p582
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p583
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_0060e150)();\u000a  return iVar1;\u000a}\u000a\u000a
p584
S'JMP qword ptr [0x0060e150]\n'
p585
S'ff 25 9a c6 20 00\n'
p586
S'.plt:0000000000401ab0\n'
p587
tp588
sS'quotearg_n_style_mem'
p589
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p590
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p591
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x004061e0\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405fb0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p592
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p593
S'.text:0000000000406240\n.text:0000000000406241\n.text:0000000000406243\n.text:0000000000406245\n.text:0000000000406246\n.text:000000000040624a\n.text:000000000040624d\n.text:0000000000406250\n.text:0000000000406252\n.text:0000000000406255\n.text:0000000000406258\n.text:000000000040625d\n.text:000000000040625f\n.text:0000000000406262\n.text:0000000000406265\n.text:0000000000406268\n.text:000000000040626d\n.text:0000000000406271\n.text:0000000000406272\n.text:0000000000406274\n.text:0000000000406276\n.text:0000000000406277\n'
p594
tp595
sS'_exit'
p596
(S'\n__stdcall _exit(int __status)\n'
p597
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_0060e058)();\u000a  return;\u000a}\u000a\u000a
p598
S'JMP qword ptr [0x0060e058]\n'
p599
S'ff 25 92 c7 20 00\n'
p600
S'.plt:00000000004018c0\n'
p601
tp602
sS'futimesat'
p603
(S'\n__stdcall futimesat(int __fd, char * __file, timeval * __tvp)\n'
p604
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint futimesat(int __fd,char *__file,timeval *__tvp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_futimesat_0060e278)();\u000a  return iVar1;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x0060e278]\n'
p606
S'ff 25 72 c5 20 00\n'
p607
S'.plt:0000000000401d00\n'
p608
tp609
sS'argmatch_valid'
p610
(S'\n__stdcall argmatch_valid(char * * arglist, char * vallist, size_t valsize)\n'
p611
V\u000avoid argmatch_valid(char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  int iVar2;\u000a  char *__s;\u000a  char *__s1;\u000a  long lVar3;\u000a  \u000a  __s = (char *)dcgettext(0,"Valid arguments are:",5);\u000a  fputs_unlocked(__s,stderr);\u000a  __s = *arglist;\u000a  if (__s != (char *)0x0) {\u000a    __s1 = (char *)0x0;\u000a    lVar3 = 0;\u000a    do {\u000a      pFVar1 = stderr;\u000a      if (lVar3 == 0) {\u000aLAB_00402aa7:\u000a        __s = quote(__s);\u000a        __fprintf_chk(pFVar1,1,"\u005cn  - %s",__s);\u000a        __s1 = vallist;\u000a      }\u000a      else {\u000a        iVar2 = memcmp(__s1,vallist,valsize);\u000a        if (iVar2 != 0) goto LAB_00402aa7;\u000a        __s = quote(__s);\u000a        __fprintf_chk(pFVar1,1,&DAT_00409dd4,__s);\u000a      }\u000a      __s = arglist[lVar3 + 1];\u000a      lVar3 = lVar3 + 1;\u000a      vallist = vallist + valsize;\u000a    } while (__s != (char *)0x0);\u000a  }\u000a  (*(code *)PTR_putc_unlocked_0060e1b0)(10,stderr);\u000a  return;\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R13,RSI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV ESI,0x409db7\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e360]\nMOV RDI,RAX\nCALL 0x00401ac0\nMOV qword ptr [RSP],RBX\nMOV RBX,qword ptr [RBX]\nTEST RBX,RBX\nMOV R12,qword ptr [0x0060e360]\nJZ 0x00402b0a\nXOR EBP,EBP\nXOR R15D,R15D\nTEST R15,R15\nJZ 0x00402aa7\nMOV RDI,RBP\nMOV RSI,R13\nMOV RDX,R14\nCALL 0x00401ab0\nTEST EAX,EAX\nJZ 0x00402ad0\nMOV RDI,RBX\nCALL 0x004064a0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x409dcc\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00401cd0\nMOV RBP,R13\nJMP 0x00402aef\nMOV RDI,RBX\nCALL 0x004064a0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x409dd4\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00401cd0\nMOV RAX,qword ptr [RSP]\nMOV RBX,qword ptr [RAX + R15*0x8 + 0x8]\nINC R15\nMOV R12,qword ptr [0x0060e360]\nADD R13,R14\nTEST RBX,RBX\nJNZ 0x00402a90\nMOV EDI,0xa\nMOV RSI,R12\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00401b70\n'
p613
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f5\n48 89 fb\n31 ff\nbe b7 9d 40 00\nba 05 00 00 00\ne8 fb ee ff ff\n48 8b 35 f4 b8 20 00\n48 89 c7\ne8 4c f0 ff ff\n48 89 1c 24\n48 8b 1b\n48 85 db\n4c 8b 25 db b8 20 00\n0f 84 7f 00 00 00\n31 ed\n45 31 ff\n4d 85 ff\n74 12\n48 89 ef\n4c 89 ee\n4c 89 f2\ne8 0d f0 ff ff\n85 c0\n74 29\n48 89 df\ne8 f1 39 00 00\n48 89 c1\nbe 01 00 00 00\nba cc 9d 40 00\n31 c0\n4c 89 e7\ne8 0a f2 ff ff\n4c 89 ed\neb 24\n48 89 df\ne8 c8 39 00 00\n48 89 c1\nbe 01 00 00 00\nba d4 9d 40 00\n31 c0\n4c 89 e7\ne8 e1 f1 ff ff\n48 8b 04 24\n4a 8b 5c f8 08\n49 ff c7\n4c 8b 25 5e b8 20 00\n4d 01 f5\n48 85 db\n75 86\nbf 0a 00 00 00\n4c 89 e6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 4b f0 ff ff\n'
p614
S'.text:0000000000402a40\n.text:0000000000402a41\n.text:0000000000402a43\n.text:0000000000402a45\n.text:0000000000402a47\n.text:0000000000402a49\n.text:0000000000402a4a\n.text:0000000000402a4b\n.text:0000000000402a4e\n.text:0000000000402a51\n.text:0000000000402a54\n.text:0000000000402a56\n.text:0000000000402a5b\n.text:0000000000402a60\n.text:0000000000402a65\n.text:0000000000402a6c\n.text:0000000000402a6f\n.text:0000000000402a74\n.text:0000000000402a78\n.text:0000000000402a7b\n.text:0000000000402a7e\n.text:0000000000402a85\n.text:0000000000402a8b\n.text:0000000000402a8d\n.text:0000000000402a90\n.text:0000000000402a93\n.text:0000000000402a95\n.text:0000000000402a98\n.text:0000000000402a9b\n.text:0000000000402a9e\n.text:0000000000402aa3\n.text:0000000000402aa5\n.text:0000000000402aa7\n.text:0000000000402aaa\n.text:0000000000402aaf\n.text:0000000000402ab2\n.text:0000000000402ab7\n.text:0000000000402abc\n.text:0000000000402abe\n.text:0000000000402ac1\n.text:0000000000402ac6\n.text:0000000000402ac9\n.text:0000000000402ad0\n.text:0000000000402ad3\n.text:0000000000402ad8\n.text:0000000000402adb\n.text:0000000000402ae0\n.text:0000000000402ae5\n.text:0000000000402ae7\n.text:0000000000402aea\n.text:0000000000402aef\n.text:0000000000402af3\n.text:0000000000402af8\n.text:0000000000402afb\n.text:0000000000402b02\n.text:0000000000402b05\n.text:0000000000402b08\n.text:0000000000402b0a\n.text:0000000000402b0f\n.text:0000000000402b12\n.text:0000000000402b16\n.text:0000000000402b17\n.text:0000000000402b19\n.text:0000000000402b1b\n.text:0000000000402b1d\n.text:0000000000402b1f\n.text:0000000000402b20\n'
p615
tp616
sS'xrealloc'
p617
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p618
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p619
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x00406ea7\nTEST RBX,RBX\nJNZ 0x00406ea7\nCALL 0x00401850\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x00401bf0\nTEST RBX,RBX\nJZ 0x00406eb9\nTEST RAX,RAX\nJZ 0x00406ebb\nPOP RBX\nRET\nCALL 0x00406fe0\n'
p620
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 ad a9 ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 41 ad ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p621
S'.text:0000000000406e90\n.text:0000000000406e91\n.text:0000000000406e94\n.text:0000000000406e97\n.text:0000000000406e99\n.text:0000000000406e9c\n.text:0000000000406e9e\n.text:0000000000406ea3\n.text:0000000000406ea5\n.text:0000000000406ea6\n.text:0000000000406ea7\n.text:0000000000406eaa\n.text:0000000000406eaf\n.text:0000000000406eb2\n.text:0000000000406eb4\n.text:0000000000406eb7\n.text:0000000000406eb9\n.text:0000000000406eba\n.text:0000000000406ebb\n'
p622
tp623
sS'close_stdout'
p624
(S'\n__stdcall close_stdout()\n'
p625
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00402c57;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,&DAT_00409dd6,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00402c57:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p626
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x0060e328]\nCALL 0x00407c70\nTEST EAX,EAX\nJZ 0x00402c57\nCMP byte ptr [0x0060e3b0],0x0\nJZ 0x00402c6c\nCALL 0x00401890\nCMP dword ptr [RAX],0x20\nJNZ 0x00402c6c\nMOV RDI,qword ptr [0x0060e360]\nCALL 0x00407c70\nTEST EAX,EAX\nJNZ 0x00402cb1\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x409dd9\nMOV EDX,0x5\nCALL 0x00401960\nMOV R14,RAX\nMOV RBX,qword ptr [0x0060e3a8]\nCALL 0x00401890\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x00402cbc\nXOR EDI,EDI\nMOV EDX,0x409dd6\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00401c30\nMOV EDI,dword ptr [0x0060e2b0]\nCALL 0x004018c0\nMOV EDI,dword ptr [0x0060e2b0]\nCALL 0x004018c0\nMOV RDI,RBX\nCALL 0x00406340\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x409de5\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00401c30\nMOV EDI,dword ptr [0x0060e2b0]\nCALL 0x004018c0\n'
p627
S'55\n41 56\n53\n48 8b 3d ed b6 20 00\ne8 30 50 00 00\n85 c0\n74 13\n80 3d 65 b7 20 00 00\n74 1f\ne8 3e ec ff ff\n83 38 20\n75 15\n48 8b 3d 02 b7 20 00\ne8 0d 50 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe d9 9d 40 00\nba 05 00 00 00\ne8 e3 ec ff ff\n49 89 c6\n48 8b 1d 21 b7 20 00\ne8 04 ec ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba d6 9d 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 8a ef ff ff\n8b 3d 04 b6 20 00\ne8 0f ec ff ff\n8b 3d f9 b5 20 00\ne8 04 ec ff ff\n48 89 df\ne8 7c 36 00 00\n48 89 c1\n31 ff\nba e5 9d 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 56 ef ff ff\n8b 3d d0 b5 20 00\ne8 db eb ff ff\n'
p628
S'.text:0000000000402c30\n.text:0000000000402c31\n.text:0000000000402c33\n.text:0000000000402c34\n.text:0000000000402c3b\n.text:0000000000402c40\n.text:0000000000402c42\n.text:0000000000402c44\n.text:0000000000402c4b\n.text:0000000000402c4d\n.text:0000000000402c52\n.text:0000000000402c55\n.text:0000000000402c57\n.text:0000000000402c5e\n.text:0000000000402c63\n.text:0000000000402c65\n.text:0000000000402c67\n.text:0000000000402c68\n.text:0000000000402c6a\n.text:0000000000402c6b\n.text:0000000000402c6c\n.text:0000000000402c6e\n.text:0000000000402c73\n.text:0000000000402c78\n.text:0000000000402c7d\n.text:0000000000402c80\n.text:0000000000402c87\n.text:0000000000402c8c\n.text:0000000000402c8f\n.text:0000000000402c91\n.text:0000000000402c93\n.text:0000000000402c95\n.text:0000000000402c9a\n.text:0000000000402c9c\n.text:0000000000402c9e\n.text:0000000000402ca1\n.text:0000000000402ca6\n.text:0000000000402cac\n.text:0000000000402cb1\n.text:0000000000402cb7\n.text:0000000000402cbc\n.text:0000000000402cbf\n.text:0000000000402cc4\n.text:0000000000402cc7\n.text:0000000000402cc9\n.text:0000000000402cce\n.text:0000000000402cd0\n.text:0000000000402cd2\n.text:0000000000402cd5\n.text:0000000000402cda\n.text:0000000000402ce0\n'
p629
tp630
sS'version_etc_ar'
p631
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p632
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p633
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x00406ca0\nJMP 0x00406930\n'
p634
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p635
S'.text:0000000000406c90\n.text:0000000000406c97\n.text:0000000000406ca0\n.text:0000000000406ca6\n.text:0000000000406caa\n.text:0000000000406cac\n'
p636
tp637
sS'c_isxdigit'
p638
(S'\n__stdcall c_isxdigit()\n'
p639
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p640
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x00407c4b\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p641
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p642
S'.text:0000000000407c30\n.text:0000000000407c33\n.text:0000000000407c36\n.text:0000000000407c38\n.text:0000000000407c42\n.text:0000000000407c44\n.text:0000000000407c47\n.text:0000000000407c4a\n.text:0000000000407c4b\n.text:0000000000407c4d\n'
p643
tp644
sS'to_year'
p645
(S'\n__stdcall to_year(textint textyear)\n'
p646
V\u000along to_year(textint textyear)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  if (-1 < textyear.value) {\u000a    if (textyear.digits == 2) {\u000a      lVar1 = 0x76c;\u000a      if (textyear.value < 0x45) {\u000a        lVar1 = 2000;\u000a      }\u000a      textyear.value = textyear.value + lVar1;\u000a    }\u000a    return textyear.value;\u000a  }\u000a  return -textyear.value;\u000a}\u000a\u000a
p647
S'MOV RAX,qword ptr [RSP + 0x10]\nTEST RAX,RAX\nJS 0x0040487c\nLEA RCX,[RSP + 0x8]\nCMP qword ptr [RCX + 0x10],0x2\nJNZ 0x0040487b\nCMP RAX,0x45\nMOV ECX,0x7d0\nMOV EDX,0x76c\nCMOVL RDX,RCX\nADD RAX,RDX\nRET\nNEG RAX\nRET\n'
p648
S'48 8b 44 24 10\n48 85 c0\n78 22\n48 8d 4c 24 08\n48 83 79 10 02\n75 15\n48 83 f8 45\nb9 d0 07 00 00\nba 6c 07 00 00\n48 0f 4c d1\n48 01 d0\nc3\n48 f7 d8\nc3\n'
p649
S'.text:0000000000404850\n.text:0000000000404855\n.text:0000000000404858\n.text:000000000040485a\n.text:000000000040485f\n.text:0000000000404864\n.text:0000000000404866\n.text:000000000040486a\n.text:000000000040486f\n.text:0000000000404874\n.text:0000000000404878\n.text:000000000040487b\n.text:000000000040487c\n.text:000000000040487f\n'
p650
tp651
sS'__libc_csu_fini'
p652
(S'\n__stdcall __libc_csu_fini()\n'
p653
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p654
S'RET\n'
p655
S'f3 c3\n'
p656
S'.text:0000000000409130\n'
p657
tp658
sS'abort'
p659
(S'\n__stdcall abort()\n'
p660
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_0060e038)();\u000a  return;\u000a}\u000a\u000a
p661
S'JMP qword ptr [0x0060e038]\n'
p662
S'ff 25 b2 c7 20 00\n'
p663
S'.plt:0000000000401880\n'
p664
tp665
sS'openat_proc_name'
p666
(S'\n__stdcall openat_proc_name(char * buf, char * file)\n'
p667
V\u000achar * openat_proc_name(char *buf,char *file)\u000a\u000a{\u000a  int proc_status;\u000a  uint __fd;\u000a  int iVar1;\u000a  size_t sVar2;\u000a  char *__s;\u000a  char dotdot_buf [32];\u000a  char acStack72 [32];\u000a  \u000a  if (*__s == 0) {\u000a    *buf = 0;\u000a    return buf;\u000a  }\u000a  if (proc_status == 0) {\u000a    __fd = open("/proc/self/fd",0x10900);\u000a    if ((int)__fd < 0) {\u000a      return (char *)0x0;\u000a    }\u000a    __sprintf_chk(acStack72,1,0x20,"/proc/self/fd/%d/../fd",(ulong)__fd);\u000a    iVar1 = access(acStack72,0);\u000a    proc_status = ~-(uint)(iVar1 == 0) | 1;\u000a    close(__fd);\u000a  }\u000a  if (-1 < proc_status) {\u000a    sVar2 = strlen(__s);\u000a    if ((sVar2 + 0x1b < 0xfc1) || (buf = (char *)malloc(sVar2 + 0x1b), buf != (char *)0x0)) {\u000a      iVar1 = __sprintf_chk(buf,1,0xffffffffffffffff,"/proc/self/fd/%d/",(ulong)file & 0xffffffff);\u000a      strcpy(buf + (long)iVar1,__s);\u000a      return buf;\u000a    }\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p668
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV R14,RDX\nMOV R15D,ESI\nMOV RBX,RDI\nCMP byte ptr [R14],0x0\nJZ 0x00408d30\nMOV EAX,dword ptr [0x0060e520]\nTEST EAX,EAX\nJNZ 0x00408cda\nMOV EDI,0x40bfc2\nMOV ESI,0x10900\nXOR EAX,EAX\nCALL 0x00401c50\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00408d35\nMOV R12,RSP\nMOV ESI,0x1\nMOV EDX,0x20\nMOV ECX,0x40bfd0\nXOR EAX,EAX\nMOV RDI,R12\nMOV R8D,EBP\nCALL 0x00401d20\nXOR ESI,ESI\nMOV RDI,R12\nCALL 0x00401c60\nCMP EAX,0x1\nSBB EAX,EAX\nNOT EAX\nOR EAX,0x1\nMOV dword ptr [0x0060e520],EAX\nMOV EDI,EBP\nCALL 0x00401a80\nMOV EAX,dword ptr [0x0060e520]\nTEST EAX,EAX\nJS 0x00408d3f\nMOV RDI,R14\nCALL 0x00401980\nADD RAX,0x1b\nCMP RAX,0xfc1\nJC 0x00408d02\nMOV RDI,RAX\nCALL 0x00401b80\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00408d3f\nMOV ESI,0x1\nMOV RDX,-0x1\nMOV ECX,0x40bfe7\nXOR EAX,EAX\nMOV RDI,RBX\nMOV R8D,R15D\nCALL 0x00401d20\nMOVSXD RDI,EAX\nADD RDI,RBX\nMOV RSI,R14\nCALL 0x004018d0\nJMP 0x00408d41\nMOV byte ptr [RBX],0x0\nJMP 0x00408d41\nMOV dword ptr [0x0060e520],0xffffffff\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p669
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 20\n49 89 d6\n41 89 f7\n48 89 fb\n41 80 3e 00\n0f 84 c1 00 00 00\n8b 05 ab 58 20 00\n85 c0\n75 61\nbf c2 bf 40 00\nbe 00 09 01 00\n31 c0\ne8 c6 8f ff ff\n89 c5\n85 ed\n0f 88 a1 00 00 00\n49 89 e4\nbe 01 00 00 00\nba 20 00 00 00\nb9 d0 bf 40 00\n31 c0\n4c 89 e7\n41 89 e8\ne8 6d 90 ff ff\n31 f6\n4c 89 e7\ne8 a3 8f ff ff\n83 f8 01\n19 c0\nf7 d0\n83 c8 01\n89 05 53 58 20 00\n89 ef\ne8 ac 8d ff ff\n8b 05 46 58 20 00\n85 c0\n78 61\n4c 89 f7\ne8 9a 8c ff ff\n48 83 c0 1b\n48 3d c1 0f 00 00\n72 10\n48 89 c7\ne8 86 8e ff ff\n48 89 c3\n48 85 db\n74 3d\nbe 01 00 00 00\n48 c7 c2 ff ff ff ff\nb9 e7 bf 40 00\n31 c0\n48 89 df\n45 89 f8\ne8 00 90 ff ff\n48 63 f8\n48 01 df\n4c 89 f6\ne8 a2 8b ff ff\neb 11\nc6 03 00\neb 0c\nc7 05 e1 57 20 00 ff ff ff ff\n31 db\n48 89 d8\n48 83 c4 20\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p670
S'.text:0000000000408c50\n.text:0000000000408c51\n.text:0000000000408c53\n.text:0000000000408c55\n.text:0000000000408c57\n.text:0000000000408c58\n.text:0000000000408c5c\n.text:0000000000408c5f\n.text:0000000000408c62\n.text:0000000000408c65\n.text:0000000000408c69\n.text:0000000000408c6f\n.text:0000000000408c75\n.text:0000000000408c77\n.text:0000000000408c79\n.text:0000000000408c7e\n.text:0000000000408c83\n.text:0000000000408c85\n.text:0000000000408c8a\n.text:0000000000408c8c\n.text:0000000000408c8e\n.text:0000000000408c94\n.text:0000000000408c97\n.text:0000000000408c9c\n.text:0000000000408ca1\n.text:0000000000408ca6\n.text:0000000000408ca8\n.text:0000000000408cab\n.text:0000000000408cae\n.text:0000000000408cb3\n.text:0000000000408cb5\n.text:0000000000408cb8\n.text:0000000000408cbd\n.text:0000000000408cc0\n.text:0000000000408cc2\n.text:0000000000408cc4\n.text:0000000000408cc7\n.text:0000000000408ccd\n.text:0000000000408ccf\n.text:0000000000408cd4\n.text:0000000000408cda\n.text:0000000000408cdc\n.text:0000000000408cde\n.text:0000000000408ce1\n.text:0000000000408ce6\n.text:0000000000408cea\n.text:0000000000408cf0\n.text:0000000000408cf2\n.text:0000000000408cf5\n.text:0000000000408cfa\n.text:0000000000408cfd\n.text:0000000000408d00\n.text:0000000000408d02\n.text:0000000000408d07\n.text:0000000000408d0e\n.text:0000000000408d13\n.text:0000000000408d15\n.text:0000000000408d18\n.text:0000000000408d1b\n.text:0000000000408d20\n.text:0000000000408d23\n.text:0000000000408d26\n.text:0000000000408d29\n.text:0000000000408d2e\n.text:0000000000408d30\n.text:0000000000408d33\n.text:0000000000408d35\n.text:0000000000408d3f\n.text:0000000000408d41\n.text:0000000000408d44\n.text:0000000000408d48\n.text:0000000000408d49\n.text:0000000000408d4b\n.text:0000000000408d4d\n.text:0000000000408d4f\n.text:0000000000408d50\n'
p671
tp672
sS'gettime'
p673
(S'\n__stdcall gettime(timespec * ts)\n'
p674
V\u000avoid gettime(timespec *ts)\u000a\u000a{\u000a  int iVar1;\u000a  timeval local_18;\u000a  \u000a  iVar1 = clock_gettime(0,(timespec *)ts);\u000a  if (iVar1 != 0) {\u000a    gettimeofday(&local_18,(__timezone_ptr_t)0x0);\u000a    ts->tv_sec = local_18.tv_sec;\u000a    ts->tv_nsec = local_18.tv_usec * 1000;\u000a  }\u000a  return;\u000a}\u000a\u000a
p675
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nXOR EDI,EDI\nMOV RSI,RBX\nCALL 0x00401910\nTEST EAX,EAX\nJZ 0x00402e04\nMOV RDI,RSP\nXOR ESI,ESI\nCALL 0x00401a30\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RBX],RAX\nIMUL RAX,qword ptr [RSP + 0x8],0x3e8\nMOV qword ptr [RBX + 0x8],RAX\nADD RSP,0x10\nPOP RBX\nRET\n'
p676
S'53\n48 83 ec 10\n48 89 fb\n31 ff\n48 89 de\ne8 2e eb ff ff\n85 c0\n74 1e\n48 89 e7\n31 f6\ne8 40 ec ff ff\n48 8b 04 24\n48 89 03\n48 69 44 24 08 e8 03 00 00\n48 89 43 08\n48 83 c4 10\n5b\nc3\n'
p677
S'.text:0000000000402dd0\n.text:0000000000402dd1\n.text:0000000000402dd5\n.text:0000000000402dd8\n.text:0000000000402dda\n.text:0000000000402ddd\n.text:0000000000402de2\n.text:0000000000402de4\n.text:0000000000402de6\n.text:0000000000402de9\n.text:0000000000402deb\n.text:0000000000402df0\n.text:0000000000402df4\n.text:0000000000402df7\n.text:0000000000402e00\n.text:0000000000402e04\n.text:0000000000402e08\n.text:0000000000402e09\n'
p678
tp679
sS'update_timespec'
p680
(S'\n__stdcall update_timespec(stat * statbuf, timespec * * ts)\n'
p681
V\u000a_Bool update_timespec(stat *statbuf,timespec **ts)\u000a\u000a{\u000a  timespec *ts_00;\u000a  timespec tVar1;\u000a  \u000a  ts_00 = *ts;\u000a  if (ts_00->tv_nsec == 0x3fffffff) {\u000a    if (ts_00[1].tv_nsec == 0x3fffffff) {\u000a      *ts = (timespec *)0x0;\u000a      return false;\u000a    }\u000a    gettime(ts_00);\u000a  }\u000a  else {\u000a    if (ts_00->tv_nsec == 0x3ffffffe) {\u000a      if (ts_00[1].tv_nsec == 0x3ffffffe) {\u000a        return true;\u000a      }\u000a      tVar1 = get_stat_atime(statbuf);\u000a      ts_00->tv_sec = SUB168((undefined  [16])tVar1,0);\u000a      ts_00->tv_nsec = SUB168((undefined  [16])tVar1 >> 0x40,0);\u000a    }\u000a  }\u000a  if (ts_00[1].tv_nsec == 0x3fffffff) {\u000a    gettime(ts_00 + 1);\u000a  }\u000a  else {\u000a    if (ts_00[1].tv_nsec == 0x3ffffffe) {\u000a      tVar1 = get_stat_mtime(statbuf);\u000a      ts_00[1].tv_sec = SUB168((undefined  [16])tVar1,0);\u000a      ts_00[1].tv_nsec = SUB168((undefined  [16])tVar1 >> 0x40,0);\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p682
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RBX,qword ptr [RSI]\nMOV RAX,qword ptr [RBX + 0x8]\nCMP RAX,0x3fffffff\nJZ 0x004085bb\nCMP RAX,0x3ffffffe\nJNZ 0x004085d6\nMOV AL,0x1\nCMP qword ptr [RBX + 0x18],0x3ffffffe\nJZ 0x0040860a\nMOV RDI,R14\nCALL 0x004068f0\nMOV qword ptr [RBX],RAX\nMOV qword ptr [RBX + 0x8],RDX\nJMP 0x004085d6\nCMP qword ptr [RBX + 0x18],0x3fffffff\nJNZ 0x004085ce\nMOV qword ptr [RSI],0x0\nJMP 0x00408608\nMOV RDI,RBX\nCALL 0x00402dd0\nMOV RAX,qword ptr [RBX + 0x18]\nCMP RAX,0x3fffffff\nJZ 0x004085fc\nCMP RAX,0x3ffffffe\nJNZ 0x00408608\nMOV RDI,R14\nCALL 0x00406910\nMOV qword ptr [RBX + 0x10],RAX\nMOV qword ptr [RBX + 0x18],RDX\nJMP 0x00408608\nADD RBX,0x10\nMOV RDI,RBX\nCALL 0x00402dd0\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p683
S'41 56\n53\n50\n49 89 fe\n48 8b 1e\n48 8b 43 08\n48 3d ff ff ff 3f\n74 25\n48 3d fe ff ff 3f\n75 38\nb0 01\n48 81 7b 18 fe ff ff 3f\n74 60\n4c 89 f7\ne8 3e e3 ff ff\n48 89 03\n48 89 53 08\neb 1b\n48 81 7b 18 ff ff ff 3f\n75 09\n48 c7 06 00 00 00 00\neb 3a\n48 89 df\ne8 fa a7 ff ff\n48 8b 43 18\n48 3d ff ff ff 3f\n74 1a\n48 3d fe ff ff 3f\n75 1e\n4c 89 f7\ne8 1e e3 ff ff\n48 89 43 10\n48 89 53 18\neb 0c\n48 83 c3 10\n48 89 df\ne8 c8 a7 ff ff\n31 c0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p684
S'.text:0000000000408580\n.text:0000000000408582\n.text:0000000000408583\n.text:0000000000408584\n.text:0000000000408587\n.text:000000000040858a\n.text:000000000040858e\n.text:0000000000408594\n.text:0000000000408596\n.text:000000000040859c\n.text:000000000040859e\n.text:00000000004085a0\n.text:00000000004085a8\n.text:00000000004085aa\n.text:00000000004085ad\n.text:00000000004085b2\n.text:00000000004085b5\n.text:00000000004085b9\n.text:00000000004085bb\n.text:00000000004085c3\n.text:00000000004085c5\n.text:00000000004085cc\n.text:00000000004085ce\n.text:00000000004085d1\n.text:00000000004085d6\n.text:00000000004085da\n.text:00000000004085e0\n.text:00000000004085e2\n.text:00000000004085e8\n.text:00000000004085ea\n.text:00000000004085ed\n.text:00000000004085f2\n.text:00000000004085f6\n.text:00000000004085fa\n.text:00000000004085fc\n.text:0000000000408600\n.text:0000000000408603\n.text:0000000000408608\n.text:000000000040860a\n.text:000000000040860e\n.text:000000000040860f\n.text:0000000000408611\n'
p685
tp686
sS'version_etc'
p687
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p688
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p689
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00406d62\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x00406cc0\nADD RSP,0xd8\nRET\n'
p690
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p691
S'.text:0000000000406d20\n.text:0000000000406d27\n.text:0000000000406d29\n.text:0000000000406d2b\n.text:0000000000406d30\n.text:0000000000406d35\n.text:0000000000406d3a\n.text:0000000000406d42\n.text:0000000000406d4a\n.text:0000000000406d52\n.text:0000000000406d5a\n.text:0000000000406d62\n.text:0000000000406d67\n.text:0000000000406d6c\n.text:0000000000406d71\n.text:0000000000406d76\n.text:0000000000406d7e\n.text:0000000000406d83\n.text:0000000000406d8b\n.text:0000000000406d92\n.text:0000000000406d95\n.text:0000000000406d9a\n.text:0000000000406da1\n'
p692
tp693
sS'mktime_ok'
p694
(S'\n__stdcall mktime_ok(tm * tm0, tm * tm1, time_t t)\n'
p695
V\u000a_Bool mktime_ok(tm *tm0,tm *tm1,time_t t)\u000a\u000a{\u000a  time_t local_10;\u000a  \u000a  if ((t == -1) && (local_10 = t, tm1 = (tm *)localtime(&local_10), tm1 == (tm *)0x0)) {\u000a    return false;\u000a  }\u000a  return (_Bool)((((tm *)tm1)->tm_year ^ tm0->tm_year |\u000a                 ((tm *)tm1)->tm_mon ^ tm0->tm_mon |\u000a                 ((tm *)tm1)->tm_mday ^ tm0->tm_mday | ((tm *)tm1)->tm_hour ^ tm0->tm_hour |\u000a                 ((tm *)tm1)->tm_min ^ tm0->tm_min | ((tm *)tm1)->tm_sec ^ tm0->tm_sec) == 0);\u000a}\u000a\u000a
p696
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x8],RDX\nCMP RDX,-0x1\nJNZ 0x00404905\nLEA RDI,[RSP + 0x8]\nCALL 0x00401870\nMOV RSI,RAX\nTEST RSI,RSI\nJZ 0x0040493a\nMOV EAX,dword ptr [RSI]\nMOV ECX,dword ptr [RSI + 0x4]\nXOR EAX,dword ptr [RBX]\nXOR ECX,dword ptr [RBX + 0x4]\nOR ECX,EAX\nMOV EAX,dword ptr [RSI + 0x8]\nXOR EAX,dword ptr [RBX + 0x8]\nMOV EDX,dword ptr [RSI + 0xc]\nXOR EDX,dword ptr [RBX + 0xc]\nOR EDX,EAX\nOR EDX,ECX\nMOV EAX,dword ptr [RSI + 0x10]\nXOR EAX,dword ptr [RBX + 0x10]\nOR EAX,EDX\nMOV ECX,dword ptr [RSI + 0x14]\nXOR ECX,dword ptr [RBX + 0x14]\nOR ECX,EAX\nSETZ AL\nADD RSP,0x10\nPOP RBX\nRET\nXOR EAX,EAX\nJMP 0x00404934\n'
p697
S'53\n48 83 ec 10\n48 89 fb\n48 89 54 24 08\n48 83 fa ff\n75 12\n48 8d 7c 24 08\ne8 73 cf ff ff\n48 89 c6\n48 85 f6\n74 35\n8b 06\n8b 4e 04\n33 03\n33 4b 04\n09 c1\n8b 46 08\n33 43 08\n8b 56 0c\n33 53 0c\n09 c2\n09 ca\n8b 46 10\n33 43 10\n09 d0\n8b 4e 14\n33 4b 14\n09 c1\n0f 94 c0\n48 83 c4 10\n5b\nc3\n31 c0\neb f6\n'
p698
S'.text:00000000004048e0\n.text:00000000004048e1\n.text:00000000004048e5\n.text:00000000004048e8\n.text:00000000004048ed\n.text:00000000004048f1\n.text:00000000004048f3\n.text:00000000004048f8\n.text:00000000004048fd\n.text:0000000000404900\n.text:0000000000404903\n.text:0000000000404905\n.text:0000000000404907\n.text:000000000040490a\n.text:000000000040490c\n.text:000000000040490f\n.text:0000000000404911\n.text:0000000000404914\n.text:0000000000404917\n.text:000000000040491a\n.text:000000000040491d\n.text:000000000040491f\n.text:0000000000404921\n.text:0000000000404924\n.text:0000000000404927\n.text:0000000000404929\n.text:000000000040492c\n.text:000000000040492f\n.text:0000000000404931\n.text:0000000000404934\n.text:0000000000404938\n.text:0000000000404939\n.text:000000000040493a\n.text:000000000040493c\n'
p699
tp700
sS'lseek'
p701
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p702
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_0060e108)();\u000a  return _Var1;\u000a}\u000a\u000a
p703
S'JMP qword ptr [0x0060e108]\n'
p704
S'ff 25 e2 c6 20 00\n'
p705
S'.plt:0000000000401a20\n'
p706
tp707
sS'cdb_init'
p708
(S'\n__stdcall cdb_init(cd_buf * cdb)\n'
p709
V\u000avoid cdb_init(cd_buf *cdb)\u000a\u000a{\u000a  *cdb = (cd_buf)0xffffff9c;\u000a  return;\u000a}\u000a\u000a
p710
S'MOV dword ptr [RDI],0xffffff9c\nRET\n'
p711
S'c7 07 9c ff ff ff\nc3\n'
p712
S'.text:0000000000408a60\n.text:0000000000408a66\n'
p713
tp714
sS'memrchr'
p715
(S'\n__stdcall memrchr(void * __s, int __c, size_t __n)\n'
p716
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memrchr(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memrchr_0060e218)();\u000a  return pvVar1;\u000a}\u000a\u000a
p717
S'JMP qword ptr [0x0060e218]\n'
p718
S'ff 25 d2 c5 20 00\n'
p719
S'.plt:0000000000401c40\n'
p720
tp721
sS'quotearg_n_mem'
p722
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p723
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p724
S'MOV ECX,0x60e3c0\nJMP 0x00405fb0\n'
p725
S'b9 c0 e3 60 00\ne9 36 fe ff ff\n'
p726
S'.text:0000000000406170\n.text:0000000000406175\n'
p727
tp728
sS'__printf_chk'
p729
(S'\n__stdcall __printf_chk()\n'
p730
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_0060e208)();\u000a  return;\u000a}\u000a\u000a
p731
S'JMP qword ptr [0x0060e208]\n'
p732
S'ff 25 e2 c5 20 00\n'
p733
S'.plt:0000000000401c20\n'
p734
tp735
sS'fchdir'
p736
(S'\n__stdcall fchdir(int __fd)\n'
p737
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fchdir(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fchdir_0060e1e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p738
S'JMP qword ptr [0x0060e1e8]\n'
p739
S'ff 25 02 c6 20 00\n'
p740
S'.plt:0000000000401be0\n'
p741
tp742
sS'getcwd'
p743
(S'\n__stdcall getcwd(char * __buf, size_t __size)\n'
p744
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getcwd(char *__buf,size_t __size)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getcwd_0060e130)();\u000a  return pcVar1;\u000a}\u000a\u000a
p745
S'JMP qword ptr [0x0060e130]\n'
p746
S'ff 25 ba c6 20 00\n'
p747
S'.plt:0000000000401a70\n'
p748
tp749
sS'emit_ancillary_info'
p750
(S'\n__stdcall emit_ancillary_info()\n'
p751
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x00409430;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("touch",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "touch";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,"touch",uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/","touch");\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x40b809;\u000a  if (__s2 == "touch") {\u000a    uVar3 = 0x409b9f;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p752
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x409430\nMOV ESI,0x409b83\nNOP\nMOV EDI,0x4099bb\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x0040200b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00401ff0\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x4099bb\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x409be2\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x409a03\nMOV ECX,0x409bf9\nXOR EAX,EAX\nCALL 0x00401c20\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00401c10\nTEST RAX,RAX\nJZ 0x00402094\nMOV ESI,0x409c20\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x004018a0\nTEST EAX,EAX\nJZ 0x00402094\nXOR EDI,EDI\nMOV ESI,0x409c24\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x4099bb\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401c20\nXOR EDI,EDI\nMOV ESI,0x409c69\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,RAX\nMOV R14D,0x4099bb\nMOV EDI,0x1\nMOV EDX,0x409bf9\nMOV ECX,0x4099bb\nXOR EAX,EAX\nCALL 0x00401c20\nXOR EDI,EDI\nMOV ESI,0x409c88\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x409b9f\nMOV ECX,0x40b809\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401c20\n'
p753
S'41 56\n53\n50\nbb 30 94 40 00\nbe 83 9b 40 00\n66 90\nbf bb 99 40 00\ne8 06 fb ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb bb 99 40 00\n48 0f 45 d8\n31 ff\nbe e2 9b 40 00\nba 05 00 00 00\ne8 34 f9 ff ff\n48 89 c6\nbf 01 00 00 00\nba 03 9a 40 00\nb9 f9 9b 40 00\n31 c0\ne8 db fb ff ff\nbf 05 00 00 00\n31 f6\ne8 bf fb ff ff\n48 85 c0\n74 3e\nbe 20 9c 40 00\nba 03 00 00 00\n48 89 c7\ne8 38 f8 ff ff\n85 c0\n74 28\n31 ff\nbe 24 9c 40 00\nba 05 00 00 00\ne8 e3 f8 ff ff\n48 89 c1\nbf 01 00 00 00\nba bb 99 40 00\n31 c0\n48 89 ce\ne8 8c fb ff ff\n31 ff\nbe 69 9c 40 00\nba 05 00 00 00\ne8 bb f8 ff ff\n48 89 c6\n41 be bb 99 40 00\nbf 01 00 00 00\nba f9 9b 40 00\nb9 bb 99 40 00\n31 c0\ne8 5c fb ff ff\n31 ff\nbe 88 9c 40 00\nba 05 00 00 00\ne8 8b f8 ff ff\n48 89 c2\n4c 39 f3\nb8 9f 9b 40 00\nb9 09 b8 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 1e fb ff ff\n'
p754
S'.text:0000000000401fe0\n.text:0000000000401fe2\n.text:0000000000401fe3\n.text:0000000000401fe4\n.text:0000000000401fe9\n.text:0000000000401fee\n.text:0000000000401ff0\n.text:0000000000401ff5\n.text:0000000000401ffa\n.text:0000000000401ffc\n.text:0000000000401ffe\n.text:0000000000402002\n.text:0000000000402006\n.text:0000000000402009\n.text:000000000040200b\n.text:000000000040200f\n.text:0000000000402012\n.text:0000000000402017\n.text:000000000040201b\n.text:000000000040201d\n.text:0000000000402022\n.text:0000000000402027\n.text:000000000040202c\n.text:000000000040202f\n.text:0000000000402034\n.text:0000000000402039\n.text:000000000040203e\n.text:0000000000402040\n.text:0000000000402045\n.text:000000000040204a\n.text:000000000040204c\n.text:0000000000402051\n.text:0000000000402054\n.text:0000000000402056\n.text:000000000040205b\n.text:0000000000402060\n.text:0000000000402063\n.text:0000000000402068\n.text:000000000040206a\n.text:000000000040206c\n.text:000000000040206e\n.text:0000000000402073\n.text:0000000000402078\n.text:000000000040207d\n.text:0000000000402080\n.text:0000000000402085\n.text:000000000040208a\n.text:000000000040208c\n.text:000000000040208f\n.text:0000000000402094\n.text:0000000000402096\n.text:000000000040209b\n.text:00000000004020a0\n.text:00000000004020a5\n.text:00000000004020a8\n.text:00000000004020ae\n.text:00000000004020b3\n.text:00000000004020b8\n.text:00000000004020bd\n.text:00000000004020bf\n.text:00000000004020c4\n.text:00000000004020c6\n.text:00000000004020cb\n.text:00000000004020d0\n.text:00000000004020d5\n.text:00000000004020d8\n.text:00000000004020db\n.text:00000000004020e0\n.text:00000000004020e5\n.text:00000000004020e9\n.text:00000000004020ee\n.text:00000000004020f0\n.text:00000000004020f3\n.text:00000000004020f6\n.text:00000000004020fa\n.text:00000000004020fb\n.text:00000000004020fd\n'
p755
tp756
sS'save_cwd'
p757
(S'\n__stdcall save_cwd(saved_cwd * cwd)\n'
p758
V\u000aint save_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  int iVar3;\u000a  \u000a  cwd->name = (char *)0x0;\u000a  iVar3 = 0;\u000a  iVar1 = open_safer(".");\u000a  cwd->desc = iVar1;\u000a  if (iVar1 < 0) {\u000a    pcVar2 = getcwd((char *)0x0,0);\u000a    cwd->name = pcVar2;\u000a    iVar3 = -(uint)(pcVar2 == (char *)0x0);\u000a  }\u000a  else {\u000a    set_cloexec_flag();\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p759
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV qword ptr [RBX + 0x8],0x0\nXOR EBP,EBP\nMOV EDI,0x40aeea\nXOR ESI,ESI\nXOR EAX,EAX\nCALL 0x00408dd0\nMOV dword ptr [RBX],EAX\nTEST EAX,EAX\nJS 0x004080c2\nMOV ESI,0x1\nMOV EDI,EAX\nCALL 0x00408d60\nJMP 0x004080d5\nXOR EDI,EDI\nXOR ESI,ESI\nCALL 0x00401a70\nMOV qword ptr [RBX + 0x8],RAX\nCMP RAX,0x1\nSBB EBP,EBP\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p760
S'55\n53\n50\n48 89 fb\n48 c7 43 08 00 00 00 00\n31 ed\nbf ea ae 40 00\n31 f6\n31 c0\ne8 22 0d 00 00\n89 03\n85 c0\n78 0e\nbe 01 00 00 00\n89 c7\ne8 a0 0c 00 00\neb 13\n31 ff\n31 f6\ne8 a5 99 ff ff\n48 89 43 08\n48 83 f8 01\n19 ed\n89 e8\n48 83 c4 08\n5b\n5d\nc3\n'
p761
S'.text:0000000000408090\n.text:0000000000408091\n.text:0000000000408092\n.text:0000000000408093\n.text:0000000000408096\n.text:000000000040809e\n.text:00000000004080a0\n.text:00000000004080a5\n.text:00000000004080a7\n.text:00000000004080a9\n.text:00000000004080ae\n.text:00000000004080b0\n.text:00000000004080b2\n.text:00000000004080b4\n.text:00000000004080b9\n.text:00000000004080bb\n.text:00000000004080c0\n.text:00000000004080c2\n.text:00000000004080c4\n.text:00000000004080c6\n.text:00000000004080cb\n.text:00000000004080cf\n.text:00000000004080d3\n.text:00000000004080d5\n.text:00000000004080d7\n.text:00000000004080db\n.text:00000000004080dc\n.text:00000000004080dd\n'
p762
tp763
sS'version_etc_va'
p764
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p765
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p766
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x00406cf0\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x00406cfc\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00406d11\nINC R9\nCMP R9,0xa\nJC 0x00406cd0\nMOV R8,RSP\nCALL 0x00406930\nADD RSP,0x58\nRET\n'
p767
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p768
S'.text:0000000000406cc0\n.text:0000000000406cc4\n.text:0000000000406cc7\n.text:0000000000406cd0\n.text:0000000000406cd3\n.text:0000000000406cd7\n.text:0000000000406cd9\n.text:0000000000406cdc\n.text:0000000000406ce0\n.text:0000000000406ce4\n.text:0000000000406ce7\n.text:0000000000406cf0\n.text:0000000000406cf4\n.text:0000000000406cf8\n.text:0000000000406cfc\n.text:0000000000406cff\n.text:0000000000406d03\n.text:0000000000406d06\n.text:0000000000406d08\n.text:0000000000406d0b\n.text:0000000000406d0f\n.text:0000000000406d11\n.text:0000000000406d14\n.text:0000000000406d19\n.text:0000000000406d1d\n'
p769
tp770
sS'xzalloc'
p771
(S'\n__stdcall xzalloc(size_t s)\n'
p772
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p773
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00406e50\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00401a50\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p774
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 f4 aa ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p775
S'.text:0000000000406f40\n.text:0000000000406f42\n.text:0000000000406f43\n.text:0000000000406f44\n.text:0000000000406f47\n.text:0000000000406f4c\n.text:0000000000406f4f\n.text:0000000000406f51\n.text:0000000000406f54\n.text:0000000000406f57\n.text:0000000000406f5c\n.text:0000000000406f5f\n.text:0000000000406f63\n.text:0000000000406f64\n.text:0000000000406f66\n'
p776
tp777
sS'openat_restore_fail'
p778
(S'\n__stdcall openat_restore_fail()\n'
p779
V\u000avoid openat_restore_fail(uint uParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"failed to return to initial working directory",5);\u000a  error((ulong)(uint)iVar1,(ulong)uParm1,uVar2,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p780
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nMOV EBP,dword ptr [0x0060e2b0]\nXOR EDI,EDI\nMOV ESI,0x40bef8\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nXOR EAX,EAX\nMOV EDI,EBP\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00401c30\nCALL 0x00401880\n'
p781
S'55\n53\n50\n89 fb\n8b 2d 55 62 20 00\n31 ff\nbe f8 be 40 00\nba 05 00 00 00\ne8 f4 98 ff ff\n48 89 c1\n31 c0\n89 ef\n89 de\n48 89 ca\ne8 b3 9b ff ff\ne8 fe 97 ff ff\n'
p782
S'.text:0000000000408050\n.text:0000000000408051\n.text:0000000000408052\n.text:0000000000408053\n.text:0000000000408055\n.text:000000000040805b\n.text:000000000040805d\n.text:0000000000408062\n.text:0000000000408067\n.text:000000000040806c\n.text:000000000040806f\n.text:0000000000408071\n.text:0000000000408073\n.text:0000000000408075\n.text:0000000000408078\n.text:000000000040807d\n'
p783
tp784
sS'chdir_long'
p785
(S'\n__stdcall chdir_long(char * dir)\n'
p786
V\u000aint chdir_long(char *dir)\u000a\u000a{\u000a  char cVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  undefined *puVar5;\u000a  char *pcVar6;\u000a  cd_buf local_30 [2];\u000a  \u000a  iVar2 = chdir(dir);\u000a  if (iVar2 == 0) {\u000a    return 0;\u000a  }\u000a  piVar3 = __errno_location();\u000a  if (*piVar3 != 0x24) {\u000a    return iVar2;\u000a  }\u000a  sVar4 = strlen(dir);\u000a  cdb_init(local_30);\u000a  if (sVar4 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0 < len","lib/chdir-long.c",0x7e,"int chdir_long(char *)");\u000a  }\u000a  if (sVar4 < 0x1000) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("4096 <= len","lib/chdir-long.c",0x7f,"int chdir_long(char *)");\u000a  }\u000a  pcVar6 = dir + sVar4;\u000a  sVar4 = strspn(dir,"/");\u000a  if (sVar4 == 0) {\u000aLAB_004088ef:\u000a    cVar1 = *dir;\u000a  }\u000a  else {\u000a    if (sVar4 != 2) {\u000a      iVar2 = cdb_advance_fd(local_30,"/");\u000a      if (iVar2 != 0) goto LAB_004089a3;\u000a      dir = dir + sVar4;\u000a      goto LAB_004088ef;\u000a    }\u000a    puVar5 = (undefined *)memchr(dir + 3,0x2f,(size_t)(pcVar6 + -(long)(dir + 3)));\u000a    if (puVar5 == (undefined *)0x0) {\u000aLAB_004089b5:\u000a      *piVar3 = 0x24;\u000a      return -1;\u000a    }\u000a    *puVar5 = 0;\u000a    iVar2 = cdb_advance_fd(local_30,dir);\u000a    *puVar5 = 0x2f;\u000a    if (iVar2 != 0) goto LAB_004089a3;\u000a    dir = find_non_slash(puVar5 + 1);\u000a    cVar1 = *dir;\u000a  }\u000a  if (cVar1 == '/') {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("*dir != \u005c'/\u005c'","lib/chdir-long.c",0xa2,"int chdir_long(char *)");\u000a  }\u000a  if (pcVar6 < dir) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("dir <= dir_end","lib/chdir-long.c",0xa3,"int chdir_long(char *)");\u000a  }\u000a  if (0xfff < (long)(pcVar6 + -(long)dir)) {\u000a    do {\u000a      puVar5 = (undefined *)memrchr(dir,0x2f,0x1000);\u000a      if (puVar5 == (undefined *)0x0) goto LAB_004089b5;\u000a      *puVar5 = 0;\u000a      if (0xfff < (long)(puVar5 + -(long)dir)) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("slash - dir < 4096","lib/chdir-long.c",0xb3,"int chdir_long(char *)");\u000a      }\u000a      iVar2 = cdb_advance_fd(local_30,dir);\u000a      *puVar5 = 0x2f;\u000a      if (iVar2 != 0) goto LAB_004089a3;\u000a      dir = find_non_slash(puVar5 + 1);\u000a    } while (0xfff < (long)(pcVar6 + -(long)dir));\u000a  }\u000a  if (((pcVar6 <= dir) || (iVar2 = cdb_advance_fd(local_30,dir), iVar2 == 0)) &&\u000a     (iVar2 = cdb_fchdir(local_30), iVar2 == 0)) {\u000a    cdb_free(local_30);\u000a    return 0;\u000a  }\u000aLAB_004089a3:\u000a  iVar2 = *piVar3;\u000a  cdb_free(local_30);\u000a  *piVar3 = iVar2;\u000a  return -1;\u000a}\u000a\u000a
p787
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nCALL 0x004019b0\nMOV EBP,EAX\nTEST EBP,EBP\nJZ 0x004088ce\nCALL 0x00401890\nMOV R14,RAX\nCMP dword ptr [R14],0x24\nJNZ 0x004089c1\nMOV RDI,RBX\nCALL 0x00401980\nMOV R15,RAX\nLEA RDI,[RSP + 0x8]\nCALL 0x00408a60\nTEST R15,R15\nJZ 0x004089f7\nCMP R15,0xfff\nJBE 0x00408a10\nADD R15,RBX\nMOV ESI,0x40bff7\nMOV RDI,RBX\nCALL 0x00401a90\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004088ef\nCMP RBP,0x2\nJNZ 0x004088d5\nLEA RDI,[RBX + 0x3]\nMOV RDX,R15\nSUB RDX,RDI\nMOV ESI,0x2f\nCALL 0x00401aa0\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004089b5\nMOV byte ptr [RBP],0x0\nLEA RDI,[RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00408a70\nMOV byte ptr [RBP],0x2f\nTEST EAX,EAX\nJNZ 0x004089a3\nINC RBP\nMOV RDI,RBP\nCALL 0x00408ab0\nMOV RBX,RAX\nCMP byte ptr [RBX],0x2f\nJNZ 0x004088f8\nJMP 0x00408a29\nXOR EBP,EBP\nJMP 0x004089c1\nLEA RDI,[RSP + 0x8]\nMOV ESI,0x40bff7\nCALL 0x00408a70\nTEST EAX,EAX\nJNZ 0x004089a3\nADD RBX,RBP\nCMP byte ptr [RBX],0x2f\nJZ 0x00408a29\nCMP RBX,R15\nJA 0x00408a42\nMOV RAX,R15\nSUB RAX,RBX\nCMP RAX,0x1000\nJL 0x0040897f\nLEA R12,[RSP + 0x8]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV ESI,0x2f\nMOV EDX,0x1000\nMOV RDI,RBX\nCALL 0x00401c40\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004089b5\nMOV byte ptr [RBP],0x0\nMOV RAX,RBP\nSUB RAX,RBX\nCMP RAX,0x1000\nJGE 0x004089de\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x00408a70\nMOV byte ptr [RBP],0x2f\nTEST EAX,EAX\nJNZ 0x004089a3\nINC RBP\nMOV RDI,RBP\nCALL 0x00408ab0\nMOV RBX,RAX\nMOV RAX,R15\nSUB RAX,RBX\nCMP RAX,0xfff\nJG 0x00408920\nCMP RBX,R15\nJNC 0x00408995\nLEA RDI,[RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00408a70\nTEST EAX,EAX\nJNZ 0x004089a3\nLEA RDI,[RSP + 0x8]\nCALL 0x00408ad0\nTEST EAX,EAX\nJZ 0x004089d0\nMOV EBX,dword ptr [R14]\nLEA RDI,[RSP + 0x8]\nCALL 0x00408ae0\nMOV dword ptr [R14],EBX\nJMP 0x004089bc\nMOV dword ptr [R14],0x24\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nLEA RDI,[RSP + 0x8]\nCALL 0x00408ae0\nXOR EBP,EBP\nJMP 0x004089c1\nMOV EDI,0x40bf7d\nMOV ESI,0x40bf2e\nMOV EDX,0xb3\nMOV ECX,0x40bf3f\nCALL 0x00401a40\nMOV EDI,0x40bf26\nMOV ESI,0x40bf2e\nMOV EDX,0x7e\nMOV ECX,0x40bf3f\nCALL 0x00401a40\nMOV EDI,0x40bf56\nMOV ESI,0x40bf2e\nMOV EDX,0x7f\nMOV ECX,0x40bf3f\nCALL 0x00401a40\nMOV EDI,0x40bf62\nMOV ESI,0x40bf2e\nMOV EDX,0xa2\nMOV ECX,0x40bf3f\nCALL 0x00401a40\nMOV EDI,0x40bf6e\nMOV ESI,0x40bf2e\nMOV EDX,0xa3\nMOV ECX,0x40bf3f\nCALL 0x00401a40\n'
p788
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 fb\ne8 9c 91 ff ff\n89 c5\n85 ed\n0f 84 b0 00 00 00\ne8 6d 90 ff ff\n49 89 c6\n41 83 3e 24\n0f 85 91 01 00 00\n48 89 df\ne8 48 91 ff ff\n49 89 c7\n48 8d 7c 24 08\ne8 1b 02 00 00\n4d 85 ff\n0f 84 a9 01 00 00\n49 81 ff ff 0f 00 00\n0f 86 b5 01 00 00\n49 01 df\nbe f7 bf 40 00\n48 89 df\ne8 25 92 ff ff\n48 89 c5\n48 85 ed\n74 7c\n48 83 fd 02\n75 5c\n48 8d 7b 03\n4c 89 fa\n48 29 fa\nbe 2f 00 00 00\ne8 13 92 ff ff\n48 89 c5\n48 85 ed\n0f 84 1c 01 00 00\nc6 45 00 00\n48 8d 7c 24 08\n48 89 de\ne8 c6 01 00 00\nc6 45 00 2f\n85 c0\n0f 85 ed 00 00 00\n48 ff c5\n48 89 ef\ne8 ef 01 00 00\n48 89 c3\n80 3b 2f\n75 2f\ne9 5b 01 00 00\n31 ed\ne9 ec 00 00 00\n48 8d 7c 24 08\nbe f7 bf 40 00\ne8 8c 01 00 00\n85 c0\n0f 85 b7 00 00 00\n48 01 eb\n80 3b 2f\n0f 84 31 01 00 00\n4c 39 fb\n0f 87 41 01 00 00\n4c 89 f8\n48 29 d8\n48 3d 00 10 00 00\n7c 70\n4c 8d 64 24 08\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbe 2f 00 00 00\nba 00 10 00 00\n48 89 df\ne8 0e 93 ff ff\n48 89 c5\n48 85 ed\n74 7b\nc6 45 00 00\n48 89 e8\n48 29 d8\n48 3d 00 10 00 00\n0f 8d 8e 00 00 00\n4c 89 e7\n48 89 de\ne8 15 01 00 00\nc6 45 00 2f\n85 c0\n75 40\n48 ff c5\n48 89 ef\ne8 42 01 00 00\n48 89 c3\n4c 89 f8\n48 29 d8\n48 3d ff 0f 00 00\n7f a1\n4c 39 fb\n73 11\n48 8d 7c 24 08\n48 89 de\ne8 df 00 00 00\n85 c0\n75 0e\n48 8d 7c 24 08\ne8 31 01 00 00\n85 c0\n74 2d\n41 8b 1e\n48 8d 7c 24 08\ne8 30 01 00 00\n41 89 1e\neb 07\n41 c7 06 24 00 00 00\nbd ff ff ff ff\n89 e8\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n48 8d 7c 24 08\ne8 06 01 00 00\n31 ed\neb e3\nbf 7d bf 40 00\nbe 2e bf 40 00\nba b3 00 00 00\nb9 3f bf 40 00\ne8 49 90 ff ff\nbf 26 bf 40 00\nbe 2e bf 40 00\nba 7e 00 00 00\nb9 3f bf 40 00\ne8 30 90 ff ff\nbf 56 bf 40 00\nbe 2e bf 40 00\nba 7f 00 00 00\nb9 3f bf 40 00\ne8 17 90 ff ff\nbf 62 bf 40 00\nbe 2e bf 40 00\nba a2 00 00 00\nb9 3f bf 40 00\ne8 fe 8f ff ff\nbf 6e bf 40 00\nbe 2e bf 40 00\nba a3 00 00 00\nb9 3f bf 40 00\ne8 e5 8f ff ff\n'
p789
S'.text:0000000000408800\n.text:0000000000408801\n.text:0000000000408803\n.text:0000000000408805\n.text:0000000000408807\n.text:0000000000408808\n.text:000000000040880c\n.text:000000000040880f\n.text:0000000000408814\n.text:0000000000408816\n.text:0000000000408818\n.text:000000000040881e\n.text:0000000000408823\n.text:0000000000408826\n.text:000000000040882a\n.text:0000000000408830\n.text:0000000000408833\n.text:0000000000408838\n.text:000000000040883b\n.text:0000000000408840\n.text:0000000000408845\n.text:0000000000408848\n.text:000000000040884e\n.text:0000000000408855\n.text:000000000040885b\n.text:000000000040885e\n.text:0000000000408863\n.text:0000000000408866\n.text:000000000040886b\n.text:000000000040886e\n.text:0000000000408871\n.text:0000000000408873\n.text:0000000000408877\n.text:0000000000408879\n.text:000000000040887d\n.text:0000000000408880\n.text:0000000000408883\n.text:0000000000408888\n.text:000000000040888d\n.text:0000000000408890\n.text:0000000000408893\n.text:0000000000408899\n.text:000000000040889d\n.text:00000000004088a2\n.text:00000000004088a5\n.text:00000000004088aa\n.text:00000000004088ae\n.text:00000000004088b0\n.text:00000000004088b6\n.text:00000000004088b9\n.text:00000000004088bc\n.text:00000000004088c1\n.text:00000000004088c4\n.text:00000000004088c7\n.text:00000000004088c9\n.text:00000000004088ce\n.text:00000000004088d0\n.text:00000000004088d5\n.text:00000000004088da\n.text:00000000004088df\n.text:00000000004088e4\n.text:00000000004088e6\n.text:00000000004088ec\n.text:00000000004088ef\n.text:00000000004088f2\n.text:00000000004088f8\n.text:00000000004088fb\n.text:0000000000408901\n.text:0000000000408904\n.text:0000000000408907\n.text:000000000040890d\n.text:000000000040890f\n.text:0000000000408914\n.text:0000000000408920\n.text:0000000000408925\n.text:000000000040892a\n.text:000000000040892d\n.text:0000000000408932\n.text:0000000000408935\n.text:0000000000408938\n.text:000000000040893a\n.text:000000000040893e\n.text:0000000000408941\n.text:0000000000408944\n.text:000000000040894a\n.text:0000000000408950\n.text:0000000000408953\n.text:0000000000408956\n.text:000000000040895b\n.text:000000000040895f\n.text:0000000000408961\n.text:0000000000408963\n.text:0000000000408966\n.text:0000000000408969\n.text:000000000040896e\n.text:0000000000408971\n.text:0000000000408974\n.text:0000000000408977\n.text:000000000040897d\n.text:000000000040897f\n.text:0000000000408982\n.text:0000000000408984\n.text:0000000000408989\n.text:000000000040898c\n.text:0000000000408991\n.text:0000000000408993\n.text:0000000000408995\n.text:000000000040899a\n.text:000000000040899f\n.text:00000000004089a1\n.text:00000000004089a3\n.text:00000000004089a6\n.text:00000000004089ab\n.text:00000000004089b0\n.text:00000000004089b3\n.text:00000000004089b5\n.text:00000000004089bc\n.text:00000000004089c1\n.text:00000000004089c3\n.text:00000000004089c7\n.text:00000000004089c8\n.text:00000000004089ca\n.text:00000000004089cc\n.text:00000000004089ce\n.text:00000000004089cf\n.text:00000000004089d0\n.text:00000000004089d5\n.text:00000000004089da\n.text:00000000004089dc\n.text:00000000004089de\n.text:00000000004089e3\n.text:00000000004089e8\n.text:00000000004089ed\n.text:00000000004089f2\n.text:00000000004089f7\n.text:00000000004089fc\n.text:0000000000408a01\n.text:0000000000408a06\n.text:0000000000408a0b\n.text:0000000000408a10\n.text:0000000000408a15\n.text:0000000000408a1a\n.text:0000000000408a1f\n.text:0000000000408a24\n.text:0000000000408a29\n.text:0000000000408a2e\n.text:0000000000408a33\n.text:0000000000408a38\n.text:0000000000408a3d\n.text:0000000000408a42\n.text:0000000000408a47\n.text:0000000000408a4c\n.text:0000000000408a51\n.text:0000000000408a56\n'
p790
tp791
sS'gettext_quote'
p792
(S'\n__stdcall gettext_quote(char * msgid)\n'
p793
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_0040b6cc;\u000a        pcVar2 = &DAT_0040b6d0;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p794
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00401960\nCMP RAX,RBX\nJNZ 0x00406568\nCALL 0x00407ce0\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x00406570\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00406518\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40b6bc\nMOV EAX,0x40b6c0\nJMP 0x00406564\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x00406570\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00406556\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40b6cc\nMOV EAX,0x40b6d0\nJMP 0x00406564\nCMP R14D,0x9\nMOV ECX,0x40aed1\nMOV EAX,0x40bf6c\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p795
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 97 b4 ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 09 18 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 bc b6 40 00\nb8 c0 b6 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 cc b6 40 00\nb8 d0 b6 40 00\neb 0e\n41 83 fe 09\nb9 d1 ae 40 00\nb8 6c bf 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p796
S'.text:00000000004064b0\n.text:00000000004064b1\n.text:00000000004064b3\n.text:00000000004064b4\n.text:00000000004064b7\n.text:00000000004064ba\n.text:00000000004064bc\n.text:00000000004064c1\n.text:00000000004064c4\n.text:00000000004064c9\n.text:00000000004064cc\n.text:00000000004064d2\n.text:00000000004064d7\n.text:00000000004064da\n.text:00000000004064df\n.text:00000000004064e4\n.text:00000000004064e9\n.text:00000000004064ef\n.text:00000000004064f5\n.text:00000000004064f8\n.text:00000000004064fa\n.text:00000000004064fc\n.text:0000000000406501\n.text:0000000000406505\n.text:0000000000406507\n.text:0000000000406509\n.text:000000000040650c\n.text:0000000000406511\n.text:0000000000406516\n.text:0000000000406518\n.text:000000000040651d\n.text:0000000000406522\n.text:0000000000406527\n.text:000000000040652d\n.text:0000000000406533\n.text:0000000000406536\n.text:0000000000406538\n.text:000000000040653a\n.text:000000000040653f\n.text:0000000000406543\n.text:0000000000406545\n.text:0000000000406547\n.text:000000000040654a\n.text:000000000040654f\n.text:0000000000406554\n.text:0000000000406556\n.text:000000000040655a\n.text:000000000040655f\n.text:0000000000406564\n.text:0000000000406568\n.text:0000000000406569\n.text:000000000040656b\n.text:000000000040656c\n'
p797
tp798
sS'digits_to_date_time'
p799
(S'\n__stdcall digits_to_date_time(parser_control * pc, textint text_int)\n'
p800
V\u000avoid digits_to_date_time(parser_control *pc,textint text_int)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  long lVar3;\u000a  \u000a  if ((((pc->dates_seen != 0) && ((pc->year).digits == 0)) && (pc->rels_seen == false)) &&\u000a     ((pc->times_seen != 0 || (2 < text_int.digits)))) {\u000a    (pc->year).digits = text_int.digits;\u000a    *(undefined4 *)&pc->year = text_int._0_4_;\u000a    *(undefined4 *)&(pc->year).field_0x4 = text_int._4_4_;\u000a    *(undefined4 *)&(pc->year).value = (undefined4)text_int.value;\u000a    *(int *)((long)&(pc->year).value + 4) = text_int.value._4_4_;\u000a    return;\u000a  }\u000a  lVar1 = SUB248(text_int >> 0x40,0);\u000a  lVar2 = (long)text_int.value._4_4_ >> 0x1f;\u000a  if (4 < text_int.digits) {\u000a    pc->dates_seen = pc->dates_seen + 1;\u000a    lVar3 = lVar1 / 100 + lVar2 + SUB168(SEXT816(lVar1) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0);\u000a    pc->day = lVar1 + lVar3 * -100;\u000a    pc->month = lVar3 + (lVar3 / 100 + (lVar3 >> 0x3f) +\u000a                        SUB168(SEXT816(lVar3) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * -100;\u000a    (pc->year).value = lVar1 / 10000 + lVar2;\u000a    (pc->year).digits = text_int.digits - 4;\u000a    return;\u000a  }\u000a  pc->times_seen = pc->times_seen + 1;\u000a  if (text_int.digits < 3) {\u000a    pc->hour = lVar1;\u000a    lVar1 = 0;\u000a  }\u000a  else {\u000a    lVar2 = lVar1 / 100 + lVar2 + SUB168(SEXT816(lVar1) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0);\u000a    pc->hour = lVar2;\u000a    lVar1 = lVar1 + lVar2 * -100;\u000a  }\u000a  pc->minutes = lVar1;\u000a  *(undefined4 *)&(pc->seconds).tv_sec = 0;\u000a  *(undefined4 *)((long)&(pc->seconds).tv_sec + 4) = 0;\u000a  *(undefined4 *)&(pc->seconds).tv_nsec = 0;\u000a  *(undefined4 *)((long)&(pc->seconds).tv_nsec + 4) = 0;\u000a  pc->meridian = 2;\u000a  return;\u000a}\u000a\u000a
p801
S'LEA RAX,[RSP + 0x8]\nCMP qword ptr [0xb0 + RDI],0x0\nJZ 0x00403dc3\nCMP qword ptr [RDI + 0x38],0x0\nJNZ 0x00403dc3\nCMP byte ptr [0xa9 + RDI],0x0\nJZ 0x00403eaf\nMOV RCX,qword ptr [RAX + 0x8]\nMOV R8,qword ptr [RAX + 0x10]\nCMP R8,0x5\nJC 0x00403e5b\nINC qword ptr [0xb0 + RDI]\nMOV R9,-0x5c28f5c28f5c28f5\nMOV RAX,RCX\nIMUL R9\nMOV RSI,RDX\nADD RSI,RCX\nMOV RAX,RSI\nSHR RAX,0x3f\nSAR RSI,0x6\nADD RSI,RAX\nIMUL RAX,RSI,0x64\nMOV RDX,RCX\nSUB RDX,RAX\nMOV qword ptr [RDI + 0x48],RDX\nMOV RAX,RSI\nIMUL R9\nADD RDX,RSI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RAX,RDX,0x64\nSUB RSI,RAX\nMOV qword ptr [RDI + 0x40],RSI\nMOV RDX,0x346dc5d63886594b\nMOV RAX,RCX\nIMUL RDX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0xb\nADD RDX,RAX\nMOV qword ptr [RDI + 0x30],RDX\nADD R8,-0x4\nMOV qword ptr [RDI + 0x38],R8\nRET\nINC qword ptr [0xd0 + RDI]\nCMP R8,0x2\nJA 0x00403e70\nMOV qword ptr [RDI + 0x50],RCX\nXOR ECX,ECX\nJMP 0x00403e9c\nMOV RDX,-0x5c28f5c28f5c28f5\nMOV RAX,RCX\nIMUL RDX\nADD RDX,RCX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nMOV qword ptr [RDI + 0x50],RDX\nIMUL RAX,RDX,0x64\nSUB RCX,RAX\nMOV qword ptr [RDI + 0x58],RCX\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RDI + 0x60],XMM0\nMOV dword ptr [RDI + 0x20],0x2\nRET\nCMP qword ptr [0xd0 + RDI],0x0\nJNZ 0x00403ec4\nCMP qword ptr [RAX + 0x10],0x3\nJC 0x00403dc3\nMOV RCX,qword ptr [RAX + 0x10]\nMOV qword ptr [RDI + 0x38],RCX\nMOVUPS XMM0,xmmword ptr [RAX]\nMOVUPS xmmword ptr [RDI + 0x28],XMM0\nRET\n'
p802
S'48 8d 44 24 08\n48 83 bf b0 00 00 00 00\n74 14\n48 83 7f 38 00\n75 0d\n80 bf a9 00 00 00 00\n0f 84 ec 00 00 00\n48 8b 48 08\n4c 8b 40 10\n49 83 f8 05\n0f 82 86 00 00 00\n48 ff 87 b0 00 00 00\n49 b9 0b d7 a3 70 3d 0a d7 a3\n48 89 c8\n49 f7 e9\n48 89 d6\n48 01 ce\n48 89 f0\n48 c1 e8 3f\n48 c1 fe 06\n48 01 c6\n48 6b c6 64\n48 89 ca\n48 29 c2\n48 89 57 48\n48 89 f0\n49 f7 e9\n48 01 f2\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b c2 64\n48 29 c6\n48 89 77 40\n48 ba 4b 59 86 38 d6 c5 6d 34\n48 89 c8\n48 f7 ea\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 0b\n48 01 c2\n48 89 57 30\n49 83 c0 fc\n4c 89 47 38\nc3\n48 ff 87 d0 00 00 00\n49 83 f8 02\n77 08\n48 89 4f 50\n31 c9\neb 2c\n48 ba 0b d7 a3 70 3d 0a d7 a3\n48 89 c8\n48 f7 ea\n48 01 ca\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 89 57 50\n48 6b c2 64\n48 29 c1\n48 89 4f 58\n0f 57 c0\n0f 11 47 60\nc7 47 20 02 00 00 00\nc3\n48 83 bf d0 00 00 00 00\n75 0b\n48 83 78 10 03\n0f 82 ff fe ff ff\n48 8b 48 10\n48 89 4f 38\n0f 10 00\n0f 11 47 28\nc3\n'
p803
S'.text:0000000000403da0\n.text:0000000000403da5\n.text:0000000000403dad\n.text:0000000000403daf\n.text:0000000000403db4\n.text:0000000000403db6\n.text:0000000000403dbd\n.text:0000000000403dc3\n.text:0000000000403dc7\n.text:0000000000403dcb\n.text:0000000000403dcf\n.text:0000000000403dd5\n.text:0000000000403ddc\n.text:0000000000403de6\n.text:0000000000403de9\n.text:0000000000403dec\n.text:0000000000403def\n.text:0000000000403df2\n.text:0000000000403df5\n.text:0000000000403df9\n.text:0000000000403dfd\n.text:0000000000403e00\n.text:0000000000403e04\n.text:0000000000403e07\n.text:0000000000403e0a\n.text:0000000000403e0e\n.text:0000000000403e11\n.text:0000000000403e14\n.text:0000000000403e17\n.text:0000000000403e1a\n.text:0000000000403e1e\n.text:0000000000403e22\n.text:0000000000403e25\n.text:0000000000403e29\n.text:0000000000403e2c\n.text:0000000000403e30\n.text:0000000000403e3a\n.text:0000000000403e3d\n.text:0000000000403e40\n.text:0000000000403e43\n.text:0000000000403e47\n.text:0000000000403e4b\n.text:0000000000403e4e\n.text:0000000000403e52\n.text:0000000000403e56\n.text:0000000000403e5a\n.text:0000000000403e5b\n.text:0000000000403e62\n.text:0000000000403e66\n.text:0000000000403e68\n.text:0000000000403e6c\n.text:0000000000403e6e\n.text:0000000000403e70\n.text:0000000000403e7a\n.text:0000000000403e7d\n.text:0000000000403e80\n.text:0000000000403e83\n.text:0000000000403e86\n.text:0000000000403e8a\n.text:0000000000403e8e\n.text:0000000000403e91\n.text:0000000000403e95\n.text:0000000000403e99\n.text:0000000000403e9c\n.text:0000000000403ea0\n.text:0000000000403ea3\n.text:0000000000403ea7\n.text:0000000000403eae\n.text:0000000000403eaf\n.text:0000000000403eb7\n.text:0000000000403eb9\n.text:0000000000403ebe\n.text:0000000000403ec4\n.text:0000000000403ec8\n.text:0000000000403ecc\n.text:0000000000403ecf\n.text:0000000000403ed3\n'
p804
tp805
sS'fclose'
p806
(S'\n__stdcall fclose(FILE * __stream)\n'
p807
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_0060e098)();\u000a  return iVar1;\u000a}\u000a\u000a
p808
S'JMP qword ptr [0x0060e098]\n'
p809
S'ff 25 52 c7 20 00\n'
p810
S'.plt:0000000000401940\n'
p811
tp812
sS'__ctype_get_mb_cur_max'
p813
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p814
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0060e0b0)();\u000a  return sVar1;\u000a}\u000a\u000a
p815
S'JMP qword ptr [0x0060e0b0]\n'
p816
S'ff 25 3a c7 20 00\n'
p817
S'.plt:0000000000401970\n'
p818
tp819
sS'lstat'
p820
(S'\n__stdcall lstat(char * __file, stat * __buf)\n'
p821
V\u000aint lstat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___lxstat_0060e0c0)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p822
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00401990\n'
p823
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 f0 87 ff ff\n'
p824
S'.text:0000000000409190\n.text:0000000000409193\n.text:0000000000409196\n.text:000000000040919b\n'
p825
tp826
sS'quotearg_n_style'
p827
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p828
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p829
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x004061e0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00405fb0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p830
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p831
S'.text:00000000004061a0\n.text:00000000004061a1\n.text:00000000004061a3\n.text:00000000004061a4\n.text:00000000004061a8\n.text:00000000004061ab\n.text:00000000004061ad\n.text:00000000004061b2\n.text:00000000004061b5\n.text:00000000004061ba\n.text:00000000004061c1\n.text:00000000004061c3\n.text:00000000004061c6\n.text:00000000004061c9\n.text:00000000004061ce\n.text:00000000004061d2\n.text:00000000004061d3\n.text:00000000004061d5\n.text:00000000004061d6\n'
p832
tp833
sS'quote_n'
p834
(S'\n__stdcall quote_n(char * arg)\n'
p835
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p836
S'MOV RDX,-0x1\nJMP 0x00406470\n'
p837
S'48 c7 c2 ff ff ff ff\neb d7\n'
p838
S'.text:0000000000406490\n.text:0000000000406497\n'
p839
tp840
sS'quotearg_alloc'
p841
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p842
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p843
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x00405e20\n'
p844
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p845
S'.text:0000000000405e10\n.text:0000000000405e13\n.text:0000000000405e15\n.text:0000000000405e18\n'
p846
tp847
sS'close_stdout_set_file_name'
p848
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p849
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p850
S'MOV qword ptr [0x0060e3a8],RDI\nRET\n'
p851
S'48 89 3d 91 b7 20 00\nc3\n'
p852
S'.text:0000000000402c10\n.text:0000000000402c17\n'
p853
tp854
sS'time'
p855
(S'\n__stdcall time(time_t * __timer)\n'
p856
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atime_t time(time_t *__timer)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = (*(code *)PTR_time_0060e190)();\u000a  return tVar1;\u000a}\u000a\u000a
p857
S'JMP qword ptr [0x0060e190]\n'
p858
S'ff 25 5a c6 20 00\n'
p859
S'.plt:0000000000401b30\n'
p860
tp861
sS'__libc_csu_init'
p862
(S'\n__stdcall __libc_csu_init()\n'
p863
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p864
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x60de08]\nPUSH RBP\nLEA RBP,[0x60de10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401818\nTEST RBP,RBP\nJZ 0x00409116\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00409100\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p865
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 36 4d 20 00\n55\n48 8d 2d 36 4d 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 27 87 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p866
S'.text:00000000004090c0\n.text:00000000004090c2\n.text:00000000004090c4\n.text:00000000004090c7\n.text:00000000004090c9\n.text:00000000004090cb\n.text:00000000004090d2\n.text:00000000004090d3\n.text:00000000004090da\n.text:00000000004090db\n.text:00000000004090de\n.text:00000000004090e1\n.text:00000000004090e4\n.text:00000000004090e8\n.text:00000000004090ec\n.text:00000000004090f1\n.text:00000000004090f4\n.text:00000000004090f6\n.text:00000000004090f8\n.text:0000000000409100\n.text:0000000000409103\n.text:0000000000409106\n.text:0000000000409109\n.text:000000000040910d\n.text:0000000000409111\n.text:0000000000409114\n.text:0000000000409116\n.text:000000000040911a\n.text:000000000040911b\n.text:000000000040911c\n.text:000000000040911e\n.text:0000000000409120\n.text:0000000000409122\n.text:0000000000409124\n'
p867
tp868
sS'FUN_00401830'
p869
(S'\n__stdcall FUN_00401830()\n'
p870
V\u000avoid FUN_00401830(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_0060e010)();\u000a  return;\u000a}\u000a\u000a
p871
S'PUSH qword ptr [0x0060e008]\nJMP qword ptr [0x0060e010]\n'
p872
S'ff 35 d2 c7 20 00\nff 25 d4 c7 20 00\n'
p873
S'.plt:0000000000401830\n.plt:0000000000401836\n'
p874
tp875
sS'argmatch_to_argument'
p876
(S'\n__stdcall argmatch_to_argument(char * value, char * * arglist, char * vallist, size_t valsize)\n'
p877
V\u000achar * argmatch_to_argument(char *value,char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  \u000a  pcVar2 = *arglist;\u000a  if (pcVar2 != (char *)0x0) {\u000a    arglist = arglist + 1;\u000a    do {\u000a      iVar1 = memcmp(value,vallist,valsize);\u000a      if (iVar1 == 0) {\u000a        return pcVar2;\u000a      }\u000a      pcVar2 = *arglist;\u000a      arglist = arglist + 1;\u000a      vallist = vallist + valsize;\u000a    } while (pcVar2 != (char *)0x0);\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p878
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV R14,RCX\nMOV R12,RDX\nMOV RBX,RSI\nMOV R13,RDI\nMOV R15,qword ptr [RBX]\nTEST R15,R15\nJZ 0x00402bf1\nADD RBX,0x8\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R14\nCALL 0x00401ab0\nTEST EAX,EAX\nJZ 0x00402bf4\nMOV R15,qword ptr [RBX]\nADD RBX,0x8\nADD R12,R14\nTEST R15,R15\nJNZ 0x00402bd0\nXOR R15D,R15D\nMOV RAX,R15\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p879
S'41 57\n41 56\n41 55\n41 54\n53\n49 89 ce\n49 89 d4\n48 89 f3\n49 89 fd\n4c 8b 3b\n4d 85 ff\n74 34\n48 83 c3 08\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ef\n4c 89 e6\n4c 89 f2\ne8 d2 ee ff ff\n85 c0\n74 12\n4c 8b 3b\n48 83 c3 08\n4d 01 f4\n4d 85 ff\n75 df\n45 31 ff\n4c 89 f8\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p880
S'.text:0000000000402ba0\n.text:0000000000402ba2\n.text:0000000000402ba4\n.text:0000000000402ba6\n.text:0000000000402ba8\n.text:0000000000402ba9\n.text:0000000000402bac\n.text:0000000000402baf\n.text:0000000000402bb2\n.text:0000000000402bb5\n.text:0000000000402bb8\n.text:0000000000402bbb\n.text:0000000000402bbd\n.text:0000000000402bc1\n.text:0000000000402bd0\n.text:0000000000402bd3\n.text:0000000000402bd6\n.text:0000000000402bd9\n.text:0000000000402bde\n.text:0000000000402be0\n.text:0000000000402be2\n.text:0000000000402be5\n.text:0000000000402be9\n.text:0000000000402bec\n.text:0000000000402bef\n.text:0000000000402bf1\n.text:0000000000402bf4\n.text:0000000000402bf7\n.text:0000000000402bf8\n.text:0000000000402bfa\n.text:0000000000402bfc\n.text:0000000000402bfe\n.text:0000000000402c00\n'
p881
tp882
sS'c_isdigit'
p883
(S'\n__stdcall c_isdigit()\n'
p884
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p885
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p886
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p887
S'.text:0000000000407ba0\n.text:0000000000407ba3\n.text:0000000000407ba6\n.text:0000000000407ba9\n'
p888
tp889
sS'usage'
p890
(S'\n__stdcall usage()\n'
p891
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,"Usage: %s [OPTION]... FILE...\u005cn",5);\u000a    __printf_chk(1,uVar1,program_name,uVar1);\u000a    __s = (char *)dcgettext(0,\u000a                            "Update the access and modification times of each FILE to the current time.\u005cn\u005cnA FILE argument that does not exist is created empty, unless -c or -h\u005cnis supplied.\u005cn\u005cnA FILE argument string of - is handled specially and causes touch to\u005cnchange the times of the file associated with standard output.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_mandatory_arg_note();\u000a    __s = (char *)dcgettext(0,\u000a                            "  -a                     change only the access time\u005cn  -c, --no-create        do not create any files\u005cn  -d, --date=STRING      parse STRING and use it instead of current time\u005cn  -f                     (ignored)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -h, --no-dereference   affect each symbolic link instead of any referenced\u005cn                         file (useful only on systems that can change the\u005cn                         timestamps of a symlink)\u005cn  -m                     change only the modification time\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -r, --reference=FILE   use this file\u005c's times instead of current time\u005cn  -t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time\u005cn      --time=WORD        change the specified time:\u005cn                           WORD is access, atime, or use: equivalent to -a\u005cn                           WORD is modify or mtime: equivalent to -m\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnNote that the -d and -t options accept different time-date formats.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p892
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x00401f56\nXOR EDI,EDI\nMOV ESI,0x4094a0\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nMOV RDX,qword ptr [0x0060e3b8]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401c20\nXOR EDI,EDI\nMOV ESI,0x4094bf\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nCALL 0x00401fb0\nXOR EDI,EDI\nMOV ESI,0x4095e3\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nXOR EDI,EDI\nMOV ESI,0x4096b6\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nXOR EDI,EDI\nMOV ESI,0x4097bb\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nXOR EDI,EDI\nMOV ESI,0x409912\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nXOR EDI,EDI\nMOV ESI,0x40993f\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nXOR EDI,EDI\nMOV ESI,0x409975\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nCALL 0x00401ac0\nCALL 0x00401fe0\nMOV EDI,EBX\nCALL 0x00401cb0\nCALL 0x00401f70\nMOV EDI,EBX\nCALL 0x00401cb0\n'
p893
S'53\n89 fb\n85 db\n0f 85 1b 01 00 00\n31 ff\nbe a0 94 40 00\nba 05 00 00 00\ne8 14 fb ff ff\n48 89 c1\n48 8b 15 62 c5 20 00\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 bb fd ff ff\n31 ff\nbe bf 94 40 00\nba 05 00 00 00\ne8 ea fa ff ff\n48 8b 35 ab c4 20 00\n48 89 c7\ne8 3b fc ff ff\ne8 26 01 00 00\n31 ff\nbe e3 95 40 00\nba 05 00 00 00\ne8 c5 fa ff ff\n48 8b 35 86 c4 20 00\n48 89 c7\ne8 16 fc ff ff\n31 ff\nbe b6 96 40 00\nba 05 00 00 00\ne8 a5 fa ff ff\n48 8b 35 66 c4 20 00\n48 89 c7\ne8 f6 fb ff ff\n31 ff\nbe bb 97 40 00\nba 05 00 00 00\ne8 85 fa ff ff\n48 8b 35 46 c4 20 00\n48 89 c7\ne8 d6 fb ff ff\n31 ff\nbe 12 99 40 00\nba 05 00 00 00\ne8 65 fa ff ff\n48 8b 35 26 c4 20 00\n48 89 c7\ne8 b6 fb ff ff\n31 ff\nbe 3f 99 40 00\nba 05 00 00 00\ne8 45 fa ff ff\n48 8b 35 06 c4 20 00\n48 89 c7\ne8 96 fb ff ff\n31 ff\nbe 75 99 40 00\nba 05 00 00 00\ne8 25 fa ff ff\n48 8b 35 e6 c3 20 00\n48 89 c7\ne8 76 fb ff ff\ne8 91 00 00 00\n89 df\ne8 5a fd ff ff\ne8 15 00 00 00\n89 df\ne8 4e fd ff ff\n'
p894
S'.text:0000000000401e30\n.text:0000000000401e31\n.text:0000000000401e33\n.text:0000000000401e35\n.text:0000000000401e3b\n.text:0000000000401e3d\n.text:0000000000401e42\n.text:0000000000401e47\n.text:0000000000401e4c\n.text:0000000000401e4f\n.text:0000000000401e56\n.text:0000000000401e5b\n.text:0000000000401e5d\n.text:0000000000401e60\n.text:0000000000401e65\n.text:0000000000401e67\n.text:0000000000401e6c\n.text:0000000000401e71\n.text:0000000000401e76\n.text:0000000000401e7d\n.text:0000000000401e80\n.text:0000000000401e85\n.text:0000000000401e8a\n.text:0000000000401e8c\n.text:0000000000401e91\n.text:0000000000401e96\n.text:0000000000401e9b\n.text:0000000000401ea2\n.text:0000000000401ea5\n.text:0000000000401eaa\n.text:0000000000401eac\n.text:0000000000401eb1\n.text:0000000000401eb6\n.text:0000000000401ebb\n.text:0000000000401ec2\n.text:0000000000401ec5\n.text:0000000000401eca\n.text:0000000000401ecc\n.text:0000000000401ed1\n.text:0000000000401ed6\n.text:0000000000401edb\n.text:0000000000401ee2\n.text:0000000000401ee5\n.text:0000000000401eea\n.text:0000000000401eec\n.text:0000000000401ef1\n.text:0000000000401ef6\n.text:0000000000401efb\n.text:0000000000401f02\n.text:0000000000401f05\n.text:0000000000401f0a\n.text:0000000000401f0c\n.text:0000000000401f11\n.text:0000000000401f16\n.text:0000000000401f1b\n.text:0000000000401f22\n.text:0000000000401f25\n.text:0000000000401f2a\n.text:0000000000401f2c\n.text:0000000000401f31\n.text:0000000000401f36\n.text:0000000000401f3b\n.text:0000000000401f42\n.text:0000000000401f45\n.text:0000000000401f4a\n.text:0000000000401f4f\n.text:0000000000401f51\n.text:0000000000401f56\n.text:0000000000401f5b\n.text:0000000000401f5d\n'
p895
tp896
sS'get_stat_ctime_ns'
p897
(S'\n__stdcall get_stat_ctime_ns(stat * st)\n'
p898
V\u000along get_stat_ctime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_ctim).tv_nsec;\u000a}\u000a\u000a
p899
S'MOV RAX,qword ptr [RDI + 0x70]\nRET\n'
p900
S'48 8b 47 70\nc3\n'
p901
S'.text:00000000004068c0\n.text:00000000004068c4\n'
p902
tp903
sS'quoting_options_from_style'
p904
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p905
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p906
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x0040622d\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x00401880\n'
p907
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 4e b6 ff ff\n'
p908
S'.text:00000000004061e0\n.text:00000000004061e4\n.text:00000000004061e7\n.text:00000000004061ec\n.text:00000000004061f1\n.text:00000000004061f5\n.text:00000000004061fd\n.text:0000000000406200\n.text:0000000000406202\n.text:0000000000406204\n.text:0000000000406208\n.text:000000000040620b\n.text:000000000040620f\n.text:0000000000406214\n.text:0000000000406219\n.text:000000000040621d\n.text:0000000000406221\n.text:0000000000406225\n.text:0000000000406228\n.text:000000000040622c\n.text:000000000040622d\n'
p909
tp910
sS'strcpy'
p911
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p912
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_0060e060)();\u000a  return pcVar1;\u000a}\u000a\u000a
p913
S'JMP qword ptr [0x0060e060]\n'
p914
S'ff 25 8a c7 20 00\n'
p915
S'.plt:00000000004018d0\n'
p916
tp917
sS'get_stat_mtime_ns'
p918
(S'\n__stdcall get_stat_mtime_ns(stat * st)\n'
p919
V\u000along get_stat_mtime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_mtim).tv_nsec;\u000a}\u000a\u000a
p920
S'MOV RAX,qword ptr [RDI + 0x60]\nRET\n'
p921
S'48 8b 47 60\nc3\n'
p922
S'.text:00000000004068d0\n.text:00000000004068d4\n'
p923
tp924
sS'get_stat_atime_ns'
p925
(S'\n__stdcall get_stat_atime_ns(stat * st)\n'
p926
V\u000along get_stat_atime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_atim).tv_nsec;\u000a}\u000a\u000a
p927
S'MOV RAX,qword ptr [RDI + 0x50]\nRET\n'
p928
S'48 8b 47 50\nc3\n'
p929
S'.text:00000000004068b0\n.text:00000000004068b4\n'
p930
tp931
sS'c_isgraph'
p932
(S'\n__stdcall c_isgraph()\n'
p933
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p934
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p935
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p936
S'.text:0000000000407bb0\n.text:0000000000407bb3\n.text:0000000000407bb6\n.text:0000000000407bb9\n'
p937
tp938
sS'quotearg_buffer_restyled'
p939
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p940
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_0040525c_caseD_7;\u000a  case 2:\u000a    goto switchD_0040525c_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_0040525c_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_0040525c_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_0040525c_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_0040525c_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_0040525c_caseD_7;\u000aswitchD_0040525c_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_0040525c_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_0040525c_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_00405d20;\u000aLAB_00405440:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_00405d29:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_00405d38:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_0040544b:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_0040548f:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_0040548f;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_00405d38;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_00405c65;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x00405b70;\u000a    }\u000a    goto LAB_00405d38;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_00405c9a;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_00405d38;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_00405cc9;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00405788;\u000a  case '\u005ca':\u000a    goto joined_r0x00405678;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x00405678;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_004054a6_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x00405678;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x00405678;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_004054a6_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x00405678:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_00405bde;\u000a    }\u000a    goto LAB_00405d38;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_00405d38;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_00405d38;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_00405d38;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_00405d38;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_00405d38;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_004054a6_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00405c36;\u000a      goto joined_r0x00405c28;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00405731:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00405c28;\u000a      goto LAB_00405c36;\u000a    }\u000a    goto LAB_00405d38;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_00405d38;\u000a  }\u000a  goto joined_r0x00405b70;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_00405c9a:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_00405cc9;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_00405cc9:\u000a  if (1 < uVar10) {\u000aLAB_004057a6:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_00405862;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00405731;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_00405862:\u000a        if (bVar6 != 0) goto LAB_00405d38;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00405788:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_004057a6;\u000ajoined_r0x00405b70:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x00405b70:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_00405b97;\u000aLAB_00405bd0:\u000a    if (bVar22) goto LAB_00405bd5;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_00405bd0;\u000aLAB_00405b97:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_00405bd5:\u000a      if (bVar6 != 0) goto LAB_00405d38;\u000aLAB_00405bde:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00405c28;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00405c36:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00405c28:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_00405c65:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_00405440;\u000aLAB_00405d20:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_00405d29;\u000a  goto LAB_0040544b;\u000a}\u000a\u000a
p941
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401970\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00405e05\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x40b190 + RAX*0x8]\nMOV EDI,0x40b6b4\nMOV ESI,R15D\nCALL 0x004064b0\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x40bf6c\nMOV ESI,R15D\nCALL 0x004064b0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x004052bd\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x004052c0\nNOP\nCMP R12,RSI\nJNC 0x004052ae\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x004052a0\nJMP 0x004052c0\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401980\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x0040538c\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x0040538c\nMOV ECX,0x40aed1\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x00405386\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x00405327\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x00405354\nTEST RSI,RSI\nJZ 0x00405341\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x40bf6c\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x00405362\nMOV ECX,0x40bf6c\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x0040538c\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x00405ddc\nMOV ECX,0x40aed1\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x00405d20\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x00405d29\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x0040548f\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x0040548a\nCMP R11,-0x1\nJNZ 0x0040548a\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401980\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x004054e0\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x0040573c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x40b1e8 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x00405d38\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x00405b90\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x00405b97\nJMP 0x00405bd0\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x00401ab0\nTEST EAX,EAX\nSETZ AL\nJNZ 0x0040552d\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00405491\nJMP 0x00405d38\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00405491\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x004054bb\nCMP EBX,0x2\nJNZ 0x004054bb\nTEST R13,R13\nJNZ 0x004054bb\nJMP 0x00405d38\nCMP R11,-0x1\nJZ 0x00405913\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00405933\nJMP 0x004054bb\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405944\nTEST R8B,R8B\nJNZ 0x00405d38\nCMP EBX,0x2\nJNZ 0x004055e8\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x004055e8\nCMP R12,RSI\nJNC 0x004055c3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004055d2\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004055e1\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x004055f2\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x00405ab8\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x00405ab8\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x00405ab8\nCMP RCX,RSI\nJNC 0x0040562c\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x0040563b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004054c6\nJMP 0x00405b90\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004054b9\nJMP 0x0040569a\nMOV DL,0x74\nJMP 0x00405682\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004054b9\nJMP 0x0040569a\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004054b9\nJMP 0x0040569a\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x00405d38\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004054b9\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x00405bde\nJMP 0x00405d38\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x004054b9\nTEST R8B,R8B\nJNZ 0x00405d38\nCMP R12,RSI\nJNC 0x004056ca\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004056d9\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004056e8\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x004054b9\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x00405acb\nCMP EBX,0x2\nJNZ 0x004054b9\nTEST R8B,R8B\nJZ 0x004054b9\nJMP 0x00405d38\nCMP EBX,0x2\nJNZ 0x00405964\nTEST R8B,R8B\nJNZ 0x00405d38\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00405c36\nJMP 0x00405c59\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x00405985\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x00401d10\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405b78\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x00405b78\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x00405862\nJMP 0x00405830\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x00405819\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x00405816\nCMP R12,RSI\nJNC 0x004057fb\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x0040580a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x00405850\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x00405850\nTEST BPL,0x1\nJZ 0x004058f3\nCMP R12,RSI\nJNC 0x00405844\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x004058f3\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00405830\nTEST R8B,R8B\nJNZ 0x00405d38\nCMP EBX,0x2\nJNZ 0x004058aa\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x004058aa\nCMP R12,RSI\nJNC 0x00405882\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405891\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004058a0\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x004058b4\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004058cb\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004058e5\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x004057e0\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00405c36\nJMP 0x00405c59\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x004054bb\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x004054bb\nJMP 0x00405d38\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x00405c65\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004054c6\nJMP 0x00405b90\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00405682\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00405c36\nJMP 0x00405c59\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x004059a7\nMOV RDI,R10\nCALL 0x00401980\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x004019d0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00405c7f\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x00405c77\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00405c86\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x00405a6e\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x00405a66\nBT RDI,RDX\nJC 0x00405dd2\nINC RCX\nCMP RCX,R14\nJC 0x00405a50\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x00401cf0\nTEST EAX,EAX\nJNZ 0x00405a83\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x00401ce0\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x004059c5\nJMP 0x00405cc9\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004054c6\nJMP 0x00405b90\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x004054b9\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x004054b9\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x004054b9\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x004054bb\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00405d02\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x00405d38\nCMP R12,RSI\nJNC 0x00405b2e\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x00405b41\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405b50\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x00405b5f\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004054c6\nJMP 0x00405b90\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004054c6\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x00405bd0\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x00405bd5\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00405c30\nJMP 0x00405bd5\nTEST BPL,BPL\nJZ 0x00405c30\nTEST R8B,R8B\nJNZ 0x00405d38\nCMP EBX,0x2\nJNZ 0x00405c18\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00405c18\nCMP R12,RSI\nJNC 0x00405bf3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405c02\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405c11\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00405c22\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x00405c62\nJMP 0x00405c5e\nTEST DIL,0x1\nJZ 0x00405c59\nAND AL,0x1\nJNZ 0x00405c59\nCMP R12,RSI\nJNC 0x00405c44\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405c53\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x00405c62\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x00405d20\nJMP 0x00405440\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x00405cc4\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x00405cbc\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x00405cf8\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x00405c9a\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00405cc9\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00405788\nJMP 0x004057a6\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00405cc9\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004054c6\nJMP 0x00405b90\nCMP R13,R11\nJNZ 0x0040544b\nTEST R8B,R8B\nJZ 0x00405d92\nCMP EBX,0x2\nJNZ 0x00405d92\nTEST R12,R12\nJNZ 0x00405d92\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x004051d0\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x00405dc6\nTEST R8B,R8B\nJNZ 0x00405dc6\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x00405dc6\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x00405db9\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x00405db0\nCMP R12,RSI\nJNC 0x00405d7d\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x00405d7d\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x00405d38\nTEST RSI,RSI\nJZ 0x00405de9\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x40aed1\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x0040538c\nCALL 0x00401880\n'
p942
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 72 c7 ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 90 b1 40 00\nbf b4 b6 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf 6c bf 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 b3 c6 ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 d1 ae 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 6c bf 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 6c bf 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 d1 ae 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 13 c5 ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd e8 b1 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 b7 c5 ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 b7 c5 ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 e1 bf ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 e3 bf ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 79 c2 ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 42 c2 ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 d1 ae 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 76 ba ff ff\n'
p943
S'.text:00000000004051d0\n.text:00000000004051d1\n.text:00000000004051d3\n.text:00000000004051d5\n.text:00000000004051d7\n.text:00000000004051d9\n.text:00000000004051da\n.text:00000000004051e1\n.text:00000000004051e4\n.text:00000000004051e7\n.text:00000000004051ea\n.text:00000000004051ef\n.text:00000000004051f4\n.text:00000000004051f9\n.text:00000000004051fe\n.text:0000000000405206\n.text:000000000040520a\n.text:0000000000405210\n.text:0000000000405218\n.text:000000000040521d\n.text:0000000000405225\n.text:000000000040522a\n.text:000000000040522e\n.text:0000000000405230\n.text:0000000000405233\n.text:0000000000405236\n.text:0000000000405239\n.text:000000000040523e\n.text:0000000000405241\n.text:0000000000405244\n.text:0000000000405247\n.text:000000000040524a\n.text:000000000040524c\n.text:000000000040524f\n.text:0000000000405254\n.text:0000000000405257\n.text:000000000040525c\n.text:0000000000405263\n.text:0000000000405268\n.text:000000000040526b\n.text:0000000000405270\n.text:0000000000405275\n.text:000000000040527a\n.text:000000000040527d\n.text:0000000000405282\n.text:0000000000405287\n.text:000000000040528c\n.text:000000000040528e\n.text:0000000000405290\n.text:0000000000405295\n.text:0000000000405297\n.text:000000000040529a\n.text:000000000040529c\n.text:000000000040529e\n.text:00000000004052a0\n.text:00000000004052a3\n.text:00000000004052a5\n.text:00000000004052aa\n.text:00000000004052ae\n.text:00000000004052b4\n.text:00000000004052b7\n.text:00000000004052b9\n.text:00000000004052bb\n.text:00000000004052bd\n.text:00000000004052c0\n.text:00000000004052c5\n.text:00000000004052c8\n.text:00000000004052cd\n.text:00000000004052d2\n.text:00000000004052d5\n.text:00000000004052d8\n.text:00000000004052db\n.text:00000000004052de\n.text:00000000004052e3\n.text:00000000004052e6\n.text:00000000004052e9\n.text:00000000004052ee\n.text:00000000004052f1\n.text:00000000004052f3\n.text:00000000004052f6\n.text:00000000004052f8\n.text:00000000004052fa\n.text:00000000004052fd\n.text:0000000000405302\n.text:0000000000405307\n.text:000000000040530c\n.text:000000000040530f\n.text:0000000000405315\n.text:0000000000405317\n.text:000000000040531a\n.text:000000000040531d\n.text:0000000000405320\n.text:0000000000405322\n.text:0000000000405324\n.text:0000000000405327\n.text:000000000040532a\n.text:000000000040532f\n.text:0000000000405332\n.text:0000000000405334\n.text:0000000000405337\n.text:0000000000405339\n.text:000000000040533e\n.text:0000000000405341\n.text:0000000000405346\n.text:000000000040534c\n.text:0000000000405352\n.text:0000000000405354\n.text:0000000000405359\n.text:000000000040535f\n.text:0000000000405362\n.text:0000000000405365\n.text:0000000000405368\n.text:000000000040536a\n.text:000000000040536f\n.text:0000000000405372\n.text:0000000000405378\n.text:000000000040537d\n.text:0000000000405383\n.text:0000000000405386\n.text:0000000000405389\n.text:000000000040538c\n.text:0000000000405394\n.text:0000000000405396\n.text:0000000000405398\n.text:000000000040539b\n.text:000000000040539f\n.text:00000000004053a1\n.text:00000000004053a4\n.text:00000000004053a8\n.text:00000000004053aa\n.text:00000000004053ad\n.text:00000000004053b0\n.text:00000000004053b3\n.text:00000000004053b5\n.text:00000000004053b9\n.text:00000000004053bb\n.text:00000000004053bf\n.text:00000000004053c2\n.text:00000000004053c5\n.text:00000000004053c8\n.text:00000000004053ca\n.text:00000000004053ce\n.text:00000000004053d7\n.text:00000000004053da\n.text:00000000004053dc\n.text:00000000004053e0\n.text:00000000004053e2\n.text:00000000004053e6\n.text:00000000004053e8\n.text:00000000004053eb\n.text:00000000004053ef\n.text:00000000004053f1\n.text:00000000004053f4\n.text:00000000004053f8\n.text:00000000004053fd\n.text:0000000000405400\n.text:0000000000405404\n.text:000000000040540c\n.text:000000000040540f\n.text:0000000000405412\n.text:0000000000405414\n.text:0000000000405418\n.text:000000000040541b\n.text:000000000040541d\n.text:0000000000405422\n.text:0000000000405426\n.text:000000000040542b\n.text:0000000000405430\n.text:0000000000405434\n.text:000000000040543a\n.text:0000000000405440\n.text:0000000000405445\n.text:000000000040544b\n.text:0000000000405450\n.text:0000000000405452\n.text:0000000000405457\n.text:000000000040545b\n.text:000000000040545d\n.text:0000000000405461\n.text:0000000000405463\n.text:0000000000405465\n.text:0000000000405468\n.text:000000000040546d\n.text:000000000040546f\n.text:0000000000405474\n.text:0000000000405479\n.text:000000000040547d\n.text:0000000000405482\n.text:0000000000405487\n.text:000000000040548a\n.text:000000000040548d\n.text:000000000040548f\n.text:0000000000405491\n.text:0000000000405496\n.text:000000000040549a\n.text:00000000004054a0\n.text:00000000004054a2\n.text:00000000004054a4\n.text:00000000004054a6\n.text:00000000004054ae\n.text:00000000004054b3\n.text:00000000004054b9\n.text:00000000004054bb\n.text:00000000004054c0\n.text:00000000004054c6\n.text:00000000004054cf\n.text:00000000004054d5\n.text:00000000004054e0\n.text:00000000004054e2\n.text:00000000004054e5\n.text:00000000004054e9\n.text:00000000004054f1\n.text:00000000004054f4\n.text:00000000004054f9\n.text:00000000004054fb\n.text:00000000004054fe\n.text:0000000000405500\n.text:0000000000405505\n.text:0000000000405508\n.text:000000000040550d\n.text:0000000000405510\n.text:0000000000405515\n.text:0000000000405519\n.text:000000000040551e\n.text:0000000000405520\n.text:0000000000405522\n.text:0000000000405528\n.text:000000000040552d\n.text:0000000000405532\n.text:0000000000405535\n.text:000000000040553a\n.text:000000000040553e\n.text:0000000000405543\n.text:0000000000405548\n.text:000000000040554a\n.text:000000000040554c\n.text:0000000000405551\n.text:0000000000405553\n.text:0000000000405556\n.text:000000000040555c\n.text:000000000040555f\n.text:0000000000405565\n.text:0000000000405568\n.text:000000000040556e\n.text:0000000000405573\n.text:0000000000405577\n.text:000000000040557d\n.text:0000000000405580\n.text:0000000000405583\n.text:0000000000405587\n.text:000000000040558a\n.text:000000000040558c\n.text:000000000040558f\n.text:0000000000405595\n.text:000000000040559a\n.text:000000000040559f\n.text:00000000004055a5\n.text:00000000004055a8\n.text:00000000004055ae\n.text:00000000004055b1\n.text:00000000004055b3\n.text:00000000004055b5\n.text:00000000004055b7\n.text:00000000004055b9\n.text:00000000004055bc\n.text:00000000004055be\n.text:00000000004055c3\n.text:00000000004055c8\n.text:00000000004055cb\n.text:00000000004055cd\n.text:00000000004055d2\n.text:00000000004055d7\n.text:00000000004055da\n.text:00000000004055dc\n.text:00000000004055e1\n.text:00000000004055e5\n.text:00000000004055e8\n.text:00000000004055eb\n.text:00000000004055ed\n.text:00000000004055f2\n.text:00000000004055f7\n.text:00000000004055f9\n.text:00000000004055fc\n.text:00000000004055ff\n.text:0000000000405605\n.text:0000000000405609\n.text:000000000040560c\n.text:0000000000405612\n.text:0000000000405616\n.text:0000000000405619\n.text:000000000040561c\n.text:0000000000405622\n.text:0000000000405625\n.text:0000000000405627\n.text:000000000040562c\n.text:0000000000405631\n.text:0000000000405634\n.text:0000000000405636\n.text:000000000040563b\n.text:000000000040563f\n.text:0000000000405644\n.text:000000000040564a\n.text:000000000040564f\n.text:0000000000405651\n.text:0000000000405656\n.text:000000000040565c\n.text:000000000040565e\n.text:0000000000405660\n.text:0000000000405662\n.text:0000000000405664\n.text:0000000000405669\n.text:000000000040566f\n.text:0000000000405671\n.text:0000000000405673\n.text:0000000000405678\n.text:000000000040567e\n.text:0000000000405680\n.text:0000000000405682\n.text:0000000000405687\n.text:0000000000405689\n.text:000000000040568f\n.text:0000000000405694\n.text:000000000040569a\n.text:000000000040569d\n.text:00000000004056a0\n.text:00000000004056a6\n.text:00000000004056ab\n.text:00000000004056ae\n.text:00000000004056b1\n.text:00000000004056b7\n.text:00000000004056ba\n.text:00000000004056c0\n.text:00000000004056c3\n.text:00000000004056c5\n.text:00000000004056ca\n.text:00000000004056cf\n.text:00000000004056d2\n.text:00000000004056d4\n.text:00000000004056d9\n.text:00000000004056de\n.text:00000000004056e1\n.text:00000000004056e3\n.text:00000000004056e8\n.text:00000000004056ec\n.text:00000000004056ee\n.text:00000000004056f3\n.text:00000000004056f6\n.text:00000000004056f9\n.text:00000000004056ff\n.text:0000000000405702\n.text:0000000000405708\n.text:000000000040570b\n.text:0000000000405711\n.text:0000000000405716\n.text:0000000000405719\n.text:000000000040571f\n.text:0000000000405722\n.text:0000000000405728\n.text:000000000040572b\n.text:000000000040572d\n.text:0000000000405731\n.text:0000000000405737\n.text:000000000040573c\n.text:0000000000405740\n.text:0000000000405749\n.text:000000000040574f\n.text:0000000000405754\n.text:0000000000405759\n.text:000000000040575e\n.text:0000000000405761\n.text:0000000000405766\n.text:0000000000405769\n.text:000000000040576c\n.text:0000000000405771\n.text:0000000000405776\n.text:000000000040577a\n.text:000000000040577f\n.text:0000000000405784\n.text:0000000000405788\n.text:000000000040578a\n.text:000000000040578f\n.text:0000000000405795\n.text:0000000000405798\n.text:000000000040579a\n.text:000000000040579d\n.text:00000000004057a0\n.text:00000000004057a6\n.text:00000000004057ab\n.text:00000000004057ae\n.text:00000000004057b1\n.text:00000000004057b4\n.text:00000000004057b7\n.text:00000000004057b9\n.text:00000000004057bd\n.text:00000000004057bf\n.text:00000000004057c4\n.text:00000000004057c9\n.text:00000000004057cf\n.text:00000000004057e0\n.text:00000000004057e5\n.text:00000000004057e7\n.text:00000000004057ea\n.text:00000000004057ec\n.text:00000000004057ef\n.text:00000000004057f1\n.text:00000000004057f4\n.text:00000000004057f6\n.text:00000000004057fb\n.text:0000000000405800\n.text:0000000000405803\n.text:0000000000405805\n.text:000000000040580a\n.text:000000000040580e\n.text:0000000000405816\n.text:0000000000405819\n.text:000000000040581c\n.text:000000000040581e\n.text:0000000000405822\n.text:0000000000405830\n.text:0000000000405834\n.text:000000000040583a\n.text:000000000040583d\n.text:000000000040583f\n.text:0000000000405844\n.text:0000000000405847\n.text:0000000000405849\n.text:0000000000405850\n.text:0000000000405853\n.text:0000000000405858\n.text:000000000040585b\n.text:0000000000405860\n.text:0000000000405862\n.text:0000000000405865\n.text:000000000040586b\n.text:000000000040586e\n.text:0000000000405870\n.text:0000000000405874\n.text:0000000000405876\n.text:0000000000405878\n.text:000000000040587b\n.text:000000000040587d\n.text:0000000000405882\n.text:0000000000405887\n.text:000000000040588a\n.text:000000000040588c\n.text:0000000000405891\n.text:0000000000405896\n.text:0000000000405899\n.text:000000000040589b\n.text:00000000004058a0\n.text:00000000004058a4\n.text:00000000004058a6\n.text:00000000004058aa\n.text:00000000004058ad\n.text:00000000004058af\n.text:00000000004058b4\n.text:00000000004058b9\n.text:00000000004058bc\n.text:00000000004058be\n.text:00000000004058c1\n.text:00000000004058c4\n.text:00000000004058c7\n.text:00000000004058cb\n.text:00000000004058d0\n.text:00000000004058d3\n.text:00000000004058d5\n.text:00000000004058d8\n.text:00000000004058db\n.text:00000000004058de\n.text:00000000004058e1\n.text:00000000004058e5\n.text:00000000004058e9\n.text:00000000004058ed\n.text:00000000004058f1\n.text:00000000004058f3\n.text:00000000004058f7\n.text:00000000004058fa\n.text:0000000000405900\n.text:0000000000405904\n.text:0000000000405908\n.text:000000000040590e\n.text:0000000000405913\n.text:0000000000405916\n.text:0000000000405919\n.text:000000000040591e\n.text:0000000000405921\n.text:0000000000405923\n.text:0000000000405926\n.text:000000000040592d\n.text:0000000000405933\n.text:0000000000405935\n.text:0000000000405939\n.text:000000000040593f\n.text:0000000000405944\n.text:0000000000405949\n.text:000000000040594f\n.text:0000000000405952\n.text:0000000000405954\n.text:0000000000405959\n.text:000000000040595f\n.text:0000000000405964\n.text:0000000000405966\n.text:000000000040596b\n.text:0000000000405971\n.text:0000000000405973\n.text:0000000000405976\n.text:000000000040597a\n.text:0000000000405980\n.text:0000000000405985\n.text:0000000000405991\n.text:0000000000405995\n.text:0000000000405997\n.text:000000000040599a\n.text:000000000040599f\n.text:00000000004059a4\n.text:00000000004059a7\n.text:00000000004059ab\n.text:00000000004059b0\n.text:00000000004059b2\n.text:00000000004059b6\n.text:00000000004059b8\n.text:00000000004059c0\n.text:00000000004059c5\n.text:00000000004059ca\n.text:00000000004059ce\n.text:00000000004059d2\n.text:00000000004059da\n.text:00000000004059dd\n.text:00000000004059e2\n.text:00000000004059e5\n.text:00000000004059e8\n.text:00000000004059ed\n.text:00000000004059f0\n.text:00000000004059f3\n.text:00000000004059f9\n.text:00000000004059fd\n.text:0000000000405a07\n.text:0000000000405a0d\n.text:0000000000405a11\n.text:0000000000405a16\n.text:0000000000405a1c\n.text:0000000000405a20\n.text:0000000000405a23\n.text:0000000000405a27\n.text:0000000000405a29\n.text:0000000000405a2e\n.text:0000000000405a33\n.text:0000000000405a37\n.text:0000000000405a39\n.text:0000000000405a3e\n.text:0000000000405a43\n.text:0000000000405a47\n.text:0000000000405a4c\n.text:0000000000405a50\n.text:0000000000405a54\n.text:0000000000405a57\n.text:0000000000405a5a\n.text:0000000000405a5c\n.text:0000000000405a60\n.text:0000000000405a66\n.text:0000000000405a69\n.text:0000000000405a6c\n.text:0000000000405a6e\n.text:0000000000405a72\n.text:0000000000405a77\n.text:0000000000405a79\n.text:0000000000405a7b\n.text:0000000000405a83\n.text:0000000000405a88\n.text:0000000000405a8b\n.text:0000000000405a93\n.text:0000000000405a96\n.text:0000000000405a99\n.text:0000000000405a9e\n.text:0000000000405aa1\n.text:0000000000405aa3\n.text:0000000000405aa8\n.text:0000000000405aad\n.text:0000000000405ab3\n.text:0000000000405ab8\n.text:0000000000405abb\n.text:0000000000405ac0\n.text:0000000000405ac6\n.text:0000000000405acb\n.text:0000000000405ad0\n.text:0000000000405ad6\n.text:0000000000405ada\n.text:0000000000405add\n.text:0000000000405ae3\n.text:0000000000405ae9\n.text:0000000000405aef\n.text:0000000000405af4\n.text:0000000000405af6\n.text:0000000000405af9\n.text:0000000000405aff\n.text:0000000000405b03\n.text:0000000000405b05\n.text:0000000000405b0f\n.text:0000000000405b13\n.text:0000000000405b19\n.text:0000000000405b1c\n.text:0000000000405b1e\n.text:0000000000405b24\n.text:0000000000405b27\n.text:0000000000405b29\n.text:0000000000405b2e\n.text:0000000000405b33\n.text:0000000000405b36\n.text:0000000000405b3a\n.text:0000000000405b3c\n.text:0000000000405b41\n.text:0000000000405b46\n.text:0000000000405b49\n.text:0000000000405b4b\n.text:0000000000405b50\n.text:0000000000405b55\n.text:0000000000405b58\n.text:0000000000405b5a\n.text:0000000000405b5f\n.text:0000000000405b63\n.text:0000000000405b65\n.text:0000000000405b68\n.text:0000000000405b6b\n.text:0000000000405b70\n.text:0000000000405b76\n.text:0000000000405b78\n.text:0000000000405b7d\n.text:0000000000405b82\n.text:0000000000405b88\n.text:0000000000405b90\n.text:0000000000405b95\n.text:0000000000405b97\n.text:0000000000405b9c\n.text:0000000000405b9f\n.text:0000000000405ba1\n.text:0000000000405ba4\n.text:0000000000405ba6\n.text:0000000000405ba9\n.text:0000000000405bac\n.text:0000000000405baf\n.text:0000000000405bb1\n.text:0000000000405bb9\n.text:0000000000405bbc\n.text:0000000000405bbe\n.text:0000000000405bc0\n.text:0000000000405bd0\n.text:0000000000405bd3\n.text:0000000000405bd5\n.text:0000000000405bd8\n.text:0000000000405bde\n.text:0000000000405be1\n.text:0000000000405be3\n.text:0000000000405be5\n.text:0000000000405be7\n.text:0000000000405be9\n.text:0000000000405bec\n.text:0000000000405bee\n.text:0000000000405bf3\n.text:0000000000405bf8\n.text:0000000000405bfb\n.text:0000000000405bfd\n.text:0000000000405c02\n.text:0000000000405c07\n.text:0000000000405c0a\n.text:0000000000405c0c\n.text:0000000000405c11\n.text:0000000000405c15\n.text:0000000000405c18\n.text:0000000000405c1b\n.text:0000000000405c1d\n.text:0000000000405c22\n.text:0000000000405c25\n.text:0000000000405c28\n.text:0000000000405c2a\n.text:0000000000405c30\n.text:0000000000405c34\n.text:0000000000405c36\n.text:0000000000405c38\n.text:0000000000405c3a\n.text:0000000000405c3d\n.text:0000000000405c3f\n.text:0000000000405c44\n.text:0000000000405c49\n.text:0000000000405c4c\n.text:0000000000405c4e\n.text:0000000000405c53\n.text:0000000000405c57\n.text:0000000000405c59\n.text:0000000000405c5c\n.text:0000000000405c5e\n.text:0000000000405c62\n.text:0000000000405c65\n.text:0000000000405c68\n.text:0000000000405c6c\n.text:0000000000405c72\n.text:0000000000405c77\n.text:0000000000405c7f\n.text:0000000000405c84\n.text:0000000000405c86\n.text:0000000000405c8e\n.text:0000000000405c93\n.text:0000000000405c95\n.text:0000000000405c9a\n.text:0000000000405c9f\n.text:0000000000405ca3\n.text:0000000000405ca5\n.text:0000000000405caa\n.text:0000000000405cad\n.text:0000000000405cb0\n.text:0000000000405cb2\n.text:0000000000405cba\n.text:0000000000405cbc\n.text:0000000000405cc4\n.text:0000000000405cc9\n.text:0000000000405ccd\n.text:0000000000405cd2\n.text:0000000000405cd7\n.text:0000000000405cdb\n.text:0000000000405ce0\n.text:0000000000405ce5\n.text:0000000000405ce9\n.text:0000000000405ced\n.text:0000000000405cf3\n.text:0000000000405cf8\n.text:0000000000405d00\n.text:0000000000405d02\n.text:0000000000405d04\n.text:0000000000405d08\n.text:0000000000405d0d\n.text:0000000000405d13\n.text:0000000000405d20\n.text:0000000000405d23\n.text:0000000000405d29\n.text:0000000000405d2c\n.text:0000000000405d2e\n.text:0000000000405d31\n.text:0000000000405d33\n.text:0000000000405d36\n.text:0000000000405d38\n.text:0000000000405d40\n.text:0000000000405d46\n.text:0000000000405d4a\n.text:0000000000405d4d\n.text:0000000000405d51\n.text:0000000000405d56\n.text:0000000000405d5a\n.text:0000000000405d5e\n.text:0000000000405d61\n.text:0000000000405d64\n.text:0000000000405d67\n.text:0000000000405d6b\n.text:0000000000405d6f\n.text:0000000000405d71\n.text:0000000000405d76\n.text:0000000000405d7a\n.text:0000000000405d7d\n.text:0000000000405d80\n.text:0000000000405d87\n.text:0000000000405d88\n.text:0000000000405d8a\n.text:0000000000405d8c\n.text:0000000000405d8e\n.text:0000000000405d90\n.text:0000000000405d91\n.text:0000000000405d92\n.text:0000000000405d9a\n.text:0000000000405d9d\n.text:0000000000405d9f\n.text:0000000000405da2\n.text:0000000000405da4\n.text:0000000000405da6\n.text:0000000000405da8\n.text:0000000000405daa\n.text:0000000000405dad\n.text:0000000000405db0\n.text:0000000000405db3\n.text:0000000000405db5\n.text:0000000000405db9\n.text:0000000000405dbc\n.text:0000000000405dbf\n.text:0000000000405dc2\n.text:0000000000405dc4\n.text:0000000000405dc6\n.text:0000000000405dc9\n.text:0000000000405dcb\n.text:0000000000405dd0\n.text:0000000000405dd2\n.text:0000000000405dd7\n.text:0000000000405ddc\n.text:0000000000405ddf\n.text:0000000000405de1\n.text:0000000000405de6\n.text:0000000000405de9\n.text:0000000000405dee\n.text:0000000000405df1\n.text:0000000000405df7\n.text:0000000000405dfd\n.text:0000000000405e00\n.text:0000000000405e05\n'
p944
tp945
sS'utimens'
p946
(S'\n__stdcall utimens(char * file, timespec * timespec)\n'
p947
V\u000aint utimens(char *file,timespec *timespec)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = fdutimens((char *)0xffffffff,(timespec *)file);\u000a  return iVar1;\u000a}\u000a\u000a
p948
S'MOV RAX,RSI\nMOV RCX,RDI\nMOV EDI,0xffffffff\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00408130\n'
p949
S'48 89 f0\n48 89 f9\nbf ff ff ff ff\n48 89 ce\n48 89 c2\ne9 fa fa ff ff\n'
p950
S'.text:0000000000408620\n.text:0000000000408623\n.text:0000000000408626\n.text:000000000040862b\n.text:000000000040862e\n.text:0000000000408631\n'
p951
tp952
sS'set_quoting_style'
p953
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p954
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p955
S'TEST RDI,RDI\nMOV EAX,0x60e3c0\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p956
S'48 85 ff\nb8 c0 e3 60 00\n48 0f 45 c7\n89 30\nc3\n'
p957
S'.text:00000000004050b0\n.text:00000000004050b3\n.text:00000000004050b8\n.text:00000000004050bc\n.text:00000000004050be\n'
p958
tp959
sS'textdomain'
p960
(S'\n__stdcall textdomain()\n'
p961
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_0060e090)();\u000a  return;\u000a}\u000a\u000a
p962
S'JMP qword ptr [0x0060e090]\n'
p963
S'ff 25 5a c7 20 00\n'
p964
S'.plt:0000000000401930\n'
p965
tp966
sS'xmemdup'
p967
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p968
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p969
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x00406e50\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401b20\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p970
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 6c ab ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p971
S'.text:0000000000406f90\n.text:0000000000406f92\n.text:0000000000406f94\n.text:0000000000406f95\n.text:0000000000406f98\n.text:0000000000406f9b\n.text:0000000000406f9e\n.text:0000000000406fa3\n.text:0000000000406fa6\n.text:0000000000406fa9\n.text:0000000000406fac\n.text:0000000000406faf\n.text:0000000000406fb4\n.text:0000000000406fb7\n.text:0000000000406fb8\n.text:0000000000406fba\n.text:0000000000406fbc\n'
p972
tp973
sS'time_t_avg'
p974
(S'\n__stdcall time_t_avg(time_t a, time_t b)\n'
p975
V\u000atime_t time_t_avg(time_t a,time_t b)\u000a\u000a{\u000a  return (ulong)((uint)a & (uint)b & 1) + (b >> 1) + (a >> 1);\u000a}\u000a\u000a
p976
S'MOV RAX,RDI\nSAR RAX,1\nAND EDI,ESI\nSAR RSI,1\nLEA RAX,[RSI + RAX*0x1]\nAND EDI,0x1\nADD RDI,RAX\nMOV RAX,RDI\nRET\n'
p977
S'48 89 f8\n48 d1 f8\n21 f7\n48 d1 fe\n48 8d 04 06\n83 e7 01\n48 01 c7\n48 89 f8\nc3\n'
p978
S'.text:00000000004077a0\n.text:00000000004077a3\n.text:00000000004077a6\n.text:00000000004077a8\n.text:00000000004077ab\n.text:00000000004077af\n.text:00000000004077b2\n.text:00000000004077b5\n.text:00000000004077b8\n'
p979
tp980
sS'__stpcpy_chk'
p981
(S'\n__stdcall __stpcpy_chk()\n'
p982
V\u000avoid __stpcpy_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___stpcpy_chk_0060e1a0)();\u000a  return;\u000a}\u000a\u000a
p983
S'JMP qword ptr [0x0060e1a0]\n'
p984
S'ff 25 4a c6 20 00\n'
p985
S'.plt:0000000000401b50\n'
p986
tp987
sS'get_quoting_style'
p988
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p989
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p990
S'TEST RDI,RDI\nMOV EAX,0x60e3c0\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p991
S'48 85 ff\nb8 c0 e3 60 00\n48 0f 45 c7\n8b 00\nc3\n'
p992
S'.text:00000000004050a0\n.text:00000000004050a3\n.text:00000000004050a8\n.text:00000000004050ac\n.text:00000000004050ae\n'
p993
tp994
sS'ferror_unlocked'
p995
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p996
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_0060e168)();\u000a  return iVar1;\u000a}\u000a\u000a
p997
S'JMP qword ptr [0x0060e168]\n'
p998
S'ff 25 82 c6 20 00\n'
p999
S'.plt:0000000000401ae0\n'
p1000
tp1001
sS'exit'
p1002
(S'\n__stdcall exit(int __status)\n'
p1003
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_0060e250)();\u000a  return;\u000a}\u000a\u000a
p1004
S'JMP qword ptr [0x0060e250]\n'
p1005
S'ff 25 9a c5 20 00\n'
p1006
S'.plt:0000000000401cb0\n'
p1007
tp1008
sS'locale_charset'
p1009
(S'\n__stdcall locale_charset()\n'
p1010
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_00407d5d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_00407d5d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p1011
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x00401ba0\nTEST RAX,RAX\nMOV R14D,0x40b809\nCMOVNZ R14,RAX\nCALL 0x00407d70\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00407d35\nJMP 0x00407d5d\nMOV RDI,RBX\nCALL 0x00401980\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401980\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x00407d5d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00407d50\nCMP BPL,0x2a\nJNZ 0x00407d10\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00407d10\nMOV RDI,RBX\nCALL 0x00401980\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x40be90\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1012
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 b2 9e ff ff\n48 85 c0\n41 be 09 b8 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 68 9c ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 5a 9c ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 c0 9d ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 28 9c ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 90 be 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p1013
S'.text:0000000000407ce0\n.text:0000000000407ce1\n.text:0000000000407ce3\n.text:0000000000407ce4\n.text:0000000000407ce9\n.text:0000000000407cee\n.text:0000000000407cf1\n.text:0000000000407cf7\n.text:0000000000407cfb\n.text:0000000000407d00\n.text:0000000000407d03\n.text:0000000000407d06\n.text:0000000000407d09\n.text:0000000000407d0b\n.text:0000000000407d10\n.text:0000000000407d13\n.text:0000000000407d18\n.text:0000000000407d1c\n.text:0000000000407d21\n.text:0000000000407d26\n.text:0000000000407d2b\n.text:0000000000407d30\n.text:0000000000407d33\n.text:0000000000407d35\n.text:0000000000407d38\n.text:0000000000407d3b\n.text:0000000000407d40\n.text:0000000000407d42\n.text:0000000000407d44\n.text:0000000000407d48\n.text:0000000000407d4a\n.text:0000000000407d4e\n.text:0000000000407d50\n.text:0000000000407d53\n.text:0000000000407d58\n.text:0000000000407d5d\n.text:0000000000407d61\n.text:0000000000407d66\n.text:0000000000407d6a\n.text:0000000000407d6b\n.text:0000000000407d6d\n.text:0000000000407d6e\n'
p1014
tp1015
sS'set_program_name'
p1016
(S'\n__stdcall set_program_name(char * argv0)\n'
p1017
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p1018
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00405031\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x00401a10\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x0040501b\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x40b17b\nMOV EDX,0x7\nCALL 0x004018a0\nTEST EAX,EAX\nJNZ 0x0040501b\nMOV ESI,0x40b183\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x004018a0\nTEST EAX,EAX\nJNZ 0x00405018\nADD R14,0x3\nMOV qword ptr [0x0060e320],R14\nMOV RBX,R14\nMOV qword ptr [0x0060e3b8],RBX\nMOV qword ptr [0x0060e340],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x0060e360]\nMOV EDI,0x40b143\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x00401cc0\nCALL 0x00401880\n'
p1019
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 47 ca ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 7b b1 40 00\nba 07 00 00 00\ne8 ad c8 ff ff\n85 c0\n75 24\nbe 83 b1 40 00\nba 03 00 00 00\n4c 89 f7\ne8 97 c8 ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 08 93 20 00\n4c 89 f3\n48 89 1d 96 93 20 00\n48 89 1d 17 93 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d 28 93 20 00\nbf 43 b1 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 74 cc ff ff\ne8 2f c8 ff ff\n'
p1020
S'.text:0000000000404fb0\n.text:0000000000404fb2\n.text:0000000000404fb3\n.text:0000000000404fb4\n.text:0000000000404fb7\n.text:0000000000404fba\n.text:0000000000404fbc\n.text:0000000000404fc1\n.text:0000000000404fc4\n.text:0000000000404fc9\n.text:0000000000404fcc\n.text:0000000000404fd0\n.text:0000000000404fd4\n.text:0000000000404fd7\n.text:0000000000404fda\n.text:0000000000404fde\n.text:0000000000404fe0\n.text:0000000000404fe4\n.text:0000000000404fe9\n.text:0000000000404fee\n.text:0000000000404ff3\n.text:0000000000404ff5\n.text:0000000000404ff7\n.text:0000000000404ffc\n.text:0000000000405001\n.text:0000000000405004\n.text:0000000000405009\n.text:000000000040500b\n.text:000000000040500d\n.text:0000000000405011\n.text:0000000000405018\n.text:000000000040501b\n.text:0000000000405022\n.text:0000000000405029\n.text:000000000040502d\n.text:000000000040502e\n.text:0000000000405030\n.text:0000000000405031\n.text:0000000000405038\n.text:000000000040503d\n.text:0000000000405042\n.text:0000000000405047\n.text:000000000040504c\n'
p1021
tp1022
sS'strspn'
p1023
(S'\n__stdcall strspn(char * __s, char * __accept)\n'
p1024
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strspn(char *__s,char *__accept)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strspn_0060e140)();\u000a  return sVar1;\u000a}\u000a\u000a
p1025
S'JMP qword ptr [0x0060e140]\n'
p1026
S'ff 25 aa c6 20 00\n'
p1027
S'.plt:0000000000401a90\n'
p1028
tp1029
sS'quotearg_buffer'
p1030
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p1031
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p1032
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x60e3c0\nCMOVNZ RBP,R8\nCALL 0x00401890\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x004051d0\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1033
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd c0 e3 60 00\n49 0f 45 e8\ne8 18 c7 ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1034
S'.text:0000000000405150\n.text:0000000000405151\n.text:0000000000405153\n.text:0000000000405155\n.text:0000000000405157\n.text:0000000000405159\n.text:000000000040515a\n.text:000000000040515b\n.text:000000000040515e\n.text:0000000000405161\n.text:0000000000405164\n.text:0000000000405167\n.text:000000000040516a\n.text:000000000040516f\n.text:0000000000405173\n.text:0000000000405178\n.text:000000000040517b\n.text:000000000040517d\n.text:0000000000405181\n.text:0000000000405185\n.text:0000000000405189\n.text:000000000040518d\n.text:0000000000405190\n.text:0000000000405193\n.text:0000000000405196\n.text:0000000000405199\n.text:000000000040519c\n.text:000000000040519f\n.text:00000000004051a3\n.text:00000000004051a4\n.text:00000000004051a9\n.text:00000000004051ad\n.text:00000000004051b1\n.text:00000000004051b3\n.text:00000000004051b7\n.text:00000000004051b8\n.text:00000000004051ba\n.text:00000000004051bc\n.text:00000000004051be\n.text:00000000004051c0\n.text:00000000004051c1\n'
p1035
tp1036
sS'cdb_fchdir'
p1037
(S'\n__stdcall cdb_fchdir(cd_buf * cdb)\n'
p1038
V\u000aint cdb_fchdir(cd_buf *cdb)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = fchdir((int)*cdb);\u000a  return iVar1;\u000a}\u000a\u000a
p1039
S'MOV EDI,dword ptr [RDI]\nJMP 0x00401be0\n'
p1040
S'8b 3f\ne9 09 91 ff ff\n'
p1041
S'.text:0000000000408ad0\n.text:0000000000408ad2\n'
p1042
tp1043
sS'quotearg_colon'
p1044
(S'\n__stdcall quotearg_colon(char * arg)\n'
p1045
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1046
S'MOV ESI,0x3a\nJMP 0x00406330\n'
p1047
S'be 3a 00 00 00\neb e9\n'
p1048
S'.text:0000000000406340\n.text:0000000000406345\n'
p1049
tp1050
sS'get_stat_ctime'
p1051
(S'\n__stdcall get_stat_ctime(stat * st)\n'
p1052
V\u000atimespec get_stat_ctime(stat *st)\u000a\u000a{\u000a  return st->st_ctim;\u000a}\u000a\u000a
p1053
S'MOV RAX,qword ptr [RDI + 0x68]\nMOV RDX,qword ptr [RDI + 0x70]\nRET\n'
p1054
S'48 8b 47 68\n48 8b 57 70\nc3\n'
p1055
S'.text:0000000000406900\n.text:0000000000406904\n.text:0000000000406908\n'
p1056
tp1057
sS'ydhms_diff'
p1058
(S'\n__stdcall ydhms_diff(long_int year1, long_int yday1, int yday0, int hour0, int min0, int sec0)\n'
p1059
V\u000atime_t ydhms_diff(long_int year1,long_int yday1,int yday0,int hour0,int min0,int sec0)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int in_stack_00000008;\u000a  int in_stack_00000010;\u000a  int in_stack_00000018;\u000a  int in_stack_00000020;\u000a  \u000a  iVar3 = ((int)((ulong)year1 >> 2) + 0x1db) - (uint)((year1 & 3U) == 0);\u000a  iVar1 = ((sec0 >> 2) + 0x1db) - (uint)((sec0 & 3U) == 0);\u000a  iVar4 = iVar3 / 0x19 + (iVar3 >> 0x1f) + (uint)((ulong)((long)iVar3 * 0x51eb851f) >> 0x3f);\u000a  iVar4 = iVar4 - ((uint)(iVar3 + iVar4 * -0x19) >> 0x1f);\u000a  iVar2 = iVar1 / 0x19 + (iVar1 >> 0x1f) + (uint)((ulong)((long)iVar1 * 0x51eb851f) >> 0x3f);\u000a  iVar2 = iVar2 - ((uint)(iVar1 + iVar2 * -0x19) >> 0x1f);\u000a  return ((long)min0 - (long)in_stack_00000020) +\u000a         (((long)hour0 - (long)in_stack_00000018) +\u000a         (((long)yday0 - (long)in_stack_00000010) +\u000a         ((yday1 - (long)in_stack_00000008) + (year1 - (long)sec0) * 0x16d +\u000a         (long)((((iVar3 - iVar4) - iVar1) + (iVar4 >> 2) + iVar2) - (iVar2 >> 2))) * 0x18) * 0x3c)\u000a         * 0x3c;\u000a}\u000a\u000a
p1060
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R10,RDI\nSHR R10,0x2\nMOV EAX,EDI\nAND EAX,0x3\nCMP RAX,0x1\nSBB RAX,RAX\nLEA R10,[0x1db + R10 + RAX*0x1]\nMOV R11D,R9D\nMOVSXD R14,R9D\nMOV EAX,R9D\nSAR EAX,0x2\nAND R11D,0x3\nCMP R11D,0x1\nSBB EBX,EBX\nLEA R9D,[0x1db + RAX + RBX*0x1]\nMOVSXD R11,R10D\nIMUL R15,R11,0x51eb851f\nMOV R10,R15\nSHR R10,0x3f\nSAR R15,0x23\nADD R15D,R10D\nLEA EBX,[R15 + R15*0x4]\nLEA R10D,[RBX + RBX*0x4]\nMOV EBX,R11D\nSUB EBX,R10D\nSHR EBX,0x1f\nSUB R15D,EBX\nMOVSXD R9,R9D\nIMUL RBX,R9,0x51eb851f\nMOV R10,RBX\nSHR R10,0x3f\nSAR RBX,0x23\nADD EBX,R10D\nLEA EAX,[RBX + RBX*0x4]\nLEA R10D,[RAX + RAX*0x4]\nSUB R11D,R15D\nSUB R11D,R9D\nMOV EAX,R9D\nSUB EAX,R10D\nSHR EAX,0x1f\nSUB EBX,EAX\nSAR R15D,0x2\nADD R11D,R15D\nADD R11D,EBX\nSAR EBX,0x2\nSUB R11D,EBX\nSUB RDI,R14\nIMUL RAX,RDI,0x16d\nMOVSXD RDI,dword ptr [RSP + 0x20]\nMOVSXD RBX,R11D\nSUB RSI,RDI\nADD RSI,RAX\nADD RSI,RBX\nLEA RAX,[RSI + RSI*0x2]\nMOVSXD RDX,EDX\nMOVSXD RSI,dword ptr [RSP + 0x28]\nSUB RDX,RSI\nLEA RAX,[RDX + RAX*0x8]\nIMUL RAX,RAX,0x3c\nMOVSXD RCX,ECX\nMOVSXD RDX,dword ptr [RSP + 0x30]\nSUB RCX,RDX\nADD RCX,RAX\nIMUL RCX,RCX,0x3c\nMOVSXD RAX,R8D\nMOVSXD RDX,dword ptr [RSP + 0x38]\nSUB RAX,RDX\nADD RAX,RCX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1061
S'41 57\n41 56\n53\n49 89 fa\n49 c1 ea 02\n89 f8\n83 e0 03\n48 83 f8 01\n48 19 c0\n4d 8d 94 02 db 01 00 00\n45 89 cb\n4d 63 f1\n44 89 c8\nc1 f8 02\n41 83 e3 03\n41 83 fb 01\n19 db\n44 8d 8c 18 db 01 00 00\n4d 63 da\n4d 69 fb 1f 85 eb 51\n4d 89 fa\n49 c1 ea 3f\n49 c1 ff 23\n45 01 d7\n43 8d 1c bf\n44 8d 14 9b\n44 89 db\n44 29 d3\nc1 eb 1f\n41 29 df\n4d 63 c9\n49 69 d9 1f 85 eb 51\n49 89 da\n49 c1 ea 3f\n48 c1 fb 23\n44 01 d3\n8d 04 9b\n44 8d 14 80\n45 29 fb\n45 29 cb\n44 89 c8\n44 29 d0\nc1 e8 1f\n29 c3\n41 c1 ff 02\n45 01 fb\n41 01 db\nc1 fb 02\n41 29 db\n4c 29 f7\n48 69 c7 6d 01 00 00\n48 63 7c 24 20\n49 63 db\n48 29 fe\n48 01 c6\n48 01 de\n48 8d 04 76\n48 63 d2\n48 63 74 24 28\n48 29 f2\n48 8d 04 c2\n48 6b c0 3c\n48 63 c9\n48 63 54 24 30\n48 29 d1\n48 01 c1\n48 6b c9 3c\n49 63 c0\n48 63 54 24 38\n48 29 d0\n48 01 c8\n5b\n41 5e\n41 5f\nc3\n'
p1062
S'.text:00000000004074b0\n.text:00000000004074b2\n.text:00000000004074b4\n.text:00000000004074b5\n.text:00000000004074b8\n.text:00000000004074bc\n.text:00000000004074be\n.text:00000000004074c1\n.text:00000000004074c5\n.text:00000000004074c8\n.text:00000000004074d0\n.text:00000000004074d3\n.text:00000000004074d6\n.text:00000000004074d9\n.text:00000000004074dc\n.text:00000000004074e0\n.text:00000000004074e4\n.text:00000000004074e6\n.text:00000000004074ee\n.text:00000000004074f1\n.text:00000000004074f8\n.text:00000000004074fb\n.text:00000000004074ff\n.text:0000000000407503\n.text:0000000000407506\n.text:000000000040750a\n.text:000000000040750e\n.text:0000000000407511\n.text:0000000000407514\n.text:0000000000407517\n.text:000000000040751a\n.text:000000000040751d\n.text:0000000000407524\n.text:0000000000407527\n.text:000000000040752b\n.text:000000000040752f\n.text:0000000000407532\n.text:0000000000407535\n.text:0000000000407539\n.text:000000000040753c\n.text:000000000040753f\n.text:0000000000407542\n.text:0000000000407545\n.text:0000000000407548\n.text:000000000040754a\n.text:000000000040754e\n.text:0000000000407551\n.text:0000000000407554\n.text:0000000000407557\n.text:000000000040755a\n.text:000000000040755d\n.text:0000000000407564\n.text:0000000000407569\n.text:000000000040756c\n.text:000000000040756f\n.text:0000000000407572\n.text:0000000000407575\n.text:0000000000407579\n.text:000000000040757c\n.text:0000000000407581\n.text:0000000000407584\n.text:0000000000407588\n.text:000000000040758c\n.text:000000000040758f\n.text:0000000000407594\n.text:0000000000407597\n.text:000000000040759a\n.text:000000000040759e\n.text:00000000004075a1\n.text:00000000004075a6\n.text:00000000004075a9\n.text:00000000004075ac\n.text:00000000004075ad\n.text:00000000004075af\n.text:00000000004075b1\n'
p1063
tp1064
sS'rpl_fflush'
p1065
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p1066
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_0060e1c0)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p1067
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00408bad\nMOV RDI,RBX\nCALL 0x00401bd0\nTEST EAX,EAX\nJZ 0x00408bad\nMOV RDI,RBX\nCALL 0x00408bc0\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401b90\n'
p1068
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 2f 90 ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 da 8f ff ff\n'
p1069
S'.text:0000000000408b90\n.text:0000000000408b91\n.text:0000000000408b94\n.text:0000000000408b97\n.text:0000000000408b99\n.text:0000000000408b9c\n.text:0000000000408ba1\n.text:0000000000408ba3\n.text:0000000000408ba5\n.text:0000000000408ba8\n.text:0000000000408bad\n.text:0000000000408bb0\n.text:0000000000408bb1\n'
p1070
tp1071
sS'__assert_fail'
p1072
(S'\n__stdcall __assert_fail(char * __assertion, char * __file, uint __line, char * __function)\n'
p1073
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\u000a\u000a{\u000a  (*(code *)PTR___assert_fail_0060e118)();\u000a  return;\u000a}\u000a\u000a
p1074
S'JMP qword ptr [0x0060e118]\n'
p1075
S'ff 25 d2 c6 20 00\n'
p1076
S'.plt:0000000000401a40\n'
p1077
tp1078
sS'bindtextdomain'
p1079
(S'\n__stdcall bindtextdomain()\n'
p1080
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_0060e0a0)();\u000a  return;\u000a}\u000a\u000a
p1081
S'JMP qword ptr [0x0060e0a0]\n'
p1082
S'ff 25 4a c7 20 00\n'
p1083
S'.plt:0000000000401950\n'
p1084
tp1085
sS'set_char_quoting'
p1086
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p1087
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p1088
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x60e3c0\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p1089
S'89 f1\n48 85 ff\nbe c0 e3 60 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p1090
S'.text:00000000004050c0\n.text:00000000004050c2\n.text:00000000004050c5\n.text:00000000004050ca\n.text:00000000004050ce\n.text:00000000004050d0\n.text:00000000004050d3\n.text:00000000004050d7\n.text:00000000004050dc\n.text:00000000004050df\n.text:00000000004050e1\n.text:00000000004050e3\n.text:00000000004050e6\n.text:00000000004050e8\n.text:00000000004050eb\n.text:00000000004050ed\n.text:00000000004050f0\n.text:00000000004050f5\n'
p1091
tp1092
sS'quotearg_n'
p1093
(S'\n__stdcall quotearg_n(char * arg)\n'
p1094
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1095
S'MOV RDX,-0x1\nMOV ECX,0x60e3c0\nJMP 0x00405fb0\n'
p1096
S'48 c7 c2 ff ff ff ff\nb9 c0 e3 60 00\neb 02\n'
p1097
S'.text:0000000000405fa0\n.text:0000000000405fa7\n.text:0000000000405fac\n'
p1098
tp1099
sS'close_stream'
p1100
(S'\n__stdcall close_stream(FILE * stream)\n'
p1101
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1102
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x004018e0\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00401ae0\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x00408b10\nTEST EBP,EBP\nJZ 0x00407cab\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x00407ccf\nCALL 0x00401890\nMOV dword ptr [RAX],0x0\nJMP 0x00407ccf\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x00407ccf\nTEST CL,CL\nJNZ 0x00407ccf\nCALL 0x00401890\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1103
S'55\n41 56\n53\n48 89 fb\ne8 64 9c ff ff\n49 89 c6\n48 89 df\ne8 59 9e ff ff\n89 c5\n48 89 df\ne8 7f 0e 00 00\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 ed 9b ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 ce 9b ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p1104
S'.text:0000000000407c70\n.text:0000000000407c71\n.text:0000000000407c73\n.text:0000000000407c74\n.text:0000000000407c77\n.text:0000000000407c7c\n.text:0000000000407c7f\n.text:0000000000407c82\n.text:0000000000407c87\n.text:0000000000407c89\n.text:0000000000407c8c\n.text:0000000000407c91\n.text:0000000000407c93\n.text:0000000000407c95\n.text:0000000000407c9a\n.text:0000000000407c9c\n.text:0000000000407c9e\n.text:0000000000407ca3\n.text:0000000000407ca9\n.text:0000000000407cab\n.text:0000000000407cad\n.text:0000000000407cb0\n.text:0000000000407cb2\n.text:0000000000407cb4\n.text:0000000000407cb7\n.text:0000000000407cb9\n.text:0000000000407cbb\n.text:0000000000407cbd\n.text:0000000000407cc2\n.text:0000000000407cc4\n.text:0000000000407cc7\n.text:0000000000407ccc\n.text:0000000000407ccf\n.text:0000000000407cd1\n.text:0000000000407cd2\n.text:0000000000407cd4\n.text:0000000000407cd5\n'
p1105
tp1106
sS'quotearg_colon_mem'
p1107
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p1108
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1109
S'MOV EDX,0x3a\nJMP 0x004062c0\n'
p1110
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p1111
S'.text:0000000000406350\n.text:0000000000406355\n'
p1112
tp1113
sS'setenv'
p1114
(S'\n__stdcall setenv(char * __name, char * __value, int __replace)\n'
p1115
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint setenv(char *__name,char *__value,int __replace)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_setenv_0060e088)();\u000a  return iVar1;\u000a}\u000a\u000a
p1116
S'JMP qword ptr [0x0060e088]\n'
p1117
S'ff 25 62 c7 20 00\n'
p1118
S'.plt:0000000000401920\n'
p1119
tp1120
sS'xcalloc'
p1121
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p1122
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1123
S'PUSH RAX\nCALL 0x00407010\nTEST RAX,RAX\nJZ 0x00406f7d\nPOP RCX\nRET\nCALL 0x00406fe0\n'
p1124
S'50\ne8 9a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p1125
S'.text:0000000000406f70\n.text:0000000000406f71\n.text:0000000000406f76\n.text:0000000000406f79\n.text:0000000000406f7b\n.text:0000000000406f7c\n.text:0000000000406f7d\n'
p1126
tp1127
sS'strtol'
p1128
(S'\n__stdcall strtol(char * __nptr, char * * __endptr, int __base)\n'
p1129
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000along strtol(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = (*(code *)PTR_strtol_0060e180)();\u000a  return lVar1;\u000a}\u000a\u000a
p1130
S'JMP qword ptr [0x0060e180]\n'
p1131
S'ff 25 6a c6 20 00\n'
p1132
S'.plt:0000000000401b10\n'
p1133
tp1134
sS'local_utimensat'
p1135
(S'\n__stdcall local_utimensat(char * file, timespec * ts)\n'
p1136
V\u000aint local_utimensat(char *file,timespec *ts)\u000a\u000a{\u000a  uint uVar1;\u000a  int __fd;\u000a  int iVar2;\u000a  int iVar3;\u000a  int *piVar4;\u000a  saved_cwd *__ptr;\u000a  uint *puVar5;\u000a  undefined8 uVar6;\u000a  uint in_ECX;\u000a  timespec *timespec;\u000a  char proc_buf [4032];\u000a  saved_cwd local_ff8 [252];\u000a  \u000a  if ((in_ECX & 0xfffffeff) == 0) {\u000a    __fd = (int)(char *)((ulong)file & 0xffffffff);\u000a    if ((__fd == -100) || (*(char *)&ts->tv_sec == '/')) {\u000a      if (in_ECX != 0x100) {\u000a        __fd = utimens((char *)ts,timespec);\u000a        return __fd;\u000a      }\u000a      __fd = lutimens((char *)ts,timespec);\u000a      return __fd;\u000a    }\u000a    __ptr = (saved_cwd *)openat_proc_name((char *)local_ff8,(char *)((ulong)file & 0xffffffff));\u000a    if (__ptr != (saved_cwd *)0x0) {\u000a      if (in_ECX == 0x100) {\u000a        iVar2 = lutimens((char *)__ptr,timespec);\u000a      }\u000a      else {\u000a        iVar2 = utimens((char *)__ptr,timespec);\u000a      }\u000a      puVar5 = (uint *)__errno_location();\u000a      uVar1 = *puVar5;\u000a      if (__ptr != local_ff8) {\u000a        free(__ptr);\u000a      }\u000a      if (iVar2 != -1) {\u000a        return iVar2;\u000a      }\u000a      if (((0x26 < uVar1) || ((0x4000102006U >> ((ulong)uVar1 & 0x1f) & 1) == 0)) && (uVar1 != 0x5f)\u000a         ) {\u000a        *puVar5 = uVar1;\u000a        return -1;\u000a      }\u000a    }\u000a    iVar2 = save_cwd(local_ff8);\u000a    if (iVar2 != 0) {\u000a      __errno_location();\u000a      openat_save_fail();\u000aLAB_00407b0d:\u000a      piVar4 = __errno_location();\u000a      __fd = *piVar4;\u000a      uVar6 = openat_restore_fail();\u000a      if (((0x39 < __fd - 0x41U) ||\u000a          ((0x3ffffff03ffffffU >> ((ulong)(__fd - 0x41U) & 0x1f) & 1) == 0)) && (9 < __fd - 0x30U))\u000a      {\u000a        return 0;\u000a      }\u000a      return (int)CONCAT71((int7)((ulong)uVar6 >> 8),1);\u000a    }\u000a    if ((__fd < 0) || (local_ff8[0].desc != __fd)) {\u000a      __fd = fchdir(__fd);\u000a      if (__fd == 0) {\u000a        if (in_ECX == 0x100) {\u000a          __fd = lutimens((char *)ts,timespec);\u000a        }\u000a        else {\u000a          __fd = utimens((char *)ts,timespec);\u000a        }\u000a        iVar2 = 0;\u000a        if (__fd == -1) {\u000a          piVar4 = __errno_location();\u000a          iVar2 = *piVar4;\u000a        }\u000a        iVar3 = restore_cwd(local_ff8);\u000a        if (iVar3 == 0) {\u000a          free_cwd(local_ff8);\u000a          if (iVar2 == 0) {\u000a            return __fd;\u000a          }\u000a          piVar4 = __errno_location();\u000a          *piVar4 = iVar2;\u000a          return __fd;\u000a        }\u000a        goto LAB_00407b0d;\u000a      }\u000a      piVar4 = __errno_location();\u000a      __fd = *piVar4;\u000a      free_cwd(local_ff8);\u000a      *piVar4 = __fd;\u000a    }\u000a    else {\u000a      free_cwd(local_ff8);\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 9;\u000a    }\u000a  }\u000a  else {\u000a    piVar4 = __errno_location();\u000a    *piVar4 = 0x16;\u000a  }\u000a  return -1;\u000a}\u000a\u000a
p1137
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xfd8\nMOV EBP,ECX\nMOV R14,RDX\nMOV R15,RSI\nMOV EBX,EDI\nTEST EBP,0xfffffeff\nJZ 0x00407979\nCALL 0x00401890\nMOV dword ptr [RAX],0x16\nMOV R12D,0xffffffff\nMOV EAX,R12D\nADD RSP,0xfd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP EBX,-0x64\nJZ 0x00407984\nCMP byte ptr [R15],0x2f\nJNZ 0x004079b7\nMOV RDI,R15\nMOV RSI,R14\nADD RSP,0xfd8\nCMP EBP,0x100\nJNZ 0x004079a8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00408640\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00408620\nLEA RDI,[RSP + 0x10]\nMOV ESI,EBX\nMOV RDX,R15\nCALL 0x00408c50\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00407a38\nMOV RDI,R13\nMOV RSI,R14\nCMP EBP,0x100\nJNZ 0x004079e3\nCALL 0x00408640\nJMP 0x004079e8\nCALL 0x00408620\nMOV R12D,EAX\nCALL 0x00401890\nMOV qword ptr [RSP + 0x8],RAX\nMOV EDX,dword ptr [RAX]\nLEA RAX,[RSP + 0x10]\nCMP R13,RAX\nJZ 0x00407a0f\nMOV RDI,R13\nMOV R13D,EDX\nCALL 0x00401850\nMOV EDX,R13D\nCMP R12D,-0x1\nJNZ 0x00407964\nCMP EDX,0x26\nJA 0x00407aec\nMOV EAX,EDX\nMOV RCX,0x4000102006\nBT RCX,RAX\nJNC 0x00407aec\nLEA RDI,[RSP + 0x10]\nCALL 0x00408090\nTEST EAX,EAX\nJNZ 0x00407b01\nTEST EBX,EBX\nJS 0x00407a6e\nCMP dword ptr [RSP + 0x10],EBX\nJNZ 0x00407a6e\nLEA RDI,[RSP + 0x10]\nCALL 0x00408100\nCALL 0x00401890\nMOV dword ptr [RAX],0x9\nJMP 0x0040795e\nMOV EDI,EBX\nCALL 0x00401be0\nTEST EAX,EAX\nJZ 0x00407a94\nCALL 0x00401890\nMOV RBX,RAX\nMOV EBP,dword ptr [RBX]\nLEA RDI,[RSP + 0x10]\nCALL 0x00408100\nMOV dword ptr [RBX],EBP\nJMP 0x0040795e\nMOV RDI,R15\nMOV RSI,R14\nCMP EBP,0x100\nJNZ 0x00407aa9\nCALL 0x00408640\nJMP 0x00407aae\nCALL 0x00408620\nMOV R12D,EAX\nXOR EBX,EBX\nCMP R12D,-0x1\nJNZ 0x00407ac0\nCALL 0x00401890\nMOV EBX,dword ptr [RAX]\nLEA RDI,[RSP + 0x10]\nCALL 0x004080e0\nTEST EAX,EAX\nJNZ 0x00407b0d\nLEA RDI,[RSP + 0x10]\nCALL 0x00408100\nTEST EBX,EBX\nJZ 0x00407964\nCALL 0x00401890\nMOV dword ptr [RAX],EBX\nJMP 0x00407964\nCMP EDX,0x5f\nJZ 0x00407a38\nMOV RAX,qword ptr [RSP + 0x8]\nMOV dword ptr [RAX],EDX\nJMP 0x00407964\nCALL 0x00401890\nMOV EDI,dword ptr [RAX]\nCALL 0x00408010\nCALL 0x00401890\nMOV EDI,dword ptr [RAX]\nCALL 0x00408050\nNOP dword ptr [RAX]\n'
p1138
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 0f 00 00\n89 cd\n49 89 d6\n49 89 f7\n89 fb\nf7 c5 ff fe ff ff\n74 26\ne8 38 9f ff ff\nc7 00 16 00 00 00\n41 bc ff ff ff ff\n44 89 e0\n48 81 c4 d8 0f 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n83 fb 9c\n74 06\n41 80 3f 2f\n75 33\n4c 89 ff\n4c 89 f6\n48 81 c4 d8 0f 00 00\n81 fd 00 01 00 00\n75 0f\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 98 0c 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 69 0c 00 00\n48 8d 7c 24 10\n89 de\n4c 89 fa\ne8 8a 12 00 00\n49 89 c5\n4d 85 ed\n74 6a\n4c 89 ef\n4c 89 f6\n81 fd 00 01 00 00\n75 07\ne8 5f 0c 00 00\neb 05\ne8 38 0c 00 00\n41 89 c4\ne8 a0 9e ff ff\n48 89 44 24 08\n8b 10\n48 8d 44 24 10\n49 39 c5\n74 0e\n4c 89 ef\n41 89 d5\ne8 44 9e ff ff\n44 89 ea\n41 83 fc ff\n0f 85 4b ff ff ff\n83 fa 26\n0f 87 ca 00 00 00\n89 d0\n48 b9 06 20 10 00 40 00 00 00\n48 0f a3 c1\n0f 83 b4 00 00 00\n48 8d 7c 24 10\ne8 4e 06 00 00\n85 c0\n0f 85 b7 00 00 00\n85 db\n78 20\n39 5c 24 10\n75 1a\n48 8d 7c 24 10\ne8 a2 06 00 00\ne8 2d 9e ff ff\nc7 00 09 00 00 00\ne9 f0 fe ff ff\n89 df\ne8 6b a1 ff ff\n85 c0\n74 1b\ne8 12 9e ff ff\n48 89 c3\n8b 2b\n48 8d 7c 24 10\ne8 73 06 00 00\n89 2b\ne9 ca fe ff ff\n4c 89 ff\n4c 89 f6\n81 fd 00 01 00 00\n75 07\ne8 99 0b 00 00\neb 05\ne8 72 0b 00 00\n41 89 c4\n31 db\n41 83 fc ff\n75 07\ne8 d2 9d ff ff\n8b 18\n48 8d 7c 24 10\ne8 16 06 00 00\n85 c0\n75 3f\n48 8d 7c 24 10\ne8 28 06 00 00\n85 db\n0f 84 84 fe ff ff\ne8 ab 9d ff ff\n89 18\ne9 78 fe ff ff\n83 fa 5f\n0f 84 43 ff ff ff\n48 8b 44 24 08\n89 10\ne9 63 fe ff ff\ne8 8a 9d ff ff\n8b 38\ne8 03 05 00 00\ne8 7e 9d ff ff\n8b 38\ne8 37 05 00 00\n0f 1f 80 00 00 00 00\n'
p1139
S'.text:0000000000407930\n.text:0000000000407931\n.text:0000000000407933\n.text:0000000000407935\n.text:0000000000407937\n.text:0000000000407939\n.text:000000000040793a\n.text:0000000000407941\n.text:0000000000407943\n.text:0000000000407946\n.text:0000000000407949\n.text:000000000040794b\n.text:0000000000407951\n.text:0000000000407953\n.text:0000000000407958\n.text:000000000040795e\n.text:0000000000407964\n.text:0000000000407967\n.text:000000000040796e\n.text:000000000040796f\n.text:0000000000407971\n.text:0000000000407973\n.text:0000000000407975\n.text:0000000000407977\n.text:0000000000407978\n.text:0000000000407979\n.text:000000000040797c\n.text:000000000040797e\n.text:0000000000407982\n.text:0000000000407984\n.text:0000000000407987\n.text:000000000040798a\n.text:0000000000407991\n.text:0000000000407997\n.text:0000000000407999\n.text:000000000040799a\n.text:000000000040799c\n.text:000000000040799e\n.text:00000000004079a0\n.text:00000000004079a2\n.text:00000000004079a3\n.text:00000000004079a8\n.text:00000000004079a9\n.text:00000000004079ab\n.text:00000000004079ad\n.text:00000000004079af\n.text:00000000004079b1\n.text:00000000004079b2\n.text:00000000004079b7\n.text:00000000004079bc\n.text:00000000004079be\n.text:00000000004079c1\n.text:00000000004079c6\n.text:00000000004079c9\n.text:00000000004079cc\n.text:00000000004079ce\n.text:00000000004079d1\n.text:00000000004079d4\n.text:00000000004079da\n.text:00000000004079dc\n.text:00000000004079e1\n.text:00000000004079e3\n.text:00000000004079e8\n.text:00000000004079eb\n.text:00000000004079f0\n.text:00000000004079f5\n.text:00000000004079f7\n.text:00000000004079fc\n.text:00000000004079ff\n.text:0000000000407a01\n.text:0000000000407a04\n.text:0000000000407a07\n.text:0000000000407a0c\n.text:0000000000407a0f\n.text:0000000000407a13\n.text:0000000000407a19\n.text:0000000000407a1c\n.text:0000000000407a22\n.text:0000000000407a24\n.text:0000000000407a2e\n.text:0000000000407a32\n.text:0000000000407a38\n.text:0000000000407a3d\n.text:0000000000407a42\n.text:0000000000407a44\n.text:0000000000407a4a\n.text:0000000000407a4c\n.text:0000000000407a4e\n.text:0000000000407a52\n.text:0000000000407a54\n.text:0000000000407a59\n.text:0000000000407a5e\n.text:0000000000407a63\n.text:0000000000407a69\n.text:0000000000407a6e\n.text:0000000000407a70\n.text:0000000000407a75\n.text:0000000000407a77\n.text:0000000000407a79\n.text:0000000000407a7e\n.text:0000000000407a81\n.text:0000000000407a83\n.text:0000000000407a88\n.text:0000000000407a8d\n.text:0000000000407a8f\n.text:0000000000407a94\n.text:0000000000407a97\n.text:0000000000407a9a\n.text:0000000000407aa0\n.text:0000000000407aa2\n.text:0000000000407aa7\n.text:0000000000407aa9\n.text:0000000000407aae\n.text:0000000000407ab1\n.text:0000000000407ab3\n.text:0000000000407ab7\n.text:0000000000407ab9\n.text:0000000000407abe\n.text:0000000000407ac0\n.text:0000000000407ac5\n.text:0000000000407aca\n.text:0000000000407acc\n.text:0000000000407ace\n.text:0000000000407ad3\n.text:0000000000407ad8\n.text:0000000000407ada\n.text:0000000000407ae0\n.text:0000000000407ae5\n.text:0000000000407ae7\n.text:0000000000407aec\n.text:0000000000407aef\n.text:0000000000407af5\n.text:0000000000407afa\n.text:0000000000407afc\n.text:0000000000407b01\n.text:0000000000407b06\n.text:0000000000407b08\n.text:0000000000407b0d\n.text:0000000000407b12\n.text:0000000000407b14\n.text:0000000000407b19\n'
p1140
tp1141
sS'clear_ungetc_buffer_preserving_position'
p1142
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p1143
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p1144
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x00408bc7\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x00408be0\n'
p1145
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p1146
S'.text:0000000000408bc0\n.text:0000000000408bc4\n.text:0000000000408bc6\n.text:0000000000408bc7\n.text:0000000000408bc9\n.text:0000000000408bce\n'
p1147
tp1148
sS'xnmalloc'
p1149
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p1150
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1151
S'MOV RAX,RDI\nMUL RSI\nJO 0x00406e41\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x00406e50\nPUSH RAX\nCALL 0x00406fe0\n'
p1152
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p1153
S'.text:0000000000406e30\n.text:0000000000406e33\n.text:0000000000406e36\n.text:0000000000406e38\n.text:0000000000406e3c\n.text:0000000000406e3f\n.text:0000000000406e41\n.text:0000000000406e42\n'
p1154
tp1155
sS'quotearg_char'
p1156
(S'\n__stdcall quotearg_char(char * arg)\n'
p1157
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1158
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x004062c0\n'
p1159
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p1160
S'.text:0000000000406330\n.text:0000000000406332\n.text:0000000000406339\n.text:000000000040633b\n'
p1161
tp1162
sS'malloc'
p1163
(S'\n__stdcall malloc(size_t __size)\n'
p1164
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_0060e1b8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1165
S'JMP qword ptr [0x0060e1b8]\n'
p1166
S'ff 25 32 c6 20 00\n'
p1167
S'.plt:0000000000401b80\n'
p1168
tp1169
sS'argmatch_invalid'
p1170
(S'\n__stdcall argmatch_invalid(char * context, char * value, ptrdiff_t problem)\n'
p1171
V\u000avoid argmatch_invalid(char *context,char *value,ptrdiff_t problem)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  \u000a  pcVar2 = "ambiguous argument %s for %s";\u000a  if (problem == -1) {\u000a    pcVar2 = "invalid argument %s for %s";\u000a  }\u000a  uVar1 = dcgettext(0,pcVar2,5);\u000a  pcVar2 = quotearg_n_style((char *)0x0);\u000a  pcVar3 = quote_n((char *)0x1);\u000a  error(0,0,uVar1,pcVar2,pcVar3);\u000a  return;\u000a}\u000a\u000a
p1172
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R14,RDI\nCMP RDX,-0x1\nMOV EAX,0x409d7f\nMOV ESI,0x409d9a\nCMOVZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00401960\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x8\nMOV RDX,R15\nCALL 0x004061a0\nMOV R15,RAX\nMOV EDI,0x1\nMOV RSI,R14\nCALL 0x00406490\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R12\nMOV RCX,R15\nMOV R8,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401c30\n'
p1173
S'41 57\n41 56\n41 54\n53\n50\n49 89 f7\n49 89 fe\n48 83 fa ff\nb8 7f 9d 40 00\nbe 9a 9d 40 00\n48 0f 44 f0\n31 ff\nba 05 00 00 00\ne8 64 ef ff ff\n49 89 c4\n31 ff\nbe 08 00 00 00\n4c 89 fa\ne8 92 37 00 00\n49 89 c7\nbf 01 00 00 00\n4c 89 f6\ne8 72 3a 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 e2\n4c 89 f9\n49 89 d8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 f0 f1 ff ff\n'
p1174
S'.text:00000000004029d0\n.text:00000000004029d2\n.text:00000000004029d4\n.text:00000000004029d6\n.text:00000000004029d7\n.text:00000000004029d8\n.text:00000000004029db\n.text:00000000004029de\n.text:00000000004029e2\n.text:00000000004029e7\n.text:00000000004029ec\n.text:00000000004029f0\n.text:00000000004029f2\n.text:00000000004029f7\n.text:00000000004029fc\n.text:00000000004029ff\n.text:0000000000402a01\n.text:0000000000402a06\n.text:0000000000402a09\n.text:0000000000402a0e\n.text:0000000000402a11\n.text:0000000000402a16\n.text:0000000000402a19\n.text:0000000000402a1e\n.text:0000000000402a21\n.text:0000000000402a23\n.text:0000000000402a25\n.text:0000000000402a27\n.text:0000000000402a2a\n.text:0000000000402a2d\n.text:0000000000402a30\n.text:0000000000402a34\n.text:0000000000402a35\n.text:0000000000402a37\n.text:0000000000402a39\n.text:0000000000402a3b\n'
p1175
tp1176
sS'c_tolower'
p1177
(S'\n__stdcall c_tolower()\n'
p1178
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1179
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p1180
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p1181
S'.text:0000000000407c50\n.text:0000000000407c53\n.text:0000000000407c56\n.text:0000000000407c59\n.text:0000000000407c5c\n'
p1182
tp1183
sS'cdb_free'
p1184
(S'\n__stdcall cdb_free(cd_buf * cdb)\n'
p1185
V\u000avoid cdb_free(cd_buf *cdb)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (-1 < (int)*cdb) {\u000a    iVar1 = close((int)*cdb);\u000a    if (iVar1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("! close_fail","lib/chdir-long.c",0x40,"void cdb_free(const struct cd_buf *)");\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1186
S'PUSH RAX\nMOV EDI,dword ptr [RDI]\nTEST EDI,EDI\nJS 0x00408af0\nCALL 0x00401a80\nTEST EAX,EAX\nJNZ 0x00408af2\nPOP RAX\nRET\nMOV EDI,0x40bf90\nMOV ESI,0x40bf2e\nMOV EDX,0x40\nMOV ECX,0x40bf9d\nCALL 0x00401a40\n'
p1187
S'50\n8b 3f\n85 ff\n78 09\ne8 94 8f ff ff\n85 c0\n75 02\n58\nc3\nbf 90 bf 40 00\nbe 2e bf 40 00\nba 40 00 00 00\nb9 9d bf 40 00\ne8 35 8f ff ff\n'
p1188
S'.text:0000000000408ae0\n.text:0000000000408ae1\n.text:0000000000408ae3\n.text:0000000000408ae5\n.text:0000000000408ae7\n.text:0000000000408aec\n.text:0000000000408aee\n.text:0000000000408af0\n.text:0000000000408af1\n.text:0000000000408af2\n.text:0000000000408af7\n.text:0000000000408afc\n.text:0000000000408b01\n.text:0000000000408b06\n'
p1189
tp1190
sS'getopt_long'
p1191
(S'\n__stdcall getopt_long()\n'
p1192
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_0060e0d8)();\u000a  return;\u000a}\u000a\u000a
p1193
S'JMP qword ptr [0x0060e0d8]\n'
p1194
S'ff 25 12 c7 20 00\n'
p1195
S'.plt:00000000004019c0\n'
p1196
tp1197
sS'posix2_version'
p1198
(S'\n__stdcall posix2_version()\n'
p1199
V\u000aint posix2_version(void)\u000a\u000a{\u000a  int iVar1;\u000a  char *in_RAX;\u000a  char *__nptr;\u000a  long lVar2;\u000a  long lVar3;\u000a  int iVar4;\u000a  char *local_8;\u000a  \u000a  local_8 = in_RAX;\u000a  __nptr = getenv("_POSIX2_VERSION");\u000a  if ((__nptr == (char *)0x0) || (*__nptr == 0)) {\u000a    lVar3 = 0x31069;\u000a  }\u000a  else {\u000a    lVar2 = strtol(__nptr,&local_8,10);\u000a    lVar3 = 0x31069;\u000a    if (*local_8 == 0) {\u000a      lVar3 = lVar2;\u000a    }\u000a  }\u000a  iVar4 = 0x7fffffff;\u000a  if (lVar3 < 0x7fffffff) {\u000a    iVar4 = (int)lVar3;\u000a  }\u000a  iVar1 = -0x80000000;\u000a  if (0x7fffffff < lVar3) {\u000a    iVar1 = iVar4;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1200
S'PUSH RAX\nMOV EDI,0x40b133\nCALL 0x00401840\nTEST RAX,RAX\nJZ 0x00404f87\nCMP byte ptr [RAX],0x0\nJZ 0x00404f87\nMOV RSI,RSP\nMOV EDX,0xa\nMOV RDI,RAX\nCALL 0x00401b10\nMOV RCX,qword ptr [RSP]\nCMP byte ptr [RCX],0x0\nMOV ECX,0x31069\nCMOVZ RCX,RAX\nJMP 0x00404f8c\nMOV ECX,0x31069\nCMP RCX,0x7fffffff\nMOV EDX,0x7fffffff\nCMOVL EDX,ECX\nCMP RCX,0x80000000\nMOV EAX,0x80000000\nCMOVGE EAX,EDX\nPOP RCX\nRET\n'
p1201
S'50\nbf 33 b1 40 00\ne8 e5 c8 ff ff\n48 85 c0\n74 27\n80 38 00\n74 22\n48 89 e6\nba 0a 00 00 00\n48 89 c7\ne8 9b cb ff ff\n48 8b 0c 24\n80 39 00\nb9 69 10 03 00\n48 0f 44 c8\neb 05\nb9 69 10 03 00\n48 81 f9 ff ff ff 7f\nba ff ff ff 7f\n0f 4c d1\n48 81 f9 00 00 00 80\nb8 00 00 00 80\n0f 4d c2\n59\nc3\n'
p1202
S'.text:0000000000404f50\n.text:0000000000404f51\n.text:0000000000404f56\n.text:0000000000404f5b\n.text:0000000000404f5e\n.text:0000000000404f60\n.text:0000000000404f63\n.text:0000000000404f65\n.text:0000000000404f68\n.text:0000000000404f6d\n.text:0000000000404f70\n.text:0000000000404f75\n.text:0000000000404f79\n.text:0000000000404f7c\n.text:0000000000404f81\n.text:0000000000404f85\n.text:0000000000404f87\n.text:0000000000404f8c\n.text:0000000000404f93\n.text:0000000000404f98\n.text:0000000000404f9b\n.text:0000000000404fa2\n.text:0000000000404fa7\n.text:0000000000404faa\n.text:0000000000404fab\n'
p1203
tp1204
sS'quotearg_style'
p1205
(S'\n__stdcall quotearg_style(char * arg)\n'
p1206
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1207
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x004061a0\n'
p1208
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p1209
S'.text:0000000000406280\n.text:0000000000406283\n.text:0000000000406285\n.text:0000000000406287\n.text:0000000000406289\n.text:000000000040628c\n'
p1210
tp1211
sS'fd_reopen'
p1212
(S'\n__stdcall fd_reopen(char * file)\n'
p1213
V\u000aint fd_reopen(char *file)\u000a\u000a{\u000a  int iVar1;\u000a  int __fd;\u000a  int iVar2;\u000a  int *piVar3;\u000a  uint in_ECX;\u000a  int __oflag;\u000a  char *__file;\u000a  \u000a  __fd = open(__file,__oflag,(ulong)in_ECX);\u000a  if ((__fd != (int)file) && (-1 < __fd)) {\u000a    iVar2 = dup2(__fd,(int)file);\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(__fd);\u000a    *piVar3 = iVar1;\u000a    __fd = iVar2;\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p1214
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBP,EDI\nXOR EAX,EAX\nMOV RDI,RSI\nMOV ESI,EDX\nMOV EDX,ECX\nCALL 0x00401c50\nMOV EBX,EAX\nCMP EBX,EBP\nJZ 0x00402d39\nTEST EBX,EBX\nJS 0x00402d39\nMOV EDI,EBX\nMOV ESI,EBP\nCALL 0x004019e0\nMOV R14D,EAX\nCALL 0x00401890\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV EDI,EBX\nCALL 0x00401a80\nMOV dword ptr [RBP],R15D\nMOV EAX,R14D\nJMP 0x00402d3b\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1215
S'55\n41 57\n41 56\n53\n50\n89 fd\n31 c0\n48 89 f7\n89 d6\n89 ca\ne8 49 ef ff ff\n89 c3\n39 eb\n74 2c\n85 db\n78 28\n89 df\n89 ee\ne8 c6 ec ff ff\n41 89 c6\ne8 6e eb ff ff\n48 89 c5\n44 8b 7d 00\n89 df\ne8 50 ed ff ff\n44 89 7d 00\n44 89 f0\neb 02\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1216
S'.text:0000000000402cf0\n.text:0000000000402cf1\n.text:0000000000402cf3\n.text:0000000000402cf5\n.text:0000000000402cf6\n.text:0000000000402cf7\n.text:0000000000402cf9\n.text:0000000000402cfb\n.text:0000000000402cfe\n.text:0000000000402d00\n.text:0000000000402d02\n.text:0000000000402d07\n.text:0000000000402d09\n.text:0000000000402d0b\n.text:0000000000402d0d\n.text:0000000000402d0f\n.text:0000000000402d11\n.text:0000000000402d13\n.text:0000000000402d15\n.text:0000000000402d1a\n.text:0000000000402d1d\n.text:0000000000402d22\n.text:0000000000402d25\n.text:0000000000402d29\n.text:0000000000402d2b\n.text:0000000000402d30\n.text:0000000000402d34\n.text:0000000000402d37\n.text:0000000000402d39\n.text:0000000000402d3b\n.text:0000000000402d3f\n.text:0000000000402d40\n.text:0000000000402d42\n.text:0000000000402d44\n.text:0000000000402d45\n'
p1217
tp1218
sS'__argmatch_die'
p1219
(S'\n__stdcall __argmatch_die()\n'
p1220
V\u000avoid __argmatch_die(void)\u000a\u000a{\u000a  usage(1);\u000a  return;\u000a}\u000a\u000a
p1221
S'MOV EDI,0x1\nJMP 0x00401e30\n'
p1222
S'bf 01 00 00 00\ne9 66 f5 ff ff\n'
p1223
S'.text:00000000004028c0\n.text:00000000004028c5\n'
p1224
tp1225
sS'dup_cloexec'
p1226
(S'\n__stdcall dup_cloexec()\n'
p1227
V\u000aint dup_cloexec(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0x406,0);\u000a  return iVar1;\u000a}\u000a\u000a
p1228
S'MOV ESI,0x406\nXOR EDX,EDX\nXOR EAX,EAX\nJMP 0x00408ef0\n'
p1229
S'be 06 04 00 00\n31 d2\n31 c0\ne9 22 01 00 00\n'
p1230
S'.text:0000000000408dc0\n.text:0000000000408dc5\n.text:0000000000408dc7\n.text:0000000000408dc9\n'
p1231
tp1232
sS'emit_try_help'
p1233
(S'\n__stdcall emit_try_help()\n'
p1234
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p1235
S'PUSH RBX\nMOV RBX,qword ptr [0x0060e360]\nXOR EDI,EDI\nMOV ESI,0x409b11\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOV RCX,qword ptr [0x0060e3b8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401cd0\n'
p1236
S'53\n48 8b 1d e8 c3 20 00\n31 ff\nbe 11 9b 40 00\nba 05 00 00 00\ne8 d7 f9 ff ff\n48 89 c2\n48 8b 0d 25 c4 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 2d fd ff ff\n'
p1237
S'.text:0000000000401f70\n.text:0000000000401f71\n.text:0000000000401f78\n.text:0000000000401f7a\n.text:0000000000401f7f\n.text:0000000000401f84\n.text:0000000000401f89\n.text:0000000000401f8c\n.text:0000000000401f93\n.text:0000000000401f98\n.text:0000000000401f9a\n.text:0000000000401f9d\n.text:0000000000401f9e\n'
p1238
tp1239
sS'strrchr'
p1240
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p1241
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_0060e100)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1242
S'JMP qword ptr [0x0060e100]\n'
p1243
S'ff 25 ea c6 20 00\n'
p1244
S'.plt:0000000000401a10\n'
p1245
tp1246
sS'quotearg_alloc_mem'
p1247
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p1248
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p1249
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x60e3c0\nCMOVNZ R12,RCX\nCALL 0x00401890\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004051d0\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00406f20\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004051d0\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x00405efa\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1250
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc c0 e3 60 00\n4c 0f 45 e1\ne8 38 ba ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 71 10 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1251
S'.text:0000000000405e20\n.text:0000000000405e21\n.text:0000000000405e23\n.text:0000000000405e25\n.text:0000000000405e27\n.text:0000000000405e29\n.text:0000000000405e2a\n.text:0000000000405e2e\n.text:0000000000405e31\n.text:0000000000405e36\n.text:0000000000405e39\n.text:0000000000405e3e\n.text:0000000000405e41\n.text:0000000000405e46\n.text:0000000000405e49\n.text:0000000000405e4f\n.text:0000000000405e53\n.text:0000000000405e58\n.text:0000000000405e5d\n.text:0000000000405e5f\n.text:0000000000405e63\n.text:0000000000405e65\n.text:0000000000405e68\n.text:0000000000405e6c\n.text:0000000000405e71\n.text:0000000000405e75\n.text:0000000000405e7a\n.text:0000000000405e7e\n.text:0000000000405e80\n.text:0000000000405e82\n.text:0000000000405e85\n.text:0000000000405e88\n.text:0000000000405e8b\n.text:0000000000405e90\n.text:0000000000405e95\n.text:0000000000405e97\n.text:0000000000405e9c\n.text:0000000000405ea0\n.text:0000000000405ea3\n.text:0000000000405ea7\n.text:0000000000405eaa\n.text:0000000000405eaf\n.text:0000000000405eb2\n.text:0000000000405eb6\n.text:0000000000405eba\n.text:0000000000405ebd\n.text:0000000000405ec0\n.text:0000000000405ec5\n.text:0000000000405eca\n.text:0000000000405ecd\n.text:0000000000405ed2\n.text:0000000000405ed7\n.text:0000000000405ed9\n.text:0000000000405ede\n.text:0000000000405ee3\n.text:0000000000405ee7\n.text:0000000000405eea\n.text:0000000000405eee\n.text:0000000000405ef3\n.text:0000000000405ef5\n.text:0000000000405ef7\n.text:0000000000405efa\n.text:0000000000405efd\n.text:0000000000405f01\n.text:0000000000405f02\n.text:0000000000405f04\n.text:0000000000405f06\n.text:0000000000405f08\n.text:0000000000405f0a\n.text:0000000000405f0b\n'
p1252
tp1253
sS'xalloc_die'
p1254
(S'\n__stdcall xalloc_die()\n'
p1255
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,&DAT_00409dd6,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1256
S'PUSH RBX\nMOV EBX,dword ptr [0x0060e2b0]\nXOR EDI,EDI\nMOV ESI,0x40ae8e\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x409dd6\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00401c30\nCALL 0x00401880\n'
p1257
S'53\n8b 1d c9 72 20 00\n31 ff\nbe 8e ae 40 00\nba 05 00 00 00\ne8 68 a9 ff ff\n48 89 c1\n31 f6\nba d6 9d 40 00\n31 c0\n89 df\ne8 25 ac ff ff\ne8 70 a8 ff ff\n'
p1258
S'.text:0000000000406fe0\n.text:0000000000406fe1\n.text:0000000000406fe7\n.text:0000000000406fe9\n.text:0000000000406fee\n.text:0000000000406ff3\n.text:0000000000406ff8\n.text:0000000000406ffb\n.text:0000000000406ffd\n.text:0000000000407002\n.text:0000000000407004\n.text:0000000000407006\n.text:000000000040700b\n'
p1259
tp1260
sS'quotearg_style_mem'
p1261
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p1262
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1263
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00406240\n'
p1264
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p1265
S'.text:00000000004062a0\n.text:00000000004062a3\n.text:00000000004062a6\n.text:00000000004062a8\n.text:00000000004062aa\n.text:00000000004062ac\n.text:00000000004062af\n.text:00000000004062b2\n'
p1266
tp1267
sS'memchr'
p1268
(S'\n__stdcall memchr(void * __s, int __c, size_t __n)\n'
p1269
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memchr(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memchr_0060e148)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1270
S'JMP qword ptr [0x0060e148]\n'
p1271
S'ff 25 a2 c6 20 00\n'
p1272
S'.plt:0000000000401aa0\n'
p1273
tp1274
sS'__sprintf_chk'
p1275
(S'\n__stdcall __sprintf_chk()\n'
p1276
V\u000avoid __sprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___sprintf_chk_0060e288)();\u000a  return;\u000a}\u000a\u000a
p1277
S'JMP qword ptr [0x0060e288]\n'
p1278
S'ff 25 62 c5 20 00\n'
p1279
S'.plt:0000000000401d20\n'
p1280
tp1281
sS'open_safer'
p1282
(S'\n__stdcall open_safer(char * file)\n'
p1283
V\u000a/* WARNING: Removing unreachable block (ram,0x00408e6e) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff58 : 0x00408e7c */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint open_safer(char *file,...)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  uint __oflag;\u000a  va_list ap;\u000a  uint local_a8;\u000a  \u000a  uVar2 = 0;\u000a  if ((__oflag & 0x40) != 0) {\u000a    uVar2 = (ulong)local_a8;\u000a  }\u000a  open(file,__oflag,uVar2);\u000a  iVar1 = fd_safer();\u000a  return iVar1;\u000a}\u000a\u000a
p1284
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00408e12\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nXOR EDX,EDX\nTEST SIL,0x40\nJZ 0x00408e7e\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RCX,dword ptr [RSP]\nCMP RCX,0x28\nJA 0x00408e6e\nMOV RAX,RCX\nADD RAX,qword ptr [RSP + 0x10]\nLEA ECX,[RCX + 0x8]\nMOV dword ptr [RSP],ECX\nJMP 0x00408e7c\nMOV RAX,qword ptr [RSP + 0x8]\nLEA RCX,[RAX + 0x8]\nMOV qword ptr [RSP + 0x8],RCX\nMOV EDX,dword ptr [RAX]\nXOR EAX,EAX\nCALL 0x00401c50\nMOV EDI,EAX\nCALL 0x00408ea0\nADD RSP,0xd8\nRET\n'
p1285
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n31 d2\n40 f6 c6 40\n74 50\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 0c 24\n48 83 f9 28\n77 10\n48 89 c8\n48 03 44 24 10\n8d 49 08\n89 0c 24\neb 0e\n48 8b 44 24 08\n48 8d 48 08\n48 89 4c 24 08\n8b 10\n31 c0\ne8 cb 8d ff ff\n89 c7\ne8 14 00 00 00\n48 81 c4 d8 00 00 00\nc3\n'
p1286
S'.text:0000000000408dd0\n.text:0000000000408dd7\n.text:0000000000408dd9\n.text:0000000000408ddb\n.text:0000000000408de0\n.text:0000000000408de5\n.text:0000000000408dea\n.text:0000000000408df2\n.text:0000000000408dfa\n.text:0000000000408e02\n.text:0000000000408e0a\n.text:0000000000408e12\n.text:0000000000408e17\n.text:0000000000408e1c\n.text:0000000000408e21\n.text:0000000000408e26\n.text:0000000000408e28\n.text:0000000000408e2c\n.text:0000000000408e2e\n.text:0000000000408e33\n.text:0000000000408e38\n.text:0000000000408e40\n.text:0000000000408e45\n.text:0000000000408e4d\n.text:0000000000408e54\n.text:0000000000408e58\n.text:0000000000408e5c\n.text:0000000000408e5e\n.text:0000000000408e61\n.text:0000000000408e66\n.text:0000000000408e69\n.text:0000000000408e6c\n.text:0000000000408e6e\n.text:0000000000408e73\n.text:0000000000408e77\n.text:0000000000408e7c\n.text:0000000000408e7e\n.text:0000000000408e80\n.text:0000000000408e85\n.text:0000000000408e87\n.text:0000000000408e8c\n.text:0000000000408e93\n'
p1287
tp1288
sS'quotearg_n_custom'
p1289
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p1290
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1291
S'MOV R8,-0x1\nJMP 0x004063c0\n'
p1292
S'49 c7 c0 ff ff ff ff\neb 07\n'
p1293
S'.text:00000000004063b0\n.text:00000000004063b7\n'
p1294
tp1295
sS'fd_safer'
p1296
(S'\n__stdcall fd_safer()\n'
p1297
V\u000aint fd_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int *piVar3;\u000a  uint __fd;\u000a  \u000a  if (__fd < 3) {\u000a    uVar2 = dup_safer();\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(__fd);\u000a    *piVar3 = iVar1;\u000a    __fd = uVar2;\u000a  }\u000a  return (int)__fd;\u000a}\u000a\u000a
p1298
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nCMP EBX,0x2\nJA 0x00408ed4\nMOV EDI,EBX\nCALL 0x004090b0\nMOV R14D,EAX\nCALL 0x00401890\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV EDI,EBX\nCALL 0x00401a80\nMOV dword ptr [RBP],R15D\nMOV EAX,R14D\nJMP 0x00408ed6\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1299
S'55\n41 57\n41 56\n53\n50\n89 fb\n83 fb 02\n77 26\n89 df\ne8 fb 01 00 00\n41 89 c6\ne8 d3 89 ff ff\n48 89 c5\n44 8b 7d 00\n89 df\ne8 b5 8b ff ff\n44 89 7d 00\n44 89 f0\neb 02\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1300
S'.text:0000000000408ea0\n.text:0000000000408ea1\n.text:0000000000408ea3\n.text:0000000000408ea5\n.text:0000000000408ea6\n.text:0000000000408ea7\n.text:0000000000408ea9\n.text:0000000000408eac\n.text:0000000000408eae\n.text:0000000000408eb0\n.text:0000000000408eb5\n.text:0000000000408eb8\n.text:0000000000408ebd\n.text:0000000000408ec0\n.text:0000000000408ec4\n.text:0000000000408ec6\n.text:0000000000408ecb\n.text:0000000000408ecf\n.text:0000000000408ed2\n.text:0000000000408ed4\n.text:0000000000408ed6\n.text:0000000000408eda\n.text:0000000000408edb\n.text:0000000000408edd\n.text:0000000000408edf\n.text:0000000000408ee0\n'
p1301
tp1302
sS'__freading'
p1303
(S'\n__stdcall __freading()\n'
p1304
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_0060e1e0)();\u000a  return;\u000a}\u000a\u000a
p1305
S'JMP qword ptr [0x0060e1e0]\n'
p1306
S'ff 25 0a c6 20 00\n'
p1307
S'.plt:0000000000401bd0\n'
p1308
tp1309
sS'ranged_convert'
p1310
(S'\n__stdcall ranged_convert(anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * t, tm * tp)\n'
p1311
V\u000atm * ranged_convert(tm *(*convert)(time_t *,tm *),time_t *t,tm *tp)\u000a\u000a{\u000a  tm *ptVar1;\u000a  ulong uVar2;\u000a  ulong a;\u000a  ulong uVar3;\u000a  ulong b;\u000a  undefined auVar4 [16];\u000a  \u000a  ptVar1 = (*convert)(t,tp);\u000a  if (ptVar1 == (tm *)0x0) {\u000a    b = *t;\u000a    if ((b == 0) || (b == ((long)b >> 0x3f | 1U))) {\u000a      ptVar1 = (tm *)0x0;\u000a    }\u000a    else {\u000a      a = 0;\u000a      do {\u000a        uVar2 = time_t_avg(a,b);\u000a        *t = uVar2;\u000a        auVar4 = (undefined  [16])(*convert)(t,tp);\u000a        ptVar1 = SUB168(auVar4,0);\u000a        uVar3 = uVar2;\u000a        if (ptVar1 == (tm *)0x0) {\u000a          uVar3 = a;\u000a          b = uVar2;\u000a        }\u000a        a = uVar3;\u000a      } while (b != ((long)b >> 0x3f | 1U) + uVar3);\u000a      if ((uVar3 != 0) && (ptVar1 == (tm *)0x0)) {\u000a        *t = uVar3;\u000a                    /* WARNING: Could not recover jumptable at 0x0040770f. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a        ptVar1 = (*convert)(t,tp);\u000a        return ptVar1;\u000a      }\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p1312
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nMOV RDI,R15\nMOV RSI,R14\nCALL RBX\nTEST RAX,RAX\nJNZ 0x0040768f\nMOV qword ptr [RSP],RBX\nMOV R12,qword ptr [R15]\nTEST R12,R12\nJZ 0x0040768d\nMOV RAX,R12\nSAR RAX,0x3f\nOR RAX,0x1\nCMP R12,RAX\nJNZ 0x0040769e\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EBX,EBX\nMOV RBP,qword ptr [RSP]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV R13,RBX\nMOV RDI,R13\nMOV RSI,R12\nCALL 0x004077a0\nMOV RBX,RAX\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nCALL RBP\nTEST RAX,RAX\nCMOVZ R12,RBX\nCMOVZ RBX,R13\nMOV RCX,R12\nSAR RCX,0x3f\nOR RCX,0x1\nADD RCX,RBX\nCMP R12,RCX\nJNZ 0x004076b0\nTEST RBX,RBX\nJZ 0x0040768f\nTEST RAX,RAX\nMOV RCX,qword ptr [RSP]\nJNZ 0x0040768f\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP RCX\n'
p1313
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f7\n48 89 fb\n4c 89 ff\n4c 89 f6\nff d3\n48 85 c0\n75 1e\n48 89 1c 24\n4d 8b 27\n4d 85 e4\n74 10\n4c 89 e0\n48 c1 f8 3f\n48 83 c8 01\n49 39 c4\n75 11\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n31 db\n48 8b 2c 24\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 89 dd\n4c 89 ef\n4c 89 e6\ne8 e2 00 00 00\n48 89 c3\n49 89 1f\n4c 89 ff\n4c 89 f6\nff d5\n48 85 c0\n4c 0f 44 e3\n49 0f 44 dd\n4c 89 e1\n48 c1 f9 3f\n48 83 c9 01\n48 01 d9\n49 39 cc\n75 c6\n48 85 db\n74 a0\n48 85 c0\n48 8b 0c 24\n75 97\n49 89 1f\n4c 89 ff\n4c 89 f6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nff e1\n'
p1314
S'.text:0000000000407650\n.text:0000000000407651\n.text:0000000000407653\n.text:0000000000407655\n.text:0000000000407657\n.text:0000000000407659\n.text:000000000040765a\n.text:000000000040765b\n.text:000000000040765e\n.text:0000000000407661\n.text:0000000000407664\n.text:0000000000407667\n.text:000000000040766a\n.text:000000000040766c\n.text:000000000040766f\n.text:0000000000407671\n.text:0000000000407675\n.text:0000000000407678\n.text:000000000040767b\n.text:000000000040767d\n.text:0000000000407680\n.text:0000000000407684\n.text:0000000000407688\n.text:000000000040768b\n.text:000000000040768d\n.text:000000000040768f\n.text:0000000000407693\n.text:0000000000407694\n.text:0000000000407696\n.text:0000000000407698\n.text:000000000040769a\n.text:000000000040769c\n.text:000000000040769d\n.text:000000000040769e\n.text:00000000004076a0\n.text:00000000004076a4\n.text:00000000004076b0\n.text:00000000004076b3\n.text:00000000004076b6\n.text:00000000004076b9\n.text:00000000004076be\n.text:00000000004076c1\n.text:00000000004076c4\n.text:00000000004076c7\n.text:00000000004076ca\n.text:00000000004076cc\n.text:00000000004076cf\n.text:00000000004076d3\n.text:00000000004076d7\n.text:00000000004076da\n.text:00000000004076de\n.text:00000000004076e2\n.text:00000000004076e5\n.text:00000000004076e8\n.text:00000000004076ea\n.text:00000000004076ed\n.text:00000000004076ef\n.text:00000000004076f2\n.text:00000000004076f6\n.text:00000000004076f8\n.text:00000000004076fb\n.text:00000000004076fe\n.text:0000000000407701\n.text:0000000000407705\n.text:0000000000407706\n.text:0000000000407708\n.text:000000000040770a\n.text:000000000040770c\n.text:000000000040770e\n.text:000000000040770f\n'
p1315
tp1316
sS'get_tz'
p1317
(S'\n__stdcall get_tz(char * tzbuf)\n'
p1318
V\u000achar * get_tz(char *tzbuf)\u000a\u000a{\u000a  char *__s;\u000a  size_t sVar1;\u000a  ulong s;\u000a  \u000a  __s = getenv("TZ");\u000a  if (__s == (char *)0x0) {\u000a    tzbuf = (char *)0x0;\u000a  }\u000a  else {\u000a    sVar1 = strlen(__s);\u000a    s = sVar1 + 1;\u000a    if (100 < s) {\u000a      __s = (char *)xmemdup(__s,s);\u000a      return __s;\u000a    }\u000a    memcpy(tzbuf,__s,s);\u000a  }\u000a  return tzbuf;\u000a}\u000a\u000a
p1319
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV EDI,0x40aed3\nCALL 0x00401840\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040482a\nMOV RDI,RBX\nCALL 0x00401980\nINC RAX\nCMP RAX,0x64\nJA 0x00404838\nMOV RDI,R14\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x00401b20\nJMP 0x0040482d\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RDI,RBX\nMOV RSI,RAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00406f90\n'
p1320
S'41 56\n53\n50\n49 89 fe\nbf d3 ae 40 00\ne8 3f d0 ff ff\n48 89 c3\n48 85 db\n74 21\n48 89 df\ne8 6f d1 ff ff\n48 ff c0\n48 83 f8 64\n77 1e\n4c 89 f7\n48 89 de\n48 89 c2\ne8 f8 d2 ff ff\neb 03\n45 31 f6\n4c 89 f0\n48 83 c4 08\n5b\n41 5e\nc3\n48 89 df\n48 89 c6\n48 83 c4 08\n5b\n41 5e\ne9 46 27 00 00\n'
p1321
S'.text:00000000004047f0\n.text:00000000004047f2\n.text:00000000004047f3\n.text:00000000004047f4\n.text:00000000004047f7\n.text:00000000004047fc\n.text:0000000000404801\n.text:0000000000404804\n.text:0000000000404807\n.text:0000000000404809\n.text:000000000040480c\n.text:0000000000404811\n.text:0000000000404814\n.text:0000000000404818\n.text:000000000040481a\n.text:000000000040481d\n.text:0000000000404820\n.text:0000000000404823\n.text:0000000000404828\n.text:000000000040482a\n.text:000000000040482d\n.text:0000000000404830\n.text:0000000000404834\n.text:0000000000404835\n.text:0000000000404837\n.text:0000000000404838\n.text:000000000040483b\n.text:000000000040483e\n.text:0000000000404842\n.text:0000000000404843\n.text:0000000000404845\n'
p1322
tp1323
sS'fputs_unlocked'
p1324
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p1325
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_0060e158)();\u000a  return iVar1;\u000a}\u000a\u000a
p1326
S'JMP qword ptr [0x0060e158]\n'
p1327
S'ff 25 92 c6 20 00\n'
p1328
S'.plt:0000000000401ac0\n'
p1329
tp1330
sS'main'
p1331
(S'\n__stdcall main(char * * argv)\n'
p1332
V\u000aint main(char **argv)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  ptrdiff_t pVar3;\u000a  tm *ptVar4;\u000a  uint *puVar5;\u000a  char *pcVar6;\u000a  undefined8 uVar7;\u000a  undefined7 extraout_var;\u000a  char *flex_date;\u000a  timespec *now;\u000a  byte bVar8;\u000a  uint uVar9;\u000a  int iVar10;\u000a  char **in_RSI;\u000a  timespec *result;\u000a  bool bVar11;\u000a  timespec notnow;\u000a  timespec notnow1;\u000a  stat ref_stats;\u000a  timespec local_e0;\u000a  timespec local_d0;\u000a  stat local_c0;\u000a  \u000a  set_program_name(*in_RSI);\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  bindtextdomain(0x409a07,"/usr/local/share/locale");\u000a  textdomain(0x409a07);\u000a  atexit(close_stdout);\u000a  change_times = 0;\u000a  use_ref = 0;\u000a  no_create = 0;\u000a  bVar11 = false;\u000a  flex_date = (char *)0x0;\u000a  do {\u000a    iVar10 = (int)((ulong)argv & 0xffffffff);\u000a    iVar2 = getopt_long((ulong)argv & 0xffffffff);\u000a    if (iVar2 < 0x61) {\u000a      if (iVar2 == -1) {\u000a        if (change_times == 0) {\u000a          change_times = 3;\u000a        }\u000a        if ((bVar11) && ((flex_date != (char *)0x0 | use_ref & 1) != 0)) goto LAB_00402675;\u000a        if ((use_ref & 1) == 0) {\u000a          if (flex_date != (char *)0x0) {\u000a            gettime((timespec *)&local_c0);\u000a            get_reldate(newtime,flex_date,(timespec *)&local_c0);\u000a            newtime[1].tv_sec = newtime[0].tv_sec;\u000a            newtime[1].tv_nsec = newtime[0].tv_nsec;\u000a            bVar11 = true;\u000a            if (((change_times == 3) && (newtime[0].tv_sec == local_c0.st_dev)) &&\u000a               (newtime[0].tv_nsec == local_c0.st_ino)) {\u000a              local_e0.tv_sec = local_c0.st_dev ^ 1;\u000a              local_e0.tv_nsec = local_c0.st_ino;\u000a              get_reldate(&local_d0,flex_date,&local_e0);\u000a              bVar11 = true;\u000a              if (local_d0.tv_sec == local_e0.tv_sec) {\u000a                bVar11 = local_d0.tv_nsec != local_e0.tv_nsec;\u000a              }\u000a            }\u000a          }\u000a          if (((bVar11) || (iVar10 - optind < 2)) ||\u000a             ((iVar2 = posix2_version(), 0x30daf < iVar2 ||\u000a              (_Var1 = posixtime((time_t *)newtime,in_RSI[(long)optind]), _Var1 == false)))) {\u000a            if (!bVar11) {\u000a              if (change_times == 3) {\u000a                amtime_now = 1;\u000a              }\u000a              else {\u000a                newtime[0] = (timespec)CONCAT88(0x3fffffff,newtime[0].tv_sec);\u000a                newtime[1] = (timespec)CONCAT88(0x3fffffff,newtime[1].tv_sec);\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            newtime[0].tv_nsec = 0;\u000a            newtime[1].tv_sec = newtime[0].tv_sec;\u000a            newtime[1].tv_nsec = 0;\u000a            flex_date = getenv("POSIXLY_CORRECT");\u000a            if ((flex_date == (char *)0x0) &&\u000a               (ptVar4 = localtime((time_t *)newtime), ptVar4 != (tm *)0x0)) {\u000a              uVar7 = dcgettext(0,\u000a                                "warning: \u005c'touch %s\u005c' is obsolete; use \u005c'touch -t %04ld%02d%02d%02d%02d.%02d\u005c'"\u000a                                ,5);\u000a              error(0,0,uVar7,in_RSI[(long)optind],(long)ptVar4->tm_year + 0x76c,\u000a                    (ulong)(ptVar4->tm_mon + 1),(ulong)(uint)ptVar4->tm_mday,\u000a                    (ulong)(uint)ptVar4->tm_hour,(ulong)(uint)ptVar4->tm_min,\u000a                    (ulong)(uint)ptVar4->tm_sec);\u000a            }\u000a            optind = optind + 1;\u000a          }\u000a        }\u000a        else {\u000a          if (no_dereference == 1) {\u000a            iVar2 = lstat(ref_file,(stat *)&local_c0);\u000a          }\u000a          else {\u000a            iVar2 = stat(ref_file,(stat *)&local_c0);\u000a          }\u000a          if (iVar2 != 0) {\u000a            puVar5 = (uint *)__errno_location();\u000a            uVar9 = *puVar5;\u000a            uVar7 = dcgettext(0,"failed to get attributes of %s",5);\u000a            pcVar6 = quotearg_style((char *)0x4);\u000a            error(1,(ulong)uVar9,uVar7,pcVar6);\u000a          }\u000a          newtime[0] = get_stat_atime(&local_c0);\u000a          newtime[1] = get_stat_mtime(&local_c0);\u000a          if (flex_date != (char *)0x0) {\u000a            if ((change_times & 1U) != 0) {\u000a              get_reldate(newtime,flex_date,newtime);\u000a            }\u000a            if ((change_times & 2U) != 0) {\u000a              get_reldate(newtime + 1,flex_date,newtime + 1);\u000a            }\u000a          }\u000a        }\u000a        if (optind != iVar10) {\u000a          if (optind < iVar10) {\u000a            bVar8 = 1;\u000a            do {\u000a              _Var1 = touch(in_RSI[(long)optind]);\u000a              bVar8 = bVar8 & _Var1;\u000a              optind = optind + 1;\u000a            } while (optind < iVar10);\u000a            uVar9 = (uint)(bVar8 ^ 1);\u000a          }\u000a          else {\u000a            uVar9 = 0;\u000a          }\u000a          newtime[1].tv_nsec = SUB168((undefined  [16])newtime[1] >> 0x40,0);\u000a          newtime[0].tv_nsec = SUB168((undefined  [16])newtime[0] >> 0x40,0);\u000a          return (int)uVar9;\u000a        }\u000a        flex_date = "missing file operand";\u000a        goto LAB_00402685;\u000a      }\u000a      if (iVar2 != -0x83) {\u000a        if (iVar2 != -0x82) goto switchD_004021ec_caseD_62;\u000a        usage(0);\u000a      }\u000a      version_etc(stdout,"touch","GNU coreutils",Version,"Paul Rubin","Arnold Robbins","Jim Kingdon"\u000a                  ,"David MacKenzie","Randy Smith",0);\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(0);\u000a    }\u000a    switch(iVar2) {\u000a    case 0x61:\u000a      change_times = change_times | 1;\u000a      break;\u000a    default:\u000aswitchD_004021ec_caseD_62:\u000a      usage(1);\u000aLAB_00402675:\u000a      flex_date = "cannot specify times from more than one source";\u000aLAB_00402685:\u000a      uVar7 = dcgettext(0,flex_date,5);\u000a      flex_date = (char *)0x0;\u000a      error(0,0,uVar7,uVar7);\u000a      result = (timespec *)0x1;\u000a      usage();\u000a      _Var1 = parse_datetime(result,flex_date,now);\u000a      if (_Var1 != false) {\u000a        return (int)CONCAT71(extraout_var,_Var1);\u000a      }\u000a      uVar7 = dcgettext(0,"invalid date format %s",5);\u000a      flex_date = quote(flex_date);\u000a      iVar2 = error(1,0,uVar7,flex_date);\u000a      return iVar2;\u000a    case 99:\u000a      no_create = 1;\u000a      break;\u000a    case 100:\u000a      flex_date = optarg;\u000a      break;\u000a    case 0x66:\u000a      break;\u000a    case 0x68:\u000a      no_dereference = 1;\u000a      break;\u000a    case 0x6d:\u000a      change_times = change_times | 2;\u000a      break;\u000a    case 0x72:\u000a      use_ref = 1;\u000a      ref_file = optarg;\u000a      break;\u000a    case 0x74:\u000a      _Var1 = posixtime((time_t *)newtime,optarg);\u000a      if (_Var1 == false) {\u000a        uVar7 = dcgettext(0,"invalid date format %s",5);\u000a        pcVar6 = quote(optarg);\u000a        error(1,0,uVar7,pcVar6);\u000a      }\u000a      newtime[0].tv_nsec = 0;\u000a      newtime[1].tv_sec = newtime[0].tv_sec;\u000a      newtime[1].tv_nsec = 0;\u000a      bVar11 = true;\u000a      break;\u000a    case 0x80:\u000a      pVar3 = __xargmatch_internal("--time",optarg,time_args,(char *)time_masks,4,argmatch_die);\u000a      change_times = change_times | time_masks[pVar3];\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p1333
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xb8\nMOV R13,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [R13]\nCALL 0x00404fb0\nMOV EDI,0x6\nMOV ESI,0x40b809\nCALL 0x00401c10\nMOV EDI,0x409a07\nMOV ESI,0x4099c1\nCALL 0x00401950\nMOV EDI,0x409a07\nCALL 0x00401930\nMOV EDI,0x402c30\nCALL 0x00409140\nMOV dword ptr [0x0060e370],0x0\nMOV byte ptr [0x0060e374],0x0\nMOV byte ptr [0x0060e375],0x0\nXOR R14D,R14D\nXOR R15D,R15D\nJMP 0x004021c0\nMOV RSI,qword ptr [0x0060e338]\nMOV R9,qword ptr [0x0060e2a8]\nMOV EDI,0x4099fc\nMOV EDX,0x409400\nMOV ECX,0x4093e0\nMOV R8D,0x4\nCALL 0x00402b30\nMOV EAX,dword ptr [0x4093e0 + RAX*0x4]\nOR dword ptr [0x0060e370],EAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDX,0x4099d9\nMOV ECX,0x4092e0\nXOR R8D,R8D\nMOV EDI,EBP\nMOV RSI,R13\nCALL 0x004019c0\nCMP EAX,0x60\nJLE 0x004022a6\nADD EAX,-0x61\nCMP EAX,0x1f\nJA 0x0040266b\nJMP qword ptr [0x4091e0 + RAX*0x8]\nOR byte ptr [0x0060e370],0x1\nJMP 0x004021c0\nMOV byte ptr [0x0060e375],0x1\nJMP 0x004021c0\nMOV R14,qword ptr [0x0060e338]\nJMP 0x004021c0\nMOV byte ptr [0x0060e376],0x1\nJMP 0x004021c0\nOR byte ptr [0x0060e370],0x2\nJMP 0x004021c0\nMOV byte ptr [0x0060e374],0x1\nMOV RAX,qword ptr [0x0060e338]\nMOV qword ptr [0x0060e378],RAX\nJMP 0x004021c0\nMOV RSI,qword ptr [0x0060e338]\nMOV EDI,0x60e380\nMOV EDX,0xd\nCALL 0x00404c30\nTEST AL,AL\nJNZ 0x00402285\nXOR EDI,EDI\nMOV ESI,0x4099e5\nMOV EDX,0x5\nCALL 0x00401960\nMOV R15,RAX\nMOV RDI,qword ptr [0x0060e338]\nCALL 0x004064a0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R15\nCALL 0x00401c30\nMOV qword ptr [0x0060e388],0x0\nMOVAPS XMM0,xmmword ptr [0x0060e380]\nMOVAPS xmmword ptr [0x0060e390],XMM0\nMOV R15B,0x1\nJMP 0x004021c0\nCMP EAX,-0x1\nJNZ 0x0040260c\nCMP dword ptr [0x0060e370],0x0\nJNZ 0x004022c2\nMOV dword ptr [0x0060e370],0x3\nMOV AL,byte ptr [0x0060e374]\nTEST R14,R14\nSETNZ CL\nTEST R15B,R15B\nJZ 0x004022de\nOR CL,AL\nTEST CL,0x1\nJNZ 0x00402675\nTEST AL,0x1\nJZ 0x0040230d\nMOV RDI,qword ptr [0x0060e378]\nCMP byte ptr [0x0060e376],0x1\nJNZ 0x004024d8\nLEA RSI,[RSP + 0x28]\nCALL 0x00409190\nTEST EAX,EAX\nJNZ 0x004024e6\nJMP 0x00402528\nTEST R14,R14\nJZ 0x004023b0\nLEA R15,[RSP + 0x28]\nMOV RDI,R15\nCALL 0x00402dd0\nMOV EDI,0x60e380\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004026b0\nMOVAPS XMM0,xmmword ptr [0x0060e380]\nMOVAPS xmmword ptr [0x0060e390],XMM0\nMOV R15B,0x1\nCMP dword ptr [0x0060e370],0x3\nJNZ 0x004023b0\nMOV RAX,qword ptr [0x0060e380]\nCMP RAX,qword ptr [RSP + 0x28]\nJNZ 0x004023b0\nMOV RAX,qword ptr [0x0060e388]\nCMP RAX,qword ptr [RSP + 0x30]\nJNZ 0x004023b0\nMOV RAX,qword ptr [RSP + 0x28]\nXOR RAX,0x1\nMOV qword ptr [RSP + 0x8],RAX\nMOV RAX,qword ptr [RSP + 0x30]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RDI,[RSP + 0x18]\nLEA RDX,[RSP + 0x8]\nMOV RSI,R14\nCALL 0x004026b0\nMOV RAX,qword ptr [RSP + 0x18]\nMOV R15B,0x1\nCMP RAX,qword ptr [RSP + 0x8]\nJNZ 0x004023b0\nMOV RAX,qword ptr [RSP + 0x20]\nCMP RAX,qword ptr [RSP + 0x10]\nSETNZ R15B\nTEST R15B,0x1\nJNZ 0x004024a9\nMOV EAX,EBP\nSUB EAX,dword ptr [0x0060e330]\nCMP EAX,0x2\nJL 0x004024a9\nCALL 0x00404f50\nCMP EAX,0x30daf\nJG 0x004024a9\nMOVSXD RAX,dword ptr [0x0060e330]\nMOV RSI,qword ptr [R13 + RAX*0x8]\nMOV EDI,0x60e380\nMOV EDX,0x12\nCALL 0x00404c30\nTEST AL,AL\nJZ 0x004024a9\nMOV qword ptr [0x0060e388],0x0\nMOVAPS XMM0,xmmword ptr [0x0060e380]\nMOVAPS xmmword ptr [0x0060e390],XMM0\nMOV EDI,0x409aa1\nCALL 0x00401840\nTEST RAX,RAX\nJNZ 0x00402492\nMOV EDI,0x60e380\nCALL 0x00401870\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00402492\nXOR EDI,EDI\nMOV ESI,0x409ab1\nMOV EDX,0x5\nCALL 0x00401960\nMOV RDX,RAX\nMOVSXD RAX,dword ptr [0x0060e330]\nMOV RCX,qword ptr [R13 + RAX*0x8]\nMOVSXD R8,dword ptr [R14 + 0x14]\nADD R8,0x76c\nMOV R9D,dword ptr [R14 + 0x10]\nINC R9D\nMOV R10D,dword ptr [R14 + 0xc]\nMOV R11D,dword ptr [R14 + 0x8]\nMOV EBX,dword ptr [R14]\nMOV R14D,dword ptr [R14 + 0x4]\nXOR EDI,EDI\nXOR ESI,ESI\nMOV EAX,0x0\nPUSH RBX\nPUSH R14\nPUSH R11\nPUSH R10\nCALL 0x00401c30\nADD RSP,0x20\nINC dword ptr [0x0060e330]\nCMP dword ptr [0x0060e330],EBP\nJNZ 0x004025c3\nJMP 0x0040267e\nTEST R15B,0x1\nJNZ 0x004025b7\nCMP dword ptr [0x0060e370],0x3\nJNZ 0x004025a1\nMOV byte ptr [0x0060e3a0],0x1\nCMP dword ptr [0x0060e330],EBP\nJNZ 0x004025c3\nJMP 0x0040267e\nLEA RSI,[RSP + 0x28]\nCALL 0x00409170\nTEST EAX,EAX\nJZ 0x00402528\nCALL 0x00401890\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x409a82\nMOV EDX,0x5\nCALL 0x00401960\nMOV R12,RAX\nMOV RSI,qword ptr [0x0060e378]\nMOV EDI,0x4\nCALL 0x00406280\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,R12\nCALL 0x00401c30\nLEA R15,[RSP + 0x28]\nMOV RDI,R15\nCALL 0x004068f0\nMOV qword ptr [0x0060e380],RAX\nMOV qword ptr [0x0060e388],RDX\nMOV RDI,R15\nCALL 0x00406910\nMOV qword ptr [0x0060e390],RAX\nMOV qword ptr [0x0060e398],RDX\nTEST R14,R14\nJZ 0x004025b7\nTEST byte ptr [0x0060e370],0x1\nJZ 0x00402579\nMOV EDI,0x60e380\nMOV EDX,0x60e380\nMOV RSI,R14\nCALL 0x004026b0\nTEST byte ptr [0x0060e370],0x2\nJZ 0x004025b7\nMOV EDI,0x60e390\nMOV EDX,0x60e390\nMOV RSI,R14\nCALL 0x004026b0\nCMP dword ptr [0x0060e330],EBP\nJNZ 0x004025c3\nJMP 0x0040267e\nMOV qword ptr [0x0060e388],0x3fffffff\nMOV qword ptr [0x0060e398],0x3fffffff\nCMP dword ptr [0x0060e330],EBP\nJZ 0x0040267e\nMOV EAX,dword ptr [0x0060e330]\nCMP EAX,EBP\nJGE 0x004025f5\nMOV BL,0x1\nNOP\nCDQE\nMOV RDI,qword ptr [R13 + RAX*0x8]\nCALL 0x00402700\nAND BL,AL\nMOV EAX,dword ptr [0x0060e330]\nINC EAX\nMOV dword ptr [0x0060e330],EAX\nCMP EAX,EBP\nJL 0x004025d0\nXOR BL,0x1\nJMP 0x004025f7\nXOR EBX,EBX\nMOVZX EAX,BL\nADD RSP,0xb8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP EAX,0xffffff7d\nJZ 0x00402621\nCMP EAX,0xffffff7e\nJNZ 0x0040266b\nXOR EDI,EDI\nCALL 0x00401e30\nMOV RDI,qword ptr [0x0060e328]\nMOV RCX,qword ptr [0x0060e2a0]\nMOV ESI,0x4099bb\nMOV EDX,0x409a03\nMOV R8D,0x409a11\nMOV R9D,0x409a1c\nMOV EAX,0x0\nPUSH 0x0\nPUSH 0x409a47\nPUSH 0x409a37\nPUSH 0x409a2b\nCALL 0x00406d20\nADD RSP,0x20\nXOR EDI,EDI\nCALL 0x00401cb0\nMOV EDI,0x1\nCALL 0x00401e30\nXOR EDI,EDI\nMOV ESI,0x409a53\nJMP 0x00402685\nXOR EDI,EDI\nMOV ESI,0x409afc\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401c30\nMOV EDI,0x1\nCALL 0x00401e30\nNOP word ptr [RAX + RAX*0x1]\n'
p1334
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec b8 00 00 00\n49 89 f5\n89 fd\n49 8b 7d 00\ne8 81 2e 00 00\nbf 06 00 00 00\nbe 09 b8 40 00\ne8 d2 fa ff ff\nbf 07 9a 40 00\nbe c1 99 40 00\ne8 03 f8 ff ff\nbf 07 9a 40 00\ne8 d9 f7 ff ff\nbf 30 2c 40 00\ne8 df 6f 00 00\nc7 05 05 c2 20 00 00 00 00 00\nc6 05 02 c2 20 00 00\nc6 05 fc c1 20 00 00\n45 31 f6\n45 31 ff\neb 3f\n48 8b 35 b0 c1 20 00\n4c 8b 0d 19 c1 20 00\nbf fc 99 40 00\nba 00 94 40 00\nb9 e0 93 40 00\n41 b8 04 00 00 00\ne8 87 09 00 00\n8b 04 85 e0 93 40 00\n09 05 ba c1 20 00\n66 2e 0f 1f 84 00 00 00 00 00\nba d9 99 40 00\nb9 e0 92 40 00\n45 31 c0\n89 ef\n4c 89 ee\ne8 e9 f7 ff ff\n83 f8 60\n0f 8e c6 00 00 00\n83 c0 9f\n83 f8 1f\n0f 87 7f 04 00 00\nff 24 c5 e0 91 40 00\n80 0d 76 c1 20 00 01\neb c4\nc6 05 72 c1 20 00 01\neb bb\n4c 8b 35 2c c1 20 00\neb b2\nc6 05 61 c1 20 00 01\neb a9\n80 0d 52 c1 20 00 02\neb a0\nc6 05 4d c1 20 00 01\n48 8b 05 0a c1 20 00\n48 89 05 43 c1 20 00\neb 89\n48 8b 35 fa c0 20 00\nbf 80 e3 60 00\nba 0d 00 00 00\ne8 e3 29 00 00\n84 c0\n75 34\n31 ff\nbe e5 99 40 00\nba 05 00 00 00\ne8 fe f6 ff ff\n49 89 c7\n48 8b 3d cc c0 20 00\ne8 2f 42 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n4c 89 fa\ne8 ab f9 ff ff\n48 c7 05 f8 c0 20 00 00 00 00 00\n0f 28 05 e9 c0 20 00\n0f 29 05 f2 c0 20 00\n41 b7 01\ne9 1a ff ff ff\n83 f8 ff\n0f 85 5d 03 00 00\n83 3d ba c0 20 00 00\n75 0a\nc7 05 ae c0 20 00 03 00 00 00\n8a 05 ac c0 20 00\n4d 85 f6\n0f 95 c1\n45 84 ff\n74 0b\n08 c1\nf6 c1 01\n0f 85 97 03 00 00\na8 01\n74 2b\n48 8b 3d 8f c0 20 00\n80 3d 86 c0 20 00 01\n0f 85 e2 01 00 00\n48 8d 74 24 28\ne8 90 6e 00 00\n85 c0\n0f 85 de 01 00 00\ne9 1b 02 00 00\n4d 85 f6\n0f 84 9a 00 00 00\n4c 8d 7c 24 28\n4c 89 ff\ne8 ad 0a 00 00\nbf 80 e3 60 00\n4c 89 f6\n4c 89 fa\ne8 7d 03 00 00\n0f 28 05 46 c0 20 00\n0f 29 05 4f c0 20 00\n41 b7 01\n83 3d 25 c0 20 00 03\n75 63\n48 8b 05 2c c0 20 00\n48 3b 44 24 28\n75 55\n48 8b 05 26 c0 20 00\n48 3b 44 24 30\n75 47\n48 8b 44 24 28\n48 83 f0 01\n48 89 44 24 08\n48 8b 44 24 30\n48 89 44 24 10\n48 8d 7c 24 18\n48 8d 54 24 08\n4c 89 f6\ne8 1d 03 00 00\n48 8b 44 24 18\n41 b7 01\n48 3b 44 24 08\n75 0e\n48 8b 44 24 20\n48 3b 44 24 10\n41 0f 95 c7\n41 f6 c7 01\n0f 85 ef 00 00 00\n89 e8\n2b 05 6e bf 20 00\n83 f8 02\n0f 8c de 00 00 00\ne8 80 2b 00 00\n3d af 0d 03 00\n0f 8f ce 00 00 00\n48 63 05 4e bf 20 00\n49 8b 74 c5 00\nbf 80 e3 60 00\nba 12 00 00 00\ne8 3a 28 00 00\n84 c0\n0f 84 ab 00 00 00\n48 c7 05 7f bf 20 00 00 00 00 00\n0f 28 05 70 bf 20 00\n0f 29 05 79 bf 20 00\nbf a1 9a 40 00\ne8 1f f4 ff ff\n48 85 c0\n75 6c\nbf 80 e3 60 00\ne8 40 f4 ff ff\n49 89 c6\n4d 85 f6\n74 5a\n31 ff\nbe b1 9a 40 00\nba 05 00 00 00\ne8 17 f5 ff ff\n48 89 c2\n48 63 05 dd be 20 00\n49 8b 4c c5 00\n4d 63 46 14\n49 81 c0 6c 07 00 00\n45 8b 4e 10\n41 ff c1\n45 8b 56 0c\n45 8b 5e 08\n41 8b 1e\n45 8b 76 04\n31 ff\n31 f6\nb8 00 00 00 00\n53\n41 56\n41 53\n41 52\ne8 a2 f7 ff ff\n48 83 c4 20\nff 05 98 be 20 00\n39 2d 92 be 20 00\n0f 85 1f 01 00 00\ne9 d5 01 00 00\n41 f6 c7 01\n0f 85 04 01 00 00\n83 3d b6 be 20 00 03\n0f 85 e1 00 00 00\nc6 05 d9 be 20 00 01\n39 2d 63 be 20 00\n0f 85 f0 00 00 00\ne9 a6 01 00 00\n48 8d 74 24 28\ne8 8e 6c 00 00\n85 c0\n74 42\ne8 a5 f3 ff ff\n44 8b 38\n31 ff\nbe 82 9a 40 00\nba 05 00 00 00\ne8 61 f4 ff ff\n49 89 c4\n48 8b 35 6f be 20 00\nbf 04 00 00 00\ne8 6d 3d 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n44 89 fe\n4c 89 e2\ne8 08 f7 ff ff\n4c 8d 7c 24 28\n4c 89 ff\ne8 bb 43 00 00\n48 89 05 44 be 20 00\n48 89 15 45 be 20 00\n4c 89 ff\ne8 c5 43 00 00\n48 89 05 3e be 20 00\n48 89 15 3f be 20 00\n4d 85 f6\n74 59\nf6 05 0b be 20 00 01\n74 12\nbf 80 e3 60 00\nba 80 e3 60 00\n4c 89 f6\ne8 37 01 00 00\nf6 05 f0 bd 20 00 02\n74 35\nbf 90 e3 60 00\nba 90 e3 60 00\n4c 89 f6\ne8 1c 01 00 00\n39 2d 96 bd 20 00\n75 27\ne9 dd 00 00 00\n48 c7 05 dc bd 20 00 ff ff ff 3f\n48 c7 05 e1 bd 20 00 ff ff ff 3f\n39 2d 73 bd 20 00\n0f 84 bb 00 00 00\n8b 05 67 bd 20 00\n39 e8\n7d 28\nb3 01\n90\n48 98\n49 8b 7c c5 00\ne8 24 01 00 00\n20 c3\n8b 05 4c bd 20 00\nff c0\n89 05 44 bd 20 00\n39 e8\n7c e0\n80 f3 01\neb 02\n31 db\n0f b6 c3\n48 81 c4 b8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n3d 7d ff ff ff\n74 0e\n3d 7e ff ff ff\n75 51\n31 ff\ne8 0f f8 ff ff\n48 8b 3d 00 bd 20 00\n48 8b 0d 71 bc 20 00\nbe bb 99 40 00\nba 03 9a 40 00\n41 b8 11 9a 40 00\n41 b9 1c 9a 40 00\nb8 00 00 00 00\n6a 00\n68 47 9a 40 00\n68 37 9a 40 00\n68 2b 9a 40 00\ne8 c0 46 00 00\n48 83 c4 20\n31 ff\ne8 45 f6 ff ff\nbf 01 00 00 00\ne8 bb f7 ff ff\n31 ff\nbe 53 9a 40 00\neb 07\n31 ff\nbe fc 9a 40 00\nba 05 00 00 00\ne8 d1 f2 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 90 f5 ff ff\nbf 01 00 00 00\ne8 86 f7 ff ff\n66 0f 1f 44 00 00\n'
p1335
S'.text:0000000000402110\n.text:0000000000402111\n.text:0000000000402113\n.text:0000000000402115\n.text:0000000000402117\n.text:0000000000402119\n.text:000000000040211a\n.text:0000000000402121\n.text:0000000000402124\n.text:0000000000402126\n.text:000000000040212a\n.text:000000000040212f\n.text:0000000000402134\n.text:0000000000402139\n.text:000000000040213e\n.text:0000000000402143\n.text:0000000000402148\n.text:000000000040214d\n.text:0000000000402152\n.text:0000000000402157\n.text:000000000040215c\n.text:0000000000402161\n.text:000000000040216b\n.text:0000000000402172\n.text:0000000000402179\n.text:000000000040217c\n.text:000000000040217f\n.text:0000000000402181\n.text:0000000000402188\n.text:000000000040218f\n.text:0000000000402194\n.text:0000000000402199\n.text:000000000040219e\n.text:00000000004021a4\n.text:00000000004021a9\n.text:00000000004021b0\n.text:00000000004021b6\n.text:00000000004021c0\n.text:00000000004021c5\n.text:00000000004021ca\n.text:00000000004021cd\n.text:00000000004021cf\n.text:00000000004021d2\n.text:00000000004021d7\n.text:00000000004021da\n.text:00000000004021e0\n.text:00000000004021e3\n.text:00000000004021e6\n.text:00000000004021ec\n.text:00000000004021f3\n.text:00000000004021fa\n.text:00000000004021fc\n.text:0000000000402203\n.text:0000000000402205\n.text:000000000040220c\n.text:000000000040220e\n.text:0000000000402215\n.text:0000000000402217\n.text:000000000040221e\n.text:0000000000402220\n.text:0000000000402227\n.text:000000000040222e\n.text:0000000000402235\n.text:0000000000402237\n.text:000000000040223e\n.text:0000000000402243\n.text:0000000000402248\n.text:000000000040224d\n.text:000000000040224f\n.text:0000000000402251\n.text:0000000000402253\n.text:0000000000402258\n.text:000000000040225d\n.text:0000000000402262\n.text:0000000000402265\n.text:000000000040226c\n.text:0000000000402271\n.text:0000000000402274\n.text:0000000000402279\n.text:000000000040227b\n.text:000000000040227d\n.text:0000000000402280\n.text:0000000000402285\n.text:0000000000402290\n.text:0000000000402297\n.text:000000000040229e\n.text:00000000004022a1\n.text:00000000004022a6\n.text:00000000004022a9\n.text:00000000004022af\n.text:00000000004022b6\n.text:00000000004022b8\n.text:00000000004022c2\n.text:00000000004022c8\n.text:00000000004022cb\n.text:00000000004022ce\n.text:00000000004022d1\n.text:00000000004022d3\n.text:00000000004022d5\n.text:00000000004022d8\n.text:00000000004022de\n.text:00000000004022e0\n.text:00000000004022e2\n.text:00000000004022e9\n.text:00000000004022f0\n.text:00000000004022f6\n.text:00000000004022fb\n.text:0000000000402300\n.text:0000000000402302\n.text:0000000000402308\n.text:000000000040230d\n.text:0000000000402310\n.text:0000000000402316\n.text:000000000040231b\n.text:000000000040231e\n.text:0000000000402323\n.text:0000000000402328\n.text:000000000040232b\n.text:000000000040232e\n.text:0000000000402333\n.text:000000000040233a\n.text:0000000000402341\n.text:0000000000402344\n.text:000000000040234b\n.text:000000000040234d\n.text:0000000000402354\n.text:0000000000402359\n.text:000000000040235b\n.text:0000000000402362\n.text:0000000000402367\n.text:0000000000402369\n.text:000000000040236e\n.text:0000000000402372\n.text:0000000000402377\n.text:000000000040237c\n.text:0000000000402381\n.text:0000000000402386\n.text:000000000040238b\n.text:000000000040238e\n.text:0000000000402393\n.text:0000000000402398\n.text:000000000040239b\n.text:00000000004023a0\n.text:00000000004023a2\n.text:00000000004023a7\n.text:00000000004023ac\n.text:00000000004023b0\n.text:00000000004023b4\n.text:00000000004023ba\n.text:00000000004023bc\n.text:00000000004023c2\n.text:00000000004023c5\n.text:00000000004023cb\n.text:00000000004023d0\n.text:00000000004023d5\n.text:00000000004023db\n.text:00000000004023e2\n.text:00000000004023e7\n.text:00000000004023ec\n.text:00000000004023f1\n.text:00000000004023f6\n.text:00000000004023f8\n.text:00000000004023fe\n.text:0000000000402409\n.text:0000000000402410\n.text:0000000000402417\n.text:000000000040241c\n.text:0000000000402421\n.text:0000000000402424\n.text:0000000000402426\n.text:000000000040242b\n.text:0000000000402430\n.text:0000000000402433\n.text:0000000000402436\n.text:0000000000402438\n.text:000000000040243a\n.text:000000000040243f\n.text:0000000000402444\n.text:0000000000402449\n.text:000000000040244c\n.text:0000000000402453\n.text:0000000000402458\n.text:000000000040245c\n.text:0000000000402463\n.text:0000000000402467\n.text:000000000040246a\n.text:000000000040246e\n.text:0000000000402472\n.text:0000000000402475\n.text:0000000000402479\n.text:000000000040247b\n.text:000000000040247d\n.text:0000000000402482\n.text:0000000000402483\n.text:0000000000402485\n.text:0000000000402487\n.text:0000000000402489\n.text:000000000040248e\n.text:0000000000402492\n.text:0000000000402498\n.text:000000000040249e\n.text:00000000004024a4\n.text:00000000004024a9\n.text:00000000004024ad\n.text:00000000004024b3\n.text:00000000004024ba\n.text:00000000004024c0\n.text:00000000004024c7\n.text:00000000004024cd\n.text:00000000004024d3\n.text:00000000004024d8\n.text:00000000004024dd\n.text:00000000004024e2\n.text:00000000004024e4\n.text:00000000004024e6\n.text:00000000004024eb\n.text:00000000004024ee\n.text:00000000004024f0\n.text:00000000004024f5\n.text:00000000004024fa\n.text:00000000004024ff\n.text:0000000000402502\n.text:0000000000402509\n.text:000000000040250e\n.text:0000000000402513\n.text:0000000000402516\n.text:000000000040251b\n.text:000000000040251d\n.text:0000000000402520\n.text:0000000000402523\n.text:0000000000402528\n.text:000000000040252d\n.text:0000000000402530\n.text:0000000000402535\n.text:000000000040253c\n.text:0000000000402543\n.text:0000000000402546\n.text:000000000040254b\n.text:0000000000402552\n.text:0000000000402559\n.text:000000000040255c\n.text:000000000040255e\n.text:0000000000402565\n.text:0000000000402567\n.text:000000000040256c\n.text:0000000000402571\n.text:0000000000402574\n.text:0000000000402579\n.text:0000000000402580\n.text:0000000000402582\n.text:0000000000402587\n.text:000000000040258c\n.text:000000000040258f\n.text:0000000000402594\n.text:000000000040259a\n.text:000000000040259c\n.text:00000000004025a1\n.text:00000000004025ac\n.text:00000000004025b7\n.text:00000000004025bd\n.text:00000000004025c3\n.text:00000000004025c9\n.text:00000000004025cb\n.text:00000000004025cd\n.text:00000000004025cf\n.text:00000000004025d0\n.text:00000000004025d2\n.text:00000000004025d7\n.text:00000000004025dc\n.text:00000000004025de\n.text:00000000004025e4\n.text:00000000004025e6\n.text:00000000004025ec\n.text:00000000004025ee\n.text:00000000004025f0\n.text:00000000004025f3\n.text:00000000004025f5\n.text:00000000004025f7\n.text:00000000004025fa\n.text:0000000000402601\n.text:0000000000402602\n.text:0000000000402604\n.text:0000000000402606\n.text:0000000000402608\n.text:000000000040260a\n.text:000000000040260b\n.text:000000000040260c\n.text:0000000000402611\n.text:0000000000402613\n.text:0000000000402618\n.text:000000000040261a\n.text:000000000040261c\n.text:0000000000402621\n.text:0000000000402628\n.text:000000000040262f\n.text:0000000000402634\n.text:0000000000402639\n.text:000000000040263f\n.text:0000000000402645\n.text:000000000040264a\n.text:000000000040264c\n.text:0000000000402651\n.text:0000000000402656\n.text:000000000040265b\n.text:0000000000402660\n.text:0000000000402664\n.text:0000000000402666\n.text:000000000040266b\n.text:0000000000402670\n.text:0000000000402675\n.text:0000000000402677\n.text:000000000040267c\n.text:000000000040267e\n.text:0000000000402680\n.text:0000000000402685\n.text:000000000040268a\n.text:000000000040268f\n.text:0000000000402692\n.text:0000000000402694\n.text:0000000000402696\n.text:0000000000402698\n.text:000000000040269b\n.text:00000000004026a0\n.text:00000000004026a5\n.text:00000000004026aa\n'
p1336
tp1337
sS'xcharalloc'
p1338
(S'\n__stdcall xcharalloc(size_t n)\n'
p1339
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1340
S'JMP 0x00406e50\n'
p1341
S'e9 2b ff ff ff\n'
p1342
S'.text:0000000000406f20\n'
p1343
tp1344
sS'c_isupper'
p1345
(S'\n__stdcall c_isupper()\n'
p1346
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1347
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1348
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1349
S'.text:0000000000407c20\n.text:0000000000407c23\n.text:0000000000407c26\n.text:0000000000407c29\n'
p1350
tp1351
sS'time_t_int_add_ok'
p1352
(S'\n__stdcall time_t_int_add_ok(time_t a)\n'
p1353
V\u000aint time_t_int_add_ok(time_t a)\u000a\u000a{\u000a  uint in_ESI;\u000a  \u000a  return (int)((uint)((ulong)((long)(int)(((uint)a & in_ESI & 1) + ((int)in_ESI >> 1)) + (a >> 1) +\u000a                             0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p1354
S'MOV EAX,EDI\nAND EAX,ESI\nSAR RDI,1\nSAR ESI,1\nAND EAX,0x1\nADD EAX,ESI\nMOVSXD RCX,EAX\nADD RCX,RDI\nMOV RAX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nRET\n'
p1355
S'89 f8\n21 f0\n48 d1 ff\nd1 fe\n83 e0 01\n01 f0\n48 63 c8\n48 01 f9\n48 b8 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\nc3\n'
p1356
S'.text:0000000000407740\n.text:0000000000407742\n.text:0000000000407744\n.text:0000000000407747\n.text:0000000000407749\n.text:000000000040774c\n.text:000000000040774e\n.text:0000000000407751\n.text:0000000000407754\n.text:000000000040775e\n.text:0000000000407761\n.text:0000000000407765\n.text:0000000000407768\n'
p1357
tp1358
sS'c_isalnum'
p1359
(S'\n__stdcall c_isalnum()\n'
p1360
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1361
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x00407b3b\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x00407b3b\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x00407b3a\nXOR EAX,EAX\nRET\n'
p1362
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p1363
S'.text:0000000000407b20\n.text:0000000000407b22\n.text:0000000000407b25\n.text:0000000000407b28\n.text:0000000000407b2a\n.text:0000000000407b34\n.text:0000000000407b38\n.text:0000000000407b3a\n.text:0000000000407b3b\n.text:0000000000407b3e\n.text:0000000000407b41\n.text:0000000000407b43\n.text:0000000000407b45\n'
p1364
tp1365
sS'__errno_location'
p1366
(S'\n__stdcall __errno_location()\n'
p1367
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_0060e040)();\u000a  return piVar1;\u000a}\u000a\u000a
p1368
S'JMP qword ptr [0x0060e040]\n'
p1369
S'ff 25 aa c7 20 00\n'
p1370
S'.plt:0000000000401890\n'
p1371
tp1372
sS'x2nrealloc'
p1373
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p1374
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p1375
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x00406eec\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00406f19\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x00406f0a\nTEST RCX,RCX\nJNZ 0x00406f0a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x00406e90\nPUSH RAX\nCALL 0x00406fe0\n'
p1376
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p1377
S'.text:0000000000406ec0\n.text:0000000000406ec3\n.text:0000000000406ec6\n.text:0000000000406ec9\n.text:0000000000406ecb\n.text:0000000000406ed5\n.text:0000000000406ed7\n.text:0000000000406eda\n.text:0000000000406edd\n.text:0000000000406edf\n.text:0000000000406ee2\n.text:0000000000406ee5\n.text:0000000000406eea\n.text:0000000000406eec\n.text:0000000000406eef\n.text:0000000000406ef1\n.text:0000000000406ef6\n.text:0000000000406ef8\n.text:0000000000406efb\n.text:0000000000406efd\n.text:0000000000406f04\n.text:0000000000406f07\n.text:0000000000406f0a\n.text:0000000000406f0d\n.text:0000000000406f11\n.text:0000000000406f14\n.text:0000000000406f19\n.text:0000000000406f1a\n'
p1378
tp1379
sS'quotearg_n_options'
p1380
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p1381
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p1382
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x00401890\nTEST R12D,R12D\nJS 0x00406161\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x0060e2b8]\nCMP dword ptr [0x0060e2c0],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x0040607b\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x60e2c8\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x00406e90\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x0060e2b8],R15\nJNZ 0x00406042\nMOVUPS XMM0,xmmword ptr [0x0060e2c8]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x0060e2c0]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x00401a50\nMOV dword ptr [0x0060e2c0],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x004051d0\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x004060dd\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x0040614b\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x60e400\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x00406108\nCALL 0x00401850\nMOV RDI,R15\nCALL 0x00406f20\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x004051d0\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401880\n'
p1383
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 c1 b8 ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 ce 82 20 00\n44 39 25 cf 82 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd c8 e2 60 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 68 0e 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d 83 82 20 00\n75 0b\n0f 10 05 8a 82 20 00\n41 0f 11 07\n8b 05 78 82 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 ed b9 ff ff\n89 1d 57 82 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 00 e4 60 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 48 b7 ff ff\n4c 89 ff\ne8 10 0e 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 1a b7 ff ff\n'
p1384
S'.text:0000000000405fb0\n.text:0000000000405fb1\n.text:0000000000405fb3\n.text:0000000000405fb5\n.text:0000000000405fb7\n.text:0000000000405fb9\n.text:0000000000405fba\n.text:0000000000405fbe\n.text:0000000000405fc1\n.text:0000000000405fc4\n.text:0000000000405fc7\n.text:0000000000405fca\n.text:0000000000405fcf\n.text:0000000000405fd2\n.text:0000000000405fd8\n.text:0000000000405fdd\n.text:0000000000405fdf\n.text:0000000000405fe3\n.text:0000000000405fea\n.text:0000000000405ff1\n.text:0000000000405ff6\n.text:0000000000405ffb\n.text:0000000000406000\n.text:0000000000406002\n.text:0000000000406007\n.text:000000000040600a\n.text:000000000040600d\n.text:0000000000406013\n.text:0000000000406015\n.text:0000000000406018\n.text:000000000040601c\n.text:000000000040601f\n.text:0000000000406023\n.text:0000000000406028\n.text:000000000040602b\n.text:000000000040602e\n.text:0000000000406035\n.text:0000000000406037\n.text:000000000040603e\n.text:0000000000406042\n.text:0000000000406048\n.text:000000000040604b\n.text:000000000040604f\n.text:0000000000406052\n.text:0000000000406055\n.text:0000000000406059\n.text:000000000040605b\n.text:000000000040605e\n.text:0000000000406063\n.text:0000000000406069\n.text:000000000040606c\n.text:0000000000406071\n.text:0000000000406076\n.text:000000000040607b\n.text:000000000040607e\n.text:0000000000406082\n.text:0000000000406086\n.text:000000000040608b\n.text:000000000040608f\n.text:0000000000406093\n.text:0000000000406097\n.text:000000000040609b\n.text:000000000040609f\n.text:00000000004060a4\n.text:00000000004060a7\n.text:00000000004060aa\n.text:00000000004060ad\n.text:00000000004060b2\n.text:00000000004060b5\n.text:00000000004060b8\n.text:00000000004060bb\n.text:00000000004060bc\n.text:00000000004060c1\n.text:00000000004060c5\n.text:00000000004060c8\n.text:00000000004060cb\n.text:00000000004060cd\n.text:00000000004060d2\n.text:00000000004060d6\n.text:00000000004060db\n.text:00000000004060dd\n.text:00000000004060e1\n.text:00000000004060e6\n.text:00000000004060e9\n.text:00000000004060ec\n.text:00000000004060f1\n.text:00000000004060f6\n.text:00000000004060f9\n.text:00000000004060fe\n.text:0000000000406101\n.text:0000000000406103\n.text:0000000000406108\n.text:000000000040610b\n.text:0000000000406110\n.text:0000000000406113\n.text:0000000000406116\n.text:000000000040611b\n.text:000000000040611e\n.text:0000000000406122\n.text:0000000000406125\n.text:0000000000406128\n.text:000000000040612d\n.text:0000000000406132\n.text:0000000000406137\n.text:000000000040613a\n.text:000000000040613d\n.text:000000000040613e\n.text:0000000000406143\n.text:0000000000406147\n.text:000000000040614b\n.text:000000000040614f\n.text:0000000000406152\n.text:0000000000406156\n.text:0000000000406157\n.text:0000000000406159\n.text:000000000040615b\n.text:000000000040615d\n.text:000000000040615f\n.text:0000000000406160\n.text:0000000000406161\n'
p1385
tp1386
sS'strcmp'
p1387
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1388
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_0060e178)();\u000a  return iVar1;\u000a}\u000a\u000a
p1389
S'JMP qword ptr [0x0060e178]\n'
p1390
S'ff 25 72 c6 20 00\n'
p1391
S'.plt:0000000000401b00\n'
p1392
tp1393
sS'set_custom_quoting'
p1394
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1395
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1396
S'TEST RDI,RDI\nMOV EAX,0x60e3c0\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x00405145\nTEST RDX,RDX\nJZ 0x00405145\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x00401880\n'
p1397
S'48 85 ff\nb8 c0 e3 60 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 35 c7 ff ff\n'
p1398
S'.text:0000000000405120\n.text:0000000000405123\n.text:0000000000405128\n.text:000000000040512c\n.text:0000000000405132\n.text:0000000000405135\n.text:0000000000405137\n.text:000000000040513a\n.text:000000000040513c\n.text:0000000000405140\n.text:0000000000405144\n.text:0000000000405145\n.text:0000000000405146\n'
p1399
tp1400
sS'c_isalpha'
p1401
(S'\n__stdcall c_isalpha()\n'
p1402
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1403
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x00407b6b\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1404
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1405
S'.text:0000000000407b50\n.text:0000000000407b53\n.text:0000000000407b56\n.text:0000000000407b58\n.text:0000000000407b62\n.text:0000000000407b64\n.text:0000000000407b67\n.text:0000000000407b6a\n.text:0000000000407b6b\n.text:0000000000407b6d\n'
p1406
tp1407
sS'quotearg_custom_mem'
p1408
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p1409
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1410
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x004063c0\n'
p1411
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p1412
S'.text:0000000000406450\n.text:0000000000406453\n.text:0000000000406456\n.text:0000000000406459\n.text:000000000040645c\n.text:000000000040645e\n.text:0000000000406461\n'
p1413
tp1414
sS'set_hhmmss'
p1415
(S'\n__stdcall set_hhmmss(parser_control * pc, long hour, long minutes, time_t sec, long nsec)\n'
p1416
V\u000avoid set_hhmmss(parser_control *pc,long hour,long minutes,time_t sec,long nsec)\u000a\u000a{\u000a  pc->hour = hour;\u000a  pc->minutes = minutes;\u000a  (pc->seconds).tv_sec = sec;\u000a  (pc->seconds).tv_nsec = nsec;\u000a  return;\u000a}\u000a\u000a
p1417
S'MOV qword ptr [RDI + 0x50],RSI\nMOV qword ptr [RDI + 0x58],RDX\nMOV qword ptr [RDI + 0x60],RCX\nMOV qword ptr [RDI + 0x68],R8\nRET\n'
p1418
S'48 89 77 50\n48 89 57 58\n48 89 4f 60\n4c 89 47 68\nc3\n'
p1419
S'.text:0000000000403c70\n.text:0000000000403c74\n.text:0000000000403c78\n.text:0000000000403c7c\n.text:0000000000403c80\n'
p1420
tp1421
sS'touch'
p1422
(S'\n__stdcall touch(char * file)\n'
p1423
V\u000a_Bool touch(char *file)\u000a\u000a{\u000a  uint uVar1;\u000a  timespec *ptVar2;\u000a  byte bVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint *puVar7;\u000a  int *piVar8;\u000a  undefined8 uVar9;\u000a  char *file_00;\u000a  \u000a  if ((*file == '-') && (file[1] == 0)) {\u000a    file_00 = (char *)0x1;\u000a    uVar4 = 0;\u000a  }\u000a  else {\u000a    file_00 = (char *)0xffffffff;\u000a    uVar4 = 0;\u000a    if ((no_create == 0) && (uVar4 = 0, no_dereference == 0)) {\u000a      uVar4 = fd_reopen((char *)0x0);\u000a      if (uVar4 == 0xffffffff) {\u000a        puVar7 = (uint *)__errno_location();\u000a        uVar1 = *puVar7;\u000a        if ((0x16 < uVar1) || (uVar4 = 0, (0x600002U >> (uVar1 & 0x1f) & 1) == 0)) {\u000a          uVar4 = uVar1;\u000a        }\u000a      }\u000a      else {\u000a        file_00 = (char *)(ulong)uVar4;\u000a        uVar4 = 0;\u000a      }\u000a    }\u000a  }\u000a  if (change_times == 1) {\u000a    ptVar2 = newtime + 1;\u000aLAB_004027b0:\u000a    ptVar2->tv_nsec = 0x3ffffffe;\u000a  }\u000a  else {\u000a    if (change_times == 2) {\u000a      ptVar2 = newtime;\u000a      goto LAB_004027b0;\u000a    }\u000a    if (change_times != 3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("change_times == CH_ATIME","src/touch.c",0x98,"_Bool touch(const char *)");\u000a    }\u000a  }\u000a  iVar5 = fdutimensat(file_00,(timespec *)0xffffff9c);\u000a  if ((int)file_00 == 0) {\u000a    iVar6 = close(0);\u000a    if (iVar6 != 0) {\u000a      puVar7 = (uint *)__errno_location();\u000a      uVar4 = *puVar7;\u000a      file_00 = "failed to close %s";\u000a      goto LAB_00402886;\u000a    }\u000aLAB_00402848:\u000a    if (iVar5 == 0) {\u000a      return true;\u000a    }\u000a  }\u000a  else {\u000a    if (((iVar5 == 0) || ((int)file_00 != 1)) || (piVar8 = __errno_location(), *piVar8 != 9))\u000a    goto LAB_00402848;\u000a    if (iVar5 == 0) {\u000a      return true;\u000a    }\u000a    if ((no_create & 1) != 0) {\u000a      return true;\u000a    }\u000a  }\u000a  bVar3 = no_create;\u000a  if (uVar4 == 0) {\u000a    puVar7 = (uint *)__errno_location();\u000a    uVar4 = *puVar7;\u000a    if ((bVar3 == 1) && (uVar4 == 2)) {\u000a      return true;\u000a    }\u000a    file_00 = "setting times of %s";\u000a  }\u000a  else {\u000a    file_00 = "cannot touch %s";\u000a  }\u000aLAB_00402886:\u000a  uVar9 = dcgettext(0,file_00,5);\u000a  file_00 = quotearg_style((char *)0x4);\u000a  error(0,(ulong)uVar4,uVar9,file_00);\u000a  return false;\u000a}\u000a\u000a
p1424
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R15,RDI\nCMP byte ptr [R15],0x2d\nJNZ 0x00402717\nCMP byte ptr [R15 + 0x1],0x0\nJZ 0x00402753\nMOV EBP,0xffffffff\nXOR R14D,R14D\nMOV AL,byte ptr [0x0060e375]\nTEST AL,AL\nJNZ 0x00402776\nMOV AL,byte ptr [0x0060e376]\nTEST AL,AL\nJNZ 0x00402776\nXOR R14D,R14D\nXOR EDI,EDI\nMOV EDX,0x941\nMOV ECX,0x1b6\nMOV RSI,R15\nCALL 0x00402cf0\nCMP EAX,-0x1\nJZ 0x0040275d\nMOV EBP,EAX\nJMP 0x00402776\nMOV EBP,0x1\nXOR R14D,R14D\nJMP 0x00402776\nCALL 0x00401890\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x16\nJA 0x00402773\nMOV ECX,0x600002\nBT ECX,EAX\nJC 0x00402776\nMOV R14D,EAX\nMOV EAX,dword ptr [0x0060e370]\nCMP EAX,0x1\nJZ 0x004027a4\nCMP EAX,0x2\nJZ 0x004027ab\nCMP EAX,0x3\nJZ 0x004027b7\nMOV EDI,0x409d04\nMOV ESI,0x409d1d\nMOV EDX,0x98\nMOV ECX,0x409d29\nCALL 0x00401a40\nMOV EAX,0x60e398\nJMP 0x004027b0\nMOV EAX,0x60e388\nMOV qword ptr [RAX],0x3ffffffe\nMOV AL,byte ptr [0x0060e3a0]\nMOV ECX,0x60e380\nXOR ESI,ESI\nTEST AL,AL\nCMOVNZ RCX,RSI\nCMP EBP,0x1\nMOV RDX,R15\nCMOVZ RDX,RSI\nMOVZX R8D,byte ptr [0x0060e376]\nSHL R8D,0x8\nCMP EBP,-0x1\nCMOVNZ R8D,ESI\nMOV ESI,0xffffff9c\nMOV EDI,EBP\nCALL 0x00402d50\nMOV EBX,EAX\nTEST EBP,EBP\nJZ 0x0040282a\nCMP EBP,0x1\nSETNZ AL\nTEST EBX,EBX\nJZ 0x00402848\nTEST AL,AL\nJNZ 0x00402848\nCALL 0x00401890\nCMP dword ptr [RAX],0x9\nJNZ 0x00402848\nTEST EBX,EBX\nMOV BPL,0x1\nJZ 0x004028b2\nTEST byte ptr [0x0060e375],0x1\nJZ 0x0040284c\nJMP 0x004028b2\nXOR EDI,EDI\nCALL 0x00401a80\nTEST EAX,EAX\nJZ 0x00402848\nCALL 0x00401890\nMOV R14D,dword ptr [RAX]\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x409d43\nJMP 0x00402886\nTEST EBX,EBX\nJZ 0x0040285c\nTEST R14D,R14D\nJZ 0x00402861\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x409d56\nJMP 0x00402886\nMOV BPL,0x1\nJMP 0x004028b2\nMOV BL,byte ptr [0x0060e375]\nCALL 0x00401890\nMOV R14D,dword ptr [RAX]\nCMP BL,0x1\nJNZ 0x0040287d\nMOV BPL,0x1\nCMP R14D,0x2\nJZ 0x004028b2\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x409d66\nMOV EDX,0x5\nCALL 0x00401960\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x00406280\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,RBX\nCALL 0x00401c30\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1425
S'55\n41 57\n41 56\n53\n50\n49 89 ff\n41 80 3f 2d\n75 07\n41 80 7f 01 00\n74 3c\nbd ff ff ff ff\n45 31 f6\n8a 05 50 bc 20 00\n84 c0\n75 4d\n8a 05 47 bc 20 00\n84 c0\n75 43\n45 31 f6\n31 ff\nba 41 09 00 00\nb9 b6 01 00 00\n4c 89 fe\ne8 a6 05 00 00\n83 f8 ff\n74 0e\n89 c5\neb 23\nbd 01 00 00 00\n45 31 f6\neb 19\ne8 2e f1 ff ff\n8b 00\n83 f8 16\n77 0a\nb9 02 00 60 00\n0f a3 c1\n72 03\n41 89 c6\n8b 05 f4 bb 20 00\n83 f8 01\n74 23\n83 f8 02\n74 25\n83 f8 03\n74 2c\nbf 04 9d 40 00\nbe 1d 9d 40 00\nba 98 00 00 00\nb9 29 9d 40 00\ne8 9c f2 ff ff\nb8 98 e3 60 00\neb 05\nb8 88 e3 60 00\n48 c7 00 fe ff ff 3f\n8a 05 e3 bb 20 00\nb9 80 e3 60 00\n31 f6\n84 c0\n48 0f 45 ce\n83 fd 01\n4c 89 fa\n48 0f 44 d6\n44 0f b6 05 9a bb 20 00\n41 c1 e0 08\n83 fd ff\n44 0f 45 c6\nbe 9c ff ff ff\n89 ef\ne8 5d 05 00 00\n89 c3\n85 ed\n74 31\n83 fd 01\n0f 95 c0\n85 db\n74 45\n84 c0\n75 41\ne8 84 f0 ff ff\n83 38 09\n75 37\n85 db\n40 b5 01\n0f 84 96 00 00 00\nf6 05 52 bb 20 00 01\n74 27\ne9 88 00 00 00\n31 ff\ne8 4f f2 ff ff\n85 c0\n74 13\ne8 56 f0 ff ff\n44 8b 30\n31 ed\n31 ff\nbe 43 9d 40 00\neb 3e\n85 db\n74 10\n45 85 f6\n74 10\n31 ed\n31 ff\nbe 56 9d 40 00\neb 2a\n40 b5 01\neb 51\n8a 1d 0e bb 20 00\ne8 24 f0 ff ff\n44 8b 30\n80 fb 01\n75 09\n40 b5 01\n41 83 fe 02\n74 35\n31 ed\n31 ff\nbe 66 9d 40 00\nba 05 00 00 00\ne8 d0 f0 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 e0 39 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n48 89 da\ne8 7e f3 ff ff\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1426
S'.text:0000000000402700\n.text:0000000000402701\n.text:0000000000402703\n.text:0000000000402705\n.text:0000000000402706\n.text:0000000000402707\n.text:000000000040270a\n.text:000000000040270e\n.text:0000000000402710\n.text:0000000000402715\n.text:0000000000402717\n.text:000000000040271c\n.text:000000000040271f\n.text:0000000000402725\n.text:0000000000402727\n.text:0000000000402729\n.text:000000000040272f\n.text:0000000000402731\n.text:0000000000402733\n.text:0000000000402736\n.text:0000000000402738\n.text:000000000040273d\n.text:0000000000402742\n.text:0000000000402745\n.text:000000000040274a\n.text:000000000040274d\n.text:000000000040274f\n.text:0000000000402751\n.text:0000000000402753\n.text:0000000000402758\n.text:000000000040275b\n.text:000000000040275d\n.text:0000000000402762\n.text:0000000000402764\n.text:0000000000402767\n.text:0000000000402769\n.text:000000000040276e\n.text:0000000000402771\n.text:0000000000402773\n.text:0000000000402776\n.text:000000000040277c\n.text:000000000040277f\n.text:0000000000402781\n.text:0000000000402784\n.text:0000000000402786\n.text:0000000000402789\n.text:000000000040278b\n.text:0000000000402790\n.text:0000000000402795\n.text:000000000040279a\n.text:000000000040279f\n.text:00000000004027a4\n.text:00000000004027a9\n.text:00000000004027ab\n.text:00000000004027b0\n.text:00000000004027b7\n.text:00000000004027bd\n.text:00000000004027c2\n.text:00000000004027c4\n.text:00000000004027c6\n.text:00000000004027ca\n.text:00000000004027cd\n.text:00000000004027d0\n.text:00000000004027d4\n.text:00000000004027dc\n.text:00000000004027e0\n.text:00000000004027e3\n.text:00000000004027e7\n.text:00000000004027ec\n.text:00000000004027ee\n.text:00000000004027f3\n.text:00000000004027f5\n.text:00000000004027f7\n.text:00000000004027f9\n.text:00000000004027fc\n.text:00000000004027ff\n.text:0000000000402801\n.text:0000000000402803\n.text:0000000000402805\n.text:0000000000402807\n.text:000000000040280c\n.text:000000000040280f\n.text:0000000000402811\n.text:0000000000402813\n.text:0000000000402816\n.text:000000000040281c\n.text:0000000000402823\n.text:0000000000402825\n.text:000000000040282a\n.text:000000000040282c\n.text:0000000000402831\n.text:0000000000402833\n.text:0000000000402835\n.text:000000000040283a\n.text:000000000040283d\n.text:000000000040283f\n.text:0000000000402841\n.text:0000000000402846\n.text:0000000000402848\n.text:000000000040284a\n.text:000000000040284c\n.text:000000000040284f\n.text:0000000000402851\n.text:0000000000402853\n.text:0000000000402855\n.text:000000000040285a\n.text:000000000040285c\n.text:000000000040285f\n.text:0000000000402861\n.text:0000000000402867\n.text:000000000040286c\n.text:000000000040286f\n.text:0000000000402872\n.text:0000000000402874\n.text:0000000000402877\n.text:000000000040287b\n.text:000000000040287d\n.text:000000000040287f\n.text:0000000000402881\n.text:0000000000402886\n.text:000000000040288b\n.text:0000000000402890\n.text:0000000000402893\n.text:0000000000402898\n.text:000000000040289b\n.text:00000000004028a0\n.text:00000000004028a3\n.text:00000000004028a5\n.text:00000000004028a7\n.text:00000000004028aa\n.text:00000000004028ad\n.text:00000000004028b2\n.text:00000000004028b4\n.text:00000000004028b8\n.text:00000000004028b9\n.text:00000000004028bb\n.text:00000000004028bd\n.text:00000000004028be\n'
p1427
tp1428
sS'chdir'
p1429
(S'\n__stdcall chdir(char * __path)\n'
p1430
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint chdir(char *__path)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_chdir_0060e0d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p1431
S'JMP qword ptr [0x0060e0d0]\n'
p1432
S'ff 25 1a c7 20 00\n'
p1433
S'.plt:00000000004019b0\n'
p1434
tp1435
sS'rpl_calloc'
p1436
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1437
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_0060e170)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1438
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x0040704b\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x00407050\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x00407050\nPUSH RAX\nCALL 0x00401890\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401af0\n'
p1439
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 4f a8 ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 95 aa ff ff\n'
p1440
S'.text:0000000000407010\n.text:0000000000407013\n.text:0000000000407018\n.text:000000000040701a\n.text:000000000040701d\n.text:0000000000407022\n.text:0000000000407024\n.text:0000000000407027\n.text:000000000040702b\n.text:000000000040702d\n.text:0000000000407030\n.text:0000000000407033\n.text:0000000000407036\n.text:0000000000407039\n.text:000000000040703b\n.text:000000000040703c\n.text:0000000000407041\n.text:0000000000407047\n.text:0000000000407049\n.text:000000000040704a\n.text:000000000040704b\n.text:0000000000407050\n.text:0000000000407053\n.text:0000000000407056\n'
p1441
tp1442
sS'memset'
p1443
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1444
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_0060e120)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1445
S'JMP qword ptr [0x0060e120]\n'
p1446
S'ff 25 ca c6 20 00\n'
p1447
S'.plt:0000000000401a50\n'
p1448
tp1449
sS'getc_unlocked'
p1450
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p1451
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_0060e070)();\u000a  return iVar1;\u000a}\u000a\u000a
p1452
S'JMP qword ptr [0x0060e070]\n'
p1453
S'ff 25 7a c7 20 00\n'
p1454
S'.plt:00000000004018f0\n'
p1455
tp1456
sS'c_isascii'
p1457
(S'\n__stdcall c_isascii()\n'
p1458
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p1459
S'CMP EDI,0x80\nSETC AL\nRET\n'
p1460
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p1461
S'.text:0000000000407b70\n.text:0000000000407b76\n.text:0000000000407b79\n'
p1462
tp1463
sS'__xargmatch_internal'
p1464
(S'\n__stdcall __xargmatch_internal(char * context, char * arg, char * * arglist, char * vallist, size_t valsize, argmatch_exit_fn * exit_fn)\n'
p1465
V\u000aptrdiff_t __xargmatch_internal\u000a                    (char *context,char *arg,char **arglist,char *vallist,size_t valsize,\u000a                    void (*exit_fn)())\u000a\u000a{\u000a  ptrdiff_t problem;\u000a  \u000a  problem = argmatch(arg,arglist,vallist,valsize);\u000a  if (problem < 0) {\u000a    argmatch_invalid(context,arg,problem);\u000a    argmatch_valid(arglist,vallist,valsize);\u000a    (*exit_fn)();\u000a    problem = -1;\u000a  }\u000a  return problem;\u000a}\u000a\u000a
p1466
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R9\nMOV R15,R8\nMOV R12,RCX\nMOV R13,RDX\nMOV RBX,RSI\nMOV RBP,RDI\nMOV RDI,RBX\nMOV RSI,R13\nMOV RDX,R12\nMOV RCX,R15\nCALL 0x004028d0\nTEST RAX,RAX\nJNS 0x00402b89\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x004029d0\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nCALL 0x00402a40\nCALL R14\nMOV RAX,-0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1467
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 ce\n4d 89 c7\n49 89 cc\n49 89 d5\n48 89 f3\n48 89 fd\n48 89 df\n4c 89 ee\n4c 89 e2\n4c 89 f9\ne8 72 fd ff ff\n48 85 c0\n79 26\n48 89 ef\n48 89 de\n48 89 c2\ne8 5f fe ff ff\n4c 89 ef\n4c 89 e6\n4c 89 fa\ne8 c1 fe ff ff\n41 ff d6\n48 c7 c0 ff ff ff ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1468
S'.text:0000000000402b30\n.text:0000000000402b31\n.text:0000000000402b33\n.text:0000000000402b35\n.text:0000000000402b37\n.text:0000000000402b39\n.text:0000000000402b3a\n.text:0000000000402b3b\n.text:0000000000402b3e\n.text:0000000000402b41\n.text:0000000000402b44\n.text:0000000000402b47\n.text:0000000000402b4a\n.text:0000000000402b4d\n.text:0000000000402b50\n.text:0000000000402b53\n.text:0000000000402b56\n.text:0000000000402b59\n.text:0000000000402b5e\n.text:0000000000402b61\n.text:0000000000402b63\n.text:0000000000402b66\n.text:0000000000402b69\n.text:0000000000402b6c\n.text:0000000000402b71\n.text:0000000000402b74\n.text:0000000000402b77\n.text:0000000000402b7a\n.text:0000000000402b7f\n.text:0000000000402b82\n.text:0000000000402b89\n.text:0000000000402b8d\n.text:0000000000402b8e\n.text:0000000000402b90\n.text:0000000000402b92\n.text:0000000000402b94\n.text:0000000000402b96\n.text:0000000000402b97\n'
p1469
tp1470
sS'lookup_zone'
p1471
(S'\n__stdcall lookup_zone(parser_control * pc, char * name)\n'
p1472
V\u000atable * lookup_zone(parser_control *pc,char *name)\u000a\u000a{\u000a  int iVar1;\u000a  table *ptVar2;\u000a  char *__s2;\u000a  \u000a  ptVar2 = universal_time_zone_table;\u000a  __s2 = "GMT";\u000a  do {\u000a    iVar1 = strcmp(name,__s2);\u000a    if (iVar1 == 0) {\u000a      return ptVar2;\u000a    }\u000a    __s2 = ptVar2[1].name;\u000a    ptVar2 = ptVar2 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = pc->local_time_zone_table[0].name;\u000a  if (__s2 != (char *)0x0) {\u000a    ptVar2 = pc->local_time_zone_table;\u000a    do {\u000a      iVar1 = strcmp(name,__s2);\u000a      if (iVar1 == 0) {\u000a        return ptVar2;\u000a      }\u000a      __s2 = ptVar2[1].name;\u000a      ptVar2 = ptVar2 + 1;\u000a    } while (__s2 != (char *)0x0);\u000a  }\u000a  ptVar2 = time_zone_table;\u000a  __s2 = "WET";\u000a  do {\u000a    iVar1 = strcmp(name,__s2);\u000a    if (iVar1 == 0) {\u000a      return ptVar2;\u000a    }\u000a    __s2 = ptVar2[1].name;\u000a    ptVar2 = ptVar2 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  return (table *)0x0;\u000a}\u000a\u000a
p1473
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nMOV R15,RDI\nMOV EBX,0x40ab20\nMOV ESI,0x40af9f\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R14\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404c1b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404ba0\nMOV RSI,qword ptr [0xe0 + R15]\nTEST RSI,RSI\nJZ 0x00404be9\nADD R15,0xe0\nMOV RBX,R15\nNOP\nMOV RDI,R14\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404c1b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404bd0\nMOV EBX,0x40ab60\nMOV ESI,0x40afaa\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R14\nCALL 0x00401b00\nTEST EAX,EAX\nJZ 0x00404c1b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00404c00\nXOR EBX,EBX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1474
S'41 57\n41 56\n53\n49 89 f6\n49 89 ff\nbb 20 ab 40 00\nbe 9f af 40 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 f7\ne8 58 cf ff ff\n85 c0\n74 6f\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n49 8b b7 e0 00 00 00\n48 85 f6\n74 24\n49 81 c7 e0 00 00 00\n4c 89 fb\n90\n4c 89 f7\ne8 28 cf ff ff\n85 c0\n74 3f\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\nbb 60 ab 40 00\nbe aa af 40 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 f7\ne8 f8 ce ff ff\n85 c0\n74 0f\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n31 db\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1475
S'.text:0000000000404b80\n.text:0000000000404b82\n.text:0000000000404b84\n.text:0000000000404b85\n.text:0000000000404b88\n.text:0000000000404b8b\n.text:0000000000404b90\n.text:0000000000404b95\n.text:0000000000404ba0\n.text:0000000000404ba3\n.text:0000000000404ba8\n.text:0000000000404baa\n.text:0000000000404bac\n.text:0000000000404bb0\n.text:0000000000404bb4\n.text:0000000000404bb7\n.text:0000000000404bb9\n.text:0000000000404bc0\n.text:0000000000404bc3\n.text:0000000000404bc5\n.text:0000000000404bcc\n.text:0000000000404bcf\n.text:0000000000404bd0\n.text:0000000000404bd3\n.text:0000000000404bd8\n.text:0000000000404bda\n.text:0000000000404bdc\n.text:0000000000404be0\n.text:0000000000404be4\n.text:0000000000404be7\n.text:0000000000404be9\n.text:0000000000404bee\n.text:0000000000404bf3\n.text:0000000000404c00\n.text:0000000000404c03\n.text:0000000000404c08\n.text:0000000000404c0a\n.text:0000000000404c0c\n.text:0000000000404c10\n.text:0000000000404c14\n.text:0000000000404c17\n.text:0000000000404c19\n.text:0000000000404c1b\n.text:0000000000404c1e\n.text:0000000000404c1f\n.text:0000000000404c21\n.text:0000000000404c23\n'
p1476
tp1477
sS'cdb_advance_fd'
p1478
(S'\n__stdcall cdb_advance_fd(cd_buf * cdb, char * dir)\n'
p1479
V\u000aint cdb_advance_fd(cd_buf *cdb,char *dir)\u000a\u000a{\u000a  cd_buf cVar1;\u000a  int iVar2;\u000a  \u000a  iVar2 = 0;\u000a  cVar1 = (cd_buf)openat((int)*cdb,dir,0x10900);\u000a  if ((int)cVar1 < 0) {\u000a    iVar2 = -1;\u000a  }\u000a  else {\u000a    cdb_free(cdb);\u000a    *cdb = cVar1;\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1480
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nMOV EDI,dword ptr [RBX]\nXOR R14D,R14D\nMOV EDX,0x10900\nXOR EAX,EAX\nCALL 0x004019a0\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00408a9a\nMOV RDI,RBX\nCALL 0x00408ae0\nMOV dword ptr [RBX],EBP\nJMP 0x00408aa0\nMOV R14D,0xffffffff\nMOV EAX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1481
S'55\n41 56\n53\n48 89 fb\n8b 3b\n45 31 f6\nba 00 09 01 00\n31 c0\ne8 18 8f ff ff\n89 c5\n85 ed\n78 0c\n48 89 df\ne8 4a 00 00 00\n89 2b\neb 06\n41 be ff ff ff ff\n44 89 f0\n5b\n41 5e\n5d\nc3\n'
p1482
S'.text:0000000000408a70\n.text:0000000000408a71\n.text:0000000000408a73\n.text:0000000000408a74\n.text:0000000000408a77\n.text:0000000000408a79\n.text:0000000000408a7c\n.text:0000000000408a81\n.text:0000000000408a83\n.text:0000000000408a88\n.text:0000000000408a8a\n.text:0000000000408a8c\n.text:0000000000408a8e\n.text:0000000000408a91\n.text:0000000000408a96\n.text:0000000000408a98\n.text:0000000000408a9a\n.text:0000000000408aa0\n.text:0000000000408aa3\n.text:0000000000408aa4\n.text:0000000000408aa6\n.text:0000000000408aa7\n'
p1483
tp1484
sS'dup_safer'
p1485
(S'\n__stdcall dup_safer()\n'
p1486
V\u000aint dup_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0,3);\u000a  return iVar1;\u000a}\u000a\u000a
p1487
S'XOR ESI,ESI\nMOV EDX,0x3\nXOR EAX,EAX\nJMP 0x00408ef0\n'
p1488
S'31 f6\nba 03 00 00 00\n31 c0\ne9 32 fe ff ff\n'
p1489
S'.text:00000000004090b0\n.text:00000000004090b2\n.text:00000000004090b7\n.text:00000000004090b9\n'
p1490
tp1491
sS'__ctype_b_loc'
p1492
(S'\n__stdcall __ctype_b_loc()\n'
p1493
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0060e280)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1494
S'JMP qword ptr [0x0060e280]\n'
p1495
S'ff 25 6a c5 20 00\n'
p1496
S'.plt:0000000000401d10\n'
p1497
tp1498
sS'quotearg'
p1499
(S'\n__stdcall quotearg(char * arg)\n'
p1500
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1501
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00405fa0\n'
p1502
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1503
S'.text:0000000000406180\n.text:0000000000406183\n.text:0000000000406185\n.text:0000000000406188\n'
p1504
tp1505
sS'_start'
p1506
(S'\n__stdcall _start()\n'
p1507
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_0060dff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1508
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x409130\nMOV RCX,0x4090c0\nMOV RDI,0x402110\nCALL qword ptr [0x0060dff0]\nHLT\n'
p1509
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 30 91 40 00\n48 c7 c1 c0 90 40 00\n48 c7 c7 10 21 40 00\nff 15 96 c2 20 00\nf4\n'
p1510
S'.text:0000000000401d30\n.text:0000000000401d32\n.text:0000000000401d35\n.text:0000000000401d36\n.text:0000000000401d39\n.text:0000000000401d3d\n.text:0000000000401d3e\n.text:0000000000401d3f\n.text:0000000000401d46\n.text:0000000000401d4d\n.text:0000000000401d54\n.text:0000000000401d5a\n'
p1511
tp1512
sS'c_iscntrl'
p1513
(S'\n__stdcall c_iscntrl()\n'
p1514
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1515
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x00407b98\nRET\nCMP EDI,0x7f\nJZ 0x00407b97\nXOR EAX,EAX\nRET\n'
p1516
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1517
S'.text:0000000000407b90\n.text:0000000000407b92\n.text:0000000000407b95\n.text:0000000000407b97\n.text:0000000000407b98\n.text:0000000000407b9b\n.text:0000000000407b9d\n.text:0000000000407b9f\n'
p1518
tp1519
sS'validate_timespec'
p1520
(S'\n__stdcall validate_timespec(timespec * timespec)\n'
p1521
V\u000aint validate_timespec(timespec *timespec)\u000a\u000a{\u000a  int *piVar1;\u000a  bool bVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  \u000a  if ((((ulong)timespec->tv_nsec < 1000000000) ||\u000a      ((timespec->tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe)) &&\u000a     (((ulong)timespec[1].tv_nsec < 1000000000 ||\u000a      ((timespec[1].tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe)))) {\u000a    bVar4 = (timespec->tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe;\u000a    if (bVar4) {\u000a      timespec->tv_sec = 0;\u000a    }\u000a    bVar2 = bVar4 && timespec->tv_nsec == 0x3ffffffe;\u000a    uVar3 = (uint)bVar4;\u000a    if ((timespec[1].tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe) {\u000a      timespec[1].tv_sec = 0;\u000a      bVar2 = (bool)(bVar2 + (timespec[1].tv_nsec == 0x3ffffffeU));\u000a      uVar3 = 1;\u000a    }\u000a    return (int)((uint)(bVar2 == true) + uVar3);\u000a  }\u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x16;\u000a  return -1;\u000a}\u000a\u000a
p1522
S'MOV RAX,qword ptr [RDI + 0x8]\nCMP RAX,0x3b9aca00\nJC 0x004084d8\nAND RAX,-0x2\nCMP RAX,0x3ffffffe\nJNZ 0x004084f0\nMOV RAX,qword ptr [RDI + 0x18]\nCMP RAX,0x3b9aca00\nJC 0x00408506\nAND RAX,-0x2\nCMP RAX,0x3ffffffe\nJZ 0x00408506\nPUSH RAX\nCALL 0x00401890\nMOV dword ptr [RAX],0x16\nMOV EAX,0xffffffff\nADD RSP,0x8\nRET\nMOV RAX,qword ptr [RDI + 0x8]\nMOV RCX,RAX\nAND RCX,-0x2\nXOR EDX,EDX\nCMP RCX,0x3ffffffe\nMOV ECX,0x0\nJNZ 0x00408538\nXOR ECX,ECX\nCMP RAX,0x3ffffffe\nSETZ CL\nMOV qword ptr [RDI],0x0\nMOV EDX,0x1\nMOV RAX,qword ptr [RDI + 0x18]\nMOV RSI,RAX\nAND RSI,-0x2\nCMP RSI,0x3ffffffe\nJNZ 0x00408566\nXOR EDX,EDX\nCMP RAX,0x3ffffffe\nSETZ DL\nMOV qword ptr [RDI + 0x10],0x0\nADD ECX,EDX\nMOV EDX,0x1\nXOR EAX,EAX\nCMP ECX,0x1\nSETZ AL\nADD EAX,EDX\nRET\n'
p1523
S'48 8b 47 08\n48 3d 00 ca 9a 3b\n72 0c\n48 83 e0 fe\n48 3d fe ff ff 3f\n75 18\n48 8b 47 18\n48 3d 00 ca 9a 3b\n72 22\n48 83 e0 fe\n48 3d fe ff ff 3f\n74 16\n50\ne8 9a 93 ff ff\nc7 00 16 00 00 00\nb8 ff ff ff ff\n48 83 c4 08\nc3\n48 8b 47 08\n48 89 c1\n48 83 e1 fe\n31 d2\n48 81 f9 fe ff ff 3f\nb9 00 00 00 00\n75 17\n31 c9\n48 3d fe ff ff 3f\n0f 94 c1\n48 c7 07 00 00 00 00\nba 01 00 00 00\n48 8b 47 18\n48 89 c6\n48 83 e6 fe\n48 81 fe fe ff ff 3f\n75 1a\n31 d2\n48 3d fe ff ff 3f\n0f 94 c2\n48 c7 47 10 00 00 00 00\n01 d1\nba 01 00 00 00\n31 c0\n83 f9 01\n0f 94 c0\n01 d0\nc3\n'
p1524
S'.text:00000000004084c0\n.text:00000000004084c4\n.text:00000000004084ca\n.text:00000000004084cc\n.text:00000000004084d0\n.text:00000000004084d6\n.text:00000000004084d8\n.text:00000000004084dc\n.text:00000000004084e2\n.text:00000000004084e4\n.text:00000000004084e8\n.text:00000000004084ee\n.text:00000000004084f0\n.text:00000000004084f1\n.text:00000000004084f6\n.text:00000000004084fc\n.text:0000000000408501\n.text:0000000000408505\n.text:0000000000408506\n.text:000000000040850a\n.text:000000000040850d\n.text:0000000000408511\n.text:0000000000408513\n.text:000000000040851a\n.text:000000000040851f\n.text:0000000000408521\n.text:0000000000408523\n.text:0000000000408529\n.text:000000000040852c\n.text:0000000000408533\n.text:0000000000408538\n.text:000000000040853c\n.text:000000000040853f\n.text:0000000000408543\n.text:000000000040854a\n.text:000000000040854c\n.text:000000000040854e\n.text:0000000000408554\n.text:0000000000408557\n.text:000000000040855f\n.text:0000000000408561\n.text:0000000000408566\n.text:0000000000408568\n.text:000000000040856b\n.text:000000000040856e\n.text:0000000000408570\n'
p1525
tp1526
sS'c_isblank'
p1527
(S'\n__stdcall c_isblank()\n'
p1528
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1529
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1530
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1531
S'.text:0000000000407b80\n.text:0000000000407b83\n.text:0000000000407b86\n.text:0000000000407b89\n.text:0000000000407b8c\n.text:0000000000407b8e\n'
p1532
tp1533
sS'atexit'
p1534
(S'\n__stdcall atexit(__func * __func)\n'
p1535
V\u000a/* WARNING: Removing unreachable block (ram,0x00409160) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_0060e248)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1536
S'MOV RAX,0x60e298\nTEST RAX,RAX\nJZ 0x00409160\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x00401ca0\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x00401ca0\n'
p1537
S'48 c7 c0 98 e2 60 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 4a 8b ff ff\n31 d2\n31 f6\ne9 37 8b ff ff\n'
p1538
S'.text:0000000000409140\n.text:0000000000409147\n.text:000000000040914a\n.text:000000000040914c\n.text:000000000040914f\n.text:0000000000409151\n.text:0000000000409160\n.text:0000000000409162\n.text:0000000000409164\n'
p1539
tp1540
sS'utimes'
p1541
(S'\n__stdcall utimes(char * __file, timeval * __tvp)\n'
p1542
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint utimes(char *__file,timeval *__tvp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_utimes_0060e160)();\u000a  return iVar1;\u000a}\u000a\u000a
p1543
S'JMP qword ptr [0x0060e160]\n'
p1544
S'ff 25 8a c6 20 00\n'
p1545
S'.plt:0000000000401ad0\n'
p1546
tp1547
sS'fdopen'
p1548
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1549
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0060e1f8)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1550
S'JMP qword ptr [0x0060e1f8]\n'
p1551
S'ff 25 f2 c5 20 00\n'
p1552
S'.plt:0000000000401c00\n'
p1553
tp1554
sS'error'
p1555
(S'\n__stdcall error()\n'
p1556
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_0060e210)();\u000a  return;\u000a}\u000a\u000a
p1557
S'JMP qword ptr [0x0060e210]\n'
p1558
S'ff 25 da c5 20 00\n'
p1559
S'.plt:0000000000401c30\n'
p1560
tp1561
sS'isdst_differ'
p1562
(S'\n__stdcall isdst_differ()\n'
p1563
V\u000aint isdst_differ(void)\u000a\u000a{\u000a  uint in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (int)(uint)(-1 < (int)(in_ESI | in_EDI) && (in_ESI == 0) != (in_EDI == 0));\u000a}\u000a\u000a
p1564
S'TEST EDI,EDI\nSETZ AL\nTEST ESI,ESI\nSETZ CL\nXOR CL,AL\nOR ESI,EDI\nSETNS AL\nAND AL,CL\nMOVZX EAX,AL\nRET\n'
p1565
S'85 ff\n0f 94 c0\n85 f6\n0f 94 c1\n30 c1\n09 fe\n0f 99 c0\n20 c8\n0f b6 c0\nc3\n'
p1566
S'.text:0000000000407720\n.text:0000000000407722\n.text:0000000000407725\n.text:0000000000407727\n.text:000000000040772a\n.text:000000000040772c\n.text:000000000040772e\n.text:0000000000407731\n.text:0000000000407733\n.text:0000000000407736\n'
p1567
tp1568
sS'strcaseeq6'
p1569
(S'\n__stdcall strcaseeq6()\n'
p1570
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1571
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x00406842\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406849\nJMP 0x0040685e\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040685e\nTEST BPL,BPL\nJZ 0x00406859\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00406870\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1572
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 f1 13 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1573
S'.text:0000000000406820\n.text:0000000000406821\n.text:0000000000406822\n.text:0000000000406823\n.text:0000000000406825\n.text:0000000000406828\n.text:000000000040682a\n.text:000000000040682f\n.text:0000000000406833\n.text:0000000000406835\n.text:0000000000406837\n.text:000000000040683a\n.text:000000000040683c\n.text:000000000040683e\n.text:0000000000406840\n.text:0000000000406842\n.text:0000000000406844\n.text:0000000000406847\n.text:0000000000406849\n.text:000000000040684c\n.text:000000000040684e\n.text:0000000000406851\n.text:0000000000406855\n.text:0000000000406856\n.text:0000000000406857\n.text:0000000000406859\n.text:000000000040685e\n.text:0000000000406862\n.text:0000000000406863\n.text:0000000000406864\n'
p1574
tp1575
sS'strcaseeq5'
p1576
(S'\n__stdcall strcaseeq5()\n'
p1577
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1578
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x004067f6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004067fd\nJMP 0x00406814\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406814\nTEST BPL,BPL\nJZ 0x0040680f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00406820\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1579
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 3d 14 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1580
S'.text:00000000004067d0\n.text:00000000004067d1\n.text:00000000004067d3\n.text:00000000004067d4\n.text:00000000004067d7\n.text:00000000004067d9\n.text:00000000004067dc\n.text:00000000004067de\n.text:00000000004067e3\n.text:00000000004067e7\n.text:00000000004067e9\n.text:00000000004067eb\n.text:00000000004067ee\n.text:00000000004067f0\n.text:00000000004067f2\n.text:00000000004067f4\n.text:00000000004067f6\n.text:00000000004067f8\n.text:00000000004067fb\n.text:00000000004067fd\n.text:0000000000406800\n.text:0000000000406802\n.text:0000000000406806\n.text:0000000000406809\n.text:000000000040680a\n.text:000000000040680c\n.text:000000000040680d\n.text:000000000040680f\n.text:0000000000406814\n.text:0000000000406815\n.text:0000000000406817\n.text:0000000000406818\n'
p1581
tp1582
sS'strcaseeq7'
p1583
(S'\n__stdcall strcaseeq7()\n'
p1584
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1585
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x00406892\nTEST ECX,0xffffffdf\nJNZ 0x00406896\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x0040689a\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1586
S'53\n48 89 fb\n31 ff\ne8 a5 13 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1587
S'.text:0000000000406870\n.text:0000000000406871\n.text:0000000000406874\n.text:0000000000406876\n.text:000000000040687b\n.text:000000000040687f\n.text:0000000000406881\n.text:0000000000406883\n.text:0000000000406889\n.text:000000000040688b\n.text:0000000000406890\n.text:0000000000406891\n.text:0000000000406892\n.text:0000000000406894\n.text:0000000000406896\n.text:0000000000406898\n.text:0000000000406899\n.text:000000000040689a\n.text:000000000040689f\n.text:00000000004068a0\n'
p1588
tp1589
sS'fdutimens'
p1590
(S'\n__stdcall fdutimens(char * file, timespec * timespec)\n'
p1591
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000aint fdutimens(char *file,timespec *timespec)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  timespec *ptVar3;\u000a  _Bool _Var4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int __fd;\u000a  int *piVar7;\u000a  long lVar8;\u000a  timespec *in_RDX;\u000a  timeval *__tvp;\u000a  timeval *__tvp_00;\u000a  timespec tVar9;\u000a  timeval truncated_timeval [2];\u000a  timeval timeval [2];\u000a  timespec adjusted_timespec [2];\u000a  timespec *local_120;\u000a  undefined4 local_118;\u000a  undefined4 uStack276;\u000a  __suseconds_t local_110;\u000a  undefined4 local_108;\u000a  undefined4 uStack260;\u000a  __suseconds_t local_100;\u000a  timeval local_f8;\u000a  __time_t local_e8;\u000a  long local_e0;\u000a  undefined4 local_d8;\u000a  undefined4 uStack212;\u000a  undefined4 uStack208;\u000a  undefined4 uStack204;\u000a  undefined4 local_c8;\u000a  undefined4 uStack196;\u000a  undefined4 uStack192;\u000a  undefined4 uStack188;\u000a  stat local_b8;\u000a  \u000a  __fd = (int)file;\u000a  local_120 = (timespec *)&local_d8;\u000a  if (in_RDX == (timespec *)0x0) {\u000a    iVar5 = 0;\u000a    local_120 = in_RDX;\u000a  }\u000a  else {\u000a    local_d8 = *(undefined4 *)&in_RDX->tv_sec;\u000a    uStack212 = *(undefined4 *)((long)&in_RDX->tv_sec + 4);\u000a    uStack208 = *(undefined4 *)&in_RDX->tv_nsec;\u000a    uStack204 = *(undefined4 *)((long)&in_RDX->tv_nsec + 4);\u000a    local_c8 = *(undefined4 *)&in_RDX[1].tv_sec;\u000a    uStack196 = *(undefined4 *)((long)&in_RDX[1].tv_sec + 4);\u000a    uStack192 = *(undefined4 *)&in_RDX[1].tv_nsec;\u000a    uStack188 = *(undefined4 *)((long)&in_RDX[1].tv_nsec + 4);\u000a    iVar5 = validate_timespec(local_120);\u000a    if (iVar5 < 0) {\u000a      return -1;\u000a    }\u000a  }\u000a  if ((__fd < 0) && (timespec == (timespec *)0x0)) {\u000a    piVar7 = __errno_location();\u000a    *piVar7 = 9;\u000a    return -1;\u000a  }\u000a  if (utimensat_works_really < 0) goto LAB_004082a5;\u000a  if (iVar5 == 2) {\u000a    if (__fd < 0) {\u000a      iVar5 = stat((char *)timespec,(stat *)&local_b8);\u000a    }\u000a    else {\u000a      iVar5 = fstat(__fd,(stat *)&local_b8);\u000a    }\u000a    ptVar3 = local_120;\u000a    if (iVar5 != 0) {\u000a      return -1;\u000a    }\u000a    if (local_120->tv_nsec == 0x3ffffffe) {\u000a      tVar9 = get_stat_atime(&local_b8);\u000a      lVar8 = 0;\u000a    }\u000a    else {\u000a      iVar5 = 3;\u000a      if (local_120[1].tv_nsec != 0x3ffffffe) goto LAB_0040822d;\u000a      tVar9 = get_stat_mtime(&local_b8);\u000a      lVar8 = 1;\u000a    }\u000a    ptVar3[lVar8].tv_sec = SUB168((undefined  [16])tVar9,0);\u000a    ptVar3[lVar8].tv_nsec = SUB168((undefined  [16])tVar9 >> 0x40,0);\u000a    iVar5 = 3;\u000a  }\u000aLAB_0040822d:\u000a  if (__fd < 0) {\u000a    iVar6 = utimensat(-100,(char *)timespec,(timespec *)local_120,0);\u000a    if (iVar6 < 1) {\u000a      if (iVar6 == 0) {\u000a        utimensat_works_really = 1;\u000a        return 0;\u000a      }\u000a    }\u000a    else {\u000a      piVar7 = __errno_location();\u000a      *piVar7 = 0x26;\u000a    }\u000a    piVar7 = __errno_location();\u000a    if (*piVar7 != 0x26) {\u000a      utimensat_works_really = 1;\u000a      return iVar6;\u000a    }\u000a  }\u000a  if (-1 < __fd) {\u000a    iVar6 = futimens(__fd,(timespec *)local_120);\u000a    if (iVar6 < 1) {\u000a      if (iVar6 == 0) {\u000a        utimensat_works_really = 1;\u000a        return 0;\u000a      }\u000a    }\u000a    else {\u000a      piVar7 = __errno_location();\u000a      *piVar7 = 0x26;\u000a    }\u000a    piVar7 = __errno_location();\u000a    if (*piVar7 != 0x26) {\u000a      utimensat_works_really = 1;\u000a      return iVar6;\u000a    }\u000a  }\u000aLAB_004082a5:\u000a  utimensat_works_really = -1;\u000a  lutimensat_works_really = -1;\u000a  if (iVar5 != 0) {\u000a    if (iVar5 != 3) {\u000a      if (__fd < 0) {\u000a        iVar5 = stat((char *)timespec,(stat *)&local_b8);\u000a      }\u000a      else {\u000a        iVar5 = fstat(__fd,(stat *)&local_b8);\u000a      }\u000a      if (iVar5 != 0) {\u000a        return -1;\u000a      }\u000a    }\u000a    if ((local_120 != (timespec *)0x0) &&\u000a       (_Var4 = update_timespec(&local_b8,&local_120), _Var4 != false)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (local_120 == (timespec *)0x0) {\u000a    __tvp = (timeval *)0x0;\u000a  }\u000a  else {\u000a    local_f8.tv_sec = local_120->tv_sec;\u000a    local_f8.tv_usec = SUB168(SEXT816(0x20c49ba5e353f7cf) * SEXT816(local_120->tv_nsec) >> 0x47,0);\u000a    local_e8 = local_120[1].tv_sec;\u000a    local_e0 = SUB168(SEXT816(0x20c49ba5e353f7cf) * SEXT816(local_120[1].tv_nsec) >> 0x47,0);\u000a    __tvp = &local_f8;\u000a  }\u000a  if (-1 < __fd) {\u000a    iVar5 = futimesat(__fd,(char *)0x0,__tvp);\u000a    if (iVar5 != 0) {\u000a      if (timespec == (timespec *)0x0) {\u000a        return -1;\u000a      }\u000a      __fd = utimes((char *)timespec,__tvp);\u000a      return __fd;\u000a    }\u000a    if (__tvp != (timeval *)0x0) {\u000a      lVar8 = __tvp->tv_usec;\u000a      lVar1 = __tvp[1].tv_usec;\u000a      if ((lVar8 < 500000) && (lVar1 < 500000)) {\u000a        return 0;\u000a      }\u000a      iVar5 = fstat(__fd,(stat *)&local_b8);\u000a      if (iVar5 != 0) {\u000a        return 0;\u000a      }\u000a      lVar2 = __tvp[1].tv_sec;\u000a      local_118 = *(undefined4 *)&__tvp->tv_sec;\u000a      uStack276 = *(undefined4 *)((long)&__tvp->tv_sec + 4);\u000a      local_110 = __tvp->tv_usec;\u000a      local_108 = *(undefined4 *)&__tvp[1].tv_sec;\u000a      uStack260 = *(undefined4 *)((long)&__tvp[1].tv_sec + 4);\u000a      local_100 = __tvp[1].tv_usec;\u000a      __tvp_00 = (timeval *)0x0;\u000a      if ((499999 < lVar8) && (local_b8.st_atim.tv_sec - __tvp->tv_sec == 1)) {\u000a        lVar8 = get_stat_atime_ns(&local_b8);\u000a        if (lVar8 == 0) {\u000a          __tvp_00 = (timeval *)&local_118;\u000a          local_110 = 0;\u000a        }\u000a        else {\u000a          __tvp_00 = (timeval *)0x0;\u000a        }\u000a      }\u000a      if (((lVar1 < 500000) || (local_b8.st_mtim.tv_sec - lVar2 != 1)) ||\u000a         (lVar8 = get_stat_mtime_ns(&local_b8), lVar8 != 0)) {\u000a        if (__tvp_00 == (timeval *)0x0) {\u000a          return 0;\u000a        }\u000a      }\u000a      else {\u000a        __tvp_00 = (timeval *)&local_118;\u000a        local_100 = 0;\u000a      }\u000a      futimesat(__fd,(char *)0x0,__tvp_00);\u000a      return 0;\u000a    }\u000a    return 0;\u000a  }\u000a  __fd = futimesat(-100,(char *)timespec,__tvp);\u000a  return __fd;\u000a}\u000a\u000a
p1592
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x100\nMOV R14,RSI\nMOV R15D,EDI\nTEST RDX,RDX\nLEA RAX,[RSP + 0x50]\nCMOVZ RAX,RDX\nMOV qword ptr [RSP + 0x8],RAX\nJZ 0x0040817b\nMOVUPS XMM0,xmmword ptr [RDX]\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVUPS XMM0,xmmword ptr [RDX + 0x10]\nMOVAPS xmmword ptr [RSP + 0x60],XMM0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x004084c0\nMOV EBP,EAX\nTEST EBP,EBP\nJNS 0x0040817d\nJMP 0x00408192\nXOR EBP,EBP\nTEST R15D,R15D\nJNS 0x004081a9\nTEST R14,R14\nJNZ 0x004081a9\nCALL 0x00401890\nMOV dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nMOV EAX,EBX\nADD RSP,0x100\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP dword ptr [0x0060e518],0x0\nJS 0x004082a5\nCMP EBP,0x2\nJNZ 0x0040822d\nLEA RSI,[RSP + 0x70]\nTEST R15D,R15D\nJS 0x004081cf\nMOV EDI,R15D\nCALL 0x00409180\nJMP 0x004081d7\nMOV RDI,R14\nCALL 0x00409170\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x00408197\nMOV RBX,qword ptr [RSP + 0x8]\nCMP qword ptr [RBX + 0x8],0x3ffffffe\nJNZ 0x004081fd\nLEA RDI,[RSP + 0x70]\nCALL 0x004068f0\nXOR ECX,ECX\nJMP 0x0040821b\nMOV EBP,0x3\nCMP qword ptr [RBX + 0x18],0x3ffffffe\nJNZ 0x0040822d\nLEA RDI,[RSP + 0x70]\nCALL 0x00406910\nMOV ECX,0x1\nSHL RCX,0x4\nMOV qword ptr [RBX + RCX*0x1],RAX\nMOV qword ptr [RBX + RCX*0x1 + 0x8],RDX\nMOV EBP,0x3\nTEST R15D,R15D\nJNS 0x00408265\nMOV RDX,qword ptr [RSP + 0x8]\nMOV EDI,0xffffff9c\nXOR ECX,ECX\nMOV RSI,R14\nCALL 0x00401860\nMOV EBX,EAX\nTEST EBX,EBX\nJLE 0x00408259\nCALL 0x00401890\nMOV dword ptr [RAX],0x26\nJMP 0x0040825b\nJZ 0x0040828a\nCALL 0x00401890\nCMP dword ptr [RAX],0x26\nJNZ 0x0040828a\nTEST R15D,R15D\nJS 0x004082a5\nMOV RSI,qword ptr [RSP + 0x8]\nMOV EDI,R15D\nCALL 0x00401c90\nMOV EBX,EAX\nTEST EBX,EBX\nJLE 0x00408299\nCALL 0x00401890\nMOV dword ptr [RAX],0x26\nJMP 0x0040829b\nMOV dword ptr [0x0060e518],0x1\nJMP 0x00408197\nJZ 0x004082d6\nCALL 0x00401890\nCMP dword ptr [RAX],0x26\nJNZ 0x004082d6\nMOV dword ptr [0x0060e518],0xffffffff\nMOV dword ptr [0x0060e51c],0xffffffff\nTEST EBP,EBP\nJZ 0x0040831b\nCMP EBP,0x3\nJZ 0x004082fa\nLEA RSI,[RSP + 0x70]\nTEST R15D,R15D\nJS 0x004082e5\nMOV EDI,R15D\nCALL 0x00409180\nJMP 0x004082ed\nMOV dword ptr [0x0060e518],0x1\nJMP 0x00408197\nMOV RDI,R14\nCALL 0x00409170\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x00408197\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x0040831b\nLEA RDI,[RSP + 0x70]\nLEA RSI,[RSP + 0x8]\nCALL 0x00408580\nXOR EBX,EBX\nTEST AL,AL\nJNZ 0x00408197\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00408385\nMOV RAX,qword ptr [RAX]\nMOV qword ptr [RSP + 0x30],RAX\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RCX,0x20c49ba5e353f7cf\nMOV RAX,RCX\nIMUL qword ptr [RSI + 0x8]\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x7\nADD RDX,RAX\nMOV qword ptr [RSP + 0x38],RDX\nMOV RAX,qword ptr [RSI + 0x10]\nMOV qword ptr [RSP + 0x40],RAX\nMOV RAX,RCX\nIMUL qword ptr [RSI + 0x18]\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x7\nADD RDX,RAX\nMOV qword ptr [RSP + 0x48],RDX\nLEA RBP,[RSP + 0x30]\nTEST R15D,R15D\nJNS 0x0040838c\nJMP 0x004083b5\nXOR EBP,EBP\nTEST R15D,R15D\nJS 0x004083b5\nXOR EBX,EBX\nXOR ESI,ESI\nMOV EDI,R15D\nMOV RDX,RBP\nCALL 0x00401d00\nTEST EAX,EAX\nJZ 0x004083cc\nTEST R14,R14\nJZ 0x00408192\nMOV RDI,R14\nMOV RSI,RBP\nCALL 0x00401ad0\nJMP 0x004083c5\nMOV EDI,0xffffff9c\nMOV RSI,R14\nMOV RDX,RBP\nCALL 0x00401d00\nMOV EBX,EAX\nJMP 0x00408197\nTEST RBP,RBP\nJZ 0x00408197\nMOV R12,qword ptr [RBP + 0x8]\nMOV R14,qword ptr [RBP + 0x18]\nCMP R12,0x7a11f\nJG 0x004083f3\nCMP R14,0x7a120\nJL 0x00408197\nLEA RSI,[RSP + 0x70]\nMOV EDI,R15D\nCALL 0x00409180\nTEST EAX,EAX\nJNZ 0x00408197\nLEA RCX,[RBP + 0x10]\nMOV RAX,qword ptr [0xb8 + RSP]\nMOV RBX,qword ptr [0xc8 + RSP]\nSUB RAX,qword ptr [RBP]\nSUB RBX,qword ptr [RBP + 0x10]\nMOVUPS XMM0,xmmword ptr [RBP]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [RCX]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nXOR EBP,EBP\nCMP R12,0x7a120\nJL 0x00408470\nCMP RAX,0x1\nJNZ 0x00408470\nLEA RDI,[RSP + 0x70]\nCALL 0x004068b0\nTEST RAX,RAX\nJZ 0x00408462\nXOR EBP,EBP\nCMP R14,0x7a120\nJGE 0x00408479\nJMP 0x0040848e\nLEA RBP,[RSP + 0x10]\nMOV qword ptr [RSP + 0x18],0x0\nCMP R14,0x7a120\nJL 0x0040848e\nCMP RBX,0x1\nJNZ 0x0040848e\nLEA RDI,[RSP + 0x70]\nCALL 0x004068d0\nTEST RAX,RAX\nJZ 0x00408495\nTEST RBP,RBP\nJNZ 0x004084a3\nJMP 0x004084b0\nLEA RBP,[RSP + 0x10]\nMOV qword ptr [RSP + 0x28],0x0\nXOR ESI,ESI\nMOV EDI,R15D\nMOV RDX,RBP\nCALL 0x00401d00\nXOR EBX,EBX\nJMP 0x00408197\n'
p1593
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec 00 01 00 00\n49 89 f6\n41 89 ff\n48 85 d2\n48 8d 44 24 50\n48 0f 44 c2\n48 89 44 24 08\n74 23\n0f 10 02\n0f 29 44 24 50\n0f 10 42 10\n0f 29 44 24 60\n48 8b 7c 24 08\ne8 4d 03 00 00\n89 c5\n85 ed\n79 04\neb 17\n31 ed\n45 85 ff\n79 27\n4d 85 f6\n75 22\ne8 04 97 ff ff\nc7 00 09 00 00 00\nbb ff ff ff ff\n89 d8\n48 81 c4 00 01 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n83 3d 68 63 20 00 00\n0f 88 ef 00 00 00\n83 fd 02\n75 72\n48 8d 74 24 70\n45 85 ff\n78 0a\n44 89 ff\ne8 b3 0f 00 00\neb 08\n4c 89 f7\ne8 99 0f 00 00\nbb ff ff ff ff\n85 c0\n75 b7\n48 8b 5c 24 08\n48 81 7b 08 fe ff ff 3f\n75 0e\n48 8d 7c 24 70\ne8 f7 e6 ff ff\n31 c9\neb 1e\nbd 03 00 00 00\n48 81 7b 18 fe ff ff 3f\n75 21\n48 8d 7c 24 70\ne8 fa e6 ff ff\nb9 01 00 00 00\n48 c1 e1 04\n48 89 04 0b\n48 89 54 0b 08\nbd 03 00 00 00\n45 85 ff\n79 33\n48 8b 54 24 08\nbf 9c ff ff ff\n31 c9\n4c 89 f6\ne8 1a 96 ff ff\n89 c3\n85 db\n7e 0d\ne8 3f 96 ff ff\nc7 00 26 00 00 00\neb 02\n74 2f\ne8 30 96 ff ff\n83 38 26\n75 25\n45 85 ff\n78 3b\n48 8b 74 24 08\n44 89 ff\ne8 19 9a ff ff\n89 c3\n85 db\n7e 1c\ne8 0e 96 ff ff\nc7 00 26 00 00 00\neb 11\nc7 05 84 62 20 00 01 00 00 00\ne9 fe fe ff ff\n74 3b\ne8 f0 95 ff ff\n83 38 26\n75 31\nc7 05 69 62 20 00 ff ff ff ff\nc7 05 63 62 20 00 ff ff ff ff\n85 ed\n74 5e\n83 fd 03\n74 38\n48 8d 74 24 70\n45 85 ff\n78 19\n44 89 ff\ne8 ac 0e 00 00\neb 17\nc7 05 38 62 20 00 01 00 00 00\ne9 b2 fe ff ff\n4c 89 f7\ne8 83 0e 00 00\nbb ff ff ff ff\n85 c0\n0f 85 9d fe ff ff\n48 83 7c 24 08 00\n74 19\n48 8d 7c 24 70\n48 8d 74 24 08\ne8 6f 02 00 00\n31 db\n84 c0\n0f 85 7c fe ff ff\n48 8b 44 24 08\n48 85 c0\n74 60\n48 8b 00\n48 89 44 24 30\n48 8b 74 24 08\n48 b9 cf f7 53 e3 a5 9b c4 20\n48 89 c8\n48 f7 6e 08\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 07\n48 01 c2\n48 89 54 24 38\n48 8b 46 10\n48 89 44 24 40\n48 89 c8\n48 f7 6e 18\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 07\n48 01 c2\n48 89 54 24 48\n48 8d 6c 24 30\n45 85 ff\n79 09\neb 30\n31 ed\n45 85 ff\n78 29\n31 db\n31 f6\n44 89 ff\n48 89 ea\ne8 65 99 ff ff\n85 c0\n74 2d\n4d 85 f6\n0f 84 ea fd ff ff\n4c 89 f7\n48 89 ee\ne8 1d 97 ff ff\neb 10\nbf 9c ff ff ff\n4c 89 f6\n48 89 ea\ne8 3b 99 ff ff\n89 c3\ne9 cb fd ff ff\n48 85 ed\n0f 84 c2 fd ff ff\n4c 8b 65 08\n4c 8b 75 18\n49 81 fc 1f a1 07 00\n7f 0d\n49 81 fe 20 a1 07 00\n0f 8c a4 fd ff ff\n48 8d 74 24 70\n44 89 ff\ne8 80 0d 00 00\n85 c0\n0f 85 8f fd ff ff\n48 8d 4d 10\n48 8b 84 24 b8 00 00 00\n48 8b 9c 24 c8 00 00 00\n48 2b 45 00\n48 2b 5d 10\n0f 10 45 00\n0f 29 44 24 10\n0f 10 01\n0f 29 44 24 20\n31 ed\n49 81 fc 20 a1 07 00\n7c 30\n48 83 f8 01\n75 2a\n48 8d 7c 24 70\ne8 60 e4 ff ff\n48 85 c0\n74 0d\n31 ed\n49 81 fe 20 a1 07 00\n7d 19\neb 2c\n48 8d 6c 24 10\n48 c7 44 24 18 00 00 00 00\n49 81 fe 20 a1 07 00\n7c 15\n48 83 fb 01\n75 0f\n48 8d 7c 24 70\ne8 47 e4 ff ff\n48 85 c0\n74 07\n48 85 ed\n75 10\neb 1b\n48 8d 6c 24 10\n48 c7 44 24 28 00 00 00 00\n31 f6\n44 89 ff\n48 89 ea\ne8 50 98 ff ff\n31 db\ne9 e0 fc ff ff\n'
p1594
S'.text:0000000000408130\n.text:0000000000408131\n.text:0000000000408133\n.text:0000000000408135\n.text:0000000000408137\n.text:0000000000408138\n.text:000000000040813f\n.text:0000000000408142\n.text:0000000000408145\n.text:0000000000408148\n.text:000000000040814d\n.text:0000000000408151\n.text:0000000000408156\n.text:0000000000408158\n.text:000000000040815b\n.text:0000000000408160\n.text:0000000000408164\n.text:0000000000408169\n.text:000000000040816e\n.text:0000000000408173\n.text:0000000000408175\n.text:0000000000408177\n.text:0000000000408179\n.text:000000000040817b\n.text:000000000040817d\n.text:0000000000408180\n.text:0000000000408182\n.text:0000000000408185\n.text:0000000000408187\n.text:000000000040818c\n.text:0000000000408192\n.text:0000000000408197\n.text:0000000000408199\n.text:00000000004081a0\n.text:00000000004081a1\n.text:00000000004081a3\n.text:00000000004081a5\n.text:00000000004081a7\n.text:00000000004081a8\n.text:00000000004081a9\n.text:00000000004081b0\n.text:00000000004081b6\n.text:00000000004081b9\n.text:00000000004081bb\n.text:00000000004081c0\n.text:00000000004081c3\n.text:00000000004081c5\n.text:00000000004081c8\n.text:00000000004081cd\n.text:00000000004081cf\n.text:00000000004081d2\n.text:00000000004081d7\n.text:00000000004081dc\n.text:00000000004081de\n.text:00000000004081e0\n.text:00000000004081e5\n.text:00000000004081ed\n.text:00000000004081ef\n.text:00000000004081f4\n.text:00000000004081f9\n.text:00000000004081fb\n.text:00000000004081fd\n.text:0000000000408202\n.text:000000000040820a\n.text:000000000040820c\n.text:0000000000408211\n.text:0000000000408216\n.text:000000000040821b\n.text:000000000040821f\n.text:0000000000408223\n.text:0000000000408228\n.text:000000000040822d\n.text:0000000000408230\n.text:0000000000408232\n.text:0000000000408237\n.text:000000000040823c\n.text:000000000040823e\n.text:0000000000408241\n.text:0000000000408246\n.text:0000000000408248\n.text:000000000040824a\n.text:000000000040824c\n.text:0000000000408251\n.text:0000000000408257\n.text:0000000000408259\n.text:000000000040825b\n.text:0000000000408260\n.text:0000000000408263\n.text:0000000000408265\n.text:0000000000408268\n.text:000000000040826a\n.text:000000000040826f\n.text:0000000000408272\n.text:0000000000408277\n.text:0000000000408279\n.text:000000000040827b\n.text:000000000040827d\n.text:0000000000408282\n.text:0000000000408288\n.text:000000000040828a\n.text:0000000000408294\n.text:0000000000408299\n.text:000000000040829b\n.text:00000000004082a0\n.text:00000000004082a3\n.text:00000000004082a5\n.text:00000000004082af\n.text:00000000004082b9\n.text:00000000004082bb\n.text:00000000004082bd\n.text:00000000004082c0\n.text:00000000004082c2\n.text:00000000004082c7\n.text:00000000004082ca\n.text:00000000004082cc\n.text:00000000004082cf\n.text:00000000004082d4\n.text:00000000004082d6\n.text:00000000004082e0\n.text:00000000004082e5\n.text:00000000004082e8\n.text:00000000004082ed\n.text:00000000004082f2\n.text:00000000004082f4\n.text:00000000004082fa\n.text:0000000000408300\n.text:0000000000408302\n.text:0000000000408307\n.text:000000000040830c\n.text:0000000000408311\n.text:0000000000408313\n.text:0000000000408315\n.text:000000000040831b\n.text:0000000000408320\n.text:0000000000408323\n.text:0000000000408325\n.text:0000000000408328\n.text:000000000040832d\n.text:0000000000408332\n.text:000000000040833c\n.text:000000000040833f\n.text:0000000000408343\n.text:0000000000408346\n.text:000000000040834a\n.text:000000000040834e\n.text:0000000000408351\n.text:0000000000408356\n.text:000000000040835a\n.text:000000000040835f\n.text:0000000000408362\n.text:0000000000408366\n.text:0000000000408369\n.text:000000000040836d\n.text:0000000000408371\n.text:0000000000408374\n.text:0000000000408379\n.text:000000000040837e\n.text:0000000000408381\n.text:0000000000408383\n.text:0000000000408385\n.text:0000000000408387\n.text:000000000040838a\n.text:000000000040838c\n.text:000000000040838e\n.text:0000000000408390\n.text:0000000000408393\n.text:0000000000408396\n.text:000000000040839b\n.text:000000000040839d\n.text:000000000040839f\n.text:00000000004083a2\n.text:00000000004083a8\n.text:00000000004083ab\n.text:00000000004083ae\n.text:00000000004083b3\n.text:00000000004083b5\n.text:00000000004083ba\n.text:00000000004083bd\n.text:00000000004083c0\n.text:00000000004083c5\n.text:00000000004083c7\n.text:00000000004083cc\n.text:00000000004083cf\n.text:00000000004083d5\n.text:00000000004083d9\n.text:00000000004083dd\n.text:00000000004083e4\n.text:00000000004083e6\n.text:00000000004083ed\n.text:00000000004083f3\n.text:00000000004083f8\n.text:00000000004083fb\n.text:0000000000408400\n.text:0000000000408402\n.text:0000000000408408\n.text:000000000040840c\n.text:0000000000408414\n.text:000000000040841c\n.text:0000000000408420\n.text:0000000000408424\n.text:0000000000408428\n.text:000000000040842d\n.text:0000000000408430\n.text:0000000000408435\n.text:0000000000408437\n.text:000000000040843e\n.text:0000000000408440\n.text:0000000000408444\n.text:0000000000408446\n.text:000000000040844b\n.text:0000000000408450\n.text:0000000000408453\n.text:0000000000408455\n.text:0000000000408457\n.text:000000000040845e\n.text:0000000000408460\n.text:0000000000408462\n.text:0000000000408467\n.text:0000000000408470\n.text:0000000000408477\n.text:0000000000408479\n.text:000000000040847d\n.text:000000000040847f\n.text:0000000000408484\n.text:0000000000408489\n.text:000000000040848c\n.text:000000000040848e\n.text:0000000000408491\n.text:0000000000408493\n.text:0000000000408495\n.text:000000000040849a\n.text:00000000004084a3\n.text:00000000004084a5\n.text:00000000004084a8\n.text:00000000004084ab\n.text:00000000004084b0\n.text:00000000004084b2\n'
p1595
tp1596
sS'emit_mandatory_arg_note'
p1597
(S'\n__stdcall emit_mandatory_arg_note()\n'
p1598
V\u000avoid emit_mandatory_arg_note(void)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnMandatory arguments to long options are mandatory for short options too.\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p1599
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x409b38\nMOV EDX,0x5\nCALL 0x00401960\nMOV RSI,qword ptr [0x0060e328]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401ac0\n'
p1600
S'50\n31 ff\nbe 38 9b 40 00\nba 05 00 00 00\ne8 9e f9 ff ff\n48 8b 35 5f c3 20 00\n48 89 c7\n58\ne9 ee fa ff ff\n'
p1601
S'.text:0000000000401fb0\n.text:0000000000401fb1\n.text:0000000000401fb3\n.text:0000000000401fb8\n.text:0000000000401fbd\n.text:0000000000401fc2\n.text:0000000000401fc9\n.text:0000000000401fcc\n.text:0000000000401fcd\n'
p1602
tp1603
sS'strcaseeq0'
p1604
(S'\n__stdcall strcaseeq0()\n'
p1605
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1606
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x004065a5\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004065ac\nJMP 0x004065e0\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004065e0\nTEST BPL,BPL\nJZ 0x004065db\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x004065f0\nJMP 0x004065e0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1607
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 8d 16 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1608
S'.text:0000000000406570\n.text:0000000000406571\n.text:0000000000406573\n.text:0000000000406575\n.text:0000000000406577\n.text:0000000000406579\n.text:000000000040657a\n.text:000000000040657b\n.text:000000000040657e\n.text:0000000000406581\n.text:0000000000406584\n.text:0000000000406587\n.text:0000000000406589\n.text:000000000040658c\n.text:000000000040658e\n.text:0000000000406593\n.text:0000000000406596\n.text:0000000000406598\n.text:000000000040659a\n.text:000000000040659d\n.text:000000000040659f\n.text:00000000004065a1\n.text:00000000004065a3\n.text:00000000004065a5\n.text:00000000004065a7\n.text:00000000004065aa\n.text:00000000004065ac\n.text:00000000004065af\n.text:00000000004065b1\n.text:00000000004065b5\n.text:00000000004065ba\n.text:00000000004065bd\n.text:00000000004065c1\n.text:00000000004065c5\n.text:00000000004065c9\n.text:00000000004065cd\n.text:00000000004065d1\n.text:00000000004065d4\n.text:00000000004065d9\n.text:00000000004065db\n.text:00000000004065e0\n.text:00000000004065e4\n.text:00000000004065e5\n.text:00000000004065e7\n.text:00000000004065e9\n.text:00000000004065eb\n.text:00000000004065ed\n.text:00000000004065ee\n'
p1609
tp1610
sS'get_stat_mtime'
p1611
(S'\n__stdcall get_stat_mtime(stat * st)\n'
p1612
V\u000atimespec get_stat_mtime(stat *st)\u000a\u000a{\u000a  return st->st_mtim;\u000a}\u000a\u000a
p1613
S'MOV RAX,qword ptr [RDI + 0x58]\nMOV RDX,qword ptr [RDI + 0x60]\nRET\n'
p1614
S'48 8b 47 58\n48 8b 57 60\nc3\n'
p1615
S'.text:0000000000406910\n.text:0000000000406914\n.text:0000000000406918\n'
p1616
tp1617
sS'strcaseeq2'
p1618
(S'\n__stdcall strcaseeq2()\n'
p1619
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1620
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x004066b6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004066bd\nJMP 0x004066ea\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004066ea\nTEST BPL,BPL\nJZ 0x004066e5\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406700\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1621
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 7d 15 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1622
S'.text:0000000000406680\n.text:0000000000406681\n.text:0000000000406683\n.text:0000000000406685\n.text:0000000000406687\n.text:0000000000406689\n.text:000000000040668a\n.text:000000000040668b\n.text:000000000040668e\n.text:0000000000406691\n.text:0000000000406694\n.text:0000000000406697\n.text:0000000000406699\n.text:000000000040669c\n.text:000000000040669e\n.text:00000000004066a3\n.text:00000000004066a7\n.text:00000000004066a9\n.text:00000000004066ab\n.text:00000000004066ae\n.text:00000000004066b0\n.text:00000000004066b2\n.text:00000000004066b4\n.text:00000000004066b6\n.text:00000000004066b8\n.text:00000000004066bb\n.text:00000000004066bd\n.text:00000000004066c0\n.text:00000000004066c2\n.text:00000000004066c6\n.text:00000000004066ca\n.text:00000000004066ce\n.text:00000000004066d2\n.text:00000000004066d5\n.text:00000000004066d9\n.text:00000000004066da\n.text:00000000004066dc\n.text:00000000004066de\n.text:00000000004066e0\n.text:00000000004066e2\n.text:00000000004066e3\n.text:00000000004066e5\n.text:00000000004066ea\n.text:00000000004066ee\n.text:00000000004066ef\n.text:00000000004066f1\n.text:00000000004066f3\n.text:00000000004066f5\n.text:00000000004066f7\n.text:00000000004066f8\n'
p1623
tp1624
sS'strcaseeq1'
p1625
(S'\n__stdcall strcaseeq1()\n'
p1626
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1627
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x0040662d\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406634\nJMP 0x00406667\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406667\nTEST BPL,BPL\nJZ 0x00406662\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406680\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1628
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 06 16 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1629
S'.text:00000000004065f0\n.text:00000000004065f1\n.text:00000000004065f3\n.text:00000000004065f5\n.text:00000000004065f7\n.text:00000000004065f9\n.text:00000000004065fa\n.text:00000000004065fb\n.text:0000000000406600\n.text:0000000000406603\n.text:0000000000406606\n.text:0000000000406609\n.text:000000000040660b\n.text:000000000040660e\n.text:0000000000406613\n.text:0000000000406615\n.text:000000000040661a\n.text:000000000040661e\n.text:0000000000406620\n.text:0000000000406622\n.text:0000000000406625\n.text:0000000000406627\n.text:0000000000406629\n.text:000000000040662b\n.text:000000000040662d\n.text:000000000040662f\n.text:0000000000406632\n.text:0000000000406634\n.text:0000000000406637\n.text:0000000000406639\n.text:000000000040663d\n.text:0000000000406641\n.text:0000000000406645\n.text:000000000040664b\n.text:000000000040664f\n.text:0000000000406652\n.text:0000000000406656\n.text:0000000000406657\n.text:0000000000406659\n.text:000000000040665b\n.text:000000000040665d\n.text:000000000040665f\n.text:0000000000406660\n.text:0000000000406662\n.text:0000000000406667\n.text:000000000040666b\n.text:000000000040666c\n.text:000000000040666e\n.text:0000000000406670\n.text:0000000000406672\n.text:0000000000406674\n.text:0000000000406675\n'
p1630
tp1631
sS'strcaseeq4'
p1632
(S'\n__stdcall strcaseeq4()\n'
p1633
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1634
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x0040679c\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004067a3\nJMP 0x004067c4\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004067c4\nTEST BPL,BPL\nJZ 0x004067bf\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004067d0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1635
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 97 14 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1636
S'.text:0000000000406770\n.text:0000000000406771\n.text:0000000000406773\n.text:0000000000406775\n.text:0000000000406776\n.text:0000000000406777\n.text:000000000040677a\n.text:000000000040677d\n.text:000000000040677f\n.text:0000000000406782\n.text:0000000000406784\n.text:0000000000406789\n.text:000000000040678d\n.text:000000000040678f\n.text:0000000000406791\n.text:0000000000406794\n.text:0000000000406796\n.text:0000000000406798\n.text:000000000040679a\n.text:000000000040679c\n.text:000000000040679e\n.text:00000000004067a1\n.text:00000000004067a3\n.text:00000000004067a6\n.text:00000000004067a8\n.text:00000000004067ac\n.text:00000000004067b0\n.text:00000000004067b3\n.text:00000000004067b7\n.text:00000000004067b8\n.text:00000000004067ba\n.text:00000000004067bc\n.text:00000000004067bd\n.text:00000000004067bf\n.text:00000000004067c4\n.text:00000000004067c8\n.text:00000000004067c9\n.text:00000000004067cb\n.text:00000000004067cd\n.text:00000000004067ce\n'
p1637
tp1638
sS'guess_time_tm'
p1639
(S'\n__stdcall guess_time_tm(long_int year, long_int yday, time_t * t, tm * tp)\n'
p1640
V\u000atime_t guess_time_tm(long_int year,long_int yday,time_t *t,tm *tp)\u000a\u000a{\u000a  int iVar1;\u000a  time_t b;\u000a  long lVar2;\u000a  time_t a;\u000a  int min0;\u000a  time_t *in_R9;\u000a  long in_stack_00000008;\u000a  \u000a  if (in_stack_00000008 == 0) {\u000a    a = *in_R9;\u000a  }\u000a  else {\u000a    b = ydhms_diff(year,yday,(int)t,(int)tp,min0,*(int *)(in_stack_00000008 + 0x14));\u000a    a = *in_R9;\u000a    iVar1 = time_t_add_ok(a,b);\u000a    if (iVar1 != 0) {\u000a      return a + b;\u000a    }\u000a  }\u000a  if (a < 0) {\u000a    lVar2 = -0x8000000000000000;\u000a    if (a < -0x7ffffffffffffffe) {\u000a      lVar2 = a + 1;\u000a    }\u000a  }\u000a  else {\u000a    lVar2 = a + -1;\u000a    if (a < 0x7ffffffffffffffe) {\u000a      lVar2 = 0x7fffffffffffffff;\u000a    }\u000a  }\u000a  return lVar2;\u000a}\u000a\u000a
p1641
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,R9\nMOV RAX,qword ptr [RSP + 0x20]\nTEST RAX,RAX\nJZ 0x0040760c\nMOV R9D,dword ptr [RAX + 0x14]\nMOV R10D,dword ptr [RAX + 0x1c]\nMOV R11D,dword ptr [RAX + 0x8]\nMOV EBX,dword ptr [RAX]\nMOV EAX,dword ptr [RAX + 0x4]\nPUSH RBX\nPUSH RAX\nPUSH R11\nPUSH R10\nCALL 0x004074b0\nADD RSP,0x20\nMOV R14,RAX\nMOV RBX,qword ptr [R15]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00407780\nTEST EAX,EAX\nJZ 0x0040760f\nADD RBX,R14\nJMP 0x00407645\nMOV RBX,qword ptr [R15]\nMOV RAX,0x7ffffffffffffffd\nTEST RBX,RBX\nJS 0x0040762f\nCMP RBX,RAX\nLEA RCX,[RAX + 0x2]\nLEA RAX,[RBX + -0x1]\nCMOVLE RAX,RCX\nJMP 0x00407648\nLEA RCX,[RAX + 0x5]\nLEA RDX,[RBX + 0x1]\nADD RAX,0x3\nCMP RBX,RCX\nCMOVL RAX,RDX\nMOV RBX,RAX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1642
S'41 57\n41 56\n53\n4d 89 cf\n48 8b 44 24 20\n48 85 c0\n74 3a\n44 8b 48 14\n44 8b 50 1c\n44 8b 58 08\n8b 18\n8b 40 04\n53\n50\n41 53\n41 52\ne8 c2 fe ff ff\n48 83 c4 20\n49 89 c6\n49 8b 1f\n48 89 df\n4c 89 f6\ne8 7d 01 00 00\n85 c0\n74 08\n4c 01 f3\neb 39\n49 8b 1f\n48 b8 fd ff ff ff ff ff ff 7f\n48 85 db\n78 11\n48 39 c3\n48 8d 48 02\n48 8d 43 ff\n48 0f 4e c1\neb 19\n48 8d 48 05\n48 8d 53 01\n48 83 c0 03\n48 39 cb\n48 0f 4c c2\n48 89 c3\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1643
S'.text:00000000004075c0\n.text:00000000004075c2\n.text:00000000004075c4\n.text:00000000004075c5\n.text:00000000004075c8\n.text:00000000004075cd\n.text:00000000004075d0\n.text:00000000004075d2\n.text:00000000004075d6\n.text:00000000004075da\n.text:00000000004075de\n.text:00000000004075e0\n.text:00000000004075e3\n.text:00000000004075e4\n.text:00000000004075e5\n.text:00000000004075e7\n.text:00000000004075e9\n.text:00000000004075ee\n.text:00000000004075f2\n.text:00000000004075f5\n.text:00000000004075f8\n.text:00000000004075fb\n.text:00000000004075fe\n.text:0000000000407603\n.text:0000000000407605\n.text:0000000000407607\n.text:000000000040760a\n.text:000000000040760c\n.text:000000000040760f\n.text:0000000000407619\n.text:000000000040761c\n.text:000000000040761e\n.text:0000000000407621\n.text:0000000000407625\n.text:0000000000407629\n.text:000000000040762d\n.text:000000000040762f\n.text:0000000000407633\n.text:0000000000407637\n.text:000000000040763b\n.text:000000000040763e\n.text:0000000000407642\n.text:0000000000407645\n.text:0000000000407648\n.text:0000000000407649\n.text:000000000040764b\n.text:000000000040764d\n'
p1644
tp1645
sS'strcaseeq3'
p1646
(S'\n__stdcall strcaseeq3()\n'
p1647
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1648
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c20\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00406730\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406737\nJMP 0x0040675a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040675a\nTEST BPL,BPL\nJZ 0x00406755\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406770\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1649
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 03 15 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1650
S'.text:0000000000406700\n.text:0000000000406701\n.text:0000000000406703\n.text:0000000000406705\n.text:0000000000406707\n.text:0000000000406708\n.text:000000000040670b\n.text:000000000040670e\n.text:0000000000406711\n.text:0000000000406713\n.text:0000000000406716\n.text:0000000000406718\n.text:000000000040671d\n.text:0000000000406721\n.text:0000000000406723\n.text:0000000000406725\n.text:0000000000406728\n.text:000000000040672a\n.text:000000000040672c\n.text:000000000040672e\n.text:0000000000406730\n.text:0000000000406732\n.text:0000000000406735\n.text:0000000000406737\n.text:000000000040673a\n.text:000000000040673c\n.text:0000000000406740\n.text:0000000000406744\n.text:0000000000406748\n.text:000000000040674b\n.text:000000000040674c\n.text:000000000040674e\n.text:0000000000406750\n.text:0000000000406752\n.text:0000000000406753\n.text:0000000000406755\n.text:000000000040675a\n.text:000000000040675b\n.text:000000000040675d\n.text:000000000040675f\n.text:0000000000406761\n.text:0000000000406762\n'
p1651
tp1652
sS'register_tm_clones'
p1653
(S'\n__stdcall register_tm_clones()\n'
p1654
V\u000a/* WARNING: Removing unreachable block (ram,0x00401dc3) */\u000a/* WARNING: Removing unreachable block (ram,0x00401dcd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1655
S'MOV ESI,0x60e310\nPUSH RBP\nSUB RSI,0x60e310\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401dd8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401dd8\nPOP RBP\nMOV EDI,0x60e310\nJMP RAX\nPOP RBP\nRET\n'
p1656
S'be 10 e3 60 00\n55\n48 81 ee 10 e3 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 10 e3 60 00\nff e0\n5d\nc3\n'
p1657
S'.text:0000000000401da0\n.text:0000000000401da5\n.text:0000000000401da6\n.text:0000000000401dad\n.text:0000000000401db1\n.text:0000000000401db4\n.text:0000000000401db7\n.text:0000000000401dbb\n.text:0000000000401dbe\n.text:0000000000401dc1\n.text:0000000000401dc3\n.text:0000000000401dc8\n.text:0000000000401dcb\n.text:0000000000401dcd\n.text:0000000000401dce\n.text:0000000000401dd3\n.text:0000000000401dd8\n.text:0000000000401dd9\n'
p1658
tp1659
sS'c_islower'
p1660
(S'\n__stdcall c_islower()\n'
p1661
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p1662
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1663
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p1664
S'.text:0000000000407bc0\n.text:0000000000407bc3\n.text:0000000000407bc6\n.text:0000000000407bc9\n'
p1665
tp1666
sS'fstatat'
p1667
(S'\n__stdcall fstatat(int __fd, char * __file, stat * __buf, int __flag)\n'
p1668
V\u000aint fstatat(int __fd,char *__file,stat *__buf,int __flag)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___fxstatat_0060e0f8)(1,(ulong)(uint)__fd,__file,__buf,(ulong)(uint)__flag);\u000a  return iVar1;\u000a}\u000a\u000a
p1669
S'MOV R8D,ECX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV ESI,EDI\nMOV EDI,0x1\nJMP 0x00401a00\n'
p1670
S'41 89 c8\n48 89 d1\n48 89 f2\n89 fe\nbf 01 00 00 00\ne9 4b 88 ff ff\n'
p1671
S'.text:00000000004091a0\n.text:00000000004091a3\n.text:00000000004091a6\n.text:00000000004091a9\n.text:00000000004091ab\n.text:00000000004091b0\n'
p1672
tp1673
sS'argmatch'
p1674
(S'\n__stdcall argmatch(char * arg, char * * arglist, char * vallist, size_t valsize)\n'
p1675
V\u000aptrdiff_t argmatch(char *arg,char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  bool bVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  size_t __n;\u000a  size_t sVar4;\u000a  long lVar5;\u000a  ptrdiff_t pVar6;\u000a  char *__s2;\u000a  char *__s1;\u000a  long local_50;\u000a  \u000a  __n = strlen(arg);\u000a  __s1 = *arglist;\u000a  if (__s1 == (char *)0x0) {\u000a    local_50 = -1;\u000a    bVar1 = false;\u000a  }\u000a  else {\u000a    local_50 = -1;\u000a    bVar1 = false;\u000a    lVar5 = 0;\u000a    __s2 = vallist;\u000a    do {\u000a      iVar3 = strncmp(__s1,arg,__n);\u000a      lVar2 = local_50;\u000a      if (iVar3 == 0) {\u000a        sVar4 = strlen(__s1);\u000a        if (sVar4 == __n) {\u000a          return lVar5;\u000a        }\u000a        lVar2 = lVar5;\u000a        if ((local_50 != -1) &&\u000a           ((vallist == (char *)0x0 ||\u000a            (iVar3 = memcmp(vallist + local_50 * valsize,__s2,valsize), lVar2 = local_50, iVar3 != 0\u000a            )))) {\u000a          bVar1 = true;\u000a          lVar2 = local_50;\u000a        }\u000a      }\u000a      local_50 = lVar2;\u000a      __s1 = arglist[lVar5 + 1];\u000a      lVar5 = lVar5 + 1;\u000a      __s2 = __s2 + valsize;\u000a    } while (__s1 != (char *)0x0);\u000a  }\u000a  pVar6 = -2;\u000a  if (!bVar1) {\u000a    pVar6 = local_50;\u000a  }\u000a  return pVar6;\u000a}\u000a\u000a
p1676
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RCX\nMOV R14,RDX\nMOV RBP,RSI\nMOV R12,RDI\nCALL 0x00401980\nMOV RBX,RAX\nMOV qword ptr [RSP + 0x20],RBP\nMOV R15,qword ptr [RBP]\nTEST R15,R15\nJZ 0x00402997\nMOV qword ptr [RSP + 0x8],-0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],R14\nXOR EBP,EBP\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,R15\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x004018a0\nTEST EAX,EAX\nJNZ 0x00402980\nMOV RDI,R15\nCALL 0x00401980\nCMP RAX,RBX\nJZ 0x004029b9\nCMP qword ptr [RSP + 0x8],-0x1\nJZ 0x00402975\nMOV RAX,qword ptr [RSP + 0x18]\nTEST RAX,RAX\nJZ 0x0040296c\nMOV RDI,qword ptr [RSP + 0x8]\nIMUL RDI,R13\nADD RDI,RAX\nMOV RSI,R14\nMOV RDX,R13\nCALL 0x00401ab0\nTEST EAX,EAX\nJZ 0x00402980\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00402980\nMOV qword ptr [RSP + 0x8],RBP\nNOP word ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [RSP + 0x20]\nMOV R15,qword ptr [RAX + RBP*0x8 + 0x8]\nINC RBP\nADD R14,R13\nTEST R15,R15\nJNZ 0x00402920\nJMP 0x004029a7\nMOV qword ptr [RSP + 0x8],-0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nTEST byte ptr [RSP + 0x10],0x1\nMOV RBP,-0x2\nCMOVZ RBP,qword ptr [RSP + 0x8]\nMOV RAX,RBP\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1677
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 cd\n49 89 d6\n48 89 f5\n49 89 fc\ne8 91 f0 ff ff\n48 89 c3\n48 89 6c 24 20\n4c 8b 7d 00\n4d 85 ff\n0f 84 93 00 00 00\n48 c7 44 24 08 ff ff ff ff\n31 c0\n48 89 44 24 10\n4c 89 74 24 18\n31 ed\n0f 1f 44 00 00\n4c 89 ff\n4c 89 e6\n48 89 da\ne8 72 ef ff ff\n85 c0\n75 4e\n4c 89 ff\ne8 46 f0 ff ff\n48 39 d8\n74 7a\n48 83 7c 24 08 ff\n74 2e\n48 8b 44 24 18\n48 85 c0\n74 1b\n48 8b 7c 24 08\n49 0f af fd\n48 01 c7\n4c 89 f6\n4c 89 ea\ne8 48 f1 ff ff\n85 c0\n74 14\nb0 01\n48 89 44 24 10\neb 0b\n48 89 6c 24 08\n66 0f 1f 44 00 00\n48 8b 44 24 20\n4c 8b 7c e8 08\n48 ff c5\n4d 01 ee\n4d 85 ff\n75 8b\neb 10\n48 c7 44 24 08 ff ff ff ff\n31 c0\n48 89 44 24 10\nf6 44 24 10 01\n48 c7 c5 fe ff ff ff\n48 0f 44 6c 24 08\n48 89 e8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1678
S'.text:00000000004028d0\n.text:00000000004028d1\n.text:00000000004028d3\n.text:00000000004028d5\n.text:00000000004028d7\n.text:00000000004028d9\n.text:00000000004028da\n.text:00000000004028de\n.text:00000000004028e1\n.text:00000000004028e4\n.text:00000000004028e7\n.text:00000000004028ea\n.text:00000000004028ef\n.text:00000000004028f2\n.text:00000000004028f7\n.text:00000000004028fb\n.text:00000000004028fe\n.text:0000000000402904\n.text:000000000040290d\n.text:000000000040290f\n.text:0000000000402914\n.text:0000000000402919\n.text:000000000040291b\n.text:0000000000402920\n.text:0000000000402923\n.text:0000000000402926\n.text:0000000000402929\n.text:000000000040292e\n.text:0000000000402930\n.text:0000000000402932\n.text:0000000000402935\n.text:000000000040293a\n.text:000000000040293d\n.text:000000000040293f\n.text:0000000000402945\n.text:0000000000402947\n.text:000000000040294c\n.text:000000000040294f\n.text:0000000000402951\n.text:0000000000402956\n.text:000000000040295a\n.text:000000000040295d\n.text:0000000000402960\n.text:0000000000402963\n.text:0000000000402968\n.text:000000000040296a\n.text:000000000040296c\n.text:000000000040296e\n.text:0000000000402973\n.text:0000000000402975\n.text:000000000040297a\n.text:0000000000402980\n.text:0000000000402985\n.text:000000000040298a\n.text:000000000040298d\n.text:0000000000402990\n.text:0000000000402993\n.text:0000000000402995\n.text:0000000000402997\n.text:00000000004029a0\n.text:00000000004029a2\n.text:00000000004029a7\n.text:00000000004029ac\n.text:00000000004029b3\n.text:00000000004029b9\n.text:00000000004029bc\n.text:00000000004029c0\n.text:00000000004029c1\n.text:00000000004029c3\n.text:00000000004029c5\n.text:00000000004029c7\n.text:00000000004029c9\n.text:00000000004029ca\n'
p1679
tp1680
sS'fwrite'
p1681
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p1682
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_0060e258)();\u000a  return sVar1;\u000a}\u000a\u000a
p1683
S'JMP qword ptr [0x0060e258]\n'
p1684
S'ff 25 92 c5 20 00\n'
p1685
S'.plt:0000000000401cc0\n'
p1686
tp1687
sS'openat_save_fail'
p1688
(S'\n__stdcall openat_save_fail()\n'
p1689
V\u000avoid openat_save_fail(uint uParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"unable to record current working directory",5);\u000a  error((ulong)(uint)iVar1,(ulong)uParm1,uVar2,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1690
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nMOV EBP,dword ptr [0x0060e2b0]\nXOR EDI,EDI\nMOV ESI,0x40becd\nMOV EDX,0x5\nCALL 0x00401960\nMOV RCX,RAX\nXOR EAX,EAX\nMOV EDI,EBP\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00401c30\nCALL 0x00401880\n'
p1691
S'55\n53\n50\n89 fb\n8b 2d 95 62 20 00\n31 ff\nbe cd be 40 00\nba 05 00 00 00\ne8 34 99 ff ff\n48 89 c1\n31 c0\n89 ef\n89 de\n48 89 ca\ne8 f3 9b ff ff\ne8 3e 98 ff ff\n'
p1692
S'.text:0000000000408010\n.text:0000000000408011\n.text:0000000000408012\n.text:0000000000408013\n.text:0000000000408015\n.text:000000000040801b\n.text:000000000040801d\n.text:0000000000408022\n.text:0000000000408027\n.text:000000000040802c\n.text:000000000040802f\n.text:0000000000408031\n.text:0000000000408033\n.text:0000000000408035\n.text:0000000000408038\n.text:000000000040803d\n'
p1693
tp1694
sS'rpl_mktime'
p1695
(S'\n__stdcall rpl_mktime(tm * tp)\n'
p1696
V\u000atime_t rpl_mktime(tm *tp)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = mktime_internal(tp,localtime_r,&localtime_offset);\u000a  return tVar1;\u000a}\u000a\u000a
p1697
S'MOV ESI,0x4018b0\nMOV EDX,0x60e500\nJMP 0x00407070\n'
p1698
S'be b0 18 40 00\nba 00 e5 60 00\ne9 f1 f8 ff ff\n'
p1699
S'.text:0000000000407770\n.text:0000000000407775\n.text:000000000040777a\n'
p1700
tp1701
sS'lutimensat'
p1702
(S'\n__stdcall lutimensat(char * file, timespec * times)\n'
p1703
V\u000aint lutimensat(char *file,timespec *times)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = rpl_utimensat(file,times);\u000a  return iVar1;\u000a}\u000a\u000a
p1704
S'MOV ECX,0x100\nJMP 0x004077c0\n'
p1705
S'b9 00 01 00 00\ne9 96 f6 ff ff\n'
p1706
S'.text:0000000000408120\n.text:0000000000408125\n'
p1707
tp1708
sS'__do_global_dtors_aux'
p1709
(S'\n__stdcall __do_global_dtors_aux()\n'
p1710
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1711
S'CMP byte ptr [0x0060e368],0x0\nJNZ 0x00401dfa\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401d60\nPOP RBP\nMOV byte ptr [0x0060e368],0x1\nRET\n'
p1712
S'80 3d 81 c5 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 6e c5 20 00 01\nf3 c3\n'
p1713
S'.text:0000000000401de0\n.text:0000000000401de7\n.text:0000000000401de9\n.text:0000000000401dea\n.text:0000000000401ded\n.text:0000000000401df2\n.text:0000000000401df3\n.text:0000000000401dfa\n'
p1714
tp1715
sS'c_isprint'
p1716
(S'\n__stdcall c_isprint()\n'
p1717
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p1718
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p1719
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p1720
S'.text:0000000000407bd0\n.text:0000000000407bd3\n.text:0000000000407bd6\n.text:0000000000407bd9\n'
p1721
tp1722
sS'_fini'
p1723
(S'\n__stdcall _fini()\n'
p1724
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1725
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1726
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1727
S'.fini:00000000004091b8\n.fini:00000000004091bc\n.fini:00000000004091c0\n'
p1728
tp1729
sS'utimensat'
p1730
(S'\n__stdcall utimensat(int __fd, char * __path, timespec * __times, int __flags)\n'
p1731
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint utimensat(int __fd,char *__path,timespec *__times,int __flags)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_utimensat_0060e028)();\u000a  return iVar1;\u000a}\u000a\u000a
p1732
S'JMP qword ptr [0x0060e028]\n'
p1733
S'ff 25 c2 c7 20 00\n'
p1734
S'.plt:0000000000401860\n'
p1735
tp1736
sS'unsetenv'
p1737
(S'\n__stdcall unsetenv(char * __name)\n'
p1738
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint unsetenv(char *__name)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_unsetenv_0060e238)();\u000a  return iVar1;\u000a}\u000a\u000a
p1739
S'JMP qword ptr [0x0060e238]\n'
p1740
S'ff 25 b2 c5 20 00\n'
p1741
S'.plt:0000000000401c80\n'
p1742
tp1743
sS'rpl_fcntl'
p1744
(S'\n__stdcall rpl_fcntl()\n'
p1745
V\u000a/* WARNING: Removing unreachable block (ram,0x00408fab) */\u000a/* WARNING: Removing unreachable block (ram,0x00409014) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff38 : 0x00408fb9 */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint rpl_fcntl(void...)\u000a\u000a{\u000a  int have_dupfd_cloexec;\u000a  int __fd;\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int __cmd;\u000a  uint __fd_00;\u000a  va_list arg;\u000a  ulong local_c8;\u000a  \u000a  if (__cmd == 0x406) {\u000a    if (have_dupfd_cloexec < 0) {\u000a      __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a    }\u000a    else {\u000a      __fd = fcntl(__fd_00,0x406,local_c8 & 0xffffffff);\u000a      have_dupfd_cloexec = 1;\u000a      if ((__fd < 0) && (piVar3 = __errno_location(), *piVar3 == 0x16)) {\u000a        __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a        have_dupfd_cloexec = -1;\u000a        if (__fd < 0) {\u000a          return __fd;\u000a        }\u000a      }\u000a    }\u000a    if (((-1 < __fd) && (have_dupfd_cloexec == -1)) &&\u000a       ((uVar1 = fcntl(__fd,1), (int)uVar1 < 0 ||\u000a        (iVar2 = fcntl(__fd,2,(ulong)(uVar1 | 1),(ulong)(uVar1 | 1)), iVar2 == -1)))) {\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a      __fd = -1;\u000a    }\u000a  }\u000a  else {\u000a    __fd = fcntl(__fd_00,__cmd,local_c8);\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p1746
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14D,EDI\nTEST AL,AL\nJZ 0x00408f3b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RAX,dword ptr [RSP]\nCMP ESI,0x406\nJNZ 0x00408f96\nCMP EAX,0x28\nJA 0x00408fab\nMOV RCX,qword ptr [RSP + 0x10]\nADD RCX,RAX\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00408fb9\nCMP EAX,0x28\nJA 0x00409014\nMOV RCX,RAX\nADD RCX,qword ptr [RSP + 0x10]\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00409022\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EBX,dword ptr [RCX]\nCMP dword ptr [0x0060e524],0x0\nJS 0x00409033\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00401900\nMOV EBP,EAX\nMOV R15D,0x1\nTEST EBP,EBP\nJNS 0x00409004\nCALL 0x00401890\nCMP dword ptr [RAX],0x16\nJNZ 0x00409004\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00408ef0\nMOV EBP,EAX\nMOV R15D,0xffffffff\nTEST EBP,EBP\nJS 0x00409096\nMOV dword ptr [0x0060e524],R15D\nTEST EBP,EBP\nJNS 0x00409047\nJMP 0x00409096\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDX,qword ptr [RCX]\nXOR EAX,EAX\nMOV EDI,R14D\nCALL 0x00401900\nMOV EBP,EAX\nJMP 0x00409096\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00408ef0\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00409096\nCMP dword ptr [0x0060e524],-0x1\nJNZ 0x00409096\nMOV ESI,0x1\nXOR EAX,EAX\nMOV EDI,EBP\nCALL 0x00401900\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x0040907c\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBP\nMOV EDX,ECX\nCALL 0x00401900\nCMP EAX,-0x1\nJNZ 0x00409096\nCALL 0x00401890\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00401a80\nMOV dword ptr [RBX],R14D\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0xd8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1747
S'55\n41 57\n41 56\n53\n48 81 ec d8 00 00 00\n41 89 fe\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 04 24\n81 fe 06 04 00 00\n75 15\n83 f8 28\n77 25\n48 8b 4c 24 10\n48 01 c1\n8d 40 08\n89 04 24\neb 23\n83 f8 28\n77 79\n48 89 c1\n48 03 4c 24 10\n8d 40 08\n89 04 24\neb 77\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n8b 19\n83 3d 62 55 20 00 00\n78 6f\n31 c0\n44 89 f7\n89 da\ne8 30 89 ff ff\n89 c5\n41 bf 01 00 00 00\n85 ed\n79 28\ne8 af 88 ff ff\n83 38 16\n75 1e\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 fc fe ff ff\n89 c5\n41 bf ff ff ff ff\n85 ed\n0f 88 92 00 00 00\n44 89 3d 19 55 20 00\n85 ed\n79 38\ne9 82 00 00 00\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n48 8b 11\n31 c0\n44 89 f7\ne8 d1 88 ff ff\n89 c5\neb 63\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 af fe ff ff\n89 c5\n85 ed\n78 4f\n83 3d d6 54 20 00 ff\n75 46\nbe 01 00 00 00\n31 c0\n89 ef\ne8 a2 88 ff ff\n89 c1\n85 c9\n78 18\n83 c9 01\nbe 02 00 00 00\n31 c0\n89 ef\n89 ca\ne8 89 88 ff ff\n83 f8 ff\n75 1a\ne8 0f 88 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 f2 89 ff ff\n44 89 33\nbd ff ff ff ff\n89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1748
S'.text:0000000000408ef0\n.text:0000000000408ef1\n.text:0000000000408ef3\n.text:0000000000408ef5\n.text:0000000000408ef6\n.text:0000000000408efd\n.text:0000000000408f00\n.text:0000000000408f02\n.text:0000000000408f04\n.text:0000000000408f09\n.text:0000000000408f0e\n.text:0000000000408f13\n.text:0000000000408f1b\n.text:0000000000408f23\n.text:0000000000408f2b\n.text:0000000000408f33\n.text:0000000000408f3b\n.text:0000000000408f40\n.text:0000000000408f45\n.text:0000000000408f4a\n.text:0000000000408f4f\n.text:0000000000408f54\n.text:0000000000408f59\n.text:0000000000408f61\n.text:0000000000408f66\n.text:0000000000408f6e\n.text:0000000000408f75\n.text:0000000000408f79\n.text:0000000000408f7f\n.text:0000000000408f81\n.text:0000000000408f84\n.text:0000000000408f86\n.text:0000000000408f8b\n.text:0000000000408f8e\n.text:0000000000408f91\n.text:0000000000408f94\n.text:0000000000408f96\n.text:0000000000408f99\n.text:0000000000408f9b\n.text:0000000000408f9e\n.text:0000000000408fa3\n.text:0000000000408fa6\n.text:0000000000408fa9\n.text:0000000000408fab\n.text:0000000000408fb0\n.text:0000000000408fb4\n.text:0000000000408fb9\n.text:0000000000408fbb\n.text:0000000000408fc2\n.text:0000000000408fc4\n.text:0000000000408fc6\n.text:0000000000408fc9\n.text:0000000000408fcb\n.text:0000000000408fd0\n.text:0000000000408fd2\n.text:0000000000408fd8\n.text:0000000000408fda\n.text:0000000000408fdc\n.text:0000000000408fe1\n.text:0000000000408fe4\n.text:0000000000408fe6\n.text:0000000000408fe8\n.text:0000000000408fea\n.text:0000000000408fed\n.text:0000000000408fef\n.text:0000000000408ff4\n.text:0000000000408ff6\n.text:0000000000408ffc\n.text:0000000000408ffe\n.text:0000000000409004\n.text:000000000040900b\n.text:000000000040900d\n.text:000000000040900f\n.text:0000000000409014\n.text:0000000000409019\n.text:000000000040901d\n.text:0000000000409022\n.text:0000000000409025\n.text:0000000000409027\n.text:000000000040902a\n.text:000000000040902f\n.text:0000000000409031\n.text:0000000000409033\n.text:0000000000409035\n.text:0000000000409037\n.text:000000000040903a\n.text:000000000040903c\n.text:0000000000409041\n.text:0000000000409043\n.text:0000000000409045\n.text:0000000000409047\n.text:000000000040904e\n.text:0000000000409050\n.text:0000000000409055\n.text:0000000000409057\n.text:0000000000409059\n.text:000000000040905e\n.text:0000000000409060\n.text:0000000000409062\n.text:0000000000409064\n.text:0000000000409067\n.text:000000000040906c\n.text:000000000040906e\n.text:0000000000409070\n.text:0000000000409072\n.text:0000000000409077\n.text:000000000040907a\n.text:000000000040907c\n.text:0000000000409081\n.text:0000000000409084\n.text:0000000000409087\n.text:0000000000409089\n.text:000000000040908e\n.text:0000000000409091\n.text:0000000000409096\n.text:0000000000409098\n.text:000000000040909f\n.text:00000000004090a0\n.text:00000000004090a2\n.text:00000000004090a4\n.text:00000000004090a5\n'
p1749
tp1750
sS'__fpending'
p1751
(S'\n__stdcall __fpending()\n'
p1752
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_0060e068)();\u000a  return;\u000a}\u000a\u000a
p1753
S'JMP qword ptr [0x0060e068]\n'
p1754
S'ff 25 82 c7 20 00\n'
p1755
S'.plt:00000000004018e0\n'
p1756
tp1757
s.