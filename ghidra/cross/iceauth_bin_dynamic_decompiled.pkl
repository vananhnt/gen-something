(dp0
S'fflush'
p1
(S'\n__stdcall fflush(FILE * __stream)\n'
p2
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fflush(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fflush_00606100)();\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x00606100]\n'
p4
S'ff 25 ca 50 20 00\n'
p5
S'.plt:0000000000401030\n'
p6
tp7
sS'do_add'
p8
(S'\n__stdcall do_add(char * inputfilename, char * * argv)\n'
p9
V\u000aint do_add(char *inputfilename,char **argv)\u000a\u000a{\u000a  char *__s1;\u000a  char *__s;\u000a  char *__s_00;\u000a  size_t sVar1;\u000a  void *pvVar2;\u000a  undefined8 *puVar3;\u000a  int iVar4;\u000a  char **in_RCX;\u000a  int in_EDX;\u000a  uint uVar5;\u000a  undefined2 uVar6;\u000a  void **ppvVar7;\u000a  size_t __size;\u000a  void **__ptr;\u000a  int ndup;\u000a  int nrepl;\u000a  int nnew;\u000a  undefined2 local_68;\u000a  char *local_60;\u000a  char *local_58;\u000a  int local_4c;\u000a  char *local_48;\u000a  char *local_40;\u000a  \u000a  local_58 = (char *)0x0;\u000a  local_60 = (char *)0x0;\u000a  if ((((in_EDX != 6) || (__s1 = in_RCX[1], __s1 == (char *)0x0)) ||\u000a      (__s = in_RCX[2], __s == (char *)0x0)) ||\u000a     (((local_48 = in_RCX[3], local_48 == (char *)0x0 ||\u000a       (local_40 = in_RCX[4], local_40 == (char *)0x0)) ||\u000a      (__s_00 = in_RCX[5], __s_00 == (char *)0x0)))) {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a    return 1;\u000a  }\u000a  sVar1 = strlen(__s);\u000a  local_68 = (undefined2)sVar1;\u000a  if ((int)sVar1 < 1) {\u000aLAB_00401dfa:\u000a    sVar1 = strlen(__s_00);\u000a    uVar6 = (undefined2)sVar1;\u000a    if ((*__s_00 == '\u005c"') &&\u000a       (__size = (long)((sVar1 << 0x20) + -0x100000000) >> 0x20, __s_00[__size] == '\u005c"')) {\u000a      local_60 = (char *)malloc(__size);\u000a      if (local_60 == (char *)0x0) goto LAB_00401fcf;\u000a      iVar4 = (int)sVar1 + -2;\u000a      uVar6 = (undefined2)iVar4;\u000a      strncpy(local_60,__s_00 + 1,(long)iVar4);\u000a    }\u000a    else {\u000a      iVar4 = strcmp(__s1,"SUN-DES-1");\u000a      if ((iVar4 == 0) || (iVar4 = strcmp(__s1,"KERBEROS-V5-1"), iVar4 == 0)) {\u000a        local_60 = (char *)malloc((long)((sVar1 << 0x20) + 0x100000000) >> 0x20);\u000a        if (local_60 == (char *)0x0) goto LAB_00401fcf;\u000a        strcpy(local_60,__s_00);\u000a      }\u000a      else {\u000a        iVar4 = cvthexkey(__s_00,&local_60);\u000a        uVar6 = (undefined2)iVar4;\u000a        if (iVar4 < 0) {\u000a          prefix(inputfilename);\u000a          fwrite("authdata_hex contains odd number of or non-hex characters\u005cn",0x3a,1,stderr);\u000a          free(local_58);\u000a          return 1;\u000a        }\u000a      }\u000a    }\u000a    ppvVar7 = (void **)malloc(0x38);\u000a    if (ppvVar7 == (void **)0x0) {\u000a      __ptr = (void **)0x0;\u000a    }\u000a    else {\u000a      pvVar2 = (void *)__strdup(__s1);\u000a      *ppvVar7 = pvVar2;\u000a      *(undefined2 *)(ppvVar7 + 1) = local_68;\u000a      *(char **)(ppvVar7 + 2) = local_58;\u000a      pvVar2 = (void *)__strdup(local_48);\u000a      ppvVar7[3] = pvVar2;\u000a      pvVar2 = (void *)__strdup(local_40);\u000a      ppvVar7[4] = pvVar2;\u000a      *(undefined2 *)(ppvVar7 + 5) = uVar6;\u000a      *(char **)(ppvVar7 + 6) = local_60;\u000a      __ptr = ppvVar7;\u000a      if (((*ppvVar7 != (void *)0x0) &&\u000a          ((((ppvVar7[2] != (void *)0x0 || (__ptr = ppvVar7, *(short *)(ppvVar7 + 1) == 0)) &&\u000a            (__ptr = ppvVar7, ppvVar7[3] != (void *)0x0)) &&\u000a           (__ptr = ppvVar7, ppvVar7[4] != (void *)0x0)))) &&\u000a         (((ppvVar7[6] != (void *)0x0 || (__ptr = ppvVar7, *(short *)(ppvVar7 + 5) == 0)) &&\u000a          (puVar3 = (undefined8 *)malloc(0x10), __ptr = ppvVar7, puVar3 != (undefined8 *)0x0)))) {\u000a        *puVar3 = 0;\u000a        *(void ***)(puVar3 + 1) = ppvVar7;\u000a        iVar4 = merge_entries();\u000a        if (0 < iVar4) {\u000a          iceauth_modified = 1;\u000a          return 0;\u000a        }\u000a        prefix(inputfilename);\u000a        if (local_4c < 1) {\u000a          fwrite("unable to merge in added record\u005cn",0x20,1,stderr);\u000a        }\u000a        else {\u000a          fwrite("no records added - all duplicate\u005cn",0x21,1,stderr);\u000a        }\u000a        uVar5 = (uint)(local_4c < 1);\u000a        __ptr = ppvVar7;\u000a        goto LAB_00401fff;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    if ((*__s != '\u005c"') ||\u000a       (__size = (long)((sVar1 << 0x20) + -0x100000000) >> 0x20, __s[__size] != '\u005c"')) {\u000a      iVar4 = cvthexkey(__s,&local_58);\u000a      local_68 = (undefined2)iVar4;\u000a      if (iVar4 < 0) {\u000a        prefix(inputfilename);\u000a        fwrite("protodata_hex contains odd number of or non-hex characters\u005cn",0x3b,1,stderr);\u000a        return 1;\u000a      }\u000a      goto LAB_00401dfa;\u000a    }\u000a    local_58 = (char *)malloc(__size);\u000a    if (local_58 != (char *)0x0) {\u000a      iVar4 = (int)sVar1 + -2;\u000a      local_68 = (undefined2)iVar4;\u000a      strncpy(local_58,__s + 1,(long)iVar4);\u000a      goto LAB_00401dfa;\u000a    }\u000aLAB_00401fcf:\u000a    ppvVar7 = (void **)0x0;\u000a    __ptr = (void **)0x0;\u000a  }\u000a  prefix(inputfilename);\u000a  fwrite("unable to allocate memory to add an entry\u005cn",0x2a,1,stderr);\u000a  uVar5 = 1;\u000aLAB_00401fff:\u000a  if (local_58 != (char *)0x0) {\u000a    free(local_58);\u000a  }\u000a  if (local_60 != (char *)0x0) {\u000a    free(local_60);\u000a  }\u000a  if (ppvVar7 != (void **)0x0) {\u000a    if (*ppvVar7 != (void *)0x0) {\u000a      free(*ppvVar7);\u000a    }\u000a    if (ppvVar7[3] != (void *)0x0) {\u000a      free(ppvVar7[3]);\u000a    }\u000a    if (ppvVar7[4] != (void *)0x0) {\u000a      free(ppvVar7[4]);\u000a    }\u000a    free(__ptr);\u000a  }\u000a  return (int)uVar5;\u000a}\u000a\u000a
p10
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R13,RCX\nMOV R15D,ESI\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x10],0x0\nMOV qword ptr [RSP + 0x8],0x0\nCMP EDX,0x6\nJNZ 0x00401d8f\nMOV R12,qword ptr [R13 + 0x8]\nTEST R12,R12\nJZ 0x00401d8f\nMOV RBP,qword ptr [R13 + 0x10]\nTEST RBP,RBP\nJZ 0x00401d8f\nMOV RCX,qword ptr [R13 + 0x18]\nTEST RCX,RCX\nJZ 0x00401d8f\nMOV RAX,qword ptr [R13 + 0x20]\nTEST RAX,RAX\nJZ 0x00401d8f\nMOV R14,qword ptr [R13 + 0x28]\nTEST R14,R14\nJZ 0x00401d8f\nMOV qword ptr [RSP + 0x20],RCX\nMOV qword ptr [RSP + 0x28],RAX\nMOV R13,-0x100000000\nMOV RDI,RBP\nCALL 0x00400f50\nTEST EAX,EAX\nJLE 0x00401df6\nCMP byte ptr [RBP],0x22\nJNZ 0x00401db9\nMOV RDI,RAX\nSHL RDI,0x20\nADD RDI,R13\nSAR RDI,0x20\nCMP byte ptr [RBP + RDI*0x1],0x22\nJNZ 0x00401db9\nMOV qword ptr [RSP],RAX\nCALL 0x00401020\nMOV qword ptr [RSP + 0x10],RAX\nTEST RAX,RAX\nJZ 0x00401fcf\nINC RBP\nMOV RCX,qword ptr [RSP]\nLEA ECX,[RCX + -0x2]\nMOV qword ptr [RSP],RCX\nMOVSXD RDX,ECX\nMOV RDI,RAX\nMOV RSI,RBP\nCALL 0x00400e90\nJMP 0x00401dfa\nMOV RDI,RBX\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RDI,qword ptr [R13]\nCALL 0x00402950\nMOV EBX,0x1\nMOV EAX,EBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nLEA RSI,[RSP + 0x10]\nMOV RDI,RBP\nCALL 0x00402970\nMOV qword ptr [RSP],RAX\nTEST EAX,EAX\nJNS 0x00401dfa\nMOV RDI,RBX\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x403e8f\nMOV ESI,0x3b\nMOV EDX,0x1\nCALL 0x004010b0\nJMP 0x00401da3\nMOV qword ptr [RSP],RAX\nMOV RDI,R14\nCALL 0x00400f50\nMOV RBP,RAX\nCMP byte ptr [R14],0x22\nJNZ 0x00401e4c\nMOV RDI,RBP\nSHL RDI,0x20\nADD RDI,R13\nSAR RDI,0x20\nCMP byte ptr [R14 + RDI*0x1],0x22\nJNZ 0x00401e4c\nCALL 0x00401020\nMOV qword ptr [RSP + 0x8],RAX\nTEST RAX,RAX\nJZ 0x00401fcf\nINC R14\nLEA EBP,[RBP + -0x2]\nMOVSXD RDX,EBP\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00400e90\nJMP 0x00401eec\nMOV ESI,0x403ecb\nMOV RDI,R12\nCALL 0x00400fd0\nTEST EAX,EAX\nJZ 0x00401eb6\nMOV ESI,0x403ed5\nMOV RDI,R12\nCALL 0x00400fd0\nTEST EAX,EAX\nJZ 0x00401eb6\nLEA RSI,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00402970\nMOV EBP,EAX\nTEST EBP,EBP\nJNS 0x00401eec\nMOV RDI,RBX\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x403ee3\nMOV ESI,0x3a\nMOV EDX,0x1\nCALL 0x004010b0\nMOV RDI,qword ptr [RSP + 0x10]\nCALL 0x00400e60\nJMP 0x00401da3\nMOV RAX,RBP\nSHL RAX,0x20\nMOV RDI,0x100000000\nADD RDI,RAX\nSAR RDI,0x20\nCALL 0x00401020\nMOV qword ptr [RSP + 0x8],RAX\nTEST RAX,RAX\nJZ 0x00401fcf\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00400ed0\nMOV EDI,0x38\nCALL 0x00401020\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00401fc7\nMOV RDI,R12\nCALL 0x00400fb0\nMOV qword ptr [R14],RAX\nMOV RAX,qword ptr [RSP]\nMOV word ptr [R14 + 0x8],AX\nMOV RAX,qword ptr [RSP + 0x10]\nMOV qword ptr [R14 + 0x10],RAX\nMOV RDI,qword ptr [RSP + 0x20]\nCALL 0x00400fb0\nMOV qword ptr [R14 + 0x18],RAX\nMOV RDI,qword ptr [RSP + 0x28]\nCALL 0x00400fb0\nMOV qword ptr [R14 + 0x20],RAX\nMOV word ptr [R14 + 0x28],BP\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [R14 + 0x30],RAX\nCMP qword ptr [R14],0x0\nJZ 0x00401fc2\nCMP qword ptr [R14 + 0x10],0x0\nJNZ 0x00401f5e\nCMP word ptr [R14 + 0x8],0x0\nJNZ 0x00401fc2\nCMP qword ptr [R14 + 0x18],0x0\nJZ 0x00401fc2\nCMP qword ptr [R14 + 0x20],0x0\nJZ 0x00401fc2\nCMP qword ptr [R14 + 0x30],0x0\nJNZ 0x00401f7b\nCMP word ptr [R14 + 0x28],0x0\nJNZ 0x00401fc2\nMOV EDI,0x10\nCALL 0x00401020\nTEST RAX,RAX\nJZ 0x00401fc2\nMOV qword ptr [RAX],0x0\nMOV qword ptr [RAX + 0x8],R14\nLEA RSI,[RSP + 0x34]\nLEA RDX,[RSP + 0x30]\nLEA RCX,[RSP + 0x1c]\nMOV RDI,RAX\nCALL 0x00402b00\nTEST EAX,EAX\nJLE 0x0040205d\nMOV byte ptr [0x00606200],0x1\nXOR EBX,EBX\nJMP 0x00401da8\nMOV RBP,R14\nJMP 0x00401fd4\nMOV RBP,R14\nXOR R14D,R14D\nJMP 0x00401fd4\nXOR R14D,R14D\nXOR EBP,EBP\nMOV RDI,RBX\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x403f61\nMOV ESI,0x2a\nMOV EDX,0x1\nCALL 0x004010b0\nMOV EBX,0x1\nMOV RDI,qword ptr [RSP + 0x10]\nTEST RDI,RDI\nJZ 0x0040200e\nCALL 0x00400e60\nMOV RDI,qword ptr [RSP + 0x8]\nTEST RDI,RDI\nJZ 0x0040201d\nCALL 0x00400e60\nTEST RBP,RBP\nJZ 0x00401da8\nMOV RDI,qword ptr [RBP]\nTEST RDI,RDI\nJZ 0x00402034\nCALL 0x00400e60\nMOV RDI,qword ptr [RBP + 0x18]\nTEST RDI,RDI\nJZ 0x00402042\nCALL 0x00400e60\nMOV RDI,qword ptr [RBP + 0x20]\nTEST RDI,RDI\nJZ 0x00402050\nCALL 0x00400e60\nMOV RDI,R14\nCALL 0x00400e60\nJMP 0x00401da8\nMOV RDI,RBX\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nCMP dword ptr [RSP + 0x1c],0x0\nJLE 0x0040208e\nMOV EDI,0x403f1e\nMOV ESI,0x21\nMOV EDX,0x1\nCALL 0x004010b0\nXOR EBX,EBX\nJMP 0x004020a7\nMOV EDI,0x403f40\nMOV ESI,0x20\nMOV EDX,0x1\nCALL 0x004010b0\nMOV EBX,0x1\nMOV RBP,R14\nJMP 0x00401fff\n'
p11
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n49 89 cd\n41 89 f7\n48 89 fb\n48 c7 44 24 10 00 00 00 00\n48 c7 44 24 08 00 00 00 00\n83 fa 06\n0f 85 ad 00 00 00\n4d 8b 65 08\n4d 85 e4\n0f 84 a0 00 00 00\n49 8b 6d 10\n48 85 ed\n0f 84 93 00 00 00\n49 8b 4d 18\n48 85 c9\n0f 84 86 00 00 00\n49 8b 45 20\n48 85 c0\n74 7d\n4d 8b 75 28\n4d 85 f6\n74 74\n48 89 4c 24 20\n48 89 44 24 28\n49 bd 00 00 00 00 ff ff ff ff\n48 89 ef\ne8 19 f2 ff ff\n85 c0\n0f 8e b7 00 00 00\n80 7d 00 22\n75 74\n48 89 c7\n48 c1 e7 20\n4c 01 ef\n48 c1 ff 20\n80 7c 3d 00 22\n75 5f\n48 89 04 24\ne8 bd f2 ff ff\n48 89 44 24 10\n48 85 c0\n0f 84 5e 02 00 00\n48 ff c5\n48 8b 0c 24\n8d 49 fe\n48 89 0c 24\n48 63 d1\n48 89 c7\n48 89 ee\ne8 03 f1 ff ff\neb 6b\n48 89 df\n44 89 fe\ne8 e6 fd ff ff\n49 8b 7d 00\ne8 ad 0b 00 00\nbb 01 00 00 00\n89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8d 74 24 10\n48 89 ef\ne8 aa 0b 00 00\n48 89 04 24\n85 c0\n79 2c\n48 89 df\n44 89 fe\ne8 a7 fd ff ff\n48 8b 0d e0 43 20 00\nbf 8f 3e 40 00\nbe 3b 00 00 00\nba 01 00 00 00\ne8 bc f2 ff ff\neb ad\n48 89 04 24\n4c 89 f7\ne8 4e f1 ff ff\n48 89 c5\n41 80 3e 22\n75 41\n48 89 ef\n48 c1 e7 20\n4c 01 ef\n48 c1 ff 20\n41 80 3c 3e 22\n75 2c\ne8 fb f1 ff ff\n48 89 44 24 08\n48 85 c0\n0f 84 9c 01 00 00\n49 ff c6\n8d 6d fe\n48 63 d5\n48 89 c7\n4c 89 f6\ne8 49 f0 ff ff\ne9 a0 00 00 00\nbe cb 3e 40 00\n4c 89 e7\ne8 77 f1 ff ff\n85 c0\n74 59\nbe d5 3e 40 00\n4c 89 e7\ne8 66 f1 ff ff\n85 c0\n74 48\n48 8d 74 24 08\n4c 89 f7\ne8 f5 0a 00 00\n89 c5\n85 ed\n79 6b\n48 89 df\n44 89 fe\ne8 f4 fc ff ff\n48 8b 0d 2d 43 20 00\nbf e3 3e 40 00\nbe 3a 00 00 00\nba 01 00 00 00\ne8 09 f2 ff ff\n48 8b 7c 24 10\ne8 af ef ff ff\ne9 ed fe ff ff\n48 89 e8\n48 c1 e0 20\n48 bf 00 00 00 00 01 00 00 00\n48 01 c7\n48 c1 ff 20\ne8 4d f1 ff ff\n48 89 44 24 08\n48 85 c0\n0f 84 ee 00 00 00\n48 89 c7\n4c 89 f6\ne8 e4 ef ff ff\nbf 38 00 00 00\ne8 2a f1 ff ff\n49 89 c6\n4d 85 f6\n0f 84 c5 00 00 00\n4c 89 e7\ne8 a6 f0 ff ff\n49 89 06\n48 8b 04 24\n66 41 89 46 08\n48 8b 44 24 10\n49 89 46 10\n48 8b 7c 24 20\ne8 87 f0 ff ff\n49 89 46 18\n48 8b 7c 24 28\ne8 79 f0 ff ff\n49 89 46 20\n66 41 89 6e 28\n48 8b 44 24 08\n49 89 46 30\n49 83 3e 00\n74 73\n49 83 7e 10 00\n75 08\n66 41 83 7e 08 00\n75 64\n49 83 7e 18 00\n74 5d\n49 83 7e 20 00\n74 56\n49 83 7e 30 00\n75 08\n66 41 83 7e 28 00\n75 47\nbf 10 00 00 00\ne8 9b f0 ff ff\n48 85 c0\n74 38\n48 c7 00 00 00 00 00\n4c 89 70 08\n48 8d 74 24 34\n48 8d 54 24 30\n48 8d 4c 24 1c\n48 89 c7\ne8 54 0b 00 00\n85 c0\n0f 8e a9 00 00 00\nc6 05 45 42 20 00 01\n31 db\ne9 e6 fd ff ff\n4c 89 f5\neb 0d\n4c 89 f5\n45 31 f6\neb 05\n45 31 f6\n31 ed\n48 89 df\n44 89 fe\ne8 a1 fb ff ff\n48 8b 0d da 41 20 00\nbf 61 3f 40 00\nbe 2a 00 00 00\nba 01 00 00 00\ne8 b6 f0 ff ff\nbb 01 00 00 00\n48 8b 7c 24 10\n48 85 ff\n74 05\ne8 52 ee ff ff\n48 8b 7c 24 08\n48 85 ff\n74 05\ne8 43 ee ff ff\n48 85 ed\n0f 84 82 fd ff ff\n48 8b 7d 00\n48 85 ff\n74 05\ne8 2c ee ff ff\n48 8b 7d 18\n48 85 ff\n74 05\ne8 1e ee ff ff\n48 8b 7d 20\n48 85 ff\n74 05\ne8 10 ee ff ff\n4c 89 f7\ne8 08 ee ff ff\ne9 4b fd ff ff\n48 89 df\n44 89 fe\ne8 18 fb ff ff\n48 8b 0d 51 41 20 00\n83 7c 24 1c 00\n7e 18\nbf 1e 3f 40 00\nbe 21 00 00 00\nba 01 00 00 00\ne8 26 f0 ff ff\n31 db\neb 19\nbf 40 3f 40 00\nbe 20 00 00 00\nba 01 00 00 00\ne8 0e f0 ff ff\nbb 01 00 00 00\n4c 89 f5\ne9 50 ff ff ff\n'
p12
S'.text:0000000000401cb0\n.text:0000000000401cb1\n.text:0000000000401cb3\n.text:0000000000401cb5\n.text:0000000000401cb7\n.text:0000000000401cb9\n.text:0000000000401cba\n.text:0000000000401cbe\n.text:0000000000401cc1\n.text:0000000000401cc4\n.text:0000000000401cc7\n.text:0000000000401cd0\n.text:0000000000401cd9\n.text:0000000000401cdc\n.text:0000000000401ce2\n.text:0000000000401ce6\n.text:0000000000401ce9\n.text:0000000000401cef\n.text:0000000000401cf3\n.text:0000000000401cf6\n.text:0000000000401cfc\n.text:0000000000401d00\n.text:0000000000401d03\n.text:0000000000401d09\n.text:0000000000401d0d\n.text:0000000000401d10\n.text:0000000000401d12\n.text:0000000000401d16\n.text:0000000000401d19\n.text:0000000000401d1b\n.text:0000000000401d20\n.text:0000000000401d25\n.text:0000000000401d2f\n.text:0000000000401d32\n.text:0000000000401d37\n.text:0000000000401d39\n.text:0000000000401d3f\n.text:0000000000401d43\n.text:0000000000401d45\n.text:0000000000401d48\n.text:0000000000401d4c\n.text:0000000000401d4f\n.text:0000000000401d53\n.text:0000000000401d58\n.text:0000000000401d5a\n.text:0000000000401d5e\n.text:0000000000401d63\n.text:0000000000401d68\n.text:0000000000401d6b\n.text:0000000000401d71\n.text:0000000000401d74\n.text:0000000000401d78\n.text:0000000000401d7b\n.text:0000000000401d7f\n.text:0000000000401d82\n.text:0000000000401d85\n.text:0000000000401d88\n.text:0000000000401d8d\n.text:0000000000401d8f\n.text:0000000000401d92\n.text:0000000000401d95\n.text:0000000000401d9a\n.text:0000000000401d9e\n.text:0000000000401da3\n.text:0000000000401da8\n.text:0000000000401daa\n.text:0000000000401dae\n.text:0000000000401daf\n.text:0000000000401db1\n.text:0000000000401db3\n.text:0000000000401db5\n.text:0000000000401db7\n.text:0000000000401db8\n.text:0000000000401db9\n.text:0000000000401dbe\n.text:0000000000401dc1\n.text:0000000000401dc6\n.text:0000000000401dca\n.text:0000000000401dcc\n.text:0000000000401dce\n.text:0000000000401dd1\n.text:0000000000401dd4\n.text:0000000000401dd9\n.text:0000000000401de0\n.text:0000000000401de5\n.text:0000000000401dea\n.text:0000000000401def\n.text:0000000000401df4\n.text:0000000000401df6\n.text:0000000000401dfa\n.text:0000000000401dfd\n.text:0000000000401e02\n.text:0000000000401e05\n.text:0000000000401e09\n.text:0000000000401e0b\n.text:0000000000401e0e\n.text:0000000000401e12\n.text:0000000000401e15\n.text:0000000000401e19\n.text:0000000000401e1e\n.text:0000000000401e20\n.text:0000000000401e25\n.text:0000000000401e2a\n.text:0000000000401e2d\n.text:0000000000401e33\n.text:0000000000401e36\n.text:0000000000401e39\n.text:0000000000401e3c\n.text:0000000000401e3f\n.text:0000000000401e42\n.text:0000000000401e47\n.text:0000000000401e4c\n.text:0000000000401e51\n.text:0000000000401e54\n.text:0000000000401e59\n.text:0000000000401e5b\n.text:0000000000401e5d\n.text:0000000000401e62\n.text:0000000000401e65\n.text:0000000000401e6a\n.text:0000000000401e6c\n.text:0000000000401e6e\n.text:0000000000401e73\n.text:0000000000401e76\n.text:0000000000401e7b\n.text:0000000000401e7d\n.text:0000000000401e7f\n.text:0000000000401e81\n.text:0000000000401e84\n.text:0000000000401e87\n.text:0000000000401e8c\n.text:0000000000401e93\n.text:0000000000401e98\n.text:0000000000401e9d\n.text:0000000000401ea2\n.text:0000000000401ea7\n.text:0000000000401eac\n.text:0000000000401eb1\n.text:0000000000401eb6\n.text:0000000000401eb9\n.text:0000000000401ebd\n.text:0000000000401ec7\n.text:0000000000401eca\n.text:0000000000401ece\n.text:0000000000401ed3\n.text:0000000000401ed8\n.text:0000000000401edb\n.text:0000000000401ee1\n.text:0000000000401ee4\n.text:0000000000401ee7\n.text:0000000000401eec\n.text:0000000000401ef1\n.text:0000000000401ef6\n.text:0000000000401ef9\n.text:0000000000401efc\n.text:0000000000401f02\n.text:0000000000401f05\n.text:0000000000401f0a\n.text:0000000000401f0d\n.text:0000000000401f11\n.text:0000000000401f16\n.text:0000000000401f1b\n.text:0000000000401f1f\n.text:0000000000401f24\n.text:0000000000401f29\n.text:0000000000401f2d\n.text:0000000000401f32\n.text:0000000000401f37\n.text:0000000000401f3b\n.text:0000000000401f40\n.text:0000000000401f45\n.text:0000000000401f49\n.text:0000000000401f4d\n.text:0000000000401f4f\n.text:0000000000401f54\n.text:0000000000401f56\n.text:0000000000401f5c\n.text:0000000000401f5e\n.text:0000000000401f63\n.text:0000000000401f65\n.text:0000000000401f6a\n.text:0000000000401f6c\n.text:0000000000401f71\n.text:0000000000401f73\n.text:0000000000401f79\n.text:0000000000401f7b\n.text:0000000000401f80\n.text:0000000000401f85\n.text:0000000000401f88\n.text:0000000000401f8a\n.text:0000000000401f91\n.text:0000000000401f95\n.text:0000000000401f9a\n.text:0000000000401f9f\n.text:0000000000401fa4\n.text:0000000000401fa7\n.text:0000000000401fac\n.text:0000000000401fae\n.text:0000000000401fb4\n.text:0000000000401fbb\n.text:0000000000401fbd\n.text:0000000000401fc2\n.text:0000000000401fc5\n.text:0000000000401fc7\n.text:0000000000401fca\n.text:0000000000401fcd\n.text:0000000000401fcf\n.text:0000000000401fd2\n.text:0000000000401fd4\n.text:0000000000401fd7\n.text:0000000000401fda\n.text:0000000000401fdf\n.text:0000000000401fe6\n.text:0000000000401feb\n.text:0000000000401ff0\n.text:0000000000401ff5\n.text:0000000000401ffa\n.text:0000000000401fff\n.text:0000000000402004\n.text:0000000000402007\n.text:0000000000402009\n.text:000000000040200e\n.text:0000000000402013\n.text:0000000000402016\n.text:0000000000402018\n.text:000000000040201d\n.text:0000000000402020\n.text:0000000000402026\n.text:000000000040202a\n.text:000000000040202d\n.text:000000000040202f\n.text:0000000000402034\n.text:0000000000402038\n.text:000000000040203b\n.text:000000000040203d\n.text:0000000000402042\n.text:0000000000402046\n.text:0000000000402049\n.text:000000000040204b\n.text:0000000000402050\n.text:0000000000402053\n.text:0000000000402058\n.text:000000000040205d\n.text:0000000000402060\n.text:0000000000402063\n.text:0000000000402068\n.text:000000000040206f\n.text:0000000000402074\n.text:0000000000402076\n.text:000000000040207b\n.text:0000000000402080\n.text:0000000000402085\n.text:000000000040208a\n.text:000000000040208c\n.text:000000000040208e\n.text:0000000000402093\n.text:0000000000402098\n.text:000000000040209d\n.text:00000000004020a2\n.text:00000000004020a7\n.text:00000000004020aa\n'
p13
tp14
sS'die'
p15
(S'\n__stdcall die()\n'
p16
V\u000avoid die(void)\u000a\u000a{\u000a  dieing = 1;\u000a  auth_finalize();\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(0);\u000a}\u000a\u000a
p17
S'PUSH RAX\nMOV dword ptr [0x00606204],0x1\nCALL 0x004017c0\nXOR EDI,EDI\nCALL 0x00400ec0\n'
p18
S'50\nc7 05 69 45 20 00 01 00 00 00\ne8 20 fb ff ff\n31 ff\ne8 19 f2 ff ff\n'
p19
S'.text:0000000000401c90\n.text:0000000000401c91\n.text:0000000000401c9b\n.text:0000000000401ca0\n.text:0000000000401ca2\n'
p20
tp21
sS'__libc_csu_init'
p22
(S'\n__stdcall __libc_csu_init()\n'
p23
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x605df8]\nPUSH RBP\nLEA RBP,[0x605e00]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400e38\nTEST RBP,RBP\nJZ 0x004034c6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x004034b0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p25
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 76 29 20 00\n55\n48 8d 2d 76 29 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 97 d9 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p26
S'.text:0000000000403470\n.text:0000000000403472\n.text:0000000000403474\n.text:0000000000403477\n.text:0000000000403479\n.text:000000000040347b\n.text:0000000000403482\n.text:0000000000403483\n.text:000000000040348a\n.text:000000000040348b\n.text:000000000040348e\n.text:0000000000403491\n.text:0000000000403494\n.text:0000000000403498\n.text:000000000040349c\n.text:00000000004034a1\n.text:00000000004034a4\n.text:00000000004034a6\n.text:00000000004034a8\n.text:00000000004034b0\n.text:00000000004034b3\n.text:00000000004034b6\n.text:00000000004034b9\n.text:00000000004034bd\n.text:00000000004034c1\n.text:00000000004034c4\n.text:00000000004034c6\n.text:00000000004034ca\n.text:00000000004034cb\n.text:00000000004034cc\n.text:00000000004034ce\n.text:00000000004034d0\n.text:00000000004034d2\n.text:00000000004034d4\n'
p27
tp28
sS'_init'
p29
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p30
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00605ff8;\u000a  if (PTR___gmon_start___00605ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00605ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p31
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00605ff8]\nTEST RAX,RAX\nJZ 0x00400e4a\nCALL RAX\nADD RSP,0x8\nRET\n'
p32
S'48 83 ec 08\n48 8b 05 b5 51 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p33
S'.init:0000000000400e38\n.init:0000000000400e3c\n.init:0000000000400e43\n.init:0000000000400e46\n.init:0000000000400e48\n.init:0000000000400e4a\n.init:0000000000400e4e\n'
p34
tp35
sS'prefix'
p36
(S'\n__stdcall prefix(char * fn)\n'
p37
V\u000avoid prefix(char *fn)\u000a\u000a{\u000a  uint in_ESI;\u000a  \u000a  fprintf(stderr,"%s: %s:%d:  ",ProgramName,fn,(ulong)in_ESI);\u000a  return;\u000a}\u000a\u000a
p38
S'MOV R8D,ESI\nMOV RCX,RDI\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x40457c\nXOR EAX,EAX\nJMP 0x00400ff0\n'
p39
S'41 89 f0\n48 89 f9\n48 8b 3d 33 46 20 00\n48 8b 15 7c 46 20 00\nbe 7c 45 40 00\n31 c0\ne9 50 f4 ff ff\n'
p40
S'.text:0000000000401b80\n.text:0000000000401b83\n.text:0000000000401b86\n.text:0000000000401b8d\n.text:0000000000401b94\n.text:0000000000401b99\n.text:0000000000401b9b\n'
p41
tp42
sS'usage'
p43
(S'\n__stdcall usage()\n'
p44
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  char \u000a       "\u005cnwhere options include:\u005cn    -f authfilename                name of authority file to use\u005cn    -v                             turn on extra messages\u005cn    -q                             turn off extra messages\u005cn    -i                             ignore locks on authority file\u005cn    -b                             break locks on authority file\u005cn    -V                             print version and exit\u005cn\u005cnand commands have the following syntax:\u005cn"\u000a       [437];\u000a  char \u000a       "A dash may be used with the \u005c"merge\u005c" and \u005c"source\u005c" to read from the\u005cnstandard input.  Commands beginning with \u005c"n\u005c" use numeric format.\u005cn"\u000a       [132];\u000a  \u000a  fprintf((FILE *)stderr,"usage:  %s [-options ...] [command arg ...]\u005cn",ProgramName);\u000a  fwrite(\u000a         "\u005cnwhere options include:\u005cn    -f authfilename                name of authority file to use\u005cn    -v                             turn on extra messages\u005cn    -q                             turn off extra messages\u005cn    -i                             ignore locks on authority file\u005cn    -b                             break locks on authority file\u005cn    -V                             print version and exit\u005cn\u005cnand commands have the following syntax:\u005cn"\u000a         ,0x1b4,1,(FILE *)stderr);\u000a  print_help(stderr,(char *)0x0);\u000a  fprintf((FILE *)stderr,"\u005cn%s\u005cn",\u000a                    \u000a          "A dash may be used with the \u005c"merge\u005c" and \u005c"source\u005c" to read from the\u005cnstandard input.  Commands beginning with \u005c"n\u005c" use numeric format.\u005cn"\u000a         );\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p45
S'PUSH RBX\nMOV EBX,EDI\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x4038e5\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x403610\nMOV ESI,0x1b4\nMOV EDX,0x1\nCALL 0x004010b0\nMOV RDI,qword ptr [0x006061c0]\nXOR ESI,ESI\nCALL 0x00401ba0\nMOV RDI,qword ptr [0x006061c0]\nMOV ESI,0x403915\nMOV EDX,0x4037d0\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV EDI,EBX\nCALL 0x004010a0\n'
p46
S'53\n89 fb\n48 8b 3d 96 4d 20 00\n48 8b 15 df 4d 20 00\nbe e5 38 40 00\n31 c0\ne8 b3 fb ff ff\n48 8b 0d 7c 4d 20 00\nbf 10 36 40 00\nbe b4 01 00 00\nba 01 00 00 00\ne8 58 fc ff ff\n48 8b 3d 61 4d 20 00\n31 f6\ne8 3a 07 00 00\n48 8b 3d 53 4d 20 00\nbe 15 39 40 00\nba d0 37 40 00\n31 c0\ne8 72 fb ff ff\n89 df\ne8 1b fc ff ff\n'
p47
S'.text:0000000000401420\n.text:0000000000401421\n.text:0000000000401423\n.text:000000000040142a\n.text:0000000000401431\n.text:0000000000401436\n.text:0000000000401438\n.text:000000000040143d\n.text:0000000000401444\n.text:0000000000401449\n.text:000000000040144e\n.text:0000000000401453\n.text:0000000000401458\n.text:000000000040145f\n.text:0000000000401461\n.text:0000000000401466\n.text:000000000040146d\n.text:0000000000401472\n.text:0000000000401477\n.text:0000000000401479\n.text:000000000040147e\n.text:0000000000401480\n'
p48
tp49
sS'main'
p50
(S'\n__stdcall main(char * * argv)\n'
p51
V\u000aint main(char **argv)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *pcVar2;\u000a  char *inputfilename;\u000a  long lVar3;\u000a  char cVar4;\u000a  char **in_RSI;\u000a  int iVar5;\u000a  \u000a  __fd = (int)argv;\u000a  ProgramName = *in_RSI;\u000a  if (1 < __fd) {\u000a    iVar5 = 1;\u000a    do {\u000a      inputfilename = in_RSI[(long)iVar5];\u000a      if (*inputfilename != '-') {\u000aLAB_0040137c:\u000a        if (verbose == -1) {\u000a          verbose = 0;\u000a        }\u000a        inputfilename = "(argv)";\u000a        goto joined_r0x004013a3;\u000a      }\u000a      cVar4 = inputfilename[1];\u000a      if (cVar4 != 0) {\u000a        inputfilename = inputfilename + 1;\u000a        lVar3 = (long)iVar5;\u000aLAB_00401233:\u000a        pcVar2 = inputfilename + 1;\u000a        switch(cVar4) {\u000a        case 'V':\u000a          puts("iceauth 1.0.7");\u000a                    /* WARNING: Subroutine does not return */\u000a          exit(0);\u000a        default:\u000a          fprintf(stderr,"%s: unrecognized option \u005c'%s\u005c'\u005cn",ProgramName,inputfilename);\u000a          usage(1);\u000a        case 'u':\u000a          usage(0);\u000aLAB_00401358:\u000a          fprintf(stderr,"%s: -f requires an argument\u005cn",ProgramName);\u000a          usage(1);\u000a          goto LAB_0040137c;\u000a        case 'b':\u000a          break_locks = 1;\u000a          break;\u000a        case 'f':\u000a          lVar1 = lVar3 + 1;\u000a          iVar5 = (int)lVar1;\u000a          if ((long)__fd <= lVar1) goto LAB_00401358;\u000a          authfilename = in_RSI[lVar3 + 1];\u000a          cVar4 = *pcVar2;\u000a          inputfilename = pcVar2;\u000a          lVar3 = lVar1;\u000a          if (cVar4 == 0) goto LAB_004012c2;\u000a          goto LAB_00401233;\u000a        case 'i':\u000a          ignore_locks = 1;\u000a          break;\u000a        case 'q':\u000a          verbose = 0;\u000a          break;\u000a        case 'v':\u000a          verbose = 1;\u000a        }\u000a        cVar4 = *pcVar2;\u000a        inputfilename = pcVar2;\u000a        if (cVar4 == 0) {\u000a          iVar5 = (int)lVar3;\u000a          goto LAB_004012c2;\u000a        }\u000a        goto LAB_00401233;\u000a      }\u000aLAB_004012c2:\u000a      iVar5 = iVar5 + 1;\u000a    } while (iVar5 < __fd);\u000a  }\u000a  if (verbose == -1) {\u000a    __fd = fileno(stdout);\u000a    __fd = isatty(__fd);\u000a    verbose = ZEXT14(__fd != 0);\u000a  }\u000a  inputfilename = "(stdin)";\u000ajoined_r0x004013a3:\u000a  if ((authfilename == (char *)0x0) &&\u000a     (authfilename = (char *)IceAuthFileName(), authfilename == (char *)0x0)) {\u000a    fprintf(stderr,"%s:  unable to generate an authority file name\u005cn",ProgramName);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  __fd = auth_initialize(authfilename);\u000a  if (__fd != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  __fd = process_command(inputfilename,(char **)0x1);\u000a  auth_finalize();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit((uint)(__fd != 0));\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBP,EDI\nMOV RAX,qword ptr [RSI]\nMOV qword ptr [0x00606210],RAX\nCMP EBP,0x2\nJL 0x004012cc\nMOVSXD RAX,EBP\nMOV EDI,0x1\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVSXD RDX,EDI\nMOV RCX,qword ptr [RSI + RDX*0x8]\nCMP byte ptr [RCX],0x2d\nJNZ 0x0040137c\nMOV BL,byte ptr [RCX + 0x1]\nTEST BL,BL\nJZ 0x004012c2\nINC RCX\nNOP\nINC RCX\nMOVSX EDI,BL\nADD EDI,-0x56\nCMP EDI,0x20\nJA 0x0040132a\nJMP qword ptr [0x403500 + RDI*0x8]\nMOV dword ptr [0x006061d4],0x1\nJMP 0x00401277\nMOV dword ptr [0x006061d0],0x1\nJMP 0x00401277\nMOV dword ptr [0x00606170],0x0\nJMP 0x00401277\nMOV dword ptr [0x00606170],0x1\nMOVZX EBX,byte ptr [RCX]\nINC RCX\nTEST BL,BL\nJNZ 0x00401233\nJMP 0x004012c0\nLEA RDI,[RDX + 0x1]\nCMP RDI,RAX\nJGE 0x00401358\nMOV RDX,qword ptr [RSI + RDX*0x8 + 0x8]\nMOV qword ptr [0x006061d8],RDX\nMOV BL,byte ptr [RCX]\nTEST BL,BL\nMOV RDX,RDI\nJNZ 0x00401230\nJMP 0x004012c2\nMOV EDI,EDX\nINC EDI\nCMP EDI,EBP\nJL 0x00401210\nMOV EBP,0x2\nCMP dword ptr [0x00606170],-0x1\nJNZ 0x004012fa\nMOV RDI,qword ptr [0x006061a0]\nCALL 0x00401010\nMOV EDI,EAX\nCALL 0x00400ef0\nXOR ECX,ECX\nTEST EAX,EAX\nSETNZ CL\nMOV dword ptr [0x00606170],ECX\nMOV R14D,0x606180\nMOV R15D,0x4038d4\nCMP qword ptr [0x006061d8],0x0\nJZ 0x004013a5\nJMP 0x004013da\nMOV EDI,0x403871\nCALL 0x00400ee0\nXOR EDI,EDI\nCALL 0x004010a0\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nDEC RCX\nMOV ESI,0x40387f\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV EDI,0x1\nCALL 0x00401420\nXOR EDI,EDI\nCALL 0x00401420\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x403854\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV EDI,0x1\nCALL 0x00401420\nLEA R14,[RSI + RDX*0x8]\nSUB EBP,EDX\nCMP dword ptr [0x00606170],-0x1\nJNZ 0x00401395\nMOV dword ptr [0x00606170],0x0\nMOV R15D,0x40389d\nCMP qword ptr [0x006061d8],0x0\nJNZ 0x004013da\nCALL 0x00400f90\nMOV qword ptr [0x006061d8],RAX\nTEST RAX,RAX\nJNZ 0x004013da\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x4038a4\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV EDI,0x1\nCALL 0x004010a0\nMOV RDI,qword ptr [0x006061d8]\nCALL 0x00401490\nTEST EAX,EAX\nJNZ 0x00401410\nMOV ESI,0x1\nMOV RDI,R15\nMOV EDX,EBP\nMOV RCX,R14\nCALL 0x00401a60\nMOV EBX,EAX\nCALL 0x004017c0\nXOR EDI,EDI\nTEST EBX,EBX\nSETNZ DIL\nCALL 0x004010a0\nMOV EDI,0x1\nCALL 0x004010a0\n'
p53
S'55\n41 57\n41 56\n53\n50\n89 fd\n48 8b 06\n48 89 05 1d 50 20 00\n83 fd 02\n0f 8c d0 00 00 00\n48 63 c5\nbf 01 00 00 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 63 d7\n48 8b 0c d6\n80 39 2d\n0f 85 5c 01 00 00\n8a 59 01\n84 db\n0f 84 97 00 00 00\n48 ff c1\n66 90\n48 ff c1\n0f be fb\n83 c7 aa\n83 ff 20\n0f 87 e8 00 00 00\nff 24 fd 00 35 40 00\nc7 05 81 4f 20 00 01 00 00 00\neb 22\nc7 05 71 4f 20 00 01 00 00 00\neb 16\nc7 05 05 4f 20 00 00 00 00 00\neb 0a\nc7 05 f9 4e 20 00 01 00 00 00\n0f b6 19\n48 ff c1\n84 db\n75 b2\neb 3d\n48 8d 7a 01\n48 39 c7\n0f 8d bb 00 00 00\n48 8b 54 d6 08\n48 89 15 2f 4f 20 00\n8a 19\n84 db\n48 89 fa\n0f 85 7a ff ff ff\neb 0a\n89 d7\nff c7\n39 ef\n0f 8c 44 ff ff ff\nbd 02 00 00 00\n83 3d 98 4e 20 00 ff\n75 20\n48 8b 3d bf 4e 20 00\ne8 2a fd ff ff\n89 c7\ne8 03 fc ff ff\n31 c9\n85 c0\n0f 95 c1\n89 0d 76 4e 20 00\n41 be 80 61 60 00\n41 bf d4 38 40 00\n48 83 3d ca 4e 20 00 00\n0f 84 91 00 00 00\ne9 c1 00 00 00\nbf 71 38 40 00\ne8 bd fb ff ff\n31 ff\ne8 76 fd ff ff\n48 8b 3d 8f 4e 20 00\n48 8b 15 d8 4e 20 00\n48 ff c9\nbe 7f 38 40 00\n31 c0\ne8 a9 fc ff ff\nbf 01 00 00 00\ne8 cf 00 00 00\n31 ff\ne8 c8 00 00 00\n48 8b 3d 61 4e 20 00\n48 8b 15 aa 4e 20 00\nbe 54 38 40 00\n31 c0\ne8 7e fc ff ff\nbf 01 00 00 00\ne8 a4 00 00 00\n4c 8d 34 d6\n29 d5\n83 3d e7 4d 20 00 ff\n75 0a\nc7 05 db 4d 20 00 00 00 00 00\n41 bf 9d 38 40 00\n48 83 3d 35 4e 20 00 00\n75 35\ne8 e6 fb ff ff\n48 89 05 27 4e 20 00\n48 85 c0\n75 24\n48 8b 3d 03 4e 20 00\n48 8b 15 4c 4e 20 00\nbe a4 38 40 00\n31 c0\ne8 20 fc ff ff\nbf 01 00 00 00\ne8 c6 fc ff ff\n48 8b 3d f7 4d 20 00\ne8 aa 00 00 00\n85 c0\n75 26\nbe 01 00 00 00\n4c 89 ff\n89 ea\n4c 89 f1\ne8 64 06 00 00\n89 c3\ne8 bd 03 00 00\n31 ff\n85 db\n40 0f 95 c7\ne8 90 fc ff ff\nbf 01 00 00 00\ne8 86 fc ff ff\n'
p54
S'.text:00000000004011e0\n.text:00000000004011e1\n.text:00000000004011e3\n.text:00000000004011e5\n.text:00000000004011e6\n.text:00000000004011e7\n.text:00000000004011e9\n.text:00000000004011ec\n.text:00000000004011f3\n.text:00000000004011f6\n.text:00000000004011fc\n.text:00000000004011ff\n.text:0000000000401204\n.text:0000000000401210\n.text:0000000000401213\n.text:0000000000401217\n.text:000000000040121a\n.text:0000000000401220\n.text:0000000000401223\n.text:0000000000401225\n.text:000000000040122b\n.text:000000000040122e\n.text:0000000000401230\n.text:0000000000401233\n.text:0000000000401236\n.text:0000000000401239\n.text:000000000040123c\n.text:0000000000401242\n.text:0000000000401249\n.text:0000000000401253\n.text:0000000000401255\n.text:000000000040125f\n.text:0000000000401261\n.text:000000000040126b\n.text:000000000040126d\n.text:0000000000401277\n.text:000000000040127a\n.text:000000000040127d\n.text:000000000040127f\n.text:0000000000401281\n.text:0000000000401290\n.text:0000000000401294\n.text:0000000000401297\n.text:000000000040129d\n.text:00000000004012a2\n.text:00000000004012a9\n.text:00000000004012ab\n.text:00000000004012ad\n.text:00000000004012b0\n.text:00000000004012b6\n.text:00000000004012c0\n.text:00000000004012c2\n.text:00000000004012c4\n.text:00000000004012c6\n.text:00000000004012cc\n.text:00000000004012d1\n.text:00000000004012d8\n.text:00000000004012da\n.text:00000000004012e1\n.text:00000000004012e6\n.text:00000000004012e8\n.text:00000000004012ed\n.text:00000000004012ef\n.text:00000000004012f1\n.text:00000000004012f4\n.text:00000000004012fa\n.text:0000000000401300\n.text:0000000000401306\n.text:000000000040130e\n.text:0000000000401314\n.text:0000000000401319\n.text:000000000040131e\n.text:0000000000401323\n.text:0000000000401325\n.text:000000000040132a\n.text:0000000000401331\n.text:0000000000401338\n.text:000000000040133b\n.text:0000000000401340\n.text:0000000000401342\n.text:0000000000401347\n.text:000000000040134c\n.text:0000000000401351\n.text:0000000000401353\n.text:0000000000401358\n.text:000000000040135f\n.text:0000000000401366\n.text:000000000040136b\n.text:000000000040136d\n.text:0000000000401372\n.text:0000000000401377\n.text:000000000040137c\n.text:0000000000401380\n.text:0000000000401382\n.text:0000000000401389\n.text:000000000040138b\n.text:0000000000401395\n.text:000000000040139b\n.text:00000000004013a3\n.text:00000000004013a5\n.text:00000000004013aa\n.text:00000000004013b1\n.text:00000000004013b4\n.text:00000000004013b6\n.text:00000000004013bd\n.text:00000000004013c4\n.text:00000000004013c9\n.text:00000000004013cb\n.text:00000000004013d0\n.text:00000000004013d5\n.text:00000000004013da\n.text:00000000004013e1\n.text:00000000004013e6\n.text:00000000004013e8\n.text:00000000004013ea\n.text:00000000004013ef\n.text:00000000004013f2\n.text:00000000004013f4\n.text:00000000004013f7\n.text:00000000004013fc\n.text:00000000004013fe\n.text:0000000000401403\n.text:0000000000401405\n.text:0000000000401407\n.text:000000000040140b\n.text:0000000000401410\n.text:0000000000401415\n'
p55
tp56
sS'realloc'
p57
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p58
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_00606110)();\u000a  return pvVar1;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00606110]\n'
p60
S'ff 25 ba 50 20 00\n'
p61
S'.plt:0000000000401050\n'
p62
tp63
sS'process_command'
p64
(S'\n__stdcall process_command(char * inputfilename, char * * argv)\n'
p65
V\u000aint process_command(char *inputfilename,char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RAX;\u000a  long *in_RCX;\u000a  int in_EDX;\u000a  int local_24;\u000a  \u000a  local_24 = 1;\u000a  if (((0 < in_EDX) && (in_RCX != (long *)0x0)) && (*in_RCX != 0)) {\u000a    iVar1 = dispatch_command();\u000a    if (iVar1 == 0) {\u000a      prefix(inputfilename);\u000a      fprintf(stderr,"unknown command \u005c"%s\u005c"\u005cn",*in_RCX);\u000a    }\u000a    else {\u000a      local_24 = (int)((ulong)in_RAX >> 0x20);\u000a    }\u000a  }\u000a  return local_24;\u000a}\u000a\u000a
p66
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RCX\nMOV R14D,ESI\nMOV R15,RDI\nMOV EBP,0x1\nTEST EDX,EDX\nJLE 0x00401a9f\nTEST RBX,RBX\nJZ 0x00401a9f\nCMP qword ptr [RBX],0x0\nJZ 0x00401a9f\nLEA R8,[RSP + 0x4]\nMOV RDI,R15\nMOV ESI,R14D\nMOV RCX,RBX\nCALL 0x00401ad0\nTEST EAX,EAX\nJZ 0x00401aac\nMOV EBP,dword ptr [RSP + 0x4]\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,R15\nMOV ESI,R14D\nCALL 0x00401b80\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [RBX]\nMOV ESI,0x403b02\nXOR EAX,EAX\nCALL 0x00400ff0\nJMP 0x00401a9f\n'
p67
S'55\n41 57\n41 56\n53\n50\n48 89 cb\n41 89 f6\n49 89 ff\nbd 01 00 00 00\n85 d2\n7e 26\n48 85 db\n74 21\n48 83 3b 00\n74 1b\n4c 8d 44 24 04\n4c 89 ff\n44 89 f6\n48 89 d9\ne8 39 00 00 00\n85 c0\n74 11\n8b 6c 24 04\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n4c 89 ff\n44 89 f6\ne8 c9 00 00 00\n48 8b 3d 02 47 20 00\n48 8b 13\nbe 02 3b 40 00\n31 c0\ne8 23 f5 ff ff\neb d0\n'
p68
S'.text:0000000000401a60\n.text:0000000000401a61\n.text:0000000000401a63\n.text:0000000000401a65\n.text:0000000000401a66\n.text:0000000000401a67\n.text:0000000000401a6a\n.text:0000000000401a6d\n.text:0000000000401a70\n.text:0000000000401a75\n.text:0000000000401a77\n.text:0000000000401a79\n.text:0000000000401a7c\n.text:0000000000401a7e\n.text:0000000000401a82\n.text:0000000000401a84\n.text:0000000000401a89\n.text:0000000000401a8c\n.text:0000000000401a8f\n.text:0000000000401a92\n.text:0000000000401a97\n.text:0000000000401a99\n.text:0000000000401a9b\n.text:0000000000401a9f\n.text:0000000000401aa1\n.text:0000000000401aa5\n.text:0000000000401aa6\n.text:0000000000401aa8\n.text:0000000000401aaa\n.text:0000000000401aab\n.text:0000000000401aac\n.text:0000000000401aaf\n.text:0000000000401ab2\n.text:0000000000401ab7\n.text:0000000000401abe\n.text:0000000000401ac1\n.text:0000000000401ac6\n.text:0000000000401ac8\n.text:0000000000401acd\n'
p69
tp70
sS'isatty'
p71
(S'\n__stdcall isatty(int __fd)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint isatty(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_isatty_00606060)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00606060]\n'
p74
S'ff 25 6a 51 20 00\n'
p75
S'.plt:0000000000400ef0\n'
p76
tp77
sS'strcpy'
p78
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_00606050)();\u000a  return pcVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00606050]\n'
p81
S'ff 25 7a 51 20 00\n'
p82
S'.plt:0000000000400ed0\n'
p83
tp84
sS'fgets'
p85
(S'\n__stdcall fgets(char * __s, int __n, FILE * __stream)\n'
p86
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * fgets(char *__s,int __n,FILE *__stream)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_fgets_006060c8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x006060c8]\n'
p88
S'ff 25 02 51 20 00\n'
p89
S'.plt:0000000000400fc0\n'
p90
tp91
sS'strncmp'
p92
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00606038)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00606038]\n'
p95
S'ff 25 92 51 20 00\n'
p96
S'.plt:0000000000400ea0\n'
p97
tp98
sS'strlen'
p99
(S'\n__stdcall strlen(char * __s)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_00606090)();\u000a  return sVar1;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00606090]\n'
p102
S'ff 25 3a 51 20 00\n'
p103
S'.plt:0000000000400f50\n'
p104
tp105
sS'do_exit'
p106
(S'\n__stdcall do_exit(char * inputfilename, char * * argv)\n'
p107
V\u000aint do_exit(char *inputfilename,char **argv)\u000a\u000a{\u000a  alldone = 1;\u000a  return 0;\u000a}\u000a\u000a
p108
S'MOV byte ptr [0x00606208],0x1\nXOR EAX,EAX\nRET\n'
p109
S'c6 05 51 41 20 00 01\n31 c0\nc3\n'
p110
S'.text:00000000004020b0\n.text:00000000004020b7\n.text:00000000004020b9\n'
p111
tp112
sS'do_merge'
p113
(S'\n__stdcall do_merge(char * inputfilename, char * * argv)\n'
p114
V\u000aint do_merge(char *inputfilename,char **argv)\u000a\u000a{\u000a  AuthList *pAVar1;\u000a  AuthList *pAVar2;\u000a  int iVar3;\u000a  uint uVar4;\u000a  FILE *fp;\u000a  char **in_RCX;\u000a  uint in_EDX;\u000a  undefined *puVar5;\u000a  ulong uVar6;\u000a  AuthList *pAVar7;\u000a  AuthList *tail;\u000a  int ndup;\u000a  uint local_64;\u000a  char *local_60;\u000a  AuthList *local_58;\u000a  AuthList *local_50;\u000a  ulong local_48;\u000a  AuthList *local_40 [2];\u000a  \u000a  if ((int)in_EDX < 2) {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a    iVar3 = 1;\u000a  }\u000a  else {\u000a    local_48 = (ulong)in_EDX;\u000a    uVar6 = 1;\u000a    pAVar7 = (AuthList *)0x0;\u000a    local_50 = (AuthList *)0x0;\u000a    do {\u000a      local_60 = in_RCX[uVar6];\u000a      local_64 = 0;\u000a      fp = open_file(&local_60,"rb",(int *)&local_64,inputfilename,\u000a                     (char *)((ulong)argv & 0xffffffff));\u000a      if (fp != (FILE *)0x0) {\u000a        local_40[0] = (AuthList *)0x0;\u000a        local_58 = (AuthList *)0x0;\u000a        iVar3 = read_auth_entries(fp,&local_58,local_40);\u000a        if (iVar3 == 0) {\u000a          prefix(inputfilename);\u000a          fprintf(stderr,"unable to read any entries from file \u005c"%s\u005c"\u005cn",local_60);\u000a          pAVar1 = pAVar7;\u000a          pAVar2 = local_50;\u000a        }\u000a        else {\u000a          pAVar1 = local_58;\u000a          pAVar2 = local_58;\u000a          if (pAVar7 != (AuthList *)0x0) {\u000a            *(AuthList **)&pAVar7->next = local_58;\u000a            pAVar1 = local_58;\u000a            pAVar2 = local_50;\u000a          }\u000a        }\u000a        local_50 = pAVar2;\u000a        pAVar7 = pAVar1;\u000a        if (local_64 == 0) {\u000a          fclose((FILE *)fp);\u000a        }\u000a      }\u000a      uVar6 = uVar6 + 1;\u000a    } while (local_48 != uVar6);\u000a    iVar3 = 0;\u000a    if (local_50 != (AuthList *)0x0) {\u000a      uVar4 = merge_entries();\u000a      if (verbose != 0) {\u000a        puVar5 = &DAT_00403b1c;\u000a        if (local_64 != 1) {\u000a          puVar5 = &DAT_00403913;\u000a        }\u000a        printf("%d entries read in:  %d new, %d replacement%s\u005cn",(ulong)uVar4,\u000a               (ulong)local_60 & 0xffffffff,(ulong)local_64,puVar5);\u000a      }\u000a      iVar3 = 0;\u000a      if (0 < (int)uVar4) {\u000a        iceauth_modified = 1;\u000a        iVar3 = 0;\u000a      }\u000a    }\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p115
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBX,RCX\nMOV R14D,ESI\nMOV RBP,RDI\nCMP EDX,0x2\nJGE 0x00402469\nMOV RDI,RBP\nMOV ESI,R14D\nCALL 0x00401b80\nMOV RDI,qword ptr [RBX]\nCALL 0x00402950\nMOV EBX,0x1\nJMP 0x004025c5\nMOV EAX,EDX\nMOV qword ptr [RSP + 0x20],RAX\nMOV R13D,0x1\nXOR R15D,R15D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nJMP 0x004024c0\nMOV RDI,RBP\nMOV ESI,R14D\nCALL 0x00401b80\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [RSP + 0x8]\nMOV ESI,0x4044c0\nXOR EAX,EAX\nCALL 0x00400ff0\nCMP dword ptr [RSP + 0x4],0x0\nJNZ 0x00402559\nJMP 0x00402551\nMOV RAX,qword ptr [RBX + R13*0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x0\nMOV R9,qword ptr [RBX]\nMOV ESI,0x4039b5\nLEA RDI,[RSP + 0x8]\nLEA RDX,[RSP + 0x4]\nMOV RCX,RBP\nMOV R8D,R14D\nCALL 0x00403030\nMOV R12,RAX\nTEST R12,R12\nJZ 0x00402559\nMOV qword ptr [RSP + 0x28],0x0\nMOV qword ptr [RSP + 0x10],0x0\nMOV RDI,R12\nLEA RSI,[RSP + 0x10]\nLEA RDX,[RSP + 0x28]\nCALL 0x004016e0\nTEST EAX,EAX\nJZ 0x00402482\nTEST R15,R15\nMOV RAX,qword ptr [RSP + 0x10]\nJZ 0x00402540\nMOV qword ptr [R15],RAX\nJMP 0x00402545\nMOV qword ptr [RSP + 0x18],RAX\nMOV R15,qword ptr [RSP + 0x10]\nCMP dword ptr [RSP + 0x4],0x0\nJNZ 0x00402559\nMOV RDI,R12\nCALL 0x00400f30\nINC R13\nCMP qword ptr [RSP + 0x20],R13\nJNZ 0x004024c0\nXOR EBX,EBX\nMOV RDI,qword ptr [RSP + 0x18]\nTEST RDI,RDI\nJZ 0x004025c5\nLEA RSI,[RSP + 0x8]\nLEA RDX,[RSP + 0x4]\nLEA RCX,[RSP + 0x34]\nCALL 0x00402b00\nMOV EBP,EAX\nCMP dword ptr [0x00606170],0x0\nJZ 0x004025ba\nMOV EDX,dword ptr [RSP + 0x8]\nMOV ECX,dword ptr [RSP + 0x4]\nCMP ECX,0x1\nMOV EAX,0x403913\nMOV R8D,0x403b1c\nCMOVNZ R8,RAX\nMOV EDI,0x4044eb\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00400f60\nTEST EBP,EBP\nJLE 0x004025c5\nMOV byte ptr [0x00606200],0x1\nMOV EAX,EBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p116
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cb\n41 89 f6\n48 89 fd\n83 fa 02\n7d 1d\n48 89 ef\n44 89 f6\ne8 29 f7 ff ff\n48 8b 3b\ne8 f1 04 00 00\nbb 01 00 00 00\ne9 5c 01 00 00\n89 d0\n48 89 44 24 20\n41 bd 01 00 00 00\n45 31 ff\n31 c0\n48 89 44 24 18\neb 3e\n48 89 ef\n44 89 f6\ne8 f3 f6 ff ff\n48 8b 3d 2c 3d 20 00\n48 8b 54 24 08\nbe c0 44 40 00\n31 c0\ne8 4b eb ff ff\n83 7c 24 04 00\n0f 85 a9 00 00 00\ne9 9c 00 00 00\n4a 8b 04 eb\n48 89 44 24 08\nc7 44 24 04 00 00 00 00\n4c 8b 0b\nbe b5 39 40 00\n48 8d 7c 24 08\n48 8d 54 24 04\n48 89 e9\n45 89 f0\ne8 42 0b 00 00\n49 89 c4\n4d 85 e4\n74 63\n48 c7 44 24 28 00 00 00 00\n48 c7 44 24 10 00 00 00 00\n4c 89 e7\n48 8d 74 24 10\n48 8d 54 24 28\ne8 c6 f1 ff ff\n85 c0\n0f 84 60 ff ff ff\n4d 85 ff\n48 8b 44 24 10\n74 14\n49 89 07\neb 14\n48 89 44 24 18\n4c 8b 7c 24 10\n83 7c 24 04 00\n75 08\n4c 89 e7\ne8 d7 e9 ff ff\n49 ff c5\n4c 39 6c 24 20\n0f 85 59 ff ff ff\n31 db\n48 8b 7c 24 18\n48 85 ff\n74 52\n48 8d 74 24 08\n48 8d 54 24 04\n48 8d 4c 24 34\ne8 79 05 00 00\n89 c5\n83 3d e0 3b 20 00 00\n74 28\n8b 54 24 08\n8b 4c 24 04\n83 f9 01\nb8 13 39 40 00\n41 b8 1c 3b 40 00\n4c 0f 45 c0\nbf eb 44 40 00\n31 c0\n89 ee\ne8 a6 e9 ff ff\n85 ed\n7e 07\nc6 05 3b 3c 20 00 01\n89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p117
S'.text:0000000000402430\n.text:0000000000402431\n.text:0000000000402433\n.text:0000000000402435\n.text:0000000000402437\n.text:0000000000402439\n.text:000000000040243a\n.text:000000000040243e\n.text:0000000000402441\n.text:0000000000402444\n.text:0000000000402447\n.text:000000000040244a\n.text:000000000040244c\n.text:000000000040244f\n.text:0000000000402452\n.text:0000000000402457\n.text:000000000040245a\n.text:000000000040245f\n.text:0000000000402464\n.text:0000000000402469\n.text:000000000040246b\n.text:0000000000402470\n.text:0000000000402476\n.text:0000000000402479\n.text:000000000040247b\n.text:0000000000402480\n.text:0000000000402482\n.text:0000000000402485\n.text:0000000000402488\n.text:000000000040248d\n.text:0000000000402494\n.text:0000000000402499\n.text:000000000040249e\n.text:00000000004024a0\n.text:00000000004024a5\n.text:00000000004024aa\n.text:00000000004024b0\n.text:00000000004024c0\n.text:00000000004024c4\n.text:00000000004024c9\n.text:00000000004024d1\n.text:00000000004024d4\n.text:00000000004024d9\n.text:00000000004024de\n.text:00000000004024e3\n.text:00000000004024e6\n.text:00000000004024e9\n.text:00000000004024ee\n.text:00000000004024f1\n.text:00000000004024f4\n.text:00000000004024f6\n.text:00000000004024ff\n.text:0000000000402508\n.text:000000000040250b\n.text:0000000000402510\n.text:0000000000402515\n.text:000000000040251a\n.text:000000000040251c\n.text:0000000000402522\n.text:0000000000402525\n.text:000000000040252a\n.text:000000000040252c\n.text:000000000040252f\n.text:0000000000402540\n.text:0000000000402545\n.text:000000000040254a\n.text:000000000040254f\n.text:0000000000402551\n.text:0000000000402554\n.text:0000000000402559\n.text:000000000040255c\n.text:0000000000402561\n.text:0000000000402567\n.text:0000000000402569\n.text:000000000040256e\n.text:0000000000402571\n.text:0000000000402573\n.text:0000000000402578\n.text:000000000040257d\n.text:0000000000402582\n.text:0000000000402587\n.text:0000000000402589\n.text:0000000000402590\n.text:0000000000402592\n.text:0000000000402596\n.text:000000000040259a\n.text:000000000040259d\n.text:00000000004025a2\n.text:00000000004025a8\n.text:00000000004025ac\n.text:00000000004025b1\n.text:00000000004025b3\n.text:00000000004025b5\n.text:00000000004025ba\n.text:00000000004025bc\n.text:00000000004025be\n.text:00000000004025c5\n.text:00000000004025c7\n.text:00000000004025cb\n.text:00000000004025cc\n.text:00000000004025ce\n.text:00000000004025d0\n.text:00000000004025d2\n.text:00000000004025d4\n.text:00000000004025d5\n'
p118
tp119
sS'do_source'
p120
(S'\n__stdcall do_source(char * inputfilename, char * * argv)\n'
p121
V\u000aint do_source(char *inputfilename,char **argv)\u000a\u000a{\u000a  int __fd;\u000a  FILE *__stream;\u000a  char *pcVar1;\u000a  size_t sVar2;\u000a  char **__ptr;\u000a  char **in_RCX;\u000a  int in_EDX;\u000a  char **argv_00;\u000a  bool bVar3;\u000a  char buf [8192];\u000a  int local_2058;\u000a  int local_2054;\u000a  char *local_2050;\u000a  int local_2044;\u000a  char *local_2040;\u000a  char local_2038 [8200];\u000a  \u000a  local_2054 = 0;\u000a  if ((in_EDX == 2) && (local_2050 = in_RCX[1], local_2050 != (char *)0x0)) {\u000a    __stream = open_file(&local_2050,"r",&local_2054,inputfilename,\u000a                         (char *)((ulong)argv & 0xffffffff));\u000a    if (__stream != (FILE *)0x0) {\u000a      bVar3 = true;\u000a      if ((verbose != 0) && (local_2054 != 0)) {\u000a        __fd = fileno((FILE *)__stream);\u000a        __fd = isatty(__fd);\u000a        bVar3 = __fd == 0;\u000a      }\u000a      local_2040 = local_2050;\u000a      __fd = 0;\u000a      argv_00 = (char **)0x0;\u000a      do {\u000a        do {\u000a          if (alldone != 0) {\u000aLAB_0040282f:\u000a            if (local_2054 != 0) {\u000a              return __fd;\u000a            }\u000a            fclose((FILE *)__stream);\u000a            return __fd;\u000a          }\u000a          local_2038[0] = 0;\u000a          if (!bVar3) {\u000a            printf("iceauth> ");\u000a            fflush(stdout);\u000a          }\u000a          pcVar1 = fgets(local_2038,0x2000,(FILE *)__stream);\u000a          if (pcVar1 == (char *)0x0) goto LAB_0040282f;\u000a          argv_00 = (char **)(ulong)((int)argv_00 + 1);\u000a          sVar2 = strlen(local_2038);\u000a        } while ((sVar2 == 0) || (local_2038[0] == '#'));\u000a        if (*(char *)((long)&local_2040 + sVar2 + 7) != '\u005cn') {\u000a          prefix(local_2050);\u000a          fwrite("line too long\u005cn",0xe,1,stderr);\u000a          __fd = __fd + 1;\u000a          goto LAB_0040282f;\u000a        }\u000a        *(undefined *)((long)&local_2040 + sVar2 + 7) = 0;\u000a        __ptr = split_into_words(local_2038,&local_2058);\u000a        if (__ptr == (char **)0x0) {\u000a          prefix(local_2040);\u000a          fwrite("unable to break line into words\u005cn",0x20,1,stderr);\u000a          __fd = __fd + 1;\u000a        }\u000a        else {\u000a          local_2044 = process_command(local_2040,argv_00);\u000a          free(__ptr);\u000a          __fd = __fd + local_2044;\u000a        }\u000a      } while( true );\u000a    }\u000a  }\u000a  else {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a  }\u000a  return 1;\u000a}\u000a\u000a
p122
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2028\nMOV RBX,RCX\nMOV EAX,ESI\nMOV RCX,RDI\nMOV dword ptr [RSP + 0x4],0x0\nCMP EDX,0x2\nJNZ 0x004026f8\nMOV RDX,qword ptr [RBX + 0x8]\nTEST RDX,RDX\nJZ 0x004026f8\nMOV qword ptr [RSP + 0x8],RDX\nMOV R9,qword ptr [RBX]\nLEA RDI,[RSP + 0x8]\nLEA RDX,[RSP + 0x4]\nMOV ESI,0x403956\nMOV R8D,EAX\nCALL 0x00403030\nMOV R13,RAX\nTEST R13,R13\nJZ 0x0040270a\nMOV R14B,0x1\nCMP dword ptr [0x00606170],0x0\nJZ 0x004026df\nMOV EAX,dword ptr [RSP + 0x4]\nTEST EAX,EAX\nJZ 0x004026df\nMOV RDI,R13\nCALL 0x00401010\nMOV EDI,EAX\nCALL 0x00400ef0\nTEST EAX,EAX\nSETZ R14B\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x18],RAX\nLEA RBP,[RSP + 0x20]\nMOV R12,RSP\nXOR R15D,R15D\nXOR EBX,EBX\nJMP 0x00402750\nMOV RDI,RCX\nMOV ESI,EAX\nCALL 0x00401b80\nMOV RDI,qword ptr [RBX]\nCALL 0x00402950\nMOV R15D,0x1\nMOV EAX,R15D\nADD RSP,0x2028\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDX,dword ptr [RSP]\nMOV RDI,qword ptr [RSP + 0x18]\nMOV ESI,EBX\nMOV RCX,R12\nCALL 0x00401a60\nMOV dword ptr [RSP + 0x14],EAX\nMOV RDI,R12\nCALL 0x00400e60\nADD R15D,dword ptr [RSP + 0x14]\nMOV R12,RSP\nNOP dword ptr [RAX + RAX*0x1]\nMOVZX EAX,byte ptr [0x00606208]\nTEST AL,AL\nJNZ 0x0040282f\nMOV byte ptr [RSP + 0x20],0x0\nTEST R14B,R14B\nJNZ 0x00402781\nMOV EDI,0x40452e\nXOR EAX,EAX\nCALL 0x00400f60\nMOV RDI,qword ptr [0x006061a0]\nCALL 0x00401030\nMOV ESI,0x2000\nMOV RDI,RBP\nMOV RDX,R13\nCALL 0x00400fc0\nTEST RAX,RAX\nJZ 0x0040282f\nINC EBX\nMOV RDI,RBP\nCALL 0x00400f50\nTEST RAX,RAX\nJZ 0x00402750\nCMP byte ptr [RSP + 0x20],0x23\nJZ 0x00402750\nCMP byte ptr [RSP + RAX*0x1 + 0x1f],0xa\nJNZ 0x00402805\nMOV byte ptr [RSP + RAX*0x1 + 0x1f],0x0\nMOV RDI,RBP\nMOV RSI,R12\nCALL 0x004032d0\nMOV R12,RAX\nTEST R12,R12\nJNZ 0x00402725\nMOV RDI,qword ptr [RSP + 0x18]\nMOV ESI,EBX\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x404547\nMOV ESI,0x20\nMOV EDX,0x1\nCALL 0x004010b0\nINC R15D\nMOV R12,RSP\nJMP 0x00402750\nMOV RDI,qword ptr [RSP + 0x8]\nMOV ESI,EBX\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x404538\nMOV ESI,0xe\nMOV EDX,0x1\nCALL 0x004010b0\nINC R15D\nCMP dword ptr [RSP + 0x4],0x0\nJNZ 0x00402710\nMOV RDI,R13\nCALL 0x00400f30\nJMP 0x00402710\n'
p123
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 28 20 00 00\n48 89 cb\n89 f0\n48 89 f9\nc7 44 24 04 00 00 00 00\n83 fa 02\n75 72\n48 8b 53 08\n48 85 d2\n74 69\n48 89 54 24 08\n4c 8b 0b\n48 8d 7c 24 08\n48 8d 54 24 04\nbe 56 39 40 00\n41 89 c0\ne8 82 09 00 00\n49 89 c5\n4d 85 ed\n74 54\n41 b6 01\n83 3d b0 3a 20 00 00\n74 1d\n8b 44 24 04\n85 c0\n74 15\n4c 89 ef\ne8 3e e9 ff ff\n89 c7\ne8 17 e8 ff ff\n85 c0\n41 0f 94 c6\n48 8b 44 24 08\n48 89 44 24 18\n48 8d 6c 24 20\n49 89 e4\n45 31 ff\n31 db\neb 58\n48 89 cf\n89 c6\ne8 7e f4 ff ff\n48 8b 3b\ne8 46 02 00 00\n41 bf 01 00 00 00\n44 89 f8\n48 81 c4 28 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n8b 14 24\n48 8b 7c 24 18\n89 de\n4c 89 e1\ne8 29 f3 ff ff\n89 44 24 14\n4c 89 e7\ne8 1d e7 ff ff\n44 03 7c 24 14\n49 89 e4\n0f 1f 44 00 00\n0f b6 05 b1 3a 20 00\n84 c0\n0f 85 d0 00 00 00\nc6 44 24 20 00\n45 84 f6\n75 18\nbf 2e 45 40 00\n31 c0\ne8 eb e7 ff ff\n48 8b 3d 24 3a 20 00\ne8 af e8 ff ff\nbe 00 20 00 00\n48 89 ef\n4c 89 ea\ne8 2f e8 ff ff\n48 85 c0\n0f 84 95 00 00 00\nff c3\n48 89 ef\ne8 ac e7 ff ff\n48 85 c0\n74 a7\n80 7c 24 20 23\n74 a0\n80 7c 04 1f 0a\n75 4e\nc6 44 04 1f 00\n48 89 ef\n4c 89 e6\ne8 09 0b 00 00\n49 89 c4\n4d 85 e4\n0f 85 52 ff ff ff\n48 8b 7c 24 18\n89 de\ne8 a1 f3 ff ff\n48 8b 0d da 39 20 00\nbf 47 45 40 00\nbe 20 00 00 00\nba 01 00 00 00\ne8 b6 e8 ff ff\n41 ff c7\n49 89 e4\ne9 4b ff ff ff\n48 8b 7c 24 08\n89 de\ne8 6f f3 ff ff\n48 8b 0d a8 39 20 00\nbf 38 45 40 00\nbe 0e 00 00 00\nba 01 00 00 00\ne8 84 e8 ff ff\n41 ff c7\n83 7c 24 04 00\n0f 85 d6 fe ff ff\n4c 89 ef\ne8 ee e6 ff ff\ne9 c9 fe ff ff\n'
p124
S'.text:0000000000402660\n.text:0000000000402661\n.text:0000000000402663\n.text:0000000000402665\n.text:0000000000402667\n.text:0000000000402669\n.text:000000000040266a\n.text:0000000000402671\n.text:0000000000402674\n.text:0000000000402676\n.text:0000000000402679\n.text:0000000000402681\n.text:0000000000402684\n.text:0000000000402686\n.text:000000000040268a\n.text:000000000040268d\n.text:000000000040268f\n.text:0000000000402694\n.text:0000000000402697\n.text:000000000040269c\n.text:00000000004026a1\n.text:00000000004026a6\n.text:00000000004026a9\n.text:00000000004026ae\n.text:00000000004026b1\n.text:00000000004026b4\n.text:00000000004026b6\n.text:00000000004026b9\n.text:00000000004026c0\n.text:00000000004026c2\n.text:00000000004026c6\n.text:00000000004026c8\n.text:00000000004026ca\n.text:00000000004026cd\n.text:00000000004026d2\n.text:00000000004026d4\n.text:00000000004026d9\n.text:00000000004026db\n.text:00000000004026df\n.text:00000000004026e4\n.text:00000000004026e9\n.text:00000000004026ee\n.text:00000000004026f1\n.text:00000000004026f4\n.text:00000000004026f6\n.text:00000000004026f8\n.text:00000000004026fb\n.text:00000000004026fd\n.text:0000000000402702\n.text:0000000000402705\n.text:000000000040270a\n.text:0000000000402710\n.text:0000000000402713\n.text:000000000040271a\n.text:000000000040271b\n.text:000000000040271d\n.text:000000000040271f\n.text:0000000000402721\n.text:0000000000402723\n.text:0000000000402724\n.text:0000000000402725\n.text:0000000000402728\n.text:000000000040272d\n.text:000000000040272f\n.text:0000000000402732\n.text:0000000000402737\n.text:000000000040273b\n.text:000000000040273e\n.text:0000000000402743\n.text:0000000000402748\n.text:000000000040274b\n.text:0000000000402750\n.text:0000000000402757\n.text:0000000000402759\n.text:000000000040275f\n.text:0000000000402764\n.text:0000000000402767\n.text:0000000000402769\n.text:000000000040276e\n.text:0000000000402770\n.text:0000000000402775\n.text:000000000040277c\n.text:0000000000402781\n.text:0000000000402786\n.text:0000000000402789\n.text:000000000040278c\n.text:0000000000402791\n.text:0000000000402794\n.text:000000000040279a\n.text:000000000040279c\n.text:000000000040279f\n.text:00000000004027a4\n.text:00000000004027a7\n.text:00000000004027a9\n.text:00000000004027ae\n.text:00000000004027b0\n.text:00000000004027b5\n.text:00000000004027b7\n.text:00000000004027bc\n.text:00000000004027bf\n.text:00000000004027c2\n.text:00000000004027c7\n.text:00000000004027ca\n.text:00000000004027cd\n.text:00000000004027d3\n.text:00000000004027d8\n.text:00000000004027da\n.text:00000000004027df\n.text:00000000004027e6\n.text:00000000004027eb\n.text:00000000004027f0\n.text:00000000004027f5\n.text:00000000004027fa\n.text:00000000004027fd\n.text:0000000000402800\n.text:0000000000402805\n.text:000000000040280a\n.text:000000000040280c\n.text:0000000000402811\n.text:0000000000402818\n.text:000000000040281d\n.text:0000000000402822\n.text:0000000000402827\n.text:000000000040282c\n.text:000000000040282f\n.text:0000000000402834\n.text:000000000040283a\n.text:000000000040283d\n.text:0000000000402842\n'
p125
tp126
sS'do_list'
p127
(S'\n__stdcall do_list(char * inputfilename, char * * argv)\n'
p128
V\u000aint do_list(char *inputfilename,char **argv)\u000a\u000a{\u000a  _AuthList **pp_Var1;\u000a  int iVar2;\u000a  int in_EDX;\u000a  _AuthList *p_Var3;\u000a  \u000a  if (in_EDX == 1) {\u000a    p_Var3 = (_AuthList *)iceauth_head;\u000a    iVar2 = 0;\u000a    if (iceauth_head != (AuthList *)0x0) {\u000a      do {\u000a        dump_entry(inputfilename,(IceAuthFileEntry *)((ulong)argv & 0xffffffff),\u000a                   ((AuthList *)p_Var3)->auth);\u000a        pp_Var1 = &((AuthList *)p_Var3)->next;\u000a        p_Var3 = *pp_Var1;\u000a        iVar2 = 0;\u000a      } while (*pp_Var1 != (_AuthList *)0x0);\u000a    }\u000a  }\u000a  else {\u000a    iVar2 = search_and_do(inputfilename,(char **)(IceAuthFileEntry *)((ulong)argv & 0xffffffff),\u000a                          (int (*)(char *,int,IceAuthFileEntry *,void *))0x1);\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p129
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RAX,RCX\nMOV ECX,EDX\nMOV R12D,ESI\nMOV RBX,RDI\nMOV RDX,qword ptr [0x006061a0]\nMOV qword ptr [RSP + 0x8],RDX\nCMP ECX,0x1\nJNZ 0x004023ed\nMOV RBP,qword ptr [0x006061f8]\nXOR R14D,R14D\nTEST RBP,RBP\nJZ 0x00402412\nLEA R15,[RSP + 0x8]\nNOP dword ptr [RAX]\nMOV RDX,qword ptr [RBP + 0x8]\nMOV RDI,RBX\nMOV ESI,R12D\nMOV RCX,R15\nCALL 0x00403100\nMOV RBP,qword ptr [RBP]\nTEST RBP,RBP\nJNZ 0x004023d0\nJMP 0x00402412\nLEA RDX,[RSP + 0x8]\nMOV qword ptr [RSP],RDX\nMOV EDX,0x1\nMOV R9D,0x403100\nMOV RDI,RBX\nMOV ESI,R12D\nMOV R8,RAX\nCALL 0x00402d50\nMOV R14D,EAX\nMOV EAX,R14D\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p130
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 c8\n89 d1\n41 89 f4\n48 89 fb\n48 8b 15 f2 3d 20 00\n48 89 54 24 08\n83 f9 01\n75 35\n48 8b 2d 39 3e 20 00\n45 31 f6\n48 85 ed\n74 4b\n4c 8d 7c 24 08\n0f 1f 40 00\n48 8b 55 08\n48 89 df\n44 89 e6\n4c 89 f9\ne8 1e 0d 00 00\n48 8b 6d 00\n48 85 ed\n75 e5\neb 25\n48 8d 54 24 08\n48 89 14 24\nba 01 00 00 00\n41 b9 00 31 40 00\n48 89 df\n44 89 e6\n49 89 c0\ne8 41 09 00 00\n41 89 c6\n44 89 f0\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p131
S'.text:0000000000402390\n.text:0000000000402391\n.text:0000000000402393\n.text:0000000000402395\n.text:0000000000402397\n.text:0000000000402398\n.text:000000000040239c\n.text:000000000040239f\n.text:00000000004023a1\n.text:00000000004023a4\n.text:00000000004023a7\n.text:00000000004023ae\n.text:00000000004023b3\n.text:00000000004023b6\n.text:00000000004023b8\n.text:00000000004023bf\n.text:00000000004023c2\n.text:00000000004023c5\n.text:00000000004023c7\n.text:00000000004023cc\n.text:00000000004023d0\n.text:00000000004023d4\n.text:00000000004023d7\n.text:00000000004023da\n.text:00000000004023dd\n.text:00000000004023e2\n.text:00000000004023e6\n.text:00000000004023e9\n.text:00000000004023eb\n.text:00000000004023ed\n.text:00000000004023f2\n.text:00000000004023f6\n.text:00000000004023fb\n.text:0000000000402401\n.text:0000000000402404\n.text:0000000000402407\n.text:000000000040240a\n.text:000000000040240f\n.text:0000000000402412\n.text:0000000000402415\n.text:0000000000402419\n.text:000000000040241a\n.text:000000000040241c\n.text:000000000040241e\n.text:0000000000402420\n.text:0000000000402421\n'
p132
tp133
sS'skip_space'
p134
(S'\n__stdcall skip_space(char * s)\n'
p135
V\u000achar * skip_space(char *s)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  char cVar2;\u000a  \u000a  if (s == (char *)0x0) {\u000a    s = (char *)0x0;\u000a  }\u000a  else {\u000a    cVar2 = *s;\u000a    if (0 < cVar2) {\u000a      ppuVar1 = __ctype_b_loc();\u000a      do {\u000a        if ((*(byte *)((long)*ppuVar1 + (long)cVar2 * 2 + 1) & 0x20) == 0) {\u000a          return s;\u000a        }\u000a        cVar2 = s[1];\u000a        s = s + 1;\u000a      } while (0 < cVar2);\u000a    }\u000a  }\u000a  return s;\u000a}\u000a\u000a
p136
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00403409\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJLE 0x0040340b\nCALL 0x004010d0\nMOV RAX,qword ptr [RAX]\nNOP dword ptr [RAX + RAX*0x1]\nMOVSX RCX,BPL\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x20\nJZ 0x0040340b\nMOVZX EBP,byte ptr [RBX + 0x1]\nINC RBX\nTEST BPL,BPL\nJG 0x004033f0\nJMP 0x0040340b\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p137
S'55\n53\n50\n48 89 fb\n48 85 db\n74 2e\n40 8a 2b\n40 84 ed\n7e 28\ne8 e8 dc ff ff\n48 8b 00\n0f 1f 44 00 00\n48 0f be cd\nf6 44 48 01 20\n74 10\n0f b6 6b 01\n48 ff c3\n40 84 ed\n7f e9\neb 02\n31 db\n48 89 d8\n48 83 c4 08\n5b\n5d\nc3\n'
p138
S'.text:00000000004033d0\n.text:00000000004033d1\n.text:00000000004033d2\n.text:00000000004033d3\n.text:00000000004033d6\n.text:00000000004033d9\n.text:00000000004033db\n.text:00000000004033de\n.text:00000000004033e1\n.text:00000000004033e3\n.text:00000000004033e8\n.text:00000000004033eb\n.text:00000000004033f0\n.text:00000000004033f4\n.text:00000000004033f9\n.text:00000000004033fb\n.text:00000000004033ff\n.text:0000000000403402\n.text:0000000000403405\n.text:0000000000403407\n.text:0000000000403409\n.text:000000000040340b\n.text:000000000040340e\n.text:0000000000403412\n.text:0000000000403413\n.text:0000000000403414\n'
p139
tp140
sS'_exit'
p141
(S'\n__stdcall _exit(int __status)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_00606048)();\u000a  return;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00606048]\n'
p144
S'ff 25 82 51 20 00\n'
p145
S'.plt:0000000000400ec0\n'
p146
tp147
sS'dump_entry'
p148
(S'\n__stdcall dump_entry(char * inputfilename, IceAuthFileEntry * auth, void * data)\n'
p149
V\u000aint dump_entry(char *inputfilename,IceAuthFileEntry *auth,void *data)\u000a\u000a{\u000a  ushort uVar1;\u000a  FILE *fp;\u000a  char *__s1;\u000a  int iVar2;\u000a  FILE **in_RCX;\u000a  size_t __n;\u000a  size_t __size;\u000a  undefined *__ptr;\u000a  \u000a  fp = *in_RCX;\u000a  fputs(*(char **)data,(FILE *)fp);\u000a  _IO_putc(0x20,(_IO_FILE *)fp);\u000a  if (*(ushort *)((long)data + 8) == 0) {\u000a    fwrite(&DAT_004041c3,2,1,(FILE *)fp);\u000a  }\u000a  else {\u000a    fprintfhex(fp,(char *)(ulong)*(ushort *)((long)data + 8));\u000a  }\u000a  _IO_putc(0x20,(_IO_FILE *)fp);\u000a  fputs(*(char **)((long)data + 0x18),(FILE *)fp);\u000a  _IO_putc(0x20,(_IO_FILE *)fp);\u000a  fputs(*(char **)((long)data + 0x20),(FILE *)fp);\u000a  _IO_putc(0x20,(_IO_FILE *)fp);\u000a  uVar1 = *(ushort *)((long)data + 0x28);\u000a  if (uVar1 == 0) {\u000a    __ptr = &DAT_004041c3;\u000a    __size = 2;\u000a    __n = 1;\u000a  }\u000a  else {\u000a    __s1 = *(char **)((long)data + 0x20);\u000a    iVar2 = strcmp(__s1,"SUN-DES-1");\u000a    if (iVar2 != 0) {\u000a      iVar2 = strcmp(__s1,"KERBEROS-V5-1");\u000a      if (iVar2 != 0) {\u000a        fprintfhex(fp,(char *)(ulong)uVar1);\u000a        goto LAB_004031f8;\u000a      }\u000a    }\u000a    __ptr = *(undefined **)((long)data + 0x30);\u000a    __n = (size_t)*(ushort *)((long)data + 0x28);\u000a    __size = 1;\u000a  }\u000a  fwrite(__ptr,__size,__n,(FILE *)fp);\u000aLAB_004031f8:\u000a  _IO_putc(10,(_IO_FILE *)fp);\u000a  return 0;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,qword ptr [RCX]\nMOV RDI,qword ptr [R14]\nMOV RSI,RBX\nCALL 0x00400f80\nMOV EDI,0x20\nMOV RSI,RBX\nCALL 0x00400f70\nMOVZX ESI,word ptr [R14 + 0x8]\nTEST ESI,ESI\nJZ 0x0040313c\nMOV RDX,qword ptr [R14 + 0x10]\nMOV RDI,RBX\nCALL 0x00403220\nJMP 0x00403153\nMOV EDI,0x4041c3\nMOV ESI,0x2\nMOV EDX,0x1\nMOV RCX,RBX\nCALL 0x004010b0\nMOV EDI,0x20\nMOV RSI,RBX\nCALL 0x00400f70\nMOV RDI,qword ptr [R14 + 0x18]\nMOV RSI,RBX\nCALL 0x00400f80\nMOV EDI,0x20\nMOV RSI,RBX\nCALL 0x00400f70\nMOV RDI,qword ptr [R14 + 0x20]\nMOV RSI,RBX\nCALL 0x00400f80\nMOV EDI,0x20\nMOV RSI,RBX\nCALL 0x00400f70\nMOVZX EBP,word ptr [R14 + 0x28]\nTEST EBP,EBP\nJZ 0x004031d1\nMOV R15,qword ptr [R14 + 0x20]\nMOV ESI,0x403ecb\nMOV RDI,R15\nCALL 0x00400fd0\nTEST EAX,EAX\nJZ 0x004031e2\nMOV ESI,0x403ed5\nMOV RDI,R15\nCALL 0x00400fd0\nTEST EAX,EAX\nJZ 0x004031e2\nMOV RDX,qword ptr [R14 + 0x30]\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x00403220\nJMP 0x004031f8\nMOV EDI,0x4041c3\nMOV ESI,0x2\nMOV EDX,0x1\nJMP 0x004031f0\nMOV RDI,qword ptr [R14 + 0x30]\nMOVZX EDX,word ptr [R14 + 0x28]\nMOV ESI,0x1\nMOV RCX,RBX\nCALL 0x004010b0\nMOV EDI,0xa\nMOV RSI,RBX\nCALL 0x00400f70\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p151
S'55\n41 57\n41 56\n53\n50\n49 89 d6\n48 8b 19\n49 8b 3e\n48 89 de\ne8 68 de ff ff\nbf 20 00 00 00\n48 89 de\ne8 4b de ff ff\n41 0f b7 76 08\n85 f6\n74 0e\n49 8b 56 10\n48 89 df\ne8 e6 00 00 00\neb 17\nbf c3 41 40 00\nbe 02 00 00 00\nba 01 00 00 00\n48 89 d9\ne8 5d df ff ff\nbf 20 00 00 00\n48 89 de\ne8 10 de ff ff\n49 8b 7e 18\n48 89 de\ne8 14 de ff ff\nbf 20 00 00 00\n48 89 de\ne8 f7 dd ff ff\n49 8b 7e 20\n48 89 de\ne8 fb dd ff ff\nbf 20 00 00 00\n48 89 de\ne8 de dd ff ff\n41 0f b7 6e 28\n85 ed\n74 36\n4d 8b 7e 20\nbe cb 3e 40 00\n4c 89 ff\ne8 24 de ff ff\n85 c0\n74 32\nbe d5 3e 40 00\n4c 89 ff\ne8 13 de ff ff\n85 c0\n74 21\n49 8b 56 30\n48 89 df\n89 ee\ne8 51 00 00 00\neb 27\nbf c3 41 40 00\nbe 02 00 00 00\nba 01 00 00 00\neb 0e\n49 8b 7e 30\n41 0f b7 56 28\nbe 01 00 00 00\n48 89 d9\ne8 b8 de ff ff\nbf 0a 00 00 00\n48 89 de\ne8 6b dd ff ff\n31 c0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p152
S'.text:0000000000403100\n.text:0000000000403101\n.text:0000000000403103\n.text:0000000000403105\n.text:0000000000403106\n.text:0000000000403107\n.text:000000000040310a\n.text:000000000040310d\n.text:0000000000403110\n.text:0000000000403113\n.text:0000000000403118\n.text:000000000040311d\n.text:0000000000403120\n.text:0000000000403125\n.text:000000000040312a\n.text:000000000040312c\n.text:000000000040312e\n.text:0000000000403132\n.text:0000000000403135\n.text:000000000040313a\n.text:000000000040313c\n.text:0000000000403141\n.text:0000000000403146\n.text:000000000040314b\n.text:000000000040314e\n.text:0000000000403153\n.text:0000000000403158\n.text:000000000040315b\n.text:0000000000403160\n.text:0000000000403164\n.text:0000000000403167\n.text:000000000040316c\n.text:0000000000403171\n.text:0000000000403174\n.text:0000000000403179\n.text:000000000040317d\n.text:0000000000403180\n.text:0000000000403185\n.text:000000000040318a\n.text:000000000040318d\n.text:0000000000403192\n.text:0000000000403197\n.text:0000000000403199\n.text:000000000040319b\n.text:000000000040319f\n.text:00000000004031a4\n.text:00000000004031a7\n.text:00000000004031ac\n.text:00000000004031ae\n.text:00000000004031b0\n.text:00000000004031b5\n.text:00000000004031b8\n.text:00000000004031bd\n.text:00000000004031bf\n.text:00000000004031c1\n.text:00000000004031c5\n.text:00000000004031c8\n.text:00000000004031ca\n.text:00000000004031cf\n.text:00000000004031d1\n.text:00000000004031d6\n.text:00000000004031db\n.text:00000000004031e0\n.text:00000000004031e2\n.text:00000000004031e6\n.text:00000000004031eb\n.text:00000000004031f0\n.text:00000000004031f3\n.text:00000000004031f8\n.text:00000000004031fd\n.text:0000000000403200\n.text:0000000000403205\n.text:0000000000403207\n.text:000000000040320b\n.text:000000000040320c\n.text:000000000040320e\n.text:0000000000403210\n.text:0000000000403211\n'
p153
tp154
sS'search_and_do'
p155
(S'\n__stdcall search_and_do(char * inputfilename, char * * argv, DoFunc * do_func)\n'
p156
V\u000aint search_and_do(char *inputfilename,char **argv,\u000a                 int (*do_func)(char *,int,IceAuthFileEntry *,void *))\u000a\u000a{\u000a  _AuthList *p_Var1;\u000a  char *__s2;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int in_ECX;\u000a  AuthList *pAVar5;\u000a  long lVar6;\u000a  char *__s1;\u000a  char *a;\u000a  long in_R8;\u000a  code *in_R9;\u000a  char *__s1_00;\u000a  char **ppcVar7;\u000a  undefined8 in_stack_00000008;\u000a  char *local_60;\u000a  \u000a  iVar2 = (int)do_func;\u000a  if (iceauth_head == (AuthList *)0x0) {\u000a    iVar3 = 0;\u000a  }\u000a  else {\u000a    pAVar5 = iceauth_head;\u000a    do {\u000a      p_Var1 = pAVar5->next;\u000a      if (iVar2 < in_ECX) {\u000a        __s1 = (char *)0x0;\u000a        a = (char *)0x0;\u000a        local_60 = (char *)0x0;\u000a        __s1_00 = (char *)0x0;\u000a        lVar6 = (long)in_ECX - (long)iVar2;\u000a        ppcVar7 = (char **)(in_R8 + (long)iVar2 * 8);\u000a        do {\u000a          __s2 = *ppcVar7;\u000a          iVar3 = strncmp("protoname=",__s2,10);\u000a          if (iVar3 == 0) {\u000a            __s1 = __s2 + 10;\u000a          }\u000a          else {\u000a            iVar3 = strncmp("protodata=",__s2,10);\u000a            if (iVar3 == 0) {\u000a              a = __s2 + 10;\u000a            }\u000a            else {\u000a              iVar3 = strncmp("netid=",__s2,6);\u000a              if (iVar3 == 0) {\u000a                local_60 = __s2 + 6;\u000a              }\u000a              else {\u000a                iVar3 = strncmp("authname=",__s2,9);\u000a                if (iVar3 == 0) {\u000a                  __s1_00 = __s2 + 9;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          ppcVar7 = ppcVar7 + 1;\u000a          lVar6 = lVar6 + -1;\u000a        } while (lVar6 != 0);\u000a      }\u000a      else {\u000a        __s1_00 = (char *)0x0;\u000a        local_60 = (char *)0x0;\u000a        a = (char *)0x0;\u000a        __s1 = (char *)0x0;\u000a      }\u000a      iVar3 = 0;\u000a    } while (((((((__s1_00 == (char *)0x0) && (local_60 == (char *)0x0)) && (a == (char *)0x0)) &&\u000a               (__s1 == (char *)0x0)) ||\u000a              (((__s1 != (char *)0x0 &&\u000a                (iVar4 = strcmp(__s1,pAVar5->auth->protocol_name), iVar4 != 0)) ||\u000a               ((a != (char *)0x0 &&\u000a                (iVar4 = binaryEqual(a,pAVar5->auth->protocol_data), iVar4 == 0)))))) ||\u000a             ((((local_60 != (char *)0x0 &&\u000a                (iVar4 = strcmp(local_60,pAVar5->auth->network_id), iVar4 != 0)) ||\u000a               ((__s1_00 != (char *)0x0 &&\u000a                (iVar4 = strcmp(__s1_00,pAVar5->auth->auth_name), iVar4 != 0)))) ||\u000a              (iVar3 = (*in_R9)(inputfilename,(ulong)argv & 0xffffffff,pAVar5->auth,\u000a                                in_stack_00000008), -1 < iVar3)))) &&\u000a            (pAVar5 = (AuthList *)p_Var1, p_Var1 != (_AuthList *)0x0));\u000a  }\u000a  return iVar3 >> 0x1f & -iVar3;\u000a}\u000a\u000a
p157
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x48\nMOV qword ptr [RSP + 0x30],R9\nMOV R15D,ECX\nMOV EBP,EDX\nMOV dword ptr [RSP + 0x24],ESI\nMOV qword ptr [RSP + 0x28],RDI\nMOV RBX,qword ptr [0x006061f8]\nTEST RBX,RBX\nJZ 0x00402f7b\nMOVSXD RAX,EBP\nMOVSXD RCX,R15D\nLEA RDX,[R8 + RAX*0x8]\nMOV qword ptr [RSP + 0x38],RDX\nSUB RCX,RAX\nMOV qword ptr [RSP + 0x40],RCX\nMOV dword ptr [RSP + 0x4],R15D\nMOV dword ptr [RSP],EBP\nMOV qword ptr [RSP + 0x8],RBX\nMOV RAX,qword ptr [RBX]\nCMP EBP,R15D\nMOV qword ptr [RSP + 0x10],RAX\nJGE 0x00402e80\nMOV RBX,qword ptr [RSP + 0x40]\nMOV R14,qword ptr [RSP + 0x38]\nXOR R12D,R12D\nXOR R15D,R15D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nXOR R13D,R13D\nMOV RBP,qword ptr [R14]\nMOV EDI,0x40401f\nMOV EDX,0xa\nMOV RSI,RBP\nCALL 0x00400ea0\nTEST EAX,EAX\nJZ 0x00402e40\nMOV EDI,0x40402a\nMOV EDX,0xa\nMOV RSI,RBP\nCALL 0x00400ea0\nTEST EAX,EAX\nJZ 0x00402e50\nMOV EDI,0x404035\nMOV EDX,0x6\nMOV RSI,RBP\nCALL 0x00400ea0\nTEST EAX,EAX\nJZ 0x00402e59\nMOV EDI,0x40403c\nMOV EDX,0x9\nMOV RSI,RBP\nCALL 0x00400ea0\nADD RBP,0x9\nTEST EAX,EAX\nCMOVZ R13,RBP\nJMP 0x00402e70\nADD RBP,0xa\nMOV R12,RBP\nJMP 0x00402e70\nADD RBP,0xa\nMOV R15,RBP\nJMP 0x00402e70\nADD RBP,0x6\nMOV qword ptr [RSP + 0x18],RBP\nNOP word ptr CS:[RAX + RAX*0x1]\nADD R14,0x8\nDEC RBX\nJNZ 0x00402dd0\nJMP 0x00402e90\nXOR R13D,R13D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nXOR R15D,R15D\nXOR R12D,R12D\nXOR R14D,R14D\nTEST R13,R13\nMOV RBX,qword ptr [RSP + 0x18]\nJNZ 0x00402eb0\nTEST RBX,RBX\nJNZ 0x00402eb0\nTEST R15,R15\nJNZ 0x00402eb0\nTEST R12,R12\nJZ 0x00402f10\nNOP dword ptr [RAX]\nTEST R12,R12\nJZ 0x00402ecd\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [RAX]\nMOV RDI,R12\nCALL 0x00400fd0\nTEST EAX,EAX\nJNZ 0x00402f10\nTEST R15,R15\nJZ 0x00402eef\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [RAX + 0x10]\nMOVZX EDX,word ptr [RAX + 0x8]\nMOV RDI,R15\nCALL 0x00402d30\nTEST EAX,EAX\nJZ 0x00402f10\nTEST RBX,RBX\nJZ 0x00402f28\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [RAX + 0x18]\nMOV RDI,RBX\nCALL 0x00400fd0\nTEST EAX,EAX\nJZ 0x00402f28\nNOP dword ptr [RAX]\nMOV R15D,dword ptr [RSP + 0x4]\nMOV EBP,dword ptr [RSP]\nMOV RBX,qword ptr [RSP + 0x10]\nTEST RBX,RBX\nJNZ 0x00402da0\nJMP 0x00402f7e\nTEST R13,R13\nMOV R15D,dword ptr [RSP + 0x4]\nMOV EBP,dword ptr [RSP]\nMOV RBX,qword ptr [RSP + 0x10]\nJZ 0x00402f53\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [RAX + 0x20]\nMOV RDI,R13\nCALL 0x00400fd0\nTEST EAX,EAX\nJNZ 0x00402f1d\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RAX + 0x8]\nMOV RDI,qword ptr [RSP + 0x28]\nMOV ESI,dword ptr [RSP + 0x24]\nMOV RCX,qword ptr [0x80 + RSP]\nCALL qword ptr [RSP + 0x30]\nMOV R14D,EAX\nTEST R14D,R14D\nJNS 0x00402f1d\nJMP 0x00402f7e\nXOR R14D,R14D\nMOV EAX,R14D\nNEG EAX\nSAR R14D,0x1f\nAND R14D,EAX\nMOV EAX,R14D\nADD RSP,0x48\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p158
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 48\n4c 89 4c 24 30\n41 89 cf\n89 d5\n89 74 24 24\n48 89 7c 24 28\n48 8b 1d 80 34 20 00\n48 85 db\n0f 84 fa 01 00 00\n48 63 c5\n49 63 cf\n49 8d 14 c0\n48 89 54 24 38\n48 29 c1\n48 89 4c 24 40\n44 89 7c 24 04\n89 2c 24\n48 89 5c 24 08\n48 8b 03\n44 39 fd\n48 89 44 24 10\n0f 8d ca 00 00 00\n48 8b 5c 24 40\n4c 8b 74 24 38\n45 31 e4\n45 31 ff\n31 c0\n48 89 44 24 18\n45 31 ed\n49 8b 2e\nbf 1f 40 40 00\nba 0a 00 00 00\n48 89 ee\ne8 bb e0 ff ff\n85 c0\n74 57\nbf 2a 40 40 00\nba 0a 00 00 00\n48 89 ee\ne8 a5 e0 ff ff\n85 c0\n74 51\nbf 35 40 40 00\nba 06 00 00 00\n48 89 ee\ne8 8f e0 ff ff\n85 c0\n74 44\nbf 3c 40 40 00\nba 09 00 00 00\n48 89 ee\ne8 79 e0 ff ff\n48 83 c5 09\n85 c0\n4c 0f 44 ed\neb 3d\n48 83 c5 0a\n49 89 ec\neb 27\n48 83 c5 0a\n49 89 ef\neb 17\n48 83 c5 06\n48 89 6c 24 18\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 83 c6 08\n48 ff cb\n0f 85 53 ff ff ff\neb 11\n45 31 ed\n31 c0\n48 89 44 24 18\n45 31 ff\n45 31 e4\n45 31 f6\n4d 85 ed\n48 8b 5c 24 18\n75 13\n48 85 db\n75 0e\n4d 85 ff\n75 09\n4d 85 e4\n74 64\n0f 1f 40 00\n4d 85 e4\n74 18\n48 8b 44 24 08\n48 8b 40 08\n48 8b 30\n4c 89 e7\ne8 07 e1 ff ff\n85 c0\n75 43\n4d 85 ff\n74 1d\n48 8b 44 24 08\n48 8b 40 08\n48 8b 70 10\n0f b7 50 08\n4c 89 ff\ne8 45 fe ff ff\n85 c0\n74 21\n48 85 db\n74 34\n48 8b 44 24 08\n48 8b 40 08\n48 8b 70 18\n48 89 df\ne8 c7 e0 ff ff\n85 c0\n74 1b\n0f 1f 00\n44 8b 7c 24 04\n8b 2c 24\n48 8b 5c 24 10\n48 85 db\n0f 85 7a fe ff ff\neb 56\n4d 85 ed\n44 8b 7c 24 04\n8b 2c 24\n48 8b 5c 24 10\n74 19\n48 8b 44 24 08\n48 8b 40 08\n48 8b 70 20\n4c 89 ef\ne8 81 e0 ff ff\n85 c0\n75 ca\n48 8b 44 24 08\n48 8b 50 08\n48 8b 7c 24 28\n8b 74 24 24\n48 8b 8c 24 80 00 00 00\nff 54 24 30\n41 89 c6\n45 85 f6\n79 a4\neb 03\n45 31 f6\n44 89 f0\nf7 d8\n41 c1 fe 1f\n41 21 c6\n44 89 f0\n48 83 c4 48\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p159
S'.text:0000000000402d50\n.text:0000000000402d51\n.text:0000000000402d53\n.text:0000000000402d55\n.text:0000000000402d57\n.text:0000000000402d59\n.text:0000000000402d5a\n.text:0000000000402d5e\n.text:0000000000402d63\n.text:0000000000402d66\n.text:0000000000402d68\n.text:0000000000402d6c\n.text:0000000000402d71\n.text:0000000000402d78\n.text:0000000000402d7b\n.text:0000000000402d81\n.text:0000000000402d84\n.text:0000000000402d87\n.text:0000000000402d8b\n.text:0000000000402d90\n.text:0000000000402d93\n.text:0000000000402d98\n.text:0000000000402d9d\n.text:0000000000402da0\n.text:0000000000402da5\n.text:0000000000402da8\n.text:0000000000402dab\n.text:0000000000402db0\n.text:0000000000402db6\n.text:0000000000402dbb\n.text:0000000000402dc0\n.text:0000000000402dc3\n.text:0000000000402dc6\n.text:0000000000402dc8\n.text:0000000000402dcd\n.text:0000000000402dd0\n.text:0000000000402dd3\n.text:0000000000402dd8\n.text:0000000000402ddd\n.text:0000000000402de0\n.text:0000000000402de5\n.text:0000000000402de7\n.text:0000000000402de9\n.text:0000000000402dee\n.text:0000000000402df3\n.text:0000000000402df6\n.text:0000000000402dfb\n.text:0000000000402dfd\n.text:0000000000402dff\n.text:0000000000402e04\n.text:0000000000402e09\n.text:0000000000402e0c\n.text:0000000000402e11\n.text:0000000000402e13\n.text:0000000000402e15\n.text:0000000000402e1a\n.text:0000000000402e1f\n.text:0000000000402e22\n.text:0000000000402e27\n.text:0000000000402e2b\n.text:0000000000402e2d\n.text:0000000000402e31\n.text:0000000000402e40\n.text:0000000000402e44\n.text:0000000000402e47\n.text:0000000000402e50\n.text:0000000000402e54\n.text:0000000000402e57\n.text:0000000000402e59\n.text:0000000000402e5d\n.text:0000000000402e62\n.text:0000000000402e70\n.text:0000000000402e74\n.text:0000000000402e77\n.text:0000000000402e7d\n.text:0000000000402e80\n.text:0000000000402e83\n.text:0000000000402e85\n.text:0000000000402e8a\n.text:0000000000402e8d\n.text:0000000000402e90\n.text:0000000000402e93\n.text:0000000000402e96\n.text:0000000000402e9b\n.text:0000000000402e9d\n.text:0000000000402ea0\n.text:0000000000402ea2\n.text:0000000000402ea5\n.text:0000000000402ea7\n.text:0000000000402eaa\n.text:0000000000402eac\n.text:0000000000402eb0\n.text:0000000000402eb3\n.text:0000000000402eb5\n.text:0000000000402eba\n.text:0000000000402ebe\n.text:0000000000402ec1\n.text:0000000000402ec4\n.text:0000000000402ec9\n.text:0000000000402ecb\n.text:0000000000402ecd\n.text:0000000000402ed0\n.text:0000000000402ed2\n.text:0000000000402ed7\n.text:0000000000402edb\n.text:0000000000402edf\n.text:0000000000402ee3\n.text:0000000000402ee6\n.text:0000000000402eeb\n.text:0000000000402eed\n.text:0000000000402eef\n.text:0000000000402ef2\n.text:0000000000402ef4\n.text:0000000000402ef9\n.text:0000000000402efd\n.text:0000000000402f01\n.text:0000000000402f04\n.text:0000000000402f09\n.text:0000000000402f0b\n.text:0000000000402f0d\n.text:0000000000402f10\n.text:0000000000402f15\n.text:0000000000402f18\n.text:0000000000402f1d\n.text:0000000000402f20\n.text:0000000000402f26\n.text:0000000000402f28\n.text:0000000000402f2b\n.text:0000000000402f30\n.text:0000000000402f33\n.text:0000000000402f38\n.text:0000000000402f3a\n.text:0000000000402f3f\n.text:0000000000402f43\n.text:0000000000402f47\n.text:0000000000402f4a\n.text:0000000000402f4f\n.text:0000000000402f51\n.text:0000000000402f53\n.text:0000000000402f58\n.text:0000000000402f5c\n.text:0000000000402f61\n.text:0000000000402f65\n.text:0000000000402f6d\n.text:0000000000402f71\n.text:0000000000402f74\n.text:0000000000402f77\n.text:0000000000402f79\n.text:0000000000402f7b\n.text:0000000000402f7e\n.text:0000000000402f81\n.text:0000000000402f83\n.text:0000000000402f87\n.text:0000000000402f8a\n.text:0000000000402f8d\n.text:0000000000402f91\n.text:0000000000402f92\n.text:0000000000402f94\n.text:0000000000402f96\n.text:0000000000402f98\n.text:0000000000402f9a\n.text:0000000000402f9b\n'
p160
tp161
sS'_IO_putc'
p162
(S'\n__stdcall _IO_putc(int __c, _IO_FILE * __fp)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint _IO_putc(int __c,_IO_FILE *__fp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR__IO_putc_006060a0)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x006060a0]\n'
p165
S'ff 25 2a 51 20 00\n'
p166
S'.plt:0000000000400f70\n'
p167
tp168
sS'__errno_location'
p169
(S'\n__stdcall __errno_location()\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00606020)();\u000a  return piVar1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00606020]\n'
p172
S'ff 25 aa 51 20 00\n'
p173
S'.plt:0000000000400e70\n'
p174
tp175
sS'write'
p176
(S'\n__stdcall write(int __fd, void * __buf, size_t __n)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t write(int __fd,void *__buf,size_t __n)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_write_00606078)();\u000a  return sVar1;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00606078]\n'
p179
S'ff 25 52 51 20 00\n'
p180
S'.plt:0000000000400f20\n'
p181
tp182
sS'signal'
p183
(S'\n__stdcall signal(int __sig, __sighandler_t __handler)\n'
p184
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__sighandler_t signal(int __sig,__sighandler_t __handler)\u000a\u000a{\u000a  __sighandler_t pVar1;\u000a  \u000a  pVar1 = (__sighandler_t)(*(code *)PTR_signal_006060d8)();\u000a  return pVar1;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x006060d8]\n'
p186
S'ff 25 f2 50 20 00\n'
p187
S'.plt:0000000000400fe0\n'
p188
tp189
sS'frame_dummy'
p190
(S'\n__stdcall frame_dummy()\n'
p191
V\u000a/* WARNING: Removing unreachable block (ram,0x004011ca) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p192
S'MOV EDI,0x605e08\nCMP qword ptr [RDI],0x0\nJNZ 0x004011c0\nJMP 0x00401150\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004011bb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401150\n'
p193
S'bf 08 5e 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p194
S'.text:00000000004011b0\n.text:00000000004011b5\n.text:00000000004011b9\n.text:00000000004011bb\n.text:00000000004011c0\n.text:00000000004011c5\n.text:00000000004011c8\n.text:00000000004011ca\n.text:00000000004011cb\n.text:00000000004011ce\n.text:00000000004011d0\n.text:00000000004011d1\n'
p195
tp196
sS'strcmp'
p197
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_006060d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x006060d0]\n'
p200
S'ff 25 fa 50 20 00\n'
p201
S'.plt:0000000000400fd0\n'
p202
tp203
sS'do_remove'
p204
(S'\n__stdcall do_remove(char * inputfilename, char * * argv)\n'
p205
V\u000aint do_remove(char *inputfilename,char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  char **in_RCX;\u000a  int in_EDX;\u000a  \u000a  if (in_EDX < 2) {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a    iVar1 = 1;\u000a  }\u000a  else {\u000a    iVar1 = search_and_do(inputfilename,argv,(int (*)(char *,int,IceAuthFileEntry *,void *))0x1);\u000a    if (verbose != 0) {\u000a      printf("%d entries removed\u005cn",0);\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p206
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RCX\nMOV EAX,EDX\nMOV dword ptr [RSP + 0xc],0x0\nCMP EAX,0x1\nJG 0x0040261b\nCALL 0x00401b80\nMOV RDI,qword ptr [RBX]\nCALL 0x00402950\nMOV EBX,0x1\nJMP 0x00402654\nLEA RCX,[RSP + 0xc]\nMOV qword ptr [RSP],RCX\nMOV EDX,0x1\nMOV R9D,0x403280\nMOV ECX,EAX\nMOV R8,RBX\nCALL 0x00402d50\nMOV EBX,EAX\nCMP dword ptr [0x00606170],0x0\nJZ 0x00402654\nMOV ESI,dword ptr [RSP + 0xc]\nMOV EDI,0x40451a\nXOR EAX,EAX\nCALL 0x00400f60\nMOV EAX,EBX\nADD RSP,0x10\nPOP RBX\nRET\n'
p207
S'53\n48 83 ec 10\n48 89 cb\n89 d0\nc7 44 24 0c 00 00 00 00\n83 f8 01\n7f 14\ne8 74 f5 ff ff\n48 8b 3b\ne8 3c 03 00 00\nbb 01 00 00 00\neb 39\n48 8d 4c 24 0c\n48 89 0c 24\nba 01 00 00 00\n41 b9 80 32 40 00\n89 c1\n49 89 d8\ne8 17 07 00 00\n89 c3\n83 3d 2e 3b 20 00 00\n74 10\n8b 74 24 0c\nbf 1a 45 40 00\n31 c0\ne8 0c e9 ff ff\n89 d8\n48 83 c4 10\n5b\nc3\n'
p208
S'.text:00000000004025f0\n.text:00000000004025f1\n.text:00000000004025f5\n.text:00000000004025f8\n.text:00000000004025fa\n.text:0000000000402602\n.text:0000000000402605\n.text:0000000000402607\n.text:000000000040260c\n.text:000000000040260f\n.text:0000000000402614\n.text:0000000000402619\n.text:000000000040261b\n.text:0000000000402620\n.text:0000000000402624\n.text:0000000000402629\n.text:000000000040262f\n.text:0000000000402631\n.text:0000000000402634\n.text:0000000000402639\n.text:000000000040263b\n.text:0000000000402642\n.text:0000000000402644\n.text:0000000000402648\n.text:000000000040264d\n.text:000000000040264f\n.text:0000000000402654\n.text:0000000000402656\n.text:000000000040265a\n.text:000000000040265b\n'
p209
tp210
sS'IceReadAuthFileEntry'
p211
(S'\n__stdcall IceReadAuthFileEntry()\n'
p212
V\u000avoid IceReadAuthFileEntry(void)\u000a\u000a{\u000a  (*(code *)PTR_IceReadAuthFileEntry_00606108)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x00606108]\n'
p214
S'ff 25 c2 50 20 00\n'
p215
S'.plt:0000000000401040\n'
p216
tp217
sS'do_info'
p218
(S'\n__stdcall do_info(char * inputfilename, char * * argv)\n'
p219
V\u000aint do_info(char *inputfilename,char **argv)\u000a\u000a{\u000a  _AuthList *p_Var1;\u000a  char **in_RCX;\u000a  int in_EDX;\u000a  undefined *puVar2;\u000a  uint uVar3;\u000a  char *pcVar4;\u000a  undefined *puVar5;\u000a  int iVar6;\u000a  \u000a  if (in_EDX == 1) {\u000a    iVar6 = 0;\u000a    uVar3 = 0;\u000a    if (iceauth_head != (AuthList *)0x0) {\u000a      uVar3 = 0;\u000a      p_Var1 = (_AuthList *)iceauth_head;\u000a      do {\u000a        uVar3 = uVar3 + 1;\u000a        p_Var1 = ((AuthList *)p_Var1)->next;\u000a      } while (p_Var1 != (_AuthList *)0x0);\u000a    }\u000a    pcVar4 = "(none)";\u000a    if (iceauth_filename != (char *)0x0) {\u000a      pcVar4 = iceauth_filename;\u000a    }\u000a    printf("Authority file:       %s\u005cn",pcVar4);\u000a    puVar2 = &DAT_004041bc;\u000a    puVar5 = &DAT_004041bf;\u000a    if (iceauth_existed != 0) {\u000a      puVar5 = &DAT_004041bc;\u000a    }\u000a    printf("File new:             %s\u005cn",puVar5);\u000a    puVar5 = &DAT_004041bf;\u000a    if (ignore_locks != 0) {\u000a      puVar5 = &DAT_004041bc;\u000a    }\u000a    printf("File locked:          %s\u005cn",puVar5);\u000a    printf("Number of entries:    %d\u005cn",(ulong)uVar3);\u000a    puVar5 = &DAT_004041bf;\u000a    if (iceauth_allowed != 0) {\u000a      puVar5 = &DAT_004041bc;\u000a    }\u000a    printf("Changes honored:      %s\u005cn",puVar5);\u000a    if (iceauth_modified != 0) {\u000a      puVar2 = &DAT_004041bf;\u000a    }\u000a    printf("Changes made:         %s\u005cn",puVar2);\u000a    printf("Current input:        %s:%d\u005cn",inputfilename,(ulong)argv & 0xffffffff);\u000a  }\u000a  else {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a    iVar6 = 1;\u000a  }\u000a  return iVar6;\u000a}\u000a\u000a
p220
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RCX\nMOV R14D,ESI\nMOV R12,RDI\nCMP EDX,0x1\nJNZ 0x00402357\nMOV RAX,qword ptr [0x006061f8]\nXOR R15D,R15D\nTEST RAX,RAX\nMOV EBP,0x0\nJZ 0x0040229a\nXOR EBP,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nINC EBP\nMOV RAX,qword ptr [RAX]\nTEST RAX,RAX\nJNZ 0x00402290\nMOV RAX,qword ptr [0x006061e0]\nTEST RAX,RAX\nMOV ESI,0x404116\nCMOVNZ RSI,RAX\nMOV EDI,0x4040fc\nXOR EAX,EAX\nCALL 0x00400f60\nMOV AL,byte ptr [0x006061f0]\nMOV EBX,0x4041bc\nMOV R13D,0x4041bf\nTEST AL,AL\nMOV ESI,0x4041bf\nCMOVNZ RSI,RBX\nMOV EDI,0x40411d\nXOR EAX,EAX\nCALL 0x00400f60\nCMP dword ptr [0x006061d0],0x0\nMOV ESI,0x4041bf\nCMOVNZ RSI,RBX\nMOV EDI,0x404137\nXOR EAX,EAX\nCALL 0x00400f60\nMOV EDI,0x404151\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00400f60\nMOV AL,byte ptr [0x006061e8]\nTEST AL,AL\nMOV ESI,0x4041bf\nCMOVNZ RSI,RBX\nMOV EDI,0x40416b\nXOR EAX,EAX\nCALL 0x00400f60\nMOV AL,byte ptr [0x00606200]\nTEST AL,AL\nCMOVNZ RBX,R13\nMOV EDI,0x404185\nXOR EAX,EAX\nMOV RSI,RBX\nCALL 0x00400f60\nMOV EDI,0x40419f\nXOR EAX,EAX\nMOV RSI,R12\nMOV EDX,R14D\nCALL 0x00400f60\nJMP 0x00402370\nMOV RDI,R12\nMOV ESI,R14D\nCALL 0x00401b80\nMOV RDI,qword ptr [RBX]\nCALL 0x00402950\nMOV R15D,0x1\nMOV EAX,R15D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p221
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 cb\n41 89 f6\n49 89 fc\n83 fa 01\n0f 85 ea 00 00 00\n48 8b 05 84 3f 20 00\n45 31 ff\n48 85 c0\nbd 00 00 00 00\n74 19\n31 ed\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nff c5\n48 8b 00\n48 85 c0\n75 f6\n48 8b 05 3f 3f 20 00\n48 85 c0\nbe 16 41 40 00\n48 0f 45 f0\nbf fc 40 40 00\n31 c0\ne8 a7 ec ff ff\n8a 05 31 3f 20 00\nbb bc 41 40 00\n41 bd bf 41 40 00\n84 c0\nbe bf 41 40 00\n48 0f 45 f3\nbf 1d 41 40 00\n31 c0\ne8 7f ec ff ff\n83 3d e8 3e 20 00 00\nbe bf 41 40 00\n48 0f 45 f3\nbf 37 41 40 00\n31 c0\ne8 63 ec ff ff\nbf 51 41 40 00\n31 c0\n89 ee\ne8 55 ec ff ff\n8a 05 d7 3e 20 00\n84 c0\nbe bf 41 40 00\n48 0f 45 f3\nbf 6b 41 40 00\n31 c0\ne8 38 ec ff ff\n8a 05 d2 3e 20 00\n84 c0\n49 0f 45 dd\nbf 85 41 40 00\n31 c0\n48 89 de\ne8 1d ec ff ff\nbf 9f 41 40 00\n31 c0\n4c 89 e6\n44 89 f2\ne8 0b ec ff ff\neb 19\n4c 89 e7\n44 89 f6\ne8 1e f8 ff ff\n48 8b 3b\ne8 e6 05 00 00\n41 bf 01 00 00 00\n44 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p222
S'.text:0000000000402250\n.text:0000000000402251\n.text:0000000000402253\n.text:0000000000402255\n.text:0000000000402257\n.text:0000000000402259\n.text:000000000040225a\n.text:000000000040225b\n.text:000000000040225e\n.text:0000000000402261\n.text:0000000000402264\n.text:0000000000402267\n.text:000000000040226d\n.text:0000000000402274\n.text:0000000000402277\n.text:000000000040227a\n.text:000000000040227f\n.text:0000000000402281\n.text:0000000000402283\n.text:0000000000402290\n.text:0000000000402292\n.text:0000000000402295\n.text:0000000000402298\n.text:000000000040229a\n.text:00000000004022a1\n.text:00000000004022a4\n.text:00000000004022a9\n.text:00000000004022ad\n.text:00000000004022b2\n.text:00000000004022b4\n.text:00000000004022b9\n.text:00000000004022bf\n.text:00000000004022c4\n.text:00000000004022ca\n.text:00000000004022cc\n.text:00000000004022d1\n.text:00000000004022d5\n.text:00000000004022da\n.text:00000000004022dc\n.text:00000000004022e1\n.text:00000000004022e8\n.text:00000000004022ed\n.text:00000000004022f1\n.text:00000000004022f6\n.text:00000000004022f8\n.text:00000000004022fd\n.text:0000000000402302\n.text:0000000000402304\n.text:0000000000402306\n.text:000000000040230b\n.text:0000000000402311\n.text:0000000000402313\n.text:0000000000402318\n.text:000000000040231c\n.text:0000000000402321\n.text:0000000000402323\n.text:0000000000402328\n.text:000000000040232e\n.text:0000000000402330\n.text:0000000000402334\n.text:0000000000402339\n.text:000000000040233b\n.text:000000000040233e\n.text:0000000000402343\n.text:0000000000402348\n.text:000000000040234a\n.text:000000000040234d\n.text:0000000000402350\n.text:0000000000402355\n.text:0000000000402357\n.text:000000000040235a\n.text:000000000040235d\n.text:0000000000402362\n.text:0000000000402365\n.text:000000000040236a\n.text:0000000000402370\n.text:0000000000402373\n.text:0000000000402377\n.text:0000000000402378\n.text:000000000040237a\n.text:000000000040237c\n.text:000000000040237e\n.text:0000000000402380\n.text:0000000000402381\n'
p223
tp224
sS'__ctype_tolower_loc'
p225
(S'\n__stdcall __ctype_tolower_loc()\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_00606148)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x00606148]\n'
p228
S'ff 25 82 50 20 00\n'
p229
S'.plt:00000000004010c0\n'
p230
tp231
sS'do_questionmark'
p232
(S'\n__stdcall do_questionmark(char * inputfilename, char * * argv)\n'
p233
V\u000aint do_questionmark(char *inputfilename,char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  long lVar3;\u000a  CommandTable *pCVar4;\u000a  int iVar5;\u000a  \u000a  puts("Commands:");\u000a  pCVar4 = command_table;\u000a  iVar1 = 0x48;\u000a  lVar3 = 0;\u000a  do {\u000a    iVar5 = iVar1;\u000a    if (0x48 < command_table[lVar3].maxlen + iVar1) {\u000a      if (lVar3 != 0) {\u000a        _IO_putc(10,stdout);\u000a      }\u000a      fwrite("        ",8,1,(FILE *)stdout);\u000a      iVar5 = 8;\u000a    }\u000a    fputs(pCVar4->name,(FILE *)stdout);\u000a    uVar2 = command_table[lVar3].maxlen;\u000a    do {\u000a      _IO_putc(0x20,stdout);\u000a      uVar2 = uVar2 + 1;\u000a    } while (uVar2 < 10);\u000a    lVar3 = lVar3 + 1;\u000a    pCVar4 = command_table + lVar3;\u000a    iVar1 = iVar5 + uVar2;\u000a  } while (lVar3 != 0xb);\u000a  if (iVar5 + uVar2 != 0) {\u000a    _IO_putc(10,stdout);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p234
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV EDI,0x404589\nCALL 0x00400ee0\nMOV R14D,0x4045a0\nMOV EAX,0x48\nXOR R13D,R13D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RCX,R13\nSHL RCX,0x5\nLEA R12,[0x4045ac + RCX]\nMOV ECX,dword ptr [0x4045ac + RCX]\nADD ECX,EAX\nCMP ECX,0x49\nMOV R15D,EAX\nJC 0x004028d5\nTEST R13,R13\nJZ 0x004028b4\nMOV RSI,qword ptr [0x006061a0]\nMOV EDI,0xa\nCALL 0x00400f70\nMOV RCX,qword ptr [0x006061a0]\nMOV EDI,0x404573\nMOV ESI,0x8\nMOV EDX,0x1\nCALL 0x004010b0\nMOV R15D,0x8\nMOV RDI,qword ptr [R14]\nMOV RSI,qword ptr [0x006061a0]\nCALL 0x00400f80\nMOV EBX,dword ptr [R12]\nNOP dword ptr [RAX + RAX*0x1]\nMOV RSI,qword ptr [0x006061a0]\nMOV EDI,0x20\nCALL 0x00400f70\nINC EBX\nCMP EBX,0xa\nJC 0x004028f0\nINC R13\nMOV RAX,R13\nSHL RAX,0x5\nLEA R14,[0x4045a0 + RAX]\nLEA EAX,[R15 + RBX*0x1]\nCMP R13,0xb\nJNZ 0x00402880\nADD R15D,EBX\nJZ 0x0040293d\nMOV RSI,qword ptr [0x006061a0]\nMOV EDI,0xa\nCALL 0x00400f70\nXOR EAX,EAX\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p235
S'41 57\n41 56\n41 55\n41 54\n53\nbf 89 45 40 00\ne8 7d e6 ff ff\n41 be a0 45 40 00\nb8 48 00 00 00\n45 31 ed\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 e9\n48 c1 e1 05\n4c 8d a1 ac 45 40 00\n8b 89 ac 45 40 00\n01 c1\n83 f9 49\n41 89 c7\n72 37\n4d 85 ed\n74 11\n48 8b 35 f6 38 20 00\nbf 0a 00 00 00\ne8 bc e6 ff ff\n48 8b 0d e5 38 20 00\nbf 73 45 40 00\nbe 08 00 00 00\nba 01 00 00 00\ne8 e1 e7 ff ff\n41 bf 08 00 00 00\n49 8b 3e\n48 8b 35 c1 38 20 00\ne8 9c e6 ff ff\n41 8b 1c 24\n0f 1f 84 00 00 00 00 00\n48 8b 35 a9 38 20 00\nbf 20 00 00 00\ne8 6f e6 ff ff\nff c3\n83 fb 0a\n72 e8\n49 ff c5\n4c 89 e8\n48 c1 e0 05\n4c 8d b0 a0 45 40 00\n41 8d 04 1f\n49 83 fd 0b\n0f 85 59 ff ff ff\n41 01 df\n74 11\n48 8b 35 6d 38 20 00\nbf 0a 00 00 00\ne8 33 e6 ff ff\n31 c0\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p236
S'.text:0000000000402850\n.text:0000000000402852\n.text:0000000000402854\n.text:0000000000402856\n.text:0000000000402858\n.text:0000000000402859\n.text:000000000040285e\n.text:0000000000402863\n.text:0000000000402869\n.text:000000000040286e\n.text:0000000000402871\n.text:0000000000402880\n.text:0000000000402883\n.text:0000000000402887\n.text:000000000040288e\n.text:0000000000402894\n.text:0000000000402896\n.text:0000000000402899\n.text:000000000040289c\n.text:000000000040289e\n.text:00000000004028a1\n.text:00000000004028a3\n.text:00000000004028aa\n.text:00000000004028af\n.text:00000000004028b4\n.text:00000000004028bb\n.text:00000000004028c0\n.text:00000000004028c5\n.text:00000000004028ca\n.text:00000000004028cf\n.text:00000000004028d5\n.text:00000000004028d8\n.text:00000000004028df\n.text:00000000004028e4\n.text:00000000004028e8\n.text:00000000004028f0\n.text:00000000004028f7\n.text:00000000004028fc\n.text:0000000000402901\n.text:0000000000402903\n.text:0000000000402906\n.text:0000000000402908\n.text:000000000040290b\n.text:000000000040290e\n.text:0000000000402912\n.text:0000000000402919\n.text:000000000040291d\n.text:0000000000402921\n.text:0000000000402927\n.text:000000000040292a\n.text:000000000040292c\n.text:0000000000402933\n.text:0000000000402938\n.text:000000000040293d\n.text:000000000040293f\n.text:0000000000402940\n.text:0000000000402942\n.text:0000000000402944\n.text:0000000000402946\n.text:0000000000402948\n'
p237
tp238
sS'read_auth_entries'
p239
(S'\n__stdcall read_auth_entries(FILE * fp, AuthList * * headp, AuthList * * tailp)\n'
p240
V\u000aint read_auth_entries(FILE *fp,AuthList **headp,AuthList **tailp)\u000a\u000a{\u000a  AuthList *pAVar1;\u000a  IceAuthFileEntry *pIVar2;\u000a  int iVar3;\u000a  AuthList *pAVar4;\u000a  AuthList *pAVar5;\u000a  AuthList *pAVar6;\u000a  \u000a  pIVar2 = (IceAuthFileEntry *)IceReadAuthFileEntry();\u000a  if (pIVar2 == (IceAuthFileEntry *)0x0) {\u000a    pAVar1 = (AuthList *)0x0;\u000a    iVar3 = 0;\u000a    pAVar5 = (AuthList *)0x0;\u000a  }\u000a  else {\u000a    iVar3 = 0;\u000a    pAVar4 = (AuthList *)0x0;\u000a    pAVar6 = (AuthList *)0x0;\u000a    do {\u000a      pAVar1 = (AuthList *)malloc(0x10);\u000a      if (pAVar1 == (AuthList *)0x0) {\u000a        fprintf(stderr,"%s:  unable to alloc entry reading auth file\u005cn",ProgramName);\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(1);\u000a      }\u000a      pAVar1->next = (_AuthList *)0x0;\u000a      pAVar1->auth = pIVar2;\u000a      pAVar5 = pAVar1;\u000a      if (pAVar6 != (AuthList *)0x0) {\u000a        *(AuthList **)&pAVar6->next = pAVar1;\u000a        pAVar5 = pAVar4;\u000a      }\u000a      iVar3 = iVar3 + 1;\u000a      pIVar2 = (IceAuthFileEntry *)IceReadAuthFileEntry(fp);\u000a      pAVar4 = pAVar5;\u000a      pAVar6 = pAVar1;\u000a    } while (pIVar2 != (IceAuthFileEntry *)0x0);\u000a  }\u000a  *headp = pAVar5;\u000a  *tailp = pAVar1;\u000a  return iVar3;\u000a}\u000a\u000a
p241
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV qword ptr [RSP + 0x10],RDX\nMOV qword ptr [RSP + 0x8],RSI\nMOV R12,RDI\nCALL 0x00401040\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x0040176b\nXOR R14D,R14D\nXOR R13D,R13D\nXOR R15D,R15D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x10\nCALL 0x00401020\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00401795\nMOV qword ptr [RBX],0x0\nMOV qword ptr [RBX + 0x8],RBP\nTEST R15,R15\nJZ 0x00401750\nMOV qword ptr [R15],RBX\nJMP 0x00401753\nMOV R14,RBX\nINC R13D\nMOV RDI,R12\nCALL 0x00401040\nMOV RBP,RAX\nTEST RBP,RBP\nMOV R15,RBX\nJNZ 0x00401720\nJMP 0x00401773\nXOR EBX,EBX\nXOR R13D,R13D\nXOR R14D,R14D\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RAX],R14\nMOV RAX,qword ptr [RSP + 0x10]\nMOV qword ptr [RAX],RBX\nMOV EAX,R13D\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x403b20\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV EDI,0x1\nCALL 0x004010a0\n'
p242
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n48 89 54 24 10\n48 89 74 24 08\n49 89 fc\ne8 40 f9 ff ff\n48 89 c5\n48 85 ed\n74 63\n45 31 f6\n45 31 ed\n45 31 ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 10 00 00 00\ne8 f6 f8 ff ff\n48 89 c3\n48 85 db\n74 63\n48 c7 03 00 00 00 00\n48 89 6b 08\n4d 85 ff\n74 0e\n49 89 1f\neb 0c\n49 89 de\n41 ff c5\n4c 89 e7\ne8 e2 f8 ff ff\n48 89 c5\n48 85 ed\n49 89 df\n75 b7\neb 08\n31 db\n45 31 ed\n45 31 f6\n48 8b 44 24 08\n4c 89 30\n48 8b 44 24 10\n48 89 18\n44 89 e8\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 3d 24 4a 20 00\n48 8b 15 6d 4a 20 00\nbe 20 3b 40 00\n31 c0\ne8 41 f8 ff ff\nbf 01 00 00 00\ne8 e7 f8 ff ff\n'
p243
S'.text:00000000004016e0\n.text:00000000004016e1\n.text:00000000004016e3\n.text:00000000004016e5\n.text:00000000004016e7\n.text:00000000004016e9\n.text:00000000004016ea\n.text:00000000004016ee\n.text:00000000004016f3\n.text:00000000004016f8\n.text:00000000004016fb\n.text:0000000000401700\n.text:0000000000401703\n.text:0000000000401706\n.text:0000000000401708\n.text:000000000040170b\n.text:000000000040170e\n.text:0000000000401711\n.text:0000000000401720\n.text:0000000000401725\n.text:000000000040172a\n.text:000000000040172d\n.text:0000000000401730\n.text:0000000000401732\n.text:0000000000401739\n.text:000000000040173d\n.text:0000000000401740\n.text:0000000000401742\n.text:0000000000401745\n.text:0000000000401750\n.text:0000000000401753\n.text:0000000000401756\n.text:0000000000401759\n.text:000000000040175e\n.text:0000000000401761\n.text:0000000000401764\n.text:0000000000401767\n.text:0000000000401769\n.text:000000000040176b\n.text:000000000040176d\n.text:0000000000401770\n.text:0000000000401773\n.text:0000000000401778\n.text:000000000040177b\n.text:0000000000401780\n.text:0000000000401783\n.text:0000000000401786\n.text:000000000040178a\n.text:000000000040178b\n.text:000000000040178d\n.text:000000000040178f\n.text:0000000000401791\n.text:0000000000401793\n.text:0000000000401794\n.text:0000000000401795\n.text:000000000040179c\n.text:00000000004017a3\n.text:00000000004017a8\n.text:00000000004017aa\n.text:00000000004017af\n.text:00000000004017b4\n'
p244
tp245
sS'exit'
p246
(S'\n__stdcall exit(int __status)\n'
p247
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00606138)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00606138]\n'
p249
S'ff 25 92 50 20 00\n'
p250
S'.plt:00000000004010a0\n'
p251
tp252
sS'do_help'
p253
(S'\n__stdcall do_help(char * inputfilename, char * * argv)\n'
p254
V\u000aint do_help(char *inputfilename,char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  long in_RCX;\u000a  int in_EDX;\u000a  char *cmd;\u000a  int iVar2;\u000a  \u000a  if (in_EDX < 2) {\u000a    cmd = (char *)0x0;\u000a  }\u000a  else {\u000a    cmd = *(char **)(in_RCX + 8);\u000a  }\u000a  iVar1 = print_help(stdout,cmd);\u000a  if ((iVar1 < 0) || ((cmd == (char *)0x0 && (iVar1 == 0)))) {\u000a    prefix(inputfilename);\u000a    fwrite("internal error with help",0x18,1,stderr);\u000a    if (cmd != (char *)0x0) {\u000a      fprintf(stderr," on command \u005c"%s\u005c"",cmd);\u000a    }\u000a    fputc(10,stderr);\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = 0;\u000a    if (iVar1 == 0) {\u000a      prefix(inputfilename);\u000a      iVar2 = 0;\u000a      fprintf(stderr,"no help for nonexistent command \u005c"%s\u005c"\u005cn",cmd);\u000a    }\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p255
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ESI\nMOV R15,RDI\nCMP EDX,0x2\nJL 0x00402198\nMOV RBX,qword ptr [RCX + 0x8]\nJMP 0x0040219a\nXOR EBX,EBX\nMOV RDI,qword ptr [0x006061a0]\nMOV RSI,RBX\nCALL 0x00401ba0\nTEST EAX,EAX\nJS 0x004021c9\nTEST RBX,RBX\nJNZ 0x004021b6\nTEST EAX,EAX\nJZ 0x004021c9\nXOR EBP,EBP\nTEST EAX,EAX\nJZ 0x00402222\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,R15\nMOV ESI,R14D\nCALL 0x00401b80\nMOV RCX,qword ptr [0x006061c0]\nMOV EDI,0x4040ac\nMOV ESI,0x18\nMOV EDX,0x1\nCALL 0x004010b0\nTEST RBX,RBX\nJZ 0x0040220a\nMOV RDI,qword ptr [0x006061c0]\nMOV ESI,0x4040c5\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00400ff0\nMOV RSI,qword ptr [0x006061c0]\nMOV EDI,0xa\nCALL 0x00400fa0\nMOV EBP,0x1\nJMP 0x004021bc\nMOV RDI,R15\nMOV ESI,R14D\nCALL 0x00401b80\nMOV RDI,qword ptr [0x006061c0]\nXOR EBP,EBP\nMOV ESI,0x4040d6\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00400ff0\nJMP 0x004021bc\n'
p256
S'55\n41 57\n41 56\n53\n50\n41 89 f6\n49 89 ff\n83 fa 02\n7c 06\n48 8b 59 08\neb 02\n31 db\n48 8b 3d ff 3f 20 00\n48 89 de\ne8 f7 f9 ff ff\n85 c0\n78 1c\n48 85 db\n75 04\n85 c0\n74 13\n31 ed\n85 c0\n74 66\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n4c 89 ff\n44 89 f6\ne8 ac f9 ff ff\n48 8b 0d e5 3f 20 00\nbf ac 40 40 00\nbe 18 00 00 00\nba 01 00 00 00\ne8 c1 ee ff ff\n48 85 db\n74 16\n48 8b 3d c5 3f 20 00\nbe c5 40 40 00\n31 c0\n48 89 da\ne8 e6 ed ff ff\n48 8b 35 af 3f 20 00\nbf 0a 00 00 00\ne8 85 ed ff ff\nbd 01 00 00 00\neb 9a\n4c 89 ff\n44 89 f6\ne8 53 f9 ff ff\n48 8b 3d 8c 3f 20 00\n31 ed\nbe d6 40 40 00\n31 c0\n48 89 da\ne8 ab ed ff ff\ne9 72 ff ff ff\n'
p257
S'.text:0000000000402180\n.text:0000000000402181\n.text:0000000000402183\n.text:0000000000402185\n.text:0000000000402186\n.text:0000000000402187\n.text:000000000040218a\n.text:000000000040218d\n.text:0000000000402190\n.text:0000000000402192\n.text:0000000000402196\n.text:0000000000402198\n.text:000000000040219a\n.text:00000000004021a1\n.text:00000000004021a4\n.text:00000000004021a9\n.text:00000000004021ab\n.text:00000000004021ad\n.text:00000000004021b0\n.text:00000000004021b2\n.text:00000000004021b4\n.text:00000000004021b6\n.text:00000000004021b8\n.text:00000000004021ba\n.text:00000000004021bc\n.text:00000000004021be\n.text:00000000004021c2\n.text:00000000004021c3\n.text:00000000004021c5\n.text:00000000004021c7\n.text:00000000004021c8\n.text:00000000004021c9\n.text:00000000004021cc\n.text:00000000004021cf\n.text:00000000004021d4\n.text:00000000004021db\n.text:00000000004021e0\n.text:00000000004021e5\n.text:00000000004021ea\n.text:00000000004021ef\n.text:00000000004021f2\n.text:00000000004021f4\n.text:00000000004021fb\n.text:0000000000402200\n.text:0000000000402202\n.text:0000000000402205\n.text:000000000040220a\n.text:0000000000402211\n.text:0000000000402216\n.text:000000000040221b\n.text:0000000000402220\n.text:0000000000402222\n.text:0000000000402225\n.text:0000000000402228\n.text:000000000040222d\n.text:0000000000402234\n.text:0000000000402236\n.text:000000000040223b\n.text:000000000040223d\n.text:0000000000402240\n.text:0000000000402245\n'
p258
tp259
sS'remove_entry'
p260
(S'\n__stdcall remove_entry(char * inputfilename, IceAuthFileEntry * auth, void * data)\n'
p261
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000aint remove_entry(char *inputfilename,IceAuthFileEntry *auth,void *data)\u000a\u000a{\u000a  AuthList *__ptr;\u000a  int *in_RCX;\u000a  AuthList **ppAVar1;\u000a  \u000a  __ptr = (AuthList *)&iceauth_head;\u000a  do {\u000a    ppAVar1 = (AuthList **)__ptr;\u000a    __ptr = *ppAVar1;\u000a  } while (__ptr->auth != (IceAuthFileEntry *)data);\u000a  *(_AuthList **)ppAVar1 = __ptr->next;\u000a  IceFreeAuthFileEntry(__ptr->auth);\u000a  free(__ptr);\u000a  iceauth_modified = 1;\u000a  *in_RCX = *in_RCX + 1;\u000a  return 1;\u000a}\u000a\u000a
p262
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV EBX,0x6061f8\nNOP dword ptr [RAX]\nMOV RAX,RBX\nMOV RBX,qword ptr [RAX]\nCMP qword ptr [RBX + 0x8],RDX\nJNZ 0x00403290\nMOV RCX,qword ptr [RBX]\nMOV qword ptr [RAX],RCX\nMOV RDI,qword ptr [RBX + 0x8]\nCALL 0x00400f40\nMOV RDI,RBX\nCALL 0x00400e60\nMOV byte ptr [0x00606200],0x1\nINC dword ptr [R14]\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p263
S'41 56\n53\n50\n49 89 ce\nbb f8 61 60 00\n0f 1f 40 00\n48 89 d8\n48 8b 18\n48 39 53 08\n75 f4\n48 8b 0b\n48 89 08\n48 8b 7b 08\ne8 95 dc ff ff\n48 89 df\ne8 ad db ff ff\nc6 05 46 2f 20 00 01\n41 ff 06\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p264
S'.text:0000000000403280\n.text:0000000000403282\n.text:0000000000403283\n.text:0000000000403284\n.text:0000000000403287\n.text:000000000040328c\n.text:0000000000403290\n.text:0000000000403293\n.text:0000000000403296\n.text:000000000040329a\n.text:000000000040329c\n.text:000000000040329f\n.text:00000000004032a2\n.text:00000000004032a6\n.text:00000000004032ab\n.text:00000000004032ae\n.text:00000000004032b3\n.text:00000000004032ba\n.text:00000000004032bd\n.text:00000000004032c2\n.text:00000000004032c6\n.text:00000000004032c7\n.text:00000000004032c9\n'
p265
tp266
sS'__libc_csu_fini'
p267
(S'\n__stdcall __libc_csu_fini()\n'
p268
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p269
S'RET\n'
p270
S'f3 c3\n'
p271
S'.text:00000000004034e0\n'
p272
tp273
sS'fileno'
p274
(S'\n__stdcall fileno(FILE * __stream)\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_006060f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x006060f0]\n'
p277
S'ff 25 da 50 20 00\n'
p278
S'.plt:0000000000401010\n'
p279
tp280
sS'extract_entry'
p281
(S'\n__stdcall extract_entry(char * inputfilename, IceAuthFileEntry * auth, void * data)\n'
p282
V\u000aint extract_entry(char *inputfilename,IceAuthFileEntry *auth,void *data)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  FILE **in_RCX;\u000a  \u000a  if (*in_RCX == (FILE *)0x0) {\u000a    pFVar1 = open_file((char **)(in_RCX + 1),"wb",(int *)(in_RCX + 2),inputfilename,\u000a                       (char *)((ulong)auth & 0xffffffff));\u000a    *in_RCX = pFVar1;\u000a    if (pFVar1 == (FILE *)0x0) {\u000a      prefix(inputfilename);\u000a      fprintf(stderr,"unable to open extraction file \u005c"%s\u005c"\u005cn",in_RCX[1]);\u000a      return -1;\u000a    }\u000a  }\u000a  IceWriteAuthFileEntry(*in_RCX,data);\u000a  *(int *)((long)in_RCX + 0x14) = *(int *)((long)in_RCX + 0x14) + 1;\u000a  return 0;\u000a}\u000a\u000a
p283
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV RBX,RCX\nMOV R14,RDX\nMOV R12D,ESI\nMOV RBP,RDI\nCMP qword ptr [RBX],0x0\nJNZ 0x00402fe1\nLEA R15,[RBX + 0x8]\nLEA RDX,[RBX + 0x10]\nMOV R9,qword ptr [RBX + 0x18]\nMOV ESI,0x403b63\nMOV RDI,R15\nMOV RCX,RBP\nMOV R8D,R12D\nCALL 0x00403030\nMOV qword ptr [RBX],RAX\nTEST RAX,RAX\nJZ 0x00402ffa\nMOV RDI,qword ptr [RBX]\nMOV RSI,R14\nCALL 0x00400eb0\nINC dword ptr [RBX + 0x14]\nXOR EAX,EAX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,RBP\nMOV ESI,R12D\nCALL 0x00401b80\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [R15]\nMOV ESI,0x404046\nXOR EAX,EAX\nCALL 0x00400ff0\nMOV EAX,0xffffffff\nJMP 0x00402ff1\n'
p284
S'55\n41 57\n41 56\n41 54\n53\n48 89 cb\n49 89 d6\n41 89 f4\n48 89 fd\n48 83 3b 00\n75 27\n4c 8d 7b 08\n48 8d 53 10\n4c 8b 4b 18\nbe 63 3b 40 00\n4c 89 ff\n48 89 e9\n45 89 e0\ne8 57 00 00 00\n48 89 03\n48 85 c0\n74 19\n48 8b 3b\n4c 89 f6\ne8 c4 de ff ff\nff 43 14\n31 c0\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n48 89 ef\n44 89 e6\ne8 7b eb ff ff\n48 8b 3d b4 31 20 00\n49 8b 17\nbe 46 40 40 00\n31 c0\ne8 d5 df ff ff\nb8 ff ff ff ff\neb cf\n'
p285
S'.text:0000000000402fa0\n.text:0000000000402fa1\n.text:0000000000402fa3\n.text:0000000000402fa5\n.text:0000000000402fa7\n.text:0000000000402fa8\n.text:0000000000402fab\n.text:0000000000402fae\n.text:0000000000402fb1\n.text:0000000000402fb4\n.text:0000000000402fb8\n.text:0000000000402fba\n.text:0000000000402fbe\n.text:0000000000402fc2\n.text:0000000000402fc6\n.text:0000000000402fcb\n.text:0000000000402fce\n.text:0000000000402fd1\n.text:0000000000402fd4\n.text:0000000000402fd9\n.text:0000000000402fdc\n.text:0000000000402fdf\n.text:0000000000402fe1\n.text:0000000000402fe4\n.text:0000000000402fe7\n.text:0000000000402fec\n.text:0000000000402fef\n.text:0000000000402ff1\n.text:0000000000402ff2\n.text:0000000000402ff4\n.text:0000000000402ff6\n.text:0000000000402ff8\n.text:0000000000402ff9\n.text:0000000000402ffa\n.text:0000000000402ffd\n.text:0000000000403000\n.text:0000000000403005\n.text:000000000040300c\n.text:000000000040300f\n.text:0000000000403014\n.text:0000000000403016\n.text:000000000040301b\n.text:0000000000403020\n'
p286
tp287
sS'IceLockAuthFile'
p288
(S'\n__stdcall IceLockAuthFile()\n'
p289
V\u000avoid IceLockAuthFile(void)\u000a\u000a{\u000a  (*(code *)PTR_IceLockAuthFile_00606068)();\u000a  return;\u000a}\u000a\u000a
p290
S'JMP qword ptr [0x00606068]\n'
p291
S'ff 25 62 51 20 00\n'
p292
S'.plt:0000000000400f00\n'
p293
tp294
sS'split_into_words'
p295
(S'\n__stdcall split_into_words(char * src, int * argcp)\n'
p296
V\u000achar ** split_into_words(char *src,int *argcp)\u000a\u000a{\u000a  char cVar1;\u000a  ulong uVar2;\u000a  char *s;\u000a  char *pcVar3;\u000a  ulong uVar4;\u000a  char **ppcVar5;\u000a  uint local_44;\u000a  char **local_40;\u000a  \u000a  *argcp = 0;\u000a  ppcVar5 = (char **)malloc(0x20);\u000a  if (ppcVar5 == (char **)0x0) {\u000aLAB_004033af:\u000a    ppcVar5 = (char **)0x0;\u000a  }\u000a  else {\u000a    local_44 = 4;\u000a    uVar2 = 0;\u000a    local_40 = ppcVar5;\u000a    do {\u000a      uVar4 = uVar2;\u000a      s = skip_space(src);\u000a      pcVar3 = skip_nonspace(s);\u000a      cVar1 = *pcVar3;\u000a      *pcVar3 = 0;\u000a      if (uVar4 == (ulong)local_44) {\u000a        ppcVar5 = (char **)realloc(local_40,(long)(int)local_44 * 8 + 0x20);\u000a        if (ppcVar5 == (char **)0x0) {\u000a          free(local_40);\u000a          goto LAB_004033af;\u000a        }\u000a        local_44 = local_44 + 4;\u000a        local_40 = ppcVar5;\u000a      }\u000a      ppcVar5[uVar4] = s;\u000a      src = pcVar3 + 1;\u000a      if (cVar1 == 0) {\u000a        src = pcVar3;\u000a      }\u000a      uVar2 = uVar4 + 1;\u000a    } while (s != src);\u000a    ppcVar5[uVar4] = (char *)0x0;\u000a    *argcp = (int)(uVar4 + 1) + -1;\u000a  }\u000a  return ppcVar5;\u000a}\u000a\u000a
p297
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RSI\nMOV RBP,RDI\nMOV dword ptr [RBX],0x0\nMOV EDI,0x20\nCALL 0x00401020\nTEST RAX,RAX\nJZ 0x004033af\nMOV qword ptr [RSP + 0x10],RBX\nMOV dword ptr [RSP + 0x4],0x4\nXOR EDX,EDX\nMOV qword ptr [RSP + 0x8],RAX\nMOV R14,RAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV R15,RDX\nMOV RDI,RBP\nCALL 0x004033d0\nMOV R13,RAX\nMOV RDI,R13\nCALL 0x00403420\nMOV RBX,RAX\nMOVZX R12D,byte ptr [RBX]\nMOV byte ptr [RBX],0x0\nMOV ECX,dword ptr [RSP + 0x4]\nMOV EAX,ECX\nCMP R15,RAX\nJNZ 0x0040337c\nMOVSXD RAX,ECX\nLEA RSI,[0x20 + RAX*0x8]\nMOV RBP,qword ptr [RSP + 0x8]\nMOV RDI,RBP\nMOV R14D,ECX\nCALL 0x00401050\nTEST RAX,RAX\nJZ 0x004033a7\nADD R14D,0x4\nMOV dword ptr [RSP + 0x4],R14D\nMOV qword ptr [RSP + 0x8],RAX\nMOV R14,RAX\nLEA RDX,[R15 + 0x1]\nMOV qword ptr [R14 + R15*0x8],R13\nLEA RBP,[RBX + 0x1]\nTEST R12B,R12B\nCMOVZ RBP,RBX\nCMP R13,RBP\nJNZ 0x00403320\nDEC EDX\nMOV qword ptr [R14 + R15*0x8],0x0\nMOV RCX,qword ptr [RSP + 0x10]\nMOV dword ptr [RCX],EDX\nJMP 0x004033b2\nMOV RDI,RBP\nCALL 0x00400e60\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p298
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n48 89 f3\n48 89 fd\nc7 03 00 00 00 00\nbf 20 00 00 00\ne8 2c dd ff ff\n48 85 c0\n0f 84 b2 00 00 00\n48 89 5c 24 10\nc7 44 24 04 04 00 00 00\n31 d2\n48 89 44 24 08\n49 89 c6\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 89 d7\n48 89 ef\ne8 a5 00 00 00\n49 89 c5\n4c 89 ef\ne8 ea 00 00 00\n48 89 c3\n44 0f b6 23\nc6 03 00\n8b 4c 24 04\n89 c8\n49 39 c7\n75 31\n48 63 c1\n48 8d 34 c5 20 00 00 00\n48 8b 6c 24 08\n48 89 ef\n41 89 ce\ne8 ea dc ff ff\n48 85 c0\n74 3c\n41 83 c6 04\n44 89 74 24 04\n48 89 44 24 08\n49 89 c6\n49 8d 57 01\n4f 89 2c fe\n48 8d 6b 01\n45 84 e4\n48 0f 44 eb\n49 39 ed\n75 8c\nff ca\n4b c7 04 fe 00 00 00 00\n48 8b 4c 24 10\n89 11\neb 0b\n48 89 ef\ne8 b1 da ff ff\n45 31 f6\n4c 89 f0\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p299
S'.text:00000000004032d0\n.text:00000000004032d1\n.text:00000000004032d3\n.text:00000000004032d5\n.text:00000000004032d7\n.text:00000000004032d9\n.text:00000000004032da\n.text:00000000004032de\n.text:00000000004032e1\n.text:00000000004032e4\n.text:00000000004032ea\n.text:00000000004032ef\n.text:00000000004032f4\n.text:00000000004032f7\n.text:00000000004032fd\n.text:0000000000403302\n.text:000000000040330a\n.text:000000000040330c\n.text:0000000000403311\n.text:0000000000403314\n.text:0000000000403320\n.text:0000000000403323\n.text:0000000000403326\n.text:000000000040332b\n.text:000000000040332e\n.text:0000000000403331\n.text:0000000000403336\n.text:0000000000403339\n.text:000000000040333d\n.text:0000000000403340\n.text:0000000000403344\n.text:0000000000403346\n.text:0000000000403349\n.text:000000000040334b\n.text:000000000040334e\n.text:0000000000403356\n.text:000000000040335b\n.text:000000000040335e\n.text:0000000000403361\n.text:0000000000403366\n.text:0000000000403369\n.text:000000000040336b\n.text:000000000040336f\n.text:0000000000403374\n.text:0000000000403379\n.text:000000000040337c\n.text:0000000000403380\n.text:0000000000403384\n.text:0000000000403388\n.text:000000000040338b\n.text:000000000040338f\n.text:0000000000403392\n.text:0000000000403394\n.text:0000000000403396\n.text:000000000040339e\n.text:00000000004033a3\n.text:00000000004033a5\n.text:00000000004033a7\n.text:00000000004033aa\n.text:00000000004033af\n.text:00000000004033b2\n.text:00000000004033b5\n.text:00000000004033b9\n.text:00000000004033ba\n.text:00000000004033bc\n.text:00000000004033be\n.text:00000000004033c0\n.text:00000000004033c2\n.text:00000000004033c3\n'
p300
tp301
sS'dispatch_command'
p302
(S'\n__stdcall dispatch_command()\n'
p303
V\u000aint dispatch_command(void)\u000a\u000a{\u000a  char *__s;\u000a  int iVar1;\u000a  undefined4 uVar2;\u000a  size_t __n;\u000a  char **in_RCX;\u000a  char *__s2;\u000a  undefined4 *in_R8;\u000a  uint *puVar3;\u000a  \u000a  __s = *in_RCX;\u000a  __n = strlen(__s);\u000a  __s2 = "add";\u000a  puVar3 = &command_table[0].minlen;\u000a  do {\u000a    if (((ulong)*puVar3 <= __n) && (__n <= (ulong)puVar3[1])) {\u000a      iVar1 = strncmp(__s,__s2,__n);\u000a      if (iVar1 == 0) {\u000a        uVar2 = (**(code **)(puVar3 + 2))();\u000a        iVar1 = 1;\u000a        goto LAB_00401b62;\u000a      }\u000a    }\u000a    __s2 = *(char **)(puVar3 + 6);\u000a    puVar3 = puVar3 + 8;\u000a  } while (__s2 != (char *)0x0);\u000a  iVar1 = 0;\u000a  uVar2 = 1;\u000aLAB_00401b62:\u000a  *in_R8 = uVar2;\u000a  return iVar1;\u000a}\u000a\u000a
p304
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R8\nMOV RBX,RCX\nMOV dword ptr [RSP + 0x4],EDX\nMOV dword ptr [RSP],ESI\nMOV R13,RDI\nMOV RBP,qword ptr [RBX]\nMOV RDI,RBP\nCALL 0x00400f50\nMOV R15,RAX\nMOV ESI,0x403b89\nMOV R12D,0x4045a8\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EAX,dword ptr [R12]\nCMP R15,RAX\nJC 0x00401b32\nMOV EAX,dword ptr [R12 + 0x4]\nCMP R15,RAX\nJA 0x00401b32\nMOV RDI,RBP\nMOV RDX,R15\nCALL 0x00400ea0\nTEST EAX,EAX\nJZ 0x00401b49\nMOV RSI,qword ptr [R12 + 0x18]\nADD R12,0x20\nTEST RSI,RSI\nJNZ 0x00401b10\nXOR EAX,EAX\nMOV ECX,0x1\nJMP 0x00401b62\nMOV RDI,R13\nMOV ESI,dword ptr [RSP]\nMOV EDX,dword ptr [RSP + 0x4]\nMOV RCX,RBX\nCALL qword ptr [R12 + 0x8]\nMOV ECX,EAX\nMOV EAX,0x1\nMOV dword ptr [R14],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p305
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 c6\n48 89 cb\n89 54 24 04\n89 34 24\n49 89 fd\n48 8b 2b\n48 89 ef\ne8 5a f4 ff ff\n49 89 c7\nbe 89 3b 40 00\n41 bc a8 45 40 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n41 8b 04 24\n49 39 c7\n72 19\n41 8b 44 24 04\n49 39 c7\n77 0f\n48 89 ef\n4c 89 fa\ne8 72 f3 ff ff\n85 c0\n74 17\n49 8b 74 24 18\n49 83 c4 20\n48 85 f6\n75 d0\n31 c0\nb9 01 00 00 00\neb 19\n4c 89 ef\n8b 34 24\n8b 54 24 04\n48 89 d9\n41 ff 54 24 08\n89 c1\nb8 01 00 00 00\n41 89 0e\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p306
S'.text:0000000000401ad0\n.text:0000000000401ad1\n.text:0000000000401ad3\n.text:0000000000401ad5\n.text:0000000000401ad7\n.text:0000000000401ad9\n.text:0000000000401ada\n.text:0000000000401adb\n.text:0000000000401ade\n.text:0000000000401ae1\n.text:0000000000401ae5\n.text:0000000000401ae8\n.text:0000000000401aeb\n.text:0000000000401aee\n.text:0000000000401af1\n.text:0000000000401af6\n.text:0000000000401af9\n.text:0000000000401afe\n.text:0000000000401b04\n.text:0000000000401b10\n.text:0000000000401b14\n.text:0000000000401b17\n.text:0000000000401b19\n.text:0000000000401b1e\n.text:0000000000401b21\n.text:0000000000401b23\n.text:0000000000401b26\n.text:0000000000401b29\n.text:0000000000401b2e\n.text:0000000000401b30\n.text:0000000000401b32\n.text:0000000000401b37\n.text:0000000000401b3b\n.text:0000000000401b3e\n.text:0000000000401b40\n.text:0000000000401b42\n.text:0000000000401b47\n.text:0000000000401b49\n.text:0000000000401b4c\n.text:0000000000401b4f\n.text:0000000000401b53\n.text:0000000000401b56\n.text:0000000000401b5b\n.text:0000000000401b5d\n.text:0000000000401b62\n.text:0000000000401b65\n.text:0000000000401b69\n.text:0000000000401b6a\n.text:0000000000401b6c\n.text:0000000000401b6e\n.text:0000000000401b70\n.text:0000000000401b72\n.text:0000000000401b73\n'
p307
tp308
sS'umask'
p309
(S'\n__stdcall umask(__mode_t __mask)\n'
p310
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__mode_t umask(__mode_t __mask)\u000a\u000a{\u000a  __mode_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_umask_006060e8)();\u000a  return _Var1;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x006060e8]\n'
p312
S'ff 25 e2 50 20 00\n'
p313
S'.plt:0000000000401000\n'
p314
tp315
sS'__ctype_b_loc'
p316
(S'\n__stdcall __ctype_b_loc()\n'
p317
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00606150)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x00606150]\n'
p319
S'ff 25 7a 50 20 00\n'
p320
S'.plt:00000000004010d0\n'
p321
tp322
sS'auth_finalize'
p323
(S'\n__stdcall auth_finalize()\n'
p324
V\u000aint auth_finalize(void)\u000a\u000a{\u000a  int iVar1;\u000a  size_t __n;\u000a  char *pcVar2;\u000a  char *__format;\u000a  char temp_name [1024];\u000a  char local_408 [1024];\u000a  \u000a  if (iceauth_modified == 1) {\u000a    if (dieing == 0) {\u000a      if (iceauth_allowed == 1) {\u000a        __format = "%s:  %s not writable, changes ignored\u005cn";\u000a        pcVar2 = iceauth_filename;\u000a      }\u000a      else {\u000a        if (verbose != 0) {\u000a          __format = "Writing";\u000a          if (ignore_locks != 0) {\u000a            __format = "Ignoring locks and writing";\u000a          }\u000a          printf("%s authority file %s\u005cn",__format,iceauth_filename);\u000a        }\u000a        local_408[0] = 0;\u000a        iVar1 = write_auth_file();\u000a        if (iVar1 != -1) {\u000a          unlink(iceauth_filename);\u000a          iVar1 = link(local_408,iceauth_filename);\u000a          if ((iVar1 == -1) && (iVar1 = rename(local_408,iceauth_filename), iVar1 == -1)) {\u000a            fprintf(stderr,"%s:  unable to link authority file %s, use %s\u005cn",ProgramName,\u000a                    iceauth_filename,local_408);\u000a          }\u000a          else {\u000a            unlink(local_408);\u000a          }\u000a          goto joined_r0x00401943;\u000a        }\u000a        __format = "%s:  unable to write authority file %s\u005cn";\u000a        pcVar2 = local_408;\u000a      }\u000a      fprintf(stderr,__format,ProgramName,pcVar2);\u000a    }\u000a    else {\u000a      if (verbose != 0) {\u000a        write(2,"\u005cnAborting changes to authority file ",0x24);\u000a        __format = iceauth_filename;\u000a        __n = strlen(iceauth_filename);\u000a        write(2,__format,__n);\u000a        write(2,&DAT_00403b1b,1);\u000a      }\u000a    }\u000a  }\u000ajoined_r0x00401943:\u000a  if ((ignore_locks == 0) && (iceauth_filename != (char *)0x0)) {\u000a    IceUnlockAuthFile();\u000a  }\u000a  umask(original_umask);\u000a  return 0;\u000a}\u000a\u000a
p325
S'PUSH RBX\nSUB RSP,0x400\nCMP byte ptr [0x00606200],0x1\nJNZ 0x004018d3\nCMP dword ptr [0x00606204],0x0\nJZ 0x00401844\nCMP dword ptr [0x00606170],0x0\nJZ 0x004018d3\nMOV EDI,0x2\nMOV ESI,0x403a3c\nMOV EDX,0x24\nCALL 0x00400f20\nMOV RBX,qword ptr [0x006061e0]\nMOV RDI,RBX\nCALL 0x00400f50\nMOV EDI,0x2\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x00400f20\nMOV EDI,0x2\nMOV ESI,0x403b1b\nMOV EDX,0x1\nCALL 0x00400f20\nCMP dword ptr [0x006061d0],0x0\nJZ 0x004018dc\nJMP 0x004018ed\nCMP byte ptr [0x006061e8],0x1\nJZ 0x00401903\nCMP dword ptr [0x00606170],0x0\nJZ 0x00401882\nCMP dword ptr [0x006061d0],0x0\nMOV EAX,0x403a88\nMOV ESI,0x403aa3\nCMOVNZ RSI,RAX\nMOV RDX,qword ptr [0x006061e0]\nMOV EDI,0x403a0e\nXOR EAX,EAX\nCALL 0x00400f60\nMOV byte ptr [RSP],0x0\nMOV RDI,RSP\nCALL 0x00401980\nCMP EAX,-0x1\nJZ 0x0040191f\nMOV RDI,qword ptr [0x006061e0]\nCALL 0x00400e80\nMOV RSI,qword ptr [0x006061e0]\nMOV RDI,RSP\nCALL 0x00401090\nCMP EAX,-0x1\nJNZ 0x004018cb\nMOV RSI,qword ptr [0x006061e0]\nMOV RDI,RSP\nCALL 0x00401080\nCMP EAX,-0x1\nJZ 0x00401947\nMOV RDI,RSP\nCALL 0x00400e80\nCMP dword ptr [0x006061d0],0x0\nJNZ 0x004018ed\nMOV RDI,qword ptr [0x006061e0]\nTEST RDI,RDI\nJZ 0x004018ed\nCALL 0x00400f10\nMOV EDI,dword ptr [0x006061ec]\nCALL 0x00401000\nXOR EAX,EAX\nADD RSP,0x400\nPOP RBX\nRET\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV RCX,qword ptr [0x006061e0]\nMOV ESI,0x403a61\nJMP 0x00401935\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV RCX,RSP\nMOV ESI,0x403aab\nXOR EAX,EAX\nCALL 0x00400ff0\nCMP dword ptr [0x006061d0],0x0\nJZ 0x004018dc\nJMP 0x004018ed\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV RCX,qword ptr [0x006061e0]\nMOV R8,RSP\nMOV ESI,0x403ad3\nXOR EAX,EAX\nCALL 0x00400ff0\nCMP dword ptr [0x006061d0],0x0\nJZ 0x004018dc\nJMP 0x004018ed\n'
p326
S'53\n48 81 ec 00 04 00 00\n80 3d 31 4a 20 00 01\n0f 85 fe 00 00 00\n83 3d 28 4a 20 00 00\n74 66\n83 3d 8b 49 20 00 00\n0f 84 e8 00 00 00\nbf 02 00 00 00\nbe 3c 3a 40 00\nba 24 00 00 00\ne8 21 f7 ff ff\n48 8b 1d da 49 20 00\n48 89 df\ne8 42 f7 ff ff\nbf 02 00 00 00\n48 89 de\n48 89 c2\ne8 02 f7 ff ff\nbf 02 00 00 00\nbe 1b 3b 40 00\nba 01 00 00 00\ne8 ee f6 ff ff\n83 3d 97 49 20 00 00\n0f 84 9d 00 00 00\ne9 a9 00 00 00\n80 3d 9d 49 20 00 01\n0f 84 b2 00 00 00\n83 3d 18 49 20 00 00\n74 28\n83 3d 6f 49 20 00 00\nb8 88 3a 40 00\nbe a3 3a 40 00\n48 0f 45 f0\n48 8b 15 6a 49 20 00\nbf 0e 3a 40 00\n31 c0\ne8 de f6 ff ff\nc6 04 24 00\n48 89 e7\ne8 f2 00 00 00\n83 f8 ff\n0f 84 88 00 00 00\n48 8b 3d 42 49 20 00\ne8 dd f5 ff ff\n48 8b 35 36 49 20 00\n48 89 e7\ne8 de f7 ff ff\n83 f8 ff\n75 14\n48 8b 35 22 49 20 00\n48 89 e7\ne8 ba f7 ff ff\n83 f8 ff\n74 7c\n48 89 e7\ne8 ad f5 ff ff\n83 3d f6 48 20 00 00\n75 11\n48 8b 3d fd 48 20 00\n48 85 ff\n74 05\ne8 23 f6 ff ff\n8b 3d f9 48 20 00\ne8 08 f7 ff ff\n31 c0\n48 81 c4 00 04 00 00\n5b\nc3\n48 8b 3d b6 48 20 00\n48 8b 15 ff 48 20 00\n48 8b 0d c8 48 20 00\nbe 61 3a 40 00\neb 16\n48 8b 3d 9a 48 20 00\n48 8b 15 e3 48 20 00\n48 89 e1\nbe ab 3a 40 00\n31 c0\ne8 b4 f6 ff ff\n83 3d 8d 48 20 00 00\n74 97\neb a6\n48 8b 3d 72 48 20 00\n48 8b 15 bb 48 20 00\n48 8b 0d 84 48 20 00\n49 89 e0\nbe d3 3a 40 00\n31 c0\ne8 85 f6 ff ff\n83 3d 5e 48 20 00 00\n0f 84 64 ff ff ff\ne9 70 ff ff ff\n'
p327
S'.text:00000000004017c0\n.text:00000000004017c1\n.text:00000000004017c8\n.text:00000000004017cf\n.text:00000000004017d5\n.text:00000000004017dc\n.text:00000000004017de\n.text:00000000004017e5\n.text:00000000004017eb\n.text:00000000004017f0\n.text:00000000004017f5\n.text:00000000004017fa\n.text:00000000004017ff\n.text:0000000000401806\n.text:0000000000401809\n.text:000000000040180e\n.text:0000000000401813\n.text:0000000000401816\n.text:0000000000401819\n.text:000000000040181e\n.text:0000000000401823\n.text:0000000000401828\n.text:000000000040182d\n.text:0000000000401832\n.text:0000000000401839\n.text:000000000040183f\n.text:0000000000401844\n.text:000000000040184b\n.text:0000000000401851\n.text:0000000000401858\n.text:000000000040185a\n.text:0000000000401861\n.text:0000000000401866\n.text:000000000040186b\n.text:000000000040186f\n.text:0000000000401876\n.text:000000000040187b\n.text:000000000040187d\n.text:0000000000401882\n.text:0000000000401886\n.text:0000000000401889\n.text:000000000040188e\n.text:0000000000401891\n.text:0000000000401897\n.text:000000000040189e\n.text:00000000004018a3\n.text:00000000004018aa\n.text:00000000004018ad\n.text:00000000004018b2\n.text:00000000004018b5\n.text:00000000004018b7\n.text:00000000004018be\n.text:00000000004018c1\n.text:00000000004018c6\n.text:00000000004018c9\n.text:00000000004018cb\n.text:00000000004018ce\n.text:00000000004018d3\n.text:00000000004018da\n.text:00000000004018dc\n.text:00000000004018e3\n.text:00000000004018e6\n.text:00000000004018e8\n.text:00000000004018ed\n.text:00000000004018f3\n.text:00000000004018f8\n.text:00000000004018fa\n.text:0000000000401901\n.text:0000000000401902\n.text:0000000000401903\n.text:000000000040190a\n.text:0000000000401911\n.text:0000000000401918\n.text:000000000040191d\n.text:000000000040191f\n.text:0000000000401926\n.text:000000000040192d\n.text:0000000000401930\n.text:0000000000401935\n.text:0000000000401937\n.text:000000000040193c\n.text:0000000000401943\n.text:0000000000401945\n.text:0000000000401947\n.text:000000000040194e\n.text:0000000000401955\n.text:000000000040195c\n.text:000000000040195f\n.text:0000000000401964\n.text:0000000000401966\n.text:000000000040196b\n.text:0000000000401972\n.text:0000000000401978\n'
p328
tp329
sS'access'
p330
(S'\n__stdcall access(char * __name, int __type)\n'
p331
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint access(char *__name,int __type)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_access_00606118)();\u000a  return iVar1;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x00606118]\n'
p333
S'ff 25 b2 50 20 00\n'
p334
S'.plt:0000000000401060\n'
p335
tp336
sS'_start'
p337
(S'\n__stdcall _start()\n'
p338
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00605ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p339
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4034e0\nMOV RCX,0x403470\nMOV RDI,0x4011e0\nCALL qword ptr [0x00605ff0]\nHLT\n'
p340
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 e0 34 40 00\n48 c7 c1 70 34 40 00\n48 c7 c7 e0 11 40 00\nff 15 e6 4e 20 00\nf4\n'
p341
S'.text:00000000004010e0\n.text:00000000004010e2\n.text:00000000004010e5\n.text:00000000004010e6\n.text:00000000004010e9\n.text:00000000004010ed\n.text:00000000004010ee\n.text:00000000004010ef\n.text:00000000004010f6\n.text:00000000004010fd\n.text:0000000000401104\n.text:000000000040110a\n'
p342
tp343
sS'IceAuthFileName'
p344
(S'\n__stdcall IceAuthFileName()\n'
p345
V\u000avoid IceAuthFileName(void)\u000a\u000a{\u000a  (*(code *)PTR_IceAuthFileName_006060b0)();\u000a  return;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x006060b0]\n'
p347
S'ff 25 1a 51 20 00\n'
p348
S'.plt:0000000000400f90\n'
p349
tp350
sS'register_signals'
p351
(S'\n__stdcall register_signals()\n'
p352
V\u000avoid register_signals(void)\u000a\u000a{\u000a  signal(2,catchsig);\u000a  signal(0xf,catchsig);\u000a  signal(1,catchsig);\u000a  return;\u000a}\u000a\u000a
p353
S'PUSH RAX\nMOV EDI,0x2\nMOV ESI,0x401c60\nCALL 0x00400fe0\nMOV EDI,0xf\nMOV ESI,0x401c60\nCALL 0x00400fe0\nMOV EDI,0x1\nMOV ESI,0x401c60\nPOP RAX\nJMP 0x00400fe0\n'
p354
S'50\nbf 02 00 00 00\nbe 60 1c 40 00\ne8 20 f9 ff ff\nbf 0f 00 00 00\nbe 60 1c 40 00\ne8 11 f9 ff ff\nbf 01 00 00 00\nbe 60 1c 40 00\n58\ne9 01 f9 ff ff\n'
p355
S'.text:00000000004016b0\n.text:00000000004016b1\n.text:00000000004016b6\n.text:00000000004016bb\n.text:00000000004016c0\n.text:00000000004016c5\n.text:00000000004016ca\n.text:00000000004016cf\n.text:00000000004016d4\n.text:00000000004016d9\n.text:00000000004016da\n'
p356
tp357
sS'match_auth'
p358
(S'\n__stdcall match_auth(IceAuthFileEntry * a, IceAuthFileEntry * b, int * authDataSame)\n'
p359
V\u000aint match_auth(IceAuthFileEntry *a,IceAuthFileEntry *b,int *authDataSame)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  \u000a  iVar1 = strcmp(a->protocol_name,b->protocol_name);\u000a  uVar2 = 0;\u000a  if (iVar1 == 0) {\u000a    iVar1 = strcmp(a->network_id,b->network_id);\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcmp(a->auth_name,b->auth_name);\u000a      uVar3 = (uint)(iVar1 == 0);\u000a      if (iVar1 == 0) {\u000a        if (a->auth_data_length == b->auth_data_length) {\u000a          iVar1 = binaryEqual(a->auth_data,b->auth_data);\u000a          bVar4 = iVar1 != 0;\u000a        }\u000a        else {\u000a          bVar4 = false;\u000a        }\u000a        uVar2 = (uint)bVar4;\u000a      }\u000a    }\u000a    else {\u000a      uVar3 = 0;\u000a    }\u000a  }\u000a  else {\u000a    uVar3 = 0;\u000a  }\u000a  *authDataSame = uVar2;\u000a  return (int)uVar3;\u000a}\u000a\u000a
p360
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV RBP,RDI\nMOV RDI,qword ptr [RBP]\nMOV RSI,qword ptr [RBX]\nCALL 0x00400fd0\nXOR R12D,R12D\nTEST EAX,EAX\nJZ 0x00402cc9\nXOR R15D,R15D\nJMP 0x00402d1b\nMOV RDI,qword ptr [RBP + 0x18]\nMOV RSI,qword ptr [RBX + 0x18]\nCALL 0x00400fd0\nTEST EAX,EAX\nJZ 0x00402cdf\nXOR R15D,R15D\nJMP 0x00402d1b\nMOV RDI,qword ptr [RBP + 0x20]\nMOV RSI,qword ptr [RBX + 0x20]\nCALL 0x00400fd0\nXOR R15D,R15D\nTEST EAX,EAX\nSETZ R15B\nJNZ 0x00402d1b\nMOVZX EDX,word ptr [RBP + 0x28]\nCMP DX,word ptr [RBX + 0x28]\nJNZ 0x00402d15\nMOV RDI,qword ptr [RBP + 0x30]\nMOV RSI,qword ptr [RBX + 0x30]\nCALL 0x00402d30\nTEST EAX,EAX\nSETNZ AL\nJMP 0x00402d17\nXOR EAX,EAX\nMOVZX R12D,AL\nMOV dword ptr [R14],R12D\nMOV EAX,R15D\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p361
S'55\n41 57\n41 56\n41 54\n53\n49 89 d6\n48 89 f3\n48 89 fd\n48 8b 7d 00\n48 8b 33\ne8 13 e3 ff ff\n45 31 e4\n85 c0\n74 05\n45 31 ff\neb 52\n48 8b 7d 18\n48 8b 73 18\ne8 fa e2 ff ff\n85 c0\n74 05\n45 31 ff\neb 3c\n48 8b 7d 20\n48 8b 73 20\ne8 e4 e2 ff ff\n45 31 ff\n85 c0\n41 0f 94 c7\n75 24\n0f b7 55 28\n66 3b 53 28\n75 14\n48 8b 7d 30\n48 8b 73 30\ne8 22 00 00 00\n85 c0\n0f 95 c0\neb 02\n31 c0\n44 0f b6 e0\n45 89 26\n44 89 f8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p362
S'.text:0000000000402ca0\n.text:0000000000402ca1\n.text:0000000000402ca3\n.text:0000000000402ca5\n.text:0000000000402ca7\n.text:0000000000402ca8\n.text:0000000000402cab\n.text:0000000000402cae\n.text:0000000000402cb1\n.text:0000000000402cb5\n.text:0000000000402cb8\n.text:0000000000402cbd\n.text:0000000000402cc0\n.text:0000000000402cc2\n.text:0000000000402cc4\n.text:0000000000402cc7\n.text:0000000000402cc9\n.text:0000000000402ccd\n.text:0000000000402cd1\n.text:0000000000402cd6\n.text:0000000000402cd8\n.text:0000000000402cda\n.text:0000000000402cdd\n.text:0000000000402cdf\n.text:0000000000402ce3\n.text:0000000000402ce7\n.text:0000000000402cec\n.text:0000000000402cef\n.text:0000000000402cf1\n.text:0000000000402cf5\n.text:0000000000402cf7\n.text:0000000000402cfb\n.text:0000000000402cff\n.text:0000000000402d01\n.text:0000000000402d05\n.text:0000000000402d09\n.text:0000000000402d0e\n.text:0000000000402d10\n.text:0000000000402d13\n.text:0000000000402d15\n.text:0000000000402d17\n.text:0000000000402d1b\n.text:0000000000402d1e\n.text:0000000000402d21\n.text:0000000000402d22\n.text:0000000000402d24\n.text:0000000000402d26\n.text:0000000000402d28\n.text:0000000000402d29\n'
p363
tp364
sS'fputc'
p365
(S'\n__stdcall fputc(int __c, FILE * __stream)\n'
p366
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_006060b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x006060b8]\n'
p368
S'ff 25 12 51 20 00\n'
p369
S'.plt:0000000000400fa0\n'
p370
tp371
sS'link'
p372
(S'\n__stdcall link(char * __from, char * __to)\n'
p373
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint link(char *__from,char *__to)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_link_00606130)();\u000a  return iVar1;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x00606130]\n'
p375
S'ff 25 9a 50 20 00\n'
p376
S'.plt:0000000000401090\n'
p377
tp378
sS'do_quit'
p379
(S'\n__stdcall do_quit(char * inputfilename, char * * argv)\n'
p380
V\u000aint do_quit(char *inputfilename,char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  char **in_RCX;\u000a  int extraout_EDX;\u000a  \u000a  die();\u000a  if (extraout_EDX < 2) {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a    iVar1 = 1;\u000a  }\u000a  else {\u000a    iVar1 = search_and_do(inputfilename,argv,(int (*)(char *,int,IceAuthFileEntry *,void *))0x1);\u000a    if (verbose != 0) {\u000a      printf("%d entries removed\u005cn",0);\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p381
S'PUSH RAX\nCALL 0x00401c90\nNOP word ptr CS:[RAX + RAX*0x1]\n'
p382
S'50\ne8 aa f6 ff ff\n66 2e 0f 1f 84 00 00 00 00 00\n'
p383
S'.text:00000000004025e0\n.text:00000000004025e1\n.text:00000000004025e6\n'
p384
tp385
sS'FUN_00400e50'
p386
(S'\n__stdcall FUN_00400e50()\n'
p387
V\u000avoid FUN_00400e50(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00606010)();\u000a  return;\u000a}\u000a\u000a
p388
S'PUSH qword ptr [0x00606008]\nJMP qword ptr [0x00606010]\n'
p389
S'ff 35 b2 51 20 00\nff 25 b4 51 20 00\n'
p390
S'.plt:0000000000400e50\n.plt:0000000000400e56\n'
p391
tp392
sS'printf'
p393
(S'\n__stdcall printf(char * __format)\n'
p394
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00606098)();\u000a  return iVar1;\u000a}\u000a\u000a
p395
S'JMP qword ptr [0x00606098]\n'
p396
S'ff 25 32 51 20 00\n'
p397
S'.plt:0000000000400f60\n'
p398
tp399
sS'deregister_tm_clones'
p400
(S'\n__stdcall deregister_tm_clones()\n'
p401
V\u000a/* WARNING: Removing unreachable block (ram,0x00401125) */\u000a/* WARNING: Removing unreachable block (ram,0x0040112f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p402
S'MOV EAX,0x60619f\nPUSH RBP\nSUB RAX,0x606198\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401140\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401140\nPOP RBP\nMOV EDI,0x606198\nJMP RAX\nPOP RBP\nRET\n'
p403
S'b8 9f 61 60 00\n55\n48 2d 98 61 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 98 61 60 00\nff e0\n5d\nc3\n'
p404
S'.text:0000000000401110\n.text:0000000000401115\n.text:0000000000401116\n.text:000000000040111c\n.text:0000000000401120\n.text:0000000000401123\n.text:0000000000401125\n.text:000000000040112a\n.text:000000000040112d\n.text:000000000040112f\n.text:0000000000401130\n.text:0000000000401135\n.text:0000000000401140\n.text:0000000000401141\n'
p405
tp406
sS'catchsig'
p407
(S'\n__stdcall catchsig()\n'
p408
V\u000avoid catchsig(void)\u000a\u000a{\u000a  if ((verbose != 0) && ((iceauth_modified & 1) != 0)) {\u000a    write(2,&DAT_00403b1d,2);\u000a  }\u000a  die();\u000a  dieing = 1;\u000a  auth_finalize();\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(0);\u000a}\u000a\u000a
p409
S'PUSH RAX\nCMP dword ptr [0x00606170],0x0\nJZ 0x00401c87\nTEST byte ptr [0x00606200],0x1\nJZ 0x00401c87\nMOV EDI,0x2\nMOV ESI,0x403b1d\nMOV EDX,0x2\nCALL 0x00400f20\nCALL 0x00401c90\nNOP dword ptr [RAX]\n'
p410
S'50\n83 3d 08 45 20 00 00\n74 1d\nf6 05 8f 45 20 00 01\n74 14\nbf 02 00 00 00\nbe 1d 3b 40 00\nba 02 00 00 00\ne8 99 f2 ff ff\ne8 04 00 00 00\n0f 1f 40 00\n'
p411
S'.text:0000000000401c60\n.text:0000000000401c61\n.text:0000000000401c68\n.text:0000000000401c6a\n.text:0000000000401c71\n.text:0000000000401c73\n.text:0000000000401c78\n.text:0000000000401c7d\n.text:0000000000401c82\n.text:0000000000401c87\n.text:0000000000401c8c\n'
p412
tp413
sS'print_help'
p414
(S'\n__stdcall print_help(FILE * fp, char * cmd)\n'
p415
V\u000aint print_help(FILE *fp,char *cmd)\u000a\u000a{\u000a  int iVar1;\u000a  size_t __n;\u000a  long lVar2;\u000a  CommandTable *pCVar3;\u000a  char *__s2;\u000a  int iVar4;\u000a  \u000a  fputc(10,(FILE *)fp);\u000a  if (cmd == (char *)0x0) {\u000a    lVar2 = 0;\u000a    do {\u000a      fprintf((FILE *)fp,"%s\u005cn\u005cn",*(undefined8 *)((long)&command_table[0].helptext + lVar2));\u000a      lVar2 = lVar2 + 0x20;\u000a    } while ((int)lVar2 != 0x160);\u000a    iVar4 = 0xb;\u000a  }\u000a  else {\u000a    __n = strlen(cmd);\u000a    __s2 = "add";\u000a    pCVar3 = command_table;\u000a    iVar4 = 0;\u000a    do {\u000a      pCVar3 = pCVar3 + 1;\u000a      iVar1 = strncmp(cmd,__s2,__n);\u000a      if (iVar1 == 0) {\u000a        fprintf((FILE *)fp,"%s\u005cn\u005cn",pCVar3[-1].helptext);\u000a        iVar4 = iVar4 + 1;\u000a      }\u000a      __s2 = pCVar3->name;\u000a    } while (__s2 != (char *)0x0);\u000a  }\u000a  return iVar4;\u000a}\u000a\u000a
p416
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV EDI,0xa\nMOV RSI,R14\nCALL 0x00400fa0\nTEST R15,R15\nJZ 0x00401c14\nMOV RDI,R15\nCALL 0x00400f50\nMOV RBX,RAX\nMOV ESI,0x403b89\nMOV EBP,0x4045c0\nXOR R12D,R12D\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,R15\nMOV RDX,RBX\nCALL 0x00400ea0\nTEST EAX,EAX\nJNZ 0x00401c05\nMOV RDX,qword ptr [RBP + -0x8]\nMOV ESI,0x403b18\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00400ff0\nINC R12D\nMOV RSI,qword ptr [RBP]\nADD RBP,0x20\nTEST RSI,RSI\nJNZ 0x00401be0\nJMP 0x00401c48\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDX,qword ptr [0x4045b8 + RBX]\nMOV ESI,0x403b18\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00400ff0\nADD RBX,0x20\nCMP EBX,0x160\nJNZ 0x00401c20\nMOV R12D,0xb\nMOV EAX,R12D\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p417
S'55\n41 57\n41 56\n41 54\n53\n49 89 f7\n49 89 fe\nbf 0a 00 00 00\n4c 89 f6\ne8 e5 f3 ff ff\n4d 85 ff\n74 54\n4c 89 ff\ne8 88 f3 ff ff\n48 89 c3\nbe 89 3b 40 00\nbd c0 45 40 00\n45 31 e4\n0f 1f 84 00 00 00 00 00\n4c 89 ff\n48 89 da\ne8 b5 f2 ff ff\n85 c0\n75 16\n48 8b 55 f8\nbe 18 3b 40 00\n31 c0\n4c 89 f7\ne8 ee f3 ff ff\n41 ff c4\n48 8b 75 00\n48 83 c5 20\n48 85 f6\n75 ce\neb 34\n31 db\n66 2e 0f 1f 84 00 00 00 00 00\n48 8b 93 b8 45 40 00\nbe 18 3b 40 00\n31 c0\n4c 89 f7\ne8 ba f3 ff ff\n48 83 c3 20\n81 fb 60 01 00 00\n75 de\n41 bc 0b 00 00 00\n44 89 e0\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p418
S'.text:0000000000401ba0\n.text:0000000000401ba1\n.text:0000000000401ba3\n.text:0000000000401ba5\n.text:0000000000401ba7\n.text:0000000000401ba8\n.text:0000000000401bab\n.text:0000000000401bae\n.text:0000000000401bb3\n.text:0000000000401bb6\n.text:0000000000401bbb\n.text:0000000000401bbe\n.text:0000000000401bc0\n.text:0000000000401bc3\n.text:0000000000401bc8\n.text:0000000000401bcb\n.text:0000000000401bd0\n.text:0000000000401bd5\n.text:0000000000401bd8\n.text:0000000000401be0\n.text:0000000000401be3\n.text:0000000000401be6\n.text:0000000000401beb\n.text:0000000000401bed\n.text:0000000000401bef\n.text:0000000000401bf3\n.text:0000000000401bf8\n.text:0000000000401bfa\n.text:0000000000401bfd\n.text:0000000000401c02\n.text:0000000000401c05\n.text:0000000000401c09\n.text:0000000000401c0d\n.text:0000000000401c10\n.text:0000000000401c12\n.text:0000000000401c14\n.text:0000000000401c16\n.text:0000000000401c20\n.text:0000000000401c27\n.text:0000000000401c2c\n.text:0000000000401c2e\n.text:0000000000401c31\n.text:0000000000401c36\n.text:0000000000401c3a\n.text:0000000000401c40\n.text:0000000000401c42\n.text:0000000000401c48\n.text:0000000000401c4b\n.text:0000000000401c4c\n.text:0000000000401c4e\n.text:0000000000401c50\n.text:0000000000401c52\n.text:0000000000401c53\n'
p419
tp420
sS'auth_initialize'
p421
(S'\n__stdcall auth_initialize(char * authfilename)\n'
p422
V\u000aint auth_initialize(char *authfilename)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  FILE *fp;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  AuthList *tail;\u000a  AuthList *local_28;\u000a  AuthList *local_20;\u000a  \u000a  register_signals();\u000a  if ((break_locks != 0) && (verbose != 0)) {\u000a    printf("Attempting to break locks on authority file %s\u005cn");\u000a  }\u000a  iceauth_filename = (char *)__strdup(authfilename);\u000a  if (ignore_locks == 0) {\u000a    uVar4 = 600;\u000a    if (break_locks != 0) {\u000a      uVar4 = 0;\u000a    }\u000a    iVar1 = IceLockAuthFile(authfilename,10,2,uVar4);\u000a    if (iVar1 != 0) {\u000a      if (iVar1 == 2) {\u000a        pcVar5 = "timeout";\u000a      }\u000a      else {\u000a        if (iVar1 == 1) {\u000a          pcVar5 = "error";\u000a        }\u000a        else {\u000a          pcVar5 = "unknown error";\u000a        }\u000a      }\u000a      fprintf(stderr,"%s:  %s in locking authority file %s\u005cn",ProgramName,pcVar5,authfilename);\u000a      return -1;\u000a    }\u000a  }\u000a  else {\u000a    if (break_locks != 0) {\u000a      IceUnlockAuthFile(authfilename);\u000a    }\u000a  }\u000a  iVar1 = access(authfilename,0);\u000a  if ((iVar1 == 0) && (iVar1 = access(authfilename,2), iVar1 != 0)) {\u000a    fprintf(stderr,"%s:  %s not writable, changes will be ignored\u005cn",ProgramName,authfilename);\u000a    iceauth_allowed = 1;\u000a  }\u000a  original_umask = umask(0x3f);\u000a  fp = (FILE *)fopen(authfilename,"rb");\u000a  if (fp == (FILE *)0x0) {\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    iVar2 = access(authfilename,0);\u000a    if (iVar2 == 0) {\u000a      *piVar3 = iVar1;\u000a      return -1;\u000a    }\u000a    fprintf(stderr,"%s:  creating new authority file %s\u005cn",ProgramName,authfilename);\u000a  }\u000a  else {\u000a    iceauth_existed = 1;\u000a    iVar1 = read_auth_entries(fp,&local_28,&local_20);\u000a    fclose((FILE *)fp);\u000a    if (iVar1 < 0) {\u000a      fprintf(stderr,"%s:  unable to read auth entries from file \u005c"%s\u005c"\u005cn",ProgramName,authfilename)\u000a      ;\u000a      return -1;\u000a    }\u000a    iceauth_head = local_28;\u000a  }\u000a  iceauth_modified = 0;\u000a  if (verbose != 0) {\u000a    pcVar5 = "Using";\u000a    if (ignore_locks != 0) {\u000a      pcVar5 = "Ignoring locks on";\u000a    }\u000a    printf("%s authority file %s\u005cn",pcVar5,authfilename);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p423
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV R14,RDI\nCALL 0x004016b0\nCMP dword ptr [0x006061d4],0x0\nJZ 0x004014c2\nMOV EAX,dword ptr [0x00606170]\nTEST EAX,EAX\nJZ 0x004014c2\nMOV EDI,0x40391a\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00400f60\nMOV RDI,R14\nCALL 0x00400fb0\nMOV qword ptr [0x006061e0],RAX\nCMP dword ptr [0x006061d0],0x0\nMOV EAX,dword ptr [0x006061d4]\nJZ 0x004014ee\nTEST EAX,EAX\nJZ 0x00401515\nMOV RDI,R14\nCALL 0x00400f10\nJMP 0x00401515\nXOR EDX,EDX\nTEST EAX,EAX\nMOV ECX,0x258\nCMOVNZ RCX,RDX\nMOV ESI,0xa\nMOV EDX,0x2\nMOV RDI,R14\nCALL 0x00400f00\nTEST EAX,EAX\nJNZ 0x00401619\nXOR ESI,ESI\nMOV RDI,R14\nCALL 0x00401060\nTEST EAX,EAX\nJNZ 0x00401538\nMOV ESI,0x2\nMOV RDI,R14\nCALL 0x00401060\nTEST EAX,EAX\nJNZ 0x0040162a\nMOV EDI,0x3f\nCALL 0x00401000\nMOV dword ptr [0x006061ec],EAX\nMOV ESI,0x4039b5\nMOV RDI,R14\nCALL 0x00401070\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004015c5\nMOV byte ptr [0x006061f0],0x1\nMOV RSI,RSP\nLEA RDX,[RSP + 0x8]\nMOV RDI,RBP\nCALL 0x004016e0\nMOV EBX,EAX\nMOV RDI,RBP\nCALL 0x00400f30\nTEST EBX,EBX\nJS 0x004015f5\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [0x006061f8],RAX\nMOV byte ptr [0x00606200],0x0\nCMP dword ptr [0x00606170],0x0\nJZ 0x004015e8\nCMP dword ptr [0x006061d0],0x0\nMOV EAX,0x403a24\nMOV ESI,0x403a36\nCMOVNZ RSI,RAX\nXOR EBP,EBP\nMOV EDI,0x403a0e\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00400f60\nJMP 0x004015ea\nCALL 0x00400e70\nMOV RBP,RAX\nMOV EBX,dword ptr [RBP]\nXOR ESI,ESI\nMOV RDI,R14\nCALL 0x00401060\nTEST EAX,EAX\nJNZ 0x00401653\nMOV dword ptr [RBP],EBX\nMOV EBP,0xffffffff\nJMP 0x004015ea\nXOR EBP,EBP\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP RBP\nRET\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x4039dd\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00400ff0\nMOV EBP,0xffffffff\nJMP 0x004015ea\nCMP EAX,0x2\nJZ 0x00401675\nCMP EAX,0x1\nJNZ 0x0040167c\nMOV ECX,0x403952\nJMP 0x00401681\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x403986\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00400ff0\nMOV byte ptr [0x006061e8],0x1\nJMP 0x00401538\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x4039b8\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00400ff0\nJMP 0x0040158d\nMOV ECX,0x403958\nJMP 0x00401681\nMOV ECX,0x40394a\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x403960\nXOR EAX,EAX\nMOV R8,R14\nCALL 0x00400ff0\nMOV EBP,0xffffffff\nJMP 0x004015ea\n'
p424
S'55\n41 56\n53\n48 83 ec 10\n49 89 fe\ne8 10 02 00 00\n83 3d 2d 4d 20 00 00\n74 19\n8b 05 c1 4c 20 00\n85 c0\n74 0f\nbf 1a 39 40 00\n31 c0\n4c 89 f6\ne8 9e fa ff ff\n4c 89 f7\ne8 e6 fa ff ff\n48 89 05 0f 4d 20 00\n83 3d f8 4c 20 00 00\n8b 05 f6 4c 20 00\n74 0e\n85 c0\n74 31\n4c 89 f7\ne8 24 fa ff ff\neb 27\n31 d2\n85 c0\nb9 58 02 00 00\n48 0f 45 ca\nbe 0a 00 00 00\nba 02 00 00 00\n4c 89 f7\ne8 f3 f9 ff ff\n85 c0\n0f 85 04 01 00 00\n31 f6\n4c 89 f7\ne8 41 fb ff ff\n85 c0\n75 15\nbe 02 00 00 00\n4c 89 f7\ne8 30 fb ff ff\n85 c0\n0f 85 f2 00 00 00\nbf 3f 00 00 00\ne8 be fa ff ff\n89 05 a4 4c 20 00\nbe b5 39 40 00\n4c 89 f7\ne8 1b fb ff ff\n48 89 c5\n48 85 ed\n74 68\nc6 05 8c 4c 20 00 01\n48 89 e6\n48 8d 54 24 08\n48 89 ef\ne8 6c 01 00 00\n89 c3\n48 89 ef\ne8 b2 f9 ff ff\n85 db\n78 73\n48 8b 04 24\n48 89 05 6b 4c 20 00\nc6 05 6c 4c 20 00 00\n83 3d d5 4b 20 00 00\n74 4b\n83 3d 2c 4c 20 00 00\nb8 24 3a 40 00\nbe 36 3a 40 00\n48 0f 45 f0\n31 ed\nbf 0e 3a 40 00\n31 c0\n4c 89 f2\ne8 9d f9 ff ff\neb 25\ne8 a6 f8 ff ff\n48 89 c5\n8b 5d 00\n31 f6\n4c 89 f7\ne8 86 fa ff ff\n85 c0\n75 75\n89 5d 00\nbd ff ff ff ff\neb 02\n31 ed\n89 e8\n48 83 c4 10\n5b\n41 5e\n5d\nc3\n48 8b 3d c4 4b 20 00\n48 8b 15 0d 4c 20 00\nbe dd 39 40 00\n31 c0\n4c 89 f1\ne8 de f9 ff ff\nbd ff ff ff ff\neb d1\n83 f8 02\n74 57\n83 f8 01\n75 59\nb9 52 39 40 00\neb 57\n48 8b 3d 8f 4b 20 00\n48 8b 15 d8 4b 20 00\nbe 86 39 40 00\n31 c0\n4c 89 f1\ne8 a9 f9 ff ff\nc6 05 9a 4b 20 00 01\ne9 e5 fe ff ff\n48 8b 3d 66 4b 20 00\n48 8b 15 af 4b 20 00\nbe b8 39 40 00\n31 c0\n4c 89 f1\ne8 80 f9 ff ff\ne9 18 ff ff ff\nb9 58 39 40 00\neb 05\nb9 4a 39 40 00\n48 8b 3d 38 4b 20 00\n48 8b 15 81 4b 20 00\nbe 60 39 40 00\n31 c0\n4d 89 f0\ne8 52 f9 ff ff\nbd ff ff ff ff\ne9 42 ff ff ff\n'
p425
S'.text:0000000000401490\n.text:0000000000401491\n.text:0000000000401493\n.text:0000000000401494\n.text:0000000000401498\n.text:000000000040149b\n.text:00000000004014a0\n.text:00000000004014a7\n.text:00000000004014a9\n.text:00000000004014af\n.text:00000000004014b1\n.text:00000000004014b3\n.text:00000000004014b8\n.text:00000000004014ba\n.text:00000000004014bd\n.text:00000000004014c2\n.text:00000000004014c5\n.text:00000000004014ca\n.text:00000000004014d1\n.text:00000000004014d8\n.text:00000000004014de\n.text:00000000004014e0\n.text:00000000004014e2\n.text:00000000004014e4\n.text:00000000004014e7\n.text:00000000004014ec\n.text:00000000004014ee\n.text:00000000004014f0\n.text:00000000004014f2\n.text:00000000004014f7\n.text:00000000004014fb\n.text:0000000000401500\n.text:0000000000401505\n.text:0000000000401508\n.text:000000000040150d\n.text:000000000040150f\n.text:0000000000401515\n.text:0000000000401517\n.text:000000000040151a\n.text:000000000040151f\n.text:0000000000401521\n.text:0000000000401523\n.text:0000000000401528\n.text:000000000040152b\n.text:0000000000401530\n.text:0000000000401532\n.text:0000000000401538\n.text:000000000040153d\n.text:0000000000401542\n.text:0000000000401548\n.text:000000000040154d\n.text:0000000000401550\n.text:0000000000401555\n.text:0000000000401558\n.text:000000000040155b\n.text:000000000040155d\n.text:0000000000401564\n.text:0000000000401567\n.text:000000000040156c\n.text:000000000040156f\n.text:0000000000401574\n.text:0000000000401576\n.text:0000000000401579\n.text:000000000040157e\n.text:0000000000401580\n.text:0000000000401582\n.text:0000000000401586\n.text:000000000040158d\n.text:0000000000401594\n.text:000000000040159b\n.text:000000000040159d\n.text:00000000004015a4\n.text:00000000004015a9\n.text:00000000004015ae\n.text:00000000004015b2\n.text:00000000004015b4\n.text:00000000004015b9\n.text:00000000004015bb\n.text:00000000004015be\n.text:00000000004015c3\n.text:00000000004015c5\n.text:00000000004015ca\n.text:00000000004015cd\n.text:00000000004015d0\n.text:00000000004015d2\n.text:00000000004015d5\n.text:00000000004015da\n.text:00000000004015dc\n.text:00000000004015de\n.text:00000000004015e1\n.text:00000000004015e6\n.text:00000000004015e8\n.text:00000000004015ea\n.text:00000000004015ec\n.text:00000000004015f0\n.text:00000000004015f1\n.text:00000000004015f3\n.text:00000000004015f4\n.text:00000000004015f5\n.text:00000000004015fc\n.text:0000000000401603\n.text:0000000000401608\n.text:000000000040160a\n.text:000000000040160d\n.text:0000000000401612\n.text:0000000000401617\n.text:0000000000401619\n.text:000000000040161c\n.text:000000000040161e\n.text:0000000000401621\n.text:0000000000401623\n.text:0000000000401628\n.text:000000000040162a\n.text:0000000000401631\n.text:0000000000401638\n.text:000000000040163d\n.text:000000000040163f\n.text:0000000000401642\n.text:0000000000401647\n.text:000000000040164e\n.text:0000000000401653\n.text:000000000040165a\n.text:0000000000401661\n.text:0000000000401666\n.text:0000000000401668\n.text:000000000040166b\n.text:0000000000401670\n.text:0000000000401675\n.text:000000000040167a\n.text:000000000040167c\n.text:0000000000401681\n.text:0000000000401688\n.text:000000000040168f\n.text:0000000000401694\n.text:0000000000401696\n.text:0000000000401699\n.text:000000000040169e\n.text:00000000004016a3\n'
p426
tp427
sS'do_extract'
p428
(S'\n__stdcall do_extract(char * inputfilename, char * * argv)\n'
p429
V\u000a/* WARNING: Removing unreachable block (ram,0x0040212d) */\u000a/* WARNING: Removing unreachable block (ram,0x00402136) */\u000a/* WARNING: Removing unreachable block (ram,0x0040214b) */\u000a/* WARNING: Removing unreachable block (ram,0x00402152) */\u000a\u000aint do_extract(char *inputfilename,char **argv)\u000a\u000a{\u000a  char *pcVar1;\u000a  int iVar2;\u000a  char **in_RCX;\u000a  int in_EDX;\u000a  \u000a  if (in_EDX < 3) {\u000a    prefix(inputfilename);\u000a    badcommandline(*in_RCX);\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    pcVar1 = in_RCX[1];\u000a    iVar2 = search_and_do(inputfilename,argv,(int (*)(char *,int,IceAuthFileEntry *,void *))0x2);\u000a    fprintf(stderr,"No matches found, authority file \u005c"%s\u005c" not written\u005cn",pcVar1);\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p430
S'PUSH RBX\nSUB RSP,0x30\nMOV RBX,RCX\nMOV EAX,EDX\nCMP EAX,0x2\nJG 0x004020e3\nCALL 0x00401b80\nMOV RDI,qword ptr [RBX]\nCALL 0x00402950\nMOV EBX,0x1\nJMP 0x0040215c\nMOV qword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RBX + 0x8]\nMOV qword ptr [RSP + 0x18],RCX\nMOV dword ptr [RSP + 0x24],0x0\nMOV RCX,qword ptr [RBX]\nMOV qword ptr [RSP + 0x28],RCX\nLEA RCX,[RSP + 0x10]\nMOV qword ptr [RSP],RCX\nMOV EDX,0x2\nMOV R9D,0x402fa0\nMOV ECX,EAX\nMOV R8,RBX\nCALL 0x00402d50\nMOV EBX,EAX\nCMP qword ptr [RSP + 0x10],0x0\nJZ 0x00402164\nCMP dword ptr [0x00606170],0x0\nJZ 0x0040214b\nMOV ESI,dword ptr [RSP + 0x24]\nMOV RDX,qword ptr [RSP + 0x18]\nMOV EDI,0x404003\nXOR EAX,EAX\nCALL 0x00400f60\nCMP dword ptr [RSP + 0x20],0x0\nJNZ 0x0040215c\nMOV RDI,qword ptr [RSP + 0x10]\nCALL 0x00400f30\nMOV EAX,EBX\nADD RSP,0x30\nPOP RBX\nRET\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [RSP + 0x18]\nMOV ESI,0x403fd0\nXOR EAX,EAX\nCALL 0x00400ff0\nJMP 0x0040215c\n'
p431
S'53\n48 83 ec 30\n48 89 cb\n89 d0\n83 f8 02\n7f 14\ne8 ac fa ff ff\n48 8b 3b\ne8 74 08 00 00\nbb 01 00 00 00\neb 79\n48 c7 44 24 10 00 00 00 00\n48 8b 4b 08\n48 89 4c 24 18\nc7 44 24 24 00 00 00 00\n48 8b 0b\n48 89 4c 24 28\n48 8d 4c 24 10\n48 89 0c 24\nba 02 00 00 00\n41 b9 a0 2f 40 00\n89 c1\n49 89 d8\ne8 2d 0c 00 00\n89 c3\n48 83 7c 24 10 00\n74 37\n83 3d 3c 40 20 00 00\n74 15\n8b 74 24 24\n48 8b 54 24 18\nbf 03 40 40 00\n31 c0\ne8 15 ee ff ff\n83 7c 24 20 00\n75 0a\n48 8b 7c 24 10\ne8 d4 ed ff ff\n89 d8\n48 83 c4 30\n5b\nc3\n48 8b 3d 55 40 20 00\n48 8b 54 24 18\nbe d0 3f 40 00\n31 c0\ne8 74 ee ff ff\neb de\n'
p432
S'.text:00000000004020c0\n.text:00000000004020c1\n.text:00000000004020c5\n.text:00000000004020c8\n.text:00000000004020ca\n.text:00000000004020cd\n.text:00000000004020cf\n.text:00000000004020d4\n.text:00000000004020d7\n.text:00000000004020dc\n.text:00000000004020e1\n.text:00000000004020e3\n.text:00000000004020ec\n.text:00000000004020f0\n.text:00000000004020f5\n.text:00000000004020fd\n.text:0000000000402100\n.text:0000000000402105\n.text:000000000040210a\n.text:000000000040210e\n.text:0000000000402113\n.text:0000000000402119\n.text:000000000040211b\n.text:000000000040211e\n.text:0000000000402123\n.text:0000000000402125\n.text:000000000040212b\n.text:000000000040212d\n.text:0000000000402134\n.text:0000000000402136\n.text:000000000040213a\n.text:000000000040213f\n.text:0000000000402144\n.text:0000000000402146\n.text:000000000040214b\n.text:0000000000402150\n.text:0000000000402152\n.text:0000000000402157\n.text:000000000040215c\n.text:000000000040215e\n.text:0000000000402162\n.text:0000000000402163\n.text:0000000000402164\n.text:000000000040216b\n.text:0000000000402170\n.text:0000000000402175\n.text:0000000000402177\n.text:000000000040217c\n'
p433
tp434
sS'fprintfhex'
p435
(S'\n__stdcall fprintfhex(FILE * fp, char * cp)\n'
p436
V\u000avoid fprintfhex(FILE *fp,char *cp)\u000a\u000a{\u000a  char *pcVar1;\u000a  byte *in_RDX;\u000a  uint uVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = (ulong)cp & 0xffffffff;\u000a  uVar2 = (uint)uVar3;\u000a  while (uVar2 != 0) {\u000a    pcVar1 = hex_table[(ulong)*in_RDX];\u000a    _IO_putc((int)*pcVar1,(_IO_FILE *)fp);\u000a    _IO_putc((int)pcVar1[1],(_IO_FILE *)fp);\u000a    in_RDX = in_RDX + 1;\u000a    uVar2 = (int)uVar3 - 1;\u000a    uVar3 = (ulong)uVar2;\u000a  }\u000a  return;\u000a}\u000a\u000a
p437
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDX\nMOV EBP,ESI\nMOV R14,RDI\nTEST EBP,EBP\nJZ 0x0040326b\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EAX,byte ptr [RBX]\nMOV R15,qword ptr [0x404730 + RAX*0x8]\nMOVSX EDI,byte ptr [R15]\nMOV RSI,R14\nCALL 0x00400f70\nMOVSX EDI,byte ptr [R15 + 0x1]\nMOV RSI,R14\nCALL 0x00400f70\nINC RBX\nDEC EBP\nJNZ 0x00403240\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p438
S'55\n41 57\n41 56\n53\n50\n48 89 d3\n89 f5\n49 89 fe\n85 ed\n74 38\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 03\n4c 8b 3c c5 30 47 40 00\n41 0f be 3f\n4c 89 f6\ne8 19 dd ff ff\n41 0f be 7f 01\n4c 89 f6\ne8 0c dd ff ff\n48 ff c3\nff cd\n75 d5\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p439
S'.text:0000000000403220\n.text:0000000000403221\n.text:0000000000403223\n.text:0000000000403225\n.text:0000000000403226\n.text:0000000000403227\n.text:000000000040322a\n.text:000000000040322c\n.text:000000000040322f\n.text:0000000000403231\n.text:0000000000403233\n.text:0000000000403240\n.text:0000000000403243\n.text:000000000040324b\n.text:000000000040324f\n.text:0000000000403252\n.text:0000000000403257\n.text:000000000040325c\n.text:000000000040325f\n.text:0000000000403264\n.text:0000000000403267\n.text:0000000000403269\n.text:000000000040326b\n.text:000000000040326f\n.text:0000000000403270\n.text:0000000000403272\n.text:0000000000403274\n.text:0000000000403275\n'
p440
tp441
sS'write_auth_file'
p442
(S'\n__stdcall write_auth_file()\n'
p443
V\u000aint write_auth_file(void)\u000a\u000a{\u000a  AuthList *pAVar1;\u000a  char *__src;\u000a  int iVar2;\u000a  size_t sVar3;\u000a  FILE *__stream;\u000a  char *__dest;\u000a  \u000a  __src = iceauth_filename;\u000a  sVar3 = strlen(iceauth_filename);\u000a  if (sVar3 + 3 < 0x401) {\u000a    strcpy(__dest,__src);\u000a    sVar3 = strlen(__dest);\u000a    __dest[sVar3 + 2] = 0;\u000a    *(undefined2 *)(__dest + sVar3) = 0x6e2d;\u000a    unlink(__dest);\u000a    __stream = fopen(__dest,"wb");\u000a    pAVar1 = iceauth_head;\u000a    if (__stream == (FILE *)0x0) {\u000a      fprintf(stderr,"%s:  unable to open tmp file \u005c"%s\u005c"\u005cn",ProgramName);\u000a      iVar2 = -1;\u000a    }\u000a    else {\u000a      while (pAVar1 != (AuthList *)0x0) {\u000a        IceWriteAuthFileEntry(__stream,pAVar1->auth);\u000a        pAVar1 = (AuthList *)pAVar1->next;\u000a      }\u000a      fclose(__stream);\u000a      iVar2 = 0;\u000a    }\u000a  }\u000a  else {\u000a    strncpy(__dest,"filename too long",0x400);\u000a    __dest[0x3ff] = 0;\u000a    iVar2 = -1;\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p444
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nMOV RBX,qword ptr [0x006061e0]\nMOV RDI,RBX\nCALL 0x00400f50\nADD RAX,0x3\nCMP RAX,0x401\nJC 0x004019c4\nMOV ESI,0x403b4e\nMOV EDX,0x400\nMOV RDI,R14\nCALL 0x00400e90\nMOV byte ptr [0x3ff + R14],0x0\nMOV EAX,0xffffffff\nJMP 0x00401a2e\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00400ed0\nMOV RDI,R14\nCALL 0x00400f50\nMOV byte ptr [R14 + RAX*0x1 + 0x2],0x0\nMOV word ptr [R14 + RAX*0x1],0x6e2d\nMOV RDI,R14\nCALL 0x00400e80\nMOV ESI,0x403b63\nMOV RDI,R14\nCALL 0x00401070\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00401a34\nMOV RBX,qword ptr [0x006061f8]\nTEST RBX,RBX\nJZ 0x00401a24\nNOP dword ptr [RAX]\nMOV RSI,qword ptr [RBX + 0x8]\nMOV RDI,R15\nCALL 0x00400eb0\nMOV RBX,qword ptr [RBX]\nTEST RBX,RBX\nJNZ 0x00401a10\nMOV RDI,R15\nCALL 0x00400f30\nXOR EAX,EAX\nPOP RBX\nPOP R14\nPOP R15\nRET\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x403b66\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00400ff0\nMOV EAX,0xffffffff\nJMP 0x00401a2e\n'
p445
S'41 57\n41 56\n53\n49 89 fe\n48 8b 1d 51 48 20 00\n48 89 df\ne8 b9 f5 ff ff\n48 83 c0 03\n48 3d 01 04 00 00\n72 21\nbe 4e 3b 40 00\nba 00 04 00 00\n4c 89 f7\ne8 db f4 ff ff\n41 c6 86 ff 03 00 00 00\nb8 ff ff ff ff\neb 6a\n4c 89 f7\n48 89 de\ne8 01 f5 ff ff\n4c 89 f7\ne8 79 f5 ff ff\n41 c6 44 06 02 00\n66 41 c7 04 06 2d 6e\n4c 89 f7\ne8 94 f4 ff ff\nbe 63 3b 40 00\n4c 89 f7\ne8 77 f6 ff ff\n49 89 c7\n4d 85 ff\n74 33\n48 8b 1d f0 47 20 00\n48 85 db\n74 17\n0f 1f 00\n48 8b 73 08\n4c 89 ff\ne8 94 f4 ff ff\n48 8b 1b\n48 85 db\n75 ec\n4c 89 ff\ne8 04 f5 ff ff\n31 c0\n5b\n41 5e\n41 5f\nc3\n48 8b 3d 85 47 20 00\n48 8b 15 ce 47 20 00\nbe 66 3b 40 00\n31 c0\n4c 89 f1\ne8 9f f5 ff ff\nb8 ff ff ff ff\neb d6\n'
p446
S'.text:0000000000401980\n.text:0000000000401982\n.text:0000000000401984\n.text:0000000000401985\n.text:0000000000401988\n.text:000000000040198f\n.text:0000000000401992\n.text:0000000000401997\n.text:000000000040199b\n.text:00000000004019a1\n.text:00000000004019a3\n.text:00000000004019a8\n.text:00000000004019ad\n.text:00000000004019b0\n.text:00000000004019b5\n.text:00000000004019bd\n.text:00000000004019c2\n.text:00000000004019c4\n.text:00000000004019c7\n.text:00000000004019ca\n.text:00000000004019cf\n.text:00000000004019d2\n.text:00000000004019d7\n.text:00000000004019dd\n.text:00000000004019e4\n.text:00000000004019e7\n.text:00000000004019ec\n.text:00000000004019f1\n.text:00000000004019f4\n.text:00000000004019f9\n.text:00000000004019fc\n.text:00000000004019ff\n.text:0000000000401a01\n.text:0000000000401a08\n.text:0000000000401a0b\n.text:0000000000401a0d\n.text:0000000000401a10\n.text:0000000000401a14\n.text:0000000000401a17\n.text:0000000000401a1c\n.text:0000000000401a1f\n.text:0000000000401a22\n.text:0000000000401a24\n.text:0000000000401a27\n.text:0000000000401a2c\n.text:0000000000401a2e\n.text:0000000000401a2f\n.text:0000000000401a31\n.text:0000000000401a33\n.text:0000000000401a34\n.text:0000000000401a3b\n.text:0000000000401a42\n.text:0000000000401a47\n.text:0000000000401a49\n.text:0000000000401a4c\n.text:0000000000401a51\n.text:0000000000401a56\n'
p447
tp448
sS'binaryEqual'
p449
(S'\n__stdcall binaryEqual(char * a, char * b)\n'
p450
V\u000aint binaryEqual(char *a,char *b)\u000a\u000a{\u000a  char cVar1;\u000a  char cVar2;\u000a  int in_EDX;\u000a  \u000a  do {\u000a    if (in_EDX == 0) {\u000a      return 1;\u000a    }\u000a    in_EDX = in_EDX + -1;\u000a    cVar2 = *a;\u000a    a = a + 1;\u000a    cVar1 = *b;\u000a    b = b + 1;\u000a  } while (cVar2 == cVar1);\u000a  return 0;\u000a}\u000a\u000a
p451
S'TEST EDX,EDX\nJZ 0x00402d47\nDEC EDX\nMOVZX EAX,byte ptr [RDI]\nINC RDI\nCMP AL,byte ptr [RSI]\nLEA RSI,[RSI + 0x1]\nJZ 0x00402d30\nXOR EAX,EAX\nRET\nMOV EAX,0x1\nRET\n'
p452
S'85 d2\n74 13\nff ca\n0f b6 07\n48 ff c7\n3a 06\n48 8d 76 01\n74 ec\n31 c0\nc3\nb8 01 00 00 00\nc3\n'
p453
S'.text:0000000000402d30\n.text:0000000000402d32\n.text:0000000000402d34\n.text:0000000000402d36\n.text:0000000000402d39\n.text:0000000000402d3c\n.text:0000000000402d3e\n.text:0000000000402d42\n.text:0000000000402d44\n.text:0000000000402d46\n.text:0000000000402d47\n.text:0000000000402d4c\n'
p454
tp455
sS'cvthexkey'
p456
(S'\n__stdcall cvthexkey(char * hexstr, char * * ptrp)\n'
p457
V\u000aint cvthexkey(char *hexstr,char **ptrp)\u000a\u000a{\u000a  char cVar1;\u000a  ushort **ppuVar2;\u000a  __int32_t **pp_Var3;\u000a  char cVar4;\u000a  char cVar5;\u000a  char *pcVar6;\u000a  ulong __size;\u000a  char *pcVar7;\u000a  char cVar8;\u000a  uint uVar9;\u000a  \u000a  cVar8 = *hexstr;\u000a  if (cVar8 != 0) {\u000a    pcVar6 = hexstr + 1;\u000a    uVar9 = 0;\u000a    do {\u000a      if (cVar8 < 0) {\u000a        return -1;\u000a      }\u000a      ppuVar2 = __ctype_b_loc();\u000a      if (((*ppuVar2)[(long)cVar8] & 0x2000) == 0) {\u000a        if (((*ppuVar2)[(long)cVar8] & 0x1000) == 0) {\u000a          return -1;\u000a        }\u000a        uVar9 = uVar9 + 1;\u000a      }\u000a      cVar8 = *pcVar6;\u000a      pcVar6 = pcVar6 + 1;\u000a    } while (cVar8 != 0);\u000a    if ((uVar9 != 0) && ((uVar9 & 1) == 0)) {\u000a      uVar9 = uVar9 >> 1;\u000a      __size = (ulong)uVar9;\u000a      pcVar6 = (char *)malloc(__size);\u000a      if (pcVar6 != (char *)0x0) {\u000a        if (uVar9 != 0) {\u000a          cVar8 = 0;\u000a          ppuVar2 = __ctype_b_loc();\u000a          pcVar7 = pcVar6;\u000a          do {\u000a            do {\u000a              cVar1 = *hexstr;\u000a              hexstr = hexstr + 1;\u000a            } while (((*ppuVar2)[(long)cVar1] & 0x2000) != 0);\u000a            if (((*ppuVar2)[(long)cVar1] & 0x100) != 0) {\u000a              pp_Var3 = __ctype_tolower_loc();\u000a              cVar1 = *(char *)(*pp_Var3 + (long)cVar1);\u000a            }\u000a            if (cVar8 != 0) {\u000a              cVar4 = 0;\u000a              if (9 < (byte)(cVar8 - 0x30U)) {\u000a                cVar4 = '\u005ca';\u000a              }\u000a              cVar5 = -0x30;\u000a              if (9 < (byte)(cVar1 - 0x30U)) {\u000a                cVar5 = -0x57;\u000a              }\u000a              *pcVar7 = cVar1 + (cVar8 - cVar4) * 0x10 + cVar5;\u000a              pcVar7 = pcVar7 + 1;\u000a              __size = (ulong)((int)__size - 1);\u000a              cVar1 = 0;\u000a            }\u000a            cVar8 = cVar1;\u000a          } while ((int)__size != 0);\u000a        }\u000a        *ptrp = pcVar6;\u000a        return uVar9;\u000a      }\u000a      fprintf(stderr,"%s:  unable to allocate %d bytes for hexkey\u005cn",ProgramName,__size);\u000a    }\u000a  }\u000a  return -1;\u000a}\u000a\u000a
p458
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R12,RSI\nMOV RBX,RDI\nMOV R14B,byte ptr [RBX]\nTEST R14B,R14B\nJZ 0x00402ae8\nLEA RBP,[RBX + 0x1]\nXOR R15D,R15D\nNOP word ptr [RAX + RAX*0x1]\nTEST R14B,R14B\nJS 0x00402ae8\nCALL 0x004010d0\nMOV RAX,qword ptr [RAX]\nMOVSX RCX,R14B\nMOVZX EAX,word ptr [RAX + RCX*0x2]\nTEST AH,0x20\nJNZ 0x004029ca\nTEST AH,0x10\nJZ 0x00402ae8\nINC R15D\nMOVZX R14D,byte ptr [RBP]\nINC RBP\nTEST R14B,R14B\nJNZ 0x004029a0\nTEST R15D,R15D\nJZ 0x00402ae8\nMOV EAX,R15D\nAND EAX,0x1\nJNZ 0x00402ae8\nSHR R15D,1\nMOV RDI,R15\nCALL 0x00401020\nMOV qword ptr [RSP],RAX\nTEST RAX,RAX\nJZ 0x00402acb\nMOV qword ptr [RSP + 0x8],R12\nTEST R15D,R15D\nJZ 0x00402abd\nXOR R14D,R14D\nCALL 0x004010d0\nMOV RBP,RAX\nMOV R12,qword ptr [RSP]\nMOV ESI,R15D\nMOV qword ptr [RSP + 0x10],R15\nNOP dword ptr [RAX]\nMOV RCX,qword ptr [RBP]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVZX EAX,byte ptr [RBX]\nMOVSX R13,AL\nMOVZX EDX,word ptr [RCX + R13*0x2]\nINC RBX\nTEST DH,0x20\nJNZ 0x00402a40\nTEST DH,0x1\nJZ 0x00402a70\nMOV R15D,ESI\nCALL 0x004010c0\nMOV ESI,R15D\nMOV R15,qword ptr [RSP + 0x10]\nMOV RAX,qword ptr [RAX]\nMOV AL,byte ptr [RAX + R13*0x4]\nTEST R14B,R14B\nJZ 0x00402ab0\nMOV EDX,R14D\nADD DL,0xd0\nXOR ECX,ECX\nCMP DL,0xa\nMOV EDX,0x0\nJC 0x00402a89\nMOV DL,0x7\nSUB R14B,DL\nSHL R14B,0x4\nMOV EDX,EAX\nADD DL,0xd0\nCMP DL,0xa\nMOV DL,0xd0\nJC 0x00402a9e\nMOV DL,0xa9\nADD AL,R14B\nADD AL,DL\nMOV byte ptr [R12],AL\nINC R12\nDEC ESI\nJMP 0x00402ab2\nMOV CL,AL\nTEST ESI,ESI\nMOV R14B,CL\nJNZ 0x00402a30\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RCX,qword ptr [RSP]\nMOV qword ptr [RAX],RCX\nJMP 0x00402aee\nMOV RDI,qword ptr [0x006061c0]\nMOV RDX,qword ptr [0x00606210]\nMOV ESI,0x403fa3\nXOR EAX,EAX\nMOV ECX,R15D\nCALL 0x00400ff0\nMOV R15D,0xffffffff\nMOV EAX,R15D\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p459
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 f4\n48 89 fb\n44 8a 33\n45 84 f6\n0f 84 58 01 00 00\n48 8d 6b 01\n45 31 ff\n66 0f 1f 84 00 00 00 00 00\n45 84 f6\n0f 88 3f 01 00 00\ne8 22 e7 ff ff\n48 8b 00\n49 0f be ce\n0f b7 04 48\nf6 c4 20\n75 0c\nf6 c4 10\n0f 84 21 01 00 00\n41 ff c7\n44 0f b6 75 00\n48 ff c5\n45 84 f6\n75 c9\n45 85 ff\n0f 84 08 01 00 00\n44 89 f8\n83 e0 01\n0f 85 fc 00 00 00\n41 d1 ef\n4c 89 ff\ne8 29 e6 ff ff\n48 89 04 24\n48 85 c0\n0f 84 c7 00 00 00\n4c 89 64 24 08\n45 85 ff\n0f 84 ab 00 00 00\n45 31 f6\ne8 b6 e6 ff ff\n48 89 c5\n4c 8b 24 24\n44 89 fe\n4c 89 7c 24 10\n0f 1f 80 00 00 00 00\n48 8b 4d 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 03\n4c 0f be e8\n42 0f b7 14 69\n48 ff c3\nf6 c6 20\n75 ec\nf6 c6 01\n74 17\n41 89 f7\ne8 5f e6 ff ff\n44 89 fe\n4c 8b 7c 24 10\n48 8b 00\n42 8a 04 a8\n45 84 f6\n74 3b\n44 89 f2\n80 c2 d0\n31 c9\n80 fa 0a\nba 00 00 00 00\n72 02\nb2 07\n41 28 d6\n41 c0 e6 04\n89 c2\n80 c2 d0\n80 fa 0a\nb2 d0\n72 02\nb2 a9\n44 00 f0\n00 d0\n41 88 04 24\n49 ff c4\nff ce\neb 04\n88 c1\n85 f6\n41 88 ce\n0f 85 73 ff ff ff\n48 8b 44 24 08\n48 8b 0c 24\n48 89 08\neb 23\n48 8b 3d ee 36 20 00\n48 8b 15 37 37 20 00\nbe a3 3f 40 00\n31 c0\n44 89 f9\ne8 08 e5 ff ff\n41 bf ff ff ff ff\n44 89 f8\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p460
S'.text:0000000000402970\n.text:0000000000402971\n.text:0000000000402973\n.text:0000000000402975\n.text:0000000000402977\n.text:0000000000402979\n.text:000000000040297a\n.text:000000000040297e\n.text:0000000000402981\n.text:0000000000402984\n.text:0000000000402987\n.text:000000000040298a\n.text:0000000000402990\n.text:0000000000402994\n.text:0000000000402997\n.text:00000000004029a0\n.text:00000000004029a3\n.text:00000000004029a9\n.text:00000000004029ae\n.text:00000000004029b1\n.text:00000000004029b5\n.text:00000000004029b9\n.text:00000000004029bc\n.text:00000000004029be\n.text:00000000004029c1\n.text:00000000004029c7\n.text:00000000004029ca\n.text:00000000004029cf\n.text:00000000004029d2\n.text:00000000004029d5\n.text:00000000004029d7\n.text:00000000004029da\n.text:00000000004029e0\n.text:00000000004029e3\n.text:00000000004029e6\n.text:00000000004029ec\n.text:00000000004029ef\n.text:00000000004029f2\n.text:00000000004029f7\n.text:00000000004029fb\n.text:00000000004029fe\n.text:0000000000402a04\n.text:0000000000402a09\n.text:0000000000402a0c\n.text:0000000000402a12\n.text:0000000000402a15\n.text:0000000000402a1a\n.text:0000000000402a1d\n.text:0000000000402a21\n.text:0000000000402a24\n.text:0000000000402a29\n.text:0000000000402a30\n.text:0000000000402a34\n.text:0000000000402a40\n.text:0000000000402a43\n.text:0000000000402a47\n.text:0000000000402a4c\n.text:0000000000402a4f\n.text:0000000000402a52\n.text:0000000000402a54\n.text:0000000000402a57\n.text:0000000000402a59\n.text:0000000000402a5c\n.text:0000000000402a61\n.text:0000000000402a64\n.text:0000000000402a69\n.text:0000000000402a6c\n.text:0000000000402a70\n.text:0000000000402a73\n.text:0000000000402a75\n.text:0000000000402a78\n.text:0000000000402a7b\n.text:0000000000402a7d\n.text:0000000000402a80\n.text:0000000000402a85\n.text:0000000000402a87\n.text:0000000000402a89\n.text:0000000000402a8c\n.text:0000000000402a90\n.text:0000000000402a92\n.text:0000000000402a95\n.text:0000000000402a98\n.text:0000000000402a9a\n.text:0000000000402a9c\n.text:0000000000402a9e\n.text:0000000000402aa1\n.text:0000000000402aa3\n.text:0000000000402aa7\n.text:0000000000402aaa\n.text:0000000000402aac\n.text:0000000000402ab0\n.text:0000000000402ab2\n.text:0000000000402ab4\n.text:0000000000402ab7\n.text:0000000000402abd\n.text:0000000000402ac2\n.text:0000000000402ac6\n.text:0000000000402ac9\n.text:0000000000402acb\n.text:0000000000402ad2\n.text:0000000000402ad9\n.text:0000000000402ade\n.text:0000000000402ae0\n.text:0000000000402ae3\n.text:0000000000402ae8\n.text:0000000000402aee\n.text:0000000000402af1\n.text:0000000000402af5\n.text:0000000000402af6\n.text:0000000000402af8\n.text:0000000000402afa\n.text:0000000000402afc\n.text:0000000000402afe\n.text:0000000000402aff\n'
p461
tp462
sS'IceUnlockAuthFile'
p463
(S'\n__stdcall IceUnlockAuthFile()\n'
p464
V\u000avoid IceUnlockAuthFile(void)\u000a\u000a{\u000a  (*(code *)PTR_IceUnlockAuthFile_00606070)();\u000a  return;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x00606070]\n'
p466
S'ff 25 5a 51 20 00\n'
p467
S'.plt:0000000000400f10\n'
p468
tp469
sS'__strdup'
p470
(S'\n__stdcall __strdup()\n'
p471
V\u000avoid __strdup(void)\u000a\u000a{\u000a  (*(code *)PTR___strdup_006060c0)();\u000a  return;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x006060c0]\n'
p473
S'ff 25 0a 51 20 00\n'
p474
S'.plt:0000000000400fb0\n'
p475
tp476
sS'skip_nonspace'
p477
(S'\n__stdcall skip_nonspace(char * s)\n'
p478
V\u000achar * skip_nonspace(char *s)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  char cVar2;\u000a  \u000a  if (s == (char *)0x0) {\u000a    s = (char *)0x0;\u000a  }\u000a  else {\u000a    cVar2 = *s;\u000a    if (0 < cVar2) {\u000a      ppuVar1 = __ctype_b_loc();\u000a      do {\u000a        if ((*(byte *)((long)*ppuVar1 + (long)cVar2 * 2 + 1) & 0x20) != 0) {\u000a          return s;\u000a        }\u000a        cVar2 = s[1];\u000a        s = s + 1;\u000a      } while (0 < cVar2);\u000a    }\u000a  }\u000a  return s;\u000a}\u000a\u000a
p479
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00403459\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJLE 0x0040345b\nCALL 0x004010d0\nMOV RAX,qword ptr [RAX]\nNOP dword ptr [RAX + RAX*0x1]\nMOVSX RCX,BPL\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x20\nJNZ 0x0040345b\nMOVZX EBP,byte ptr [RBX + 0x1]\nINC RBX\nTEST BPL,BPL\nJG 0x00403440\nJMP 0x0040345b\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p480
S'55\n53\n50\n48 89 fb\n48 85 db\n74 2e\n40 8a 2b\n40 84 ed\n7e 28\ne8 98 dc ff ff\n48 8b 00\n0f 1f 44 00 00\n48 0f be cd\nf6 44 48 01 20\n75 10\n0f b6 6b 01\n48 ff c3\n40 84 ed\n7f e9\neb 02\n31 db\n48 89 d8\n48 83 c4 08\n5b\n5d\nc3\n'
p481
S'.text:0000000000403420\n.text:0000000000403421\n.text:0000000000403422\n.text:0000000000403423\n.text:0000000000403426\n.text:0000000000403429\n.text:000000000040342b\n.text:000000000040342e\n.text:0000000000403431\n.text:0000000000403433\n.text:0000000000403438\n.text:000000000040343b\n.text:0000000000403440\n.text:0000000000403444\n.text:0000000000403449\n.text:000000000040344b\n.text:000000000040344f\n.text:0000000000403452\n.text:0000000000403455\n.text:0000000000403457\n.text:0000000000403459\n.text:000000000040345b\n.text:000000000040345e\n.text:0000000000403462\n.text:0000000000403463\n.text:0000000000403464\n'
p482
tp483
sS'free'
p484
(S'\n__stdcall free(void * __ptr)\n'
p485
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_00606018)();\u000a  return;\u000a}\u000a\u000a
p486
S'JMP qword ptr [0x00606018]\n'
p487
S'ff 25 b2 51 20 00\n'
p488
S'.plt:0000000000400e60\n'
p489
tp490
sS'IceFreeAuthFileEntry'
p491
(S'\n__stdcall IceFreeAuthFileEntry()\n'
p492
V\u000avoid IceFreeAuthFileEntry(void)\u000a\u000a{\u000a  (*(code *)PTR_IceFreeAuthFileEntry_00606088)();\u000a  return;\u000a}\u000a\u000a
p493
S'JMP qword ptr [0x00606088]\n'
p494
S'ff 25 42 51 20 00\n'
p495
S'.plt:0000000000400f40\n'
p496
tp497
sS'malloc'
p498
(S'\n__stdcall malloc(size_t __size)\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_006060f8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x006060f8]\n'
p501
S'ff 25 d2 50 20 00\n'
p502
S'.plt:0000000000401020\n'
p503
tp504
sS'fopen'
p505
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p506
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_00606120)();\u000a  return pFVar1;\u000a}\u000a\u000a
p507
S'JMP qword ptr [0x00606120]\n'
p508
S'ff 25 aa 50 20 00\n'
p509
S'.plt:0000000000401070\n'
p510
tp511
sS'register_tm_clones'
p512
(S'\n__stdcall register_tm_clones()\n'
p513
V\u000a/* WARNING: Removing unreachable block (ram,0x00401173) */\u000a/* WARNING: Removing unreachable block (ram,0x0040117d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p514
S'MOV ESI,0x606198\nPUSH RBP\nSUB RSI,0x606198\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401188\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401188\nPOP RBP\nMOV EDI,0x606198\nJMP RAX\nPOP RBP\nRET\n'
p515
S'be 98 61 60 00\n55\n48 81 ee 98 61 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 98 61 60 00\nff e0\n5d\nc3\n'
p516
S'.text:0000000000401150\n.text:0000000000401155\n.text:0000000000401156\n.text:000000000040115d\n.text:0000000000401161\n.text:0000000000401164\n.text:0000000000401167\n.text:000000000040116b\n.text:000000000040116e\n.text:0000000000401171\n.text:0000000000401173\n.text:0000000000401178\n.text:000000000040117b\n.text:000000000040117d\n.text:000000000040117e\n.text:0000000000401183\n.text:0000000000401188\n.text:0000000000401189\n'
p517
tp518
sS'IceWriteAuthFileEntry'
p519
(S'\n__stdcall IceWriteAuthFileEntry()\n'
p520
V\u000avoid IceWriteAuthFileEntry(void)\u000a\u000a{\u000a  (*(code *)PTR_IceWriteAuthFileEntry_00606040)();\u000a  return;\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x00606040]\n'
p522
S'ff 25 8a 51 20 00\n'
p523
S'.plt:0000000000400eb0\n'
p524
tp525
sS'fclose'
p526
(S'\n__stdcall fclose(FILE * __stream)\n'
p527
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_00606080)();\u000a  return iVar1;\u000a}\u000a\u000a
p528
S'JMP qword ptr [0x00606080]\n'
p529
S'ff 25 4a 51 20 00\n'
p530
S'.plt:0000000000400f30\n'
p531
tp532
sS'fwrite'
p533
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p534
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00606140)();\u000a  return sVar1;\u000a}\u000a\u000a
p535
S'JMP qword ptr [0x00606140]\n'
p536
S'ff 25 8a 50 20 00\n'
p537
S'.plt:00000000004010b0\n'
p538
tp539
sS'fprintf'
p540
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p541
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_006060e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x006060e0]\n'
p543
S'ff 25 ea 50 20 00\n'
p544
S'.plt:0000000000400ff0\n'
p545
tp546
sS'puts'
p547
(S'\n__stdcall puts(char * __s)\n'
p548
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00606058)();\u000a  return iVar1;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x00606058]\n'
p550
S'ff 25 72 51 20 00\n'
p551
S'.plt:0000000000400ee0\n'
p552
tp553
sS'unlink'
p554
(S'\n__stdcall unlink(char * __name)\n'
p555
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint unlink(char *__name)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_unlink_00606028)();\u000a  return iVar1;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x00606028]\n'
p557
S'ff 25 a2 51 20 00\n'
p558
S'.plt:0000000000400e80\n'
p559
tp560
sS'rename'
p561
(S'\n__stdcall rename(char * __old, char * __new)\n'
p562
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint rename(char *__old,char *__new)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_rename_00606128)();\u000a  return iVar1;\u000a}\u000a\u000a
p563
S'JMP qword ptr [0x00606128]\n'
p564
S'ff 25 a2 50 20 00\n'
p565
S'.plt:0000000000401080\n'
p566
tp567
sS'open_file'
p568
(S'\n__stdcall open_file(char * * filenamep, char * mode, int * usedstdp, char * srcfn, char * cmd)\n'
p569
V\u000aFILE * open_file(char **filenamep,char *mode,int *usedstdp,char *srcfn,char *cmd)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  if ((**filenamep == '-') && ((*filenamep)[1] == 0)) {\u000a    *usedstdp = 1;\u000a    if (*mode == 'r') {\u000a      if (okay_to_use_stdin == 0) {\u000a        okay_to_use_stdin = 1;\u000a        *filenamep = "(stdin)";\u000a        pFVar1 = stdin;\u000a      }\u000a      else {\u000a        prefix(srcfn);\u000a        pFVar1 = (FILE *)0x0;\u000a        fprintf(stderr,"%s:  stdin already in use\u005cn");\u000a      }\u000a    }\u000a    else {\u000a      *filenamep = "(stdout)";\u000a      pFVar1 = stdout;\u000a    }\u000a  }\u000a  else {\u000a    pFVar1 = (FILE *)fopen(*filenamep,mode);\u000a    if (pFVar1 == (FILE *)0x0) {\u000a      prefix(srcfn);\u000a      fprintf(stderr,"%s:  unable to open file %s\u005cn");\u000a      pFVar1 = (FILE *)0x0;\u000a    }\u000a  }\u000a  return pFVar1;\u000a}\u000a\u000a
p570
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14,R9\nMOV R15D,R8D\nMOV R12,RCX\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX]\nCMP byte ptr [RAX],0x2d\nJNZ 0x00403052\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x0040306e\nMOV RDI,qword ptr [RBX]\nCALL 0x00401070\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004030aa\nMOV RAX,RBP\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV dword ptr [RDX],0x1\nCMP byte ptr [RSI],0x72\nJNZ 0x0040309a\nMOV AL,byte ptr [0x0060620c]\nTEST AL,AL\nJNZ 0x004030d2\nMOV byte ptr [0x0060620c],0x1\nMOV qword ptr [RBX],0x4038d4\nMOV RBP,qword ptr [0x006061b0]\nJMP 0x00403062\nMOV qword ptr [RBX],0x4040a3\nMOV RBP,qword ptr [0x006061a0]\nJMP 0x00403062\nMOV RDI,R12\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RDI,qword ptr [0x006061c0]\nMOV RCX,qword ptr [RBX]\nXOR EBP,EBP\nMOV ESI,0x404086\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00400ff0\nJMP 0x00403062\nMOV RDI,R12\nMOV ESI,R15D\nCALL 0x00401b80\nMOV RDI,qword ptr [0x006061c0]\nXOR EBP,EBP\nMOV ESI,0x40406b\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00400ff0\nJMP 0x00403062\n'
p571
S'55\n41 57\n41 56\n41 54\n53\n4d 89 ce\n45 89 c7\n49 89 cc\n48 89 fb\n48 8b 03\n80 38 2d\n75 06\n80 78 01 00\n74 1c\n48 8b 3b\ne8 16 e0 ff ff\n48 89 c5\n48 85 ed\n74 48\n48 89 e8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\nc7 02 01 00 00 00\n80 3e 72\n75 21\n8a 05 8d 31 20 00\n84 c0\n75 4f\nc6 05 82 31 20 00 01\n48 c7 03 d4 38 40 00\n48 8b 2d 18 31 20 00\neb c8\n48 c7 03 a3 40 40 00\n48 8b 2d f8 30 20 00\neb b8\n4c 89 e7\n44 89 fe\ne8 cb ea ff ff\n48 8b 3d 04 31 20 00\n48 8b 0b\n31 ed\nbe 86 40 40 00\n31 c0\n4c 89 f2\ne8 20 df ff ff\neb 90\n4c 89 e7\n44 89 fe\ne8 a3 ea ff ff\n48 8b 3d dc 30 20 00\n31 ed\nbe 6b 40 40 00\n31 c0\n4c 89 f2\ne8 fb de ff ff\ne9 68 ff ff ff\n'
p572
S'.text:0000000000403030\n.text:0000000000403031\n.text:0000000000403033\n.text:0000000000403035\n.text:0000000000403037\n.text:0000000000403038\n.text:000000000040303b\n.text:000000000040303e\n.text:0000000000403041\n.text:0000000000403044\n.text:0000000000403047\n.text:000000000040304a\n.text:000000000040304c\n.text:0000000000403050\n.text:0000000000403052\n.text:0000000000403055\n.text:000000000040305a\n.text:000000000040305d\n.text:0000000000403060\n.text:0000000000403062\n.text:0000000000403065\n.text:0000000000403066\n.text:0000000000403068\n.text:000000000040306a\n.text:000000000040306c\n.text:000000000040306d\n.text:000000000040306e\n.text:0000000000403074\n.text:0000000000403077\n.text:0000000000403079\n.text:000000000040307f\n.text:0000000000403081\n.text:0000000000403083\n.text:000000000040308a\n.text:0000000000403091\n.text:0000000000403098\n.text:000000000040309a\n.text:00000000004030a1\n.text:00000000004030a8\n.text:00000000004030aa\n.text:00000000004030ad\n.text:00000000004030b0\n.text:00000000004030b5\n.text:00000000004030bc\n.text:00000000004030bf\n.text:00000000004030c1\n.text:00000000004030c6\n.text:00000000004030c8\n.text:00000000004030cb\n.text:00000000004030d0\n.text:00000000004030d2\n.text:00000000004030d5\n.text:00000000004030d8\n.text:00000000004030dd\n.text:00000000004030e4\n.text:00000000004030e6\n.text:00000000004030eb\n.text:00000000004030ed\n.text:00000000004030f0\n.text:00000000004030f5\n'
p573
tp574
sS'__do_global_dtors_aux'
p575
(S'\n__stdcall __do_global_dtors_aux()\n'
p576
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p577
S'CMP byte ptr [0x006061c8],0x0\nJNZ 0x004011aa\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401110\nPOP RBP\nMOV byte ptr [0x006061c8],0x1\nRET\n'
p578
S'80 3d 31 50 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 1e 50 20 00 01\nf3 c3\n'
p579
S'.text:0000000000401190\n.text:0000000000401197\n.text:0000000000401199\n.text:000000000040119a\n.text:000000000040119d\n.text:00000000004011a2\n.text:00000000004011a3\n.text:00000000004011aa\n'
p580
tp581
sS'strncpy'
p582
(S'\n__stdcall strncpy(char * __dest, char * __src, size_t __n)\n'
p583
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strncpy(char *__dest,char *__src,size_t __n)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strncpy_00606030)();\u000a  return pcVar1;\u000a}\u000a\u000a
p584
S'JMP qword ptr [0x00606030]\n'
p585
S'ff 25 9a 51 20 00\n'
p586
S'.plt:0000000000400e90\n'
p587
tp588
sS'_fini'
p589
(S'\n__stdcall _fini()\n'
p590
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p591
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p592
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p593
S'.fini:00000000004034e4\n.fini:00000000004034e8\n.fini:00000000004034ec\n'
p594
tp595
sS'fputs'
p596
(S'\n__stdcall fputs(char * __s, FILE * __stream)\n'
p597
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_006060a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p598
S'JMP qword ptr [0x006060a8]\n'
p599
S'ff 25 22 51 20 00\n'
p600
S'.plt:0000000000400f80\n'
p601
tp602
sS'badcommandline'
p603
(S'\n__stdcall badcommandline(char * cmd)\n'
p604
V\u000avoid badcommandline(char *cmd)\u000a\u000a{\u000a  fprintf(stderr,"bad \u005c"%s\u005c" command line\u005cn",cmd,cmd);\u000a  return;\u000a}\u000a\u000a
p605
S'MOV RCX,RDI\nMOV RDI,qword ptr [0x006061c0]\nMOV ESI,0x403f8c\nXOR EAX,EAX\nMOV RDX,RCX\nJMP 0x00400ff0\n'
p606
S'48 89 f9\n48 8b 3d 66 38 20 00\nbe 8c 3f 40 00\n31 c0\n48 89 ca\ne9 87 e6 ff ff\n'
p607
S'.text:0000000000402950\n.text:0000000000402953\n.text:000000000040295a\n.text:000000000040295f\n.text:0000000000402961\n.text:0000000000402964\n'
p608
tp609
sS'merge_entries'
p610
(S'\n__stdcall merge_entries()\n'
p611
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint merge_entries(void)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  byte bVar4;\u000a  int iVar5;\u000a  uint *in_RCX;\u000a  AuthList *pAVar6;\u000a  uint uVar7;\u000a  int *in_RDX;\u000a  _AuthList *p_Var8;\u000a  int iVar9;\u000a  int *in_RSI;\u000a  AuthList *__ptr;\u000a  int iVar10;\u000a  AuthList *pAVar11;\u000a  _AuthList *p_Var12;\u000a  int authDataSame;\u000a  int local_78;\u000a  int local_74;\u000a  AuthList *local_70;\u000a  ulong local_68;\u000a  int *local_60;\u000a  int *local_58;\u000a  uint *local_50;\u000a  undefined4 local_48;\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  \u000a  local_70 = iceauth_head;\u000a  if (__ptr == (AuthList *)0x0) {\u000a    iVar10 = 0;\u000a  }\u000a  else {\u000a    p_Var8 = (_AuthList *)iceauth_head;\u000a    if (iceauth_head == (AuthList *)0x0) {\u000a      local_78 = 0;\u000a      iVar9 = 0;\u000a      p_Var8 = (_AuthList *)__ptr;\u000a      do {\u000a        p_Var8 = ((AuthList *)p_Var8)->next;\u000a        iVar9 = iVar9 + 1;\u000a      } while (p_Var8 != (_AuthList *)0x0);\u000a      uVar7 = 0;\u000a      iVar10 = iVar9;\u000a      iceauth_head = __ptr;\u000a      local_60 = in_RSI;\u000a      local_58 = in_RDX;\u000a      local_50 = in_RCX;\u000a    }\u000a    else {\u000a      do {\u000a        pAVar11 = (AuthList *)p_Var8;\u000a        p_Var8 = pAVar11->next;\u000a      } while (pAVar11->next != (_AuthList *)0x0);\u000a      *(AuthList **)&pAVar11->next = __ptr;\u000a      if (__ptr == (AuthList *)0x0) {\u000a        iVar9 = 0;\u000a        local_78 = 0;\u000a        uVar7 = 0;\u000a        iVar10 = 0;\u000a        local_60 = in_RSI;\u000a        local_58 = in_RDX;\u000a        local_50 = in_RCX;\u000a      }\u000a      else {\u000a        local_68 = 0;\u000a        local_78 = 0;\u000a        iVar9 = 0;\u000a        iVar10 = 0;\u000a        local_60 = in_RSI;\u000a        local_58 = in_RDX;\u000a        local_50 = in_RCX;\u000a        do {\u000a          p_Var8 = __ptr->next;\u000a          p_Var12 = (_AuthList *)local_70;\u000a          while( true ) {\u000a            iVar5 = match_auth(((AuthList *)p_Var12)->auth,__ptr->auth,&local_74);\u000a            if (iVar5 != 0) break;\u000a            if (p_Var12 == (_AuthList *)pAVar11) {\u000a              bVar4 = 1;\u000a              goto LAB_00402bff;\u000a            }\u000a            p_Var12 = ((AuthList *)p_Var12)->next;\u000a          }\u000a          if (local_74 == 0) {\u000a            local_48 = *(undefined4 *)&((AuthList *)p_Var12)->next;\u000a            uStack68 = *(undefined4 *)((long)&((AuthList *)p_Var12)->next + 4);\u000a            uStack64 = *(undefined4 *)&((AuthList *)p_Var12)->auth;\u000a            uStack60 = *(undefined4 *)((long)&((AuthList *)p_Var12)->auth + 4);\u000a            uVar1 = *(undefined4 *)((long)&__ptr->next + 4);\u000a            uVar2 = *(undefined4 *)&__ptr->auth;\u000a            uVar3 = *(undefined4 *)((long)&__ptr->auth + 4);\u000a            *(undefined4 *)&((AuthList *)p_Var12)->next = *(undefined4 *)&__ptr->next;\u000a            *(undefined4 *)((long)&((AuthList *)p_Var12)->next + 4) = uVar1;\u000a            *(undefined4 *)&((AuthList *)p_Var12)->auth = uVar2;\u000a            *(undefined4 *)((long)&((AuthList *)p_Var12)->auth + 4) = uVar3;\u000a            *(undefined4 *)&__ptr->next = local_48;\u000a            *(undefined4 *)((long)&__ptr->next + 4) = uStack68;\u000a            *(undefined4 *)&__ptr->auth = uStack64;\u000a            *(undefined4 *)((long)&__ptr->auth + 4) = uStack60;\u000a            ((AuthList *)p_Var12)->next = __ptr->next;\u000a            IceFreeAuthFileEntry(__ptr->auth);\u000a            free(__ptr);\u000a            pAVar11->next = p_Var8;\u000a            local_78 = local_78 + 1;\u000a            iVar9 = iVar9 + -1;\u000a            bVar4 = 1;\u000a            __ptr = (AuthList *)0x0;\u000a          }\u000a          else {\u000a            bVar4 = 0;\u000a          }\u000aLAB_00402bff:\u000a          pAVar6 = pAVar11;\u000a          if (bVar4 != 0) {\u000a            pAVar6 = __ptr;\u000a          }\u000a          if (__ptr != (AuthList *)0x0) {\u000a            pAVar11 = pAVar6;\u000a          }\u000a          iVar10 = iVar10 + (uint)bVar4;\u000a          iVar9 = iVar9 + (uint)bVar4;\u000a          uVar7 = (int)local_68 + (uint)(bVar4 ^ 1);\u000a          local_68 = (ulong)uVar7;\u000a          __ptr = (AuthList *)p_Var8;\u000a        } while (p_Var8 != (_AuthList *)0x0);\u000a      }\u000a    }\u000a    *local_60 = iVar9;\u000a    *local_58 = local_78;\u000a    *local_50 = uVar7;\u000a  }\u000a  return iVar10;\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x48\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00402c33\nMOV R15,qword ptr [0x006061f8]\nTEST R15,R15\nMOV qword ptr [RSP + 0x28],RCX\nMOV qword ptr [RSP + 0x20],RDX\nMOV qword ptr [RSP + 0x18],RSI\nJZ 0x00402c38\nMOV RAX,R15\nNOP dword ptr [RAX]\nMOV R13,RAX\nMOV RAX,qword ptr [R13]\nTEST RAX,RAX\nJNZ 0x00402b40\nMOV qword ptr [R13],RBX\nTEST RBX,RBX\nJZ 0x00402c61\nXOR EDX,EDX\nMOV dword ptr [RSP],0x0\nXOR EBP,EBP\nXOR R12D,R12D\nMOV qword ptr [RSP + 0x8],R15\nNOP dword ptr [RAX]\nMOV qword ptr [RSP + 0x10],RDX\nMOV R14,RBX\nMOV RBX,qword ptr [R14]\nJMP 0x00402b83\nMOV R15,qword ptr [R15]\nMOV RDI,qword ptr [R15 + 0x8]\nMOV RSI,qword ptr [R14 + 0x8]\nLEA RDX,[RSP + 0x4]\nCALL 0x00402ca0\nTEST EAX,EAX\nJNZ 0x00402bb0\nCMP R15,R13\nJNZ 0x00402b80\nMOV AL,0x1\nJMP 0x00402bff\nCMP dword ptr [RSP + 0x4],0x0\nJZ 0x00402bc0\nXOR EAX,EAX\nJMP 0x00402bff\nMOVUPS XMM0,xmmword ptr [R15]\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nMOVUPS XMM0,xmmword ptr [R14]\nMOVUPS xmmword ptr [R15],XMM0\nMOVAPS XMM0,xmmword ptr [RSP + 0x30]\nMOVUPS xmmword ptr [R14],XMM0\nMOV RAX,qword ptr [R14]\nMOV qword ptr [R15],RAX\nMOV RDI,qword ptr [R14 + 0x8]\nCALL 0x00400f40\nMOV RDI,R14\nCALL 0x00400e60\nMOV qword ptr [R13],RBX\nINC dword ptr [RSP]\nDEC EBP\nMOV AL,0x1\nXOR R14D,R14D\nMOV R15,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RSP + 0x10]\nTEST AL,AL\nMOV RCX,R13\nCMOVNZ RCX,R14\nTEST R14,R14\nCMOVNZ R13,RCX\nMOVZX EAX,AL\nADD R12D,EAX\nADD EBP,EAX\nXOR AL,0x1\nMOVZX EAX,AL\nADD EDX,EAX\nTEST RBX,RBX\nJNZ 0x00402b70\nJMP 0x00402c6f\nXOR R12D,R12D\nJMP 0x00402c87\nMOV qword ptr [0x006061f8],RBX\nMOV dword ptr [RSP],0x0\nXOR EBP,EBP\nNOP dword ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [RBX]\nINC EBP\nTEST RBX,RBX\nJNZ 0x00402c50\nXOR EDX,EDX\nMOV R12D,EBP\nJMP 0x00402c6f\nXOR EBP,EBP\nMOV dword ptr [RSP],0x0\nXOR EDX,EDX\nXOR R12D,R12D\nMOV RAX,qword ptr [RSP + 0x18]\nMOV dword ptr [RAX],EBP\nMOV RAX,qword ptr [RSP + 0x20]\nMOV ECX,dword ptr [RSP]\nMOV dword ptr [RAX],ECX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV dword ptr [RAX],EDX\nMOV EAX,R12D\nADD RSP,0x48\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p613
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 48\n48 89 fb\n48 85 db\n0f 84 19 01 00 00\n4c 8b 3d d7 36 20 00\n4d 85 ff\n48 89 4c 24 28\n48 89 54 24 20\n48 89 74 24 18\n0f 84 ff 00 00 00\n4c 89 f8\n0f 1f 40 00\n49 89 c5\n49 8b 45 00\n48 85 c0\n75 f4\n49 89 5d 00\n48 85 db\n0f 84 08 01 00 00\n31 d2\nc7 04 24 00 00 00 00\n31 ed\n45 31 e4\n4c 89 7c 24 08\n0f 1f 40 00\n48 89 54 24 10\n49 89 de\n49 8b 1e\neb 06\n4d 8b 3f\n49 8b 7f 08\n49 8b 76 08\n48 8d 54 24 04\ne8 0b 01 00 00\n85 c0\n75 17\n4d 39 ef\n75 e2\nb0 01\neb 5d\n83 7c 24 04 00\n74 09\n31 c0\neb 44\n41 0f 10 07\n0f 29 44 24 30\n41 0f 10 06\n41 0f 11 07\n0f 28 44 24 30\n41 0f 11 06\n49 8b 06\n49 89 07\n49 8b 7e 08\ne8 57 e3 ff ff\n4c 89 f7\ne8 6f e2 ff ff\n49 89 5d 00\nff 04 24\nff cd\nb0 01\n45 31 f6\n4c 8b 7c 24 08\n48 8b 54 24 10\n84 c0\n4c 89 e9\n49 0f 45 ce\n4d 85 f6\n4c 0f 45 e9\n0f b6 c0\n41 01 c4\n01 c5\n34 01\n0f b6 c0\n01 c2\n48 85 db\n0f 85 3f ff ff ff\neb 3c\n45 31 e4\neb 4f\n48 89 1d b9 35 20 00\nc7 04 24 00 00 00 00\n31 ed\n0f 1f 84 00 00 00 00 00\n48 8b 1b\nff c5\n48 85 db\n75 f6\n31 d2\n41 89 ec\neb 0e\n31 ed\nc7 04 24 00 00 00 00\n31 d2\n45 31 e4\n48 8b 44 24 18\n89 28\n48 8b 44 24 20\n8b 0c 24\n89 08\n48 8b 44 24 28\n89 10\n44 89 e0\n48 83 c4 48\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p614
S'.text:0000000000402b00\n.text:0000000000402b01\n.text:0000000000402b03\n.text:0000000000402b05\n.text:0000000000402b07\n.text:0000000000402b09\n.text:0000000000402b0a\n.text:0000000000402b0e\n.text:0000000000402b11\n.text:0000000000402b14\n.text:0000000000402b1a\n.text:0000000000402b21\n.text:0000000000402b24\n.text:0000000000402b29\n.text:0000000000402b2e\n.text:0000000000402b33\n.text:0000000000402b39\n.text:0000000000402b3c\n.text:0000000000402b40\n.text:0000000000402b43\n.text:0000000000402b47\n.text:0000000000402b4a\n.text:0000000000402b4c\n.text:0000000000402b50\n.text:0000000000402b53\n.text:0000000000402b59\n.text:0000000000402b5b\n.text:0000000000402b62\n.text:0000000000402b64\n.text:0000000000402b67\n.text:0000000000402b6c\n.text:0000000000402b70\n.text:0000000000402b75\n.text:0000000000402b78\n.text:0000000000402b7b\n.text:0000000000402b80\n.text:0000000000402b83\n.text:0000000000402b87\n.text:0000000000402b8b\n.text:0000000000402b90\n.text:0000000000402b95\n.text:0000000000402b97\n.text:0000000000402b99\n.text:0000000000402b9c\n.text:0000000000402b9e\n.text:0000000000402ba0\n.text:0000000000402bb0\n.text:0000000000402bb5\n.text:0000000000402bb7\n.text:0000000000402bb9\n.text:0000000000402bc0\n.text:0000000000402bc4\n.text:0000000000402bc9\n.text:0000000000402bcd\n.text:0000000000402bd1\n.text:0000000000402bd6\n.text:0000000000402bda\n.text:0000000000402bdd\n.text:0000000000402be0\n.text:0000000000402be4\n.text:0000000000402be9\n.text:0000000000402bec\n.text:0000000000402bf1\n.text:0000000000402bf5\n.text:0000000000402bf8\n.text:0000000000402bfa\n.text:0000000000402bfc\n.text:0000000000402bff\n.text:0000000000402c04\n.text:0000000000402c09\n.text:0000000000402c0b\n.text:0000000000402c0e\n.text:0000000000402c12\n.text:0000000000402c15\n.text:0000000000402c19\n.text:0000000000402c1c\n.text:0000000000402c1f\n.text:0000000000402c21\n.text:0000000000402c23\n.text:0000000000402c26\n.text:0000000000402c28\n.text:0000000000402c2b\n.text:0000000000402c31\n.text:0000000000402c33\n.text:0000000000402c36\n.text:0000000000402c38\n.text:0000000000402c3f\n.text:0000000000402c46\n.text:0000000000402c48\n.text:0000000000402c50\n.text:0000000000402c53\n.text:0000000000402c55\n.text:0000000000402c58\n.text:0000000000402c5a\n.text:0000000000402c5c\n.text:0000000000402c5f\n.text:0000000000402c61\n.text:0000000000402c63\n.text:0000000000402c6a\n.text:0000000000402c6c\n.text:0000000000402c6f\n.text:0000000000402c74\n.text:0000000000402c76\n.text:0000000000402c7b\n.text:0000000000402c7e\n.text:0000000000402c80\n.text:0000000000402c85\n.text:0000000000402c87\n.text:0000000000402c8a\n.text:0000000000402c8e\n.text:0000000000402c8f\n.text:0000000000402c91\n.text:0000000000402c93\n.text:0000000000402c95\n.text:0000000000402c97\n.text:0000000000402c98\n'
p615
tp616
s.