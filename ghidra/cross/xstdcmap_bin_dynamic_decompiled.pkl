(dp0
S'XrmInitialize'
p1
(S'\n__stdcall XrmInitialize()\n'
p2
V\u000avoid XrmInitialize(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmInitialize_00602030)();\u000a  return;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x00602030]\n'
p4
S'ff 25 ca 16 20 00\n'
p5
S'.plt:0000000000400960\n'
p6
tp7
sS'FUN_00400920'
p8
(S'\n__stdcall FUN_00400920()\n'
p9
V\u000avoid FUN_00400920(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00602010)();\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH qword ptr [0x00602008]\nJMP qword ptr [0x00602010]\n'
p11
S'ff 35 e2 16 20 00\nff 25 e4 16 20 00\n'
p12
S'.plt:0000000000400920\n.plt:0000000000400926\n'
p13
tp14
sS'__libc_csu_init'
p15
(S'\n__stdcall __libc_csu_init()\n'
p16
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p17
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x601dd8]\nPUSH RBP\nLEA RBP,[0x601de0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400900\nTEST RBP,RBP\nJZ 0x00401516\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00401500\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p18
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 06 09 20 00\n55\n48 8d 2d 06 09 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 0f f4 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p19
S'.text:00000000004014c0\n.text:00000000004014c2\n.text:00000000004014c4\n.text:00000000004014c7\n.text:00000000004014c9\n.text:00000000004014cb\n.text:00000000004014d2\n.text:00000000004014d3\n.text:00000000004014da\n.text:00000000004014db\n.text:00000000004014de\n.text:00000000004014e1\n.text:00000000004014e4\n.text:00000000004014e8\n.text:00000000004014ec\n.text:00000000004014f1\n.text:00000000004014f4\n.text:00000000004014f6\n.text:00000000004014f8\n.text:0000000000401500\n.text:0000000000401503\n.text:0000000000401506\n.text:0000000000401509\n.text:000000000040150d\n.text:0000000000401511\n.text:0000000000401514\n.text:0000000000401516\n.text:000000000040151a\n.text:000000000040151b\n.text:000000000040151c\n.text:000000000040151e\n.text:0000000000401520\n.text:0000000000401522\n.text:0000000000401524\n'
p20
tp21
sS'_init'
p22
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p23
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00601ff8;\u000a  if (PTR___gmon_start___00601ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00601ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p24
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00601ff8]\nTEST RAX,RAX\nJZ 0x00400912\nCALL RAX\nADD RSP,0x8\nRET\n'
p25
S'48 83 ec 08\n48 8b 05 ed 16 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p26
S'.init:0000000000400900\n.init:0000000000400904\n.init:000000000040090b\n.init:000000000040090e\n.init:0000000000400910\n.init:0000000000400912\n.init:0000000000400916\n'
p27
tp28
sS'XOpenDisplay'
p29
(S'\n__stdcall XOpenDisplay()\n'
p30
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_00602060)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x00602060]\n'
p32
S'ff 25 9a 16 20 00\n'
p33
S'.plt:00000000004009c0\n'
p34
tp35
sS'_start'
p36
(S'\n__stdcall _start()\n'
p37
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00601ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p38
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x401530\nMOV RCX,0x4014c0\nMOV RDI,0x400b50\nCALL qword ptr [0x00601ff0]\nHLT\n'
p39
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 30 15 40 00\n48 c7 c1 c0 14 40 00\n48 c7 c7 50 0b 40 00\nff 15 76 15 20 00\nf4\n'
p40
S'.text:0000000000400a50\n.text:0000000000400a52\n.text:0000000000400a55\n.text:0000000000400a56\n.text:0000000000400a59\n.text:0000000000400a5d\n.text:0000000000400a5e\n.text:0000000000400a5f\n.text:0000000000400a66\n.text:0000000000400a6d\n.text:0000000000400a74\n.text:0000000000400a7a\n'
p41
tp42
sS'XrmParseCommand'
p43
(S'\n__stdcall XrmParseCommand()\n'
p44
V\u000avoid XrmParseCommand(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmParseCommand_006020a0)();\u000a  return;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x006020a0]\n'
p46
S'ff 25 5a 16 20 00\n'
p47
S'.plt:0000000000400a40\n'
p48
tp49
sS'usage'
p50
(S'\n__stdcall usage()\n'
p51
V\u000aulong usage(ulong uParm1)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint uVar3;\u000a  XVisualInfo *vinfo;\u000a  char *pcVar4;\u000a  XVisualInfo *pXVar5;\u000a  ulong uVar6;\u000a  ulong uVar7;\u000a  char **ppcVar8;\u000a  undefined auStack148 [4];\u000a  char *pcStack144;\u000a  char *pcStack136;\u000a  FILE *pFStack128;\u000a  undefined auStack120 [16];\u000a  uint uStack104;\u000a  ulong uStack56;\u000a  \u000a  uStack56 = uParm1 & 0xffffffff;\u000a  fprintf(stderr,"usage:  %s [-options]\u005cn\u005cn",program_name);\u000a  fprintf(stderr,"where options include:\u005cn%s\u005cn",\u000a                    \u000a          "    -all               make all standard colormaps for the display\u005cn    -best              make the RGB_BEST_MAP\u005cn    -blue              make the RGB_BLUE_MAP\u005cn    -default           make the RGB_DEFAULT_MAP\u005cn    -delete name       remove a standard colormap\u005cn    -display dpy       X server to use\u005cn    -gray              make the RGB_GRAY_MAP\u005cn    -green             make the RGB_GREEN_MAP\u005cn    -red               make the RGB_RED_MAP\u005cn    -verbose           turn on logging\u005cn    -version           print version info\u005cn"\u000a         );\u000a  Exit(uStack56);\u000a  uVar1 = *(uint *)(dpy + 0xe0);\u000a  uStack104 = uVar1;\u000a  vinfo = (XVisualInfo *)XGetVisualInfo(dpy,2,auStack120,auStack148);\u000a  uVar6 = 0xffffffff;\u000a  ppcVar8 = &propertyTable[0].name;\u000a  uVar7 = 0;\u000a  do {\u000a    if ((*(int *)((long)ppcVar8 + -0xc) == 0) ||\u000a       (XmuDeleteStandardColormap(dpy,(ulong)uVar1,ppcVar8[-1]), verbose == 0)) {\u000a      iVar2 = *(int *)(ppcVar8 + -2);\u000a    }\u000a    else {\u000a      fprintf(stderr,"%s: %s was deleted or did not exist.\u005cn",program_name,*ppcVar8);\u000a      iVar2 = *(int *)(ppcVar8 + -2);\u000a    }\u000a    if (iVar2 != 0) {\u000a      pXVar5 = getBestVisual((Atom)ppcVar8[-1],vinfo);\u000a      if (pXVar5 == (XVisualInfo *)0x0) {\u000a        if (verbose != 0) {\u000a          fprintf(stderr,"%s: no visual appropriate for %s on screen %d.\u005cn",program_name,*ppcVar8,\u000a                  (ulong)uVar1);\u000a        }\u000a      }\u000a      else {\u000a        if (verbose != 0) {\u000a          pFStack128 = stderr;\u000a          pcStack136 = program_name;\u000a          pcStack144 = *ppcVar8;\u000a          pcVar4 = visualStringFromClass();\u000a          fprintf(pFStack128,"%s: making %s on a %s visual of depth %u.\u005cn",pcStack136,pcStack144,\u000a                  pcVar4,(ulong)(uint)pXVar5->depth);\u000a        }\u000a        uVar3 = XmuLookupStandardColormap\u000a                          (dpy,(ulong)uVar1,pXVar5->visualid,(ulong)(uint)pXVar5->depth,ppcVar8[-1],\u000a                           0,1);\u000a        uVar6 = (ulong)uVar3;\u000a        if (verbose != 0) {\u000a          pcVar4 = "cannot be defined";\u000a          if (uVar3 != 0) {\u000a            pcVar4 = "was created or already exists";\u000a          }\u000a          fprintf(stderr,"%s: %s standard colormap %s.\u005cn",program_name,*ppcVar8,pcVar4);\u000a        }\u000a        if (uVar3 == 0) {\u000a          uVar6 = 0;\u000a          goto LAB_0040130d;\u000a        }\u000a      }\u000a    }\u000a    uVar7 = uVar7 + 1;\u000a    ppcVar8 = ppcVar8 + 4;\u000a    if (5 < uVar7) {\u000aLAB_0040130d:\u000a      XFree(vinfo);\u000a      return uVar6;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p52
S'PUSH RBX\nMOV EBX,EDI\nMOV RDI,qword ptr [0x00602300]\nMOV RDX,qword ptr [0x00602310]\nMOV ESI,0x4016ed\nXOR EAX,EAX\nCALL 0x004009d0\nMOV RDI,qword ptr [0x00602300]\nMOV ESI,0x401705\nMOV EDX,0x401720\nXOR EAX,EAX\nCALL 0x004009d0\nMOV EDI,EBX\nCALL 0x00401330\nNOP dword ptr [RAX]\n'
p53
S'53\n89 fb\n48 8b 3d 06 12 20 00\n48 8b 15 0f 12 20 00\nbe ed 16 40 00\n31 c0\ne8 c3 f8 ff ff\n48 8b 3d ec 11 20 00\nbe 05 17 40 00\nba 20 17 40 00\n31 c0\ne8 ab f8 ff ff\n89 df\ne8 04 02 00 00\n0f 1f 40 00\n'
p54
S'.text:00000000004010f0\n.text:00000000004010f1\n.text:00000000004010f3\n.text:00000000004010fa\n.text:0000000000401101\n.text:0000000000401106\n.text:0000000000401108\n.text:000000000040110d\n.text:0000000000401114\n.text:0000000000401119\n.text:000000000040111e\n.text:0000000000401120\n.text:0000000000401125\n.text:0000000000401127\n.text:000000000040112c\n'
p55
tp56
sS'main'
p57
(S'\n__stdcall main(char * * argv)\n'
p58
V\u000aint main(char **argv)\u000a\u000a{\u000a  int iVar1;\u000a  FILE *__stream;\u000a  uint uVar2;\u000a  int iVar3;\u000a  undefined8 uVar4;\u000a  XVisualInfo *vinfo;\u000a  char *pcVar5;\u000a  XVisualInfo *pXVar6;\u000a  char *in_RSI;\u000a  char **ppcVar7;\u000a  ulong uVar8;\u000a  int *piVar9;\u000a  undefined auStack756 [4];\u000a  char *pcStack752;\u000a  char *pcStack744;\u000a  FILE *pFStack736;\u000a  undefined auStack728 [16];\u000a  uint uStack712;\u000a  ulong uStack664;\u000a  char **ppcStack624;\u000a  char **ppcStack616;\u000a  undefined8 uStack600;\u000a  undefined auStack592 [12];\u000a  uint uStack580;\u000a  undefined auStack576 [8];\u000a  char *pcStack568;\u000a  char acStack560 [512];\u000a  ulong uStack48;\u000a  \u000a  program_name = strrchr(*(char **)in_RSI,0x2f);\u000a  if (program_name == (char *)0x0) {\u000a    program_name = *(char **)in_RSI;\u000a  }\u000a  else {\u000a    program_name = program_name + 1;\u000a  }\u000a  parse((char **)((ulong)argv & 0xffffffff));\u000a  if (help == 0) {\u000a    if (version == 0) {\u000a      dpy = (Display *)XOpenDisplay();\u000a      pcVar5 = program_name;\u000a      __stream = stderr;\u000a      if (dpy == (Display *)0x0) {\u000a        uVar4 = XDisplayName(display_name);\u000a        fprintf(__stream,"%s: cannot open display \u005c"%s\u005c".\u005cn",pcVar5,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(1);\u000a      }\u000a      if (all == 0) {\u000a        uVar2 = doIndividualColormaps();\u000a        uStack48 = (ulong)uVar2;\u000a        if ((uVar2 == 0) && (verbose != 0)) {\u000a          in_RSI = (char *)0x33;\u000a          fwrite("Not all new colormap definitions will be retained.\u005cn",0x33,1,stderr);\u000a          uStack48 = 0;\u000a        }\u000a      }\u000a      else {\u000a        if (verbose != 0) {\u000a          in_RSI = "%s: making all appropriate standard colormaps...";\u000a          fprintf(stderr,"%s: making all appropriate standard colormaps...",program_name);\u000a        }\u000a        uVar2 = XmuAllStandardColormaps();\u000a        uStack48 = (ulong)uVar2;\u000a        if (verbose != 0) {\u000a          pcVar5 = "failure";\u000a          if (uVar2 != 0) {\u000a            pcVar5 = "success";\u000a          }\u000a          in_RSI = "\u005cn%s!\u005cn";\u000a          fprintf(stderr,"\u005cn%s!\u005cn",pcVar5);\u000a        }\u000a      }\u000a      uStack580 = (uint)((int)uStack48 == 0);\u000a      Exit();\u000a      uStack600 = 0;\u000a      if (uStack580 == 1) {\u000a        ppcStack616 = (char **)0x4010db;\u000a        usage(0);\u000a      }\u000a      else {\u000a        ppcStack616 = (char **)0x400cdc;\u000a        XrmInitialize();\u000a        ppcStack616 = (char **)0x400cff;\u000a        XrmParseCommand(&uStack600,optionTable,0xc,program_name,&uStack580,in_RSI);\u000a        uStack580 = uStack580 - 1;\u000a        if (uStack580 == 0) {\u000a          ppcStack616 = (char **)0x400d2f;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,&DAT_004015f2);\u000a          ppcStack616 = (char **)0x400d48;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            all = all + 1;\u000a          }\u000a          ppcStack616 = (char **)0x400d78;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".best");\u000a          ppcStack616 = (char **)0x400d91;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            propertyTable[1].create = propertyTable[1].create + 1;\u000a          }\u000a          ppcStack616 = (char **)0x400dc1;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".blue");\u000a          ppcStack616 = (char **)0x400dda;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            propertyTable[5].create = propertyTable[5].create + 1;\u000a          }\u000a          ppcStack616 = (char **)0x400e0a;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".default");\u000a          ppcStack616 = (char **)0x400e23;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            propertyTable[0].create = propertyTable[0].create + 1;\u000a          }\u000a          ppcStack616 = (char **)0x400e53;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".delete");\u000a          ppcStack616 = (char **)0x400e6c;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            uVar8 = 0;\u000a            piVar9 = &propertyTable[0].delete;\u000a            do {\u000a              pcVar5 = pcStack568;\u000a              ppcStack616 = (char **)0x400e91;\u000a              iVar3 = strcmp(pcStack568,*(char **)(piVar9 + 5));\u000a              if (iVar3 == 0) {\u000a                *piVar9 = *piVar9 + 1;\u000a                break;\u000a              }\u000a              if ((((*pcVar5 == 'a') && (pcVar5[1] == 'l')) && (pcVar5[2] == 'l')) &&\u000a                 (pcVar5[3] == 0)) {\u000a                *piVar9 = *piVar9 + 1;\u000a              }\u000a              uVar8 = uVar8 + 1;\u000a              piVar9 = piVar9 + 8;\u000a            } while (uVar8 < 6);\u000a          }\u000a          ppcStack616 = (char **)0x400ee8;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".display");\u000a          ppcStack616 = (char **)0x400f01;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            display_name = pcStack568;\u000a          }\u000a          ppcStack616 = (char **)0x400f37;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".gray");\u000a          ppcStack616 = (char **)0x400f50;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            propertyTable[2].create = propertyTable[2].create + 1;\u000a          }\u000a          ppcStack616 = (char **)0x400f80;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".green");\u000a          ppcStack616 = (char **)0x400f99;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            propertyTable[4].create = propertyTable[4].create + 1;\u000a          }\u000a          ppcStack616 = (char **)0x400fc9;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".help");\u000a          ppcStack616 = (char **)0x400fe2;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            help = help + 1;\u000a          }\u000a          ppcStack616 = (char **)0x401012;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,&DAT_00401630);\u000a          ppcStack616 = (char **)0x40102b;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            propertyTable[3].create = propertyTable[3].create + 1;\u000a          }\u000a          ppcStack616 = (char **)0x40105b;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".verbose");\u000a          ppcStack616 = (char **)0x401074;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            verbose = verbose + 1;\u000a          }\u000a          ppcStack616 = (char **)0x4010a4;\u000a          snprintf(acStack560,0x200,"%s%s",program_name,".version");\u000a          ppcStack616 = (char **)0x4010bd;\u000a          iVar3 = XrmGetResource(uStack600,acStack560,0,auStack592,auStack576);\u000a          if (iVar3 != 0) {\u000a            version = version + 1;\u000a          }\u000a          return iVar3;\u000a        }\u000a      }\u000a      uStack664 = 1;\u000a      ppcStack616 = (char **)0x4010e5;\u000a      usage();\u000a      uStack664 = uStack664 & 0xffffffff;\u000a      ppcStack624 = (char **)0x40110d;\u000a      ppcStack616 = (char **)in_RSI;\u000a      fprintf(stderr,"usage:  %s [-options]\u005cn\u005cn",program_name);\u000a      ppcStack624 = (char **)0x401125;\u000a      fprintf(stderr,"where options include:\u005cn%s\u005cn",\u000a                            \u000a              "    -all               make all standard colormaps for the display\u005cn    -best              make the RGB_BEST_MAP\u005cn    -blue              make the RGB_BLUE_MAP\u005cn    -default           make the RGB_DEFAULT_MAP\u005cn    -delete name       remove a standard colormap\u005cn    -display dpy       X server to use\u005cn    -gray              make the RGB_GRAY_MAP\u005cn    -green             make the RGB_GREEN_MAP\u005cn    -red               make the RGB_RED_MAP\u005cn    -verbose           turn on logging\u005cn    -version           print version info\u005cn"\u000a             );\u000a      ppcStack624 = (char **)0x40112c;\u000a      Exit(uStack664);\u000a      uVar2 = *(uint *)(dpy + 0xe0);\u000a      uStack712 = uVar2;\u000a      ppcStack624 = (char **)((ulong)argv & 0xffffffff);\u000a      vinfo = (XVisualInfo *)XGetVisualInfo(dpy,2,auStack728,auStack756);\u000a      iVar3 = -1;\u000a      ppcVar7 = &propertyTable[0].name;\u000a      uVar8 = 0;\u000a      do {\u000a        if ((*(int *)((long)ppcVar7 + -0xc) == 0) ||\u000a           (XmuDeleteStandardColormap(dpy,(ulong)uVar2,ppcVar7[-1]), verbose == 0)) {\u000a          iVar1 = *(int *)(ppcVar7 + -2);\u000a        }\u000a        else {\u000a          fprintf(stderr,"%s: %s was deleted or did not exist.\u005cn",program_name,*ppcVar7);\u000a          iVar1 = *(int *)(ppcVar7 + -2);\u000a        }\u000a        if (iVar1 != 0) {\u000a          pXVar6 = getBestVisual((Atom)ppcVar7[-1],vinfo);\u000a          if (pXVar6 == (XVisualInfo *)0x0) {\u000a            if (verbose != 0) {\u000a              fprintf(stderr,"%s: no visual appropriate for %s on screen %d.\u005cn",program_name,\u000a                      *ppcVar7,(ulong)uVar2);\u000a            }\u000a          }\u000a          else {\u000a            if (verbose != 0) {\u000a              pFStack736 = stderr;\u000a              pcStack744 = program_name;\u000a              pcStack752 = *ppcVar7;\u000a              pcVar5 = visualStringFromClass();\u000a              fprintf(pFStack736,"%s: making %s on a %s visual of depth %u.\u005cn",pcStack744,pcStack752\u000a                      ,pcVar5,(ulong)(uint)pXVar6->depth);\u000a            }\u000a            iVar3 = XmuLookupStandardColormap\u000a                              (dpy,(ulong)uVar2,pXVar6->visualid,(ulong)(uint)pXVar6->depth,\u000a                               ppcVar7[-1],0,1);\u000a            if (verbose != 0) {\u000a              pcVar5 = "cannot be defined";\u000a              if (iVar3 != 0) {\u000a                pcVar5 = "was created or already exists";\u000a              }\u000a              fprintf(stderr,"%s: %s standard colormap %s.\u005cn",program_name,*ppcVar7,pcVar5);\u000a            }\u000a            if (iVar3 == 0) {\u000a              iVar3 = 0;\u000a              goto LAB_0040130d;\u000a            }\u000a          }\u000a        }\u000a        uVar8 = uVar8 + 1;\u000a        ppcVar7 = ppcVar7 + 4;\u000a        if (5 < uVar8) {\u000aLAB_0040130d:\u000a          XFree(vinfo);\u000a          return iVar3;\u000a        }\u000a      } while( true );\u000a    }\u000a  }\u000a  else {\u000a    usage(0);\u000a  }\u000a  puts("xstdcmap 1.0.3");\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [RBX]\nMOV ESI,0x2f\nCALL 0x00400990\nMOV qword ptr [0x00602310],RAX\nTEST RAX,RAX\nJNZ 0x00400b76\nMOV RAX,qword ptr [RBX]\nJMP 0x00400b79\nINC RAX\nMOV qword ptr [0x00602310],RAX\nMOV EDI,EBP\nMOV RSI,RBX\nCALL 0x00400cb0\nCMP dword ptr [0x00602318],0x0\nJNZ 0x00400bed\nCMP dword ptr [0x0060231c],0x0\nJNZ 0x00400bf4\nMOV RDI,qword ptr [0x00602320]\nCALL 0x004009c0\nMOV qword ptr [0x00602328],RAX\nTEST RAX,RAX\nJNZ 0x00400c05\nMOV RBX,qword ptr [0x00602300]\nMOV RBP,qword ptr [0x00602310]\nMOV RDI,qword ptr [0x00602320]\nCALL 0x004009f0\nMOV RCX,RAX\nMOV ESI,0x401553\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,RBP\nCALL 0x004009d0\nMOV EDI,0x1\nCALL 0x00400a10\nXOR EDI,EDI\nCALL 0x004010f0\nMOV EDI,0x401544\nCALL 0x00400940\nXOR EDI,EDI\nCALL 0x00400a10\nCMP dword ptr [0x00602330],0x0\nJNZ 0x00400c46\nCALL 0x00401130\nMOV EBX,EAX\nTEST EBX,EBX\nJNZ 0x00400ca3\nMOV EAX,dword ptr [0x00602334]\nTEST EAX,EAX\nJZ 0x00400ca3\nMOV RCX,qword ptr [0x00602300]\nMOV EDI,0x4015b9\nMOV ESI,0x33\nMOV EDX,0x1\nCALL 0x00400a20\nXOR EBX,EBX\nJMP 0x00400ca3\nCMP dword ptr [0x00602334],0x0\nJZ 0x00400c69\nMOV RDI,qword ptr [0x00602300]\nMOV RDX,qword ptr [0x00602310]\nMOV ESI,0x401572\nXOR EAX,EAX\nCALL 0x004009d0\nMOV RDI,qword ptr [0x00602328]\nCALL 0x00400a00\nMOV EBX,EAX\nCMP dword ptr [0x00602334],0x0\nJZ 0x00400ca3\nMOV RDI,qword ptr [0x00602300]\nTEST EBX,EBX\nMOV EAX,0x4015a9\nMOV EDX,0x4015b1\nCMOVNZ RDX,RAX\nMOV ESI,0x4015a3\nXOR EAX,EAX\nCALL 0x004009d0\nXOR EDI,EDI\nTEST EBX,EBX\nSETZ DIL\nCALL 0x00401330\n'
p60
S'55\n53\n50\n48 89 f3\n89 fd\n48 8b 3b\nbe 2f 00 00 00\ne8 2b fe ff ff\n48 89 05 a4 17 20 00\n48 85 c0\n75 05\n48 8b 03\neb 03\n48 ff c0\n48 89 05 90 17 20 00\n89 ef\n48 89 de\ne8 26 01 00 00\n83 3d 87 17 20 00 00\n75 5a\n83 3d 82 17 20 00 00\n75 58\n48 8b 3d 7d 17 20 00\ne8 18 fe ff ff\n48 89 05 79 17 20 00\n48 85 c0\n75 51\n48 8b 1d 45 17 20 00\n48 8b 2d 4e 17 20 00\n48 8b 3d 57 17 20 00\ne8 22 fe ff ff\n48 89 c1\nbe 53 15 40 00\n31 c0\n48 89 df\n48 89 ea\ne8 ed fd ff ff\nbf 01 00 00 00\ne8 23 fe ff ff\n31 ff\ne8 fc 04 00 00\nbf 44 15 40 00\ne8 42 fd ff ff\n31 ff\ne8 0b fe ff ff\n83 3d 24 17 20 00 00\n75 38\ne8 1d 05 00 00\n89 c3\n85 db\n0f 85 86 00 00 00\n8b 05 11 17 20 00\n85 c0\n74 7c\n48 8b 0d d2 16 20 00\nbf b9 15 40 00\nbe 33 00 00 00\nba 01 00 00 00\ne8 de fd ff ff\n31 db\neb 5d\n83 3d e7 16 20 00 00\n74 1a\n48 8b 3d aa 16 20 00\n48 8b 15 b3 16 20 00\nbe 72 15 40 00\n31 c0\ne8 67 fd ff ff\n48 8b 3d b8 16 20 00\ne8 8b fd ff ff\n89 c3\n83 3d b6 16 20 00 00\n74 23\n48 8b 3d 79 16 20 00\n85 db\nb8 a9 15 40 00\nba b1 15 40 00\n48 0f 45 d0\nbe a3 15 40 00\n31 c0\ne8 2d fd ff ff\n31 ff\n85 db\n40 0f 94 c7\ne8 80 06 00 00\n'
p61
S'.text:0000000000400b50\n.text:0000000000400b51\n.text:0000000000400b52\n.text:0000000000400b53\n.text:0000000000400b56\n.text:0000000000400b58\n.text:0000000000400b5b\n.text:0000000000400b60\n.text:0000000000400b65\n.text:0000000000400b6c\n.text:0000000000400b6f\n.text:0000000000400b71\n.text:0000000000400b74\n.text:0000000000400b76\n.text:0000000000400b79\n.text:0000000000400b80\n.text:0000000000400b82\n.text:0000000000400b85\n.text:0000000000400b8a\n.text:0000000000400b91\n.text:0000000000400b93\n.text:0000000000400b9a\n.text:0000000000400b9c\n.text:0000000000400ba3\n.text:0000000000400ba8\n.text:0000000000400baf\n.text:0000000000400bb2\n.text:0000000000400bb4\n.text:0000000000400bbb\n.text:0000000000400bc2\n.text:0000000000400bc9\n.text:0000000000400bce\n.text:0000000000400bd1\n.text:0000000000400bd6\n.text:0000000000400bd8\n.text:0000000000400bdb\n.text:0000000000400bde\n.text:0000000000400be3\n.text:0000000000400be8\n.text:0000000000400bed\n.text:0000000000400bef\n.text:0000000000400bf4\n.text:0000000000400bf9\n.text:0000000000400bfe\n.text:0000000000400c00\n.text:0000000000400c05\n.text:0000000000400c0c\n.text:0000000000400c0e\n.text:0000000000400c13\n.text:0000000000400c15\n.text:0000000000400c17\n.text:0000000000400c1d\n.text:0000000000400c23\n.text:0000000000400c25\n.text:0000000000400c27\n.text:0000000000400c2e\n.text:0000000000400c33\n.text:0000000000400c38\n.text:0000000000400c3d\n.text:0000000000400c42\n.text:0000000000400c44\n.text:0000000000400c46\n.text:0000000000400c4d\n.text:0000000000400c4f\n.text:0000000000400c56\n.text:0000000000400c5d\n.text:0000000000400c62\n.text:0000000000400c64\n.text:0000000000400c69\n.text:0000000000400c70\n.text:0000000000400c75\n.text:0000000000400c77\n.text:0000000000400c7e\n.text:0000000000400c80\n.text:0000000000400c87\n.text:0000000000400c89\n.text:0000000000400c8e\n.text:0000000000400c93\n.text:0000000000400c97\n.text:0000000000400c9c\n.text:0000000000400c9e\n.text:0000000000400ca3\n.text:0000000000400ca5\n.text:0000000000400ca7\n.text:0000000000400cab\n'
p62
tp63
sS'XmuLookupStandardColormap'
p64
(S'\n__stdcall XmuLookupStandardColormap()\n'
p65
V\u000avoid XmuLookupStandardColormap(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuLookupStandardColormap_00602018)();\u000a  return;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00602018]\n'
p67
S'ff 25 e2 16 20 00\n'
p68
S'.plt:0000000000400930\n'
p69
tp70
sS'XGetVisualInfo'
p71
(S'\n__stdcall XGetVisualInfo()\n'
p72
V\u000avoid XGetVisualInfo(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetVisualInfo_00602050)();\u000a  return;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00602050]\n'
p74
S'ff 25 aa 16 20 00\n'
p75
S'.plt:00000000004009a0\n'
p76
tp77
sS'deregister_tm_clones'
p78
(S'\n__stdcall deregister_tm_clones()\n'
p79
V\u000a/* WARNING: Removing unreachable block (ram,0x00400a95) */\u000a/* WARNING: Removing unreachable block (ram,0x00400a9f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p80
S'MOV EAX,0x602307\nPUSH RBP\nSUB RAX,0x602300\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400ab0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400ab0\nPOP RBP\nMOV EDI,0x602300\nJMP RAX\nPOP RBP\nRET\n'
p81
S'b8 07 23 60 00\n55\n48 2d 00 23 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 00 23 60 00\nff e0\n5d\nc3\n'
p82
S'.text:0000000000400a80\n.text:0000000000400a85\n.text:0000000000400a86\n.text:0000000000400a8c\n.text:0000000000400a90\n.text:0000000000400a93\n.text:0000000000400a95\n.text:0000000000400a9a\n.text:0000000000400a9d\n.text:0000000000400a9f\n.text:0000000000400aa0\n.text:0000000000400aa5\n.text:0000000000400ab0\n.text:0000000000400ab1\n'
p83
tp84
sS'XDisplayName'
p85
(S'\n__stdcall XDisplayName()\n'
p86
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_00602078)();\u000a  return;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00602078]\n'
p88
S'ff 25 82 16 20 00\n'
p89
S'.plt:00000000004009f0\n'
p90
tp91
sS'XrmGetResource'
p92
(S'\n__stdcall XrmGetResource()\n'
p93
V\u000avoid XrmGetResource(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmGetResource_00602028)();\u000a  return;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00602028]\n'
p95
S'ff 25 d2 16 20 00\n'
p96
S'.plt:0000000000400950\n'
p97
tp98
sS'doIndividualColormaps'
p99
(S'\n__stdcall doIndividualColormaps()\n'
p100
V\u000aint doIndividualColormaps(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  XVisualInfo *vinfo;\u000a  char *pcVar4;\u000a  XVisualInfo *pXVar5;\u000a  ulong uVar6;\u000a  char **ppcVar7;\u000a  XVisualInfo template;\u000a  undefined local_8c [4];\u000a  char *local_88;\u000a  char *local_80;\u000a  FILE *local_78;\u000a  undefined local_70 [16];\u000a  uint local_60;\u000a  \u000a  uVar1 = *(uint *)(dpy + 0xe0);\u000a  local_60 = uVar1;\u000a  vinfo = (XVisualInfo *)XGetVisualInfo(dpy,2,local_70,local_8c);\u000a  iVar3 = -1;\u000a  ppcVar7 = &propertyTable[0].name;\u000a  uVar6 = 0;\u000a  do {\u000a    if ((*(int *)((long)ppcVar7 + -0xc) == 0) ||\u000a       (XmuDeleteStandardColormap(dpy,(ulong)uVar1,ppcVar7[-1]), verbose == 0)) {\u000a      iVar2 = *(int *)(ppcVar7 + -2);\u000a    }\u000a    else {\u000a      fprintf(stderr,"%s: %s was deleted or did not exist.\u005cn",program_name,*ppcVar7);\u000a      iVar2 = *(int *)(ppcVar7 + -2);\u000a    }\u000a    if (iVar2 != 0) {\u000a      pXVar5 = getBestVisual((Atom)ppcVar7[-1],vinfo);\u000a      if (pXVar5 == (XVisualInfo *)0x0) {\u000a        if (verbose != 0) {\u000a          fprintf(stderr,"%s: no visual appropriate for %s on screen %d.\u005cn",program_name,*ppcVar7,\u000a                  (ulong)uVar1);\u000a        }\u000a      }\u000a      else {\u000a        if (verbose != 0) {\u000a          local_78 = stderr;\u000a          local_80 = program_name;\u000a          local_88 = *ppcVar7;\u000a          pcVar4 = visualStringFromClass();\u000a          fprintf(local_78,"%s: making %s on a %s visual of depth %u.\u005cn",local_80,local_88,pcVar4,\u000a                  (ulong)(uint)pXVar5->depth);\u000a        }\u000a        iVar3 = XmuLookupStandardColormap\u000a                          (dpy,(ulong)uVar1,pXVar5->visualid,(ulong)(uint)pXVar5->depth,ppcVar7[-1],\u000a                           0,1);\u000a        if (verbose != 0) {\u000a          pcVar4 = "cannot be defined";\u000a          if (iVar3 != 0) {\u000a            pcVar4 = "was created or already exists";\u000a          }\u000a          fprintf(stderr,"%s: %s standard colormap %s.\u005cn",program_name,*ppcVar7,pcVar4);\u000a        }\u000a        if (iVar3 == 0) {\u000a          iVar3 = 0;\u000a          goto LAB_0040130d;\u000a        }\u000a      }\u000a    }\u000a    uVar6 = uVar6 + 1;\u000a    ppcVar7 = ppcVar7 + 4;\u000a    if (5 < uVar6) {\u000aLAB_0040130d:\u000a      XFree(vinfo);\u000a      return iVar3;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p101
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x68\nMOV RDI,qword ptr [0x00602328]\nMOV R15D,dword ptr [0xe0 + RDI]\nMOV dword ptr [RSP + 0x38],R15D\nLEA RDX,[RSP + 0x28]\nLEA RCX,[RSP + 0xc]\nMOV ESI,0x2\nCALL 0x004009a0\nMOV R14,RAX\nMOV EBP,0xffffffff\nMOV R13D,0x602250\nXOR R12D,R12D\nJMP 0x00401260\nMOV RDI,qword ptr [0x00602300]\nMOV RDX,qword ptr [0x00602310]\nMOV RCX,qword ptr [R13]\nMOV ESI,0x40191f\nXOR EAX,EAX\nCALL 0x004009d0\nCMP dword ptr [R13 + -0x10],0x0\nJNZ 0x0040128e\nJMP 0x004012f8\nMOV RAX,qword ptr [0x00602300]\nMOV qword ptr [RSP + 0x20],RAX\nMOV RAX,qword ptr [0x00602310]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [R13]\nMOV qword ptr [RSP + 0x10],RAX\nMOV EDI,dword ptr [RBX + 0x18]\nCALL 0x00401470\nMOV RBP,RAX\nMOV R9D,dword ptr [RBX + 0x14]\nMOV ESI,0x401975\nXOR EAX,EAX\nMOV RDI,qword ptr [RSP + 0x20]\nMOV RDX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP + 0x10]\nMOV R8,RBP\nCALL 0x004009d0\nJMP 0x004012b4\nTEST EBP,EBP\nMOV RDI,qword ptr [0x00602300]\nMOV RDX,qword ptr [0x00602310]\nMOV RCX,qword ptr [R13]\nMOV R8D,0x4019dc\nMOV EAX,0x4019be\nCMOVNZ R8,RAX\nMOV ESI,0x4019a0\nXOR EAX,EAX\nCALL 0x004009d0\nTEST EBP,EBP\nJNZ 0x004012f8\nJMP 0x0040130b\nMOV RDI,qword ptr [0x00602300]\nMOV RDX,qword ptr [0x00602310]\nMOV RCX,qword ptr [R13]\nMOV ESI,0x401945\nXOR EAX,EAX\nMOV R8D,R15D\nCALL 0x004009d0\nJMP 0x004012f8\nCMP dword ptr [R13 + -0xc],0x0\nJZ 0x00401287\nMOV RDI,qword ptr [0x00602328]\nMOV RDX,qword ptr [R13 + -0x8]\nMOV ESI,R15D\nCALL 0x004009e0\nCMP dword ptr [0x00602334],0x0\nJNZ 0x0040117b\nCMP dword ptr [R13 + -0x10],0x0\nJZ 0x004012f8\nMOV RDI,qword ptr [R13 + -0x8]\nMOV EDX,dword ptr [RSP + 0xc]\nMOV RSI,R14\nCALL 0x00401350\nMOV RBX,RAX\nMOV EAX,dword ptr [0x00602334]\nTEST RBX,RBX\nJZ 0x004012f0\nTEST EAX,EAX\nJNZ 0x004011a9\nMOV RDI,qword ptr [0x00602328]\nMOV RDX,qword ptr [RBX + 0x8]\nMOV ECX,dword ptr [RBX + 0x14]\nMOV R8,qword ptr [R13 + -0x8]\nMOV dword ptr [RSP],0x1\nXOR R9D,R9D\nMOV ESI,R15D\nCALL 0x00400930\nMOV EBP,EAX\nCMP dword ptr [0x00602334],0x0\nJNZ 0x004011fc\nTEST EBP,EBP\nJNZ 0x004012f8\nJMP 0x0040130b\nTEST EAX,EAX\nJNZ 0x00401238\nINC R12\nADD R13,0x20\nCMP R12,0x6\nJC 0x00401260\nJMP 0x0040130d\nXOR EBP,EBP\nMOV RDI,R14\nCALL 0x00400970\nMOV EAX,EBP\nADD RSP,0x68\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p102
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 68\n48 8b 3d e3 11 20 00\n44 8b bf e0 00 00 00\n44 89 7c 24 38\n48 8d 54 24 28\n48 8d 4c 24 0c\nbe 02 00 00 00\ne8 3b f8 ff ff\n49 89 c6\nbd ff ff ff ff\n41 bd 50 22 60 00\n45 31 e4\ne9 e5 00 00 00\n48 8b 3d 7e 11 20 00\n48 8b 15 87 11 20 00\n49 8b 4d 00\nbe 1f 19 40 00\n31 c0\ne8 37 f8 ff ff\n41 83 7d f0 00\n0f 85 ea 00 00 00\ne9 4f 01 00 00\n48 8b 05 50 11 20 00\n48 89 44 24 20\n48 8b 05 54 11 20 00\n48 89 44 24 18\n49 8b 45 00\n48 89 44 24 10\n8b 7b 18\ne8 9e 02 00 00\n48 89 c5\n44 8b 4b 14\nbe 75 19 40 00\n31 c0\n48 8b 7c 24 20\n48 8b 54 24 18\n48 8b 4c 24 10\n49 89 e8\ne8 d9 f7 ff ff\ne9 b8 00 00 00\n85 ed\n48 8b 3d fb 10 20 00\n48 8b 15 04 11 20 00\n49 8b 4d 00\n41 b8 dc 19 40 00\nb8 be 19 40 00\n4c 0f 45 c0\nbe a0 19 40 00\n31 c0\ne8 a5 f7 ff ff\n85 ed\n0f 85 c5 00 00 00\ne9 d3 00 00 00\n48 8b 3d c1 10 20 00\n48 8b 15 ca 10 20 00\n49 8b 4d 00\nbe 45 19 40 00\n31 c0\n45 89 f8\ne8 77 f7 ff ff\ne9 9a 00 00 00\n41 83 7d f4 00\n74 20\n48 8b 3d ba 10 20 00\n49 8b 55 f8\n44 89 fe\ne8 66 f7 ff ff\n83 3d b3 10 20 00 00\n0f 85 f4 fe ff ff\n41 83 7d f0 00\n74 6a\n49 8b 7d f8\n8b 54 24 0c\n4c 89 f6\ne8 b2 00 00 00\n48 89 c3\n8b 05 8d 10 20 00\n48 85 db\n74 44\n85 c0\n0f 85 f5 fe ff ff\n48 8b 3d 6d 10 20 00\n48 8b 53 08\n8b 4b 14\n4d 8b 45 f8\nc7 04 24 01 00 00 00\n45 31 c9\n44 89 fe\ne8 58 f6 ff ff\n89 c5\n83 3d 53 10 20 00 00\n0f 85 15 ff ff ff\n85 ed\n75 0d\neb 1e\n85 c0\n0f 85 40 ff ff ff\n49 ff c4\n49 83 c5 20\n49 83 fc 06\n0f 82 57 ff ff ff\neb 02\n31 ed\n4c 89 f7\ne8 5b f6 ff ff\n89 e8\n48 83 c4 68\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p103
S'.text:0000000000401130\n.text:0000000000401131\n.text:0000000000401133\n.text:0000000000401135\n.text:0000000000401137\n.text:0000000000401139\n.text:000000000040113a\n.text:000000000040113e\n.text:0000000000401145\n.text:000000000040114c\n.text:0000000000401151\n.text:0000000000401156\n.text:000000000040115b\n.text:0000000000401160\n.text:0000000000401165\n.text:0000000000401168\n.text:000000000040116d\n.text:0000000000401173\n.text:0000000000401176\n.text:000000000040117b\n.text:0000000000401182\n.text:0000000000401189\n.text:000000000040118d\n.text:0000000000401192\n.text:0000000000401194\n.text:0000000000401199\n.text:000000000040119e\n.text:00000000004011a4\n.text:00000000004011a9\n.text:00000000004011b0\n.text:00000000004011b5\n.text:00000000004011bc\n.text:00000000004011c1\n.text:00000000004011c5\n.text:00000000004011ca\n.text:00000000004011cd\n.text:00000000004011d2\n.text:00000000004011d5\n.text:00000000004011d9\n.text:00000000004011de\n.text:00000000004011e0\n.text:00000000004011e5\n.text:00000000004011ea\n.text:00000000004011ef\n.text:00000000004011f2\n.text:00000000004011f7\n.text:00000000004011fc\n.text:00000000004011fe\n.text:0000000000401205\n.text:000000000040120c\n.text:0000000000401210\n.text:0000000000401216\n.text:000000000040121b\n.text:000000000040121f\n.text:0000000000401224\n.text:0000000000401226\n.text:000000000040122b\n.text:000000000040122d\n.text:0000000000401233\n.text:0000000000401238\n.text:000000000040123f\n.text:0000000000401246\n.text:000000000040124a\n.text:000000000040124f\n.text:0000000000401251\n.text:0000000000401254\n.text:0000000000401259\n.text:0000000000401260\n.text:0000000000401265\n.text:0000000000401267\n.text:000000000040126e\n.text:0000000000401272\n.text:0000000000401275\n.text:000000000040127a\n.text:0000000000401281\n.text:0000000000401287\n.text:000000000040128c\n.text:000000000040128e\n.text:0000000000401292\n.text:0000000000401296\n.text:0000000000401299\n.text:000000000040129e\n.text:00000000004012a1\n.text:00000000004012a7\n.text:00000000004012aa\n.text:00000000004012ac\n.text:00000000004012ae\n.text:00000000004012b4\n.text:00000000004012bb\n.text:00000000004012bf\n.text:00000000004012c2\n.text:00000000004012c6\n.text:00000000004012cd\n.text:00000000004012d0\n.text:00000000004012d3\n.text:00000000004012d8\n.text:00000000004012da\n.text:00000000004012e1\n.text:00000000004012e7\n.text:00000000004012e9\n.text:00000000004012eb\n.text:00000000004012f0\n.text:00000000004012f2\n.text:00000000004012f8\n.text:00000000004012fb\n.text:00000000004012ff\n.text:0000000000401303\n.text:0000000000401309\n.text:000000000040130b\n.text:000000000040130d\n.text:0000000000401310\n.text:0000000000401315\n.text:0000000000401317\n.text:000000000040131b\n.text:000000000040131c\n.text:000000000040131e\n.text:0000000000401320\n.text:0000000000401322\n.text:0000000000401324\n.text:0000000000401325\n'
p104
tp105
sS'XFree'
p106
(S'\n__stdcall XFree()\n'
p107
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_00602038)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00602038]\n'
p109
S'ff 25 c2 16 20 00\n'
p110
S'.plt:0000000000400970\n'
p111
tp112
sS'frame_dummy'
p113
(S'\n__stdcall frame_dummy()\n'
p114
V\u000a/* WARNING: Removing unreachable block (ram,0x00400b3a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p115
S'MOV EDI,0x601de8\nCMP qword ptr [RDI],0x0\nJNZ 0x00400b30\nJMP 0x00400ac0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400b2b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400ac0\n'
p116
S'bf e8 1d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p117
S'.text:0000000000400b20\n.text:0000000000400b25\n.text:0000000000400b29\n.text:0000000000400b2b\n.text:0000000000400b30\n.text:0000000000400b35\n.text:0000000000400b38\n.text:0000000000400b3a\n.text:0000000000400b3b\n.text:0000000000400b3e\n.text:0000000000400b40\n.text:0000000000400b41\n'
p118
tp119
sS'snprintf'
p120
(S'\n__stdcall snprintf(char * __s, size_t __maxlen, char * __format)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint snprintf(char *__s,size_t __maxlen,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_snprintf_00602040)();\u000a  return iVar1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00602040]\n'
p123
S'ff 25 ba 16 20 00\n'
p124
S'.plt:0000000000400980\n'
p125
tp126
sS'Exit'
p127
(S'\n__stdcall Exit()\n'
p128
V\u000avoid Exit(int iParm1)\u000a\u000a{\u000a  if (dpy != (Display *)0x0) {\u000a    XCloseDisplay();\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p129
S'PUSH RBX\nMOV EBX,EDI\nMOV RDI,qword ptr [0x00602328]\nTEST RDI,RDI\nJZ 0x00401344\nCALL 0x00400a30\nMOV EDI,EBX\nCALL 0x00400a10\n'
p130
S'53\n89 fb\n48 8b 3d ee 0f 20 00\n48 85 ff\n74 05\ne8 ec f6 ff ff\n89 df\ne8 c5 f6 ff ff\n'
p131
S'.text:0000000000401330\n.text:0000000000401331\n.text:0000000000401333\n.text:000000000040133a\n.text:000000000040133d\n.text:000000000040133f\n.text:0000000000401344\n.text:0000000000401346\n'
p132
tp133
sS'strcmp'
p134
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00602058)();\u000a  return iVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00602058]\n'
p137
S'ff 25 a2 16 20 00\n'
p138
S'.plt:00000000004009b0\n'
p139
tp140
sS'register_tm_clones'
p141
(S'\n__stdcall register_tm_clones()\n'
p142
V\u000a/* WARNING: Removing unreachable block (ram,0x00400ae3) */\u000a/* WARNING: Removing unreachable block (ram,0x00400aed) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p143
S'MOV ESI,0x602300\nPUSH RBP\nSUB RSI,0x602300\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400af8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400af8\nPOP RBP\nMOV EDI,0x602300\nJMP RAX\nPOP RBP\nRET\n'
p144
S'be 00 23 60 00\n55\n48 81 ee 00 23 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 00 23 60 00\nff e0\n5d\nc3\n'
p145
S'.text:0000000000400ac0\n.text:0000000000400ac5\n.text:0000000000400ac6\n.text:0000000000400acd\n.text:0000000000400ad1\n.text:0000000000400ad4\n.text:0000000000400ad7\n.text:0000000000400adb\n.text:0000000000400ade\n.text:0000000000400ae1\n.text:0000000000400ae3\n.text:0000000000400ae8\n.text:0000000000400aeb\n.text:0000000000400aed\n.text:0000000000400aee\n.text:0000000000400af3\n.text:0000000000400af8\n.text:0000000000400af9\n'
p146
tp147
sS'XmuAllStandardColormaps'
p148
(S'\n__stdcall XmuAllStandardColormaps()\n'
p149
V\u000avoid XmuAllStandardColormaps(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuAllStandardColormaps_00602080)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00602080]\n'
p151
S'ff 25 7a 16 20 00\n'
p152
S'.plt:0000000000400a00\n'
p153
tp154
sS'visualStringFromClass'
p155
(S'\n__stdcall visualStringFromClass()\n'
p156
V\u000achar * visualStringFromClass(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if (in_EDI < 6) {\u000a    return (&PTR_s_StaticGray_00401a50)[(long)(int)in_EDI];\u000a  }\u000a  return "unknown visual class";\u000a}\u000a\u000a
p157
S'CMP EDI,0x5\nJA 0x00401481\nMOVSXD RAX,EDI\nMOV RAX,qword ptr [0x401a50 + RAX*0x8]\nRET\nMOV EAX,0x401a31\nRET\n'
p158
S'83 ff 05\n77 0c\n48 63 c7\n48 8b 04 c5 50 1a 40 00\nc3\nb8 31 1a 40 00\nc3\n'
p159
S'.text:0000000000401470\n.text:0000000000401473\n.text:0000000000401475\n.text:0000000000401478\n.text:0000000000401480\n.text:0000000000401481\n.text:0000000000401486\n'
p160
tp161
sS'fwrite'
p162
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00602090)();\u000a  return sVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00602090]\n'
p165
S'ff 25 6a 16 20 00\n'
p166
S'.plt:0000000000400a20\n'
p167
tp168
sS'parse'
p169
(S'\n__stdcall parse(char * * argv)\n'
p170
V\u000avoid parse(char **argv)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  XVisualInfo *vinfo;\u000a  char *pcVar3;\u000a  XVisualInfo *pXVar4;\u000a  char **ppcVar5;\u000a  ulong uVar6;\u000a  int *piVar7;\u000a  char option [512];\u000a  undefined auStack732 [4];\u000a  char *pcStack728;\u000a  char *pcStack720;\u000a  FILE *pFStack712;\u000a  undefined auStack704 [16];\u000a  uint uStack688;\u000a  ulong uStack640;\u000a  undefined8 uStack592;\u000a  undefined8 local_240;\u000a  undefined local_238 [12];\u000a  int local_22c;\u000a  undefined local_228 [8];\u000a  char *local_220;\u000a  char local_218 [512];\u000a  \u000a  local_22c = (int)argv;\u000a  local_240 = 0;\u000a  if (local_22c == 1) {\u000a    uStack592 = 0x4010db;\u000a    usage(0);\u000a  }\u000a  else {\u000a    uStack592 = 0x400cdc;\u000a    XrmInitialize();\u000a    uStack592 = 0x400cff;\u000a    XrmParseCommand(&local_240,optionTable,0xc,program_name,&local_22c);\u000a    local_22c = local_22c + -1;\u000a    if (local_22c == 0) {\u000a      uStack592 = 0x400d2f;\u000a      snprintf(local_218,0x200,"%s%s",program_name,&DAT_004015f2);\u000a      uStack592 = 0x400d48;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        all = all + 1;\u000a      }\u000a      uStack592 = 0x400d78;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".best");\u000a      uStack592 = 0x400d91;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        propertyTable[1].create = propertyTable[1].create + 1;\u000a      }\u000a      uStack592 = 0x400dc1;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".blue");\u000a      uStack592 = 0x400dda;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        propertyTable[5].create = propertyTable[5].create + 1;\u000a      }\u000a      uStack592 = 0x400e0a;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".default");\u000a      uStack592 = 0x400e23;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        propertyTable[0].create = propertyTable[0].create + 1;\u000a      }\u000a      uStack592 = 0x400e53;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".delete");\u000a      uStack592 = 0x400e6c;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        uVar6 = 0;\u000a        piVar7 = &propertyTable[0].delete;\u000a        do {\u000a          pcVar3 = local_220;\u000a          uStack592 = 0x400e91;\u000a          iVar2 = strcmp(local_220,*(char **)(piVar7 + 5));\u000a          if (iVar2 == 0) {\u000a            *piVar7 = *piVar7 + 1;\u000a            break;\u000a          }\u000a          if ((((*pcVar3 == 'a') && (pcVar3[1] == 'l')) && (pcVar3[2] == 'l')) && (pcVar3[3] == 0))\u000a          {\u000a            *piVar7 = *piVar7 + 1;\u000a          }\u000a          uVar6 = uVar6 + 1;\u000a          piVar7 = piVar7 + 8;\u000a        } while (uVar6 < 6);\u000a      }\u000a      uStack592 = 0x400ee8;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".display");\u000a      uStack592 = 0x400f01;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        display_name = local_220;\u000a      }\u000a      uStack592 = 0x400f37;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".gray");\u000a      uStack592 = 0x400f50;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        propertyTable[2].create = propertyTable[2].create + 1;\u000a      }\u000a      uStack592 = 0x400f80;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".green");\u000a      uStack592 = 0x400f99;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        propertyTable[4].create = propertyTable[4].create + 1;\u000a      }\u000a      uStack592 = 0x400fc9;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".help");\u000a      uStack592 = 0x400fe2;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        help = help + 1;\u000a      }\u000a      uStack592 = 0x401012;\u000a      snprintf(local_218,0x200,"%s%s",program_name,&DAT_00401630);\u000a      uStack592 = 0x40102b;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        propertyTable[3].create = propertyTable[3].create + 1;\u000a      }\u000a      uStack592 = 0x40105b;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".verbose");\u000a      uStack592 = 0x401074;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        verbose = verbose + 1;\u000a      }\u000a      uStack592 = 0x4010a4;\u000a      snprintf(local_218,0x200,"%s%s",program_name,".version");\u000a      uStack592 = 0x4010bd;\u000a      iVar2 = XrmGetResource(local_240,local_218,0,local_238,local_228);\u000a      if (iVar2 != 0) {\u000a        version = version + 1;\u000a      }\u000a      return;\u000a    }\u000a  }\u000a  uStack640 = 1;\u000a  uStack592 = 0x4010e5;\u000a  usage();\u000a  uStack640 = uStack640 & 0xffffffff;\u000a  fprintf(stderr,"usage:  %s [-options]\u005cn\u005cn",program_name);\u000a  fprintf(stderr,"where options include:\u005cn%s\u005cn",\u000a                    \u000a          "    -all               make all standard colormaps for the display\u005cn    -best              make the RGB_BEST_MAP\u005cn    -blue              make the RGB_BLUE_MAP\u005cn    -default           make the RGB_DEFAULT_MAP\u005cn    -delete name       remove a standard colormap\u005cn    -display dpy       X server to use\u005cn    -gray              make the RGB_GRAY_MAP\u005cn    -green             make the RGB_GREEN_MAP\u005cn    -red               make the RGB_RED_MAP\u005cn    -verbose           turn on logging\u005cn    -version           print version info\u005cn"\u000a         );\u000a  Exit(uStack640);\u000a  uVar1 = *(uint *)(dpy + 0xe0);\u000a  uStack688 = uVar1;\u000a  vinfo = (XVisualInfo *)XGetVisualInfo(dpy,2,auStack704,auStack732);\u000a  ppcVar5 = &propertyTable[0].name;\u000a  uVar6 = 0;\u000a  do {\u000a    if ((*(int *)((long)ppcVar5 + -0xc) == 0) ||\u000a       (XmuDeleteStandardColormap(dpy,(ulong)uVar1,ppcVar5[-1]), verbose == 0)) {\u000a      iVar2 = *(int *)(ppcVar5 + -2);\u000a    }\u000a    else {\u000a      fprintf(stderr,"%s: %s was deleted or did not exist.\u005cn",program_name,*ppcVar5);\u000a      iVar2 = *(int *)(ppcVar5 + -2);\u000a    }\u000a    if (iVar2 != 0) {\u000a      pXVar4 = getBestVisual((Atom)ppcVar5[-1],vinfo);\u000a      if (pXVar4 == (XVisualInfo *)0x0) {\u000a        if (verbose != 0) {\u000a          fprintf(stderr,"%s: no visual appropriate for %s on screen %d.\u005cn",program_name,*ppcVar5,\u000a                  (ulong)uVar1);\u000a        }\u000a      }\u000a      else {\u000a        if (verbose != 0) {\u000a          pFStack712 = stderr;\u000a          pcStack720 = program_name;\u000a          pcStack728 = *ppcVar5;\u000a          pcVar3 = visualStringFromClass();\u000a          fprintf(pFStack712,"%s: making %s on a %s visual of depth %u.\u005cn",pcStack720,pcStack728,\u000a                  pcVar3,(ulong)(uint)pXVar4->depth);\u000a        }\u000a        iVar2 = XmuLookupStandardColormap\u000a                          (dpy,(ulong)uVar1,pXVar4->visualid,(ulong)(uint)pXVar4->depth,ppcVar5[-1],\u000a                           0,1);\u000a        if (verbose != 0) {\u000a          pcVar3 = "cannot be defined";\u000a          if (iVar2 != 0) {\u000a            pcVar3 = "was created or already exists";\u000a          }\u000a          fprintf(stderr,"%s: %s standard colormap %s.\u005cn",program_name,*ppcVar5,pcVar3);\u000a        }\u000a        if (iVar2 == 0) break;\u000a      }\u000a    }\u000a    uVar6 = uVar6 + 1;\u000a    ppcVar5 = ppcVar5 + 4;\u000a  } while (uVar6 < 6);\u000a  XFree(vinfo);\u000a  return;\u000a}\u000a\u000a
p171
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x230\nMOV RBX,RSI\nMOV dword ptr [RSP + 0x1c],EDI\nMOV qword ptr [RSP + 0x8],0x0\nCMP dword ptr [RSP + 0x1c],0x1\nJZ 0x004010d4\nCALL 0x00400960\nMOV RCX,qword ptr [0x00602310]\nLEA RDI,[RSP + 0x8]\nLEA R8,[RSP + 0x1c]\nMOV ESI,0x6020c0\nMOV EDX,0xc\nMOV R9,RBX\nCALL 0x00400a40\nDEC dword ptr [RSP + 0x1c]\nJNZ 0x004010db\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x4015f2\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400d52\nINC dword ptr [0x00602330]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x4015f7\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400d9b\nINC dword ptr [0x00602260]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x4015fd\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400de4\nINC dword ptr [0x006022e0]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x401603\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400e2d\nINC dword ptr [0x00602240]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x40160c\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400ec2\nXOR R14D,R14D\nMOV R15D,0x602244\nNOP dword ptr [RAX]\nMOV RBX,qword ptr [RSP + 0x28]\nMOV RSI,qword ptr [R15 + 0x14]\nMOV RDI,RBX\nCALL 0x004009b0\nTEST EAX,EAX\nJZ 0x00400ebf\nCMP byte ptr [RBX],0x61\nJNZ 0x00400eb0\nCMP byte ptr [RBX + 0x1],0x6c\nJNZ 0x00400eb0\nCMP byte ptr [RBX + 0x2],0x6c\nJNZ 0x00400eb0\nCMP byte ptr [RBX + 0x3],0x0\nJNZ 0x00400eb0\nINC dword ptr [R15]\nNOP\nINC R14\nADD R15,0x20\nCMP R14,0x6\nJC 0x00400e80\nJMP 0x00400ec2\nINC dword ptr [R15]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x401614\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400f11\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [0x00602320],RAX\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x40161d\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400f5a\nINC dword ptr [0x00602280]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x401623\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400fa3\nINC dword ptr [0x006022c0]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x40162a\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00400fec\nINC dword ptr [0x00602318]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x401630\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x00401035\nINC dword ptr [0x006022a0]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x401635\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x0040107e\nINC dword ptr [0x00602334]\nMOV RCX,qword ptr [0x00602310]\nLEA RBX,[RSP + 0x30]\nMOV ESI,0x200\nMOV EDX,0x4015ed\nMOV R8D,0x40163e\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00400980\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x20]\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x00400950\nTEST EAX,EAX\nJZ 0x004010c7\nINC dword ptr [0x0060231c]\nADD RSP,0x230\nPOP RBX\nPOP R14\nPOP R15\nRET\nXOR EDI,EDI\nCALL 0x004010f0\nMOV EDI,0x1\nCALL 0x004010f0\nNOP dword ptr CS:[RAX + RAX*0x1]\n'
p172
S'41 57\n41 56\n53\n48 81 ec 30 02 00 00\n48 89 f3\n89 7c 24 1c\n48 c7 44 24 08 00 00 00 00\n83 7c 24 1c 01\n0f 84 fd 03 00 00\ne8 84 fc ff ff\n48 8b 0d 2d 16 20 00\n48 8d 7c 24 08\n4c 8d 44 24 1c\nbe c0 20 60 00\nba 0c 00 00 00\n49 89 d9\ne8 41 fd ff ff\nff 4c 24 1c\n0f 85 d2 03 00 00\n48 8b 0d 00 16 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 f2 15 40 00\n31 c0\n48 89 df\ne8 51 fc ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 08 fc ff ff\n85 c0\n74 06\nff 05 de 15 20 00\n48 8b 0d b7 15 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 f7 15 40 00\n31 c0\n48 89 df\ne8 08 fc ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 bf fb ff ff\n85 c0\n74 06\nff 05 c5 14 20 00\n48 8b 0d 6e 15 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 fd 15 40 00\n31 c0\n48 89 df\ne8 bf fb ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 76 fb ff ff\n85 c0\n74 06\nff 05 fc 14 20 00\n48 8b 0d 25 15 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 03 16 40 00\n31 c0\n48 89 df\ne8 76 fb ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 2d fb ff ff\n85 c0\n74 06\nff 05 13 14 20 00\n48 8b 0d dc 14 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 0c 16 40 00\n31 c0\n48 89 df\ne8 2d fb ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 e4 fa ff ff\n85 c0\n74 52\n45 31 f6\n41 bf 44 22 60 00\n0f 1f 80 00 00 00 00\n48 8b 5c 24 28\n49 8b 77 14\n48 89 df\ne8 1f fb ff ff\n85 c0\n74 2a\n80 3b 61\n75 16\n80 7b 01 6c\n75 10\n80 7b 02 6c\n75 0a\n80 7b 03 00\n75 04\n41 ff 07\n90\n49 ff c6\n49 83 c7 20\n49 83 fe 06\n72 c3\neb 03\n41 ff 07\n48 8b 0d 47 14 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 14 16 40 00\n31 c0\n48 89 df\ne8 98 fa ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 4f fa ff ff\n85 c0\n74 0c\n48 8b 44 24 28\n48 89 05 0f 14 20 00\n48 8b 0d f8 13 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 1d 16 40 00\n31 c0\n48 89 df\ne8 49 fa ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 00 fa ff ff\n85 c0\n74 06\nff 05 26 13 20 00\n48 8b 0d af 13 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 23 16 40 00\n31 c0\n48 89 df\ne8 00 fa ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 b7 f9 ff ff\n85 c0\n74 06\nff 05 1d 13 20 00\n48 8b 0d 66 13 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 2a 16 40 00\n31 c0\n48 89 df\ne8 b7 f9 ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 6e f9 ff ff\n85 c0\n74 06\nff 05 2c 13 20 00\n48 8b 0d 1d 13 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 30 16 40 00\n31 c0\n48 89 df\ne8 6e f9 ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 25 f9 ff ff\n85 c0\n74 06\nff 05 6b 12 20 00\n48 8b 0d d4 12 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 35 16 40 00\n31 c0\n48 89 df\ne8 25 f9 ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 dc f8 ff ff\n85 c0\n74 06\nff 05 b6 12 20 00\n48 8b 0d 8b 12 20 00\n48 8d 5c 24 30\nbe 00 02 00 00\nba ed 15 40 00\n41 b8 3e 16 40 00\n31 c0\n48 89 df\ne8 dc f8 ff ff\n48 8b 7c 24 08\n48 8d 4c 24 10\n4c 8d 44 24 20\n31 d2\n48 89 de\ne8 93 f8 ff ff\n85 c0\n74 06\nff 05 55 12 20 00\n48 81 c4 30 02 00 00\n5b\n41 5e\n41 5f\nc3\n31 ff\ne8 15 00 00 00\nbf 01 00 00 00\ne8 0b 00 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n'
p173
S'.text:0000000000400cb0\n.text:0000000000400cb2\n.text:0000000000400cb4\n.text:0000000000400cb5\n.text:0000000000400cbc\n.text:0000000000400cbf\n.text:0000000000400cc3\n.text:0000000000400ccc\n.text:0000000000400cd1\n.text:0000000000400cd7\n.text:0000000000400cdc\n.text:0000000000400ce3\n.text:0000000000400ce8\n.text:0000000000400ced\n.text:0000000000400cf2\n.text:0000000000400cf7\n.text:0000000000400cfa\n.text:0000000000400cff\n.text:0000000000400d03\n.text:0000000000400d09\n.text:0000000000400d10\n.text:0000000000400d15\n.text:0000000000400d1a\n.text:0000000000400d1f\n.text:0000000000400d25\n.text:0000000000400d27\n.text:0000000000400d2a\n.text:0000000000400d2f\n.text:0000000000400d34\n.text:0000000000400d39\n.text:0000000000400d3e\n.text:0000000000400d40\n.text:0000000000400d43\n.text:0000000000400d48\n.text:0000000000400d4a\n.text:0000000000400d4c\n.text:0000000000400d52\n.text:0000000000400d59\n.text:0000000000400d5e\n.text:0000000000400d63\n.text:0000000000400d68\n.text:0000000000400d6e\n.text:0000000000400d70\n.text:0000000000400d73\n.text:0000000000400d78\n.text:0000000000400d7d\n.text:0000000000400d82\n.text:0000000000400d87\n.text:0000000000400d89\n.text:0000000000400d8c\n.text:0000000000400d91\n.text:0000000000400d93\n.text:0000000000400d95\n.text:0000000000400d9b\n.text:0000000000400da2\n.text:0000000000400da7\n.text:0000000000400dac\n.text:0000000000400db1\n.text:0000000000400db7\n.text:0000000000400db9\n.text:0000000000400dbc\n.text:0000000000400dc1\n.text:0000000000400dc6\n.text:0000000000400dcb\n.text:0000000000400dd0\n.text:0000000000400dd2\n.text:0000000000400dd5\n.text:0000000000400dda\n.text:0000000000400ddc\n.text:0000000000400dde\n.text:0000000000400de4\n.text:0000000000400deb\n.text:0000000000400df0\n.text:0000000000400df5\n.text:0000000000400dfa\n.text:0000000000400e00\n.text:0000000000400e02\n.text:0000000000400e05\n.text:0000000000400e0a\n.text:0000000000400e0f\n.text:0000000000400e14\n.text:0000000000400e19\n.text:0000000000400e1b\n.text:0000000000400e1e\n.text:0000000000400e23\n.text:0000000000400e25\n.text:0000000000400e27\n.text:0000000000400e2d\n.text:0000000000400e34\n.text:0000000000400e39\n.text:0000000000400e3e\n.text:0000000000400e43\n.text:0000000000400e49\n.text:0000000000400e4b\n.text:0000000000400e4e\n.text:0000000000400e53\n.text:0000000000400e58\n.text:0000000000400e5d\n.text:0000000000400e62\n.text:0000000000400e64\n.text:0000000000400e67\n.text:0000000000400e6c\n.text:0000000000400e6e\n.text:0000000000400e70\n.text:0000000000400e73\n.text:0000000000400e79\n.text:0000000000400e80\n.text:0000000000400e85\n.text:0000000000400e89\n.text:0000000000400e8c\n.text:0000000000400e91\n.text:0000000000400e93\n.text:0000000000400e95\n.text:0000000000400e98\n.text:0000000000400e9a\n.text:0000000000400e9e\n.text:0000000000400ea0\n.text:0000000000400ea4\n.text:0000000000400ea6\n.text:0000000000400eaa\n.text:0000000000400eac\n.text:0000000000400eaf\n.text:0000000000400eb0\n.text:0000000000400eb3\n.text:0000000000400eb7\n.text:0000000000400ebb\n.text:0000000000400ebd\n.text:0000000000400ebf\n.text:0000000000400ec2\n.text:0000000000400ec9\n.text:0000000000400ece\n.text:0000000000400ed3\n.text:0000000000400ed8\n.text:0000000000400ede\n.text:0000000000400ee0\n.text:0000000000400ee3\n.text:0000000000400ee8\n.text:0000000000400eed\n.text:0000000000400ef2\n.text:0000000000400ef7\n.text:0000000000400ef9\n.text:0000000000400efc\n.text:0000000000400f01\n.text:0000000000400f03\n.text:0000000000400f05\n.text:0000000000400f0a\n.text:0000000000400f11\n.text:0000000000400f18\n.text:0000000000400f1d\n.text:0000000000400f22\n.text:0000000000400f27\n.text:0000000000400f2d\n.text:0000000000400f2f\n.text:0000000000400f32\n.text:0000000000400f37\n.text:0000000000400f3c\n.text:0000000000400f41\n.text:0000000000400f46\n.text:0000000000400f48\n.text:0000000000400f4b\n.text:0000000000400f50\n.text:0000000000400f52\n.text:0000000000400f54\n.text:0000000000400f5a\n.text:0000000000400f61\n.text:0000000000400f66\n.text:0000000000400f6b\n.text:0000000000400f70\n.text:0000000000400f76\n.text:0000000000400f78\n.text:0000000000400f7b\n.text:0000000000400f80\n.text:0000000000400f85\n.text:0000000000400f8a\n.text:0000000000400f8f\n.text:0000000000400f91\n.text:0000000000400f94\n.text:0000000000400f99\n.text:0000000000400f9b\n.text:0000000000400f9d\n.text:0000000000400fa3\n.text:0000000000400faa\n.text:0000000000400faf\n.text:0000000000400fb4\n.text:0000000000400fb9\n.text:0000000000400fbf\n.text:0000000000400fc1\n.text:0000000000400fc4\n.text:0000000000400fc9\n.text:0000000000400fce\n.text:0000000000400fd3\n.text:0000000000400fd8\n.text:0000000000400fda\n.text:0000000000400fdd\n.text:0000000000400fe2\n.text:0000000000400fe4\n.text:0000000000400fe6\n.text:0000000000400fec\n.text:0000000000400ff3\n.text:0000000000400ff8\n.text:0000000000400ffd\n.text:0000000000401002\n.text:0000000000401008\n.text:000000000040100a\n.text:000000000040100d\n.text:0000000000401012\n.text:0000000000401017\n.text:000000000040101c\n.text:0000000000401021\n.text:0000000000401023\n.text:0000000000401026\n.text:000000000040102b\n.text:000000000040102d\n.text:000000000040102f\n.text:0000000000401035\n.text:000000000040103c\n.text:0000000000401041\n.text:0000000000401046\n.text:000000000040104b\n.text:0000000000401051\n.text:0000000000401053\n.text:0000000000401056\n.text:000000000040105b\n.text:0000000000401060\n.text:0000000000401065\n.text:000000000040106a\n.text:000000000040106c\n.text:000000000040106f\n.text:0000000000401074\n.text:0000000000401076\n.text:0000000000401078\n.text:000000000040107e\n.text:0000000000401085\n.text:000000000040108a\n.text:000000000040108f\n.text:0000000000401094\n.text:000000000040109a\n.text:000000000040109c\n.text:000000000040109f\n.text:00000000004010a4\n.text:00000000004010a9\n.text:00000000004010ae\n.text:00000000004010b3\n.text:00000000004010b5\n.text:00000000004010b8\n.text:00000000004010bd\n.text:00000000004010bf\n.text:00000000004010c1\n.text:00000000004010c7\n.text:00000000004010ce\n.text:00000000004010cf\n.text:00000000004010d1\n.text:00000000004010d3\n.text:00000000004010d4\n.text:00000000004010d6\n.text:00000000004010db\n.text:00000000004010e0\n.text:00000000004010e5\n'
p174
tp175
sS'XCloseDisplay'
p176
(S'\n__stdcall XCloseDisplay()\n'
p177
V\u000avoid XCloseDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XCloseDisplay_00602098)();\u000a  return;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00602098]\n'
p179
S'ff 25 62 16 20 00\n'
p180
S'.plt:0000000000400a30\n'
p181
tp182
sS'getBestVisual'
p183
(S'\n__stdcall getBestVisual(Atom property, XVisualInfo * vinfo)\n'
p184
V\u000aXVisualInfo * getBestVisual(Atom property,XVisualInfo *vinfo)\u000a\u000a{\u000a  XVisualInfo *pXVar1;\u000a  XVisualInfo *pXVar2;\u000a  XVisualInfo *vinfo_00;\u000a  \u000a  if (vinfo == (XVisualInfo *)0x0) {\u000a    vinfo_00 = (XVisualInfo *)0x0;\u000a  }\u000a  else {\u000a    pXVar1 = getDeepestVisual((XVisualInfo *)0x5);\u000a    pXVar2 = getDeepestVisual((XVisualInfo *)0x3);\u000a    if (pXVar2 == (XVisualInfo *)0x0) {\u000a      vinfo_00 = pXVar1;\u000a      if (pXVar1 == (XVisualInfo *)0x0) {\u000a        if (property == 0x19) {\u000a          vinfo_00 = getDeepestVisual((XVisualInfo *)0x4);\u000a          if (vinfo_00 == (XVisualInfo *)0x0) {\u000a            vinfo_00 = (XVisualInfo *)0x2;\u000aLAB_00401453:\u000a            vinfo_00 = getDeepestVisual(vinfo_00);\u000a            return vinfo_00;\u000a          }\u000a        }\u000a        else {\u000a          if (property == 0x1c) {\u000a            vinfo_00 = getDeepestVisual((XVisualInfo *)0x1);\u000a            if (vinfo_00 == (XVisualInfo *)0x0) {\u000a              vinfo_00 = (XVisualInfo *)0x0;\u000a              goto LAB_00401453;\u000a            }\u000a          }\u000a          else {\u000a            if (property == 0x1b) {\u000a              vinfo_00 = vinfo + -1;\u000a              do {\u000a                pXVar1 = vinfo_00 + 1;\u000a                pXVar2 = vinfo_00 + 1;\u000a                vinfo_00 = vinfo_00 + 1;\u000a              } while (pXVar1->visual !=\u000a                       *(Visual **)(*(long *)(dpy + 0xe8) + 0x40 + (long)pXVar2->screen * 0x80));\u000a            }\u000a            else {\u000a              vinfo_00 = (XVisualInfo *)0x0;\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      vinfo_00 = pXVar2;\u000a      if ((pXVar1 != (XVisualInfo *)0x0) &&\u000a         (vinfo_00 = pXVar1,\u000a         (pXVar1->green_mask | pXVar1->red_mask | pXVar1->blue_mask) + 1 <=\u000a         (ulong)(long)pXVar2->colormap_size)) {\u000a        vinfo_00 = pXVar2;\u000a      }\u000a    }\u000a  }\u000a  return vinfo_00;\u000a}\u000a\u000a
p185
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,EDX\nMOV RBX,RSI\nMOV R15,RDI\nTEST RBX,RBX\nJZ 0x004013ae\nMOV EDI,0x5\nMOV RSI,RBX\nMOV EDX,R14D\nCALL 0x00401490\nMOV RBP,RAX\nMOV EDI,0x3\nMOV RSI,RBX\nMOV EDX,R14D\nCALL 0x00401490\nTEST RAX,RAX\nJZ 0x004013b2\nTEST RBP,RBP\nJZ 0x00401409\nMOVSXD RCX,dword ptr [RAX + 0x38]\nMOV RDX,qword ptr [RBP + 0x28]\nOR RDX,qword ptr [RBP + 0x20]\nOR RDX,qword ptr [RBP + 0x30]\nINC RDX\nCMP RCX,RDX\nCMOVNC RBP,RAX\nJMP 0x0040140c\nXOR EBP,EBP\nJMP 0x0040140c\nTEST RBP,RBP\nJNZ 0x0040140c\nCMP R15,0x19\nJZ 0x0040141a\nCMP R15,0x1c\nJZ 0x00401439\nCMP R15,0x1b\nJNZ 0x00401465\nMOV RAX,qword ptr [0x00602328]\nMOV RAX,qword ptr [0xe8 + RAX]\nADD RBX,-0x40\nMOV RBP,RBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RCX,qword ptr [RBP + 0x40]\nMOVSXD RDX,dword ptr [RBP + 0x50]\nLEA RBP,[RBP + 0x40]\nSHL RDX,0x7\nCMP RCX,qword ptr [RAX + RDX*0x1 + 0x40]\nJNZ 0x004013f0\nJMP 0x0040140c\nMOV RBP,RAX\nMOV RAX,RBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x4\nMOV RSI,RBX\nMOV EDX,R14D\nCALL 0x00401490\nMOV RBP,RAX\nTEST RBP,RBP\nJNZ 0x0040140c\nMOV EDI,0x2\nJMP 0x00401453\nMOV EDI,0x1\nMOV RSI,RBX\nMOV EDX,R14D\nCALL 0x00401490\nMOV RBP,RAX\nTEST RBP,RBP\nJNZ 0x0040140c\nXOR EDI,EDI\nMOV RSI,RBX\nMOV EDX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00401490\nXOR EBP,EBP\nJMP 0x0040140c\n'
p186
S'55\n41 57\n41 56\n53\n50\n41 89 d6\n48 89 f3\n49 89 ff\n48 85 db\n74 49\nbf 05 00 00 00\n48 89 de\n44 89 f2\ne8 1b 01 00 00\n48 89 c5\nbf 03 00 00 00\n48 89 de\n44 89 f2\ne8 08 01 00 00\n48 85 c0\n74 25\n48 85 ed\n74 77\n48 63 48 38\n48 8b 55 28\n48 0b 55 20\n48 0b 55 30\n48 ff c2\n48 39 d1\n48 0f 43 e8\neb 5e\n31 ed\neb 5a\n48 85 ed\n75 55\n49 83 ff 19\n74 5d\n49 83 ff 1c\n74 76\n49 83 ff 1b\n0f 85 98 00 00 00\n48 8b 05 54 0f 20 00\n48 8b 80 e8 00 00 00\n48 83 c3 c0\n48 89 dd\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 4d 40\n48 63 55 50\n48 8d 6d 40\n48 c1 e2 07\n48 3b 4c 10 40\n75 e9\neb 03\n48 89 c5\n48 89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\nbf 04 00 00 00\n48 89 de\n44 89 f2\ne8 66 00 00 00\n48 89 c5\n48 85 ed\n75 da\nbf 02 00 00 00\neb 1a\nbf 01 00 00 00\n48 89 de\n44 89 f2\ne8 47 00 00 00\n48 89 c5\n48 85 ed\n75 bb\n31 ff\n48 89 de\n44 89 f2\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 2b\n31 ed\neb a3\n'
p187
S'.text:0000000000401350\n.text:0000000000401351\n.text:0000000000401353\n.text:0000000000401355\n.text:0000000000401356\n.text:0000000000401357\n.text:000000000040135a\n.text:000000000040135d\n.text:0000000000401360\n.text:0000000000401363\n.text:0000000000401365\n.text:000000000040136a\n.text:000000000040136d\n.text:0000000000401370\n.text:0000000000401375\n.text:0000000000401378\n.text:000000000040137d\n.text:0000000000401380\n.text:0000000000401383\n.text:0000000000401388\n.text:000000000040138b\n.text:000000000040138d\n.text:0000000000401390\n.text:0000000000401392\n.text:0000000000401396\n.text:000000000040139a\n.text:000000000040139e\n.text:00000000004013a2\n.text:00000000004013a5\n.text:00000000004013a8\n.text:00000000004013ac\n.text:00000000004013ae\n.text:00000000004013b0\n.text:00000000004013b2\n.text:00000000004013b5\n.text:00000000004013b7\n.text:00000000004013bb\n.text:00000000004013bd\n.text:00000000004013c1\n.text:00000000004013c3\n.text:00000000004013c7\n.text:00000000004013cd\n.text:00000000004013d4\n.text:00000000004013db\n.text:00000000004013df\n.text:00000000004013e2\n.text:00000000004013f0\n.text:00000000004013f4\n.text:00000000004013f8\n.text:00000000004013fc\n.text:0000000000401400\n.text:0000000000401405\n.text:0000000000401407\n.text:0000000000401409\n.text:000000000040140c\n.text:000000000040140f\n.text:0000000000401413\n.text:0000000000401414\n.text:0000000000401416\n.text:0000000000401418\n.text:0000000000401419\n.text:000000000040141a\n.text:000000000040141f\n.text:0000000000401422\n.text:0000000000401425\n.text:000000000040142a\n.text:000000000040142d\n.text:0000000000401430\n.text:0000000000401432\n.text:0000000000401437\n.text:0000000000401439\n.text:000000000040143e\n.text:0000000000401441\n.text:0000000000401444\n.text:0000000000401449\n.text:000000000040144c\n.text:000000000040144f\n.text:0000000000401451\n.text:0000000000401453\n.text:0000000000401456\n.text:0000000000401459\n.text:000000000040145d\n.text:000000000040145e\n.text:0000000000401460\n.text:0000000000401462\n.text:0000000000401463\n.text:0000000000401465\n.text:0000000000401467\n'
p188
tp189
sS'fprintf'
p190
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p191
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00602068)();\u000a  return iVar1;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00602068]\n'
p193
S'ff 25 92 16 20 00\n'
p194
S'.plt:00000000004009d0\n'
p195
tp196
sS'puts'
p197
(S'\n__stdcall puts(char * __s)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00602020)();\u000a  return iVar1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x00602020]\n'
p200
S'ff 25 da 16 20 00\n'
p201
S'.plt:0000000000400940\n'
p202
tp203
sS'exit'
p204
(S'\n__stdcall exit(int __status)\n'
p205
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00602088)();\u000a  return;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00602088]\n'
p207
S'ff 25 72 16 20 00\n'
p208
S'.plt:0000000000400a10\n'
p209
tp210
sS'__libc_csu_fini'
p211
(S'\n__stdcall __libc_csu_fini()\n'
p212
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p213
S'RET\n'
p214
S'f3 c3\n'
p215
S'.text:0000000000401530\n'
p216
tp217
sS'XmuDeleteStandardColormap'
p218
(S'\n__stdcall XmuDeleteStandardColormap()\n'
p219
V\u000avoid XmuDeleteStandardColormap(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuDeleteStandardColormap_00602070)();\u000a  return;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x00602070]\n'
p221
S'ff 25 8a 16 20 00\n'
p222
S'.plt:00000000004009e0\n'
p223
tp224
sS'strrchr'
p225
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_00602048)();\u000a  return pcVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x00602048]\n'
p228
S'ff 25 b2 16 20 00\n'
p229
S'.plt:0000000000400990\n'
p230
tp231
sS'__do_global_dtors_aux'
p232
(S'\n__stdcall __do_global_dtors_aux()\n'
p233
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p234
S'CMP byte ptr [0x00602308],0x0\nJNZ 0x00400b1a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400a80\nPOP RBP\nMOV byte ptr [0x00602308],0x1\nRET\n'
p235
S'80 3d 01 18 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 ee 17 20 00 01\nf3 c3\n'
p236
S'.text:0000000000400b00\n.text:0000000000400b07\n.text:0000000000400b09\n.text:0000000000400b0a\n.text:0000000000400b0d\n.text:0000000000400b12\n.text:0000000000400b13\n.text:0000000000400b1a\n'
p237
tp238
sS'_fini'
p239
(S'\n__stdcall _fini()\n'
p240
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p241
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p242
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p243
S'.fini:0000000000401534\n.fini:0000000000401538\n.fini:000000000040153c\n'
p244
tp245
sS'getDeepestVisual'
p246
(S'\n__stdcall getDeepestVisual(XVisualInfo * vinfo)\n'
p247
V\u000aXVisualInfo * getDeepestVisual(XVisualInfo *vinfo)\u000a\u000a{\u000a  XVisualInfo *pXVar1;\u000a  int in_EDX;\u000a  XVisualInfo *in_RSI;\u000a  uint uVar2;\u000a  \u000a  uVar2 = 0;\u000a  pXVar1 = (XVisualInfo *)0x0;\u000a  if (0 < in_EDX) {\u000a    do {\u000a      if ((in_RSI->class == (int)vinfo) && (uVar2 < (uint)in_RSI->depth)) {\u000a        pXVar1 = in_RSI;\u000a        uVar2 = in_RSI->depth;\u000a      }\u000a      in_RSI = in_RSI + 1;\u000a      in_EDX = in_EDX + -1;\u000a    } while (in_EDX != 0);\u000a  }\u000a  return pXVar1;\u000a}\u000a\u000a
p248
S'XOR R8D,R8D\nXOR EAX,EAX\nTEST EDX,EDX\nJLE 0x004014bb\nNOP dword ptr [RAX]\nCMP dword ptr [RSI + 0x18],EDI\nJNZ 0x004014b3\nMOV ECX,dword ptr [RSI + 0x14]\nCMP ECX,R8D\nCMOVA R8D,ECX\nCMOVA RAX,RSI\nADD RSI,0x40\nDEC EDX\nJNZ 0x004014a0\nRET\n'
p249
S'45 31 c0\n31 c0\n85 d2\n7e 22\n0f 1f 80 00 00 00 00\n39 7e 18\n75 0e\n8b 4e 14\n44 39 c1\n44 0f 47 c1\n48 0f 47 c6\n48 83 c6 40\nff ca\n75 e5\nc3\n'
p250
S'.text:0000000000401490\n.text:0000000000401493\n.text:0000000000401495\n.text:0000000000401497\n.text:0000000000401499\n.text:00000000004014a0\n.text:00000000004014a3\n.text:00000000004014a5\n.text:00000000004014a8\n.text:00000000004014ab\n.text:00000000004014af\n.text:00000000004014b3\n.text:00000000004014b7\n.text:00000000004014b9\n.text:00000000004014bb\n'
p251
tp252
s.