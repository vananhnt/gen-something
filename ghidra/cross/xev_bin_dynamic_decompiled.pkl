(dp0
S'XRRFreeOutputInfo'
p1
(S'\n__stdcall XRRFreeOutputInfo()\n'
p2
V\u000avoid XRRFreeOutputInfo(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRFreeOutputInfo_00606050)();\u000a  return;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x00606050]\n'
p4
S'ff 25 2a 4f 20 00\n'
p5
S'.plt:0000000000401120\n'
p6
tp7
sS'do_UnmapNotify'
p8
(S'\n__stdcall do_UnmapNotify(XEvent * eventp)\n'
p9
V\u000avoid do_UnmapNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x30) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    event 0x%lx, window 0x%lx, from_configure %s\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p10
S'MOV RSI,qword ptr [RDI + 0x20]\nMOV RDX,qword ptr [RDI + 0x28]\nCMP dword ptr [RDI + 0x30],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV EDI,0x404ac8\nXOR EAX,EAX\nJMP 0x00401180\n'
p11
S'48 8b 77 20\n48 8b 57 28\n83 7f 30 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\nbf c8 4a 40 00\n31 c0\ne9 b7 e5 ff ff\n'
p12
S'.text:0000000000402ba0\n.text:0000000000402ba4\n.text:0000000000402ba8\n.text:0000000000402bac\n.text:0000000000402bb1\n.text:0000000000402bb6\n.text:0000000000402bba\n.text:0000000000402bbd\n.text:0000000000402bc2\n.text:0000000000402bc4\n'
p13
tp14
sS'__libc_csu_init'
p15
(S'\n__stdcall __libc_csu_init()\n'
p16
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p17
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x605de8]\nPUSH RBP\nLEA RBP,[0x605df0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401088\nTEST RBP,RBP\nJZ 0x00403836\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00403820\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p18
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 f6 25 20 00\n55\n48 8d 2d f6 25 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 77 d8 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p19
S'.text:00000000004037e0\n.text:00000000004037e2\n.text:00000000004037e4\n.text:00000000004037e7\n.text:00000000004037e9\n.text:00000000004037eb\n.text:00000000004037f2\n.text:00000000004037f3\n.text:00000000004037fa\n.text:00000000004037fb\n.text:00000000004037fe\n.text:0000000000403801\n.text:0000000000403804\n.text:0000000000403808\n.text:000000000040380c\n.text:0000000000403811\n.text:0000000000403814\n.text:0000000000403816\n.text:0000000000403818\n.text:0000000000403820\n.text:0000000000403823\n.text:0000000000403826\n.text:0000000000403829\n.text:000000000040382d\n.text:0000000000403831\n.text:0000000000403834\n.text:0000000000403836\n.text:000000000040383a\n.text:000000000040383b\n.text:000000000040383c\n.text:000000000040383e\n.text:0000000000403840\n.text:0000000000403842\n.text:0000000000403844\n'
p20
tp21
sS'do_RRNotify'
p22
(S'\n__stdcall do_RRNotify(XEvent * eventp)\n'
p23
V\u000avoid do_RRNotify(XEvent *eventp)\u000a\u000a{\u000a  int iVar1;\u000a  XRRScreenResources *screen_resources;\u000a  \u000a  XRRUpdateConfiguration();\u000a  screen_resources =\u000a       (XRRScreenResources *)XRRGetScreenResources(dpy,*(undefined8 *)(*eventp + 0x20));\u000a  prologue(eventp,"RRNotify");\u000a  iVar1 = *(int *)(*eventp + 0x28);\u000a  if (iVar1 == 0) {\u000a    do_RRNotify_CrtcChange(eventp,screen_resources);\u000a  }\u000a  else {\u000a    if (iVar1 == 2) {\u000a      do_RRNotify_OutputProperty(eventp,screen_resources);\u000a    }\u000a    else {\u000a      if (iVar1 == 1) {\u000a        do_RRNotify_OutputChange(eventp,screen_resources);\u000a      }\u000a      else {\u000a        printf("    subtype %d\u005cn");\u000a      }\u000a    }\u000a  }\u000a  (*(code *)PTR_XRRFreeScreenResources_006060b0)(screen_resources);\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401130\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x20]\nCALL 0x004011a0\nMOV R14,RAX\nMOV ESI,0x4050db\nMOV RDI,RBX\nCALL 0x00402430\nMOV ESI,dword ptr [RBX + 0x28]\nTEST ESI,ESI\nJZ 0x0040330a\nCMP ESI,0x2\nJZ 0x00403317\nCMP ESI,0x1\nJNZ 0x00403324\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00403470\nJMP 0x00403330\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x004035d0\nJMP 0x00403330\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x004036b0\nJMP 0x00403330\nMOV EDI,0x4050e4\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x004011e0\n'
p25
S'41 56\n53\n50\n48 89 fb\ne8 64 de ff ff\n48 8b 3d 55 2f 20 00\n48 8b 73 20\ne8 c4 de ff ff\n49 89 c6\nbe db 50 40 00\n48 89 df\ne8 44 f1 ff ff\n8b 73 28\n85 f6\n74 17\n83 fe 02\n74 1f\n83 fe 01\n75 27\n48 89 df\n4c 89 f6\ne8 68 01 00 00\neb 26\n48 89 df\n4c 89 f6\ne8 bb 02 00 00\neb 19\n48 89 df\n4c 89 f6\ne8 8e 03 00 00\neb 0c\nbf e4 50 40 00\n31 c0\ne8 50 de ff ff\n4c 89 f7\n48 83 c4 08\n5b\n41 5e\ne9 a1 de ff ff\n'
p26
S'.text:00000000004032c0\n.text:00000000004032c2\n.text:00000000004032c3\n.text:00000000004032c4\n.text:00000000004032c7\n.text:00000000004032cc\n.text:00000000004032d3\n.text:00000000004032d7\n.text:00000000004032dc\n.text:00000000004032df\n.text:00000000004032e4\n.text:00000000004032e7\n.text:00000000004032ec\n.text:00000000004032ef\n.text:00000000004032f1\n.text:00000000004032f3\n.text:00000000004032f6\n.text:00000000004032f8\n.text:00000000004032fb\n.text:00000000004032fd\n.text:0000000000403300\n.text:0000000000403303\n.text:0000000000403308\n.text:000000000040330a\n.text:000000000040330d\n.text:0000000000403310\n.text:0000000000403315\n.text:0000000000403317\n.text:000000000040331a\n.text:000000000040331d\n.text:0000000000403322\n.text:0000000000403324\n.text:0000000000403329\n.text:000000000040332b\n.text:0000000000403330\n.text:0000000000403333\n.text:0000000000403337\n.text:0000000000403338\n.text:000000000040333a\n'
p27
tp28
sS'usage'
p29
(S'\n__stdcall usage(char * errmsg)\n'
p30
V\u000avoid usage(char *errmsg)\u000a\u000a{\u000a  char *msg [17];\u000a  char *pcVar1;\u000a  char **ppcVar2;\u000a  \u000a  if (errmsg != (char *)0x0) {\u000a    fprintf(stderr,"%s: %s\u005cn",ProgramName);\u000a  }\u000a  fprintf(stderr,"usage:  %s [-options ...]\u005cn",ProgramName);\u000a  fwrite("where options include:\u005cn",0x17,1,stderr);\u000a  pcVar1 = "    -display displayname                X server to contact";\u000a  ppcVar2 = (char **)&ram0x00403a50;\u000a  do {\u000a    ppcVar2 = ppcVar2 + 1;\u000a    fprintf(stderr,"%s\u005cn",pcVar1);\u000a    pcVar1 = *ppcVar2;\u000a  } while (pcVar1 != (char *)0x0);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p31
S'PUSH RBX\nMOV RCX,RDI\nTEST RCX,RCX\nJZ 0x00402153\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x404576\nXOR EAX,EAX\nCALL 0x004011f0\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x40457e\nXOR EAX,EAX\nCALL 0x004011f0\nMOV RCX,qword ptr [0x00606200]\nMOV EDI,0x404599\nMOV ESI,0x17\nMOV EDX,0x1\nCALL 0x00401360\nMOV EDX,0x4041de\nMOV EBX,0x403a58\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [0x00606200]\nMOV ESI,0x40457a\nXOR EAX,EAX\nCALL 0x004011f0\nMOV RDX,qword ptr [RBX]\nADD RBX,0x8\nTEST RDX,RDX\nJNZ 0x004021a0\nMOV EDI,0x1\nCALL 0x00401350\n'
p32
S'53\n48 89 f9\n48 85 c9\n74 1a\n48 8b 3d c0 40 20 00\n48 8b 15 01 41 20 00\nbe 76 45 40 00\n31 c0\ne8 9d f0 ff ff\n48 8b 3d a6 40 20 00\n48 8b 15 e7 40 20 00\nbe 7e 45 40 00\n31 c0\ne8 83 f0 ff ff\n48 8b 0d 8c 40 20 00\nbf 99 45 40 00\nbe 17 00 00 00\nba 01 00 00 00\ne8 d8 f1 ff ff\nba de 41 40 00\nbb 58 3a 40 00\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 3d 59 40 20 00\nbe 7a 45 40 00\n31 c0\ne8 3d f0 ff ff\n48 8b 13\n48 83 c3 08\n48 85 d2\n75 e1\nbf 01 00 00 00\ne8 87 f1 ff ff\n'
p33
S'.text:0000000000402130\n.text:0000000000402131\n.text:0000000000402134\n.text:0000000000402137\n.text:0000000000402139\n.text:0000000000402140\n.text:0000000000402147\n.text:000000000040214c\n.text:000000000040214e\n.text:0000000000402153\n.text:000000000040215a\n.text:0000000000402161\n.text:0000000000402166\n.text:0000000000402168\n.text:000000000040216d\n.text:0000000000402174\n.text:0000000000402179\n.text:000000000040217e\n.text:0000000000402183\n.text:0000000000402188\n.text:000000000040218d\n.text:0000000000402192\n.text:00000000004021a0\n.text:00000000004021a7\n.text:00000000004021ac\n.text:00000000004021ae\n.text:00000000004021b3\n.text:00000000004021b6\n.text:00000000004021ba\n.text:00000000004021bd\n.text:00000000004021bf\n.text:00000000004021c4\n'
p34
tp35
sS'XRRQueryExtension'
p36
(S'\n__stdcall XRRQueryExtension()\n'
p37
V\u000avoid XRRQueryExtension(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRQueryExtension_00606028)();\u000a  return;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00606028]\n'
p39
S'ff 25 52 4f 20 00\n'
p40
S'.plt:00000000004010d0\n'
p41
tp42
sS'do_CirculateRequest'
p43
(S'\n__stdcall do_CirculateRequest(XEvent * eventp)\n'
p44
V\u000avoid do_CirculateRequest(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char pdummy [10];\u000a  char local_1a [10];\u000a  \u000a  if (*(int *)(*eventp + 0x30) == 0) {\u000a    __s = "PlaceOnTop";\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x30) == 1) {\u000a      __s = "PlaceOnBottom";\u000a    }\u000a    else {\u000a      __s = local_1a;\u000a      sprintf(__s,"%d");\u000a    }\u000a  }\u000a  printf("    parent 0x%lx, window 0x%lx, place %s\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28),__s);\u000a  return;\u000a}\u000a\u000a
p45
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOV EDX,dword ptr [RBX + 0x30]\nTEST EDX,EDX\nJZ 0x00402e0e\nCMP EDX,0x1\nJNZ 0x00402e16\nMOV R14D,0x404ce4\nJMP 0x00402e2a\nMOV R14D,0x404cd9\nJMP 0x00402e2a\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV EDI,0x404d1b\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p46
S'41 56\n53\n48 83 ec 18\n48 89 fb\n8b 53 30\n85 d2\n74 0d\n83 fa 01\n75 10\n41 be e4 4c 40 00\neb 1c\n41 be d9 4c 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 16 e5 ff ff\n48 8b 73 20\n48 8b 53 28\nbf 1b 4d 40 00\n31 c0\n4c 89 f1\ne8 3f e3 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p47
S'.text:0000000000402df0\n.text:0000000000402df2\n.text:0000000000402df3\n.text:0000000000402df7\n.text:0000000000402dfa\n.text:0000000000402dfd\n.text:0000000000402dff\n.text:0000000000402e01\n.text:0000000000402e04\n.text:0000000000402e06\n.text:0000000000402e0c\n.text:0000000000402e0e\n.text:0000000000402e14\n.text:0000000000402e16\n.text:0000000000402e1b\n.text:0000000000402e20\n.text:0000000000402e22\n.text:0000000000402e25\n.text:0000000000402e2a\n.text:0000000000402e2e\n.text:0000000000402e32\n.text:0000000000402e37\n.text:0000000000402e39\n.text:0000000000402e3c\n.text:0000000000402e41\n.text:0000000000402e45\n.text:0000000000402e46\n.text:0000000000402e48\n'
p48
tp49
sS'do_KeyPress'
p50
(S'\n__stdcall do_KeyPress(XEvent * eventp)\n'
p51
V\u000avoid do_KeyPress(XEvent *eventp)\u000a\u000a{\u000a  bool bVar1;\u000a  int bsize;\u000a  char *buf;\u000a  byte bVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  char *pcVar6;\u000a  ulong uVar7;\u000a  char *pcVar8;\u000a  char **ppcVar9;\u000a  uint uVar10;\u000a  int status;\u000a  char str [257];\u000a  int local_14c;\u000a  long local_148;\u000a  uint local_13c;\u000a  char local_138 [264];\u000a  \u000a  if (buf == (char *)0x0) {\u000a    buf = (char *)malloc((long)bsize);\u000a  }\u000a  local_13c = XLookupString(eventp,local_138,0x100,&local_148,0);\u000a  uVar3 = 0;\u000a  if ((*(int *)*eventp == 2) && (uVar3 = 0, xic != (XIC)0x0)) {\u000a    do {\u000a      uVar3 = XmbLookupString(xic,eventp,buf,(ulong)(bsize - 1),&local_148,&local_14c);\u000a      buf[(long)(int)uVar3] = 0;\u000a      if (local_14c != -1) break;\u000a      bsize = uVar3 + 1;\u000a      buf = (char *)realloc(buf,(long)bsize);\u000a    } while (local_14c == -1);\u000a  }\u000a  if (local_148 == 0) {\u000a    uVar10 = 0;\u000a    pcVar8 = "NoSymbol";\u000a    bVar1 = false;\u000a  }\u000a  else {\u000a    pcVar6 = (char *)XKeysymToString();\u000a    pcVar8 = "(no name)";\u000a    if (pcVar6 != (char *)0x0) {\u000a      pcVar8 = pcVar6;\u000a    }\u000a    bVar2 = XKeysymToKeycode(dpy,local_148);\u000a    uVar10 = (uint)bVar2;\u000a    bVar1 = true;\u000a  }\u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar9 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar9 = &Yes;\u000a  }\u000a  printf("    state 0x%x, keycode %u (keysym 0x%lx, %s), same_screen %s,\u005cn",\u000a         (ulong)*(uint *)(*eventp + 0x50),(ulong)*(uint *)(*eventp + 0x54),local_148,pcVar8,*ppcVar9\u000a        );\u000a  if ((bVar1) && (*(uint *)(*eventp + 0x54) != uVar10)) {\u000a    printf("    XKeysymToKeycode returns keycode: %u\u005cn",(ulong)uVar10);\u000a  }\u000a  uVar10 = local_13c;\u000a  uVar4 = 0;\u000a  if (-1 < (int)local_13c) {\u000a    uVar4 = local_13c;\u000a  }\u000a  uVar7 = 0x100;\u000a  if ((int)uVar4 < 0x101) {\u000a    uVar7 = (ulong)uVar4;\u000a  }\u000a  local_138[uVar7] = 0;\u000a  printf("    XLookupString gives %d bytes: ",uVar7);\u000a  if ((int)uVar10 < 1) {\u000a    putchar(10);\u000a    iVar5 = *(int *)*eventp;\u000a  }\u000a  else {\u000a    dump(local_138);\u000a    printf(" \u005c"%s\u005c"\u005cn",local_138);\u000a    iVar5 = *(int *)*eventp;\u000a  }\u000a  if ((iVar5 == 2) && (xic != (XIC)0x0)) {\u000a    printf("    XmbLookupString gives %d bytes: ",(ulong)uVar3);\u000a    if ((int)uVar3 < 1) {\u000a      putchar(10);\u000a    }\u000a    else {\u000a      dump(buf);\u000a      printf(" \u005c"%s\u005c"\u005cn",buf);\u000a    }\u000a  }\u000a  iVar5 = XFilterEvent(eventp,*(undefined8 *)(*eventp + 0x20));\u000a  pcVar8 = "False";\u000a  if (iVar5 != 0) {\u000a    pcVar8 = "True";\u000a  }\u000a  printf("    XFilterEvent returns: %s\u005cn",pcVar8);\u000a  return;\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x128\nMOV R15,RDI\nCMP qword ptr [0x00606218],0x0\nJNZ 0x00402491\nMOVSXD RDI,dword ptr [0x006061c0]\nCALL 0x00401230\nMOV qword ptr [0x00606218],RAX\nLEA RSI,[RSP + 0x20]\nLEA RCX,[RSP + 0x10]\nMOV EDX,0x100\nXOR R8D,R8D\nMOV RDI,R15\nCALL 0x004010e0\nMOV dword ptr [RSP + 0x1c],EAX\nCMP dword ptr [R15],0x2\nMOV EBP,0x0\nJNZ 0x00402542\nMOV RAX,qword ptr [0x00606210]\nTEST RAX,RAX\nMOV EBP,0x0\nJZ 0x00402542\nLEA R12,[RSP + 0x10]\nLEA R13,[RSP + 0xc]\nNOP dword ptr [RAX]\nMOV RDI,qword ptr [0x00606210]\nMOV RDX,qword ptr [0x00606218]\nMOV ECX,dword ptr [0x006061c0]\nDEC ECX\nMOV RSI,R15\nMOV R8,R12\nMOV R9,R13\nCALL 0x00401170\nMOV EBP,EAX\nMOV RAX,qword ptr [0x00606218]\nMOVSXD RCX,EBP\nMOV byte ptr [RAX + RCX*0x1],0x0\nCMP dword ptr [RSP + 0xc],-0x1\nJNZ 0x00402542\nMOV EAX,EBP\nINC EAX\nMOV dword ptr [0x006061c0],EAX\nMOV RDI,qword ptr [0x00606218]\nMOVSXD RSI,EAX\nCALL 0x004012e0\nMOV qword ptr [0x00606218],RAX\nCMP dword ptr [RSP + 0xc],-0x1\nJZ 0x004024e0\nMOV RDI,qword ptr [RSP + 0x10]\nTEST RDI,RDI\nJZ 0x00402578\nCALL 0x00401390\nTEST RAX,RAX\nMOV R12D,0x4046a9\nCMOVNZ R12,RAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RSP + 0x10]\nCALL 0x00401210\nMOVZX R14D,AL\nMOV R13B,0x1\nJMP 0x00402584\nXOR R14D,R14D\nMOV R12D,0x4046a0\nXOR R13D,R13D\nMOV RSI,qword ptr [R15 + 0x28]\nMOV RDX,qword ptr [R15 + 0x30]\nMOV RCX,qword ptr [R15 + 0x38]\nMOV R8D,dword ptr [R15 + 0x40]\nMOV R9D,dword ptr [R15 + 0x44]\nMOV R10D,dword ptr [R15 + 0x48]\nMOV EBX,dword ptr [R15 + 0x4c]\nMOV EDI,0x4046b3\nMOV EAX,0x0\nPUSH RBX\nPUSH R10\nCALL 0x00401180\nADD RSP,0x10\nMOV ESI,dword ptr [R15 + 0x50]\nMOV EDX,dword ptr [R15 + 0x54]\nMOV RCX,qword ptr [RSP + 0x10]\nCMP dword ptr [R15 + 0x58],0x0\nMOV EAX,0x6061a8\nMOV EDI,0x6061b0\nCMOVNZ RDI,RAX\nMOV R9,qword ptr [RDI]\nMOV EDI,0x4046f1\nXOR EAX,EAX\nMOV R8,R12\nCALL 0x00401180\nTEST R13B,R13B\nJZ 0x00402602\nCMP dword ptr [R15 + 0x54],R14D\nJZ 0x00402602\nMOV EDI,0x404731\nXOR EAX,EAX\nMOV ESI,R14D\nCALL 0x00401180\nMOV R14D,dword ptr [RSP + 0x1c]\nTEST R14D,R14D\nMOV EAX,0x0\nCMOVNS EAX,R14D\nCMP EAX,0x101\nMOV EBX,0x100\nCMOVL EBX,EAX\nMOV byte ptr [RSP + RBX*0x1 + 0x20],0x0\nMOV EDI,0x40475b\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401180\nTEST R14D,R14D\nJLE 0x0040265e\nLEA R14,[RSP + 0x20]\nMOV RDI,R14\nMOV ESI,EBX\nCALL 0x00403340\nMOV EDI,0x40477e\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00401180\nCMP dword ptr [R15],0x2\nJZ 0x0040266e\nJMP 0x004026b9\nMOV EDI,0xa\nCALL 0x004010b0\nCMP dword ptr [R15],0x2\nJNZ 0x004026b9\nMOV RAX,qword ptr [0x00606210]\nTEST RAX,RAX\nJZ 0x004026b9\nMOV EDI,0x404785\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401180\nTEST EBP,EBP\nJLE 0x004026af\nMOV RDI,qword ptr [0x00606218]\nMOV ESI,EBP\nCALL 0x00403340\nMOV RSI,qword ptr [0x00606218]\nMOV EDI,0x40477e\nXOR EAX,EAX\nCALL 0x00401180\nJMP 0x004026b9\nMOV EDI,0xa\nCALL 0x004010b0\nMOV RSI,qword ptr [R15 + 0x20]\nMOV RDI,R15\nCALL 0x00401380\nTEST EAX,EAX\nMOV EAX,0x4047c8\nMOV ESI,0x4047cd\nCMOVNZ RSI,RAX\nMOV EDI,0x4047aa\nXOR EAX,EAX\nCALL 0x00401180\nADD RSP,0x128\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 28 01 00 00\n49 89 ff\n48 83 3d 9c 3d 20 00 00\n75 13\n48 63 3d 3b 3d 20 00\ne8 a6 ed ff ff\n48 89 05 87 3d 20 00\n48 8d 74 24 20\n48 8d 4c 24 10\nba 00 01 00 00\n45 31 c0\n4c 89 ff\ne8 35 ec ff ff\n89 44 24 1c\n41 83 3f 02\nbd 00 00 00 00\n0f 85 84 00 00 00\n48 8b 05 4b 3d 20 00\n48 85 c0\nbd 00 00 00 00\n74 73\n4c 8d 64 24 10\n4c 8d 6c 24 0c\n0f 1f 80 00 00 00 00\n48 8b 3d 29 3d 20 00\n48 8b 15 2a 3d 20 00\n8b 0d cc 3c 20 00\nff c9\n4c 89 fe\n4d 89 e0\n4d 89 e9\ne8 6c ec ff ff\n89 c5\n48 8b 05 0b 3d 20 00\n48 63 cd\nc6 04 08 00\n83 7c 24 0c ff\n75 27\n89 e8\nff c0\n89 05 9b 3c 20 00\n48 8b 3d ec 3c 20 00\n48 63 f0\ne8 ac ed ff ff\n48 89 05 dd 3c 20 00\n83 7c 24 0c ff\n74 9e\n48 8b 7c 24 10\n48 85 ff\n74 2c\ne8 3f ee ff ff\n48 85 c0\n41 bc a9 46 40 00\n4c 0f 45 e0\n48 8b 3d c3 3c 20 00\n48 8b 74 24 10\ne8 a1 ec ff ff\n44 0f b6 f0\n41 b5 01\neb 0c\n45 31 f6\n41 bc a0 46 40 00\n45 31 ed\n49 8b 77 28\n49 8b 57 30\n49 8b 4f 38\n45 8b 47 40\n45 8b 4f 44\n45 8b 57 48\n41 8b 5f 4c\nbf b3 46 40 00\nb8 00 00 00 00\n53\n41 52\ne8 ce eb ff ff\n48 83 c4 10\n41 8b 77 50\n41 8b 57 54\n48 8b 4c 24 10\n41 83 7f 58 00\nb8 a8 61 60 00\nbf b0 61 60 00\n48 0f 45 f8\n4c 8b 0f\nbf f1 46 40 00\n31 c0\n4d 89 e0\ne8 98 eb ff ff\n45 84 ed\n74 15\n45 39 77 54\n74 0f\nbf 31 47 40 00\n31 c0\n44 89 f6\ne8 7e eb ff ff\n44 8b 74 24 1c\n45 85 f6\nb8 00 00 00 00\n41 0f 49 c6\n3d 01 01 00 00\nbb 00 01 00 00\n0f 4c d8\nc6 44 1c 20 00\nbf 5b 47 40 00\n31 c0\n89 de\ne8 4d eb ff ff\n45 85 f6\n7e 26\n4c 8d 74 24 20\n4c 89 f7\n89 de\ne8 f9 0c 00 00\nbf 7e 47 40 00\n31 c0\n4c 89 f6\ne8 2a eb ff ff\n41 83 3f 02\n74 12\neb 5b\nbf 0a 00 00 00\ne8 48 ea ff ff\n41 83 3f 02\n75 4b\n48 8b 05 9b 3b 20 00\n48 85 c0\n74 3f\nbf 85 47 40 00\n31 c0\n89 ee\ne8 f8 ea ff ff\n85 ed\n7e 23\n48 8b 3d 85 3b 20 00\n89 ee\ne8 a6 0c 00 00\n48 8b 35 77 3b 20 00\nbf 7e 47 40 00\n31 c0\ne8 d3 ea ff ff\neb 0a\nbf 0a 00 00 00\ne8 f7 e9 ff ff\n49 8b 77 20\n4c 89 ff\ne8 bb ec ff ff\n85 c0\nb8 c8 47 40 00\nbe cd 47 40 00\n48 0f 45 f0\nbf aa 47 40 00\n31 c0\ne8 9f ea ff ff\n48 81 c4 28 01 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p54
S'.text:0000000000402460\n.text:0000000000402461\n.text:0000000000402463\n.text:0000000000402465\n.text:0000000000402467\n.text:0000000000402469\n.text:000000000040246a\n.text:0000000000402471\n.text:0000000000402474\n.text:000000000040247c\n.text:000000000040247e\n.text:0000000000402485\n.text:000000000040248a\n.text:0000000000402491\n.text:0000000000402496\n.text:000000000040249b\n.text:00000000004024a0\n.text:00000000004024a3\n.text:00000000004024a6\n.text:00000000004024ab\n.text:00000000004024af\n.text:00000000004024b3\n.text:00000000004024b8\n.text:00000000004024be\n.text:00000000004024c5\n.text:00000000004024c8\n.text:00000000004024cd\n.text:00000000004024cf\n.text:00000000004024d4\n.text:00000000004024d9\n.text:00000000004024e0\n.text:00000000004024e7\n.text:00000000004024ee\n.text:00000000004024f4\n.text:00000000004024f6\n.text:00000000004024f9\n.text:00000000004024fc\n.text:00000000004024ff\n.text:0000000000402504\n.text:0000000000402506\n.text:000000000040250d\n.text:0000000000402510\n.text:0000000000402514\n.text:0000000000402519\n.text:000000000040251b\n.text:000000000040251d\n.text:000000000040251f\n.text:0000000000402525\n.text:000000000040252c\n.text:000000000040252f\n.text:0000000000402534\n.text:000000000040253b\n.text:0000000000402540\n.text:0000000000402542\n.text:0000000000402547\n.text:000000000040254a\n.text:000000000040254c\n.text:0000000000402551\n.text:0000000000402554\n.text:000000000040255a\n.text:000000000040255e\n.text:0000000000402565\n.text:000000000040256a\n.text:000000000040256f\n.text:0000000000402573\n.text:0000000000402576\n.text:0000000000402578\n.text:000000000040257b\n.text:0000000000402581\n.text:0000000000402584\n.text:0000000000402588\n.text:000000000040258c\n.text:0000000000402590\n.text:0000000000402594\n.text:0000000000402598\n.text:000000000040259c\n.text:00000000004025a0\n.text:00000000004025a5\n.text:00000000004025aa\n.text:00000000004025ab\n.text:00000000004025ad\n.text:00000000004025b2\n.text:00000000004025b6\n.text:00000000004025ba\n.text:00000000004025be\n.text:00000000004025c3\n.text:00000000004025c8\n.text:00000000004025cd\n.text:00000000004025d2\n.text:00000000004025d6\n.text:00000000004025d9\n.text:00000000004025de\n.text:00000000004025e0\n.text:00000000004025e3\n.text:00000000004025e8\n.text:00000000004025eb\n.text:00000000004025ed\n.text:00000000004025f1\n.text:00000000004025f3\n.text:00000000004025f8\n.text:00000000004025fa\n.text:00000000004025fd\n.text:0000000000402602\n.text:0000000000402607\n.text:000000000040260a\n.text:000000000040260f\n.text:0000000000402613\n.text:0000000000402618\n.text:000000000040261d\n.text:0000000000402620\n.text:0000000000402625\n.text:000000000040262a\n.text:000000000040262c\n.text:000000000040262e\n.text:0000000000402633\n.text:0000000000402636\n.text:0000000000402638\n.text:000000000040263d\n.text:0000000000402640\n.text:0000000000402642\n.text:0000000000402647\n.text:000000000040264c\n.text:000000000040264e\n.text:0000000000402651\n.text:0000000000402656\n.text:000000000040265a\n.text:000000000040265c\n.text:000000000040265e\n.text:0000000000402663\n.text:0000000000402668\n.text:000000000040266c\n.text:000000000040266e\n.text:0000000000402675\n.text:0000000000402678\n.text:000000000040267a\n.text:000000000040267f\n.text:0000000000402681\n.text:0000000000402683\n.text:0000000000402688\n.text:000000000040268a\n.text:000000000040268c\n.text:0000000000402693\n.text:0000000000402695\n.text:000000000040269a\n.text:00000000004026a1\n.text:00000000004026a6\n.text:00000000004026a8\n.text:00000000004026ad\n.text:00000000004026af\n.text:00000000004026b4\n.text:00000000004026b9\n.text:00000000004026bd\n.text:00000000004026c0\n.text:00000000004026c5\n.text:00000000004026c7\n.text:00000000004026cc\n.text:00000000004026d1\n.text:00000000004026d5\n.text:00000000004026da\n.text:00000000004026dc\n.text:00000000004026e1\n.text:00000000004026e8\n.text:00000000004026e9\n.text:00000000004026eb\n.text:00000000004026ed\n.text:00000000004026ef\n.text:00000000004026f1\n.text:00000000004026f2\n'
p55
tp56
sS'XCreateWindow'
p57
(S'\n__stdcall XCreateWindow()\n'
p58
V\u000avoid XCreateWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateWindow_00606110)();\u000a  return;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00606110]\n'
p60
S'ff 25 6a 4e 20 00\n'
p61
S'.plt:00000000004012a0\n'
p62
tp63
sS'do_VisibilityNotify'
p64
(S'\n__stdcall do_VisibilityNotify(XEvent * eventp)\n'
p65
V\u000avoid do_VisibilityNotify(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char vdummy [10];\u000a  char local_12 [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x28) < 3) {\u000a    __s = (&PTR_s_VisibilityUnobscured_00403ce0)[(long)*(int *)(*eventp + 0x28)];\u000a  }\u000a  else {\u000a    __s = local_12;\u000a    sprintf(__s,"%d");\u000a  }\u000a  printf("    state %s\u005cn",__s);\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH RBX\nSUB RSP,0x10\nMOVSXD RDX,dword ptr [RDI + 0x28]\nCMP RDX,0x3\nJNC 0x00402ae9\nMOV RBX,qword ptr [0x403ce0 + RDX*0x8]\nJMP 0x00402afd\nLEA RBX,[RSP + 0x6]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00401340\nMOV EDI,0x404a3f\nXOR EAX,EAX\nMOV RSI,RBX\nCALL 0x00401180\nADD RSP,0x10\nPOP RBX\nRET\n'
p67
S'53\n48 83 ec 10\n48 63 57 28\n48 83 fa 03\n73 0a\n48 8b 1c d5 e0 3c 40 00\neb 14\n48 8d 5c 24 06\nbe ae 49 40 00\n31 c0\n48 89 df\ne8 43 e8 ff ff\nbf 3f 4a 40 00\n31 c0\n48 89 de\ne8 74 e6 ff ff\n48 83 c4 10\n5b\nc3\n'
p68
S'.text:0000000000402ad0\n.text:0000000000402ad1\n.text:0000000000402ad5\n.text:0000000000402ad9\n.text:0000000000402add\n.text:0000000000402adf\n.text:0000000000402ae7\n.text:0000000000402ae9\n.text:0000000000402aee\n.text:0000000000402af3\n.text:0000000000402af5\n.text:0000000000402af8\n.text:0000000000402afd\n.text:0000000000402b02\n.text:0000000000402b04\n.text:0000000000402b07\n.text:0000000000402b0c\n.text:0000000000402b10\n.text:0000000000402b11\n'
p69
tp70
sS'putchar'
p71
(S'\n__stdcall putchar(int __c)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_00606018)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00606018]\n'
p74
S'ff 25 62 4f 20 00\n'
p75
S'.plt:00000000004010b0\n'
p76
tp77
sS'XFree'
p78
(S'\n__stdcall XFree()\n'
p79
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_00606088)();\u000a  return;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00606088]\n'
p81
S'ff 25 f2 4e 20 00\n'
p82
S'.plt:0000000000401190\n'
p83
tp84
sS'frame_dummy'
p85
(S'\n__stdcall frame_dummy()\n'
p86
V\u000a/* WARNING: Removing unreachable block (ram,0x0040149a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p87
S'MOV EDI,0x605df8\nCMP qword ptr [RDI],0x0\nJNZ 0x00401490\nJMP 0x00401420\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x0040148b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401420\n'
p88
S'bf f8 5d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p89
S'.text:0000000000401480\n.text:0000000000401485\n.text:0000000000401489\n.text:000000000040148b\n.text:0000000000401490\n.text:0000000000401495\n.text:0000000000401498\n.text:000000000040149a\n.text:000000000040149b\n.text:000000000040149e\n.text:00000000004014a0\n.text:00000000004014a1\n'
p90
tp91
sS'do_RRNotify_OutputChange'
p92
(S'\n__stdcall do_RRNotify_OutputChange(XEvent * eventp, XRRScreenResources * screen_resources)\n'
p93
V\u000avoid do_RRNotify_OutputChange(XEvent *eventp,XRRScreenResources *screen_resources)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  XRRModeInfo *pXVar3;\u000a  undefined8 uVar4;\u000a  char *__format;\u000a  \u000a  if (screen_resources == (XRRScreenResources *)0x0) {\u000a    puts("    subtype XRROutputChangeNotifyEvent");\u000a    pXVar3 = (XRRModeInfo *)0x0;\u000a  }\u000a  else {\u000a    lVar1 = XRRGetOutputInfo(dpy,screen_resources,*(undefined8 *)(*eventp + 0x30));\u000a    if (0 < screen_resources->nmode) {\u000a      pXVar3 = screen_resources->modes;\u000a      lVar2 = 0;\u000a      do {\u000a        if (pXVar3->id == *(RRMode *)(*eventp + 0x40)) goto LAB_004034c8;\u000a        lVar2 = lVar2 + 1;\u000a        pXVar3 = pXVar3 + 1;\u000a      } while (lVar2 < (long)screen_resources->nmode);\u000a    }\u000a    pXVar3 = (XRRModeInfo *)0x0;\u000aLAB_004034c8:\u000a    puts("    subtype XRROutputChangeNotifyEvent");\u000a    if (lVar1 != 0) {\u000a      uVar4 = *(undefined8 *)(lVar1 + 0x10);\u000a      __format = "    output %s, ";\u000a      goto LAB_004034fa;\u000a    }\u000a  }\u000a  uVar4 = *(undefined8 *)(*eventp + 0x30);\u000a  lVar1 = 0;\u000a  __format = "    output %lu, ";\u000aLAB_004034fa:\u000a  printf(__format,uVar4);\u000a  if (*(long *)(*eventp + 0x38) == 0) {\u000a    printf("crtc None, ");\u000a  }\u000a  else {\u000a    printf("crtc %lu, ");\u000a  }\u000a  if (pXVar3 == (XRRModeInfo *)0x0) {\u000a    if (*(long *)(*eventp + 0x40) == 0) {\u000a      puts("mode None");\u000a    }\u000a    else {\u000a      printf("mode %lu\u005cn");\u000a    }\u000a  }\u000a  else {\u000a    printf("mode %s (%dx%d)\u005cn",pXVar3->name,(ulong)pXVar3->width,(ulong)pXVar3->height);\u000a  }\u000a  printf("    rotation ");\u000a  print_Rotation((ulong)*(ushort *)(*eventp + 0x48));\u000a  printf("\u005cn    connection ");\u000a  print_Connection((ulong)*(ushort *)(*eventp + 0x4a));\u000a  printf(", subpixel_order ");\u000a  print_SubPixelOrder((ulong)*(ushort *)(*eventp + 0x4c));\u000a  putchar(10);\u000a  XRRFreeOutputInfo(lVar1);\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,RSI\nMOV R15,RDI\nTEST R12,R12\nJZ 0x004034e2\nMOV RDI,qword ptr [0x00606228]\nMOV RDX,qword ptr [R15 + 0x30]\nMOV RSI,R12\nCALL 0x004013a0\nMOV R14,RAX\nCMP dword ptr [R12 + 0x30],0x0\nJLE 0x004034c6\nMOV RBX,qword ptr [R12 + 0x38]\nMOV RAX,qword ptr [R15 + 0x40]\nXOR ECX,ECX\nNOP dword ptr [RAX]\nCMP qword ptr [RBX],RAX\nJZ 0x004034c8\nINC RCX\nMOVSXD RDX,dword ptr [R12 + 0x30]\nADD RBX,0x50\nCMP RCX,RDX\nJL 0x004034b0\nXOR EBX,EBX\nMOV EDI,0x4052b0\nCALL 0x004010f0\nTEST R14,R14\nJZ 0x004034ee\nMOV RSI,qword ptr [R14 + 0x10]\nMOV EDI,0x40511c\nJMP 0x004034fa\nMOV EDI,0x4052b0\nCALL 0x004010f0\nXOR EBX,EBX\nMOV RSI,qword ptr [R15 + 0x30]\nXOR R14D,R14D\nMOV EDI,0x40512c\nXOR EAX,EAX\nCALL 0x00401180\nMOV RSI,qword ptr [R15 + 0x38]\nTEST RSI,RSI\nJZ 0x0040351d\nMOV EDI,0x4051d0\nXOR EAX,EAX\nCALL 0x00401180\nTEST RBX,RBX\nJNZ 0x0040352e\nJMP 0x00403546\nMOV EDI,0x4051df\nXOR EAX,EAX\nCALL 0x00401180\nTEST RBX,RBX\nJZ 0x00403546\nMOV RSI,qword ptr [RBX + 0x38]\nMOV EDX,dword ptr [RBX + 0x8]\nMOV ECX,dword ptr [RBX + 0xc]\nMOV EDI,0x40513d\nXOR EAX,EAX\nCALL 0x00401180\nJMP 0x00403567\nMOV RSI,qword ptr [R15 + 0x40]\nTEST RSI,RSI\nJZ 0x0040355d\nMOV EDI,0x40514e\nXOR EAX,EAX\nCALL 0x00401180\nJMP 0x00403567\nMOV EDI,0x405297\nCALL 0x004010f0\nMOV EDI,0x404fd8\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX EDI,word ptr [R15 + 0x48]\nCALL 0x00403400\nMOV EDI,0x405163\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX EDI,word ptr [R15 + 0x4a]\nCALL 0x00403790\nMOV EDI,0x404fc5\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX EDI,word ptr [R15 + 0x4c]\nCALL 0x00403390\nMOV EDI,0xa\nCALL 0x004010b0\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401120\n'
p95
S'41 57\n41 56\n41 54\n53\n50\n49 89 f4\n49 89 ff\n4d 85 e4\n74 5f\n48 8b 3d 9e 2d 20 00\n49 8b 57 30\n4c 89 e6\ne8 0a df ff ff\n49 89 c6\n41 83 7c 24 30 00\n7e 25\n49 8b 5c 24 38\n49 8b 47 40\n31 c9\n0f 1f 40 00\n48 39 03\n74 13\n48 ff c1\n49 63 54 24 30\n48 83 c3 50\n48 39 d1\n7c ea\n31 db\nbf b0 52 40 00\ne8 1e dc ff ff\n4d 85 f6\n74 17\n49 8b 76 10\nbf 1c 51 40 00\neb 18\nbf b0 52 40 00\ne8 04 dc ff ff\n31 db\n49 8b 77 30\n45 31 f6\nbf 2c 51 40 00\n31 c0\ne8 7f dc ff ff\n49 8b 77 38\n48 85 f6\n74 13\nbf d0 51 40 00\n31 c0\ne8 6a dc ff ff\n48 85 db\n75 13\neb 29\nbf df 51 40 00\n31 c0\ne8 57 dc ff ff\n48 85 db\n74 18\n48 8b 73 38\n8b 53 08\n8b 4b 0c\nbf 3d 51 40 00\n31 c0\ne8 3c dc ff ff\neb 21\n49 8b 77 40\n48 85 f6\n74 0e\nbf 4e 51 40 00\n31 c0\ne8 25 dc ff ff\neb 0a\nbf 97 52 40 00\ne8 89 db ff ff\nbf d8 4f 40 00\n31 c0\ne8 0d dc ff ff\n41 0f b7 7f 48\ne8 83 fe ff ff\nbf 63 51 40 00\n31 c0\ne8 f7 db ff ff\n41 0f b7 7f 4a\ne8 fd 01 00 00\nbf c5 4f 40 00\n31 c0\ne8 e1 db ff ff\n41 0f b7 7f 4c\ne8 e7 fd ff ff\nbf 0a 00 00 00\ne8 fd da ff ff\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 5a db ff ff\n'
p96
S'.text:0000000000403470\n.text:0000000000403472\n.text:0000000000403474\n.text:0000000000403476\n.text:0000000000403477\n.text:0000000000403478\n.text:000000000040347b\n.text:000000000040347e\n.text:0000000000403481\n.text:0000000000403483\n.text:000000000040348a\n.text:000000000040348e\n.text:0000000000403491\n.text:0000000000403496\n.text:0000000000403499\n.text:000000000040349f\n.text:00000000004034a1\n.text:00000000004034a6\n.text:00000000004034aa\n.text:00000000004034ac\n.text:00000000004034b0\n.text:00000000004034b3\n.text:00000000004034b5\n.text:00000000004034b8\n.text:00000000004034bd\n.text:00000000004034c1\n.text:00000000004034c4\n.text:00000000004034c6\n.text:00000000004034c8\n.text:00000000004034cd\n.text:00000000004034d2\n.text:00000000004034d5\n.text:00000000004034d7\n.text:00000000004034db\n.text:00000000004034e0\n.text:00000000004034e2\n.text:00000000004034e7\n.text:00000000004034ec\n.text:00000000004034ee\n.text:00000000004034f2\n.text:00000000004034f5\n.text:00000000004034fa\n.text:00000000004034fc\n.text:0000000000403501\n.text:0000000000403505\n.text:0000000000403508\n.text:000000000040350a\n.text:000000000040350f\n.text:0000000000403511\n.text:0000000000403516\n.text:0000000000403519\n.text:000000000040351b\n.text:000000000040351d\n.text:0000000000403522\n.text:0000000000403524\n.text:0000000000403529\n.text:000000000040352c\n.text:000000000040352e\n.text:0000000000403532\n.text:0000000000403535\n.text:0000000000403538\n.text:000000000040353d\n.text:000000000040353f\n.text:0000000000403544\n.text:0000000000403546\n.text:000000000040354a\n.text:000000000040354d\n.text:000000000040354f\n.text:0000000000403554\n.text:0000000000403556\n.text:000000000040355b\n.text:000000000040355d\n.text:0000000000403562\n.text:0000000000403567\n.text:000000000040356c\n.text:000000000040356e\n.text:0000000000403573\n.text:0000000000403578\n.text:000000000040357d\n.text:0000000000403582\n.text:0000000000403584\n.text:0000000000403589\n.text:000000000040358e\n.text:0000000000403593\n.text:0000000000403598\n.text:000000000040359a\n.text:000000000040359f\n.text:00000000004035a4\n.text:00000000004035a9\n.text:00000000004035ae\n.text:00000000004035b3\n.text:00000000004035b6\n.text:00000000004035ba\n.text:00000000004035bb\n.text:00000000004035bd\n.text:00000000004035bf\n.text:00000000004035c1\n'
p97
tp98
sS'parse_backing_store'
p99
(S'\n__stdcall parse_backing_store(char * s)\n'
p100
V\u000aint parse_backing_store(char *s)\u000a\u000a{\u000a  int iVar1;\u000a  size_t __n;\u000a  \u000a  __n = strlen(s);\u000a  iVar1 = strncasecmp(s,"NotUseful",__n);\u000a  if (iVar1 != 0) {\u000a    iVar1 = strncasecmp(s,"WhenMapped",__n);\u000a    if (iVar1 == 0) {\u000a      return 1;\u000a    }\u000a    iVar1 = strncasecmp(s,"Always",__n);\u000a    if (iVar1 == 0) {\u000a      return 2;\u000a    }\u000a    fprintf(stderr,"%s: unrecognized argument \u005c'%s\u005c' for -bs\u005cn",ProgramName,s);\u000a    usage((char *)0x0);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p101
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00401150\nMOV RBX,RAX\nMOV ESI,0x4045b1\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x00401240\nTEST EAX,EAX\nJZ 0x00402246\nMOV ESI,0x4045bb\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x00401240\nTEST EAX,EAX\nJZ 0x0040224a\nMOV ESI,0x4045c6\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x00401240\nMOV ECX,EAX\nMOV EAX,0x2\nTEST ECX,ECX\nJZ 0x0040224f\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x4045cd\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x004011f0\nXOR EDI,EDI\nCALL 0x00402130\nXOR EAX,EAX\nJMP 0x0040224f\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p102
S'41 56\n53\n50\n49 89 fe\ne8 74 ef ff ff\n48 89 c3\nbe b1 45 40 00\n4c 89 f7\n48 89 da\ne8 51 f0 ff ff\n85 c0\n74 53\nbe bb 45 40 00\n4c 89 f7\n48 89 da\ne8 3d f0 ff ff\n85 c0\n74 43\nbe c6 45 40 00\n4c 89 f7\n48 89 da\ne8 29 f0 ff ff\n89 c1\nb8 02 00 00 00\n85 c9\n74 2d\n48 8b 3d d7 3f 20 00\n48 8b 15 18 40 20 00\nbe cd 45 40 00\n31 c0\n4c 89 f1\ne8 b1 ef ff ff\n31 ff\ne8 ea fe ff ff\n31 c0\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p103
S'.text:00000000004021d0\n.text:00000000004021d2\n.text:00000000004021d3\n.text:00000000004021d4\n.text:00000000004021d7\n.text:00000000004021dc\n.text:00000000004021df\n.text:00000000004021e4\n.text:00000000004021e7\n.text:00000000004021ea\n.text:00000000004021ef\n.text:00000000004021f1\n.text:00000000004021f3\n.text:00000000004021f8\n.text:00000000004021fb\n.text:00000000004021fe\n.text:0000000000402203\n.text:0000000000402205\n.text:0000000000402207\n.text:000000000040220c\n.text:000000000040220f\n.text:0000000000402212\n.text:0000000000402217\n.text:0000000000402219\n.text:000000000040221e\n.text:0000000000402220\n.text:0000000000402222\n.text:0000000000402229\n.text:0000000000402230\n.text:0000000000402235\n.text:0000000000402237\n.text:000000000040223a\n.text:000000000040223f\n.text:0000000000402241\n.text:0000000000402246\n.text:0000000000402248\n.text:000000000040224a\n.text:000000000040224f\n.text:0000000000402253\n.text:0000000000402254\n.text:0000000000402256\n'
p104
tp105
sS'XSetLocaleModifiers'
p106
(S'\n__stdcall XSetLocaleModifiers()\n'
p107
V\u000avoid XSetLocaleModifiers(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetLocaleModifiers_00606108)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00606108]\n'
p109
S'ff 25 72 4e 20 00\n'
p110
S'.plt:0000000000401290\n'
p111
tp112
sS'set_sizehints'
p113
(S'\n__stdcall set_sizehints()\n'
p114
V\u000avoid set_sizehints(ulong *puParm1,long lParm2)\u000a\u000a{\u000a  int *piVar1;\u000a  ulong *puVar2;\u000a  ulong uVar3;\u000a  int iVar4;\u000a  \u000a  *(undefined4 *)(puParm1 + 3) = 0x4e;\u000a  *(undefined4 *)(puParm1 + 2) = 0x4e;\u000a  *(undefined4 *)((long)puParm1 + 0x1c) = 0x4e;\u000a  *(undefined4 *)((long)puParm1 + 0x14) = 0x4e;\u000a  *puParm1 = 0x10;\u000a  piVar1 = (int *)((long)puParm1 + 0xc);\u000a  puVar2 = puParm1 + 1;\u000a  puParm1[1] = 0;\u000a  if (lParm2 == 0) {\u000a    uVar3 = 0;\u000a  }\u000a  else {\u000a    uVar3 = XParseGeometry(lParm2,puVar2,piVar1,puParm1 + 2,(int *)((long)puParm1 + 0x14));\u000a    if (((uint)uVar3 & 0xc) == 0xc) {\u000a      iVar4 = *(int *)(puParm1 + 3);\u000a      if (*(int *)(puParm1 + 3) <= *(int *)(puParm1 + 2)) {\u000a        iVar4 = *(int *)(puParm1 + 2);\u000a      }\u000a      *(int *)(puParm1 + 2) = iVar4;\u000a      iVar4 = *(int *)((long)puParm1 + 0x1c);\u000a      if (*(int *)((long)puParm1 + 0x1c) <= *(int *)((long)puParm1 + 0x14)) {\u000a        iVar4 = *(int *)((long)puParm1 + 0x14);\u000a      }\u000a      *(int *)((long)puParm1 + 0x14) = iVar4;\u000a      *(byte *)puParm1 = *(byte *)puParm1 | 2;\u000a    }\u000a    if (((uint)uVar3 & 3) == 3) {\u000a      *puParm1 = *puParm1 + 1;\u000a    }\u000a  }\u000a  if ((*puParm1 & 2) == 0) {\u000a    *(undefined4 *)(puParm1 + 2) = 0xb2;\u000a    *(undefined4 *)((long)puParm1 + 0x14) = 0xb2;\u000a    *puParm1 = *puParm1 | 8;\u000a  }\u000a  if ((uVar3 & 0x10) != 0) {\u000a    *(int *)puVar2 =\u000a         (*(int *)puVar2 +\u000a         *(int *)(*(long *)(dpy + 0xe8) + 0x18 + (long)*(int *)(dpy + 0xe0) * 0x80)) -\u000a         *(int *)(puParm1 + 2);\u000a  }\u000a  if ((uVar3 & 0x20) != 0) {\u000a    *piVar1 = (*piVar1 + *(int *)(*(long *)(dpy + 0xe8) + 0x1c + (long)*(int *)(dpy + 0xe0) * 0x80))\u000a              - *(int *)((long)puParm1 + 0x14);\u000a  }\u000a  return;\u000a}\u000a\u000a
p115
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV RBX,RDI\nMOV dword ptr [RBX + 0x18],0x4e\nLEA R15,[RBX + 0x10]\nMOV dword ptr [RBX + 0x10],0x4e\nMOV dword ptr [RBX + 0x1c],0x4e\nLEA R14,[RBX + 0x14]\nMOV dword ptr [RBX + 0x14],0x4e\nMOV qword ptr [RBX],0x10\nLEA R12,[RBX + 0xc]\nLEA R13,[RBX + 0x8]\nMOV qword ptr [RBX + 0x8],0x0\nTEST RSI,RSI\nJZ 0x004023a8\nMOV RDI,RSI\nMOV RSI,R13\nMOV RDX,R12\nMOV RCX,R15\nMOV R8,R14\nCALL 0x00401140\nMOV ECX,EAX\nAND ECX,0xc\nCMP ECX,0xc\nJNZ 0x00402399\nMOV ECX,dword ptr [RBX + 0x10]\nMOV EDX,dword ptr [RBX + 0x18]\nCMP ECX,EDX\nCMOVGE EDX,ECX\nMOV dword ptr [RBX + 0x10],EDX\nMOV ECX,dword ptr [RBX + 0x14]\nMOV EDX,dword ptr [RBX + 0x1c]\nCMP ECX,EDX\nCMOVGE EDX,ECX\nMOV dword ptr [RBX + 0x14],EDX\nOR byte ptr [RBX],0x2\nMOV ECX,EAX\nAND ECX,0x3\nCMP ECX,0x3\nJNZ 0x004023aa\nINC qword ptr [RBX]\nJMP 0x004023aa\nXOR EAX,EAX\nMOV RCX,qword ptr [RBX]\nTEST CL,0x2\nJNZ 0x004023c7\nMOV dword ptr [RBX + 0x10],0xb2\nMOV dword ptr [RBX + 0x14],0xb2\nOR RCX,0x8\nMOV qword ptr [RBX],RCX\nTEST AL,0x10\nJZ 0x004023f3\nMOV RCX,qword ptr [0x00606228]\nMOV RDX,qword ptr [0xe8 + RCX]\nMOVSXD RCX,dword ptr [0xe0 + RCX]\nSHL RCX,0x7\nMOV ESI,dword ptr [R13]\nADD ESI,dword ptr [RDX + RCX*0x1 + 0x18]\nSUB ESI,dword ptr [R15]\nMOV dword ptr [R13],ESI\nTEST AL,0x20\nJZ 0x0040241f\nMOV RAX,qword ptr [0x00606228]\nMOV RCX,qword ptr [0xe8 + RAX]\nMOVSXD RAX,dword ptr [0xe0 + RAX]\nSHL RAX,0x7\nMOV EDX,dword ptr [R12]\nADD EDX,dword ptr [RCX + RAX*0x1 + 0x1c]\nSUB EDX,dword ptr [R14]\nMOV dword ptr [R12],EDX\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p116
S'41 57\n41 56\n41 55\n41 54\n53\n48 89 fb\nc7 43 18 4e 00 00 00\n4c 8d 7b 10\nc7 43 10 4e 00 00 00\nc7 43 1c 4e 00 00 00\n4c 8d 73 14\nc7 43 14 4e 00 00 00\n48 c7 03 10 00 00 00\n4c 8d 63 0c\n4c 8d 6b 08\n48 c7 43 08 00 00 00 00\n48 85 f6\n74 4c\n48 89 f7\n4c 89 ee\n4c 89 e2\n4c 89 f9\n4d 89 f0\ne8 d0 ed ff ff\n89 c1\n83 e1 0c\n83 f9 0c\n75 1f\n8b 4b 10\n8b 53 18\n39 d1\n0f 4d d1\n89 53 10\n8b 4b 14\n8b 53 1c\n39 d1\n0f 4d d1\n89 53 14\n80 0b 02\n89 c1\n83 e1 03\n83 f9 03\n75 07\n48 ff 03\neb 02\n31 c0\n48 8b 0b\nf6 c1 02\n75 15\nc7 43 10 b2 00 00 00\nc7 43 14 b2 00 00 00\n48 83 c9 08\n48 89 0b\na8 10\n74 28\n48 8b 0d 56 3e 20 00\n48 8b 91 e8 00 00 00\n48 63 89 e0 00 00 00\n48 c1 e1 07\n41 8b 75 00\n03 74 0a 18\n41 2b 37\n41 89 75 00\na8 20\n74 28\n48 8b 05 2a 3e 20 00\n48 8b 88 e8 00 00 00\n48 63 80 e0 00 00 00\n48 c1 e0 07\n41 8b 14 24\n03 54 01 1c\n41 2b 16\n41 89 14 24\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p117
S'.text:0000000000402310\n.text:0000000000402312\n.text:0000000000402314\n.text:0000000000402316\n.text:0000000000402318\n.text:0000000000402319\n.text:000000000040231c\n.text:0000000000402323\n.text:0000000000402327\n.text:000000000040232e\n.text:0000000000402335\n.text:0000000000402339\n.text:0000000000402340\n.text:0000000000402347\n.text:000000000040234b\n.text:000000000040234f\n.text:0000000000402357\n.text:000000000040235a\n.text:000000000040235c\n.text:000000000040235f\n.text:0000000000402362\n.text:0000000000402365\n.text:0000000000402368\n.text:000000000040236b\n.text:0000000000402370\n.text:0000000000402372\n.text:0000000000402375\n.text:0000000000402378\n.text:000000000040237a\n.text:000000000040237d\n.text:0000000000402380\n.text:0000000000402382\n.text:0000000000402385\n.text:0000000000402388\n.text:000000000040238b\n.text:000000000040238e\n.text:0000000000402390\n.text:0000000000402393\n.text:0000000000402396\n.text:0000000000402399\n.text:000000000040239b\n.text:000000000040239e\n.text:00000000004023a1\n.text:00000000004023a3\n.text:00000000004023a6\n.text:00000000004023a8\n.text:00000000004023aa\n.text:00000000004023ad\n.text:00000000004023b0\n.text:00000000004023b2\n.text:00000000004023b9\n.text:00000000004023c0\n.text:00000000004023c4\n.text:00000000004023c7\n.text:00000000004023c9\n.text:00000000004023cb\n.text:00000000004023d2\n.text:00000000004023d9\n.text:00000000004023e0\n.text:00000000004023e4\n.text:00000000004023e8\n.text:00000000004023ec\n.text:00000000004023ef\n.text:00000000004023f3\n.text:00000000004023f5\n.text:00000000004023f7\n.text:00000000004023fe\n.text:0000000000402405\n.text:000000000040240c\n.text:0000000000402410\n.text:0000000000402414\n.text:0000000000402418\n.text:000000000040241b\n.text:000000000040241f\n.text:0000000000402420\n.text:0000000000402422\n.text:0000000000402424\n.text:0000000000402426\n.text:0000000000402428\n'
p118
tp119
sS'do_FocusOut'
p120
(S'\n__stdcall do_FocusOut(XEvent * eventp)\n'
p121
V\u000avoid do_FocusOut(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char *__s_00;\u000a  char acStack36 [10];\u000a  char acStack26 [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x28) < 4) {\u000a    __s_00 = (&PTR_s_NotifyNormal_00403c80)[(long)*(int *)(*eventp + 0x28)];\u000a  }\u000a  else {\u000a    __s_00 = acStack26;\u000a    sprintf(__s_00,"%u");\u000a  }\u000a  if ((ulong)(long)*(int *)(*eventp + 0x2c) < 8) {\u000a    __s = (&PTR_s_NotifyAncestor_00403ca0)[(long)*(int *)(*eventp + 0x2c)];\u000a  }\u000a  else {\u000a    __s = acStack36;\u000a    sprintf(__s,"%u");\u000a  }\u000a  printf("    mode %s, detail %s\u005cn",__s_00,__s);\u000a  return;\u000a}\u000a\u000a
p122
S'JMP 0x004028e0\n'
p123
S'e9 7b ff ff ff\n'
p124
S'.text:0000000000402960\n'
p125
tp126
sS'XOpenIM'
p127
(S'\n__stdcall XOpenIM()\n'
p128
V\u000avoid XOpenIM(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenIM_00606048)();\u000a  return;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00606048]\n'
p130
S'ff 25 32 4f 20 00\n'
p131
S'.plt:0000000000401110\n'
p132
tp133
sS'do_MapNotify'
p134
(S'\n__stdcall do_MapNotify(XEvent * eventp)\n'
p135
V\u000avoid do_MapNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x30) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    event 0x%lx, window 0x%lx, override %s\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p136
S'MOV RSI,qword ptr [RDI + 0x20]\nMOV RDX,qword ptr [RDI + 0x28]\nCMP dword ptr [RDI + 0x30],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV EDI,0x404afa\nXOR EAX,EAX\nJMP 0x00401180\n'
p137
S'48 8b 77 20\n48 8b 57 28\n83 7f 30 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\nbf fa 4a 40 00\n31 c0\ne9 87 e5 ff ff\n'
p138
S'.text:0000000000402bd0\n.text:0000000000402bd4\n.text:0000000000402bd8\n.text:0000000000402bdc\n.text:0000000000402be1\n.text:0000000000402be6\n.text:0000000000402bea\n.text:0000000000402bed\n.text:0000000000402bf2\n.text:0000000000402bf4\n'
p139
tp140
sS'do_EnterNotify'
p141
(S'\n__stdcall do_EnterNotify(XEvent * eventp)\n'
p142
V\u000avoid do_EnterNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  char **ppcVar2;\u000a  char *__s;\u000a  char *__s_00;\u000a  char ddetail [10];\u000a  char dmode [10];\u000a  char local_3c [10];\u000a  char local_32 [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x50) < 4) {\u000a    __s = (&PTR_s_NotifyNormal_00403c20)[(long)*(int *)(*eventp + 0x50)];\u000a  }\u000a  else {\u000a    __s = local_32;\u000a    sprintf(__s,"%u");\u000a  }\u000a  if ((ulong)(long)*(int *)(*eventp + 0x54) < 8) {\u000a    __s_00 = (&PTR_s_NotifyAncestor_00403c40)[(long)*(int *)(*eventp + 0x54)];\u000a  }\u000a  else {\u000a    __s_00 = local_3c;\u000a    sprintf(__s_00,"%u");\u000a  }\u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar2 = &No;\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    mode %s, detail %s, same_screen %s,\u005cn",__s,__s_00,*ppcVar1);\u000a  if (*(int *)(*eventp + 0x5c) != 0) {\u000a    ppcVar2 = &Yes;\u000a  }\u000a  printf("    focus %s, state %u\u005cn",*ppcVar2,(ulong)*(uint *)(*eventp + 0x60));\u000a  return;\u000a}\u000a\u000a
p143
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV RBX,RDI\nMOVSXD RDX,dword ptr [RBX + 0x50]\nCMP RDX,0x4\nJNC 0x00402804\nMOV R14,qword ptr [0x403c20 + RDX*0x8]\nJMP 0x00402818\nLEA R14,[RSP + 0x16]\nMOV ESI,0x404870\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOVSXD RDX,dword ptr [RBX + 0x54]\nCMP RDX,0x8\nJNC 0x0040282c\nMOV R15,qword ptr [0x403c40 + RDX*0x8]\nJMP 0x00402840\nLEA R15,[RSP + 0xc]\nMOV ESI,0x404870\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00401340\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RDX,qword ptr [RBX + 0x30]\nMOV RCX,qword ptr [RBX + 0x38]\nMOV R8D,dword ptr [RBX + 0x40]\nMOV R9D,dword ptr [RBX + 0x44]\nMOV R10D,dword ptr [RBX + 0x48]\nMOV R11D,dword ptr [RBX + 0x4c]\nMOV EDI,0x4046b3\nMOV EAX,0x0\nPUSH R11\nPUSH R10\nCALL 0x00401180\nADD RSP,0x10\nCMP dword ptr [RBX + 0x58],0x0\nMOV R12D,0x6061a8\nMOV R13D,0x6061b0\nMOV EAX,0x6061b0\nCMOVNZ RAX,R12\nMOV RCX,qword ptr [RAX]\nMOV EDI,0x4048f7\nXOR EAX,EAX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401180\nCMP dword ptr [RBX + 0x5c],0x0\nCMOVNZ R13,R12\nMOV RSI,qword ptr [R13]\nMOV EDX,dword ptr [RBX + 0x60]\nMOV EDI,0x404920\nXOR EAX,EAX\nCALL 0x00401180\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p144
S'41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 20\n48 89 fb\n48 63 53 50\n48 83 fa 04\n73 0a\n4c 8b 34 d5 20 3c 40 00\neb 14\n4c 8d 74 24 16\nbe 70 48 40 00\n31 c0\n4c 89 f7\ne8 28 eb ff ff\n48 63 53 54\n48 83 fa 08\n73 0a\n4c 8b 3c d5 40 3c 40 00\neb 14\n4c 8d 7c 24 0c\nbe 70 48 40 00\n31 c0\n4c 89 ff\ne8 00 eb ff ff\n48 8b 73 28\n48 8b 53 30\n48 8b 4b 38\n44 8b 43 40\n44 8b 4b 44\n44 8b 53 48\n44 8b 5b 4c\nbf b3 46 40 00\nb8 00 00 00 00\n41 53\n41 52\ne8 11 e9 ff ff\n48 83 c4 10\n83 7b 58 00\n41 bc a8 61 60 00\n41 bd b0 61 60 00\nb8 b0 61 60 00\n49 0f 45 c4\n48 8b 08\nbf f7 48 40 00\n31 c0\n4c 89 f6\n4c 89 fa\ne8 df e8 ff ff\n83 7b 5c 00\n4d 0f 45 ec\n49 8b 75 00\n8b 53 60\nbf 20 49 40 00\n31 c0\ne8 c4 e8 ff ff\n48 83 c4 20\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p145
S'.text:00000000004027e0\n.text:00000000004027e2\n.text:00000000004027e4\n.text:00000000004027e6\n.text:00000000004027e8\n.text:00000000004027e9\n.text:00000000004027ed\n.text:00000000004027f0\n.text:00000000004027f4\n.text:00000000004027f8\n.text:00000000004027fa\n.text:0000000000402802\n.text:0000000000402804\n.text:0000000000402809\n.text:000000000040280e\n.text:0000000000402810\n.text:0000000000402813\n.text:0000000000402818\n.text:000000000040281c\n.text:0000000000402820\n.text:0000000000402822\n.text:000000000040282a\n.text:000000000040282c\n.text:0000000000402831\n.text:0000000000402836\n.text:0000000000402838\n.text:000000000040283b\n.text:0000000000402840\n.text:0000000000402844\n.text:0000000000402848\n.text:000000000040284c\n.text:0000000000402850\n.text:0000000000402854\n.text:0000000000402858\n.text:000000000040285c\n.text:0000000000402861\n.text:0000000000402866\n.text:0000000000402868\n.text:000000000040286a\n.text:000000000040286f\n.text:0000000000402873\n.text:0000000000402877\n.text:000000000040287d\n.text:0000000000402883\n.text:0000000000402888\n.text:000000000040288c\n.text:000000000040288f\n.text:0000000000402894\n.text:0000000000402896\n.text:0000000000402899\n.text:000000000040289c\n.text:00000000004028a1\n.text:00000000004028a5\n.text:00000000004028a9\n.text:00000000004028ad\n.text:00000000004028b0\n.text:00000000004028b5\n.text:00000000004028b7\n.text:00000000004028bc\n.text:00000000004028c0\n.text:00000000004028c1\n.text:00000000004028c3\n.text:00000000004028c5\n.text:00000000004028c7\n.text:00000000004028c9\n'
p146
tp147
sS'exit'
p148
(S'\n__stdcall exit(int __status)\n'
p149
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00606168)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00606168]\n'
p151
S'ff 25 12 4e 20 00\n'
p152
S'.plt:0000000000401350\n'
p153
tp154
sS'do_LeaveNotify'
p155
(S'\n__stdcall do_LeaveNotify(XEvent * eventp)\n'
p156
V\u000avoid do_LeaveNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  char **ppcVar2;\u000a  char *__s;\u000a  char *__s_00;\u000a  char acStack60 [10];\u000a  char acStack50 [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x50) < 4) {\u000a    __s = (&PTR_s_NotifyNormal_00403c20)[(long)*(int *)(*eventp + 0x50)];\u000a  }\u000a  else {\u000a    __s = acStack50;\u000a    sprintf(__s,"%u");\u000a  }\u000a  if ((ulong)(long)*(int *)(*eventp + 0x54) < 8) {\u000a    __s_00 = (&PTR_s_NotifyAncestor_00403c40)[(long)*(int *)(*eventp + 0x54)];\u000a  }\u000a  else {\u000a    __s_00 = acStack60;\u000a    sprintf(__s_00,"%u");\u000a  }\u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar2 = &No;\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    mode %s, detail %s, same_screen %s,\u005cn",__s,__s_00,*ppcVar1);\u000a  if (*(int *)(*eventp + 0x5c) != 0) {\u000a    ppcVar2 = &Yes;\u000a  }\u000a  printf("    focus %s, state %u\u005cn",*ppcVar2,(ulong)*(uint *)(*eventp + 0x60));\u000a  return;\u000a}\u000a\u000a
p157
S'JMP 0x004027e0\n'
p158
S'e9 0b ff ff ff\n'
p159
S'.text:00000000004028d0\n'
p160
tp161
sS'sscanf'
p162
(S'\n__stdcall sscanf(char * __s, char * __format)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sscanf(char *__s,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_sscanf_006060f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x006060f8]\n'
p165
S'ff 25 82 4e 20 00\n'
p166
S'.plt:0000000000401270\n'
p167
tp168
sS'do_ResizeRequest'
p169
(S'\n__stdcall do_ResizeRequest(XEvent * eventp)\n'
p170
V\u000avoid do_ResizeRequest(XEvent *eventp)\u000a\u000a{\u000a  printf("    width %d, height %d\u005cn",(ulong)*(uint *)(*eventp + 0x28),\u000a         (ulong)*(uint *)(*eventp + 0x2c));\u000a  return;\u000a}\u000a\u000a
p171
S'MOV ESI,dword ptr [RDI + 0x28]\nMOV EDX,dword ptr [RDI + 0x2c]\nMOV EDI,0x404cc0\nXOR EAX,EAX\nJMP 0x00401180\n'
p172
S'8b 77 28\n8b 57 2c\nbf c0 4c 40 00\n31 c0\ne9 fe e3 ff ff\n'
p173
S'.text:0000000000402d70\n.text:0000000000402d73\n.text:0000000000402d76\n.text:0000000000402d7b\n.text:0000000000402d7d\n'
p174
tp175
sS'XNextEvent'
p176
(S'\n__stdcall XNextEvent()\n'
p177
V\u000avoid XNextEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XNextEvent_006060d0)();\u000a  return;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x006060d0]\n'
p179
S'ff 25 aa 4e 20 00\n'
p180
S'.plt:0000000000401220\n'
p181
tp182
sS'setlocale'
p183
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p184
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_00606138)();\u000a  return pcVar1;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x00606138]\n'
p186
S'ff 25 42 4e 20 00\n'
p187
S'.plt:00000000004012f0\n'
p188
tp189
sS'do_Expose'
p190
(S'\n__stdcall do_Expose(XEvent * eventp)\n'
p191
V\u000avoid do_Expose(XEvent *eventp)\u000a\u000a{\u000a  printf("    (%d,%d), width %d, height %d, count %d\u005cn",(ulong)*(uint *)(*eventp + 0x28),\u000a         (ulong)*(uint *)(*eventp + 0x2c),(ulong)*(uint *)(*eventp + 0x30),\u000a         (ulong)*(uint *)(*eventp + 0x34),(ulong)*(uint *)(*eventp + 0x38));\u000a  return;\u000a}\u000a\u000a
p192
S'MOV ESI,dword ptr [RDI + 0x28]\nMOV EDX,dword ptr [RDI + 0x2c]\nMOV ECX,dword ptr [RDI + 0x30]\nMOV R8D,dword ptr [RDI + 0x34]\nMOV R9D,dword ptr [RDI + 0x38]\nMOV EDI,0x40496f\nXOR EAX,EAX\nJMP 0x00401180\n'
p193
S'8b 77 28\n8b 57 2c\n8b 4f 30\n44 8b 47 34\n44 8b 4f 38\nbf 6f 49 40 00\n31 c0\ne9 93 e7 ff ff\n'
p194
S'.text:00000000004029d0\n.text:00000000004029d3\n.text:00000000004029d6\n.text:00000000004029d9\n.text:00000000004029dd\n.text:00000000004029e1\n.text:00000000004029e6\n.text:00000000004029e8\n'
p195
tp196
sS'strncasecmp'
p197
(S'\n__stdcall strncasecmp(char * __s1, char * __s2, size_t __n)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncasecmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncasecmp_006060e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x006060e0]\n'
p200
S'ff 25 9a 4e 20 00\n'
p201
S'.plt:0000000000401240\n'
p202
tp203
sS'do_ButtonPress'
p204
(S'\n__stdcall do_ButtonPress(XEvent * eventp)\n'
p205
V\u000avoid do_ButtonPress(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    state 0x%x, button %u, same_screen %s\u005cn",(ulong)*(uint *)(*eventp + 0x50),\u000a         (ulong)*(uint *)(*eventp + 0x54),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p206
S'PUSH RBX\nMOV RBX,RDI\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RDX,qword ptr [RBX + 0x30]\nMOV RCX,qword ptr [RBX + 0x38]\nMOV R8D,dword ptr [RBX + 0x40]\nMOV R9D,dword ptr [RBX + 0x44]\nMOV R10D,dword ptr [RBX + 0x48]\nMOV R11D,dword ptr [RBX + 0x4c]\nMOV EDI,0x4046b3\nMOV EAX,0x0\nPUSH R11\nPUSH R10\nCALL 0x00401180\nADD RSP,0x10\nMOV ESI,dword ptr [RBX + 0x50]\nMOV EDX,dword ptr [RBX + 0x54]\nCMP dword ptr [RBX + 0x58],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV EDI,0x4047e1\nXOR EAX,EAX\nPOP RBX\nJMP 0x00401180\n'
p207
S'53\n48 89 fb\n48 8b 73 28\n48 8b 53 30\n48 8b 4b 38\n44 8b 43 40\n44 8b 4b 44\n44 8b 53 48\n44 8b 5b 4c\nbf b3 46 40 00\nb8 00 00 00 00\n41 53\n41 52\ne8 3d ea ff ff\n48 83 c4 10\n8b 73 50\n8b 53 54\n83 7b 58 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\nbf e1 47 40 00\n31 c0\n5b\ne9 11 ea ff ff\n'
p208
S'.text:0000000000402710\n.text:0000000000402711\n.text:0000000000402714\n.text:0000000000402718\n.text:000000000040271c\n.text:0000000000402720\n.text:0000000000402724\n.text:0000000000402728\n.text:000000000040272c\n.text:0000000000402730\n.text:0000000000402735\n.text:000000000040273a\n.text:000000000040273c\n.text:000000000040273e\n.text:0000000000402743\n.text:0000000000402747\n.text:000000000040274a\n.text:000000000040274d\n.text:0000000000402751\n.text:0000000000402756\n.text:000000000040275b\n.text:000000000040275f\n.text:0000000000402762\n.text:0000000000402767\n.text:0000000000402769\n.text:000000000040276a\n'
p209
tp210
sS'parse_event_mask'
p211
(S'\n__stdcall parse_event_mask(char * s, long * event_masks)\n'
p212
V\u000aint parse_event_mask(char *s,long *event_masks)\u000a\u000a{\u000a  anon_struct_0 events [13];\u000a  int iVar1;\u000a  long lVar2;\u000a  char *__s2;\u000a  \u000a  __s2 = "keyboard";\u000a  lVar2 = -0x120;\u000a  do {\u000a    if (s == (char *)0x0) {\u000a      event_masks[(ulong)*(uint *)(lVar2 + 0x403c08)] =\u000a           event_masks[(ulong)*(uint *)(lVar2 + 0x403c08)] | *(ulong *)(lVar2 + 0x403c10);\u000a    }\u000a    else {\u000a      iVar1 = strcmp(s,__s2);\u000a      if (iVar1 == 0) {\u000a        event_masks\u000a        [(ulong)*(uint *)((long)&((anon_struct_0 *)&ram0x00403ae0)[0xc].mask_index + lVar2)] =\u000a             event_masks\u000a             [(ulong)*(uint *)((long)&((anon_struct_0 *)&ram0x00403ae0)[0xc].mask_index + lVar2)] |\u000a             *(ulong *)(lVar2 + 0x403c10);\u000a        return 1;\u000a      }\u000a    }\u000a    __s2 = *(char **)(&UNK_00403c18 + lVar2);\u000a    lVar2 = lVar2 + 0x18;\u000a  } while (lVar2 != 0);\u000a  if (s != (char *)0x0) {\u000a    fprintf(stderr,"%s: unrecognized event mask \u005c'%s\u005c'\u005cn",ProgramName,s);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p213
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nMOV RBX,RDI\nMOV ESI,0x4045f5\nMOV RBP,-0x120\nNOP word ptr CS:[RAX + RAX*0x1]\nTEST RBX,RBX\nJZ 0x004022a0\nMOV RDI,RBX\nCALL 0x004011b0\nTEST EAX,EAX\nJNZ 0x004022b1\nJMP 0x004022e6\nMOV RAX,qword ptr [0x403c10 + RBP]\nMOV ECX,dword ptr [0x403c08 + RBP]\nOR qword ptr [R14 + RCX*0x8],RAX\nMOV RSI,qword ptr [0x403c18 + RBP]\nADD RBP,0x18\nJNZ 0x00402280\nXOR EBP,EBP\nTEST RBX,RBX\nJZ 0x004022fc\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nXOR EBP,EBP\nMOV ESI,0x40464a\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x004011f0\nJMP 0x004022fc\nMOV RAX,qword ptr [0x403c10 + RBP]\nMOV ECX,dword ptr [0x403c08 + RBP]\nOR qword ptr [R14 + RCX*0x8],RAX\nMOV EBP,0x1\nMOV EAX,EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p214
S'55\n41 56\n53\n49 89 f6\n48 89 fb\nbe f5 45 40 00\n48 c7 c5 e0 fe ff ff\n66 2e 0f 1f 84 00 00 00 00 00\n48 85 db\n74 1b\n48 89 df\ne8 23 ef ff ff\n85 c0\n75 20\neb 53\n48 8b 85 10 3c 40 00\n8b 8d 08 3c 40 00\n49 09 04 ce\n48 8b b5 18 3c 40 00\n48 83 c5 18\n75 c2\n31 ed\n48 85 db\n74 37\n48 8b 3d 34 3f 20 00\n48 8b 15 75 3f 20 00\n31 ed\nbe 4a 46 40 00\n31 c0\n48 89 d9\ne8 0c ef ff ff\neb 16\n48 8b 85 10 3c 40 00\n8b 8d 08 3c 40 00\n49 09 04 ce\nbd 01 00 00 00\n89 e8\n5b\n41 5e\n5d\nc3\n'
p215
S'.text:0000000000402260\n.text:0000000000402261\n.text:0000000000402263\n.text:0000000000402264\n.text:0000000000402267\n.text:000000000040226a\n.text:000000000040226f\n.text:0000000000402276\n.text:0000000000402280\n.text:0000000000402283\n.text:0000000000402285\n.text:0000000000402288\n.text:000000000040228d\n.text:000000000040228f\n.text:0000000000402291\n.text:00000000004022a0\n.text:00000000004022a7\n.text:00000000004022ad\n.text:00000000004022b1\n.text:00000000004022b8\n.text:00000000004022bc\n.text:00000000004022be\n.text:00000000004022c0\n.text:00000000004022c3\n.text:00000000004022c5\n.text:00000000004022cc\n.text:00000000004022d3\n.text:00000000004022d5\n.text:00000000004022da\n.text:00000000004022dc\n.text:00000000004022df\n.text:00000000004022e4\n.text:00000000004022e6\n.text:00000000004022ed\n.text:00000000004022f3\n.text:00000000004022f7\n.text:00000000004022fc\n.text:00000000004022fe\n.text:00000000004022ff\n.text:0000000000402301\n.text:0000000000402302\n'
p216
tp217
sS'deregister_tm_clones'
p218
(S'\n__stdcall deregister_tm_clones()\n'
p219
V\u000a/* WARNING: Removing unreachable block (ram,0x004013f5) */\u000a/* WARNING: Removing unreachable block (ram,0x004013ff) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p220
S'MOV EAX,0x6061cf\nPUSH RBP\nSUB RAX,0x6061c8\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401410\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401410\nPOP RBP\nMOV EDI,0x6061c8\nJMP RAX\nPOP RBP\nRET\n'
p221
S'b8 cf 61 60 00\n55\n48 2d c8 61 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf c8 61 60 00\nff e0\n5d\nc3\n'
p222
S'.text:00000000004013e0\n.text:00000000004013e5\n.text:00000000004013e6\n.text:00000000004013ec\n.text:00000000004013f0\n.text:00000000004013f3\n.text:00000000004013f5\n.text:00000000004013fa\n.text:00000000004013fd\n.text:00000000004013ff\n.text:0000000000401400\n.text:0000000000401405\n.text:0000000000401410\n.text:0000000000401411\n'
p223
tp224
sS'XRRSelectInput'
p225
(S'\n__stdcall XRRSelectInput()\n'
p226
V\u000avoid XRRSelectInput(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRSelectInput_00606178)();\u000a  return;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x00606178]\n'
p228
S'ff 25 02 4e 20 00\n'
p229
S'.plt:0000000000401370\n'
p230
tp231
sS'do_ButtonRelease'
p232
(S'\n__stdcall do_ButtonRelease(XEvent * eventp)\n'
p233
V\u000avoid do_ButtonRelease(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    state 0x%x, button %u, same_screen %s\u005cn",(ulong)*(uint *)(*eventp + 0x50),\u000a         (ulong)*(uint *)(*eventp + 0x54),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p234
S'JMP 0x00402710\n'
p235
S'eb 9e\n'
p236
S'.text:0000000000402770\n'
p237
tp238
sS'print_Rotation'
p239
(S'\n__stdcall print_Rotation()\n'
p240
V\u000avoid print_Rotation(ulong uParm1)\u000a\u000a{\u000a  char *__format;\u000a  \u000a  if ((uParm1 & 1) == 0) {\u000a    if ((uParm1 & 2) == 0) {\u000a      if ((uParm1 & 4) == 0) {\u000a        if ((uParm1 & 8) == 0) {\u000a          printf("%d",uParm1 & 0xffffffff);\u000a          return;\u000a        }\u000a        __format = "RR_Rotate_270";\u000a      }\u000a      else {\u000a        __format = "RR_Rotate_180";\u000a      }\u000a    }\u000a    else {\u000a      __format = "RR_Rotate_90";\u000a    }\u000a  }\u000a  else {\u000a    __format = "RR_Rotate_0";\u000a  }\u000a  printf(__format);\u000a  if ((uParm1 & 0x10) != 0) {\u000a    printf(", RR_Reflect_X");\u000a  }\u000a  if ((uParm1 & 0x20) == 0) {\u000a    return;\u000a  }\u000a  printf(", RR_Reflect_Y");\u000a  return;\u000a}\u000a\u000a
p241
S'PUSH RBX\nMOV EBX,EDI\nTEST BL,0x1\nJNZ 0x00403426\nTEST BL,0x2\nJNZ 0x0040342d\nTEST BL,0x4\nJNZ 0x00403434\nTEST BL,0x8\nJNZ 0x0040343b\nMOV EDI,0x4049ae\nXOR EAX,EAX\nMOV ESI,EBX\nPOP RBX\nJMP 0x00401180\nMOV EDI,0x405088\nJMP 0x00403440\nMOV EDI,0x405094\nJMP 0x00403440\nMOV EDI,0x4050a1\nJMP 0x00403440\nMOV EDI,0x4050af\nXOR EAX,EAX\nCALL 0x00401180\nTEST BL,0x10\nJZ 0x00403458\nMOV EDI,0x4050bd\nXOR EAX,EAX\nCALL 0x00401180\nTEST BL,0x20\nJNZ 0x0040345f\nPOP RBX\nRET\nMOV EDI,0x4050cc\nXOR EAX,EAX\nPOP RBX\nJMP 0x00401180\n'
p242
S'53\n89 fb\nf6 c3 01\n75 1e\nf6 c3 02\n75 20\nf6 c3 04\n75 22\nf6 c3 08\n75 24\nbf ae 49 40 00\n31 c0\n89 de\n5b\ne9 5a dd ff ff\nbf 88 50 40 00\neb 13\nbf 94 50 40 00\neb 0c\nbf a1 50 40 00\neb 05\nbf af 50 40 00\n31 c0\ne8 39 dd ff ff\nf6 c3 10\n74 0c\nbf bd 50 40 00\n31 c0\ne8 28 dd ff ff\nf6 c3 20\n75 02\n5b\nc3\nbf cc 50 40 00\n31 c0\n5b\ne9 14 dd ff ff\n'
p243
S'.text:0000000000403400\n.text:0000000000403401\n.text:0000000000403403\n.text:0000000000403406\n.text:0000000000403408\n.text:000000000040340b\n.text:000000000040340d\n.text:0000000000403410\n.text:0000000000403412\n.text:0000000000403415\n.text:0000000000403417\n.text:000000000040341c\n.text:000000000040341e\n.text:0000000000403420\n.text:0000000000403421\n.text:0000000000403426\n.text:000000000040342b\n.text:000000000040342d\n.text:0000000000403432\n.text:0000000000403434\n.text:0000000000403439\n.text:000000000040343b\n.text:0000000000403440\n.text:0000000000403442\n.text:0000000000403447\n.text:000000000040344a\n.text:000000000040344c\n.text:0000000000403451\n.text:0000000000403453\n.text:0000000000403458\n.text:000000000040345b\n.text:000000000040345d\n.text:000000000040345e\n.text:000000000040345f\n.text:0000000000403464\n.text:0000000000403466\n.text:0000000000403467\n'
p244
tp245
sS'XDisplayName'
p246
(S'\n__stdcall XDisplayName()\n'
p247
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_00606100)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00606100]\n'
p249
S'ff 25 7a 4e 20 00\n'
p250
S'.plt:0000000000401280\n'
p251
tp252
sS'do_ColormapNotify'
p253
(S'\n__stdcall do_ColormapNotify(XEvent * eventp)\n'
p254
V\u000avoid do_ColormapNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  char *__s;\u000a  char sdummy [10];\u000a  char local_1a [10];\u000a  \u000a  if (*(int *)(*eventp + 0x34) == 1) {\u000a    __s = "ColormapInstalled";\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x34) == 0) {\u000a      __s = "ColormapUninstalled";\u000a    }\u000a    else {\u000a      __s = local_1a;\u000a      sprintf(__s,"%d");\u000a    }\u000a  }\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x30) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    colormap 0x%lx, new %s, state %s\u005cn",*(undefined8 *)(*eventp + 0x28),*ppcVar1,__s);\u000a  return;\u000a}\u000a\u000a
p255
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOV EDX,dword ptr [RBX + 0x34]\nCMP EDX,0x1\nJZ 0x004030ce\nTEST EDX,EDX\nJNZ 0x004030d6\nMOV R14D,0x404e84\nJMP 0x004030ea\nMOV R14D,0x404e72\nJMP 0x004030ea\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV RSI,qword ptr [RBX + 0x28]\nCMP dword ptr [RBX + 0x30],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RDX,qword ptr [RCX]\nMOV EDI,0x404e98\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p256
S'41 56\n53\n48 83 ec 18\n48 89 fb\n8b 53 34\n83 fa 01\n74 0c\n85 d2\n75 10\n41 be 84 4e 40 00\neb 1c\n41 be 72 4e 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 56 e2 ff ff\n48 8b 73 28\n83 7b 30 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 11\nbf 98 4e 40 00\n31 c0\n4c 89 f1\ne8 6e e0 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p257
S'.text:00000000004030b0\n.text:00000000004030b2\n.text:00000000004030b3\n.text:00000000004030b7\n.text:00000000004030ba\n.text:00000000004030bd\n.text:00000000004030c0\n.text:00000000004030c2\n.text:00000000004030c4\n.text:00000000004030c6\n.text:00000000004030cc\n.text:00000000004030ce\n.text:00000000004030d4\n.text:00000000004030d6\n.text:00000000004030db\n.text:00000000004030e0\n.text:00000000004030e2\n.text:00000000004030e5\n.text:00000000004030ea\n.text:00000000004030ee\n.text:00000000004030f2\n.text:00000000004030f7\n.text:00000000004030fc\n.text:0000000000403100\n.text:0000000000403103\n.text:0000000000403108\n.text:000000000040310a\n.text:000000000040310d\n.text:0000000000403112\n.text:0000000000403116\n.text:0000000000403117\n.text:0000000000403119\n'
p258
tp259
sS'atoi'
p260
(S'\n__stdcall atoi(char * __nptr)\n'
p261
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint atoi(char *__nptr)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_atoi_00606158)();\u000a  return iVar1;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x00606158]\n'
p263
S'ff 25 22 4e 20 00\n'
p264
S'.plt:0000000000401330\n'
p265
tp266
sS'malloc'
p267
(S'\n__stdcall malloc(size_t __size)\n'
p268
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_006060d8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006060d8]\n'
p270
S'ff 25 a2 4e 20 00\n'
p271
S'.plt:0000000000401230\n'
p272
tp273
sS'do_ConfigureNotify'
p274
(S'\n__stdcall do_ConfigureNotify(XEvent * eventp)\n'
p275
V\u000avoid do_ConfigureNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  printf("    event 0x%lx, window 0x%lx, (%d,%d), width %d, height %d,\u005cn",\u000a         *(undefined8 *)(*eventp + 0x20),*(undefined8 *)(*eventp + 0x28),\u000a         (ulong)*(uint *)(*eventp + 0x30),(ulong)*(uint *)(*eventp + 0x34),\u000a         (ulong)*(uint *)(*eventp + 0x38),*(undefined4 *)(*eventp + 0x3c));\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x50) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    border_width %d, above 0x%lx, override %s\u005cn",(ulong)*(uint *)(*eventp + 0x40),\u000a         *(undefined8 *)(*eventp + 0x48),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p276
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV ECX,dword ptr [RBX + 0x30]\nMOV R8D,dword ptr [RBX + 0x34]\nMOV R9D,dword ptr [RBX + 0x38]\nMOV EAX,dword ptr [RBX + 0x3c]\nMOV dword ptr [RSP],EAX\nMOV EDI,0x404b8e\nXOR EAX,EAX\nCALL 0x00401180\nMOV ESI,dword ptr [RBX + 0x40]\nMOV RDX,qword ptr [RBX + 0x48]\nCMP dword ptr [RBX + 0x50],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV EDI,0x404bcc\nXOR EAX,EAX\nADD RSP,0x10\nPOP RBX\nJMP 0x00401180\n'
p277
S'53\n48 83 ec 10\n48 89 fb\n48 8b 73 20\n48 8b 53 28\n8b 4b 30\n44 8b 43 34\n44 8b 4b 38\n8b 43 3c\n89 04 24\nbf 8e 4b 40 00\n31 c0\ne8 e3 e4 ff ff\n8b 73 40\n48 8b 53 48\n83 7b 50 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\nbf cc 4b 40 00\n31 c0\n48 83 c4 10\n5b\ne9 b6 e4 ff ff\n'
p278
S'.text:0000000000402c70\n.text:0000000000402c71\n.text:0000000000402c75\n.text:0000000000402c78\n.text:0000000000402c7c\n.text:0000000000402c80\n.text:0000000000402c83\n.text:0000000000402c87\n.text:0000000000402c8b\n.text:0000000000402c8e\n.text:0000000000402c91\n.text:0000000000402c96\n.text:0000000000402c98\n.text:0000000000402c9d\n.text:0000000000402ca0\n.text:0000000000402ca4\n.text:0000000000402ca8\n.text:0000000000402cad\n.text:0000000000402cb2\n.text:0000000000402cb6\n.text:0000000000402cb9\n.text:0000000000402cbe\n.text:0000000000402cc0\n.text:0000000000402cc4\n.text:0000000000402cc5\n'
p279
tp280
sS'XRRUpdateConfiguration'
p281
(S'\n__stdcall XRRUpdateConfiguration()\n'
p282
V\u000avoid XRRUpdateConfiguration(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRUpdateConfiguration_00606058)();\u000a  return;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x00606058]\n'
p284
S'ff 25 22 4f 20 00\n'
p285
S'.plt:0000000000401130\n'
p286
tp287
sS'do_RRNotify_CrtcChange'
p288
(S'\n__stdcall do_RRNotify_CrtcChange(XEvent * eventp, XRRScreenResources * screen_resources)\n'
p289
V\u000avoid do_RRNotify_CrtcChange(XEvent *eventp,XRRScreenResources *screen_resources)\u000a\u000a{\u000a  long lVar1;\u000a  XRRModeInfo *pXVar2;\u000a  char *pcVar3;\u000a  char *__format;\u000a  \u000a  if ((screen_resources != (XRRScreenResources *)0x0) && (0 < screen_resources->nmode)) {\u000a    pXVar2 = screen_resources->modes;\u000a    lVar1 = 0;\u000a    do {\u000a      if (pXVar2->id == *(RRMode *)(*eventp + 0x38)) goto LAB_00403607;\u000a      lVar1 = lVar1 + 1;\u000a      pXVar2 = pXVar2 + 1;\u000a    } while (lVar1 < (long)screen_resources->nmode);\u000a  }\u000a  pXVar2 = (XRRModeInfo *)0x0;\u000aLAB_00403607:\u000a  puts("    subtype XRRCrtcChangeNotifyEvent");\u000a  if (*(long *)(*eventp + 0x30) == 0) {\u000a    printf("    crtc None, ");\u000a    if (pXVar2 == (XRRModeInfo *)0x0) goto LAB_00403649;\u000aLAB_0040363e:\u000a    pcVar3 = pXVar2->name;\u000a    __format = "mode %s, ";\u000a  }\u000a  else {\u000a    printf("    crtc %lu, ");\u000a    if (pXVar2 != (XRRModeInfo *)0x0) goto LAB_0040363e;\u000aLAB_00403649:\u000a    pcVar3 = *(char **)(*eventp + 0x38);\u000a    if (pcVar3 == (char *)0x0) {\u000a      printf("mode None, ");\u000a      goto LAB_0040365e;\u000a    }\u000a    __format = "mode %lu, ";\u000a  }\u000a  printf(__format,pcVar3);\u000aLAB_0040365e:\u000a  printf("rotation ");\u000a  print_Rotation((ulong)*(ushort *)(*eventp + 0x40));\u000a  printf("\u005cn    x %d, y %d, width %d, height %d\u005cn",(ulong)*(uint *)(*eventp + 0x44),\u000a         (ulong)*(uint *)(*eventp + 0x48),(ulong)*(uint *)(*eventp + 0x4c),\u000a         (ulong)*(uint *)(*eventp + 0x50));\u000a  return;\u000a}\u000a\u000a
p290
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nTEST RSI,RSI\nJZ 0x00403605\nCMP dword ptr [RSI + 0x30],0x0\nJLE 0x00403605\nMOV RBX,qword ptr [RSI + 0x38]\nMOV RAX,qword ptr [R14 + 0x38]\nXOR ECX,ECX\nNOP dword ptr [RAX]\nCMP qword ptr [RBX],RAX\nJZ 0x00403607\nINC RCX\nMOVSXD RDX,dword ptr [RSI + 0x30]\nADD RBX,0x50\nCMP RCX,RDX\nJL 0x004035f0\nXOR EBX,EBX\nMOV EDI,0x4052e0\nCALL 0x004010f0\nMOV RSI,qword ptr [R14 + 0x30]\nTEST RSI,RSI\nJZ 0x0040362d\nMOV EDI,0x4051cc\nXOR EAX,EAX\nCALL 0x00401180\nTEST RBX,RBX\nJNZ 0x0040363e\nJMP 0x00403649\nMOV EDI,0x4051db\nXOR EAX,EAX\nCALL 0x00401180\nTEST RBX,RBX\nJZ 0x00403649\nMOV RSI,qword ptr [RBX + 0x38]\nMOV EDI,0x4051eb\nJMP 0x00403657\nMOV RSI,qword ptr [R14 + 0x38]\nTEST RSI,RSI\nJZ 0x00403697\nMOV EDI,0x4051f5\nXOR EAX,EAX\nCALL 0x00401180\nMOV EDI,0x404fdc\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX EDI,word ptr [R14 + 0x40]\nCALL 0x00403400\nMOV ESI,dword ptr [R14 + 0x44]\nMOV EDX,dword ptr [R14 + 0x48]\nMOV ECX,dword ptr [R14 + 0x4c]\nMOV R8D,dword ptr [R14 + 0x50]\nMOV EDI,0x40520c\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401180\nMOV EDI,0x405200\nXOR EAX,EAX\nCALL 0x00401180\nJMP 0x0040365e\n'
p291
S'41 56\n53\n50\n49 89 fe\n48 85 f6\n74 29\n83 7e 30 00\n7e 23\n48 8b 5e 38\n49 8b 46 38\n31 c9\n0f 1f 40 00\n48 39 03\n74 12\n48 ff c1\n48 63 56 30\n48 83 c3 50\n48 39 d1\n7c eb\n31 db\nbf e0 52 40 00\ne8 df da ff ff\n49 8b 76 30\n48 85 f6\n74 13\nbf cc 51 40 00\n31 c0\ne8 5a db ff ff\n48 85 db\n75 13\neb 1c\nbf db 51 40 00\n31 c0\ne8 47 db ff ff\n48 85 db\n74 0b\n48 8b 73 38\nbf eb 51 40 00\neb 0e\n49 8b 76 38\n48 85 f6\n74 45\nbf f5 51 40 00\n31 c0\ne8 22 db ff ff\nbf dc 4f 40 00\n31 c0\ne8 16 db ff ff\n41 0f b7 7e 40\ne8 8c fd ff ff\n41 8b 76 44\n41 8b 56 48\n41 8b 4e 4c\n45 8b 46 50\nbf 0c 52 40 00\n31 c0\n48 83 c4 08\n5b\n41 5e\ne9 e9 da ff ff\nbf 00 52 40 00\n31 c0\ne8 dd da ff ff\neb b9\n'
p292
S'.text:00000000004035d0\n.text:00000000004035d2\n.text:00000000004035d3\n.text:00000000004035d4\n.text:00000000004035d7\n.text:00000000004035da\n.text:00000000004035dc\n.text:00000000004035e0\n.text:00000000004035e2\n.text:00000000004035e6\n.text:00000000004035ea\n.text:00000000004035ec\n.text:00000000004035f0\n.text:00000000004035f3\n.text:00000000004035f5\n.text:00000000004035f8\n.text:00000000004035fc\n.text:0000000000403600\n.text:0000000000403603\n.text:0000000000403605\n.text:0000000000403607\n.text:000000000040360c\n.text:0000000000403611\n.text:0000000000403615\n.text:0000000000403618\n.text:000000000040361a\n.text:000000000040361f\n.text:0000000000403621\n.text:0000000000403626\n.text:0000000000403629\n.text:000000000040362b\n.text:000000000040362d\n.text:0000000000403632\n.text:0000000000403634\n.text:0000000000403639\n.text:000000000040363c\n.text:000000000040363e\n.text:0000000000403642\n.text:0000000000403647\n.text:0000000000403649\n.text:000000000040364d\n.text:0000000000403650\n.text:0000000000403652\n.text:0000000000403657\n.text:0000000000403659\n.text:000000000040365e\n.text:0000000000403663\n.text:0000000000403665\n.text:000000000040366a\n.text:000000000040366f\n.text:0000000000403674\n.text:0000000000403678\n.text:000000000040367c\n.text:0000000000403680\n.text:0000000000403684\n.text:0000000000403689\n.text:000000000040368b\n.text:000000000040368f\n.text:0000000000403690\n.text:0000000000403692\n.text:0000000000403697\n.text:000000000040369c\n.text:000000000040369e\n.text:00000000004036a3\n'
p293
tp294
sS'XRRGetScreenResources'
p295
(S'\n__stdcall XRRGetScreenResources()\n'
p296
V\u000avoid XRRGetScreenResources(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRGetScreenResources_00606090)();\u000a  return;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x00606090]\n'
p298
S'ff 25 ea 4e 20 00\n'
p299
S'.plt:00000000004011a0\n'
p300
tp301
sS'fprintf'
p302
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_006060b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x006060b8]\n'
p305
S'ff 25 c2 4e 20 00\n'
p306
S'.plt:00000000004011f0\n'
p307
tp308
sS'print_Connection'
p309
(S'\n__stdcall print_Connection()\n'
p310
V\u000avoid print_Connection(undefined8 uParm1)\u000a\u000a{\u000a  if ((uint)uParm1 == 2) {\u000a    printf("RR_UnknownConnection");\u000a    return;\u000a  }\u000a  if (((uint)uParm1 & 0xffff) != 1) {\u000a    if ((short)uParm1 == 0) {\u000a      printf("RR_Connected");\u000a      return;\u000a    }\u000a    printf("%d");\u000a    return;\u000a  }\u000a  printf("RR_Disconnected");\u000a  return;\u000a}\u000a\u000a
p311
S'CMP EDI,0x2\nJZ 0x004037ae\nMOVZX ESI,DI\nCMP ESI,0x1\nJZ 0x004037ba\nTEST DI,DI\nJNZ 0x004037c6\nMOV EDI,0x405174\nXOR EAX,EAX\nJMP 0x00401180\nMOV EDI,0x405191\nXOR EAX,EAX\nJMP 0x00401180\nMOV EDI,0x405181\nXOR EAX,EAX\nJMP 0x00401180\nMOV EDI,0x4049ae\nXOR EAX,EAX\nJMP 0x00401180\n'
p312
S'83 ff 02\n74 19\n0f b7 f7\n83 fe 01\n74 1d\n66 85 ff\n75 24\nbf 74 51 40 00\n31 c0\ne9 d2 d9 ff ff\nbf 91 51 40 00\n31 c0\ne9 c6 d9 ff ff\nbf 81 51 40 00\n31 c0\ne9 ba d9 ff ff\nbf ae 49 40 00\n31 c0\ne9 ae d9 ff ff\n'
p313
S'.text:0000000000403790\n.text:0000000000403793\n.text:0000000000403795\n.text:0000000000403798\n.text:000000000040379b\n.text:000000000040379d\n.text:00000000004037a0\n.text:00000000004037a2\n.text:00000000004037a7\n.text:00000000004037a9\n.text:00000000004037ae\n.text:00000000004037b3\n.text:00000000004037b5\n.text:00000000004037ba\n.text:00000000004037bf\n.text:00000000004037c1\n.text:00000000004037c6\n.text:00000000004037cb\n.text:00000000004037cd\n'
p314
tp315
sS'XCreateIC'
p316
(S'\n__stdcall XCreateIC()\n'
p317
V\u000avoid XCreateIC(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateIC_006060a0)();\u000a  return;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x006060a0]\n'
p319
S'ff 25 da 4e 20 00\n'
p320
S'.plt:00000000004011c0\n'
p321
tp322
sS'do_RRScreenChangeNotify'
p323
(S'\n__stdcall do_RRScreenChangeNotify(XEvent * eventp)\n'
p324
V\u000avoid do_RRScreenChangeNotify(XEvent *eventp)\u000a\u000a{\u000a  XRRUpdateConfiguration();\u000a  printf("    root 0x%lx, timestamp %lu, config_timestamp %lu\u005cn",*(undefined8 *)(*eventp + 0x28),\u000a         *(undefined8 *)(*eventp + 0x30),*(undefined8 *)(*eventp + 0x38));\u000a  printf("    size_index %hu",(ulong)*(ushort *)(*eventp + 0x40));\u000a  printf(", subpixel_order ");\u000a  print_SubPixelOrder((ulong)*(ushort *)(*eventp + 0x42));\u000a  printf("\u005cn    rotation ");\u000a  print_Rotation((ulong)*(ushort *)(*eventp + 0x44));\u000a  printf("\u005cn    width %d, height %d, mwidth %d, mheight %d\u005cn",(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c),(ulong)*(uint *)(*eventp + 0x50),\u000a         (ulong)*(uint *)(*eventp + 0x54));\u000a  return;\u000a}\u000a\u000a
p325
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401130\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RDX,qword ptr [RBX + 0x30]\nMOV RCX,qword ptr [RBX + 0x38]\nMOV EDI,0x404f7d\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX ESI,word ptr [RBX + 0x40]\nMOV EDI,0x404fb2\nXOR EAX,EAX\nCALL 0x00401180\nMOV EDI,0x404fc5\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX EDI,word ptr [RBX + 0x42]\nCALL 0x00403390\nMOV EDI,0x404fd7\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX EDI,word ptr [RBX + 0x44]\nCALL 0x00403400\nMOV ESI,dword ptr [RBX + 0x48]\nMOV EDX,dword ptr [RBX + 0x4c]\nMOV ECX,dword ptr [RBX + 0x50]\nMOV R8D,dword ptr [RBX + 0x54]\nMOV EDI,0x404fe6\nXOR EAX,EAX\nPOP RBX\nJMP 0x00401180\n'
p326
S'53\n48 89 fb\ne8 e7 de ff ff\n48 8b 73 28\n48 8b 53 30\n48 8b 4b 38\nbf 7d 4f 40 00\n31 c0\ne8 1f df ff ff\n0f b7 73 40\nbf b2 4f 40 00\n31 c0\ne8 0f df ff ff\nbf c5 4f 40 00\n31 c0\ne8 03 df ff ff\n0f b7 7b 42\ne8 0a 01 00 00\nbf d7 4f 40 00\n31 c0\ne8 ee de ff ff\n0f b7 7b 44\ne8 65 01 00 00\n8b 73 48\n8b 53 4c\n8b 4b 50\n44 8b 43 54\nbf e6 4f 40 00\n31 c0\n5b\ne9 cb de ff ff\n'
p327
S'.text:0000000000403240\n.text:0000000000403241\n.text:0000000000403244\n.text:0000000000403249\n.text:000000000040324d\n.text:0000000000403251\n.text:0000000000403255\n.text:000000000040325a\n.text:000000000040325c\n.text:0000000000403261\n.text:0000000000403265\n.text:000000000040326a\n.text:000000000040326c\n.text:0000000000403271\n.text:0000000000403276\n.text:0000000000403278\n.text:000000000040327d\n.text:0000000000403281\n.text:0000000000403286\n.text:000000000040328b\n.text:000000000040328d\n.text:0000000000403292\n.text:0000000000403296\n.text:000000000040329b\n.text:000000000040329e\n.text:00000000004032a1\n.text:00000000004032a4\n.text:00000000004032a8\n.text:00000000004032ad\n.text:00000000004032af\n.text:00000000004032b0\n'
p328
tp329
sS'puts'
p330
(S'\n__stdcall puts(char * __s)\n'
p331
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00606038)();\u000a  return iVar1;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x00606038]\n'
p333
S'ff 25 42 4f 20 00\n'
p334
S'.plt:00000000004010f0\n'
p335
tp336
sS'XInternAtom'
p337
(S'\n__stdcall XInternAtom()\n'
p338
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_006060f0)();\u000a  return;\u000a}\u000a\u000a
p339
S'JMP qword ptr [0x006060f0]\n'
p340
S'ff 25 8a 4e 20 00\n'
p341
S'.plt:0000000000401260\n'
p342
tp343
sS'XSetWMProtocols'
p344
(S'\n__stdcall XSetWMProtocols()\n'
p345
V\u000avoid XSetWMProtocols(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetWMProtocols_006060c0)();\u000a  return;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x006060c0]\n'
p347
S'ff 25 ba 4e 20 00\n'
p348
S'.plt:0000000000401200\n'
p349
tp350
sS'XGetIMValues'
p351
(S'\n__stdcall XGetIMValues()\n'
p352
V\u000avoid XGetIMValues(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetIMValues_00606070)();\u000a  return;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x00606070]\n'
p354
S'ff 25 0a 4f 20 00\n'
p355
S'.plt:0000000000401160\n'
p356
tp357
sS'fflush'
p358
(S'\n__stdcall fflush(FILE * __stream)\n'
p359
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fflush(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fflush_006060e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p360
S'JMP qword ptr [0x006060e8]\n'
p361
S'ff 25 92 4e 20 00\n'
p362
S'.plt:0000000000401250\n'
p363
tp364
sS'XmbLookupString'
p365
(S'\n__stdcall XmbLookupString()\n'
p366
V\u000avoid XmbLookupString(void)\u000a\u000a{\u000a  (*(code *)PTR_XmbLookupString_00606078)();\u000a  return;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x00606078]\n'
p368
S'ff 25 02 4f 20 00\n'
p369
S'.plt:0000000000401170\n'
p370
tp371
sS'_init'
p372
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p373
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00605ff8;\u000a  if (PTR___gmon_start___00605ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00605ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p374
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00605ff8]\nTEST RAX,RAX\nJZ 0x0040109a\nCALL RAX\nADD RSP,0x8\nRET\n'
p375
S'48 83 ec 08\n48 8b 05 65 4f 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p376
S'.init:0000000000401088\n.init:000000000040108c\n.init:0000000000401093\n.init:0000000000401096\n.init:0000000000401098\n.init:000000000040109a\n.init:000000000040109e\n'
p377
tp378
sS'FUN_004010a0'
p379
(S'\n__stdcall FUN_004010a0()\n'
p380
V\u000avoid FUN_004010a0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00606010)();\u000a  return;\u000a}\u000a\u000a
p381
S'PUSH qword ptr [0x00606008]\nJMP qword ptr [0x00606010]\n'
p382
S'ff 35 62 4f 20 00\nff 25 64 4f 20 00\n'
p383
S'.plt:00000000004010a0\n.plt:00000000004010a6\n'
p384
tp385
sS'do_SelectionClear'
p386
(S'\n__stdcall do_SelectionClear(XEvent * eventp)\n'
p387
V\u000avoid do_SelectionClear(XEvent *eventp)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  \u000a  pcVar1 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x28));\u000a  pcVar2 = Unknown;\u000a  if (pcVar1 != (char *)0x0) {\u000a    pcVar2 = pcVar1;\u000a  }\u000a  printf("    selection 0x%lx (%s), time %lu\u005cn",*(undefined8 *)(*eventp + 0x28),pcVar2,\u000a         *(undefined8 *)(*eventp + 0x30));\u000a  XFree(pcVar1);\u000a  return;\u000a}\u000a\u000a
p388
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x28]\nCALL 0x004012b0\nMOV R14,RAX\nTEST R14,R14\nMOV RDX,qword ptr [0x006061b8]\nCMOVNZ RDX,R14\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RCX,qword ptr [RBX + 0x30]\nMOV EDI,0x404d8e\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401190\n'
p389
S'41 56\n53\n50\n48 89 fb\n48 8b 3d 3a 33 20 00\n48 8b 73 28\ne8 b9 e3 ff ff\n49 89 c6\n4d 85 f6\n48 8b 15 b4 32 20 00\n49 0f 45 d6\n48 8b 73 28\n48 8b 4b 30\nbf 8e 4d 40 00\n31 c0\ne8 64 e2 ff ff\n4c 89 f7\n48 83 c4 08\n5b\n41 5e\ne9 65 e2 ff ff\n'
p390
S'.text:0000000000402ee0\n.text:0000000000402ee2\n.text:0000000000402ee3\n.text:0000000000402ee4\n.text:0000000000402ee7\n.text:0000000000402eee\n.text:0000000000402ef2\n.text:0000000000402ef7\n.text:0000000000402efa\n.text:0000000000402efd\n.text:0000000000402f04\n.text:0000000000402f08\n.text:0000000000402f0c\n.text:0000000000402f10\n.text:0000000000402f15\n.text:0000000000402f17\n.text:0000000000402f1c\n.text:0000000000402f1f\n.text:0000000000402f23\n.text:0000000000402f24\n.text:0000000000402f26\n'
p391
tp392
sS'main'
p393
(S'\n__stdcall main(char * * argv)\n'
p394
V\u000aint main(char **argv)\u000a\u000a{\u000a  long lVar1;\u000a  uint uVar2;\u000a  FILE *__stream;\u000a  int iVar3;\u000a  int iVar4;\u000a  char *pcVar5;\u000a  long lVar6;\u000a  undefined4 extraout_var;\u000a  long lVar7;\u000a  undefined8 uVar8;\u000a  long lVar9;\u000a  ulong uVar10;\u000a  char **in_RSI;\u000a  char *__format;\u000a  int iVar11;\u000a  byte bVar12;\u000a  char *unaff_R15;\u000a  char *name;\u000a  int rr_minor;\u000a  char *displayname;\u000a  long event_masks [2];\u000a  int rr_major;\u000a  XSetWindowAttributes attr;\u000a  XSizeHints hints;\u000a  XWindowAttributes wattr;\u000a  undefined *puVar13;\u000a  long local_290;\u000a  int local_284;\u000a  int local_280;\u000a  int local_27c;\u000a  undefined8 local_278;\u000a  char *local_270;\u000a  char *local_268;\u000a  ushort *local_260;\u000a  int local_254;\u000a  char *local_250;\u000a  undefined4 local_248;\u000a  undefined4 uStack580;\u000a  uint local_240;\u000a  undefined4 uStack572;\u000a  uint local_238 [48];\u000a  undefined local_178 [8];\u000a  undefined8 local_170;\u000a  undefined8 local_160;\u000a  int local_150;\u000a  undefined4 local_138;\u000a  ulong local_130;\u000a  undefined local_108 [8];\u000a  uint local_100;\u000a  uint local_fc;\u000a  uint local_f8;\u000a  uint local_f4;\u000a  undefined local_b8 [96];\u000a  byte local_58;\u000a  \u000a  iVar4 = (int)argv;\u000a  ProgramName = *in_RSI;\u000a  pcVar5 = setlocale(6,"");\u000a  if (pcVar5 == (char *)0x0) {\u000a    fprintf(stderr,"%s: warning: could not set default locale\u005cn",ProgramName);\u000a  }\u000a  local_248 = 0;\u000a  uStack580 = 0;\u000a  local_240 = 0;\u000a  uStack572 = 0;\u000a  local_290 = 0;\u000a  if (iVar4 < 2) {\u000a    local_268 = "Event Tester";\u000a    local_278 = 2;\u000a    local_270 = (char *)0x0;\u000a    local_284 = 0;\u000a    local_280 = 0;\u000a    uVar10 = 0;\u000a    unaff_R15 = (char *)0x0;\u000a  }\u000a  else {\u000a    local_268 = "Event Tester";\u000a    local_278 = 2;\u000a    iVar11 = 1;\u000a    local_27c = 0;\u000a    local_250 = (char *)0x0;\u000a    local_270 = (char *)0x0;\u000a    local_284 = 0;\u000a    local_280 = 0;\u000a    uVar10 = 0;\u000a    do {\u000a      lVar6 = (long)iVar11;\u000a      pcVar5 = in_RSI[lVar6];\u000a      if (*pcVar5 != '-') {\u000aswitchD_00401570_caseD_63:\u000a        __format = "%s: unrecognized argument \u005c'%s\u005c'\u005cn";\u000aLAB_0040206a:\u000a        fprintf(stderr,__format,ProgramName,pcVar5);\u000a        usage((char *)0x0);\u000aswitchD_00401570_caseD_76:\u000a        puts("xev 1.2.2");\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(0);\u000a      }\u000a      switch(pcVar5[1]) {\u000a      case 'b':\u000a        iVar11 = iVar11 + 1;\u000a        if (pcVar5[2] != 's') {\u000a          if (pcVar5[2] != 'w') goto switchD_00401570_caseD_63;\u000a          if (iVar11 < iVar4) {\u000a            iVar3 = atoi(in_RSI[lVar6 + 1]);\u000a            local_278 = CONCAT44(extraout_var,iVar3);\u000a            break;\u000a          }\u000a          goto LAB_004020c2;\u000a        }\u000a        if (iVar11 < iVar4) {\u000a          local_150 = parse_backing_store(in_RSI[lVar6 + 1]);\u000a          uVar10 = uVar10 | 0x40;\u000a          break;\u000a        }\u000a        goto LAB_004020cc;\u000a      default:\u000a        goto switchD_00401570_caseD_63;\u000a      case 'd':\u000a        iVar11 = iVar11 + 1;\u000a        if (iVar4 <= iVar11) {\u000a          usage("-display requires an argument");\u000aLAB_00402093:\u000a          usage("-event requires an argument");\u000a          goto LAB_0040209d;\u000a        }\u000a        local_250 = in_RSI[(long)iVar11];\u000a        break;\u000a      case 'e':\u000a        iVar11 = iVar11 + 1;\u000a        if (iVar4 <= iVar11) goto LAB_00402093;\u000a        iVar3 = parse_event_mask(in_RSI[(long)iVar11],(long *)&local_248);\u000a        local_27c = 1;\u000a        if (iVar3 != 0) break;\u000aLAB_0040209d:\u000a        usage((char *)0x0);\u000aLAB_004020a4:\u000a        usage("-geometry requires an argument");\u000aLAB_004020ae:\u000a        usage("-id requires an argument");\u000aLAB_004020b8:\u000a        usage("-name requires an argument");\u000aLAB_004020c2:\u000a        usage("-bw requires an argument");\u000aLAB_004020cc:\u000a        usage("-bs requires an argument");\u000a        goto LAB_004020d6;\u000a      case 'g':\u000a        iVar11 = iVar11 + 1;\u000a        if (iVar4 <= iVar11) goto LAB_004020a4;\u000a        local_270 = in_RSI[(long)iVar11];\u000a        break;\u000a      case 'i':\u000a        iVar11 = iVar11 + 1;\u000a        if (iVar4 <= iVar11) goto LAB_004020ae;\u000a        unaff_R15 = (char *)(long)iVar11;\u000a        sscanf(in_RSI[(long)unaff_R15],"0x%lx");\u000a        if ((local_290 != 0) || (sscanf(in_RSI[(long)unaff_R15],"%lu",&local_290), local_290 != 0))\u000a        break;\u000a        pcVar5 = in_RSI[(long)unaff_R15];\u000a        __format = "%s: unable to parse argument \u005c'%s\u005c' for -id\u005cn";\u000a        goto LAB_0040206a;\u000a      case 'n':\u000a        iVar11 = iVar11 + 1;\u000a        if (iVar4 <= iVar11) goto LAB_004020b8;\u000a        local_268 = in_RSI[(long)iVar11];\u000a        break;\u000a      case 'r':\u000a        if (pcVar5[2] == 'o') {\u000a          local_284 = 1;\u000a        }\u000a        else {\u000a          if (pcVar5[2] != 'v') goto switchD_00401570_caseD_63;\u000a          local_280 = 1;\u000a        }\u000a        break;\u000a      case 's':\u000a        local_138 = 1;\u000a        uVar10 = uVar10 | 0x400;\u000a        break;\u000a      case 'v':\u000a        goto switchD_00401570_caseD_76;\u000a      }\u000a      iVar11 = iVar11 + 1;\u000a    } while (iVar11 < iVar4);\u000a    unaff_R15 = local_250;\u000a    if (local_27c != 0) goto LAB_00401741;\u000a  }\u000a  parse_event_mask((char *)0x0,(long *)&local_248);\u000aLAB_00401741:\u000a  dpy = (Display *)XOpenDisplay(unaff_R15);\u000a  if (dpy == (Display *)0x0) {\u000aLAB_004020d6:\u000a    pcVar5 = ProgramName;\u000a    __stream = stderr;\u000a    uVar8 = XDisplayName(unaff_R15);\u000a    fprintf(__stream,"%s:  unable to open display \u005c'%s\u005c'\u005cn",pcVar5,uVar8);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  lVar6 = XSetLocaleModifiers("@im=none");\u000a  if (lVar6 == 0) {\u000a    fprintf(stderr,"%s:  XSetLocaleModifiers failed\u005cn",ProgramName);\u000a  }\u000a  lVar6 = XOpenIM(dpy,0,0);\u000a  if (lVar6 == 0) {\u000a    bVar12 = 0;\u000a    fprintf(stderr,"%s:  XOpenIM failed\u005cn",ProgramName);\u000a    lVar7 = 0;\u000a  }\u000a  else {\u000a    lVar7 = XGetIMValues(lVar6,"queryInputStyle",&local_260);\u000a    if ((lVar7 != 0) || (local_260 == (ushort *)0x0)) {\u000a      fprintf(stderr,"%s:  input method doesn\u005c't support any styles\u005cn",ProgramName);\u000a    }\u000a    bVar12 = 1;\u000a    lVar7 = 0;\u000a    if (local_260 != (ushort *)0x0) {\u000a      if (*local_260 != 0) {\u000a        lVar9 = 0;\u000a        lVar7 = 0x408;\u000a        do {\u000a          lVar1 = lVar9 * 8;\u000a          lVar9 = lVar9 + 1;\u000a          if (*(long *)(*(long *)(local_260 + 4) + lVar1) == 0x408) goto LAB_00401813;\u000a        } while (lVar9 < (long)(ulong)*local_260);\u000a      }\u000a      lVar7 = 0;\u000a      fprintf(stderr,"%s: input method doesn\u005c't support the style we support\u005cn",ProgramName);\u000aLAB_00401813:\u000a      XFree(local_260);\u000a    }\u000a  }\u000a  screen = *(int *)(dpy + 0xe0);\u000a  local_130 = CONCAT44(uStack580,local_248);\u000a  if (local_284 != 0) {\u000a    local_290 = *(long *)(*(long *)(dpy + 0xe8) + 0x10 + (long)screen * 0x80);\u000a  }\u000a  if (local_290 == 0) {\u000a    set_sizehints(local_108,local_270);\u000a    uVar8 = *(undefined8 *)(*(long *)(dpy + 0xe8) + 0x58 + (long)screen * 0x80);\u000a    local_170 = *(undefined8 *)(*(long *)(dpy + 0xe8) + 0x60 + (long)screen * 0x80);\u000a    local_160 = uVar8;\u000a    if (local_280 == 0) {\u000a      local_160 = local_170;\u000a      local_170 = uVar8;\u000a    }\u000a    local_290 = XCreateWindow(dpy,*(undefined8 *)\u000a                                   (*(long *)(dpy + 0xe8) + 0x10 + (long)screen * 0x80),\u000a                              (ulong)local_100,(ulong)local_fc,(ulong)local_f8,(ulong)local_f4,\u000a                              local_278,0,1,0,uVar10 | 0x80a,local_178);\u000a    puVar13 = local_108;\u000a    XSetStandardProperties(dpy,local_290,local_268,0,0);\u000a    uVar8 = XCreateSimpleWindow(dpy,local_290,10,10,0x32,0x32,4,local_160,local_170,puVar13);\u000a    wm_protocols = XInternAtom(dpy,"WM_PROTOCOLS",0);\u000a    wm_delete_window = XInternAtom(dpy,"WM_DELETE_WINDOW",0);\u000a    XSetWMProtocols(dpy,local_290,&wm_delete_window);\u000a    XMapWindow(dpy,uVar8);\u000a    XMapWindow(dpy,local_290);\u000a    printf("Outer window is 0x%lx, inner window is 0x%lx\u005cn",local_290,uVar8);\u000a  }\u000a  else {\u000a    XGetWindowAttributes(dpy,local_290,local_b8);\u000a    if ((local_58 & 4) != 0) {\u000a      local_130 = local_130 & 0xfffffffffffffffb;\u000a    }\u000a    local_130 = local_130 & 0xffffffffffefffff;\u000a    XSelectInput(dpy,local_290);\u000a  }\u000a  if (((bool)(bVar12 & lVar7 != 0)) &&\u000a     (xic = (XIC)XCreateIC(lVar6,"inputStyle",lVar7,"clientWindow",local_290,"focusWindow",local_290\u000a                           ,0), xic == (XIC)0x0)) {\u000a    fwrite("XCreateIC failed\u005cn",0x11,1,stderr);\u000a  }\u000a  have_rr = XRRQueryExtension(dpy,&rr_event_base,&rr_error_base);\u000a  if ((have_rr != 0) && (iVar4 = XRRQueryVersion(dpy,local_238,&local_254), iVar4 != 0)) {\u000a    uVar2 = local_240 & 0xfffffff1;\u000a    if (1 < local_254) {\u000a      uVar2 = local_240;\u000a    }\u000a    if (local_238[0] != 1) {\u000a      uVar2 = local_240;\u000a    }\u000a    XRRSelectInput(dpy,local_290,(ulong)uVar2);\u000a  }\u000a  do {\u000a    XNextEvent(dpy,(XEvent *)local_238);\u000a    switch(local_238[0]) {\u000a    case 2:\u000a      prologue((XEvent *)local_238,"KeyPress");\u000a      do_KeyPress((XEvent *)local_238);\u000a      break;\u000a    case 3:\u000a      prologue((XEvent *)local_238,"KeyRelease");\u000a      do_KeyRelease((XEvent *)local_238);\u000a      break;\u000a    case 4:\u000a      prologue((XEvent *)local_238,"ButtonPress");\u000a      do_ButtonPress((XEvent *)local_238);\u000a      break;\u000a    case 5:\u000a      prologue((XEvent *)local_238,"ButtonRelease");\u000a      do_ButtonRelease((XEvent *)local_238);\u000a      break;\u000a    case 6:\u000a      prologue((XEvent *)local_238,"MotionNotify");\u000a      do_MotionNotify((XEvent *)local_238);\u000a      break;\u000a    case 7:\u000a      prologue((XEvent *)local_238,"EnterNotify");\u000a      do_EnterNotify((XEvent *)local_238);\u000a      break;\u000a    case 8:\u000a      prologue((XEvent *)local_238,"LeaveNotify");\u000a      do_LeaveNotify((XEvent *)local_238);\u000a      break;\u000a    case 9:\u000a      prologue((XEvent *)local_238,"FocusIn");\u000a      do_FocusIn((XEvent *)local_238);\u000a      break;\u000a    case 10:\u000a      prologue((XEvent *)local_238,"FocusOut");\u000a      do_FocusOut((XEvent *)local_238);\u000a      break;\u000a    case 0xb:\u000a      prologue((XEvent *)local_238,"KeymapNotify");\u000a      do_KeymapNotify((XEvent *)local_238);\u000a      break;\u000a    case 0xc:\u000a      prologue((XEvent *)local_238,"Expose");\u000a      do_Expose((XEvent *)local_238);\u000a      break;\u000a    case 0xd:\u000a      prologue((XEvent *)local_238,"GraphicsExpose");\u000a      do_GraphicsExpose((XEvent *)local_238);\u000a      break;\u000a    case 0xe:\u000a      prologue((XEvent *)local_238,"NoExpose");\u000a      do_NoExpose((XEvent *)local_238);\u000a      break;\u000a    case 0xf:\u000a      prologue((XEvent *)local_238,"VisibilityNotify");\u000a      do_VisibilityNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x10:\u000a      prologue((XEvent *)local_238,"CreateNotify");\u000a      do_CreateNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x11:\u000a      prologue((XEvent *)local_238,"DestroyNotify");\u000a      do_DestroyNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x12:\u000a      prologue((XEvent *)local_238,"UnmapNotify");\u000a      do_UnmapNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x13:\u000a      prologue((XEvent *)local_238,"MapNotify");\u000a      do_MapNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x14:\u000a      prologue((XEvent *)local_238,"MapRequest");\u000a      do_MapRequest((XEvent *)local_238);\u000a      break;\u000a    case 0x15:\u000a      prologue((XEvent *)local_238,"ReparentNotify");\u000a      do_ReparentNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x16:\u000a      prologue((XEvent *)local_238,"ConfigureNotify");\u000a      do_ConfigureNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x17:\u000a      prologue((XEvent *)local_238,"ConfigureRequest");\u000a      do_ConfigureRequest((XEvent *)local_238);\u000a      break;\u000a    case 0x18:\u000a      prologue((XEvent *)local_238,"GravityNotify");\u000a      do_GravityNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x19:\u000a      prologue((XEvent *)local_238,"ResizeRequest");\u000a      do_ResizeRequest((XEvent *)local_238);\u000a      break;\u000a    case 0x1a:\u000a      prologue((XEvent *)local_238,"CirculateNotify");\u000a      do_CirculateNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x1b:\u000a      prologue((XEvent *)local_238,"CirculateRequest");\u000a      do_CirculateRequest((XEvent *)local_238);\u000a      break;\u000a    case 0x1c:\u000a      prologue((XEvent *)local_238,"PropertyNotify");\u000a      do_PropertyNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x1d:\u000a      prologue((XEvent *)local_238,"SelectionClear");\u000a      do_SelectionClear((XEvent *)local_238);\u000a      break;\u000a    case 0x1e:\u000a      prologue((XEvent *)local_238,"SelectionRequest");\u000a      do_SelectionRequest((XEvent *)local_238);\u000a      break;\u000a    case 0x1f:\u000a      prologue((XEvent *)local_238,"SelectionNotify");\u000a      do_SelectionNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x20:\u000a      prologue((XEvent *)local_238,"ColormapNotify");\u000a      do_ColormapNotify((XEvent *)local_238);\u000a      break;\u000a    case 0x21:\u000a      prologue((XEvent *)local_238,"ClientMessage");\u000a      do_ClientMessage((XEvent *)local_238);\u000a      break;\u000a    case 0x22:\u000a      prologue((XEvent *)local_238,"MappingNotify");\u000a      do_MappingNotify((XEvent *)local_238);\u000a      break;\u000a    default:\u000a      if (have_rr == 0) {\u000aLAB_00401f9b:\u000a        printf("Unknown event type %d\u005cn",(ulong)local_238[0]);\u000a      }\u000a      else {\u000a        if (local_238[0] == rr_event_base) {\u000a          prologue((XEvent *)local_238,"RRScreenChangeNotify");\u000a          do_RRScreenChangeNotify((XEvent *)local_238);\u000a        }\u000a        else {\u000a          if (local_238[0] != rr_event_base + 1U) goto LAB_00401f9b;\u000a          do_RRNotify((XEvent *)local_238);\u000a        }\u000a      }\u000a    }\u000a    fflush(stdout);\u000a  } while( true );\u000a}\u000a\u000a
p395
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x268\nMOV RBX,RSI\nMOV R14D,EDI\nMOV RAX,qword ptr [RBX]\nMOV qword ptr [0x00606248],RAX\nMOV EDI,0x6\nMOV ESI,0x404784\nCALL 0x004012f0\nTEST RAX,RAX\nJZ 0x00401fb0\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOV qword ptr [RSP + 0x8],0x0\nMOV EAX,0x403d57\nCMP R14D,0x2\nJL 0x0040170a\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,0x2\nMOV qword ptr [RSP + 0x20],RAX\nMOV R12D,0x1\nLEA RDX,[RSP + 0x8]\nMOV dword ptr [RSP + 0x1c],0x0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x48],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nMOV dword ptr [RSP + 0x14],0x0\nMOV dword ptr [RSP + 0x18],0x0\nXOR EBP,EBP\nNOP dword ptr [RAX + RAX*0x1]\nMOVSXD RAX,R12D\nMOV RCX,qword ptr [RBX + RAX*0x8]\nCMP byte ptr [RCX],0x2d\nJNZ 0x00402057\nMOVSX ESI,byte ptr [RCX + 0x1]\nADD ESI,-0x62\nCMP ESI,0x14\nJA 0x00402057\nJMP qword ptr [0x403870 + RSI*0x8]\nMOVSX EDX,byte ptr [RCX + 0x2]\nINC R12D\nMOV RDI,qword ptr [RBX + RAX*0x8 + 0x8]\nCMP EDX,0x73\nJZ 0x004016a2\nCMP EDX,0x77\nJNZ 0x00402057\nCMP R12D,R14D\nJGE 0x004020c2\nCALL 0x00401330\nMOV qword ptr [RSP + 0x20],RAX\nLEA RDX,[RSP + 0x8]\nJMP 0x004016f0\nINC R12D\nCMP R12D,R14D\nJGE 0x00402089\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [RBX + RAX*0x8]\nMOV qword ptr [RSP + 0x48],RAX\nJMP 0x004016f0\nINC R12D\nCMP R12D,R14D\nJGE 0x00402093\nMOVSXD RAX,R12D\nMOV RDI,qword ptr [RBX + RAX*0x8]\nLEA RSI,[RSP + 0x50]\nCALL 0x00402260\nMOV dword ptr [RSP + 0x1c],0x1\nTEST EAX,EAX\nLEA RDX,[RSP + 0x8]\nJNZ 0x004016f0\nJMP 0x0040209d\nINC R12D\nCMP R12D,R14D\nJGE 0x004020a4\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [RBX + RAX*0x8]\nMOV qword ptr [RSP + 0x28],RAX\nJMP 0x004016f0\nINC R12D\nCMP R12D,R14D\nJGE 0x004020ae\nMOVSXD R15,R12D\nMOV RDI,qword ptr [RBX + R15*0x8]\nMOV ESI,0x403e17\nXOR EAX,EAX\nMOV R13,RDX\nCALL 0x00401270\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x004016cc\nMOV RDX,R13\nJMP 0x004016f0\nINC R12D\nCMP R12D,R14D\nJGE 0x004020b8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [RBX + RAX*0x8]\nMOV qword ptr [RSP + 0x30],RAX\nJMP 0x004016f0\nMOVSX EAX,byte ptr [RCX + 0x2]\nCMP EAX,0x6f\nJZ 0x004016c2\nCMP EAX,0x76\nJNZ 0x00402057\nMOV dword ptr [RSP + 0x18],0x1\nJMP 0x004016f0\nMOV dword ptr [0x160 + RSP],0x1\nOR RBP,0x400\nJMP 0x004016f0\nCMP R12D,R14D\nJGE 0x004020cc\nCALL 0x004021d0\nMOV dword ptr [0x148 + RSP],EAX\nOR RBP,0x40\nLEA RDX,[RSP + 0x8]\nJMP 0x004016f0\nMOV dword ptr [RSP + 0x14],0x1\nJMP 0x004016f0\nMOV RDI,qword ptr [RBX + R15*0x8]\nMOV ESI,0x403e1d\nXOR EAX,EAX\nMOV RDX,R13\nCALL 0x00401270\nCMP qword ptr [RSP + 0x8],0x0\nMOV RDX,R13\nJZ 0x0040210b\nNOP\nINC R12D\nCMP R12D,R14D\nJL 0x00401550\nCMP dword ptr [RSP + 0x1c],0x0\nMOV R15,qword ptr [RSP + 0x48]\nJNZ 0x00401741\nJMP 0x00401735\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,0x2\nMOV qword ptr [RSP + 0x20],RAX\nXOR R15D,R15D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nMOV dword ptr [RSP + 0x14],0x0\nMOV dword ptr [RSP + 0x18],0x0\nXOR EBP,EBP\nLEA RSI,[RSP + 0x50]\nXOR EDI,EDI\nCALL 0x00402260\nMOV RDI,R15\nCALL 0x004011d0\nMOV qword ptr [0x00606228],RAX\nTEST RAX,RAX\nJZ 0x004020d6\nMOV EDI,0x403ecf\nCALL 0x00401290\nTEST RAX,RAX\nJZ 0x00401fcf\nMOV RDI,qword ptr [0x00606228]\nXOR ESI,ESI\nXOR EDX,EDX\nXOR ECX,ECX\nCALL 0x00401110\nMOV R12,RAX\nTEST R12,R12\nJZ 0x00401fee\nLEA RDX,[RSP + 0x38]\nMOV ESI,0x403f0e\nXOR ECX,ECX\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00401160\nTEST RAX,RAX\nMOV RAX,qword ptr [RSP + 0x38]\nJNZ 0x00402013\nTEST RAX,RAX\nJZ 0x00402013\nMOV R15B,0x1\nXOR R13D,R13D\nTEST RAX,RAX\nJZ 0x0040181d\nCMP word ptr [RAX],0x0\nJZ 0x004017f6\nMOV RCX,qword ptr [RAX + 0x8]\nXOR EDX,EDX\nMOV R13D,0x408\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP qword ptr [RCX + RDX*0x8],0x408\nLEA RDX,[RDX + 0x1]\nJZ 0x00401813\nMOVZX ESI,word ptr [RAX]\nCMP RDX,RSI\nJL 0x004017e0\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nXOR R13D,R13D\nMOV ESI,0x403f4c\nXOR EAX,EAX\nCALL 0x004011f0\nMOV RDI,qword ptr [RSP + 0x38]\nCALL 0x00401190\nMOV ECX,dword ptr [RSP + 0x14]\nMOV RDI,qword ptr [0x00606228]\nMOV EAX,dword ptr [0xe0 + RDI]\nMOV dword ptr [0x00606220],EAX\nMOV RAX,qword ptr [RSP + 0x50]\nMOV qword ptr [0x168 + RSP],RAX\nTEST ECX,ECX\nJZ 0x00401868\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RCX,dword ptr [0x00606220]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x10]\nMOV qword ptr [RSP + 0x8],RSI\nTEST RSI,RSI\nJNZ 0x00401872\nJMP 0x004018be\nMOV RSI,qword ptr [RSP + 0x8]\nTEST RSI,RSI\nJZ 0x004018be\nLEA RDX,[0x1e0 + RSP]\nCALL 0x00401310\nTEST byte ptr [0x240 + RSP],0x4\nJZ 0x00401891\nAND byte ptr [0x168 + RSP],0xfb\nMOV RDX,-0x100001\nAND RDX,qword ptr [0x168 + RSP]\nMOV qword ptr [0x168 + RSP],RDX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x004012d0\nJMP 0x00401a6e\nLEA RDI,[0x190 + RSP]\nMOV RSI,qword ptr [RSP + 0x28]\nCALL 0x00402310\nMOVSXD RAX,dword ptr [0x00606220]\nSHL RAX,0x7\nCMP dword ptr [RSP + 0x18],0x0\nMOV RCX,qword ptr [0x00606228]\nMOV RCX,qword ptr [0xe8 + RCX]\nMOV RDX,qword ptr [RCX + RAX*0x1 + 0x58]\nMOV RAX,qword ptr [RCX + RAX*0x1 + 0x60]\nMOV RCX,RAX\nCMOVZ RCX,RDX\nCMOVZ RDX,RAX\nMOV qword ptr [0x128 + RSP],RCX\nMOV qword ptr [0x138 + RSP],RDX\nOR RBP,0x80a\nMOV RDI,qword ptr [0x00606228]\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RCX,dword ptr [0x00606220]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x10]\nMOV EDX,dword ptr [0x198 + RSP]\nMOV ECX,dword ptr [0x19c + RSP]\nMOV R8D,dword ptr [0x1a0 + RSP]\nMOV R9D,dword ptr [0x1a4 + RSP]\nLEA RAX,[0x120 + RSP]\nPUSH RAX\nPUSH RBP\nPUSH 0x0\nPUSH 0x1\nPUSH 0x0\nPUSH qword ptr [RSP + 0x48]\nCALL 0x004012a0\nADD RSP,0x30\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [0x00606228]\nMOV ECX,0x0\nMOV R8D,0x0\nMOV RSI,RAX\nMOV RDX,qword ptr [RSP + 0x30]\nMOV R9,RBX\nLEA RAX,[0x190 + RSP]\nPUSH RAX\nPUSH R14\nCALL 0x004010c0\nADD RSP,0x10\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RSP + 0x8]\nSUB RSP,0x8\nMOV EDX,0xa\nMOV ECX,0xa\nMOV R8D,0x32\nMOV R9D,0x32\nPUSH qword ptr [0x130 + RSP]\nPUSH qword ptr [0x148 + RSP]\nPUSH 0x4\nCALL 0x00401300\nADD RSP,0x20\nMOV RBX,RAX\nMOV RDI,qword ptr [0x00606228]\nMOV ESI,0x403f83\nXOR EDX,EDX\nCALL 0x00401260\nMOV qword ptr [0x00606230],RAX\nMOV RDI,qword ptr [0x00606228]\nMOV ESI,0x403f90\nXOR EDX,EDX\nCALL 0x00401260\nMOV qword ptr [0x00606240],RAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RSP + 0x8]\nMOV EDX,0x606240\nMOV ECX,0x1\nCALL 0x00401200\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,RBX\nCALL 0x00401320\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x00401320\nMOV RSI,qword ptr [RSP + 0x8]\nMOV EDI,0x403fa1\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401180\nTEST R13,R13\nSETNZ AL\nAND R15B,AL\nCMP R15B,0x1\nJNZ 0x00401aba\nMOV R8,qword ptr [RSP + 0x8]\nMOV ESI,0x403fcf\nMOV ECX,0x403fda\nMOV R9D,0x403fe7\nMOV EAX,0x0\nMOV RDI,R12\nMOV RDX,R13\nPUSH 0x0\nPUSH R8\nCALL 0x004011c0\nADD RSP,0x10\nMOV qword ptr [0x00606210],RAX\nTEST RAX,RAX\nJZ 0x00402037\nMOV RDI,qword ptr [0x00606228]\nMOV ESI,0x60623c\nMOV EDX,0x606238\nCALL 0x004010d0\nMOV dword ptr [0x00606250],EAX\nTEST EAX,EAX\nJZ 0x00401b1e\nMOV RDI,qword ptr [0x00606228]\nLEA RSI,[RSP + 0x60]\nLEA RDX,[RSP + 0x44]\nCALL 0x00401100\nTEST EAX,EAX\nJZ 0x00401b1e\nMOV EAX,dword ptr [RSP + 0x58]\nMOV EDX,EAX\nAND EDX,0xfffffff1\nCMP dword ptr [RSP + 0x44],0x2\nCMOVGE EDX,EAX\nCMP dword ptr [RSP + 0x60],0x1\nCMOVNZ EDX,EAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x00401370\nLEA RBX,[RSP + 0x60]\nJMP 0x00401b3c\nMOV RDI,qword ptr [0x006061e0]\nCALL 0x00401250\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,RBX\nCALL 0x00401220\nMOV EAX,dword ptr [RSP + 0x60]\nLEA ECX,[RAX + -0x2]\nCMP ECX,0x20\nJA 0x00401f5b\nJMP qword ptr [0x403918 + RCX*0x8]\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404005\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402460\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404157\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402ee0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040ba\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402ba0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x40409f\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402b20\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404076\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004029f0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404033\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402780\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404069\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402970\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404085\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402a70\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404127\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402d90\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404137\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402df0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404019\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402710\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404025\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402770\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040ac\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402b80\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x40400e\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402700\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404058\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004028e0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040c6\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402bd0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404196\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00403120\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404040\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004027e0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x40404c\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004028d0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404060\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402960\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404087\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004029d0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x40408e\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402ad0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040d0\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402c00\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040ea\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402c70\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040fa\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402cd0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404187\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004030b0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4041a4\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x004031e0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x40410b\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402d50\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x4040db\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402c20\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404119\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402d70\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404166\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402f30\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404177\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402ff0\nJMP 0x00401b30\nLEA RBP,[RSP + 0x60]\nMOV ESI,0x404148\nMOV RDI,RBP\nCALL 0x00402430\nMOV RDI,RBP\nCALL 0x00402e50\nJMP 0x00401b30\nCMP dword ptr [0x00606250],0x0\nJZ 0x00401f9b\nMOV ECX,dword ptr [0x0060623c]\nCMP EAX,ECX\nJNZ 0x00401f88\nMOV ESI,0x4041b2\nMOV RDI,RBX\nCALL 0x00402430\nMOV RDI,RBX\nCALL 0x00403240\nJMP 0x00401b30\nINC ECX\nCMP EAX,ECX\nJNZ 0x00401f9b\nMOV RDI,RBX\nCALL 0x004032c0\nJMP 0x00401b30\nMOV ESI,dword ptr [RSP + 0x60]\nMOV EDI,0x4041c7\nXOR EAX,EAX\nCALL 0x00401180\nJMP 0x00401b30\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x403d64\nXOR EAX,EAX\nCALL 0x004011f0\nJMP 0x004014e9\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x403ed8\nXOR EAX,EAX\nCALL 0x004011f0\nJMP 0x0040176c\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nXOR R15D,R15D\nMOV ESI,0x403ef9\nXOR EAX,EAX\nCALL 0x004011f0\nXOR R13D,R13D\nJMP 0x0040181d\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x403f1e\nXOR EAX,EAX\nCALL 0x004011f0\nMOV RAX,qword ptr [RSP + 0x38]\nJMP 0x004017b7\nMOV RCX,qword ptr [0x00606200]\nMOV EDI,0x403ff3\nMOV ESI,0x11\nMOV EDX,0x1\nCALL 0x00401360\nJMP 0x00401aba\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV ESI,0x403e8d\nXOR EAX,EAX\nCALL 0x004011f0\nXOR EDI,EDI\nCALL 0x00402130\nMOV EDI,0x403e83\nCALL 0x004010f0\nXOR EDI,EDI\nCALL 0x00401350\nMOV EDI,0x403d8f\nCALL 0x00402130\nMOV EDI,0x403e67\nCALL 0x00402130\nXOR EDI,EDI\nCALL 0x00402130\nMOV EDI,0x403dad\nCALL 0x00402130\nMOV EDI,0x403dfe\nCALL 0x00402130\nMOV EDI,0x403e4c\nCALL 0x00402130\nMOV EDI,0x403dcc\nCALL 0x00402130\nMOV EDI,0x403de5\nCALL 0x00402130\nMOV R14,qword ptr [0x00606200]\nMOV RBX,qword ptr [0x00606248]\nMOV RDI,R15\nCALL 0x00401280\nMOV RCX,RAX\nMOV ESI,0x403ead\nXOR EAX,EAX\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x004011f0\nMOV EDI,0x1\nCALL 0x00401350\nMOV RDI,qword ptr [0x00606200]\nMOV RDX,qword ptr [0x00606248]\nMOV RCX,qword ptr [RBX + R15*0x8]\nMOV ESI,0x403e21\nJMP 0x0040206a\n'
p396
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 68 02 00 00\n48 89 f3\n41 89 fe\n48 8b 03\n48 89 05 77 4d 20 00\nbf 06 00 00 00\nbe 84 47 40 00\ne8 10 fe ff ff\n48 85 c0\n0f 84 c7 0a 00 00\n0f 57 c0\n0f 29 44 24 50\n48 c7 44 24 08 00 00 00 00\nb8 57 3d 40 00\n41 83 fe 02\n0f 8c 01 02 00 00\n48 89 44 24 30\nb8 02 00 00 00\n48 89 44 24 20\n41 bc 01 00 00 00\n48 8d 54 24 08\nc7 44 24 1c 00 00 00 00\n31 c0\n48 89 44 24 48\n31 c0\n48 89 44 24 28\nc7 44 24 14 00 00 00 00\nc7 44 24 18 00 00 00 00\n31 ed\n0f 1f 44 00 00\n49 63 c4\n48 8b 0c c3\n80 39 2d\n0f 85 f7 0a 00 00\n0f be 71 01\n83 c6 9e\n83 fe 14\n0f 87 e7 0a 00 00\nff 24 f5 70 38 40 00\n0f be 51 02\n41 ff c4\n48 8b 7c c3 08\n83 fa 73\n0f 84 16 01 00 00\n83 fa 77\n0f 85 c2 0a 00 00\n45 39 f4\n0f 8d 24 0b 00 00\ne8 8d fd ff ff\n48 89 44 24 20\n48 8d 54 24 08\ne9 3e 01 00 00\n41 ff c4\n45 39 f4\n0f 8d cb 0a 00 00\n49 63 c4\n48 8b 04 c3\n48 89 44 24 48\ne9 21 01 00 00\n41 ff c4\n45 39 f4\n0f 8d b8 0a 00 00\n49 63 c4\n48 8b 3c c3\n48 8d 74 24 50\ne8 74 0c 00 00\nc7 44 24 1c 01 00 00 00\n85 c0\n48 8d 54 24 08\n0f 85 ef 00 00 00\ne9 97 0a 00 00\n41 ff c4\n45 39 f4\n0f 8d 92 0a 00 00\n49 63 c4\n48 8b 04 c3\n48 89 44 24 28\ne9 cd 00 00 00\n41 ff c4\n45 39 f4\n0f 8d 7f 0a 00 00\n4d 63 fc\n4a 8b 3c fb\nbe 17 3e 40 00\n31 c0\n49 89 d5\ne8 2b fc ff ff\n48 83 7c 24 08 00\n74 7f\n4c 89 ea\ne9 9b 00 00 00\n41 ff c4\n45 39 f4\n0f 8d 57 0a 00 00\n49 63 c4\n48 8b 04 c3\n48 89 44 24 30\ne9 7e 00 00 00\n0f be 41 02\n83 f8 6f\n74 47\n83 f8 76\n0f 85 d3 09 00 00\nc7 44 24 18 01 00 00 00\neb 62\nc7 84 24 60 01 00 00 01 00 00 00\n48 81 cd 00 04 00 00\neb 4e\n45 39 f4\n0f 8d 21 0a 00 00\ne8 20 0b 00 00\n89 84 24 48 01 00 00\n48 83 cd 40\n48 8d 54 24 08\neb 2e\nc7 44 24 14 01 00 00 00\neb 24\n4a 8b 3c fb\nbe 1d 3e 40 00\n31 c0\n4c 89 ea\ne8 91 fb ff ff\n48 83 7c 24 08 00\n4c 89 ea\n0f 84 1d 0a 00 00\n66 90\n41 ff c4\n45 39 f4\n0f 8c 54 fe ff ff\n83 7c 24 1c 00\n4c 8b 7c 24 48\n75 39\neb 2b\n48 89 44 24 30\nb8 02 00 00 00\n48 89 44 24 20\n45 31 ff\n31 c0\n48 89 44 24 28\nc7 44 24 14 00 00 00 00\nc7 44 24 18 00 00 00 00\n31 ed\n48 8d 74 24 50\n31 ff\ne8 1f 0b 00 00\n4c 89 ff\ne8 87 fa ff ff\n48 89 05 d8 4a 20 00\n48 85 c0\n0f 84 7d 09 00 00\nbf cf 3e 40 00\ne8 2d fb ff ff\n48 85 c0\n0f 84 63 08 00 00\n48 8b 3d b5 4a 20 00\n31 f6\n31 d2\n31 c9\ne8 92 f9 ff ff\n49 89 c4\n4d 85 e4\n0f 84 64 08 00 00\n48 8d 54 24 38\nbe 0e 3f 40 00\n31 c9\n31 c0\n4c 89 e7\ne8 c0 f9 ff ff\n48 85 c0\n48 8b 44 24 38\n0f 85 65 08 00 00\n48 85 c0\n0f 84 5c 08 00 00\n41 b7 01\n45 31 ed\n48 85 c0\n74 5b\n66 83 38 00\n74 2e\n48 8b 48 08\n31 d2\n41 bd 08 04 00 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 81 3c d1 08 04 00 00\n48 8d 52 01\n74 25\n0f b7 30\n48 39 f2\n7c ea\n48 8b 3d 03 4a 20 00\n48 8b 15 44 4a 20 00\n45 31 ed\nbe 4c 3f 40 00\n31 c0\ne8 dd f9 ff ff\n48 8b 7c 24 38\ne8 73 f9 ff ff\n8b 4c 24 14\n48 8b 3d 00 4a 20 00\n8b 87 e0 00 00 00\n89 05 ec 49 20 00\n48 8b 44 24 50\n48 89 84 24 68 01 00 00\n85 c9\n74 23\n48 8b 87 e8 00 00 00\n48 63 0d cd 49 20 00\n48 c1 e1 07\n48 8b 74 08 10\n48 89 74 24 08\n48 85 f6\n75 0c\neb 56\n48 8b 74 24 08\n48 85 f6\n74 4c\n48 8d 94 24 e0 01 00 00\ne8 91 fa ff ff\nf6 84 24 40 02 00 00 04\n74 08\n80 a4 24 68 01 00 00 fb\n48 c7 c2 ff ff ef ff\n48 23 94 24 68 01 00 00\n48 89 94 24 68 01 00 00\n48 8b 3d 79 49 20 00\n48 8b 74 24 08\ne8 17 fa ff ff\ne9 b0 01 00 00\n48 8d bc 24 90 01 00 00\n48 8b 74 24 28\ne8 40 0a 00 00\n48 63 05 49 49 20 00\n48 c1 e0 07\n83 7c 24 18 00\n48 8b 0d 41 49 20 00\n48 8b 89 e8 00 00 00\n48 8b 54 01 58\n48 8b 44 01 60\n48 89 c1\n48 0f 44 ca\n48 0f 44 d0\n48 89 8c 24 28 01 00 00\n48 89 94 24 38 01 00 00\n48 81 cd 0a 08 00 00\n48 8b 3d 07 49 20 00\n48 8b 87 e8 00 00 00\n48 63 0d f1 48 20 00\n48 c1 e1 07\n48 8b 74 08 10\n8b 94 24 98 01 00 00\n8b 8c 24 9c 01 00 00\n44 8b 84 24 a0 01 00 00\n44 8b 8c 24 a4 01 00 00\n48 8d 84 24 20 01 00 00\n50\n55\n6a 00\n6a 01\n6a 00\nff 74 24 48\ne8 31 f9 ff ff\n48 83 c4 30\n48 89 44 24 08\n48 8b 3d a9 48 20 00\nb9 00 00 00 00\n41 b8 00 00 00 00\n48 89 c6\n48 8b 54 24 30\n49 89 d9\n48 8d 84 24 90 01 00 00\n50\n41 56\ne8 1b f7 ff ff\n48 83 c4 10\n48 8b 3d 78 48 20 00\n48 8b 74 24 08\n48 83 ec 08\nba 0a 00 00 00\nb9 0a 00 00 00\n41 b8 32 00 00 00\n41 b9 32 00 00 00\nff b4 24 30 01 00 00\nff b4 24 48 01 00 00\n6a 04\ne8 1c f9 ff ff\n48 83 c4 20\n48 89 c3\n48 8b 3d 36 48 20 00\nbe 83 3f 40 00\n31 d2\ne8 62 f8 ff ff\n48 89 05 2b 48 20 00\n48 8b 3d 1c 48 20 00\nbe 90 3f 40 00\n31 d2\ne8 48 f8 ff ff\n48 89 05 21 48 20 00\n48 8b 3d 02 48 20 00\n48 8b 74 24 08\nba 40 62 60 00\nb9 01 00 00 00\ne8 c6 f7 ff ff\n48 8b 3d e7 47 20 00\n48 89 de\ne8 d7 f8 ff ff\n48 8b 3d d8 47 20 00\n48 8b 74 24 08\ne8 c6 f8 ff ff\n48 8b 74 24 08\nbf a1 3f 40 00\n31 c0\n48 89 da\ne8 12 f7 ff ff\n4d 85 ed\n0f 95 c0\n41 20 c7\n41 80 ff 01\n75 3d\n4c 8b 44 24 08\nbe cf 3f 40 00\nb9 da 3f 40 00\n41 b9 e7 3f 40 00\nb8 00 00 00 00\n4c 89 e7\n4c 89 ea\n6a 00\n41 50\ne8 1a f7 ff ff\n48 83 c4 10\n48 89 05 5f 47 20 00\n48 85 c0\n0f 84 7d 05 00 00\n48 8b 3d 67 47 20 00\nbe 3c 62 60 00\nba 38 62 60 00\ne8 00 f6 ff ff\n89 05 7a 47 20 00\n85 c0\n74 44\n48 8b 3d 47 47 20 00\n48 8d 74 24 60\n48 8d 54 24 44\ne8 10 f6 ff ff\n85 c0\n74 2a\n8b 44 24 58\n89 c2\n83 e2 f1\n83 7c 24 44 02\n0f 4d d0\n83 7c 24 60 01\n0f 45 d0\n48 8b 3d 14 47 20 00\n48 8b 74 24 08\ne8 52 f8 ff ff\n48 8d 5c 24 60\neb 17\n48 8b 3d a9 46 20 00\ne8 14 f7 ff ff\n48 8b 3d e5 46 20 00\n48 89 de\ne8 d5 f6 ff ff\n8b 44 24 60\n8d 48 fe\n83 f9 20\n0f 87 00 04 00 00\nff 24 cd 18 39 40 00\n48 8d 6c 24 60\nbe 05 40 40 00\n48 89 ef\ne8 bc 08 00 00\n48 89 ef\ne8 e4 08 00 00\neb b2\n48 8d 6c 24 60\nbe 57 41 40 00\n48 89 ef\ne8 a0 08 00 00\n48 89 ef\ne8 48 13 00 00\neb 96\n48 8d 6c 24 60\nbe ba 40 40 00\n48 89 ef\ne8 84 08 00 00\n48 89 ef\ne8 ec 0f 00 00\ne9 77 ff ff ff\n48 8d 6c 24 60\nbe 9f 40 40 00\n48 89 ef\ne8 65 08 00 00\n48 89 ef\ne8 4d 0f 00 00\ne9 58 ff ff ff\n48 8d 6c 24 60\nbe 76 40 40 00\n48 89 ef\ne8 46 08 00 00\n48 89 ef\ne8 fe 0d 00 00\ne9 39 ff ff ff\n48 8d 6c 24 60\nbe 33 40 40 00\n48 89 ef\ne8 27 08 00 00\n48 89 ef\ne8 6f 0b 00 00\ne9 1a ff ff ff\n48 8d 6c 24 60\nbe 69 40 40 00\n48 89 ef\ne8 08 08 00 00\n48 89 ef\ne8 40 0d 00 00\ne9 fb fe ff ff\n48 8d 6c 24 60\nbe 85 40 40 00\n48 89 ef\ne8 e9 07 00 00\n48 89 ef\ne8 21 0e 00 00\ne9 dc fe ff ff\n48 8d 6c 24 60\nbe 27 41 40 00\n48 89 ef\ne8 ca 07 00 00\n48 89 ef\ne8 22 11 00 00\ne9 bd fe ff ff\n48 8d 6c 24 60\nbe 37 41 40 00\n48 89 ef\ne8 ab 07 00 00\n48 89 ef\ne8 63 11 00 00\ne9 9e fe ff ff\n48 8d 6c 24 60\nbe 19 40 40 00\n48 89 ef\ne8 8c 07 00 00\n48 89 ef\ne8 64 0a 00 00\ne9 7f fe ff ff\n48 8d 6c 24 60\nbe 25 40 40 00\n48 89 ef\ne8 6d 07 00 00\n48 89 ef\ne8 a5 0a 00 00\ne9 60 fe ff ff\n48 8d 6c 24 60\nbe ac 40 40 00\n48 89 ef\ne8 4e 07 00 00\n48 89 ef\ne8 96 0e 00 00\ne9 41 fe ff ff\n48 8d 6c 24 60\nbe 0e 40 40 00\n48 89 ef\ne8 2f 07 00 00\n48 89 ef\ne8 f7 09 00 00\ne9 22 fe ff ff\n48 8d 6c 24 60\nbe 58 40 40 00\n48 89 ef\ne8 10 07 00 00\n48 89 ef\ne8 b8 0b 00 00\ne9 03 fe ff ff\n48 8d 6c 24 60\nbe c6 40 40 00\n48 89 ef\ne8 f1 06 00 00\n48 89 ef\ne8 89 0e 00 00\ne9 e4 fd ff ff\n48 8d 6c 24 60\nbe 96 41 40 00\n48 89 ef\ne8 d2 06 00 00\n48 89 ef\ne8 ba 13 00 00\ne9 c5 fd ff ff\n48 8d 6c 24 60\nbe 40 40 40 00\n48 89 ef\ne8 b3 06 00 00\n48 89 ef\ne8 5b 0a 00 00\ne9 a6 fd ff ff\n48 8d 6c 24 60\nbe 4c 40 40 00\n48 89 ef\ne8 94 06 00 00\n48 89 ef\ne8 2c 0b 00 00\ne9 87 fd ff ff\n48 8d 6c 24 60\nbe 60 40 40 00\n48 89 ef\ne8 75 06 00 00\n48 89 ef\ne8 9d 0b 00 00\ne9 68 fd ff ff\n48 8d 6c 24 60\nbe 87 40 40 00\n48 89 ef\ne8 56 06 00 00\n48 89 ef\ne8 ee 0b 00 00\ne9 49 fd ff ff\n48 8d 6c 24 60\nbe 8e 40 40 00\n48 89 ef\ne8 37 06 00 00\n48 89 ef\ne8 cf 0c 00 00\ne9 2a fd ff ff\n48 8d 6c 24 60\nbe d0 40 40 00\n48 89 ef\ne8 18 06 00 00\n48 89 ef\ne8 e0 0d 00 00\ne9 0b fd ff ff\n48 8d 6c 24 60\nbe ea 40 40 00\n48 89 ef\ne8 f9 05 00 00\n48 89 ef\ne8 31 0e 00 00\ne9 ec fc ff ff\n48 8d 6c 24 60\nbe fa 40 40 00\n48 89 ef\ne8 da 05 00 00\n48 89 ef\ne8 72 0e 00 00\ne9 cd fc ff ff\n48 8d 6c 24 60\nbe 87 41 40 00\n48 89 ef\ne8 bb 05 00 00\n48 89 ef\ne8 33 12 00 00\ne9 ae fc ff ff\n48 8d 6c 24 60\nbe a4 41 40 00\n48 89 ef\ne8 9c 05 00 00\n48 89 ef\ne8 44 13 00 00\ne9 8f fc ff ff\n48 8d 6c 24 60\nbe 0b 41 40 00\n48 89 ef\ne8 7d 05 00 00\n48 89 ef\ne8 95 0e 00 00\ne9 70 fc ff ff\n48 8d 6c 24 60\nbe db 40 40 00\n48 89 ef\ne8 5e 05 00 00\n48 89 ef\ne8 46 0d 00 00\ne9 51 fc ff ff\n48 8d 6c 24 60\nbe 19 41 40 00\n48 89 ef\ne8 3f 05 00 00\n48 89 ef\ne8 77 0e 00 00\ne9 32 fc ff ff\n48 8d 6c 24 60\nbe 66 41 40 00\n48 89 ef\ne8 20 05 00 00\n48 89 ef\ne8 18 10 00 00\ne9 13 fc ff ff\n48 8d 6c 24 60\nbe 77 41 40 00\n48 89 ef\ne8 01 05 00 00\n48 89 ef\ne8 b9 10 00 00\ne9 f4 fb ff ff\n48 8d 6c 24 60\nbe 48 41 40 00\n48 89 ef\ne8 e2 04 00 00\n48 89 ef\ne8 fa 0e 00 00\ne9 d5 fb ff ff\n83 3d ee 42 20 00 00\n74 37\n8b 0d d2 42 20 00\n39 c8\n75 1a\nbe b2 41 40 00\n48 89 df\ne8 b5 04 00 00\n48 89 df\ne8 bd 12 00 00\ne9 a8 fb ff ff\nff c1\n39 c8\n75 0d\n48 89 df\ne8 2a 13 00 00\ne9 95 fb ff ff\n8b 74 24 60\nbf c7 41 40 00\n31 c0\ne8 d5 f1 ff ff\ne9 80 fb ff ff\n48 8b 3d 49 42 20 00\n48 8b 15 8a 42 20 00\nbe 64 3d 40 00\n31 c0\ne8 26 f2 ff ff\ne9 1a f5 ff ff\n48 8b 3d 2a 42 20 00\n48 8b 15 6b 42 20 00\nbe d8 3e 40 00\n31 c0\ne8 07 f2 ff ff\ne9 7e f7 ff ff\n48 8b 3d 0b 42 20 00\n48 8b 15 4c 42 20 00\n45 31 ff\nbe f9 3e 40 00\n31 c0\ne8 e5 f1 ff ff\n45 31 ed\ne9 0a f8 ff ff\n48 8b 3d e6 41 20 00\n48 8b 15 27 42 20 00\nbe 1e 3f 40 00\n31 c0\ne8 c3 f1 ff ff\n48 8b 44 24 38\ne9 80 f7 ff ff\n48 8b 0d c2 41 20 00\nbf f3 3f 40 00\nbe 11 00 00 00\nba 01 00 00 00\ne8 0e f3 ff ff\ne9 63 fa ff ff\n48 8b 3d a2 41 20 00\n48 8b 15 e3 41 20 00\nbe 8d 3e 40 00\n31 c0\ne8 7f f1 ff ff\n31 ff\ne8 b8 00 00 00\nbf 83 3e 40 00\ne8 6e f0 ff ff\n31 ff\ne8 c7 f2 ff ff\nbf 8f 3d 40 00\ne8 9d 00 00 00\nbf 67 3e 40 00\ne8 93 00 00 00\n31 ff\ne8 8c 00 00 00\nbf ad 3d 40 00\ne8 82 00 00 00\nbf fe 3d 40 00\ne8 78 00 00 00\nbf 4c 3e 40 00\ne8 6e 00 00 00\nbf cc 3d 40 00\ne8 64 00 00 00\nbf e5 3d 40 00\ne8 5a 00 00 00\n4c 8b 35 23 41 20 00\n48 8b 1d 64 41 20 00\n4c 89 ff\ne8 94 f1 ff ff\n48 89 c1\nbe ad 3e 40 00\n31 c0\n4c 89 f7\n48 89 da\ne8 ef f0 ff ff\nbf 01 00 00 00\ne8 45 f2 ff ff\n48 8b 3d ee 40 20 00\n48 8b 15 2f 41 20 00\n4a 8b 0c fb\nbe 21 3e 40 00\ne9 43 ff ff ff\n'
p397
S'.text:00000000004014b0\n.text:00000000004014b1\n.text:00000000004014b3\n.text:00000000004014b5\n.text:00000000004014b7\n.text:00000000004014b9\n.text:00000000004014ba\n.text:00000000004014c1\n.text:00000000004014c4\n.text:00000000004014c7\n.text:00000000004014ca\n.text:00000000004014d1\n.text:00000000004014d6\n.text:00000000004014db\n.text:00000000004014e0\n.text:00000000004014e3\n.text:00000000004014e9\n.text:00000000004014ec\n.text:00000000004014f1\n.text:00000000004014fa\n.text:00000000004014ff\n.text:0000000000401503\n.text:0000000000401509\n.text:000000000040150e\n.text:0000000000401513\n.text:0000000000401518\n.text:000000000040151e\n.text:0000000000401523\n.text:000000000040152b\n.text:000000000040152d\n.text:0000000000401532\n.text:0000000000401534\n.text:0000000000401539\n.text:0000000000401541\n.text:0000000000401549\n.text:000000000040154b\n.text:0000000000401550\n.text:0000000000401553\n.text:0000000000401557\n.text:000000000040155a\n.text:0000000000401560\n.text:0000000000401564\n.text:0000000000401567\n.text:000000000040156a\n.text:0000000000401570\n.text:0000000000401577\n.text:000000000040157b\n.text:000000000040157e\n.text:0000000000401583\n.text:0000000000401586\n.text:000000000040158c\n.text:000000000040158f\n.text:0000000000401595\n.text:0000000000401598\n.text:000000000040159e\n.text:00000000004015a3\n.text:00000000004015a8\n.text:00000000004015ad\n.text:00000000004015b2\n.text:00000000004015b5\n.text:00000000004015b8\n.text:00000000004015be\n.text:00000000004015c1\n.text:00000000004015c5\n.text:00000000004015ca\n.text:00000000004015cf\n.text:00000000004015d2\n.text:00000000004015d5\n.text:00000000004015db\n.text:00000000004015de\n.text:00000000004015e2\n.text:00000000004015e7\n.text:00000000004015ec\n.text:00000000004015f4\n.text:00000000004015f6\n.text:00000000004015fb\n.text:0000000000401601\n.text:0000000000401606\n.text:0000000000401609\n.text:000000000040160c\n.text:0000000000401612\n.text:0000000000401615\n.text:0000000000401619\n.text:000000000040161e\n.text:0000000000401623\n.text:0000000000401626\n.text:0000000000401629\n.text:000000000040162f\n.text:0000000000401632\n.text:0000000000401636\n.text:000000000040163b\n.text:000000000040163d\n.text:0000000000401640\n.text:0000000000401645\n.text:000000000040164b\n.text:000000000040164d\n.text:0000000000401650\n.text:0000000000401655\n.text:0000000000401658\n.text:000000000040165b\n.text:0000000000401661\n.text:0000000000401664\n.text:0000000000401668\n.text:000000000040166d\n.text:0000000000401672\n.text:0000000000401676\n.text:0000000000401679\n.text:000000000040167b\n.text:000000000040167e\n.text:0000000000401684\n.text:000000000040168c\n.text:000000000040168e\n.text:0000000000401699\n.text:00000000004016a0\n.text:00000000004016a2\n.text:00000000004016a5\n.text:00000000004016ab\n.text:00000000004016b0\n.text:00000000004016b7\n.text:00000000004016bb\n.text:00000000004016c0\n.text:00000000004016c2\n.text:00000000004016ca\n.text:00000000004016cc\n.text:00000000004016d0\n.text:00000000004016d5\n.text:00000000004016d7\n.text:00000000004016da\n.text:00000000004016df\n.text:00000000004016e5\n.text:00000000004016e8\n.text:00000000004016ee\n.text:00000000004016f0\n.text:00000000004016f3\n.text:00000000004016f6\n.text:00000000004016fc\n.text:0000000000401701\n.text:0000000000401706\n.text:0000000000401708\n.text:000000000040170a\n.text:000000000040170f\n.text:0000000000401714\n.text:0000000000401719\n.text:000000000040171c\n.text:000000000040171e\n.text:0000000000401723\n.text:000000000040172b\n.text:0000000000401733\n.text:0000000000401735\n.text:000000000040173a\n.text:000000000040173c\n.text:0000000000401741\n.text:0000000000401744\n.text:0000000000401749\n.text:0000000000401750\n.text:0000000000401753\n.text:0000000000401759\n.text:000000000040175e\n.text:0000000000401763\n.text:0000000000401766\n.text:000000000040176c\n.text:0000000000401773\n.text:0000000000401775\n.text:0000000000401777\n.text:0000000000401779\n.text:000000000040177e\n.text:0000000000401781\n.text:0000000000401784\n.text:000000000040178a\n.text:000000000040178f\n.text:0000000000401794\n.text:0000000000401796\n.text:0000000000401798\n.text:000000000040179b\n.text:00000000004017a0\n.text:00000000004017a3\n.text:00000000004017a8\n.text:00000000004017ae\n.text:00000000004017b1\n.text:00000000004017b7\n.text:00000000004017ba\n.text:00000000004017bd\n.text:00000000004017c0\n.text:00000000004017c2\n.text:00000000004017c6\n.text:00000000004017c8\n.text:00000000004017cc\n.text:00000000004017ce\n.text:00000000004017d4\n.text:00000000004017e0\n.text:00000000004017e8\n.text:00000000004017ec\n.text:00000000004017ee\n.text:00000000004017f1\n.text:00000000004017f4\n.text:00000000004017f6\n.text:00000000004017fd\n.text:0000000000401804\n.text:0000000000401807\n.text:000000000040180c\n.text:000000000040180e\n.text:0000000000401813\n.text:0000000000401818\n.text:000000000040181d\n.text:0000000000401821\n.text:0000000000401828\n.text:000000000040182e\n.text:0000000000401834\n.text:0000000000401839\n.text:0000000000401841\n.text:0000000000401843\n.text:0000000000401845\n.text:000000000040184c\n.text:0000000000401853\n.text:0000000000401857\n.text:000000000040185c\n.text:0000000000401861\n.text:0000000000401864\n.text:0000000000401866\n.text:0000000000401868\n.text:000000000040186d\n.text:0000000000401870\n.text:0000000000401872\n.text:000000000040187a\n.text:000000000040187f\n.text:0000000000401887\n.text:0000000000401889\n.text:0000000000401891\n.text:0000000000401898\n.text:00000000004018a0\n.text:00000000004018a8\n.text:00000000004018af\n.text:00000000004018b4\n.text:00000000004018b9\n.text:00000000004018be\n.text:00000000004018c6\n.text:00000000004018cb\n.text:00000000004018d0\n.text:00000000004018d7\n.text:00000000004018db\n.text:00000000004018e0\n.text:00000000004018e7\n.text:00000000004018ee\n.text:00000000004018f3\n.text:00000000004018f8\n.text:00000000004018fb\n.text:00000000004018ff\n.text:0000000000401903\n.text:000000000040190b\n.text:0000000000401913\n.text:000000000040191a\n.text:0000000000401921\n.text:0000000000401928\n.text:000000000040192f\n.text:0000000000401933\n.text:0000000000401938\n.text:000000000040193f\n.text:0000000000401946\n.text:000000000040194e\n.text:0000000000401956\n.text:000000000040195e\n.text:000000000040195f\n.text:0000000000401960\n.text:0000000000401962\n.text:0000000000401964\n.text:0000000000401966\n.text:000000000040196a\n.text:000000000040196f\n.text:0000000000401973\n.text:0000000000401978\n.text:000000000040197f\n.text:0000000000401984\n.text:000000000040198a\n.text:000000000040198d\n.text:0000000000401992\n.text:0000000000401995\n.text:000000000040199d\n.text:000000000040199e\n.text:00000000004019a0\n.text:00000000004019a5\n.text:00000000004019a9\n.text:00000000004019b0\n.text:00000000004019b5\n.text:00000000004019b9\n.text:00000000004019be\n.text:00000000004019c3\n.text:00000000004019c9\n.text:00000000004019cf\n.text:00000000004019d6\n.text:00000000004019dd\n.text:00000000004019df\n.text:00000000004019e4\n.text:00000000004019e8\n.text:00000000004019eb\n.text:00000000004019f2\n.text:00000000004019f7\n.text:00000000004019f9\n.text:00000000004019fe\n.text:0000000000401a05\n.text:0000000000401a0c\n.text:0000000000401a11\n.text:0000000000401a13\n.text:0000000000401a18\n.text:0000000000401a1f\n.text:0000000000401a26\n.text:0000000000401a2b\n.text:0000000000401a30\n.text:0000000000401a35\n.text:0000000000401a3a\n.text:0000000000401a41\n.text:0000000000401a44\n.text:0000000000401a49\n.text:0000000000401a50\n.text:0000000000401a55\n.text:0000000000401a5a\n.text:0000000000401a5f\n.text:0000000000401a64\n.text:0000000000401a66\n.text:0000000000401a69\n.text:0000000000401a6e\n.text:0000000000401a71\n.text:0000000000401a74\n.text:0000000000401a77\n.text:0000000000401a7b\n.text:0000000000401a7d\n.text:0000000000401a82\n.text:0000000000401a87\n.text:0000000000401a8c\n.text:0000000000401a92\n.text:0000000000401a97\n.text:0000000000401a9a\n.text:0000000000401a9d\n.text:0000000000401a9f\n.text:0000000000401aa1\n.text:0000000000401aa6\n.text:0000000000401aaa\n.text:0000000000401ab1\n.text:0000000000401ab4\n.text:0000000000401aba\n.text:0000000000401ac1\n.text:0000000000401ac6\n.text:0000000000401acb\n.text:0000000000401ad0\n.text:0000000000401ad6\n.text:0000000000401ad8\n.text:0000000000401ada\n.text:0000000000401ae1\n.text:0000000000401ae6\n.text:0000000000401aeb\n.text:0000000000401af0\n.text:0000000000401af2\n.text:0000000000401af4\n.text:0000000000401af8\n.text:0000000000401afa\n.text:0000000000401afd\n.text:0000000000401b02\n.text:0000000000401b05\n.text:0000000000401b0a\n.text:0000000000401b0d\n.text:0000000000401b14\n.text:0000000000401b19\n.text:0000000000401b1e\n.text:0000000000401b23\n.text:0000000000401b30\n.text:0000000000401b37\n.text:0000000000401b3c\n.text:0000000000401b43\n.text:0000000000401b46\n.text:0000000000401b4b\n.text:0000000000401b4f\n.text:0000000000401b52\n.text:0000000000401b55\n.text:0000000000401b5b\n.text:0000000000401b62\n.text:0000000000401b67\n.text:0000000000401b6c\n.text:0000000000401b6f\n.text:0000000000401b74\n.text:0000000000401b77\n.text:0000000000401b7c\n.text:0000000000401b7e\n.text:0000000000401b83\n.text:0000000000401b88\n.text:0000000000401b8b\n.text:0000000000401b90\n.text:0000000000401b93\n.text:0000000000401b98\n.text:0000000000401b9a\n.text:0000000000401b9f\n.text:0000000000401ba4\n.text:0000000000401ba7\n.text:0000000000401bac\n.text:0000000000401baf\n.text:0000000000401bb4\n.text:0000000000401bb9\n.text:0000000000401bbe\n.text:0000000000401bc3\n.text:0000000000401bc6\n.text:0000000000401bcb\n.text:0000000000401bce\n.text:0000000000401bd3\n.text:0000000000401bd8\n.text:0000000000401bdd\n.text:0000000000401be2\n.text:0000000000401be5\n.text:0000000000401bea\n.text:0000000000401bed\n.text:0000000000401bf2\n.text:0000000000401bf7\n.text:0000000000401bfc\n.text:0000000000401c01\n.text:0000000000401c04\n.text:0000000000401c09\n.text:0000000000401c0c\n.text:0000000000401c11\n.text:0000000000401c16\n.text:0000000000401c1b\n.text:0000000000401c20\n.text:0000000000401c23\n.text:0000000000401c28\n.text:0000000000401c2b\n.text:0000000000401c30\n.text:0000000000401c35\n.text:0000000000401c3a\n.text:0000000000401c3f\n.text:0000000000401c42\n.text:0000000000401c47\n.text:0000000000401c4a\n.text:0000000000401c4f\n.text:0000000000401c54\n.text:0000000000401c59\n.text:0000000000401c5e\n.text:0000000000401c61\n.text:0000000000401c66\n.text:0000000000401c69\n.text:0000000000401c6e\n.text:0000000000401c73\n.text:0000000000401c78\n.text:0000000000401c7d\n.text:0000000000401c80\n.text:0000000000401c85\n.text:0000000000401c88\n.text:0000000000401c8d\n.text:0000000000401c92\n.text:0000000000401c97\n.text:0000000000401c9c\n.text:0000000000401c9f\n.text:0000000000401ca4\n.text:0000000000401ca7\n.text:0000000000401cac\n.text:0000000000401cb1\n.text:0000000000401cb6\n.text:0000000000401cbb\n.text:0000000000401cbe\n.text:0000000000401cc3\n.text:0000000000401cc6\n.text:0000000000401ccb\n.text:0000000000401cd0\n.text:0000000000401cd5\n.text:0000000000401cda\n.text:0000000000401cdd\n.text:0000000000401ce2\n.text:0000000000401ce5\n.text:0000000000401cea\n.text:0000000000401cef\n.text:0000000000401cf4\n.text:0000000000401cf9\n.text:0000000000401cfc\n.text:0000000000401d01\n.text:0000000000401d04\n.text:0000000000401d09\n.text:0000000000401d0e\n.text:0000000000401d13\n.text:0000000000401d18\n.text:0000000000401d1b\n.text:0000000000401d20\n.text:0000000000401d23\n.text:0000000000401d28\n.text:0000000000401d2d\n.text:0000000000401d32\n.text:0000000000401d37\n.text:0000000000401d3a\n.text:0000000000401d3f\n.text:0000000000401d42\n.text:0000000000401d47\n.text:0000000000401d4c\n.text:0000000000401d51\n.text:0000000000401d56\n.text:0000000000401d59\n.text:0000000000401d5e\n.text:0000000000401d61\n.text:0000000000401d66\n.text:0000000000401d6b\n.text:0000000000401d70\n.text:0000000000401d75\n.text:0000000000401d78\n.text:0000000000401d7d\n.text:0000000000401d80\n.text:0000000000401d85\n.text:0000000000401d8a\n.text:0000000000401d8f\n.text:0000000000401d94\n.text:0000000000401d97\n.text:0000000000401d9c\n.text:0000000000401d9f\n.text:0000000000401da4\n.text:0000000000401da9\n.text:0000000000401dae\n.text:0000000000401db3\n.text:0000000000401db6\n.text:0000000000401dbb\n.text:0000000000401dbe\n.text:0000000000401dc3\n.text:0000000000401dc8\n.text:0000000000401dcd\n.text:0000000000401dd2\n.text:0000000000401dd5\n.text:0000000000401dda\n.text:0000000000401ddd\n.text:0000000000401de2\n.text:0000000000401de7\n.text:0000000000401dec\n.text:0000000000401df1\n.text:0000000000401df4\n.text:0000000000401df9\n.text:0000000000401dfc\n.text:0000000000401e01\n.text:0000000000401e06\n.text:0000000000401e0b\n.text:0000000000401e10\n.text:0000000000401e13\n.text:0000000000401e18\n.text:0000000000401e1b\n.text:0000000000401e20\n.text:0000000000401e25\n.text:0000000000401e2a\n.text:0000000000401e2f\n.text:0000000000401e32\n.text:0000000000401e37\n.text:0000000000401e3a\n.text:0000000000401e3f\n.text:0000000000401e44\n.text:0000000000401e49\n.text:0000000000401e4e\n.text:0000000000401e51\n.text:0000000000401e56\n.text:0000000000401e59\n.text:0000000000401e5e\n.text:0000000000401e63\n.text:0000000000401e68\n.text:0000000000401e6d\n.text:0000000000401e70\n.text:0000000000401e75\n.text:0000000000401e78\n.text:0000000000401e7d\n.text:0000000000401e82\n.text:0000000000401e87\n.text:0000000000401e8c\n.text:0000000000401e8f\n.text:0000000000401e94\n.text:0000000000401e97\n.text:0000000000401e9c\n.text:0000000000401ea1\n.text:0000000000401ea6\n.text:0000000000401eab\n.text:0000000000401eae\n.text:0000000000401eb3\n.text:0000000000401eb6\n.text:0000000000401ebb\n.text:0000000000401ec0\n.text:0000000000401ec5\n.text:0000000000401eca\n.text:0000000000401ecd\n.text:0000000000401ed2\n.text:0000000000401ed5\n.text:0000000000401eda\n.text:0000000000401edf\n.text:0000000000401ee4\n.text:0000000000401ee9\n.text:0000000000401eec\n.text:0000000000401ef1\n.text:0000000000401ef4\n.text:0000000000401ef9\n.text:0000000000401efe\n.text:0000000000401f03\n.text:0000000000401f08\n.text:0000000000401f0b\n.text:0000000000401f10\n.text:0000000000401f13\n.text:0000000000401f18\n.text:0000000000401f1d\n.text:0000000000401f22\n.text:0000000000401f27\n.text:0000000000401f2a\n.text:0000000000401f2f\n.text:0000000000401f32\n.text:0000000000401f37\n.text:0000000000401f3c\n.text:0000000000401f41\n.text:0000000000401f46\n.text:0000000000401f49\n.text:0000000000401f4e\n.text:0000000000401f51\n.text:0000000000401f56\n.text:0000000000401f5b\n.text:0000000000401f62\n.text:0000000000401f64\n.text:0000000000401f6a\n.text:0000000000401f6c\n.text:0000000000401f6e\n.text:0000000000401f73\n.text:0000000000401f76\n.text:0000000000401f7b\n.text:0000000000401f7e\n.text:0000000000401f83\n.text:0000000000401f88\n.text:0000000000401f8a\n.text:0000000000401f8c\n.text:0000000000401f8e\n.text:0000000000401f91\n.text:0000000000401f96\n.text:0000000000401f9b\n.text:0000000000401f9f\n.text:0000000000401fa4\n.text:0000000000401fa6\n.text:0000000000401fab\n.text:0000000000401fb0\n.text:0000000000401fb7\n.text:0000000000401fbe\n.text:0000000000401fc3\n.text:0000000000401fc5\n.text:0000000000401fca\n.text:0000000000401fcf\n.text:0000000000401fd6\n.text:0000000000401fdd\n.text:0000000000401fe2\n.text:0000000000401fe4\n.text:0000000000401fe9\n.text:0000000000401fee\n.text:0000000000401ff5\n.text:0000000000401ffc\n.text:0000000000401fff\n.text:0000000000402004\n.text:0000000000402006\n.text:000000000040200b\n.text:000000000040200e\n.text:0000000000402013\n.text:000000000040201a\n.text:0000000000402021\n.text:0000000000402026\n.text:0000000000402028\n.text:000000000040202d\n.text:0000000000402032\n.text:0000000000402037\n.text:000000000040203e\n.text:0000000000402043\n.text:0000000000402048\n.text:000000000040204d\n.text:0000000000402052\n.text:0000000000402057\n.text:000000000040205e\n.text:0000000000402065\n.text:000000000040206a\n.text:000000000040206c\n.text:0000000000402071\n.text:0000000000402073\n.text:0000000000402078\n.text:000000000040207d\n.text:0000000000402082\n.text:0000000000402084\n.text:0000000000402089\n.text:000000000040208e\n.text:0000000000402093\n.text:0000000000402098\n.text:000000000040209d\n.text:000000000040209f\n.text:00000000004020a4\n.text:00000000004020a9\n.text:00000000004020ae\n.text:00000000004020b3\n.text:00000000004020b8\n.text:00000000004020bd\n.text:00000000004020c2\n.text:00000000004020c7\n.text:00000000004020cc\n.text:00000000004020d1\n.text:00000000004020d6\n.text:00000000004020dd\n.text:00000000004020e4\n.text:00000000004020e7\n.text:00000000004020ec\n.text:00000000004020ef\n.text:00000000004020f4\n.text:00000000004020f6\n.text:00000000004020f9\n.text:00000000004020fc\n.text:0000000000402101\n.text:0000000000402106\n.text:000000000040210b\n.text:0000000000402112\n.text:0000000000402119\n.text:000000000040211d\n.text:0000000000402122\n'
p398
tp399
sS'realloc'
p400
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p401
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_00606130)();\u000a  return pvVar1;\u000a}\u000a\u000a
p402
S'JMP qword ptr [0x00606130]\n'
p403
S'ff 25 4a 4e 20 00\n'
p404
S'.plt:00000000004012e0\n'
p405
tp406
sS'XFilterEvent'
p407
(S'\n__stdcall XFilterEvent()\n'
p408
V\u000avoid XFilterEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XFilterEvent_00606180)();\u000a  return;\u000a}\u000a\u000a
p409
S'JMP qword ptr [0x00606180]\n'
p410
S'ff 25 fa 4d 20 00\n'
p411
S'.plt:0000000000401380\n'
p412
tp413
sS'do_KeymapNotify'
p414
(S'\n__stdcall do_KeymapNotify(XEvent * eventp)\n'
p415
V\u000avoid do_KeymapNotify(XEvent *eventp)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  printf("    keys:  ");\u000a  lVar1 = 0;\u000a  do {\u000a    if (lVar1 == 0x10) {\u000a      printf("\u005cn           ");\u000a    }\u000a    printf("%-3u ",(ulong)(uint)(int)(char)(*eventp)[lVar1 + 0x28]);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 0x20);\u000a  putchar(10);\u000a  return;\u000a}\u000a\u000a
p416
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV EDI,0x404950\nXOR EAX,EAX\nCALL 0x00401180\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP RBX,0x10\nJNZ 0x004029a2\nMOV EDI,0x40495c\nXOR EAX,EAX\nCALL 0x00401180\nMOVSX ESI,byte ptr [R14 + RBX*0x1 + 0x28]\nMOV EDI,0x404969\nXOR EAX,EAX\nCALL 0x00401180\nINC RBX\nCMP RBX,0x20\nJNZ 0x00402990\nMOV EDI,0xa\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x004010b0\n'
p417
S'41 56\n53\n50\n49 89 fe\nbf 50 49 40 00\n31 c0\ne8 fd e7 ff ff\n31 db\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 83 fb 10\n75 0c\nbf 5c 49 40 00\n31 c0\ne8 de e7 ff ff\n41 0f be 74 1e 28\nbf 69 49 40 00\n31 c0\ne8 cc e7 ff ff\n48 ff c3\n48 83 fb 20\n75 d3\nbf 0a 00 00 00\n48 83 c4 08\n5b\n41 5e\ne9 e2 e6 ff ff\n'
p418
S'.text:0000000000402970\n.text:0000000000402972\n.text:0000000000402973\n.text:0000000000402974\n.text:0000000000402977\n.text:000000000040297c\n.text:000000000040297e\n.text:0000000000402983\n.text:0000000000402985\n.text:0000000000402990\n.text:0000000000402994\n.text:0000000000402996\n.text:000000000040299b\n.text:000000000040299d\n.text:00000000004029a2\n.text:00000000004029a8\n.text:00000000004029ad\n.text:00000000004029af\n.text:00000000004029b4\n.text:00000000004029b7\n.text:00000000004029bb\n.text:00000000004029bd\n.text:00000000004029c2\n.text:00000000004029c6\n.text:00000000004029c7\n.text:00000000004029c9\n'
p419
tp420
sS'sprintf'
p421
(S'\n__stdcall sprintf(char * __s, char * __format)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sprintf(char *__s,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_sprintf_00606160)();\u000a  return iVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x00606160]\n'
p424
S'ff 25 1a 4e 20 00\n'
p425
S'.plt:0000000000401340\n'
p426
tp427
sS'XRRQueryVersion'
p428
(S'\n__stdcall XRRQueryVersion()\n'
p429
V\u000avoid XRRQueryVersion(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRQueryVersion_00606040)();\u000a  return;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x00606040]\n'
p431
S'ff 25 3a 4f 20 00\n'
p432
S'.plt:0000000000401100\n'
p433
tp434
sS'strlen'
p435
(S'\n__stdcall strlen(char * __s)\n'
p436
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_00606068)();\u000a  return sVar1;\u000a}\u000a\u000a
p437
S'JMP qword ptr [0x00606068]\n'
p438
S'ff 25 12 4f 20 00\n'
p439
S'.plt:0000000000401150\n'
p440
tp441
sS'XSetStandardProperties'
p442
(S'\n__stdcall XSetStandardProperties()\n'
p443
V\u000avoid XSetStandardProperties(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetStandardProperties_00606020)();\u000a  return;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x00606020]\n'
p445
S'ff 25 5a 4f 20 00\n'
p446
S'.plt:00000000004010c0\n'
p447
tp448
sS'do_CirculateNotify'
p449
(S'\n__stdcall do_CirculateNotify(XEvent * eventp)\n'
p450
V\u000avoid do_CirculateNotify(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char pdummy [10];\u000a  char local_1a [10];\u000a  \u000a  if (*(int *)(*eventp + 0x30) == 0) {\u000a    __s = "PlaceOnTop";\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x30) == 1) {\u000a      __s = "PlaceOnBottom";\u000a    }\u000a    else {\u000a      __s = local_1a;\u000a      sprintf(__s,"%d");\u000a    }\u000a  }\u000a  printf("    event 0x%lx, window 0x%lx, place %s\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28),__s);\u000a  return;\u000a}\u000a\u000a
p451
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOV EDX,dword ptr [RBX + 0x30]\nTEST EDX,EDX\nJZ 0x00402dae\nCMP EDX,0x1\nJNZ 0x00402db6\nMOV R14D,0x404ce4\nJMP 0x00402dca\nMOV R14D,0x404cd9\nJMP 0x00402dca\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV EDI,0x404cf2\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p452
S'41 56\n53\n48 83 ec 18\n48 89 fb\n8b 53 30\n85 d2\n74 0d\n83 fa 01\n75 10\n41 be e4 4c 40 00\neb 1c\n41 be d9 4c 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 76 e5 ff ff\n48 8b 73 20\n48 8b 53 28\nbf f2 4c 40 00\n31 c0\n4c 89 f1\ne8 9f e3 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p453
S'.text:0000000000402d90\n.text:0000000000402d92\n.text:0000000000402d93\n.text:0000000000402d97\n.text:0000000000402d9a\n.text:0000000000402d9d\n.text:0000000000402d9f\n.text:0000000000402da1\n.text:0000000000402da4\n.text:0000000000402da6\n.text:0000000000402dac\n.text:0000000000402dae\n.text:0000000000402db4\n.text:0000000000402db6\n.text:0000000000402dbb\n.text:0000000000402dc0\n.text:0000000000402dc2\n.text:0000000000402dc5\n.text:0000000000402dca\n.text:0000000000402dce\n.text:0000000000402dd2\n.text:0000000000402dd7\n.text:0000000000402dd9\n.text:0000000000402ddc\n.text:0000000000402de1\n.text:0000000000402de5\n.text:0000000000402de6\n.text:0000000000402de8\n'
p454
tp455
sS'print_SubPixelOrder'
p456
(S'\n__stdcall print_SubPixelOrder()\n'
p457
V\u000avoid print_SubPixelOrder(ulong uParm1)\u000a\u000a{\u000a  if ((uint)uParm1 < 6) {\u000a                    /* WARNING: Could not recover jumptable at 0x00403395. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a    (*(code *)(&PTR_LAB_00403a20)[uParm1])();\u000a    return;\u000a  }\u000a  printf("%d",uParm1 & 0xffff);\u000a  return;\u000a}\u000a\u000a
p458
S'CMP EDI,0x5\nJA 0x004033a8\nJMP qword ptr [0x403a20 + RDI*0x8]\n'
p459
S'83 ff 05\n77 13\nff 24 fd 20 3a 40 00\n'
p460
S'.text:0000000000403390\n.text:0000000000403393\n.text:0000000000403395\n'
p461
tp462
sS'XKeysymToString'
p463
(S'\n__stdcall XKeysymToString()\n'
p464
V\u000avoid XKeysymToString(void)\u000a\u000a{\u000a  (*(code *)PTR_XKeysymToString_00606188)();\u000a  return;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x00606188]\n'
p466
S'ff 25 f2 4d 20 00\n'
p467
S'.plt:0000000000401390\n'
p468
tp469
sS'do_MotionNotify'
p470
(S'\n__stdcall do_MotionNotify(XEvent * eventp)\n'
p471
V\u000avoid do_MotionNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    state 0x%x, is_hint %u, same_screen %s\u005cn",(ulong)*(uint *)(*eventp + 0x50),\u000a         (ulong)(uint)(int)(char)(*eventp)[0x54],*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p472
S'PUSH RBX\nMOV RBX,RDI\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RDX,qword ptr [RBX + 0x30]\nMOV RCX,qword ptr [RBX + 0x38]\nMOV R8D,dword ptr [RBX + 0x40]\nMOV R9D,dword ptr [RBX + 0x44]\nMOV R10D,dword ptr [RBX + 0x48]\nMOV R11D,dword ptr [RBX + 0x4c]\nMOV EDI,0x4046b3\nMOV EAX,0x0\nPUSH R11\nPUSH R10\nCALL 0x00401180\nADD RSP,0x10\nMOV ESI,dword ptr [RBX + 0x50]\nMOVSX EDX,byte ptr [RBX + 0x54]\nCMP dword ptr [RBX + 0x58],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV EDI,0x40480c\nXOR EAX,EAX\nPOP RBX\nJMP 0x00401180\n'
p473
S'53\n48 89 fb\n48 8b 73 28\n48 8b 53 30\n48 8b 4b 38\n44 8b 43 40\n44 8b 4b 44\n44 8b 53 48\n44 8b 5b 4c\nbf b3 46 40 00\nb8 00 00 00 00\n41 53\n41 52\ne8 cd e9 ff ff\n48 83 c4 10\n8b 73 50\n0f be 53 54\n83 7b 58 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\nbf 0c 48 40 00\n31 c0\n5b\ne9 a0 e9 ff ff\n'
p474
S'.text:0000000000402780\n.text:0000000000402781\n.text:0000000000402784\n.text:0000000000402788\n.text:000000000040278c\n.text:0000000000402790\n.text:0000000000402794\n.text:0000000000402798\n.text:000000000040279c\n.text:00000000004027a0\n.text:00000000004027a5\n.text:00000000004027aa\n.text:00000000004027ac\n.text:00000000004027ae\n.text:00000000004027b3\n.text:00000000004027b7\n.text:00000000004027ba\n.text:00000000004027be\n.text:00000000004027c2\n.text:00000000004027c7\n.text:00000000004027cc\n.text:00000000004027d0\n.text:00000000004027d3\n.text:00000000004027d8\n.text:00000000004027da\n.text:00000000004027db\n'
p475
tp476
sS'strcmp'
p477
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p478
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00606098)();\u000a  return iVar1;\u000a}\u000a\u000a
p479
S'JMP qword ptr [0x00606098]\n'
p480
S'ff 25 e2 4e 20 00\n'
p481
S'.plt:00000000004011b0\n'
p482
tp483
sS'do_DestroyNotify'
p484
(S'\n__stdcall do_DestroyNotify(XEvent * eventp)\n'
p485
V\u000avoid do_DestroyNotify(XEvent *eventp)\u000a\u000a{\u000a  printf("    event 0x%lx, window 0x%lx\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28));\u000a  return;\u000a}\u000a\u000a
p486
S'MOV RSI,qword ptr [RDI + 0x20]\nMOV RDX,qword ptr [RDI + 0x28]\nMOV EDI,0x404aa9\nXOR EAX,EAX\nJMP 0x00401180\n'
p487
S'48 8b 77 20\n48 8b 57 28\nbf a9 4a 40 00\n31 c0\ne9 ec e5 ff ff\n'
p488
S'.text:0000000000402b80\n.text:0000000000402b84\n.text:0000000000402b88\n.text:0000000000402b8d\n.text:0000000000402b8f\n'
p489
tp490
sS'do_RRNotify_OutputProperty'
p491
(S'\n__stdcall do_RRNotify_OutputProperty(XEvent * eventp, XRRScreenResources * screen_resources)\n'
p492
V\u000avoid do_RRNotify_OutputProperty(XEvent *eventp,XRRScreenResources *screen_resources)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  long lVar2;\u000a  undefined8 uVar3;\u000a  char *__format;\u000a  \u000a  uVar1 = XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x38));\u000a  if (screen_resources == (XRRScreenResources *)0x0) {\u000a    puts("    subtype XRROutputPropertyChangeNotifyEvent");\u000a  }\u000a  else {\u000a    lVar2 = XRRGetOutputInfo(dpy,screen_resources,*(undefined8 *)(*eventp + 0x30));\u000a    puts("    subtype XRROutputPropertyChangeNotifyEvent");\u000a    if (lVar2 != 0) {\u000a      uVar3 = *(undefined8 *)(lVar2 + 0x10);\u000a      __format = "    output %s, ";\u000a      goto LAB_0040371f;\u000a    }\u000a  }\u000a  uVar3 = *(undefined8 *)(*eventp + 0x30);\u000a  lVar2 = 0;\u000a  __format = "    output %lu, ";\u000aLAB_0040371f:\u000a  printf(__format,uVar3);\u000a  printf("property %s, timestamp %lu, state ",uVar1,*(undefined8 *)(*eventp + 0x40));\u000a  if (*(int *)(*eventp + 0x48) == 1) {\u000a    puts("Delete");\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x48) == 0) {\u000a      puts("NewValue");\u000a    }\u000a    else {\u000a      printf("%d\u005cn");\u000a    }\u000a  }\u000a  XRRFreeOutputInfo(lVar2);\u000a  XFree(uVar1);\u000a  return;\u000a}\u000a\u000a
p493
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV R12,RDI\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [R12 + 0x38]\nCALL 0x004012b0\nMOV R14,RAX\nTEST RBX,RBX\nJZ 0x00403708\nMOV RDI,qword ptr [0x00606228]\nMOV RDX,qword ptr [R12 + 0x30]\nMOV RSI,RBX\nCALL 0x004013a0\nMOV R15,RAX\nMOV EDI,0x405310\nCALL 0x004010f0\nTEST R15,R15\nJZ 0x00403712\nMOV RSI,qword ptr [R15 + 0x10]\nMOV EDI,0x40511c\nJMP 0x0040371f\nMOV EDI,0x405310\nCALL 0x004010f0\nMOV RSI,qword ptr [R12 + 0x30]\nXOR R15D,R15D\nMOV EDI,0x40512c\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDX,qword ptr [R12 + 0x40]\nMOV EDI,0x405262\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00401180\nMOV ESI,dword ptr [R12 + 0x48]\nCMP ESI,0x1\nJZ 0x00403754\nTEST ESI,ESI\nJNZ 0x00403760\nMOV EDI,0x404d4d\nCALL 0x004010f0\nJMP 0x0040376c\nMOV EDI,0x404d5e\nCALL 0x004010f0\nJMP 0x0040376c\nMOV EDI,0x4041da\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDI,R15\nCALL 0x00401120\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401190\n'
p494
S'41 57\n41 56\n41 54\n53\n50\n48 89 f3\n49 89 fc\n48 8b 3d 63 2b 20 00\n49 8b 74 24 38\ne8 e1 db ff ff\n49 89 c6\n48 85 db\n74 31\n48 8b 3d 4a 2b 20 00\n49 8b 54 24 30\n48 89 de\ne8 b5 dc ff ff\n49 89 c7\nbf 10 53 40 00\ne8 f8 d9 ff ff\n4d 85 ff\n74 15\n49 8b 77 10\nbf 1c 51 40 00\neb 17\nbf 10 53 40 00\ne8 de d9 ff ff\n49 8b 74 24 30\n45 31 ff\nbf 2c 51 40 00\n31 c0\ne8 5a da ff ff\n49 8b 54 24 40\nbf 62 52 40 00\n31 c0\n4c 89 f6\ne8 46 da ff ff\n41 8b 74 24 48\n83 fe 01\n74 10\n85 f6\n75 18\nbf 4d 4d 40 00\ne8 9e d9 ff ff\neb 18\nbf 5e 4d 40 00\ne8 92 d9 ff ff\neb 0c\nbf da 41 40 00\n31 c0\ne8 14 da ff ff\n4c 89 ff\ne8 ac d9 ff ff\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 09 da ff ff\n'
p495
S'.text:00000000004036b0\n.text:00000000004036b2\n.text:00000000004036b4\n.text:00000000004036b6\n.text:00000000004036b7\n.text:00000000004036b8\n.text:00000000004036bb\n.text:00000000004036be\n.text:00000000004036c5\n.text:00000000004036ca\n.text:00000000004036cf\n.text:00000000004036d2\n.text:00000000004036d5\n.text:00000000004036d7\n.text:00000000004036de\n.text:00000000004036e3\n.text:00000000004036e6\n.text:00000000004036eb\n.text:00000000004036ee\n.text:00000000004036f3\n.text:00000000004036f8\n.text:00000000004036fb\n.text:00000000004036fd\n.text:0000000000403701\n.text:0000000000403706\n.text:0000000000403708\n.text:000000000040370d\n.text:0000000000403712\n.text:0000000000403717\n.text:000000000040371a\n.text:000000000040371f\n.text:0000000000403721\n.text:0000000000403726\n.text:000000000040372b\n.text:0000000000403730\n.text:0000000000403732\n.text:0000000000403735\n.text:000000000040373a\n.text:000000000040373f\n.text:0000000000403742\n.text:0000000000403744\n.text:0000000000403746\n.text:0000000000403748\n.text:000000000040374d\n.text:0000000000403752\n.text:0000000000403754\n.text:0000000000403759\n.text:000000000040375e\n.text:0000000000403760\n.text:0000000000403765\n.text:0000000000403767\n.text:000000000040376c\n.text:000000000040376f\n.text:0000000000403774\n.text:0000000000403777\n.text:000000000040377b\n.text:000000000040377c\n.text:000000000040377e\n.text:0000000000403780\n.text:0000000000403782\n'
p496
tp497
sS'XMapWindow'
p498
(S'\n__stdcall XMapWindow()\n'
p499
V\u000avoid XMapWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XMapWindow_00606150)();\u000a  return;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x00606150]\n'
p501
S'ff 25 2a 4e 20 00\n'
p502
S'.plt:0000000000401320\n'
p503
tp504
sS'do_NoExpose'
p505
(S'\n__stdcall do_NoExpose(XEvent * eventp)\n'
p506
V\u000avoid do_NoExpose(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char mdummy [10];\u000a  char local_1a [10];\u000a  \u000a  if (*(int *)(*eventp + 0x28) == 0x3e) {\u000a    __s = "CopyArea";\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x28) == 0x3f) {\u000a      __s = "CopyPlane";\u000a    }\u000a    else {\u000a      __s = local_1a;\u000a      sprintf(__s,"%d");\u000a    }\u000a  }\u000a  printf("    major %s, minor %d\u005cn",__s,(ulong)*(uint *)(*eventp + 0x2c));\u000a  return;\u000a}\u000a\u000a
p507
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOV EDX,dword ptr [RBX + 0x28]\nCMP EDX,0x3e\nJZ 0x00402a8f\nCMP EDX,0x3f\nJNZ 0x00402a97\nMOV R14D,0x4049a4\nJMP 0x00402aab\nMOV R14D,0x40499b\nJMP 0x00402aab\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV EDX,dword ptr [RBX + 0x2c]\nMOV EDI,0x4049de\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p508
S'41 56\n53\n48 83 ec 18\n48 89 fb\n8b 53 28\n83 fa 3e\n74 0d\n83 fa 3f\n75 10\n41 be a4 49 40 00\neb 1c\n41 be 9b 49 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 95 e8 ff ff\n8b 53 2c\nbf de 49 40 00\n31 c0\n4c 89 f6\ne8 c3 e6 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p509
S'.text:0000000000402a70\n.text:0000000000402a72\n.text:0000000000402a73\n.text:0000000000402a77\n.text:0000000000402a7a\n.text:0000000000402a7d\n.text:0000000000402a80\n.text:0000000000402a82\n.text:0000000000402a85\n.text:0000000000402a87\n.text:0000000000402a8d\n.text:0000000000402a8f\n.text:0000000000402a95\n.text:0000000000402a97\n.text:0000000000402a9c\n.text:0000000000402aa1\n.text:0000000000402aa3\n.text:0000000000402aa6\n.text:0000000000402aab\n.text:0000000000402aae\n.text:0000000000402ab3\n.text:0000000000402ab5\n.text:0000000000402ab8\n.text:0000000000402abd\n.text:0000000000402ac1\n.text:0000000000402ac2\n.text:0000000000402ac4\n'
p510
tp511
sS'do_SelectionNotify'
p512
(S'\n__stdcall do_SelectionNotify(XEvent * eventp)\n'
p513
V\u000avoid do_SelectionNotify(XEvent *eventp)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  \u000a  pcVar1 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x28));\u000a  pcVar2 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x30));\u000a  pcVar3 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x38));\u000a  pcVar4 = Unknown;\u000a  if (pcVar1 != (char *)0x0) {\u000a    pcVar4 = pcVar1;\u000a  }\u000a  pcVar5 = Unknown;\u000a  if (pcVar2 != (char *)0x0) {\u000a    pcVar5 = pcVar2;\u000a  }\u000a  printf("    selection 0x%lx (%s), target 0x%lx (%s),\u005cn",*(undefined8 *)(*eventp + 0x28),pcVar4,\u000a         *(undefined8 *)(*eventp + 0x30),pcVar5);\u000a  pcVar4 = Unknown;\u000a  if (pcVar3 != (char *)0x0) {\u000a    pcVar4 = pcVar3;\u000a  }\u000a  printf("    property 0x%lx (%s), time %lu\u005cn",*(undefined8 *)(*eventp + 0x38),pcVar4,\u000a         *(undefined8 *)(*eventp + 0x40));\u000a  XFree(pcVar1);\u000a  XFree(pcVar2);\u000a  XFree(pcVar3);\u000a  return;\u000a}\u000a\u000a
p514
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x28]\nCALL 0x004012b0\nMOV R14,RAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x30]\nCALL 0x004012b0\nMOV R15,RAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x38]\nCALL 0x004012b0\nMOV R12,RAX\nTEST R14,R14\nMOV R8,qword ptr [0x006061b8]\nMOV RDX,R8\nCMOVNZ RDX,R14\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RCX,qword ptr [RBX + 0x30]\nTEST R15,R15\nCMOVNZ R8,R15\nMOV EDI,0x404e21\nXOR EAX,EAX\nCALL 0x00401180\nTEST R12,R12\nMOV RDX,qword ptr [0x006061b8]\nCMOVNZ RDX,R12\nMOV RSI,qword ptr [RBX + 0x38]\nMOV RCX,qword ptr [RBX + 0x40]\nMOV EDI,0x404e4f\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDI,R14\nCALL 0x00401190\nMOV RDI,R15\nCALL 0x00401190\nMOV RDI,R12\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401190\n'
p515
S'41 57\n41 56\n41 54\n53\n50\n48 89 fb\n48 8b 3d 26 32 20 00\n48 8b 73 28\ne8 a5 e2 ff ff\n49 89 c6\n48 8b 3d 13 32 20 00\n48 8b 73 30\ne8 92 e2 ff ff\n49 89 c7\n48 8b 3d 00 32 20 00\n48 8b 73 38\ne8 7f e2 ff ff\n49 89 c4\n4d 85 f6\n4c 8b 05 7a 31 20 00\n4c 89 c2\n49 0f 45 d6\n48 8b 73 28\n48 8b 4b 30\n4d 85 ff\n4d 0f 45 c7\nbf 21 4e 40 00\n31 c0\ne8 20 e1 ff ff\n4d 85 e4\n48 8b 15 4e 31 20 00\n49 0f 45 d4\n48 8b 73 38\n48 8b 4b 40\nbf 4f 4e 40 00\n31 c0\ne8 fe e0 ff ff\n4c 89 f7\ne8 06 e1 ff ff\n4c 89 ff\ne8 fe e0 ff ff\n4c 89 e7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 eb e0 ff ff\n'
p516
S'.text:0000000000402ff0\n.text:0000000000402ff2\n.text:0000000000402ff4\n.text:0000000000402ff6\n.text:0000000000402ff7\n.text:0000000000402ff8\n.text:0000000000402ffb\n.text:0000000000403002\n.text:0000000000403006\n.text:000000000040300b\n.text:000000000040300e\n.text:0000000000403015\n.text:0000000000403019\n.text:000000000040301e\n.text:0000000000403021\n.text:0000000000403028\n.text:000000000040302c\n.text:0000000000403031\n.text:0000000000403034\n.text:0000000000403037\n.text:000000000040303e\n.text:0000000000403041\n.text:0000000000403045\n.text:0000000000403049\n.text:000000000040304d\n.text:0000000000403050\n.text:0000000000403054\n.text:0000000000403059\n.text:000000000040305b\n.text:0000000000403060\n.text:0000000000403063\n.text:000000000040306a\n.text:000000000040306e\n.text:0000000000403072\n.text:0000000000403076\n.text:000000000040307b\n.text:000000000040307d\n.text:0000000000403082\n.text:0000000000403085\n.text:000000000040308a\n.text:000000000040308d\n.text:0000000000403092\n.text:0000000000403095\n.text:0000000000403099\n.text:000000000040309a\n.text:000000000040309c\n.text:000000000040309e\n.text:00000000004030a0\n'
p517
tp518
sS'XGetWindowAttributes'
p519
(S'\n__stdcall XGetWindowAttributes()\n'
p520
V\u000avoid XGetWindowAttributes(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetWindowAttributes_00606148)();\u000a  return;\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x00606148]\n'
p522
S'ff 25 32 4e 20 00\n'
p523
S'.plt:0000000000401310\n'
p524
tp525
sS'XSelectInput'
p526
(S'\n__stdcall XSelectInput()\n'
p527
V\u000avoid XSelectInput(void)\u000a\u000a{\u000a  (*(code *)PTR_XSelectInput_00606128)();\u000a  return;\u000a}\u000a\u000a
p528
S'JMP qword ptr [0x00606128]\n'
p529
S'ff 25 52 4e 20 00\n'
p530
S'.plt:00000000004012d0\n'
p531
tp532
sS'do_PropertyNotify'
p533
(S'\n__stdcall do_PropertyNotify(XEvent * eventp)\n'
p534
V\u000avoid do_PropertyNotify(XEvent *eventp)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  char *__s;\u000a  char sdummy [10];\u000a  char local_22 [10];\u000a  \u000a  pcVar1 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x28));\u000a  if (*(int *)(*eventp + 0x38) == 0) {\u000a    __s = "PropertyNewValue";\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x38) == 1) {\u000a      __s = "PropertyDelete";\u000a    }\u000a    else {\u000a      __s = local_22;\u000a      sprintf(__s,"%d");\u000a    }\u000a  }\u000a  pcVar2 = Unknown;\u000a  if (pcVar1 != (char *)0x0) {\u000a    pcVar2 = pcVar1;\u000a  }\u000a  printf("    atom 0x%lx (%s), time %lu, state %s\u005cn",*(undefined8 *)(*eventp + 0x28),pcVar2,\u000a         *(undefined8 *)(*eventp + 0x30),__s);\u000a  XFree(pcVar1);\u000a  return;\u000a}\u000a\u000a
p535
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x28]\nCALL 0x004012b0\nMOV R14,RAX\nMOV EDX,dword ptr [RBX + 0x38]\nTEST EDX,EDX\nJZ 0x00402e83\nCMP EDX,0x1\nJNZ 0x00402e8b\nMOV R15D,0x404d56\nJMP 0x00402e9f\nMOV R15D,0x404d45\nJMP 0x00402e9f\nLEA R15,[RSP + 0x6]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00401340\nTEST R14,R14\nMOV RDX,qword ptr [0x006061b8]\nCMOVNZ RDX,R14\nMOV RSI,qword ptr [RBX + 0x28]\nMOV RCX,qword ptr [RBX + 0x30]\nMOV EDI,0x404d65\nXOR EAX,EAX\nMOV R8,R15\nCALL 0x00401180\nMOV RDI,R14\nCALL 0x00401190\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p536
S'41 57\n41 56\n53\n48 83 ec 10\n48 89 fb\n48 8b 3d c5 33 20 00\n48 8b 73 28\ne8 44 e4 ff ff\n49 89 c6\n8b 53 38\n85 d2\n74 0d\n83 fa 01\n75 10\n41 bf 56 4d 40 00\neb 1c\n41 bf 45 4d 40 00\neb 14\n4c 8d 7c 24 06\nbe ae 49 40 00\n31 c0\n4c 89 ff\ne8 a1 e4 ff ff\n4d 85 f6\n48 8b 15 0f 33 20 00\n49 0f 45 d6\n48 8b 73 28\n48 8b 4b 30\nbf 65 4d 40 00\n31 c0\n4d 89 f8\ne8 bc e2 ff ff\n4c 89 f7\ne8 c4 e2 ff ff\n48 83 c4 10\n5b\n41 5e\n41 5f\nc3\n'
p537
S'.text:0000000000402e50\n.text:0000000000402e52\n.text:0000000000402e54\n.text:0000000000402e55\n.text:0000000000402e59\n.text:0000000000402e5c\n.text:0000000000402e63\n.text:0000000000402e67\n.text:0000000000402e6c\n.text:0000000000402e6f\n.text:0000000000402e72\n.text:0000000000402e74\n.text:0000000000402e76\n.text:0000000000402e79\n.text:0000000000402e7b\n.text:0000000000402e81\n.text:0000000000402e83\n.text:0000000000402e89\n.text:0000000000402e8b\n.text:0000000000402e90\n.text:0000000000402e95\n.text:0000000000402e97\n.text:0000000000402e9a\n.text:0000000000402e9f\n.text:0000000000402ea2\n.text:0000000000402ea9\n.text:0000000000402ead\n.text:0000000000402eb1\n.text:0000000000402eb5\n.text:0000000000402eba\n.text:0000000000402ebc\n.text:0000000000402ebf\n.text:0000000000402ec4\n.text:0000000000402ec7\n.text:0000000000402ecc\n.text:0000000000402ed0\n.text:0000000000402ed1\n.text:0000000000402ed3\n.text:0000000000402ed5\n'
p538
tp539
sS'__libc_csu_fini'
p540
(S'\n__stdcall __libc_csu_fini()\n'
p541
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p542
S'RET\n'
p543
S'f3 c3\n'
p544
S'.text:0000000000403850\n'
p545
tp546
sS'do_GraphicsExpose'
p547
(S'\n__stdcall do_GraphicsExpose(XEvent * eventp)\n'
p548
V\u000avoid do_GraphicsExpose(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char mdummy [10];\u000a  char local_1a [10];\u000a  \u000a  if (*(int *)(*eventp + 0x3c) == 0x3e) {\u000a    __s = "CopyArea";\u000a  }\u000a  else {\u000a    if (*(int *)(*eventp + 0x3c) == 0x3f) {\u000a      __s = "CopyPlane";\u000a    }\u000a    else {\u000a      __s = local_1a;\u000a      sprintf(__s,"%d");\u000a    }\u000a  }\u000a  printf("    (%d,%d), width %d, height %d, count %d,\u005cn",(ulong)*(uint *)(*eventp + 0x28),\u000a         (ulong)*(uint *)(*eventp + 0x2c),(ulong)*(uint *)(*eventp + 0x30),\u000a         (ulong)*(uint *)(*eventp + 0x34),(ulong)*(uint *)(*eventp + 0x38));\u000a  printf("    major %s, minor %d\u005cn",__s,(ulong)*(uint *)(*eventp + 0x40));\u000a  return;\u000a}\u000a\u000a
p549
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOV EDX,dword ptr [RBX + 0x3c]\nCMP EDX,0x3e\nJZ 0x00402a0f\nCMP EDX,0x3f\nJNZ 0x00402a17\nMOV R14D,0x4049a4\nJMP 0x00402a2b\nMOV R14D,0x40499b\nJMP 0x00402a2b\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV ESI,dword ptr [RBX + 0x28]\nMOV EDX,dword ptr [RBX + 0x2c]\nMOV ECX,dword ptr [RBX + 0x30]\nMOV R8D,dword ptr [RBX + 0x34]\nMOV R9D,dword ptr [RBX + 0x38]\nMOV EDI,0x4049b1\nXOR EAX,EAX\nCALL 0x00401180\nMOV EDX,dword ptr [RBX + 0x40]\nMOV EDI,0x4049de\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p550
S'41 56\n53\n48 83 ec 18\n48 89 fb\n8b 53 3c\n83 fa 3e\n74 0d\n83 fa 3f\n75 10\n41 be a4 49 40 00\neb 1c\n41 be 9b 49 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 15 e9 ff ff\n8b 73 28\n8b 53 2c\n8b 4b 30\n44 8b 43 34\n44 8b 4b 38\nbf b1 49 40 00\n31 c0\ne8 38 e7 ff ff\n8b 53 40\nbf de 49 40 00\n31 c0\n4c 89 f6\ne8 26 e7 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p551
S'.text:00000000004029f0\n.text:00000000004029f2\n.text:00000000004029f3\n.text:00000000004029f7\n.text:00000000004029fa\n.text:00000000004029fd\n.text:0000000000402a00\n.text:0000000000402a02\n.text:0000000000402a05\n.text:0000000000402a07\n.text:0000000000402a0d\n.text:0000000000402a0f\n.text:0000000000402a15\n.text:0000000000402a17\n.text:0000000000402a1c\n.text:0000000000402a21\n.text:0000000000402a23\n.text:0000000000402a26\n.text:0000000000402a2b\n.text:0000000000402a2e\n.text:0000000000402a31\n.text:0000000000402a34\n.text:0000000000402a38\n.text:0000000000402a3c\n.text:0000000000402a41\n.text:0000000000402a43\n.text:0000000000402a48\n.text:0000000000402a4b\n.text:0000000000402a50\n.text:0000000000402a52\n.text:0000000000402a55\n.text:0000000000402a5a\n.text:0000000000402a5e\n.text:0000000000402a5f\n.text:0000000000402a61\n'
p552
tp553
sS'do_FocusIn'
p554
(S'\n__stdcall do_FocusIn(XEvent * eventp)\n'
p555
V\u000avoid do_FocusIn(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char *__s_00;\u000a  char ddetail [10];\u000a  char dmode [10];\u000a  char local_24 [10];\u000a  char local_1a [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x28) < 4) {\u000a    __s_00 = (&PTR_s_NotifyNormal_00403c80)[(long)*(int *)(*eventp + 0x28)];\u000a  }\u000a  else {\u000a    __s_00 = local_1a;\u000a    sprintf(__s_00,"%u");\u000a  }\u000a  if ((ulong)(long)*(int *)(*eventp + 0x2c) < 8) {\u000a    __s = (&PTR_s_NotifyAncestor_00403ca0)[(long)*(int *)(*eventp + 0x2c)];\u000a  }\u000a  else {\u000a    __s = local_24;\u000a    sprintf(__s,"%u");\u000a  }\u000a  printf("    mode %s, detail %s\u005cn",__s_00,__s);\u000a  return;\u000a}\u000a\u000a
p556
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOVSXD RDX,dword ptr [RBX + 0x28]\nCMP RDX,0x4\nJNC 0x004028fe\nMOV R14,qword ptr [0x403c80 + RDX*0x8]\nJMP 0x00402912\nLEA R14,[RSP + 0xe]\nMOV ESI,0x404870\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOVSXD RDX,dword ptr [RBX + 0x2c]\nCMP RDX,0x8\nJNC 0x00402926\nMOV RBX,qword ptr [0x403ca0 + RDX*0x8]\nJMP 0x0040293a\nLEA RBX,[RSP + 0x4]\nMOV ESI,0x404870\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00401340\nMOV EDI,0x404938\nXOR EAX,EAX\nMOV RSI,R14\nMOV RDX,RBX\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p557
S'41 56\n53\n48 83 ec 18\n48 89 fb\n48 63 53 28\n48 83 fa 04\n73 0a\n4c 8b 34 d5 80 3c 40 00\neb 14\n4c 8d 74 24 0e\nbe 70 48 40 00\n31 c0\n4c 89 f7\ne8 2e ea ff ff\n48 63 53 2c\n48 83 fa 08\n73 0a\n48 8b 1c d5 a0 3c 40 00\neb 14\n48 8d 5c 24 04\nbe 70 48 40 00\n31 c0\n48 89 df\ne8 06 ea ff ff\nbf 38 49 40 00\n31 c0\n4c 89 f6\n48 89 da\ne8 34 e8 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p558
S'.text:00000000004028e0\n.text:00000000004028e2\n.text:00000000004028e3\n.text:00000000004028e7\n.text:00000000004028ea\n.text:00000000004028ee\n.text:00000000004028f2\n.text:00000000004028f4\n.text:00000000004028fc\n.text:00000000004028fe\n.text:0000000000402903\n.text:0000000000402908\n.text:000000000040290a\n.text:000000000040290d\n.text:0000000000402912\n.text:0000000000402916\n.text:000000000040291a\n.text:000000000040291c\n.text:0000000000402924\n.text:0000000000402926\n.text:000000000040292b\n.text:0000000000402930\n.text:0000000000402932\n.text:0000000000402935\n.text:000000000040293a\n.text:000000000040293f\n.text:0000000000402941\n.text:0000000000402944\n.text:0000000000402947\n.text:000000000040294c\n.text:0000000000402950\n.text:0000000000402951\n.text:0000000000402953\n'
p559
tp560
sS'do_CreateNotify'
p561
(S'\n__stdcall do_CreateNotify(XEvent * eventp)\n'
p562
V\u000avoid do_CreateNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  printf("    parent 0x%lx, window 0x%lx, (%d,%d), width %d, height %d\u005cn",\u000a         *(undefined8 *)(*eventp + 0x20),*(undefined8 *)(*eventp + 0x28),\u000a         (ulong)*(uint *)(*eventp + 0x30),(ulong)*(uint *)(*eventp + 0x34),\u000a         (ulong)*(uint *)(*eventp + 0x38),*(undefined4 *)(*eventp + 0x3c));\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x44) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("border_width %d, override %s\u005cn",(ulong)*(uint *)(*eventp + 0x40),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p563
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV ECX,dword ptr [RBX + 0x30]\nMOV R8D,dword ptr [RBX + 0x34]\nMOV R9D,dword ptr [RBX + 0x38]\nMOV EAX,dword ptr [RBX + 0x3c]\nMOV dword ptr [RSP],EAX\nMOV EDI,0x404a4d\nXOR EAX,EAX\nCALL 0x00401180\nMOV ESI,dword ptr [RBX + 0x40]\nCMP dword ptr [RBX + 0x44],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RDX,qword ptr [RCX]\nMOV EDI,0x404a8b\nXOR EAX,EAX\nADD RSP,0x10\nPOP RBX\nJMP 0x00401180\n'
p564
S'53\n48 83 ec 10\n48 89 fb\n48 8b 73 20\n48 8b 53 28\n8b 4b 30\n44 8b 43 34\n44 8b 4b 38\n8b 43 3c\n89 04 24\nbf 4d 4a 40 00\n31 c0\ne8 33 e6 ff ff\n8b 73 40\n83 7b 44 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 11\nbf 8b 4a 40 00\n31 c0\n48 83 c4 10\n5b\ne9 0a e6 ff ff\n'
p565
S'.text:0000000000402b20\n.text:0000000000402b21\n.text:0000000000402b25\n.text:0000000000402b28\n.text:0000000000402b2c\n.text:0000000000402b30\n.text:0000000000402b33\n.text:0000000000402b37\n.text:0000000000402b3b\n.text:0000000000402b3e\n.text:0000000000402b41\n.text:0000000000402b46\n.text:0000000000402b48\n.text:0000000000402b4d\n.text:0000000000402b50\n.text:0000000000402b54\n.text:0000000000402b59\n.text:0000000000402b5e\n.text:0000000000402b62\n.text:0000000000402b65\n.text:0000000000402b6a\n.text:0000000000402b6c\n.text:0000000000402b70\n.text:0000000000402b71\n'
p566
tp567
sS'do_KeyRelease'
p568
(S'\n__stdcall do_KeyRelease(XEvent * eventp)\n'
p569
V\u000avoid do_KeyRelease(XEvent *eventp)\u000a\u000a{\u000a  bool bVar1;\u000a  byte bVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  char *pcVar6;\u000a  ulong uVar7;\u000a  char *pcVar8;\u000a  char **ppcVar9;\u000a  uint uVar10;\u000a  int iStack332;\u000a  long lStack328;\u000a  uint uStack316;\u000a  char acStack312 [264];\u000a  \u000a  if (buf == (char *)0x0) {\u000a    buf = (char *)malloc((long)bsize);\u000a  }\u000a  uStack316 = XLookupString(eventp,acStack312,0x100,&lStack328,0);\u000a  uVar3 = 0;\u000a  if ((*(int *)*eventp == 2) && (uVar3 = 0, xic != (XIC)0x0)) {\u000a    do {\u000a      uVar3 = XmbLookupString(xic,eventp,buf,(ulong)(bsize - 1),&lStack328,&iStack332);\u000a      buf[(long)(int)uVar3] = 0;\u000a      if (iStack332 != -1) break;\u000a      bsize = uVar3 + 1;\u000a      buf = (char *)realloc(buf,(long)bsize);\u000a    } while (iStack332 == -1);\u000a  }\u000a  if (lStack328 == 0) {\u000a    uVar10 = 0;\u000a    pcVar8 = "NoSymbol";\u000a    bVar1 = false;\u000a  }\u000a  else {\u000a    pcVar6 = (char *)XKeysymToString();\u000a    pcVar8 = "(no name)";\u000a    if (pcVar6 != (char *)0x0) {\u000a      pcVar8 = pcVar6;\u000a    }\u000a    bVar2 = XKeysymToKeycode(dpy,lStack328);\u000a    uVar10 = (uint)bVar2;\u000a    bVar1 = true;\u000a  }\u000a  printf("    root 0x%lx, subw 0x%lx, time %lu, (%d,%d), root:(%d,%d),\u005cn",\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),\u000a         *(undefined8 *)(*eventp + 0x38),(ulong)*(uint *)(*eventp + 0x40),\u000a         (ulong)*(uint *)(*eventp + 0x44),(ulong)*(uint *)(*eventp + 0x48),\u000a         (ulong)*(uint *)(*eventp + 0x4c));\u000a  ppcVar9 = &No;\u000a  if (*(int *)(*eventp + 0x58) != 0) {\u000a    ppcVar9 = &Yes;\u000a  }\u000a  printf("    state 0x%x, keycode %u (keysym 0x%lx, %s), same_screen %s,\u005cn",\u000a         (ulong)*(uint *)(*eventp + 0x50),(ulong)*(uint *)(*eventp + 0x54),lStack328,pcVar8,*ppcVar9\u000a        );\u000a  if ((bVar1) && (*(uint *)(*eventp + 0x54) != uVar10)) {\u000a    printf("    XKeysymToKeycode returns keycode: %u\u005cn",(ulong)uVar10);\u000a  }\u000a  uVar10 = uStack316;\u000a  uVar4 = 0;\u000a  if (-1 < (int)uStack316) {\u000a    uVar4 = uStack316;\u000a  }\u000a  uVar7 = 0x100;\u000a  if ((int)uVar4 < 0x101) {\u000a    uVar7 = (ulong)uVar4;\u000a  }\u000a  acStack312[uVar7] = 0;\u000a  printf("    XLookupString gives %d bytes: ",uVar7);\u000a  if ((int)uVar10 < 1) {\u000a    putchar(10);\u000a    iVar5 = *(int *)*eventp;\u000a  }\u000a  else {\u000a    dump(acStack312);\u000a    printf(" \u005c"%s\u005c"\u005cn",acStack312);\u000a    iVar5 = *(int *)*eventp;\u000a  }\u000a  if ((iVar5 == 2) && (xic != (XIC)0x0)) {\u000a    printf("    XmbLookupString gives %d bytes: ",(ulong)uVar3);\u000a    if ((int)uVar3 < 1) {\u000a      putchar(10);\u000a    }\u000a    else {\u000a      dump(buf);\u000a      printf(" \u005c"%s\u005c"\u005cn",buf);\u000a    }\u000a  }\u000a  iVar5 = XFilterEvent(eventp,*(undefined8 *)(*eventp + 0x20));\u000a  pcVar8 = "False";\u000a  if (iVar5 != 0) {\u000a    pcVar8 = "True";\u000a  }\u000a  printf("    XFilterEvent returns: %s\u005cn",pcVar8);\u000a  return;\u000a}\u000a\u000a
p570
S'JMP 0x00402460\n'
p571
S'e9 5b fd ff ff\n'
p572
S'.text:0000000000402700\n'
p573
tp574
sS'XOpenDisplay'
p575
(S'\n__stdcall XOpenDisplay()\n'
p576
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_006060a8)();\u000a  return;\u000a}\u000a\u000a
p577
S'JMP qword ptr [0x006060a8]\n'
p578
S'ff 25 d2 4e 20 00\n'
p579
S'.plt:00000000004011d0\n'
p580
tp581
sS'_start'
p582
(S'\n__stdcall _start()\n'
p583
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00605ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p584
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x403850\nMOV RCX,0x4037e0\nMOV RDI,0x4014b0\nCALL qword ptr [0x00605ff0]\nHLT\n'
p585
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 50 38 40 00\n48 c7 c1 e0 37 40 00\n48 c7 c7 b0 14 40 00\nff 15 16 4c 20 00\nf4\n'
p586
S'.text:00000000004013b0\n.text:00000000004013b2\n.text:00000000004013b5\n.text:00000000004013b6\n.text:00000000004013b9\n.text:00000000004013bd\n.text:00000000004013be\n.text:00000000004013bf\n.text:00000000004013c6\n.text:00000000004013cd\n.text:00000000004013d4\n.text:00000000004013da\n'
p587
tp588
sS'do_MapRequest'
p589
(S'\n__stdcall do_MapRequest(XEvent * eventp)\n'
p590
V\u000avoid do_MapRequest(XEvent *eventp)\u000a\u000a{\u000a  printf("    parent 0x%lx, window 0x%lx\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28));\u000a  return;\u000a}\u000a\u000a
p591
S'MOV RSI,qword ptr [RDI + 0x20]\nMOV RDX,qword ptr [RDI + 0x28]\nMOV EDI,0x404b26\nXOR EAX,EAX\nJMP 0x00401180\n'
p592
S'48 8b 77 20\n48 8b 57 28\nbf 26 4b 40 00\n31 c0\ne9 6c e5 ff ff\n'
p593
S'.text:0000000000402c00\n.text:0000000000402c04\n.text:0000000000402c08\n.text:0000000000402c0d\n.text:0000000000402c0f\n'
p594
tp595
sS'do_ReparentNotify'
p596
(S'\n__stdcall do_ReparentNotify(XEvent * eventp)\n'
p597
V\u000avoid do_ReparentNotify(XEvent *eventp)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  printf("    event 0x%lx, window 0x%lx, parent 0x%lx,\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30));\u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x40) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("    (%d,%d), override %s\u005cn",(ulong)*(uint *)(*eventp + 0x38),\u000a         (ulong)*(uint *)(*eventp + 0x3c),*ppcVar1);\u000a  return;\u000a}\u000a\u000a
p598
S'PUSH RBX\nMOV RBX,RDI\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV RCX,qword ptr [RBX + 0x30]\nMOV EDI,0x404b46\nXOR EAX,EAX\nCALL 0x00401180\nMOV ESI,dword ptr [RBX + 0x38]\nMOV EDX,dword ptr [RBX + 0x3c]\nCMP dword ptr [RBX + 0x40],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV EDI,0x404b74\nXOR EAX,EAX\nPOP RBX\nJMP 0x00401180\n'
p599
S'53\n48 89 fb\n48 8b 73 20\n48 8b 53 28\n48 8b 4b 30\nbf 46 4b 40 00\n31 c0\ne8 44 e5 ff ff\n8b 73 38\n8b 53 3c\n83 7b 40 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\nbf 74 4b 40 00\n31 c0\n5b\ne9 1c e5 ff ff\n'
p600
S'.text:0000000000402c20\n.text:0000000000402c21\n.text:0000000000402c24\n.text:0000000000402c28\n.text:0000000000402c2c\n.text:0000000000402c30\n.text:0000000000402c35\n.text:0000000000402c37\n.text:0000000000402c3c\n.text:0000000000402c3f\n.text:0000000000402c42\n.text:0000000000402c46\n.text:0000000000402c4b\n.text:0000000000402c50\n.text:0000000000402c54\n.text:0000000000402c57\n.text:0000000000402c5c\n.text:0000000000402c5e\n.text:0000000000402c5f\n'
p601
tp602
sS'printf'
p603
(S'\n__stdcall printf(char * __format)\n'
p604
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00606080)();\u000a  return iVar1;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x00606080]\n'
p606
S'ff 25 fa 4e 20 00\n'
p607
S'.plt:0000000000401180\n'
p608
tp609
sS'do_MappingNotify'
p610
(S'\n__stdcall do_MappingNotify(XEvent * eventp)\n'
p611
V\u000avoid do_MappingNotify(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char rdummy [10];\u000a  char local_1a [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x28) < 3) {\u000a    __s = (&PTR_s_MappingModifier_00403d30)[(long)*(int *)(*eventp + 0x28)];\u000a  }\u000a  else {\u000a    __s = local_1a;\u000a    sprintf(__s,"%d");\u000a  }\u000a  printf("    request %s, first_keycode %d, count %d\u005cn",__s,(ulong)*(uint *)(*eventp + 0x2c),\u000a         (ulong)*(uint *)(*eventp + 0x30));\u000a  XRefreshKeyboardMapping(eventp);\u000a  return;\u000a}\u000a\u000a
p612
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOVSXD RDX,dword ptr [RBX + 0x28]\nCMP RDX,0x3\nJNC 0x004031fe\nMOV R14,qword ptr [0x403d30 + RDX*0x8]\nJMP 0x00403212\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV EDX,dword ptr [RBX + 0x2c]\nMOV ECX,dword ptr [RBX + 0x30]\nMOV EDI,0x404f51\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00401180\nMOV RDI,RBX\nCALL 0x004012c0\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p613
S'41 56\n53\n48 83 ec 18\n48 89 fb\n48 63 53 28\n48 83 fa 03\n73 0a\n4c 8b 34 d5 30 3d 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 2e e1 ff ff\n8b 53 2c\n8b 4b 30\nbf 51 4f 40 00\n31 c0\n4c 89 f6\ne8 59 df ff ff\n48 89 df\ne8 91 e0 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p614
S'.text:00000000004031e0\n.text:00000000004031e2\n.text:00000000004031e3\n.text:00000000004031e7\n.text:00000000004031ea\n.text:00000000004031ee\n.text:00000000004031f2\n.text:00000000004031f4\n.text:00000000004031fc\n.text:00000000004031fe\n.text:0000000000403203\n.text:0000000000403208\n.text:000000000040320a\n.text:000000000040320d\n.text:0000000000403212\n.text:0000000000403215\n.text:0000000000403218\n.text:000000000040321d\n.text:000000000040321f\n.text:0000000000403222\n.text:0000000000403227\n.text:000000000040322a\n.text:000000000040322f\n.text:0000000000403233\n.text:0000000000403234\n.text:0000000000403236\n'
p615
tp616
sS'do_GravityNotify'
p617
(S'\n__stdcall do_GravityNotify(XEvent * eventp)\n'
p618
V\u000avoid do_GravityNotify(XEvent *eventp)\u000a\u000a{\u000a  printf("    event 0x%lx, window 0x%lx, (%d,%d)\u005cn",*(undefined8 *)(*eventp + 0x20),\u000a         *(undefined8 *)(*eventp + 0x28),(ulong)*(uint *)(*eventp + 0x30),\u000a         (ulong)*(uint *)(*eventp + 0x34));\u000a  return;\u000a}\u000a\u000a
p619
S'MOV RSI,qword ptr [RDI + 0x20]\nMOV RDX,qword ptr [RDI + 0x28]\nMOV ECX,dword ptr [RDI + 0x30]\nMOV R8D,dword ptr [RDI + 0x34]\nMOV EDI,0x404c98\nXOR EAX,EAX\nJMP 0x00401180\n'
p620
S'48 8b 77 20\n48 8b 57 28\n8b 4f 30\n44 8b 47 34\nbf 98 4c 40 00\n31 c0\ne9 15 e4 ff ff\n'
p621
S'.text:0000000000402d50\n.text:0000000000402d54\n.text:0000000000402d58\n.text:0000000000402d5b\n.text:0000000000402d5f\n.text:0000000000402d64\n.text:0000000000402d66\n'
p622
tp623
sS'dump'
p624
(S'\n__stdcall dump(char * str)\n'
p625
V\u000avoid dump(char *str)\u000a\u000a{\u000a  byte *pbVar1;\u000a  int in_ESI;\u000a  ulong uVar2;\u000a  \u000a  putchar(0x28);\u000a  uVar2 = (ulong)(byte)*str;\u000a  if (1 < in_ESI) {\u000a    pbVar1 = (byte *)(str + 1);\u000a    do {\u000a      in_ESI = in_ESI + -1;\u000a      printf("%02x ",uVar2);\u000a      uVar2 = (ulong)*pbVar1;\u000a      pbVar1 = pbVar1 + 1;\u000a    } while (1 < in_ESI);\u000a  }\u000a  printf("%02x)",uVar2);\u000a  return;\u000a}\u000a\u000a
p626
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,0x28\nCALL 0x004010b0\nMOVZX ESI,byte ptr [RBX]\nCMP EBP,0x2\nJL 0x00403379\nINC RBX\nNOP dword ptr [RAX]\nDEC EBP\nMOV EDI,0x4047d5\nXOR EAX,EAX\nCALL 0x00401180\nMOVZX ESI,byte ptr [RBX]\nINC RBX\nCMP EBP,0x1\nJG 0x00403360\nMOV EDI,0x4047db\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401180\n'
p627
S'55\n53\n50\n89 f5\n48 89 fb\nbf 28 00 00 00\ne8 5e dd ff ff\n0f b6 33\n83 fd 02\n7c 1f\n48 ff c3\n0f 1f 00\nff cd\nbf d5 47 40 00\n31 c0\ne8 12 de ff ff\n0f b6 33\n48 ff c3\n83 fd 01\n7f e7\nbf db 47 40 00\n31 c0\n48 83 c4 08\n5b\n5d\ne9 f5 dd ff ff\n'
p628
S'.text:0000000000403340\n.text:0000000000403341\n.text:0000000000403342\n.text:0000000000403343\n.text:0000000000403345\n.text:0000000000403348\n.text:000000000040334d\n.text:0000000000403352\n.text:0000000000403355\n.text:0000000000403358\n.text:000000000040335a\n.text:000000000040335d\n.text:0000000000403360\n.text:0000000000403362\n.text:0000000000403367\n.text:0000000000403369\n.text:000000000040336e\n.text:0000000000403371\n.text:0000000000403374\n.text:0000000000403377\n.text:0000000000403379\n.text:000000000040337e\n.text:0000000000403380\n.text:0000000000403384\n.text:0000000000403385\n.text:0000000000403386\n'
p629
tp630
sS'prologue'
p631
(S'\n__stdcall prologue(XEvent * eventp, char * event_name)\n'
p632
V\u000avoid prologue(XEvent *eventp,char *event_name)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  ppcVar1 = &No;\u000a  if (*(int *)(*eventp + 0x10) != 0) {\u000a    ppcVar1 = &Yes;\u000a  }\u000a  printf("\u005cn%s event, serial %ld, synthetic %s, window 0x%lx,\u005cn",event_name,\u000a         *(undefined8 *)(*eventp + 8),*ppcVar1,*(undefined8 *)(*eventp + 0x20));\u000a  return;\u000a}\u000a\u000a
p633
S'CMP dword ptr [RDI + 0x10],0x0\nMOV EAX,0x6061a8\nMOV ECX,0x6061b0\nCMOVNZ RCX,RAX\nMOV RCX,qword ptr [RCX]\nMOV RDX,qword ptr [RDI + 0x8]\nMOV R8,qword ptr [RDI + 0x20]\nMOV EDI,0x40466c\nXOR EAX,EAX\nJMP 0x00401180\n'
p634
S'83 7f 10 00\nb8 a8 61 60 00\nb9 b0 61 60 00\n48 0f 45 c8\n48 8b 09\n48 8b 57 08\n4c 8b 47 20\nbf 6c 46 40 00\n31 c0\ne9 27 ed ff ff\n'
p635
S'.text:0000000000402430\n.text:0000000000402434\n.text:0000000000402439\n.text:000000000040243e\n.text:0000000000402442\n.text:0000000000402445\n.text:0000000000402449\n.text:000000000040244d\n.text:0000000000402452\n.text:0000000000402454\n'
p636
tp637
sS'register_tm_clones'
p638
(S'\n__stdcall register_tm_clones()\n'
p639
V\u000a/* WARNING: Removing unreachable block (ram,0x00401443) */\u000a/* WARNING: Removing unreachable block (ram,0x0040144d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p640
S'MOV ESI,0x6061c8\nPUSH RBP\nSUB RSI,0x6061c8\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401458\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401458\nPOP RBP\nMOV EDI,0x6061c8\nJMP RAX\nPOP RBP\nRET\n'
p641
S'be c8 61 60 00\n55\n48 81 ee c8 61 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf c8 61 60 00\nff e0\n5d\nc3\n'
p642
S'.text:0000000000401420\n.text:0000000000401425\n.text:0000000000401426\n.text:000000000040142d\n.text:0000000000401431\n.text:0000000000401434\n.text:0000000000401437\n.text:000000000040143b\n.text:000000000040143e\n.text:0000000000401441\n.text:0000000000401443\n.text:0000000000401448\n.text:000000000040144b\n.text:000000000040144d\n.text:000000000040144e\n.text:0000000000401453\n.text:0000000000401458\n.text:0000000000401459\n'
p643
tp644
sS'XLookupString'
p645
(S'\n__stdcall XLookupString()\n'
p646
V\u000avoid XLookupString(void)\u000a\u000a{\u000a  (*(code *)PTR_XLookupString_00606030)();\u000a  return;\u000a}\u000a\u000a
p647
S'JMP qword ptr [0x00606030]\n'
p648
S'ff 25 4a 4f 20 00\n'
p649
S'.plt:00000000004010e0\n'
p650
tp651
sS'do_SelectionRequest'
p652
(S'\n__stdcall do_SelectionRequest(XEvent * eventp)\n'
p653
V\u000avoid do_SelectionRequest(XEvent *eventp)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  \u000a  pcVar1 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x30));\u000a  pcVar2 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x38));\u000a  pcVar3 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x40));\u000a  pcVar4 = Unknown;\u000a  if (pcVar1 != (char *)0x0) {\u000a    pcVar4 = pcVar1;\u000a  }\u000a  printf("    owner 0x%lx, requestor 0x%lx, selection 0x%lx (%s),\u005cn",*(undefined8 *)(*eventp + 0x20)\u000a         ,*(undefined8 *)(*eventp + 0x28),*(undefined8 *)(*eventp + 0x30),pcVar4);\u000a  pcVar4 = Unknown;\u000a  if (pcVar2 != (char *)0x0) {\u000a    pcVar4 = pcVar2;\u000a  }\u000a  pcVar5 = Unknown;\u000a  if (pcVar3 != (char *)0x0) {\u000a    pcVar5 = pcVar3;\u000a  }\u000a  printf("    target 0x%lx (%s), property 0x%lx (%s), time %lu\u005cn",*(undefined8 *)(*eventp + 0x38),\u000a         pcVar4,*(undefined8 *)(*eventp + 0x40),pcVar5,*(undefined8 *)(*eventp + 0x48));\u000a  XFree(pcVar1);\u000a  XFree(pcVar2);\u000a  XFree(pcVar3);\u000a  return;\u000a}\u000a\u000a
p654
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x30]\nCALL 0x004012b0\nMOV R14,RAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x38]\nCALL 0x004012b0\nMOV R15,RAX\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x40]\nCALL 0x004012b0\nMOV R12,RAX\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV RCX,qword ptr [RBX + 0x30]\nTEST R14,R14\nMOV R8,qword ptr [0x006061b8]\nCMOVNZ R8,R14\nMOV EDI,0x404db2\nXOR EAX,EAX\nCALL 0x00401180\nTEST R15,R15\nMOV R8,qword ptr [0x006061b8]\nMOV RDX,R8\nCMOVNZ RDX,R15\nMOV RSI,qword ptr [RBX + 0x38]\nMOV RCX,qword ptr [RBX + 0x40]\nTEST R12,R12\nCMOVNZ R8,R12\nMOV R9,qword ptr [RBX + 0x48]\nMOV EDI,0x404deb\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDI,R14\nCALL 0x00401190\nMOV RDI,R15\nCALL 0x00401190\nMOV RDI,R12\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401190\n'
p655
S'41 57\n41 56\n41 54\n53\n50\n48 89 fb\n48 8b 3d e6 32 20 00\n48 8b 73 30\ne8 65 e3 ff ff\n49 89 c6\n48 8b 3d d3 32 20 00\n48 8b 73 38\ne8 52 e3 ff ff\n49 89 c7\n48 8b 3d c0 32 20 00\n48 8b 73 40\ne8 3f e3 ff ff\n49 89 c4\n48 8b 73 20\n48 8b 53 28\n48 8b 4b 30\n4d 85 f6\n4c 8b 05 2e 32 20 00\n4d 0f 45 c6\nbf b2 4d 40 00\n31 c0\ne8 e6 e1 ff ff\n4d 85 ff\n4c 8b 05 14 32 20 00\n4c 89 c2\n49 0f 45 d7\n48 8b 73 38\n48 8b 4b 40\n4d 85 e4\n4d 0f 45 c4\n4c 8b 4b 48\nbf eb 4d 40 00\n31 c0\ne8 b6 e1 ff ff\n4c 89 f7\ne8 be e1 ff ff\n4c 89 ff\ne8 b6 e1 ff ff\n4c 89 e7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 a3 e1 ff ff\n'
p656
S'.text:0000000000402f30\n.text:0000000000402f32\n.text:0000000000402f34\n.text:0000000000402f36\n.text:0000000000402f37\n.text:0000000000402f38\n.text:0000000000402f3b\n.text:0000000000402f42\n.text:0000000000402f46\n.text:0000000000402f4b\n.text:0000000000402f4e\n.text:0000000000402f55\n.text:0000000000402f59\n.text:0000000000402f5e\n.text:0000000000402f61\n.text:0000000000402f68\n.text:0000000000402f6c\n.text:0000000000402f71\n.text:0000000000402f74\n.text:0000000000402f78\n.text:0000000000402f7c\n.text:0000000000402f80\n.text:0000000000402f83\n.text:0000000000402f8a\n.text:0000000000402f8e\n.text:0000000000402f93\n.text:0000000000402f95\n.text:0000000000402f9a\n.text:0000000000402f9d\n.text:0000000000402fa4\n.text:0000000000402fa7\n.text:0000000000402fab\n.text:0000000000402faf\n.text:0000000000402fb3\n.text:0000000000402fb6\n.text:0000000000402fba\n.text:0000000000402fbe\n.text:0000000000402fc3\n.text:0000000000402fc5\n.text:0000000000402fca\n.text:0000000000402fcd\n.text:0000000000402fd2\n.text:0000000000402fd5\n.text:0000000000402fda\n.text:0000000000402fdd\n.text:0000000000402fe1\n.text:0000000000402fe2\n.text:0000000000402fe4\n.text:0000000000402fe6\n.text:0000000000402fe8\n'
p657
tp658
sS'fwrite'
p659
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p660
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00606170)();\u000a  return sVar1;\u000a}\u000a\u000a
p661
S'JMP qword ptr [0x00606170]\n'
p662
S'ff 25 0a 4e 20 00\n'
p663
S'.plt:0000000000401360\n'
p664
tp665
sS'XRRGetOutputInfo'
p666
(S'\n__stdcall XRRGetOutputInfo()\n'
p667
V\u000avoid XRRGetOutputInfo(void)\u000a\u000a{\u000a  (*(code *)PTR_XRRGetOutputInfo_00606190)();\u000a  return;\u000a}\u000a\u000a
p668
S'JMP qword ptr [0x00606190]\n'
p669
S'ff 25 ea 4d 20 00\n'
p670
S'.plt:00000000004013a0\n'
p671
tp672
sS'do_ClientMessage'
p673
(S'\n__stdcall do_ClientMessage(XEvent * eventp)\n'
p674
V\u000avoid do_ClientMessage(XEvent *eventp)\u000a\u000a{\u000a  char *pcVar1;\u000a  undefined8 uVar2;\u000a  char *pcVar3;\u000a  \u000a  pcVar1 = (char *)XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x28));\u000a  if (*(Atom *)(*eventp + 0x28) == wm_protocols) {\u000a    uVar2 = XGetAtomName(dpy,*(undefined8 *)(*eventp + 0x38));\u000a    pcVar3 = Unknown;\u000a    if (pcVar1 != (char *)0x0) {\u000a      pcVar3 = pcVar1;\u000a    }\u000a    printf("    message_type 0x%lx (%s), format %d, message 0x%lx (%s)\u005cn",\u000a           *(undefined8 *)(*eventp + 0x28),pcVar3,(ulong)*(uint *)(*eventp + 0x30),\u000a           *(undefined8 *)(*eventp + 0x38),uVar2);\u000a    XFree(uVar2);\u000a  }\u000a  else {\u000a    pcVar3 = Unknown;\u000a    if (pcVar1 != (char *)0x0) {\u000a      pcVar3 = pcVar1;\u000a    }\u000a    printf("    message_type 0x%lx (%s), format %d\u005cn",*(Atom *)(*eventp + 0x28),pcVar3,\u000a           (ulong)*(uint *)(*eventp + 0x30));\u000a  }\u000a  XFree();\u000a  if (((*(int *)(*eventp + 0x30) == 0x20) && (*(Atom *)(*eventp + 0x28) == wm_protocols)) &&\u000a     (*(Atom *)(*eventp + 0x38) == wm_delete_window)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p675
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x28]\nCALL 0x004012b0\nMOV R14,RAX\nMOV RSI,qword ptr [RBX + 0x28]\nCMP RSI,qword ptr [0x00606230]\nJNZ 0x0040318d\nMOV RDI,qword ptr [0x00606228]\nMOV RSI,qword ptr [RBX + 0x38]\nCALL 0x004012b0\nMOV R15,RAX\nMOV RSI,qword ptr [RBX + 0x28]\nTEST R14,R14\nMOV RDX,qword ptr [0x006061b8]\nCMOVNZ RDX,R14\nMOV ECX,dword ptr [RBX + 0x30]\nMOV R8,qword ptr [RBX + 0x38]\nMOV EDI,0x404ebe\nXOR EAX,EAX\nMOV R9,R15\nCALL 0x00401180\nMOV RDI,R15\nCALL 0x00401190\nJMP 0x004031aa\nTEST R14,R14\nMOV RDX,qword ptr [0x006061b8]\nCMOVNZ RDX,R14\nMOV ECX,dword ptr [RBX + 0x30]\nMOV EDI,0x404efa\nXOR EAX,EAX\nCALL 0x00401180\nMOV RDI,R14\nCALL 0x00401190\nCMP dword ptr [RBX + 0x30],0x20\nJNZ 0x004031d2\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [0x00606230]\nJNZ 0x004031d2\nMOV RAX,qword ptr [RBX + 0x38]\nCMP RAX,qword ptr [0x00606240]\nJZ 0x004031d8\nPOP RBX\nPOP R14\nPOP R15\nRET\nXOR EDI,EDI\nCALL 0x00401350\n'
p676
S'41 57\n41 56\n53\n48 89 fb\n48 8b 3d f9 30 20 00\n48 8b 73 28\ne8 78 e1 ff ff\n49 89 c6\n48 8b 73 28\n48 3b 35 ea 30 20 00\n75 45\n48 8b 3d d9 30 20 00\n48 8b 73 38\ne8 58 e1 ff ff\n49 89 c7\n48 8b 73 28\n4d 85 f6\n48 8b 15 4f 30 20 00\n49 0f 45 d6\n8b 4b 30\n4c 8b 43 38\nbf be 4e 40 00\n31 c0\n4d 89 f9\ne8 fd df ff ff\n4c 89 ff\ne8 05 e0 ff ff\neb 1d\n4d 85 f6\n48 8b 15 21 30 20 00\n49 0f 45 d6\n8b 4b 30\nbf fa 4e 40 00\n31 c0\ne8 d6 df ff ff\n4c 89 f7\ne8 de df ff ff\n83 7b 30 20\n75 1a\n48 8b 43 28\n48 3b 05 6d 30 20 00\n75 0d\n48 8b 43 38\n48 3b 05 70 30 20 00\n74 06\n5b\n41 5e\n41 5f\nc3\n31 ff\ne8 71 e1 ff ff\n'
p677
S'.text:0000000000403120\n.text:0000000000403122\n.text:0000000000403124\n.text:0000000000403125\n.text:0000000000403128\n.text:000000000040312f\n.text:0000000000403133\n.text:0000000000403138\n.text:000000000040313b\n.text:000000000040313f\n.text:0000000000403146\n.text:0000000000403148\n.text:000000000040314f\n.text:0000000000403153\n.text:0000000000403158\n.text:000000000040315b\n.text:000000000040315f\n.text:0000000000403162\n.text:0000000000403169\n.text:000000000040316d\n.text:0000000000403170\n.text:0000000000403174\n.text:0000000000403179\n.text:000000000040317b\n.text:000000000040317e\n.text:0000000000403183\n.text:0000000000403186\n.text:000000000040318b\n.text:000000000040318d\n.text:0000000000403190\n.text:0000000000403197\n.text:000000000040319b\n.text:000000000040319e\n.text:00000000004031a3\n.text:00000000004031a5\n.text:00000000004031aa\n.text:00000000004031ad\n.text:00000000004031b2\n.text:00000000004031b6\n.text:00000000004031b8\n.text:00000000004031bc\n.text:00000000004031c3\n.text:00000000004031c5\n.text:00000000004031c9\n.text:00000000004031d0\n.text:00000000004031d2\n.text:00000000004031d3\n.text:00000000004031d5\n.text:00000000004031d7\n.text:00000000004031d8\n.text:00000000004031da\n'
p678
tp679
sS'do_ConfigureRequest'
p680
(S'\n__stdcall do_ConfigureRequest(XEvent * eventp)\n'
p681
V\u000avoid do_ConfigureRequest(XEvent *eventp)\u000a\u000a{\u000a  char *__s;\u000a  char ddummy [10];\u000a  char local_1a [10];\u000a  \u000a  if ((ulong)(long)*(int *)(*eventp + 0x50) < 5) {\u000a    __s = (&PTR_s_Above_00403d00)[(long)*(int *)(*eventp + 0x50)];\u000a  }\u000a  else {\u000a    __s = local_1a;\u000a    sprintf(__s,"%d");\u000a  }\u000a  printf("    parent 0x%lx, window 0x%lx, (%d,%d), width %d, height %d,\u005cn",\u000a         *(undefined8 *)(*eventp + 0x20),*(undefined8 *)(*eventp + 0x28),\u000a         (ulong)*(uint *)(*eventp + 0x30),(ulong)*(uint *)(*eventp + 0x34),\u000a         (ulong)*(uint *)(*eventp + 0x38),*(undefined4 *)(*eventp + 0x3c));\u000a  printf("    border_width %d, above 0x%lx, detail %s, value 0x%lx\u005cn",\u000a         (ulong)*(uint *)(*eventp + 0x40),*(undefined8 *)(*eventp + 0x48),__s,\u000a         *(undefined8 *)(*eventp + 0x58));\u000a  return;\u000a}\u000a\u000a
p682
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOVSXD RDX,dword ptr [RBX + 0x50]\nCMP RDX,0x5\nJNC 0x00402cee\nMOV R14,qword ptr [0x403d00 + RDX*0x8]\nJMP 0x00402d02\nLEA R14,[RSP + 0xe]\nMOV ESI,0x4049ae\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401340\nMOV RSI,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [RBX + 0x28]\nMOV ECX,dword ptr [RBX + 0x30]\nMOV R8D,dword ptr [RBX + 0x34]\nMOV R9D,dword ptr [RBX + 0x38]\nMOV EAX,dword ptr [RBX + 0x3c]\nMOV dword ptr [RSP],EAX\nMOV EDI,0x404c1f\nXOR EAX,EAX\nCALL 0x00401180\nMOV ESI,dword ptr [RBX + 0x40]\nMOV RDX,qword ptr [RBX + 0x48]\nMOV R8,qword ptr [RBX + 0x58]\nMOV EDI,0x404c5e\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00401180\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p683
S'41 56\n53\n48 83 ec 18\n48 89 fb\n48 63 53 50\n48 83 fa 05\n73 0a\n4c 8b 34 d5 00 3d 40 00\neb 14\n4c 8d 74 24 0e\nbe ae 49 40 00\n31 c0\n4c 89 f7\ne8 3e e6 ff ff\n48 8b 73 20\n48 8b 53 28\n8b 4b 30\n44 8b 43 34\n44 8b 4b 38\n8b 43 3c\n89 04 24\nbf 1f 4c 40 00\n31 c0\ne8 59 e4 ff ff\n8b 73 40\n48 8b 53 48\n4c 8b 43 58\nbf 5e 4c 40 00\n31 c0\n4c 89 f1\ne8 3f e4 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p684
S'.text:0000000000402cd0\n.text:0000000000402cd2\n.text:0000000000402cd3\n.text:0000000000402cd7\n.text:0000000000402cda\n.text:0000000000402cde\n.text:0000000000402ce2\n.text:0000000000402ce4\n.text:0000000000402cec\n.text:0000000000402cee\n.text:0000000000402cf3\n.text:0000000000402cf8\n.text:0000000000402cfa\n.text:0000000000402cfd\n.text:0000000000402d02\n.text:0000000000402d06\n.text:0000000000402d0a\n.text:0000000000402d0d\n.text:0000000000402d11\n.text:0000000000402d15\n.text:0000000000402d18\n.text:0000000000402d1b\n.text:0000000000402d20\n.text:0000000000402d22\n.text:0000000000402d27\n.text:0000000000402d2a\n.text:0000000000402d2e\n.text:0000000000402d32\n.text:0000000000402d37\n.text:0000000000402d39\n.text:0000000000402d3c\n.text:0000000000402d41\n.text:0000000000402d45\n.text:0000000000402d46\n.text:0000000000402d48\n'
p685
tp686
sS'XKeysymToKeycode'
p687
(S'\n__stdcall XKeysymToKeycode()\n'
p688
V\u000avoid XKeysymToKeycode(void)\u000a\u000a{\u000a  (*(code *)PTR_XKeysymToKeycode_006060c8)();\u000a  return;\u000a}\u000a\u000a
p689
S'JMP qword ptr [0x006060c8]\n'
p690
S'ff 25 b2 4e 20 00\n'
p691
S'.plt:0000000000401210\n'
p692
tp693
sS'XCreateSimpleWindow'
p694
(S'\n__stdcall XCreateSimpleWindow()\n'
p695
V\u000avoid XCreateSimpleWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateSimpleWindow_00606140)();\u000a  return;\u000a}\u000a\u000a
p696
S'JMP qword ptr [0x00606140]\n'
p697
S'ff 25 3a 4e 20 00\n'
p698
S'.plt:0000000000401300\n'
p699
tp700
sS'XGetAtomName'
p701
(S'\n__stdcall XGetAtomName()\n'
p702
V\u000avoid XGetAtomName(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetAtomName_00606118)();\u000a  return;\u000a}\u000a\u000a
p703
S'JMP qword ptr [0x00606118]\n'
p704
S'ff 25 62 4e 20 00\n'
p705
S'.plt:00000000004012b0\n'
p706
tp707
sS'__do_global_dtors_aux'
p708
(S'\n__stdcall __do_global_dtors_aux()\n'
p709
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p710
S'CMP byte ptr [0x00606208],0x0\nJNZ 0x0040147a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x004013e0\nPOP RBP\nMOV byte ptr [0x00606208],0x1\nRET\n'
p711
S'80 3d a1 4d 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 8e 4d 20 00 01\nf3 c3\n'
p712
S'.text:0000000000401460\n.text:0000000000401467\n.text:0000000000401469\n.text:000000000040146a\n.text:000000000040146d\n.text:0000000000401472\n.text:0000000000401473\n.text:000000000040147a\n'
p713
tp714
sS'_fini'
p715
(S'\n__stdcall _fini()\n'
p716
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p717
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p718
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p719
S'.fini:0000000000403854\n.fini:0000000000403858\n.fini:000000000040385c\n'
p720
tp721
sS'XRefreshKeyboardMapping'
p722
(S'\n__stdcall XRefreshKeyboardMapping()\n'
p723
V\u000avoid XRefreshKeyboardMapping(void)\u000a\u000a{\u000a  (*(code *)PTR_XRefreshKeyboardMapping_00606120)();\u000a  return;\u000a}\u000a\u000a
p724
S'JMP qword ptr [0x00606120]\n'
p725
S'ff 25 5a 4e 20 00\n'
p726
S'.plt:00000000004012c0\n'
p727
tp728
sS'XParseGeometry'
p729
(S'\n__stdcall XParseGeometry()\n'
p730
V\u000avoid XParseGeometry(void)\u000a\u000a{\u000a  (*(code *)PTR_XParseGeometry_00606060)();\u000a  return;\u000a}\u000a\u000a
p731
S'JMP qword ptr [0x00606060]\n'
p732
S'ff 25 1a 4f 20 00\n'
p733
S'.plt:0000000000401140\n'
p734
tp735
s.