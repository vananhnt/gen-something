(dp0
S'XFreeDeviceList'
p1
(S'\n__stdcall XFreeDeviceList()\n'
p2
V\u000avoid XFreeDeviceList(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeDeviceList_00602060)();\u000a  return;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x00602060]\n'
p4
S'ff 25 8a 17 20 00\n'
p5
S'.plt:00000000004008d0\n'
p6
tp7
sS'__libc_csu_init'
p8
(S'\n__stdcall __libc_csu_init()\n'
p9
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x601de8]\nPUSH RBP\nLEA RBP,[0x601df0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400810\nTEST RBP,RBP\nJZ 0x00400d36\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00400d20\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p11
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 f6 10 20 00\n55\n48 8d 2d f6 10 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 ff fa ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p12
S'.text:0000000000400ce0\n.text:0000000000400ce2\n.text:0000000000400ce4\n.text:0000000000400ce7\n.text:0000000000400ce9\n.text:0000000000400ceb\n.text:0000000000400cf2\n.text:0000000000400cf3\n.text:0000000000400cfa\n.text:0000000000400cfb\n.text:0000000000400cfe\n.text:0000000000400d01\n.text:0000000000400d04\n.text:0000000000400d08\n.text:0000000000400d0c\n.text:0000000000400d11\n.text:0000000000400d14\n.text:0000000000400d16\n.text:0000000000400d18\n.text:0000000000400d20\n.text:0000000000400d23\n.text:0000000000400d26\n.text:0000000000400d29\n.text:0000000000400d2d\n.text:0000000000400d31\n.text:0000000000400d34\n.text:0000000000400d36\n.text:0000000000400d3a\n.text:0000000000400d3b\n.text:0000000000400d3c\n.text:0000000000400d3e\n.text:0000000000400d40\n.text:0000000000400d42\n.text:0000000000400d44\n'
p13
tp14
sS'__ctype_b_loc'
p15
(S'\n__stdcall __ctype_b_loc()\n'
p16
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00602080)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p17
S'JMP qword ptr [0x00602080]\n'
p18
S'ff 25 6a 17 20 00\n'
p19
S'.plt:0000000000400910\n'
p20
tp21
sS'_init'
p22
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p23
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00601ff8;\u000a  if (PTR___gmon_start___00601ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00601ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p24
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00601ff8]\nTEST RAX,RAX\nJZ 0x00400822\nCALL RAX\nADD RSP,0x8\nRET\n'
p25
S'48 83 ec 08\n48 8b 05 dd 17 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p26
S'.init:0000000000400810\n.init:0000000000400814\n.init:000000000040081b\n.init:000000000040081e\n.init:0000000000400820\n.init:0000000000400822\n.init:0000000000400826\n'
p27
tp28
sS'XOpenDisplay'
p29
(S'\n__stdcall XOpenDisplay()\n'
p30
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_00602048)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x00602048]\n'
p32
S'ff 25 a2 17 20 00\n'
p33
S'.plt:00000000004008a0\n'
p34
tp35
sS'_start'
p36
(S'\n__stdcall _start()\n'
p37
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00601ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p38
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x400d50\nMOV RCX,0x400ce0\nMOV RDI,0x400a20\nCALL qword ptr [0x00601ff0]\nHLT\n'
p39
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 50 0d 40 00\n48 c7 c1 e0 0c 40 00\n48 c7 c7 20 0a 40 00\nff 15 a6 16 20 00\nf4\n'
p40
S'.text:0000000000400920\n.text:0000000000400922\n.text:0000000000400925\n.text:0000000000400926\n.text:0000000000400929\n.text:000000000040092d\n.text:000000000040092e\n.text:000000000040092f\n.text:0000000000400936\n.text:000000000040093d\n.text:0000000000400944\n.text:000000000040094a\n'
p41
tp42
sS'StrCaseCmp'
p43
(S'\n__stdcall StrCaseCmp(char * s1, char * s2)\n'
p44
V\u000aint StrCaseCmp(char *s1,char *s2)\u000a\u000a{\u000a  ushort *puVar1;\u000a  uint uVar2;\u000a  ushort **ppuVar3;\u000a  __int32_t **pp_Var4;\u000a  int iVar5;\u000a  char cVar6;\u000a  int iVar7;\u000a  char cVar8;\u000a  \u000a  cVar6 = *s1;\u000a  iVar7 = (int)cVar6;\u000a  if (iVar7 == 0) {\u000a    uVar2 = (uint)(*s2 != 0);\u000a  }\u000a  else {\u000a    ppuVar3 = __ctype_b_loc();\u000a    puVar1 = *ppuVar3;\u000a    if ((*(byte *)((long)puVar1 + (long)iVar7 * 2 + 1) & 1) != 0) {\u000a      pp_Var4 = __ctype_tolower_loc();\u000a      cVar6 = (char)(*pp_Var4)[(long)iVar7];\u000a    }\u000a    cVar8 = *s2;\u000a    if ((*(byte *)((long)puVar1 + (long)cVar8 * 2 + 1) & 1) != 0) {\u000a      pp_Var4 = __ctype_tolower_loc();\u000a      cVar8 = (char)(*pp_Var4)[(long)cVar8];\u000a    }\u000a    iVar7 = (int)cVar6;\u000a    iVar5 = (int)cVar8;\u000a    if (iVar7 == iVar5) {\u000a      s1 = s1 + 1;\u000a      s2 = s2 + 1;\u000a      do {\u000a        if (iVar7 == 0) {\u000a          return 0;\u000a        }\u000a        puVar1 = *ppuVar3;\u000a        cVar6 = *s1;\u000a        if ((*(byte *)((long)puVar1 + (long)cVar6 * 2 + 1) & 1) != 0) {\u000a          pp_Var4 = __ctype_tolower_loc();\u000a          cVar6 = (char)(*pp_Var4)[(long)cVar6];\u000a        }\u000a        cVar8 = *s2;\u000a        if ((*(byte *)((long)puVar1 + (long)cVar8 * 2 + 1) & 1) != 0) {\u000a          pp_Var4 = __ctype_tolower_loc();\u000a          cVar8 = (char)(*pp_Var4)[(long)cVar8];\u000a        }\u000a        iVar7 = (int)cVar6;\u000a        iVar5 = (int)cVar8;\u000a        s1 = s1 + 1;\u000a        s2 = s2 + 1;\u000a      } while (iVar7 == iVar5);\u000a    }\u000a    uVar2 = iVar7 - iVar5;\u000a  }\u000a  return (int)uVar2;\u000a}\u000a\u000a
p45
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV R13,RDI\nMOVSX EBP,byte ptr [R13]\nTEST EBP,EBP\nJZ 0x00400cbb\nCALL 0x00400910\nMOV R15,RAX\nMOV RBX,qword ptr [R15]\nMOVSXD R12,EBP\nTEST byte ptr [RBX + R12*0x2 + 0x1],0x1\nJZ 0x00400c40\nCALL 0x00400900\nMOV RAX,qword ptr [RAX]\nMOV EBP,dword ptr [RAX + R12*0x4]\nMOVSX R12,byte ptr [R14]\nTEST byte ptr [RBX + R12*0x2 + 0x1],0x1\nJZ 0x00400c58\nCALL 0x00400900\nMOV RAX,qword ptr [RAX]\nMOV R12D,dword ptr [RAX + R12*0x4]\nMOVSX EAX,BPL\nMOVSX ECX,R12B\nCMP EAX,ECX\nJNZ 0x00400cb7\nINC R13\nINC R14\nNOP word ptr [RAX + RAX*0x1]\nTEST EAX,EAX\nJZ 0x00400cc6\nMOV RBP,qword ptr [R15]\nMOVSX R12,byte ptr [R13]\nTEST byte ptr [RBP + R12*0x2 + 0x1],0x1\nJZ 0x00400c90\nCALL 0x00400900\nMOV RAX,qword ptr [RAX]\nMOV R12D,dword ptr [RAX + R12*0x4]\nMOVSX RBX,byte ptr [R14]\nTEST byte ptr [RBP + RBX*0x2 + 0x1],0x1\nJZ 0x00400ca6\nCALL 0x00400900\nMOV RAX,qword ptr [RAX]\nMOV EBX,dword ptr [RAX + RBX*0x4]\nMOVSX EAX,R12B\nMOVSX ECX,BL\nINC R13\nINC R14\nCMP EAX,ECX\nJZ 0x00400c70\nSUB EAX,ECX\nJMP 0x00400cc8\nXOR EAX,EAX\nCMP byte ptr [R14],0x0\nSETNZ AL\nJMP 0x00400cc8\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p46
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f6\n49 89 fd\n41 0f be 6d 00\n85 ed\n0f 84 9d 00 00 00\ne8 ed fc ff ff\n49 89 c7\n49 8b 1f\n4c 63 e5\n42 f6 44 63 01 01\n74 0c\ne8 c7 fc ff ff\n48 8b 00\n42 8b 2c a0\n4d 0f be 26\n42 f6 44 63 01 01\n74 0c\ne8 af fc ff ff\n48 8b 00\n46 8b 24 a0\n40 0f be c5\n41 0f be cc\n39 c8\n75 53\n49 ff c5\n49 ff c6\n66 0f 1f 44 00 00\n85 c0\n74 52\n49 8b 2f\n4d 0f be 65 00\n42 f6 44 65 01 01\n74 0c\ne8 77 fc ff ff\n48 8b 00\n46 8b 24 a0\n49 0f be 1e\nf6 44 5d 01 01\n74 0b\ne8 60 fc ff ff\n48 8b 00\n8b 1c 98\n41 0f be c4\n0f be cb\n49 ff c5\n49 ff c6\n39 c8\n74 b9\n29 c8\neb 0d\n31 c0\n41 80 3e 00\n0f 95 c0\neb 02\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p47
S'.text:0000000000400c00\n.text:0000000000400c01\n.text:0000000000400c03\n.text:0000000000400c05\n.text:0000000000400c07\n.text:0000000000400c09\n.text:0000000000400c0a\n.text:0000000000400c0b\n.text:0000000000400c0e\n.text:0000000000400c11\n.text:0000000000400c16\n.text:0000000000400c18\n.text:0000000000400c1e\n.text:0000000000400c23\n.text:0000000000400c26\n.text:0000000000400c29\n.text:0000000000400c2c\n.text:0000000000400c32\n.text:0000000000400c34\n.text:0000000000400c39\n.text:0000000000400c3c\n.text:0000000000400c40\n.text:0000000000400c44\n.text:0000000000400c4a\n.text:0000000000400c4c\n.text:0000000000400c51\n.text:0000000000400c54\n.text:0000000000400c58\n.text:0000000000400c5c\n.text:0000000000400c60\n.text:0000000000400c62\n.text:0000000000400c64\n.text:0000000000400c67\n.text:0000000000400c6a\n.text:0000000000400c70\n.text:0000000000400c72\n.text:0000000000400c74\n.text:0000000000400c77\n.text:0000000000400c7c\n.text:0000000000400c82\n.text:0000000000400c84\n.text:0000000000400c89\n.text:0000000000400c8c\n.text:0000000000400c90\n.text:0000000000400c94\n.text:0000000000400c99\n.text:0000000000400c9b\n.text:0000000000400ca0\n.text:0000000000400ca3\n.text:0000000000400ca6\n.text:0000000000400caa\n.text:0000000000400cad\n.text:0000000000400cb0\n.text:0000000000400cb3\n.text:0000000000400cb5\n.text:0000000000400cb7\n.text:0000000000400cb9\n.text:0000000000400cbb\n.text:0000000000400cbd\n.text:0000000000400cc1\n.text:0000000000400cc4\n.text:0000000000400cc6\n.text:0000000000400cc8\n.text:0000000000400ccc\n.text:0000000000400ccd\n.text:0000000000400ccf\n.text:0000000000400cd1\n.text:0000000000400cd3\n.text:0000000000400cd5\n.text:0000000000400cd6\n'
p48
tp49
sS'main'
p50
(S'\n__stdcall main(char * * argv)\n'
p51
V\u000aint main(char **argv)\u000a\u000a{\u000a  byte *pbVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  long lVar4;\u000a  long lVar5;\u000a  undefined8 uVar6;\u000a  long lVar7;\u000a  long lVar8;\u000a  int *piVar9;\u000a  undefined8 *in_RSI;\u000a  char *__format;\u000a  size_t __size;\u000a  int iVar10;\u000a  int num_extensions;\u000a  int num_devices;\u000a  int local_40;\u000a  int local_3c;\u000a  long local_38;\u000a  \u000a  if ((int)argv == 3) {\u000a    pbVar1 = (byte *)in_RSI[1];\u000a    iVar10 = 0x2d - (uint)*pbVar1;\u000a    if (iVar10 == 0) {\u000a      iVar10 = 0x6c - (uint)pbVar1[1];\u000a      if (iVar10 == 0) {\u000a        iVar10 = -(uint)pbVar1[2];\u000a      }\u000a    }\u000a    iVar3 = 0;\u000a    lVar4 = XOpenDisplay(0);\u000a    if (lVar4 == 0) {\u000a      puts("unable to connect to X Server try to set the DISPLAY variable");\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(1);\u000a    }\u000a    lVar5 = XListExtensions(lVar4,&local_40);\u000a    if (0 < local_40) {\u000a      lVar7 = (long)local_40;\u000a      lVar8 = 0;\u000a      do {\u000a        iVar3 = (int)lVar8;\u000a        iVar2 = strcmp(*(char **)(lVar5 + lVar8 * 8),"XInputExtension");\u000a        if (iVar2 == 0) break;\u000a        lVar8 = lVar8 + 1;\u000a        iVar3 = (int)lVar8;\u000a      } while (lVar8 < lVar7);\u000a    }\u000a    XFreeExtensionList(lVar5);\u000a    if (iVar3 == local_40) {\u000a      __format = "No XInput extension available\u005cn";\u000a      __size = 0x1e;\u000aLAB_00400b87:\u000a      fwrite(__format,__size,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(1);\u000a    }\u000a    local_38 = lVar4;\u000a    lVar4 = XListInputDevices(lVar4,&local_3c);\u000a    if (0 < local_3c) {\u000a      piVar9 = (int *)(lVar4 + 0x1c);\u000a      lVar4 = 0;\u000a      do {\u000a        if (*(char **)(piVar9 + -3) != (char *)0x0) {\u000a          iVar3 = StrCaseCmp(*(char **)(piVar9 + -3),(char *)in_RSI[1]);\u000a          lVar5 = local_38;\u000a          if ((iVar3 == 0) && (*piVar9 == 2)) {\u000a            lVar4 = XOpenDevice(local_38,*(undefined8 *)(piVar9 + -7));\u000a            if (lVar4 != 0) {\u000a              iVar10 = strcmp("ABSOLUTE",(char *)in_RSI[2]);\u000a              XSetDeviceMode(lVar5,lVar4,(ulong)(iVar10 == 0));\u000a                    /* WARNING: Subroutine does not return */\u000a              exit(0);\u000a            }\u000a            __format = "error opening device\u005cn";\u000a            __size = 0x15;\u000a            goto LAB_00400b87;\u000a          }\u000a        }\u000a        lVar4 = lVar4 + 1;\u000a        piVar9 = piVar9 + 10;\u000a      } while (lVar4 < (long)local_3c);\u000a    }\u000a    XFreeDeviceList();\u000a    if (iVar10 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(0);\u000a    }\u000a    uVar6 = in_RSI[1];\u000a    __format = "Extended device %s not found\u005cn";\u000a  }\u000a  else {\u000a    uVar6 = *in_RSI;\u000a    __format = "usage : %s <device name> (ABSOLUTE|RELATIVE)\u005cn";\u000a  }\u000a  fprintf(stderr,__format,uVar6);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R13,RSI\nCMP EDI,0x3\nJNZ 0x00400bc2\nMOV RAX,qword ptr [R13 + 0x8]\nMOVZX ECX,byte ptr [RAX]\nMOV R12D,0x2d\nSUB R12D,ECX\nJNZ 0x00400a63\nMOVZX ECX,byte ptr [RAX + 0x1]\nMOV R12D,0x6c\nSUB R12D,ECX\nJNZ 0x00400a63\nMOVZX R12D,byte ptr [RAX + 0x2]\nNEG R12D\nXOR EBP,EBP\nXOR EDI,EDI\nCALL 0x004008a0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00400bd7\nLEA RSI,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00400860\nMOV R15,RAX\nCMP dword ptr [RSP + 0x8],0x0\nJLE 0x00400aba\nMOVSXD RBX,dword ptr [RSP + 0x8]\nXOR EBP,EBP\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [R15 + RBP*0x8]\nMOV ESI,0x400dd4\nCALL 0x00400890\nTEST EAX,EAX\nJZ 0x00400aba\nINC RBP\nCMP RBP,RBX\nJL 0x00400aa0\nMOV RDI,R15\nCALL 0x004008c0\nCMP EBP,dword ptr [RSP + 0x8]\nJZ 0x00400beb\nLEA RSI,[RSP + 0xc]\nMOV qword ptr [RSP + 0x10],R14\nMOV RDI,R14\nCALL 0x00400840\nMOV R15,RAX\nCMP dword ptr [RSP + 0xc],0x0\nJLE 0x00400b28\nMOVSXD RBX,dword ptr [RSP + 0xc]\nLEA RBP,[R15 + 0x1c]\nXOR R14D,R14D\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RBP + -0xc]\nTEST RDI,RDI\nJZ 0x00400b1c\nMOV RSI,qword ptr [R13 + 0x8]\nCALL 0x00400c00\nTEST EAX,EAX\nJNZ 0x00400b1c\nCMP dword ptr [RBP],0x2\nJZ 0x00400b5d\nINC R14\nADD RBP,0x28\nCMP R14,RBX\nJL 0x00400b00\nMOV RDI,R15\nCALL 0x004008d0\nTEST R12D,R12D\nJNZ 0x00400b3c\nXOR EDI,EDI\nCALL 0x004008e0\nMOV RDI,qword ptr [0x006020a0]\nMOV RDX,qword ptr [R13 + 0x8]\nMOV ESI,0x400e22\nXOR EAX,EAX\nCALL 0x004008b0\nMOV EDI,0x1\nCALL 0x004008e0\nMOV RSI,qword ptr [RBP + -0x1c]\nMOV RBX,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x00400850\nMOV R15,RAX\nTEST R15,R15\nJNZ 0x00400b9b\nMOV RCX,qword ptr [0x006020a0]\nMOV EDI,0x400ded\nMOV ESI,0x15\nMOV EDX,0x1\nCALL 0x004008f0\nMOV EDI,0x1\nCALL 0x004008e0\nMOV RSI,qword ptr [R13 + 0x10]\nMOV EDI,0x400de4\nCALL 0x00400890\nXOR EDX,EDX\nTEST EAX,EAX\nSETZ DL\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00400880\nXOR EDI,EDI\nCALL 0x004008e0\nMOV RDI,qword ptr [0x006020a0]\nMOV RDX,qword ptr [R13]\nMOV ESI,0x400d64\nJMP 0x00400b4c\nMOV EDI,0x400e40\nCALL 0x00400870\nMOV EDI,0x1\nCALL 0x004008e0\nMOV RCX,qword ptr [0x006020a0]\nMOV EDI,0x400e03\nMOV ESI,0x1e\nJMP 0x00400b87\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 f5\n83 ff 03\n0f 85 88 01 00 00\n49 8b 45 08\n0f b6 08\n41 bc 2d 00 00 00\n41 29 cc\n75 17\n0f b6 48 01\n41 bc 6c 00 00 00\n41 29 cc\n75 08\n44 0f b6 60 02\n41 f7 dc\n31 ed\n31 ff\ne8 34 fe ff ff\n49 89 c6\n4d 85 f6\n0f 84 5f 01 00 00\n48 8d 74 24 08\n4c 89 f7\ne8 db fd ff ff\n49 89 c7\n83 7c 24 08 00\n7e 2b\n48 63 5c 24 08\n31 ed\n66 2e 0f 1f 84 00 00 00 00 00\n49 8b 3c ef\nbe d4 0d 40 00\ne8 e2 fd ff ff\n85 c0\n74 08\n48 ff c5\n48 39 dd\n7c e6\n4c 89 ff\ne8 fe fd ff ff\n3b 6c 24 08\n0f 84 1f 01 00 00\n48 8d 74 24 0c\n4c 89 74 24 10\n4c 89 f7\ne8 62 fd ff ff\n49 89 c7\n83 7c 24 0c 00\n7e 40\n48 63 5c 24 0c\n49 8d 6f 1c\n45 31 f6\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 7d f4\n48 85 ff\n74 13\n49 8b 75 08\ne8 ee 00 00 00\n85 c0\n75 06\n83 7d 00 02\n74 41\n49 ff c6\n48 83 c5 28\n49 39 de\n7c d8\n4c 89 ff\ne8 a0 fd ff ff\n45 85 e4\n75 07\n31 ff\ne8 a4 fd ff ff\n48 8b 3d 5d 15 20 00\n49 8b 55 08\nbe 22 0e 40 00\n31 c0\ne8 5d fd ff ff\nbf 01 00 00 00\ne8 83 fd ff ff\n48 8b 75 e4\n48 8b 5c 24 10\n48 89 df\ne8 e2 fc ff ff\n49 89 c7\n4d 85 ff\n75 25\n48 8b 0d 23 15 20 00\nbf ed 0d 40 00\nbe 15 00 00 00\nba 01 00 00 00\ne8 5f fd ff ff\nbf 01 00 00 00\ne8 45 fd ff ff\n49 8b 75 10\nbf e4 0d 40 00\ne8 e7 fc ff ff\n31 d2\n85 c0\n0f 94 c2\n48 89 df\n4c 89 fe\ne8 c5 fc ff ff\n31 ff\ne8 1e fd ff ff\n48 8b 3d d7 14 20 00\n49 8b 55 00\nbe 64 0d 40 00\ne9 75 ff ff ff\nbf 40 0e 40 00\ne8 8f fc ff ff\nbf 01 00 00 00\ne8 f5 fc ff ff\n48 8b 0d ae 14 20 00\nbf 03 0e 40 00\nbe 1e 00 00 00\neb 89\n'
p54
S'.text:0000000000400a20\n.text:0000000000400a21\n.text:0000000000400a23\n.text:0000000000400a25\n.text:0000000000400a27\n.text:0000000000400a29\n.text:0000000000400a2a\n.text:0000000000400a2e\n.text:0000000000400a31\n.text:0000000000400a34\n.text:0000000000400a3a\n.text:0000000000400a3e\n.text:0000000000400a41\n.text:0000000000400a47\n.text:0000000000400a4a\n.text:0000000000400a4c\n.text:0000000000400a50\n.text:0000000000400a56\n.text:0000000000400a59\n.text:0000000000400a5b\n.text:0000000000400a60\n.text:0000000000400a63\n.text:0000000000400a65\n.text:0000000000400a67\n.text:0000000000400a6c\n.text:0000000000400a6f\n.text:0000000000400a72\n.text:0000000000400a78\n.text:0000000000400a7d\n.text:0000000000400a80\n.text:0000000000400a85\n.text:0000000000400a88\n.text:0000000000400a8d\n.text:0000000000400a8f\n.text:0000000000400a94\n.text:0000000000400a96\n.text:0000000000400aa0\n.text:0000000000400aa4\n.text:0000000000400aa9\n.text:0000000000400aae\n.text:0000000000400ab0\n.text:0000000000400ab2\n.text:0000000000400ab5\n.text:0000000000400ab8\n.text:0000000000400aba\n.text:0000000000400abd\n.text:0000000000400ac2\n.text:0000000000400ac6\n.text:0000000000400acc\n.text:0000000000400ad1\n.text:0000000000400ad6\n.text:0000000000400ad9\n.text:0000000000400ade\n.text:0000000000400ae1\n.text:0000000000400ae6\n.text:0000000000400ae8\n.text:0000000000400aed\n.text:0000000000400af1\n.text:0000000000400af4\n.text:0000000000400b00\n.text:0000000000400b04\n.text:0000000000400b07\n.text:0000000000400b09\n.text:0000000000400b0d\n.text:0000000000400b12\n.text:0000000000400b14\n.text:0000000000400b16\n.text:0000000000400b1a\n.text:0000000000400b1c\n.text:0000000000400b1f\n.text:0000000000400b23\n.text:0000000000400b26\n.text:0000000000400b28\n.text:0000000000400b2b\n.text:0000000000400b30\n.text:0000000000400b33\n.text:0000000000400b35\n.text:0000000000400b37\n.text:0000000000400b3c\n.text:0000000000400b43\n.text:0000000000400b47\n.text:0000000000400b4c\n.text:0000000000400b4e\n.text:0000000000400b53\n.text:0000000000400b58\n.text:0000000000400b5d\n.text:0000000000400b61\n.text:0000000000400b66\n.text:0000000000400b69\n.text:0000000000400b6e\n.text:0000000000400b71\n.text:0000000000400b74\n.text:0000000000400b76\n.text:0000000000400b7d\n.text:0000000000400b82\n.text:0000000000400b87\n.text:0000000000400b8c\n.text:0000000000400b91\n.text:0000000000400b96\n.text:0000000000400b9b\n.text:0000000000400b9f\n.text:0000000000400ba4\n.text:0000000000400ba9\n.text:0000000000400bab\n.text:0000000000400bad\n.text:0000000000400bb0\n.text:0000000000400bb3\n.text:0000000000400bb6\n.text:0000000000400bbb\n.text:0000000000400bbd\n.text:0000000000400bc2\n.text:0000000000400bc9\n.text:0000000000400bcd\n.text:0000000000400bd2\n.text:0000000000400bd7\n.text:0000000000400bdc\n.text:0000000000400be1\n.text:0000000000400be6\n.text:0000000000400beb\n.text:0000000000400bf2\n.text:0000000000400bf7\n.text:0000000000400bfc\n'
p55
tp56
sS'deregister_tm_clones'
p57
(S'\n__stdcall deregister_tm_clones()\n'
p58
V\u000a/* WARNING: Removing unreachable block (ram,0x00400965) */\u000a/* WARNING: Removing unreachable block (ram,0x0040096f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p59
S'MOV EAX,0x60209f\nPUSH RBP\nSUB RAX,0x602098\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400980\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400980\nPOP RBP\nMOV EDI,0x602098\nJMP RAX\nPOP RBP\nRET\n'
p60
S'b8 9f 20 60 00\n55\n48 2d 98 20 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 98 20 60 00\nff e0\n5d\nc3\n'
p61
S'.text:0000000000400950\n.text:0000000000400955\n.text:0000000000400956\n.text:000000000040095c\n.text:0000000000400960\n.text:0000000000400963\n.text:0000000000400965\n.text:000000000040096a\n.text:000000000040096d\n.text:000000000040096f\n.text:0000000000400970\n.text:0000000000400975\n.text:0000000000400980\n.text:0000000000400981\n'
p62
tp63
sS'XFreeExtensionList'
p64
(S'\n__stdcall XFreeExtensionList()\n'
p65
V\u000avoid XFreeExtensionList(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeExtensionList_00602058)();\u000a  return;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00602058]\n'
p67
S'ff 25 92 17 20 00\n'
p68
S'.plt:00000000004008c0\n'
p69
tp70
sS'frame_dummy'
p71
(S'\n__stdcall frame_dummy()\n'
p72
V\u000a/* WARNING: Removing unreachable block (ram,0x00400a0a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p73
S'MOV EDI,0x601df8\nCMP qword ptr [RDI],0x0\nJNZ 0x00400a00\nJMP 0x00400990\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004009fb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400990\n'
p74
S'bf f8 1d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p75
S'.text:00000000004009f0\n.text:00000000004009f5\n.text:00000000004009f9\n.text:00000000004009fb\n.text:0000000000400a00\n.text:0000000000400a05\n.text:0000000000400a08\n.text:0000000000400a0a\n.text:0000000000400a0b\n.text:0000000000400a0e\n.text:0000000000400a10\n.text:0000000000400a11\n'
p76
tp77
sS'strcmp'
p78
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00602040)();\u000a  return iVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00602040]\n'
p81
S'ff 25 aa 17 20 00\n'
p82
S'.plt:0000000000400890\n'
p83
tp84
sS'register_tm_clones'
p85
(S'\n__stdcall register_tm_clones()\n'
p86
V\u000a/* WARNING: Removing unreachable block (ram,0x004009b3) */\u000a/* WARNING: Removing unreachable block (ram,0x004009bd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p87
S'MOV ESI,0x602098\nPUSH RBP\nSUB RSI,0x602098\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x004009c8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004009c8\nPOP RBP\nMOV EDI,0x602098\nJMP RAX\nPOP RBP\nRET\n'
p88
S'be 98 20 60 00\n55\n48 81 ee 98 20 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 98 20 60 00\nff e0\n5d\nc3\n'
p89
S'.text:0000000000400990\n.text:0000000000400995\n.text:0000000000400996\n.text:000000000040099d\n.text:00000000004009a1\n.text:00000000004009a4\n.text:00000000004009a7\n.text:00000000004009ab\n.text:00000000004009ae\n.text:00000000004009b1\n.text:00000000004009b3\n.text:00000000004009b8\n.text:00000000004009bb\n.text:00000000004009bd\n.text:00000000004009be\n.text:00000000004009c3\n.text:00000000004009c8\n.text:00000000004009c9\n'
p90
tp91
sS'XListExtensions'
p92
(S'\n__stdcall XListExtensions()\n'
p93
V\u000avoid XListExtensions(void)\u000a\u000a{\u000a  (*(code *)PTR_XListExtensions_00602028)();\u000a  return;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00602028]\n'
p95
S'ff 25 c2 17 20 00\n'
p96
S'.plt:0000000000400860\n'
p97
tp98
sS'FUN_00400830'
p99
(S'\n__stdcall FUN_00400830()\n'
p100
V\u000avoid FUN_00400830(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00602010)();\u000a  return;\u000a}\u000a\u000a
p101
S'PUSH qword ptr [0x00602008]\nJMP qword ptr [0x00602010]\n'
p102
S'ff 35 d2 17 20 00\nff 25 d4 17 20 00\n'
p103
S'.plt:0000000000400830\n.plt:0000000000400836\n'
p104
tp105
sS'XListInputDevices'
p106
(S'\n__stdcall XListInputDevices()\n'
p107
V\u000avoid XListInputDevices(void)\u000a\u000a{\u000a  (*(code *)PTR_XListInputDevices_00602018)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00602018]\n'
p109
S'ff 25 d2 17 20 00\n'
p110
S'.plt:0000000000400840\n'
p111
tp112
sS'fwrite'
p113
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p114
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00602070)();\u000a  return sVar1;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x00602070]\n'
p116
S'ff 25 7a 17 20 00\n'
p117
S'.plt:00000000004008f0\n'
p118
tp119
sS'__ctype_tolower_loc'
p120
(S'\n__stdcall __ctype_tolower_loc()\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_00602078)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00602078]\n'
p123
S'ff 25 72 17 20 00\n'
p124
S'.plt:0000000000400900\n'
p125
tp126
sS'XSetDeviceMode'
p127
(S'\n__stdcall XSetDeviceMode()\n'
p128
V\u000avoid XSetDeviceMode(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetDeviceMode_00602038)();\u000a  return;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00602038]\n'
p130
S'ff 25 b2 17 20 00\n'
p131
S'.plt:0000000000400880\n'
p132
tp133
sS'fprintf'
p134
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00602050)();\u000a  return iVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00602050]\n'
p137
S'ff 25 9a 17 20 00\n'
p138
S'.plt:00000000004008b0\n'
p139
tp140
sS'puts'
p141
(S'\n__stdcall puts(char * __s)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00602030)();\u000a  return iVar1;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00602030]\n'
p144
S'ff 25 ba 17 20 00\n'
p145
S'.plt:0000000000400870\n'
p146
tp147
sS'exit'
p148
(S'\n__stdcall exit(int __status)\n'
p149
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00602068)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00602068]\n'
p151
S'ff 25 82 17 20 00\n'
p152
S'.plt:00000000004008e0\n'
p153
tp154
sS'__libc_csu_fini'
p155
(S'\n__stdcall __libc_csu_fini()\n'
p156
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p157
S'RET\n'
p158
S'f3 c3\n'
p159
S'.text:0000000000400d50\n'
p160
tp161
sS'XOpenDevice'
p162
(S'\n__stdcall XOpenDevice()\n'
p163
V\u000avoid XOpenDevice(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDevice_00602020)();\u000a  return;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00602020]\n'
p165
S'ff 25 ca 17 20 00\n'
p166
S'.plt:0000000000400850\n'
p167
tp168
sS'__do_global_dtors_aux'
p169
(S'\n__stdcall __do_global_dtors_aux()\n'
p170
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p171
S'CMP byte ptr [0x006020a8],0x0\nJNZ 0x004009ea\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400950\nPOP RBP\nMOV byte ptr [0x006020a8],0x1\nRET\n'
p172
S'80 3d d1 16 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 be 16 20 00 01\nf3 c3\n'
p173
S'.text:00000000004009d0\n.text:00000000004009d7\n.text:00000000004009d9\n.text:00000000004009da\n.text:00000000004009dd\n.text:00000000004009e2\n.text:00000000004009e3\n.text:00000000004009ea\n'
p174
tp175
sS'_fini'
p176
(S'\n__stdcall _fini()\n'
p177
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p178
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p179
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p180
S'.fini:0000000000400d54\n.fini:0000000000400d58\n.fini:0000000000400d5c\n'
p181
tp182
s.