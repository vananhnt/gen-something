(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x605328]\nPUSH RBP\nLEA RBP,[0x605330]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401688\nTEST RBP,RBP\nJZ 0x00403f76\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00403f60\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 f6 13 20 00\n55\n48 8d 2d f6 13 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 37 d7 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000403f20\n.text:0000000000403f22\n.text:0000000000403f24\n.text:0000000000403f27\n.text:0000000000403f29\n.text:0000000000403f2b\n.text:0000000000403f32\n.text:0000000000403f33\n.text:0000000000403f3a\n.text:0000000000403f3b\n.text:0000000000403f3e\n.text:0000000000403f41\n.text:0000000000403f44\n.text:0000000000403f48\n.text:0000000000403f4c\n.text:0000000000403f51\n.text:0000000000403f54\n.text:0000000000403f56\n.text:0000000000403f58\n.text:0000000000403f60\n.text:0000000000403f63\n.text:0000000000403f66\n.text:0000000000403f69\n.text:0000000000403f6d\n.text:0000000000403f71\n.text:0000000000403f74\n.text:0000000000403f76\n.text:0000000000403f7a\n.text:0000000000403f7b\n.text:0000000000403f7c\n.text:0000000000403f7e\n.text:0000000000403f80\n.text:0000000000403f82\n.text:0000000000403f84\n'
p6
tp7
sS'CatchFontConversionWarning'
p8
(S'\n__stdcall CatchFontConversionWarning(String name, String type, String class, String defaultp, String * params, Cardinal * np)\n'
p9
V\u000avoid CatchFontConversionWarning\u000a               (String name,String type,String class,String defaultp,String *params,Cardinal *np)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if ((np != (Cardinal *)0x0) && (1 < *np)) {\u000a    iVar1 = strcmp(name,"conversionError");\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcmp(type,"string");\u000a      if (iVar1 == 0) {\u000a        iVar1 = strcmp(class,"XtToolkitError");\u000a        if (iVar1 == 0) {\u000a          iVar1 = strcmp(params[1],"FontStruct");\u000a          if (iVar1 == 0) {\u000a            fontConversionFailed = 1;\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a                    /* WARNING: Could not recover jumptable at 0x00403c9a. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*oldWarningHandler)(name,type,class,defaultp,params,np);\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,R9\nMOV R14,R8\nMOV R15,RCX\nMOV R12,RDX\nMOV R13,RSI\nMOV RBP,RDI\nTEST RBX,RBX\nJZ 0x00403c73\nCMP dword ptr [RBX],0x2\nJC 0x00403c73\nMOV ESI,0x4046c7\nMOV RDI,RBP\nCALL 0x00401960\nTEST EAX,EAX\nJNZ 0x00403c73\nMOV ESI,0x4046d7\nMOV RDI,R13\nCALL 0x00401960\nTEST EAX,EAX\nJNZ 0x00403c73\nMOV ESI,0x404080\nMOV RDI,R12\nCALL 0x00401960\nTEST EAX,EAX\nJNZ 0x00403c73\nMOV RDI,qword ptr [R14 + 0x8]\nMOV ESI,0x4046de\nCALL 0x00401960\nTEST EAX,EAX\nJNZ 0x00403c73\nMOV byte ptr [0x006069d0],0x1\nMOV RAX,qword ptr [0x006069c0]\nMOV RDI,RBP\nMOV RSI,R13\nMOV RDX,R12\nMOV RCX,R15\nMOV R8,R14\nMOV R9,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP RAX\n'
p11
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4c 89 cb\n4d 89 c6\n49 89 cf\n49 89 d4\n49 89 f5\n48 89 fd\n48 85 db\n74 51\n83 3b 02\n72 4c\nbe c7 46 40 00\n48 89 ef\ne8 2c dd ff ff\n85 c0\n75 3b\nbe d7 46 40 00\n4c 89 ef\ne8 1b dd ff ff\n85 c0\n75 2a\nbe 80 40 40 00\n4c 89 e7\ne8 0a dd ff ff\n85 c0\n75 19\n49 8b 7e 08\nbe de 46 40 00\ne8 f8 dc ff ff\n85 c0\n75 07\nc6 05 5d 2d 20 00 01\n48 8b 05 46 2d 20 00\n48 89 ef\n4c 89 ee\n4c 89 e2\n4c 89 f9\n4d 89 f0\n49 89 d9\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nff e0\n'
p12
S'.text:0000000000403c00\n.text:0000000000403c01\n.text:0000000000403c03\n.text:0000000000403c05\n.text:0000000000403c07\n.text:0000000000403c09\n.text:0000000000403c0a\n.text:0000000000403c0b\n.text:0000000000403c0e\n.text:0000000000403c11\n.text:0000000000403c14\n.text:0000000000403c17\n.text:0000000000403c1a\n.text:0000000000403c1d\n.text:0000000000403c20\n.text:0000000000403c22\n.text:0000000000403c25\n.text:0000000000403c27\n.text:0000000000403c2c\n.text:0000000000403c2f\n.text:0000000000403c34\n.text:0000000000403c36\n.text:0000000000403c38\n.text:0000000000403c3d\n.text:0000000000403c40\n.text:0000000000403c45\n.text:0000000000403c47\n.text:0000000000403c49\n.text:0000000000403c4e\n.text:0000000000403c51\n.text:0000000000403c56\n.text:0000000000403c58\n.text:0000000000403c5a\n.text:0000000000403c5e\n.text:0000000000403c63\n.text:0000000000403c68\n.text:0000000000403c6a\n.text:0000000000403c6c\n.text:0000000000403c73\n.text:0000000000403c7a\n.text:0000000000403c7d\n.text:0000000000403c80\n.text:0000000000403c83\n.text:0000000000403c86\n.text:0000000000403c89\n.text:0000000000403c8c\n.text:0000000000403c90\n.text:0000000000403c91\n.text:0000000000403c93\n.text:0000000000403c95\n.text:0000000000403c97\n.text:0000000000403c99\n.text:0000000000403c9a\n'
p13
tp14
sS'Notify'
p15
(S'\n__stdcall Notify(Widget gw, XEvent * event, String * params, Cardinal * nparams)\n'
p16
V\u000avoid Notify(Widget gw,XEvent *event,String *params,Cardinal *nparams)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  Widget local_18;\u000a  _XtStateRec *local_10;\u000a  ulong local_8;\u000a  \u000a  iVar1 = *(int *)*event;\u000a  if (((iVar1 - 2U < 2) || (iVar1 - 4U < 2)) || (iVar1 == 6)) {\u000a    iVar1 = *(int *)&gw[1].core.tm.lastEventTime;\u000a    iVar2 = *(int *)&gw[1].core.screen;\u000a    iVar3 = *(int *)&gw[1].core.accelerators + iVar2;\u000a    if (*(int *)(*event + 0x40) <= iVar1 * iVar3) {\u000a      local_8 = (ulong)(uint)(*(int *)(*event + 0x40) / iVar3 +\u000a                             (*(int *)(*event + 0x44) /\u000a                             (iVar2 + *(int *)((long)&gw[1].core.accelerators + 4))) * iVar1 +\u000a                             *(int *)&gw[1].core.name);\u000a      local_10 = gw[1].core.tm.current_state;\u000a      local_18 = gw[2].core.self;\u000a      XtCallCallbacks(gw,0x6053c8,&local_18);\u000a      return;\u000a    }\u000a  }\u000a  XBell(((gw->core).screen)->display,0);\u000a  return;\u000a}\u000a\u000a
p17
S'SUB RSP,0x18\nMOV EAX,dword ptr [RSI]\nLEA ECX,[RAX + -0x2]\nCMP ECX,0x2\nJC 0x004023eb\nLEA ECX,[RAX + -0x4]\nCMP ECX,0x2\nJC 0x004023eb\nCMP EAX,0x6\nJNZ 0x00402411\nMOV R8D,dword ptr [RSI + 0x40]\nMOV R9D,dword ptr [0x130 + RDI]\nMOV R10D,dword ptr [0x168 + RDI]\nMOV ECX,dword ptr [0x138 + RDI]\nADD ECX,R10D\nMOV EAX,R9D\nIMUL EAX,ECX\nCMP R8D,EAX\nJLE 0x00402428\nMOV RAX,qword ptr [0x98 + RDI]\nMOV RDI,qword ptr [RAX + 0x8]\nXOR ESI,ESI\nCALL 0x00401820\nADD RSP,0x18\nRET\nADD R10D,dword ptr [0x13c + RDI]\nMOV EAX,dword ptr [RSI + 0x44]\nMOV R11D,dword ptr [0x160 + RDI]\nCDQ\nIDIV R10D\nMOV ESI,EAX\nIMUL ESI,R9D\nADD ESI,R11D\nMOV EAX,R8D\nCDQ\nIDIV ECX\nADD EAX,ESI\nMOV RCX,qword ptr [0x128 + RDI]\nMOV qword ptr [RSP + 0x8],RCX\nMOV RCX,qword ptr [0x1a0 + RDI]\nMOV qword ptr [RSP],RCX\nMOV qword ptr [RSP + 0x10],RAX\nMOV RDX,RSP\nMOV ESI,0x6053c8\nCALL 0x00401780\nADD RSP,0x18\nRET\n'
p18
S'48 83 ec 18\n8b 06\n8d 48 fe\n83 f9 02\n72 0d\n8d 48 fc\n83 f9 02\n72 05\n83 f8 06\n75 26\n44 8b 46 40\n44 8b 8f 30 01 00 00\n44 8b 97 68 01 00 00\n8b 8f 38 01 00 00\n44 01 d1\n44 89 c8\n0f af c1\n41 39 c0\n7e 17\n48 8b 87 98 00 00 00\n48 8b 78 08\n31 f6\ne8 fd f3 ff ff\n48 83 c4 18\nc3\n44 03 97 3c 01 00 00\n8b 46 44\n44 8b 9f 60 01 00 00\n99\n41 f7 fa\n89 c6\n41 0f af f1\n44 01 de\n44 89 c0\n99\nf7 f9\n01 f0\n48 8b 8f 28 01 00 00\n48 89 4c 24 08\n48 8b 8f a0 01 00 00\n48 89 0c 24\n48 89 44 24 10\n48 89 e2\nbe c8 53 60 00\ne8 09 f3 ff ff\n48 83 c4 18\nc3\n'
p19
S'.text:00000000004023d0\n.text:00000000004023d4\n.text:00000000004023d6\n.text:00000000004023d9\n.text:00000000004023dc\n.text:00000000004023de\n.text:00000000004023e1\n.text:00000000004023e4\n.text:00000000004023e6\n.text:00000000004023e9\n.text:00000000004023eb\n.text:00000000004023ef\n.text:00000000004023f6\n.text:00000000004023fd\n.text:0000000000402403\n.text:0000000000402406\n.text:0000000000402409\n.text:000000000040240c\n.text:000000000040240f\n.text:0000000000402411\n.text:0000000000402418\n.text:000000000040241c\n.text:000000000040241e\n.text:0000000000402423\n.text:0000000000402427\n.text:0000000000402428\n.text:000000000040242f\n.text:0000000000402432\n.text:0000000000402439\n.text:000000000040243a\n.text:000000000040243d\n.text:000000000040243f\n.text:0000000000402443\n.text:0000000000402446\n.text:0000000000402449\n.text:000000000040244a\n.text:000000000040244c\n.text:000000000040244e\n.text:0000000000402455\n.text:000000000040245a\n.text:0000000000402461\n.text:0000000000402465\n.text:000000000040246a\n.text:000000000040246d\n.text:0000000000402472\n.text:0000000000402477\n.text:000000000040247b\n'
p20
tp21
sS'XtWindow'
p22
(S'\n__stdcall XtWindow()\n'
p23
V\u000avoid XtWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XtWindow_00606018)();\u000a  return;\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x00606018]\n'
p25
S'ff 25 62 49 20 00\n'
p26
S'.plt:00000000004016b0\n'
p27
tp28
sS'usage'
p29
(S'\n__stdcall usage()\n'
p30
V\u000avoid usage(void)\u000a\u000a{\u000a  FILE *__stream;\u000a  char *__format;\u000a  \u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"usage:  %s [-options ...] ",5);\u000a  fprintf(__stream,__format,ProgramName);\u000a  fwrite(&DAT_0040449f,4,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"font\u005cn\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"        %s [-options ...] ",5);\u000a  fprintf(__stream,__format,ProgramName);\u000a  fwrite(&DAT_004044c6,4,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"font\u005cn\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"where options include:\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -display ",0xd,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"display       X server to contact\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -geometry ",0xe,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"geometry     size and location of window\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -bc ",8,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"color              color for ImageText boxes\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -start ",0xb,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"number          first character to show\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -box                   ",0x1b,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"show a box around each character\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -center                ",0x1b,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"center each character inside its grid\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -rows ",10,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"number           number of rows in grid\u005cn",5);\u000a  fprintf(__stream,__format);\u000a  fwrite("    -columns ",0xd,1,stderr);\u000a  __stream = stderr;\u000a  __format = (char *)dcgettext(0,"number        number of columns in grid\u005cn",5);\u000a  fprintf(__stream,__format);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p31
S'PUSH RBX\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404484\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nMOV RDX,qword ptr [0x00606948]\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x40449f\nMOV ESI,0x4\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x4044a4\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x4044ab\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nMOV RDX,qword ptr [0x00606948]\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x4044c6\nMOV ESI,0x4\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x4044a4\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x4044cb\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x4044e3\nMOV ESI,0xd\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x4044f1\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x404514\nMOV ESI,0xe\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404523\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x40454d\nMOV ESI,0x8\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404556\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x404584\nMOV ESI,0xb\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404590\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x4045b9\nMOV ESI,0x1b\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x4045d5\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x4045f7\nMOV ESI,0x1b\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404613\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x40463a\nMOV ESI,0xa\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404645\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV RCX,qword ptr [0x00606920]\nMOV EDI,0x40466e\nMOV ESI,0xd\nMOV EDX,0x1\nCALL 0x004019d0\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x40467c\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV EDI,0x1\nCALL 0x00401730\n'
p32
S'53\n48 8b 1d 48 30 20 00\n31 ff\nbe 84 44 40 00\nba 05 00 00 00\ne8 27 e0 ff ff\n48 89 c1\n48 8b 15 55 30 20 00\n31 c0\n48 89 df\n48 89 ce\ne8 00 e1 ff ff\n48 8b 0d 19 30 20 00\nbf 9f 44 40 00\nbe 04 00 00 00\nba 01 00 00 00\ne8 b5 e0 ff ff\n48 8b 1d fe 2f 20 00\n31 ff\nbe a4 44 40 00\nba 05 00 00 00\ne8 dd df ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 bd e0 ff ff\n48 8b 1d d6 2f 20 00\n31 ff\nbe ab 44 40 00\nba 05 00 00 00\ne8 b5 df ff ff\n48 89 c1\n48 8b 15 e3 2f 20 00\n31 c0\n48 89 df\n48 89 ce\ne8 8e e0 ff ff\n48 8b 0d a7 2f 20 00\nbf c6 44 40 00\nbe 04 00 00 00\nba 01 00 00 00\ne8 43 e0 ff ff\n48 8b 1d 8c 2f 20 00\n31 ff\nbe a4 44 40 00\nba 05 00 00 00\ne8 6b df ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 4b e0 ff ff\n48 8b 1d 64 2f 20 00\n31 ff\nbe cb 44 40 00\nba 05 00 00 00\ne8 43 df ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 23 e0 ff ff\n48 8b 0d 3c 2f 20 00\nbf e3 44 40 00\nbe 0d 00 00 00\nba 01 00 00 00\ne8 d8 df ff ff\n48 8b 1d 21 2f 20 00\n31 ff\nbe f1 44 40 00\nba 05 00 00 00\ne8 00 df ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 e0 df ff ff\n48 8b 0d f9 2e 20 00\nbf 14 45 40 00\nbe 0e 00 00 00\nba 01 00 00 00\ne8 95 df ff ff\n48 8b 1d de 2e 20 00\n31 ff\nbe 23 45 40 00\nba 05 00 00 00\ne8 bd de ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 9d df ff ff\n48 8b 0d b6 2e 20 00\nbf 4d 45 40 00\nbe 08 00 00 00\nba 01 00 00 00\ne8 52 df ff ff\n48 8b 1d 9b 2e 20 00\n31 ff\nbe 56 45 40 00\nba 05 00 00 00\ne8 7a de ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 5a df ff ff\n48 8b 0d 73 2e 20 00\nbf 84 45 40 00\nbe 0b 00 00 00\nba 01 00 00 00\ne8 0f df ff ff\n48 8b 1d 58 2e 20 00\n31 ff\nbe 90 45 40 00\nba 05 00 00 00\ne8 37 de ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 17 df ff ff\n48 8b 0d 30 2e 20 00\nbf b9 45 40 00\nbe 1b 00 00 00\nba 01 00 00 00\ne8 cc de ff ff\n48 8b 1d 15 2e 20 00\n31 ff\nbe d5 45 40 00\nba 05 00 00 00\ne8 f4 dd ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 d4 de ff ff\n48 8b 0d ed 2d 20 00\nbf f7 45 40 00\nbe 1b 00 00 00\nba 01 00 00 00\ne8 89 de ff ff\n48 8b 1d d2 2d 20 00\n31 ff\nbe 13 46 40 00\nba 05 00 00 00\ne8 b1 dd ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 91 de ff ff\n48 8b 0d aa 2d 20 00\nbf 3a 46 40 00\nbe 0a 00 00 00\nba 01 00 00 00\ne8 46 de ff ff\n48 8b 1d 8f 2d 20 00\n31 ff\nbe 45 46 40 00\nba 05 00 00 00\ne8 6e dd ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 4e de ff ff\n48 8b 0d 67 2d 20 00\nbf 6e 46 40 00\nbe 0d 00 00 00\nba 01 00 00 00\ne8 03 de ff ff\n48 8b 1d 4c 2d 20 00\n31 ff\nbe 7c 46 40 00\nba 05 00 00 00\ne8 2b dd ff ff\n48 89 c1\n31 c0\n48 89 df\n48 89 ce\ne8 0b de ff ff\nbf 01 00 00 00\ne8 31 db ff ff\n'
p33
S'.text:00000000004038d0\n.text:00000000004038d1\n.text:00000000004038d8\n.text:00000000004038da\n.text:00000000004038df\n.text:00000000004038e4\n.text:00000000004038e9\n.text:00000000004038ec\n.text:00000000004038f3\n.text:00000000004038f5\n.text:00000000004038f8\n.text:00000000004038fb\n.text:0000000000403900\n.text:0000000000403907\n.text:000000000040390c\n.text:0000000000403911\n.text:0000000000403916\n.text:000000000040391b\n.text:0000000000403922\n.text:0000000000403924\n.text:0000000000403929\n.text:000000000040392e\n.text:0000000000403933\n.text:0000000000403936\n.text:0000000000403938\n.text:000000000040393b\n.text:000000000040393e\n.text:0000000000403943\n.text:000000000040394a\n.text:000000000040394c\n.text:0000000000403951\n.text:0000000000403956\n.text:000000000040395b\n.text:000000000040395e\n.text:0000000000403965\n.text:0000000000403967\n.text:000000000040396a\n.text:000000000040396d\n.text:0000000000403972\n.text:0000000000403979\n.text:000000000040397e\n.text:0000000000403983\n.text:0000000000403988\n.text:000000000040398d\n.text:0000000000403994\n.text:0000000000403996\n.text:000000000040399b\n.text:00000000004039a0\n.text:00000000004039a5\n.text:00000000004039a8\n.text:00000000004039aa\n.text:00000000004039ad\n.text:00000000004039b0\n.text:00000000004039b5\n.text:00000000004039bc\n.text:00000000004039be\n.text:00000000004039c3\n.text:00000000004039c8\n.text:00000000004039cd\n.text:00000000004039d0\n.text:00000000004039d2\n.text:00000000004039d5\n.text:00000000004039d8\n.text:00000000004039dd\n.text:00000000004039e4\n.text:00000000004039e9\n.text:00000000004039ee\n.text:00000000004039f3\n.text:00000000004039f8\n.text:00000000004039ff\n.text:0000000000403a01\n.text:0000000000403a06\n.text:0000000000403a0b\n.text:0000000000403a10\n.text:0000000000403a13\n.text:0000000000403a15\n.text:0000000000403a18\n.text:0000000000403a1b\n.text:0000000000403a20\n.text:0000000000403a27\n.text:0000000000403a2c\n.text:0000000000403a31\n.text:0000000000403a36\n.text:0000000000403a3b\n.text:0000000000403a42\n.text:0000000000403a44\n.text:0000000000403a49\n.text:0000000000403a4e\n.text:0000000000403a53\n.text:0000000000403a56\n.text:0000000000403a58\n.text:0000000000403a5b\n.text:0000000000403a5e\n.text:0000000000403a63\n.text:0000000000403a6a\n.text:0000000000403a6f\n.text:0000000000403a74\n.text:0000000000403a79\n.text:0000000000403a7e\n.text:0000000000403a85\n.text:0000000000403a87\n.text:0000000000403a8c\n.text:0000000000403a91\n.text:0000000000403a96\n.text:0000000000403a99\n.text:0000000000403a9b\n.text:0000000000403a9e\n.text:0000000000403aa1\n.text:0000000000403aa6\n.text:0000000000403aad\n.text:0000000000403ab2\n.text:0000000000403ab7\n.text:0000000000403abc\n.text:0000000000403ac1\n.text:0000000000403ac8\n.text:0000000000403aca\n.text:0000000000403acf\n.text:0000000000403ad4\n.text:0000000000403ad9\n.text:0000000000403adc\n.text:0000000000403ade\n.text:0000000000403ae1\n.text:0000000000403ae4\n.text:0000000000403ae9\n.text:0000000000403af0\n.text:0000000000403af5\n.text:0000000000403afa\n.text:0000000000403aff\n.text:0000000000403b04\n.text:0000000000403b0b\n.text:0000000000403b0d\n.text:0000000000403b12\n.text:0000000000403b17\n.text:0000000000403b1c\n.text:0000000000403b1f\n.text:0000000000403b21\n.text:0000000000403b24\n.text:0000000000403b27\n.text:0000000000403b2c\n.text:0000000000403b33\n.text:0000000000403b38\n.text:0000000000403b3d\n.text:0000000000403b42\n.text:0000000000403b47\n.text:0000000000403b4e\n.text:0000000000403b50\n.text:0000000000403b55\n.text:0000000000403b5a\n.text:0000000000403b5f\n.text:0000000000403b62\n.text:0000000000403b64\n.text:0000000000403b67\n.text:0000000000403b6a\n.text:0000000000403b6f\n.text:0000000000403b76\n.text:0000000000403b7b\n.text:0000000000403b80\n.text:0000000000403b85\n.text:0000000000403b8a\n.text:0000000000403b91\n.text:0000000000403b93\n.text:0000000000403b98\n.text:0000000000403b9d\n.text:0000000000403ba2\n.text:0000000000403ba5\n.text:0000000000403ba7\n.text:0000000000403baa\n.text:0000000000403bad\n.text:0000000000403bb2\n.text:0000000000403bb9\n.text:0000000000403bbe\n.text:0000000000403bc3\n.text:0000000000403bc8\n.text:0000000000403bcd\n.text:0000000000403bd4\n.text:0000000000403bd6\n.text:0000000000403bdb\n.text:0000000000403be0\n.text:0000000000403be5\n.text:0000000000403be8\n.text:0000000000403bea\n.text:0000000000403bed\n.text:0000000000403bf0\n.text:0000000000403bf5\n.text:0000000000403bfa\n'
p34
tp35
sS'XClipBox'
p36
(S'\n__stdcall XClipBox()\n'
p37
V\u000avoid XClipBox(void)\u000a\u000a{\u000a  (*(code *)PTR_XClipBox_00606098)();\u000a  return;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00606098]\n'
p39
S'ff 25 e2 48 20 00\n'
p40
S'.plt:00000000004017b0\n'
p41
tp42
sS'Initialize'
p43
(S'\n__stdcall Initialize(Widget request, Widget new, ArgList * args, Cardinal * num_args)\n'
p44
V\u000avoid Initialize(Widget request,Widget new,ArgList *args,Cardinal *num_args)\u000a\u000a{\u000a  String *ppcVar1;\u000a  _XtStateRec *p_Var2;\u000a  Widget p_Var3;\u000a  short sVar4;\u000a  int iVar5;\u000a  ulong uVar6;\u000a  \u000a  p_Var2 = new[1].core.tm.current_state;\u000a  p_Var3 = new[2].core.self;\u000a  if (*(int *)&request[1].core.tm.lastEventTime < 1) {\u000a    *(undefined4 *)&new[1].core.tm.lastEventTime = 0x10;\u000a  }\u000a  if ((*(int *)((long)&request[1].core.tm.lastEventTime + 4) < 1) &&\u000a     ((((p_Var3 != (Widget)0x0 || (p_Var2 == (_XtStateRec *)0x0)) || (*(int *)(p_Var2 + 0x20) != 0))\u000a      || (iVar5 = *(uint *)(p_Var2 + 0x18) / *(uint *)&new[1].core.tm.lastEventTime + 1,\u000a         *(int *)((long)&new[1].core.tm.lastEventTime + 4) = iVar5, 0x10 < iVar5)))) {\u000a    *(undefined4 *)((long)&new[1].core.tm.lastEventTime + 4) = 0x10;\u000a  }\u000a  if (*(int *)&request[1].core.accelerators < 1) {\u000a    p_Var3 = new[2].core.self;\u000a    if (p_Var3 == (Widget)0x0) {\u000a      p_Var2 = new[1].core.tm.current_state;\u000a      if (p_Var2 == (_XtStateRec *)0x0) {\u000a        iVar5 = 1;\u000a      }\u000a      else {\u000a        iVar5 = (int)*(short *)(p_Var2 + 0x48);\u000a      }\u000a    }\u000a    else {\u000a      iVar5 = *(int *)((long)&(p_Var3->core).widget_class + 4);\u000a    }\u000a    *(Cardinal *)&new[1].core.accelerators = iVar5 + new[1].core.num_popups * 2;\u000a  }\u000a  if (*(int *)((long)&request[1].core.accelerators + 4) < 1) {\u000a    p_Var3 = new[2].core.self;\u000a    if (p_Var3 == (Widget)0x0) {\u000a      p_Var2 = new[1].core.tm.current_state;\u000a      if (p_Var2 == (_XtStateRec *)0x0) {\u000a        iVar5 = 1;\u000a      }\u000a      else {\u000a        iVar5 = *(int *)(p_Var2 + 0x5c) + *(int *)(p_Var2 + 0x58);\u000a      }\u000a    }\u000a    else {\u000a      iVar5 = *(int *)&(p_Var3->core).widget_class;\u000a    }\u000a    *(int *)((long)&new[1].core.accelerators + 4) = iVar5 + new[1].core.num_popups * 2;\u000a  }\u000a  if ((new->core).width == 0) {\u000a    sVar4 = (short)*(undefined4 *)&new[1].core.tm.lastEventTime;\u000a    (new->core).width =\u000a         (sVar4 + 1) * (short)*(undefined4 *)&new[1].core.screen +\u000a         (short)*(undefined4 *)&new[1].core.accelerators * sVar4;\u000a  }\u000a  if ((new->core).height == 0) {\u000a    sVar4 = (short)*(undefined4 *)((long)&new[1].core.tm.lastEventTime + 4);\u000a    (new->core).height =\u000a         (sVar4 + 1) * (short)*(undefined4 *)&new[1].core.screen +\u000a         (short)*(undefined4 *)((long)&new[1].core.accelerators + 4) * sVar4;\u000a  }\u000a  if (new[1].core.name == &DAT_ffffffff) {\u000a    uVar6 = GridFirstChar(new);\u000a    new[1].core.name = (String)(uVar6 & 0xffffff00);\u000a  }\u000a  uVar6 = GridLastChar(new);\u000a  ppcVar1 = &new[1].core.name;\u000a  if (*ppcVar1 != (String)(uVar6 & 0xffffffff) &&\u000a      (long)(String)(uVar6 & 0xffffffff) <= (long)*ppcVar1) {\u000a    new[1].core.name =\u000a         (String)(ulong)(uint)(((int)uVar6 + 1) -\u000a                              *(int *)((long)&new[1].core.tm.lastEventTime + 4) *\u000a                              *(int *)&new[1].core.tm.lastEventTime);\u000a  }\u000a  return;\u000a}\u000a\u000a
p45
S'PUSH RBX\nMOV RBX,RSI\nMOV RAX,qword ptr [0x128 + RBX]\nMOV RCX,qword ptr [0x1a0 + RBX]\nCMP dword ptr [0x130 + RDI],0x0\nJG 0x00401c15\nMOV dword ptr [0x130 + RBX],0x10\nCMP dword ptr [0x134 + RDI],0x0\nJG 0x00401c2d\nTEST RCX,RCX\nJZ 0x00401c47\nMOV dword ptr [0x134 + RBX],0x10\nCMP dword ptr [0x138 + RDI],0x0\nJG 0x00401c92\nMOV RAX,qword ptr [0x1a0 + RBX]\nTEST RAX,RAX\nJZ 0x00401c6c\nMOV EAX,dword ptr [RAX + 0xc]\nJMP 0x00401c83\nTEST RAX,RAX\nJZ 0x00401c23\nCMP dword ptr [RAX + 0x20],0x0\nJNZ 0x00401c23\nMOV EAX,dword ptr [RAX + 0x18]\nXOR EDX,EDX\nDIV dword ptr [0x130 + RBX]\nINC EAX\nMOV dword ptr [0x134 + RBX],EAX\nCMP EAX,0x11\nJGE 0x00401c23\nJMP 0x00401c2d\nMOV RAX,qword ptr [0x128 + RBX]\nTEST RAX,RAX\nJZ 0x00401c7e\nMOVSX EAX,word ptr [RAX + 0x48]\nJMP 0x00401c83\nMOV EAX,0x1\nMOV ECX,dword ptr [0x158 + RBX]\nLEA EAX,[RAX + RCX*0x2]\nMOV dword ptr [0x138 + RBX],EAX\nCMP dword ptr [0x13c + RDI],0x0\nJG 0x00401cd4\nMOV RAX,qword ptr [0x1a0 + RBX]\nTEST RAX,RAX\nJZ 0x00401cac\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x00401cc5\nMOV RCX,qword ptr [0x128 + RBX]\nTEST RCX,RCX\nJZ 0x00401cc0\nMOV EAX,dword ptr [RCX + 0x5c]\nADD EAX,dword ptr [RCX + 0x58]\nJMP 0x00401cc5\nMOV EAX,0x1\nMOV ECX,dword ptr [0x158 + RBX]\nLEA EAX,[RAX + RCX*0x2]\nMOV dword ptr [0x13c + RBX],EAX\nCMP word ptr [RBX + 0x34],0x0\nJNZ 0x00401cf9\nMOV EAX,dword ptr [0x130 + RBX]\nMOV ECX,dword ptr [0x138 + RBX]\nIMUL ECX,EAX\nINC EAX\nIMUL EAX,dword ptr [0x168 + RBX]\nADD EAX,ECX\nMOV word ptr [RBX + 0x34],AX\nCMP word ptr [RBX + 0x36],0x0\nJNZ 0x00401d1e\nMOV EAX,dword ptr [0x134 + RBX]\nMOV ECX,dword ptr [0x13c + RBX]\nIMUL ECX,EAX\nINC EAX\nIMUL EAX,dword ptr [0x168 + RBX]\nADD EAX,ECX\nMOV word ptr [RBX + 0x36],AX\nMOV EAX,0xffffffff\nCMP qword ptr [0x160 + RBX],RAX\nJNZ 0x00401d41\nMOV RDI,RBX\nCALL 0x004021a0\nAND RAX,0xffffff00\nMOV qword ptr [0x160 + RBX],RAX\nMOV RDI,RBX\nCALL 0x00402230\nMOV ECX,EAX\nCMP qword ptr [0x160 + RBX],RCX\nJLE 0x00401d6c\nINC EAX\nMOV ECX,dword ptr [0x134 + RBX]\nIMUL ECX,dword ptr [0x130 + RBX]\nSUB EAX,ECX\nMOV qword ptr [0x160 + RBX],RAX\nPOP RBX\nRET\n'
p46
S'53\n48 89 f3\n48 8b 83 28 01 00 00\n48 8b 8b a0 01 00 00\n83 bf 30 01 00 00 00\n7f 0a\nc7 83 30 01 00 00 10 00 00 00\n83 bf 34 01 00 00 00\n7f 0f\n48 85 c9\n74 24\nc7 83 34 01 00 00 10 00 00 00\n83 bf 38 01 00 00 00\n7f 5c\n48 8b 83 a0 01 00 00\n48 85 c0\n74 2a\n8b 40 0c\neb 3c\n48 85 c0\n74 d7\n83 78 20 00\n75 d1\n8b 40 18\n31 d2\nf7 b3 30 01 00 00\nff c0\n89 83 34 01 00 00\n83 f8 11\n7d b9\neb c1\n48 8b 83 28 01 00 00\n48 85 c0\n74 06\n0f bf 40 48\neb 05\nb8 01 00 00 00\n8b 8b 58 01 00 00\n8d 04 48\n89 83 38 01 00 00\n83 bf 3c 01 00 00 00\n7f 39\n48 8b 83 a0 01 00 00\n48 85 c0\n74 05\n8b 40 08\neb 19\n48 8b 8b 28 01 00 00\n48 85 c9\n74 08\n8b 41 5c\n03 41 58\neb 05\nb8 01 00 00 00\n8b 8b 58 01 00 00\n8d 04 48\n89 83 3c 01 00 00\n66 83 7b 34 00\n75 1e\n8b 83 30 01 00 00\n8b 8b 38 01 00 00\n0f af c8\nff c0\n0f af 83 68 01 00 00\n01 c8\n66 89 43 34\n66 83 7b 36 00\n75 1e\n8b 83 34 01 00 00\n8b 8b 3c 01 00 00\n0f af c8\nff c0\n0f af 83 68 01 00 00\n01 c8\n66 89 43 36\nb8 ff ff ff ff\n48 39 83 60 01 00 00\n75 15\n48 89 df\ne8 6c 04 00 00\n48 25 00 ff ff ff\n48 89 83 60 01 00 00\n48 89 df\ne8 e7 04 00 00\n89 c1\n48 39 8b 60 01 00 00\n7e 18\nff c0\n8b 8b 34 01 00 00\n0f af 8b 30 01 00 00\n29 c8\n48 89 83 60 01 00 00\n5b\nc3\n'
p47
S'.text:0000000000401bf0\n.text:0000000000401bf1\n.text:0000000000401bf4\n.text:0000000000401bfb\n.text:0000000000401c02\n.text:0000000000401c09\n.text:0000000000401c0b\n.text:0000000000401c15\n.text:0000000000401c1c\n.text:0000000000401c1e\n.text:0000000000401c21\n.text:0000000000401c23\n.text:0000000000401c2d\n.text:0000000000401c34\n.text:0000000000401c36\n.text:0000000000401c3d\n.text:0000000000401c40\n.text:0000000000401c42\n.text:0000000000401c45\n.text:0000000000401c47\n.text:0000000000401c4a\n.text:0000000000401c4c\n.text:0000000000401c50\n.text:0000000000401c52\n.text:0000000000401c55\n.text:0000000000401c57\n.text:0000000000401c5d\n.text:0000000000401c5f\n.text:0000000000401c65\n.text:0000000000401c68\n.text:0000000000401c6a\n.text:0000000000401c6c\n.text:0000000000401c73\n.text:0000000000401c76\n.text:0000000000401c78\n.text:0000000000401c7c\n.text:0000000000401c7e\n.text:0000000000401c83\n.text:0000000000401c89\n.text:0000000000401c8c\n.text:0000000000401c92\n.text:0000000000401c99\n.text:0000000000401c9b\n.text:0000000000401ca2\n.text:0000000000401ca5\n.text:0000000000401ca7\n.text:0000000000401caa\n.text:0000000000401cac\n.text:0000000000401cb3\n.text:0000000000401cb6\n.text:0000000000401cb8\n.text:0000000000401cbb\n.text:0000000000401cbe\n.text:0000000000401cc0\n.text:0000000000401cc5\n.text:0000000000401ccb\n.text:0000000000401cce\n.text:0000000000401cd4\n.text:0000000000401cd9\n.text:0000000000401cdb\n.text:0000000000401ce1\n.text:0000000000401ce7\n.text:0000000000401cea\n.text:0000000000401cec\n.text:0000000000401cf3\n.text:0000000000401cf5\n.text:0000000000401cf9\n.text:0000000000401cfe\n.text:0000000000401d00\n.text:0000000000401d06\n.text:0000000000401d0c\n.text:0000000000401d0f\n.text:0000000000401d11\n.text:0000000000401d18\n.text:0000000000401d1a\n.text:0000000000401d1e\n.text:0000000000401d23\n.text:0000000000401d2a\n.text:0000000000401d2c\n.text:0000000000401d2f\n.text:0000000000401d34\n.text:0000000000401d3a\n.text:0000000000401d41\n.text:0000000000401d44\n.text:0000000000401d49\n.text:0000000000401d4b\n.text:0000000000401d52\n.text:0000000000401d54\n.text:0000000000401d56\n.text:0000000000401d5c\n.text:0000000000401d63\n.text:0000000000401d65\n.text:0000000000401d6c\n.text:0000000000401d6d\n'
p48
tp49
sS'XtSetLanguageProc'
p50
(S'\n__stdcall XtSetLanguageProc()\n'
p51
V\u000avoid XtSetLanguageProc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetLanguageProc_006061b8)();\u000a  return;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x006061b8]\n'
p53
S'ff 25 c2 47 20 00\n'
p54
S'.plt:00000000004019f0\n'
p55
tp56
sS'XtGetValues'
p57
(S'\n__stdcall XtGetValues()\n'
p58
V\u000avoid XtGetValues(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetValues_00606028)();\u000a  return;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00606028]\n'
p60
S'ff 25 52 49 20 00\n'
p61
S'.plt:00000000004016d0\n'
p62
tp63
sS'FUN_004016a0'
p64
(S'\n__stdcall FUN_004016a0()\n'
p65
V\u000avoid FUN_004016a0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00606010)();\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH qword ptr [0x00606008]\nJMP qword ptr [0x00606010]\n'
p67
S'ff 35 62 49 20 00\nff 25 64 49 20 00\n'
p68
S'.plt:00000000004016a0\n.plt:00000000004016a6\n'
p69
tp70
sS'FcNameUnparse'
p71
(S'\n__stdcall FcNameUnparse()\n'
p72
V\u000avoid FcNameUnparse(void)\u000a\u000a{\u000a  (*(code *)PTR_FcNameUnparse_006061f0)();\u000a  return;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x006061f0]\n'
p74
S'ff 25 8a 47 20 00\n'
p75
S'.plt:0000000000401a60\n'
p76
tp77
sS'frame_dummy'
p78
(S'\n__stdcall frame_dummy()\n'
p79
V\u000a/* WARNING: Removing unreachable block (ram,0x00401b5a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p80
S'MOV EDI,0x605338\nCMP qword ptr [RDI],0x0\nJNZ 0x00401b50\nJMP 0x00401ae0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401b4b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401ae0\n'
p81
S'bf 38 53 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p82
S'.text:0000000000401b40\n.text:0000000000401b45\n.text:0000000000401b49\n.text:0000000000401b4b\n.text:0000000000401b50\n.text:0000000000401b55\n.text:0000000000401b58\n.text:0000000000401b5a\n.text:0000000000401b5b\n.text:0000000000401b5e\n.text:0000000000401b60\n.text:0000000000401b61\n'
p83
tp84
sS'XftColorAllocValue'
p85
(S'\n__stdcall XftColorAllocValue()\n'
p86
V\u000avoid XftColorAllocValue(void)\u000a\u000a{\u000a  (*(code *)PTR_XftColorAllocValue_00606178)();\u000a  return;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00606178]\n'
p88
S'ff 25 02 48 20 00\n'
p89
S'.plt:0000000000401970\n'
p90
tp91
sS'XtAppSetWarningMsgHandler'
p92
(S'\n__stdcall XtAppSetWarningMsgHandler()\n'
p93
V\u000avoid XtAppSetWarningMsgHandler(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppSetWarningMsgHandler_00606088)();\u000a  return;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00606088]\n'
p95
S'ff 25 f2 48 20 00\n'
p96
S'.plt:0000000000401790\n'
p97
tp98
sS'XtAppAddActions'
p99
(S'\n__stdcall XtAppAddActions()\n'
p100
V\u000avoid XtAppAddActions(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppAddActions_006060a8)();\u000a  return;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x006060a8]\n'
p102
S'ff 25 d2 48 20 00\n'
p103
S'.plt:00000000004017d0\n'
p104
tp105
sS'GridFirstChar'
p106
(S'\n__stdcall GridFirstChar(Widget w)\n'
p107
V\u000along GridFirstChar(Widget w)\u000a\u000a{\u000a  Widget p_Var1;\u000a  _XtStateRec *p_Var2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  ulong uVar5;\u000a  uint uVar6;\u000a  long lVar7;\u000a  FcChar32 next;\u000a  FcChar32 map [8];\u000a  undefined local_2c [4];\u000a  uint local_28 [10];\u000a  \u000a  p_Var1 = w[2].core.self;\u000a  if (p_Var1 == (Widget)0x0) {\u000a    p_Var2 = w[1].core.tm.current_state;\u000a    if (p_Var2 == (_XtStateRec *)0x0) {\u000a      uVar5 = 0;\u000a    }\u000a    else {\u000a      uVar5 = (ulong)(*(int *)(p_Var2 + 0x1c) << 8 | *(uint *)(p_Var2 + 0x14));\u000a    }\u000a  }\u000a  else {\u000a    uVar3 = FcCharSetFirstPage((p_Var1->core).parent,local_28,local_2c);\u000a    lVar7 = 0;\u000a    uVar4 = uVar3;\u000a    do {\u000a      uVar6 = local_28[lVar7];\u000a      uVar5 = (ulong)uVar6;\u000a      if (uVar6 != 0) {\u000a        while ((uVar6 & 1) == 0) {\u000a          uVar6 = (uint)uVar5;\u000a          uVar5 = uVar5 >> 1;\u000a          uVar4 = uVar4 + 1;\u000a          uVar6 = uVar6 >> 1;\u000a        }\u000a        return (ulong)uVar4;\u000a      }\u000a      lVar7 = lVar7 + 1;\u000a      uVar4 = uVar4 + 0x20;\u000a    } while (lVar7 < 8);\u000a    uVar5 = (ulong)uVar3;\u000a  }\u000a  return uVar5;\u000a}\u000a\u000a
p108
S'SUB RSP,0x38\nMOV RAX,qword ptr [0x1a0 + RDI]\nTEST RAX,RAX\nJZ 0x004021e8\nMOV RDI,qword ptr [RAX + 0x10]\nLEA RSI,[RSP + 0x10]\nLEA RDX,[RSP + 0xc]\nCALL 0x004019b0\nXOR ESI,ESI\nMOV ECX,EAX\nNOP word ptr [RAX + RAX*0x1]\nMOV EDX,dword ptr [RSP + RSI*0x4 + 0x10]\nTEST EDX,EDX\nJNZ 0x004021ff\nINC RSI\nADD ECX,0x20\nCMP RSI,0x8\nJL 0x004021d0\nMOV ECX,EAX\nJMP 0x00402222\nMOV RAX,qword ptr [0x128 + RDI]\nTEST RAX,RAX\nJZ 0x00402220\nMOV ECX,dword ptr [RAX + 0x1c]\nSHL ECX,0x8\nOR ECX,dword ptr [RAX + 0x14]\nJMP 0x00402222\nTEST DL,0x1\nJNZ 0x00402222\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EAX,EDX\nSHR EAX,1\nINC ECX\nBT EDX,0x1\nMOV EDX,EAX\nJNC 0x00402210\nJMP 0x00402222\nXOR ECX,ECX\nMOV EAX,ECX\nADD RSP,0x38\nRET\n'
p109
S'48 83 ec 38\n48 8b 87 a0 01 00 00\n48 85 c0\n74 38\n48 8b 78 10\n48 8d 74 24 10\n48 8d 54 24 0c\ne8 ed f7 ff ff\n31 f6\n89 c1\n66 0f 1f 84 00 00 00 00 00\n8b 54 b4 10\n85 d2\n75 27\n48 ff c6\n83 c1 20\n48 83 fe 08\n7c ec\n89 c1\neb 3a\n48 8b 87 28 01 00 00\n48 85 c0\n74 2c\n8b 48 1c\nc1 e1 08\n0b 48 14\neb 23\nf6 c2 01\n75 1e\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 d0\nd1 e8\nff c1\n0f ba e2 01\n89 c2\n73 f2\neb 02\n31 c9\n89 c8\n48 83 c4 38\nc3\n'
p110
S'.text:00000000004021a0\n.text:00000000004021a4\n.text:00000000004021ab\n.text:00000000004021ae\n.text:00000000004021b0\n.text:00000000004021b4\n.text:00000000004021b9\n.text:00000000004021be\n.text:00000000004021c3\n.text:00000000004021c5\n.text:00000000004021c7\n.text:00000000004021d0\n.text:00000000004021d4\n.text:00000000004021d6\n.text:00000000004021d8\n.text:00000000004021db\n.text:00000000004021de\n.text:00000000004021e2\n.text:00000000004021e4\n.text:00000000004021e6\n.text:00000000004021e8\n.text:00000000004021ef\n.text:00000000004021f2\n.text:00000000004021f4\n.text:00000000004021f7\n.text:00000000004021fa\n.text:00000000004021fd\n.text:00000000004021ff\n.text:0000000000402202\n.text:0000000000402204\n.text:0000000000402210\n.text:0000000000402212\n.text:0000000000402214\n.text:0000000000402216\n.text:000000000040221a\n.text:000000000040221c\n.text:000000000040221e\n.text:0000000000402220\n.text:0000000000402222\n.text:0000000000402224\n.text:0000000000402228\n'
p111
tp112
sS'XDrawRectangle'
p113
(S'\n__stdcall XDrawRectangle()\n'
p114
V\u000avoid XDrawRectangle(void)\u000a\u000a{\u000a  (*(code *)PTR_XDrawRectangle_006060f8)();\u000a  return;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x006060f8]\n'
p116
S'ff 25 82 48 20 00\n'
p117
S'.plt:0000000000401870\n'
p118
tp119
sS'textdomain'
p120
(S'\n__stdcall textdomain()\n'
p121
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_00606050)();\u000a  return;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00606050]\n'
p123
S'ff 25 2a 49 20 00\n'
p124
S'.plt:0000000000401720\n'
p125
tp126
sS'GridHasChar'
p127
(S'\n__stdcall GridHasChar(Widget w, long ch)\n'
p128
V\u000aBoolean GridHasChar(Widget w,long ch)\u000a\u000a{\u000a  ushort uVar1;\u000a  uint uVar2;\u000a  Widget p_Var3;\u000a  _XtStateRec *p_Var4;\u000a  Boolean BVar5;\u000a  ushort *puVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  \u000a  p_Var3 = w[2].core.self;\u000a  if (p_Var3 != (Widget)0x0) {\u000a    BVar5 = FcCharSetHasChar((p_Var3->core).parent);\u000a    return BVar5;\u000a  }\u000a  p_Var4 = w[1].core.tm.current_state;\u000a  if (p_Var4 == (_XtStateRec *)0x0) {\u000a    return 0;\u000a  }\u000a  if (*(uint *)(p_Var4 + 0x20) == 0) {\u000a    if (ch < (long)(ulong)*(uint *)(p_Var4 + 0x14)) {\u000a      puVar6 = (ushort *)0x0;\u000a      goto LAB_00403006;\u000a    }\u000a    if ((long)(ulong)*(uint *)(p_Var4 + 0x18) < ch) {\u000a      puVar6 = (ushort *)0x0;\u000a      goto LAB_00403006;\u000a    }\u000a    puVar6 = (ushort *)(*(long *)(p_Var4 + 0x50) + (ch - (ulong)*(uint *)(p_Var4 + 0x14)) * 0xc);\u000a    if (*(long *)(p_Var4 + 0x50) == 0) {\u000a      puVar6 = (ushort *)(p_Var4 + 0x38);\u000a    }\u000a    uVar1 = puVar6[2];\u000a  }\u000a  else {\u000a    puVar6 = (ushort *)0x0;\u000a    uVar7 = (uint)((ulong)ch >> 8);\u000a    if ((*(uint *)(p_Var4 + 0x20) < uVar7) || (uVar7 < *(uint *)(p_Var4 + 0x1c))) goto LAB_00403006;\u000a    uVar8 = (uint)ch & 0xff;\u000a    uVar2 = *(uint *)(p_Var4 + 0x14);\u000a    if (uVar8 < uVar2) {\u000a      puVar6 = (ushort *)0x0;\u000a      goto LAB_00403006;\u000a    }\u000a    if (*(uint *)(p_Var4 + 0x18) < uVar8) {\u000a      puVar6 = (ushort *)0x0;\u000a      goto LAB_00403006;\u000a    }\u000a    if (*(long *)(p_Var4 + 0x50) == 0) {\u000a      puVar6 = (ushort *)(p_Var4 + 0x38);\u000a      uVar1 = *(ushort *)(p_Var4 + 0x3c);\u000a    }\u000a    else {\u000a      puVar6 = (ushort *)\u000a               (*(long *)(p_Var4 + 0x50) +\u000a               (ulong)((uVar8 - uVar2) +\u000a                      ((1 - uVar2) + *(uint *)(p_Var4 + 0x18)) * (uVar7 - *(uint *)(p_Var4 + 0x1c)))\u000a               * 0xc);\u000a      uVar1 = puVar6[2];\u000a    }\u000a  }\u000a  if ((uVar1 == 0) && ((ushort)(*puVar6 | puVar6[1] | puVar6[3] | puVar6[4]) == 0)) {\u000a    puVar6 = (ushort *)0x0;\u000a  }\u000aLAB_00403006:\u000a  return (Boolean)(puVar6 != (ushort *)0x0);\u000a}\u000a\u000a
p129
S'MOV RAX,qword ptr [0x1a0 + RDI]\nTEST RAX,RAX\nJZ 0x00402f2b\nPUSH RAX\nMOV RDI,qword ptr [RAX + 0x10]\nCALL 0x00401890\nADD RSP,0x8\nRET\nMOV RCX,qword ptr [0x128 + RDI]\nTEST RCX,RCX\nJZ 0x00402f6c\nMOV EDI,dword ptr [RCX + 0x20]\nTEST EDI,EDI\nJZ 0x00402f6f\nMOV RDX,RSI\nSHR RDX,0x8\nXOR EAX,EAX\nCMP EDX,EDI\nJA 0x00403006\nSUB EDX,dword ptr [RCX + 0x1c]\nJC 0x00403006\nMOVZX EDI,SIL\nMOV ESI,dword ptr [RCX + 0x14]\nMOV EAX,EDI\nSUB EAX,ESI\nJNC 0x00402f8a\nXOR EAX,EAX\nJMP 0x00403006\nXOR EAX,EAX\nRET\nMOV EAX,dword ptr [RCX + 0x14]\nCMP RAX,RSI\nJLE 0x00402f7e\nXOR EAX,EAX\nJMP 0x00403006\nMOV EDX,dword ptr [RCX + 0x18]\nCMP RDX,RSI\nJGE 0x00402f97\nXOR EAX,EAX\nJMP 0x00403006\nMOV R9D,dword ptr [RCX + 0x18]\nCMP EDI,R9D\nJBE 0x00402fba\nXOR EAX,EAX\nJMP 0x00403006\nMOV RDX,qword ptr [RCX + 0x50]\nADD RCX,0x38\nSUB RSI,RAX\nTEST RDX,RDX\nLEA RAX,[RSI + RSI*0x2]\nLEA RAX,[RDX + RAX*0x4]\nCMOVZ RAX,RCX\nCMP word ptr [RAX + 0x4],0x0\nJNZ 0x00403006\nJMP 0x00402ff1\nMOV R8,qword ptr [RCX + 0x50]\nTEST R8,R8\nJZ 0x00402fe3\nMOV ECX,0x1\nSUB ECX,ESI\nADD ECX,R9D\nIMUL ECX,EDX\nADD EAX,ECX\nLEA RAX,[RAX + RAX*0x2]\nLEA RAX,[R8 + RAX*0x4]\nCMP word ptr [RAX + 0x4],0x0\nJNZ 0x00403006\nJMP 0x00402ff1\nADD RCX,0x38\nMOV RAX,RCX\nCMP word ptr [RAX + 0x4],0x0\nJNZ 0x00403006\nMOVZX ECX,word ptr [RAX]\nOR CX,word ptr [RAX + 0x2]\nOR CX,word ptr [RAX + 0x6]\nXOR EDX,EDX\nOR CX,word ptr [RAX + 0x8]\nCMOVZ RAX,RDX\nTEST RAX,RAX\nSETNZ AL\nRET\n'
p130
S'48 8b 87 a0 01 00 00\n48 85 c0\n74 0f\n50\n48 8b 78 10\ne8 6a e9 ff ff\n48 83 c4 08\nc3\n48 8b 8f 28 01 00 00\n48 85 c9\n74 35\n8b 79 20\n85 ff\n74 31\n48 89 f2\n48 c1 ea 08\n31 c0\n39 fa\n0f 87 b7 00 00 00\n2b 51 1c\n0f 82 ae 00 00 00\n40 0f b6 fe\n8b 71 14\n89 f8\n29 f0\n73 25\n31 c0\ne9 9a 00 00 00\n31 c0\nc3\n8b 41 14\n48 39 f0\n7e 07\n31 c0\ne9 88 00 00 00\n8b 51 18\n48 39 f2\n7d 11\n31 c0\neb 7c\n44 8b 49 18\n44 39 cf\n76 27\n31 c0\neb 6f\n48 8b 51 50\n48 83 c1 38\n48 29 c6\n48 85 d2\n48 8d 04 76\n48 8d 04 82\n48 0f 44 c1\n66 83 78 04 00\n75 4e\neb 37\n4c 8b 41 50\n4d 85 c0\n74 20\nb9 01 00 00 00\n29 f1\n44 01 c9\n0f af ca\n01 c8\n48 8d 04 40\n49 8d 04 80\n66 83 78 04 00\n75 25\neb 0e\n48 83 c1 38\n48 89 c8\n66 83 78 04 00\n75 15\n0f b7 08\n66 0b 48 02\n66 0b 48 06\n31 d2\n66 0b 48 08\n48 0f 44 c2\n48 85 c0\n0f 95 c0\nc3\n'
p131
S'.text:0000000000402f10\n.text:0000000000402f17\n.text:0000000000402f1a\n.text:0000000000402f1c\n.text:0000000000402f1d\n.text:0000000000402f21\n.text:0000000000402f26\n.text:0000000000402f2a\n.text:0000000000402f2b\n.text:0000000000402f32\n.text:0000000000402f35\n.text:0000000000402f37\n.text:0000000000402f3a\n.text:0000000000402f3c\n.text:0000000000402f3e\n.text:0000000000402f41\n.text:0000000000402f45\n.text:0000000000402f47\n.text:0000000000402f49\n.text:0000000000402f4f\n.text:0000000000402f52\n.text:0000000000402f58\n.text:0000000000402f5c\n.text:0000000000402f5f\n.text:0000000000402f61\n.text:0000000000402f63\n.text:0000000000402f65\n.text:0000000000402f67\n.text:0000000000402f6c\n.text:0000000000402f6e\n.text:0000000000402f6f\n.text:0000000000402f72\n.text:0000000000402f75\n.text:0000000000402f77\n.text:0000000000402f79\n.text:0000000000402f7e\n.text:0000000000402f81\n.text:0000000000402f84\n.text:0000000000402f86\n.text:0000000000402f88\n.text:0000000000402f8a\n.text:0000000000402f8e\n.text:0000000000402f91\n.text:0000000000402f93\n.text:0000000000402f95\n.text:0000000000402f97\n.text:0000000000402f9b\n.text:0000000000402f9f\n.text:0000000000402fa2\n.text:0000000000402fa5\n.text:0000000000402fa9\n.text:0000000000402fad\n.text:0000000000402fb1\n.text:0000000000402fb6\n.text:0000000000402fb8\n.text:0000000000402fba\n.text:0000000000402fbe\n.text:0000000000402fc1\n.text:0000000000402fc3\n.text:0000000000402fc8\n.text:0000000000402fca\n.text:0000000000402fcd\n.text:0000000000402fd0\n.text:0000000000402fd2\n.text:0000000000402fd6\n.text:0000000000402fda\n.text:0000000000402fdf\n.text:0000000000402fe1\n.text:0000000000402fe3\n.text:0000000000402fe7\n.text:0000000000402fea\n.text:0000000000402fef\n.text:0000000000402ff1\n.text:0000000000402ff4\n.text:0000000000402ff8\n.text:0000000000402ffc\n.text:0000000000402ffe\n.text:0000000000403002\n.text:0000000000403006\n.text:0000000000403009\n.text:000000000040300c\n'
p132
tp133
sS'FcCharSetFirstPage'
p134
(S'\n__stdcall FcCharSetFirstPage()\n'
p135
V\u000avoid FcCharSetFirstPage(void)\u000a\u000a{\u000a  (*(code *)PTR_FcCharSetFirstPage_00606198)();\u000a  return;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00606198]\n'
p137
S'ff 25 e2 47 20 00\n'
p138
S'.plt:00000000004019b0\n'
p139
tp140
sS'exit'
p141
(S'\n__stdcall exit(int __status)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00606058)();\u000a  return;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00606058]\n'
p144
S'ff 25 22 49 20 00\n'
p145
S'.plt:0000000000401730\n'
p146
tp147
sS'paint_grid'
p148
(S'\n__stdcall paint_grid(FontGridWidget fgw)\n'
p149
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000avoid paint_grid(FontGridWidget fgw)\u000a\u000a{\u000a  XFontStruct *pXVar1;\u000a  uint uVar2;\u000a  ulong uVar3;\u000a  uint in_ECX;\u000a  XftFont *pXVar4;\u000a  undefined8 in_RDX;\u000a  int iVar5;\u000a  int iVar6;\u000a  int iVar7;\u000a  uint in_ESI;\u000a  ulong in_R8;\u000a  int iVar8;\u000a  int iVar9;\u000a  XGlyphInfo extents;\u000a  Display *dpy;\u000a  Window wind;\u000a  int direction;\u000a  ulong local_c8;\u000a  undefined4 uVar11;\u000a  ushort *puVar10;\u000a  undefined local_c0;\u000a  undefined local_bf;\u000a  int local_b8;\u000a  int local_b4;\u000a  ulong local_b0;\u000a  ushort local_a8;\u000a  ushort local_a6;\u000a  short local_a4;\u000a  short local_a2;\u000a  short local_a0;\u000a  _XDisplay *local_98;\u000a  ulong local_90;\u000a  Window local_88;\u000a  ulong local_80;\u000a  ulong local_78;\u000a  ulong local_70;\u000a  int local_68;\u000a  uint local_64;\u000a  ulong local_60;\u000a  int local_54;\u000a  int local_50;\u000a  int local_4c;\u000a  int local_48;\u000a  int local_44;\u000a  XftColor *local_40;\u000a  long local_38;\u000a  \u000a  local_70 = (ulong)in_ECX;\u000a  local_90 = (ulong)in_ESI;\u000a  local_88 = (fgw->core).window;\u000a  local_98 = ((fgw->core).screen)->display;\u000a  local_b8 = (fgw->fontgrid).grid_width;\u000a  local_b4 = (fgw->fontgrid).cell_width + local_b8;\u000a  local_b8 = local_b8 + (fgw->fontgrid).cell_height;\u000a  local_68 = (fgw->fontgrid).cell_cols;\u000a  iVar7 = (fgw->fontgrid).cell_rows;\u000a  local_80 = in_RDX;\u000a  local_78 = in_R8;\u000a  local_38 = GridLastChar((Widget)fgw);\u000a  iVar6 = local_b4;\u000a  if ((local_68 <= (int)(in_ECX + in_ESI)) &&\u000a     (local_70 = (ulong)(local_68 - in_ESI), local_68 - in_ESI == 0 || local_68 < (int)in_ESI)) {\u000a    return;\u000a  }\u000a  if ((iVar7 <= (int)local_78 + (int)local_80) &&\u000a     (local_78 = (ulong)(uint)(iVar7 - (int)local_80),\u000a     iVar7 - (int)local_80 == 0 || iVar7 < (int)local_80)) {\u000a    return;\u000a  }\u000a  iVar7 = (int)local_78;\u000a  uVar2 = (fgw->fontgrid).grid_width;\u000a  local_90._0_4_ = in_ESI;\u000a  if (0 < (int)uVar2) {\u000a    uVar2 = uVar2 >> 1;\u000a    uVar3 = (ulong)(local_b4 * in_ESI + uVar2);\u000a    local_b0 = local_b0 & 0xffffffff00000000 | uVar3;\u000a    uVar2 = local_b8 * (int)local_80 + uVar2;\u000a    iVar5 = (int)local_70;\u000a    if (-1 < iVar5) {\u000a      local_60 = local_60 & 0xffffffff00000000 | (ulong)(iVar7 * local_b8 + uVar2);\u000a      iVar7 = -1;\u000a      do {\u000a        local_c8 = local_c8 & 0xffffffff00000000 | local_60 & 0xffffffff;\u000a        XDrawLine(local_98,local_88,(fgw->fontgrid).box_gc,uVar3,(ulong)uVar2,uVar3,local_c8);\u000a        uVar3 = (ulong)(uint)((int)uVar3 + iVar6);\u000a        iVar7 = iVar7 + 1;\u000a      } while (iVar7 < iVar5);\u000a    }\u000a    iVar6 = local_b8;\u000a    iVar7 = (int)local_78;\u000a    if (-1 < iVar7) {\u000a      iVar9 = (int)local_70 * local_b4;\u000a      iVar5 = -1;\u000a      do {\u000a        local_c8 = local_c8 & 0xffffffff00000000 | (ulong)uVar2;\u000a        XDrawLine(local_98,local_88,(fgw->fontgrid).box_gc,local_b0 & 0xffffffff,(ulong)uVar2,\u000a                  (ulong)(uint)(iVar9 + (int)local_b0),local_c8);\u000a        uVar2 = uVar2 + iVar6;\u000a        iVar5 = iVar5 + 1;\u000a      } while (iVar5 < iVar7);\u000a    }\u000a  }\u000a  local_60 = (ulong)(local_68 * (int)local_80 + (uint)local_90 + *(int *)&(fgw->fontgrid).start_char\u000a                    );\u000a  iVar6 = (fgw->fontgrid).internal_pad;\u000a  iVar5 = (fgw->fontgrid).grid_width;\u000a  pXVar4 = (fgw->fontgrid).text_face;\u000a  if (pXVar4 == (XftFont *)0x0) {\u000a    pXVar1 = (fgw->fontgrid).text_font;\u000a    if (pXVar1 == (XFontStruct *)0x0) {\u000a      iVar9 = 1;\u000a      goto LAB_00402a44;\u000a    }\u000a    pXVar4 = (XftFont *)&pXVar1->ascent;\u000a  }\u000a  iVar9 = pXVar4->ascent;\u000aLAB_00402a44:\u000a  iVar8 = (int)local_70;\u000a  local_90._0_4_ = (uint)local_90 * local_b4;\u000a  local_90 = (ulong)(uint)local_90;\u000a  local_80 = (ulong)(uint)((int)local_80 * local_b8);\u000a  if (0 < iVar7) {\u000a    local_50 = iVar6 + (uint)local_90 + iVar5;\u000a    local_b0 = (ulong)(uint)(iVar6 + (int)local_80 * local_b8 + iVar5 + iVar9);\u000a    local_40 = &(fgw->fontgrid).fg_color;\u000a    local_54 = 0;\u000a    uVar3 = local_70;\u000a    do {\u000a      if (0 < (int)uVar3) {\u000a        iVar6 = 0;\u000a        iVar7 = local_50;\u000a        do {\u000a          uVar11 = (undefined4)(local_c8 >> 0x20);\u000a          iVar8 = (int)uVar3;\u000a          uVar2 = (int)local_60 + iVar6;\u000a          if ((uint)local_38 < uVar2) goto LAB_00402dbf;\u000a          iVar5 = (fgw->fontgrid).xoff;\u000a          iVar9 = (fgw->fontgrid).yoff;\u000a          pXVar4 = (fgw->fontgrid).text_face;\u000a          if (pXVar4 == (XftFont *)0x0) {\u000a            local_c0 = (undefined)((ulong)uVar2 >> 8);\u000a            local_bf = (undefined)uVar2;\u000a            if (((fgw->fontgrid).box_chars != 0) ||\u000a               (uVar3 = local_70, (fgw->fontgrid).center_chars != 0)) {\u000a              puVar10 = &local_a8;\u000a              XTextExtents16((fgw->fontgrid).text_font,&local_c0,1,&local_64,&local_44,&local_48,\u000a                             puVar10);\u000a              uVar3 = local_70;\u000a              uVar11 = (undefined4)((ulong)puVar10 >> 0x20);\u000a              if ((fgw->fontgrid).center_chars != 0) {\u000a                uVar2 = ((fgw->fontgrid).cell_width - (int)(short)local_a6) + (int)(short)local_a8;\u000a                iVar9 = (fgw->fontgrid).internal_pad;\u000a                iVar5 = ((int)((uVar2 >> 0x1f) + uVar2) >> 1) - ((int)(short)local_a8 + iVar9);\u000a                uVar2 = ((fgw->fontgrid).cell_height - (int)local_a0) - (int)local_a2;\u000a                iVar9 = (((int)local_a2 - iVar9) - ((fgw->fontgrid).text_font)->ascent) +\u000a                        ((int)((uVar2 >> 0x1f) + uVar2) >> 1);\u000a              }\u000a              if ((fgw->fontgrid).box_chars != 0) {\u000a                uVar11 = (undefined4)(((ulong)puVar10 & 0xffffffff00000000) >> 0x20);\u000a                XDrawRectangle(local_98,local_88,(fgw->fontgrid).box_gc,(ulong)(uint)(iVar5 + iVar7)\u000a                               ,(ulong)(uint)((iVar9 + (int)local_b0) -\u000a                                             ((fgw->fontgrid).text_font)->ascent),\u000a                               (ulong)((int)local_a4 - 1),\u000a                               (ulong)puVar10 & 0xffffffff00000000 |\u000a                               (ulong)(uint)(local_44 + -1 + local_48));\u000a              }\u000a            }\u000a            local_c8 = CONCAT44(uVar11,1);\u000a            XDrawString16(local_98,local_88,(fgw->fontgrid).text_gc,(ulong)(uint)(iVar5 + iVar7),\u000a                          (ulong)(uint)(iVar9 + (int)local_b0),&local_c0,local_c8);\u000a          }\u000a          else {\u000a            local_64 = uVar2;\u000a            XftTextExtents32(local_98,pXVar4,&local_64);\u000a            if ((fgw->fontgrid).center_chars != 0) {\u000a              uVar2 = (fgw->fontgrid).cell_width - (uint)local_a8;\u000a              iVar5 = ((int)((uVar2 >> 0x1f) + uVar2) >> 1) - (int)local_a4;\u000a              uVar2 = (fgw->fontgrid).cell_height - (uint)local_a6;\u000a              iVar9 = ((int)((uVar2 >> 0x1f) + uVar2) >> 1) - (int)local_a2;\u000a            }\u000a            if ((local_a8 != 0) && (local_a6 != 0)) {\u000a              local_4c = iVar9 + (int)local_b0;\u000a              XClearArea(local_98,local_88,(ulong)(uint)((iVar5 - (int)local_a4) + iVar7));\u000a              if ((fgw->fontgrid).box_chars != 0) {\u000a                XDrawRectangle(local_98,local_88,(fgw->fontgrid).box_gc,\u000a                               (ulong)(uint)((iVar5 - (int)local_a4) + iVar7),\u000a                               (ulong)(uint)(local_4c - (int)local_a2),(ulong)((uint)local_a8 - 1));\u000a              }\u000a            }\u000a            local_c8 = CONCAT44(uVar11,1);\u000a            XftDrawString32((fgw->fontgrid).draw,local_40,pXVar4);\u000a            uVar3 = local_70;\u000a          }\u000a          iVar6 = iVar6 + 1;\u000a          iVar7 = iVar7 + local_b4;\u000a        } while (iVar6 < (int)uVar3);\u000a      }\u000a      iVar8 = (int)uVar3;\u000a      local_60 = (ulong)(uint)((int)local_60 + local_68);\u000a      local_54 = local_54 + 1;\u000a      local_b0 = (ulong)(uint)((int)local_b0 + local_b8);\u000a    } while (local_54 < (int)local_78);\u000a  }\u000aLAB_00402dbf:\u000a  iVar7 = local_b4;\u000a  uVar2 = (fgw->fontgrid).grid_width;\u000a  if (0 < (int)uVar2) {\u000a    uVar2 = uVar2 >> 1;\u000a    uVar3 = (ulong)((uint)local_90 + uVar2);\u000a    uVar2 = uVar2 + (int)local_80;\u000a    local_90 = uVar3;\u000a    if (-1 < iVar8) {\u000a      local_b0 = local_b0 & 0xffffffff00000000 | (ulong)((int)local_78 * local_b8 + uVar2);\u000a      iVar6 = -1;\u000a      local_90 = uVar3;\u000a      do {\u000a        local_c8 = local_c8 & 0xffffffff00000000 | local_b0 & 0xffffffff;\u000a        XDrawLine(local_98,local_88,(fgw->fontgrid).box_gc,uVar3,(ulong)uVar2,uVar3,local_c8);\u000a        uVar3 = (ulong)(uint)((int)uVar3 + iVar7);\u000a        iVar6 = iVar6 + 1;\u000a      } while (iVar6 < iVar8);\u000a    }\u000a    iVar7 = local_b8;\u000a    iVar6 = (int)local_78;\u000a    if (-1 < iVar6) {\u000a      iVar8 = iVar8 * local_b4;\u000a      iVar5 = -1;\u000a      do {\u000a        local_c8 = local_c8 & 0xffffffff00000000 | (ulong)uVar2;\u000a        XDrawLine(local_98,local_88,(fgw->fontgrid).box_gc,local_90,(ulong)uVar2,\u000a                  (ulong)(iVar8 + (uint)local_90),local_c8);\u000a        uVar2 = uVar2 + iVar7;\u000a        iVar5 = iVar5 + 1;\u000a      } while (iVar5 < iVar6);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV qword ptr [RSP + 0x50],R8\nMOV EBP,ECX\nMOV qword ptr [RSP + 0x48],RDX\nMOV R14D,ESI\nMOV R13,RDI\nMOV RAX,qword ptr [0x98 + R13]\nMOV RCX,qword ptr [0xa8 + R13]\nMOV qword ptr [RSP + 0x40],RCX\nMOV RAX,qword ptr [RAX + 0x8]\nMOV qword ptr [RSP + 0x30],RAX\nMOV EBX,dword ptr [0x168 + R13]\nMOV EAX,dword ptr [0x138 + R13]\nADD EAX,EBX\nMOV dword ptr [RSP + 0x14],EAX\nADD EBX,dword ptr [0x13c + R13]\nMOV R15D,dword ptr [0x130 + R13]\nMOV R12D,dword ptr [0x134 + R13]\nCALL 0x00402230\nMOV RCX,R14\nMOV R14,qword ptr [RSP + 0x50]\nMOV qword ptr [0x90 + RSP],RAX\nLEA EAX,[RBP + RCX*0x1]\nMOV dword ptr [RSP + 0x60],R15D\nCMP EAX,R15D\nJL 0x004028b9\nMOV EAX,dword ptr [RSP + 0x60]\nMOV EBP,EAX\nSUB EBP,ECX\nJLE 0x00402e9e\nMOV RAX,qword ptr [RSP + 0x48]\nLEA EAX,[R14 + RAX*0x1]\nCMP EAX,R12D\nJL 0x004028d5\nSUB R12D,dword ptr [RSP + 0x48]\nMOV R14D,R12D\nJLE 0x00402e9e\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x58],RBP\nMOV EAX,dword ptr [0x168 + R13]\nTEST EAX,EAX\nMOV R8,R14\nMOV qword ptr [RSP + 0x50],R8\nMOV dword ptr [RSP + 0x10],EBX\nJLE 0x004029e4\nSHR EAX,1\nMOV EDX,dword ptr [RSP + 0x14]\nMOV ECX,EDX\nIMUL ECX,dword ptr [RSP + 0x38]\nADD ECX,EAX\nMOV dword ptr [RSP + 0x18],ECX\nMOV R12D,EBX\nIMUL R12D,dword ptr [RSP + 0x48]\nADD R12D,EAX\nMOV RCX,qword ptr [RSP + 0x58]\nTEST ECX,ECX\nJS 0x00402979\nMOV RAX,qword ptr [RSP + 0x50]\nIMUL EAX,dword ptr [RSP + 0x10]\nADD EAX,R12D\nMOV dword ptr [RSP + 0x68],EAX\nMOV EBP,0xffffffff\nMOV EBX,dword ptr [RSP + 0x18]\nNOP dword ptr [RAX]\nMOV R14D,EDX\nMOV RDX,qword ptr [0x178 + R13]\nMOV EAX,dword ptr [RSP + 0x68]\nMOV dword ptr [RSP],EAX\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nMOV R15,RCX\nMOV ECX,EBX\nMOV R8D,R12D\nMOV R9D,EBX\nCALL 0x00401800\nMOV RCX,R15\nMOV EDX,R14D\nADD EBX,EDX\nINC EBP\nCMP EBP,ECX\nJL 0x00402940\nMOV R8,qword ptr [RSP + 0x50]\nTEST R8D,R8D\nMOV R14D,dword ptr [RSP + 0x10]\nMOV ECX,dword ptr [RSP + 0x18]\nJS 0x004029e4\nMOV RAX,qword ptr [RSP + 0x58]\nMOV R15D,EAX\nIMUL R15D,dword ptr [RSP + 0x14]\nADD R15D,ECX\nMOV EBX,0xffffffff\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDX,qword ptr [0x178 + R13]\nMOV dword ptr [RSP],R12D\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nMOV ECX,dword ptr [RSP + 0x18]\nMOV RBP,R8\nMOV R8D,R12D\nMOV R9D,R15D\nCALL 0x00401800\nMOV R8,RBP\nADD R12D,R14D\nINC EBX\nCMP EBX,R8D\nJL 0x004029b0\nMOV EAX,dword ptr [RSP + 0x60]\nIMUL EAX,dword ptr [RSP + 0x48]\nMOV RDX,qword ptr [RSP + 0x38]\nADD EAX,EDX\nADD EAX,dword ptr [0x160 + R13]\nMOV qword ptr [RSP + 0x68],RAX\nMOV EBP,dword ptr [0x158 + R13]\nMOV EAX,dword ptr [0x168 + R13]\nMOV RCX,qword ptr [0x1a0 + R13]\nTEST RCX,RCX\nJZ 0x00402a25\nMOV R12,qword ptr [RSP + 0x58]\nMOV ESI,dword ptr [RSP + 0x10]\nJMP 0x00402a42\nMOV RCX,qword ptr [0x128 + R13]\nTEST RCX,RCX\nMOV R12,qword ptr [RSP + 0x58]\nMOV ESI,dword ptr [RSP + 0x10]\nJZ 0x00402eb0\nADD RCX,0x58\nMOV ECX,dword ptr [RCX]\nMOV EDI,dword ptr [RSP + 0x14]\nIMUL EDX,EDI\nMOV qword ptr [RSP + 0x38],RDX\nMOV RDX,qword ptr [RSP + 0x48]\nIMUL EDX,ESI\nMOV qword ptr [RSP + 0x48],RDX\nTEST R8D,R8D\nJLE 0x00402dbf\nMOV RDX,qword ptr [RSP + 0x38]\nLEA EDX,[RBP + RDX*0x1]\nADD EBP,dword ptr [RSP + 0x48]\nADD EDX,EAX\nMOV dword ptr [RSP + 0x78],EDX\nADD EBP,EAX\nADD EBP,ECX\nMOV qword ptr [RSP + 0x18],RBP\nLEA RAX,[0x190 + R13]\nMOV qword ptr [0x88 + RSP],RAX\nMOV dword ptr [RSP + 0x74],0x0\nTEST R12D,R12D\nJLE 0x00402d8f\nXOR EBX,EBX\nMOV EAX,dword ptr [RSP + 0x78]\nMOV EBP,EAX\nNOP word ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [RSP + 0x68]\nLEA EAX,[RAX + RBX*0x1]\nCMP EAX,dword ptr [0x90 + RSP]\nJA 0x00402dbf\nMOV R14D,dword ptr [0x180 + R13]\nMOV R15D,dword ptr [0x184 + R13]\nMOV R12,qword ptr [0x1a0 + R13]\nTEST R12,R12\nJZ 0x00402c30\nMOV dword ptr [RSP + 0x64],EAX\nMOV ECX,0x1\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,R12\nLEA RDX,[RSP + 0x64]\nLEA R8,[RSP + 0x20]\nCALL 0x00401840\nCMP byte ptr [0x148 + R13],0x0\nMOVZX R8D,word ptr [RSP + 0x20]\nJZ 0x00402b55\nMOV EAX,dword ptr [0x138 + R13]\nMOV ECX,dword ptr [0x13c + R13]\nSUB EAX,R8D\nMOV R14D,EAX\nSHR R14D,0x1f\nADD R14D,EAX\nSAR R14D,1\nMOVSX EAX,word ptr [RSP + 0x24]\nSUB R14D,EAX\nMOVZX EAX,word ptr [RSP + 0x22]\nSUB ECX,EAX\nMOV R15D,ECX\nSHR R15D,0x1f\nADD R15D,ECX\nSAR R15D,1\nMOVSX EAX,word ptr [RSP + 0x26]\nSUB R15D,EAX\nTEST R8W,R8W\nJZ 0x00402bf0\nMOVZX R9D,word ptr [RSP + 0x22]\nTEST R9D,R9D\nJZ 0x00402bf0\nMOVSX EAX,word ptr [RSP + 0x24]\nMOV EDX,R14D\nSUB EDX,EAX\nADD EDX,EBP\nMOV RAX,qword ptr [RSP + 0x18]\nLEA ECX,[R15 + RAX*0x1]\nMOVSX EAX,word ptr [RSP + 0x26]\nMOV dword ptr [RSP + 0x7c],ECX\nSUB ECX,EAX\nMOV dword ptr [RSP],0x0\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nCALL 0x004018d0\nCMP byte ptr [0x149 + R13],0x0\nJZ 0x00402bf0\nMOV RDX,qword ptr [0x178 + R13]\nMOVSX EAX,word ptr [RSP + 0x24]\nMOV ECX,R14D\nSUB ECX,EAX\nADD ECX,EBP\nMOVSX EAX,word ptr [RSP + 0x26]\nMOV R8D,dword ptr [RSP + 0x7c]\nSUB R8D,EAX\nMOVZX R9D,word ptr [RSP + 0x20]\nDEC R9D\nMOVZX EAX,word ptr [RSP + 0x22]\nDEC EAX\nMOV dword ptr [RSP],EAX\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nCALL 0x00401870\nMOV RDI,qword ptr [0x188 + R13]\nADD R14D,EBP\nADD R15D,dword ptr [RSP + 0x18]\nMOV dword ptr [RSP],0x1\nMOV RSI,qword ptr [0x88 + RSP]\nMOV RDX,R12\nMOV ECX,R14D\nMOV R8D,R15D\nLEA R9,[RSP + 0x64]\nCALL 0x004017c0\nMOV R12,qword ptr [RSP + 0x58]\nJMP 0x00402d80\nMOV byte ptr [RSP + 0x8],AH\nMOV byte ptr [RSP + 0x9],AL\nCMP byte ptr [0x149 + R13],0x0\nJNZ 0x00402c50\nCMP byte ptr [0x148 + R13],0x0\nJZ 0x00402d4a\nMOV RDI,qword ptr [0x128 + R13]\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP],RAX\nMOV EDX,0x1\nLEA RSI,[RSP + 0x8]\nLEA RCX,[RSP + 0x64]\nLEA R8,[0x84 + RSP]\nLEA R9,[0x80 + RSP]\nCALL 0x00401750\nCMP byte ptr [0x148 + R13],0x0\nJZ 0x00402ced\nMOV EAX,dword ptr [0x138 + R13]\nMOVSX ECX,word ptr [RSP + 0x22]\nMOVSX EDX,word ptr [RSP + 0x20]\nSUB EAX,ECX\nADD EAX,EDX\nMOV R14D,EAX\nSHR R14D,0x1f\nADD R14D,EAX\nSAR R14D,1\nMOV EAX,dword ptr [0x158 + R13]\nADD EDX,EAX\nSUB R14D,EDX\nMOV ECX,dword ptr [0x13c + R13]\nMOVSX EDX,word ptr [RSP + 0x28]\nMOVSX R15D,word ptr [RSP + 0x26]\nSUB ECX,EDX\nSUB ECX,R15D\nMOV EDX,ECX\nSHR EDX,0x1f\nADD EDX,ECX\nSAR EDX,1\nMOV RCX,qword ptr [0x128 + R13]\nSUB R15D,EAX\nSUB R15D,dword ptr [RCX + 0x58]\nADD R15D,EDX\nCMP byte ptr [0x149 + R13],0x0\nMOV R12,qword ptr [RSP + 0x58]\nJZ 0x00402d50\nMOV RAX,qword ptr [0x128 + R13]\nMOV RDX,qword ptr [0x178 + R13]\nLEA ECX,[R14 + RBP*0x1]\nMOV RSI,qword ptr [RSP + 0x18]\nLEA R8D,[R15 + RSI*0x1]\nSUB R8D,dword ptr [RAX + 0x58]\nMOVSX R9D,word ptr [RSP + 0x24]\nDEC R9D\nMOV EAX,dword ptr [0x84 + RSP]\nMOV ESI,dword ptr [0x80 + RSP]\nLEA EAX,[RAX + RSI*0x1 + -0x1]\nMOV dword ptr [RSP],EAX\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nCALL 0x00401870\nJMP 0x00402d50\nMOV R12,qword ptr [RSP + 0x58]\nNOP\nMOV RSI,qword ptr [RSP + 0x40]\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RDX,qword ptr [0x170 + R13]\nADD R14D,EBP\nADD R15D,dword ptr [RSP + 0x18]\nMOV dword ptr [RSP],0x1\nMOV ECX,R14D\nMOV R8D,R15D\nLEA R9,[RSP + 0x8]\nCALL 0x004019a0\nINC EBX\nADD EBP,dword ptr [RSP + 0x14]\nCMP EBX,R12D\nJL 0x00402ab0\nMOV RAX,qword ptr [RSP + 0x68]\nADD EAX,dword ptr [RSP + 0x60]\nMOV qword ptr [RSP + 0x68],RAX\nMOV ECX,dword ptr [RSP + 0x74]\nINC ECX\nMOV RAX,qword ptr [RSP + 0x18]\nADD EAX,dword ptr [RSP + 0x10]\nMOV qword ptr [RSP + 0x18],RAX\nMOV dword ptr [RSP + 0x74],ECX\nCMP ECX,dword ptr [RSP + 0x50]\nJL 0x00402a99\nMOV R15D,dword ptr [0x168 + R13]\nTEST R15D,R15D\nMOV RAX,qword ptr [RSP + 0x38]\nMOV R14,R12\nJLE 0x00402e9e\nSHR R15D,1\nADD EAX,R15D\nMOV qword ptr [RSP + 0x38],RAX\nADD R15D,dword ptr [RSP + 0x48]\nTEST R14D,R14D\nMOV EDX,dword ptr [RSP + 0x14]\nJS 0x00402e44\nMOV RAX,qword ptr [RSP + 0x50]\nIMUL EAX,dword ptr [RSP + 0x10]\nADD EAX,R15D\nMOV dword ptr [RSP + 0x18],EAX\nMOV EBP,0xffffffff\nMOV RAX,qword ptr [RSP + 0x38]\nMOV EBX,EAX\nNOP dword ptr [RAX]\nMOV R12D,EDX\nMOV RDX,qword ptr [0x178 + R13]\nMOV EAX,dword ptr [RSP + 0x18]\nMOV dword ptr [RSP],EAX\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nMOV ECX,EBX\nMOV R8D,R15D\nMOV R9D,EBX\nCALL 0x00401800\nMOV EDX,R12D\nADD EBX,EDX\nINC EBP\nCMP EBP,R14D\nJL 0x00402e10\nMOV RBP,qword ptr [RSP + 0x50]\nTEST EBP,EBP\nMOV R12D,dword ptr [RSP + 0x10]\nJS 0x00402e9e\nIMUL R14D,dword ptr [RSP + 0x14]\nADD R14D,dword ptr [RSP + 0x38]\nMOV EBX,0xffffffff\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDX,qword ptr [0x178 + R13]\nMOV dword ptr [RSP],R15D\nMOV RDI,qword ptr [RSP + 0x30]\nMOV RSI,qword ptr [RSP + 0x40]\nMOV RCX,qword ptr [RSP + 0x38]\nMOV R8D,R15D\nMOV R9D,R14D\nCALL 0x00401800\nADD R15D,R12D\nINC EBX\nCMP EBX,EBP\nJL 0x00402e70\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV ECX,0x1\nJMP 0x00402a44\n'
p151
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 89 44 24 50\n89 cd\n48 89 54 24 48\n41 89 f6\n49 89 fd\n49 8b 85 98 00 00 00\n49 8b 8d a8 00 00 00\n48 89 4c 24 40\n48 8b 40 08\n48 89 44 24 30\n41 8b 9d 68 01 00 00\n41 8b 85 38 01 00 00\n01 d8\n89 44 24 14\n41 03 9d 3c 01 00 00\n45 8b bd 30 01 00 00\n45 8b a5 34 01 00 00\ne8 a3 f9 ff ff\n4c 89 f1\n4c 8b 74 24 50\n48 89 84 24 90 00 00 00\n8d 44 0d 00\n44 89 7c 24 60\n44 39 f8\n7c 0e\n8b 44 24 60\n89 c5\n29 cd\n0f 8e e5 05 00 00\n48 8b 44 24 48\n41 8d 04 06\n44 39 e0\n7c 0e\n44 2b 64 24 48\n45 89 e6\n0f 8e c9 05 00 00\n48 89 4c 24 38\n48 89 6c 24 58\n41 8b 85 68 01 00 00\n85 c0\n4d 89 f0\n4c 89 44 24 50\n89 5c 24 10\n0f 8e ea 00 00 00\nd1 e8\n8b 54 24 14\n89 d1\n0f af 4c 24 38\n01 c1\n89 4c 24 18\n41 89 dc\n44 0f af 64 24 48\n41 01 c4\n48 8b 4c 24 58\n85 c9\n78 57\n48 8b 44 24 50\n0f af 44 24 10\n44 01 e0\n89 44 24 68\nbd ff ff ff ff\n8b 5c 24 18\n0f 1f 40 00\n41 89 d6\n49 8b 95 78 01 00 00\n8b 44 24 68\n89 04 24\n48 8b 7c 24 30\n48 8b 74 24 40\n49 89 cf\n89 d9\n45 89 e0\n41 89 d9\ne8 95 ee ff ff\n4c 89 f9\n44 89 f2\n01 d3\nff c5\n39 cd\n7c c7\n4c 8b 44 24 50\n45 85 c0\n44 8b 74 24 10\n8b 4c 24 18\n78 58\n48 8b 44 24 58\n41 89 c7\n44 0f af 7c 24 14\n41 01 cf\nbb ff ff ff ff\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 95 78 01 00 00\n44 89 24 24\n48 8b 7c 24 30\n48 8b 74 24 40\n8b 4c 24 18\n4c 89 c5\n45 89 e0\n45 89 f9\ne8 29 ee ff ff\n49 89 e8\n45 01 f4\nff c3\n44 39 c3\n7c cc\n8b 44 24 60\n0f af 44 24 48\n48 8b 54 24 38\n01 d0\n41 03 85 60 01 00 00\n48 89 44 24 68\n41 8b ad 58 01 00 00\n41 8b 85 68 01 00 00\n49 8b 8d a0 01 00 00\n48 85 c9\n74 0b\n4c 8b 64 24 58\n8b 74 24 10\neb 1d\n49 8b 8d 28 01 00 00\n48 85 c9\n4c 8b 64 24 58\n8b 74 24 10\n0f 84 72 04 00 00\n48 83 c1 58\n8b 09\n8b 7c 24 14\n0f af d7\n48 89 54 24 38\n48 8b 54 24 48\n0f af d6\n48 89 54 24 48\n45 85 c0\n0f 8e 59 03 00 00\n48 8b 54 24 38\n8d 54 15 00\n03 6c 24 48\n01 c2\n89 54 24 78\n01 c5\n01 cd\n48 89 6c 24 18\n49 8d 85 90 01 00 00\n48 89 84 24 88 00 00 00\nc7 44 24 74 00 00 00 00\n45 85 e4\n0f 8e ed 02 00 00\n31 db\n8b 44 24 78\n89 c5\n66 0f 1f 44 00 00\n48 8b 44 24 68\n8d 04 18\n3b 84 24 90 00 00 00\n0f 87 fa 02 00 00\n45 8b b5 80 01 00 00\n45 8b bd 84 01 00 00\n4d 8b a5 a0 01 00 00\n4d 85 e4\n0f 84 4d 01 00 00\n89 44 24 64\nb9 01 00 00 00\n48 8b 7c 24 30\n4c 89 e6\n48 8d 54 24 64\n4c 8d 44 24 20\ne8 3d ed ff ff\n41 80 bd 48 01 00 00 00\n44 0f b7 44 24 20\n74 42\n41 8b 85 38 01 00 00\n41 8b 8d 3c 01 00 00\n44 29 c0\n41 89 c6\n41 c1 ee 1f\n41 01 c6\n41 d1 fe\n0f bf 44 24 24\n41 29 c6\n0f b7 44 24 22\n29 c1\n41 89 cf\n41 c1 ef 1f\n41 01 cf\n41 d1 ff\n0f bf 44 24 26\n41 29 c7\n66 45 85 c0\n0f 84 91 00 00 00\n44 0f b7 4c 24 22\n45 85 c9\n0f 84 82 00 00 00\n0f bf 44 24 24\n44 89 f2\n29 c2\n01 ea\n48 8b 44 24 18\n41 8d 0c 07\n0f bf 44 24 26\n89 4c 24 7c\n29 c1\nc7 04 24 00 00 00 00\n48 8b 7c 24 30\n48 8b 74 24 40\ne8 2c ed ff ff\n41 80 bd 49 01 00 00 00\n74 42\n49 8b 95 78 01 00 00\n0f bf 44 24 24\n44 89 f1\n29 c1\n01 e9\n0f bf 44 24 26\n44 8b 44 24 7c\n41 29 c0\n44 0f b7 4c 24 20\n41 ff c9\n0f b7 44 24 22\nff c8\n89 04 24\n48 8b 7c 24 30\n48 8b 74 24 40\ne8 80 ec ff ff\n49 8b bd 88 01 00 00\n41 01 ee\n44 03 7c 24 18\nc7 04 24 01 00 00 00\n48 8b b4 24 88 00 00 00\n4c 89 e2\n44 89 f1\n45 89 f8\n4c 8d 4c 24 64\ne8 9f eb ff ff\n4c 8b 64 24 58\ne9 55 01 00 00\n88 64 24 08\n88 44 24 09\n41 80 bd 49 01 00 00 00\n75 0e\n41 80 bd 48 01 00 00 00\n0f 84 fa 00 00 00\n49 8b bd 28 01 00 00\n48 8d 44 24 20\n48 89 04 24\nba 01 00 00 00\n48 8d 74 24 08\n48 8d 4c 24 64\n4c 8d 84 24 84 00 00 00\n4c 8d 8c 24 80 00 00 00\ne8 cc ea ff ff\n41 80 bd 48 01 00 00 00\n74 5f\n41 8b 85 38 01 00 00\n0f bf 4c 24 22\n0f bf 54 24 20\n29 c8\n01 d0\n41 89 c6\n41 c1 ee 1f\n41 01 c6\n41 d1 fe\n41 8b 85 58 01 00 00\n01 c2\n41 29 d6\n41 8b 8d 3c 01 00 00\n0f bf 54 24 28\n44 0f bf 7c 24 26\n29 d1\n44 29 f9\n89 ca\nc1 ea 1f\n01 ca\nd1 fa\n49 8b 8d 28 01 00 00\n41 29 c7\n44 2b 79 58\n41 01 d7\n41 80 bd 49 01 00 00 00\n4c 8b 64 24 58\n74 54\n49 8b 85 28 01 00 00\n49 8b 95 78 01 00 00\n41 8d 0c 2e\n48 8b 74 24 18\n45 8d 04 37\n44 2b 40 58\n44 0f bf 4c 24 24\n41 ff c9\n8b 84 24 84 00 00 00\n8b b4 24 80 00 00 00\n8d 44 30 ff\n89 04 24\n48 8b 7c 24 30\n48 8b 74 24 40\ne8 28 eb ff ff\neb 06\n4c 8b 64 24 58\n90\n48 8b 74 24 40\n48 8b 7c 24 30\n49 8b 95 70 01 00 00\n41 01 ee\n44 03 7c 24 18\nc7 04 24 01 00 00 00\n44 89 f1\n45 89 f8\n4c 8d 4c 24 08\ne8 20 ec ff ff\nff c3\n03 6c 24 14\n44 39 e3\n0f 8c 21 fd ff ff\n48 8b 44 24 68\n03 44 24 60\n48 89 44 24 68\n8b 4c 24 74\nff c1\n48 8b 44 24 18\n03 44 24 10\n48 89 44 24 18\n89 4c 24 74\n3b 4c 24 50\n0f 8c da fc ff ff\n45 8b bd 68 01 00 00\n45 85 ff\n48 8b 44 24 38\n4d 89 e6\n0f 8e c7 00 00 00\n41 d1 ef\n44 01 f8\n48 89 44 24 38\n44 03 7c 24 48\n45 85 f6\n8b 54 24 14\n78 54\n48 8b 44 24 50\n0f af 44 24 10\n44 01 f8\n89 44 24 18\nbd ff ff ff ff\n48 8b 44 24 38\n89 c3\n0f 1f 00\n41 89 d4\n49 8b 95 78 01 00 00\n8b 44 24 18\n89 04 24\n48 8b 7c 24 30\n48 8b 74 24 40\n89 d9\n45 89 f8\n41 89 d9\ne8 c8 e9 ff ff\n44 89 e2\n01 d3\nff c5\n44 39 f5\n7c cc\n48 8b 6c 24 50\n85 ed\n44 8b 64 24 10\n78 4c\n44 0f af 74 24 14\n44 03 74 24 38\nbb ff ff ff ff\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 95 78 01 00 00\n44 89 3c 24\n48 8b 7c 24 30\n48 8b 74 24 40\n48 8b 4c 24 38\n45 89 f8\n45 89 f1\ne8 6b e9 ff ff\n45 01 e7\nff c3\n39 eb\n7c d2\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nb9 01 00 00 00\ne9 8a fb ff ff\n'
p152
S'.text:0000000000402820\n.text:0000000000402821\n.text:0000000000402823\n.text:0000000000402825\n.text:0000000000402827\n.text:0000000000402829\n.text:000000000040282a\n.text:0000000000402831\n.text:0000000000402836\n.text:0000000000402838\n.text:000000000040283d\n.text:0000000000402840\n.text:0000000000402843\n.text:000000000040284a\n.text:0000000000402851\n.text:0000000000402856\n.text:000000000040285a\n.text:000000000040285f\n.text:0000000000402866\n.text:000000000040286d\n.text:000000000040286f\n.text:0000000000402873\n.text:000000000040287a\n.text:0000000000402881\n.text:0000000000402888\n.text:000000000040288d\n.text:0000000000402890\n.text:0000000000402895\n.text:000000000040289d\n.text:00000000004028a1\n.text:00000000004028a6\n.text:00000000004028a9\n.text:00000000004028ab\n.text:00000000004028af\n.text:00000000004028b1\n.text:00000000004028b3\n.text:00000000004028b9\n.text:00000000004028be\n.text:00000000004028c2\n.text:00000000004028c5\n.text:00000000004028c7\n.text:00000000004028cc\n.text:00000000004028cf\n.text:00000000004028d5\n.text:00000000004028da\n.text:00000000004028df\n.text:00000000004028e6\n.text:00000000004028e8\n.text:00000000004028eb\n.text:00000000004028f0\n.text:00000000004028f4\n.text:00000000004028fa\n.text:00000000004028fc\n.text:0000000000402900\n.text:0000000000402902\n.text:0000000000402907\n.text:0000000000402909\n.text:000000000040290d\n.text:0000000000402910\n.text:0000000000402916\n.text:0000000000402919\n.text:000000000040291e\n.text:0000000000402920\n.text:0000000000402922\n.text:0000000000402927\n.text:000000000040292c\n.text:000000000040292f\n.text:0000000000402933\n.text:0000000000402938\n.text:000000000040293c\n.text:0000000000402940\n.text:0000000000402943\n.text:000000000040294a\n.text:000000000040294e\n.text:0000000000402951\n.text:0000000000402956\n.text:000000000040295b\n.text:000000000040295e\n.text:0000000000402960\n.text:0000000000402963\n.text:0000000000402966\n.text:000000000040296b\n.text:000000000040296e\n.text:0000000000402971\n.text:0000000000402973\n.text:0000000000402975\n.text:0000000000402977\n.text:0000000000402979\n.text:000000000040297e\n.text:0000000000402981\n.text:0000000000402986\n.text:000000000040298a\n.text:000000000040298c\n.text:0000000000402991\n.text:0000000000402994\n.text:000000000040299a\n.text:000000000040299d\n.text:00000000004029a2\n.text:00000000004029b0\n.text:00000000004029b7\n.text:00000000004029bb\n.text:00000000004029c0\n.text:00000000004029c5\n.text:00000000004029c9\n.text:00000000004029cc\n.text:00000000004029cf\n.text:00000000004029d2\n.text:00000000004029d7\n.text:00000000004029da\n.text:00000000004029dd\n.text:00000000004029df\n.text:00000000004029e2\n.text:00000000004029e4\n.text:00000000004029e8\n.text:00000000004029ed\n.text:00000000004029f2\n.text:00000000004029f4\n.text:00000000004029fb\n.text:0000000000402a00\n.text:0000000000402a07\n.text:0000000000402a0e\n.text:0000000000402a15\n.text:0000000000402a18\n.text:0000000000402a1a\n.text:0000000000402a1f\n.text:0000000000402a23\n.text:0000000000402a25\n.text:0000000000402a2c\n.text:0000000000402a2f\n.text:0000000000402a34\n.text:0000000000402a38\n.text:0000000000402a3e\n.text:0000000000402a42\n.text:0000000000402a44\n.text:0000000000402a48\n.text:0000000000402a4b\n.text:0000000000402a50\n.text:0000000000402a55\n.text:0000000000402a58\n.text:0000000000402a5d\n.text:0000000000402a60\n.text:0000000000402a66\n.text:0000000000402a6b\n.text:0000000000402a6f\n.text:0000000000402a73\n.text:0000000000402a75\n.text:0000000000402a79\n.text:0000000000402a7b\n.text:0000000000402a7d\n.text:0000000000402a82\n.text:0000000000402a89\n.text:0000000000402a91\n.text:0000000000402a99\n.text:0000000000402a9c\n.text:0000000000402aa2\n.text:0000000000402aa4\n.text:0000000000402aa8\n.text:0000000000402aaa\n.text:0000000000402ab0\n.text:0000000000402ab5\n.text:0000000000402ab8\n.text:0000000000402abf\n.text:0000000000402ac5\n.text:0000000000402acc\n.text:0000000000402ad3\n.text:0000000000402ada\n.text:0000000000402add\n.text:0000000000402ae3\n.text:0000000000402ae7\n.text:0000000000402aec\n.text:0000000000402af1\n.text:0000000000402af4\n.text:0000000000402af9\n.text:0000000000402afe\n.text:0000000000402b03\n.text:0000000000402b0b\n.text:0000000000402b11\n.text:0000000000402b13\n.text:0000000000402b1a\n.text:0000000000402b21\n.text:0000000000402b24\n.text:0000000000402b27\n.text:0000000000402b2b\n.text:0000000000402b2e\n.text:0000000000402b31\n.text:0000000000402b36\n.text:0000000000402b39\n.text:0000000000402b3e\n.text:0000000000402b40\n.text:0000000000402b43\n.text:0000000000402b47\n.text:0000000000402b4a\n.text:0000000000402b4d\n.text:0000000000402b52\n.text:0000000000402b55\n.text:0000000000402b59\n.text:0000000000402b5f\n.text:0000000000402b65\n.text:0000000000402b68\n.text:0000000000402b6e\n.text:0000000000402b73\n.text:0000000000402b76\n.text:0000000000402b78\n.text:0000000000402b7a\n.text:0000000000402b7f\n.text:0000000000402b83\n.text:0000000000402b88\n.text:0000000000402b8c\n.text:0000000000402b8e\n.text:0000000000402b95\n.text:0000000000402b9a\n.text:0000000000402b9f\n.text:0000000000402ba4\n.text:0000000000402bac\n.text:0000000000402bae\n.text:0000000000402bb5\n.text:0000000000402bba\n.text:0000000000402bbd\n.text:0000000000402bbf\n.text:0000000000402bc1\n.text:0000000000402bc6\n.text:0000000000402bcb\n.text:0000000000402bce\n.text:0000000000402bd4\n.text:0000000000402bd7\n.text:0000000000402bdc\n.text:0000000000402bde\n.text:0000000000402be1\n.text:0000000000402be6\n.text:0000000000402beb\n.text:0000000000402bf0\n.text:0000000000402bf7\n.text:0000000000402bfa\n.text:0000000000402bff\n.text:0000000000402c06\n.text:0000000000402c0e\n.text:0000000000402c11\n.text:0000000000402c14\n.text:0000000000402c17\n.text:0000000000402c1c\n.text:0000000000402c21\n.text:0000000000402c26\n.text:0000000000402c30\n.text:0000000000402c34\n.text:0000000000402c38\n.text:0000000000402c40\n.text:0000000000402c42\n.text:0000000000402c4a\n.text:0000000000402c50\n.text:0000000000402c57\n.text:0000000000402c5c\n.text:0000000000402c60\n.text:0000000000402c65\n.text:0000000000402c6a\n.text:0000000000402c6f\n.text:0000000000402c77\n.text:0000000000402c7f\n.text:0000000000402c84\n.text:0000000000402c8c\n.text:0000000000402c8e\n.text:0000000000402c95\n.text:0000000000402c9a\n.text:0000000000402c9f\n.text:0000000000402ca1\n.text:0000000000402ca3\n.text:0000000000402ca6\n.text:0000000000402caa\n.text:0000000000402cad\n.text:0000000000402cb0\n.text:0000000000402cb7\n.text:0000000000402cb9\n.text:0000000000402cbc\n.text:0000000000402cc3\n.text:0000000000402cc8\n.text:0000000000402cce\n.text:0000000000402cd0\n.text:0000000000402cd3\n.text:0000000000402cd5\n.text:0000000000402cd8\n.text:0000000000402cda\n.text:0000000000402cdc\n.text:0000000000402ce3\n.text:0000000000402ce6\n.text:0000000000402cea\n.text:0000000000402ced\n.text:0000000000402cf5\n.text:0000000000402cfa\n.text:0000000000402cfc\n.text:0000000000402d03\n.text:0000000000402d0a\n.text:0000000000402d0e\n.text:0000000000402d13\n.text:0000000000402d17\n.text:0000000000402d1b\n.text:0000000000402d21\n.text:0000000000402d24\n.text:0000000000402d2b\n.text:0000000000402d32\n.text:0000000000402d36\n.text:0000000000402d39\n.text:0000000000402d3e\n.text:0000000000402d43\n.text:0000000000402d48\n.text:0000000000402d4a\n.text:0000000000402d4f\n.text:0000000000402d50\n.text:0000000000402d55\n.text:0000000000402d5a\n.text:0000000000402d61\n.text:0000000000402d64\n.text:0000000000402d69\n.text:0000000000402d70\n.text:0000000000402d73\n.text:0000000000402d76\n.text:0000000000402d7b\n.text:0000000000402d80\n.text:0000000000402d82\n.text:0000000000402d86\n.text:0000000000402d89\n.text:0000000000402d8f\n.text:0000000000402d94\n.text:0000000000402d98\n.text:0000000000402d9d\n.text:0000000000402da1\n.text:0000000000402da3\n.text:0000000000402da8\n.text:0000000000402dac\n.text:0000000000402db1\n.text:0000000000402db5\n.text:0000000000402db9\n.text:0000000000402dbf\n.text:0000000000402dc6\n.text:0000000000402dc9\n.text:0000000000402dce\n.text:0000000000402dd1\n.text:0000000000402dd7\n.text:0000000000402dda\n.text:0000000000402ddd\n.text:0000000000402de2\n.text:0000000000402de7\n.text:0000000000402dea\n.text:0000000000402dee\n.text:0000000000402df0\n.text:0000000000402df5\n.text:0000000000402dfa\n.text:0000000000402dfd\n.text:0000000000402e01\n.text:0000000000402e06\n.text:0000000000402e0b\n.text:0000000000402e0d\n.text:0000000000402e10\n.text:0000000000402e13\n.text:0000000000402e1a\n.text:0000000000402e1e\n.text:0000000000402e21\n.text:0000000000402e26\n.text:0000000000402e2b\n.text:0000000000402e2d\n.text:0000000000402e30\n.text:0000000000402e33\n.text:0000000000402e38\n.text:0000000000402e3b\n.text:0000000000402e3d\n.text:0000000000402e3f\n.text:0000000000402e42\n.text:0000000000402e44\n.text:0000000000402e49\n.text:0000000000402e4b\n.text:0000000000402e50\n.text:0000000000402e52\n.text:0000000000402e58\n.text:0000000000402e5d\n.text:0000000000402e62\n.text:0000000000402e70\n.text:0000000000402e77\n.text:0000000000402e7b\n.text:0000000000402e80\n.text:0000000000402e85\n.text:0000000000402e8a\n.text:0000000000402e8d\n.text:0000000000402e90\n.text:0000000000402e95\n.text:0000000000402e98\n.text:0000000000402e9a\n.text:0000000000402e9c\n.text:0000000000402e9e\n.text:0000000000402ea5\n.text:0000000000402ea6\n.text:0000000000402ea8\n.text:0000000000402eaa\n.text:0000000000402eac\n.text:0000000000402eae\n.text:0000000000402eaf\n.text:0000000000402eb0\n.text:0000000000402eb5\n'
p153
tp154
sS'get_font_name'
p155
(S'\n__stdcall get_font_name(Display * dpy, XFontStruct * fs)\n'
p156
V\u000achar * get_font_name(Display *dpy,XFontStruct *fs)\u000a\u000a{\u000a  char *pcVar1;\u000a  ulong uVar2;\u000a  ulong *puVar3;\u000a  int iVar4;\u000a  \u000a  iVar4 = 0;\u000a  uVar2 = XInternAtom(dpy,&DAT_004046c2,0);\u000a  if (0 < fs->n_properties) {\u000a    puVar3 = &fs->properties->card32;\u000a    do {\u000a      if (puVar3[-1] == uVar2) {\u000a        pcVar1 = (char *)(*(code *)PTR_XGetAtomName_00606160)(dpy,*puVar3);\u000a        return pcVar1;\u000a      }\u000a      iVar4 = iVar4 + 1;\u000a      puVar3 = puVar3 + 2;\u000a    } while (iVar4 < fs->n_properties);\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p157
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RSI\nMOV R14,RDI\nXOR EBP,EBP\nMOV ESI,0x4046c2\nXOR EDX,EDX\nCALL 0x00401990\nCMP dword ptr [RBX + 0x2c],0x0\nJLE 0x00403ce1\nMOV RCX,qword ptr [RBX + 0x30]\nADD RCX,0x8\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP qword ptr [RCX + -0x8],RAX\nJZ 0x00403ce8\nINC EBP\nADD RCX,0x10\nCMP EBP,dword ptr [RBX + 0x2c]\nJL 0x00403cd0\nXOR EAX,EAX\nPOP RBX\nPOP R14\nPOP RBP\nRET\nMOV RSI,qword ptr [RCX]\nMOV RDI,R14\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401940\n'
p158
S'55\n41 56\n53\n48 89 f3\n49 89 fe\n31 ed\nbe c2 46 40 00\n31 d2\ne8 d8 dc ff ff\n83 7b 2c 00\n7e 23\n48 8b 4b 30\n48 83 c1 08\n66 2e 0f 1f 84 00 00 00 00 00\n48 39 41 f8\n74 12\nff c5\n48 83 c1 10\n3b 6b 2c\n7c ef\n31 c0\n5b\n41 5e\n5d\nc3\n48 8b 31\n4c 89 f7\n5b\n41 5e\n5d\ne9 49 dc ff ff\n'
p159
S'.text:0000000000403ca0\n.text:0000000000403ca1\n.text:0000000000403ca3\n.text:0000000000403ca4\n.text:0000000000403ca7\n.text:0000000000403caa\n.text:0000000000403cac\n.text:0000000000403cb1\n.text:0000000000403cb3\n.text:0000000000403cb8\n.text:0000000000403cbc\n.text:0000000000403cbe\n.text:0000000000403cc2\n.text:0000000000403cc6\n.text:0000000000403cd0\n.text:0000000000403cd4\n.text:0000000000403cd6\n.text:0000000000403cd8\n.text:0000000000403cdc\n.text:0000000000403cdf\n.text:0000000000403ce1\n.text:0000000000403ce3\n.text:0000000000403ce4\n.text:0000000000403ce6\n.text:0000000000403ce7\n.text:0000000000403ce8\n.text:0000000000403ceb\n.text:0000000000403cee\n.text:0000000000403cef\n.text:0000000000403cf1\n.text:0000000000403cf2\n'
p160
tp161
sS'FcPatternGetDouble'
p162
(S'\n__stdcall FcPatternGetDouble()\n'
p163
V\u000avoid FcPatternGetDouble(void)\u000a\u000a{\u000a  (*(code *)PTR_FcPatternGetDouble_00606060)();\u000a  return;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00606060]\n'
p165
S'ff 25 1a 49 20 00\n'
p166
S'.plt:0000000000401740\n'
p167
tp168
sS'FcCharSetHasChar'
p169
(S'\n__stdcall FcCharSetHasChar()\n'
p170
V\u000avoid FcCharSetHasChar(void)\u000a\u000a{\u000a  (*(code *)PTR_FcCharSetHasChar_00606108)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00606108]\n'
p172
S'ff 25 72 48 20 00\n'
p173
S'.plt:0000000000401890\n'
p174
tp175
sS'set_button_state'
p176
(S'\n__stdcall set_button_state()\n'
p177
V\u000avoid set_button_state(void)\u000a\u000a{\u000a  int prev16valid;\u000a  int nextvalid;\u000a  int prevvalid;\u000a  Arg arg;\u000a  int local_28;\u000a  int local_24;\u000a  int local_20;\u000a  int local_1c;\u000a  undefined8 local_18;\u000a  ulong local_10;\u000a  \u000a  GetPrevNextStates(fontGrid,&local_1c,&local_20,&local_24,&local_28);\u000a  local_18 = 0x605607;\u000a  local_10 = (ulong)(local_1c != 0);\u000a  XtSetValues(prevButton,&local_18,1);\u000a  local_10 = (ulong)(local_20 != 0);\u000a  XtSetValues(nextButton,&local_18,1);\u000a  local_18 = 0x605607;\u000a  local_10 = (ulong)(local_24 != 0);\u000a  XtSetValues(prev16Button,&local_18,1);\u000a  local_10 = (ulong)(local_28 != 0);\u000a  XtSetValues(next16Button,&local_18,1);\u000a  return;\u000a}\u000a\u000a
p178
S'PUSH RBX\nSUB RSP,0x20\nMOV RDI,qword ptr [0x006069c8]\nLEA RSI,[RSP + 0xc]\nLEA RDX,[RSP + 0x8]\nLEA RCX,[RSP + 0x4]\nMOV R8,RSP\nCALL 0x00402310\nXOR EAX,EAX\nCMP dword ptr [RSP + 0xc],0x0\nMOV qword ptr [RSP + 0x10],0x605607\nSETNZ AL\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [0x00606988]\nLEA RBX,[RSP + 0x10]\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00401710\nXOR EAX,EAX\nCMP dword ptr [RSP + 0x8],0x0\nSETNZ AL\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [0x00606990]\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00401710\nXOR EAX,EAX\nCMP dword ptr [RSP + 0x4],0x0\nMOV qword ptr [RSP + 0x10],0x605607\nSETNZ AL\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [0x00606980]\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00401710\nXOR EAX,EAX\nCMP dword ptr [RSP],0x0\nSETNZ AL\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [0x00606998]\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00401710\nADD RSP,0x20\nPOP RBX\nRET\n'
p179
S'53\n48 83 ec 20\n48 8b 3d 6c 2b 20 00\n48 8d 74 24 0c\n48 8d 54 24 08\n48 8d 4c 24 04\n49 89 e0\ne8 9d e4 ff ff\n31 c0\n83 7c 24 0c 00\n48 c7 44 24 10 07 56 60 00\n0f 95 c0\n48 89 44 24 18\n48 8b 3d f6 2a 20 00\n48 8d 5c 24 10\nba 01 00 00 00\n48 89 de\ne8 6c d8 ff ff\n31 c0\n83 7c 24 08 00\n0f 95 c0\n48 89 44 24 18\n48 8b 3d d6 2a 20 00\nba 01 00 00 00\n48 89 de\ne8 49 d8 ff ff\n31 c0\n83 7c 24 04 00\n48 c7 44 24 10 07 56 60 00\n0f 95 c0\n48 89 44 24 18\n48 8b 3d 9a 2a 20 00\nba 01 00 00 00\n48 89 de\ne8 1d d8 ff ff\n31 c0\n83 3c 24 00\n0f 95 c0\n48 89 44 24 18\n48 8b 3d 90 2a 20 00\nba 01 00 00 00\n48 89 de\ne8 fb d7 ff ff\n48 83 c4 20\n5b\nc3\n'
p180
S'.text:0000000000403e50\n.text:0000000000403e51\n.text:0000000000403e55\n.text:0000000000403e5c\n.text:0000000000403e61\n.text:0000000000403e66\n.text:0000000000403e6b\n.text:0000000000403e6e\n.text:0000000000403e73\n.text:0000000000403e75\n.text:0000000000403e7a\n.text:0000000000403e83\n.text:0000000000403e86\n.text:0000000000403e8b\n.text:0000000000403e92\n.text:0000000000403e97\n.text:0000000000403e9c\n.text:0000000000403e9f\n.text:0000000000403ea4\n.text:0000000000403ea6\n.text:0000000000403eab\n.text:0000000000403eae\n.text:0000000000403eb3\n.text:0000000000403eba\n.text:0000000000403ebf\n.text:0000000000403ec2\n.text:0000000000403ec7\n.text:0000000000403ec9\n.text:0000000000403ece\n.text:0000000000403ed7\n.text:0000000000403eda\n.text:0000000000403edf\n.text:0000000000403ee6\n.text:0000000000403eeb\n.text:0000000000403eee\n.text:0000000000403ef3\n.text:0000000000403ef5\n.text:0000000000403ef9\n.text:0000000000403efc\n.text:0000000000403f01\n.text:0000000000403f08\n.text:0000000000403f0d\n.text:0000000000403f10\n.text:0000000000403f15\n.text:0000000000403f19\n.text:0000000000403f1a\n'
p181
tp182
sS'XtGetApplicationResources'
p183
(S'\n__stdcall XtGetApplicationResources()\n'
p184
V\u000avoid XtGetApplicationResources(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetApplicationResources_00606130)();\u000a  return;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x00606130]\n'
p186
S'ff 25 4a 48 20 00\n'
p187
S'.plt:00000000004018e0\n'
p188
tp189
sS'bindtextdomain'
p190
(S'\n__stdcall bindtextdomain()\n'
p191
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_00606078)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00606078]\n'
p193
S'ff 25 02 49 20 00\n'
p194
S'.plt:0000000000401770\n'
p195
tp196
sS'dcgettext'
p197
(S'\n__stdcall dcgettext()\n'
p198
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_00606148)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x00606148]\n'
p200
S'ff 25 32 48 20 00\n'
p201
S'.plt:0000000000401910\n'
p202
tp203
sS'GetFontGridCellDimensions'
p204
(S'\n__stdcall GetFontGridCellDimensions(Widget w, long * startp, int * ncolsp, int * nrowsp)\n'
p205
V\u000avoid GetFontGridCellDimensions(Widget w,long *startp,int *ncolsp,int *nrowsp)\u000a\u000a{\u000a  *(String *)startp = w[1].core.name;\u000a  *ncolsp = *(int *)&w[1].core.tm.lastEventTime;\u000a  *nrowsp = *(int *)((long)&w[1].core.tm.lastEventTime + 4);\u000a  return;\u000a}\u000a\u000a
p206
S'MOV RAX,qword ptr [0x160 + RDI]\nMOV qword ptr [RSI],RAX\nMOV EAX,dword ptr [0x130 + RDI]\nMOV dword ptr [RDX],EAX\nMOV EAX,dword ptr [0x134 + RDI]\nMOV dword ptr [RCX],EAX\nRET\n'
p207
S'48 8b 87 60 01 00 00\n48 89 06\n8b 87 30 01 00 00\n89 02\n8b 87 34 01 00 00\n89 01\nc3\n'
p208
S'.text:00000000004022f0\n.text:00000000004022f7\n.text:00000000004022fa\n.text:0000000000402300\n.text:0000000000402302\n.text:0000000000402308\n.text:000000000040230a\n'
p209
tp210
sS'do_quit'
p211
(S'\n__stdcall do_quit(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p212
V\u000avoid do_quit(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p213
S'PUSH RAX\nXOR EDI,EDI\nCALL 0x00401730\n'
p214
S'50\n31 ff\ne8 28 d9 ff ff\n'
p215
S'.text:0000000000403e00\n.text:0000000000403e01\n.text:0000000000403e03\n'
p216
tp217
sS'XmuCvtStringToXftFont'
p218
(S'\n__stdcall XmuCvtStringToXftFont(Display * dpy, XrmValue * args, Cardinal * num_args, XrmValue * fromVal, XrmValue * toVal, XtPointer * converter_data)\n'
p219
V\u000aBoolean XmuCvtStringToXftFont\u000a                  (Display *dpy,XrmValue *args,Cardinal *num_args,XrmValue *fromVal,XrmValue *toVal,\u000a                  XtPointer *converter_data)\u000a\u000a{\u000a  XPointer pcVar1;\u000a  XftFont *static_val;\u000a  uint uVar2;\u000a  long lVar3;\u000a  undefined8 uVar4;\u000a  \u000a  if (*num_args != 1) {\u000a    uVar4 = XtDisplayToApplicationContext(dpy);\u000a    XtAppErrorMsg(uVar4,"cvtStringToXftFont","wrongParameters","XtToolkitError",\u000a                  "String to XftFont conversion needs screen argument",0,0);\u000a    return 0;\u000a  }\u000a  pcVar1 = fromVal->addr;\u000a  if (pcVar1 != (XPointer)0x0) {\u000a    uVar2 = XScreenNumberOfScreen(*(undefined8 *)args->addr);\u000a    lVar3 = XftFontOpenName(dpy,(ulong)uVar2,pcVar1);\u000a    if (lVar3 != 0) goto LAB_004026c0;\u000a    XtDisplayStringConversionWarning(dpy,fromVal->addr,0x40417b);\u000a  }\u000a  lVar3 = 0;\u000aLAB_004026c0:\u000a  if ((long *)toVal->addr == (long *)0x0) {\u000a    toVal->addr = (XPointer)0x606940;\u000a  }\u000a  else {\u000a    if (toVal->size < 8) {\u000a      toVal->size = 8;\u000a      XtDisplayStringConversionWarning(dpy,fromVal->addr,0x40417b);\u000a      return 0;\u000a    }\u000a    *(long *)toVal->addr = lVar3;\u000a  }\u000a  toVal->size = 8;\u000a  return 1;\u000a}\u000a\u000a
p220
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R8\nMOV R15,RCX\nMOV R14,RDI\nCMP dword ptr [RDX],0x1\nJNZ 0x004026ee\nMOV RBX,qword ptr [R15 + 0x8]\nTEST RBX,RBX\nJZ 0x004026be\nMOV RAX,qword ptr [RSI + 0x8]\nMOV RDI,qword ptr [RAX]\nCALL 0x004018c0\nMOV RDI,R14\nMOV ESI,EAX\nMOV RDX,RBX\nCALL 0x00401950\nTEST RAX,RAX\nJNZ 0x004026c0\nMOV RSI,qword ptr [R15 + 0x8]\nMOV EDX,0x40417b\nMOV RDI,R14\nCALL 0x00401930\nXOR EAX,EAX\nMOV RCX,qword ptr [R12 + 0x8]\nTEST RCX,RCX\nJZ 0x00402722\nCMP dword ptr [R12],0x7\nJA 0x00402734\nMOV dword ptr [R12],0x8\nMOV RSI,qword ptr [R15 + 0x8]\nMOV EDX,0x40417b\nMOV RDI,R14\nCALL 0x00401930\nXOR EBX,EBX\nJMP 0x00402741\nMOV RDI,R14\nCALL 0x00401810\nMOV qword ptr [RSP],0x0\nXOR EBX,EBX\nMOV ESI,0x404131\nMOV EDX,0x404070\nMOV ECX,0x404080\nMOV R8D,0x404144\nXOR R9D,R9D\nMOV RDI,RAX\nCALL 0x004019c0\nJMP 0x00402741\nMOV qword ptr [0x00606940],RAX\nMOV qword ptr [R12 + 0x8],0x606940\nJMP 0x00402737\nMOV qword ptr [RCX],RAX\nMOV dword ptr [R12],0x8\nMOV BL,0x1\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p221
S'41 57\n41 56\n41 54\n53\n50\n4d 89 c4\n49 89 cf\n49 89 fe\n83 3a 01\n75 68\n49 8b 5f 08\n48 85 db\n74 2f\n48 8b 46 08\n48 8b 38\ne8 25 f2 ff ff\n4c 89 f7\n89 c6\n48 89 da\ne8 a8 f2 ff ff\n48 85 c0\n75 13\n49 8b 77 08\nba 7b 41 40 00\n4c 89 f7\ne8 72 f2 ff ff\n31 c0\n49 8b 4c 24 08\n48 85 c9\n74 58\n41 83 3c 24 07\n77 63\n41 c7 04 24 08 00 00 00\n49 8b 77 08\nba 7b 41 40 00\n4c 89 f7\ne8 46 f2 ff ff\n31 db\neb 53\n4c 89 f7\ne8 1a f1 ff ff\n48 c7 04 24 00 00 00 00\n31 db\nbe 31 41 40 00\nba 70 40 40 00\nb9 80 40 40 00\n41 b8 44 41 40 00\n45 31 c9\n48 89 c7\ne8 a0 f2 ff ff\neb 1f\n48 89 05 17 42 20 00\n49 c7 44 24 08 40 69 60 00\neb 03\n48 89 01\n41 c7 04 24 08 00 00 00\nb3 01\n89 d8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p222
S'.text:0000000000402670\n.text:0000000000402672\n.text:0000000000402674\n.text:0000000000402676\n.text:0000000000402677\n.text:0000000000402678\n.text:000000000040267b\n.text:000000000040267e\n.text:0000000000402681\n.text:0000000000402684\n.text:0000000000402686\n.text:000000000040268a\n.text:000000000040268d\n.text:000000000040268f\n.text:0000000000402693\n.text:0000000000402696\n.text:000000000040269b\n.text:000000000040269e\n.text:00000000004026a0\n.text:00000000004026a3\n.text:00000000004026a8\n.text:00000000004026ab\n.text:00000000004026ad\n.text:00000000004026b1\n.text:00000000004026b6\n.text:00000000004026b9\n.text:00000000004026be\n.text:00000000004026c0\n.text:00000000004026c5\n.text:00000000004026c8\n.text:00000000004026ca\n.text:00000000004026cf\n.text:00000000004026d1\n.text:00000000004026d9\n.text:00000000004026dd\n.text:00000000004026e2\n.text:00000000004026e5\n.text:00000000004026ea\n.text:00000000004026ec\n.text:00000000004026ee\n.text:00000000004026f1\n.text:00000000004026f6\n.text:00000000004026fe\n.text:0000000000402700\n.text:0000000000402705\n.text:000000000040270a\n.text:000000000040270f\n.text:0000000000402715\n.text:0000000000402718\n.text:000000000040271b\n.text:0000000000402720\n.text:0000000000402722\n.text:0000000000402729\n.text:0000000000402732\n.text:0000000000402734\n.text:0000000000402737\n.text:000000000040273f\n.text:0000000000402741\n.text:0000000000402743\n.text:0000000000402747\n.text:0000000000402748\n.text:000000000040274a\n.text:000000000040274c\n.text:000000000040274e\n'
p223
tp224
sS'deregister_tm_clones'
p225
(S'\n__stdcall deregister_tm_clones()\n'
p226
V\u000a/* WARNING: Removing unreachable block (ram,0x00401ab5) */\u000a/* WARNING: Removing unreachable block (ram,0x00401abf) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p227
S'MOV EAX,0x606897\nPUSH RBP\nSUB RAX,0x606890\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401ad0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401ad0\nPOP RBP\nMOV EDI,0x606890\nJMP RAX\nPOP RBP\nRET\n'
p228
S'b8 97 68 60 00\n55\n48 2d 90 68 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 90 68 60 00\nff e0\n5d\nc3\n'
p229
S'.text:0000000000401aa0\n.text:0000000000401aa5\n.text:0000000000401aa6\n.text:0000000000401aac\n.text:0000000000401ab0\n.text:0000000000401ab3\n.text:0000000000401ab5\n.text:0000000000401aba\n.text:0000000000401abd\n.text:0000000000401abf\n.text:0000000000401ac0\n.text:0000000000401ac5\n.text:0000000000401ad0\n.text:0000000000401ad1\n'
p230
tp231
sS'XtCreateManagedWidget'
p232
(S'\n__stdcall XtCreateManagedWidget()\n'
p233
V\u000avoid XtCreateManagedWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreateManagedWidget_006061b0)();\u000a  return;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x006061b0]\n'
p235
S'ff 25 ca 47 20 00\n'
p236
S'.plt:00000000004019e0\n'
p237
tp238
sS'FcPatternGetString'
p239
(S'\n__stdcall FcPatternGetString()\n'
p240
V\u000avoid FcPatternGetString(void)\u000a\u000a{\u000a  (*(code *)PTR_FcPatternGetString_006060e8)();\u000a  return;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x006060e8]\n'
p242
S'ff 25 92 48 20 00\n'
p243
S'.plt:0000000000401850\n'
p244
tp245
sS'XtParseTranslationTable'
p246
(S'\n__stdcall XtParseTranslationTable()\n'
p247
V\u000avoid XtParseTranslationTable(void)\u000a\u000a{\u000a  (*(code *)PTR_XtParseTranslationTable_00606180)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00606180]\n'
p249
S'ff 25 fa 47 20 00\n'
p250
S'.plt:0000000000401980\n'
p251
tp252
sS'GridLastChar'
p253
(S'\n__stdcall GridLastChar(Widget w)\n'
p254
V\u000along GridLastChar(Widget w)\u000a\u000a{\u000a  int iVar1;\u000a  Widget p_Var2;\u000a  _XtStateRec *p_Var3;\u000a  bool bVar4;\u000a  uint uVar5;\u000a  undefined8 uVar6;\u000a  long lVar7;\u000a  long lVar8;\u000a  uint uVar9;\u000a  FcChar32 map [8];\u000a  int local_4c;\u000a  undefined local_48 [40];\u000a  \u000a  p_Var2 = w[2].core.self;\u000a  if (p_Var2 == (Widget)0x0) {\u000a    p_Var3 = w[1].core.tm.current_state;\u000a    if (p_Var3 == (_XtStateRec *)0x0) {\u000a      uVar9 = 0;\u000a    }\u000a    else {\u000a      uVar9 = *(int *)(p_Var3 + 0x20) << 8 | *(uint *)(p_Var3 + 0x18);\u000a    }\u000a  }\u000a  else {\u000a    uVar6 = FcCharSetFirstPage((p_Var2->core).parent,local_48,&local_4c);\u000a    do {\u000a      uVar9 = (uint)uVar6;\u000a      uVar6 = FcCharSetNextPage((p_Var2->core).parent,local_48,&local_4c);\u000a    } while ((int)uVar6 != -1);\u000a    uVar9 = uVar9 & 0xffffff00;\u000a    uVar5 = uVar9 + 0xff;\u000a    lVar7 = 8;\u000a    do {\u000a      iVar1 = (&local_4c)[lVar7];\u000a      if (iVar1 != 0) goto joined_r0x004022cb;\u000a      uVar5 = uVar5 - 0x20;\u000a      lVar8 = lVar7 + -1;\u000a      bVar4 = 0 < lVar7;\u000a      lVar7 = lVar8;\u000a    } while (lVar8 != 0 && bVar4);\u000a  }\u000aLAB_004022da:\u000a  return (ulong)uVar9;\u000ajoined_r0x004022cb:\u000a  while (uVar9 = uVar5, -1 < iVar1) {\u000a    iVar1 = iVar1 * 2;\u000a    uVar5 = uVar9 - 1;\u000a  }\u000a  goto LAB_004022da;\u000a}\u000a\u000a
p255
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R12,qword ptr [0x1a0 + RDI]\nTEST R12,R12\nJZ 0x004022b4\nMOV RDI,qword ptr [R12 + 0x10]\nLEA R14,[RSP + 0x10]\nLEA R15,[RSP + 0xc]\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004019b0\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EBX,EAX\nMOV RDI,qword ptr [R12 + 0x10]\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401830\nCMP EAX,-0x1\nJNZ 0x00402270\nAND EBX,0xffffff00\nLEA EAX,[0xff + RBX]\nMOV EDX,0x8\nNOP dword ptr [RAX + RAX*0x1]\nMOV ECX,dword ptr [RSP + RDX*0x4 + 0xc]\nTEST ECX,ECX\nJNZ 0x004022cb\nADD EAX,-0x20\nDEC RDX\nJG 0x004022a0\nMOV EAX,EBX\nJMP 0x004022da\nMOV RCX,qword ptr [0x128 + RDI]\nTEST RCX,RCX\nJZ 0x004022d8\nMOV EAX,dword ptr [RCX + 0x20]\nSHL EAX,0x8\nOR EAX,dword ptr [RCX + 0x18]\nJMP 0x004022da\nJS 0x004022da\nNOP dword ptr [RAX]\nDEC EAX\nADD ECX,ECX\nJNS 0x004022d0\nJMP 0x004022da\nXOR EAX,EAX\nMOV EAX,EAX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p256
S'41 57\n41 56\n41 54\n53\n48 83 ec 38\n4c 8b a7 a0 01 00 00\n4d 85 e4\n74 6d\n49 8b 7c 24 10\n4c 8d 74 24 10\n4c 8d 7c 24 0c\n4c 89 f6\n4c 89 fa\ne8 4f f7 ff ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 c3\n49 8b 7c 24 10\n4c 89 f6\n4c 89 fa\ne8 ae f5 ff ff\n83 f8 ff\n75 e9\n81 e3 00 ff ff ff\n8d 83 ff 00 00 00\nba 08 00 00 00\n0f 1f 84 00 00 00 00 00\n8b 4c 94 0c\n85 c9\n75 23\n83 c0 e0\n48 ff ca\n7f f0\n89 d8\neb 26\n48 8b 8f 28 01 00 00\n48 85 c9\n74 18\n8b 41 20\nc1 e0 08\n0b 41 18\neb 0f\n78 0d\n0f 1f 00\nff c8\n01 c9\n79 fa\neb 02\n31 c0\n89 c0\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p257
S'.text:0000000000402230\n.text:0000000000402232\n.text:0000000000402234\n.text:0000000000402236\n.text:0000000000402237\n.text:000000000040223b\n.text:0000000000402242\n.text:0000000000402245\n.text:0000000000402247\n.text:000000000040224c\n.text:0000000000402251\n.text:0000000000402256\n.text:0000000000402259\n.text:000000000040225c\n.text:0000000000402261\n.text:0000000000402270\n.text:0000000000402272\n.text:0000000000402277\n.text:000000000040227a\n.text:000000000040227d\n.text:0000000000402282\n.text:0000000000402285\n.text:0000000000402287\n.text:000000000040228d\n.text:0000000000402293\n.text:0000000000402298\n.text:00000000004022a0\n.text:00000000004022a4\n.text:00000000004022a6\n.text:00000000004022a8\n.text:00000000004022ab\n.text:00000000004022ae\n.text:00000000004022b0\n.text:00000000004022b2\n.text:00000000004022b4\n.text:00000000004022bb\n.text:00000000004022be\n.text:00000000004022c0\n.text:00000000004022c3\n.text:00000000004022c6\n.text:00000000004022c9\n.text:00000000004022cb\n.text:00000000004022cd\n.text:00000000004022d0\n.text:00000000004022d2\n.text:00000000004022d4\n.text:00000000004022d6\n.text:00000000004022d8\n.text:00000000004022da\n.text:00000000004022dc\n.text:00000000004022e0\n.text:00000000004022e1\n.text:00000000004022e3\n.text:00000000004022e5\n.text:00000000004022e7\n'
p258
tp259
sS'XtRealizeWidget'
p260
(S'\n__stdcall XtRealizeWidget()\n'
p261
V\u000avoid XtRealizeWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtRealizeWidget_00606038)();\u000a  return;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x00606038]\n'
p263
S'ff 25 42 49 20 00\n'
p264
S'.plt:00000000004016f0\n'
p265
tp266
sS'getenv'
p267
(S'\n__stdcall getenv(char * __name)\n'
p268
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_00606138)();\u000a  return pcVar1;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x00606138]\n'
p270
S'ff 25 42 48 20 00\n'
p271
S'.plt:00000000004018f0\n'
p272
tp273
sS'XDrawString16'
p274
(S'\n__stdcall XDrawString16()\n'
p275
V\u000avoid XDrawString16(void)\u000a\u000a{\u000a  (*(code *)PTR_XDrawString16_00606190)();\u000a  return;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00606190]\n'
p277
S'ff 25 ea 47 20 00\n'
p278
S'.plt:00000000004019a0\n'
p279
tp280
sS'XtAppInitialize'
p281
(S'\n__stdcall XtAppInitialize()\n'
p282
V\u000avoid XtAppInitialize(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppInitialize_006060b0)();\u000a  return;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x006060b0]\n'
p284
S'ff 25 ca 48 20 00\n'
p285
S'.plt:00000000004017e0\n'
p286
tp287
sS'PageBlank'
p288
(S'\n__stdcall PageBlank(Widget w, long first, long last)\n'
p289
V\u000aBoolean PageBlank(Widget w,long first,long last)\u000a\u000a{\u000a  bool bVar1;\u000a  Boolean BVar2;\u000a  \u000a  if (first <= last) {\u000a    do {\u000a      BVar2 = GridHasChar(w,first);\u000a      if (BVar2 != 0) {\u000a        return 0;\u000a      }\u000a      bVar1 = first < last;\u000a      first = first + 1;\u000a    } while (bVar1);\u000a  }\u000a  return 1;\u000a}\u000a\u000a
p290
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDX\nMOV RBP,RSI\nMOV R15,RDI\nMOV R14B,0x1\nCMP RBP,RBX\nJG 0x00402efd\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,R15\nMOV RSI,RBP\nCALL 0x00402f10\nTEST AL,AL\nJNZ 0x00402efa\nCMP RBP,RBX\nLEA RBP,[RBP + 0x1]\nJL 0x00402ee0\nJMP 0x00402efd\nXOR R14D,R14D\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p291
S'55\n41 57\n41 56\n53\n50\n48 89 d3\n48 89 f5\n49 89 ff\n41 b6 01\n48 39 dd\n7f 25\n0f 1f 84 00 00 00 00 00\n4c 89 ff\n48 89 ee\ne8 25 00 00 00\n84 c0\n75 0b\n48 39 dd\n48 8d 6d 01\n7c e8\neb 03\n45 31 f6\n44 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p292
S'.text:0000000000402ec0\n.text:0000000000402ec1\n.text:0000000000402ec3\n.text:0000000000402ec5\n.text:0000000000402ec6\n.text:0000000000402ec7\n.text:0000000000402eca\n.text:0000000000402ecd\n.text:0000000000402ed0\n.text:0000000000402ed3\n.text:0000000000402ed6\n.text:0000000000402ed8\n.text:0000000000402ee0\n.text:0000000000402ee3\n.text:0000000000402ee6\n.text:0000000000402eeb\n.text:0000000000402eed\n.text:0000000000402eef\n.text:0000000000402ef2\n.text:0000000000402ef6\n.text:0000000000402ef8\n.text:0000000000402efa\n.text:0000000000402efd\n.text:0000000000402f00\n.text:0000000000402f04\n.text:0000000000402f05\n.text:0000000000402f07\n.text:0000000000402f09\n.text:0000000000402f0a\n'
p293
tp294
sS'XtCallCallbacks'
p295
(S'\n__stdcall XtCallCallbacks()\n'
p296
V\u000avoid XtCallCallbacks(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCallCallbacks_00606080)();\u000a  return;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x00606080]\n'
p298
S'ff 25 fa 48 20 00\n'
p299
S'.plt:0000000000401780\n'
p300
tp301
sS'XtAppErrorMsg'
p302
(S'\n__stdcall XtAppErrorMsg()\n'
p303
V\u000avoid XtAppErrorMsg(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppErrorMsg_006061a0)();\u000a  return;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x006061a0]\n'
p305
S'ff 25 da 47 20 00\n'
p306
S'.plt:00000000004019c0\n'
p307
tp308
sS'Resize'
p309
(S'\n__stdcall Resize(Widget gw)\n'
p310
V\u000avoid Resize(Widget gw)\u000a\u000a{\u000a  Cardinal CVar1;\u000a  Widget p_Var2;\u000a  _XtStateRec *p_Var3;\u000a  int iVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  int iVar8;\u000a  \u000a  iVar6 = *(int *)&gw[1].core.screen;\u000a  iVar4 = (int)((uint)(gw->core).width - iVar6) / *(int *)&gw[1].core.tm.lastEventTime;\u000a  iVar5 = iVar4 - iVar6;\u000a  iVar8 = 1;\u000a  if (iVar5 == 0 || iVar4 < iVar6) {\u000a    iVar5 = 1;\u000a  }\u000a  *(int *)&gw[1].core.accelerators = iVar5;\u000a  iVar4 = (int)((uint)(gw->core).height - iVar6) / *(int *)((long)&gw[1].core.tm.lastEventTime + 4);\u000a  iVar5 = iVar4 - iVar6;\u000a  if (iVar5 == 0 || iVar4 < iVar6) {\u000a    iVar5 = 1;\u000a  }\u000a  *(int *)((long)&gw[1].core.accelerators + 4) = iVar5;\u000a  p_Var2 = gw[2].core.self;\u000a  if (p_Var2 == (Widget)0x0) {\u000a    p_Var3 = gw[1].core.tm.current_state;\u000a    if (p_Var3 != (_XtStateRec *)0x0) {\u000a      iVar8 = (int)*(short *)(p_Var3 + 0x48);\u000a    }\u000a  }\u000a  else {\u000a    iVar8 = *(int *)((long)&(p_Var2->core).widget_class + 4);\u000a  }\u000a  CVar1 = gw[1].core.num_popups;\u000a  uVar7 = (*(int *)&gw[1].core.accelerators - iVar8) + CVar1 * -2;\u000a  gw[1].core.depth = (int)((uVar7 >> 0x1f) + uVar7) >> 1;\u000a  if (p_Var2 == (Widget)0x0) {\u000a    p_Var3 = gw[1].core.tm.current_state;\u000a    if (p_Var3 == (_XtStateRec *)0x0) {\u000a      iVar6 = 1;\u000a    }\u000a    else {\u000a      iVar6 = *(int *)(p_Var3 + 0x5c) + *(int *)(p_Var3 + 0x58);\u000a    }\u000a  }\u000a  else {\u000a    iVar6 = *(int *)&(p_Var2->core).widget_class;\u000a  }\u000a  uVar7 = (*(int *)((long)&gw[1].core.accelerators + 4) + CVar1 * -2) - iVar6;\u000a  *(int *)&gw[1].core.field_0xb4 = (int)((uVar7 >> 0x1f) + uVar7) >> 1;\u000a  return;\u000a}\u000a\u000a
p311
S'MOVZX EAX,word ptr [RDI + 0x34]\nMOV ECX,dword ptr [0x168 + RDI]\nSUB EAX,ECX\nCDQ\nIDIV dword ptr [0x130 + RDI]\nSUB EAX,ECX\nMOV ESI,0x1\nCMOVLE EAX,ESI\nMOV dword ptr [0x138 + RDI],EAX\nMOVZX EAX,word ptr [RDI + 0x36]\nSUB EAX,ECX\nCDQ\nIDIV dword ptr [0x134 + RDI]\nSUB EAX,ECX\nCMOVLE EAX,ESI\nMOV dword ptr [0x13c + RDI],EAX\nMOV EDX,dword ptr [0x138 + RDI]\nMOV RAX,qword ptr [0x1a0 + RDI]\nTEST RAX,RAX\nJZ 0x00401e82\nMOV ESI,dword ptr [RAX + 0xc]\nJMP 0x00401e92\nMOV RCX,qword ptr [0x128 + RDI]\nTEST RCX,RCX\nJZ 0x00401e92\nMOVSX ESI,word ptr [RCX + 0x48]\nMOV ECX,dword ptr [0x158 + RDI]\nADD ECX,ECX\nSUB EDX,ESI\nSUB EDX,ECX\nMOV ESI,EDX\nSHR ESI,0x1f\nADD ESI,EDX\nSAR ESI,1\nMOV dword ptr [0x180 + RDI],ESI\nMOV EDX,dword ptr [0x13c + RDI]\nTEST RAX,RAX\nJZ 0x00401ebd\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x00401ed6\nMOV RSI,qword ptr [0x128 + RDI]\nTEST RSI,RSI\nJZ 0x00401ed1\nMOV EAX,dword ptr [RSI + 0x5c]\nADD EAX,dword ptr [RSI + 0x58]\nJMP 0x00401ed6\nMOV EAX,0x1\nSUB EDX,ECX\nSUB EDX,EAX\nMOV EAX,EDX\nSHR EAX,0x1f\nADD EAX,EDX\nSAR EAX,1\nMOV dword ptr [0x184 + RDI],EAX\nRET\n'
p312
S'0f b7 47 34\n8b 8f 68 01 00 00\n29 c8\n99\nf7 bf 30 01 00 00\n29 c8\nbe 01 00 00 00\n0f 4e c6\n89 87 38 01 00 00\n0f b7 47 36\n29 c8\n99\nf7 bf 34 01 00 00\n29 c8\n0f 4e c6\n89 87 3c 01 00 00\n8b 97 38 01 00 00\n48 8b 87 a0 01 00 00\n48 85 c0\n74 05\n8b 70 0c\neb 10\n48 8b 8f 28 01 00 00\n48 85 c9\n74 04\n0f bf 71 48\n8b 8f 58 01 00 00\n01 c9\n29 f2\n29 ca\n89 d6\nc1 ee 1f\n01 d6\nd1 fe\n89 b7 80 01 00 00\n8b 97 3c 01 00 00\n48 85 c0\n74 05\n8b 40 08\neb 19\n48 8b b7 28 01 00 00\n48 85 f6\n74 08\n8b 46 5c\n03 46 58\neb 05\nb8 01 00 00 00\n29 ca\n29 c2\n89 d0\nc1 e8 1f\n01 d0\nd1 f8\n89 87 84 01 00 00\nc3\n'
p313
S'.text:0000000000401e30\n.text:0000000000401e34\n.text:0000000000401e3a\n.text:0000000000401e3c\n.text:0000000000401e3d\n.text:0000000000401e43\n.text:0000000000401e45\n.text:0000000000401e4a\n.text:0000000000401e4d\n.text:0000000000401e53\n.text:0000000000401e57\n.text:0000000000401e59\n.text:0000000000401e5a\n.text:0000000000401e60\n.text:0000000000401e62\n.text:0000000000401e65\n.text:0000000000401e6b\n.text:0000000000401e71\n.text:0000000000401e78\n.text:0000000000401e7b\n.text:0000000000401e7d\n.text:0000000000401e80\n.text:0000000000401e82\n.text:0000000000401e89\n.text:0000000000401e8c\n.text:0000000000401e8e\n.text:0000000000401e92\n.text:0000000000401e98\n.text:0000000000401e9a\n.text:0000000000401e9c\n.text:0000000000401e9e\n.text:0000000000401ea0\n.text:0000000000401ea3\n.text:0000000000401ea5\n.text:0000000000401ea7\n.text:0000000000401ead\n.text:0000000000401eb3\n.text:0000000000401eb6\n.text:0000000000401eb8\n.text:0000000000401ebb\n.text:0000000000401ebd\n.text:0000000000401ec4\n.text:0000000000401ec7\n.text:0000000000401ec9\n.text:0000000000401ecc\n.text:0000000000401ecf\n.text:0000000000401ed1\n.text:0000000000401ed6\n.text:0000000000401ed8\n.text:0000000000401eda\n.text:0000000000401edc\n.text:0000000000401edf\n.text:0000000000401ee1\n.text:0000000000401ee3\n.text:0000000000401ee9\n'
p314
tp315
sS'Redisplay'
p316
(S'\n__stdcall Redisplay(Widget gw, XEvent * event, Region region)\n'
p317
V\u000avoid Redisplay(Widget gw,XEvent *event,Region region)\u000a\u000a{\u000a  if ((gw[2].core.self == (Widget)0x0) && (gw[1].core.tm.current_state == (_XtStateRec *)0x0)) {\u000a    XBell(((gw->core).screen)->display,0);\u000a  }\u000a  else {\u000a    XClipBox();\u000a    paint_grid((FontGridWidget)gw);\u000a  }\u000a  return;\u000a}\u000a\u000a
p318
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCMP qword ptr [0x1a0 + R14],0x0\nJNZ 0x00401f0f\nCMP qword ptr [0x128 + R14],0x0\nJZ 0x00401f98\nMOV RSI,RSP\nMOV RDI,RDX\nCALL 0x004017b0\nMOV ECX,dword ptr [0x168 + R14]\nMOV EDI,dword ptr [0x138 + R14]\nADD EDI,ECX\nADD ECX,dword ptr [0x13c + R14]\nMOVSX R8D,word ptr [RSP]\nMOV EAX,R8D\nCDQ\nIDIV EDI\nMOV ESI,EAX\nXOR EBX,EBX\nTEST ESI,ESI\nCMOVS ESI,EBX\nMOVZX EAX,word ptr [RSP + 0x4]\nLEA EAX,[R8 + RAX*0x1 + -0x1]\nCDQ\nIDIV EDI\nMOV R9D,EAX\nMOVSX EDI,word ptr [RSP + 0x2]\nMOV EAX,EDI\nCDQ\nIDIV ECX\nTEST EAX,EAX\nCMOVNS EBX,EAX\nMOVZX EAX,word ptr [RSP + 0x6]\nLEA EAX,[RDI + RAX*0x1 + -0x1]\nCDQ\nIDIV ECX\nMOV R8D,0x1\nMOV ECX,0x1\nSUB ECX,ESI\nADD ECX,R9D\nSUB R8D,EBX\nADD R8D,EAX\nMOV RDI,R14\nMOV EDX,EBX\nCALL 0x00402820\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RAX,qword ptr [0x98 + R14]\nMOV RDI,qword ptr [RAX + 0x8]\nXOR ESI,ESI\nCALL 0x00401820\nJMP 0x00401f90\n'
p319
S'41 56\n53\n50\n49 89 fe\n49 83 be a0 01 00 00 00\n75 0e\n49 83 be 28 01 00 00 00\n0f 84 89 00 00 00\n48 89 e6\n48 89 d7\ne8 96 f8 ff ff\n41 8b 8e 68 01 00 00\n41 8b be 38 01 00 00\n01 cf\n41 03 8e 3c 01 00 00\n44 0f bf 04 24\n44 89 c0\n99\nf7 ff\n89 c6\n31 db\n85 f6\n0f 48 f3\n0f b7 44 24 04\n41 8d 44 00 ff\n99\nf7 ff\n41 89 c1\n0f bf 7c 24 02\n89 f8\n99\nf7 f9\n85 c0\n0f 49 d8\n0f b7 44 24 06\n8d 44 07 ff\n99\nf7 f9\n41 b8 01 00 00 00\nb9 01 00 00 00\n29 f1\n44 01 c9\n41 29 d8\n41 01 c0\n4c 89 f7\n89 da\ne8 90 08 00 00\n48 83 c4 08\n5b\n41 5e\nc3\n49 8b 86 98 00 00 00\n48 8b 78 08\n31 f6\ne8 76 f8 ff ff\neb e4\n'
p320
S'.text:0000000000401ef0\n.text:0000000000401ef2\n.text:0000000000401ef3\n.text:0000000000401ef4\n.text:0000000000401ef7\n.text:0000000000401eff\n.text:0000000000401f01\n.text:0000000000401f09\n.text:0000000000401f0f\n.text:0000000000401f12\n.text:0000000000401f15\n.text:0000000000401f1a\n.text:0000000000401f21\n.text:0000000000401f28\n.text:0000000000401f2a\n.text:0000000000401f31\n.text:0000000000401f36\n.text:0000000000401f39\n.text:0000000000401f3a\n.text:0000000000401f3c\n.text:0000000000401f3e\n.text:0000000000401f40\n.text:0000000000401f42\n.text:0000000000401f45\n.text:0000000000401f4a\n.text:0000000000401f4f\n.text:0000000000401f50\n.text:0000000000401f52\n.text:0000000000401f55\n.text:0000000000401f5a\n.text:0000000000401f5c\n.text:0000000000401f5d\n.text:0000000000401f5f\n.text:0000000000401f61\n.text:0000000000401f64\n.text:0000000000401f69\n.text:0000000000401f6d\n.text:0000000000401f6e\n.text:0000000000401f70\n.text:0000000000401f76\n.text:0000000000401f7b\n.text:0000000000401f7d\n.text:0000000000401f80\n.text:0000000000401f83\n.text:0000000000401f86\n.text:0000000000401f89\n.text:0000000000401f8b\n.text:0000000000401f90\n.text:0000000000401f94\n.text:0000000000401f95\n.text:0000000000401f97\n.text:0000000000401f98\n.text:0000000000401f9f\n.text:0000000000401fa3\n.text:0000000000401fa5\n.text:0000000000401faa\n'
p321
tp322
sS'XtDisplay'
p323
(S'\n__stdcall XtDisplay()\n'
p324
V\u000avoid XtDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisplay_006060f0)();\u000a  return;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x006060f0]\n'
p326
S'ff 25 8a 48 20 00\n'
p327
S'.plt:0000000000401860\n'
p328
tp329
sS'fprintf'
p330
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p331
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_006061c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x006061c0]\n'
p333
S'ff 25 ba 47 20 00\n'
p334
S'.plt:0000000000401a00\n'
p335
tp336
sS'XtAddConverter'
p337
(S'\n__stdcall XtAddConverter()\n'
p338
V\u000avoid XtAddConverter(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAddConverter_00606118)();\u000a  return;\u000a}\u000a\u000a
p339
S'JMP qword ptr [0x00606118]\n'
p340
S'ff 25 62 48 20 00\n'
p341
S'.plt:00000000004018b0\n'
p342
tp343
sS'XInternAtom'
p344
(S'\n__stdcall XInternAtom()\n'
p345
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_00606188)();\u000a  return;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x00606188]\n'
p347
S'ff 25 f2 47 20 00\n'
p348
S'.plt:0000000000401990\n'
p349
tp350
sS'XmuFreeXftColor'
p351
(S'\n__stdcall XmuFreeXftColor(XtAppContext app, XrmValuePtr toVal, XtPointer closure, XrmValuePtr args, Cardinal * num_args)\n'
p352
V\u000avoid XmuFreeXftColor(XtAppContext app,XrmValuePtr toVal,XtPointer closure,XrmValuePtr args,\u000a                    Cardinal *num_args)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  XPointer pcVar2;\u000a  long lVar3;\u000a  long lVar4;\u000a  int iVar5;\u000a  \u000a  if (*num_args == 2) {\u000a    uVar1 = *(undefined8 *)args[1].addr;\u000a    pcVar2 = toVal->addr;\u000a    lVar3 = *(long *)(*(long *)args->addr + 8);\u000a    lVar4 = *(long *)(lVar3 + 0xe8);\u000a    iVar5 = XScreenNumberOfScreen();\u000a    (*(code *)PTR_XftColorFree_00606150)\u000a              (lVar3,*(undefined8 *)(lVar4 + 0x40 + (long)iVar5 * 0x80),uVar1,pcVar2);\u000a    return;\u000a  }\u000a  XtAppErrorMsg(app,"freeXftColor","wrongParameters","XtToolkitError",\u000a                "Freeing an XftColor requires screen and colormap arguments",0,0);\u000a  return;\u000a}\u000a\u000a
p353
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nCMP dword ptr [R8],0x2\nJNZ 0x00402634\nMOV RAX,qword ptr [RCX + 0x8]\nMOV RCX,qword ptr [RCX + 0x18]\nMOV RDI,qword ptr [RAX]\nMOV R15,qword ptr [RCX]\nMOV R14,qword ptr [RSI + 0x8]\nMOV RBX,qword ptr [RDI + 0x8]\nMOV R12,qword ptr [0xe8 + RBX]\nCALL 0x004018c0\nCDQE\nSHL RAX,0x7\nMOV RSI,qword ptr [R12 + RAX*0x1 + 0x40]\nMOV RDI,RBX\nMOV RDX,R15\nMOV RCX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401920\nMOV qword ptr [RSP],0x0\nMOV ESI,0x4040e9\nMOV EDX,0x404070\nMOV ECX,0x404080\nMOV R8D,0x4040f6\nXOR R9D,R9D\nCALL 0x004019c0\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p354
S'41 57\n41 56\n41 54\n53\n50\n41 83 38 02\n75 46\n48 8b 41 08\n48 8b 49 18\n48 8b 38\n4c 8b 39\n4c 8b 76 08\n48 8b 5f 08\n4c 8b a3 e8 00 00 00\ne8 b0 f2 ff ff\n48 98\n48 c1 e0 07\n49 8b 74 04 40\n48 89 df\n4c 89 fa\n4c 89 f1\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 ec f2 ff ff\n48 c7 04 24 00 00 00 00\nbe e9 40 40 00\nba 70 40 40 00\nb9 80 40 40 00\n41 b8 f6 40 40 00\n45 31 c9\ne8 67 f3 ff ff\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p355
S'.text:00000000004025e0\n.text:00000000004025e2\n.text:00000000004025e4\n.text:00000000004025e6\n.text:00000000004025e7\n.text:00000000004025e8\n.text:00000000004025ec\n.text:00000000004025ee\n.text:00000000004025f2\n.text:00000000004025f6\n.text:00000000004025f9\n.text:00000000004025fc\n.text:0000000000402600\n.text:0000000000402604\n.text:000000000040260b\n.text:0000000000402610\n.text:0000000000402612\n.text:0000000000402616\n.text:000000000040261b\n.text:000000000040261e\n.text:0000000000402621\n.text:0000000000402624\n.text:0000000000402628\n.text:0000000000402629\n.text:000000000040262b\n.text:000000000040262d\n.text:000000000040262f\n.text:0000000000402634\n.text:000000000040263c\n.text:0000000000402641\n.text:0000000000402646\n.text:000000000040264b\n.text:0000000000402651\n.text:0000000000402654\n.text:0000000000402659\n.text:000000000040265d\n.text:000000000040265e\n.text:0000000000402660\n.text:0000000000402662\n.text:0000000000402664\n'
p356
tp357
sS'Realize'
p358
(S'\n__stdcall Realize(Widget gw, Mask * valueMask, XSetWindowAttributes * attributes)\n'
p359
V\u000avoid Realize(Widget gw,Mask *valueMask,XSetWindowAttributes *attributes)\u000a\u000a{\u000a  _XDisplay *p_Var1;\u000a  GC p_Var2;\u000a  Pixel PVar3;\u000a  \u000a  p_Var2 = get_gc((FontGridWidget)gw,gw[1].core.background_pixmap);\u000a  *(GC *)&gw[1].core.colormap = p_Var2;\u000a  p_Var2 = get_gc((FontGridWidget)gw,gw[1].core.border_pixel);\u000a  *(GC *)&gw[1].core.window = p_Var2;\u000a  Resize(gw);\u000a  (*(((((gw->core).widget_class)->core_class).superclass)->core_class).realize)\u000a            (gw,valueMask,attributes);\u000a  p_Var1 = ((gw->core).screen)->display;\u000a  PVar3 = XftDrawCreate(p_Var1,(gw->core).window,\u000a                        *(undefined8 *)\u000a                         (*(long *)(p_Var1 + 0xe8) + 0x40 + (long)*(int *)(p_Var1 + 0xe0) * 0x80),\u000a                        (gw->core).colormap);\u000a  gw[1].core.background_pixel = PVar3;\u000a  return;\u000a}\u000a\u000a
p360
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nMOV RSI,qword ptr [0x190 + RBX]\nCALL 0x004027a0\nMOV qword ptr [0x170 + RBX],RAX\nMOV RSI,qword ptr [0x140 + RBX]\nMOV RDI,RBX\nCALL 0x004027a0\nMOV qword ptr [0x178 + RBX],RAX\nMOV RDI,RBX\nCALL 0x00401e30\nMOV RAX,qword ptr [RBX + 0x8]\nMOV RAX,qword ptr [RAX]\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nCALL qword ptr [RAX + 0x40]\nMOV RAX,qword ptr [0x98 + RBX]\nMOV RCX,qword ptr [0xa0 + RBX]\nMOV RDI,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [0xa8 + RBX]\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RDX,dword ptr [0xe0 + RDI]\nSHL RDX,0x7\nMOV RDX,qword ptr [RAX + RDX*0x1 + 0x40]\nCALL 0x00401a30\nMOV qword ptr [0x188 + RBX],RAX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p361
S'41 57\n41 56\n53\n49 89 d6\n49 89 f7\n48 89 fb\n48 8b b3 90 01 00 00\ne8 16 0a 00 00\n48 89 83 70 01 00 00\n48 8b b3 40 01 00 00\n48 89 df\ne8 00 0a 00 00\n48 89 83 78 01 00 00\n48 89 df\ne8 81 00 00 00\n48 8b 43 08\n48 8b 00\n48 89 df\n4c 89 fe\n4c 89 f2\nff 50 40\n48 8b 83 98 00 00 00\n48 8b 8b a0 00 00 00\n48 8b 78 08\n48 8b b3 a8 00 00 00\n48 8b 87 e8 00 00 00\n48 63 97 e0 00 00 00\n48 c1 e2 07\n48 8b 54 10 40\ne8 39 fc ff ff\n48 89 83 88 01 00 00\n5b\n41 5e\n41 5f\nc3\n'
p362
S'.text:0000000000401d70\n.text:0000000000401d72\n.text:0000000000401d74\n.text:0000000000401d75\n.text:0000000000401d78\n.text:0000000000401d7b\n.text:0000000000401d7e\n.text:0000000000401d85\n.text:0000000000401d8a\n.text:0000000000401d91\n.text:0000000000401d98\n.text:0000000000401d9b\n.text:0000000000401da0\n.text:0000000000401da7\n.text:0000000000401daa\n.text:0000000000401daf\n.text:0000000000401db3\n.text:0000000000401db6\n.text:0000000000401db9\n.text:0000000000401dbc\n.text:0000000000401dbf\n.text:0000000000401dc2\n.text:0000000000401dc9\n.text:0000000000401dd0\n.text:0000000000401dd4\n.text:0000000000401ddb\n.text:0000000000401de2\n.text:0000000000401de9\n.text:0000000000401ded\n.text:0000000000401df2\n.text:0000000000401df7\n.text:0000000000401dfe\n.text:0000000000401dff\n.text:0000000000401e01\n.text:0000000000401e03\n'
p363
tp364
sS'XSetWMProtocols'
p365
(S'\n__stdcall XSetWMProtocols()\n'
p366
V\u000avoid XSetWMProtocols(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetWMProtocols_00606110)();\u000a  return;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x00606110]\n'
p368
S'ff 25 6a 48 20 00\n'
p369
S'.plt:00000000004018a0\n'
p370
tp371
sS'XftDrawString32'
p372
(S'\n__stdcall XftDrawString32()\n'
p373
V\u000avoid XftDrawString32(void)\u000a\u000a{\u000a  (*(code *)PTR_XftDrawString32_006060a0)();\u000a  return;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x006060a0]\n'
p375
S'ff 25 da 48 20 00\n'
p376
S'.plt:00000000004017c0\n'
p377
tp378
sS'XtAppMainLoop'
p379
(S'\n__stdcall XtAppMainLoop()\n'
p380
V\u000avoid XtAppMainLoop(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppMainLoop_006060b8)();\u000a  return;\u000a}\u000a\u000a
p381
S'JMP qword ptr [0x006060b8]\n'
p382
S'ff 25 c2 48 20 00\n'
p383
S'.plt:00000000004017f0\n'
p384
tp385
sS'_init'
p386
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p387
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00605ff0;\u000a  if (PTR___gmon_start___00605ff0 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00605ff0)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p388
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00605ff0]\nTEST RAX,RAX\nJZ 0x0040169a\nCALL RAX\nADD RSP,0x8\nRET\n'
p389
S'48 83 ec 08\n48 8b 05 5d 49 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p390
S'.init:0000000000401688\n.init:000000000040168c\n.init:0000000000401693\n.init:0000000000401696\n.init:0000000000401698\n.init:000000000040169a\n.init:000000000040169e\n'
p391
tp392
sS'XmuCvtStringToXftColor'
p393
(S'\n__stdcall XmuCvtStringToXftColor(Display * dpy, XrmValue * args, Cardinal * num_args, XrmValue * fromVal, XrmValue * toVal, XtPointer * converter_data)\n'
p394
V\u000aBoolean XmuCvtStringToXftColor\u000a                  (Display *dpy,XrmValue *args,Cardinal *num_args,XrmValue *fromVal,XrmValue *toVal,\u000a                  XtPointer *converter_data)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s1;\u000a  long lVar2;\u000a  undefined4 *puVar3;\u000a  XftColor static_val;\u000a  int iVar4;\u000a  undefined8 uVar5;\u000a  Boolean BVar6;\u000a  XftColor xftColor;\u000a  undefined2 local_48;\u000a  undefined2 local_46;\u000a  undefined2 local_44;\u000a  undefined2 local_42;\u000a  undefined4 local_40;\u000a  undefined4 uStack60;\u000a  undefined4 uStack56;\u000a  undefined4 uStack52;\u000a  \u000a  if (*num_args != 2) {\u000a    uVar5 = XtDisplayToApplicationContext(dpy);\u000a    XtAppErrorMsg(uVar5,"cvtStringToXftColor","wrongParameters","XtToolkitError",\u000a                  "String to render color conversion needs screen and colormap arguments",0,0);\u000a    return 0;\u000a  }\u000a  uVar5 = *(undefined8 *)args->addr;\u000a  uVar1 = *(undefined8 *)args[1].addr;\u000a  __s1 = fromVal->addr;\u000a  iVar4 = strcasecmp(__s1,"XtDefaultForeground");\u000a  if (iVar4 == 0) {\u000a    local_48 = 0;\u000aLAB_0040252a:\u000a    local_42 = 0xffff;\u000a    local_46 = local_48;\u000a    local_44 = local_48;\u000a  }\u000a  else {\u000a    iVar4 = strcasecmp(__s1,"XtDefaultBackground");\u000a    if (iVar4 == 0) {\u000a      local_48 = 0xffff;\u000a      goto LAB_0040252a;\u000a    }\u000a    iVar4 = XRenderParseColor(dpy,__s1,&local_48);\u000a    if (iVar4 == 0) {\u000a      return 0;\u000a    }\u000a  }\u000a  lVar2 = *(long *)(dpy + 0xe8);\u000a  iVar4 = XScreenNumberOfScreen(uVar5);\u000a  iVar4 = XftColorAllocValue(dpy,*(undefined8 *)(lVar2 + 0x40 + (long)iVar4 * 0x80),uVar1,&local_48,\u000a                             &local_40);\u000a  if (iVar4 == 0) {\u000aLAB_0040259a:\u000a    BVar6 = 0;\u000a  }\u000a  else {\u000a    puVar3 = (undefined4 *)toVal->addr;\u000a    if (puVar3 == (undefined4 *)0x0) {\u000a      toVal->addr = (XPointer)0x606930;\u000a    }\u000a    else {\u000a      if (toVal->size < 0x10) {\u000a        toVal->size = 0x10;\u000a        XtDisplayStringConversionWarning(dpy,fromVal->addr,0x4040ed);\u000a        goto LAB_0040259a;\u000a      }\u000a      *puVar3 = local_40;\u000a      puVar3[1] = uStack60;\u000a      puVar3[2] = uStack56;\u000a      puVar3[3] = uStack52;\u000a    }\u000a    toVal->size = 0x10;\u000a    BVar6 = 1;\u000a  }\u000a  return BVar6;\u000a}\u000a\u000a
p395
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R14,R8\nMOV R15,RCX\nMOV RBX,RDI\nCMP dword ptr [RDX],0x2\nJNZ 0x004024eb\nMOV RAX,qword ptr [RSI + 0x8]\nMOV RCX,qword ptr [RSI + 0x18]\nMOV R13,qword ptr [RAX]\nMOV R12,qword ptr [RCX]\nMOV RBP,qword ptr [R15 + 0x8]\nMOV ESI,0x404017\nMOV RDI,RBP\nCALL 0x00401760\nTEST EAX,EAX\nJZ 0x00402522\nMOV ESI,0x4040d5\nMOV RDI,RBP\nCALL 0x00401760\nTEST EAX,EAX\nJZ 0x00402526\nLEA RDX,[RSP + 0x10]\nMOV RDI,RBX\nMOV RSI,RBP\nCALL 0x00401880\nTEST EAX,EAX\nJNZ 0x00402540\nXOR EBX,EBX\nJMP 0x004025c5\nMOV RDI,RBX\nCALL 0x00401810\nMOV qword ptr [RSP],0x0\nXOR EBX,EBX\nMOV ESI,0x40405c\nMOV EDX,0x404070\nMOV ECX,0x404080\nMOV R8D,0x40408f\nXOR R9D,R9D\nMOV RDI,RAX\nCALL 0x004019c0\nJMP 0x004025c5\nXOR EAX,EAX\nJMP 0x0040252a\nMOV AX,0xffff\nMOV word ptr [RSP + 0x10],AX\nMOV word ptr [RSP + 0x12],AX\nMOV word ptr [RSP + 0x14],AX\nMOV word ptr [RSP + 0x16],0xffff\nMOV RBP,qword ptr [0xe8 + RBX]\nMOV RDI,R13\nCALL 0x004018c0\nCDQE\nSHL RAX,0x7\nMOV RSI,qword ptr [RBP + RAX*0x1 + 0x40]\nLEA RCX,[RSP + 0x10]\nLEA R8,[RSP + 0x18]\nMOV RDI,RBX\nMOV RDX,R12\nCALL 0x00401970\nTEST EAX,EAX\nJZ 0x0040259a\nMOV RAX,qword ptr [R14 + 0x8]\nTEST RAX,RAX\nJZ 0x0040259e\nCMP dword ptr [R14],0xf\nJA 0x004025b4\nMOV dword ptr [R14],0x10\nMOV RSI,qword ptr [R15 + 0x8]\nMOV EDX,0x4040ed\nMOV RDI,RBX\nCALL 0x00401930\nXOR EBX,EBX\nJMP 0x004025c5\nMOVUPS XMM0,xmmword ptr [RSP + 0x18]\nMOVUPS xmmword ptr [0x00606930],XMM0\nMOV qword ptr [R14 + 0x8],0x606930\nJMP 0x004025bc\nMOVUPS XMM0,xmmword ptr [RSP + 0x18]\nMOVUPS xmmword ptr [RAX],XMM0\nMOV dword ptr [R14],0x10\nMOV BL,0x1\nMOV EAX,EBX\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p396
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n4d 89 c6\n49 89 cf\n48 89 fb\n83 3a 02\n75 4f\n48 8b 46 08\n48 8b 4e 18\n4c 8b 28\n4c 8b 21\n49 8b 6f 08\nbe 17 40 40 00\n48 89 ef\ne8 a5 f2 ff ff\n85 c0\n74 63\nbe d5 40 40 00\n48 89 ef\ne8 94 f2 ff ff\n85 c0\n74 56\n48 8d 54 24 10\n48 89 df\n48 89 ee\ne8 a0 f3 ff ff\n85 c0\n75 5c\n31 db\ne9 da 00 00 00\n48 89 df\ne8 1d f3 ff ff\n48 c7 04 24 00 00 00 00\n31 db\nbe 5c 40 40 00\nba 70 40 40 00\nb9 80 40 40 00\n41 b8 8f 40 40 00\n45 31 c9\n48 89 c7\ne8 a3 f4 ff ff\ne9 a3 00 00 00\n31 c0\neb 04\n66 b8 ff ff\n66 89 44 24 10\n66 89 44 24 12\n66 89 44 24 14\n66 c7 44 24 16 ff ff\n48 8b ab e8 00 00 00\n4c 89 ef\ne8 71 f3 ff ff\n48 98\n48 c1 e0 07\n48 8b 74 05 40\n48 8d 4c 24 10\n4c 8d 44 24 18\n48 89 df\n4c 89 e2\ne8 01 f4 ff ff\n85 c0\n74 27\n49 8b 46 08\n48 85 c0\n74 22\n41 83 3e 0f\n77 32\n41 c7 06 10 00 00 00\n49 8b 77 08\nba ed 40 40 00\n48 89 df\ne8 96 f3 ff ff\n31 db\neb 27\n0f 10 44 24 18\n0f 11 05 86 43 20 00\n49 c7 46 08 30 69 60 00\neb 08\n0f 10 44 24 18\n0f 11 00\n41 c7 06 10 00 00 00\nb3 01\n89 d8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p397
S'.text:0000000000402480\n.text:0000000000402481\n.text:0000000000402483\n.text:0000000000402485\n.text:0000000000402487\n.text:0000000000402489\n.text:000000000040248a\n.text:000000000040248e\n.text:0000000000402491\n.text:0000000000402494\n.text:0000000000402497\n.text:000000000040249a\n.text:000000000040249c\n.text:00000000004024a0\n.text:00000000004024a4\n.text:00000000004024a7\n.text:00000000004024aa\n.text:00000000004024ae\n.text:00000000004024b3\n.text:00000000004024b6\n.text:00000000004024bb\n.text:00000000004024bd\n.text:00000000004024bf\n.text:00000000004024c4\n.text:00000000004024c7\n.text:00000000004024cc\n.text:00000000004024ce\n.text:00000000004024d0\n.text:00000000004024d5\n.text:00000000004024d8\n.text:00000000004024db\n.text:00000000004024e0\n.text:00000000004024e2\n.text:00000000004024e4\n.text:00000000004024e6\n.text:00000000004024eb\n.text:00000000004024ee\n.text:00000000004024f3\n.text:00000000004024fb\n.text:00000000004024fd\n.text:0000000000402502\n.text:0000000000402507\n.text:000000000040250c\n.text:0000000000402512\n.text:0000000000402515\n.text:0000000000402518\n.text:000000000040251d\n.text:0000000000402522\n.text:0000000000402524\n.text:0000000000402526\n.text:000000000040252a\n.text:000000000040252f\n.text:0000000000402534\n.text:0000000000402539\n.text:0000000000402540\n.text:0000000000402547\n.text:000000000040254a\n.text:000000000040254f\n.text:0000000000402551\n.text:0000000000402555\n.text:000000000040255a\n.text:000000000040255f\n.text:0000000000402564\n.text:0000000000402567\n.text:000000000040256a\n.text:000000000040256f\n.text:0000000000402571\n.text:0000000000402573\n.text:0000000000402577\n.text:000000000040257a\n.text:000000000040257c\n.text:0000000000402580\n.text:0000000000402582\n.text:0000000000402589\n.text:000000000040258d\n.text:0000000000402592\n.text:0000000000402595\n.text:000000000040259a\n.text:000000000040259c\n.text:000000000040259e\n.text:00000000004025a3\n.text:00000000004025aa\n.text:00000000004025b2\n.text:00000000004025b4\n.text:00000000004025b9\n.text:00000000004025bc\n.text:00000000004025c3\n.text:00000000004025c5\n.text:00000000004025c7\n.text:00000000004025cb\n.text:00000000004025cc\n.text:00000000004025ce\n.text:00000000004025d0\n.text:00000000004025d2\n.text:00000000004025d4\n.text:00000000004025d5\n'
p398
tp399
sS'SelectChar'
p400
(S'\n__stdcall SelectChar(Widget w, XtPointer closure, XtPointer data)\n'
p401
V\u000avoid SelectChar(Widget w,XtPointer closure,XtPointer data)\u000a\u000a{\u000a  long lVar1;\u000a  uint *puVar2;\u000a  char cVar3;\u000a  undefined8 uVar4;\u000a  long lVar5;\u000a  ulong uVar6;\u000a  bool bVar7;\u000a  XCharStruct metrics;\u000a  int direction;\u000a  char buf [256];\u000a  undefined local_158;\u000a  undefined local_157;\u000a  ushort local_150;\u000a  ushort local_14e;\u000a  short local_14c;\u000a  short local_14a;\u000a  short local_148;\u000a  undefined4 local_144;\u000a  uint local_140;\u000a  uint local_13c;\u000a  undefined8 local_138;\u000a  char *local_130;\u000a  char local_128 [264];\u000a  \u000a  lVar1 = *(long *)((long)data + 8);\u000a  uVar6 = *(ulong *)((long)data + 0x10);\u000a  local_138 = 0x6054ed;\u000a  local_130 = local_128;\u000a  local_128[0] = 0;\u000a  puVar2 = *(uint **)data;\u000a  lVar5 = (long)uVar6 >> 8;\u000a  if (puVar2 != (uint *)0x0) {\u000a    local_144 = (undefined4)uVar6;\u000a    cVar3 = FcCharSetHasChar(*(undefined8 *)(puVar2 + 4),uVar6 & 0xffffffff);\u000a    if (cVar3 != 0) {\u000a      uVar4 = XtDisplay(w);\u000a      XftTextExtents32(uVar4,puVar2,&local_144,1);\u000a      snprintf(local_128,0x100,xfd_resources.metrics_format,(ulong)(uint)(int)local_148,\u000a               (ulong)(uint)-(int)local_14c,\u000a               (ulong)(((int)local_14c + (int)local_148) - (uint)local_150),\u000a               (ulong)(uint)(int)local_14a,(ulong)((uint)local_14e - (int)local_14a),(ulong)*puVar2,\u000a               (ulong)puVar2[1]);\u000a    }\u000a    bVar7 = cVar3 != 0;\u000a    goto LAB_0040382a;\u000a  }\u000a  if ((*(uint *)(lVar1 + 0x1c) == 0) && (*(int *)(lVar1 + 0x20) == 0)) {\u000a    if ((long)uVar6 < (long)(ulong)*(uint *)(lVar1 + 0x14)) {\u000a      bVar7 = false;\u000a      goto LAB_0040382a;\u000a    }\u000a    if ((long)(ulong)*(uint *)(lVar1 + 0x18) < (long)uVar6) {\u000a      bVar7 = false;\u000a      goto LAB_0040382a;\u000a    }\u000a  }\u000a  else {\u000a    if (lVar5 < (long)(ulong)*(uint *)(lVar1 + 0x1c)) {\u000a      bVar7 = false;\u000a      goto LAB_0040382a;\u000a    }\u000a    if ((long)(ulong)*(uint *)(lVar1 + 0x20) < lVar5) {\u000a      bVar7 = false;\u000a      goto LAB_0040382a;\u000a    }\u000a    if ((uVar6 & 0xff) < (ulong)*(uint *)(lVar1 + 0x14)) {\u000a      bVar7 = false;\u000a      goto LAB_0040382a;\u000a    }\u000a    if ((ulong)*(uint *)(lVar1 + 0x18) < (uVar6 & 0xff)) {\u000a      bVar7 = false;\u000a      goto LAB_0040382a;\u000a    }\u000a  }\u000a  local_158 = (undefined)((ulong)*(undefined8 *)((long)data + 0x10) >> 8);\u000a  local_157 = (undefined)*(undefined8 *)((long)data + 0x10);\u000a  XTextExtents16(lVar1,&local_158,1,&local_144,&local_13c,&local_140,&local_150);\u000a  snprintf(local_128,0x100,xfd_resources.metrics_format,(ulong)(uint)(int)local_14c,\u000a           (ulong)(uint)(int)(short)local_150,(ulong)(uint)(int)(short)local_14e,\u000a           (ulong)(uint)(int)local_14a,(ulong)(uint)(int)local_148,(ulong)local_13c,(ulong)local_140\u000a          );\u000a  bVar7 = true;\u000aLAB_0040382a:\u000a  uVar4 = 0x403840;\u000a  XtSetValues(metricsLabel,&local_138,1);\u000a  uVar6 = uVar6 & 0xff;\u000a  if (bVar7) {\u000a    snprintf(local_128,0x100,xfd_resources.select_format,lVar5,uVar6,lVar5,uVar6,lVar5,uVar6,uVar4);\u000a  }\u000a  else {\u000a    snprintf(local_128,0x100,xfd_resources.nochar_format,lVar5,uVar6,lVar5,uVar6,lVar5,uVar6,uVar4);\u000a  }\u000a  XtSetValues(selectLabel,&local_138,1);\u000a  return;\u000a}\u000a\u000a
p402
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x138\nMOV RBP,RDI\nMOV RDI,qword ptr [RDX + 0x8]\nMOV R14,qword ptr [RDX + 0x10]\nMOV qword ptr [RSP + 0x20],0x6054ed\nLEA RAX,[RSP + 0x30]\nMOV qword ptr [RSP + 0x28],RAX\nMOV byte ptr [RSP + 0x30],0x0\nMOV RBX,qword ptr [RDX]\nTEST RBX,RBX\nJZ 0x00403737\nMOV dword ptr [RSP + 0x14],R14D\nMOV RDI,qword ptr [RBX + 0x10]\nMOV ESI,R14D\nCALL 0x00401890\nMOV R15D,EAX\nTEST R15B,R15B\nJZ 0x0040372c\nMOV RDI,RBP\nCALL 0x00401860\nLEA RDX,[RSP + 0x14]\nLEA R8,[RSP + 0x8]\nMOV ECX,0x1\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x00401840\nMOV RDX,qword ptr [0x00606958]\nMOVSX ECX,word ptr [RSP + 0x10]\nMOVSX R9D,word ptr [RSP + 0xc]\nMOV R8D,R9D\nNEG R8D\nMOVZX EAX,word ptr [RSP + 0x8]\nADD R9D,ECX\nSUB R9D,EAX\nMOVSX R10D,word ptr [RSP + 0xe]\nMOVZX EBP,word ptr [RSP + 0xa]\nSUB EBP,R10D\nMOV R11D,dword ptr [RBX]\nMOV EBX,dword ptr [RBX + 0x4]\nLEA RDI,[RSP + 0x30]\nMOV ESI,0x100\nMOV EAX,0x0\nPUSH RBX\nPUSH R11\nPUSH RBP\nPUSH R10\nCALL 0x004016e0\nADD RSP,0x20\nTEST R15B,R15B\nSETNZ BL\nJMP 0x0040382a\nMOV EAX,dword ptr [RDI + 0x1c]\nTEST RAX,RAX\nJNZ 0x00403745\nCMP dword ptr [RDI + 0x20],0x0\nJZ 0x0040377a\nMOV RCX,R14\nSAR RCX,0x8\nCMP RCX,RAX\nJGE 0x00403758\nXOR EBX,EBX\nJMP 0x0040382a\nMOV EAX,dword ptr [RDI + 0x20]\nCMP RCX,RAX\nJLE 0x00403767\nXOR EBX,EBX\nJMP 0x0040382a\nMOVZX EAX,R14B\nMOV ECX,dword ptr [RDI + 0x14]\nCMP RAX,RCX\nJNC 0x00403789\nXOR EBX,EBX\nJMP 0x0040382a\nMOV EAX,dword ptr [RDI + 0x14]\nCMP R14,RAX\nJGE 0x00403798\nXOR EBX,EBX\nJMP 0x0040382a\nMOV ECX,dword ptr [RDI + 0x18]\nCMP RAX,RCX\nJBE 0x004037a7\nXOR EBX,EBX\nJMP 0x0040382a\nMOV EAX,dword ptr [RDI + 0x18]\nCMP R14,RAX\nJLE 0x004037a7\nXOR EBX,EBX\nJMP 0x0040382a\nMOV RAX,qword ptr [RDX + 0x10]\nMOV byte ptr [RSP],AH\nMOV byte ptr [RSP + 0x1],AL\nSUB RSP,0x8\nLEA RAX,[RSP + 0x10]\nLEA RSI,[RSP + 0x8]\nLEA RCX,[RSP + 0x1c]\nLEA R8,[RSP + 0x24]\nLEA R9,[RSP + 0x20]\nMOV EDX,0x1\nPUSH RAX\nCALL 0x00401750\nADD RSP,0x10\nMOV RDX,qword ptr [0x00606958]\nMOVSX ECX,word ptr [RSP + 0xc]\nMOVSX R8D,word ptr [RSP + 0x8]\nMOVSX R9D,word ptr [RSP + 0xa]\nMOVSX R10D,word ptr [RSP + 0xe]\nMOVSX R11D,word ptr [RSP + 0x10]\nMOV EBP,dword ptr [RSP + 0x1c]\nMOV EBX,dword ptr [RSP + 0x18]\nLEA RDI,[RSP + 0x30]\nMOV ESI,0x100\nMOV EAX,0x0\nPUSH RBX\nPUSH RBP\nPUSH R11\nPUSH R10\nCALL 0x004016e0\nADD RSP,0x20\nMOV BL,0x1\nMOV RDI,qword ptr [0x006069a8]\nLEA RSI,[RSP + 0x20]\nMOV EDX,0x1\nCALL 0x00401710\nMOV RCX,R14\nSAR RCX,0x8\nMOVZX R8D,R14B\nTEST BL,BL\nJZ 0x0040387c\nMOV RDX,qword ptr [0x00606950]\nSUB RSP,0x8\nLEA RDI,[RSP + 0x38]\nMOV ESI,0x100\nMOV EAX,0x0\nMOV R9,RCX\nPUSH R8\nPUSH RCX\nPUSH R8\nCALL 0x004016e0\nADD RSP,0x20\nJMP 0x004038a7\nMOV RDX,qword ptr [0x00606970]\nSUB RSP,0x8\nLEA RDI,[RSP + 0x38]\nMOV ESI,0x100\nMOV EAX,0x0\nMOV R9,RCX\nPUSH R8\nPUSH RCX\nPUSH R8\nCALL 0x004016e0\nADD RSP,0x20\nMOV RDI,qword ptr [0x006069a0]\nLEA RSI,[RSP + 0x20]\nMOV EDX,0x1\nCALL 0x00401710\nADD RSP,0x138\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p403
S'55\n41 57\n41 56\n53\n48 81 ec 38 01 00 00\n48 89 fd\n48 8b 7a 08\n4c 8b 72 10\n48 c7 44 24 20 ed 54 60 00\n48 8d 44 24 30\n48 89 44 24 28\nc6 44 24 30 00\n48 8b 1a\n48 85 db\n0f 84 9b 00 00 00\n44 89 74 24 14\n48 8b 7b 10\n44 89 f6\ne8 e3 e1 ff ff\n41 89 c7\n45 84 ff\n74 77\n48 89 ef\ne8 a3 e1 ff ff\n48 8d 54 24 14\n4c 8d 44 24 08\nb9 01 00 00 00\n48 89 c7\n48 89 de\ne8 69 e1 ff ff\n48 8b 15 7a 32 20 00\n0f bf 4c 24 10\n44 0f bf 4c 24 0c\n45 89 c8\n41 f7 d8\n0f b7 44 24 08\n41 01 c9\n41 29 c1\n44 0f bf 54 24 0e\n0f b7 6c 24 0a\n44 29 d5\n44 8b 1b\n8b 5b 04\n48 8d 7c 24 30\nbe 00 01 00 00\nb8 00 00 00 00\n53\n41 53\n55\n41 52\ne8 b8 df ff ff\n48 83 c4 20\n45 84 ff\n0f 95 c3\ne9 f3 00 00 00\n8b 47 1c\n48 85 c0\n75 06\n83 7f 20 00\n74 35\n4c 89 f1\n48 c1 f9 08\n48 39 c1\n7d 07\n31 db\ne9 d2 00 00 00\n8b 47 20\n48 39 c1\n7e 07\n31 db\ne9 c3 00 00 00\n41 0f b6 c6\n8b 4f 14\n48 39 c8\n73 16\n31 db\ne9 b0 00 00 00\n8b 47 14\n49 39 c6\n7d 16\n31 db\ne9 a1 00 00 00\n8b 4f 18\n48 39 c8\n76 16\n31 db\ne9 92 00 00 00\n8b 47 18\n49 39 c6\n7e 07\n31 db\ne9 83 00 00 00\n48 8b 42 10\n88 24 24\n88 44 24 01\n48 83 ec 08\n48 8d 44 24 10\n48 8d 74 24 08\n48 8d 4c 24 1c\n4c 8d 44 24 24\n4c 8d 4c 24 20\nba 01 00 00 00\n50\ne8 76 df ff ff\n48 83 c4 10\n48 8b 15 73 31 20 00\n0f bf 4c 24 0c\n44 0f bf 44 24 08\n44 0f bf 4c 24 0a\n44 0f bf 54 24 0e\n44 0f bf 5c 24 10\n8b 6c 24 1c\n8b 5c 24 18\n48 8d 7c 24 30\nbe 00 01 00 00\nb8 00 00 00 00\n53\n55\n41 53\n41 52\ne8 bc de ff ff\n48 83 c4 20\nb3 01\n48 8b 3d 77 31 20 00\n48 8d 74 24 20\nba 01 00 00 00\ne8 d0 de ff ff\n4c 89 f1\n48 c1 f9 08\n45 0f b6 c6\n84 db\n74 2d\n48 8b 15 fa 30 20 00\n48 83 ec 08\n48 8d 7c 24 38\nbe 00 01 00 00\nb8 00 00 00 00\n49 89 c9\n41 50\n51\n41 50\ne8 6a de ff ff\n48 83 c4 20\neb 2b\n48 8b 15 ed 30 20 00\n48 83 ec 08\n48 8d 7c 24 38\nbe 00 01 00 00\nb8 00 00 00 00\n49 89 c9\n41 50\n51\n41 50\ne8 3d de ff ff\n48 83 c4 20\n48 8b 3d f2 30 20 00\n48 8d 74 24 20\nba 01 00 00 00\ne8 53 de ff ff\n48 81 c4 38 01 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p404
S'.text:0000000000403660\n.text:0000000000403661\n.text:0000000000403663\n.text:0000000000403665\n.text:0000000000403666\n.text:000000000040366d\n.text:0000000000403670\n.text:0000000000403674\n.text:0000000000403678\n.text:0000000000403681\n.text:0000000000403686\n.text:000000000040368b\n.text:0000000000403690\n.text:0000000000403693\n.text:0000000000403696\n.text:000000000040369c\n.text:00000000004036a1\n.text:00000000004036a5\n.text:00000000004036a8\n.text:00000000004036ad\n.text:00000000004036b0\n.text:00000000004036b3\n.text:00000000004036b5\n.text:00000000004036b8\n.text:00000000004036bd\n.text:00000000004036c2\n.text:00000000004036c7\n.text:00000000004036cc\n.text:00000000004036cf\n.text:00000000004036d2\n.text:00000000004036d7\n.text:00000000004036de\n.text:00000000004036e3\n.text:00000000004036e9\n.text:00000000004036ec\n.text:00000000004036ef\n.text:00000000004036f4\n.text:00000000004036f7\n.text:00000000004036fa\n.text:0000000000403700\n.text:0000000000403705\n.text:0000000000403708\n.text:000000000040370b\n.text:000000000040370e\n.text:0000000000403713\n.text:0000000000403718\n.text:000000000040371d\n.text:000000000040371e\n.text:0000000000403720\n.text:0000000000403721\n.text:0000000000403723\n.text:0000000000403728\n.text:000000000040372c\n.text:000000000040372f\n.text:0000000000403732\n.text:0000000000403737\n.text:000000000040373a\n.text:000000000040373d\n.text:000000000040373f\n.text:0000000000403743\n.text:0000000000403745\n.text:0000000000403748\n.text:000000000040374c\n.text:000000000040374f\n.text:0000000000403751\n.text:0000000000403753\n.text:0000000000403758\n.text:000000000040375b\n.text:000000000040375e\n.text:0000000000403760\n.text:0000000000403762\n.text:0000000000403767\n.text:000000000040376b\n.text:000000000040376e\n.text:0000000000403771\n.text:0000000000403773\n.text:0000000000403775\n.text:000000000040377a\n.text:000000000040377d\n.text:0000000000403780\n.text:0000000000403782\n.text:0000000000403784\n.text:0000000000403789\n.text:000000000040378c\n.text:000000000040378f\n.text:0000000000403791\n.text:0000000000403793\n.text:0000000000403798\n.text:000000000040379b\n.text:000000000040379e\n.text:00000000004037a0\n.text:00000000004037a2\n.text:00000000004037a7\n.text:00000000004037ab\n.text:00000000004037ae\n.text:00000000004037b2\n.text:00000000004037b6\n.text:00000000004037bb\n.text:00000000004037c0\n.text:00000000004037c5\n.text:00000000004037ca\n.text:00000000004037cf\n.text:00000000004037d4\n.text:00000000004037d5\n.text:00000000004037da\n.text:00000000004037de\n.text:00000000004037e5\n.text:00000000004037ea\n.text:00000000004037f0\n.text:00000000004037f6\n.text:00000000004037fc\n.text:0000000000403802\n.text:0000000000403806\n.text:000000000040380a\n.text:000000000040380f\n.text:0000000000403814\n.text:0000000000403819\n.text:000000000040381a\n.text:000000000040381b\n.text:000000000040381d\n.text:000000000040381f\n.text:0000000000403824\n.text:0000000000403828\n.text:000000000040382a\n.text:0000000000403831\n.text:0000000000403836\n.text:000000000040383b\n.text:0000000000403840\n.text:0000000000403843\n.text:0000000000403847\n.text:000000000040384b\n.text:000000000040384d\n.text:000000000040384f\n.text:0000000000403856\n.text:000000000040385a\n.text:000000000040385f\n.text:0000000000403864\n.text:0000000000403869\n.text:000000000040386c\n.text:000000000040386e\n.text:000000000040386f\n.text:0000000000403871\n.text:0000000000403876\n.text:000000000040387a\n.text:000000000040387c\n.text:0000000000403883\n.text:0000000000403887\n.text:000000000040388c\n.text:0000000000403891\n.text:0000000000403896\n.text:0000000000403899\n.text:000000000040389b\n.text:000000000040389c\n.text:000000000040389e\n.text:00000000004038a3\n.text:00000000004038a7\n.text:00000000004038ae\n.text:00000000004038b3\n.text:00000000004038b8\n.text:00000000004038bd\n.text:00000000004038c4\n.text:00000000004038c5\n.text:00000000004038c7\n.text:00000000004038c9\n.text:00000000004038ca\n'
p405
tp406
sS'main'
p407
(S'\n__stdcall main(char * * argv)\n'
p408
V\u000aint main(char **argv)\u000a\u000a{\u000a  FILE *__stream;\u000a  XtCallbackRec cb [2];\u000a  undefined8 uVar1;\u000a  char *pcVar2;\u000a  undefined8 uVar3;\u000a  undefined8 uVar4;\u000a  ulong uVar5;\u000a  ulong uVar6;\u000a  Display *dpy;\u000a  char *__format;\u000a  char **in_RSI;\u000a  undefined8 unaff_R14;\u000a  FcChar8 *style;\u000a  Arg av [10];\u000a  char buf [256];\u000a  XFontStruct *local_1f0;\u000a  int local_1e4;\u000a  long local_1e0;\u000a  undefined8 local_1d8;\u000a  undefined8 local_1d0;\u000a  undefined8 local_1c8;\u000a  XFontStruct **local_1c0;\u000a  char *local_1b8;\u000a  undefined8 local_1b0;\u000a  undefined *local_1a8;\u000a  undefined8 local_1a0;\u000a  char *local_198;\u000a  undefined8 local_190;\u000a  undefined8 local_188;\u000a  XtCallbackRec *local_180;\u000a  undefined8 local_128 [33];\u000a  \u000a  local_1e4 = (int)argv;\u000a  XtSetLanguageProc(0,0,0);\u000a  ProgramName = *in_RSI;\u000a  uVar1 = XtAppInitialize(&local_1d8,&DAT_004041af,xfd_options,8,&local_1e4);\u000a  textdomain(&DAT_004041b3);\u000a  pcVar2 = getenv("TEXTDOMAINDIR");\u000a  __format = "/usr/local/share/locale";\u000a  if (pcVar2 != (char *)0x0) {\u000a    __format = pcVar2;\u000a  }\u000a  bindtextdomain(&DAT_004041b3,__format);\u000a  Resources[0].default_addr = (XtPointer)dcgettext(0,0x404275,5);\u000a  Resources[1].default_addr =\u000a       (XtPointer)dcgettext(0,"width %d; left %d, right %d; ascent %d, descent %d (font %d, %d)",5);\u000a  Resources[2].default_addr =\u000a       (XtPointer)dcgettext(0,"range:  0x%04x%02x (%u,%u) thru 0x%04x%02x (%u,%u)",5);\u000a  Resources[3].default_addr = (XtPointer)dcgettext(0,"upper left:  0x%06x (%d,%d)",5);\u000a  Resources[4].default_addr =\u000a       (XtPointer)dcgettext(0,"no such character 0x%04x%02x (%u,%u) (%#o,%#o)",5);\u000a  if (local_1e4 == 1) {\u000a    XtAppAddActions(local_1d8,xfd_actions,5);\u000a    uVar3 = XtParseTranslationTable("<Message>WM_PROTOCOLS: Quit()");\u000a    XtOverrideTranslations(uVar1,uVar3);\u000a    XtGetApplicationResources(uVar1,&xfd_resources,Resources,5,0,0);\u000a    uVar3 = XtCreateManagedWidget(&DAT_004042ba,panedWidgetClass,uVar1,0,0);\u000a    unaff_R14 = XtCreateManagedWidget("fontname",labelWidgetClass,uVar3,0,0);\u000a    uVar4 = XtCreateManagedWidget(&DAT_00404391,boxWidgetClass,uVar3,0,0);\u000a    quitButton = (Widget)XtCreateManagedWidget(&DAT_004042c8,commandWidgetClass,uVar4,0,0);\u000a    prev16Button = (Widget)XtCreateManagedWidget("prev16",commandWidgetClass,uVar4,0,0);\u000a    prevButton = (Widget)XtCreateManagedWidget(&DAT_004042d4,commandWidgetClass,uVar4,0,0);\u000a    nextButton = (Widget)XtCreateManagedWidget(&DAT_004042d9,commandWidgetClass,uVar4,0,0);\u000a    next16Button = (Widget)XtCreateManagedWidget("next16",commandWidgetClass,uVar4,0,0);\u000a    selectLabel = (Widget)XtCreateManagedWidget("select",labelWidgetClass,uVar3,0,0);\u000a    metricsLabel = (Widget)XtCreateManagedWidget("metrics",labelWidgetClass,uVar3,0,0);\u000a    rangeLabel = (Widget)XtCreateManagedWidget("range",labelWidgetClass,uVar3,0,0);\u000a    startLabel = (Widget)XtCreateManagedWidget(0x40437f,labelWidgetClass,uVar3,0,0);\u000a    uVar3 = XtCreateManagedWidget(&DAT_004042fa,formWidgetClass,uVar3,0,0);\u000a    local_1c8 = 0x60565e;\u000a    local_1c0 = (XFontStruct **)0x0;\u000a    local_1b8 = "bottom";\u000a    local_1b0 = 1;\u000a    local_1a8 = &DAT_00404306;\u000a    local_1a0 = 2;\u000a    local_198 = "right";\u000a    local_190 = 3;\u000a    local_188 = 0x6053c8;\u000a    local_180 = (XtCallbackRec *)&ram0x00606630;\u000a    oldWarningHandler =\u000a         (void (*)(String,String,String,String,String *,Cardinal *))\u000a         XtAppSetWarningMsgHandler(local_1d8,CatchFontConversionWarning);\u000a    fontGrid = (Widget)XtCreateManagedWidget(&DAT_00404311,fontgridWidgetClass,uVar3,&local_1c8);\u000a    XtAppSetWarningMsgHandler(local_1d8,oldWarningHandler);\u000a    local_1c8 = 0x404379;\u000a    local_1c0 = (XFontStruct **)&local_1e0;\u000a    XtGetValues(fontGrid,&local_1c8,1);\u000a    if (local_1e0 == 0) {\u000a      local_1c8 = 0x605407;\u000a      local_1c0 = &local_1f0;\u000a      XtGetValues(fontGrid,&local_1c8,1);\u000a      __stream = stderr;\u000a      if ((local_1f0 == (XFontStruct *)0x0) || (fontConversionFailed == 1)) {\u000a        __format = (char *)dcgettext(0,"%s:  no font to display\u005cn",5);\u000a        fprintf(__stream,__format,ProgramName);\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(1);\u000a      }\u000a      dpy = (Display *)XtDisplay(uVar1);\u000a      __format = get_font_name(dpy,local_1f0);\u000a      if (__format == (char *)0x0) {\u000a        __format = (char *)dcgettext(0,"unknown font!",5);\u000a      }\u000a      goto LAB_00403507;\u000a    }\u000a  }\u000a  else {\u000a    usage();\u000a  }\u000a  local_128[0] = 0x4044aa;\u000a  FcPatternGetString(*(undefined8 *)(local_1e0 + 0x18),"family",0,local_128);\u000a  local_1f0 = (XFontStruct *)0x4044aa;\u000a  FcPatternGetString(*(undefined8 *)(local_1e0 + 0x18),"style",0,&local_1f0);\u000a  local_1d0 = 0;\u000a  FcPatternGetDouble(*(undefined8 *)(local_1e0 + 0x18),&DAT_00404323,0,&local_1d0);\u000a  uVar3 = FcPatternBuild(local_1d0,0,"family",3,local_128[0],"style",3,local_1f0,&DAT_00404323,2,0);\u000a  __format = (char *)FcNameUnparse(uVar3);\u000a  FcPatternDestroy(uVar3);\u000aLAB_00403507:\u000a  local_1c8 = 0x6054ed;\u000a  local_1c0 = (XFontStruct **)__format;\u000a  XtSetValues(unaff_R14,&local_1c8,1);\u000a  uVar5 = GridFirstChar(fontGrid);\u000a  uVar3 = 0x403545;\u000a  uVar6 = GridLastChar(fontGrid);\u000a  snprintf((char *)local_128,0x100,xfd_resources.range_format,(long)uVar5 >> 8,uVar5 & 0xff,\u000a           (long)uVar5 >> 8,uVar5 & 0xff,(long)uVar6 >> 8,uVar6 & 0xff,(long)uVar6 >> 8,uVar6 & 0xff\u000a           ,uVar3);\u000a  local_1c8 = 0x6054ed;\u000a  local_1c0 = (XFontStruct **)local_128;\u000a  XtSetValues(rangeLabel,&local_1c8,1);\u000a  XtRealizeWidget(uVar1);\u000a  uVar3 = XtDisplay(uVar1);\u000a  wm_delete_window = XInternAtom(uVar3,"WM_DELETE_WINDOW",0);\u000a  uVar3 = XtDisplay(uVar1);\u000a  uVar1 = XtWindow(uVar1);\u000a  XSetWMProtocols(uVar3,uVar1,&wm_delete_window,1);\u000a  change_page(0);\u000a  XtAppMainLoop();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p409
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x1d8\nMOV RBX,RSI\nMOV dword ptr [RSP + 0x14],EDI\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EDX,EDX\nCALL 0x004019f0\nMOV RAX,qword ptr [RBX]\nMOV qword ptr [0x00606948],RAX\nSUB RSP,0x8\nLEA RDI,[RSP + 0x28]\nLEA R8,[RSP + 0x1c]\nMOV ESI,0x4041af\nMOV EDX,0x606650\nMOV ECX,0x8\nMOV R9,RBX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x004017e0\nADD RSP,0x20\nMOV R15,RAX\nMOV EDI,0x4041b3\nCALL 0x00401720\nMOV EDI,0x4041b7\nCALL 0x004018f0\nTEST RAX,RAX\nMOV ESI,0x4041c5\nCMOVNZ RSI,RAX\nMOV EDI,0x4041b3\nCALL 0x00401770\nXOR EDI,EDI\nMOV ESI,0x404275\nMOV EDX,0x5\nCALL 0x00401910\nMOV qword ptr [0x00606778],RAX\nXOR EDI,EDI\nMOV ESI,0x4041dd\nMOV EDX,0x5\nCALL 0x00401910\nMOV qword ptr [0x006067a8],RAX\nXOR EDI,EDI\nMOV ESI,0x40421e\nMOV EDX,0x5\nCALL 0x00401910\nMOV qword ptr [0x006067d8],RAX\nXOR EDI,EDI\nMOV ESI,0x404251\nMOV EDX,0x5\nCALL 0x00401910\nMOV qword ptr [0x00606808],RAX\nXOR EDI,EDI\nMOV ESI,0x40426d\nMOV EDX,0x5\nCALL 0x00401910\nMOV qword ptr [0x00606838],RAX\nCMP dword ptr [RSP + 0x14],0x1\nJNZ 0x0040343f\nMOV RDI,qword ptr [RSP + 0x20]\nMOV ESI,0x606840\nMOV EDX,0x5\nCALL 0x004017d0\nMOV EDI,0x40429c\nCALL 0x00401980\nMOV RDI,R15\nMOV RSI,RAX\nCALL 0x00401a50\nMOV ESI,0x606950\nMOV EDX,0x606750\nMOV ECX,0x5\nXOR R8D,R8D\nXOR R9D,R9D\nMOV RDI,R15\nCALL 0x004018e0\nMOV RSI,qword ptr [0x006068c8]\nMOV EDI,0x4042ba\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R15\nCALL 0x004019e0\nMOV R12,RAX\nMOV RSI,qword ptr [0x006068a0]\nMOV EDI,0x4042bf\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV R14,RAX\nMOV RSI,qword ptr [0x006068c0]\nMOV EDI,0x404391\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV RBX,RAX\nMOV RSI,qword ptr [0x00606900]\nMOV EDI,0x4042c8\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x004019e0\nMOV qword ptr [0x00606978],RAX\nMOV RSI,qword ptr [0x00606900]\nMOV EDI,0x4042cd\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x004019e0\nMOV qword ptr [0x00606980],RAX\nMOV RSI,qword ptr [0x00606900]\nMOV EDI,0x4042d4\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x004019e0\nMOV qword ptr [0x00606988],RAX\nMOV RSI,qword ptr [0x00606900]\nMOV EDI,0x4042d9\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x004019e0\nMOV qword ptr [0x00606990],RAX\nMOV RSI,qword ptr [0x00606900]\nMOV EDI,0x4042de\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x004019e0\nMOV qword ptr [0x00606998],RAX\nMOV RSI,qword ptr [0x006068a0]\nMOV EDI,0x4042e5\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV qword ptr [0x006069a0],RAX\nMOV RSI,qword ptr [0x006068a0]\nMOV EDI,0x4042ec\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV qword ptr [0x006069a8],RAX\nMOV RSI,qword ptr [0x006068a0]\nMOV EDI,0x4042f4\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV qword ptr [0x006069b0],RAX\nMOV RSI,qword ptr [0x006068a0]\nMOV EDI,0x40437f\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV qword ptr [0x006069b8],RAX\nMOV RSI,qword ptr [0x006068e0]\nMOV EDI,0x4042fa\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x004019e0\nMOV RBX,RAX\nMOV qword ptr [RSP + 0x30],0x60565e\nMOV qword ptr [RSP + 0x38],0x0\nMOV qword ptr [RSP + 0x40],0x4042ff\nMOV qword ptr [RSP + 0x48],0x1\nMOV qword ptr [RSP + 0x50],0x404306\nMOV qword ptr [RSP + 0x58],0x2\nMOV qword ptr [RSP + 0x60],0x40430b\nMOV qword ptr [RSP + 0x68],0x3\nMOV qword ptr [RSP + 0x70],0x6053c8\nMOV qword ptr [RSP + 0x78],0x606630\nMOV RDI,qword ptr [RSP + 0x20]\nMOV ESI,0x403c00\nCALL 0x00401790\nMOV qword ptr [0x006069c0],RAX\nMOV RSI,qword ptr [0x006065d8]\nLEA R12,[RSP + 0x30]\nMOV EDI,0x404311\nMOV R8D,0x5\nMOV RDX,RBX\nMOV RCX,R12\nCALL 0x004019e0\nMOV qword ptr [0x006069c8],RAX\nMOV RDI,qword ptr [RSP + 0x20]\nMOV RSI,qword ptr [0x006069c0]\nCALL 0x00401790\nMOV qword ptr [RSP + 0x30],0x404379\nLEA RAX,[RSP + 0x18]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RDI,qword ptr [0x006069c8]\nMOV EDX,0x1\nMOV RSI,R12\nCALL 0x004016d0\nCMP qword ptr [RSP + 0x18],0x0\nJNZ 0x00403444\nMOV qword ptr [RSP + 0x30],0x605407\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RDI,qword ptr [0x006069c8]\nLEA RSI,[RSP + 0x30]\nMOV EDX,0x1\nCALL 0x004016d0\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x00403406\nCMP byte ptr [0x006069d0],0x1\nJNZ 0x00403617\nMOV RBX,qword ptr [0x00606920]\nXOR EDI,EDI\nMOV ESI,0x404328\nMOV EDX,0x5\nCALL 0x00401910\nMOV RCX,RAX\nMOV RDX,qword ptr [0x00606948]\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RSI,RCX\nCALL 0x00401a00\nMOV EDI,0x1\nCALL 0x00401730\nCALL 0x004038d0\nMOV qword ptr [0xd0 + RSP],0x4044aa\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RDI,qword ptr [RAX + 0x18]\nLEA RCX,[0xd0 + RSP]\nMOV ESI,0x404316\nXOR EDX,EDX\nCALL 0x00401850\nMOV qword ptr [RSP + 0x8],0x4044aa\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RDI,qword ptr [RAX + 0x18]\nLEA RCX,[RSP + 0x8]\nMOV ESI,0x40431d\nXOR EDX,EDX\nCALL 0x00401850\nMOV qword ptr [RSP + 0x28],0x0\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RDI,qword ptr [RAX + 0x18]\nLEA RCX,[RSP + 0x28]\nMOV ESI,0x404323\nXOR EDX,EDX\nCALL 0x00401740\nMOV RCX,qword ptr [0xd0 + RSP]\nMOVSD XMM0,qword ptr [RSP + 0x28]\nXOR EDI,EDI\nMOV ESI,0x404316\nMOV EDX,0x3\nMOV R8D,0x40431d\nMOV R9D,0x3\nMOV AL,0x1\nPUSH 0x0\nPUSH 0x2\nPUSH 0x404323\nPUSH qword ptr [RSP + 0x20]\nCALL 0x00401a20\nADD RSP,0x20\nMOV RBX,RAX\nMOV RDI,RBX\nCALL 0x00401a60\nMOV R12,RAX\nMOV RDI,RBX\nCALL 0x004016c0\nMOV qword ptr [RSP + 0x30],0x6054ed\nMOV qword ptr [RSP + 0x38],R12\nLEA R12,[RSP + 0x30]\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,R12\nCALL 0x00401710\nMOV RDI,qword ptr [0x006069c8]\nCALL 0x004021a0\nMOV RBX,RAX\nMOV RDI,qword ptr [0x006069c8]\nCALL 0x00402230\nMOV RDX,qword ptr [0x00606960]\nMOV RCX,RBX\nSAR RCX,0x8\nMOVZX R8D,BL\nMOVZX R10D,AL\nMOV RBX,RAX\nSAR RBX,0x8\nSUB RSP,0x8\nLEA R14,[0xd8 + RSP]\nMOV ESI,0x100\nMOV EAX,0x0\nMOV RDI,R14\nMOV R9,RCX\nPUSH R10\nPUSH RBX\nPUSH R10\nPUSH RBX\nPUSH R8\nCALL 0x004016e0\nADD RSP,0x30\nMOV qword ptr [RSP + 0x30],0x6054ed\nMOV qword ptr [RSP + 0x38],R14\nMOV RDI,qword ptr [0x006069b0]\nMOV EDX,0x1\nMOV RSI,R12\nCALL 0x00401710\nMOV RDI,R15\nCALL 0x004016f0\nMOV RDI,R15\nCALL 0x00401860\nMOV ESI,0x40434f\nXOR EDX,EDX\nMOV RDI,RAX\nCALL 0x00401990\nMOV qword ptr [0x006069d8],RAX\nMOV RDI,R15\nCALL 0x00401860\nMOV RBX,RAX\nMOV RDI,R15\nCALL 0x004016b0\nMOV EDX,0x6069d8\nMOV ECX,0x1\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x004018a0\nXOR EDI,EDI\nCALL 0x00403d00\nMOV RDI,qword ptr [RSP + 0x20]\nCALL 0x004017f0\nXOR EDI,EDI\nCALL 0x00401730\nMOV RDI,R15\nCALL 0x00401860\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RDI,RAX\nCALL 0x00403ca0\nMOV R12,RAX\nTEST R12,R12\nJNZ 0x00403507\nXOR EDI,EDI\nMOV ESI,0x404341\nMOV EDX,0x5\nCALL 0x00401910\nMOV R12,RAX\nJMP 0x00403507\n'
p410
S'41 57\n41 56\n41 54\n53\n48 81 ec d8 01 00 00\n48 89 f3\n89 7c 24 14\n31 ff\n31 f6\n31 d2\ne8 c0 e9 ff ff\n48 8b 03\n48 89 05 0e 39 20 00\n48 83 ec 08\n48 8d 7c 24 28\n4c 8d 44 24 1c\nbe af 41 40 00\nba 50 66 60 00\nb9 08 00 00 00\n49 89 d9\n6a 00\n6a 00\n6a 00\ne8 7b e7 ff ff\n48 83 c4 20\n49 89 c7\nbf b3 41 40 00\ne8 aa e6 ff ff\nbf b7 41 40 00\ne8 70 e8 ff ff\n48 85 c0\nbe c5 41 40 00\n48 0f 45 f0\nbf b3 41 40 00\ne8 da e6 ff ff\n31 ff\nbe 75 42 40 00\nba 05 00 00 00\ne8 69 e8 ff ff\n48 89 05 ca 36 20 00\n31 ff\nbe dd 41 40 00\nba 05 00 00 00\ne8 51 e8 ff ff\n48 89 05 e2 36 20 00\n31 ff\nbe 1e 42 40 00\nba 05 00 00 00\ne8 39 e8 ff ff\n48 89 05 fa 36 20 00\n31 ff\nbe 51 42 40 00\nba 05 00 00 00\ne8 21 e8 ff ff\n48 89 05 12 37 20 00\n31 ff\nbe 6d 42 40 00\nba 05 00 00 00\ne8 09 e8 ff ff\n48 89 05 2a 37 20 00\n83 7c 24 14 01\n0f 85 26 03 00 00\n48 8b 7c 24 20\nbe 40 68 60 00\nba 05 00 00 00\ne8 a3 e6 ff ff\nbf 9c 42 40 00\ne8 49 e8 ff ff\n4c 89 ff\n48 89 c6\ne8 0e e9 ff ff\nbe 50 69 60 00\nba 50 67 60 00\nb9 05 00 00 00\n45 31 c0\n45 31 c9\n4c 89 ff\ne8 81 e7 ff ff\n48 8b 35 62 37 20 00\nbf ba 42 40 00\n31 c9\n45 31 c0\n4c 89 fa\ne8 68 e8 ff ff\n49 89 c4\n48 8b 35 1e 37 20 00\nbf bf 42 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 4c e8 ff ff\n49 89 c6\n48 8b 35 22 37 20 00\nbf 91 43 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 30 e8 ff ff\n48 89 c3\n48 8b 35 46 37 20 00\nbf c8 42 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 14 e8 ff ff\n48 89 05 a5 37 20 00\n48 8b 35 26 37 20 00\nbf cd 42 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 f4 e7 ff ff\n48 89 05 8d 37 20 00\n48 8b 35 06 37 20 00\nbf d4 42 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 d4 e7 ff ff\n48 89 05 75 37 20 00\n48 8b 35 e6 36 20 00\nbf d9 42 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 b4 e7 ff ff\n48 89 05 5d 37 20 00\n48 8b 35 c6 36 20 00\nbf de 42 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 94 e7 ff ff\n48 89 05 45 37 20 00\n48 8b 35 46 36 20 00\nbf e5 42 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 74 e7 ff ff\n48 89 05 2d 37 20 00\n48 8b 35 26 36 20 00\nbf ec 42 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 54 e7 ff ff\n48 89 05 15 37 20 00\n48 8b 35 06 36 20 00\nbf f4 42 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 34 e7 ff ff\n48 89 05 fd 36 20 00\n48 8b 35 e6 35 20 00\nbf 7f 43 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 14 e7 ff ff\n48 89 05 e5 36 20 00\n48 8b 35 06 36 20 00\nbf fa 42 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 f4 e6 ff ff\n48 89 c3\n48 c7 44 24 30 5e 56 60 00\n48 c7 44 24 38 00 00 00 00\n48 c7 44 24 40 ff 42 40 00\n48 c7 44 24 48 01 00 00 00\n48 c7 44 24 50 06 43 40 00\n48 c7 44 24 58 02 00 00 00\n48 c7 44 24 60 0b 43 40 00\n48 c7 44 24 68 03 00 00 00\n48 c7 44 24 70 c8 53 60 00\n48 c7 44 24 78 30 66 60 00\n48 8b 7c 24 20\nbe 00 3c 40 00\ne8 38 e4 ff ff\n48 89 05 61 36 20 00\n48 8b 35 72 32 20 00\n4c 8d 64 24 30\nbf 11 43 40 00\n41 b8 05 00 00 00\n48 89 da\n4c 89 e1\ne8 5f e6 ff ff\n48 89 05 40 36 20 00\n48 8b 7c 24 20\n48 8b 35 2c 36 20 00\ne8 f7 e3 ff ff\n48 c7 44 24 30 79 43 40 00\n48 8d 44 24 18\n48 89 44 24 38\n48 8b 3d 15 36 20 00\nba 01 00 00 00\n4c 89 e6\ne8 10 e3 ff ff\n48 83 7c 24 18 00\n75 7c\n48 c7 44 24 30 07 54 60 00\n48 8d 44 24 08\n48 89 44 24 38\n48 8b 3d e6 35 20 00\n48 8d 74 24 30\nba 01 00 00 00\ne8 df e2 ff ff\n48 83 7c 24 08 00\n74 0d\n80 3d d0 35 20 00 01\n0f 85 11 02 00 00\n48 8b 1d 13 35 20 00\n31 ff\nbe 28 43 40 00\nba 05 00 00 00\ne8 f2 e4 ff ff\n48 89 c1\n48 8b 15 20 35 20 00\n31 c0\n48 89 df\n48 89 ce\ne8 cb e5 ff ff\nbf 01 00 00 00\ne8 f1 e2 ff ff\ne8 8c 04 00 00\n48 c7 84 24 d0 00 00 00 aa 44 40 00\n48 8b 44 24 18\n48 8b 78 18\n48 8d 8c 24 d0 00 00 00\nbe 16 43 40 00\n31 d2\ne8 e3 e3 ff ff\n48 c7 44 24 08 aa 44 40 00\n48 8b 44 24 18\n48 8b 78 18\n48 8d 4c 24 08\nbe 1d 43 40 00\n31 d2\ne8 c0 e3 ff ff\n48 c7 44 24 28 00 00 00 00\n48 8b 44 24 18\n48 8b 78 18\n48 8d 4c 24 28\nbe 23 43 40 00\n31 d2\ne8 8d e2 ff ff\n48 8b 8c 24 d0 00 00 00\nf2 0f 10 44 24 28\n31 ff\nbe 16 43 40 00\nba 03 00 00 00\n41 b8 1d 43 40 00\n41 b9 03 00 00 00\nb0 01\n6a 00\n6a 02\n68 23 43 40 00\nff 74 24 20\ne8 33 e5 ff ff\n48 83 c4 20\n48 89 c3\n48 89 df\ne8 64 e5 ff ff\n49 89 c4\n48 89 df\ne8 b9 e1 ff ff\n48 c7 44 24 30 ed 54 60 00\n4c 89 64 24 38\n4c 8d 64 24 30\nba 01 00 00 00\n4c 89 f7\n4c 89 e6\ne8 e6 e1 ff ff\n48 8b 3d 97 34 20 00\ne8 6a ec ff ff\n48 89 c3\n48 8b 3d 88 34 20 00\ne8 eb ec ff ff\n48 8b 15 14 34 20 00\n48 89 d9\n48 c1 f9 08\n44 0f b6 c3\n44 0f b6 d0\n48 89 c3\n48 c1 fb 08\n48 83 ec 08\n4c 8d b4 24 d8 00 00 00\nbe 00 01 00 00\nb8 00 00 00 00\n4c 89 f7\n49 89 c9\n41 52\n53\n41 52\n53\n41 50\ne8 55 e1 ff ff\n48 83 c4 30\n48 c7 44 24 30 ed 54 60 00\n4c 89 74 24 38\n48 8b 3d 0c 34 20 00\nba 01 00 00 00\n4c 89 e6\ne8 5f e1 ff ff\n4c 89 ff\ne8 37 e1 ff ff\n4c 89 ff\ne8 9f e2 ff ff\nbe 4f 43 40 00\n31 d2\n48 89 c7\ne8 c0 e3 ff ff\n48 89 05 01 34 20 00\n4c 89 ff\ne8 81 e2 ff ff\n48 89 c3\n4c 89 ff\ne8 c6 e0 ff ff\nba d8 69 60 00\nb9 01 00 00 00\n48 89 df\n48 89 c6\ne8 a1 e2 ff ff\n31 ff\ne8 fa 06 00 00\n48 8b 7c 24 20\ne8 e0 e1 ff ff\n31 ff\ne8 19 e1 ff ff\n4c 89 ff\ne8 41 e2 ff ff\n48 8b 74 24 08\n48 89 c7\ne8 74 06 00 00\n49 89 c4\n4d 85 e4\n0f 85 cf fe ff ff\n31 ff\nbe 41 43 40 00\nba 05 00 00 00\ne8 c7 e2 ff ff\n49 89 c4\ne9 b6 fe ff ff\n'
p411
S'.text:0000000000403010\n.text:0000000000403012\n.text:0000000000403014\n.text:0000000000403016\n.text:0000000000403017\n.text:000000000040301e\n.text:0000000000403021\n.text:0000000000403025\n.text:0000000000403027\n.text:0000000000403029\n.text:000000000040302b\n.text:0000000000403030\n.text:0000000000403033\n.text:000000000040303a\n.text:000000000040303e\n.text:0000000000403043\n.text:0000000000403048\n.text:000000000040304d\n.text:0000000000403052\n.text:0000000000403057\n.text:000000000040305a\n.text:000000000040305c\n.text:000000000040305e\n.text:0000000000403060\n.text:0000000000403065\n.text:0000000000403069\n.text:000000000040306c\n.text:0000000000403071\n.text:0000000000403076\n.text:000000000040307b\n.text:0000000000403080\n.text:0000000000403083\n.text:0000000000403088\n.text:000000000040308c\n.text:0000000000403091\n.text:0000000000403096\n.text:0000000000403098\n.text:000000000040309d\n.text:00000000004030a2\n.text:00000000004030a7\n.text:00000000004030ae\n.text:00000000004030b0\n.text:00000000004030b5\n.text:00000000004030ba\n.text:00000000004030bf\n.text:00000000004030c6\n.text:00000000004030c8\n.text:00000000004030cd\n.text:00000000004030d2\n.text:00000000004030d7\n.text:00000000004030de\n.text:00000000004030e0\n.text:00000000004030e5\n.text:00000000004030ea\n.text:00000000004030ef\n.text:00000000004030f6\n.text:00000000004030f8\n.text:00000000004030fd\n.text:0000000000403102\n.text:0000000000403107\n.text:000000000040310e\n.text:0000000000403113\n.text:0000000000403119\n.text:000000000040311e\n.text:0000000000403123\n.text:0000000000403128\n.text:000000000040312d\n.text:0000000000403132\n.text:0000000000403137\n.text:000000000040313a\n.text:000000000040313d\n.text:0000000000403142\n.text:0000000000403147\n.text:000000000040314c\n.text:0000000000403151\n.text:0000000000403154\n.text:0000000000403157\n.text:000000000040315a\n.text:000000000040315f\n.text:0000000000403166\n.text:000000000040316b\n.text:000000000040316d\n.text:0000000000403170\n.text:0000000000403173\n.text:0000000000403178\n.text:000000000040317b\n.text:0000000000403182\n.text:0000000000403187\n.text:0000000000403189\n.text:000000000040318c\n.text:000000000040318f\n.text:0000000000403194\n.text:0000000000403197\n.text:000000000040319e\n.text:00000000004031a3\n.text:00000000004031a5\n.text:00000000004031a8\n.text:00000000004031ab\n.text:00000000004031b0\n.text:00000000004031b3\n.text:00000000004031ba\n.text:00000000004031bf\n.text:00000000004031c1\n.text:00000000004031c4\n.text:00000000004031c7\n.text:00000000004031cc\n.text:00000000004031d3\n.text:00000000004031da\n.text:00000000004031df\n.text:00000000004031e1\n.text:00000000004031e4\n.text:00000000004031e7\n.text:00000000004031ec\n.text:00000000004031f3\n.text:00000000004031fa\n.text:00000000004031ff\n.text:0000000000403201\n.text:0000000000403204\n.text:0000000000403207\n.text:000000000040320c\n.text:0000000000403213\n.text:000000000040321a\n.text:000000000040321f\n.text:0000000000403221\n.text:0000000000403224\n.text:0000000000403227\n.text:000000000040322c\n.text:0000000000403233\n.text:000000000040323a\n.text:000000000040323f\n.text:0000000000403241\n.text:0000000000403244\n.text:0000000000403247\n.text:000000000040324c\n.text:0000000000403253\n.text:000000000040325a\n.text:000000000040325f\n.text:0000000000403261\n.text:0000000000403264\n.text:0000000000403267\n.text:000000000040326c\n.text:0000000000403273\n.text:000000000040327a\n.text:000000000040327f\n.text:0000000000403281\n.text:0000000000403284\n.text:0000000000403287\n.text:000000000040328c\n.text:0000000000403293\n.text:000000000040329a\n.text:000000000040329f\n.text:00000000004032a1\n.text:00000000004032a4\n.text:00000000004032a7\n.text:00000000004032ac\n.text:00000000004032b3\n.text:00000000004032ba\n.text:00000000004032bf\n.text:00000000004032c1\n.text:00000000004032c4\n.text:00000000004032c7\n.text:00000000004032cc\n.text:00000000004032d3\n.text:00000000004032da\n.text:00000000004032df\n.text:00000000004032e1\n.text:00000000004032e4\n.text:00000000004032e7\n.text:00000000004032ec\n.text:00000000004032ef\n.text:00000000004032f8\n.text:0000000000403301\n.text:000000000040330a\n.text:0000000000403313\n.text:000000000040331c\n.text:0000000000403325\n.text:000000000040332e\n.text:0000000000403337\n.text:0000000000403340\n.text:0000000000403349\n.text:000000000040334e\n.text:0000000000403353\n.text:0000000000403358\n.text:000000000040335f\n.text:0000000000403366\n.text:000000000040336b\n.text:0000000000403370\n.text:0000000000403376\n.text:0000000000403379\n.text:000000000040337c\n.text:0000000000403381\n.text:0000000000403388\n.text:000000000040338d\n.text:0000000000403394\n.text:0000000000403399\n.text:00000000004033a2\n.text:00000000004033a7\n.text:00000000004033ac\n.text:00000000004033b3\n.text:00000000004033b8\n.text:00000000004033bb\n.text:00000000004033c0\n.text:00000000004033c6\n.text:00000000004033c8\n.text:00000000004033d1\n.text:00000000004033d6\n.text:00000000004033db\n.text:00000000004033e2\n.text:00000000004033e7\n.text:00000000004033ec\n.text:00000000004033f1\n.text:00000000004033f7\n.text:00000000004033f9\n.text:0000000000403400\n.text:0000000000403406\n.text:000000000040340d\n.text:000000000040340f\n.text:0000000000403414\n.text:0000000000403419\n.text:000000000040341e\n.text:0000000000403421\n.text:0000000000403428\n.text:000000000040342a\n.text:000000000040342d\n.text:0000000000403430\n.text:0000000000403435\n.text:000000000040343a\n.text:000000000040343f\n.text:0000000000403444\n.text:0000000000403450\n.text:0000000000403455\n.text:0000000000403459\n.text:0000000000403461\n.text:0000000000403466\n.text:0000000000403468\n.text:000000000040346d\n.text:0000000000403476\n.text:000000000040347b\n.text:000000000040347f\n.text:0000000000403484\n.text:0000000000403489\n.text:000000000040348b\n.text:0000000000403490\n.text:0000000000403499\n.text:000000000040349e\n.text:00000000004034a2\n.text:00000000004034a7\n.text:00000000004034ac\n.text:00000000004034ae\n.text:00000000004034b3\n.text:00000000004034bb\n.text:00000000004034c1\n.text:00000000004034c3\n.text:00000000004034c8\n.text:00000000004034cd\n.text:00000000004034d3\n.text:00000000004034d9\n.text:00000000004034db\n.text:00000000004034dd\n.text:00000000004034df\n.text:00000000004034e4\n.text:00000000004034e8\n.text:00000000004034ed\n.text:00000000004034f1\n.text:00000000004034f4\n.text:00000000004034f7\n.text:00000000004034fc\n.text:00000000004034ff\n.text:0000000000403502\n.text:0000000000403507\n.text:0000000000403510\n.text:0000000000403515\n.text:000000000040351a\n.text:000000000040351f\n.text:0000000000403522\n.text:0000000000403525\n.text:000000000040352a\n.text:0000000000403531\n.text:0000000000403536\n.text:0000000000403539\n.text:0000000000403540\n.text:0000000000403545\n.text:000000000040354c\n.text:000000000040354f\n.text:0000000000403553\n.text:0000000000403557\n.text:000000000040355b\n.text:000000000040355e\n.text:0000000000403562\n.text:0000000000403566\n.text:000000000040356e\n.text:0000000000403573\n.text:0000000000403578\n.text:000000000040357b\n.text:000000000040357e\n.text:0000000000403580\n.text:0000000000403581\n.text:0000000000403583\n.text:0000000000403584\n.text:0000000000403586\n.text:000000000040358b\n.text:000000000040358f\n.text:0000000000403598\n.text:000000000040359d\n.text:00000000004035a4\n.text:00000000004035a9\n.text:00000000004035ac\n.text:00000000004035b1\n.text:00000000004035b4\n.text:00000000004035b9\n.text:00000000004035bc\n.text:00000000004035c1\n.text:00000000004035c6\n.text:00000000004035c8\n.text:00000000004035cb\n.text:00000000004035d0\n.text:00000000004035d7\n.text:00000000004035da\n.text:00000000004035df\n.text:00000000004035e2\n.text:00000000004035e5\n.text:00000000004035ea\n.text:00000000004035ef\n.text:00000000004035f4\n.text:00000000004035f7\n.text:00000000004035fa\n.text:00000000004035ff\n.text:0000000000403601\n.text:0000000000403606\n.text:000000000040360b\n.text:0000000000403610\n.text:0000000000403612\n.text:0000000000403617\n.text:000000000040361a\n.text:000000000040361f\n.text:0000000000403624\n.text:0000000000403627\n.text:000000000040362c\n.text:000000000040362f\n.text:0000000000403632\n.text:0000000000403638\n.text:000000000040363a\n.text:000000000040363f\n.text:0000000000403644\n.text:0000000000403649\n.text:000000000040364c\n'
p412
tp413
sS'FcPatternBuild'
p414
(S'\n__stdcall FcPatternBuild()\n'
p415
V\u000avoid FcPatternBuild(void)\u000a\u000a{\u000a  (*(code *)PTR_FcPatternBuild_006061d0)();\u000a  return;\u000a}\u000a\u000a
p416
S'JMP qword ptr [0x006061d0]\n'
p417
S'ff 25 aa 47 20 00\n'
p418
S'.plt:0000000000401a20\n'
p419
tp420
sS'XmuFreeXftFont'
p421
(S'\n__stdcall XmuFreeXftFont(XtAppContext app, XrmValuePtr toVal, XtPointer closure, XrmValuePtr args, Cardinal * num_args)\n'
p422
V\u000avoid XmuFreeXftFont(XtAppContext app,XrmValuePtr toVal,XtPointer closure,XrmValuePtr args,\u000a                   Cardinal *num_args)\u000a\u000a{\u000a  if (*num_args != 1) {\u000a    XtAppErrorMsg(app,"freeXftFont","wrongParameters","XtToolkitError",\u000a                  "Freeing an XftFont requires screen argument",0,0);\u000a    return;\u000a  }\u000a  if (*(long *)toVal->addr != 0) {\u000a    (*(code *)PTR_XftFontClose_00606040)(*(undefined8 *)(*(long *)args->addr + 8));\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p423
S'CMP dword ptr [R8],0x1\nJNZ 0x00402772\nMOV RAX,qword ptr [RSI + 0x8]\nMOV RSI,qword ptr [RAX]\nTEST RSI,RSI\nJZ 0x0040279a\nMOV RAX,qword ptr [RCX + 0x8]\nMOV RAX,qword ptr [RAX]\nMOV RDI,qword ptr [RAX + 0x8]\nJMP 0x00401700\nPUSH RAX\nMOV qword ptr [RSP],0x0\nMOV ESI,0x404177\nMOV EDX,0x404070\nMOV ECX,0x404080\nMOV R8D,0x404183\nXOR R9D,R9D\nCALL 0x004019c0\nPOP RAX\nRET\nRET\n'
p424
S'41 83 38 01\n75 1c\n48 8b 46 08\n48 8b 30\n48 85 f6\n74 38\n48 8b 41 08\n48 8b 00\n48 8b 78 08\ne9 8e ef ff ff\n50\n48 c7 04 24 00 00 00 00\nbe 77 41 40 00\nba 70 40 40 00\nb9 80 40 40 00\n41 b8 83 41 40 00\n45 31 c9\ne8 28 f2 ff ff\n58\nc3\nc3\n'
p425
S'.text:0000000000402750\n.text:0000000000402754\n.text:0000000000402756\n.text:000000000040275a\n.text:000000000040275d\n.text:0000000000402760\n.text:0000000000402762\n.text:0000000000402766\n.text:0000000000402769\n.text:000000000040276d\n.text:0000000000402772\n.text:0000000000402773\n.text:000000000040277b\n.text:0000000000402780\n.text:0000000000402785\n.text:000000000040278a\n.text:0000000000402790\n.text:0000000000402793\n.text:0000000000402798\n.text:0000000000402799\n.text:000000000040279a\n'
p426
tp427
sS'XBell'
p428
(S'\n__stdcall XBell()\n'
p429
V\u000avoid XBell(void)\u000a\u000a{\u000a  (*(code *)PTR_XBell_006060d0)();\u000a  return;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x006060d0]\n'
p431
S'ff 25 aa 48 20 00\n'
p432
S'.plt:0000000000401820\n'
p433
tp434
sS'GetPrevNextStates'
p435
(S'\n__stdcall GetPrevNextStates(Widget w, int * prevvalidp, int * nextvalidp, int * prev16validp, int * next16validp)\n'
p436
V\u000avoid GetPrevNextStates(Widget w,int *prevvalidp,int *nextvalidp,int *prev16validp,int *next16validp)\u000a\u000a{\u000a  String *ppcVar1;\u000a  String pcVar2;\u000a  long lVar3;\u000a  \u000a  pcVar2 = (String)GridFirstChar(w);\u000a  lVar3 = GridLastChar(w);\u000a  *prev16validp = (uint)((long)pcVar2 < (long)(w[1].core.name + -0xf00));\u000a  ppcVar1 = &w[1].core.name;\u000a  *prevvalidp = (uint)(*ppcVar1 != pcVar2 && (long)pcVar2 <= (long)*ppcVar1);\u000a  *nextvalidp = (uint)((long)(w[1].core.name +\u000a                             (long)*(int *)&w[1].core.tm.lastEventTime *\u000a                             (long)*(int *)((long)&w[1].core.tm.lastEventTime + 4)) < lVar3);\u000a  *next16validp =\u000a       (uint)((long)(w[1].core.name +\u000a                    (long)*(int *)&w[1].core.tm.lastEventTime *\u000a                    (long)*(int *)((long)&w[1].core.tm.lastEventTime + 4) + 0xf00) < lVar3);\u000a  return;\u000a}\u000a\u000a
p437
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R8\nMOV R12,RCX\nMOV R15,RDX\nMOV R13,RSI\nMOV RBX,RDI\nCALL 0x004021a0\nMOV RBP,RAX\nMOV RDI,RBX\nCALL 0x00402230\nMOV RCX,-0xf00\nADD RCX,qword ptr [0x160 + RBX]\nXOR EDX,EDX\nCMP RCX,RBP\nSETG DL\nMOV dword ptr [R12],EDX\nXOR ECX,ECX\nCMP qword ptr [0x160 + RBX],RBP\nSETG CL\nMOV dword ptr [R13],ECX\nMOVSXD RCX,dword ptr [0x134 + RBX]\nMOVSXD RDX,dword ptr [0x130 + RBX]\nIMUL RDX,RCX\nADD RDX,qword ptr [0x160 + RBX]\nXOR ECX,ECX\nCMP RDX,RAX\nSETL CL\nMOV dword ptr [R15],ECX\nMOV RCX,qword ptr [0x160 + RBX]\nMOVSXD RDX,dword ptr [0x134 + RBX]\nMOVSXD RSI,dword ptr [0x130 + RBX]\nIMUL RSI,RDX\nLEA RCX,[0xf00 + RCX + RSI*0x1]\nXOR EDX,EDX\nCMP RCX,RAX\nSETL DL\nMOV dword ptr [R14],EDX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p438
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 c6\n49 89 cc\n49 89 d7\n49 89 f5\n48 89 fb\ne8 71 fe ff ff\n48 89 c5\n48 89 df\ne8 f6 fe ff ff\n48 c7 c1 00 f1 ff ff\n48 03 8b 60 01 00 00\n31 d2\n48 39 e9\n0f 9f c2\n41 89 14 24\n31 c9\n48 39 ab 60 01 00 00\n0f 9f c1\n41 89 4d 00\n48 63 8b 34 01 00 00\n48 63 93 30 01 00 00\n48 0f af d1\n48 03 93 60 01 00 00\n31 c9\n48 39 c2\n0f 9c c1\n41 89 0f\n48 8b 8b 60 01 00 00\n48 63 93 34 01 00 00\n48 63 b3 30 01 00 00\n48 0f af f2\n48 8d 8c 31 00 0f 00 00\n31 d2\n48 39 c1\n0f 9c c2\n41 89 16\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p439
S'.text:0000000000402310\n.text:0000000000402311\n.text:0000000000402313\n.text:0000000000402315\n.text:0000000000402317\n.text:0000000000402319\n.text:000000000040231a\n.text:000000000040231b\n.text:000000000040231e\n.text:0000000000402321\n.text:0000000000402324\n.text:0000000000402327\n.text:000000000040232a\n.text:000000000040232f\n.text:0000000000402332\n.text:0000000000402335\n.text:000000000040233a\n.text:0000000000402341\n.text:0000000000402348\n.text:000000000040234a\n.text:000000000040234d\n.text:0000000000402350\n.text:0000000000402354\n.text:0000000000402356\n.text:000000000040235d\n.text:0000000000402360\n.text:0000000000402364\n.text:000000000040236b\n.text:0000000000402372\n.text:0000000000402376\n.text:000000000040237d\n.text:000000000040237f\n.text:0000000000402382\n.text:0000000000402385\n.text:0000000000402388\n.text:000000000040238f\n.text:0000000000402396\n.text:000000000040239d\n.text:00000000004023a1\n.text:00000000004023a9\n.text:00000000004023ab\n.text:00000000004023ae\n.text:00000000004023b1\n.text:00000000004023b4\n.text:00000000004023b8\n.text:00000000004023b9\n.text:00000000004023bb\n.text:00000000004023bd\n.text:00000000004023bf\n.text:00000000004023c1\n.text:00000000004023c2\n'
p440
tp441
sS'XftFontOpenName'
p442
(S'\n__stdcall XftFontOpenName()\n'
p443
V\u000avoid XftFontOpenName(void)\u000a\u000a{\u000a  (*(code *)PTR_XftFontOpenName_00606168)();\u000a  return;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x00606168]\n'
p445
S'ff 25 12 48 20 00\n'
p446
S'.plt:0000000000401950\n'
p447
tp448
sS'XtSetTypeConverter'
p449
(S'\n__stdcall XtSetTypeConverter()\n'
p450
V\u000avoid XtSetTypeConverter(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetTypeConverter_006061c8)();\u000a  return;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x006061c8]\n'
p452
S'ff 25 b2 47 20 00\n'
p453
S'.plt:0000000000401a10\n'
p454
tp455
sS'FcPatternDestroy'
p456
(S'\n__stdcall FcPatternDestroy()\n'
p457
V\u000avoid FcPatternDestroy(void)\u000a\u000a{\u000a  (*(code *)PTR_FcPatternDestroy_00606020)();\u000a  return;\u000a}\u000a\u000a
p458
S'JMP qword ptr [0x00606020]\n'
p459
S'ff 25 5a 49 20 00\n'
p460
S'.plt:00000000004016c0\n'
p461
tp462
sS'strcasecmp'
p463
(S'\n__stdcall strcasecmp(char * __s1, char * __s2)\n'
p464
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcasecmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcasecmp_00606070)();\u000a  return iVar1;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x00606070]\n'
p466
S'ff 25 0a 49 20 00\n'
p467
S'.plt:0000000000401760\n'
p468
tp469
sS'strcmp'
p470
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p471
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00606170)();\u000a  return iVar1;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x00606170]\n'
p473
S'ff 25 0a 48 20 00\n'
p474
S'.plt:0000000000401960\n'
p475
tp476
sS'SetValues'
p477
(S'\n__stdcall SetValues(Widget current, Widget request, Widget new, ArgList * args, Cardinal * num_args)\n'
p478
V\u000aBoolean SetValues(Widget current,Widget request,Widget new,ArgList *args,Cardinal *num_args)\u000a\u000a{\u000a  Cardinal CVar1;\u000a  Widget p_Var2;\u000a  _XtStateRec *p_Var3;\u000a  String pcVar4;\u000a  Boolean BVar5;\u000a  int iVar6;\u000a  GC p_Var7;\u000a  long lVar8;\u000a  int iVar9;\u000a  String pcVar10;\u000a  int iVar11;\u000a  String first;\u000a  long lVar12;\u000a  long lVar13;\u000a  bool bVar14;\u000a  \u000a  if ((current[1].core.tm.current_state == new[1].core.tm.current_state) &&\u000a     (current[1].core.num_popups == new[1].core.num_popups)) {\u000a    bVar14 = false;\u000a  }\u000a  else {\u000a    p_Var2 = new[2].core.self;\u000a    if (p_Var2 == (Widget)0x0) {\u000a      p_Var3 = new[1].core.tm.current_state;\u000a      iVar6 = 1;\u000a      iVar11 = 1;\u000a      if (p_Var3 != (_XtStateRec *)0x0) {\u000a        iVar11 = (int)*(short *)(p_Var3 + 0x48);\u000a      }\u000a      CVar1 = new[1].core.num_popups;\u000a      iVar9 = CVar1 * 2;\u000a      *(Cardinal *)&new[1].core.accelerators = iVar11 + CVar1 * 2;\u000a      p_Var3 = new[1].core.tm.current_state;\u000a      if (p_Var3 != (_XtStateRec *)0x0) {\u000a        iVar6 = *(int *)(p_Var3 + 0x5c) + *(int *)(p_Var3 + 0x58);\u000a      }\u000a    }\u000a    else {\u000a      iVar9 = new[1].core.num_popups * 2;\u000a      *(int *)&new[1].core.accelerators = *(int *)((long)&(p_Var2->core).widget_class + 4) + iVar9;\u000a      iVar6 = *(int *)&(p_Var2->core).widget_class;\u000a    }\u000a    *(int *)((long)&new[1].core.accelerators + 4) = iVar9 + iVar6;\u000a    bVar14 = true;\u000a  }\u000a  if (current[1].core.background_pixmap != new[1].core.background_pixmap) {\u000a    XtReleaseGC(new,current[1].core.colormap);\u000a    p_Var7 = get_gc((FontGridWidget)new,new[1].core.background_pixmap);\u000a    *(GC *)&new[1].core.colormap = p_Var7;\u000a    bVar14 = true;\u000a  }\u000a  if (current[1].core.border_pixel != new[1].core.border_pixel) {\u000a    XtReleaseGC(new,current[1].core.colormap);\u000a    p_Var7 = get_gc((FontGridWidget)new,new[1].core.border_pixel);\u000a    *(GC *)&new[1].core.window = p_Var7;\u000a    bVar14 = true;\u000a  }\u000a  if ((*(char *)&current[1].core.border_pixmap != *(char *)&new[1].core.border_pixmap) ||\u000a     (*(char *)((long)&current[1].core.border_pixmap + 1) !=\u000a      *(char *)((long)&new[1].core.border_pixmap + 1))) {\u000a    bVar14 = true;\u000a  }\u000a  if (current[1].core.name != new[1].core.name) {\u000a    lVar8 = GridLastChar(new);\u000a    lVar13 = (long)*(int *)&new[1].core.tm.lastEventTime *\u000a             (long)*(int *)((long)&new[1].core.tm.lastEventTime + 4);\u000a    pcVar4 = new[1].core.name;\u000a    lVar12 = -lVar13;\u000a    if ((long)current[1].core.name <= (long)pcVar4) {\u000a      lVar12 = lVar13;\u000a    }\u000a    first = (String)0x0;\u000a    if (-1 < (long)pcVar4) {\u000a      first = pcVar4;\u000a    }\u000a    if (lVar8 < (long)first) {\u000a      first = (String)(lVar8 - lVar8 % lVar13);\u000a    }\u000a    while (BVar5 = PageBlank(new,(long)first,(long)(first + lVar13 + -1)), BVar5 != 0) {\u000a      pcVar4 = first + lVar12;\u000a      pcVar10 = pcVar4;\u000a      if (lVar8 < (long)pcVar4) {\u000a        pcVar10 = first;\u000a      }\u000a      if (((long)pcVar4 < 0) || (first = pcVar10, lVar8 < (long)pcVar4)) break;\u000a    }\u000a    new[1].core.name = first;\u000a    bVar14 = current[1].core.name != first;\u000a  }\u000a  return (Boolean)bVar14;\u000a}\u000a\u000a
p479
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R14,RDI\nMOV RAX,qword ptr [0x128 + R14]\nCMP RAX,qword ptr [0x128 + R15]\nJNZ 0x00401fe5\nMOV EAX,dword ptr [0x158 + R14]\nCMP EAX,dword ptr [0x158 + R15]\nJNZ 0x00401fe5\nXOR EAX,EAX\nJMP 0x00402056\nMOV RAX,qword ptr [0x1a0 + R15]\nTEST RAX,RAX\nJZ 0x0040200b\nMOV ECX,dword ptr [0x158 + R15]\nADD ECX,ECX\nMOV EDX,dword ptr [RAX + 0xc]\nADD EDX,ECX\nMOV dword ptr [0x138 + R15],EDX\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x0040204b\nMOV RCX,qword ptr [0x128 + R15]\nMOV EAX,0x1\nTEST RCX,RCX\nMOV EDX,0x1\nJZ 0x00402025\nMOVSX EDX,word ptr [RCX + 0x48]\nMOV ESI,dword ptr [0x158 + R15]\nLEA ECX,[RSI + RSI*0x1]\nLEA EDX,[RDX + RSI*0x2]\nMOV dword ptr [0x138 + R15],EDX\nMOV RDX,qword ptr [0x128 + R15]\nTEST RDX,RDX\nJZ 0x0040204b\nMOV EAX,dword ptr [RDX + 0x5c]\nADD EAX,dword ptr [RDX + 0x58]\nADD ECX,EAX\nMOV dword ptr [0x13c + R15],ECX\nMOV AL,0x1\nMOV RCX,qword ptr [0x190 + R14]\nCMP RCX,qword ptr [0x190 + R15]\nJZ 0x0040208d\nMOV RSI,qword ptr [0x170 + R14]\nMOV RDI,R15\nCALL 0x00401900\nMOV RSI,qword ptr [0x190 + R15]\nMOV RDI,R15\nCALL 0x004027a0\nMOV qword ptr [0x170 + R15],RAX\nMOV AL,0x1\nMOV RCX,qword ptr [0x140 + R14]\nCMP RCX,qword ptr [0x140 + R15]\nJZ 0x004020c4\nMOV RSI,qword ptr [0x170 + R14]\nMOV RDI,R15\nCALL 0x00401900\nMOV RSI,qword ptr [0x140 + R15]\nMOV RDI,R15\nCALL 0x004027a0\nMOV qword ptr [0x178 + R15],RAX\nMOV AL,0x1\nMOV CL,byte ptr [0x148 + R14]\nCMP CL,byte ptr [0x148 + R15]\nJNZ 0x004020e4\nMOV CL,byte ptr [0x149 + R14]\nCMP CL,byte ptr [0x149 + R15]\nJZ 0x004020e6\nMOV AL,0x1\nMOV RCX,qword ptr [0x160 + R14]\nCMP RCX,qword ptr [0x160 + R15]\nJZ 0x00402191\nMOV RDI,R15\nCALL 0x00402230\nMOV R12,RAX\nMOVSXD RAX,dword ptr [0x134 + R15]\nMOVSXD R13,dword ptr [0x130 + R15]\nIMUL R13,RAX\nMOV RAX,qword ptr [0x160 + R15]\nMOV RBP,R13\nNEG RBP\nCMP RAX,qword ptr [0x160 + R14]\nCMOVGE RBP,R13\nXOR EBX,EBX\nTEST RAX,RAX\nCMOVNS RBX,RAX\nCMP RBX,R12\nJLE 0x0040214b\nMOV RAX,R12\nCQO\nIDIV R13\nMOV RBX,R12\nSUB RBX,RDX\nDEC R13\nNOP\nLEA RDX,[R13 + RBX*0x1]\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00402ec0\nTEST AL,AL\nJZ 0x00402180\nLEA RAX,[RBX + RBP*0x1]\nCMP R12,RAX\nMOV RCX,RAX\nCMOVL RCX,RBX\nTEST RAX,RAX\nCMOVNS RBX,RCX\nJS 0x00402180\nCMP R12,RAX\nJGE 0x00402150\nMOV qword ptr [0x160 + R15],RBX\nCMP qword ptr [0x160 + R14],RBX\nSETNZ AL\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p480
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d7\n49 89 fe\n49 8b 86 28 01 00 00\n49 3b 87 28 01 00 00\n75 14\n41 8b 86 58 01 00 00\n41 3b 87 58 01 00 00\n75 04\n31 c0\neb 71\n49 8b 87 a0 01 00 00\n48 85 c0\n74 1a\n41 8b 8f 58 01 00 00\n01 c9\n8b 50 0c\n01 ca\n41 89 97 38 01 00 00\n8b 40 08\neb 40\n49 8b 8f 28 01 00 00\nb8 01 00 00 00\n48 85 c9\nba 01 00 00 00\n74 04\n0f bf 51 48\n41 8b b7 58 01 00 00\n8d 0c 36\n8d 14 72\n41 89 97 38 01 00 00\n49 8b 97 28 01 00 00\n48 85 d2\n74 06\n8b 42 5c\n03 42 58\n01 c1\n41 89 8f 3c 01 00 00\nb0 01\n49 8b 8e 90 01 00 00\n49 3b 8f 90 01 00 00\n74 27\n49 8b b6 70 01 00 00\n4c 89 ff\ne8 8b f8 ff ff\n49 8b b7 90 01 00 00\n4c 89 ff\ne8 1c 07 00 00\n49 89 87 70 01 00 00\nb0 01\n49 8b 8e 40 01 00 00\n49 3b 8f 40 01 00 00\n74 27\n49 8b b6 70 01 00 00\n4c 89 ff\ne8 54 f8 ff ff\n49 8b b7 40 01 00 00\n4c 89 ff\ne8 e5 06 00 00\n49 89 87 78 01 00 00\nb0 01\n41 8a 8e 48 01 00 00\n41 3a 8f 48 01 00 00\n75 10\n41 8a 8e 49 01 00 00\n41 3a 8f 49 01 00 00\n74 02\nb0 01\n49 8b 8e 60 01 00 00\n49 3b 8f 60 01 00 00\n0f 84 97 00 00 00\n4c 89 ff\ne8 2e 01 00 00\n49 89 c4\n49 63 87 34 01 00 00\n4d 63 af 30 01 00 00\n4c 0f af e8\n49 8b 87 60 01 00 00\n4c 89 ed\n48 f7 dd\n49 3b 86 60 01 00 00\n49 0f 4d ed\n31 db\n48 85 c0\n48 0f 49 d8\n4c 39 e3\n7e 0e\n4c 89 e0\n48 99\n49 f7 fd\n4c 89 e3\n48 29 d3\n49 ff cd\n66 90\n49 8d 54 1d 00\n4c 89 ff\n48 89 de\ne8 60 0d 00 00\n84 c0\n74 1c\n48 8d 04 2b\n49 39 c4\n48 89 c1\n48 0f 4c cb\n48 85 c0\n48 0f 49 d9\n78 05\n49 39 c4\n7d d0\n49 89 9f 60 01 00 00\n49 39 9e 60 01 00 00\n0f 95 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p481
S'.text:0000000000401fb0\n.text:0000000000401fb1\n.text:0000000000401fb3\n.text:0000000000401fb5\n.text:0000000000401fb7\n.text:0000000000401fb9\n.text:0000000000401fba\n.text:0000000000401fbb\n.text:0000000000401fbe\n.text:0000000000401fc1\n.text:0000000000401fc8\n.text:0000000000401fcf\n.text:0000000000401fd1\n.text:0000000000401fd8\n.text:0000000000401fdf\n.text:0000000000401fe1\n.text:0000000000401fe3\n.text:0000000000401fe5\n.text:0000000000401fec\n.text:0000000000401fef\n.text:0000000000401ff1\n.text:0000000000401ff8\n.text:0000000000401ffa\n.text:0000000000401ffd\n.text:0000000000401fff\n.text:0000000000402006\n.text:0000000000402009\n.text:000000000040200b\n.text:0000000000402012\n.text:0000000000402017\n.text:000000000040201a\n.text:000000000040201f\n.text:0000000000402021\n.text:0000000000402025\n.text:000000000040202c\n.text:000000000040202f\n.text:0000000000402032\n.text:0000000000402039\n.text:0000000000402040\n.text:0000000000402043\n.text:0000000000402045\n.text:0000000000402048\n.text:000000000040204b\n.text:000000000040204d\n.text:0000000000402054\n.text:0000000000402056\n.text:000000000040205d\n.text:0000000000402064\n.text:0000000000402066\n.text:000000000040206d\n.text:0000000000402070\n.text:0000000000402075\n.text:000000000040207c\n.text:000000000040207f\n.text:0000000000402084\n.text:000000000040208b\n.text:000000000040208d\n.text:0000000000402094\n.text:000000000040209b\n.text:000000000040209d\n.text:00000000004020a4\n.text:00000000004020a7\n.text:00000000004020ac\n.text:00000000004020b3\n.text:00000000004020b6\n.text:00000000004020bb\n.text:00000000004020c2\n.text:00000000004020c4\n.text:00000000004020cb\n.text:00000000004020d2\n.text:00000000004020d4\n.text:00000000004020db\n.text:00000000004020e2\n.text:00000000004020e4\n.text:00000000004020e6\n.text:00000000004020ed\n.text:00000000004020f4\n.text:00000000004020fa\n.text:00000000004020fd\n.text:0000000000402102\n.text:0000000000402105\n.text:000000000040210c\n.text:0000000000402113\n.text:0000000000402117\n.text:000000000040211e\n.text:0000000000402121\n.text:0000000000402124\n.text:000000000040212b\n.text:000000000040212f\n.text:0000000000402131\n.text:0000000000402134\n.text:0000000000402138\n.text:000000000040213b\n.text:000000000040213d\n.text:0000000000402140\n.text:0000000000402142\n.text:0000000000402145\n.text:0000000000402148\n.text:000000000040214b\n.text:000000000040214e\n.text:0000000000402150\n.text:0000000000402155\n.text:0000000000402158\n.text:000000000040215b\n.text:0000000000402160\n.text:0000000000402162\n.text:0000000000402164\n.text:0000000000402168\n.text:000000000040216b\n.text:000000000040216e\n.text:0000000000402172\n.text:0000000000402175\n.text:0000000000402179\n.text:000000000040217b\n.text:000000000040217e\n.text:0000000000402180\n.text:0000000000402187\n.text:000000000040218e\n.text:0000000000402191\n.text:0000000000402195\n.text:0000000000402196\n.text:0000000000402198\n.text:000000000040219a\n.text:000000000040219c\n.text:000000000040219e\n.text:000000000040219f\n'
p482
tp483
sS'XtDisplayToApplicationContext'
p484
(S'\n__stdcall XtDisplayToApplicationContext()\n'
p485
V\u000avoid XtDisplayToApplicationContext(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisplayToApplicationContext_006060c8)();\u000a  return;\u000a}\u000a\u000a
p486
S'JMP qword ptr [0x006060c8]\n'
p487
S'ff 25 b2 48 20 00\n'
p488
S'.plt:0000000000401810\n'
p489
tp490
sS'do_prev16'
p491
(S'\n__stdcall do_prev16(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p492
V\u000avoid do_prev16(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  change_page(0xfffffff0);\u000a  return;\u000a}\u000a\u000a
p493
S'MOV EDI,0xfffffff0\nJMP 0x00403d00\n'
p494
S'bf f0 ff ff ff\ne9 e6 fe ff ff\n'
p495
S'.text:0000000000403e10\n.text:0000000000403e15\n'
p496
tp497
sS'do_prev'
p498
(S'\n__stdcall do_prev(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p499
V\u000avoid do_prev(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  change_page(0xffffffff);\u000a  return;\u000a}\u000a\u000a
p500
S'MOV EDI,0xffffffff\nJMP 0x00403d00\n'
p501
S'bf ff ff ff ff\ne9 d6 fe ff ff\n'
p502
S'.text:0000000000403e20\n.text:0000000000403e25\n'
p503
tp504
sS'__libc_csu_fini'
p505
(S'\n__stdcall __libc_csu_fini()\n'
p506
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p507
S'RET\n'
p508
S'f3 c3\n'
p509
S'.text:0000000000403f90\n'
p510
tp511
sS'XftDrawCreate'
p512
(S'\n__stdcall XftDrawCreate()\n'
p513
V\u000avoid XftDrawCreate(void)\u000a\u000a{\u000a  (*(code *)PTR_XftDrawCreate_006061d8)();\u000a  return;\u000a}\u000a\u000a
p514
S'JMP qword ptr [0x006061d8]\n'
p515
S'ff 25 a2 47 20 00\n'
p516
S'.plt:0000000000401a30\n'
p517
tp518
sS'XDrawLine'
p519
(S'\n__stdcall XDrawLine()\n'
p520
V\u000avoid XDrawLine(void)\u000a\u000a{\u000a  (*(code *)PTR_XDrawLine_006060c0)();\u000a  return;\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x006060c0]\n'
p522
S'ff 25 ba 48 20 00\n'
p523
S'.plt:0000000000401800\n'
p524
tp525
sS'_start'
p526
(S'\n__stdcall _start()\n'
p527
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00605ff8)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p528
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x403f90\nMOV RCX,0x403f20\nMOV RDI,0x403010\nCALL qword ptr [0x00605ff8]\nHLT\n'
p529
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 90 3f 40 00\n48 c7 c1 20 3f 40 00\n48 c7 c7 10 30 40 00\nff 15 5e 45 20 00\nf4\n'
p530
S'.text:0000000000401a70\n.text:0000000000401a72\n.text:0000000000401a75\n.text:0000000000401a76\n.text:0000000000401a79\n.text:0000000000401a7d\n.text:0000000000401a7e\n.text:0000000000401a7f\n.text:0000000000401a86\n.text:0000000000401a8d\n.text:0000000000401a94\n.text:0000000000401a9a\n'
p531
tp532
sS'do_next16'
p533
(S'\n__stdcall do_next16(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p534
V\u000avoid do_next16(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  change_page(0x10);\u000a  return;\u000a}\u000a\u000a
p535
S'MOV EDI,0x10\nJMP 0x00403d00\n'
p536
S'bf 10 00 00 00\ne9 b6 fe ff ff\n'
p537
S'.text:0000000000403e40\n.text:0000000000403e45\n'
p538
tp539
sS'XtDisplayStringConversionWarning'
p540
(S'\n__stdcall XtDisplayStringConversionWarning()\n'
p541
V\u000avoid XtDisplayStringConversionWarning(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisplayStringConversionWarning_00606158)();\u000a  return;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x00606158]\n'
p543
S'ff 25 22 48 20 00\n'
p544
S'.plt:0000000000401930\n'
p545
tp546
sS'XtReleaseGC'
p547
(S'\n__stdcall XtReleaseGC()\n'
p548
V\u000avoid XtReleaseGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XtReleaseGC_00606140)();\u000a  return;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x00606140]\n'
p550
S'ff 25 3a 48 20 00\n'
p551
S'.plt:0000000000401900\n'
p552
tp553
sS'XScreenNumberOfScreen'
p554
(S'\n__stdcall XScreenNumberOfScreen()\n'
p555
V\u000avoid XScreenNumberOfScreen(void)\u000a\u000a{\u000a  (*(code *)PTR_XScreenNumberOfScreen_00606120)();\u000a  return;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x00606120]\n'
p557
S'ff 25 5a 48 20 00\n'
p558
S'.plt:00000000004018c0\n'
p559
tp560
sS'XmuCvtStringToLong'
p561
(S'\n__stdcall XmuCvtStringToLong()\n'
p562
V\u000a/* WARNING: Switch with 1 destination removed at 0x004017a0 */\u000a\u000avoid XmuCvtStringToLong(void)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p563
S'JMP qword ptr [0x00606090]\n'
p564
S'ff 25 ea 48 20 00\n'
p565
S'.plt:00000000004017a0\n'
p566
tp567
sS'FcCharSetNextPage'
p568
(S'\n__stdcall FcCharSetNextPage()\n'
p569
V\u000avoid FcCharSetNextPage(void)\u000a\u000a{\u000a  (*(code *)PTR_FcCharSetNextPage_006060d8)();\u000a  return;\u000a}\u000a\u000a
p570
S'JMP qword ptr [0x006060d8]\n'
p571
S'ff 25 a2 48 20 00\n'
p572
S'.plt:0000000000401830\n'
p573
tp574
sS'Destroy'
p575
(S'\n__stdcall Destroy(Widget gw)\n'
p576
V\u000avoid Destroy(Widget gw)\u000a\u000a{\u000a  XtReleaseGC(gw,gw[1].core.colormap);\u000a  XtReleaseGC(gw,gw[1].core.window);\u000a  return;\u000a}\u000a\u000a
p577
S'PUSH RBX\nMOV RBX,RDI\nMOV RSI,qword ptr [0x170 + RBX]\nCALL 0x00401900\nMOV RSI,qword ptr [0x178 + RBX]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401900\n'
p578
S'53\n48 89 fb\n48 8b b3 70 01 00 00\ne8 e0 fa ff ff\n48 8b b3 78 01 00 00\n48 89 df\n5b\ne9 d0 fa ff ff\n'
p579
S'.text:0000000000401e10\n.text:0000000000401e11\n.text:0000000000401e14\n.text:0000000000401e1b\n.text:0000000000401e20\n.text:0000000000401e27\n.text:0000000000401e2a\n.text:0000000000401e2b\n'
p580
tp581
sS'XtGetGC'
p582
(S'\n__stdcall XtGetGC()\n'
p583
V\u000avoid XtGetGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetGC_006061e0)();\u000a  return;\u000a}\u000a\u000a
p584
S'JMP qword ptr [0x006061e0]\n'
p585
S'ff 25 9a 47 20 00\n'
p586
S'.plt:0000000000401a40\n'
p587
tp588
sS'change_page'
p589
(S'\n__stdcall change_page()\n'
p590
V\u000avoid change_page(int iParm1)\u000a\u000a{\u000a  int nrows;\u000a  int ncols;\u000a  long oldstart;\u000a  char buf [256];\u000a  undefined8 local_130;\u000a  ulong *local_128;\u000a  int local_120;\u000a  int local_11c;\u000a  ulong local_118;\u000a  ulong local_110;\u000a  ulong local_108 [32];\u000a  \u000a  local_130 = 0x404386;\u000a  GetFontGridCellDimensions(fontGrid,(long *)&local_110,&local_11c,&local_120);\u000a  if (iParm1 != 0) {\u000a    local_128 = (ulong *)((long)iParm1 * (long)local_11c * (long)local_120 + local_110);\u000a    XtSetValues(fontGrid,&local_130,1);\u000a  }\u000a  local_128 = &local_118;\u000a  XtGetValues(fontGrid,&local_130,1);\u000a  if ((iParm1 == 0) || (local_118 != local_110)) {\u000a    local_130 = 0x6054ed;\u000a    local_128 = local_108;\u000a    snprintf((char *)local_128,0x100,xfd_resources.start_format,local_118,local_118 >> 8,\u000a             local_118 & 0xff);\u000a    XtSetValues(startLabel,&local_130,1);\u000a  }\u000a  set_button_state();\u000a  return;\u000a}\u000a\u000a
p591
S'PUSH RBX\nSUB RSP,0x130\nMOV EBX,EDI\nMOV qword ptr [RSP + 0x8],0x404386\nMOV RDI,qword ptr [0x006069c8]\nLEA RSI,[RSP + 0x28]\nLEA RDX,[RSP + 0x1c]\nLEA RCX,[RSP + 0x18]\nCALL 0x004022f0\nTEST EBX,EBX\nJZ 0x00403d67\nMOVSXD RAX,dword ptr [RSP + 0x1c]\nMOVSXD RCX,dword ptr [RSP + 0x18]\nMOVSXD RDX,EBX\nIMUL RDX,RAX\nIMUL RDX,RCX\nADD RDX,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x10],RDX\nMOV RDI,qword ptr [0x006069c8]\nLEA RSI,[RSP + 0x8]\nMOV EDX,0x1\nCALL 0x00401710\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nMOV RDI,qword ptr [0x006069c8]\nLEA RSI,[RSP + 0x8]\nMOV EDX,0x1\nCALL 0x004016d0\nMOV RAX,qword ptr [RSP + 0x20]\nTEST EBX,EBX\nJZ 0x00403d97\nCMP RAX,qword ptr [RSP + 0x28]\nJZ 0x00403de3\nMOV R8,RAX\nSHR R8,0x8\nMOVZX R9D,AL\nMOV qword ptr [RSP + 0x8],0x6054ed\nLEA RDI,[RSP + 0x30]\nMOV qword ptr [RSP + 0x10],RDI\nMOV RDX,qword ptr [0x00606968]\nMOV RCX,qword ptr [RSP + 0x20]\nMOV ESI,0x100\nXOR EAX,EAX\nCALL 0x004016e0\nMOV RDI,qword ptr [0x006069b8]\nLEA RSI,[RSP + 0x8]\nMOV EDX,0x1\nCALL 0x00401710\nCALL 0x00403e50\nADD RSP,0x130\nPOP RBX\nRET\n'
p592
S'53\n48 81 ec 30 01 00 00\n89 fb\n48 c7 44 24 08 86 43 40 00\n48 8b 3d ae 2c 20 00\n48 8d 74 24 28\n48 8d 54 24 1c\n48 8d 4c 24 18\ne8 c2 e5 ff ff\n85 db\n74 35\n48 63 44 24 1c\n48 63 4c 24 18\n48 63 d3\n48 0f af d0\n48 0f af d1\n48 03 54 24 28\n48 89 54 24 10\n48 8b 3d 70 2c 20 00\n48 8d 74 24 08\nba 01 00 00 00\ne8 a9 d9 ff ff\n48 8d 44 24 20\n48 89 44 24 10\n48 8b 3d 50 2c 20 00\n48 8d 74 24 08\nba 01 00 00 00\ne8 49 d9 ff ff\n48 8b 44 24 20\n85 db\n74 07\n48 3b 44 24 28\n74 4c\n49 89 c0\n49 c1 e8 08\n44 0f b6 c8\n48 c7 44 24 08 ed 54 60 00\n48 8d 7c 24 30\n48 89 7c 24 10\n48 8b 15 ac 2b 20 00\n48 8b 4c 24 20\nbe 00 01 00 00\n31 c0\ne8 13 d9 ff ff\n48 8b 3d e4 2b 20 00\n48 8d 74 24 08\nba 01 00 00 00\ne8 2d d9 ff ff\ne8 68 00 00 00\n48 81 c4 30 01 00 00\n5b\nc3\n'
p593
S'.text:0000000000403d00\n.text:0000000000403d01\n.text:0000000000403d08\n.text:0000000000403d0a\n.text:0000000000403d13\n.text:0000000000403d1a\n.text:0000000000403d1f\n.text:0000000000403d24\n.text:0000000000403d29\n.text:0000000000403d2e\n.text:0000000000403d30\n.text:0000000000403d32\n.text:0000000000403d37\n.text:0000000000403d3c\n.text:0000000000403d3f\n.text:0000000000403d43\n.text:0000000000403d47\n.text:0000000000403d4c\n.text:0000000000403d51\n.text:0000000000403d58\n.text:0000000000403d5d\n.text:0000000000403d62\n.text:0000000000403d67\n.text:0000000000403d6c\n.text:0000000000403d71\n.text:0000000000403d78\n.text:0000000000403d7d\n.text:0000000000403d82\n.text:0000000000403d87\n.text:0000000000403d8c\n.text:0000000000403d8e\n.text:0000000000403d90\n.text:0000000000403d95\n.text:0000000000403d97\n.text:0000000000403d9a\n.text:0000000000403d9e\n.text:0000000000403da2\n.text:0000000000403dab\n.text:0000000000403db0\n.text:0000000000403db5\n.text:0000000000403dbc\n.text:0000000000403dc1\n.text:0000000000403dc6\n.text:0000000000403dc8\n.text:0000000000403dcd\n.text:0000000000403dd4\n.text:0000000000403dd9\n.text:0000000000403dde\n.text:0000000000403de3\n.text:0000000000403de8\n.text:0000000000403def\n.text:0000000000403df0\n'
p594
tp595
sS'snprintf'
p596
(S'\n__stdcall snprintf(char * __s, size_t __maxlen, char * __format)\n'
p597
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint snprintf(char *__s,size_t __maxlen,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_snprintf_00606030)();\u000a  return iVar1;\u000a}\u000a\u000a
p598
S'JMP qword ptr [0x00606030]\n'
p599
S'ff 25 4a 49 20 00\n'
p600
S'.plt:00000000004016e0\n'
p601
tp602
sS'XtSetValues'
p603
(S'\n__stdcall XtSetValues()\n'
p604
V\u000avoid XtSetValues(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetValues_00606048)();\u000a  return;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x00606048]\n'
p606
S'ff 25 32 49 20 00\n'
p607
S'.plt:0000000000401710\n'
p608
tp609
sS'do_next'
p610
(S'\n__stdcall do_next(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p611
V\u000avoid do_next(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  change_page(1);\u000a  return;\u000a}\u000a\u000a
p612
S'MOV EDI,0x1\nJMP 0x00403d00\n'
p613
S'bf 01 00 00 00\ne9 c6 fe ff ff\n'
p614
S'.text:0000000000403e30\n.text:0000000000403e35\n'
p615
tp616
sS'register_tm_clones'
p617
(S'\n__stdcall register_tm_clones()\n'
p618
V\u000a/* WARNING: Removing unreachable block (ram,0x00401b03) */\u000a/* WARNING: Removing unreachable block (ram,0x00401b0d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p619
S'MOV ESI,0x606890\nPUSH RBP\nSUB RSI,0x606890\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401b18\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401b18\nPOP RBP\nMOV EDI,0x606890\nJMP RAX\nPOP RBP\nRET\n'
p620
S'be 90 68 60 00\n55\n48 81 ee 90 68 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 90 68 60 00\nff e0\n5d\nc3\n'
p621
S'.text:0000000000401ae0\n.text:0000000000401ae5\n.text:0000000000401ae6\n.text:0000000000401aed\n.text:0000000000401af1\n.text:0000000000401af4\n.text:0000000000401af7\n.text:0000000000401afb\n.text:0000000000401afe\n.text:0000000000401b01\n.text:0000000000401b03\n.text:0000000000401b08\n.text:0000000000401b0b\n.text:0000000000401b0d\n.text:0000000000401b0e\n.text:0000000000401b13\n.text:0000000000401b18\n.text:0000000000401b19\n'
p622
tp623
sS'ClassInitialize'
p624
(S'\n__stdcall ClassInitialize()\n'
p625
V\u000acode * ClassInitialize(void)\u000a\u000a{\u000a  code *local_8;\u000a  \u000a  XtAddConverter(0x605a45,&DAT_00403ffd,XmuCvtStringToLong,0,0);\u000a  XtSetTypeConverter(0x605a45,0x4040ed,XmuCvtStringToXftColor,xftColorConvertArgs,2,3,\u000a                     XmuFreeXftColor);\u000a  local_8 = XmuFreeXftFont;\u000a  XtSetTypeConverter(0x605a45,0x40417b,XmuCvtStringToXftFont,xftFontConvertArgs,1,3);\u000a  return local_8;\u000a}\u000a\u000a
p626
S'PUSH RAX\nMOV EDI,0x605a45\nMOV ESI,0x403ffd\nMOV EDX,0x4017a0\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x004018b0\nMOV qword ptr [RSP],0x4025e0\nMOV EDI,0x605a45\nMOV ESI,0x4040ed\nMOV EDX,0x402480\nMOV ECX,0x6065e0\nMOV R8D,0x2\nMOV R9D,0x3\nCALL 0x00401a10\nMOV qword ptr [RSP],0x402750\nMOV EDI,0x605a45\nMOV ESI,0x40417b\nMOV EDX,0x402670\nMOV ECX,0x606610\nMOV R8D,0x1\nMOV R9D,0x3\nCALL 0x00401a10\nPOP RAX\nRET\n'
p627
S'50\nbf 45 5a 60 00\nbe fd 3f 40 00\nba a0 17 40 00\n31 c9\n45 31 c0\ne8 26 fd ff ff\n48 c7 04 24 e0 25 40 00\nbf 45 5a 60 00\nbe ed 40 40 00\nba 80 24 40 00\nb9 e0 65 60 00\n41 b8 02 00 00 00\n41 b9 03 00 00 00\ne8 59 fe ff ff\n48 c7 04 24 50 27 40 00\nbf 45 5a 60 00\nbe 7b 41 40 00\nba 70 26 40 00\nb9 10 66 60 00\n41 b8 01 00 00 00\n41 b9 03 00 00 00\ne8 2c fe ff ff\n58\nc3\n'
p628
S'.text:0000000000401b70\n.text:0000000000401b71\n.text:0000000000401b76\n.text:0000000000401b7b\n.text:0000000000401b80\n.text:0000000000401b82\n.text:0000000000401b85\n.text:0000000000401b8a\n.text:0000000000401b92\n.text:0000000000401b97\n.text:0000000000401b9c\n.text:0000000000401ba1\n.text:0000000000401ba6\n.text:0000000000401bac\n.text:0000000000401bb2\n.text:0000000000401bb7\n.text:0000000000401bbf\n.text:0000000000401bc4\n.text:0000000000401bc9\n.text:0000000000401bce\n.text:0000000000401bd3\n.text:0000000000401bd9\n.text:0000000000401bdf\n.text:0000000000401be4\n.text:0000000000401be5\n'
p629
tp630
sS'fwrite'
p631
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p632
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_006061a8)();\u000a  return sVar1;\u000a}\u000a\u000a
p633
S'JMP qword ptr [0x006061a8]\n'
p634
S'ff 25 d2 47 20 00\n'
p635
S'.plt:00000000004019d0\n'
p636
tp637
sS'XClearArea'
p638
(S'\n__stdcall XClearArea()\n'
p639
V\u000avoid XClearArea(void)\u000a\u000a{\u000a  (*(code *)PTR_XClearArea_00606128)();\u000a  return;\u000a}\u000a\u000a
p640
S'JMP qword ptr [0x00606128]\n'
p641
S'ff 25 52 48 20 00\n'
p642
S'.plt:00000000004018d0\n'
p643
tp644
sS'get_gc'
p645
(S'\n__stdcall get_gc(FontGridWidget fgw, Pixel fore)\n'
p646
V\u000aGC get_gc(FontGridWidget fgw,Pixel fore)\u000a\u000a{\u000a  int iVar1;\u000a  XFontStruct *pXVar2;\u000a  GC p_Var3;\u000a  ulong uVar4;\u000a  XGCValues gcv;\u000a  undefined4 local_80 [4];\u000a  Pixel local_70;\u000a  Pixel local_68;\u000a  int local_60;\u000a  undefined4 local_58;\u000a  Font local_28;\u000a  \u000a  local_68 = (fgw->core).background_pixel;\u000a  local_80[0] = 3;\u000a  pXVar2 = (fgw->fontgrid).text_font;\u000a  if (pXVar2 == (XFontStruct *)0x0) {\u000a    uVar4 = 0x4d;\u000a  }\u000a  else {\u000a    local_28 = pXVar2->fid;\u000a    uVar4 = 0x404d;\u000a  }\u000a  local_58 = 3;\u000a  iVar1 = (fgw->fontgrid).grid_width;\u000a  if (0 < iVar1) {\u000a    uVar4 = uVar4 | 0x10;\u000a    local_60 = 0;\u000a    if (iVar1 != 1) {\u000a      local_60 = iVar1;\u000a    }\u000a  }\u000a  local_70 = fore;\u000a  p_Var3 = (GC)XtGetGC(fgw,uVar4,local_80);\u000a  return p_Var3;\u000a}\u000a\u000a
p647
S'SUB RSP,0x88\nMOV qword ptr [RSP + 0x18],RSI\nMOV RAX,qword ptr [0xb8 + RDI]\nMOV qword ptr [RSP + 0x20],RAX\nMOV dword ptr [RSP + 0x8],0x3\nMOV RAX,qword ptr [0x128 + RDI]\nTEST RAX,RAX\nJZ 0x004027dc\nMOV RAX,qword ptr [RAX + 0x8]\nMOV qword ptr [RSP + 0x60],RAX\nMOV ESI,0x404d\nJMP 0x004027e1\nMOV ESI,0x4d\nMOV dword ptr [RSP + 0x30],0x3\nMOV EAX,dword ptr [0x168 + RDI]\nTEST EAX,EAX\nJLE 0x00402803\nOR RSI,0x10\nXOR ECX,ECX\nCMP EAX,0x1\nCMOVNZ ECX,EAX\nMOV dword ptr [RSP + 0x28],ECX\nLEA RDX,[RSP + 0x8]\nCALL 0x00401a40\nADD RSP,0x88\nRET\n'
p648
S'48 81 ec 88 00 00 00\n48 89 74 24 18\n48 8b 87 b8 00 00 00\n48 89 44 24 20\nc7 44 24 08 03 00 00 00\n48 8b 87 28 01 00 00\n48 85 c0\n74 10\n48 8b 40 08\n48 89 44 24 60\nbe 4d 40 00 00\neb 05\nbe 4d 00 00 00\nc7 44 24 30 03 00 00 00\n8b 87 68 01 00 00\n85 c0\n7e 10\n48 83 ce 10\n31 c9\n83 f8 01\n0f 45 c8\n89 4c 24 28\n48 8d 54 24 08\ne8 33 f2 ff ff\n48 81 c4 88 00 00 00\nc3\n'
p649
S'.text:00000000004027a0\n.text:00000000004027a7\n.text:00000000004027ac\n.text:00000000004027b3\n.text:00000000004027b8\n.text:00000000004027c0\n.text:00000000004027c7\n.text:00000000004027ca\n.text:00000000004027cc\n.text:00000000004027d0\n.text:00000000004027d5\n.text:00000000004027da\n.text:00000000004027dc\n.text:00000000004027e1\n.text:00000000004027e9\n.text:00000000004027ef\n.text:00000000004027f1\n.text:00000000004027f3\n.text:00000000004027f7\n.text:00000000004027f9\n.text:00000000004027fc\n.text:00000000004027ff\n.text:0000000000402803\n.text:0000000000402808\n.text:000000000040280d\n.text:0000000000402814\n'
p650
tp651
sS'XTextExtents16'
p652
(S'\n__stdcall XTextExtents16()\n'
p653
V\u000avoid XTextExtents16(void)\u000a\u000a{\u000a  (*(code *)PTR_XTextExtents16_00606068)();\u000a  return;\u000a}\u000a\u000a
p654
S'JMP qword ptr [0x00606068]\n'
p655
S'ff 25 12 49 20 00\n'
p656
S'.plt:0000000000401750\n'
p657
tp658
sS'XtOverrideTranslations'
p659
(S'\n__stdcall XtOverrideTranslations()\n'
p660
V\u000avoid XtOverrideTranslations(void)\u000a\u000a{\u000a  (*(code *)PTR_XtOverrideTranslations_006061e8)();\u000a  return;\u000a}\u000a\u000a
p661
S'JMP qword ptr [0x006061e8]\n'
p662
S'ff 25 92 47 20 00\n'
p663
S'.plt:0000000000401a50\n'
p664
tp665
sS'__do_global_dtors_aux'
p666
(S'\n__stdcall __do_global_dtors_aux()\n'
p667
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p668
S'CMP byte ptr [0x00606928],0x0\nJNZ 0x00401b3a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401aa0\nPOP RBP\nMOV byte ptr [0x00606928],0x1\nRET\n'
p669
S'80 3d 01 4e 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 ee 4d 20 00 01\nf3 c3\n'
p670
S'.text:0000000000401b20\n.text:0000000000401b27\n.text:0000000000401b29\n.text:0000000000401b2a\n.text:0000000000401b2d\n.text:0000000000401b32\n.text:0000000000401b33\n.text:0000000000401b3a\n'
p671
tp672
sS'XRenderParseColor'
p673
(S'\n__stdcall XRenderParseColor()\n'
p674
V\u000avoid XRenderParseColor(void)\u000a\u000a{\u000a  (*(code *)PTR_XRenderParseColor_00606100)();\u000a  return;\u000a}\u000a\u000a
p675
S'JMP qword ptr [0x00606100]\n'
p676
S'ff 25 7a 48 20 00\n'
p677
S'.plt:0000000000401880\n'
p678
tp679
sS'_fini'
p680
(S'\n__stdcall _fini()\n'
p681
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p682
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p683
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p684
S'.fini:0000000000403f94\n.fini:0000000000403f98\n.fini:0000000000403f9c\n'
p685
tp686
sS'XftTextExtents32'
p687
(S'\n__stdcall XftTextExtents32()\n'
p688
V\u000avoid XftTextExtents32(void)\u000a\u000a{\u000a  (*(code *)PTR_XftTextExtents32_006060e0)();\u000a  return;\u000a}\u000a\u000a
p689
S'JMP qword ptr [0x006060e0]\n'
p690
S'ff 25 9a 48 20 00\n'
p691
S'.plt:0000000000401840\n'
p692
tp693
s.