(dp0
S'ungetc'
p1
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p2
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_006182b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x006182b0]\n'
p4
S'ff 25 1a 5b 21 00\n'
p5
S'.plt:0000000000402790\n'
p6
tp7
sS'emit_verbose'
p8
(S'\n__stdcall emit_verbose(char * src, char * dst, char * backup_dst_name)\n'
p9
V\u000avoid emit_verbose(char *src,char *dst,char *backup_dst_name)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  undefined8 uVar3;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  pcVar2 = quotearg_n_style((char *)0x1);\u000a  __printf_chk(1,0x4123cf,pcVar1,pcVar2);\u000a  if (backup_dst_name != (char *)0x0) {\u000a    uVar3 = dcgettext(0," (backup: %s)",5);\u000a    pcVar1 = quotearg_style((char *)0x4);\u000a    __printf_chk(1,uVar3,pcVar1,pcVar1);\u000a  }\u000a  (*(code *)PTR_putchar_unlocked_00618260)(10);\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV RAX,RDI\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,RAX\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,RBX\nCALL 0x0040c3e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV ESI,0x4123cf\nXOR EAX,EAX\nMOV RDX,R15\nCALL 0x00402840\nTEST R14,R14\nJZ 0x00406734\nXOR EDI,EDI\nMOV ESI,0x41284d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00402840\nMOV EDI,0xa\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x004026f0\n'
p11
S'41 57\n41 56\n53\n49 89 d6\n48 89 f3\n48 89 f8\n31 ff\nbe 04 00 00 00\n48 89 c2\ne8 13 5d 00 00\n49 89 c7\nbf 01 00 00 00\nbe 04 00 00 00\n48 89 da\ne8 fe 5c 00 00\n48 89 c1\nbf 01 00 00 00\nbe cf 23 41 00\n31 c0\n4c 89 fa\ne8 47 c1 ff ff\n4d 85 f6\n74 36\n31 ff\nbe 4d 28 41 00\nba 05 00 00 00\ne8 11 bd ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 f6\ne8 a1 5d 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 de\n48 89 ca\ne8 0c c1 ff ff\nbf 0a 00 00 00\n5b\n41 5e\n41 5f\ne9 ad bf ff ff\n'
p12
S'.text:00000000004066b0\n.text:00000000004066b2\n.text:00000000004066b4\n.text:00000000004066b5\n.text:00000000004066b8\n.text:00000000004066bb\n.text:00000000004066be\n.text:00000000004066c0\n.text:00000000004066c5\n.text:00000000004066c8\n.text:00000000004066cd\n.text:00000000004066d0\n.text:00000000004066d5\n.text:00000000004066da\n.text:00000000004066dd\n.text:00000000004066e2\n.text:00000000004066e5\n.text:00000000004066ea\n.text:00000000004066ef\n.text:00000000004066f1\n.text:00000000004066f4\n.text:00000000004066f9\n.text:00000000004066fc\n.text:00000000004066fe\n.text:0000000000406700\n.text:0000000000406705\n.text:000000000040670a\n.text:000000000040670f\n.text:0000000000406712\n.text:0000000000406717\n.text:000000000040671a\n.text:000000000040671f\n.text:0000000000406722\n.text:0000000000406727\n.text:0000000000406729\n.text:000000000040672c\n.text:000000000040672f\n.text:0000000000406734\n.text:0000000000406739\n.text:000000000040673a\n.text:000000000040673c\n.text:000000000040673e\n'
p13
tp14
sS'dev_info_hash'
p15
(S'\n__stdcall dev_info_hash(void * x, size_t table_size)\n'
p16
V\u000asize_t dev_info_hash(void *x,size_t table_size)\u000a\u000a{\u000a  return *(ulong *)x % table_size;\u000a}\u000a\u000a
p17
S'MOV RAX,qword ptr [RDI]\nXOR EDX,EDX\nDIV RSI\nMOV RAX,RDX\nRET\n'
p18
S'48 8b 07\n31 d2\n48 f7 f6\n48 89 d0\nc3\n'
p19
S'.text:000000000040dd60\n.text:000000000040dd63\n.text:000000000040dd65\n.text:000000000040dd68\n.text:000000000040dd6b\n'
p20
tp21
sS'version_etc_arn'
p22
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p23
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_00413993,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x40e607;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x40e688;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x40e71c;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x0040e498\nMOV EDX,0x413980\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x00402980\nJMP 0x0040e4ad\nMOV EDX,0x41398c\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x00402980\nXOR EDI,EDI\nMOV ESI,0x413993\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x413c60\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00402980\nXOR EDI,EDI\nMOV ESI,0x413997\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00402610\nCMP R12,0x9\nJA 0x0040e536\nJMP qword ptr [0x413930 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x413a62\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402980\nXOR EDI,EDI\nMOV ESI,0x413ba1\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x38\nJMP 0x0040e7a7\nXOR EDI,EDI\nMOV ESI,0x413a72\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402980\nXOR EDI,EDI\nMOV ESI,0x413a89\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402980\nXOR EDI,EDI\nMOV ESI,0x413aa5\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x18\nJMP 0x0040e7a7\nXOR EDI,EDI\nMOV ESI,0x413ac5\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x18\nJMP 0x0040e7a7\nXOR EDI,EDI\nMOV ESI,0x413ae9\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x28\nJMP 0x0040e7a7\nXOR EDI,EDI\nMOV ESI,0x413b11\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x28\nJMP 0x0040e7a7\nXOR EDI,EDI\nMOV ESI,0x413b3d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x38\nJMP 0x0040e7a7\nXOR EDI,EDI\nMOV ESI,0x413b6d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402980\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x004022d0\n'
p25
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba 80 39 41 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 ea 44 ff ff\neb 15\nba 8c 39 41 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 d3 44 ff ff\n31 ff\nbe 93 39 41 00\nba 05 00 00 00\ne8 62 3f ff ff\n48 89 c1\nbe 01 00 00 00\nba 60 3c 41 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 a5 44 ff ff\n31 ff\nbe 97 39 41 00\nba 05 00 00 00\ne8 34 3f ff ff\n48 89 c7\n4c 89 f6\ne8 19 41 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 30 39 41 00\n31 ff\nbe 62 3a 41 00\nba 05 00 00 00\ne8 0a 3f ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 4a 44 ff ff\n31 ff\nbe a1 3b 41 00\nba 05 00 00 00\ne8 d9 3e ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 01 44 ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe 72 3a 41 00\nba 05 00 00 00\ne8 87 3e ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 c3 43 ff ff\n31 ff\nbe 89 3a 41 00\nba 05 00 00 00\ne8 52 3e ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 8a 43 ff ff\n31 ff\nbe a5 3a 41 00\nba 05 00 00 00\ne8 19 3e ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 54 43 ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe c5 3a 41 00\nba 05 00 00 00\ne8 da 3d ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 12 43 ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe e9 3a 41 00\nba 05 00 00 00\ne8 98 3d ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 c8 42 ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe 11 3b 41 00\nba 05 00 00 00\ne8 4e 3d ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 7e 42 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe 3d 3b 41 00\nba 05 00 00 00\ne8 04 3d ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 2c 42 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe 6d 3b 41 00\nba 05 00 00 00\ne8 b5 3c ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 dd 41 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 1c 3b ff ff\n'
p26
S'.text:000000000040e460\n.text:000000000040e462\n.text:000000000040e464\n.text:000000000040e466\n.text:000000000040e467\n.text:000000000040e468\n.text:000000000040e46b\n.text:000000000040e46e\n.text:000000000040e471\n.text:000000000040e474\n.text:000000000040e477\n.text:000000000040e47a\n.text:000000000040e47f\n.text:000000000040e482\n.text:000000000040e484\n.text:000000000040e489\n.text:000000000040e48b\n.text:000000000040e48e\n.text:000000000040e491\n.text:000000000040e496\n.text:000000000040e498\n.text:000000000040e49d\n.text:000000000040e49f\n.text:000000000040e4a2\n.text:000000000040e4a5\n.text:000000000040e4a8\n.text:000000000040e4ad\n.text:000000000040e4af\n.text:000000000040e4b4\n.text:000000000040e4b9\n.text:000000000040e4be\n.text:000000000040e4c1\n.text:000000000040e4c6\n.text:000000000040e4cb\n.text:000000000040e4d1\n.text:000000000040e4d3\n.text:000000000040e4d6\n.text:000000000040e4db\n.text:000000000040e4dd\n.text:000000000040e4e2\n.text:000000000040e4e7\n.text:000000000040e4ec\n.text:000000000040e4ef\n.text:000000000040e4f2\n.text:000000000040e4f7\n.text:000000000040e4fb\n.text:000000000040e4fd\n.text:000000000040e505\n.text:000000000040e507\n.text:000000000040e50c\n.text:000000000040e511\n.text:000000000040e516\n.text:000000000040e519\n.text:000000000040e51c\n.text:000000000040e521\n.text:000000000040e523\n.text:000000000040e526\n.text:000000000040e52a\n.text:000000000040e52b\n.text:000000000040e52d\n.text:000000000040e52f\n.text:000000000040e531\n.text:000000000040e536\n.text:000000000040e538\n.text:000000000040e53d\n.text:000000000040e542\n.text:000000000040e547\n.text:000000000040e54a\n.text:000000000040e54d\n.text:000000000040e551\n.text:000000000040e555\n.text:000000000040e55a\n.text:000000000040e55f\n.text:000000000040e562\n.text:000000000040e566\n.text:000000000040e56a\n.text:000000000040e56e\n.text:000000000040e572\n.text:000000000040e576\n.text:000000000040e57a\n.text:000000000040e57f\n.text:000000000040e583\n.text:000000000040e588\n.text:000000000040e58a\n.text:000000000040e58f\n.text:000000000040e594\n.text:000000000040e599\n.text:000000000040e59c\n.text:000000000040e59f\n.text:000000000040e5a3\n.text:000000000040e5a8\n.text:000000000040e5aa\n.text:000000000040e5ad\n.text:000000000040e5b1\n.text:000000000040e5b2\n.text:000000000040e5b4\n.text:000000000040e5b6\n.text:000000000040e5b8\n.text:000000000040e5bd\n.text:000000000040e5bf\n.text:000000000040e5c4\n.text:000000000040e5c9\n.text:000000000040e5ce\n.text:000000000040e5d1\n.text:000000000040e5d4\n.text:000000000040e5d8\n.text:000000000040e5dc\n.text:000000000040e5e1\n.text:000000000040e5e3\n.text:000000000040e5e6\n.text:000000000040e5ea\n.text:000000000040e5eb\n.text:000000000040e5ed\n.text:000000000040e5ef\n.text:000000000040e5f1\n.text:000000000040e5f6\n.text:000000000040e5f8\n.text:000000000040e5fd\n.text:000000000040e602\n.text:000000000040e607\n.text:000000000040e60a\n.text:000000000040e60d\n.text:000000000040e611\n.text:000000000040e615\n.text:000000000040e619\n.text:000000000040e61e\n.text:000000000040e620\n.text:000000000040e623\n.text:000000000040e627\n.text:000000000040e62c\n.text:000000000040e630\n.text:000000000040e635\n.text:000000000040e637\n.text:000000000040e63c\n.text:000000000040e641\n.text:000000000040e646\n.text:000000000040e649\n.text:000000000040e64c\n.text:000000000040e650\n.text:000000000040e654\n.text:000000000040e659\n.text:000000000040e65e\n.text:000000000040e661\n.text:000000000040e665\n.text:000000000040e669\n.text:000000000040e66e\n.text:000000000040e672\n.text:000000000040e677\n.text:000000000040e679\n.text:000000000040e67e\n.text:000000000040e683\n.text:000000000040e688\n.text:000000000040e68b\n.text:000000000040e68e\n.text:000000000040e692\n.text:000000000040e696\n.text:000000000040e69a\n.text:000000000040e69f\n.text:000000000040e6a4\n.text:000000000040e6a7\n.text:000000000040e6ab\n.text:000000000040e6af\n.text:000000000040e6b3\n.text:000000000040e6b8\n.text:000000000040e6bc\n.text:000000000040e6c1\n.text:000000000040e6c3\n.text:000000000040e6c8\n.text:000000000040e6cd\n.text:000000000040e6d2\n.text:000000000040e6d5\n.text:000000000040e6d8\n.text:000000000040e6dc\n.text:000000000040e6e0\n.text:000000000040e6e5\n.text:000000000040e6ea\n.text:000000000040e6ed\n.text:000000000040e6f1\n.text:000000000040e6f5\n.text:000000000040e6f9\n.text:000000000040e6fd\n.text:000000000040e702\n.text:000000000040e706\n.text:000000000040e70b\n.text:000000000040e70d\n.text:000000000040e712\n.text:000000000040e717\n.text:000000000040e71c\n.text:000000000040e71f\n.text:000000000040e722\n.text:000000000040e726\n.text:000000000040e72a\n.text:000000000040e72e\n.text:000000000040e733\n.text:000000000040e738\n.text:000000000040e73b\n.text:000000000040e73f\n.text:000000000040e743\n.text:000000000040e747\n.text:000000000040e74b\n.text:000000000040e74f\n.text:000000000040e754\n.text:000000000040e758\n.text:000000000040e75a\n.text:000000000040e75c\n.text:000000000040e761\n.text:000000000040e766\n.text:000000000040e76b\n.text:000000000040e76e\n.text:000000000040e771\n.text:000000000040e775\n.text:000000000040e779\n.text:000000000040e77e\n.text:000000000040e783\n.text:000000000040e786\n.text:000000000040e78a\n.text:000000000040e78e\n.text:000000000040e792\n.text:000000000040e796\n.text:000000000040e79a\n.text:000000000040e79e\n.text:000000000040e7a3\n.text:000000000040e7a7\n.text:000000000040e7a8\n.text:000000000040e7aa\n.text:000000000040e7ac\n.text:000000000040e7ae\n.text:000000000040e7af\n'
p27
tp28
sS'transfer_entries'
p29
(S'\n__stdcall transfer_entries(Hash_table * dst, Hash_table * src)\n'
p30
V\u000a_Bool transfer_entries(Hash_table *dst,Hash_table *src)\u000a\u000a{\u000a  void *key;\u000a  hash_entry *phVar1;\u000a  hash_entry *entry;\u000a  hash_entry *phVar2;\u000a  char in_DL;\u000a  hash_entry *phVar3;\u000a  \u000a  phVar3 = src->bucket;\u000a  if (phVar3 < src->bucket_limit) {\u000a    do {\u000a      if (phVar3->data != (void *)0x0) {\u000a        entry = phVar3->next;\u000a        while (entry != (hash_entry *)0x0) {\u000a          key = entry->data;\u000a          phVar1 = safe_hasher(dst,key);\u000a          phVar2 = entry->next;\u000a          if (phVar1->data == (void *)0x0) {\u000a            phVar1->data = key;\u000a            dst->n_buckets_used = dst->n_buckets_used + 1;\u000a            free_entry(dst,entry);\u000a            entry = phVar2;\u000a          }\u000a          else {\u000a            entry->next = phVar1->next;\u000a            phVar1->next = entry;\u000a            entry = phVar2;\u000a          }\u000a        }\u000a        key = phVar3->data;\u000a        phVar3->next = (hash_entry *)0x0;\u000a        if (in_DL == 0) {\u000a          entry = safe_hasher(dst,key);\u000a          if (entry->data == (void *)0x0) {\u000a            entry->data = key;\u000a            dst->n_buckets_used = dst->n_buckets_used + 1;\u000a          }\u000a          else {\u000a            phVar2 = allocate_entry(dst);\u000a            if (phVar2 == (hash_entry *)0x0) {\u000a              return false;\u000a            }\u000a            phVar2->data = key;\u000a            phVar2->next = entry->next;\u000a            entry->next = phVar2;\u000a          }\u000a          phVar3->data = (void *)0x0;\u000a          src->n_buckets_used = src->n_buckets_used - 1;\u000a        }\u000a      }\u000a      phVar3 = phVar3 + 1;\u000a    } while (phVar3 < src->bucket_limit);\u000a  }\u000a  return true;\u000a}\u000a\u000a
p31
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12D,EDX\nMOV RBP,RSI\nMOV R14,RDI\nMOV R15,qword ptr [RBP]\nMOV AL,0x1\nCMP R15,qword ptr [RBP + 0x8]\nJNC 0x0040a252\nMOV qword ptr [RSP],RBP\nNOP dword ptr [RAX + RAX*0x1]\nCMP qword ptr [R15],0x0\nJZ 0x0040a242\nMOV RBX,qword ptr [R15 + 0x8]\nTEST RBX,RBX\nJZ 0x0040a1ea\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV R13,qword ptr [RBX]\nMOV RDI,R14\nMOV RSI,R13\nCALL 0x00409a60\nMOV RBP,qword ptr [RBX + 0x8]\nCMP qword ptr [RAX],0x0\nJZ 0x0040a1d0\nMOV RCX,qword ptr [RAX + 0x8]\nMOV qword ptr [RBX + 0x8],RCX\nMOV qword ptr [RAX + 0x8],RBX\nJMP 0x0040a1e2\nMOV qword ptr [RAX],R13\nINC qword ptr [R14 + 0x18]\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x0040a7d0\nTEST RBP,RBP\nMOV RBX,RBP\nJNZ 0x0040a1a0\nMOV R13,qword ptr [R15]\nMOV qword ptr [R15 + 0x8],0x0\nTEST R12B,R12B\nMOV RBP,qword ptr [RSP]\nJNZ 0x0040a242\nMOV RDI,R14\nMOV RSI,R13\nCALL 0x00409a60\nMOV RBX,RAX\nCMP qword ptr [RBX],0x0\nJZ 0x0040a230\nMOV RDI,R14\nCALL 0x0040a510\nTEST RAX,RAX\nJZ 0x0040a261\nMOV qword ptr [RAX],R13\nMOV RCX,qword ptr [RBX + 0x8]\nMOV qword ptr [RAX + 0x8],RCX\nMOV qword ptr [RBX + 0x8],RAX\nJMP 0x0040a237\nMOV qword ptr [RBX],R13\nINC qword ptr [R14 + 0x18]\nMOV qword ptr [R15],0x0\nDEC qword ptr [RBP + 0x18]\nADD R15,0x10\nCMP R15,qword ptr [RBP + 0x8]\nJC 0x0040a180\nMOV AL,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EAX,EAX\nJMP 0x0040a252\n'
p32
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n41 89 d4\n48 89 f5\n49 89 fe\n4c 8b 7d 00\nb0 01\n4c 3b 7d 08\n0f 83 de 00 00 00\n48 89 2c 24\n0f 1f 84 00 00 00 00 00\n49 83 3f 00\n0f 84 b8 00 00 00\n49 8b 5f 08\n48 85 db\n74 57\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 8b 2b\n4c 89 f7\n4c 89 ee\ne8 b2 f8 ff ff\n48 8b 6b 08\n48 83 38 00\n74 18\n48 8b 48 08\n48 89 4b 08\n48 89 58 08\neb 1c\n4c 89 28\n49 ff 46 18\n4c 89 f7\n48 89 de\ne8 ee 05 00 00\n48 85 ed\n48 89 eb\n75 b6\n4d 8b 2f\n49 c7 47 08 00 00 00 00\n45 84 e4\n48 8b 2c 24\n75 44\n4c 89 f7\n4c 89 ee\ne8 57 f8 ff ff\n48 89 c3\n48 83 3b 00\n74 1e\n4c 89 f7\ne8 f6 02 00 00\n48 85 c0\n74 42\n4c 89 28\n48 8b 4b 08\n48 89 48 08\n48 89 43 08\neb 07\n4c 89 2b\n49 ff 46 18\n49 c7 07 00 00 00 00\n48 ff 4d 18\n49 83 c7 10\n4c 3b 7d 08\n0f 82 30 ff ff ff\nb0 01\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n31 c0\neb ed\n'
p33
S'.text:000000000040a150\n.text:000000000040a151\n.text:000000000040a153\n.text:000000000040a155\n.text:000000000040a157\n.text:000000000040a159\n.text:000000000040a15a\n.text:000000000040a15b\n.text:000000000040a15e\n.text:000000000040a161\n.text:000000000040a164\n.text:000000000040a168\n.text:000000000040a16a\n.text:000000000040a16e\n.text:000000000040a174\n.text:000000000040a178\n.text:000000000040a180\n.text:000000000040a184\n.text:000000000040a18a\n.text:000000000040a18e\n.text:000000000040a191\n.text:000000000040a193\n.text:000000000040a1a0\n.text:000000000040a1a3\n.text:000000000040a1a6\n.text:000000000040a1a9\n.text:000000000040a1ae\n.text:000000000040a1b2\n.text:000000000040a1b6\n.text:000000000040a1b8\n.text:000000000040a1bc\n.text:000000000040a1c0\n.text:000000000040a1c4\n.text:000000000040a1d0\n.text:000000000040a1d3\n.text:000000000040a1d7\n.text:000000000040a1da\n.text:000000000040a1dd\n.text:000000000040a1e2\n.text:000000000040a1e5\n.text:000000000040a1e8\n.text:000000000040a1ea\n.text:000000000040a1ed\n.text:000000000040a1f5\n.text:000000000040a1f8\n.text:000000000040a1fc\n.text:000000000040a1fe\n.text:000000000040a201\n.text:000000000040a204\n.text:000000000040a209\n.text:000000000040a20c\n.text:000000000040a210\n.text:000000000040a212\n.text:000000000040a215\n.text:000000000040a21a\n.text:000000000040a21d\n.text:000000000040a21f\n.text:000000000040a222\n.text:000000000040a226\n.text:000000000040a22a\n.text:000000000040a22e\n.text:000000000040a230\n.text:000000000040a233\n.text:000000000040a237\n.text:000000000040a23e\n.text:000000000040a242\n.text:000000000040a246\n.text:000000000040a24a\n.text:000000000040a250\n.text:000000000040a252\n.text:000000000040a256\n.text:000000000040a257\n.text:000000000040a259\n.text:000000000040a25b\n.text:000000000040a25d\n.text:000000000040a25f\n.text:000000000040a260\n.text:000000000040a261\n.text:000000000040a263\n'
p34
tp35
sS'file_name_concat'
p36
(S'\n__stdcall file_name_concat(char * dir, char * abase, char * * base_in_result)\n'
p37
V\u000achar * file_name_concat(char *dir,char *abase,char **base_in_result)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = mfile_name_concat(dir,abase,base_in_result);\u000a  if (pcVar1 != (char *)0x0) {\u000a    return pcVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p38
S'PUSH RAX\nCALL 0x00409670\nTEST RAX,RAX\nJZ 0x0040965d\nPOP RCX\nRET\nCALL 0x0040eb40\n'
p39
S'50\ne8 1a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 de 54 00 00\n'
p40
S'.text:0000000000409650\n.text:0000000000409651\n.text:0000000000409656\n.text:0000000000409659\n.text:000000000040965b\n.text:000000000040965c\n.text:000000000040965d\n'
p41
tp42
sS'mkancesdirs'
p43
(S'\n__stdcall mkancesdirs(char * file, savewd * wd, anon_subr_int_char_ptr_char_ptr_void_ptr * make_dir, void * make_dir_arg)\n'
p44
V\u000aptrdiff_t mkancesdirs(char *file,savewd *wd,int (*make_dir)(char *,char *,void *),void *make_dir_arg\u000a                     )\u000a\u000a{\u000a  char cVar1;\u000a  byte bVar2;\u000a  int iVar3;\u000a  int *piVar4;\u000a  char *pcVar5;\u000a  char *dir;\u000a  char *pcVar6;\u000a  byte bVar7;\u000a  int local_44;\u000a  \u000a  pcVar5 = (char *)0x0;\u000a  pcVar6 = file;\u000a  bVar7 = 0;\u000aLAB_0040a8c9:\u000a  dir = pcVar6;\u000a  cVar1 = *dir;\u000a  pcVar6 = dir;\u000a  while (cVar1 != 0) {\u000a    while( true ) {\u000a      pcVar6 = pcVar6 + 1;\u000a      if (*pcVar6 == '/') break;\u000a      if (((cVar1 == '/') && (pcVar5 != (char *)0x0)) && (*pcVar6 != 0)) {\u000a        if (pcVar5 + -(long)dir == (char *)0x1) {\u000a          if (*dir == '.') goto LAB_0040a8c9;\u000a          *pcVar5 = 0;\u000aLAB_0040a980:\u000a          iVar3 = (*make_dir)(file,dir,make_dir_arg);\u000a          if (iVar3 < 0) {\u000a            piVar4 = __errno_location();\u000a            local_44 = *piVar4;\u000a            bVar2 = bVar7;\u000a          }\u000a          else {\u000a            local_44 = 0;\u000a            bVar2 = 1;\u000a          }\u000a        }\u000a        else {\u000a          *pcVar5 = 0;\u000a          if ((pcVar5 + -(long)dir != (char *)0x2) || (*dir != '.')) goto LAB_0040a980;\u000a          local_44 = 0;\u000a          bVar2 = 0;\u000a          if (dir[1] != '.') goto LAB_0040a980;\u000a        }\u000a        iVar3 = savewd_chdir(wd,dir,(int *)(ulong)bVar2);\u000a        if ((iVar3 == -1) || (*pcVar5 = '/', bVar7 = bVar2, iVar3 != 0)) {\u000a          if ((local_44 != 0) && (piVar4 = __errno_location(), *piVar4 == 2)) {\u000a            *piVar4 = local_44;\u000a          }\u000a          return (long)iVar3;\u000a        }\u000a        goto LAB_0040a8c9;\u000a      }\u000a      cVar1 = *pcVar6;\u000a      if (cVar1 == 0) goto LAB_0040aa04;\u000a    }\u000a    if (cVar1 != '/') {\u000a      pcVar5 = pcVar6;\u000a    }\u000a    cVar1 = *pcVar6;\u000a  }\u000aLAB_0040aa04:\u000a  return (ptrdiff_t)(dir + -(long)file);\u000a}\u000a\u000a
p45
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R13,RDI\nXOR EBP,EBP\nMOV R14,R13\nXOR R15D,R15D\nMOV R12,R14\nMOV AL,byte ptr [R12]\nTEST AL,AL\nJZ 0x0040aa04\nMOV R14,R12\nINC R14\nNOP\nMOVZX EBX,byte ptr [R14]\nCMP BL,0x2f\nJZ 0x0040a910\nCMP AL,0x2f\nJNZ 0x0040a8f6\nTEST RBP,RBP\nJZ 0x0040a8f6\nTEST BL,BL\nJNZ 0x0040a930\nMOVZX EAX,byte ptr [R14]\nINC R14\nTEST AL,AL\nJNZ 0x0040a8e0\nJMP 0x0040aa04\nCMP AL,0x2f\nCMOVNZ RBP,R14\nMOV AL,byte ptr [R14]\nTEST AL,AL\nJNZ 0x0040a8db\nJMP 0x0040aa04\nMOV RAX,RBP\nSUB RAX,R12\nCMP RAX,0x1\nJNZ 0x0040a953\nCMP byte ptr [R12],0x2e\nJZ 0x0040a8c9\nMOV qword ptr [RSP + 0x8],RDX\nMOV qword ptr [RSP + 0x10],RCX\nMOV byte ptr [RBP],0x0\nJMP 0x0040a980\nMOV qword ptr [RSP + 0x8],RDX\nMOV qword ptr [RSP + 0x10],RCX\nMOV byte ptr [RBP],0x0\nCMP RAX,0x2\nJNZ 0x0040a980\nCMP byte ptr [R12],0x2e\nJNZ 0x0040a980\nXOR EAX,EAX\nCMP byte ptr [R12 + 0x1],0x2e\nMOV dword ptr [RSP + 0x4],0x0\nJZ 0x0040a9b3\nMOV RBX,RSI\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,qword ptr [RSP + 0x10]\nCALL qword ptr [RSP + 0x8]\nTEST EAX,EAX\nJS 0x0040a9a2\nMOV dword ptr [RSP + 0x4],0x0\nMOV AL,0x1\nJMP 0x0040a9b0\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV AL,R15B\nMOV RSI,RBX\nMOV R15D,EAX\nAND AL,0x1\nMOVZX EDX,AL\nXOR ECX,ECX\nMOV RDI,RSI\nMOV RBX,RSI\nMOV RSI,R12\nCALL 0x0040d040\nMOV RSI,RBX\nMOV EBX,EAX\nCMP EBX,-0x1\nMOV RCX,qword ptr [RSP + 0x10]\nMOV RDX,qword ptr [RSP + 0x8]\nJZ 0x0040a9eb\nMOV byte ptr [RBP],0x2f\nTEST EBX,EBX\nJZ 0x0040a8c9\nMOV EBP,dword ptr [RSP + 0x4]\nTEST EBP,EBP\nJZ 0x0040a9ff\nCALL 0x004022e0\nCMP dword ptr [RAX],0x2\nJNZ 0x0040a9ff\nMOV dword ptr [RAX],EBP\nMOVSXD R12,EBX\nJMP 0x0040aa07\nSUB R12,R13\nMOV RAX,R12\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p46
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 fd\n31 ed\n4d 89 ee\n45 31 ff\n4d 89 f4\n41 8a 04 24\n84 c0\n0f 84 2c 01 00 00\n4d 89 e6\n49 ff c6\n66 90\n41 0f b6 1e\n80 fb 2f\n74 27\n3c 2f\n75 09\n48 85 ed\n74 04\n84 db\n75 3a\n41 0f b6 06\n49 ff c6\n84 c0\n75 df\ne9 fe 00 00 00\n3c 2f\n49 0f 45 ee\n41 8a 06\n84 c0\n75 be\ne9 e2 00 00 00\n48 89 e8\n4c 29 e0\n48 83 f8 01\n75 17\n41 80 3c 24 2e\n74 86\n48 89 54 24 08\n48 89 4c 24 10\nc6 45 00 00\neb 2d\n48 89 54 24 08\n48 89 4c 24 10\nc6 45 00 00\n48 83 f8 02\n75 19\n41 80 3c 24 2e\n75 12\n31 c0\n41 80 7c 24 01 2e\nc7 44 24 04 00 00 00 00\n74 33\n48 89 f3\n4c 89 ef\n4c 89 e6\n48 8b 54 24 10\nff 54 24 08\n85 c0\n78 0c\nc7 44 24 04 00 00 00 00\nb0 01\neb 0e\ne8 39 79 ff ff\n8b 00\n89 44 24 04\n44 88 f8\n48 89 de\n41 89 c7\n24 01\n0f b6 d0\n31 c9\n48 89 f7\n48 89 f3\n4c 89 e6\ne8 75 26 00 00\n48 89 de\n89 c3\n83 fb ff\n48 8b 4c 24 10\n48 8b 54 24 08\n74 0c\nc6 45 00 2f\n85 db\n0f 84 de fe ff ff\n8b 6c 24 04\n85 ed\n74 0c\ne8 e8 78 ff ff\n83 38 02\n75 02\n89 28\n4c 63 e3\neb 03\n4d 29 ec\n4c 89 e0\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p47
S'.text:000000000040a8b0\n.text:000000000040a8b1\n.text:000000000040a8b3\n.text:000000000040a8b5\n.text:000000000040a8b7\n.text:000000000040a8b9\n.text:000000000040a8ba\n.text:000000000040a8be\n.text:000000000040a8c1\n.text:000000000040a8c3\n.text:000000000040a8c6\n.text:000000000040a8c9\n.text:000000000040a8cc\n.text:000000000040a8d0\n.text:000000000040a8d2\n.text:000000000040a8d8\n.text:000000000040a8db\n.text:000000000040a8de\n.text:000000000040a8e0\n.text:000000000040a8e4\n.text:000000000040a8e7\n.text:000000000040a8e9\n.text:000000000040a8eb\n.text:000000000040a8ed\n.text:000000000040a8f0\n.text:000000000040a8f2\n.text:000000000040a8f4\n.text:000000000040a8f6\n.text:000000000040a8fa\n.text:000000000040a8fd\n.text:000000000040a8ff\n.text:000000000040a901\n.text:000000000040a910\n.text:000000000040a912\n.text:000000000040a916\n.text:000000000040a919\n.text:000000000040a91b\n.text:000000000040a91d\n.text:000000000040a930\n.text:000000000040a933\n.text:000000000040a936\n.text:000000000040a93a\n.text:000000000040a93c\n.text:000000000040a941\n.text:000000000040a943\n.text:000000000040a948\n.text:000000000040a94d\n.text:000000000040a951\n.text:000000000040a953\n.text:000000000040a958\n.text:000000000040a95d\n.text:000000000040a961\n.text:000000000040a965\n.text:000000000040a967\n.text:000000000040a96c\n.text:000000000040a96e\n.text:000000000040a970\n.text:000000000040a976\n.text:000000000040a97e\n.text:000000000040a980\n.text:000000000040a983\n.text:000000000040a986\n.text:000000000040a989\n.text:000000000040a98e\n.text:000000000040a992\n.text:000000000040a994\n.text:000000000040a996\n.text:000000000040a99e\n.text:000000000040a9a0\n.text:000000000040a9a2\n.text:000000000040a9a7\n.text:000000000040a9a9\n.text:000000000040a9ad\n.text:000000000040a9b0\n.text:000000000040a9b3\n.text:000000000040a9b6\n.text:000000000040a9b8\n.text:000000000040a9bb\n.text:000000000040a9bd\n.text:000000000040a9c0\n.text:000000000040a9c3\n.text:000000000040a9c6\n.text:000000000040a9cb\n.text:000000000040a9ce\n.text:000000000040a9d0\n.text:000000000040a9d3\n.text:000000000040a9d8\n.text:000000000040a9dd\n.text:000000000040a9df\n.text:000000000040a9e3\n.text:000000000040a9e5\n.text:000000000040a9eb\n.text:000000000040a9ef\n.text:000000000040a9f1\n.text:000000000040a9f3\n.text:000000000040a9f8\n.text:000000000040a9fb\n.text:000000000040a9fd\n.text:000000000040a9ff\n.text:000000000040aa02\n.text:000000000040aa04\n.text:000000000040aa07\n.text:000000000040aa0a\n.text:000000000040aa0e\n.text:000000000040aa0f\n.text:000000000040aa11\n.text:000000000040aa13\n.text:000000000040aa15\n.text:000000000040aa17\n.text:000000000040aa18\n'
p48
tp49
sS'strncmp'
p50
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p51
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00618068)();\u000a  return iVar1;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00618068]\n'
p53
S'ff 25 62 5d 21 00\n'
p54
S'.plt:0000000000402300\n'
p55
tp56
sS'direntry_cmp_name'
p57
(S'\n__stdcall direntry_cmp_name(void * a, void * b)\n'
p58
V\u000aint direntry_cmp_name(void *a,void *b)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = strcmp(*(char **)a,*(char **)b);\u000a  return iVar1;\u000a}\u000a\u000a
p59
S'MOV RDI,qword ptr [RDI]\nMOV RSI,qword ptr [RSI]\nJMP 0x00402650\n'
p60
S'48 8b 3f\n48 8b 36\ne9 55 56 ff ff\n'
p61
S'.text:000000000040cff0\n.text:000000000040cff3\n.text:000000000040cff6\n'
p62
tp63
sS'quote'
p64
(S'\n__stdcall quote(char * arg)\n'
p65
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p66
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x0040c6d0\n'
p67
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p68
S'.text:000000000040c6e0\n.text:000000000040c6e3\n.text:000000000040c6e5\n.text:000000000040c6e8\n'
p69
tp70
sS'clone_quoting_options'
p71
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p72
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p73
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x004022e0\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x61a960\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x0040eaf0\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p74
S'55\n41 56\n53\n48 89 fb\ne8 34 70 ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 60 a9 61 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 25 38 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p75
S'.text:000000000040b2a0\n.text:000000000040b2a1\n.text:000000000040b2a3\n.text:000000000040b2a4\n.text:000000000040b2a7\n.text:000000000040b2ac\n.text:000000000040b2af\n.text:000000000040b2b2\n.text:000000000040b2b5\n.text:000000000040b2ba\n.text:000000000040b2be\n.text:000000000040b2c3\n.text:000000000040b2c6\n.text:000000000040b2cb\n.text:000000000040b2ce\n.text:000000000040b2cf\n.text:000000000040b2d1\n.text:000000000040b2d2\n'
p76
tp77
sS'clock_gettime'
p78
(S'\n__stdcall clock_gettime(clockid_t __clock_id, timespec * __tp)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint clock_gettime(clockid_t __clock_id,timespec *__tp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_clock_gettime_006180b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x006180b0]\n'
p81
S'ff 25 1a 5d 21 00\n'
p82
S'.plt:0000000000402390\n'
p83
tp84
sS'same_name'
p85
(S'\n__stdcall same_name(char * source, char * dest)\n'
p86
V\u000a_Bool same_name(char *source,char *dest)\u000a\u000a{\u000a  int iVar1;\u000a  char *name;\u000a  char *name_00;\u000a  size_t sVar2;\u000a  size_t __n;\u000a  uint *puVar3;\u000a  bool bVar4;\u000a  stat source_dir_stats;\u000a  stat local_148;\u000a  stat local_b8;\u000a  \u000a  name = last_component(source);\u000a  name_00 = last_component(dest);\u000a  sVar2 = base_len(name);\u000a  __n = base_len(name_00);\u000a  if ((sVar2 == __n) && (iVar1 = memcmp(name,name_00,__n), iVar1 == 0)) {\u000a    name = dir_name(source);\u000a    name_00 = dir_name(dest);\u000a    iVar1 = stat(name,&local_b8);\u000a    if (iVar1 != 0) {\u000a      puVar3 = (uint *)__errno_location();\u000a      error(1,(ulong)*puVar3,0x412558,name);\u000a    }\u000a    iVar1 = stat(name_00,&local_148);\u000a    if (iVar1 != 0) {\u000a      puVar3 = (uint *)__errno_location();\u000a      error(1,(ulong)*puVar3,0x412558,name_00);\u000a    }\u000a    bVar4 = local_b8.st_ino == local_148.st_ino && local_b8.st_dev == local_148.st_dev;\u000a    free(name);\u000a    free(name_00);\u000a  }\u000a  else {\u000a    bVar4 = false;\u000a  }\u000a  return (_Bool)bVar4;\u000a}\u000a\u000a
p87
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x120\nMOV R15,RSI\nMOV R14,RDI\nCALL 0x004092f0\nMOV R12,RAX\nMOV RDI,R15\nCALL 0x004092f0\nMOV RBX,RAX\nMOV RDI,R12\nCALL 0x00409350\nMOV RBP,RAX\nMOV RDI,RBX\nCALL 0x00409350\nCMP RBP,RAX\nJNZ 0x0040cc62\nMOV RDI,R12\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x004025f0\nTEST EAX,EAX\nJZ 0x0040cc76\nXOR EBP,EBP\nMOV EAX,EBP\nADD RSP,0x120\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,R14\nCALL 0x00409230\nMOV R14,RAX\nMOV RDI,R15\nCALL 0x00409230\nMOV RBX,RAX\nLEA RSI,[0x90 + RSP]\nMOV RDI,R14\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x0040ccbb\nCALL 0x004022e0\nMOV ESI,dword ptr [RAX]\nMOV EDI,0x1\nMOV EDX,0x412558\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00402870\nMOV RSI,RSP\nMOV RDI,RBX\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x0040cce5\nCALL 0x004022e0\nMOV ESI,dword ptr [RAX]\nMOV EDI,0x1\nMOV EDX,0x412558\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x00402870\nMOV RAX,qword ptr [0x98 + RSP]\nCMP RAX,qword ptr [RSP + 0x8]\nJNZ 0x0040cd06\nMOV RAX,qword ptr [0x90 + RSP]\nCMP RAX,qword ptr [RSP]\nSETZ BPL\nJMP 0x0040cd08\nXOR EBP,EBP\nMOV RDI,R14\nCALL 0x00402290\nMOV RDI,RBX\nCALL 0x00402290\nJMP 0x0040cc64\n'
p88
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec 20 01 00 00\n49 89 f7\n49 89 fe\ne8 c6 c6 ff ff\n49 89 c4\n4c 89 ff\ne8 bb c6 ff ff\n48 89 c3\n4c 89 e7\ne8 10 c7 ff ff\n48 89 c5\n48 89 df\ne8 05 c7 ff ff\n48 39 c5\n75 12\n4c 89 e7\n48 89 de\n48 89 c2\ne8 92 59 ff ff\n85 c0\n74 14\n31 ed\n89 e8\n48 81 c4 20 01 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n4c 89 f7\ne8 b2 c5 ff ff\n49 89 c6\n4c 89 ff\ne8 a7 c5 ff ff\n48 89 c3\n48 8d b4 24 90 00 00 00\n4c 89 f7\ne8 f4 3a 00 00\n85 c0\n74 1b\ne8 3b 56 ff ff\n8b 30\nbf 01 00 00 00\nba 58 25 41 00\n31 c0\n4c 89 f1\ne8 b5 5b ff ff\n48 89 e6\n48 89 df\ne8 ca 3a 00 00\n85 c0\n74 1b\ne8 11 56 ff ff\n8b 30\nbf 01 00 00 00\nba 58 25 41 00\n31 c0\n48 89 d9\ne8 8b 5b ff ff\n48 8b 84 24 98 00 00 00\n48 3b 44 24 08\n75 12\n48 8b 84 24 90 00 00 00\n48 3b 04 24\n40 0f 94 c5\neb 02\n31 ed\n4c 89 f7\ne8 80 55 ff ff\n48 89 df\ne8 78 55 ff ff\ne9 47 ff ff ff\n'
p89
S'.text:000000000040cc10\n.text:000000000040cc11\n.text:000000000040cc13\n.text:000000000040cc15\n.text:000000000040cc17\n.text:000000000040cc18\n.text:000000000040cc1f\n.text:000000000040cc22\n.text:000000000040cc25\n.text:000000000040cc2a\n.text:000000000040cc2d\n.text:000000000040cc30\n.text:000000000040cc35\n.text:000000000040cc38\n.text:000000000040cc3b\n.text:000000000040cc40\n.text:000000000040cc43\n.text:000000000040cc46\n.text:000000000040cc4b\n.text:000000000040cc4e\n.text:000000000040cc50\n.text:000000000040cc53\n.text:000000000040cc56\n.text:000000000040cc59\n.text:000000000040cc5e\n.text:000000000040cc60\n.text:000000000040cc62\n.text:000000000040cc64\n.text:000000000040cc66\n.text:000000000040cc6d\n.text:000000000040cc6e\n.text:000000000040cc70\n.text:000000000040cc72\n.text:000000000040cc74\n.text:000000000040cc75\n.text:000000000040cc76\n.text:000000000040cc79\n.text:000000000040cc7e\n.text:000000000040cc81\n.text:000000000040cc84\n.text:000000000040cc89\n.text:000000000040cc8c\n.text:000000000040cc94\n.text:000000000040cc97\n.text:000000000040cc9c\n.text:000000000040cc9e\n.text:000000000040cca0\n.text:000000000040cca5\n.text:000000000040cca7\n.text:000000000040ccac\n.text:000000000040ccb1\n.text:000000000040ccb3\n.text:000000000040ccb6\n.text:000000000040ccbb\n.text:000000000040ccbe\n.text:000000000040ccc1\n.text:000000000040ccc6\n.text:000000000040ccc8\n.text:000000000040ccca\n.text:000000000040cccf\n.text:000000000040ccd1\n.text:000000000040ccd6\n.text:000000000040ccdb\n.text:000000000040ccdd\n.text:000000000040cce0\n.text:000000000040cce5\n.text:000000000040cced\n.text:000000000040ccf2\n.text:000000000040ccf4\n.text:000000000040ccfc\n.text:000000000040cd00\n.text:000000000040cd04\n.text:000000000040cd06\n.text:000000000040cd08\n.text:000000000040cd0b\n.text:000000000040cd10\n.text:000000000040cd13\n.text:000000000040cd18\n'
p90
tp91
sS'frame_dummy'
p92
(S'\n__stdcall frame_dummy()\n'
p93
V\u000a/* WARNING: Removing unreachable block (ram,0x00402aea) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p94
S'MOV EDI,0x617e18\nCMP qword ptr [RDI],0x0\nJNZ 0x00402ae0\nJMP 0x00402a70\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402adb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00402a70\n'
p95
S'bf 18 7e 61 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p96
S'.text:0000000000402ad0\n.text:0000000000402ad5\n.text:0000000000402ad9\n.text:0000000000402adb\n.text:0000000000402ae0\n.text:0000000000402ae5\n.text:0000000000402ae8\n.text:0000000000402aea\n.text:0000000000402aeb\n.text:0000000000402aee\n.text:0000000000402af0\n.text:0000000000402af1\n'
p97
tp98
sS'mkdir'
p99
(S'\n__stdcall mkdir(char * __path, __mode_t __mode)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mkdir(char *__path,__mode_t __mode)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mkdir_00618088)();\u000a  return iVar1;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00618088]\n'
p102
S'ff 25 42 5d 21 00\n'
p103
S'.plt:0000000000402340\n'
p104
tp105
sS'is_ENOTSUP'
p106
(S'\n__stdcall is_ENOTSUP()\n'
p107
V\u000a_Bool is_ENOTSUP(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 0x5f);\u000a}\u000a\u000a
p108
S'CMP EDI,0x5f\nSETZ AL\nRET\n'
p109
S'83 ff 5f\n0f 94 c0\nc3\n'
p110
S'.text:0000000000408470\n.text:0000000000408473\n.text:0000000000408476\n'
p111
tp112
sS'qcopy_acl'
p113
(S'\n__stdcall qcopy_acl(char * src_name, char * dst_name)\n'
p114
V\u000aint qcopy_acl(char *src_name,char *dst_name)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  char *name;\u000a  permission_context apStack24 [2];\u000a  \u000a  iVar1 = get_permissions(src_name,(permission_context *)dst_name);\u000a  iVar2 = -2;\u000a  if (iVar1 == 0) {\u000a    iVar2 = set_permissions(apStack24,name);\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p115
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ECX\nMOV RBX,RDX\nMOV RCX,RSP\nMOV EDX,R8D\nCALL 0x0040f550\nMOV ECX,EAX\nMOV EAX,0xfffffffe\nTEST ECX,ECX\nJNZ 0x0040b26b\nMOV RDI,RSP\nMOV RSI,RBX\nMOV EDX,EBP\nCALL 0x0040f580\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p116
S'55\n53\n50\n89 cd\n48 89 d3\n48 89 e1\n44 89 c2\ne8 fd 42 00 00\n89 c1\nb8 fe ff ff ff\n85 c9\n75 0d\n48 89 e7\n48 89 de\n89 ea\ne8 15 43 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p117
S'.text:000000000040b240\n.text:000000000040b241\n.text:000000000040b242\n.text:000000000040b243\n.text:000000000040b245\n.text:000000000040b248\n.text:000000000040b24b\n.text:000000000040b24e\n.text:000000000040b253\n.text:000000000040b255\n.text:000000000040b25a\n.text:000000000040b25c\n.text:000000000040b25e\n.text:000000000040b261\n.text:000000000040b264\n.text:000000000040b266\n.text:000000000040b26b\n.text:000000000040b26f\n.text:000000000040b270\n.text:000000000040b271\n'
p118
tp119
sS'rpl_utimensat'
p120
(S'\n__stdcall rpl_utimensat(char * file, timespec * times)\n'
p121
V\u000aint rpl_utimensat(char *file,timespec *times)\u000a\u000a{\u000a  long lVar1;\u000a  int utimensat_works_really;\u000a  int iVar2;\u000a  int __fd;\u000a  int *piVar3;\u000a  uint __flag;\u000a  timespec *__times;\u000a  timespec ts [2];\u000a  timespec local_d8;\u000a  timespec local_c8;\u000a  stat local_b8;\u000a  \u000a  if (-1 < utimensat_works_really) {\u000a    __fd = (int)(char *)((ulong)file & 0xffffffff);\u000a    if (__times == (timespec *)0x0) {\u000a      __times = (timespec *)0x0;\u000a    }\u000a    else {\u000a      if ((__times->tv_nsec == 0x3ffffffe) ||\u000a         (local_d8 = (timespec)CONCAT88(local_d8.tv_nsec,local_d8.tv_sec),\u000a         local_c8 = (timespec)CONCAT88(local_c8.tv_nsec,local_c8.tv_sec),\u000a         __times[1].tv_nsec == 0x3ffffffe)) {\u000a        iVar2 = fstatat(__fd,(char *)times,(stat *)&local_b8,__flag);\u000a        if (iVar2 != 0) {\u000a          return -1;\u000a        }\u000a        if (__times->tv_nsec == 0x3ffffffe) {\u000a          if (__times[1].tv_nsec == 0x3ffffffe) {\u000a            return 0;\u000a          }\u000a          local_d8 = (timespec)get_stat_atime(&local_b8);\u000a          lVar1 = __times[1].tv_nsec;\u000a        }\u000a        else {\u000a          local_d8 = *__times;\u000a          lVar1 = __times[1].tv_nsec;\u000a        }\u000a        if (lVar1 == 0x3ffffffe) {\u000a          local_c8 = (timespec)get_stat_mtime(&local_b8);\u000a          __times = &local_d8;\u000a        }\u000a        else {\u000a          local_c8 = __times[1];\u000a          __times = &local_d8;\u000a        }\u000a      }\u000a    }\u000a    __fd = utimensat(__fd,(char *)times,__times,__flag);\u000a    if (__fd == 0) {\u000a      return 0;\u000a    }\u000a    if (__fd == -1) {\u000a      piVar3 = __errno_location();\u000a      if (((__flag & 0xfffffeff) != 0) && (*piVar3 == 0x16)) {\u000a        return -1;\u000a      }\u000a    }\u000a    piVar3 = __errno_location();\u000a    if ((*piVar3 != 0x16) && (*piVar3 != 0x26)) {\u000a      return __fd;\u000a    }\u000a    if (-1 < utimensat_works_really) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x26) {\u000a        utimensat_works_really = -1;\u000a      }\u000a    }\u000a  }\u000a  __fd = local_utimensat((char *)((ulong)file & 0xffffffff),times);\u000a  return __fd;\u000a}\u000a\u000a
p122
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0xb0\nMOV R12D,ECX\nMOV RBP,RDX\nMOV R14,RSI\nMOV R15D,EDI\nCMP dword ptr [0x0061aac0],0x0\nJS 0x0040f32d\nTEST RBP,RBP\nJZ 0x0040f290\nCMP qword ptr [RBP + 0x8],0x3ffffffe\nJZ 0x0040f235\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJNZ 0x0040f2c8\nLEA RDX,[RSP + 0x20]\nMOV EDI,R15D\nMOV RSI,R14\nMOV ECX,R12D\nCALL 0x004107c0\nMOV ECX,EAX\nMOV EAX,0xffffffff\nTEST ECX,ECX\nJNZ 0x0040f34c\nCMP qword ptr [RBP + 0x8],0x3ffffffe\nJNZ 0x0040f294\nXOR EAX,EAX\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJZ 0x0040f34c\nLEA RDI,[RSP + 0x20]\nCALL 0x0040d730\nMOV qword ptr [RSP],RAX\nMOV qword ptr [RSP + 0x8],RDX\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJZ 0x0040f2a6\nJMP 0x0040f2bc\nXOR EBP,EBP\nJMP 0x0040f2c8\nMOVUPS XMM0,xmmword ptr [RBP]\nMOVAPS xmmword ptr [RSP],XMM0\nCMP qword ptr [RBP + 0x18],0x3ffffffe\nJNZ 0x0040f2bc\nLEA RDI,[RSP + 0x20]\nCALL 0x0040d750\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],RDX\nJMP 0x0040f2c5\nMOVUPS XMM0,xmmword ptr [RBP + 0x10]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOV RBP,RSP\nMOV EDI,R15D\nMOV RSI,R14\nMOV RDX,RBP\nMOV ECX,R12D\nCALL 0x004022a0\nMOV EBX,EAX\nTEST EBX,EBX\nJZ 0x0040f340\nCMP EBX,-0x1\nJNZ 0x0040f2ff\nCALL 0x004022e0\nMOV RCX,RAX\nTEST R12D,0xfffffeff\nJZ 0x0040f2ff\nMOV EAX,0xffffffff\nCMP dword ptr [RCX],0x16\nJZ 0x0040f34c\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x16\nJZ 0x0040f310\nCMP EAX,0x26\nJNZ 0x0040f340\nCMP dword ptr [0x0061aac0],0x0\nJS 0x0040f32d\nCALL 0x004022e0\nCMP dword ptr [RAX],0x26\nJNZ 0x0040f32d\nMOV dword ptr [0x0061aac0],0xffffffff\nMOV EDI,R15D\nMOV RSI,R14\nMOV RDX,RBP\nMOV ECX,R12D\nCALL 0x0040f360\nJMP 0x0040f34c\nMOV dword ptr [0x0061aac0],0x1\nMOV EAX,EBX\nADD RSP,0xb0\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p123
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec b0 00 00 00\n41 89 cc\n48 89 d5\n49 89 f6\n41 89 ff\n83 3d ae b8 20 00 00\n0f 88 15 01 00 00\n48 85 ed\n74 73\n48 81 7d 08 fe ff ff 3f\n74 0e\n48 81 7d 18 fe ff ff 3f\n0f 85 93 00 00 00\n48 8d 54 24 20\n44 89 ff\n4c 89 f6\n44 89 e1\ne8 78 15 00 00\n89 c1\nb8 ff ff ff ff\n85 c9\n0f 85 f5 00 00 00\n48 81 7d 08 fe ff ff 3f\n75 33\n31 c0\n48 81 7d 18 fe ff ff 3f\n0f 84 db 00 00 00\n48 8d 7c 24 20\ne8 b5 e4 ff ff\n48 89 04 24\n48 89 54 24 08\n48 81 7d 18 fe ff ff 3f\n74 18\neb 2c\n31 ed\neb 34\n0f 10 45 00\n0f 29 04 24\n48 81 7d 18 fe ff ff 3f\n75 16\n48 8d 7c 24 20\ne8 a0 e4 ff ff\n48 89 44 24 10\n48 89 54 24 18\neb 09\n0f 10 45 10\n0f 29 44 24 10\n48 89 e5\n44 89 ff\n4c 89 f6\n48 89 ea\n44 89 e1\ne8 c7 2f ff ff\n89 c3\n85 db\n74 61\n83 fb ff\n75 1b\ne8 f7 2f ff ff\n48 89 c1\n41 f7 c4 ff fe ff ff\n74 0a\nb8 ff ff ff ff\n83 39 16\n74 4d\ne8 dc 2f ff ff\n8b 00\n83 f8 16\n74 05\n83 f8 26\n75 30\n83 3d a9 b7 20 00 00\n78 14\ne8 c2 2f ff ff\n83 38 26\n75 0a\nc7 05 93 b7 20 00 ff ff ff ff\n44 89 ff\n4c 89 f6\n48 89 ea\n44 89 e1\ne8 22 00 00 00\neb 0c\nc7 05 76 b7 20 00 01 00 00 00\n89 d8\n48 81 c4 b0 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p124
S'.text:000000000040f1f0\n.text:000000000040f1f1\n.text:000000000040f1f3\n.text:000000000040f1f5\n.text:000000000040f1f7\n.text:000000000040f1f8\n.text:000000000040f1ff\n.text:000000000040f202\n.text:000000000040f205\n.text:000000000040f208\n.text:000000000040f20b\n.text:000000000040f212\n.text:000000000040f218\n.text:000000000040f21b\n.text:000000000040f21d\n.text:000000000040f225\n.text:000000000040f227\n.text:000000000040f22f\n.text:000000000040f235\n.text:000000000040f23a\n.text:000000000040f23d\n.text:000000000040f240\n.text:000000000040f243\n.text:000000000040f248\n.text:000000000040f24a\n.text:000000000040f24f\n.text:000000000040f251\n.text:000000000040f257\n.text:000000000040f25f\n.text:000000000040f261\n.text:000000000040f263\n.text:000000000040f26b\n.text:000000000040f271\n.text:000000000040f276\n.text:000000000040f27b\n.text:000000000040f27f\n.text:000000000040f284\n.text:000000000040f28c\n.text:000000000040f28e\n.text:000000000040f290\n.text:000000000040f292\n.text:000000000040f294\n.text:000000000040f298\n.text:000000000040f29c\n.text:000000000040f2a4\n.text:000000000040f2a6\n.text:000000000040f2ab\n.text:000000000040f2b0\n.text:000000000040f2b5\n.text:000000000040f2ba\n.text:000000000040f2bc\n.text:000000000040f2c0\n.text:000000000040f2c5\n.text:000000000040f2c8\n.text:000000000040f2cb\n.text:000000000040f2ce\n.text:000000000040f2d1\n.text:000000000040f2d4\n.text:000000000040f2d9\n.text:000000000040f2db\n.text:000000000040f2dd\n.text:000000000040f2df\n.text:000000000040f2e2\n.text:000000000040f2e4\n.text:000000000040f2e9\n.text:000000000040f2ec\n.text:000000000040f2f3\n.text:000000000040f2f5\n.text:000000000040f2fa\n.text:000000000040f2fd\n.text:000000000040f2ff\n.text:000000000040f304\n.text:000000000040f306\n.text:000000000040f309\n.text:000000000040f30b\n.text:000000000040f30e\n.text:000000000040f310\n.text:000000000040f317\n.text:000000000040f319\n.text:000000000040f31e\n.text:000000000040f321\n.text:000000000040f323\n.text:000000000040f32d\n.text:000000000040f330\n.text:000000000040f333\n.text:000000000040f336\n.text:000000000040f339\n.text:000000000040f33e\n.text:000000000040f340\n.text:000000000040f34a\n.text:000000000040f34c\n.text:000000000040f353\n.text:000000000040f354\n.text:000000000040f356\n.text:000000000040f358\n.text:000000000040f35a\n.text:000000000040f35b\n'
p125
tp126
sS'filemodestring'
p127
(S'\n__stdcall filemodestring(stat * statp, char * str)\n'
p128
V\u000avoid filemodestring(stat *statp,char *str)\u000a\u000a{\u000a  strmode((char *)(ulong)statp->st_mode);\u000a  return;\u000a}\u000a\u000a
p129
S'MOV EDI,dword ptr [RDI + 0x18]\nJMP 0x00409540\n'
p130
S'8b 7f 18\ne9 f8 fe ff ff\n'
p131
S'.text:0000000000409640\n.text:0000000000409643\n'
p132
tp133
sS'get_stat_birthtime_ns'
p134
(S'\n__stdcall get_stat_birthtime_ns(stat * st)\n'
p135
V\u000along get_stat_birthtime_ns(stat *st)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p136
S'XOR EAX,EAX\nRET\n'
p137
S'31 c0\nc3\n'
p138
S'.text:000000000040d720\n.text:000000000040d722\n'
p139
tp140
sS'io_blksize'
p141
(S'\n__stdcall io_blksize(stat sb)\n'
p142
V\u000asize_t io_blksize(stat sb)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  if ((0x1ffff < sb.st_blksize) && (0 < sb.st_blksize && (ulong)sb.st_blksize < 0x2000000000000001))\u000a  {\u000a    sVar1 = 0x200;\u000a    if ((ulong)sb.st_blksize < 0x2000000000000001) {\u000a      sVar1 = sb.st_blksize;\u000a    }\u000a    return sVar1;\u000a  }\u000a  return 0x20000;\u000a}\u000a\u000a
p143
S'MOV RCX,qword ptr [RSP + 0x40]\nTEST RCX,RCX\nSETLE AL\nMOV RDX,0x2000000000000000\nCMP RCX,RDX\nSETA DL\nCMP RCX,0x20000\nJL 0x00407a6f\nOR AL,DL\nJNZ 0x00407a6f\nMOV RAX,0x2000000000000001\nCMP RCX,RAX\nMOV EAX,0x200\nCMOVC RAX,RCX\nRET\nMOV EAX,0x20000\nRET\n'
p144
S'48 8b 4c 24 40\n48 85 c9\n0f 9e c0\n48 ba 00 00 00 00 00 00 00 20\n48 39 d1\n0f 97 c2\n48 81 f9 00 00 02 00\n7c 1b\n08 d0\n75 17\n48 b8 01 00 00 00 00 00 00 20\n48 39 c1\nb8 00 02 00 00\n48 0f 42 c1\nc3\nb8 00 00 02 00\nc3\n'
p145
S'.text:0000000000407a30\n.text:0000000000407a35\n.text:0000000000407a38\n.text:0000000000407a3b\n.text:0000000000407a45\n.text:0000000000407a48\n.text:0000000000407a4b\n.text:0000000000407a52\n.text:0000000000407a54\n.text:0000000000407a56\n.text:0000000000407a58\n.text:0000000000407a62\n.text:0000000000407a65\n.text:0000000000407a6a\n.text:0000000000407a6e\n.text:0000000000407a6f\n.text:0000000000407a74\n'
p146
tp147
sS'yesno'
p148
(S'\n__stdcall yesno()\n'
p149
V\u000a_Bool yesno(void)\u000a\u000a{\u000a  int iVar1;\u000a  __ssize_t _Var2;\u000a  bool bVar3;\u000a  char *local_18;\u000a  size_t local_10;\u000a  \u000a  local_18 = (char *)0x0;\u000a  local_10 = 0;\u000a  _Var2 = getline(&local_18,&local_10,stdin);\u000a  if (_Var2 < 1) {\u000a    bVar3 = false;\u000a  }\u000a  else {\u000a    if (local_18[_Var2 + -1] == '\u005cn') {\u000a      local_18[_Var2 + -1] = 0;\u000a    }\u000a    iVar1 = rpmatch(local_18);\u000a    bVar3 = 0 < iVar1;\u000a  }\u000a  free(local_18);\u000a  return (_Bool)bVar3;\u000a}\u000a\u000a
p150
S'PUSH RBX\nSUB RSP,0x10\nMOV qword ptr [RSP],0x0\nMOV qword ptr [RSP + 0x8],0x0\nMOV RDX,qword ptr [0x006184b0]\nMOV RDI,RSP\nLEA RSI,[RSP + 0x8]\nCALL 0x00402940\nTEST RAX,RAX\nJLE 0x0040ee9f\nMOV RCX,qword ptr [RSP]\nCMP byte ptr [RCX + RAX*0x1 + -0x1],0xa\nJNZ 0x0040ee8f\nMOV byte ptr [RCX + RAX*0x1 + -0x1],0x0\nMOV RDI,qword ptr [RSP]\nCALL 0x004026a0\nTEST EAX,EAX\nSETG BL\nJMP 0x0040eea1\nXOR EBX,EBX\nMOV RDI,qword ptr [RSP]\nCALL 0x00402290\nMOV EAX,EBX\nADD RSP,0x10\nPOP RBX\nRET\n'
p151
S'53\n48 83 ec 10\n48 c7 04 24 00 00 00 00\n48 c7 44 24 08 00 00 00 00\n48 8b 15 43 96 20 00\n48 89 e7\n48 8d 74 24 08\ne8 c6 3a ff ff\n48 85 c0\n7e 20\n48 8b 0c 24\n80 7c 01 ff 0a\n75 05\nc6 44 01 ff 00\n48 8b 3c 24\ne8 08 38 ff ff\n85 c0\n0f 9f c3\neb 02\n31 db\n48 8b 3c 24\ne8 e6 33 ff ff\n89 d8\n48 83 c4 10\n5b\nc3\n'
p152
S'.text:000000000040ee50\n.text:000000000040ee51\n.text:000000000040ee55\n.text:000000000040ee5d\n.text:000000000040ee66\n.text:000000000040ee6d\n.text:000000000040ee70\n.text:000000000040ee75\n.text:000000000040ee7a\n.text:000000000040ee7d\n.text:000000000040ee7f\n.text:000000000040ee83\n.text:000000000040ee88\n.text:000000000040ee8a\n.text:000000000040ee8f\n.text:000000000040ee93\n.text:000000000040ee98\n.text:000000000040ee9a\n.text:000000000040ee9d\n.text:000000000040ee9f\n.text:000000000040eea1\n.text:000000000040eea5\n.text:000000000040eeaa\n.text:000000000040eeac\n.text:000000000040eeb0\n.text:000000000040eeb1\n'
p153
tp154
sS'fadvise'
p155
(S'\n__stdcall fadvise(FILE * fp)\n'
p156
V\u000avoid fadvise(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int __advise;\u000a  \u000a  if (fp != (FILE *)0x0) {\u000a    __fd = fileno((FILE *)fp);\u000a    fdadvise(__fd,0,0,__advise);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p157
S'PUSH RBX\nMOV EBX,ESI\nTEST RDI,RDI\nJZ 0x004093a8\nCALL 0x00402710\nXOR ESI,ESI\nXOR EDX,EDX\nMOV EDI,EAX\nMOV ECX,EBX\nPOP RBX\nJMP 0x00409380\nPOP RBX\nRET\n'
p158
S'53\n89 f3\n48 85 ff\n74 10\ne8 73 93 ff ff\n31 f6\n31 d2\n89 c7\n89 d9\n5b\neb d8\n5b\nc3\n'
p159
S'.text:0000000000409390\n.text:0000000000409391\n.text:0000000000409393\n.text:0000000000409396\n.text:0000000000409398\n.text:000000000040939d\n.text:000000000040939f\n.text:00000000004093a1\n.text:00000000004093a3\n.text:00000000004093a5\n.text:00000000004093a6\n.text:00000000004093a8\n.text:00000000004093a9\n'
p160
tp161
sS'fileno'
p162
(S'\n__stdcall fileno(FILE * __stream)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_00618270)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00618270]\n'
p165
S'ff 25 5a 5b 21 00\n'
p166
S'.plt:0000000000402710\n'
p167
tp168
sS'rotr16'
p169
(S'\n__stdcall rotr16()\n'
p170
V\u000auint16_t rotr16(void)\u000a\u000a{\u000a  undefined4 in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (uint16_t)\u000a         ((ushort)(in_EDI << (0x10 - (byte)in_ESI & 0x1f)) |\u000a         (ushort)(in_EDI >> ((byte)in_ESI & 0x1f)));\u000a}\u000a\u000a
p171
S'MOV EAX,EDI\nMOV ECX,ESI\nSHR EAX,CL\nMOV ECX,0x10\nSUB ECX,ESI\nSHL EDI,CL\nOR EDI,EAX\nMOV EAX,EDI\nRET\n'
p172
S'89 f8\n89 f1\nd3 e8\nb9 10 00 00 00\n29 f1\nd3 e7\n09 c7\n89 f8\nc3\n'
p173
S'.text:000000000040f970\n.text:000000000040f972\n.text:000000000040f974\n.text:000000000040f976\n.text:000000000040f97b\n.text:000000000040f97d\n.text:000000000040f97f\n.text:000000000040f981\n.text:000000000040f983\n'
p174
tp175
sS'openat'
p176
(S'\n__stdcall openat(int __fd, char * __file, int __oflag)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint openat(int __fd,char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_openat_00618118)();\u000a  return iVar1;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00618118]\n'
p179
S'ff 25 b2 5c 21 00\n'
p180
S'.plt:0000000000402460\n'
p181
tp182
sS'lutimens'
p183
(S'\n__stdcall lutimens(char * file, timespec * timespec)\n'
p184
V\u000aint lutimens(char *file,timespec *timespec)\u000a\u000a{\u000a  timespec *ptVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int *piVar5;\u000a  long lVar6;\u000a  timespec tVar7;\u000a  timespec adjusted_timespec [2];\u000a  timespec *local_d0;\u000a  undefined4 local_c8;\u000a  undefined4 uStack196;\u000a  undefined4 uStack192;\u000a  undefined4 uStack188;\u000a  undefined4 local_b8;\u000a  undefined4 uStack180;\u000a  undefined4 uStack176;\u000a  undefined4 uStack172;\u000a  stat local_a8;\u000a  \u000a  local_d0 = (timespec *)&local_c8;\u000a  if (timespec == (timespec *)0x0) {\u000a    iVar3 = 0;\u000a    local_d0 = timespec;\u000a  }\u000a  else {\u000a    local_c8 = *(undefined4 *)&timespec->tv_sec;\u000a    uStack196 = *(undefined4 *)((long)&timespec->tv_sec + 4);\u000a    uStack192 = *(undefined4 *)&timespec->tv_nsec;\u000a    uStack188 = *(undefined4 *)((long)&timespec->tv_nsec + 4);\u000a    local_b8 = *(undefined4 *)&timespec[1].tv_sec;\u000a    uStack180 = *(undefined4 *)((long)&timespec[1].tv_sec + 4);\u000a    uStack176 = *(undefined4 *)&timespec[1].tv_nsec;\u000a    uStack172 = *(undefined4 *)((long)&timespec[1].tv_nsec + 4);\u000a    iVar3 = validate_timespec(local_d0);\u000a    if (iVar3 < 0) {\u000a      return -1;\u000a    }\u000a  }\u000a  if (lutimensat_works_really < 0) goto LAB_0040e398;\u000a  if (iVar3 == 2) {\u000a    iVar3 = lstat(file,(stat *)&local_a8);\u000a    ptVar1 = local_d0;\u000a    if (iVar3 != 0) {\u000a      return -1;\u000a    }\u000a    if (local_d0->tv_nsec == 0x3ffffffe) {\u000a      tVar7 = get_stat_atime(&local_a8);\u000a      lVar6 = 0;\u000a    }\u000a    else {\u000a      iVar3 = 3;\u000a      if (local_d0[1].tv_nsec != 0x3ffffffe) goto LAB_0040e362;\u000a      tVar7 = get_stat_mtime(&local_a8);\u000a      lVar6 = 1;\u000a    }\u000a    ptVar1[lVar6].tv_sec = SUB168((undefined  [16])tVar7,0);\u000a    ptVar1[lVar6].tv_nsec = SUB168((undefined  [16])tVar7 >> 0x40,0);\u000a    iVar3 = 3;\u000a  }\u000aLAB_0040e362:\u000a  iVar4 = utimensat(-100,file,(timespec *)local_d0,0x100);\u000a  if (iVar4 < 1) {\u000a    if (iVar4 == 0) {\u000a      utimensat_works_really = 1;\u000a      lutimensat_works_really = 1;\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    piVar5 = __errno_location();\u000a    *piVar5 = 0x26;\u000a  }\u000a  piVar5 = __errno_location();\u000a  if (*piVar5 != 0x26) {\u000a    utimensat_works_really = 1;\u000a    lutimensat_works_really = 1;\u000a    return iVar4;\u000a  }\u000aLAB_0040e398:\u000a  lutimensat_works_really = -1;\u000a  if (iVar3 == 0) {\u000a    iVar3 = lstat(file,(stat *)&local_a8);\u000a    if (iVar3 != 0) {\u000a      return -1;\u000a    }\u000a  }\u000a  else {\u000a    if ((iVar3 != 3) && (iVar3 = lstat(file,(stat *)&local_a8), iVar3 != 0)) {\u000a      return -1;\u000a    }\u000a    if ((local_d0 != (timespec *)0x0) &&\u000a       (_Var2 = update_timespec(&local_a8,&local_d0), _Var2 != false)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((local_a8.st_mode & 0xf000) == 0xa000) {\u000a    piVar5 = __errno_location();\u000a    *piVar5 = 0x26;\u000a    return -1;\u000a  }\u000a  iVar3 = fdutimens((char *)0xffffffff,(timespec *)file);\u000a  return iVar3;\u000a}\u000a\u000a
p185
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0xc0\nMOV R14,RDI\nTEST RSI,RSI\nLEA RAX,[RSP + 0x10]\nCMOVZ RAX,RSI\nMOV qword ptr [RSP + 0x8],RAX\nJZ 0x0040e2e7\nMOVUPS XMM0,xmmword ptr [RSI]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [RSI + 0x10]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x0040e120\nMOV EBP,EAX\nTEST EBP,EBP\nJNS 0x0040e2e9\nJMP 0x0040e42b\nXOR EBP,EBP\nCMP dword ptr [0x0061aab4],0x0\nJS 0x0040e398\nCMP EBP,0x2\nJNZ 0x0040e362\nLEA RSI,[RSP + 0x30]\nMOV RDI,R14\nCALL 0x004107b0\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040e446\nMOV RBX,qword ptr [RSP + 0x8]\nCMP qword ptr [RBX + 0x8],0x3ffffffe\nJNZ 0x0040e332\nLEA RDI,[RSP + 0x30]\nCALL 0x0040d730\nXOR ECX,ECX\nJMP 0x0040e350\nMOV EBP,0x3\nCMP qword ptr [RBX + 0x18],0x3ffffffe\nJNZ 0x0040e362\nLEA RDI,[RSP + 0x30]\nCALL 0x0040d750\nMOV ECX,0x1\nSHL RCX,0x4\nMOV qword ptr [RBX + RCX*0x1],RAX\nMOV qword ptr [RBX + RCX*0x1 + 0x8],RDX\nMOV EBP,0x3\nMOV RDX,qword ptr [RSP + 0x8]\nMOV EDI,0xffffff9c\nMOV ECX,0x100\nMOV RSI,R14\nCALL 0x004022a0\nMOV EBX,EAX\nTEST EBX,EBX\nJLE 0x0040e38c\nCALL 0x004022e0\nMOV dword ptr [RAX],0x26\nJMP 0x0040e38e\nJZ 0x0040e3e4\nCALL 0x004022e0\nCMP dword ptr [RAX],0x26\nJNZ 0x0040e3e4\nMOV dword ptr [0x0061aab4],0xffffffff\nTEST EBP,EBP\nJZ 0x0040e3fa\nCMP EBP,0x3\nJZ 0x0040e3c5\nLEA RSI,[RSP + 0x30]\nMOV RDI,R14\nCALL 0x004107b0\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040e446\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x0040e410\nLEA RDI,[RSP + 0x30]\nLEA RSI,[RSP + 0x8]\nCALL 0x0040e1e0\nXOR EBX,EBX\nTEST AL,AL\nJZ 0x0040e410\nJMP 0x0040e446\nMOV dword ptr [0x0061aab0],0x1\nMOV dword ptr [0x0061aab4],0x1\nJMP 0x0040e446\nLEA RSI,[RSP + 0x30]\nMOV RDI,R14\nCALL 0x004107b0\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040e446\nMOV EAX,0xf000\nAND EAX,dword ptr [RSP + 0x48]\nCMP EAX,0xa000\nJNZ 0x0040e432\nCALL 0x004022e0\nMOV dword ptr [RAX],0x26\nMOV EBX,0xffffffff\nJMP 0x0040e446\nMOV RDX,qword ptr [RSP + 0x8]\nMOV EDI,0xffffffff\nMOV RSI,R14\nCALL 0x0040dd90\nMOV EBX,EAX\nMOV EAX,EBX\nADD RSP,0xc0\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p186
S'55\n41 56\n53\n48 81 ec c0 00 00 00\n49 89 fe\n48 85 f6\n48 8d 44 24 10\n48 0f 44 c6\n48 89 44 24 08\n74 26\n0f 10 06\n0f 29 44 24 10\n0f 10 46 10\n0f 29 44 24 20\n48 8b 7c 24 08\ne8 44 fe ff ff\n89 c5\n85 ed\n79 07\ne9 44 01 00 00\n31 ed\n83 3d c4 c7 20 00 00\n0f 88 a2 00 00 00\n83 fd 02\n75 67\n48 8d 74 24 30\n4c 89 f7\ne8 a8 24 00 00\nbb ff ff ff ff\n85 c0\n0f 85 31 01 00 00\n48 8b 5c 24 08\n48 81 7b 08 fe ff ff 3f\n75 0e\n48 8d 7c 24 30\ne8 02 f4 ff ff\n31 c9\neb 1e\nbd 03 00 00 00\n48 81 7b 18 fe ff ff 3f\n75 21\n48 8d 7c 24 30\ne8 05 f4 ff ff\nb9 01 00 00 00\n48 c1 e1 04\n48 89 04 0b\n48 89 54 0b 08\nbd 03 00 00 00\n48 8b 54 24 08\nbf 9c ff ff ff\nb9 00 01 00 00\n4c 89 f6\ne8 27 3f ff ff\n89 c3\n85 db\n7e 0d\ne8 5c 3f ff ff\nc7 00 26 00 00 00\neb 02\n74 56\ne8 4d 3f ff ff\n83 38 26\n75 4c\nc7 05 12 c7 20 00 ff ff ff ff\n85 ed\n74 54\n83 fd 03\n74 1a\n48 8d 74 24 30\n4c 89 f7\ne8 f8 23 00 00\nbb ff ff ff ff\n85 c0\n0f 85 81 00 00 00\n48 83 7c 24 08 00\n74 43\n48 8d 7c 24 30\n48 8d 74 24 08\ne8 04 fe ff ff\n31 db\n84 c0\n74 2e\neb 62\nc7 05 c2 c6 20 00 01 00 00 00\nc7 05 bc c6 20 00 01 00 00 00\neb 4c\n48 8d 74 24 30\n4c 89 f7\ne8 a9 23 00 00\nbb ff ff ff ff\n85 c0\n75 36\nb8 00 f0 00 00\n23 44 24 48\n3d 00 a0 00 00\n75 12\ne8 bb 3e ff ff\nc7 00 26 00 00 00\nbb ff ff ff ff\neb 14\n48 8b 54 24 08\nbf ff ff ff ff\n4c 89 f6\ne8 4c f9 ff ff\n89 c3\n89 d8\n48 81 c4 c0 00 00 00\n5b\n41 5e\n5d\nc3\n'
p187
S'.text:000000000040e2a0\n.text:000000000040e2a1\n.text:000000000040e2a3\n.text:000000000040e2a4\n.text:000000000040e2ab\n.text:000000000040e2ae\n.text:000000000040e2b1\n.text:000000000040e2b6\n.text:000000000040e2ba\n.text:000000000040e2bf\n.text:000000000040e2c1\n.text:000000000040e2c4\n.text:000000000040e2c9\n.text:000000000040e2cd\n.text:000000000040e2d2\n.text:000000000040e2d7\n.text:000000000040e2dc\n.text:000000000040e2de\n.text:000000000040e2e0\n.text:000000000040e2e2\n.text:000000000040e2e7\n.text:000000000040e2e9\n.text:000000000040e2f0\n.text:000000000040e2f6\n.text:000000000040e2f9\n.text:000000000040e2fb\n.text:000000000040e300\n.text:000000000040e303\n.text:000000000040e308\n.text:000000000040e30d\n.text:000000000040e30f\n.text:000000000040e315\n.text:000000000040e31a\n.text:000000000040e322\n.text:000000000040e324\n.text:000000000040e329\n.text:000000000040e32e\n.text:000000000040e330\n.text:000000000040e332\n.text:000000000040e337\n.text:000000000040e33f\n.text:000000000040e341\n.text:000000000040e346\n.text:000000000040e34b\n.text:000000000040e350\n.text:000000000040e354\n.text:000000000040e358\n.text:000000000040e35d\n.text:000000000040e362\n.text:000000000040e367\n.text:000000000040e36c\n.text:000000000040e371\n.text:000000000040e374\n.text:000000000040e379\n.text:000000000040e37b\n.text:000000000040e37d\n.text:000000000040e37f\n.text:000000000040e384\n.text:000000000040e38a\n.text:000000000040e38c\n.text:000000000040e38e\n.text:000000000040e393\n.text:000000000040e396\n.text:000000000040e398\n.text:000000000040e3a2\n.text:000000000040e3a4\n.text:000000000040e3a6\n.text:000000000040e3a9\n.text:000000000040e3ab\n.text:000000000040e3b0\n.text:000000000040e3b3\n.text:000000000040e3b8\n.text:000000000040e3bd\n.text:000000000040e3bf\n.text:000000000040e3c5\n.text:000000000040e3cb\n.text:000000000040e3cd\n.text:000000000040e3d2\n.text:000000000040e3d7\n.text:000000000040e3dc\n.text:000000000040e3de\n.text:000000000040e3e0\n.text:000000000040e3e2\n.text:000000000040e3e4\n.text:000000000040e3ee\n.text:000000000040e3f8\n.text:000000000040e3fa\n.text:000000000040e3ff\n.text:000000000040e402\n.text:000000000040e407\n.text:000000000040e40c\n.text:000000000040e40e\n.text:000000000040e410\n.text:000000000040e415\n.text:000000000040e419\n.text:000000000040e41e\n.text:000000000040e420\n.text:000000000040e425\n.text:000000000040e42b\n.text:000000000040e430\n.text:000000000040e432\n.text:000000000040e437\n.text:000000000040e43c\n.text:000000000040e43f\n.text:000000000040e444\n.text:000000000040e446\n.text:000000000040e448\n.text:000000000040e44f\n.text:000000000040e450\n.text:000000000040e452\n.text:000000000040e453\n'
p188
tp189
sS'setlocale'
p190
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p191
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_00618300)();\u000a  return pcVar1;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00618300]\n'
p193
S'ff 25 ca 5a 21 00\n'
p194
S'.plt:0000000000402830\n'
p195
tp196
sS'make_dir_parents'
p197
(S'\n__stdcall make_dir_parents(char * dir, savewd * wd, anon_subr_int_char_ptr_char_ptr_void_ptr * make_ancestor, void * options, anon_subr_void_char_ptr_void_ptr * announce)\n'
p198
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000a_Bool make_dir_parents(char *dir,savewd *wd,int (*make_ancestor)(char *,char *,void *),void *options\u000a                      ,void (*announce)(char *,void *))\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  ptrdiff_t pVar4;\u000a  uint *puVar5;\u000a  undefined8 uVar6;\u000a  char *__path;\u000a  int *open_result;\u000a  uint uVar7;\u000a  uint __mode;\u000a  ulong uVar8;\u000a  code *in_R9;\u000a  uint in_stack_00000008;\u000a  uint in_stack_00000010;\u000a  uint in_stack_00000018;\u000a  char in_stack_00000020;\u000a  stat st;\u000a  uint local_c0 [6];\u000a  uint local_a8;\u000a  \u000a  uVar1 = (uint)announce;\u000a  if (*dir == '/') {\u000aLAB_0040aa5f:\u000a    if (make_ancestor == (int (*)(char *,char *,void *))0x0) {\u000a      pVar4 = 0;\u000a    }\u000a    else {\u000a      pVar4 = mkancesdirs(dir,wd,make_ancestor,options);\u000a      if (pVar4 < 0) {\u000a        if (pVar4 != -1) {\u000a          return true;\u000a        }\u000a        puVar5 = (uint *)__errno_location();\u000a        uVar8 = (ulong)*puVar5;\u000a        goto LAB_0040ac31;\u000a      }\u000a    }\u000a    uVar7 = in_stack_00000018 & in_stack_00000010;\u000a    uVar2 = uVar1 & 0x200 | in_stack_00000008 & 0xc00;\u000a    if (uVar7 == 0xffffffff) {\u000a      __mode = uVar1 & 0xffffffed;\u000a      if (uVar2 == 0) {\u000a        __mode = uVar1;\u000a      }\u000a    }\u000a    else {\u000a      __mode = uVar1 & 0xffffffc0;\u000a    }\u000a    __path = dir + pVar4;\u000a    iVar3 = mkdir(__path,__mode);\u000a    if (iVar3 == 0) {\u000a      (*in_R9)(dir,options);\u000a      __mode = 0;\u000a      open_result = (int *)0x3;\u000a      if (uVar7 != 0xffffffff || (uVar2 | uVar1 & in_stack_00000008 & 0x1ff) != 0)\u000a      goto LAB_0040abb3;\u000aLAB_0040ab6d:\u000a      if ((__mode == 0) ||\u000a         ((((make_ancestor != (int (*)(char *,char *,void *))0x0 && (__mode != 2)) &&\u000a           (iVar3 = stat(__path,(stat *)local_c0), iVar3 == 0)) && ((local_a8 & 0xf000) == 0x4000)))\u000a         ) {\u000a        return true;\u000a      }\u000a    }\u000a    else {\u000a      puVar5 = (uint *)__errno_location();\u000a      __mode = *puVar5;\u000a      open_result = (int *)0x2;\u000a      if (in_stack_00000020 != 0) goto LAB_0040ab6d;\u000aLAB_0040abb3:\u000a      iVar3 = savewd_chdir(wd,__path,open_result);\u000a      if (iVar3 < -1) {\u000a        return true;\u000a      }\u000a      iVar3 = dirchownmod((char *)(ulong)local_c0[0]);\u000a      if (iVar3 == 0) {\u000a        return true;\u000a      }\u000a      if ((__mode == 0) ||\u000a         (((make_ancestor != (int (*)(char *,char *,void *))0x0 && (__mode != 2)) &&\u000a          (open_result = __errno_location(), *open_result != 0x14)))) {\u000a        puVar5 = (uint *)__errno_location();\u000a        uVar1 = *puVar5;\u000a        __path = "cannot change owner and permissions of %s";\u000a        if (uVar7 == 0xffffffff) {\u000a          __path = "cannot change permissions of %s";\u000a        }\u000a        uVar6 = dcgettext(0,__path,5);\u000a        __path = quote(dir);\u000a        uVar8 = (ulong)uVar1;\u000a        goto LAB_0040ac5d;\u000a      }\u000a    }\u000a    uVar8 = (ulong)__mode;\u000a  }\u000a  else {\u000a    uVar2 = savewd_errno(wd);\u000a    uVar8 = (ulong)uVar2;\u000a    if (uVar2 == 0) goto LAB_0040aa5f;\u000a  }\u000aLAB_0040ac31:\u000a  uVar6 = dcgettext(0,"cannot create directory %s",5);\u000a  __path = quote(dir);\u000aLAB_0040ac5d:\u000a  error(0,uVar8,uVar6,__path);\u000a  return false;\u000a}\u000a\u000a
p199
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV RBX,R9\nMOV R13D,R8D\nMOV qword ptr [RSP + 0x30],RCX\nMOV R15,RDX\nMOV RBP,RSI\nMOV R14,RDI\nCMP byte ptr [R14],0x2f\nJZ 0x0040aa5f\nMOV RDI,RBP\nCALL 0x0040d030\nMOV R12D,EAX\nTEST R12D,R12D\nJNZ 0x0040ac31\nTEST R15,R15\nMOV qword ptr [RSP + 0x40],RBP\nMOV qword ptr [RSP + 0x38],RBX\nJZ 0x0040aaa3\nMOV RDI,R14\nMOV RSI,RBP\nMOV RDX,R15\nMOV RCX,qword ptr [RSP + 0x30]\nCALL 0x0040a8b0\nMOV R12,RAX\nTEST R12,R12\nJNS 0x0040aaa6\nMOV R15B,0x1\nCMP R12,-0x1\nJNZ 0x0040ac62\nCALL 0x004022e0\nMOV R12D,dword ptr [RAX]\nJMP 0x0040ac31\nXOR R12D,R12D\nMOV EBP,dword ptr [0x120 + RSP]\nMOV EAX,dword ptr [0x110 + RSP]\nAND EBP,dword ptr [0x118 + RSP]\nAND EAX,0xc00\nMOV EBX,R13D\nAND EBX,0x200\nOR EBX,EAX\nCMP EBP,-0x1\nMOV qword ptr [RSP + 0x18],R14\nMOV qword ptr [RSP + 0x28],R15\nMOV dword ptr [RSP + 0x14],R13D\nJZ 0x0040aae8\nMOV R15D,R13D\nAND R15D,0xffffffc0\nJMP 0x0040aaf5\nMOV R15D,R13D\nAND R15D,0xffffffed\nTEST EBX,EBX\nCMOVZ R15D,R13D\nMOV R14,qword ptr [RSP + 0x18]\nADD R12,R14\nMOV RDI,R12\nMOV ESI,R15D\nCALL 0x00402340\nTEST EAX,EAX\nMOV dword ptr [RSP + 0x24],EBP\nJZ 0x0040ab32\nMOV BL,byte ptr [0x128 + RSP]\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nMOV R15D,0xffffffff\nMOV EDX,0x2\nTEST BL,BL\nJNZ 0x0040ab6d\nJMP 0x0040abb3\nCMP EBP,-0x1\nSETZ BPL\nMOV R13D,dword ptr [RSP + 0x14]\nAND R13D,dword ptr [0x110 + RSP]\nAND R13D,0x1ff\nMOV RDI,R14\nMOV RSI,qword ptr [RSP + 0x30]\nCALL qword ptr [RSP + 0x38]\nOR EBX,R13D\nSETZ BL\nAND BL,BPL\nXOR EBP,EBP\nMOV EDX,0x3\nTEST BL,BL\nJZ 0x0040abb3\nTEST EBP,EBP\nJZ 0x0040abab\nCMP qword ptr [RSP + 0x28],0x0\nJZ 0x0040ac29\nCMP EBP,0x2\nJZ 0x0040ac29\nLEA RSI,[RSP + 0x48]\nMOV RDI,R12\nCALL 0x00410790\nTEST EAX,EAX\nJNZ 0x0040ac29\nMOV EAX,0xf000\nAND EAX,dword ptr [RSP + 0x60]\nCMP EAX,0x4000\nJNZ 0x0040ac29\nMOV R15B,0x1\nJMP 0x0040ac62\nLEA RCX,[RSP + 0x48]\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,R12\nCALL 0x0040d040\nCMP EAX,-0x2\nJG 0x0040abd2\nMOV R15B,0x1\nJMP 0x0040ac62\nTEST EAX,EAX\nMOV EAX,0x4125eb\nCMOVZ R12,RAX\nMOV EDI,dword ptr [RSP + 0x48]\nMOV EAX,dword ptr [0x110 + RSP]\nMOV dword ptr [RSP],EAX\nMOV RSI,R12\nMOV EDX,R15D\nMOV ECX,dword ptr [0x118 + RSP]\nMOV R8D,dword ptr [0x120 + RSP]\nMOV R9D,dword ptr [RSP + 0x14]\nCALL 0x0040ff40\nTEST EAX,EAX\nJZ 0x0040ac77\nTEST EBP,EBP\nJZ 0x0040ac7c\nCMP qword ptr [RSP + 0x28],0x0\nJZ 0x0040ac29\nCMP EBP,0x2\nJZ 0x0040ac29\nCALL 0x004022e0\nCMP dword ptr [RAX],0x14\nJNZ 0x0040ac7c\nMOV R14,qword ptr [RSP + 0x18]\nMOV R12D,EBP\nXOR R15D,R15D\nXOR EDI,EDI\nMOV ESI,0x41203a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RDI,R14\nCALL 0x0040c6e0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,RBX\nCALL 0x00402870\nMOV EAX,R15D\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV R15B,0x1\nJMP 0x0040ac62\nCALL 0x004022e0\nCMP dword ptr [RSP + 0x24],-0x1\nMOV R14D,dword ptr [RAX]\nMOV EAX,0x41210d\nMOV ESI,0x412d60\nCMOVZ RSI,RAX\nXOR R15D,R15D\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV RDI,qword ptr [RSP + 0x18]\nCALL 0x0040c6e0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,RBP\nJMP 0x0040ac5d\n'
p200
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n4c 89 cb\n45 89 c5\n48 89 4c 24 30\n49 89 d7\n48 89 f5\n49 89 fe\n41 80 3e 2f\n74 14\n48 89 ef\ne8 dd 25 00 00\n41 89 c4\n45 85 e4\n0f 85 d2 01 00 00\n4d 85 ff\n48 89 6c 24 40\n48 89 5c 24 38\n74 35\n4c 89 f7\n48 89 ee\n4c 89 fa\n48 8b 4c 24 30\ne8 2f fe ff ff\n49 89 c4\n4d 85 e4\n79 1d\n41 b7 01\n49 83 fc ff\n0f 85 cc 01 00 00\ne8 45 78 ff ff\n44 8b 20\ne9 8e 01 00 00\n45 31 e4\n8b ac 24 20 01 00 00\n8b 84 24 10 01 00 00\n23 ac 24 18 01 00 00\n25 00 0c 00 00\n44 89 eb\n81 e3 00 02 00 00\n09 c3\n83 fd ff\n4c 89 74 24 18\n4c 89 7c 24 28\n44 89 6c 24 14\n74 09\n45 89 ef\n41 83 e7 c0\neb 0d\n45 89 ef\n41 83 e7 ed\n85 db\n45 0f 44 fd\n4c 8b 74 24 18\n4d 01 f4\n4c 89 e7\n44 89 fe\ne8 38 78 ff ff\n85 c0\n89 6c 24 24\n74 22\n8a 9c 24 28 01 00 00\ne8 c4 77 ff ff\n8b 28\n41 bf ff ff ff ff\nba 02 00 00 00\n84 db\n75 40\ne9 81 00 00 00\n83 fd ff\n40 0f 94 c5\n44 8b 6c 24 14\n44 23 ac 24 10 01 00 00\n41 81 e5 ff 01 00 00\n4c 89 f7\n48 8b 74 24 30\nff 54 24 38\n44 09 eb\n0f 94 c3\n40 20 eb\n31 ed\nba 03 00 00 00\n84 db\n74 46\n85 ed\n74 3a\n48 83 7c 24 28 00\n0f 84 ac 00 00 00\n83 fd 02\n0f 84 a3 00 00 00\n48 8d 74 24 48\n4c 89 e7\ne8 fd 5b 00 00\n85 c0\n0f 85 8e 00 00 00\nb8 00 f0 00 00\n23 44 24 60\n3d 00 40 00 00\n75 7e\n41 b7 01\ne9 af 00 00 00\n48 8d 4c 24 48\n48 8b 7c 24 40\n4c 89 e6\ne8 7b 24 00 00\n83 f8 fe\n7f 08\n41 b7 01\ne9 90 00 00 00\n85 c0\nb8 eb 25 41 00\n4c 0f 44 e0\n8b 7c 24 48\n8b 84 24 10 01 00 00\n89 04 24\n4c 89 e6\n44 89 fa\n8b 8c 24 18 01 00 00\n44 8b 84 24 20 01 00 00\n44 8b 4c 24 14\ne8 36 53 00 00\n85 c0\n74 69\n85 ed\n74 6a\n48 83 7c 24 28 00\n74 0f\n83 fd 02\n74 0a\ne8 bc 76 ff ff\n83 38 14\n75 53\n4c 8b 74 24 18\n41 89 ec\n45 31 ff\n31 ff\nbe 3a 20 41 00\nba 05 00 00 00\ne8 db 77 ff ff\n48 89 c3\n4c 89 f7\ne8 90 1a 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 e6\n48 89 da\ne8 0e 7c ff ff\n44 89 f8\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n41 b7 01\neb e6\ne8 5f 76 ff ff\n83 7c 24 24 ff\n44 8b 30\nb8 0d 21 41 00\nbe 60 2d 41 00\n48 0f 44 f0\n45 31 ff\n31 ff\nba 05 00 00 00\ne8 7a 77 ff ff\n48 89 c5\n48 8b 7c 24 18\ne8 2d 1a 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n48 89 ea\neb 9b\n'
p201
S'.text:000000000040aa20\n.text:000000000040aa21\n.text:000000000040aa23\n.text:000000000040aa25\n.text:000000000040aa27\n.text:000000000040aa29\n.text:000000000040aa2a\n.text:000000000040aa31\n.text:000000000040aa34\n.text:000000000040aa37\n.text:000000000040aa3c\n.text:000000000040aa3f\n.text:000000000040aa42\n.text:000000000040aa45\n.text:000000000040aa49\n.text:000000000040aa4b\n.text:000000000040aa4e\n.text:000000000040aa53\n.text:000000000040aa56\n.text:000000000040aa59\n.text:000000000040aa5f\n.text:000000000040aa62\n.text:000000000040aa67\n.text:000000000040aa6c\n.text:000000000040aa6e\n.text:000000000040aa71\n.text:000000000040aa74\n.text:000000000040aa77\n.text:000000000040aa7c\n.text:000000000040aa81\n.text:000000000040aa84\n.text:000000000040aa87\n.text:000000000040aa89\n.text:000000000040aa8c\n.text:000000000040aa90\n.text:000000000040aa96\n.text:000000000040aa9b\n.text:000000000040aa9e\n.text:000000000040aaa3\n.text:000000000040aaa6\n.text:000000000040aaad\n.text:000000000040aab4\n.text:000000000040aabb\n.text:000000000040aac0\n.text:000000000040aac3\n.text:000000000040aac9\n.text:000000000040aacb\n.text:000000000040aace\n.text:000000000040aad3\n.text:000000000040aad8\n.text:000000000040aadd\n.text:000000000040aadf\n.text:000000000040aae2\n.text:000000000040aae6\n.text:000000000040aae8\n.text:000000000040aaeb\n.text:000000000040aaef\n.text:000000000040aaf1\n.text:000000000040aaf5\n.text:000000000040aafa\n.text:000000000040aafd\n.text:000000000040ab00\n.text:000000000040ab03\n.text:000000000040ab08\n.text:000000000040ab0a\n.text:000000000040ab0e\n.text:000000000040ab10\n.text:000000000040ab17\n.text:000000000040ab1c\n.text:000000000040ab1e\n.text:000000000040ab24\n.text:000000000040ab29\n.text:000000000040ab2b\n.text:000000000040ab2d\n.text:000000000040ab32\n.text:000000000040ab35\n.text:000000000040ab39\n.text:000000000040ab3e\n.text:000000000040ab46\n.text:000000000040ab4d\n.text:000000000040ab50\n.text:000000000040ab55\n.text:000000000040ab59\n.text:000000000040ab5c\n.text:000000000040ab5f\n.text:000000000040ab62\n.text:000000000040ab64\n.text:000000000040ab69\n.text:000000000040ab6b\n.text:000000000040ab6d\n.text:000000000040ab6f\n.text:000000000040ab71\n.text:000000000040ab77\n.text:000000000040ab7d\n.text:000000000040ab80\n.text:000000000040ab86\n.text:000000000040ab8b\n.text:000000000040ab8e\n.text:000000000040ab93\n.text:000000000040ab95\n.text:000000000040ab9b\n.text:000000000040aba0\n.text:000000000040aba4\n.text:000000000040aba9\n.text:000000000040abab\n.text:000000000040abae\n.text:000000000040abb3\n.text:000000000040abb8\n.text:000000000040abbd\n.text:000000000040abc0\n.text:000000000040abc5\n.text:000000000040abc8\n.text:000000000040abca\n.text:000000000040abcd\n.text:000000000040abd2\n.text:000000000040abd4\n.text:000000000040abd9\n.text:000000000040abdd\n.text:000000000040abe1\n.text:000000000040abe8\n.text:000000000040abeb\n.text:000000000040abee\n.text:000000000040abf1\n.text:000000000040abf8\n.text:000000000040ac00\n.text:000000000040ac05\n.text:000000000040ac0a\n.text:000000000040ac0c\n.text:000000000040ac0e\n.text:000000000040ac10\n.text:000000000040ac12\n.text:000000000040ac18\n.text:000000000040ac1a\n.text:000000000040ac1d\n.text:000000000040ac1f\n.text:000000000040ac24\n.text:000000000040ac27\n.text:000000000040ac29\n.text:000000000040ac2e\n.text:000000000040ac31\n.text:000000000040ac34\n.text:000000000040ac36\n.text:000000000040ac3b\n.text:000000000040ac40\n.text:000000000040ac45\n.text:000000000040ac48\n.text:000000000040ac4b\n.text:000000000040ac50\n.text:000000000040ac53\n.text:000000000040ac55\n.text:000000000040ac57\n.text:000000000040ac5a\n.text:000000000040ac5d\n.text:000000000040ac62\n.text:000000000040ac65\n.text:000000000040ac6c\n.text:000000000040ac6d\n.text:000000000040ac6f\n.text:000000000040ac71\n.text:000000000040ac73\n.text:000000000040ac75\n.text:000000000040ac76\n.text:000000000040ac77\n.text:000000000040ac7a\n.text:000000000040ac7c\n.text:000000000040ac81\n.text:000000000040ac86\n.text:000000000040ac89\n.text:000000000040ac8e\n.text:000000000040ac93\n.text:000000000040ac97\n.text:000000000040ac9a\n.text:000000000040ac9c\n.text:000000000040aca1\n.text:000000000040aca6\n.text:000000000040aca9\n.text:000000000040acae\n.text:000000000040acb3\n.text:000000000040acb6\n.text:000000000040acb8\n.text:000000000040acba\n.text:000000000040acbd\n.text:000000000040acc0\n'
p202
tp203
sS'c_toupper'
p204
(S'\n__stdcall c_toupper()\n'
p205
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p206
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p207
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p208
S'.text:000000000040fb10\n.text:000000000040fb13\n.text:000000000040fb16\n.text:000000000040fb19\n.text:000000000040fb1c\n'
p209
tp210
sS'fcntl'
p211
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p212
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_006180a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x006180a8]\n'
p214
S'ff 25 22 5d 21 00\n'
p215
S'.plt:0000000000402380\n'
p216
tp217
sS'src_to_dest_free'
p218
(S'\n__stdcall src_to_dest_free(void * x)\n'
p219
V\u000avoid src_to_dest_free(void *x)\u000a\u000a{\u000a  free(*(void **)((long)x + 0x10));\u000a  free(x);\u000a  return;\u000a}\u000a\u000a
p220
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX + 0x10]\nCALL 0x00402290\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402290\n'
p221
S'53\n48 89 fb\n48 8b 7b 10\ne8 53 9d ff ff\n48 89 df\n5b\ne9 4a 9d ff ff\n'
p222
S'.text:0000000000408530\n.text:0000000000408531\n.text:0000000000408534\n.text:0000000000408538\n.text:000000000040853d\n.text:0000000000408540\n.text:0000000000408541\n'
p223
tp224
sS'mbsinit'
p225
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_006183b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x006183b0]\n'
p228
S'ff 25 1a 5a 21 00\n'
p229
S'.plt:0000000000402990\n'
p230
tp231
sS'deregister_tm_clones'
p232
(S'\n__stdcall deregister_tm_clones()\n'
p233
V\u000a/* WARNING: Removing unreachable block (ram,0x00402a45) */\u000a/* WARNING: Removing unreachable block (ram,0x00402a4f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p234
S'MOV EAX,0x61848f\nPUSH RBP\nSUB RAX,0x618488\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00402a60\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402a60\nPOP RBP\nMOV EDI,0x618488\nJMP RAX\nPOP RBP\nRET\n'
p235
S'b8 8f 84 61 00\n55\n48 2d 88 84 61 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 88 84 61 00\nff e0\n5d\nc3\n'
p236
S'.text:0000000000402a30\n.text:0000000000402a35\n.text:0000000000402a36\n.text:0000000000402a3c\n.text:0000000000402a40\n.text:0000000000402a43\n.text:0000000000402a45\n.text:0000000000402a4a\n.text:0000000000402a4d\n.text:0000000000402a4f\n.text:0000000000402a50\n.text:0000000000402a55\n.text:0000000000402a60\n.text:0000000000402a61\n'
p237
tp238
sS'utimens_symlink'
p239
(S'\n__stdcall utimens_symlink(char * file, timespec * timespec)\n'
p240
V\u000aint utimens_symlink(char *file,timespec *timespec)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  \u000a  iVar1 = lutimens(file,timespec);\u000a  if (iVar1 != 0) {\u000a    piVar2 = __errno_location();\u000a    if (*piVar2 == 0x26) {\u000a      iVar1 = 0;\u000a    }\u000a    return iVar1;\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p241
S'PUSH RBX\nCALL 0x0040e2a0\nMOV EBX,EAX\nTEST EBX,EBX\nJZ 0x004077cd\nCALL 0x004022e0\nXOR ECX,ECX\nCMP dword ptr [RAX],0x26\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nRET\nXOR EAX,EAX\nPOP RBX\nRET\n'
p242
S'53\ne8 ea 6a 00 00\n89 c3\n85 db\n74 11\ne8 1f ab ff ff\n31 c9\n83 38 26\n0f 44 d9\n89 d8\n5b\nc3\n31 c0\n5b\nc3\n'
p243
S'.text:00000000004077b0\n.text:00000000004077b1\n.text:00000000004077b6\n.text:00000000004077b8\n.text:00000000004077ba\n.text:00000000004077bc\n.text:00000000004077c1\n.text:00000000004077c3\n.text:00000000004077c6\n.text:00000000004077c9\n.text:00000000004077cb\n.text:00000000004077cc\n.text:00000000004077cd\n.text:00000000004077cf\n.text:00000000004077d0\n'
p244
tp245
sS'ptr_align'
p246
(S'\n__stdcall ptr_align(void * ptr, size_t alignment)\n'
p247
V\u000avoid * ptr_align(void *ptr,size_t alignment)\u000a\u000a{\u000a  ulong uVar1;\u000a  \u000a  uVar1 = (long)ptr + (alignment - 1);\u000a  return (void *)(uVar1 - uVar1 % alignment);\u000a}\u000a\u000a
p248
S'LEA RCX,[RDI + RSI*0x1 + -0x1]\nXOR EDX,EDX\nMOV RAX,RCX\nDIV RSI\nSUB RCX,RDX\nMOV RAX,RCX\nRET\n'
p249
S'48 8d 4c 37 ff\n31 d2\n48 89 c8\n48 f7 f6\n48 29 d1\n48 89 c8\nc3\n'
p250
S'.text:0000000000407ab0\n.text:0000000000407ab5\n.text:0000000000407ab7\n.text:0000000000407aba\n.text:0000000000407abd\n.text:0000000000407ac0\n.text:0000000000407ac3\n'
p251
tp252
sS'fputc_unlocked'
p253
(S'\n__stdcall fputc_unlocked(int __c, FILE * __stream)\n'
p254
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc_unlocked(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_unlocked_00618228)();\u000a  return iVar1;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x00618228]\n'
p256
S'ff 25 a2 5b 21 00\n'
p257
S'.plt:0000000000402680\n'
p258
tp259
sS'quotearg_custom'
p260
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p261
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p262
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x0040c5f0\n'
p263
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p264
S'.text:000000000040c670\n.text:000000000040c673\n.text:000000000040c676\n.text:000000000040c679\n.text:000000000040c67b\n.text:000000000040c67e\n.text:000000000040c681\n.text:000000000040c684\n'
p265
tp266
sS'close'
p267
(S'\n__stdcall close(int __fd)\n'
p268
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_006181b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006181b0]\n'
p270
S'ff 25 1a 5c 21 00\n'
p271
S'.plt:0000000000402590\n'
p272
tp273
sS'getenv'
p274
(S'\n__stdcall getenv(char * __name)\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_00618020)();\u000a  return pcVar1;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00618020]\n'
p277
S'ff 25 aa 5d 21 00\n'
p278
S'.plt:0000000000402270\n'
p279
tp280
sS'triple_free'
p281
(S'\n__stdcall triple_free(void * x)\n'
p282
V\u000avoid triple_free(void *x)\u000a\u000a{\u000a  free(*(void **)x);\u000a  free(x);\u000a  return;\u000a}\u000a\u000a
p283
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX]\nCALL 0x00402290\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402290\n'
p284
S'53\n48 89 fb\n48 8b 3b\ne8 f4 79 ff ff\n48 89 df\n5b\ne9 eb 79 ff ff\n'
p285
S'.text:000000000040a890\n.text:000000000040a891\n.text:000000000040a894\n.text:000000000040a897\n.text:000000000040a89c\n.text:000000000040a89f\n.text:000000000040a8a0\n'
p286
tp287
sS'rpl_fseeko'
p288
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p289
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_00618348)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p290
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x0040f178\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x0040f178\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x0040f18a\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x004028c0\nMOV RDI,RBX\nCALL 0x00402710\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x00402500\nCMP RAX,-0x1\nJZ 0x0040f1b3\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x0040f1b8\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p291
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 36 37 ff ff\n48 89 df\ne8 7e 35 ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 61 33 ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p292
S'.text:000000000040f150\n.text:000000000040f151\n.text:000000000040f153\n.text:000000000040f154\n.text:000000000040f157\n.text:000000000040f15a\n.text:000000000040f15d\n.text:000000000040f161\n.text:000000000040f165\n.text:000000000040f167\n.text:000000000040f16b\n.text:000000000040f16f\n.text:000000000040f171\n.text:000000000040f176\n.text:000000000040f178\n.text:000000000040f17b\n.text:000000000040f17e\n.text:000000000040f181\n.text:000000000040f182\n.text:000000000040f184\n.text:000000000040f185\n.text:000000000040f18a\n.text:000000000040f18d\n.text:000000000040f192\n.text:000000000040f194\n.text:000000000040f197\n.text:000000000040f19a\n.text:000000000040f19f\n.text:000000000040f1a3\n.text:000000000040f1a5\n.text:000000000040f1a8\n.text:000000000040f1af\n.text:000000000040f1b1\n.text:000000000040f1b3\n.text:000000000040f1b8\n.text:000000000040f1b9\n.text:000000000040f1bb\n.text:000000000040f1bc\n'
p293
tp294
sS'fchmod'
p295
(S'\n__stdcall fchmod(int __fd, __mode_t __mode)\n'
p296
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fchmod(int __fd,__mode_t __mode)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fchmod_00618310)();\u000a  return iVar1;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x00618310]\n'
p298
S'ff 25 ba 5a 21 00\n'
p299
S'.plt:0000000000402850\n'
p300
tp301
sS'rotr8'
p302
(S'\n__stdcall rotr8()\n'
p303
V\u000auint8_t rotr8(void)\u000a\u000a{\u000a  undefined4 in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (uint8_t)((byte)(in_EDI << (8 - (byte)in_ESI & 0x1f)) |\u000a                  (byte)(in_EDI >> ((byte)in_ESI & 0x1f)));\u000a}\u000a\u000a
p304
S'MOV EAX,EDI\nMOV ECX,ESI\nSHR EAX,CL\nMOV ECX,0x8\nSUB ECX,ESI\nSHL EDI,CL\nOR EDI,EAX\nMOV EAX,EDI\nRET\n'
p305
S'89 f8\n89 f1\nd3 e8\nb9 08 00 00 00\n29 f1\nd3 e7\n09 c7\n89 f8\nc3\n'
p306
S'.text:000000000040f9b0\n.text:000000000040f9b2\n.text:000000000040f9b4\n.text:000000000040f9b6\n.text:000000000040f9bb\n.text:000000000040f9bd\n.text:000000000040f9bf\n.text:000000000040f9c1\n.text:000000000040f9c3\n'
p307
tp308
sS'fdopendir'
p309
(S'\n__stdcall fdopendir(int __fd)\n'
p310
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aDIR * fdopendir(int __fd)\u000a\u000a{\u000a  DIR *pDVar1;\u000a  \u000a  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_00618360)();\u000a  return pDVar1;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x00618360]\n'
p312
S'ff 25 6a 5a 21 00\n'
p313
S'.plt:00000000004028f0\n'
p314
tp315
sS'is_prime'
p316
(S'\n__stdcall is_prime(size_t candidate)\n'
p317
V\u000a_Bool is_prime(size_t candidate)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  long lVar3;\u000a  bool bVar4;\u000a  \u000a  bVar4 = candidate != (candidate / 3) * 3;\u000a  if ((9 < candidate) && (bVar4)) {\u000a    uVar2 = 9;\u000a    lVar3 = 0x10;\u000a    uVar1 = 5;\u000a    do {\u000a      uVar2 = uVar2 + lVar3;\u000a      bVar4 = candidate % uVar1 != 0;\u000a      if (candidate <= uVar2) {\u000a        return (_Bool)bVar4;\u000a      }\u000a      lVar3 = lVar3 + 8;\u000a      uVar1 = uVar1 + 2;\u000a    } while (bVar4);\u000a  }\u000a  return (_Bool)bVar4;\u000a}\u000a\u000a
p318
S'MOV R8,RDI\nMOV RCX,-0x5555555555555555\nMOV RAX,R8\nMUL RCX\nSHR RDX,1\nLEA RAX,[RDX + RDX*0x2]\nCMP R8,RAX\nSETNZ AL\nSETZ CL\nCMP R8,0xa\nJC 0x0040a7c5\nTEST CL,CL\nJNZ 0x0040a7c5\nMOV ESI,0x9\nMOV EDI,0x10\nMOV ECX,0x5\nNOP dword ptr [RAX]\nADD RSI,RDI\nXOR EDX,EDX\nMOV RAX,R8\nDIV RCX\nTEST RDX,RDX\nSETNZ AL\nSETZ DL\nCMP RSI,R8\nJNC 0x0040a7c5\nADD RDI,0x8\nADD RCX,0x2\nTEST DL,DL\nJZ 0x0040a7a0\nRET\n'
p319
S'49 89 f8\n48 b9 ab aa aa aa aa aa aa aa\n4c 89 c0\n48 f7 e1\n48 d1 ea\n48 8d 04 52\n49 39 c0\n0f 95 c0\n0f 94 c1\n49 83 f8 0a\n72 3c\n84 c9\n75 38\nbe 09 00 00 00\nbf 10 00 00 00\nb9 05 00 00 00\n0f 1f 40 00\n48 01 fe\n31 d2\n4c 89 c0\n48 f7 f1\n48 85 d2\n0f 95 c0\n0f 94 c2\n4c 39 c6\n73 0c\n48 83 c7 08\n48 83 c1 02\n84 d2\n74 db\nc3\n'
p320
S'.text:000000000040a760\n.text:000000000040a763\n.text:000000000040a76d\n.text:000000000040a770\n.text:000000000040a773\n.text:000000000040a776\n.text:000000000040a77a\n.text:000000000040a77d\n.text:000000000040a780\n.text:000000000040a783\n.text:000000000040a787\n.text:000000000040a789\n.text:000000000040a78b\n.text:000000000040a78d\n.text:000000000040a792\n.text:000000000040a797\n.text:000000000040a79c\n.text:000000000040a7a0\n.text:000000000040a7a3\n.text:000000000040a7a5\n.text:000000000040a7a8\n.text:000000000040a7ab\n.text:000000000040a7ae\n.text:000000000040a7b1\n.text:000000000040a7b4\n.text:000000000040a7b7\n.text:000000000040a7b9\n.text:000000000040a7bd\n.text:000000000040a7c1\n.text:000000000040a7c3\n.text:000000000040a7c5\n'
p321
tp322
sS'fscanf'
p323
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_00618190)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x00618190]\n'
p326
S'ff 25 3a 5c 21 00\n'
p327
S'.plt:0000000000402550\n'
p328
tp329
sS'memcpy'
p330
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p331
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_00618250)();\u000a  return pvVar1;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x00618250]\n'
p333
S'ff 25 7a 5b 21 00\n'
p334
S'.plt:00000000004026d0\n'
p335
tp336
sS'install_file_in_file'
p337
(S'\n__stdcall install_file_in_file(char * from, char * to, cp_options * x)\n'
p338
V\u000a_Bool install_file_in_file(char *from,char *to,cp_options *x)\u000a\u000a{\u000a  uint uVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  uint *puVar4;\u000a  undefined8 uVar5;\u000a  char *pcVar6;\u000a  undefined8 uVar7;\u000a  stat local_b0;\u000a  \u000a  if ((x->preserve_timestamps != false) && (iVar3 = stat(from,(stat *)&local_b0), iVar3 != 0)) {\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    uVar5 = dcgettext(0,"cannot stat %s",5);\u000a    pcVar6 = quotearg_style((char *)0x4);\u000a    uVar7 = 0;\u000aLAB_00403a32:\u000a    error(uVar7,(ulong)uVar1,uVar5,pcVar6);\u000a    return false;\u000a  }\u000a  _Var2 = copy_file(from,to,x);\u000a  if (_Var2 != false) {\u000a    if ((strip_files == 1) && (_Var2 = strip(to), _Var2 == false)) {\u000a      iVar3 = unlink(to);\u000a      if (iVar3 != 0) {\u000a        puVar4 = (uint *)__errno_location();\u000a        uVar1 = *puVar4;\u000a        uVar5 = dcgettext(0,"cannot unlink %s",5);\u000a        pcVar6 = quotearg_style((char *)0x4);\u000a        uVar7 = 1;\u000a        goto LAB_00403a32;\u000a      }\u000a    }\u000a    else {\u000a      if ((x->preserve_timestamps == false) ||\u000a         (((strip_files == 0 && ((local_b0.st_mode & 0xf000) == 0x8000)) ||\u000a          (_Var2 = change_timestamps(&local_b0,to), _Var2 != false)))) {\u000a        _Var2 = change_attributes(to);\u000a        return _Var2;\u000a      }\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p339
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x98\nMOV RBX,RDX\nMOV R14,RSI\nMOV R15,RDI\nCMP byte ptr [RBX + 0x1e],0x0\nJZ 0x00403a3f\nLEA RSI,[RSP + 0x8]\nMOV RDI,R15\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x00403a3f\nCALL 0x004022e0\nMOV R14D,dword ptr [RAX]\nXOR EBX,EBX\nXOR EDI,EDI\nMOV ESI,0x412055\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,RBP\nCALL 0x00402870\nJMP 0x00403af2\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RBX\nCALL 0x00403d50\nTEST AL,AL\nJZ 0x00403af0\nCMP byte ptr [0x00618500],0x1\nJNZ 0x00403a6a\nMOV RDI,R14\nCALL 0x00403da0\nTEST AL,AL\nJZ 0x00403aa7\nCMP byte ptr [RBX + 0x1e],0x0\nJZ 0x00403a9b\nMOV AL,byte ptr [0x00618500]\nTEST AL,AL\nJNZ 0x00403a8a\nMOV EAX,0xf000\nAND EAX,dword ptr [RSP + 0x20]\nCMP EAX,0x8000\nJZ 0x00403a9b\nLEA RDI,[RSP + 0x8]\nMOV RSI,R14\nCALL 0x00403eb0\nTEST AL,AL\nJZ 0x00403af0\nMOV RDI,R14\nCALL 0x00403f40\nMOV BL,AL\nJMP 0x00403af2\nMOV RDI,R14\nCALL 0x004022f0\nTEST EAX,EAX\nJZ 0x00403af0\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EBX,EBX\nXOR EDI,EDI\nMOV ESI,0x412064\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,R15D\nJMP 0x00403a32\nXOR EBX,EBX\nMOV EAX,EBX\nADD RSP,0x98\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p340
S'55\n41 57\n41 56\n53\n48 81 ec 98 00 00 00\n48 89 d3\n49 89 f6\n49 89 ff\n80 7b 1e 00\n74 53\n48 8d 74 24 08\n4c 89 ff\ne8 97 cd 00 00\n85 c0\n74 42\ne8 de e8 ff ff\n44 8b 30\n31 db\n31 ff\nbe 55 20 41 00\nba 05 00 00 00\ne8 08 ea ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 fe\ne8 98 8a 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n48 89 ea\ne8 36 ee ff ff\ne9 b3 00 00 00\n4c 89 ff\n4c 89 f6\n48 89 da\ne8 03 03 00 00\n84 c0\n0f 84 9b 00 00 00\n80 3d a4 4a 21 00 01\n75 0c\n4c 89 f7\ne8 3a 03 00 00\n84 c0\n74 3d\n80 7b 1e 00\n74 2b\n8a 05 8a 4a 21 00\n84 c0\n75 10\nb8 00 f0 00 00\n23 44 24 20\n3d 00 80 00 00\n74 11\n48 8d 7c 24 08\n4c 89 f6\ne8 19 04 00 00\n84 c0\n74 55\n4c 89 f7\ne8 9d 04 00 00\n88 c3\neb 4b\n4c 89 f7\ne8 41 e8 ff ff\n85 c0\n74 3d\ne8 28 e8 ff ff\n44 8b 38\n31 db\n31 ff\nbe 64 20 41 00\nba 05 00 00 00\ne8 52 e9 ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 e2 89 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n44 89 fe\ne9 42 ff ff ff\n31 db\n89 d8\n48 81 c4 98 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p341
S'.text:00000000004039d0\n.text:00000000004039d1\n.text:00000000004039d3\n.text:00000000004039d5\n.text:00000000004039d6\n.text:00000000004039dd\n.text:00000000004039e0\n.text:00000000004039e3\n.text:00000000004039e6\n.text:00000000004039ea\n.text:00000000004039ec\n.text:00000000004039f1\n.text:00000000004039f4\n.text:00000000004039f9\n.text:00000000004039fb\n.text:00000000004039fd\n.text:0000000000403a02\n.text:0000000000403a05\n.text:0000000000403a07\n.text:0000000000403a09\n.text:0000000000403a0e\n.text:0000000000403a13\n.text:0000000000403a18\n.text:0000000000403a1b\n.text:0000000000403a20\n.text:0000000000403a23\n.text:0000000000403a28\n.text:0000000000403a2b\n.text:0000000000403a2d\n.text:0000000000403a2f\n.text:0000000000403a32\n.text:0000000000403a35\n.text:0000000000403a3a\n.text:0000000000403a3f\n.text:0000000000403a42\n.text:0000000000403a45\n.text:0000000000403a48\n.text:0000000000403a4d\n.text:0000000000403a4f\n.text:0000000000403a55\n.text:0000000000403a5c\n.text:0000000000403a5e\n.text:0000000000403a61\n.text:0000000000403a66\n.text:0000000000403a68\n.text:0000000000403a6a\n.text:0000000000403a6e\n.text:0000000000403a70\n.text:0000000000403a76\n.text:0000000000403a78\n.text:0000000000403a7a\n.text:0000000000403a7f\n.text:0000000000403a83\n.text:0000000000403a88\n.text:0000000000403a8a\n.text:0000000000403a8f\n.text:0000000000403a92\n.text:0000000000403a97\n.text:0000000000403a99\n.text:0000000000403a9b\n.text:0000000000403a9e\n.text:0000000000403aa3\n.text:0000000000403aa5\n.text:0000000000403aa7\n.text:0000000000403aaa\n.text:0000000000403aaf\n.text:0000000000403ab1\n.text:0000000000403ab3\n.text:0000000000403ab8\n.text:0000000000403abb\n.text:0000000000403abd\n.text:0000000000403abf\n.text:0000000000403ac4\n.text:0000000000403ac9\n.text:0000000000403ace\n.text:0000000000403ad1\n.text:0000000000403ad6\n.text:0000000000403ad9\n.text:0000000000403ade\n.text:0000000000403ae1\n.text:0000000000403ae6\n.text:0000000000403ae8\n.text:0000000000403aeb\n.text:0000000000403af0\n.text:0000000000403af2\n.text:0000000000403af4\n.text:0000000000403afb\n.text:0000000000403afc\n.text:0000000000403afe\n.text:0000000000403b00\n.text:0000000000403b01\n'
p342
tp343
sS'quotearg_n_custom_mem'
p344
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p345
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p346
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x0061a990]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x0061a980]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0061a970]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0061a960]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x0040b360\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x0040c1f0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p347
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 77 e3 20 00\n48 89 44 24 30\n0f 10 05 5b e3 20 00\n0f 29 44 24 20\n0f 10 05 3f e3 20 00\n0f 29 44 24 10\n0f 10 05 23 e3 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p348
S'.text:000000000040c600\n.text:000000000040c601\n.text:000000000040c603\n.text:000000000040c605\n.text:000000000040c606\n.text:000000000040c60a\n.text:000000000040c60d\n.text:000000000040c610\n.text:000000000040c612\n.text:000000000040c619\n.text:000000000040c61e\n.text:000000000040c625\n.text:000000000040c62a\n.text:000000000040c631\n.text:000000000040c636\n.text:000000000040c63d\n.text:000000000040c641\n.text:000000000040c644\n.text:000000000040c647\n.text:000000000040c64c\n.text:000000000040c64e\n.text:000000000040c651\n.text:000000000040c654\n.text:000000000040c657\n.text:000000000040c65c\n.text:000000000040c660\n.text:000000000040c661\n.text:000000000040c663\n.text:000000000040c665\n.text:000000000040c666\n'
p349
tp350
sS'_init'
p351
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p352
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00617ff8;\u000a  if (PTR___gmon_start___00617ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00617ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p353
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00617ff8]\nTEST RAX,RAX\nJZ 0x00402242\nCALL RAX\nADD RSP,0x8\nRET\n'
p354
S'48 83 ec 08\n48 8b 05 bd 5d 21 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p355
S'.init:0000000000402230\n.init:0000000000402234\n.init:000000000040223b\n.init:000000000040223e\n.init:0000000000402240\n.init:0000000000402242\n.init:0000000000402246\n'
p356
tp357
sS'get_stat_birthtime'
p358
(S'\n__stdcall get_stat_birthtime(stat * st)\n'
p359
V\u000atimespec get_stat_birthtime(stat *st)\u000a\u000a{\u000a  return (timespec)CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\u000a}\u000a\u000a
p360
S'MOV RAX,-0x1\nMOV RDX,-0x1\nRET\n'
p361
S'48 c7 c0 ff ff ff ff\n48 c7 c2 ff ff ff ff\nc3\n'
p362
S'.text:000000000040d760\n.text:000000000040d767\n.text:000000000040d76e\n'
p363
tp364
sS'realloc'
p365
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p366
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_006182e8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x006182e8]\n'
p368
S'ff 25 e2 5a 21 00\n'
p369
S'.plt:0000000000402800\n'
p370
tp371
sS'strmode'
p372
(S'\n__stdcall strmode(char * str)\n'
p373
V\u000avoid strmode(char *str)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  byte bVar3;\u000a  byte bVar4;\u000a  byte bVar5;\u000a  char cVar6;\u000a  uint uVar7;\u000a  undefined in_SIL;\u000a  char cVar8;\u000a  undefined7 in_register_00000031;\u000a  char cVar9;\u000a  byte bVar10;\u000a  \u000a  pcVar1 = (char *)CONCAT71(in_register_00000031,in_SIL);\u000a  cVar2 = ftypelet();\u000a  *pcVar1 = cVar2;\u000a  cVar8 = 'r';\u000a  cVar2 = 'r';\u000a  if (((ulong)str & 0x100) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  pcVar1[1] = cVar2;\u000a  uVar7 = (uint)((ulong)str & 0xffffffff);\u000a  bVar3 = (byte)((ulong)str & 0xffffffff);\u000a  pcVar1[2] = ((char)bVar3 >> 7 & 0x4aU) + 0x2d;\u000a  bVar10 = 0x78;\u000a  bVar4 = 0x78;\u000a  if (((ulong)str & 0x40) == 0) {\u000a    bVar4 = 0x2d;\u000a  }\u000a  bVar5 = (byte)((uVar7 & 0x40) >> 1) | 0x53;\u000a  if (((ulong)str & 0x800) == 0) {\u000a    bVar5 = bVar4;\u000a  }\u000a  pcVar1[3] = bVar5;\u000a  cVar2 = 'r';\u000a  if (((ulong)str & 0x20) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  pcVar1[4] = cVar2;\u000a  cVar6 = 'w';\u000a  cVar2 = 'w';\u000a  if (((ulong)str & 0x10) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  pcVar1[5] = cVar2;\u000a  cVar2 = 'x';\u000a  if (((ulong)str & 8) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  cVar9 = (bVar3 & 8) * 4 + 'S';\u000a  if (((ulong)str & 0x400) == 0) {\u000a    cVar9 = cVar2;\u000a  }\u000a  pcVar1[6] = cVar9;\u000a  if (((ulong)str & 4) == 0) {\u000a    cVar8 = '-';\u000a  }\u000a  pcVar1[7] = cVar8;\u000a  if (((ulong)str & 2) == 0) {\u000a    cVar6 = '-';\u000a  }\u000a  pcVar1[8] = cVar6;\u000a  if (((ulong)str & 1) == 0) {\u000a    bVar10 = 0x2d;\u000a  }\u000a  if (((ulong)str & 0x200) != 0) {\u000a    bVar10 = (byte)((uVar7 & 1) << 5) | 0x54;\u000a  }\u000a  pcVar1[9] = bVar10;\u000a  pcVar1[10] = ' ';\u000a  pcVar1[0xb] = 0;\u000a  return;\u000a}\u000a\u000a
p374
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV EBX,EDI\nCALL 0x00409610\nMOV byte ptr [R14],AL\nMOV AL,BH\nTEST AL,0x1\nMOV SIL,0x72\nMOV CL,0x72\nJNZ 0x0040955e\nMOV CL,0x2d\nMOV byte ptr [R14 + 0x1],CL\nMOV ECX,EBX\nSAR CL,0x7\nAND CL,0x4a\nADD CL,0x2d\nMOV byte ptr [R14 + 0x2],CL\nMOV ECX,EBX\nAND ECX,0x40\nMOV EDX,ECX\nSHR EDX,1\nOR EDX,0x53\nTEST ECX,ECX\nMOV R8B,0x78\nMOV CL,0x78\nJNZ 0x00409588\nMOV CL,0x2d\nTEST AL,0x8\nJNZ 0x0040958e\nMOV DL,CL\nMOV byte ptr [R14 + 0x3],DL\nTEST BL,0x20\nMOV CL,0x72\nJNZ 0x0040959b\nMOV CL,0x2d\nMOV byte ptr [R14 + 0x4],CL\nTEST BL,0x10\nMOV DL,0x77\nMOV CL,0x77\nJNZ 0x004095aa\nMOV CL,0x2d\nMOV byte ptr [R14 + 0x5],CL\nMOV ECX,EBX\nAND ECX,0x8\nLEA EDI,[0x53 + RCX*0x4]\nMOV CL,0x78\nJNZ 0x004095c0\nMOV CL,0x2d\nTEST AL,0x4\nJNZ 0x004095c7\nMOV DIL,CL\nMOV byte ptr [R14 + 0x6],DIL\nTEST BL,0x4\nJNZ 0x004095d3\nMOV SIL,0x2d\nMOV byte ptr [R14 + 0x7],SIL\nTEST BL,0x2\nJNZ 0x004095de\nMOV DL,0x2d\nMOV byte ptr [R14 + 0x8],DL\nAND EBX,0x1\nJNZ 0x004095ea\nMOV R8B,0x2d\nTEST AL,0x2\nJZ 0x004095f7\nSHL EBX,0x5\nOR EBX,0x54\nMOV R8D,EBX\nMOV byte ptr [R14 + 0x9],R8B\nMOV byte ptr [R14 + 0xa],0x20\nMOV byte ptr [R14 + 0xb],0x0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p375
S'41 56\n53\n50\n49 89 f6\n89 fb\ne8 c2 00 00 00\n41 88 06\n88 f8\na8 01\n40 b6 72\nb1 72\n75 02\nb1 2d\n41 88 4e 01\n89 d9\nc0 f9 07\n80 e1 4a\n80 c1 2d\n41 88 4e 02\n89 d9\n83 e1 40\n89 ca\nd1 ea\n83 ca 53\n85 c9\n41 b0 78\nb1 78\n75 02\nb1 2d\na8 08\n75 02\n88 ca\n41 88 56 03\nf6 c3 20\nb1 72\n75 02\nb1 2d\n41 88 4e 04\nf6 c3 10\nb2 77\nb1 77\n75 02\nb1 2d\n41 88 4e 05\n89 d9\n83 e1 08\n8d 3c 8d 53 00 00 00\nb1 78\n75 02\nb1 2d\na8 04\n75 03\n40 88 cf\n41 88 7e 06\nf6 c3 04\n75 03\n40 b6 2d\n41 88 76 07\nf6 c3 02\n75 02\nb2 2d\n41 88 56 08\n83 e3 01\n75 03\n41 b0 2d\na8 02\n74 09\nc1 e3 05\n83 cb 54\n41 89 d8\n45 88 46 09\n41 c6 46 0a 20\n41 c6 46 0b 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p376
S'.text:0000000000409540\n.text:0000000000409542\n.text:0000000000409543\n.text:0000000000409544\n.text:0000000000409547\n.text:0000000000409549\n.text:000000000040954e\n.text:0000000000409551\n.text:0000000000409553\n.text:0000000000409555\n.text:0000000000409558\n.text:000000000040955a\n.text:000000000040955c\n.text:000000000040955e\n.text:0000000000409562\n.text:0000000000409564\n.text:0000000000409567\n.text:000000000040956a\n.text:000000000040956d\n.text:0000000000409571\n.text:0000000000409573\n.text:0000000000409576\n.text:0000000000409578\n.text:000000000040957a\n.text:000000000040957d\n.text:000000000040957f\n.text:0000000000409582\n.text:0000000000409584\n.text:0000000000409586\n.text:0000000000409588\n.text:000000000040958a\n.text:000000000040958c\n.text:000000000040958e\n.text:0000000000409592\n.text:0000000000409595\n.text:0000000000409597\n.text:0000000000409599\n.text:000000000040959b\n.text:000000000040959f\n.text:00000000004095a2\n.text:00000000004095a4\n.text:00000000004095a6\n.text:00000000004095a8\n.text:00000000004095aa\n.text:00000000004095ae\n.text:00000000004095b0\n.text:00000000004095b3\n.text:00000000004095ba\n.text:00000000004095bc\n.text:00000000004095be\n.text:00000000004095c0\n.text:00000000004095c2\n.text:00000000004095c4\n.text:00000000004095c7\n.text:00000000004095cb\n.text:00000000004095ce\n.text:00000000004095d0\n.text:00000000004095d3\n.text:00000000004095d7\n.text:00000000004095da\n.text:00000000004095dc\n.text:00000000004095de\n.text:00000000004095e2\n.text:00000000004095e5\n.text:00000000004095e7\n.text:00000000004095ea\n.text:00000000004095ec\n.text:00000000004095ee\n.text:00000000004095f1\n.text:00000000004095f4\n.text:00000000004095f7\n.text:00000000004095fb\n.text:0000000000409600\n.text:0000000000409605\n.text:0000000000409609\n.text:000000000040960a\n.text:000000000040960c\n'
p377
tp378
sS'matchpathcon'
p379
(S'\n__stdcall matchpathcon(char * file, security_context_t * con)\n'
p380
V\u000aint matchpathcon(char *file,security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p381
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p382
S'50\ne8 7a 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p383
S'.text:000000000040d560\n.text:000000000040d561\n.text:000000000040d566\n.text:000000000040d56c\n.text:000000000040d571\n.text:000000000040d572\n'
p384
tp385
sS'cached_umask'
p386
(S'\n__stdcall cached_umask()\n'
p387
V\u000amode_t cached_umask(void)\u000a\u000a{\u000a  mode_t mask;\u000a  \u000a  if (mask == 0xffffffff) {\u000a    mask = umask(0);\u000a    umask(mask);\u000a  }\u000a  return mask;\u000a}\u000a\u000a
p388
S'CMP dword ptr [0x0061840c],-0x1\nJNZ 0x00405f52\nPUSH RAX\nXOR EDI,EDI\nCALL 0x004026c0\nMOV dword ptr [0x0061840c],EAX\nMOV EDI,EAX\nCALL 0x004026c0\nADD RSP,0x8\nMOV EAX,dword ptr [0x0061840c]\nRET\n'
p389
S'83 3d d5 24 21 00 ff\n75 19\n50\n31 ff\ne8 7f c7 ff ff\n89 05 c5 24 21 00\n89 c7\ne8 72 c7 ff ff\n48 83 c4 08\n8b 05 b4 24 21 00\nc3\n'
p390
S'.text:0000000000405f30\n.text:0000000000405f37\n.text:0000000000405f39\n.text:0000000000405f3a\n.text:0000000000405f3c\n.text:0000000000405f41\n.text:0000000000405f47\n.text:0000000000405f49\n.text:0000000000405f4e\n.text:0000000000405f52\n.text:0000000000405f58\n'
p391
tp392
sS'__mempcpy_chk'
p393
(S'\n__stdcall __mempcpy_chk()\n'
p394
V\u000avoid __mempcpy_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___mempcpy_chk_00618048)();\u000a  return;\u000a}\u000a\u000a
p395
S'JMP qword ptr [0x00618048]\n'
p396
S'ff 25 82 5d 21 00\n'
p397
S'.plt:00000000004022c0\n'
p398
tp399
sS'strlen'
p400
(S'\n__stdcall strlen(char * __s)\n'
p401
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_00618108)();\u000a  return sVar1;\u000a}\u000a\u000a
p402
S'JMP qword ptr [0x00618108]\n'
p403
S'ff 25 c2 5c 21 00\n'
p404
S'.plt:0000000000402440\n'
p405
tp406
sS'memcmp'
p407
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p408
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_006181e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p409
S'JMP qword ptr [0x006181e0]\n'
p410
S'ff 25 ea 5b 21 00\n'
p411
S'.plt:00000000004025f0\n'
p412
tp413
sS'hash_free'
p414
(S'\n__stdcall hash_free(Hash_table * table)\n'
p415
V\u000avoid hash_free(Hash_table *table)\u000a\u000a{\u000a  hash_entry *phVar1;\u000a  hash_entry *__ptr;\u000a  hash_entry *__ptr_00;\u000a  \u000a  if (((table->data_freer != (void (*)(void *))0x0) && (table->n_entries != 0)) &&\u000a     (__ptr_00 = table->bucket, __ptr_00 < table->bucket_limit)) {\u000a    do {\u000a      __ptr = __ptr_00;\u000a      if (__ptr_00->data != (void *)0x0) {\u000a        while (__ptr != (hash_entry *)0x0) {\u000a          (*table->data_freer)(__ptr->data);\u000a          __ptr = __ptr->next;\u000a        }\u000a      }\u000a      __ptr_00 = __ptr_00 + 1;\u000a    } while (__ptr_00 < table->bucket_limit);\u000a  }\u000a  __ptr_00 = table->bucket;\u000a  if (__ptr_00 < table->bucket_limit) {\u000a    do {\u000a      __ptr = __ptr_00->next;\u000a      while (__ptr != (hash_entry *)0x0) {\u000a        phVar1 = __ptr->next;\u000a        free(__ptr);\u000a        __ptr = phVar1;\u000a      }\u000a      __ptr_00 = __ptr_00 + 1;\u000a    } while (__ptr_00 < table->bucket_limit);\u000a  }\u000a  __ptr_00 = table->free_entry_list;\u000a  while (__ptr_00 != (hash_entry *)0x0) {\u000a    __ptr = __ptr_00->next;\u000a    free(__ptr_00);\u000a    __ptr_00 = __ptr;\u000a  }\u000a  free(table->bucket);\u000a  free(table);\u000a  return;\u000a}\u000a\u000a
p416
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RDI\nCMP qword ptr [R15 + 0x40],0x0\nJZ 0x00409fa2\nCMP qword ptr [R15 + 0x20],0x0\nJZ 0x00409fa2\nMOV R14,qword ptr [R15]\nCMP R14,qword ptr [R15 + 0x8]\nJC 0x00409f7a\nJMP 0x00409fa2\nADD R14,0x10\nCMP R14,qword ptr [R15 + 0x8]\nJNC 0x00409fa2\nCMP qword ptr [R14],0x0\nJZ 0x00409f70\nTEST R14,R14\nJZ 0x00409f70\nMOV RBX,R14\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX]\nCALL qword ptr [R15 + 0x40]\nMOV RBX,qword ptr [RBX + 0x8]\nTEST RBX,RBX\nJNZ 0x00409f90\nJMP 0x00409f70\nMOV R14,qword ptr [R15]\nCMP R14,qword ptr [R15 + 0x8]\nJC 0x00409fba\nJMP 0x00409fe3\nADD R14,0x10\nCMP R14,qword ptr [R15 + 0x8]\nJNC 0x00409fe3\nMOV RDI,qword ptr [R14 + 0x8]\nTEST RDI,RDI\nJZ 0x00409fb0\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RBX,qword ptr [RDI + 0x8]\nCALL 0x00402290\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x00409fd0\nJMP 0x00409fb0\nMOV RDI,qword ptr [R15 + 0x48]\nTEST RDI,RDI\nJZ 0x0040a001\nNOP dword ptr [RAX]\nMOV RBX,qword ptr [RDI + 0x8]\nCALL 0x00402290\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x00409ff0\nMOV RDI,qword ptr [R15]\nCALL 0x00402290\nMOV RDI,R15\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00402290\n'
p417
S'41 57\n41 56\n53\n49 89 ff\n49 83 7f 40 00\n74 53\n49 83 7f 20 00\n74 4c\n4d 8b 37\n4d 3b 77 08\n72 1b\neb 41\n49 83 c6 10\n4d 3b 77 08\n73 28\n49 83 3e 00\n74 f0\n4d 85 f6\n74 eb\n4c 89 f3\n0f 1f 84 00 00 00 00 00\n48 8b 3b\n41 ff 57 40\n48 8b 5b 08\n48 85 db\n75 f0\neb ce\n4d 8b 37\n4d 3b 77 08\n72 0f\neb 36\n49 83 c6 10\n4d 3b 77 08\n73 29\n49 8b 7e 08\n48 85 ff\n74 ed\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 5f 08\ne8 b7 82 ff ff\n48 85 db\n48 89 df\n75 ef\neb cd\n49 8b 7f 48\n48 85 ff\n74 15\n0f 1f 40 00\n48 8b 5f 08\ne8 97 82 ff ff\n48 85 db\n48 89 df\n75 ef\n49 8b 3f\ne8 87 82 ff ff\n4c 89 ff\n5b\n41 5e\n41 5f\ne9 7a 82 ff ff\n'
p418
S'.text:0000000000409f40\n.text:0000000000409f42\n.text:0000000000409f44\n.text:0000000000409f45\n.text:0000000000409f48\n.text:0000000000409f4d\n.text:0000000000409f4f\n.text:0000000000409f54\n.text:0000000000409f56\n.text:0000000000409f59\n.text:0000000000409f5d\n.text:0000000000409f5f\n.text:0000000000409f70\n.text:0000000000409f74\n.text:0000000000409f78\n.text:0000000000409f7a\n.text:0000000000409f7e\n.text:0000000000409f80\n.text:0000000000409f83\n.text:0000000000409f85\n.text:0000000000409f88\n.text:0000000000409f90\n.text:0000000000409f93\n.text:0000000000409f97\n.text:0000000000409f9b\n.text:0000000000409f9e\n.text:0000000000409fa0\n.text:0000000000409fa2\n.text:0000000000409fa5\n.text:0000000000409fa9\n.text:0000000000409fab\n.text:0000000000409fb0\n.text:0000000000409fb4\n.text:0000000000409fb8\n.text:0000000000409fba\n.text:0000000000409fbe\n.text:0000000000409fc1\n.text:0000000000409fc3\n.text:0000000000409fd0\n.text:0000000000409fd4\n.text:0000000000409fd9\n.text:0000000000409fdc\n.text:0000000000409fdf\n.text:0000000000409fe1\n.text:0000000000409fe3\n.text:0000000000409fe7\n.text:0000000000409fea\n.text:0000000000409fec\n.text:0000000000409ff0\n.text:0000000000409ff4\n.text:0000000000409ff9\n.text:0000000000409ffc\n.text:0000000000409fff\n.text:000000000040a001\n.text:000000000040a004\n.text:000000000040a009\n.text:000000000040a00c\n.text:000000000040a00d\n.text:000000000040a00f\n.text:000000000040a011\n'
p419
tp420
sS'futimesat'
p421
(S'\n__stdcall futimesat(int __fd, char * __file, timeval * __tvp)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint futimesat(int __fd,char *__file,timeval *__tvp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_futimesat_006183d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x006183d0]\n'
p424
S'ff 25 fa 59 21 00\n'
p425
S'.plt:00000000004029d0\n'
p426
tp427
sS'_exit'
p428
(S'\n__stdcall _exit(int __status)\n'
p429
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_00618070)();\u000a  return;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x00618070]\n'
p431
S'ff 25 5a 5d 21 00\n'
p432
S'.plt:0000000000402310\n'
p433
tp434
sS'copy_internal'
p435
(S'\n__stdcall copy_internal(char * src_name, char * dst_name, stat * parent, dir_list * ancestors, cp_options * x, _Bool * first_dir_created_per_command_line_arg, _Bool * copy_into_self, _Bool * rename_succeeded)\n'
p436
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000a_Bool copy_internal(char *src_name,char *dst_name,stat *parent,dir_list *ancestors,cp_options *x,\u000a                   _Bool *first_dir_created_per_command_line_arg,_Bool *copy_into_self,\u000a                   _Bool *rename_succeeded)\u000a\u000a{\u000a  undefined8 ht;\u000a  long lVar1;\u000a  ulong uVar2;\u000a  cp_options *pcVar3;\u000a  undefined4 uVar4;\u000a  _Bool _Var5;\u000a  _Bool _Var6;\u000a  int iVar7;\u000a  uint uVar8;\u000a  int iVar9;\u000a  mode_t mVar10;\u000a  uint *puVar11;\u000a  undefined8 ht_00;\u000a  char *file;\u000a  char *file_name;\u000a  undefined7 extraout_var;\u000a  size_t sVar12;\u000a  int *piVar13;\u000a  undefined *backup_dst_name;\u000a  stat *stats;\u000a  dir_list *pdVar14;\u000a  ulong *puVar15;\u000a  ulong *puVar16;\u000a  ulong *puVar17;\u000a  ulong *puVar18;\u000a  ulong *puVar19;\u000a  ulong *__new;\u000a  ulong *puVar20;\u000a  char cVar21;\u000a  ulong uVar22;\u000a  char cVar23;\u000a  undefined4 uVar24;\u000a  undefined *in_stack_00000018;\u000a  undefined *in_stack_00000020;\u000a  ulong uStack720;\u000a  ulong local_2c8;\u000a  __ino_t local_2c0;\u000a  _Bool local_238_00;\u000a  ulong local_238;\u000a  timespec local_238_01;\u000a  timespec timespec [2];\u000a  stat local_1a0;\u000a  stat local_110;\u000a  undefined8 local_80;\u000a  dir_list *local_78;\u000a  undefined8 local_70;\u000a  undefined *local_68;\u000a  undefined *local_60;\u000a  uint local_58;\u000a  uint local_54;\u000a  undefined8 local_50;\u000a  undefined8 local_48;\u000a  char *local_40;\u000a  byte local_31;\u000a  \u000a  puVar16 = &uStack720 + 1;\u000a  puVar18 = &uStack720 + 1;\u000a  puVar19 = &uStack720 + 1;\u000a  __new = &uStack720 + 1;\u000a  puVar15 = &uStack720 + 1;\u000a  puVar20 = &uStack720 + 1;\u000a  puVar17 = &uStack720 + 1;\u000a  local_31 = (byte)parent;\u000a  if ((in_stack_00000020 != (undefined *)0x0) &&\u000a     (first_dir_created_per_command_line_arg[0x18] != false)) {\u000a    *in_stack_00000020 = 0;\u000a  }\u000a  *in_stack_00000018 = 0;\u000a  if (*(int *)(first_dir_created_per_command_line_arg + 4) == 2) {\u000a    uStack720 = 0x4044a9;\u000a    backup_dst_name = in_stack_00000018;\u000a    iVar7 = lstat(src_name,(stat *)&local_110);\u000a    local_58 = local_110.st_mode;\u000a  }\u000a  else {\u000a    uStack720 = 0x4044be;\u000a    backup_dst_name = in_stack_00000018;\u000a    iVar7 = stat(src_name,(stat *)&local_110);\u000a    local_58 = local_110.st_mode;\u000a  }\u000a  if (iVar7 != 0) {\u000a    uStack720 = 0x4044c7;\u000a    puVar11 = (uint *)__errno_location();\u000a    uVar8 = *puVar11;\u000a    uStack720 = 0x4044de;\u000a    ht_00 = dcgettext(0,"cannot stat %s",5);\u000a    uStack720 = 0x4044ee;\u000a    file = quotearg_style((char *)0x4);\u000a    uVar22 = (ulong)uVar8;\u000a    goto LAB_004044fb;\u000a  }\u000a  uVar8 = local_58 & 0xf000;\u000a  local_50 = (ulong)uVar8;\u000a  if ((uVar8 == 0x4000) && (first_dir_created_per_command_line_arg[0x29] == false)) {\u000a    uStack720 = 0x4046fc;\u000a    local_78 = ancestors;\u000a    local_48 = x;\u000a    ht_00 = dcgettext(0,"omitting directory %s",5);\u000a    uStack720 = 0x40470c;\u000a    file = quotearg_style((char *)0x4);\u000a    uVar22 = 0;\u000a    puVar16 = &uStack720 + 1;\u000a    goto LAB_004044fb;\u000a  }\u000a  local_110.st_mode = local_58;\u000a  local_78 = ancestors;\u000a  local_48 = x;\u000a  if ((byte)copy_into_self != 0) {\u000a    local_110.st_mode = local_58;\u000a    local_78 = ancestors;\u000a    local_48 = x;\u000a    if ((uVar8 != 0x4000) &&\u000a       (local_110.st_mode = local_58, local_78 = ancestors, local_48 = x,\u000a       *(int *)first_dir_created_per_command_line_arg == 0)) {\u000a      uStack720 = 0x40456b;\u000a      local_110.st_mode = local_58;\u000a      local_78 = ancestors;\u000a      local_48 = x;\u000a      _Var5 = seen_file(*(Hash_table **)(first_dir_created_per_command_line_arg + 0x40),src_name,\u000a                        &local_110);\u000a      if (_Var5 != false) {\u000a        uStack720 = 0x404580;\u000a        ht_00 = dcgettext(0,"warning: source file %s specified more than once",5);\u000a        uStack720 = 0x404590;\u000a        file = quotearg_style((char *)0x4);\u000a        uStack720 = 0x4045a1;\u000a        error(0,0,ht_00,file);\u000a        return true;\u000a      }\u000a    }\u000a    uStack720 = 0x4045bd;\u000a    record_file(*(Hash_table **)(first_dir_created_per_command_line_arg + 0x40),src_name,&local_110)\u000a    ;\u000a  }\u000a  uStack720 = 0x4045cb;\u000a  _Var5 = should_dereference((cp_options *)first_dir_created_per_command_line_arg);\u000a  if (local_31 == 0) {\u000a    if (((((int)local_50 != 0x8000) &&\u000a         (((first_dir_created_per_command_line_arg[0x14] == false || ((int)local_50 == 0xa000)) ||\u000a          ((short)local_50 == 0x4000)))) ||\u000a        (((first_dir_created_per_command_line_arg[0x18] != false ||\u000a          (first_dir_created_per_command_line_arg[0x2b] != false)) ||\u000a         (first_dir_created_per_command_line_arg[0x17] != false)))) ||\u000a       ((*(int *)first_dir_created_per_command_line_arg != 0 ||\u000a        (first_dir_created_per_command_line_arg[0x15] != false)))) {\u000a      uStack720 = 0x404749;\u000a      local_40 = dst_name;\u000a      iVar7 = lstat(dst_name,(stat *)&local_1a0);\u000a      backup_dst_name = (undefined *)CONCAT71((int7)((ulong)backup_dst_name >> 8),1);\u000a      if (iVar7 == 0) goto LAB_0040476b;\u000aLAB_0040474f:\u000a      local_68 = (undefined *)((ulong)local_68 & 0xffffffffffffff00 | (ulong)_Var5);\u000a      uStack720 = 0x404757;\u000a      puVar11 = (uint *)__errno_location();\u000a      uVar8 = *puVar11;\u000a      if (uVar8 == 2) {\u000a        local_31 = 1;\u000a        goto LAB_004045e2;\u000a      }\u000a      file = "cannot stat %s";\u000a      puVar17 = &uStack720 + 1;\u000aLAB_004047e7:\u000a      *(undefined8 *)((undefined *)puVar17 + -8) = 0x4047f1;\u000a      ht_00 = dcgettext(0,file,5);\u000a      *(undefined8 *)((undefined *)puVar17 + -8) = 0x404802;\u000a      file = quotearg_style(4,((undefined *)puVar17)[-8]);\u000a      uVar22 = (ulong)uVar8;\u000aLAB_0040480b:\u000a      puVar16 = puVar17;\u000a      goto LAB_004044fb;\u000a    }\u000a    uStack720 = 0x4046dd;\u000a    local_40 = dst_name;\u000a    iVar7 = stat(dst_name,(stat *)&local_1a0);\u000a    backup_dst_name = (undefined *)0x0;\u000a    if (iVar7 != 0) goto LAB_0040474f;\u000aLAB_0040476b:\u000a    uStack720 = 0x404792;\u000a    local_60 = backup_dst_name;\u000a    _Var6 = same_file_ok(src_name,&local_110,dst_name,&local_1a0,\u000a                         (cp_options *)first_dir_created_per_command_line_arg,\u000a                         (_Bool *)&stack0xfffffffffffffdc8);\u000a    if (_Var6 == false) {\u000a      uStack720 = 0x404827;\u000a      ht_00 = dcgettext(0,"%s and %s are the same file",5);\u000a      uStack720 = 0x404839;\u000a      file = quotearg_n_style((char *)0x0);\u000aLAB_00404849:\u000a      *(undefined8 *)((undefined *)puVar18 + -8) = 0x40484e;\u000a      file_name = quotearg_n_style(1,((undefined *)puVar18)[-8]);\u000a      puVar19 = puVar18;\u000aLAB_0040485d:\u000a      *(undefined8 *)((undefined *)puVar19 + -8) = 0x404865;\u000a      error(0,0,ht_00,file,file_name);\u000a      return false;\u000a    }\u000a    if (((int)local_50 == 0x4000) || (first_dir_created_per_command_line_arg[0x2c] == false)) {\u000aLAB_004051c0:\u000a      if (first_dir_created_per_command_line_arg[0x18] == false) {\u000a        iVar7 = (int)local_50;\u000a        if (iVar7 == 0x4000) goto LAB_00405257;\u000a        if (*(int *)(first_dir_created_per_command_line_arg + 8) == 2) {\u000a          return true;\u000a        }\u000a        if (*(int *)(first_dir_created_per_command_line_arg + 8) != 3) goto LAB_00405257;\u000a        uStack720 = 0x40523c;\u000a        _Var6 = overwrite_ok((cp_options *)first_dir_created_per_command_line_arg,local_40,\u000a                             &local_1a0);\u000a        if (_Var6 == false) {\u000a          return true;\u000a        }\u000a        file = local_40;\u000a      }\u000a      else {\u000a        uStack720 = 0x4051de;\u000a        _Var6 = abandon_move((cp_options *)first_dir_created_per_command_line_arg,dst_name,\u000a                             &local_1a0);\u000a        iVar7 = (int)local_50;\u000a        if (_Var6 != false) {\u000a          if (in_stack_00000020 == (undefined *)0x0) {\u000a            return true;\u000a          }\u000a          *in_stack_00000020 = 1;\u000a          return true;\u000a        }\u000aLAB_00405257:\u000a        file = local_40;\u000a      }\u000a      if (local_238_00 != false) {\u000a        return true;\u000a      }\u000a      local_40 = file;\u000a      if ((local_1a0.st_mode & 0xf000) != 0x4000) {\u000a        if ((iVar7 == 0x4000) &&\u000a           ((first_dir_created_per_command_line_arg[0x18] == false ||\u000a            (*(int *)first_dir_created_per_command_line_arg == 0)))) {\u000a          file_name = "cannot overwrite non-directory %s with directory %s";\u000a          local_40 = file;\u000aLAB_0040548b:\u000a          uStack720 = 0x405495;\u000a          ht_00 = dcgettext(0,file_name,5);\u000a          uStack720 = 0x4054a7;\u000a          file = quotearg_n_style((char *)0x0);\u000a          uStack720 = 0x4054bc;\u000a          file_name = quotearg_n_style((char *)0x1);\u000a          puVar19 = &uStack720 + 1;\u000a          goto LAB_0040485d;\u000a        }\u000a        local_40 = file;\u000a        if (((byte)copy_into_self != 0) &&\u000a           (local_40 = file, *(int *)first_dir_created_per_command_line_arg != 3)) {\u000a          uStack720 = 0x4052be;\u000a          local_40 = file;\u000a          _Var6 = seen_file(*(Hash_table **)(first_dir_created_per_command_line_arg + 0x38),file,\u000a                            &local_1a0);\u000a          if (_Var6 != false) {\u000a            file_name = "will not overwrite just-created %s with %s";\u000a            goto LAB_0040548b;\u000a          }\u000a        }\u000a      }\u000a      if (((iVar7 == 0x4000) || ((local_1a0.st_mode & 0xf000) != 0x4000)) ||\u000a         ((first_dir_created_per_command_line_arg[0x18] != false &&\u000a          (*(int *)first_dir_created_per_command_line_arg != 0)))) {\u000a        if ((((first_dir_created_per_command_line_arg[0x18] != false) &&\u000a             ((local_110.st_mode & 0xf000) == 0x4000)) && ((local_1a0.st_mode & 0xf000) != 0x4000))\u000a           && (*(int *)first_dir_created_per_command_line_arg == 0)) {\u000a          uStack720 = 0x40570f;\u000a          ht_00 = dcgettext(0,"cannot move directory onto non-directory: %s -> %s",5);\u000a          uStack720 = 0x405721;\u000a          file = quotearg_n_style_colon((char *)0x0);\u000a          uStack720 = 0x405733;\u000a          file_name = quotearg_n_style_colon((char *)0x0);\u000a          goto LAB_0040485d;\u000a        }\u000a        local_68 = (undefined *)((ulong)local_68 & 0xffffffffffffff00 | (ulong)_Var5);\u000a        if (*(int *)first_dir_created_per_command_line_arg != 0) {\u000a          uStack720 = 0x405351;\u000a          file_name = last_component(src_name);\u000a          uStack720 = 0x405359;\u000a          _Var5 = dot_or_dotdot(file_name);\u000a          if ((_Var5 == false) &&\u000a             ((first_dir_created_per_command_line_arg[0x18] != false ||\u000a              ((local_1a0.st_mode & 0xf000) != 0x4000)))) {\u000a            uStack720 = 0x405401;\u000a            local_70 = find_backup_file_name(file);\u000a            uStack720 = 0x405410;\u000a            iVar9 = strcmp(local_70,src_name);\u000a            file = local_70;\u000a            if (iVar9 == 0) {\u000a              file = "backing up %s would destroy source;  %s not copied";\u000a              if (first_dir_created_per_command_line_arg[0x18] != false) {\u000a                file = "backing up %s would destroy source;  %s not moved";\u000a              }\u000a              uStack720 = 0x4056af;\u000a              ht_00 = dcgettext(0,file,5);\u000a              uStack720 = 0x4056c1;\u000a              file = quotearg_n_style((char *)0x0);\u000a              uStack720 = 0x4056d6;\u000a              file_name = quotearg_n_style((char *)0x1);\u000a              uStack720 = 0x4056ea;\u000a              error(0,0,ht_00,file,file_name);\u000a              uStack720 = 0x4056f3;\u000a              free(local_70);\u000a              return false;\u000a            }\u000a            uStack720 = 0x405424;\u000a            sVar12 = strlen(local_70);\u000a            lVar1 = -(sVar12 + 0x10 & 0xfffffffffffffff0);\u000a            __new = (ulong *)((long)&uStack720 + lVar1 + 8);\u000a            *(ulong *)((long)&uStack720 + lVar1) = 0x405444;\u000a            memcpy(__new,file,sVar12 + 1,*(undefined *)((long)&uStack720 + lVar1));\u000a            *(ulong *)((long)&uStack720 + lVar1) = 0x40544c;\u000a            free(file,*(undefined *)((long)&uStack720 + lVar1));\u000a            *(ulong *)((long)&uStack720 + lVar1) = 0x405458;\u000a            iVar9 = rename(local_40,__new,*(undefined *)((long)&uStack720 + lVar1));\u000a            if (iVar9 == 0) {\u000a              ht_00 = CONCAT71((int7)((ulong)file >> 8),1);\u000a              local_31 = 1;\u000a              local_60 = (undefined *)__new;\u000a            }\u000a            else {\u000a              *(ulong *)((long)&uStack720 + lVar1) = 0x405465;\u000a              puVar11 = (uint *)__errno_location(*(undefined *)((long)&uStack720 + lVar1));\u000a              uVar8 = *puVar11;\u000a              ht_00 = 0;\u000a              if (uVar8 != 2) {\u000a                file = "cannot backup %s";\u000a                puVar17 = __new;\u000a                goto LAB_004047e7;\u000a              }\u000a              local_31 = 1;\u000a              local_60 = (undefined *)0x0;\u000a            }\u000a            goto LAB_004045f0;\u000a          }\u000a        }\u000a        if ((local_1a0.st_mode & 0xf000) != 0x4000) {\u000a          if (first_dir_created_per_command_line_arg[0x18] != false) {\u000a            ht_00 = 0;\u000a            local_60 = (undefined *)0x0;\u000a            __new = &uStack720 + 1;\u000a            goto LAB_004045f0;\u000a          }\u000a          if (((first_dir_created_per_command_line_arg[0x15] != false) ||\u000a              ((first_dir_created_per_command_line_arg[0x21] != false && (1 < local_1a0.st_nlink))))\u000a             || ((*(int *)(first_dir_created_per_command_line_arg + 4) == 2 &&\u000a                 ((local_110.st_mode & 0xf000) != 0x8000)))) {\u000a            uStack720 = 0x4055f2;\u000a            iVar9 = unlink(local_40);\u000a            if (iVar9 != 0) {\u000a              uStack720 = 0x4055fb;\u000a              piVar13 = __errno_location();\u000a              local_70 = (char *)CONCAT44(local_70._4_4_,*piVar13);\u000a              if (*piVar13 != 2) {\u000a                uStack720 = 0x40583f;\u000a                ht_00 = dcgettext(0,"cannot remove %s",5);\u000a                uStack720 = 0x40584f;\u000a                file = quotearg_style((char *)0x4);\u000a                uVar22 = (ulong)local_70 & 0xffffffff;\u000a                puVar17 = &uStack720 + 1;\u000a                goto LAB_0040480b;\u000a              }\u000a            }\u000a            local_31 = 1;\u000a            if (first_dir_created_per_command_line_arg[0x2d] != false) {\u000a              uStack720 = 0x40562d;\u000a              ht_00 = dcgettext(0,"removed %s\u005cn",5);\u000a              uStack720 = 0x40563e;\u000a              file = quotearg_style((char *)0x4);\u000a              uStack720 = 0x405653;\u000a              __printf_chk(1,ht_00,file);\u000a            }\u000a            ht_00 = 0;\u000a            local_60 = (undefined *)0x0;\u000a            goto LAB_004045f0;\u000a          }\u000a        }\u000a        ht_00 = 0;\u000a        local_60 = (undefined *)0x0;\u000a        __new = &uStack720 + 1;\u000a        goto LAB_004045f0;\u000a      }\u000a      uStack720 = 0x40558c;\u000a      ht_00 = dcgettext(0,"cannot overwrite directory %s with non-directory",5);\u000a      uStack720 = 0x40559c;\u000a      file = quotearg_style((char *)0x4);\u000a      uVar22 = 0;\u000a      goto LAB_0040480b;\u000a    }\u000a    uStack720 = 0x405167;\u000a    iVar7 = utimecmp(dst_name,&local_1a0,&local_110);\u000a    if (iVar7 < 0) goto LAB_004051c0;\u000a    if (in_stack_00000020 != (undefined *)0x0) {\u000a      *in_stack_00000020 = 1;\u000a    }\u000a    uStack720 = 0x40518d;\u000a    local_70 = remember_copied(dst_name,local_110.st_ino,(dev_t)local_110.st_dev);\u000a    if (local_70 == (char *)0x0) {\u000a      return true;\u000a    }\u000a    uStack720 = 0x4051b0;\u000a    _Var5 = create_hard_link(local_70,dst_name);\u000a    if (_Var5 != false) {\u000a      return (_Bool)1;\u000a    }\u000a    local_60 = (undefined *)0x0;\u000a    _Var5 = first_dir_created_per_command_line_arg[0x24];\u000a  }\u000a  else {\u000a    local_68 = (undefined *)((ulong)local_68 & 0xffffffffffffff00 | (ulong)_Var5);\u000a    local_40 = dst_name;\u000aLAB_004045e2:\u000a    local_60._0_1_ = 0;\u000a    ht_00 = 0;\u000a    iVar7 = (int)local_50;\u000a    local_60 = (undefined *)0x0;\u000a    __new = &uStack720 + 1;\u000aLAB_004045f0:\u000a    cVar21 = (char)ht_00;\u000a    if (((((byte)copy_into_self != 0) &&\u000a         (*(long *)(first_dir_created_per_command_line_arg + 0x38) != 0)) &&\u000a        (first_dir_created_per_command_line_arg[0x18] == false)) &&\u000a       (*(int *)first_dir_created_per_command_line_arg == 0)) {\u000a      if ((char)local_60 == 0) {\u000a        stats = (stat *)&stack0xfffffffffffffdc8;\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x40487d;\u000a        iVar9 = lstat(local_40,stats,((undefined *)__new)[-8]);\u000a        if (iVar9 != 0) goto LAB_00404889;\u000a      }\u000a      else {\u000a        stats = &local_1a0;\u000a      }\u000a      if ((stats->st_mode & 0xf000) == 0xa000) {\u000a        ht = *(undefined8 *)(first_dir_created_per_command_line_arg + 0x38);\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404652;\u000a        _Var5 = seen_file(ht,local_40,stats,((undefined *)__new)[-8]);\u000a        if (_Var5 != false) {\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x40466e;\u000a          ht_00 = dcgettext(0,"will not copy %s through just-created symlink %s",5);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404680;\u000a          file = quotearg_n_style(0,((undefined *)__new)[-8]);\u000a          puVar18 = __new;\u000a          goto LAB_00404849;\u000a        }\u000a      }\u000a    }\u000aLAB_00404889:\u000a    if ((iVar7 != 0x4000) && (first_dir_created_per_command_line_arg[0x2d] != false)) {\u000a      backup_dst_name = (undefined *)0x0;\u000a      if (cVar21 != 0) {\u000a        backup_dst_name = local_60;\u000a      }\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x4048b0;\u000a      emit_verbose(src_name,local_40,backup_dst_name,((undefined *)__new)[-8]);\u000a    }\u000a    if ((first_dir_created_per_command_line_arg[0x29] == false) || (iVar7 != 0x4000)) {\u000a      if ((first_dir_created_per_command_line_arg[0x18] != false) && (local_110.st_nlink == 1))\u000a      goto LAB_00404975;\u000a      if (((first_dir_created_per_command_line_arg[0x21] != false) &&\u000a          (first_dir_created_per_command_line_arg[0x17] == false)) &&\u000a         ((1 < local_110.st_nlink ||\u000a          ((*(int *)(first_dir_created_per_command_line_arg + 4) == 4 ||\u000a           ((*(int *)(first_dir_created_per_command_line_arg + 4) == 3 & (byte)copy_into_self) != 0)\u000a           ))))) goto LAB_004048e8;\u000aLAB_00404a1d:\u000a      local_70 = (char *)0x0;\u000aLAB_00404a1f:\u000a      if (first_dir_created_per_command_line_arg[0x18] != false) {\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404a3b;\u000a        iVar9 = rename(src_name,local_40,((undefined *)__new)[-8]);\u000a        if (iVar9 == 0) {\u000a          if (first_dir_created_per_command_line_arg[0x2d] != false && iVar7 == 0x4000) {\u000a            backup_dst_name = (undefined *)0x0;\u000a            if (cVar21 != 0) {\u000a              backup_dst_name = local_60;\u000a            }\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404b15;\u000a            emit_verbose(src_name,local_40,backup_dst_name,((undefined *)__new)[-8]);\u000a          }\u000a          if (first_dir_created_per_command_line_arg[0x20] != false) {\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404b30;\u000a            set_file_security_ctx(((undefined *)__new)[-8]);\u000a          }\u000a          if (in_stack_00000020 != (undefined *)0x0) {\u000a            *in_stack_00000020 = 1;\u000a          }\u000a          if ((byte)copy_into_self == 0) {\u000a            return true;\u000a          }\u000a          ht_00 = *(undefined8 *)(first_dir_created_per_command_line_arg + 0x38);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404b5e;\u000a          record_file(ht_00,local_40,&local_110,((undefined *)__new)[-8]);\u000a          return true;\u000a        }\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404a48;\u000a        puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a        uVar8 = *puVar11;\u000a        if (uVar8 != 0x12) {\u000a          if (uVar8 == 0x16) {\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404a71;\u000a            ht_00 = dcgettext(0,"cannot move %s to a subdirectory of itself, %s",5);\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404a87;\u000a            file = quotearg_n_style(0,((undefined *)__new)[-8]);\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404aa0;\u000a            file_name = quotearg_n_style(1,((undefined *)__new)[-8]);\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404ab7;\u000a            error(0,0,ht_00,file,file_name);\u000a            *in_stack_00000018 = 1;\u000a            return true;\u000a          }\u000a          file = "cannot move %s to %s";\u000aLAB_00404f2f:\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404f39;\u000a          ht_00 = dcgettext(0,file,5);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404f4b;\u000a          file = quotearg_n_style(0,((undefined *)__new)[-8]);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404f61;\u000a          file_name = quotearg_n_style(1,((undefined *)__new)[-8]);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404f75;\u000a          error(0,(ulong)uVar8,ht_00,file,file_name);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404f88;\u000a          forget_created(local_110.st_ino,local_110.st_dev,((undefined *)__new)[-8]);\u000a          return false;\u000a        }\u000a        if (iVar7 == 0x4000) {\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404be8;\u000a          iVar9 = rmdir(local_40,((undefined *)__new)[-8]);\u000a        }\u000a        else {\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404c7c;\u000a          iVar9 = unlink(local_40,((undefined *)__new)[-8]);\u000a        }\u000a        if (iVar9 != 0) {\u000a          local_80._4_4_ = (undefined4)((ulong)local_80 >> 0x20);\u000a          uVar8 = *puVar11;\u000a          if (uVar8 != 2) {\u000a            file = "inter-device move failed: %s to %s; unable to remove target";\u000a            goto LAB_00404f2f;\u000a          }\u000a        }\u000a        local_31 = 1;\u000a      }\u000a      uVar8 = local_58;\u000a      if (first_dir_created_per_command_line_arg[0x2a] != false) {\u000a        uVar8 = *(uint *)(first_dir_created_per_command_line_arg + 0x10);\u000a      }\u000a      local_80 = CONCAT44(local_80._4_4_,uVar8);\u000a      uVar8 = 0x12;\u000a      if (iVar7 != 0x4000) {\u000a        uVar8 = 0;\u000a      }\u000a      local_54 = 0x3f;\u000a      if (first_dir_created_per_command_line_arg[0x1c] == false) {\u000a        local_54 = uVar8;\u000a      }\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x404cdc;\u000a      _Var5 = set_process_security_ctx(((undefined *)__new)[-8]);\u000a      pcVar3 = local_48;\u000a      if (_Var5 == false) {\u000a        return false;\u000a      }\u000a      local_54 = local_54 & (uint)local_80;\u000a      uVar22 = 0;\u000a      if (iVar7 == 0x4000) {\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404d09;\u000a        _Var5 = is_ancestor(&local_110,local_48,((undefined *)__new)[-8]);\u000a        file = local_40;\u000a        if (_Var5 == false) {\u000a          backup_dst_name = (undefined *)__new + -0x20;\u000a          *(cp_options **)((undefined *)__new + -0x20) = pcVar3;\u000a          *(ino_t *)((undefined *)__new + -0x18) = local_110.st_ino;\u000a          *(dir_list **)((undefined *)__new + -0x10) = local_110.st_dev;\u000a          if ((local_31 == 0) && ((local_1a0.st_mode & 0xf000) == 0x4000)) {\u000a            if ((first_dir_created_per_command_line_arg[0x20] |\u000a                first_dir_created_per_command_line_arg[0x24]) == 0) {\u000a              uVar24 = 0;\u000a              local_54 = 0;\u000a              local_48 = (cp_options *)\u000a                         ((ulong)local_48 & 0xffffffff00000000 |\u000a                          (ulong)first_dir_created_per_command_line_arg[0x24] | 0x4000);\u000a              pdVar14 = local_78;\u000a              uVar4 = 0;\u000a              local_68 = backup_dst_name;\u000a              if (local_78 != (dir_list *)0x0) goto LAB_00405780;\u000aLAB_00405795:\u000a              *(undefined **)((undefined *)__new + -0x28) = in_stack_00000018;\u000a              *(_Bool **)((undefined *)__new + -0x30) = rename_succeeded;\u000a              *(undefined8 *)((undefined *)__new + -0x38) = 0x4057b8;\u000a              _Var5 = copy_dir(src_name,local_40,(ulong)local_31,&local_110,local_68,\u000a                               ((undefined *)__new)[-0x38]);\u000a            }\u000a            else {\u000a              *(undefined8 *)((undefined *)__new + -0x28) = 0x404e8b;\u000a              local_68 = backup_dst_name;\u000a              _Var5 = set_file_security_ctx(((undefined *)__new)[-0x28]);\u000a              if (first_dir_created_per_command_line_arg[0x25] != false) goto LAB_00404ffc;\u000a              local_54 = 0;\u000a              uVar24 = 0;\u000a              local_48 = (cp_options *)\u000a                         ((ulong)local_48 & 0xffffffff00000000 |\u000a                         CONCAT71(extraout_var,_Var5) & 0xffffffff);\u000a              pdVar14 = local_78;\u000ajoined_r0x0040577e:\u000a              uVar4 = uVar24;\u000a              if (pdVar14 == (dir_list *)0x0) goto LAB_00405795;\u000aLAB_00405780:\u000a              uVar24 = uVar4;\u000a              if ((first_dir_created_per_command_line_arg[0x1b] == false) ||\u000a                 (pdVar14->parent == local_110.st_dev)) goto LAB_00405795;\u000a              _Var5 = true;\u000a            }\u000a            pdVar14 = (dir_list *)0x0;\u000a            local_68._0_4_ = 0;\u000a            __new = (ulong *)backup_dst_name;\u000a            goto LAB_00405a6d;\u000a          }\u000a          *(undefined8 *)((undefined *)__new + -0x28) = 0x404ed1;\u000a          iVar7 = mkdir(local_40,~local_54 & (uint)local_80 & 0xfff,((undefined *)__new)[-0x28]);\u000a          if (iVar7 == 0) {\u000a            *(undefined8 *)((undefined *)__new + -0x28) = 0x404fb9;\u000a            iVar7 = lstat(file,&local_1a0,((undefined *)__new)[-0x28]);\u000a            file = local_40;\u000a            uVar8 = local_1a0.st_mode;\u000a            if (iVar7 == 0) {\u000a              if ((local_1a0.st_mode & 0x1c0) == 0x1c0) {\u000a                local_48 = (cp_options *)\u000a                           ((ulong)local_48 & 0xffffffff00000000 | (ulong)local_1a0.st_mode);\u000a                uVar24 = 0;\u000a                local_68 = backup_dst_name;\u000a              }\u000a              else {\u000a                *(undefined8 *)((undefined *)__new + -0x28) = 0x4055be;\u000a                local_68 = backup_dst_name;\u000a                iVar7 = chmod(local_40,local_1a0.st_mode | 0x1c0,((undefined *)__new)[-0x28]);\u000a                if (iVar7 != 0) {\u000a                  *(undefined8 *)((undefined *)__new + -0x28) = 0x4055cb;\u000a                  puVar11 = (uint *)__errno_location(((undefined *)__new)[-0x28]);\u000a                  uVar8 = *puVar11;\u000a                  file = "setting permissions for %s";\u000a                  __new = (ulong *)backup_dst_name;\u000a                  goto LAB_00404fd0;\u000a                }\u000a                local_48 = (cp_options *)((ulong)local_48 & 0xffffffff00000000 | (ulong)uVar8);\u000a                uVar24 = (undefined4)CONCAT71((int7)((ulong)file >> 8),1);\u000a              }\u000a              pdVar14 = local_78;\u000a              if (*rename_succeeded == false) {\u000a                *(undefined8 *)((undefined *)__new + -0x28) = 0x405760;\u000a                remember_copied(local_40,local_1a0.st_ino,local_1a0.st_dev,\u000a                                ((undefined *)__new)[-0x28]);\u000a                *rename_succeeded = true;\u000a              }\u000a              if (first_dir_created_per_command_line_arg[0x2d] != false) {\u000a                *(undefined8 *)((undefined *)__new + -0x28) = 0x40577b;\u000a                emit_verbose(src_name,local_40,0,((undefined *)__new)[-0x28]);\u000a              }\u000a              goto joined_r0x0040577e;\u000a            }\u000a            *(undefined8 *)((undefined *)__new + -0x28) = 0x404fc6;\u000a            puVar11 = (uint *)__errno_location(((undefined *)__new)[-0x28]);\u000a            uVar8 = *puVar11;\u000a            file = "cannot stat %s";\u000a            __new = (ulong *)backup_dst_name;\u000a          }\u000a          else {\u000a            *(undefined8 *)((undefined *)__new + -0x28) = 0x404ede;\u000a            puVar11 = (uint *)__errno_location(((undefined *)__new)[-0x28]);\u000a            uVar8 = *puVar11;\u000a            file = "cannot create directory %s";\u000a            __new = (ulong *)backup_dst_name;\u000a          }\u000aLAB_00404fd0:\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404fda;\u000a          ht_00 = dcgettext(0,file,5);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404fea;\u000a          file = quotearg_style(4,((undefined *)__new)[-8]);\u000a          uVar22 = (ulong)uVar8;\u000a        }\u000a        else {\u000a          file = "cannot copy cyclic symbolic link %s";\u000aLAB_00404d18:\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404d22;\u000a          ht_00 = dcgettext(0,file,5);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404d32;\u000a          file = quotearg_style(4,((undefined *)__new)[-8]);\u000aLAB_00404d32:\u000a          uVar22 = 0;\u000a        }\u000aLAB_00404ff4:\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404ffc;\u000a        error(0,uVar22,ht_00,file);\u000a        backup_dst_name = (undefined *)__new;\u000a      }\u000a      else {\u000a        if (first_dir_created_per_command_line_arg[0x2b] != false) {\u000a          if (*src_name != '/') {\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404d5e;\u000a            file = dir_name(local_40,((undefined *)__new)[-8]);\u000a            if ((*file != '.') || (file[1] != 0)) {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x404d7f;\u000a              iVar7 = stat(&DAT_004125eb,&stack0xfffffffffffffdc8,((undefined *)__new)[-8]);\u000a              if (iVar7 == 0) {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x404d92;\u000a                iVar7 = stat(file,&uStack720 + 1,((undefined *)__new)[-8]);\u000a                uVar2 = local_238;\u000a                if (iVar7 == 0) {\u000a                  if (timespec[0].tv_sec == local_2c0) {\u000a                    *(undefined8 *)((undefined *)__new + -8) = 0x4054fa;\u000a                    free(file,((undefined *)__new)[-8]);\u000a                    uVar22 = uVar2;\u000a                    if (uVar2 == local_2c8) goto LAB_00404da6;\u000a                  }\u000a                  else {\u000a                    *(undefined8 *)((undefined *)__new + -8) = 0x405660;\u000a                    free(file,((undefined *)__new)[-8]);\u000a                  }\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x405671;\u000a                  ht_00 = dcgettext(0,\u000a                                    "%s: can make relative symbolic links only in current directory"\u000a                                    ,5);\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x405684;\u000a                  file = quotearg_n_style_colon(0,((undefined *)__new)[-8]);\u000a                  goto LAB_00404d32;\u000a                }\u000a              }\u000a            }\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x404da2;\u000a            free(file,((undefined *)__new)[-8]);\u000a          }\u000aLAB_00404da6:\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404db1;\u000a          iVar7 = symlink(src_name,local_40,((undefined *)__new)[-8]);\u000a          if (iVar7 == 0) {\u000aLAB_00405a60:\u000a            pdVar14 = (dir_list *)CONCAT71((int7)(uVar22 >> 8),1);\u000a            local_68._0_4_ = 0;\u000a            goto LAB_00405a67;\u000a          }\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404dbe;\u000a          puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a          local_50 = local_50 & 0xffffffff00000000 | (ulong)*puVar11;\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404dd4;\u000a          ht_00 = dcgettext(0,"cannot create symbolic link %s to %s",5);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404de6;\u000a          file = quotearg_n_style(0,((undefined *)__new)[-8]);\u000a          *(undefined8 *)((undefined *)__new + -8) = 0x404dfb;\u000a          file_name = quotearg_n_style(1,((undefined *)__new)[-8]);\u000a          uVar22 = local_50 & 0xffffffff;\u000a          goto LAB_00404e0b;\u000a        }\u000a        if (first_dir_created_per_command_line_arg[0x17] == false) {\u000a          iVar7 = (int)local_50;\u000a          if ((iVar7 == 0x8000) ||\u000a             ((iVar7 != 0xa000 && (first_dir_created_per_command_line_arg[0x14] != false)))) {\u000a            local_80._0_4_ = (uint)local_80 & 0x1ff;\u000a            *(stat **)((undefined *)__new + -0x10) = &local_110;\u000a            *(undefined8 *)((undefined *)__new + -0x18) = 0x405133;\u000a            file = local_40;\u000a            _Var5 = copy_reg(src_name,local_40,first_dir_created_per_command_line_arg,\u000a                             (ulong)(uint)local_80,(ulong)local_54,((undefined *)__new)[-0x18]);\u000a            backup_dst_name = (undefined *)__new;\u000a            if (_Var5 == false) goto LAB_00404ffc;\u000a            local_68._0_4_ = (uint)CONCAT71((int7)((ulong)file >> 8),1);\u000a            pdVar14 = (dir_list *)0x0;\u000a          }\u000a          else {\u000a            switch(iVar7 - 0x1000U >> 0xc) {\u000a            case 0:\u000a              uVar8 = ~local_54;\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405872;\u000a              iVar7 = rpl_mknod(local_40,(ulong)(uVar8 & local_58),((undefined *)__new)[-8]);\u000a              if (iVar7 == 0) {\u000a                local_68._0_4_ = 0;\u000a                uVar24 = 0;\u000a                local_48 = (cp_options *)((ulong)local_48 & 0xffffffff00000000);\u000a                _Var5 = true;\u000a                pdVar14 = (dir_list *)0x0;\u000a              }\u000a              else {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x40588d;\u000a                iVar7 = mkfifo(local_40,uVar8 & local_58 & 0xffffefff,((undefined *)__new)[-8]);\u000a                if (iVar7 != 0) {\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x40589a;\u000a                  puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a                  uVar8 = *puVar11;\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x4058ae;\u000a                  ht_00 = dcgettext(0,"cannot create fifo %s",5);\u000a                  goto LAB_004059be;\u000a                }\u000a                pdVar14 = (dir_list *)0x0;\u000a                local_68._0_4_ = 0;\u000a                uVar24 = 0;\u000a                local_48 = (cp_options *)((ulong)local_48 & 0xffffffff00000000);\u000a                _Var5 = true;\u000a              }\u000a              goto LAB_00405a6d;\u000a            case 1:\u000a            case 5:\u000a            case 0xb:\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405559;\u000a              iVar7 = rpl_mknod(local_40,(ulong)(~local_54 & local_58),((undefined *)__new)[-8]);\u000a              if (iVar7 != 0) {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405566;\u000a                puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a                uVar8 = *puVar11;\u000a                file = "cannot create special file %s";\u000a                goto LAB_00404fd0;\u000a              }\u000a              pdVar14 = (dir_list *)0x0;\u000a              local_68._0_4_ = 0;\u000a              break;\u000a            default:\u000a              file = "%s has unknown file type";\u000a              goto LAB_00404d18;\u000a            case 9:\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x4058da;\u000a              file = areadlink_with_size(src_name,local_110.st_size,((undefined *)__new)[-8]);\u000a              if (file == (char *)0x0) {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x40599f;\u000a                puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a                uVar8 = *puVar11;\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x4059b3;\u000a                ht_00 = dcgettext(0,"cannot read symbolic link %s",5);\u000aLAB_004059be:\u000a                uVar22 = (ulong)uVar8;\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x4059c3;\u000a                file = quotearg_style(4,((undefined *)__new)[-8]);\u000a                goto LAB_00404ff4;\u000a              }\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x4058f2;\u000a              iVar7 = symlink(file,local_40,((undefined *)__new)[-8]);\u000a              if (iVar7 == 0) {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405a22;\u000a                free(file,((undefined *)__new)[-8]);\u000aLAB_00405a22:\u000a                if (first_dir_created_per_command_line_arg[0x24] != false) {\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x405a2f;\u000a                  restore_default_fscreatecon_or_die();\u000a                }\u000a                if (first_dir_created_per_command_line_arg[0x1c] != false) {\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x405a4c;\u000a                  iVar7 = lchown(local_40,local_110.st_uid,local_110.st_gid,((undefined *)__new)[-8]\u000a                                );\u000a                  if (iVar7 != 0) {\u000a                    *(undefined8 *)((undefined *)__new + -8) = 0x405a58;\u000a                    _Var5 = chown_failure_ok(first_dir_created_per_command_line_arg,\u000a                                             ((undefined *)__new)[-8]);\u000a                    if (_Var5 == false) {\u000a                      *(undefined8 *)((undefined *)__new + -8) = 0x405dd8;\u000a                      puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a                      uVar8 = *puVar11;\u000a                      *(undefined8 *)((undefined *)__new + -8) = 0x405deb;\u000a                      ht_00 = dcgettext(0,"failed to preserve ownership for %s",5);\u000a                      *(undefined8 *)((undefined *)__new + -8) = 0x405e00;\u000a                      error(0,(ulong)uVar8,ht_00,local_40);\u000a                      _Var5 = first_dir_created_per_command_line_arg[0x24];\u000a                      puVar15 = __new;\u000a                      puVar20 = __new;\u000a                      goto joined_r0x00404a12;\u000a                    }\u000a                  }\u000a                }\u000a                goto LAB_00405a60;\u000a              }\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x4058ff;\u000a              puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a              uVar22 = (ulong)*puVar11;\u000a              if (((first_dir_created_per_command_line_arg[0x2c] == false) || (local_31 != 0)) ||\u000a                 ((local_1a0.st_mode & 0xf000) != 0xa000)) {\u000aLAB_004059d2:\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x4059da;\u000a                free(file,((undefined *)__new)[-8]);\u000a              }\u000a              else {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x40593e;\u000a                sVar12 = strlen(file,((undefined *)__new)[-8]);\u000a                if (local_1a0.st_size != sVar12) goto LAB_004059d2;\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405953;\u000a                file_name = areadlink_with_size(local_40,local_1a0.st_size,((undefined *)__new)[-8])\u000a                ;\u000a                if (file_name == (char *)0x0) {\u000a                  local_48 = (cp_options *)((ulong)local_48 & 0xffffffff00000000);\u000a                }\u000a                else {\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x40596a;\u000a                  uVar8 = strcmp(file_name,file,((undefined *)__new)[-8]);\u000a                  local_48 = (cp_options *)\u000a                             ((ulong)local_48 & 0xffffffff00000000 |\u000a                             (ulong)(uVar8 & 0xffffff00 | (uint)(uVar8 == 0)));\u000a                }\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405eb8;\u000a                free(file_name,((undefined *)__new)[-8]);\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405ec0;\u000a                free(file,((undefined *)__new)[-8]);\u000a                if ((char)local_48 != 0) goto LAB_00405a22;\u000a              }\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x4059eb;\u000a              ht_00 = dcgettext(0,"cannot create symbolic link %s",5);\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x4059fc;\u000a              file = quotearg_style(4,((undefined *)__new)[-8]);\u000a              goto LAB_00404ff4;\u000a            }\u000a          }\u000aLAB_00405a67:\u000a          _Var5 = true;\u000a          uVar24 = 0;\u000a          local_48 = (cp_options *)CONCAT44(local_48._4_4_,(uint)local_80);\u000aLAB_00405a6d:\u000a          iVar7 = (int)local_50;\u000a          if (((local_31 == 0) && (iVar7 != 0x4000)) &&\u000a             ((first_dir_created_per_command_line_arg[0x14] == false &&\u000a              ((first_dir_created_per_command_line_arg[0x20] |\u000a               first_dir_created_per_command_line_arg[0x24]) != 0)))) {\u000a            local_68 = (undefined *)((ulong)local_68 & 0xffffffff00000000 | (ulong)(uint)local_68);\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x405b93;\u000a            local_78 = pdVar14;\u000a            set_file_security_ctx(((undefined *)__new)[-8]);\u000a            backup_dst_name = (undefined *)__new;\u000a            pdVar14 = local_78;\u000a            if (first_dir_created_per_command_line_arg[0x25] != false) goto LAB_00404ffc;\u000a          }\u000a          cVar21 = (char)(uint)local_68;\u000a          if (((byte)copy_into_self != 0) &&\u000a             (*(long *)(first_dir_created_per_command_line_arg + 0x38) != 0)) {\u000a            local_68 = (undefined *)((ulong)local_68 & 0xffffffff00000000 | (ulong)(uint)local_68);\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x405aa6;\u000a            local_78 = pdVar14;\u000a            iVar9 = lstat(local_40,&stack0xfffffffffffffdc8,((undefined *)__new)[-8]);\u000a            if (iVar9 == 0) {\u000a              ht_00 = *(undefined8 *)(first_dir_created_per_command_line_arg + 0x38);\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405abf;\u000a              record_file(ht_00,local_40,&stack0xfffffffffffffdc8,((undefined *)__new)[-8]);\u000a            }\u000a            cVar21 = (char)local_68;\u000a            pdVar14 = local_78;\u000a          }\u000a          cVar23 = (char)pdVar14;\u000a          if (((iVar7 != 0x4000) && (first_dir_created_per_command_line_arg[0x17] != false)) ||\u000a             (cVar21 != 0)) {\u000aLAB_00405c1a:\u000a            return (_Bool)(_Var5 != false);\u000a          }\u000a          if (first_dir_created_per_command_line_arg[0x1e] != false) {\u000a            local_50 = local_50 & 0xffffffffffffff00 | (ulong)_Var5;\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x405b08;\u000a            local_238_01 = get_stat_atime(&local_110,((undefined *)__new)[-8]);\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x405b1e;\u000a            timespec._8_16_ = get_stat_mtime(&local_110,((undefined *)__new)[-8]);\u000a            if (cVar23 == 0) {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405bba;\u000a              iVar7 = utimens(local_40,&stack0xfffffffffffffdc8,((undefined *)__new)[-8]);\u000a            }\u000a            else {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405b41;\u000a              iVar7 = utimens_symlink(local_40,&stack0xfffffffffffffdc8,((undefined *)__new)[-8]);\u000a            }\u000a            if (iVar7 != 0) {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405bc3;\u000a              puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a              uVar8 = *puVar11;\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405bdb;\u000a              local_78 = pdVar14;\u000a              ht_00 = dcgettext(0,"preserving times for %s",5);\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405bec;\u000a              quotearg_style(4,((undefined *)__new)[-8]);\u000a              cVar23 = (char)local_78;\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405c02;\u000a              error(0,(ulong)uVar8,ht_00);\u000a              if (first_dir_created_per_command_line_arg[0x23] != false) {\u000a                return false;\u000a              }\u000a            }\u000a            _Var5 = local_50._0_1_;\u000a          }\u000a          if (cVar23 != 0) goto LAB_00405c1a;\u000a          local_50 = CONCAT44(local_50._4_4_,uVar24);\u000a          if ((first_dir_created_per_command_line_arg[0x1c] != false) &&\u000a             (((local_31 != 0 || (local_110.st_uid != local_1a0.st_uid)) ||\u000a              (local_110.st_gid != local_1a0.st_gid)))) {\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x405c81;\u000a            iVar7 = set_owner(first_dir_created_per_command_line_arg,local_40,0xffffffff,&local_110,\u000a                              ((undefined *)__new)[-8]);\u000a            if (iVar7 == -1) {\u000a              return (_Bool)0;\u000a            }\u000a          }\u000a          if ((first_dir_created_per_command_line_arg[0x1d] == false) &&\u000a             (first_dir_created_per_command_line_arg[0x18] == false)) {\u000a            if (first_dir_created_per_command_line_arg[0x2a] != false) {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405d03;\u000a              iVar7 = set_acl(local_40,((undefined *)__new)[-8]);\u000a              if (iVar7 != 0) {\u000a                return false;\u000a              }\u000a              goto LAB_00405e9e;\u000a            }\u000a            if (first_dir_created_per_command_line_arg[0x1f] != false) {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405d23;\u000a              cached_umask(((undefined *)__new)[-8]);\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405d3a;\u000a              iVar7 = set_acl(local_40,((undefined *)__new)[-8]);\u000a              if (iVar7 != 0) {\u000a                return false;\u000a              }\u000a              goto LAB_00405e9e;\u000a            }\u000a            if (local_54 == 0) {\u000a              local_54 = 0;\u000a            }\u000a            else {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405d5c;\u000a              mVar10 = cached_umask(((undefined *)__new)[-8]);\u000a              local_54 = local_54 & ~mVar10;\u000a              if ((local_50._0_1_ == false) && (local_54 != 0)) {\u000a                if (local_31 != 0) {\u000a                  *(undefined8 *)((undefined *)__new + -8) = 0x405d8f;\u000a                  iVar7 = lstat(local_40,&local_1a0,((undefined *)__new)[-8]);\u000a                  if (iVar7 != 0) {\u000a                    *(undefined8 *)((undefined *)__new + -8) = 0x405d9c;\u000a                    puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a                    uVar8 = *puVar11;\u000a                    *(undefined8 *)((undefined *)__new + -8) = 0x405db3;\u000a                    ht_00 = dcgettext(0,"cannot stat %s",5);\u000a                    *(undefined8 *)((undefined *)__new + -8) = 0x405dc4;\u000a                    file = quotearg_style(4,((undefined *)__new)[-8]);\u000a                    uVar22 = (ulong)uVar8;\u000a                    puVar16 = __new;\u000a                    goto LAB_004044fb;\u000a                  }\u000a                }\u000a                local_48 = (cp_options *)CONCAT44(local_48._4_4_,local_1a0.st_mode);\u000a                if ((local_54 & ~local_1a0.st_mode) != 0) {\u000a                  local_50 = local_50 & 0xffffffff00000000 |\u000a                             CONCAT71((uint7)(uint3)(~local_1a0.st_mode >> 8),1);\u000a                }\u000a              }\u000a            }\u000a            if ((local_50 & 1) != 0) {\u000a              *(undefined8 *)((undefined *)__new + -8) = 0x405e49;\u000a              iVar7 = chmod(local_40,(uint)local_48 | local_54,((undefined *)__new)[-8]);\u000a              if (iVar7 != 0) {\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405e55;\u000a                puVar11 = (uint *)__errno_location(((undefined *)__new)[-8]);\u000a                uVar8 = *puVar11;\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405e6c;\u000a                ht_00 = dcgettext(0,"preserving permissions for %s",5);\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405e7d;\u000a                quotearg_style(4,((undefined *)__new)[-8]);\u000a                *(undefined8 *)((undefined *)__new + -8) = 0x405e8f;\u000a                error(0,(ulong)uVar8,ht_00);\u000a                if (first_dir_created_per_command_line_arg[0x23] != false) {\u000a                  return false;\u000a                }\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            *(undefined8 *)((undefined *)__new + -8) = 0x405cc9;\u000a            iVar7 = copy_acl(src_name,0xffffffff,((undefined *)__new)[-8]);\u000a            if ((iVar7 != 0) && (first_dir_created_per_command_line_arg[0x23] != false)) {\u000a              return false;\u000a            }\u000a          }\u000aLAB_00405e9e:\u000a          return (_Bool)(_Var5 != false);\u000a        }\u000a        pdVar14 = (dir_list *)0x0;\u000a        local_80._0_4_ = 0;\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404f14;\u000a        _Var5 = create_hard_link(src_name,local_40,((undefined *)__new)[-8]);\u000a        backup_dst_name = (undefined *)__new;\u000a        if (_Var5 != false) {\u000a          local_68._0_4_ = 0;\u000a          goto LAB_00405a67;\u000a        }\u000a      }\u000aLAB_00404ffc:\u000a      _Var5 = first_dir_created_per_command_line_arg[0x24];\u000a      puVar15 = (ulong *)backup_dst_name;\u000a      puVar20 = (ulong *)backup_dst_name;\u000a    }\u000a    else {\u000a      if ((byte)copy_into_self == 0) {\u000aLAB_00404975:\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x40497a;\u000a        file = src_to_dest_lookup(local_110.st_ino,local_110.st_dev,((undefined *)__new)[-8]);\u000a      }\u000a      else {\u000aLAB_004048e8:\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x4048ed;\u000a        file = remember_copied(local_40,local_110.st_ino,local_110.st_dev,((undefined *)__new)[-8]);\u000a      }\u000a      if (file == (char *)0x0) goto LAB_00404a1d;\u000a      if (iVar7 != 0x4000) {\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404ae2;\u000a        local_70 = file;\u000a        _Var5 = create_hard_link(file,local_40,((undefined *)__new)[-8]);\u000a        backup_dst_name = (undefined *)__new;\u000a        if (_Var5 != false) {\u000a          return true;\u000a        }\u000a        goto LAB_00404ffc;\u000a      }\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x4049a6;\u000a      local_80 = ht_00;\u000a      local_70 = file;\u000a      _Var5 = same_name(src_name,file,((undefined *)__new)[-8]);\u000a      if (_Var5 != false) {\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x4049bf;\u000a        ht_00 = dcgettext(0,"cannot copy a directory, %s, into itself, %s",5);\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x4049d5;\u000a        file = quotearg_n_style(0,((undefined *)__new)[-8]);\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x4049ee;\u000a        file_name = quotearg_n_style(1,((undefined *)__new)[-8]);\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404a05;\u000a        error(0,0,ht_00,file,file_name);\u000a        *in_stack_00000018 = 1;\u000a        _Var5 = first_dir_created_per_command_line_arg[0x24];\u000a        puVar15 = __new;\u000a        puVar20 = __new;\u000a        goto joined_r0x00404a12;\u000a      }\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x404b6f;\u000a      _Var5 = same_name(local_40,file,((undefined *)__new)[-8]);\u000a      if (_Var5 != false) {\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404b88;\u000a        ht_00 = dcgettext(0,"warning: source directory %s specified more than once",5);\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404b9c;\u000a        file = quotearg_style(4,((undefined *)__new)[-8]);\u000a        *(undefined8 *)((undefined *)__new + -8) = 0x404bad;\u000a        error(0,0,ht_00,file);\u000a        if (in_stack_00000020 == (undefined *)0x0) {\u000a          return true;\u000a        }\u000a        if (first_dir_created_per_command_line_arg[0x18] == false) {\u000a          return true;\u000a        }\u000a        *in_stack_00000020 = 1;\u000a        return true;\u000a      }\u000a      cVar21 = (char)local_80;\u000a      if ((*(int *)(first_dir_created_per_command_line_arg + 4) == 4) ||\u000a         ((*(int *)(first_dir_created_per_command_line_arg + 4) == 3 & (byte)copy_into_self) != 0))\u000a      goto LAB_00404a1f;\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x404c36;\u000a      ht_00 = dcgettext(0,"will not create hard link %s to directory %s",5);\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x404c49;\u000a      file = quotearg_n_style(0,((undefined *)__new)[-8]);\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x404c5f;\u000a      file_name = quotearg_n_style(1,((undefined *)__new)[-8]);\u000a      uVar22 = 0;\u000aLAB_00404e0b:\u000a      *(undefined8 *)((undefined *)__new + -8) = 0x404e13;\u000a      error(0,uVar22,ht_00,file,file_name);\u000a      _Var5 = first_dir_created_per_command_line_arg[0x24];\u000a      puVar15 = __new;\u000a      puVar20 = __new;\u000a    }\u000a  }\u000ajoined_r0x00404a12:\u000a  if (_Var5 != false) {\u000a    *(undefined8 *)((undefined *)puVar15 + -8) = 0x405009;\u000a    restore_default_fscreatecon_or_die();\u000a    puVar20 = puVar15;\u000a  }\u000a  file = local_40;\u000a  if (local_70 == (char *)0x0) {\u000a    *(undefined8 *)((undefined *)puVar20 + -8) = 0x405027;\u000a    forget_created(local_110.st_ino,local_110.st_dev,((undefined *)puVar20)[-8]);\u000a  }\u000a  if (local_60 == (undefined *)0x0) {\u000a    return false;\u000a  }\u000a  *(undefined8 *)((undefined *)puVar20 + -8) = 0x405038;\u000a  iVar7 = rename(local_60,file,((undefined *)puVar20)[-8]);\u000a  if (iVar7 == 0) {\u000a    if (first_dir_created_per_command_line_arg[0x2d] != false) {\u000a      *(undefined8 *)((undefined *)puVar20 + -8) = 0x4050a1;\u000a      ht_00 = dcgettext(0,"%s -> %s (unbackup)\u005cn",5);\u000a      *(undefined8 *)((undefined *)puVar20 + -8) = 0x4050b4;\u000a      file = quotearg_n_style(0,((undefined *)puVar20)[-8]);\u000a      *(undefined8 *)((undefined *)puVar20 + -8) = 0x4050c9;\u000a      file_name = quotearg_n_style(1,((undefined *)puVar20)[-8]);\u000a      *(undefined8 *)((undefined *)puVar20 + -8) = 0x4050de;\u000a      __printf_chk(1,ht_00,file,file_name);\u000a      return false;\u000a    }\u000a    return false;\u000a  }\u000a  *(undefined8 *)((undefined *)puVar20 + -8) = 0x405041;\u000a  puVar11 = (uint *)__errno_location(((undefined *)puVar20)[-8]);\u000a  uVar8 = *puVar11;\u000a  *(undefined8 *)((undefined *)puVar20 + -8) = 0x405058;\u000a  ht_00 = dcgettext(0,"cannot un-backup %s",5);\u000a  *(undefined8 *)((undefined *)puVar20 + -8) = 0x405068;\u000a  file = quotearg_style(4,((undefined *)puVar20)[-8]);\u000a  uVar22 = (ulong)uVar8;\u000a  puVar16 = puVar20;\u000aLAB_004044fb:\u000a  *(undefined8 *)((undefined *)puVar16 + -8) = 0x404500;\u000a  error(0,uVar22,ht_00,file);\u000a  return false;\u000a}\u000a\u000a
p437
S'PUSH RBP\nMOV RBP,RSP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x298\nMOV R12,R9\nMOV R14,R8\nMOV RBX,RCX\nMOV R13,RSI\nMOV R15,RDI\nMOV RSI,qword ptr [RBP + 0x28]\nMOV RCX,qword ptr [RBP + 0x20]\nMOV byte ptr [RBP + -0x29],DL\nTEST RSI,RSI\nJZ 0x0040448f\nMOV AL,byte ptr [R12 + 0x18]\nTEST AL,AL\nJZ 0x0040448f\nMOV byte ptr [RSI],0x0\nMOV byte ptr [RCX],0x0\nCMP dword ptr [R12 + 0x4],0x2\nJNZ 0x004044af\nLEA RSI,[-0x108 + RBP]\nMOV RDI,R15\nCALL 0x004107b0\nTEST EAX,EAX\nJNZ 0x004044c2\nJMP 0x00404512\nLEA RSI,[-0x108 + RBP]\nMOV RDI,R15\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x00404512\nCALL 0x004022e0\nMOV R12D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412055\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,RBX\nCALL 0x00402870\nMOV EAX,R14D\nLEA RSP,[RBP + -0x28]\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV qword ptr [RBP + -0x40],R14\nMOV qword ptr [RBP + -0x70],RBX\nMOV R14D,dword ptr [-0xf0 + RBP]\nMOV EAX,R14D\nAND EAX,0xf000\nMOV qword ptr [RBP + -0x48],RAX\nCMP EAX,0x4000\nJNZ 0x00404540\nCMP byte ptr [R12 + 0x29],0x0\nJZ 0x004046e8\nMOV AL,byte ptr [RBP + 0x10]\nTEST AL,AL\nJZ 0x004045c0\nCMP dword ptr [RBP + -0x48],0x4000\nJZ 0x004045a9\nCMP dword ptr [R12],0x0\nJNZ 0x004045a9\nMOV RDI,qword ptr [R12 + 0x40]\nLEA RDX,[-0x108 + RBP]\nMOV RSI,R15\nCALL 0x00409500\nTEST AL,AL\nJZ 0x004045a9\nXOR EDI,EDI\nMOV ESI,0x4122c8\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nMOV R14B,0x1\nJMP 0x00404500\nMOV RDI,qword ptr [R12 + 0x40]\nLEA RDX,[-0x108 + RBP]\nMOV RSI,R15\nCALL 0x00409480\nMOV AL,byte ptr [RBP + 0x10]\nMOVZX ESI,AL\nMOV RDI,R12\nCALL 0x00405f60\nMOV EBX,EAX\nCMP byte ptr [RBP + -0x29],0x0\nMOV qword ptr [RBP + -0x38],R13\nJZ 0x00404696\nMOV byte ptr [RBP + -0x60],BL\nMOV dword ptr [RBP + -0x50],R14D\nXOR EDX,EDX\nXOR R14D,R14D\nXOR EBX,EBX\nMOV AL,byte ptr [RBP + 0x10]\nMOV R13,qword ptr [RBP + -0x48]\nTEST AL,AL\nMOV qword ptr [RBP + -0x58],RBX\nJZ 0x00404889\nCMP qword ptr [R12 + 0x38],0x0\nJZ 0x00404889\nCMP byte ptr [R12 + 0x18],0x0\nJNZ 0x00404889\nCMP dword ptr [R12],0x0\nJNZ 0x00404889\nTEST DL,DL\nJZ 0x0040486a\nLEA RBX,[-0x198 + RBP]\nMOV EAX,0xf000\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0xa000\nJNZ 0x00404885\nMOV RDI,qword ptr [R12 + 0x38]\nMOV RSI,qword ptr [RBP + -0x38]\nMOV RDX,RBX\nCALL 0x00409500\nTEST AL,AL\nJZ 0x00404885\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41246b\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,qword ptr [RBP + -0x38]\nJMP 0x00404849\nCMP dword ptr [RBP + -0x48],0x8000\nJNZ 0x0040471a\nCMP byte ptr [R12 + 0x18],0x0\nJNZ 0x0040473a\nCMP byte ptr [R12 + 0x2b],0x0\nJNZ 0x0040473a\nCMP byte ptr [R12 + 0x17],0x0\nJNZ 0x0040473a\nCMP dword ptr [R12],0x0\nJNZ 0x0040473a\nCMP byte ptr [R12 + 0x15],0x0\nJNZ 0x0040473a\nLEA RSI,[-0x198 + RBP]\nMOV RDI,R13\nCALL 0x00410790\nXOR ECX,ECX\nTEST EAX,EAX\nJNZ 0x0040474f\nJMP 0x0040476b\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4122b2\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nJMP 0x004044f8\nCMP byte ptr [R12 + 0x14],0x0\nJZ 0x0040473a\nCMP dword ptr [RBP + -0x48],0xa000\nJZ 0x0040473a\nMOVZX EAX,word ptr [RBP + -0x48]\nCMP EAX,0x4000\nJNZ 0x0040469f\nLEA RSI,[-0x198 + RBP]\nMOV RDI,R13\nCALL 0x004107b0\nMOV CL,0x1\nTEST EAX,EAX\nJZ 0x0040476b\nMOV byte ptr [RBP + -0x60],BL\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nCMP EBX,0x2\nJNZ 0x004047dd\nMOV dword ptr [RBP + -0x50],R14D\nMOV byte ptr [RBP + -0x29],0x1\nJMP 0x004045e2\nMOV qword ptr [RBP + -0x58],RCX\nLEA RSI,[-0x108 + RBP]\nLEA RCX,[-0x198 + RBP]\nLEA R9,[-0x230 + RBP]\nMOV RDI,R15\nMOV RDX,R13\nMOV R8,R12\nCALL 0x00405f80\nTEST AL,AL\nJZ 0x00404813\nCMP dword ptr [RBP + -0x48],0x4000\nJZ 0x004051c0\nCMP byte ptr [R12 + 0x2c],0x0\nJZ 0x004051c0\nCMP byte ptr [R12 + 0x1e],0x0\nJZ 0x00404fa3\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x0040514a\nMOV RAX,qword ptr [-0x198 + RBP]\nCMP RAX,qword ptr [-0x108 + RBP]\nSETZ AL\nJMP 0x0040514c\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412055\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,R15\nJMP 0x004044fb\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4122f9\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,R13\nCALL 0x0040c3e0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R12\nMOV RCX,R15\nMOV R8,RBX\nCALL 0x00402870\nJMP 0x00404500\nLEA RBX,[-0x230 + RBP]\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RSI,RBX\nCALL 0x004107b0\nTEST EAX,EAX\nJZ 0x0040462e\nMOV RBX,qword ptr [RBP + -0x58]\nCMP R13D,0x4000\nJZ 0x004048b0\nMOV AL,byte ptr [R12 + 0x2d]\nTEST AL,AL\nJZ 0x004048b0\nXOR EDX,EDX\nTEST R14B,R14B\nCMOVNZ RDX,RBX\nMOV RDI,R15\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x004066b0\nCMP R13D,0x4000\nSETNZ BL\nCMP byte ptr [R12 + 0x29],0x0\nJZ 0x004048fb\nTEST BL,BL\nJNZ 0x004048fb\nMOV RAX,qword ptr [-0x108 + RBP]\nMOV RCX,qword ptr [-0x100 + RBP]\nCMP byte ptr [RBP + 0x10],0x0\nJZ 0x0040496f\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RSI,RCX\nMOV RDX,RAX\nCALL 0x00408590\nTEST RAX,RAX\nJNZ 0x00404983\nJMP 0x00404a1d\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x0040491d\nCMP qword ptr [-0xf8 + RBP],0x1\nJNZ 0x0040491d\nMOV RSI,qword ptr [-0x108 + RBP]\nMOV RDI,qword ptr [-0x100 + RBP]\nJMP 0x00404975\nCMP byte ptr [R12 + 0x21],0x0\nJZ 0x00404a1d\nCMP byte ptr [R12 + 0x17],0x0\nJNZ 0x00404a1d\nCMP qword ptr [-0xf8 + RBP],0x1\nJA 0x00404958\nMOV ECX,dword ptr [R12 + 0x4]\nCMP ECX,0x3\nSETZ AL\nCMP ECX,0x4\nJZ 0x00404958\nAND AL,byte ptr [RBP + 0x10]\nJZ 0x00404a1d\nMOV RDX,qword ptr [-0x108 + RBP]\nMOV RSI,qword ptr [-0x100 + RBP]\nMOV RDI,qword ptr [RBP + -0x38]\nJMP 0x004048e8\nMOV RDI,RCX\nMOV RSI,RAX\nCALL 0x00408550\nTEST RAX,RAX\nJZ 0x00404a1d\nCMP R13D,0x4000\nMOV qword ptr [RBP + -0x68],RAX\nJNZ 0x00404ac6\nMOV qword ptr [RBP + -0x78],R14\nMOV RDI,R15\nMOV RSI,RAX\nMOV R14,RAX\nCALL 0x0040cc10\nTEST AL,AL\nJZ 0x00404b63\nXOR EDI,EDI\nMOV ESI,0x41249c\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nMOV RDX,qword ptr [0x0061a510]\nXOR EDI,EDI\nMOV ESI,0x4\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV RDX,qword ptr [0x0061a518]\nMOV EDI,0x1\nMOV ESI,0x4\nCALL 0x0040c3e0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nMOV RCX,R15\nMOV R8,RBX\nCALL 0x00402870\nMOV RAX,qword ptr [RBP + 0x20]\nMOV byte ptr [RAX],0x1\nCMP byte ptr [R12 + 0x24],0x0\nJNZ 0x00405004\nJMP 0x00405009\nXOR EAX,EAX\nCMP byte ptr [R12 + 0x18],0x0\nMOV qword ptr [RBP + -0x68],RAX\nJZ 0x00404c90\nMOV RDI,R15\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x004028e0\nTEST EAX,EAX\nJZ 0x00404af2\nCALL 0x004022e0\nMOV R14,RAX\nMOV EBX,dword ptr [R14]\nCMP EBX,0x12\nJZ 0x00404bd2\nCMP EBX,0x16\nJNZ 0x00404bf5\nXOR EDI,EDI\nMOV ESI,0x41252c\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nMOV RDX,qword ptr [0x0061a510]\nXOR EDI,EDI\nMOV ESI,0x4\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV RDX,qword ptr [0x0061a518]\nMOV EDI,0x1\nMOV ESI,0x4\nCALL 0x0040c3e0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nMOV RCX,R15\nMOV R8,RBX\nCALL 0x00402870\nMOV RAX,qword ptr [RBP + 0x20]\nMOV byte ptr [RAX],0x1\nMOV R14B,0x1\nJMP 0x00404500\nMOVZX ECX,byte ptr [R12 + 0x2d]\nMOVZX R8D,byte ptr [RBP + -0x60]\nMOV EDX,0x1\nMOV RDI,RAX\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x00406360\nMOV R14B,0x1\nTEST AL,AL\nJNZ 0x00404500\nJMP 0x00404ffc\nCMP byte ptr [R12 + 0x2d],0x0\nSETZ AL\nOR AL,BL\nJNZ 0x00404b15\nXOR EDX,EDX\nTEST R14B,R14B\nCMOVNZ RDX,qword ptr [RBP + -0x58]\nMOV RDI,R15\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x004066b0\nCMP byte ptr [R12 + 0x20],0x0\nMOV RDI,qword ptr [RBP + -0x38]\nJZ 0x00404b30\nXOR ESI,ESI\nMOV EDX,0x1\nMOV RCX,R12\nCALL 0x00406750\nMOV RAX,qword ptr [RBP + 0x28]\nTEST RAX,RAX\nJZ 0x00404b3c\nMOV byte ptr [RAX],0x1\nMOV R14B,0x1\nCMP byte ptr [RBP + 0x10],0x0\nJZ 0x00404500\nMOV RDI,qword ptr [R12 + 0x38]\nLEA RDX,[-0x108 + RBP]\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x00409480\nJMP 0x00404500\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RSI,R14\nCALL 0x0040cc10\nTEST AL,AL\nJZ 0x00404c04\nXOR EDI,EDI\nMOV ESI,0x4124c9\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RSI,qword ptr [0x0061a510]\nMOV EDI,0x4\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nMOV R14B,0x1\nMOV RCX,qword ptr [RBP + 0x28]\nTEST RCX,RCX\nJZ 0x00404500\nMOV AL,byte ptr [R12 + 0x18]\nTEST AL,AL\nJZ 0x00404500\nMOV byte ptr [RCX],0x1\nJMP 0x00404500\nCMP R13D,0x4000\nJNZ 0x00404c73\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x00402410\nTEST EAX,EAX\nJNZ 0x00404c80\nJMP 0x00404c8c\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41255b\nJMP 0x00404f2f\nMOV ECX,dword ptr [R12 + 0x4]\nCMP ECX,0x3\nSETZ AL\nCMP ECX,0x4\nJZ 0x00404f8d\nAND AL,byte ptr [RBP + 0x10]\nMOV R14,qword ptr [RBP + -0x78]\nJNZ 0x00404f9a\nXOR EDI,EDI\nMOV ESI,0x4124ff\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,qword ptr [RBP + -0x38]\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,qword ptr [RBP + -0x68]\nCALL 0x0040c3e0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nMOV RCX,R15\nJMP 0x00404e0b\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x004022f0\nTEST EAX,EAX\nJZ 0x00404c8c\nMOV EBX,dword ptr [R14]\nCMP EBX,0x2\nJNZ 0x00404f25\nMOV byte ptr [RBP + -0x29],0x1\nCMP byte ptr [R12 + 0x2a],0x0\nMOV EAX,dword ptr [RBP + -0x50]\nJZ 0x00404ca0\nMOV EAX,dword ptr [R12 + 0x10]\nMOV dword ptr [RBP + -0x78],EAX\nXOR R14D,R14D\nCMP R13D,0x4000\nMOV EAX,0x12\nCMOVNZ EAX,R14D\nCMP byte ptr [R12 + 0x1c],0x0\nMOV RBX,R13\nMOV R13D,0x3f\nCMOVZ R13D,EAX\nMOVZX EDX,byte ptr [RBP + -0x29]\nMOV RDI,R15\nMOV RSI,qword ptr [RBP + -0x38]\nMOV RCX,R12\nCALL 0x004067d0\nTEST AL,AL\nJZ 0x00404500\nMOV ECX,dword ptr [RBP + -0x78]\nAND R13D,ECX\nCMP EBX,0x4000\nMOV dword ptr [RBP + -0x4c],R13D\nJNZ 0x00404d40\nLEA RDI,[-0x108 + RBP]\nMOV R14,qword ptr [RBP + -0x40]\nMOV RSI,R14\nCALL 0x00406990\nTEST AL,AL\nJZ 0x00404e24\nXOR EDI,EDI\nMOV ESI,0x4125ac\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nJMP 0x00404ff4\nCMP byte ptr [R12 + 0x2b],0x0\nMOV R14,qword ptr [RBP + -0x38]\nJZ 0x00404eed\nCMP byte ptr [R15],0x2f\nJZ 0x00404da6\nMOV RDI,R14\nCALL 0x00409230\nMOV R14,RAX\nCMP byte ptr [R14],0x2e\nJNZ 0x00404d6e\nCMP byte ptr [R14 + 0x1],0x0\nJZ 0x00404d9a\nLEA RSI,[-0x230 + RBP]\nMOV EDI,0x4125eb\nCALL 0x00410790\nTEST EAX,EAX\nJNZ 0x00404d9a\nLEA RSI,[-0x2c0 + RBP]\nMOV RDI,R14\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x004054d0\nMOV RDI,R14\nCALL 0x00402290\nMOV R14,qword ptr [RBP + -0x38]\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x004024c0\nTEST EAX,EAX\nJZ 0x00405a60\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RBP + -0x48],EAX\nXOR EDI,EDI\nMOV ESI,0x41262c\nMOV EDX,0x5\nCALL 0x00402420\nMOV R13,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,R14\nCALL 0x0040c3e0\nMOV R14,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,dword ptr [RBP + -0x48]\nMOV RDX,R13\nMOV RCX,R14\nMOV R8,RBX\nCALL 0x00402870\nCMP byte ptr [R12 + 0x24],0x0\nJNZ 0x00405004\nJMP 0x00405009\nMOV R13,qword ptr [RBP + 0x18]\nMOV RAX,RSP\nLEA RBX,[RAX + -0x20]\nMOV RSP,RBX\nMOV qword ptr [RAX + -0x20],R14\nMOV RCX,qword ptr [-0x100 + RBP]\nMOV qword ptr [RAX + -0x18],RCX\nMOV RCX,qword ptr [-0x108 + RBP]\nMOV qword ptr [RAX + -0x10],RCX\nCMP byte ptr [RBP + -0x29],0x0\nJNZ 0x00404eb6\nMOV EAX,0xf000\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0x4000\nJNZ 0x00404eb6\nMOV qword ptr [RBP + -0x60],RBX\nMOV AL,byte ptr [R12 + 0x24]\nMOV CL,byte ptr [R12 + 0x20]\nOR CL,AL\nJZ 0x00405508\nMOVZX ESI,AL\nXOR EDX,EDX\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RCX,R12\nCALL 0x00406750\nCMP byte ptr [R12 + 0x25],0x0\nMOV RBX,qword ptr [RBP + -0x70]\nJNZ 0x00404ffc\nMOV dword ptr [RBP + -0x4c],0x0\nXOR R14D,R14D\nMOV dword ptr [RBP + -0x40],EAX\nTEST RBX,RBX\nJNZ 0x00405780\nJMP 0x00405795\nMOV EAX,dword ptr [RBP + -0x78]\nAND EAX,0xfff\nMOV ESI,dword ptr [RBP + -0x4c]\nNOT ESI\nAND ESI,EAX\nMOV R14,qword ptr [RBP + -0x38]\nMOV RDI,R14\nCALL 0x00402340\nTEST EAX,EAX\nJZ 0x00404faa\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x41203a\nJMP 0x00404fd0\nCMP byte ptr [R12 + 0x17],0x0\nMOV RDX,qword ptr [RBP + -0x48]\nJZ 0x004050eb\nMOVZX R8D,byte ptr [RBP + -0x60]\nXOR R13D,R13D\nXOR EDX,EDX\nXOR ECX,ECX\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00406360\nTEST AL,AL\nJZ 0x00404ffc\nMOV AL,0x1\nXOR ESI,ESI\nJMP 0x00405a67\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412570\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,qword ptr [RBP + -0x38]\nCALL 0x0040c3e0\nMOV R8,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,R12\nMOV RCX,R15\nCALL 0x00402870\nMOV RSI,qword ptr [-0x108 + RBP]\nMOV RDI,qword ptr [-0x100 + RBP]\nCALL 0x004084f0\nJMP 0x00404500\nMOV RAX,qword ptr [RBP + -0x68]\nMOV R14,qword ptr [RBP + -0x78]\nJMP 0x00404a1f\nMOV RAX,qword ptr [RBP + -0x68]\nJMP 0x00404a1f\nXOR EAX,EAX\nJMP 0x0040514e\nLEA RSI,[-0x198 + RBP]\nMOV RDI,R14\nCALL 0x004107b0\nTEST EAX,EAX\nJZ 0x004053b0\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412055\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBX\nCALL 0x00402870\nCMP byte ptr [R12 + 0x24],0x0\nJZ 0x00405009\nCALL 0x00407770\nCMP qword ptr [RBP + -0x68],0x0\nMOV RBX,qword ptr [RBP + -0x38]\nJNZ 0x00405027\nMOV RSI,qword ptr [-0x108 + RBP]\nMOV RDI,qword ptr [-0x100 + RBP]\nCALL 0x004084f0\nMOV RDI,qword ptr [RBP + -0x58]\nTEST RDI,RDI\nJZ 0x0040507a\nMOV RSI,RBX\nCALL 0x004028e0\nTEST EAX,EAX\nJZ 0x00405082\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412734\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,R12\nJMP 0x004044fb\nXOR R14D,R14D\nJMP 0x00404500\nCMP byte ptr [R12 + 0x2d],0x0\nJZ 0x004050e3\nMOV R12,RBX\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412748\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,qword ptr [RBP + -0x58]\nCALL 0x0040c3e0\nMOV RBX,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,R12\nCALL 0x0040c3e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x00402840\nJMP 0x00404500\nXOR R14D,R14D\nJMP 0x00404500\nCMP EDX,0x8000\nJZ 0x0040510c\nCMP EDX,0xa000\nJZ 0x00405527\nMOV AL,byte ptr [R12 + 0x14]\nTEST AL,AL\nJZ 0x00405527\nAND ECX,0x1ff\nSUB RSP,0x8\nLEA RAX,[-0x108 + RBP]\nLEA R9,[RBP + -0x29]\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,R12\nMOV R8D,R13D\nPUSH RAX\nCALL 0x00406b90\nADD RSP,0x10\nTEST AL,AL\nJZ 0x00404ffc\nMOV SIL,0x1\nXOR R13D,R13D\nJMP 0x00405a65\nXOR EAX,EAX\nXOR AL,0x1\nMOVZX ECX,AL\nLEA RSI,[-0x198 + RBP]\nLEA RDX,[-0x108 + RBP]\nMOV RDI,R13\nCALL 0x0040d7d0\nTEST EAX,EAX\nJS 0x004051c0\nMOV RAX,qword ptr [RBP + 0x28]\nTEST RAX,RAX\nJZ 0x00405177\nMOV byte ptr [RAX],0x1\nMOV RDX,qword ptr [-0x108 + RBP]\nMOV RSI,qword ptr [-0x100 + RBP]\nMOV RDI,R13\nCALL 0x00408590\nTEST RAX,RAX\nJZ 0x004051b8\nMOVZX ECX,byte ptr [R12 + 0x2d]\nMOVZX R8D,BL\nMOV EDX,0x1\nMOV RDI,RAX\nMOV RSI,R13\nMOV qword ptr [RBP + -0x68],RAX\nCALL 0x00406360\nTEST AL,AL\nJZ 0x00405380\nMOV R14B,0x1\nJMP 0x00404500\nMOV dword ptr [RBP + -0x50],R14D\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x00405202\nLEA RDX,[-0x198 + RBP]\nMOV RDI,R12\nMOV RSI,R13\nCALL 0x004064e0\nTEST AL,AL\nMOV R13,qword ptr [RBP + -0x48]\nMOV RAX,qword ptr [RBP + 0x28]\nMOV RDX,qword ptr [RBP + -0x58]\nJZ 0x00405257\nMOV R14B,0x1\nTEST RAX,RAX\nJZ 0x00404500\nMOV byte ptr [RAX],0x1\nJMP 0x00404500\nMOV R13,qword ptr [RBP + -0x48]\nCMP R13D,0x4000\nMOV RDX,qword ptr [RBP + -0x58]\nJZ 0x00405257\nMOV EAX,dword ptr [R12 + 0x8]\nMOV R14B,0x1\nCMP EAX,0x2\nJZ 0x00404500\nCMP EAX,0x3\nJNZ 0x00405257\nLEA RDX,[-0x198 + RBP]\nMOV RDI,R12\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x00406560\nTEST AL,AL\nJZ 0x00404500\nMOV AL,byte ptr [-0x230 + RBP]\nTEST AL,AL\nMOV RDX,qword ptr [RBP + -0x58]\nJZ 0x00405267\nJMP 0x00404500\nMOV R14B,0x1\nCMP byte ptr [-0x230 + RBP],0x0\nJNZ 0x00404500\nMOV EAX,0xf000\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0x4000\nMOV R14,qword ptr [RBP + -0x38]\nJZ 0x004052d8\nCMP R13D,0x4000\nJNZ 0x0040529d\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x0040547e\nCMP dword ptr [R12],0x0\nJZ 0x0040547e\nCMP byte ptr [RBP + 0x10],0x0\nJZ 0x004052d8\nCMP dword ptr [R12],0x3\nJZ 0x004052d8\nMOV RDI,qword ptr [R12 + 0x38]\nLEA RDX,[-0x198 + RBP]\nMOV RSI,R14\nCALL 0x00409500\nMOV RDX,qword ptr [RBP + -0x58]\nTEST AL,AL\nJZ 0x004052d8\nMOV RBX,R14\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412349\nJMP 0x0040548b\nCMP R13D,0x4000\nJZ 0x0040530a\nMOV EAX,0xf000\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0x4000\nJNZ 0x0040530a\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x00405575\nCMP dword ptr [R12],0x0\nJZ 0x00405575\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x0040533f\nMOV EAX,0xf000\nMOV ECX,dword ptr [-0xf0 + RBP]\nAND ECX,EAX\nCMP ECX,0x4000\nJNZ 0x0040533f\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0x4000\nJZ 0x0040533f\nCMP dword ptr [R12],0x0\nJZ 0x004056f8\nCMP dword ptr [R12],0x0\nMOV byte ptr [RBP + -0x60],BL\nJZ 0x00405361\nMOV RDI,R15\nCALL 0x004092f0\nMOV RDI,RAX\nCALL 0x00406680\nMOV RDX,qword ptr [RBP + -0x58]\nTEST AL,AL\nJZ 0x004053d7\nMOV EAX,0xf000\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0x4000\nJNZ 0x00405397\nXOR R14D,R14D\nXOR EBX,EBX\nMOV AL,byte ptr [RBP + 0x10]\nJMP 0x004045f0\nXOR EAX,EAX\nMOV qword ptr [RBP + -0x58],RAX\nCMP byte ptr [R12 + 0x24],0x0\nJNZ 0x00405004\nJMP 0x00405009\nCMP byte ptr [R12 + 0x18],0x0\nMOV AL,byte ptr [RBP + 0x10]\nJZ 0x004055da\nXOR R14D,R14D\nXOR EBX,EBX\nJMP 0x004045f0\nMOV qword ptr [RBP + -0x60],RBX\nMOV EBX,dword ptr [-0x180 + RBP]\nMOV EAX,EBX\nAND EAX,0x1c0\nCMP EAX,0x1c0\nJNZ 0x004055aa\nMOV dword ptr [RBP + -0x40],EBX\nXOR R14D,R14D\nJMP 0x0040573e\nCMP byte ptr [R12 + 0x18],0x0\nJNZ 0x004053f5\nMOV EAX,0xf000\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0x4000\nJZ 0x00405361\nMOV ESI,dword ptr [R12]\nMOV RDI,R14\nCALL 0x00408af0\nMOV qword ptr [RBP + -0x68],RAX\nMOV RDI,RAX\nMOV RSI,R15\nCALL 0x00402650\nTEST EAX,EAX\nJZ 0x00405689\nMOV RDI,qword ptr [RBP + -0x68]\nMOV R14,RDI\nCALL 0x00402440\nMOV RBX,RSP\nLEA RDX,[RAX + 0x1]\nADD RAX,0x10\nAND RAX,-0x10\nSUB RBX,RAX\nMOV RSP,RBX\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x004026d0\nMOV RDI,R14\nCALL 0x00402290\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RSI,RBX\nCALL 0x004028e0\nTEST EAX,EAX\nJZ 0x004057ca\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nCMP EBX,0x2\nJNZ 0x00405813\nXOR EBX,EBX\nMOV byte ptr [RBP + -0x29],0x1\nJMP 0x0040597c\nMOV RBX,R14\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412315\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,RBX\nCALL 0x0040c3e0\nMOV R13,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R12\nMOV RCX,R13\nJMP 0x0040485d\nMOV RAX,qword ptr [-0x228 + RBP]\nCMP RAX,qword ptr [-0x2b8 + RBP]\nJNZ 0x00405658\nMOV R13,qword ptr [-0x230 + RBP]\nMOV RBX,qword ptr [-0x2c0 + RBP]\nMOV RDI,R14\nCALL 0x00402290\nCMP R13,RBX\nJZ 0x00404da2\nJMP 0x00405660\nXOR R14D,R14D\nMOV dword ptr [RBP + -0x4c],0x0\nMOV dword ptr [RBP + -0x40],EAX\nMOV RBX,qword ptr [RBP + -0x70]\nTEST RBX,RBX\nJNZ 0x00405780\nJMP 0x00405795\nLEA EAX,[-0x1000 + RDX]\nSHR EAX,0xc\nCMP EAX,0xb\nJA 0x004058bf\nJMP qword ptr [0x412130 + RAX*0x8]\nNOT R13D\nAND R13D,dword ptr [RBP + -0x50]\nMOV RDX,qword ptr [-0xe0 + RBP]\nMOV RDI,R14\nMOV ESI,R13D\nCALL 0x0040f1c0\nTEST EAX,EAX\nJZ 0x0040581f\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412667\nJMP 0x00404fd0\nMOV RBX,R14\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412374\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nJMP 0x0040480b\nMOV ESI,EBX\nOR ESI,0x1c0\nMOV R14,qword ptr [RBP + -0x38]\nMOV RDI,R14\nCALL 0x00402860\nTEST EAX,EAX\nJZ 0x00405738\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4125d0\nJMP 0x00404fd0\nCMP byte ptr [R12 + 0x15],0x0\nJZ 0x004057d6\nMOV RBX,qword ptr [RBP + -0x38]\nMOV RDI,RBX\nCALL 0x004022f0\nTEST EAX,EAX\nJZ 0x00405609\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RBP + -0x68],EAX\nCMP EAX,0x2\nJNZ 0x0040582b\nMOV byte ptr [RBP + -0x29],0x1\nCMP byte ptr [R12 + 0x2d],0x0\nJZ 0x00405977\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41245f\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00402840\nJMP 0x0040597a\nMOV RDI,R14\nCALL 0x00402290\nXOR EDI,EDI\nMOV ESI,0x4125ed\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RBP + -0x38]\nCALL 0x0040c5a0\nJMP 0x00404d32\nCMP byte ptr [R12 + 0x18],0x0\nMOV EAX,0x4123d8\nMOV ESI,0x41240a\nCMOVNZ RSI,RAX\nMOV RBX,R14\nXOR R14D,R14D\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00402420\nMOV R13,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,RBX\nCALL 0x0040c3e0\nMOV R12,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV R8,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R13\nMOV RCX,R12\nCALL 0x00402870\nMOV RDI,qword ptr [RBP + -0x68]\nCALL 0x00402290\nJMP 0x00404500\nMOV RBX,R14\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4123a5\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,R15\nCALL 0x0040c5a0\nMOV R15,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBX\nCALL 0x0040c5a0\nJMP 0x0040484e\nMOV dword ptr [RBP + -0x40],EBX\nMOV R14B,0x1\nCMP byte ptr [R13],0x0\nMOV RBX,qword ptr [RBP + -0x70]\nJNZ 0x00405765\nMOV RDX,qword ptr [-0x198 + RBP]\nMOV RSI,qword ptr [-0x190 + RBP]\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x00408590\nMOV byte ptr [R13],0x1\nCMP byte ptr [R12 + 0x2d],0x0\nJZ 0x0040577b\nXOR EDX,EDX\nMOV RDI,R15\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x004066b0\nTEST RBX,RBX\nJZ 0x00405795\nMOV AL,byte ptr [R12 + 0x1b]\nTEST AL,AL\nJZ 0x00405795\nMOV RAX,qword ptr [RBX]\nCMP RAX,qword ptr [-0x108 + RBP]\nJNZ 0x004057be\nMOVZX EDX,byte ptr [RBP + -0x29]\nLEA RCX,[-0x108 + RBP]\nMOV RDI,R15\nMOV RSI,qword ptr [RBP + -0x38]\nMOV R8,qword ptr [RBP + -0x60]\nMOV R9,R12\nPUSH qword ptr [RBP + 0x20]\nPUSH R13\nCALL 0x004069c0\nADD RSP,0x10\nJMP 0x004057c0\nMOV AL,0x1\nXOR R13D,R13D\nXOR ESI,ESI\nJMP 0x00405a6d\nMOV R14B,0x1\nMOV byte ptr [RBP + -0x29],0x1\nJMP 0x0040597c\nCMP byte ptr [R12 + 0x21],0x0\nJZ 0x004057ec\nCMP qword ptr [-0x188 + RBP],0x1\nJA 0x004055e6\nCMP dword ptr [R12 + 0x4],0x2\nJNZ 0x00405373\nMOV EAX,0xf000\nAND EAX,dword ptr [-0xf0 + RBP]\nCMP EAX,0x8000\nJZ 0x00405373\nJMP 0x004055e6\nXOR EDI,EDI\nMOV ESI,0x41243d\nJMP 0x004047e7\nMOV AL,0x1\nXOR R13D,R13D\nXOR ESI,ESI\nJMP 0x00405a67\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41244e\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,dword ptr [RBP + -0x68]\nJMP 0x0040480b\nNOT R13D\nAND R13D,dword ptr [RBP + -0x50]\nXOR EDX,EDX\nMOV RDI,R14\nMOV ESI,R13D\nCALL 0x0040f1c0\nTEST EAX,EAX\nJZ 0x00405988\nAND R13D,0xffffefff\nMOV RDI,qword ptr [RBP + -0x38]\nMOV ESI,R13D\nCALL 0x004026b0\nTEST EAX,EAX\nJZ 0x00405a0b\nCALL 0x004022e0\nMOV R14D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412651\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nJMP 0x004059be\nXOR EDI,EDI\nMOV ESI,0x4126e5\nJMP 0x00404d18\nMOV RSI,qword ptr [-0xd8 + RBP]\nMOV RDI,R15\nCALL 0x00408a20\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040599a\nMOV RDI,RBX\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x004024c0\nTEST EAX,EAX\nJZ 0x00405a1a\nCALL 0x004022e0\nMOV R13D,dword ptr [RAX]\nCMP byte ptr [R12 + 0x2c],0x0\nJZ 0x004059d2\nMOV AL,byte ptr [RBP + -0x29]\nTEST AL,AL\nJNZ 0x004059d2\nMOV EAX,0xf000\nAND EAX,dword ptr [-0x180 + RBP]\nCMP EAX,0xa000\nJNZ 0x004059d2\nMOV R14,qword ptr [-0x168 + RBP]\nMOV RDI,RBX\nCALL 0x00402440\nCMP R14,RAX\nJNZ 0x004059d2\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RSI,R14\nCALL 0x00408a20\nMOV R14,RAX\nTEST RAX,RAX\nJZ 0x00405ea9\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00402650\nTEST EAX,EAX\nSETZ AL\nMOV dword ptr [RBP + -0x40],EAX\nJMP 0x00405eb0\nXOR R14D,R14D\nXOR EBX,EBX\nMOV AL,byte ptr [RBP + 0x10]\nMOV RDX,qword ptr [RBP + -0x58]\nJMP 0x004045f0\nXOR ESI,ESI\nXOR R14D,R14D\nMOV dword ptr [RBP + -0x40],EAX\nMOV AL,0x1\nXOR R13D,R13D\nJMP 0x00405a6d\nCALL 0x004022e0\nMOV R14D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412685\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nJMP 0x00404ff4\nMOV RDI,RBX\nCALL 0x00402290\nXOR EDI,EDI\nMOV ESI,0x4126a2\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R13D\nJMP 0x00404ff4\nXOR R13D,R13D\nXOR ESI,ESI\nXOR R14D,R14D\nMOV dword ptr [RBP + -0x40],EAX\nMOV AL,0x1\nJMP 0x00405a6d\nMOV RDI,RBX\nCALL 0x00402290\nCMP byte ptr [R12 + 0x24],0x0\nJZ 0x00405a2f\nCALL 0x00407770\nCMP byte ptr [R12 + 0x1c],0x0\nJZ 0x00405a60\nMOV ESI,dword ptr [-0xec + RBP]\nMOV EDX,dword ptr [-0xe8 + RBP]\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x004027c0\nTEST EAX,EAX\nJZ 0x00405a60\nMOV RDI,R12\nCALL 0x00405f00\nTEST AL,AL\nJZ 0x00405dd3\nMOV R13B,0x1\nXOR ESI,ESI\nMOV AL,0x1\nXOR R14D,R14D\nMOV dword ptr [RBP + -0x40],ECX\nCMP byte ptr [RBP + -0x29],0x0\nMOV RBX,qword ptr [RBP + -0x48]\nJZ 0x00405b4a\nCMP byte ptr [RBP + 0x10],0x0\nJZ 0x00405acc\nCMP qword ptr [R12 + 0x38],0x0\nJZ 0x00405acc\nMOV dword ptr [RBP + -0x60],ESI\nMOV qword ptr [RBP + -0x70],R13\nMOV R13D,R14D\nMOV R14D,EAX\nLEA RSI,[-0x230 + RBP]\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x004107b0\nTEST EAX,EAX\nJNZ 0x00405abf\nMOV RDI,qword ptr [R12 + 0x38]\nLEA RDX,[-0x230 + RBP]\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x00409480\nMOV EAX,R14D\nMOV R14D,R13D\nMOV R13,qword ptr [RBP + -0x70]\nMOV ESI,dword ptr [RBP + -0x60]\nCMP EBX,0x4000\nJZ 0x00405ae1\nMOV CL,byte ptr [R12 + 0x17]\nTEST CL,CL\nJNZ 0x00405c1a\nTEST SIL,SIL\nJNZ 0x00405c1a\nCMP byte ptr [R12 + 0x1e],0x0\nJZ 0x00405c15\nMOV byte ptr [RBP + -0x48],AL\nLEA RBX,[-0x108 + RBP]\nMOV RDI,RBX\nCALL 0x0040d730\nMOV qword ptr [-0x230 + RBP],RAX\nMOV qword ptr [-0x228 + RBP],RDX\nMOV RDI,RBX\nCALL 0x0040d750\nMOV qword ptr [-0x220 + RBP],RAX\nMOV qword ptr [-0x218 + RBP],RDX\nLEA RSI,[-0x230 + RBP]\nTEST R13B,R13B\nJZ 0x00405bb1\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x004077b0\nTEST EAX,EAX\nJNZ 0x00405bbe\nJMP 0x00405c12\nCMP EBX,0x4000\nJZ 0x00405a7b\nMOV CL,byte ptr [R12 + 0x14]\nTEST CL,CL\nJNZ 0x00405a7b\nMOV DL,byte ptr [R12 + 0x24]\nMOV CL,byte ptr [R12 + 0x20]\nOR CL,DL\nJZ 0x00405a7b\nMOV dword ptr [RBP + -0x60],ESI\nMOVZX ESI,DL\nMOV qword ptr [RBP + -0x70],R13\nMOV R13D,R14D\nMOV R14D,EAX\nXOR EDX,EDX\nMOV RDI,qword ptr [RBP + -0x38]\nMOV RCX,R12\nCALL 0x00406750\nMOV ESI,dword ptr [RBP + -0x60]\nMOV EAX,R14D\nMOV R14D,R13D\nMOV R13,qword ptr [RBP + -0x70]\nCMP byte ptr [R12 + 0x25],0x0\nJNZ 0x00404ffc\nJMP 0x00405a7b\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x0040e280\nTEST EAX,EAX\nJZ 0x00405c12\nCALL 0x004022e0\nMOV qword ptr [RBP + -0x70],R13\nMOV R13D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4126fe\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R13D\nMOV R13,qword ptr [RBP + -0x70]\nMOV RDX,RBX\nCALL 0x00402870\nCMP byte ptr [R12 + 0x23],0x0\nJZ 0x00405c12\nXOR R14D,R14D\nJMP 0x00404500\nMOV AL,byte ptr [RBP + -0x48]\nTEST R13B,R13B\nJZ 0x00405c25\nTEST AL,AL\nSETNZ R14B\nJMP 0x00404500\nMOV dword ptr [RBP + -0x48],R14D\nCMP byte ptr [R12 + 0x1c],0x0\nJZ 0x00405c96\nMOV R13D,EAX\nMOV AL,byte ptr [RBP + -0x29]\nTEST AL,AL\nMOV RBX,qword ptr [RBP + -0x38]\nMOV R14D,dword ptr [RBP + -0x50]\nJNZ 0x00405c5f\nMOV ECX,dword ptr [-0xec + RBP]\nCMP ECX,dword ptr [-0x17c + RBP]\nJNZ 0x00405c5f\nMOV ECX,dword ptr [-0xe8 + RBP]\nCMP ECX,dword ptr [-0x178 + RBP]\nJZ 0x00405c91\nMOVZX R8D,AL\nLEA RCX,[-0x108 + RBP]\nLEA R9,[-0x198 + RBP]\nMOV EDX,0xffffffff\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x004077e0\nCMP EAX,-0x1\nJZ 0x00405ce0\nTEST EAX,EAX\nJNZ 0x00405c91\nAND R14D,0xfffff1ff\nMOV EAX,R13D\nJMP 0x00405c9e\nMOV RBX,qword ptr [RBP + -0x38]\nMOV R14D,dword ptr [RBP + -0x50]\nMOV R13D,EAX\nCMP byte ptr [R12 + 0x1d],0x0\nJNZ 0x00405cb1\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x00405ce8\nMOV ESI,0xffffffff\nMOV ECX,0xffffffff\nMOV RDI,R15\nMOV RDX,RBX\nMOV R8D,R14D\nCALL 0x00408930\nTEST EAX,EAX\nMOV ECX,R13D\nJZ 0x00405e9e\nCMP byte ptr [R12 + 0x23],0x0\nJZ 0x00405e9e\nXOR R14D,R14D\nJMP 0x00404500\nCMP byte ptr [R12 + 0x2a],0x0\nJZ 0x00405d16\nMOV EDX,dword ptr [R12 + 0x10]\nMOV ESI,0xffffffff\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x004089c0\nTEST EAX,EAX\nMOV ECX,R13D\nJZ 0x00405e9e\nXOR R14D,R14D\nJMP 0x00404500\nCMP byte ptr [R12 + 0x1f],0x0\nJZ 0x00405d4d\nCALL 0x00405f30\nNOT EAX\nAND EAX,0x1ff\nMOV ESI,0xffffffff\nMOV RDI,qword ptr [RBP + -0x38]\nMOV EDX,EAX\nCALL 0x004089c0\nTEST EAX,EAX\nMOV ECX,R13D\nJZ 0x00405e9e\nXOR R14D,R14D\nJMP 0x00404500\nCMP dword ptr [RBP + -0x4c],0x0\nJZ 0x00405e11\nCALL 0x00405f30\nNOT EAX\nAND dword ptr [RBP + -0x4c],EAX\nCMP byte ptr [RBP + -0x48],0x0\nJNZ 0x00405e2f\nCMP dword ptr [RBP + -0x4c],0x0\nJZ 0x00405e2f\nCMP byte ptr [RBP + -0x29],0x0\nJZ 0x00405e1a\nLEA RSI,[-0x198 + RBP]\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x004107b0\nTEST EAX,EAX\nJZ 0x00405e1a\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412055\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nJMP 0x004044f8\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4126c1\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nMOV RCX,qword ptr [RBP + -0x38]\nCALL 0x00402870\nCMP byte ptr [R12 + 0x24],0x0\nJNZ 0x00405004\nJMP 0x00405009\nMOV dword ptr [RBP + -0x4c],0x0\nJMP 0x00405e2f\nMOV EAX,dword ptr [-0x180 + RBP]\nMOV dword ptr [RBP + -0x40],EAX\nNOT EAX\nTEST dword ptr [RBP + -0x4c],EAX\nJZ 0x00405e2f\nMOV AL,0x1\nMOV dword ptr [RBP + -0x48],EAX\nTEST byte ptr [RBP + -0x48],0x1\nMOV EAX,dword ptr [RBP + -0x4c]\nMOV ECX,R13D\nJZ 0x00405e9e\nMOV ESI,dword ptr [RBP + -0x40]\nOR ESI,EAX\nMOV RDI,qword ptr [RBP + -0x38]\nCALL 0x00402860\nMOV ECX,R13D\nTEST EAX,EAX\nJZ 0x00405e9e\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412716\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RBP + -0x38]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBX\nCALL 0x00402870\nMOV ECX,R13D\nCMP byte ptr [R12 + 0x23],0x0\nJNZ 0x00404500\nTEST CL,CL\nSETNZ R14B\nJMP 0x00404500\nMOV dword ptr [RBP + -0x40],0x0\nMOV RDI,R14\nCALL 0x00402290\nMOV RDI,RBX\nCALL 0x00402290\nCMP byte ptr [RBP + -0x40],0x0\nJNZ 0x00405a22\nJMP 0x004059da\n'
p438
S'55\n48 89 e5\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 02 00 00\n4d 89 cc\n4d 89 c6\n48 89 cb\n49 89 f5\n49 89 ff\n48 8b 75 28\n48 8b 4d 20\n88 55 d7\n48 85 f6\n74 0c\n41 8a 44 24 18\n84 c0\n74 03\nc6 06 00\nc6 01 00\n41 83 7c 24 04 02\n75 15\n48 8d b5 f8 fe ff ff\n4c 89 ff\ne8 07 c3 00 00\n85 c0\n75 15\neb 63\n48 8d b5 f8 fe ff ff\n4c 89 ff\ne8 d2 c2 00 00\n85 c0\n74 50\ne8 19 de ff ff\n44 8b 20\n45 31 f6\n31 ff\nbe 55 20 41 00\nba 05 00 00 00\ne8 42 df ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 d2 7f 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 e6\n48 89 da\ne8 70 e3 ff ff\n44 89 f0\n48 8d 65 d8\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n4c 89 75 c0\n48 89 5d 90\n44 8b b5 10 ff ff ff\n44 89 f0\n25 00 f0 00 00\n48 89 45 b8\n3d 00 40 00 00\n75 0c\n41 80 7c 24 29 00\n0f 84 a8 01 00 00\n8a 45 10\n84 c0\n74 79\n81 7d b8 00 40 00 00\n74 59\n41 83 3c 24 00\n75 52\n49 8b 7c 24 40\n48 8d 95 f8 fe ff ff\n4c 89 fe\ne8 95 4f 00 00\n84 c0\n74 3a\n31 ff\nbe c8 22 41 00\nba 05 00 00 00\ne8 a0 de ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 30 7f 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 cf e2 ff ff\n41 b6 01\ne9 57 ff ff ff\n49 8b 7c 24 40\n48 8d 95 f8 fe ff ff\n4c 89 fe\ne8 c3 4e 00 00\n8a 45 10\n0f b6 f0\n4c 89 e7\ne8 95 19 00 00\n89 c3\n80 7d d7 00\n4c 89 6d c8\n0f 84 bb 00 00 00\n88 5d a0\n44 89 75 b0\n31 d2\n45 31 f6\n31 db\n8a 45 10\n4c 8b 6d b8\n84 c0\n48 89 5d a8\n0f 84 8d 02 00 00\n49 83 7c 24 38 00\n0f 84 81 02 00 00\n41 80 7c 24 18 00\n0f 85 75 02 00 00\n41 83 3c 24 00\n0f 85 6a 02 00 00\n84 d2\n0f 84 43 02 00 00\n48 8d 9d 68 fe ff ff\nb8 00 f0 00 00\n23 43 18\n3d 00 a0 00 00\n0f 85 44 02 00 00\n49 8b 7c 24 38\n48 8b 75 c8\n48 89 da\ne8 ae 4e 00 00\n84 c0\n0f 84 2b 02 00 00\n45 31 f6\n31 ff\nbe 6b 24 41 00\nba 05 00 00 00\ne8 b2 dd ff ff\n49 89 c4\n31 ff\nbe 04 00 00 00\n4c 89 fa\ne8 60 7d 00 00\n49 89 c7\nbf 01 00 00 00\nbe 04 00 00 00\n48 8b 55 c8\ne9 b3 01 00 00\n81 7d b8 00 80 00 00\n75 7b\n41 80 7c 24 18 00\n0f 85 8f 00 00 00\n41 80 7c 24 2b 00\n0f 85 83 00 00 00\n41 80 7c 24 17 00\n75 7b\n41 83 3c 24 00\n75 74\n41 80 7c 24 15 00\n75 6c\n48 8d b5 68 fe ff ff\n4c 89 ef\ne8 b3 c0 00 00\n31 c9\n85 c0\n75 6c\ne9 83 00 00 00\n45 31 f6\n31 ff\nbe b2 22 41 00\nba 05 00 00 00\ne8 24 dd ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 b4 7d 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\ne9 de fd ff ff\n41 80 7c 24 14 00\n74 18\n81 7d b8 00 a0 00 00\n74 0f\n0f b7 45 b8\n3d 00 40 00 00\n0f 85 65 ff ff ff\n48 8d b5 68 fe ff ff\n4c 89 ef\ne8 67 c0 00 00\nb1 01\n85 c0\n74 1c\n88 5d a0\ne8 89 db ff ff\n8b 18\n83 fb 02\n75 7f\n44 89 75 b0\nc6 45 d7 01\ne9 77 fe ff ff\n48 89 4d a8\n48 8d b5 f8 fe ff ff\n48 8d 8d 68 fe ff ff\n4c 8d 8d d0 fd ff ff\n4c 89 ff\n4c 89 ea\n4d 89 e0\ne8 ee 17 00 00\n84 c0\n74 7d\n81 7d b8 00 40 00 00\n0f 84 1d 0a 00 00\n41 80 7c 24 2c 00\n0f 84 11 0a 00 00\n41 80 7c 24 1e 00\n0f 84 e8 07 00 00\n41 80 7c 24 18 00\n0f 84 83 09 00 00\n48 8b 85 68 fe ff ff\n48 3b 85 f8 fe ff ff\n0f 94 c0\ne9 6f 09 00 00\n45 31 f6\n31 ff\nbe 55 20 41 00\nba 05 00 00 00\ne8 2f dc ff ff\n49 89 c7\nbf 04 00 00 00\n48 8b 75 c8\ne8 be 7c 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n4c 89 fa\ne9 e8 fc ff ff\n45 31 f6\n31 ff\nbe f9 22 41 00\nba 05 00 00 00\ne8 f9 db ff ff\n49 89 c4\n31 ff\nbe 04 00 00 00\n4c 89 fa\ne8 a7 7b 00 00\n49 89 c7\nbf 01 00 00 00\nbe 04 00 00 00\n4c 89 ea\ne8 92 7b 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 e2\n4c 89 f9\n49 89 d8\ne8 0b e0 ff ff\ne9 96 fc ff ff\n48 8d 9d d0 fd ff ff\n48 8b 7d c8\n48 89 de\ne8 33 bf 00 00\n85 c0\n0f 84 a9 fd ff ff\n48 8b 5d a8\n41 81 fd 00 40 00 00\n74 1e\n41 8a 44 24 2d\n84 c0\n74 15\n31 d2\n45 84 f6\n48 0f 45 d3\n4c 89 ff\n48 8b 75 c8\ne8 00 1e 00 00\n41 81 fd 00 40 00 00\n0f 95 c3\n41 80 7c 24 29 00\n74 39\n84 db\n75 35\n48 8b 85 f8 fe ff ff\n48 8b 8d 00 ff ff ff\n80 7d 10 00\n0f 84 91 00 00 00\n48 8b 7d c8\n48 89 ce\n48 89 c2\ne8 a3 3c 00 00\n48 85 c0\n0f 85 8d 00 00 00\ne9 22 01 00 00\n41 80 7c 24 18 00\n74 1a\n48 83 bd 08 ff ff ff 01\n75 10\n48 8b b5 f8 fe ff ff\n48 8b bd 00 ff ff ff\neb 58\n41 80 7c 24 21 00\n0f 84 f4 00 00 00\n41 80 7c 24 17 00\n0f 85 e8 00 00 00\n48 83 bd 08 ff ff ff 01\n77 19\n41 8b 4c 24 04\n83 f9 03\n0f 94 c0\n83 f9 04\n74 09\n22 45 10\n0f 84 c5 00 00 00\n48 8b 95 f8 fe ff ff\n48 8b b5 00 ff ff ff\n48 8b 7d c8\ne9 79 ff ff ff\n48 89 cf\n48 89 c6\ne8 d6 3b 00 00\n48 85 c0\n0f 84 9a 00 00 00\n41 81 fd 00 40 00 00\n48 89 45 98\n0f 85 32 01 00 00\n4c 89 75 88\n4c 89 ff\n48 89 c6\n49 89 c6\ne8 6a 82 00 00\n84 c0\n0f 84 b5 01 00 00\n31 ff\nbe 9c 24 41 00\nba 05 00 00 00\ne8 61 da ff ff\n49 89 c6\n48 8b 15 47 5b 21 00\n31 ff\nbe 04 00 00 00\ne8 0b 7a 00 00\n49 89 c7\n48 8b 15 39 5b 21 00\nbf 01 00 00 00\nbe 04 00 00 00\ne8 f2 79 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 f2\n4c 89 f9\n49 89 d8\ne8 6b de ff ff\n48 8b 45 20\nc6 00 01\n41 80 7c 24 24 00\n0f 85 ec 05 00 00\ne9 ec 05 00 00\n31 c0\n41 80 7c 24 18 00\n48 89 45 98\n0f 84 61 02 00 00\n4c 89 ff\n48 8b 75 c8\ne8 a5 de ff ff\n85 c0\n0f 84 af 00 00 00\ne8 98 d8 ff ff\n49 89 c6\n41 8b 1e\n83 fb 12\n0f 84 7b 01 00 00\n83 fb 16\n0f 85 95 01 00 00\n31 ff\nbe 2c 25 41 00\nba 05 00 00 00\ne8 af d9 ff ff\n49 89 c6\n48 8b 15 95 5a 21 00\n31 ff\nbe 04 00 00 00\ne8 59 79 00 00\n49 89 c7\n48 8b 15 87 5a 21 00\nbf 01 00 00 00\nbe 04 00 00 00\ne8 40 79 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 f2\n4c 89 f9\n49 89 d8\ne8 b9 dd ff ff\n48 8b 45 20\nc6 00 01\n41 b6 01\ne9 3a fa ff ff\n41 0f b6 4c 24 2d\n44 0f b6 45 a0\nba 01 00 00 00\n48 89 c7\n48 8b 75 c8\ne8 7e 18 00 00\n41 b6 01\n84 c0\n0f 85 13 fa ff ff\ne9 0a 05 00 00\n41 80 7c 24 2d 00\n0f 94 c0\n08 d8\n75 16\n31 d2\n45 84 f6\n48 0f 45 55 a8\n4c 89 ff\n48 8b 75 c8\ne8 9b 1b 00 00\n41 80 7c 24 20 00\n48 8b 7d c8\n74 0f\n31 f6\nba 01 00 00 00\n4c 89 e1\ne8 20 1c 00 00\n48 8b 45 28\n48 85 c0\n74 03\nc6 00 01\n41 b6 01\n80 7d 10 00\n0f 84 b7 f9 ff ff\n49 8b 7c 24 38\n48 8d 95 f8 fe ff ff\n48 8b 75 c8\ne8 22 49 00 00\ne9 9d f9 ff ff\n48 8b 7d c8\n4c 89 f6\ne8 a1 80 00 00\n84 c0\n0f 84 8d 00 00 00\n31 ff\nbe c9 24 41 00\nba 05 00 00 00\ne8 98 d8 ff ff\n48 89 c3\n48 8b 35 7e 59 21 00\nbf 04 00 00 00\ne8 24 79 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 c3 dc ff ff\n41 b6 01\n48 8b 4d 28\n48 85 c9\n0f 84 43 f9 ff ff\n41 8a 44 24 18\n84 c0\n0f 84 36 f9 ff ff\nc6 01 01\ne9 2e f9 ff ff\n41 81 fd 00 40 00 00\n0f 85 94 00 00 00\n48 8b 7d c8\ne8 28 d8 ff ff\n85 c0\n0f 85 90 00 00 00\ne9 97 00 00 00\n45 31 f6\n31 ff\nbe 5b 25 41 00\ne9 2b 03 00 00\n41 8b 4c 24 04\n83 f9 03\n0f 94 c0\n83 f9 04\n0f 84 75 03 00 00\n22 45 10\n4c 8b 75 88\n0f 85 75 03 00 00\n31 ff\nbe ff 24 41 00\nba 05 00 00 00\ne8 ea d7 ff ff\n49 89 c6\n31 ff\nbe 04 00 00 00\n48 8b 55 c8\ne8 97 77 00 00\n49 89 c7\nbf 01 00 00 00\nbe 04 00 00 00\n48 8b 55 98\ne8 81 77 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 f2\n4c 89 f9\ne9 98 01 00 00\n48 8b 7d c8\ne8 74 d6 ff ff\n85 c0\n74 0c\n41 8b 1e\n83 fb 02\n0f 85 99 02 00 00\nc6 45 d7 01\n41 80 7c 24 2a 00\n8b 45 b0\n74 05\n41 8b 44 24 10\n89 45 88\n45 31 f6\n41 81 fd 00 40 00 00\nb8 12 00 00 00\n41 0f 45 c6\n41 80 7c 24 1c 00\n4c 89 eb\n41 bd 3f 00 00 00\n44 0f 44 e8\n0f b6 55 d7\n4c 89 ff\n48 8b 75 c8\n4c 89 e1\ne8 f4 1a 00 00\n84 c0\n0f 84 1c f8 ff ff\n8b 4d 88\n41 21 cd\n81 fb 00 40 00 00\n44 89 6d b4\n75 4a\n48 8d bd f8 fe ff ff\n4c 8b 75 c0\n4c 89 f6\ne8 87 1c 00 00\n84 c0\n0f 84 13 01 00 00\n31 ff\nbe ac 25 41 00\nba 05 00 00 00\ne8 fe d6 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 8e 77 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\ne9 b4 02 00 00\n41 80 7c 24 2b 00\n4c 8b 75 c8\n0f 84 9d 01 00 00\n41 80 3f 2f\n74 50\n4c 89 f7\ne8 d2 44 00 00\n49 89 c6\n41 80 3e 2e\n75 07\n41 80 7e 01 00\n74 2c\n48 8d b5 d0 fd ff ff\nbf eb 25 41 00\ne8 11 ba 00 00\n85 c0\n75 17\n48 8d b5 40 fd ff ff\n4c 89 f7\ne8 fe b9 00 00\n85 c0\n0f 84 36 07 00 00\n4c 89 f7\ne8 ee d4 ff ff\n4c 8b 75 c8\n4c 89 ff\n4c 89 f6\ne8 0f d7 ff ff\n85 c0\n0f 84 a7 0c 00 00\ne8 22 d5 ff ff\n8b 00\n89 45 b8\n31 ff\nbe 2c 26 41 00\nba 05 00 00 00\ne8 4c d6 ff ff\n49 89 c5\n31 ff\nbe 04 00 00 00\n4c 89 f2\ne8 fa 75 00 00\n49 89 c6\nbf 01 00 00 00\nbe 04 00 00 00\n4c 89 fa\ne8 e5 75 00 00\n48 89 c3\n31 ff\n31 c0\n8b 75 b8\n4c 89 ea\n4c 89 f1\n49 89 d8\ne8 5d da ff ff\n41 80 7c 24 24 00\n0f 85 e5 01 00 00\ne9 e5 01 00 00\n4c 8b 6d 18\n48 89 e0\n48 8d 58 e0\n48 89 dc\n4c 89 70 e0\n48 8b 8d 00 ff ff ff\n48 89 48 e8\n48 8b 8d f8 fe ff ff\n48 89 48 f0\n80 7d d7 00\n75 64\nb8 00 f0 00 00\n23 85 80 fe ff ff\n3d 00 40 00 00\n75 52\n48 89 5d a0\n41 8a 44 24 24\n41 8a 4c 24 20\n08 c1\n0f 84 8e 06 00 00\n0f b6 f0\n31 d2\n48 8b 7d c8\n4c 89 e1\ne8 c5 18 00 00\n41 80 7c 24 25 00\n48 8b 5d 90\n0f 85 61 01 00 00\nc7 45 b4 00 00 00 00\n45 31 f6\n89 45 c0\n48 85 db\n0f 85 cf 08 00 00\ne9 df 08 00 00\n8b 45 88\n25 ff 0f 00 00\n8b 75 b4\nf7 d6\n21 c6\n4c 8b 75 c8\n4c 89 f7\ne8 6f d4 ff ff\n85 c0\n0f 84 d1 00 00 00\ne8 02 d4 ff ff\n44 8b 38\n31 ff\nbe 3a 20 41 00\ne9 e3 00 00 00\n41 80 7c 24 17 00\n48 8b 55 b8\n0f 84 ee 01 00 00\n44 0f b6 45 a0\n45 31 ed\n31 d2\n31 c9\n4c 89 ff\n4c 89 f6\ne8 4c 14 00 00\n84 c0\n0f 84 e0 00 00 00\nb0 01\n31 f6\ne9 42 0b 00 00\n45 31 f6\n31 ff\nbe 70 25 41 00\nba 05 00 00 00\ne8 e7 d4 ff ff\n49 89 c4\n31 ff\nbe 04 00 00 00\n4c 89 fa\ne8 95 74 00 00\n49 89 c7\nbf 01 00 00 00\nbe 04 00 00 00\n48 8b 55 c8\ne8 7f 74 00 00\n49 89 c0\n31 ff\n31 c0\n89 de\n4c 89 e2\n4c 89 f9\ne8 fb d8 ff ff\n48 8b b5 f8 fe ff ff\n48 8b bd 00 ff ff ff\ne8 68 35 00 00\ne9 73 f5 ff ff\n48 8b 45 98\n4c 8b 75 88\ne9 85 fa ff ff\n48 8b 45 98\ne9 7c fa ff ff\n31 c0\ne9 a4 01 00 00\n48 8d b5 68 fe ff ff\n4c 89 f7\ne8 f7 b7 00 00\n85 c0\n0f 84 ef 03 00 00\ne8 1a d3 ff ff\n44 8b 38\n31 ff\nbe 55 20 41 00\nba 05 00 00 00\ne8 46 d4 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 f6\ne8 d6 74 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 da\ne8 74 d8 ff ff\n41 80 7c 24 24 00\n74 05\ne8 67 27 00 00\n48 83 7d 98 00\n48 8b 5d c8\n75 13\n48 8b b5 f8 fe ff ff\n48 8b bd 00 ff ff ff\ne8 c9 34 00 00\n48 8b 7d a8\n48 85 ff\n74 4a\n48 89 de\ne8 a8 d8 ff ff\n85 c0\n74 46\ne8 9f d2 ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 34 27 41 00\nba 05 00 00 00\ne8 c8 d3 ff ff\n49 89 c4\nbf 04 00 00 00\n48 89 de\ne8 58 74 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n4c 89 e2\ne9 81 f4 ff ff\n45 31 f6\ne9 7e f4 ff ff\n41 80 7c 24 2d 00\n74 59\n49 89 dc\n45 31 f6\n31 ff\nbe 48 27 41 00\nba 05 00 00 00\ne8 7f d3 ff ff\n49 89 c7\n31 ff\nbe 04 00 00 00\n48 8b 55 a8\ne8 2c 73 00 00\n48 89 c3\nbf 01 00 00 00\nbe 04 00 00 00\n4c 89 e2\ne8 17 73 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n4c 89 fe\n48 89 da\ne8 62 d7 ff ff\ne9 1d f4 ff ff\n45 31 f6\ne9 15 f4 ff ff\n81 fa 00 80 00 00\n74 19\n81 fa 00 a0 00 00\n0f 84 28 04 00 00\n41 8a 44 24 14\n84 c0\n0f 84 1b 04 00 00\n81 e1 ff 01 00 00\n48 83 ec 08\n48 8d 85 f8 fe ff ff\n4c 8d 4d d7\n4c 89 ff\n4c 89 f6\n4c 89 e2\n45 89 e8\n50\ne8 5d 1a 00 00\n48 83 c4 10\n84 c0\n0f 84 bd fe ff ff\n40 b6 01\n45 31 ed\ne9 1b 09 00 00\n31 c0\n34 01\n0f b6 c8\n48 8d b5 68 fe ff ff\n48 8d 95 f8 fe ff ff\n4c 89 ef\ne8 69 86 00 00\n85 c0\n78 55\n48 8b 45 28\n48 85 c0\n74 03\nc6 00 01\n48 8b 95 f8 fe ff ff\n48 8b b5 00 ff ff ff\n4c 89 ef\ne8 03 34 00 00\n48 85 c0\n74 26\n41 0f b6 4c 24 2d\n44 0f b6 c3\nba 01 00 00 00\n48 89 c7\n4c 89 ee\n48 89 45 98\ne8 b0 11 00 00\n84 c0\n0f 84 c8 01 00 00\n41 b6 01\ne9 40 f3 ff ff\n44 89 75 b0\n41 80 7c 24 18 00\n74 36\n48 8d 95 68 fe ff ff\n4c 89 e7\n4c 89 ee\ne8 02 13 00 00\n84 c0\n4c 8b 6d b8\n48 8b 45 28\n48 8b 55 a8\n74 69\n41 b6 01\n48 85 c0\n0f 84 06 f3 ff ff\nc6 00 01\ne9 fe f2 ff ff\n4c 8b 6d b8\n41 81 fd 00 40 00 00\n48 8b 55 a8\n74 44\n41 8b 44 24 08\n41 b6 01\n83 f8 02\n0f 84 dc f2 ff ff\n83 f8 03\n75 2e\n48 8d 95 68 fe ff ff\n4c 89 e7\n48 8b 75 c8\ne8 24 13 00 00\n84 c0\n0f 84 bc f2 ff ff\n8a 85 d0 fd ff ff\n84 c0\n48 8b 55 a8\n74 15\ne9 a9 f2 ff ff\n41 b6 01\n80 bd d0 fd ff ff 00\n0f 85 99 f2 ff ff\nb8 00 f0 00 00\n23 85 80 fe ff ff\n3d 00 40 00 00\n4c 8b 75 c8\n74 5b\n41 81 fd 00 40 00 00\n75 17\n41 80 7c 24 18 00\n0f 84 ec 01 00 00\n41 83 3c 24 00\n0f 84 e1 01 00 00\n80 7d 10 00\n74 35\n41 83 3c 24 03\n74 2e\n49 8b 7c 24 38\n48 8d 95 68 fe ff ff\n4c 89 f6\ne8 42 42 00 00\n48 8b 55 a8\n84 c0\n74 12\n4c 89 f3\n45 31 f6\n31 ff\nbe 49 23 41 00\ne9 b3 01 00 00\n41 81 fd 00 40 00 00\n74 29\nb8 00 f0 00 00\n23 85 80 fe ff ff\n3d 00 40 00 00\n75 17\n41 80 7c 24 18 00\n0f 84 76 02 00 00\n41 83 3c 24 00\n0f 84 6b 02 00 00\n41 80 7c 24 18 00\n74 2d\nb8 00 f0 00 00\n8b 8d 10 ff ff ff\n21 c1\n81 f9 00 40 00 00\n75 18\n23 85 80 fe ff ff\n3d 00 40 00 00\n74 0b\n41 83 3c 24 00\n0f 84 b9 03 00 00\n41 83 3c 24 00\n88 5d a0\n74 18\n4c 89 ff\ne8 9f 3f 00 00\n48 89 c7\ne8 27 13 00 00\n48 8b 55 a8\n84 c0\n74 76\nb8 00 f0 00 00\n23 85 80 fe ff ff\n3d 00 40 00 00\n75 24\n45 31 f6\n31 db\n8a 45 10\ne9 70 f2 ff ff\n31 c0\n48 89 45 a8\n41 80 7c 24 24 00\n0f 85 72 fc ff ff\ne9 72 fc ff ff\n41 80 7c 24 18 00\n8a 45 10\n0f 84 34 02 00 00\n45 31 f6\n31 db\ne9 40 f2 ff ff\n48 89 5d a0\n8b 9d 80 fe ff ff\n89 d8\n25 c0 01 00 00\n3d c0 01 00 00\n0f 85 de 01 00 00\n89 5d c0\n45 31 f6\ne9 67 03 00 00\n41 80 7c 24 18 00\n75 16\nb8 00 f0 00 00\n23 85 80 fe ff ff\n3d 00 40 00 00\n0f 84 6c ff ff ff\n41 8b 34 24\n4c 89 f7\ne8 ef 36 00 00\n48 89 45 98\n48 89 c7\n4c 89 fe\ne8 40 d2 ff ff\n85 c0\n0f 84 71 02 00 00\n48 8b 7d 98\n49 89 fe\ne8 1c d0 ff ff\n48 89 e3\n48 8d 50 01\n48 83 c0 10\n48 83 e0 f0\n48 29 c3\n48 89 dc\n48 89 df\n4c 89 f6\ne8 8c d2 ff ff\n4c 89 f7\ne8 44 ce ff ff\n48 8b 7d c8\n48 89 de\ne8 88 d4 ff ff\n85 c0\n0f 84 6a 03 00 00\ne8 7b ce ff ff\n8b 18\n45 31 f6\n83 fb 02\n0f 85 a0 03 00 00\n31 db\nc6 45 d7 01\ne9 fe 04 00 00\n4c 89 f3\n45 31 f6\n31 ff\nbe 15 23 41 00\nba 05 00 00 00\ne8 8b cf ff ff\n49 89 c4\n31 ff\nbe 04 00 00 00\n48 89 da\ne8 39 6f 00 00\n49 89 c5\nbf 01 00 00 00\nbe 04 00 00 00\n4c 89 fa\ne8 24 6f 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 e2\n4c 89 e9\ne9 8d f3 ff ff\n48 8b 85 d8 fd ff ff\n48 3b 85 48 fd ff ff\n0f 85 74 01 00 00\n4c 8b ad d0 fd ff ff\n48 8b 9d 40 fd ff ff\n4c 89 f7\ne8 96 cd ff ff\n49 39 dd\n0f 84 9f f8 ff ff\ne9 58 01 00 00\n45 31 f6\nc7 45 b4 00 00 00 00\n89 45 c0\n48 8b 5d 90\n48 85 db\n0f 85 5e 02 00 00\ne9 6e 02 00 00\n8d 82 00 f0 ff ff\nc1 e8 0c\n83 f8 0b\n0f 87 86 03 00 00\nff 24 c5 30 21 41 00\n41 f7 d5\n44 23 6d b0\n48 8b 95 20 ff ff ff\n4c 89 f7\n44 89 ee\ne8 67 9c 00 00\n85 c0\n0f 84 be 02 00 00\ne8 7a cd ff ff\n44 8b 38\n31 ff\nbe 67 26 41 00\ne9 5b fa ff ff\n4c 89 f3\n45 31 f6\n31 ff\nbe 74 23 41 00\nba 05 00 00 00\ne8 94 ce ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 24 6f 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\ne9 61 f2 ff ff\n89 de\n81 ce c0 01 00 00\n4c 8b 75 c8\n4c 89 f7\ne8 a2 d2 ff ff\n85 c0\n0f 84 72 01 00 00\ne8 15 cd ff ff\n44 8b 38\n31 ff\nbe d0 25 41 00\ne9 f6 f9 ff ff\n41 80 7c 24 15 00\n0f 84 f0 01 00 00\n48 8b 5d c8\n48 89 df\ne8 fe cc ff ff\n85 c0\n74 13\ne8 e5 cc ff ff\n8b 00\n89 45 98\n83 f8 02\n0f 85 22 02 00 00\nc6 45 d7 01\n41 80 7c 24 2d 00\n0f 84 5e 03 00 00\n45 31 f6\n31 ff\nbe 5f 24 41 00\nba 05 00 00 00\ne8 f3 cd ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b 75 c8\ne8 82 6e 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 de\n48 89 ca\ne8 ed d1 ff ff\ne9 22 03 00 00\n4c 89 f7\ne8 30 cc ff ff\n31 ff\nbe ed 25 41 00\nba 05 00 00 00\ne8 af cd ff ff\n48 89 c3\n31 ff\nbe 03 00 00 00\n48 8b 55 c8\ne8 1c 6f 00 00\ne9 a9 f6 ff ff\n41 80 7c 24 18 00\nb8 d8 23 41 00\nbe 0a 24 41 00\n48 0f 45 f0\n4c 89 f3\n45 31 f6\n31 ff\nba 05 00 00 00\ne8 71 cd ff ff\n49 89 c5\n31 ff\nbe 04 00 00 00\n48 89 da\ne8 1f 6d 00 00\n49 89 c4\nbf 01 00 00 00\nbe 04 00 00 00\n4c 89 fa\ne8 0a 6d 00 00\n49 89 c0\n31 ff\n31 f6\n31 c0\n4c 89 ea\n4c 89 e1\ne8 86 d1 ff ff\n48 8b 7d 98\ne8 9d cb ff ff\ne9 08 ee ff ff\n4c 89 f3\n45 31 f6\n31 ff\nbe a5 23 41 00\nba 05 00 00 00\ne8 11 cd ff ff\n49 89 c4\n31 ff\nbe 03 00 00 00\n4c 89 fa\ne8 7f 6e 00 00\n49 89 c7\n31 ff\nbe 03 00 00 00\n48 89 da\ne8 6d 6e 00 00\ne9 16 f1 ff ff\n89 5d c0\n41 b6 01\n41 80 7d 00 00\n48 8b 5d 90\n75 1c\n48 8b 95 68 fe ff ff\n48 8b b5 70 fe ff ff\n48 8b 7d c8\ne8 30 2e 00 00\n41 c6 45 00 01\n41 80 7c 24 2d 00\n74 0e\n31 d2\n4c 89 ff\n48 8b 75 c8\ne8 35 0f 00 00\n48 85 db\n74 15\n41 8a 44 24 1b\n84 c0\n74 0c\n48 8b 03\n48 3b 85 f8 fe ff ff\n75 29\n0f b6 55 d7\n48 8d 8d f8 fe ff ff\n4c 89 ff\n48 8b 75 c8\n4c 8b 45 a0\n4d 89 e1\nff 75 20\n41 55\ne8 08 12 00 00\n48 83 c4 10\neb 02\nb0 01\n45 31 ed\n31 f6\ne9 a3 02 00 00\n41 b6 01\nc6 45 d7 01\ne9 a6 01 00 00\n41 80 7c 24 21 00\n74 0e\n48 83 bd 78 fe ff ff 01\n0f 87 fa fd ff ff\n41 83 7c 24 04 02\n0f 85 7b fb ff ff\nb8 00 f0 00 00\n23 85 10 ff ff ff\n3d 00 80 00 00\n0f 84 65 fb ff ff\ne9 d3 fd ff ff\n31 ff\nbe 3d 24 41 00\ne9 c8 ef ff ff\nb0 01\n45 31 ed\n31 f6\ne9 3c 02 00 00\n45 31 f6\n31 ff\nbe 4e 24 41 00\nba 05 00 00 00\ne8 e1 cb ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 71 6c 00 00\n48 89 c1\n31 ff\n31 c0\n8b 75 98\ne9 ad ef ff ff\n41 f7 d5\n44 23 6d b0\n31 d2\n4c 89 f7\n44 89 ee\ne8 4e 99 00 00\n85 c0\n0f 84 0e 01 00 00\n41 81 e5 ff ef ff ff\n48 8b 7d c8\n44 89 ee\ne8 23 ce ff ff\n85 c0\n0f 84 76 01 00 00\ne8 46 ca ff ff\n44 8b 30\n31 ff\nbe 51 26 41 00\nba 05 00 00 00\ne8 72 cb ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b 75 c8\ne9 ff 00 00 00\n31 ff\nbe e5 26 41 00\ne9 4d f4 ff ff\n48 8b b5 28 ff ff ff\n4c 89 ff\ne8 46 31 00 00\n48 89 c3\n48 85 db\n0f 84 b4 00 00 00\n48 89 df\n48 8b 75 c8\ne8 ce cb ff ff\n85 c0\n0f 84 20 01 00 00\ne8 e1 c9 ff ff\n44 8b 28\n41 80 7c 24 2c 00\n0f 84 c4 00 00 00\n8a 45 d7\n84 c0\n0f 85 b9 00 00 00\nb8 00 f0 00 00\n23 85 80 fe ff ff\n3d 00 a0 00 00\n0f 85 a3 00 00 00\n4c 8b b5 98 fe ff ff\n48 89 df\ne8 02 cb ff ff\n49 39 c6\n0f 85 8b 00 00 00\n48 8b 7d c8\n4c 89 f6\ne8 cd 30 00 00\n49 89 c6\n48 85 c0\n0f 84 4a 05 00 00\n4c 89 f7\n48 89 de\ne8 e6 cc ff ff\n85 c0\n0f 94 c0\n89 45 c0\ne9 39 05 00 00\n45 31 f6\n31 db\n8a 45 10\n48 8b 55 a8\ne9 68 ec ff ff\n31 f6\n45 31 f6\n89 45 c0\nb0 01\n45 31 ed\ne9 d3 00 00 00\ne8 41 c9 ff ff\n44 8b 30\n31 ff\nbe 85 26 41 00\nba 05 00 00 00\ne8 6d ca ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 fd 6a 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\ne9 22 f6 ff ff\n48 89 df\ne8 b6 c8 ff ff\n31 ff\nbe a2 26 41 00\nba 05 00 00 00\ne8 35 ca ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b 75 c8\ne8 c4 6a 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 ee\ne9 e9 f5 ff ff\n45 31 ed\n31 f6\n45 31 f6\n89 45 c0\nb0 01\neb 53\n48 89 df\ne8 6e c8 ff ff\n41 80 7c 24 24 00\n74 05\ne8 41 1d 00 00\n41 80 7c 24 1c 00\n74 29\n8b b5 14 ff ff ff\n8b 95 18 ff ff ff\n48 8b 7d c8\ne8 74 cd ff ff\n85 c0\n74 10\n4c 89 e7\ne8 a8 04 00 00\n84 c0\n0f 84 73 03 00 00\n41 b5 01\n31 f6\nb0 01\n45 31 f6\n89 4d c0\n80 7d d7 00\n48 8b 5d b8\n0f 84 cf 00 00 00\n80 7d 10 00\n74 4b\n49 83 7c 24 38 00\n74 43\n89 75 a0\n4c 89 6d 90\n45 89 f5\n41 89 c6\n48 8d b5 d0 fd ff ff\n48 8b 7d c8\ne8 0a ad 00 00\n85 c0\n75 15\n49 8b 7c 24 38\n48 8d 95 d0 fd ff ff\n48 8b 75 c8\ne8 c1 39 00 00\n44 89 f0\n45 89 ee\n4c 8b 6d 90\n8b 75 a0\n81 fb 00 40 00 00\n74 0d\n41 8a 4c 24 17\n84 c9\n0f 85 39 01 00 00\n40 84 f6\n0f 85 30 01 00 00\n41 80 7c 24 1e 00\n0f 84 1f 01 00 00\n88 45 b8\n48 8d 9d f8 fe ff ff\n48 89 df\ne8 28 7c 00 00\n48 89 85 d0 fd ff ff\n48 89 95 d8 fd ff ff\n48 89 df\ne8 32 7c 00 00\n48 89 85 e0 fd ff ff\n48 89 95 e8 fd ff ff\n48 8d b5 d0 fd ff ff\n45 84 ed\n74 79\n48 8b 7d c8\ne8 6f 1c 00 00\n85 c0\n75 79\ne9 c8 00 00 00\n81 fb 00 40 00 00\n0f 84 25 ff ff ff\n41 8a 4c 24 14\n84 c9\n0f 85 18 ff ff ff\n41 8a 54 24 24\n41 8a 4c 24 20\n08 d1\n0f 84 06 ff ff ff\n89 75 a0\n0f b6 f2\n4c 89 6d 90\n45 89 f5\n41 89 c6\n31 d2\n48 8b 7d c8\n4c 89 e1\ne8 bd 0b 00 00\n8b 75 a0\n44 89 f0\n45 89 ee\n4c 8b 6d 90\n41 80 7c 24 25 00\n0f 85 50 f4 ff ff\ne9 ca fe ff ff\n48 8b 7d c8\ne8 c6 86 00 00\n85 c0\n74 54\ne8 1d c7 ff ff\n4c 89 6d 90\n44 8b 28\n31 ff\nbe fe 26 41 00\nba 05 00 00 00\ne8 45 c8 ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b 75 c8\ne8 d4 68 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 ee\n4c 8b 6d 90\n48 89 da\ne8 6e cc ff ff\n41 80 7c 24 23 00\n74 08\n45 31 f6\ne9 ee e8 ff ff\n8a 45 b8\n45 84 ed\n74 0b\n84 c0\n41 0f 95 c6\ne9 db e8 ff ff\n44 89 75 b8\n41 80 7c 24 1c 00\n74 65\n41 89 c5\n8a 45 d7\n84 c0\n48 8b 5d c8\n44 8b 75 b0\n75 1c\n8b 8d 14 ff ff ff\n3b 8d 84 fe ff ff\n75 0e\n8b 8d 18 ff ff ff\n3b 8d 88 fe ff ff\n74 32\n44 0f b6 c0\n48 8d 8d f8 fe ff ff\n4c 8d 8d 68 fe ff ff\nba ff ff ff ff\n4c 89 e7\n48 89 de\ne8 5f 1b 00 00\n83 f8 ff\n74 5a\n85 c0\n75 07\n41 81 e6 ff f1 ff ff\n44 89 e8\neb 08\n48 8b 5d c8\n44 8b 75 b0\n41 89 c5\n41 80 7c 24 1d 00\n75 08\n41 80 7c 24 18 00\n74 37\nbe ff ff ff ff\nb9 ff ff ff ff\n4c 89 ff\n48 89 da\n45 89 f0\ne8 67 2c 00 00\n85 c0\n44 89 e9\n0f 84 ca 01 00 00\n41 80 7c 24 23 00\n0f 84 be 01 00 00\n45 31 f6\ne9 18 e8 ff ff\n41 80 7c 24 2a 00\n74 26\n41 8b 54 24 10\nbe ff ff ff ff\n48 8b 7d c8\ne8 bd 2c 00 00\n85 c0\n44 89 e9\n0f 84 90 01 00 00\n45 31 f6\ne9 ea e7 ff ff\n41 80 7c 24 1f 00\n74 2f\ne8 0d 02 00 00\nf7 d0\n25 ff 01 00 00\nbe ff ff ff ff\n48 8b 7d c8\n89 c2\ne8 86 2c 00 00\n85 c0\n44 89 e9\n0f 84 59 01 00 00\n45 31 f6\ne9 b3 e7 ff ff\n83 7d b4 00\n0f 84 ba 00 00 00\ne8 d4 01 00 00\nf7 d0\n21 45 b4\n80 7d b8 00\n0f 85 c4 00 00 00\n83 7d b4 00\n0f 84 ba 00 00 00\n80 7d d7 00\n0f 84 9b 00 00 00\n48 8d b5 68 fe ff ff\n48 8b 7d c8\ne8 21 aa 00 00\n85 c0\n0f 84 83 00 00 00\ne8 44 c5 ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 55 20 41 00\nba 05 00 00 00\ne8 6d c6 ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b 75 c8\ne8 fc 66 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\ne9 25 e7 ff ff\ne8 08 c5 ff ff\n8b 18\n31 ff\nbe c1 26 41 00\nba 05 00 00 00\ne8 35 c6 ff ff\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ca\n48 8b 4d c8\ne8 70 ca ff ff\n41 80 7c 24 24 00\n0f 85 f8 f1 ff ff\ne9 f8 f1 ff ff\nc7 45 b4 00 00 00 00\neb 15\n8b 85 80 fe ff ff\n89 45 c0\nf7 d0\n85 45 b4\n74 05\nb0 01\n89 45 b8\nf6 45 b8 01\n8b 45 b4\n44 89 e9\n74 63\n8b 75 c0\n09 c6\n48 8b 7d c8\ne8 17 ca ff ff\n44 89 e9\n85 c0\n74 4e\ne8 8b c4 ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 16 27 41 00\nba 05 00 00 00\ne8 b4 c5 ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b 75 c8\ne8 43 66 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 da\ne8 e1 c9 ff ff\n44 89 e9\n41 80 7c 24 23 00\n0f 85 62 e6 ff ff\n84 c9\n41 0f 95 c6\ne9 57 e6 ff ff\nc7 45 c0 00 00 00 00\n4c 89 f7\ne8 d8 c3 ff ff\n48 89 df\ne8 d0 c3 ff ff\n80 7d c0 00\n0f 85 58 fb ff ff\ne9 0b fb ff ff\n'
p439
S'.text:0000000000404450\n.text:0000000000404451\n.text:0000000000404454\n.text:0000000000404456\n.text:0000000000404458\n.text:000000000040445a\n.text:000000000040445c\n.text:000000000040445d\n.text:0000000000404464\n.text:0000000000404467\n.text:000000000040446a\n.text:000000000040446d\n.text:0000000000404470\n.text:0000000000404473\n.text:0000000000404477\n.text:000000000040447b\n.text:000000000040447e\n.text:0000000000404481\n.text:0000000000404483\n.text:0000000000404488\n.text:000000000040448a\n.text:000000000040448c\n.text:000000000040448f\n.text:0000000000404492\n.text:0000000000404498\n.text:000000000040449a\n.text:00000000004044a1\n.text:00000000004044a4\n.text:00000000004044a9\n.text:00000000004044ab\n.text:00000000004044ad\n.text:00000000004044af\n.text:00000000004044b6\n.text:00000000004044b9\n.text:00000000004044be\n.text:00000000004044c0\n.text:00000000004044c2\n.text:00000000004044c7\n.text:00000000004044ca\n.text:00000000004044cd\n.text:00000000004044cf\n.text:00000000004044d4\n.text:00000000004044d9\n.text:00000000004044de\n.text:00000000004044e1\n.text:00000000004044e6\n.text:00000000004044e9\n.text:00000000004044ee\n.text:00000000004044f1\n.text:00000000004044f3\n.text:00000000004044f5\n.text:00000000004044f8\n.text:00000000004044fb\n.text:0000000000404500\n.text:0000000000404503\n.text:0000000000404507\n.text:0000000000404508\n.text:000000000040450a\n.text:000000000040450c\n.text:000000000040450e\n.text:0000000000404510\n.text:0000000000404511\n.text:0000000000404512\n.text:0000000000404516\n.text:000000000040451a\n.text:0000000000404521\n.text:0000000000404524\n.text:0000000000404529\n.text:000000000040452d\n.text:0000000000404532\n.text:0000000000404534\n.text:000000000040453a\n.text:0000000000404540\n.text:0000000000404543\n.text:0000000000404545\n.text:0000000000404547\n.text:000000000040454e\n.text:0000000000404550\n.text:0000000000404555\n.text:0000000000404557\n.text:000000000040455c\n.text:0000000000404563\n.text:0000000000404566\n.text:000000000040456b\n.text:000000000040456d\n.text:000000000040456f\n.text:0000000000404571\n.text:0000000000404576\n.text:000000000040457b\n.text:0000000000404580\n.text:0000000000404583\n.text:0000000000404588\n.text:000000000040458b\n.text:0000000000404590\n.text:0000000000404593\n.text:0000000000404595\n.text:0000000000404597\n.text:0000000000404599\n.text:000000000040459c\n.text:00000000004045a1\n.text:00000000004045a4\n.text:00000000004045a9\n.text:00000000004045ae\n.text:00000000004045b5\n.text:00000000004045b8\n.text:00000000004045bd\n.text:00000000004045c0\n.text:00000000004045c3\n.text:00000000004045c6\n.text:00000000004045cb\n.text:00000000004045cd\n.text:00000000004045d1\n.text:00000000004045d5\n.text:00000000004045db\n.text:00000000004045de\n.text:00000000004045e2\n.text:00000000004045e4\n.text:00000000004045e7\n.text:00000000004045e9\n.text:00000000004045ec\n.text:00000000004045f0\n.text:00000000004045f2\n.text:00000000004045f6\n.text:00000000004045fc\n.text:0000000000404602\n.text:0000000000404608\n.text:000000000040460e\n.text:0000000000404614\n.text:0000000000404619\n.text:000000000040461f\n.text:0000000000404621\n.text:0000000000404627\n.text:000000000040462e\n.text:0000000000404633\n.text:0000000000404636\n.text:000000000040463b\n.text:0000000000404641\n.text:0000000000404646\n.text:000000000040464a\n.text:000000000040464d\n.text:0000000000404652\n.text:0000000000404654\n.text:000000000040465a\n.text:000000000040465d\n.text:000000000040465f\n.text:0000000000404664\n.text:0000000000404669\n.text:000000000040466e\n.text:0000000000404671\n.text:0000000000404673\n.text:0000000000404678\n.text:000000000040467b\n.text:0000000000404680\n.text:0000000000404683\n.text:0000000000404688\n.text:000000000040468d\n.text:0000000000404691\n.text:0000000000404696\n.text:000000000040469d\n.text:000000000040469f\n.text:00000000004046a5\n.text:00000000004046ab\n.text:00000000004046b1\n.text:00000000004046b7\n.text:00000000004046bd\n.text:00000000004046bf\n.text:00000000004046c4\n.text:00000000004046c6\n.text:00000000004046cc\n.text:00000000004046ce\n.text:00000000004046d5\n.text:00000000004046d8\n.text:00000000004046dd\n.text:00000000004046df\n.text:00000000004046e1\n.text:00000000004046e3\n.text:00000000004046e8\n.text:00000000004046eb\n.text:00000000004046ed\n.text:00000000004046f2\n.text:00000000004046f7\n.text:00000000004046fc\n.text:00000000004046ff\n.text:0000000000404704\n.text:0000000000404707\n.text:000000000040470c\n.text:000000000040470f\n.text:0000000000404711\n.text:0000000000404713\n.text:0000000000404715\n.text:000000000040471a\n.text:0000000000404720\n.text:0000000000404722\n.text:0000000000404729\n.text:000000000040472b\n.text:000000000040472f\n.text:0000000000404734\n.text:000000000040473a\n.text:0000000000404741\n.text:0000000000404744\n.text:0000000000404749\n.text:000000000040474b\n.text:000000000040474d\n.text:000000000040474f\n.text:0000000000404752\n.text:0000000000404757\n.text:0000000000404759\n.text:000000000040475c\n.text:000000000040475e\n.text:0000000000404762\n.text:0000000000404766\n.text:000000000040476b\n.text:000000000040476f\n.text:0000000000404776\n.text:000000000040477d\n.text:0000000000404784\n.text:0000000000404787\n.text:000000000040478a\n.text:000000000040478d\n.text:0000000000404792\n.text:0000000000404794\n.text:0000000000404796\n.text:000000000040479d\n.text:00000000004047a3\n.text:00000000004047a9\n.text:00000000004047af\n.text:00000000004047b5\n.text:00000000004047bb\n.text:00000000004047c1\n.text:00000000004047c7\n.text:00000000004047ce\n.text:00000000004047d5\n.text:00000000004047d8\n.text:00000000004047dd\n.text:00000000004047e0\n.text:00000000004047e2\n.text:00000000004047e7\n.text:00000000004047ec\n.text:00000000004047f1\n.text:00000000004047f4\n.text:00000000004047f9\n.text:00000000004047fd\n.text:0000000000404802\n.text:0000000000404805\n.text:0000000000404807\n.text:0000000000404809\n.text:000000000040480b\n.text:000000000040480e\n.text:0000000000404813\n.text:0000000000404816\n.text:0000000000404818\n.text:000000000040481d\n.text:0000000000404822\n.text:0000000000404827\n.text:000000000040482a\n.text:000000000040482c\n.text:0000000000404831\n.text:0000000000404834\n.text:0000000000404839\n.text:000000000040483c\n.text:0000000000404841\n.text:0000000000404846\n.text:0000000000404849\n.text:000000000040484e\n.text:0000000000404851\n.text:0000000000404853\n.text:0000000000404855\n.text:0000000000404857\n.text:000000000040485a\n.text:000000000040485d\n.text:0000000000404860\n.text:0000000000404865\n.text:000000000040486a\n.text:0000000000404871\n.text:0000000000404875\n.text:0000000000404878\n.text:000000000040487d\n.text:000000000040487f\n.text:0000000000404885\n.text:0000000000404889\n.text:0000000000404890\n.text:0000000000404892\n.text:0000000000404897\n.text:0000000000404899\n.text:000000000040489b\n.text:000000000040489d\n.text:00000000004048a0\n.text:00000000004048a4\n.text:00000000004048a7\n.text:00000000004048ab\n.text:00000000004048b0\n.text:00000000004048b7\n.text:00000000004048ba\n.text:00000000004048c0\n.text:00000000004048c2\n.text:00000000004048c4\n.text:00000000004048c6\n.text:00000000004048cd\n.text:00000000004048d4\n.text:00000000004048d8\n.text:00000000004048de\n.text:00000000004048e2\n.text:00000000004048e5\n.text:00000000004048e8\n.text:00000000004048ed\n.text:00000000004048f0\n.text:00000000004048f6\n.text:00000000004048fb\n.text:0000000000404901\n.text:0000000000404903\n.text:000000000040490b\n.text:000000000040490d\n.text:0000000000404914\n.text:000000000040491b\n.text:000000000040491d\n.text:0000000000404923\n.text:0000000000404929\n.text:000000000040492f\n.text:0000000000404935\n.text:000000000040493d\n.text:000000000040493f\n.text:0000000000404944\n.text:0000000000404947\n.text:000000000040494a\n.text:000000000040494d\n.text:000000000040494f\n.text:0000000000404952\n.text:0000000000404958\n.text:000000000040495f\n.text:0000000000404966\n.text:000000000040496a\n.text:000000000040496f\n.text:0000000000404972\n.text:0000000000404975\n.text:000000000040497a\n.text:000000000040497d\n.text:0000000000404983\n.text:000000000040498a\n.text:000000000040498e\n.text:0000000000404994\n.text:0000000000404998\n.text:000000000040499b\n.text:000000000040499e\n.text:00000000004049a1\n.text:00000000004049a6\n.text:00000000004049a8\n.text:00000000004049ae\n.text:00000000004049b0\n.text:00000000004049b5\n.text:00000000004049ba\n.text:00000000004049bf\n.text:00000000004049c2\n.text:00000000004049c9\n.text:00000000004049cb\n.text:00000000004049d0\n.text:00000000004049d5\n.text:00000000004049d8\n.text:00000000004049df\n.text:00000000004049e4\n.text:00000000004049e9\n.text:00000000004049ee\n.text:00000000004049f1\n.text:00000000004049f3\n.text:00000000004049f5\n.text:00000000004049f7\n.text:00000000004049fa\n.text:00000000004049fd\n.text:0000000000404a00\n.text:0000000000404a05\n.text:0000000000404a09\n.text:0000000000404a0c\n.text:0000000000404a12\n.text:0000000000404a18\n.text:0000000000404a1d\n.text:0000000000404a1f\n.text:0000000000404a25\n.text:0000000000404a29\n.text:0000000000404a2f\n.text:0000000000404a32\n.text:0000000000404a36\n.text:0000000000404a3b\n.text:0000000000404a3d\n.text:0000000000404a43\n.text:0000000000404a48\n.text:0000000000404a4b\n.text:0000000000404a4e\n.text:0000000000404a51\n.text:0000000000404a57\n.text:0000000000404a5a\n.text:0000000000404a60\n.text:0000000000404a62\n.text:0000000000404a67\n.text:0000000000404a6c\n.text:0000000000404a71\n.text:0000000000404a74\n.text:0000000000404a7b\n.text:0000000000404a7d\n.text:0000000000404a82\n.text:0000000000404a87\n.text:0000000000404a8a\n.text:0000000000404a91\n.text:0000000000404a96\n.text:0000000000404a9b\n.text:0000000000404aa0\n.text:0000000000404aa3\n.text:0000000000404aa5\n.text:0000000000404aa7\n.text:0000000000404aa9\n.text:0000000000404aac\n.text:0000000000404aaf\n.text:0000000000404ab2\n.text:0000000000404ab7\n.text:0000000000404abb\n.text:0000000000404abe\n.text:0000000000404ac1\n.text:0000000000404ac6\n.text:0000000000404acc\n.text:0000000000404ad1\n.text:0000000000404ad6\n.text:0000000000404ad9\n.text:0000000000404add\n.text:0000000000404ae2\n.text:0000000000404ae5\n.text:0000000000404ae7\n.text:0000000000404aed\n.text:0000000000404af2\n.text:0000000000404af8\n.text:0000000000404afb\n.text:0000000000404afd\n.text:0000000000404aff\n.text:0000000000404b01\n.text:0000000000404b04\n.text:0000000000404b09\n.text:0000000000404b0c\n.text:0000000000404b10\n.text:0000000000404b15\n.text:0000000000404b1b\n.text:0000000000404b1f\n.text:0000000000404b21\n.text:0000000000404b23\n.text:0000000000404b28\n.text:0000000000404b2b\n.text:0000000000404b30\n.text:0000000000404b34\n.text:0000000000404b37\n.text:0000000000404b39\n.text:0000000000404b3c\n.text:0000000000404b3f\n.text:0000000000404b43\n.text:0000000000404b49\n.text:0000000000404b4e\n.text:0000000000404b55\n.text:0000000000404b59\n.text:0000000000404b5e\n.text:0000000000404b63\n.text:0000000000404b67\n.text:0000000000404b6a\n.text:0000000000404b6f\n.text:0000000000404b71\n.text:0000000000404b77\n.text:0000000000404b79\n.text:0000000000404b7e\n.text:0000000000404b83\n.text:0000000000404b88\n.text:0000000000404b8b\n.text:0000000000404b92\n.text:0000000000404b97\n.text:0000000000404b9c\n.text:0000000000404b9f\n.text:0000000000404ba1\n.text:0000000000404ba3\n.text:0000000000404ba5\n.text:0000000000404ba8\n.text:0000000000404bad\n.text:0000000000404bb0\n.text:0000000000404bb4\n.text:0000000000404bb7\n.text:0000000000404bbd\n.text:0000000000404bc2\n.text:0000000000404bc4\n.text:0000000000404bca\n.text:0000000000404bcd\n.text:0000000000404bd2\n.text:0000000000404bd9\n.text:0000000000404bdf\n.text:0000000000404be3\n.text:0000000000404be8\n.text:0000000000404bea\n.text:0000000000404bf0\n.text:0000000000404bf5\n.text:0000000000404bf8\n.text:0000000000404bfa\n.text:0000000000404bff\n.text:0000000000404c04\n.text:0000000000404c09\n.text:0000000000404c0c\n.text:0000000000404c0f\n.text:0000000000404c12\n.text:0000000000404c18\n.text:0000000000404c1b\n.text:0000000000404c1f\n.text:0000000000404c25\n.text:0000000000404c27\n.text:0000000000404c2c\n.text:0000000000404c31\n.text:0000000000404c36\n.text:0000000000404c39\n.text:0000000000404c3b\n.text:0000000000404c40\n.text:0000000000404c44\n.text:0000000000404c49\n.text:0000000000404c4c\n.text:0000000000404c51\n.text:0000000000404c56\n.text:0000000000404c5a\n.text:0000000000404c5f\n.text:0000000000404c62\n.text:0000000000404c64\n.text:0000000000404c66\n.text:0000000000404c68\n.text:0000000000404c6b\n.text:0000000000404c6e\n.text:0000000000404c73\n.text:0000000000404c77\n.text:0000000000404c7c\n.text:0000000000404c7e\n.text:0000000000404c80\n.text:0000000000404c83\n.text:0000000000404c86\n.text:0000000000404c8c\n.text:0000000000404c90\n.text:0000000000404c96\n.text:0000000000404c99\n.text:0000000000404c9b\n.text:0000000000404ca0\n.text:0000000000404ca3\n.text:0000000000404ca6\n.text:0000000000404cad\n.text:0000000000404cb2\n.text:0000000000404cb6\n.text:0000000000404cbc\n.text:0000000000404cbf\n.text:0000000000404cc5\n.text:0000000000404cc9\n.text:0000000000404ccd\n.text:0000000000404cd0\n.text:0000000000404cd4\n.text:0000000000404cd7\n.text:0000000000404cdc\n.text:0000000000404cde\n.text:0000000000404ce4\n.text:0000000000404ce7\n.text:0000000000404cea\n.text:0000000000404cf0\n.text:0000000000404cf4\n.text:0000000000404cf6\n.text:0000000000404cfd\n.text:0000000000404d01\n.text:0000000000404d04\n.text:0000000000404d09\n.text:0000000000404d0b\n.text:0000000000404d11\n.text:0000000000404d13\n.text:0000000000404d18\n.text:0000000000404d1d\n.text:0000000000404d22\n.text:0000000000404d25\n.text:0000000000404d2a\n.text:0000000000404d2d\n.text:0000000000404d32\n.text:0000000000404d35\n.text:0000000000404d37\n.text:0000000000404d39\n.text:0000000000404d3b\n.text:0000000000404d40\n.text:0000000000404d46\n.text:0000000000404d4a\n.text:0000000000404d50\n.text:0000000000404d54\n.text:0000000000404d56\n.text:0000000000404d59\n.text:0000000000404d5e\n.text:0000000000404d61\n.text:0000000000404d65\n.text:0000000000404d67\n.text:0000000000404d6c\n.text:0000000000404d6e\n.text:0000000000404d75\n.text:0000000000404d7a\n.text:0000000000404d7f\n.text:0000000000404d81\n.text:0000000000404d83\n.text:0000000000404d8a\n.text:0000000000404d8d\n.text:0000000000404d92\n.text:0000000000404d94\n.text:0000000000404d9a\n.text:0000000000404d9d\n.text:0000000000404da2\n.text:0000000000404da6\n.text:0000000000404da9\n.text:0000000000404dac\n.text:0000000000404db1\n.text:0000000000404db3\n.text:0000000000404db9\n.text:0000000000404dbe\n.text:0000000000404dc0\n.text:0000000000404dc3\n.text:0000000000404dc5\n.text:0000000000404dca\n.text:0000000000404dcf\n.text:0000000000404dd4\n.text:0000000000404dd7\n.text:0000000000404dd9\n.text:0000000000404dde\n.text:0000000000404de1\n.text:0000000000404de6\n.text:0000000000404de9\n.text:0000000000404dee\n.text:0000000000404df3\n.text:0000000000404df6\n.text:0000000000404dfb\n.text:0000000000404dfe\n.text:0000000000404e00\n.text:0000000000404e02\n.text:0000000000404e05\n.text:0000000000404e08\n.text:0000000000404e0b\n.text:0000000000404e0e\n.text:0000000000404e13\n.text:0000000000404e19\n.text:0000000000404e1f\n.text:0000000000404e24\n.text:0000000000404e28\n.text:0000000000404e2b\n.text:0000000000404e2f\n.text:0000000000404e32\n.text:0000000000404e36\n.text:0000000000404e3d\n.text:0000000000404e41\n.text:0000000000404e48\n.text:0000000000404e4c\n.text:0000000000404e50\n.text:0000000000404e52\n.text:0000000000404e57\n.text:0000000000404e5d\n.text:0000000000404e62\n.text:0000000000404e64\n.text:0000000000404e68\n.text:0000000000404e6d\n.text:0000000000404e72\n.text:0000000000404e74\n.text:0000000000404e7a\n.text:0000000000404e7d\n.text:0000000000404e7f\n.text:0000000000404e83\n.text:0000000000404e86\n.text:0000000000404e8b\n.text:0000000000404e91\n.text:0000000000404e95\n.text:0000000000404e9b\n.text:0000000000404ea2\n.text:0000000000404ea5\n.text:0000000000404ea8\n.text:0000000000404eab\n.text:0000000000404eb1\n.text:0000000000404eb6\n.text:0000000000404eb9\n.text:0000000000404ebe\n.text:0000000000404ec1\n.text:0000000000404ec3\n.text:0000000000404ec5\n.text:0000000000404ec9\n.text:0000000000404ecc\n.text:0000000000404ed1\n.text:0000000000404ed3\n.text:0000000000404ed9\n.text:0000000000404ede\n.text:0000000000404ee1\n.text:0000000000404ee3\n.text:0000000000404ee8\n.text:0000000000404eed\n.text:0000000000404ef3\n.text:0000000000404ef7\n.text:0000000000404efd\n.text:0000000000404f02\n.text:0000000000404f05\n.text:0000000000404f07\n.text:0000000000404f09\n.text:0000000000404f0c\n.text:0000000000404f0f\n.text:0000000000404f14\n.text:0000000000404f16\n.text:0000000000404f1c\n.text:0000000000404f1e\n.text:0000000000404f20\n.text:0000000000404f25\n.text:0000000000404f28\n.text:0000000000404f2a\n.text:0000000000404f2f\n.text:0000000000404f34\n.text:0000000000404f39\n.text:0000000000404f3c\n.text:0000000000404f3e\n.text:0000000000404f43\n.text:0000000000404f46\n.text:0000000000404f4b\n.text:0000000000404f4e\n.text:0000000000404f53\n.text:0000000000404f58\n.text:0000000000404f5c\n.text:0000000000404f61\n.text:0000000000404f64\n.text:0000000000404f66\n.text:0000000000404f68\n.text:0000000000404f6a\n.text:0000000000404f6d\n.text:0000000000404f70\n.text:0000000000404f75\n.text:0000000000404f7c\n.text:0000000000404f83\n.text:0000000000404f88\n.text:0000000000404f8d\n.text:0000000000404f91\n.text:0000000000404f95\n.text:0000000000404f9a\n.text:0000000000404f9e\n.text:0000000000404fa3\n.text:0000000000404fa5\n.text:0000000000404faa\n.text:0000000000404fb1\n.text:0000000000404fb4\n.text:0000000000404fb9\n.text:0000000000404fbb\n.text:0000000000404fc1\n.text:0000000000404fc6\n.text:0000000000404fc9\n.text:0000000000404fcb\n.text:0000000000404fd0\n.text:0000000000404fd5\n.text:0000000000404fda\n.text:0000000000404fdd\n.text:0000000000404fe2\n.text:0000000000404fe5\n.text:0000000000404fea\n.text:0000000000404fed\n.text:0000000000404fef\n.text:0000000000404ff1\n.text:0000000000404ff4\n.text:0000000000404ff7\n.text:0000000000404ffc\n.text:0000000000405002\n.text:0000000000405004\n.text:0000000000405009\n.text:000000000040500e\n.text:0000000000405012\n.text:0000000000405014\n.text:000000000040501b\n.text:0000000000405022\n.text:0000000000405027\n.text:000000000040502b\n.text:000000000040502e\n.text:0000000000405030\n.text:0000000000405033\n.text:0000000000405038\n.text:000000000040503a\n.text:000000000040503c\n.text:0000000000405041\n.text:0000000000405044\n.text:0000000000405047\n.text:0000000000405049\n.text:000000000040504e\n.text:0000000000405053\n.text:0000000000405058\n.text:000000000040505b\n.text:0000000000405060\n.text:0000000000405063\n.text:0000000000405068\n.text:000000000040506b\n.text:000000000040506d\n.text:000000000040506f\n.text:0000000000405072\n.text:0000000000405075\n.text:000000000040507a\n.text:000000000040507d\n.text:0000000000405082\n.text:0000000000405088\n.text:000000000040508a\n.text:000000000040508d\n.text:0000000000405090\n.text:0000000000405092\n.text:0000000000405097\n.text:000000000040509c\n.text:00000000004050a1\n.text:00000000004050a4\n.text:00000000004050a6\n.text:00000000004050ab\n.text:00000000004050af\n.text:00000000004050b4\n.text:00000000004050b7\n.text:00000000004050bc\n.text:00000000004050c1\n.text:00000000004050c4\n.text:00000000004050c9\n.text:00000000004050cc\n.text:00000000004050d1\n.text:00000000004050d3\n.text:00000000004050d6\n.text:00000000004050d9\n.text:00000000004050de\n.text:00000000004050e3\n.text:00000000004050e6\n.text:00000000004050eb\n.text:00000000004050f1\n.text:00000000004050f3\n.text:00000000004050f9\n.text:00000000004050ff\n.text:0000000000405104\n.text:0000000000405106\n.text:000000000040510c\n.text:0000000000405112\n.text:0000000000405116\n.text:000000000040511d\n.text:0000000000405121\n.text:0000000000405124\n.text:0000000000405127\n.text:000000000040512a\n.text:000000000040512d\n.text:000000000040512e\n.text:0000000000405133\n.text:0000000000405137\n.text:0000000000405139\n.text:000000000040513f\n.text:0000000000405142\n.text:0000000000405145\n.text:000000000040514a\n.text:000000000040514c\n.text:000000000040514e\n.text:0000000000405151\n.text:0000000000405158\n.text:000000000040515f\n.text:0000000000405162\n.text:0000000000405167\n.text:0000000000405169\n.text:000000000040516b\n.text:000000000040516f\n.text:0000000000405172\n.text:0000000000405174\n.text:0000000000405177\n.text:000000000040517e\n.text:0000000000405185\n.text:0000000000405188\n.text:000000000040518d\n.text:0000000000405190\n.text:0000000000405192\n.text:0000000000405198\n.text:000000000040519c\n.text:00000000004051a1\n.text:00000000004051a4\n.text:00000000004051a7\n.text:00000000004051ab\n.text:00000000004051b0\n.text:00000000004051b2\n.text:00000000004051b8\n.text:00000000004051bb\n.text:00000000004051c0\n.text:00000000004051c4\n.text:00000000004051ca\n.text:00000000004051cc\n.text:00000000004051d3\n.text:00000000004051d6\n.text:00000000004051d9\n.text:00000000004051de\n.text:00000000004051e0\n.text:00000000004051e4\n.text:00000000004051e8\n.text:00000000004051ec\n.text:00000000004051ee\n.text:00000000004051f1\n.text:00000000004051f4\n.text:00000000004051fa\n.text:00000000004051fd\n.text:0000000000405202\n.text:0000000000405206\n.text:000000000040520d\n.text:0000000000405211\n.text:0000000000405213\n.text:0000000000405218\n.text:000000000040521b\n.text:000000000040521e\n.text:0000000000405224\n.text:0000000000405227\n.text:0000000000405229\n.text:0000000000405230\n.text:0000000000405233\n.text:0000000000405237\n.text:000000000040523c\n.text:000000000040523e\n.text:0000000000405244\n.text:000000000040524a\n.text:000000000040524c\n.text:0000000000405250\n.text:0000000000405252\n.text:0000000000405257\n.text:000000000040525a\n.text:0000000000405261\n.text:0000000000405267\n.text:000000000040526c\n.text:0000000000405272\n.text:0000000000405277\n.text:000000000040527b\n.text:000000000040527d\n.text:0000000000405284\n.text:0000000000405286\n.text:000000000040528c\n.text:0000000000405292\n.text:0000000000405297\n.text:000000000040529d\n.text:00000000004052a1\n.text:00000000004052a3\n.text:00000000004052a8\n.text:00000000004052aa\n.text:00000000004052af\n.text:00000000004052b6\n.text:00000000004052b9\n.text:00000000004052be\n.text:00000000004052c2\n.text:00000000004052c4\n.text:00000000004052c6\n.text:00000000004052c9\n.text:00000000004052cc\n.text:00000000004052ce\n.text:00000000004052d3\n.text:00000000004052d8\n.text:00000000004052df\n.text:00000000004052e1\n.text:00000000004052e6\n.text:00000000004052ec\n.text:00000000004052f1\n.text:00000000004052f3\n.text:00000000004052f9\n.text:00000000004052ff\n.text:0000000000405304\n.text:000000000040530a\n.text:0000000000405310\n.text:0000000000405312\n.text:0000000000405317\n.text:000000000040531d\n.text:000000000040531f\n.text:0000000000405325\n.text:0000000000405327\n.text:000000000040532d\n.text:0000000000405332\n.text:0000000000405334\n.text:0000000000405339\n.text:000000000040533f\n.text:0000000000405344\n.text:0000000000405347\n.text:0000000000405349\n.text:000000000040534c\n.text:0000000000405351\n.text:0000000000405354\n.text:0000000000405359\n.text:000000000040535d\n.text:000000000040535f\n.text:0000000000405361\n.text:0000000000405366\n.text:000000000040536c\n.text:0000000000405371\n.text:0000000000405373\n.text:0000000000405376\n.text:0000000000405378\n.text:000000000040537b\n.text:0000000000405380\n.text:0000000000405382\n.text:0000000000405386\n.text:000000000040538c\n.text:0000000000405392\n.text:0000000000405397\n.text:000000000040539d\n.text:00000000004053a0\n.text:00000000004053a6\n.text:00000000004053a9\n.text:00000000004053ab\n.text:00000000004053b0\n.text:00000000004053b4\n.text:00000000004053ba\n.text:00000000004053bc\n.text:00000000004053c1\n.text:00000000004053c6\n.text:00000000004053cc\n.text:00000000004053cf\n.text:00000000004053d2\n.text:00000000004053d7\n.text:00000000004053dd\n.text:00000000004053df\n.text:00000000004053e4\n.text:00000000004053ea\n.text:00000000004053ef\n.text:00000000004053f5\n.text:00000000004053f9\n.text:00000000004053fc\n.text:0000000000405401\n.text:0000000000405405\n.text:0000000000405408\n.text:000000000040540b\n.text:0000000000405410\n.text:0000000000405412\n.text:0000000000405418\n.text:000000000040541c\n.text:000000000040541f\n.text:0000000000405424\n.text:0000000000405427\n.text:000000000040542b\n.text:000000000040542f\n.text:0000000000405433\n.text:0000000000405436\n.text:0000000000405439\n.text:000000000040543c\n.text:000000000040543f\n.text:0000000000405444\n.text:0000000000405447\n.text:000000000040544c\n.text:0000000000405450\n.text:0000000000405453\n.text:0000000000405458\n.text:000000000040545a\n.text:0000000000405460\n.text:0000000000405465\n.text:0000000000405467\n.text:000000000040546a\n.text:000000000040546d\n.text:0000000000405473\n.text:0000000000405475\n.text:0000000000405479\n.text:000000000040547e\n.text:0000000000405481\n.text:0000000000405484\n.text:0000000000405486\n.text:000000000040548b\n.text:0000000000405490\n.text:0000000000405495\n.text:0000000000405498\n.text:000000000040549a\n.text:000000000040549f\n.text:00000000004054a2\n.text:00000000004054a7\n.text:00000000004054aa\n.text:00000000004054af\n.text:00000000004054b4\n.text:00000000004054b7\n.text:00000000004054bc\n.text:00000000004054bf\n.text:00000000004054c1\n.text:00000000004054c3\n.text:00000000004054c5\n.text:00000000004054c8\n.text:00000000004054cb\n.text:00000000004054d0\n.text:00000000004054d7\n.text:00000000004054de\n.text:00000000004054e4\n.text:00000000004054eb\n.text:00000000004054f2\n.text:00000000004054f5\n.text:00000000004054fa\n.text:00000000004054fd\n.text:0000000000405503\n.text:0000000000405508\n.text:000000000040550b\n.text:0000000000405512\n.text:0000000000405515\n.text:0000000000405519\n.text:000000000040551c\n.text:0000000000405522\n.text:0000000000405527\n.text:000000000040552d\n.text:0000000000405530\n.text:0000000000405533\n.text:0000000000405539\n.text:0000000000405540\n.text:0000000000405543\n.text:0000000000405547\n.text:000000000040554e\n.text:0000000000405551\n.text:0000000000405554\n.text:0000000000405559\n.text:000000000040555b\n.text:0000000000405561\n.text:0000000000405566\n.text:0000000000405569\n.text:000000000040556b\n.text:0000000000405570\n.text:0000000000405575\n.text:0000000000405578\n.text:000000000040557b\n.text:000000000040557d\n.text:0000000000405582\n.text:0000000000405587\n.text:000000000040558c\n.text:000000000040558f\n.text:0000000000405594\n.text:0000000000405597\n.text:000000000040559c\n.text:000000000040559f\n.text:00000000004055a1\n.text:00000000004055a3\n.text:00000000004055a5\n.text:00000000004055aa\n.text:00000000004055ac\n.text:00000000004055b2\n.text:00000000004055b6\n.text:00000000004055b9\n.text:00000000004055be\n.text:00000000004055c0\n.text:00000000004055c6\n.text:00000000004055cb\n.text:00000000004055ce\n.text:00000000004055d0\n.text:00000000004055d5\n.text:00000000004055da\n.text:00000000004055e0\n.text:00000000004055e6\n.text:00000000004055ea\n.text:00000000004055ed\n.text:00000000004055f2\n.text:00000000004055f4\n.text:00000000004055f6\n.text:00000000004055fb\n.text:00000000004055fd\n.text:0000000000405600\n.text:0000000000405603\n.text:0000000000405609\n.text:000000000040560d\n.text:0000000000405613\n.text:0000000000405619\n.text:000000000040561c\n.text:000000000040561e\n.text:0000000000405623\n.text:0000000000405628\n.text:000000000040562d\n.text:0000000000405630\n.text:0000000000405635\n.text:0000000000405639\n.text:000000000040563e\n.text:0000000000405641\n.text:0000000000405646\n.text:0000000000405648\n.text:000000000040564b\n.text:000000000040564e\n.text:0000000000405653\n.text:0000000000405658\n.text:000000000040565b\n.text:0000000000405660\n.text:0000000000405662\n.text:0000000000405667\n.text:000000000040566c\n.text:0000000000405671\n.text:0000000000405674\n.text:0000000000405676\n.text:000000000040567b\n.text:000000000040567f\n.text:0000000000405684\n.text:0000000000405689\n.text:000000000040568f\n.text:0000000000405694\n.text:0000000000405699\n.text:000000000040569d\n.text:00000000004056a0\n.text:00000000004056a3\n.text:00000000004056a5\n.text:00000000004056aa\n.text:00000000004056af\n.text:00000000004056b2\n.text:00000000004056b4\n.text:00000000004056b9\n.text:00000000004056bc\n.text:00000000004056c1\n.text:00000000004056c4\n.text:00000000004056c9\n.text:00000000004056ce\n.text:00000000004056d1\n.text:00000000004056d6\n.text:00000000004056d9\n.text:00000000004056db\n.text:00000000004056dd\n.text:00000000004056df\n.text:00000000004056e2\n.text:00000000004056e5\n.text:00000000004056ea\n.text:00000000004056ee\n.text:00000000004056f3\n.text:00000000004056f8\n.text:00000000004056fb\n.text:00000000004056fe\n.text:0000000000405700\n.text:0000000000405705\n.text:000000000040570a\n.text:000000000040570f\n.text:0000000000405712\n.text:0000000000405714\n.text:0000000000405719\n.text:000000000040571c\n.text:0000000000405721\n.text:0000000000405724\n.text:0000000000405726\n.text:000000000040572b\n.text:000000000040572e\n.text:0000000000405733\n.text:0000000000405738\n.text:000000000040573b\n.text:000000000040573e\n.text:0000000000405743\n.text:0000000000405747\n.text:0000000000405749\n.text:0000000000405750\n.text:0000000000405757\n.text:000000000040575b\n.text:0000000000405760\n.text:0000000000405765\n.text:000000000040576b\n.text:000000000040576d\n.text:000000000040576f\n.text:0000000000405772\n.text:0000000000405776\n.text:000000000040577b\n.text:000000000040577e\n.text:0000000000405780\n.text:0000000000405785\n.text:0000000000405787\n.text:0000000000405789\n.text:000000000040578c\n.text:0000000000405793\n.text:0000000000405795\n.text:0000000000405799\n.text:00000000004057a0\n.text:00000000004057a3\n.text:00000000004057a7\n.text:00000000004057ab\n.text:00000000004057ae\n.text:00000000004057b1\n.text:00000000004057b3\n.text:00000000004057b8\n.text:00000000004057bc\n.text:00000000004057be\n.text:00000000004057c0\n.text:00000000004057c3\n.text:00000000004057c5\n.text:00000000004057ca\n.text:00000000004057cd\n.text:00000000004057d1\n.text:00000000004057d6\n.text:00000000004057dc\n.text:00000000004057de\n.text:00000000004057e6\n.text:00000000004057ec\n.text:00000000004057f2\n.text:00000000004057f8\n.text:00000000004057fd\n.text:0000000000405803\n.text:0000000000405808\n.text:000000000040580e\n.text:0000000000405813\n.text:0000000000405815\n.text:000000000040581a\n.text:000000000040581f\n.text:0000000000405821\n.text:0000000000405824\n.text:0000000000405826\n.text:000000000040582b\n.text:000000000040582e\n.text:0000000000405830\n.text:0000000000405835\n.text:000000000040583a\n.text:000000000040583f\n.text:0000000000405842\n.text:0000000000405847\n.text:000000000040584a\n.text:000000000040584f\n.text:0000000000405852\n.text:0000000000405854\n.text:0000000000405856\n.text:0000000000405859\n.text:000000000040585e\n.text:0000000000405861\n.text:0000000000405865\n.text:0000000000405867\n.text:000000000040586a\n.text:000000000040586d\n.text:0000000000405872\n.text:0000000000405874\n.text:000000000040587a\n.text:0000000000405881\n.text:0000000000405885\n.text:0000000000405888\n.text:000000000040588d\n.text:000000000040588f\n.text:0000000000405895\n.text:000000000040589a\n.text:000000000040589d\n.text:000000000040589f\n.text:00000000004058a4\n.text:00000000004058a9\n.text:00000000004058ae\n.text:00000000004058b1\n.text:00000000004058b6\n.text:00000000004058ba\n.text:00000000004058bf\n.text:00000000004058c1\n.text:00000000004058c6\n.text:00000000004058cb\n.text:00000000004058d2\n.text:00000000004058d5\n.text:00000000004058da\n.text:00000000004058dd\n.text:00000000004058e0\n.text:00000000004058e6\n.text:00000000004058e9\n.text:00000000004058ed\n.text:00000000004058f2\n.text:00000000004058f4\n.text:00000000004058fa\n.text:00000000004058ff\n.text:0000000000405902\n.text:0000000000405908\n.text:000000000040590e\n.text:0000000000405911\n.text:0000000000405913\n.text:0000000000405919\n.text:000000000040591e\n.text:0000000000405924\n.text:0000000000405929\n.text:000000000040592f\n.text:0000000000405936\n.text:0000000000405939\n.text:000000000040593e\n.text:0000000000405941\n.text:0000000000405947\n.text:000000000040594b\n.text:000000000040594e\n.text:0000000000405953\n.text:0000000000405956\n.text:0000000000405959\n.text:000000000040595f\n.text:0000000000405962\n.text:0000000000405965\n.text:000000000040596a\n.text:000000000040596c\n.text:000000000040596f\n.text:0000000000405972\n.text:0000000000405977\n.text:000000000040597a\n.text:000000000040597c\n.text:000000000040597f\n.text:0000000000405983\n.text:0000000000405988\n.text:000000000040598a\n.text:000000000040598d\n.text:0000000000405990\n.text:0000000000405992\n.text:0000000000405995\n.text:000000000040599a\n.text:000000000040599f\n.text:00000000004059a2\n.text:00000000004059a4\n.text:00000000004059a9\n.text:00000000004059ae\n.text:00000000004059b3\n.text:00000000004059b6\n.text:00000000004059bb\n.text:00000000004059be\n.text:00000000004059c3\n.text:00000000004059c6\n.text:00000000004059c8\n.text:00000000004059ca\n.text:00000000004059cd\n.text:00000000004059d2\n.text:00000000004059d5\n.text:00000000004059da\n.text:00000000004059dc\n.text:00000000004059e1\n.text:00000000004059e6\n.text:00000000004059eb\n.text:00000000004059ee\n.text:00000000004059f3\n.text:00000000004059f7\n.text:00000000004059fc\n.text:00000000004059ff\n.text:0000000000405a01\n.text:0000000000405a03\n.text:0000000000405a06\n.text:0000000000405a0b\n.text:0000000000405a0e\n.text:0000000000405a10\n.text:0000000000405a13\n.text:0000000000405a16\n.text:0000000000405a18\n.text:0000000000405a1a\n.text:0000000000405a1d\n.text:0000000000405a22\n.text:0000000000405a28\n.text:0000000000405a2a\n.text:0000000000405a2f\n.text:0000000000405a35\n.text:0000000000405a37\n.text:0000000000405a3d\n.text:0000000000405a43\n.text:0000000000405a47\n.text:0000000000405a4c\n.text:0000000000405a4e\n.text:0000000000405a50\n.text:0000000000405a53\n.text:0000000000405a58\n.text:0000000000405a5a\n.text:0000000000405a60\n.text:0000000000405a63\n.text:0000000000405a65\n.text:0000000000405a67\n.text:0000000000405a6a\n.text:0000000000405a6d\n.text:0000000000405a71\n.text:0000000000405a75\n.text:0000000000405a7b\n.text:0000000000405a7f\n.text:0000000000405a81\n.text:0000000000405a87\n.text:0000000000405a89\n.text:0000000000405a8c\n.text:0000000000405a90\n.text:0000000000405a93\n.text:0000000000405a96\n.text:0000000000405a9d\n.text:0000000000405aa1\n.text:0000000000405aa6\n.text:0000000000405aa8\n.text:0000000000405aaa\n.text:0000000000405aaf\n.text:0000000000405ab6\n.text:0000000000405aba\n.text:0000000000405abf\n.text:0000000000405ac2\n.text:0000000000405ac5\n.text:0000000000405ac9\n.text:0000000000405acc\n.text:0000000000405ad2\n.text:0000000000405ad4\n.text:0000000000405ad9\n.text:0000000000405adb\n.text:0000000000405ae1\n.text:0000000000405ae4\n.text:0000000000405aea\n.text:0000000000405af0\n.text:0000000000405af6\n.text:0000000000405af9\n.text:0000000000405b00\n.text:0000000000405b03\n.text:0000000000405b08\n.text:0000000000405b0f\n.text:0000000000405b16\n.text:0000000000405b19\n.text:0000000000405b1e\n.text:0000000000405b25\n.text:0000000000405b2c\n.text:0000000000405b33\n.text:0000000000405b36\n.text:0000000000405b38\n.text:0000000000405b3c\n.text:0000000000405b41\n.text:0000000000405b43\n.text:0000000000405b45\n.text:0000000000405b4a\n.text:0000000000405b50\n.text:0000000000405b56\n.text:0000000000405b5b\n.text:0000000000405b5d\n.text:0000000000405b63\n.text:0000000000405b68\n.text:0000000000405b6d\n.text:0000000000405b6f\n.text:0000000000405b75\n.text:0000000000405b78\n.text:0000000000405b7b\n.text:0000000000405b7f\n.text:0000000000405b82\n.text:0000000000405b85\n.text:0000000000405b87\n.text:0000000000405b8b\n.text:0000000000405b8e\n.text:0000000000405b93\n.text:0000000000405b96\n.text:0000000000405b99\n.text:0000000000405b9c\n.text:0000000000405ba0\n.text:0000000000405ba6\n.text:0000000000405bac\n.text:0000000000405bb1\n.text:0000000000405bb5\n.text:0000000000405bba\n.text:0000000000405bbc\n.text:0000000000405bbe\n.text:0000000000405bc3\n.text:0000000000405bc7\n.text:0000000000405bca\n.text:0000000000405bcc\n.text:0000000000405bd1\n.text:0000000000405bd6\n.text:0000000000405bdb\n.text:0000000000405bde\n.text:0000000000405be3\n.text:0000000000405be7\n.text:0000000000405bec\n.text:0000000000405bef\n.text:0000000000405bf1\n.text:0000000000405bf3\n.text:0000000000405bf6\n.text:0000000000405bfa\n.text:0000000000405bfd\n.text:0000000000405c02\n.text:0000000000405c08\n.text:0000000000405c0a\n.text:0000000000405c0d\n.text:0000000000405c12\n.text:0000000000405c15\n.text:0000000000405c18\n.text:0000000000405c1a\n.text:0000000000405c1c\n.text:0000000000405c20\n.text:0000000000405c25\n.text:0000000000405c29\n.text:0000000000405c2f\n.text:0000000000405c31\n.text:0000000000405c34\n.text:0000000000405c37\n.text:0000000000405c39\n.text:0000000000405c3d\n.text:0000000000405c41\n.text:0000000000405c43\n.text:0000000000405c49\n.text:0000000000405c4f\n.text:0000000000405c51\n.text:0000000000405c57\n.text:0000000000405c5d\n.text:0000000000405c5f\n.text:0000000000405c63\n.text:0000000000405c6a\n.text:0000000000405c71\n.text:0000000000405c76\n.text:0000000000405c79\n.text:0000000000405c7c\n.text:0000000000405c81\n.text:0000000000405c84\n.text:0000000000405c86\n.text:0000000000405c88\n.text:0000000000405c8a\n.text:0000000000405c91\n.text:0000000000405c94\n.text:0000000000405c96\n.text:0000000000405c9a\n.text:0000000000405c9e\n.text:0000000000405ca1\n.text:0000000000405ca7\n.text:0000000000405ca9\n.text:0000000000405caf\n.text:0000000000405cb1\n.text:0000000000405cb6\n.text:0000000000405cbb\n.text:0000000000405cbe\n.text:0000000000405cc1\n.text:0000000000405cc4\n.text:0000000000405cc9\n.text:0000000000405ccb\n.text:0000000000405cce\n.text:0000000000405cd4\n.text:0000000000405cda\n.text:0000000000405ce0\n.text:0000000000405ce3\n.text:0000000000405ce8\n.text:0000000000405cee\n.text:0000000000405cf0\n.text:0000000000405cf5\n.text:0000000000405cfa\n.text:0000000000405cfe\n.text:0000000000405d03\n.text:0000000000405d05\n.text:0000000000405d08\n.text:0000000000405d0e\n.text:0000000000405d11\n.text:0000000000405d16\n.text:0000000000405d1c\n.text:0000000000405d1e\n.text:0000000000405d23\n.text:0000000000405d25\n.text:0000000000405d2a\n.text:0000000000405d2f\n.text:0000000000405d33\n.text:0000000000405d35\n.text:0000000000405d3a\n.text:0000000000405d3c\n.text:0000000000405d3f\n.text:0000000000405d45\n.text:0000000000405d48\n.text:0000000000405d4d\n.text:0000000000405d51\n.text:0000000000405d57\n.text:0000000000405d5c\n.text:0000000000405d5e\n.text:0000000000405d61\n.text:0000000000405d65\n.text:0000000000405d6b\n.text:0000000000405d6f\n.text:0000000000405d75\n.text:0000000000405d79\n.text:0000000000405d7f\n.text:0000000000405d86\n.text:0000000000405d8a\n.text:0000000000405d8f\n.text:0000000000405d91\n.text:0000000000405d97\n.text:0000000000405d9c\n.text:0000000000405d9f\n.text:0000000000405da2\n.text:0000000000405da4\n.text:0000000000405da9\n.text:0000000000405dae\n.text:0000000000405db3\n.text:0000000000405db6\n.text:0000000000405dbb\n.text:0000000000405dbf\n.text:0000000000405dc4\n.text:0000000000405dc7\n.text:0000000000405dc9\n.text:0000000000405dcb\n.text:0000000000405dce\n.text:0000000000405dd3\n.text:0000000000405dd8\n.text:0000000000405dda\n.text:0000000000405ddc\n.text:0000000000405de1\n.text:0000000000405de6\n.text:0000000000405deb\n.text:0000000000405dee\n.text:0000000000405df0\n.text:0000000000405df2\n.text:0000000000405df4\n.text:0000000000405df7\n.text:0000000000405dfb\n.text:0000000000405e00\n.text:0000000000405e06\n.text:0000000000405e0c\n.text:0000000000405e11\n.text:0000000000405e18\n.text:0000000000405e1a\n.text:0000000000405e20\n.text:0000000000405e23\n.text:0000000000405e25\n.text:0000000000405e28\n.text:0000000000405e2a\n.text:0000000000405e2c\n.text:0000000000405e2f\n.text:0000000000405e33\n.text:0000000000405e36\n.text:0000000000405e39\n.text:0000000000405e3b\n.text:0000000000405e3e\n.text:0000000000405e40\n.text:0000000000405e44\n.text:0000000000405e49\n.text:0000000000405e4c\n.text:0000000000405e4e\n.text:0000000000405e50\n.text:0000000000405e55\n.text:0000000000405e58\n.text:0000000000405e5b\n.text:0000000000405e5d\n.text:0000000000405e62\n.text:0000000000405e67\n.text:0000000000405e6c\n.text:0000000000405e6f\n.text:0000000000405e74\n.text:0000000000405e78\n.text:0000000000405e7d\n.text:0000000000405e80\n.text:0000000000405e82\n.text:0000000000405e84\n.text:0000000000405e87\n.text:0000000000405e8a\n.text:0000000000405e8f\n.text:0000000000405e92\n.text:0000000000405e98\n.text:0000000000405e9e\n.text:0000000000405ea0\n.text:0000000000405ea4\n.text:0000000000405ea9\n.text:0000000000405eb0\n.text:0000000000405eb3\n.text:0000000000405eb8\n.text:0000000000405ebb\n.text:0000000000405ec0\n.text:0000000000405ec4\n.text:0000000000405eca\n'
p440
tp441
sS'hash_initialize'
p442
(S'\n__stdcall hash_initialize(size_t candidate, Hash_tuning * tuning, Hash_hasher * hasher, Hash_comparator * comparator, Hash_data_freer * data_freer)\n'
p443
V\u000aHash_table *\u000ahash_initialize(size_t candidate,Hash_tuning *tuning,size_t (*hasher)(void *,size_t),\u000a               _Bool (*comparator)(void *,void *),void (*data_freer)(void *))\u000a\u000a{\u000a  _Bool _Var1;\u000a  Hash_table *table;\u000a  size_t n;\u000a  hash_entry *phVar2;\u000a  code *pcVar3;\u000a  Hash_tuning *tuning_00;\u000a  code *pcVar4;\u000a  \u000a  pcVar3 = raw_hasher;\u000a  if (hasher != (size_t (*)(void *,size_t))0x0) {\u000a    pcVar3 = hasher;\u000a  }\u000a  pcVar4 = raw_comparator;\u000a  if (comparator != (_Bool (*)(void *,void *))0x0) {\u000a    pcVar4 = comparator;\u000a  }\u000a  table = (Hash_table *)malloc(0x50);\u000a  if (table != (Hash_table *)0x0) {\u000a    tuning_00 = &default_tuning;\u000a    if (tuning != (Hash_tuning *)0x0) {\u000a      tuning_00 = tuning;\u000a    }\u000a    table->tuning = tuning_00;\u000a    _Var1 = check_tuning(table);\u000a    if (_Var1 != false) {\u000a      n = compute_bucket_size(candidate,tuning_00);\u000a      table->n_buckets = n;\u000a      if (n != 0) {\u000a        phVar2 = (hash_entry *)rpl_calloc(n,0x10);\u000a        table->bucket = phVar2;\u000a        if (phVar2 != (hash_entry *)0x0) {\u000a          table->bucket_limit = phVar2 + table->n_buckets;\u000a          *(undefined4 *)&table->n_buckets_used = 0;\u000a          *(undefined4 *)((long)&table->n_buckets_used + 4) = 0;\u000a          *(undefined4 *)&table->n_entries = 0;\u000a          *(undefined4 *)((long)&table->n_entries + 4) = 0;\u000a          table->hasher = pcVar3;\u000a          table->comparator = pcVar4;\u000a          table->data_freer = data_freer;\u000a          table->free_entry_list = (hash_entry *)0x0;\u000a          return table;\u000a        }\u000a      }\u000a    }\u000a    free(table);\u000a  }\u000a  return (Hash_table *)0x0;\u000a}\u000a\u000a
p444
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R13,R8\nMOV R12,RSI\nMOV R15,RDI\nTEST RDX,RDX\nMOV EBP,0x409d50\nCMOVNZ RBP,RDX\nTEST RCX,RCX\nMOV R14D,0x409d70\nCMOVNZ R14,RCX\nMOV EDI,0x50\nCALL 0x00402760\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409d35\nMOV qword ptr [RSP],R13\nTEST R12,R12\nMOV R13D,0x412d4c\nCMOVNZ R13,R12\nMOV qword ptr [RBX + 0x28],R13\nMOV RDI,RBX\nCALL 0x00409d80\nTEST AL,AL\nJZ 0x00409d2d\nMOV RDI,R15\nMOV RSI,R13\nCALL 0x00409e00\nMOV qword ptr [RBX + 0x10],RAX\nTEST RAX,RAX\nJZ 0x00409d2d\nMOV ESI,0x10\nMOV RDI,RAX\nCALL 0x0040eec0\nMOV qword ptr [RBX],RAX\nTEST RAX,RAX\nJZ 0x00409d2d\nMOV RCX,qword ptr [RBX + 0x10]\nSHL RCX,0x4\nADD RAX,RCX\nMOV qword ptr [RBX + 0x8],RAX\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RBX + 0x18],XMM0\nMOV qword ptr [RBX + 0x30],RBP\nMOV qword ptr [RBX + 0x38],R14\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RBX + 0x40],RAX\nMOV qword ptr [RBX + 0x48],0x0\nJMP 0x00409d37\nMOV RDI,RBX\nCALL 0x00402290\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p445
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 c5\n49 89 f4\n49 89 ff\n48 85 d2\nbd 50 9d 40 00\n48 0f 45 ea\n48 85 c9\n41 be 70 9d 40 00\n4c 0f 45 f1\nbf 50 00 00 00\ne8 b9 8a ff ff\n48 89 c3\n48 85 db\n0f 84 82 00 00 00\n4c 89 2c 24\n4d 85 e4\n41 bd 4c 2d 41 00\n4d 0f 45 ec\n4c 89 6b 28\n48 89 df\ne8 b0 00 00 00\n84 c0\n74 59\n4c 89 ff\n4c 89 ee\ne8 21 01 00 00\n48 89 43 10\n48 85 c0\n74 45\nbe 10 00 00 00\n48 89 c7\ne8 cb 51 00 00\n48 89 03\n48 85 c0\n74 30\n48 8b 4b 10\n48 c1 e1 04\n48 01 c8\n48 89 43 08\n0f 57 c0\n0f 11 43 18\n48 89 6b 30\n4c 89 73 38\n48 8b 04 24\n48 89 43 40\n48 c7 43 48 00 00 00 00\neb 0a\n48 89 df\ne8 5b 85 ff ff\n31 db\n48 89 d8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p446
S'.text:0000000000409c70\n.text:0000000000409c71\n.text:0000000000409c73\n.text:0000000000409c75\n.text:0000000000409c77\n.text:0000000000409c79\n.text:0000000000409c7a\n.text:0000000000409c7b\n.text:0000000000409c7e\n.text:0000000000409c81\n.text:0000000000409c84\n.text:0000000000409c87\n.text:0000000000409c8c\n.text:0000000000409c90\n.text:0000000000409c93\n.text:0000000000409c99\n.text:0000000000409c9d\n.text:0000000000409ca2\n.text:0000000000409ca7\n.text:0000000000409caa\n.text:0000000000409cad\n.text:0000000000409cb3\n.text:0000000000409cb7\n.text:0000000000409cba\n.text:0000000000409cc0\n.text:0000000000409cc4\n.text:0000000000409cc8\n.text:0000000000409ccb\n.text:0000000000409cd0\n.text:0000000000409cd2\n.text:0000000000409cd4\n.text:0000000000409cd7\n.text:0000000000409cda\n.text:0000000000409cdf\n.text:0000000000409ce3\n.text:0000000000409ce6\n.text:0000000000409ce8\n.text:0000000000409ced\n.text:0000000000409cf0\n.text:0000000000409cf5\n.text:0000000000409cf8\n.text:0000000000409cfb\n.text:0000000000409cfd\n.text:0000000000409d01\n.text:0000000000409d05\n.text:0000000000409d08\n.text:0000000000409d0c\n.text:0000000000409d0f\n.text:0000000000409d13\n.text:0000000000409d17\n.text:0000000000409d1b\n.text:0000000000409d1f\n.text:0000000000409d23\n.text:0000000000409d2b\n.text:0000000000409d2d\n.text:0000000000409d30\n.text:0000000000409d35\n.text:0000000000409d37\n.text:0000000000409d3a\n.text:0000000000409d3e\n.text:0000000000409d3f\n.text:0000000000409d41\n.text:0000000000409d43\n.text:0000000000409d45\n.text:0000000000409d47\n.text:0000000000409d48\n'
p447
tp448
sS'xrealloc'
p449
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p450
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p451
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x0040ea07\nTEST RBX,RBX\nJNZ 0x0040ea07\nCALL 0x00402290\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x00402800\nTEST RBX,RBX\nJZ 0x0040ea19\nTEST RAX,RAX\nJZ 0x0040ea1b\nPOP RBX\nRET\nCALL 0x0040eb40\n'
p452
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 8d 38 ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 f1 3d ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p453
S'.text:000000000040e9f0\n.text:000000000040e9f1\n.text:000000000040e9f4\n.text:000000000040e9f7\n.text:000000000040e9f9\n.text:000000000040e9fc\n.text:000000000040e9fe\n.text:000000000040ea03\n.text:000000000040ea05\n.text:000000000040ea06\n.text:000000000040ea07\n.text:000000000040ea0a\n.text:000000000040ea0f\n.text:000000000040ea12\n.text:000000000040ea14\n.text:000000000040ea17\n.text:000000000040ea19\n.text:000000000040ea1a\n.text:000000000040ea1b\n'
p454
tp455
sS'signal'
p456
(S'\n__stdcall signal(int __sig, __sighandler_t __handler)\n'
p457
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__sighandler_t signal(int __sig,__sighandler_t __handler)\u000a\u000a{\u000a  __sighandler_t pVar1;\u000a  \u000a  pVar1 = (__sighandler_t)(*(code *)PTR_signal_00618218)();\u000a  return pVar1;\u000a}\u000a\u000a
p458
S'JMP qword ptr [0x00618218]\n'
p459
S'ff 25 b2 5b 21 00\n'
p460
S'.plt:0000000000402660\n'
p461
tp462
sS'chown'
p463
(S'\n__stdcall chown(char * __file, __uid_t __owner, __gid_t __group)\n'
p464
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint chown(char *__file,__uid_t __owner,__gid_t __group)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_chown_006182e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x006182e0]\n'
p466
S'ff 25 ea 5a 21 00\n'
p467
S'.plt:00000000004027f0\n'
p468
tp469
sS'set_file_security_ctx'
p470
(S'\n__stdcall set_file_security_ctx()\n'
p471
V\u000a_Bool set_file_security_ctx(void)\u000a\u000a{\u000a  char cVar1;\u000a  uint uVar2;\u000a  undefined uVar3;\u000a  _Bool _Var4;\u000a  uint *puVar5;\u000a  undefined8 uVar6;\u000a  char *pcVar7;\u000a  long in_RCX;\u000a  \u000a  if ((*(char *)(in_RCX + 0x22) != 0) && (*(char *)(in_RCX + 0x25) == 0)) {\u000a    cVar1 = *(char *)(in_RCX + 0x28);\u000a    _Var4 = restorecon();\u000a    if (cVar1 == 0) {\u000a      __errno_location();\u000a      _Var4 = errno_unsupported();\u000a      if (_Var4 == false) goto LAB_00406768;\u000a    }\u000a    return _Var4;\u000a  }\u000a  restorecon();\u000aLAB_00406768:\u000a  puVar5 = (uint *)__errno_location();\u000a  uVar2 = *puVar5;\u000a  uVar6 = dcgettext(0,"failed to set the security context of %s",5);\u000a  pcVar7 = quotearg_n_style((char *)0x0);\u000a  uVar3 = error(0,(ulong)uVar2,uVar6,pcVar7);\u000a  return (_Bool)uVar3;\u000a}\u000a\u000a
p472
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCMP byte ptr [RCX + 0x22],0x0\nJZ 0x00406763\nCMP byte ptr [RCX + 0x25],0x0\nJZ 0x004067a7\nCALL 0x004079e0\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x41285b\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,R14\nCALL 0x0040c3e0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RDX,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00402870\nMOV BL,byte ptr [RCX + 0x28]\nCALL 0x004079e0\nCMP BL,0x0\nJNZ 0x004067c4\nCALL 0x004022e0\nMOV EDI,dword ptr [RAX]\nCALL 0x004079f0\nTEST AL,AL\nJZ 0x00406768\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p473
S'55\n41 56\n53\n49 89 fe\n80 79 22 00\n74 06\n80 79 25 00\n74 44\ne8 78 12 00 00\ne8 73 bb ff ff\n8b 28\n31 ff\nbe 5b 28 41 00\nba 05 00 00 00\ne8 a0 bc ff ff\n48 89 c3\n31 ff\nbe 04 00 00 00\n4c 89 f2\ne8 4e 5c 00 00\n48 89 c1\n31 ff\n31 c0\n89 ee\n48 89 da\n5b\n41 5e\n5d\ne9 c9 c0 ff ff\n8a 59 28\ne8 31 12 00 00\n80 fb 00\n75 10\ne8 27 bb ff ff\n8b 38\ne8 30 12 00 00\n84 c0\n74 a4\n5b\n41 5e\n5d\nc3\n'
p474
S'.text:0000000000406750\n.text:0000000000406751\n.text:0000000000406753\n.text:0000000000406754\n.text:0000000000406757\n.text:000000000040675b\n.text:000000000040675d\n.text:0000000000406761\n.text:0000000000406763\n.text:0000000000406768\n.text:000000000040676d\n.text:000000000040676f\n.text:0000000000406771\n.text:0000000000406776\n.text:000000000040677b\n.text:0000000000406780\n.text:0000000000406783\n.text:0000000000406785\n.text:000000000040678a\n.text:000000000040678d\n.text:0000000000406792\n.text:0000000000406795\n.text:0000000000406797\n.text:0000000000406799\n.text:000000000040679b\n.text:000000000040679e\n.text:000000000040679f\n.text:00000000004067a1\n.text:00000000004067a2\n.text:00000000004067a7\n.text:00000000004067aa\n.text:00000000004067af\n.text:00000000004067b2\n.text:00000000004067b4\n.text:00000000004067b9\n.text:00000000004067bb\n.text:00000000004067c0\n.text:00000000004067c2\n.text:00000000004067c4\n.text:00000000004067c5\n.text:00000000004067c7\n.text:00000000004067c8\n'
p475
tp476
sS'dir_name'
p477
(S'\n__stdcall dir_name(char * file)\n'
p478
V\u000achar * dir_name(char *file)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = mdir_name(file);\u000a  if (pcVar1 != (char *)0x0) {\u000a    return pcVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p479
S'PUSH RAX\nCALL 0x00409290\nTEST RAX,RAX\nJZ 0x0040923d\nPOP RCX\nRET\nCALL 0x0040eb40\n'
p480
S'50\ne8 5a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 fe 58 00 00\n'
p481
S'.text:0000000000409230\n.text:0000000000409231\n.text:0000000000409236\n.text:0000000000409239\n.text:000000000040923b\n.text:000000000040923c\n.text:000000000040923d\n'
p482
tp483
sS'version_etc_ar'
p484
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p485
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p486
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x0040e7d0\nJMP 0x0040e460\n'
p487
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p488
S'.text:000000000040e7c0\n.text:000000000040e7c7\n.text:000000000040e7d0\n.text:000000000040e7d6\n.text:000000000040e7da\n.text:000000000040e7dc\n'
p489
tp490
sS'create_hole'
p491
(S'\n__stdcall create_hole(char * name, off_t size)\n'
p492
V\u000a_Bool create_hole(char *name,off_t size)\u000a\u000a{\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  __off_t __offset;\u000a  char in_DL;\u000a  uint uVar6;\u000a  \u000a  _Var2 = lseek((int)name,__offset,1);\u000a  if (_Var2 < 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar6 = *puVar3;\u000a    pcVar5 = "cannot lseek %s";\u000a  }\u000a  else {\u000a    if (in_DL == 0) {\u000a      return true;\u000a    }\u000a    iVar1 = punch_hole((ulong)name & 0xffffffff,_Var2 - __offset);\u000a    if (-1 < iVar1) {\u000a      return true;\u000a    }\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar6 = *puVar3;\u000a    pcVar5 = "error deallocating %s";\u000a  }\u000a  uVar4 = dcgettext(0,pcVar5,5);\u000a  pcVar5 = quotearg_style((char *)0x4);\u000a  error(0,(ulong)uVar6,uVar4,pcVar5);\u000a  return false;\u000a}\u000a\u000a
p493
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV RBX,RCX\nMOV R12D,EDX\nMOV R14,RSI\nMOV EBP,EDI\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00402500\nTEST RAX,RAX\nJS 0x00408314\nMOV R15B,0x1\nTEST R12B,R12B\nJZ 0x00408350\nSUB RAX,RBX\nMOV EDI,EBP\nMOV RSI,RAX\nMOV RDX,RBX\nCALL 0x00408420\nTEST EAX,EAX\nJNS 0x00408350\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R15D,R15D\nXOR EDI,EDI\nMOV ESI,0x412a4a\nJMP 0x00408325\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R15D,R15D\nXOR EDI,EDI\nMOV ESI,0x412a29\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOV EAX,R15D\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p494
S'55\n41 57\n41 56\n41 54\n53\n48 89 cb\n41 89 d4\n49 89 f6\n89 fd\nba 01 00 00 00\n48 89 de\ne8 20 a2 ff ff\n48 85 c0\n78 2f\n41 b7 01\n45 84 e4\n74 63\n48 29 d8\n89 ef\n48 89 c6\n48 89 da\ne8 23 01 00 00\n85 c0\n79 4f\ne8 da 9f ff ff\n8b 18\n45 31 ff\n31 ff\nbe 4a 2a 41 00\neb 11\ne8 c7 9f ff ff\n8b 18\n45 31 ff\n31 ff\nbe 29 2a 41 00\nba 05 00 00 00\ne8 f1 a0 ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 81 41 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 20 a5 ff ff\n44 89 f8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p495
S'.text:00000000004082c0\n.text:00000000004082c1\n.text:00000000004082c3\n.text:00000000004082c5\n.text:00000000004082c7\n.text:00000000004082c8\n.text:00000000004082cb\n.text:00000000004082ce\n.text:00000000004082d1\n.text:00000000004082d3\n.text:00000000004082d8\n.text:00000000004082db\n.text:00000000004082e0\n.text:00000000004082e3\n.text:00000000004082e5\n.text:00000000004082e8\n.text:00000000004082eb\n.text:00000000004082ed\n.text:00000000004082f0\n.text:00000000004082f2\n.text:00000000004082f5\n.text:00000000004082f8\n.text:00000000004082fd\n.text:00000000004082ff\n.text:0000000000408301\n.text:0000000000408306\n.text:0000000000408308\n.text:000000000040830b\n.text:000000000040830d\n.text:0000000000408312\n.text:0000000000408314\n.text:0000000000408319\n.text:000000000040831b\n.text:000000000040831e\n.text:0000000000408320\n.text:0000000000408325\n.text:000000000040832a\n.text:000000000040832f\n.text:0000000000408332\n.text:0000000000408337\n.text:000000000040833a\n.text:000000000040833f\n.text:0000000000408342\n.text:0000000000408344\n.text:0000000000408346\n.text:0000000000408348\n.text:000000000040834b\n.text:0000000000408350\n.text:0000000000408353\n.text:0000000000408354\n.text:0000000000408356\n.text:0000000000408358\n.text:000000000040835a\n.text:000000000040835b\n'
p496
tp497
sS'getuid'
p498
(S'\n__stdcall getuid()\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__uid_t getuid(void)\u000a\u000a{\u000a  __uid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getuid_00618128)();\u000a  return _Var1;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x00618128]\n'
p501
S'ff 25 a2 5c 21 00\n'
p502
S'.plt:0000000000402480\n'
p503
tp504
sS'update_timespec'
p505
(S'\n__stdcall update_timespec(stat * statbuf, timespec * * ts)\n'
p506
V\u000a_Bool update_timespec(stat *statbuf,timespec **ts)\u000a\u000a{\u000a  timespec *ts_00;\u000a  timespec tVar1;\u000a  \u000a  ts_00 = *ts;\u000a  if (ts_00->tv_nsec == 0x3fffffff) {\u000a    if (ts_00[1].tv_nsec == 0x3fffffff) {\u000a      *ts = (timespec *)0x0;\u000a      return false;\u000a    }\u000a    gettime(ts_00);\u000a  }\u000a  else {\u000a    if (ts_00->tv_nsec == 0x3ffffffe) {\u000a      if (ts_00[1].tv_nsec == 0x3ffffffe) {\u000a        return true;\u000a      }\u000a      tVar1 = get_stat_atime(statbuf);\u000a      ts_00->tv_sec = SUB168((undefined  [16])tVar1,0);\u000a      ts_00->tv_nsec = SUB168((undefined  [16])tVar1 >> 0x40,0);\u000a    }\u000a  }\u000a  if (ts_00[1].tv_nsec == 0x3fffffff) {\u000a    gettime(ts_00 + 1);\u000a  }\u000a  else {\u000a    if (ts_00[1].tv_nsec == 0x3ffffffe) {\u000a      tVar1 = get_stat_mtime(statbuf);\u000a      ts_00[1].tv_sec = SUB168((undefined  [16])tVar1,0);\u000a      ts_00[1].tv_nsec = SUB168((undefined  [16])tVar1 >> 0x40,0);\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p507
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RBX,qword ptr [RSI]\nMOV RAX,qword ptr [RBX + 0x8]\nCMP RAX,0x3fffffff\nJZ 0x0040e21b\nCMP RAX,0x3ffffffe\nJNZ 0x0040e236\nMOV AL,0x1\nCMP qword ptr [RBX + 0x18],0x3ffffffe\nJZ 0x0040e26a\nMOV RDI,R14\nCALL 0x0040d730\nMOV qword ptr [RBX],RAX\nMOV qword ptr [RBX + 0x8],RDX\nJMP 0x0040e236\nCMP qword ptr [RBX + 0x18],0x3fffffff\nJNZ 0x0040e22e\nMOV qword ptr [RSI],0x0\nJMP 0x0040e268\nMOV RDI,RBX\nCALL 0x0040fb90\nMOV RAX,qword ptr [RBX + 0x18]\nCMP RAX,0x3fffffff\nJZ 0x0040e25c\nCMP RAX,0x3ffffffe\nJNZ 0x0040e268\nMOV RDI,R14\nCALL 0x0040d750\nMOV qword ptr [RBX + 0x10],RAX\nMOV qword ptr [RBX + 0x18],RDX\nJMP 0x0040e268\nADD RBX,0x10\nMOV RDI,RBX\nCALL 0x0040fb90\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p508
S'41 56\n53\n50\n49 89 fe\n48 8b 1e\n48 8b 43 08\n48 3d ff ff ff 3f\n74 25\n48 3d fe ff ff 3f\n75 38\nb0 01\n48 81 7b 18 fe ff ff 3f\n74 60\n4c 89 f7\ne8 1e f5 ff ff\n48 89 03\n48 89 53 08\neb 1b\n48 81 7b 18 ff ff ff 3f\n75 09\n48 c7 06 00 00 00 00\neb 3a\n48 89 df\ne8 5a 19 00 00\n48 8b 43 18\n48 3d ff ff ff 3f\n74 1a\n48 3d fe ff ff 3f\n75 1e\n4c 89 f7\ne8 fe f4 ff ff\n48 89 43 10\n48 89 53 18\neb 0c\n48 83 c3 10\n48 89 df\ne8 28 19 00 00\n31 c0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p509
S'.text:000000000040e1e0\n.text:000000000040e1e2\n.text:000000000040e1e3\n.text:000000000040e1e4\n.text:000000000040e1e7\n.text:000000000040e1ea\n.text:000000000040e1ee\n.text:000000000040e1f4\n.text:000000000040e1f6\n.text:000000000040e1fc\n.text:000000000040e1fe\n.text:000000000040e200\n.text:000000000040e208\n.text:000000000040e20a\n.text:000000000040e20d\n.text:000000000040e212\n.text:000000000040e215\n.text:000000000040e219\n.text:000000000040e21b\n.text:000000000040e223\n.text:000000000040e225\n.text:000000000040e22c\n.text:000000000040e22e\n.text:000000000040e231\n.text:000000000040e236\n.text:000000000040e23a\n.text:000000000040e240\n.text:000000000040e242\n.text:000000000040e248\n.text:000000000040e24a\n.text:000000000040e24d\n.text:000000000040e252\n.text:000000000040e256\n.text:000000000040e25a\n.text:000000000040e25c\n.text:000000000040e260\n.text:000000000040e263\n.text:000000000040e268\n.text:000000000040e26a\n.text:000000000040e26e\n.text:000000000040e26f\n.text:000000000040e271\n'
p510
tp511
sS'gettime'
p512
(S'\n__stdcall gettime(timespec * ts)\n'
p513
V\u000avoid gettime(timespec *ts)\u000a\u000a{\u000a  int iVar1;\u000a  timeval local_18;\u000a  \u000a  iVar1 = clock_gettime(0,(timespec *)ts);\u000a  if (iVar1 != 0) {\u000a    gettimeofday(&local_18,(__timezone_ptr_t)0x0);\u000a    ts->tv_sec = local_18.tv_sec;\u000a    ts->tv_nsec = local_18.tv_usec * 1000;\u000a  }\u000a  return;\u000a}\u000a\u000a
p514
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nXOR EDI,EDI\nMOV RSI,RBX\nCALL 0x00402390\nTEST EAX,EAX\nJZ 0x0040fbc4\nMOV RDI,RSP\nXOR ESI,ESI\nCALL 0x00402510\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RBX],RAX\nIMUL RAX,qword ptr [RSP + 0x8],0x3e8\nMOV qword ptr [RBX + 0x8],RAX\nADD RSP,0x10\nPOP RBX\nRET\n'
p515
S'53\n48 83 ec 10\n48 89 fb\n31 ff\n48 89 de\ne8 ee 27 ff ff\n85 c0\n74 1e\n48 89 e7\n31 f6\ne8 60 29 ff ff\n48 8b 04 24\n48 89 03\n48 69 44 24 08 e8 03 00 00\n48 89 43 08\n48 83 c4 10\n5b\nc3\n'
p516
S'.text:000000000040fb90\n.text:000000000040fb91\n.text:000000000040fb95\n.text:000000000040fb98\n.text:000000000040fb9a\n.text:000000000040fb9d\n.text:000000000040fba2\n.text:000000000040fba4\n.text:000000000040fba6\n.text:000000000040fba9\n.text:000000000040fbab\n.text:000000000040fbb0\n.text:000000000040fbb4\n.text:000000000040fbb7\n.text:000000000040fbc0\n.text:000000000040fbc4\n.text:000000000040fbc8\n.text:000000000040fbc9\n'
p517
tp518
sS'rpl_mknod'
p519
(S'\n__stdcall rpl_mknod(char * name, dev_t dev)\n'
p520
V\u000aint rpl_mknod(char *name,dev_t dev)\u000a\u000a{\u000a  int iVar1;\u000a  __dev_t __dev;\u000a  uint __mode;\u000a  \u000a  __mode = (uint)dev;\u000a  if (((__mode & 0xf000) == 0x1000) && (__dev == 0)) {\u000a    iVar1 = mkfifo(name,__mode & 0xffffefff);\u000a    return iVar1;\u000a  }\u000a  iVar1 = mknod(name,__mode,__dev);\u000a  return iVar1;\u000a}\u000a\u000a
p521
S'MOV EAX,ESI\nAND EAX,0xf000\nCMP EAX,0x1000\nJNZ 0x0040f1de\nTEST RDX,RDX\nJNZ 0x0040f1de\nAND ESI,0xffffefff\nJMP 0x004026b0\nJMP 0x004107e0\n'
p522
S'89 f0\n25 00 f0 00 00\n3d 00 10 00 00\n75 10\n48 85 d2\n75 0b\n81 e6 ff ef ff ff\ne9 d2 34 ff ff\ne9 fd 15 00 00\n'
p523
S'.text:000000000040f1c0\n.text:000000000040f1c2\n.text:000000000040f1c7\n.text:000000000040f1cc\n.text:000000000040f1ce\n.text:000000000040f1d1\n.text:000000000040f1d3\n.text:000000000040f1d9\n.text:000000000040f1de\n'
p524
tp525
sS'longest_relative_suffix'
p526
(S'\n__stdcall longest_relative_suffix(char * f)\n'
p527
V\u000achar * longest_relative_suffix(char *f)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  f = f + -1;\u000a  do {\u000a    pcVar1 = f + 1;\u000a    f = f + 1;\u000a  } while (*pcVar1 == '/');\u000a  return f;\u000a}\u000a\u000a
p528
S'DEC RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [RDI + 0x1],0x2f\nLEA RDI,[RDI + 0x1]\nJZ 0x00409770\nMOV RAX,RDI\nRET\n'
p529
S'48 ff cf\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 7f 01 2f\n48 8d 7f 01\n74 f6\n48 89 f8\nc3\n'
p530
S'.text:0000000000409760\n.text:0000000000409763\n.text:0000000000409770\n.text:0000000000409774\n.text:0000000000409778\n.text:000000000040977a\n.text:000000000040977d\n'
p531
tp532
sS'version_etc'
p533
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p534
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p535
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x0040e892\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x0040e7f0\nADD RSP,0xd8\nRET\n'
p536
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p537
S'.text:000000000040e850\n.text:000000000040e857\n.text:000000000040e859\n.text:000000000040e85b\n.text:000000000040e860\n.text:000000000040e865\n.text:000000000040e86a\n.text:000000000040e872\n.text:000000000040e87a\n.text:000000000040e882\n.text:000000000040e88a\n.text:000000000040e892\n.text:000000000040e897\n.text:000000000040e89c\n.text:000000000040e8a1\n.text:000000000040e8a6\n.text:000000000040e8ae\n.text:000000000040e8b3\n.text:000000000040e8bb\n.text:000000000040e8c2\n.text:000000000040e8c5\n.text:000000000040e8ca\n.text:000000000040e8d1\n'
p538
tp539
sS'create_hard_link'
p540
(S'\n__stdcall create_hard_link(char * src_name, char * dst_name)\n'
p541
V\u000a_Bool create_hard_link(char *src_name,char *dst_name)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  char *pcVar6;\u000a  char in_CL;\u000a  char in_DL;\u000a  int __flags;\u000a  undefined8 in_R8;\u000a  bool bVar7;\u000a  \u000a  __flags = ((uint)in_R8 & 0xff) << 10;\u000a  iVar2 = linkat(-100,src_name,-100,dst_name,__flags);\u000a  bVar7 = iVar2 != 0;\u000a  if (((bVar7) && (in_DL != 0)) && (puVar3 = (uint *)__errno_location(), *puVar3 == 0x11)) {\u000a    iVar2 = unlink(dst_name);\u000a    if (iVar2 != 0) {\u000a      uVar1 = *puVar3;\u000a      uVar4 = dcgettext(0,"cannot remove %s",5);\u000a      pcVar5 = quotearg_style((char *)0x4);\u000a      error(0,(ulong)uVar1,uVar4,pcVar5);\u000a      return false;\u000a    }\u000a    if (in_CL != 0) {\u000a      uVar4 = dcgettext(0,"removed %s\u005cn",5);\u000a      pcVar5 = quotearg_style((char *)0x4);\u000a      __printf_chk(1,uVar4,pcVar5,pcVar5);\u000a    }\u000a    iVar2 = linkat(-100,src_name,-100,dst_name,__flags);\u000a    bVar7 = iVar2 != 0;\u000a  }\u000a  if (bVar7) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    uVar4 = dcgettext(0,"cannot create hard link %s to %s",5);\u000a    pcVar5 = quotearg_n_style((char *)0x0);\u000a    pcVar6 = quotearg_n_style((char *)0x1);\u000a    error(0,(ulong)uVar1,uVar4,pcVar5,pcVar6);\u000a  }\u000a  return (_Bool)!bVar7;\u000a}\u000a\u000a
p542
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15D,ECX\nMOV R14D,EDX\nMOV R12,RSI\nMOV R13,RDI\nMOVZX EBP,R8B\nSHL EBP,0xa\nMOV EDI,0xffffff9c\nMOV EDX,0xffffff9c\nMOV RSI,R13\nMOV RCX,R12\nMOV R8D,EBP\nCALL 0x00402820\nTEST EAX,EAX\nSETNZ BL\nJZ 0x0040645d\nTEST R14B,R14B\nJZ 0x0040645d\nCALL 0x004022e0\nMOV R14,RAX\nCMP dword ptr [R14],0x11\nJNZ 0x0040645d\nMOV RDI,R12\nCALL 0x004022f0\nTEST EAX,EAX\nJZ 0x00406405\nMOV EBP,dword ptr [R14]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41244e\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R12\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RDX,RBX\nCALL 0x00402870\nJMP 0x004064c4\nTEST R15B,R15B\nJZ 0x00406440\nXOR EDI,EDI\nMOV ESI,0x41245f\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R12\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00402840\nMOV EDI,0xffffff9c\nMOV EDX,0xffffff9c\nMOV RSI,R13\nMOV RCX,R12\nMOV R8D,EBP\nCALL 0x00402820\nTEST EAX,EAX\nSETNZ BL\nTEST BL,BL\nJZ 0x004064c1\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41275d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,R13\nMOV R13,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,R12\nCALL 0x0040c3e0\nMOV RBX,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV RDX,RBP\nCALL 0x0040c3e0\nMOV RBP,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,R13\nMOV RCX,RBX\nMOV R8,RBP\nCALL 0x00402870\nJMP 0x004064c4\nMOV R14B,0x1\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p543
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n41 89 cf\n41 89 d6\n49 89 f4\n49 89 fd\n41 0f b6 e8\nc1 e5 0a\nbf 9c ff ff ff\nba 9c ff ff ff\n4c 89 ee\n4c 89 e1\n41 89 e8\ne8 8a c4 ff ff\n85 c0\n0f 95 c3\n0f 84 bc 00 00 00\n45 84 f6\n0f 84 b3 00 00 00\ne8 31 bf ff ff\n49 89 c6\n41 83 3e 11\n0f 85 a1 00 00 00\n4c 89 e7\ne8 2c bf ff ff\n85 c0\n74 3d\n41 8b 2e\n45 31 f6\n31 ff\nbe 4e 24 41 00\nba 05 00 00 00\ne8 41 c0 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 e6\ne8 d1 60 00 00\n48 89 c1\n31 ff\n31 c0\n89 ee\n48 89 da\ne8 70 c4 ff ff\ne9 bf 00 00 00\n45 84 ff\n74 36\n31 ff\nbe 5f 24 41 00\nba 05 00 00 00\ne8 05 c0 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 e6\ne8 95 60 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 de\n48 89 ca\ne8 00 c4 ff ff\nbf 9c ff ff ff\nba 9c ff ff ff\n4c 89 ee\n4c 89 e1\n41 89 e8\ne8 c8 c3 ff ff\n85 c0\n0f 95 c3\n84 db\n74 60\ne8 7a be ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 5d 27 41 00\nba 05 00 00 00\ne8 a3 bf ff ff\n4c 89 ed\n49 89 c5\n31 ff\nbe 04 00 00 00\n4c 89 e2\ne8 4e 5f 00 00\n48 89 c3\nbf 01 00 00 00\nbe 04 00 00 00\n48 89 ea\ne8 39 5f 00 00\n48 89 c5\n31 ff\n31 c0\n44 89 fe\n4c 89 ea\n48 89 d9\n49 89 e8\ne8 b1 c3 ff ff\neb 03\n41 b6 01\n44 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p544
S'.text:0000000000406360\n.text:0000000000406361\n.text:0000000000406363\n.text:0000000000406365\n.text:0000000000406367\n.text:0000000000406369\n.text:000000000040636a\n.text:000000000040636b\n.text:000000000040636e\n.text:0000000000406371\n.text:0000000000406374\n.text:0000000000406377\n.text:000000000040637b\n.text:000000000040637e\n.text:0000000000406383\n.text:0000000000406388\n.text:000000000040638b\n.text:000000000040638e\n.text:0000000000406391\n.text:0000000000406396\n.text:0000000000406398\n.text:000000000040639b\n.text:00000000004063a1\n.text:00000000004063a4\n.text:00000000004063aa\n.text:00000000004063af\n.text:00000000004063b2\n.text:00000000004063b6\n.text:00000000004063bc\n.text:00000000004063bf\n.text:00000000004063c4\n.text:00000000004063c6\n.text:00000000004063c8\n.text:00000000004063cb\n.text:00000000004063ce\n.text:00000000004063d0\n.text:00000000004063d5\n.text:00000000004063da\n.text:00000000004063df\n.text:00000000004063e2\n.text:00000000004063e7\n.text:00000000004063ea\n.text:00000000004063ef\n.text:00000000004063f2\n.text:00000000004063f4\n.text:00000000004063f6\n.text:00000000004063f8\n.text:00000000004063fb\n.text:0000000000406400\n.text:0000000000406405\n.text:0000000000406408\n.text:000000000040640a\n.text:000000000040640c\n.text:0000000000406411\n.text:0000000000406416\n.text:000000000040641b\n.text:000000000040641e\n.text:0000000000406423\n.text:0000000000406426\n.text:000000000040642b\n.text:000000000040642e\n.text:0000000000406433\n.text:0000000000406435\n.text:0000000000406438\n.text:000000000040643b\n.text:0000000000406440\n.text:0000000000406445\n.text:000000000040644a\n.text:000000000040644d\n.text:0000000000406450\n.text:0000000000406453\n.text:0000000000406458\n.text:000000000040645a\n.text:000000000040645d\n.text:000000000040645f\n.text:0000000000406461\n.text:0000000000406466\n.text:0000000000406469\n.text:000000000040646c\n.text:000000000040646e\n.text:0000000000406473\n.text:0000000000406478\n.text:000000000040647d\n.text:0000000000406480\n.text:0000000000406483\n.text:0000000000406485\n.text:000000000040648a\n.text:000000000040648d\n.text:0000000000406492\n.text:0000000000406495\n.text:000000000040649a\n.text:000000000040649f\n.text:00000000004064a2\n.text:00000000004064a7\n.text:00000000004064aa\n.text:00000000004064ac\n.text:00000000004064ae\n.text:00000000004064b1\n.text:00000000004064b4\n.text:00000000004064b7\n.text:00000000004064ba\n.text:00000000004064bf\n.text:00000000004064c1\n.text:00000000004064c4\n.text:00000000004064c7\n.text:00000000004064cb\n.text:00000000004064cc\n.text:00000000004064ce\n.text:00000000004064d0\n.text:00000000004064d2\n.text:00000000004064d4\n.text:00000000004064d5\n'
p545
tp546
sS'get_permissions'
p547
(S'\n__stdcall get_permissions(char * name, permission_context * ctx)\n'
p548
V\u000aint get_permissions(char *name,permission_context *ctx)\u000a\u000a{\u000a  undefined4 *in_RCX;\u000a  undefined4 in_EDX;\u000a  \u000a  *in_RCX = in_EDX;\u000a  return 0;\u000a}\u000a\u000a
p549
S'MOV dword ptr [RCX],EDX\nXOR EAX,EAX\nRET\n'
p550
S'89 11\n31 c0\nc3\n'
p551
S'.text:000000000040f550\n.text:000000000040f552\n.text:000000000040f554\n'
p552
tp553
sS'cdb_init'
p554
(S'\n__stdcall cdb_init(cd_buf * cdb)\n'
p555
V\u000avoid cdb_init(cd_buf *cdb)\u000a\u000a{\u000a  *cdb = (cd_buf)0xffffff9c;\u000a  return;\u000a}\u000a\u000a
p556
S'MOV dword ptr [RDI],0xffffff9c\nRET\n'
p557
S'c7 07 9c ff ff ff\nc3\n'
p558
S'.text:0000000000410430\n.text:0000000000410436\n'
p559
tp560
sS'hash_get_first'
p561
(S'\n__stdcall hash_get_first(Hash_table * table)\n'
p562
V\u000avoid * hash_get_first(Hash_table *table)\u000a\u000a{\u000a  hash_entry *phVar1;\u000a  \u000a  if (table->n_entries == 0) {\u000a    return (void *)0x0;\u000a  }\u000a  phVar1 = table->bucket;\u000a  if (phVar1 < table->bucket_limit) {\u000a    do {\u000a      if (phVar1->data != (void *)0x0) {\u000a        return phVar1->data;\u000a      }\u000a      phVar1 = phVar1 + 1;\u000a    } while (phVar1 < table->bucket_limit);\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p563
S'CMP qword ptr [RDI + 0x20],0x0\nJZ 0x00409ac3\nMOV RCX,qword ptr [RDI]\nCMP RCX,qword ptr [RDI + 0x8]\nJC 0x00409aba\nJMP 0x00409ac6\nADD RCX,0x10\nCMP RCX,qword ptr [RDI + 0x8]\nJNC 0x00409ac6\nMOV RAX,qword ptr [RCX]\nTEST RAX,RAX\nJZ 0x00409ab0\nRET\nXOR EAX,EAX\nRET\nPUSH RAX\nCALL 0x004022d0\n'
p564
S'48 83 7f 20 00\n74 2c\n48 8b 0f\n48 3b 4f 08\n72 1a\neb 24\n48 83 c1 10\n48 3b 4f 08\n73 0c\n48 8b 01\n48 85 c0\n74 ee\nc3\n31 c0\nc3\n50\ne8 04 88 ff ff\n'
p565
S'.text:0000000000409a90\n.text:0000000000409a95\n.text:0000000000409a97\n.text:0000000000409a9a\n.text:0000000000409a9e\n.text:0000000000409aa0\n.text:0000000000409ab0\n.text:0000000000409ab4\n.text:0000000000409ab8\n.text:0000000000409aba\n.text:0000000000409abd\n.text:0000000000409ac0\n.text:0000000000409ac2\n.text:0000000000409ac3\n.text:0000000000409ac5\n.text:0000000000409ac6\n.text:0000000000409ac7\n'
p566
tp567
sS'quotearg_n_mem'
p568
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p569
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p570
S'MOV ECX,0x61a960\nJMP 0x0040c1f0\n'
p571
S'b9 60 a9 61 00\ne9 36 fe ff ff\n'
p572
S'.text:000000000040c3b0\n.text:000000000040c3b5\n'
p573
tp574
sS'emit_ancillary_info'
p575
(S'\n__stdcall emit_ancillary_info()\n'
p576
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x00410e80;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("install",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "install";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,"install",uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/","install");\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x413a61;\u000a  if (__s2 == "install") {\u000a    uVar3 = 0x411e69;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p577
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x410e80\nMOV ESI,0x411e4d\nNOP\nMOV EDI,0x411a1e\nCALL 0x00402650\nTEST EAX,EAX\nJZ 0x00402d1b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00402d00\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x411a1e\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x411eac\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x411b1a\nMOV ECX,0x411ec3\nXOR EAX,EAX\nCALL 0x00402840\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00402830\nTEST RAX,RAX\nJZ 0x00402da4\nMOV ESI,0x411eea\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x00402300\nTEST EAX,EAX\nJZ 0x00402da4\nXOR EDI,EDI\nMOV ESI,0x411eee\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x411a1e\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00402840\nXOR EDI,EDI\nMOV ESI,0x411f33\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,RAX\nMOV R14D,0x411a1e\nMOV EDI,0x1\nMOV EDX,0x411ec3\nMOV ECX,0x411a1e\nXOR EAX,EAX\nCALL 0x00402840\nXOR EDI,EDI\nMOV ESI,0x411f52\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x411e69\nMOV ECX,0x413a61\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402840\n'
p578
S'41 56\n53\n50\nbb 80 0e 41 00\nbe 4d 1e 41 00\n66 90\nbf 1e 1a 41 00\ne8 46 f9 ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb 1e 1a 41 00\n48 0f 45 d8\n31 ff\nbe ac 1e 41 00\nba 05 00 00 00\ne8 e4 f6 ff ff\n48 89 c6\nbf 01 00 00 00\nba 1a 1b 41 00\nb9 c3 1e 41 00\n31 c0\ne8 eb fa ff ff\nbf 05 00 00 00\n31 f6\ne8 cf fa ff ff\n48 85 c0\n74 3e\nbe ea 1e 41 00\nba 03 00 00 00\n48 89 c7\ne8 88 f5 ff ff\n85 c0\n74 28\n31 ff\nbe ee 1e 41 00\nba 05 00 00 00\ne8 93 f6 ff ff\n48 89 c1\nbf 01 00 00 00\nba 1e 1a 41 00\n31 c0\n48 89 ce\ne8 9c fa ff ff\n31 ff\nbe 33 1f 41 00\nba 05 00 00 00\ne8 6b f6 ff ff\n48 89 c6\n41 be 1e 1a 41 00\nbf 01 00 00 00\nba c3 1e 41 00\nb9 1e 1a 41 00\n31 c0\ne8 6c fa ff ff\n31 ff\nbe 52 1f 41 00\nba 05 00 00 00\ne8 3b f6 ff ff\n48 89 c2\n4c 39 f3\nb8 69 1e 41 00\nb9 61 3a 41 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 2e fa ff ff\n'
p579
S'.text:0000000000402cf0\n.text:0000000000402cf2\n.text:0000000000402cf3\n.text:0000000000402cf4\n.text:0000000000402cf9\n.text:0000000000402cfe\n.text:0000000000402d00\n.text:0000000000402d05\n.text:0000000000402d0a\n.text:0000000000402d0c\n.text:0000000000402d0e\n.text:0000000000402d12\n.text:0000000000402d16\n.text:0000000000402d19\n.text:0000000000402d1b\n.text:0000000000402d1f\n.text:0000000000402d22\n.text:0000000000402d27\n.text:0000000000402d2b\n.text:0000000000402d2d\n.text:0000000000402d32\n.text:0000000000402d37\n.text:0000000000402d3c\n.text:0000000000402d3f\n.text:0000000000402d44\n.text:0000000000402d49\n.text:0000000000402d4e\n.text:0000000000402d50\n.text:0000000000402d55\n.text:0000000000402d5a\n.text:0000000000402d5c\n.text:0000000000402d61\n.text:0000000000402d64\n.text:0000000000402d66\n.text:0000000000402d6b\n.text:0000000000402d70\n.text:0000000000402d73\n.text:0000000000402d78\n.text:0000000000402d7a\n.text:0000000000402d7c\n.text:0000000000402d7e\n.text:0000000000402d83\n.text:0000000000402d88\n.text:0000000000402d8d\n.text:0000000000402d90\n.text:0000000000402d95\n.text:0000000000402d9a\n.text:0000000000402d9c\n.text:0000000000402d9f\n.text:0000000000402da4\n.text:0000000000402da6\n.text:0000000000402dab\n.text:0000000000402db0\n.text:0000000000402db5\n.text:0000000000402db8\n.text:0000000000402dbe\n.text:0000000000402dc3\n.text:0000000000402dc8\n.text:0000000000402dcd\n.text:0000000000402dcf\n.text:0000000000402dd4\n.text:0000000000402dd6\n.text:0000000000402ddb\n.text:0000000000402de0\n.text:0000000000402de5\n.text:0000000000402de8\n.text:0000000000402deb\n.text:0000000000402df0\n.text:0000000000402df5\n.text:0000000000402df9\n.text:0000000000402dfe\n.text:0000000000402e00\n.text:0000000000402e03\n.text:0000000000402e06\n.text:0000000000402e0a\n.text:0000000000402e0b\n.text:0000000000402e0d\n'
p580
tp581
sS'save_cwd'
p582
(S'\n__stdcall save_cwd(saved_cwd * cwd)\n'
p583
V\u000aint save_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  int iVar3;\u000a  \u000a  cwd->name = (char *)0x0;\u000a  iVar3 = 0;\u000a  iVar1 = open_safer(".");\u000a  cwd->desc = iVar1;\u000a  if (iVar1 < 0) {\u000a    pcVar2 = getcwd((char *)0x0,0);\u000a    cwd->name = pcVar2;\u000a    iVar3 = -(uint)(pcVar2 == (char *)0x0);\u000a  }\u000a  else {\u000a    set_cloexec_flag();\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p584
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV qword ptr [RBX + 0x8],0x0\nXOR EBP,EBP\nMOV EDI,0x4125eb\nXOR ESI,ESI\nXOR EAX,EAX\nCALL 0x004093b0\nMOV dword ptr [RBX],EAX\nTEST EAX,EAX\nJS 0x00410172\nMOV ESI,0x1\nMOV EDI,EAX\nCALL 0x00410670\nJMP 0x00410185\nXOR EDI,EDI\nXOR ESI,ESI\nCALL 0x00402570\nMOV qword ptr [RBX + 0x8],RAX\nCMP RAX,0x1\nSBB EBP,EBP\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p585
S'55\n53\n50\n48 89 fb\n48 c7 43 08 00 00 00 00\n31 ed\nbf eb 25 41 00\n31 f6\n31 c0\ne8 52 92 ff ff\n89 03\n85 c0\n78 0e\nbe 01 00 00 00\n89 c7\ne8 00 05 00 00\neb 13\n31 ff\n31 f6\ne8 f5 23 ff ff\n48 89 43 08\n48 83 f8 01\n19 ed\n89 e8\n48 83 c4 08\n5b\n5d\nc3\n'
p586
S'.text:0000000000410140\n.text:0000000000410141\n.text:0000000000410142\n.text:0000000000410143\n.text:0000000000410146\n.text:000000000041014e\n.text:0000000000410150\n.text:0000000000410155\n.text:0000000000410157\n.text:0000000000410159\n.text:000000000041015e\n.text:0000000000410160\n.text:0000000000410162\n.text:0000000000410164\n.text:0000000000410169\n.text:000000000041016b\n.text:0000000000410170\n.text:0000000000410172\n.text:0000000000410174\n.text:0000000000410176\n.text:000000000041017b\n.text:000000000041017f\n.text:0000000000410183\n.text:0000000000410185\n.text:0000000000410187\n.text:000000000041018b\n.text:000000000041018c\n.text:000000000041018d\n'
p587
tp588
sS'xzalloc'
p589
(S'\n__stdcall xzalloc(size_t s)\n'
p590
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p591
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x0040e9b0\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00402530\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p592
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 74 3a ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p593
S'.text:000000000040eaa0\n.text:000000000040eaa2\n.text:000000000040eaa3\n.text:000000000040eaa4\n.text:000000000040eaa7\n.text:000000000040eaac\n.text:000000000040eaaf\n.text:000000000040eab1\n.text:000000000040eab4\n.text:000000000040eab7\n.text:000000000040eabc\n.text:000000000040eabf\n.text:000000000040eac3\n.text:000000000040eac4\n.text:000000000040eac6\n'
p594
tp595
sS'chdir_long'
p596
(S'\n__stdcall chdir_long(char * dir)\n'
p597
V\u000aint chdir_long(char *dir)\u000a\u000a{\u000a  char cVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  undefined *puVar5;\u000a  char *pcVar6;\u000a  cd_buf local_30 [2];\u000a  \u000a  iVar2 = chdir(dir);\u000a  if (iVar2 == 0) {\u000a    return 0;\u000a  }\u000a  piVar3 = __errno_location();\u000a  if (*piVar3 != 0x24) {\u000a    return iVar2;\u000a  }\u000a  sVar4 = strlen(dir);\u000a  cdb_init(local_30);\u000a  if (sVar4 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0 < len","lib/chdir-long.c",0x7e,"int chdir_long(char *)");\u000a  }\u000a  if (sVar4 < 0x1000) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("4096 <= len","lib/chdir-long.c",0x7f,"int chdir_long(char *)");\u000a  }\u000a  pcVar6 = dir + sVar4;\u000a  sVar4 = strspn(dir,"/");\u000a  if (sVar4 == 0) {\u000aLAB_004102bf:\u000a    cVar1 = *dir;\u000a  }\u000a  else {\u000a    if (sVar4 != 2) {\u000a      iVar2 = cdb_advance_fd(local_30,"/");\u000a      if (iVar2 != 0) goto LAB_00410373;\u000a      dir = dir + sVar4;\u000a      goto LAB_004102bf;\u000a    }\u000a    puVar5 = (undefined *)memchr(dir + 3,0x2f,(size_t)(pcVar6 + -(long)(dir + 3)));\u000a    if (puVar5 == (undefined *)0x0) {\u000aLAB_00410385:\u000a      *piVar3 = 0x24;\u000a      return -1;\u000a    }\u000a    *puVar5 = 0;\u000a    iVar2 = cdb_advance_fd(local_30,dir);\u000a    *puVar5 = 0x2f;\u000a    if (iVar2 != 0) goto LAB_00410373;\u000a    dir = find_non_slash(puVar5 + 1);\u000a    cVar1 = *dir;\u000a  }\u000a  if (cVar1 == '/') {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("*dir != \u005c'/\u005c'","lib/chdir-long.c",0xa2,"int chdir_long(char *)");\u000a  }\u000a  if (pcVar6 < dir) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("dir <= dir_end","lib/chdir-long.c",0xa3,"int chdir_long(char *)");\u000a  }\u000a  if (0xfff < (long)(pcVar6 + -(long)dir)) {\u000a    do {\u000a      puVar5 = (undefined *)memrchr(dir,0x2f,0x1000);\u000a      if (puVar5 == (undefined *)0x0) goto LAB_00410385;\u000a      *puVar5 = 0;\u000a      if (0xfff < (long)(puVar5 + -(long)dir)) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("slash - dir < 4096","lib/chdir-long.c",0xb3,"int chdir_long(char *)");\u000a      }\u000a      iVar2 = cdb_advance_fd(local_30,dir);\u000a      *puVar5 = 0x2f;\u000a      if (iVar2 != 0) goto LAB_00410373;\u000a      dir = find_non_slash(puVar5 + 1);\u000a    } while (0xfff < (long)(pcVar6 + -(long)dir));\u000a  }\u000a  if (((pcVar6 <= dir) || (iVar2 = cdb_advance_fd(local_30,dir), iVar2 == 0)) &&\u000a     (iVar2 = cdb_fchdir(local_30), iVar2 == 0)) {\u000a    cdb_free(local_30);\u000a    return 0;\u000a  }\u000aLAB_00410373:\u000a  iVar2 = *piVar3;\u000a  cdb_free(local_30);\u000a  *piVar3 = iVar2;\u000a  return -1;\u000a}\u000a\u000a
p598
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nCALL 0x00402470\nMOV EBP,EAX\nTEST EBP,EBP\nJZ 0x0041029e\nCALL 0x004022e0\nMOV R14,RAX\nCMP dword ptr [R14],0x24\nJNZ 0x00410391\nMOV RDI,RBX\nCALL 0x00402440\nMOV R15,RAX\nLEA RDI,[RSP + 0x8]\nCALL 0x00410430\nTEST R15,R15\nJZ 0x004103c7\nCMP R15,0xfff\nJBE 0x004103e0\nADD R15,RBX\nMOV ESI,0x4144af\nMOV RDI,RBX\nCALL 0x004025a0\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004102bf\nCMP RBP,0x2\nJNZ 0x004102a5\nLEA RDI,[RBX + 0x3]\nMOV RDX,R15\nSUB RDX,RDI\nMOV ESI,0x2f\nCALL 0x004025d0\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00410385\nMOV byte ptr [RBP],0x0\nLEA RDI,[RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00410440\nMOV byte ptr [RBP],0x2f\nTEST EAX,EAX\nJNZ 0x00410373\nINC RBP\nMOV RDI,RBP\nCALL 0x00410480\nMOV RBX,RAX\nCMP byte ptr [RBX],0x2f\nJNZ 0x004102c8\nJMP 0x004103f9\nXOR EBP,EBP\nJMP 0x00410391\nLEA RDI,[RSP + 0x8]\nMOV ESI,0x4144af\nCALL 0x00410440\nTEST EAX,EAX\nJNZ 0x00410373\nADD RBX,RBP\nCMP byte ptr [RBX],0x2f\nJZ 0x004103f9\nCMP RBX,R15\nJA 0x00410412\nMOV RAX,R15\nSUB RAX,RBX\nCMP RAX,0x1000\nJL 0x0041034f\nLEA R12,[RSP + 0x8]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV ESI,0x2f\nMOV EDX,0x1000\nMOV RDI,RBX\nCALL 0x00402880\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00410385\nMOV byte ptr [RBP],0x0\nMOV RAX,RBP\nSUB RAX,RBX\nCMP RAX,0x1000\nJGE 0x004103ae\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x00410440\nMOV byte ptr [RBP],0x2f\nTEST EAX,EAX\nJNZ 0x00410373\nINC RBP\nMOV RDI,RBP\nCALL 0x00410480\nMOV RBX,RAX\nMOV RAX,R15\nSUB RAX,RBX\nCMP RAX,0xfff\nJG 0x004102f0\nCMP RBX,R15\nJNC 0x00410365\nLEA RDI,[RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00410440\nTEST EAX,EAX\nJNZ 0x00410373\nLEA RDI,[RSP + 0x8]\nCALL 0x004104a0\nTEST EAX,EAX\nJZ 0x004103a0\nMOV EBX,dword ptr [R14]\nLEA RDI,[RSP + 0x8]\nCALL 0x004104b0\nMOV dword ptr [R14],EBX\nJMP 0x0041038c\nMOV dword ptr [R14],0x24\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nLEA RDI,[RSP + 0x8]\nCALL 0x004104b0\nXOR EBP,EBP\nJMP 0x00410391\nMOV EDI,0x414435\nMOV ESI,0x4143e6\nMOV EDX,0xb3\nMOV ECX,0x4143f7\nCALL 0x00402520\nMOV EDI,0x4143de\nMOV ESI,0x4143e6\nMOV EDX,0x7e\nMOV ECX,0x4143f7\nCALL 0x00402520\nMOV EDI,0x41440e\nMOV ESI,0x4143e6\nMOV EDX,0x7f\nMOV ECX,0x4143f7\nCALL 0x00402520\nMOV EDI,0x41441a\nMOV ESI,0x4143e6\nMOV EDX,0xa2\nMOV ECX,0x4143f7\nCALL 0x00402520\nMOV EDI,0x414426\nMOV ESI,0x4143e6\nMOV EDX,0xa3\nMOV ECX,0x4143f7\nCALL 0x00402520\n'
p599
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 fb\ne8 8c 22 ff ff\n89 c5\n85 ed\n0f 84 b0 00 00 00\ne8 ed 20 ff ff\n49 89 c6\n41 83 3e 24\n0f 85 91 01 00 00\n48 89 df\ne8 38 22 ff ff\n49 89 c7\n48 8d 7c 24 08\ne8 1b 02 00 00\n4d 85 ff\n0f 84 a9 01 00 00\n49 81 ff ff 0f 00 00\n0f 86 b5 01 00 00\n49 01 df\nbe af 44 41 00\n48 89 df\ne8 65 23 ff ff\n48 89 c5\n48 85 ed\n74 7c\n48 83 fd 02\n75 5c\n48 8d 7b 03\n4c 89 fa\n48 29 fa\nbe 2f 00 00 00\ne8 73 23 ff ff\n48 89 c5\n48 85 ed\n0f 84 1c 01 00 00\nc6 45 00 00\n48 8d 7c 24 08\n48 89 de\ne8 c6 01 00 00\nc6 45 00 2f\n85 c0\n0f 85 ed 00 00 00\n48 ff c5\n48 89 ef\ne8 ef 01 00 00\n48 89 c3\n80 3b 2f\n75 2f\ne9 5b 01 00 00\n31 ed\ne9 ec 00 00 00\n48 8d 7c 24 08\nbe af 44 41 00\ne8 8c 01 00 00\n85 c0\n0f 85 b7 00 00 00\n48 01 eb\n80 3b 2f\n0f 84 31 01 00 00\n4c 39 fb\n0f 87 41 01 00 00\n4c 89 f8\n48 29 d8\n48 3d 00 10 00 00\n7c 70\n4c 8d 64 24 08\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbe 2f 00 00 00\nba 00 10 00 00\n48 89 df\ne8 7e 25 ff ff\n48 89 c5\n48 85 ed\n74 7b\nc6 45 00 00\n48 89 e8\n48 29 d8\n48 3d 00 10 00 00\n0f 8d 8e 00 00 00\n4c 89 e7\n48 89 de\ne8 15 01 00 00\nc6 45 00 2f\n85 c0\n75 40\n48 ff c5\n48 89 ef\ne8 42 01 00 00\n48 89 c3\n4c 89 f8\n48 29 d8\n48 3d ff 0f 00 00\n7f a1\n4c 39 fb\n73 11\n48 8d 7c 24 08\n48 89 de\ne8 df 00 00 00\n85 c0\n75 0e\n48 8d 7c 24 08\ne8 31 01 00 00\n85 c0\n74 2d\n41 8b 1e\n48 8d 7c 24 08\ne8 30 01 00 00\n41 89 1e\neb 07\n41 c7 06 24 00 00 00\nbd ff ff ff ff\n89 e8\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n48 8d 7c 24 08\ne8 06 01 00 00\n31 ed\neb e3\nbf 35 44 41 00\nbe e6 43 41 00\nba b3 00 00 00\nb9 f7 43 41 00\ne8 59 21 ff ff\nbf de 43 41 00\nbe e6 43 41 00\nba 7e 00 00 00\nb9 f7 43 41 00\ne8 40 21 ff ff\nbf 0e 44 41 00\nbe e6 43 41 00\nba 7f 00 00 00\nb9 f7 43 41 00\ne8 27 21 ff ff\nbf 1a 44 41 00\nbe e6 43 41 00\nba a2 00 00 00\nb9 f7 43 41 00\ne8 0e 21 ff ff\nbf 26 44 41 00\nbe e6 43 41 00\nba a3 00 00 00\nb9 f7 43 41 00\ne8 f5 20 ff ff\n'
p600
S'.text:00000000004101d0\n.text:00000000004101d1\n.text:00000000004101d3\n.text:00000000004101d5\n.text:00000000004101d7\n.text:00000000004101d8\n.text:00000000004101dc\n.text:00000000004101df\n.text:00000000004101e4\n.text:00000000004101e6\n.text:00000000004101e8\n.text:00000000004101ee\n.text:00000000004101f3\n.text:00000000004101f6\n.text:00000000004101fa\n.text:0000000000410200\n.text:0000000000410203\n.text:0000000000410208\n.text:000000000041020b\n.text:0000000000410210\n.text:0000000000410215\n.text:0000000000410218\n.text:000000000041021e\n.text:0000000000410225\n.text:000000000041022b\n.text:000000000041022e\n.text:0000000000410233\n.text:0000000000410236\n.text:000000000041023b\n.text:000000000041023e\n.text:0000000000410241\n.text:0000000000410243\n.text:0000000000410247\n.text:0000000000410249\n.text:000000000041024d\n.text:0000000000410250\n.text:0000000000410253\n.text:0000000000410258\n.text:000000000041025d\n.text:0000000000410260\n.text:0000000000410263\n.text:0000000000410269\n.text:000000000041026d\n.text:0000000000410272\n.text:0000000000410275\n.text:000000000041027a\n.text:000000000041027e\n.text:0000000000410280\n.text:0000000000410286\n.text:0000000000410289\n.text:000000000041028c\n.text:0000000000410291\n.text:0000000000410294\n.text:0000000000410297\n.text:0000000000410299\n.text:000000000041029e\n.text:00000000004102a0\n.text:00000000004102a5\n.text:00000000004102aa\n.text:00000000004102af\n.text:00000000004102b4\n.text:00000000004102b6\n.text:00000000004102bc\n.text:00000000004102bf\n.text:00000000004102c2\n.text:00000000004102c8\n.text:00000000004102cb\n.text:00000000004102d1\n.text:00000000004102d4\n.text:00000000004102d7\n.text:00000000004102dd\n.text:00000000004102df\n.text:00000000004102e4\n.text:00000000004102f0\n.text:00000000004102f5\n.text:00000000004102fa\n.text:00000000004102fd\n.text:0000000000410302\n.text:0000000000410305\n.text:0000000000410308\n.text:000000000041030a\n.text:000000000041030e\n.text:0000000000410311\n.text:0000000000410314\n.text:000000000041031a\n.text:0000000000410320\n.text:0000000000410323\n.text:0000000000410326\n.text:000000000041032b\n.text:000000000041032f\n.text:0000000000410331\n.text:0000000000410333\n.text:0000000000410336\n.text:0000000000410339\n.text:000000000041033e\n.text:0000000000410341\n.text:0000000000410344\n.text:0000000000410347\n.text:000000000041034d\n.text:000000000041034f\n.text:0000000000410352\n.text:0000000000410354\n.text:0000000000410359\n.text:000000000041035c\n.text:0000000000410361\n.text:0000000000410363\n.text:0000000000410365\n.text:000000000041036a\n.text:000000000041036f\n.text:0000000000410371\n.text:0000000000410373\n.text:0000000000410376\n.text:000000000041037b\n.text:0000000000410380\n.text:0000000000410383\n.text:0000000000410385\n.text:000000000041038c\n.text:0000000000410391\n.text:0000000000410393\n.text:0000000000410397\n.text:0000000000410398\n.text:000000000041039a\n.text:000000000041039c\n.text:000000000041039e\n.text:000000000041039f\n.text:00000000004103a0\n.text:00000000004103a5\n.text:00000000004103aa\n.text:00000000004103ac\n.text:00000000004103ae\n.text:00000000004103b3\n.text:00000000004103b8\n.text:00000000004103bd\n.text:00000000004103c2\n.text:00000000004103c7\n.text:00000000004103cc\n.text:00000000004103d1\n.text:00000000004103d6\n.text:00000000004103db\n.text:00000000004103e0\n.text:00000000004103e5\n.text:00000000004103ea\n.text:00000000004103ef\n.text:00000000004103f4\n.text:00000000004103f9\n.text:00000000004103fe\n.text:0000000000410403\n.text:0000000000410408\n.text:000000000041040d\n.text:0000000000410412\n.text:0000000000410417\n.text:000000000041041c\n.text:0000000000410421\n.text:0000000000410426\n'
p601
tp602
sS'extra_mode'
p603
(S'\n__stdcall extra_mode()\n'
p604
V\u000a_Bool extra_mode(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)((in_EDI & 0xffff0e00) != 0);\u000a}\u000a\u000a
p605
S'TEST EDI,0xffff0e00\nSETNZ AL\nRET\n'
p606
S'f7 c7 00 0e ff ff\n0f 95 c0\nc3\n'
p607
S'.text:0000000000403800\n.text:0000000000403806\n.text:0000000000403809\n'
p608
tp609
sS'quotearg_n_style'
p610
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p611
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x0040c420\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x0040c1f0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p613
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p614
S'.text:000000000040c3e0\n.text:000000000040c3e1\n.text:000000000040c3e3\n.text:000000000040c3e4\n.text:000000000040c3e8\n.text:000000000040c3eb\n.text:000000000040c3ed\n.text:000000000040c3f2\n.text:000000000040c3f5\n.text:000000000040c3fa\n.text:000000000040c401\n.text:000000000040c403\n.text:000000000040c406\n.text:000000000040c409\n.text:000000000040c40e\n.text:000000000040c412\n.text:000000000040c413\n.text:000000000040c415\n.text:000000000040c416\n'
p615
tp616
sS'hash_clear'
p617
(S'\n__stdcall hash_clear(Hash_table * table)\n'
p618
V\u000avoid hash_clear(Hash_table *table)\u000a\u000a{\u000a  void (*pVar1)(void *);\u000a  hash_entry *phVar2;\u000a  hash_entry *phVar3;\u000a  hash_entry *phVar4;\u000a  \u000a  phVar4 = table->bucket;\u000a  if (phVar4 < table->bucket_limit) {\u000a    do {\u000a      if (phVar4->data != (void *)0x0) {\u000a        pVar1 = table->data_freer;\u000a        phVar3 = phVar4->next;\u000a        while (phVar3 != (hash_entry *)0x0) {\u000a          if (pVar1 != (void (*)(void *))0x0) {\u000a            (*pVar1)(phVar3->data);\u000a          }\u000a          phVar3->data = (void *)0x0;\u000a          phVar2 = phVar3->next;\u000a          phVar3->next = table->free_entry_list;\u000a          table->free_entry_list = phVar3;\u000a          pVar1 = table->data_freer;\u000a          phVar3 = phVar2;\u000a        }\u000a        if (pVar1 != (void (*)(void *))0x0) {\u000a          (*pVar1)(phVar4->data);\u000a        }\u000a        *(undefined4 *)&phVar4->data = 0;\u000a        *(undefined4 *)((long)&phVar4->data + 4) = 0;\u000a        *(undefined4 *)&phVar4->next = 0;\u000a        *(undefined4 *)((long)&phVar4->next + 4) = 0;\u000a      }\u000a      phVar4 = phVar4 + 1;\u000a    } while (phVar4 < table->bucket_limit);\u000a  }\u000a  *(undefined4 *)&table->n_buckets_used = 0;\u000a  *(undefined4 *)((long)&table->n_buckets_used + 4) = 0;\u000a  *(undefined4 *)&table->n_entries = 0;\u000a  *(undefined4 *)((long)&table->n_entries + 4) = 0;\u000a  return;\u000a}\u000a\u000a
p619
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RDI\nMOV R14,qword ptr [R15]\nCMP R14,qword ptr [R15 + 0x8]\nJC 0x00409eca\nJMP 0x00409f25\nTEST CL,CL\nJZ 0x00409eb9\nMOV RDI,qword ptr [R14]\nCALL RAX\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [R14],XMM0\nADD R14,0x10\nCMP R14,qword ptr [R15 + 0x8]\nJNC 0x00409f25\nCMP qword ptr [R14],0x0\nJZ 0x00409ec0\nMOV RBX,qword ptr [R14 + 0x8]\nMOV RAX,qword ptr [R15 + 0x40]\nTEST RAX,RAX\nSETNZ CL\nTEST RBX,RBX\nJZ 0x00409eb0\nNOP dword ptr CS:[RAX + RAX*0x1]\nTEST CL,0x1\nJZ 0x00409efa\nMOV RDI,qword ptr [RBX]\nCALL RAX\nMOV qword ptr [RBX],0x0\nMOV RDX,qword ptr [RBX + 0x8]\nMOV RAX,qword ptr [R15 + 0x48]\nMOV qword ptr [RBX + 0x8],RAX\nMOV qword ptr [R15 + 0x48],RBX\nMOV RAX,qword ptr [R15 + 0x40]\nTEST RAX,RAX\nSETNZ CL\nTEST RDX,RDX\nMOV RBX,RDX\nJNZ 0x00409ef0\nJMP 0x00409eb0\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [R15 + 0x18],XMM0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p620
S'41 57\n41 56\n53\n49 89 ff\n4d 8b 37\n4d 3b 77 08\n72 29\ne9 7f 00 00 00\n84 c9\n74 05\n49 8b 3e\nff d0\n0f 57 c0\n41 0f 11 06\n49 83 c6 10\n4d 3b 77 08\n73 5b\n49 83 3e 00\n74 f0\n49 8b 5e 08\n49 8b 47 40\n48 85 c0\n0f 95 c1\n48 85 db\n74 cd\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nf6 c1 01\n74 05\n48 8b 3b\nff d0\n48 c7 03 00 00 00 00\n48 8b 53 08\n49 8b 47 48\n48 89 43 08\n49 89 5f 48\n49 8b 47 40\n48 85 c0\n0f 95 c1\n48 85 d2\n48 89 d3\n75 cd\neb 8b\n0f 57 c0\n41 0f 11 47 18\n5b\n41 5e\n41 5f\nc3\n'
p621
S'.text:0000000000409e90\n.text:0000000000409e92\n.text:0000000000409e94\n.text:0000000000409e95\n.text:0000000000409e98\n.text:0000000000409e9b\n.text:0000000000409e9f\n.text:0000000000409ea1\n.text:0000000000409eb0\n.text:0000000000409eb2\n.text:0000000000409eb4\n.text:0000000000409eb7\n.text:0000000000409eb9\n.text:0000000000409ebc\n.text:0000000000409ec0\n.text:0000000000409ec4\n.text:0000000000409ec8\n.text:0000000000409eca\n.text:0000000000409ece\n.text:0000000000409ed0\n.text:0000000000409ed4\n.text:0000000000409ed8\n.text:0000000000409edb\n.text:0000000000409ede\n.text:0000000000409ee1\n.text:0000000000409ee3\n.text:0000000000409ef0\n.text:0000000000409ef3\n.text:0000000000409ef5\n.text:0000000000409ef8\n.text:0000000000409efa\n.text:0000000000409f01\n.text:0000000000409f05\n.text:0000000000409f09\n.text:0000000000409f0d\n.text:0000000000409f11\n.text:0000000000409f15\n.text:0000000000409f18\n.text:0000000000409f1b\n.text:0000000000409f1e\n.text:0000000000409f21\n.text:0000000000409f23\n.text:0000000000409f25\n.text:0000000000409f28\n.text:0000000000409f2d\n.text:0000000000409f2e\n.text:0000000000409f30\n.text:0000000000409f32\n'
p622
tp623
sS'setfilecon'
p624
(S'\n__stdcall setfilecon(char * file, security_context_t con)\n'
p625
V\u000aint setfilecon(char *file,security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p626
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p627
S'50\ne8 fa 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p628
S'.text:000000000040d5e0\n.text:000000000040d5e1\n.text:000000000040d5e6\n.text:000000000040d5ec\n.text:000000000040d5f1\n.text:000000000040d5f2\n'
p629
tp630
sS'dir_len'
p631
(S'\n__stdcall dir_len(char * file)\n'
p632
V\u000asize_t dir_len(char *file)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  char *pcVar3;\u000a  char *pcVar4;\u000a  \u000a  cVar2 = *file;\u000a  pcVar3 = last_component(file);\u000a  pcVar3 = pcVar3 + -(long)file;\u000a  do {\u000a    pcVar4 = pcVar3;\u000a    if (pcVar3 <= (char *)(ulong)(cVar2 == '/')) {\u000a      return (size_t)pcVar4;\u000a    }\u000a    pcVar1 = pcVar3 + (long)(file + -1);\u000a    pcVar3 = pcVar3 + -1;\u000a  } while (*pcVar1 == '/');\u000a  return (size_t)pcVar4;\u000a}\u000a\u000a
p633
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nXOR R14D,R14D\nCMP byte ptr [RBX],0x2f\nSETZ R14B\nCALL 0x004092f0\nMOV RCX,RAX\nSUB RCX,RBX\nNOP dword ptr [RAX]\nMOV RAX,RCX\nCMP R14,RAX\nJNC 0x00409283\nLEA RCX,[RAX + -0x1]\nCMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f\nJZ 0x00409270\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p634
S'41 56\n53\n50\n48 89 fb\n45 31 f6\n80 3b 2f\n41 0f 94 c6\ne8 8a 00 00 00\n48 89 c1\n48 29 d9\n0f 1f 40 00\n48 89 c8\n49 39 c6\n73 0b\n48 8d 48 ff\n80 7c 03 ff 2f\n74 ed\n48 83 c4 08\n5b\n41 5e\nc3\n'
p635
S'.text:0000000000409250\n.text:0000000000409252\n.text:0000000000409253\n.text:0000000000409254\n.text:0000000000409257\n.text:000000000040925a\n.text:000000000040925d\n.text:0000000000409261\n.text:0000000000409266\n.text:0000000000409269\n.text:000000000040926c\n.text:0000000000409270\n.text:0000000000409273\n.text:0000000000409276\n.text:0000000000409278\n.text:000000000040927c\n.text:0000000000409281\n.text:0000000000409283\n.text:0000000000409287\n.text:0000000000409288\n.text:000000000040928a\n'
p636
tp637
sS'find_backup_file_name'
p638
(S'\n__stdcall find_backup_file_name(char * file)\n'
p639
V\u000achar * find_backup_file_name(char *file)\u000a\u000a{\u000a  size_t n;\u000a  numbered_backup_result nVar1;\u000a  size_t filelen;\u000a  size_t sVar2;\u000a  ulong uVar3;\u000a  ulong __n;\u000a  int in_ESI;\u000a  char *local_38;\u000a  \u000a  filelen = strlen(file);\u000a  sVar2 = strlen(simple_backup_suffix);\u000a  __n = sVar2 + 1;\u000a  uVar3 = 9;\u000a  if (9 < __n) {\u000a    uVar3 = __n;\u000a  }\u000a  n = filelen + 1 + uVar3;\u000a  local_38 = (char *)xmalloc(n);\u000a  memcpy(local_38,file,filelen + 1);\u000a  if (in_ESI != 1) {\u000a    nVar1 = numbered_backup(&local_38,n,filelen);\u000a    if (nVar1 == BACKUP_IS_SAME_LENGTH) {\u000a      return local_38;\u000a    }\u000a    if ((nVar1 == BACKUP_IS_LONGER) || ((nVar1 == BACKUP_IS_NEW && (in_ESI != 2))))\u000a    goto LAB_00408b89;\u000a  }\u000a  memcpy(local_38 + filelen,simple_backup_suffix,__n);\u000aLAB_00408b89:\u000a  check_extension(local_38,filelen);\u000a  return local_38;\u000a}\u000a\u000a
p640
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,ESI\nMOV R13,RDI\nCALL 0x00402440\nMOV R15,RAX\nMOV RDI,qword ptr [0x00618418]\nCALL 0x00402440\nMOV RBP,RAX\nINC RBP\nCMP RBP,0x9\nMOV EAX,0x9\nCMOVA RAX,RBP\nLEA R12,[R15 + RAX*0x1 + 0x1]\nLEA RBX,[R15 + 0x1]\nMOV RDI,R12\nCALL 0x0040e9b0\nMOV qword ptr [RSP],RAX\nMOV RDI,RAX\nMOV RSI,R13\nMOV RDX,RBX\nCALL 0x004026d0\nCMP R14D,0x1\nJZ 0x00408b73\nMOV RDI,RSP\nMOV RSI,R12\nMOV RDX,R15\nCALL 0x00408bb0\nTEST EAX,EAX\nJZ 0x00408b95\nCMP EAX,0x1\nJZ 0x00408b89\nCMP EAX,0x2\nJNZ 0x00408b73\nCMP R14D,0x2\nJNZ 0x00408b89\nMOV RDI,qword ptr [RSP]\nADD RDI,R15\nMOV RSI,qword ptr [0x00618418]\nMOV RDX,RBP\nCALL 0x004026d0\nMOV RDI,qword ptr [RSP]\nMOV RSI,R15\nCALL 0x00408e70\nMOV RAX,qword ptr [RSP]\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p641
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n41 89 f6\n49 89 fd\ne8 3a 99 ff ff\n49 89 c7\n48 8b 3d 08 f9 20 00\ne8 2b 99 ff ff\n48 89 c5\n48 ff c5\n48 83 fd 09\nb8 09 00 00 00\n48 0f 47 c5\n4d 8d 64 07 01\n49 8d 5f 01\n4c 89 e7\ne8 77 5e 00 00\n48 89 04 24\n48 89 c7\n4c 89 ee\n48 89 da\ne8 85 9b ff ff\n41 83 fe 01\n74 22\n48 89 e7\n4c 89 e6\n4c 89 fa\ne8 51 00 00 00\n85 c0\n74 32\n83 f8 01\n74 21\n83 f8 02\n75 06\n41 83 fe 02\n75 16\n48 8b 3c 24\n4c 01 ff\n48 8b 35 97 f8 20 00\n48 89 ea\ne8 47 9b ff ff\n48 8b 3c 24\n4c 89 fe\ne8 db 02 00 00\n48 8b 04 24\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p642
S'.text:0000000000408af0\n.text:0000000000408af1\n.text:0000000000408af3\n.text:0000000000408af5\n.text:0000000000408af7\n.text:0000000000408af9\n.text:0000000000408afa\n.text:0000000000408afb\n.text:0000000000408afe\n.text:0000000000408b01\n.text:0000000000408b06\n.text:0000000000408b09\n.text:0000000000408b10\n.text:0000000000408b15\n.text:0000000000408b18\n.text:0000000000408b1b\n.text:0000000000408b1f\n.text:0000000000408b24\n.text:0000000000408b28\n.text:0000000000408b2d\n.text:0000000000408b31\n.text:0000000000408b34\n.text:0000000000408b39\n.text:0000000000408b3d\n.text:0000000000408b40\n.text:0000000000408b43\n.text:0000000000408b46\n.text:0000000000408b4b\n.text:0000000000408b4f\n.text:0000000000408b51\n.text:0000000000408b54\n.text:0000000000408b57\n.text:0000000000408b5a\n.text:0000000000408b5f\n.text:0000000000408b61\n.text:0000000000408b63\n.text:0000000000408b66\n.text:0000000000408b68\n.text:0000000000408b6b\n.text:0000000000408b6d\n.text:0000000000408b71\n.text:0000000000408b73\n.text:0000000000408b77\n.text:0000000000408b7a\n.text:0000000000408b81\n.text:0000000000408b84\n.text:0000000000408b89\n.text:0000000000408b8d\n.text:0000000000408b90\n.text:0000000000408b95\n.text:0000000000408b99\n.text:0000000000408b9d\n.text:0000000000408b9e\n.text:0000000000408ba0\n.text:0000000000408ba2\n.text:0000000000408ba4\n.text:0000000000408ba6\n.text:0000000000408ba7\n'
p643
tp644
sS'forget_all'
p645
(S'\n__stdcall forget_all()\n'
p646
V\u000avoid forget_all(void)\u000a\u000a{\u000a  hash_free(src_to_dest);\u000a  return;\u000a}\u000a\u000a
p647
S'MOV RDI,qword ptr [0x0061a930]\nJMP 0x00409f40\n'
p648
S'48 8b 3d c9 22 21 00\ne9 d4 18 00 00\n'
p649
S'.text:0000000000408660\n.text:0000000000408667\n'
p650
tp651
sS'fork'
p652
(S'\n__stdcall fork()\n'
p653
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t fork(void)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_fork_006183c8)();\u000a  return _Var1;\u000a}\u000a\u000a
p654
S'JMP qword ptr [0x006183c8]\n'
p655
S'ff 25 02 5a 21 00\n'
p656
S'.plt:00000000004029c0\n'
p657
tp658
sS'quote_n'
p659
(S'\n__stdcall quote_n(char * arg)\n'
p660
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p661
S'MOV RDX,-0x1\nJMP 0x0040c6b0\n'
p662
S'48 c7 c2 ff ff ff ff\neb d7\n'
p663
S'.text:000000000040c6d0\n.text:000000000040c6d7\n'
p664
tp665
sS'buffer_lcm'
p666
(S'\n__stdcall buffer_lcm(size_t a, size_t b, size_t lcm_max)\n'
p667
V\u000asize_t buffer_lcm(size_t a,size_t b,size_t lcm_max)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  \u000a  if (a == 0) {\u000a    a = 0x2000;\u000a    if (b != 0) {\u000a      a = b;\u000a    }\u000a  }\u000a  else {\u000a    uVar1 = a;\u000a    uVar3 = b;\u000a    if (b != 0) {\u000a      do {\u000a        uVar2 = uVar3;\u000a        uVar3 = uVar1 % uVar2;\u000a        uVar1 = uVar2;\u000a      } while (uVar3 != 0);\u000a      uVar1 = (a / uVar2) * b;\u000a      if ((uVar1 < lcm_max || uVar1 - lcm_max == 0) && (uVar1 / b == a / uVar2)) {\u000a        return uVar1;\u000a      }\u000a    }\u000a  }\u000a  if (a <= lcm_max) {\u000a    lcm_max = a;\u000a  }\u000a  return lcm_max;\u000a}\u000a\u000a
p668
S'MOV R8,RDX\nTEST RDI,RDI\nJZ 0x00408fd6\nTEST RSI,RSI\nJZ 0x00408fe2\nMOV RAX,RDI\nMOV RDX,RSI\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RCX,RDX\nXOR EDX,EDX\nDIV RCX\nTEST RDX,RDX\nMOV RAX,RCX\nJNZ 0x00408fa0\nXOR EDX,EDX\nMOV RAX,RDI\nDIV RCX\nMOV R9,RAX\nMOV RCX,R9\nIMUL RCX,RSI\nCMP RCX,R8\nJA 0x00408fe2\nXOR EDX,EDX\nMOV RAX,RCX\nDIV RSI\nCMP RAX,R9\nJNZ 0x00408fe2\nJMP 0x00408fec\nTEST RSI,RSI\nMOV EDI,0x2000\nCMOVNZ RDI,RSI\nCMP RDI,R8\nCMOVBE R8,RDI\nMOV RCX,R8\nMOV RAX,RCX\nRET\n'
p669
S'49 89 d0\n48 85 ff\n74 4e\n48 85 f6\n74 55\n48 89 f8\n48 89 f2\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 d1\n31 d2\n48 f7 f1\n48 85 d2\n48 89 c8\n75 f0\n31 d2\n48 89 f8\n48 f7 f1\n49 89 c1\n4c 89 c9\n48 0f af ce\n4c 39 c1\n77 1b\n31 d2\n48 89 c8\n48 f7 f6\n4c 39 c8\n75 0e\neb 16\n48 85 f6\nbf 00 20 00 00\n48 0f 45 fe\n4c 39 c7\n4c 0f 46 c7\n4c 89 c1\n48 89 c8\nc3\n'
p670
S'.text:0000000000408f80\n.text:0000000000408f83\n.text:0000000000408f86\n.text:0000000000408f88\n.text:0000000000408f8b\n.text:0000000000408f8d\n.text:0000000000408f90\n.text:0000000000408f93\n.text:0000000000408fa0\n.text:0000000000408fa3\n.text:0000000000408fa5\n.text:0000000000408fa8\n.text:0000000000408fab\n.text:0000000000408fae\n.text:0000000000408fb0\n.text:0000000000408fb2\n.text:0000000000408fb5\n.text:0000000000408fb8\n.text:0000000000408fbb\n.text:0000000000408fbe\n.text:0000000000408fc2\n.text:0000000000408fc5\n.text:0000000000408fc7\n.text:0000000000408fc9\n.text:0000000000408fcc\n.text:0000000000408fcf\n.text:0000000000408fd2\n.text:0000000000408fd4\n.text:0000000000408fd6\n.text:0000000000408fd9\n.text:0000000000408fde\n.text:0000000000408fe2\n.text:0000000000408fe5\n.text:0000000000408fe9\n.text:0000000000408fec\n.text:0000000000408fef\n'
p671
tp672
sS'close_stdout_set_file_name'
p673
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p674
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p675
S'MOV qword ptr [0x0061a940],RDI\nRET\n'
p676
S'48 89 3d 69 18 21 00\nc3\n'
p677
S'.text:00000000004090d0\n.text:00000000004090d7\n'
p678
tp679
sS'getgrnam'
p680
(S'\n__stdcall getgrnam(char * __name)\n'
p681
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000agroup * getgrnam(char *__name)\u000a\u000a{\u000a  group *pgVar1;\u000a  \u000a  pgVar1 = (group *)(*(code *)PTR_getgrnam_00618258)();\u000a  return pgVar1;\u000a}\u000a\u000a
p682
S'JMP qword ptr [0x00618258]\n'
p683
S'ff 25 72 5b 21 00\n'
p684
S'.plt:00000000004026e0\n'
p685
tp686
sS'__libc_csu_init'
p687
(S'\n__stdcall __libc_csu_init()\n'
p688
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p689
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x617e08]\nPUSH RBP\nLEA RBP,[0x617e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00402230\nTEST RBP,RBP\nJZ 0x00410736\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00410720\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p690
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 16 77 20 00\n55\n48 8d 2d 16 77 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 1f 1b ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p691
S'.text:00000000004106e0\n.text:00000000004106e2\n.text:00000000004106e4\n.text:00000000004106e7\n.text:00000000004106e9\n.text:00000000004106eb\n.text:00000000004106f2\n.text:00000000004106f3\n.text:00000000004106fa\n.text:00000000004106fb\n.text:00000000004106fe\n.text:0000000000410701\n.text:0000000000410704\n.text:0000000000410708\n.text:000000000041070c\n.text:0000000000410711\n.text:0000000000410714\n.text:0000000000410716\n.text:0000000000410718\n.text:0000000000410720\n.text:0000000000410723\n.text:0000000000410726\n.text:0000000000410729\n.text:000000000041072d\n.text:0000000000410731\n.text:0000000000410734\n.text:0000000000410736\n.text:000000000041073a\n.text:000000000041073b\n.text:000000000041073c\n.text:000000000041073e\n.text:0000000000410740\n.text:0000000000410742\n.text:0000000000410744\n'
p692
tp693
sS'c_isdigit'
p694
(S'\n__stdcall c_isdigit()\n'
p695
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p696
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p697
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p698
S'.text:000000000040fa50\n.text:000000000040fa53\n.text:000000000040fa56\n.text:000000000040fa59\n'
p699
tp700
sS'make_ancestor'
p701
(S'\n__stdcall make_ancestor(char * dir, char * component, void * options)\n'
p702
V\u000aint make_ancestor(char *dir,char *component,void *options)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = mkdir(component,0x1ed);\u000a  if (iVar1 == 0) {\u000a    announce_mkdir(dir,options);\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p703
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RAX,RSI\nMOV RBX,RDI\nMOV ESI,0x1ed\nMOV RDI,RAX\nCALL 0x00402340\nMOV EBP,EAX\nTEST EBP,EBP\nJNZ 0x00403bab\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00403bc0\nMOV EAX,EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p704
S'55\n41 56\n53\n49 89 d6\n48 89 f0\n48 89 fb\nbe ed 01 00 00\n48 89 c7\ne8 a6 e7 ff ff\n89 c5\n85 ed\n75 0b\n48 89 df\n4c 89 f6\ne8 15 00 00 00\n89 e8\n5b\n41 5e\n5d\nc3\n'
p705
S'.text:0000000000403b80\n.text:0000000000403b81\n.text:0000000000403b83\n.text:0000000000403b84\n.text:0000000000403b87\n.text:0000000000403b8a\n.text:0000000000403b8d\n.text:0000000000403b92\n.text:0000000000403b95\n.text:0000000000403b9a\n.text:0000000000403b9c\n.text:0000000000403b9e\n.text:0000000000403ba0\n.text:0000000000403ba3\n.text:0000000000403ba6\n.text:0000000000403bab\n.text:0000000000403bad\n.text:0000000000403bae\n.text:0000000000403bb0\n.text:0000000000403bb1\n'
p706
tp707
sS'string_to_security_class'
p708
(S'\n__stdcall string_to_security_class(char * name)\n'
p709
V\u000asecurity_class_t string_to_security_class(char *name)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return 0;\u000a}\u000a\u000a
p710
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nXOR EAX,EAX\nPOP RCX\nRET\n'
p711
S'50\ne8 1a 4c ff ff\nc7 00 5f 00 00 00\n31 c0\n59\nc3\n'
p712
S'.text:000000000040d6c0\n.text:000000000040d6c1\n.text:000000000040d6c6\n.text:000000000040d6cc\n.text:000000000040d6ce\n.text:000000000040d6cf\n'
p713
tp714
sS'matchpathcon_init_prefix'
p715
(S'\n__stdcall matchpathcon_init_prefix(char * path, char * prefix)\n'
p716
V\u000aint matchpathcon_init_prefix(char *path,char *prefix)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p717
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p718
S'50\ne8 0a 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p719
S'.text:000000000040d6d0\n.text:000000000040d6d1\n.text:000000000040d6d6\n.text:000000000040d6dc\n.text:000000000040d6e1\n.text:000000000040d6e2\n'
p720
tp721
sS'triple_compare_ino_str'
p722
(S'\n__stdcall triple_compare_ino_str(void * x, void * y)\n'
p723
V\u000a_Bool triple_compare_ino_str(void *x,void *y)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (*(long *)((long)x + 8) != *(long *)((long)y + 8)) {\u000a    return false;\u000a  }\u000a  if (*(long *)((long)x + 0x10) == *(long *)((long)y + 0x10)) {\u000a    iVar1 = strcmp(*(char **)x,*(char **)y);\u000a    return (_Bool)(iVar1 == 0);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p724
S'MOV RAX,qword ptr [RDI + 0x8]\nCMP RAX,qword ptr [RSI + 0x8]\nJNZ 0x0040a88a\nMOV RAX,qword ptr [RDI + 0x10]\nCMP RAX,qword ptr [RSI + 0x10]\nJNZ 0x0040a88d\nPUSH RAX\nMOV RDI,qword ptr [RDI]\nMOV RSI,qword ptr [RSI]\nCALL 0x00402650\nTEST EAX,EAX\nSETZ AL\nADD RSP,0x8\nRET\nXOR EAX,EAX\nRET\nXOR EAX,EAX\nRET\n'
p725
S'48 8b 47 08\n48 3b 46 08\n75 20\n48 8b 47 10\n48 3b 46 10\n75 19\n50\n48 8b 3f\n48 8b 36\ne8 d0 7d ff ff\n85 c0\n0f 94 c0\n48 83 c4 08\nc3\n31 c0\nc3\n31 c0\nc3\n'
p726
S'.text:000000000040a860\n.text:000000000040a864\n.text:000000000040a868\n.text:000000000040a86a\n.text:000000000040a86e\n.text:000000000040a872\n.text:000000000040a874\n.text:000000000040a875\n.text:000000000040a878\n.text:000000000040a87b\n.text:000000000040a880\n.text:000000000040a882\n.text:000000000040a885\n.text:000000000040a889\n.text:000000000040a88a\n.text:000000000040a88c\n.text:000000000040a88d\n.text:000000000040a88f\n'
p727
tp728
sS'get_stat_mtime_ns'
p729
(S'\n__stdcall get_stat_mtime_ns(stat * st)\n'
p730
V\u000along get_stat_mtime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_mtim).tv_nsec;\u000a}\u000a\u000a
p731
S'MOV RAX,qword ptr [RDI + 0x60]\nRET\n'
p732
S'48 8b 47 60\nc3\n'
p733
S'.text:000000000040d710\n.text:000000000040d714\n'
p734
tp735
sS'FUN_00402250'
p736
(S'\n__stdcall FUN_00402250()\n'
p737
V\u000avoid FUN_00402250(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00618010)();\u000a  return;\u000a}\u000a\u000a
p738
S'PUSH qword ptr [0x00618008]\nJMP qword ptr [0x00618010]\n'
p739
S'ff 35 b2 5d 21 00\nff 25 b4 5d 21 00\n'
p740
S'.plt:0000000000402250\n.plt:0000000000402256\n'
p741
tp742
sS'copy_reg'
p743
(S'\n__stdcall copy_reg(char * src_name, char * dst_name, cp_options * x, _Bool * new_dst, stat * src_sb)\n'
p744
V\u000a/* WARNING: Removing unreachable block (ram,0x004074e6) */\u000a/* WARNING: Removing unreachable block (ram,0x0040748e) */\u000a/* WARNING: Removing unreachable block (ram,0x00407498) */\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000a_Bool copy_reg(char *src_name,char *dst_name,cp_options *x,_Bool *new_dst,stat *src_sb)\u000a\u000a{\u000a  _Bool *p_Var1;\u000a  bool bVar2;\u000a  _Bool _Var3;\u000a  _Bool _Var4;\u000a  uint __fd;\u000a  int iVar5;\u000a  uint __fd_00;\u000a  int iVar6;\u000a  __uid_t _Var7;\u000a  mode_t mVar8;\u000a  undefined8 uVar9;\u000a  char *max_n_read;\u000a  size_t sVar10;\u000a  int *piVar11;\u000a  char *pcVar12;\u000a  size_t a;\u000a  _Bool *p_Var13;\u000a  void *ptr;\u000a  uint *hole_size;\u000a  long lVar14;\u000a  uint uVar15;\u000a  ulong uVar16;\u000a  size_t alignment;\u000a  undefined8 *puVar17;\u000a  stat *psVar18;\u000a  undefined8 *puVar19;\u000a  __dev_t *p_Var20;\u000a  char *in_R9;\u000a  undefined uVar21;\u000a  uint uVar22;\u000a  ulong uVar23;\u000a  _Bool *src_name_00;\u000a  byte bVar24;\u000a  stat *st;\u000a  _Bool wrote_hole_at_eof;\u000a  _Bool normal_copy_required;\u000a  stat dangling_link_sb;\u000a  undefined in_stack_fffffffffffffdb8 [88];\u000a  undefined8 in_stack_fffffffffffffe10;\u000a  undefined8 in_stack_fffffffffffffe18;\u000a  undefined in_stack_fffffffffffffe20;\u000a  undefined7 in_stack_fffffffffffffe21;\u000a  undefined8 in_stack_fffffffffffffe28;\u000a  undefined8 in_stack_fffffffffffffe30;\u000a  undefined8 in_stack_fffffffffffffe38;\u000a  undefined7 uVar25;\u000a  uint local_1b4;\u000a  timespec *local_1b0;\u000a  _Bool *local_1a8;\u000a  uint local_19c;\u000a  uint local_198;\u000a  char local_191;\u000a  uint *local_190;\u000a  undefined8 local_188;\u000a  uint local_17c;\u000a  timespec local_178;\u000a  timespec local_168;\u000a  char *local_158;\u000a  undefined local_150 [24];\u000a  uint local_138;\u000a  __uid_t local_134;\u000a  __gid_t local_130;\u000a  char *local_118;\u000a  stat local_c0;\u000a  \u000a  bVar24 = 0;\u000a  uVar23 = (ulong)src_sb & 0xffffffff;\u000a  uVar16 = (ulong)new_dst & 0xffffffff;\u000a  local_17c = st->st_mode;\u000a  _Var4 = x->data_copy_required;\u000a  local_188 = in_R9;\u000a  __fd = open_safer(src_name,(ulong)(x->dereference == DEREF_NEVER) << 0x11);\u000a  if ((int)__fd < 0) {\u000a    hole_size = (uint *)__errno_location();\u000a    __fd = *hole_size;\u000a    uVar9 = dcgettext(0,"cannot open %s for reading",5);\u000a    max_n_read = quotearg_style((char *)0x4);\u000a    error(0,(ulong)__fd,uVar9,max_n_read);\u000a    return false;\u000a  }\u000a  local_1a8 = (_Bool *)src_name;\u000a  iVar5 = fstat(__fd,(stat *)&local_c0);\u000a  if (iVar5 == 0) {\u000a    if ((st->st_ino == local_c0.st_ino) && (st->st_dev == local_c0.st_dev)) {\u000a      if (*local_188 == 0) {\u000a        local_19c = (uint)uVar23;\u000a        local_198 = (uint)uVar16;\u000a        uVar9 = 1;\u000a        if (x->data_copy_required != false) {\u000a          uVar9 = 0x201;\u000a        }\u000a        local_1b0 = (timespec *)dst_name;\u000a        __fd_00 = open_safer(dst_name,uVar9);\u000a        hole_size = (uint *)__errno_location();\u000a        local_190._0_4_ = *hole_size;\u000a        if (x->set_security_context == false) {\u000a          if ((-1 < (int)__fd_00) && (x->preserve_security_context != false)) goto LAB_00406e4a;\u000a          if ((int)__fd_00 < 0) goto LAB_00406e86;\u000aLAB_00406fde:\u000a          uVar16 = (ulong)local_198;\u000a          uVar23 = (ulong)local_19c;\u000a          dst_name = (char *)local_1b0;\u000a          if (*local_188 == 0) {\u000a            uVar23 = 0;\u000a            dst_name = (char *)local_1b0;\u000a            goto LAB_00406ffd;\u000a          }\u000a          goto LAB_00406cbc;\u000a        }\u000a        if ((int)__fd_00 < 0) {\u000aLAB_00406e86:\u000a          if (x->unlink_dest_after_failed_open == false) goto LAB_00406fde;\u000a          local_190 = (uint *)((ulong)local_190 & 0xffffffff00000000 | (ulong)(uint)local_190);\u000a          local_1b4 = __fd_00;\u000a          iVar5 = unlink((char *)local_1b0);\u000a          if (iVar5 != 0) {\u000a            local_190._0_4_ = *hole_size;\u000a            max_n_read = "cannot remove %s";\u000a            goto LAB_004070e6;\u000a          }\u000a          if (x->verbose != false) {\u000a            uVar9 = dcgettext(0,"removed %s\u005cn",5);\u000a            max_n_read = quotearg_style((char *)0x4);\u000a            __printf_chk(1,uVar9,max_n_read);\u000a          }\u000a          *local_188 = 1;\u000a          if (x->set_security_context == false) {\u000a            uVar16 = (ulong)local_198;\u000a            uVar23 = (ulong)local_19c;\u000a            dst_name = (char *)local_1b0;\u000a            goto LAB_00406cbc;\u000a          }\u000a          _Var3 = set_process_security_ctx();\u000a          __fd_00 = local_1b4;\u000a          if (_Var3 != false) goto LAB_00406fde;\u000a          goto LAB_00407112;\u000a        }\u000aLAB_00406e4a:\u000a        uVar21 = 0;\u000a        set_file_security_ctx();\u000a        if (x->require_preserve_context == false) goto LAB_00406fde;\u000a        ptr = (void *)0x0;\u000a      }\u000a      else {\u000aLAB_00406cbc:\u000a        uVar22 = (uint)uVar23;\u000a        uVar15 = (uint)uVar16;\u000a        local_1b0 = (timespec *)((ulong)local_1b0 & 0xffffffff00000000 | (ulong)(~uVar22 & uVar15));\u000a        local_1b4 = open_safer(dst_name,0xc1);\u000a        local_190 = (uint *)__errno_location();\u000a        __fd_00 = local_1b4;\u000a        local_190._0_4_ = *local_190;\u000a        local_19c = uVar22;\u000a        local_198 = uVar15;\u000a        if (((int)local_1b4 < 0) &&\u000a           (local_19c = uVar22, local_198 = uVar15, (uint)local_190 == 0x11)) {\u000a          local_190._0_4_ = 0x11;\u000a          local_19c = uVar22;\u000a          local_198 = uVar15;\u000a          if (x->move_mode == false) {\u000a            local_19c = uVar22;\u000a            local_198 = uVar15;\u000a            iVar5 = lstat(dst_name,(stat *)local_150);\u000a            local_190._0_4_ = 0x11;\u000a            if (iVar5 == 0) {\u000a              uVar23 = (ulong)local_19c;\u000a              if ((local_138 & 0xf000) != 0xa000) goto LAB_00406f05;\u000a              if (x->open_dangling_dest_symlink == false) {\u000a                uVar9 = dcgettext(0,"not writing through dangling symlink %s",5);\u000a                max_n_read = quotearg_style((char *)0x4);\u000a                uVar16 = 0;\u000a                goto LAB_0040710a;\u000a              }\u000a              __fd_00 = open_safer(dst_name,0x41,(ulong)local_1b0 & 0xffffffff);\u000a              local_190._0_4_ = *local_190;\u000a              goto LAB_00406f05;\u000a            }\u000a            uVar23 = (ulong)local_19c;\u000a          }\u000aLAB_00406ffd:\u000a          uVar15 = (uint)uVar16;\u000a          uVar22 = (uint)uVar23;\u000ajoined_r0x00406f58:\u000a          if (-1 < (int)__fd_00) goto LAB_00407005;\u000aLAB_004070be:\u000a          if ((((uint)local_190 == 2) && (*local_188 == 0)) && (x->move_mode == false))\u000a          goto LAB_004073ab;\u000a          max_n_read = "cannot create regular file %s";\u000aLAB_004070e6:\u000a          uVar16 = (ulong)(uint)local_190;\u000a          uVar9 = dcgettext(0,max_n_read,5);\u000a          max_n_read = quotearg_style((char *)0x4);\u000aLAB_0040710a:\u000a          error(0,uVar16,uVar9,max_n_read);\u000aLAB_00407112:\u000a          uVar21 = 0;\u000a          ptr = (void *)0x0;\u000a          goto LAB_00406d85;\u000a        }\u000aLAB_00406f05:\u000a        if (((uint)local_190 != 0x15) || (uVar22 = (uint)uVar23, -1 < (int)__fd_00))\u000a        goto LAB_00406ffd;\u000a        if (*(char *)&((timespec *)dst_name)->tv_sec == 0) {\u000a          local_190._0_4_ = 0x15;\u000a          goto joined_r0x00406f58;\u000a        }\u000a        sVar10 = strlen(dst_name);\u000a        uVar23 = (ulong)local_19c;\u000a        uVar16 = (ulong)local_198;\u000a        if (*(char *)((long)&((timespec *)dst_name)[-1].tv_nsec + sVar10 + 7) == '/') {\u000a          local_190._0_4_ = 0x14;\u000a        }\u000a        uVar22 = local_19c;\u000a        uVar15 = local_198;\u000a        if ((int)__fd_00 < 0) goto LAB_004070be;\u000aLAB_00407005:\u000a        local_1b4 = __fd_00;\u000a        local_1b0 = (timespec *)dst_name;\u000a        iVar5 = fstat(__fd_00,(stat *)local_150);\u000a        if (iVar5 != 0) {\u000a          hole_size = (uint *)__errno_location();\u000a          __fd_00 = *hole_size;\u000a          uVar21 = 0;\u000a          uVar9 = dcgettext(0,"cannot fstat %s",5);\u000a          quotearg_style((char *)0x4);\u000a          error(0,(ulong)__fd_00,uVar9);\u000a          ptr = (void *)0x0;\u000a          __fd_00 = local_1b4;\u000a          goto LAB_0040706c;\u000a        }\u000a        uVar21 = 1;\u000a        local_19c = uVar22;\u000a        local_198 = uVar15;\u000a        if (_Var4 == false) {\u000aLAB_004071ce:\u000a          ptr = (void *)0x0;\u000a          if (x->preserve_timestamps != false) goto LAB_0040751a;\u000a          goto LAB_004075a9;\u000a        }\u000a        local_19c = uVar22;\u000a        local_198 = uVar15;\u000a        if (x->reflink_mode != REFLINK_NEVER) {\u000a          local_19c = uVar22;\u000a          local_198 = uVar15;\u000a          iVar5 = clone_file();\u000a          if (iVar5 == 0) goto LAB_004071ce;\u000a          if (x->reflink_mode == REFLINK_ALWAYS) {\u000a            piVar11 = __errno_location();\u000a            local_188 = (char *)CONCAT44(local_188._4_4_,*piVar11);\u000a            uVar21 = 0;\u000a            uVar9 = dcgettext(0,"failed to clone %s from %s",5);\u000a            max_n_read = quotearg_n_style((char *)0x0);\u000a            pcVar12 = quotearg_n_style((char *)0x1);\u000a            error(0,(ulong)local_188 & 0xffffffff,uVar9,max_n_read,pcVar12);\u000a            ptr = (void *)0x0;\u000a            __fd_00 = local_1b4;\u000a            goto LAB_0040706c;\u000a          }\u000a        }\u000a        uVar21 = 0xe7;\u000a        uVar25 = 0x4071;\u000a        iVar5 = getpagesize();\u000a        alignment = SEXT48(iVar5);\u000a        lVar14 = 0x12;\u000a        puVar17 = (undefined8 *)local_150;\u000a        puVar19 = (undefined8 *)&stack0xfffffffffffffdb8;\u000a        while (lVar14 != 0) {\u000a          lVar14 = lVar14 + -1;\u000a          *puVar19 = *puVar17;\u000a          puVar17 = puVar17 + (ulong)bVar24 * 0x1ffffffffffffffe + 1;\u000a          puVar19 = puVar19 + (ulong)bVar24 * 0x1ffffffffffffffe + 1;\u000a        }\u000a        src_name_00 = (_Bool *)io_blksize((stat)CONCAT7137(uVar25,CONCAT1136(uVar21,CONCAT8128(\u000a                                                  in_stack_fffffffffffffe38,\u000a                                                  CONCAT8120(in_stack_fffffffffffffe30,\u000a                                                             CONCAT8112(in_stack_fffffffffffffe28,\u000a                                                                        CONCAT7105(\u000a                                                  in_stack_fffffffffffffe21,\u000a                                                  CONCAT1104(in_stack_fffffffffffffe20,\u000a                                                             CONCAT896(in_stack_fffffffffffffe18,\u000a                                                                       CONCAT888(\u000a                                                  in_stack_fffffffffffffe10,\u000a                                                  in_stack_fffffffffffffdb8))))))))));\u000a        local_158 = (char *)0x200;\u000a        if (local_118 < (char *)0x2000000000000001) {\u000a          local_158 = local_118;\u000a        }\u000a        if ((long)local_118 < 1) {\u000a          local_158 = (char *)0x200;\u000a        }\u000a        fdadvise(__fd,0,0,2);\u000a        uVar21 = 0x60;\u000a        uVar25 = 0x4072;\u000a        _Var4 = is_probably_sparse(&local_c0);\u000a        local_190 = (uint *)((ulong)local_190 & 0xffffffffffffff00 | (ulong)_Var4);\u000a        if ((local_138 & 0xf000) == 0x8000) {\u000a          bVar2 = true;\u000a          if ((x->sparse_mode != SPARSE_ALWAYS) && ((x->sparse_mode == SPARSE_AUTO & _Var4) == 0))\u000a          goto LAB_0040729b;\u000a        }\u000a        else {\u000aLAB_0040729b:\u000a          lVar14 = 0x12;\u000a          psVar18 = &local_c0;\u000a          p_Var20 = (__dev_t *)&stack0xfffffffffffffdb8;\u000a          while (lVar14 != 0) {\u000a            lVar14 = lVar14 + -1;\u000a            *p_Var20 = psVar18->st_dev;\u000a            psVar18 = (stat *)(&psVar18->st_dev + (ulong)bVar24 * 0x1ffffffffffffffe + 1);\u000a            p_Var20 = p_Var20 + (ulong)bVar24 * 0x1ffffffffffffffe + 1;\u000a          }\u000a          a = io_blksize((stat)CONCAT7137(uVar25,CONCAT1136(uVar21,CONCAT8128(\u000a                                                  in_stack_fffffffffffffe38,\u000a                                                  CONCAT8120(in_stack_fffffffffffffe30,\u000a                                                             CONCAT8112(in_stack_fffffffffffffe28,\u000a                                                                        CONCAT7105(\u000a                                                  in_stack_fffffffffffffe21,\u000a                                                  CONCAT1104(in_stack_fffffffffffffe20,\u000a                                                             CONCAT896(in_stack_fffffffffffffe18,\u000a                                                                       CONCAT888(\u000a                                                  in_stack_fffffffffffffe10,\u000a                                                  in_stack_fffffffffffffdb8))))))))));\u000a          p_Var13 = (_Bool *)buffer_lcm(a,(size_t)src_name_00,\u000a                                        (size_t)(_Bool *)(0x7fffffffffffffff - alignment));\u000a          if (((local_c0.st_mode & 0xf000) == 0x8000) && (local_c0.st_size < src_name_00)) {\u000a            src_name_00 = local_c0.st_size + 1;\u000a          }\u000a          p_Var1 = src_name_00 + (long)(p_Var13 + -1);\u000a          src_name_00 = p_Var1 + -((ulong)p_Var1 % (ulong)p_Var13);\u000a          if ((_Bool *)(0x7fffffffffffffff - alignment) <=\u000a              p_Var1 + -((ulong)p_Var1 % (ulong)p_Var13) + -1) {\u000a            src_name_00 = p_Var13;\u000a          }\u000a          bVar2 = false;\u000a        }\u000a        ptr = xmalloc((size_t)(src_name_00 + alignment));\u000a        hole_size = (uint *)ptr_align(ptr,alignment);\u000a        max_n_read = local_158;\u000a        if ((char)local_190 == 0) {\u000aLAB_004073cb:\u000a          if (!bVar2) {\u000a            max_n_read = (char *)0x0;\u000a          }\u000a          _Var4 = sparse_copy((char *)(ulong)__fd,(ulong)local_1b4,(size_t)hole_size,src_name_00,\u000a                              (uintmax_t)max_n_read,\u000a                              (off_t *)(ulong)(x->sparse_mode == SPARSE_ALWAYS),local_1a8);\u000a          iVar5 = 3;\u000a          if (_Var4 == false) {\u000a            uVar21 = 0;\u000a          }\u000a          else {\u000a            uVar21 = 1;\u000a            if (local_191 == 0) {\u000a              iVar5 = 0;\u000a            }\u000a            else {\u000a              iVar6 = ftruncate(local_1b4,local_178.tv_sec);\u000a              iVar5 = 0;\u000a              if (-1 < iVar6) goto LAB_004074f8;\u000a              hole_size = (uint *)__errno_location();\u000a              __fd_00 = *hole_size;\u000a              uVar21 = 0;\u000a              uVar9 = dcgettext(0,"failed to extend %s",5);\u000a              max_n_read = quotearg_style((char *)0x4);\u000a              error(0,(ulong)__fd_00,uVar9,max_n_read);\u000a              iVar5 = 3;\u000a            }\u000a          }\u000aLAB_004074fd:\u000a          __fd_00 = local_1b4;\u000a          if (iVar5 != 3) {\u000a            if (iVar5 != 0) {\u000a              return (_Bool)uVar21;\u000a            }\u000a            goto LAB_0040750e;\u000a          }\u000a        }\u000a        else {\u000a          local_190 = hole_size;\u000a          _Var4 = extent_copy((char *)(ulong)__fd,(ulong)local_1b4,(size_t)hole_size,\u000a                              (off_t)src_name_00,local_158,local_c0.st_size);\u000a          if (_Var4 == false) {\u000a            hole_size = local_190;\u000a            if ((char)local_178.tv_sec != 0) goto LAB_004073cb;\u000a            iVar5 = 3;\u000a            uVar21 = 0;\u000aLAB_004074f8:\u000a            if (iVar5 != 5) goto LAB_004074fd;\u000a          }\u000a          else {\u000a            uVar21 = 1;\u000a          }\u000aLAB_0040750e:\u000a          if (x->preserve_timestamps == false) {\u000aLAB_004075a9:\u000a            if ((x->preserve_ownership != false) &&\u000a               ((st->st_uid != local_134 || (st->st_gid != local_130)))) {\u000a              iVar5 = set_owner(x,(char *)local_1b0,(stat *)(ulong)local_1b4,st);\u000a              if (iVar5 == -1) goto LAB_0040769a;\u000a              if (iVar5 == 0) {\u000a                local_17c = local_17c & 0xfffff1ff;\u000a              }\u000a            }\u000a            if ((x->preserve_xattr != false) && (-1 < (char)local_138)) {\u000a              _Var7 = geteuid();\u000a              if (_Var7 != 0) {\u000a                iVar5 = fchmod_or_lchmod((char *)(ulong)local_1b4);\u000a                if (iVar5 == 0) {\u000a                  fchmod_or_lchmod((char *)(ulong)local_1b4);\u000a                }\u000a              }\u000a            }\u000a            uVar15 = local_19c;\u000a            if ((x->preserve_mode == false) && (x->move_mode == false)) {\u000a              if (x->set_mode == false) {\u000a                if (x->explicit_no_preserve_mode == false) {\u000a                  __fd_00 = local_1b4;\u000a                  if (local_19c != 0) {\u000a                    mVar8 = cached_umask();\u000a                    __fd_00 = local_1b4;\u000a                    if ((uVar15 & ~mVar8) != 0) {\u000a                      iVar5 = fchmod_or_lchmod((char *)(ulong)local_1b4);\u000a                      __fd_00 = local_1b4;\u000a                      if (iVar5 != 0) {\u000a                        hole_size = (uint *)__errno_location();\u000a                        __fd_00 = *hole_size;\u000a                        uVar9 = dcgettext(0,"preserving permissions for %s",5);\u000a                        quotearg_style((char *)0x4);\u000a                        error(0,(ulong)__fd_00,uVar9);\u000a                        _Var4 = x->require_preserve;\u000a                        goto joined_r0x00407694;\u000a                      }\u000a                    }\u000a                  }\u000a                  goto LAB_0040706c;\u000a                }\u000a                cached_umask();\u000a              }\u000a              iVar5 = set_acl((char *)local_1b0);\u000a              __fd_00 = local_1b4;\u000a              if (iVar5 != 0) goto LAB_0040769a;\u000a            }\u000a            else {\u000a              iVar5 = copy_acl(local_1a8,(char *)(ulong)__fd);\u000a              __fd_00 = local_1b4;\u000a              if (iVar5 != 0) {\u000a                _Var4 = x->require_preserve;\u000ajoined_r0x00407694:\u000a                __fd_00 = local_1b4;\u000a                if (_Var4 != false) goto LAB_0040769a;\u000a              }\u000a            }\u000a            goto LAB_0040706c;\u000a          }\u000aLAB_0040751a:\u000a          local_178 = get_stat_atime(st);\u000a          local_168 = get_stat_mtime(st);\u000a          iVar5 = fdutimens((char *)(ulong)local_1b4,local_1b0);\u000a          if (iVar5 == 0) goto LAB_004075a9;\u000a          hole_size = (uint *)__errno_location();\u000a          __fd_00 = *hole_size;\u000a          local_190 = (uint *)dcgettext(0,"preserving times for %s",5);\u000a          quotearg_style((char *)0x4);\u000a          error(0,(ulong)__fd_00,local_190);\u000a          if (x->require_preserve == false) goto LAB_004075a9;\u000aLAB_0040769a:\u000a          uVar21 = 0;\u000a          __fd_00 = local_1b4;\u000a        }\u000a      }\u000aLAB_0040706c:\u000a      iVar5 = close(__fd_00);\u000a      if (iVar5 < 0) {\u000a        hole_size = (uint *)__errno_location();\u000a        __fd_00 = *hole_size;\u000a        uVar21 = 0;\u000a        uVar9 = dcgettext(0,"failed to close %s",5);\u000a        max_n_read = quotearg_style((char *)0x4);\u000a        error(0,(ulong)__fd_00,uVar9,max_n_read);\u000a      }\u000a      goto LAB_00406d85;\u000a    }\u000a    uVar9 = dcgettext(0,"skipping file %s, as it was replaced while being copied",5);\u000a    max_n_read = quotearg_style((char *)0x4);\u000a    uVar16 = 0;\u000a  }\u000a  else {\u000a    hole_size = (uint *)__errno_location();\u000a    __fd_00 = *hole_size;\u000a    uVar9 = dcgettext(0,"cannot fstat %s",5);\u000a    max_n_read = quotearg_style((char *)0x4);\u000a    uVar16 = (ulong)__fd_00;\u000a  }\u000a  uVar21 = 0;\u000a  error(0,uVar16,uVar9,max_n_read);\u000a  ptr = (void *)0x0;\u000aLAB_00406d85:\u000a  iVar5 = close(__fd);\u000a  if (iVar5 < 0) {\u000a    hole_size = (uint *)__errno_location();\u000a    __fd = *hole_size;\u000a    uVar21 = 0;\u000a    uVar9 = dcgettext(0,"failed to close %s",5);\u000a    max_n_read = quotearg_style((char *)0x4);\u000a    error(0,(ulong)__fd,uVar9,max_n_read);\u000a  }\u000a  free(ptr);\u000a  return (_Bool)uVar21;\u000aLAB_004073ab:\u000a  *local_188 = 1;\u000a  goto LAB_00406cbc;\u000a}\u000a\u000a
p745
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x188\nMOV qword ptr [RSP + 0x30],R9\nMOV R13D,R8D\nMOV EBX,ECX\nMOV R12,RDX\nMOV RBP,RSI\nMOV R14,RDI\nMOV RAX,qword ptr [0x1c0 + RSP]\nMOV EAX,dword ptr [RAX + 0x18]\nMOV dword ptr [RSP + 0x3c],EAX\nMOV R15B,byte ptr [R12 + 0x22]\nXOR ESI,ESI\nCMP dword ptr [R12 + 0x4],0x2\nSETZ SIL\nSHL ESI,0x11\nXOR EAX,EAX\nCALL 0x004093b0\nTEST EAX,EAX\nJS 0x00406c42\nMOV qword ptr [RSP + 0x10],R14\nLEA RSI,[0xf8 + RSP]\nMOV R14D,EAX\nMOV EDI,EAX\nCALL 0x004107a0\nTEST EAX,EAX\nJZ 0x00406c83\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x41293a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV R12,qword ptr [RSP + 0x10]\nMOV RSI,R12\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nJMP 0x00406d7d\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x41291f\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nJMP 0x00406dd9\nMOV RCX,qword ptr [0x1c0 + RSP]\nMOV RAX,qword ptr [RCX + 0x8]\nCMP RAX,qword ptr [0x100 + RSP]\nJNZ 0x00406d48\nMOV RAX,qword ptr [RCX]\nCMP RAX,qword ptr [0xf8 + RSP]\nJNZ 0x00406d48\nMOV RAX,qword ptr [RSP + 0x30]\nCMP byte ptr [RAX],0x0\nJZ 0x00406df2\nMOV RDI,RBP\nMOV EDX,R13D\nNOT EDX\nAND EDX,EBX\nMOV ESI,0xc1\nXOR EAX,EAX\nMOV dword ptr [RSP + 0x8],EDX\nCALL 0x004093b0\nMOV dword ptr [RSP + 0x4],EAX\nCALL 0x004022e0\nMOV ECX,dword ptr [RSP + 0x4]\nMOV qword ptr [RSP + 0x28],RAX\nMOV EDX,dword ptr [RAX]\nTEST ECX,ECX\nMOV dword ptr [RSP + 0x1c],R13D\nMOV dword ptr [RSP + 0x20],EBX\nJNS 0x00406f05\nCMP EDX,0x11\nJNZ 0x00406f05\nMOV EDX,0x11\nCMP byte ptr [R12 + 0x18],0x0\nJNZ 0x00406ffd\nMOV R13D,ECX\nLEA RSI,[RSP + 0x68]\nMOV RDI,RBP\nCALL 0x004107b0\nMOV EDX,0x11\nTEST EAX,EAX\nJZ 0x00406ec2\nMOV ECX,R13D\nMOV R13D,dword ptr [RSP + 0x1c]\nCMP EDX,0x15\nJZ 0x00406f0e\nJMP 0x00406ffd\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x41294a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV R12,qword ptr [RSP + 0x10]\nMOV RSI,R12\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nXOR R15D,R15D\nMOV EDI,R14D\nCALL 0x00402590\nTEST EAX,EAX\nJNS 0x00406dcd\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x4129f7\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R12\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOV RDI,R15\nCALL 0x00402290\nAND R13B,0x1\nAND R13B,0x1\nMOV EAX,R13D\nADD RSP,0x188\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV dword ptr [RSP + 0x1c],R13D\nMOV dword ptr [RSP + 0x20],EBX\nCMP byte ptr [R12 + 0x22],0x0\nMOV EAX,0x201\nMOV ESI,0x1\nCMOVNZ ESI,EAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RBP\nMOV RDI,RBP\nCALL 0x004093b0\nMOV EBP,EAX\nCALL 0x004022e0\nMOV R13,RAX\nMOV EDX,dword ptr [R13]\nCMP byte ptr [R12 + 0x20],0x0\nJZ 0x00406e3b\nTEST EBP,EBP\nMOV ECX,EBP\nJNS 0x00406e4a\nJMP 0x00406e86\nTEST EBP,EBP\nMOV ECX,EBP\nJS 0x00406e7e\nMOV AL,byte ptr [R12 + 0x24]\nTEST AL,AL\nJZ 0x00406e7e\nMOV EBX,EDX\nMOVZX ESI,byte ptr [R12 + 0x24]\nXOR R13D,R13D\nXOR EDX,EDX\nMOV RDI,qword ptr [RSP + 0x8]\nMOV EBP,ECX\nMOV RCX,R12\nCALL 0x00406750\nMOV EDX,EBX\nMOV ECX,EBP\nCMP byte ptr [R12 + 0x25],0x0\nJZ 0x00406fde\nXOR R15D,R15D\nJMP 0x00407067\nTEST ECX,ECX\nJNS 0x00406fde\nCMP byte ptr [R12 + 0x16],0x0\nJZ 0x00406fde\nMOV dword ptr [RSP + 0x28],EDX\nMOV dword ptr [RSP + 0x4],ECX\nMOV RBP,qword ptr [RSP + 0x8]\nMOV RDI,RBP\nCALL 0x004022f0\nTEST EAX,EAX\nJZ 0x00406f63\nMOV R15D,dword ptr [R13]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x41244e\nJMP 0x004070e6\nMOV EAX,0xf000\nAND EAX,dword ptr [0x80 + RSP]\nCMP EAX,0xa000\nMOV ECX,R13D\nMOV R13D,dword ptr [RSP + 0x1c]\nJNZ 0x00406f05\nCMP byte ptr [R12 + 0x2f],0x0\nJZ 0x0040749a\nMOV ESI,0x41\nXOR EAX,EAX\nMOV RDI,RBP\nMOV EDX,dword ptr [RSP + 0x8]\nCALL 0x004093b0\nMOV ECX,EAX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EDX,dword ptr [RAX]\nCMP EDX,0x15\nJNZ 0x00406ffd\nTEST ECX,ECX\nJNS 0x00406ffd\nCMP byte ptr [RBP],0x0\nJZ 0x00406f51\nMOV RDI,RBP\nMOV EBX,ECX\nMOV R13D,EDX\nCALL 0x00402440\nMOV EDX,R13D\nMOV ECX,EBX\nMOV R13D,dword ptr [RSP + 0x1c]\nMOV EBX,dword ptr [RSP + 0x20]\nCMP byte ptr [RBP + RAX*0x1 + -0x1],0x2f\nMOV EAX,0x14\nCMOVZ EDX,EAX\nTEST ECX,ECX\nJNS 0x00407005\nJMP 0x004070be\nMOV EDX,0x15\nTEST ECX,ECX\nJNS 0x00407005\nJMP 0x004070be\nCMP byte ptr [R12 + 0x2d],0x0\nJZ 0x00406fa3\nXOR EDI,EDI\nMOV ESI,0x41245f\nMOV EDX,0x5\nCALL 0x00402420\nMOV R13,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,R13\nMOV RDX,RCX\nCALL 0x00402840\nMOV RAX,qword ptr [RSP + 0x30]\nMOV byte ptr [RAX],0x1\nCMP byte ptr [R12 + 0x20],0x0\nJZ 0x004074cc\nMOV EDX,0x1\nMOV RDI,qword ptr [RSP + 0x10]\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RCX,R12\nCALL 0x004067d0\nTEST AL,AL\nMOV ECX,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x28]\nJZ 0x004074e8\nMOV RAX,qword ptr [RSP + 0x30]\nCMP byte ptr [RAX],0x0\nMOV RBP,qword ptr [RSP + 0x8]\nMOV EBX,dword ptr [RSP + 0x20]\nMOV R13D,dword ptr [RSP + 0x1c]\nJNZ 0x00406cbc\nXOR R13D,R13D\nTEST ECX,ECX\nJS 0x004070be\nMOV qword ptr [RSP + 0x8],RBP\nLEA RSI,[RSP + 0x68]\nMOV dword ptr [RSP + 0x4],ECX\nMOV EDI,ECX\nCALL 0x004107a0\nTEST EAX,EAX\nJZ 0x0040711f\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x41293a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nXOR R15D,R15D\nMOV ECX,dword ptr [RSP + 0x4]\nMOV R12,qword ptr [RSP + 0x10]\nMOV EDI,ECX\nCALL 0x00402590\nTEST EAX,EAX\nJNS 0x00406d85\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x4129f7\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nJMP 0x00406d85\nCMP EDX,0x2\nJNZ 0x004070d9\nMOV RAX,qword ptr [RSP + 0x30]\nCMP byte ptr [RAX],0x0\nJNZ 0x004070d9\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x004073ab\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R15D,EDX\nMOV ESI,0x4129aa\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,RBP\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBX\nCALL 0x00402870\nXOR R15D,R15D\nMOV R12,qword ptr [RSP + 0x10]\nJMP 0x00406d85\nMOV dword ptr [RSP + 0x1c],R13D\nMOV dword ptr [RSP + 0x20],EBX\nMOV R13B,0x1\nTEST R15B,R15B\nJZ 0x004071ce\nCMP dword ptr [R12 + 0x30],0x0\nJZ 0x004071e2\nMOV EDI,dword ptr [RSP + 0x4]\nMOV ESI,R14D\nCALL 0x00407a20\nTEST EAX,EAX\nJZ 0x004071ce\nCMP dword ptr [R12 + 0x30],0x2\nJNZ 0x004071e2\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x30],EAX\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x4129c8\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nXOR EDI,EDI\nMOV ESI,0x4\nMOV RDX,qword ptr [RSP + 0x8]\nCALL 0x0040c3e0\nMOV RBX,RAX\nMOV EDI,0x1\nMOV ESI,0x4\nMOV R12,qword ptr [RSP + 0x10]\nMOV RDX,R12\nCALL 0x0040c3e0\nMOV RBP,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,dword ptr [RSP + 0x30]\nMOV RDX,R15\nMOV RCX,RBX\nMOV R8,RBP\nCALL 0x00402870\nXOR R15D,R15D\nMOV ECX,dword ptr [RSP + 0x4]\nJMP 0x0040706c\nXOR R15D,R15D\nCMP byte ptr [R12 + 0x1e],0x0\nJNZ 0x0040751a\nJMP 0x004075a9\nCALL 0x00402950\nMOVSXD RBX,EAX\nSUB RSP,0x90\nLEA RSI,[0xf8 + RSP]\nMOV ECX,0x12\nMOV RDI,RSP\nMOVSQ.REP RDI,RSI\nCALL 0x00407a30\nADD RSP,0x90\nMOV R13,RAX\nMOV RAX,qword ptr [0xa0 + RSP]\nMOV RCX,0x2000000000000001\nCMP RAX,RCX\nMOV ECX,0x200\nMOV EDX,0x200\nCMOVC RDX,RAX\nTEST RAX,RAX\nCMOVLE RDX,RCX\nMOV qword ptr [RSP + 0x60],RDX\nXOR ESI,ESI\nXOR EDX,EDX\nMOV ECX,0x2\nMOV EDI,R14D\nCALL 0x00409380\nLEA RDI,[0xf8 + RSP]\nCALL 0x00407a80\nMOV R15D,0xf000\nMOV ECX,dword ptr [0x80 + RSP]\nAND ECX,R15D\nCMP ECX,0x8000\nMOV byte ptr [RSP + 0x28],AL\nJNZ 0x0040729b\nMOV ECX,dword ptr [R12 + 0xc]\nCMP ECX,0x2\nSETZ DL\nCMP ECX,0x3\nMOV BPL,0x1\nJZ 0x00407320\nAND DL,AL\nJNZ 0x00407320\nMOV RBP,0x7fffffffffffffff\nSUB RBP,RBX\nSUB RSP,0x90\nLEA RSI,[0x188 + RSP]\nMOV ECX,0x12\nMOV RDI,RSP\nMOVSQ.REP RDI,RSI\nCALL 0x00407a30\nADD RSP,0x90\nMOV RDI,RAX\nMOV RSI,R13\nMOV RDX,RBP\nCALL 0x00408f80\nMOV RCX,RAX\nAND R15D,dword ptr [0x110 + RSP]\nCMP R15D,0x8000\nJNZ 0x00407303\nMOV RAX,qword ptr [0x128 + RSP]\nCMP RAX,R13\nLEA RAX,[RAX + 0x1]\nCMOVC R13,RAX\nLEA R13,[RCX + R13*0x1 + -0x1]\nXOR EDX,EDX\nMOV RAX,R13\nDIV RCX\nSUB R13,RDX\nLEA RAX,[R13 + -0x1]\nCMP RAX,RBP\nCMOVNC R13,RCX\nXOR EBP,EBP\nLEA RDI,[R13 + RBX*0x1]\nCALL 0x0040e9b0\nMOV R15,RAX\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00407ab0\nCMP byte ptr [RSP + 0x28],0x0\nMOV ECX,R14D\nMOV RBX,qword ptr [RSP + 0x60]\nJZ 0x004073cb\nMOV R11D,0x1\nMOV R9,qword ptr [0x128 + RSP]\nTEST BPL,BPL\nMOV ESI,dword ptr [RSP + 0x4]\nJZ 0x00407367\nMOV R11D,dword ptr [R12 + 0xc]\nLEA R10,[RSP + 0x40]\nMOV EDI,ECX\nMOV qword ptr [RSP + 0x28],RAX\nMOV RDX,RAX\nMOV RCX,R13\nMOV R8,RBX\nPUSH R10\nPUSH qword ptr [RSP + 0x10]\nPUSH qword ptr [RSP + 0x20]\nPUSH R11\nCALL 0x00407ad0\nADD RSP,0x20\nTEST AL,AL\nJZ 0x004073b8\nMOV R13B,0x1\nMOV ECX,0x5\nCMP ECX,0x5\nJNZ 0x004074fd\nJMP 0x0040750e\nMOV RAX,qword ptr [RSP + 0x30]\nMOV byte ptr [RAX],0x1\nJMP 0x00406cbc\nCMP byte ptr [RSP + 0x40],0x0\nJZ 0x004074f0\nMOV ECX,R14D\nMOV RAX,qword ptr [RSP + 0x28]\nXOR EDX,EDX\nTEST BPL,BPL\nCMOVZ RBX,RDX\nXOR R9D,R9D\nCMP dword ptr [R12 + 0xc],0x3\nSETZ R9B\nSUB RSP,0x8\nLEA RBP,[RSP + 0x2f]\nLEA R10,[RSP + 0x48]\nMOV EDI,ECX\nMOV ESI,dword ptr [RSP + 0xc]\nMOV RDX,RAX\nMOV RCX,R13\nMOV R8,RBX\nPUSH RBP\nPUSH R10\nPUSH -0x1\nPUSH qword ptr [RSP + 0x28]\nPUSH qword ptr [RSP + 0x38]\nCALL 0x00407ef0\nADD RSP,0x30\nMOV ECX,0x3\nTEST AL,AL\nJZ 0x00407490\nMOV R13B,0x1\nCMP byte ptr [RSP + 0x27],0x0\nJZ 0x004074df\nMOV RSI,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nCALL 0x004024f0\nTEST EAX,EAX\nMOV ECX,0x0\nJNS 0x004074f8\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x4129e3\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOV ECX,0x3\nCMP ECX,0x5\nJNZ 0x004074fd\nJMP 0x0040750e\nXOR R13D,R13D\nCMP ECX,0x5\nJNZ 0x004074fd\nJMP 0x0040750e\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x412982\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,RBP\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nJMP 0x0040710a\nMOV RBP,qword ptr [RSP + 0x8]\nMOV EBX,dword ptr [RSP + 0x20]\nMOV R13D,dword ptr [RSP + 0x1c]\nJMP 0x00406cbc\nXOR ECX,ECX\nCMP ECX,0x5\nJNZ 0x004074fd\nJMP 0x0040750e\nXOR R13D,R13D\nJMP 0x00407112\nMOV ECX,0x3\nXOR R13D,R13D\nCMP ECX,0x5\nJZ 0x0040750e\nCMP ECX,0x3\nJZ 0x00407063\nTEST ECX,ECX\nJNZ 0x00406dd9\nCMP byte ptr [R12 + 0x1e],0x0\nJZ 0x004075a9\nMOV RBX,qword ptr [0x1c0 + RSP]\nMOV RDI,RBX\nCALL 0x0040d730\nMOV qword ptr [RSP + 0x40],RAX\nMOV qword ptr [RSP + 0x48],RDX\nMOV RDI,RBX\nCALL 0x0040d750\nMOV qword ptr [RSP + 0x50],RAX\nMOV qword ptr [RSP + 0x58],RDX\nLEA RDX,[RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV RBP,qword ptr [RSP + 0x8]\nMOV RSI,RBP\nCALL 0x0040dd90\nTEST EAX,EAX\nJZ 0x004075a9\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4126fe\nMOV EDX,0x5\nCALL 0x00402420\nMOV qword ptr [RSP + 0x28],RAX\nMOV EDI,0x4\nMOV RSI,RBP\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,qword ptr [RSP + 0x28]\nCALL 0x00402870\nCMP byte ptr [R12 + 0x23],0x0\nJNZ 0x0040769a\nCMP byte ptr [R12 + 0x1c],0x0\nMOV RCX,qword ptr [0x1c0 + RSP]\nJZ 0x00407607\nMOV EAX,dword ptr [RCX + 0x1c]\nCMP EAX,dword ptr [0x84 + RSP]\nMOV EBP,dword ptr [RSP + 0x4]\nJNZ 0x004075d5\nMOV EAX,dword ptr [RCX + 0x20]\nCMP EAX,dword ptr [0x88 + RSP]\nJZ 0x0040760b\nMOV RAX,qword ptr [RSP + 0x30]\nMOVZX R8D,byte ptr [RAX]\nLEA R9,[RSP + 0x68]\nMOV RDI,R12\nMOV RSI,qword ptr [RSP + 0x8]\nMOV EDX,EBP\nCALL 0x004077e0\nCMP EAX,-0x1\nJZ 0x0040769a\nTEST EAX,EAX\nJNZ 0x00407607\nAND dword ptr [RSP + 0x3c],0xfffff1ff\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [R12 + 0x26],0x0\nJZ 0x0040765d\nCMP byte ptr [0x80 + RSP],0x0\nJS 0x0040765d\nCALL 0x00402540\nMOV EBP,dword ptr [RSP + 0x4]\nTEST EAX,EAX\nJZ 0x0040765d\nMOV EDX,0x180\nMOV EDI,EBP\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x00408280\nMOV EBP,dword ptr [RSP + 0x4]\nTEST EAX,EAX\nJNZ 0x0040765d\nMOV EDX,dword ptr [RSP + 0x1c]\nNOT EDX\nAND EDX,dword ptr [RSP + 0x20]\nMOV EDI,EBP\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x00408280\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [R12 + 0x1d],0x0\nJNZ 0x0040766d\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x004076a2\nMOV RDI,qword ptr [RSP + 0x10]\nMOV ESI,R14D\nMOV RDX,qword ptr [RSP + 0x8]\nMOV ECX,EBP\nMOV R8D,dword ptr [RSP + 0x3c]\nCALL 0x00408930\nTEST EAX,EAX\nJZ 0x00407063\nCMP byte ptr [R12 + 0x23],0x0\nJZ 0x00407063\nXOR R13D,R13D\nJMP 0x00407063\nCMP byte ptr [R12 + 0x2a],0x0\nJZ 0x004076b8\nMOV EDX,dword ptr [R12 + 0x10]\nMOV RDI,qword ptr [RSP + 0x8]\nMOV ESI,EBP\nJMP 0x004076d7\nCMP byte ptr [R12 + 0x1f],0x0\nJZ 0x004076e6\nCALL 0x00405f30\nNOT EAX\nAND EAX,0x1b6\nMOV RDI,qword ptr [RSP + 0x8]\nMOV ESI,dword ptr [RSP + 0x4]\nMOV EDX,EAX\nCALL 0x004089c0\nTEST EAX,EAX\nJZ 0x00407063\nJMP 0x0040769a\nMOV EBX,dword ptr [RSP + 0x1c]\nTEST EBX,EBX\nJZ 0x00407063\nCALL 0x00405f30\nNOT EAX\nTEST EBX,EAX\nJZ 0x00407063\nMOV EDI,dword ptr [RSP + 0x4]\nMOV RSI,qword ptr [RSP + 0x8]\nMOV EDX,dword ptr [RSP + 0x20]\nCALL 0x00408280\nTEST EAX,EAX\nJZ 0x00407063\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412716\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nCMP byte ptr [R12 + 0x23],0x0\nJZ 0x00407063\nJMP 0x0040769a\n'
p746
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 88 01 00 00\n4c 89 4c 24 30\n45 89 c5\n89 cb\n49 89 d4\n48 89 f5\n49 89 fe\n48 8b 84 24 c0 01 00 00\n8b 40 18\n89 44 24 3c\n45 8a 7c 24 22\n31 f6\n41 83 7c 24 04 02\n40 0f 94 c6\nc1 e6 11\n31 c0\ne8 d2 27 00 00\n85 c0\n78 60\n4c 89 74 24 10\n48 8d b4 24 f8 00 00 00\n41 89 c6\n89 c7\ne8 a7 9b 00 00\n85 c0\n0f 84 82 00 00 00\ne8 da b6 ff ff\n8b 18\n45 31 ed\n31 ff\nbe 3a 29 41 00\nba 05 00 00 00\ne8 04 b8 ff ff\n48 89 c5\nbf 04 00 00 00\n4c 8b 64 24 10\n4c 89 e6\ne8 8f 58 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne9 3b 01 00 00\ne8 99 b6 ff ff\n8b 18\n45 31 ed\n31 ff\nbe 1f 29 41 00\nba 05 00 00 00\ne8 c3 b7 ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 53 58 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 f2 bb ff ff\ne9 56 01 00 00\n48 8b 8c 24 c0 01 00 00\n48 8b 41 08\n48 3b 84 24 00 01 00 00\n0f 85 ab 00 00 00\n48 8b 01\n48 3b 84 24 f8 00 00 00\n0f 85 9a 00 00 00\n48 8b 44 24 30\n80 38 00\n0f 84 36 01 00 00\n48 89 ef\n44 89 ea\nf7 d2\n21 da\nbe c1 00 00 00\n31 c0\n89 54 24 08\ne8 da 26 00 00\n89 44 24 04\ne8 01 b6 ff ff\n8b 4c 24 04\n48 89 44 24 28\n8b 10\n85 c9\n44 89 6c 24 1c\n89 5c 24 20\n0f 89 0a 02 00 00\n83 fa 11\n0f 85 01 02 00 00\nba 11 00 00 00\n41 80 7c 24 18 00\n0f 85 e8 02 00 00\n41 89 cd\n48 8d 74 24 68\n48 89 ef\ne8 8b 9a 00 00\nba 11 00 00 00\n85 c0\n0f 84 90 01 00 00\n44 89 e9\n44 8b 6c 24 1c\n83 fa 15\n0f 84 cb 01 00 00\ne9 b5 02 00 00\n45 31 ed\n31 ff\nbe 4a 29 41 00\nba 05 00 00 00\ne8 c4 b6 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 8b 64 24 10\n4c 89 e6\ne8 4f 57 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 ee ba ff ff\n45 31 ff\n44 89 f7\ne8 03 b8 ff ff\n85 c0\n79 3c\ne8 4a b5 ff ff\n8b 18\n45 31 ed\n31 ff\nbe f7 29 41 00\nba 05 00 00 00\ne8 74 b6 ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 e6\ne8 04 57 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 a3 ba ff ff\n4c 89 ff\ne8 bb b4 ff ff\n41 80 e5 01\n41 80 e5 01\n44 89 e8\n48 81 c4 88 01 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n44 89 6c 24 1c\n89 5c 24 20\n41 80 7c 24 22 00\nb8 01 02 00 00\nbe 01 00 00 00\n0f 45 f0\n31 c0\n48 89 6c 24 08\n48 89 ef\ne8 93 25 00 00\n89 c5\ne8 bc b4 ff ff\n49 89 c5\n41 8b 55 00\n41 80 7c 24 20 00\n74 08\n85 ed\n89 e9\n79 11\neb 4b\n85 ed\n89 e9\n78 3d\n41 8a 44 24 24\n84 c0\n74 34\n89 d3\n41 0f b6 74 24 24\n45 31 ed\n31 d2\n48 8b 7c 24 08\n89 cd\n4c 89 e1\ne8 ea f8 ff ff\n89 da\n89 e9\n41 80 7c 24 25 00\n0f 84 68 01 00 00\n45 31 ff\ne9 e9 01 00 00\n85 c9\n0f 89 58 01 00 00\n41 80 7c 24 16 00\n0f 84 4c 01 00 00\n89 54 24 28\n89 4c 24 04\n48 8b 6c 24 08\n48 89 ef\ne8 49 b4 ff ff\n85 c0\n0f 84 b4 00 00 00\n45 8b 7d 00\n45 31 ed\n31 ff\nbe 4e 24 41 00\ne9 24 02 00 00\nb8 00 f0 00 00\n23 84 24 80 00 00 00\n3d 00 a0 00 00\n44 89 e9\n44 8b 6c 24 1c\n75 28\n41 80 7c 24 2f 00\n0f 84 b1 05 00 00\nbe 41 00 00 00\n31 c0\n48 89 ef\n8b 54 24 08\ne8 b4 24 00 00\n89 c1\n48 8b 44 24 28\n8b 10\n83 fa 15\n0f 85 ef 00 00 00\n85 c9\n0f 89 e7 00 00 00\n80 7d 00 00\n74 35\n48 89 ef\n89 cb\n41 89 d5\ne8 17 b5 ff ff\n44 89 ea\n89 d9\n44 8b 6c 24 1c\n8b 5c 24 20\n80 7c 05 ff 2f\nb8 14 00 00 00\n0f 44 d0\n85 c9\n0f 89 b9 00 00 00\ne9 6d 01 00 00\nba 15 00 00 00\n85 c9\n0f 89 a7 00 00 00\ne9 5b 01 00 00\n41 80 7c 24 2d 00\n74 38\n31 ff\nbe 5f 24 41 00\nba 05 00 00 00\ne8 a4 b4 ff ff\n49 89 c5\nbf 04 00 00 00\n48 8b 74 24 08\ne8 32 55 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n4c 89 ee\n48 89 ca\ne8 9d b8 ff ff\n48 8b 44 24 30\nc6 00 01\n41 80 7c 24 20 00\n0f 84 15 05 00 00\nba 01 00 00 00\n48 8b 7c 24 10\n48 8b 74 24 08\n4c 89 e1\ne8 02 f8 ff ff\n84 c0\n8b 4c 24 04\n8b 54 24 28\n0f 84 0a 05 00 00\n48 8b 44 24 30\n80 38 00\n48 8b 6c 24 08\n8b 5c 24 20\n44 8b 6c 24 1c\n0f 85 c2 fc ff ff\n45 31 ed\n85 c9\n0f 88 b9 00 00 00\n48 89 6c 24 08\n48 8d 74 24 68\n89 4c 24 04\n89 cf\ne8 86 97 00 00\n85 c0\n0f 84 fd 00 00 00\ne8 b9 b2 ff ff\n8b 18\n45 31 ed\n31 ff\nbe 3a 29 41 00\nba 05 00 00 00\ne8 e3 b3 ff ff\n48 89 c5\nbf 04 00 00 00\n48 8b 74 24 08\ne8 71 54 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 10 b8 ff ff\n45 31 ff\n8b 4c 24 04\n4c 8b 64 24 10\n89 cf\ne8 1d b5 ff ff\n85 c0\n0f 89 0a fd ff ff\ne8 60 b2 ff ff\n8b 18\n45 31 ed\n31 ff\nbe f7 29 41 00\nba 05 00 00 00\ne8 8a b3 ff ff\n48 89 c5\nbf 04 00 00 00\n48 8b 74 24 08\ne8 18 54 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 b7 b7 ff ff\ne9 c7 fc ff ff\n83 fa 02\n75 16\n48 8b 44 24 30\n80 38 00\n75 0c\n41 80 7c 24 18 00\n0f 84 d2 02 00 00\n45 31 ed\n31 ff\n41 89 d7\nbe aa 29 41 00\nba 05 00 00 00\ne8 30 b3 ff ff\n48 89 c3\nbf 04 00 00 00\n48 89 ee\ne8 c0 53 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 da\ne8 5e b7 ff ff\n45 31 ff\n4c 8b 64 24 10\ne9 66 fc ff ff\n44 89 6c 24 1c\n89 5c 24 20\n41 b5 01\n45 84 ff\n0f 84 9a 00 00 00\n41 83 7c 24 30 00\n0f 84 a2 00 00 00\n8b 7c 24 04\n44 89 f6\ne8 d4 08 00 00\n85 c0\n74 7e\n41 83 7c 24 30 02\n0f 85 86 00 00 00\ne8 7f b1 ff ff\n8b 00\n89 44 24 30\n45 31 ed\n31 ff\nbe c8 29 41 00\nba 05 00 00 00\ne8 a5 b2 ff ff\n49 89 c7\n31 ff\nbe 04 00 00 00\n48 8b 54 24 08\ne8 51 52 00 00\n48 89 c3\nbf 01 00 00 00\nbe 04 00 00 00\n4c 8b 64 24 10\n4c 89 e2\ne8 37 52 00 00\n48 89 c5\n31 ff\n31 c0\n8b 74 24 30\n4c 89 fa\n48 89 d9\n49 89 e8\ne8 ae b6 ff ff\n45 31 ff\n8b 4c 24 04\ne9 9e fe ff ff\n45 31 ff\n41 80 7c 24 1e 00\n0f 85 3d 03 00 00\ne9 c7 03 00 00\ne8 69 b7 ff ff\n48 63 d8\n48 81 ec 90 00 00 00\n48 8d b4 24 f8 00 00 00\nb9 12 00 00 00\n48 89 e7\nf3 48 a5\ne8 27 08 00 00\n48 81 c4 90 00 00 00\n49 89 c5\n48 8b 84 24 a0 00 00 00\n48 b9 01 00 00 00 00 00 00 20\n48 39 c8\nb9 00 02 00 00\nba 00 02 00 00\n48 0f 42 d0\n48 85 c0\n48 0f 4e d1\n48 89 54 24 60\n31 f6\n31 d2\nb9 02 00 00 00\n44 89 f7\ne8 2d 21 00 00\n48 8d bc 24 f8 00 00 00\ne8 20 08 00 00\n41 bf 00 f0 00 00\n8b 8c 24 80 00 00 00\n44 21 f9\n81 f9 00 80 00 00\n88 44 24 28\n75 1f\n41 8b 4c 24 0c\n83 f9 02\n0f 94 c2\n83 f9 03\n40 b5 01\n0f 84 8d 00 00 00\n20 c2\n0f 85 85 00 00 00\n48 bd ff ff ff ff ff ff ff 7f\n48 29 dd\n48 81 ec 90 00 00 00\n48 8d b4 24 88 01 00 00\nb9 12 00 00 00\n48 89 e7\nf3 48 a5\ne8 69 07 00 00\n48 81 c4 90 00 00 00\n48 89 c7\n4c 89 ee\n48 89 ea\ne8 a4 1c 00 00\n48 89 c1\n44 23 bc 24 10 01 00 00\n41 81 ff 00 80 00 00\n75 13\n48 8b 84 24 28 01 00 00\n4c 39 e8\n48 8d 40 01\n4c 0f 42 e8\n4e 8d 6c 29 ff\n31 d2\n4c 89 e8\n48 f7 f1\n49 29 d5\n49 8d 45 ff\n48 39 e8\n4c 0f 43 e9\n31 ed\n49 8d 7c 1d 00\ne8 86 76 00 00\n49 89 c7\n4c 89 ff\n48 89 de\ne8 78 07 00 00\n80 7c 24 28 00\n44 89 f1\n48 8b 5c 24 60\n0f 84 80 00 00 00\n41 bb 01 00 00 00\n4c 8b 8c 24 28 01 00 00\n40 84 ed\n8b 74 24 04\n74 05\n45 8b 5c 24 0c\n4c 8d 54 24 40\n89 cf\n48 89 44 24 28\n48 89 c2\n4c 89 e9\n49 89 d8\n41 52\nff 74 24 10\nff 74 24 20\n41 53\ne8 43 07 00 00\n48 83 c4 20\n84 c0\n74 23\n41 b5 01\nb9 05 00 00 00\n83 f9 05\n0f 85 57 01 00 00\ne9 63 01 00 00\n48 8b 44 24 30\nc6 00 01\ne9 04 f9 ff ff\n80 7c 24 40 00\n0f 84 2d 01 00 00\n44 89 f1\n48 8b 44 24 28\n31 d2\n40 84 ed\n48 0f 44 da\n45 31 c9\n41 83 7c 24 0c 03\n41 0f 94 c1\n48 83 ec 08\n48 8d 6c 24 2f\n4c 8d 54 24 48\n89 cf\n8b 74 24 0c\n48 89 c2\n4c 89 e9\n49 89 d8\n55\n41 52\n6a ff\nff 74 24 28\nff 74 24 38\ne8 e0 0a 00 00\n48 83 c4 30\nb9 03 00 00 00\n84 c0\n74 73\n41 b5 01\n80 7c 24 27 00\n0f 84 b4 00 00 00\n48 8b 74 24 40\n8b 7c 24 04\ne8 b7 b0 ff ff\n85 c0\nb9 00 00 00 00\n0f 89 b2 00 00 00\ne8 95 ae ff ff\n8b 18\n45 31 ed\n31 ff\nbe e3 29 41 00\nba 05 00 00 00\ne8 bf af ff ff\n48 89 c5\nbf 04 00 00 00\n48 8b 74 24 08\ne8 4d 50 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 ec b3 ff ff\nb9 03 00 00 00\n83 f9 05\n75 6f\neb 7e\n45 31 ed\n83 f9 05\n75 65\neb 74\n45 31 ed\n31 ff\nbe 82 29 41 00\nba 05 00 00 00\ne8 72 af ff ff\n48 89 c3\nbf 04 00 00 00\n48 89 ee\ne8 02 50 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\ne9 3e fc ff ff\n48 8b 6c 24 08\n8b 5c 24 20\n44 8b 6c 24 1c\ne9 dd f7 ff ff\n31 c9\n83 f9 05\n75 17\neb 26\n45 31 ed\ne9 22 fc ff ff\nb9 03 00 00 00\n45 31 ed\n83 f9 05\n74 11\n83 f9 03\n0f 84 5d fb ff ff\n85 c9\n0f 85 cb f8 ff ff\n41 80 7c 24 1e 00\n0f 84 8f 00 00 00\n48 8b 9c 24 c0 01 00 00\n48 89 df\ne8 06 62 00 00\n48 89 44 24 40\n48 89 54 24 48\n48 89 df\ne8 14 62 00 00\n48 89 44 24 50\n48 89 54 24 58\n48 8d 54 24 40\n8b 7c 24 04\n48 8b 6c 24 08\n48 89 ee\ne8 34 68 00 00\n85 c0\n74 49\ne8 7b ad ff ff\n8b 18\n31 ff\nbe fe 26 41 00\nba 05 00 00 00\ne8 a8 ae ff ff\n48 89 44 24 28\nbf 04 00 00 00\n48 89 ee\ne8 36 4f 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 8b 54 24 28\ne8 d3 b2 ff ff\n41 80 7c 24 23 00\n0f 85 f1 00 00 00\n41 80 7c 24 1c 00\n48 8b 8c 24 c0 01 00 00\n74 4e\n8b 41 1c\n3b 84 24 84 00 00 00\n8b 6c 24 04\n75 0c\n8b 41 20\n3b 84 24 88 00 00 00\n74 36\n48 8b 44 24 30\n44 0f b6 00\n4c 8d 4c 24 68\n4c 89 e7\n48 8b 74 24 08\n89 ea\ne8 ee 01 00 00\n83 f8 ff\n0f 84 9f 00 00 00\n85 c0\n75 08\n81 64 24 3c ff f1 ff ff\n8b 6c 24 04\n41 80 7c 24 26 00\n74 4a\n80 bc 24 80 00 00 00 00\n78 40\ne8 1e af ff ff\n8b 6c 24 04\n85 c0\n74 33\nba 80 01 00 00\n89 ef\n48 8b 74 24 08\ne8 45 0c 00 00\n8b 6c 24 04\n85 c0\n75 1a\n8b 54 24 1c\nf7 d2\n23 54 24 20\n89 ef\n48 8b 74 24 08\ne8 27 0c 00 00\n8b 6c 24 04\n41 80 7c 24 1d 00\n75 08\n41 80 7c 24 18 00\n74 35\n48 8b 7c 24 10\n44 89 f6\n48 8b 54 24 08\n89 e9\n44 8b 44 24 3c\ne8 aa 12 00 00\n85 c0\n0f 84 d5 f9 ff ff\n41 80 7c 24 23 00\n0f 84 c9 f9 ff ff\n45 31 ed\ne9 c1 f9 ff ff\n41 80 7c 24 2a 00\n74 0e\n41 8b 54 24 10\n48 8b 7c 24 08\n89 ee\neb 1f\n41 80 7c 24 1f 00\n74 26\ne8 6b e8 ff ff\nf7 d0\n25 b6 01 00 00\n48 8b 7c 24 08\n8b 74 24 04\n89 c2\ne8 e4 12 00 00\n85 c0\n0f 84 7f f9 ff ff\neb b4\n8b 5c 24 1c\n85 db\n0f 84 71 f9 ff ff\ne8 39 e8 ff ff\nf7 d0\n85 c3\n0f 84 62 f9 ff ff\n8b 7c 24 04\n48 8b 74 24 08\n8b 54 24 20\ne8 6d 0b 00 00\n85 c0\n0f 84 48 f9 ff ff\ne8 c0 ab ff ff\n8b 18\n31 ff\nbe 16 27 41 00\nba 05 00 00 00\ne8 ed ac ff ff\n48 89 c5\nbf 04 00 00 00\n48 8b 74 24 08\ne8 7b 4d 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 1a b1 ff ff\n41 80 7c 24 23 00\n0f 84 01 f9 ff ff\ne9 33 ff ff ff\n'
p747
S'.text:0000000000406b90\n.text:0000000000406b91\n.text:0000000000406b93\n.text:0000000000406b95\n.text:0000000000406b97\n.text:0000000000406b99\n.text:0000000000406b9a\n.text:0000000000406ba1\n.text:0000000000406ba6\n.text:0000000000406ba9\n.text:0000000000406bab\n.text:0000000000406bae\n.text:0000000000406bb1\n.text:0000000000406bb4\n.text:0000000000406bbc\n.text:0000000000406bbf\n.text:0000000000406bc3\n.text:0000000000406bc8\n.text:0000000000406bca\n.text:0000000000406bd0\n.text:0000000000406bd4\n.text:0000000000406bd7\n.text:0000000000406bd9\n.text:0000000000406bde\n.text:0000000000406be0\n.text:0000000000406be2\n.text:0000000000406be7\n.text:0000000000406bef\n.text:0000000000406bf2\n.text:0000000000406bf4\n.text:0000000000406bf9\n.text:0000000000406bfb\n.text:0000000000406c01\n.text:0000000000406c06\n.text:0000000000406c08\n.text:0000000000406c0b\n.text:0000000000406c0d\n.text:0000000000406c12\n.text:0000000000406c17\n.text:0000000000406c1c\n.text:0000000000406c1f\n.text:0000000000406c24\n.text:0000000000406c29\n.text:0000000000406c2c\n.text:0000000000406c31\n.text:0000000000406c34\n.text:0000000000406c36\n.text:0000000000406c38\n.text:0000000000406c3a\n.text:0000000000406c3d\n.text:0000000000406c42\n.text:0000000000406c47\n.text:0000000000406c49\n.text:0000000000406c4c\n.text:0000000000406c4e\n.text:0000000000406c53\n.text:0000000000406c58\n.text:0000000000406c5d\n.text:0000000000406c60\n.text:0000000000406c65\n.text:0000000000406c68\n.text:0000000000406c6d\n.text:0000000000406c70\n.text:0000000000406c72\n.text:0000000000406c74\n.text:0000000000406c76\n.text:0000000000406c79\n.text:0000000000406c7e\n.text:0000000000406c83\n.text:0000000000406c8b\n.text:0000000000406c8f\n.text:0000000000406c97\n.text:0000000000406c9d\n.text:0000000000406ca0\n.text:0000000000406ca8\n.text:0000000000406cae\n.text:0000000000406cb3\n.text:0000000000406cb6\n.text:0000000000406cbc\n.text:0000000000406cbf\n.text:0000000000406cc2\n.text:0000000000406cc4\n.text:0000000000406cc6\n.text:0000000000406ccb\n.text:0000000000406ccd\n.text:0000000000406cd1\n.text:0000000000406cd6\n.text:0000000000406cda\n.text:0000000000406cdf\n.text:0000000000406ce3\n.text:0000000000406ce8\n.text:0000000000406cea\n.text:0000000000406cec\n.text:0000000000406cf1\n.text:0000000000406cf5\n.text:0000000000406cfb\n.text:0000000000406cfe\n.text:0000000000406d04\n.text:0000000000406d09\n.text:0000000000406d0f\n.text:0000000000406d15\n.text:0000000000406d18\n.text:0000000000406d1d\n.text:0000000000406d20\n.text:0000000000406d25\n.text:0000000000406d2a\n.text:0000000000406d2c\n.text:0000000000406d32\n.text:0000000000406d35\n.text:0000000000406d3a\n.text:0000000000406d3d\n.text:0000000000406d43\n.text:0000000000406d48\n.text:0000000000406d4b\n.text:0000000000406d4d\n.text:0000000000406d52\n.text:0000000000406d57\n.text:0000000000406d5c\n.text:0000000000406d5f\n.text:0000000000406d64\n.text:0000000000406d69\n.text:0000000000406d6c\n.text:0000000000406d71\n.text:0000000000406d74\n.text:0000000000406d76\n.text:0000000000406d78\n.text:0000000000406d7a\n.text:0000000000406d7d\n.text:0000000000406d82\n.text:0000000000406d85\n.text:0000000000406d88\n.text:0000000000406d8d\n.text:0000000000406d8f\n.text:0000000000406d91\n.text:0000000000406d96\n.text:0000000000406d98\n.text:0000000000406d9b\n.text:0000000000406d9d\n.text:0000000000406da2\n.text:0000000000406da7\n.text:0000000000406dac\n.text:0000000000406daf\n.text:0000000000406db4\n.text:0000000000406db7\n.text:0000000000406dbc\n.text:0000000000406dbf\n.text:0000000000406dc1\n.text:0000000000406dc3\n.text:0000000000406dc5\n.text:0000000000406dc8\n.text:0000000000406dcd\n.text:0000000000406dd0\n.text:0000000000406dd5\n.text:0000000000406dd9\n.text:0000000000406ddd\n.text:0000000000406de0\n.text:0000000000406de7\n.text:0000000000406de8\n.text:0000000000406dea\n.text:0000000000406dec\n.text:0000000000406dee\n.text:0000000000406df0\n.text:0000000000406df1\n.text:0000000000406df2\n.text:0000000000406df7\n.text:0000000000406dfb\n.text:0000000000406e01\n.text:0000000000406e06\n.text:0000000000406e0b\n.text:0000000000406e0e\n.text:0000000000406e10\n.text:0000000000406e15\n.text:0000000000406e18\n.text:0000000000406e1d\n.text:0000000000406e1f\n.text:0000000000406e24\n.text:0000000000406e27\n.text:0000000000406e2b\n.text:0000000000406e31\n.text:0000000000406e33\n.text:0000000000406e35\n.text:0000000000406e37\n.text:0000000000406e39\n.text:0000000000406e3b\n.text:0000000000406e3d\n.text:0000000000406e3f\n.text:0000000000406e41\n.text:0000000000406e46\n.text:0000000000406e48\n.text:0000000000406e4a\n.text:0000000000406e4c\n.text:0000000000406e52\n.text:0000000000406e55\n.text:0000000000406e57\n.text:0000000000406e5c\n.text:0000000000406e5e\n.text:0000000000406e61\n.text:0000000000406e66\n.text:0000000000406e68\n.text:0000000000406e6a\n.text:0000000000406e70\n.text:0000000000406e76\n.text:0000000000406e79\n.text:0000000000406e7e\n.text:0000000000406e80\n.text:0000000000406e86\n.text:0000000000406e8c\n.text:0000000000406e92\n.text:0000000000406e96\n.text:0000000000406e9a\n.text:0000000000406e9f\n.text:0000000000406ea2\n.text:0000000000406ea7\n.text:0000000000406ea9\n.text:0000000000406eaf\n.text:0000000000406eb3\n.text:0000000000406eb6\n.text:0000000000406eb8\n.text:0000000000406ebd\n.text:0000000000406ec2\n.text:0000000000406ec7\n.text:0000000000406ece\n.text:0000000000406ed3\n.text:0000000000406ed6\n.text:0000000000406edb\n.text:0000000000406edd\n.text:0000000000406ee3\n.text:0000000000406ee9\n.text:0000000000406eee\n.text:0000000000406ef0\n.text:0000000000406ef3\n.text:0000000000406ef7\n.text:0000000000406efc\n.text:0000000000406efe\n.text:0000000000406f03\n.text:0000000000406f05\n.text:0000000000406f08\n.text:0000000000406f0e\n.text:0000000000406f10\n.text:0000000000406f16\n.text:0000000000406f1a\n.text:0000000000406f1c\n.text:0000000000406f1f\n.text:0000000000406f21\n.text:0000000000406f24\n.text:0000000000406f29\n.text:0000000000406f2c\n.text:0000000000406f2e\n.text:0000000000406f33\n.text:0000000000406f37\n.text:0000000000406f3c\n.text:0000000000406f41\n.text:0000000000406f44\n.text:0000000000406f46\n.text:0000000000406f4c\n.text:0000000000406f51\n.text:0000000000406f56\n.text:0000000000406f58\n.text:0000000000406f5e\n.text:0000000000406f63\n.text:0000000000406f69\n.text:0000000000406f6b\n.text:0000000000406f6d\n.text:0000000000406f72\n.text:0000000000406f77\n.text:0000000000406f7c\n.text:0000000000406f7f\n.text:0000000000406f84\n.text:0000000000406f89\n.text:0000000000406f8e\n.text:0000000000406f91\n.text:0000000000406f96\n.text:0000000000406f98\n.text:0000000000406f9b\n.text:0000000000406f9e\n.text:0000000000406fa3\n.text:0000000000406fa8\n.text:0000000000406fab\n.text:0000000000406fb1\n.text:0000000000406fb7\n.text:0000000000406fbc\n.text:0000000000406fc1\n.text:0000000000406fc6\n.text:0000000000406fc9\n.text:0000000000406fce\n.text:0000000000406fd0\n.text:0000000000406fd4\n.text:0000000000406fd8\n.text:0000000000406fde\n.text:0000000000406fe3\n.text:0000000000406fe6\n.text:0000000000406feb\n.text:0000000000406fef\n.text:0000000000406ff4\n.text:0000000000406ffa\n.text:0000000000406ffd\n.text:0000000000406fff\n.text:0000000000407005\n.text:000000000040700a\n.text:000000000040700f\n.text:0000000000407013\n.text:0000000000407015\n.text:000000000040701a\n.text:000000000040701c\n.text:0000000000407022\n.text:0000000000407027\n.text:0000000000407029\n.text:000000000040702c\n.text:000000000040702e\n.text:0000000000407033\n.text:0000000000407038\n.text:000000000040703d\n.text:0000000000407040\n.text:0000000000407045\n.text:000000000040704a\n.text:000000000040704f\n.text:0000000000407052\n.text:0000000000407054\n.text:0000000000407056\n.text:0000000000407058\n.text:000000000040705b\n.text:0000000000407060\n.text:0000000000407063\n.text:0000000000407067\n.text:000000000040706c\n.text:000000000040706e\n.text:0000000000407073\n.text:0000000000407075\n.text:000000000040707b\n.text:0000000000407080\n.text:0000000000407082\n.text:0000000000407085\n.text:0000000000407087\n.text:000000000040708c\n.text:0000000000407091\n.text:0000000000407096\n.text:0000000000407099\n.text:000000000040709e\n.text:00000000004070a3\n.text:00000000004070a8\n.text:00000000004070ab\n.text:00000000004070ad\n.text:00000000004070af\n.text:00000000004070b1\n.text:00000000004070b4\n.text:00000000004070b9\n.text:00000000004070be\n.text:00000000004070c1\n.text:00000000004070c3\n.text:00000000004070c8\n.text:00000000004070cb\n.text:00000000004070cd\n.text:00000000004070d3\n.text:00000000004070d9\n.text:00000000004070dc\n.text:00000000004070de\n.text:00000000004070e1\n.text:00000000004070e6\n.text:00000000004070eb\n.text:00000000004070f0\n.text:00000000004070f3\n.text:00000000004070f8\n.text:00000000004070fb\n.text:0000000000407100\n.text:0000000000407103\n.text:0000000000407105\n.text:0000000000407107\n.text:000000000040710a\n.text:000000000040710d\n.text:0000000000407112\n.text:0000000000407115\n.text:000000000040711a\n.text:000000000040711f\n.text:0000000000407124\n.text:0000000000407128\n.text:000000000040712b\n.text:000000000040712e\n.text:0000000000407134\n.text:000000000040713a\n.text:0000000000407140\n.text:0000000000407144\n.text:0000000000407147\n.text:000000000040714c\n.text:000000000040714e\n.text:0000000000407150\n.text:0000000000407156\n.text:000000000040715c\n.text:0000000000407161\n.text:0000000000407163\n.text:0000000000407167\n.text:000000000040716a\n.text:000000000040716c\n.text:0000000000407171\n.text:0000000000407176\n.text:000000000040717b\n.text:000000000040717e\n.text:0000000000407180\n.text:0000000000407185\n.text:000000000040718a\n.text:000000000040718f\n.text:0000000000407192\n.text:0000000000407197\n.text:000000000040719c\n.text:00000000004071a1\n.text:00000000004071a4\n.text:00000000004071a9\n.text:00000000004071ac\n.text:00000000004071ae\n.text:00000000004071b0\n.text:00000000004071b4\n.text:00000000004071b7\n.text:00000000004071ba\n.text:00000000004071bd\n.text:00000000004071c2\n.text:00000000004071c5\n.text:00000000004071c9\n.text:00000000004071ce\n.text:00000000004071d1\n.text:00000000004071d7\n.text:00000000004071dd\n.text:00000000004071e2\n.text:00000000004071e7\n.text:00000000004071ea\n.text:00000000004071f1\n.text:00000000004071f9\n.text:00000000004071fe\n.text:0000000000407201\n.text:0000000000407204\n.text:0000000000407209\n.text:0000000000407210\n.text:0000000000407213\n.text:000000000040721b\n.text:0000000000407225\n.text:0000000000407228\n.text:000000000040722d\n.text:0000000000407232\n.text:0000000000407236\n.text:0000000000407239\n.text:000000000040723d\n.text:0000000000407242\n.text:0000000000407244\n.text:0000000000407246\n.text:000000000040724b\n.text:000000000040724e\n.text:0000000000407253\n.text:000000000040725b\n.text:0000000000407260\n.text:0000000000407266\n.text:000000000040726d\n.text:0000000000407270\n.text:0000000000407276\n.text:000000000040727a\n.text:000000000040727c\n.text:0000000000407281\n.text:0000000000407284\n.text:0000000000407287\n.text:000000000040728a\n.text:000000000040728d\n.text:0000000000407293\n.text:0000000000407295\n.text:000000000040729b\n.text:00000000004072a5\n.text:00000000004072a8\n.text:00000000004072af\n.text:00000000004072b7\n.text:00000000004072bc\n.text:00000000004072bf\n.text:00000000004072c2\n.text:00000000004072c7\n.text:00000000004072ce\n.text:00000000004072d1\n.text:00000000004072d4\n.text:00000000004072d7\n.text:00000000004072dc\n.text:00000000004072df\n.text:00000000004072e7\n.text:00000000004072ee\n.text:00000000004072f0\n.text:00000000004072f8\n.text:00000000004072fb\n.text:00000000004072ff\n.text:0000000000407303\n.text:0000000000407308\n.text:000000000040730a\n.text:000000000040730d\n.text:0000000000407310\n.text:0000000000407313\n.text:0000000000407317\n.text:000000000040731a\n.text:000000000040731e\n.text:0000000000407320\n.text:0000000000407325\n.text:000000000040732a\n.text:000000000040732d\n.text:0000000000407330\n.text:0000000000407333\n.text:0000000000407338\n.text:000000000040733d\n.text:0000000000407340\n.text:0000000000407345\n.text:000000000040734b\n.text:0000000000407351\n.text:0000000000407359\n.text:000000000040735c\n.text:0000000000407360\n.text:0000000000407362\n.text:0000000000407367\n.text:000000000040736c\n.text:000000000040736e\n.text:0000000000407373\n.text:0000000000407376\n.text:0000000000407379\n.text:000000000040737c\n.text:000000000040737e\n.text:0000000000407382\n.text:0000000000407386\n.text:0000000000407388\n.text:000000000040738d\n.text:0000000000407391\n.text:0000000000407393\n.text:0000000000407395\n.text:0000000000407398\n.text:000000000040739d\n.text:00000000004073a0\n.text:00000000004073a6\n.text:00000000004073ab\n.text:00000000004073b0\n.text:00000000004073b3\n.text:00000000004073b8\n.text:00000000004073bd\n.text:00000000004073c3\n.text:00000000004073c6\n.text:00000000004073cb\n.text:00000000004073cd\n.text:00000000004073d0\n.text:00000000004073d4\n.text:00000000004073d7\n.text:00000000004073dd\n.text:00000000004073e1\n.text:00000000004073e5\n.text:00000000004073ea\n.text:00000000004073ef\n.text:00000000004073f1\n.text:00000000004073f5\n.text:00000000004073f8\n.text:00000000004073fb\n.text:00000000004073fe\n.text:00000000004073ff\n.text:0000000000407401\n.text:0000000000407403\n.text:0000000000407407\n.text:000000000040740b\n.text:0000000000407410\n.text:0000000000407414\n.text:0000000000407419\n.text:000000000040741b\n.text:000000000040741d\n.text:0000000000407420\n.text:0000000000407425\n.text:000000000040742b\n.text:0000000000407430\n.text:0000000000407434\n.text:0000000000407439\n.text:000000000040743b\n.text:0000000000407440\n.text:0000000000407446\n.text:000000000040744b\n.text:000000000040744d\n.text:0000000000407450\n.text:0000000000407452\n.text:0000000000407457\n.text:000000000040745c\n.text:0000000000407461\n.text:0000000000407464\n.text:0000000000407469\n.text:000000000040746e\n.text:0000000000407473\n.text:0000000000407476\n.text:0000000000407478\n.text:000000000040747a\n.text:000000000040747c\n.text:000000000040747f\n.text:0000000000407484\n.text:0000000000407489\n.text:000000000040748c\n.text:000000000040748e\n.text:0000000000407490\n.text:0000000000407493\n.text:0000000000407496\n.text:0000000000407498\n.text:000000000040749a\n.text:000000000040749d\n.text:000000000040749f\n.text:00000000004074a4\n.text:00000000004074a9\n.text:00000000004074ae\n.text:00000000004074b1\n.text:00000000004074b6\n.text:00000000004074b9\n.text:00000000004074be\n.text:00000000004074c1\n.text:00000000004074c3\n.text:00000000004074c5\n.text:00000000004074c7\n.text:00000000004074cc\n.text:00000000004074d1\n.text:00000000004074d5\n.text:00000000004074da\n.text:00000000004074df\n.text:00000000004074e1\n.text:00000000004074e4\n.text:00000000004074e6\n.text:00000000004074e8\n.text:00000000004074eb\n.text:00000000004074f0\n.text:00000000004074f5\n.text:00000000004074f8\n.text:00000000004074fb\n.text:00000000004074fd\n.text:0000000000407500\n.text:0000000000407506\n.text:0000000000407508\n.text:000000000040750e\n.text:0000000000407514\n.text:000000000040751a\n.text:0000000000407522\n.text:0000000000407525\n.text:000000000040752a\n.text:000000000040752f\n.text:0000000000407534\n.text:0000000000407537\n.text:000000000040753c\n.text:0000000000407541\n.text:0000000000407546\n.text:000000000040754b\n.text:000000000040754f\n.text:0000000000407554\n.text:0000000000407557\n.text:000000000040755c\n.text:000000000040755e\n.text:0000000000407560\n.text:0000000000407565\n.text:0000000000407567\n.text:0000000000407569\n.text:000000000040756e\n.text:0000000000407573\n.text:0000000000407578\n.text:000000000040757d\n.text:0000000000407582\n.text:0000000000407585\n.text:000000000040758a\n.text:000000000040758d\n.text:000000000040758f\n.text:0000000000407591\n.text:0000000000407593\n.text:0000000000407598\n.text:000000000040759d\n.text:00000000004075a3\n.text:00000000004075a9\n.text:00000000004075af\n.text:00000000004075b7\n.text:00000000004075b9\n.text:00000000004075bc\n.text:00000000004075c3\n.text:00000000004075c7\n.text:00000000004075c9\n.text:00000000004075cc\n.text:00000000004075d3\n.text:00000000004075d5\n.text:00000000004075da\n.text:00000000004075de\n.text:00000000004075e3\n.text:00000000004075e6\n.text:00000000004075eb\n.text:00000000004075ed\n.text:00000000004075f2\n.text:00000000004075f5\n.text:00000000004075fb\n.text:00000000004075fd\n.text:00000000004075ff\n.text:0000000000407607\n.text:000000000040760b\n.text:0000000000407611\n.text:0000000000407613\n.text:000000000040761b\n.text:000000000040761d\n.text:0000000000407622\n.text:0000000000407626\n.text:0000000000407628\n.text:000000000040762a\n.text:000000000040762f\n.text:0000000000407631\n.text:0000000000407636\n.text:000000000040763b\n.text:000000000040763f\n.text:0000000000407641\n.text:0000000000407643\n.text:0000000000407647\n.text:0000000000407649\n.text:000000000040764d\n.text:000000000040764f\n.text:0000000000407654\n.text:0000000000407659\n.text:000000000040765d\n.text:0000000000407663\n.text:0000000000407665\n.text:000000000040766b\n.text:000000000040766d\n.text:0000000000407672\n.text:0000000000407675\n.text:000000000040767a\n.text:000000000040767c\n.text:0000000000407681\n.text:0000000000407686\n.text:0000000000407688\n.text:000000000040768e\n.text:0000000000407694\n.text:000000000040769a\n.text:000000000040769d\n.text:00000000004076a2\n.text:00000000004076a8\n.text:00000000004076aa\n.text:00000000004076af\n.text:00000000004076b4\n.text:00000000004076b6\n.text:00000000004076b8\n.text:00000000004076be\n.text:00000000004076c0\n.text:00000000004076c5\n.text:00000000004076c7\n.text:00000000004076cc\n.text:00000000004076d1\n.text:00000000004076d5\n.text:00000000004076d7\n.text:00000000004076dc\n.text:00000000004076de\n.text:00000000004076e4\n.text:00000000004076e6\n.text:00000000004076ea\n.text:00000000004076ec\n.text:00000000004076f2\n.text:00000000004076f7\n.text:00000000004076f9\n.text:00000000004076fb\n.text:0000000000407701\n.text:0000000000407705\n.text:000000000040770a\n.text:000000000040770e\n.text:0000000000407713\n.text:0000000000407715\n.text:000000000040771b\n.text:0000000000407720\n.text:0000000000407722\n.text:0000000000407724\n.text:0000000000407729\n.text:000000000040772e\n.text:0000000000407733\n.text:0000000000407736\n.text:000000000040773b\n.text:0000000000407740\n.text:0000000000407745\n.text:0000000000407748\n.text:000000000040774a\n.text:000000000040774c\n.text:000000000040774e\n.text:0000000000407751\n.text:0000000000407756\n.text:000000000040775c\n.text:0000000000407762\n'
p748
tp749
sS'get_stat_atime_ns'
p750
(S'\n__stdcall get_stat_atime_ns(stat * st)\n'
p751
V\u000along get_stat_atime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_atim).tv_nsec;\u000a}\u000a\u000a
p752
S'MOV RAX,qword ptr [RDI + 0x50]\nRET\n'
p753
S'48 8b 47 50\nc3\n'
p754
S'.text:000000000040d6f0\n.text:000000000040d6f4\n'
p755
tp756
sS'mdir_name'
p757
(S'\n__stdcall mdir_name(char * file)\n'
p758
V\u000achar * mdir_name(char *file)\u000a\u000a{\u000a  size_t __n;\u000a  char *__dest;\u000a  \u000a  __n = dir_len(file);\u000a  __dest = (char *)malloc(__n + 1 + (ulong)(__n == 0));\u000a  if (__dest == (char *)0x0) {\u000a    __dest = (char *)0x0;\u000a  }\u000a  else {\u000a    memcpy(__dest,file,__n);\u000a    if (__n == 0) {\u000a      *__dest = '.';\u000a      __n = 1;\u000a    }\u000a    __dest[__n] = 0;\u000a  }\u000a  return __dest;\u000a}\u000a\u000a
p759
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RDI\nCALL 0x00409250\nMOV RBX,RAX\nXOR EAX,EAX\nTEST RBX,RBX\nSETZ AL\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00402760\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004092de\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x004026d0\nTEST RBX,RBX\nJNZ 0x004092d7\nMOV byte ptr [R14 + RBX*0x1],0x2e\nMOV EBX,0x1\nMOV byte ptr [R14 + RBX*0x1],0x0\nJMP 0x004092e1\nXOR R14D,R14D\nMOV RAX,R14\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p760
S'41 57\n41 56\n53\n49 89 ff\ne8 b3 ff ff ff\n48 89 c3\n31 c0\n48 85 db\n0f 94 c0\n48 8d 7c 03 01\ne8 ae 94 ff ff\n49 89 c6\n4d 85 f6\n74 24\n4c 89 f7\n4c 89 fe\n48 89 da\ne8 08 94 ff ff\n48 85 db\n75 0a\n41 c6 04 1e 2e\nbb 01 00 00 00\n41 c6 04 1e 00\neb 03\n45 31 f6\n4c 89 f0\n5b\n41 5e\n41 5f\nc3\n'
p761
S'.text:0000000000409290\n.text:0000000000409292\n.text:0000000000409294\n.text:0000000000409295\n.text:0000000000409298\n.text:000000000040929d\n.text:00000000004092a0\n.text:00000000004092a2\n.text:00000000004092a5\n.text:00000000004092a8\n.text:00000000004092ad\n.text:00000000004092b2\n.text:00000000004092b5\n.text:00000000004092b8\n.text:00000000004092ba\n.text:00000000004092bd\n.text:00000000004092c0\n.text:00000000004092c3\n.text:00000000004092c8\n.text:00000000004092cb\n.text:00000000004092cd\n.text:00000000004092d2\n.text:00000000004092d7\n.text:00000000004092dc\n.text:00000000004092de\n.text:00000000004092e1\n.text:00000000004092e4\n.text:00000000004092e5\n.text:00000000004092e7\n.text:00000000004092e9\n'
p762
tp763
sS'c_isgraph'
p764
(S'\n__stdcall c_isgraph()\n'
p765
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p766
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p767
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p768
S'.text:000000000040fa60\n.text:000000000040fa63\n.text:000000000040fa66\n.text:000000000040fa69\n'
p769
tp770
sS'copy_acl'
p771
(S'\n__stdcall copy_acl(char * src_name, char * dst_name)\n'
p772
V\u000aint copy_acl(char *src_name,char *dst_name)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  char *pcVar3;\u000a  uint *puVar4;\u000a  char *arg;\u000a  undefined8 uVar5;\u000a  \u000a  iVar2 = qcopy_acl(src_name,dst_name);\u000a  if (iVar2 == -1) {\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    uVar5 = dcgettext(0,"preserving permissions for %s",5);\u000a    pcVar3 = quote(arg);\u000a  }\u000a  else {\u000a    if (iVar2 != -2) {\u000a      return iVar2;\u000a    }\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    pcVar3 = quote(src_name);\u000a    uVar5 = 0x412558;\u000a  }\u000a  error(0,(ulong)uVar1,uVar5,pcVar3);\u000a  return iVar2;\u000a}\u000a\u000a
p773
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nCALL 0x0040b240\nMOV EBP,EAX\nCMP EBP,-0x1\nJZ 0x0040896f\nCMP EBP,-0x2\nJNZ 0x004089a5\nCALL 0x004022e0\nMOV R14D,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x0040c6e0\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x412558\nXOR EAX,EAX\nMOV ESI,R14D\nJMP 0x004089a0\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412716\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RDI,R14\nCALL 0x0040c6e0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBX\nCALL 0x00402870\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p774
S'55\n41 57\n41 56\n53\n50\n49 89 d6\n48 89 fb\ne8 fe 28 00 00\n89 c5\n83 fd ff\n74 26\n83 fd fe\n75 57\ne8 8d 99 ff ff\n44 8b 30\n48 89 df\ne8 82 3d 00 00\n48 89 c1\n31 ff\nba 58 25 41 00\n31 c0\n44 89 f6\neb 31\ne8 6c 99 ff ff\n44 8b 38\n31 ff\nbe 16 27 41 00\nba 05 00 00 00\ne8 98 9a ff ff\n48 89 c3\n4c 89 f7\ne8 4d 3d 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 da\ne8 cb 9e ff ff\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p775
S'.text:0000000000408930\n.text:0000000000408931\n.text:0000000000408933\n.text:0000000000408935\n.text:0000000000408936\n.text:0000000000408937\n.text:000000000040893a\n.text:000000000040893d\n.text:0000000000408942\n.text:0000000000408944\n.text:0000000000408947\n.text:0000000000408949\n.text:000000000040894c\n.text:000000000040894e\n.text:0000000000408953\n.text:0000000000408956\n.text:0000000000408959\n.text:000000000040895e\n.text:0000000000408961\n.text:0000000000408963\n.text:0000000000408968\n.text:000000000040896a\n.text:000000000040896d\n.text:000000000040896f\n.text:0000000000408974\n.text:0000000000408977\n.text:0000000000408979\n.text:000000000040897e\n.text:0000000000408983\n.text:0000000000408988\n.text:000000000040898b\n.text:000000000040898e\n.text:0000000000408993\n.text:0000000000408996\n.text:0000000000408998\n.text:000000000040899a\n.text:000000000040899d\n.text:00000000004089a0\n.text:00000000004089a5\n.text:00000000004089a7\n.text:00000000004089ab\n.text:00000000004089ac\n.text:00000000004089ae\n.text:00000000004089b0\n.text:00000000004089b1\n'
p776
tp777
sS'write'
p778
(S'\n__stdcall write(int __fd, void * __buf, size_t __n)\n'
p779
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t write(int __fd,void *__buf,size_t __n)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_write_006180b8)();\u000a  return sVar1;\u000a}\u000a\u000a
p780
S'JMP qword ptr [0x006180b8]\n'
p781
S'ff 25 12 5d 21 00\n'
p782
S'.plt:00000000004023a0\n'
p783
tp784
sS'hash_get_next'
p785
(S'\n__stdcall hash_get_next(Hash_table * table, void * entry)\n'
p786
V\u000avoid * hash_get_next(Hash_table *table,void *entry)\u000a\u000a{\u000a  hash_entry *phVar1;\u000a  hash_entry *phVar2;\u000a  hash_entry *phVar3;\u000a  \u000a  phVar2 = safe_hasher(table,entry);\u000a  phVar3 = phVar2;\u000a  while( true ) {\u000a    phVar1 = phVar3->next;\u000a    if ((phVar3->data == entry) && (phVar1 != (hash_entry *)0x0)) break;\u000a    phVar3 = phVar1;\u000a    if (phVar1 == (hash_entry *)0x0) {\u000a      do {\u000a        phVar2 = phVar2 + 1;\u000a        if (table->bucket_limit <= phVar2) {\u000a          return (void *)0x0;\u000a        }\u000a      } while (phVar2->data == (void *)0x0);\u000a      return phVar2->data;\u000a    }\u000a  }\u000a  return phVar1->data;\u000a}\u000a\u000a
p787
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV R14,RDI\nCALL 0x00409a60\nMOV RCX,RAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RSI,RCX\nMOV RCX,qword ptr [RSI + 0x8]\nTEST RCX,RCX\nSETZ DL\nCMP qword ptr [RSI],RBX\nJNZ 0x00409b06\nTEST DL,DL\nJZ 0x00409b33\nTEST RCX,RCX\nJNZ 0x00409af0\nMOV RDX,qword ptr [R14 + 0x8]\nADD RAX,0x10\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP RAX,RDX\nJNC 0x00409b38\nMOV RCX,qword ptr [RAX]\nADD RAX,0x10\nTEST RCX,RCX\nJZ 0x00409b20\nJMP 0x00409b3a\nMOV RCX,qword ptr [RCX]\nJMP 0x00409b3a\nXOR ECX,ECX\nMOV RAX,RCX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p788
S'41 56\n53\n50\n48 89 f3\n49 89 fe\ne8 81 ff ff ff\n48 89 c1\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 ce\n48 8b 4e 08\n48 85 c9\n0f 94 c2\n48 39 1e\n75 04\n84 d2\n74 2d\n48 85 c9\n75 e5\n49 8b 56 08\n48 83 c0 10\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 39 d0\n73 13\n48 8b 08\n48 83 c0 10\n48 85 c9\n74 ef\neb 07\n48 8b 09\neb 02\n31 c9\n48 89 c8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p789
S'.text:0000000000409ad0\n.text:0000000000409ad2\n.text:0000000000409ad3\n.text:0000000000409ad4\n.text:0000000000409ad7\n.text:0000000000409ada\n.text:0000000000409adf\n.text:0000000000409ae2\n.text:0000000000409af0\n.text:0000000000409af3\n.text:0000000000409af7\n.text:0000000000409afa\n.text:0000000000409afd\n.text:0000000000409b00\n.text:0000000000409b02\n.text:0000000000409b04\n.text:0000000000409b06\n.text:0000000000409b09\n.text:0000000000409b0b\n.text:0000000000409b0f\n.text:0000000000409b13\n.text:0000000000409b20\n.text:0000000000409b23\n.text:0000000000409b25\n.text:0000000000409b28\n.text:0000000000409b2c\n.text:0000000000409b2f\n.text:0000000000409b31\n.text:0000000000409b33\n.text:0000000000409b36\n.text:0000000000409b38\n.text:0000000000409b3a\n.text:0000000000409b3d\n.text:0000000000409b41\n.text:0000000000409b42\n.text:0000000000409b44\n'
p790
tp791
sS'copy_dir'
p792
(S'\n__stdcall copy_dir(char * src_name_in, char * dst_name_in, stat * src_sb, dir_list * ancestors, cp_options * x)\n'
p793
V\u000a_Bool copy_dir(char *src_name_in,char *dst_name_in,stat *src_sb,dir_list *ancestors,cp_options *x)\u000a\u000a{\u000a  uint uVar1;\u000a  byte bVar2;\u000a  _Bool _Var3;\u000a  char *abase;\u000a  char *src_name;\u000a  char *dst_name;\u000a  size_t sVar4;\u000a  uint *puVar5;\u000a  undefined8 uVar6;\u000a  byte bVar7;\u000a  undefined4 *in_R9;\u000a  byte bVar8;\u000a  bool bVar9;\u000a  byte *in_stack_00000008;\u000a  byte *in_stack_00000010;\u000a  cp_options non_command_line_options;\u000a  _Bool local_a7;\u000a  byte local_a6;\u000a  byte local_a5;\u000a  uint local_a4;\u000a  char *local_a0;\u000a  char *local_98;\u000a  char *local_90;\u000a  dir_list *local_88;\u000a  cp_options *local_80;\u000a  undefined4 local_78;\u000a  undefined4 local_74;\u000a  undefined4 uStack112;\u000a  undefined4 uStack108;\u000a  undefined4 local_68;\u000a  undefined4 uStack100;\u000a  undefined4 uStack96;\u000a  undefined4 uStack92;\u000a  undefined4 local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  undefined4 local_48;\u000a  undefined4 uStack68;\u000a  undefined4 uStack64;\u000a  undefined4 uStack60;\u000a  undefined8 local_38;\u000a  \u000a  local_38 = *(undefined8 *)(in_R9 + 0x10);\u000a  local_78 = *in_R9;\u000a  local_74 = in_R9[1];\u000a  uStack112 = in_R9[2];\u000a  uStack108 = in_R9[3];\u000a  local_68 = in_R9[4];\u000a  uStack100 = in_R9[5];\u000a  uStack96 = in_R9[6];\u000a  uStack92 = in_R9[7];\u000a  local_58 = in_R9[8];\u000a  uStack84 = in_R9[9];\u000a  uStack80 = in_R9[10];\u000a  uStack76 = in_R9[0xb];\u000a  local_48 = in_R9[0xc];\u000a  uStack68 = in_R9[0xd];\u000a  uStack64 = in_R9[0xe];\u000a  uStack60 = in_R9[0xf];\u000a  local_90 = dst_name_in;\u000a  local_88 = ancestors;\u000a  local_80 = x;\u000a  abase = savedir(src_name_in);\u000a  if (abase == (char *)0x0) {\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    bVar9 = false;\u000a    uVar6 = dcgettext(0,"cannot access %s",5);\u000a    abase = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar1,uVar6,abase);\u000a  }\u000a  else {\u000a    if (in_R9[1] == 3) {\u000a      local_74 = 2;\u000a    }\u000a    bVar8 = 1;\u000a    if (*abase == 0) {\u000a      bVar7 = 0;\u000a      local_a0 = abase;\u000a    }\u000a    else {\u000a      bVar7 = 0;\u000a      local_a4 = (uint)src_sb & 0xff;\u000a      local_a0 = abase;\u000a      local_98 = src_name_in;\u000a      do {\u000a        local_a6 = bVar8;\u000a        src_name = file_name_concat(local_98,abase,(char **)0x0);\u000a        dst_name = file_name_concat(local_90,abase,(char **)0x0);\u000a        local_a7 = (_Bool)*in_stack_00000008;\u000a        _Var3 = copy_internal(src_name,dst_name,(stat *)(ulong)local_a4,local_88,local_80,\u000a                              (_Bool *)&local_78,(_Bool *)0x0,&local_a7);\u000a        bVar2 = local_a5;\u000a        bVar8 = _Var3 & local_a6;\u000a        *in_stack_00000010 = *in_stack_00000010 | local_a5;\u000a        free(dst_name);\u000a        free(src_name);\u000a        if (bVar2 != 0) break;\u000a        bVar7 = bVar7 | local_a7;\u000a        sVar4 = strlen(abase);\u000a        src_name = abase + sVar4 + 1;\u000a        abase = abase + sVar4 + 1;\u000a      } while (*src_name != 0);\u000a    }\u000a    free(local_a0);\u000a    *in_stack_00000008 = bVar7;\u000a    bVar9 = bVar8 != 0;\u000a  }\u000a  return (_Bool)bVar9;\u000a}\u000a\u000a
p794
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x78\nMOV RBP,R9\nMOV qword ptr [RSP + 0x28],R8\nMOV qword ptr [RSP + 0x20],RCX\nMOV R15D,EDX\nMOV qword ptr [RSP + 0x18],RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBP + 0x40]\nMOV qword ptr [RSP + 0x70],RAX\nMOVUPS XMM0,xmmword ptr [RBP]\nMOVUPS XMM1,xmmword ptr [RBP + 0x10]\nMOVUPS XMM2,xmmword ptr [RBP + 0x20]\nMOVUPS XMM3,xmmword ptr [RBP + 0x30]\nMOVAPS xmmword ptr [RSP + 0x60],XMM3\nMOVAPS xmmword ptr [RSP + 0x50],XMM2\nMOVAPS xmmword ptr [RSP + 0x40],XMM1\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nMOV ESI,0x2\nCALL 0x0040cfa0\nTEST RAX,RAX\nJZ 0x00406b18\nCMP dword ptr [RBP + 0x4],0x3\nJNZ 0x00406a34\nMOV dword ptr [RSP + 0x34],0x2\nCMP byte ptr [RAX],0x0\nMOV qword ptr [RSP + 0x8],RAX\nMOV R14B,0x1\nJZ 0x00406b57\nXOR EBP,EBP\nMOVZX ECX,R15B\nMOV dword ptr [RSP + 0x4],ECX\nMOV R13,RAX\nMOV qword ptr [RSP + 0x10],RBX\nNOP word ptr [RAX + RAX*0x1]\nMOV byte ptr [RSP + 0x2],R14B\nXOR EDX,EDX\nMOV RDI,RBX\nMOV RSI,R13\nCALL 0x00409650\nMOV R15,RAX\nXOR EDX,EDX\nMOV RDI,qword ptr [RSP + 0x18]\nMOV RSI,R13\nCALL 0x00409650\nMOV R12,RAX\nMOV RAX,qword ptr [0xb0 + RSP]\nMOVZX EAX,byte ptr [RAX]\nMOV byte ptr [RSP + 0x1],AL\nMOV RDI,R15\nMOV RSI,R12\nMOV EDX,dword ptr [RSP + 0x4]\nMOV RCX,qword ptr [RSP + 0x20]\nMOV R8,qword ptr [RSP + 0x28]\nLEA R9,[RSP + 0x30]\nPUSH 0x0\nLEA RAX,[RSP + 0xb]\nPUSH RAX\nLEA RAX,[RSP + 0x11]\nPUSH RAX\nPUSH 0x0\nCALL 0x00404450\nADD RSP,0x20\nMOV R14D,EAX\nAND R14B,byte ptr [RSP + 0x2]\nMOVZX EBX,byte ptr [RSP + 0x3]\nMOV RAX,qword ptr [0xb8 + RSP]\nOR byte ptr [RAX],BL\nMOV RDI,R12\nCALL 0x00402290\nMOV RDI,R15\nCALL 0x00402290\nTEST BL,BL\nJNZ 0x00406b59\nOR BPL,byte ptr [RSP + 0x1]\nMOV RDI,R13\nCALL 0x00402440\nCMP byte ptr [R13 + RAX*0x1 + 0x1],0x0\nLEA R13,[R13 + RAX*0x1 + 0x1]\nMOV RBX,qword ptr [RSP + 0x10]\nJNZ 0x00406a60\nJMP 0x00406b59\nCALL 0x004022e0\nMOV R14D,dword ptr [RAX]\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x41290e\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,R15\nCALL 0x00402870\nJMP 0x00406b75\nXOR EBP,EBP\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402290\nMOV RAX,qword ptr [0xb0 + RSP]\nMOV byte ptr [RAX],BPL\nTEST R14B,R14B\nSETNZ BPL\nMOV EAX,EBP\nADD RSP,0x78\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p795
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 78\n4c 89 cd\n4c 89 44 24 28\n48 89 4c 24 20\n41 89 d7\n48 89 74 24 18\n48 89 fb\n48 8b 45 40\n48 89 44 24 70\n0f 10 45 00\n0f 10 4d 10\n0f 10 55 20\n0f 10 5d 30\n0f 29 5c 24 60\n0f 29 54 24 50\n0f 29 4c 24 40\n0f 29 44 24 30\nbe 02 00 00 00\ne8 83 65 00 00\n48 85 c0\n0f 84 f2 00 00 00\n83 7d 04 03\n75 08\nc7 44 24 34 02 00 00 00\n80 38 00\n48 89 44 24 08\n41 b6 01\n0f 84 12 01 00 00\n31 ed\n41 0f b6 cf\n89 4c 24 04\n49 89 c5\n48 89 5c 24 10\n66 0f 1f 84 00 00 00 00 00\n44 88 74 24 02\n31 d2\n48 89 df\n4c 89 ee\ne8 de 2b 00 00\n49 89 c7\n31 d2\n48 8b 7c 24 18\n4c 89 ee\ne8 cc 2b 00 00\n49 89 c4\n48 8b 84 24 b0 00 00 00\n0f b6 00\n88 44 24 01\n4c 89 ff\n4c 89 e6\n8b 54 24 04\n48 8b 4c 24 20\n4c 8b 44 24 28\n4c 8d 4c 24 30\n6a 00\n48 8d 44 24 0b\n50\n48 8d 44 24 11\n50\n6a 00\ne8 8c d9 ff ff\n48 83 c4 20\n41 89 c6\n44 22 74 24 02\n0f b6 5c 24 03\n48 8b 84 24 b8 00 00 00\n08 18\n4c 89 e7\ne8 a9 b7 ff ff\n4c 89 ff\ne8 a1 b7 ff ff\n84 db\n75 66\n40 0a 6c 24 01\n4c 89 ef\ne8 40 b9 ff ff\n41 80 7c 05 01 00\n4d 8d 6c 05 01\n48 8b 5c 24 10\n0f 85 4a ff ff ff\neb 41\ne8 c3 b7 ff ff\n44 8b 30\n31 ed\n31 ff\nbe 0e 29 41 00\nba 05 00 00 00\ne8 ed b8 ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 7d 59 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n4c 89 fa\ne8 1b bd ff ff\neb 1e\n31 ed\n48 8b 7c 24 08\ne8 2d b7 ff ff\n48 8b 84 24 b0 00 00 00\n40 88 28\n45 84 f6\n40 0f 95 c5\n89 e8\n48 83 c4 78\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p796
S'.text:00000000004069c0\n.text:00000000004069c1\n.text:00000000004069c3\n.text:00000000004069c5\n.text:00000000004069c7\n.text:00000000004069c9\n.text:00000000004069ca\n.text:00000000004069ce\n.text:00000000004069d1\n.text:00000000004069d6\n.text:00000000004069db\n.text:00000000004069de\n.text:00000000004069e3\n.text:00000000004069e6\n.text:00000000004069ea\n.text:00000000004069ef\n.text:00000000004069f3\n.text:00000000004069f7\n.text:00000000004069fb\n.text:00000000004069ff\n.text:0000000000406a04\n.text:0000000000406a09\n.text:0000000000406a0e\n.text:0000000000406a13\n.text:0000000000406a18\n.text:0000000000406a1d\n.text:0000000000406a20\n.text:0000000000406a26\n.text:0000000000406a2a\n.text:0000000000406a2c\n.text:0000000000406a34\n.text:0000000000406a37\n.text:0000000000406a3c\n.text:0000000000406a3f\n.text:0000000000406a45\n.text:0000000000406a47\n.text:0000000000406a4b\n.text:0000000000406a4f\n.text:0000000000406a52\n.text:0000000000406a57\n.text:0000000000406a60\n.text:0000000000406a65\n.text:0000000000406a67\n.text:0000000000406a6a\n.text:0000000000406a6d\n.text:0000000000406a72\n.text:0000000000406a75\n.text:0000000000406a77\n.text:0000000000406a7c\n.text:0000000000406a7f\n.text:0000000000406a84\n.text:0000000000406a87\n.text:0000000000406a8f\n.text:0000000000406a92\n.text:0000000000406a96\n.text:0000000000406a99\n.text:0000000000406a9c\n.text:0000000000406aa0\n.text:0000000000406aa5\n.text:0000000000406aaa\n.text:0000000000406aaf\n.text:0000000000406ab1\n.text:0000000000406ab6\n.text:0000000000406ab7\n.text:0000000000406abc\n.text:0000000000406abd\n.text:0000000000406abf\n.text:0000000000406ac4\n.text:0000000000406ac8\n.text:0000000000406acb\n.text:0000000000406ad0\n.text:0000000000406ad5\n.text:0000000000406add\n.text:0000000000406adf\n.text:0000000000406ae2\n.text:0000000000406ae7\n.text:0000000000406aea\n.text:0000000000406aef\n.text:0000000000406af1\n.text:0000000000406af3\n.text:0000000000406af8\n.text:0000000000406afb\n.text:0000000000406b00\n.text:0000000000406b06\n.text:0000000000406b0b\n.text:0000000000406b10\n.text:0000000000406b16\n.text:0000000000406b18\n.text:0000000000406b1d\n.text:0000000000406b20\n.text:0000000000406b22\n.text:0000000000406b24\n.text:0000000000406b29\n.text:0000000000406b2e\n.text:0000000000406b33\n.text:0000000000406b36\n.text:0000000000406b3b\n.text:0000000000406b3e\n.text:0000000000406b43\n.text:0000000000406b46\n.text:0000000000406b48\n.text:0000000000406b4a\n.text:0000000000406b4d\n.text:0000000000406b50\n.text:0000000000406b55\n.text:0000000000406b57\n.text:0000000000406b59\n.text:0000000000406b5e\n.text:0000000000406b63\n.text:0000000000406b6b\n.text:0000000000406b6e\n.text:0000000000406b71\n.text:0000000000406b75\n.text:0000000000406b77\n.text:0000000000406b7b\n.text:0000000000406b7c\n.text:0000000000406b7e\n.text:0000000000406b80\n.text:0000000000406b82\n.text:0000000000406b84\n.text:0000000000406b85\n'
p797
tp798
sS'quotearg_buffer_restyled'
p799
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p800
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_0040b49c_caseD_7;\u000a  case 2:\u000a    goto switchD_0040b49c_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_0040b49c_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_0040b49c_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_0040b49c_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_0040b49c_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_0040b49c_caseD_7;\u000aswitchD_0040b49c_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_0040b49c_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_0040b49c_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_0040bf60;\u000aLAB_0040b680:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_0040bf69:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_0040bf78:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_0040b68b:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_0040b6cf:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_0040b6cf;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_0040bf78;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_0040bea5;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x0040bdb0;\u000a    }\u000a    goto LAB_0040bf78;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_0040beda;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_0040bf78;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_0040bf09;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_0040b9c8;\u000a  case '\u005ca':\u000a    goto joined_r0x0040b8b8;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x0040b8b8;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_0040b6e6_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x0040b8b8;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x0040b8b8;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_0040b6e6_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x0040b8b8:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_0040be1e;\u000a    }\u000a    goto LAB_0040bf78;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_0040bf78;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_0040bf78;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_0040bf78;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_0040bf78;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_0040bf78;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_0040b6e6_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_0040be76;\u000a      goto joined_r0x0040be68;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x0040b971:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x0040be68;\u000a      goto LAB_0040be76;\u000a    }\u000a    goto LAB_0040bf78;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_0040bf78;\u000a  }\u000a  goto joined_r0x0040bdb0;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_0040beda:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_0040bf09;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_0040bf09:\u000a  if (1 < uVar10) {\u000aLAB_0040b9e6:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_0040baa2;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x0040b971;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_0040baa2:\u000a        if (bVar6 != 0) goto LAB_0040bf78;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_0040b9c8:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_0040b9e6;\u000ajoined_r0x0040bdb0:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x0040bdb0:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_0040bdd7;\u000aLAB_0040be10:\u000a    if (bVar22) goto LAB_0040be15;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_0040be10;\u000aLAB_0040bdd7:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_0040be15:\u000a      if (bVar6 != 0) goto LAB_0040bf78;\u000aLAB_0040be1e:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x0040be68;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_0040be76:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x0040be68:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_0040bea5:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_0040b680;\u000aLAB_0040bf60:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_0040bf69;\u000a  goto LAB_0040b68b;\u000a}\u000a\u000a
p801
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00402430\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x0040c045\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x413250 + RAX*0x8]\nMOV EDI,0x413776\nMOV ESI,R15D\nCALL 0x0040c6f0\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x414424\nMOV ESI,R15D\nCALL 0x0040c6f0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x0040b4fd\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x0040b500\nNOP\nCMP R12,RSI\nJNC 0x0040b4ee\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x0040b4e0\nJMP 0x0040b500\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00402440\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x0040b5cc\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x0040b5cc\nMOV ECX,0x413774\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x0040b5c6\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x0040b567\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x0040b594\nTEST RSI,RSI\nJZ 0x0040b581\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x414424\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x0040b5a2\nMOV ECX,0x414424\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x0040b5cc\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x0040c01c\nMOV ECX,0x413774\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x0040bf60\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x0040bf69\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x0040b6cf\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x0040b6ca\nCMP R11,-0x1\nJNZ 0x0040b6ca\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00402440\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x0040b720\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x0040b97c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x4132a8 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x0040bf78\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x0040bdd0\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x0040bdd7\nJMP 0x0040be10\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x004025f0\nTEST EAX,EAX\nSETZ AL\nJNZ 0x0040b76d\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x0040b6d1\nJMP 0x0040bf78\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x0040b6d1\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x0040b6fb\nCMP EBX,0x2\nJNZ 0x0040b6fb\nTEST R13,R13\nJNZ 0x0040b6fb\nJMP 0x0040bf78\nCMP R11,-0x1\nJZ 0x0040bb53\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x0040bb73\nJMP 0x0040b6fb\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x0040bb84\nTEST R8B,R8B\nJNZ 0x0040bf78\nCMP EBX,0x2\nJNZ 0x0040b828\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x0040b828\nCMP R12,RSI\nJNC 0x0040b803\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040b812\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x0040b821\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x0040b832\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x0040bcf8\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x0040bcf8\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x0040bcf8\nCMP RCX,RSI\nJNC 0x0040b86c\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x0040b87b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x0040b706\nJMP 0x0040bdd0\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x0040b6f9\nJMP 0x0040b8da\nMOV DL,0x74\nJMP 0x0040b8c2\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x0040b6f9\nJMP 0x0040b8da\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x0040b6f9\nJMP 0x0040b8da\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x0040bf78\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x0040b6f9\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x0040be1e\nJMP 0x0040bf78\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x0040b6f9\nTEST R8B,R8B\nJNZ 0x0040bf78\nCMP R12,RSI\nJNC 0x0040b90a\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040b919\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x0040b928\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x0040b6f9\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x0040bd0b\nCMP EBX,0x2\nJNZ 0x0040b6f9\nTEST R8B,R8B\nJZ 0x0040b6f9\nJMP 0x0040bf78\nCMP EBX,0x2\nJNZ 0x0040bba4\nTEST R8B,R8B\nJNZ 0x0040bf78\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x0040be76\nJMP 0x0040be99\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x0040bbc5\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x004029e0\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x0040bdb8\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x0040bdb8\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x0040baa2\nJMP 0x0040ba70\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x0040ba59\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x0040ba56\nCMP R12,RSI\nJNC 0x0040ba3b\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x0040ba4a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x0040ba90\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x0040ba90\nTEST BPL,0x1\nJZ 0x0040bb33\nCMP R12,RSI\nJNC 0x0040ba84\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x0040bb33\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x0040ba70\nTEST R8B,R8B\nJNZ 0x0040bf78\nCMP EBX,0x2\nJNZ 0x0040baea\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x0040baea\nCMP R12,RSI\nJNC 0x0040bac2\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040bad1\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x0040bae0\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x0040baf4\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040bb0b\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x0040bb25\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x0040ba20\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x0040be76\nJMP 0x0040be99\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x0040b6fb\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x0040b6fb\nJMP 0x0040bf78\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x0040bea5\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x0040b706\nJMP 0x0040bdd0\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x0040b8c2\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x0040be76\nJMP 0x0040be99\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x0040bbe7\nMOV RDI,R10\nCALL 0x00402440\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x004024a0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040bebf\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x0040beb7\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x0040bec6\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x0040bcae\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x0040bca6\nBT RDI,RDX\nJC 0x0040c012\nINC RCX\nCMP RCX,R14\nJC 0x0040bc90\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x004029b0\nTEST EAX,EAX\nJNZ 0x0040bcc3\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x00402990\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x0040bc05\nJMP 0x0040bf09\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x0040b706\nJMP 0x0040bdd0\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x0040b6f9\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x0040b6f9\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x0040b6f9\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x0040b6fb\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x0040bf42\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x0040bf78\nCMP R12,RSI\nJNC 0x0040bd6e\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x0040bd81\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x0040bd90\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x0040bd9f\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x0040b706\nJMP 0x0040bdd0\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x0040b706\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x0040be10\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x0040be15\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x0040be70\nJMP 0x0040be15\nTEST BPL,BPL\nJZ 0x0040be70\nTEST R8B,R8B\nJNZ 0x0040bf78\nCMP EBX,0x2\nJNZ 0x0040be58\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x0040be58\nCMP R12,RSI\nJNC 0x0040be33\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040be42\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x0040be51\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x0040be62\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x0040bea2\nJMP 0x0040be9e\nTEST DIL,0x1\nJZ 0x0040be99\nAND AL,0x1\nJNZ 0x0040be99\nCMP R12,RSI\nJNC 0x0040be84\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040be93\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x0040bea2\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x0040bf60\nJMP 0x0040b680\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x0040bf04\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x0040befc\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x0040bf38\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x0040beda\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x0040bf09\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x0040b9c8\nJMP 0x0040b9e6\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x0040bf09\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x0040b706\nJMP 0x0040bdd0\nCMP R13,R11\nJNZ 0x0040b68b\nTEST R8B,R8B\nJZ 0x0040bfd2\nCMP EBX,0x2\nJNZ 0x0040bfd2\nTEST R12,R12\nJNZ 0x0040bfd2\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x0040b410\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x0040c006\nTEST R8B,R8B\nJNZ 0x0040c006\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x0040c006\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x0040bff9\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x0040bff0\nCMP R12,RSI\nJNC 0x0040bfbd\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x0040bfbd\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x0040bf78\nTEST RSI,RSI\nJZ 0x0040c029\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x413774\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x0040b5cc\nCALL 0x004022d0\n'
p802
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 f2 6f ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 50 32 41 00\nbf 76 37 41 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf 24 44 41 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 33 6f ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 74 37 41 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 24 44 41 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 24 44 41 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 74 37 41 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 93 6d ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd a8 32 41 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 b7 6e ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 47 70 ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 61 68 ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 73 68 ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 f9 6c ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 b2 6c ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 74 37 41 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 86 62 ff ff\n'
p803
S'.text:000000000040b410\n.text:000000000040b411\n.text:000000000040b413\n.text:000000000040b415\n.text:000000000040b417\n.text:000000000040b419\n.text:000000000040b41a\n.text:000000000040b421\n.text:000000000040b424\n.text:000000000040b427\n.text:000000000040b42a\n.text:000000000040b42f\n.text:000000000040b434\n.text:000000000040b439\n.text:000000000040b43e\n.text:000000000040b446\n.text:000000000040b44a\n.text:000000000040b450\n.text:000000000040b458\n.text:000000000040b45d\n.text:000000000040b465\n.text:000000000040b46a\n.text:000000000040b46e\n.text:000000000040b470\n.text:000000000040b473\n.text:000000000040b476\n.text:000000000040b479\n.text:000000000040b47e\n.text:000000000040b481\n.text:000000000040b484\n.text:000000000040b487\n.text:000000000040b48a\n.text:000000000040b48c\n.text:000000000040b48f\n.text:000000000040b494\n.text:000000000040b497\n.text:000000000040b49c\n.text:000000000040b4a3\n.text:000000000040b4a8\n.text:000000000040b4ab\n.text:000000000040b4b0\n.text:000000000040b4b5\n.text:000000000040b4ba\n.text:000000000040b4bd\n.text:000000000040b4c2\n.text:000000000040b4c7\n.text:000000000040b4cc\n.text:000000000040b4ce\n.text:000000000040b4d0\n.text:000000000040b4d5\n.text:000000000040b4d7\n.text:000000000040b4da\n.text:000000000040b4dc\n.text:000000000040b4de\n.text:000000000040b4e0\n.text:000000000040b4e3\n.text:000000000040b4e5\n.text:000000000040b4ea\n.text:000000000040b4ee\n.text:000000000040b4f4\n.text:000000000040b4f7\n.text:000000000040b4f9\n.text:000000000040b4fb\n.text:000000000040b4fd\n.text:000000000040b500\n.text:000000000040b505\n.text:000000000040b508\n.text:000000000040b50d\n.text:000000000040b512\n.text:000000000040b515\n.text:000000000040b518\n.text:000000000040b51b\n.text:000000000040b51e\n.text:000000000040b523\n.text:000000000040b526\n.text:000000000040b529\n.text:000000000040b52e\n.text:000000000040b531\n.text:000000000040b533\n.text:000000000040b536\n.text:000000000040b538\n.text:000000000040b53a\n.text:000000000040b53d\n.text:000000000040b542\n.text:000000000040b547\n.text:000000000040b54c\n.text:000000000040b54f\n.text:000000000040b555\n.text:000000000040b557\n.text:000000000040b55a\n.text:000000000040b55d\n.text:000000000040b560\n.text:000000000040b562\n.text:000000000040b564\n.text:000000000040b567\n.text:000000000040b56a\n.text:000000000040b56f\n.text:000000000040b572\n.text:000000000040b574\n.text:000000000040b577\n.text:000000000040b579\n.text:000000000040b57e\n.text:000000000040b581\n.text:000000000040b586\n.text:000000000040b58c\n.text:000000000040b592\n.text:000000000040b594\n.text:000000000040b599\n.text:000000000040b59f\n.text:000000000040b5a2\n.text:000000000040b5a5\n.text:000000000040b5a8\n.text:000000000040b5aa\n.text:000000000040b5af\n.text:000000000040b5b2\n.text:000000000040b5b8\n.text:000000000040b5bd\n.text:000000000040b5c3\n.text:000000000040b5c6\n.text:000000000040b5c9\n.text:000000000040b5cc\n.text:000000000040b5d4\n.text:000000000040b5d6\n.text:000000000040b5d8\n.text:000000000040b5db\n.text:000000000040b5df\n.text:000000000040b5e1\n.text:000000000040b5e4\n.text:000000000040b5e8\n.text:000000000040b5ea\n.text:000000000040b5ed\n.text:000000000040b5f0\n.text:000000000040b5f3\n.text:000000000040b5f5\n.text:000000000040b5f9\n.text:000000000040b5fb\n.text:000000000040b5ff\n.text:000000000040b602\n.text:000000000040b605\n.text:000000000040b608\n.text:000000000040b60a\n.text:000000000040b60e\n.text:000000000040b617\n.text:000000000040b61a\n.text:000000000040b61c\n.text:000000000040b620\n.text:000000000040b622\n.text:000000000040b626\n.text:000000000040b628\n.text:000000000040b62b\n.text:000000000040b62f\n.text:000000000040b631\n.text:000000000040b634\n.text:000000000040b638\n.text:000000000040b63d\n.text:000000000040b640\n.text:000000000040b644\n.text:000000000040b64c\n.text:000000000040b64f\n.text:000000000040b652\n.text:000000000040b654\n.text:000000000040b658\n.text:000000000040b65b\n.text:000000000040b65d\n.text:000000000040b662\n.text:000000000040b666\n.text:000000000040b66b\n.text:000000000040b670\n.text:000000000040b674\n.text:000000000040b67a\n.text:000000000040b680\n.text:000000000040b685\n.text:000000000040b68b\n.text:000000000040b690\n.text:000000000040b692\n.text:000000000040b697\n.text:000000000040b69b\n.text:000000000040b69d\n.text:000000000040b6a1\n.text:000000000040b6a3\n.text:000000000040b6a5\n.text:000000000040b6a8\n.text:000000000040b6ad\n.text:000000000040b6af\n.text:000000000040b6b4\n.text:000000000040b6b9\n.text:000000000040b6bd\n.text:000000000040b6c2\n.text:000000000040b6c7\n.text:000000000040b6ca\n.text:000000000040b6cd\n.text:000000000040b6cf\n.text:000000000040b6d1\n.text:000000000040b6d6\n.text:000000000040b6da\n.text:000000000040b6e0\n.text:000000000040b6e2\n.text:000000000040b6e4\n.text:000000000040b6e6\n.text:000000000040b6ee\n.text:000000000040b6f3\n.text:000000000040b6f9\n.text:000000000040b6fb\n.text:000000000040b700\n.text:000000000040b706\n.text:000000000040b70f\n.text:000000000040b715\n.text:000000000040b720\n.text:000000000040b722\n.text:000000000040b725\n.text:000000000040b729\n.text:000000000040b731\n.text:000000000040b734\n.text:000000000040b739\n.text:000000000040b73b\n.text:000000000040b73e\n.text:000000000040b740\n.text:000000000040b745\n.text:000000000040b748\n.text:000000000040b74d\n.text:000000000040b750\n.text:000000000040b755\n.text:000000000040b759\n.text:000000000040b75e\n.text:000000000040b760\n.text:000000000040b762\n.text:000000000040b768\n.text:000000000040b76d\n.text:000000000040b772\n.text:000000000040b775\n.text:000000000040b77a\n.text:000000000040b77e\n.text:000000000040b783\n.text:000000000040b788\n.text:000000000040b78a\n.text:000000000040b78c\n.text:000000000040b791\n.text:000000000040b793\n.text:000000000040b796\n.text:000000000040b79c\n.text:000000000040b79f\n.text:000000000040b7a5\n.text:000000000040b7a8\n.text:000000000040b7ae\n.text:000000000040b7b3\n.text:000000000040b7b7\n.text:000000000040b7bd\n.text:000000000040b7c0\n.text:000000000040b7c3\n.text:000000000040b7c7\n.text:000000000040b7ca\n.text:000000000040b7cc\n.text:000000000040b7cf\n.text:000000000040b7d5\n.text:000000000040b7da\n.text:000000000040b7df\n.text:000000000040b7e5\n.text:000000000040b7e8\n.text:000000000040b7ee\n.text:000000000040b7f1\n.text:000000000040b7f3\n.text:000000000040b7f5\n.text:000000000040b7f7\n.text:000000000040b7f9\n.text:000000000040b7fc\n.text:000000000040b7fe\n.text:000000000040b803\n.text:000000000040b808\n.text:000000000040b80b\n.text:000000000040b80d\n.text:000000000040b812\n.text:000000000040b817\n.text:000000000040b81a\n.text:000000000040b81c\n.text:000000000040b821\n.text:000000000040b825\n.text:000000000040b828\n.text:000000000040b82b\n.text:000000000040b82d\n.text:000000000040b832\n.text:000000000040b837\n.text:000000000040b839\n.text:000000000040b83c\n.text:000000000040b83f\n.text:000000000040b845\n.text:000000000040b849\n.text:000000000040b84c\n.text:000000000040b852\n.text:000000000040b856\n.text:000000000040b859\n.text:000000000040b85c\n.text:000000000040b862\n.text:000000000040b865\n.text:000000000040b867\n.text:000000000040b86c\n.text:000000000040b871\n.text:000000000040b874\n.text:000000000040b876\n.text:000000000040b87b\n.text:000000000040b87f\n.text:000000000040b884\n.text:000000000040b88a\n.text:000000000040b88f\n.text:000000000040b891\n.text:000000000040b896\n.text:000000000040b89c\n.text:000000000040b89e\n.text:000000000040b8a0\n.text:000000000040b8a2\n.text:000000000040b8a4\n.text:000000000040b8a9\n.text:000000000040b8af\n.text:000000000040b8b1\n.text:000000000040b8b3\n.text:000000000040b8b8\n.text:000000000040b8be\n.text:000000000040b8c0\n.text:000000000040b8c2\n.text:000000000040b8c7\n.text:000000000040b8c9\n.text:000000000040b8cf\n.text:000000000040b8d4\n.text:000000000040b8da\n.text:000000000040b8dd\n.text:000000000040b8e0\n.text:000000000040b8e6\n.text:000000000040b8eb\n.text:000000000040b8ee\n.text:000000000040b8f1\n.text:000000000040b8f7\n.text:000000000040b8fa\n.text:000000000040b900\n.text:000000000040b903\n.text:000000000040b905\n.text:000000000040b90a\n.text:000000000040b90f\n.text:000000000040b912\n.text:000000000040b914\n.text:000000000040b919\n.text:000000000040b91e\n.text:000000000040b921\n.text:000000000040b923\n.text:000000000040b928\n.text:000000000040b92c\n.text:000000000040b92e\n.text:000000000040b933\n.text:000000000040b936\n.text:000000000040b939\n.text:000000000040b93f\n.text:000000000040b942\n.text:000000000040b948\n.text:000000000040b94b\n.text:000000000040b951\n.text:000000000040b956\n.text:000000000040b959\n.text:000000000040b95f\n.text:000000000040b962\n.text:000000000040b968\n.text:000000000040b96b\n.text:000000000040b96d\n.text:000000000040b971\n.text:000000000040b977\n.text:000000000040b97c\n.text:000000000040b980\n.text:000000000040b989\n.text:000000000040b98f\n.text:000000000040b994\n.text:000000000040b999\n.text:000000000040b99e\n.text:000000000040b9a1\n.text:000000000040b9a6\n.text:000000000040b9a9\n.text:000000000040b9ac\n.text:000000000040b9b1\n.text:000000000040b9b6\n.text:000000000040b9ba\n.text:000000000040b9bf\n.text:000000000040b9c4\n.text:000000000040b9c8\n.text:000000000040b9ca\n.text:000000000040b9cf\n.text:000000000040b9d5\n.text:000000000040b9d8\n.text:000000000040b9da\n.text:000000000040b9dd\n.text:000000000040b9e0\n.text:000000000040b9e6\n.text:000000000040b9eb\n.text:000000000040b9ee\n.text:000000000040b9f1\n.text:000000000040b9f4\n.text:000000000040b9f7\n.text:000000000040b9f9\n.text:000000000040b9fd\n.text:000000000040b9ff\n.text:000000000040ba04\n.text:000000000040ba09\n.text:000000000040ba0f\n.text:000000000040ba20\n.text:000000000040ba25\n.text:000000000040ba27\n.text:000000000040ba2a\n.text:000000000040ba2c\n.text:000000000040ba2f\n.text:000000000040ba31\n.text:000000000040ba34\n.text:000000000040ba36\n.text:000000000040ba3b\n.text:000000000040ba40\n.text:000000000040ba43\n.text:000000000040ba45\n.text:000000000040ba4a\n.text:000000000040ba4e\n.text:000000000040ba56\n.text:000000000040ba59\n.text:000000000040ba5c\n.text:000000000040ba5e\n.text:000000000040ba62\n.text:000000000040ba70\n.text:000000000040ba74\n.text:000000000040ba7a\n.text:000000000040ba7d\n.text:000000000040ba7f\n.text:000000000040ba84\n.text:000000000040ba87\n.text:000000000040ba89\n.text:000000000040ba90\n.text:000000000040ba93\n.text:000000000040ba98\n.text:000000000040ba9b\n.text:000000000040baa0\n.text:000000000040baa2\n.text:000000000040baa5\n.text:000000000040baab\n.text:000000000040baae\n.text:000000000040bab0\n.text:000000000040bab4\n.text:000000000040bab6\n.text:000000000040bab8\n.text:000000000040babb\n.text:000000000040babd\n.text:000000000040bac2\n.text:000000000040bac7\n.text:000000000040baca\n.text:000000000040bacc\n.text:000000000040bad1\n.text:000000000040bad6\n.text:000000000040bad9\n.text:000000000040badb\n.text:000000000040bae0\n.text:000000000040bae4\n.text:000000000040bae6\n.text:000000000040baea\n.text:000000000040baed\n.text:000000000040baef\n.text:000000000040baf4\n.text:000000000040baf9\n.text:000000000040bafc\n.text:000000000040bafe\n.text:000000000040bb01\n.text:000000000040bb04\n.text:000000000040bb07\n.text:000000000040bb0b\n.text:000000000040bb10\n.text:000000000040bb13\n.text:000000000040bb15\n.text:000000000040bb18\n.text:000000000040bb1b\n.text:000000000040bb1e\n.text:000000000040bb21\n.text:000000000040bb25\n.text:000000000040bb29\n.text:000000000040bb2d\n.text:000000000040bb31\n.text:000000000040bb33\n.text:000000000040bb37\n.text:000000000040bb3a\n.text:000000000040bb40\n.text:000000000040bb44\n.text:000000000040bb48\n.text:000000000040bb4e\n.text:000000000040bb53\n.text:000000000040bb56\n.text:000000000040bb59\n.text:000000000040bb5e\n.text:000000000040bb61\n.text:000000000040bb63\n.text:000000000040bb66\n.text:000000000040bb6d\n.text:000000000040bb73\n.text:000000000040bb75\n.text:000000000040bb79\n.text:000000000040bb7f\n.text:000000000040bb84\n.text:000000000040bb89\n.text:000000000040bb8f\n.text:000000000040bb92\n.text:000000000040bb94\n.text:000000000040bb99\n.text:000000000040bb9f\n.text:000000000040bba4\n.text:000000000040bba6\n.text:000000000040bbab\n.text:000000000040bbb1\n.text:000000000040bbb3\n.text:000000000040bbb6\n.text:000000000040bbba\n.text:000000000040bbc0\n.text:000000000040bbc5\n.text:000000000040bbd1\n.text:000000000040bbd5\n.text:000000000040bbd7\n.text:000000000040bbda\n.text:000000000040bbdf\n.text:000000000040bbe4\n.text:000000000040bbe7\n.text:000000000040bbeb\n.text:000000000040bbf0\n.text:000000000040bbf2\n.text:000000000040bbf6\n.text:000000000040bbf8\n.text:000000000040bc00\n.text:000000000040bc05\n.text:000000000040bc0a\n.text:000000000040bc0e\n.text:000000000040bc12\n.text:000000000040bc1a\n.text:000000000040bc1d\n.text:000000000040bc22\n.text:000000000040bc25\n.text:000000000040bc28\n.text:000000000040bc2d\n.text:000000000040bc30\n.text:000000000040bc33\n.text:000000000040bc39\n.text:000000000040bc3d\n.text:000000000040bc47\n.text:000000000040bc4d\n.text:000000000040bc51\n.text:000000000040bc56\n.text:000000000040bc5c\n.text:000000000040bc60\n.text:000000000040bc63\n.text:000000000040bc67\n.text:000000000040bc69\n.text:000000000040bc6e\n.text:000000000040bc73\n.text:000000000040bc77\n.text:000000000040bc79\n.text:000000000040bc7e\n.text:000000000040bc83\n.text:000000000040bc87\n.text:000000000040bc8c\n.text:000000000040bc90\n.text:000000000040bc94\n.text:000000000040bc97\n.text:000000000040bc9a\n.text:000000000040bc9c\n.text:000000000040bca0\n.text:000000000040bca6\n.text:000000000040bca9\n.text:000000000040bcac\n.text:000000000040bcae\n.text:000000000040bcb2\n.text:000000000040bcb7\n.text:000000000040bcb9\n.text:000000000040bcbb\n.text:000000000040bcc3\n.text:000000000040bcc8\n.text:000000000040bccb\n.text:000000000040bcd3\n.text:000000000040bcd6\n.text:000000000040bcd9\n.text:000000000040bcde\n.text:000000000040bce1\n.text:000000000040bce3\n.text:000000000040bce8\n.text:000000000040bced\n.text:000000000040bcf3\n.text:000000000040bcf8\n.text:000000000040bcfb\n.text:000000000040bd00\n.text:000000000040bd06\n.text:000000000040bd0b\n.text:000000000040bd10\n.text:000000000040bd16\n.text:000000000040bd1a\n.text:000000000040bd1d\n.text:000000000040bd23\n.text:000000000040bd29\n.text:000000000040bd2f\n.text:000000000040bd34\n.text:000000000040bd36\n.text:000000000040bd39\n.text:000000000040bd3f\n.text:000000000040bd43\n.text:000000000040bd45\n.text:000000000040bd4f\n.text:000000000040bd53\n.text:000000000040bd59\n.text:000000000040bd5c\n.text:000000000040bd5e\n.text:000000000040bd64\n.text:000000000040bd67\n.text:000000000040bd69\n.text:000000000040bd6e\n.text:000000000040bd73\n.text:000000000040bd76\n.text:000000000040bd7a\n.text:000000000040bd7c\n.text:000000000040bd81\n.text:000000000040bd86\n.text:000000000040bd89\n.text:000000000040bd8b\n.text:000000000040bd90\n.text:000000000040bd95\n.text:000000000040bd98\n.text:000000000040bd9a\n.text:000000000040bd9f\n.text:000000000040bda3\n.text:000000000040bda5\n.text:000000000040bda8\n.text:000000000040bdab\n.text:000000000040bdb0\n.text:000000000040bdb6\n.text:000000000040bdb8\n.text:000000000040bdbd\n.text:000000000040bdc2\n.text:000000000040bdc8\n.text:000000000040bdd0\n.text:000000000040bdd5\n.text:000000000040bdd7\n.text:000000000040bddc\n.text:000000000040bddf\n.text:000000000040bde1\n.text:000000000040bde4\n.text:000000000040bde6\n.text:000000000040bde9\n.text:000000000040bdec\n.text:000000000040bdef\n.text:000000000040bdf1\n.text:000000000040bdf9\n.text:000000000040bdfc\n.text:000000000040bdfe\n.text:000000000040be00\n.text:000000000040be10\n.text:000000000040be13\n.text:000000000040be15\n.text:000000000040be18\n.text:000000000040be1e\n.text:000000000040be21\n.text:000000000040be23\n.text:000000000040be25\n.text:000000000040be27\n.text:000000000040be29\n.text:000000000040be2c\n.text:000000000040be2e\n.text:000000000040be33\n.text:000000000040be38\n.text:000000000040be3b\n.text:000000000040be3d\n.text:000000000040be42\n.text:000000000040be47\n.text:000000000040be4a\n.text:000000000040be4c\n.text:000000000040be51\n.text:000000000040be55\n.text:000000000040be58\n.text:000000000040be5b\n.text:000000000040be5d\n.text:000000000040be62\n.text:000000000040be65\n.text:000000000040be68\n.text:000000000040be6a\n.text:000000000040be70\n.text:000000000040be74\n.text:000000000040be76\n.text:000000000040be78\n.text:000000000040be7a\n.text:000000000040be7d\n.text:000000000040be7f\n.text:000000000040be84\n.text:000000000040be89\n.text:000000000040be8c\n.text:000000000040be8e\n.text:000000000040be93\n.text:000000000040be97\n.text:000000000040be99\n.text:000000000040be9c\n.text:000000000040be9e\n.text:000000000040bea2\n.text:000000000040bea5\n.text:000000000040bea8\n.text:000000000040beac\n.text:000000000040beb2\n.text:000000000040beb7\n.text:000000000040bebf\n.text:000000000040bec4\n.text:000000000040bec6\n.text:000000000040bece\n.text:000000000040bed3\n.text:000000000040bed5\n.text:000000000040beda\n.text:000000000040bedf\n.text:000000000040bee3\n.text:000000000040bee5\n.text:000000000040beea\n.text:000000000040beed\n.text:000000000040bef0\n.text:000000000040bef2\n.text:000000000040befa\n.text:000000000040befc\n.text:000000000040bf04\n.text:000000000040bf09\n.text:000000000040bf0d\n.text:000000000040bf12\n.text:000000000040bf17\n.text:000000000040bf1b\n.text:000000000040bf20\n.text:000000000040bf25\n.text:000000000040bf29\n.text:000000000040bf2d\n.text:000000000040bf33\n.text:000000000040bf38\n.text:000000000040bf40\n.text:000000000040bf42\n.text:000000000040bf44\n.text:000000000040bf48\n.text:000000000040bf4d\n.text:000000000040bf53\n.text:000000000040bf60\n.text:000000000040bf63\n.text:000000000040bf69\n.text:000000000040bf6c\n.text:000000000040bf6e\n.text:000000000040bf71\n.text:000000000040bf73\n.text:000000000040bf76\n.text:000000000040bf78\n.text:000000000040bf80\n.text:000000000040bf86\n.text:000000000040bf8a\n.text:000000000040bf8d\n.text:000000000040bf91\n.text:000000000040bf96\n.text:000000000040bf9a\n.text:000000000040bf9e\n.text:000000000040bfa1\n.text:000000000040bfa4\n.text:000000000040bfa7\n.text:000000000040bfab\n.text:000000000040bfaf\n.text:000000000040bfb1\n.text:000000000040bfb6\n.text:000000000040bfba\n.text:000000000040bfbd\n.text:000000000040bfc0\n.text:000000000040bfc7\n.text:000000000040bfc8\n.text:000000000040bfca\n.text:000000000040bfcc\n.text:000000000040bfce\n.text:000000000040bfd0\n.text:000000000040bfd1\n.text:000000000040bfd2\n.text:000000000040bfda\n.text:000000000040bfdd\n.text:000000000040bfdf\n.text:000000000040bfe2\n.text:000000000040bfe4\n.text:000000000040bfe6\n.text:000000000040bfe8\n.text:000000000040bfea\n.text:000000000040bfed\n.text:000000000040bff0\n.text:000000000040bff3\n.text:000000000040bff5\n.text:000000000040bff9\n.text:000000000040bffc\n.text:000000000040bfff\n.text:000000000040c002\n.text:000000000040c004\n.text:000000000040c006\n.text:000000000040c009\n.text:000000000040c00b\n.text:000000000040c010\n.text:000000000040c012\n.text:000000000040c017\n.text:000000000040c01c\n.text:000000000040c01f\n.text:000000000040c021\n.text:000000000040c026\n.text:000000000040c029\n.text:000000000040c02e\n.text:000000000040c031\n.text:000000000040c037\n.text:000000000040c03d\n.text:000000000040c040\n.text:000000000040c045\n'
p804
tp805
sS'rotr_sz'
p806
(S'\n__stdcall rotr_sz(size_t x)\n'
p807
V\u000asize_t rotr_sz(size_t x)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined4 in_ESI;\u000a  \u000a  bVar1 = (byte)in_ESI & 0x3f;\u000a  return x >> bVar1 | x << 0x40 - bVar1;\u000a}\u000a\u000a
p808
S'MOV ECX,ESI\nROR RDI,CL\nMOV RAX,RDI\nRET\n'
p809
S'89 f1\n48 d3 cf\n48 89 f8\nc3\n'
p810
S'.text:000000000040f940\n.text:000000000040f942\n.text:000000000040f945\n.text:000000000040f948\n'
p811
tp812
sS'getgid'
p813
(S'\n__stdcall getgid()\n'
p814
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__gid_t getgid(void)\u000a\u000a{\u000a  __gid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getgid_00618278)();\u000a  return _Var1;\u000a}\u000a\u000a
p815
S'JMP qword ptr [0x00618278]\n'
p816
S'ff 25 52 5b 21 00\n'
p817
S'.plt:0000000000402720\n'
p818
tp819
sS'mode_compile'
p820
(S'\n__stdcall mode_compile(char * mode_string)\n'
p821
V\u000amode_change * mode_compile(char *mode_string)\u000a\u000a{\u000a  byte *pbVar1;\u000a  char cVar2;\u000a  byte bVar3;\u000a  char cVar4;\u000a  uint uVar5;\u000a  uint uVar6;\u000a  mode_change *__ptr;\u000a  char *pcVar7;\u000a  uint uVar8;\u000a  long lVar9;\u000a  char cVar10;\u000a  mode_t mVar11;\u000a  size_t n;\u000a  long lVar12;\u000a  undefined auStack56 [8];\u000a  \u000a  if ((*mode_string & 0xf8U) == 0x30) {\u000a    uVar8 = 0;\u000a    do {\u000a      uVar8 = (int)*mode_string + -0x30 + uVar8 * 8;\u000a      if (0xfff < uVar8) {\u000a        return (mode_change *)0x0;\u000a      }\u000a      pbVar1 = (byte *)(mode_string + 1);\u000a      mode_string = mode_string + 1;\u000a    } while ((*pbVar1 & 0xf8) == 0x30);\u000a    if (*pbVar1 != 0) {\u000a      return (mode_change *)0x0;\u000a    }\u000a    octal_to_mode();\u000a    __ptr = make_node_op_equals();\u000a    return __ptr;\u000a  }\u000a  n = 1;\u000a  pcVar7 = mode_string;\u000a  do {\u000a    cVar2 = *pcVar7;\u000a    if (cVar2 < '-') {\u000a      lVar9 = 1;\u000a      if (cVar2 != '+') {\u000a        if (cVar2 == 0) break;\u000aLAB_0040ad8e:\u000a        lVar9 = 0;\u000a      }\u000a    }\u000a    else {\u000a      if (cVar2 == '-') {\u000a        lVar9 = 1;\u000a      }\u000a      else {\u000a        lVar9 = 1;\u000a        if (cVar2 != '=') goto LAB_0040ad8e;\u000a      }\u000a    }\u000a    n = n + lVar9;\u000a    pcVar7 = pcVar7 + 1;\u000a  } while( true );\u000a  __ptr = (mode_change *)xnmalloc(n,0x10);\u000a  lVar9 = 0;\u000aLAB_0040add0:\u000a  uVar8 = 0;\u000a  while (uVar5 = SEXT14(*mode_string), uVar5 - 0x61 < 0x15) {\u000a    uVar6 = 0x438;\u000a    switch(uVar5) {\u000a    case 0x61:\u000a      uVar6 = 0xfff;\u000a      break;\u000a    default:\u000a      goto switchD_0040adf6_caseD_62;\u000a    case 0x67:\u000a      break;\u000a    case 0x6f:\u000a      uVar6 = 0x207;\u000a      break;\u000a    case 0x75:\u000a      uVar6 = 0x9c0;\u000a    }\u000a    uVar8 = uVar8 | uVar6;\u000a    mode_string = mode_string + 1;\u000a  }\u000a  if ((0x3d < uVar5) || (lVar12 = lVar9, ((ulong)auStack56 >> ((ulong)uVar5 & 0x1f) & 1) == 0)) {\u000aswitchD_0040adf6_caseD_62:\u000a    free(__ptr);\u000a    return (mode_change *)0x0;\u000a  }\u000aswitchD_0040af8b_caseD_2b:\u000a  pcVar7 = mode_string + 1;\u000a  cVar2 = *mode_string;\u000a  switch(mode_string[1]) {\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a    uVar5 = 0;\u000a    do {\u000a      uVar5 = (int)*pcVar7 + -0x30 + uVar5 * 8;\u000a      if (0xfff < uVar5) goto switchD_0040adf6_caseD_62;\u000a      bVar3 = pcVar7[1];\u000a      pcVar7 = pcVar7 + 1;\u000a    } while ((bVar3 & 0xf8) == 0x30);\u000a    if ((uVar8 == 0) && ((bVar3 == 0x2c || (bVar3 == 0)))) {\u000a      uVar5 = octal_to_mode();\u000a      cVar10 = 1;\u000a      uVar8 = 0xfff;\u000a      mVar11 = 0xfff;\u000a      break;\u000a    }\u000a    goto switchD_0040adf6_caseD_62;\u000a  default:\u000a    cVar10 = 1;\u000a    uVar5 = 0;\u000a    do {\u000a      cVar4 = 2;\u000a      switch(*pcVar7) {\u000a      case 'r':\u000a        uVar5 = uVar5 | 0x124;\u000a        cVar4 = cVar10;\u000a        break;\u000a      case 's':\u000a        uVar5 = uVar5 | 0xc00;\u000a        cVar4 = cVar10;\u000a        break;\u000a      case 't':\u000a        uVar5 = uVar5 | 0x200;\u000a        cVar4 = cVar10;\u000a        break;\u000a      case 'w':\u000a        uVar5 = uVar5 | 0x92;\u000a        cVar4 = cVar10;\u000a        break;\u000a      case 'x':\u000a        uVar5 = uVar5 | 0x49;\u000a        cVar4 = cVar10;\u000a        break;\u000a      default:\u000a        goto switchD_0040aee2_caseD_59;\u000a      case 'X':\u000a        break;\u000a      }\u000a      cVar10 = cVar4;\u000a      pcVar7 = pcVar7 + 1;\u000a    } while( true );\u000a  case 'g':\u000a    pcVar7 = mode_string + 2;\u000a    cVar10 = 3;\u000a    mVar11 = 0;\u000a    uVar5 = 0x38;\u000a    break;\u000a  case 'o':\u000a    pcVar7 = mode_string + 2;\u000a    cVar10 = 3;\u000a    mVar11 = 0;\u000a    uVar5 = 7;\u000a    break;\u000a  case 'u':\u000a    pcVar7 = mode_string + 2;\u000a    cVar10 = 3;\u000a    mVar11 = 0;\u000a    uVar5 = 0x1c0;\u000a  }\u000a  goto LAB_0040af50;\u000aswitchD_0040aee2_caseD_59:\u000a  mVar11 = 0;\u000aLAB_0040af50:\u000a  __ptr[lVar12].op = cVar2;\u000a  __ptr[lVar12].flag = cVar10;\u000a  __ptr[lVar12].affected = uVar8;\u000a  __ptr[lVar12].value = uVar5;\u000a  if (mVar11 == 0) {\u000a    mVar11 = (-(uint)(uVar8 == 0) | uVar8) & uVar5;\u000a  }\u000a  lVar9 = lVar12 + 1;\u000a  __ptr[lVar12].mentioned = mVar11;\u000a  mode_string = pcVar7;\u000a  lVar12 = lVar9;\u000a  switch(*pcVar7) {\u000a  case '+':\u000a  case '-':\u000a  case '=':\u000a    goto switchD_0040af8b_caseD_2b;\u000a  case ',':\u000a    break;\u000a  default:\u000a    if (*pcVar7 == 0) {\u000a      __ptr[lVar9].flag = 0;\u000a      return __ptr;\u000a    }\u000a    goto switchD_0040adf6_caseD_62;\u000a  }\u000a  mode_string = pcVar7 + 1;\u000a  goto LAB_0040add0;\u000a}\u000a\u000a
p822
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBP,RDI\nMOV AL,byte ptr [RBP]\nAND AL,0xf8\nCMP AL,0x30\nJNZ 0x0040ad53\nXOR R14D,R14D\nXOR EDI,EDI\nMOV RBX,RBP\nNOP\nMOVSX EAX,byte ptr [RBX]\nLEA EDI,[RAX + RDI*0x8 + -0x30]\nCMP EDI,0xfff\nJA 0x0040afa3\nMOVZX EAX,byte ptr [RBX + 0x1]\nINC RBX\nMOV ECX,EAX\nAND CL,0xf8\nCMP CL,0x30\nJZ 0x0040acf0\nTEST AL,AL\nJNZ 0x0040afa0\nCALL 0x0040afd0\nSUB RBX,RBP\nMOV ECX,EAX\nAND ECX,0xc00\nOR ECX,0x3ff\nCMP RBX,0x5\nMOV ESI,0xfff\nCMOVL ESI,ECX\nMOV EDI,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040afe0\nMOV EDI,0x1\nMOV RAX,RBP\nJMP 0x0040ad66\nADD RDI,RDX\nINC RAX\nMOVZX ECX,byte ptr [RAX]\nCMP CL,0x2c\nJLE 0x0040ad80\nCMP CL,0x2d\nJZ 0x0040ada0\nCMP CL,0x3d\nMOV EDX,0x1\nJZ 0x0040ad60\nJMP 0x0040ad8e\nCMP CL,0x2b\nMOV EDX,0x1\nJZ 0x0040ad60\nTEST CL,CL\nJZ 0x0040ada7\nXOR EDX,EDX\nJMP 0x0040ad60\nMOV EDX,0x1\nJMP 0x0040ad60\nMOV ESI,0x10\nCALL 0x0040e990\nMOV R14,RAX\nXOR R15D,R15D\nMOV R12,0x2000280000000000\nJMP 0x0040add0\nINC RBP\nNOP word ptr CS:[RAX + RAX*0x1]\nXOR ECX,ECX\nJMP 0x0040ade5\nOR ECX,EAX\nINC RBP\nMOVSX EAX,byte ptr [RBP]\nLEA EDX,[RAX + -0x61]\nCMP EDX,0x14\nJA 0x0040ae30\nMOV EAX,0x438\nJMP qword ptr [0x412d90 + RDX*0x8]\nMOV EAX,0xfff\nJMP 0x0040ade0\nMOV EAX,0x207\nJMP 0x0040ade0\nMOV EAX,0x9c0\nJMP 0x0040ade0\nCMP EAX,0x3d\nJA 0x0040af98\nMOV EAX,EAX\nBT RSP,RAX\nJNC 0x0040af98\nLEA RSI,[RBP + 0x1]\nMOV R13B,byte ptr [RBP]\nMOVSX EAX,byte ptr [RBP + 0x1]\nADD EAX,-0x30\nCMP EAX,0x45\nJA 0x0040aebf\nJMP qword ptr [0x412e38 + RAX*0x8]\nXOR EDI,EDI\nMOV RBP,RSI\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVSX EAX,byte ptr [RBP]\nLEA EDI,[RAX + RDI*0x8 + -0x30]\nCMP EDI,0xfff\nJA 0x0040af98\nMOVZX EAX,byte ptr [RBP + 0x1]\nINC RBP\nMOV EDX,EAX\nAND DL,0xf8\nCMP DL,0x30\nJZ 0x0040ae70\nTEST ECX,ECX\nJNZ 0x0040af98\nCMP AL,0x2c\nJZ 0x0040aea9\nTEST AL,AL\nJNZ 0x0040af98\nCALL 0x0040afd0\nMOV BL,0x1\nMOV ECX,0xfff\nMOV EDI,0xfff\nJMP 0x0040af50\nMOV BL,0x1\nXOR EAX,EAX\nJMP 0x0040aed5\nINC RSI\nMOV EBX,EDX\nMOVSX EDI,byte ptr [RSI]\nADD EDI,-0x58\nCMP EDI,0x20\nJA 0x0040af41\nMOV DL,0x2\nJMP qword ptr [0x413068 + RDI*0x8]\nOR EAX,0x124\nJMP 0x0040af10\nOR EAX,0xc00\nJMP 0x0040af10\nOR EAX,0x200\nJMP 0x0040af10\nOR EAX,0x92\nJMP 0x0040af10\nOR EAX,0x49\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDX,EBX\nJMP 0x0040aed0\nADD RBP,0x2\nMOV BL,0x3\nXOR EDI,EDI\nMOV EAX,0x38\nJMP 0x0040af50\nADD RBP,0x2\nMOV BL,0x3\nXOR EDI,EDI\nMOV EAX,0x7\nJMP 0x0040af50\nADD RBP,0x2\nMOV BL,0x3\nXOR EDI,EDI\nMOV EAX,0x1c0\nJMP 0x0040af50\nXOR EDI,EDI\nMOV RBP,RSI\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RSI,R15\nSHL RSI,0x4\nMOV byte ptr [R14 + RSI*0x1],R13B\nMOV byte ptr [R14 + RSI*0x1 + 0x1],BL\nMOV dword ptr [R14 + RSI*0x1 + 0x4],ECX\nMOV dword ptr [R14 + RSI*0x1 + 0x8],EAX\nTEST EDI,EDI\nJNZ 0x0040af77\nCMP ECX,0x1\nSBB EDI,EDI\nOR EDI,ECX\nAND EDI,EAX\nINC R15\nMOV dword ptr [R14 + RSI*0x1 + 0xc],EDI\nMOV AL,byte ptr [RBP]\nADD AL,0xd5\nCMP AL,0x12\nJA 0x0040af92\nMOVZX EAX,AL\nJMP qword ptr [0x413170 + RAX*0x8]\nCMP byte ptr [RBP],0x0\nJZ 0x0040afb5\nMOV RDI,R14\nCALL 0x00402290\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nSHL R15,0x4\nMOV byte ptr [R14 + R15*0x1 + 0x1],0x0\nJMP 0x0040afa3\n'
p823
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 fd\n8a 45 00\n24 f8\n3c 30\n75 6c\n45 31 f6\n31 ff\n48 89 eb\n90\n0f be 03\n8d 7c f8 d0\n81 ff ff 0f 00 00\n0f 87 a0 02 00 00\n0f b6 43 01\n48 ff c3\n89 c1\n80 e1 f8\n80 f9 30\n74 dc\n84 c0\n0f 85 84 02 00 00\ne8 af 02 00 00\n48 29 eb\n89 c1\n81 e1 00 0c 00 00\n81 c9 ff 03 00 00\n48 83 fb 05\nbe ff 0f 00 00\n0f 4c f1\n89 c7\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 8d 02 00 00\nbf 01 00 00 00\n48 89 e8\neb 09\n48 01 d7\n48 ff c0\n0f b6 08\n80 f9 2c\n7e 12\n80 f9 2d\n74 2d\n80 f9 3d\nba 01 00 00 00\n74 e3\neb 0f\n80 f9 2b\nba 01 00 00 00\n74 d6\n84 c9\n74 19\n31 d2\neb ce\nba 01 00 00 00\neb b9\nbe 10 00 00 00\ne8 df 3b 00 00\n49 89 c6\n45 31 ff\n49 bc 00 00 00 00 00 28 00 20\neb 0d\n48 ff c5\n66 2e 0f 1f 84 00 00 00 00 00\n31 c9\neb 11\n09 c1\n48 ff c5\n0f be 45 00\n8d 50 9f\n83 fa 14\n77 3f\nb8 38 04 00 00\nff 24 d5 90 2d 41 00\nb8 ff 0f 00 00\neb dc\nb8 07 02 00 00\neb c9\nb8 c0 09 00 00\neb b9\n83 f8 3d\n0f 87 5f 01 00 00\n89 c0\n49 0f a3 c4\n0f 83 53 01 00 00\n48 8d 75 01\n44 8a 6d 00\n0f be 45 01\n83 c0 d0\n83 f8 45\n77 66\nff 24 c5 38 2e 41 00\n31 ff\n48 89 f5\n66 66 2e 0f 1f 84 00 00 00 00 00\n0f be 45 00\n8d 7c f8 d0\n81 ff ff 0f 00 00\n0f 87 14 01 00 00\n0f b6 45 01\n48 ff c5\n89 c2\n80 e2 f8\n80 fa 30\n74 db\n85 c9\n0f 85 fb 00 00 00\n3c 2c\n74 08\n84 c0\n0f 85 ef 00 00 00\ne8 22 01 00 00\nb3 01\nb9 ff 0f 00 00\nbf ff 0f 00 00\ne9 91 00 00 00\nb3 01\n31 c0\neb 10\n48 ff c6\n89 d3\n0f be 3e\n83 c7 a8\n83 ff 20\n77 61\nb2 02\nff 24 fd 68 30 41 00\n0d 24 01 00 00\neb 20\n0d 00 0c 00 00\neb 19\n0d 00 02 00 00\neb 12\n0d 92 00 00 00\neb 0b\n83 c8 49\n0f 1f 84 00 00 00 00 00\n89 da\neb bc\n48 83 c5 02\nb3 03\n31 ff\nb8 38 00 00 00\neb 2d\n48 83 c5 02\nb3 03\n31 ff\nb8 07 00 00 00\neb 1e\n48 83 c5 02\nb3 03\n31 ff\nb8 c0 01 00 00\neb 0f\n31 ff\n48 89 f5\n66 2e 0f 1f 84 00 00 00 00 00\n4c 89 fe\n48 c1 e6 04\n45 88 2c 36\n41 88 5c 36 01\n41 89 4c 36 04\n41 89 44 36 08\n85 ff\n75 09\n83 f9 01\n19 ff\n09 cf\n21 c7\n49 ff c7\n41 89 7c 36 0c\n8a 45 00\n04 d5\n3c 12\n77 0a\n0f b6 c0\nff 24 c5 70 31 41 00\n80 7d 00 00\n74 1d\n4c 89 f7\ne8 f0 72 ff ff\n45 31 f6\n4c 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n49 c1 e7 04\n43 c6 44 3e 01 00\neb e2\n'
p824
S'.text:000000000040acd0\n.text:000000000040acd1\n.text:000000000040acd3\n.text:000000000040acd5\n.text:000000000040acd7\n.text:000000000040acd9\n.text:000000000040acda\n.text:000000000040acdb\n.text:000000000040acde\n.text:000000000040ace1\n.text:000000000040ace3\n.text:000000000040ace5\n.text:000000000040ace7\n.text:000000000040acea\n.text:000000000040acec\n.text:000000000040acef\n.text:000000000040acf0\n.text:000000000040acf3\n.text:000000000040acf7\n.text:000000000040acfd\n.text:000000000040ad03\n.text:000000000040ad07\n.text:000000000040ad0a\n.text:000000000040ad0c\n.text:000000000040ad0f\n.text:000000000040ad12\n.text:000000000040ad14\n.text:000000000040ad16\n.text:000000000040ad1c\n.text:000000000040ad21\n.text:000000000040ad24\n.text:000000000040ad26\n.text:000000000040ad2c\n.text:000000000040ad32\n.text:000000000040ad36\n.text:000000000040ad3b\n.text:000000000040ad3e\n.text:000000000040ad40\n.text:000000000040ad44\n.text:000000000040ad45\n.text:000000000040ad47\n.text:000000000040ad49\n.text:000000000040ad4b\n.text:000000000040ad4d\n.text:000000000040ad4e\n.text:000000000040ad53\n.text:000000000040ad58\n.text:000000000040ad5b\n.text:000000000040ad60\n.text:000000000040ad63\n.text:000000000040ad66\n.text:000000000040ad69\n.text:000000000040ad6c\n.text:000000000040ad6e\n.text:000000000040ad71\n.text:000000000040ad73\n.text:000000000040ad76\n.text:000000000040ad7b\n.text:000000000040ad7d\n.text:000000000040ad80\n.text:000000000040ad83\n.text:000000000040ad88\n.text:000000000040ad8a\n.text:000000000040ad8c\n.text:000000000040ad8e\n.text:000000000040ad90\n.text:000000000040ada0\n.text:000000000040ada5\n.text:000000000040ada7\n.text:000000000040adac\n.text:000000000040adb1\n.text:000000000040adb4\n.text:000000000040adb7\n.text:000000000040adc1\n.text:000000000040adc3\n.text:000000000040adc6\n.text:000000000040add0\n.text:000000000040add2\n.text:000000000040ade0\n.text:000000000040ade2\n.text:000000000040ade5\n.text:000000000040ade9\n.text:000000000040adec\n.text:000000000040adef\n.text:000000000040adf1\n.text:000000000040adf6\n.text:000000000040adfd\n.text:000000000040ae02\n.text:000000000040ae10\n.text:000000000040ae15\n.text:000000000040ae20\n.text:000000000040ae25\n.text:000000000040ae30\n.text:000000000040ae33\n.text:000000000040ae39\n.text:000000000040ae3b\n.text:000000000040ae3f\n.text:000000000040ae45\n.text:000000000040ae49\n.text:000000000040ae4d\n.text:000000000040ae51\n.text:000000000040ae54\n.text:000000000040ae57\n.text:000000000040ae59\n.text:000000000040ae60\n.text:000000000040ae62\n.text:000000000040ae65\n.text:000000000040ae70\n.text:000000000040ae74\n.text:000000000040ae78\n.text:000000000040ae7e\n.text:000000000040ae84\n.text:000000000040ae88\n.text:000000000040ae8b\n.text:000000000040ae8d\n.text:000000000040ae90\n.text:000000000040ae93\n.text:000000000040ae95\n.text:000000000040ae97\n.text:000000000040ae9d\n.text:000000000040ae9f\n.text:000000000040aea1\n.text:000000000040aea3\n.text:000000000040aea9\n.text:000000000040aeae\n.text:000000000040aeb0\n.text:000000000040aeb5\n.text:000000000040aeba\n.text:000000000040aebf\n.text:000000000040aec1\n.text:000000000040aec3\n.text:000000000040aed0\n.text:000000000040aed3\n.text:000000000040aed5\n.text:000000000040aed8\n.text:000000000040aedb\n.text:000000000040aede\n.text:000000000040aee0\n.text:000000000040aee2\n.text:000000000040aee9\n.text:000000000040aeee\n.text:000000000040aef0\n.text:000000000040aef5\n.text:000000000040aef7\n.text:000000000040aefc\n.text:000000000040aefe\n.text:000000000040af03\n.text:000000000040af05\n.text:000000000040af08\n.text:000000000040af10\n.text:000000000040af12\n.text:000000000040af14\n.text:000000000040af18\n.text:000000000040af1a\n.text:000000000040af1c\n.text:000000000040af21\n.text:000000000040af23\n.text:000000000040af27\n.text:000000000040af29\n.text:000000000040af2b\n.text:000000000040af30\n.text:000000000040af32\n.text:000000000040af36\n.text:000000000040af38\n.text:000000000040af3a\n.text:000000000040af3f\n.text:000000000040af41\n.text:000000000040af43\n.text:000000000040af46\n.text:000000000040af50\n.text:000000000040af53\n.text:000000000040af57\n.text:000000000040af5b\n.text:000000000040af60\n.text:000000000040af65\n.text:000000000040af6a\n.text:000000000040af6c\n.text:000000000040af6e\n.text:000000000040af71\n.text:000000000040af73\n.text:000000000040af75\n.text:000000000040af77\n.text:000000000040af7a\n.text:000000000040af7f\n.text:000000000040af82\n.text:000000000040af84\n.text:000000000040af86\n.text:000000000040af88\n.text:000000000040af8b\n.text:000000000040af92\n.text:000000000040af96\n.text:000000000040af98\n.text:000000000040af9b\n.text:000000000040afa0\n.text:000000000040afa3\n.text:000000000040afa6\n.text:000000000040afaa\n.text:000000000040afab\n.text:000000000040afad\n.text:000000000040afaf\n.text:000000000040afb1\n.text:000000000040afb3\n.text:000000000040afb4\n.text:000000000040afb5\n.text:000000000040afb9\n.text:000000000040afbf\n'
p825
tp826
sS'qset_acl'
p827
(S'\n__stdcall qset_acl(char * name)\n'
p828
V\u000aint qset_acl(char *name)\u000a\u000a{\u000a  int iVar1;\u000a  ulong in_RAX;\u000a  uint in_EDX;\u000a  ulong local_8;\u000a  \u000a  local_8 = in_RAX & 0xffffffff00000000 | (ulong)in_EDX;\u000a  iVar1 = set_permissions((permission_context *)&local_8,name);\u000a  return iVar1;\u000a}\u000a\u000a
p829
S'PUSH RAX\nMOV EAX,ESI\nMOV RCX,RDI\nMOV dword ptr [RSP],EDX\nMOV RDI,RSP\nMOV RSI,RCX\nMOV EDX,EAX\nCALL 0x0040f580\nPOP RCX\nRET\n'
p830
S'50\n89 f0\n48 89 f9\n89 14 24\n48 89 e7\n48 89 ce\n89 c2\ne8 ea 42 00 00\n59\nc3\n'
p831
S'.text:000000000040b280\n.text:000000000040b281\n.text:000000000040b283\n.text:000000000040b286\n.text:000000000040b289\n.text:000000000040b28c\n.text:000000000040b28f\n.text:000000000040b291\n.text:000000000040b296\n.text:000000000040b297\n'
p832
tp833
sS'set_quoting_style'
p834
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p835
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p836
S'TEST RDI,RDI\nMOV EAX,0x61a960\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p837
S'48 85 ff\nb8 60 a9 61 00\n48 0f 45 c7\n89 30\nc3\n'
p838
S'.text:000000000040b2f0\n.text:000000000040b2f3\n.text:000000000040b2f8\n.text:000000000040b2fc\n.text:000000000040b2fe\n'
p839
tp840
sS'hash_get_entries'
p841
(S'\n__stdcall hash_get_entries(Hash_table * table, void * * buffer, size_t buffer_size)\n'
p842
V\u000asize_t hash_get_entries(Hash_table *table,void **buffer,size_t buffer_size)\u000a\u000a{\u000a  hash_entry *phVar1;\u000a  ulong uVar2;\u000a  hash_entry *phVar3;\u000a  \u000a  phVar3 = table->bucket;\u000a  if (table->bucket_limit <= phVar3) {\u000a    return 0;\u000a  }\u000a  uVar2 = 0;\u000a  do {\u000a    phVar1 = phVar3;\u000a    if (phVar3->data != (void *)0x0) {\u000a      while (phVar1 != (hash_entry *)0x0) {\u000a        if (buffer_size <= uVar2) {\u000a          return uVar2;\u000a        }\u000a        buffer[uVar2] = phVar1->data;\u000a        uVar2 = uVar2 + 1;\u000a        phVar1 = phVar1->next;\u000a      }\u000a    }\u000a    phVar3 = phVar3 + 1;\u000a  } while (phVar3 < table->bucket_limit);\u000a  return uVar2;\u000a}\u000a\u000a
p843
S'MOV R8,qword ptr [RDI]\nCMP R8,qword ptr [RDI + 0x8]\nJNC 0x00409b93\nXOR EAX,EAX\nCMP qword ptr [R8],0x0\nJZ 0x00409b88\nTEST R8,R8\nJZ 0x00409b88\nMOV R9,R8\nNOP dword ptr [RAX]\nCMP RAX,RDX\nJNC 0x00409b92\nMOV RCX,qword ptr [R9]\nMOV qword ptr [RSI + RAX*0x8],RCX\nINC RAX\nMOV R9,qword ptr [R9 + 0x8]\nTEST R9,R9\nJNZ 0x00409b70\nADD R8,0x10\nCMP R8,qword ptr [RDI + 0x8]\nJC 0x00409b5b\nRET\nXOR EAX,EAX\nRET\n'
p844
S'4c 8b 07\n4c 3b 47 08\n73 3a\n31 c0\n49 83 38 00\n74 27\n4d 85 c0\n74 22\n4d 89 c1\n0f 1f 80 00 00 00 00\n48 39 d0\n73 1d\n49 8b 09\n48 89 0c c6\n48 ff c0\n4d 8b 49 08\n4d 85 c9\n75 e8\n49 83 c0 10\n4c 3b 47 08\n72 c9\nc3\n31 c0\nc3\n'
p845
S'.text:0000000000409b50\n.text:0000000000409b53\n.text:0000000000409b57\n.text:0000000000409b59\n.text:0000000000409b5b\n.text:0000000000409b5f\n.text:0000000000409b61\n.text:0000000000409b64\n.text:0000000000409b66\n.text:0000000000409b69\n.text:0000000000409b70\n.text:0000000000409b73\n.text:0000000000409b75\n.text:0000000000409b78\n.text:0000000000409b7c\n.text:0000000000409b7f\n.text:0000000000409b83\n.text:0000000000409b86\n.text:0000000000409b88\n.text:0000000000409b8c\n.text:0000000000409b90\n.text:0000000000409b92\n.text:0000000000409b93\n.text:0000000000409b95\n'
p846
tp847
sS'xmemdup'
p848
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p849
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p850
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x0040e9b0\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004026d0\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p851
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 bc 3b ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p852
S'.text:000000000040eaf0\n.text:000000000040eaf2\n.text:000000000040eaf4\n.text:000000000040eaf5\n.text:000000000040eaf8\n.text:000000000040eafb\n.text:000000000040eafe\n.text:000000000040eb03\n.text:000000000040eb06\n.text:000000000040eb09\n.text:000000000040eb0c\n.text:000000000040eb0f\n.text:000000000040eb14\n.text:000000000040eb17\n.text:000000000040eb18\n.text:000000000040eb1a\n.text:000000000040eb1c\n'
p853
tp854
sS'get_quoting_style'
p855
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p856
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p857
S'TEST RDI,RDI\nMOV EAX,0x61a960\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p858
S'48 85 ff\nb8 60 a9 61 00\n48 0f 45 c7\n8b 00\nc3\n'
p859
S'.text:000000000040b2e0\n.text:000000000040b2e3\n.text:000000000040b2e8\n.text:000000000040b2ec\n.text:000000000040b2ee\n'
p860
tp861
sS'exit'
p862
(S'\n__stdcall exit(int __status)\n'
p863
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00618398)();\u000a  return;\u000a}\u000a\u000a
p864
S'JMP qword ptr [0x00618398]\n'
p865
S'ff 25 32 5a 21 00\n'
p866
S'.plt:0000000000402960\n'
p867
tp868
sS'safe_hasher'
p869
(S'\n__stdcall safe_hasher(Hash_table * table, void * key)\n'
p870
V\u000ahash_entry * safe_hasher(Hash_table *table,void *key)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*table->hasher)(key,table->n_buckets);\u000a  if (sVar1 < table->n_buckets) {\u000a    return table->bucket + sVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p871
S'PUSH RBX\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nMOV RDI,RSI\nMOV RSI,RAX\nCALL qword ptr [RBX + 0x30]\nCMP RAX,qword ptr [RBX + 0x10]\nJNC 0x00409a80\nSHL RAX,0x4\nADD RAX,qword ptr [RBX]\nPOP RBX\nRET\nCALL 0x004022d0\n'
p872
S'53\n48 89 fb\n48 8b 43 10\n48 89 f7\n48 89 c6\nff 53 30\n48 3b 43 10\n73 09\n48 c1 e0 04\n48 03 03\n5b\nc3\ne8 4b 88 ff ff\n'
p873
S'.text:0000000000409a60\n.text:0000000000409a61\n.text:0000000000409a64\n.text:0000000000409a68\n.text:0000000000409a6b\n.text:0000000000409a6e\n.text:0000000000409a71\n.text:0000000000409a75\n.text:0000000000409a77\n.text:0000000000409a7b\n.text:0000000000409a7e\n.text:0000000000409a7f\n.text:0000000000409a80\n'
p874
tp875
sS'chown_failure_ok'
p876
(S'\n__stdcall chown_failure_ok(cp_options * x)\n'
p877
V\u000a_Bool chown_failure_ok(cp_options *x)\u000a\u000a{\u000a  int *piVar1;\u000a  bool bVar2;\u000a  \u000a  piVar1 = __errno_location();\u000a  if ((*piVar1 == 0x16) || (*piVar1 == 1)) {\u000a    bVar2 = x->chown_privileges == false;\u000a  }\u000a  else {\u000a    bVar2 = false;\u000a  }\u000a  return (_Bool)bVar2;\u000a}\u000a\u000a
p878
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x16\nJZ 0x00405f15\nCMP EAX,0x1\nJNZ 0x00405f1e\nCMP byte ptr [RBX + 0x19],0x0\nSETZ AL\nJMP 0x00405f20\nXOR EAX,EAX\nPOP RBX\nRET\n'
p879
S'53\n48 89 fb\ne8 d7 c3 ff ff\n8b 00\n83 f8 16\n74 05\n83 f8 01\n75 09\n80 7b 19 00\n0f 94 c0\neb 02\n31 c0\n5b\nc3\n'
p880
S'.text:0000000000405f00\n.text:0000000000405f01\n.text:0000000000405f04\n.text:0000000000405f09\n.text:0000000000405f0b\n.text:0000000000405f0e\n.text:0000000000405f10\n.text:0000000000405f13\n.text:0000000000405f15\n.text:0000000000405f19\n.text:0000000000405f1c\n.text:0000000000405f1e\n.text:0000000000405f20\n.text:0000000000405f21\n'
p881
tp882
sS'hash_delete'
p883
(S'\n__stdcall hash_delete(Hash_table * table, void * entry)\n'
p884
V\u000avoid * hash_delete(Hash_table *table,void *entry)\u000a\u000a{\u000a  ulong uVar1;\u000a  Hash_tuning *pHVar2;\u000a  hash_entry *phVar3;\u000a  hash_entry *__ptr;\u000a  _Bool _Var4;\u000a  void *pvVar5;\u000a  ulong uVar6;\u000a  size_t candidate;\u000a  float fVar7;\u000a  float fVar8;\u000a  hash_entry *local_20;\u000a  \u000a  pvVar5 = hash_find_entry(table,entry,&local_20);\u000a  if (pvVar5 == (void *)0x0) {\u000a    pvVar5 = (void *)0x0;\u000a  }\u000a  else {\u000a    table->n_entries = table->n_entries - 1;\u000a    if (local_20->data == (void *)0x0) {\u000a      uVar6 = table->n_buckets_used - 1;\u000a      table->n_buckets_used = uVar6;\u000a      if ((long)uVar6 < 0) {\u000a        fVar7 = (float)((ulong)((uint)uVar6 & 1) | uVar6 >> 1);\u000a        fVar7 = fVar7 + fVar7;\u000a      }\u000a      else {\u000a        fVar7 = (float)uVar6;\u000a      }\u000a      uVar6 = table->n_buckets;\u000a      if ((long)uVar6 < 0) {\u000a        fVar8 = (float)((ulong)((uint)uVar6 & 1) | uVar6 >> 1);\u000a        fVar8 = fVar8 + fVar8;\u000a      }\u000a      else {\u000a        fVar8 = (float)uVar6;\u000a      }\u000a      if (fVar7 < fVar8 * table->tuning->shrink_threshold) {\u000a        check_tuning(table);\u000a        uVar6 = table->n_buckets;\u000a        uVar1 = table->n_buckets_used;\u000a        if ((long)uVar1 < 0) {\u000a          fVar7 = (float)((ulong)((uint)uVar1 & 1) | uVar1 >> 1);\u000a          fVar7 = fVar7 + fVar7;\u000a        }\u000a        else {\u000a          fVar7 = (float)uVar1;\u000a        }\u000a        pHVar2 = table->tuning;\u000a        if ((long)uVar6 < 0) {\u000a          fVar8 = (float)((ulong)((uint)uVar6 & 1) | uVar6 >> 1);\u000a          fVar8 = fVar8 + fVar8;\u000a        }\u000a        else {\u000a          fVar8 = (float)uVar6;\u000a        }\u000a        if (fVar7 < pHVar2->shrink_threshold * fVar8) {\u000a          fVar8 = fVar8 * pHVar2->shrink_factor;\u000a          if (pHVar2->is_n_buckets == false) {\u000a            fVar8 = fVar8 * pHVar2->growth_threshold;\u000a          }\u000a          candidate = (long)fVar8;\u000a          if (DAT_00412cd8 <= fVar8) {\u000a            candidate = (long)(fVar8 - DAT_00412cd8) ^ 0x8000000000000000;\u000a          }\u000a          _Var4 = hash_rehash(table,candidate);\u000a          if (_Var4 == false) {\u000a            __ptr = table->free_entry_list;\u000a            while (__ptr != (hash_entry *)0x0) {\u000a              phVar3 = __ptr->next;\u000a              free(__ptr);\u000a              __ptr = phVar3;\u000a            }\u000a            table->free_entry_list = (hash_entry *)0x0;\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a  return pvVar5;\u000a}\u000a\u000a
p885
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV R15,RDI\nLEA RDX,[RSP + 0x8]\nMOV ECX,0x1\nCALL 0x0040a450\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040a5ba\nDEC qword ptr [R15 + 0x20]\nMOV RAX,qword ptr [RSP + 0x8]\nCMP qword ptr [RAX],0x0\nJNZ 0x0040a6e9\nMOV RAX,qword ptr [R15 + 0x18]\nDEC RAX\nMOV qword ptr [R15 + 0x18],RAX\nJS 0x0040a5c2\nCVTSI2SS XMM0,RAX\nJMP 0x0040a5d7\nXOR R14D,R14D\nJMP 0x0040a6e9\nMOV RCX,RAX\nSHR RCX,1\nAND EAX,0x1\nOR RAX,RCX\nCVTSI2SS XMM0,RAX\nADDSS XMM0,XMM0\nMOV RCX,qword ptr [R15 + 0x10]\nMOV RAX,qword ptr [R15 + 0x28]\nTEST RCX,RCX\nJS 0x0040a5eb\nCVTSI2SS XMM1,RCX\nJMP 0x0040a600\nMOV RDX,RCX\nSHR RDX,1\nAND ECX,0x1\nOR RCX,RDX\nCVTSI2SS XMM1,RCX\nADDSS XMM1,XMM1\nMULSS XMM1,dword ptr [RAX]\nUCOMISS XMM1,XMM0\nJBE 0x0040a6e9\nMOV RDI,R15\nCALL 0x00409d80\nMOV RAX,qword ptr [R15 + 0x10]\nMOV RCX,qword ptr [R15 + 0x18]\nTEST RCX,RCX\nJS 0x0040a62c\nXORPS XMM1,XMM1\nCVTSI2SS XMM1,RCX\nJMP 0x0040a644\nMOV RDX,RCX\nSHR RDX,1\nAND ECX,0x1\nOR RCX,RDX\nXORPS XMM1,XMM1\nCVTSI2SS XMM1,RCX\nADDSS XMM1,XMM1\nMOV RCX,qword ptr [R15 + 0x28]\nTEST RAX,RAX\nJS 0x0040a657\nXORPS XMM0,XMM0\nCVTSI2SS XMM0,RAX\nJMP 0x0040a66f\nMOV RDX,RAX\nSHR RDX,1\nAND EAX,0x1\nOR RAX,RDX\nXORPS XMM0,XMM0\nCVTSI2SS XMM0,RAX\nADDSS XMM0,XMM0\nMOVSS XMM2,dword ptr [RCX]\nMULSS XMM2,XMM0\nUCOMISS XMM2,XMM1\nJBE 0x0040a6e9\nMULSS XMM0,dword ptr [RCX + 0x4]\nCMP byte ptr [RCX + 0x10],0x0\nJNZ 0x0040a68c\nMULSS XMM0,dword ptr [RCX + 0x8]\nMOVSS XMM1,dword ptr [0x00412cd8]\nMOVAPS XMM2,XMM0\nSUBSS XMM2,XMM1\nCVTTSS2SI RAX,XMM2\nMOV RCX,-0x8000000000000000\nXOR RCX,RAX\nCVTTSS2SI RSI,XMM0\nUCOMISS XMM0,XMM1\nCMOVNC RSI,RCX\nMOV RDI,R15\nCALL 0x0040a020\nTEST AL,AL\nJNZ 0x0040a6e9\nMOV RDI,qword ptr [R15 + 0x48]\nTEST RDI,RDI\nJZ 0x0040a6e1\nNOP\nMOV RBX,qword ptr [RDI + 0x8]\nCALL 0x00402290\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x0040a6d0\nMOV qword ptr [R15 + 0x48],0x0\nMOV RAX,R14\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p886
S'41 57\n41 56\n53\n48 83 ec 10\n49 89 ff\n48 8d 54 24 08\nb9 01 00 00 00\ne8 c5 fe ff ff\n49 89 c6\n4d 85 f6\n74 27\n49 ff 4f 20\n48 8b 44 24 08\n48 83 38 00\n0f 85 43 01 00 00\n49 8b 47 18\n48 ff c8\n49 89 47 18\n78 0f\nf3 48 0f 2a c0\neb 1d\n45 31 f6\ne9 27 01 00 00\n48 89 c1\n48 d1 e9\n83 e0 01\n48 09 c8\nf3 48 0f 2a c0\nf3 0f 58 c0\n49 8b 4f 10\n49 8b 47 28\n48 85 c9\n78 07\nf3 48 0f 2a c9\neb 15\n48 89 ca\n48 d1 ea\n83 e1 01\n48 09 d1\nf3 48 0f 2a c9\nf3 0f 58 c9\nf3 0f 59 08\n0f 2e c8\n0f 86 dc 00 00 00\n4c 89 ff\ne8 6b f7 ff ff\n49 8b 47 10\n49 8b 4f 18\n48 85 c9\n78 0a\n0f 57 c9\nf3 48 0f 2a c9\neb 18\n48 89 ca\n48 d1 ea\n83 e1 01\n48 09 d1\n0f 57 c9\nf3 48 0f 2a c9\nf3 0f 58 c9\n49 8b 4f 28\n48 85 c0\n78 0a\n0f 57 c0\nf3 48 0f 2a c0\neb 18\n48 89 c2\n48 d1 ea\n83 e0 01\n48 09 d0\n0f 57 c0\nf3 48 0f 2a c0\nf3 0f 58 c0\nf3 0f 10 11\nf3 0f 59 d0\n0f 2e d1\n76 6d\nf3 0f 59 41 04\n80 79 10 00\n75 05\nf3 0f 59 41 08\nf3 0f 10 0d 44 86 00 00\n0f 28 d0\nf3 0f 5c d1\nf3 48 0f 2c c2\n48 b9 00 00 00 00 00 00 00 80\n48 31 c1\nf3 48 0f 2c f0\n0f 2e c1\n48 0f 43 f1\n4c 89 ff\ne8 5f f9 ff ff\n84 c0\n75 24\n49 8b 7f 48\n48 85 ff\n74 13\n66 90\n48 8b 5f 08\ne8 b7 7b ff ff\n48 85 db\n48 89 df\n75 ef\n49 c7 47 48 00 00 00 00\n4c 89 f0\n48 83 c4 10\n5b\n41 5e\n41 5f\nc3\n'
p887
S'.text:000000000040a570\n.text:000000000040a572\n.text:000000000040a574\n.text:000000000040a575\n.text:000000000040a579\n.text:000000000040a57c\n.text:000000000040a581\n.text:000000000040a586\n.text:000000000040a58b\n.text:000000000040a58e\n.text:000000000040a591\n.text:000000000040a593\n.text:000000000040a597\n.text:000000000040a59c\n.text:000000000040a5a0\n.text:000000000040a5a6\n.text:000000000040a5aa\n.text:000000000040a5ad\n.text:000000000040a5b1\n.text:000000000040a5b3\n.text:000000000040a5b8\n.text:000000000040a5ba\n.text:000000000040a5bd\n.text:000000000040a5c2\n.text:000000000040a5c5\n.text:000000000040a5c8\n.text:000000000040a5cb\n.text:000000000040a5ce\n.text:000000000040a5d3\n.text:000000000040a5d7\n.text:000000000040a5db\n.text:000000000040a5df\n.text:000000000040a5e2\n.text:000000000040a5e4\n.text:000000000040a5e9\n.text:000000000040a5eb\n.text:000000000040a5ee\n.text:000000000040a5f1\n.text:000000000040a5f4\n.text:000000000040a5f7\n.text:000000000040a5fc\n.text:000000000040a600\n.text:000000000040a604\n.text:000000000040a607\n.text:000000000040a60d\n.text:000000000040a610\n.text:000000000040a615\n.text:000000000040a619\n.text:000000000040a61d\n.text:000000000040a620\n.text:000000000040a622\n.text:000000000040a625\n.text:000000000040a62a\n.text:000000000040a62c\n.text:000000000040a62f\n.text:000000000040a632\n.text:000000000040a635\n.text:000000000040a638\n.text:000000000040a63b\n.text:000000000040a640\n.text:000000000040a644\n.text:000000000040a648\n.text:000000000040a64b\n.text:000000000040a64d\n.text:000000000040a650\n.text:000000000040a655\n.text:000000000040a657\n.text:000000000040a65a\n.text:000000000040a65d\n.text:000000000040a660\n.text:000000000040a663\n.text:000000000040a666\n.text:000000000040a66b\n.text:000000000040a66f\n.text:000000000040a673\n.text:000000000040a677\n.text:000000000040a67a\n.text:000000000040a67c\n.text:000000000040a681\n.text:000000000040a685\n.text:000000000040a687\n.text:000000000040a68c\n.text:000000000040a694\n.text:000000000040a697\n.text:000000000040a69b\n.text:000000000040a6a0\n.text:000000000040a6aa\n.text:000000000040a6ad\n.text:000000000040a6b2\n.text:000000000040a6b5\n.text:000000000040a6b9\n.text:000000000040a6bc\n.text:000000000040a6c1\n.text:000000000040a6c3\n.text:000000000040a6c5\n.text:000000000040a6c9\n.text:000000000040a6cc\n.text:000000000040a6ce\n.text:000000000040a6d0\n.text:000000000040a6d4\n.text:000000000040a6d9\n.text:000000000040a6dc\n.text:000000000040a6df\n.text:000000000040a6e1\n.text:000000000040a6e9\n.text:000000000040a6ec\n.text:000000000040a6f0\n.text:000000000040a6f1\n.text:000000000040a6f3\n.text:000000000040a6f5\n'
p888
tp889
sS'quotearg_colon'
p890
(S'\n__stdcall quotearg_colon(char * arg)\n'
p891
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p892
S'MOV ESI,0x3a\nJMP 0x0040c570\n'
p893
S'be 3a 00 00 00\neb e9\n'
p894
S'.text:000000000040c580\n.text:000000000040c585\n'
p895
tp896
sS'savewd_chdir'
p897
(S'\n__stdcall savewd_chdir(savewd * wd, char * dir, int * open_result)\n'
p898
V\u000aint savewd_chdir(savewd *wd,char *dir,int *open_result)\u000a\u000a{\u000a  int iVar1;\u000a  _Bool _Var2;\u000a  int __fd;\u000a  int iVar3;\u000a  int *piVar4;\u000a  int *in_RCX;\u000a  \u000a  if ((((ulong)open_result & 1) != 0) || (__fd = -1, in_RCX != (int *)0x0)) {\u000a    __fd = open(dir,((uint)open_result & 1) << 0x11 | 0x10900);\u000a    if (in_RCX != (int *)0x0) {\u000a      *in_RCX = __fd;\u000a      piVar4 = __errno_location();\u000a      in_RCX[1] = *piVar4;\u000a    }\u000a    if (__fd < 0) {\u000a      piVar4 = __errno_location();\u000a      if (*piVar4 != 0xd) {\u000a        return -1;\u000a      }\u000a    }\u000a    else {\u000a      iVar3 = 0;\u000a      if (((ulong)open_result & 2) != 0) goto joined_r0x0040d112;\u000a    }\u000a  }\u000a  _Var2 = savewd_save(wd);\u000a  if (_Var2 == false) {\u000a    if (__fd < 0) {\u000a      iVar3 = chdir(dir);\u000a    }\u000a    else {\u000a      iVar3 = fchdir(__fd);\u000a    }\u000a    if (iVar3 == 0) {\u000a      if (4 < wd->state + ~INITIAL_STATE) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("0","lib/savewd.c",0x97,\u000a                      "int savewd_chdir(struct savewd *, const char *, int, int *)");\u000a      }\u000a      iVar3 = 0;\u000a      switch(wd->state) {\u000a      case FD_STATE:\u000a        wd->state = FD_POST_CHDIR_STATE;\u000a        iVar3 = 0;\u000a        break;\u000a      case FORKING_STATE:\u000a        iVar3 = 0;\u000a        if (wd->val != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __assert_fail("wd->val.child == 0","lib/savewd.c",0x93,\u000a                        "int savewd_chdir(struct savewd *, const char *, int, int *)");\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    in_RCX = (int *)0x0;\u000a    iVar3 = -2;\u000a  }\u000ajoined_r0x0040d112:\u000a  if ((-1 < __fd) && (in_RCX == (int *)0x0)) {\u000a    piVar4 = __errno_location();\u000a    iVar1 = *piVar4;\u000a    close(__fd);\u000a    *piVar4 = iVar1;\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p899
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RCX\nMOV EBX,EDX\nMOV R12,RSI\nMOV RBP,RDI\nTEST R15,R15\nSETZ AL\nMOV ESI,EBX\nAND ESI,0x1\nJNZ 0x0040d06d\nMOV R14D,0xffffffff\nTEST AL,AL\nJNZ 0x0040d0b9\nSHL ESI,0x11\nOR ESI,0x10900\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x004028a0\nMOV R14D,EAX\nTEST R15,R15\nJZ 0x0040d096\nMOV dword ptr [R15],R14D\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [R15 + 0x4],EAX\nTEST R14D,R14D\nJS 0x0040d0a5\nXOR R13D,R13D\nTEST BL,0x2\nJZ 0x0040d0b9\nJMP 0x0040d11c\nCALL 0x004022e0\nCMP dword ptr [RAX],0xd\nMOV R13D,0xffffffff\nJNZ 0x0040d13a\nMOV RDI,RBP\nCALL 0x0040d180\nTEST AL,AL\nJZ 0x0040d0d5\nMOV R13D,0xfffffffe\nXOR R15D,R15D\nTEST R14D,R14D\nJNS 0x0040d121\nJMP 0x0040d13a\nTEST R14D,R14D\nJS 0x0040d0e4\nMOV EDI,R14D\nCALL 0x004027e0\nJMP 0x0040d0ec\nMOV RDI,R12\nCALL 0x00402470\nMOV R13D,EAX\nTEST R13D,R13D\nJNZ 0x0040d11c\nMOV EAX,dword ptr [RBP]\nDEC EAX\nCMP EAX,0x4\nJA 0x0040d14c\nXOR R13D,R13D\nJMP qword ptr [0x4137b8 + RAX*0x8]\nMOV dword ptr [RBP],0x2\nTEST R14D,R14D\nJNS 0x0040d121\nJMP 0x0040d13a\nCMP dword ptr [RBP + 0x4],0x0\nJNZ 0x0040d165\nTEST R14D,R14D\nJS 0x0040d13a\nTEST R15,R15\nJNZ 0x0040d13a\nCALL 0x004022e0\nMOV RBX,RAX\nMOV EBP,dword ptr [RBX]\nMOV EDI,R14D\nCALL 0x00402590\nMOV dword ptr [RBX],EBP\nMOV EAX,R13D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x4138e1\nMOV ESI,0x413843\nMOV EDX,0x97\nMOV ECX,0x413850\nCALL 0x00402520\nMOV EDI,0x413830\nMOV ESI,0x413843\nMOV EDX,0x93\nMOV ECX,0x413850\nCALL 0x00402520\n'
p900
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 cf\n89 d3\n49 89 f4\n48 89 fd\n4d 85 ff\n0f 94 c0\n89 de\n83 e6 01\n75 0a\n41 be ff ff ff ff\n84 c0\n75 4c\nc1 e6 11\n81 ce 00 09 01 00\n31 c0\n4c 89 e7\ne8 20 58 ff ff\n41 89 c6\n4d 85 ff\n74 0e\n45 89 37\ne8 50 52 ff ff\n8b 00\n41 89 47 04\n45 85 f6\n78 0a\n45 31 ed\nf6 c3 02\n74 16\neb 77\ne8 36 52 ff ff\n83 38 0d\n41 bd ff ff ff ff\n0f 85 81 00 00 00\n48 89 ef\ne8 bf 00 00 00\n84 c0\n74 10\n41 bd fe ff ff ff\n45 31 ff\n45 85 f6\n79 4e\neb 65\n45 85 f6\n78 0a\n44 89 f7\ne8 fe 56 ff ff\neb 08\n4c 89 e7\ne8 84 53 ff ff\n41 89 c5\n45 85 ed\n75 28\n8b 45 00\nff c8\n83 f8 04\n77 4e\n45 31 ed\nff 24 c5 b8 37 41 00\nc7 45 00 02 00 00 00\n45 85 f6\n79 0d\neb 24\n83 7d 04 00\n75 49\n45 85 f6\n78 19\n4d 85 ff\n75 14\ne8 b5 51 ff ff\n48 89 c3\n8b 2b\n44 89 f7\ne8 58 54 ff ff\n89 2b\n44 89 e8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf e1 38 41 00\nbe 43 38 41 00\nba 97 00 00 00\nb9 50 38 41 00\ne8 bb 53 ff ff\nbf 30 38 41 00\nbe 43 38 41 00\nba 93 00 00 00\nb9 50 38 41 00\ne8 a2 53 ff ff\n'
p901
S'.text:000000000040d040\n.text:000000000040d041\n.text:000000000040d043\n.text:000000000040d045\n.text:000000000040d047\n.text:000000000040d049\n.text:000000000040d04a\n.text:000000000040d04b\n.text:000000000040d04e\n.text:000000000040d050\n.text:000000000040d053\n.text:000000000040d056\n.text:000000000040d059\n.text:000000000040d05c\n.text:000000000040d05e\n.text:000000000040d061\n.text:000000000040d063\n.text:000000000040d069\n.text:000000000040d06b\n.text:000000000040d06d\n.text:000000000040d070\n.text:000000000040d076\n.text:000000000040d078\n.text:000000000040d07b\n.text:000000000040d080\n.text:000000000040d083\n.text:000000000040d086\n.text:000000000040d088\n.text:000000000040d08b\n.text:000000000040d090\n.text:000000000040d092\n.text:000000000040d096\n.text:000000000040d099\n.text:000000000040d09b\n.text:000000000040d09e\n.text:000000000040d0a1\n.text:000000000040d0a3\n.text:000000000040d0a5\n.text:000000000040d0aa\n.text:000000000040d0ad\n.text:000000000040d0b3\n.text:000000000040d0b9\n.text:000000000040d0bc\n.text:000000000040d0c1\n.text:000000000040d0c3\n.text:000000000040d0c5\n.text:000000000040d0cb\n.text:000000000040d0ce\n.text:000000000040d0d1\n.text:000000000040d0d3\n.text:000000000040d0d5\n.text:000000000040d0d8\n.text:000000000040d0da\n.text:000000000040d0dd\n.text:000000000040d0e2\n.text:000000000040d0e4\n.text:000000000040d0e7\n.text:000000000040d0ec\n.text:000000000040d0ef\n.text:000000000040d0f2\n.text:000000000040d0f4\n.text:000000000040d0f7\n.text:000000000040d0f9\n.text:000000000040d0fc\n.text:000000000040d0fe\n.text:000000000040d101\n.text:000000000040d108\n.text:000000000040d10f\n.text:000000000040d112\n.text:000000000040d114\n.text:000000000040d116\n.text:000000000040d11a\n.text:000000000040d11c\n.text:000000000040d11f\n.text:000000000040d121\n.text:000000000040d124\n.text:000000000040d126\n.text:000000000040d12b\n.text:000000000040d12e\n.text:000000000040d130\n.text:000000000040d133\n.text:000000000040d138\n.text:000000000040d13a\n.text:000000000040d13d\n.text:000000000040d141\n.text:000000000040d142\n.text:000000000040d144\n.text:000000000040d146\n.text:000000000040d148\n.text:000000000040d14a\n.text:000000000040d14b\n.text:000000000040d14c\n.text:000000000040d151\n.text:000000000040d156\n.text:000000000040d15b\n.text:000000000040d160\n.text:000000000040d165\n.text:000000000040d16a\n.text:000000000040d16f\n.text:000000000040d174\n.text:000000000040d179\n'
p902
tp903
sS'__assert_fail'
p904
(S'\n__stdcall __assert_fail(char * __assertion, char * __file, uint __line, char * __function)\n'
p905
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\u000a\u000a{\u000a  (*(code *)PTR___assert_fail_00618178)();\u000a  return;\u000a}\u000a\u000a
p906
S'JMP qword ptr [0x00618178]\n'
p907
S'ff 25 52 5c 21 00\n'
p908
S'.plt:0000000000402520\n'
p909
tp910
sS'extent_scan_init'
p911
(S'\n__stdcall extent_scan_init(extent_scan * scan)\n'
p912
V\u000avoid extent_scan_init(extent_scan *scan)\u000a\u000a{\u000a  undefined4 *in_RSI;\u000a  \u000a  *in_RSI = (int)scan;\u000a  *(undefined8 *)(in_RSI + 6) = 0;\u000a  *(undefined8 *)(in_RSI + 10) = 0;\u000a  *(undefined8 *)(in_RSI + 2) = 0;\u000a  *(undefined *)(in_RSI + 8) = 0;\u000a  *(undefined *)((long)in_RSI + 0x21) = 0;\u000a  in_RSI[4] = 1;\u000a  return;\u000a}\u000a\u000a
p913
S'MOV dword ptr [RSI],EDI\nMOV qword ptr [RSI + 0x18],0x0\nMOV qword ptr [RSI + 0x28],0x0\nMOV qword ptr [RSI + 0x8],0x0\nMOV byte ptr [RSI + 0x20],0x0\nMOV byte ptr [RSI + 0x21],0x0\nMOV dword ptr [RSI + 0x10],0x1\nRET\n'
p914
S'89 3e\n48 c7 46 18 00 00 00 00\n48 c7 46 28 00 00 00 00\n48 c7 46 08 00 00 00 00\nc6 46 20 00\nc6 46 21 00\nc7 46 10 01 00 00 00\nc3\n'
p915
S'.text:0000000000408670\n.text:0000000000408672\n.text:000000000040867a\n.text:0000000000408682\n.text:000000000040868a\n.text:000000000040868e\n.text:0000000000408692\n.text:0000000000408699\n'
p916
tp917
sS'bindtextdomain'
p918
(S'\n__stdcall bindtextdomain()\n'
p919
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_006180e0)();\u000a  return;\u000a}\u000a\u000a
p920
S'JMP qword ptr [0x006180e0]\n'
p921
S'ff 25 ea 5c 21 00\n'
p922
S'.plt:00000000004023f0\n'
p923
tp924
sS'set_char_quoting'
p925
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p926
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p927
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x61a960\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p928
S'89 f1\n48 85 ff\nbe 60 a9 61 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p929
S'.text:000000000040b300\n.text:000000000040b302\n.text:000000000040b305\n.text:000000000040b30a\n.text:000000000040b30e\n.text:000000000040b310\n.text:000000000040b313\n.text:000000000040b317\n.text:000000000040b31c\n.text:000000000040b31f\n.text:000000000040b321\n.text:000000000040b323\n.text:000000000040b326\n.text:000000000040b328\n.text:000000000040b32b\n.text:000000000040b32d\n.text:000000000040b330\n.text:000000000040b335\n'
p930
tp931
sS'full_read'
p932
(S'\n__stdcall full_read(void * buf, size_t count)\n'
p933
V\u000asize_t full_read(void *buf,size_t count)\u000a\u000a{\u000a  size_t sVar1;\u000a  int *piVar2;\u000a  long in_RDX;\u000a  size_t sVar3;\u000a  \u000a  sVar3 = 0;\u000a  if (in_RDX != 0) {\u000a    do {\u000a      sVar1 = safe_read((void *)((ulong)buf & 0xffffffff),count);\u000a      if (sVar1 == 0xffffffffffffffff) {\u000a        return sVar3;\u000a      }\u000a      if (sVar1 == 0) {\u000a        piVar2 = __errno_location();\u000a        *piVar2 = 0;\u000a        return sVar3;\u000a      }\u000a      sVar3 = sVar3 + sVar1;\u000a      count = count + sVar1;\u000a      in_RDX = in_RDX - sVar1;\u000a    } while (in_RDX != 0);\u000a  }\u000a  return sVar3;\u000a}\u000a\u000a
p934
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV RBX,RSI\nMOV EBP,EDI\nXOR R14D,R14D\nTEST R15,R15\nJZ 0x004097d0\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R15\nCALL 0x0040caf0\nCMP RAX,-0x1\nJZ 0x004097d0\nTEST RAX,RAX\nJZ 0x004097c5\nADD R14,RAX\nADD RBX,RAX\nSUB R15,RAX\nJNZ 0x004097a0\nJMP 0x004097d0\nCALL 0x004022e0\nMOV dword ptr [RAX],0x0\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p935
S'55\n41 57\n41 56\n53\n50\n49 89 d7\n48 89 f3\n89 fd\n45 31 f6\n4d 85 ff\n74 39\n66 0f 1f 84 00 00 00 00 00\n89 ef\n48 89 de\n4c 89 fa\ne8 43 33 00 00\n48 83 f8 ff\n74 1d\n48 85 c0\n74 0d\n49 01 c6\n48 01 c3\n49 29 c7\n75 dd\neb 0b\ne8 16 8b ff ff\nc7 00 00 00 00 00\n4c 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p936
S'.text:0000000000409780\n.text:0000000000409781\n.text:0000000000409783\n.text:0000000000409785\n.text:0000000000409786\n.text:0000000000409787\n.text:000000000040978a\n.text:000000000040978d\n.text:000000000040978f\n.text:0000000000409792\n.text:0000000000409795\n.text:0000000000409797\n.text:00000000004097a0\n.text:00000000004097a2\n.text:00000000004097a5\n.text:00000000004097a8\n.text:00000000004097ad\n.text:00000000004097b1\n.text:00000000004097b3\n.text:00000000004097b6\n.text:00000000004097b8\n.text:00000000004097bb\n.text:00000000004097be\n.text:00000000004097c1\n.text:00000000004097c3\n.text:00000000004097c5\n.text:00000000004097ca\n.text:00000000004097d0\n.text:00000000004097d3\n.text:00000000004097d7\n.text:00000000004097d8\n.text:00000000004097da\n.text:00000000004097dc\n.text:00000000004097dd\n'
p937
tp938
sS'xcalloc'
p939
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p940
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p941
S'PUSH RAX\nCALL 0x0040eec0\nTEST RAX,RAX\nJZ 0x0040eadd\nPOP RCX\nRET\nCALL 0x0040eb40\n'
p942
S'50\ne8 ea 03 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p943
S'.text:000000000040ead0\n.text:000000000040ead1\n.text:000000000040ead6\n.text:000000000040ead9\n.text:000000000040eadb\n.text:000000000040eadc\n.text:000000000040eadd\n'
p944
tp945
sS'pathconf'
p946
(S'\n__stdcall pathconf(char * __path, int __name)\n'
p947
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000along pathconf(char *__path,int __name)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = (*(code *)PTR_pathconf_006180c8)();\u000a  return lVar1;\u000a}\u000a\u000a
p948
S'JMP qword ptr [0x006180c8]\n'
p949
S'ff 25 02 5d 21 00\n'
p950
S'.plt:00000000004023c0\n'
p951
tp952
sS'local_utimensat'
p953
(S'\n__stdcall local_utimensat(char * file, timespec * ts)\n'
p954
V\u000aint local_utimensat(char *file,timespec *ts)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int __fd;\u000a  int *piVar4;\u000a  saved_cwd *__ptr;\u000a  uint *puVar5;\u000a  undefined4 *in_RCX;\u000a  undefined4 extraout_EDX;\u000a  timespec *timespec;\u000a  char proc_buf [4032];\u000a  saved_cwd local_ff8 [252];\u000a  \u000a  iVar2 = (int)in_RCX;\u000a  if (((ulong)in_RCX & 0xfffffeff) == 0) {\u000a    __fd = (int)(char *)((ulong)file & 0xffffffff);\u000a    if ((__fd == -100) || (*(char *)&ts->tv_sec == '/')) {\u000a      if (iVar2 != 0x100) {\u000a        iVar2 = utimens((char *)ts,timespec);\u000a        return iVar2;\u000a      }\u000a      iVar2 = lutimens((char *)ts,timespec);\u000a      return iVar2;\u000a    }\u000a    __ptr = (saved_cwd *)openat_proc_name((char *)local_ff8,(char *)((ulong)file & 0xffffffff));\u000a    if (__ptr != (saved_cwd *)0x0) {\u000a      if (iVar2 == 0x100) {\u000a        iVar3 = lutimens((char *)__ptr,timespec);\u000a      }\u000a      else {\u000a        iVar3 = utimens((char *)__ptr,timespec);\u000a      }\u000a      puVar5 = (uint *)__errno_location();\u000a      uVar1 = *puVar5;\u000a      if (__ptr != local_ff8) {\u000a        free(__ptr);\u000a      }\u000a      if (iVar3 != -1) {\u000a        return iVar3;\u000a      }\u000a      if (((0x26 < uVar1) ||\u000a          (in_RCX = (undefined4 *)&DAT_4000102006, (0x4000102006U >> ((ulong)uVar1 & 0x1f) & 1) == 0\u000a          )) && (uVar1 != 0x5f)) {\u000a        *puVar5 = uVar1;\u000a        return -1;\u000a      }\u000a    }\u000a    iVar3 = save_cwd(local_ff8);\u000a    if (iVar3 != 0) {\u000a      puVar5 = (uint *)__errno_location();\u000a      openat_save_fail((ulong)*puVar5);\u000aLAB_0040f53d:\u000a      puVar5 = (uint *)__errno_location();\u000a      openat_restore_fail((ulong)*puVar5);\u000a      *in_RCX = extraout_EDX;\u000a      return 0;\u000a    }\u000a    if ((__fd < 0) || (local_ff8[0].desc != __fd)) {\u000a      __fd = fchdir(__fd);\u000a      if (__fd == 0) {\u000a        if (iVar2 == 0x100) {\u000a          iVar2 = lutimens((char *)ts,timespec);\u000a        }\u000a        else {\u000a          iVar2 = utimens((char *)ts,timespec);\u000a        }\u000a        __fd = 0;\u000a        if (iVar2 == -1) {\u000a          piVar4 = __errno_location();\u000a          __fd = *piVar4;\u000a        }\u000a        iVar3 = restore_cwd(local_ff8);\u000a        if (iVar3 == 0) {\u000a          free_cwd(local_ff8);\u000a          if (__fd == 0) {\u000a            return iVar2;\u000a          }\u000a          piVar4 = __errno_location();\u000a          *piVar4 = __fd;\u000a          return iVar2;\u000a        }\u000a        goto LAB_0040f53d;\u000a      }\u000a      piVar4 = __errno_location();\u000a      iVar2 = *piVar4;\u000a      free_cwd(local_ff8);\u000a      *piVar4 = iVar2;\u000a    }\u000a    else {\u000a      free_cwd(local_ff8);\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 9;\u000a    }\u000a  }\u000a  else {\u000a    piVar4 = __errno_location();\u000a    *piVar4 = 0x16;\u000a  }\u000a  return -1;\u000a}\u000a\u000a
p955
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xfd8\nMOV EBP,ECX\nMOV R14,RDX\nMOV R15,RSI\nMOV EBX,EDI\nTEST EBP,0xfffffeff\nJZ 0x0040f3a9\nCALL 0x004022e0\nMOV dword ptr [RAX],0x16\nMOV R12D,0xffffffff\nMOV EAX,R12D\nADD RSP,0xfd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP EBX,-0x64\nJZ 0x0040f3b4\nCMP byte ptr [R15],0x2f\nJNZ 0x0040f3e7\nMOV RDI,R15\nMOV RSI,R14\nADD RSP,0xfd8\nCMP EBP,0x100\nJNZ 0x0040f3d8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040e2a0\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040e280\nLEA RDI,[RSP + 0x10]\nMOV ESI,EBX\nMOV RDX,R15\nCALL 0x00410560\nMOV R13,RAX\nTEST R13,R13\nJZ 0x0040f468\nMOV RDI,R13\nMOV RSI,R14\nCMP EBP,0x100\nJNZ 0x0040f413\nCALL 0x0040e2a0\nJMP 0x0040f418\nCALL 0x0040e280\nMOV R12D,EAX\nCALL 0x004022e0\nMOV qword ptr [RSP + 0x8],RAX\nMOV EDX,dword ptr [RAX]\nLEA RAX,[RSP + 0x10]\nCMP R13,RAX\nJZ 0x0040f43f\nMOV RDI,R13\nMOV R13D,EDX\nCALL 0x00402290\nMOV EDX,R13D\nCMP R12D,-0x1\nJNZ 0x0040f394\nCMP EDX,0x26\nJA 0x0040f51c\nMOV EAX,EDX\nMOV RCX,0x4000102006\nBT RCX,RAX\nJNC 0x0040f51c\nLEA RDI,[RSP + 0x10]\nCALL 0x00410140\nTEST EAX,EAX\nJNZ 0x0040f531\nTEST EBX,EBX\nJS 0x0040f49e\nCMP dword ptr [RSP + 0x10],EBX\nJNZ 0x0040f49e\nLEA RDI,[RSP + 0x10]\nCALL 0x004101b0\nCALL 0x004022e0\nMOV dword ptr [RAX],0x9\nJMP 0x0040f38e\nMOV EDI,EBX\nCALL 0x004027e0\nTEST EAX,EAX\nJZ 0x0040f4c4\nCALL 0x004022e0\nMOV RBX,RAX\nMOV EBP,dword ptr [RBX]\nLEA RDI,[RSP + 0x10]\nCALL 0x004101b0\nMOV dword ptr [RBX],EBP\nJMP 0x0040f38e\nMOV RDI,R15\nMOV RSI,R14\nCMP EBP,0x100\nJNZ 0x0040f4d9\nCALL 0x0040e2a0\nJMP 0x0040f4de\nCALL 0x0040e280\nMOV R12D,EAX\nXOR EBX,EBX\nCMP R12D,-0x1\nJNZ 0x0040f4f0\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nLEA RDI,[RSP + 0x10]\nCALL 0x00410190\nTEST EAX,EAX\nJNZ 0x0040f53d\nLEA RDI,[RSP + 0x10]\nCALL 0x004101b0\nTEST EBX,EBX\nJZ 0x0040f394\nCALL 0x004022e0\nMOV dword ptr [RAX],EBX\nJMP 0x0040f394\nCMP EDX,0x5f\nJZ 0x0040f468\nMOV RAX,qword ptr [RSP + 0x8]\nMOV dword ptr [RAX],EDX\nJMP 0x0040f394\nCALL 0x004022e0\nMOV EDI,dword ptr [RAX]\nCALL 0x004100c0\nCALL 0x004022e0\nMOV EDI,dword ptr [RAX]\nCALL 0x00410100\nNOP dword ptr [RAX]\n'
p956
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 0f 00 00\n89 cd\n49 89 d6\n49 89 f7\n89 fb\nf7 c5 ff fe ff ff\n74 26\ne8 58 2f ff ff\nc7 00 16 00 00 00\n41 bc ff ff ff ff\n44 89 e0\n48 81 c4 d8 0f 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n83 fb 9c\n74 06\n41 80 3f 2f\n75 33\n4c 89 ff\n4c 89 f6\n48 81 c4 d8 0f 00 00\n81 fd 00 01 00 00\n75 0f\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 c8 ee ff ff\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 99 ee ff ff\n48 8d 7c 24 10\n89 de\n4c 89 fa\ne8 6a 11 00 00\n49 89 c5\n4d 85 ed\n74 6a\n4c 89 ef\n4c 89 f6\n81 fd 00 01 00 00\n75 07\ne8 8f ee ff ff\neb 05\ne8 68 ee ff ff\n41 89 c4\ne8 c0 2e ff ff\n48 89 44 24 08\n8b 10\n48 8d 44 24 10\n49 39 c5\n74 0e\n4c 89 ef\n41 89 d5\ne8 54 2e ff ff\n44 89 ea\n41 83 fc ff\n0f 85 4b ff ff ff\n83 fa 26\n0f 87 ca 00 00 00\n89 d0\n48 b9 06 20 10 00 40 00 00 00\n48 0f a3 c1\n0f 83 b4 00 00 00\n48 8d 7c 24 10\ne8 ce 0c 00 00\n85 c0\n0f 85 b7 00 00 00\n85 db\n78 20\n39 5c 24 10\n75 1a\n48 8d 7c 24 10\ne8 22 0d 00 00\ne8 4d 2e ff ff\nc7 00 09 00 00 00\ne9 f0 fe ff ff\n89 df\ne8 3b 33 ff ff\n85 c0\n74 1b\ne8 32 2e ff ff\n48 89 c3\n8b 2b\n48 8d 7c 24 10\ne8 f3 0c 00 00\n89 2b\ne9 ca fe ff ff\n4c 89 ff\n4c 89 f6\n81 fd 00 01 00 00\n75 07\ne8 c9 ed ff ff\neb 05\ne8 a2 ed ff ff\n41 89 c4\n31 db\n41 83 fc ff\n75 07\ne8 f2 2d ff ff\n8b 18\n48 8d 7c 24 10\ne8 96 0c 00 00\n85 c0\n75 3f\n48 8d 7c 24 10\ne8 a8 0c 00 00\n85 db\n0f 84 84 fe ff ff\ne8 cb 2d ff ff\n89 18\ne9 78 fe ff ff\n83 fa 5f\n0f 84 43 ff ff ff\n48 8b 44 24 08\n89 10\ne9 63 fe ff ff\ne8 aa 2d ff ff\n8b 38\ne8 83 0b 00 00\ne8 9e 2d ff ff\n8b 38\ne8 b7 0b 00 00\n0f 1f 80 00 00 00 00\n'
p957
S'.text:000000000040f360\n.text:000000000040f361\n.text:000000000040f363\n.text:000000000040f365\n.text:000000000040f367\n.text:000000000040f369\n.text:000000000040f36a\n.text:000000000040f371\n.text:000000000040f373\n.text:000000000040f376\n.text:000000000040f379\n.text:000000000040f37b\n.text:000000000040f381\n.text:000000000040f383\n.text:000000000040f388\n.text:000000000040f38e\n.text:000000000040f394\n.text:000000000040f397\n.text:000000000040f39e\n.text:000000000040f39f\n.text:000000000040f3a1\n.text:000000000040f3a3\n.text:000000000040f3a5\n.text:000000000040f3a7\n.text:000000000040f3a8\n.text:000000000040f3a9\n.text:000000000040f3ac\n.text:000000000040f3ae\n.text:000000000040f3b2\n.text:000000000040f3b4\n.text:000000000040f3b7\n.text:000000000040f3ba\n.text:000000000040f3c1\n.text:000000000040f3c7\n.text:000000000040f3c9\n.text:000000000040f3ca\n.text:000000000040f3cc\n.text:000000000040f3ce\n.text:000000000040f3d0\n.text:000000000040f3d2\n.text:000000000040f3d3\n.text:000000000040f3d8\n.text:000000000040f3d9\n.text:000000000040f3db\n.text:000000000040f3dd\n.text:000000000040f3df\n.text:000000000040f3e1\n.text:000000000040f3e2\n.text:000000000040f3e7\n.text:000000000040f3ec\n.text:000000000040f3ee\n.text:000000000040f3f1\n.text:000000000040f3f6\n.text:000000000040f3f9\n.text:000000000040f3fc\n.text:000000000040f3fe\n.text:000000000040f401\n.text:000000000040f404\n.text:000000000040f40a\n.text:000000000040f40c\n.text:000000000040f411\n.text:000000000040f413\n.text:000000000040f418\n.text:000000000040f41b\n.text:000000000040f420\n.text:000000000040f425\n.text:000000000040f427\n.text:000000000040f42c\n.text:000000000040f42f\n.text:000000000040f431\n.text:000000000040f434\n.text:000000000040f437\n.text:000000000040f43c\n.text:000000000040f43f\n.text:000000000040f443\n.text:000000000040f449\n.text:000000000040f44c\n.text:000000000040f452\n.text:000000000040f454\n.text:000000000040f45e\n.text:000000000040f462\n.text:000000000040f468\n.text:000000000040f46d\n.text:000000000040f472\n.text:000000000040f474\n.text:000000000040f47a\n.text:000000000040f47c\n.text:000000000040f47e\n.text:000000000040f482\n.text:000000000040f484\n.text:000000000040f489\n.text:000000000040f48e\n.text:000000000040f493\n.text:000000000040f499\n.text:000000000040f49e\n.text:000000000040f4a0\n.text:000000000040f4a5\n.text:000000000040f4a7\n.text:000000000040f4a9\n.text:000000000040f4ae\n.text:000000000040f4b1\n.text:000000000040f4b3\n.text:000000000040f4b8\n.text:000000000040f4bd\n.text:000000000040f4bf\n.text:000000000040f4c4\n.text:000000000040f4c7\n.text:000000000040f4ca\n.text:000000000040f4d0\n.text:000000000040f4d2\n.text:000000000040f4d7\n.text:000000000040f4d9\n.text:000000000040f4de\n.text:000000000040f4e1\n.text:000000000040f4e3\n.text:000000000040f4e7\n.text:000000000040f4e9\n.text:000000000040f4ee\n.text:000000000040f4f0\n.text:000000000040f4f5\n.text:000000000040f4fa\n.text:000000000040f4fc\n.text:000000000040f4fe\n.text:000000000040f503\n.text:000000000040f508\n.text:000000000040f50a\n.text:000000000040f510\n.text:000000000040f515\n.text:000000000040f517\n.text:000000000040f51c\n.text:000000000040f51f\n.text:000000000040f525\n.text:000000000040f52a\n.text:000000000040f52c\n.text:000000000040f531\n.text:000000000040f536\n.text:000000000040f538\n.text:000000000040f53d\n.text:000000000040f542\n.text:000000000040f544\n.text:000000000040f549\n'
p958
tp959
sS'clear_ungetc_buffer_preserving_position'
p960
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p961
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p962
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x0040f107\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x0040f150\n'
p963
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 3d 00 00 00\n'
p964
S'.text:000000000040f100\n.text:000000000040f104\n.text:000000000040f106\n.text:000000000040f107\n.text:000000000040f109\n.text:000000000040f10e\n'
p965
tp966
sS'install_file_in_dir'
p967
(S'\n__stdcall install_file_in_dir(char * from, char * to_dir, cp_options * x)\n'
p968
V\u000a_Bool install_file_in_dir(char *from,char *to_dir,cp_options *x)\u000a\u000a{\u000a  _Bool _Var1;\u000a  char *abase;\u000a  char in_CL;\u000a  \u000a  abase = last_component(from);\u000a  abase = file_name_concat(to_dir,abase,(char **)0x0);\u000a  if (in_CL != 0) {\u000a    _Var1 = mkancesdirs_safe_wd(from,abase,x);\u000a    if (_Var1 == false) {\u000a      _Var1 = false;\u000a      goto LAB_00403b69;\u000a    }\u000a  }\u000a  _Var1 = install_file_in_file(from,abase,x);\u000aLAB_00403b69:\u000a  free(abase);\u000a  return _Var1;\u000a}\u000a\u000a
p969
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R12D,ECX\nMOV R14,RDX\nMOV RBP,RSI\nMOV RBX,RDI\nCALL 0x004092f0\nXOR EDX,EDX\nMOV RDI,RBP\nMOV RSI,RAX\nCALL 0x00409650\nMOV R15,RAX\nTEST R12B,R12B\nJZ 0x00403b55\nMOV ECX,0x1\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nCALL 0x00403c20\nTEST AL,AL\nJZ 0x00403b67\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nCALL 0x004039d0\nMOV BL,AL\nJMP 0x00403b69\nXOR EBX,EBX\nMOV RDI,R15\nCALL 0x00402290\nMOV EAX,EBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p970
S'55\n41 57\n41 56\n41 54\n53\n41 89 cc\n49 89 d6\n48 89 f5\n48 89 fb\ne8 c7 57 00 00\n31 d2\n48 89 ef\n48 89 c6\ne8 1a 5b 00 00\n49 89 c7\n45 84 e4\n74 17\nb9 01 00 00 00\n48 89 df\n4c 89 fe\n4c 89 f2\ne8 cf 00 00 00\n84 c0\n74 12\n48 89 df\n4c 89 fe\n4c 89 f2\ne8 6d fe ff ff\n88 c3\neb 02\n31 db\n4c 89 ff\ne8 1f e7 ff ff\n89 d8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p971
S'.text:0000000000403b10\n.text:0000000000403b11\n.text:0000000000403b13\n.text:0000000000403b15\n.text:0000000000403b17\n.text:0000000000403b18\n.text:0000000000403b1b\n.text:0000000000403b1e\n.text:0000000000403b21\n.text:0000000000403b24\n.text:0000000000403b29\n.text:0000000000403b2b\n.text:0000000000403b2e\n.text:0000000000403b31\n.text:0000000000403b36\n.text:0000000000403b39\n.text:0000000000403b3c\n.text:0000000000403b3e\n.text:0000000000403b43\n.text:0000000000403b46\n.text:0000000000403b49\n.text:0000000000403b4c\n.text:0000000000403b51\n.text:0000000000403b53\n.text:0000000000403b55\n.text:0000000000403b58\n.text:0000000000403b5b\n.text:0000000000403b5e\n.text:0000000000403b63\n.text:0000000000403b65\n.text:0000000000403b67\n.text:0000000000403b69\n.text:0000000000403b6c\n.text:0000000000403b71\n.text:0000000000403b73\n.text:0000000000403b74\n.text:0000000000403b76\n.text:0000000000403b78\n.text:0000000000403b7a\n.text:0000000000403b7b\n'
p972
tp973
sS'xnmalloc'
p974
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p975
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p976
S'MOV RAX,RDI\nMUL RSI\nJO 0x0040e9a1\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x0040e9b0\nPUSH RAX\nCALL 0x0040eb40\n'
p977
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p978
S'.text:000000000040e990\n.text:000000000040e993\n.text:000000000040e996\n.text:000000000040e998\n.text:000000000040e99c\n.text:000000000040e99f\n.text:000000000040e9a1\n.text:000000000040e9a2\n'
p979
tp980
sS'need_copy'
p981
(S'\n__stdcall need_copy()\n'
p982
V\u000a_Bool need_copy(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int __fd;\u000a  uid_t uVar2;\u000a  gid_t gVar3;\u000a  int __fd_00;\u000a  int *piVar4;\u000a  byte bVar5;\u000a  char *__file;\u000a  char *__file_00;\u000a  stat dest_sb;\u000a  stat src_sb;\u000a  stat local_140;\u000a  stat local_b0;\u000a  \u000a  _Var1 = extra_mode();\u000a  bVar5 = 1;\u000a  if ((((((_Var1 == false) && (__fd = lstat(__file_00,&local_b0), __fd == 0)) &&\u000a        (__fd = lstat(__file,&local_140), __fd == 0)) &&\u000a       (((local_b0.st_mode & 0xf000) == 0x8000 && ((local_140.st_mode & 0xf000) == 0x8000)))) &&\u000a      ((_Var1 = extra_mode(), _Var1 == false &&\u000a       ((_Var1 = extra_mode(), _Var1 == false && (local_b0.st_size == local_140.st_size)))))) &&\u000a     ((local_140.st_mode & 0xfff) == mode)) {\u000a    uVar2 = owner_id;\u000a    if (owner_id == 0xffffffff) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a      uVar2 = getuid();\u000a      if ((uVar2 == 0xffffffff) && (*piVar4 != 0)) {\u000a        return true;\u000a      }\u000a    }\u000a    if (local_140.st_uid == uVar2) {\u000a      gVar3 = group_id;\u000a      if (group_id == 0xffffffff) {\u000a        piVar4 = __errno_location();\u000a        *piVar4 = 0;\u000a        gVar3 = getgid();\u000a        if ((gVar3 == 0xffffffff) && (*piVar4 != 0)) {\u000a          return true;\u000a        }\u000a      }\u000a      if ((local_140.st_gid == gVar3) && (__fd = open(__file_00,0), -1 < __fd)) {\u000a        __fd_00 = open(__file,0);\u000a        if (__fd_00 < 0) {\u000a          close(__fd);\u000a        }\u000a        else {\u000a          _Var1 = have_same_content();\u000a          close(__fd);\u000a          close(__fd_00);\u000a          bVar5 = _Var1 ^ 1;\u000a        }\u000a      }\u000a    }\u000a  }\u000a  return (_Bool)bVar5;\u000a}\u000a\u000a
p983
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x128\nMOV R14,RSI\nMOV RBX,RDI\nMOV EDI,dword ptr [0x00618400]\nCALL 0x00403800\nMOV BPL,0x1\nTEST AL,AL\nJNZ 0x00404174\nLEA RSI,[0x98 + RSP]\nMOV RDI,RBX\nCALL 0x004107b0\nTEST EAX,EAX\nJNZ 0x00404174\nLEA RSI,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x004107b0\nTEST EAX,EAX\nJNZ 0x00404174\nMOV EDI,dword ptr [0xb0 + RSP]\nMOV EAX,EDI\nAND EAX,0xf000\nCMP EAX,0x8000\nJNZ 0x00404174\nMOV R15D,dword ptr [RSP + 0x20]\nMOV EAX,R15D\nAND EAX,0xf000\nCMP EAX,0x8000\nJNZ 0x00404174\nCALL 0x00403800\nTEST AL,AL\nJNZ 0x00404174\nMOV EDI,R15D\nCALL 0x00403800\nTEST AL,AL\nJNZ 0x00404174\nMOV RAX,qword ptr [0xc8 + RSP]\nCMP RAX,qword ptr [RSP + 0x38]\nJNZ 0x00404174\nAND R15D,0xfff\nCMP R15D,dword ptr [0x00618400]\nJNZ 0x00404174\nMOV EAX,dword ptr [0x00618504]\nCMP EAX,-0x1\nJNZ 0x004040df\nCALL 0x004022e0\nMOV R15,RAX\nMOV dword ptr [R15],0x0\nCALL 0x00402480\nCMP EAX,-0x1\nJZ 0x0040415a\nCMP dword ptr [RSP + 0x24],EAX\nJNZ 0x00404174\nMOV EAX,dword ptr [0x00618508]\nCMP EAX,-0x1\nJNZ 0x0040410d\nCALL 0x004022e0\nMOV R15,RAX\nMOV dword ptr [R15],0x0\nCALL 0x00402720\nCMP EAX,-0x1\nJZ 0x00404165\nCMP dword ptr [RSP + 0x28],EAX\nJNZ 0x00404174\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x004028a0\nMOV EBX,EAX\nTEST EBX,EBX\nJS 0x00404174\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x004028a0\nMOV R14D,EAX\nTEST R14D,R14D\nJS 0x0040416d\nMOV EDI,EBX\nMOV ESI,R14D\nCALL 0x00404190\nMOV EBP,EAX\nMOV EDI,EBX\nCALL 0x00402590\nMOV EDI,R14D\nCALL 0x00402590\nXOR BPL,0x1\nJMP 0x00404174\nCMP dword ptr [R15],0x0\nJNZ 0x00404174\nJMP 0x004040df\nCMP dword ptr [R15],0x0\nJNZ 0x00404174\nJMP 0x0040410d\nMOV EDI,EBX\nCALL 0x00402590\nMOV EAX,EBP\nADD RSP,0x128\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p984
S'55\n41 57\n41 56\n53\n48 81 ec 28 01 00 00\n49 89 f6\n48 89 fb\n8b 3d f7 43 21 00\ne8 f2 f7 ff ff\n40 b5 01\n84 c0\n0f 85 5b 01 00 00\n48 8d b4 24 98 00 00 00\n48 89 df\ne8 87 c7 00 00\n85 c0\n0f 85 43 01 00 00\n48 8d 74 24 08\n4c 89 f7\ne8 72 c7 00 00\n85 c0\n0f 85 2e 01 00 00\n8b bc 24 b0 00 00 00\n89 f8\n25 00 f0 00 00\n3d 00 80 00 00\n0f 85 15 01 00 00\n44 8b 7c 24 20\n44 89 f8\n25 00 f0 00 00\n3d 00 80 00 00\n0f 85 fd 00 00 00\ne8 84 f7 ff ff\n84 c0\n0f 85 f0 00 00 00\n44 89 ff\ne8 74 f7 ff ff\n84 c0\n0f 85 e0 00 00 00\n48 8b 84 24 c8 00 00 00\n48 3b 44 24 38\n0f 85 cd 00 00 00\n41 81 e7 ff 0f 00 00\n44 3b 3d 4b 43 21 00\n0f 85 b9 00 00 00\n8b 05 43 44 21 00\n83 f8 ff\n75 19\ne8 15 e2 ff ff\n49 89 c7\n41 c7 07 00 00 00 00\ne8 a6 e3 ff ff\n83 f8 ff\n74 7b\n39 44 24 24\n0f 85 8b 00 00 00\n8b 05 19 44 21 00\n83 f8 ff\n75 19\ne8 e7 e1 ff ff\n49 89 c7\n41 c7 07 00 00 00 00\ne8 18 e6 ff ff\n83 f8 ff\n74 58\n39 44 24 28\n75 61\n31 f6\n31 c0\n48 89 df\ne8 81 e7 ff ff\n89 c3\n85 db\n78 4f\n31 f6\n31 c0\n4c 89 f7\ne8 6f e7 ff ff\n41 89 c6\n45 85 f6\n78 34\n89 df\n44 89 f6\ne8 4d 00 00 00\n89 c5\n89 df\ne8 44 e4 ff ff\n44 89 f7\ne8 3c e4 ff ff\n40 80 f5 01\neb 1a\n41 83 3f 00\n75 14\ne9 7a ff ff ff\n41 83 3f 00\n75 09\neb a0\n89 df\ne8 1c e4 ff ff\n89 e8\n48 81 c4 28 01 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p985
S'.text:0000000000403ff0\n.text:0000000000403ff1\n.text:0000000000403ff3\n.text:0000000000403ff5\n.text:0000000000403ff6\n.text:0000000000403ffd\n.text:0000000000404000\n.text:0000000000404003\n.text:0000000000404009\n.text:000000000040400e\n.text:0000000000404011\n.text:0000000000404013\n.text:0000000000404019\n.text:0000000000404021\n.text:0000000000404024\n.text:0000000000404029\n.text:000000000040402b\n.text:0000000000404031\n.text:0000000000404036\n.text:0000000000404039\n.text:000000000040403e\n.text:0000000000404040\n.text:0000000000404046\n.text:000000000040404d\n.text:000000000040404f\n.text:0000000000404054\n.text:0000000000404059\n.text:000000000040405f\n.text:0000000000404064\n.text:0000000000404067\n.text:000000000040406c\n.text:0000000000404071\n.text:0000000000404077\n.text:000000000040407c\n.text:000000000040407e\n.text:0000000000404084\n.text:0000000000404087\n.text:000000000040408c\n.text:000000000040408e\n.text:0000000000404094\n.text:000000000040409c\n.text:00000000004040a1\n.text:00000000004040a7\n.text:00000000004040ae\n.text:00000000004040b5\n.text:00000000004040bb\n.text:00000000004040c1\n.text:00000000004040c4\n.text:00000000004040c6\n.text:00000000004040cb\n.text:00000000004040ce\n.text:00000000004040d5\n.text:00000000004040da\n.text:00000000004040dd\n.text:00000000004040df\n.text:00000000004040e3\n.text:00000000004040e9\n.text:00000000004040ef\n.text:00000000004040f2\n.text:00000000004040f4\n.text:00000000004040f9\n.text:00000000004040fc\n.text:0000000000404103\n.text:0000000000404108\n.text:000000000040410b\n.text:000000000040410d\n.text:0000000000404111\n.text:0000000000404113\n.text:0000000000404115\n.text:0000000000404117\n.text:000000000040411a\n.text:000000000040411f\n.text:0000000000404121\n.text:0000000000404123\n.text:0000000000404125\n.text:0000000000404127\n.text:0000000000404129\n.text:000000000040412c\n.text:0000000000404131\n.text:0000000000404134\n.text:0000000000404137\n.text:0000000000404139\n.text:000000000040413b\n.text:000000000040413e\n.text:0000000000404143\n.text:0000000000404145\n.text:0000000000404147\n.text:000000000040414c\n.text:000000000040414f\n.text:0000000000404154\n.text:0000000000404158\n.text:000000000040415a\n.text:000000000040415e\n.text:0000000000404160\n.text:0000000000404165\n.text:0000000000404169\n.text:000000000040416b\n.text:000000000040416d\n.text:000000000040416f\n.text:0000000000404174\n.text:0000000000404176\n.text:000000000040417d\n.text:000000000040417e\n.text:0000000000404180\n.text:0000000000404182\n.text:0000000000404183\n'
p986
tp987
sS'quotearg_char'
p988
(S'\n__stdcall quotearg_char(char * arg)\n'
p989
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p990
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x0040c500\n'
p991
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p992
S'.text:000000000040c570\n.text:000000000040c572\n.text:000000000040c579\n.text:000000000040c57b\n'
p993
tp994
sS'malloc'
p995
(S'\n__stdcall malloc(size_t __size)\n'
p996
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_00618298)();\u000a  return pvVar1;\u000a}\u000a\u000a
p997
S'JMP qword ptr [0x00618298]\n'
p998
S'ff 25 32 5b 21 00\n'
p999
S'.plt:0000000000402760\n'
p1000
tp1001
sS'octal_to_mode'
p1002
(S'\n__stdcall octal_to_mode()\n'
p1003
V\u000amode_t octal_to_mode(void)\u000a\u000a{\u000a  mode_t in_EDI;\u000a  \u000a  return in_EDI;\u000a}\u000a\u000a
p1004
S'MOV EAX,EDI\nRET\n'
p1005
S'89 f8\nc3\n'
p1006
S'.text:000000000040afd0\n.text:000000000040afd2\n'
p1007
tp1008
sS'cdb_free'
p1009
(S'\n__stdcall cdb_free(cd_buf * cdb)\n'
p1010
V\u000avoid cdb_free(cd_buf *cdb)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (-1 < (int)*cdb) {\u000a    iVar1 = close((int)*cdb);\u000a    if (iVar1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("! close_fail","lib/chdir-long.c",0x40,"void cdb_free(const struct cd_buf *)");\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1011
S'PUSH RAX\nMOV EDI,dword ptr [RDI]\nTEST EDI,EDI\nJS 0x004104c0\nCALL 0x00402590\nTEST EAX,EAX\nJNZ 0x004104c2\nPOP RAX\nRET\nMOV EDI,0x414448\nMOV ESI,0x4143e6\nMOV EDX,0x40\nMOV ECX,0x414455\nCALL 0x00402520\n'
p1012
S'50\n8b 3f\n85 ff\n78 09\ne8 d4 20 ff ff\n85 c0\n75 02\n58\nc3\nbf 48 44 41 00\nbe e6 43 41 00\nba 40 00 00 00\nb9 55 44 41 00\ne8 45 20 ff ff\n'
p1013
S'.text:00000000004104b0\n.text:00000000004104b1\n.text:00000000004104b3\n.text:00000000004104b5\n.text:00000000004104b7\n.text:00000000004104bc\n.text:00000000004104be\n.text:00000000004104c0\n.text:00000000004104c1\n.text:00000000004104c2\n.text:00000000004104c7\n.text:00000000004104cc\n.text:00000000004104d1\n.text:00000000004104d6\n'
p1014
tp1015
sS'get_version'
p1016
(S'\n__stdcall get_version(char * context, char * version)\n'
p1017
V\u000abackup_type get_version(char *context,char *version)\u000a\u000a{\u000a  backup_type bVar1;\u000a  ptrdiff_t pVar2;\u000a  \u000a  bVar1 = numbered_existing_backups;\u000a  if ((version != (char *)0x0) && (*version != 0)) {\u000a    pVar2 = __xargmatch_internal(context,version,backup_args,(char *)backup_types,4,argmatch_die);\u000a    bVar1 = backup_types[pVar2];\u000a  }\u000a  return bVar1;\u000a}\u000a\u000a
p1018
S'MOV EAX,0x2\nTEST RSI,RSI\nJZ 0x00408f47\nCMP byte ptr [RSI],0x0\nJZ 0x00408f47\nPUSH RAX\nMOV R9,qword ptr [0x00618480]\nMOV EDX,0x412c10\nMOV ECX,0x412bf0\nMOV R8D,0x4\nCALL 0x0040f810\nMOV EAX,dword ptr [0x412bf0 + RAX*0x4]\nADD RSP,0x8\nRET\n'
p1019
S'b8 02 00 00 00\n48 85 f6\n74 2d\n80 3e 00\n74 28\n50\n4c 8b 0d 59 f5 20 00\nba 10 2c 41 00\nb9 f0 2b 41 00\n41 b8 04 00 00 00\ne8 d4 68 00 00\n8b 04 85 f0 2b 41 00\n48 83 c4 08\nc3\n'
p1020
S'.text:0000000000408f10\n.text:0000000000408f15\n.text:0000000000408f18\n.text:0000000000408f1a\n.text:0000000000408f1d\n.text:0000000000408f1f\n.text:0000000000408f20\n.text:0000000000408f27\n.text:0000000000408f2c\n.text:0000000000408f31\n.text:0000000000408f37\n.text:0000000000408f3c\n.text:0000000000408f43\n.text:0000000000408f47\n'
p1021
tp1022
sS'hash_get_n_buckets'
p1023
(S'\n__stdcall hash_get_n_buckets(Hash_table * table)\n'
p1024
V\u000asize_t hash_get_n_buckets(Hash_table *table)\u000a\u000a{\u000a  return table->n_buckets;\u000a}\u000a\u000a
p1025
S'MOV RAX,qword ptr [RDI + 0x10]\nRET\n'
p1026
S'48 8b 47 10\nc3\n'
p1027
S'.text:0000000000409840\n.text:0000000000409844\n'
p1028
tp1029
sS'dup_cloexec'
p1030
(S'\n__stdcall dup_cloexec()\n'
p1031
V\u000aint dup_cloexec(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0x406,0);\u000a  return iVar1;\u000a}\u000a\u000a
p1032
S'MOV ESI,0x406\nXOR EDX,EDX\nXOR EAX,EAX\nJMP 0x0040ef10\n'
p1033
S'be 06 04 00 00\n31 d2\n31 c0\ne9 32 e8 ff ff\n'
p1034
S'.text:00000000004106d0\n.text:00000000004106d5\n.text:00000000004106d7\n.text:00000000004106d9\n'
p1035
tp1036
sS'is_probably_sparse'
p1037
(S'\n__stdcall is_probably_sparse(stat * sb)\n'
p1038
V\u000a_Bool is_probably_sparse(stat *sb)\u000a\u000a{\u000a  if ((sb->st_mode & 0xf000) == 0x8000) {\u000a    return (_Bool)(sb->st_blocks < (long)(((ulong)(sb->st_size >> 0x3f) >> 0x37) + sb->st_size) >> 9\u000a                  );\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1039
S'MOV EAX,0xf000\nAND EAX,dword ptr [RDI + 0x18]\nCMP EAX,0x8000\nJNZ 0x00407aad\nMOV RAX,qword ptr [RDI + 0x30]\nMOV RCX,RAX\nSAR RCX,0x3f\nSHR RCX,0x37\nADD RCX,RAX\nSAR RCX,0x9\nCMP qword ptr [RDI + 0x40],RCX\nSETL AL\nRET\nXOR EAX,EAX\nRET\n'
p1040
S'b8 00 f0 00 00\n23 47 18\n3d 00 80 00 00\n75 1e\n48 8b 47 30\n48 89 c1\n48 c1 f9 3f\n48 c1 e9 37\n48 01 c1\n48 c1 f9 09\n48 39 4f 40\n0f 9c c0\nc3\n31 c0\nc3\n'
p1041
S'.text:0000000000407a80\n.text:0000000000407a85\n.text:0000000000407a88\n.text:0000000000407a8d\n.text:0000000000407a8f\n.text:0000000000407a93\n.text:0000000000407a96\n.text:0000000000407a9a\n.text:0000000000407a9e\n.text:0000000000407aa1\n.text:0000000000407aa5\n.text:0000000000407aa9\n.text:0000000000407aac\n.text:0000000000407aad\n.text:0000000000407aaf\n'
p1042
tp1043
sS'set_acl'
p1044
(S'\n__stdcall set_acl(char * name)\n'
p1045
V\u000aint set_acl(char *name)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  \u000a  iVar2 = qset_acl(name);\u000a  if (iVar2 != 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    uVar4 = dcgettext(0,"setting permissions for %s",5);\u000a    pcVar5 = quote(name);\u000a    error(0,(ulong)uVar1,uVar4,pcVar5);\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1046
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x0040b280\nMOV EBX,EAX\nTEST EBX,EBX\nJZ 0x00408a0b\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4125d0\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV RDI,R14\nCALL 0x0040c6e0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBP\nCALL 0x00402870\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1047
S'55\n41 57\n41 56\n53\n50\n49 89 fe\ne8 b1 28 00 00\n89 c3\n85 db\n74 36\ne8 06 99 ff ff\n44 8b 38\n31 ff\nbe d0 25 41 00\nba 05 00 00 00\ne8 32 9a ff ff\n48 89 c5\n4c 89 f7\ne8 e7 3c 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 ea\ne8 65 9e ff ff\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1048
S'.text:00000000004089c0\n.text:00000000004089c1\n.text:00000000004089c3\n.text:00000000004089c5\n.text:00000000004089c6\n.text:00000000004089c7\n.text:00000000004089ca\n.text:00000000004089cf\n.text:00000000004089d1\n.text:00000000004089d3\n.text:00000000004089d5\n.text:00000000004089da\n.text:00000000004089dd\n.text:00000000004089df\n.text:00000000004089e4\n.text:00000000004089e9\n.text:00000000004089ee\n.text:00000000004089f1\n.text:00000000004089f4\n.text:00000000004089f9\n.text:00000000004089fc\n.text:00000000004089fe\n.text:0000000000408a00\n.text:0000000000408a03\n.text:0000000000408a06\n.text:0000000000408a0b\n.text:0000000000408a0d\n.text:0000000000408a11\n.text:0000000000408a12\n.text:0000000000408a14\n.text:0000000000408a16\n.text:0000000000408a17\n'
p1049
tp1050
sS'bkm_scale'
p1051
(S'\n__stdcall bkm_scale(ulong * x)\n'
p1052
V\u000astrtol_error bkm_scale(ulong *x)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  int in_ESI;\u000a  bool bVar3;\u000a  \u000a  uVar1 = *x;\u000a  uVar2 = (long)in_ESI * uVar1;\u000a  bVar3 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816((ulong)(long)in_ESI),0\u000a                ) < uVar1;\u000a  if (bVar3) {\u000a    uVar2 = 0xffffffffffffffff;\u000a  }\u000a  *x = uVar2;\u000a  return -(uint)bVar3 & LONGINT_OVERFLOW;\u000a}\u000a\u000a
p1053
S'MOVSXD RCX,ESI\nMOV RSI,-0x1\nMOV RAX,-0x1\nXOR EDX,EDX\nDIV RCX\nMOV RDX,qword ptr [RDI]\nIMUL RCX,RDX\nCMP RAX,RDX\nCMOVC RCX,RSI\nSBB EAX,EAX\nAND EAX,0x1\nMOV qword ptr [RDI],RCX\nRET\n'
p1054
S'48 63 ce\n48 c7 c6 ff ff ff ff\n48 c7 c0 ff ff ff ff\n31 d2\n48 f7 f1\n48 8b 17\n48 0f af ca\n48 39 d0\n48 0f 42 ce\n19 c0\n83 e0 01\n48 89 0f\nc3\n'
p1055
S'.text:000000000040ede0\n.text:000000000040ede3\n.text:000000000040edea\n.text:000000000040edf1\n.text:000000000040edf3\n.text:000000000040edf6\n.text:000000000040edf9\n.text:000000000040edfd\n.text:000000000040ee00\n.text:000000000040ee04\n.text:000000000040ee06\n.text:000000000040ee09\n.text:000000000040ee0c\n'
p1056
tp1057
sS'memchr'
p1058
(S'\n__stdcall memchr(void * __s, int __c, size_t __n)\n'
p1059
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memchr(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memchr_006181d0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1060
S'JMP qword ptr [0x006181d0]\n'
p1061
S'ff 25 fa 5b 21 00\n'
p1062
S'.plt:00000000004025d0\n'
p1063
tp1064
sS'quotearg_style_mem'
p1065
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p1066
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1067
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x0040c480\n'
p1068
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p1069
S'.text:000000000040c4e0\n.text:000000000040c4e3\n.text:000000000040c4e6\n.text:000000000040c4e8\n.text:000000000040c4ea\n.text:000000000040c4ec\n.text:000000000040c4ef\n.text:000000000040c4f2\n'
p1070
tp1071
sS'xalloc_die'
p1072
(S'\n__stdcall xalloc_die()\n'
p1073
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,0x412558,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1074
S'PUSH RBX\nMOV EBX,dword ptr [0x00618420]\nXOR EDI,EDI\nMOV ESI,0x413c8f\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x412558\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00402870\nCALL 0x004022d0\n'
p1075
S'53\n8b 1d d9 98 20 00\n31 ff\nbe 8f 3c 41 00\nba 05 00 00 00\ne8 c8 38 ff ff\n48 89 c1\n31 f6\nba 58 25 41 00\n31 c0\n89 df\ne8 05 3d ff ff\ne8 60 37 ff ff\n'
p1076
S'.text:000000000040eb40\n.text:000000000040eb41\n.text:000000000040eb47\n.text:000000000040eb49\n.text:000000000040eb4e\n.text:000000000040eb53\n.text:000000000040eb58\n.text:000000000040eb5b\n.text:000000000040eb5d\n.text:000000000040eb62\n.text:000000000040eb64\n.text:000000000040eb66\n.text:000000000040eb6b\n'
p1077
tp1078
sS'open_safer'
p1079
(S'\n__stdcall open_safer(char * file)\n'
p1080
V\u000a/* WARNING: Removing unreachable block (ram,0x0040944e) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff58 : 0x0040945c */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint open_safer(char *file,...)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  uint __oflag;\u000a  va_list ap;\u000a  uint local_a8;\u000a  \u000a  uVar2 = 0;\u000a  if ((__oflag & 0x40) != 0) {\u000a    uVar2 = (ulong)local_a8;\u000a  }\u000a  open(file,__oflag,uVar2);\u000a  iVar1 = fd_safer();\u000a  return iVar1;\u000a}\u000a\u000a
p1081
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x004093f2\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nXOR EDX,EDX\nTEST SIL,0x40\nJZ 0x0040945e\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RCX,dword ptr [RSP]\nCMP RCX,0x28\nJA 0x0040944e\nMOV RAX,RCX\nADD RAX,qword ptr [RSP + 0x10]\nLEA ECX,[RCX + 0x8]\nMOV dword ptr [RSP],ECX\nJMP 0x0040945c\nMOV RAX,qword ptr [RSP + 0x8]\nLEA RCX,[RAX + 0x8]\nMOV qword ptr [RSP + 0x8],RCX\nMOV EDX,dword ptr [RAX]\nXOR EAX,EAX\nCALL 0x004028a0\nMOV EDI,EAX\nCALL 0x0040d780\nADD RSP,0xd8\nRET\n'
p1082
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n31 d2\n40 f6 c6 40\n74 50\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 0c 24\n48 83 f9 28\n77 10\n48 89 c8\n48 03 44 24 10\n8d 49 08\n89 0c 24\neb 0e\n48 8b 44 24 08\n48 8d 48 08\n48 89 4c 24 08\n8b 10\n31 c0\ne8 3b 94 ff ff\n89 c7\ne8 14 43 00 00\n48 81 c4 d8 00 00 00\nc3\n'
p1083
S'.text:00000000004093b0\n.text:00000000004093b7\n.text:00000000004093b9\n.text:00000000004093bb\n.text:00000000004093c0\n.text:00000000004093c5\n.text:00000000004093ca\n.text:00000000004093d2\n.text:00000000004093da\n.text:00000000004093e2\n.text:00000000004093ea\n.text:00000000004093f2\n.text:00000000004093f7\n.text:00000000004093fc\n.text:0000000000409401\n.text:0000000000409406\n.text:0000000000409408\n.text:000000000040940c\n.text:000000000040940e\n.text:0000000000409413\n.text:0000000000409418\n.text:0000000000409420\n.text:0000000000409425\n.text:000000000040942d\n.text:0000000000409434\n.text:0000000000409438\n.text:000000000040943c\n.text:000000000040943e\n.text:0000000000409441\n.text:0000000000409446\n.text:0000000000409449\n.text:000000000040944c\n.text:000000000040944e\n.text:0000000000409453\n.text:0000000000409457\n.text:000000000040945c\n.text:000000000040945e\n.text:0000000000409460\n.text:0000000000409465\n.text:0000000000409467\n.text:000000000040946c\n.text:0000000000409473\n'
p1084
tp1085
sS'quotearg_n_custom'
p1086
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p1087
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1088
S'MOV R8,-0x1\nJMP 0x0040c600\n'
p1089
S'49 c7 c0 ff ff ff ff\neb 07\n'
p1090
S'.text:000000000040c5f0\n.text:000000000040c5f7\n'
p1091
tp1092
sS'waitpid'
p1093
(S'\n__stdcall waitpid(__pid_t __pid, int * __stat_loc, int __options)\n'
p1094
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_waitpid_00618330)();\u000a  return _Var1;\u000a}\u000a\u000a
p1095
S'JMP qword ptr [0x00618330]\n'
p1096
S'ff 25 9a 5a 21 00\n'
p1097
S'.plt:0000000000402890\n'
p1098
tp1099
sS'fd_safer'
p1100
(S'\n__stdcall fd_safer()\n'
p1101
V\u000aint fd_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int *piVar3;\u000a  uint __fd;\u000a  \u000a  if (__fd < 3) {\u000a    uVar2 = dup_safer();\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(__fd);\u000a    *piVar3 = iVar1;\u000a    __fd = uVar2;\u000a  }\u000a  return (int)__fd;\u000a}\u000a\u000a
p1102
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nCMP EBX,0x2\nJA 0x0040d7b4\nMOV EDI,EBX\nCALL 0x0040d770\nMOV R14D,EAX\nCALL 0x004022e0\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV EDI,EBX\nCALL 0x00402590\nMOV dword ptr [RBP],R15D\nMOV EAX,R14D\nJMP 0x0040d7b6\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1103
S'55\n41 57\n41 56\n53\n50\n89 fb\n83 fb 02\n77 26\n89 df\ne8 db ff ff ff\n41 89 c6\ne8 43 4b ff ff\n48 89 c5\n44 8b 7d 00\n89 df\ne8 e5 4d ff ff\n44 89 7d 00\n44 89 f0\neb 02\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1104
S'.text:000000000040d780\n.text:000000000040d781\n.text:000000000040d783\n.text:000000000040d785\n.text:000000000040d786\n.text:000000000040d787\n.text:000000000040d789\n.text:000000000040d78c\n.text:000000000040d78e\n.text:000000000040d790\n.text:000000000040d795\n.text:000000000040d798\n.text:000000000040d79d\n.text:000000000040d7a0\n.text:000000000040d7a4\n.text:000000000040d7a6\n.text:000000000040d7ab\n.text:000000000040d7af\n.text:000000000040d7b2\n.text:000000000040d7b4\n.text:000000000040d7b6\n.text:000000000040d7ba\n.text:000000000040d7bb\n.text:000000000040d7bd\n.text:000000000040d7bf\n.text:000000000040d7c0\n'
p1105
tp1106
sS'main'
p1107
(S'\n__stdcall main(char * * argv)\n'
p1108
V\u000aint main(char **argv)\u000a\u000a{\u000a  char **act;\u000a  uint uVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  _Bool _Var6;\u000a  int iVar7;\u000a  int extraout_EAX;\u000a  undefined8 uVar8;\u000a  uint *puVar9;\u000a  char *context;\u000a  mode_change *__ptr;\u000a  char *__file;\u000a  ulong uVar10;\u000a  char **in_RSI;\u000a  cp_options *x;\u000a  char *version;\u000a  ulong uVar11;\u000a  char *mode_string;\u000a  bool bVar12;\u000a  stat st;\u000a  char *local_120;\u000a  cp_options local_108;\u000a  stat local_c0;\u000a  \u000a  set_program_name(*in_RSI);\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  bindtextdomain(0x411b1e,"/usr/local/share/locale");\u000a  textdomain(0x411b1e);\u000a  atexit(close_stdin);\u000a  cp_option_init(&local_108);\u000a  owner_name = (char *)0x0;\u000a  group_name = (char *)0x0;\u000a  strip_files = 0;\u000a  dir_arg = 0;\u000a  umask(0);\u000a  local_120 = getenv("SIMPLE_BACKUP_SUFFIX");\u000a  bVar3 = false;\u000a  version = (char *)0x0;\u000a  bVar5 = false;\u000a  bVar4 = false;\u000a  bVar2 = false;\u000a  __file = (char *)0x0;\u000a  mode_string = (char *)0;\u000aswitchD_00402f16_caseD_63:\u000a  iVar7 = getopt_long((ulong)argv & 0xffffffff);\u000a  switch(iVar7) {\u000a  case 0x43:\u000a    copy_only_if_needed = 1;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x44:\u000a    bVar5 = true;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x53:\u000a    local_120 = optarg;\u000a    goto LAB_00402edd;\u000a  case 0x54:\u000a    bVar4 = true;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x5a:\u000a    if (optarg != (char *)0x0) {\u000a      context = "warning: ignoring --context; it requires an SELinux-enabled kernel";\u000a      goto LAB_00403019;\u000a    }\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x62:\u000a    if (optarg != (char *)0x0) {\u000a      version = optarg;\u000a    }\u000aLAB_00402edd:\u000a    bVar3 = true;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 100:\u000a    dir_arg = 1;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x67:\u000a    group_name = optarg;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x6d:\u000a    mode_string = optarg;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x6f:\u000a    owner_name = optarg;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x70:\u000a    local_108.preserve_timestamps = true;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x73:\u000a    strip_files = 1;\u000a    signal(0x11,(__sighandler_t)0x0);\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x74:\u000a    bVar12 = __file != (char *)0x0;\u000a    __file = optarg;\u000a    if (bVar12) {\u000a      uVar8 = dcgettext(0,"multiple target directories specified",5);\u000a      error(1,0,uVar8,uVar8);\u000a      __file = optarg;\u000a    }\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x76:\u000a    local_108.verbose = true;\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x80:\u000a    context = "WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled";\u000aLAB_00403019:\u000a    uVar8 = dcgettext(0,context,5);\u000a    error(0,0,uVar8,uVar8);\u000a    goto switchD_00402f16_caseD_63;\u000a  case 0x81:\u000a    break;\u000a  default:\u000a    if (iVar7 == -0x83) goto LAB_00403533;\u000a    if (iVar7 == -0x82) {\u000a      usage(0);\u000a    }\u000a  case 0:\u000a  case 1:\u000a  case 2:\u000a  case 3:\u000a  case 4:\u000a  case 5:\u000a  case 6:\u000a  case 7:\u000a  case 8:\u000a  case 9:\u000a  case 10:\u000a  case 0xb:\u000a  case 0xc:\u000a  case 0xd:\u000a  case 0xe:\u000a  case 0xf:\u000a  case 0x10:\u000a  case 0x11:\u000a  case 0x12:\u000a  case 0x13:\u000a  case 0x14:\u000a  case 0x15:\u000a  case 0x16:\u000a  case 0x17:\u000a  case 0x18:\u000a  case 0x19:\u000a  case 0x1a:\u000a  case 0x1b:\u000a  case 0x1c:\u000a  case 0x1d:\u000a  case 0x1e:\u000a  case 0x1f:\u000a  case 0x20:\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x30:\u000a  case 0x31:\u000a  case 0x32:\u000a  case 0x33:\u000a  case 0x34:\u000a  case 0x35:\u000a  case 0x36:\u000a  case 0x37:\u000a  case 0x38:\u000a  case 0x39:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x41:\u000a  case 0x42:\u000a  case 0x45:\u000a  case 0x46:\u000a  case 0x47:\u000a  case 0x48:\u000a  case 0x49:\u000a  case 0x4a:\u000a  case 0x4b:\u000a  case 0x4c:\u000a  case 0x4d:\u000a  case 0x4e:\u000a  case 0x4f:\u000a  case 0x50:\u000a  case 0x51:\u000a  case 0x52:\u000a  case 0x55:\u000a  case 0x56:\u000a  case 0x57:\u000a  case 0x58:\u000a  case 0x59:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x61:\u000a  case 0x65:\u000a  case 0x66:\u000a  case 0x68:\u000a  case 0x69:\u000a  case 0x6a:\u000a  case 0x6b:\u000a  case 0x6c:\u000a  case 0x6e:\u000a  case 0x71:\u000a  case 0x72:\u000a  case 0x75:\u000a  case 0x77:\u000a  case 0x78:\u000a  case 0x79:\u000a  case 0x7a:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a  case 0x7f:\u000a    usage(1);\u000aLAB_00403533:\u000a    version_etc(stdout,"install","GNU coreutils",Version,"David MacKenzie",0);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  case -1:\u000a    goto switchD_00402f16_caseD_ffffffff;\u000a  }\u000a  strip_program = xstrdup(optarg);\u000a  bVar2 = true;\u000a  goto switchD_00402f16_caseD_63;\u000aswitchD_00402f16_caseD_ffffffff:\u000a  if ((dir_arg == 1) && (strip_files == 1)) {\u000a    uVar8 = dcgettext(0,"the strip option may not be used when installing a directory",5);\u000a    error(1,0,uVar8,uVar8);\u000a  }\u000a  if ((__file != (char *)0x0) && ((dir_arg & 1) != 0)) {\u000a    uVar8 = dcgettext(0,"target directory not allowed when installing a directory",5);\u000a    error(1,0,uVar8,uVar8);\u000a  }\u000a  if (__file != (char *)0x0) {\u000a    iVar7 = stat(__file,&local_c0);\u000a    if ((!bVar5) && (iVar7 != 0)) {\u000a      puVar9 = (uint *)__errno_location();\u000a      uVar1 = *puVar9;\u000a      uVar8 = dcgettext(0,"failed to access %s",5);\u000a      context = quotearg_style((char *)0x4);\u000a      error(1,(ulong)uVar1,uVar8,context);\u000a    }\u000a    if ((iVar7 == 0) && ((local_c0.st_mode & 0xf000) != 0x4000)) {\u000a      uVar8 = dcgettext(0,"target %s is not a directory",5);\u000a      context = quotearg_style((char *)0x4);\u000a      error(1,0,uVar8,context);\u000a    }\u000a  }\u000a  if (local_120 != (char *)0x0) {\u000a    simple_backup_suffix = xstrdup(local_120);\u000a  }\u000a  if (bVar3) {\u000a    context = (char *)dcgettext(0,"backup type",5);\u000a    local_108.backup_type = xget_version(context,version);\u000a  }\u000a  else {\u000a    local_108.backup_type = no_backups;\u000a  }\u000a  if ((local_108.preserve_security_context != false) && (local_108.set_security_context != false)) {\u000a    uVar8 = dcgettext(0,"cannot set target context and preserve it",5);\u000a    error(1,0,uVar8,uVar8);\u000a  }\u000a  uVar11 = (long)(int)((ulong)argv & 0xffffffff) - (long)optind;\u000a  act = in_RSI + (long)optind;\u000a  iVar7 = (int)uVar11;\u000a  if ((int)(uint)((dir_arg ^ 1) & __file == (char *)0x0) < iVar7) {\u000a    if (bVar4) {\u000a      if (__file != (char *)0x0) {\u000a        uVar8 = dcgettext(0,"cannot combine --target-directory (-t) and --no-target-directory (-T)",\u000a                          5);\u000a        error(1,0,uVar8,uVar8);\u000a      }\u000a      if (2 < iVar7) goto LAB_0040359a;\u000a    }\u000a    else {\u000a      if ((1 < iVar7) && ((((__file != (char *)0x0 | dir_arg) ^ 1) & 1) != 0)) {\u000a        _Var6 = target_directory_operand(act[uVar11 - 1]);\u000a        if (_Var6 == false) {\u000a          if (iVar7 < 3) {\u000a            uVar11 = 2;\u000a          }\u000a          else {\u000a            uVar8 = dcgettext(0,"target %s is not a directory",5);\u000a            version = quotearg_style((char *)0x4);\u000a            error(1,0,uVar8,version);\u000a          }\u000a        }\u000a        else {\u000a          __file = act[uVar11 - 1];\u000a          uVar11 = uVar11 - 1;\u000a        }\u000a      }\u000a    }\u000a    if (mode_string != (char *)0x0) {\u000a      __ptr = mode_compile(mode_string);\u000a      if (__ptr == (mode_change *)0x0) {\u000a        uVar8 = dcgettext(0,"invalid mode %s",5);\u000a        version = quote(mode_string);\u000a        error(1,0,uVar8,version);\u000a      }\u000a      mode = mode_adjust((mode_change *)0x0,(mode_t *)0x0);\u000a      dir_mode = mode_adjust((mode_change *)0x0,(mode_t *)0x1);\u000a      free(__ptr);\u000a    }\u000a    if ((bVar2) && (strip_files == 0)) {\u000a      uVar8 = dcgettext(0,"WARNING: ignoring --strip-program option as -s option was not specified",\u000a                        5);\u000a      error(0,0,uVar8,uVar8);\u000a    }\u000a    if (copy_only_if_needed != 1) {\u000aLAB_00403384:\u000a      get_ids();\u000a      if (dir_arg == 1) {\u000a        iVar7 = savewd_process_files\u000a                          ((char **)(uVar11 & 0xffffffff),(int (*)(char *,savewd *,void *))act,\u000a                           process_dir);\u000a      }\u000a      else {\u000a        hash_init();\u000a        if (__file == (char *)0x0) {\u000a          if (bVar5) {\u000a            _Var6 = install_file_in_file_parents(*act,act[1],&local_108);\u000a          }\u000a          else {\u000a            _Var6 = install_file_in_file(*act,act[1],&local_108);\u000a          }\u000a          iVar7 = 0;\u000a          if (_Var6 == false) {\u000a            iVar7 = 1;\u000a          }\u000a        }\u000a        else {\u000a          dest_info_init(&local_108);\u000a          if ((int)uVar11 < 1) {\u000a            iVar7 = 0;\u000a          }\u000a          else {\u000a            uVar10 = 0;\u000a            iVar7 = 0;\u000a            do {\u000a              _Var6 = install_file_in_dir(act[uVar10],__file,&local_108);\u000a              if (_Var6 == false) {\u000a                iVar7 = 1;\u000a              }\u000a              uVar10 = uVar10 + 1;\u000a            } while ((uVar11 & 0xffffffff) != uVar10);\u000a          }\u000a        }\u000a      }\u000a      return iVar7;\u000a    }\u000a    if (local_108.preserve_timestamps != false) goto LAB_004035dc;\u000a    if (strip_files != 1) {\u000a      _Var6 = extra_mode();\u000a      if (_Var6 != false) {\u000a        uVar8 = dcgettext(0,\u000a                          "the --compare (-C) option is ignored when you specify a mode with non-permission bits"\u000a                          ,5);\u000a        error(0,0,uVar8,uVar8);\u000a      }\u000a      goto LAB_00403384;\u000a    }\u000a    __file = "options --compare (-C) and --strip are mutually exclusive";\u000a  }\u000a  else {\u000a    if (0 < iVar7) goto LAB_00403611;\u000a    uVar8 = dcgettext(0,"missing file operand",5);\u000a    error(0,0,uVar8,uVar8);\u000a    usage(1);\u000aLAB_0040359a:\u000a    uVar8 = dcgettext(0,"extra operand %s",5);\u000a    __file = quotearg_style((char *)0x4);\u000a    error(0,0,uVar8,__file);\u000a    usage(1);\u000aLAB_004035dc:\u000a    __file = "options --compare (-C) and --preserve-timestamps are mutually exclusive";\u000a  }\u000a  uVar8 = dcgettext(0,__file,5);\u000a  error(0,0,uVar8,uVar8);\u000a  usage(1);\u000aLAB_00403611:\u000a  uVar8 = dcgettext();\u000a  __file = quotearg_style((char *)0x4);\u000a  error(0,0,uVar8,__file);\u000a  x = (cp_options *)0x1;\u000a  usage();\u000a  cp_options_default(x);\u000a  x->copy_as_regular = true;\u000a  x->reflink_mode = REFLINK_NEVER;\u000a  x->dereference = DEREF_ALWAYS;\u000a  x->unlink_dest_before_opening = true;\u000a  x->unlink_dest_after_failed_open = false;\u000a  x->hard_link = false;\u000a  x->interactive = I_UNSPECIFIED;\u000a  x->move_mode = false;\u000a  x->preserve_links = false;\u000a  x->reduce_diagnostics = false;\u000a  x->explicit_no_preserve_mode = false;\u000a  *(undefined4 *)&x->one_file_system = 0;\u000a  x->data_copy_required = true;\u000a  x->require_preserve = false;\u000a  x->require_preserve_xattr = false;\u000a  x->recursive = false;\u000a  x->sparse_mode = SPARSE_AUTO;\u000a  x->symbolic_link = false;\u000a  x->backup_type = no_backups;\u000a  x->set_mode = true;\u000a  x->mode = 0x180;\u000a  x->require_preserve_context = false;\u000a  x->preserve_security_context = false;\u000a  x->set_security_context = false;\u000a  x->preserve_xattr = false;\u000a  *(undefined4 *)&x->update = 0;\u000a  *(undefined4 *)&x->dest_info = 0;\u000a  *(undefined4 *)((long)&x->dest_info + 4) = 0;\u000a  *(undefined4 *)&x->src_info = 0;\u000a  *(undefined4 *)((long)&x->src_info + 4) = 0;\u000a  return extraout_EAX;\u000a}\u000a\u000a
p1109
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x118\nMOV RBX,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [RBX]\nCALL 0x0040b190\nMOV EDI,0x6\nMOV ESI,0x413a61\nCALL 0x00402830\nMOV EDI,0x411b1e\nMOV ESI,0x411a26\nCALL 0x004023f0\nMOV EDI,0x411b1e\nCALL 0x004023b0\nMOV EDI,0x409000\nCALL 0x00410760\nLEA RDI,[RSP + 0x40]\nCALL 0x00403650\nMOV qword ptr [0x006184f0],0x0\nMOV qword ptr [0x006184f8],0x0\nMOV byte ptr [0x00618500],0x0\nMOV byte ptr [0x00618501],0x0\nXOR EDI,EDI\nCALL 0x004026c0\nMOV EDI,0x411a3e\nCALL 0x00402270\nMOV qword ptr [RSP + 0x28],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x8],RAX\nMOV R14D,0x0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nXOR R13D,R13D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x20],RAX\nXOR R15D,R15D\nXOR R12D,R12D\nJMP 0x00402ef0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x8],RAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDX,0x411a53\nMOV ECX,0x410c40\nXOR R8D,R8D\nMOV EDI,EBP\nMOV RSI,RBX\nCALL 0x00402490\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x82\nJA 0x00403514\nJMP qword ptr [0x410820 + RCX*0x8]\nMOV byte ptr [0x00618502],0x1\nJMP 0x00402ef0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00402ef0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x20],RAX\nJMP 0x00402ef0\nCMP qword ptr [0x006184c0],0x0\nJZ 0x00402ef0\nXOR EDI,EDI\nMOV ESI,0x411ad7\nJMP 0x00403019\nMOV RAX,qword ptr [0x006184c0]\nTEST RAX,RAX\nCMOVNZ R14,RAX\nJMP 0x00402edd\nMOV byte ptr [0x00618500],0x1\nMOV EDI,0x11\nXOR ESI,ESI\nCALL 0x00402660\nJMP 0x00402ef0\nTEST R13,R13\nJZ 0x00402fa3\nXOR EDI,EDI\nMOV ESI,0x411a68\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nMOV R13,qword ptr [0x006184c0]\nJMP 0x00402ef0\nMOV RAX,qword ptr [0x006184c0]\nMOV qword ptr [RSP + 0x28],RAX\nJMP 0x00402edd\nMOV byte ptr [0x00618501],0x1\nJMP 0x00402ef0\nMOV RAX,qword ptr [0x006184c0]\nMOV qword ptr [0x006184f8],RAX\nJMP 0x00402ef0\nMOV R15,qword ptr [0x006184c0]\nJMP 0x00402ef0\nMOV RAX,qword ptr [0x006184c0]\nMOV qword ptr [0x006184f0],RAX\nJMP 0x00402ef0\nMOV byte ptr [RSP + 0x5e],0x1\nJMP 0x00402ef0\nMOV byte ptr [RSP + 0x6d],0x1\nJMP 0x00402ef0\nXOR EDI,EDI\nMOV ESI,0x411a8e\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nJMP 0x00402ef0\nMOV RDI,qword ptr [0x006184c0]\nCALL 0x0040eb20\nMOV qword ptr [0x006183f8],RAX\nMOV R12B,0x1\nJMP 0x00402ef0\nCMP byte ptr [0x00618501],0x1\nJNZ 0x0040308b\nCMP byte ptr [0x00618500],0x1\nJNZ 0x0040308b\nXOR EDI,EDI\nMOV ESI,0x411b38\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nTEST R13,R13\nJZ 0x004030be\nTEST byte ptr [0x00618501],0x1\nJZ 0x004030be\nXOR EDI,EDI\nMOV ESI,0x411b75\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nTEST R13,R13\nJZ 0x00403195\nMOV qword ptr [RSP + 0x38],R14\nLEA RSI,[0x88 + RSP]\nMOV RDI,R13\nCALL 0x00410790\nMOV R14D,EAX\nCMP byte ptr [RSP + 0x10],0x0\nJNZ 0x00403143\nTEST R14D,R14D\nJZ 0x00403143\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x1c],EAX\nXOR EDI,EDI\nMOV ESI,0x411bae\nMOV EDX,0x5\nCALL 0x00402420\nMOV qword ptr [RSP + 0x30],R15\nMOV R15,R12\nMOV R12,R13\nMOV R13,RAX\nMOV EDI,0x4\nMOV RSI,R12\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,dword ptr [RSP + 0x1c]\nMOV RDX,R13\nMOV R13,R12\nMOV R12,R15\nMOV R15,qword ptr [RSP + 0x30]\nCALL 0x00402870\nTEST R14D,R14D\nJNZ 0x00403190\nMOV EAX,0xf000\nAND EAX,dword ptr [0xa0 + RSP]\nCMP EAX,0x4000\nJZ 0x00403190\nXOR EDI,EDI\nMOV ESI,0x411bc2\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nMOV EDI,0x4\nMOV RSI,R13\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00402870\nMOV R14,qword ptr [RSP + 0x38]\nMOV RDI,qword ptr [RSP + 0x28]\nTEST RDI,RDI\nJZ 0x004031ab\nCALL 0x0040eb20\nMOV qword ptr [0x00618418],RAX\nCMP byte ptr [RSP + 0x8],0x0\nJZ 0x004031d0\nXOR EDI,EDI\nMOV ESI,0x411bdf\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00408f50\nJMP 0x004031d2\nXOR EAX,EAX\nMOV dword ptr [RSP + 0x40],EAX\nCMP byte ptr [RSP + 0x64],0x0\nJZ 0x00403209\nCMP byte ptr [RSP + 0x60],0x0\nJZ 0x00403209\nXOR EDI,EDI\nMOV ESI,0x411beb\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nTEST R13,R13\nSETZ DL\nSETNZ AL\nMOVSXD RCX,dword ptr [0x006184b8]\nMOVSXD R14,EBP\nSUB R14,RCX\nLEA RSI,[RBX + RCX*0x8]\nMOV BL,byte ptr [0x00618501]\nMOV ECX,EBX\nXOR CL,0x1\nAND CL,DL\nMOVZX ECX,CL\nCMP R14D,ECX\nJLE 0x00403562\nCMP byte ptr [RSP + 0x20],0x0\nMOV qword ptr [RSP + 0x8],RSI\nJZ 0x00403429\nTEST R13,R13\nJZ 0x00403276\nXOR EDI,EDI\nMOV ESI,0x411c54\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nCMP R14D,0x3\nJGE 0x0040359a\nTEST R15,R15\nJZ 0x00403301\nMOV RDI,R15\nCALL 0x0040acd0\nMOV RBP,RAX\nTEST RBP,RBP\nJNZ 0x004032c5\nXOR EDI,EDI\nMOV ESI,0x411cab\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RDI,R15\nCALL 0x0040c6e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EDX,EDX\nXOR R8D,R8D\nMOV RCX,RBP\nCALL 0x0040b050\nMOV dword ptr [0x00618400],EAX\nXOR EDI,EDI\nMOV ESI,0x1\nXOR EDX,EDX\nMOV R8D,0x618404\nMOV RCX,RBP\nCALL 0x0040b050\nMOV dword ptr [0x00618408],EAX\nMOV RDI,RBP\nCALL 0x00402290\nTEST R12B,R12B\nJZ 0x00403332\nMOV AL,byte ptr [0x00618500]\nTEST AL,AL\nJNZ 0x00403332\nXOR EDI,EDI\nMOV ESI,0x411cbb\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nCMP byte ptr [0x00618502],0x1\nJNZ 0x00403384\nCMP byte ptr [RSP + 0x5e],0x0\nJNZ 0x004035dc\nCMP byte ptr [0x00618500],0x1\nJZ 0x004035e5\nMOV EDI,dword ptr [0x00618400]\nCALL 0x00403800\nTEST AL,AL\nJZ 0x00403384\nXOR EDI,EDI\nMOV ESI,0x411d85\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nCALL 0x00403810\nCMP byte ptr [0x00618501],0x1\nJNZ 0x004033b0\nLEA RCX,[RSP + 0x40]\nMOV EDX,0x403940\nMOV EDI,R14D\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x0040d3a0\nMOV EBP,EAX\nJMP 0x004034ec\nCALL 0x00408600\nTEST R13,R13\nJZ 0x00403466\nLEA RDI,[RSP + 0x40]\nCALL 0x004042d0\nTEST R14D,R14D\nJLE 0x00403485\nMOV R12,R13\nMOV R13D,R14D\nXOR EBX,EBX\nMOV R15,qword ptr [RSP + 0x10]\nXOR EBP,EBP\nMOV R14,qword ptr [RSP + 0x8]\nNOP dword ptr CS:[RAX + RAX*0x1]\nTEST R15B,R15B\nSETNZ AL\nMOV RDI,qword ptr [R14 + RBX*0x8]\nTEST RBX,RBX\nSETZ CL\nAND CL,AL\nMOVZX ECX,CL\nMOV RSI,R12\nLEA RDX,[RSP + 0x40]\nCALL 0x00403b10\nTEST AL,AL\nMOV EAX,0x1\nCMOVZ EBP,EAX\nINC RBX\nCMP R13,RBX\nJNZ 0x004033f0\nJMP 0x004034ec\nCMP R14D,0x2\nJL 0x00403280\nOR AL,BL\nXOR AL,0x1\nTEST AL,0x1\nJZ 0x00403280\nMOV RBX,RSI\nMOV RDI,qword ptr [RBX + R14*0x8 + -0x8]\nCALL 0x004036f0\nTEST AL,AL\nJZ 0x00403489\nMOV R13,qword ptr [RBX + R14*0x8 + -0x8]\nDEC R14\nTEST R15,R15\nJNZ 0x00403285\nJMP 0x00403301\nCMP byte ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RDI,qword ptr [RAX]\nMOV RSI,qword ptr [RAX + 0x8]\nLEA RDX,[RSP + 0x40]\nJZ 0x004034dc\nCALL 0x00403990\nJMP 0x004034e1\nXOR EBP,EBP\nJMP 0x004034ec\nCMP R14D,0x3\nJL 0x00403500\nXOR EDI,EDI\nMOV ESI,0x411bc2\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOVSXD RAX,R14D\nMOV RCX,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RCX + RAX*0x8 + -0x8]\nMOV EDI,0x4\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nTEST R15,R15\nJNZ 0x00403285\nJMP 0x00403301\nCALL 0x004039d0\nXOR EBP,EBP\nTEST AL,AL\nJNZ 0x004034ec\nMOV EBP,0x1\nMOV EAX,EBP\nADD RSP,0x118\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV R14D,0x2\nTEST R15,R15\nJNZ 0x00403285\nJMP 0x00403301\nCMP EAX,0xffffff7d\nJZ 0x00403533\nCMP EAX,0xffffff7e\nJNZ 0x00403529\nXOR EDI,EDI\nCALL 0x00402b00\nMOV EDI,0x1\nCALL 0x00402b00\nMOV RDI,qword ptr [0x006184a8]\nMOV RCX,qword ptr [0x00618410]\nMOV ESI,0x411a1e\nMOV EDX,0x411b1a\nMOV R8D,0x411b28\nXOR R9D,R9D\nXOR EAX,EAX\nCALL 0x0040e850\nXOR EDI,EDI\nCALL 0x00402960\nMOV RBP,RSI\nXOR EDI,EDI\nTEST R14D,R14D\nJG 0x00403611\nMOV ESI,0x411c15\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nMOV EDI,0x1\nCALL 0x00402b00\nXOR EDI,EDI\nMOV ESI,0x411c9a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RAX + 0x10]\nMOV EDI,0x4\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nMOV EDI,0x1\nCALL 0x00402b00\nXOR EDI,EDI\nMOV ESI,0x411d03\nJMP 0x004035ec\nXOR EDI,EDI\nMOV ESI,0x411d4b\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402870\nMOV EDI,0x1\nCALL 0x00402b00\nMOV ESI,0x411c2a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RSI,qword ptr [RBP]\nMOV EDI,0x4\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nMOV EDI,0x1\nCALL 0x00402b00\nNOP dword ptr [RAX]\n'
p1110
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 01 00 00\n48 89 f3\n89 fd\n48 8b 3b\ne8 52 83 00 00\nbf 06 00 00 00\nbe 61 3a 41 00\ne8 e3 f9 ff ff\nbf 1e 1b 41 00\nbe 26 1a 41 00\ne8 94 f5 ff ff\nbf 1e 1b 41 00\ne8 4a f5 ff ff\nbf 00 90 40 00\ne8 f0 d8 00 00\n48 8d 7c 24 40\ne8 d6 07 00 00\n48 c7 05 6b 56 21 00 00 00 00 00\n48 c7 05 68 56 21 00 00 00 00 00\nc6 05 69 56 21 00 00\nc6 05 63 56 21 00 00\n31 ff\ne8 1b f8 ff ff\nbf 3e 1a 41 00\ne8 c1 f3 ff ff\n48 89 44 24 28\nb8 00 00 00 00\n48 89 44 24 08\n41 be 00 00 00 00\n31 c0\n48 89 44 24 10\n45 31 ed\n31 c0\n48 89 44 24 20\n45 31 ff\n45 31 e4\neb 13\nb0 01\n48 89 44 24 08\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nba 53 1a 41 00\nb9 40 0c 41 00\n45 31 c0\n89 ef\n48 89 de\ne8 89 f5 ff ff\n8d 48 01\n81 f9 82 00 00 00\n0f 87 fe 05 00 00\nff 24 cd 20 08 41 00\nc6 05 de 55 21 00 01\neb ca\nb0 01\n48 89 44 24 10\neb c1\nb0 01\n48 89 44 24 20\neb b8\n48 83 3d 80 55 21 00 00\n74 ae\n31 ff\nbe d7 1a 41 00\ne9 cb 00 00 00\n48 8b 05 6b 55 21 00\n48 85 c0\n4c 0f 45 f0\ne9 7c ff ff ff\nc6 05 98 55 21 00 01\nbf 11 00 00 00\n31 f6\ne8 ec f6 ff ff\ne9 77 ff ff ff\n4d 85 ed\n74 25\n31 ff\nbe 68 1a 41 00\nba 05 00 00 00\ne8 91 f4 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 cd f8 ff ff\n4c 8b 2d 16 55 21 00\ne9 41 ff ff ff\n48 8b 05 0a 55 21 00\n48 89 44 24 28\ne9 1d ff ff ff\nc6 05 3a 55 21 00 01\ne9 24 ff ff ff\n48 8b 05 ed 54 21 00\n48 89 05 1e 55 21 00\ne9 11 ff ff ff\n4c 8b 3d da 54 21 00\ne9 05 ff ff ff\n48 8b 05 ce 54 21 00\n48 89 05 f7 54 21 00\ne9 f2 fe ff ff\nc6 44 24 5e 01\ne9 e8 fe ff ff\nc6 44 24 6d 01\ne9 de fe ff ff\n31 ff\nbe 8e 1a 41 00\nba 05 00 00 00\ne8 fd f3 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 3c f8 ff ff\ne9 b7 fe ff ff\n48 8b 3d 80 54 21 00\ne8 db ba 00 00\n48 89 05 ac 53 21 00\n41 b4 01\ne9 9c fe ff ff\n80 3d a6 54 21 00 01\n75 2e\n80 3d 9c 54 21 00 01\n75 25\n31 ff\nbe 38 1b 41 00\nba 05 00 00 00\ne8 a9 f3 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 e5 f7 ff ff\n4d 85 ed\n74 2e\nf6 05 6a 54 21 00 01\n74 25\n31 ff\nbe 75 1b 41 00\nba 05 00 00 00\ne8 76 f3 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 b2 f7 ff ff\n4d 85 ed\n0f 84 ce 00 00 00\n4c 89 74 24 38\n48 8d b4 24 88 00 00 00\n4c 89 ef\ne8 b4 d6 00 00\n41 89 c6\n80 7c 24 10 00\n75 5d\n45 85 f6\n74 58\ne8 f0 f1 ff ff\n8b 00\n89 44 24 1c\n31 ff\nbe ae 1b 41 00\nba 05 00 00 00\ne8 19 f3 ff ff\n4c 89 7c 24 30\n4d 89 e7\n4d 89 ec\n49 89 c5\nbf 04 00 00 00\n4c 89 e6\ne8 9e 93 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n8b 74 24 1c\n4c 89 ea\n4d 89 e5\n4d 89 fc\n4c 8b 7c 24 30\ne8 2d f7 ff ff\n45 85 f6\n75 48\nb8 00 f0 00 00\n23 84 24 a0 00 00 00\n3d 00 40 00 00\n74 35\n31 ff\nbe c2 1b 41 00\nba 05 00 00 00\ne8 b4 f2 ff ff\n49 89 c6\nbf 04 00 00 00\n4c 89 ee\ne8 44 93 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n4c 89 f2\ne8 e0 f6 ff ff\n4c 8b 74 24 38\n48 8b 7c 24 28\n48 85 ff\n74 0c\ne8 7c b9 00 00\n48 89 05 6d 52 21 00\n80 7c 24 08 00\n74 1e\n31 ff\nbe df 1b 41 00\nba 05 00 00 00\ne8 5d f2 ff ff\n48 89 c7\n4c 89 f6\ne8 82 5d 00 00\neb 02\n31 c0\n89 44 24 40\n80 7c 24 64 00\n74 2c\n80 7c 24 60 00\n74 25\n31 ff\nbe eb 1b 41 00\nba 05 00 00 00\ne8 2b f2 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 67 f6 ff ff\n4d 85 ed\n0f 94 c2\n0f 95 c0\n48 63 0d 9f 52 21 00\n4c 63 f5\n49 29 ce\n48 8d 34 cb\n8a 1d d8 52 21 00\n89 d9\n80 f1 01\n20 d1\n0f b6 c9\n41 39 ce\n0f 8e 26 03 00 00\n80 7c 24 20 00\n48 89 74 24 08\n0f 84 dd 01 00 00\n4d 85 ed\n74 25\n31 ff\nbe 54 1c 41 00\nba 05 00 00 00\ne8 be f1 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 fa f5 ff ff\n41 83 fe 03\n0f 8d 1a 03 00 00\n4d 85 ff\n74 7c\n4c 89 ff\ne8 43 7a 00 00\n48 89 c5\n48 85 ed\n75 30\n31 ff\nbe ab 1c 41 00\nba 05 00 00 00\ne8 7a f1 ff ff\n48 89 c3\n4c 89 ff\ne8 2f 94 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 ab f5 ff ff\n31 ff\n31 f6\n31 d2\n45 31 c0\n48 89 e9\ne8 7a 7d 00 00\n89 05 24 51 21 00\n31 ff\nbe 01 00 00 00\n31 d2\n41 b8 04 84 61 00\n48 89 e9\ne8 5d 7d 00 00\n89 05 0f 51 21 00\n48 89 ef\ne8 8f ef ff ff\n45 84 e4\n74 2c\n8a 05 f4 51 21 00\n84 c0\n75 22\n31 ff\nbe bb 1c 41 00\nba 05 00 00 00\ne8 ff f0 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 3e f5 ff ff\n80 3d c9 51 21 00 01\n75 49\n80 7c 24 5e 00\n0f 85 96 02 00 00\n80 3d b3 51 21 00 01\n0f 84 92 02 00 00\n8b 3d a7 50 21 00\ne8 a2 04 00 00\n84 c0\n74 22\n31 ff\nbe 85 1d 41 00\nba 05 00 00 00\ne8 ad f0 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 ec f4 ff ff\ne8 87 04 00 00\n80 3d 71 51 21 00 01\n75 1e\n48 8d 4c 24 40\nba 40 39 40 00\n44 89 f7\n48 8b 74 24 08\ne8 f7 9f 00 00\n89 c5\ne9 3c 01 00 00\ne8 4b 52 00 00\n4d 85 ed\n0f 84 a8 00 00 00\n48 8d 7c 24 40\ne8 08 0f 00 00\n45 85 f6\n0f 8e b4 00 00 00\n4d 89 ec\n45 89 f5\n31 db\n4c 8b 7c 24 10\n31 ed\n4c 8b 74 24 08\n66 66 2e 0f 1f 84 00 00 00 00 00\n45 84 ff\n0f 95 c0\n49 8b 3c de\n48 85 db\n0f 94 c1\n20 c1\n0f b6 c9\n4c 89 e6\n48 8d 54 24 40\ne8 fe 06 00 00\n84 c0\nb8 01 00 00 00\n0f 44 e8\n48 ff c3\n49 39 dd\n75 cc\ne9 c3 00 00 00\n41 83 fe 02\n0f 8c 4d fe ff ff\n08 d8\n34 01\na8 01\n0f 84 41 fe ff ff\n48 89 f3\n4a 8b 7c f3 f8\ne8 a4 02 00 00\n84 c0\n74 39\n4e 8b 6c f3 f8\n49 ff ce\n4d 85 ff\n0f 85 24 fe ff ff\ne9 9b fe ff ff\n80 7c 24 10 00\n48 8b 44 24 08\n48 8b 38\n48 8b 70 08\n48 8d 54 24 40\n74 5e\ne8 0d 05 00 00\neb 5c\n31 ed\neb 63\n41 83 fe 03\n7c 71\n31 ff\nbe c2 1b 41 00\nba 05 00 00 00\ne8 80 ef ff ff\n48 89 c3\n49 63 c6\n48 8b 4c 24 08\n48 8b 74 c1 f8\nbf 04 00 00 00\ne8 06 90 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 a2 f3 ff ff\n4d 85 ff\n0f 85 ae fd ff ff\ne9 25 fe ff ff\ne8 ef 04 00 00\n31 ed\n84 c0\n75 05\nbd 01 00 00 00\n89 e8\n48 81 c4 18 01 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n41 be 02 00 00 00\n4d 85 ff\n0f 85 76 fd ff ff\ne9 ed fd ff ff\n3d 7d ff ff ff\n74 18\n3d 7e ff ff ff\n75 07\n31 ff\ne8 d7 f5 ff ff\nbf 01 00 00 00\ne8 cd f5 ff ff\n48 8b 3d 6e 4f 21 00\n48 8b 0d cf 4e 21 00\nbe 1e 1a 41 00\nba 1a 1b 41 00\n41 b8 28 1b 41 00\n45 31 c9\n31 c0\ne8 f5 b2 00 00\n31 ff\ne8 fe f3 ff ff\n48 89 f5\n31 ff\n45 85 f6\n0f 8f a1 00 00 00\nbe 15 1c 41 00\nba 05 00 00 00\ne8 a1 ee ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 e0 f2 ff ff\nbf 01 00 00 00\ne8 66 f5 ff ff\n31 ff\nbe 9a 1c 41 00\nba 05 00 00 00\ne8 75 ee ff ff\n48 89 c3\n48 8b 44 24 08\n48 8b 70 10\nbf 04 00 00 00\ne8 ff 8e 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 9e f2 ff ff\nbf 01 00 00 00\ne8 24 f5 ff ff\n31 ff\nbe 03 1d 41 00\neb 07\n31 ff\nbe 4b 1d 41 00\nba 05 00 00 00\ne8 2a ee ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 69 f2 ff ff\nbf 01 00 00 00\ne8 ef f4 ff ff\nbe 2a 1c 41 00\nba 05 00 00 00\ne8 00 ee ff ff\n48 89 c3\n48 8b 75 00\nbf 04 00 00 00\ne8 8f 8e 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 2e f2 ff ff\nbf 01 00 00 00\ne8 b4 f4 ff ff\n0f 1f 40 00\n'
p1111
S'.text:0000000000402e20\n.text:0000000000402e21\n.text:0000000000402e23\n.text:0000000000402e25\n.text:0000000000402e27\n.text:0000000000402e29\n.text:0000000000402e2a\n.text:0000000000402e31\n.text:0000000000402e34\n.text:0000000000402e36\n.text:0000000000402e39\n.text:0000000000402e3e\n.text:0000000000402e43\n.text:0000000000402e48\n.text:0000000000402e4d\n.text:0000000000402e52\n.text:0000000000402e57\n.text:0000000000402e5c\n.text:0000000000402e61\n.text:0000000000402e66\n.text:0000000000402e6b\n.text:0000000000402e70\n.text:0000000000402e75\n.text:0000000000402e7a\n.text:0000000000402e85\n.text:0000000000402e90\n.text:0000000000402e97\n.text:0000000000402e9e\n.text:0000000000402ea0\n.text:0000000000402ea5\n.text:0000000000402eaa\n.text:0000000000402eaf\n.text:0000000000402eb4\n.text:0000000000402eb9\n.text:0000000000402ebe\n.text:0000000000402ec4\n.text:0000000000402ec6\n.text:0000000000402ecb\n.text:0000000000402ece\n.text:0000000000402ed0\n.text:0000000000402ed5\n.text:0000000000402ed8\n.text:0000000000402edb\n.text:0000000000402edd\n.text:0000000000402edf\n.text:0000000000402ee4\n.text:0000000000402ef0\n.text:0000000000402ef5\n.text:0000000000402efa\n.text:0000000000402efd\n.text:0000000000402eff\n.text:0000000000402f02\n.text:0000000000402f07\n.text:0000000000402f0a\n.text:0000000000402f10\n.text:0000000000402f16\n.text:0000000000402f1d\n.text:0000000000402f24\n.text:0000000000402f26\n.text:0000000000402f28\n.text:0000000000402f2d\n.text:0000000000402f2f\n.text:0000000000402f31\n.text:0000000000402f36\n.text:0000000000402f38\n.text:0000000000402f40\n.text:0000000000402f42\n.text:0000000000402f44\n.text:0000000000402f49\n.text:0000000000402f4e\n.text:0000000000402f55\n.text:0000000000402f58\n.text:0000000000402f5c\n.text:0000000000402f61\n.text:0000000000402f68\n.text:0000000000402f6d\n.text:0000000000402f6f\n.text:0000000000402f74\n.text:0000000000402f79\n.text:0000000000402f7c\n.text:0000000000402f7e\n.text:0000000000402f80\n.text:0000000000402f85\n.text:0000000000402f8a\n.text:0000000000402f8f\n.text:0000000000402f92\n.text:0000000000402f97\n.text:0000000000402f99\n.text:0000000000402f9b\n.text:0000000000402f9e\n.text:0000000000402fa3\n.text:0000000000402faa\n.text:0000000000402faf\n.text:0000000000402fb6\n.text:0000000000402fbb\n.text:0000000000402fc0\n.text:0000000000402fc7\n.text:0000000000402fcc\n.text:0000000000402fd3\n.text:0000000000402fda\n.text:0000000000402fdf\n.text:0000000000402fe6\n.text:0000000000402feb\n.text:0000000000402ff2\n.text:0000000000402ff9\n.text:0000000000402ffe\n.text:0000000000403003\n.text:0000000000403008\n.text:000000000040300d\n.text:0000000000403012\n.text:0000000000403014\n.text:0000000000403019\n.text:000000000040301e\n.text:0000000000403023\n.text:0000000000403026\n.text:0000000000403028\n.text:000000000040302a\n.text:000000000040302c\n.text:000000000040302f\n.text:0000000000403034\n.text:0000000000403039\n.text:0000000000403040\n.text:0000000000403045\n.text:000000000040304c\n.text:000000000040304f\n.text:0000000000403054\n.text:000000000040305b\n.text:000000000040305d\n.text:0000000000403064\n.text:0000000000403066\n.text:0000000000403068\n.text:000000000040306d\n.text:0000000000403072\n.text:0000000000403077\n.text:000000000040307a\n.text:000000000040307f\n.text:0000000000403081\n.text:0000000000403083\n.text:0000000000403086\n.text:000000000040308b\n.text:000000000040308e\n.text:0000000000403090\n.text:0000000000403097\n.text:0000000000403099\n.text:000000000040309b\n.text:00000000004030a0\n.text:00000000004030a5\n.text:00000000004030aa\n.text:00000000004030ad\n.text:00000000004030b2\n.text:00000000004030b4\n.text:00000000004030b6\n.text:00000000004030b9\n.text:00000000004030be\n.text:00000000004030c1\n.text:00000000004030c7\n.text:00000000004030cc\n.text:00000000004030d4\n.text:00000000004030d7\n.text:00000000004030dc\n.text:00000000004030df\n.text:00000000004030e4\n.text:00000000004030e6\n.text:00000000004030e9\n.text:00000000004030eb\n.text:00000000004030f0\n.text:00000000004030f2\n.text:00000000004030f6\n.text:00000000004030f8\n.text:00000000004030fd\n.text:0000000000403102\n.text:0000000000403107\n.text:000000000040310c\n.text:000000000040310f\n.text:0000000000403112\n.text:0000000000403115\n.text:000000000040311a\n.text:000000000040311d\n.text:0000000000403122\n.text:0000000000403125\n.text:000000000040312a\n.text:000000000040312c\n.text:0000000000403130\n.text:0000000000403133\n.text:0000000000403136\n.text:0000000000403139\n.text:000000000040313e\n.text:0000000000403143\n.text:0000000000403146\n.text:0000000000403148\n.text:000000000040314d\n.text:0000000000403154\n.text:0000000000403159\n.text:000000000040315b\n.text:000000000040315d\n.text:0000000000403162\n.text:0000000000403167\n.text:000000000040316c\n.text:000000000040316f\n.text:0000000000403174\n.text:0000000000403177\n.text:000000000040317c\n.text:000000000040317f\n.text:0000000000403184\n.text:0000000000403186\n.text:0000000000403188\n.text:000000000040318b\n.text:0000000000403190\n.text:0000000000403195\n.text:000000000040319a\n.text:000000000040319d\n.text:000000000040319f\n.text:00000000004031a4\n.text:00000000004031ab\n.text:00000000004031b0\n.text:00000000004031b2\n.text:00000000004031b4\n.text:00000000004031b9\n.text:00000000004031be\n.text:00000000004031c3\n.text:00000000004031c6\n.text:00000000004031c9\n.text:00000000004031ce\n.text:00000000004031d0\n.text:00000000004031d2\n.text:00000000004031d6\n.text:00000000004031db\n.text:00000000004031dd\n.text:00000000004031e2\n.text:00000000004031e4\n.text:00000000004031e6\n.text:00000000004031eb\n.text:00000000004031f0\n.text:00000000004031f5\n.text:00000000004031f8\n.text:00000000004031fd\n.text:00000000004031ff\n.text:0000000000403201\n.text:0000000000403204\n.text:0000000000403209\n.text:000000000040320c\n.text:000000000040320f\n.text:0000000000403212\n.text:0000000000403219\n.text:000000000040321c\n.text:000000000040321f\n.text:0000000000403223\n.text:0000000000403229\n.text:000000000040322b\n.text:000000000040322e\n.text:0000000000403230\n.text:0000000000403233\n.text:0000000000403236\n.text:000000000040323c\n.text:0000000000403241\n.text:0000000000403246\n.text:000000000040324c\n.text:000000000040324f\n.text:0000000000403251\n.text:0000000000403253\n.text:0000000000403258\n.text:000000000040325d\n.text:0000000000403262\n.text:0000000000403265\n.text:000000000040326a\n.text:000000000040326c\n.text:000000000040326e\n.text:0000000000403271\n.text:0000000000403276\n.text:000000000040327a\n.text:0000000000403280\n.text:0000000000403283\n.text:0000000000403285\n.text:0000000000403288\n.text:000000000040328d\n.text:0000000000403290\n.text:0000000000403293\n.text:0000000000403295\n.text:0000000000403297\n.text:000000000040329c\n.text:00000000004032a1\n.text:00000000004032a6\n.text:00000000004032a9\n.text:00000000004032ac\n.text:00000000004032b1\n.text:00000000004032b4\n.text:00000000004032b9\n.text:00000000004032bb\n.text:00000000004032bd\n.text:00000000004032c0\n.text:00000000004032c5\n.text:00000000004032c7\n.text:00000000004032c9\n.text:00000000004032cb\n.text:00000000004032ce\n.text:00000000004032d1\n.text:00000000004032d6\n.text:00000000004032dc\n.text:00000000004032de\n.text:00000000004032e3\n.text:00000000004032e5\n.text:00000000004032eb\n.text:00000000004032ee\n.text:00000000004032f3\n.text:00000000004032f9\n.text:00000000004032fc\n.text:0000000000403301\n.text:0000000000403304\n.text:0000000000403306\n.text:000000000040330c\n.text:000000000040330e\n.text:0000000000403310\n.text:0000000000403312\n.text:0000000000403317\n.text:000000000040331c\n.text:0000000000403321\n.text:0000000000403324\n.text:0000000000403326\n.text:0000000000403328\n.text:000000000040332a\n.text:000000000040332d\n.text:0000000000403332\n.text:0000000000403339\n.text:000000000040333b\n.text:0000000000403340\n.text:0000000000403346\n.text:000000000040334d\n.text:0000000000403353\n.text:0000000000403359\n.text:000000000040335e\n.text:0000000000403360\n.text:0000000000403362\n.text:0000000000403364\n.text:0000000000403369\n.text:000000000040336e\n.text:0000000000403373\n.text:0000000000403376\n.text:0000000000403378\n.text:000000000040337a\n.text:000000000040337c\n.text:000000000040337f\n.text:0000000000403384\n.text:0000000000403389\n.text:0000000000403390\n.text:0000000000403392\n.text:0000000000403397\n.text:000000000040339c\n.text:000000000040339f\n.text:00000000004033a4\n.text:00000000004033a9\n.text:00000000004033ab\n.text:00000000004033b0\n.text:00000000004033b5\n.text:00000000004033b8\n.text:00000000004033be\n.text:00000000004033c3\n.text:00000000004033c8\n.text:00000000004033cb\n.text:00000000004033d1\n.text:00000000004033d4\n.text:00000000004033d7\n.text:00000000004033d9\n.text:00000000004033de\n.text:00000000004033e0\n.text:00000000004033e5\n.text:00000000004033f0\n.text:00000000004033f3\n.text:00000000004033f6\n.text:00000000004033fa\n.text:00000000004033fd\n.text:0000000000403400\n.text:0000000000403402\n.text:0000000000403405\n.text:0000000000403408\n.text:000000000040340d\n.text:0000000000403412\n.text:0000000000403414\n.text:0000000000403419\n.text:000000000040341c\n.text:000000000040341f\n.text:0000000000403422\n.text:0000000000403424\n.text:0000000000403429\n.text:000000000040342d\n.text:0000000000403433\n.text:0000000000403435\n.text:0000000000403437\n.text:0000000000403439\n.text:000000000040343f\n.text:0000000000403442\n.text:0000000000403447\n.text:000000000040344c\n.text:000000000040344e\n.text:0000000000403450\n.text:0000000000403455\n.text:0000000000403458\n.text:000000000040345b\n.text:0000000000403461\n.text:0000000000403466\n.text:000000000040346b\n.text:0000000000403470\n.text:0000000000403473\n.text:0000000000403477\n.text:000000000040347c\n.text:000000000040347e\n.text:0000000000403483\n.text:0000000000403485\n.text:0000000000403487\n.text:0000000000403489\n.text:000000000040348d\n.text:000000000040348f\n.text:0000000000403491\n.text:0000000000403496\n.text:000000000040349b\n.text:00000000004034a0\n.text:00000000004034a3\n.text:00000000004034a6\n.text:00000000004034ab\n.text:00000000004034b0\n.text:00000000004034b5\n.text:00000000004034ba\n.text:00000000004034bd\n.text:00000000004034c2\n.text:00000000004034c4\n.text:00000000004034c6\n.text:00000000004034c9\n.text:00000000004034ce\n.text:00000000004034d1\n.text:00000000004034d7\n.text:00000000004034dc\n.text:00000000004034e1\n.text:00000000004034e3\n.text:00000000004034e5\n.text:00000000004034e7\n.text:00000000004034ec\n.text:00000000004034ee\n.text:00000000004034f5\n.text:00000000004034f6\n.text:00000000004034f8\n.text:00000000004034fa\n.text:00000000004034fc\n.text:00000000004034fe\n.text:00000000004034ff\n.text:0000000000403500\n.text:0000000000403506\n.text:0000000000403509\n.text:000000000040350f\n.text:0000000000403514\n.text:0000000000403519\n.text:000000000040351b\n.text:0000000000403520\n.text:0000000000403522\n.text:0000000000403524\n.text:0000000000403529\n.text:000000000040352e\n.text:0000000000403533\n.text:000000000040353a\n.text:0000000000403541\n.text:0000000000403546\n.text:000000000040354b\n.text:0000000000403551\n.text:0000000000403554\n.text:0000000000403556\n.text:000000000040355b\n.text:000000000040355d\n.text:0000000000403562\n.text:0000000000403565\n.text:0000000000403567\n.text:000000000040356a\n.text:0000000000403570\n.text:0000000000403575\n.text:000000000040357a\n.text:000000000040357f\n.text:0000000000403582\n.text:0000000000403584\n.text:0000000000403586\n.text:0000000000403588\n.text:000000000040358b\n.text:0000000000403590\n.text:0000000000403595\n.text:000000000040359a\n.text:000000000040359c\n.text:00000000004035a1\n.text:00000000004035a6\n.text:00000000004035ab\n.text:00000000004035ae\n.text:00000000004035b3\n.text:00000000004035b7\n.text:00000000004035bc\n.text:00000000004035c1\n.text:00000000004035c4\n.text:00000000004035c6\n.text:00000000004035c8\n.text:00000000004035ca\n.text:00000000004035cd\n.text:00000000004035d2\n.text:00000000004035d7\n.text:00000000004035dc\n.text:00000000004035de\n.text:00000000004035e3\n.text:00000000004035e5\n.text:00000000004035e7\n.text:00000000004035ec\n.text:00000000004035f1\n.text:00000000004035f6\n.text:00000000004035f9\n.text:00000000004035fb\n.text:00000000004035fd\n.text:00000000004035ff\n.text:0000000000403602\n.text:0000000000403607\n.text:000000000040360c\n.text:0000000000403611\n.text:0000000000403616\n.text:000000000040361b\n.text:0000000000403620\n.text:0000000000403623\n.text:0000000000403627\n.text:000000000040362c\n.text:0000000000403631\n.text:0000000000403634\n.text:0000000000403636\n.text:0000000000403638\n.text:000000000040363a\n.text:000000000040363d\n.text:0000000000403642\n.text:0000000000403647\n.text:000000000040364c\n'
p1112
tp1113
sS'c_isupper'
p1114
(S'\n__stdcall c_isupper()\n'
p1115
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1116
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1117
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1118
S'.text:000000000040fad0\n.text:000000000040fad3\n.text:000000000040fad6\n.text:000000000040fad9\n'
p1119
tp1120
sS'allocate_entry'
p1121
(S'\n__stdcall allocate_entry(Hash_table * table)\n'
p1122
V\u000ahash_entry * allocate_entry(Hash_table *table)\u000a\u000a{\u000a  hash_entry *phVar1;\u000a  \u000a  phVar1 = table->free_entry_list;\u000a  if (phVar1 != (hash_entry *)0x0) {\u000a    table->free_entry_list = phVar1->next;\u000a    return phVar1;\u000a  }\u000a  phVar1 = (hash_entry *)malloc(0x10);\u000a  return phVar1;\u000a}\u000a\u000a
p1123
S'MOV RAX,qword ptr [RDI + 0x48]\nTEST RAX,RAX\nJZ 0x0040a522\nMOV RCX,qword ptr [RAX + 0x8]\nMOV qword ptr [RDI + 0x48],RCX\nRET\nPUSH RAX\nMOV EDI,0x10\nCALL 0x00402760\nADD RSP,0x8\nRET\n'
p1124
S'48 8b 47 48\n48 85 c0\n74 09\n48 8b 48 08\n48 89 4f 48\nc3\n50\nbf 10 00 00 00\ne8 33 82 ff ff\n48 83 c4 08\nc3\n'
p1125
S'.text:000000000040a510\n.text:000000000040a514\n.text:000000000040a517\n.text:000000000040a519\n.text:000000000040a51d\n.text:000000000040a521\n.text:000000000040a522\n.text:000000000040a523\n.text:000000000040a528\n.text:000000000040a52d\n.text:000000000040a531\n'
p1126
tp1127
sS'direntry_cmp_inode'
p1128
(S'\n__stdcall direntry_cmp_inode(void * a, void * b)\n'
p1129
V\u000aint direntry_cmp_inode(void *a,void *b)\u000a\u000a{\u000a  ulong uVar1;\u000a  uint uVar2;\u000a  bool bVar3;\u000a  \u000a  uVar1 = *(ulong *)((long)a + 8);\u000a  bVar3 = *(ulong *)((long)b + 8) <= uVar1;\u000a  uVar2 = 0xffffffff;\u000a  if (bVar3) {\u000a    uVar2 = (uint)(bVar3 && uVar1 != *(ulong *)((long)b + 8));\u000a  }\u000a  return (int)uVar2;\u000a}\u000a\u000a
p1130
S'MOV RAX,qword ptr [RDI + 0x8]\nXOR ECX,ECX\nCMP RAX,qword ptr [RSI + 0x8]\nSETA CL\nMOV EAX,0xffffffff\nCMOVNC EAX,ECX\nRET\n'
p1131
S'48 8b 47 08\n31 c9\n48 3b 46 08\n0f 97 c1\nb8 ff ff ff ff\n0f 43 c1\nc3\n'
p1132
S'.text:000000000040d000\n.text:000000000040d004\n.text:000000000040d006\n.text:000000000040d00a\n.text:000000000040d00d\n.text:000000000040d012\n.text:000000000040d015\n'
p1133
tp1134
sS'cp_options_default'
p1135
(S'\n__stdcall cp_options_default(cp_options * x)\n'
p1136
V\u000avoid cp_options_default(cp_options *x)\u000a\u000a{\u000a  __uid_t _Var1;\u000a  \u000a  x->reflink_mode = REFLINK_NEVER;\u000a  *(undefined4 *)&x->field_0x34 = 0;\u000a  *(undefined4 *)&x->dest_info = 0;\u000a  *(undefined4 *)((long)&x->dest_info + 4) = 0;\u000a  *(undefined4 *)&x->set_security_context = 0;\u000a  *(undefined4 *)&x->preserve_security_context = 0;\u000a  *(undefined4 *)&x->reduce_diagnostics = 0;\u000a  *(undefined4 *)&x->update = 0;\u000a  x->mode = 0;\u000a  *(undefined4 *)&x->copy_as_regular = 0;\u000a  *(undefined4 *)&x->move_mode = 0;\u000a  *(undefined4 *)&x->preserve_ownership = 0;\u000a  x->backup_type = no_backups;\u000a  x->dereference = 0;\u000a  x->interactive = 0;\u000a  x->sparse_mode = SPARSE_UNUSED;\u000a  x->src_info = (Hash_table *)0x0;\u000a  _Var1 = geteuid();\u000a  *(bool *)&x->owner_privileges = _Var1 == 0;\u000a  *(bool *)&x->chown_privileges = _Var1 == 0;\u000a  return;\u000a}\u000a\u000a
p1137
S'PUSH RBX\nMOV RBX,RDI\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RBX + 0x30],XMM0\nMOVUPS xmmword ptr [RBX + 0x20],XMM0\nMOVUPS xmmword ptr [RBX + 0x10],XMM0\nMOVUPS xmmword ptr [RBX],XMM0\nMOV qword ptr [RBX + 0x40],0x0\nCALL 0x00402540\nTEST EAX,EAX\nSETZ byte ptr [RBX + 0x1a]\nSETZ byte ptr [RBX + 0x19]\nPOP RBX\nRET\n'
p1138
S'53\n48 89 fb\n0f 57 c0\n0f 11 43 30\n0f 11 43 20\n0f 11 43 10\n0f 11 03\n48 c7 43 40 00 00 00 00\ne8 4d c6 ff ff\n85 c0\n0f 94 43 1a\n0f 94 43 19\n5b\nc3\n'
p1139
S'.text:0000000000405ed0\n.text:0000000000405ed1\n.text:0000000000405ed4\n.text:0000000000405ed7\n.text:0000000000405edb\n.text:0000000000405edf\n.text:0000000000405ee3\n.text:0000000000405ee6\n.text:0000000000405eee\n.text:0000000000405ef3\n.text:0000000000405ef5\n.text:0000000000405ef9\n.text:0000000000405efd\n.text:0000000000405efe\n'
p1140
tp1141
sS'strip'
p1142
(S'\n__stdcall strip(char * name)\n'
p1143
V\u000a_Bool strip(char *name)\u000a\u000a{\u000a  __pid_t __pid;\u000a  uint *puVar1;\u000a  char *pcVar2;\u000a  undefined8 uVar3;\u000a  uint uVar4;\u000a  ulong uVar5;\u000a  int status;\u000a  ushort local_1c [2];\u000a  \u000a  __pid = fork();\u000a  if (__pid == 0) {\u000a    execlp(strip_program,strip_program,name,0);\u000a    puVar1 = (uint *)__errno_location();\u000a    uVar4 = *puVar1;\u000a    uVar3 = dcgettext(0,"cannot run %s",5);\u000a    pcVar2 = quotearg_style((char *)0x4);\u000a    error(1,(ulong)uVar4,uVar3,pcVar2);\u000a    return false;\u000a  }\u000a  if (__pid == -1) {\u000a    puVar1 = (uint *)__errno_location();\u000a    uVar4 = *puVar1;\u000a    pcVar2 = "fork system call failed";\u000a  }\u000a  else {\u000a    __pid = waitpid(__pid,(int *)local_1c,0);\u000a    if (-1 < __pid) {\u000a      if ((local_1c[0] & 0xff7f) == 0) {\u000a        return true;\u000a      }\u000a      uVar3 = dcgettext(0,"strip process terminated abnormally",5);\u000a      uVar5 = 0;\u000a      goto LAB_00403e8a;\u000a    }\u000a    puVar1 = (uint *)__errno_location();\u000a    uVar4 = *puVar1;\u000a    pcVar2 = "waiting for strip";\u000a  }\u000a  uVar3 = dcgettext(0,pcVar2,5);\u000a  uVar5 = (ulong)uVar4;\u000aLAB_00403e8a:\u000a  error(0,uVar5,uVar3,uVar3);\u000a  return false;\u000a}\u000a\u000a
p1144
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nCALL 0x004029c0\nTEST EAX,EAX\nJZ 0x00403dcf\nCMP EAX,-0x1\nJNZ 0x00403e2a\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412075\nJMP 0x00403e77\nMOV RDI,qword ptr [0x006183f8]\nXOR R14D,R14D\nXOR ECX,ECX\nXOR EAX,EAX\nMOV RSI,RDI\nMOV RDX,RBX\nCALL 0x004029a0\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x41208d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RSI,qword ptr [0x006183f8]\nMOV EDI,0x4\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RDX,RBX\nCALL 0x00402870\nJMP 0x00403e92\nLEA RSI,[RSP + 0xc]\nXOR EDX,EDX\nMOV EDI,EAX\nCALL 0x00402890\nTEST EAX,EAX\nJS 0x00403e66\nMOVZX EAX,word ptr [RSP + 0xc]\nTEST AX,0xff7f\nJZ 0x00403e9e\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4120ad\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nJMP 0x00403e8a\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41209b\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00402870\nMOV EAX,R14D\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP RBP\nRET\nMOV R14B,0x1\nJMP 0x00403e92\n'
p1145
S'55\n41 56\n53\n48 83 ec 10\n48 89 fb\ne8 10 ec ff ff\n85 c0\n74 1b\n83 f8 ff\n75 71\ne8 22 e5 ff ff\n8b 18\n45 31 f6\n31 ff\nbe 75 20 41 00\ne9 a8 00 00 00\n48 8b 3d 22 46 21 00\n45 31 f6\n31 c9\n31 c0\n48 89 fe\n48 89 da\ne8 b8 eb ff ff\ne8 f3 e4 ff ff\n8b 28\n31 ff\nbe 8d 20 41 00\nba 05 00 00 00\ne8 20 e6 ff ff\n48 89 c3\n48 8b 35 ee 45 21 00\nbf 04 00 00 00\ne8 ac 86 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n89 ee\n48 89 da\ne8 48 ea ff ff\neb 68\n48 8d 74 24 0c\n31 d2\n89 c7\ne8 58 ea ff ff\n85 c0\n78 2a\n0f b7 44 24 0c\n66 a9 7f ff\n74 57\n45 31 f6\n31 ff\nbe ad 20 41 00\nba 05 00 00 00\ne8 c5 e5 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\neb 24\ne8 75 e4 ff ff\n8b 18\n45 31 f6\n31 ff\nbe 9b 20 41 00\nba 05 00 00 00\ne8 9f e5 ff ff\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ca\ne8 de e9 ff ff\n44 89 f0\n48 83 c4 10\n5b\n41 5e\n5d\nc3\n41 b6 01\neb ef\n'
p1146
S'.text:0000000000403da0\n.text:0000000000403da1\n.text:0000000000403da3\n.text:0000000000403da4\n.text:0000000000403da8\n.text:0000000000403dab\n.text:0000000000403db0\n.text:0000000000403db2\n.text:0000000000403db4\n.text:0000000000403db7\n.text:0000000000403db9\n.text:0000000000403dbe\n.text:0000000000403dc0\n.text:0000000000403dc3\n.text:0000000000403dc5\n.text:0000000000403dca\n.text:0000000000403dcf\n.text:0000000000403dd6\n.text:0000000000403dd9\n.text:0000000000403ddb\n.text:0000000000403ddd\n.text:0000000000403de0\n.text:0000000000403de3\n.text:0000000000403de8\n.text:0000000000403ded\n.text:0000000000403def\n.text:0000000000403df1\n.text:0000000000403df6\n.text:0000000000403dfb\n.text:0000000000403e00\n.text:0000000000403e03\n.text:0000000000403e0a\n.text:0000000000403e0f\n.text:0000000000403e14\n.text:0000000000403e17\n.text:0000000000403e1c\n.text:0000000000403e1e\n.text:0000000000403e20\n.text:0000000000403e23\n.text:0000000000403e28\n.text:0000000000403e2a\n.text:0000000000403e2f\n.text:0000000000403e31\n.text:0000000000403e33\n.text:0000000000403e38\n.text:0000000000403e3a\n.text:0000000000403e3c\n.text:0000000000403e41\n.text:0000000000403e45\n.text:0000000000403e47\n.text:0000000000403e4a\n.text:0000000000403e4c\n.text:0000000000403e51\n.text:0000000000403e56\n.text:0000000000403e5b\n.text:0000000000403e5e\n.text:0000000000403e60\n.text:0000000000403e62\n.text:0000000000403e64\n.text:0000000000403e66\n.text:0000000000403e6b\n.text:0000000000403e6d\n.text:0000000000403e70\n.text:0000000000403e72\n.text:0000000000403e77\n.text:0000000000403e7c\n.text:0000000000403e81\n.text:0000000000403e84\n.text:0000000000403e86\n.text:0000000000403e88\n.text:0000000000403e8a\n.text:0000000000403e8d\n.text:0000000000403e92\n.text:0000000000403e95\n.text:0000000000403e99\n.text:0000000000403e9a\n.text:0000000000403e9c\n.text:0000000000403e9d\n.text:0000000000403e9e\n.text:0000000000403ea1\n'
p1147
tp1148
sS'rpmatch'
p1149
(S'\n__stdcall rpmatch(char * __response)\n'
p1150
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint rpmatch(char *__response)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_rpmatch_00618238)();\u000a  return iVar1;\u000a}\u000a\u000a
p1151
S'JMP qword ptr [0x00618238]\n'
p1152
S'ff 25 92 5b 21 00\n'
p1153
S'.plt:00000000004026a0\n'
p1154
tp1155
sS'raise'
p1156
(S'\n__stdcall raise(int __sig)\n'
p1157
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint raise(int __sig)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_raise_00618028)();\u000a  return iVar1;\u000a}\u000a\u000a
p1158
S'JMP qword ptr [0x00618028]\n'
p1159
S'ff 25 a2 5d 21 00\n'
p1160
S'.plt:0000000000402280\n'
p1161
tp1162
sS'mode_create_from_ref'
p1163
(S'\n__stdcall mode_create_from_ref(char * ref_file)\n'
p1164
V\u000amode_change * mode_create_from_ref(char *ref_file)\u000a\u000a{\u000a  int iVar1;\u000a  mode_change *pmVar2;\u000a  stat ref_stats;\u000a  stat local_90;\u000a  \u000a  iVar1 = stat(ref_file,&local_90);\u000a  if (iVar1 != 0) {\u000a    return (mode_change *)0x0;\u000a  }\u000a  pmVar2 = make_node_op_equals();\u000a  return pmVar2;\u000a}\u000a\u000a
p1165
S'SUB RSP,0x98\nLEA RSI,[RSP + 0x8]\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x0040b02f\nXOR EAX,EAX\nADD RSP,0x98\nRET\nMOV EDI,dword ptr [RSP + 0x20]\nMOV ESI,0xfff\nCALL 0x0040afe0\nADD RSP,0x98\nRET\n'
p1166
S'48 81 ec 98 00 00 00\n48 8d 74 24 08\ne8 6f 57 00 00\n85 c0\n74 0a\n31 c0\n48 81 c4 98 00 00 00\nc3\n8b 7c 24 20\nbe ff 0f 00 00\ne8 a3 ff ff ff\n48 81 c4 98 00 00 00\nc3\n'
p1167
S'.text:000000000040b010\n.text:000000000040b017\n.text:000000000040b01c\n.text:000000000040b021\n.text:000000000040b023\n.text:000000000040b025\n.text:000000000040b027\n.text:000000000040b02e\n.text:000000000040b02f\n.text:000000000040b033\n.text:000000000040b038\n.text:000000000040b03d\n.text:000000000040b044\n'
p1168
tp1169
sS'have_same_content'
p1170
(S'\n__stdcall have_same_content()\n'
p1171
V\u000a_Bool have_same_content(void)\u000a\u000a{\u000a  char a_buff [4096];\u000a  char b_buff [4096];\u000a  int iVar1;\u000a  size_t __n;\u000a  size_t sVar2;\u000a  uint in_ESI;\u000a  uint in_EDI;\u000a  \u000a  do {\u000a    __n = full_read((void *)(ulong)in_EDI,0x618510);\u000a    if (__n == 0) {\u000a      return true;\u000a    }\u000a    sVar2 = full_read((void *)(ulong)in_ESI,0x619510);\u000a  } while ((__n == sVar2) &&\u000a          (iVar1 = memcmp((char *)&ram0x00618510,(char *)&ram0x00619510,__n), iVar1 == 0));\u000a  return false;\u000a}\u000a\u000a
p1172
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV EBP,EDI\nNOP dword ptr [RAX]\nMOV ESI,0x618510\nMOV EDX,0x1000\nMOV EDI,EBP\nCALL 0x00409780\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x004041ea\nMOV ESI,0x619510\nMOV EDX,0x1000\nMOV EDI,R14D\nCALL 0x00409780\nCMP RBX,RAX\nJNZ 0x004041e6\nMOV EDI,0x618510\nMOV ESI,0x619510\nMOV RDX,RBX\nCALL 0x004025f0\nTEST EAX,EAX\nJZ 0x004041a0\nXOR EAX,EAX\nJMP 0x004041ec\nMOV AL,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1173
S'55\n41 56\n53\n41 89 f6\n89 fd\n0f 1f 80 00 00 00 00\nbe 10 85 61 00\nba 00 10 00 00\n89 ef\ne8 cf 55 00 00\n48 89 c3\n48 85 db\n74 31\nbe 10 95 61 00\nba 00 10 00 00\n44 89 f7\ne8 b5 55 00 00\n48 39 c3\n75 16\nbf 10 85 61 00\nbe 10 95 61 00\n48 89 da\ne8 0e e4 ff ff\n85 c0\n74 ba\n31 c0\neb 02\nb0 01\n5b\n41 5e\n5d\nc3\n'
p1174
S'.text:0000000000404190\n.text:0000000000404191\n.text:0000000000404193\n.text:0000000000404194\n.text:0000000000404197\n.text:0000000000404199\n.text:00000000004041a0\n.text:00000000004041a5\n.text:00000000004041aa\n.text:00000000004041ac\n.text:00000000004041b1\n.text:00000000004041b4\n.text:00000000004041b7\n.text:00000000004041b9\n.text:00000000004041be\n.text:00000000004041c3\n.text:00000000004041c6\n.text:00000000004041cb\n.text:00000000004041ce\n.text:00000000004041d0\n.text:00000000004041d5\n.text:00000000004041da\n.text:00000000004041dd\n.text:00000000004041e2\n.text:00000000004041e4\n.text:00000000004041e6\n.text:00000000004041e8\n.text:00000000004041ea\n.text:00000000004041ec\n.text:00000000004041ed\n.text:00000000004041ef\n.text:00000000004041f0\n'
p1175
tp1176
sS'triple_hash'
p1177
(S'\n__stdcall triple_hash(void * x, size_t table_size)\n'
p1178
V\u000asize_t triple_hash(void *x,size_t table_size)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = hash_pjw(*(void **)x,table_size);\u000a  return (sVar1 ^ *(ulong *)((long)x + 8)) % table_size;\u000a}\u000a\u000a
p1179
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX]\nCALL 0x0040fbd0\nXOR RAX,qword ptr [RBX + 0x8]\nXOR EDX,EDX\nDIV R14\nMOV RAX,RDX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1180
S'41 56\n53\n50\n49 89 f6\n48 89 fb\n48 8b 3b\ne8 ce 53 00 00\n48 33 43 08\n31 d2\n49 f7 f6\n48 89 d0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1181
S'.text:000000000040a7f0\n.text:000000000040a7f2\n.text:000000000040a7f3\n.text:000000000040a7f4\n.text:000000000040a7f7\n.text:000000000040a7fa\n.text:000000000040a7fd\n.text:000000000040a802\n.text:000000000040a806\n.text:000000000040a808\n.text:000000000040a80b\n.text:000000000040a80e\n.text:000000000040a812\n.text:000000000040a813\n.text:000000000040a815\n'
p1182
tp1183
sS'rotr64'
p1184
(S'\n__stdcall rotr64(uint64_t x)\n'
p1185
V\u000auint64_t rotr64(uint64_t x)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined4 in_ESI;\u000a  \u000a  bVar1 = (byte)in_ESI & 0x3f;\u000a  return x >> bVar1 | x << 0x40 - bVar1;\u000a}\u000a\u000a
p1186
S'MOV ECX,ESI\nROR RDI,CL\nMOV RAX,RDI\nRET\n'
p1187
S'89 f1\n48 d3 cf\n48 89 f8\nc3\n'
p1188
S'.text:000000000040f900\n.text:000000000040f902\n.text:000000000040f905\n.text:000000000040f908\n'
p1189
tp1190
sS'read'
p1191
(S'\n__stdcall read(int __fd, void * __buf, size_t __nbytes)\n'
p1192
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t read(int __fd,void *__buf,size_t __nbytes)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_read_006181d8)();\u000a  return sVar1;\u000a}\u000a\u000a
p1193
S'JMP qword ptr [0x006181d8]\n'
p1194
S'ff 25 f2 5b 21 00\n'
p1195
S'.plt:00000000004025e0\n'
p1196
tp1197
sS'set_custom_quoting'
p1198
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1199
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1200
S'TEST RDI,RDI\nMOV EAX,0x61a960\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x0040b385\nTEST RDX,RDX\nJZ 0x0040b385\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x004022d0\n'
p1201
S'48 85 ff\nb8 60 a9 61 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 45 6f ff ff\n'
p1202
S'.text:000000000040b360\n.text:000000000040b363\n.text:000000000040b368\n.text:000000000040b36c\n.text:000000000040b372\n.text:000000000040b375\n.text:000000000040b377\n.text:000000000040b37a\n.text:000000000040b37c\n.text:000000000040b380\n.text:000000000040b384\n.text:000000000040b385\n.text:000000000040b386\n'
p1203
tp1204
sS'c_isalpha'
p1205
(S'\n__stdcall c_isalpha()\n'
p1206
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1207
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x0040fa1b\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1208
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1209
S'.text:000000000040fa00\n.text:000000000040fa03\n.text:000000000040fa06\n.text:000000000040fa08\n.text:000000000040fa12\n.text:000000000040fa14\n.text:000000000040fa17\n.text:000000000040fa1a\n.text:000000000040fa1b\n.text:000000000040fa1d\n'
p1210
tp1211
sS'src_to_dest_hash'
p1212
(S'\n__stdcall src_to_dest_hash(void * x, size_t table_size)\n'
p1213
V\u000asize_t src_to_dest_hash(void *x,size_t table_size)\u000a\u000a{\u000a  return *(ulong *)x % table_size;\u000a}\u000a\u000a
p1214
S'MOV RAX,qword ptr [RDI]\nXOR EDX,EDX\nDIV RSI\nMOV RAX,RDX\nRET\n'
p1215
S'48 8b 07\n31 d2\n48 f7 f6\n48 89 d0\nc3\n'
p1216
S'.text:0000000000408630\n.text:0000000000408633\n.text:0000000000408635\n.text:0000000000408638\n.text:000000000040863b\n'
p1217
tp1218
sS'ftypelet'
p1219
(S'\n__stdcall ftypelet()\n'
p1220
V\u000achar ftypelet(void)\u000a\u000a{\u000a  uint uVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  uVar1 = ((uint)in_RDI & 0xf000) - 0x1000;\u000a  if (uVar1 < 0xc000) {\u000a    return "pc?d?b?-?l?s"[(ulong)(uVar1 >> 0xc)];\u000a  }\u000a  return '?';\u000a}\u000a\u000a
p1221
S'AND EDI,0xf000\nADD EDI,0xfffff000\nCMP EDI,0xbfff\nJA 0x0040962e\nSHR EDI,0xc\nMOV AL,byte ptr [0x412c7e + RDI]\nRET\nMOV AL,0x3f\nRET\n'
p1222
S'81 e7 00 f0 00 00\n81 c7 00 f0 ff ff\n81 ff ff bf 00 00\n77 0a\nc1 ef 0c\n8a 87 7e 2c 41 00\nc3\nb0 3f\nc3\n'
p1223
S'.text:0000000000409610\n.text:0000000000409616\n.text:000000000040961c\n.text:0000000000409622\n.text:0000000000409624\n.text:0000000000409627\n.text:000000000040962d\n.text:000000000040962e\n.text:0000000000409630\n'
p1224
tp1225
sS'geteuid'
p1226
(S'\n__stdcall geteuid()\n'
p1227
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__uid_t geteuid(void)\u000a\u000a{\u000a  __uid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_geteuid_00618188)();\u000a  return _Var1;\u000a}\u000a\u000a
p1228
S'JMP qword ptr [0x00618188]\n'
p1229
S'ff 25 42 5c 21 00\n'
p1230
S'.plt:0000000000402540\n'
p1231
tp1232
sS'rpl_calloc'
p1233
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1234
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_00618208)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1235
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x0040eefb\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x0040ef00\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x0040ef00\nPUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00402640\n'
p1236
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 ef 33 ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 35 37 ff ff\n'
p1237
S'.text:000000000040eec0\n.text:000000000040eec3\n.text:000000000040eec8\n.text:000000000040eeca\n.text:000000000040eecd\n.text:000000000040eed2\n.text:000000000040eed4\n.text:000000000040eed7\n.text:000000000040eedb\n.text:000000000040eedd\n.text:000000000040eee0\n.text:000000000040eee3\n.text:000000000040eee6\n.text:000000000040eee9\n.text:000000000040eeeb\n.text:000000000040eeec\n.text:000000000040eef1\n.text:000000000040eef7\n.text:000000000040eef9\n.text:000000000040eefa\n.text:000000000040eefb\n.text:000000000040ef00\n.text:000000000040ef03\n.text:000000000040ef06\n'
p1238
tp1239
sS'memset'
p1240
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1241
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_00618180)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1242
S'JMP qword ptr [0x00618180]\n'
p1243
S'ff 25 4a 5c 21 00\n'
p1244
S'.plt:0000000000402530\n'
p1245
tp1246
sS'__xargmatch_internal'
p1247
(S'\n__stdcall __xargmatch_internal(char * context, char * arg, char * * arglist, char * vallist, size_t valsize, argmatch_exit_fn * exit_fn)\n'
p1248
V\u000aptrdiff_t __xargmatch_internal\u000a                    (char *context,char *arg,char **arglist,char *vallist,size_t valsize,\u000a                    void (*exit_fn)())\u000a\u000a{\u000a  ptrdiff_t problem;\u000a  \u000a  problem = argmatch(arg,arglist,vallist,valsize);\u000a  if (problem < 0) {\u000a    argmatch_invalid(context,arg,problem);\u000a    argmatch_valid(arglist,vallist,valsize);\u000a    (*exit_fn)();\u000a    problem = -1;\u000a  }\u000a  return problem;\u000a}\u000a\u000a
p1249
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R9\nMOV R15,R8\nMOV R12,RCX\nMOV R13,RDX\nMOV RBX,RSI\nMOV RBP,RDI\nMOV RDI,RBX\nMOV RSI,R13\nMOV RDX,R12\nMOV RCX,R15\nCALL 0x0040f5b0\nTEST RAX,RAX\nJNS 0x0040f869\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x0040f6b0\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nCALL 0x0040f720\nCALL R14\nMOV RAX,-0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1250
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 ce\n4d 89 c7\n49 89 cc\n49 89 d5\n48 89 f3\n48 89 fd\n48 89 df\n4c 89 ee\n4c 89 e2\n4c 89 f9\ne8 72 fd ff ff\n48 85 c0\n79 26\n48 89 ef\n48 89 de\n48 89 c2\ne8 5f fe ff ff\n4c 89 ef\n4c 89 e6\n4c 89 fa\ne8 c1 fe ff ff\n41 ff d6\n48 c7 c0 ff ff ff ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1251
S'.text:000000000040f810\n.text:000000000040f811\n.text:000000000040f813\n.text:000000000040f815\n.text:000000000040f817\n.text:000000000040f819\n.text:000000000040f81a\n.text:000000000040f81b\n.text:000000000040f81e\n.text:000000000040f821\n.text:000000000040f824\n.text:000000000040f827\n.text:000000000040f82a\n.text:000000000040f82d\n.text:000000000040f830\n.text:000000000040f833\n.text:000000000040f836\n.text:000000000040f839\n.text:000000000040f83e\n.text:000000000040f841\n.text:000000000040f843\n.text:000000000040f846\n.text:000000000040f849\n.text:000000000040f84c\n.text:000000000040f851\n.text:000000000040f854\n.text:000000000040f857\n.text:000000000040f85a\n.text:000000000040f85f\n.text:000000000040f862\n.text:000000000040f869\n.text:000000000040f86d\n.text:000000000040f86e\n.text:000000000040f870\n.text:000000000040f872\n.text:000000000040f874\n.text:000000000040f876\n.text:000000000040f877\n'
p1252
tp1253
sS'dup_safer'
p1254
(S'\n__stdcall dup_safer()\n'
p1255
V\u000aint dup_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0,3);\u000a  return iVar1;\u000a}\u000a\u000a
p1256
S'XOR ESI,ESI\nMOV EDX,0x3\nXOR EAX,EAX\nJMP 0x0040ef10\n'
p1257
S'31 f6\nba 03 00 00 00\n31 c0\ne9 92 17 00 00\n'
p1258
S'.text:000000000040d770\n.text:000000000040d772\n.text:000000000040d777\n.text:000000000040d779\n'
p1259
tp1260
sS'savewd_errno'
p1261
(S'\n__stdcall savewd_errno(savewd * wd)\n'
p1262
V\u000aint savewd_errno(savewd *wd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = 0;\u000a  if (wd->state == ERROR_STATE) {\u000a    iVar1 = wd->val;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1263
S'XOR EAX,EAX\nCMP dword ptr [RDI],0x4\nJNZ 0x0040d03a\nMOV EAX,dword ptr [RDI + 0x4]\nRET\n'
p1264
S'31 c0\n83 3f 04\n75 03\n8b 47 04\nc3\n'
p1265
S'.text:000000000040d030\n.text:000000000040d032\n.text:000000000040d035\n.text:000000000040d037\n.text:000000000040d03a\n'
p1266
tp1267
sS'xget_version'
p1268
(S'\n__stdcall xget_version(char * context, char * version)\n'
p1269
V\u000abackup_type xget_version(char *context,char *version)\u000a\u000a{\u000a  backup_type bVar1;\u000a  char *version_00;\u000a  \u000a  if ((version != (char *)0x0) && (*version != 0)) {\u000a    bVar1 = get_version(context,version);\u000a    return bVar1;\u000a  }\u000a  version_00 = getenv("VERSION_CONTROL");\u000a  bVar1 = get_version("$VERSION_CONTROL",version_00);\u000a  return bVar1;\u000a}\u000a\u000a
p1270
S'TEST RSI,RSI\nJZ 0x00408f5c\nCMP byte ptr [RSI],0x0\nJZ 0x00408f5c\nJMP 0x00408f10\nPUSH RAX\nMOV EDI,0x412ba2\nCALL 0x00402270\nMOV EDI,0x412ba1\nMOV RSI,RAX\nPOP RAX\nJMP 0x00408f10\n'
p1271
S'48 85 f6\n74 07\n80 3e 00\n74 02\neb b4\n50\nbf a2 2b 41 00\ne8 09 93 ff ff\nbf a1 2b 41 00\n48 89 c6\n58\neb 9e\n'
p1272
S'.text:0000000000408f50\n.text:0000000000408f53\n.text:0000000000408f55\n.text:0000000000408f58\n.text:0000000000408f5a\n.text:0000000000408f5c\n.text:0000000000408f5d\n.text:0000000000408f62\n.text:0000000000408f67\n.text:0000000000408f6c\n.text:0000000000408f6f\n.text:0000000000408f70\n'
p1273
tp1274
sS'copy_file'
p1275
(S'\n__stdcall copy_file(char * from, char * to, cp_options * x)\n'
p1276
V\u000a_Bool copy_file(char *from,char *to,cp_options *x)\u000a\u000a{\u000a  _Bool _Var1;\u000a  _Bool copy_into_self;\u000a  _Bool local_19;\u000a  \u000a  if ((copy_only_if_needed == 1) && (_Var1 = need_copy(), _Var1 == false)) {\u000a    return true;\u000a  }\u000a  _Var1 = copy(from,to,(cp_options *)0x0,(_Bool *)x,&local_19);\u000a  return _Var1;\u000a}\u000a\u000a
p1277
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nCMP byte ptr [0x00618502],0x1\nJNZ 0x00403d7e\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00403ff0\nMOV ECX,EAX\nMOV AL,0x1\nTEST CL,CL\nJZ 0x00403d96\nLEA R8,[RSP + 0xf]\nXOR EDX,EDX\nXOR R9D,R9D\nMOV RDI,RBX\nMOV RSI,R15\nMOV RCX,R14\nCALL 0x00404330\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1278
S'41 57\n41 56\n53\n48 83 ec 10\n49 89 d6\n49 89 f7\n48 89 fb\n80 3d 99 47 21 00 01\n75 13\n48 89 df\n4c 89 fe\ne8 7a 02 00 00\n89 c1\nb0 01\n84 c9\n74 18\n4c 8d 44 24 0f\n31 d2\n45 31 c9\n48 89 df\n4c 89 fe\n4c 89 f1\ne8 9a 05 00 00\n48 83 c4 10\n5b\n41 5e\n41 5f\nc3\n'
p1279
S'.text:0000000000403d50\n.text:0000000000403d52\n.text:0000000000403d54\n.text:0000000000403d55\n.text:0000000000403d59\n.text:0000000000403d5c\n.text:0000000000403d5f\n.text:0000000000403d62\n.text:0000000000403d69\n.text:0000000000403d6b\n.text:0000000000403d6e\n.text:0000000000403d71\n.text:0000000000403d76\n.text:0000000000403d78\n.text:0000000000403d7a\n.text:0000000000403d7c\n.text:0000000000403d7e\n.text:0000000000403d83\n.text:0000000000403d85\n.text:0000000000403d88\n.text:0000000000403d8b\n.text:0000000000403d8e\n.text:0000000000403d91\n.text:0000000000403d96\n.text:0000000000403d9a\n.text:0000000000403d9b\n.text:0000000000403d9d\n.text:0000000000403d9f\n'
p1280
tp1281
sS'rotr32'
p1282
(S'\n__stdcall rotr32()\n'
p1283
V\u000auint32_t rotr32(void)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined4 in_ESI;\u000a  uint in_EDI;\u000a  \u000a  bVar1 = (byte)in_ESI & 0x1f;\u000a  return (uint32_t)(in_EDI >> bVar1 | in_EDI << 0x20 - bVar1);\u000a}\u000a\u000a
p1284
S'MOV ECX,ESI\nROR EDI,CL\nMOV EAX,EDI\nRET\n'
p1285
S'89 f1\nd3 cf\n89 f8\nc3\n'
p1286
S'.text:000000000040f920\n.text:000000000040f922\n.text:000000000040f924\n.text:000000000040f926\n'
p1287
tp1288
sS'__ctype_b_loc'
p1289
(S'\n__stdcall __ctype_b_loc()\n'
p1290
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_006183d8)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1291
S'JMP qword ptr [0x006183d8]\n'
p1292
S'ff 25 f2 59 21 00\n'
p1293
S'.plt:00000000004029e0\n'
p1294
tp1295
sS'fdadvise'
p1296
(S'\n__stdcall fdadvise(int __fd, __off_t __offset, __off_t __len, int __advise)\n'
p1297
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fdadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_posix_fadvise_006181c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p1298
S'JMP 0x004025c0\n'
p1299
S'e9 3b 92 ff ff\n'
p1300
S'.text:0000000000409380\n'
p1301
tp1302
sS'quotearg'
p1303
(S'\n__stdcall quotearg(char * arg)\n'
p1304
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1305
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x0040c1e0\n'
p1306
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1307
S'.text:000000000040c3c0\n.text:000000000040c3c3\n.text:000000000040c3c5\n.text:000000000040c3c8\n'
p1308
tp1309
sS'c_iscntrl'
p1310
(S'\n__stdcall c_iscntrl()\n'
p1311
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1312
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x0040fa48\nRET\nCMP EDI,0x7f\nJZ 0x0040fa47\nXOR EAX,EAX\nRET\n'
p1313
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1314
S'.text:000000000040fa40\n.text:000000000040fa42\n.text:000000000040fa45\n.text:000000000040fa47\n.text:000000000040fa48\n.text:000000000040fa4b\n.text:000000000040fa4d\n.text:000000000040fa4f\n'
p1315
tp1316
sS'hash_reset_tuning'
p1317
(S'\n__stdcall hash_reset_tuning(Hash_tuning * tuning)\n'
p1318
V\u000avoid hash_reset_tuning(Hash_tuning *tuning)\u000a\u000a{\u000a  float fVar1;\u000a  float fVar2;\u000a  float fVar3;\u000a  \u000a  *(undefined4 *)&tuning->is_n_buckets = default_tuning._16_4_;\u000a  fVar3 = default_tuning.growth_factor;\u000a  fVar2 = default_tuning.growth_threshold;\u000a  fVar1 = default_tuning.shrink_factor;\u000a  tuning->shrink_threshold = default_tuning.shrink_threshold;\u000a  tuning->shrink_factor = fVar1;\u000a  tuning->growth_threshold = fVar2;\u000a  tuning->growth_factor = fVar3;\u000a  return;\u000a}\u000a\u000a
p1319
S'MOV EAX,dword ptr [0x00412d5c]\nMOV dword ptr [RDI + 0x10],EAX\nMOVUPS XMM0,xmmword ptr [0x00412d4c]\nMOVUPS xmmword ptr [RDI],XMM0\nRET\n'
p1320
S'8b 05 06 91 00 00\n89 47 10\n0f 10 05 ec 90 00 00\n0f 11 07\nc3\n'
p1321
S'.text:0000000000409c50\n.text:0000000000409c56\n.text:0000000000409c59\n.text:0000000000409c60\n.text:0000000000409c63\n'
p1322
tp1323
sS'get_ids'
p1324
(S'\n__stdcall get_ids()\n'
p1325
V\u000avoid get_ids(void)\u000a\u000a{\u000a  uid_t uVar1;\u000a  strtol_error sVar2;\u000a  passwd *ppVar3;\u000a  group *pgVar4;\u000a  undefined8 uVar5;\u000a  char *pcVar6;\u000a  uid_t local_10;\u000a  int iStack12;\u000a  \u000a  if (owner_name == (char *)0x0) {\u000a    owner_id = 0xffffffff;\u000a  }\u000a  else {\u000a    ppVar3 = getpwnam(owner_name);\u000a    if (ppVar3 == (passwd *)0x0) {\u000a      sVar2 = xstrtoul(owner_name,(char **)0x0,(ulong *)0x0,(char *)&local_10);\u000a      if ((sVar2 != LONGINT_OK) || (uVar1 = local_10, iStack12 != 0)) {\u000a        uVar5 = dcgettext(0,"invalid user %s",5);\u000a        pcVar6 = quote(owner_name);\u000a        error(1,0,uVar5,pcVar6);\u000a        uVar1 = local_10;\u000a      }\u000a    }\u000a    else {\u000a      uVar1 = ppVar3->pw_uid;\u000a    }\u000a    owner_id = uVar1;\u000a    endpwent();\u000a  }\u000a  if (group_name == (char *)0x0) {\u000a    group_id = 0xffffffff;\u000a  }\u000a  else {\u000a    pgVar4 = getgrnam(group_name);\u000a    if (pgVar4 == (group *)0x0) {\u000a      sVar2 = xstrtoul(group_name,(char **)0x0,(ulong *)0x0,(char *)&local_10);\u000a      if ((sVar2 != LONGINT_OK) || (iStack12 != 0)) {\u000a        uVar5 = dcgettext(0,"invalid group %s",5);\u000a        pcVar6 = quote(group_name);\u000a        error(1,0,uVar5,pcVar6);\u000a      }\u000a    }\u000a    else {\u000a      local_10 = pgVar4->gr_gid;\u000a    }\u000a    group_id = local_10;\u000a    endgrent();\u000a  }\u000a  return;\u000a}\u000a\u000a
p1326
S'PUSH RBX\nSUB RSP,0x10\nMOV RDI,qword ptr [0x006184f0]\nTEST RDI,RDI\nJZ 0x00403830\nCALL 0x00402690\nTEST RAX,RAX\nJZ 0x0040383c\nMOV EAX,dword ptr [RAX + 0x10]\nJMP 0x0040389b\nMOV dword ptr [0x00618504],0xffffffff\nJMP 0x004038a6\nMOV RDI,qword ptr [0x006184f0]\nLEA RCX,[RSP + 0x8]\nXOR ESI,ESI\nXOR EDX,EDX\nXOR R8D,R8D\nCALL 0x0040eb70\nTEST EAX,EAX\nJNZ 0x00403863\nMOV RAX,qword ptr [RSP + 0x8]\nSHR RAX,0x20\nJZ 0x00403897\nXOR EDI,EDI\nMOV ESI,0x412003\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RDI,qword ptr [0x006184f0]\nCALL 0x0040c6e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [0x00618504],EAX\nCALL 0x004027b0\nMOV RDI,qword ptr [0x006184f8]\nTEST RDI,RDI\nJZ 0x004038c1\nCALL 0x004026e0\nTEST RAX,RAX\nJZ 0x004038cd\nMOV EAX,dword ptr [RAX + 0x10]\nJMP 0x0040392c\nMOV dword ptr [0x00618508],0xffffffff\nJMP 0x00403937\nMOV RDI,qword ptr [0x006184f8]\nLEA RCX,[RSP + 0x8]\nXOR ESI,ESI\nXOR EDX,EDX\nXOR R8D,R8D\nCALL 0x0040eb70\nTEST EAX,EAX\nJNZ 0x004038f4\nMOV RAX,qword ptr [RSP + 0x8]\nSHR RAX,0x20\nJZ 0x00403928\nXOR EDI,EDI\nMOV ESI,0x412013\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV RDI,qword ptr [0x006184f8]\nCALL 0x0040c6e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402870\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [0x00618508],EAX\nCALL 0x00402260\nADD RSP,0x10\nPOP RBX\nRET\n'
p1327
S'53\n48 83 ec 10\n48 8b 3d d4 4c 21 00\n48 85 ff\n74 0f\ne8 6a ee ff ff\n48 85 c0\n74 11\n8b 40 10\neb 6b\nc7 05 ca 4c 21 00 ff ff ff ff\neb 6a\n48 8b 3d ad 4c 21 00\n48 8d 4c 24 08\n31 f6\n31 d2\n45 31 c0\ne8 1c b3 00 00\n85 c0\n75 0b\n48 8b 44 24 08\n48 c1 e8 20\n74 34\n31 ff\nbe 03 20 41 00\nba 05 00 00 00\ne8 ac eb ff ff\n48 89 c3\n48 8b 3d 72 4c 21 00\ne8 5d 8e 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 d9 ef ff ff\n8b 44 24 08\n89 05 63 4c 21 00\ne8 0a ef ff ff\n48 8b 3d 4b 4c 21 00\n48 85 ff\n74 0f\ne8 29 ee ff ff\n48 85 c0\n74 11\n8b 40 10\neb 6b\nc7 05 3d 4c 21 00 ff ff ff ff\neb 6a\n48 8b 3d 24 4c 21 00\n48 8d 4c 24 08\n31 f6\n31 d2\n45 31 c0\ne8 8b b2 00 00\n85 c0\n75 0b\n48 8b 44 24 08\n48 c1 e8 20\n74 34\n31 ff\nbe 13 20 41 00\nba 05 00 00 00\ne8 1b eb ff ff\n48 89 c3\n48 8b 3d e9 4b 21 00\ne8 cc 8d 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 48 ef ff ff\n8b 44 24 08\n89 05 d6 4b 21 00\ne8 29 e9 ff ff\n48 83 c4 10\n5b\nc3\n'
p1328
S'.text:0000000000403810\n.text:0000000000403811\n.text:0000000000403815\n.text:000000000040381c\n.text:000000000040381f\n.text:0000000000403821\n.text:0000000000403826\n.text:0000000000403829\n.text:000000000040382b\n.text:000000000040382e\n.text:0000000000403830\n.text:000000000040383a\n.text:000000000040383c\n.text:0000000000403843\n.text:0000000000403848\n.text:000000000040384a\n.text:000000000040384c\n.text:000000000040384f\n.text:0000000000403854\n.text:0000000000403856\n.text:0000000000403858\n.text:000000000040385d\n.text:0000000000403861\n.text:0000000000403863\n.text:0000000000403865\n.text:000000000040386a\n.text:000000000040386f\n.text:0000000000403874\n.text:0000000000403877\n.text:000000000040387e\n.text:0000000000403883\n.text:0000000000403886\n.text:000000000040388b\n.text:000000000040388d\n.text:000000000040388f\n.text:0000000000403892\n.text:0000000000403897\n.text:000000000040389b\n.text:00000000004038a1\n.text:00000000004038a6\n.text:00000000004038ad\n.text:00000000004038b0\n.text:00000000004038b2\n.text:00000000004038b7\n.text:00000000004038ba\n.text:00000000004038bc\n.text:00000000004038bf\n.text:00000000004038c1\n.text:00000000004038cb\n.text:00000000004038cd\n.text:00000000004038d4\n.text:00000000004038d9\n.text:00000000004038db\n.text:00000000004038dd\n.text:00000000004038e0\n.text:00000000004038e5\n.text:00000000004038e7\n.text:00000000004038e9\n.text:00000000004038ee\n.text:00000000004038f2\n.text:00000000004038f4\n.text:00000000004038f6\n.text:00000000004038fb\n.text:0000000000403900\n.text:0000000000403905\n.text:0000000000403908\n.text:000000000040390f\n.text:0000000000403914\n.text:0000000000403917\n.text:000000000040391c\n.text:000000000040391e\n.text:0000000000403920\n.text:0000000000403923\n.text:0000000000403928\n.text:000000000040392c\n.text:0000000000403932\n.text:0000000000403937\n.text:000000000040393b\n.text:000000000040393c\n'
p1329
tp1330
sS'c_isblank'
p1331
(S'\n__stdcall c_isblank()\n'
p1332
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1333
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1334
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1335
S'.text:000000000040fa30\n.text:000000000040fa33\n.text:000000000040fa36\n.text:000000000040fa39\n.text:000000000040fa3c\n.text:000000000040fa3e\n'
p1336
tp1337
sS'utimes'
p1338
(S'\n__stdcall utimes(char * __file, timeval * __tvp)\n'
p1339
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint utimes(char *__file,timeval *__tvp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_utimes_006181f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p1340
S'JMP qword ptr [0x006181f8]\n'
p1341
S'ff 25 d2 5b 21 00\n'
p1342
S'.plt:0000000000402620\n'
p1343
tp1344
sS'dest_info_init'
p1345
(S'\n__stdcall dest_info_init(cp_options * x)\n'
p1346
V\u000avoid dest_info_init(cp_options *x)\u000a\u000a{\u000a  Hash_table *pHVar1;\u000a  \u000a  pHVar1 = hash_initialize(0x3d,(Hash_tuning *)0x0,triple_hash,triple_compare,triple_free);\u000a  x->dest_info = pHVar1;\u000a  return;\u000a}\u000a\u000a
p1347
S'PUSH RBX\nMOV RBX,RDI\nMOV EDI,0x3d\nXOR ESI,ESI\nMOV EDX,0x40a7f0\nMOV ECX,0x40a830\nMOV R8D,0x40a890\nCALL 0x00409c70\nMOV qword ptr [RBX + 0x38],RAX\nPOP RBX\nRET\n'
p1348
S'53\n48 89 fb\nbf 3d 00 00 00\n31 f6\nba f0 a7 40 00\nb9 30 a8 40 00\n41 b8 90 a8 40 00\ne8 80 59 00 00\n48 89 43 38\n5b\nc3\n'
p1349
S'.text:00000000004042d0\n.text:00000000004042d1\n.text:00000000004042d4\n.text:00000000004042d9\n.text:00000000004042db\n.text:00000000004042e0\n.text:00000000004042e5\n.text:00000000004042eb\n.text:00000000004042f0\n.text:00000000004042f4\n.text:00000000004042f5\n'
p1350
tp1351
sS'restore_default_fscreatecon_or_die'
p1352
(S'\n__stdcall restore_default_fscreatecon_or_die()\n'
p1353
V\u000avoid restore_default_fscreatecon_or_die(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  \u000a  iVar2 = setfscreatecon((security_context_t)0x0);\u000a  if (iVar2 != 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    uVar4 = dcgettext(0,"failed to restore the default file creation context",5);\u000a    error(1,(ulong)uVar1,uVar4,uVar4);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1354
S'PUSH RBX\nXOR EDI,EDI\nCALL 0x0040d540\nTEST EAX,EAX\nJZ 0x004077a9\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412a96\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nPOP RBX\nJMP 0x00402870\nPOP RBX\nRET\n'
p1355
S'53\n31 ff\ne8 c8 5d 00 00\n85 c0\n74 2d\ne8 5f ab ff ff\n8b 18\n31 ff\nbe 96 2a 41 00\nba 05 00 00 00\ne8 8c ac ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n89 de\n48 89 ca\n5b\ne9 c7 b0 ff ff\n5b\nc3\n'
p1356
S'.text:0000000000407770\n.text:0000000000407771\n.text:0000000000407773\n.text:0000000000407778\n.text:000000000040777a\n.text:000000000040777c\n.text:0000000000407781\n.text:0000000000407783\n.text:0000000000407785\n.text:000000000040778a\n.text:000000000040778f\n.text:0000000000407794\n.text:0000000000407797\n.text:000000000040779c\n.text:000000000040779e\n.text:00000000004077a0\n.text:00000000004077a3\n.text:00000000004077a4\n.text:00000000004077a9\n.text:00000000004077aa\n'
p1357
tp1358
sS'mode_adjust'
p1359
(S'\n__stdcall mode_adjust(mode_change * changes, mode_t * pmode_bits)\n'
p1360
V\u000amode_t mode_adjust(mode_change *changes,mode_t *pmode_bits)\u000a\u000a{\u000a  uint uVar1;\u000a  char cVar2;\u000a  char *in_RCX;\u000a  uint in_EDX;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  uint uVar6;\u000a  uint *in_R8;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  \u000a  uVar6 = (uint)changes & 0xfff;\u000a  cVar2 = in_RCX[1];\u000a  uVar9 = 0;\u000a  if (cVar2 != 0) {\u000a    uVar7 = 0xc00;\u000a    if ((char)pmode_bits == 0) {\u000a      uVar7 = 0;\u000a    }\u000a    do {\u000a      uVar1 = *(uint *)(in_RCX + 4);\u000a      uVar4 = *(uint *)(in_RCX + 8);\u000a      if (cVar2 == 2) {\u000a        if ((uVar6 & 0x49 | (uint)pmode_bits & 0xff) != 0) {\u000a          uVar4 = uVar4 | 0x49;\u000a        }\u000a      }\u000a      else {\u000a        if (cVar2 == 3) {\u000a          uVar4 = uVar4 & uVar6;\u000a          uVar3 = uVar4 & 0x124;\u000a          if (uVar3 != 0) {\u000a            uVar3 = 0x124;\u000a          }\u000a          uVar8 = uVar4 & 0x92;\u000a          if (uVar8 != 0) {\u000a            uVar8 = 0x92;\u000a          }\u000a          uVar5 = uVar4 & 0x49;\u000a          if (uVar5 != 0) {\u000a            uVar5 = 0x49;\u000a          }\u000a          uVar4 = uVar5 | uVar3 | uVar8 | uVar4;\u000a        }\u000a      }\u000a      uVar3 = ~in_EDX;\u000a      if (uVar1 != 0) {\u000a        uVar3 = uVar1;\u000a      }\u000a      uVar3 = (*(uint *)(in_RCX + 0xc) | ~uVar7) & uVar4 & uVar3;\u000a      cVar2 = *in_RCX;\u000a      if (cVar2 == '+') {\u000a        uVar9 = uVar9 | uVar3;\u000a        uVar6 = uVar6 | uVar3;\u000a      }\u000a      else {\u000a        if (cVar2 == '-') {\u000a          uVar9 = uVar9 | uVar3;\u000a          uVar6 = uVar6 & ~uVar3;\u000a        }\u000a        else {\u000a          if (cVar2 == '=') {\u000a            uVar4 = ~uVar1;\u000a            if (uVar1 == 0) {\u000a              uVar4 = uVar1;\u000a            }\u000a            uVar4 = uVar4 | ~*(uint *)(in_RCX + 0xc) & uVar7;\u000a            uVar9 = uVar9 | ~uVar4 & 0xfff;\u000a            uVar6 = uVar3 | uVar4 & uVar6;\u000a          }\u000a        }\u000a      }\u000a      cVar2 = in_RCX[0x11];\u000a      in_RCX = in_RCX + 0x10;\u000a    } while (cVar2 != 0);\u000a  }\u000a  if (in_R8 != (uint *)0x0) {\u000a    *in_R8 = uVar9;\u000a  }\u000a  return (mode_t)uVar6;\u000a}\u000a\u000a
p1361
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV qword ptr [RSP + -0x8],R8\nAND EDI,0xfff\nMOV AL,byte ptr [RCX + 0x1]\nXOR R13D,R13D\nTEST AL,AL\nJZ 0x0040b175\nTEST SIL,SIL\nMOV R9D,0xc00\nCMOVZ R9D,R13D\nNOT EDX\nMOV R10D,R9D\nNOT R10D\nMOVZX R12D,SIL\nMOV R14D,0x92\nMOV R15D,0x49\nNOP dword ptr [RAX + RAX*0x1]\nMOVSX EBP,AL\nMOV EBX,dword ptr [RCX + 0x4]\nMOV ESI,dword ptr [RCX + 0x8]\nMOV R8D,dword ptr [RCX + 0xc]\nCMP EBP,0x2\nJZ 0x0040b0f0\nCMP EBP,0x3\nJNZ 0x0040b100\nAND ESI,EDI\nMOV EBP,ESI\nAND EBP,0x124\nMOV EAX,0x124\nCMOVNZ EBP,EAX\nMOV R11D,ESI\nAND R11D,0x92\nCMOVNZ R11D,R14D\nOR R11D,ESI\nAND ESI,0x49\nCMOVNZ ESI,R15D\nOR ESI,EBP\nOR ESI,R11D\nJMP 0x0040b100\nMOV EBP,EDI\nAND EBP,0x49\nMOV EAX,ESI\nOR EAX,0x49\nOR EBP,R12D\nCMOVNZ ESI,EAX\nTEST EBX,EBX\nMOV EAX,EDX\nCMOVNZ EAX,EBX\nMOV EBP,R8D\nOR EBP,R10D\nAND EBP,ESI\nAND EBP,EAX\nMOVSX ESI,byte ptr [RCX]\nCMP ESI,0x2b\nJZ 0x0040b160\nCMP ESI,0x2d\nJZ 0x0040b150\nCMP ESI,0x3d\nJNZ 0x0040b165\nNOT R8D\nAND R8D,R9D\nTEST EBX,EBX\nMOV EAX,EBX\nNOT EAX\nCMOVZ EAX,EBX\nOR EAX,R8D\nMOV ESI,EAX\nNOT ESI\nAND ESI,0xfff\nOR R13D,ESI\nAND EAX,EDI\nOR EBP,EAX\nMOV EDI,EBP\nJMP 0x0040b165\nOR R13D,EBP\nNOT EBP\nAND EDI,EBP\nJMP 0x0040b165\nOR R13D,EBP\nOR EDI,EBP\nMOVZX EAX,byte ptr [RCX + 0x11]\nADD RCX,0x10\nTEST AL,AL\nJNZ 0x0040b0a0\nMOV RAX,qword ptr [RSP + -0x8]\nTEST RAX,RAX\nJZ 0x0040b182\nMOV dword ptr [RAX],R13D\nMOV EAX,EDI\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1362
S'55\n41 57\n41 56\n41 55\n41 54\n53\n4c 89 44 24 f8\n81 e7 ff 0f 00 00\n8a 41 01\n45 31 ed\n84 c0\n0f 84 02 01 00 00\n40 84 f6\n41 b9 00 0c 00 00\n45 0f 44 cd\nf7 d2\n45 89 ca\n41 f7 d2\n44 0f b6 e6\n41 be 92 00 00 00\n41 bf 49 00 00 00\n0f 1f 84 00 00 00 00 00\n0f be e8\n8b 59 04\n8b 71 08\n44 8b 41 0c\n83 fd 02\n74 3e\n83 fd 03\n75 49\n21 fe\n89 f5\n81 e5 24 01 00 00\nb8 24 01 00 00\n0f 45 e8\n41 89 f3\n41 81 e3 92 00 00 00\n45 0f 45 de\n41 09 f3\n83 e6 49\n41 0f 45 f7\n09 ee\n44 09 de\neb 18\n89 fd\n83 e5 49\n89 f0\n83 c8 49\n44 09 e5\n0f 45 f0\n85 db\n89 d0\n0f 45 c3\n44 89 c5\n44 09 d5\n21 f5\n21 c5\n0f be 31\n83 fe 2b\n74 47\n83 fe 2d\n74 32\n83 fe 3d\n75 42\n41 f7 d0\n45 21 c8\n85 db\n89 d8\nf7 d0\n0f 44 c3\n44 09 c0\n89 c6\nf7 d6\n81 e6 ff 0f 00 00\n41 09 f5\n21 f8\n09 c5\n89 ef\neb 1b\n41 09 ed\nf7 d5\n21 ef\neb 0c\n41 09 ed\n09 ef\n0f b6 41 11\n48 83 c1 10\n84 c0\n0f 85 2b ff ff ff\n48 8b 44 24 f8\n48 85 c0\n74 03\n44 89 28\n89 f8\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1363
S'.text:000000000040b050\n.text:000000000040b051\n.text:000000000040b053\n.text:000000000040b055\n.text:000000000040b057\n.text:000000000040b059\n.text:000000000040b05a\n.text:000000000040b05f\n.text:000000000040b065\n.text:000000000040b068\n.text:000000000040b06b\n.text:000000000040b06d\n.text:000000000040b073\n.text:000000000040b076\n.text:000000000040b07c\n.text:000000000040b080\n.text:000000000040b082\n.text:000000000040b085\n.text:000000000040b088\n.text:000000000040b08c\n.text:000000000040b092\n.text:000000000040b098\n.text:000000000040b0a0\n.text:000000000040b0a3\n.text:000000000040b0a6\n.text:000000000040b0a9\n.text:000000000040b0ad\n.text:000000000040b0b0\n.text:000000000040b0b2\n.text:000000000040b0b5\n.text:000000000040b0b7\n.text:000000000040b0b9\n.text:000000000040b0bb\n.text:000000000040b0c1\n.text:000000000040b0c6\n.text:000000000040b0c9\n.text:000000000040b0cc\n.text:000000000040b0d3\n.text:000000000040b0d7\n.text:000000000040b0da\n.text:000000000040b0dd\n.text:000000000040b0e1\n.text:000000000040b0e3\n.text:000000000040b0e6\n.text:000000000040b0f0\n.text:000000000040b0f2\n.text:000000000040b0f5\n.text:000000000040b0f7\n.text:000000000040b0fa\n.text:000000000040b0fd\n.text:000000000040b100\n.text:000000000040b102\n.text:000000000040b104\n.text:000000000040b107\n.text:000000000040b10a\n.text:000000000040b10d\n.text:000000000040b10f\n.text:000000000040b111\n.text:000000000040b114\n.text:000000000040b117\n.text:000000000040b119\n.text:000000000040b11c\n.text:000000000040b11e\n.text:000000000040b121\n.text:000000000040b123\n.text:000000000040b126\n.text:000000000040b129\n.text:000000000040b12b\n.text:000000000040b12d\n.text:000000000040b12f\n.text:000000000040b132\n.text:000000000040b135\n.text:000000000040b137\n.text:000000000040b139\n.text:000000000040b13f\n.text:000000000040b142\n.text:000000000040b144\n.text:000000000040b146\n.text:000000000040b148\n.text:000000000040b150\n.text:000000000040b153\n.text:000000000040b155\n.text:000000000040b157\n.text:000000000040b160\n.text:000000000040b163\n.text:000000000040b165\n.text:000000000040b169\n.text:000000000040b16d\n.text:000000000040b16f\n.text:000000000040b175\n.text:000000000040b17a\n.text:000000000040b17d\n.text:000000000040b17f\n.text:000000000040b182\n.text:000000000040b184\n.text:000000000040b185\n.text:000000000040b187\n.text:000000000040b189\n.text:000000000040b18b\n.text:000000000040b18d\n.text:000000000040b18e\n'
p1364
tp1365
sS'chmod'
p1366
(S'\n__stdcall chmod(char * __file, __mode_t __mode)\n'
p1367
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint chmod(char *__file,__mode_t __mode)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_chmod_00618318)();\u000a  return iVar1;\u000a}\u000a\u000a
p1368
S'JMP qword ptr [0x00618318]\n'
p1369
S'ff 25 b2 5a 21 00\n'
p1370
S'.plt:0000000000402860\n'
p1371
tp1372
sS'xstrtoul'
p1373
(S'\n__stdcall xstrtoul(char * s, char * * ptr, ulong * val, char * valid_suffixes)\n'
p1374
V\u000astrtol_error xstrtoul(char *s,char **ptr,ulong *val,char *valid_suffixes)\u000a\u000a{\u000a  byte bVar1;\u000a  char cVar2;\u000a  strtol_error sVar3;\u000a  int *piVar4;\u000a  ushort **ppuVar5;\u000a  char *pcVar6;\u000a  char *pcVar7;\u000a  byte *pbVar8;\u000a  strtol_error sVar9;\u000a  strtol_error sVar10;\u000a  long lVar11;\u000a  char *__s;\u000a  char **__endptr;\u000a  ulong local_48;\u000a  ulong *local_40;\u000a  char *local_38;\u000a  \u000a  if (0x24 < (uint)val) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0 <= strtol_base && strtol_base <= 36","./lib/xstrtol.c",0x60,\u000a                  "strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)"\u000a                 );\u000a  }\u000a  local_40 = (ulong *)valid_suffixes;\u000a  piVar4 = __errno_location();\u000a  *piVar4 = 0;\u000a  ppuVar5 = __ctype_b_loc();\u000a  pbVar8 = (byte *)s;\u000a  do {\u000a    bVar1 = *pbVar8;\u000a    pbVar8 = pbVar8 + 1;\u000a  } while ((*(byte *)((long)*ppuVar5 + (ulong)bVar1 * 2 + 1) & 0x20) != 0);\u000a  __endptr = &local_38;\u000a  if (ptr != (char **)0x0) {\u000a    __endptr = ptr;\u000a  }\u000a  if (bVar1 == 0x2d) {\u000a    return LONGINT_INVALID;\u000a  }\u000a  local_48 = strtoul(s,__endptr,(uint)val);\u000a  if (*__endptr == s) {\u000a    if (__s == (char *)0x0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    cVar2 = **__endptr;\u000a    if (cVar2 == 0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    pcVar6 = strchr(__s,(int)cVar2);\u000a    if (pcVar6 == (char *)0x0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    local_48 = 1;\u000a    sVar9 = LONGINT_OK;\u000a  }\u000a  else {\u000a    if (*piVar4 == 0) {\u000a      sVar9 = LONGINT_OK;\u000a    }\u000a    else {\u000a      if (*piVar4 != 0x22) {\u000a        return LONGINT_INVALID;\u000a      }\u000a      sVar9 = LONGINT_OVERFLOW;\u000a    }\u000a    sVar10 = sVar9;\u000a    if (__s == (char *)0x0) goto LAB_0040eda6;\u000a  }\u000a  pcVar6 = *__endptr;\u000a  sVar10 = sVar9;\u000a  if (*pcVar6 == 0) goto LAB_0040eda6;\u000a  pcVar7 = strchr(__s,(int)*pcVar6);\u000a  if (pcVar7 == (char *)0x0) goto switchD_0040ecd5_caseD_43;\u000a  pcVar7 = strchr(__s,0x30);\u000a  if (pcVar7 == (char *)0x0) {\u000aLAB_0040ecb3:\u000a    lVar11 = 1;\u000a  }\u000a  else {\u000a    cVar2 = pcVar6[1];\u000a    if ((cVar2 == 'B') || (cVar2 == 'D')) {\u000a      lVar11 = 2;\u000a    }\u000a    else {\u000a      if (cVar2 != 'i') goto LAB_0040ecb3;\u000a      lVar11 = (ulong)(pcVar6[2] == 'B') * 2 + 1;\u000a    }\u000a  }\u000a  sVar3 = LONGINT_OK;\u000a  switch(**__endptr) {\u000a  case 'B':\u000a    goto LAB_0040ed87;\u000a  default:\u000aswitchD_0040ecd5_caseD_43:\u000a    *local_40 = local_48;\u000a    return sVar9 | LONGINT_INVALID_SUFFIX_CHAR;\u000a  case 'E':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'G':\u000a  case 'g':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'K':\u000a  case 'k':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'M':\u000a  case 'm':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'P':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'T':\u000a  case 't':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'Y':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'Z':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'b':\u000a    goto LAB_0040ed87;\u000a  case 'c':\u000a    break;\u000a  case 'w':\u000aLAB_0040ed87:\u000a    sVar3 = bkm_scale(&local_48);\u000a  }\u000a  pcVar6 = *__endptr;\u000a  *__endptr = pcVar6 + lVar11;\u000a  sVar10 = sVar3 | sVar9 | LONGINT_INVALID_SUFFIX_CHAR;\u000a  if (pcVar6[lVar11] == 0) {\u000a    sVar10 = sVar3 | sVar9;\u000a  }\u000aLAB_0040eda6:\u000a  *local_40 = local_48;\u000a  return sVar10;\u000a}\u000a\u000a
p1375
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R12,R8\nMOV R14D,EDX\nMOV RBX,RSI\nMOV RBP,RDI\nCMP R14D,0x25\nJNC 0x0040edc3\nMOV qword ptr [RSP + 0x8],RCX\nCALL 0x004022e0\nMOV R15,RAX\nMOV dword ptr [R15],0x0\nCALL 0x004029e0\nMOV RCX,qword ptr [RAX]\nMOV RDX,RBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EAX,byte ptr [RDX]\nINC RDX\nTEST byte ptr [RCX + RAX*0x2 + 0x1],0x20\nJNZ 0x0040ebc0\nTEST RBX,RBX\nLEA R13,[RSP + 0x10]\nCMOVNZ R13,RBX\nMOV EBX,0x4\nCMP AL,0x2d\nJZ 0x0040edb2\nMOV RDI,RBP\nMOV RSI,R13\nMOV EDX,R14D\nCALL 0x00402920\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [R13]\nCMP RAX,RBP\nJZ 0x0040ec20\nMOV EAX,dword ptr [R15]\nTEST EAX,EAX\nJZ 0x0040ec51\nCMP EAX,0x22\nJNZ 0x0040edb2\nMOV EBX,0x1\nTEST R12,R12\nJNZ 0x0040ec5c\nJMP 0x0040eda6\nTEST R12,R12\nJZ 0x0040edb2\nMOVSX ESI,byte ptr [RAX]\nTEST ESI,ESI\nJZ 0x0040edb2\nMOV RDI,R12\nCALL 0x004024b0\nTEST RAX,RAX\nJZ 0x0040edb2\nMOV qword ptr [RSP],0x1\nXOR EBX,EBX\nJMP 0x0040ec5c\nXOR EBX,EBX\nTEST R12,R12\nJZ 0x0040eda6\nMOV RBP,qword ptr [R13]\nMOVSX ESI,byte ptr [RBP]\nTEST ESI,ESI\nJZ 0x0040eda6\nMOV RDI,R12\nCALL 0x004024b0\nTEST RAX,RAX\nJZ 0x0040ecee\nMOV ESI,0x30\nMOV RDI,R12\nCALL 0x004024b0\nMOV ESI,0x400\nTEST RAX,RAX\nJZ 0x0040ecb3\nMOVSX EAX,byte ptr [RBP + 0x1]\nCMP EAX,0x42\nJZ 0x0040ecba\nCMP EAX,0x44\nJZ 0x0040ecba\nCMP EAX,0x69\nJNZ 0x0040ecb3\nXOR EAX,EAX\nCMP byte ptr [RBP + 0x2],0x42\nSETZ AL\nLEA RBP,[RAX + RAX*0x1 + 0x1]\nJMP 0x0040ecc4\nMOV EBP,0x1\nJMP 0x0040ecc4\nMOV ESI,0x3e8\nMOV EBP,0x2\nMOV RAX,qword ptr [R13]\nMOVSX ECX,byte ptr [RAX]\nADD ECX,-0x42\nCMP ECX,0x35\nJA 0x0040ecee\nXOR EAX,EAX\nJMP qword ptr [0x413ca0 + RCX*0x8]\nMOV RDI,RSP\nMOV EDX,0x3\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RAX,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV qword ptr [RCX],RAX\nOR EBX,0x2\nJMP 0x0040edb2\nMOV RDI,RSP\nMOV EDX,0x1\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV EDX,0x2\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV EDX,0x4\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV ESI,0x400\nJMP 0x0040ed87\nMOV RDI,RSP\nMOV EDX,0x6\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV EDX,0x5\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV EDX,0x8\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV EDX,0x7\nCALL 0x0040ee10\nJMP 0x0040ed8c\nMOV RDI,RSP\nMOV ESI,0x200\nJMP 0x0040ed87\nMOV RDI,RSP\nMOV ESI,0x2\nCALL 0x0040ede0\nOR EAX,EBX\nMOV RCX,qword ptr [R13]\nLEA RDX,[RCX + RBP*0x1]\nMOV qword ptr [R13],RDX\nMOV EBX,EAX\nOR EBX,0x2\nCMP byte ptr [RCX + RBP*0x1],0x0\nCMOVZ EBX,EAX\nMOV RAX,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV qword ptr [RCX],RAX\nMOV EAX,EBX\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x413e50\nMOV ESI,0x413e76\nMOV EDX,0x60\nMOV ECX,0x413e86\nCALL 0x00402520\n'
p1376
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n4d 89 c4\n41 89 d6\n48 89 f3\n48 89 fd\n41 83 fe 25\n0f 83 2f 02 00 00\n48 89 4c 24 08\ne8 42 37 ff ff\n49 89 c7\n41 c7 07 00 00 00 00\ne8 33 3e ff ff\n48 8b 08\n48 89 ea\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 02\n48 ff c2\nf6 44 41 01 20\n75 f3\n48 85 db\n4c 8d 6c 24 10\n4c 0f 45 eb\nbb 04 00 00 00\n3c 2d\n0f 84 cc 01 00 00\n48 89 ef\n4c 89 ee\n44 89 f2\ne8 2c 3d ff ff\n48 89 04 24\n49 8b 45 00\n48 39 e8\n74 1f\n41 8b 07\n85 c0\n74 49\n83 f8 22\n0f 85 a1 01 00 00\nbb 01 00 00 00\n4d 85 e4\n75 41\ne9 86 01 00 00\n4d 85 e4\n0f 84 89 01 00 00\n0f be 30\n85 f6\n0f 84 7e 01 00 00\n4c 89 e7\ne8 74 38 ff ff\n48 85 c0\n0f 84 6d 01 00 00\n48 c7 04 24 01 00 00 00\n31 db\neb 0b\n31 db\n4d 85 e4\n0f 84 4a 01 00 00\n49 8b 6d 00\n0f be 75 00\n85 f6\n0f 84 3a 01 00 00\n4c 89 e7\ne8 3c 38 ff ff\n48 85 c0\n74 75\nbe 30 00 00 00\n4c 89 e7\ne8 2a 38 ff ff\nbe 00 04 00 00\n48 85 c0\n74 23\n0f be 45 01\n83 f8 42\n74 21\n83 f8 44\n74 1c\n83 f8 69\n75 10\n31 c0\n80 7d 02 42\n0f 94 c0\n48 8d 6c 00 01\neb 11\nbd 01 00 00 00\neb 0a\nbe e8 03 00 00\nbd 02 00 00 00\n49 8b 45 00\n0f be 08\n83 c1 be\n83 f9 35\n77 1b\n31 c0\nff 24 cd a0 3c 41 00\n48 89 e7\nba 03 00 00 00\ne8 27 01 00 00\ne9 9e 00 00 00\n48 8b 04 24\n48 8b 4c 24 08\n48 89 01\n83 cb 02\ne9 b0 00 00 00\n48 89 e7\nba 01 00 00 00\ne8 01 01 00 00\neb 7b\n48 89 e7\nba 02 00 00 00\ne8 f2 00 00 00\neb 6c\n48 89 e7\nba 04 00 00 00\ne8 e3 00 00 00\neb 5d\n48 89 e7\nbe 00 04 00 00\neb 4e\n48 89 e7\nba 06 00 00 00\ne8 ca 00 00 00\neb 44\n48 89 e7\nba 05 00 00 00\ne8 bb 00 00 00\neb 35\n48 89 e7\nba 08 00 00 00\ne8 ac 00 00 00\neb 26\n48 89 e7\nba 07 00 00 00\ne8 9d 00 00 00\neb 17\n48 89 e7\nbe 00 02 00 00\neb 08\n48 89 e7\nbe 02 00 00 00\ne8 54 00 00 00\n09 d8\n49 8b 4d 00\n48 8d 14 29\n49 89 55 00\n89 c3\n83 cb 02\n80 3c 29 00\n0f 44 d8\n48 8b 04 24\n48 8b 4c 24 08\n48 89 01\n89 d8\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf 50 3e 41 00\nbe 76 3e 41 00\nba 60 00 00 00\nb9 86 3e 41 00\ne8 44 37 ff ff\n'
p1377
S'.text:000000000040eb70\n.text:000000000040eb71\n.text:000000000040eb73\n.text:000000000040eb75\n.text:000000000040eb77\n.text:000000000040eb79\n.text:000000000040eb7a\n.text:000000000040eb7e\n.text:000000000040eb81\n.text:000000000040eb84\n.text:000000000040eb87\n.text:000000000040eb8a\n.text:000000000040eb8e\n.text:000000000040eb94\n.text:000000000040eb99\n.text:000000000040eb9e\n.text:000000000040eba1\n.text:000000000040eba8\n.text:000000000040ebad\n.text:000000000040ebb0\n.text:000000000040ebb3\n.text:000000000040ebc0\n.text:000000000040ebc3\n.text:000000000040ebc6\n.text:000000000040ebcb\n.text:000000000040ebcd\n.text:000000000040ebd0\n.text:000000000040ebd5\n.text:000000000040ebd9\n.text:000000000040ebde\n.text:000000000040ebe0\n.text:000000000040ebe6\n.text:000000000040ebe9\n.text:000000000040ebec\n.text:000000000040ebef\n.text:000000000040ebf4\n.text:000000000040ebf8\n.text:000000000040ebfc\n.text:000000000040ebff\n.text:000000000040ec01\n.text:000000000040ec04\n.text:000000000040ec06\n.text:000000000040ec08\n.text:000000000040ec0b\n.text:000000000040ec11\n.text:000000000040ec16\n.text:000000000040ec19\n.text:000000000040ec1b\n.text:000000000040ec20\n.text:000000000040ec23\n.text:000000000040ec29\n.text:000000000040ec2c\n.text:000000000040ec2e\n.text:000000000040ec34\n.text:000000000040ec37\n.text:000000000040ec3c\n.text:000000000040ec3f\n.text:000000000040ec45\n.text:000000000040ec4d\n.text:000000000040ec4f\n.text:000000000040ec51\n.text:000000000040ec53\n.text:000000000040ec56\n.text:000000000040ec5c\n.text:000000000040ec60\n.text:000000000040ec64\n.text:000000000040ec66\n.text:000000000040ec6c\n.text:000000000040ec6f\n.text:000000000040ec74\n.text:000000000040ec77\n.text:000000000040ec79\n.text:000000000040ec7e\n.text:000000000040ec81\n.text:000000000040ec86\n.text:000000000040ec8b\n.text:000000000040ec8e\n.text:000000000040ec90\n.text:000000000040ec94\n.text:000000000040ec97\n.text:000000000040ec99\n.text:000000000040ec9c\n.text:000000000040ec9e\n.text:000000000040eca1\n.text:000000000040eca3\n.text:000000000040eca5\n.text:000000000040eca9\n.text:000000000040ecac\n.text:000000000040ecb1\n.text:000000000040ecb3\n.text:000000000040ecb8\n.text:000000000040ecba\n.text:000000000040ecbf\n.text:000000000040ecc4\n.text:000000000040ecc8\n.text:000000000040eccb\n.text:000000000040ecce\n.text:000000000040ecd1\n.text:000000000040ecd3\n.text:000000000040ecd5\n.text:000000000040ecdc\n.text:000000000040ecdf\n.text:000000000040ece4\n.text:000000000040ece9\n.text:000000000040ecee\n.text:000000000040ecf2\n.text:000000000040ecf7\n.text:000000000040ecfa\n.text:000000000040ecfd\n.text:000000000040ed02\n.text:000000000040ed05\n.text:000000000040ed0a\n.text:000000000040ed0f\n.text:000000000040ed11\n.text:000000000040ed14\n.text:000000000040ed19\n.text:000000000040ed1e\n.text:000000000040ed20\n.text:000000000040ed23\n.text:000000000040ed28\n.text:000000000040ed2d\n.text:000000000040ed2f\n.text:000000000040ed32\n.text:000000000040ed37\n.text:000000000040ed39\n.text:000000000040ed3c\n.text:000000000040ed41\n.text:000000000040ed46\n.text:000000000040ed48\n.text:000000000040ed4b\n.text:000000000040ed50\n.text:000000000040ed55\n.text:000000000040ed57\n.text:000000000040ed5a\n.text:000000000040ed5f\n.text:000000000040ed64\n.text:000000000040ed66\n.text:000000000040ed69\n.text:000000000040ed6e\n.text:000000000040ed73\n.text:000000000040ed75\n.text:000000000040ed78\n.text:000000000040ed7d\n.text:000000000040ed7f\n.text:000000000040ed82\n.text:000000000040ed87\n.text:000000000040ed8c\n.text:000000000040ed8e\n.text:000000000040ed92\n.text:000000000040ed96\n.text:000000000040ed9a\n.text:000000000040ed9c\n.text:000000000040ed9f\n.text:000000000040eda3\n.text:000000000040eda6\n.text:000000000040edaa\n.text:000000000040edaf\n.text:000000000040edb2\n.text:000000000040edb4\n.text:000000000040edb8\n.text:000000000040edb9\n.text:000000000040edbb\n.text:000000000040edbd\n.text:000000000040edbf\n.text:000000000040edc1\n.text:000000000040edc2\n.text:000000000040edc3\n.text:000000000040edc8\n.text:000000000040edcd\n.text:000000000040edd2\n.text:000000000040edd7\n'
p1378
tp1379
sS'argmatch'
p1380
(S'\n__stdcall argmatch(char * arg, char * * arglist, char * vallist, size_t valsize)\n'
p1381
V\u000aptrdiff_t argmatch(char *arg,char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  bool bVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  size_t __n;\u000a  size_t sVar4;\u000a  long lVar5;\u000a  ptrdiff_t pVar6;\u000a  char *__s2;\u000a  char *__s1;\u000a  long local_50;\u000a  \u000a  __n = strlen(arg);\u000a  __s1 = *arglist;\u000a  if (__s1 == (char *)0x0) {\u000a    local_50 = -1;\u000a    bVar1 = false;\u000a  }\u000a  else {\u000a    local_50 = -1;\u000a    bVar1 = false;\u000a    lVar5 = 0;\u000a    __s2 = vallist;\u000a    do {\u000a      iVar3 = strncmp(__s1,arg,__n);\u000a      lVar2 = local_50;\u000a      if (iVar3 == 0) {\u000a        sVar4 = strlen(__s1);\u000a        if (sVar4 == __n) {\u000a          return lVar5;\u000a        }\u000a        lVar2 = lVar5;\u000a        if ((local_50 != -1) &&\u000a           ((vallist == (char *)0x0 ||\u000a            (iVar3 = memcmp(vallist + local_50 * valsize,__s2,valsize), lVar2 = local_50, iVar3 != 0\u000a            )))) {\u000a          bVar1 = true;\u000a          lVar2 = local_50;\u000a        }\u000a      }\u000a      local_50 = lVar2;\u000a      __s1 = arglist[lVar5 + 1];\u000a      lVar5 = lVar5 + 1;\u000a      __s2 = __s2 + valsize;\u000a    } while (__s1 != (char *)0x0);\u000a  }\u000a  pVar6 = -2;\u000a  if (!bVar1) {\u000a    pVar6 = local_50;\u000a  }\u000a  return pVar6;\u000a}\u000a\u000a
p1382
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RCX\nMOV R14,RDX\nMOV RBP,RSI\nMOV R12,RDI\nCALL 0x00402440\nMOV RBX,RAX\nMOV qword ptr [RSP + 0x20],RBP\nMOV R15,qword ptr [RBP]\nTEST R15,R15\nJZ 0x0040f677\nMOV qword ptr [RSP + 0x8],-0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],R14\nXOR EBP,EBP\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,R15\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x00402300\nTEST EAX,EAX\nJNZ 0x0040f660\nMOV RDI,R15\nCALL 0x00402440\nCMP RAX,RBX\nJZ 0x0040f699\nCMP qword ptr [RSP + 0x8],-0x1\nJZ 0x0040f655\nMOV RAX,qword ptr [RSP + 0x18]\nTEST RAX,RAX\nJZ 0x0040f64c\nMOV RDI,qword ptr [RSP + 0x8]\nIMUL RDI,R13\nADD RDI,RAX\nMOV RSI,R14\nMOV RDX,R13\nCALL 0x004025f0\nTEST EAX,EAX\nJZ 0x0040f660\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x0040f660\nMOV qword ptr [RSP + 0x8],RBP\nNOP word ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [RSP + 0x20]\nMOV R15,qword ptr [RAX + RBP*0x8 + 0x8]\nINC RBP\nADD R14,R13\nTEST R15,R15\nJNZ 0x0040f600\nJMP 0x0040f687\nMOV qword ptr [RSP + 0x8],-0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nTEST byte ptr [RSP + 0x10],0x1\nMOV RBP,-0x2\nCMOVZ RBP,qword ptr [RSP + 0x8]\nMOV RAX,RBP\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1383
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 cd\n49 89 d6\n48 89 f5\n49 89 fc\ne8 71 2e ff ff\n48 89 c3\n48 89 6c 24 20\n4c 8b 7d 00\n4d 85 ff\n0f 84 93 00 00 00\n48 c7 44 24 08 ff ff ff ff\n31 c0\n48 89 44 24 10\n4c 89 74 24 18\n31 ed\n0f 1f 44 00 00\n4c 89 ff\n4c 89 e6\n48 89 da\ne8 f2 2c ff ff\n85 c0\n75 4e\n4c 89 ff\ne8 26 2e ff ff\n48 39 d8\n74 7a\n48 83 7c 24 08 ff\n74 2e\n48 8b 44 24 18\n48 85 c0\n74 1b\n48 8b 7c 24 08\n49 0f af fd\n48 01 c7\n4c 89 f6\n4c 89 ea\ne8 a8 2f ff ff\n85 c0\n74 14\nb0 01\n48 89 44 24 10\neb 0b\n48 89 6c 24 08\n66 0f 1f 44 00 00\n48 8b 44 24 20\n4c 8b 7c e8 08\n48 ff c5\n4d 01 ee\n4d 85 ff\n75 8b\neb 10\n48 c7 44 24 08 ff ff ff ff\n31 c0\n48 89 44 24 10\nf6 44 24 10 01\n48 c7 c5 fe ff ff ff\n48 0f 44 6c 24 08\n48 89 e8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1384
S'.text:000000000040f5b0\n.text:000000000040f5b1\n.text:000000000040f5b3\n.text:000000000040f5b5\n.text:000000000040f5b7\n.text:000000000040f5b9\n.text:000000000040f5ba\n.text:000000000040f5be\n.text:000000000040f5c1\n.text:000000000040f5c4\n.text:000000000040f5c7\n.text:000000000040f5ca\n.text:000000000040f5cf\n.text:000000000040f5d2\n.text:000000000040f5d7\n.text:000000000040f5db\n.text:000000000040f5de\n.text:000000000040f5e4\n.text:000000000040f5ed\n.text:000000000040f5ef\n.text:000000000040f5f4\n.text:000000000040f5f9\n.text:000000000040f5fb\n.text:000000000040f600\n.text:000000000040f603\n.text:000000000040f606\n.text:000000000040f609\n.text:000000000040f60e\n.text:000000000040f610\n.text:000000000040f612\n.text:000000000040f615\n.text:000000000040f61a\n.text:000000000040f61d\n.text:000000000040f61f\n.text:000000000040f625\n.text:000000000040f627\n.text:000000000040f62c\n.text:000000000040f62f\n.text:000000000040f631\n.text:000000000040f636\n.text:000000000040f63a\n.text:000000000040f63d\n.text:000000000040f640\n.text:000000000040f643\n.text:000000000040f648\n.text:000000000040f64a\n.text:000000000040f64c\n.text:000000000040f64e\n.text:000000000040f653\n.text:000000000040f655\n.text:000000000040f65a\n.text:000000000040f660\n.text:000000000040f665\n.text:000000000040f66a\n.text:000000000040f66d\n.text:000000000040f670\n.text:000000000040f673\n.text:000000000040f675\n.text:000000000040f677\n.text:000000000040f680\n.text:000000000040f682\n.text:000000000040f687\n.text:000000000040f68c\n.text:000000000040f693\n.text:000000000040f699\n.text:000000000040f69c\n.text:000000000040f6a0\n.text:000000000040f6a1\n.text:000000000040f6a3\n.text:000000000040f6a5\n.text:000000000040f6a7\n.text:000000000040f6a9\n.text:000000000040f6aa\n'
p1385
tp1386
sS'fgetfilecon'
p1387
(S'\n__stdcall fgetfilecon(security_context_t * con)\n'
p1388
V\u000aint fgetfilecon(security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1389
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1390
S'50\ne8 1a 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1391
S'.text:000000000040d5c0\n.text:000000000040d5c1\n.text:000000000040d5c6\n.text:000000000040d5cc\n.text:000000000040d5d1\n.text:000000000040d5d2\n'
p1392
tp1393
sS'getfilecon'
p1394
(S'\n__stdcall getfilecon(char * file, security_context_t * con)\n'
p1395
V\u000aint getfilecon(char *file,security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1396
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1397
S'50\ne8 5a 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1398
S'.text:000000000040d580\n.text:000000000040d581\n.text:000000000040d586\n.text:000000000040d58c\n.text:000000000040d591\n.text:000000000040d592\n'
p1399
tp1400
sS'openat_save_fail'
p1401
(S'\n__stdcall openat_save_fail()\n'
p1402
V\u000avoid openat_save_fail(uint uParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"unable to record current working directory",5);\u000a  error((ulong)(uint)iVar1,(ulong)uParm1,uVar2,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1403
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nMOV EBP,dword ptr [0x00618420]\nXOR EDI,EDI\nMOV ESI,0x414385\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EAX,EAX\nMOV EDI,EBP\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00402870\nCALL 0x004022d0\n'
p1404
S'55\n53\n50\n89 fb\n8b 2d 55 83 20 00\n31 ff\nbe 85 43 41 00\nba 05 00 00 00\ne8 44 23 ff ff\n48 89 c1\n31 c0\n89 ef\n89 de\n48 89 ca\ne8 83 27 ff ff\ne8 de 21 ff ff\n'
p1405
S'.text:00000000004100c0\n.text:00000000004100c1\n.text:00000000004100c2\n.text:00000000004100c3\n.text:00000000004100c5\n.text:00000000004100cb\n.text:00000000004100cd\n.text:00000000004100d2\n.text:00000000004100d7\n.text:00000000004100dc\n.text:00000000004100df\n.text:00000000004100e1\n.text:00000000004100e3\n.text:00000000004100e5\n.text:00000000004100e8\n.text:00000000004100ed\n'
p1406
tp1407
sS'getfscreatecon'
p1408
(S'\n__stdcall getfscreatecon(security_context_t * con)\n'
p1409
V\u000aint getfscreatecon(security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1410
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1411
S'50\ne8 ba 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1412
S'.text:000000000040d520\n.text:000000000040d521\n.text:000000000040d526\n.text:000000000040d52c\n.text:000000000040d531\n.text:000000000040d532\n'
p1413
tp1414
sS'lchown'
p1415
(S'\n__stdcall lchown(char * __file, __uid_t __owner, __gid_t __group)\n'
p1416
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint lchown(char *__file,__uid_t __owner,__gid_t __group)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_lchown_006182c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p1417
S'JMP qword ptr [0x006182c8]\n'
p1418
S'ff 25 02 5b 21 00\n'
p1419
S'.plt:00000000004027c0\n'
p1420
tp1421
sS'rpl_fcntl'
p1422
(S'\n__stdcall rpl_fcntl()\n'
p1423
V\u000a/* WARNING: Removing unreachable block (ram,0x0040efcb) */\u000a/* WARNING: Removing unreachable block (ram,0x0040f034) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff38 : 0x0040efd9 */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint rpl_fcntl(void...)\u000a\u000a{\u000a  int have_dupfd_cloexec;\u000a  int __fd;\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int __cmd;\u000a  uint __fd_00;\u000a  va_list arg;\u000a  ulong local_c8;\u000a  \u000a  if (__cmd == 0x406) {\u000a    if (have_dupfd_cloexec < 0) {\u000a      __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a    }\u000a    else {\u000a      __fd = fcntl(__fd_00,0x406,local_c8 & 0xffffffff);\u000a      have_dupfd_cloexec = 1;\u000a      if ((__fd < 0) && (piVar3 = __errno_location(), *piVar3 == 0x16)) {\u000a        __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a        have_dupfd_cloexec = -1;\u000a        if (__fd < 0) {\u000a          return __fd;\u000a        }\u000a      }\u000a    }\u000a    if (((-1 < __fd) && (have_dupfd_cloexec == -1)) &&\u000a       ((uVar1 = fcntl(__fd,1), (int)uVar1 < 0 ||\u000a        (iVar2 = fcntl(__fd,2,(ulong)(uVar1 | 1),(ulong)(uVar1 | 1)), iVar2 == -1)))) {\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a      __fd = -1;\u000a    }\u000a  }\u000a  else {\u000a    __fd = fcntl(__fd_00,__cmd,local_c8);\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p1424
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14D,EDI\nTEST AL,AL\nJZ 0x0040ef5b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RAX,dword ptr [RSP]\nCMP ESI,0x406\nJNZ 0x0040efb6\nCMP EAX,0x28\nJA 0x0040efcb\nMOV RCX,qword ptr [RSP + 0x10]\nADD RCX,RAX\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x0040efd9\nCMP EAX,0x28\nJA 0x0040f034\nMOV RCX,RAX\nADD RCX,qword ptr [RSP + 0x10]\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x0040f042\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EBX,dword ptr [RCX]\nCMP dword ptr [0x0061aabc],0x0\nJS 0x0040f053\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00402380\nMOV EBP,EAX\nMOV R15D,0x1\nTEST EBP,EBP\nJNS 0x0040f024\nCALL 0x004022e0\nCMP dword ptr [RAX],0x16\nJNZ 0x0040f024\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x0040ef10\nMOV EBP,EAX\nMOV R15D,0xffffffff\nTEST EBP,EBP\nJS 0x0040f0b6\nMOV dword ptr [0x0061aabc],R15D\nTEST EBP,EBP\nJNS 0x0040f067\nJMP 0x0040f0b6\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDX,qword ptr [RCX]\nXOR EAX,EAX\nMOV EDI,R14D\nCALL 0x00402380\nMOV EBP,EAX\nJMP 0x0040f0b6\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x0040ef10\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0040f0b6\nCMP dword ptr [0x0061aabc],-0x1\nJNZ 0x0040f0b6\nMOV ESI,0x1\nXOR EAX,EAX\nMOV EDI,EBP\nCALL 0x00402380\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x0040f09c\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBP\nMOV EDX,ECX\nCALL 0x00402380\nCMP EAX,-0x1\nJNZ 0x0040f0b6\nCALL 0x004022e0\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00402590\nMOV dword ptr [RBX],R14D\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0xd8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1425
S'55\n41 57\n41 56\n53\n48 81 ec d8 00 00 00\n41 89 fe\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 04 24\n81 fe 06 04 00 00\n75 15\n83 f8 28\n77 25\n48 8b 4c 24 10\n48 01 c1\n8d 40 08\n89 04 24\neb 23\n83 f8 28\n77 79\n48 89 c1\n48 03 4c 24 10\n8d 40 08\n89 04 24\neb 77\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n8b 19\n83 3d da ba 20 00 00\n78 6f\n31 c0\n44 89 f7\n89 da\ne8 90 33 ff ff\n89 c5\n41 bf 01 00 00 00\n85 ed\n79 28\ne8 df 32 ff ff\n83 38 16\n75 1e\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 fc fe ff ff\n89 c5\n41 bf ff ff ff ff\n85 ed\n0f 88 92 00 00 00\n44 89 3d 91 ba 20 00\n85 ed\n79 38\ne9 82 00 00 00\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n48 8b 11\n31 c0\n44 89 f7\ne8 31 33 ff ff\n89 c5\neb 63\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 af fe ff ff\n89 c5\n85 ed\n78 4f\n83 3d 4e ba 20 00 ff\n75 46\nbe 01 00 00 00\n31 c0\n89 ef\ne8 02 33 ff ff\n89 c1\n85 c9\n78 18\n83 c9 01\nbe 02 00 00 00\n31 c0\n89 ef\n89 ca\ne8 e9 32 ff ff\n83 f8 ff\n75 1a\ne8 3f 32 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 e2 34 ff ff\n44 89 33\nbd ff ff ff ff\n89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1426
S'.text:000000000040ef10\n.text:000000000040ef11\n.text:000000000040ef13\n.text:000000000040ef15\n.text:000000000040ef16\n.text:000000000040ef1d\n.text:000000000040ef20\n.text:000000000040ef22\n.text:000000000040ef24\n.text:000000000040ef29\n.text:000000000040ef2e\n.text:000000000040ef33\n.text:000000000040ef3b\n.text:000000000040ef43\n.text:000000000040ef4b\n.text:000000000040ef53\n.text:000000000040ef5b\n.text:000000000040ef60\n.text:000000000040ef65\n.text:000000000040ef6a\n.text:000000000040ef6f\n.text:000000000040ef74\n.text:000000000040ef79\n.text:000000000040ef81\n.text:000000000040ef86\n.text:000000000040ef8e\n.text:000000000040ef95\n.text:000000000040ef99\n.text:000000000040ef9f\n.text:000000000040efa1\n.text:000000000040efa4\n.text:000000000040efa6\n.text:000000000040efab\n.text:000000000040efae\n.text:000000000040efb1\n.text:000000000040efb4\n.text:000000000040efb6\n.text:000000000040efb9\n.text:000000000040efbb\n.text:000000000040efbe\n.text:000000000040efc3\n.text:000000000040efc6\n.text:000000000040efc9\n.text:000000000040efcb\n.text:000000000040efd0\n.text:000000000040efd4\n.text:000000000040efd9\n.text:000000000040efdb\n.text:000000000040efe2\n.text:000000000040efe4\n.text:000000000040efe6\n.text:000000000040efe9\n.text:000000000040efeb\n.text:000000000040eff0\n.text:000000000040eff2\n.text:000000000040eff8\n.text:000000000040effa\n.text:000000000040effc\n.text:000000000040f001\n.text:000000000040f004\n.text:000000000040f006\n.text:000000000040f008\n.text:000000000040f00a\n.text:000000000040f00d\n.text:000000000040f00f\n.text:000000000040f014\n.text:000000000040f016\n.text:000000000040f01c\n.text:000000000040f01e\n.text:000000000040f024\n.text:000000000040f02b\n.text:000000000040f02d\n.text:000000000040f02f\n.text:000000000040f034\n.text:000000000040f039\n.text:000000000040f03d\n.text:000000000040f042\n.text:000000000040f045\n.text:000000000040f047\n.text:000000000040f04a\n.text:000000000040f04f\n.text:000000000040f051\n.text:000000000040f053\n.text:000000000040f055\n.text:000000000040f057\n.text:000000000040f05a\n.text:000000000040f05c\n.text:000000000040f061\n.text:000000000040f063\n.text:000000000040f065\n.text:000000000040f067\n.text:000000000040f06e\n.text:000000000040f070\n.text:000000000040f075\n.text:000000000040f077\n.text:000000000040f079\n.text:000000000040f07e\n.text:000000000040f080\n.text:000000000040f082\n.text:000000000040f084\n.text:000000000040f087\n.text:000000000040f08c\n.text:000000000040f08e\n.text:000000000040f090\n.text:000000000040f092\n.text:000000000040f097\n.text:000000000040f09a\n.text:000000000040f09c\n.text:000000000040f0a1\n.text:000000000040f0a4\n.text:000000000040f0a7\n.text:000000000040f0a9\n.text:000000000040f0ae\n.text:000000000040f0b1\n.text:000000000040f0b6\n.text:000000000040f0b8\n.text:000000000040f0bf\n.text:000000000040f0c0\n.text:000000000040f0c2\n.text:000000000040f0c4\n.text:000000000040f0c5\n'
p1427
tp1428
sS'__fpending'
p1429
(S'\n__stdcall __fpending()\n'
p1430
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_00618080)();\u000a  return;\u000a}\u000a\u000a
p1431
S'JMP qword ptr [0x00618080]\n'
p1432
S'ff 25 4a 5d 21 00\n'
p1433
S'.plt:0000000000402330\n'
p1434
tp1435
sS'strchr'
p1436
(S'\n__stdcall strchr(char * __s, int __c)\n'
p1437
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_00618140)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1438
S'JMP qword ptr [0x00618140]\n'
p1439
S'ff 25 8a 5c 21 00\n'
p1440
S'.plt:00000000004024b0\n'
p1441
tp1442
sS'rmdir'
p1443
(S'\n__stdcall rmdir(char * __path)\n'
p1444
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint rmdir(char *__path)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_rmdir_006180f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p1445
S'JMP qword ptr [0x006180f0]\n'
p1446
S'ff 25 da 5c 21 00\n'
p1447
S'.plt:0000000000402410\n'
p1448
tp1449
sS'rpl_fclose'
p1450
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p1451
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_00410549;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_00410549:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p1452
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00402710\nTEST EAX,EAX\nJS 0x00410549\nMOV RDI,RBX\nCALL 0x004027d0\nTEST EAX,EAX\nJZ 0x00410517\nMOV RDI,RBX\nCALL 0x00402710\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x00402500\nCMP RAX,-0x1\nJZ 0x00410549\nMOV RDI,RBX\nCALL 0x0040f0d0\nTEST EAX,EAX\nJZ 0x00410549\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x004023d0\nTEST EBP,EBP\nJZ 0x00410542\nCALL 0x004022e0\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x004023d0\n'
p1453
S'55\n53\n50\n48 89 fb\ne8 25 22 ff ff\n85 c0\n78 5a\n48 89 df\ne8 d9 22 ff ff\n85 c0\n74 1c\n48 89 df\ne8 0d 22 ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 ef 1f ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 b1 eb ff ff\n85 c0\n74 26\ne8 b8 1d ff ff\n8b 28\n48 89 df\ne8 9e 1e ff ff\n85 ed\n74 0c\ne8 a5 1d ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 79 1e ff ff\n'
p1454
S'.text:00000000004104e0\n.text:00000000004104e1\n.text:00000000004104e2\n.text:00000000004104e3\n.text:00000000004104e6\n.text:00000000004104eb\n.text:00000000004104ed\n.text:00000000004104ef\n.text:00000000004104f2\n.text:00000000004104f7\n.text:00000000004104f9\n.text:00000000004104fb\n.text:00000000004104fe\n.text:0000000000410503\n.text:0000000000410505\n.text:000000000041050a\n.text:000000000041050c\n.text:0000000000410511\n.text:0000000000410515\n.text:0000000000410517\n.text:000000000041051a\n.text:000000000041051f\n.text:0000000000410521\n.text:0000000000410523\n.text:0000000000410528\n.text:000000000041052a\n.text:000000000041052d\n.text:0000000000410532\n.text:0000000000410534\n.text:0000000000410536\n.text:000000000041053b\n.text:000000000041053d\n.text:0000000000410542\n.text:0000000000410546\n.text:0000000000410547\n.text:0000000000410548\n.text:0000000000410549\n.text:000000000041054c\n.text:0000000000410550\n.text:0000000000410551\n.text:0000000000410552\n'
p1455
tp1456
sS'xnrealloc'
p1457
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p1458
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1459
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x0040e9e4\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x0040e9f0\nPUSH RAX\nCALL 0x0040eb40\n'
p1460
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p1461
S'.text:000000000040e9d0\n.text:000000000040e9d3\n.text:000000000040e9d6\n.text:000000000040e9d9\n.text:000000000040e9db\n.text:000000000040e9df\n.text:000000000040e9e2\n.text:000000000040e9e4\n.text:000000000040e9e5\n'
p1462
tp1463
sS'mfile_name_concat'
p1464
(S'\n__stdcall mfile_name_concat(char * dir, char * abase, char * * base_in_result)\n'
p1465
V\u000achar * mfile_name_concat(char *dir,char *abase,char **base_in_result)\u000a\u000a{\u000a  char *name;\u000a  size_t sVar1;\u000a  char *__s;\u000a  size_t sVar2;\u000a  undefined *puVar3;\u000a  long lVar4;\u000a  char *pcVar5;\u000a  bool bVar6;\u000a  \u000a  name = last_component(dir);\u000a  sVar1 = base_len(name);\u000a  if (sVar1 == 0) {\u000a    bVar6 = false;\u000a  }\u000a  else {\u000a    bVar6 = name[sVar1 - 1] != '/';\u000a  }\u000a  __s = longest_relative_suffix(abase);\u000a  sVar2 = strlen(__s);\u000a  pcVar5 = (char *)malloc((size_t)(name + (sVar1 - (long)dir) + sVar2 + 1 + (ulong)bVar6));\u000a  if (pcVar5 == (char *)0x0) {\u000a    pcVar5 = (char *)0x0;\u000a  }\u000a  else {\u000a    puVar3 = (undefined *)__mempcpy_chk(pcVar5,dir,name + (sVar1 - (long)dir),0xffffffffffffffff);\u000a    *puVar3 = 0x2f;\u000a    if (base_in_result != (char **)0x0) {\u000a      lVar4 = 0;\u000a      if (*abase == '/') {\u000a        lVar4 = -1;\u000a      }\u000a      *base_in_result = puVar3 + (ulong)bVar6 + lVar4;\u000a    }\u000a    puVar3 = (undefined *)__mempcpy_chk(puVar3 + (ulong)bVar6,__s,sVar2,0xffffffffffffffff);\u000a    *puVar3 = 0;\u000a  }\u000a  return pcVar5;\u000a}\u000a\u000a
p1466
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV qword ptr [RSP + 0x10],RDX\nMOV R14,RSI\nMOV R12,RDI\nCALL 0x004092f0\nMOV RBP,RAX\nMOV RDI,RBP\nCALL 0x00409350\nMOV RBX,RBP\nSUB RBX,R12\nADD RBX,RAX\nTEST RAX,RAX\nJZ 0x004096b1\nCMP byte ptr [RBP + RAX*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x004096b3\nXOR EAX,EAX\nMOVZX R13D,AL\nMOV qword ptr [RSP + 0x8],R14\nMOV RDI,R14\nCALL 0x00409760\nMOV RBP,RAX\nMOV RDI,RBP\nCALL 0x00402440\nMOV R15,RAX\nLEA RAX,[RBX + R13*0x1]\nLEA RDI,[R15 + RAX*0x1 + 0x1]\nCALL 0x00402760\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00409742\nMOV RCX,-0x1\nMOV RDI,R14\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x004022c0\nMOV byte ptr [RAX],0x2f\nADD R13,RAX\nMOV RCX,qword ptr [RSP + 0x10]\nTEST RCX,RCX\nJZ 0x00409728\nXOR EAX,EAX\nMOV RDX,qword ptr [RSP + 0x8]\nCMP byte ptr [RDX],0x2f\nMOV RDX,-0x1\nCMOVZ RAX,RDX\nADD RAX,R13\nMOV qword ptr [RCX],RAX\nMOV RCX,-0x1\nMOV RDI,R13\nMOV RSI,RBP\nMOV RDX,R15\nCALL 0x004022c0\nMOV byte ptr [RAX],0x0\nJMP 0x00409745\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1467
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n48 89 54 24 10\n49 89 f6\n49 89 fc\ne8 62 fc ff ff\n48 89 c5\n48 89 ef\ne8 b7 fc ff ff\n48 89 eb\n4c 29 e3\n48 01 c3\n48 85 c0\n74 0a\n80 7c 05 ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 e8\n4c 89 74 24 08\n4c 89 f7\ne8 9c 00 00 00\n48 89 c5\n48 89 ef\ne8 71 8d ff ff\n49 89 c7\n4a 8d 04 2b\n49 8d 7c 07 01\ne8 80 90 ff ff\n49 89 c6\n4d 85 f6\n74 5a\n48 c7 c1 ff ff ff ff\n4c 89 f7\n4c 89 e6\n48 89 da\ne8 c3 8b ff ff\nc6 00 2f\n49 01 c5\n48 8b 4c 24 10\n48 85 c9\n74 1b\n31 c0\n48 8b 54 24 08\n80 3a 2f\n48 c7 c2 ff ff ff ff\n48 0f 44 c2\n4c 01 e8\n48 89 01\n48 c7 c1 ff ff ff ff\n4c 89 ef\n48 89 ee\n4c 89 fa\ne8 83 8b ff ff\nc6 00 00\neb 03\n45 31 f6\n4c 89 f0\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1468
S'.text:0000000000409670\n.text:0000000000409671\n.text:0000000000409673\n.text:0000000000409675\n.text:0000000000409677\n.text:0000000000409679\n.text:000000000040967a\n.text:000000000040967e\n.text:0000000000409683\n.text:0000000000409686\n.text:0000000000409689\n.text:000000000040968e\n.text:0000000000409691\n.text:0000000000409694\n.text:0000000000409699\n.text:000000000040969c\n.text:000000000040969f\n.text:00000000004096a2\n.text:00000000004096a5\n.text:00000000004096a7\n.text:00000000004096ac\n.text:00000000004096af\n.text:00000000004096b1\n.text:00000000004096b3\n.text:00000000004096b7\n.text:00000000004096bc\n.text:00000000004096bf\n.text:00000000004096c4\n.text:00000000004096c7\n.text:00000000004096ca\n.text:00000000004096cf\n.text:00000000004096d2\n.text:00000000004096d6\n.text:00000000004096db\n.text:00000000004096e0\n.text:00000000004096e3\n.text:00000000004096e6\n.text:00000000004096e8\n.text:00000000004096ef\n.text:00000000004096f2\n.text:00000000004096f5\n.text:00000000004096f8\n.text:00000000004096fd\n.text:0000000000409700\n.text:0000000000409703\n.text:0000000000409708\n.text:000000000040970b\n.text:000000000040970d\n.text:000000000040970f\n.text:0000000000409714\n.text:0000000000409717\n.text:000000000040971e\n.text:0000000000409722\n.text:0000000000409725\n.text:0000000000409728\n.text:000000000040972f\n.text:0000000000409732\n.text:0000000000409735\n.text:0000000000409738\n.text:000000000040973d\n.text:0000000000409740\n.text:0000000000409742\n.text:0000000000409745\n.text:0000000000409748\n.text:000000000040974c\n.text:000000000040974d\n.text:000000000040974f\n.text:0000000000409751\n.text:0000000000409753\n.text:0000000000409755\n.text:0000000000409756\n'
p1469
tp1470
sS'emit_bug_reporting_address'
p1471
(S'\n__stdcall emit_bug_reporting_address()\n'
p1472
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p1473
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x413bdd\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x413bf2\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00402840\nXOR EDI,EDI\nMOV ESI,0x413c08\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x411b1a\nMOV ECX,0x411ec3\nXOR EAX,EAX\nCALL 0x00402840\nXOR EDI,EDI\nMOV ESI,0x413c1c\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00402610\n'
p1474
S'50\n31 ff\nbe dd 3b 41 00\nba 05 00 00 00\ne8 2e 3b ff ff\n48 89 c1\nbf 01 00 00 00\nba f2 3b 41 00\n31 c0\n48 89 ce\ne8 37 3f ff ff\n31 ff\nbe 08 3c 41 00\nba 05 00 00 00\ne8 06 3b ff ff\n48 89 c6\nbf 01 00 00 00\nba 1a 1b 41 00\nb9 c3 1e 41 00\n31 c0\ne8 0d 3f ff ff\n31 ff\nbe 1c 3c 41 00\nba 05 00 00 00\ne8 dc 3a ff ff\n48 8b 35 5d 9b 20 00\n48 89 c7\n58\ne9 bc 3c ff ff\n'
p1475
S'.text:000000000040e8e0\n.text:000000000040e8e1\n.text:000000000040e8e3\n.text:000000000040e8e8\n.text:000000000040e8ed\n.text:000000000040e8f2\n.text:000000000040e8f5\n.text:000000000040e8fa\n.text:000000000040e8ff\n.text:000000000040e901\n.text:000000000040e904\n.text:000000000040e909\n.text:000000000040e90b\n.text:000000000040e910\n.text:000000000040e915\n.text:000000000040e91a\n.text:000000000040e91d\n.text:000000000040e922\n.text:000000000040e927\n.text:000000000040e92c\n.text:000000000040e92e\n.text:000000000040e933\n.text:000000000040e935\n.text:000000000040e93a\n.text:000000000040e93f\n.text:000000000040e944\n.text:000000000040e94b\n.text:000000000040e94e\n.text:000000000040e94f\n'
p1476
tp1477
sS'install_file_in_file_parents'
p1478
(S'\n__stdcall install_file_in_file_parents(char * from, char * to, cp_options * x)\n'
p1479
V\u000a_Bool install_file_in_file_parents(char *from,char *to,cp_options *x)\u000a\u000a{\u000a  _Bool _Var1;\u000a  \u000a  _Var1 = mkancesdirs_safe_wd(from,to,x);\u000a  if (_Var1 != false) {\u000a    _Var1 = install_file_in_file(from,to,x);\u000a    return _Var1;\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1480
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nXOR ECX,ECX\nCALL 0x00403c20\nTEST AL,AL\nJZ 0x004039b9\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x004039d0\nXOR EAX,EAX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1481
S'41 57\n41 56\n53\n49 89 d6\n49 89 f7\n48 89 fb\n31 c9\ne8 7b 02 00 00\n84 c0\n74 10\n48 89 df\n4c 89 fe\n4c 89 f2\n5b\n41 5e\n41 5f\neb 17\n31 c0\n5b\n41 5e\n41 5f\nc3\n'
p1482
S'.text:0000000000403990\n.text:0000000000403992\n.text:0000000000403994\n.text:0000000000403995\n.text:0000000000403998\n.text:000000000040399b\n.text:000000000040399e\n.text:00000000004039a0\n.text:00000000004039a5\n.text:00000000004039a7\n.text:00000000004039a9\n.text:00000000004039ac\n.text:00000000004039af\n.text:00000000004039b2\n.text:00000000004039b3\n.text:00000000004039b5\n.text:00000000004039b7\n.text:00000000004039b9\n.text:00000000004039bb\n.text:00000000004039bc\n.text:00000000004039be\n.text:00000000004039c0\n'
p1483
tp1484
sS'get_stat_atime'
p1485
(S'\n__stdcall get_stat_atime(stat * st)\n'
p1486
V\u000atimespec get_stat_atime(stat *st)\u000a\u000a{\u000a  return st->st_atim;\u000a}\u000a\u000a
p1487
S'MOV RAX,qword ptr [RDI + 0x48]\nMOV RDX,qword ptr [RDI + 0x50]\nRET\n'
p1488
S'48 8b 47 48\n48 8b 57 50\nc3\n'
p1489
S'.text:000000000040d730\n.text:000000000040d734\n.text:000000000040d738\n'
p1490
tp1491
sS'xmalloc'
p1492
(S'\n__stdcall xmalloc(size_t n)\n'
p1493
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1494
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00402760\nTEST RBX,RBX\nJZ 0x0040e9c3\nTEST RAX,RAX\nJZ 0x0040e9c5\nPOP RBX\nRET\nCALL 0x0040eb40\n'
p1495
S'53\n48 89 fb\ne8 a7 3d ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p1496
S'.text:000000000040e9b0\n.text:000000000040e9b1\n.text:000000000040e9b4\n.text:000000000040e9b9\n.text:000000000040e9bc\n.text:000000000040e9be\n.text:000000000040e9c1\n.text:000000000040e9c3\n.text:000000000040e9c4\n.text:000000000040e9c5\n'
p1497
tp1498
sS'quotearg_char_mem'
p1499
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p1500
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1501
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x0061a990]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x0061a980]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0061a970]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0061a960]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x0040b300\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x0040c1f0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1502
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d 78 e4 20 00\n48 89 4c 24 30\n0f 10 05 5c e4 20 00\n0f 29 44 24 20\n0f 10 05 40 e4 20 00\n0f 29 44 24 10\n0f 10 05 24 e4 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p1503
S'.text:000000000040c500\n.text:000000000040c502\n.text:000000000040c504\n.text:000000000040c505\n.text:000000000040c509\n.text:000000000040c50b\n.text:000000000040c50e\n.text:000000000040c511\n.text:000000000040c518\n.text:000000000040c51d\n.text:000000000040c524\n.text:000000000040c529\n.text:000000000040c530\n.text:000000000040c535\n.text:000000000040c53c\n.text:000000000040c540\n.text:000000000040c543\n.text:000000000040c548\n.text:000000000040c54b\n.text:000000000040c54d\n.text:000000000040c552\n.text:000000000040c554\n.text:000000000040c557\n.text:000000000040c55a\n.text:000000000040c55d\n.text:000000000040c562\n.text:000000000040c566\n.text:000000000040c567\n.text:000000000040c569\n.text:000000000040c56b\n'
p1504
tp1505
sS'gettimeofday'
p1506
(S'\n__stdcall gettimeofday(timeval * __tv, __timezone_ptr_t __tz)\n'
p1507
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_gettimeofday_00618170)();\u000a  return iVar1;\u000a}\u000a\u000a
p1508
S'JMP qword ptr [0x00618170]\n'
p1509
S'ff 25 5a 5c 21 00\n'
p1510
S'.plt:0000000000402510\n'
p1511
tp1512
sS'find_non_slash'
p1513
(S'\n__stdcall find_non_slash(char * s)\n'
p1514
V\u000achar * find_non_slash(char *s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strspn(s,"/");\u000a  return s + sVar1;\u000a}\u000a\u000a
p1515
S'PUSH RBX\nMOV RBX,RDI\nMOV ESI,0x4144af\nCALL 0x004025a0\nADD RAX,RBX\nPOP RBX\nRET\n'
p1516
S'53\n48 89 fb\nbe af 44 41 00\ne8 12 21 ff ff\n48 01 d8\n5b\nc3\n'
p1517
S'.text:0000000000410480\n.text:0000000000410481\n.text:0000000000410484\n.text:0000000000410489\n.text:000000000041048e\n.text:0000000000410491\n.text:0000000000410492\n'
p1518
tp1519
sS'quotearg_n_style_colon'
p1520
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p1521
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1522
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x0040c420\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x0040b300\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x0040c1f0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1523
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p1524
S'.text:000000000040c5a0\n.text:000000000040c5a1\n.text:000000000040c5a3\n.text:000000000040c5a4\n.text:000000000040c5a8\n.text:000000000040c5ab\n.text:000000000040c5ad\n.text:000000000040c5b2\n.text:000000000040c5b5\n.text:000000000040c5ba\n.text:000000000040c5bf\n.text:000000000040c5c4\n.text:000000000040c5c7\n.text:000000000040c5cc\n.text:000000000040c5d3\n.text:000000000040c5d5\n.text:000000000040c5d8\n.text:000000000040c5db\n.text:000000000040c5e0\n.text:000000000040c5e4\n.text:000000000040c5e5\n.text:000000000040c5e7\n.text:000000000040c5e8\n'
p1525
tp1526
sS'rotl64'
p1527
(S'\n__stdcall rotl64(uint64_t x)\n'
p1528
V\u000auint64_t rotl64(uint64_t x)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined4 in_ESI;\u000a  \u000a  bVar1 = (byte)in_ESI & 0x3f;\u000a  return x << bVar1 | x >> 0x40 - bVar1;\u000a}\u000a\u000a
p1529
S'MOV ECX,ESI\nROL RDI,CL\nMOV RAX,RDI\nRET\n'
p1530
S'89 f1\n48 d3 c7\n48 89 f8\nc3\n'
p1531
S'.text:000000000040f8f0\n.text:000000000040f8f2\n.text:000000000040f8f5\n.text:000000000040f8f8\n'
p1532
tp1533
sS'record_file'
p1534
(S'\n__stdcall record_file(Hash_table * ht, char * file, stat * stats)\n'
p1535
V\u000avoid record_file(Hash_table *ht,char *file,stat *stats)\u000a\u000a{\u000a  char **entry;\u000a  char *pcVar1;\u000a  char **ppcVar2;\u000a  \u000a  if (ht != (Hash_table *)0x0) {\u000a    entry = (char **)xmalloc(0x18);\u000a    pcVar1 = xstrdup(file);\u000a    *entry = pcVar1;\u000a    entry[1] = (char *)stats->st_ino;\u000a    entry[2] = (char *)stats->st_dev;\u000a    ppcVar2 = (char **)hash_insert(ht,entry);\u000a    if (ppcVar2 == (char **)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die();\u000a    }\u000a    if (ppcVar2 != entry) {\u000a      triple_free(entry);\u000a      return;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1536
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R12,RSI\nMOV R14,RDI\nTEST R14,R14\nJZ 0x004094e5\nMOV EDI,0x18\nCALL 0x0040e9b0\nMOV RBX,RAX\nMOV RDI,R12\nCALL 0x0040eb20\nMOV qword ptr [RBX],RAX\nMOV RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RBX + 0x8],RAX\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RBX + 0x10],RAX\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x0040a540\nTEST RAX,RAX\nJZ 0x004094f1\nCMP RAX,RBX\nJZ 0x004094e5\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x0040a890\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x0040eb40\n'
p1537
S'41 57\n41 56\n41 54\n53\n50\n49 89 d7\n49 89 f4\n49 89 fe\n4d 85 f6\n74 4f\nbf 18 00 00 00\ne8 10 55 00 00\n48 89 c3\n4c 89 e7\ne8 75 56 00 00\n48 89 03\n49 8b 47 08\n48 89 43 08\n49 8b 07\n48 89 43 10\n4c 89 f7\n48 89 de\ne8 78 10 00 00\n48 85 c0\n74 24\n48 39 d8\n74 13\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 ab 13 00 00\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 4a 56 00 00\n'
p1538
S'.text:0000000000409480\n.text:0000000000409482\n.text:0000000000409484\n.text:0000000000409486\n.text:0000000000409487\n.text:0000000000409488\n.text:000000000040948b\n.text:000000000040948e\n.text:0000000000409491\n.text:0000000000409494\n.text:0000000000409496\n.text:000000000040949b\n.text:00000000004094a0\n.text:00000000004094a3\n.text:00000000004094a6\n.text:00000000004094ab\n.text:00000000004094ae\n.text:00000000004094b2\n.text:00000000004094b6\n.text:00000000004094b9\n.text:00000000004094bd\n.text:00000000004094c0\n.text:00000000004094c3\n.text:00000000004094c8\n.text:00000000004094cb\n.text:00000000004094cd\n.text:00000000004094d0\n.text:00000000004094d2\n.text:00000000004094d5\n.text:00000000004094d9\n.text:00000000004094da\n.text:00000000004094dc\n.text:00000000004094de\n.text:00000000004094e0\n.text:00000000004094e5\n.text:00000000004094e9\n.text:00000000004094ea\n.text:00000000004094ec\n.text:00000000004094ee\n.text:00000000004094f0\n.text:00000000004094f1\n'
p1539
tp1540
sS'savewd_init'
p1541
(S'\n__stdcall savewd_init(savewd * wd)\n'
p1542
V\u000avoid savewd_init(savewd *wd)\u000a\u000a{\u000a  wd->state = INITIAL_STATE;\u000a  return;\u000a}\u000a\u000a
p1543
S'MOV dword ptr [RDI],0x0\nRET\n'
p1544
S'c7 07 00 00 00 00\nc3\n'
p1545
S'.text:000000000040d020\n.text:000000000040d026\n'
p1546
tp1547
sS'quote_mem'
p1548
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p1549
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1550
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x0040c6b0\n'
p1551
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p1552
S'.text:000000000040c6c0\n.text:000000000040c6c3\n.text:000000000040c6c6\n.text:000000000040c6c8\n.text:000000000040c6cb\n.text:000000000040c6ce\n'
p1553
tp1554
sS'restorecon'
p1555
(S'\n__stdcall restorecon()\n'
p1556
V\u000a_Bool restorecon(void)\u000a\u000a{\u000a  undefined in_AL;\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return (_Bool)in_AL;\u000a}\u000a\u000a
p1557
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nPOP RAX\nRET\n'
p1558
S'50\ne8 fa a8 ff ff\nc7 00 5f 00 00 00\n58\nc3\n'
p1559
S'.text:00000000004079e0\n.text:00000000004079e1\n.text:00000000004079e6\n.text:00000000004079ec\n.text:00000000004079ed\n'
p1560
tp1561
sS'__xmknod'
p1562
(S'\n__stdcall __xmknod(int __ver, char * __path, __mode_t __mode, __dev_t * __dev)\n'
p1563
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint __xmknod(int __ver,char *__path,__mode_t __mode,__dev_t *__dev)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___xmknod_00618268)();\u000a  return iVar1;\u000a}\u000a\u000a
p1564
S'JMP qword ptr [0x00618268]\n'
p1565
S'ff 25 62 5b 21 00\n'
p1566
S'.plt:0000000000402700\n'
p1567
tp1568
sS'mbrtowc'
p1569
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p1570
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_00618138)();\u000a  return sVar1;\u000a}\u000a\u000a
p1571
S'JMP qword ptr [0x00618138]\n'
p1572
S'ff 25 92 5c 21 00\n'
p1573
S'.plt:00000000004024a0\n'
p1574
tp1575
sS'futimens'
p1576
(S'\n__stdcall futimens(int __fd, timespec * __times)\n'
p1577
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint futimens(int __fd,timespec *__times)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_futimens_00618368)();\u000a  return iVar1;\u000a}\u000a\u000a
p1578
S'JMP qword ptr [0x00618368]\n'
p1579
S'ff 25 62 5a 21 00\n'
p1580
S'.plt:0000000000402900\n'
p1581
tp1582
sS'remember_copied'
p1583
(S'\n__stdcall remember_copied(char * name, ino_t ino, dev_t dev)\n'
p1584
V\u000achar * remember_copied(char *name,ino_t ino,dev_t dev)\u000a\u000a{\u000a  ino_t *entry;\u000a  char *pcVar1;\u000a  ino_t *piVar2;\u000a  \u000a  entry = (ino_t *)xmalloc(0x18);\u000a  pcVar1 = xstrdup(name);\u000a  *(char **)(entry + 2) = pcVar1;\u000a  *entry = ino;\u000a  entry[1] = dev;\u000a  piVar2 = (ino_t *)hash_insert(src_to_dest,entry);\u000a  if (piVar2 != (ino_t *)0x0) {\u000a    if (piVar2 == entry) {\u000a      pcVar1 = (char *)0x0;\u000a    }\u000a    else {\u000a      src_to_dest_free(entry);\u000a      pcVar1 = (char *)piVar2[2];\u000a    }\u000a    return pcVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1585
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV R12,RDI\nMOV EDI,0x18\nCALL 0x0040e9b0\nMOV RBX,RAX\nMOV RDI,R12\nCALL 0x0040eb20\nMOV qword ptr [RBX + 0x10],RAX\nMOV qword ptr [RBX],R15\nMOV qword ptr [RBX + 0x8],R14\nMOV RDI,qword ptr [0x0061a930]\nMOV RSI,RBX\nCALL 0x0040a540\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004085f9\nCMP R14,RBX\nJZ 0x004085eb\nMOV RDI,RBX\nCALL 0x00408530\nMOV RAX,qword ptr [R14 + 0x10]\nJMP 0x004085ed\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x0040eb40\n'
p1586
S'41 57\n41 56\n41 54\n53\n50\n49 89 d6\n49 89 f7\n49 89 fc\nbf 18 00 00 00\ne8 05 64 00 00\n48 89 c3\n4c 89 e7\ne8 6a 65 00 00\n48 89 43 10\n4c 89 3b\n4c 89 73 08\n48 8b 3d 68 23 21 00\n48 89 de\ne8 70 1f 00 00\n49 89 c6\n4d 85 f6\n74 21\n49 39 de\n74 0e\n48 89 df\ne8 4b ff ff ff\n49 8b 46 10\neb 02\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 42 65 00 00\n'
p1587
S'.text:0000000000408590\n.text:0000000000408592\n.text:0000000000408594\n.text:0000000000408596\n.text:0000000000408597\n.text:0000000000408598\n.text:000000000040859b\n.text:000000000040859e\n.text:00000000004085a1\n.text:00000000004085a6\n.text:00000000004085ab\n.text:00000000004085ae\n.text:00000000004085b1\n.text:00000000004085b6\n.text:00000000004085ba\n.text:00000000004085bd\n.text:00000000004085c1\n.text:00000000004085c8\n.text:00000000004085cb\n.text:00000000004085d0\n.text:00000000004085d3\n.text:00000000004085d6\n.text:00000000004085d8\n.text:00000000004085db\n.text:00000000004085dd\n.text:00000000004085e0\n.text:00000000004085e5\n.text:00000000004085e9\n.text:00000000004085eb\n.text:00000000004085ed\n.text:00000000004085f1\n.text:00000000004085f2\n.text:00000000004085f4\n.text:00000000004085f6\n.text:00000000004085f8\n.text:00000000004085f9\n'
p1588
tp1589
sS'umask'
p1590
(S'\n__stdcall umask(__mode_t __mask)\n'
p1591
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__mode_t umask(__mode_t __mask)\u000a\u000a{\u000a  __mode_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_umask_00618248)();\u000a  return _Var1;\u000a}\u000a\u000a
p1592
S'JMP qword ptr [0x00618248]\n'
p1593
S'ff 25 82 5b 21 00\n'
p1594
S'.plt:00000000004026c0\n'
p1595
tp1596
sS'endpwent'
p1597
(S'\n__stdcall endpwent()\n'
p1598
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid endpwent(void)\u000a\u000a{\u000a  (*(code *)PTR_endpwent_006182c0)();\u000a  return;\u000a}\u000a\u000a
p1599
S'JMP qword ptr [0x006182c0]\n'
p1600
S'ff 25 0a 5b 21 00\n'
p1601
S'.plt:00000000004027b0\n'
p1602
tp1603
sS'access'
p1604
(S'\n__stdcall access(char * __name, int __type)\n'
p1605
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint access(char *__name,int __type)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_access_00618340)();\u000a  return iVar1;\u000a}\u000a\u000a
p1606
S'JMP qword ptr [0x00618340]\n'
p1607
S'ff 25 8a 5a 21 00\n'
p1608
S'.plt:00000000004028b0\n'
p1609
tp1610
sS'dcgettext'
p1611
(S'\n__stdcall dcgettext()\n'
p1612
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_006180f8)();\u000a  return;\u000a}\u000a\u000a
p1613
S'JMP qword ptr [0x006180f8]\n'
p1614
S'ff 25 d2 5c 21 00\n'
p1615
S'.plt:0000000000402420\n'
p1616
tp1617
sS'set_cloexec_flag'
p1618
(S'\n__stdcall set_cloexec_flag()\n'
p1619
V\u000aint set_cloexec_flag(void)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  char in_SIL;\u000a  ulong in_RDI;\u000a  \u000a  iVar3 = 0;\u000a  uVar2 = rpl_fcntl(in_RDI,1,0);\u000a  if ((int)uVar2 < 0) {\u000a    iVar3 = -1;\u000a  }\u000a  else {\u000a    uVar1 = uVar2 & 0xfffffffe;\u000a    if (in_SIL != 0) {\u000a      uVar1 = uVar2 | 1;\u000a    }\u000a    if ((uVar2 != uVar1) && (iVar3 = rpl_fcntl(in_RDI & 0xffffffff,2), iVar3 != -1)) {\u000a      iVar3 = 0;\u000a    }\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p1620
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV EBX,EDI\nXOR EBP,EBP\nMOV ESI,0x1\nXOR EDX,EDX\nXOR EAX,EAX\nCALL 0x0040ef10\nTEST EAX,EAX\nJS 0x004106b9\nMOV ECX,EAX\nOR ECX,0x1\nMOV EDX,EAX\nAND EDX,0xfffffffe\nTEST R14B,R14B\nCMOVNZ EDX,ECX\nCMP EAX,EDX\nJZ 0x004106be\nXOR EBP,EBP\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x0040ef10\nCMP EAX,-0x1\nCMOVNZ EAX,EBP\nJMP 0x004106c0\nMOV EBP,0xffffffff\nMOV EAX,EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1621
S'55\n41 56\n53\n41 89 f6\n89 fb\n31 ed\nbe 01 00 00 00\n31 d2\n31 c0\ne8 87 e8 ff ff\n85 c0\n78 2c\n89 c1\n83 c9 01\n89 c2\n83 e2 fe\n45 84 f6\n0f 45 d1\n39 d0\n74 1d\n31 ed\nbe 02 00 00 00\n31 c0\n89 df\ne8 5f e8 ff ff\n83 f8 ff\n0f 45 c5\neb 07\nbd ff ff ff ff\n89 e8\n5b\n41 5e\n5d\nc3\n'
p1622
S'.text:0000000000410670\n.text:0000000000410671\n.text:0000000000410673\n.text:0000000000410674\n.text:0000000000410677\n.text:0000000000410679\n.text:000000000041067b\n.text:0000000000410680\n.text:0000000000410682\n.text:0000000000410684\n.text:0000000000410689\n.text:000000000041068b\n.text:000000000041068d\n.text:000000000041068f\n.text:0000000000410692\n.text:0000000000410694\n.text:0000000000410697\n.text:000000000041069a\n.text:000000000041069d\n.text:000000000041069f\n.text:00000000004106a1\n.text:00000000004106a3\n.text:00000000004106a8\n.text:00000000004106aa\n.text:00000000004106ac\n.text:00000000004106b1\n.text:00000000004106b4\n.text:00000000004106b7\n.text:00000000004106b9\n.text:00000000004106be\n.text:00000000004106c0\n.text:00000000004106c1\n.text:00000000004106c3\n.text:00000000004106c4\n'
p1623
tp1624
sS'seen_file'
p1625
(S'\n__stdcall seen_file(Hash_table * ht, char * file, stat * stats)\n'
p1626
V\u000a_Bool seen_file(Hash_table *ht,char *file,stat *stats)\u000a\u000a{\u000a  void *pvVar1;\u000a  char *local_18;\u000a  __ino_t local_10;\u000a  __dev_t local_8;\u000a  \u000a  if (ht != (Hash_table *)0x0) {\u000a    local_10 = stats->st_ino;\u000a    local_8 = stats->st_dev;\u000a    local_18 = file;\u000a    pvVar1 = hash_lookup(ht,&local_18);\u000a    return (_Bool)(pvVar1 != (void *)0x0);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1627
S'TEST RDI,RDI\nJZ 0x00409531\nSUB RSP,0x18\nMOV qword ptr [RSP],RSI\nMOV RAX,qword ptr [RDX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RAX,qword ptr [RDX]\nMOV qword ptr [RSP + 0x10],RAX\nMOV RSI,RSP\nCALL 0x00409a00\nTEST RAX,RAX\nSETNZ AL\nADD RSP,0x18\nRET\nXOR EAX,EAX\nRET\n'
p1628
S'48 85 ff\n74 2c\n48 83 ec 18\n48 89 34 24\n48 8b 42 08\n48 89 44 24 08\n48 8b 02\n48 89 44 24 10\n48 89 e6\ne8 da 04 00 00\n48 85 c0\n0f 95 c0\n48 83 c4 18\nc3\n31 c0\nc3\n'
p1629
S'.text:0000000000409500\n.text:0000000000409503\n.text:0000000000409505\n.text:0000000000409509\n.text:000000000040950d\n.text:0000000000409511\n.text:0000000000409516\n.text:0000000000409519\n.text:000000000040951e\n.text:0000000000409521\n.text:0000000000409526\n.text:0000000000409529\n.text:000000000040952c\n.text:0000000000409530\n.text:0000000000409531\n.text:0000000000409533\n'
p1630
tp1631
sS'quotearg_free'
p1632
(S'\n__stdcall quotearg_free()\n'
p1633
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p1634
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x00618428]\nCMP dword ptr [0x00618430],0x2\nJC 0x0040c18a\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00402290\nINC RBX\nMOV EAX,dword ptr [0x00618430]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x0040c170\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x61a9a0\nCMP RDI,RAX\nJZ 0x0040c1b3\nCALL 0x00402290\nMOV qword ptr [0x00618438],0x100\nMOV qword ptr [0x00618440],0x61a9a0\nMOV EAX,0x618438\nCMP R14,RAX\nJZ 0x0040c1d0\nMOV RDI,R14\nCALL 0x00402290\nMOV qword ptr [0x00618428],0x618438\nMOV dword ptr [0x00618430],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1635
S'41 57\n41 56\n53\n4c 8b 35 cc c2 20 00\n83 3d cd c2 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 18 61 ff ff\n48 ff c3\n8b 05 af c2 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 a0 a9 61 00\n48 39 c7\n74 1b\ne8 f3 60 ff ff\n48 c7 05 90 c2 20 00 00 01 00 00\n48 c7 05 8d c2 20 00 a0 a9 61 00\nb8 38 84 61 00\n49 39 c6\n74 13\n4c 89 f7\ne8 cb 60 ff ff\n48 c7 05 58 c2 20 00 38 84 61 00\nc7 05 56 c2 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p1636
S'.text:000000000040c150\n.text:000000000040c152\n.text:000000000040c154\n.text:000000000040c155\n.text:000000000040c15c\n.text:000000000040c163\n.text:000000000040c165\n.text:000000000040c169\n.text:000000000040c16e\n.text:000000000040c170\n.text:000000000040c173\n.text:000000000040c178\n.text:000000000040c17b\n.text:000000000040c181\n.text:000000000040c185\n.text:000000000040c188\n.text:000000000040c18a\n.text:000000000040c18e\n.text:000000000040c193\n.text:000000000040c196\n.text:000000000040c198\n.text:000000000040c19d\n.text:000000000040c1a8\n.text:000000000040c1b3\n.text:000000000040c1b8\n.text:000000000040c1bb\n.text:000000000040c1bd\n.text:000000000040c1c0\n.text:000000000040c1c5\n.text:000000000040c1d0\n.text:000000000040c1da\n.text:000000000040c1db\n.text:000000000040c1dd\n.text:000000000040c1df\n'
p1637
tp1638
sS'quotearg_mem'
p1639
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p1640
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1641
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x0040c3b0\n'
p1642
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p1643
S'.text:000000000040c3d0\n.text:000000000040c3d3\n.text:000000000040c3d6\n.text:000000000040c3d8\n.text:000000000040c3db\n.text:000000000040c3de\n'
p1644
tp1645
sS'security_check_context'
p1646
(S'\n__stdcall security_check_context(security_context_t con)\n'
p1647
V\u000aint security_check_context(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1648
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1649
S'50\ne8 9a 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1650
S'.text:000000000040d640\n.text:000000000040d641\n.text:000000000040d646\n.text:000000000040d64c\n.text:000000000040d651\n.text:000000000040d652\n'
p1651
tp1652
sS'rotl32'
p1653
(S'\n__stdcall rotl32()\n'
p1654
V\u000auint32_t rotl32(void)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined4 in_ESI;\u000a  uint in_EDI;\u000a  \u000a  bVar1 = (byte)in_ESI & 0x1f;\u000a  return (uint32_t)(in_EDI << bVar1 | in_EDI >> 0x20 - bVar1);\u000a}\u000a\u000a
p1655
S'MOV ECX,ESI\nROL EDI,CL\nMOV EAX,EDI\nRET\n'
p1656
S'89 f1\nd3 c7\n89 f8\nc3\n'
p1657
S'.text:000000000040f910\n.text:000000000040f912\n.text:000000000040f914\n.text:000000000040f916\n'
p1658
tp1659
sS'free_cwd'
p1660
(S'\n__stdcall free_cwd(saved_cwd * cwd)\n'
p1661
V\u000avoid free_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  if (-1 < cwd->desc) {\u000a    close(cwd->desc);\u000a  }\u000a  free(cwd->name);\u000a  return;\u000a}\u000a\u000a
p1662
S'PUSH RBX\nMOV RBX,RDI\nMOV EDI,dword ptr [RBX]\nTEST EDI,EDI\nJS 0x004101bf\nCALL 0x00402590\nMOV RDI,qword ptr [RBX + 0x8]\nPOP RBX\nJMP 0x00402290\n'
p1663
S'53\n48 89 fb\n8b 3b\n85 ff\n78 05\ne8 d1 23 ff ff\n48 8b 7b 08\n5b\ne9 c7 20 ff ff\n'
p1664
S'.text:00000000004101b0\n.text:00000000004101b1\n.text:00000000004101b4\n.text:00000000004101b6\n.text:00000000004101b8\n.text:00000000004101ba\n.text:00000000004101bf\n.text:00000000004101c3\n.text:00000000004101c4\n'
p1665
tp1666
sS'savedir'
p1667
(S'\n__stdcall savedir(char * dir)\n'
p1668
V\u000achar * savedir(char *dir)\u000a\u000a{\u000a  int iVar1;\u000a  DIR *dirp;\u000a  char *__ptr;\u000a  int *piVar2;\u000a  \u000a  dirp = opendir_safer(dir);\u000a  if (dirp != (DIR *)0x0) {\u000a    __ptr = streamsavedir(dirp);\u000a    iVar1 = closedir((DIR *)dirp);\u000a    if (iVar1 == 0) {\u000a      return __ptr;\u000a    }\u000a    piVar2 = __errno_location();\u000a    iVar1 = *piVar2;\u000a    free(__ptr);\u000a    *piVar2 = iVar1;\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p1669
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EBP,ESI\nCALL 0x004091b0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040cfe0\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x0040cd20\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x004025b0\nTEST EAX,EAX\nJZ 0x0040cfe3\nCALL 0x004022e0\nMOV RBX,RAX\nMOV EBP,dword ptr [RBX]\nMOV RDI,R14\nCALL 0x00402290\nMOV dword ptr [RBX],EBP\nXOR R14D,R14D\nMOV RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1670
S'55\n41 56\n53\n89 f5\ne8 05 c2 ff ff\n48 89 c3\n48 85 db\n74 2d\n48 89 df\n89 ee\ne8 63 fd ff ff\n49 89 c6\n48 89 df\ne8 e8 55 ff ff\n85 c0\n74 17\ne8 0f 53 ff ff\n48 89 c3\n8b 2b\n4c 89 f7\ne8 b2 52 ff ff\n89 2b\n45 31 f6\n4c 89 f0\n5b\n41 5e\n5d\nc3\n'
p1671
S'.text:000000000040cfa0\n.text:000000000040cfa1\n.text:000000000040cfa3\n.text:000000000040cfa4\n.text:000000000040cfa6\n.text:000000000040cfab\n.text:000000000040cfae\n.text:000000000040cfb1\n.text:000000000040cfb3\n.text:000000000040cfb6\n.text:000000000040cfb8\n.text:000000000040cfbd\n.text:000000000040cfc0\n.text:000000000040cfc3\n.text:000000000040cfc8\n.text:000000000040cfca\n.text:000000000040cfcc\n.text:000000000040cfd1\n.text:000000000040cfd4\n.text:000000000040cfd6\n.text:000000000040cfd9\n.text:000000000040cfde\n.text:000000000040cfe0\n.text:000000000040cfe3\n.text:000000000040cfe6\n.text:000000000040cfe7\n.text:000000000040cfe9\n.text:000000000040cfea\n'
p1672
tp1673
sS'mknod'
p1674
(S'\n__stdcall mknod(char * __path, __mode_t __mode, __dev_t __dev)\n'
p1675
V\u000aint mknod(char *__path,__mode_t __mode,__dev_t __dev)\u000a\u000a{\u000a  int iVar1;\u000a  __dev_t local_10 [2];\u000a  \u000a  local_10[0] = __dev;\u000a  iVar1 = __xmknod(0,__path,__mode,local_10);\u000a  return iVar1;\u000a}\u000a\u000a
p1676
S'SUB RSP,0x18\nLEA RCX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x8],RDX\nMOV EDX,ESI\nMOV RSI,RDI\nXOR EDI,EDI\nCALL 0x00402700\nADD RSP,0x18\nRET\n'
p1677
S'48 83 ec 18\n48 8d 4c 24 08\n48 89 54 24 08\n89 f2\n48 89 fe\n31 ff\ne8 06 1f ff ff\n48 83 c4 18\nc3\n'
p1678
S'.text:00000000004107e0\n.text:00000000004107e4\n.text:00000000004107e9\n.text:00000000004107ee\n.text:00000000004107f0\n.text:00000000004107f3\n.text:00000000004107f5\n.text:00000000004107fa\n.text:00000000004107fe\n'
p1679
tp1680
sS'dirchownmod'
p1681
(S'\n__stdcall dirchownmod(char * dir)\n'
p1682
V\u000aint dirchownmod(char *dir)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  uint __mode;\u000a  int __fd;\u000a  int *piVar3;\u000a  __uid_t __owner;\u000a  int in_EDX;\u000a  char *__file;\u000a  __gid_t __group;\u000a  uint in_R9D;\u000a  uint in_stack_00000008;\u000a  stat local_c0;\u000a  \u000a  __fd = (int)dir;\u000a  if (__fd < 0) {\u000a    iVar2 = stat(__file,&local_c0);\u000a  }\u000a  else {\u000a    iVar2 = fstat(__fd,&local_c0);\u000a  }\u000a  if (iVar2 == 0) {\u000a    if ((local_c0.st_mode & 0xf000) == 0x4000) {\u000a      if (((__owner != 0xffffffff) && (local_c0.st_uid != __owner)) ||\u000a         ((__mode = 0, __group != 0xffffffff && (local_c0.st_gid != __group)))) {\u000a        if (__fd < 0) {\u000a          if (in_EDX == -1) {\u000a            iVar2 = chown(__file,__owner,__group);\u000a          }\u000a          else {\u000a            iVar2 = lchown(__file,__owner,__group);\u000a          }\u000a        }\u000a        else {\u000a          iVar2 = fchown(__fd,__owner,__group);\u000a        }\u000a        __mode = 0;\u000a        if (iVar2 == 0) {\u000a          __mode = local_c0.st_mode & 0xc00;\u000a        }\u000a        if ((local_c0.st_mode & 0x49) == 0) {\u000a          __mode = local_c0.st_mode & 0x49;\u000a        }\u000a        if (iVar2 != 0) goto joined_r0x0040ffea;\u000a      }\u000a      if (((local_c0.st_mode ^ in_R9D | __mode) & in_stack_00000008) != 0) {\u000a        __mode = ~in_stack_00000008 & local_c0.st_mode & 0xfff | in_R9D;\u000a        if (__fd < 0) {\u000a          __fd = chmod(__file,__mode);\u000a          return __fd;\u000a        }\u000a        iVar2 = fchmod(__fd,__mode);\u000a        goto joined_r0x0041007b;\u000a      }\u000a      iVar2 = 0;\u000a    }\u000a    else {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0x14;\u000a      iVar2 = -1;\u000a    }\u000a  }\u000ajoined_r0x0040ffea:\u000a  if (__fd < 0) {\u000a    return iVar2;\u000a  }\u000ajoined_r0x0041007b:\u000a  if (iVar2 == 0) {\u000a    iVar2 = close(__fd);\u000a  }\u000a  else {\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(__fd);\u000a    *piVar3 = iVar1;\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1683
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV R12D,R8D\nMOV R13D,ECX\nMOV R15D,EDX\nMOV RAX,RSI\nMOV R14D,EDI\nTEST R14D,R14D\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x14],R9D\nLEA RSI,[RSP + 0x18]\nJS 0x0040ff7e\nMOV EDI,R14D\nCALL 0x004107a0\nJMP 0x0040ff86\nMOV RDI,RAX\nCALL 0x00410790\nMOV EBP,EAX\nTEST EBP,EBP\nJNZ 0x00410074\nMOV EBX,dword ptr [RSP + 0x30]\nMOV EAX,EBX\nAND EAX,0xf000\nCMP EAX,0x4000\nJNZ 0x0040ffd7\nCMP R13D,-0x1\nJZ 0x0040ffaf\nCMP dword ptr [RSP + 0x34],R13D\nJNZ 0x0040ffc2\nXOR EAX,EAX\nCMP R12D,-0x1\nJZ 0x0041003c\nCMP dword ptr [RSP + 0x38],R12D\nJZ 0x0041003c\nTEST R14D,R14D\nJS 0x0040fff5\nMOV EDI,R14D\nMOV ESI,R13D\nMOV EDX,R12D\nCALL 0x004028d0\nJMP 0x0041001d\nCALL 0x004022e0\nMOV dword ptr [RAX],0x14\nMOV EBP,0xffffffff\nTEST R14D,R14D\nJNS 0x00410079\nJMP 0x0041009f\nCMP R15D,-0x1\nJZ 0x0041000d\nMOV RDI,qword ptr [RSP + 0x8]\nMOV ESI,R13D\nMOV EDX,R12D\nCALL 0x004027c0\nJMP 0x0041001d\nMOV RDI,qword ptr [RSP + 0x8]\nMOV ESI,R13D\nMOV EDX,R12D\nCALL 0x004027f0\nMOV EBP,EAX\nMOV ECX,EBX\nAND ECX,0x49\nMOV EDX,EBX\nAND EDX,0xc00\nXOR EAX,EAX\nTEST EBP,EBP\nCMOVZ EAX,EDX\nTEST ECX,ECX\nCMOVZ EAX,ECX\nTEST EBP,EBP\nJNZ 0x00410074\nMOV ESI,dword ptr [0xe0 + RSP]\nMOV ECX,EBX\nMOV EDX,dword ptr [RSP + 0x14]\nXOR ECX,EDX\nOR ECX,EAX\nTEST ECX,ESI\nJZ 0x00410072\nNOT ESI\nAND ESI,EBX\nAND ESI,0xfff\nOR ESI,EDX\nTEST R14D,R14D\nJS 0x004100b3\nMOV EDI,R14D\nCALL 0x00402850\nMOV EBP,EAX\nTEST EBP,EBP\nJNZ 0x0041007d\nJMP 0x00410095\nXOR EBP,EBP\nTEST R14D,R14D\nJS 0x0041009f\nTEST EBP,EBP\nJZ 0x00410095\nCALL 0x004022e0\nMOV RBX,RAX\nMOV R15D,dword ptr [RBX]\nMOV EDI,R14D\nCALL 0x00402590\nMOV dword ptr [RBX],R15D\nJMP 0x0041009f\nMOV EDI,R14D\nCALL 0x00402590\nMOV EBP,EAX\nMOV EAX,EBP\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402860\nJMP 0x0041009d\n'
p1684
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n45 89 c4\n41 89 cd\n41 89 d7\n48 89 f0\n41 89 fe\n45 85 f6\n48 89 44 24 08\n44 89 4c 24 14\n48 8d 74 24 18\n78 0a\n44 89 f7\ne8 24 08 00 00\neb 08\n48 89 c7\ne8 0a 08 00 00\n89 c5\n85 ed\n0f 85 e4 00 00 00\n8b 5c 24 30\n89 d8\n25 00 f0 00 00\n3d 00 40 00 00\n75 35\n41 83 fd ff\n74 07\n44 39 6c 24 34\n75 13\n31 c0\n41 83 fc ff\n0f 84 81 00 00 00\n44 39 64 24 38\n74 7a\n45 85 f6\n78 2e\n44 89 f7\n44 89 ee\n44 89 e2\ne8 fb 28 ff ff\neb 46\ne8 04 23 ff ff\nc7 00 14 00 00 00\nbd ff ff ff ff\n45 85 f6\n0f 89 89 00 00 00\ne9 aa 00 00 00\n41 83 ff ff\n74 12\n48 8b 7c 24 08\n44 89 ee\n44 89 e2\ne8 b5 27 ff ff\neb 10\n48 8b 7c 24 08\n44 89 ee\n44 89 e2\ne8 d3 27 ff ff\n89 c5\n89 d9\n83 e1 49\n89 da\n81 e2 00 0c 00 00\n31 c0\n85 ed\n0f 44 c2\n85 c9\n0f 44 c1\n85 ed\n75 38\n8b b4 24 e0 00 00 00\n89 d9\n8b 54 24 14\n31 d1\n09 c1\n85 f1\n74 21\nf7 d6\n21 de\n81 e6 ff 0f 00 00\n09 d6\n45 85 f6\n78 51\n44 89 f7\ne8 e6 27 ff ff\n89 c5\n85 ed\n75 0d\neb 23\n31 ed\n45 85 f6\n78 26\n85 ed\n74 18\ne8 5e 22 ff ff\n48 89 c3\n44 8b 3b\n44 89 f7\ne8 00 25 ff ff\n44 89 3b\neb 0a\n44 89 f7\ne8 f3 24 ff ff\n89 c5\n89 e8\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 7c 24 08\ne8 a3 27 ff ff\neb de\n'
p1685
S'.text:000000000040ff40\n.text:000000000040ff41\n.text:000000000040ff43\n.text:000000000040ff45\n.text:000000000040ff47\n.text:000000000040ff49\n.text:000000000040ff4a\n.text:000000000040ff51\n.text:000000000040ff54\n.text:000000000040ff57\n.text:000000000040ff5a\n.text:000000000040ff5d\n.text:000000000040ff60\n.text:000000000040ff63\n.text:000000000040ff68\n.text:000000000040ff6d\n.text:000000000040ff72\n.text:000000000040ff74\n.text:000000000040ff77\n.text:000000000040ff7c\n.text:000000000040ff7e\n.text:000000000040ff81\n.text:000000000040ff86\n.text:000000000040ff88\n.text:000000000040ff8a\n.text:000000000040ff90\n.text:000000000040ff94\n.text:000000000040ff96\n.text:000000000040ff9b\n.text:000000000040ffa0\n.text:000000000040ffa2\n.text:000000000040ffa6\n.text:000000000040ffa8\n.text:000000000040ffad\n.text:000000000040ffaf\n.text:000000000040ffb1\n.text:000000000040ffb5\n.text:000000000040ffbb\n.text:000000000040ffc0\n.text:000000000040ffc2\n.text:000000000040ffc5\n.text:000000000040ffc7\n.text:000000000040ffca\n.text:000000000040ffcd\n.text:000000000040ffd0\n.text:000000000040ffd5\n.text:000000000040ffd7\n.text:000000000040ffdc\n.text:000000000040ffe2\n.text:000000000040ffe7\n.text:000000000040ffea\n.text:000000000040fff0\n.text:000000000040fff5\n.text:000000000040fff9\n.text:000000000040fffb\n.text:0000000000410000\n.text:0000000000410003\n.text:0000000000410006\n.text:000000000041000b\n.text:000000000041000d\n.text:0000000000410012\n.text:0000000000410015\n.text:0000000000410018\n.text:000000000041001d\n.text:000000000041001f\n.text:0000000000410021\n.text:0000000000410024\n.text:0000000000410026\n.text:000000000041002c\n.text:000000000041002e\n.text:0000000000410030\n.text:0000000000410033\n.text:0000000000410035\n.text:0000000000410038\n.text:000000000041003a\n.text:000000000041003c\n.text:0000000000410043\n.text:0000000000410045\n.text:0000000000410049\n.text:000000000041004b\n.text:000000000041004d\n.text:000000000041004f\n.text:0000000000410051\n.text:0000000000410053\n.text:0000000000410055\n.text:000000000041005b\n.text:000000000041005d\n.text:0000000000410060\n.text:0000000000410062\n.text:0000000000410065\n.text:000000000041006a\n.text:000000000041006c\n.text:000000000041006e\n.text:0000000000410070\n.text:0000000000410072\n.text:0000000000410074\n.text:0000000000410077\n.text:0000000000410079\n.text:000000000041007b\n.text:000000000041007d\n.text:0000000000410082\n.text:0000000000410085\n.text:0000000000410088\n.text:000000000041008b\n.text:0000000000410090\n.text:0000000000410093\n.text:0000000000410095\n.text:0000000000410098\n.text:000000000041009d\n.text:000000000041009f\n.text:00000000004100a1\n.text:00000000004100a8\n.text:00000000004100a9\n.text:00000000004100ab\n.text:00000000004100ad\n.text:00000000004100af\n.text:00000000004100b1\n.text:00000000004100b2\n.text:00000000004100b3\n.text:00000000004100b8\n.text:00000000004100bd\n'
p1686
tp1687
sS'free'
p1688
(S'\n__stdcall free(void * __ptr)\n'
p1689
V\u000a/* WARNING: Switch with 1 destination removed at 0x00402290 */\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1690
S'JMP qword ptr [0x00618030]\n'
p1691
S'ff 25 9a 5d 21 00\n'
p1692
S'.plt:0000000000402290\n'
p1693
tp1694
sS'euidaccess'
p1695
(S'\n__stdcall euidaccess(char * __name, int __type)\n'
p1696
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint euidaccess(char *__name,int __type)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_euidaccess_00618370)();\u000a  return iVar1;\u000a}\u000a\u000a
p1697
S'JMP qword ptr [0x00618370]\n'
p1698
S'ff 25 5a 5a 21 00\n'
p1699
S'.plt:0000000000402910\n'
p1700
tp1701
sS'stat'
p1702
(S'\n__stdcall stat(char * __file, stat * __buf)\n'
p1703
V\u000aint stat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___xstat_00618280)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p1704
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00402730\n'
p1705
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 90 1f ff ff\n'
p1706
S'.text:0000000000410790\n.text:0000000000410793\n.text:0000000000410796\n.text:000000000041079b\n'
p1707
tp1708
sS'check_extension'
p1709
(S'\n__stdcall check_extension()\n'
p1710
V\u000avoid check_extension(char *pcParm1,long lParm2)\u000a\u000a{\u000a  undefined2 uVar1;\u000a  undefined2 *name;\u000a  int *piVar2;\u000a  char *pcVar3;\u000a  char *pcVar4;\u000a  \u000a  name = (undefined2 *)last_component(pcParm1);\u000a  pcVar4 = (char *)base_len((char *)name);\u000a  if (pcVar4 < (char *)0xf) {\u000a    pcVar3 = (char *)0xff;\u000a    if (pcVar4 < (char *)0x100) {\u000a      return;\u000a    }\u000a  }\u000a  else {\u000a    uVar1 = *name;\u000a    *name = 0x2e;\u000a    piVar2 = __errno_location();\u000a    *piVar2 = 0;\u000a    pcVar3 = (char *)pathconf(pcParm1,3);\u000a    if (((long)pcVar3 < 0) && (*piVar2 != 0)) {\u000a      pcVar3 = (char *)0xff;\u000a    }\u000a    *name = uVar1;\u000a    if (pcVar4 <= pcVar3) {\u000a      return;\u000a    }\u000a  }\u000a  pcVar4 = pcVar3 + -1;\u000a  if (pcParm1 + (lParm2 - (long)name) < pcVar3) {\u000a    pcVar4 = pcParm1 + (lParm2 - (long)name);\u000a  }\u000a  *(undefined2 *)((long)name + (long)pcVar4) = 0x7e;\u000a  return;\u000a}\u000a\u000a
p1711
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV RBX,RDI\nCALL 0x004092f0\nMOV R14,RAX\nMOV RDI,R14\nCALL 0x00409350\nMOV R12,RAX\nCMP R12,0xf\nJC 0x00408edd\nMOVZX EBP,word ptr [R14]\nMOV word ptr [R14],0x2e\nCALL 0x004022e0\nMOV R13,RAX\nMOV dword ptr [R13],0x0\nMOV ESI,0x3\nMOV RDI,RBX\nCALL 0x004023c0\nTEST RAX,RAX\nJNS 0x00408ed2\nCMP dword ptr [R13],0x0\nJZ 0x00408ed2\nMOV EAX,0xff\nMOV word ptr [R14],BP\nCMP RAX,R12\nJC 0x00408ee7\nJMP 0x00408eff\nMOV EAX,0xff\nCMP RAX,R12\nJNC 0x00408eff\nADD RBX,R15\nSUB RBX,R14\nCMP RAX,RBX\nLEA RAX,[RAX + -0x1]\nCMOVA RAX,RBX\nMOV word ptr [R14 + RAX*0x1],0x7e\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1712
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f7\n48 89 fb\ne8 6a 04 00 00\n49 89 c6\n4c 89 f7\ne8 bf 04 00 00\n49 89 c4\n49 83 fc 0f\n72 43\n41 0f b7 2e\n66 41 c7 06 2e 00\ne8 37 94 ff ff\n49 89 c5\n41 c7 45 00 00 00 00 00\nbe 03 00 00 00\n48 89 df\ne8 ff 94 ff ff\n48 85 c0\n79 0c\n41 83 7d 00 00\n74 05\nb8 ff 00 00 00\n66 41 89 2e\n4c 39 e0\n72 0c\neb 22\nb8 ff 00 00 00\n4c 39 e0\n73 18\n4c 01 fb\n4c 29 f3\n48 39 d8\n48 8d 40 ff\n48 0f 47 c3\n66 41 c7 04 06 7e 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1713
S'.text:0000000000408e70\n.text:0000000000408e71\n.text:0000000000408e73\n.text:0000000000408e75\n.text:0000000000408e77\n.text:0000000000408e79\n.text:0000000000408e7a\n.text:0000000000408e7b\n.text:0000000000408e7e\n.text:0000000000408e81\n.text:0000000000408e86\n.text:0000000000408e89\n.text:0000000000408e8c\n.text:0000000000408e91\n.text:0000000000408e94\n.text:0000000000408e98\n.text:0000000000408e9a\n.text:0000000000408e9e\n.text:0000000000408ea4\n.text:0000000000408ea9\n.text:0000000000408eac\n.text:0000000000408eb4\n.text:0000000000408eb9\n.text:0000000000408ebc\n.text:0000000000408ec1\n.text:0000000000408ec4\n.text:0000000000408ec6\n.text:0000000000408ecb\n.text:0000000000408ecd\n.text:0000000000408ed2\n.text:0000000000408ed6\n.text:0000000000408ed9\n.text:0000000000408edb\n.text:0000000000408edd\n.text:0000000000408ee2\n.text:0000000000408ee5\n.text:0000000000408ee7\n.text:0000000000408eea\n.text:0000000000408eed\n.text:0000000000408ef0\n.text:0000000000408ef4\n.text:0000000000408ef8\n.text:0000000000408eff\n.text:0000000000408f03\n.text:0000000000408f04\n.text:0000000000408f06\n.text:0000000000408f08\n.text:0000000000408f0a\n.text:0000000000408f0c\n.text:0000000000408f0d\n'
p1714
tp1715
sS'quote_n_mem'
p1716
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p1717
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p1718
S'MOV ECX,0x618448\nJMP 0x0040c1f0\n'
p1719
S'b9 48 84 61 00\ne9 36 fb ff ff\n'
p1720
S'.text:000000000040c6b0\n.text:000000000040c6b5\n'
p1721
tp1722
sS'xstrdup'
p1723
(S'\n__stdcall xstrdup(char * string)\n'
p1724
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p1725
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00402440\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x0040eaf0\n'
p1726
S'53\n48 89 fb\ne8 17 39 ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p1727
S'.text:000000000040eb20\n.text:000000000040eb21\n.text:000000000040eb24\n.text:000000000040eb29\n.text:000000000040eb2d\n.text:000000000040eb30\n.text:000000000040eb31\n'
p1728
tp1729
sS'c_ispunct'
p1730
(S'\n__stdcall c_ispunct()\n'
p1731
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p1732
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x0040faa2\nMOV AL,0x1\nJMP qword ptr [0x413f30 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p1733
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd 30 3f 41 00\nc3\n31 c0\nc3\n'
p1734
S'.text:000000000040fa90\n.text:000000000040fa93\n.text:000000000040fa96\n.text:000000000040fa98\n.text:000000000040fa9a\n.text:000000000040faa1\n.text:000000000040faa2\n.text:000000000040faa4\n'
p1735
tp1736
sS'src_info_init'
p1737
(S'\n__stdcall src_info_init(cp_options * x)\n'
p1738
V\u000avoid src_info_init(cp_options *x)\u000a\u000a{\u000a  Hash_table *pHVar1;\u000a  \u000a  pHVar1 = hash_initialize(0x3d,(Hash_tuning *)0x0,triple_hash_no_name,triple_compare,triple_free);\u000a  x->src_info = pHVar1;\u000a  return;\u000a}\u000a\u000a
p1739
S'PUSH RBX\nMOV RBX,RDI\nMOV EDI,0x3d\nXOR ESI,ESI\nMOV EDX,0x40a820\nMOV ECX,0x40a830\nMOV R8D,0x40a890\nCALL 0x00409c70\nMOV qword ptr [RBX + 0x40],RAX\nPOP RBX\nRET\n'
p1740
S'53\n48 89 fb\nbf 3d 00 00 00\n31 f6\nba 20 a8 40 00\nb9 30 a8 40 00\n41 b8 90 a8 40 00\ne8 50 59 00 00\n48 89 43 40\n5b\nc3\n'
p1741
S'.text:0000000000404300\n.text:0000000000404301\n.text:0000000000404304\n.text:0000000000404309\n.text:000000000040430b\n.text:0000000000404310\n.text:0000000000404315\n.text:000000000040431b\n.text:0000000000404320\n.text:0000000000404324\n.text:0000000000404325\n'
p1742
tp1743
sS'cp_option_init'
p1744
(S'\n__stdcall cp_option_init(cp_options * x)\n'
p1745
V\u000avoid cp_option_init(cp_options *x)\u000a\u000a{\u000a  cp_options_default(x);\u000a  x->copy_as_regular = true;\u000a  x->reflink_mode = REFLINK_NEVER;\u000a  x->dereference = DEREF_ALWAYS;\u000a  x->unlink_dest_before_opening = true;\u000a  x->unlink_dest_after_failed_open = false;\u000a  x->hard_link = false;\u000a  x->interactive = I_UNSPECIFIED;\u000a  x->move_mode = false;\u000a  x->preserve_links = false;\u000a  x->reduce_diagnostics = false;\u000a  x->explicit_no_preserve_mode = false;\u000a  *(undefined4 *)&x->one_file_system = 0;\u000a  x->data_copy_required = true;\u000a  x->require_preserve = false;\u000a  x->require_preserve_xattr = false;\u000a  x->recursive = false;\u000a  x->sparse_mode = SPARSE_AUTO;\u000a  x->symbolic_link = false;\u000a  x->backup_type = no_backups;\u000a  x->set_mode = true;\u000a  x->mode = 0x180;\u000a  x->require_preserve_context = false;\u000a  x->preserve_security_context = false;\u000a  x->set_security_context = false;\u000a  x->preserve_xattr = false;\u000a  *(undefined4 *)&x->update = 0;\u000a  *(undefined4 *)&x->dest_info = 0;\u000a  *(undefined4 *)((long)&x->dest_info + 4) = 0;\u000a  *(undefined4 *)&x->src_info = 0;\u000a  *(undefined4 *)((long)&x->src_info + 4) = 0;\u000a  return;\u000a}\u000a\u000a
p1746
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00405ed0\nMOV byte ptr [RBX + 0x14],0x1\nMOV dword ptr [RBX + 0x30],0x0\nMOV dword ptr [RBX + 0x4],0x4\nMOV byte ptr [RBX + 0x15],0x1\nMOV byte ptr [RBX + 0x16],0x0\nMOV byte ptr [RBX + 0x17],0x0\nMOV dword ptr [RBX + 0x8],0x4\nMOV byte ptr [RBX + 0x18],0x0\nMOV byte ptr [RBX + 0x21],0x0\nMOV byte ptr [RBX + 0x28],0x0\nMOV byte ptr [RBX + 0x1f],0x0\nMOV dword ptr [RBX + 0x1b],0x0\nMOV byte ptr [RBX + 0x22],0x1\nMOV byte ptr [RBX + 0x23],0x0\nMOV byte ptr [RBX + 0x27],0x0\nMOV byte ptr [RBX + 0x29],0x0\nMOV dword ptr [RBX + 0xc],0x2\nMOV byte ptr [RBX + 0x2b],0x0\nMOV dword ptr [RBX],0x0\nMOV byte ptr [RBX + 0x2a],0x1\nMOV dword ptr [RBX + 0x10],0x180\nMOV byte ptr [RBX + 0x25],0x0\nMOV byte ptr [RBX + 0x24],0x0\nMOV byte ptr [RBX + 0x20],0x0\nMOV byte ptr [RBX + 0x26],0x0\nMOV dword ptr [RBX + 0x2c],0x0\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RBX + 0x38],XMM0\nPOP RBX\nRET\n'
p1747
S'53\n48 89 fb\ne8 77 28 00 00\nc6 43 14 01\nc7 43 30 00 00 00 00\nc7 43 04 04 00 00 00\nc6 43 15 01\nc6 43 16 00\nc6 43 17 00\nc7 43 08 04 00 00 00\nc6 43 18 00\nc6 43 21 00\nc6 43 28 00\nc6 43 1f 00\nc7 43 1b 00 00 00 00\nc6 43 22 01\nc6 43 23 00\nc6 43 27 00\nc6 43 29 00\nc7 43 0c 02 00 00 00\nc6 43 2b 00\nc7 03 00 00 00 00\nc6 43 2a 01\nc7 43 10 80 01 00 00\nc6 43 25 00\nc6 43 24 00\nc6 43 20 00\nc6 43 26 00\nc7 43 2c 00 00 00 00\n0f 57 c0\n0f 11 43 38\n5b\nc3\n'
p1748
S'.text:0000000000403650\n.text:0000000000403651\n.text:0000000000403654\n.text:0000000000403659\n.text:000000000040365d\n.text:0000000000403664\n.text:000000000040366b\n.text:000000000040366f\n.text:0000000000403673\n.text:0000000000403677\n.text:000000000040367e\n.text:0000000000403682\n.text:0000000000403686\n.text:000000000040368a\n.text:000000000040368e\n.text:0000000000403695\n.text:0000000000403699\n.text:000000000040369d\n.text:00000000004036a1\n.text:00000000004036a5\n.text:00000000004036ac\n.text:00000000004036b0\n.text:00000000004036b6\n.text:00000000004036ba\n.text:00000000004036c1\n.text:00000000004036c5\n.text:00000000004036c9\n.text:00000000004036cd\n.text:00000000004036d1\n.text:00000000004036d8\n.text:00000000004036db\n.text:00000000004036df\n.text:00000000004036e0\n'
p1749
tp1750
sS'fstat'
p1751
(S'\n__stdcall fstat(int __fd, stat * __buf)\n'
p1752
V\u000aint fstat(int __fd,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___fxstat_006182b8)(1,(ulong)(uint)__fd,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p1753
S'MOV RDX,RSI\nMOV ESI,EDI\nMOV EDI,0x1\nJMP 0x004027a0\n'
p1754
S'48 89 f2\n89 fe\nbf 01 00 00 00\ne9 f1 1f ff ff\n'
p1755
S'.text:00000000004107a0\n.text:00000000004107a3\n.text:00000000004107a5\n.text:00000000004107aa\n'
p1756
tp1757
sS'src_to_dest_compare'
p1758
(S'\n__stdcall src_to_dest_compare(void * x, void * y)\n'
p1759
V\u000a_Bool src_to_dest_compare(void *x,void *y)\u000a\u000a{\u000a  if (*(long *)x == *(long *)y) {\u000a    return (_Bool)(*(long *)((long)x + 8) == *(long *)((long)y + 8));\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1760
S'MOV RAX,qword ptr [RDI]\nCMP RAX,qword ptr [RSI]\nJNZ 0x00408654\nMOV RAX,qword ptr [RDI + 0x8]\nCMP RAX,qword ptr [RSI + 0x8]\nSETZ AL\nRET\nXOR EAX,EAX\nRET\n'
p1761
S'48 8b 07\n48 3b 06\n75 0c\n48 8b 47 08\n48 3b 46 08\n0f 94 c0\nc3\n31 c0\nc3\n'
p1762
S'.text:0000000000408640\n.text:0000000000408643\n.text:0000000000408646\n.text:0000000000408648\n.text:000000000040864c\n.text:0000000000408650\n.text:0000000000408653\n.text:0000000000408654\n.text:0000000000408656\n'
p1763
tp1764
sS'sparse_copy'
p1765
(S'\n__stdcall sparse_copy(char * buf, size_t buf_size, size_t hole_size, char * src_name, uintmax_t max_n_read, off_t * total_n_read, _Bool * last_write_made_hole)\n'
p1766
V\u000a_Bool sparse_copy(char *buf,size_t buf_size,size_t hole_size,char *src_name,uintmax_t max_n_read,\u000a                 off_t *total_n_read,_Bool *last_write_made_hole)\u000a\u000a{\u000a  uint uVar1;\u000a  bool bVar2;\u000a  _Bool _Var3;\u000a  _Bool _Var4;\u000a  char *pcVar5;\u000a  undefined8 uVar6;\u000a  char *pcVar7;\u000a  uint *puVar8;\u000a  char *pcVar9;\u000a  ulong uVar10;\u000a  void *buf_00;\u000a  char *length;\u000a  byte bVar11;\u000a  byte bVar12;\u000a  char *__nbytes;\u000a  bool bVar13;\u000a  bool bVar14;\u000a  off_t size;\u000a  char *in_stack_00000018;\u000a  char **in_stack_00000020;\u000a  byte *in_stack_00000028;\u000a  char *local_80;\u000a  void *local_68;\u000a  \u000a  *in_stack_00000028 = 0;\u000a  *in_stack_00000020 = (char *)0x0;\u000a  pcVar7 = src_name;\u000a  if (max_n_read != 0) {\u000a    pcVar7 = (char *)max_n_read;\u000a  }\u000a  local_80 = (char *)0x0;\u000a  _Var3 = false;\u000a  do {\u000a    __nbytes = src_name;\u000a    if (in_stack_00000018 < src_name) {\u000a      __nbytes = in_stack_00000018;\u000a    }\u000a    while( true ) {\u000a      if (in_stack_00000018 == (char *)0x0) goto LAB_00408180;\u000a      pcVar9 = (char *)read((int)buf,(void *)hole_size,(size_t)__nbytes);\u000a      if (-1 < (long)pcVar9) break;\u000a      puVar8 = (uint *)__errno_location();\u000a      uVar1 = *puVar8;\u000a      if (uVar1 != 4) {\u000a        uVar6 = dcgettext(0,"error reading %s",5);\u000a        pcVar7 = quotearg_style((char *)0x4);\u000a        uVar10 = (ulong)uVar1;\u000a        goto LAB_00408260;\u000a      }\u000a    }\u000a    if (pcVar9 == (char *)0x0) {\u000aLAB_00408180:\u000a      if (((_Var3 & 1U) != 0) &&\u000a         (_Var3 = create_hole((char *)(buf_size & 0xffffffff),size), _Var3 == false)) {\u000a        return false;\u000a      }\u000a      return true;\u000a    }\u000a    in_stack_00000018 = in_stack_00000018 + -(long)pcVar9;\u000a    *in_stack_00000020 = pcVar9 + (long)*in_stack_00000020;\u000a    __nbytes = pcVar7;\u000a    buf_00 = (void *)hole_size;\u000a    local_68 = (void *)hole_size;\u000a    bVar11 = _Var3 & 1;\u000a    do {\u000a      length = pcVar9;\u000a      if (__nbytes < pcVar9) {\u000a        length = __nbytes;\u000a      }\u000a      if ((max_n_read != 0) && (length != (char *)0x0)) {\u000a        _Var3 = is_nul(buf_00,(size_t)length);\u000a      }\u000a      bVar12 = _Var3 & 1;\u000a      bVar13 = bVar12 != bVar11;\u000a      bVar14 = local_80 != (char *)0x0;\u000a      bVar2 = pcVar9 <= __nbytes;\u000a      if ((bVar14 && bVar13) || (length == (char *)0x0 || bVar12 == 0 && bVar2)) {\u000a        __nbytes = length;\u000a        if (bVar14 && bVar13) {\u000a          __nbytes = (char *)0x0;\u000a        }\u000a        if (bVar11 == 0) {\u000a          pcVar5 = (char *)full_write((void *)(buf_size & 0xffffffff),(size_t)local_68);\u000a          if (pcVar5 != __nbytes + (long)local_80) {\u000a            puVar8 = (uint *)__errno_location();\u000a            uVar1 = *puVar8;\u000a            uVar6 = dcgettext(0,"error writing %s",5);\u000a            pcVar7 = quotearg_style((char *)0x4);\u000a            uVar10 = (ulong)uVar1;\u000aLAB_00408260:\u000a            error(0,uVar10,uVar6,pcVar7);\u000a            return false;\u000a          }\u000a        }\u000a        else {\u000a          _Var4 = create_hole((char *)(buf_size & 0xffffffff),size);\u000a          if (_Var4 == false) {\u000a            return false;\u000a          }\u000a        }\u000a        local_80 = length;\u000a        __nbytes = length;\u000a        local_68 = buf_00;\u000a        if (length == (char *)0x0 || bVar12 == 0 && bVar2) {\u000a          if (length == (char *)0x0) {\u000a            pcVar9 = length;\u000a          }\u000a          if (bVar14 && bVar13) {\u000a            local_80 = length;\u000a            __nbytes = (char *)0x0;\u000a            local_68 = buf_00;\u000a          }\u000a          else {\u000a            local_80 = (char *)0x0;\u000a            __nbytes = length;\u000a            local_68 = buf_00;\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        if ((char *)(0x7fffffffffffffffU - (long)length) < local_80) {\u000a          uVar6 = dcgettext(0,"overflow reading %s",5);\u000a          pcVar7 = quotearg_style((char *)0x4);\u000a          uVar10 = 0;\u000a          goto LAB_00408260;\u000a        }\u000a        local_80 = local_80 + (long)length;\u000a        __nbytes = length;\u000a      }\u000a      buf_00 = (void *)((long)buf_00 + (long)__nbytes);\u000a      pcVar9 = pcVar9 + -(long)__nbytes;\u000a      bVar11 = bVar12;\u000a    } while (pcVar9 != (char *)0x0);\u000a    *in_stack_00000028 = bVar12;\u000a  } while( true );\u000a}\u000a\u000a
p1767
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x58\nMOV dword ptr [RSP + 0x1c],R9D\nMOV R15,R8\nMOV R12,RCX\nMOV R13,RDX\nMOV dword ptr [RSP + 0x4],ESI\nMOV dword ptr [RSP + 0x44],EDI\nMOV RAX,qword ptr [0xb0 + RSP]\nMOV RDX,qword ptr [0xa8 + RSP]\nMOV RSI,qword ptr [0xa0 + RSP]\nMOV R14,qword ptr [0x90 + RSP]\nMOV byte ptr [RAX],0x0\nMOV qword ptr [RDX],0x0\nTEST R15,R15\nMOV RAX,R12\nCMOVNZ RAX,R15\nMOV qword ptr [RSP + 0x50],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x30],R13\nMOV qword ptr [RSP + 0x48],R12\nJMP 0x00407f90\nMOV qword ptr [RSP + 0x8],RCX\nMOV qword ptr [RSP + 0x10],R8\nMOV RAX,qword ptr [0xb0 + RSP]\nMOV byte ptr [RAX],R14B\nMOV R14,qword ptr [0x90 + RSP]\nMOV R12,qword ptr [RSP + 0x48]\nMOV RSI,qword ptr [RSP + 0x38]\nNOP\nCMP RSI,R12\nCMOVC R12,RSI\nMOV qword ptr [RSP + 0x38],RSI\nNOP dword ptr [RAX]\nTEST RSI,RSI\nJZ 0x00408180\nMOV EDI,dword ptr [RSP + 0x44]\nMOV RSI,R13\nMOV RDX,R12\nCALL 0x004025e0\nMOV RBX,RAX\nTEST RBX,RBX\nJNS 0x00407fe0\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nCMP EBP,0x4\nMOV RSI,qword ptr [RSP + 0x38]\nJZ 0x00407fa0\nJMP 0x004081ae\nJZ 0x00408180\nSUB qword ptr [RSP + 0x38],RBX\nMOV RAX,qword ptr [0xa8 + RSP]\nADD qword ptr [RAX],RBX\nMOV R8,qword ptr [RSP + 0x10]\nMOV R14D,R8D\nAND R14B,0x1\nMOV qword ptr [RSP + 0x20],R13\nMOV RDI,R13\nMOV RBP,qword ptr [RSP + 0x50]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x28],R15\nNOP dword ptr [RAX]\nMOV R9D,R14D\nCMP RBP,RBX\nMOV R12,RBX\nCMOVC R12,RBP\nTEST R15,R15\nJZ 0x00408059\nTEST R12,R12\nJZ 0x00408059\nMOV RSI,R12\nMOV R14,RCX\nMOV R13,RDI\nMOV R15D,R9D\nCALL 0x00408480\nMOV R9D,R15D\nMOV R15,qword ptr [RSP + 0x28]\nMOV RDI,R13\nMOV RCX,R14\nMOV R8B,AL\nMOV R14D,R8D\nAND R14B,0x1\nCMP R14B,R9B\nSETNZ AL\nMOV RSI,RCX\nTEST RCX,RCX\nSETNZ R13B\nCMP RBX,RBP\nSETBE CL\nTEST R14B,R14B\nSETZ DL\nAND DL,CL\nTEST R12,R12\nSETZ BPL\nOR BPL,DL\nAND R13B,AL\nJNZ 0x004080c0\nTEST BPL,BPL\nJNZ 0x004080c0\nMOV RAX,0x7fffffffffffffff\nSUB RAX,R12\nMOV RCX,RSI\nCMP RCX,RAX\nMOV R13,qword ptr [RSP + 0x30]\nJA 0x004081e8\nADD RCX,R12\nJMP 0x0040816c\nMOV qword ptr [RSP + 0x8],RDI\nMOV qword ptr [RSP + 0x10],R8\nTEST R13B,0x1\nMOV R15,R12\nMOV EAX,0x0\nCMOVNZ R15,RAX\nADD R15,RSI\nTEST R9B,R9B\nJZ 0x00408104\nMOVZX EDX,byte ptr [RSP + 0x1c]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV RSI,qword ptr [0x98 + RSP]\nMOV RCX,R15\nCALL 0x004082c0\nTEST AL,AL\nJNZ 0x0040811e\nJMP 0x0040821f\nMOV EDI,dword ptr [RSP + 0x4]\nMOV RSI,qword ptr [RSP + 0x20]\nMOV RDX,R15\nCALL 0x004097e0\nCMP RAX,R15\nJNZ 0x00408224\nTEST BPL,BPL\nJZ 0x00408150\nTEST R12,R12\nCMOVZ RBX,R12\nAND R13B,0x1\nMOV RAX,R12\nMOV ECX,0x0\nCMOVNZ RAX,RCX\nTEST R13B,R13B\nCMOVZ R12,RCX\nMOV RCX,R12\nMOV R12,RAX\nJMP 0x00408153\nMOV RCX,R12\nMOV RDI,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x20],RDI\nMOV R15,qword ptr [RSP + 0x28]\nMOV R13,qword ptr [RSP + 0x30]\nMOV R8,qword ptr [RSP + 0x10]\nADD RDI,R12\nSUB RBX,R12\nMOV RBP,R12\nJNZ 0x00408020\nJMP 0x00407f67\nTEST byte ptr [RSP + 0x10],0x1\nJZ 0x004081a6\nMOVZX EDX,byte ptr [RSP + 0x1c]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV RSI,qword ptr [0x98 + RSP]\nMOV RCX,qword ptr [RSP + 0x8]\nCALL 0x004082c0\nTEST AL,AL\nJZ 0x004081e3\nMOV R14B,0x1\nJMP 0x00408265\nMOV RBX,R14\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412a60\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RDX,R15\nJMP 0x00408260\nXOR R14D,R14D\nJMP 0x00408265\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412a82\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [0x90 + RSP]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nJMP 0x00408260\nXOR R14D,R14D\nJMP 0x00408265\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412a71\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [0x98 + RSP]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOV EAX,R14D\nADD RSP,0x58\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1768
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 58\n44 89 4c 24 1c\n4d 89 c7\n49 89 cc\n49 89 d5\n89 74 24 04\n89 7c 24 44\n48 8b 84 24 b0 00 00 00\n48 8b 94 24 a8 00 00 00\n48 8b b4 24 a0 00 00 00\n4c 8b b4 24 90 00 00 00\nc6 00 00\n48 c7 02 00 00 00 00\n4d 85 ff\n4c 89 e0\n49 0f 45 c7\n48 89 44 24 50\n31 c0\n48 89 44 24 08\n31 c0\n48 89 44 24 10\n4c 89 6c 24 30\n4c 89 64 24 48\neb 29\n48 89 4c 24 08\n4c 89 44 24 10\n48 8b 84 24 b0 00 00 00\n44 88 30\n4c 8b b4 24 90 00 00 00\n4c 8b 64 24 48\n48 8b 74 24 38\n66 90\n4c 39 e6\n4c 0f 42 e6\n48 89 74 24 38\n0f 1f 40 00\n48 85 f6\n0f 84 d7 01 00 00\n8b 7c 24 44\n4c 89 ee\n4c 89 e2\ne8 28 a6 ff ff\n48 89 c3\n48 85 db\n79 20\ne8 1b a3 ff ff\n8b 28\n83 fd 04\n48 8b 74 24 38\n74 cf\ne9 d8 01 00 00\n0f 84 9a 01 00 00\n48 29 5c 24 38\n48 8b 84 24 a8 00 00 00\n48 01 18\n4c 8b 44 24 10\n45 89 c6\n41 80 e6 01\n4c 89 6c 24 20\n4c 89 ef\n48 8b 6c 24 50\n48 8b 4c 24 08\n4c 89 7c 24 28\n0f 1f 80 00 00 00 00\n45 89 f1\n48 39 dd\n49 89 dc\n4c 0f 42 e5\n4d 85 ff\n74 27\n4d 85 e4\n74 22\n4c 89 e6\n49 89 ce\n49 89 fd\n45 89 cf\ne8 38 04 00 00\n45 89 f9\n4c 8b 7c 24 28\n4c 89 ef\n4c 89 f1\n41 88 c0\n45 89 c6\n41 80 e6 01\n45 38 ce\n0f 95 c0\n48 89 ce\n48 85 c9\n41 0f 95 c5\n48 39 eb\n0f 96 c1\n45 84 f6\n0f 94 c2\n20 ca\n4d 85 e4\n40 0f 94 c5\n40 08 d5\n41 20 c5\n75 33\n40 84 ed\n75 2e\n48 b8 ff ff ff ff ff ff ff 7f\n4c 29 e0\n48 89 f1\n48 39 c1\n4c 8b 6c 24 30\n0f 87 38 01 00 00\n4c 01 e1\ne9 b4 00 00 00\n48 89 7c 24 08\n4c 89 44 24 10\n41 f6 c5 01\n4d 89 e7\nb8 00 00 00 00\n4c 0f 45 f8\n49 01 f7\n45 84 c9\n74 22\n0f b6 54 24 1c\n8b 7c 24 04\n48 8b b4 24 98 00 00 00\n4c 89 f9\ne8 c5 01 00 00\n84 c0\n75 1f\ne9 1b 01 00 00\n8b 7c 24 04\n48 8b 74 24 20\n4c 89 fa\ne8 cb 16 00 00\n4c 39 f8\n0f 85 06 01 00 00\n40 84 ed\n74 2d\n4d 85 e4\n49 0f 44 dc\n41 80 e5 01\n4c 89 e0\nb9 00 00 00 00\n48 0f 45 c1\n45 84 ed\n4c 0f 44 e1\n4c 89 e1\n49 89 c4\neb 0a\n4c 89 e1\n48 8b 7c 24 08\n48 89 7c 24 20\n4c 8b 7c 24 28\n4c 8b 6c 24 30\n4c 8b 44 24 10\n4c 01 e7\n4c 29 e3\n4c 89 e5\n0f 85 a5 fe ff ff\ne9 e7 fd ff ff\nf6 44 24 10 01\n74 1f\n0f b6 54 24 1c\n8b 7c 24 04\n48 8b b4 24 98 00 00 00\n48 8b 4c 24 08\ne8 1e 01 00 00\n84 c0\n74 3d\n41 b6 01\ne9 b7 00 00 00\n4c 89 f3\n45 31 f6\n31 ff\nbe 60 2a 41 00\nba 05 00 00 00\ne8 5b a2 ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 eb 42 00 00\n48 89 c1\n31 ff\n31 c0\n89 ee\n4c 89 fa\neb 7d\n45 31 f6\neb 7d\n45 31 f6\n31 ff\nbe 82 2a 41 00\nba 05 00 00 00\ne8 24 a2 ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b b4 24 90 00 00 00\ne8 af 42 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\neb 41\n45 31 f6\neb 41\ne8 b7 a0 ff ff\n8b 18\n45 31 f6\n31 ff\nbe 71 2a 41 00\nba 05 00 00 00\ne8 e1 a1 ff ff\n48 89 c5\nbf 04 00 00 00\n48 8b b4 24 98 00 00 00\ne8 6c 42 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 0b a6 ff ff\n44 89 f0\n48 83 c4 58\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1769
S'.text:0000000000407ef0\n.text:0000000000407ef1\n.text:0000000000407ef3\n.text:0000000000407ef5\n.text:0000000000407ef7\n.text:0000000000407ef9\n.text:0000000000407efa\n.text:0000000000407efe\n.text:0000000000407f03\n.text:0000000000407f06\n.text:0000000000407f09\n.text:0000000000407f0c\n.text:0000000000407f10\n.text:0000000000407f14\n.text:0000000000407f1c\n.text:0000000000407f24\n.text:0000000000407f2c\n.text:0000000000407f34\n.text:0000000000407f37\n.text:0000000000407f3e\n.text:0000000000407f41\n.text:0000000000407f44\n.text:0000000000407f48\n.text:0000000000407f4d\n.text:0000000000407f4f\n.text:0000000000407f54\n.text:0000000000407f56\n.text:0000000000407f5b\n.text:0000000000407f60\n.text:0000000000407f65\n.text:0000000000407f67\n.text:0000000000407f6c\n.text:0000000000407f71\n.text:0000000000407f79\n.text:0000000000407f7c\n.text:0000000000407f84\n.text:0000000000407f89\n.text:0000000000407f8e\n.text:0000000000407f90\n.text:0000000000407f93\n.text:0000000000407f97\n.text:0000000000407f9c\n.text:0000000000407fa0\n.text:0000000000407fa3\n.text:0000000000407fa9\n.text:0000000000407fad\n.text:0000000000407fb0\n.text:0000000000407fb3\n.text:0000000000407fb8\n.text:0000000000407fbb\n.text:0000000000407fbe\n.text:0000000000407fc0\n.text:0000000000407fc5\n.text:0000000000407fc7\n.text:0000000000407fca\n.text:0000000000407fcf\n.text:0000000000407fd1\n.text:0000000000407fe0\n.text:0000000000407fe6\n.text:0000000000407feb\n.text:0000000000407ff3\n.text:0000000000407ff6\n.text:0000000000407ffb\n.text:0000000000407ffe\n.text:0000000000408002\n.text:0000000000408007\n.text:000000000040800a\n.text:000000000040800f\n.text:0000000000408014\n.text:0000000000408019\n.text:0000000000408020\n.text:0000000000408023\n.text:0000000000408026\n.text:0000000000408029\n.text:000000000040802d\n.text:0000000000408030\n.text:0000000000408032\n.text:0000000000408035\n.text:0000000000408037\n.text:000000000040803a\n.text:000000000040803d\n.text:0000000000408040\n.text:0000000000408043\n.text:0000000000408048\n.text:000000000040804b\n.text:0000000000408050\n.text:0000000000408053\n.text:0000000000408056\n.text:0000000000408059\n.text:000000000040805c\n.text:0000000000408060\n.text:0000000000408063\n.text:0000000000408066\n.text:0000000000408069\n.text:000000000040806c\n.text:0000000000408070\n.text:0000000000408073\n.text:0000000000408076\n.text:0000000000408079\n.text:000000000040807c\n.text:000000000040807e\n.text:0000000000408081\n.text:0000000000408085\n.text:0000000000408088\n.text:000000000040808b\n.text:000000000040808d\n.text:0000000000408090\n.text:0000000000408092\n.text:000000000040809c\n.text:000000000040809f\n.text:00000000004080a2\n.text:00000000004080a5\n.text:00000000004080aa\n.text:00000000004080b0\n.text:00000000004080b3\n.text:00000000004080c0\n.text:00000000004080c5\n.text:00000000004080ca\n.text:00000000004080ce\n.text:00000000004080d1\n.text:00000000004080d6\n.text:00000000004080da\n.text:00000000004080dd\n.text:00000000004080e0\n.text:00000000004080e2\n.text:00000000004080e7\n.text:00000000004080eb\n.text:00000000004080f3\n.text:00000000004080f6\n.text:00000000004080fb\n.text:00000000004080fd\n.text:00000000004080ff\n.text:0000000000408104\n.text:0000000000408108\n.text:000000000040810d\n.text:0000000000408110\n.text:0000000000408115\n.text:0000000000408118\n.text:000000000040811e\n.text:0000000000408121\n.text:0000000000408123\n.text:0000000000408126\n.text:000000000040812a\n.text:000000000040812e\n.text:0000000000408131\n.text:0000000000408136\n.text:000000000040813a\n.text:000000000040813d\n.text:0000000000408141\n.text:0000000000408144\n.text:0000000000408147\n.text:0000000000408150\n.text:0000000000408153\n.text:0000000000408158\n.text:000000000040815d\n.text:0000000000408162\n.text:0000000000408167\n.text:000000000040816c\n.text:000000000040816f\n.text:0000000000408172\n.text:0000000000408175\n.text:000000000040817b\n.text:0000000000408180\n.text:0000000000408185\n.text:0000000000408187\n.text:000000000040818c\n.text:0000000000408190\n.text:0000000000408198\n.text:000000000040819d\n.text:00000000004081a2\n.text:00000000004081a4\n.text:00000000004081a6\n.text:00000000004081a9\n.text:00000000004081ae\n.text:00000000004081b1\n.text:00000000004081b4\n.text:00000000004081b6\n.text:00000000004081bb\n.text:00000000004081c0\n.text:00000000004081c5\n.text:00000000004081c8\n.text:00000000004081cd\n.text:00000000004081d0\n.text:00000000004081d5\n.text:00000000004081d8\n.text:00000000004081da\n.text:00000000004081dc\n.text:00000000004081de\n.text:00000000004081e1\n.text:00000000004081e3\n.text:00000000004081e6\n.text:00000000004081e8\n.text:00000000004081eb\n.text:00000000004081ed\n.text:00000000004081f2\n.text:00000000004081f7\n.text:00000000004081fc\n.text:00000000004081ff\n.text:0000000000408204\n.text:000000000040820c\n.text:0000000000408211\n.text:0000000000408214\n.text:0000000000408216\n.text:0000000000408218\n.text:000000000040821a\n.text:000000000040821d\n.text:000000000040821f\n.text:0000000000408222\n.text:0000000000408224\n.text:0000000000408229\n.text:000000000040822b\n.text:000000000040822e\n.text:0000000000408230\n.text:0000000000408235\n.text:000000000040823a\n.text:000000000040823f\n.text:0000000000408242\n.text:0000000000408247\n.text:000000000040824f\n.text:0000000000408254\n.text:0000000000408257\n.text:0000000000408259\n.text:000000000040825b\n.text:000000000040825d\n.text:0000000000408260\n.text:0000000000408265\n.text:0000000000408268\n.text:000000000040826c\n.text:000000000040826d\n.text:000000000040826f\n.text:0000000000408271\n.text:0000000000408273\n.text:0000000000408275\n.text:0000000000408276\n'
p1770
tp1771
sS'close_stdout_set_ignore_EPIPE'
p1772
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p1773
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p1774
S'MOV byte ptr [0x0061a948],DIL\nRET\n'
p1775
S'40 88 3d 61 18 21 00\nc3\n'
p1776
S'.text:00000000004090e0\n.text:00000000004090e7\n'
p1777
tp1778
sS'hash_get_n_buckets_used'
p1779
(S'\n__stdcall hash_get_n_buckets_used(Hash_table * table)\n'
p1780
V\u000asize_t hash_get_n_buckets_used(Hash_table *table)\u000a\u000a{\u000a  return table->n_buckets_used;\u000a}\u000a\u000a
p1781
S'MOV RAX,qword ptr [RDI + 0x18]\nRET\n'
p1782
S'48 8b 47 18\nc3\n'
p1783
S'.text:0000000000409850\n.text:0000000000409854\n'
p1784
tp1785
sS'iswprint'
p1786
(S'\n__stdcall iswprint(wint_t __wc)\n'
p1787
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_006183c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p1788
S'JMP qword ptr [0x006183c0]\n'
p1789
S'ff 25 0a 5a 21 00\n'
p1790
S'.plt:00000000004029b0\n'
p1791
tp1792
sS'change_attributes'
p1793
(S'\n__stdcall change_attributes(char * name)\n'
p1794
V\u000a_Bool change_attributes(char *name)\u000a\u000a{\u000a  int iVar1;\u000a  uint *puVar2;\u000a  undefined8 uVar3;\u000a  char *pcVar4;\u000a  uint uVar5;\u000a  \u000a  if (((group_id & owner_id) == 0xffffffff) || (iVar1 = lchown(name,owner_id,group_id), iVar1 == 0))\u000a  {\u000a    iVar1 = chmod(name,mode);\u000a    if (iVar1 == 0) {\u000a      return true;\u000a    }\u000a    puVar2 = (uint *)__errno_location();\u000a    uVar5 = *puVar2;\u000a    pcVar4 = "cannot change permissions of %s";\u000a  }\u000a  else {\u000a    puVar2 = (uint *)__errno_location();\u000a    uVar5 = *puVar2;\u000a    pcVar4 = "cannot change ownership of %s";\u000a  }\u000a  uVar3 = dcgettext(0,pcVar4,5);\u000a  pcVar4 = quotearg_style((char *)0x4);\u000a  error(0,(ulong)uVar5,uVar3,pcVar4);\u000a  return false;\u000a}\u000a\u000a
p1795
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV ESI,dword ptr [0x00618504]\nMOV EDX,dword ptr [0x00618508]\nMOV EAX,EDX\nAND EAX,ESI\nCMP EAX,-0x1\nJZ 0x00403f7f\nMOV RDI,RBX\nCALL 0x004027c0\nTEST EAX,EAX\nJZ 0x00403f7f\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4120ef\nJMP 0x00403fa3\nMOV ESI,dword ptr [0x00618400]\nMOV RDI,RBX\nCALL 0x00402860\nTEST EAX,EAX\nJZ 0x00403fd1\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x41210d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBP\nCALL 0x00402870\nJMP 0x00403fd4\nMOV R14B,0x1\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1796
S'55\n41 57\n41 56\n53\n50\n48 89 fb\n8b 35 b4 45 21 00\n8b 15 b2 45 21 00\n89 d0\n21 f0\n83 f8 ff\n74 20\n48 89 df\ne8 59 e8 ff ff\n85 c0\n74 14\ne8 70 e3 ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe ef 20 41 00\neb 24\n8b 35 7b 44 21 00\n48 89 df\ne8 d3 e8 ff ff\n85 c0\n74 40\ne8 4a e3 ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 0d 21 41 00\nba 05 00 00 00\ne8 73 e4 ff ff\n48 89 c5\nbf 04 00 00 00\n48 89 de\ne8 03 85 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 ea\ne8 a1 e8 ff ff\neb 03\n41 b6 01\n44 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1797
S'.text:0000000000403f40\n.text:0000000000403f41\n.text:0000000000403f43\n.text:0000000000403f45\n.text:0000000000403f46\n.text:0000000000403f47\n.text:0000000000403f4a\n.text:0000000000403f50\n.text:0000000000403f56\n.text:0000000000403f58\n.text:0000000000403f5a\n.text:0000000000403f5d\n.text:0000000000403f5f\n.text:0000000000403f62\n.text:0000000000403f67\n.text:0000000000403f69\n.text:0000000000403f6b\n.text:0000000000403f70\n.text:0000000000403f73\n.text:0000000000403f76\n.text:0000000000403f78\n.text:0000000000403f7d\n.text:0000000000403f7f\n.text:0000000000403f85\n.text:0000000000403f88\n.text:0000000000403f8d\n.text:0000000000403f8f\n.text:0000000000403f91\n.text:0000000000403f96\n.text:0000000000403f99\n.text:0000000000403f9c\n.text:0000000000403f9e\n.text:0000000000403fa3\n.text:0000000000403fa8\n.text:0000000000403fad\n.text:0000000000403fb0\n.text:0000000000403fb5\n.text:0000000000403fb8\n.text:0000000000403fbd\n.text:0000000000403fc0\n.text:0000000000403fc2\n.text:0000000000403fc4\n.text:0000000000403fc7\n.text:0000000000403fca\n.text:0000000000403fcf\n.text:0000000000403fd1\n.text:0000000000403fd4\n.text:0000000000403fd7\n.text:0000000000403fdb\n.text:0000000000403fdc\n.text:0000000000403fde\n.text:0000000000403fe0\n.text:0000000000403fe1\n'
p1798
tp1799
sS'ftruncate'
p1800
(S'\n__stdcall ftruncate(int __fd, __off_t __length)\n'
p1801
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ftruncate(int __fd,__off_t __length)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ftruncate_00618160)();\u000a  return iVar1;\u000a}\u000a\u000a
p1802
S'JMP qword ptr [0x00618160]\n'
p1803
S'ff 25 6a 5c 21 00\n'
p1804
S'.plt:00000000004024f0\n'
p1805
tp1806
sS'c_isspace'
p1807
(S'\n__stdcall c_isspace()\n'
p1808
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1809
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x0040fac5\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1810
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1811
S'.text:000000000040fab0\n.text:000000000040fab3\n.text:000000000040fab6\n.text:000000000040fab8\n.text:000000000040fabd\n.text:000000000040fabf\n.text:000000000040fac1\n.text:000000000040fac4\n.text:000000000040fac5\n.text:000000000040fac7\n'
p1812
tp1813
sS'open'
p1814
(S'\n__stdcall open(char * __file, int __oflag)\n'
p1815
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_00618338)();\u000a  return iVar1;\u000a}\u000a\u000a
p1816
S'JMP qword ptr [0x00618338]\n'
p1817
S'ff 25 92 5a 21 00\n'
p1818
S'.plt:00000000004028a0\n'
p1819
tp1820
sS'make_node_op_equals'
p1821
(S'\n__stdcall make_node_op_equals()\n'
p1822
V\u000amode_change * make_node_op_equals(void)\u000a\u000a{\u000a  mode_change *pmVar1;\u000a  mode_t in_ESI;\u000a  mode_t in_EDI;\u000a  \u000a  pmVar1 = (mode_change *)xmalloc(0x20);\u000a  pmVar1->op = '=';\u000a  pmVar1->flag = 1;\u000a  pmVar1->affected = 0xfff;\u000a  pmVar1->value = in_EDI;\u000a  pmVar1->mentioned = in_ESI;\u000a  pmVar1[1].flag = 0;\u000a  return pmVar1;\u000a}\u000a\u000a
p1823
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBX,ESI\nMOV EBP,EDI\nMOV EDI,0x20\nCALL 0x0040e9b0\nMOV byte ptr [RAX],0x3d\nMOV byte ptr [RAX + 0x1],0x1\nMOV dword ptr [RAX + 0x4],0xfff\nMOV dword ptr [RAX + 0x8],EBP\nMOV dword ptr [RAX + 0xc],EBX\nMOV byte ptr [RAX + 0x11],0x0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1824
S'55\n53\n50\n89 f3\n89 fd\nbf 20 00 00 00\ne8 bf 39 00 00\nc6 00 3d\nc6 40 01 01\nc7 40 04 ff 0f 00 00\n89 68 08\n89 58 0c\nc6 40 11 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1825
S'.text:000000000040afe0\n.text:000000000040afe1\n.text:000000000040afe2\n.text:000000000040afe3\n.text:000000000040afe5\n.text:000000000040afe7\n.text:000000000040afec\n.text:000000000040aff1\n.text:000000000040aff4\n.text:000000000040aff8\n.text:000000000040afff\n.text:000000000040b002\n.text:000000000040b005\n.text:000000000040b009\n.text:000000000040b00d\n.text:000000000040b00e\n.text:000000000040b00f\n'
p1826
tp1827
sS'rotl16'
p1828
(S'\n__stdcall rotl16()\n'
p1829
V\u000auint16_t rotl16(void)\u000a\u000a{\u000a  undefined4 in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (uint16_t)\u000a         ((ushort)(in_EDI >> (0x10 - (byte)in_ESI & 0x1f)) |\u000a         (ushort)(in_EDI << ((byte)in_ESI & 0x1f)));\u000a}\u000a\u000a
p1830
S'MOV EAX,EDI\nMOV ECX,ESI\nSHL EAX,CL\nMOV ECX,0x10\nSUB ECX,ESI\nSHR EDI,CL\nOR EDI,EAX\nMOV EAX,EDI\nRET\n'
p1831
S'89 f8\n89 f1\nd3 e0\nb9 10 00 00 00\n29 f1\nd3 ef\n09 c7\n89 f8\nc3\n'
p1832
S'.text:000000000040f950\n.text:000000000040f952\n.text:000000000040f954\n.text:000000000040f956\n.text:000000000040f95b\n.text:000000000040f95d\n.text:000000000040f95f\n.text:000000000040f961\n.text:000000000040f963\n'
p1833
tp1834
sS'close_stdin_set_file_name'
p1835
(S'\n__stdcall close_stdin_set_file_name(char * file)\n'
p1836
V\u000avoid close_stdin_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p1837
S'MOV qword ptr [0x0061a938],RDI\nRET\n'
p1838
S'48 89 3d 41 19 21 00\nc3\n'
p1839
S'.text:0000000000408ff0\n.text:0000000000408ff7\n'
p1840
tp1841
sS'set_quoting_flags'
p1842
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p1843
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p1844
S'TEST RDI,RDI\nMOV ECX,0x61a960\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p1845
S'48 85 ff\nb9 60 a9 61 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p1846
S'.text:000000000040b340\n.text:000000000040b343\n.text:000000000040b348\n.text:000000000040b34c\n.text:000000000040b34f\n.text:000000000040b352\n'
p1847
tp1848
sS'ignorable_ctx_err'
p1849
(S'\n__stdcall ignorable_ctx_err()\n'
p1850
V\u000a_Bool ignorable_ctx_err(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 0x3d || in_EDI == 0x5f);\u000a}\u000a\u000a
p1851
S'CMP EDI,0x5f\nSETZ CL\nCMP EDI,0x3d\nSETZ AL\nOR AL,CL\nRET\n'
p1852
S'83 ff 5f\n0f 94 c1\n83 ff 3d\n0f 94 c0\n08 c8\nc3\n'
p1853
S'.text:0000000000407a10\n.text:0000000000407a13\n.text:0000000000407a16\n.text:0000000000407a19\n.text:0000000000407a1c\n.text:0000000000407a1e\n'
p1854
tp1855
sS'__fprintf_chk'
p1856
(S'\n__stdcall __fprintf_chk()\n'
p1857
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_006183a8)();\u000a  return;\u000a}\u000a\u000a
p1858
S'JMP qword ptr [0x006183a8]\n'
p1859
S'ff 25 22 5a 21 00\n'
p1860
S'.plt:0000000000402980\n'
p1861
tp1862
sS'get_charset_aliases'
p1863
(S'\n__stdcall get_charset_aliases()\n'
p1864
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_0040feb4_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_0040feb4_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_0040feb4_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_0040feb4_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_0040feb4_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_0040feb4_caseD_9;\u000a      case -1:\u000a        goto switchD_0040feb4_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_0040ff0d:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_0040ff13:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_0040feb4_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_0040ff13;\u000a  }\u000a  goto LAB_0040ff0d;\u000a}\u000a\u000a
p1865
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x0061aac8]\nTEST R15,R15\nJNZ 0x0040ff22\nMOV EDI,0x41435c\nCALL 0x00402270\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040fcd8\nCMP byte ptr [RBX],0x0\nJNZ 0x0040fcdd\nMOV EBX,0x41436c\nMOV RDI,RBX\nCALL 0x00402440\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x0040fcf7\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x0040fcf9\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x00402760\nMOV R13,RAX\nTEST R13,R13\nJZ 0x0040fd4d\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x004026d0\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x0040fd58\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x0040fd75\nMOV R15D,0x413a61\nJMP 0x0040ff1b\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x004028a0\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0040ff0d\nMOV ESI,0x411fb2\nMOV EDI,EBP\nCALL 0x00402810\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040fed4\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x0040fea0\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x00402320\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x00402320\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x0040fea0\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x00402790\nMOV ESI,0x41437b\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x00402550\nCMP EAX,0x2\nJL 0x0040fef4\nMOV RDI,R12\nCALL 0x00402440\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00402440\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040fe7d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x00402800\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x0040fdc4\nJMP 0x0040fedd\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x00402760\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x0040fdc4\nJMP 0x0040fedd\nMOV RDI,RBX\nCALL 0x00402350\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x0040fe07\nJMP qword ptr [0x414220 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x00402350\nCMP EAX,-0x1\nJZ 0x0040fef4\nCMP EAX,0xa\nJNZ 0x0040fec0\nJMP 0x0040fea0\nMOV EDI,EBP\nCALL 0x00402590\nJMP 0x0040ff0d\nMOV RDI,R15\nCALL 0x00402290\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x004104e0\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040ff0d\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x0040ff13\nMOV R15D,0x413a61\nMOV RDI,R13\nCALL 0x00402290\nMOV qword ptr [0x0061aac8],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1866
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d 10 ae 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf 5c 43 41 00\ne8 a5 25 ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb 6c 43 41 00\n48 89 df\ne8 5b 27 ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 59 2a ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 b3 29 ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf 61 3a 41 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 1c 2b ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe b2 1f 41 00\n89 ef\ne8 76 2a ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 3b 25 ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 2b 25 ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 7f 29 ff ff\nbe 7b 43 41 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 2a 27 ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 09 26 ff ff\n49 89 c4\n48 89 ef\ne8 fe 25 ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 96 29 ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 d5 28 ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 a8 24 ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd 20 42 41 00\n48 89 df\ne8 88 24 ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 b5 26 ff ff\neb 30\n4c 89 ff\ne8 ab 23 ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 e4 05 00 00\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf 61 3a 41 00\n4c 89 ef\ne8 75 23 ff ff\n4c 89 3d a6 ab 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1867
S'.text:000000000040fca0\n.text:000000000040fca1\n.text:000000000040fca3\n.text:000000000040fca5\n.text:000000000040fca7\n.text:000000000040fca9\n.text:000000000040fcaa\n.text:000000000040fcb1\n.text:000000000040fcb8\n.text:000000000040fcbb\n.text:000000000040fcc1\n.text:000000000040fcc6\n.text:000000000040fccb\n.text:000000000040fcce\n.text:000000000040fcd1\n.text:000000000040fcd3\n.text:000000000040fcd6\n.text:000000000040fcd8\n.text:000000000040fcdd\n.text:000000000040fce0\n.text:000000000040fce5\n.text:000000000040fce8\n.text:000000000040fceb\n.text:000000000040fced\n.text:000000000040fcf2\n.text:000000000040fcf5\n.text:000000000040fcf7\n.text:000000000040fcf9\n.text:000000000040fcfd\n.text:000000000040fd02\n.text:000000000040fd07\n.text:000000000040fd0a\n.text:000000000040fd0d\n.text:000000000040fd0f\n.text:000000000040fd12\n.text:000000000040fd15\n.text:000000000040fd18\n.text:000000000040fd1d\n.text:000000000040fd20\n.text:000000000040fd23\n.text:000000000040fd26\n.text:000000000040fd28\n.text:000000000040fd2e\n.text:000000000040fd38\n.text:000000000040fd3d\n.text:000000000040fd47\n.text:000000000040fd4b\n.text:000000000040fd4d\n.text:000000000040fd53\n.text:000000000040fd58\n.text:000000000040fd62\n.text:000000000040fd67\n.text:000000000040fd71\n.text:000000000040fd75\n.text:000000000040fd7a\n.text:000000000040fd7c\n.text:000000000040fd7f\n.text:000000000040fd84\n.text:000000000040fd86\n.text:000000000040fd88\n.text:000000000040fd8e\n.text:000000000040fd93\n.text:000000000040fd95\n.text:000000000040fd9a\n.text:000000000040fd9d\n.text:000000000040fda0\n.text:000000000040fda6\n.text:000000000040fdab\n.text:000000000040fdb0\n.text:000000000040fdb2\n.text:000000000040fdb7\n.text:000000000040fdba\n.text:000000000040fdbf\n.text:000000000040fdc4\n.text:000000000040fdc9\n.text:000000000040fdcc\n.text:000000000040fdcf\n.text:000000000040fdd2\n.text:000000000040fdd5\n.text:000000000040fdd8\n.text:000000000040fddd\n.text:000000000040fde0\n.text:000000000040fde5\n.text:000000000040fde8\n.text:000000000040fded\n.text:000000000040fdf0\n.text:000000000040fdf5\n.text:000000000040fdfa\n.text:000000000040fdfd\n.text:000000000040fe02\n.text:000000000040fe07\n.text:000000000040fe09\n.text:000000000040fe0c\n.text:000000000040fe11\n.text:000000000040fe16\n.text:000000000040fe18\n.text:000000000040fe1b\n.text:000000000040fe1e\n.text:000000000040fe21\n.text:000000000040fe26\n.text:000000000040fe29\n.text:000000000040fe2f\n.text:000000000040fe32\n.text:000000000040fe37\n.text:000000000040fe3a\n.text:000000000040fe3d\n.text:000000000040fe42\n.text:000000000040fe45\n.text:000000000040fe4a\n.text:000000000040fe4f\n.text:000000000040fe52\n.text:000000000040fe54\n.text:000000000040fe58\n.text:000000000040fe5d\n.text:000000000040fe62\n.text:000000000040fe65\n.text:000000000040fe6a\n.text:000000000040fe6d\n.text:000000000040fe72\n.text:000000000040fe75\n.text:000000000040fe7b\n.text:000000000040fe7d\n.text:000000000040fe82\n.text:000000000040fe86\n.text:000000000040fe8b\n.text:000000000040fe8e\n.text:000000000040fe91\n.text:000000000040fe97\n.text:000000000040fea0\n.text:000000000040fea3\n.text:000000000040fea8\n.text:000000000040feab\n.text:000000000040feae\n.text:000000000040feb4\n.text:000000000040fec0\n.text:000000000040fec3\n.text:000000000040fec8\n.text:000000000040fecb\n.text:000000000040fecd\n.text:000000000040fed0\n.text:000000000040fed2\n.text:000000000040fed4\n.text:000000000040fed6\n.text:000000000040fedb\n.text:000000000040fedd\n.text:000000000040fee0\n.text:000000000040fee5\n.text:000000000040fee7\n.text:000000000040feec\n.text:000000000040feef\n.text:000000000040fef4\n.text:000000000040fef7\n.text:000000000040fefc\n.text:000000000040ff01\n.text:000000000040ff04\n.text:000000000040ff06\n.text:000000000040ff0b\n.text:000000000040ff0d\n.text:000000000040ff13\n.text:000000000040ff16\n.text:000000000040ff1b\n.text:000000000040ff22\n.text:000000000040ff25\n.text:000000000040ff2c\n.text:000000000040ff2d\n.text:000000000040ff2f\n.text:000000000040ff31\n.text:000000000040ff33\n.text:000000000040ff35\n.text:000000000040ff36\n'
p1868
tp1869
sS'nl_langinfo'
p1870
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p1871
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_006182a8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1872
S'JMP qword ptr [0x006182a8]\n'
p1873
S'ff 25 22 5b 21 00\n'
p1874
S'.plt:0000000000402780\n'
p1875
tp1876
sS'x2realloc'
p1877
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p1878
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p1879
S'MOV EDX,0x1\nJMP 0x0040ea20\n'
p1880
S'ba 01 00 00 00\neb 89\n'
p1881
S'.text:000000000040ea90\n.text:000000000040ea95\n'
p1882
tp1883
sS'restore_cwd'
p1884
(S'\n__stdcall restore_cwd(saved_cwd * cwd)\n'
p1885
V\u000aint restore_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (-1 < cwd->desc) {\u000a    iVar1 = fchdir(cwd->desc);\u000a    return iVar1;\u000a  }\u000a  iVar1 = chdir_long(cwd->name);\u000a  return iVar1;\u000a}\u000a\u000a
p1886
S'MOV EAX,dword ptr [RDI]\nTEST EAX,EAX\nJS 0x0041019d\nMOV EDI,EAX\nJMP 0x004027e0\nMOV RDI,qword ptr [RDI + 0x8]\nJMP 0x004101d0\n'
p1887
S'8b 07\n85 c0\n78 07\n89 c7\ne9 43 26 ff ff\n48 8b 7f 08\ne9 2a 00 00 00\n'
p1888
S'.text:0000000000410190\n.text:0000000000410192\n.text:0000000000410194\n.text:0000000000410196\n.text:0000000000410198\n.text:000000000041019d\n.text:00000000004101a1\n'
p1889
tp1890
sS'mkancesdirs_safe_wd'
p1891
(S'\n__stdcall mkancesdirs_safe_wd(char * from, char * to, cp_options * x)\n'
p1892
V\u000a_Bool mkancesdirs_safe_wd(char *from,char *to,cp_options *x)\u000a\u000a{\u000a  char cVar1;\u000a  uint uVar2;\u000a  bool bVar3;\u000a  int iVar4;\u000a  ptrdiff_t pVar5;\u000a  uint *puVar6;\u000a  undefined8 uVar7;\u000a  char *pcVar8;\u000a  char in_CL;\u000a  bool bVar9;\u000a  savewd local_30;\u000a  \u000a  if ((in_CL == 0) && (*from == '/')) {\u000a    cVar1 = *to;\u000a    savewd_init(&local_30);\u000a    bVar3 = true;\u000a    if (cVar1 == '/') {\u000a      savewd_finish(&local_30);\u000a      bVar3 = false;\u000a    }\u000a  }\u000a  else {\u000a    savewd_init(&local_30);\u000a    bVar3 = true;\u000a  }\u000a  pVar5 = mkancesdirs(to,&local_30,make_ancestor,x);\u000a  bVar9 = pVar5 == -1;\u000a  if (bVar9) {\u000a    puVar6 = (uint *)__errno_location();\u000a    uVar2 = *puVar6;\u000a    uVar7 = dcgettext(0,"cannot create directory %s",5);\u000a    pcVar8 = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar2,uVar7,pcVar8);\u000a  }\u000a  if (bVar3) {\u000a    iVar4 = savewd_restore(&local_30);\u000a    puVar6 = (uint *)__errno_location();\u000a    uVar2 = *puVar6;\u000a    savewd_finish(&local_30);\u000a    if (0 < iVar4) {\u000a      return false;\u000a    }\u000a    if ((!bVar9) && (iVar4 != 0)) {\u000a      uVar7 = dcgettext(0,"cannot create directory %s",5);\u000a      pcVar8 = quotearg_style((char *)0x4);\u000a      error(0,(ulong)uVar2,uVar7,pcVar8);\u000a      return false;\u000a    }\u000a  }\u000a  return (_Bool)!bVar9;\u000a}\u000a\u000a
p1893
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDX\nMOV R14,RSI\nTEST CL,CL\nJNZ 0x00403c60\nCMP byte ptr [RDI],0x2f\nJNZ 0x00403c60\nMOV BPL,byte ptr [R14]\nLEA RDI,[RSP + 0x8]\nCALL 0x0040d020\nMOV R15B,0x1\nCMP BPL,0x2f\nJNZ 0x00403c6d\nLEA RDI,[RSP + 0x8]\nCALL 0x0040d340\nXOR R15D,R15D\nJMP 0x00403c6d\nLEA RDI,[RSP + 0x8]\nCALL 0x0040d020\nMOV R15B,0x1\nLEA RSI,[RSP + 0x8]\nMOV EDX,0x403b80\nMOV RDI,R14\nMOV RCX,RBX\nCALL 0x0040a8b0\nXOR EBP,EBP\nCMP RAX,-0x1\nJNZ 0x00403cc8\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x41203a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOV EBP,0x1\nTEST R15B,R15B\nJZ 0x00403d35\nLEA R12,[RSP + 0x8]\nMOV RDI,R12\nMOV ESI,EBP\nCALL 0x0040d230\nMOV EBX,EAX\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nMOV RDI,R12\nCALL 0x0040d340\nTEST EBX,EBX\nJLE 0x00403cf6\nXOR EBP,EBP\nJMP 0x00403d3b\nTEST EBP,EBP\nJNZ 0x00403d35\nTEST EBX,EBX\nJZ 0x00403d35\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x41203a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBX\nCALL 0x00402870\nJMP 0x00403d3b\nTEST EBP,EBP\nSETZ BPL\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1894
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 d3\n49 89 f6\n84 c9\n75 2a\n80 3f 2f\n75 25\n41 8a 2e\n48 8d 7c 24 08\ne8 d8 93 00 00\n41 b7 01\n40 80 fd 2f\n75 1c\n48 8d 7c 24 08\ne8 e5 96 00 00\n45 31 ff\neb 0d\n48 8d 7c 24 08\ne8 b6 93 00 00\n41 b7 01\n48 8d 74 24 08\nba 80 3b 40 00\n4c 89 f7\n48 89 d9\ne8 2e 6c 00 00\n31 ed\n48 83 f8 ff\n75 3e\ne8 51 e6 ff ff\n8b 18\n31 ff\nbe 3a 20 41 00\nba 05 00 00 00\ne8 7e e7 ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 0e 88 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 ad eb ff ff\nbd 01 00 00 00\n45 84 ff\n74 68\n4c 8d 64 24 08\n4c 89 e7\n89 ee\ne8 54 95 00 00\n89 c3\ne8 fd e5 ff ff\n44 8b 38\n4c 89 e7\ne8 52 96 00 00\n85 db\n7e 04\n31 ed\neb 45\n85 ed\n75 3b\n85 db\n74 37\n31 ed\n31 ff\nbe 3a 20 41 00\nba 05 00 00 00\ne8 0f e7 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 f6\ne8 9f 87 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 da\ne8 3d eb ff ff\neb 06\n85 ed\n40 0f 94 c5\n89 e8\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1895
S'.text:0000000000403c20\n.text:0000000000403c21\n.text:0000000000403c23\n.text:0000000000403c25\n.text:0000000000403c27\n.text:0000000000403c28\n.text:0000000000403c2c\n.text:0000000000403c2f\n.text:0000000000403c32\n.text:0000000000403c34\n.text:0000000000403c36\n.text:0000000000403c39\n.text:0000000000403c3b\n.text:0000000000403c3e\n.text:0000000000403c43\n.text:0000000000403c48\n.text:0000000000403c4b\n.text:0000000000403c4f\n.text:0000000000403c51\n.text:0000000000403c56\n.text:0000000000403c5b\n.text:0000000000403c5e\n.text:0000000000403c60\n.text:0000000000403c65\n.text:0000000000403c6a\n.text:0000000000403c6d\n.text:0000000000403c72\n.text:0000000000403c77\n.text:0000000000403c7a\n.text:0000000000403c7d\n.text:0000000000403c82\n.text:0000000000403c84\n.text:0000000000403c88\n.text:0000000000403c8a\n.text:0000000000403c8f\n.text:0000000000403c91\n.text:0000000000403c93\n.text:0000000000403c98\n.text:0000000000403c9d\n.text:0000000000403ca2\n.text:0000000000403ca5\n.text:0000000000403caa\n.text:0000000000403cad\n.text:0000000000403cb2\n.text:0000000000403cb5\n.text:0000000000403cb7\n.text:0000000000403cb9\n.text:0000000000403cbb\n.text:0000000000403cbe\n.text:0000000000403cc3\n.text:0000000000403cc8\n.text:0000000000403ccb\n.text:0000000000403ccd\n.text:0000000000403cd2\n.text:0000000000403cd5\n.text:0000000000403cd7\n.text:0000000000403cdc\n.text:0000000000403cde\n.text:0000000000403ce3\n.text:0000000000403ce6\n.text:0000000000403ce9\n.text:0000000000403cee\n.text:0000000000403cf0\n.text:0000000000403cf2\n.text:0000000000403cf4\n.text:0000000000403cf6\n.text:0000000000403cf8\n.text:0000000000403cfa\n.text:0000000000403cfc\n.text:0000000000403cfe\n.text:0000000000403d00\n.text:0000000000403d02\n.text:0000000000403d07\n.text:0000000000403d0c\n.text:0000000000403d11\n.text:0000000000403d14\n.text:0000000000403d19\n.text:0000000000403d1c\n.text:0000000000403d21\n.text:0000000000403d24\n.text:0000000000403d26\n.text:0000000000403d28\n.text:0000000000403d2b\n.text:0000000000403d2e\n.text:0000000000403d33\n.text:0000000000403d35\n.text:0000000000403d37\n.text:0000000000403d3b\n.text:0000000000403d3d\n.text:0000000000403d41\n.text:0000000000403d42\n.text:0000000000403d44\n.text:0000000000403d46\n.text:0000000000403d48\n.text:0000000000403d49\n'
p1896
tp1897
sS'quotearg_n_style_mem'
p1898
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p1899
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p1900
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x0040c420\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x0040c1f0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1901
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1902
S'.text:000000000040c480\n.text:000000000040c481\n.text:000000000040c483\n.text:000000000040c485\n.text:000000000040c486\n.text:000000000040c48a\n.text:000000000040c48d\n.text:000000000040c490\n.text:000000000040c492\n.text:000000000040c495\n.text:000000000040c498\n.text:000000000040c49d\n.text:000000000040c49f\n.text:000000000040c4a2\n.text:000000000040c4a5\n.text:000000000040c4a8\n.text:000000000040c4ad\n.text:000000000040c4b1\n.text:000000000040c4b2\n.text:000000000040c4b4\n.text:000000000040c4b6\n.text:000000000040c4b7\n'
p1903
tp1904
sS'free_entry'
p1905
(S'\n__stdcall free_entry(Hash_table * table, hash_entry * entry)\n'
p1906
V\u000avoid free_entry(Hash_table *table,hash_entry *entry)\u000a\u000a{\u000a  entry->data = (void *)0x0;\u000a  entry->next = table->free_entry_list;\u000a  table->free_entry_list = entry;\u000a  return;\u000a}\u000a\u000a
p1907
S'MOV qword ptr [RSI],0x0\nMOV RAX,qword ptr [RDI + 0x48]\nMOV qword ptr [RSI + 0x8],RAX\nMOV qword ptr [RDI + 0x48],RSI\nRET\n'
p1908
S'48 c7 06 00 00 00 00\n48 8b 47 48\n48 89 46 08\n48 89 77 48\nc3\n'
p1909
S'.text:000000000040a7d0\n.text:000000000040a7d7\n.text:000000000040a7db\n.text:000000000040a7df\n.text:000000000040a7e3\n'
p1910
tp1911
sS'bkm_scale_by_power'
p1912
(S'\n__stdcall bkm_scale_by_power(ulong * x)\n'
p1913
V\u000astrtol_error bkm_scale_by_power(ulong *x)\u000a\u000a{\u000a  strtol_error sVar1;\u000a  int in_EDX;\u000a  strtol_error sVar2;\u000a  \u000a  sVar2 = LONGINT_OK;\u000a  if (in_EDX != 0) {\u000a    do {\u000a      sVar1 = bkm_scale(x);\u000a      sVar2 = sVar2 | sVar1;\u000a      in_EDX = in_EDX + -1;\u000a    } while (in_EDX != 0);\u000a  }\u000a  return sVar2;\u000a}\u000a\u000a
p1914
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,EDX\nMOV R14D,ESI\nMOV R15,RDI\nXOR EBP,EBP\nTEST EBX,EBX\nJZ 0x0040ee41\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R15\nMOV ESI,R14D\nCALL 0x0040ede0\nOR EBP,EAX\nDEC EBX\nJNZ 0x0040ee30\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1915
S'55\n41 57\n41 56\n53\n50\n89 d3\n41 89 f6\n49 89 ff\n31 ed\n85 db\n74 1c\n66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ff\n44 89 f6\ne8 a5 ff ff ff\n09 c5\nff cb\n75 ef\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1916
S'.text:000000000040ee10\n.text:000000000040ee11\n.text:000000000040ee13\n.text:000000000040ee15\n.text:000000000040ee16\n.text:000000000040ee17\n.text:000000000040ee19\n.text:000000000040ee1c\n.text:000000000040ee1f\n.text:000000000040ee21\n.text:000000000040ee23\n.text:000000000040ee25\n.text:000000000040ee30\n.text:000000000040ee33\n.text:000000000040ee36\n.text:000000000040ee3b\n.text:000000000040ee3d\n.text:000000000040ee3f\n.text:000000000040ee41\n.text:000000000040ee43\n.text:000000000040ee47\n.text:000000000040ee48\n.text:000000000040ee4a\n.text:000000000040ee4c\n.text:000000000040ee4d\n'
p1917
tp1918
sS'argmatch_valid'
p1919
(S'\n__stdcall argmatch_valid(char * * arglist, char * vallist, size_t valsize)\n'
p1920
V\u000avoid argmatch_valid(char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  int iVar2;\u000a  char *__s;\u000a  char *__s1;\u000a  long lVar3;\u000a  \u000a  __s = (char *)dcgettext(0,"Valid arguments are:",5);\u000a  fputs_unlocked(__s,stderr);\u000a  __s = *arglist;\u000a  if (__s != (char *)0x0) {\u000a    __s1 = (char *)0x0;\u000a    lVar3 = 0;\u000a    do {\u000a      pFVar1 = stderr;\u000a      if (lVar3 == 0) {\u000aLAB_0040f787:\u000a        __s = quote(__s);\u000a        __fprintf_chk(pFVar1,1,"\u005cn  - %s",__s);\u000a        __s1 = vallist;\u000a      }\u000a      else {\u000a        iVar2 = memcmp(__s1,vallist,valsize);\u000a        if (iVar2 != 0) goto LAB_0040f787;\u000a        __s = quote(__s);\u000a        __fprintf_chk(pFVar1,1,0x412556,__s);\u000a      }\u000a      __s = arglist[lVar3 + 1];\u000a      lVar3 = lVar3 + 1;\u000a      vallist = vallist + valsize;\u000a    } while (__s != (char *)0x0);\u000a  }\u000a  (*(code *)PTR_putc_unlocked_00618290)(10,stderr);\u000a  return;\u000a}\u000a\u000a
p1921
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R13,RSI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV ESI,0x413f0f\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184e0]\nMOV RDI,RAX\nCALL 0x00402610\nMOV qword ptr [RSP],RBX\nMOV RBX,qword ptr [RBX]\nTEST RBX,RBX\nMOV R12,qword ptr [0x006184e0]\nJZ 0x0040f7ea\nXOR EBP,EBP\nXOR R15D,R15D\nTEST R15,R15\nJZ 0x0040f787\nMOV RDI,RBP\nMOV RSI,R13\nMOV RDX,R14\nCALL 0x004025f0\nTEST EAX,EAX\nJZ 0x0040f7b0\nMOV RDI,RBX\nCALL 0x0040c6e0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x413f24\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00402980\nMOV RBP,R13\nJMP 0x0040f7cf\nMOV RDI,RBX\nCALL 0x0040c6e0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x412556\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00402980\nMOV RAX,qword ptr [RSP]\nMOV RBX,qword ptr [RAX + R15*0x8 + 0x8]\nINC R15\nMOV R12,qword ptr [0x006184e0]\nADD R13,R14\nTEST RBX,RBX\nJNZ 0x0040f770\nMOV EDI,0xa\nMOV RSI,R12\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00402750\n'
p1922
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f5\n48 89 fb\n31 ff\nbe 0f 3f 41 00\nba 05 00 00 00\ne8 db 2c ff ff\n48 8b 35 94 8d 20 00\n48 89 c7\ne8 bc 2e ff ff\n48 89 1c 24\n48 8b 1b\n48 85 db\n4c 8b 25 7b 8d 20 00\n0f 84 7f 00 00 00\n31 ed\n45 31 ff\n4d 85 ff\n74 12\n48 89 ef\n4c 89 ee\n4c 89 f2\ne8 6d 2e ff ff\n85 c0\n74 29\n48 89 df\ne8 51 cf ff ff\n48 89 c1\nbe 01 00 00 00\nba 24 3f 41 00\n31 c0\n4c 89 e7\ne8 da 31 ff ff\n4c 89 ed\neb 24\n48 89 df\ne8 28 cf ff ff\n48 89 c1\nbe 01 00 00 00\nba 56 25 41 00\n31 c0\n4c 89 e7\ne8 b1 31 ff ff\n48 8b 04 24\n4a 8b 5c f8 08\n49 ff c7\n4c 8b 25 fe 8c 20 00\n4d 01 f5\n48 85 db\n75 86\nbf 0a 00 00 00\n4c 89 e6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 4b 2f ff ff\n'
p1923
S'.text:000000000040f720\n.text:000000000040f721\n.text:000000000040f723\n.text:000000000040f725\n.text:000000000040f727\n.text:000000000040f729\n.text:000000000040f72a\n.text:000000000040f72b\n.text:000000000040f72e\n.text:000000000040f731\n.text:000000000040f734\n.text:000000000040f736\n.text:000000000040f73b\n.text:000000000040f740\n.text:000000000040f745\n.text:000000000040f74c\n.text:000000000040f74f\n.text:000000000040f754\n.text:000000000040f758\n.text:000000000040f75b\n.text:000000000040f75e\n.text:000000000040f765\n.text:000000000040f76b\n.text:000000000040f76d\n.text:000000000040f770\n.text:000000000040f773\n.text:000000000040f775\n.text:000000000040f778\n.text:000000000040f77b\n.text:000000000040f77e\n.text:000000000040f783\n.text:000000000040f785\n.text:000000000040f787\n.text:000000000040f78a\n.text:000000000040f78f\n.text:000000000040f792\n.text:000000000040f797\n.text:000000000040f79c\n.text:000000000040f79e\n.text:000000000040f7a1\n.text:000000000040f7a6\n.text:000000000040f7a9\n.text:000000000040f7b0\n.text:000000000040f7b3\n.text:000000000040f7b8\n.text:000000000040f7bb\n.text:000000000040f7c0\n.text:000000000040f7c5\n.text:000000000040f7c7\n.text:000000000040f7ca\n.text:000000000040f7cf\n.text:000000000040f7d3\n.text:000000000040f7d8\n.text:000000000040f7db\n.text:000000000040f7e2\n.text:000000000040f7e5\n.text:000000000040f7e8\n.text:000000000040f7ea\n.text:000000000040f7ef\n.text:000000000040f7f2\n.text:000000000040f7f6\n.text:000000000040f7f7\n.text:000000000040f7f9\n.text:000000000040f7fb\n.text:000000000040f7fd\n.text:000000000040f7ff\n.text:000000000040f800\n'
p1924
tp1925
sS'write_zeros'
p1926
(S'\n__stdcall write_zeros(off_t n_bytes)\n'
p1927
V\u000a_Bool write_zeros(off_t n_bytes)\u000a\u000a{\u000a  char *zeros;\u000a  char fallback [1024];\u000a  size_t sVar1;\u000a  ulong uVar2;\u000a  ulong in_RSI;\u000a  size_t n;\u000a  \u000a  if (zeros == (char *)0x0) {\u000a    n = 0x20000;\u000a    if (write_zeros_nz != 0) {\u000a      n = 0x400;\u000a    }\u000a    zeros = (char *)rpl_calloc(n,1);\u000a    if (zeros == (char *)0x0) {\u000a      zeros = &ram0x0061a530;\u000a      write_zeros_nz = 1;\u000a    }\u000a  }\u000a  do {\u000a    if (in_RSI == 0) {\u000a      return true;\u000a    }\u000a    uVar2 = 0x20000;\u000a    if (write_zeros_nz != 0) {\u000a      uVar2 = 0x400;\u000a    }\u000a    if (in_RSI <= uVar2) {\u000a      uVar2 = in_RSI;\u000a    }\u000a    sVar1 = full_write((void *)(n_bytes & 0xffffffff),(size_t)zeros);\u000a    n = 0;\u000a    if (sVar1 == uVar2) {\u000a      n = uVar2;\u000a    }\u000a    in_RSI = in_RSI - n;\u000a  } while (sVar1 == uVar2);\u000a  return false;\u000a}\u000a\u000a
p1928
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV R14D,EDI\nCMP qword ptr [0x0061a520],0x0\nJNZ 0x004083b5\nMOV AL,byte ptr [0x0061a528]\nTEST AL,AL\nMOV EAX,0x400\nMOV EDI,0x20000\nCMOVNZ RDI,RAX\nMOV ESI,0x1\nCALL 0x0040eec0\nMOV qword ptr [0x0061a520],RAX\nTEST RAX,RAX\nJNZ 0x004083b5\nMOV qword ptr [0x0061a520],0x61a530\nMOV byte ptr [0x0061a528],0x1\nMOV R15D,0x400\nNOP dword ptr [RAX + RAX*0x1]\nTEST RBX,RBX\nJZ 0x0040840b\nMOVZX EAX,byte ptr [0x0061a528]\nTEST AL,AL\nMOV EBP,0x20000\nCMOVNZ RBP,R15\nCMP RBP,RBX\nCMOVNC RBP,RBX\nMOV RSI,qword ptr [0x0061a520]\nMOV EDI,R14D\nMOV RDX,RBP\nCALL 0x004097e0\nMOV RCX,RAX\nXOR EAX,EAX\nCMP RCX,RBP\nMOV EDX,0x0\nCMOVZ RDX,RBP\nSUB RBX,RDX\nCMP RCX,RBP\nJZ 0x004083c0\nJMP 0x0040840d\nMOV AL,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1929
S'55\n41 57\n41 56\n53\n50\n48 89 f3\n41 89 fe\n48 83 3d ab 21 21 00 00\n75 3e\n8a 05 ab 21 21 00\n84 c0\nb8 00 04 00 00\nbf 00 00 02 00\n48 0f 45 f8\nbe 01 00 00 00\ne8 29 6b 00 00\n48 89 05 82 21 21 00\n48 85 c0\n75 12\n48 c7 05 72 21 21 00 30 a5 61 00\nc6 05 73 21 21 00 01\n41 bf 00 04 00 00\n0f 1f 44 00 00\n48 85 db\n74 46\n0f b6 05 5c 21 21 00\n84 c0\nbd 00 00 02 00\n49 0f 45 ef\n48 39 dd\n48 0f 43 eb\n48 8b 35 3b 21 21 00\n44 89 f7\n48 89 ea\ne8 f0 13 00 00\n48 89 c1\n31 c0\n48 39 e9\nba 00 00 00 00\n48 0f 44 d5\n48 29 d3\n48 39 e9\n74 b7\neb 02\nb0 01\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1930
S'.text:0000000000408360\n.text:0000000000408361\n.text:0000000000408363\n.text:0000000000408365\n.text:0000000000408366\n.text:0000000000408367\n.text:000000000040836a\n.text:000000000040836d\n.text:0000000000408375\n.text:0000000000408377\n.text:000000000040837d\n.text:000000000040837f\n.text:0000000000408384\n.text:0000000000408389\n.text:000000000040838d\n.text:0000000000408392\n.text:0000000000408397\n.text:000000000040839e\n.text:00000000004083a1\n.text:00000000004083a3\n.text:00000000004083ae\n.text:00000000004083b5\n.text:00000000004083bb\n.text:00000000004083c0\n.text:00000000004083c3\n.text:00000000004083c5\n.text:00000000004083cc\n.text:00000000004083ce\n.text:00000000004083d3\n.text:00000000004083d7\n.text:00000000004083da\n.text:00000000004083de\n.text:00000000004083e5\n.text:00000000004083e8\n.text:00000000004083eb\n.text:00000000004083f0\n.text:00000000004083f3\n.text:00000000004083f5\n.text:00000000004083f8\n.text:00000000004083fd\n.text:0000000000408401\n.text:0000000000408404\n.text:0000000000408407\n.text:0000000000408409\n.text:000000000040840b\n.text:000000000040840d\n.text:0000000000408411\n.text:0000000000408412\n.text:0000000000408414\n.text:0000000000408416\n.text:0000000000408417\n'
p1931
tp1932
sS'savewd_save'
p1933
(S'\n__stdcall savewd_save(savewd * wd)\n'
p1934
V\u000a_Bool savewd_save(savewd *wd)\u000a\u000a{\u000a  anon_enum_32 aVar1;\u000a  int iVar2;\u000a  __pid_t _Var3;\u000a  int *piVar4;\u000a  \u000a  aVar1 = wd->state;\u000a  if (FINAL_STATE < aVar1) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0","lib/savewd.c",0x5b,"_Bool savewd_save(struct savewd *)");\u000a  }\u000a  if ((0x36U >> (aVar1 & 0x1f) & 1) != 0) {\u000a    return false;\u000a  }\u000a  if (aVar1 == INITIAL_STATE) {\u000a    iVar2 = open_safer(".",0);\u000a    if (-1 < iVar2) {\u000a      wd->state = FD_STATE;\u000a      wd->val = iVar2;\u000a      return false;\u000a    }\u000a    piVar4 = __errno_location();\u000a    iVar2 = *piVar4;\u000a    if ((iVar2 != 0xd) && (iVar2 != 0x74)) {\u000a      wd->state = ERROR_STATE;\u000a      wd->val = iVar2;\u000a      return false;\u000a    }\u000a    *wd = (savewd)0xffffffff00000003;\u000a  }\u000a  if ((int)wd->val < 0) {\u000a    _Var3 = fork();\u000a    wd->val = _Var3;\u000a    if (_Var3 != 0) {\u000a      if (0 < _Var3) {\u000a        return true;\u000a      }\u000a      wd->state = ERROR_STATE;\u000a      piVar4 = __errno_location();\u000a      wd->val = *piVar4;\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1935
S'PUSH RBX\nMOV RBX,RDI\nMOV EAX,dword ptr [RBX]\nCMP EAX,0x5\nJA 0x0040d20f\nMOV ECX,0x36\nBT ECX,EAX\nJNC 0x0040d19d\nXOR EAX,EAX\nPOP RBX\nRET\nTEST EAX,EAX\nJNZ 0x0040d1dc\nMOV EDI,0x4125eb\nXOR ESI,ESI\nXOR EAX,EAX\nCALL 0x004093b0\nTEST EAX,EAX\nJS 0x0040d1be\nMOV dword ptr [RBX],0x1\nMOV dword ptr [RBX + 0x4],EAX\nJMP 0x0040d199\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nCMP EAX,0xd\nJZ 0x0040d1cf\nCMP EAX,0x74\nJNZ 0x0040d204\nMOV RAX,-0xfffffffd\nMOV qword ptr [RBX],RAX\nCMP dword ptr [RBX + 0x4],0x0\nJNS 0x0040d199\nCALL 0x004029c0\nMOV dword ptr [RBX + 0x4],EAX\nTEST EAX,EAX\nJZ 0x0040d199\nMOV AL,0x1\nJG 0x0040d19b\nMOV dword ptr [RBX],0x4\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RBX + 0x4],EAX\nJMP 0x0040d199\nMOV dword ptr [RBX],0x4\nMOV dword ptr [RBX + 0x4],EAX\nJMP 0x0040d199\nMOV EDI,0x4138e1\nMOV ESI,0x413843\nMOV EDX,0x5b\nMOV ECX,0x413907\nCALL 0x00402520\n'
p1936
S'53\n48 89 fb\n8b 03\n83 f8 05\n0f 87 80 00 00 00\nb9 36 00 00 00\n0f a3 c1\n73 04\n31 c0\n5b\nc3\n85 c0\n75 3b\nbf eb 25 41 00\n31 f6\n31 c0\ne8 01 c2 ff ff\n85 c0\n78 0b\nc7 03 01 00 00 00\n89 43 04\neb db\ne8 1d 51 ff ff\n8b 00\n83 f8 0d\n74 05\n83 f8 74\n75 35\n48 b8 03 00 00 00 ff ff ff ff\n48 89 03\n83 7b 04 00\n79 b7\ne8 d9 57 ff ff\n89 43 04\n85 c0\n74 ab\nb0 01\n7f a9\nc7 03 04 00 00 00\ne8 e3 50 ff ff\n8b 00\n89 43 04\neb 95\nc7 03 04 00 00 00\n89 43 04\neb 8a\nbf e1 38 41 00\nbe 43 38 41 00\nba 5b 00 00 00\nb9 07 39 41 00\ne8 f8 52 ff ff\n'
p1937
S'.text:000000000040d180\n.text:000000000040d181\n.text:000000000040d184\n.text:000000000040d186\n.text:000000000040d189\n.text:000000000040d18f\n.text:000000000040d194\n.text:000000000040d197\n.text:000000000040d199\n.text:000000000040d19b\n.text:000000000040d19c\n.text:000000000040d19d\n.text:000000000040d19f\n.text:000000000040d1a1\n.text:000000000040d1a6\n.text:000000000040d1a8\n.text:000000000040d1aa\n.text:000000000040d1af\n.text:000000000040d1b1\n.text:000000000040d1b3\n.text:000000000040d1b9\n.text:000000000040d1bc\n.text:000000000040d1be\n.text:000000000040d1c3\n.text:000000000040d1c5\n.text:000000000040d1c8\n.text:000000000040d1ca\n.text:000000000040d1cd\n.text:000000000040d1cf\n.text:000000000040d1d9\n.text:000000000040d1dc\n.text:000000000040d1e0\n.text:000000000040d1e2\n.text:000000000040d1e7\n.text:000000000040d1ea\n.text:000000000040d1ec\n.text:000000000040d1ee\n.text:000000000040d1f0\n.text:000000000040d1f2\n.text:000000000040d1f8\n.text:000000000040d1fd\n.text:000000000040d1ff\n.text:000000000040d202\n.text:000000000040d204\n.text:000000000040d20a\n.text:000000000040d20d\n.text:000000000040d20f\n.text:000000000040d214\n.text:000000000040d219\n.text:000000000040d21e\n.text:000000000040d223\n'
p1938
tp1939
sS'extent_copy'
p1940
(S'\n__stdcall extent_copy(char * buf, size_t buf_size, size_t hole_size, off_t src_total_size, char * dst_name, _Bool * require_normal_copy)\n'
p1941
V\u000a_Bool extent_copy(char *buf,size_t buf_size,size_t hole_size,off_t src_total_size,char *dst_name,\u000a                 _Bool *require_normal_copy)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  ulong uVar3;\u000a  __off_t _Var4;\u000a  undefined8 uVar5;\u000a  char *pcVar6;\u000a  uint *puVar7;\u000a  uint uVar8;\u000a  _Bool *p_Var9;\u000a  byte bVar10;\u000a  ulong uVar11;\u000a  _Bool *__offset;\u000a  bool bVar12;\u000a  int in_stack_00000008;\u000a  _Bool *last_write_made_hole;\u000a  off_t size;\u000a  undefined *in_stack_00000020;\u000a  byte local_a1;\u000a  _Bool *local_98;\u000a  _Bool *local_90;\u000a  _Bool *local_88;\u000a  long local_68;\u000a  extent_scan local_60;\u000a  \u000a  extent_scan_init((extent_scan *)buf);\u000a  *in_stack_00000020 = 0;\u000a  local_88 = (_Bool *)0x0;\u000a  if (in_stack_00000008 != 3) {\u000a    dst_name = (char *)0x0;\u000a  }\u000a  bVar10 = 1;\u000a  local_98 = (_Bool *)0x0;\u000a  local_90 = (_Bool *)0x0;\u000a  do {\u000a    _Var1 = extent_scan_read(&local_60);\u000a    if (_Var1 == false) {\u000a      if (local_60.hit_final_extent == false) {\u000a        if (local_60.initial_scan_failed != false) {\u000a          *in_stack_00000020 = 1;\u000a          return false;\u000a        }\u000a        puVar7 = (uint *)__errno_location();\u000a        uVar8 = *puVar7;\u000a        uVar5 = dcgettext(0,"%s: failed to get extents info",5);\u000a        pcVar6 = quotearg_n_style_colon((char *)0x0);\u000a        goto LAB_00407e81;\u000a      }\u000a      break;\u000a    }\u000a    if (local_60.ei_count != 0) {\u000a      uVar3 = 0;\u000a      uVar11 = 1;\u000a      do {\u000a        __offset = (_Bool *)local_60.ext_info[uVar3].ext_logical;\u000a        p_Var9 = (_Bool *)local_60.ext_info[uVar3].ext_length;\u000a        if ((long)require_normal_copy < (long)(p_Var9 + (long)__offset)) {\u000a          if ((long)require_normal_copy < (long)__offset) {\u000a            __offset = require_normal_copy;\u000a          }\u000a          p_Var9 = require_normal_copy + -(long)__offset;\u000a        }\u000a        if (__offset + -(long)local_90 == local_88) {\u000aLAB_00407c01:\u000a          bVar10 = 0;\u000aLAB_00407c04:\u000a          _Var1 = sparse_copy((char *)((ulong)buf & 0xffffffff),buf_size & 0xffffffff,hole_size,\u000a                              (char *)src_total_size,(uintmax_t)dst_name,(off_t *)0x1,\u000a                              last_write_made_hole);\u000a          local_90 = __offset;\u000a          local_88 = p_Var9;\u000a          if (_Var1 == false) goto LAB_00407d58;\u000a          local_98 = __offset + local_68;\u000a          if (local_68 != 0) {\u000a            bVar10 = local_a1;\u000a          }\u000a          iVar2 = 0;\u000a          local_90 = __offset;\u000a          local_88 = p_Var9;\u000a          if (local_98 == require_normal_copy) {\u000a            local_60.hit_final_extent = true;\u000a            iVar2 = 4;\u000a            local_90 = __offset;\u000a            local_88 = p_Var9;\u000a          }\u000a        }\u000a        else {\u000a          _Var4 = lseek((int)buf,(__off_t)__offset,0);\u000a          if (_Var4 < 0) {\u000a            puVar7 = (uint *)__errno_location();\u000a            uVar8 = *puVar7;\u000a            uVar5 = dcgettext(0,"cannot lseek %s",5);\u000a            quotearg_style((char *)0x4);\u000a          }\u000a          else {\u000a            if (in_stack_00000008 != 1) {\u000a              _Var1 = create_hole((char *)(buf_size & 0xffffffff),size);\u000a              bVar10 = 1;\u000a              if (_Var1 != false) goto LAB_00407c04;\u000a              bVar10 = 0;\u000a              goto LAB_00407d58;\u000a            }\u000a            _Var1 = write_zeros(buf_size & 0xffffffff);\u000a            if (_Var1 != false) {\u000a              local_98 = __offset;\u000a              if ((long)require_normal_copy < (long)__offset) {\u000a                local_98 = require_normal_copy;\u000a              }\u000a              goto LAB_00407c01;\u000a            }\u000a            puVar7 = (uint *)__errno_location();\u000a            uVar8 = *puVar7;\u000a            uVar5 = dcgettext(0,"%s: write failed",5);\u000a            quotearg_n_style_colon((char *)0x0);\u000a          }\u000a          bVar10 = 0;\u000a          error(0,(ulong)uVar8,uVar5);\u000aLAB_00407d58:\u000a          extent_scan_free(&local_60);\u000a          iVar2 = 1;\u000a        }\u000a        if (iVar2 != 0) {\u000a          if ((char)iVar2 != 4) {\u000a            if (iVar2 != 0) {\u000a              return false;\u000a            }\u000a            goto LAB_00407daa;\u000a          }\u000a          break;\u000a        }\u000a        bVar12 = uVar11 < local_60.ei_count;\u000a        uVar3 = uVar11;\u000a        uVar11 = (ulong)((int)uVar11 + 1);\u000a      } while (bVar12);\u000a    }\u000a    extent_scan_free(&local_60);\u000aLAB_00407daa:\u000a  } while (local_60.hit_final_extent == false);\u000a  if (((long)local_98 < (long)require_normal_copy) || ((bVar10 & 1) != 0)) {\u000a    if (in_stack_00000008 == 1) {\u000a      _Var1 = write_zeros(buf_size & 0xffffffff);\u000a      if (_Var1 != false) {\u000a        return true;\u000a      }\u000a    }\u000a    else {\u000a      iVar2 = ftruncate((int)buf_size,(__off_t)require_normal_copy);\u000a      if (iVar2 == 0) goto LAB_00407ddb;\u000a    }\u000a    puVar7 = (uint *)__errno_location();\u000a    uVar8 = *puVar7;\u000a    pcVar6 = "failed to extend %s";\u000a  }\u000a  else {\u000aLAB_00407ddb:\u000a    if (in_stack_00000008 != 3) {\u000a      return true;\u000a    }\u000a    if ((long)require_normal_copy <= (long)local_98) {\u000a      return true;\u000a    }\u000a    iVar2 = punch_hole(buf_size & 0xffffffff,(off_t)local_98);\u000a    if (-1 < iVar2) {\u000a      return true;\u000a    }\u000a    puVar7 = (uint *)__errno_location();\u000a    uVar8 = *puVar7;\u000a    pcVar6 = "error deallocating %s";\u000a  }\u000a  uVar5 = dcgettext(0,pcVar6,5);\u000a  pcVar6 = quotearg_style((char *)0x4);\u000aLAB_00407e81:\u000a  error(0,(ulong)uVar8,uVar5,pcVar6);\u000a  return false;\u000a}\u000a\u000a
p1942
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x78\nMOV R12,R9\nMOV RBX,R8\nMOV qword ptr [RSP + 0x30],RCX\nMOV qword ptr [RSP + 0x28],RDX\nMOV dword ptr [RSP + 0x8],ESI\nMOV R14,qword ptr [0xc8 + RSP]\nMOV RBP,qword ptr [0xc0 + RSP]\nLEA RSI,[RSP + 0x48]\nMOV dword ptr [RSP + 0xc],EDI\nCALL 0x00408670\nMOV byte ptr [R14],0x0\nXOR ECX,ECX\nCMP dword ptr [0xb0 + RSP],0x3\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x20],RAX\nCMOVNZ RBX,RCX\nMOV qword ptr [RSP + 0x38],RBX\nMOV R13B,0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nNOP word ptr CS:[RAX + RAX*0x1]\nLEA RDI,[RSP + 0x48]\nCALL 0x004086a0\nTEST AL,AL\nJZ 0x00407dc0\nCMP qword ptr [RSP + 0x60],0x0\nJZ 0x00407da0\nMOV R14D,0x1\nXOR EAX,EAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RCX,qword ptr [RSP + 0x70]\nLEA RAX,[RAX + RAX*0x2]\nMOV R15,qword ptr [RCX + RAX*0x8]\nMOV RBX,qword ptr [RCX + RAX*0x8 + 0x8]\nLEA RAX,[RBX + R15*0x1]\nCMP RAX,R12\nJLE 0x00407ba8\nCMP R15,R12\nCMOVG R15,R12\nMOV RBX,R12\nSUB RBX,R15\nMOV R13,R15\nSUB R13,qword ptr [RSP + 0x18]\nSUB R13,qword ptr [RSP + 0x20]\nJZ 0x00407c01\nXOR EDX,EDX\nMOV EDI,dword ptr [RSP + 0xc]\nMOV RSI,R15\nCALL 0x00402500\nTEST RAX,RAX\nJS 0x00407ca0\nMOV EAX,dword ptr [0xb0 + RSP]\nCMP EAX,0x1\nJNZ 0x00407ce6\nMOV EDI,dword ptr [RSP + 0x8]\nMOV RSI,R13\nCALL 0x00408360\nTEST AL,AL\nJZ 0x00407d0d\nCMP R15,R12\nMOV RAX,R15\nCMOVG RAX,R12\nMOV qword ptr [RSP + 0x10],RAX\nXOR R13D,R13D\nSUB RSP,0x8\nMOV R9D,0x1\nMOV EDI,dword ptr [RSP + 0x14]\nMOV ESI,dword ptr [RSP + 0x10]\nMOV RDX,qword ptr [RSP + 0x30]\nMOV RCX,qword ptr [RSP + 0x38]\nMOV R8,qword ptr [RSP + 0x40]\nLEA RAX,[RSP + 0xf]\nPUSH RAX\nLEA RAX,[RSP + 0x50]\nPUSH RAX\nPUSH RBX\nPUSH RBP\nPUSH qword ptr [0xe0 + RSP]\nCALL 0x00407ef0\nADD RSP,0x30\nTEST AL,AL\nJZ 0x00407c90\nMOV RAX,qword ptr [RSP + 0x40]\nTEST RAX,RAX\nLEA RCX,[RAX + R15*0x1]\nJZ 0x00407c5a\nMOV R13B,byte ptr [RSP + 0x7]\nXOR EAX,EAX\nMOV RDX,RCX\nMOV qword ptr [RSP + 0x10],RDX\nCMP RCX,R12\nJNZ 0x00407c73\nMOV byte ptr [RSP + 0x69],0x1\nMOV EAX,0x4\nMOV qword ptr [RSP + 0x20],RBX\nMOV qword ptr [RSP + 0x18],R15\nJMP 0x00407d67\nMOV qword ptr [RSP + 0x20],RBX\nMOV qword ptr [RSP + 0x18],R15\nJMP 0x00407d58\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x412a29\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,qword ptr [0xb8 + RSP]\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RBP,qword ptr [0xc0 + RSP]\nMOV RDX,RBX\nJMP 0x00407d53\nXOR EDX,EDX\nCMP EAX,0x3\nSETZ DL\nMOV EDI,dword ptr [RSP + 0x8]\nMOV RSI,RBP\nMOV RCX,R13\nCALL 0x004082c0\nMOV R13B,0x1\nTEST AL,AL\nJNZ 0x00407c04\nXOR R13D,R13D\nJMP 0x00407d58\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x412a39\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [0xc0 + RSP]\nCALL 0x0040c5a0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nMOV RBP,qword ptr [0xc0 + RSP]\nCALL 0x00402870\nLEA RDI,[RSP + 0x48]\nCALL 0x004082a0\nMOV EAX,0x1\nMOV ECX,EAX\nAND CL,0x7\nJNZ 0x00407d90\nMOV EAX,R14D\nINC R14D\nCMP RAX,qword ptr [RSP + 0x60]\nJC 0x00407b80\nJMP 0x00407da0\nCMP CL,0x4\nJNZ 0x00407db7\nNOP dword ptr CS:[RAX + RAX*0x1]\nLEA RDI,[RSP + 0x48]\nCALL 0x004082a0\nCMP byte ptr [RSP + 0x69],0x0\nJZ 0x00407b50\nJMP 0x00407dcb\nTEST EAX,EAX\nJZ 0x00407daa\nJMP 0x00407ea6\nCMP byte ptr [RSP + 0x69],0x0\nJZ 0x00407e94\nMOV RSI,qword ptr [RSP + 0x10]\nCMP RSI,R12\nJL 0x00407e1f\nAND R13B,0x1\nJNZ 0x00407e1f\nCMP dword ptr [0xb0 + RSP],0x3\nMOV R14B,0x1\nJNZ 0x00407ea9\nCMP RSI,R12\nJGE 0x00407ea9\nSUB R12,RSI\nMOV EDI,dword ptr [RSP + 0x8]\nMOV RDX,R12\nCALL 0x00408420\nTEST EAX,EAX\nJNS 0x00407ea9\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412a4a\nJMP 0x00407e67\nCMP dword ptr [0xb0 + RSP],0x1\nJNZ 0x00407e41\nSUB R12,RSI\nMOV EDI,dword ptr [RSP + 0x8]\nMOV RSI,R12\nCALL 0x00408360\nMOV R14B,0x1\nTEST AL,AL\nJZ 0x00407e56\nJMP 0x00407ea9\nMOV EDI,dword ptr [RSP + 0x8]\nMOV RSI,R12\nCALL 0x004024f0\nMOV RSI,qword ptr [RSP + 0x10]\nTEST EAX,EAX\nJZ 0x00407ddb\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4129e3\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,RBP\nMOV RBP,RAX\nMOV EDI,0x4\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nJMP 0x00407ea9\nCMP byte ptr [RSP + 0x68],0x0\nJZ 0x00407ebb\nMOV RAX,qword ptr [0xc8 + RSP]\nMOV byte ptr [RAX],0x1\nXOR R14D,R14D\nMOV EAX,R14D\nADD RSP,0x78\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x412a0a\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [0xb8 + RSP]\nCALL 0x0040c5a0\nJMP 0x00407e81\n'
p1943
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 78\n4d 89 cc\n4c 89 c3\n48 89 4c 24 30\n48 89 54 24 28\n89 74 24 08\n4c 8b b4 24 c8 00 00 00\n48 8b ac 24 c0 00 00 00\n48 8d 74 24 48\n89 7c 24 0c\ne8 60 0b 00 00\n41 c6 06 00\n31 c9\n83 bc 24 b0 00 00 00 03\nb8 00 00 00 00\n48 89 44 24 20\n48 0f 45 d9\n48 89 5c 24 38\n41 b5 01\n31 c0\n48 89 44 24 10\n31 c0\n48 89 44 24 18\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8d 7c 24 48\ne8 46 0b 00 00\n84 c0\n0f 84 5e 02 00 00\n48 83 7c 24 60 00\n0f 84 32 02 00 00\n41 be 01 00 00 00\n31 c0\n66 2e 0f 1f 84 00 00 00 00 00\n48 8b 4c 24 70\n48 8d 04 40\n4c 8b 3c c1\n48 8b 5c c1 08\n4a 8d 04 3b\n4c 39 e0\n7e 0d\n4d 39 e7\n4d 0f 4f fc\n4c 89 e3\n4c 29 fb\n4d 89 fd\n4c 2b 6c 24 18\n4c 2b 6c 24 20\n74 4a\n31 d2\n8b 7c 24 0c\n4c 89 fe\ne8 3b a9 ff ff\n48 85 c0\n0f 88 d2 00 00 00\n8b 84 24 b0 00 00 00\n83 f8 01\n0f 85 08 01 00 00\n8b 7c 24 08\n4c 89 ee\ne8 76 07 00 00\n84 c0\n0f 84 1b 01 00 00\n4d 39 e7\n4c 89 f8\n49 0f 4f c4\n48 89 44 24 10\n45 31 ed\n48 83 ec 08\n41 b9 01 00 00 00\n8b 7c 24 14\n8b 74 24 10\n48 8b 54 24 30\n48 8b 4c 24 38\n4c 8b 44 24 40\n48 8d 44 24 0f\n50\n48 8d 44 24 50\n50\n53\n55\nff b4 24 e0 00 00 00\ne8 b1 02 00 00\n48 83 c4 30\n84 c0\n74 49\n48 8b 44 24 40\n48 85 c0\n4a 8d 0c 38\n74 05\n44 8a 6c 24 07\n31 c0\n48 89 ca\n48 89 54 24 10\n4c 39 e1\n75 0a\nc6 44 24 69 01\nb8 04 00 00 00\n48 89 5c 24 20\n4c 89 7c 24 18\ne9 e5 00 00 00\n48 89 5c 24 20\n4c 89 7c 24 18\ne9 b9 00 00 00\ne8 3b a6 ff ff\n8b 28\n45 31 ed\n31 ff\nbe 29 2a 41 00\nba 05 00 00 00\ne8 65 a7 ff ff\n48 89 c3\nbf 04 00 00 00\n48 8b b4 24 b8 00 00 00\ne8 f0 47 00 00\n48 89 c1\n31 ff\n31 c0\n89 ee\n48 8b ac 24 c0 00 00 00\n48 89 da\neb 6d\n31 d2\n83 f8 03\n0f 94 c2\n8b 7c 24 08\n48 89 ee\n4c 89 e9\ne8 c3 05 00 00\n41 b5 01\n84 c0\n0f 85 fc fe ff ff\n45 31 ed\neb 4b\ne8 ce a5 ff ff\n8b 18\n45 31 ed\n31 ff\nbe 39 2a 41 00\nba 05 00 00 00\ne8 f8 a6 ff ff\n48 89 c5\n31 ff\nbe 03 00 00 00\n48 8b 94 24 c0 00 00 00\ne8 61 48 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\n48 8b ac 24 c0 00 00 00\ne8 18 ab ff ff\n48 8d 7c 24 48\ne8 3e 05 00 00\nb8 01 00 00 00\n89 c1\n80 e1 07\n75 22\n44 89 f0\n41 ff c6\n48 3b 44 24 60\n0f 82 01 fe ff ff\neb 1f\n80 f9 04\n75 22\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8d 7c 24 48\ne8 f6 04 00 00\n80 7c 24 69 00\n0f 84 9b fd ff ff\neb 14\n85 c0\n74 ef\ne9 e6 00 00 00\n80 7c 24 69 00\n0f 84 c9 00 00 00\n48 8b 74 24 10\n4c 39 e6\n7c 4a\n41 80 e5 01\n75 44\n83 bc 24 b0 00 00 00 03\n41 b6 01\n0f 85 bd 00 00 00\n4c 39 e6\n0f 8d b4 00 00 00\n49 29 f4\n8b 7c 24 08\n4c 89 e2\ne8 1c 06 00 00\n85 c0\n0f 89 9d 00 00 00\ne8 cf a4 ff ff\n8b 18\n45 31 f6\n31 ff\nbe 4a 2a 41 00\neb 48\n83 bc 24 b0 00 00 00 01\n75 18\n49 29 f4\n8b 7c 24 08\n4c 89 e6\ne8 28 05 00 00\n41 b6 01\n84 c0\n74 17\neb 68\n8b 7c 24 08\n4c 89 e6\ne8 a3 a6 ff ff\n48 8b 74 24 10\n85 c0\n74 85\ne8 85 a4 ff ff\n8b 18\n45 31 f6\n31 ff\nbe e3 29 41 00\nba 05 00 00 00\ne8 af a5 ff ff\n48 89 ee\n48 89 c5\nbf 04 00 00 00\ne8 3f 46 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 de a9 ff ff\neb 15\n80 7c 24 68 00\n74 20\n48 8b 84 24 c8 00 00 00\nc6 00 01\n45 31 f6\n44 89 f0\n48 83 c4 78\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 20 a4 ff ff\n8b 18\n45 31 f6\n31 ff\nbe 0a 2a 41 00\nba 05 00 00 00\ne8 4a a5 ff ff\n48 89 c5\n31 ff\nbe 03 00 00 00\n48 8b 94 24 b8 00 00 00\ne8 b3 46 00 00\neb 92\n'
p1944
S'.text:0000000000407ad0\n.text:0000000000407ad1\n.text:0000000000407ad3\n.text:0000000000407ad5\n.text:0000000000407ad7\n.text:0000000000407ad9\n.text:0000000000407ada\n.text:0000000000407ade\n.text:0000000000407ae1\n.text:0000000000407ae4\n.text:0000000000407ae9\n.text:0000000000407aee\n.text:0000000000407af2\n.text:0000000000407afa\n.text:0000000000407b02\n.text:0000000000407b07\n.text:0000000000407b0b\n.text:0000000000407b10\n.text:0000000000407b14\n.text:0000000000407b16\n.text:0000000000407b1e\n.text:0000000000407b23\n.text:0000000000407b28\n.text:0000000000407b2c\n.text:0000000000407b31\n.text:0000000000407b34\n.text:0000000000407b36\n.text:0000000000407b3b\n.text:0000000000407b3d\n.text:0000000000407b42\n.text:0000000000407b50\n.text:0000000000407b55\n.text:0000000000407b5a\n.text:0000000000407b5c\n.text:0000000000407b62\n.text:0000000000407b68\n.text:0000000000407b6e\n.text:0000000000407b74\n.text:0000000000407b76\n.text:0000000000407b80\n.text:0000000000407b85\n.text:0000000000407b89\n.text:0000000000407b8d\n.text:0000000000407b92\n.text:0000000000407b96\n.text:0000000000407b99\n.text:0000000000407b9b\n.text:0000000000407b9e\n.text:0000000000407ba2\n.text:0000000000407ba5\n.text:0000000000407ba8\n.text:0000000000407bab\n.text:0000000000407bb0\n.text:0000000000407bb5\n.text:0000000000407bb7\n.text:0000000000407bb9\n.text:0000000000407bbd\n.text:0000000000407bc0\n.text:0000000000407bc5\n.text:0000000000407bc8\n.text:0000000000407bce\n.text:0000000000407bd5\n.text:0000000000407bd8\n.text:0000000000407bde\n.text:0000000000407be2\n.text:0000000000407be5\n.text:0000000000407bea\n.text:0000000000407bec\n.text:0000000000407bf2\n.text:0000000000407bf5\n.text:0000000000407bf8\n.text:0000000000407bfc\n.text:0000000000407c01\n.text:0000000000407c04\n.text:0000000000407c08\n.text:0000000000407c0e\n.text:0000000000407c12\n.text:0000000000407c16\n.text:0000000000407c1b\n.text:0000000000407c20\n.text:0000000000407c25\n.text:0000000000407c2a\n.text:0000000000407c2b\n.text:0000000000407c30\n.text:0000000000407c31\n.text:0000000000407c32\n.text:0000000000407c33\n.text:0000000000407c3a\n.text:0000000000407c3f\n.text:0000000000407c43\n.text:0000000000407c45\n.text:0000000000407c47\n.text:0000000000407c4c\n.text:0000000000407c4f\n.text:0000000000407c53\n.text:0000000000407c55\n.text:0000000000407c5a\n.text:0000000000407c5c\n.text:0000000000407c5f\n.text:0000000000407c64\n.text:0000000000407c67\n.text:0000000000407c69\n.text:0000000000407c6e\n.text:0000000000407c73\n.text:0000000000407c78\n.text:0000000000407c7d\n.text:0000000000407c90\n.text:0000000000407c95\n.text:0000000000407c9a\n.text:0000000000407ca0\n.text:0000000000407ca5\n.text:0000000000407ca7\n.text:0000000000407caa\n.text:0000000000407cac\n.text:0000000000407cb1\n.text:0000000000407cb6\n.text:0000000000407cbb\n.text:0000000000407cbe\n.text:0000000000407cc3\n.text:0000000000407ccb\n.text:0000000000407cd0\n.text:0000000000407cd3\n.text:0000000000407cd5\n.text:0000000000407cd7\n.text:0000000000407cd9\n.text:0000000000407ce1\n.text:0000000000407ce4\n.text:0000000000407ce6\n.text:0000000000407ce8\n.text:0000000000407ceb\n.text:0000000000407cee\n.text:0000000000407cf2\n.text:0000000000407cf5\n.text:0000000000407cf8\n.text:0000000000407cfd\n.text:0000000000407d00\n.text:0000000000407d02\n.text:0000000000407d08\n.text:0000000000407d0b\n.text:0000000000407d0d\n.text:0000000000407d12\n.text:0000000000407d14\n.text:0000000000407d17\n.text:0000000000407d19\n.text:0000000000407d1e\n.text:0000000000407d23\n.text:0000000000407d28\n.text:0000000000407d2b\n.text:0000000000407d2d\n.text:0000000000407d32\n.text:0000000000407d3a\n.text:0000000000407d3f\n.text:0000000000407d42\n.text:0000000000407d44\n.text:0000000000407d46\n.text:0000000000407d48\n.text:0000000000407d4b\n.text:0000000000407d53\n.text:0000000000407d58\n.text:0000000000407d5d\n.text:0000000000407d62\n.text:0000000000407d67\n.text:0000000000407d69\n.text:0000000000407d6c\n.text:0000000000407d6e\n.text:0000000000407d71\n.text:0000000000407d74\n.text:0000000000407d79\n.text:0000000000407d7f\n.text:0000000000407d90\n.text:0000000000407d93\n.text:0000000000407d95\n.text:0000000000407da0\n.text:0000000000407da5\n.text:0000000000407daa\n.text:0000000000407daf\n.text:0000000000407db5\n.text:0000000000407db7\n.text:0000000000407db9\n.text:0000000000407dbb\n.text:0000000000407dc0\n.text:0000000000407dc5\n.text:0000000000407dcb\n.text:0000000000407dd0\n.text:0000000000407dd3\n.text:0000000000407dd5\n.text:0000000000407dd9\n.text:0000000000407ddb\n.text:0000000000407de3\n.text:0000000000407de6\n.text:0000000000407dec\n.text:0000000000407def\n.text:0000000000407df5\n.text:0000000000407df8\n.text:0000000000407dfc\n.text:0000000000407dff\n.text:0000000000407e04\n.text:0000000000407e06\n.text:0000000000407e0c\n.text:0000000000407e11\n.text:0000000000407e13\n.text:0000000000407e16\n.text:0000000000407e18\n.text:0000000000407e1d\n.text:0000000000407e1f\n.text:0000000000407e27\n.text:0000000000407e29\n.text:0000000000407e2c\n.text:0000000000407e30\n.text:0000000000407e33\n.text:0000000000407e38\n.text:0000000000407e3b\n.text:0000000000407e3d\n.text:0000000000407e3f\n.text:0000000000407e41\n.text:0000000000407e45\n.text:0000000000407e48\n.text:0000000000407e4d\n.text:0000000000407e52\n.text:0000000000407e54\n.text:0000000000407e56\n.text:0000000000407e5b\n.text:0000000000407e5d\n.text:0000000000407e60\n.text:0000000000407e62\n.text:0000000000407e67\n.text:0000000000407e6c\n.text:0000000000407e71\n.text:0000000000407e74\n.text:0000000000407e77\n.text:0000000000407e7c\n.text:0000000000407e81\n.text:0000000000407e84\n.text:0000000000407e86\n.text:0000000000407e88\n.text:0000000000407e8a\n.text:0000000000407e8d\n.text:0000000000407e92\n.text:0000000000407e94\n.text:0000000000407e99\n.text:0000000000407e9b\n.text:0000000000407ea3\n.text:0000000000407ea6\n.text:0000000000407ea9\n.text:0000000000407eac\n.text:0000000000407eb0\n.text:0000000000407eb1\n.text:0000000000407eb3\n.text:0000000000407eb5\n.text:0000000000407eb7\n.text:0000000000407eb9\n.text:0000000000407eba\n.text:0000000000407ebb\n.text:0000000000407ec0\n.text:0000000000407ec2\n.text:0000000000407ec5\n.text:0000000000407ec7\n.text:0000000000407ecc\n.text:0000000000407ed1\n.text:0000000000407ed6\n.text:0000000000407ed9\n.text:0000000000407edb\n.text:0000000000407ee0\n.text:0000000000407ee8\n.text:0000000000407eed\n'
p1945
tp1946
sS'close_stdout'
p1947
(S'\n__stdcall close_stdout()\n'
p1948
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00409117;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,0x412558,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00409117:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p1949
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x006184a8]\nCALL 0x0040fb20\nTEST EAX,EAX\nJZ 0x00409117\nCMP byte ptr [0x0061a948],0x0\nJZ 0x0040912c\nCALL 0x004022e0\nCMP dword ptr [RAX],0x20\nJNZ 0x0040912c\nMOV RDI,qword ptr [0x006184e0]\nCALL 0x0040fb20\nTEST EAX,EAX\nJNZ 0x00409171\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x412c72\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nMOV RBX,qword ptr [0x0061a940]\nCALL 0x004022e0\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x0040917c\nXOR EDI,EDI\nMOV EDX,0x412558\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00402870\nMOV EDI,dword ptr [0x00618420]\nCALL 0x00402310\nMOV EDI,dword ptr [0x00618420]\nCALL 0x00402310\nMOV RDI,RBX\nCALL 0x0040c580\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x412c6b\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00402870\nMOV EDI,dword ptr [0x00618420]\nCALL 0x00402310\n'
p1950
S'55\n41 56\n53\n48 8b 3d ad f3 20 00\ne8 20 6a 00 00\n85 c0\n74 13\n80 3d 3d 18 21 00 00\n74 1f\ne8 ce 91 ff ff\n83 38 20\n75 15\n48 8b 3d c2 f3 20 00\ne8 fd 69 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe 72 2c 41 00\nba 05 00 00 00\ne8 e3 92 ff ff\n49 89 c6\n48 8b 1d f9 17 21 00\ne8 94 91 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba 58 25 41 00\n31 c0\n89 ee\n4c 89 f1\ne8 0a 97 ff ff\n8b 3d b4 f2 20 00\ne8 9f 91 ff ff\n8b 3d a9 f2 20 00\ne8 94 91 ff ff\n48 89 df\ne8 fc 33 00 00\n48 89 c1\n31 ff\nba 6b 2c 41 00\n31 c0\n89 ee\n4d 89 f0\ne8 d6 96 ff ff\n8b 3d 80 f2 20 00\ne8 6b 91 ff ff\n'
p1951
S'.text:00000000004090f0\n.text:00000000004090f1\n.text:00000000004090f3\n.text:00000000004090f4\n.text:00000000004090fb\n.text:0000000000409100\n.text:0000000000409102\n.text:0000000000409104\n.text:000000000040910b\n.text:000000000040910d\n.text:0000000000409112\n.text:0000000000409115\n.text:0000000000409117\n.text:000000000040911e\n.text:0000000000409123\n.text:0000000000409125\n.text:0000000000409127\n.text:0000000000409128\n.text:000000000040912a\n.text:000000000040912b\n.text:000000000040912c\n.text:000000000040912e\n.text:0000000000409133\n.text:0000000000409138\n.text:000000000040913d\n.text:0000000000409140\n.text:0000000000409147\n.text:000000000040914c\n.text:000000000040914f\n.text:0000000000409151\n.text:0000000000409153\n.text:0000000000409155\n.text:000000000040915a\n.text:000000000040915c\n.text:000000000040915e\n.text:0000000000409161\n.text:0000000000409166\n.text:000000000040916c\n.text:0000000000409171\n.text:0000000000409177\n.text:000000000040917c\n.text:000000000040917f\n.text:0000000000409184\n.text:0000000000409187\n.text:0000000000409189\n.text:000000000040918e\n.text:0000000000409190\n.text:0000000000409192\n.text:0000000000409195\n.text:000000000040919a\n.text:00000000004091a0\n'
p1952
tp1953
sS'process_dir'
p1954
(S'\n__stdcall process_dir(char * dir, savewd * wd, void * options)\n'
p1955
V\u000aint process_dir(char *dir,savewd *wd,void *options)\u000a\u000a{\u000a  _Bool _Var1;\u000a  \u000a  _Var1 = make_dir_parents(dir,wd,make_ancestor,options,(void (*)(char *,void *))(ulong)dir_mode);\u000a  return (int)(uint)(_Var1 ^ 1);\u000a}\u000a\u000a
p1956
S'PUSH RBX\nMOV RAX,RDX\nMOV R8D,dword ptr [0x00618408]\nMOV R10D,dword ptr [0x00618404]\nMOV R11D,dword ptr [0x00618504]\nMOV EBX,dword ptr [0x00618508]\nMOV EDX,0x403b80\nMOV R9D,0x403bc0\nMOV RCX,RAX\nPUSH 0x0\nPUSH RBX\nPUSH R11\nPUSH R10\nCALL 0x0040aa20\nADD RSP,0x20\nXOR AL,0x1\nMOVZX EAX,AL\nPOP RBX\nRET\n'
p1957
S'53\n48 89 d0\n44 8b 05 bd 4a 21 00\n44 8b 15 b2 4a 21 00\n44 8b 1d ab 4b 21 00\n8b 1d a9 4b 21 00\nba 80 3b 40 00\n41 b9 c0 3b 40 00\n48 89 c1\n6a 00\n53\n41 53\n41 52\ne8 a7 70 00 00\n48 83 c4 20\n34 01\n0f b6 c0\n5b\nc3\n'
p1958
S'.text:0000000000403940\n.text:0000000000403941\n.text:0000000000403944\n.text:000000000040394b\n.text:0000000000403952\n.text:0000000000403959\n.text:000000000040395f\n.text:0000000000403964\n.text:000000000040396a\n.text:000000000040396d\n.text:000000000040396f\n.text:0000000000403970\n.text:0000000000403972\n.text:0000000000403974\n.text:0000000000403979\n.text:000000000040397d\n.text:000000000040397f\n.text:0000000000403982\n.text:0000000000403983\n'
p1959
tp1960
sS'c_isxdigit'
p1961
(S'\n__stdcall c_isxdigit()\n'
p1962
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1963
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x0040fafb\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1964
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1965
S'.text:000000000040fae0\n.text:000000000040fae3\n.text:000000000040fae6\n.text:000000000040fae8\n.text:000000000040faf2\n.text:000000000040faf4\n.text:000000000040faf7\n.text:000000000040fafa\n.text:000000000040fafb\n.text:000000000040fafd\n'
p1966
tp1967
sS'forget_created'
p1968
(S'\n__stdcall forget_created(ino_t ino, dev_t dev)\n'
p1969
V\u000avoid forget_created(ino_t ino,dev_t dev)\u000a\u000a{\u000a  void *x;\u000a  ino_t local_18;\u000a  dev_t local_10;\u000a  undefined8 local_8;\u000a  \u000a  local_8 = 0;\u000a  local_18 = ino;\u000a  local_10 = dev;\u000a  x = hash_delete(src_to_dest,&local_18);\u000a  if (x != (void *)0x0) {\u000a    src_to_dest_free(x);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1970
S'SUB RSP,0x18\nMOV qword ptr [RSP],RDI\nMOV qword ptr [RSP + 0x8],RSI\nMOV qword ptr [RSP + 0x10],0x0\nMOV RDI,qword ptr [0x0061a930]\nMOV RSI,RSP\nCALL 0x0040a570\nTEST RAX,RAX\nJZ 0x00408522\nMOV RDI,RAX\nCALL 0x00408530\nADD RSP,0x18\nRET\n'
p1971
S'48 83 ec 18\n48 89 3c 24\n48 89 74 24 08\n48 c7 44 24 10 00 00 00 00\n48 8b 3d 23 24 21 00\n48 89 e6\ne8 5b 20 00 00\n48 85 c0\n74 08\n48 89 c7\ne8 0e 00 00 00\n48 83 c4 18\nc3\n'
p1972
S'.text:00000000004084f0\n.text:00000000004084f4\n.text:00000000004084f8\n.text:00000000004084fd\n.text:0000000000408506\n.text:000000000040850d\n.text:0000000000408510\n.text:0000000000408515\n.text:0000000000408518\n.text:000000000040851a\n.text:000000000040851d\n.text:0000000000408522\n.text:0000000000408526\n'
p1973
tp1974
sS'__libc_csu_fini'
p1975
(S'\n__stdcall __libc_csu_fini()\n'
p1976
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1977
S'RET\n'
p1978
S'f3 c3\n'
p1979
S'.text:0000000000410750\n'
p1980
tp1981
sS'abort'
p1982
(S'\n__stdcall abort()\n'
p1983
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_00618050)();\u000a  return;\u000a}\u000a\u000a
p1984
S'JMP qword ptr [0x00618050]\n'
p1985
S'ff 25 7a 5d 21 00\n'
p1986
S'.plt:00000000004022d0\n'
p1987
tp1988
sS'closedir'
p1989
(S'\n__stdcall closedir(DIR * __dirp)\n'
p1990
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint closedir(DIR *__dirp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_closedir_006181c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p1991
S'JMP qword ptr [0x006181c0]\n'
p1992
S'ff 25 0a 5c 21 00\n'
p1993
S'.plt:00000000004025b0\n'
p1994
tp1995
sS'opendir'
p1996
(S'\n__stdcall opendir(char * __name)\n'
p1997
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aDIR * opendir(char *__name)\u000a\u000a{\u000a  DIR *pDVar1;\u000a  \u000a  pDVar1 = (DIR *)(*(code *)PTR_opendir_006180d8)();\u000a  return pDVar1;\u000a}\u000a\u000a
p1998
S'JMP qword ptr [0x006180d8]\n'
p1999
S'ff 25 f2 5c 21 00\n'
p2000
S'.plt:00000000004023e0\n'
p2001
tp2002
sS'compute_bucket_size'
p2003
(S'\n__stdcall compute_bucket_size(size_t candidate, Hash_tuning * tuning)\n'
p2004
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000asize_t compute_bucket_size(size_t candidate,Hash_tuning *tuning)\u000a\u000a{\u000a  size_t sVar1;\u000a  size_t sVar2;\u000a  float fVar3;\u000a  \u000a  if (tuning->is_n_buckets == false) {\u000a    if ((long)candidate < 0) {\u000a      fVar3 = (float)((ulong)((uint)candidate & 1) | candidate >> 1);\u000a      fVar3 = fVar3 + fVar3;\u000a    }\u000a    else {\u000a      fVar3 = (float)candidate;\u000a    }\u000a    fVar3 = fVar3 / tuning->growth_threshold;\u000a    candidate = (long)fVar3;\u000a    if (DAT_00412cd8 <= fVar3) {\u000a      candidate = (long)(fVar3 - DAT_00412cd8) ^ 0x8000000000000000;\u000a    }\u000a    if (_DAT_00412cdc <= fVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  sVar1 = next_prime(candidate);\u000a  sVar2 = 0;\u000a  if (SUB168(ZEXT816(sVar1) * ZEXT816(8) >> 0x40,0) == 0) {\u000a    sVar2 = sVar1;\u000a  }\u000a  return sVar2;\u000a}\u000a\u000a
p2005
S'CMP byte ptr [RSI + 0x10],0x0\nJNZ 0x00409e62\nTEST RDI,RDI\nJS 0x00409e12\nCVTSI2SS XMM0,RDI\nJMP 0x00409e27\nMOV RAX,RDI\nSHR RAX,1\nAND EDI,0x1\nOR RDI,RAX\nCVTSI2SS XMM0,RDI\nADDSS XMM0,XMM0\nDIVSS XMM0,dword ptr [RSI + 0x8]\nMOVSS XMM1,dword ptr [0x00412cd8]\nMOVAPS XMM2,XMM0\nSUBSS XMM2,XMM1\nCVTTSS2SI RAX,XMM2\nMOV RCX,-0x8000000000000000\nXOR RCX,RAX\nCVTTSS2SI RDI,XMM0\nUCOMISS XMM0,XMM1\nCMOVNC RDI,RCX\nUCOMISS XMM0,dword ptr [0x00412cdc]\nJNC 0x00409e81\nPUSH RAX\nCALL 0x0040a700\nMOV RSI,RAX\nMOV EDX,0x8\nXOR ECX,ECX\nMUL RDX\nCMOVNO RCX,RSI\nADD RSP,0x8\nMOV RAX,RCX\nRET\nXOR ECX,ECX\nMOV RAX,RCX\nRET\n'
p2006
S'80 7e 10 00\n75 5c\n48 85 ff\n78 07\nf3 48 0f 2a c7\neb 15\n48 89 f8\n48 d1 e8\n83 e7 01\n48 09 c7\nf3 48 0f 2a c7\nf3 0f 58 c0\nf3 0f 5e 46 08\nf3 0f 10 0d a4 8e 00 00\n0f 28 d0\nf3 0f 5c d1\nf3 48 0f 2c c2\n48 b9 00 00 00 00 00 00 00 80\n48 31 c1\nf3 48 0f 2c f8\n0f 2e c1\n48 0f 43 f9\n0f 2e 05 7c 8e 00 00\n73 1f\n50\ne8 98 08 00 00\n48 89 c6\nba 08 00 00 00\n31 c9\n48 f7 e2\n48 0f 41 ce\n48 83 c4 08\n48 89 c8\nc3\n31 c9\n48 89 c8\nc3\n'
p2007
S'.text:0000000000409e00\n.text:0000000000409e04\n.text:0000000000409e06\n.text:0000000000409e09\n.text:0000000000409e0b\n.text:0000000000409e10\n.text:0000000000409e12\n.text:0000000000409e15\n.text:0000000000409e18\n.text:0000000000409e1b\n.text:0000000000409e1e\n.text:0000000000409e23\n.text:0000000000409e27\n.text:0000000000409e2c\n.text:0000000000409e34\n.text:0000000000409e37\n.text:0000000000409e3b\n.text:0000000000409e40\n.text:0000000000409e4a\n.text:0000000000409e4d\n.text:0000000000409e52\n.text:0000000000409e55\n.text:0000000000409e59\n.text:0000000000409e60\n.text:0000000000409e62\n.text:0000000000409e63\n.text:0000000000409e68\n.text:0000000000409e6b\n.text:0000000000409e70\n.text:0000000000409e72\n.text:0000000000409e75\n.text:0000000000409e79\n.text:0000000000409e7d\n.text:0000000000409e80\n.text:0000000000409e81\n.text:0000000000409e83\n.text:0000000000409e86\n'
p2008
tp2009
sS'openat_proc_name'
p2010
(S'\n__stdcall openat_proc_name(char * buf, char * file)\n'
p2011
V\u000achar * openat_proc_name(char *buf,char *file)\u000a\u000a{\u000a  int proc_status;\u000a  uint __fd;\u000a  int iVar1;\u000a  size_t sVar2;\u000a  char *__s;\u000a  char dotdot_buf [32];\u000a  char acStack72 [32];\u000a  \u000a  if (*__s == 0) {\u000a    *buf = 0;\u000a    return buf;\u000a  }\u000a  if (proc_status == 0) {\u000a    __fd = open("/proc/self/fd",0x10900);\u000a    if ((int)__fd < 0) {\u000a      return (char *)0x0;\u000a    }\u000a    __sprintf_chk(acStack72,1,0x20,"/proc/self/fd/%d/../fd",(ulong)__fd);\u000a    iVar1 = access(acStack72,0);\u000a    proc_status = ~-(uint)(iVar1 == 0) | 1;\u000a    close(__fd);\u000a  }\u000a  if (-1 < proc_status) {\u000a    sVar2 = strlen(__s);\u000a    if ((sVar2 + 0x1b < 0xfc1) || (buf = (char *)malloc(sVar2 + 0x1b), buf != (char *)0x0)) {\u000a      iVar1 = __sprintf_chk(buf,1,0xffffffffffffffff,"/proc/self/fd/%d/",(ulong)file & 0xffffffff);\u000a      strcpy(buf + (long)iVar1,__s);\u000a      return buf;\u000a    }\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p2012
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV R14,RDX\nMOV R15D,ESI\nMOV RBX,RDI\nCMP byte ptr [R14],0x0\nJZ 0x00410640\nMOV EAX,dword ptr [0x0061aad0]\nTEST EAX,EAX\nJNZ 0x004105ea\nMOV EDI,0x41447a\nMOV ESI,0x10900\nXOR EAX,EAX\nCALL 0x004028a0\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00410645\nMOV R12,RSP\nMOV ESI,0x1\nMOV EDX,0x20\nMOV ECX,0x414488\nXOR EAX,EAX\nMOV RDI,R12\nMOV R8D,EBP\nCALL 0x004029f0\nXOR ESI,ESI\nMOV RDI,R12\nCALL 0x004028b0\nCMP EAX,0x1\nSBB EAX,EAX\nNOT EAX\nOR EAX,0x1\nMOV dword ptr [0x0061aad0],EAX\nMOV EDI,EBP\nCALL 0x00402590\nMOV EAX,dword ptr [0x0061aad0]\nTEST EAX,EAX\nJS 0x0041064f\nMOV RDI,R14\nCALL 0x00402440\nADD RAX,0x1b\nCMP RAX,0xfc1\nJC 0x00410612\nMOV RDI,RAX\nCALL 0x00402760\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0041064f\nMOV ESI,0x1\nMOV RDX,-0x1\nMOV ECX,0x41449f\nXOR EAX,EAX\nMOV RDI,RBX\nMOV R8D,R15D\nCALL 0x004029f0\nMOVSXD RDI,EAX\nADD RDI,RBX\nMOV RSI,R14\nCALL 0x00402320\nJMP 0x00410651\nMOV byte ptr [RBX],0x0\nJMP 0x00410651\nMOV dword ptr [0x0061aad0],0xffffffff\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2013
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 20\n49 89 d6\n41 89 f7\n48 89 fb\n41 80 3e 00\n0f 84 c1 00 00 00\n8b 05 4b a5 20 00\n85 c0\n75 61\nbf 7a 44 41 00\nbe 00 09 01 00\n31 c0\ne8 06 23 ff ff\n89 c5\n85 ed\n0f 88 a1 00 00 00\n49 89 e4\nbe 01 00 00 00\nba 20 00 00 00\nb9 88 44 41 00\n31 c0\n4c 89 e7\n41 89 e8\ne8 2d 24 ff ff\n31 f6\n4c 89 e7\ne8 e3 22 ff ff\n83 f8 01\n19 c0\nf7 d0\n83 c8 01\n89 05 f3 a4 20 00\n89 ef\ne8 ac 1f ff ff\n8b 05 e6 a4 20 00\n85 c0\n78 61\n4c 89 f7\ne8 4a 1e ff ff\n48 83 c0 1b\n48 3d c1 0f 00 00\n72 10\n48 89 c7\ne8 56 21 ff ff\n48 89 c3\n48 85 db\n74 3d\nbe 01 00 00 00\n48 c7 c2 ff ff ff ff\nb9 9f 44 41 00\n31 c0\n48 89 df\n45 89 f8\ne8 c0 23 ff ff\n48 63 f8\n48 01 df\n4c 89 f6\ne8 e2 1c ff ff\neb 11\nc6 03 00\neb 0c\nc7 05 81 a4 20 00 ff ff ff ff\n31 db\n48 89 d8\n48 83 c4 20\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p2014
S'.text:0000000000410560\n.text:0000000000410561\n.text:0000000000410563\n.text:0000000000410565\n.text:0000000000410567\n.text:0000000000410568\n.text:000000000041056c\n.text:000000000041056f\n.text:0000000000410572\n.text:0000000000410575\n.text:0000000000410579\n.text:000000000041057f\n.text:0000000000410585\n.text:0000000000410587\n.text:0000000000410589\n.text:000000000041058e\n.text:0000000000410593\n.text:0000000000410595\n.text:000000000041059a\n.text:000000000041059c\n.text:000000000041059e\n.text:00000000004105a4\n.text:00000000004105a7\n.text:00000000004105ac\n.text:00000000004105b1\n.text:00000000004105b6\n.text:00000000004105b8\n.text:00000000004105bb\n.text:00000000004105be\n.text:00000000004105c3\n.text:00000000004105c5\n.text:00000000004105c8\n.text:00000000004105cd\n.text:00000000004105d0\n.text:00000000004105d2\n.text:00000000004105d4\n.text:00000000004105d7\n.text:00000000004105dd\n.text:00000000004105df\n.text:00000000004105e4\n.text:00000000004105ea\n.text:00000000004105ec\n.text:00000000004105ee\n.text:00000000004105f1\n.text:00000000004105f6\n.text:00000000004105fa\n.text:0000000000410600\n.text:0000000000410602\n.text:0000000000410605\n.text:000000000041060a\n.text:000000000041060d\n.text:0000000000410610\n.text:0000000000410612\n.text:0000000000410617\n.text:000000000041061e\n.text:0000000000410623\n.text:0000000000410625\n.text:0000000000410628\n.text:000000000041062b\n.text:0000000000410630\n.text:0000000000410633\n.text:0000000000410636\n.text:0000000000410639\n.text:000000000041063e\n.text:0000000000410640\n.text:0000000000410643\n.text:0000000000410645\n.text:000000000041064f\n.text:0000000000410651\n.text:0000000000410654\n.text:0000000000410658\n.text:0000000000410659\n.text:000000000041065b\n.text:000000000041065d\n.text:000000000041065f\n.text:0000000000410660\n'
p2015
tp2016
sS'security_check_context_raw'
p2017
(S'\n__stdcall security_check_context_raw(security_context_t con)\n'
p2018
V\u000aint security_check_context_raw(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2019
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2020
S'50\ne8 7a 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2021
S'.text:000000000040d660\n.text:000000000040d661\n.text:000000000040d666\n.text:000000000040d66c\n.text:000000000040d671\n.text:000000000040d672\n'
p2022
tp2023
sS'numbered_backup'
p2024
(S'\n__stdcall numbered_backup(char * * buffer, size_t buffer_size, size_t filelen)\n'
p2025
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000anumbered_backup_result numbered_backup(char **buffer,size_t buffer_size,size_t filelen)\u000a\u000a{\u000a  size_t s;\u000a  char *__dest;\u000a  char cVar1;\u000a  undefined2 uVar2;\u000a  long lVar3;\u000a  int iVar4;\u000a  undefined2 *name;\u000a  size_t sVar5;\u000a  DIR *__dirp;\u000a  dirent *pdVar6;\u000a  char *name_00;\u000a  char *__s2;\u000a  size_t sVar7;\u000a  long lVar8;\u000a  ulong __n;\u000a  bool bVar9;\u000a  ulong local_78;\u000a  ulong local_68;\u000a  ulong local_60;\u000a  \u000a  name_00 = *buffer;\u000a  name = (undefined2 *)last_component(name_00);\u000a  sVar5 = base_len((char *)name);\u000a  uVar2 = *name;\u000a  *name = 0x2e;\u000a  __dirp = opendir_safer(name_00);\u000a  *name = uVar2;\u000a  *(undefined *)((long)name + sVar5 + 4) = 0;\u000a  *(undefined4 *)((long)name + sVar5) = 0x7e317e2e;\u000a  if (__dirp == (DIR *)0x0) {\u000a    local_78._0_4_ = BACKUP_IS_NEW;\u000a  }\u000a  else {\u000a    pdVar6 = readdir((DIR *)__dirp);\u000a    if (pdVar6 == (dirent *)0x0) {\u000a      local_78._0_4_ = BACKUP_IS_NEW;\u000a    }\u000a    else {\u000a      name = (undefined2 *)((long)name - (long)name_00);\u000a      local_78 = 2;\u000a      local_68 = 1;\u000a      local_60 = buffer_size;\u000a      do {\u000a        if (pdVar6->d_ino != 0) {\u000a          sVar7 = strlen(pdVar6->d_name);\u000a          if (((sVar5 + 4 <= sVar7) &&\u000a              (iVar4 = memcmp(name_00 + (long)name,pdVar6->d_name,sVar5 + 2), iVar4 == 0)) &&\u000a             ((byte)(pdVar6->d_name[sVar5 + 2] - 0x31U) < 9)) {\u000a            bVar9 = pdVar6->d_name[sVar5 + 2] == '9';\u000a            cVar1 = pdVar6->d_name[sVar5 + 3];\u000a            iVar4 = (int)cVar1;\u000a            if (iVar4 - 0x30U < 10) {\u000a              lVar3 = 0;\u000a              do {\u000a                lVar8 = lVar3;\u000a                bVar9 = (bool)(bVar9 & (char)iVar4 == '9');\u000a                cVar1 = pdVar6->d_name[lVar8 + sVar5 + 4];\u000a                iVar4 = (int)cVar1;\u000a                lVar3 = lVar8 + 1;\u000a              } while (iVar4 - 0x30U < 10);\u000a              __n = lVar8 + 2;\u000a            }\u000a            else {\u000a              __n = 1;\u000a            }\u000a            if (((cVar1 == '~') && (__s2 = pdVar6->d_name + sVar5 + 2, __s2[__n + 1] == 0)) &&\u000a               ((local_68 < __n ||\u000a                ((local_68 == __n && (iVar4 = memcmp(name_00 + filelen + 2,__s2,__n), iVar4 < 1)))))\u000a               ) {\u000a              local_78 = (ulong)bVar9;\u000a              local_68 = local_78 + __n;\u000a              s = filelen + 3 + local_68;\u000a              if (local_60 <= s) {\u000a                name_00 = (char *)xnrealloc(name_00,2,s);\u000a                local_60 = s * 2;\u000a              }\u000a              *(undefined2 *)(name_00 + filelen) = 0x7e2e;\u000a              name_00[filelen + 2] = '0';\u000a              __dest = name_00 + local_78 + 2 + filelen;\u000a              memcpy(__dest,__s2,__n + 2);\u000a              __s2 = __dest + (__n - 1);\u000a              cVar1 = __dest[__n - 1];\u000a              while (cVar1 == '9') {\u000a                *__s2 = '0';\u000a                cVar1 = __s2[-1];\u000a                __s2 = __s2 + -1;\u000a              }\u000a              *__s2 = cVar1 + 1;\u000a            }\u000a          }\u000a        }\u000a        pdVar6 = readdir((DIR *)__dirp);\u000a      } while (pdVar6 != (dirent *)0x0);\u000a    }\u000a    closedir((DIR *)__dirp);\u000a    *buffer = name_00;\u000a  }\u000a  return (numbered_backup_result)local_78;\u000a}\u000a\u000a
p2026
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x58\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV R14,RDI\nMOV R15,qword ptr [R14]\nMOV RDI,R15\nCALL 0x004092f0\nMOV R13,RAX\nMOV RDI,R13\nCALL 0x00409350\nMOV RBP,RAX\nMOVZX EBX,word ptr [R13]\nMOV word ptr [R13],0x2e\nMOV RDI,R15\nCALL 0x004091b0\nMOV R12,RAX\nMOV word ptr [R13],BX\nMOV RBX,RBP\nMOV byte ptr [R13 + RBX*0x1 + 0x4],0x0\nMOV dword ptr [R13 + RBX*0x1],0x7e317e2e\nTEST R12,R12\nJZ 0x00408c76\nMOV qword ptr [RSP + 0x40],R14\nMOV RDI,R12\nCALL 0x00402740\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00408c80\nSUB R13,R15\nLEA RAX,[RBX + 0x4]\nMOV qword ptr [RSP + 0x50],RAX\nLEA RAX,[RBX + 0x2]\nMOV qword ptr [RSP + 0x48],RAX\nMOV RAX,qword ptr [RSP + 0x18]\nLEA RAX,[RAX + 0x3]\nMOV qword ptr [RSP + 0x30],RAX\nLEA RAX,[RBX + 0x17]\nMOV qword ptr [RSP + 0x38],RAX\nMOV EAX,0x2\nMOV qword ptr [RSP + 0x10],RAX\nMOV EAX,0x1\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP + 0x8],RBX\nJMP 0x00408d60\nMOV EAX,0x2\nJMP 0x00408e59\nMOV EAX,0x2\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00408e44\nCMP qword ptr [RSP + 0x20],R15\nJNC 0x00408cb7\nMOVZX ESI,BL\nLEA RCX,[RSI + R15*0x1]\nMOV RAX,qword ptr [RSP + 0x30]\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RAX + RCX*0x1]\nCMP qword ptr [RSP + 0x28],RAX\nJBE 0x00408cdc\nMOV RAX,RBP\nJMP 0x00408cfd\nJNZ 0x00408e22\nMOV RAX,qword ptr [RSP + 0x18]\nLEA RDI,[RBP + RAX*0x1 + 0x2]\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004025f0\nTEST EAX,EAX\nJG 0x00408e22\nJMP 0x00408c96\nMOV RBX,RSI\nMOV ESI,0x2\nMOV RDI,RBP\nMOV RBP,RAX\nMOV RDX,RBP\nCALL 0x0040e9d0\nMOV RSI,RBX\nADD RBP,RBP\nMOV qword ptr [RSP + 0x28],RBP\nMOV RDX,qword ptr [RSP + 0x18]\nLEA RCX,[RAX + RDX*0x1]\nMOV word ptr [RAX + RDX*0x1],0x7e2e\nMOV RBX,RAX\nMOV byte ptr [RAX + RDX*0x1 + 0x2],0x30\nMOV qword ptr [RSP + 0x10],RSI\nLEA RBP,[RSI + RCX*0x1 + 0x2]\nLEA RDX,[R15 + 0x2]\nMOV RDI,RBP\nMOV RSI,R14\nCALL 0x004026d0\nLEA RAX,[R15 + RBP*0x1 + -0x1]\nMOV CL,byte ptr [R15 + RBP*0x1 + -0x1]\nCMP CL,0x39\nJNZ 0x00408d4f\nNOP dword ptr [RAX]\nMOV byte ptr [RAX],0x30\nMOVZX ECX,byte ptr [RAX + -0x1]\nDEC RAX\nCMP CL,0x39\nJZ 0x00408d40\nINC CL\nMOV byte ptr [RAX],CL\nMOV R15,RBX\nJMP 0x00408e25\nCMP qword ptr [R14],0x0\nJZ 0x00408e30\nLEA RBP,[R14 + 0x13]\nMOV RDI,RBP\nCALL 0x00402440\nCMP RAX,qword ptr [RSP + 0x50]\nJC 0x00408e30\nLEA RDI,[R15 + R13*0x1]\nMOV RSI,RBP\nMOV RDX,qword ptr [RSP + 0x48]\nCALL 0x004025f0\nTEST EAX,EAX\nJNZ 0x00408e30\nMOV AL,byte ptr [R14 + RBX*0x1 + 0x15]\nMOV ECX,EAX\nADD CL,0xcf\nCMP CL,0x8\nJA 0x00408e30\nLEA RCX,[R14 + RBX*0x1 + 0x13]\nCMP AL,0x39\nSETZ BL\nMOVSX EAX,byte ptr [RCX + 0x3]\nMOV ECX,EAX\nADD ECX,-0x30\nMOV RBP,R15\nCMP ECX,0x9\nJA 0x00408e02\nMOV RCX,qword ptr [RSP + 0x38]\nLEA RCX,[R14 + RCX*0x1]\nXOR R15D,R15D\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP AL,0x39\nSETZ AL\nAND BL,AL\nMOVSX EAX,byte ptr [RCX + R15*0x1]\nMOV EDX,EAX\nADD EDX,-0x30\nINC R15\nCMP EDX,0xa\nJC 0x00408de0\nINC R15\nCMP AL,0x7e\nJZ 0x00408e0c\nJMP 0x00408e22\nMOV R15D,0x1\nCMP AL,0x7e\nJNZ 0x00408e22\nMOV RAX,qword ptr [RSP + 0x8]\nLEA R14,[R14 + RAX*0x1 + 0x15]\nCMP byte ptr [R14 + R15*0x1 + 0x1],0x0\nJZ 0x00408c8f\nMOV R15,RBP\nMOV RBX,qword ptr [RSP + 0x8]\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,R12\nCALL 0x00402740\nMOV R14,RAX\nTEST R14,R14\nJNZ 0x00408d60\nMOV RDI,R12\nCALL 0x004025b0\nMOV RAX,qword ptr [RSP + 0x40]\nMOV qword ptr [RAX],R15\nMOV RAX,qword ptr [RSP + 0x10]\nADD RSP,0x58\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2027
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 58\n48 89 54 24 18\n48 89 74 24 28\n49 89 fe\n4d 8b 3e\n4c 89 ff\ne8 1a 07 00 00\n49 89 c5\n4c 89 ef\ne8 6f 07 00 00\n48 89 c5\n41 0f b7 5d 00\n66 41 c7 45 00 2e 00\n4c 89 ff\ne8 b8 05 00 00\n49 89 c4\n66 41 89 5d 00\n48 89 eb\n41 c6 44 1d 04 00\n41 c7 44 1d 00 2e 7e 31 7e\n4d 85 e4\n74 5f\n4c 89 74 24 40\n4c 89 e7\ne8 1c 9b ff ff\n49 89 c6\n4d 85 f6\n74 54\n4d 29 fd\n48 8d 43 04\n48 89 44 24 50\n48 8d 43 02\n48 89 44 24 48\n48 8b 44 24 18\n48 8d 40 03\n48 89 44 24 30\n48 8d 43 17\n48 89 44 24 38\nb8 02 00 00 00\n48 89 44 24 10\nb8 01 00 00 00\n48 89 44 24 20\n48 89 5c 24 08\ne9 ea 00 00 00\nb8 02 00 00 00\ne9 d9 01 00 00\nb8 02 00 00 00\n48 89 44 24 10\ne9 b5 01 00 00\n4c 39 7c 24 20\n73 21\n0f b6 f3\n4a 8d 0c 3e\n48 8b 44 24 30\n48 89 4c 24 20\n48 8d 04 08\n48 39 44 24 28\n76 2a\n48 89 e8\neb 46\n0f 85 65 01 00 00\n48 8b 44 24 18\n48 8d 7c 05 02\n4c 89 f6\n4c 89 fa\ne8 1e 99 ff ff\n85 c0\n0f 8f 48 01 00 00\neb ba\n48 89 f3\nbe 02 00 00 00\n48 89 ef\n48 89 c5\n48 89 ea\ne8 de 5c 00 00\n48 89 de\n48 01 ed\n48 89 6c 24 28\n48 8b 54 24 18\n48 8d 0c 10\n66 c7 04 10 2e 7e\n48 89 c3\nc6 44 10 02 30\n48 89 74 24 10\n48 8d 6c 0e 02\n49 8d 57 02\n48 89 ef\n4c 89 f6\ne8 a3 99 ff ff\n49 8d 44 2f ff\n41 8a 4c 2f ff\n80 f9 39\n75 13\n0f 1f 40 00\nc6 00 30\n0f b6 48 ff\n48 ff c8\n80 f9 39\n74 f1\nfe c1\n88 08\n49 89 df\ne9 ca 00 00 00\n49 83 3e 00\n0f 84 c6 00 00 00\n49 8d 6e 13\n48 89 ef\ne8 ca 96 ff ff\n48 3b 44 24 50\n0f 82 af 00 00 00\n4b 8d 3c 2f\n48 89 ee\n48 8b 54 24 48\ne8 5e 98 ff ff\n85 c0\n0f 85 96 00 00 00\n41 8a 44 1e 15\n89 c1\n80 c1 cf\n80 f9 08\n0f 87 83 00 00 00\n49 8d 4c 1e 13\n3c 39\n0f 94 c3\n0f be 41 03\n89 c1\n83 c1 d0\n4c 89 fd\n83 f9 09\n77 3a\n48 8b 4c 24 38\n49 8d 0c 0e\n45 31 ff\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n3c 39\n0f 94 c0\n20 c3\n42 0f be 04 39\n89 c2\n83 c2 d0\n49 ff c7\n83 fa 0a\n72 e7\n49 ff c7\n3c 7e\n74 0c\neb 20\n41 bf 01 00 00 00\n3c 7e\n75 16\n48 8b 44 24 08\n4d 8d 74 06 15\n43 80 7c 3e 01 00\n0f 84 6d fe ff ff\n49 89 ef\n48 8b 5c 24 08\n66 0f 1f 44 00 00\n4c 89 e7\ne8 08 99 ff ff\n49 89 c6\n4d 85 f6\n0f 85 1c ff ff ff\n4c 89 e7\ne8 64 97 ff ff\n48 8b 44 24 40\n4c 89 38\n48 8b 44 24 10\n48 83 c4 58\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2028
S'.text:0000000000408bb0\n.text:0000000000408bb1\n.text:0000000000408bb3\n.text:0000000000408bb5\n.text:0000000000408bb7\n.text:0000000000408bb9\n.text:0000000000408bba\n.text:0000000000408bbe\n.text:0000000000408bc3\n.text:0000000000408bc8\n.text:0000000000408bcb\n.text:0000000000408bce\n.text:0000000000408bd1\n.text:0000000000408bd6\n.text:0000000000408bd9\n.text:0000000000408bdc\n.text:0000000000408be1\n.text:0000000000408be4\n.text:0000000000408be9\n.text:0000000000408bf0\n.text:0000000000408bf3\n.text:0000000000408bf8\n.text:0000000000408bfb\n.text:0000000000408c00\n.text:0000000000408c03\n.text:0000000000408c09\n.text:0000000000408c12\n.text:0000000000408c15\n.text:0000000000408c17\n.text:0000000000408c1c\n.text:0000000000408c1f\n.text:0000000000408c24\n.text:0000000000408c27\n.text:0000000000408c2a\n.text:0000000000408c2c\n.text:0000000000408c2f\n.text:0000000000408c33\n.text:0000000000408c38\n.text:0000000000408c3c\n.text:0000000000408c41\n.text:0000000000408c46\n.text:0000000000408c4a\n.text:0000000000408c4f\n.text:0000000000408c53\n.text:0000000000408c58\n.text:0000000000408c5d\n.text:0000000000408c62\n.text:0000000000408c67\n.text:0000000000408c6c\n.text:0000000000408c71\n.text:0000000000408c76\n.text:0000000000408c7b\n.text:0000000000408c80\n.text:0000000000408c85\n.text:0000000000408c8a\n.text:0000000000408c8f\n.text:0000000000408c94\n.text:0000000000408c96\n.text:0000000000408c99\n.text:0000000000408c9d\n.text:0000000000408ca2\n.text:0000000000408ca7\n.text:0000000000408cab\n.text:0000000000408cb0\n.text:0000000000408cb2\n.text:0000000000408cb5\n.text:0000000000408cb7\n.text:0000000000408cbd\n.text:0000000000408cc2\n.text:0000000000408cc7\n.text:0000000000408cca\n.text:0000000000408ccd\n.text:0000000000408cd2\n.text:0000000000408cd4\n.text:0000000000408cda\n.text:0000000000408cdc\n.text:0000000000408cdf\n.text:0000000000408ce4\n.text:0000000000408ce7\n.text:0000000000408cea\n.text:0000000000408ced\n.text:0000000000408cf2\n.text:0000000000408cf5\n.text:0000000000408cf8\n.text:0000000000408cfd\n.text:0000000000408d02\n.text:0000000000408d06\n.text:0000000000408d0c\n.text:0000000000408d0f\n.text:0000000000408d14\n.text:0000000000408d19\n.text:0000000000408d1e\n.text:0000000000408d22\n.text:0000000000408d25\n.text:0000000000408d28\n.text:0000000000408d2d\n.text:0000000000408d32\n.text:0000000000408d37\n.text:0000000000408d3a\n.text:0000000000408d3c\n.text:0000000000408d40\n.text:0000000000408d43\n.text:0000000000408d47\n.text:0000000000408d4a\n.text:0000000000408d4d\n.text:0000000000408d4f\n.text:0000000000408d51\n.text:0000000000408d53\n.text:0000000000408d56\n.text:0000000000408d60\n.text:0000000000408d64\n.text:0000000000408d6a\n.text:0000000000408d6e\n.text:0000000000408d71\n.text:0000000000408d76\n.text:0000000000408d7b\n.text:0000000000408d81\n.text:0000000000408d85\n.text:0000000000408d88\n.text:0000000000408d8d\n.text:0000000000408d92\n.text:0000000000408d94\n.text:0000000000408d9a\n.text:0000000000408d9f\n.text:0000000000408da1\n.text:0000000000408da4\n.text:0000000000408da7\n.text:0000000000408dad\n.text:0000000000408db2\n.text:0000000000408db4\n.text:0000000000408db7\n.text:0000000000408dbb\n.text:0000000000408dbd\n.text:0000000000408dc0\n.text:0000000000408dc3\n.text:0000000000408dc6\n.text:0000000000408dc8\n.text:0000000000408dcd\n.text:0000000000408dd1\n.text:0000000000408dd4\n.text:0000000000408de0\n.text:0000000000408de2\n.text:0000000000408de5\n.text:0000000000408de7\n.text:0000000000408dec\n.text:0000000000408dee\n.text:0000000000408df1\n.text:0000000000408df4\n.text:0000000000408df7\n.text:0000000000408df9\n.text:0000000000408dfc\n.text:0000000000408dfe\n.text:0000000000408e00\n.text:0000000000408e02\n.text:0000000000408e08\n.text:0000000000408e0a\n.text:0000000000408e0c\n.text:0000000000408e11\n.text:0000000000408e16\n.text:0000000000408e1c\n.text:0000000000408e22\n.text:0000000000408e25\n.text:0000000000408e2a\n.text:0000000000408e30\n.text:0000000000408e33\n.text:0000000000408e38\n.text:0000000000408e3b\n.text:0000000000408e3e\n.text:0000000000408e44\n.text:0000000000408e47\n.text:0000000000408e4c\n.text:0000000000408e51\n.text:0000000000408e54\n.text:0000000000408e59\n.text:0000000000408e5d\n.text:0000000000408e5e\n.text:0000000000408e60\n.text:0000000000408e62\n.text:0000000000408e64\n.text:0000000000408e66\n.text:0000000000408e67\n'
p2029
tp2030
sS'freadahead'
p2031
(S'\n__stdcall freadahead(FILE * fp)\n'
p2032
V\u000asize_t freadahead(FILE *fp)\u000a\u000a{\u000a  if (fp->_IO_write_base <= fp->_IO_write_ptr && fp->_IO_write_ptr != fp->_IO_write_base) {\u000a    return 0;\u000a  }\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return (size_t)(fp->_IO_read_end + -(long)fp->_IO_read_ptr);\u000a  }\u000a  return (size_t)(fp->_IO_read_end + -(long)fp->_IO_read_ptr +\u000a                 (long)(fp->_IO_save_end + -(long)fp->_IO_save_base));\u000a}\u000a\u000a
p2033
S'MOV RAX,qword ptr [RDI + 0x28]\nCMP RAX,qword ptr [RDI + 0x20]\nJBE 0x0040f12d\nXOR EAX,EAX\nRET\nMOV RAX,qword ptr [RDI + 0x10]\nSUB RAX,qword ptr [RDI + 0x8]\nTEST byte ptr [RDI + 0x1],0x1\nJNZ 0x0040f141\nXOR ECX,ECX\nADD RAX,RCX\nRET\nMOV RCX,qword ptr [RDI + 0x58]\nSUB RCX,qword ptr [RDI + 0x48]\nADD RAX,RCX\nRET\n'
p2034
S'48 8b 47 28\n48 3b 47 20\n76 03\n31 c0\nc3\n48 8b 47 10\n48 2b 47 08\nf6 47 01 01\n75 06\n31 c9\n48 01 c8\nc3\n48 8b 4f 58\n48 2b 4f 48\n48 01 c8\nc3\n'
p2035
S'.text:000000000040f120\n.text:000000000040f124\n.text:000000000040f128\n.text:000000000040f12a\n.text:000000000040f12c\n.text:000000000040f12d\n.text:000000000040f131\n.text:000000000040f135\n.text:000000000040f139\n.text:000000000040f13b\n.text:000000000040f13d\n.text:000000000040f140\n.text:000000000040f141\n.text:000000000040f145\n.text:000000000040f149\n.text:000000000040f14c\n'
p2036
tp2037
sS'hash_rehash'
p2038
(S'\n__stdcall hash_rehash(Hash_table * table, size_t candidate)\n'
p2039
V\u000a_Bool hash_rehash(Hash_table *table,size_t candidate)\u000a\u000a{\u000a  _Bool _Var1;\u000a  hash_entry *local_68;\u000a  hash_entry *local_60;\u000a  size_t local_58;\u000a  undefined4 local_50;\u000a  undefined4 uStack76;\u000a  undefined4 uStack72;\u000a  undefined4 uStack68;\u000a  Hash_tuning *local_40;\u000a  size_t (*local_38)(void *,size_t);\u000a  _Bool (*local_30)(void *,void *);\u000a  void (*local_28)(void *);\u000a  hash_entry *local_20;\u000a  \u000a  local_58 = compute_bucket_size(candidate,table->tuning);\u000a  if (local_58 != 0) {\u000a    if (local_58 == table->n_buckets) {\u000a      return true;\u000a    }\u000a    local_68 = (hash_entry *)rpl_calloc(local_58,0x10);\u000a    if (local_68 != (hash_entry *)0x0) {\u000a      local_60 = local_68 + local_58;\u000a      local_50 = 0;\u000a      uStack76 = 0;\u000a      uStack72 = 0;\u000a      uStack68 = 0;\u000a      local_40 = table->tuning;\u000a      local_38 = table->hasher;\u000a      local_30 = table->comparator;\u000a      local_28 = table->data_freer;\u000a      local_20 = table->free_entry_list;\u000a      _Var1 = transfer_entries((Hash_table *)&local_68,table);\u000a      if (_Var1 != false) {\u000a        free(table->bucket);\u000a        table->bucket = local_68;\u000a        table->bucket_limit = local_60;\u000a        table->n_buckets = local_58;\u000a        table->n_buckets_used = CONCAT44(uStack76,local_50);\u000a        table->free_entry_list = local_20;\u000a        return true;\u000a      }\u000a      table->free_entry_list = local_20;\u000a      _Var1 = transfer_entries(table,(Hash_table *)&local_68);\u000a      if ((_Var1 == false) ||\u000a         (_Var1 = transfer_entries(table,(Hash_table *)&local_68), _Var1 == false)) {\u000a                    /* WARNING: Subroutine does not return */\u000a        abort();\u000a      }\u000a      free(local_68);\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p2040
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x50\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x28]\nMOV RDI,RSI\nMOV RSI,RAX\nCALL 0x00409e00\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x0040a131\nMOV R14B,0x1\nCMP RBP,qword ptr [RBX + 0x10]\nJZ 0x0040a134\nMOV ESI,0x10\nMOV RDI,RBP\nCALL 0x0040eec0\nMOV qword ptr [RSP],RAX\nTEST RAX,RAX\nJZ 0x0040a131\nMOV qword ptr [RSP + 0x10],RBP\nSHL RBP,0x4\nADD RBP,qword ptr [RSP]\nMOV qword ptr [RSP + 0x8],RBP\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RSP + 0x18],XMM0\nMOV RAX,qword ptr [RBX + 0x28]\nMOV qword ptr [RSP + 0x28],RAX\nMOV RAX,qword ptr [RBX + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOV RAX,qword ptr [RBX + 0x38]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RAX,qword ptr [RBX + 0x40]\nMOV qword ptr [RSP + 0x40],RAX\nMOV RAX,qword ptr [RBX + 0x48]\nMOV qword ptr [RSP + 0x48],RAX\nMOV RDI,RSP\nXOR EDX,EDX\nMOV RSI,RBX\nCALL 0x0040a150\nTEST AL,AL\nJZ 0x0040a0fa\nMOV RDI,qword ptr [RBX]\nCALL 0x00402290\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RBX],RAX\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RBX + 0x8],RAX\nMOV RAX,qword ptr [RSP + 0x10]\nMOV qword ptr [RBX + 0x10],RAX\nMOV RAX,qword ptr [RSP + 0x18]\nMOV qword ptr [RBX + 0x18],RAX\nMOV RAX,qword ptr [RSP + 0x48]\nMOV qword ptr [RBX + 0x48],RAX\nJMP 0x0040a134\nMOV RAX,qword ptr [RSP + 0x48]\nMOV qword ptr [RBX + 0x48],RAX\nMOV RSI,RSP\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x0040a150\nTEST AL,AL\nJZ 0x0040a140\nMOV RSI,RSP\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x0040a150\nTEST AL,AL\nJZ 0x0040a140\nMOV RDI,qword ptr [RSP]\nCALL 0x00402290\nXOR R14D,R14D\nMOV EAX,R14D\nADD RSP,0x50\nPOP RBX\nPOP R14\nPOP RBP\nRET\nCALL 0x004022d0\n'
p2041
S'55\n41 56\n53\n48 83 ec 50\n48 89 fb\n48 8b 43 28\n48 89 f7\n48 89 c6\ne8 c6 fd ff ff\n48 89 c5\n48 85 ed\n0f 84 eb 00 00 00\n41 b6 01\n48 3b 6b 10\n0f 84 e1 00 00 00\nbe 10 00 00 00\n48 89 ef\ne8 60 4e 00 00\n48 89 04 24\n48 85 c0\n0f 84 c4 00 00 00\n48 89 6c 24 10\n48 c1 e5 04\n48 03 2c 24\n48 89 6c 24 08\n0f 57 c0\n0f 11 44 24 18\n48 8b 43 28\n48 89 44 24 28\n48 8b 43 30\n48 89 44 24 30\n48 8b 43 38\n48 89 44 24 38\n48 8b 43 40\n48 89 44 24 40\n48 8b 43 48\n48 89 44 24 48\n48 89 e7\n31 d2\n48 89 de\ne8 8f 00 00 00\n84 c0\n74 35\n48 8b 3b\ne8 c3 81 ff ff\n48 8b 04 24\n48 89 03\n48 8b 44 24 08\n48 89 43 08\n48 8b 44 24 10\n48 89 43 10\n48 8b 44 24 18\n48 89 43 18\n48 8b 44 24 48\n48 89 43 48\neb 3a\n48 8b 44 24 48\n48 89 43 48\n48 89 e6\nba 01 00 00 00\n48 89 df\ne8 3d 00 00 00\n84 c0\n74 29\n48 89 e6\n31 d2\n48 89 df\ne8 2c 00 00 00\n84 c0\n74 18\n48 8b 3c 24\ne8 5f 81 ff ff\n45 31 f6\n44 89 f0\n48 83 c4 50\n5b\n41 5e\n5d\nc3\ne8 8b 81 ff ff\n'
p2042
S'.text:000000000040a020\n.text:000000000040a021\n.text:000000000040a023\n.text:000000000040a024\n.text:000000000040a028\n.text:000000000040a02b\n.text:000000000040a02f\n.text:000000000040a032\n.text:000000000040a035\n.text:000000000040a03a\n.text:000000000040a03d\n.text:000000000040a040\n.text:000000000040a046\n.text:000000000040a049\n.text:000000000040a04d\n.text:000000000040a053\n.text:000000000040a058\n.text:000000000040a05b\n.text:000000000040a060\n.text:000000000040a064\n.text:000000000040a067\n.text:000000000040a06d\n.text:000000000040a072\n.text:000000000040a076\n.text:000000000040a07a\n.text:000000000040a07f\n.text:000000000040a082\n.text:000000000040a087\n.text:000000000040a08b\n.text:000000000040a090\n.text:000000000040a094\n.text:000000000040a099\n.text:000000000040a09d\n.text:000000000040a0a2\n.text:000000000040a0a6\n.text:000000000040a0ab\n.text:000000000040a0af\n.text:000000000040a0b4\n.text:000000000040a0b7\n.text:000000000040a0b9\n.text:000000000040a0bc\n.text:000000000040a0c1\n.text:000000000040a0c3\n.text:000000000040a0c5\n.text:000000000040a0c8\n.text:000000000040a0cd\n.text:000000000040a0d1\n.text:000000000040a0d4\n.text:000000000040a0d9\n.text:000000000040a0dd\n.text:000000000040a0e2\n.text:000000000040a0e6\n.text:000000000040a0eb\n.text:000000000040a0ef\n.text:000000000040a0f4\n.text:000000000040a0f8\n.text:000000000040a0fa\n.text:000000000040a0ff\n.text:000000000040a103\n.text:000000000040a106\n.text:000000000040a10b\n.text:000000000040a10e\n.text:000000000040a113\n.text:000000000040a115\n.text:000000000040a117\n.text:000000000040a11a\n.text:000000000040a11c\n.text:000000000040a11f\n.text:000000000040a124\n.text:000000000040a126\n.text:000000000040a128\n.text:000000000040a12c\n.text:000000000040a131\n.text:000000000040a134\n.text:000000000040a137\n.text:000000000040a13b\n.text:000000000040a13c\n.text:000000000040a13e\n.text:000000000040a13f\n.text:000000000040a140\n'
p2043
tp2044
sS'posix_fadvise'
p2045
(S'\n__stdcall posix_fadvise(int __fd, __off_t __offset, __off_t __len, int __advise)\n'
p2046
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_posix_fadvise_006181c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p2047
S'JMP qword ptr [0x006181c8]\n'
p2048
S'ff 25 02 5c 21 00\n'
p2049
S'.plt:00000000004025c0\n'
p2050
tp2051
sS'errno_unsupported'
p2052
(S'\n__stdcall errno_unsupported()\n'
p2053
V\u000a_Bool errno_unsupported(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 0x3d || in_EDI == 0x5f);\u000a}\u000a\u000a
p2054
S'CMP EDI,0x5f\nSETZ CL\nCMP EDI,0x3d\nSETZ AL\nOR AL,CL\nRET\n'
p2055
S'83 ff 5f\n0f 94 c1\n83 ff 3d\n0f 94 c0\n08 c8\nc3\n'
p2056
S'.text:00000000004079f0\n.text:00000000004079f3\n.text:00000000004079f6\n.text:00000000004079f9\n.text:00000000004079fc\n.text:00000000004079fe\n'
p2057
tp2058
sS'lseek'
p2059
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p2060
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_00618168)();\u000a  return _Var1;\u000a}\u000a\u000a
p2061
S'JMP qword ptr [0x00618168]\n'
p2062
S'ff 25 62 5c 21 00\n'
p2063
S'.plt:0000000000402500\n'
p2064
tp2065
sS'opendir_safer'
p2066
(S'\n__stdcall opendir_safer(char * name)\n'
p2067
V\u000aDIR * opendir_safer(char *name)\u000a\u000a{\u000a  uint uVar1;\u000a  int __fd;\u000a  DIR *__dirp;\u000a  DIR *pDVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  \u000a  __dirp = opendir(name);\u000a  if (__dirp == (DIR *)0x0) {\u000a    return (DIR *)0x0;\u000a  }\u000a  uVar1 = dirfd(__dirp);\u000a  if (2 < uVar1) {\u000a    return (DIR *)__dirp;\u000a  }\u000a  __fd = dup_safer();\u000a  if (__fd < 0) {\u000a    piVar3 = __errno_location();\u000a    iVar4 = *piVar3;\u000a  }\u000a  else {\u000a    pDVar2 = fdopendir(__fd);\u000a    piVar3 = __errno_location();\u000a    iVar4 = *piVar3;\u000a    if (pDVar2 != (DIR *)0x0) goto LAB_0040920d;\u000a    close(__fd);\u000a  }\u000a  pDVar2 = (DIR *)0x0;\u000aLAB_0040920d:\u000a  closedir(__dirp);\u000a  piVar3 = __errno_location();\u000a  *piVar3 = iVar4;\u000a  return (DIR *)pDVar2;\u000a}\u000a\u000a
p2068
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nCALL 0x004023e0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x004091fe\nMOV RDI,RBX\nCALL 0x00402670\nCMP EAX,0x2\nJA 0x00409220\nMOV EDI,EAX\nCALL 0x0040d770\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00409202\nMOV EDI,EBP\nCALL 0x004028f0\nMOV R14,RAX\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nTEST R14,R14\nJNZ 0x0040920d\nMOV EDI,EBP\nCALL 0x00402590\nJMP 0x0040920a\nXOR EBX,EBX\nJMP 0x00409220\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nMOV RDI,RBX\nCALL 0x004025b0\nCALL 0x004022e0\nMOV dword ptr [RAX],R15D\nMOV RBX,R14\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2069
S'55\n41 57\n41 56\n53\n50\ne8 24 92 ff ff\n48 89 c3\n48 85 db\n74 3a\n48 89 df\ne8 a4 94 ff ff\n83 f8 02\n77 4f\n89 c7\ne8 98 45 00 00\n89 c5\n85 ed\n78 24\n89 ef\ne8 0b 97 ff ff\n49 89 c6\ne8 f3 90 ff ff\n44 8b 38\n4d 85 f6\n75 18\n89 ef\ne8 94 93 ff ff\neb 0c\n31 db\neb 1e\ne8 d9 90 ff ff\n44 8b 38\n45 31 f6\n48 89 df\ne8 9b 93 ff ff\ne8 c6 90 ff ff\n44 89 38\n4c 89 f3\n48 89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p2070
S'.text:00000000004091b0\n.text:00000000004091b1\n.text:00000000004091b3\n.text:00000000004091b5\n.text:00000000004091b6\n.text:00000000004091b7\n.text:00000000004091bc\n.text:00000000004091bf\n.text:00000000004091c2\n.text:00000000004091c4\n.text:00000000004091c7\n.text:00000000004091cc\n.text:00000000004091cf\n.text:00000000004091d1\n.text:00000000004091d3\n.text:00000000004091d8\n.text:00000000004091da\n.text:00000000004091dc\n.text:00000000004091de\n.text:00000000004091e0\n.text:00000000004091e5\n.text:00000000004091e8\n.text:00000000004091ed\n.text:00000000004091f0\n.text:00000000004091f3\n.text:00000000004091f5\n.text:00000000004091f7\n.text:00000000004091fc\n.text:00000000004091fe\n.text:0000000000409200\n.text:0000000000409202\n.text:0000000000409207\n.text:000000000040920a\n.text:000000000040920d\n.text:0000000000409210\n.text:0000000000409215\n.text:000000000040921a\n.text:000000000040921d\n.text:0000000000409220\n.text:0000000000409223\n.text:0000000000409227\n.text:0000000000409228\n.text:000000000040922a\n.text:000000000040922c\n.text:000000000040922d\n'
p2071
tp2072
sS'readlink'
p2073
(S'\n__stdcall readlink(char * __path, char * __buf, size_t __len)\n'
p2074
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t readlink(char *__path,char *__buf,size_t __len)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_readlink_006180a0)();\u000a  return sVar1;\u000a}\u000a\u000a
p2075
S'JMP qword ptr [0x006180a0]\n'
p2076
S'ff 25 2a 5d 21 00\n'
p2077
S'.plt:0000000000402370\n'
p2078
tp2079
sS'memrchr'
p2080
(S'\n__stdcall memrchr(void * __s, int __c, size_t __n)\n'
p2081
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memrchr(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memrchr_00618328)();\u000a  return pvVar1;\u000a}\u000a\u000a
p2082
S'JMP qword ptr [0x00618328]\n'
p2083
S'ff 25 a2 5a 21 00\n'
p2084
S'.plt:0000000000402880\n'
p2085
tp2086
sS'hash_get_n_entries'
p2087
(S'\n__stdcall hash_get_n_entries(Hash_table * table)\n'
p2088
V\u000asize_t hash_get_n_entries(Hash_table *table)\u000a\u000a{\u000a  return table->n_entries;\u000a}\u000a\u000a
p2089
S'MOV RAX,qword ptr [RDI + 0x20]\nRET\n'
p2090
S'48 8b 47 20\nc3\n'
p2091
S'.text:0000000000409860\n.text:0000000000409864\n'
p2092
tp2093
sS'__printf_chk'
p2094
(S'\n__stdcall __printf_chk()\n'
p2095
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_00618308)();\u000a  return;\u000a}\u000a\u000a
p2096
S'JMP qword ptr [0x00618308]\n'
p2097
S'ff 25 c2 5a 21 00\n'
p2098
S'.plt:0000000000402840\n'
p2099
tp2100
sS'hash_lookup'
p2101
(S'\n__stdcall hash_lookup(Hash_table * table, void * entry)\n'
p2102
V\u000avoid * hash_lookup(Hash_table *table,void *entry)\u000a\u000a{\u000a  _Bool _Var1;\u000a  hash_entry *phVar2;\u000a  \u000a  phVar2 = safe_hasher(table,entry);\u000a  if (phVar2->data != (void *)0x0) {\u000a    while (phVar2 != (hash_entry *)0x0) {\u000a      if ((phVar2->data == entry) ||\u000a         (_Var1 = (*table->comparator)(entry,phVar2->data), _Var1 != false)) {\u000a        return phVar2->data;\u000a      }\u000a      phVar2 = phVar2->next;\u000a    }\u000a  }\u000a  return (void *)0x0;\u000a}\u000a\u000a
p2103
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,RSI\nMOV R15,RDI\nCALL 0x00409a60\nMOV RBX,RAX\nXOR R14D,R14D\nCMP qword ptr [RBX],0x0\nJZ 0x00409a51\nTEST RBX,RBX\nJZ 0x00409a51\nXOR R14D,R14D\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,qword ptr [RBX]\nCMP RSI,R12\nJZ 0x00409a4e\nMOV RDI,R12\nCALL qword ptr [R15 + 0x38]\nTEST AL,AL\nJNZ 0x00409a4e\nMOV RBX,qword ptr [RBX + 0x8]\nTEST RBX,RBX\nJNZ 0x00409a30\nJMP 0x00409a51\nMOV R14,qword ptr [RBX]\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p2104
S'41 57\n41 56\n41 54\n53\n50\n49 89 f4\n49 89 ff\ne8 4d 00 00 00\n48 89 c3\n45 31 f6\n48 83 3b 00\n74 32\n48 85 db\n74 2d\n45 31 f6\n66 0f 1f 84 00 00 00 00 00\n48 8b 33\n4c 39 e6\n74 16\n4c 89 e7\n41 ff 57 38\n84 c0\n75 0b\n48 8b 5b 08\n48 85 db\n75 e4\neb 03\n4c 8b 33\n4c 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p2105
S'.text:0000000000409a00\n.text:0000000000409a02\n.text:0000000000409a04\n.text:0000000000409a06\n.text:0000000000409a07\n.text:0000000000409a08\n.text:0000000000409a0b\n.text:0000000000409a0e\n.text:0000000000409a13\n.text:0000000000409a16\n.text:0000000000409a19\n.text:0000000000409a1d\n.text:0000000000409a1f\n.text:0000000000409a22\n.text:0000000000409a24\n.text:0000000000409a27\n.text:0000000000409a30\n.text:0000000000409a33\n.text:0000000000409a36\n.text:0000000000409a38\n.text:0000000000409a3b\n.text:0000000000409a3f\n.text:0000000000409a41\n.text:0000000000409a43\n.text:0000000000409a47\n.text:0000000000409a4a\n.text:0000000000409a4c\n.text:0000000000409a4e\n.text:0000000000409a51\n.text:0000000000409a54\n.text:0000000000409a58\n.text:0000000000409a59\n.text:0000000000409a5b\n.text:0000000000409a5d\n.text:0000000000409a5f\n'
p2106
tp2107
sS'fchmod_or_lchmod'
p2108
(S'\n__stdcall fchmod_or_lchmod(char * name)\n'
p2109
V\u000aint fchmod_or_lchmod(char *name)\u000a\u000a{\u000a  int iVar1;\u000a  __mode_t __mode;\u000a  char *__file;\u000a  \u000a  if (-1 < (int)name) {\u000a    iVar1 = fchmod((int)name,__mode);\u000a    return iVar1;\u000a  }\u000a  iVar1 = chmod(__file,__mode);\u000a  return iVar1;\u000a}\u000a\u000a
p2110
S'TEST EDI,EDI\nJS 0x0040828b\nMOV ESI,EDX\nJMP 0x00402850\nMOV RDI,RSI\nMOV ESI,EDX\nJMP 0x00402860\n'
p2111
S'85 ff\n78 07\n89 d6\ne9 c5 a5 ff ff\n48 89 f7\n89 d6\ne9 cb a5 ff ff\n'
p2112
S'.text:0000000000408280\n.text:0000000000408282\n.text:0000000000408284\n.text:0000000000408286\n.text:000000000040828b\n.text:000000000040828e\n.text:0000000000408290\n'
p2113
tp2114
sS'ioctl'
p2115
(S'\n__stdcall ioctl(int __fd, ulong __request)\n'
p2116
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ioctl(int __fd,ulong __request,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ioctl_00618198)();\u000a  return iVar1;\u000a}\u000a\u000a
p2117
S'JMP qword ptr [0x00618198]\n'
p2118
S'ff 25 32 5c 21 00\n'
p2119
S'.plt:0000000000402560\n'
p2120
tp2121
sS'base_len'
p2122
(S'\n__stdcall base_len(char * name)\n'
p2123
V\u000asize_t base_len(char *name)\u000a\u000a{\u000a  long lVar1;\u000a  size_t sVar2;\u000a  size_t sVar3;\u000a  \u000a  sVar2 = strlen(name);\u000a  do {\u000a    sVar3 = sVar2;\u000a    if (sVar2 < 2) {\u000a      return sVar3;\u000a    }\u000a    lVar1 = sVar2 - 1;\u000a    sVar2 = sVar2 - 1;\u000a  } while (name[lVar1] == '/');\u000a  return sVar3;\u000a}\u000a\u000a
p2124
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00402440\nMOV RCX,RAX\nNOP dword ptr [RAX]\nMOV RAX,RCX\nCMP RAX,0x2\nJC 0x00409374\nLEA RCX,[RAX + -0x1]\nCMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f\nJZ 0x00409360\nPOP RBX\nRET\n'
p2125
S'53\n48 89 fb\ne8 e7 90 ff ff\n48 89 c1\n0f 1f 40 00\n48 89 c8\n48 83 f8 02\n72 0b\n48 8d 48 ff\n80 7c 03 ff 2f\n74 ec\n5b\nc3\n'
p2126
S'.text:0000000000409350\n.text:0000000000409351\n.text:0000000000409354\n.text:0000000000409359\n.text:000000000040935c\n.text:0000000000409360\n.text:0000000000409363\n.text:0000000000409367\n.text:0000000000409369\n.text:000000000040936d\n.text:0000000000409372\n.text:0000000000409374\n.text:0000000000409375\n'
p2127
tp2128
sS'fchdir'
p2129
(S'\n__stdcall fchdir(int __fd)\n'
p2130
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fchdir(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fchdir_006182d8)();\u000a  return iVar1;\u000a}\u000a\u000a
p2131
S'JMP qword ptr [0x006182d8]\n'
p2132
S'ff 25 f2 5a 21 00\n'
p2133
S'.plt:00000000004027e0\n'
p2134
tp2135
sS'getcwd'
p2136
(S'\n__stdcall getcwd(char * __buf, size_t __size)\n'
p2137
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getcwd(char *__buf,size_t __size)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getcwd_006181a0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p2138
S'JMP qword ptr [0x006181a0]\n'
p2139
S'ff 25 2a 5c 21 00\n'
p2140
S'.plt:0000000000402570\n'
p2141
tp2142
sS'version_etc_va'
p2143
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p2144
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p2145
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x0040e820\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x0040e82c\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x0040e841\nINC R9\nCMP R9,0xa\nJC 0x0040e800\nMOV R8,RSP\nCALL 0x0040e460\nADD RSP,0x58\nRET\n'
p2146
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p2147
S'.text:000000000040e7f0\n.text:000000000040e7f4\n.text:000000000040e7f7\n.text:000000000040e800\n.text:000000000040e803\n.text:000000000040e807\n.text:000000000040e809\n.text:000000000040e80c\n.text:000000000040e810\n.text:000000000040e814\n.text:000000000040e817\n.text:000000000040e820\n.text:000000000040e824\n.text:000000000040e828\n.text:000000000040e82c\n.text:000000000040e82f\n.text:000000000040e833\n.text:000000000040e836\n.text:000000000040e838\n.text:000000000040e83b\n.text:000000000040e83f\n.text:000000000040e841\n.text:000000000040e844\n.text:000000000040e849\n.text:000000000040e84d\n'
p2148
tp2149
sS'hash_print_statistics'
p2150
(S'\n__stdcall hash_print_statistics(Hash_table * table, FILE * stream)\n'
p2151
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000avoid hash_print_statistics(Hash_table *table,FILE *stream)\u000a\u000a{\u000a  size_t sVar1;\u000a  size_t sVar2;\u000a  size_t sVar3;\u000a  size_t sVar4;\u000a  undefined auVar5 [16];\u000a  undefined auVar6 [16];\u000a  undefined4 uVar7;\u000a  \u000a  sVar1 = hash_get_n_entries(table);\u000a  sVar2 = hash_get_n_buckets(table);\u000a  sVar3 = hash_get_n_buckets_used(table);\u000a  sVar4 = hash_get_max_bucket_length(table);\u000a  __fprintf_chk(stream,1,0x412ce0,sVar1);\u000a  __fprintf_chk(stream,1,"# buckets:         %lu\u005cn",sVar2);\u000a  uVar7 = SUB164(_DAT_00412c90 >> 0x20,0);\u000a  auVar5 = subpd(CONCAT88(SUB168(CONCAT412(uVar7,ZEXT812(sVar3) &\u000a                                                 (undefined  [12])0xffffffffffffffff |\u000a                                                 (undefined  [12])0x0 << 0x40) >> 0x40,0),\u000a                          CONCAT44(SUB164(_DAT_00412c90,0),\u000a                                   SUB124(ZEXT812(sVar3) & (undefined  [12])0xffffffffffffffff,0))),\u000a                 CONCAT88(DAT_00412ca8,DAT_00412ca0));\u000a  auVar5 = addpd(CONCAT412(SUB164(auVar5 >> 0x20,0),\u000a                           CONCAT48(SUB164(auVar5,0),SUB168(auVar5 >> 0x40,0))),auVar5);\u000a  auVar6 = subpd(CONCAT88(SUB168(CONCAT412(uVar7,ZEXT812(sVar2) &\u000a                                                 (undefined  [12])0xffffffffffffffff |\u000a                                                 (undefined  [12])0x0 << 0x40) >> 0x40,0),\u000a                          CONCAT44(SUB164(_DAT_00412c90,0),\u000a                                   SUB124(ZEXT812(sVar2) & (undefined  [12])0xffffffffffffffff,0))),\u000a                 CONCAT88(DAT_00412ca8,DAT_00412ca0));\u000a  auVar6 = addpd(CONCAT412(SUB164(auVar6 >> 0x20,0),\u000a                           CONCAT48(SUB164(auVar6,0),SUB168(auVar6 >> 0x40,0))),auVar6);\u000a  __fprintf_chk(CONCAT88(SUB168(auVar5 >> 0x40,0),\u000a                         (SUB168(auVar5,0) * _DAT_00412cc0) / SUB168(auVar6,0)),stream,1,\u000a                "# buckets used:    %lu (%.2f%%)\u005cn",sVar3);\u000a  __fprintf_chk(stream,1,"max bucket length: %lu\u005cn",sVar4);\u000a  return;\u000a}\u000a\u000a
p2152
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R13,RSI\nMOV RBX,RDI\nCALL 0x00409860\nMOV RBP,RAX\nMOV RDI,RBX\nCALL 0x00409840\nMOV R12,RAX\nMOV RDI,RBX\nCALL 0x00409850\nMOV R15,RAX\nMOV RDI,RBX\nCALL 0x00409870\nMOV R14,RAX\nMOV ESI,0x1\nMOV EDX,0x412ce0\nXOR EAX,EAX\nMOV RDI,R13\nMOV RCX,RBP\nCALL 0x00402980\nMOV ESI,0x1\nMOV EDX,0x412cf8\nXOR EAX,EAX\nMOV RDI,R13\nMOV RCX,R12\nCALL 0x00402980\nMOVQ XMM1,R15\nMOVDQA XMM2,xmmword ptr [0x00412c90]\nPUNPCKLDQ XMM1,XMM2\nMOVAPD XMM3,xmmword ptr [0x00412ca0]\nSUBPD XMM1,XMM3\nPSHUFD XMM0,XMM1,0x4e\nADDPD XMM0,XMM1\nMULSD XMM0,qword ptr [0x00412cc0]\nMOVQ XMM1,R12\nPUNPCKLDQ XMM1,XMM2\nSUBPD XMM1,XMM3\nPSHUFD XMM2,XMM1,0x4e\nADDPD XMM2,XMM1\nDIVSD XMM0,XMM2\nMOV ESI,0x1\nMOV EDX,0x412d10\nMOV AL,0x1\nMOV RDI,R13\nMOV RCX,R15\nCALL 0x00402980\nMOV ESI,0x1\nMOV EDX,0x412d31\nXOR EAX,EAX\nMOV RDI,R13\nMOV RCX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00402980\n'
p2153
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f5\n48 89 fb\ne8 3a ff ff ff\n48 89 c5\n48 89 df\ne8 0f ff ff ff\n49 89 c4\n48 89 df\ne8 14 ff ff ff\n49 89 c7\n48 89 df\ne8 29 ff ff ff\n49 89 c6\nbe 01 00 00 00\nba e0 2c 41 00\n31 c0\n4c 89 ef\n48 89 e9\ne8 1f 90 ff ff\nbe 01 00 00 00\nba f8 2c 41 00\n31 c0\n4c 89 ef\n4c 89 e1\ne8 08 90 ff ff\n66 49 0f 6e cf\n66 0f 6f 15 0b 93 00 00\n66 0f 62 ca\n66 0f 28 1d 0f 93 00 00\n66 0f 5c cb\n66 0f 70 c1 4e\n66 0f 58 c1\nf2 0f 59 05 1a 93 00 00\n66 49 0f 6e cc\n66 0f 62 ca\n66 0f 5c cb\n66 0f 70 d1 4e\n66 0f 58 d1\nf2 0f 5e c2\nbe 01 00 00 00\nba 10 2d 41 00\nb0 01\n4c 89 ef\n4c 89 f9\ne8 a9 8f ff ff\nbe 01 00 00 00\nba 31 2d 41 00\n31 c0\n4c 89 ef\n4c 89 f1\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 84 8f ff ff\n'
p2154
S'.text:0000000000409910\n.text:0000000000409911\n.text:0000000000409913\n.text:0000000000409915\n.text:0000000000409917\n.text:0000000000409919\n.text:000000000040991a\n.text:000000000040991b\n.text:000000000040991e\n.text:0000000000409921\n.text:0000000000409926\n.text:0000000000409929\n.text:000000000040992c\n.text:0000000000409931\n.text:0000000000409934\n.text:0000000000409937\n.text:000000000040993c\n.text:000000000040993f\n.text:0000000000409942\n.text:0000000000409947\n.text:000000000040994a\n.text:000000000040994f\n.text:0000000000409954\n.text:0000000000409956\n.text:0000000000409959\n.text:000000000040995c\n.text:0000000000409961\n.text:0000000000409966\n.text:000000000040996b\n.text:000000000040996d\n.text:0000000000409970\n.text:0000000000409973\n.text:0000000000409978\n.text:000000000040997d\n.text:0000000000409985\n.text:0000000000409989\n.text:0000000000409991\n.text:0000000000409995\n.text:000000000040999a\n.text:000000000040999e\n.text:00000000004099a6\n.text:00000000004099ab\n.text:00000000004099af\n.text:00000000004099b3\n.text:00000000004099b8\n.text:00000000004099bc\n.text:00000000004099c0\n.text:00000000004099c5\n.text:00000000004099ca\n.text:00000000004099cc\n.text:00000000004099cf\n.text:00000000004099d2\n.text:00000000004099d7\n.text:00000000004099dc\n.text:00000000004099e1\n.text:00000000004099e3\n.text:00000000004099e6\n.text:00000000004099e9\n.text:00000000004099ed\n.text:00000000004099ee\n.text:00000000004099f0\n.text:00000000004099f2\n.text:00000000004099f4\n.text:00000000004099f6\n.text:00000000004099f7\n'
p2155
tp2156
sS'next_prime'
p2157
(S'\n__stdcall next_prime(size_t candidate)\n'
p2158
V\u000asize_t next_prime(size_t candidate)\u000a\u000a{\u000a  _Bool _Var1;\u000a  size_t candidate_00;\u000a  size_t sVar2;\u000a  \u000a  candidate_00 = 10;\u000a  if (10 < candidate) {\u000a    candidate_00 = candidate;\u000a  }\u000a  candidate_00 = candidate_00 | 1;\u000a  while ((sVar2 = 0xffffffffffffffff, candidate_00 != 0xffffffffffffffff &&\u000a         (_Var1 = is_prime(candidate_00), sVar2 = candidate_00, _Var1 == false))) {\u000a    candidate_00 = candidate_00 + 2;\u000a  }\u000a  return sVar2;\u000a}\u000a\u000a
p2159
S'PUSH R14\nPUSH RBX\nPUSH RAX\nCMP RDI,0xa\nMOV EBX,0xa\nCMOVA RBX,RDI\nOR RBX,0x1\nMOV R14,-0x1\nCMP RBX,-0x1\nJNZ 0x0040a73a\nJMP 0x0040a749\nADD RBX,0x2\nCMP RBX,-0x1\nJZ 0x0040a749\nMOV RDI,RBX\nCALL 0x0040a760\nTEST AL,AL\nJZ 0x0040a730\nMOV R14,RBX\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p2160
S'41 56\n53\n50\n48 83 ff 0a\nbb 0a 00 00 00\n48 0f 47 df\n48 83 cb 01\n49 c7 c6 ff ff ff ff\n48 83 fb ff\n75 18\neb 25\n48 83 c3 02\n48 83 fb ff\n74 0f\n48 89 df\ne8 1e 00 00 00\n84 c0\n74 ea\n49 89 de\n4c 89 f0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p2161
S'.text:000000000040a700\n.text:000000000040a702\n.text:000000000040a703\n.text:000000000040a704\n.text:000000000040a708\n.text:000000000040a70d\n.text:000000000040a711\n.text:000000000040a715\n.text:000000000040a71c\n.text:000000000040a720\n.text:000000000040a722\n.text:000000000040a730\n.text:000000000040a734\n.text:000000000040a738\n.text:000000000040a73a\n.text:000000000040a73d\n.text:000000000040a742\n.text:000000000040a744\n.text:000000000040a746\n.text:000000000040a749\n.text:000000000040a74c\n.text:000000000040a750\n.text:000000000040a751\n.text:000000000040a753\n'
p2162
tp2163
sS'lsetfilecon'
p2164
(S'\n__stdcall lsetfilecon(char * file, security_context_t con)\n'
p2165
V\u000aint lsetfilecon(char *file,security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2166
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2167
S'50\ne8 da 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2168
S'.text:000000000040d600\n.text:000000000040d601\n.text:000000000040d606\n.text:000000000040d60c\n.text:000000000040d611\n.text:000000000040d612\n'
p2169
tp2170
sS'openat_restore_fail'
p2171
(S'\n__stdcall openat_restore_fail()\n'
p2172
V\u000avoid openat_restore_fail(uint uParm1)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"failed to return to initial working directory",5);\u000a  error((ulong)(uint)iVar1,(ulong)uParm1,uVar2,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p2173
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nMOV EBP,dword ptr [0x00618420]\nXOR EDI,EDI\nMOV ESI,0x4143b0\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nXOR EAX,EAX\nMOV EDI,EBP\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00402870\nCALL 0x004022d0\n'
p2174
S'55\n53\n50\n89 fb\n8b 2d 15 83 20 00\n31 ff\nbe b0 43 41 00\nba 05 00 00 00\ne8 04 23 ff ff\n48 89 c1\n31 c0\n89 ef\n89 de\n48 89 ca\ne8 43 27 ff ff\ne8 9e 21 ff ff\n'
p2175
S'.text:0000000000410100\n.text:0000000000410101\n.text:0000000000410102\n.text:0000000000410103\n.text:0000000000410105\n.text:000000000041010b\n.text:000000000041010d\n.text:0000000000410112\n.text:0000000000410117\n.text:000000000041011c\n.text:000000000041011f\n.text:0000000000410121\n.text:0000000000410123\n.text:0000000000410125\n.text:0000000000410128\n.text:000000000041012d\n'
p2176
tp2177
sS'utimecmp'
p2178
(S'\n__stdcall utimecmp(char * dst_name, stat * dst_stat, stat * src_stat)\n'
p2179
V\u000aint utimecmp(char *dst_name,stat *dst_stat,stat *src_stat)\u000a\u000a{\u000a  ulong uVar1;\u000a  __time_t _Var2;\u000a  Hash_table *table;\u000a  Hash_table *ht;\u000a  fs_res *new_dst_res;\u000a  int iVar3;\u000a  uint uVar4;\u000a  int iVar5;\u000a  int iVar6;\u000a  long lVar7;\u000a  fs_res *entry;\u000a  ulong uVar8;\u000a  ulong uVar9;\u000a  uint uVar10;\u000a  ulong in_RCX;\u000a  uint uVar11;\u000a  int iVar12;\u000a  ulong uVar13;\u000a  int iVar14;\u000a  ulong uVar15;\u000a  timespec timespec [2];\u000a  timespec local_f8;\u000a  ulong local_e8;\u000a  ulong local_e0;\u000a  fs_res local_d0;\u000a  undefined local_c0 [88];\u000a  uint local_68;\u000a  undefined4 uStack100;\u000a  \u000a  uVar1 = (dst_stat->st_mtim).tv_sec;\u000a  uVar15 = (src_stat->st_mtim).tv_sec;\u000a  _iVar3 = get_stat_mtime_ns(dst_stat);\u000a  iVar3 = (int)_iVar3;\u000a  lVar7 = get_stat_mtime_ns(src_stat);\u000a  iVar14 = (int)lVar7;\u000a  if ((in_RCX & 1) == 0) goto LAB_0040d813;\u000a  if ((uVar1 == uVar15) && (iVar3 == iVar14)) {\u000a    return 0;\u000a  }\u000a  if ((long)uVar1 <= (long)(uVar15 - 2)) {\u000a    return -1;\u000a  }\u000a  if ((long)uVar15 <= (long)(uVar1 - 2)) {\u000a    return 1;\u000a  }\u000a  if ((ht == (Hash_table *)0x0) &&\u000a     (ht = hash_initialize(0x10,(Hash_tuning *)0x0,dev_info_hash,dev_info_compare,free),\u000a     ht == (Hash_table *)0x0)) {\u000aLAB_0040d944:\u000a    local_d0.resolution = 2000000000;\u000a    local_d0.exact = false;\u000a    entry = &local_d0;\u000aLAB_0040d956:\u000a    if (entry->exact == false) goto LAB_0040d964;\u000aLAB_0040d95c:\u000a    iVar5 = entry->resolution;\u000a  }\u000a  else {\u000a    table = ht;\u000a    if (new_dst_res == (fs_res *)0x0) {\u000a      new_dst_res = (fs_res *)malloc(0x10);\u000a      if (new_dst_res != (fs_res *)0x0) {\u000a        new_dst_res->resolution = 2000000000;\u000a        new_dst_res->exact = false;\u000a        goto LAB_0040d8e9;\u000a      }\u000a      entry = (fs_res *)0x0;\u000aLAB_0040d921:\u000a      if (ht != (Hash_table *)0x0) {\u000a        local_d0.dev = dst_stat->st_dev;\u000a        entry = (fs_res *)hash_lookup(ht,&local_d0);\u000a      }\u000a      if (entry == (fs_res *)0x0) goto LAB_0040d944;\u000a      goto LAB_0040d956;\u000a    }\u000aLAB_0040d8e9:\u000a    entry = new_dst_res;\u000a    new_dst_res->dev = dst_stat->st_dev;\u000a    entry = (fs_res *)hash_insert(table,entry);\u000a    if (entry == (fs_res *)0x0) goto LAB_0040d921;\u000a    if (entry != new_dst_res) goto LAB_0040d956;\u000a    new_dst_res = (fs_res *)0x0;\u000a    if (entry->exact != false) goto LAB_0040d95c;\u000aLAB_0040d964:\u000a    local_f8.tv_sec = (dst_stat->st_atim).tv_sec;\u000a    _Var2 = (dst_stat->st_ctim).tv_sec;\u000a    uVar8 = get_stat_atime_ns(dst_stat);\u000a    uVar9 = get_stat_ctime_ns(dst_stat);\u000a    iVar6 = (int)uVar8;\u000a    iVar5 = (int)uVar9;\u000a    if ((iVar3 + (iVar3 / 10 + (iVar3 >> 0x1f) + (uint)((ulong)((long)iVar3 * 0x66666667) >> 0x3f))\u000a                 * -10 |\u000a         iVar6 + (iVar6 / 10 + (iVar6 >> 0x1f) + (uint)((ulong)((long)iVar6 * 0x66666667) >> 0x3f))\u000a                 * -10 |\u000a        iVar5 + (iVar5 / 10 + (iVar5 >> 0x1f) + (uint)((ulong)((long)iVar5 * 0x66666667) >> 0x3f)) *\u000a                -10) == 0) {\u000a      uVar13 = 10;\u000a      if (entry->resolution < 0xb) {\u000aLAB_0040db34:\u000a        entry->resolution = (int)uVar13;\u000a      }\u000a      else {\u000a        uVar13 = 10;\u000a        uVar8 = uVar8 & 0xffffffff;\u000a        do {\u000a          iVar5 = (int)_iVar3;\u000a          uVar11 = iVar5 / 10 + (iVar5 >> 0x1f) + (uint)((ulong)((long)iVar5 * 0x66666667) >> 0x3f);\u000a          _iVar3 = (ulong)uVar11;\u000a          iVar5 = (int)uVar9;\u000a          uVar4 = iVar5 / 10 + (iVar5 >> 0x1f) + (uint)((ulong)((long)iVar5 * 0x66666667) >> 0x3f);\u000a          uVar9 = (ulong)uVar4;\u000a          iVar5 = (int)uVar8;\u000a          uVar10 = iVar5 / 10 + (iVar5 >> 0x1f) + (uint)((ulong)((long)iVar5 * 0x66666667) >> 0x3f);\u000a          uVar8 = (ulong)uVar10;\u000a          if ((uVar11 + ((int)uVar11 / 10 + ((int)uVar11 >> 0x1f) +\u000a                        (uint)((ulong)((long)(int)uVar11 * 0x66666667) >> 0x3f)) * -10 |\u000a              uVar4 + ((int)uVar4 / 10 + ((int)uVar4 >> 0x1f) +\u000a                      (uint)((ulong)((long)(int)uVar4 * 0x66666667) >> 0x3f)) * -10 |\u000a              uVar10 + ((int)uVar10 / 10 + ((int)uVar10 >> 0x1f) +\u000a                       (uint)((ulong)((long)(int)uVar10 * 0x66666667) >> 0x3f)) * -10) != 0) break;\u000a          if ((int)uVar13 == 1000000000) {\u000a            uVar13 = (ulong)(uint)(1000000000 <<\u000a                                  (~((byte)local_f8.tv_sec | (byte)uVar1 | (byte)_Var2) & 1));\u000a            goto LAB_0040db34;\u000a          }\u000a          uVar4 = (int)uVar13 * 10;\u000a          uVar13 = (ulong)uVar4;\u000a        } while ((int)uVar4 < entry->resolution);\u000a        iVar5 = (int)uVar13;\u000a        entry->resolution = iVar5;\u000a        if (iVar5 < 2) goto LAB_0040da07;\u000a      }\u000a      iVar12 = (int)uVar13;\u000a      if ((long)uVar15 < (long)uVar1) {\u000a        return 1;\u000a      }\u000a      if ((iVar14 <= iVar3) && (uVar1 == uVar15)) {\u000a        return 1;\u000a      }\u000a      _iVar3 = ~(ulong)(iVar12 == 2000000000) & uVar15;\u000a      if ((long)uVar1 < (long)_iVar3) {\u000a        return -1;\u000a      }\u000a      if ((uVar1 == _iVar3) && (iVar3 < iVar14 - iVar14 % iVar12)) {\u000a        return -1;\u000a      }\u000a      local_f8.tv_nsec = (long)iVar6;\u000a      local_e8 = (ulong)(iVar12 == 2000000000) | uVar1;\u000a      local_e0 = SEXT48((int)((uint)(uVar13 * 0x38e38e39 >> 0x21) + iVar3));\u000a      if ((dst_stat->st_mode & 0xf000) == 0xa000) {\u000a        iVar5 = lutimens(dst_name,&local_f8);\u000a      }\u000a      else {\u000a        iVar5 = utimens(dst_name,&local_f8);\u000a      }\u000a      if (iVar5 != 0) {\u000a        return -2;\u000a      }\u000a      if ((dst_stat->st_mode & 0xf000) == 0xa000) {\u000a        iVar5 = lstat(dst_name,(stat *)local_c0);\u000a      }\u000a      else {\u000a        iVar5 = stat(dst_name,(stat *)local_c0);\u000a      }\u000a      _iVar3 = CONCAT44(uStack100,local_68);\u000a      uVar8 = get_stat_mtime_ns((stat *)local_c0);\u000a      uVar9 = SEXT48(iVar3);\u000a      if ((uVar8 ^ uVar9 | _iVar3 ^ uVar1 | (long)iVar5) != 0) {\u000a        if ((dst_stat->st_mode & 0xf000) == 0xa000) {\u000a          local_e8 = uVar1;\u000a          local_e0 = uVar9;\u000a          lutimens(dst_name,&local_f8);\u000a        }\u000a        else {\u000a          local_e8 = uVar1;\u000a          local_e0 = uVar9;\u000a          utimens(dst_name,&local_f8);\u000a        }\u000a      }\u000a      if (iVar5 != 0) {\u000a        return -2;\u000a      }\u000a      lVar7 = get_stat_mtime_ns((stat *)local_c0);\u000a      _iVar3 = lVar7 + (ulong)(-(local_68 & 1) & 1000000000);\u000a      iVar6 = (int)_iVar3;\u000a      iVar5 = 1;\u000a      if (iVar6 == (iVar6 / 10 + (iVar6 >> 0x1f) + (uint)((ulong)((long)iVar6 * 0x66666667) >> 0x3f)\u000a                   ) * 10) {\u000a        iVar5 = 1;\u000a        do {\u000a          if (iVar5 == 1000000000) {\u000a            iVar5 = 2000000000;\u000a            break;\u000a          }\u000a          iVar5 = iVar5 * 10;\u000a          if (iVar5 == iVar12) break;\u000a          iVar6 = (int)_iVar3;\u000a          uVar4 = iVar6 / 10 + (iVar6 >> 0x1f) + (uint)((ulong)((long)iVar6 * 0x66666667) >> 0x3f);\u000a          _iVar3 = (ulong)uVar4;\u000a        } while (uVar4 == ((int)uVar4 / 10 + ((int)uVar4 >> 0x1f) +\u000a                          (uint)((ulong)((long)(int)uVar4 * 0x66666667) >> 0x3f)) * 10);\u000a      }\u000a    }\u000a    else {\u000a      entry->resolution = 1;\u000a      iVar5 = 1;\u000a    }\u000aLAB_0040da07:\u000a    entry->resolution = iVar5;\u000a    entry->exact = true;\u000a  }\u000a  uVar15 = uVar15 & ~(ulong)(iVar5 == 2000000000);\u000a  iVar14 = iVar14 - iVar14 % iVar5;\u000aLAB_0040d813:\u000a  uVar4 = 0xffffffff;\u000a  if ((((long)uVar15 <= (long)uVar1) && (uVar4 = 1, (long)uVar1 <= (long)uVar15)) &&\u000a     (uVar4 = 0xffffffff, iVar14 <= iVar3)) {\u000a    uVar4 = (uint)(iVar14 < iVar3);\u000a  }\u000a  return (int)uVar4;\u000a}\u000a\u000a
p2180
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xe8\nMOV EBP,ECX\nMOV RBX,RDX\nMOV R15,RSI\nMOV qword ptr [RSP + 0x8],RDI\nMOV R12,qword ptr [R15 + 0x58]\nMOV R14,qword ptr [RBX + 0x58]\nMOV RDI,R15\nCALL 0x0040d710\nMOV qword ptr [RSP],RAX\nMOV RDI,RBX\nCALL 0x0040d710\nMOV R13,RAX\nTEST BPL,0x1\nJNZ 0x0040d846\nMOV ECX,0xffffffff\nCMP R12,R14\nJL 0x0040dc9b\nMOV ECX,0x1\nJG 0x0040dc9b\nCMP dword ptr [RSP],R13D\nMOV ECX,0xffffffff\nJL 0x0040dc9b\nSETG AL\nMOVZX ECX,AL\nJMP 0x0040dc9b\nCMP R12,R14\nJNZ 0x0040d857\nXOR ECX,ECX\nCMP dword ptr [RSP],R13D\nJZ 0x0040dc9b\nLEA RAX,[R14 + -0x2]\nMOV ECX,0xffffffff\nCMP R12,RAX\nJLE 0x0040dc9b\nLEA RAX,[R12 + -0x2]\nMOV ECX,0x1\nCMP R14,RAX\nJLE 0x0040dc9b\nMOV RBP,qword ptr [0x0061aaa0]\nTEST RBP,RBP\nJNZ 0x0040d8b7\nMOV EDI,0x10\nXOR ESI,ESI\nMOV EDX,0x40dd60\nMOV ECX,0x40dd70\nMOV R8D,0x402290\nCALL 0x00409c70\nMOV RBP,RAX\nMOV qword ptr [0x0061aaa0],RBP\nTEST RBP,RBP\nJZ 0x0040d944\nCMP qword ptr [0x0061aaa8],0x0\nJNZ 0x0040d8e9\nMOV EDI,0x10\nCALL 0x00402760\nMOV qword ptr [0x0061aaa8],RAX\nTEST RAX,RAX\nJZ 0x0040d91f\nMOV dword ptr [RAX + 0x8],0x77359400\nMOV RAX,qword ptr [0x0061aaa8]\nMOV byte ptr [RAX + 0xc],0x0\nMOV RAX,qword ptr [R15]\nMOV RSI,qword ptr [0x0061aaa8]\nMOV qword ptr [RSI],RAX\nMOV RDI,RBP\nCALL 0x0040a540\nTEST RAX,RAX\nJZ 0x0040d921\nCMP RAX,qword ptr [0x0061aaa8]\nJNZ 0x0040d956\nMOV qword ptr [0x0061aaa8],0x0\nCMP byte ptr [RAX + 0xc],0x0\nJNZ 0x0040d95c\nJMP 0x0040d964\nXOR EAX,EAX\nMOV RDI,qword ptr [0x0061aaa0]\nTEST RDI,RDI\nJZ 0x0040d93f\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RSP + 0x48],RAX\nLEA RSI,[RSP + 0x48]\nCALL 0x00409a00\nTEST RAX,RAX\nJNZ 0x0040d956\nMOV dword ptr [RSP + 0x50],0x77359400\nMOV byte ptr [RSP + 0x54],0x0\nLEA RAX,[RSP + 0x48]\nCMP byte ptr [RAX + 0xc],0x0\nJZ 0x0040d964\nMOV ECX,dword ptr [RAX + 0x8]\nJMP 0x0040da10\nMOV qword ptr [RSP + 0x18],RAX\nMOV RBX,qword ptr [R15 + 0x48]\nMOV qword ptr [RSP + 0x10],RBX\nOR RBX,R12\nOR RBX,qword ptr [R15 + 0x68]\nMOV RDI,R15\nCALL 0x0040d6f0\nMOV RBP,RAX\nMOV RDI,R15\nCALL 0x0040d700\nMOV R11,RBP\nMOVSXD RCX,R11D\nIMUL RDX,RCX,0x66666667\nMOV RSI,RDX\nSHR RSI,0x3f\nSAR RDX,0x22\nADD EDX,ESI\nADD EDX,EDX\nLEA EDX,[RDX + RDX*0x4]\nSUB ECX,EDX\nMOVSXD RDX,EAX\nIMUL RSI,RDX,0x66666667\nMOV RDI,RSI\nSHR RDI,0x3f\nSAR RSI,0x22\nADD ESI,EDI\nADD ESI,ESI\nLEA ESI,[RSI + RSI*0x4]\nSUB EDX,ESI\nMOV RBP,qword ptr [RSP]\nMOVSXD RSI,EBP\nIMUL RSI,RSI,0x66666667\nMOV RDI,RSI\nSHR RDI,0x3f\nSAR RSI,0x22\nADD ESI,EDI\nADD ESI,ESI\nLEA ESI,[RSI + RSI*0x4]\nMOV EDI,EBP\nSUB EDI,ESI\nOR EDI,ECX\nOR EDI,EDX\nJZ 0x0040da2f\nMOV R8,qword ptr [RSP + 0x18]\nMOV dword ptr [R8 + 0x8],0x1\nMOV ECX,0x1\nMOV dword ptr [R8 + 0x8],ECX\nMOV byte ptr [R8 + 0xc],0x1\nXOR EAX,EAX\nCMP ECX,0x77359400\nSETZ AL\nNOT RAX\nAND R14,RAX\nMOV EAX,R13D\nCDQ\nIDIV ECX\nSUB R13D,EDX\nJMP 0x0040d813\nMOV R10,RBX\nMOV R9D,0xa\nMOV R8,qword ptr [RSP + 0x18]\nCMP dword ptr [R8 + 0x8],0xb\nJL 0x0040db34\nMOV R9D,0xa\nMOV ECX,R11D\nMOV RDX,qword ptr [RSP]\nMOVSXD RDX,EDX\nIMUL RDX,RDX,0x66666667\nMOV RSI,RDX\nSHR RSI,0x3f\nSAR RDX,0x22\nADD EDX,ESI\nCDQE\nIMUL RAX,RAX,0x66666667\nMOV RSI,RAX\nSHR RSI,0x3f\nSAR RAX,0x22\nADD EAX,ESI\nMOVSXD RCX,ECX\nIMUL RCX,RCX,0x66666667\nMOV RSI,RCX\nSHR RSI,0x3f\nSAR RCX,0x22\nADD ECX,ESI\nMOVSXD RDI,ECX\nIMUL RSI,RDI,0x66666667\nMOV RBX,RSI\nSHR RBX,0x3f\nSAR RSI,0x22\nADD ESI,EBX\nADD ESI,ESI\nLEA ESI,[RSI + RSI*0x4]\nSUB EDI,ESI\nMOVSXD RSI,EAX\nIMUL RBX,RSI,0x66666667\nMOV RBP,RBX\nSHR RBP,0x3f\nSAR RBX,0x22\nADD EBX,EBP\nADD EBX,EBX\nLEA EBP,[RBX + RBX*0x4]\nSUB ESI,EBP\nOR ESI,EDI\nMOVSXD RDI,EDX\nIMUL RBP,RDI,0x66666667\nMOV RBX,RBP\nSHR RBX,0x3f\nSAR RBP,0x22\nADD EBP,EBX\nADD EBP,EBP\nLEA EBP,[RBP + RBP*0x4]\nSUB EDI,EBP\nOR EDI,ESI\nJNZ 0x0040db14\nCMP R9D,0x3b9aca00\nJZ 0x0040db27\nADD R9D,R9D\nLEA R9D,[R9 + R9*0x4]\nCMP R9D,dword ptr [R8 + 0x8]\nJL 0x0040da55\nMOV dword ptr [R8 + 0x8],R9D\nCMP R9D,0x1\nMOV ECX,R9D\nJLE 0x0040da07\nJMP 0x0040db38\nNOT R10D\nAND R10B,0x1\nMOV ECX,R10D\nSHL R9D,CL\nMOV dword ptr [R8 + 0x8],R9D\nXOR ESI,ESI\nCMP R9D,0x77359400\nSETZ AL\nMOV ECX,0x1\nCMP R14,R12\nJL 0x0040dc9b\nCMP R12,R14\nSETNZ DL\nCMP R13D,dword ptr [RSP]\nJG 0x0040db66\nTEST DL,DL\nJZ 0x0040dc9b\nMOV SIL,AL\nMOV RAX,RSI\nNOT RAX\nAND RAX,R14\nMOV ECX,0xffffffff\nCMP R12,RAX\nJL 0x0040dc9b\nJNZ 0x0040db97\nMOV EAX,R13D\nCDQ\nIDIV R9D\nMOV EAX,R13D\nSUB EAX,EDX\nCMP dword ptr [RSP],EAX\nJL 0x0040dc9b\nMOV RAX,qword ptr [RSP + 0x10]\nMOV qword ptr [RSP + 0x20],RAX\nMOVSXD RAX,R11D\nMOV qword ptr [RSP + 0x28],RAX\nOR RSI,R12\nMOV qword ptr [RSP + 0x30],RSI\nMOV qword ptr [RSP + 0x10],R9\nMOV EAX,R9D\nIMUL RAX,RAX,0x38e38e39\nSHR RAX,0x21\nADD EAX,dword ptr [RSP]\nCDQE\nMOV qword ptr [RSP + 0x38],RAX\nMOV EAX,0xf000\nAND EAX,dword ptr [R15 + 0x18]\nLEA RSI,[RSP + 0x20]\nCMP EAX,0xa000\nJNZ 0x0040dbef\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x0040e2a0\nJMP 0x0040dbf9\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x0040e280\nMOV ECX,0xfffffffe\nTEST EAX,EAX\nJNZ 0x0040dc9b\nMOV EAX,0xf000\nAND EAX,dword ptr [R15 + 0x18]\nLEA RSI,[RSP + 0x58]\nCMP EAX,0xa000\nJNZ 0x0040dc27\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x004107b0\nJMP 0x0040dc31\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00410790\nMOV EBP,EAX\nCDQE\nMOV RBX,qword ptr [0xb0 + RSP]\nXOR RBX,R12\nOR RBX,RAX\nLEA RDI,[RSP + 0x58]\nCALL 0x0040d710\nMOVSXD RCX,dword ptr [RSP]\nXOR RAX,RCX\nOR RAX,RBX\nJZ 0x0040dc92\nMOV qword ptr [RSP + 0x30],R12\nMOV qword ptr [RSP + 0x38],RCX\nMOV EAX,0xf000\nAND EAX,dword ptr [R15 + 0x18]\nLEA RSI,[RSP + 0x20]\nCMP EAX,0xa000\nJNZ 0x0040dc88\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x0040e2a0\nTEST EBP,EBP\nJNZ 0x0040dc96\nJMP 0x0040dcaf\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x0040e280\nTEST EBP,EBP\nJZ 0x0040dcaf\nMOV ECX,0xfffffffe\nMOV EAX,ECX\nADD RSP,0xe8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EBX,dword ptr [0xb0 + RSP]\nAND EBX,0x1\nNEG EBX\nAND EBX,0x3b9aca00\nLEA RDI,[RSP + 0x58]\nCALL 0x0040d710\nADD RAX,RBX\nMOVSXD RDX,EAX\nIMUL RCX,RDX,0x66666667\nMOV RSI,RCX\nSHR RSI,0x3f\nSAR RCX,0x22\nADD ECX,ESI\nADD ECX,ECX\nLEA ESI,[RCX + RCX*0x4]\nMOV ECX,0x1\nCMP EDX,ESI\nMOV RBP,qword ptr [RSP + 0x10]\nJZ 0x0040dd02\nMOV R8,qword ptr [RSP + 0x18]\nJMP 0x0040da07\nMOV ECX,0x1\nCMP ECX,0x3b9aca00\nJZ 0x0040dd50\nADD ECX,ECX\nLEA ECX,[RCX + RCX*0x4]\nCMP ECX,EBP\nJZ 0x0040dcf8\nCDQE\nIMUL RAX,RAX,0x66666667\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x22\nADD EAX,EDX\nMOVSXD RDX,EAX\nIMUL RSI,RDX,0x66666667\nMOV RDI,RSI\nSHR RDI,0x3f\nSAR RSI,0x22\nADD ESI,EDI\nADD ESI,ESI\nLEA ESI,[RSI + RSI*0x4]\nCMP EDX,ESI\nJZ 0x0040dd07\nJMP 0x0040dcf8\nMOV ECX,0x77359400\nMOV R8,qword ptr [RSP + 0x18]\nJMP 0x0040da07\n'
p2181
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec e8 00 00 00\n89 cd\n48 89 d3\n49 89 f7\n48 89 7c 24 08\n4d 8b 67 58\n4c 8b 73 58\n4c 89 ff\ne8 12 ff ff ff\n48 89 04 24\n48 89 df\ne8 06 ff ff ff\n49 89 c5\n40 f6 c5 01\n75 33\nb9 ff ff ff ff\n4d 39 f4\n0f 8c 7a 04 00 00\nb9 01 00 00 00\n0f 8f 6f 04 00 00\n44 39 2c 24\nb9 ff ff ff ff\n0f 8c 60 04 00 00\n0f 9f c0\n0f b6 c8\ne9 55 04 00 00\n4d 39 f4\n75 0c\n31 c9\n44 39 2c 24\n0f 84 44 04 00 00\n49 8d 46 fe\nb9 ff ff ff ff\n49 39 c4\n0f 8e 32 04 00 00\n49 8d 44 24 fe\nb9 01 00 00 00\n49 39 c6\n0f 8e 1f 04 00 00\n48 8b 2d 1d d2 20 00\n48 85 ed\n75 2f\nbf 10 00 00 00\n31 f6\nba 60 dd 40 00\nb9 70 dd 40 00\n41 b8 90 22 40 00\ne8 cc c3 ff ff\n48 89 c5\n48 89 2d f2 d1 20 00\n48 85 ed\n0f 84 8d 00 00 00\n48 83 3d e9 d1 20 00 00\n75 28\nbf 10 00 00 00\ne8 95 4e ff ff\n48 89 05 d6 d1 20 00\n48 85 c0\n74 48\nc7 40 08 00 94 35 77\n48 8b 05 c3 d1 20 00\nc6 40 0c 00\n49 8b 07\n48 8b 35 b5 d1 20 00\n48 89 06\n48 89 ef\ne8 42 cc ff ff\n48 85 c0\n74 1e\n48 3b 05 9e d1 20 00\n75 4a\n48 c7 05 91 d1 20 00 00 00 00 00\n80 78 0c 00\n75 3f\neb 45\n31 c0\n48 8b 3d 78 d1 20 00\n48 85 ff\n74 12\n49 8b 07\n48 89 44 24 48\n48 8d 74 24 48\ne8 c1 c0 ff ff\n48 85 c0\n75 12\nc7 44 24 50 00 94 35 77\nc6 44 24 54 00\n48 8d 44 24 48\n80 78 0c 00\n74 08\n8b 48 08\ne9 ac 00 00 00\n48 89 44 24 18\n49 8b 5f 48\n48 89 5c 24 10\n4c 09 e3\n49 0b 5f 68\n4c 89 ff\ne8 6f fd ff ff\n48 89 c5\n4c 89 ff\ne8 74 fd ff ff\n49 89 eb\n49 63 cb\n48 69 d1 67 66 66 66\n48 89 d6\n48 c1 ee 3f\n48 c1 fa 22\n01 f2\n01 d2\n8d 14 92\n29 d1\n48 63 d0\n48 69 f2 67 66 66 66\n48 89 f7\n48 c1 ef 3f\n48 c1 fe 22\n01 fe\n01 f6\n8d 34 b6\n29 f2\n48 8b 2c 24\n48 63 f5\n48 69 f6 67 66 66 66\n48 89 f7\n48 c1 ef 3f\n48 c1 fe 22\n01 fe\n01 f6\n8d 34 b6\n89 ef\n29 f7\n09 cf\n09 d7\n74 3a\n4c 8b 44 24 18\n41 c7 40 08 01 00 00 00\nb9 01 00 00 00\n41 89 48 08\n41 c6 40 0c 01\n31 c0\n81 f9 00 94 35 77\n0f 94 c0\n48 f7 d0\n49 21 c6\n44 89 e8\n99\nf7 f9\n41 29 d5\ne9 e4 fd ff ff\n49 89 da\n41 b9 0a 00 00 00\n4c 8b 44 24 18\n41 83 78 08 0b\n0f 8c ec 00 00 00\n41 b9 0a 00 00 00\n44 89 d9\n48 8b 14 24\n48 63 d2\n48 69 d2 67 66 66 66\n48 89 d6\n48 c1 ee 3f\n48 c1 fa 22\n01 f2\n48 98\n48 69 c0 67 66 66 66\n48 89 c6\n48 c1 ee 3f\n48 c1 f8 22\n01 f0\n48 63 c9\n48 69 c9 67 66 66 66\n48 89 ce\n48 c1 ee 3f\n48 c1 f9 22\n01 f1\n48 63 f9\n48 69 f7 67 66 66 66\n48 89 f3\n48 c1 eb 3f\n48 c1 fe 22\n01 de\n01 f6\n8d 34 b6\n29 f7\n48 63 f0\n48 69 de 67 66 66 66\n48 89 dd\n48 c1 ed 3f\n48 c1 fb 22\n01 eb\n01 db\n8d 2c 9b\n29 ee\n09 fe\n48 63 fa\n48 69 ef 67 66 66 66\n48 89 eb\n48 c1 eb 3f\n48 c1 fd 22\n01 dd\n01 ed\n8d 6c ad 00\n29 ef\n09 f7\n75 1a\n41 81 f9 00 ca 9a 3b\n74 24\n45 01 c9\n47 8d 0c 89\n45 3b 48 08\n0f 8c 41 ff ff ff\n45 89 48 08\n41 83 f9 01\n44 89 c9\n0f 8e e2 fe ff ff\neb 11\n41 f7 d2\n41 80 e2 01\n44 89 d1\n41 d3 e1\n45 89 48 08\n31 f6\n41 81 f9 00 94 35 77\n0f 94 c0\nb9 01 00 00 00\n4d 39 e6\n0f 8c 49 01 00 00\n4d 39 f4\n0f 95 c2\n44 3b 2c 24\n7f 08\n84 d2\n0f 84 35 01 00 00\n40 88 c6\n48 89 f0\n48 f7 d0\n4c 21 f0\nb9 ff ff ff ff\n49 39 c4\n0f 8c 1b 01 00 00\n75 15\n44 89 e8\n99\n41 f7 f9\n44 89 e8\n29 d0\n39 04 24\n0f 8c 04 01 00 00\n48 8b 44 24 10\n48 89 44 24 20\n49 63 c3\n48 89 44 24 28\n4c 09 e6\n48 89 74 24 30\n4c 89 4c 24 10\n44 89 c8\n48 69 c0 39 8e e3 38\n48 c1 e8 21\n03 04 24\n48 98\n48 89 44 24 38\nb8 00 f0 00 00\n41 23 47 18\n48 8d 74 24 20\n3d 00 a0 00 00\n75 0c\n48 8b 7c 24 08\ne8 b3 06 00 00\neb 0a\n48 8b 7c 24 08\ne8 87 06 00 00\nb9 fe ff ff ff\n85 c0\n0f 85 95 00 00 00\nb8 00 f0 00 00\n41 23 47 18\n48 8d 74 24 58\n3d 00 a0 00 00\n75 0c\n48 8b 7c 24 08\ne8 8b 2b 00 00\neb 0a\n48 8b 7c 24 08\ne8 5f 2b 00 00\n89 c5\n48 98\n48 8b 9c 24 b0 00 00 00\n4c 31 e3\n48 09 c3\n48 8d 7c 24 58\ne8 c3 fa ff ff\n48 63 0c 24\n48 31 c8\n48 09 d8\n74 39\n4c 89 64 24 30\n48 89 4c 24 38\nb8 00 f0 00 00\n41 23 47 18\n48 8d 74 24 20\n3d 00 a0 00 00\n75 10\n48 8b 7c 24 08\ne8 1e 06 00 00\n85 ed\n75 10\neb 27\n48 8b 7c 24 08\ne8 ee 05 00 00\n85 ed\n74 19\nb9 fe ff ff ff\n89 c8\n48 81 c4 e8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n8b 9c 24 b0 00 00 00\n83 e3 01\nf7 db\n81 e3 00 ca 9a 3b\n48 8d 7c 24 58\ne8 45 fa ff ff\n48 01 d8\n48 63 d0\n48 69 ca 67 66 66 66\n48 89 ce\n48 c1 ee 3f\n48 c1 f9 22\n01 f1\n01 c9\n8d 34 89\nb9 01 00 00 00\n39 f2\n48 8b 6c 24 10\n74 0a\n4c 8b 44 24 18\ne9 05 fd ff ff\nb9 01 00 00 00\n81 f9 00 ca 9a 3b\n74 41\n01 c9\n8d 0c 89\n39 e9\n74 e0\n48 98\n48 69 c0 67 66 66 66\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 22\n01 d0\n48 63 d0\n48 69 f2 67 66 66 66\n48 89 f7\n48 c1 ef 3f\n48 c1 fe 22\n01 fe\n01 f6\n8d 34 b6\n39 f2\n74 b9\neb a8\nb9 00 94 35 77\n4c 8b 44 24 18\ne9 a8 fc ff ff\n'
p2182
S'.text:000000000040d7d0\n.text:000000000040d7d1\n.text:000000000040d7d3\n.text:000000000040d7d5\n.text:000000000040d7d7\n.text:000000000040d7d9\n.text:000000000040d7da\n.text:000000000040d7e1\n.text:000000000040d7e3\n.text:000000000040d7e6\n.text:000000000040d7e9\n.text:000000000040d7ee\n.text:000000000040d7f2\n.text:000000000040d7f6\n.text:000000000040d7f9\n.text:000000000040d7fe\n.text:000000000040d802\n.text:000000000040d805\n.text:000000000040d80a\n.text:000000000040d80d\n.text:000000000040d811\n.text:000000000040d813\n.text:000000000040d818\n.text:000000000040d81b\n.text:000000000040d821\n.text:000000000040d826\n.text:000000000040d82c\n.text:000000000040d830\n.text:000000000040d835\n.text:000000000040d83b\n.text:000000000040d83e\n.text:000000000040d841\n.text:000000000040d846\n.text:000000000040d849\n.text:000000000040d84b\n.text:000000000040d84d\n.text:000000000040d851\n.text:000000000040d857\n.text:000000000040d85b\n.text:000000000040d860\n.text:000000000040d863\n.text:000000000040d869\n.text:000000000040d86e\n.text:000000000040d873\n.text:000000000040d876\n.text:000000000040d87c\n.text:000000000040d883\n.text:000000000040d886\n.text:000000000040d888\n.text:000000000040d88d\n.text:000000000040d88f\n.text:000000000040d894\n.text:000000000040d899\n.text:000000000040d89f\n.text:000000000040d8a4\n.text:000000000040d8a7\n.text:000000000040d8ae\n.text:000000000040d8b1\n.text:000000000040d8b7\n.text:000000000040d8bf\n.text:000000000040d8c1\n.text:000000000040d8c6\n.text:000000000040d8cb\n.text:000000000040d8d2\n.text:000000000040d8d5\n.text:000000000040d8d7\n.text:000000000040d8de\n.text:000000000040d8e5\n.text:000000000040d8e9\n.text:000000000040d8ec\n.text:000000000040d8f3\n.text:000000000040d8f6\n.text:000000000040d8f9\n.text:000000000040d8fe\n.text:000000000040d901\n.text:000000000040d903\n.text:000000000040d90a\n.text:000000000040d90c\n.text:000000000040d917\n.text:000000000040d91b\n.text:000000000040d91d\n.text:000000000040d91f\n.text:000000000040d921\n.text:000000000040d928\n.text:000000000040d92b\n.text:000000000040d92d\n.text:000000000040d930\n.text:000000000040d935\n.text:000000000040d93a\n.text:000000000040d93f\n.text:000000000040d942\n.text:000000000040d944\n.text:000000000040d94c\n.text:000000000040d951\n.text:000000000040d956\n.text:000000000040d95a\n.text:000000000040d95c\n.text:000000000040d95f\n.text:000000000040d964\n.text:000000000040d969\n.text:000000000040d96d\n.text:000000000040d972\n.text:000000000040d975\n.text:000000000040d979\n.text:000000000040d97c\n.text:000000000040d981\n.text:000000000040d984\n.text:000000000040d987\n.text:000000000040d98c\n.text:000000000040d98f\n.text:000000000040d992\n.text:000000000040d999\n.text:000000000040d99c\n.text:000000000040d9a0\n.text:000000000040d9a4\n.text:000000000040d9a6\n.text:000000000040d9a8\n.text:000000000040d9ab\n.text:000000000040d9ad\n.text:000000000040d9b0\n.text:000000000040d9b7\n.text:000000000040d9ba\n.text:000000000040d9be\n.text:000000000040d9c2\n.text:000000000040d9c4\n.text:000000000040d9c6\n.text:000000000040d9c9\n.text:000000000040d9cb\n.text:000000000040d9cf\n.text:000000000040d9d2\n.text:000000000040d9d9\n.text:000000000040d9dc\n.text:000000000040d9e0\n.text:000000000040d9e4\n.text:000000000040d9e6\n.text:000000000040d9e8\n.text:000000000040d9eb\n.text:000000000040d9ed\n.text:000000000040d9ef\n.text:000000000040d9f1\n.text:000000000040d9f3\n.text:000000000040d9f5\n.text:000000000040d9fa\n.text:000000000040da02\n.text:000000000040da07\n.text:000000000040da0b\n.text:000000000040da10\n.text:000000000040da12\n.text:000000000040da18\n.text:000000000040da1b\n.text:000000000040da1e\n.text:000000000040da21\n.text:000000000040da24\n.text:000000000040da25\n.text:000000000040da27\n.text:000000000040da2a\n.text:000000000040da2f\n.text:000000000040da32\n.text:000000000040da38\n.text:000000000040da3d\n.text:000000000040da42\n.text:000000000040da48\n.text:000000000040da4e\n.text:000000000040da51\n.text:000000000040da55\n.text:000000000040da58\n.text:000000000040da5f\n.text:000000000040da62\n.text:000000000040da66\n.text:000000000040da6a\n.text:000000000040da6c\n.text:000000000040da6e\n.text:000000000040da75\n.text:000000000040da78\n.text:000000000040da7c\n.text:000000000040da80\n.text:000000000040da82\n.text:000000000040da85\n.text:000000000040da8c\n.text:000000000040da8f\n.text:000000000040da93\n.text:000000000040da97\n.text:000000000040da99\n.text:000000000040da9c\n.text:000000000040daa3\n.text:000000000040daa6\n.text:000000000040daaa\n.text:000000000040daae\n.text:000000000040dab0\n.text:000000000040dab2\n.text:000000000040dab5\n.text:000000000040dab7\n.text:000000000040daba\n.text:000000000040dac1\n.text:000000000040dac4\n.text:000000000040dac8\n.text:000000000040dacc\n.text:000000000040dace\n.text:000000000040dad0\n.text:000000000040dad3\n.text:000000000040dad5\n.text:000000000040dad7\n.text:000000000040dada\n.text:000000000040dae1\n.text:000000000040dae4\n.text:000000000040dae8\n.text:000000000040daec\n.text:000000000040daee\n.text:000000000040daf0\n.text:000000000040daf4\n.text:000000000040daf6\n.text:000000000040daf8\n.text:000000000040dafa\n.text:000000000040db01\n.text:000000000040db03\n.text:000000000040db06\n.text:000000000040db0a\n.text:000000000040db0e\n.text:000000000040db14\n.text:000000000040db18\n.text:000000000040db1c\n.text:000000000040db1f\n.text:000000000040db25\n.text:000000000040db27\n.text:000000000040db2a\n.text:000000000040db2e\n.text:000000000040db31\n.text:000000000040db34\n.text:000000000040db38\n.text:000000000040db3a\n.text:000000000040db41\n.text:000000000040db44\n.text:000000000040db49\n.text:000000000040db4c\n.text:000000000040db52\n.text:000000000040db55\n.text:000000000040db58\n.text:000000000040db5c\n.text:000000000040db5e\n.text:000000000040db60\n.text:000000000040db66\n.text:000000000040db69\n.text:000000000040db6c\n.text:000000000040db6f\n.text:000000000040db72\n.text:000000000040db77\n.text:000000000040db7a\n.text:000000000040db80\n.text:000000000040db82\n.text:000000000040db85\n.text:000000000040db86\n.text:000000000040db89\n.text:000000000040db8c\n.text:000000000040db8e\n.text:000000000040db91\n.text:000000000040db97\n.text:000000000040db9c\n.text:000000000040dba1\n.text:000000000040dba4\n.text:000000000040dba9\n.text:000000000040dbac\n.text:000000000040dbb1\n.text:000000000040dbb6\n.text:000000000040dbb9\n.text:000000000040dbc0\n.text:000000000040dbc4\n.text:000000000040dbc7\n.text:000000000040dbc9\n.text:000000000040dbce\n.text:000000000040dbd3\n.text:000000000040dbd7\n.text:000000000040dbdc\n.text:000000000040dbe1\n.text:000000000040dbe3\n.text:000000000040dbe8\n.text:000000000040dbed\n.text:000000000040dbef\n.text:000000000040dbf4\n.text:000000000040dbf9\n.text:000000000040dbfe\n.text:000000000040dc00\n.text:000000000040dc06\n.text:000000000040dc0b\n.text:000000000040dc0f\n.text:000000000040dc14\n.text:000000000040dc19\n.text:000000000040dc1b\n.text:000000000040dc20\n.text:000000000040dc25\n.text:000000000040dc27\n.text:000000000040dc2c\n.text:000000000040dc31\n.text:000000000040dc33\n.text:000000000040dc35\n.text:000000000040dc3d\n.text:000000000040dc40\n.text:000000000040dc43\n.text:000000000040dc48\n.text:000000000040dc4d\n.text:000000000040dc51\n.text:000000000040dc54\n.text:000000000040dc57\n.text:000000000040dc59\n.text:000000000040dc5e\n.text:000000000040dc63\n.text:000000000040dc68\n.text:000000000040dc6c\n.text:000000000040dc71\n.text:000000000040dc76\n.text:000000000040dc78\n.text:000000000040dc7d\n.text:000000000040dc82\n.text:000000000040dc84\n.text:000000000040dc86\n.text:000000000040dc88\n.text:000000000040dc8d\n.text:000000000040dc92\n.text:000000000040dc94\n.text:000000000040dc96\n.text:000000000040dc9b\n.text:000000000040dc9d\n.text:000000000040dca4\n.text:000000000040dca5\n.text:000000000040dca7\n.text:000000000040dca9\n.text:000000000040dcab\n.text:000000000040dcad\n.text:000000000040dcae\n.text:000000000040dcaf\n.text:000000000040dcb6\n.text:000000000040dcb9\n.text:000000000040dcbb\n.text:000000000040dcc1\n.text:000000000040dcc6\n.text:000000000040dccb\n.text:000000000040dcce\n.text:000000000040dcd1\n.text:000000000040dcd8\n.text:000000000040dcdb\n.text:000000000040dcdf\n.text:000000000040dce3\n.text:000000000040dce5\n.text:000000000040dce7\n.text:000000000040dcea\n.text:000000000040dcef\n.text:000000000040dcf1\n.text:000000000040dcf6\n.text:000000000040dcf8\n.text:000000000040dcfd\n.text:000000000040dd02\n.text:000000000040dd07\n.text:000000000040dd0d\n.text:000000000040dd0f\n.text:000000000040dd11\n.text:000000000040dd14\n.text:000000000040dd16\n.text:000000000040dd18\n.text:000000000040dd1a\n.text:000000000040dd21\n.text:000000000040dd24\n.text:000000000040dd28\n.text:000000000040dd2c\n.text:000000000040dd2e\n.text:000000000040dd31\n.text:000000000040dd38\n.text:000000000040dd3b\n.text:000000000040dd3f\n.text:000000000040dd43\n.text:000000000040dd45\n.text:000000000040dd47\n.text:000000000040dd4a\n.text:000000000040dd4c\n.text:000000000040dd4e\n.text:000000000040dd50\n.text:000000000040dd55\n.text:000000000040dd5a\n'
p2183
tp2184
sS'__vfprintf_chk'
p2185
(S'\n__stdcall __vfprintf_chk()\n'
p2186
V\u000avoid __vfprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___vfprintf_chk_00618040)();\u000a  return;\u000a}\u000a\u000a
p2187
S'JMP qword ptr [0x00618040]\n'
p2188
S'ff 25 8a 5d 21 00\n'
p2189
S'.plt:00000000004022b0\n'
p2190
tp2191
sS'getpwnam'
p2192
(S'\n__stdcall getpwnam(char * __name)\n'
p2193
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000apasswd * getpwnam(char *__name)\u000a\u000a{\u000a  passwd *ppVar1;\u000a  \u000a  ppVar1 = (passwd *)(*(code *)PTR_getpwnam_00618230)();\u000a  return ppVar1;\u000a}\u000a\u000a
p2194
S'JMP qword ptr [0x00618230]\n'
p2195
S'ff 25 9a 5b 21 00\n'
p2196
S'.plt:0000000000402690\n'
p2197
tp2198
sS'hash_insert'
p2199
(S'\n__stdcall hash_insert(Hash_table * table, void * entry)\n'
p2200
V\u000avoid * hash_insert(Hash_table *table,void *entry)\u000a\u000a{\u000a  int iVar1;\u000a  void *matched_ent;\u000a  void *local_10;\u000a  \u000a  iVar1 = hash_insert_if_absent(table,entry,&local_10);\u000a  if (iVar1 == -1) {\u000a    entry = (void *)0x0;\u000a  }\u000a  else {\u000a    if (iVar1 == 0) {\u000a      entry = local_10;\u000a    }\u000a  }\u000a  return entry;\u000a}\u000a\u000a
p2201
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RSI\nLEA RDX,[RSP + 0x8]\nCALL 0x0040a270\nCMP EAX,-0x1\nJZ 0x0040a561\nTEST EAX,EAX\nCMOVZ RBX,qword ptr [RSP + 0x8]\nJMP 0x0040a563\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x10\nPOP RBX\nRET\n'
p2202
S'53\n48 83 ec 10\n48 89 f3\n48 8d 54 24 08\ne8 1e fd ff ff\n83 f8 ff\n74 0a\n85 c0\n48 0f 44 5c 24 08\neb 02\n31 db\n48 89 d8\n48 83 c4 10\n5b\nc3\n'
p2203
S'.text:000000000040a540\n.text:000000000040a541\n.text:000000000040a545\n.text:000000000040a548\n.text:000000000040a54d\n.text:000000000040a552\n.text:000000000040a555\n.text:000000000040a557\n.text:000000000040a559\n.text:000000000040a55f\n.text:000000000040a561\n.text:000000000040a563\n.text:000000000040a566\n.text:000000000040a56a\n.text:000000000040a56b\n'
p2204
tp2205
sS'gettext_quote'
p2206
(S'\n__stdcall gettext_quote(char * msgid)\n'
p2207
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_0041378e;\u000a        pcVar2 = &DAT_00413792;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p2208
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00402420\nCMP RAX,RBX\nJNZ 0x0040c7a8\nCALL 0x0040fc10\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x0040c7b0\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x0040c758\nCMP byte ptr [RBX],0x60\nMOV ECX,0x41377e\nMOV EAX,0x413782\nJMP 0x0040c7a4\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x0040c7b0\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x0040c796\nCMP byte ptr [RBX],0x60\nMOV ECX,0x41378e\nMOV EAX,0x413792\nJMP 0x0040c7a4\nCMP R14D,0x9\nMOV ECX,0x413774\nMOV EAX,0x414424\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p2209
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 17 5d ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 f9 34 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 7e 37 41 00\nb8 82 37 41 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 8e 37 41 00\nb8 92 37 41 00\neb 0e\n41 83 fe 09\nb9 74 37 41 00\nb8 24 44 41 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p2210
S'.text:000000000040c6f0\n.text:000000000040c6f1\n.text:000000000040c6f3\n.text:000000000040c6f4\n.text:000000000040c6f7\n.text:000000000040c6fa\n.text:000000000040c6fc\n.text:000000000040c701\n.text:000000000040c704\n.text:000000000040c709\n.text:000000000040c70c\n.text:000000000040c712\n.text:000000000040c717\n.text:000000000040c71a\n.text:000000000040c71f\n.text:000000000040c724\n.text:000000000040c729\n.text:000000000040c72f\n.text:000000000040c735\n.text:000000000040c738\n.text:000000000040c73a\n.text:000000000040c73c\n.text:000000000040c741\n.text:000000000040c745\n.text:000000000040c747\n.text:000000000040c749\n.text:000000000040c74c\n.text:000000000040c751\n.text:000000000040c756\n.text:000000000040c758\n.text:000000000040c75d\n.text:000000000040c762\n.text:000000000040c767\n.text:000000000040c76d\n.text:000000000040c773\n.text:000000000040c776\n.text:000000000040c778\n.text:000000000040c77a\n.text:000000000040c77f\n.text:000000000040c783\n.text:000000000040c785\n.text:000000000040c787\n.text:000000000040c78a\n.text:000000000040c78f\n.text:000000000040c794\n.text:000000000040c796\n.text:000000000040c79a\n.text:000000000040c79f\n.text:000000000040c7a4\n.text:000000000040c7a8\n.text:000000000040c7a9\n.text:000000000040c7ab\n.text:000000000040c7ac\n'
p2211
tp2212
sS'fsetfilecon'
p2213
(S'\n__stdcall fsetfilecon(security_context_t con)\n'
p2214
V\u000aint fsetfilecon(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2215
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2216
S'50\ne8 ba 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2217
S'.text:000000000040d620\n.text:000000000040d621\n.text:000000000040d626\n.text:000000000040d62c\n.text:000000000040d631\n.text:000000000040d632\n'
p2218
tp2219
sS'fclose'
p2220
(S'\n__stdcall fclose(FILE * __stream)\n'
p2221
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_006180d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p2222
S'JMP qword ptr [0x006180d0]\n'
p2223
S'ff 25 fa 5c 21 00\n'
p2224
S'.plt:00000000004023d0\n'
p2225
tp2226
sS'__ctype_get_mb_cur_max'
p2227
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p2228
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00618100)();\u000a  return sVar1;\u000a}\u000a\u000a
p2229
S'JMP qword ptr [0x00618100]\n'
p2230
S'ff 25 ca 5c 21 00\n'
p2231
S'.plt:0000000000402430\n'
p2232
tp2233
sS'change_timestamps'
p2234
(S'\n__stdcall change_timestamps(stat * src_sb, char * dest)\n'
p2235
V\u000a_Bool change_timestamps(stat *src_sb,char *dest)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  timespec timespec [2];\u000a  timespec local_48;\u000a  timespec local_38;\u000a  \u000a  local_48 = get_stat_atime(src_sb);\u000a  local_38 = get_stat_mtime(src_sb);\u000a  iVar2 = utimens(dest,&local_48);\u000a  if (iVar2 != 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    uVar4 = dcgettext(0,"cannot set time stamps for %s",5);\u000a    pcVar5 = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar1,uVar4,pcVar5);\u000a  }\u000a  return (_Bool)(iVar2 == 0);\u000a}\u000a\u000a
p2236
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x28\nMOV R15,RSI\nMOV RBX,RDI\nCALL 0x0040d730\nMOV qword ptr [RSP],RAX\nMOV qword ptr [RSP + 0x8],RDX\nMOV RDI,RBX\nCALL 0x0040d750\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],RDX\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x0040e280\nTEST EAX,EAX\nJZ 0x00403f2d\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x4120d1\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RDX,RBX\nCALL 0x00402870\nJMP 0x00403f30\nMOV R14B,0x1\nMOV EAX,R14D\nADD RSP,0x28\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2237
S'55\n41 57\n41 56\n53\n48 83 ec 28\n49 89 f7\n48 89 fb\ne8 6b 98 00 00\n48 89 04 24\n48 89 54 24 08\n48 89 df\ne8 7a 98 00 00\n48 89 44 24 10\n48 89 54 24 18\n48 89 e6\n4c 89 ff\ne8 95 a3 00 00\n85 c0\n74 3e\ne8 ec e3 ff ff\n8b 28\n45 31 f6\n31 ff\nbe d1 20 41 00\nba 05 00 00 00\ne8 16 e5 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 a6 85 00 00\n48 89 c1\n31 ff\n31 c0\n89 ee\n48 89 da\ne8 45 e9 ff ff\neb 03\n41 b6 01\n44 89 f0\n48 83 c4 28\n5b\n41 5e\n41 5f\n5d\nc3\n'
p2238
S'.text:0000000000403eb0\n.text:0000000000403eb1\n.text:0000000000403eb3\n.text:0000000000403eb5\n.text:0000000000403eb6\n.text:0000000000403eba\n.text:0000000000403ebd\n.text:0000000000403ec0\n.text:0000000000403ec5\n.text:0000000000403ec9\n.text:0000000000403ece\n.text:0000000000403ed1\n.text:0000000000403ed6\n.text:0000000000403edb\n.text:0000000000403ee0\n.text:0000000000403ee3\n.text:0000000000403ee6\n.text:0000000000403eeb\n.text:0000000000403eed\n.text:0000000000403eef\n.text:0000000000403ef4\n.text:0000000000403ef6\n.text:0000000000403ef9\n.text:0000000000403efb\n.text:0000000000403f00\n.text:0000000000403f05\n.text:0000000000403f0a\n.text:0000000000403f0d\n.text:0000000000403f12\n.text:0000000000403f15\n.text:0000000000403f1a\n.text:0000000000403f1d\n.text:0000000000403f1f\n.text:0000000000403f21\n.text:0000000000403f23\n.text:0000000000403f26\n.text:0000000000403f2b\n.text:0000000000403f2d\n.text:0000000000403f30\n.text:0000000000403f33\n.text:0000000000403f37\n.text:0000000000403f38\n.text:0000000000403f3a\n.text:0000000000403f3c\n.text:0000000000403f3d\n'
p2239
tp2240
sS'lstat'
p2241
(S'\n__stdcall lstat(char * __file, stat * __buf)\n'
p2242
V\u000aint lstat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___lxstat_00618110)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p2243
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00402450\n'
p2244
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 90 1c ff ff\n'
p2245
S'.text:00000000004107b0\n.text:00000000004107b3\n.text:00000000004107b6\n.text:00000000004107bb\n'
p2246
tp2247
sS'streamsavedir'
p2248
(S'\n__stdcall streamsavedir(DIR * dirp)\n'
p2249
V\u000achar * streamsavedir(DIR *dirp)\u000a\u000a{\u000a  char cVar1;\u000a  int iVar2;\u000a  char *__s;\u000a  int *piVar3;\u000a  dirent *pdVar4;\u000a  size_t sVar5;\u000a  char *__n;\u000a  char **ppcVar6;\u000a  ulong in_RSI;\u000a  char *__nmemb;\u000a  char *pcVar7;\u000a  char **local_68;\u000a  char *local_60;\u000a  char *local_58;\u000a  char *local_50;\u000a  char *local_48;\u000a  ulong local_40;\u000a  int (*local_38)(void *,void *);\u000a  \u000a  if (dirp == (DIR *)0x0) {\u000a    local_58 = (char *)0x0;\u000a  }\u000a  else {\u000a    local_38 = comparison_function_table[in_RSI & 0xffffffff];\u000a    local_40 = (in_RSI & 0xffffffff) - 1;\u000a    pcVar7 = (char *)0x0;\u000a    __nmemb = (char *)0x0;\u000a    local_48 = (char *)0x0;\u000a    local_68 = (char **)0x0;\u000a    local_50 = (char *)0x0;\u000a    local_58 = (char *)0x0;\u000a    while( true ) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0;\u000a      pdVar4 = readdir((DIR *)dirp);\u000a      if (pdVar4 == (dirent *)0x0) break;\u000a      if (pdVar4->d_name[0] == '.') {\u000a        cVar1 = pdVar4->d_name[(ulong)(pdVar4->d_name[1] == '.') + 1];\u000a      }\u000a      else {\u000a        cVar1 = pdVar4->d_name[0];\u000a      }\u000a      if (cVar1 != 0) {\u000a        __s = pdVar4->d_name;\u000a        sVar5 = strlen(__s);\u000a        __n = (char *)(sVar5 + 1);\u000a        if (local_40 < 2) {\u000a          if (local_48 == __nmemb) {\u000a            local_60 = local_48;\u000a            local_68 = (char **)x2nrealloc(local_68,(size_t *)&local_60,0x10);\u000a            local_48 = local_60;\u000a          }\u000a          __s = xstrdup(__s);\u000a          local_68[(long)__nmemb * 2] = __s;\u000a          local_68[(long)__nmemb * 2 + 1] = (char *)pdVar4->d_ino;\u000a          __nmemb = __nmemb + 1;\u000a          pcVar7 = pcVar7 + (long)__n;\u000a        }\u000a        else {\u000a          if (local_50 + -(long)pcVar7 <= __n) {\u000a            local_60 = __n + (long)pcVar7;\u000a            if (CARRY8((ulong)__n,(ulong)pcVar7)) {\u000a                    /* WARNING: Subroutine does not return */\u000a              xalloc_die();\u000a            }\u000a            local_58 = (char *)x2nrealloc(local_58,(size_t *)&local_60,1);\u000a            local_50 = local_60;\u000a          }\u000a          memcpy(local_58 + (long)pcVar7,__s,(size_t)__n);\u000a          pcVar7 = pcVar7 + (long)__n;\u000a        }\u000a      }\u000a    }\u000a    iVar2 = *piVar3;\u000a    if (iVar2 == 0) {\u000a      if (local_40 < 2) {\u000a        if (__nmemb == (char *)0x0) {\u000a          __s = (char *)xmalloc((size_t)(pcVar7 + 1));\u000a          pcVar7 = (char *)0x0;\u000a        }\u000a        else {\u000a          qsort(local_68,(size_t)__nmemb,0x10,(__compar_fn_t)local_38);\u000a          __s = (char *)xmalloc((size_t)(pcVar7 + 1));\u000a          pcVar7 = (char *)0x0;\u000a          ppcVar6 = local_68;\u000a          do {\u000a            __n = stpcpy(__s + (long)pcVar7,*ppcVar6);\u000a            pcVar7 = __n + (long)(pcVar7 + (1 - (long)(__s + (long)pcVar7)));\u000a            free(*ppcVar6);\u000a            ppcVar6 = ppcVar6 + 2;\u000a            __nmemb = __nmemb + -1;\u000a          } while (__nmemb != (char *)0x0);\u000a        }\u000a        free(local_68);\u000a        local_58 = __s;\u000a      }\u000a      else {\u000a        if (local_50 == pcVar7) {\u000a          local_58 = (char *)xrealloc(local_58,(size_t)(pcVar7 + 1));\u000a        }\u000a      }\u000a      local_58[(long)pcVar7] = 0;\u000a    }\u000a    else {\u000a      free(local_68);\u000a      free(local_58);\u000a      *piVar3 = iVar2;\u000a      local_58 = (char *)0x0;\u000a    }\u000a  }\u000a  return local_58;\u000a}\u000a\u000a
p2250
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R13,RDI\nTEST R13,R13\nJZ 0x0040cd70\nMOV ECX,ESI\nMOV RAX,qword ptr [0x4137a0 + RCX*0x8]\nMOV qword ptr [RSP + 0x30],RAX\nDEC RCX\nMOV qword ptr [RSP + 0x28],RCX\nXOR R14D,R14D\nXOR R12D,R12D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x20],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x0040cda0\nXOR R15D,R15D\nJMP 0x0040cf81\nMOV RDI,RBX\nCALL 0x0040eb20\nMOV RCX,R12\nSHL RCX,0x4\nMOV RDX,qword ptr [RSP]\nMOV qword ptr [RDX + RCX*0x1],RAX\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RDX + RCX*0x1 + 0x8],RAX\nINC R12\nADD R14,RBP\nNOP dword ptr [RAX]\nCALL 0x004022e0\nMOV RBP,RAX\nMOV dword ptr [RBP],0x0\nMOV RDI,R13\nCALL 0x00402740\nMOV R15,RAX\nTEST R15,R15\nJZ 0x0040ceae\nCMP byte ptr [R15 + 0x13],0x2e\nJNZ 0x0040cdf0\nXOR EAX,EAX\nCMP byte ptr [R15 + 0x14],0x2e\nSETZ AL\nINC RAX\nCMP byte ptr [R15 + RAX*0x1 + 0x13],0x0\nJZ 0x0040cda0\nJMP 0x0040cdfa\nXOR EAX,EAX\nCMP byte ptr [R15 + RAX*0x1 + 0x13],0x0\nJZ 0x0040cda0\nMOV RBX,R15\nADD RBX,0x13\nMOV RDI,RBX\nCALL 0x00402440\nMOV RBP,RAX\nINC RBP\nCMP qword ptr [RSP + 0x28],0x1\nJA 0x0040ce50\nMOV RAX,qword ptr [RSP + 0x20]\nCMP RAX,R12\nJNZ 0x0040cd78\nMOV qword ptr [RSP + 0x8],RAX\nMOV EDX,0x10\nMOV RDI,qword ptr [RSP]\nLEA RSI,[RSP + 0x8]\nCALL 0x0040ea20\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x20],RAX\nJMP 0x0040cd78\nMOV RAX,qword ptr [RSP + 0x18]\nSUB RAX,R14\nCMP RAX,RBP\nMOV RAX,qword ptr [RSP + 0x10]\nJA 0x0040ce8f\nMOV RCX,RBP\nADD RCX,R14\nMOV qword ptr [RSP + 0x8],RCX\nJC 0x0040cf93\nMOV EDX,0x1\nMOV RDI,RAX\nLEA RSI,[RSP + 0x8]\nCALL 0x0040ea20\nMOV RCX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x18],RCX\nMOV RCX,RAX\nMOV qword ptr [RSP + 0x10],RCX\nLEA RDI,[RAX + R14*0x1]\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x004026d0\nADD R14,RBP\nJMP 0x0040cda0\nMOV EBX,dword ptr [RBP]\nTEST EBX,EBX\nJZ 0x0040ced3\nMOV RDI,qword ptr [RSP]\nCALL 0x00402290\nMOV RDI,qword ptr [RSP + 0x10]\nCALL 0x00402290\nMOV dword ptr [RBP],EBX\nXOR R15D,R15D\nJMP 0x0040cf81\nCMP qword ptr [RSP + 0x28],0x1\nMOV R15,qword ptr [RSP + 0x10]\nMOV R13,qword ptr [RSP]\nJA 0x0040cf4b\nTEST R12,R12\nJZ 0x0040cf63\nMOV EDX,0x10\nMOV RDI,R13\nMOV RSI,R12\nMOV RCX,qword ptr [RSP + 0x30]\nCALL 0x00402360\nINC R14\nMOV RDI,R14\nCALL 0x0040e9b0\nMOV R15,RAX\nXOR R14D,R14D\nMOV RBX,R13\nNOP word ptr CS:[RAX + RAX*0x1]\nLEA RBP,[R15 + R14*0x1]\nMOV RSI,qword ptr [RBX]\nMOV RDI,RBP\nCALL 0x00402400\nINC R14\nSUB R14,RBP\nADD R14,RAX\nMOV RDI,qword ptr [RBX]\nCALL 0x00402290\nADD RBX,0x10\nDEC R12\nJNZ 0x0040cf20\nJMP 0x0040cf74\nCMP qword ptr [RSP + 0x18],R14\nJNZ 0x0040cf7c\nLEA RSI,[R14 + 0x1]\nMOV RDI,R15\nCALL 0x0040e9f0\nMOV R15,RAX\nJMP 0x0040cf7c\nINC R14\nMOV RDI,R14\nCALL 0x0040e9b0\nMOV R15,RAX\nXOR R14D,R14D\nMOV RDI,R13\nCALL 0x00402290\nMOV byte ptr [R15 + R14*0x1],0x0\nMOV RAX,R15\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x0040eb40\n'
p2251
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n49 89 fd\n4d 85 ed\n74 3a\n89 f1\n48 8b 04 cd a0 37 41 00\n48 89 44 24 30\n48 ff c9\n48 89 4c 24 28\n45 31 f6\n45 31 e4\n31 c0\n48 89 44 24 20\n31 c0\n48 89 04 24\n31 c0\n48 89 44 24 18\n31 c0\n48 89 44 24 10\neb 30\n45 31 ff\ne9 09 02 00 00\n48 89 df\ne8 a0 1d 00 00\n4c 89 e1\n48 c1 e1 04\n48 8b 14 24\n48 89 04 0a\n49 8b 07\n48 89 44 0a 08\n49 ff c4\n49 01 ee\n0f 1f 00\ne8 3b 55 ff ff\n48 89 c5\nc7 45 00 00 00 00 00\n4c 89 ef\ne8 89 59 ff ff\n49 89 c7\n4d 85 ff\n0f 84 eb 00 00 00\n41 80 7f 13 2e\n75 26\n31 c0\n41 80 7f 14 2e\n0f 94 c0\n48 ff c0\n41 80 7c 07 13 00\n74 c1\neb 19\n31 c0\n41 80 7c 07 13 00\n74 a6\n4c 89 fb\n48 83 c3 13\n48 89 df\ne8 37 56 ff ff\n48 89 c5\n48 ff c5\n48 83 7c 24 28 01\n77 39\n48 8b 44 24 20\n4c 39 e0\n0f 85 53 ff ff ff\n48 89 44 24 08\nba 10 00 00 00\n48 8b 3c 24\n48 8d 74 24 08\ne8 e3 1b 00 00\n48 89 04 24\n48 8b 44 24 08\n48 89 44 24 20\ne9 28 ff ff ff\n48 8b 44 24 18\n4c 29 f0\n48 39 e8\n48 8b 44 24 10\n77 2d\n48 89 e9\n4c 01 f1\n48 89 4c 24 08\n0f 82 20 01 00 00\nba 01 00 00 00\n48 89 c7\n48 8d 74 24 08\ne8 9b 1b 00 00\n48 8b 4c 24 08\n48 89 4c 24 18\n48 89 c1\n48 89 4c 24 10\n4a 8d 3c 30\n48 89 de\n48 89 ea\ne8 2a 58 ff ff\n49 01 ee\ne9 f2 fe ff ff\n8b 5d 00\n85 db\n74 1e\n48 8b 3c 24\ne8 d2 53 ff ff\n48 8b 7c 24 10\ne8 c8 53 ff ff\n89 5d 00\n45 31 ff\ne9 ae 00 00 00\n48 83 7c 24 28 01\n4c 8b 7c 24 10\n4c 8b 2c 24\n77 67\n4d 85 e4\n74 7a\nba 10 00 00 00\n4c 89 ef\n4c 89 e6\n48 8b 4c 24 30\ne8 62 54 ff ff\n49 ff c6\n4c 89 f7\ne8 a7 1a 00 00\n49 89 c7\n45 31 f6\n4c 89 eb\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4b 8d 2c 37\n48 8b 33\n48 89 ef\ne8 d1 54 ff ff\n49 ff c6\n49 29 ee\n49 01 c6\n48 8b 3b\ne8 50 53 ff ff\n48 83 c3 10\n49 ff cc\n75 d7\neb 29\n4c 39 74 24 18\n75 2a\n49 8d 76 01\n4c 89 ff\ne8 92 1a 00 00\n49 89 c7\neb 19\n49 ff c6\n4c 89 f7\ne8 42 1a 00 00\n49 89 c7\n45 31 f6\n4c 89 ef\ne8 14 53 ff ff\n43 c6 04 37 00\n4c 89 f8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 a8 1b 00 00\n'
p2252
S'.text:000000000040cd20\n.text:000000000040cd21\n.text:000000000040cd23\n.text:000000000040cd25\n.text:000000000040cd27\n.text:000000000040cd29\n.text:000000000040cd2a\n.text:000000000040cd2e\n.text:000000000040cd31\n.text:000000000040cd34\n.text:000000000040cd36\n.text:000000000040cd38\n.text:000000000040cd40\n.text:000000000040cd45\n.text:000000000040cd48\n.text:000000000040cd4d\n.text:000000000040cd50\n.text:000000000040cd53\n.text:000000000040cd55\n.text:000000000040cd5a\n.text:000000000040cd5c\n.text:000000000040cd60\n.text:000000000040cd62\n.text:000000000040cd67\n.text:000000000040cd69\n.text:000000000040cd6e\n.text:000000000040cd70\n.text:000000000040cd73\n.text:000000000040cd78\n.text:000000000040cd7b\n.text:000000000040cd80\n.text:000000000040cd83\n.text:000000000040cd87\n.text:000000000040cd8b\n.text:000000000040cd8f\n.text:000000000040cd92\n.text:000000000040cd97\n.text:000000000040cd9a\n.text:000000000040cd9d\n.text:000000000040cda0\n.text:000000000040cda5\n.text:000000000040cda8\n.text:000000000040cdaf\n.text:000000000040cdb2\n.text:000000000040cdb7\n.text:000000000040cdba\n.text:000000000040cdbd\n.text:000000000040cdc3\n.text:000000000040cdc8\n.text:000000000040cdca\n.text:000000000040cdcc\n.text:000000000040cdd1\n.text:000000000040cdd4\n.text:000000000040cdd7\n.text:000000000040cddd\n.text:000000000040cddf\n.text:000000000040cdf0\n.text:000000000040cdf2\n.text:000000000040cdf8\n.text:000000000040cdfa\n.text:000000000040cdfd\n.text:000000000040ce01\n.text:000000000040ce04\n.text:000000000040ce09\n.text:000000000040ce0c\n.text:000000000040ce0f\n.text:000000000040ce15\n.text:000000000040ce17\n.text:000000000040ce1c\n.text:000000000040ce1f\n.text:000000000040ce25\n.text:000000000040ce2a\n.text:000000000040ce2f\n.text:000000000040ce33\n.text:000000000040ce38\n.text:000000000040ce3d\n.text:000000000040ce41\n.text:000000000040ce46\n.text:000000000040ce4b\n.text:000000000040ce50\n.text:000000000040ce55\n.text:000000000040ce58\n.text:000000000040ce5b\n.text:000000000040ce60\n.text:000000000040ce62\n.text:000000000040ce65\n.text:000000000040ce68\n.text:000000000040ce6d\n.text:000000000040ce73\n.text:000000000040ce78\n.text:000000000040ce7b\n.text:000000000040ce80\n.text:000000000040ce85\n.text:000000000040ce8a\n.text:000000000040ce8f\n.text:000000000040ce92\n.text:000000000040ce97\n.text:000000000040ce9b\n.text:000000000040ce9e\n.text:000000000040cea1\n.text:000000000040cea6\n.text:000000000040cea9\n.text:000000000040ceae\n.text:000000000040ceb1\n.text:000000000040ceb3\n.text:000000000040ceb5\n.text:000000000040ceb9\n.text:000000000040cebe\n.text:000000000040cec3\n.text:000000000040cec8\n.text:000000000040cecb\n.text:000000000040cece\n.text:000000000040ced3\n.text:000000000040ced9\n.text:000000000040cede\n.text:000000000040cee2\n.text:000000000040cee4\n.text:000000000040cee7\n.text:000000000040cee9\n.text:000000000040ceee\n.text:000000000040cef1\n.text:000000000040cef4\n.text:000000000040cef9\n.text:000000000040cefe\n.text:000000000040cf01\n.text:000000000040cf04\n.text:000000000040cf09\n.text:000000000040cf0c\n.text:000000000040cf0f\n.text:000000000040cf12\n.text:000000000040cf20\n.text:000000000040cf24\n.text:000000000040cf27\n.text:000000000040cf2a\n.text:000000000040cf2f\n.text:000000000040cf32\n.text:000000000040cf35\n.text:000000000040cf38\n.text:000000000040cf3b\n.text:000000000040cf40\n.text:000000000040cf44\n.text:000000000040cf47\n.text:000000000040cf49\n.text:000000000040cf4b\n.text:000000000040cf50\n.text:000000000040cf52\n.text:000000000040cf56\n.text:000000000040cf59\n.text:000000000040cf5e\n.text:000000000040cf61\n.text:000000000040cf63\n.text:000000000040cf66\n.text:000000000040cf69\n.text:000000000040cf6e\n.text:000000000040cf71\n.text:000000000040cf74\n.text:000000000040cf77\n.text:000000000040cf7c\n.text:000000000040cf81\n.text:000000000040cf84\n.text:000000000040cf88\n.text:000000000040cf89\n.text:000000000040cf8b\n.text:000000000040cf8d\n.text:000000000040cf8f\n.text:000000000040cf91\n.text:000000000040cf92\n.text:000000000040cf93\n'
p2253
tp2254
sS'fallocate'
p2255
(S'\n__stdcall fallocate(int __fd, int __mode, __off_t __offset, __off_t __len)\n'
p2256
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fallocate(int __fd,int __mode,__off_t __offset,__off_t __len)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fallocate_006181e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p2257
S'JMP qword ptr [0x006181e8]\n'
p2258
S'ff 25 e2 5b 21 00\n'
p2259
S'.plt:0000000000402600\n'
p2260
tp2261
sS'raw_hasher'
p2262
(S'\n__stdcall raw_hasher(void * data, size_t n)\n'
p2263
V\u000asize_t raw_hasher(void *data,size_t n)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = rotr_sz((size_t)data);\u000a  return sVar1 % n;\u000a}\u000a\u000a
p2264
S'PUSH RBX\nMOV RBX,RSI\nMOV ESI,0x3\nCALL 0x0040f940\nXOR EDX,EDX\nDIV RBX\nMOV RAX,RDX\nPOP RBX\nRET\n'
p2265
S'53\n48 89 f3\nbe 03 00 00 00\ne8 e2 5b 00 00\n31 d2\n48 f7 f3\n48 89 d0\n5b\nc3\n'
p2266
S'.text:0000000000409d50\n.text:0000000000409d51\n.text:0000000000409d54\n.text:0000000000409d59\n.text:0000000000409d5e\n.text:0000000000409d60\n.text:0000000000409d63\n.text:0000000000409d66\n.text:0000000000409d67\n'
p2267
tp2268
sS'quotearg_alloc'
p2269
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p2270
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p2271
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x0040c060\n'
p2272
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p2273
S'.text:000000000040c050\n.text:000000000040c053\n.text:000000000040c055\n.text:000000000040c058\n'
p2274
tp2275
sS'execlp'
p2276
(S'\n__stdcall execlp(char * __file, char * __arg)\n'
p2277
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint execlp(char *__file,char *__arg,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_execlp_006183b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p2278
S'JMP qword ptr [0x006183b8]\n'
p2279
S'ff 25 12 5a 21 00\n'
p2280
S'.plt:00000000004029a0\n'
p2281
tp2282
sS'set_process_security_ctx'
p2283
(S'\n__stdcall set_process_security_ctx()\n'
p2284
V\u000a_Bool set_process_security_ctx(void)\u000a\u000a{\u000a  char cVar1;\u000a  uint uVar2;\u000a  bool bVar3;\u000a  _Bool _Var4;\u000a  int iVar5;\u000a  security_context_t in_RAX;\u000a  uint *puVar6;\u000a  undefined8 uVar7;\u000a  char *pcVar8;\u000a  long in_RCX;\u000a  char in_DL;\u000a  char *file;\u000a  bool bVar9;\u000a  security_context_t local_28;\u000a  \u000a  if (*(char *)(in_RCX + 0x24) == 0) {\u000a    if (*(char *)(in_RCX + 0x20) == 0) {\u000a      return true;\u000a    }\u000a    if (in_DL == 1) {\u000a      defaultcon();\u000a      puVar6 = (uint *)__errno_location();\u000a      uVar2 = *puVar6;\u000a      _Var4 = ignorable_ctx_err();\u000a      if (_Var4 == false) {\u000a        uVar7 = dcgettext(0,"failed to set default file creation context for %s",5);\u000a        pcVar8 = quotearg_style((char *)0x4);\u000a        error(0,(ulong)uVar2,uVar7,pcVar8);\u000a        return true;\u000a      }\u000a      return true;\u000a    }\u000a    return true;\u000a  }\u000a  bVar3 = true;\u000a  if (*(char *)(in_RCX + 0x22) == 0) {\u000a    bVar9 = false;\u000a  }\u000a  else {\u000a    if (*(char *)(in_RCX + 0x25) == 0) {\u000a      bVar9 = *(char *)(in_RCX + 0x28) == 0;\u000a      bVar3 = false;\u000a    }\u000a    else {\u000a      bVar9 = false;\u000a    }\u000a  }\u000a  local_28 = in_RAX;\u000a  iVar5 = lgetfilecon(file,&local_28);\u000a  if (-1 < iVar5) {\u000a    iVar5 = setfscreatecon(local_28);\u000a    if (-1 < iVar5) goto LAB_0040688c;\u000a    if (bVar3) {\u000aLAB_00406907:\u000a      puVar6 = (uint *)__errno_location();\u000a      uVar2 = *puVar6;\u000a      uVar7 = dcgettext(0,"failed to set default file creation context to %s",5);\u000a      pcVar8 = quote(local_28);\u000a      error(0,(ulong)uVar2,uVar7,pcVar8);\u000a    }\u000a    else {\u000a      if (bVar9) {\u000a        __errno_location();\u000a        _Var4 = errno_unsupported();\u000a        if (_Var4 == false) goto LAB_00406907;\u000a      }\u000a    }\u000a    if (*(char *)(in_RCX + 0x25) != 0) {\u000a      freecon(local_28);\u000a      return false;\u000a    }\u000aLAB_0040688c:\u000a    freecon(local_28);\u000a    return true;\u000a  }\u000a  if (bVar3) {\u000aLAB_004068a3:\u000a    puVar6 = (uint *)__errno_location();\u000a    uVar2 = *puVar6;\u000a    uVar7 = dcgettext(0,"failed to get security context of %s",5);\u000a    pcVar8 = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar2,uVar7,pcVar8);\u000a    cVar1 = *(char *)(in_RCX + 0x25);\u000a  }\u000a  else {\u000a    if (bVar9) {\u000a      __errno_location();\u000a      _Var4 = errno_unsupported();\u000a      if (_Var4 == false) goto LAB_004068a3;\u000a    }\u000a    cVar1 = *(char *)(in_RCX + 0x25);\u000a  }\u000a  if (cVar1 == 0) {\u000a    return true;\u000a  }\u000a  return false;\u000a}\u000a\u000a
p2285
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RCX\nMOV R15,RSI\nMOV R14,RDI\nCMP byte ptr [RBX + 0x24],0x0\nJZ 0x004067fa\nMOV BPL,0x1\nCMP byte ptr [RBX + 0x22],0x0\nJZ 0x00406861\nCMP byte ptr [RBX + 0x25],0x0\nJZ 0x00406866\nXOR R15D,R15D\nJMP 0x00406870\nCMP byte ptr [RBX + 0x20],0x0\nMOV BL,0x1\nJZ 0x00406978\nXOR DL,0x1\nJNZ 0x00406978\nCALL 0x00407a00\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nMOV EDI,EBP\nCALL 0x00407a10\nTEST AL,AL\nJNZ 0x00406978\nXOR EDI,EDI\nMOV ESI,0x4128db\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RDX,R14\nCALL 0x00402870\nJMP 0x00406978\nXOR R15D,R15D\nJMP 0x00406870\nCMP byte ptr [RBX + 0x28],0x0\nSETZ R15B\nXOR EBP,EBP\nMOV RSI,RSP\nMOV RDI,R14\nCALL 0x0040d5a0\nTEST EAX,EAX\nJS 0x0040689a\nMOV RDI,qword ptr [RSP]\nCALL 0x0040d540\nTEST EAX,EAX\nJS 0x004068ed\nMOV RDI,qword ptr [RSP]\nCALL 0x0040d510\nJMP 0x00406976\nTEST BPL,BPL\nJZ 0x00406953\nCALL 0x004022e0\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4128b6\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBP\nCALL 0x00402870\nCMP byte ptr [RBX + 0x25],0x0\nJNZ 0x00406972\nJMP 0x00406976\nTEST BPL,BPL\nJNZ 0x00406907\nTEST R15B,R15B\nJZ 0x0040693e\nCALL 0x004022e0\nMOV EDI,dword ptr [RAX]\nCALL 0x004079f0\nTEST AL,AL\nJNZ 0x0040693e\nCALL 0x004022e0\nMOV R14D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412884\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV RDI,qword ptr [RSP]\nCALL 0x0040c6e0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,RBP\nCALL 0x00402870\nCMP byte ptr [RBX + 0x25],0x0\nJZ 0x0040688c\nMOV RDI,qword ptr [RSP]\nCALL 0x0040d510\nJMP 0x00406972\nTEST R15B,R15B\nJZ 0x0040696c\nCALL 0x004022e0\nMOV EDI,dword ptr [RAX]\nCALL 0x004079f0\nTEST AL,AL\nJZ 0x004068a3\nCMP byte ptr [RBX + 0x25],0x0\nJZ 0x00406976\nXOR EBX,EBX\nJMP 0x00406978\nMOV BL,0x1\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2286
S'55\n41 57\n41 56\n53\n50\n48 89 cb\n49 89 f7\n49 89 fe\n80 7b 24 00\n74 14\n40 b5 01\n80 7b 22 00\n74 72\n80 7b 25 00\n74 71\n45 31 ff\neb 76\n80 7b 20 00\nb3 01\n0f 84 72 01 00 00\n80 f2 01\n0f 85 69 01 00 00\ne8 ec 11 00 00\ne8 c7 ba ff ff\n8b 28\n89 ef\ne8 ee 11 00 00\n84 c0\n0f 85 4e 01 00 00\n31 ff\nbe db 28 41 00\nba 05 00 00 00\ne8 e5 bb ff ff\n49 89 c6\nbf 04 00 00 00\n4c 89 fe\ne8 75 5c 00 00\n48 89 c1\n31 ff\n31 c0\n89 ee\n4c 89 f2\ne8 14 c0 ff ff\ne9 17 01 00 00\n45 31 ff\neb 0a\n80 7b 28 00\n41 0f 94 c7\n31 ed\n48 89 e6\n4c 89 f7\ne8 25 6d 00 00\n85 c0\n78 1b\n48 8b 3c 24\ne8 b8 6c 00 00\n85 c0\n78 61\n48 8b 3c 24\ne8 7b 6c 00 00\ne9 dc 00 00 00\n40 84 ed\n0f 84 b0 00 00 00\ne8 38 ba ff ff\n44 8b 38\n31 ff\nbe b6 28 41 00\nba 05 00 00 00\ne8 64 bb ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 f4 5b 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 ea\ne8 92 bf ff ff\n80 7b 25 00\n0f 85 8a 00 00 00\ne9 89 00 00 00\n40 84 ed\n75 15\n45 84 ff\n74 47\ne8 e4 b9 ff ff\n8b 38\ne8 ed 10 00 00\n84 c0\n75 37\ne8 d4 b9 ff ff\n44 8b 30\n31 ff\nbe 84 28 41 00\nba 05 00 00 00\ne8 00 bb ff ff\n48 89 c5\n48 8b 3c 24\ne8 b4 5d 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n48 89 ea\ne8 32 bf ff ff\n80 7b 25 00\n0f 84 44 ff ff ff\n48 8b 3c 24\ne8 bf 6b 00 00\neb 1f\n45 84 ff\n74 14\ne8 83 b9 ff ff\n8b 38\ne8 8c 10 00 00\n84 c0\n0f 84 37 ff ff ff\n80 7b 25 00\n74 04\n31 db\neb 02\nb3 01\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p2287
S'.text:00000000004067d0\n.text:00000000004067d1\n.text:00000000004067d3\n.text:00000000004067d5\n.text:00000000004067d6\n.text:00000000004067d7\n.text:00000000004067da\n.text:00000000004067dd\n.text:00000000004067e0\n.text:00000000004067e4\n.text:00000000004067e6\n.text:00000000004067e9\n.text:00000000004067ed\n.text:00000000004067ef\n.text:00000000004067f3\n.text:00000000004067f5\n.text:00000000004067f8\n.text:00000000004067fa\n.text:00000000004067fe\n.text:0000000000406800\n.text:0000000000406806\n.text:0000000000406809\n.text:000000000040680f\n.text:0000000000406814\n.text:0000000000406819\n.text:000000000040681b\n.text:000000000040681d\n.text:0000000000406822\n.text:0000000000406824\n.text:000000000040682a\n.text:000000000040682c\n.text:0000000000406831\n.text:0000000000406836\n.text:000000000040683b\n.text:000000000040683e\n.text:0000000000406843\n.text:0000000000406846\n.text:000000000040684b\n.text:000000000040684e\n.text:0000000000406850\n.text:0000000000406852\n.text:0000000000406854\n.text:0000000000406857\n.text:000000000040685c\n.text:0000000000406861\n.text:0000000000406864\n.text:0000000000406866\n.text:000000000040686a\n.text:000000000040686e\n.text:0000000000406870\n.text:0000000000406873\n.text:0000000000406876\n.text:000000000040687b\n.text:000000000040687d\n.text:000000000040687f\n.text:0000000000406883\n.text:0000000000406888\n.text:000000000040688a\n.text:000000000040688c\n.text:0000000000406890\n.text:0000000000406895\n.text:000000000040689a\n.text:000000000040689d\n.text:00000000004068a3\n.text:00000000004068a8\n.text:00000000004068ab\n.text:00000000004068ad\n.text:00000000004068b2\n.text:00000000004068b7\n.text:00000000004068bc\n.text:00000000004068bf\n.text:00000000004068c4\n.text:00000000004068c7\n.text:00000000004068cc\n.text:00000000004068cf\n.text:00000000004068d1\n.text:00000000004068d3\n.text:00000000004068d6\n.text:00000000004068d9\n.text:00000000004068de\n.text:00000000004068e2\n.text:00000000004068e8\n.text:00000000004068ed\n.text:00000000004068f0\n.text:00000000004068f2\n.text:00000000004068f5\n.text:00000000004068f7\n.text:00000000004068fc\n.text:00000000004068fe\n.text:0000000000406903\n.text:0000000000406905\n.text:0000000000406907\n.text:000000000040690c\n.text:000000000040690f\n.text:0000000000406911\n.text:0000000000406916\n.text:000000000040691b\n.text:0000000000406920\n.text:0000000000406923\n.text:0000000000406927\n.text:000000000040692c\n.text:000000000040692f\n.text:0000000000406931\n.text:0000000000406933\n.text:0000000000406936\n.text:0000000000406939\n.text:000000000040693e\n.text:0000000000406942\n.text:0000000000406948\n.text:000000000040694c\n.text:0000000000406951\n.text:0000000000406953\n.text:0000000000406956\n.text:0000000000406958\n.text:000000000040695d\n.text:000000000040695f\n.text:0000000000406964\n.text:0000000000406966\n.text:000000000040696c\n.text:0000000000406970\n.text:0000000000406972\n.text:0000000000406974\n.text:0000000000406976\n.text:0000000000406978\n.text:000000000040697a\n.text:000000000040697e\n.text:000000000040697f\n.text:0000000000406981\n.text:0000000000406983\n.text:0000000000406984\n'
p2288
tp2289
sS'safe_write'
p2290
(S'\n__stdcall safe_write(void * buf, size_t count)\n'
p2291
V\u000asize_t safe_write(void *buf,size_t count)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  size_t sVar3;\u000a  int *piVar4;\u000a  ulong __n;\u000a  size_t unaff_R14;\u000a  \u000a  while( true ) {\u000a    do {\u000a      sVar3 = write((int)buf,(void *)count,__n);\u000a      if (-1 < (long)sVar3) {\u000a        return sVar3;\u000a      }\u000a      piVar4 = __errno_location();\u000a      iVar1 = *piVar4;\u000a    } while (iVar1 == 4);\u000a    uVar2 = __n;\u000a    if (0x7fffe000 < __n && iVar1 == 0x16) {\u000a      sVar3 = unaff_R14;\u000a      uVar2 = 0x7fffe000;\u000a    }\u000a    if (__n < 0x7fffe001) break;\u000a    __n = uVar2;\u000a    unaff_R14 = sVar3;\u000a    if (iVar1 != 0x16) {\u000a      return sVar3;\u000a    }\u000a  }\u000a  return sVar3;\u000a}\u000a\u000a
p2292
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RDX\nMOV R15,RSI\nMOV R12D,EDI\nMOV R13D,0x7fffe000\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,R12D\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x004023a0\nMOV RBP,RAX\nTEST RBP,RBP\nJNS 0x0040cbf4\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x4\nJZ 0x0040cba0\nCMP EAX,0x16\nSETZ CL\nCMP RBX,0x7fffe000\nSETA DL\nAND DL,CL\nMOV RCX,RBX\nCMOVNZ RCX,R13\nTEST DL,DL\nCMOVZ R14,RBP\nCMP RBX,0x7fffe001\nJC 0x0040cbf7\nCMP EAX,0x16\nMOV RBX,RCX\nJZ 0x0040cba0\nJMP 0x0040cbf7\nMOV R14,RBP\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2293
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 d3\n49 89 f7\n41 89 fc\n41 bd 00 e0 ff 7f\n66 0f 1f 44 00 00\n44 89 e7\n4c 89 fe\n48 89 da\ne8 f2 57 ff ff\n48 89 c5\n48 85 ed\n79 3e\ne8 25 57 ff ff\n8b 00\n83 f8 04\n74 de\n83 f8 16\n0f 94 c1\n48 81 fb 00 e0 ff 7f\n0f 97 c2\n20 ca\n48 89 d9\n49 0f 45 cd\n84 d2\n4c 0f 44 f5\n48 81 fb 01 e0 ff 7f\n72 0d\n83 f8 16\n48 89 cb\n74 ae\neb 03\n49 89 ee\n4c 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2294
S'.text:000000000040cb80\n.text:000000000040cb81\n.text:000000000040cb83\n.text:000000000040cb85\n.text:000000000040cb87\n.text:000000000040cb89\n.text:000000000040cb8a\n.text:000000000040cb8b\n.text:000000000040cb8e\n.text:000000000040cb91\n.text:000000000040cb94\n.text:000000000040cb9a\n.text:000000000040cba0\n.text:000000000040cba3\n.text:000000000040cba6\n.text:000000000040cba9\n.text:000000000040cbae\n.text:000000000040cbb1\n.text:000000000040cbb4\n.text:000000000040cbb6\n.text:000000000040cbbb\n.text:000000000040cbbd\n.text:000000000040cbc0\n.text:000000000040cbc2\n.text:000000000040cbc5\n.text:000000000040cbc8\n.text:000000000040cbcf\n.text:000000000040cbd2\n.text:000000000040cbd4\n.text:000000000040cbd7\n.text:000000000040cbdb\n.text:000000000040cbdd\n.text:000000000040cbe1\n.text:000000000040cbe8\n.text:000000000040cbea\n.text:000000000040cbed\n.text:000000000040cbf0\n.text:000000000040cbf2\n.text:000000000040cbf4\n.text:000000000040cbf7\n.text:000000000040cbfa\n.text:000000000040cbfe\n.text:000000000040cbff\n.text:000000000040cc01\n.text:000000000040cc03\n.text:000000000040cc05\n.text:000000000040cc07\n.text:000000000040cc08\n'
p2295
tp2296
sS'check_tuning'
p2297
(S'\n__stdcall check_tuning(Hash_table * table)\n'
p2298
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000a_Bool check_tuning(Hash_table *table)\u000a\u000a{\u000a  float fVar1;\u000a  Hash_tuning *pHVar2;\u000a  undefined uVar3;\u000a  float fVar4;\u000a  \u000a  pHVar2 = table->tuning;\u000a  uVar3 = 1;\u000a  if ((pHVar2 != &default_tuning) &&\u000a     ((((fVar1 = pHVar2->growth_threshold, fVar1 <= _DAT_00412cc8 || (DAT_00412ccc <= fVar1)) ||\u000a       (pHVar2->growth_factor <= _DAT_00412cd0)) ||\u000a      (((pHVar2->shrink_threshold < 0.00000000 ||\u000a        (fVar4 = pHVar2->shrink_threshold + _DAT_00412cc8, fVar1 <= fVar4)) ||\u000a       ((DAT_00412cd4 < pHVar2->shrink_factor || (pHVar2->shrink_factor <= fVar4)))))))) {\u000a    table->tuning = &default_tuning;\u000a    uVar3 = 0;\u000a  }\u000a  return (_Bool)uVar3;\u000a}\u000a\u000a
p2299
S'MOV RCX,qword ptr [RDI + 0x28]\nMOV EDX,0x412d4c\nMOV AL,0x1\nCMP RCX,RDX\nJZ 0x00409df3\nMOVSS XMM0,dword ptr [RCX + 0x8]\nUCOMISS XMM0,dword ptr [0x00412cc8]\nJBE 0x00409de9\nMOVSS XMM1,dword ptr [0x00412ccc]\nUCOMISS XMM1,XMM0\nJBE 0x00409de9\nMOVSS XMM1,dword ptr [RCX + 0xc]\nUCOMISS XMM1,dword ptr [0x00412cd0]\nJBE 0x00409de9\nMOVSS XMM1,dword ptr [RCX]\nXORPS XMM2,XMM2\nUCOMISS XMM1,XMM2\nJC 0x00409de9\nADDSS XMM1,dword ptr [0x00412cc8]\nUCOMISS XMM0,XMM1\nJBE 0x00409de9\nMOVSS XMM0,dword ptr [RCX + 0x4]\nMOVSS XMM2,dword ptr [0x00412cd4]\nUCOMISS XMM2,XMM0\nJC 0x00409de9\nUCOMISS XMM0,XMM1\nJA 0x00409df3\nMOV qword ptr [RDI + 0x28],0x412d4c\nXOR EAX,EAX\nRET\n'
p2300
S'48 8b 4f 28\nba 4c 2d 41 00\nb0 01\n48 39 d1\n74 63\nf3 0f 10 41 08\n0f 2e 05 2c 8f 00 00\n76 4b\nf3 0f 10 0d 26 8f 00 00\n0f 2e c8\n76 3e\nf3 0f 10 49 0c\n0f 2e 0d 19 8f 00 00\n76 30\nf3 0f 10 09\n0f 57 d2\n0f 2e ca\n72 24\nf3 0f 58 0d fb 8e 00 00\n0f 2e c1\n76 17\nf3 0f 10 41 04\nf3 0f 10 15 f5 8e 00 00\n0f 2e d0\n72 05\n0f 2e c1\n77 0a\n48 c7 47 28 4c 2d 41 00\n31 c0\nc3\n'
p2301
S'.text:0000000000409d80\n.text:0000000000409d84\n.text:0000000000409d89\n.text:0000000000409d8b\n.text:0000000000409d8e\n.text:0000000000409d90\n.text:0000000000409d95\n.text:0000000000409d9c\n.text:0000000000409d9e\n.text:0000000000409da6\n.text:0000000000409da9\n.text:0000000000409dab\n.text:0000000000409db0\n.text:0000000000409db7\n.text:0000000000409db9\n.text:0000000000409dbd\n.text:0000000000409dc0\n.text:0000000000409dc3\n.text:0000000000409dc5\n.text:0000000000409dcd\n.text:0000000000409dd0\n.text:0000000000409dd2\n.text:0000000000409dd7\n.text:0000000000409ddf\n.text:0000000000409de2\n.text:0000000000409de4\n.text:0000000000409de7\n.text:0000000000409de9\n.text:0000000000409df1\n.text:0000000000409df3\n'
p2302
tp2303
sS'argmatch_to_argument'
p2304
(S'\n__stdcall argmatch_to_argument(char * value, char * * arglist, char * vallist, size_t valsize)\n'
p2305
V\u000achar * argmatch_to_argument(char *value,char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  \u000a  pcVar2 = *arglist;\u000a  if (pcVar2 != (char *)0x0) {\u000a    arglist = arglist + 1;\u000a    do {\u000a      iVar1 = memcmp(value,vallist,valsize);\u000a      if (iVar1 == 0) {\u000a        return pcVar2;\u000a      }\u000a      pcVar2 = *arglist;\u000a      arglist = arglist + 1;\u000a      vallist = vallist + valsize;\u000a    } while (pcVar2 != (char *)0x0);\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p2306
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV R14,RCX\nMOV R12,RDX\nMOV RBX,RSI\nMOV R13,RDI\nMOV R15,qword ptr [RBX]\nTEST R15,R15\nJZ 0x0040f8d1\nADD RBX,0x8\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R14\nCALL 0x004025f0\nTEST EAX,EAX\nJZ 0x0040f8d4\nMOV R15,qword ptr [RBX]\nADD RBX,0x8\nADD R12,R14\nTEST R15,R15\nJNZ 0x0040f8b0\nXOR R15D,R15D\nMOV RAX,R15\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p2307
S'41 57\n41 56\n41 55\n41 54\n53\n49 89 ce\n49 89 d4\n48 89 f3\n49 89 fd\n4c 8b 3b\n4d 85 ff\n74 34\n48 83 c3 08\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ef\n4c 89 e6\n4c 89 f2\ne8 32 2d ff ff\n85 c0\n74 12\n4c 8b 3b\n48 83 c3 08\n4d 01 f4\n4d 85 ff\n75 df\n45 31 ff\n4c 89 f8\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p2308
S'.text:000000000040f880\n.text:000000000040f882\n.text:000000000040f884\n.text:000000000040f886\n.text:000000000040f888\n.text:000000000040f889\n.text:000000000040f88c\n.text:000000000040f88f\n.text:000000000040f892\n.text:000000000040f895\n.text:000000000040f898\n.text:000000000040f89b\n.text:000000000040f89d\n.text:000000000040f8a1\n.text:000000000040f8b0\n.text:000000000040f8b3\n.text:000000000040f8b6\n.text:000000000040f8b9\n.text:000000000040f8be\n.text:000000000040f8c0\n.text:000000000040f8c2\n.text:000000000040f8c5\n.text:000000000040f8c9\n.text:000000000040f8cc\n.text:000000000040f8cf\n.text:000000000040f8d1\n.text:000000000040f8d4\n.text:000000000040f8d7\n.text:000000000040f8d8\n.text:000000000040f8da\n.text:000000000040f8dc\n.text:000000000040f8de\n.text:000000000040f8e0\n'
p2309
tp2310
sS'hash_do_for_each'
p2311
(S'\n__stdcall hash_do_for_each(Hash_table * table, Hash_processor * processor, void * processor_data)\n'
p2312
V\u000asize_t hash_do_for_each(Hash_table *table,_Bool (*processor)(void *,void *),void *processor_data)\u000a\u000a{\u000a  hash_entry *phVar1;\u000a  _Bool _Var2;\u000a  size_t sVar3;\u000a  hash_entry *phVar4;\u000a  \u000a  phVar4 = table->bucket;\u000a  if (phVar4 < table->bucket_limit) {\u000a    sVar3 = 0;\u000a    do {\u000a      phVar1 = phVar4;\u000a      if (phVar4->data != (void *)0x0) {\u000a        while (phVar1 != (hash_entry *)0x0) {\u000a          _Var2 = (*processor)(phVar1->data,processor_data);\u000a          if (_Var2 == false) {\u000a            return sVar3;\u000a          }\u000a          sVar3 = sVar3 + 1;\u000a          phVar1 = phVar1->next;\u000a        }\u000a      }\u000a      phVar4 = phVar4 + 1;\u000a    } while (phVar4 < table->bucket_limit);\u000a  }\u000a  else {\u000a    sVar3 = 0;\u000a  }\u000a  return sVar3;\u000a}\u000a\u000a
p2313
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV R12,RDI\nMOV R13,qword ptr [R12]\nCMP R13,qword ptr [R12 + 0x8]\nJNC 0x00409bf7\nXOR EBX,EBX\nCMP qword ptr [R13],0x0\nJZ 0x00409bea\nTEST R13,R13\nJZ 0x00409bea\nMOV RBP,R13\nMOV RDI,qword ptr [RBP]\nMOV RSI,R14\nCALL R15\nTEST AL,AL\nJZ 0x00409bf9\nINC RBX\nMOV RBP,qword ptr [RBP + 0x8]\nTEST RBP,RBP\nJNZ 0x00409bd0\nADD R13,0x10\nCMP R13,qword ptr [R12 + 0x8]\nJC 0x00409bc1\nJMP 0x00409bf9\nXOR EBX,EBX\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2314
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f7\n49 89 fc\n4d 8b 2c 24\n4d 3b 6c 24 08\n73 38\n31 db\n49 83 7d 00 00\n74 22\n4d 85 ed\n74 1d\n4c 89 ed\n48 8b 7d 00\n4c 89 f6\n41 ff d7\n84 c0\n74 1b\n48 ff c3\n48 8b 6d 08\n48 85 ed\n75 e6\n49 83 c5 10\n4d 3b 6c 24 08\n72 cc\neb 02\n31 db\n48 89 d8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2315
S'.text:0000000000409ba0\n.text:0000000000409ba1\n.text:0000000000409ba3\n.text:0000000000409ba5\n.text:0000000000409ba7\n.text:0000000000409ba9\n.text:0000000000409baa\n.text:0000000000409bab\n.text:0000000000409bae\n.text:0000000000409bb1\n.text:0000000000409bb4\n.text:0000000000409bb8\n.text:0000000000409bbd\n.text:0000000000409bbf\n.text:0000000000409bc1\n.text:0000000000409bc6\n.text:0000000000409bc8\n.text:0000000000409bcb\n.text:0000000000409bcd\n.text:0000000000409bd0\n.text:0000000000409bd4\n.text:0000000000409bd7\n.text:0000000000409bda\n.text:0000000000409bdc\n.text:0000000000409bde\n.text:0000000000409be1\n.text:0000000000409be5\n.text:0000000000409be8\n.text:0000000000409bea\n.text:0000000000409bee\n.text:0000000000409bf3\n.text:0000000000409bf5\n.text:0000000000409bf7\n.text:0000000000409bf9\n.text:0000000000409bfc\n.text:0000000000409c00\n.text:0000000000409c01\n.text:0000000000409c03\n.text:0000000000409c05\n.text:0000000000409c07\n.text:0000000000409c09\n.text:0000000000409c0a\n'
p2316
tp2317
sS'usage'
p2318
(S'\n__stdcall usage()\n'
p2319
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,\u000a                      "Usage: %s [OPTION]... [-T] SOURCE DEST\u005cn  or:  %s [OPTION]... SOURCE... DIRECTORY\u005cn  or:  %s [OPTION]... -t DIRECTORY SOURCE...\u005cn  or:  %s [OPTION]... -d DIRECTORY...\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,program_name,program_name,program_name,program_name);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnThis install program copies files (often just compiled) into destination\u005cnlocations you choose.  If you want to download and install a ready-to-use\u005cnpackage on a GNU/Linux system, you should instead be using a package manager\u005cnlike yum(1) or apt-get(1).\u005cn\u005cnIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\u005cnthe existing DIRECTORY, while setting permission modes and owner/group.\u005cnIn the 4th form, create all components of the given DIRECTORY(ies).\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_mandatory_arg_note();\u000a    __s = (char *)dcgettext(0,\u000a                            "      --backup[=CONTROL]  make a backup of each existing destination file\u005cn  -b                  like --backup but does not accept an argument\u005cn  -c                  (ignored)\u005cn  -C, --compare       compare each pair of source and destination files, and\u005cn                        in some cases, do not modify the destination at all\u005cn  -d, --directory     treat all arguments as directory names; create all\u005cn                        components of the specified directories\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -D                  create all leading components of DEST except the last,\u005cn                        or all components of --target-directory,\u005cn                        then copy SOURCE to DEST\u005cn  -g, --group=GROUP   set group ownership, instead of process\u005c' current group\u005cn  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\u005cn  -o, --owner=OWNER   set ownership (super-user only)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -p, --preserve-timestamps   apply access/modification times of SOURCE files\u005cn                        to corresponding destination files\u005cn  -s, --strip         strip symbol tables\u005cn      --strip-program=PROGRAM  program used to strip binaries\u005cn  -S, --suffix=SUFFIX  override the usual backup suffix\u005cn  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\u005cn  -T, --no-target-directory  treat DEST as a normal file\u005cn  -v, --verbose       print the name of each directory as it is created\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "      --preserve-context  preserve SELinux security context\u005cn  -Z                      set SELinux security context of destination\u005cn                            file to default type\u005cn      --context[=CTX]     like -Z, or if CTX is specified then set the\u005cn                            SELinux or SMACK security context to CTX\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnThe backup suffix is \u005c'~\u005c', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\u005cnThe version control method may be selected via the --backup option or through\u005cnthe VERSION_CONTROL environment variable.  Here are the values:\u005cn\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  none, off       never make backups (even if --backup is given)\u005cn  numbered, t     make numbered backups\u005cn  existing, nil   numbered if numbered backups exist, simple otherwise\u005cn  simple, never   always make simple backups\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p2320
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x00402c6f\nXOR EDI,EDI\nMOV ESI,0x410ef0\nMOV EDX,0x5\nCALL 0x00402420\nMOV RCX,RAX\nMOV RDX,qword ptr [0x0061a950]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nMOV RCX,RDX\nMOV R8,RDX\nMOV R9,RDX\nCALL 0x00402840\nXOR EDI,EDI\nMOV ESI,0x410f95\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nCALL 0x00402cc0\nXOR EDI,EDI\nMOV ESI,0x411166\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x411337\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x4114c8\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x4116c0\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x411800\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x41182d\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x411863\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nXOR EDI,EDI\nMOV ESI,0x411940\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nCALL 0x00402610\nCALL 0x00402cf0\nMOV EDI,EBX\nCALL 0x00402960\nCALL 0x00402c80\nMOV EDI,EBX\nCALL 0x00402960\n'
p2321
S'53\n89 fb\n85 db\n0f 85 64 01 00 00\n31 ff\nbe f0 0e 41 00\nba 05 00 00 00\ne8 04 f9 ff ff\n48 89 c1\n48 8b 15 2a 7e 21 00\nbf 01 00 00 00\n31 c0\n48 89 ce\n48 89 d1\n49 89 d0\n49 89 d1\ne8 02 fd ff ff\n31 ff\nbe 95 0f 41 00\nba 05 00 00 00\ne8 d1 f8 ff ff\n48 8b 35 52 59 21 00\n48 89 c7\ne8 b2 fa ff ff\ne8 5d 01 00 00\n31 ff\nbe 66 11 41 00\nba 05 00 00 00\ne8 ac f8 ff ff\n48 8b 35 2d 59 21 00\n48 89 c7\ne8 8d fa ff ff\n31 ff\nbe 37 13 41 00\nba 05 00 00 00\ne8 8c f8 ff ff\n48 8b 35 0d 59 21 00\n48 89 c7\ne8 6d fa ff ff\n31 ff\nbe c8 14 41 00\nba 05 00 00 00\ne8 6c f8 ff ff\n48 8b 35 ed 58 21 00\n48 89 c7\ne8 4d fa ff ff\n31 ff\nbe c0 16 41 00\nba 05 00 00 00\ne8 4c f8 ff ff\n48 8b 35 cd 58 21 00\n48 89 c7\ne8 2d fa ff ff\n31 ff\nbe 00 18 41 00\nba 05 00 00 00\ne8 2c f8 ff ff\n48 8b 35 ad 58 21 00\n48 89 c7\ne8 0d fa ff ff\n31 ff\nbe 2d 18 41 00\nba 05 00 00 00\ne8 0c f8 ff ff\n48 8b 35 8d 58 21 00\n48 89 c7\ne8 ed f9 ff ff\n31 ff\nbe 63 18 41 00\nba 05 00 00 00\ne8 ec f7 ff ff\n48 8b 35 6d 58 21 00\n48 89 c7\ne8 cd f9 ff ff\n31 ff\nbe 40 19 41 00\nba 05 00 00 00\ne8 cc f7 ff ff\n48 8b 35 4d 58 21 00\n48 89 c7\ne8 ad f9 ff ff\ne8 88 00 00 00\n89 df\ne8 f1 fc ff ff\ne8 0c 00 00 00\n89 df\ne8 e5 fc ff ff\n'
p2322
S'.text:0000000000402b00\n.text:0000000000402b01\n.text:0000000000402b03\n.text:0000000000402b05\n.text:0000000000402b0b\n.text:0000000000402b0d\n.text:0000000000402b12\n.text:0000000000402b17\n.text:0000000000402b1c\n.text:0000000000402b1f\n.text:0000000000402b26\n.text:0000000000402b2b\n.text:0000000000402b2d\n.text:0000000000402b30\n.text:0000000000402b33\n.text:0000000000402b36\n.text:0000000000402b39\n.text:0000000000402b3e\n.text:0000000000402b40\n.text:0000000000402b45\n.text:0000000000402b4a\n.text:0000000000402b4f\n.text:0000000000402b56\n.text:0000000000402b59\n.text:0000000000402b5e\n.text:0000000000402b63\n.text:0000000000402b65\n.text:0000000000402b6a\n.text:0000000000402b6f\n.text:0000000000402b74\n.text:0000000000402b7b\n.text:0000000000402b7e\n.text:0000000000402b83\n.text:0000000000402b85\n.text:0000000000402b8a\n.text:0000000000402b8f\n.text:0000000000402b94\n.text:0000000000402b9b\n.text:0000000000402b9e\n.text:0000000000402ba3\n.text:0000000000402ba5\n.text:0000000000402baa\n.text:0000000000402baf\n.text:0000000000402bb4\n.text:0000000000402bbb\n.text:0000000000402bbe\n.text:0000000000402bc3\n.text:0000000000402bc5\n.text:0000000000402bca\n.text:0000000000402bcf\n.text:0000000000402bd4\n.text:0000000000402bdb\n.text:0000000000402bde\n.text:0000000000402be3\n.text:0000000000402be5\n.text:0000000000402bea\n.text:0000000000402bef\n.text:0000000000402bf4\n.text:0000000000402bfb\n.text:0000000000402bfe\n.text:0000000000402c03\n.text:0000000000402c05\n.text:0000000000402c0a\n.text:0000000000402c0f\n.text:0000000000402c14\n.text:0000000000402c1b\n.text:0000000000402c1e\n.text:0000000000402c23\n.text:0000000000402c25\n.text:0000000000402c2a\n.text:0000000000402c2f\n.text:0000000000402c34\n.text:0000000000402c3b\n.text:0000000000402c3e\n.text:0000000000402c43\n.text:0000000000402c45\n.text:0000000000402c4a\n.text:0000000000402c4f\n.text:0000000000402c54\n.text:0000000000402c5b\n.text:0000000000402c5e\n.text:0000000000402c63\n.text:0000000000402c68\n.text:0000000000402c6a\n.text:0000000000402c6f\n.text:0000000000402c74\n.text:0000000000402c76\n'
p2323
tp2324
sS'get_stat_ctime_ns'
p2325
(S'\n__stdcall get_stat_ctime_ns(stat * st)\n'
p2326
V\u000along get_stat_ctime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_ctim).tv_nsec;\u000a}\u000a\u000a
p2327
S'MOV RAX,qword ptr [RDI + 0x70]\nRET\n'
p2328
S'48 8b 47 70\nc3\n'
p2329
S'.text:000000000040d700\n.text:000000000040d704\n'
p2330
tp2331
sS'quoting_options_from_style'
p2332
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p2333
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p2334
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x0040c46d\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x004022d0\n'
p2335
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 5e 5e ff ff\n'
p2336
S'.text:000000000040c420\n.text:000000000040c424\n.text:000000000040c427\n.text:000000000040c42c\n.text:000000000040c431\n.text:000000000040c435\n.text:000000000040c43d\n.text:000000000040c440\n.text:000000000040c442\n.text:000000000040c444\n.text:000000000040c448\n.text:000000000040c44b\n.text:000000000040c44f\n.text:000000000040c454\n.text:000000000040c459\n.text:000000000040c45d\n.text:000000000040c461\n.text:000000000040c465\n.text:000000000040c468\n.text:000000000040c46c\n.text:000000000040c46d\n'
p2337
tp2338
sS'strcpy'
p2339
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p2340
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_00618078)();\u000a  return pcVar1;\u000a}\u000a\u000a
p2341
S'JMP qword ptr [0x00618078]\n'
p2342
S'ff 25 52 5d 21 00\n'
p2343
S'.plt:0000000000402320\n'
p2344
tp2345
sS'triple_hash_no_name'
p2346
(S'\n__stdcall triple_hash_no_name(void * x, size_t table_size)\n'
p2347
V\u000asize_t triple_hash_no_name(void *x,size_t table_size)\u000a\u000a{\u000a  return *(ulong *)((long)x + 8) % table_size;\u000a}\u000a\u000a
p2348
S'MOV RAX,qword ptr [RDI + 0x8]\nXOR EDX,EDX\nDIV RSI\nMOV RAX,RDX\nRET\n'
p2349
S'48 8b 47 08\n31 d2\n48 f7 f6\n48 89 d0\nc3\n'
p2350
S'.text:000000000040a820\n.text:000000000040a824\n.text:000000000040a826\n.text:000000000040a829\n.text:000000000040a82c\n'
p2351
tp2352
sS'rotl8'
p2353
(S'\n__stdcall rotl8()\n'
p2354
V\u000auint8_t rotl8(void)\u000a\u000a{\u000a  undefined4 in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (uint8_t)((byte)(in_EDI >> (8 - (byte)in_ESI & 0x1f)) |\u000a                  (byte)(in_EDI << ((byte)in_ESI & 0x1f)));\u000a}\u000a\u000a
p2355
S'MOV EAX,EDI\nMOV ECX,ESI\nSHL EAX,CL\nMOV ECX,0x8\nSUB ECX,ESI\nSHR EDI,CL\nOR EDI,EAX\nMOV EAX,EDI\nRET\n'
p2356
S'89 f8\n89 f1\nd3 e0\nb9 08 00 00 00\n29 f1\nd3 ef\n09 c7\n89 f8\nc3\n'
p2357
S'.text:000000000040f990\n.text:000000000040f992\n.text:000000000040f994\n.text:000000000040f996\n.text:000000000040f99b\n.text:000000000040f99d\n.text:000000000040f99f\n.text:000000000040f9a1\n.text:000000000040f9a3\n'
p2358
tp2359
sS'target_directory_operand'
p2360
(S'\n__stdcall target_directory_operand(char * file)\n'
p2361
V\u000a_Bool target_directory_operand(char *file)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  char *__s;\u000a  size_t sVar3;\u000a  uint *puVar4;\u000a  undefined8 uVar5;\u000a  ulong uVar6;\u000a  bool bVar7;\u000a  bool bVar8;\u000a  stat sStack184;\u000a  \u000a  __s = last_component(file);\u000a  sVar3 = strlen(__s);\u000a  if (sVar3 == 0) {\u000a    bVar7 = true;\u000a  }\u000a  else {\u000a    bVar7 = __s[sVar3 - 1] == '/';\u000a  }\u000a  iVar2 = stat(file,&sStack184);\u000a  if (iVar2 != 0) {\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    uVar6 = (ulong)uVar1;\u000a    if (uVar1 == 2) {\u000a      uVar6 = 2;\u000a      bVar8 = false;\u000a      goto LAB_0040379e;\u000a    }\u000a    if (uVar1 != 0) {\u000a      bVar8 = false;\u000a      uVar5 = dcgettext(0,"failed to access %s",5);\u000a      __s = quotearg_style((char *)0x4);\u000a      error(1,(ulong)uVar1,uVar5,__s);\u000a      goto LAB_0040379e;\u000a    }\u000a  }\u000a  bVar8 = (sStack184.st_mode & 0xf000) == 0x4000;\u000a  uVar6 = 0;\u000aLAB_0040379e:\u000a  if ((bVar7 & (bVar8 ^ 1U)) == 1) {\u000a    uVar5 = dcgettext(0,"target %s is not a directory",5);\u000a    __s = quotearg_style((char *)0x4);\u000a    error(1,uVar6,uVar5,__s);\u000a  }\u000a  return (_Bool)bVar8;\u000a}\u000a\u000a
p2362
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x90\nMOV R14,RDI\nCALL 0x004092f0\nMOV RBX,RAX\nMOV RDI,RBX\nCALL 0x00402440\nTEST RAX,RAX\nJZ 0x00403721\nCMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f\nSETZ BL\nJMP 0x00403723\nMOV BL,0x1\nMOV RSI,RSP\nMOV RDI,R14\nCALL 0x00410790\nTEST EAX,EAX\nJZ 0x00403745\nCALL 0x004022e0\nMOV R12D,dword ptr [RAX]\nCMP R12D,0x2\nJZ 0x0040375c\nTEST R12D,R12D\nJNZ 0x00403766\nMOV EAX,0xf000\nAND EAX,dword ptr [RSP + 0x18]\nCMP EAX,0x4000\nSETZ BPL\nXOR R12D,R12D\nJMP 0x0040379e\nMOV R12D,0x2\nXOR EBP,EBP\nJMP 0x0040379e\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x411bae\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,R15\nCALL 0x00402870\nMOV EAX,EBP\nXOR AL,0x1\nAND BL,AL\nCMP BL,0x1\nJNZ 0x004037df\nXOR EDI,EDI\nMOV ESI,0x411bc2\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,R15\nCALL 0x00402870\nMOV EAX,EBP\nADD RSP,0x90\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2363
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec 90 00 00 00\n49 89 fe\ne8 e9 5b 00 00\n48 89 c3\n48 89 df\ne8 2e ed ff ff\n48 85 c0\n74 0a\n80 7c 03 ff 2f\n0f 94 c3\neb 02\nb3 01\n48 89 e6\n4c 89 f7\ne8 62 d0 00 00\n85 c0\n74 13\ne8 a9 eb ff ff\n44 8b 20\n41 83 fc 02\n74 1c\n45 85 e4\n75 21\nb8 00 f0 00 00\n23 44 24 18\n3d 00 40 00 00\n40 0f 94 c5\n45 31 e4\neb 42\n41 bc 02 00 00 00\n31 ed\neb 38\n31 ed\n31 ff\nbe ae 1b 41 00\nba 05 00 00 00\ne8 a7 ec ff ff\n49 89 c7\nbf 04 00 00 00\n4c 89 f6\ne8 37 8d 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n44 89 e6\n4c 89 fa\ne8 d2 f0 ff ff\n89 e8\n34 01\n20 c3\n80 fb 01\n75 36\n31 ff\nbe c2 1b 41 00\nba 05 00 00 00\ne8 66 ec ff ff\n49 89 c7\nbf 04 00 00 00\n4c 89 f6\ne8 f6 8c 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n44 89 e6\n4c 89 fa\ne8 91 f0 ff ff\n89 e8\n48 81 c4 90 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p2364
S'.text:00000000004036f0\n.text:00000000004036f1\n.text:00000000004036f3\n.text:00000000004036f5\n.text:00000000004036f7\n.text:00000000004036f8\n.text:00000000004036ff\n.text:0000000000403702\n.text:0000000000403707\n.text:000000000040370a\n.text:000000000040370d\n.text:0000000000403712\n.text:0000000000403715\n.text:0000000000403717\n.text:000000000040371c\n.text:000000000040371f\n.text:0000000000403721\n.text:0000000000403723\n.text:0000000000403726\n.text:0000000000403729\n.text:000000000040372e\n.text:0000000000403730\n.text:0000000000403732\n.text:0000000000403737\n.text:000000000040373a\n.text:000000000040373e\n.text:0000000000403740\n.text:0000000000403743\n.text:0000000000403745\n.text:000000000040374a\n.text:000000000040374e\n.text:0000000000403753\n.text:0000000000403757\n.text:000000000040375a\n.text:000000000040375c\n.text:0000000000403762\n.text:0000000000403764\n.text:0000000000403766\n.text:0000000000403768\n.text:000000000040376a\n.text:000000000040376f\n.text:0000000000403774\n.text:0000000000403779\n.text:000000000040377c\n.text:0000000000403781\n.text:0000000000403784\n.text:0000000000403789\n.text:000000000040378c\n.text:0000000000403791\n.text:0000000000403793\n.text:0000000000403796\n.text:0000000000403799\n.text:000000000040379e\n.text:00000000004037a0\n.text:00000000004037a2\n.text:00000000004037a4\n.text:00000000004037a7\n.text:00000000004037a9\n.text:00000000004037ab\n.text:00000000004037b0\n.text:00000000004037b5\n.text:00000000004037ba\n.text:00000000004037bd\n.text:00000000004037c2\n.text:00000000004037c5\n.text:00000000004037ca\n.text:00000000004037cd\n.text:00000000004037d2\n.text:00000000004037d4\n.text:00000000004037d7\n.text:00000000004037da\n.text:00000000004037df\n.text:00000000004037e1\n.text:00000000004037e8\n.text:00000000004037e9\n.text:00000000004037eb\n.text:00000000004037ed\n.text:00000000004037ef\n.text:00000000004037f0\n'
p2365
tp2366
sS'chmod_or_fchmod'
p2367
(S'\n__stdcall chmod_or_fchmod(char * name)\n'
p2368
V\u000aint chmod_or_fchmod(char *name)\u000a\u000a{\u000a  int iVar1;\u000a  __mode_t __mode;\u000a  int __fd;\u000a  \u000a  if (__fd != -1) {\u000a    iVar1 = fchmod(__fd,__mode);\u000a    return iVar1;\u000a  }\u000a  iVar1 = chmod(name,__mode);\u000a  return iVar1;\u000a}\u000a\u000a
p2369
S'CMP ESI,-0x1\nJZ 0x0040f56e\nMOV EDI,ESI\nMOV ESI,EDX\nJMP 0x00402850\nMOV ESI,EDX\nJMP 0x00402860\n'
p2370
S'83 fe ff\n74 09\n89 f7\n89 d6\ne9 e2 32 ff ff\n89 d6\ne9 eb 32 ff ff\n'
p2371
S'.text:000000000040f560\n.text:000000000040f563\n.text:000000000040f565\n.text:000000000040f567\n.text:000000000040f569\n.text:000000000040f56e\n.text:000000000040f570\n'
p2372
tp2373
sS'utimens'
p2374
(S'\n__stdcall utimens(char * file, timespec * timespec)\n'
p2375
V\u000aint utimens(char *file,timespec *timespec)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = fdutimens((char *)0xffffffff,(timespec *)file);\u000a  return iVar1;\u000a}\u000a\u000a
p2376
S'MOV RAX,RSI\nMOV RCX,RDI\nMOV EDI,0xffffffff\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x0040dd90\n'
p2377
S'48 89 f0\n48 89 f9\nbf ff ff ff ff\n48 89 ce\n48 89 c2\ne9 fa fa ff ff\n'
p2378
S'.text:000000000040e280\n.text:000000000040e283\n.text:000000000040e286\n.text:000000000040e28b\n.text:000000000040e28e\n.text:000000000040e291\n'
p2379
tp2380
sS'punch_hole'
p2381
(S'\n__stdcall punch_hole(off_t offset, off_t length)\n'
p2382
V\u000aint punch_hole(off_t offset,off_t length)\u000a\u000a{\u000a  int iVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  int *piVar4;\u000a  __off_t __len;\u000a  \u000a  iVar3 = fallocate((int)offset,3,length,__len);\u000a  if (iVar3 < 0) {\u000a    piVar4 = __errno_location();\u000a    iVar1 = *piVar4;\u000a    _Var2 = is_ENOTSUP();\u000a    if (iVar1 == 0x26) {\u000a      iVar3 = 0;\u000a    }\u000a    if (_Var2 != false) {\u000a      iVar3 = 0;\u000a    }\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p2383
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RAX,RDX\nMOV RCX,RSI\nMOV ESI,0x3\nMOV RDX,RCX\nMOV RCX,RAX\nCALL 0x00402600\nMOV EBX,EAX\nTEST EBX,EBX\nJNS 0x0040845a\nCALL 0x004022e0\nMOV EBP,dword ptr [RAX]\nMOV EDI,EBP\nCALL 0x00408470\nXOR ECX,ECX\nCMP EBP,0x26\nCMOVZ EBX,ECX\nTEST AL,AL\nCMOVNZ EBX,ECX\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p2384
S'55\n53\n50\n48 89 d0\n48 89 f1\nbe 03 00 00 00\n48 89 ca\n48 89 c1\ne8 c7 a1 ff ff\n89 c3\n85 db\n79 1b\ne8 9c 9e ff ff\n8b 28\n89 ef\ne8 23 00 00 00\n31 c9\n83 fd 26\n0f 44 d9\n84 c0\n0f 45 d9\n89 d8\n48 83 c4 08\n5b\n5d\nc3\n'
p2385
S'.text:0000000000408420\n.text:0000000000408421\n.text:0000000000408422\n.text:0000000000408423\n.text:0000000000408426\n.text:0000000000408429\n.text:000000000040842e\n.text:0000000000408431\n.text:0000000000408434\n.text:0000000000408439\n.text:000000000040843b\n.text:000000000040843d\n.text:000000000040843f\n.text:0000000000408444\n.text:0000000000408446\n.text:0000000000408448\n.text:000000000040844d\n.text:000000000040844f\n.text:0000000000408452\n.text:0000000000408455\n.text:0000000000408457\n.text:000000000040845a\n.text:000000000040845c\n.text:0000000000408460\n.text:0000000000408461\n.text:0000000000408462\n'
p2386
tp2387
sS'textdomain'
p2388
(S'\n__stdcall textdomain()\n'
p2389
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_006180c0)();\u000a  return;\u000a}\u000a\u000a
p2390
S'JMP qword ptr [0x006180c0]\n'
p2391
S'ff 25 0a 5d 21 00\n'
p2392
S'.plt:00000000004023b0\n'
p2393
tp2394
sS'getpagesize'
p2395
(S'\n__stdcall getpagesize()\n'
p2396
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getpagesize(void)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getpagesize_00618390)();\u000a  return iVar1;\u000a}\u000a\u000a
p2397
S'JMP qword ptr [0x00618390]\n'
p2398
S'ff 25 3a 5a 21 00\n'
p2399
S'.plt:0000000000402950\n'
p2400
tp2401
sS'ferror_unlocked'
p2402
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p2403
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_00618200)();\u000a  return iVar1;\u000a}\u000a\u000a
p2404
S'JMP qword ptr [0x00618200]\n'
p2405
S'ff 25 ca 5b 21 00\n'
p2406
S'.plt:0000000000402630\n'
p2407
tp2408
sS'locale_charset'
p2409
(S'\n__stdcall locale_charset()\n'
p2410
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_0040fc8d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_0040fc8d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p2411
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x00402780\nTEST RAX,RAX\nMOV R14D,0x413a61\nCMOVNZ R14,RAX\nCALL 0x0040fca0\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x0040fc65\nJMP 0x0040fc8d\nMOV RDI,RBX\nCALL 0x00402440\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00402440\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x0040fc8d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00402650\nTEST EAX,EAX\nJZ 0x0040fc80\nCMP BPL,0x2a\nJNZ 0x0040fc40\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x0040fc40\nMOV RDI,RBX\nCALL 0x00402440\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x414348\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p2412
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 62 2b ff ff\n48 85 c0\n41 be 61 3a 41 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 f8 27 ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 ea 27 ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 e0 29 ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 b8 27 ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 48 43 41 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p2413
S'.text:000000000040fc10\n.text:000000000040fc11\n.text:000000000040fc13\n.text:000000000040fc14\n.text:000000000040fc19\n.text:000000000040fc1e\n.text:000000000040fc21\n.text:000000000040fc27\n.text:000000000040fc2b\n.text:000000000040fc30\n.text:000000000040fc33\n.text:000000000040fc36\n.text:000000000040fc39\n.text:000000000040fc3b\n.text:000000000040fc40\n.text:000000000040fc43\n.text:000000000040fc48\n.text:000000000040fc4c\n.text:000000000040fc51\n.text:000000000040fc56\n.text:000000000040fc5b\n.text:000000000040fc60\n.text:000000000040fc63\n.text:000000000040fc65\n.text:000000000040fc68\n.text:000000000040fc6b\n.text:000000000040fc70\n.text:000000000040fc72\n.text:000000000040fc74\n.text:000000000040fc78\n.text:000000000040fc7a\n.text:000000000040fc7e\n.text:000000000040fc80\n.text:000000000040fc83\n.text:000000000040fc88\n.text:000000000040fc8d\n.text:000000000040fc91\n.text:000000000040fc96\n.text:000000000040fc9a\n.text:000000000040fc9b\n.text:000000000040fc9d\n.text:000000000040fc9e\n'
p2414
tp2415
sS'set_program_name'
p2416
(S'\n__stdcall set_program_name(char * argv0)\n'
p2417
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p2418
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x0040b211\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x004024e0\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x0040b1fb\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x413240\nMOV EDX,0x7\nCALL 0x00402300\nTEST EAX,EAX\nJNZ 0x0040b1fb\nMOV ESI,0x413248\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x00402300\nTEST EAX,EAX\nJNZ 0x0040b1f8\nADD R14,0x3\nMOV qword ptr [0x006184a0],R14\nMOV RBX,R14\nMOV qword ptr [0x0061a950],RBX\nMOV qword ptr [0x006184c8],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x006184e0]\nMOV EDI,0x413208\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x00402970\nCALL 0x004022d0\n'
p2419
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 37 73 ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 40 32 41 00\nba 07 00 00 00\ne8 2d 71 ff ff\n85 c0\n75 24\nbe 48 32 41 00\nba 03 00 00 00\n4c 89 f7\ne8 17 71 ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 a8 d2 20 00\n4c 89 f3\n48 89 1d 4e f7 20 00\n48 89 1d bf d2 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d c8 d2 20 00\nbf 08 32 41 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 44 77 ff ff\ne8 9f 70 ff ff\n'
p2420
S'.text:000000000040b190\n.text:000000000040b192\n.text:000000000040b193\n.text:000000000040b194\n.text:000000000040b197\n.text:000000000040b19a\n.text:000000000040b19c\n.text:000000000040b1a1\n.text:000000000040b1a4\n.text:000000000040b1a9\n.text:000000000040b1ac\n.text:000000000040b1b0\n.text:000000000040b1b4\n.text:000000000040b1b7\n.text:000000000040b1ba\n.text:000000000040b1be\n.text:000000000040b1c0\n.text:000000000040b1c4\n.text:000000000040b1c9\n.text:000000000040b1ce\n.text:000000000040b1d3\n.text:000000000040b1d5\n.text:000000000040b1d7\n.text:000000000040b1dc\n.text:000000000040b1e1\n.text:000000000040b1e4\n.text:000000000040b1e9\n.text:000000000040b1eb\n.text:000000000040b1ed\n.text:000000000040b1f1\n.text:000000000040b1f8\n.text:000000000040b1fb\n.text:000000000040b202\n.text:000000000040b209\n.text:000000000040b20d\n.text:000000000040b20e\n.text:000000000040b210\n.text:000000000040b211\n.text:000000000040b218\n.text:000000000040b21d\n.text:000000000040b222\n.text:000000000040b227\n.text:000000000040b22c\n'
p2421
tp2422
sS'strspn'
p2423
(S'\n__stdcall strspn(char * __s, char * __accept)\n'
p2424
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strspn(char *__s,char *__accept)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strspn_006181b8)();\u000a  return sVar1;\u000a}\u000a\u000a
p2425
S'JMP qword ptr [0x006181b8]\n'
p2426
S'ff 25 12 5c 21 00\n'
p2427
S'.plt:00000000004025a0\n'
p2428
tp2429
sS'canonicalize_file_name'
p2430
(S'\n__stdcall canonicalize_file_name(char * __name)\n'
p2431
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * canonicalize_file_name(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_canonicalize_file_name_006181a8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p2432
S'JMP qword ptr [0x006181a8]\n'
p2433
S'ff 25 22 5c 21 00\n'
p2434
S'.plt:0000000000402580\n'
p2435
tp2436
sS'quotearg_buffer'
p2437
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p2438
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p2439
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x61a960\nCMOVNZ RBP,R8\nCALL 0x004022e0\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x0040b410\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2440
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd 60 a9 61 00\n49 0f 45 e8\ne8 28 6f ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2441
S'.text:000000000040b390\n.text:000000000040b391\n.text:000000000040b393\n.text:000000000040b395\n.text:000000000040b397\n.text:000000000040b399\n.text:000000000040b39a\n.text:000000000040b39b\n.text:000000000040b39e\n.text:000000000040b3a1\n.text:000000000040b3a4\n.text:000000000040b3a7\n.text:000000000040b3aa\n.text:000000000040b3af\n.text:000000000040b3b3\n.text:000000000040b3b8\n.text:000000000040b3bb\n.text:000000000040b3bd\n.text:000000000040b3c1\n.text:000000000040b3c5\n.text:000000000040b3c9\n.text:000000000040b3cd\n.text:000000000040b3d0\n.text:000000000040b3d3\n.text:000000000040b3d6\n.text:000000000040b3d9\n.text:000000000040b3dc\n.text:000000000040b3df\n.text:000000000040b3e3\n.text:000000000040b3e4\n.text:000000000040b3e9\n.text:000000000040b3ed\n.text:000000000040b3f1\n.text:000000000040b3f3\n.text:000000000040b3f7\n.text:000000000040b3f8\n.text:000000000040b3fa\n.text:000000000040b3fc\n.text:000000000040b3fe\n.text:000000000040b400\n.text:000000000040b401\n'
p2442
tp2443
sS'cdb_fchdir'
p2444
(S'\n__stdcall cdb_fchdir(cd_buf * cdb)\n'
p2445
V\u000aint cdb_fchdir(cd_buf *cdb)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = fchdir((int)*cdb);\u000a  return iVar1;\u000a}\u000a\u000a
p2446
S'MOV EDI,dword ptr [RDI]\nJMP 0x004027e0\n'
p2447
S'8b 3f\ne9 39 23 ff ff\n'
p2448
S'.text:00000000004104a0\n.text:00000000004104a2\n'
p2449
tp2450
sS'get_stat_ctime'
p2451
(S'\n__stdcall get_stat_ctime(stat * st)\n'
p2452
V\u000atimespec get_stat_ctime(stat *st)\u000a\u000a{\u000a  return st->st_ctim;\u000a}\u000a\u000a
p2453
S'MOV RAX,qword ptr [RDI + 0x68]\nMOV RDX,qword ptr [RDI + 0x70]\nRET\n'
p2454
S'48 8b 47 68\n48 8b 57 70\nc3\n'
p2455
S'.text:000000000040d740\n.text:000000000040d744\n.text:000000000040d748\n'
p2456
tp2457
sS'close_stdin'
p2458
(S'\n__stdcall close_stdin()\n'
p2459
V\u000avoid close_stdin(void)\u000a\u000a{\u000a  uint uVar1;\u000a  FILE *fp;\u000a  int iVar2;\u000a  size_t sVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  bool bVar6;\u000a  \u000a  fp = stdin;\u000a  sVar3 = freadahead(stdin);\u000a  bVar6 = false;\u000a  if (sVar3 != 0) {\u000a    iVar2 = rpl_fseeko(fp,0);\u000a    bVar6 = false;\u000a    if (iVar2 == 0) {\u000a      iVar2 = rpl_fflush(stdin);\u000a      bVar6 = iVar2 != 0;\u000a    }\u000a  }\u000a  iVar2 = close_stream(stdin);\u000a  if ((!bVar6) && (iVar2 == 0)) {\u000a    close_stdout();\u000a    return;\u000a  }\u000a  uVar4 = dcgettext(0,"error closing file",5);\u000a  arg = file_name;\u000a  puVar5 = (uint *)__errno_location();\u000a  uVar1 = *puVar5;\u000a  if (arg == (char *)0x0) {\u000a    error(0,(ulong)uVar1,0x412558,uVar4);\u000a  }\u000a  else {\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a  }\u000a  close_stdout();\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p2460
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,qword ptr [0x006184b0]\nMOV RDI,RBX\nCALL 0x0040f120\nXOR EBP,EBP\nTEST RAX,RAX\nJZ 0x0040903f\nXOR ESI,ESI\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x0040f150\nTEST EAX,EAX\nJNZ 0x0040903f\nMOV RDI,qword ptr [0x006184b0]\nCALL 0x0040f0d0\nTEST EAX,EAX\nSETNZ BPL\nMOV RDI,qword ptr [0x006184b0]\nCALL 0x0040fb20\nTEST BPL,BPL\nJNZ 0x0040905d\nTEST EAX,EAX\nJNZ 0x0040905d\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x004090f0\nXOR EDI,EDI\nMOV ESI,0x412c58\nMOV EDX,0x5\nCALL 0x00402420\nMOV R14,RAX\nMOV RBX,qword ptr [0x0061a938]\nCALL 0x004022e0\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x00409099\nXOR EDI,EDI\nMOV EDX,0x412558\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00402870\nJMP 0x004090b7\nMOV RDI,RBX\nCALL 0x0040c580\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x412c6b\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00402870\nCALL 0x004090f0\nMOV EDI,dword ptr [0x00618420]\nCALL 0x00402310\n'
p2461
S'55\n41 56\n53\n48 8b 1d a5 f4 20 00\n48 89 df\ne8 0d 61 00 00\n31 ed\n48 85 c0\n74 25\n31 f6\nba 01 00 00 00\n48 89 df\ne8 27 61 00 00\n85 c0\n75 12\n48 8b 3d 7c f4 20 00\ne8 97 60 00 00\n85 c0\n40 0f 95 c5\n48 8b 3d 6a f4 20 00\ne8 d5 6a 00 00\n40 84 ed\n75 0d\n85 c0\n75 09\n5b\n41 5e\n5d\ne9 93 00 00 00\n31 ff\nbe 58 2c 41 00\nba 05 00 00 00\ne8 b2 93 ff ff\n49 89 c6\n48 8b 1d c0 18 21 00\ne8 63 92 ff ff\n48 85 db\n8b 28\n75 15\n31 ff\nba 58 25 41 00\n31 c0\n89 ee\n4c 89 f1\ne8 d9 97 ff ff\neb 1e\n48 89 df\ne8 df 34 00 00\n48 89 c1\n31 ff\nba 6b 2c 41 00\n31 c0\n89 ee\n4d 89 f0\ne8 b9 97 ff ff\ne8 34 00 00 00\n8b 3d 5e f3 20 00\ne8 49 92 ff ff\n'
p2462
S'.text:0000000000409000\n.text:0000000000409001\n.text:0000000000409003\n.text:0000000000409004\n.text:000000000040900b\n.text:000000000040900e\n.text:0000000000409013\n.text:0000000000409015\n.text:0000000000409018\n.text:000000000040901a\n.text:000000000040901c\n.text:0000000000409021\n.text:0000000000409024\n.text:0000000000409029\n.text:000000000040902b\n.text:000000000040902d\n.text:0000000000409034\n.text:0000000000409039\n.text:000000000040903b\n.text:000000000040903f\n.text:0000000000409046\n.text:000000000040904b\n.text:000000000040904e\n.text:0000000000409050\n.text:0000000000409052\n.text:0000000000409054\n.text:0000000000409055\n.text:0000000000409057\n.text:0000000000409058\n.text:000000000040905d\n.text:000000000040905f\n.text:0000000000409064\n.text:0000000000409069\n.text:000000000040906e\n.text:0000000000409071\n.text:0000000000409078\n.text:000000000040907d\n.text:0000000000409080\n.text:0000000000409082\n.text:0000000000409084\n.text:0000000000409086\n.text:000000000040908b\n.text:000000000040908d\n.text:000000000040908f\n.text:0000000000409092\n.text:0000000000409097\n.text:0000000000409099\n.text:000000000040909c\n.text:00000000004090a1\n.text:00000000004090a4\n.text:00000000004090a6\n.text:00000000004090ab\n.text:00000000004090ad\n.text:00000000004090af\n.text:00000000004090b2\n.text:00000000004090b7\n.text:00000000004090bc\n.text:00000000004090c2\n'
p2463
tp2464
sS'rpl_fflush'
p2465
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p2466
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_006182a0)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p2467
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x0040f0ed\nMOV RDI,RBX\nCALL 0x004027d0\nTEST EAX,EAX\nJZ 0x0040f0ed\nMOV RDI,RBX\nCALL 0x0040f100\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402770\n'
p2468
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 ef 36 ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 7a 36 ff ff\n'
p2469
S'.text:000000000040f0d0\n.text:000000000040f0d1\n.text:000000000040f0d4\n.text:000000000040f0d7\n.text:000000000040f0d9\n.text:000000000040f0dc\n.text:000000000040f0e1\n.text:000000000040f0e3\n.text:000000000040f0e5\n.text:000000000040f0e8\n.text:000000000040f0ed\n.text:000000000040f0f0\n.text:000000000040f0f1\n'
p2470
tp2471
sS'extent_scan_read'
p2472
(S'\n__stdcall extent_scan_read(extent_scan * scan)\n'
p2473
V\u000a_Bool extent_scan_read(extent_scan *scan)\u000a\u000a{\u000a  ulong *puVar1;\u000a  uint uVar2;\u000a  extent_info *p;\u000a  int iVar3;\u000a  uint uVar4;\u000a  extent_info *peVar5;\u000a  ulong uVar6;\u000a  ulong uVar7;\u000a  size_t n;\u000a  long lVar8;\u000a  size_t sVar9;\u000a  extent_info *peVar10;\u000a  ulong local_1030;\u000a  ulong local_1028;\u000a  uint local_1020;\u000a  uint local_101c;\u000a  undefined4 local_1018;\u000a  ulong local_1010 [2];\u000a  long local_1000 [3];\u000a  uint auStack4072 [1006];\u000a  \u000a  peVar10 = scan->ext_info;\u000a  sVar9 = 0;\u000a  while( true ) {\u000a    memset(&local_1030,0,0x1000);\u000a    local_1030 = scan->scan_start;\u000a    local_1020 = scan->fm_flags;\u000a    local_1018 = 0x48;\u000a    local_1028 = ~local_1030;\u000a    iVar3 = ioctl(scan->fd,0xc020660b,&local_1030);\u000a    if (iVar3 < 0) break;\u000a    if (local_101c == 0) {\u000a      scan->hit_final_extent = true;\u000a      return (_Bool)(scan->scan_start != 0);\u000a    }\u000a    if (~(ulong)local_101c < scan->ei_count) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents","src/extent-scan.c",\u000a                    0x7e,"_Bool extent_scan_read(struct extent_scan *)");\u000a    }\u000a    n = scan->ei_count + (ulong)local_101c;\u000a    scan->ei_count = n;\u000a    p = scan->ext_info;\u000a    peVar5 = (extent_info *)xnrealloc(p,n,0x18);\u000a    scan->ext_info = peVar5;\u000a    peVar10 = (extent_info *)\u000a              ((long)&peVar5->ext_logical +\u000a              (long)&((extent_info *)((long)peVar10 - (long)p))->ext_logical);\u000a    if (local_101c != 0) {\u000a      uVar4 = 0;\u000a      do {\u000a        uVar6 = (ulong)uVar4;\u000a        if (0x7fffffffffffffffU - local_1000[uVar6 * 7] < local_1010[uVar6 * 7]) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __assert_fail("fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length",\u000a                        "src/extent-scan.c",0x8d,"_Bool extent_scan_read(struct extent_scan *)");\u000a        }\u000a        puVar1 = local_1010 + uVar6 * 7;\u000a        if ((int)sVar9 == 0) {\u000a          if (*puVar1 <= (ulong)scan->scan_start && scan->scan_start != *puVar1) {\u000a            uVar7 = scan->scan_start;\u000a            goto LAB_004087fd;\u000a          }\u000a          uVar7 = *puVar1;\u000aLAB_0040881e:\u000a          p = scan->ext_info;\u000a          peVar10 = p + sVar9;\u000a          p[sVar9].ext_logical = uVar7;\u000a          p[sVar9].ext_length = local_1000[uVar6 * 7];\u000a          p[sVar9].ext_flags = auStack4072[uVar6 * 0xe];\u000a          sVar9 = (size_t)((int)sVar9 + 1);\u000a        }\u000a        else {\u000a          uVar2 = auStack4072[uVar6 * 0xe];\u000a          if ((peVar10->ext_flags == (uVar2 & 0xfffffffe)) &&\u000a             (peVar10->ext_logical + peVar10->ext_length == local_1010[uVar6 * 7])) {\u000a            peVar10->ext_length = peVar10->ext_length + local_1000[uVar6 * 7];\u000a            peVar10->ext_flags = uVar2;\u000a          }\u000a          else {\u000a            uVar7 = *puVar1;\u000a            if ((ulong)(peVar10->ext_length + peVar10->ext_logical) <= uVar7) goto LAB_0040881e;\u000a            uVar7 = peVar10->ext_length + peVar10->ext_logical;\u000aLAB_004087fd:\u000a            lVar8 = local_1000[uVar6 * 7] - (uVar7 - *puVar1);\u000a            if (uVar7 - *puVar1 <= (ulong)local_1000[uVar6 * 7] && lVar8 != 0) goto LAB_004088b2;\u000a            *puVar1 = uVar7;\u000a            local_1000[uVar6 * 7] = lVar8;\u000a            uVar4 = uVar4 - 1;\u000a          }\u000a        }\u000a        uVar4 = uVar4 + 1;\u000a      } while (uVar4 < local_101c);\u000a    }\u000a    if ((*(byte *)&peVar10->ext_flags & 1) != 0) {\u000a      scan->hit_final_extent = true;\u000a      scan->ei_count = sVar9;\u000a      return true;\u000a    }\u000a    if (((uint)sVar9 < 0x49) || (scan->hit_final_extent != false)) {\u000a      scan->ei_count = sVar9;\u000a      if (scan->hit_final_extent != false) {\u000a        return true;\u000a      }\u000a    }\u000a    else {\u000a      sVar9 = (size_t)((uint)sVar9 - 1);\u000a      scan->ei_count = sVar9;\u000a      peVar10 = (extent_info *)&scan->ext_info[sVar9 - 1].ext_flags;\u000a    }\u000a    scan->scan_start = peVar10->ext_length + peVar10->ext_logical;\u000a    if (0x47 < (uint)sVar9) {\u000a      return true;\u000a    }\u000a  }\u000aLAB_004088b2:\u000a  if (scan->scan_start == 0) {\u000a    scan->initial_scan_failed = true;\u000a  }\u000a  return false;\u000a}\u000a\u000a
p2474
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x1008\nMOV R15,RDI\nMOV R14,qword ptr [R15 + 0x28]\nMOV R12,0x7fffffffffffffff\nXOR R13D,R13D\nXOR ESI,ESI\nMOV EDX,0x1000\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00402530\nMOV RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV ECX,dword ptr [R15 + 0x10]\nMOV dword ptr [RSP + 0x18],ECX\nMOV dword ptr [RSP + 0x20],0x48\nNOT RAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV EDI,dword ptr [R15]\nMOV ESI,0xc020660b\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402560\nTEST EAX,EAX\nJS 0x004088b2\nMOV EAX,dword ptr [RSP + 0x1c]\nTEST RAX,RAX\nJZ 0x004088c2\nMOV RSI,qword ptr [R15 + 0x18]\nMOV RCX,RAX\nNOT RCX\nCMP RSI,RCX\nJA 0x0040890a\nADD RSI,RAX\nMOV qword ptr [R15 + 0x18],RSI\nMOV RDI,qword ptr [R15 + 0x28]\nSUB R14,RDI\nMOV EDX,0x18\nCALL 0x0040e9d0\nMOV qword ptr [R15 + 0x28],RAX\nADD R14,RAX\nCMP dword ptr [RSP + 0x1c],0x0\nJZ 0x00408851\nXOR EAX,EAX\nMOV R8D,dword ptr [RSP + 0x1c]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV ECX,EAX\nIMUL RSI,RCX,0x38\nMOV RCX,qword ptr [RSP + RSI*0x1 + 0x28]\nMOV RDI,qword ptr [RSP + RSI*0x1 + 0x38]\nMOV RDX,R12\nSUB RDX,RDI\nCMP RCX,RDX\nJA 0x004088f1\nLEA RDX,[RSP + RSI*0x1 + 0x28]\nTEST R13D,R13D\nJZ 0x004087f0\nMOV EBP,dword ptr [RSP + RSI*0x1 + 0x50]\nMOV EBX,EBP\nAND EBX,0xfffffffe\nCMP dword ptr [R14 + 0x10],EBX\nJNZ 0x004087d0\nMOV R9,qword ptr [R14 + 0x8]\nMOV RBX,qword ptr [R14]\nADD RBX,R9\nCMP RBX,RCX\nJNZ 0x004087d0\nADD R9,RDI\nMOV qword ptr [R14 + 0x8],R9\nMOV dword ptr [R14 + 0x10],EBP\nJMP 0x00408846\nMOV RCX,qword ptr [RDX]\nMOV RDI,qword ptr [R14 + 0x8]\nADD RDI,qword ptr [R14]\nCMP RDI,RCX\nJBE 0x0040881e\nMOV RCX,qword ptr [R14 + 0x8]\nADD RCX,qword ptr [R14]\nJMP 0x004087fd\nMOV RCX,qword ptr [R15 + 0x8]\nCMP RCX,qword ptr [RDX]\nJBE 0x0040881b\nMOV RCX,qword ptr [R15 + 0x8]\nMOV RDI,RCX\nSUB RDI,qword ptr [RDX]\nMOV RSI,qword ptr [RDX + 0x10]\nSUB RSI,RDI\nJA 0x004088b2\nMOV qword ptr [RDX],RCX\nMOV qword ptr [RDX + 0x10],RSI\nDEC EAX\nJMP 0x00408846\nMOV RCX,qword ptr [RDX]\nMOV RDI,qword ptr [R15 + 0x28]\nMOV EBP,R13D\nLEA RBP,[RBP + RBP*0x2]\nLEA R14,[RDI + RBP*0x8]\nMOV qword ptr [RDI + RBP*0x8],RCX\nMOV RCX,qword ptr [RDX + 0x10]\nMOV qword ptr [RDI + RBP*0x8 + 0x8],RCX\nMOV ECX,dword ptr [RSP + RSI*0x1 + 0x50]\nMOV dword ptr [RDI + RBP*0x8 + 0x10],ECX\nINC R13D\nINC EAX\nCMP EAX,R8D\nJC 0x00408770\nTEST byte ptr [R14 + 0x10],0x1\nJNZ 0x004088d1\nMOV AL,byte ptr [R15 + 0x21]\nCMP R13D,0x49\nJC 0x00408890\nTEST AL,AL\nJNZ 0x00408890\nDEC R13D\nTEST AL,AL\nMOV RAX,qword ptr [R15 + 0x28]\nMOV qword ptr [R15 + 0x18],R13\nJNZ 0x004088dd\nLEA RCX,[R13 + R13*0x2]\nLEA R14,[RAX + RCX*0x8 + -0x18]\nJMP 0x0040889b\nMOV ECX,R13D\nMOV qword ptr [R15 + 0x18],RCX\nTEST AL,AL\nJNZ 0x004088dd\nMOV RAX,qword ptr [R14 + 0x8]\nADD RAX,qword ptr [R14]\nMOV qword ptr [R15 + 0x8],RAX\nCMP R13D,0x48\nJC 0x004086c5\nJMP 0x004088dd\nCMP qword ptr [R15 + 0x8],0x0\nJNZ 0x004088be\nMOV byte ptr [R15 + 0x20],0x1\nXOR EAX,EAX\nJMP 0x004088df\nMOV byte ptr [R15 + 0x21],0x1\nCMP qword ptr [R15 + 0x8],0x0\nSETNZ AL\nJMP 0x004088df\nMOV byte ptr [R15 + 0x21],0x1\nMOV EAX,R13D\nMOV qword ptr [R15 + 0x18],RAX\nMOV AL,0x1\nADD RSP,0x1008\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x412b5c\nMOV ESI,0x412b1d\nMOV EDX,0x8d\nMOV ECX,0x412b2f\nCALL 0x00402520\nMOV EDI,0x412ae6\nMOV ESI,0x412b1d\nMOV EDX,0x7e\nMOV ECX,0x412b2f\nCALL 0x00402520\n'
p2475
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 08 10 00 00\n49 89 ff\n4d 8b 77 28\n49 bc ff ff ff ff ff ff ff 7f\n45 31 ed\n31 f6\nba 00 10 00 00\n48 8d 5c 24 08\n48 89 df\ne8 57 9e ff ff\n49 8b 47 08\n48 89 44 24 08\n41 8b 4f 10\n89 4c 24 18\nc7 44 24 20 48 00 00 00\n48 f7 d0\n48 89 44 24 10\n41 8b 3f\nbe 0b 66 20 c0\n31 c0\n48 89 da\ne8 54 9e ff ff\n85 c0\n0f 88 9e 01 00 00\n8b 44 24 1c\n48 85 c0\n0f 84 a1 01 00 00\n49 8b 77 18\n48 89 c1\n48 f7 d1\n48 39 ce\n0f 87 d6 01 00 00\n48 01 c6\n49 89 77 18\n49 8b 7f 28\n49 29 fe\nba 18 00 00 00\ne8 84 62 00 00\n49 89 47 28\n49 01 c6\n83 7c 24 1c 00\n0f 84 f3 00 00 00\n31 c0\n44 8b 44 24 1c\n66 66 2e 0f 1f 84 00 00 00 00 00\n89 c1\n48 6b f1 38\n48 8b 4c 34 28\n48 8b 7c 34 38\n4c 89 e2\n48 29 fa\n48 39 d1\n0f 87 62 01 00 00\n48 8d 54 34 28\n45 85 ed\n74 57\n8b 6c 34 50\n89 eb\n83 e3 fe\n41 39 5e 10\n75 28\n4d 8b 4e 08\n49 8b 1e\n4c 01 cb\n48 39 cb\n75 19\n49 01 f9\n4d 89 4e 08\n41 89 6e 10\ne9 7f 00 00 00\n48 8b 0a\n49 8b 7e 08\n49 03 3e\n48 39 cf\n76 3f\n49 8b 4e 08\n49 03 0e\neb 15\n49 8b 4f 08\n48 3b 0a\n76 22\n49 8b 4f 08\n48 89 cf\n48 2b 3a\n48 8b 72 10\n48 29 fe\n0f 87 a2 00 00 00\n48 89 0a\n48 89 72 10\nff c8\neb 2b\n48 8b 0a\n49 8b 7f 28\n44 89 ed\n48 8d 6c 6d 00\n4c 8d 34 ef\n48 89 0c ef\n48 8b 4a 10\n48 89 4c ef 08\n8b 4c 34 50\n89 4c ef 10\n41 ff c5\nff c0\n44 39 c0\n0f 82 1f ff ff ff\n41 f6 46 10 01\n75 79\n41 8a 47 21\n41 83 fd 49\n72 2e\n84 c0\n75 2a\n41 ff cd\n84 c0\n49 8b 47 28\n4d 89 6f 18\n75 68\n4b 8d 4c 6d 00\n4c 8d 74 c8 e8\neb 1a\n44 89 e9\n49 89 4f 18\n84 c0\n75 42\n49 8b 46 08\n49 03 06\n49 89 47 08\n41 83 fd 48\n0f 82 15 fe ff ff\neb 2b\n49 83 7f 08 00\n75 05\n41 c6 47 20 01\n31 c0\neb 1d\n41 c6 47 21 01\n49 83 7f 08 00\n0f 95 c0\neb 0e\n41 c6 47 21 01\n44 89 e8\n49 89 47 18\nb0 01\n48 81 c4 08 10 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf 5c 2b 41 00\nbe 1d 2b 41 00\nba 8d 00 00 00\nb9 2f 2b 41 00\ne8 16 9c ff ff\nbf e6 2a 41 00\nbe 1d 2b 41 00\nba 7e 00 00 00\nb9 2f 2b 41 00\ne8 fd 9b ff ff\n'
p2476
S'.text:00000000004086a0\n.text:00000000004086a1\n.text:00000000004086a3\n.text:00000000004086a5\n.text:00000000004086a7\n.text:00000000004086a9\n.text:00000000004086aa\n.text:00000000004086b1\n.text:00000000004086b4\n.text:00000000004086b8\n.text:00000000004086c2\n.text:00000000004086c5\n.text:00000000004086c7\n.text:00000000004086cc\n.text:00000000004086d1\n.text:00000000004086d4\n.text:00000000004086d9\n.text:00000000004086dd\n.text:00000000004086e2\n.text:00000000004086e6\n.text:00000000004086ea\n.text:00000000004086f2\n.text:00000000004086f5\n.text:00000000004086fa\n.text:00000000004086fd\n.text:0000000000408702\n.text:0000000000408704\n.text:0000000000408707\n.text:000000000040870c\n.text:000000000040870e\n.text:0000000000408714\n.text:0000000000408718\n.text:000000000040871b\n.text:0000000000408721\n.text:0000000000408725\n.text:0000000000408728\n.text:000000000040872b\n.text:000000000040872e\n.text:0000000000408734\n.text:0000000000408737\n.text:000000000040873b\n.text:000000000040873f\n.text:0000000000408742\n.text:0000000000408747\n.text:000000000040874c\n.text:0000000000408750\n.text:0000000000408753\n.text:0000000000408758\n.text:000000000040875e\n.text:0000000000408760\n.text:0000000000408765\n.text:0000000000408770\n.text:0000000000408772\n.text:0000000000408776\n.text:000000000040877b\n.text:0000000000408780\n.text:0000000000408783\n.text:0000000000408786\n.text:0000000000408789\n.text:000000000040878f\n.text:0000000000408794\n.text:0000000000408797\n.text:0000000000408799\n.text:000000000040879d\n.text:000000000040879f\n.text:00000000004087a2\n.text:00000000004087a6\n.text:00000000004087a8\n.text:00000000004087ac\n.text:00000000004087af\n.text:00000000004087b2\n.text:00000000004087b5\n.text:00000000004087b7\n.text:00000000004087ba\n.text:00000000004087be\n.text:00000000004087c2\n.text:00000000004087d0\n.text:00000000004087d3\n.text:00000000004087d7\n.text:00000000004087da\n.text:00000000004087dd\n.text:00000000004087df\n.text:00000000004087e3\n.text:00000000004087e6\n.text:00000000004087f0\n.text:00000000004087f4\n.text:00000000004087f7\n.text:00000000004087f9\n.text:00000000004087fd\n.text:0000000000408800\n.text:0000000000408803\n.text:0000000000408807\n.text:000000000040880a\n.text:0000000000408810\n.text:0000000000408813\n.text:0000000000408817\n.text:0000000000408819\n.text:000000000040881b\n.text:000000000040881e\n.text:0000000000408822\n.text:0000000000408825\n.text:000000000040882a\n.text:000000000040882e\n.text:0000000000408832\n.text:0000000000408836\n.text:000000000040883b\n.text:000000000040883f\n.text:0000000000408843\n.text:0000000000408846\n.text:0000000000408848\n.text:000000000040884b\n.text:0000000000408851\n.text:0000000000408856\n.text:0000000000408858\n.text:000000000040885c\n.text:0000000000408860\n.text:0000000000408862\n.text:0000000000408864\n.text:0000000000408866\n.text:0000000000408869\n.text:000000000040886b\n.text:000000000040886f\n.text:0000000000408873\n.text:0000000000408875\n.text:000000000040887a\n.text:000000000040887f\n.text:0000000000408890\n.text:0000000000408893\n.text:0000000000408897\n.text:0000000000408899\n.text:000000000040889b\n.text:000000000040889f\n.text:00000000004088a2\n.text:00000000004088a6\n.text:00000000004088aa\n.text:00000000004088b0\n.text:00000000004088b2\n.text:00000000004088b7\n.text:00000000004088b9\n.text:00000000004088be\n.text:00000000004088c0\n.text:00000000004088c2\n.text:00000000004088c7\n.text:00000000004088cc\n.text:00000000004088cf\n.text:00000000004088d1\n.text:00000000004088d6\n.text:00000000004088d9\n.text:00000000004088dd\n.text:00000000004088df\n.text:00000000004088e6\n.text:00000000004088e7\n.text:00000000004088e9\n.text:00000000004088eb\n.text:00000000004088ed\n.text:00000000004088ef\n.text:00000000004088f0\n.text:00000000004088f1\n.text:00000000004088f6\n.text:00000000004088fb\n.text:0000000000408900\n.text:0000000000408905\n.text:000000000040890a\n.text:000000000040890f\n.text:0000000000408914\n.text:0000000000408919\n.text:000000000040891e\n'
p2477
tp2478
sS'quotearg_n'
p2479
(S'\n__stdcall quotearg_n(char * arg)\n'
p2480
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p2481
S'MOV RDX,-0x1\nMOV ECX,0x61a960\nJMP 0x0040c1f0\n'
p2482
S'48 c7 c2 ff ff ff ff\nb9 60 a9 61 00\neb 02\n'
p2483
S'.text:000000000040c1e0\n.text:000000000040c1e7\n.text:000000000040c1ec\n'
p2484
tp2485
sS'close_stream'
p2486
(S'\n__stdcall close_stream(FILE * stream)\n'
p2487
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p2488
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00402330\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00402630\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x004104e0\nTEST EBP,EBP\nJZ 0x0040fb5b\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040fb7f\nCALL 0x004022e0\nMOV dword ptr [RAX],0x0\nJMP 0x0040fb7f\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x0040fb7f\nTEST CL,CL\nJNZ 0x0040fb7f\nCALL 0x004022e0\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p2489
S'55\n41 56\n53\n48 89 fb\ne8 04 28 ff ff\n49 89 c6\n48 89 df\ne8 f9 2a ff ff\n89 c5\n48 89 df\ne8 9f 09 00 00\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 8d 27 ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 6e 27 ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p2490
S'.text:000000000040fb20\n.text:000000000040fb21\n.text:000000000040fb23\n.text:000000000040fb24\n.text:000000000040fb27\n.text:000000000040fb2c\n.text:000000000040fb2f\n.text:000000000040fb32\n.text:000000000040fb37\n.text:000000000040fb39\n.text:000000000040fb3c\n.text:000000000040fb41\n.text:000000000040fb43\n.text:000000000040fb45\n.text:000000000040fb4a\n.text:000000000040fb4c\n.text:000000000040fb4e\n.text:000000000040fb53\n.text:000000000040fb59\n.text:000000000040fb5b\n.text:000000000040fb5d\n.text:000000000040fb60\n.text:000000000040fb62\n.text:000000000040fb64\n.text:000000000040fb67\n.text:000000000040fb69\n.text:000000000040fb6b\n.text:000000000040fb6d\n.text:000000000040fb72\n.text:000000000040fb74\n.text:000000000040fb77\n.text:000000000040fb7c\n.text:000000000040fb7f\n.text:000000000040fb81\n.text:000000000040fb82\n.text:000000000040fb84\n.text:000000000040fb85\n'
p2491
tp2492
sS'quotearg_colon_mem'
p2493
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p2494
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p2495
S'MOV EDX,0x3a\nJMP 0x0040c500\n'
p2496
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p2497
S'.text:000000000040c590\n.text:000000000040c595\n'
p2498
tp2499
sS'readdir'
p2500
(S'\n__stdcall readdir(DIR * __dirp)\n'
p2501
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000adirent * readdir(DIR *__dirp)\u000a\u000a{\u000a  dirent *pdVar1;\u000a  \u000a  pdVar1 = (dirent *)(*(code *)PTR_readdir_00618288)();\u000a  return pdVar1;\u000a}\u000a\u000a
p2502
S'JMP qword ptr [0x00618288]\n'
p2503
S'ff 25 42 5b 21 00\n'
p2504
S'.plt:0000000000402740\n'
p2505
tp2506
sS'symlink'
p2507
(S'\n__stdcall symlink(char * __from, char * __to)\n'
p2508
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint symlink(char *__from,char *__to)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_symlink_00618148)();\u000a  return iVar1;\u000a}\u000a\u000a
p2509
S'JMP qword ptr [0x00618148]\n'
p2510
S'ff 25 82 5c 21 00\n'
p2511
S'.plt:00000000004024c0\n'
p2512
tp2513
sS'abandon_move'
p2514
(S'\n__stdcall abandon_move(cp_options * x, char * dst_name, stat * dst_sb)\n'
p2515
V\u000a_Bool abandon_move(cp_options *x,char *dst_name,stat *dst_sb)\u000a\u000a{\u000a  Interactive IVar1;\u000a  _Bool _Var2;\u000a  byte bVar3;\u000a  \u000a  if (x->move_mode == false) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("x->move_mode","src/copy.c",0x6c7,\u000a                  "_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)"\u000a                 );\u000a  }\u000a  IVar1 = x->interactive;\u000a  if (IVar1 != I_ALWAYS_NO) {\u000a    if ((IVar1 == I_ASK_USER) ||\u000a       (((IVar1 == I_UNSPECIFIED && (x->stdin_tty != false)) &&\u000a        (_Var2 = writable_destination(dst_name), _Var2 == false)))) {\u000a      _Var2 = overwrite_ok(x,dst_name,dst_sb);\u000a      bVar3 = _Var2 ^ 1;\u000a    }\u000a    else {\u000a      bVar3 = 0;\u000a    }\u000a    return (_Bool)bVar3;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p2516
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nCMP byte ptr [RBX + 0x18],0x0\nJZ 0x0040653a\nMOV EAX,dword ptr [RBX + 0x8]\nCMP EAX,0x2\nJZ 0x00406532\nCMP EAX,0x3\nJZ 0x00406520\nCMP EAX,0x4\nJNZ 0x0040651c\nCMP byte ptr [RBX + 0x2e],0x0\nJZ 0x0040651c\nMOV ESI,dword ptr [R14 + 0x18]\nMOV RDI,R15\nCALL 0x004079a0\nTEST AL,AL\nJZ 0x00406520\nXOR EAX,EAX\nJMP 0x00406534\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nCALL 0x00406560\nXOR AL,0x1\nJMP 0x00406534\nMOV AL,0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\nMOV EDI,0x41277e\nMOV ESI,0x412190\nMOV EDX,0x6c7\nMOV ECX,0x41278b\nCALL 0x00402520\n'
p2517
S'41 57\n41 56\n53\n49 89 d6\n49 89 f7\n48 89 fb\n80 7b 18 00\n74 46\n8b 43 08\n83 f8 02\n74 36\n83 f8 03\n74 1f\n83 f8 04\n75 16\n80 7b 2e 00\n74 10\n41 8b 76 18\n4c 89 ff\ne8 88 14 00 00\n84 c0\n74 04\n31 c0\neb 14\n48 89 df\n4c 89 fe\n4c 89 f2\ne8 32 00 00 00\n34 01\neb 02\nb0 01\n5b\n41 5e\n41 5f\nc3\nbf 7e 27 41 00\nbe 90 21 41 00\nba c7 06 00 00\nb9 8b 27 41 00\ne8 cd bf ff ff\n'
p2518
S'.text:00000000004064e0\n.text:00000000004064e2\n.text:00000000004064e4\n.text:00000000004064e5\n.text:00000000004064e8\n.text:00000000004064eb\n.text:00000000004064ee\n.text:00000000004064f2\n.text:00000000004064f4\n.text:00000000004064f7\n.text:00000000004064fa\n.text:00000000004064fc\n.text:00000000004064ff\n.text:0000000000406501\n.text:0000000000406504\n.text:0000000000406506\n.text:000000000040650a\n.text:000000000040650c\n.text:0000000000406510\n.text:0000000000406513\n.text:0000000000406518\n.text:000000000040651a\n.text:000000000040651c\n.text:000000000040651e\n.text:0000000000406520\n.text:0000000000406523\n.text:0000000000406526\n.text:0000000000406529\n.text:000000000040652e\n.text:0000000000406530\n.text:0000000000406532\n.text:0000000000406534\n.text:0000000000406535\n.text:0000000000406537\n.text:0000000000406539\n.text:000000000040653a\n.text:000000000040653f\n.text:0000000000406544\n.text:0000000000406549\n.text:000000000040654e\n'
p2519
tp2520
sS'security_compute_create'
p2521
(S'\n__stdcall security_compute_create(security_context_t scon, security_context_t tcon, security_context_t * newcon)\n'
p2522
V\u000aint security_compute_create\u000a              (security_context_t scon,security_context_t tcon,security_context_t *newcon)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2523
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2524
S'50\ne8 3a 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2525
S'.text:000000000040d6a0\n.text:000000000040d6a1\n.text:000000000040d6a6\n.text:000000000040d6ac\n.text:000000000040d6b1\n.text:000000000040d6b2\n'
p2526
tp2527
sS'copy'
p2528
(S'\n__stdcall copy(char * src_name, char * dst_name, cp_options * options, _Bool * copy_into_self, _Bool * rename_succeeded)\n'
p2529
V\u000a_Bool copy(char *src_name,char *dst_name,cp_options *options,_Bool *copy_into_self,\u000a          _Bool *rename_succeeded)\u000a\u000a{\u000a  _Bool _Var1;\u000a  _Bool local_9;\u000a  \u000a  local_9 = false;\u000a  top_level_src_name = src_name;\u000a  top_level_dst_name = dst_name;\u000a  _Var1 = copy_internal(src_name,dst_name,(stat *)((ulong)options & 0xff),(dir_list *)0x0,\u000a                        (cp_options *)0x0,copy_into_self,(_Bool *)0x1,&local_9);\u000a  return _Var1;\u000a}\u000a\u000a
p2530
S'PUSH RBX\nSUB RSP,0x10\nMOV R11,R9\nMOV R10,R8\nMOV RAX,RCX\nMOV qword ptr [0x0061a510],RDI\nMOV qword ptr [0x0061a518],RSI\nMOV byte ptr [RSP + 0xf],0x0\nLEA RBX,[RSP + 0xf]\nMOVZX EDX,DL\nMOV ECX,0x0\nMOV R8D,0x0\nMOV R9,RAX\nPUSH R11\nPUSH R10\nPUSH RBX\nPUSH 0x1\nCALL 0x00404450\nADD RSP,0x30\nPOP RBX\nRET\n'
p2531
S'53\n48 83 ec 10\n4d 89 cb\n4d 89 c2\n48 89 c8\n48 89 3d cb 61 21 00\n48 89 35 cc 61 21 00\nc6 44 24 0f 00\n48 8d 5c 24 0f\n0f b6 d2\nb9 00 00 00 00\n41 b8 00 00 00 00\n49 89 c1\n41 53\n41 52\n53\n6a 01\ne8 dd 00 00 00\n48 83 c4 30\n5b\nc3\n'
p2532
S'.text:0000000000404330\n.text:0000000000404331\n.text:0000000000404335\n.text:0000000000404338\n.text:000000000040433b\n.text:000000000040433e\n.text:0000000000404345\n.text:000000000040434c\n.text:0000000000404351\n.text:0000000000404356\n.text:0000000000404359\n.text:000000000040435e\n.text:0000000000404364\n.text:0000000000404367\n.text:0000000000404369\n.text:000000000040436b\n.text:000000000040436c\n.text:000000000040436e\n.text:0000000000404373\n.text:0000000000404377\n.text:0000000000404378\n'
p2533
tp2534
sS'hash_string'
p2535
(S'\n__stdcall hash_string(char * string, size_t n_buckets)\n'
p2536
V\u000asize_t hash_string(char *string,size_t n_buckets)\u000a\u000a{\u000a  byte bVar1;\u000a  ulong uVar2;\u000a  byte *pbVar3;\u000a  \u000a  bVar1 = *string;\u000a  if (bVar1 != 0) {\u000a    pbVar3 = (byte *)(string + 1);\u000a    uVar2 = 0;\u000a    do {\u000a      uVar2 = ((ulong)bVar1 + uVar2 * 0x1f) % n_buckets;\u000a      bVar1 = *pbVar3;\u000a      pbVar3 = pbVar3 + 1;\u000a    } while (bVar1 != 0);\u000a    return uVar2;\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p2537
S'MOV AL,byte ptr [RDI]\nTEST AL,AL\nJZ 0x00409c43\nINC RDI\nXOR EDX,EDX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RCX,RDX\nSHL RCX,0x5\nSUB RCX,RDX\nMOVZX EAX,AL\nADD RAX,RCX\nXOR EDX,EDX\nDIV RSI\nMOVZX EAX,byte ptr [RDI]\nINC RDI\nTEST AL,AL\nJNZ 0x00409c20\nMOV RAX,RDX\nRET\nXOR EDX,EDX\nMOV RAX,RDX\nRET\n'
p2538
S'8a 07\n84 c0\n74 2d\n48 ff c7\n31 d2\n0f 1f 44 00 00\n48 89 d1\n48 c1 e1 05\n48 29 d1\n0f b6 c0\n48 01 c8\n31 d2\n48 f7 f6\n0f b6 07\n48 ff c7\n84 c0\n75 e1\n48 89 d0\nc3\n31 d2\n48 89 d0\nc3\n'
p2539
S'.text:0000000000409c10\n.text:0000000000409c12\n.text:0000000000409c14\n.text:0000000000409c16\n.text:0000000000409c19\n.text:0000000000409c1b\n.text:0000000000409c20\n.text:0000000000409c23\n.text:0000000000409c27\n.text:0000000000409c2a\n.text:0000000000409c2d\n.text:0000000000409c30\n.text:0000000000409c32\n.text:0000000000409c35\n.text:0000000000409c38\n.text:0000000000409c3b\n.text:0000000000409c3d\n.text:0000000000409c3f\n.text:0000000000409c42\n.text:0000000000409c43\n.text:0000000000409c45\n.text:0000000000409c48\n'
p2540
tp2541
sS'is_nul'
p2542
(S'\n__stdcall is_nul(void * buf, size_t length)\n'
p2543
V\u000a_Bool is_nul(void *buf,size_t length)\u000a\u000a{\u000a  ulong uVar1;\u000a  int iVar2;\u000a  ulong __n;\u000a  char *__s2;\u000a  bool bVar3;\u000a  \u000a  bVar3 = true;\u000a  if (length != 0) {\u000a    uVar1 = length - 1;\u000a    __s2 = (char *)buf;\u000a    do {\u000a      __n = uVar1;\u000a      if (*__s2 != 0) {\u000a        return false;\u000a      }\u000a      if (__n == 0) {\u000a        return true;\u000a      }\u000a      __s2 = __s2 + 1;\u000a      uVar1 = __n - 1;\u000a    } while ((__n & 0xf) != 0);\u000a    iVar2 = memcmp(buf,__s2,__n);\u000a    bVar3 = iVar2 == 0;\u000a  }\u000a  return (_Bool)bVar3;\u000a}\u000a\u000a
p2544
S'MOV RCX,RSI\nMOV AL,0x1\nTEST RCX,RCX\nJZ 0x004084bc\nDEC RCX\nMOV RSI,RDI\nCMP byte ptr [RSI],0x0\nJNZ 0x004084bd\nTEST RCX,RCX\nJZ 0x004084bc\nINC RSI\nMOV EDX,ECX\nDEC RCX\nTEST DL,0xf\nJNZ 0x00408490\nPUSH RAX\nINC RCX\nMOV RDX,RCX\nCALL 0x004025f0\nTEST EAX,EAX\nSETZ AL\nADD RSP,0x8\nRET\nXOR EAX,EAX\nRET\n'
p2545
S'48 89 f1\nb0 01\n48 85 c9\n74 32\n48 ff c9\n48 89 fe\n80 3e 00\n75 28\n48 85 c9\n74 22\n48 ff c6\n89 ca\n48 ff c9\nf6 c2 0f\n75 e9\n50\n48 ff c1\n48 89 ca\ne8 3d a1 ff ff\n85 c0\n0f 94 c0\n48 83 c4 08\nc3\n31 c0\nc3\n'
p2546
S'.text:0000000000408480\n.text:0000000000408483\n.text:0000000000408485\n.text:0000000000408488\n.text:000000000040848a\n.text:000000000040848d\n.text:0000000000408490\n.text:0000000000408493\n.text:0000000000408495\n.text:0000000000408498\n.text:000000000040849a\n.text:000000000040849d\n.text:000000000040849f\n.text:00000000004084a2\n.text:00000000004084a5\n.text:00000000004084a7\n.text:00000000004084a8\n.text:00000000004084ab\n.text:00000000004084ae\n.text:00000000004084b3\n.text:00000000004084b5\n.text:00000000004084b8\n.text:00000000004084bc\n.text:00000000004084bd\n.text:00000000004084bf\n'
p2547
tp2548
sS'savewd_delegating'
p2549
(S'\n__stdcall savewd_delegating(savewd * wd)\n'
p2550
V\u000a_Bool savewd_delegating(savewd *wd)\u000a\u000a{\u000a  if (wd->state == FORKING_STATE) {\u000a    return (_Bool)(0 < (int)wd->val);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p2551
S'CMP dword ptr [RDI],0x3\nJNZ 0x0040d4ed\nCMP dword ptr [RDI + 0x4],0x0\nSETG AL\nRET\nXOR EAX,EAX\nRET\n'
p2552
S'83 3f 03\n75 08\n83 7f 04 00\n0f 9f c0\nc3\n31 c0\nc3\n'
p2553
S'.text:000000000040d4e0\n.text:000000000040d4e3\n.text:000000000040d4e5\n.text:000000000040d4e9\n.text:000000000040d4ec\n.text:000000000040d4ed\n.text:000000000040d4ef\n'
p2554
tp2555
sS'argmatch_invalid'
p2556
(S'\n__stdcall argmatch_invalid(char * context, char * value, ptrdiff_t problem)\n'
p2557
V\u000avoid argmatch_invalid(char *context,char *value,ptrdiff_t problem)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  \u000a  pcVar2 = "ambiguous argument %s for %s";\u000a  if (problem == -1) {\u000a    pcVar2 = "invalid argument %s for %s";\u000a  }\u000a  uVar1 = dcgettext(0,pcVar2,5);\u000a  pcVar2 = quotearg_n_style((char *)0x0);\u000a  pcVar3 = quote_n((char *)0x1);\u000a  error(0,0,uVar1,pcVar2,pcVar3);\u000a  return;\u000a}\u000a\u000a
p2558
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R14,RDI\nCMP RDX,-0x1\nMOV EAX,0x413ed7\nMOV ESI,0x413ef2\nCMOVZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x8\nMOV RDX,R15\nCALL 0x0040c3e0\nMOV R15,RAX\nMOV EDI,0x1\nMOV RSI,R14\nCALL 0x0040c6d0\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R12\nMOV RCX,R15\nMOV R8,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402870\n'
p2559
S'41 57\n41 56\n41 54\n53\n50\n49 89 f7\n49 89 fe\n48 83 fa ff\nb8 d7 3e 41 00\nbe f2 3e 41 00\n48 0f 44 f0\n31 ff\nba 05 00 00 00\ne8 44 2d ff ff\n49 89 c4\n31 ff\nbe 08 00 00 00\n4c 89 fa\ne8 f2 cc ff ff\n49 89 c7\nbf 01 00 00 00\n4c 89 f6\ne8 d2 cf ff ff\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 e2\n4c 89 f9\n49 89 d8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 50 31 ff ff\n'
p2560
S'.text:000000000040f6b0\n.text:000000000040f6b2\n.text:000000000040f6b4\n.text:000000000040f6b6\n.text:000000000040f6b7\n.text:000000000040f6b8\n.text:000000000040f6bb\n.text:000000000040f6be\n.text:000000000040f6c2\n.text:000000000040f6c7\n.text:000000000040f6cc\n.text:000000000040f6d0\n.text:000000000040f6d2\n.text:000000000040f6d7\n.text:000000000040f6dc\n.text:000000000040f6df\n.text:000000000040f6e1\n.text:000000000040f6e6\n.text:000000000040f6e9\n.text:000000000040f6ee\n.text:000000000040f6f1\n.text:000000000040f6f6\n.text:000000000040f6f9\n.text:000000000040f6fe\n.text:000000000040f701\n.text:000000000040f703\n.text:000000000040f705\n.text:000000000040f707\n.text:000000000040f70a\n.text:000000000040f70d\n.text:000000000040f710\n.text:000000000040f714\n.text:000000000040f715\n.text:000000000040f717\n.text:000000000040f719\n.text:000000000040f71b\n'
p2561
tp2562
sS'c_tolower'
p2563
(S'\n__stdcall c_tolower()\n'
p2564
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p2565
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p2566
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p2567
S'.text:000000000040fb00\n.text:000000000040fb03\n.text:000000000040fb06\n.text:000000000040fb09\n.text:000000000040fb0c\n'
p2568
tp2569
sS'savewd_restore'
p2570
(S'\n__stdcall savewd_restore(savewd * wd)\n'
p2571
V\u000aint savewd_restore(savewd *wd)\u000a\u000a{\u000a  __pid_t __pid;\u000a  int iVar1;\u000a  __pid_t _Var2;\u000a  int *piVar3;\u000a  uint uVar4;\u000a  int __status;\u000a  uint local_1c;\u000a  \u000a  if (ERROR_STATE < wd->state) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0","lib/savewd.c",0xda,"int savewd_restore(struct savewd *, int)");\u000a  }\u000a  uVar4 = 0;\u000a  switch(wd->state) {\u000a  case FD_POST_CHDIR_STATE:\u000a    iVar1 = fchdir(wd->val);\u000a    if (iVar1 == 0) {\u000a      wd->state = FD_STATE;\u000a      return 0;\u000a    }\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(wd->val);\u000a    wd->state = ERROR_STATE;\u000a    wd->val = iVar1;\u000a  case ERROR_STATE:\u000a    iVar1 = wd->val;\u000a    piVar3 = __errno_location();\u000a    *piVar3 = iVar1;\u000a    uVar4 = 0xffffffff;\u000a    break;\u000a  case FORKING_STATE:\u000a    __pid = wd->val;\u000a    if (__pid == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(__status);\u000a    }\u000a    if (0 < __pid) {\u000a      while (_Var2 = waitpid(__pid,(int *)&local_1c,0), _Var2 < 0) {\u000a        piVar3 = __errno_location();\u000a        if (*piVar3 != 4) {\u000a                    /* WARNING: Subroutine does not return */\u000a          __assert_fail("(*__errno_location ()) == 4","lib/savewd.c",0xd0,\u000a                        "int savewd_restore(struct savewd *, int)");\u000a        }\u000a      }\u000a      wd->val = 0xffffffff;\u000a      if ((local_1c & 0x7f) != 0) {\u000a        raise(local_1c & 0x7f);\u000a      }\u000a      uVar4 = local_1c >> 8 & 0xff;\u000a    }\u000a  }\u000a  return (int)uVar4;\u000a}\u000a\u000a
p2572
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV R14,RDI\nMOV EAX,dword ptr [R14]\nCMP RAX,0x4\nJA 0x0040d314\nXOR EBP,EBP\nJMP qword ptr [0x4137e0 + RAX*0x8]\nMOV EDI,dword ptr [R14 + 0x4]\nCALL 0x004027e0\nTEST EAX,EAX\nJZ 0x0040d302\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nMOV EDI,dword ptr [R14 + 0x4]\nCALL 0x00402590\nMOV dword ptr [R14],0x4\nMOV dword ptr [R14 + 0x4],EBX\nMOV EBX,dword ptr [R14 + 0x4]\nCALL 0x004022e0\nMOV dword ptr [RAX],EBX\nMOV EBP,0xffffffff\nJMP 0x0040d309\nMOV EBX,dword ptr [R14 + 0x4]\nTEST EBX,EBX\nJZ 0x0040d32d\nJLE 0x0040d309\nLEA RBP,[RSP + 0xc]\nNOP word ptr CS:[RAX + RAX*0x1]\nXOR EDX,EDX\nMOV EDI,EBX\nMOV RSI,RBP\nCALL 0x00402890\nTEST EAX,EAX\nJNS 0x0040d2e3\nCALL 0x004022e0\nCMP dword ptr [RAX],0x4\nJZ 0x0040d2b0\nMOV EDI,0x41388c\nMOV ESI,0x413843\nMOV EDX,0xd0\nMOV ECX,0x4138a8\nCALL 0x00402520\nMOV dword ptr [R14 + 0x4],0xffffffff\nMOV EDI,dword ptr [RSP + 0xc]\nAND EDI,0x7f\nJZ 0x0040d2f9\nCALL 0x00402280\nMOV EAX,dword ptr [RSP + 0xc]\nMOVZX EBP,AH\nJMP 0x0040d309\nMOV dword ptr [R14],0x1\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP RBP\nRET\nMOV EDI,0x4138e1\nMOV ESI,0x413843\nMOV EDX,0xda\nMOV ECX,0x4138a8\nCALL 0x00402520\nMOV EDI,ESI\nCALL 0x00402310\n'
p2573
S'55\n41 56\n53\n48 83 ec 10\n49 89 fe\n41 8b 06\n48 83 f8 04\n0f 87 cc 00 00 00\n31 ed\nff 24 c5 e0 37 41 00\n41 8b 7e 04\ne8 86 55 ff ff\n85 c0\n0f 84 a0 00 00 00\ne8 79 50 ff ff\n8b 18\n41 8b 7e 04\ne8 1e 53 ff ff\n41 c7 06 04 00 00 00\n41 89 5e 04\n41 8b 5e 04\ne8 5a 50 ff ff\n89 18\nbd ff ff ff ff\neb 7a\n41 8b 5e 04\n85 db\n0f 84 92 00 00 00\n7e 6c\n48 8d 6c 24 0c\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n31 d2\n89 df\n48 89 ee\ne8 d4 55 ff ff\n85 c0\n79 23\ne8 1b 50 ff ff\n83 38 04\n74 e6\nbf 8c 38 41 00\nbe 43 38 41 00\nba d0 00 00 00\nb9 a8 38 41 00\ne8 3d 52 ff ff\n41 c7 46 04 ff ff ff ff\n8b 7c 24 0c\n83 e7 7f\n74 05\ne8 87 4f ff ff\n8b 44 24 0c\n0f b6 ec\neb 07\n41 c7 06 01 00 00 00\n89 e8\n48 83 c4 10\n5b\n41 5e\n5d\nc3\nbf e1 38 41 00\nbe 43 38 41 00\nba da 00 00 00\nb9 a8 38 41 00\ne8 f3 51 ff ff\n89 f7\ne8 dc 4f ff ff\n'
p2574
S'.text:000000000040d230\n.text:000000000040d231\n.text:000000000040d233\n.text:000000000040d234\n.text:000000000040d238\n.text:000000000040d23b\n.text:000000000040d23e\n.text:000000000040d242\n.text:000000000040d248\n.text:000000000040d24a\n.text:000000000040d251\n.text:000000000040d255\n.text:000000000040d25a\n.text:000000000040d25c\n.text:000000000040d262\n.text:000000000040d267\n.text:000000000040d269\n.text:000000000040d26d\n.text:000000000040d272\n.text:000000000040d279\n.text:000000000040d27d\n.text:000000000040d281\n.text:000000000040d286\n.text:000000000040d288\n.text:000000000040d28d\n.text:000000000040d28f\n.text:000000000040d293\n.text:000000000040d295\n.text:000000000040d29b\n.text:000000000040d29d\n.text:000000000040d2a2\n.text:000000000040d2b0\n.text:000000000040d2b2\n.text:000000000040d2b4\n.text:000000000040d2b7\n.text:000000000040d2bc\n.text:000000000040d2be\n.text:000000000040d2c0\n.text:000000000040d2c5\n.text:000000000040d2c8\n.text:000000000040d2ca\n.text:000000000040d2cf\n.text:000000000040d2d4\n.text:000000000040d2d9\n.text:000000000040d2de\n.text:000000000040d2e3\n.text:000000000040d2eb\n.text:000000000040d2ef\n.text:000000000040d2f2\n.text:000000000040d2f4\n.text:000000000040d2f9\n.text:000000000040d2fd\n.text:000000000040d300\n.text:000000000040d302\n.text:000000000040d309\n.text:000000000040d30b\n.text:000000000040d30f\n.text:000000000040d310\n.text:000000000040d312\n.text:000000000040d313\n.text:000000000040d314\n.text:000000000040d319\n.text:000000000040d31e\n.text:000000000040d323\n.text:000000000040d328\n.text:000000000040d32d\n.text:000000000040d32f\n'
p2575
tp2576
sS'getopt_long'
p2577
(S'\n__stdcall getopt_long()\n'
p2578
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_00618130)();\u000a  return;\u000a}\u000a\u000a
p2579
S'JMP qword ptr [0x00618130]\n'
p2580
S'ff 25 9a 5c 21 00\n'
p2581
S'.plt:0000000000402490\n'
p2582
tp2583
sS'areadlink_with_size'
p2584
(S'\n__stdcall areadlink_with_size(char * file, size_t size)\n'
p2585
V\u000achar * areadlink_with_size(char *file,size_t size)\u000a\u000a{\u000a  int iVar1;\u000a  char *__buf;\u000a  ulong uVar2;\u000a  int *piVar3;\u000a  ulong __size;\u000a  bool bVar4;\u000a  \u000a  __size = 0x401;\u000a  if (size < 0x401) {\u000a    __size = size + 1;\u000a  }\u000a  while( true ) {\u000a    __buf = (char *)malloc(__size);\u000a    if (__buf == (char *)0x0) {\u000a      return (char *)0x0;\u000a    }\u000a    uVar2 = readlink(file,__buf,__size);\u000a    if ((long)uVar2 < 0) {\u000a      piVar3 = __errno_location();\u000a      iVar1 = *piVar3;\u000a      if (iVar1 != 0x22) {\u000a        free(__buf);\u000a        *piVar3 = iVar1;\u000a        return (char *)0x0;\u000a      }\u000a    }\u000a    if (uVar2 < __size) break;\u000a    free(__buf);\u000a    if (__size >> 0x3e == 0) {\u000a      __size = __size * 2;\u000a    }\u000a    else {\u000a      bVar4 = 0x7ffffffffffffffe < __size;\u000a      __size = 0x7fffffffffffffff;\u000a      if (bVar4) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = 0xc;\u000a        return (char *)0x0;\u000a      }\u000a    }\u000a  }\u000a  __buf[uVar2] = 0;\u000a  return __buf;\u000a}\u000a\u000a
p2586
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCMP RSI,0x401\nLEA RAX,[RSI + 0x1]\nMOV EBX,0x401\nCMOVC RBX,RAX\nJMP 0x00408a53\nADD RBX,RBX\nMOV RDI,RBX\nCALL 0x00402760\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00408ad2\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x00402370\nMOV R12,RAX\nTEST R12,R12\nJNS 0x00408a8a\nCALL 0x004022e0\nMOV R13,RAX\nMOV EBP,dword ptr [R13]\nCMP EBP,0x22\nJNZ 0x00408ac6\nCMP R12,RBX\nJC 0x00408abf\nMOV RDI,R15\nCALL 0x00402290\nMOV RAX,RBX\nSHR RAX,0x3e\nJZ 0x00408a50\nMOV RAX,0x7fffffffffffffff\nCMP RBX,RAX\nMOV RBX,RAX\nJC 0x00408a53\nCALL 0x004022e0\nMOV dword ptr [RAX],0xc\nJMP 0x00408ad2\nMOV byte ptr [R15 + R12*0x1],0x0\nJMP 0x00408ad5\nMOV RDI,R15\nCALL 0x00402290\nMOV dword ptr [R13],EBP\nXOR R15D,R15D\nMOV RAX,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2587
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 fe\n48 81 fe 01 04 00 00\n48 8d 46 01\nbb 01 04 00 00\n48 0f 42 d8\neb 0f\n48 01 db\n48 89 df\ne8 05 9d ff ff\n49 89 c7\n4d 85 ff\n74 6f\n4c 89 f7\n4c 89 fe\n48 89 da\ne8 ff 98 ff ff\n49 89 c4\n4d 85 e4\n79 11\ne8 62 98 ff ff\n49 89 c5\n41 8b 6d 00\n83 fd 22\n75 3c\n49 39 dc\n72 30\n4c 89 ff\ne8 f9 97 ff ff\n48 89 d8\n48 c1 e8 3e\n74 b0\n48 b8 ff ff ff ff ff ff ff 7f\n48 39 c3\n48 89 c3\n72 a1\ne8 29 98 ff ff\nc7 00 0c 00 00 00\neb 13\n43 c6 04 27 00\neb 0f\n4c 89 ff\ne8 c2 97 ff ff\n41 89 6d 00\n45 31 ff\n4c 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2588
S'.text:0000000000408a20\n.text:0000000000408a21\n.text:0000000000408a23\n.text:0000000000408a25\n.text:0000000000408a27\n.text:0000000000408a29\n.text:0000000000408a2a\n.text:0000000000408a2b\n.text:0000000000408a2e\n.text:0000000000408a35\n.text:0000000000408a39\n.text:0000000000408a3e\n.text:0000000000408a42\n.text:0000000000408a50\n.text:0000000000408a53\n.text:0000000000408a56\n.text:0000000000408a5b\n.text:0000000000408a5e\n.text:0000000000408a61\n.text:0000000000408a63\n.text:0000000000408a66\n.text:0000000000408a69\n.text:0000000000408a6c\n.text:0000000000408a71\n.text:0000000000408a74\n.text:0000000000408a77\n.text:0000000000408a79\n.text:0000000000408a7e\n.text:0000000000408a81\n.text:0000000000408a85\n.text:0000000000408a88\n.text:0000000000408a8a\n.text:0000000000408a8d\n.text:0000000000408a8f\n.text:0000000000408a92\n.text:0000000000408a97\n.text:0000000000408a9a\n.text:0000000000408a9e\n.text:0000000000408aa0\n.text:0000000000408aaa\n.text:0000000000408aad\n.text:0000000000408ab0\n.text:0000000000408ab2\n.text:0000000000408ab7\n.text:0000000000408abd\n.text:0000000000408abf\n.text:0000000000408ac4\n.text:0000000000408ac6\n.text:0000000000408ac9\n.text:0000000000408ace\n.text:0000000000408ad2\n.text:0000000000408ad5\n.text:0000000000408ad8\n.text:0000000000408adc\n.text:0000000000408add\n.text:0000000000408adf\n.text:0000000000408ae1\n.text:0000000000408ae3\n.text:0000000000408ae5\n.text:0000000000408ae6\n'
p2589
tp2590
sS'quotearg_style'
p2591
(S'\n__stdcall quotearg_style(char * arg)\n'
p2592
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p2593
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x0040c3e0\n'
p2594
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p2595
S'.text:000000000040c4c0\n.text:000000000040c4c3\n.text:000000000040c4c5\n.text:000000000040c4c7\n.text:000000000040c4c9\n.text:000000000040c4cc\n'
p2596
tp2597
sS'endgrent'
p2598
(S'\n__stdcall endgrent()\n'
p2599
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid endgrent(void)\u000a\u000a{\u000a  (*(code *)PTR_endgrent_00618018)();\u000a  return;\u000a}\u000a\u000a
p2600
S'JMP qword ptr [0x00618018]\n'
p2601
S'ff 25 b2 5d 21 00\n'
p2602
S'.plt:0000000000402260\n'
p2603
tp2604
sS'is_ancestor'
p2605
(S'\n__stdcall is_ancestor(stat * sb, dir_list * ancestors)\n'
p2606
V\u000a_Bool is_ancestor(stat *sb,dir_list *ancestors)\u000a\u000a{\u000a  if (ancestors != (dir_list *)0x0) {\u000a    do {\u000a      if ((ancestors->ino == sb->st_ino) && (ancestors->dev == sb->st_dev)) {\u000a        return true;\u000a      }\u000a      ancestors = ancestors->parent;\u000a    } while (ancestors != (dir_list *)0x0);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p2607
S'TEST RSI,RSI\nJZ 0x004069b7\nMOV RAX,qword ptr [RDI + 0x8]\nNOP dword ptr [RAX]\nCMP qword ptr [RSI + 0x8],RAX\nJNZ 0x004069af\nMOV RCX,qword ptr [RSI + 0x10]\nCMP RCX,qword ptr [RDI]\nJZ 0x004069ba\nMOV RSI,qword ptr [RSI]\nTEST RSI,RSI\nJNZ 0x004069a0\nXOR EAX,EAX\nRET\nMOV AL,0x1\nRET\n'
p2608
S'48 85 f6\n74 22\n48 8b 47 08\n0f 1f 80 00 00 00 00\n48 39 46 08\n75 09\n48 8b 4e 10\n48 3b 0f\n74 0b\n48 8b 36\n48 85 f6\n75 e9\n31 c0\nc3\nb0 01\nc3\n'
p2609
S'.text:0000000000406990\n.text:0000000000406993\n.text:0000000000406995\n.text:0000000000406999\n.text:00000000004069a0\n.text:00000000004069a4\n.text:00000000004069a6\n.text:00000000004069aa\n.text:00000000004069ad\n.text:00000000004069af\n.text:00000000004069b2\n.text:00000000004069b5\n.text:00000000004069b7\n.text:00000000004069b9\n.text:00000000004069ba\n.text:00000000004069bc\n'
p2610
tp2611
sS'__argmatch_die'
p2612
(S'\n__stdcall __argmatch_die()\n'
p2613
V\u000avoid __argmatch_die(void)\u000a\u000a{\u000a  usage(1);\u000a  return;\u000a}\u000a\u000a
p2614
S'MOV EDI,0x1\nJMP 0x00402b00\n'
p2615
S'bf 01 00 00 00\ne9 56 35 ff ff\n'
p2616
S'.text:000000000040f5a0\n.text:000000000040f5a5\n'
p2617
tp2618
sS'emit_try_help'
p2619
(S'\n__stdcall emit_try_help()\n'
p2620
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p2621
S'PUSH RBX\nMOV RBX,qword ptr [0x006184e0]\nXOR EDI,EDI\nMOV ESI,0x411ddb\nMOV EDX,0x5\nCALL 0x00402420\nMOV RDX,RAX\nMOV RCX,qword ptr [0x0061a950]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402980\n'
p2622
S'53\n48 8b 1d 58 58 21 00\n31 ff\nbe db 1d 41 00\nba 05 00 00 00\ne8 87 f7 ff ff\n48 89 c2\n48 8b 0d ad 7c 21 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 cd fc ff ff\n'
p2623
S'.text:0000000000402c80\n.text:0000000000402c81\n.text:0000000000402c88\n.text:0000000000402c8a\n.text:0000000000402c8f\n.text:0000000000402c94\n.text:0000000000402c99\n.text:0000000000402c9c\n.text:0000000000402ca3\n.text:0000000000402ca8\n.text:0000000000402caa\n.text:0000000000402cad\n.text:0000000000402cae\n'
p2624
tp2625
sS'rename'
p2626
(S'\n__stdcall rename(char * __old, char * __new)\n'
p2627
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint rename(char *__old,char *__new)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_rename_00618358)();\u000a  return iVar1;\u000a}\u000a\u000a
p2628
S'JMP qword ptr [0x00618358]\n'
p2629
S'ff 25 72 5a 21 00\n'
p2630
S'.plt:00000000004028e0\n'
p2631
tp2632
sS'strrchr'
p2633
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p2634
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_00618158)();\u000a  return pcVar1;\u000a}\u000a\u000a
p2635
S'JMP qword ptr [0x00618158]\n'
p2636
S'ff 25 72 5c 21 00\n'
p2637
S'.plt:00000000004024e0\n'
p2638
tp2639
sS'quotearg_alloc_mem'
p2640
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p2641
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p2642
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x61a960\nCMOVNZ R12,RCX\nCALL 0x004022e0\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x0040b410\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x0040ea80\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x0040b410\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x0040c13a\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2643
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc 60 a9 61 00\n4c 0f 45 e1\ne8 48 62 ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 91 29 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2644
S'.text:000000000040c060\n.text:000000000040c061\n.text:000000000040c063\n.text:000000000040c065\n.text:000000000040c067\n.text:000000000040c069\n.text:000000000040c06a\n.text:000000000040c06e\n.text:000000000040c071\n.text:000000000040c076\n.text:000000000040c079\n.text:000000000040c07e\n.text:000000000040c081\n.text:000000000040c086\n.text:000000000040c089\n.text:000000000040c08f\n.text:000000000040c093\n.text:000000000040c098\n.text:000000000040c09d\n.text:000000000040c09f\n.text:000000000040c0a3\n.text:000000000040c0a5\n.text:000000000040c0a8\n.text:000000000040c0ac\n.text:000000000040c0b1\n.text:000000000040c0b5\n.text:000000000040c0ba\n.text:000000000040c0be\n.text:000000000040c0c0\n.text:000000000040c0c2\n.text:000000000040c0c5\n.text:000000000040c0c8\n.text:000000000040c0cb\n.text:000000000040c0d0\n.text:000000000040c0d5\n.text:000000000040c0d7\n.text:000000000040c0dc\n.text:000000000040c0e0\n.text:000000000040c0e3\n.text:000000000040c0e7\n.text:000000000040c0ea\n.text:000000000040c0ef\n.text:000000000040c0f2\n.text:000000000040c0f6\n.text:000000000040c0fa\n.text:000000000040c0fd\n.text:000000000040c100\n.text:000000000040c105\n.text:000000000040c10a\n.text:000000000040c10d\n.text:000000000040c112\n.text:000000000040c117\n.text:000000000040c119\n.text:000000000040c11e\n.text:000000000040c123\n.text:000000000040c127\n.text:000000000040c12a\n.text:000000000040c12e\n.text:000000000040c133\n.text:000000000040c135\n.text:000000000040c137\n.text:000000000040c13a\n.text:000000000040c13d\n.text:000000000040c141\n.text:000000000040c142\n.text:000000000040c144\n.text:000000000040c146\n.text:000000000040c148\n.text:000000000040c14a\n.text:000000000040c14b\n'
p2645
tp2646
sS'valid_options'
p2647
(S'\n__stdcall valid_options()\n'
p2648
V\u000a_Bool valid_options(void)\u000a\u000a{\u000a  undefined in_AL;\u000a  uint *in_RDI;\u000a  \u000a  if (in_RDI == (uint *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("co != NULL","src/copy.c",0xb50,"_Bool valid_options(const struct cp_options *)");\u000a  }\u000a  if (3 < *in_RDI) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("VALID_BACKUP_TYPE (co->backup_type)","src/copy.c",0xb51,\u000a                  "_Bool valid_options(const struct cp_options *)");\u000a  }\u000a  if (2 < in_RDI[3] - 1) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("VALID_SPARSE_MODE (co->sparse_mode)","src/copy.c",0xb52,\u000a                  "_Bool valid_options(const struct cp_options *)");\u000a  }\u000a  if (in_RDI[0xc] < 3) {\u000a    if ((*(char *)((long)in_RDI + 0x17) != 0) && (*(char *)((long)in_RDI + 0x2b) != 0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("!(co->hard_link && co->symbolic_link)","src/copy.c",0xb54,\u000a                    "_Bool valid_options(const struct cp_options *)");\u000a    }\u000a    if ((in_RDI[0xc] == 2) && (in_RDI[3] != 2)) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)",\u000a                    "src/copy.c",0xb57,"_Bool valid_options(const struct cp_options *)");\u000a    }\u000a    return (_Bool)in_AL;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __assert_fail("VALID_REFLINK_MODE (co->reflink_mode)","src/copy.c",0xb53,\u000a                "_Bool valid_options(const struct cp_options *)");\u000a}\u000a\u000a
p2649
S'PUSH RAX\nTEST RDI,RDI\nJZ 0x004043b5\nCMP dword ptr [RDI],0x4\nJNC 0x004043ce\nMOV EAX,dword ptr [RDI + 0xc]\nDEC EAX\nCMP EAX,0x3\nJNC 0x004043e7\nCMP dword ptr [RDI + 0x30],0x3\nJNC 0x00404400\nCMP byte ptr [RDI + 0x17],0x0\nJZ 0x004043a7\nCMP byte ptr [RDI + 0x2b],0x0\nJNZ 0x00404419\nCMP dword ptr [RDI + 0x30],0x2\nJNZ 0x004043b3\nCMP dword ptr [RDI + 0xc],0x2\nJNZ 0x00404432\nPOP RAX\nRET\nMOV EDI,0x41219b\nMOV ESI,0x412190\nMOV EDX,0xb50\nMOV ECX,0x4121a6\nCALL 0x00402520\nMOV EDI,0x4121d5\nMOV ESI,0x412190\nMOV EDX,0xb51\nMOV ECX,0x4121a6\nCALL 0x00402520\nMOV EDI,0x4121f9\nMOV ESI,0x412190\nMOV EDX,0xb52\nMOV ECX,0x4121a6\nCALL 0x00402520\nMOV EDI,0x41221d\nMOV ESI,0x412190\nMOV EDX,0xb53\nMOV ECX,0x4121a6\nCALL 0x00402520\nMOV EDI,0x412243\nMOV ESI,0x412190\nMOV EDX,0xb54\nMOV ECX,0x4121a6\nCALL 0x00402520\nMOV EDI,0x412269\nMOV ESI,0x412190\nMOV EDX,0xb57\nMOV ECX,0x4121a6\nCALL 0x00402520\n'
p2650
S'50\n48 85 ff\n74 2f\n83 3f 04\n73 43\n8b 47 0c\nff c8\n83 f8 03\n73 52\n83 7f 30 03\n73 65\n80 7f 17 00\n74 06\n80 7f 2b 00\n75 72\n83 7f 30 02\n75 06\n83 7f 0c 02\n75 7f\n58\nc3\nbf 9b 21 41 00\nbe 90 21 41 00\nba 50 0b 00 00\nb9 a6 21 41 00\ne8 52 e1 ff ff\nbf d5 21 41 00\nbe 90 21 41 00\nba 51 0b 00 00\nb9 a6 21 41 00\ne8 39 e1 ff ff\nbf f9 21 41 00\nbe 90 21 41 00\nba 52 0b 00 00\nb9 a6 21 41 00\ne8 20 e1 ff ff\nbf 1d 22 41 00\nbe 90 21 41 00\nba 53 0b 00 00\nb9 a6 21 41 00\ne8 07 e1 ff ff\nbf 43 22 41 00\nbe 90 21 41 00\nba 54 0b 00 00\nb9 a6 21 41 00\ne8 ee e0 ff ff\nbf 69 22 41 00\nbe 90 21 41 00\nba 57 0b 00 00\nb9 a6 21 41 00\ne8 d5 e0 ff ff\n'
p2651
S'.text:0000000000404380\n.text:0000000000404381\n.text:0000000000404384\n.text:0000000000404386\n.text:0000000000404389\n.text:000000000040438b\n.text:000000000040438e\n.text:0000000000404390\n.text:0000000000404393\n.text:0000000000404395\n.text:0000000000404399\n.text:000000000040439b\n.text:000000000040439f\n.text:00000000004043a1\n.text:00000000004043a5\n.text:00000000004043a7\n.text:00000000004043ab\n.text:00000000004043ad\n.text:00000000004043b1\n.text:00000000004043b3\n.text:00000000004043b4\n.text:00000000004043b5\n.text:00000000004043ba\n.text:00000000004043bf\n.text:00000000004043c4\n.text:00000000004043c9\n.text:00000000004043ce\n.text:00000000004043d3\n.text:00000000004043d8\n.text:00000000004043dd\n.text:00000000004043e2\n.text:00000000004043e7\n.text:00000000004043ec\n.text:00000000004043f1\n.text:00000000004043f6\n.text:00000000004043fb\n.text:0000000000404400\n.text:0000000000404405\n.text:000000000040440a\n.text:000000000040440f\n.text:0000000000404414\n.text:0000000000404419\n.text:000000000040441e\n.text:0000000000404423\n.text:0000000000404428\n.text:000000000040442d\n.text:0000000000404432\n.text:0000000000404437\n.text:000000000040443c\n.text:0000000000404441\n.text:0000000000404446\n'
p2652
tp2653
sS'__sprintf_chk'
p2654
(S'\n__stdcall __sprintf_chk()\n'
p2655
V\u000avoid __sprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___sprintf_chk_006183e0)();\u000a  return;\u000a}\u000a\u000a
p2656
S'JMP qword ptr [0x006183e0]\n'
p2657
S'ff 25 ea 59 21 00\n'
p2658
S'.plt:00000000004029f0\n'
p2659
tp2660
sS'mkfifo'
p2661
(S'\n__stdcall mkfifo(char * __path, __mode_t __mode)\n'
p2662
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mkfifo(char *__path,__mode_t __mode)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mkfifo_00618240)();\u000a  return iVar1;\u000a}\u000a\u000a
p2663
S'JMP qword ptr [0x00618240]\n'
p2664
S'ff 25 8a 5b 21 00\n'
p2665
S'.plt:00000000004026b0\n'
p2666
tp2667
sS'__freading'
p2668
(S'\n__stdcall __freading()\n'
p2669
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_006182d0)();\u000a  return;\u000a}\u000a\u000a
p2670
S'JMP qword ptr [0x006182d0]\n'
p2671
S'ff 25 fa 5a 21 00\n'
p2672
S'.plt:00000000004027d0\n'
p2673
tp2674
sS'clone_file'
p2675
(S'\n__stdcall clone_file()\n'
p2676
V\u000aint clone_file(void)\u000a\u000a{\u000a  int iVar1;\u000a  ulong in_RSI;\u000a  int __fd;\u000a  \u000a  iVar1 = ioctl(__fd,0x40049409,in_RSI & 0xffffffff,in_RSI & 0xffffffff);\u000a  return iVar1;\u000a}\u000a\u000a
p2677
S'MOV ECX,ESI\nMOV ESI,0x40049409\nXOR EAX,EAX\nMOV EDX,ECX\nJMP 0x00402560\n'
p2678
S'89 f1\nbe 09 94 04 40\n31 c0\n89 ca\ne9 30 ab ff ff\n'
p2679
S'.text:0000000000407a20\n.text:0000000000407a22\n.text:0000000000407a27\n.text:0000000000407a29\n.text:0000000000407a2b\n'
p2680
tp2681
sS'prog_fprintf'
p2682
(S'\n__stdcall prog_fprintf(FILE * fp, char * fmt)\n'
p2683
V\u000avoid prog_fprintf(FILE *fp,char *fmt,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_RCX;\u000a  undefined8 in_RDX;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list ap;\u000a  undefined4 local_e8;\u000a  undefined4 local_e4;\u000a  void **local_e0;\u000a  undefined *local_d8;\u000a  undefined local_c8 [16];\u000a  undefined8 local_b8;\u000a  undefined8 local_b0;\u000a  undefined8 local_a8;\u000a  undefined8 local_a0;\u000a  undefined4 local_98;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  \u000a  if (in_AL != 0) {\u000a    local_98 = in_XMM0_Da;\u000a    local_88 = in_XMM1_Da;\u000a    local_78 = in_XMM2_Da;\u000a    local_68 = in_XMM3_Da;\u000a    local_58 = in_XMM4_Da;\u000a    local_48 = in_XMM5_Da;\u000a    local_38 = in_XMM6_Da;\u000a    local_28 = in_XMM7_Da;\u000a  }\u000a  local_b8 = in_RDX;\u000a  local_b0 = in_RCX;\u000a  local_a8 = in_R8;\u000a  local_a0 = in_R9;\u000a  fputs_unlocked(program_name,(FILE *)fp);\u000a  fputs_unlocked(": ",(FILE *)fp);\u000a  local_d8 = local_c8;\u000a  local_e0 = &ap[0].overflow_arg_area;\u000a  local_e4 = 0x30;\u000a  local_e8 = 0x10;\u000a  __vfprintf_chk(fp,1,fmt,&local_e8);\u000a  fputc_unlocked(10,(FILE *)fp);\u000a  return;\u000a}\u000a\u000a
p2684
S'PUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14,RSI\nMOV RBX,RDI\nTEST AL,AL\nJZ 0x0040424b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nMOV RDI,qword ptr [0x0061a950]\nMOV RSI,RBX\nCALL 0x00402610\nMOV EDI,0x41212d\nMOV RSI,RBX\nCALL 0x00402610\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xf0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOV RCX,RSP\nMOV ESI,0x1\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x004022b0\nMOV EDI,0xa\nMOV RSI,RBX\nCALL 0x00402680\nADD RSP,0xd8\nPOP RBX\nPOP R14\nRET\n'
p2685
S'41 56\n53\n48 81 ec d8 00 00 00\n49 89 f6\n48 89 fb\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8b 3d ea 66 21 00\n48 89 de\ne8 a2 e3 ff ff\nbf 2d 21 41 00\n48 89 de\ne8 95 e3 ff ff\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 f0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 89 e1\nbe 01 00 00 00\n48 89 df\n4c 89 f2\ne8 fc df ff ff\nbf 0a 00 00 00\n48 89 de\ne8 bf e3 ff ff\n48 81 c4 d8 00 00 00\n5b\n41 5e\nc3\n'
p2686
S'.text:0000000000404200\n.text:0000000000404202\n.text:0000000000404203\n.text:000000000040420a\n.text:000000000040420d\n.text:0000000000404210\n.text:0000000000404212\n.text:0000000000404214\n.text:0000000000404219\n.text:000000000040421e\n.text:0000000000404223\n.text:000000000040422b\n.text:0000000000404233\n.text:000000000040423b\n.text:0000000000404243\n.text:000000000040424b\n.text:0000000000404250\n.text:0000000000404255\n.text:000000000040425a\n.text:000000000040425f\n.text:0000000000404266\n.text:0000000000404269\n.text:000000000040426e\n.text:0000000000404273\n.text:0000000000404276\n.text:000000000040427b\n.text:0000000000404280\n.text:0000000000404285\n.text:000000000040428d\n.text:0000000000404292\n.text:000000000040429a\n.text:00000000004042a1\n.text:00000000004042a4\n.text:00000000004042a9\n.text:00000000004042ac\n.text:00000000004042af\n.text:00000000004042b4\n.text:00000000004042b9\n.text:00000000004042bc\n.text:00000000004042c1\n.text:00000000004042c8\n.text:00000000004042c9\n.text:00000000004042cb\n'
p2687
tp2688
sS'fputs_unlocked'
p2689
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p2690
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_006181f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p2691
S'JMP qword ptr [0x006181f0]\n'
p2692
S'ff 25 da 5b 21 00\n'
p2693
S'.plt:0000000000402610\n'
p2694
tp2695
sS'xcharalloc'
p2696
(S'\n__stdcall xcharalloc(size_t n)\n'
p2697
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p2698
S'JMP 0x0040e9b0\n'
p2699
S'e9 2b ff ff ff\n'
p2700
S'.text:000000000040ea80\n'
p2701
tp2702
sS'c_isalnum'
p2703
(S'\n__stdcall c_isalnum()\n'
p2704
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p2705
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x0040f9eb\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x0040f9eb\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x0040f9ea\nXOR EAX,EAX\nRET\n'
p2706
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p2707
S'.text:000000000040f9d0\n.text:000000000040f9d2\n.text:000000000040f9d5\n.text:000000000040f9d8\n.text:000000000040f9da\n.text:000000000040f9e4\n.text:000000000040f9e8\n.text:000000000040f9ea\n.text:000000000040f9eb\n.text:000000000040f9ee\n.text:000000000040f9f1\n.text:000000000040f9f3\n.text:000000000040f9f5\n'
p2708
tp2709
sS'dev_info_compare'
p2710
(S'\n__stdcall dev_info_compare(void * x, void * y)\n'
p2711
V\u000a_Bool dev_info_compare(void *x,void *y)\u000a\u000a{\u000a  return (_Bool)(*(long *)x == *(long *)y);\u000a}\u000a\u000a
p2712
S'MOV RAX,qword ptr [RDI]\nCMP RAX,qword ptr [RSI]\nSETZ AL\nRET\n'
p2713
S'48 8b 07\n48 3b 06\n0f 94 c0\nc3\n'
p2714
S'.text:000000000040dd70\n.text:000000000040dd73\n.text:000000000040dd76\n.text:000000000040dd79\n'
p2715
tp2716
sS'freecon'
p2717
(S'\n__stdcall freecon(security_context_t con)\n'
p2718
V\u000avoid freecon(security_context_t con)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p2719
S'RET\n'
p2720
S'c3\n'
p2721
S'.text:000000000040d510\n'
p2722
tp2723
sS'__errno_location'
p2724
(S'\n__stdcall __errno_location()\n'
p2725
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00618058)();\u000a  return piVar1;\u000a}\u000a\u000a
p2726
S'JMP qword ptr [0x00618058]\n'
p2727
S'ff 25 72 5d 21 00\n'
p2728
S'.plt:00000000004022e0\n'
p2729
tp2730
sS'x2nrealloc'
p2731
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p2732
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p2733
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x0040ea4c\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x0040ea79\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x0040ea6a\nTEST RCX,RCX\nJNZ 0x0040ea6a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x0040e9f0\nPUSH RAX\nCALL 0x0040eb40\n'
p2734
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p2735
S'.text:000000000040ea20\n.text:000000000040ea23\n.text:000000000040ea26\n.text:000000000040ea29\n.text:000000000040ea2b\n.text:000000000040ea35\n.text:000000000040ea37\n.text:000000000040ea3a\n.text:000000000040ea3d\n.text:000000000040ea3f\n.text:000000000040ea42\n.text:000000000040ea45\n.text:000000000040ea4a\n.text:000000000040ea4c\n.text:000000000040ea4f\n.text:000000000040ea51\n.text:000000000040ea56\n.text:000000000040ea58\n.text:000000000040ea5b\n.text:000000000040ea5d\n.text:000000000040ea64\n.text:000000000040ea67\n.text:000000000040ea6a\n.text:000000000040ea6d\n.text:000000000040ea71\n.text:000000000040ea74\n.text:000000000040ea79\n.text:000000000040ea7a\n'
p2736
tp2737
sS'safe_read'
p2738
(S'\n__stdcall safe_read(void * buf, size_t count)\n'
p2739
V\u000asize_t safe_read(void *buf,size_t count)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  size_t sVar3;\u000a  int *piVar4;\u000a  ulong __nbytes;\u000a  size_t unaff_R14;\u000a  \u000a  while( true ) {\u000a    do {\u000a      sVar3 = read((int)buf,(void *)count,__nbytes);\u000a      if (-1 < (long)sVar3) {\u000a        return sVar3;\u000a      }\u000a      piVar4 = __errno_location();\u000a      iVar1 = *piVar4;\u000a    } while (iVar1 == 4);\u000a    uVar2 = __nbytes;\u000a    if (0x7fffe000 < __nbytes && iVar1 == 0x16) {\u000a      sVar3 = unaff_R14;\u000a      uVar2 = 0x7fffe000;\u000a    }\u000a    if (__nbytes < 0x7fffe001) break;\u000a    __nbytes = uVar2;\u000a    unaff_R14 = sVar3;\u000a    if (iVar1 != 0x16) {\u000a      return sVar3;\u000a    }\u000a  }\u000a  return sVar3;\u000a}\u000a\u000a
p2740
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RDX\nMOV R15,RSI\nMOV R12D,EDI\nMOV R13D,0x7fffe000\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,R12D\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x004025e0\nMOV RBP,RAX\nTEST RBP,RBP\nJNS 0x0040cb64\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x4\nJZ 0x0040cb10\nCMP EAX,0x16\nSETZ CL\nCMP RBX,0x7fffe000\nSETA DL\nAND DL,CL\nMOV RCX,RBX\nCMOVNZ RCX,R13\nTEST DL,DL\nCMOVZ R14,RBP\nCMP RBX,0x7fffe001\nJC 0x0040cb67\nCMP EAX,0x16\nMOV RBX,RCX\nJZ 0x0040cb10\nJMP 0x0040cb67\nMOV R14,RBP\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2741
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 d3\n49 89 f7\n41 89 fc\n41 bd 00 e0 ff 7f\n66 0f 1f 44 00 00\n44 89 e7\n4c 89 fe\n48 89 da\ne8 c2 5a ff ff\n48 89 c5\n48 85 ed\n79 3e\ne8 b5 57 ff ff\n8b 00\n83 f8 04\n74 de\n83 f8 16\n0f 94 c1\n48 81 fb 00 e0 ff 7f\n0f 97 c2\n20 ca\n48 89 d9\n49 0f 45 cd\n84 d2\n4c 0f 44 f5\n48 81 fb 01 e0 ff 7f\n72 0d\n83 f8 16\n48 89 cb\n74 ae\neb 03\n49 89 ee\n4c 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2742
S'.text:000000000040caf0\n.text:000000000040caf1\n.text:000000000040caf3\n.text:000000000040caf5\n.text:000000000040caf7\n.text:000000000040caf9\n.text:000000000040cafa\n.text:000000000040cafb\n.text:000000000040cafe\n.text:000000000040cb01\n.text:000000000040cb04\n.text:000000000040cb0a\n.text:000000000040cb10\n.text:000000000040cb13\n.text:000000000040cb16\n.text:000000000040cb19\n.text:000000000040cb1e\n.text:000000000040cb21\n.text:000000000040cb24\n.text:000000000040cb26\n.text:000000000040cb2b\n.text:000000000040cb2d\n.text:000000000040cb30\n.text:000000000040cb32\n.text:000000000040cb35\n.text:000000000040cb38\n.text:000000000040cb3f\n.text:000000000040cb42\n.text:000000000040cb44\n.text:000000000040cb47\n.text:000000000040cb4b\n.text:000000000040cb4d\n.text:000000000040cb51\n.text:000000000040cb58\n.text:000000000040cb5a\n.text:000000000040cb5d\n.text:000000000040cb60\n.text:000000000040cb62\n.text:000000000040cb64\n.text:000000000040cb67\n.text:000000000040cb6a\n.text:000000000040cb6e\n.text:000000000040cb6f\n.text:000000000040cb71\n.text:000000000040cb73\n.text:000000000040cb75\n.text:000000000040cb77\n.text:000000000040cb78\n'
p2743
tp2744
sS'quotearg_n_options'
p2745
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p2746
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p2747
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x004022e0\nTEST R12D,R12D\nJS 0x0040c3a1\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x00618428]\nCMP dword ptr [0x00618430],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x0040c2bb\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x618438\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x0040e9f0\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x00618428],R15\nJNZ 0x0040c282\nMOVUPS XMM0,xmmword ptr [0x00618438]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x00618430]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x00402530\nMOV dword ptr [0x00618430],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x0040b410\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x0040c31d\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x0040c38b\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x61a9a0\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x0040c348\nCALL 0x00402290\nMOV RDI,R15\nCALL 0x0040ea80\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x0040b410\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x004022d0\n'
p2748
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 d1 60 ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 fe c1 20 00\n44 39 25 ff c1 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 38 84 61 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 88 27 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d b3 c1 20 00\n75 0b\n0f 10 05 ba c1 20 00\n41 0f 11 07\n8b 05 a8 c1 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 8d 62 ff ff\n89 1d 87 c1 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 a0 a9 61 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 48 5f ff ff\n4c 89 ff\ne8 30 27 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 2a 5f ff ff\n'
p2749
S'.text:000000000040c1f0\n.text:000000000040c1f1\n.text:000000000040c1f3\n.text:000000000040c1f5\n.text:000000000040c1f7\n.text:000000000040c1f9\n.text:000000000040c1fa\n.text:000000000040c1fe\n.text:000000000040c201\n.text:000000000040c204\n.text:000000000040c207\n.text:000000000040c20a\n.text:000000000040c20f\n.text:000000000040c212\n.text:000000000040c218\n.text:000000000040c21d\n.text:000000000040c21f\n.text:000000000040c223\n.text:000000000040c22a\n.text:000000000040c231\n.text:000000000040c236\n.text:000000000040c23b\n.text:000000000040c240\n.text:000000000040c242\n.text:000000000040c247\n.text:000000000040c24a\n.text:000000000040c24d\n.text:000000000040c253\n.text:000000000040c255\n.text:000000000040c258\n.text:000000000040c25c\n.text:000000000040c25f\n.text:000000000040c263\n.text:000000000040c268\n.text:000000000040c26b\n.text:000000000040c26e\n.text:000000000040c275\n.text:000000000040c277\n.text:000000000040c27e\n.text:000000000040c282\n.text:000000000040c288\n.text:000000000040c28b\n.text:000000000040c28f\n.text:000000000040c292\n.text:000000000040c295\n.text:000000000040c299\n.text:000000000040c29b\n.text:000000000040c29e\n.text:000000000040c2a3\n.text:000000000040c2a9\n.text:000000000040c2ac\n.text:000000000040c2b1\n.text:000000000040c2b6\n.text:000000000040c2bb\n.text:000000000040c2be\n.text:000000000040c2c2\n.text:000000000040c2c6\n.text:000000000040c2cb\n.text:000000000040c2cf\n.text:000000000040c2d3\n.text:000000000040c2d7\n.text:000000000040c2db\n.text:000000000040c2df\n.text:000000000040c2e4\n.text:000000000040c2e7\n.text:000000000040c2ea\n.text:000000000040c2ed\n.text:000000000040c2f2\n.text:000000000040c2f5\n.text:000000000040c2f8\n.text:000000000040c2fb\n.text:000000000040c2fc\n.text:000000000040c301\n.text:000000000040c305\n.text:000000000040c308\n.text:000000000040c30b\n.text:000000000040c30d\n.text:000000000040c312\n.text:000000000040c316\n.text:000000000040c31b\n.text:000000000040c31d\n.text:000000000040c321\n.text:000000000040c326\n.text:000000000040c329\n.text:000000000040c32c\n.text:000000000040c331\n.text:000000000040c336\n.text:000000000040c339\n.text:000000000040c33e\n.text:000000000040c341\n.text:000000000040c343\n.text:000000000040c348\n.text:000000000040c34b\n.text:000000000040c350\n.text:000000000040c353\n.text:000000000040c356\n.text:000000000040c35b\n.text:000000000040c35e\n.text:000000000040c362\n.text:000000000040c365\n.text:000000000040c368\n.text:000000000040c36d\n.text:000000000040c372\n.text:000000000040c377\n.text:000000000040c37a\n.text:000000000040c37d\n.text:000000000040c37e\n.text:000000000040c383\n.text:000000000040c387\n.text:000000000040c38b\n.text:000000000040c38f\n.text:000000000040c392\n.text:000000000040c396\n.text:000000000040c397\n.text:000000000040c399\n.text:000000000040c39b\n.text:000000000040c39d\n.text:000000000040c39f\n.text:000000000040c3a0\n.text:000000000040c3a1\n'
p2750
tp2751
sS'strcmp'
p2752
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p2753
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00618210)();\u000a  return iVar1;\u000a}\u000a\u000a
p2754
S'JMP qword ptr [0x00618210]\n'
p2755
S'ff 25 ba 5b 21 00\n'
p2756
S'.plt:0000000000402650\n'
p2757
tp2758
sS'quotearg_custom_mem'
p2759
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p2760
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p2761
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x0040c600\n'
p2762
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p2763
S'.text:000000000040c690\n.text:000000000040c693\n.text:000000000040c696\n.text:000000000040c699\n.text:000000000040c69c\n.text:000000000040c69e\n.text:000000000040c6a1\n'
p2764
tp2765
sS'savewd_finish'
p2766
(S'\n__stdcall savewd_finish(savewd * wd)\n'
p2767
V\u000avoid savewd_finish(savewd *wd)\u000a\u000a{\u000a  switch(wd->state) {\u000a  case INITIAL_STATE:\u000a  case ERROR_STATE:\u000a    break;\u000a  case FD_STATE:\u000a  case FD_POST_CHDIR_STATE:\u000a    close(wd->val);\u000a    break;\u000a  case FORKING_STATE:\u000a    if (-1 < (int)wd->val) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("wd->val.child < 0","lib/savewd.c",0xef,"void savewd_finish(struct savewd *)");\u000a    }\u000a    break;\u000a  default:\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0","lib/savewd.c",0xf3,"void savewd_finish(struct savewd *)");\u000a  }\u000a  wd->state = FINAL_STATE;\u000a  return;\u000a}\u000a\u000a
p2768
S'PUSH RBX\nMOV RBX,RDI\nMOV EAX,dword ptr [RBX]\nCMP RAX,0x4\nJA 0x0040d36b\nJMP qword ptr [0x413808 + RAX*0x8]\nMOV EDI,dword ptr [RBX + 0x4]\nCALL 0x00402590\nJMP 0x0040d363\nCMP dword ptr [RBX + 0x4],0x0\nJNS 0x0040d384\nMOV dword ptr [RBX],0x5\nPOP RBX\nRET\nMOV EDI,0x4138e1\nMOV ESI,0x413843\nMOV EDX,0xf3\nMOV ECX,0x4138e3\nCALL 0x00402520\nMOV EDI,0x4138d1\nMOV ESI,0x413843\nMOV EDX,0xef\nMOV ECX,0x4138e3\nCALL 0x00402520\n'
p2769
S'53\n48 89 fb\n8b 03\n48 83 f8 04\n77 1f\nff 24 c5 08 38 41 00\n8b 7b 04\ne8 35 52 ff ff\neb 06\n83 7b 04 00\n79 21\nc7 03 05 00 00 00\n5b\nc3\nbf e1 38 41 00\nbe 43 38 41 00\nba f3 00 00 00\nb9 e3 38 41 00\ne8 9c 51 ff ff\nbf d1 38 41 00\nbe 43 38 41 00\nba ef 00 00 00\nb9 e3 38 41 00\ne8 83 51 ff ff\n'
p2770
S'.text:000000000040d340\n.text:000000000040d341\n.text:000000000040d344\n.text:000000000040d346\n.text:000000000040d34a\n.text:000000000040d34c\n.text:000000000040d353\n.text:000000000040d356\n.text:000000000040d35b\n.text:000000000040d35d\n.text:000000000040d361\n.text:000000000040d363\n.text:000000000040d369\n.text:000000000040d36a\n.text:000000000040d36b\n.text:000000000040d370\n.text:000000000040d375\n.text:000000000040d37a\n.text:000000000040d37f\n.text:000000000040d384\n.text:000000000040d389\n.text:000000000040d38e\n.text:000000000040d393\n.text:000000000040d398\n'
p2771
tp2772
sS'full_write'
p2773
(S'\n__stdcall full_write(void * buf, size_t count)\n'
p2774
V\u000asize_t full_write(void *buf,size_t count)\u000a\u000a{\u000a  size_t sVar1;\u000a  int *piVar2;\u000a  long in_RDX;\u000a  size_t sVar3;\u000a  \u000a  sVar3 = 0;\u000a  if (in_RDX != 0) {\u000a    do {\u000a      sVar1 = safe_write((void *)((ulong)buf & 0xffffffff),count);\u000a      if (sVar1 == 0xffffffffffffffff) {\u000a        return sVar3;\u000a      }\u000a      if (sVar1 == 0) {\u000a        piVar2 = __errno_location();\u000a        *piVar2 = 0x1c;\u000a        return sVar3;\u000a      }\u000a      sVar3 = sVar3 + sVar1;\u000a      count = count + sVar1;\u000a      in_RDX = in_RDX - sVar1;\u000a    } while (in_RDX != 0);\u000a  }\u000a  return sVar3;\u000a}\u000a\u000a
p2775
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV RBX,RSI\nMOV EBP,EDI\nXOR R14D,R14D\nTEST R15,R15\nJZ 0x00409830\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R15\nCALL 0x0040cb80\nCMP RAX,-0x1\nJZ 0x00409830\nTEST RAX,RAX\nJZ 0x00409825\nADD R14,RAX\nADD RBX,RAX\nSUB R15,RAX\nJNZ 0x00409800\nJMP 0x00409830\nCALL 0x004022e0\nMOV dword ptr [RAX],0x1c\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2776
S'55\n41 57\n41 56\n53\n50\n49 89 d7\n48 89 f3\n89 fd\n45 31 f6\n4d 85 ff\n74 39\n66 0f 1f 84 00 00 00 00 00\n89 ef\n48 89 de\n4c 89 fa\ne8 73 33 00 00\n48 83 f8 ff\n74 1d\n48 85 c0\n74 0d\n49 01 c6\n48 01 c3\n49 29 c7\n75 dd\neb 0b\ne8 b6 8a ff ff\nc7 00 1c 00 00 00\n4c 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p2777
S'.text:00000000004097e0\n.text:00000000004097e1\n.text:00000000004097e3\n.text:00000000004097e5\n.text:00000000004097e6\n.text:00000000004097e7\n.text:00000000004097ea\n.text:00000000004097ed\n.text:00000000004097ef\n.text:00000000004097f2\n.text:00000000004097f5\n.text:00000000004097f7\n.text:0000000000409800\n.text:0000000000409802\n.text:0000000000409805\n.text:0000000000409808\n.text:000000000040980d\n.text:0000000000409811\n.text:0000000000409813\n.text:0000000000409816\n.text:0000000000409818\n.text:000000000040981b\n.text:000000000040981e\n.text:0000000000409821\n.text:0000000000409823\n.text:0000000000409825\n.text:000000000040982a\n.text:0000000000409830\n.text:0000000000409833\n.text:0000000000409837\n.text:0000000000409838\n.text:000000000040983a\n.text:000000000040983c\n.text:000000000040983d\n'
p2778
tp2779
sS'hash_get_max_bucket_length'
p2780
(S'\n__stdcall hash_get_max_bucket_length(Hash_table * table)\n'
p2781
V\u000asize_t hash_get_max_bucket_length(Hash_table *table)\u000a\u000a{\u000a  ulong uVar1;\u000a  hash_entry *phVar2;\u000a  ulong uVar3;\u000a  hash_entry *phVar4;\u000a  \u000a  phVar2 = table->bucket;\u000a  if (phVar2 < table->bucket_limit) {\u000a    uVar1 = 0;\u000a    do {\u000a      if (phVar2->data != (void *)0x0) {\u000a        uVar3 = 0;\u000a        phVar4 = phVar2;\u000a        do {\u000a          phVar4 = phVar4->next;\u000a          uVar3 = uVar3 + 1;\u000a        } while (phVar4 != (hash_entry *)0x0);\u000a        if (uVar1 < uVar3) {\u000a          uVar1 = uVar3;\u000a        }\u000a      }\u000a      phVar2 = phVar2 + 1;\u000a    } while (phVar2 < table->bucket_limit);\u000a    return uVar1;\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p2782
S'MOV RCX,qword ptr [RDI]\nCMP RCX,qword ptr [RDI + 0x8]\nJNC 0x004098ad\nMOV RDX,qword ptr [RDI + 0x8]\nXOR EAX,EAX\nNOP\nCMP qword ptr [RCX],0x0\nJZ 0x004098a3\nXOR ESI,ESI\nMOV RDI,RCX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [RDI + 0x8]\nINC RSI\nTEST RDI,RDI\nJNZ 0x00409890\nCMP RSI,RAX\nCMOVA RAX,RSI\nADD RCX,0x10\nCMP RCX,RDX\nJC 0x00409880\nRET\nXOR EAX,EAX\nRET\n'
p2783
S'48 8b 0f\n48 3b 4f 08\n73 34\n48 8b 57 08\n31 c0\n90\n48 83 39 00\n74 1d\n31 f6\n48 89 cf\n0f 1f 44 00 00\n48 8b 7f 08\n48 ff c6\n48 85 ff\n75 f4\n48 39 c6\n48 0f 47 c6\n48 83 c1 10\n48 39 d1\n72 d4\nc3\n31 c0\nc3\n'
p2784
S'.text:0000000000409870\n.text:0000000000409873\n.text:0000000000409877\n.text:0000000000409879\n.text:000000000040987d\n.text:000000000040987f\n.text:0000000000409880\n.text:0000000000409884\n.text:0000000000409886\n.text:0000000000409888\n.text:000000000040988b\n.text:0000000000409890\n.text:0000000000409894\n.text:0000000000409897\n.text:000000000040989a\n.text:000000000040989c\n.text:000000000040989f\n.text:00000000004098a3\n.text:00000000004098a7\n.text:00000000004098aa\n.text:00000000004098ac\n.text:00000000004098ad\n.text:00000000004098af\n'
p2785
tp2786
sS'chdir'
p2787
(S'\n__stdcall chdir(char * __path)\n'
p2788
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint chdir(char *__path)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_chdir_00618120)();\u000a  return iVar1;\u000a}\u000a\u000a
p2789
S'JMP qword ptr [0x00618120]\n'
p2790
S'ff 25 aa 5c 21 00\n'
p2791
S'.plt:0000000000402470\n'
p2792
tp2793
sS'setfscreatecon'
p2794
(S'\n__stdcall setfscreatecon(security_context_t con)\n'
p2795
V\u000aint setfscreatecon(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2796
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2797
S'50\ne8 9a 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2798
S'.text:000000000040d540\n.text:000000000040d541\n.text:000000000040d546\n.text:000000000040d54c\n.text:000000000040d551\n.text:000000000040d552\n'
p2799
tp2800
sS'getc_unlocked'
p2801
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p2802
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_00618090)();\u000a  return iVar1;\u000a}\u000a\u000a
p2803
S'JMP qword ptr [0x00618090]\n'
p2804
S'ff 25 3a 5d 21 00\n'
p2805
S'.plt:0000000000402350\n'
p2806
tp2807
sS'hash_insert_if_absent'
p2808
(S'\n__stdcall hash_insert_if_absent(Hash_table * table, void * entry, void * * matched_ent)\n'
p2809
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000aint hash_insert_if_absent(Hash_table *table,void *entry,void **matched_ent)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  Hash_tuning *pHVar3;\u000a  _Bool _Var4;\u000a  hash_entry *in_RAX;\u000a  void *pvVar5;\u000a  hash_entry *phVar6;\u000a  size_t candidate;\u000a  float fVar7;\u000a  float fVar8;\u000a  hash_entry *local_28;\u000a  \u000a  if (entry != (void *)0x0) {\u000a    local_28 = in_RAX;\u000a    pvVar5 = hash_find_entry(table,entry,&local_28);\u000a    if (pvVar5 != (void *)0x0) {\u000a      if (matched_ent == (void **)0x0) {\u000a        return 0;\u000a      }\u000a      *matched_ent = pvVar5;\u000a      return 0;\u000a    }\u000a    uVar1 = table->n_buckets;\u000a    uVar2 = table->n_buckets_used;\u000a    if ((long)uVar2 < 0) {\u000a      fVar7 = (float)((ulong)((uint)uVar2 & 1) | uVar2 >> 1);\u000a      fVar7 = fVar7 + fVar7;\u000a    }\u000a    else {\u000a      fVar7 = (float)uVar2;\u000a    }\u000a    if ((long)uVar1 < 0) {\u000a      fVar8 = (float)((ulong)((uint)uVar1 & 1) | uVar1 >> 1);\u000a      fVar8 = fVar8 + fVar8;\u000a    }\u000a    else {\u000a      fVar8 = (float)uVar1;\u000a    }\u000a    if (fVar8 * table->tuning->growth_threshold < fVar7) {\u000a      check_tuning(table);\u000a      uVar1 = table->n_buckets;\u000a      uVar2 = table->n_buckets_used;\u000a      if ((long)uVar2 < 0) {\u000a        fVar7 = (float)((ulong)((uint)uVar2 & 1) | uVar2 >> 1);\u000a        fVar7 = fVar7 + fVar7;\u000a      }\u000a      else {\u000a        fVar7 = (float)uVar2;\u000a      }\u000a      pHVar3 = table->tuning;\u000a      if ((long)uVar1 < 0) {\u000a        fVar8 = (float)((ulong)((uint)uVar1 & 1) | uVar1 >> 1);\u000a        fVar8 = fVar8 + fVar8;\u000a      }\u000a      else {\u000a        fVar8 = (float)uVar1;\u000a      }\u000a      if (pHVar3->growth_threshold * fVar8 < fVar7) {\u000a        fVar8 = fVar8 * pHVar3->growth_factor;\u000a        if (pHVar3->is_n_buckets == false) {\u000a          fVar8 = fVar8 * pHVar3->growth_threshold;\u000a        }\u000a        if (_DAT_00412cdc <= fVar8) {\u000a          return -1;\u000a        }\u000a        candidate = (long)fVar8;\u000a        if (DAT_00412cd8 <= fVar8) {\u000a          candidate = (long)(fVar8 - DAT_00412cd8) ^ 0x8000000000000000;\u000a        }\u000a        _Var4 = hash_rehash(table,candidate);\u000a        if (_Var4 == false) {\u000a          return -1;\u000a        }\u000a        pvVar5 = hash_find_entry(table,entry,&local_28);\u000a        if (pvVar5 != (void *)0x0) goto LAB_0040a43d;\u000a      }\u000a    }\u000a    if (local_28->data == (void *)0x0) {\u000a      local_28->data = entry;\u000a      table->n_entries = table->n_entries + 1;\u000a      table->n_buckets_used = table->n_buckets_used + 1;\u000a    }\u000a    else {\u000a      phVar6 = allocate_entry(table);\u000a      if (phVar6 == (hash_entry *)0x0) {\u000a        return -1;\u000a      }\u000a      phVar6->data = entry;\u000a      phVar6->next = local_28->next;\u000a      local_28->next = phVar6;\u000a      table->n_entries = table->n_entries + 1;\u000a    }\u000a    return 1;\u000a  }\u000aLAB_0040a43d:\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p2810
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDX\nMOV R14,RSI\nMOV R15,RDI\nTEST R14,R14\nJZ 0x0040a43d\nMOV RDX,RSP\nXOR EBP,EBP\nXOR ECX,ECX\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x0040a450\nTEST RAX,RAX\nJZ 0x0040a2b1\nTEST RBX,RBX\nJZ 0x0040a430\nMOV qword ptr [RBX],RAX\nJMP 0x0040a430\nMOV RAX,qword ptr [R15 + 0x10]\nMOV RCX,qword ptr [R15 + 0x18]\nTEST RCX,RCX\nJS 0x0040a2c5\nCVTSI2SS XMM0,RCX\nJMP 0x0040a2da\nMOV RDX,RCX\nSHR RDX,1\nAND ECX,0x1\nOR RCX,RDX\nCVTSI2SS XMM0,RCX\nADDSS XMM0,XMM0\nMOV RCX,qword ptr [R15 + 0x28]\nTEST RAX,RAX\nJS 0x0040a2ea\nCVTSI2SS XMM1,RAX\nJMP 0x0040a2ff\nMOV RDX,RAX\nSHR RDX,1\nAND EAX,0x1\nOR RAX,RDX\nCVTSI2SS XMM1,RAX\nADDSS XMM1,XMM1\nMULSS XMM1,dword ptr [RCX + 0x8]\nUCOMISS XMM0,XMM1\nJBE 0x0040a3e9\nMOV RDI,R15\nCALL 0x00409d80\nMOV RAX,qword ptr [R15 + 0x10]\nMOV RCX,qword ptr [R15 + 0x18]\nTEST RCX,RCX\nJS 0x0040a329\nCVTSI2SS XMM2,RCX\nJMP 0x0040a33e\nMOV RDX,RCX\nSHR RDX,1\nAND ECX,0x1\nOR RCX,RDX\nCVTSI2SS XMM2,RCX\nADDSS XMM2,XMM2\nMOV RCX,qword ptr [R15 + 0x28]\nMOVSS XMM1,dword ptr [RCX + 0x8]\nTEST RAX,RAX\nJS 0x0040a356\nXORPS XMM0,XMM0\nCVTSI2SS XMM0,RAX\nJMP 0x0040a36e\nMOV RDX,RAX\nSHR RDX,1\nAND EAX,0x1\nOR RAX,RDX\nXORPS XMM0,XMM0\nCVTSI2SS XMM0,RAX\nADDSS XMM0,XMM0\nMOVAPS XMM3,XMM1\nMULSS XMM3,XMM0\nUCOMISS XMM2,XMM3\nJBE 0x0040a3e9\nCMP byte ptr [RCX + 0x10],0x0\nMULSS XMM0,dword ptr [RCX + 0xc]\nJNZ 0x0040a389\nMULSS XMM0,XMM1\nMOV EBP,0xffffffff\nUCOMISS XMM0,dword ptr [0x00412cdc]\nJNC 0x0040a430\nMOVSS XMM1,dword ptr [0x00412cd8]\nMOVAPS XMM2,XMM0\nSUBSS XMM2,XMM1\nCVTTSS2SI RAX,XMM2\nMOV RCX,-0x8000000000000000\nXOR RCX,RAX\nCVTTSS2SI RSI,XMM0\nUCOMISS XMM0,XMM1\nCMOVNC RSI,RCX\nMOV RDI,R15\nCALL 0x0040a020\nTEST AL,AL\nJZ 0x0040a430\nMOV RDX,RSP\nXOR ECX,ECX\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x0040a450\nTEST RAX,RAX\nJNZ 0x0040a43d\nMOV RAX,qword ptr [RSP]\nCMP qword ptr [RAX],0x0\nJZ 0x0040a419\nMOV RDI,R15\nCALL 0x0040a510\nTEST RAX,RAX\nJZ 0x0040a42b\nMOV qword ptr [RAX],R14\nMOV RCX,qword ptr [RSP]\nMOV RDX,qword ptr [RCX + 0x8]\nMOV qword ptr [RAX + 0x8],RDX\nMOV qword ptr [RCX + 0x8],RAX\nINC qword ptr [R15 + 0x20]\nJMP 0x0040a424\nMOV qword ptr [RAX],R14\nINC qword ptr [R15 + 0x20]\nINC qword ptr [R15 + 0x18]\nMOV EBP,0x1\nJMP 0x0040a430\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x004022d0\n'
p2811
S'55\n41 57\n41 56\n53\n50\n48 89 d3\n49 89 f6\n49 89 ff\n4d 85 f6\n0f 84 b4 01 00 00\n48 89 e2\n31 ed\n31 c9\n4c 89 ff\n4c 89 f6\ne8 b5 01 00 00\n48 85 c0\n74 11\n48 85 db\n0f 84 87 01 00 00\n48 89 03\ne9 7f 01 00 00\n49 8b 47 10\n49 8b 4f 18\n48 85 c9\n78 07\nf3 48 0f 2a c1\neb 15\n48 89 ca\n48 d1 ea\n83 e1 01\n48 09 d1\nf3 48 0f 2a c1\nf3 0f 58 c0\n49 8b 4f 28\n48 85 c0\n78 07\nf3 48 0f 2a c8\neb 15\n48 89 c2\n48 d1 ea\n83 e0 01\n48 09 d0\nf3 48 0f 2a c8\nf3 0f 58 c9\nf3 0f 59 49 08\n0f 2e c1\n0f 86 dc 00 00 00\n4c 89 ff\ne8 6b fa ff ff\n49 8b 47 10\n49 8b 4f 18\n48 85 c9\n78 07\nf3 48 0f 2a d1\neb 15\n48 89 ca\n48 d1 ea\n83 e1 01\n48 09 d1\nf3 48 0f 2a d1\nf3 0f 58 d2\n49 8b 4f 28\nf3 0f 10 49 08\n48 85 c0\n78 0a\n0f 57 c0\nf3 48 0f 2a c0\neb 18\n48 89 c2\n48 d1 ea\n83 e0 01\n48 09 d0\n0f 57 c0\nf3 48 0f 2a c0\nf3 0f 58 c0\n0f 28 d9\nf3 0f 59 d8\n0f 2e d3\n76 6f\n80 79 10 00\nf3 0f 59 41 0c\n75 04\nf3 0f 59 c1\nbd ff ff ff ff\n0f 2e 05 47 89 00 00\n0f 83 95 00 00 00\nf3 0f 10 0d 35 89 00 00\n0f 28 d0\nf3 0f 5c d1\nf3 48 0f 2c c2\n48 b9 00 00 00 00 00 00 00 80\n48 31 c1\nf3 48 0f 2c f0\n0f 2e c1\n48 0f 43 f1\n4c 89 ff\ne8 50 fc ff ff\n84 c0\n74 5c\n48 89 e2\n31 c9\n4c 89 ff\n4c 89 f6\ne8 6c 00 00 00\n48 85 c0\n75 54\n48 8b 04 24\n48 83 38 00\n74 26\n4c 89 ff\ne8 15 01 00 00\n48 85 c0\n74 2b\n4c 89 30\n48 8b 0c 24\n48 8b 51 08\n48 89 50 08\n48 89 41 08\n49 ff 47 20\neb 0b\n4c 89 30\n49 ff 47 20\n49 ff 47 18\nbd 01 00 00 00\neb 05\nbd ff ff ff ff\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\ne8 8e 7e ff ff\n'
p2812
S'.text:000000000040a270\n.text:000000000040a271\n.text:000000000040a273\n.text:000000000040a275\n.text:000000000040a276\n.text:000000000040a277\n.text:000000000040a27a\n.text:000000000040a27d\n.text:000000000040a280\n.text:000000000040a283\n.text:000000000040a289\n.text:000000000040a28c\n.text:000000000040a28e\n.text:000000000040a290\n.text:000000000040a293\n.text:000000000040a296\n.text:000000000040a29b\n.text:000000000040a29e\n.text:000000000040a2a0\n.text:000000000040a2a3\n.text:000000000040a2a9\n.text:000000000040a2ac\n.text:000000000040a2b1\n.text:000000000040a2b5\n.text:000000000040a2b9\n.text:000000000040a2bc\n.text:000000000040a2be\n.text:000000000040a2c3\n.text:000000000040a2c5\n.text:000000000040a2c8\n.text:000000000040a2cb\n.text:000000000040a2ce\n.text:000000000040a2d1\n.text:000000000040a2d6\n.text:000000000040a2da\n.text:000000000040a2de\n.text:000000000040a2e1\n.text:000000000040a2e3\n.text:000000000040a2e8\n.text:000000000040a2ea\n.text:000000000040a2ed\n.text:000000000040a2f0\n.text:000000000040a2f3\n.text:000000000040a2f6\n.text:000000000040a2fb\n.text:000000000040a2ff\n.text:000000000040a304\n.text:000000000040a307\n.text:000000000040a30d\n.text:000000000040a310\n.text:000000000040a315\n.text:000000000040a319\n.text:000000000040a31d\n.text:000000000040a320\n.text:000000000040a322\n.text:000000000040a327\n.text:000000000040a329\n.text:000000000040a32c\n.text:000000000040a32f\n.text:000000000040a332\n.text:000000000040a335\n.text:000000000040a33a\n.text:000000000040a33e\n.text:000000000040a342\n.text:000000000040a347\n.text:000000000040a34a\n.text:000000000040a34c\n.text:000000000040a34f\n.text:000000000040a354\n.text:000000000040a356\n.text:000000000040a359\n.text:000000000040a35c\n.text:000000000040a35f\n.text:000000000040a362\n.text:000000000040a365\n.text:000000000040a36a\n.text:000000000040a36e\n.text:000000000040a371\n.text:000000000040a375\n.text:000000000040a378\n.text:000000000040a37a\n.text:000000000040a37e\n.text:000000000040a383\n.text:000000000040a385\n.text:000000000040a389\n.text:000000000040a38e\n.text:000000000040a395\n.text:000000000040a39b\n.text:000000000040a3a3\n.text:000000000040a3a6\n.text:000000000040a3aa\n.text:000000000040a3af\n.text:000000000040a3b9\n.text:000000000040a3bc\n.text:000000000040a3c1\n.text:000000000040a3c4\n.text:000000000040a3c8\n.text:000000000040a3cb\n.text:000000000040a3d0\n.text:000000000040a3d2\n.text:000000000040a3d4\n.text:000000000040a3d7\n.text:000000000040a3d9\n.text:000000000040a3dc\n.text:000000000040a3df\n.text:000000000040a3e4\n.text:000000000040a3e7\n.text:000000000040a3e9\n.text:000000000040a3ed\n.text:000000000040a3f1\n.text:000000000040a3f3\n.text:000000000040a3f6\n.text:000000000040a3fb\n.text:000000000040a3fe\n.text:000000000040a400\n.text:000000000040a403\n.text:000000000040a407\n.text:000000000040a40b\n.text:000000000040a40f\n.text:000000000040a413\n.text:000000000040a417\n.text:000000000040a419\n.text:000000000040a41c\n.text:000000000040a420\n.text:000000000040a424\n.text:000000000040a429\n.text:000000000040a42b\n.text:000000000040a430\n.text:000000000040a432\n.text:000000000040a436\n.text:000000000040a437\n.text:000000000040a439\n.text:000000000040a43b\n.text:000000000040a43c\n.text:000000000040a43d\n'
p2813
tp2814
sS'c_isascii'
p2815
(S'\n__stdcall c_isascii()\n'
p2816
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p2817
S'CMP EDI,0x80\nSETC AL\nRET\n'
p2818
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p2819
S'.text:000000000040fa20\n.text:000000000040fa26\n.text:000000000040fa29\n'
p2820
tp2821
sS'should_dereference'
p2822
(S'\n__stdcall should_dereference(cp_options * x)\n'
p2823
V\u000a_Bool should_dereference(cp_options *x)\u000a\u000a{\u000a  _Bool _Var1;\u000a  byte in_SIL;\u000a  \u000a  _Var1 = true;\u000a  if (x->dereference != DEREF_ALWAYS) {\u000a    _Var1 = (_Bool)(x->dereference == DEREF_COMMAND_LINE_ARGUMENTS & in_SIL);\u000a  }\u000a  return _Var1;\u000a}\u000a\u000a
p2824
S'MOV ECX,dword ptr [RDI + 0x4]\nMOV AL,0x1\nCMP ECX,0x4\nJZ 0x00405f73\nCMP ECX,0x3\nSETZ AL\nAND AL,SIL\nRET\n'
p2825
S'8b 4f 04\nb0 01\n83 f9 04\n74 09\n83 f9 03\n0f 94 c0\n40 20 f0\nc3\n'
p2826
S'.text:0000000000405f60\n.text:0000000000405f63\n.text:0000000000405f65\n.text:0000000000405f68\n.text:0000000000405f6a\n.text:0000000000405f6d\n.text:0000000000405f70\n.text:0000000000405f73\n'
p2827
tp2828
sS'dot_or_dotdot'
p2829
(S'\n__stdcall dot_or_dotdot(char * file_name)\n'
p2830
V\u000a_Bool dot_or_dotdot(char *file_name)\u000a\u000a{\u000a  if (*file_name == '.') {\u000a    return (_Bool)(file_name[(ulong)(file_name[1] == '.') + 1] == '/' ||\u000a                  file_name[(ulong)(file_name[1] == '.') + 1] == 0);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p2831
S'CMP byte ptr [RDI],0x2e\nJNZ 0x0040669f\nXOR EAX,EAX\nCMP byte ptr [RDI + 0x1],0x2e\nSETZ AL\nMOV AL,byte ptr [RDI + RAX*0x1 + 0x1]\nTEST AL,AL\nSETZ CL\nCMP AL,0x2f\nSETZ AL\nOR AL,CL\nRET\nXOR EAX,EAX\nRET\n'
p2832
S'80 3f 2e\n75 1a\n31 c0\n80 7f 01 2e\n0f 94 c0\n8a 44 07 01\n84 c0\n0f 94 c1\n3c 2f\n0f 94 c0\n08 c8\nc3\n31 c0\nc3\n'
p2833
S'.text:0000000000406680\n.text:0000000000406683\n.text:0000000000406685\n.text:0000000000406687\n.text:000000000040668b\n.text:000000000040668e\n.text:0000000000406692\n.text:0000000000406694\n.text:0000000000406697\n.text:0000000000406699\n.text:000000000040669c\n.text:000000000040669e\n.text:000000000040669f\n.text:00000000004066a1\n'
p2834
tp2835
sS'cdb_advance_fd'
p2836
(S'\n__stdcall cdb_advance_fd(cd_buf * cdb, char * dir)\n'
p2837
V\u000aint cdb_advance_fd(cd_buf *cdb,char *dir)\u000a\u000a{\u000a  cd_buf cVar1;\u000a  int iVar2;\u000a  \u000a  iVar2 = 0;\u000a  cVar1 = (cd_buf)openat((int)*cdb,dir,0x10900);\u000a  if ((int)cVar1 < 0) {\u000a    iVar2 = -1;\u000a  }\u000a  else {\u000a    cdb_free(cdb);\u000a    *cdb = cVar1;\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p2838
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nMOV EDI,dword ptr [RBX]\nXOR R14D,R14D\nMOV EDX,0x10900\nXOR EAX,EAX\nCALL 0x00402460\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0041046a\nMOV RDI,RBX\nCALL 0x004104b0\nMOV dword ptr [RBX],EBP\nJMP 0x00410470\nMOV R14D,0xffffffff\nMOV EAX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p2839
S'55\n41 56\n53\n48 89 fb\n8b 3b\n45 31 f6\nba 00 09 01 00\n31 c0\ne8 08 20 ff ff\n89 c5\n85 ed\n78 0c\n48 89 df\ne8 4a 00 00 00\n89 2b\neb 06\n41 be ff ff ff ff\n44 89 f0\n5b\n41 5e\n5d\nc3\n'
p2840
S'.text:0000000000410440\n.text:0000000000410441\n.text:0000000000410443\n.text:0000000000410444\n.text:0000000000410447\n.text:0000000000410449\n.text:000000000041044c\n.text:0000000000410451\n.text:0000000000410453\n.text:0000000000410458\n.text:000000000041045a\n.text:000000000041045c\n.text:000000000041045e\n.text:0000000000410461\n.text:0000000000410466\n.text:0000000000410468\n.text:000000000041046a\n.text:0000000000410470\n.text:0000000000410473\n.text:0000000000410474\n.text:0000000000410476\n.text:0000000000410477\n'
p2841
tp2842
sS'dirfd'
p2843
(S'\n__stdcall dirfd(DIR * __dirp)\n'
p2844
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint dirfd(DIR *__dirp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_dirfd_00618220)();\u000a  return iVar1;\u000a}\u000a\u000a
p2845
S'JMP qword ptr [0x00618220]\n'
p2846
S'ff 25 aa 5b 21 00\n'
p2847
S'.plt:0000000000402670\n'
p2848
tp2849
sS'owner_failure_ok'
p2850
(S'\n__stdcall owner_failure_ok(cp_options * x)\n'
p2851
V\u000a_Bool owner_failure_ok(cp_options *x)\u000a\u000a{\u000a  int *piVar1;\u000a  bool bVar2;\u000a  \u000a  piVar1 = __errno_location();\u000a  if ((*piVar1 == 0x16) || (*piVar1 == 1)) {\u000a    bVar2 = x->owner_privileges == false;\u000a  }\u000a  else {\u000a    bVar2 = false;\u000a  }\u000a  return (_Bool)bVar2;\u000a}\u000a\u000a
p2852
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x004022e0\nMOV EAX,dword ptr [RAX]\nCMP EAX,0x16\nJZ 0x004084d5\nCMP EAX,0x1\nJNZ 0x004084de\nCMP byte ptr [RBX + 0x1a],0x0\nSETZ AL\nJMP 0x004084e0\nXOR EAX,EAX\nPOP RBX\nRET\n'
p2853
S'53\n48 89 fb\ne8 17 9e ff ff\n8b 00\n83 f8 16\n74 05\n83 f8 01\n75 09\n80 7b 1a 00\n0f 94 c0\neb 02\n31 c0\n5b\nc3\n'
p2854
S'.text:00000000004084c0\n.text:00000000004084c1\n.text:00000000004084c4\n.text:00000000004084c9\n.text:00000000004084cb\n.text:00000000004084ce\n.text:00000000004084d0\n.text:00000000004084d3\n.text:00000000004084d5\n.text:00000000004084d9\n.text:00000000004084dc\n.text:00000000004084de\n.text:00000000004084e0\n.text:00000000004084e1\n'
p2855
tp2856
sS'set_owner'
p2857
(S'\n__stdcall set_owner(cp_options * x, char * dst_name, stat * src_sb, stat * dst_sb)\n'
p2858
V\u000aint set_owner(cp_options *x,char *dst_name,stat *src_sb,stat *dst_sb)\u000a\u000a{\u000a  __uid_t __owner;\u000a  __gid_t __group;\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  int __fd;\u000a  undefined8 uVar3;\u000a  char *pcVar4;\u000a  int *piVar5;\u000a  uint *puVar6;\u000a  uint uVar7;\u000a  char in_R8B;\u000a  long in_R9;\u000a  \u000a  __fd = (int)src_sb;\u000a  __owner = dst_sb->st_uid;\u000a  __group = dst_sb->st_gid;\u000a  if (in_R8B == 0) {\u000a    if (x->preserve_mode == false) {\u000a      if ((x->move_mode == false) && (x->set_mode == false)) goto LAB_004078bb;\u000a      uVar7 = *(uint *)(in_R9 + 0x18);\u000a      if (x->move_mode == false) {\u000a        puVar6 = &x->mode;\u000a      }\u000a      else {\u000a        puVar6 = &dst_sb->st_mode;\u000a      }\u000a    }\u000a    else {\u000a      uVar7 = *(uint *)(in_R9 + 0x18);\u000a      puVar6 = &dst_sb->st_mode;\u000a    }\u000a    if (((((*puVar6 | 0xe00) ^ 0x1ff) & uVar7 & 0xfff) != 0) &&\u000a       (iVar2 = qset_acl(dst_name), iVar2 != 0)) {\u000a      _Var1 = owner_failure_ok(x);\u000a      if (_Var1 == false) {\u000a        puVar6 = (uint *)__errno_location();\u000a        uVar7 = *puVar6;\u000a        uVar3 = dcgettext(0,"clearing permissions for %s",5);\u000a        pcVar4 = quotearg_style((char *)0x4);\u000a        error(0,(ulong)uVar7,uVar3,pcVar4);\u000a      }\u000a      return -(uint)x->require_preserve;\u000a    }\u000a  }\u000aLAB_004078bb:\u000a  if (__fd == -1) {\u000a    __fd = lchown(dst_name,__owner,__group);\u000a    if (__fd == 0) {\u000a      return 1;\u000a    }\u000a    piVar5 = __errno_location();\u000a    __fd = *piVar5;\u000a    if ((__fd == 0x16) || (__fd == 1)) {\u000a      lchown(dst_name,0xffffffff,__group);\u000a      *piVar5 = __fd;\u000a    }\u000a  }\u000a  else {\u000a    iVar2 = fchown(__fd,__owner,__group);\u000a    if (iVar2 == 0) {\u000a      return 1;\u000a    }\u000a    piVar5 = __errno_location();\u000a    iVar2 = *piVar5;\u000a    if ((iVar2 == 0x16) || (iVar2 == 1)) {\u000a      fchown(__fd,0xffffffff,__group);\u000a      *piVar5 = iVar2;\u000a    }\u000a  }\u000a  _Var1 = chown_failure_ok(x);\u000a  if (_Var1 == false) {\u000a    puVar6 = (uint *)__errno_location();\u000a    uVar7 = *puVar6;\u000a    uVar3 = dcgettext(0,"failed to preserve ownership for %s",5);\u000a    pcVar4 = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar7,uVar3,pcVar4);\u000a    if (x->require_preserve != false) {\u000a      return -1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p2859
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV EBX,EDX\nMOV R14,RSI\nMOV R15,RDI\nMOV EBP,dword ptr [RCX + 0x1c]\nMOV R12D,dword ptr [RCX + 0x20]\nTEST R8B,R8B\nJNZ 0x004078bb\nCMP byte ptr [R15 + 0x1d],0x0\nJZ 0x00407814\nMOV EDX,dword ptr [R9 + 0x18]\nADD RCX,0x18\nJMP 0x0040783b\nCMP byte ptr [R15 + 0x18],0x0\nJNZ 0x00407826\nCMP byte ptr [R15 + 0x2a],0x0\nJZ 0x004078bb\nMOV EDX,dword ptr [R9 + 0x18]\nCMP byte ptr [R15 + 0x18],0x0\nJZ 0x00407837\nADD RCX,0x18\nJMP 0x0040783b\nLEA RCX,[R15 + 0x10]\nMOV EAX,dword ptr [RCX]\nMOV ECX,EAX\nOR ECX,0xe00\nXOR ECX,0x1ff\nAND ECX,EDX\nTEST CX,0xfff\nJZ 0x004078bb\nAND EDX,EAX\nAND EDX,0x1c0\nMOV RDI,R14\nMOV ESI,EBX\nCALL 0x0040b280\nTEST EAX,EAX\nJZ 0x004078bb\nMOV RDI,R15\nCALL 0x004084c0\nTEST AL,AL\nJNZ 0x004078af\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x412aca\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOVZX EAX,byte ptr [R15 + 0x23]\nNEG EAX\nJMP 0x00407990\nCMP EBX,-0x1\nJZ 0x004078ff\nMOV EDI,EBX\nMOV ESI,EBP\nMOV EDX,R12D\nCALL 0x004028d0\nTEST EAX,EAX\nJZ 0x0040798b\nCALL 0x004022e0\nMOV R13,RAX\nMOV EBP,dword ptr [R13]\nCMP EBP,0x16\nJZ 0x004078ea\nCMP EBP,0x1\nJNZ 0x00407936\nMOV ESI,0xffffffff\nMOV EDI,EBX\nMOV EDX,R12D\nCALL 0x004028d0\nMOV dword ptr [R13],EBP\nJMP 0x00407936\nMOV RDI,R14\nMOV ESI,EBP\nMOV EDX,R12D\nCALL 0x004027c0\nTEST EAX,EAX\nJZ 0x0040798b\nCALL 0x004022e0\nMOV RBX,RAX\nMOV EBP,dword ptr [RBX]\nCMP EBP,0x16\nJZ 0x00407924\nCMP EBP,0x1\nJNZ 0x00407936\nMOV ESI,0xffffffff\nMOV RDI,R14\nMOV EDX,R12D\nCALL 0x004027c0\nMOV dword ptr [RBX],EBP\nMOV RDI,R15\nCALL 0x00405f00\nTEST AL,AL\nJNZ 0x00407987\nCALL 0x004022e0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4126c1\nMOV EDX,0x5\nCALL 0x00402420\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402870\nMOV EAX,0xffffffff\nCMP byte ptr [R15 + 0x23],0x0\nJNZ 0x00407990\nXOR EAX,EAX\nJMP 0x00407990\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2860
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n89 d3\n49 89 f6\n49 89 ff\n8b 69 1c\n44 8b 61 20\n45 84 c0\n0f 85 b8 00 00 00\n41 80 7f 1d 00\n74 0a\n41 8b 51 18\n48 83 c1 18\neb 27\n41 80 7f 18 00\n75 0b\n41 80 7f 2a 00\n0f 84 95 00 00 00\n41 8b 51 18\n41 80 7f 18 00\n74 06\n48 83 c1 18\neb 04\n49 8d 4f 10\n8b 01\n89 c1\n81 c9 00 0e 00 00\n81 f1 ff 01 00 00\n21 d1\n66 f7 c1 ff 0f\n74 67\n21 c2\n81 e2 c0 01 00 00\n4c 89 f7\n89 de\ne8 1a 3a 00 00\n85 c0\n74 51\n4c 89 ff\ne8 4e 0c 00 00\n84 c0\n75 39\ne8 65 aa ff ff\n8b 18\n31 ff\nbe ca 2a 41 00\nba 05 00 00 00\ne8 92 ab ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 22 4c 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 c1 af ff ff\n41 0f b6 47 23\nf7 d8\ne9 d5 00 00 00\n83 fb ff\n74 3f\n89 df\n89 ee\n44 89 e2\ne8 04 b0 ff ff\n85 c0\n0f 84 b7 00 00 00\ne8 07 aa ff ff\n49 89 c5\n41 8b 6d 00\n83 fd 16\n74 05\n83 fd 01\n75 4c\nbe ff ff ff ff\n89 df\n44 89 e2\ne8 d7 af ff ff\n41 89 6d 00\neb 37\n4c 89 f7\n89 ee\n44 89 e2\ne8 b4 ae ff ff\n85 c0\n74 7b\ne8 cb a9 ff ff\n48 89 c3\n8b 2b\n83 fd 16\n74 05\n83 fd 01\n75 12\nbe ff ff ff ff\n4c 89 f7\n44 89 e2\ne8 8c ae ff ff\n89 2b\n4c 89 ff\ne8 c2 e5 ff ff\n84 c0\n75 45\ne8 99 a9 ff ff\n8b 18\n31 ff\nbe c1 26 41 00\nba 05 00 00 00\ne8 c6 aa ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 f6\ne8 56 4b 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 f5 ae ff ff\nb8 ff ff ff ff\n41 80 7f 23 00\n75 09\n31 c0\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2861
S'.text:00000000004077e0\n.text:00000000004077e1\n.text:00000000004077e3\n.text:00000000004077e5\n.text:00000000004077e7\n.text:00000000004077e9\n.text:00000000004077ea\n.text:00000000004077eb\n.text:00000000004077ed\n.text:00000000004077f0\n.text:00000000004077f3\n.text:00000000004077f6\n.text:00000000004077fa\n.text:00000000004077fd\n.text:0000000000407803\n.text:0000000000407808\n.text:000000000040780a\n.text:000000000040780e\n.text:0000000000407812\n.text:0000000000407814\n.text:0000000000407819\n.text:000000000040781b\n.text:0000000000407820\n.text:0000000000407826\n.text:000000000040782a\n.text:000000000040782f\n.text:0000000000407831\n.text:0000000000407835\n.text:0000000000407837\n.text:000000000040783b\n.text:000000000040783d\n.text:000000000040783f\n.text:0000000000407845\n.text:000000000040784b\n.text:000000000040784d\n.text:0000000000407852\n.text:0000000000407854\n.text:0000000000407856\n.text:000000000040785c\n.text:000000000040785f\n.text:0000000000407861\n.text:0000000000407866\n.text:0000000000407868\n.text:000000000040786a\n.text:000000000040786d\n.text:0000000000407872\n.text:0000000000407874\n.text:0000000000407876\n.text:000000000040787b\n.text:000000000040787d\n.text:000000000040787f\n.text:0000000000407884\n.text:0000000000407889\n.text:000000000040788e\n.text:0000000000407891\n.text:0000000000407896\n.text:0000000000407899\n.text:000000000040789e\n.text:00000000004078a1\n.text:00000000004078a3\n.text:00000000004078a5\n.text:00000000004078a7\n.text:00000000004078aa\n.text:00000000004078af\n.text:00000000004078b4\n.text:00000000004078b6\n.text:00000000004078bb\n.text:00000000004078be\n.text:00000000004078c0\n.text:00000000004078c2\n.text:00000000004078c4\n.text:00000000004078c7\n.text:00000000004078cc\n.text:00000000004078ce\n.text:00000000004078d4\n.text:00000000004078d9\n.text:00000000004078dc\n.text:00000000004078e0\n.text:00000000004078e3\n.text:00000000004078e5\n.text:00000000004078e8\n.text:00000000004078ea\n.text:00000000004078ef\n.text:00000000004078f1\n.text:00000000004078f4\n.text:00000000004078f9\n.text:00000000004078fd\n.text:00000000004078ff\n.text:0000000000407902\n.text:0000000000407904\n.text:0000000000407907\n.text:000000000040790c\n.text:000000000040790e\n.text:0000000000407910\n.text:0000000000407915\n.text:0000000000407918\n.text:000000000040791a\n.text:000000000040791d\n.text:000000000040791f\n.text:0000000000407922\n.text:0000000000407924\n.text:0000000000407929\n.text:000000000040792c\n.text:000000000040792f\n.text:0000000000407934\n.text:0000000000407936\n.text:0000000000407939\n.text:000000000040793e\n.text:0000000000407940\n.text:0000000000407942\n.text:0000000000407947\n.text:0000000000407949\n.text:000000000040794b\n.text:0000000000407950\n.text:0000000000407955\n.text:000000000040795a\n.text:000000000040795d\n.text:0000000000407962\n.text:0000000000407965\n.text:000000000040796a\n.text:000000000040796d\n.text:000000000040796f\n.text:0000000000407971\n.text:0000000000407973\n.text:0000000000407976\n.text:000000000040797b\n.text:0000000000407980\n.text:0000000000407985\n.text:0000000000407987\n.text:0000000000407989\n.text:000000000040798b\n.text:0000000000407990\n.text:0000000000407994\n.text:0000000000407995\n.text:0000000000407997\n.text:0000000000407999\n.text:000000000040799b\n.text:000000000040799d\n.text:000000000040799e\n'
p2862
tp2863
sS'_start'
p2864
(S'\n__stdcall _start()\n'
p2865
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00617ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p2866
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x410750\nMOV RCX,0x4106e0\nMOV RDI,0x402e20\nCALL qword ptr [0x00617ff0]\nHLT\n'
p2867
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 50 07 41 00\n48 c7 c1 e0 06 41 00\n48 c7 c7 20 2e 40 00\nff 15 c6 55 21 00\nf4\n'
p2868
S'.text:0000000000402a00\n.text:0000000000402a02\n.text:0000000000402a05\n.text:0000000000402a06\n.text:0000000000402a09\n.text:0000000000402a0d\n.text:0000000000402a0e\n.text:0000000000402a0f\n.text:0000000000402a16\n.text:0000000000402a1d\n.text:0000000000402a24\n.text:0000000000402a2a\n'
p2869
tp2870
sS'overwrite_ok'
p2871
(S'\n__stdcall overwrite_ok(cp_options * x, char * dst_name, stat * dst_sb)\n'
p2872
V\u000a_Bool overwrite_ok(cp_options *x,char *dst_name,stat *dst_sb)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  _Bool _Var2;\u000a  undefined8 uVar3;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  char perms [12];\u000a  undefined local_33 [9];\u000a  undefined local_2a;\u000a  \u000a  _Var2 = writable_destination(dst_name);\u000a  uVar1 = stderr;\u000a  if (_Var2 == false) {\u000a    strmode((char *)(ulong)dst_sb->st_mode);\u000a    uVar1 = stderr;\u000a    local_2a = 0;\u000a    if (((x->move_mode == false) && (x->unlink_dest_before_opening == false)) &&\u000a       (x->unlink_dest_after_failed_open == false)) {\u000a      pcVar5 = "%s: unwritable %s (mode %04lo, %s); try anyway? ";\u000a    }\u000a    else {\u000a      pcVar5 = "%s: replace %s, overriding mode %04lo (%s)? ";\u000a    }\u000a    uVar3 = dcgettext(0,pcVar5,5);\u000a    pcVar5 = program_name;\u000a    pcVar4 = quotearg_style((char *)0x4);\u000a    __fprintf_chk(uVar1,1,uVar3,pcVar5,pcVar4,(ulong)(dst_sb->st_mode & 0xfff),local_33);\u000a  }\u000a  else {\u000a    uVar3 = dcgettext(0,"%s: overwrite %s? ",5);\u000a    pcVar5 = program_name;\u000a    pcVar4 = quotearg_style((char *)0x4);\u000a    __fprintf_chk(uVar1,1,uVar3,pcVar5,pcVar4);\u000a  }\u000a  _Var2 = yesno();\u000a  return _Var2;\u000a}\u000a\u000a
p2873
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV RBX,RDX\nMOV R14,RSI\nMOV R12,RDI\nMOV ESI,dword ptr [RBX + 0x18]\nMOV RDI,R14\nCALL 0x004079a0\nTEST AL,AL\nJZ 0x004065d4\nMOV R15,qword ptr [0x006184e0]\nXOR EDI,EDI\nMOV ESI,0x41283a\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nMOV R13,qword ptr [0x0061a950]\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV RBX,RAX\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R15\nMOV RDX,R12\nMOV RCX,R13\nMOV R8,RBX\nCALL 0x00402980\nJMP 0x00406659\nMOV EDI,dword ptr [RBX + 0x18]\nLEA RSI,[RSP + 0x14]\nCALL 0x00409540\nMOV byte ptr [RSP + 0x1e],0x0\nMOV R15,qword ptr [0x006184e0]\nCMP byte ptr [R12 + 0x18],0x0\nJNZ 0x00406605\nCMP byte ptr [R12 + 0x15],0x0\nJNZ 0x00406605\nCMP byte ptr [R12 + 0x16],0x0\nJZ 0x0040666c\nMOV ESI,0x4127dc\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00402420\nMOV R12,RAX\nMOV R13,qword ptr [0x0061a950]\nMOV EDI,0x4\nMOV RSI,R14\nCALL 0x0040c4c0\nMOV R8,RAX\nMOV R9D,dword ptr [RBX + 0x18]\nAND R9D,0xfff\nLEA RAX,[RSP + 0x15]\nMOV qword ptr [RSP],RAX\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R15\nMOV RDX,R12\nMOV RCX,R13\nCALL 0x00402980\nCALL 0x0040ee50\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\nMOV ESI,0x412809\nJMP 0x0040660a\n'
p2874
S'41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 20\n48 89 d3\n49 89 f6\n49 89 fc\n8b 73 18\n4c 89 f7\ne8 1f 14 00 00\n84 c0\n74 4f\n4c 8b 3d 54 1f 21 00\n31 ff\nbe 3a 28 41 00\nba 05 00 00 00\ne8 83 be ff ff\n49 89 c4\n4c 8b 2d a9 43 21 00\nbf 04 00 00 00\n4c 89 f6\ne8 0c 5f 00 00\n48 89 c3\nbe 01 00 00 00\n31 c0\n4c 89 ff\n4c 89 e2\n4c 89 e9\n49 89 d8\ne8 b1 c3 ff ff\ne9 85 00 00 00\n8b 7b 18\n48 8d 74 24 14\ne8 5f 2f 00 00\nc6 44 24 1e 00\n4c 8b 3d f3 1e 21 00\n41 80 7c 24 18 00\n75 10\n41 80 7c 24 15 00\n75 08\n41 80 7c 24 16 00\n74 67\nbe dc 27 41 00\n31 ff\nba 05 00 00 00\ne8 0a be ff ff\n49 89 c4\n4c 8b 2d 30 43 21 00\nbf 04 00 00 00\n4c 89 f6\ne8 93 5e 00 00\n49 89 c0\n44 8b 4b 18\n41 81 e1 ff 0f 00 00\n48 8d 44 24 15\n48 89 04 24\nbe 01 00 00 00\n31 c0\n4c 89 ff\n4c 89 e2\n4c 89 e9\ne8 27 c3 ff ff\ne8 f2 87 00 00\n48 83 c4 20\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\nbe 09 28 41 00\neb 97\n'
p2875
S'.text:0000000000406560\n.text:0000000000406562\n.text:0000000000406564\n.text:0000000000406566\n.text:0000000000406568\n.text:0000000000406569\n.text:000000000040656d\n.text:0000000000406570\n.text:0000000000406573\n.text:0000000000406576\n.text:0000000000406579\n.text:000000000040657c\n.text:0000000000406581\n.text:0000000000406583\n.text:0000000000406585\n.text:000000000040658c\n.text:000000000040658e\n.text:0000000000406593\n.text:0000000000406598\n.text:000000000040659d\n.text:00000000004065a0\n.text:00000000004065a7\n.text:00000000004065ac\n.text:00000000004065af\n.text:00000000004065b4\n.text:00000000004065b7\n.text:00000000004065bc\n.text:00000000004065be\n.text:00000000004065c1\n.text:00000000004065c4\n.text:00000000004065c7\n.text:00000000004065ca\n.text:00000000004065cf\n.text:00000000004065d4\n.text:00000000004065d7\n.text:00000000004065dc\n.text:00000000004065e1\n.text:00000000004065e6\n.text:00000000004065ed\n.text:00000000004065f3\n.text:00000000004065f5\n.text:00000000004065fb\n.text:00000000004065fd\n.text:0000000000406603\n.text:0000000000406605\n.text:000000000040660a\n.text:000000000040660c\n.text:0000000000406611\n.text:0000000000406616\n.text:0000000000406619\n.text:0000000000406620\n.text:0000000000406625\n.text:0000000000406628\n.text:000000000040662d\n.text:0000000000406630\n.text:0000000000406634\n.text:000000000040663b\n.text:0000000000406640\n.text:0000000000406644\n.text:0000000000406649\n.text:000000000040664b\n.text:000000000040664e\n.text:0000000000406651\n.text:0000000000406654\n.text:0000000000406659\n.text:000000000040665e\n.text:0000000000406662\n.text:0000000000406663\n.text:0000000000406665\n.text:0000000000406667\n.text:0000000000406669\n.text:000000000040666b\n.text:000000000040666c\n.text:0000000000406671\n'
p2876
tp2877
sS'lgetfilecon'
p2878
(S'\n__stdcall lgetfilecon(char * file, security_context_t * con)\n'
p2879
V\u000aint lgetfilecon(char *file,security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2880
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2881
S'50\ne8 3a 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2882
S'.text:000000000040d5a0\n.text:000000000040d5a1\n.text:000000000040d5a6\n.text:000000000040d5ac\n.text:000000000040d5b1\n.text:000000000040d5b2\n'
p2883
tp2884
sS'validate_timespec'
p2885
(S'\n__stdcall validate_timespec(timespec * timespec)\n'
p2886
V\u000aint validate_timespec(timespec *timespec)\u000a\u000a{\u000a  int *piVar1;\u000a  bool bVar2;\u000a  uint uVar3;\u000a  bool bVar4;\u000a  \u000a  if ((((ulong)timespec->tv_nsec < 1000000000) ||\u000a      ((timespec->tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe)) &&\u000a     (((ulong)timespec[1].tv_nsec < 1000000000 ||\u000a      ((timespec[1].tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe)))) {\u000a    bVar4 = (timespec->tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe;\u000a    if (bVar4) {\u000a      timespec->tv_sec = 0;\u000a    }\u000a    bVar2 = bVar4 && timespec->tv_nsec == 0x3ffffffe;\u000a    uVar3 = (uint)bVar4;\u000a    if ((timespec[1].tv_nsec & 0xfffffffffffffffeU) == 0x3ffffffe) {\u000a      timespec[1].tv_sec = 0;\u000a      bVar2 = (bool)(bVar2 + (timespec[1].tv_nsec == 0x3ffffffeU));\u000a      uVar3 = 1;\u000a    }\u000a    return (int)((uint)(bVar2 == true) + uVar3);\u000a  }\u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x16;\u000a  return -1;\u000a}\u000a\u000a
p2887
S'MOV RAX,qword ptr [RDI + 0x8]\nCMP RAX,0x3b9aca00\nJC 0x0040e138\nAND RAX,-0x2\nCMP RAX,0x3ffffffe\nJNZ 0x0040e150\nMOV RAX,qword ptr [RDI + 0x18]\nCMP RAX,0x3b9aca00\nJC 0x0040e166\nAND RAX,-0x2\nCMP RAX,0x3ffffffe\nJZ 0x0040e166\nPUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x16\nMOV EAX,0xffffffff\nADD RSP,0x8\nRET\nMOV RAX,qword ptr [RDI + 0x8]\nMOV RCX,RAX\nAND RCX,-0x2\nXOR EDX,EDX\nCMP RCX,0x3ffffffe\nMOV ECX,0x0\nJNZ 0x0040e198\nXOR ECX,ECX\nCMP RAX,0x3ffffffe\nSETZ CL\nMOV qword ptr [RDI],0x0\nMOV EDX,0x1\nMOV RAX,qword ptr [RDI + 0x18]\nMOV RSI,RAX\nAND RSI,-0x2\nCMP RSI,0x3ffffffe\nJNZ 0x0040e1c6\nXOR EDX,EDX\nCMP RAX,0x3ffffffe\nSETZ DL\nMOV qword ptr [RDI + 0x10],0x0\nADD ECX,EDX\nMOV EDX,0x1\nXOR EAX,EAX\nCMP ECX,0x1\nSETZ AL\nADD EAX,EDX\nRET\n'
p2888
S'48 8b 47 08\n48 3d 00 ca 9a 3b\n72 0c\n48 83 e0 fe\n48 3d fe ff ff 3f\n75 18\n48 8b 47 18\n48 3d 00 ca 9a 3b\n72 22\n48 83 e0 fe\n48 3d fe ff ff 3f\n74 16\n50\ne8 8a 41 ff ff\nc7 00 16 00 00 00\nb8 ff ff ff ff\n48 83 c4 08\nc3\n48 8b 47 08\n48 89 c1\n48 83 e1 fe\n31 d2\n48 81 f9 fe ff ff 3f\nb9 00 00 00 00\n75 17\n31 c9\n48 3d fe ff ff 3f\n0f 94 c1\n48 c7 07 00 00 00 00\nba 01 00 00 00\n48 8b 47 18\n48 89 c6\n48 83 e6 fe\n48 81 fe fe ff ff 3f\n75 1a\n31 d2\n48 3d fe ff ff 3f\n0f 94 c2\n48 c7 47 10 00 00 00 00\n01 d1\nba 01 00 00 00\n31 c0\n83 f9 01\n0f 94 c0\n01 d0\nc3\n'
p2889
S'.text:000000000040e120\n.text:000000000040e124\n.text:000000000040e12a\n.text:000000000040e12c\n.text:000000000040e130\n.text:000000000040e136\n.text:000000000040e138\n.text:000000000040e13c\n.text:000000000040e142\n.text:000000000040e144\n.text:000000000040e148\n.text:000000000040e14e\n.text:000000000040e150\n.text:000000000040e151\n.text:000000000040e156\n.text:000000000040e15c\n.text:000000000040e161\n.text:000000000040e165\n.text:000000000040e166\n.text:000000000040e16a\n.text:000000000040e16d\n.text:000000000040e171\n.text:000000000040e173\n.text:000000000040e17a\n.text:000000000040e17f\n.text:000000000040e181\n.text:000000000040e183\n.text:000000000040e189\n.text:000000000040e18c\n.text:000000000040e193\n.text:000000000040e198\n.text:000000000040e19c\n.text:000000000040e19f\n.text:000000000040e1a3\n.text:000000000040e1aa\n.text:000000000040e1ac\n.text:000000000040e1ae\n.text:000000000040e1b4\n.text:000000000040e1b7\n.text:000000000040e1bf\n.text:000000000040e1c1\n.text:000000000040e1c6\n.text:000000000040e1c8\n.text:000000000040e1cb\n.text:000000000040e1ce\n.text:000000000040e1d0\n'
p2890
tp2891
sS'set_permissions'
p2892
(S'\n__stdcall set_permissions(permission_context * ctx, char * name)\n'
p2893
V\u000aint set_permissions(permission_context *ctx,char *name)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = chmod_or_fchmod(name);\u000a  return (int)-(uint)(iVar1 != 0);\u000a}\u000a\u000a
p2894
S'PUSH RAX\nMOV EAX,dword ptr [RDI]\nMOV RDI,RSI\nMOV ESI,EDX\nMOV EDX,EAX\nCALL 0x0040f560\nNEG EAX\nSBB EAX,EAX\nPOP RCX\nRET\n'
p2895
S'50\n8b 07\n48 89 f7\n89 d6\n89 c2\ne8 d1 ff ff ff\nf7 d8\n19 c0\n59\nc3\n'
p2896
S'.text:000000000040f580\n.text:000000000040f581\n.text:000000000040f583\n.text:000000000040f586\n.text:000000000040f588\n.text:000000000040f58a\n.text:000000000040f58f\n.text:000000000040f591\n.text:000000000040f593\n.text:000000000040f594\n'
p2897
tp2898
sS'stpcpy'
p2899
(S'\n__stdcall stpcpy(char * __dest, char * __src)\n'
p2900
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * stpcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_stpcpy_006180e8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p2901
S'JMP qword ptr [0x006180e8]\n'
p2902
S'ff 25 e2 5c 21 00\n'
p2903
S'.plt:0000000000402400\n'
p2904
tp2905
sS'atexit'
p2906
(S'\n__stdcall atexit(__func * __func)\n'
p2907
V\u000a/* WARNING: Removing unreachable block (ram,0x00410780) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_00618380)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p2908
S'MOV RAX,0x6183f0\nTEST RAX,RAX\nJZ 0x00410780\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x00402930\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x00402930\n'
p2909
S'48 c7 c0 f0 83 61 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 ba 21 ff ff\n31 d2\n31 f6\ne9 a7 21 ff ff\n'
p2910
S'.text:0000000000410760\n.text:0000000000410767\n.text:000000000041076a\n.text:000000000041076c\n.text:000000000041076f\n.text:0000000000410771\n.text:0000000000410780\n.text:0000000000410782\n.text:0000000000410784\n'
p2911
tp2912
sS'can_write_any_file'
p2913
(S'\n__stdcall can_write_any_file()\n'
p2914
V\u000a_Bool can_write_any_file(void)\u000a\u000a{\u000a  _Bool can_write;\u000a  __uid_t _Var1;\u000a  \u000a  if (can_write_any_file_initialized == 0) {\u000a    _Var1 = geteuid();\u000a    can_write = (_Bool)(_Var1 == 0);\u000a    can_write_any_file_initialized = 1;\u000a  }\u000a  return can_write;\u000a}\u000a\u000a
p2915
S'MOV AL,byte ptr [0x0061aab8]\nTEST AL,AL\nJNZ 0x0040e984\nPUSH RAX\nCALL 0x00402540\nTEST EAX,EAX\nSETZ byte ptr [0x0061aab9]\nMOV byte ptr [0x0061aab8],0x1\nADD RSP,0x8\nMOV AL,byte ptr [0x0061aab9]\nRET\n'
p2916
S'8a 05 52 c1 20 00\n84 c0\n75 1a\n50\ne8 d0 3b ff ff\n85 c0\n0f 94 05 40 c1 20 00\nc6 05 38 c1 20 00 01\n48 83 c4 08\n8a 05 2f c1 20 00\nc3\n'
p2917
S'.text:000000000040e960\n.text:000000000040e966\n.text:000000000040e968\n.text:000000000040e96a\n.text:000000000040e96b\n.text:000000000040e970\n.text:000000000040e972\n.text:000000000040e979\n.text:000000000040e980\n.text:000000000040e984\n.text:000000000040e98a\n'
p2918
tp2919
sS'fdopen'
p2920
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p2921
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_006182f0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p2922
S'JMP qword ptr [0x006182f0]\n'
p2923
S'ff 25 da 5a 21 00\n'
p2924
S'.plt:0000000000402810\n'
p2925
tp2926
sS'hash_find_entry'
p2927
(S'\n__stdcall hash_find_entry(Hash_table * table, void * entry, hash_entry * * bucket_head)\n'
p2928
V\u000avoid * hash_find_entry(Hash_table *table,void *entry,hash_entry **bucket_head)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  _Bool _Var4;\u000a  hash_entry *phVar5;\u000a  hash_entry *entry_00;\u000a  char in_CL;\u000a  hash_entry **pphVar6;\u000a  void *pvVar7;\u000a  \u000a  phVar5 = safe_hasher(table,entry);\u000a  *bucket_head = phVar5;\u000a  pvVar7 = phVar5->data;\u000a  if (pvVar7 == (void *)0x0) {\u000a    return (void *)0x0;\u000a  }\u000a  if ((pvVar7 == entry) || (_Var4 = (*table->comparator)(entry,pvVar7), _Var4 != false)) {\u000a    pvVar7 = phVar5->data;\u000a    if (in_CL == 0) {\u000a      return pvVar7;\u000a    }\u000a    entry_00 = phVar5->next;\u000a    if (entry_00 == (hash_entry *)0x0) {\u000a      phVar5->data = (void *)0x0;\u000a      return pvVar7;\u000a    }\u000a    uVar1 = *(undefined4 *)((long)&entry_00->data + 4);\u000a    uVar2 = *(undefined4 *)&entry_00->next;\u000a    uVar3 = *(undefined4 *)((long)&entry_00->next + 4);\u000a    *(undefined4 *)&phVar5->data = *(undefined4 *)&entry_00->data;\u000a    *(undefined4 *)((long)&phVar5->data + 4) = uVar1;\u000a    *(undefined4 *)&phVar5->next = uVar2;\u000a    *(undefined4 *)((long)&phVar5->next + 4) = uVar3;\u000a  }\u000a  else {\u000a    entry_00 = phVar5->next;\u000a    if (entry_00 == (hash_entry *)0x0) {\u000a      return (void *)0x0;\u000a    }\u000a    while( true ) {\u000a      pphVar6 = &phVar5->next;\u000a      if ((entry_00->data == entry) ||\u000a         (_Var4 = (*table->comparator)(entry,entry_00->data), _Var4 != false)) break;\u000a      phVar5 = *pphVar6;\u000a      entry_00 = phVar5->next;\u000a      if (entry_00 == (hash_entry *)0x0) {\u000a        return (void *)0x0;\u000a      }\u000a    }\u000a    entry_00 = *pphVar6;\u000a    pvVar7 = entry_00->data;\u000a    if (in_CL == 0) {\u000a      return pvVar7;\u000a    }\u000a    *pphVar6 = entry_00->next;\u000a  }\u000a  free_entry(table,entry_00);\u000a  return pvVar7;\u000a}\u000a\u000a
p2929
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R12D,ECX\nMOV R14,RDX\nMOV RBP,RSI\nMOV R15,RDI\nCALL 0x00409a60\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RSI,qword ptr [RBX]\nTEST RSI,RSI\nJZ 0x0040a4d5\nCMP RSI,RBP\nJZ 0x0040a487\nMOV RDI,RBP\nCALL qword ptr [R15 + 0x38]\nTEST AL,AL\nJZ 0x0040a4a0\nMOV R14,qword ptr [RBX]\nTEST R12B,R12B\nJZ 0x0040a4fd\nMOV RSI,qword ptr [RBX + 0x8]\nTEST RSI,RSI\nJZ 0x0040a4da\nMOVUPS XMM0,xmmword ptr [RSI]\nMOVUPS xmmword ptr [RBX],XMM0\nJMP 0x0040a4f5\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nJZ 0x0040a4d5\nADD RBX,0x8\nXOR R14D,R14D\nMOV RSI,qword ptr [RAX]\nCMP RSI,RBP\nJZ 0x0040a4e3\nMOV RDI,RBP\nCALL qword ptr [R15 + 0x38]\nTEST AL,AL\nJNZ 0x0040a4e3\nMOV RBX,qword ptr [RBX]\nMOV RAX,qword ptr [RBX + 0x8]\nADD RBX,0x8\nTEST RAX,RAX\nJNZ 0x0040a4b0\nJMP 0x0040a4fd\nXOR R14D,R14D\nJMP 0x0040a4fd\nMOV qword ptr [RBX],0x0\nJMP 0x0040a4fd\nMOV RSI,qword ptr [RBX]\nMOV R14,qword ptr [RSI]\nTEST R12B,R12B\nJZ 0x0040a4fd\nMOV RAX,qword ptr [RSI + 0x8]\nMOV qword ptr [RBX],RAX\nMOV RDI,R15\nCALL 0x0040a7d0\nMOV RAX,R14\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2930
S'55\n41 57\n41 56\n41 54\n53\n41 89 cc\n49 89 d6\n48 89 f5\n49 89 ff\ne8 f7 f5 ff ff\n48 89 c3\n49 89 1e\n48 8b 33\n48 85 f6\n74 5e\n48 39 ee\n74 0b\n48 89 ef\n41 ff 57 38\n84 c0\n74 19\n4c 8b 33\n45 84 e4\n74 6e\n48 8b 73 08\n48 85 f6\n74 42\n0f 10 06\n0f 11 03\neb 55\n48 8b 43 08\n48 85 c0\n74 2c\n48 83 c3 08\n45 31 f6\n48 8b 30\n48 39 ee\n74 2b\n48 89 ef\n41 ff 57 38\n84 c0\n75 20\n48 8b 1b\n48 8b 43 08\n48 83 c3 08\n48 85 c0\n75 dd\neb 28\n45 31 f6\neb 23\n48 c7 03 00 00 00 00\neb 1a\n48 8b 33\n4c 8b 36\n45 84 e4\n74 0f\n48 8b 46 08\n48 89 03\n4c 89 ff\ne8 d3 02 00 00\n4c 89 f0\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p2931
S'.text:000000000040a450\n.text:000000000040a451\n.text:000000000040a453\n.text:000000000040a455\n.text:000000000040a457\n.text:000000000040a458\n.text:000000000040a45b\n.text:000000000040a45e\n.text:000000000040a461\n.text:000000000040a464\n.text:000000000040a469\n.text:000000000040a46c\n.text:000000000040a46f\n.text:000000000040a472\n.text:000000000040a475\n.text:000000000040a477\n.text:000000000040a47a\n.text:000000000040a47c\n.text:000000000040a47f\n.text:000000000040a483\n.text:000000000040a485\n.text:000000000040a487\n.text:000000000040a48a\n.text:000000000040a48d\n.text:000000000040a48f\n.text:000000000040a493\n.text:000000000040a496\n.text:000000000040a498\n.text:000000000040a49b\n.text:000000000040a49e\n.text:000000000040a4a0\n.text:000000000040a4a4\n.text:000000000040a4a7\n.text:000000000040a4a9\n.text:000000000040a4ad\n.text:000000000040a4b0\n.text:000000000040a4b3\n.text:000000000040a4b6\n.text:000000000040a4b8\n.text:000000000040a4bb\n.text:000000000040a4bf\n.text:000000000040a4c1\n.text:000000000040a4c3\n.text:000000000040a4c6\n.text:000000000040a4ca\n.text:000000000040a4ce\n.text:000000000040a4d1\n.text:000000000040a4d3\n.text:000000000040a4d5\n.text:000000000040a4d8\n.text:000000000040a4da\n.text:000000000040a4e1\n.text:000000000040a4e3\n.text:000000000040a4e6\n.text:000000000040a4e9\n.text:000000000040a4ec\n.text:000000000040a4ee\n.text:000000000040a4f2\n.text:000000000040a4f5\n.text:000000000040a4f8\n.text:000000000040a4fd\n.text:000000000040a500\n.text:000000000040a501\n.text:000000000040a503\n.text:000000000040a505\n.text:000000000040a507\n.text:000000000040a508\n'
p2932
tp2933
sS'error'
p2934
(S'\n__stdcall error()\n'
p2935
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_00618320)();\u000a  return;\u000a}\u000a\u000a
p2936
S'JMP qword ptr [0x00618320]\n'
p2937
S'ff 25 aa 5a 21 00\n'
p2938
S'.plt:0000000000402870\n'
p2939
tp2940
sS'writable_destination'
p2941
(S'\n__stdcall writable_destination(char * file)\n'
p2942
V\u000a_Bool writable_destination(char *file)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  undefined8 in_RSI;\u000a  bool bVar3;\u000a  \u000a  bVar3 = true;\u000a  if (((uint)in_RSI & 0xf000) != 0xa000) {\u000a    _Var1 = can_write_any_file();\u000a    if (_Var1 == false) {\u000a      iVar2 = euidaccess(file,2);\u000a      bVar3 = iVar2 == 0;\u000a    }\u000a  }\u000a  return (_Bool)bVar3;\u000a}\u000a\u000a
p2943
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nAND ESI,0xf000\nMOV BL,0x1\nCMP ESI,0xa000\nJZ 0x004079d2\nCALL 0x0040e960\nTEST AL,AL\nJNZ 0x004079d2\nMOV ESI,0x2\nMOV RDI,R14\nCALL 0x00402910\nTEST EAX,EAX\nSETZ BL\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p2944
S'41 56\n53\n50\n49 89 fe\n81 e6 00 f0 00 00\nb3 01\n81 fe 00 a0 00 00\n74 1b\ne8 a4 6f 00 00\n84 c0\n75 12\nbe 02 00 00 00\n4c 89 f7\ne8 43 af ff ff\n85 c0\n0f 94 c3\n89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p2945
S'.text:00000000004079a0\n.text:00000000004079a2\n.text:00000000004079a3\n.text:00000000004079a4\n.text:00000000004079a7\n.text:00000000004079ad\n.text:00000000004079af\n.text:00000000004079b5\n.text:00000000004079b7\n.text:00000000004079bc\n.text:00000000004079be\n.text:00000000004079c0\n.text:00000000004079c5\n.text:00000000004079c8\n.text:00000000004079cd\n.text:00000000004079cf\n.text:00000000004079d2\n.text:00000000004079d4\n.text:00000000004079d8\n.text:00000000004079d9\n.text:00000000004079db\n'
p2946
tp2947
sS'hash_init'
p2948
(S'\n__stdcall hash_init()\n'
p2949
V\u000aundefined8 hash_init(void)\u000a\u000a{\u000a  undefined8 in_RAX;\u000a  \u000a  src_to_dest = hash_initialize(0x67,(Hash_tuning *)0x0,src_to_dest_hash,src_to_dest_compare,\u000a                                src_to_dest_free);\u000a  if (src_to_dest != (Hash_table *)0x0) {\u000a    return in_RAX;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p2950
S'PUSH RAX\nMOV EDI,0x67\nXOR ESI,ESI\nMOV EDX,0x408630\nMOV ECX,0x408640\nMOV R8D,0x408530\nCALL 0x00409c70\nMOV qword ptr [0x0061a930],RAX\nTEST RAX,RAX\nJZ 0x0040862b\nPOP RAX\nRET\nCALL 0x0040eb40\n'
p2951
S'50\nbf 67 00 00 00\n31 f6\nba 30 86 40 00\nb9 40 86 40 00\n41 b8 30 85 40 00\ne8 53 16 00 00\n48 89 05 0c 23 21 00\n48 85 c0\n74 02\n58\nc3\ne8 10 65 00 00\n'
p2952
S'.text:0000000000408600\n.text:0000000000408601\n.text:0000000000408606\n.text:0000000000408608\n.text:000000000040860d\n.text:0000000000408612\n.text:0000000000408618\n.text:000000000040861d\n.text:0000000000408624\n.text:0000000000408627\n.text:0000000000408629\n.text:000000000040862a\n.text:000000000040862b\n'
p2953
tp2954
sS'raw_comparator'
p2955
(S'\n__stdcall raw_comparator(void * a, void * b)\n'
p2956
V\u000a_Bool raw_comparator(void *a,void *b)\u000a\u000a{\u000a  return (_Bool)(a == b);\u000a}\u000a\u000a
p2957
S'CMP RDI,RSI\nSETZ AL\nRET\n'
p2958
S'48 39 f7\n0f 94 c0\nc3\n'
p2959
S'.text:0000000000409d70\n.text:0000000000409d73\n.text:0000000000409d76\n'
p2960
tp2961
sS'strcaseeq6'
p2962
(S'\n__stdcall strcaseeq6()\n'
p2963
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p2964
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x0040ca82\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040ca89\nJMP 0x0040ca9e\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040ca9e\nTEST BPL,BPL\nJZ 0x0040ca99\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x0040cab0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p2965
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 61 30 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p2966
S'.text:000000000040ca60\n.text:000000000040ca61\n.text:000000000040ca62\n.text:000000000040ca63\n.text:000000000040ca65\n.text:000000000040ca68\n.text:000000000040ca6a\n.text:000000000040ca6f\n.text:000000000040ca73\n.text:000000000040ca75\n.text:000000000040ca77\n.text:000000000040ca7a\n.text:000000000040ca7c\n.text:000000000040ca7e\n.text:000000000040ca80\n.text:000000000040ca82\n.text:000000000040ca84\n.text:000000000040ca87\n.text:000000000040ca89\n.text:000000000040ca8c\n.text:000000000040ca8e\n.text:000000000040ca91\n.text:000000000040ca95\n.text:000000000040ca96\n.text:000000000040ca97\n.text:000000000040ca99\n.text:000000000040ca9e\n.text:000000000040caa2\n.text:000000000040caa3\n.text:000000000040caa4\n'
p2967
tp2968
sS'strcaseeq5'
p2969
(S'\n__stdcall strcaseeq5()\n'
p2970
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p2971
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x0040ca36\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040ca3d\nJMP 0x0040ca54\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040ca54\nTEST BPL,BPL\nJZ 0x0040ca4f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x0040ca60\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p2972
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 ad 30 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p2973
S'.text:000000000040ca10\n.text:000000000040ca11\n.text:000000000040ca13\n.text:000000000040ca14\n.text:000000000040ca17\n.text:000000000040ca19\n.text:000000000040ca1c\n.text:000000000040ca1e\n.text:000000000040ca23\n.text:000000000040ca27\n.text:000000000040ca29\n.text:000000000040ca2b\n.text:000000000040ca2e\n.text:000000000040ca30\n.text:000000000040ca32\n.text:000000000040ca34\n.text:000000000040ca36\n.text:000000000040ca38\n.text:000000000040ca3b\n.text:000000000040ca3d\n.text:000000000040ca40\n.text:000000000040ca42\n.text:000000000040ca46\n.text:000000000040ca49\n.text:000000000040ca4a\n.text:000000000040ca4c\n.text:000000000040ca4d\n.text:000000000040ca4f\n.text:000000000040ca54\n.text:000000000040ca55\n.text:000000000040ca57\n.text:000000000040ca58\n'
p2974
tp2975
sS'defaultcon'
p2976
(S'\n__stdcall defaultcon()\n'
p2977
V\u000aint defaultcon(void)\u000a\u000a{\u000a  int in_EAX;\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return in_EAX;\u000a}\u000a\u000a
p2978
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nPOP RAX\nRET\n'
p2979
S'50\ne8 da a8 ff ff\nc7 00 5f 00 00 00\n58\nc3\n'
p2980
S'.text:0000000000407a00\n.text:0000000000407a01\n.text:0000000000407a06\n.text:0000000000407a0c\n.text:0000000000407a0d\n'
p2981
tp2982
sS'strcaseeq7'
p2983
(S'\n__stdcall strcaseeq7()\n'
p2984
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p2985
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x0040cad2\nTEST ECX,0xffffffdf\nJNZ 0x0040cad6\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x0040cada\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p2986
S'53\n48 89 fb\n31 ff\ne8 15 30 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p2987
S'.text:000000000040cab0\n.text:000000000040cab1\n.text:000000000040cab4\n.text:000000000040cab6\n.text:000000000040cabb\n.text:000000000040cabf\n.text:000000000040cac1\n.text:000000000040cac3\n.text:000000000040cac9\n.text:000000000040cacb\n.text:000000000040cad0\n.text:000000000040cad1\n.text:000000000040cad2\n.text:000000000040cad4\n.text:000000000040cad6\n.text:000000000040cad8\n.text:000000000040cad9\n.text:000000000040cada\n.text:000000000040cadf\n.text:000000000040cae0\n'
p2988
tp2989
sS'fdutimens'
p2990
(S'\n__stdcall fdutimens(char * file, timespec * timespec)\n'
p2991
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000aint fdutimens(char *file,timespec *timespec)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  timespec *ptVar3;\u000a  _Bool _Var4;\u000a  int iVar5;\u000a  int iVar6;\u000a  int __fd;\u000a  int *piVar7;\u000a  long lVar8;\u000a  timespec *in_RDX;\u000a  timeval *__tvp;\u000a  timeval *__tvp_00;\u000a  timespec tVar9;\u000a  timeval truncated_timeval [2];\u000a  timeval timeval [2];\u000a  timespec adjusted_timespec [2];\u000a  timespec *local_120;\u000a  undefined4 local_118;\u000a  undefined4 uStack276;\u000a  __suseconds_t local_110;\u000a  undefined4 local_108;\u000a  undefined4 uStack260;\u000a  __suseconds_t local_100;\u000a  timeval local_f8;\u000a  __time_t local_e8;\u000a  long local_e0;\u000a  undefined4 local_d8;\u000a  undefined4 uStack212;\u000a  undefined4 uStack208;\u000a  undefined4 uStack204;\u000a  undefined4 local_c8;\u000a  undefined4 uStack196;\u000a  undefined4 uStack192;\u000a  undefined4 uStack188;\u000a  stat local_b8;\u000a  \u000a  __fd = (int)file;\u000a  local_120 = (timespec *)&local_d8;\u000a  if (in_RDX == (timespec *)0x0) {\u000a    iVar5 = 0;\u000a    local_120 = in_RDX;\u000a  }\u000a  else {\u000a    local_d8 = *(undefined4 *)&in_RDX->tv_sec;\u000a    uStack212 = *(undefined4 *)((long)&in_RDX->tv_sec + 4);\u000a    uStack208 = *(undefined4 *)&in_RDX->tv_nsec;\u000a    uStack204 = *(undefined4 *)((long)&in_RDX->tv_nsec + 4);\u000a    local_c8 = *(undefined4 *)&in_RDX[1].tv_sec;\u000a    uStack196 = *(undefined4 *)((long)&in_RDX[1].tv_sec + 4);\u000a    uStack192 = *(undefined4 *)&in_RDX[1].tv_nsec;\u000a    uStack188 = *(undefined4 *)((long)&in_RDX[1].tv_nsec + 4);\u000a    iVar5 = validate_timespec(local_120);\u000a    if (iVar5 < 0) {\u000a      return -1;\u000a    }\u000a  }\u000a  if ((__fd < 0) && (timespec == (timespec *)0x0)) {\u000a    piVar7 = __errno_location();\u000a    *piVar7 = 9;\u000a    return -1;\u000a  }\u000a  if (utimensat_works_really < 0) goto LAB_0040df05;\u000a  if (iVar5 == 2) {\u000a    if (__fd < 0) {\u000a      iVar5 = stat((char *)timespec,(stat *)&local_b8);\u000a    }\u000a    else {\u000a      iVar5 = fstat(__fd,(stat *)&local_b8);\u000a    }\u000a    ptVar3 = local_120;\u000a    if (iVar5 != 0) {\u000a      return -1;\u000a    }\u000a    if (local_120->tv_nsec == 0x3ffffffe) {\u000a      tVar9 = get_stat_atime(&local_b8);\u000a      lVar8 = 0;\u000a    }\u000a    else {\u000a      iVar5 = 3;\u000a      if (local_120[1].tv_nsec != 0x3ffffffe) goto LAB_0040de8d;\u000a      tVar9 = get_stat_mtime(&local_b8);\u000a      lVar8 = 1;\u000a    }\u000a    ptVar3[lVar8].tv_sec = SUB168((undefined  [16])tVar9,0);\u000a    ptVar3[lVar8].tv_nsec = SUB168((undefined  [16])tVar9 >> 0x40,0);\u000a    iVar5 = 3;\u000a  }\u000aLAB_0040de8d:\u000a  if (__fd < 0) {\u000a    iVar6 = utimensat(-100,(char *)timespec,(timespec *)local_120,0);\u000a    if (iVar6 < 1) {\u000a      if (iVar6 == 0) {\u000a        utimensat_works_really = 1;\u000a        return 0;\u000a      }\u000a    }\u000a    else {\u000a      piVar7 = __errno_location();\u000a      *piVar7 = 0x26;\u000a    }\u000a    piVar7 = __errno_location();\u000a    if (*piVar7 != 0x26) {\u000a      utimensat_works_really = 1;\u000a      return iVar6;\u000a    }\u000a  }\u000a  if (-1 < __fd) {\u000a    iVar6 = futimens(__fd,(timespec *)local_120);\u000a    if (iVar6 < 1) {\u000a      if (iVar6 == 0) {\u000a        utimensat_works_really = 1;\u000a        return 0;\u000a      }\u000a    }\u000a    else {\u000a      piVar7 = __errno_location();\u000a      *piVar7 = 0x26;\u000a    }\u000a    piVar7 = __errno_location();\u000a    if (*piVar7 != 0x26) {\u000a      utimensat_works_really = 1;\u000a      return iVar6;\u000a    }\u000a  }\u000aLAB_0040df05:\u000a  utimensat_works_really = -1;\u000a  lutimensat_works_really = -1;\u000a  if (iVar5 != 0) {\u000a    if (iVar5 != 3) {\u000a      if (__fd < 0) {\u000a        iVar5 = stat((char *)timespec,(stat *)&local_b8);\u000a      }\u000a      else {\u000a        iVar5 = fstat(__fd,(stat *)&local_b8);\u000a      }\u000a      if (iVar5 != 0) {\u000a        return -1;\u000a      }\u000a    }\u000a    if ((local_120 != (timespec *)0x0) &&\u000a       (_Var4 = update_timespec(&local_b8,&local_120), _Var4 != false)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (local_120 == (timespec *)0x0) {\u000a    __tvp = (timeval *)0x0;\u000a  }\u000a  else {\u000a    local_f8.tv_sec = local_120->tv_sec;\u000a    local_f8.tv_usec = SUB168(SEXT816(0x20c49ba5e353f7cf) * SEXT816(local_120->tv_nsec) >> 0x47,0);\u000a    local_e8 = local_120[1].tv_sec;\u000a    local_e0 = SUB168(SEXT816(0x20c49ba5e353f7cf) * SEXT816(local_120[1].tv_nsec) >> 0x47,0);\u000a    __tvp = &local_f8;\u000a  }\u000a  if (-1 < __fd) {\u000a    iVar5 = futimesat(__fd,(char *)0x0,__tvp);\u000a    if (iVar5 != 0) {\u000a      if (timespec == (timespec *)0x0) {\u000a        return -1;\u000a      }\u000a      __fd = utimes((char *)timespec,__tvp);\u000a      return __fd;\u000a    }\u000a    if (__tvp != (timeval *)0x0) {\u000a      lVar8 = __tvp->tv_usec;\u000a      lVar1 = __tvp[1].tv_usec;\u000a      if ((lVar8 < 500000) && (lVar1 < 500000)) {\u000a        return 0;\u000a      }\u000a      iVar5 = fstat(__fd,(stat *)&local_b8);\u000a      if (iVar5 != 0) {\u000a        return 0;\u000a      }\u000a      lVar2 = __tvp[1].tv_sec;\u000a      local_118 = *(undefined4 *)&__tvp->tv_sec;\u000a      uStack276 = *(undefined4 *)((long)&__tvp->tv_sec + 4);\u000a      local_110 = __tvp->tv_usec;\u000a      local_108 = *(undefined4 *)&__tvp[1].tv_sec;\u000a      uStack260 = *(undefined4 *)((long)&__tvp[1].tv_sec + 4);\u000a      local_100 = __tvp[1].tv_usec;\u000a      __tvp_00 = (timeval *)0x0;\u000a      if ((499999 < lVar8) && (local_b8.st_atim.tv_sec - __tvp->tv_sec == 1)) {\u000a        lVar8 = get_stat_atime_ns(&local_b8);\u000a        if (lVar8 == 0) {\u000a          __tvp_00 = (timeval *)&local_118;\u000a          local_110 = 0;\u000a        }\u000a        else {\u000a          __tvp_00 = (timeval *)0x0;\u000a        }\u000a      }\u000a      if (((lVar1 < 500000) || (local_b8.st_mtim.tv_sec - lVar2 != 1)) ||\u000a         (lVar8 = get_stat_mtime_ns(&local_b8), lVar8 != 0)) {\u000a        if (__tvp_00 == (timeval *)0x0) {\u000a          return 0;\u000a        }\u000a      }\u000a      else {\u000a        __tvp_00 = (timeval *)&local_118;\u000a        local_100 = 0;\u000a      }\u000a      futimesat(__fd,(char *)0x0,__tvp_00);\u000a      return 0;\u000a    }\u000a    return 0;\u000a  }\u000a  __fd = futimesat(-100,(char *)timespec,__tvp);\u000a  return __fd;\u000a}\u000a\u000a
p2992
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x100\nMOV R14,RSI\nMOV R15D,EDI\nTEST RDX,RDX\nLEA RAX,[RSP + 0x50]\nCMOVZ RAX,RDX\nMOV qword ptr [RSP + 0x8],RAX\nJZ 0x0040dddb\nMOVUPS XMM0,xmmword ptr [RDX]\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVUPS XMM0,xmmword ptr [RDX + 0x10]\nMOVAPS xmmword ptr [RSP + 0x60],XMM0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x0040e120\nMOV EBP,EAX\nTEST EBP,EBP\nJNS 0x0040dddd\nJMP 0x0040ddf2\nXOR EBP,EBP\nTEST R15D,R15D\nJNS 0x0040de09\nTEST R14,R14\nJNZ 0x0040de09\nCALL 0x004022e0\nMOV dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nMOV EAX,EBX\nADD RSP,0x100\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP dword ptr [0x0061aab0],0x0\nJS 0x0040df05\nCMP EBP,0x2\nJNZ 0x0040de8d\nLEA RSI,[RSP + 0x70]\nTEST R15D,R15D\nJS 0x0040de2f\nMOV EDI,R15D\nCALL 0x004107a0\nJMP 0x0040de37\nMOV RDI,R14\nCALL 0x00410790\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040ddf7\nMOV RBX,qword ptr [RSP + 0x8]\nCMP qword ptr [RBX + 0x8],0x3ffffffe\nJNZ 0x0040de5d\nLEA RDI,[RSP + 0x70]\nCALL 0x0040d730\nXOR ECX,ECX\nJMP 0x0040de7b\nMOV EBP,0x3\nCMP qword ptr [RBX + 0x18],0x3ffffffe\nJNZ 0x0040de8d\nLEA RDI,[RSP + 0x70]\nCALL 0x0040d750\nMOV ECX,0x1\nSHL RCX,0x4\nMOV qword ptr [RBX + RCX*0x1],RAX\nMOV qword ptr [RBX + RCX*0x1 + 0x8],RDX\nMOV EBP,0x3\nTEST R15D,R15D\nJNS 0x0040dec5\nMOV RDX,qword ptr [RSP + 0x8]\nMOV EDI,0xffffff9c\nXOR ECX,ECX\nMOV RSI,R14\nCALL 0x004022a0\nMOV EBX,EAX\nTEST EBX,EBX\nJLE 0x0040deb9\nCALL 0x004022e0\nMOV dword ptr [RAX],0x26\nJMP 0x0040debb\nJZ 0x0040deea\nCALL 0x004022e0\nCMP dword ptr [RAX],0x26\nJNZ 0x0040deea\nTEST R15D,R15D\nJS 0x0040df05\nMOV RSI,qword ptr [RSP + 0x8]\nMOV EDI,R15D\nCALL 0x00402900\nMOV EBX,EAX\nTEST EBX,EBX\nJLE 0x0040def9\nCALL 0x004022e0\nMOV dword ptr [RAX],0x26\nJMP 0x0040defb\nMOV dword ptr [0x0061aab0],0x1\nJMP 0x0040ddf7\nJZ 0x0040df36\nCALL 0x004022e0\nCMP dword ptr [RAX],0x26\nJNZ 0x0040df36\nMOV dword ptr [0x0061aab0],0xffffffff\nMOV dword ptr [0x0061aab4],0xffffffff\nTEST EBP,EBP\nJZ 0x0040df7b\nCMP EBP,0x3\nJZ 0x0040df5a\nLEA RSI,[RSP + 0x70]\nTEST R15D,R15D\nJS 0x0040df45\nMOV EDI,R15D\nCALL 0x004107a0\nJMP 0x0040df4d\nMOV dword ptr [0x0061aab0],0x1\nJMP 0x0040ddf7\nMOV RDI,R14\nCALL 0x00410790\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040ddf7\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x0040df7b\nLEA RDI,[RSP + 0x70]\nLEA RSI,[RSP + 0x8]\nCALL 0x0040e1e0\nXOR EBX,EBX\nTEST AL,AL\nJNZ 0x0040ddf7\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040dfe5\nMOV RAX,qword ptr [RAX]\nMOV qword ptr [RSP + 0x30],RAX\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RCX,0x20c49ba5e353f7cf\nMOV RAX,RCX\nIMUL qword ptr [RSI + 0x8]\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x7\nADD RDX,RAX\nMOV qword ptr [RSP + 0x38],RDX\nMOV RAX,qword ptr [RSI + 0x10]\nMOV qword ptr [RSP + 0x40],RAX\nMOV RAX,RCX\nIMUL qword ptr [RSI + 0x18]\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x7\nADD RDX,RAX\nMOV qword ptr [RSP + 0x48],RDX\nLEA RBP,[RSP + 0x30]\nTEST R15D,R15D\nJNS 0x0040dfec\nJMP 0x0040e015\nXOR EBP,EBP\nTEST R15D,R15D\nJS 0x0040e015\nXOR EBX,EBX\nXOR ESI,ESI\nMOV EDI,R15D\nMOV RDX,RBP\nCALL 0x004029d0\nTEST EAX,EAX\nJZ 0x0040e02c\nTEST R14,R14\nJZ 0x0040ddf2\nMOV RDI,R14\nMOV RSI,RBP\nCALL 0x00402620\nJMP 0x0040e025\nMOV EDI,0xffffff9c\nMOV RSI,R14\nMOV RDX,RBP\nCALL 0x004029d0\nMOV EBX,EAX\nJMP 0x0040ddf7\nTEST RBP,RBP\nJZ 0x0040ddf7\nMOV R12,qword ptr [RBP + 0x8]\nMOV R14,qword ptr [RBP + 0x18]\nCMP R12,0x7a11f\nJG 0x0040e053\nCMP R14,0x7a120\nJL 0x0040ddf7\nLEA RSI,[RSP + 0x70]\nMOV EDI,R15D\nCALL 0x004107a0\nTEST EAX,EAX\nJNZ 0x0040ddf7\nLEA RCX,[RBP + 0x10]\nMOV RAX,qword ptr [0xb8 + RSP]\nMOV RBX,qword ptr [0xc8 + RSP]\nSUB RAX,qword ptr [RBP]\nSUB RBX,qword ptr [RBP + 0x10]\nMOVUPS XMM0,xmmword ptr [RBP]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [RCX]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nXOR EBP,EBP\nCMP R12,0x7a120\nJL 0x0040e0d0\nCMP RAX,0x1\nJNZ 0x0040e0d0\nLEA RDI,[RSP + 0x70]\nCALL 0x0040d6f0\nTEST RAX,RAX\nJZ 0x0040e0c2\nXOR EBP,EBP\nCMP R14,0x7a120\nJGE 0x0040e0d9\nJMP 0x0040e0ee\nLEA RBP,[RSP + 0x10]\nMOV qword ptr [RSP + 0x18],0x0\nCMP R14,0x7a120\nJL 0x0040e0ee\nCMP RBX,0x1\nJNZ 0x0040e0ee\nLEA RDI,[RSP + 0x70]\nCALL 0x0040d710\nTEST RAX,RAX\nJZ 0x0040e0f5\nTEST RBP,RBP\nJNZ 0x0040e103\nJMP 0x0040e110\nLEA RBP,[RSP + 0x10]\nMOV qword ptr [RSP + 0x28],0x0\nXOR ESI,ESI\nMOV EDI,R15D\nMOV RDX,RBP\nCALL 0x004029d0\nXOR EBX,EBX\nJMP 0x0040ddf7\n'
p2993
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec 00 01 00 00\n49 89 f6\n41 89 ff\n48 85 d2\n48 8d 44 24 50\n48 0f 44 c2\n48 89 44 24 08\n74 23\n0f 10 02\n0f 29 44 24 50\n0f 10 42 10\n0f 29 44 24 60\n48 8b 7c 24 08\ne8 4d 03 00 00\n89 c5\n85 ed\n79 04\neb 17\n31 ed\n45 85 ff\n79 27\n4d 85 f6\n75 22\ne8 f4 44 ff ff\nc7 00 09 00 00 00\nbb ff ff ff ff\n89 d8\n48 81 c4 00 01 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n83 3d a0 cc 20 00 00\n0f 88 ef 00 00 00\n83 fd 02\n75 72\n48 8d 74 24 70\n45 85 ff\n78 0a\n44 89 ff\ne8 73 29 00 00\neb 08\n4c 89 f7\ne8 59 29 00 00\nbb ff ff ff ff\n85 c0\n75 b7\n48 8b 5c 24 08\n48 81 7b 08 fe ff ff 3f\n75 0e\n48 8d 7c 24 70\ne8 d7 f8 ff ff\n31 c9\neb 1e\nbd 03 00 00 00\n48 81 7b 18 fe ff ff 3f\n75 21\n48 8d 7c 24 70\ne8 da f8 ff ff\nb9 01 00 00 00\n48 c1 e1 04\n48 89 04 0b\n48 89 54 0b 08\nbd 03 00 00 00\n45 85 ff\n79 33\n48 8b 54 24 08\nbf 9c ff ff ff\n31 c9\n4c 89 f6\ne8 fa 43 ff ff\n89 c3\n85 db\n7e 0d\ne8 2f 44 ff ff\nc7 00 26 00 00 00\neb 02\n74 2f\ne8 20 44 ff ff\n83 38 26\n75 25\n45 85 ff\n78 3b\n48 8b 74 24 08\n44 89 ff\ne8 29 4a ff ff\n89 c3\n85 db\n7e 1c\ne8 fe 43 ff ff\nc7 00 26 00 00 00\neb 11\nc7 05 bc cb 20 00 01 00 00 00\ne9 fe fe ff ff\n74 3b\ne8 e0 43 ff ff\n83 38 26\n75 31\nc7 05 a1 cb 20 00 ff ff ff ff\nc7 05 9b cb 20 00 ff ff ff ff\n85 ed\n74 5e\n83 fd 03\n74 38\n48 8d 74 24 70\n45 85 ff\n78 19\n44 89 ff\ne8 6c 28 00 00\neb 17\nc7 05 70 cb 20 00 01 00 00 00\ne9 b2 fe ff ff\n4c 89 f7\ne8 43 28 00 00\nbb ff ff ff ff\n85 c0\n0f 85 9d fe ff ff\n48 83 7c 24 08 00\n74 19\n48 8d 7c 24 70\n48 8d 74 24 08\ne8 6f 02 00 00\n31 db\n84 c0\n0f 85 7c fe ff ff\n48 8b 44 24 08\n48 85 c0\n74 60\n48 8b 00\n48 89 44 24 30\n48 8b 74 24 08\n48 b9 cf f7 53 e3 a5 9b c4 20\n48 89 c8\n48 f7 6e 08\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 07\n48 01 c2\n48 89 54 24 38\n48 8b 46 10\n48 89 44 24 40\n48 89 c8\n48 f7 6e 18\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 07\n48 01 c2\n48 89 54 24 48\n48 8d 6c 24 30\n45 85 ff\n79 09\neb 30\n31 ed\n45 85 ff\n78 29\n31 db\n31 f6\n44 89 ff\n48 89 ea\ne8 d5 49 ff ff\n85 c0\n74 2d\n4d 85 f6\n0f 84 ea fd ff ff\n4c 89 f7\n48 89 ee\ne8 0d 46 ff ff\neb 10\nbf 9c ff ff ff\n4c 89 f6\n48 89 ea\ne8 ab 49 ff ff\n89 c3\ne9 cb fd ff ff\n48 85 ed\n0f 84 c2 fd ff ff\n4c 8b 65 08\n4c 8b 75 18\n49 81 fc 1f a1 07 00\n7f 0d\n49 81 fe 20 a1 07 00\n0f 8c a4 fd ff ff\n48 8d 74 24 70\n44 89 ff\ne8 40 27 00 00\n85 c0\n0f 85 8f fd ff ff\n48 8d 4d 10\n48 8b 84 24 b8 00 00 00\n48 8b 9c 24 c8 00 00 00\n48 2b 45 00\n48 2b 5d 10\n0f 10 45 00\n0f 29 44 24 10\n0f 10 01\n0f 29 44 24 20\n31 ed\n49 81 fc 20 a1 07 00\n7c 30\n48 83 f8 01\n75 2a\n48 8d 7c 24 70\ne8 40 f6 ff ff\n48 85 c0\n74 0d\n31 ed\n49 81 fe 20 a1 07 00\n7d 19\neb 2c\n48 8d 6c 24 10\n48 c7 44 24 18 00 00 00 00\n49 81 fe 20 a1 07 00\n7c 15\n48 83 fb 01\n75 0f\n48 8d 7c 24 70\ne8 27 f6 ff ff\n48 85 c0\n74 07\n48 85 ed\n75 10\neb 1b\n48 8d 6c 24 10\n48 c7 44 24 28 00 00 00 00\n31 f6\n44 89 ff\n48 89 ea\ne8 c0 48 ff ff\n31 db\ne9 e0 fc ff ff\n'
p2994
S'.text:000000000040dd90\n.text:000000000040dd91\n.text:000000000040dd93\n.text:000000000040dd95\n.text:000000000040dd97\n.text:000000000040dd98\n.text:000000000040dd9f\n.text:000000000040dda2\n.text:000000000040dda5\n.text:000000000040dda8\n.text:000000000040ddad\n.text:000000000040ddb1\n.text:000000000040ddb6\n.text:000000000040ddb8\n.text:000000000040ddbb\n.text:000000000040ddc0\n.text:000000000040ddc4\n.text:000000000040ddc9\n.text:000000000040ddce\n.text:000000000040ddd3\n.text:000000000040ddd5\n.text:000000000040ddd7\n.text:000000000040ddd9\n.text:000000000040dddb\n.text:000000000040dddd\n.text:000000000040dde0\n.text:000000000040dde2\n.text:000000000040dde5\n.text:000000000040dde7\n.text:000000000040ddec\n.text:000000000040ddf2\n.text:000000000040ddf7\n.text:000000000040ddf9\n.text:000000000040de00\n.text:000000000040de01\n.text:000000000040de03\n.text:000000000040de05\n.text:000000000040de07\n.text:000000000040de08\n.text:000000000040de09\n.text:000000000040de10\n.text:000000000040de16\n.text:000000000040de19\n.text:000000000040de1b\n.text:000000000040de20\n.text:000000000040de23\n.text:000000000040de25\n.text:000000000040de28\n.text:000000000040de2d\n.text:000000000040de2f\n.text:000000000040de32\n.text:000000000040de37\n.text:000000000040de3c\n.text:000000000040de3e\n.text:000000000040de40\n.text:000000000040de45\n.text:000000000040de4d\n.text:000000000040de4f\n.text:000000000040de54\n.text:000000000040de59\n.text:000000000040de5b\n.text:000000000040de5d\n.text:000000000040de62\n.text:000000000040de6a\n.text:000000000040de6c\n.text:000000000040de71\n.text:000000000040de76\n.text:000000000040de7b\n.text:000000000040de7f\n.text:000000000040de83\n.text:000000000040de88\n.text:000000000040de8d\n.text:000000000040de90\n.text:000000000040de92\n.text:000000000040de97\n.text:000000000040de9c\n.text:000000000040de9e\n.text:000000000040dea1\n.text:000000000040dea6\n.text:000000000040dea8\n.text:000000000040deaa\n.text:000000000040deac\n.text:000000000040deb1\n.text:000000000040deb7\n.text:000000000040deb9\n.text:000000000040debb\n.text:000000000040dec0\n.text:000000000040dec3\n.text:000000000040dec5\n.text:000000000040dec8\n.text:000000000040deca\n.text:000000000040decf\n.text:000000000040ded2\n.text:000000000040ded7\n.text:000000000040ded9\n.text:000000000040dedb\n.text:000000000040dedd\n.text:000000000040dee2\n.text:000000000040dee8\n.text:000000000040deea\n.text:000000000040def4\n.text:000000000040def9\n.text:000000000040defb\n.text:000000000040df00\n.text:000000000040df03\n.text:000000000040df05\n.text:000000000040df0f\n.text:000000000040df19\n.text:000000000040df1b\n.text:000000000040df1d\n.text:000000000040df20\n.text:000000000040df22\n.text:000000000040df27\n.text:000000000040df2a\n.text:000000000040df2c\n.text:000000000040df2f\n.text:000000000040df34\n.text:000000000040df36\n.text:000000000040df40\n.text:000000000040df45\n.text:000000000040df48\n.text:000000000040df4d\n.text:000000000040df52\n.text:000000000040df54\n.text:000000000040df5a\n.text:000000000040df60\n.text:000000000040df62\n.text:000000000040df67\n.text:000000000040df6c\n.text:000000000040df71\n.text:000000000040df73\n.text:000000000040df75\n.text:000000000040df7b\n.text:000000000040df80\n.text:000000000040df83\n.text:000000000040df85\n.text:000000000040df88\n.text:000000000040df8d\n.text:000000000040df92\n.text:000000000040df9c\n.text:000000000040df9f\n.text:000000000040dfa3\n.text:000000000040dfa6\n.text:000000000040dfaa\n.text:000000000040dfae\n.text:000000000040dfb1\n.text:000000000040dfb6\n.text:000000000040dfba\n.text:000000000040dfbf\n.text:000000000040dfc2\n.text:000000000040dfc6\n.text:000000000040dfc9\n.text:000000000040dfcd\n.text:000000000040dfd1\n.text:000000000040dfd4\n.text:000000000040dfd9\n.text:000000000040dfde\n.text:000000000040dfe1\n.text:000000000040dfe3\n.text:000000000040dfe5\n.text:000000000040dfe7\n.text:000000000040dfea\n.text:000000000040dfec\n.text:000000000040dfee\n.text:000000000040dff0\n.text:000000000040dff3\n.text:000000000040dff6\n.text:000000000040dffb\n.text:000000000040dffd\n.text:000000000040dfff\n.text:000000000040e002\n.text:000000000040e008\n.text:000000000040e00b\n.text:000000000040e00e\n.text:000000000040e013\n.text:000000000040e015\n.text:000000000040e01a\n.text:000000000040e01d\n.text:000000000040e020\n.text:000000000040e025\n.text:000000000040e027\n.text:000000000040e02c\n.text:000000000040e02f\n.text:000000000040e035\n.text:000000000040e039\n.text:000000000040e03d\n.text:000000000040e044\n.text:000000000040e046\n.text:000000000040e04d\n.text:000000000040e053\n.text:000000000040e058\n.text:000000000040e05b\n.text:000000000040e060\n.text:000000000040e062\n.text:000000000040e068\n.text:000000000040e06c\n.text:000000000040e074\n.text:000000000040e07c\n.text:000000000040e080\n.text:000000000040e084\n.text:000000000040e088\n.text:000000000040e08d\n.text:000000000040e090\n.text:000000000040e095\n.text:000000000040e097\n.text:000000000040e09e\n.text:000000000040e0a0\n.text:000000000040e0a4\n.text:000000000040e0a6\n.text:000000000040e0ab\n.text:000000000040e0b0\n.text:000000000040e0b3\n.text:000000000040e0b5\n.text:000000000040e0b7\n.text:000000000040e0be\n.text:000000000040e0c0\n.text:000000000040e0c2\n.text:000000000040e0c7\n.text:000000000040e0d0\n.text:000000000040e0d7\n.text:000000000040e0d9\n.text:000000000040e0dd\n.text:000000000040e0df\n.text:000000000040e0e4\n.text:000000000040e0e9\n.text:000000000040e0ec\n.text:000000000040e0ee\n.text:000000000040e0f1\n.text:000000000040e0f3\n.text:000000000040e0f5\n.text:000000000040e0fa\n.text:000000000040e103\n.text:000000000040e105\n.text:000000000040e108\n.text:000000000040e10b\n.text:000000000040e110\n.text:000000000040e112\n'
p2995
tp2996
sS'hash_pjw'
p2997
(S'\n__stdcall hash_pjw(void * x, size_t tablesize)\n'
p2998
V\u000asize_t hash_pjw(void *x,size_t tablesize)\u000a\u000a{\u000a  ulong uVar1;\u000a  char cVar2;\u000a  char *pcVar3;\u000a  \u000a  cVar2 = *(char *)x;\u000a  if (cVar2 == 0) {\u000a    uVar1 = 0;\u000a  }\u000a  else {\u000a    pcVar3 = (char *)((long)x + 1);\u000a    uVar1 = 0;\u000a    do {\u000a      uVar1 = (uVar1 << 9 | uVar1 >> 0x37) + (long)cVar2;\u000a      cVar2 = *pcVar3;\u000a      pcVar3 = pcVar3 + 1;\u000a    } while (cVar2 != 0);\u000a  }\u000a  return uVar1 % tablesize;\u000a}\u000a\u000a
p2999
S'MOV CL,byte ptr [RDI]\nTEST CL,CL\nJZ 0x0040fbf7\nINC RDI\nXOR EAX,EAX\nNOP dword ptr [RAX + RAX*0x1]\nMOVSX RCX,CL\nROL RAX,0x9\nADD RAX,RCX\nMOVZX ECX,byte ptr [RDI]\nINC RDI\nTEST CL,CL\nJNZ 0x0040fbe0\nJMP 0x0040fbf9\nXOR EAX,EAX\nXOR EDX,EDX\nDIV RSI\nMOV RAX,RDX\nRET\n'
p3000
S'8a 0f\n84 c9\n74 21\n48 ff c7\n31 c0\n0f 1f 44 00 00\n48 0f be c9\n48 c1 c0 09\n48 01 c8\n0f b6 0f\n48 ff c7\n84 c9\n75 eb\neb 02\n31 c0\n31 d2\n48 f7 f6\n48 89 d0\nc3\n'
p3001
S'.text:000000000040fbd0\n.text:000000000040fbd2\n.text:000000000040fbd4\n.text:000000000040fbd6\n.text:000000000040fbd9\n.text:000000000040fbdb\n.text:000000000040fbe0\n.text:000000000040fbe4\n.text:000000000040fbe8\n.text:000000000040fbeb\n.text:000000000040fbee\n.text:000000000040fbf1\n.text:000000000040fbf3\n.text:000000000040fbf5\n.text:000000000040fbf7\n.text:000000000040fbf9\n.text:000000000040fbfb\n.text:000000000040fbfe\n.text:000000000040fc01\n'
p3002
tp3003
sS'strtoul'
p3004
(S'\n__stdcall strtoul(char * __nptr, char * * __endptr, int __base)\n'
p3005
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aulong strtoul(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  ulong uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_strtoul_00618378)();\u000a  return uVar1;\u000a}\u000a\u000a
p3006
S'JMP qword ptr [0x00618378]\n'
p3007
S'ff 25 52 5a 21 00\n'
p3008
S'.plt:0000000000402920\n'
p3009
tp3010
sS'getline'
p3011
(S'\n__stdcall getline(char * * __lineptr, size_t * __n, FILE * __stream)\n'
p3012
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\u000a\u000a{\u000a  __ssize_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getline_00618388)();\u000a  return _Var1;\u000a}\u000a\u000a
p3013
S'JMP qword ptr [0x00618388]\n'
p3014
S'ff 25 42 5a 21 00\n'
p3015
S'.plt:0000000000402940\n'
p3016
tp3017
sS'emit_mandatory_arg_note'
p3018
(S'\n__stdcall emit_mandatory_arg_note()\n'
p3019
V\u000avoid emit_mandatory_arg_note(void)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnMandatory arguments to long options are mandatory for short options too.\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p3020
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x411e02\nMOV EDX,0x5\nCALL 0x00402420\nMOV RSI,qword ptr [0x006184a8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00402610\n'
p3021
S'50\n31 ff\nbe 02 1e 41 00\nba 05 00 00 00\ne8 4e f7 ff ff\n48 8b 35 cf 57 21 00\n48 89 c7\n58\ne9 2e f9 ff ff\n'
p3022
S'.text:0000000000402cc0\n.text:0000000000402cc1\n.text:0000000000402cc3\n.text:0000000000402cc8\n.text:0000000000402ccd\n.text:0000000000402cd2\n.text:0000000000402cd9\n.text:0000000000402cdc\n.text:0000000000402cdd\n'
p3023
tp3024
sS'strcaseeq0'
p3025
(S'\n__stdcall strcaseeq0()\n'
p3026
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p3027
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x0040c7e5\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040c7ec\nJMP 0x0040c820\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040c820\nTEST BPL,BPL\nJZ 0x0040c81b\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x0040c830\nJMP 0x0040c820\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3028
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 fd 32 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p3029
S'.text:000000000040c7b0\n.text:000000000040c7b1\n.text:000000000040c7b3\n.text:000000000040c7b5\n.text:000000000040c7b7\n.text:000000000040c7b9\n.text:000000000040c7ba\n.text:000000000040c7bb\n.text:000000000040c7be\n.text:000000000040c7c1\n.text:000000000040c7c4\n.text:000000000040c7c7\n.text:000000000040c7c9\n.text:000000000040c7cc\n.text:000000000040c7ce\n.text:000000000040c7d3\n.text:000000000040c7d6\n.text:000000000040c7d8\n.text:000000000040c7da\n.text:000000000040c7dd\n.text:000000000040c7df\n.text:000000000040c7e1\n.text:000000000040c7e3\n.text:000000000040c7e5\n.text:000000000040c7e7\n.text:000000000040c7ea\n.text:000000000040c7ec\n.text:000000000040c7ef\n.text:000000000040c7f1\n.text:000000000040c7f5\n.text:000000000040c7fa\n.text:000000000040c7fd\n.text:000000000040c801\n.text:000000000040c805\n.text:000000000040c809\n.text:000000000040c80d\n.text:000000000040c811\n.text:000000000040c814\n.text:000000000040c819\n.text:000000000040c81b\n.text:000000000040c820\n.text:000000000040c824\n.text:000000000040c825\n.text:000000000040c827\n.text:000000000040c829\n.text:000000000040c82b\n.text:000000000040c82d\n.text:000000000040c82e\n'
p3030
tp3031
sS'get_stat_mtime'
p3032
(S'\n__stdcall get_stat_mtime(stat * st)\n'
p3033
V\u000atimespec get_stat_mtime(stat *st)\u000a\u000a{\u000a  return st->st_mtim;\u000a}\u000a\u000a
p3034
S'MOV RAX,qword ptr [RDI + 0x58]\nMOV RDX,qword ptr [RDI + 0x60]\nRET\n'
p3035
S'48 8b 47 58\n48 8b 57 60\nc3\n'
p3036
S'.text:000000000040d750\n.text:000000000040d754\n.text:000000000040d758\n'
p3037
tp3038
sS'announce_mkdir'
p3039
(S'\n__stdcall announce_mkdir(char * dir, void * options)\n'
p3040
V\u000avoid announce_mkdir(char *dir,void *options)\u000a\u000a{\u000a  FILE *fp;\u000a  char *fmt;\u000a  char *pcVar1;\u000a  \u000a  fp = stdout;\u000a  if (*(char *)((long)options + 0x2d) != 0) {\u000a    fmt = (char *)dcgettext(0,"creating directory %s",5);\u000a    pcVar1 = quotearg_style((char *)0x4);\u000a    prog_fprintf(fp,fmt,pcVar1,pcVar1);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p3041
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCMP byte ptr [RSI + 0x2d],0x0\nJZ 0x00403c0e\nMOV R14,qword ptr [0x006184a8]\nXOR EDI,EDI\nMOV ESI,0x412024\nMOV EDX,0x5\nCALL 0x00402420\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x0040c4c0\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,RCX\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00404200\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p3042
S'41 57\n41 56\n53\n48 89 fb\n80 7e 2d 00\n74 40\n4c 8b 35 d3 48 21 00\n31 ff\nbe 24 20 41 00\nba 05 00 00 00\ne8 3a e8 ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 ca 88 00 00\n48 89 c1\n31 c0\n4c 89 f7\n4c 89 fe\n48 89 ca\n5b\n41 5e\n41 5f\ne9 f2 05 00 00\n5b\n41 5e\n41 5f\nc3\n'
p3043
S'.text:0000000000403bc0\n.text:0000000000403bc2\n.text:0000000000403bc4\n.text:0000000000403bc5\n.text:0000000000403bc8\n.text:0000000000403bcc\n.text:0000000000403bce\n.text:0000000000403bd5\n.text:0000000000403bd7\n.text:0000000000403bdc\n.text:0000000000403be1\n.text:0000000000403be6\n.text:0000000000403be9\n.text:0000000000403bee\n.text:0000000000403bf1\n.text:0000000000403bf6\n.text:0000000000403bf9\n.text:0000000000403bfb\n.text:0000000000403bfe\n.text:0000000000403c01\n.text:0000000000403c04\n.text:0000000000403c05\n.text:0000000000403c07\n.text:0000000000403c09\n.text:0000000000403c0e\n.text:0000000000403c0f\n.text:0000000000403c11\n.text:0000000000403c13\n'
p3044
tp3045
sS'hash_table_ok'
p3046
(S'\n__stdcall hash_table_ok(Hash_table * table)\n'
p3047
V\u000a_Bool hash_table_ok(Hash_table *table)\u000a\u000a{\u000a  hash_entry **pphVar1;\u000a  undefined uVar2;\u000a  size_t sVar3;\u000a  size_t sVar4;\u000a  hash_entry *phVar5;\u000a  hash_entry *phVar6;\u000a  \u000a  phVar6 = table->bucket;\u000a  if (phVar6 < table->bucket_limit) {\u000a    sVar4 = 0;\u000a    sVar3 = 0;\u000a    do {\u000a      phVar5 = phVar6;\u000a      if (phVar6->data != (void *)0x0) {\u000a        do {\u000a          sVar4 = sVar4 + 1;\u000a          pphVar1 = &phVar5->next;\u000a          phVar5 = *pphVar1;\u000a        } while (*pphVar1 != (hash_entry *)0x0);\u000a        sVar3 = sVar3 + 1;\u000a      }\u000a      phVar6 = phVar6 + 1;\u000a    } while (phVar6 < table->bucket_limit);\u000a  }\u000a  else {\u000a    sVar3 = 0;\u000a    sVar4 = 0;\u000a  }\u000a  if ((sVar3 != table->n_buckets_used) || (uVar2 = 1, sVar4 != table->n_entries)) {\u000a    uVar2 = 0;\u000a  }\u000a  return (_Bool)uVar2;\u000a}\u000a\u000a
p3048
S'MOV RSI,qword ptr [RDI]\nCMP RSI,qword ptr [RDI + 0x8]\nJNC 0x004098fa\nMOV R8,qword ptr [RDI + 0x8]\nXOR ECX,ECX\nXOR EAX,EAX\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP qword ptr [RSI],0x0\nJZ 0x004098ef\nMOV RDX,RSI\nNOP dword ptr [RAX]\nINC RCX\nMOV RDX,qword ptr [RDX + 0x8]\nTEST RDX,RDX\nJNZ 0x004098e0\nINC RAX\nADD RSI,0x10\nCMP RSI,R8\nJC 0x004098d0\nJMP 0x004098fe\nXOR EAX,EAX\nXOR ECX,ECX\nCMP RAX,qword ptr [RDI + 0x18]\nJNZ 0x0040990c\nMOV AL,0x1\nCMP RCX,qword ptr [RDI + 0x20]\nJZ 0x0040990e\nXOR EAX,EAX\nRET\n'
p3049
S'48 8b 37\n48 3b 77 08\n73 41\n4c 8b 47 08\n31 c9\n31 c0\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 83 3e 00\n74 19\n48 89 f2\n0f 1f 80 00 00 00 00\n48 ff c1\n48 8b 52 08\n48 85 d2\n75 f4\n48 ff c0\n48 83 c6 10\n4c 39 c6\n72 d8\neb 04\n31 c0\n31 c9\n48 3b 47 18\n75 08\nb0 01\n48 3b 4f 20\n74 02\n31 c0\nc3\n'
p3050
S'.text:00000000004098b0\n.text:00000000004098b3\n.text:00000000004098b7\n.text:00000000004098b9\n.text:00000000004098bd\n.text:00000000004098bf\n.text:00000000004098c1\n.text:00000000004098d0\n.text:00000000004098d4\n.text:00000000004098d6\n.text:00000000004098d9\n.text:00000000004098e0\n.text:00000000004098e3\n.text:00000000004098e7\n.text:00000000004098ea\n.text:00000000004098ec\n.text:00000000004098ef\n.text:00000000004098f3\n.text:00000000004098f6\n.text:00000000004098f8\n.text:00000000004098fa\n.text:00000000004098fc\n.text:00000000004098fe\n.text:0000000000409902\n.text:0000000000409904\n.text:0000000000409906\n.text:000000000040990a\n.text:000000000040990c\n.text:000000000040990e\n'
p3051
tp3052
sS'strcaseeq2'
p3053
(S'\n__stdcall strcaseeq2()\n'
p3054
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p3055
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x0040c8f6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040c8fd\nJMP 0x0040c92a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040c92a\nTEST BPL,BPL\nJZ 0x0040c925\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040c940\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3056
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 ed 31 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p3057
S'.text:000000000040c8c0\n.text:000000000040c8c1\n.text:000000000040c8c3\n.text:000000000040c8c5\n.text:000000000040c8c7\n.text:000000000040c8c9\n.text:000000000040c8ca\n.text:000000000040c8cb\n.text:000000000040c8ce\n.text:000000000040c8d1\n.text:000000000040c8d4\n.text:000000000040c8d7\n.text:000000000040c8d9\n.text:000000000040c8dc\n.text:000000000040c8de\n.text:000000000040c8e3\n.text:000000000040c8e7\n.text:000000000040c8e9\n.text:000000000040c8eb\n.text:000000000040c8ee\n.text:000000000040c8f0\n.text:000000000040c8f2\n.text:000000000040c8f4\n.text:000000000040c8f6\n.text:000000000040c8f8\n.text:000000000040c8fb\n.text:000000000040c8fd\n.text:000000000040c900\n.text:000000000040c902\n.text:000000000040c906\n.text:000000000040c90a\n.text:000000000040c90e\n.text:000000000040c912\n.text:000000000040c915\n.text:000000000040c919\n.text:000000000040c91a\n.text:000000000040c91c\n.text:000000000040c91e\n.text:000000000040c920\n.text:000000000040c922\n.text:000000000040c923\n.text:000000000040c925\n.text:000000000040c92a\n.text:000000000040c92e\n.text:000000000040c92f\n.text:000000000040c931\n.text:000000000040c933\n.text:000000000040c935\n.text:000000000040c937\n.text:000000000040c938\n'
p3058
tp3059
sS'strcaseeq1'
p3060
(S'\n__stdcall strcaseeq1()\n'
p3061
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p3062
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x0040c86d\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040c874\nJMP 0x0040c8a7\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040c8a7\nTEST BPL,BPL\nJZ 0x0040c8a2\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040c8c0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3063
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 76 32 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p3064
S'.text:000000000040c830\n.text:000000000040c831\n.text:000000000040c833\n.text:000000000040c835\n.text:000000000040c837\n.text:000000000040c839\n.text:000000000040c83a\n.text:000000000040c83b\n.text:000000000040c840\n.text:000000000040c843\n.text:000000000040c846\n.text:000000000040c849\n.text:000000000040c84b\n.text:000000000040c84e\n.text:000000000040c853\n.text:000000000040c855\n.text:000000000040c85a\n.text:000000000040c85e\n.text:000000000040c860\n.text:000000000040c862\n.text:000000000040c865\n.text:000000000040c867\n.text:000000000040c869\n.text:000000000040c86b\n.text:000000000040c86d\n.text:000000000040c86f\n.text:000000000040c872\n.text:000000000040c874\n.text:000000000040c877\n.text:000000000040c879\n.text:000000000040c87d\n.text:000000000040c881\n.text:000000000040c885\n.text:000000000040c88b\n.text:000000000040c88f\n.text:000000000040c892\n.text:000000000040c896\n.text:000000000040c897\n.text:000000000040c899\n.text:000000000040c89b\n.text:000000000040c89d\n.text:000000000040c89f\n.text:000000000040c8a0\n.text:000000000040c8a2\n.text:000000000040c8a7\n.text:000000000040c8ab\n.text:000000000040c8ac\n.text:000000000040c8ae\n.text:000000000040c8b0\n.text:000000000040c8b2\n.text:000000000040c8b4\n.text:000000000040c8b5\n'
p3065
tp3066
sS'strcaseeq4'
p3067
(S'\n__stdcall strcaseeq4()\n'
p3068
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p3069
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x0040c9dc\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040c9e3\nJMP 0x0040ca04\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040ca04\nTEST BPL,BPL\nJZ 0x0040c9ff\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040ca10\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3070
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 07 31 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p3071
S'.text:000000000040c9b0\n.text:000000000040c9b1\n.text:000000000040c9b3\n.text:000000000040c9b5\n.text:000000000040c9b6\n.text:000000000040c9b7\n.text:000000000040c9ba\n.text:000000000040c9bd\n.text:000000000040c9bf\n.text:000000000040c9c2\n.text:000000000040c9c4\n.text:000000000040c9c9\n.text:000000000040c9cd\n.text:000000000040c9cf\n.text:000000000040c9d1\n.text:000000000040c9d4\n.text:000000000040c9d6\n.text:000000000040c9d8\n.text:000000000040c9da\n.text:000000000040c9dc\n.text:000000000040c9de\n.text:000000000040c9e1\n.text:000000000040c9e3\n.text:000000000040c9e6\n.text:000000000040c9e8\n.text:000000000040c9ec\n.text:000000000040c9f0\n.text:000000000040c9f3\n.text:000000000040c9f7\n.text:000000000040c9f8\n.text:000000000040c9fa\n.text:000000000040c9fc\n.text:000000000040c9fd\n.text:000000000040c9ff\n.text:000000000040ca04\n.text:000000000040ca08\n.text:000000000040ca09\n.text:000000000040ca0b\n.text:000000000040ca0d\n.text:000000000040ca0e\n'
p3072
tp3073
sS'strcaseeq3'
p3074
(S'\n__stdcall strcaseeq3()\n'
p3075
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p3076
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x0040fad0\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x0040c970\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040c977\nJMP 0x0040c99a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040c99a\nTEST BPL,BPL\nJZ 0x0040c995\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x0040c9b0\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3077
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 73 31 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p3078
S'.text:000000000040c940\n.text:000000000040c941\n.text:000000000040c943\n.text:000000000040c945\n.text:000000000040c947\n.text:000000000040c948\n.text:000000000040c94b\n.text:000000000040c94e\n.text:000000000040c951\n.text:000000000040c953\n.text:000000000040c956\n.text:000000000040c958\n.text:000000000040c95d\n.text:000000000040c961\n.text:000000000040c963\n.text:000000000040c965\n.text:000000000040c968\n.text:000000000040c96a\n.text:000000000040c96c\n.text:000000000040c96e\n.text:000000000040c970\n.text:000000000040c972\n.text:000000000040c975\n.text:000000000040c977\n.text:000000000040c97a\n.text:000000000040c97c\n.text:000000000040c980\n.text:000000000040c984\n.text:000000000040c988\n.text:000000000040c98b\n.text:000000000040c98c\n.text:000000000040c98e\n.text:000000000040c990\n.text:000000000040c992\n.text:000000000040c993\n.text:000000000040c995\n.text:000000000040c99a\n.text:000000000040c99b\n.text:000000000040c99d\n.text:000000000040c99f\n.text:000000000040c9a1\n.text:000000000040c9a2\n'
p3079
tp3080
sS'last_component'
p3081
(S'\n__stdcall last_component(char * name)\n'
p3082
V\u000achar * last_component(char *name)\u000a\u000a{\u000a  bool bVar1;\u000a  bool bVar2;\u000a  char *pcVar3;\u000a  \u000a  name = name + -1;\u000a  do {\u000a    pcVar3 = name + 1;\u000a    name = name + 1;\u000a  } while (*pcVar3 == '/');\u000a  bVar2 = false;\u000a  pcVar3 = name;\u000a  do {\u000a    bVar1 = true;\u000a    if (*name != '/') {\u000a      if (*name == 0) {\u000a        return pcVar3;\u000a      }\u000a      bVar1 = bVar2;\u000a      if (bVar2) {\u000a        pcVar3 = name;\u000a        bVar1 = false;\u000a      }\u000a    }\u000a    bVar2 = bVar1;\u000a    name = name + 1;\u000a  } while( true );\u000a}\u000a\u000a
p3083
S'DEC RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [RDI + 0x1],0x2f\nLEA RDI,[RDI + 0x1]\nJZ 0x00409300\nXOR ESI,ESI\nMOV RAX,RDI\nJMP 0x00409326\nINC RAX\nMOV SIL,DL\nMOVZX ECX,byte ptr [RAX]\nMOV DL,0x1\nCMP CL,0x2f\nJZ 0x00409320\nTEST CL,CL\nJZ 0x00409347\nMOV EDX,ESI\nAND DL,0x1\nJZ 0x0040933d\nXOR ESI,ESI\nTEST DL,DL\nCMOVNZ RDI,RAX\nMOV EDX,ESI\nJMP 0x00409320\nMOV RAX,RDI\nRET\n'
p3084
S'48 ff cf\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 7f 01 2f\n48 8d 7f 01\n74 f6\n31 f6\n48 89 f8\neb 15\n48 ff c0\n40 88 d6\n0f b6 08\nb2 01\n80 f9 2f\n74 f0\n84 c9\n74 13\n89 f2\n80 e2 01\n74 02\n31 f6\n84 d2\n48 0f 45 f8\n89 f2\neb d9\n48 89 f8\nc3\n'
p3085
S'.text:00000000004092f0\n.text:00000000004092f3\n.text:0000000000409300\n.text:0000000000409304\n.text:0000000000409308\n.text:000000000040930a\n.text:000000000040930c\n.text:000000000040930f\n.text:0000000000409320\n.text:0000000000409323\n.text:0000000000409326\n.text:0000000000409329\n.text:000000000040932b\n.text:000000000040932e\n.text:0000000000409330\n.text:0000000000409332\n.text:0000000000409334\n.text:0000000000409336\n.text:0000000000409339\n.text:000000000040933b\n.text:000000000040933d\n.text:000000000040933f\n.text:0000000000409343\n.text:0000000000409345\n.text:0000000000409347\n.text:000000000040934a\n'
p3086
tp3087
sS'qsort'
p3088
(S'\n__stdcall qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)\n'
p3089
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\u000a\u000a{\u000a  (*(code *)PTR_qsort_00618098)();\u000a  return;\u000a}\u000a\u000a
p3090
S'JMP qword ptr [0x00618098]\n'
p3091
S'ff 25 32 5d 21 00\n'
p3092
S'.plt:0000000000402360\n'
p3093
tp3094
sS'register_tm_clones'
p3095
(S'\n__stdcall register_tm_clones()\n'
p3096
V\u000a/* WARNING: Removing unreachable block (ram,0x00402a93) */\u000a/* WARNING: Removing unreachable block (ram,0x00402a9d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p3097
S'MOV ESI,0x618488\nPUSH RBP\nSUB RSI,0x618488\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00402aa8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402aa8\nPOP RBP\nMOV EDI,0x618488\nJMP RAX\nPOP RBP\nRET\n'
p3098
S'be 88 84 61 00\n55\n48 81 ee 88 84 61 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 88 84 61 00\nff e0\n5d\nc3\n'
p3099
S'.text:0000000000402a70\n.text:0000000000402a75\n.text:0000000000402a76\n.text:0000000000402a7d\n.text:0000000000402a81\n.text:0000000000402a84\n.text:0000000000402a87\n.text:0000000000402a8b\n.text:0000000000402a8e\n.text:0000000000402a91\n.text:0000000000402a93\n.text:0000000000402a98\n.text:0000000000402a9b\n.text:0000000000402a9d\n.text:0000000000402a9e\n.text:0000000000402aa3\n.text:0000000000402aa8\n.text:0000000000402aa9\n'
p3100
tp3101
sS'c_islower'
p3102
(S'\n__stdcall c_islower()\n'
p3103
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p3104
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p3105
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p3106
S'.text:000000000040fa70\n.text:000000000040fa73\n.text:000000000040fa76\n.text:000000000040fa79\n'
p3107
tp3108
sS'getcon'
p3109
(S'\n__stdcall getcon(security_context_t * con)\n'
p3110
V\u000aint getcon(security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p3111
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p3112
S'50\ne8 ea 4d ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p3113
S'.text:000000000040d4f0\n.text:000000000040d4f1\n.text:000000000040d4f6\n.text:000000000040d4fc\n.text:000000000040d501\n.text:000000000040d502\n'
p3114
tp3115
sS'fstatat'
p3116
(S'\n__stdcall fstatat(int __fd, char * __file, stat * __buf, int __flag)\n'
p3117
V\u000aint fstatat(int __fd,char *__file,stat *__buf,int __flag)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___fxstatat_00618150)(1,(ulong)(uint)__fd,__file,__buf,(ulong)(uint)__flag);\u000a  return iVar1;\u000a}\u000a\u000a
p3118
S'MOV R8D,ECX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV ESI,EDI\nMOV EDI,0x1\nJMP 0x004024d0\n'
p3119
S'41 89 c8\n48 89 d1\n48 89 f2\n89 fe\nbf 01 00 00 00\ne9 fb 1c ff ff\n'
p3120
S'.text:00000000004107c0\n.text:00000000004107c3\n.text:00000000004107c6\n.text:00000000004107c9\n.text:00000000004107cb\n.text:00000000004107d0\n'
p3121
tp3122
sS'extent_scan_free'
p3123
(S'\n__stdcall extent_scan_free(extent_scan * scan)\n'
p3124
V\u000avoid extent_scan_free(extent_scan *scan)\u000a\u000a{\u000a  free(scan->ext_info);\u000a  scan->ext_info = (extent_info *)0x0;\u000a  scan->ei_count = 0;\u000a  return;\u000a}\u000a\u000a
p3125
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX + 0x28]\nCALL 0x00402290\nMOV qword ptr [RBX + 0x28],0x0\nMOV qword ptr [RBX + 0x18],0x0\nPOP RBX\nRET\n'
p3126
S'53\n48 89 fb\n48 8b 7b 28\ne8 e3 9f ff ff\n48 c7 43 28 00 00 00 00\n48 c7 43 18 00 00 00 00\n5b\nc3\n'
p3127
S'.text:00000000004082a0\n.text:00000000004082a1\n.text:00000000004082a4\n.text:00000000004082a8\n.text:00000000004082ad\n.text:00000000004082b5\n.text:00000000004082bd\n.text:00000000004082be\n'
p3128
tp3129
sS'savewd_process_files'
p3130
(S'\n__stdcall savewd_process_files(char * * file, anon_subr_int_char_ptr_savewd_ptr_void_ptr * act, void * options)\n'
p3131
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint savewd_process_files(char **file,int (*act)(char *,savewd *,void *),void *options)\u000a\u000a{\u000a  code *pcVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  int iVar4;\u000a  long lVar5;\u000a  undefined8 in_RCX;\u000a  int iVar6;\u000a  undefined8 *puVar7;\u000a  long lVar8;\u000a  long lVar9;\u000a  int iVar10;\u000a  long lVar11;\u000a  savewd local_50;\u000a  undefined8 local_48;\u000a  code *local_40;\u000a  ulong local_38;\u000a  \u000a  local_38 = (ulong)file & 0xffffffff;\u000a  local_40 = (code *)options;\u000a  savewd_init(&local_50);\u000a  iVar10 = (int)local_38;\u000a  lVar5 = (long)iVar10;\u000a  lVar8 = lVar5 << 0x20;\u000a  lVar11 = 0;\u000a  do {\u000a    lVar9 = lVar11;\u000a    lVar8 = lVar8 + -0x100000000;\u000a    if (lVar5 + lVar9 < 1) break;\u000a    lVar11 = lVar9 + -1;\u000a  } while (**(char **)(act + lVar9 * 8 + lVar5 * 8 + -8) == '/');\u000a  iVar6 = 0;\u000a  iVar3 = 0;\u000a  if (1 < (int)lVar9 + iVar10) {\u000a    lVar11 = 0;\u000a    iVar6 = 0;\u000a    local_48 = in_RCX;\u000a    do {\u000a      _Var2 = savewd_delegating(&local_50);\u000a      if ((_Var2 == false) &&\u000a         (iVar3 = (*local_40)(*(undefined8 *)(act + lVar11 * 8),&local_50,local_48), iVar6 < iVar3))\u000a      {\u000a        iVar6 = iVar3;\u000a      }\u000a      lVar5 = lVar11 * 8;\u000a      lVar11 = lVar11 + 1;\u000a      iVar3 = (int)lVar11;\u000a      if ((**(char **)(act + lVar5 + 8) != '/') &&\u000a         (iVar4 = savewd_restore(&local_50), iVar6 < iVar4)) {\u000a        iVar6 = iVar4;\u000a      }\u000a      in_RCX = local_48;\u000a    } while (lVar11 < lVar8 >> 0x20);\u000a  }\u000a  savewd_finish(&local_50);\u000a  pcVar1 = local_40;\u000a  if (iVar3 < (int)local_38) {\u000a    puVar7 = (undefined8 *)(act + (long)iVar3 * 8);\u000a    iVar10 = iVar10 - iVar3;\u000a    do {\u000a      iVar3 = (*pcVar1)(*puVar7,&local_50,in_RCX);\u000a      if (iVar6 < iVar3) {\u000a        iVar6 = iVar3;\u000a      }\u000a      puVar7 = puVar7 + 1;\u000a      iVar10 = iVar10 + -1;\u000a    } while (iVar10 != 0);\u000a  }\u000a  return iVar6;\u000a}\u000a\u000a
p3132
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV RBP,RSI\nMOV R12D,EDI\nMOV R15,-0x100000000\nLEA RDI,[RSP + 0x8]\nCALL 0x0040d020\nMOVSXD RAX,R12D\nMOV RSI,RAX\nSHL RSI,0x20\nADD RSI,R15\nLEA RCX,[RBP + RAX*0x8 + -0x8]\nMOV EDX,EAX\nMOV qword ptr [RSP + 0x20],RDX\nXOR EDI,EDI\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,RDI\nMOV R14,RSI\nLEA RSI,[RAX + RDX*0x1]\nTEST RSI,RSI\nJLE 0x0040d410\nMOV RBX,qword ptr [RCX + RDX*0x8]\nLEA RDI,[RDX + -0x1]\nLEA RSI,[R14 + R15*0x1]\nCMP byte ptr [RBX],0x2f\nJZ 0x0040d3f0\nADD EDX,R12D\nXOR EBX,EBX\nCMP EDX,0x2\nMOV R15D,0x0\nJL 0x0040d488\nMOV qword ptr [RSP + 0x10],R13\nSAR R14,0x20\nXOR R15D,R15D\nLEA R13,[RSP + 0x8]\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R13\nCALL 0x0040d4e0\nTEST AL,AL\nJNZ 0x0040d462\nMOV RDI,qword ptr [RBP + R15*0x8]\nMOV RSI,R13\nMOV RDX,qword ptr [RSP + 0x10]\nCALL qword ptr [RSP + 0x18]\nCMP EBX,EAX\nCMOVL EBX,EAX\nMOV RAX,qword ptr [RBP + R15*0x8 + 0x8]\nINC R15\nCMP byte ptr [RAX],0x2f\nJZ 0x0040d47e\nMOV RDI,R13\nMOV ESI,EBX\nCALL 0x0040d230\nCMP EBX,EAX\nCMOVL EBX,EAX\nCMP R15,R14\nJL 0x0040d440\nMOV R13,qword ptr [RSP + 0x10]\nLEA RDI,[RSP + 0x8]\nCALL 0x0040d340\nCMP R15D,dword ptr [RSP + 0x20]\nJGE 0x0040d4cb\nMOVSXD RAX,R15D\nLEA RBP,[RBP + RAX*0x8]\nSUB R12D,R15D\nLEA R14,[RSP + 0x8]\nMOV R15,qword ptr [RSP + 0x18]\nNOP\nMOV RDI,qword ptr [RBP]\nMOV RSI,R14\nMOV RDX,R13\nCALL R15\nCMP EBX,EAX\nCMOVL EBX,EAX\nADD RBP,0x8\nDEC R12D\nJNZ 0x0040d4b0\nMOV EAX,EBX\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3133
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 cd\n48 89 54 24 18\n48 89 f5\n41 89 fc\n49 bf 00 00 00 00 ff ff ff ff\n48 8d 7c 24 08\ne8 50 fc ff ff\n49 63 c4\n48 89 c6\n48 c1 e6 20\n4c 01 fe\n48 8d 4c c5 f8\n89 c2\n48 89 54 24 20\n31 ff\n0f 1f 44 00 00\n48 89 fa\n49 89 f6\n48 8d 34 10\n48 85 f6\n7e 11\n48 8b 1c d1\n48 8d 7a ff\n4b 8d 34 3e\n80 3b 2f\n74 e0\n44 01 e2\n31 db\n83 fa 02\n41 bf 00 00 00 00\n7c 68\n4c 89 6c 24 10\n49 c1 fe 20\n45 31 ff\n4c 8d 6c 24 08\n31 db\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ef\ne8 98 00 00 00\n84 c0\n75 16\n4a 8b 7c fd 00\n4c 89 ee\n48 8b 54 24 10\nff 54 24 18\n39 c3\n0f 4c d8\n4a 8b 44 fd 08\n49 ff c7\n80 38 2f\n74 0f\n4c 89 ef\n89 de\ne8 b7 fd ff ff\n39 c3\n0f 4c d8\n4d 39 f7\n7c bd\n4c 8b 6c 24 10\n48 8d 7c 24 08\ne8 ae fe ff ff\n44 3b 7c 24 20\n7d 32\n49 63 c7\n48 8d 6c c5 00\n45 29 fc\n4c 8d 74 24 08\n4c 8b 7c 24 18\n66 90\n48 8b 7d 00\n4c 89 f6\n4c 89 ea\n41 ff d7\n39 c3\n0f 4c d8\n48 83 c5 08\n41 ff cc\n75 e5\n89 d8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p3134
S'.text:000000000040d3a0\n.text:000000000040d3a1\n.text:000000000040d3a3\n.text:000000000040d3a5\n.text:000000000040d3a7\n.text:000000000040d3a9\n.text:000000000040d3aa\n.text:000000000040d3ae\n.text:000000000040d3b1\n.text:000000000040d3b6\n.text:000000000040d3b9\n.text:000000000040d3bc\n.text:000000000040d3c6\n.text:000000000040d3cb\n.text:000000000040d3d0\n.text:000000000040d3d3\n.text:000000000040d3d6\n.text:000000000040d3da\n.text:000000000040d3dd\n.text:000000000040d3e2\n.text:000000000040d3e4\n.text:000000000040d3e9\n.text:000000000040d3eb\n.text:000000000040d3f0\n.text:000000000040d3f3\n.text:000000000040d3f6\n.text:000000000040d3fa\n.text:000000000040d3fd\n.text:000000000040d3ff\n.text:000000000040d403\n.text:000000000040d407\n.text:000000000040d40b\n.text:000000000040d40e\n.text:000000000040d410\n.text:000000000040d413\n.text:000000000040d415\n.text:000000000040d418\n.text:000000000040d41e\n.text:000000000040d420\n.text:000000000040d425\n.text:000000000040d429\n.text:000000000040d42c\n.text:000000000040d431\n.text:000000000040d433\n.text:000000000040d440\n.text:000000000040d443\n.text:000000000040d448\n.text:000000000040d44a\n.text:000000000040d44c\n.text:000000000040d451\n.text:000000000040d454\n.text:000000000040d459\n.text:000000000040d45d\n.text:000000000040d45f\n.text:000000000040d462\n.text:000000000040d467\n.text:000000000040d46a\n.text:000000000040d46d\n.text:000000000040d46f\n.text:000000000040d472\n.text:000000000040d474\n.text:000000000040d479\n.text:000000000040d47b\n.text:000000000040d47e\n.text:000000000040d481\n.text:000000000040d483\n.text:000000000040d488\n.text:000000000040d48d\n.text:000000000040d492\n.text:000000000040d497\n.text:000000000040d499\n.text:000000000040d49c\n.text:000000000040d4a1\n.text:000000000040d4a4\n.text:000000000040d4a9\n.text:000000000040d4ae\n.text:000000000040d4b0\n.text:000000000040d4b4\n.text:000000000040d4b7\n.text:000000000040d4ba\n.text:000000000040d4bd\n.text:000000000040d4bf\n.text:000000000040d4c2\n.text:000000000040d4c6\n.text:000000000040d4c9\n.text:000000000040d4cb\n.text:000000000040d4cd\n.text:000000000040d4d1\n.text:000000000040d4d2\n.text:000000000040d4d4\n.text:000000000040d4d6\n.text:000000000040d4d8\n.text:000000000040d4da\n.text:000000000040d4db\n'
p3135
tp3136
sS'fchown'
p3137
(S'\n__stdcall fchown(int __fd, __uid_t __owner, __gid_t __group)\n'
p3138
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fchown(int __fd,__uid_t __owner,__gid_t __group)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fchown_00618350)();\u000a  return iVar1;\u000a}\u000a\u000a
p3139
S'JMP qword ptr [0x00618350]\n'
p3140
S'ff 25 7a 5a 21 00\n'
p3141
S'.plt:00000000004028d0\n'
p3142
tp3143
sS'fwrite'
p3144
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p3145
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_006183a0)();\u000a  return sVar1;\u000a}\u000a\u000a
p3146
S'JMP qword ptr [0x006183a0]\n'
p3147
S'ff 25 2a 5a 21 00\n'
p3148
S'.plt:0000000000402970\n'
p3149
tp3150
sS'linkat'
p3151
(S'\n__stdcall linkat(int __fromfd, char * __from, int __tofd, char * __to, int __flags)\n'
p3152
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint linkat(int __fromfd,char *__from,int __tofd,char *__to,int __flags)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_linkat_006182f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p3153
S'JMP qword ptr [0x006182f8]\n'
p3154
S'ff 25 d2 5a 21 00\n'
p3155
S'.plt:0000000000402820\n'
p3156
tp3157
sS'src_to_dest_lookup'
p3158
(S'\n__stdcall src_to_dest_lookup(ino_t ino, dev_t dev)\n'
p3159
V\u000achar * src_to_dest_lookup(ino_t ino,dev_t dev)\u000a\u000a{\u000a  void *pvVar1;\u000a  ino_t local_18;\u000a  dev_t local_10;\u000a  \u000a  local_18 = ino;\u000a  local_10 = dev;\u000a  pvVar1 = hash_lookup(src_to_dest,&local_18);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return *(char **)((long)pvVar1 + 0x10);\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p3160
S'SUB RSP,0x18\nMOV qword ptr [RSP],RDI\nMOV qword ptr [RSP + 0x8],RSI\nMOV RDI,qword ptr [0x0061a930]\nMOV RSI,RSP\nCALL 0x00409a00\nTEST RAX,RAX\nJZ 0x0040857a\nMOV RAX,qword ptr [RAX + 0x10]\nADD RSP,0x18\nRET\nXOR EAX,EAX\nADD RSP,0x18\nRET\n'
p3161
S'48 83 ec 18\n48 89 3c 24\n48 89 74 24 08\n48 8b 3d cc 23 21 00\n48 89 e6\ne8 94 14 00 00\n48 85 c0\n74 09\n48 8b 40 10\n48 83 c4 18\nc3\n31 c0\n48 83 c4 18\nc3\n'
p3162
S'.text:0000000000408550\n.text:0000000000408554\n.text:0000000000408558\n.text:000000000040855d\n.text:0000000000408564\n.text:0000000000408567\n.text:000000000040856c\n.text:000000000040856f\n.text:0000000000408571\n.text:0000000000408575\n.text:0000000000408579\n.text:000000000040857a\n.text:000000000040857c\n.text:0000000000408580\n'
p3163
tp3164
sS'triple_compare'
p3165
(S'\n__stdcall triple_compare(void * x, void * y)\n'
p3166
V\u000a_Bool triple_compare(void *x,void *y)\u000a\u000a{\u000a  _Bool _Var1;\u000a  \u000a  if ((*(long *)((long)x + 8) == *(long *)((long)y + 8)) &&\u000a     (*(long *)((long)x + 0x10) == *(long *)((long)y + 0x10))) {\u000a    _Var1 = same_name(*(char **)x,*(char **)y);\u000a    return _Var1;\u000a  }\u000a  return false;\u000a}\u000a\u000a
p3167
S'MOV RAX,qword ptr [RDI + 0x8]\nCMP RAX,qword ptr [RSI + 0x8]\nJNZ 0x0040a84f\nMOV RAX,qword ptr [RDI + 0x10]\nCMP RAX,qword ptr [RSI + 0x10]\nJNZ 0x0040a84f\nMOV RDI,qword ptr [RDI]\nMOV RSI,qword ptr [RSI]\nJMP 0x0040cc10\nXOR EAX,EAX\nRET\n'
p3168
S'48 8b 47 08\n48 3b 46 08\n75 15\n48 8b 47 10\n48 3b 46 10\n75 0b\n48 8b 3f\n48 8b 36\ne9 c1 23 00 00\n31 c0\nc3\n'
p3169
S'.text:000000000040a830\n.text:000000000040a834\n.text:000000000040a838\n.text:000000000040a83a\n.text:000000000040a83e\n.text:000000000040a842\n.text:000000000040a844\n.text:000000000040a847\n.text:000000000040a84a\n.text:000000000040a84f\n.text:000000000040a851\n'
p3170
tp3171
sS'setexeccon'
p3172
(S'\n__stdcall setexeccon(security_context_t con)\n'
p3173
V\u000aint setexeccon(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p3174
S'PUSH RAX\nCALL 0x004022e0\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p3175
S'50\ne8 5a 4c ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p3176
S'.text:000000000040d680\n.text:000000000040d681\n.text:000000000040d686\n.text:000000000040d68c\n.text:000000000040d691\n.text:000000000040d692\n'
p3177
tp3178
sS'lutimensat'
p3179
(S'\n__stdcall lutimensat(char * file, timespec * times)\n'
p3180
V\u000aint lutimensat(char *file,timespec *times)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = rpl_utimensat(file,times);\u000a  return iVar1;\u000a}\u000a\u000a
p3181
S'MOV ECX,0x100\nJMP 0x0040f1f0\n'
p3182
S'b9 00 01 00 00\ne9 66 14 00 00\n'
p3183
S'.text:000000000040dd80\n.text:000000000040dd85\n'
p3184
tp3185
sS'unlink'
p3186
(S'\n__stdcall unlink(char * __name)\n'
p3187
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint unlink(char *__name)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_unlink_00618060)();\u000a  return iVar1;\u000a}\u000a\u000a
p3188
S'JMP qword ptr [0x00618060]\n'
p3189
S'ff 25 6a 5d 21 00\n'
p3190
S'.plt:00000000004022f0\n'
p3191
tp3192
sS'rotl_sz'
p3193
(S'\n__stdcall rotl_sz(size_t x)\n'
p3194
V\u000asize_t rotl_sz(size_t x)\u000a\u000a{\u000a  byte bVar1;\u000a  undefined4 in_ESI;\u000a  \u000a  bVar1 = (byte)in_ESI & 0x3f;\u000a  return x << bVar1 | x >> 0x40 - bVar1;\u000a}\u000a\u000a
p3195
S'MOV ECX,ESI\nROL RDI,CL\nMOV RAX,RDI\nRET\n'
p3196
S'89 f1\n48 d3 c7\n48 89 f8\nc3\n'
p3197
S'.text:000000000040f930\n.text:000000000040f932\n.text:000000000040f935\n.text:000000000040f938\n'
p3198
tp3199
sS'same_file_ok'
p3200
(S'\n__stdcall same_file_ok(char * src_name, stat * src_sb, char * dst_name, stat * dst_sb, cp_options * x, _Bool * return_now)\n'
p3201
V\u000a_Bool same_file_ok(char *src_name,stat *src_sb,char *dst_name,stat *dst_sb,cp_options *x,\u000a                  _Bool *return_now)\u000a\u000a{\u000a  backup_type bVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  _Bool _Var4;\u000a  int iVar5;\u000a  char *source;\u000a  stat *__src;\u000a  bool bVar6;\u000a  stat local_150;\u000a  stat local_c0;\u000a  \u000a  if (src_sb->st_ino == dst_sb->st_ino) {\u000a    bVar6 = src_sb->st_dev == dst_sb->st_dev;\u000a    *return_now = false;\u000a    if (!bVar6) goto LAB_00405fd0;\u000a    if (x->hard_link != false) {\u000a      *return_now = true;\u000a      return true;\u000a    }\u000a    bVar2 = true;\u000a    bVar3 = true;\u000a    if (x->dereference == DEREF_NEVER) goto LAB_00405fda;\u000aLAB_00406047:\u000a    if (!bVar2) {\u000a      return true;\u000a    }\u000a    dst_sb = &local_c0;\u000a    iVar5 = lstat(dst_name,(stat *)dst_sb);\u000a    if (iVar5 != 0) {\u000a      return true;\u000a    }\u000a    __src = &local_150;\u000a    iVar5 = lstat(src_name,(stat *)__src);\u000a    if (iVar5 != 0) {\u000a      return true;\u000a    }\u000a    bVar6 = local_150.st_ino == local_c0.st_ino && local_150.st_dev == local_c0.st_dev;\u000a    if ((local_150.st_mode & 0xf000) == 0xa000) {\u000a      if (((local_c0.st_mode & 0xf000) == 0xa000) && (x->unlink_dest_before_opening != false)) {\u000a        return true;\u000a      }\u000a      goto LAB_00406017;\u000a    }\u000a    bVar1 = x->backup_type;\u000a  }\u000a  else {\u000a    *return_now = false;\u000a    bVar6 = false;\u000aLAB_00405fd0:\u000a    bVar2 = false;\u000a    bVar3 = bVar2;\u000a    if (x->dereference != DEREF_NEVER) goto LAB_00406047;\u000aLAB_00405fda:\u000a    __src = src_sb;\u000a    if (((src_sb->st_mode & 0xf000) == 0xa000) &&\u000a       (__src = src_sb, (dst_sb->st_mode & 0xf000) == 0xa000)) {\u000a      _Var4 = same_name(src_name,dst_name);\u000a      if (_Var4 != false) {\u000aLAB_0040600a:\u000a        return (_Bool)(_Var4 ^ 1);\u000a      }\u000a      if (x->backup_type != no_backups) {\u000a        return true;\u000a      }\u000a      if (!bVar3) goto LAB_0040600a;\u000a      *return_now = true;\u000a      goto LAB_0040628a;\u000a    }\u000aLAB_00406017:\u000a    bVar1 = x->backup_type;\u000a  }\u000a  if (bVar1 == no_backups) {\u000a    if ((x->move_mode != false) || (x->unlink_dest_before_opening != false)) {\u000a      if ((dst_sb->st_mode & 0xf000) == 0xa000) {\u000a        return true;\u000a      }\u000a      if (((bVar6) && (1 < dst_sb->st_nlink)) &&\u000a         (_Var4 = same_name(src_name,dst_name), _Var4 == false)) {\u000aLAB_0040628a:\u000a        return (_Bool)(x->move_mode == false);\u000a      }\u000a    }\u000a    if (((__src->st_mode & 0xf000) != 0xa000) && ((dst_sb->st_mode & 0xf000) != 0xa000)) {\u000a      if (__src->st_ino != dst_sb->st_ino) {\u000a        return true;\u000a      }\u000a      if (__src->st_dev != dst_sb->st_dev) {\u000a        return true;\u000a      }\u000a      if (x->hard_link != false) goto LAB_00406335;\u000a    }\u000a    if (((x->move_mode != false) && ((src_sb->st_mode & 0xf000) == 0xa000)) &&\u000a       ((1 < dst_sb->st_nlink && (source = canonicalize_file_name(src_name), source != (char *)0x0))\u000a       )) {\u000a      _Var4 = same_name(source,dst_name);\u000a      free(source);\u000a      return (_Bool)(_Var4 ^ 1);\u000a    }\u000a    if ((x->unlink_dest_before_opening != false) && ((dst_sb->st_mode & 0xf000) == 0xa000)) {\u000a      return (_Bool)(dst_sb->st_dev == __src->st_dev);\u000a    }\u000a    if (x->dereference == DEREF_NEVER) {\u000a      if ((__src->st_mode & 0xf000) == 0xa000) {\u000a        iVar5 = stat(src_name,(stat *)&local_150);\u000a        if (iVar5 != 0) {\u000a          return true;\u000a        }\u000a      }\u000a      else {\u000a        memcpy(&local_150,__src,0x90);\u000a      }\u000a      if ((dst_sb->st_mode & 0xf000) == 0xa000) {\u000a        iVar5 = stat(dst_name,(stat *)&local_c0);\u000a        if (iVar5 != 0) {\u000a          return true;\u000a        }\u000a      }\u000a      else {\u000a        memcpy(&local_c0,dst_sb,0x90);\u000a      }\u000a      if (local_150.st_ino != local_c0.st_ino) {\u000a        return true;\u000a      }\u000a      if (local_150.st_dev != local_c0.st_dev) {\u000a        return true;\u000a      }\u000a      if (x->hard_link != false) {\u000aLAB_00406335:\u000a        *return_now = true;\u000a        return true;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    if (bVar6) {\u000a      _Var4 = same_name(src_name,dst_name);\u000a      return (_Bool)(_Var4 ^ 1);\u000a    }\u000a    if ((((x->move_mode != false) || (x->dereference == DEREF_NEVER)) ||\u000a        ((__src->st_mode & 0xf000) != 0xa000)) || ((dst_sb->st_mode & 0xf000) == 0xa000)) {\u000a      return true;\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p3202
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x138\nMOV R14,R9\nMOV R15,R8\nMOV RBX,RCX\nMOV RBP,RSI\nMOV RAX,qword ptr [RBP + 0x8]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x00405fca\nMOV RAX,qword ptr [RBP]\nCMP RAX,qword ptr [RBX]\nSETZ AL\nMOV byte ptr [R14],0x0\nJNZ 0x00405fd0\nCMP byte ptr [R15 + 0x17],0x0\nJZ 0x0040603d\nMOV byte ptr [R14],0x1\nMOV R12B,0x1\nJMP 0x0040633e\nMOV byte ptr [R14],0x0\nXOR EAX,EAX\nXOR R13D,R13D\nCMP dword ptr [R15 + 0x4],0x2\nJNZ 0x00406047\nMOV ECX,0xf000\nMOV ESI,dword ptr [RBP + 0x18]\nAND ESI,ECX\nCMP ESI,0xa000\nJNZ 0x00406014\nAND ECX,dword ptr [RBX + 0x18]\nCMP ECX,0xa000\nMOV RSI,RBP\nJNZ 0x00406017\nMOV RSI,RDX\nCALL 0x0040cc10\nTEST AL,AL\nJZ 0x004060ec\nXOR AL,0x1\nMOV R12B,AL\nJMP 0x0040633e\nMOV RSI,RBP\nCMP dword ptr [R15],0x0\nJZ 0x0040615d\nTEST AL,AL\nJZ 0x004060b6\nMOV RSI,RDX\nCALL 0x0040cc10\nMOV R12B,AL\nXOR R12B,0x1\nJMP 0x0040633e\nMOV R13B,0x1\nCMP dword ptr [R15 + 0x4],0x2\nJZ 0x00405fda\nMOV R12B,0x1\nTEST R13B,R13B\nJZ 0x0040633e\nMOV qword ptr [RSP + 0x8],RDI\nLEA RBX,[0xa8 + RSP]\nMOV RDI,RDX\nMOV RSI,RBX\nMOV R13,RDX\nCALL 0x004107b0\nTEST EAX,EAX\nJNZ 0x0040633e\nMOV qword ptr [RSP + 0x10],R13\nLEA R13,[RSP + 0x18]\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,R13\nCALL 0x004107b0\nTEST EAX,EAX\nJNZ 0x0040633e\nMOV RAX,qword ptr [RSP + 0x20]\nCMP RAX,qword ptr [0xb0 + RSP]\nJNZ 0x0040610b\nMOV RAX,qword ptr [RSP + 0x18]\nCMP RAX,qword ptr [0xa8 + RSP]\nSETZ AL\nJMP 0x0040610d\nCMP byte ptr [R15 + 0x18],0x0\nJNZ 0x004060e4\nCMP dword ptr [R15 + 0x4],0x2\nJZ 0x004060e4\nMOV EAX,0xf000\nMOV ECX,dword ptr [RSI + 0x18]\nAND ECX,EAX\nCMP ECX,0xa000\nJNZ 0x004060e4\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0xa000\nJNZ 0x0040633b\nMOV R12B,0x1\nJMP 0x0040633e\nMOV R12B,0x1\nCMP dword ptr [R15],0x0\nJNZ 0x0040633e\nTEST R13B,R13B\nJZ 0x0040600a\nMOV byte ptr [R14],0x1\nJMP 0x0040628a\nXOR EAX,EAX\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RDI,qword ptr [RSP + 0x8]\nMOV ECX,0xf000\nMOV ESI,dword ptr [RSP + 0x30]\nAND ESI,ECX\nCMP ESI,0xa000\nJNZ 0x00406150\nAND ECX,dword ptr [0xc0 + RSP]\nCMP ECX,0xa000\nMOV RSI,R13\nJNZ 0x00406017\nCMP byte ptr [R15 + 0x15],0x0\nJNZ 0x0040633e\nJMP 0x00406017\nMOV RSI,R13\nCMP dword ptr [R15],0x0\nJNZ 0x00406021\nCMP byte ptr [R15 + 0x18],0x0\nJNZ 0x0040616b\nCMP byte ptr [R15 + 0x15],0x0\nJZ 0x004061b3\nMOV ECX,0xf000\nAND ECX,dword ptr [RBX + 0x18]\nMOV R12B,0x1\nCMP ECX,0xa000\nJZ 0x0040633e\nTEST AL,AL\nJZ 0x004061b3\nCMP qword ptr [RBX + 0x10],0x2\nJC 0x004061b3\nMOV R13,RDI\nMOV qword ptr [RSP + 0x8],RSI\nMOV RSI,RDX\nMOV R12,RDX\nCALL 0x0040cc10\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RDI,R13\nMOV RDX,R12\nTEST AL,AL\nJZ 0x0040628a\nMOV EAX,0xf000\nMOV ECX,dword ptr [RSI + 0x18]\nAND ECX,EAX\nCMP ECX,0xa000\nJZ 0x004061d3\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0xa000\nJNZ 0x00406298\nCMP byte ptr [R15 + 0x18],0x0\nJZ 0x0040622e\nMOV EAX,0xf000\nAND EAX,dword ptr [RBP + 0x18]\nCMP EAX,0xa000\nJNZ 0x0040622e\nCMP qword ptr [RBX + 0x10],0x2\nJC 0x0040622e\nMOV RBP,RDI\nMOV R12,RDX\nMOV R13,RSI\nCALL 0x00402580\nMOV RSI,R13\nMOV RDI,RBP\nMOV RDX,R12\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x0040622e\nMOV RDI,RBP\nMOV RSI,RDX\nCALL 0x0040cc10\nMOV R12B,AL\nXOR R12B,0x1\nMOV RDI,RBP\nCALL 0x00402290\nJMP 0x0040633e\nCMP byte ptr [R15 + 0x15],0x0\nJZ 0x00406253\nMOV EAX,0xf000\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0xa000\nJNZ 0x00406253\nMOV RAX,qword ptr [RBX]\nCMP RAX,qword ptr [RSI]\nSETZ R12B\nJMP 0x0040633e\nCMP dword ptr [R15 + 0x4],0x2\nJNZ 0x0040633b\nMOV RBP,RDX\nMOV EAX,0xf000\nAND EAX,dword ptr [RSI + 0x18]\nCMP EAX,0xa000\nJNZ 0x004062c1\nLEA RSI,[RSP + 0x18]\nCALL 0x00410790\nMOV R12B,0x1\nTEST EAX,EAX\nMOV RDI,RBP\nJNZ 0x0040633e\nJMP 0x004062d3\nCMP byte ptr [R15 + 0x18],0x0\nSETZ R12B\nJMP 0x0040633e\nMOV RAX,qword ptr [RSI + 0x8]\nMOV R12B,0x1\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x0040633e\nMOV RAX,qword ptr [RSI]\nCMP RAX,qword ptr [RBX]\nJNZ 0x0040633e\nCMP byte ptr [R15 + 0x17],0x0\nJNZ 0x00406335\nJMP 0x004061d3\nLEA RDI,[RSP + 0x18]\nMOV EDX,0x90\nCALL 0x004026d0\nMOV RDI,RBP\nMOV EAX,0xf000\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0xa000\nJNZ 0x004062f8\nLEA RSI,[0xa8 + RSP]\nCALL 0x00410790\nMOV R12B,0x1\nTEST EAX,EAX\nJNZ 0x0040633e\nJMP 0x0040630d\nLEA RDI,[0xa8 + RSP]\nMOV EDX,0x90\nMOV RSI,RBX\nCALL 0x004026d0\nMOV RAX,qword ptr [RSP + 0x20]\nMOV R12B,0x1\nCMP RAX,qword ptr [0xb0 + RSP]\nJNZ 0x0040633e\nMOV RAX,qword ptr [RSP + 0x18]\nCMP RAX,qword ptr [0xa8 + RSP]\nJNZ 0x0040633e\nCMP byte ptr [R15 + 0x17],0x0\nJZ 0x0040633b\nMOV byte ptr [R14],0x1\nJMP 0x0040633e\nXOR R12D,R12D\nMOV EAX,R12D\nADD RSP,0x138\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p3203
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 38 01 00 00\n4d 89 ce\n4d 89 c7\n48 89 cb\n48 89 f5\n48 8b 45 08\n48 3b 43 08\n75 23\n48 8b 45 00\n48 3b 03\n0f 94 c0\n41 c6 06 00\n75 19\n41 80 7f 17 00\n74 7f\n41 c6 06 01\n41 b4 01\ne9 74 03 00 00\n41 c6 06 00\n31 c0\n45 31 ed\n41 83 7f 04 02\n75 6d\nb9 00 f0 00 00\n8b 75 18\n21 ce\n81 fe 00 a0 00 00\n75 28\n23 4b 18\n81 f9 00 a0 00 00\n48 89 ee\n75 1d\n48 89 d6\ne8 0e 6c 00 00\n84 c0\n0f 84 e2 00 00 00\n34 01\n41 88 c4\ne9 2a 03 00 00\n48 89 ee\n41 83 3f 00\n0f 84 3c 01 00 00\n84 c0\n0f 84 8d 00 00 00\n48 89 d6\ne8 df 6b 00 00\n41 88 c4\n41 80 f4 01\ne9 01 03 00 00\n41 b5 01\n41 83 7f 04 02\n74 93\n41 b4 01\n45 84 ed\n0f 84 eb 02 00 00\n48 89 7c 24 08\n48 8d 9c 24 a8 00 00 00\n48 89 d7\n48 89 de\n49 89 d5\ne8 42 a7 00 00\n85 c0\n0f 85 c8 02 00 00\n4c 89 6c 24 10\n4c 8d 6c 24 18\n48 8b 7c 24 08\n4c 89 ee\ne8 23 a7 00 00\n85 c0\n0f 85 a9 02 00 00\n48 8b 44 24 20\n48 3b 84 24 b0 00 00 00\n75 67\n48 8b 44 24 18\n48 3b 84 24 a8 00 00 00\n0f 94 c0\neb 57\n41 80 7f 18 00\n75 27\n41 83 7f 04 02\n74 20\nb8 00 f0 00 00\n8b 4e 18\n21 c1\n81 f9 00 a0 00 00\n75 0e\n23 43 18\n3d 00 a0 00 00\n0f 85 57 02 00 00\n41 b4 01\ne9 52 02 00 00\n41 b4 01\n41 83 3f 00\n0f 85 45 02 00 00\n45 84 ed\n0f 84 08 ff ff ff\n41 c6 06 01\ne9 7f 01 00 00\n31 c0\n48 8b 54 24 10\n48 8b 7c 24 08\nb9 00 f0 00 00\n8b 74 24 30\n21 ce\n81 fe 00 a0 00 00\n75 26\n23 8c 24 c0 00 00 00\n81 f9 00 a0 00 00\n4c 89 ee\n0f 85 d7 fe ff ff\n41 80 7f 15 00\n0f 85 f3 01 00 00\ne9 c7 fe ff ff\n4c 89 ee\n41 83 3f 00\n0f 85 c4 fe ff ff\n41 80 7f 18 00\n75 07\n41 80 7f 15 00\n74 48\nb9 00 f0 00 00\n23 4b 18\n41 b4 01\n81 f9 00 a0 00 00\n0f 84 bc 01 00 00\n84 c0\n74 2d\n48 83 7b 10 02\n72 26\n49 89 fd\n48 89 74 24 08\n48 89 d6\n49 89 d4\ne8 70 6a 00 00\n48 8b 74 24 08\n4c 89 ef\n4c 89 e2\n84 c0\n0f 84 d7 00 00 00\nb8 00 f0 00 00\n8b 4e 18\n21 c1\n81 f9 00 a0 00 00\n74 0e\n23 43 18\n3d 00 a0 00 00\n0f 85 c5 00 00 00\n41 80 7f 18 00\n74 54\nb8 00 f0 00 00\n23 45 18\n3d 00 a0 00 00\n75 45\n48 83 7b 10 02\n72 3e\n48 89 fd\n49 89 d4\n49 89 f5\ne8 82 c3 ff ff\n4c 89 ee\n48 89 ef\n4c 89 e2\n48 89 c5\n48 85 ed\n74 1f\n48 89 ef\n48 89 d6\ne8 f6 69 00 00\n41 88 c4\n41 80 f4 01\n48 89 ef\ne8 67 c0 ff ff\ne9 10 01 00 00\n41 80 7f 15 00\n74 1e\nb8 00 f0 00 00\n23 43 18\n3d 00 a0 00 00\n75 0f\n48 8b 03\n48 3b 06\n41 0f 94 c4\ne9 eb 00 00 00\n41 83 7f 04 02\n0f 85 dd 00 00 00\n48 89 d5\nb8 00 f0 00 00\n23 46 18\n3d 00 a0 00 00\n75 51\n48 8d 74 24 18\ne8 16 a5 00 00\n41 b4 01\n85 c0\n48 89 ef\n0f 85 b6 00 00 00\neb 49\n41 80 7f 18 00\n41 0f 94 c4\ne9 a6 00 00 00\n48 8b 46 08\n41 b4 01\n48 3b 43 08\n0f 85 95 00 00 00\n48 8b 06\n48 3b 03\n0f 85 89 00 00 00\n41 80 7f 17 00\n75 79\ne9 12 ff ff ff\n48 8d 7c 24 18\nba 90 00 00 00\ne8 00 c4 ff ff\n48 89 ef\nb8 00 f0 00 00\n23 43 18\n3d 00 a0 00 00\n75 16\n48 8d b4 24 a8 00 00 00\ne8 a1 a4 00 00\n41 b4 01\n85 c0\n75 48\neb 15\n48 8d bc 24 a8 00 00 00\nba 90 00 00 00\n48 89 de\ne8 c3 c3 ff ff\n48 8b 44 24 20\n41 b4 01\n48 3b 84 24 b0 00 00 00\n75 1f\n48 8b 44 24 18\n48 3b 84 24 a8 00 00 00\n75 10\n41 80 7f 17 00\n74 06\n41 c6 06 01\neb 03\n45 31 e4\n44 89 e0\n48 81 c4 38 01 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p3204
S'.text:0000000000405f80\n.text:0000000000405f81\n.text:0000000000405f83\n.text:0000000000405f85\n.text:0000000000405f87\n.text:0000000000405f89\n.text:0000000000405f8a\n.text:0000000000405f91\n.text:0000000000405f94\n.text:0000000000405f97\n.text:0000000000405f9a\n.text:0000000000405f9d\n.text:0000000000405fa1\n.text:0000000000405fa5\n.text:0000000000405fa7\n.text:0000000000405fab\n.text:0000000000405fae\n.text:0000000000405fb1\n.text:0000000000405fb5\n.text:0000000000405fb7\n.text:0000000000405fbc\n.text:0000000000405fbe\n.text:0000000000405fc2\n.text:0000000000405fc5\n.text:0000000000405fca\n.text:0000000000405fce\n.text:0000000000405fd0\n.text:0000000000405fd3\n.text:0000000000405fd8\n.text:0000000000405fda\n.text:0000000000405fdf\n.text:0000000000405fe2\n.text:0000000000405fe4\n.text:0000000000405fea\n.text:0000000000405fec\n.text:0000000000405fef\n.text:0000000000405ff5\n.text:0000000000405ff8\n.text:0000000000405ffa\n.text:0000000000405ffd\n.text:0000000000406002\n.text:0000000000406004\n.text:000000000040600a\n.text:000000000040600c\n.text:000000000040600f\n.text:0000000000406014\n.text:0000000000406017\n.text:000000000040601b\n.text:0000000000406021\n.text:0000000000406023\n.text:0000000000406029\n.text:000000000040602c\n.text:0000000000406031\n.text:0000000000406034\n.text:0000000000406038\n.text:000000000040603d\n.text:0000000000406040\n.text:0000000000406045\n.text:0000000000406047\n.text:000000000040604a\n.text:000000000040604d\n.text:0000000000406053\n.text:0000000000406058\n.text:0000000000406060\n.text:0000000000406063\n.text:0000000000406066\n.text:0000000000406069\n.text:000000000040606e\n.text:0000000000406070\n.text:0000000000406076\n.text:000000000040607b\n.text:0000000000406080\n.text:0000000000406085\n.text:0000000000406088\n.text:000000000040608d\n.text:000000000040608f\n.text:0000000000406095\n.text:000000000040609a\n.text:00000000004060a2\n.text:00000000004060a4\n.text:00000000004060a9\n.text:00000000004060b1\n.text:00000000004060b4\n.text:00000000004060b6\n.text:00000000004060bb\n.text:00000000004060bd\n.text:00000000004060c2\n.text:00000000004060c4\n.text:00000000004060c9\n.text:00000000004060cc\n.text:00000000004060ce\n.text:00000000004060d4\n.text:00000000004060d6\n.text:00000000004060d9\n.text:00000000004060de\n.text:00000000004060e4\n.text:00000000004060e7\n.text:00000000004060ec\n.text:00000000004060ef\n.text:00000000004060f3\n.text:00000000004060f9\n.text:00000000004060fc\n.text:0000000000406102\n.text:0000000000406106\n.text:000000000040610b\n.text:000000000040610d\n.text:0000000000406112\n.text:0000000000406117\n.text:000000000040611c\n.text:0000000000406120\n.text:0000000000406122\n.text:0000000000406128\n.text:000000000040612a\n.text:0000000000406131\n.text:0000000000406137\n.text:000000000040613a\n.text:0000000000406140\n.text:0000000000406145\n.text:000000000040614b\n.text:0000000000406150\n.text:0000000000406153\n.text:0000000000406157\n.text:000000000040615d\n.text:0000000000406162\n.text:0000000000406164\n.text:0000000000406169\n.text:000000000040616b\n.text:0000000000406170\n.text:0000000000406173\n.text:0000000000406176\n.text:000000000040617c\n.text:0000000000406182\n.text:0000000000406184\n.text:0000000000406186\n.text:000000000040618b\n.text:000000000040618d\n.text:0000000000406190\n.text:0000000000406195\n.text:0000000000406198\n.text:000000000040619b\n.text:00000000004061a0\n.text:00000000004061a5\n.text:00000000004061a8\n.text:00000000004061ab\n.text:00000000004061ad\n.text:00000000004061b3\n.text:00000000004061b8\n.text:00000000004061bb\n.text:00000000004061bd\n.text:00000000004061c3\n.text:00000000004061c5\n.text:00000000004061c8\n.text:00000000004061cd\n.text:00000000004061d3\n.text:00000000004061d8\n.text:00000000004061da\n.text:00000000004061df\n.text:00000000004061e2\n.text:00000000004061e7\n.text:00000000004061e9\n.text:00000000004061ee\n.text:00000000004061f0\n.text:00000000004061f3\n.text:00000000004061f6\n.text:00000000004061f9\n.text:00000000004061fe\n.text:0000000000406201\n.text:0000000000406204\n.text:0000000000406207\n.text:000000000040620a\n.text:000000000040620d\n.text:000000000040620f\n.text:0000000000406212\n.text:0000000000406215\n.text:000000000040621a\n.text:000000000040621d\n.text:0000000000406221\n.text:0000000000406224\n.text:0000000000406229\n.text:000000000040622e\n.text:0000000000406233\n.text:0000000000406235\n.text:000000000040623a\n.text:000000000040623d\n.text:0000000000406242\n.text:0000000000406244\n.text:0000000000406247\n.text:000000000040624a\n.text:000000000040624e\n.text:0000000000406253\n.text:0000000000406258\n.text:000000000040625e\n.text:0000000000406261\n.text:0000000000406266\n.text:0000000000406269\n.text:000000000040626e\n.text:0000000000406270\n.text:0000000000406275\n.text:000000000040627a\n.text:000000000040627d\n.text:000000000040627f\n.text:0000000000406282\n.text:0000000000406288\n.text:000000000040628a\n.text:000000000040628f\n.text:0000000000406293\n.text:0000000000406298\n.text:000000000040629c\n.text:000000000040629f\n.text:00000000004062a3\n.text:00000000004062a9\n.text:00000000004062ac\n.text:00000000004062af\n.text:00000000004062b5\n.text:00000000004062ba\n.text:00000000004062bc\n.text:00000000004062c1\n.text:00000000004062c6\n.text:00000000004062cb\n.text:00000000004062d0\n.text:00000000004062d3\n.text:00000000004062d8\n.text:00000000004062db\n.text:00000000004062e0\n.text:00000000004062e2\n.text:00000000004062ea\n.text:00000000004062ef\n.text:00000000004062f2\n.text:00000000004062f4\n.text:00000000004062f6\n.text:00000000004062f8\n.text:0000000000406300\n.text:0000000000406305\n.text:0000000000406308\n.text:000000000040630d\n.text:0000000000406312\n.text:0000000000406315\n.text:000000000040631d\n.text:000000000040631f\n.text:0000000000406324\n.text:000000000040632c\n.text:000000000040632e\n.text:0000000000406333\n.text:0000000000406335\n.text:0000000000406339\n.text:000000000040633b\n.text:000000000040633e\n.text:0000000000406341\n.text:0000000000406348\n.text:0000000000406349\n.text:000000000040634b\n.text:000000000040634d\n.text:000000000040634f\n.text:0000000000406351\n.text:0000000000406352\n'
p3205
tp3206
sS'__do_global_dtors_aux'
p3207
(S'\n__stdcall __do_global_dtors_aux()\n'
p3208
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p3209
S'CMP byte ptr [0x006184e8],0x0\nJNZ 0x00402aca\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00402a30\nPOP RBP\nMOV byte ptr [0x006184e8],0x1\nRET\n'
p3210
S'80 3d 31 5a 21 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 1e 5a 21 00 01\nf3 c3\n'
p3211
S'.text:0000000000402ab0\n.text:0000000000402ab7\n.text:0000000000402ab9\n.text:0000000000402aba\n.text:0000000000402abd\n.text:0000000000402ac2\n.text:0000000000402ac3\n.text:0000000000402aca\n'
p3212
tp3213
sS'c_isprint'
p3214
(S'\n__stdcall c_isprint()\n'
p3215
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p3216
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p3217
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p3218
S'.text:000000000040fa80\n.text:000000000040fa83\n.text:000000000040fa86\n.text:000000000040fa89\n'
p3219
tp3220
sS'_fini'
p3221
(S'\n__stdcall _fini()\n'
p3222
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p3223
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p3224
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p3225
S'.fini:0000000000410800\n.fini:0000000000410804\n.fini:0000000000410808\n'
p3226
tp3227
sS'utimensat'
p3228
(S'\n__stdcall utimensat(int __fd, char * __path, timespec * __times, int __flags)\n'
p3229
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint utimensat(int __fd,char *__path,timespec *__times,int __flags)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_utimensat_00618038)();\u000a  return iVar1;\u000a}\u000a\u000a
p3230
S'JMP qword ptr [0x00618038]\n'
p3231
S'ff 25 92 5d 21 00\n'
p3232
S'.plt:00000000004022a0\n'
p3233
tp3234
s.