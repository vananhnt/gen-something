(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x602de8]\nPUSH RBP\nLEA RBP,[0x602df0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004009c0\nTEST RBP,RBP\nJZ 0x00401826\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00401810\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 06 16 20 00\n55\n48 8d 2d 06 16 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 bf f1 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:00000000004017d0\n.text:00000000004017d2\n.text:00000000004017d4\n.text:00000000004017d7\n.text:00000000004017d9\n.text:00000000004017db\n.text:00000000004017e2\n.text:00000000004017e3\n.text:00000000004017ea\n.text:00000000004017eb\n.text:00000000004017ee\n.text:00000000004017f1\n.text:00000000004017f4\n.text:00000000004017f8\n.text:00000000004017fc\n.text:0000000000401801\n.text:0000000000401804\n.text:0000000000401806\n.text:0000000000401808\n.text:0000000000401810\n.text:0000000000401813\n.text:0000000000401816\n.text:0000000000401819\n.text:000000000040181d\n.text:0000000000401821\n.text:0000000000401824\n.text:0000000000401826\n.text:000000000040182a\n.text:000000000040182b\n.text:000000000040182c\n.text:000000000040182e\n.text:0000000000401830\n.text:0000000000401832\n.text:0000000000401834\n'
p6
tp7
sS'__ctype_b_loc'
p8
(S'\n__stdcall __ctype_b_loc()\n'
p9
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_006030b0)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x006030b0]\n'
p11
S'ff 25 8a 25 20 00\n'
p12
S'.plt:0000000000400b20\n'
p13
tp14
sS'_init'
p15
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p16
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00602ff8;\u000a  if (PTR___gmon_start___00602ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00602ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p17
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00602ff8]\nTEST RAX,RAX\nJZ 0x004009d2\nCALL RAX\nADD RSP,0x8\nRET\n'
p18
S'48 83 ec 08\n48 8b 05 2d 26 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p19
S'.init:00000000004009c0\n.init:00000000004009c4\n.init:00000000004009cb\n.init:00000000004009ce\n.init:00000000004009d0\n.init:00000000004009d2\n.init:00000000004009d6\n'
p20
tp21
sS'XvQueryEncodings'
p22
(S'\n__stdcall XvQueryEncodings()\n'
p23
V\u000avoid XvQueryEncodings(void)\u000a\u000a{\u000a  (*(code *)PTR_XvQueryEncodings_00603030)();\u000a  return;\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x00603030]\n'
p25
S'ff 25 0a 26 20 00\n'
p26
S'.plt:0000000000400a20\n'
p27
tp28
sS'XOpenDisplay'
p29
(S'\n__stdcall XOpenDisplay()\n'
p30
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_00603068)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x00603068]\n'
p32
S'ff 25 d2 25 20 00\n'
p33
S'.plt:0000000000400a90\n'
p34
tp35
sS'_start'
p36
(S'\n__stdcall _start()\n'
p37
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00602ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p38
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x401840\nMOV RCX,0x4017d0\nMOV RDI,0x400c30\nCALL qword ptr [0x00602ff0]\nHLT\n'
p39
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 40 18 40 00\n48 c7 c1 d0 17 40 00\n48 c7 c7 30 0c 40 00\nff 15 96 24 20 00\nf4\n'
p40
S'.text:0000000000400b30\n.text:0000000000400b32\n.text:0000000000400b35\n.text:0000000000400b36\n.text:0000000000400b39\n.text:0000000000400b3d\n.text:0000000000400b3e\n.text:0000000000400b3f\n.text:0000000000400b46\n.text:0000000000400b4d\n.text:0000000000400b54\n.text:0000000000400b5a\n'
p41
tp42
sS'fputc'
p43
(S'\n__stdcall fputc(int __c, FILE * __stream)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_00603058)();\u000a  return iVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x00603058]\n'
p46
S'ff 25 e2 25 20 00\n'
p47
S'.plt:0000000000400a70\n'
p48
tp49
sS'main'
p50
(S'\n__stdcall main(char * * argv)\n'
p51
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint main(char **argv)\u000a\u000a{\u000a  byte bVar1;\u000a  ushort *puVar2;\u000a  FILE *__stream;\u000a  int iVar3;\u000a  int iVar4;\u000a  long lVar5;\u000a  long lVar6;\u000a  long lVar7;\u000a  uint *puVar8;\u000a  ushort **ppuVar9;\u000a  undefined8 in_RCX;\u000a  undefined *puVar10;\u000a  ulong uVar11;\u000a  char *__s1;\u000a  long lVar12;\u000a  undefined8 *puVar13;\u000a  int iVar14;\u000a  uint uVar15;\u000a  uint uVar16;\u000a  ulong uVar17;\u000a  char **ppcVar18;\u000a  uint *puVar19;\u000a  char **in_RSI;\u000a  size_t __size;\u000a  char cVar20;\u000a  char *unaff_R12;\u000a  undefined8 uVar21;\u000a  long lVar22;\u000a  char imageName [5];\u000a  uint nadaptors;\u000a  uint errorB;\u000a  uint reqB;\u000a  uint eventB;\u000a  long local_a0;\u000a  uint local_94;\u000a  undefined4 local_90;\u000a  long local_88;\u000a  uint local_7c;\u000a  int local_78;\u000a  uint local_74;\u000a  undefined8 local_70;\u000a  uint local_68;\u000a  uint local_64;\u000a  long local_60;\u000a  ulong local_58;\u000a  ulong local_50;\u000a  ulong local_48;\u000a  undefined local_3c [4];\u000a  undefined local_38 [4];\u000a  undefined local_34 [4];\u000a  \u000a  iVar4 = (int)argv;\u000a  progname = *in_RSI;\u000a  if (iVar4 < 5) {\u000a    if (iVar4 < 2) {\u000a      local_70 = 0;\u000a      unaff_R12 = (char *)0x0;\u000a    }\u000a    else {\u000a      iVar14 = 1;\u000a      unaff_R12 = (char *)0x0;\u000a      local_70 = 0;\u000a      do {\u000a        __s1 = in_RSI[(long)iVar14];\u000a        iVar3 = strcmp(__s1,"-display");\u000a        if (iVar3 == 0) {\u000a          iVar14 = iVar14 + 1;\u000a          if (iVar4 <= iVar14) {\u000a            fprintf(stderr,"%s: missing argument to -display\u005cn",progname);\u000a            PrintUsage();\u000a            goto LAB_0040170e;\u000a          }\u000a          unaff_R12 = in_RSI[(long)iVar14];\u000a        }\u000a        else {\u000a          iVar3 = strcmp(__s1,"-short");\u000a          in_RCX = CONCAT71((int7)((ulong)in_RCX >> 8),1);\u000a          local_70 = in_RCX;\u000a          if (iVar3 != 0) {\u000a            local_70 = in_RCX;\u000a            iVar4 = strcmp(__s1,"-version");\u000a            if (iVar4 == 0) {\u000a              puts("xvinfo 1.1.3");\u000a                    /* WARNING: Subroutine does not return */\u000a              exit(0);\u000a            }\u000aLAB_0040170e:\u000a            fprintf(stderr,"%s: unrecognized argument \u005c'%s\u005c'\u005cn",progname,__s1);\u000a            PrintUsage();\u000a            goto LAB_00401730;\u000a          }\u000a        }\u000a        iVar14 = iVar14 + 1;\u000a      } while (iVar14 < iVar4);\u000a    }\u000a    lVar5 = XOpenDisplay(unaff_R12);\u000a    if (lVar5 != 0) {\u000a      iVar4 = XvQueryExtension(lVar5,&local_64,&local_68,local_38,local_34,local_3c);\u000a      __s1 = progname;\u000a      __stream = stderr;\u000a      if (iVar4 != 0) {\u000a        if (unaff_R12 == (char *)0x0) {\u000a          unaff_R12 = (char *)XDisplayName(0);\u000a        }\u000a        fprintf(__stream,"%s: No X-Video Extension on %s\u005cn",__s1,unaff_R12);\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(0);\u000a      }\u000a      fprintf(stdout,"X-Video Extension version %i.%i\u005cn",(ulong)local_64,(ulong)local_68);\u000a      local_58 = (ulong)*(uint *)(lVar5 + 0xe4);\u000a      if (0 < (int)*(uint *)(lVar5 + 0xe4)) {\u000a        uVar17 = 0;\u000a        uVar21 = local_70;\u000a        local_60 = lVar5;\u000a        do {\u000a          fprintf(stdout,"screen #%i\u005cn",uVar17 & 0xffffffff);\u000a          XvQueryAdaptors(lVar5,*(undefined8 *)(*(long *)(lVar5 + 0xe8) + 0x10 + uVar17 * 0x80),\u000a                          &local_74,&local_a0);\u000a          if (local_74 == 0) {\u000a            fwrite(" no adaptors present\u005cn",0x15,1,stdout);\u000a          }\u000a          else {\u000a            local_50 = uVar17;\u000a            if (local_74 != 0) {\u000a              uVar11 = 0;\u000a              local_50 = uVar17;\u000a              do {\u000a                lVar22 = uVar11 * 0x38;\u000a                local_48 = uVar11;\u000a                fprintf(stdout,"  Adaptor #%i: \u005c"%s\u005c"\u005cn",uVar11,\u000a                        *(undefined8 *)(local_a0 + 0x18 + lVar22));\u000a                fprintf(stdout,"    number of ports: %li\u005cn",*(undefined8 *)(local_a0 + 8 + lVar22));\u000a                fprintf(stdout,"    port base: %li\u005cn",*(undefined8 *)(local_a0 + lVar22));\u000a                fwrite("    operations supported: ",0x1a,1,stdout);\u000a                bVar1 = *(byte *)(local_a0 + 0x10 + lVar22);\u000a                if ((bVar1 & 3) == 2) {\u000a                  if ((bVar1 & 4) != 0) {\u000a                    fwrite("GetVideo ",9,1,stdout);\u000a                  }\u000a                  if ((*(byte *)(local_a0 + 0x10 + lVar22) & 8) != 0) {\u000a                    __s1 = "GetStill ";\u000a                    __size = 9;\u000a                    goto LAB_00400f01;\u000a                  }\u000a                }\u000a                else {\u000a                  if ((bVar1 & 3) == 1) {\u000a                    if ((bVar1 & 4) != 0) {\u000a                      fwrite("PutVideo ",9,1,stdout);\u000a                    }\u000a                    if ((*(byte *)(local_a0 + 0x10 + lVar22) & 8) != 0) {\u000a                      fwrite("PutStill ",9,1,stdout);\u000a                    }\u000a                    if ((*(byte *)(local_a0 + 0x10 + lVar22) & 0x10) == 0) goto LAB_00400f0b;\u000a                    __s1 = "PutImage ";\u000a                    __size = 9;\u000a                  }\u000a                  else {\u000a                    __s1 = "none ";\u000a                    __size = 5;\u000a                  }\u000aLAB_00400f01:\u000a                  fwrite(__s1,__size,1,stdout);\u000a                }\u000aLAB_00400f0b:\u000a                fputc(10,stdout);\u000a                cVar20 = (char)uVar21;\u000a                if (cVar20 == 0) {\u000a                  __s1 = *(char **)(local_a0 + 0x28 + lVar22);\u000a                  fwrite("    supported visuals:\u005cn",0x17,1,stdout);\u000a                  if (*(long *)(local_a0 + 0x20 + lVar22) != 0) {\u000a                    uVar17 = 0;\u000a                    do {\u000a                      fprintf(stdout,"      depth %i, visualID 0x%2lx\u005cn",(ulong)(uint)(int)*__s1,\u000a                              *(undefined8 *)(__s1 + 8));\u000a                      uVar17 = uVar17 + 1;\u000a                      __s1 = __s1 + 0x10;\u000a                    } while (uVar17 < *(ulong *)(local_a0 + 0x20 + lVar22));\u000a                  }\u000a                }\u000a                lVar6 = XvQueryPortAttributes(lVar5,*(undefined8 *)(local_a0 + lVar22),&local_78);\u000a                if ((lVar6 == 0) || (local_78 == 0)) {\u000a                  fwrite("    no port attributes defined\u005cn",0x1f,1,stdout);\u000a                }\u000a                else {\u000a                  fprintf(stdout,"    number of attributes: %i\u005cn");\u000a                  if (0 < local_78) {\u000a                    puVar13 = (undefined8 *)(lVar6 + 0x10);\u000a                    lVar12 = 0;\u000a                    do {\u000a                      fprintf(stdout,"      \u005c"%s\u005c" (range %i to %i)\u005cn",*puVar13,\u000a                              (ulong)*(uint *)((long)puVar13 + -0xc),(ulong)*(uint *)(puVar13 + -1))\u000a                      ;\u000a                      if ((*(byte *)(puVar13 + -2) & 2) != 0) {\u000a                        if (cVar20 == 0) {\u000a                          __s1 = "              client settable attribute\u005cn";\u000a                          __size = 0x28;\u000a                        }\u000a                        else {\u000a                          __s1 = "              settable";\u000a                          __size = 0x16;\u000a                        }\u000a                        fwrite(__s1,__size,1,stdout);\u000a                      }\u000a                      if ((*(byte *)(puVar13 + -2) & 1) == 0) {\u000a                        if (cVar20 != 0) goto LAB_004010e0;\u000a                      }\u000a                      else {\u000a                        if (cVar20 == 0) {\u000a                          __s1 = "              client gettable attribute";\u000a                          __size = 0x27;\u000a                        }\u000a                        else {\u000a                          __s1 = ", gettable";\u000a                          __size = 10;\u000a                        }\u000a                        fwrite(__s1,__size,1,stdout);\u000a                        lVar7 = XInternAtom(lVar5,*puVar13,1);\u000a                        if ((lVar7 != 0) &&\u000a                           (iVar4 = XvGetPortAttribute(lVar5,*(undefined8 *)(local_a0 + lVar22),\u000a                                                       lVar7), iVar4 == 0)) {\u000a                          fprintf(stdout," (current value is %i)",(ulong)local_90);\u000a                        }\u000aLAB_004010e0:\u000a                        fputc(10,stdout);\u000a                      }\u000a                      lVar12 = lVar12 + 1;\u000a                      puVar13 = puVar13 + 3;\u000a                    } while (lVar12 < (long)local_78);\u000a                  }\u000a                  XFree(lVar6);\u000a                }\u000a                XvQueryEncodings(lVar5,*(undefined8 *)(local_a0 + lVar22),&local_94,&local_88);\u000a                uVar15 = local_94;\u000a                if ((local_88 != 0) && (local_94 != 0)) {\u000a                  if (local_94 == 0) {\u000a                    iVar4 = 0;\u000a                    uVar15 = 0;\u000a                  }\u000a                  else {\u000a                    uVar11 = (ulong)local_94;\u000a                    ppcVar18 = (char **)(local_88 + 8);\u000a                    uVar17 = 0;\u000a                    iVar4 = 0;\u000a                    do {\u000a                      iVar14 = strcmp(*ppcVar18,"XV_IMAGE");\u000a                      iVar4 = iVar4 + (uint)(iVar14 == 0);\u000a                      uVar17 = uVar17 + 1;\u000a                      ppcVar18 = ppcVar18 + 6;\u000a                    } while (uVar17 < uVar11);\u000a                  }\u000a                  if ((uVar15 - iVar4 != 0) &&\u000a                     (fprintf(stdout,"    number of encodings: %i\u005cn",(ulong)(uVar15 - iVar4)),\u000a                     local_94 != 0)) {\u000a                    uVar15 = 0;\u000a                    lVar5 = 0;\u000a                    do {\u000a                      lVar6 = local_88;\u000a                      __s1 = *(char **)(local_88 + 8 + lVar5);\u000a                      iVar14 = strcmp(__s1,"XV_IMAGE");\u000a                      if (iVar14 != 0) {\u000a                        fprintf(stdout,"      encoding ID #%li: \u005c"%s\u005c"\u005cn",\u000a                                *(undefined8 *)(lVar6 + lVar5),__s1);\u000a                        fprintf(stdout,"        size: %li x %li\u005cn",\u000a                                *(undefined8 *)(local_88 + 0x10 + lVar5),\u000a                                *(undefined8 *)(local_88 + 0x18 + lVar5));\u000a                        fprintf((FILE *)(double)((float)*(int *)(local_88 + 0x20 + lVar5) /\u000a                                                (float)*(int *)(local_88 + 0x24 + lVar5)),\u000a                                (char *)stdout,"        rate: %f\u005cn");\u000a                      }\u000a                      lVar5 = lVar5 + 0x30;\u000a                      uVar15 = uVar15 + 1;\u000a                    } while (uVar15 < local_94);\u000a                  }\u000a                  uVar21 = local_70;\u000a                  uVar15 = local_94;\u000a                  lVar5 = local_60;\u000a                  if ((iVar4 != 0) &&\u000a                     (lVar5 = local_60, (*(byte *)(local_a0 + 0x10 + lVar22) & 0x10) != 0)) {\u000a                    if (local_94 != 0) {\u000a                      puVar13 = (undefined8 *)(local_88 + 0x18);\u000a                      uVar16 = 0;\u000a                      do {\u000a                        iVar4 = strcmp((char *)puVar13[-2],"XV_IMAGE");\u000a                        if (iVar4 == 0) {\u000a                          fprintf(stdout,"    maximum XvImage size: %li x %li\u005cn",puVar13[-1],\u000a                                  *puVar13);\u000a                          break;\u000a                        }\u000a                        puVar13 = puVar13 + 6;\u000a                        uVar16 = uVar16 + 1;\u000a                      } while (uVar16 < uVar15);\u000a                    }\u000a                    lVar5 = local_60;\u000a                    puVar8 = (uint *)XvListImageFormats(local_60,*(undefined8 *)(local_a0 + lVar22),\u000a                                                        &local_7c);\u000a                    fprintf(stdout,"    Number of image formats: %i\u005cn",(ulong)local_7c);\u000a                    if ((int)local_7c < 1) {\u000a                      if (puVar8 == (uint *)0x0) goto LAB_00401654;\u000a                    }\u000a                    else {\u000a                      lVar22 = 0;\u000a                      puVar19 = puVar8;\u000a                      do {\u000a                        uVar15 = *puVar19;\u000a                        snprintf((char *)&local_90,5,"%c%c%c%c",(ulong)(byte)uVar15,\u000a                                 (ulong)(uVar15 >> 8) & 0xff,(ulong)(byte)(uVar15 >> 0x10),\u000a                                 uVar15 >> 0x18);\u000a                        fprintf(stdout,"      id: 0x%x",(ulong)*puVar19);\u000a                        ppuVar9 = __ctype_b_loc();\u000a                        puVar2 = *ppuVar9;\u000a                        if (((((*(byte *)((long)puVar2 + (long)(char)local_90 * 2 + 1) & 0x40) == 0)\u000a                             || ((*(byte *)((long)puVar2 + (long)local_90._1_1_ * 2 + 1) & 0x40) ==\u000a                                 0)) ||\u000a                            ((*(byte *)((long)puVar2 + (long)local_90._2_1_ * 2 + 1) & 0x40) == 0))\u000a                           || ((*(byte *)((long)puVar2 + (long)local_90._3_1_ * 2 + 1) & 0x40) == 0)\u000a                           ) {\u000a                          fputc(10,stdout);\u000a                        }\u000a                        else {\u000a                          fprintf(stdout," (%s)\u005cn",&local_90);\u000a                        }\u000a                        if ((char)uVar21 == 0) {\u000a                          fwrite("        guid: ",0xe,1,stdout);\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)(puVar19 + 3));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0xd));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0xe));\u000a                          fprintf(stdout,"%02x-",(ulong)*(byte *)((long)puVar19 + 0xf));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)(puVar19 + 4));\u000a                          fprintf(stdout,"%02x-",(ulong)*(byte *)((long)puVar19 + 0x11));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0x12));\u000a                          fprintf(stdout,"%02x-",(ulong)*(byte *)((long)puVar19 + 0x13));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)(puVar19 + 5));\u000a                          fprintf(stdout,"%02x-",(ulong)*(byte *)((long)puVar19 + 0x15));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0x16));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0x17));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)(puVar19 + 6));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0x19));\u000a                          fprintf(stdout,"%02x",(ulong)*(byte *)((long)puVar19 + 0x1a));\u000a                          fprintf(stdout,"%02x\u005cn",(ulong)*(byte *)((long)puVar19 + 0x1b));\u000a                          fprintf(stdout,"        bits per pixel: %i\u005cn",(ulong)puVar19[7]);\u000a                          fprintf(stdout,"        number of planes: %i\u005cn",(ulong)puVar19[9]);\u000a                          puVar10 = &DAT_00401c35;\u000a                          if (puVar19[1] == 0) {\u000a                            puVar10 = &DAT_00401c31;\u000a                          }\u000a                          fprintf(stdout,"        type: %s (%s)\u005cn",puVar10);\u000a                          if (puVar19[1] == 0) {\u000a                            fprintf(stdout,"        depth: %i\u005cn",(ulong)puVar19[10]);\u000a                            fprintf(stdout,"        red, green, blue masks: 0x%x, 0x%x, 0x%x\u005cn",\u000a                                    (ulong)puVar19[0xb],(ulong)puVar19[0xc],(ulong)puVar19[0xd]);\u000a                          }\u000a                        }\u000a                        lVar22 = lVar22 + 1;\u000a                        puVar19 = puVar19 + 0x20;\u000a                      } while (lVar22 < (long)(int)local_7c);\u000a                    }\u000a                    XFree(puVar8);\u000a                  }\u000aLAB_00401654:\u000a                  XvFreeEncodingInfo(local_88);\u000a                }\u000a                uVar11 = local_48 + 1 & 0xffffffff;\u000a              } while ((uint)(local_48 + 1) < local_74);\u000a            }\u000a            XvFreeAdaptorInfo(local_a0);\u000a            uVar17 = local_50;\u000a          }\u000a          uVar17 = uVar17 + 1;\u000a        } while (uVar17 != local_58);\u000a      }\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000aLAB_00401730:\u000a    PrintUsage();\u000a  }\u000a  __s1 = progname;\u000a  __stream = stderr;\u000a  if (unaff_R12 == (char *)0x0) {\u000a    unaff_R12 = (char *)XDisplayName(0);\u000a  }\u000a  fprintf(__stream,"%s:  Unable to open display %s\u005cn",__s1,unaff_R12);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(-1);\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x78\nMOV R15,RSI\nMOV R13D,EDI\nMOV RAX,qword ptr [R15]\nMOV qword ptr [0x00603110],RAX\nCMP R13D,0x5\nJGE 0x00401730\nCMP R13D,0x2\nJL 0x00400ccb\nMOV EBP,0x1\nXOR R12D,R12D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x38],RAX\nNOP dword ptr [RAX]\nMOVSXD RAX,EBP\nMOV RBX,qword ptr [R15 + RAX*0x8]\nMOV ESI,0x401854\nMOV RDI,RBX\nCALL 0x00400a80\nTEST EAX,EAX\nJZ 0x00400cb0\nMOV ESI,0x40187f\nMOV RDI,RBX\nCALL 0x00400a80\nMOV CL,0x1\nMOV qword ptr [RSP + 0x38],RCX\nTEST EAX,EAX\nJZ 0x00400cc2\nJMP 0x004016cd\nINC EBP\nCMP EBP,R13D\nJGE 0x004016ef\nMOVSXD RAX,EBP\nMOV R12,qword ptr [R15 + RAX*0x8]\nINC EBP\nCMP EBP,R13D\nJL 0x00400c70\nJMP 0x00400cd5\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x38],RAX\nXOR R12D,R12D\nMOV RDI,R12\nCALL 0x00400a90\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00401735\nLEA RSI,[RSP + 0x44]\nLEA RDX,[RSP + 0x40]\nLEA RCX,[RSP + 0x70]\nLEA R8,[RSP + 0x74]\nLEA R9,[RSP + 0x6c]\nMOV RDI,R14\nCALL 0x00400a60\nTEST EAX,EAX\nJNZ 0x00401771\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RSP + 0x44]\nMOV ECX,dword ptr [RSP + 0x40]\nMOV ESI,0x4018fc\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV EAX,dword ptr [0xe4 + R14]\nMOV qword ptr [RSP + 0x50],RAX\nTEST EAX,EAX\nMOV R12,qword ptr [RSP + 0x38]\nJLE 0x004016b9\nXOR EBX,EBX\nMOV qword ptr [RSP + 0x48],R14\nNOP dword ptr [RAX]\nMOV RDI,qword ptr [0x006030e0]\nMOV ESI,0x40191d\nXOR EAX,EAX\nMOV EDX,EBX\nCALL 0x00400ab0\nMOV RAX,qword ptr [0xe8 + R14]\nMOV RCX,RBX\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x10]\nMOV RDI,R14\nLEA RDX,[RSP + 0x34]\nLEA RCX,[RSP + 0x8]\nCALL 0x00400a00\nCMP dword ptr [RSP + 0x34],0x0\nJZ 0x00401690\nMOV qword ptr [RSP + 0x58],RBX\nCMP dword ptr [RSP + 0x34],0x0\nJZ 0x00401670\nXOR EDX,EDX\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [0x006030e0]\nMOV RAX,qword ptr [RSP + 0x8]\nIMUL R15,RDX,0x38\nMOV RCX,qword ptr [RAX + R15*0x1 + 0x18]\nMOV ESI,0x40193f\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x60],RDX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RAX + R15*0x1 + 0x8]\nMOV ESI,0x401954\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RAX + R15*0x1]\nMOV ESI,0x40196e\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x401982\nMOV ESI,0x1a\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RAX,qword ptr [RSP + 0x8]\nMOVSX EAX,byte ptr [RAX + R15*0x1 + 0x10]\nMOV ECX,EAX\nAND CL,0x3\nCMP CL,0x2\nJZ 0x00400eb0\nCMP CL,0x1\nJNZ 0x00400ef0\nTEST AL,0x4\nJZ 0x00400e67\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x40199d\nMOV ESI,0x9\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RAX,qword ptr [RSP + 0x8]\nTEST byte ptr [RAX + R15*0x1 + 0x10],0x8\nJZ 0x00400e8f\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x4019a7\nMOV ESI,0x9\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RAX,qword ptr [RSP + 0x8]\nTEST byte ptr [RAX + R15*0x1 + 0x10],0x10\nJZ 0x00400f0b\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x4019b1\nMOV ESI,0x9\nJMP 0x00400f01\nTEST AL,0x4\nJZ 0x00400ecf\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x4019bb\nMOV ESI,0x9\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RAX,qword ptr [RSP + 0x8]\nTEST byte ptr [RAX + R15*0x1 + 0x10],0x8\nJZ 0x00400f0b\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x4019c5\nMOV ESI,0x9\nJMP 0x00400f01\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x4019cf\nMOV ESI,0x5\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RSI,qword ptr [0x006030e0]\nMOV EDI,0xa\nCALL 0x00400a70\nTEST R12B,R12B\nJNZ 0x00400f8d\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RAX + R15*0x1 + 0x28]\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x4019d5\nMOV ESI,0x17\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RAX,qword ptr [RSP + 0x8]\nCMP qword ptr [RAX + R15*0x1 + 0x20],0x0\nJZ 0x00400f8d\nXOR EBP,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [0x006030e0]\nMOVSX EDX,byte ptr [RBX]\nMOV RCX,qword ptr [RBX + 0x8]\nMOV ESI,0x4019ed\nXOR EAX,EAX\nCALL 0x00400ab0\nINC RBP\nMOV RAX,qword ptr [RSP + 0x8]\nADD RBX,0x10\nCMP RBP,qword ptr [RAX + R15*0x1 + 0x20]\nJC 0x00400f60\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RAX + R15*0x1]\nMOV RDI,R14\nLEA RDX,[RSP + 0x30]\nCALL 0x00400ae0\nMOV R13,RAX\nMOV RCX,qword ptr [0x006030e0]\nTEST R13,R13\nJZ 0x00401110\nMOV EDX,dword ptr [RSP + 0x30]\nTEST EDX,EDX\nJZ 0x00401110\nMOV ESI,0x401a0e\nXOR EAX,EAX\nMOV RDI,RCX\nCALL 0x00400ab0\nCMP dword ptr [RSP + 0x30],0x0\nJLE 0x00401106\nMOV RBP,R13\nADD RBP,0x10\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [0x006030e0]\nMOV RDX,qword ptr [RBP]\nMOV ECX,dword ptr [RBP + -0xc]\nMOV R8D,dword ptr [RBP + -0x8]\nMOV ESI,0x401a2c\nXOR EAX,EAX\nCALL 0x00400ab0\nTEST byte ptr [RBP + -0x10],0x2\nJZ 0x00401040\nTEST R12B,R12B\nMOV RCX,qword ptr [0x006030e0]\nJZ 0x0040102c\nMOV EDI,0x401a72\nMOV ESI,0x16\nJMP 0x00401036\nMOV EDI,0x401a49\nMOV ESI,0x28\nMOV EDX,0x1\nCALL 0x00400b10\nTEST byte ptr [RBP + -0x10],0x1\nJNZ 0x00401060\nTEST R12B,R12B\nJNZ 0x004010e0\nJMP 0x004010f1\nTEST R12B,R12B\nMOV RCX,qword ptr [0x006030e0]\nJZ 0x00401078\nMOV EDI,0x401ab1\nMOV ESI,0xa\nJMP 0x00401082\nMOV EDI,0x401a89\nMOV ESI,0x27\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RSI,qword ptr [RBP]\nMOV EDX,0x1\nMOV RDI,R14\nCALL 0x00400ac0\nTEST RAX,RAX\nJZ 0x004010e0\nMOV RCX,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RCX + R15*0x1]\nMOV RDI,R14\nMOV RDX,RAX\nLEA RCX,[RSP + 0x18]\nCALL 0x00400af0\nTEST EAX,EAX\nJNZ 0x004010e0\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ESI,0x401abc\nXOR EAX,EAX\nCALL 0x00400ab0\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RSI,qword ptr [0x006030e0]\nMOV EDI,0xa\nCALL 0x00400a70\nINC RBX\nMOVSXD RAX,dword ptr [RSP + 0x30]\nADD RBP,0x18\nCMP RBX,RAX\nJL 0x00400ff0\nMOV RDI,R13\nCALL 0x00400a30\nJMP 0x00401124\nMOV EDI,0x401ad3\nMOV ESI,0x1f\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RAX + R15*0x1]\nMOV RDI,R14\nLEA RDX,[RSP + 0x14]\nLEA RCX,[RSP + 0x20]\nCALL 0x00400a20\nCMP qword ptr [RSP + 0x20],0x0\nJZ 0x0040165e\nMOV EAX,dword ptr [RSP + 0x14]\nTEST EAX,EAX\nJZ 0x0040165e\nCMP dword ptr [RSP + 0x14],0x0\nJZ 0x004011a3\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R12D,dword ptr [RSP + 0x14]\nADD RBP,0x8\nXOR EBX,EBX\nXOR R14D,R14D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RBP]\nMOV ESI,0x401af3\nCALL 0x00400a80\nCMP EAX,0x1\nADC R14D,0x0\nINC RBX\nADD RBP,0x30\nCMP RBX,R12\nJC 0x00401180\nJMP 0x004011a9\nXOR R14D,R14D\nXOR R12D,R12D\nSUB R12D,R14D\nJZ 0x00401275\nMOV RDI,qword ptr [0x006030e0]\nMOV ESI,0x401afc\nXOR EAX,EAX\nMOV EDX,R12D\nCALL 0x00400ab0\nCMP dword ptr [RSP + 0x14],0x0\nJZ 0x00401275\nXOR EBP,EBP\nXOR R12D,R12D\nNOP dword ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [RSP + 0x20]\nMOV R13,qword ptr [RBX + R12*0x1 + 0x8]\nMOV ESI,0x401af3\nMOV RDI,R13\nCALL 0x00400a80\nTEST EAX,EAX\nJZ 0x00401265\nMOV RDI,qword ptr [0x006030e0]\nMOV RDX,qword ptr [RBX + R12*0x1]\nMOV ESI,0x401b19\nXOR EAX,EAX\nMOV RCX,R13\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RDX,qword ptr [RAX + R12*0x1 + 0x10]\nMOV RCX,qword ptr [RAX + R12*0x1 + 0x18]\nMOV ESI,0x401b37\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV RAX,qword ptr [RSP + 0x20]\nCVTSI2SS XMM0,dword ptr [RAX + R12*0x1 + 0x20]\nCVTSI2SS XMM1,dword ptr [RAX + R12*0x1 + 0x24]\nDIVSS XMM0,XMM1\nCVTSS2SD XMM0,XMM0\nMOV ESI,0x401b50\nMOV AL,0x1\nCALL 0x00400ab0\nADD R12,0x30\nINC EBP\nCMP EBP,dword ptr [RSP + 0x14]\nJC 0x004011e0\nTEST R14D,R14D\nMOV R12,qword ptr [RSP + 0x38]\nMOV R14,qword ptr [RSP + 0x48]\nJZ 0x00401654\nMOV RAX,qword ptr [RSP + 0x8]\nTEST byte ptr [RAX + R15*0x1 + 0x10],0x10\nJZ 0x00401654\nCMP dword ptr [RSP + 0x14],0x0\nJZ 0x004012e9\nMOV RBX,qword ptr [RSP + 0x20]\nMOV R14D,dword ptr [RSP + 0x14]\nADD RBX,0x18\nXOR EBP,EBP\nMOV RDI,qword ptr [RBX + -0x10]\nMOV ESI,0x401af3\nCALL 0x00400a80\nTEST EAX,EAX\nJZ 0x004012cf\nADD RBX,0x30\nINC EBP\nCMP EBP,R14D\nJC 0x004012b0\nJMP 0x004012e9\nMOV RDI,qword ptr [0x006030e0]\nMOV RDX,qword ptr [RBX + -0x8]\nMOV RCX,qword ptr [RBX]\nMOV ESI,0x401b62\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RAX + R15*0x1]\nMOV R14,qword ptr [RSP + 0x48]\nMOV RDI,R14\nLEA RDX,[RSP + 0x2c]\nCALL 0x00400a50\nMOV RBX,RAX\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RSP + 0x2c]\nMOV ESI,0x401b87\nXOR EAX,EAX\nCALL 0x00400ab0\nCMP dword ptr [RSP + 0x2c],0x0\nJLE 0x00401647\nMOV RBP,RBX\nXOR R15D,R15D\nNOP\nMOV EAX,dword ptr [RBP]\nMOVZX ECX,AL\nMOVZX EDI,AH\nMOV EDX,EAX\nSHR EDX,0x10\nMOVZX R9D,DL\nSHR EAX,0x18\nMOV dword ptr [RSP],EAX\nMOV ESI,0x5\nMOV EDX,0x401ba8\nXOR EAX,EAX\nMOV R8D,EDI\nLEA RDI,[RSP + 0x18]\nCALL 0x00400a40\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RBP]\nMOV ESI,0x401bb1\nXOR EAX,EAX\nCALL 0x00400ab0\nCALL 0x00400b20\nMOV RAX,qword ptr [RAX]\nMOVSX RCX,byte ptr [RSP + 0x18]\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x40\nJZ 0x004013c0\nMOVSX RCX,byte ptr [RSP + 0x19]\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x40\nJZ 0x004013c0\nMOVSX RCX,byte ptr [RSP + 0x1a]\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x40\nJZ 0x004013c0\nMOVSX RCX,byte ptr [RSP + 0x1b]\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x40\nJNZ 0x00401603\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,qword ptr [0x006030e0]\nMOV EDI,0xa\nCALL 0x00400a70\nTEST R12B,R12B\nJNZ 0x00401630\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x401bc0\nMOV ESI,0xe\nMOV EDX,0x1\nCALL 0x00400b10\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0xc]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0xd]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0xe]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0xf]\nMOV ESI,0x401bd4\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x10]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x11]\nMOV ESI,0x401bd4\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x12]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x13]\nMOV ESI,0x401bd4\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x14]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x15]\nMOV ESI,0x401bd4\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x16]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x17]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x18]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x19]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x1a]\nMOV ESI,0x401bcf\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOVZX EDX,byte ptr [RBP + 0x1b]\nMOV ESI,0x401bda\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RBP + 0x1c]\nMOV ESI,0x401be0\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RBP + 0x24]\nMOV ESI,0x401bfc\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nCMP dword ptr [RBP + 0x4],0x0\nMOV EDX,0x401c35\nMOV EAX,0x401c31\nCMOVZ RDX,RAX\nCMP dword ptr [RBP + 0x20],0x0\nMOV ECX,0x401c40\nMOV EAX,0x401c39\nCMOVZ RCX,RAX\nMOV ESI,0x401c1a\nXOR EAX,EAX\nCALL 0x00400ab0\nCMP dword ptr [RBP + 0x4],0x0\nJNZ 0x00401630\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RBP + 0x28]\nMOV ESI,0x401c47\nXOR EAX,EAX\nCALL 0x00400ab0\nMOV RDI,qword ptr [0x006030e0]\nMOV EDX,dword ptr [RBP + 0x2c]\nMOV ECX,dword ptr [RBP + 0x30]\nMOV R8D,dword ptr [RBP + 0x34]\nMOV ESI,0x401c5a\nXOR EAX,EAX\nCALL 0x00400ab0\nJMP 0x00401630\nMOV RDI,qword ptr [0x006030e0]\nMOV ESI,0x401c2a\nXOR EAX,EAX\nLEA RDX,[RSP + 0x18]\nCALL 0x00400ab0\nTEST R12B,R12B\nJZ 0x004013da\nNOP word ptr CS:[RAX + RAX*0x1]\nINC R15\nMOVSXD RAX,dword ptr [RSP + 0x2c]\nSUB RBP,-0x80\nCMP R15,RAX\nJL 0x00401330\nJMP 0x0040164c\nTEST RBX,RBX\nJZ 0x00401654\nMOV RDI,RBX\nCALL 0x00400a30\nMOV RDI,qword ptr [RSP + 0x20]\nCALL 0x00400aa0\nMOV RDX,qword ptr [RSP + 0x60]\nINC RDX\nCMP EDX,dword ptr [RSP + 0x34]\nJC 0x00400db0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x004009f0\nMOV RBX,qword ptr [RSP + 0x58]\nJMP 0x004016ab\nMOV RCX,qword ptr [0x006030e0]\nMOV EDI,0x401929\nMOV ESI,0x15\nMOV EDX,0x1\nCALL 0x00400b10\nINC RBX\nCMP RBX,qword ptr [RSP + 0x50]\nJNZ 0x00400d50\nMOV EAX,0x1\nADD RSP,0x78\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV ESI,0x401886\nMOV RDI,RBX\nCALL 0x00400a80\nTEST EAX,EAX\nJNZ 0x0040170e\nMOV EDI,0x40188f\nCALL 0x00400a10\nXOR EDI,EDI\nCALL 0x00400b00\nMOV RDI,qword ptr [0x00603100]\nMOV RDX,qword ptr [0x00603110]\nMOV ESI,0x40185d\nXOR EAX,EAX\nCALL 0x00400ab0\nCALL 0x004017aa\nMOV RDI,qword ptr [0x00603100]\nMOV RDX,qword ptr [0x00603110]\nMOV ESI,0x40189c\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x00400ab0\nCALL 0x004017aa\nCALL 0x004017aa\nMOV RBX,qword ptr [0x00603100]\nMOV RBP,qword ptr [0x00603110]\nTEST R12,R12\nJNZ 0x00401752\nXOR EDI,EDI\nCALL 0x00400ad0\nMOV R12,RAX\nMOV ESI,0x4018bc\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,RBP\nMOV RCX,R12\nCALL 0x00400ab0\nMOV EDI,0xffffffff\nCALL 0x00400b00\nMOV RBX,qword ptr [0x00603100]\nMOV RBP,qword ptr [0x00603110]\nTEST R12,R12\nJNZ 0x0040178e\nXOR EDI,EDI\nCALL 0x00400ad0\nMOV R12,RAX\nMOV ESI,0x4018dc\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,RBP\nMOV RCX,R12\nCALL 0x00400ab0\nXOR EDI,EDI\nCALL 0x00400b00\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 78\n49 89 f7\n41 89 fd\n49 8b 07\n48 89 05 c2 24 20 00\n41 83 fd 05\n0f 8d d8 0a 00 00\n41 83 fd 02\n7c 6d\nbd 01 00 00 00\n45 31 e4\n31 c0\n48 89 44 24 38\n0f 1f 00\n48 63 c5\n49 8b 1c c7\nbe 54 18 40 00\n48 89 df\ne8 fc fd ff ff\n85 c0\n74 28\nbe 7f 18 40 00\n48 89 df\ne8 eb fd ff ff\nb1 01\n48 89 4c 24 38\n85 c0\n74 22\ne9 28 0a 00 00\nff c5\n44 39 ed\n0f 8d 34 0a 00 00\n48 63 c5\n4d 8b 24 c7\nff c5\n44 39 ed\n7c a7\neb 0a\n31 c0\n48 89 44 24 38\n45 31 e4\n4c 89 e7\ne8 b3 fd ff ff\n49 89 c6\n4d 85 f6\n0f 84 4c 0a 00 00\n48 8d 74 24 44\n48 8d 54 24 40\n48 8d 4c 24 70\n4c 8d 44 24 74\n4c 8d 4c 24 6c\n4c 89 f7\ne8 56 fd ff ff\n85 c0\n0f 85 5f 0a 00 00\n48 8b 3d c7 23 20 00\n8b 54 24 44\n8b 4c 24 40\nbe fc 18 40 00\n31 c0\ne8 83 fd ff ff\n41 8b 86 e4 00 00 00\n48 89 44 24 50\n85 c0\n4c 8b 64 24 38\n0f 8e 73 09 00 00\n31 db\n4c 89 74 24 48\n0f 1f 00\n48 8b 3d 89 23 20 00\nbe 1d 19 40 00\n31 c0\n89 da\ne8 4b fd ff ff\n49 8b 86 e8 00 00 00\n48 89 d9\n48 c1 e1 07\n48 8b 74 08 10\n4c 89 f7\n48 8d 54 24 34\n48 8d 4c 24 08\ne8 76 fc ff ff\n83 7c 24 34 00\n0f 84 fb 08 00 00\n48 89 5c 24 58\n83 7c 24 34 00\n0f 84 cb 08 00 00\n31 d2\n66 0f 1f 84 00 00 00 00 00\n48 8b 3d 29 23 20 00\n48 8b 44 24 08\n4c 6b fa 38\n4a 8b 4c 38 18\nbe 3f 19 40 00\n31 c0\n48 89 54 24 60\ne8 da fc ff ff\n48 8b 3d 03 23 20 00\n48 8b 44 24 08\n4a 8b 54 38 08\nbe 54 19 40 00\n31 c0\ne8 bd fc ff ff\n48 8b 3d e6 22 20 00\n48 8b 44 24 08\n4a 8b 14 38\nbe 6e 19 40 00\n31 c0\ne8 a1 fc ff ff\n48 8b 0d ca 22 20 00\nbf 82 19 40 00\nbe 1a 00 00 00\nba 01 00 00 00\ne8 e6 fc ff ff\n48 8b 44 24 08\n42 0f be 44 38 10\n89 c1\n80 e1 03\n80 f9 02\n74 71\n80 f9 01\n0f 85 a8 00 00 00\na8 04\n74 1b\n48 8b 0d 8d 22 20 00\nbf 9d 19 40 00\nbe 09 00 00 00\nba 01 00 00 00\ne8 a9 fc ff ff\n48 8b 44 24 08\n42 f6 44 38 10 08\n74 1b\n48 8b 0d 65 22 20 00\nbf a7 19 40 00\nbe 09 00 00 00\nba 01 00 00 00\ne8 81 fc ff ff\n48 8b 44 24 08\n42 f6 44 38 10 10\n74 6f\n48 8b 0d 3d 22 20 00\nbf b1 19 40 00\nbe 09 00 00 00\neb 52\na8 04\n74 1b\n48 8b 0d 25 22 20 00\nbf bb 19 40 00\nbe 09 00 00 00\nba 01 00 00 00\ne8 41 fc ff ff\n48 8b 44 24 08\n42 f6 44 38 10 08\n74 2f\n48 8b 0d fd 21 20 00\nbf c5 19 40 00\nbe 09 00 00 00\neb 12\n48 8b 0d e9 21 20 00\nbf cf 19 40 00\nbe 05 00 00 00\nba 01 00 00 00\ne8 05 fc ff ff\n48 8b 35 ce 21 20 00\nbf 0a 00 00 00\ne8 54 fb ff ff\n45 84 e4\n75 6c\n48 8b 44 24 08\n4a 8b 5c 38 28\n48 8b 0d ae 21 20 00\nbf d5 19 40 00\nbe 17 00 00 00\nba 01 00 00 00\ne8 ca fb ff ff\n48 8b 44 24 08\n4a 83 7c 38 20 00\n74 3a\n31 ed\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 3d 79 21 20 00\n0f be 13\n48 8b 4b 08\nbe ed 19 40 00\n31 c0\ne8 36 fb ff ff\n48 ff c5\n48 8b 44 24 08\n48 83 c3 10\n4a 3b 6c 38 20\n72 d3\n48 8b 44 24 08\n4a 8b 34 38\n4c 89 f7\n48 8d 54 24 30\ne8 3d fb ff ff\n49 89 c5\n48 8b 0d 33 21 20 00\n4d 85 ed\n0f 84 5a 01 00 00\n8b 54 24 30\n85 d2\n0f 84 4e 01 00 00\nbe 0e 1a 40 00\n31 c0\n48 89 cf\ne8 df fa ff ff\n83 7c 24 30 00\n0f 8e 2a 01 00 00\n4c 89 ed\n48 83 c5 10\n31 db\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 3d e9 20 20 00\n48 8b 55 00\n8b 4d f4\n44 8b 45 f8\nbe 2c 1a 40 00\n31 c0\ne8 a2 fa ff ff\nf6 45 f0 02\n74 2c\n45 84 e4\n48 8b 0d c2 20 20 00\n74 0c\nbf 72 1a 40 00\nbe 16 00 00 00\neb 0a\nbf 49 1a 40 00\nbe 28 00 00 00\nba 01 00 00 00\ne8 d0 fa ff ff\nf6 45 f0 01\n75 1a\n45 84 e4\n0f 85 91 00 00 00\ne9 9d 00 00 00\n45 84 e4\n48 8b 0d 76 20 20 00\n74 0c\nbf b1 1a 40 00\nbe 0a 00 00 00\neb 0a\nbf 89 1a 40 00\nbe 27 00 00 00\nba 01 00 00 00\ne8 84 fa ff ff\n48 8b 75 00\nba 01 00 00 00\n4c 89 f7\ne8 23 fa ff ff\n48 85 c0\n74 3e\n48 8b 4c 24 08\n4a 8b 34 39\n4c 89 f7\n48 89 c2\n48 8d 4c 24 18\ne8 35 fa ff ff\n85 c0\n75 21\n48 8b 3d 1a 20 20 00\n8b 54 24 18\nbe bc 1a 40 00\n31 c0\ne8 da f9 ff ff\n66 2e 0f 1f 84 00 00 00 00 00\n48 8b 35 f9 1f 20 00\nbf 0a 00 00 00\ne8 7f f9 ff ff\n48 ff c3\n48 63 44 24 30\n48 83 c5 18\n48 39 c3\n0f 8c ea fe ff ff\n4c 89 ef\ne8 22 f9 ff ff\neb 14\nbf d3 1a 40 00\nbe 1f 00 00 00\nba 01 00 00 00\ne8 ec f9 ff ff\n48 8b 44 24 08\n4a 8b 34 38\n4c 89 f7\n48 8d 54 24 14\n48 8d 4c 24 20\ne8 e1 f8 ff ff\n48 83 7c 24 20 00\n0f 84 13 05 00 00\n8b 44 24 14\n85 c0\n0f 84 07 05 00 00\n83 7c 24 14 00\n74 45\n48 8b 6c 24 20\n44 8b 64 24 14\n48 83 c5 08\n31 db\n45 31 f6\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 7d 00\nbe f3 1a 40 00\ne8 f2 f8 ff ff\n83 f8 01\n41 83 d6 00\n48 ff c3\n48 83 c5 30\n4c 39 e3\n72 df\neb 06\n45 31 f6\n45 31 e4\n45 29 f4\n0f 84 c3 00 00 00\n48 8b 3d 27 1f 20 00\nbe fc 1a 40 00\n31 c0\n44 89 e2\ne8 e8 f8 ff ff\n83 7c 24 14 00\n0f 84 a2 00 00 00\n31 ed\n45 31 e4\n0f 1f 84 00 00 00 00 00\n48 8b 5c 24 20\n4e 8b 6c 23 08\nbe f3 1a 40 00\n4c 89 ef\ne8 89 f8 ff ff\n85 c0\n74 6a\n48 8b 3d de 1e 20 00\n4a 8b 14 23\nbe 19 1b 40 00\n31 c0\n4c 89 e9\ne8 9b f8 ff ff\n48 8b 3d c4 1e 20 00\n48 8b 44 24 20\n4a 8b 54 20 10\n4a 8b 4c 20 18\nbe 37 1b 40 00\n31 c0\ne8 79 f8 ff ff\n48 8b 3d a2 1e 20 00\n48 8b 44 24 20\nf3 42 0f 2a 44 20 20\nf3 42 0f 2a 4c 20 24\nf3 0f 5e c1\nf3 0f 5a c0\nbe 50 1b 40 00\nb0 01\ne8 4b f8 ff ff\n49 83 c4 30\nff c5\n3b 6c 24 14\n0f 82 6b ff ff ff\n45 85 f6\n4c 8b 64 24 38\n4c 8b 74 24 48\n0f 84 cc 03 00 00\n48 8b 44 24 08\n42 f6 44 38 10 10\n0f 84 bb 03 00 00\n83 7c 24 14 00\n74 49\n48 8b 5c 24 20\n44 8b 74 24 14\n48 83 c3 18\n31 ed\n48 8b 7b f0\nbe f3 1a 40 00\ne8 c2 f7 ff ff\n85 c0\n74 0d\n48 83 c3 30\nff c5\n44 39 f5\n72 e3\neb 1a\n48 8b 3d 0a 1e 20 00\n48 8b 53 f8\n48 8b 0b\nbe 62 1b 40 00\n31 c0\ne8 c7 f7 ff ff\n48 8b 44 24 08\n4a 8b 34 38\n4c 8b 74 24 48\n4c 89 f7\n48 8d 54 24 2c\ne8 4c f7 ff ff\n48 89 c3\n48 8b 3d d2 1d 20 00\n8b 54 24 2c\nbe 87 1b 40 00\n31 c0\ne8 92 f7 ff ff\n83 7c 24 2c 00\n0f 8e 1e 03 00 00\n48 89 dd\n45 31 ff\n90\n8b 45 00\n0f b6 c8\n0f b6 fc\n89 c2\nc1 ea 10\n44 0f b6 ca\nc1 e8 18\n89 04 24\nbe 05 00 00 00\nba a8 1b 40 00\n31 c0\n41 89 f8\n48 8d 7c 24 18\ne8 df f6 ff ff\n48 8b 3d 78 1d 20 00\n8b 55 00\nbe b1 1b 40 00\n31 c0\ne8 39 f7 ff ff\ne8 a4 f7 ff ff\n48 8b 00\n48 0f be 4c 24 18\nf6 44 48 01 40\n74 34\n48 0f be 4c 24 19\nf6 44 48 01 40\n74 27\n48 0f be 4c 24 1a\nf6 44 48 01 40\n74 1a\n48 0f be 4c 24 1b\nf6 44 48 01 40\n0f 85 4c 02 00 00\n66 0f 1f 84 00 00 00 00 00\n48 8b 35 19 1d 20 00\nbf 0a 00 00 00\ne8 9f f6 ff ff\n45 84 e4\n0f 85 56 02 00 00\n48 8b 0d ff 1c 20 00\nbf c0 1b 40 00\nbe 0e 00 00 00\nba 01 00 00 00\ne8 1b f7 ff ff\n48 8b 3d e4 1c 20 00\n0f b6 55 0c\nbe cf 1b 40 00\n31 c0\ne8 a4 f6 ff ff\n48 8b 3d cd 1c 20 00\n0f b6 55 0d\nbe cf 1b 40 00\n31 c0\ne8 8d f6 ff ff\n48 8b 3d b6 1c 20 00\n0f b6 55 0e\nbe cf 1b 40 00\n31 c0\ne8 76 f6 ff ff\n48 8b 3d 9f 1c 20 00\n0f b6 55 0f\nbe d4 1b 40 00\n31 c0\ne8 5f f6 ff ff\n48 8b 3d 88 1c 20 00\n0f b6 55 10\nbe cf 1b 40 00\n31 c0\ne8 48 f6 ff ff\n48 8b 3d 71 1c 20 00\n0f b6 55 11\nbe d4 1b 40 00\n31 c0\ne8 31 f6 ff ff\n48 8b 3d 5a 1c 20 00\n0f b6 55 12\nbe cf 1b 40 00\n31 c0\ne8 1a f6 ff ff\n48 8b 3d 43 1c 20 00\n0f b6 55 13\nbe d4 1b 40 00\n31 c0\ne8 03 f6 ff ff\n48 8b 3d 2c 1c 20 00\n0f b6 55 14\nbe cf 1b 40 00\n31 c0\ne8 ec f5 ff ff\n48 8b 3d 15 1c 20 00\n0f b6 55 15\nbe d4 1b 40 00\n31 c0\ne8 d5 f5 ff ff\n48 8b 3d fe 1b 20 00\n0f b6 55 16\nbe cf 1b 40 00\n31 c0\ne8 be f5 ff ff\n48 8b 3d e7 1b 20 00\n0f b6 55 17\nbe cf 1b 40 00\n31 c0\ne8 a7 f5 ff ff\n48 8b 3d d0 1b 20 00\n0f b6 55 18\nbe cf 1b 40 00\n31 c0\ne8 90 f5 ff ff\n48 8b 3d b9 1b 20 00\n0f b6 55 19\nbe cf 1b 40 00\n31 c0\ne8 79 f5 ff ff\n48 8b 3d a2 1b 20 00\n0f b6 55 1a\nbe cf 1b 40 00\n31 c0\ne8 62 f5 ff ff\n48 8b 3d 8b 1b 20 00\n0f b6 55 1b\nbe da 1b 40 00\n31 c0\ne8 4b f5 ff ff\n48 8b 3d 74 1b 20 00\n8b 55 1c\nbe e0 1b 40 00\n31 c0\ne8 35 f5 ff ff\n48 8b 3d 5e 1b 20 00\n8b 55 24\nbe fc 1b 40 00\n31 c0\ne8 1f f5 ff ff\n48 8b 3d 48 1b 20 00\n83 7d 04 00\nba 35 1c 40 00\nb8 31 1c 40 00\n48 0f 44 d0\n83 7d 20 00\nb9 40 1c 40 00\nb8 39 1c 40 00\n48 0f 44 c8\nbe 1a 1c 40 00\n31 c0\ne8 e8 f4 ff ff\n83 7d 04 00\n75 62\n48 8b 3d 0b 1b 20 00\n8b 55 28\nbe 47 1c 40 00\n31 c0\ne8 cc f4 ff ff\n48 8b 3d f5 1a 20 00\n8b 55 2c\n8b 4d 30\n44 8b 45 34\nbe 5a 1c 40 00\n31 c0\ne8 af f4 ff ff\neb 2d\n48 8b 3d d6 1a 20 00\nbe 2a 1c 40 00\n31 c0\n48 8d 54 24 18\ne8 95 f4 ff ff\n45 84 e4\n0f 84 b6 fd ff ff\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 ff c7\n48 63 44 24 2c\n48 83 ed 80\n49 39 c7\n0f 8c eb fc ff ff\neb 05\n48 85 db\n74 08\n48 89 df\ne8 dc f3 ff ff\n48 8b 7c 24 20\ne8 42 f4 ff ff\n48 8b 54 24 60\n48 ff c2\n3b 54 24 34\n0f 82 40 f7 ff ff\n48 8b 7c 24 08\ne8 76 f3 ff ff\n48 8b 5c 24 58\neb 2a\n48 8b 0d 49 1a 20 00\nbf 29 19 40 00\nbe 15 00 00 00\nba 01 00 00 00\ne8 65 f4 ff ff\n48 ff c3\n48 3b 5c 24 50\n0f 85 97 f6 ff ff\nb8 01 00 00 00\n48 83 c4 78\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbe 86 18 40 00\n48 89 df\ne8 a6 f3 ff ff\n85 c0\n75 30\nbf 8f 18 40 00\ne8 28 f3 ff ff\n31 ff\ne8 11 f4 ff ff\n48 8b 3d 0a 1a 20 00\n48 8b 15 13 1a 20 00\nbe 5d 18 40 00\n31 c0\ne8 a7 f3 ff ff\ne8 9c 00 00 00\n48 8b 3d eb 19 20 00\n48 8b 15 f4 19 20 00\nbe 9c 18 40 00\n31 c0\n48 89 d9\ne8 85 f3 ff ff\ne8 7a 00 00 00\ne8 75 00 00 00\n48 8b 1d c4 19 20 00\n48 8b 2d cd 19 20 00\n4d 85 e4\n75 0a\n31 ff\ne8 81 f3 ff ff\n49 89 c4\nbe bc 18 40 00\n31 c0\n48 89 df\n48 89 ea\n4c 89 e1\ne8 49 f3 ff ff\nbf ff ff ff ff\ne8 8f f3 ff ff\n48 8b 1d 88 19 20 00\n48 8b 2d 91 19 20 00\n4d 85 e4\n75 0a\n31 ff\ne8 45 f3 ff ff\n49 89 c4\nbe dc 18 40 00\n31 c0\n48 89 df\n48 89 ea\n4c 89 e1\ne8 0d f3 ff ff\n31 ff\ne8 56 f3 ff ff\n'
p54
S'.text:0000000000400c30\n.text:0000000000400c31\n.text:0000000000400c33\n.text:0000000000400c35\n.text:0000000000400c37\n.text:0000000000400c39\n.text:0000000000400c3a\n.text:0000000000400c3e\n.text:0000000000400c41\n.text:0000000000400c44\n.text:0000000000400c47\n.text:0000000000400c4e\n.text:0000000000400c52\n.text:0000000000400c58\n.text:0000000000400c5c\n.text:0000000000400c5e\n.text:0000000000400c63\n.text:0000000000400c66\n.text:0000000000400c68\n.text:0000000000400c6d\n.text:0000000000400c70\n.text:0000000000400c73\n.text:0000000000400c77\n.text:0000000000400c7c\n.text:0000000000400c7f\n.text:0000000000400c84\n.text:0000000000400c86\n.text:0000000000400c88\n.text:0000000000400c8d\n.text:0000000000400c90\n.text:0000000000400c95\n.text:0000000000400c97\n.text:0000000000400c9c\n.text:0000000000400c9e\n.text:0000000000400ca0\n.text:0000000000400cb0\n.text:0000000000400cb2\n.text:0000000000400cb5\n.text:0000000000400cbb\n.text:0000000000400cbe\n.text:0000000000400cc2\n.text:0000000000400cc4\n.text:0000000000400cc7\n.text:0000000000400cc9\n.text:0000000000400ccb\n.text:0000000000400ccd\n.text:0000000000400cd2\n.text:0000000000400cd5\n.text:0000000000400cd8\n.text:0000000000400cdd\n.text:0000000000400ce0\n.text:0000000000400ce3\n.text:0000000000400ce9\n.text:0000000000400cee\n.text:0000000000400cf3\n.text:0000000000400cf8\n.text:0000000000400cfd\n.text:0000000000400d02\n.text:0000000000400d05\n.text:0000000000400d0a\n.text:0000000000400d0c\n.text:0000000000400d12\n.text:0000000000400d19\n.text:0000000000400d1d\n.text:0000000000400d21\n.text:0000000000400d26\n.text:0000000000400d28\n.text:0000000000400d2d\n.text:0000000000400d34\n.text:0000000000400d39\n.text:0000000000400d3b\n.text:0000000000400d40\n.text:0000000000400d46\n.text:0000000000400d48\n.text:0000000000400d4d\n.text:0000000000400d50\n.text:0000000000400d57\n.text:0000000000400d5c\n.text:0000000000400d5e\n.text:0000000000400d60\n.text:0000000000400d65\n.text:0000000000400d6c\n.text:0000000000400d6f\n.text:0000000000400d73\n.text:0000000000400d78\n.text:0000000000400d7b\n.text:0000000000400d80\n.text:0000000000400d85\n.text:0000000000400d8a\n.text:0000000000400d8f\n.text:0000000000400d95\n.text:0000000000400d9a\n.text:0000000000400d9f\n.text:0000000000400da5\n.text:0000000000400da7\n.text:0000000000400db0\n.text:0000000000400db7\n.text:0000000000400dbc\n.text:0000000000400dc0\n.text:0000000000400dc5\n.text:0000000000400dca\n.text:0000000000400dcc\n.text:0000000000400dd1\n.text:0000000000400dd6\n.text:0000000000400ddd\n.text:0000000000400de2\n.text:0000000000400de7\n.text:0000000000400dec\n.text:0000000000400dee\n.text:0000000000400df3\n.text:0000000000400dfa\n.text:0000000000400dff\n.text:0000000000400e03\n.text:0000000000400e08\n.text:0000000000400e0a\n.text:0000000000400e0f\n.text:0000000000400e16\n.text:0000000000400e1b\n.text:0000000000400e20\n.text:0000000000400e25\n.text:0000000000400e2a\n.text:0000000000400e2f\n.text:0000000000400e35\n.text:0000000000400e37\n.text:0000000000400e3a\n.text:0000000000400e3d\n.text:0000000000400e3f\n.text:0000000000400e42\n.text:0000000000400e48\n.text:0000000000400e4a\n.text:0000000000400e4c\n.text:0000000000400e53\n.text:0000000000400e58\n.text:0000000000400e5d\n.text:0000000000400e62\n.text:0000000000400e67\n.text:0000000000400e6c\n.text:0000000000400e72\n.text:0000000000400e74\n.text:0000000000400e7b\n.text:0000000000400e80\n.text:0000000000400e85\n.text:0000000000400e8a\n.text:0000000000400e8f\n.text:0000000000400e94\n.text:0000000000400e9a\n.text:0000000000400e9c\n.text:0000000000400ea3\n.text:0000000000400ea8\n.text:0000000000400ead\n.text:0000000000400eb0\n.text:0000000000400eb2\n.text:0000000000400eb4\n.text:0000000000400ebb\n.text:0000000000400ec0\n.text:0000000000400ec5\n.text:0000000000400eca\n.text:0000000000400ecf\n.text:0000000000400ed4\n.text:0000000000400eda\n.text:0000000000400edc\n.text:0000000000400ee3\n.text:0000000000400ee8\n.text:0000000000400eed\n.text:0000000000400ef0\n.text:0000000000400ef7\n.text:0000000000400efc\n.text:0000000000400f01\n.text:0000000000400f06\n.text:0000000000400f0b\n.text:0000000000400f12\n.text:0000000000400f17\n.text:0000000000400f1c\n.text:0000000000400f1f\n.text:0000000000400f21\n.text:0000000000400f26\n.text:0000000000400f2b\n.text:0000000000400f32\n.text:0000000000400f37\n.text:0000000000400f3c\n.text:0000000000400f41\n.text:0000000000400f46\n.text:0000000000400f4b\n.text:0000000000400f51\n.text:0000000000400f53\n.text:0000000000400f55\n.text:0000000000400f60\n.text:0000000000400f67\n.text:0000000000400f6a\n.text:0000000000400f6e\n.text:0000000000400f73\n.text:0000000000400f75\n.text:0000000000400f7a\n.text:0000000000400f7d\n.text:0000000000400f82\n.text:0000000000400f86\n.text:0000000000400f8b\n.text:0000000000400f8d\n.text:0000000000400f92\n.text:0000000000400f96\n.text:0000000000400f99\n.text:0000000000400f9e\n.text:0000000000400fa3\n.text:0000000000400fa6\n.text:0000000000400fad\n.text:0000000000400fb0\n.text:0000000000400fb6\n.text:0000000000400fba\n.text:0000000000400fbc\n.text:0000000000400fc2\n.text:0000000000400fc7\n.text:0000000000400fc9\n.text:0000000000400fcc\n.text:0000000000400fd1\n.text:0000000000400fd6\n.text:0000000000400fdc\n.text:0000000000400fdf\n.text:0000000000400fe3\n.text:0000000000400fe5\n.text:0000000000400ff0\n.text:0000000000400ff7\n.text:0000000000400ffb\n.text:0000000000400ffe\n.text:0000000000401002\n.text:0000000000401007\n.text:0000000000401009\n.text:000000000040100e\n.text:0000000000401012\n.text:0000000000401014\n.text:0000000000401017\n.text:000000000040101e\n.text:0000000000401020\n.text:0000000000401025\n.text:000000000040102a\n.text:000000000040102c\n.text:0000000000401031\n.text:0000000000401036\n.text:000000000040103b\n.text:0000000000401040\n.text:0000000000401044\n.text:0000000000401046\n.text:0000000000401049\n.text:000000000040104f\n.text:0000000000401060\n.text:0000000000401063\n.text:000000000040106a\n.text:000000000040106c\n.text:0000000000401071\n.text:0000000000401076\n.text:0000000000401078\n.text:000000000040107d\n.text:0000000000401082\n.text:0000000000401087\n.text:000000000040108c\n.text:0000000000401090\n.text:0000000000401095\n.text:0000000000401098\n.text:000000000040109d\n.text:00000000004010a0\n.text:00000000004010a2\n.text:00000000004010a7\n.text:00000000004010ab\n.text:00000000004010ae\n.text:00000000004010b1\n.text:00000000004010b6\n.text:00000000004010bb\n.text:00000000004010bd\n.text:00000000004010bf\n.text:00000000004010c6\n.text:00000000004010ca\n.text:00000000004010cf\n.text:00000000004010d1\n.text:00000000004010d6\n.text:00000000004010e0\n.text:00000000004010e7\n.text:00000000004010ec\n.text:00000000004010f1\n.text:00000000004010f4\n.text:00000000004010f9\n.text:00000000004010fd\n.text:0000000000401100\n.text:0000000000401106\n.text:0000000000401109\n.text:000000000040110e\n.text:0000000000401110\n.text:0000000000401115\n.text:000000000040111a\n.text:000000000040111f\n.text:0000000000401124\n.text:0000000000401129\n.text:000000000040112d\n.text:0000000000401130\n.text:0000000000401135\n.text:000000000040113a\n.text:000000000040113f\n.text:0000000000401145\n.text:000000000040114b\n.text:000000000040114f\n.text:0000000000401151\n.text:0000000000401157\n.text:000000000040115c\n.text:000000000040115e\n.text:0000000000401163\n.text:0000000000401168\n.text:000000000040116c\n.text:000000000040116e\n.text:0000000000401171\n.text:0000000000401180\n.text:0000000000401184\n.text:0000000000401189\n.text:000000000040118e\n.text:0000000000401191\n.text:0000000000401195\n.text:0000000000401198\n.text:000000000040119c\n.text:000000000040119f\n.text:00000000004011a1\n.text:00000000004011a3\n.text:00000000004011a6\n.text:00000000004011a9\n.text:00000000004011ac\n.text:00000000004011b2\n.text:00000000004011b9\n.text:00000000004011be\n.text:00000000004011c0\n.text:00000000004011c3\n.text:00000000004011c8\n.text:00000000004011cd\n.text:00000000004011d3\n.text:00000000004011d5\n.text:00000000004011d8\n.text:00000000004011e0\n.text:00000000004011e5\n.text:00000000004011ea\n.text:00000000004011ef\n.text:00000000004011f2\n.text:00000000004011f7\n.text:00000000004011f9\n.text:00000000004011fb\n.text:0000000000401202\n.text:0000000000401206\n.text:000000000040120b\n.text:000000000040120d\n.text:0000000000401210\n.text:0000000000401215\n.text:000000000040121c\n.text:0000000000401221\n.text:0000000000401226\n.text:000000000040122b\n.text:0000000000401230\n.text:0000000000401232\n.text:0000000000401237\n.text:000000000040123e\n.text:0000000000401243\n.text:000000000040124a\n.text:0000000000401251\n.text:0000000000401255\n.text:0000000000401259\n.text:000000000040125e\n.text:0000000000401260\n.text:0000000000401265\n.text:0000000000401269\n.text:000000000040126b\n.text:000000000040126f\n.text:0000000000401275\n.text:0000000000401278\n.text:000000000040127d\n.text:0000000000401282\n.text:0000000000401288\n.text:000000000040128d\n.text:0000000000401293\n.text:0000000000401299\n.text:000000000040129e\n.text:00000000004012a0\n.text:00000000004012a5\n.text:00000000004012aa\n.text:00000000004012ae\n.text:00000000004012b0\n.text:00000000004012b4\n.text:00000000004012b9\n.text:00000000004012be\n.text:00000000004012c0\n.text:00000000004012c2\n.text:00000000004012c6\n.text:00000000004012c8\n.text:00000000004012cb\n.text:00000000004012cd\n.text:00000000004012cf\n.text:00000000004012d6\n.text:00000000004012da\n.text:00000000004012dd\n.text:00000000004012e2\n.text:00000000004012e4\n.text:00000000004012e9\n.text:00000000004012ee\n.text:00000000004012f2\n.text:00000000004012f7\n.text:00000000004012fa\n.text:00000000004012ff\n.text:0000000000401304\n.text:0000000000401307\n.text:000000000040130e\n.text:0000000000401312\n.text:0000000000401317\n.text:0000000000401319\n.text:000000000040131e\n.text:0000000000401323\n.text:0000000000401329\n.text:000000000040132c\n.text:000000000040132f\n.text:0000000000401330\n.text:0000000000401333\n.text:0000000000401336\n.text:0000000000401339\n.text:000000000040133b\n.text:000000000040133e\n.text:0000000000401342\n.text:0000000000401345\n.text:0000000000401348\n.text:000000000040134d\n.text:0000000000401352\n.text:0000000000401354\n.text:0000000000401357\n.text:000000000040135c\n.text:0000000000401361\n.text:0000000000401368\n.text:000000000040136b\n.text:0000000000401370\n.text:0000000000401372\n.text:0000000000401377\n.text:000000000040137c\n.text:000000000040137f\n.text:0000000000401385\n.text:000000000040138a\n.text:000000000040138c\n.text:0000000000401392\n.text:0000000000401397\n.text:0000000000401399\n.text:000000000040139f\n.text:00000000004013a4\n.text:00000000004013a6\n.text:00000000004013ac\n.text:00000000004013b1\n.text:00000000004013b7\n.text:00000000004013c0\n.text:00000000004013c7\n.text:00000000004013cc\n.text:00000000004013d1\n.text:00000000004013d4\n.text:00000000004013da\n.text:00000000004013e1\n.text:00000000004013e6\n.text:00000000004013eb\n.text:00000000004013f0\n.text:00000000004013f5\n.text:00000000004013fc\n.text:0000000000401400\n.text:0000000000401405\n.text:0000000000401407\n.text:000000000040140c\n.text:0000000000401413\n.text:0000000000401417\n.text:000000000040141c\n.text:000000000040141e\n.text:0000000000401423\n.text:000000000040142a\n.text:000000000040142e\n.text:0000000000401433\n.text:0000000000401435\n.text:000000000040143a\n.text:0000000000401441\n.text:0000000000401445\n.text:000000000040144a\n.text:000000000040144c\n.text:0000000000401451\n.text:0000000000401458\n.text:000000000040145c\n.text:0000000000401461\n.text:0000000000401463\n.text:0000000000401468\n.text:000000000040146f\n.text:0000000000401473\n.text:0000000000401478\n.text:000000000040147a\n.text:000000000040147f\n.text:0000000000401486\n.text:000000000040148a\n.text:000000000040148f\n.text:0000000000401491\n.text:0000000000401496\n.text:000000000040149d\n.text:00000000004014a1\n.text:00000000004014a6\n.text:00000000004014a8\n.text:00000000004014ad\n.text:00000000004014b4\n.text:00000000004014b8\n.text:00000000004014bd\n.text:00000000004014bf\n.text:00000000004014c4\n.text:00000000004014cb\n.text:00000000004014cf\n.text:00000000004014d4\n.text:00000000004014d6\n.text:00000000004014db\n.text:00000000004014e2\n.text:00000000004014e6\n.text:00000000004014eb\n.text:00000000004014ed\n.text:00000000004014f2\n.text:00000000004014f9\n.text:00000000004014fd\n.text:0000000000401502\n.text:0000000000401504\n.text:0000000000401509\n.text:0000000000401510\n.text:0000000000401514\n.text:0000000000401519\n.text:000000000040151b\n.text:0000000000401520\n.text:0000000000401527\n.text:000000000040152b\n.text:0000000000401530\n.text:0000000000401532\n.text:0000000000401537\n.text:000000000040153e\n.text:0000000000401542\n.text:0000000000401547\n.text:0000000000401549\n.text:000000000040154e\n.text:0000000000401555\n.text:0000000000401559\n.text:000000000040155e\n.text:0000000000401560\n.text:0000000000401565\n.text:000000000040156c\n.text:000000000040156f\n.text:0000000000401574\n.text:0000000000401576\n.text:000000000040157b\n.text:0000000000401582\n.text:0000000000401585\n.text:000000000040158a\n.text:000000000040158c\n.text:0000000000401591\n.text:0000000000401598\n.text:000000000040159c\n.text:00000000004015a1\n.text:00000000004015a6\n.text:00000000004015aa\n.text:00000000004015ae\n.text:00000000004015b3\n.text:00000000004015b8\n.text:00000000004015bc\n.text:00000000004015c1\n.text:00000000004015c3\n.text:00000000004015c8\n.text:00000000004015cc\n.text:00000000004015ce\n.text:00000000004015d5\n.text:00000000004015d8\n.text:00000000004015dd\n.text:00000000004015df\n.text:00000000004015e4\n.text:00000000004015eb\n.text:00000000004015ee\n.text:00000000004015f1\n.text:00000000004015f5\n.text:00000000004015fa\n.text:00000000004015fc\n.text:0000000000401601\n.text:0000000000401603\n.text:000000000040160a\n.text:000000000040160f\n.text:0000000000401611\n.text:0000000000401616\n.text:000000000040161b\n.text:000000000040161e\n.text:0000000000401624\n.text:0000000000401630\n.text:0000000000401633\n.text:0000000000401638\n.text:000000000040163c\n.text:000000000040163f\n.text:0000000000401645\n.text:0000000000401647\n.text:000000000040164a\n.text:000000000040164c\n.text:000000000040164f\n.text:0000000000401654\n.text:0000000000401659\n.text:000000000040165e\n.text:0000000000401663\n.text:0000000000401666\n.text:000000000040166a\n.text:0000000000401670\n.text:0000000000401675\n.text:000000000040167a\n.text:000000000040167f\n.text:0000000000401690\n.text:0000000000401697\n.text:000000000040169c\n.text:00000000004016a1\n.text:00000000004016a6\n.text:00000000004016ab\n.text:00000000004016ae\n.text:00000000004016b3\n.text:00000000004016b9\n.text:00000000004016be\n.text:00000000004016c2\n.text:00000000004016c3\n.text:00000000004016c5\n.text:00000000004016c7\n.text:00000000004016c9\n.text:00000000004016cb\n.text:00000000004016cc\n.text:00000000004016cd\n.text:00000000004016d2\n.text:00000000004016d5\n.text:00000000004016da\n.text:00000000004016dc\n.text:00000000004016de\n.text:00000000004016e3\n.text:00000000004016e8\n.text:00000000004016ea\n.text:00000000004016ef\n.text:00000000004016f6\n.text:00000000004016fd\n.text:0000000000401702\n.text:0000000000401704\n.text:0000000000401709\n.text:000000000040170e\n.text:0000000000401715\n.text:000000000040171c\n.text:0000000000401721\n.text:0000000000401723\n.text:0000000000401726\n.text:000000000040172b\n.text:0000000000401730\n.text:0000000000401735\n.text:000000000040173c\n.text:0000000000401743\n.text:0000000000401746\n.text:0000000000401748\n.text:000000000040174a\n.text:000000000040174f\n.text:0000000000401752\n.text:0000000000401757\n.text:0000000000401759\n.text:000000000040175c\n.text:000000000040175f\n.text:0000000000401762\n.text:0000000000401767\n.text:000000000040176c\n.text:0000000000401771\n.text:0000000000401778\n.text:000000000040177f\n.text:0000000000401782\n.text:0000000000401784\n.text:0000000000401786\n.text:000000000040178b\n.text:000000000040178e\n.text:0000000000401793\n.text:0000000000401795\n.text:0000000000401798\n.text:000000000040179b\n.text:000000000040179e\n.text:00000000004017a3\n.text:00000000004017a5\n'
p55
tp56
sS'XvFreeAdaptorInfo'
p57
(S'\n__stdcall XvFreeAdaptorInfo()\n'
p58
V\u000avoid XvFreeAdaptorInfo(void)\u000a\u000a{\u000a  (*(code *)PTR_XvFreeAdaptorInfo_00603018)();\u000a  return;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00603018]\n'
p60
S'ff 25 22 26 20 00\n'
p61
S'.plt:00000000004009f0\n'
p62
tp63
sS'deregister_tm_clones'
p64
(S'\n__stdcall deregister_tm_clones()\n'
p65
V\u000a/* WARNING: Removing unreachable block (ram,0x00400b75) */\u000a/* WARNING: Removing unreachable block (ram,0x00400b7f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p66
S'MOV EAX,0x6030cf\nPUSH RBP\nSUB RAX,0x6030c8\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400b90\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400b90\nPOP RBP\nMOV EDI,0x6030c8\nJMP RAX\nPOP RBP\nRET\n'
p67
S'b8 cf 30 60 00\n55\n48 2d c8 30 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf c8 30 60 00\nff e0\n5d\nc3\n'
p68
S'.text:0000000000400b60\n.text:0000000000400b65\n.text:0000000000400b66\n.text:0000000000400b6c\n.text:0000000000400b70\n.text:0000000000400b73\n.text:0000000000400b75\n.text:0000000000400b7a\n.text:0000000000400b7d\n.text:0000000000400b7f\n.text:0000000000400b80\n.text:0000000000400b85\n.text:0000000000400b90\n.text:0000000000400b91\n'
p69
tp70
sS'XDisplayName'
p71
(S'\n__stdcall XDisplayName()\n'
p72
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_00603088)();\u000a  return;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00603088]\n'
p74
S'ff 25 b2 25 20 00\n'
p75
S'.plt:0000000000400ad0\n'
p76
tp77
sS'XFree'
p78
(S'\n__stdcall XFree()\n'
p79
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_00603038)();\u000a  return;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00603038]\n'
p81
S'ff 25 02 26 20 00\n'
p82
S'.plt:0000000000400a30\n'
p83
tp84
sS'frame_dummy'
p85
(S'\n__stdcall frame_dummy()\n'
p86
V\u000a/* WARNING: Removing unreachable block (ram,0x00400c1a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p87
S'MOV EDI,0x602df8\nCMP qword ptr [RDI],0x0\nJNZ 0x00400c10\nJMP 0x00400ba0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400c0b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400ba0\n'
p88
S'bf f8 2d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p89
S'.text:0000000000400c00\n.text:0000000000400c05\n.text:0000000000400c09\n.text:0000000000400c0b\n.text:0000000000400c10\n.text:0000000000400c15\n.text:0000000000400c18\n.text:0000000000400c1a\n.text:0000000000400c1b\n.text:0000000000400c1e\n.text:0000000000400c20\n.text:0000000000400c21\n'
p90
tp91
sS'snprintf'
p92
(S'\n__stdcall snprintf(char * __s, size_t __maxlen, char * __format)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint snprintf(char *__s,size_t __maxlen,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_snprintf_00603040)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00603040]\n'
p95
S'ff 25 fa 25 20 00\n'
p96
S'.plt:0000000000400a40\n'
p97
tp98
sS'PrintUsage'
p99
(S'\n__stdcall PrintUsage()\n'
p100
V\u000avoid PrintUsage(void)\u000a\u000a{\u000a  fprintf(stderr,"Usage: %s [-display host:dpy] [-short] [-version]\u005cn",progname);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p101
S'PUSH RAX\nMOV RDI,qword ptr [0x00603100]\nMOV RDX,qword ptr [0x00603110]\nMOV ESI,0x401c8c\nXOR EAX,EAX\nCALL 0x00400ab0\nXOR EDI,EDI\nCALL 0x00400b00\n'
p102
S'50\n48 8b 3d 4e 19 20 00\n48 8b 15 57 19 20 00\nbe 8c 1c 40 00\n31 c0\ne8 eb f2 ff ff\n31 ff\ne8 34 f3 ff ff\n'
p103
S'.text:00000000004017aa\n.text:00000000004017ab\n.text:00000000004017b2\n.text:00000000004017b9\n.text:00000000004017be\n.text:00000000004017c0\n.text:00000000004017c5\n.text:00000000004017c7\n'
p104
tp105
sS'strcmp'
p106
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00603060)();\u000a  return iVar1;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00603060]\n'
p109
S'ff 25 da 25 20 00\n'
p110
S'.plt:0000000000400a80\n'
p111
tp112
sS'register_tm_clones'
p113
(S'\n__stdcall register_tm_clones()\n'
p114
V\u000a/* WARNING: Removing unreachable block (ram,0x00400bc3) */\u000a/* WARNING: Removing unreachable block (ram,0x00400bcd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p115
S'MOV ESI,0x6030c8\nPUSH RBP\nSUB RSI,0x6030c8\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400bd8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400bd8\nPOP RBP\nMOV EDI,0x6030c8\nJMP RAX\nPOP RBP\nRET\n'
p116
S'be c8 30 60 00\n55\n48 81 ee c8 30 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf c8 30 60 00\nff e0\n5d\nc3\n'
p117
S'.text:0000000000400ba0\n.text:0000000000400ba5\n.text:0000000000400ba6\n.text:0000000000400bad\n.text:0000000000400bb1\n.text:0000000000400bb4\n.text:0000000000400bb7\n.text:0000000000400bbb\n.text:0000000000400bbe\n.text:0000000000400bc1\n.text:0000000000400bc3\n.text:0000000000400bc8\n.text:0000000000400bcb\n.text:0000000000400bcd\n.text:0000000000400bce\n.text:0000000000400bd3\n.text:0000000000400bd8\n.text:0000000000400bd9\n'
p118
tp119
sS'fwrite'
p120
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_006030a8)();\u000a  return sVar1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x006030a8]\n'
p123
S'ff 25 92 25 20 00\n'
p124
S'.plt:0000000000400b10\n'
p125
tp126
sS'XvGetPortAttribute'
p127
(S'\n__stdcall XvGetPortAttribute()\n'
p128
V\u000avoid XvGetPortAttribute(void)\u000a\u000a{\u000a  (*(code *)PTR_XvGetPortAttribute_00603098)();\u000a  return;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00603098]\n'
p130
S'ff 25 a2 25 20 00\n'
p131
S'.plt:0000000000400af0\n'
p132
tp133
sS'fprintf'
p134
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00603078)();\u000a  return iVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00603078]\n'
p137
S'ff 25 c2 25 20 00\n'
p138
S'.plt:0000000000400ab0\n'
p139
tp140
sS'XvQueryAdaptors'
p141
(S'\n__stdcall XvQueryAdaptors()\n'
p142
V\u000avoid XvQueryAdaptors(void)\u000a\u000a{\u000a  (*(code *)PTR_XvQueryAdaptors_00603020)();\u000a  return;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00603020]\n'
p144
S'ff 25 1a 26 20 00\n'
p145
S'.plt:0000000000400a00\n'
p146
tp147
sS'XvQueryPortAttributes'
p148
(S'\n__stdcall XvQueryPortAttributes()\n'
p149
V\u000avoid XvQueryPortAttributes(void)\u000a\u000a{\u000a  (*(code *)PTR_XvQueryPortAttributes_00603090)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00603090]\n'
p151
S'ff 25 aa 25 20 00\n'
p152
S'.plt:0000000000400ae0\n'
p153
tp154
sS'XvListImageFormats'
p155
(S'\n__stdcall XvListImageFormats()\n'
p156
V\u000avoid XvListImageFormats(void)\u000a\u000a{\u000a  (*(code *)PTR_XvListImageFormats_00603048)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00603048]\n'
p158
S'ff 25 f2 25 20 00\n'
p159
S'.plt:0000000000400a50\n'
p160
tp161
sS'puts'
p162
(S'\n__stdcall puts(char * __s)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00603028)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00603028]\n'
p165
S'ff 25 12 26 20 00\n'
p166
S'.plt:0000000000400a10\n'
p167
tp168
sS'exit'
p169
(S'\n__stdcall exit(int __status)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_006030a0)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x006030a0]\n'
p172
S'ff 25 9a 25 20 00\n'
p173
S'.plt:0000000000400b00\n'
p174
tp175
sS'__libc_csu_fini'
p176
(S'\n__stdcall __libc_csu_fini()\n'
p177
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p178
S'RET\n'
p179
S'f3 c3\n'
p180
S'.text:0000000000401840\n'
p181
tp182
sS'FUN_004009e0'
p183
(S'\n__stdcall FUN_004009e0()\n'
p184
V\u000avoid FUN_004009e0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00603010)();\u000a  return;\u000a}\u000a\u000a
p185
S'PUSH qword ptr [0x00603008]\nJMP qword ptr [0x00603010]\n'
p186
S'ff 35 22 26 20 00\nff 25 24 26 20 00\n'
p187
S'.plt:00000000004009e0\n.plt:00000000004009e6\n'
p188
tp189
sS'XInternAtom'
p190
(S'\n__stdcall XInternAtom()\n'
p191
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_00603080)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00603080]\n'
p193
S'ff 25 ba 25 20 00\n'
p194
S'.plt:0000000000400ac0\n'
p195
tp196
sS'__do_global_dtors_aux'
p197
(S'\n__stdcall __do_global_dtors_aux()\n'
p198
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p199
S'CMP byte ptr [0x00603108],0x0\nJNZ 0x00400bfa\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400b60\nPOP RBP\nMOV byte ptr [0x00603108],0x1\nRET\n'
p200
S'80 3d 21 25 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 0e 25 20 00 01\nf3 c3\n'
p201
S'.text:0000000000400be0\n.text:0000000000400be7\n.text:0000000000400be9\n.text:0000000000400bea\n.text:0000000000400bed\n.text:0000000000400bf2\n.text:0000000000400bf3\n.text:0000000000400bfa\n'
p202
tp203
sS'XvFreeEncodingInfo'
p204
(S'\n__stdcall XvFreeEncodingInfo()\n'
p205
V\u000avoid XvFreeEncodingInfo(void)\u000a\u000a{\u000a  (*(code *)PTR_XvFreeEncodingInfo_00603070)();\u000a  return;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00603070]\n'
p207
S'ff 25 ca 25 20 00\n'
p208
S'.plt:0000000000400aa0\n'
p209
tp210
sS'_fini'
p211
(S'\n__stdcall _fini()\n'
p212
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p213
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p214
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p215
S'.fini:0000000000401844\n.fini:0000000000401848\n.fini:000000000040184c\n'
p216
tp217
sS'XvQueryExtension'
p218
(S'\n__stdcall XvQueryExtension()\n'
p219
V\u000avoid XvQueryExtension(void)\u000a\u000a{\u000a  (*(code *)PTR_XvQueryExtension_00603050)();\u000a  return;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x00603050]\n'
p221
S'ff 25 ea 25 20 00\n'
p222
S'.plt:0000000000400a60\n'
p223
tp224
s.