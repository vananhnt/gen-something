(dp0
S'CreateResourceNameForm'
p1
(S'\n__stdcall CreateResourceNameForm(Widget parent, WNode * node)\n'
p2
V\u000avoid CreateResourceNameForm(Widget parent,WNode *node)\u000a\u000a{\u000a  ResourceBoxInfo *pRVar1;\u000a  WNode **ppWVar2;\u000a  undefined8 uVar3;\u000a  WNode *pWVar4;\u000a  WNode *pWVar5;\u000a  WNode *pWVar6;\u000a  Widget single;\u000a  WNode **ppWVar7;\u000a  WNode **ppWVar8;\u000a  Widget name;\u000a  NameInfo *pNVar9;\u000a  Widget p_Var10;\u000a  AnyInfo *old_info;\u000a  Arg args [10];\u000a  long local_140;\u000a  Widget local_138;\u000a  char **local_130;\u000a  WNode **local_128;\u000a  WNode **local_120;\u000a  WNode *local_118;\u000a  WNode *local_110;\u000a  char **local_108;\u000a  Widget local_100;\u000a  NameInfo *local_f8;\u000a  undefined8 local_f0;\u000a  char *local_e8;\u000a  WNode *local_e0;\u000a  char *local_d8;\u000a  WNode *local_d0;\u000a  char *local_c8;\u000a  WNode *local_c0;\u000a  char *local_b8;\u000a  char *local_b0;\u000a  char *local_a8;\u000a  char *local_a0;\u000a  NameInfo *local_40;\u000a  WNode *local_38;\u000a  \u000a  pRVar1 = node->resources->res_box;\u000a  local_38 = node;\u000a  GetNamesAndClasses(node,&local_130,&local_108);\u000a  local_140 = 0;\u000a  local_f0 = XtCreateManagedWidget("namesAndClasses",formWidgetClass,parent,0,0);\u000a  local_40 = (NameInfo *)&pRVar1->name_info;\u000a  pNVar9 = (NameInfo *)0x0;\u000a  local_128 = (WNode **)0x0;\u000a  local_120 = (WNode **)0x0;\u000a  name = (Widget)0x0;\u000a  p_Var10 = (Widget)0x0;\u000a  local_138 = (Widget)0x0;\u000a  do {\u000a    uVar3 = local_f0;\u000a    local_e8 = "fromHoriz";\u000a    local_d8 = "radioData";\u000a    local_d0 = (WNode *)0x409cde;\u000a    local_e0 = (WNode *)name;\u000a    pWVar5 = (WNode *)XtCreateManagedWidget(&DAT_0040a281,toggleWidgetClass,local_f0,&local_e8,2);\u000a    pWVar4 = local_38;\u000a    XtAddCallback(pWVar5,0x60c408,ActivateWidgetsAndSetResourceString,local_38);\u000a    local_e8 = "fromHoriz";\u000a    local_d8 = "fromVert";\u000a    local_c8 = "radioGroup";\u000a    local_b8 = "radioData";\u000a    local_b0 = &DAT_0040a290;\u000a    local_e0 = (WNode *)p_Var10;\u000a    local_d0 = pWVar5;\u000a    local_c0 = pWVar5;\u000a    pWVar6 = (WNode *)XtCreateManagedWidget(&DAT_0040a292,toggleWidgetClass,uVar3,&local_e8,4);\u000a    XtAddCallback(pWVar6,0x60c408,ActivateWidgetsAndSetResourceString,pWVar4);\u000a    local_f8 = (NameInfo *)XtMalloc(0x18);\u000a    if (pNVar9 == (NameInfo *)0x0) {\u000a      pNVar9 = local_40;\u000a    }\u000a    *(NameInfo **)&pNVar9->next = local_f8;\u000a    *(WNode **)&local_f8->sep_leader = pWVar5;\u000a    local_f8->name_leader = (Widget)0x0;\u000a    if (local_130[local_140] == (char *)0x0) {\u000a      if (local_120 != (WNode **)0x0) {\u000a        local_120[6] = (WNode *)0x0;\u000a        ppWVar8 = local_128;\u000a        ppWVar7 = local_120;\u000a        local_118 = pWVar6;\u000a        local_110 = pWVar5;\u000a        goto LAB_00407c21;\u000a      }\u000a      ppWVar7 = (WNode **)0x0;\u000a      ppWVar8 = local_128;\u000a      local_118 = pWVar6;\u000a      local_110 = pWVar5;\u000a    }\u000a    else {\u000a      local_118 = pWVar6;\u000a      local_110 = pWVar5;\u000a      ppWVar7 = (WNode **)XtMalloc(0x38);\u000a      *ppWVar7 = pWVar4;\u000a      ppWVar7[1] = pWVar5;\u000a      ppWVar7[2] = pWVar6;\u000a      *(undefined4 *)(ppWVar7 + 5) = 0;\u000a      ppWVar8 = ppWVar7;\u000a      if (local_120 != (WNode **)0x0) {\u000a        local_120[6] = (WNode *)(ppWVar7 + 5);\u000a        ppWVar8 = ppWVar7;\u000aLAB_00407c21:\u000a        ppWVar2 = local_128;\u000a        local_120[3] = pWVar5;\u000a        local_120[4] = pWVar6;\u000a        XtAddCallback(local_138,0x60c408,AnyChosen,local_128);\u000a        XtAddCallback(local_138,0x60c429,FreeClientData,ppWVar2);\u000a      }\u000a    }\u000a    local_128 = ppWVar8;\u000a    uVar3 = local_f0;\u000a    if (local_130[local_140] == (char *)0x0) {\u000a      local_f8->next = (_NameInfo *)0x0;\u000a      XtFree(local_130);\u000a      XtFree(local_108);\u000a      return;\u000a    }\u000a    local_e8 = "fromHoriz";\u000a    local_e0 = local_110;\u000a    local_d8 = (char *)0x60c52d;\u000a    local_d0 = (WNode *)local_130[local_140];\u000a    local_c8 = "radioData";\u000a    local_c0 = (WNode *)local_130[local_140];\u000a    local_120 = ppWVar7;\u000a    name = (Widget)XtCreateManagedWidget(&DAT_00409527,toggleWidgetClass,local_f0,&local_e8,3);\u000a    XtAddCallback(name,0x60c408,ActivateWidgetsAndSetResourceString,pWVar4);\u000a    pWVar5 = local_118;\u000a    local_e8 = "fromHoriz";\u000a    local_e0 = local_118;\u000a    local_d8 = "fromVert";\u000a    local_c8 = (char *)0x60c52d;\u000a    local_c0 = (WNode *)local_108[local_140];\u000a    local_b8 = "radioGroup";\u000a    local_a8 = "radioData";\u000a    local_a0 = local_108[local_140];\u000a    local_d0 = (WNode *)name;\u000a    local_b0 = (char *)name;\u000a    p_Var10 = (Widget)XtCreateManagedWidget("class",toggleWidgetClass,uVar3,&local_e8,5);\u000a    XtAddCallback(p_Var10,0x60c408,ActivateWidgetsAndSetResourceString,pWVar4);\u000a    local_e8 = "fromHoriz";\u000a    local_e0 = pWVar5;\u000a    local_d8 = "fromVert";\u000a    local_c8 = "radioData";\u000a    local_c0 = (WNode *)0x409b18;\u000a    local_b8 = "radioGroup";\u000a    local_100 = p_Var10;\u000a    local_d0 = (WNode *)p_Var10;\u000a    local_b0 = (char *)name;\u000a    single = (Widget)XtCreateManagedWidget("single",toggleWidgetClass,uVar3,&local_e8,4);\u000a    XtAddCallback(single,0x60c408,ActivateWidgetsAndSetResourceString,pWVar4);\u000a    local_e8 = "fromHoriz";\u000a    local_e0 = (WNode *)local_138;\u000a    local_d8 = "fromVert";\u000a    local_c8 = "radioGroup";\u000a    local_b8 = "radioData";\u000a    local_b0 = "the any widget";\u000a    local_d0 = (WNode *)single;\u000a    local_c0 = (WNode *)name;\u000a    local_138 = (Widget)XtCreateManagedWidget(&DAT_0040a29e,toggleWidgetClass,uVar3,&local_e8,4);\u000a    pNVar9 = local_f8;\u000a    p_Var10 = local_100;\u000a    local_f8->name_leader = name;\u000a    MakeBoxLookNice((Widget)local_110,(Widget)local_118,local_138,single,name,local_100);\u000a    local_140 = local_140 + 1;\u000a  } while( true );\u000a}\u000a\u000a
p3
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x118\nMOV RCX,RSI\nMOV R14,RDI\nMOV RAX,qword ptr [RCX + 0x48]\nMOV RBX,qword ptr [RAX + 0x18]\nLEA RSI,[RSP + 0x18]\nLEA RDX,[RSP + 0x40]\nMOV qword ptr [0x110 + RSP],RCX\nMOV RDI,RCX\nCALL 0x00406830\nMOV RSI,qword ptr [0x0060de20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nMOV EDI,0x40a267\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R14\nCALL 0x00402750\nMOV qword ptr [RSP + 0x58],RAX\nADD RBX,0x28\nMOV qword ptr [0x108 + RSP],RBX\nMOV R14D,0x0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x20],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nXOR R13D,R13D\nXOR R15D,R15D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00407a93\nMOV RDI,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x30]\nMOV R15,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP],EDX\nMOV RCX,RAX\nMOV qword ptr [RSP + 0x10],RCX\nMOV RDX,RAX\nMOV RCX,R14\nMOV R8,R13\nMOV R9,R15\nCALL 0x00408470\nINC qword ptr [RSP + 0x8]\nMOV R14,RBX\nMOV qword ptr [RSP + 0x60],0x409b82\nMOV qword ptr [RSP + 0x68],R13\nMOV qword ptr [RSP + 0x70],0x40a277\nMOV qword ptr [RSP + 0x78],0x409cde\nMOV RSI,qword ptr [0x0060dda0]\nMOV EDI,0x40a281\nMOV R8D,0x2\nMOV RBX,qword ptr [RSP + 0x58]\nMOV RDX,RBX\nLEA RBP,[RSP + 0x60]\nMOV RCX,RBP\nCALL 0x00402750\nMOV R12,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405290\nMOV RDI,R12\nMOV R13,qword ptr [0x110 + RSP]\nMOV RCX,R13\nCALL 0x00402c70\nMOV qword ptr [RSP + 0x60],0x409b82\nMOV qword ptr [RSP + 0x68],R15\nMOV qword ptr [RSP + 0x70],0x409b6b\nMOV qword ptr [RSP + 0x78],R12\nMOV qword ptr [0x80 + RSP],0x40a285\nMOV qword ptr [0x88 + RSP],R12\nMOV qword ptr [0x90 + RSP],0x40a277\nMOV qword ptr [0x98 + RSP],0x40a290\nMOV RSI,qword ptr [0x0060dda0]\nMOV EDI,0x40a292\nMOV R8D,0x4\nMOV RDX,RBX\nMOV RCX,RBP\nCALL 0x00402750\nMOV RBP,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405290\nMOV RDI,RBP\nMOV RCX,R13\nCALL 0x00402c70\nMOV EDI,0x18\nCALL 0x00402760\nTEST R14,R14\nCMOVZ R14,qword ptr [0x108 + RSP]\nMOV qword ptr [R14],RAX\nMOV qword ptr [RAX + 0x8],R12\nMOV qword ptr [RSP + 0x50],RAX\nMOV qword ptr [RAX + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP + 0x8]\nCMP qword ptr [RAX + RCX*0x8],0x0\nMOV qword ptr [RSP + 0x30],RBP\nMOV qword ptr [RSP + 0x38],R12\nJZ 0x00407c00\nMOV EDI,0x38\nCALL 0x00402760\nMOV RBX,RAX\nMOV qword ptr [RBX],R13\nMOV qword ptr [RBX + 0x8],R12\nMOV qword ptr [RBX + 0x10],RBP\nMOV dword ptr [RBX + 0x28],0x0\nMOV RDX,qword ptr [RSP + 0x28]\nTEST RDX,RDX\nJZ 0x00407c70\nMOV RAX,RBX\nADD RAX,0x28\nMOV qword ptr [RDX + 0x30],RAX\nMOV R14,RBX\nMOV RCX,qword ptr [RSP + 0x20]\nJMP 0x00407c21\nMOV RDX,qword ptr [RSP + 0x28]\nTEST RDX,RDX\nJZ 0x00407efa\nMOV qword ptr [RDX + 0x30],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RBX,RCX\nMOV R14,RDX\nMOV RDI,qword ptr [RSP + 0x10]\nMOV qword ptr [RDX + 0x18],R12\nMOV qword ptr [RDX + 0x20],RBP\nMOV ESI,0x60c408\nMOV EDX,0x404ef0\nMOV RBP,RDI\nMOV R12,RCX\nCALL 0x00402c70\nMOV ESI,0x60c429\nMOV EDX,0x408460\nMOV qword ptr [RSP + 0x10],RBP\nMOV RDI,RBP\nMOV RCX,R12\nCALL 0x00402c70\nMOV RCX,R14\nJMP 0x00407c73\nMOV RCX,RBX\nMOV qword ptr [RSP + 0x20],RBX\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RDX,qword ptr [RSP + 0x8]\nCMP qword ptr [RAX + RDX*0x8],0x0\nJZ 0x00407f01\nMOV qword ptr [RSP + 0x28],RCX\nMOV qword ptr [RSP + 0x60],0x409b82\nMOV RAX,qword ptr [RSP + 0x38]\nMOV qword ptr [RSP + 0x68],RAX\nMOV qword ptr [RSP + 0x70],0x60c52d\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RDX,qword ptr [RSP + 0x8]\nMOV RCX,qword ptr [RAX + RDX*0x8]\nMOV qword ptr [RSP + 0x78],RCX\nMOV qword ptr [0x80 + RSP],0x40a277\nMOV RAX,qword ptr [RAX + RDX*0x8]\nMOV qword ptr [0x88 + RSP],RAX\nMOV RSI,qword ptr [0x0060dda0]\nMOV EDI,0x409527\nMOV R8D,0x3\nMOV R15,qword ptr [RSP + 0x58]\nMOV RDX,R15\nLEA RCX,[RSP + 0x60]\nCALL 0x00402750\nMOV R12,R13\nMOV R13,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405290\nMOV RDI,R13\nMOV RCX,R12\nCALL 0x00402c70\nMOV qword ptr [RSP + 0x60],0x409b82\nMOV RBX,qword ptr [RSP + 0x30]\nMOV qword ptr [RSP + 0x68],RBX\nMOV qword ptr [RSP + 0x70],0x409b6b\nMOV qword ptr [RSP + 0x78],R13\nMOV qword ptr [0x80 + RSP],0x60c52d\nMOV RAX,qword ptr [RSP + 0x40]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV RAX,qword ptr [RAX + RCX*0x8]\nMOV qword ptr [0x88 + RSP],RAX\nMOV qword ptr [0x90 + RSP],0x40a285\nMOV qword ptr [0x98 + RSP],R13\nMOV qword ptr [0xa0 + RSP],0x40a277\nMOV RAX,qword ptr [RSP + 0x40]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV RAX,qword ptr [RAX + RCX*0x8]\nMOV qword ptr [0xa8 + RSP],RAX\nMOV RSI,qword ptr [0x0060dda0]\nMOV EDI,0x40952c\nMOV R8D,0x5\nMOV RDX,R15\nLEA RCX,[RSP + 0x60]\nCALL 0x00402750\nMOV RBP,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405290\nMOV RDI,RBP\nMOV RCX,R12\nCALL 0x00402c70\nMOV qword ptr [RSP + 0x60],0x409b82\nMOV qword ptr [RSP + 0x68],RBX\nMOV qword ptr [RSP + 0x70],0x409b6b\nMOV qword ptr [RSP + 0x48],RBP\nMOV qword ptr [RSP + 0x78],RBP\nMOV qword ptr [0x80 + RSP],0x40a277\nMOV qword ptr [0x88 + RSP],0x409b18\nMOV qword ptr [0x90 + RSP],0x40a285\nMOV qword ptr [0x98 + RSP],R13\nMOV RSI,qword ptr [0x0060dda0]\nMOV EDI,0x40a297\nMOV R8D,0x4\nMOV RDX,R15\nLEA RCX,[RSP + 0x60]\nCALL 0x00402750\nMOV R14,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405290\nMOV RDI,R14\nMOV RCX,R12\nCALL 0x00402c70\nMOV qword ptr [RSP + 0x60],0x409b82\nMOV RAX,qword ptr [RSP + 0x10]\nMOV qword ptr [RSP + 0x68],RAX\nMOV qword ptr [RSP + 0x70],0x409b6b\nMOV qword ptr [RSP + 0x78],R14\nMOV qword ptr [0x80 + RSP],0x40a285\nMOV qword ptr [0x88 + RSP],R13\nMOV qword ptr [0x90 + RSP],0x40a277\nMOV qword ptr [0x98 + RSP],0x409a8b\nMOV RSI,qword ptr [0x0060dda0]\nMOV EDI,0x40a29e\nMOV R8D,0x4\nMOV RDX,R15\nLEA RCX,[RSP + 0x60]\nCALL 0x00402750\nMOV RBX,qword ptr [RSP + 0x50]\nMOV qword ptr [RBX + 0x10],R13\nCMP qword ptr [RSP + 0x8],0x0\nJZ 0x00407ef0\nMOV RCX,qword ptr [RSP + 0x18]\nXOR EDX,EDX\nMOV RSI,qword ptr [RSP + 0x8]\nCMP qword ptr [RCX + RSI*0x8 + 0x8],0x0\nSETZ DL\nJMP 0x00407a60\nMOV EDX,0xffffffff\nJMP 0x00407a60\nXOR ECX,ECX\nJMP 0x00407c78\nMOV RAX,qword ptr [RSP + 0x50]\nMOV qword ptr [RAX],0x0\nMOV RDI,qword ptr [RSP + 0x18]\nCALL 0x00402a90\nMOV RDI,qword ptr [RSP + 0x40]\nCALL 0x00402a90\nADD RSP,0x118\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p4
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 01 00 00\n48 89 f1\n49 89 fe\n48 8b 41 48\n48 8b 58 18\n48 8d 74 24 18\n48 8d 54 24 40\n48 89 8c 24 10 01 00 00\n48 89 cf\ne8 27 ee ff ff\n48 8b 35 10 64 20 00\n31 c0\n48 89 44 24 08\nbf 67 a2 40 00\n31 c9\n45 31 c0\n4c 89 f2\ne8 27 ad ff ff\n48 89 44 24 58\n48 83 c3 28\n48 89 9c 24 08 01 00 00\n41 be 00 00 00 00\n31 c0\n48 89 44 24 20\n31 c0\n48 89 44 24 28\n45 31 ed\n45 31 ff\n31 c0\n48 89 44 24 10\neb 36\n48 8b 7c 24 38\n48 8b 74 24 30\n4c 8b 7c 24 48\n89 14 24\n48 89 c1\n48 89 4c 24 10\n48 89 c2\n4c 89 f1\n4d 89 e8\n4d 89 f9\ne8 e5 09 00 00\n48 ff 44 24 08\n49 89 de\n48 c7 44 24 60 82 9b 40 00\n4c 89 6c 24 68\n48 c7 44 24 70 77 a2 40 00\n48 c7 44 24 78 de 9c 40 00\n48 8b 35 e6 62 20 00\nbf 81 a2 40 00\n41 b8 02 00 00 00\n48 8b 5c 24 58\n48 89 da\n48 8d 6c 24 60\n48 89 e9\ne8 76 ac ff ff\n49 89 c4\nbe 08 c4 60 00\nba 90 52 40 00\n4c 89 e7\n4c 8b ac 24 10 01 00 00\n4c 89 e9\ne8 76 b1 ff ff\n48 c7 44 24 60 82 9b 40 00\n4c 89 7c 24 68\n48 c7 44 24 70 6b 9b 40 00\n4c 89 64 24 78\n48 c7 84 24 80 00 00 00 85 a2 40 00\n4c 89 a4 24 88 00 00 00\n48 c7 84 24 90 00 00 00 77 a2 40 00\n48 c7 84 24 98 00 00 00 90 a2 40 00\n48 8b 35 57 62 20 00\nbf 92 a2 40 00\n41 b8 04 00 00 00\n48 89 da\n48 89 e9\ne8 f1 ab ff ff\n48 89 c5\nbe 08 c4 60 00\nba 90 52 40 00\n48 89 ef\n4c 89 e9\ne8 f9 b0 ff ff\nbf 18 00 00 00\ne8 df ab ff ff\n4d 85 f6\n4c 0f 44 b4 24 08 01 00 00\n49 89 06\n4c 89 60 08\n48 89 44 24 50\n48 c7 40 10 00 00 00 00\n48 8b 44 24 18\n48 8b 4c 24 08\n48 83 3c c8 00\n48 89 6c 24 30\n4c 89 64 24 38\n74 44\nbf 38 00 00 00\ne8 9a ab ff ff\n48 89 c3\n4c 89 2b\n4c 89 63 08\n48 89 6b 10\nc7 43 28 00 00 00 00\n48 8b 54 24 28\n48 85 d2\n0f 84 87 00 00 00\n48 89 d8\n48 83 c0 28\n48 89 42 30\n49 89 de\n48 8b 4c 24 20\neb 23\n48 8b 54 24 28\n48 85 d2\n0f 84 ec 02 00 00\n48 c7 42 30 00 00 00 00\n48 8b 4c 24 20\n48 89 cb\n49 89 d6\n48 8b 7c 24 10\n4c 89 62 18\n48 89 6a 20\nbe 08 c4 60 00\nba f0 4e 40 00\n48 89 fd\n49 89 cc\ne8 2d b0 ff ff\nbe 29 c4 60 00\nba 60 84 40 00\n48 89 6c 24 10\n48 89 ef\n4c 89 e1\ne8 13 b0 ff ff\n4c 89 f1\neb 11\n48 89 d9\n48 89 5c 24 20\n48 8b 44 24 18\n48 8b 54 24 08\n48 83 3c d0 00\n0f 84 74 02 00 00\n48 89 4c 24 28\n48 c7 44 24 60 82 9b 40 00\n48 8b 44 24 38\n48 89 44 24 68\n48 c7 44 24 70 2d c5 60 00\n48 8b 44 24 18\n48 8b 54 24 08\n48 8b 0c d0\n48 89 4c 24 78\n48 c7 84 24 80 00 00 00 77 a2 40 00\n48 8b 04 d0\n48 89 84 24 88 00 00 00\n48 8b 35 c0 60 20 00\nbf 27 95 40 00\n41 b8 03 00 00 00\n4c 8b 7c 24 58\n4c 89 fa\n48 8d 4c 24 60\ne8 53 aa ff ff\n4d 89 ec\n49 89 c5\nbe 08 c4 60 00\nba 90 52 40 00\n4c 89 ef\n4c 89 e1\ne8 58 af ff ff\n48 c7 44 24 60 82 9b 40 00\n48 8b 5c 24 30\n48 89 5c 24 68\n48 c7 44 24 70 6b 9b 40 00\n4c 89 6c 24 78\n48 c7 84 24 80 00 00 00 2d c5 60 00\n48 8b 44 24 40\n48 8b 4c 24 08\n48 8b 04 c8\n48 89 84 24 88 00 00 00\n48 c7 84 24 90 00 00 00 85 a2 40 00\n4c 89 ac 24 98 00 00 00\n48 c7 84 24 a0 00 00 00 77 a2 40 00\n48 8b 44 24 40\n48 8b 4c 24 08\n48 8b 04 c8\n48 89 84 24 a8 00 00 00\n48 8b 35 08 60 20 00\nbf 2c 95 40 00\n41 b8 05 00 00 00\n4c 89 fa\n48 8d 4c 24 60\ne8 a0 a9 ff ff\n48 89 c5\nbe 08 c4 60 00\nba 90 52 40 00\n48 89 ef\n4c 89 e1\ne8 a8 ae ff ff\n48 c7 44 24 60 82 9b 40 00\n48 89 5c 24 68\n48 c7 44 24 70 6b 9b 40 00\n48 89 6c 24 48\n48 89 6c 24 78\n48 c7 84 24 80 00 00 00 77 a2 40 00\n48 c7 84 24 88 00 00 00 18 9b 40 00\n48 c7 84 24 90 00 00 00 85 a2 40 00\n4c 89 ac 24 98 00 00 00\n48 8b 35 84 5f 20 00\nbf 97 a2 40 00\n41 b8 04 00 00 00\n4c 89 fa\n48 8d 4c 24 60\ne8 1c a9 ff ff\n49 89 c6\nbe 08 c4 60 00\nba 90 52 40 00\n4c 89 f7\n4c 89 e1\ne8 24 ae ff ff\n48 c7 44 24 60 82 9b 40 00\n48 8b 44 24 10\n48 89 44 24 68\n48 c7 44 24 70 6b 9b 40 00\n4c 89 74 24 78\n48 c7 84 24 80 00 00 00 85 a2 40 00\n4c 89 ac 24 88 00 00 00\n48 c7 84 24 90 00 00 00 77 a2 40 00\n48 c7 84 24 98 00 00 00 8b 9a 40 00\n48 8b 35 00 5f 20 00\nbf 9e a2 40 00\n41 b8 04 00 00 00\n4c 89 fa\n48 8d 4c 24 60\ne8 98 a8 ff ff\n48 8b 5c 24 50\n4c 89 6b 10\n48 83 7c 24 08 00\n74 27\n48 8b 4c 24 18\n31 d2\n48 8b 74 24 08\n48 83 7c f1 08 00\n0f 94 c2\ne9 7d fb ff ff\nba ff ff ff ff\ne9 66 fb ff ff\n31 c9\ne9 77 fd ff ff\n48 8b 44 24 50\n48 c7 00 00 00 00 00\n48 8b 7c 24 18\ne8 79 ab ff ff\n48 8b 7c 24 40\ne8 6f ab ff ff\n48 81 c4 18 01 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p5
S'.text:00000000004079d0\n.text:00000000004079d1\n.text:00000000004079d3\n.text:00000000004079d5\n.text:00000000004079d7\n.text:00000000004079d9\n.text:00000000004079da\n.text:00000000004079e1\n.text:00000000004079e4\n.text:00000000004079e7\n.text:00000000004079eb\n.text:00000000004079ef\n.text:00000000004079f4\n.text:00000000004079f9\n.text:0000000000407a01\n.text:0000000000407a04\n.text:0000000000407a09\n.text:0000000000407a10\n.text:0000000000407a12\n.text:0000000000407a17\n.text:0000000000407a1c\n.text:0000000000407a1e\n.text:0000000000407a21\n.text:0000000000407a24\n.text:0000000000407a29\n.text:0000000000407a2e\n.text:0000000000407a32\n.text:0000000000407a3a\n.text:0000000000407a40\n.text:0000000000407a42\n.text:0000000000407a47\n.text:0000000000407a49\n.text:0000000000407a4e\n.text:0000000000407a51\n.text:0000000000407a54\n.text:0000000000407a56\n.text:0000000000407a5b\n.text:0000000000407a60\n.text:0000000000407a65\n.text:0000000000407a6a\n.text:0000000000407a6f\n.text:0000000000407a72\n.text:0000000000407a75\n.text:0000000000407a7a\n.text:0000000000407a7d\n.text:0000000000407a80\n.text:0000000000407a83\n.text:0000000000407a86\n.text:0000000000407a8b\n.text:0000000000407a90\n.text:0000000000407a93\n.text:0000000000407a9c\n.text:0000000000407aa1\n.text:0000000000407aaa\n.text:0000000000407ab3\n.text:0000000000407aba\n.text:0000000000407abf\n.text:0000000000407ac5\n.text:0000000000407aca\n.text:0000000000407acd\n.text:0000000000407ad2\n.text:0000000000407ad5\n.text:0000000000407ada\n.text:0000000000407add\n.text:0000000000407ae2\n.text:0000000000407ae7\n.text:0000000000407aea\n.text:0000000000407af2\n.text:0000000000407af5\n.text:0000000000407afa\n.text:0000000000407b03\n.text:0000000000407b08\n.text:0000000000407b11\n.text:0000000000407b16\n.text:0000000000407b22\n.text:0000000000407b2a\n.text:0000000000407b36\n.text:0000000000407b42\n.text:0000000000407b49\n.text:0000000000407b4e\n.text:0000000000407b54\n.text:0000000000407b57\n.text:0000000000407b5a\n.text:0000000000407b5f\n.text:0000000000407b62\n.text:0000000000407b67\n.text:0000000000407b6c\n.text:0000000000407b6f\n.text:0000000000407b72\n.text:0000000000407b77\n.text:0000000000407b7c\n.text:0000000000407b81\n.text:0000000000407b84\n.text:0000000000407b8d\n.text:0000000000407b90\n.text:0000000000407b94\n.text:0000000000407b99\n.text:0000000000407ba1\n.text:0000000000407ba6\n.text:0000000000407bab\n.text:0000000000407bb0\n.text:0000000000407bb5\n.text:0000000000407bba\n.text:0000000000407bbc\n.text:0000000000407bc1\n.text:0000000000407bc6\n.text:0000000000407bc9\n.text:0000000000407bcc\n.text:0000000000407bd0\n.text:0000000000407bd4\n.text:0000000000407bdb\n.text:0000000000407be0\n.text:0000000000407be3\n.text:0000000000407be9\n.text:0000000000407bec\n.text:0000000000407bf0\n.text:0000000000407bf4\n.text:0000000000407bf7\n.text:0000000000407bfc\n.text:0000000000407c00\n.text:0000000000407c05\n.text:0000000000407c08\n.text:0000000000407c0e\n.text:0000000000407c16\n.text:0000000000407c1b\n.text:0000000000407c1e\n.text:0000000000407c21\n.text:0000000000407c26\n.text:0000000000407c2a\n.text:0000000000407c2e\n.text:0000000000407c33\n.text:0000000000407c38\n.text:0000000000407c3b\n.text:0000000000407c3e\n.text:0000000000407c43\n.text:0000000000407c48\n.text:0000000000407c4d\n.text:0000000000407c52\n.text:0000000000407c55\n.text:0000000000407c58\n.text:0000000000407c5d\n.text:0000000000407c60\n.text:0000000000407c70\n.text:0000000000407c73\n.text:0000000000407c78\n.text:0000000000407c7d\n.text:0000000000407c82\n.text:0000000000407c87\n.text:0000000000407c8d\n.text:0000000000407c92\n.text:0000000000407c9b\n.text:0000000000407ca0\n.text:0000000000407ca5\n.text:0000000000407cae\n.text:0000000000407cb3\n.text:0000000000407cb8\n.text:0000000000407cbc\n.text:0000000000407cc1\n.text:0000000000407ccd\n.text:0000000000407cd1\n.text:0000000000407cd9\n.text:0000000000407ce0\n.text:0000000000407ce5\n.text:0000000000407ceb\n.text:0000000000407cf0\n.text:0000000000407cf3\n.text:0000000000407cf8\n.text:0000000000407cfd\n.text:0000000000407d00\n.text:0000000000407d03\n.text:0000000000407d08\n.text:0000000000407d0d\n.text:0000000000407d10\n.text:0000000000407d13\n.text:0000000000407d18\n.text:0000000000407d21\n.text:0000000000407d26\n.text:0000000000407d2b\n.text:0000000000407d34\n.text:0000000000407d39\n.text:0000000000407d45\n.text:0000000000407d4a\n.text:0000000000407d4f\n.text:0000000000407d53\n.text:0000000000407d5b\n.text:0000000000407d67\n.text:0000000000407d6f\n.text:0000000000407d7b\n.text:0000000000407d80\n.text:0000000000407d85\n.text:0000000000407d89\n.text:0000000000407d91\n.text:0000000000407d98\n.text:0000000000407d9d\n.text:0000000000407da3\n.text:0000000000407da6\n.text:0000000000407dab\n.text:0000000000407db0\n.text:0000000000407db3\n.text:0000000000407db8\n.text:0000000000407dbd\n.text:0000000000407dc0\n.text:0000000000407dc3\n.text:0000000000407dc8\n.text:0000000000407dd1\n.text:0000000000407dd6\n.text:0000000000407ddf\n.text:0000000000407de4\n.text:0000000000407de9\n.text:0000000000407df5\n.text:0000000000407e01\n.text:0000000000407e0d\n.text:0000000000407e15\n.text:0000000000407e1c\n.text:0000000000407e21\n.text:0000000000407e27\n.text:0000000000407e2a\n.text:0000000000407e2f\n.text:0000000000407e34\n.text:0000000000407e37\n.text:0000000000407e3c\n.text:0000000000407e41\n.text:0000000000407e44\n.text:0000000000407e47\n.text:0000000000407e4c\n.text:0000000000407e55\n.text:0000000000407e5a\n.text:0000000000407e5f\n.text:0000000000407e68\n.text:0000000000407e6d\n.text:0000000000407e79\n.text:0000000000407e81\n.text:0000000000407e8d\n.text:0000000000407e99\n.text:0000000000407ea0\n.text:0000000000407ea5\n.text:0000000000407eab\n.text:0000000000407eae\n.text:0000000000407eb3\n.text:0000000000407eb8\n.text:0000000000407ebd\n.text:0000000000407ec1\n.text:0000000000407ec7\n.text:0000000000407ec9\n.text:0000000000407ece\n.text:0000000000407ed0\n.text:0000000000407ed5\n.text:0000000000407edb\n.text:0000000000407ede\n.text:0000000000407ef0\n.text:0000000000407ef5\n.text:0000000000407efa\n.text:0000000000407efc\n.text:0000000000407f01\n.text:0000000000407f06\n.text:0000000000407f0d\n.text:0000000000407f12\n.text:0000000000407f17\n.text:0000000000407f1c\n.text:0000000000407f21\n.text:0000000000407f28\n.text:0000000000407f29\n.text:0000000000407f2b\n.text:0000000000407f2d\n.text:0000000000407f2f\n.text:0000000000407f31\n.text:0000000000407f32\n'
p6
tp7
sS'PrintNodes'
p8
(S'\n__stdcall PrintNodes(WNode * top)\n'
p9
V\u000avoid PrintNodes(WNode *top)\u000a\u000a{\u000a  Cardinal CVar1;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  \u000a  if (top->parent == (_WNode *)0x0) {\u000a    printf("Top of Tree, Name: %10s, ID: %10ld, Class: %10s\u005cn",top->name,top->id,top->class);\u000a    CVar1 = top->num_children;\u000a  }\u000a  else {\u000a    printf("Parent %10s, Name: %10s, ID: %10ld, Class: %10s\u005cn",top->parent->name);\u000a    CVar1 = top->num_children;\u000a  }\u000a  if (CVar1 != 0) {\u000a    uVar3 = 0;\u000a    do {\u000a      PrintNodes((WNode *)top->children[uVar3]);\u000a      uVar2 = uVar3 + 1;\u000a      uVar3 = uVar2 & 0xffffffff;\u000a    } while ((uint)uVar2 < top->num_children);\u000a  }\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RAX,qword ptr [R14 + 0x20]\nMOV RDX,qword ptr [R14]\nMOV R8,qword ptr [R14 + 0x8]\nMOV RCX,qword ptr [R14 + 0x10]\nTEST RAX,RAX\nJZ 0x00408c53\nMOV RSI,qword ptr [RAX]\nMOV EDI,0x40a3b1\nXOR EAX,EAX\nCALL 0x00402850\nCMP dword ptr [R14 + 0x38],0x0\nJNZ 0x00408c6f\nJMP 0x00408c96\nMOV EDI,0x40a380\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,R8\nCALL 0x00402850\nCMP dword ptr [R14 + 0x38],0x0\nJZ 0x00408c96\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R14 + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x00408c20\nINC RBX\nCMP EBX,dword ptr [R14 + 0x38]\nJC 0x00408c80\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p11
S'41 56\n53\n50\n49 89 fe\n49 8b 46 20\n49 8b 16\n4d 8b 46 08\n49 8b 4e 10\n48 85 c0\n74 18\n48 8b 30\nbf b1 a3 40 00\n31 c0\ne8 06 9c ff ff\n41 83 7e 38 00\n75 1e\neb 43\nbf 80 a3 40 00\n31 c0\n48 89 d6\n48 89 ca\n4c 89 c1\ne8 e8 9b ff ff\n41 83 7e 38 00\n74 27\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 46 28\n48 8b 3c d8\ne8 93 ff ff ff\n48 ff c3\n41 3b 5e 38\n72 ea\n48 83 c4 08\n5b\n41 5e\nc3\n'
p12
S'.text:0000000000408c20\n.text:0000000000408c22\n.text:0000000000408c23\n.text:0000000000408c24\n.text:0000000000408c27\n.text:0000000000408c2b\n.text:0000000000408c2e\n.text:0000000000408c32\n.text:0000000000408c36\n.text:0000000000408c39\n.text:0000000000408c3b\n.text:0000000000408c3e\n.text:0000000000408c43\n.text:0000000000408c45\n.text:0000000000408c4a\n.text:0000000000408c4f\n.text:0000000000408c51\n.text:0000000000408c53\n.text:0000000000408c58\n.text:0000000000408c5a\n.text:0000000000408c5d\n.text:0000000000408c60\n.text:0000000000408c63\n.text:0000000000408c68\n.text:0000000000408c6d\n.text:0000000000408c6f\n.text:0000000000408c71\n.text:0000000000408c80\n.text:0000000000408c84\n.text:0000000000408c88\n.text:0000000000408c8d\n.text:0000000000408c90\n.text:0000000000408c94\n.text:0000000000408c96\n.text:0000000000408c9a\n.text:0000000000408c9b\n.text:0000000000408c9d\n'
p13
tp14
sS'XtWindow'
p15
(S'\n__stdcall XtWindow()\n'
p16
V\u000avoid XtWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XtWindow_0060d108)();\u000a  return;\u000a}\u000a\u000a
p17
S'JMP qword ptr [0x0060d108]\n'
p18
S'ff 25 22 a9 20 00\n'
p19
S'.plt:00000000004027e0\n'
p20
tp21
sS'strchr'
p22
(S'\n__stdcall strchr(char * __s, int __c)\n'
p23
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_0060d138)();\u000a  return pcVar1;\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x0060d138]\n'
p25
S'ff 25 f2 a8 20 00\n'
p26
S'.plt:0000000000402840\n'
p27
tp28
sS'XrmStringToQuark'
p29
(S'\n__stdcall XrmStringToQuark()\n'
p30
V\u000avoid XrmStringToQuark(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmStringToQuark_0060d330)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x0060d330]\n'
p32
S'ff 25 fa a6 20 00\n'
p33
S'.plt:0000000000402c30\n'
p34
tp35
sS'HandleFlashWidget'
p36
(S'\n__stdcall HandleFlashWidget(Event * event)\n'
p37
V\u000achar * HandleFlashWidget(Event *event)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  char *local_28;\u000a  \u000a  local_28 = (char *)0x0;\u000a  if (*(short *)(*event + 4) != 0) {\u000a    lVar2 = 0;\u000a    lVar1 = 0;\u000a    do {\u000a      AddToFlashList(global_tree_info,(GetGeomInfo *)(*(long *)(*event + 8) + lVar2),&local_28);\u000a      lVar1 = lVar1 + 1;\u000a      lVar2 = lVar2 + 0x40;\u000a    } while (lVar1 < (long)(ulong)*(ushort *)(*event + 4));\u000a  }\u000a  FlashWidgets(global_tree_info);\u000a  return local_28;\u000a}\u000a\u000a
p38
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDI\nMOV qword ptr [RSP],0x0\nCMP word ptr [R15 + 0x4],0x0\nMOV RDI,qword ptr [0x0060dec8]\nJZ 0x00404657\nXOR R12D,R12D\nMOV R14,RSP\nXOR EBX,EBX\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,qword ptr [R15 + 0x8]\nADD RSI,R12\nMOV RDX,R14\nCALL 0x00404670\nINC RBX\nMOVZX EAX,word ptr [R15 + 0x4]\nMOV RDI,qword ptr [0x0060dec8]\nADD R12,0x40\nCMP RBX,RAX\nJL 0x00404630\nCALL 0x00404740\nMOV RAX,qword ptr [RSP]\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p39
S'41 57\n41 56\n41 54\n53\n50\n49 89 ff\n48 c7 04 24 00 00 00 00\n66 41 83 7f 04 00\n48 8b 3d a8 98 20 00\n74 35\n45 31 e4\n49 89 e6\n31 db\n66 0f 1f 44 00 00\n49 8b 77 08\n4c 01 e6\n4c 89 f2\ne8 31 00 00 00\n48 ff c3\n41 0f b7 47 04\n48 8b 3d 7a 98 20 00\n49 83 c4 40\n48 39 c3\n7c d9\ne8 e4 00 00 00\n48 8b 04 24\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p40
S'.text:0000000000404600\n.text:0000000000404602\n.text:0000000000404604\n.text:0000000000404606\n.text:0000000000404607\n.text:0000000000404608\n.text:000000000040460b\n.text:0000000000404613\n.text:0000000000404619\n.text:0000000000404620\n.text:0000000000404622\n.text:0000000000404625\n.text:0000000000404628\n.text:000000000040462a\n.text:0000000000404630\n.text:0000000000404634\n.text:0000000000404637\n.text:000000000040463a\n.text:000000000040463f\n.text:0000000000404642\n.text:0000000000404647\n.text:000000000040464e\n.text:0000000000404652\n.text:0000000000404655\n.text:0000000000404657\n.text:000000000040465c\n.text:0000000000404660\n.text:0000000000404664\n.text:0000000000404665\n.text:0000000000404667\n.text:0000000000404669\n.text:000000000040466b\n'
p41
tp42
sS'XtWidgetToApplicationContext'
p43
(S'\n__stdcall XtWidgetToApplicationContext()\n'
p44
V\u000avoid XtWidgetToApplicationContext(void)\u000a\u000a{\u000a  (*(code *)PTR_XtWidgetToApplicationContext_0060d168)();\u000a  return;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x0060d168]\n'
p46
S'ff 25 c2 a8 20 00\n'
p47
S'.plt:00000000004028a0\n'
p48
tp49
sS'_SetResourcesFile'
p50
(S'\n__stdcall _SetResourcesFile(Widget w, XtPointer junk, XtPointer filename_ptr)\n'
p51
V\u000avoid _SetResourcesFile(Widget w,XtPointer junk,XtPointer filename_ptr)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *__dest;\u000a  \u000a  if (global_resources.allocated_save_resources_file == 0) {\u000a    global_resources.allocated_save_resources_file = 1;\u000a  }\u000a  else {\u000a    XtFree(global_resources.save_resources_file);\u000a  }\u000a  if (filename_ptr == (XtPointer)0x0) {\u000a    global_resources.save_resources_file = (char *)0x0;\u000a  }\u000a  else {\u000a    sVar1 = strlen((char *)filename_ptr);\u000a    __dest = (char *)XtMalloc((ulong)((int)sVar1 + 1));\u000a    global_resources.save_resources_file = strcpy(__dest,(char *)filename_ptr);\u000a  }\u000a  return;\u000a}\u000a\u000a
p52
S'PUSH RBX\nMOV RBX,RDX\nCMP byte ptr [0x0060dfb0],0x0\nJZ 0x00405600\nMOV RDI,qword ptr [0x0060dfa8]\nCALL 0x00402a90\nTEST RBX,RBX\nJNZ 0x0040560c\nJMP 0x00405629\nMOV byte ptr [0x0060dfb0],0x1\nTEST RBX,RBX\nJZ 0x00405629\nMOV RDI,RBX\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x004026a0\nJMP 0x0040562b\nXOR EAX,EAX\nMOV qword ptr [0x0060dfa8],RAX\nPOP RBX\nRET\n'
p53
S'53\n48 89 d3\n80 3d c5 89 20 00 00\n74 13\n48 8b 3d b4 89 20 00\ne8 97 d4 ff ff\n48 85 db\n75 0e\neb 29\nc6 05 a9 89 20 00 01\n48 85 db\n74 1d\n48 89 df\ne8 dc d1 ff ff\n8d 78 01\ne8 44 d1 ff ff\n48 89 c7\n48 89 de\ne8 79 d0 ff ff\neb 02\n31 c0\n48 89 05 76 89 20 00\n5b\nc3\n'
p54
S'.text:00000000004055e0\n.text:00000000004055e1\n.text:00000000004055e4\n.text:00000000004055eb\n.text:00000000004055ed\n.text:00000000004055f4\n.text:00000000004055f9\n.text:00000000004055fc\n.text:00000000004055fe\n.text:0000000000405600\n.text:0000000000405607\n.text:000000000040560a\n.text:000000000040560c\n.text:000000000040560f\n.text:0000000000405614\n.text:0000000000405617\n.text:000000000040561c\n.text:000000000040561f\n.text:0000000000405622\n.text:0000000000405627\n.text:0000000000405629\n.text:000000000040562b\n.text:0000000000405632\n.text:0000000000405633\n'
p55
tp56
sS'_XEditResPut32'
p57
(S'\n__stdcall _XEditResPut32()\n'
p58
V\u000avoid _XEditResPut32(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResPut32_0060d0d0)();\u000a  return;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x0060d0d0]\n'
p60
S'ff 25 5a a9 20 00\n'
p61
S'.plt:0000000000402770\n'
p62
tp63
sS'IsActiveNode'
p64
(S'\n__stdcall IsActiveNode(WNode * node)\n'
p65
V\u000aBoolean IsActiveNode(WNode *node)\u000a\u000a{\u000a  _TreeInfo *p_Var1;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  \u000a  p_Var1 = node->tree_info;\u000a  if (p_Var1->num_nodes == 0) {\u000a    return 0;\u000a  }\u000a  uVar3 = 0;\u000a  do {\u000a    if ((WNode *)p_Var1->active_nodes[uVar3] == node) {\u000a      return 1;\u000a    }\u000a    uVar2 = uVar3 + 1;\u000a    uVar3 = uVar2 & 0xffffffff;\u000a  } while ((uint)uVar2 < p_Var1->num_nodes);\u000a  return 0;\u000a}\u000a\u000a
p66
S'MOV RAX,qword ptr [RDI + 0x30]\nCMP dword ptr [RAX + 0x18],0x0\nJZ 0x00409391\nMOV RCX,qword ptr [RAX + 0x10]\nXOR EDX,EDX\nCMP qword ptr [RCX + RDX*0x8],RDI\nJZ 0x00409394\nINC RDX\nCMP EDX,dword ptr [RAX + 0x18]\nJC 0x00409380\nXOR EAX,EAX\nRET\nXOR EAX,EAX\nRET\nMOV AL,0x1\nRET\n'
p67
S'48 8b 47 30\n83 78 18 00\n74 17\n48 8b 48 10\n31 d2\n48 39 3c d1\n74 0e\n48 ff c2\n3b 50 18\n72 f2\n31 c0\nc3\n31 c0\nc3\nb0 01\nc3\n'
p68
S'.text:0000000000409370\n.text:0000000000409374\n.text:0000000000409378\n.text:000000000040937a\n.text:000000000040937e\n.text:0000000000409380\n.text:0000000000409384\n.text:0000000000409386\n.text:0000000000409389\n.text:000000000040938c\n.text:000000000040938e\n.text:0000000000409390\n.text:0000000000409391\n.text:0000000000409393\n.text:0000000000409394\n.text:0000000000409396\n'
p69
tp70
sS'XtRemoveTimeOut'
p71
(S'\n__stdcall XtRemoveTimeOut()\n'
p72
V\u000avoid XtRemoveTimeOut(void)\u000a\u000a{\u000a  (*(code *)PTR_XtRemoveTimeOut_0060d1c0)();\u000a  return;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x0060d1c0]\n'
p74
S'ff 25 6a a8 20 00\n'
p75
S'.plt:0000000000402950\n'
p76
tp77
sS'LoseSelection'
p78
(S'\n__stdcall LoseSelection(Widget w, Atom * sel)\n'
p79
V\u000avoid LoseSelection(Widget w,Atom *sel)\u000a\u000a{\u000a  Atom AVar1;\u000a  Atom AVar2;\u000a  undefined8 uVar3;\u000a  \u000a  if (global_client.timeout != 0) {\u000a    XtRemoveTimeOut();\u000a    global_client.timeout = 0;\u000a  }\u000a  AVar2 = atom_client_value;\u000a  AVar1 = *sel;\u000a  uVar3 = XtDisplay(w);\u000a  uVar3 = XtLastTimestampProcessed(uVar3);\u000a  (*(code *)PTR_XtGetSelectionValue_0060d298)(w,AVar1,AVar2,GetClientValue,0,uVar3);\u000a  return;\u000a}\u000a\u000a
p80
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV RBX,RSI\nMOV R14,RDI\nMOV RDI,qword ptr [0x0060df78]\nTEST RDI,RDI\nJZ 0x00403667\nCALL 0x00402950\nMOV qword ptr [0x0060df78],0x0\nMOV R15,qword ptr [RBX]\nMOV RBX,qword ptr [0x0060dea8]\nMOV RDI,R14\nCALL 0x00402ab0\nMOV RDI,RAX\nCALL 0x00402b20\nMOV ECX,0x4037f0\nXOR R8D,R8D\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,RBX\nMOV R9,RAX\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00402b00\n'
p81
S'41 57\n41 56\n53\n48 89 f3\n49 89 fe\n48 8b 3d 26 a9 20 00\n48 85 ff\n74 10\ne8 f4 f2 ff ff\n48 c7 05 11 a9 20 00 00 00 00 00\n4c 8b 3b\n48 8b 1d 37 a8 20 00\n4c 89 f7\ne8 37 f4 ff ff\n48 89 c7\ne8 9f f4 ff ff\nb9 f0 37 40 00\n45 31 c0\n4c 89 f7\n4c 89 fe\n48 89 da\n49 89 c1\n5b\n41 5e\n41 5f\ne9 61 f4 ff ff\n'
p82
S'.text:0000000000403640\n.text:0000000000403642\n.text:0000000000403644\n.text:0000000000403645\n.text:0000000000403648\n.text:000000000040364b\n.text:0000000000403652\n.text:0000000000403655\n.text:0000000000403657\n.text:000000000040365c\n.text:0000000000403667\n.text:000000000040366a\n.text:0000000000403671\n.text:0000000000403674\n.text:0000000000403679\n.text:000000000040367c\n.text:0000000000403681\n.text:0000000000403686\n.text:0000000000403689\n.text:000000000040368c\n.text:000000000040368f\n.text:0000000000403692\n.text:0000000000403695\n.text:0000000000403696\n.text:0000000000403698\n.text:000000000040369a\n'
p83
tp84
sS'InsertWidgetFromNode'
p85
(S'\n__stdcall InsertWidgetFromNode(ProtocolStream * stream, WNode * node)\n'
p86
V\u000avoid InsertWidgetFromNode(ProtocolStream *stream,WNode *node)\u000a\u000a{\u000a  _WNode *p_Var1;\u000a  long lVar2;\u000a  undefined8 *puVar3;\u000a  ulong uVar4;\u000a  ulong uVar5;\u000a  ulong uVar6;\u000a  undefined8 *puVar7;\u000a  \u000a  if (node == (WNode *)0x0) {\u000a    puVar7 = (undefined8 *)XtMalloc(0);\u000a    _XEditResPut16(stream,0);\u000a  }\u000a  else {\u000a    uVar6 = 0;\u000a    p_Var1 = (_WNode *)node;\u000a    uVar5 = 0;\u000a    do {\u000a      uVar4 = uVar5;\u000a      p_Var1 = ((WNode *)p_Var1)->parent;\u000a      uVar5 = uVar4 + 1;\u000a      uVar6 = (ulong)((int)uVar6 + 8);\u000a    } while (p_Var1 != (_WNode *)0x0);\u000a    puVar7 = (undefined8 *)XtMalloc(uVar6);\u000a    if (node != (WNode *)0x0) {\u000a      lVar2 = (long)(int)uVar5;\u000a      do {\u000a        puVar7[lVar2 + -1] = node->id;\u000a        lVar2 = lVar2 + -1;\u000a        node = (WNode *)node->parent;\u000a      } while (node != (WNode *)0x0);\u000a    }\u000a    _XEditResPut16(stream,uVar5 & 0xffffffff);\u000a    puVar3 = puVar7;\u000a    if (-1 < (int)uVar4) {\u000a      do {\u000a        _XEditResPut32(stream,*puVar3);\u000a        uVar5 = uVar5 - 1;\u000a        puVar3 = puVar3 + 1;\u000a      } while (uVar5 != 0);\u000a    }\u000a  }\u000a  XtFree(puVar7);\u000a  return;\u000a}\u000a\u000a
p87
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,RSI\nMOV R14,RDI\nTEST R12,R12\nJZ 0x00406ee6\nXOR EDI,EDI\nXOR EBP,EBP\nMOV RAX,R12\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [RAX + 0x20]\nINC RBP\nADD EDI,0x8\nTEST RAX,RAX\nJNZ 0x00406e70\nCALL 0x00402760\nMOV R15,RAX\nLEA R13,[RBP + -0x1]\nTEST R12,R12\nJZ 0x00406eb7\nMOVSXD RAX,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RCX,qword ptr [R12 + 0x10]\nMOV qword ptr [R15 + RAX*0x8 + -0x8],RCX\nDEC RAX\nMOV R12,qword ptr [R12 + 0x20]\nTEST R12,R12\nJNZ 0x00406ea0\nMOV RDI,R14\nMOV ESI,EBP\nCALL 0x00402c80\nTEST R13D,R13D\nJS 0x00406efa\nMOV RBX,R15\nNOP dword ptr [RAX]\nMOV RSI,qword ptr [RBX]\nMOV RDI,R14\nCALL 0x00402770\nADD RBX,0x8\nDEC RBP\nJNZ 0x00406ed0\nJMP 0x00406efa\nXOR EDI,EDI\nCALL 0x00402760\nMOV R15,RAX\nXOR ESI,ESI\nMOV RDI,R14\nCALL 0x00402c80\nMOV RDI,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00402a90\n'
p88
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f4\n49 89 fe\n4d 85 e4\n0f 84 8c 00 00 00\n31 ff\n31 ed\n4c 89 e0\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 40 20\n48 ff c5\n83 c7 08\n48 85 c0\n75 f1\ne8 dc b8 ff ff\n49 89 c7\n4c 8d 6d ff\n4d 85 e4\n74 27\n48 63 c5\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 4c 24 10\n49 89 4c c7 f8\n48 ff c8\n4d 8b 64 24 20\n4d 85 e4\n75 e9\n4c 89 f7\n89 ee\ne8 bf bd ff ff\n45 85 ed\n78 34\n4c 89 fb\n0f 1f 80 00 00 00 00\n48 8b 33\n4c 89 f7\ne8 95 b8 ff ff\n48 83 c3 08\n48 ff cd\n75 ec\neb 14\n31 ff\ne8 73 b8 ff ff\n49 89 c7\n31 f6\n4c 89 f7\ne8 86 bd ff ff\n4c 89 ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 80 bb ff ff\n'
p89
S'.text:0000000000406e40\n.text:0000000000406e41\n.text:0000000000406e43\n.text:0000000000406e45\n.text:0000000000406e47\n.text:0000000000406e49\n.text:0000000000406e4a\n.text:0000000000406e4b\n.text:0000000000406e4e\n.text:0000000000406e51\n.text:0000000000406e54\n.text:0000000000406e5a\n.text:0000000000406e5c\n.text:0000000000406e5e\n.text:0000000000406e61\n.text:0000000000406e70\n.text:0000000000406e74\n.text:0000000000406e77\n.text:0000000000406e7a\n.text:0000000000406e7d\n.text:0000000000406e7f\n.text:0000000000406e84\n.text:0000000000406e87\n.text:0000000000406e8b\n.text:0000000000406e8e\n.text:0000000000406e90\n.text:0000000000406e93\n.text:0000000000406ea0\n.text:0000000000406ea5\n.text:0000000000406eaa\n.text:0000000000406ead\n.text:0000000000406eb2\n.text:0000000000406eb5\n.text:0000000000406eb7\n.text:0000000000406eba\n.text:0000000000406ebc\n.text:0000000000406ec1\n.text:0000000000406ec4\n.text:0000000000406ec6\n.text:0000000000406ec9\n.text:0000000000406ed0\n.text:0000000000406ed3\n.text:0000000000406ed6\n.text:0000000000406edb\n.text:0000000000406edf\n.text:0000000000406ee2\n.text:0000000000406ee4\n.text:0000000000406ee6\n.text:0000000000406ee8\n.text:0000000000406eed\n.text:0000000000406ef0\n.text:0000000000406ef2\n.text:0000000000406ef5\n.text:0000000000406efa\n.text:0000000000406efd\n.text:0000000000406f01\n.text:0000000000406f02\n.text:0000000000406f04\n.text:0000000000406f06\n.text:0000000000406f08\n.text:0000000000406f0a\n.text:0000000000406f0b\n'
p90
tp91
sS'FlashWidgetsOn'
p92
(S'\n__stdcall FlashWidgetsOn(XtPointer info_ptr, XtIntervalId * id)\n'
p93
V\u000avoid FlashWidgetsOn(XtPointer info_ptr,XtIntervalId *id)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  ulong uVar3;\u000a  ulong uVar4;\u000a  \u000a  if (*(int *)((long)info_ptr + 0x28) != 0) {\u000a    uVar4 = 0;\u000a    do {\u000a      XtRealizeWidget(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      uVar1 = XtDisplay(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      uVar2 = XtWindow(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      XMapRaised(uVar1,uVar2);\u000a      uVar3 = uVar4 + 1;\u000a      uVar4 = uVar3 & 0xffffffff;\u000a    } while ((uint)uVar3 < *(uint *)((long)info_ptr + 0x28));\u000a  }\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RDI\nCMP dword ptr [R15 + 0x28],0x0\nJZ 0x00404b4e\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R15 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x00402980\nMOV RAX,qword ptr [R15 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x00402ab0\nMOV R14,RAX\nMOV RAX,qword ptr [R15 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x004027e0\nMOV RDI,R14\nMOV RSI,RAX\nCALL 0x00402a50\nINC RBX\nCMP EBX,dword ptr [R15 + 0x28]\nJC 0x00404b10\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p95
S'41 57\n41 56\n53\n49 89 ff\n41 83 7f 28 00\n74 4f\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 47 20\n48 8b 3c d8\ne8 63 de ff ff\n49 8b 47 20\n48 8b 3c d8\ne8 86 df ff ff\n49 89 c6\n49 8b 47 20\n48 8b 3c d8\ne8 a6 dc ff ff\n4c 89 f7\n48 89 c6\ne8 0b df ff ff\n48 ff c3\n41 3b 5f 28\n72 c2\n5b\n41 5e\n41 5f\nc3\n'
p96
S'.text:0000000000404af0\n.text:0000000000404af2\n.text:0000000000404af4\n.text:0000000000404af5\n.text:0000000000404af8\n.text:0000000000404afd\n.text:0000000000404aff\n.text:0000000000404b01\n.text:0000000000404b10\n.text:0000000000404b14\n.text:0000000000404b18\n.text:0000000000404b1d\n.text:0000000000404b21\n.text:0000000000404b25\n.text:0000000000404b2a\n.text:0000000000404b2d\n.text:0000000000404b31\n.text:0000000000404b35\n.text:0000000000404b3a\n.text:0000000000404b3d\n.text:0000000000404b40\n.text:0000000000404b45\n.text:0000000000404b48\n.text:0000000000404b4c\n.text:0000000000404b4e\n.text:0000000000404b4f\n.text:0000000000404b51\n.text:0000000000404b53\n'
p97
tp98
sS'XFree'
p99
(S'\n__stdcall XFree()\n'
p100
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_0060d148)();\u000a  return;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x0060d148]\n'
p102
S'ff 25 e2 a8 20 00\n'
p103
S'.plt:0000000000402860\n'
p104
tp105
sS'frame_dummy'
p106
(S'\n__stdcall frame_dummy()\n'
p107
V\u000a/* WARNING: Removing unreachable block (ram,0x00402d9a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p108
S'MOV EDI,0x60be58\nCMP qword ptr [RDI],0x0\nJNZ 0x00402d90\nJMP 0x00402d20\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402d8b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00402d20\n'
p109
S'bf 58 be 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p110
S'.text:0000000000402d80\n.text:0000000000402d85\n.text:0000000000402d89\n.text:0000000000402d8b\n.text:0000000000402d90\n.text:0000000000402d95\n.text:0000000000402d98\n.text:0000000000402d9a\n.text:0000000000402d9b\n.text:0000000000402d9e\n.text:0000000000402da0\n.text:0000000000402da1\n'
p111
tp112
sS'SetCommand'
p113
(S'\n__stdcall SetCommand(Widget w, char * msg)\n'
p114
V\u000avoid SetCommand(Widget w,char *msg)\u000a\u000a{\u000a  char cVar1;\u000a  long lVar2;\u000a  undefined8 uVar3;\u000a  String str;\u000a  char error_buf [8192];\u000a  undefined4 local_2088 [8];\u000a  Window local_2068;\u000a  Atom local_2060;\u000a  undefined4 local_2058;\u000a  undefined8 local_2050;\u000a  Atom local_2048;\u000a  ulong local_2040;\u000a  long local_2038;\u000a  char local_2028 [8200];\u000a  \u000a  lVar2 = XtDisplay();\u000a  if (str == (char *)0x0) {\u000a    str = res_labels[6];\u000a  }\u000a  SetMessage(global_screen_data.info_label,str);\u000a  if ((global_client.window == 0) &&\u000a     (global_client.window = GetClientWindow(w,(int *)0x0,(int *)0x0), global_client.window == 0)) {\u000a    return;\u000a  }\u000a  global_client.ident = GetNewIdent();\u000a  global_client.atom = atom_comm;\u000a  global_client.command = (ResCommand)msg;\u000a  BuildHeader();\u000a  cVar1 = XtOwnSelection(w,global_client.atom,0,ConvertCommand,LoseSelection,SelectionDone);\u000a  if (cVar1 == 0) {\u000a    SetMessage(global_screen_data.info_label,res_labels[7]);\u000a  }\u000a  local_2068 = global_client.window;\u000a  local_2088[0] = 0x21;\u000a  local_2060 = atom_resource_editor;\u000a  local_2058 = 0x20;\u000a  local_2050 = XtLastTimestampProcessed(lVar2);\u000a  local_2048 = global_client.atom;\u000a  local_2040 = (ulong)global_client.ident;\u000a  local_2038 = (long)global_effective_protocol_version;\u000a  global_error_code = 0;\u000a  global_old_error_handler = (int (*)(Display *,XErrorEvent *))XSetErrorHandler(HandleXErrors);\u000a  global_serial_num = *(long *)(lVar2 + 0x98) + 1;\u000a  XSendEvent(lVar2,global_client.window,0,0,local_2088);\u000a  XSync(lVar2,0);\u000a  XSetErrorHandler(global_old_error_handler);\u000a  if (global_error_code == 1) {\u000a    global_error_code = 0;\u000a    sprintf(local_2028,"The communication window with%s%s."," application is no longer available\u005cn",\u000a            "Please select a new widget tree");\u000a    global_client.window = 0;\u000a    SetCommand(w,(char *)0x0);\u000a  }\u000a  else {\u000a    TellUserAboutMessage(global_screen_data.info_label);\u000a    uVar3 = XtWidgetToApplicationContext(w);\u000a    global_client.timeout = XtAppAddTimeOut(uVar3,60000,ClientTimedOut,w);\u000a  }\u000a  return;\u000a}\u000a\u000a
p115
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x2068\nMOV RBX,RDX\nMOV R14D,ESI\nMOV R15,RDI\nCALL 0x00402ab0\nMOV RBP,RAX\nTEST RBX,RBX\nCMOVZ RBX,qword ptr [0x0060e030]\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nCMP qword ptr [0x0060df80],0x0\nJNZ 0x0040336e\nXOR ESI,ESI\nXOR EDX,EDX\nMOV RDI,R15\nCALL 0x00403190\nMOV qword ptr [0x0060df80],RAX\nTEST RAX,RAX\nJZ 0x004034fa\nCALL 0x00403510\nMOV byte ptr [0x0060df4c],AL\nMOV dword ptr [0x0060df48],R14D\nMOV RAX,qword ptr [0x0060de90]\nMOV qword ptr [0x0060df88],RAX\nCALL 0x00403530\nMOV RSI,qword ptr [0x0060df88]\nXOR EDX,EDX\nMOV ECX,0x4035f0\nMOV R8D,0x403640\nMOV R9D,0x4036a0\nMOV RDI,R15\nCALL 0x00402870\nTEST AL,AL\nJNZ 0x004033cc\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e038]\nCALL 0x00406120\nMOV RAX,qword ptr [0x0060df80]\nMOV qword ptr [RSP + 0x20],RAX\nMOV dword ptr [RSP],0x21\nMOV RAX,qword ptr [0x0060de98]\nMOV qword ptr [RSP + 0x28],RAX\nMOV dword ptr [RSP + 0x30],0x20\nMOV RDI,RBP\nCALL 0x00402b20\nMOV qword ptr [RSP + 0x38],RAX\nMOV RAX,qword ptr [0x0060df88]\nMOV qword ptr [RSP + 0x40],RAX\nMOVZX EAX,byte ptr [0x0060df4c]\nMOV qword ptr [RSP + 0x48],RAX\nMOVSXD RAX,dword ptr [0x0060d4c0]\nMOV qword ptr [RSP + 0x50],RAX\nMOV dword ptr [0x0060df40],0x0\nMOV EDI,0x4063a0\nCALL 0x00402a20\nMOV qword ptr [0x0060dfc0],RAX\nMOV RAX,qword ptr [0x98 + RBP]\nINC RAX\nMOV qword ptr [0x0060dfc8],RAX\nMOV RSI,qword ptr [0x0060df80]\nMOV R8,RSP\nXOR EDX,EDX\nXOR ECX,ECX\nMOV RDI,RBP\nCALL 0x00402620\nXOR ESI,ESI\nMOV RDI,RBP\nCALL 0x00402ac0\nMOV RDI,qword ptr [0x0060dfc0]\nCALL 0x00402a20\nCMP dword ptr [0x0060df40],0x1\nJNZ 0x004034c7\nMOV dword ptr [0x0060df40],0x0\nLEA RBX,[RSP + 0x60]\nMOV ESI,0x409660\nMOV EDX,0x409683\nMOV ECX,0x4096a8\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV qword ptr [0x0060df80],0x0\nXOR ESI,ESI\nMOV RDI,R15\nMOV RDX,RBX\nCALL 0x00403310\nJMP 0x004034fa\nMOV RDI,qword ptr [0x0060dff8]\nMOV ESI,R14D\nCALL 0x004036b0\nMOV RDI,R15\nCALL 0x004028a0\nMOV ESI,0xea60\nMOV EDX,0x403700\nMOV RDI,RAX\nMOV RCX,R15\nCALL 0x00402780\nMOV qword ptr [0x0060df78],RAX\nADD RSP,0x2068\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p116
S'55\n41 57\n41 56\n53\n48 81 ec 68 20 00 00\n48 89 d3\n41 89 f6\n49 89 ff\ne8 85 f7 ff ff\n48 89 c5\n48 85 db\n48 0f 44 1d f7 ac 20 00\n48 8b 3d b8 ac 20 00\n48 89 de\ne8 d8 2d 00 00\n48 83 3d 30 ac 20 00 00\n75 1c\n31 f6\n31 d2\n4c 89 ff\ne8 32 fe ff ff\n48 89 05 1b ac 20 00\n48 85 c0\n0f 84 8c 01 00 00\ne8 9d 01 00 00\n88 05 d3 ab 20 00\n44 89 35 c8 ab 20 00\n48 8b 05 09 ab 20 00\n48 89 05 fa ab 20 00\ne8 9d 01 00 00\n48 8b 35 ee ab 20 00\n31 d2\nb9 f0 35 40 00\n41 b8 40 36 40 00\n41 b9 a0 36 40 00\n4c 89 ff\ne8 bb f4 ff ff\n84 c0\n75 13\n48 8b 3d 38 ac 20 00\n48 8b 35 71 ac 20 00\ne8 54 2d 00 00\n48 8b 05 ad ab 20 00\n48 89 44 24 20\nc7 04 24 21 00 00 00\n48 8b 05 b2 aa 20 00\n48 89 44 24 28\nc7 44 24 30 20 00 00 00\n48 89 ef\ne8 25 f7 ff ff\n48 89 44 24 38\n48 8b 05 81 ab 20 00\n48 89 44 24 40\n0f b6 05 39 ab 20 00\n48 89 44 24 48\n48 63 05 a1 a0 20 00\n48 89 44 24 50\nc7 05 12 ab 20 00 00 00 00 00\nbf a0 63 40 00\ne8 e8 f5 ff ff\n48 89 05 81 ab 20 00\n48 8b 85 98 00 00 00\n48 ff c0\n48 89 05 78 ab 20 00\n48 8b 35 29 ab 20 00\n49 89 e0\n31 d2\n31 c9\n48 89 ef\ne8 ba f1 ff ff\n31 f6\n48 89 ef\ne8 50 f6 ff ff\n48 8b 3d 49 ab 20 00\ne8 a4 f5 ff ff\n83 3d bd aa 20 00 01\n75 42\nc7 05 b1 aa 20 00 00 00 00 00\n48 8d 5c 24 60\nbe 60 96 40 00\nba 83 96 40 00\nb9 a8 96 40 00\n31 c0\n48 89 df\ne8 43 f7 ff ff\n48 c7 05 c8 aa 20 00 00 00 00 00\n31 f6\n4c 89 ff\n48 89 da\ne8 4b fe ff ff\neb 33\n48 8b 3d 2a ab 20 00\n44 89 f6\ne8 da 01 00 00\n4c 89 ff\ne8 c2 f3 ff ff\nbe 60 ea 00 00\nba 00 37 40 00\n48 89 c7\n4c 89 f9\ne8 8d f2 ff ff\n48 89 05 7e aa 20 00\n48 81 c4 68 20 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p117
S'.text:0000000000403310\n.text:0000000000403311\n.text:0000000000403313\n.text:0000000000403315\n.text:0000000000403316\n.text:000000000040331d\n.text:0000000000403320\n.text:0000000000403323\n.text:0000000000403326\n.text:000000000040332b\n.text:000000000040332e\n.text:0000000000403331\n.text:0000000000403339\n.text:0000000000403340\n.text:0000000000403343\n.text:0000000000403348\n.text:0000000000403350\n.text:0000000000403352\n.text:0000000000403354\n.text:0000000000403356\n.text:0000000000403359\n.text:000000000040335e\n.text:0000000000403365\n.text:0000000000403368\n.text:000000000040336e\n.text:0000000000403373\n.text:0000000000403379\n.text:0000000000403380\n.text:0000000000403387\n.text:000000000040338e\n.text:0000000000403393\n.text:000000000040339a\n.text:000000000040339c\n.text:00000000004033a1\n.text:00000000004033a7\n.text:00000000004033ad\n.text:00000000004033b0\n.text:00000000004033b5\n.text:00000000004033b7\n.text:00000000004033b9\n.text:00000000004033c0\n.text:00000000004033c7\n.text:00000000004033cc\n.text:00000000004033d3\n.text:00000000004033d8\n.text:00000000004033df\n.text:00000000004033e6\n.text:00000000004033eb\n.text:00000000004033f3\n.text:00000000004033f6\n.text:00000000004033fb\n.text:0000000000403400\n.text:0000000000403407\n.text:000000000040340c\n.text:0000000000403413\n.text:0000000000403418\n.text:000000000040341f\n.text:0000000000403424\n.text:000000000040342e\n.text:0000000000403433\n.text:0000000000403438\n.text:000000000040343f\n.text:0000000000403446\n.text:0000000000403449\n.text:0000000000403450\n.text:0000000000403457\n.text:000000000040345a\n.text:000000000040345c\n.text:000000000040345e\n.text:0000000000403461\n.text:0000000000403466\n.text:0000000000403468\n.text:000000000040346b\n.text:0000000000403470\n.text:0000000000403477\n.text:000000000040347c\n.text:0000000000403483\n.text:0000000000403485\n.text:000000000040348f\n.text:0000000000403494\n.text:0000000000403499\n.text:000000000040349e\n.text:00000000004034a3\n.text:00000000004034a5\n.text:00000000004034a8\n.text:00000000004034ad\n.text:00000000004034b8\n.text:00000000004034ba\n.text:00000000004034bd\n.text:00000000004034c0\n.text:00000000004034c5\n.text:00000000004034c7\n.text:00000000004034ce\n.text:00000000004034d1\n.text:00000000004034d6\n.text:00000000004034d9\n.text:00000000004034de\n.text:00000000004034e3\n.text:00000000004034e8\n.text:00000000004034eb\n.text:00000000004034ee\n.text:00000000004034f3\n.text:00000000004034fa\n.text:0000000000403501\n.text:0000000000403502\n.text:0000000000403504\n.text:0000000000403506\n.text:0000000000403507\n'
p118
tp119
sS'FindNode'
p120
(S'\n__stdcall FindNode(WNode * top_node, ulong * ids)\n'
p121
V\u000aWNode * FindNode(WNode *top_node,ulong *ids)\u000a\u000a{\u000a  WNode *pWVar1;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  uint in_EDX;\u000a  long lVar4;\u000a  \u000a  if (top_node == (WNode *)0x0) {\u000a    return (WNode *)0x0;\u000a  }\u000a  if (*ids == top_node->id) {\u000a    if (in_EDX < 2) {\u000a      return top_node;\u000a    }\u000a    lVar4 = 1;\u000a    do {\u000a      if (top_node->num_children == 0) {\u000a        return (WNode *)0x0;\u000a      }\u000a      uVar3 = 0;\u000a      while( true ) {\u000a        pWVar1 = (WNode *)top_node->children[uVar3];\u000a        if (pWVar1->id == ids[lVar4]) break;\u000a        uVar2 = uVar3 + 1;\u000a        uVar3 = uVar2 & 0xffffffff;\u000a        if (top_node->num_children <= (uint)uVar2) {\u000a          return (WNode *)0x0;\u000a        }\u000a      }\u000a      lVar4 = lVar4 + 1;\u000a      top_node = pWVar1;\u000a      if (in_EDX <= (uint)lVar4) {\u000a        return pWVar1;\u000a      }\u000a    } while( true );\u000a  }\u000a  return (WNode *)0x0;\u000a}\u000a\u000a
p122
S'TEST RDI,RDI\nJZ 0x00406310\nMOV RAX,qword ptr [RSI]\nCMP RAX,qword ptr [RDI + 0x10]\nJNZ 0x00406313\nCMP EDX,0x2\nJC 0x00406316\nMOV R8D,0x1\nCMP dword ptr [RDI + 0x38],0x0\nJZ 0x0040631d\nMOV R9,qword ptr [RDI + 0x28]\nMOV R10,qword ptr [RSI + R8*0x8]\nXOR ECX,ECX\nNOP dword ptr [RAX]\nMOV RAX,qword ptr [R9 + RCX*0x8]\nCMP qword ptr [RAX + 0x10],R10\nJZ 0x00406304\nINC RCX\nCMP ECX,dword ptr [RDI + 0x38]\nJC 0x004062f0\nJMP 0x0040631a\nINC R8\nCMP R8D,EDX\nMOV RDI,RAX\nJC 0x004062d9\nRET\nXOR EAX,EAX\nRET\nXOR EAX,EAX\nRET\nMOV RAX,RDI\nRET\nXOR EAX,EAX\nRET\nXOR EAX,EAX\nRET\n'
p123
S'48 85 ff\n74 4b\n48 8b 06\n48 3b 47 10\n75 45\n83 fa 02\n72 43\n41 b8 01 00 00 00\n83 7f 38 00\n74 3e\n4c 8b 4f 28\n4e 8b 14 c6\n31 c9\n0f 1f 80 00 00 00 00\n49 8b 04 c9\n4c 39 50 10\n74 0a\n48 ff c1\n3b 4f 38\n72 ee\neb 16\n49 ff c0\n41 39 d0\n48 89 c7\n72 ca\nc3\n31 c0\nc3\n31 c0\nc3\n48 89 f8\nc3\n31 c0\nc3\n31 c0\nc3\n'
p124
S'.text:00000000004062c0\n.text:00000000004062c3\n.text:00000000004062c5\n.text:00000000004062c8\n.text:00000000004062cc\n.text:00000000004062ce\n.text:00000000004062d1\n.text:00000000004062d3\n.text:00000000004062d9\n.text:00000000004062dd\n.text:00000000004062df\n.text:00000000004062e3\n.text:00000000004062e7\n.text:00000000004062e9\n.text:00000000004062f0\n.text:00000000004062f4\n.text:00000000004062f8\n.text:00000000004062fa\n.text:00000000004062fd\n.text:0000000000406300\n.text:0000000000406302\n.text:0000000000406304\n.text:0000000000406307\n.text:000000000040630a\n.text:000000000040630d\n.text:000000000040630f\n.text:0000000000406310\n.text:0000000000406312\n.text:0000000000406313\n.text:0000000000406315\n.text:0000000000406316\n.text:0000000000406319\n.text:000000000040631a\n.text:000000000040631c\n.text:000000000040631d\n.text:000000000040631f\n'
p125
tp126
sS'CreateSetValuesPopup'
p127
(S'\n__stdcall CreateSetValuesPopup()\n'
p128
V\u000avoid CreateSetValuesPopup(undefined8 uParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  undefined8 uVar3;\u000a  Arg args [10];\u000a  undefined8 local_d0;\u000a  char *local_c8;\u000a  undefined8 *local_c0;\u000a  char *local_b8;\u000a  Widget local_b0;\u000a  \u000a  global_screen_data.set_values_popup =\u000a       (Widget)XtCreatePopupShell("setValuesPopup",transientShellWidgetClass,uParm1,0,0);\u000a  uVar1 = XtCreateManagedWidget\u000a                    (&DAT_00409b66,formWidgetClass,global_screen_data.set_values_popup,0,0);\u000a  uVar2 = XtCreateManagedWidget(0x4094c8,labelWidgetClass,uVar1,&local_c8,0);\u000a  local_c8 = "fromVert";\u000a  local_c0 = (undefined8 *)uVar2;\u000a  uVar3 = XtCreateManagedWidget("resourceLabel",labelWidgetClass,uVar1,&local_c8,1);\u000a  local_c8 = "fromVert";\u000a  local_b8 = "fromHoriz";\u000a  local_c0 = (undefined8 *)uVar2;\u000a  local_b0 = (Widget)uVar3;\u000a  global_screen_data.res_text =\u000a       (Widget)XtCreateManagedWidget("resourceText",asciiTextWidgetClass,uVar1,&local_c8,2);\u000a  local_c8 = "fromVert";\u000a  local_c0 = (undefined8 *)global_screen_data.res_text;\u000a  XtCreateManagedWidget("valueLabel",labelWidgetClass,uVar1,&local_c8,1);\u000a  local_c8 = "fromHoriz";\u000a  local_b8 = "fromVert";\u000a  local_b0 = global_screen_data.res_text;\u000a  local_c0 = (undefined8 *)uVar3;\u000a  global_screen_data.val_text =\u000a       (Widget)XtCreateManagedWidget("valueText",asciiTextWidgetClass,uVar1,&local_c8,2);\u000a  local_c8 = "fromVert";\u000a  local_c0 = (undefined8 *)global_screen_data.val_text;\u000a  uVar2 = XtCreateManagedWidget("setValues",commandWidgetClass,uVar1,&local_c8,1);\u000a  local_c8 = "fromVert";\u000a  local_c0 = (undefined8 *)global_screen_data.val_text;\u000a  local_b8 = "fromHoriz";\u000a  local_b0 = (Widget)uVar2;\u000a  uVar3 = XtCreateManagedWidget("cancel",commandWidgetClass,uVar1,&local_c8,2);\u000a  XtAddCallback(uVar2,0x60c408,DoSetValues,0);\u000a  XtAddCallback(uVar3,0x60c408,CancelSetValues,0);\u000a  local_c8 = (char *)0x60c3b4;\u000a  local_c0 = &local_d0;\u000a  XtGetValues(global_screen_data.val_text,&local_c8,1);\u000a  local_c8 = (char *)0x60c3d7;\u000a  local_c0 = (undefined8 *)local_d0;\u000a  XtSetValues(global_screen_data.val_text,&local_c8,1);\u000a  XtSetKeyboardFocus(uVar1,global_screen_data.res_text);\u000a  return;\u000a}\u000a\u000a
p129
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0xb8\nMOV RAX,RDI\nMOV RSI,qword ptr [0x0060dd50]\nMOV EDI,0x409b57\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402730\nMOV qword ptr [0x0060dfe0],RAX\nMOV RSI,qword ptr [0x0060de20]\nMOV EDI,0x409b66\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV R15,RAX\nMOV RSI,qword ptr [0x0060de40]\nLEA R14,[RSP + 0x10]\nMOV EDI,0x4094c8\nXOR R8D,R8D\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV RBX,RAX\nMOV qword ptr [RSP + 0x10],0x409b6b\nMOV qword ptr [RSP + 0x18],RBX\nMOV RSI,qword ptr [0x0060de40]\nMOV EDI,0x409b74\nMOV R8D,0x1\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV R12,RAX\nMOV qword ptr [RSP + 0x10],0x409b6b\nMOV qword ptr [RSP + 0x18],RBX\nMOV qword ptr [RSP + 0x20],0x409b82\nMOV qword ptr [RSP + 0x28],R12\nMOV RSI,qword ptr [0x0060dd20]\nMOV EDI,0x409b8c\nMOV R8D,0x2\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV qword ptr [0x0060dfe8],RAX\nMOV qword ptr [RSP + 0x10],0x409b6b\nMOV qword ptr [RSP + 0x18],RAX\nMOV RSI,qword ptr [0x0060de40]\nMOV EDI,0x409b99\nMOV R8D,0x1\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV qword ptr [RSP + 0x10],0x409b82\nMOV qword ptr [RSP + 0x18],R12\nMOV qword ptr [RSP + 0x20],0x409b6b\nMOV RAX,qword ptr [0x0060dfe8]\nMOV qword ptr [RSP + 0x28],RAX\nMOV RSI,qword ptr [0x0060dd20]\nMOV EDI,0x409ba4\nMOV R8D,0x2\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV qword ptr [0x0060dff0],RAX\nMOV qword ptr [RSP + 0x10],0x409b6b\nMOV qword ptr [RSP + 0x18],RAX\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409bae\nMOV R8D,0x1\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV RBX,RAX\nMOV qword ptr [RSP + 0x10],0x409b6b\nMOV RAX,qword ptr [0x0060dff0]\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x409b82\nMOV qword ptr [RSP + 0x28],RBX\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409543\nMOV R8D,0x2\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00402750\nMOV R12,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405fe0\nXOR ECX,ECX\nMOV RDI,RBX\nCALL 0x00402c70\nMOV ESI,0x60c408\nMOV EDX,0x406100\nXOR ECX,ECX\nMOV RDI,R12\nCALL 0x00402c70\nMOV qword ptr [RSP + 0x10],0x60c3b4\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [0x0060dff0]\nMOV EDX,0x1\nMOV RSI,R14\nCALL 0x004027d0\nMOV qword ptr [RSP + 0x10],0x60c3d7\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [0x0060dff0]\nMOV EDX,0x1\nMOV RSI,R14\nCALL 0x00402790\nMOV RSI,qword ptr [0x0060dfe8]\nMOV RDI,R15\nCALL 0x00402af0\nADD RSP,0xb8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p130
S'41 57\n41 56\n41 54\n53\n48 81 ec b8 00 00 00\n48 89 f8\n48 8b 35 48 81 20 00\nbf 57 9b 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 16 cb ff ff\n48 89 05 bf 83 20 00\n48 8b 35 f8 81 20 00\nbf 66 9b 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 16 cb ff ff\n49 89 c7\n48 8b 35 fc 81 20 00\n4c 8d 74 24 10\nbf c8 94 40 00\n45 31 c0\n4c 89 fa\n4c 89 f1\ne8 f4 ca ff ff\n48 89 c3\n48 c7 44 24 10 6b 9b 40 00\n48 89 5c 24 18\n48 8b 35 cc 81 20 00\nbf 74 9b 40 00\n41 b8 01 00 00 00\n4c 89 fa\n4c 89 f1\ne8 c6 ca ff ff\n49 89 c4\n48 c7 44 24 10 6b 9b 40 00\n48 89 5c 24 18\n48 c7 44 24 20 82 9b 40 00\n4c 89 64 24 28\n48 8b 35 70 80 20 00\nbf 8c 9b 40 00\n41 b8 02 00 00 00\n4c 89 fa\n4c 89 f1\ne8 8a ca ff ff\n48 89 05 1b 83 20 00\n48 c7 44 24 10 6b 9b 40 00\n48 89 44 24 18\n48 8b 35 5e 81 20 00\nbf 99 9b 40 00\n41 b8 01 00 00 00\n4c 89 fa\n4c 89 f1\ne8 58 ca ff ff\n48 c7 44 24 10 82 9b 40 00\n4c 89 64 24 18\n48 c7 44 24 20 6b 9b 40 00\n48 8b 05 d2 82 20 00\n48 89 44 24 28\n48 8b 35 fe 7f 20 00\nbf a4 9b 40 00\n41 b8 02 00 00 00\n4c 89 fa\n4c 89 f1\ne8 18 ca ff ff\n48 89 05 b1 82 20 00\n48 c7 44 24 10 6b 9b 40 00\n48 89 44 24 18\n48 8b 35 6c 80 20 00\nbf ae 9b 40 00\n41 b8 01 00 00 00\n4c 89 fa\n4c 89 f1\ne8 e6 c9 ff ff\n48 89 c3\n48 c7 44 24 10 6b 9b 40 00\n48 8b 05 73 82 20 00\n48 89 44 24 18\n48 c7 44 24 20 82 9b 40 00\n48 89 5c 24 28\n48 8b 35 29 80 20 00\nbf 43 95 40 00\n41 b8 02 00 00 00\n4c 89 fa\n4c 89 f1\ne8 a3 c9 ff ff\n49 89 c4\nbe 08 c4 60 00\nba e0 5f 40 00\n31 c9\n48 89 df\ne8 ac ce ff ff\nbe 08 c4 60 00\nba 00 61 40 00\n31 c9\n4c 89 e7\ne8 98 ce ff ff\n48 c7 44 24 10 b4 c3 60 00\n48 8d 44 24 08\n48 89 44 24 18\n48 8b 3d fe 81 20 00\nba 01 00 00 00\n4c 89 f6\ne8 d1 c9 ff ff\n48 c7 44 24 10 d7 c3 60 00\n48 8b 44 24 08\n48 89 44 24 18\n48 8b 3d d7 81 20 00\nba 01 00 00 00\n4c 89 f6\ne8 6a c9 ff ff\n48 8b 35 bb 81 20 00\n4c 89 ff\ne8 bb cc ff ff\n48 81 c4 b8 00 00 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p131
S'.text:0000000000405bf0\n.text:0000000000405bf2\n.text:0000000000405bf4\n.text:0000000000405bf6\n.text:0000000000405bf7\n.text:0000000000405bfe\n.text:0000000000405c01\n.text:0000000000405c08\n.text:0000000000405c0d\n.text:0000000000405c0f\n.text:0000000000405c12\n.text:0000000000405c15\n.text:0000000000405c1a\n.text:0000000000405c21\n.text:0000000000405c28\n.text:0000000000405c2d\n.text:0000000000405c2f\n.text:0000000000405c32\n.text:0000000000405c35\n.text:0000000000405c3a\n.text:0000000000405c3d\n.text:0000000000405c44\n.text:0000000000405c49\n.text:0000000000405c4e\n.text:0000000000405c51\n.text:0000000000405c54\n.text:0000000000405c57\n.text:0000000000405c5c\n.text:0000000000405c5f\n.text:0000000000405c68\n.text:0000000000405c6d\n.text:0000000000405c74\n.text:0000000000405c79\n.text:0000000000405c7f\n.text:0000000000405c82\n.text:0000000000405c85\n.text:0000000000405c8a\n.text:0000000000405c8d\n.text:0000000000405c96\n.text:0000000000405c9b\n.text:0000000000405ca4\n.text:0000000000405ca9\n.text:0000000000405cb0\n.text:0000000000405cb5\n.text:0000000000405cbb\n.text:0000000000405cbe\n.text:0000000000405cc1\n.text:0000000000405cc6\n.text:0000000000405ccd\n.text:0000000000405cd6\n.text:0000000000405cdb\n.text:0000000000405ce2\n.text:0000000000405ce7\n.text:0000000000405ced\n.text:0000000000405cf0\n.text:0000000000405cf3\n.text:0000000000405cf8\n.text:0000000000405d01\n.text:0000000000405d06\n.text:0000000000405d0f\n.text:0000000000405d16\n.text:0000000000405d1b\n.text:0000000000405d22\n.text:0000000000405d27\n.text:0000000000405d2d\n.text:0000000000405d30\n.text:0000000000405d33\n.text:0000000000405d38\n.text:0000000000405d3f\n.text:0000000000405d48\n.text:0000000000405d4d\n.text:0000000000405d54\n.text:0000000000405d59\n.text:0000000000405d5f\n.text:0000000000405d62\n.text:0000000000405d65\n.text:0000000000405d6a\n.text:0000000000405d6d\n.text:0000000000405d76\n.text:0000000000405d7d\n.text:0000000000405d82\n.text:0000000000405d8b\n.text:0000000000405d90\n.text:0000000000405d97\n.text:0000000000405d9c\n.text:0000000000405da2\n.text:0000000000405da5\n.text:0000000000405da8\n.text:0000000000405dad\n.text:0000000000405db0\n.text:0000000000405db5\n.text:0000000000405dba\n.text:0000000000405dbc\n.text:0000000000405dbf\n.text:0000000000405dc4\n.text:0000000000405dc9\n.text:0000000000405dce\n.text:0000000000405dd0\n.text:0000000000405dd3\n.text:0000000000405dd8\n.text:0000000000405de1\n.text:0000000000405de6\n.text:0000000000405deb\n.text:0000000000405df2\n.text:0000000000405df7\n.text:0000000000405dfa\n.text:0000000000405dff\n.text:0000000000405e08\n.text:0000000000405e0d\n.text:0000000000405e12\n.text:0000000000405e19\n.text:0000000000405e1e\n.text:0000000000405e21\n.text:0000000000405e26\n.text:0000000000405e2d\n.text:0000000000405e30\n.text:0000000000405e35\n.text:0000000000405e3c\n.text:0000000000405e3d\n.text:0000000000405e3f\n.text:0000000000405e41\n.text:0000000000405e43\n'
p132
tp133
sS'DispatchEvent'
p134
(S'\n__stdcall DispatchEvent(Event * event)\n'
p135
V\u000achar * DispatchEvent(Event *event)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *__dest;\u000a  char msg [8192];\u000a  char acStack8200 [8192];\u000a  \u000a  __dest = (char *)0x0;\u000a  switch(global_client.command) {\u000a  case LocalSendWidgetTree:\u000a    BuildVisualTree(global_tree_parent,event);\u000a    __dest = (char *)0x0;\u000a    break;\u000a  case LocalSetValues:\u000a    __dest = PrintSetValuesError(event);\u000a    return __dest;\u000a  case LocalFindChild:\u000a    DisplayChild(event);\u000a    __dest = (char *)0x0;\u000a    break;\u000a  case LocalFlashWidget:\u000a    __dest = HandleFlashWidget(event);\u000a    return __dest;\u000a  default:\u000a    sprintf(acStack8200,"Internal error: Unknown command %d.",(ulong)global_client.command);\u000a    sVar1 = strlen(acStack8200);\u000a    __dest = (char *)XtMalloc((ulong)((int)sVar1 + 1));\u000a    __dest = strcpy(__dest,acStack8200);\u000a    break;\u000a  case LocalGetResources:\u000a    __dest = HandleGetResources(event);\u000a    return __dest;\u000a  case LocalGetValues:\u000a    break;\u000a  }\u000a  return __dest;\u000a}\u000a\u000a
p136
S'PUSH RBX\nSUB RSP,0x2000\nMOV RCX,RDI\nMOV EDX,dword ptr [0x0060df48]\nCMP RDX,0x6\nJA 0x0040400f\nXOR EAX,EAX\nJMP qword ptr [0x4095d0 + RDX*0x8]\nMOV RDI,qword ptr [0x0060dfd8]\nMOV RSI,RCX\nCALL 0x004087a0\nXOR EAX,EAX\nJMP 0x00404042\nMOV RDI,RCX\nADD RSP,0x2000\nPOP RBX\nJMP 0x00405940\nMOV RDI,RCX\nCALL 0x004044b0\nXOR EAX,EAX\nJMP 0x00404042\nMOV RDI,RCX\nADD RSP,0x2000\nPOP RBX\nJMP 0x00404600\nMOV EDX,dword ptr [0x0060df48]\nMOV RBX,RSP\nMOV ESI,0x40981f\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,RBX\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x004026a0\nADD RSP,0x2000\nPOP RBX\nRET\nMOV RDI,RCX\nADD RSP,0x2000\nPOP RBX\nJMP 0x004068e0\n'
p137
S'53\n48 81 ec 00 20 00 00\n48 89 f9\n8b 15 87 9f 20 00\n48 83 fa 06\n77 48\n31 c0\nff 24 d5 d0 95 40 00\n48 8b 3d 01 a0 20 00\n48 89 ce\ne8 c1 47 00 00\n31 c0\neb 5f\n48 89 cf\n48 81 c4 00 20 00 00\n5b\ne9 4d 19 00 00\n48 89 cf\ne8 b5 04 00 00\n31 c0\neb 43\n48 89 cf\n48 81 c4 00 20 00 00\n5b\ne9 f1 05 00 00\n8b 15 33 9f 20 00\n48 89 e3\nbe 1f 98 40 00\n31 c0\n48 89 df\ne8 c9 eb ff ff\n48 89 df\ne8 c1 e7 ff ff\n8d 78 01\ne8 29 e7 ff ff\n48 89 c7\n48 89 de\ne8 5e e6 ff ff\n48 81 c4 00 20 00 00\n5b\nc3\n48 89 cf\n48 81 c4 00 20 00 00\n5b\ne9 85 28 00 00\n'
p138
S'.text:0000000000403fb0\n.text:0000000000403fb1\n.text:0000000000403fb8\n.text:0000000000403fbb\n.text:0000000000403fc1\n.text:0000000000403fc5\n.text:0000000000403fc7\n.text:0000000000403fc9\n.text:0000000000403fd0\n.text:0000000000403fd7\n.text:0000000000403fda\n.text:0000000000403fdf\n.text:0000000000403fe1\n.text:0000000000403fe3\n.text:0000000000403fe6\n.text:0000000000403fed\n.text:0000000000403fee\n.text:0000000000403ff3\n.text:0000000000403ff6\n.text:0000000000403ffb\n.text:0000000000403ffd\n.text:0000000000403fff\n.text:0000000000404002\n.text:0000000000404009\n.text:000000000040400a\n.text:000000000040400f\n.text:0000000000404015\n.text:0000000000404018\n.text:000000000040401d\n.text:000000000040401f\n.text:0000000000404022\n.text:0000000000404027\n.text:000000000040402a\n.text:000000000040402f\n.text:0000000000404032\n.text:0000000000404037\n.text:000000000040403a\n.text:000000000040403d\n.text:0000000000404042\n.text:0000000000404049\n.text:000000000040404a\n.text:000000000040404b\n.text:000000000040404e\n.text:0000000000404055\n.text:0000000000404056\n'
p139
tp140
sS'SetOnlyMatchingWidgets'
p141
(S'\n__stdcall SetOnlyMatchingWidgets(WNode * node, XtPointer info_ptr)\n'
p142
V\u000avoid SetOnlyMatchingWidgets(WNode *node,XtPointer info_ptr)\u000a\u000a{\u000a  Boolean BVar1;\u000a  XrmQuarkList names;\u000a  XrmQuarkList classes;\u000a  Arg args [1];\u000a  char **local_48;\u000a  char **local_40;\u000a  char *local_38;\u000a  XtPointer local_30;\u000a  \u000a  GetNamesAndClasses(node,&local_40,&local_48);\u000a  names = Quarkify(local_40,*(char **)info_ptr);\u000a  classes = Quarkify(local_48,*(char **)((long)info_ptr + 8));\u000a  BVar1 = CheckDatabase(*(XrmDatabase *)((long)info_ptr + 0x20),names,classes);\u000a  local_38 = "state";\u000a  local_30 = (XtPointer)(long)BVar1;\u000a  XtSetValues(node->widget,&local_38,1);\u000a  TreeToggle(node->widget,node,(XtPointer)(long)BVar1);\u000a  XtFree(local_40);\u000a  XtFree(local_48);\u000a  XtFree(names);\u000a  XtFree(classes);\u000a  return;\u000a}\u000a\u000a
p143
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RSI\nMOV R12,RDI\nLEA RSI,[RSP + 0x8]\nMOV RDX,RSP\nCALL 0x00406830\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RBX]\nCALL 0x00406d30\nMOV R14,RAX\nMOV RDI,qword ptr [RSP]\nMOV RSI,qword ptr [RBX + 0x8]\nCALL 0x00406d30\nMOV R15,RAX\nMOV RDI,qword ptr [RBX + 0x20]\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00406d10\nMOV qword ptr [RSP + 0x10],0x409a85\nMOVSX RBX,AL\nMOV qword ptr [RSP + 0x18],RBX\nMOV RDI,qword ptr [R12 + 0x40]\nLEA RSI,[RSP + 0x10]\nMOV EDX,0x1\nCALL 0x00402790\nMOV RDI,qword ptr [R12 + 0x40]\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x00408a50\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402a90\nMOV RDI,qword ptr [RSP]\nCALL 0x00402a90\nMOV RDI,R14\nCALL 0x00402a90\nMOV RDI,R15\nCALL 0x00402a90\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p144
S'41 57\n41 56\n41 54\n53\n48 83 ec 28\n48 89 f3\n49 89 fc\n48 8d 74 24 08\n48 89 e2\ne8 92 0f 00 00\n48 8b 7c 24 08\n48 8b 33\ne8 85 14 00 00\n49 89 c6\n48 8b 3c 24\n48 8b 73 08\ne8 75 14 00 00\n49 89 c7\n48 8b 7b 20\n4c 89 f6\n4c 89 fa\ne8 43 14 00 00\n48 c7 44 24 10 85 9a 40 00\n48 0f be d8\n48 89 5c 24 18\n49 8b 7c 24 40\n48 8d 74 24 10\nba 01 00 00 00\ne8 9d ce ff ff\n49 8b 7c 24 40\n4c 89 e6\n48 89 da\ne8 4d 31 00 00\n48 8b 7c 24 08\ne8 83 d1 ff ff\n48 8b 3c 24\ne8 7a d1 ff ff\n4c 89 f7\ne8 72 d1 ff ff\n4c 89 ff\ne8 6a d1 ff ff\n48 83 c4 28\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p145
S'.text:0000000000405880\n.text:0000000000405882\n.text:0000000000405884\n.text:0000000000405886\n.text:0000000000405887\n.text:000000000040588b\n.text:000000000040588e\n.text:0000000000405891\n.text:0000000000405896\n.text:0000000000405899\n.text:000000000040589e\n.text:00000000004058a3\n.text:00000000004058a6\n.text:00000000004058ab\n.text:00000000004058ae\n.text:00000000004058b2\n.text:00000000004058b6\n.text:00000000004058bb\n.text:00000000004058be\n.text:00000000004058c2\n.text:00000000004058c5\n.text:00000000004058c8\n.text:00000000004058cd\n.text:00000000004058d6\n.text:00000000004058da\n.text:00000000004058df\n.text:00000000004058e4\n.text:00000000004058e9\n.text:00000000004058ee\n.text:00000000004058f3\n.text:00000000004058f8\n.text:00000000004058fb\n.text:00000000004058fe\n.text:0000000000405903\n.text:0000000000405908\n.text:000000000040590d\n.text:0000000000405911\n.text:0000000000405916\n.text:0000000000405919\n.text:000000000040591e\n.text:0000000000405921\n.text:0000000000405926\n.text:000000000040592a\n.text:000000000040592b\n.text:000000000040592d\n.text:000000000040592f\n.text:0000000000405931\n'
p146
tp147
sS'XSetErrorHandler'
p148
(S'\n__stdcall XSetErrorHandler()\n'
p149
V\u000avoid XSetErrorHandler(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetErrorHandler_0060d228)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x0060d228]\n'
p151
S'ff 25 02 a8 20 00\n'
p152
S'.plt:0000000000402a20\n'
p153
tp154
sS'FillNode'
p155
(S'\n__stdcall FillNode(WidgetTreeInfo * info, WNode * node, TreeInfo * tree_info)\n'
p156
V\u000avoid FillNode(WidgetTreeInfo *info,WNode *node,TreeInfo *tree_info)\u000a\u000a{\u000a  node->class = info->class;\u000a  info->class = (char *)0x0;\u000a  node->name = info->name;\u000a  info->name = (char *)0x0;\u000a  node->window = info->window;\u000a  *(TreeInfo **)&node->tree_info = tree_info;\u000a  return;\u000a}\u000a\u000a
p157
S'MOV RAX,qword ptr [RDI + 0x20]\nMOV qword ptr [RSI + 0x8],RAX\nMOV qword ptr [RDI + 0x20],0x0\nMOV RAX,qword ptr [RDI + 0x18]\nMOV qword ptr [RSI],RAX\nMOV qword ptr [RDI + 0x18],0x0\nMOV RAX,qword ptr [RDI + 0x28]\nMOV qword ptr [RSI + 0x18],RAX\nMOV qword ptr [RSI + 0x30],RDX\nRET\n'
p158
S'48 8b 47 20\n48 89 46 08\n48 c7 47 20 00 00 00 00\n48 8b 47 18\n48 89 06\n48 c7 47 18 00 00 00 00\n48 8b 47 28\n48 89 46 18\n48 89 56 30\nc3\n'
p159
S'.text:00000000004093a0\n.text:00000000004093a4\n.text:00000000004093a8\n.text:00000000004093b0\n.text:00000000004093b4\n.text:00000000004093b7\n.text:00000000004093bf\n.text:00000000004093c3\n.text:00000000004093c7\n.text:00000000004093cb\n'
p160
tp161
sS'SetAndCenterTreeNode'
p162
(S'\n__stdcall SetAndCenterTreeNode(WNode * node)\n'
p163
V\u000avoid SetAndCenterTreeNode(WNode *node)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  Arg args [5];\u000a  short local_76;\u000a  short local_74;\u000a  short local_72;\u000a  ushort local_70;\u000a  ushort local_6e;\u000a  ushort local_6c;\u000a  ushort local_6a;\u000a  undefined8 local_68;\u000a  ushort *local_60;\u000a  undefined8 local_58;\u000a  ushort *local_50;\u000a  undefined8 local_48;\u000a  short *local_40;\u000a  undefined8 local_38;\u000a  short *local_30;\u000a  undefined8 local_28;\u000a  short *local_20;\u000a  \u000a  _TreeSelect((TreeInfo *)node->tree_info);\u000a  _TreeSelectNode(node);\u000a  local_68 = 0x60c6e8;\u000a  local_60 = &local_6a;\u000a  local_58 = 0x60c46a;\u000a  local_50 = &local_6c;\u000a  uVar1 = XtParent(node->tree_info->tree_widget);\u000a  XtGetValues(uVar1,&local_68,2);\u000a  local_68 = 0x60c6e8;\u000a  local_60 = &local_6e;\u000a  local_58 = 0x60c46a;\u000a  local_50 = &local_70;\u000a  local_48 = 0x60c3fc;\u000a  local_40 = &local_74;\u000a  local_38 = 0x60c6f5;\u000a  local_30 = &local_76;\u000a  local_28 = 0x60c6f7;\u000a  local_20 = &local_72;\u000a  XtGetValues(node->widget,&local_68,5);\u000a  local_76 = (((local_6a >> 1) - local_76) - (local_6e >> 1)) - local_74;\u000a  local_72 = (((local_6c >> 1) - local_72) - (local_70 >> 1)) - local_74;\u000a  local_68 = 0x60c6f5;\u000a  local_60 = (ushort *)(long)local_76;\u000a  local_58 = 0x60c6f7;\u000a  local_50 = (ushort *)(long)local_72;\u000a  XtSetValues(node->tree_info->tree_widget,&local_68,2);\u000a  return;\u000a}\u000a\u000a
p164
S'PUSH R14\nPUSH RBX\nSUB RSP,0x68\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX + 0x30]\nMOV ESI,0x2\nCALL 0x00408e70\nMOV ESI,0x1\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00408f30\nMOV qword ptr [RSP + 0x10],0x60c6e8\nLEA RAX,[RSP + 0xe]\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x60c46a\nLEA RAX,[RSP + 0xc]\nMOV qword ptr [RSP + 0x28],RAX\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RDI,qword ptr [RAX]\nCALL 0x00402c00\nLEA R14,[RSP + 0x10]\nMOV EDX,0x2\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x004027d0\nMOV qword ptr [RSP + 0x10],0x60c6e8\nLEA RAX,[RSP + 0xa]\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x60c46a\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c3fc\nLEA RAX,[RSP + 0x4]\nMOV qword ptr [RSP + 0x38],RAX\nMOV qword ptr [RSP + 0x40],0x60c6f5\nLEA RAX,[RSP + 0x2]\nMOV qword ptr [RSP + 0x48],RAX\nMOV qword ptr [RSP + 0x50],0x60c6f7\nLEA RAX,[RSP + 0x6]\nMOV qword ptr [RSP + 0x58],RAX\nMOV RDI,qword ptr [RBX + 0x40]\nMOV EDX,0x5\nMOV RSI,R14\nCALL 0x004027d0\nMOVZX EAX,word ptr [RSP + 0xe]\nSHR EAX,1\nMOVZX ECX,word ptr [RSP + 0xa]\nSHR ECX,1\nSUB AX,word ptr [RSP + 0x2]\nSUB EAX,ECX\nSUB AX,word ptr [RSP + 0x4]\nMOV word ptr [RSP + 0x2],AX\nMOVZX EAX,word ptr [RSP + 0xc]\nSHR EAX,1\nMOVZX ECX,word ptr [RSP + 0x8]\nSHR ECX,1\nSUB AX,word ptr [RSP + 0x6]\nSUB EAX,ECX\nSUB AX,word ptr [RSP + 0x4]\nMOV word ptr [RSP + 0x6],AX\nMOV qword ptr [RSP + 0x10],0x60c6f5\nMOVSX RCX,word ptr [RSP + 0x2]\nMOV qword ptr [RSP + 0x18],RCX\nMOV qword ptr [RSP + 0x20],0x60c6f7\nMOVSX RAX,AX\nMOV qword ptr [RSP + 0x28],RAX\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RDI,qword ptr [RAX]\nMOV EDX,0x2\nMOV RSI,R14\nCALL 0x00402790\nADD RSP,0x68\nPOP RBX\nPOP R14\nRET\n'
p165
S'41 56\n53\n48 83 ec 68\n48 89 fb\n48 8b 7b 30\nbe 02 00 00 00\ne8 d8 fc ff ff\nbe 01 00 00 00\n31 d2\n48 89 df\ne8 89 fd ff ff\n48 c7 44 24 10 e8 c6 60 00\n48 8d 44 24 0e\n48 89 44 24 18\n48 c7 44 24 20 6a c4 60 00\n48 8d 44 24 0c\n48 89 44 24 28\n48 8b 43 30\n48 8b 38\ne8 27 9a ff ff\n4c 8d 74 24 10\nba 02 00 00 00\n48 89 c7\n4c 89 f6\ne8 e2 95 ff ff\n48 c7 44 24 10 e8 c6 60 00\n48 8d 44 24 0a\n48 89 44 24 18\n48 c7 44 24 20 6a c4 60 00\n48 8d 44 24 08\n48 89 44 24 28\n48 c7 44 24 30 fc c3 60 00\n48 8d 44 24 04\n48 89 44 24 38\n48 c7 44 24 40 f5 c6 60 00\n48 8d 44 24 02\n48 89 44 24 48\n48 c7 44 24 50 f7 c6 60 00\n48 8d 44 24 06\n48 89 44 24 58\n48 8b 7b 40\nba 05 00 00 00\n4c 89 f6\ne8 72 95 ff ff\n0f b7 44 24 0e\nd1 e8\n0f b7 4c 24 0a\nd1 e9\n66 2b 44 24 02\n29 c8\n66 2b 44 24 04\n66 89 44 24 02\n0f b7 44 24 0c\nd1 e8\n0f b7 4c 24 08\nd1 e9\n66 2b 44 24 06\n29 c8\n66 2b 44 24 04\n66 89 44 24 06\n48 c7 44 24 10 f5 c6 60 00\n48 0f bf 4c 24 02\n48 89 4c 24 18\n48 c7 44 24 20 f7 c6 60 00\n48 0f bf c0\n48 89 44 24 28\n48 8b 43 30\n48 8b 38\nba 02 00 00 00\n4c 89 f6\ne8 ba 94 ff ff\n48 83 c4 68\n5b\n41 5e\nc3\n'
p166
S'.text:0000000000409180\n.text:0000000000409182\n.text:0000000000409183\n.text:0000000000409187\n.text:000000000040918a\n.text:000000000040918e\n.text:0000000000409193\n.text:0000000000409198\n.text:000000000040919d\n.text:000000000040919f\n.text:00000000004091a2\n.text:00000000004091a7\n.text:00000000004091b0\n.text:00000000004091b5\n.text:00000000004091ba\n.text:00000000004091c3\n.text:00000000004091c8\n.text:00000000004091cd\n.text:00000000004091d1\n.text:00000000004091d4\n.text:00000000004091d9\n.text:00000000004091de\n.text:00000000004091e3\n.text:00000000004091e6\n.text:00000000004091e9\n.text:00000000004091ee\n.text:00000000004091f7\n.text:00000000004091fc\n.text:0000000000409201\n.text:000000000040920a\n.text:000000000040920f\n.text:0000000000409214\n.text:000000000040921d\n.text:0000000000409222\n.text:0000000000409227\n.text:0000000000409230\n.text:0000000000409235\n.text:000000000040923a\n.text:0000000000409243\n.text:0000000000409248\n.text:000000000040924d\n.text:0000000000409251\n.text:0000000000409256\n.text:0000000000409259\n.text:000000000040925e\n.text:0000000000409263\n.text:0000000000409265\n.text:000000000040926a\n.text:000000000040926c\n.text:0000000000409271\n.text:0000000000409273\n.text:0000000000409278\n.text:000000000040927d\n.text:0000000000409282\n.text:0000000000409284\n.text:0000000000409289\n.text:000000000040928b\n.text:0000000000409290\n.text:0000000000409292\n.text:0000000000409297\n.text:000000000040929c\n.text:00000000004092a5\n.text:00000000004092ab\n.text:00000000004092b0\n.text:00000000004092b9\n.text:00000000004092bd\n.text:00000000004092c2\n.text:00000000004092c6\n.text:00000000004092c9\n.text:00000000004092ce\n.text:00000000004092d1\n.text:00000000004092d6\n.text:00000000004092da\n.text:00000000004092db\n.text:00000000004092dd\n'
p167
tp168
sS'SetEntriesSensitive'
p169
(S'\n__stdcall SetEntriesSensitive(Widget * entries)\n'
p170
V\u000avoid SetEntriesSensitive(Widget *entries)\u000a\u000a{\u000a  char in_DL;\u000a  ulong uVar1;\u000a  uint in_ESI;\u000a  \u000a  if (0 < (int)in_ESI) {\u000a    uVar1 = (ulong)in_ESI;\u000a    do {\u000a      XtSetSensitive(*entries,(ulong)(uint)(int)in_DL);\u000a      entries = entries + 1;\u000a      uVar1 = uVar1 - 1;\u000a    } while (uVar1 != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p171
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nTEST ESI,ESI\nJLE 0x004075f4\nMOV EBP,ESI\nMOVSX R14D,DL\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX]\nMOV ESI,R14D\nCALL 0x00402960\nADD RBX,0x8\nDEC RBP\nJNZ 0x004075e0\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p172
S'55\n41 56\n53\n48 89 fb\n85 f6\n7e 29\n89 f5\n44 0f be f2\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 3b\n44 89 f6\ne8 75 b3 ff ff\n48 83 c3 08\n48 ff cd\n75 ec\n5b\n41 5e\n5d\nc3\n'
p173
S'.text:00000000004075c0\n.text:00000000004075c1\n.text:00000000004075c3\n.text:00000000004075c4\n.text:00000000004075c7\n.text:00000000004075c9\n.text:00000000004075cb\n.text:00000000004075cd\n.text:00000000004075d1\n.text:00000000004075e0\n.text:00000000004075e3\n.text:00000000004075e6\n.text:00000000004075eb\n.text:00000000004075ef\n.text:00000000004075f2\n.text:00000000004075f4\n.text:00000000004075f5\n.text:00000000004075f7\n.text:00000000004075f8\n'
p174
tp175
sS'XtTranslateCoords'
p176
(S'\n__stdcall XtTranslateCoords()\n'
p177
V\u000avoid XtTranslateCoords(void)\u000a\u000a{\u000a  (*(code *)PTR_XtTranslateCoords_0060d048)();\u000a  return;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x0060d048]\n'
p179
S'ff 25 e2 a9 20 00\n'
p180
S'.plt:0000000000402660\n'
p181
tp182
sS'XtVaCreatePopupShell'
p183
(S'\n__stdcall XtVaCreatePopupShell()\n'
p184
V\u000avoid XtVaCreatePopupShell(void)\u000a\u000a{\u000a  (*(code *)PTR_XtVaCreatePopupShell_0060d070)();\u000a  return;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x0060d070]\n'
p186
S'ff 25 ba a9 20 00\n'
p187
S'.plt:00000000004026b0\n'
p188
tp189
sS'XQueryPointer'
p190
(S'\n__stdcall XQueryPointer()\n'
p191
V\u000avoid XQueryPointer(void)\u000a\u000a{\u000a  (*(code *)PTR_XQueryPointer_0060d200)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x0060d200]\n'
p193
S'ff 25 2a a8 20 00\n'
p194
S'.plt:00000000004029d0\n'
p195
tp196
sS'FindWidget'
p197
(S'\n__stdcall FindWidget(Widget w, XtPointer client_data, XtPointer call_data)\n'
p198
V\u000avoid FindWidget(Widget w,XtPointer client_data,XtPointer call_data)\u000a\u000a{\u000a  Widget w_00;\u000a  \u000a  w_00 = (Widget)XtParent();\u000a  _FindWidget(w_00);\u000a  return;\u000a}\u000a\u000a
p199
S'PUSH RAX\nCALL 0x00402c00\nMOV RDI,RAX\nPOP RAX\nJMP 0x004043e0\n'
p200
S'50\ne8 7a df ff ff\n48 89 c7\n58\ne9 51 f7 ff ff\n'
p201
S'.text:0000000000404c80\n.text:0000000000404c81\n.text:0000000000404c86\n.text:0000000000404c89\n.text:0000000000404c8a\n'
p202
tp203
sS'ObtainResource'
p204
(S'\n__stdcall ObtainResource(XtPointer node_ptr)\n'
p205
V\u000avoid ObtainResource(XtPointer node_ptr)\u000a\u000a{\u000a  Arg args [1];\u000a  undefined8 local_50;\u000a  undefined8 local_48;\u000a  undefined8 *local_40;\u000a  char *local_30;\u000a  char *local_28;\u000a  undefined2 local_20;\u000a  undefined8 local_18;\u000a  undefined8 local_10;\u000a  \u000a  local_30 = GetResourceName(*(ResourceBoxInfo **)(*(long *)((long)node_ptr + 0x48) + 0x18));\u000a  local_28 = "IGNORE_ME";\u000a  local_18 = 0x60df50;\u000a  local_20 = 1;\u000a  local_48 = 0x60c52d;\u000a  local_40 = &local_50;\u000a  XtGetValues(*(undefined8 *)(*(long *)(*(long *)((long)node_ptr + 0x48) + 0x18) + 8),&local_48,1);\u000a  local_10 = 0;\u000a  XrmPutLineResource(&local_10,local_50);\u000a  _XEditResResetStream(0x60df50);\u000a  _XEditResPutString8(0x60df50,local_30);\u000a  _XEditResPut16(0x60df50,1);\u000a  InsertWidgetFromNode(&global_client.stream,(WNode *)node_ptr);\u000a  SetCommand(**(Widget **)((long)node_ptr + 0x30),&DAT_00000006);\u000a  return;\u000a}\u000a\u000a
p206
S'PUSH RBX\nSUB RSP,0x50\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x48]\nMOV RDI,qword ptr [RAX + 0x18]\nCALL 0x004052b0\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x409abf\nMOV qword ptr [RSP + 0x40],0x60df50\nMOV word ptr [RSP + 0x38],0x1\nMOV qword ptr [RSP + 0x10],0x60c52d\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [RBX + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RDI,qword ptr [RAX + 0x8]\nLEA RSI,[RSP + 0x10]\nMOV EDX,0x1\nCALL 0x004027d0\nLEA RDI,[RSP + 0x48]\nMOV qword ptr [RSP + 0x48],0x0\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x00402ca0\nMOV EDI,0x60df50\nCALL 0x00402bb0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EDI,0x60df50\nCALL 0x00402a70\nMOV EDI,0x60df50\nMOV ESI,0x1\nCALL 0x00402c80\nMOV EDI,0x60df50\nMOV RSI,RBX\nCALL 0x00406e40\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RDI,qword ptr [RAX]\nMOV ESI,0x6\nXOR EDX,EDX\nCALL 0x00403310\nADD RSP,0x50\nPOP RBX\nRET\n'
p207
S'53\n48 83 ec 50\n48 89 fb\n48 8b 43 48\n48 8b 78 18\ne8 3b ff ff ff\n48 89 44 24 28\n48 c7 44 24 30 bf 9a 40 00\n48 c7 44 24 40 50 df 60 00\n66 c7 44 24 38 01 00\n48 c7 44 24 10 2d c5 60 00\n48 8d 44 24 08\n48 89 44 24 18\n48 8b 43 48\n48 8b 40 18\n48 8b 78 08\n48 8d 74 24 10\nba 01 00 00 00\ne8 0f d4 ff ff\n48 8d 7c 24 48\n48 c7 44 24 48 00 00 00 00\n48 8b 74 24 08\ne8 c7 d8 ff ff\nbf 50 df 60 00\ne8 cd d7 ff ff\n48 8b 74 24 28\nbf 50 df 60 00\ne8 7e d6 ff ff\nbf 50 df 60 00\nbe 01 00 00 00\ne8 7f d8 ff ff\nbf 50 df 60 00\n48 89 de\ne8 32 1a 00 00\n48 8b 43 30\n48 8b 38\nbe 06 00 00 00\n31 d2\ne8 ef de ff ff\n48 83 c4 50\n5b\nc3\n'
p208
S'.text:0000000000405360\n.text:0000000000405361\n.text:0000000000405365\n.text:0000000000405368\n.text:000000000040536c\n.text:0000000000405370\n.text:0000000000405375\n.text:000000000040537a\n.text:0000000000405383\n.text:000000000040538c\n.text:0000000000405393\n.text:000000000040539c\n.text:00000000004053a1\n.text:00000000004053a6\n.text:00000000004053aa\n.text:00000000004053ae\n.text:00000000004053b2\n.text:00000000004053b7\n.text:00000000004053bc\n.text:00000000004053c1\n.text:00000000004053c6\n.text:00000000004053cf\n.text:00000000004053d4\n.text:00000000004053d9\n.text:00000000004053de\n.text:00000000004053e3\n.text:00000000004053e8\n.text:00000000004053ed\n.text:00000000004053f2\n.text:00000000004053f7\n.text:00000000004053fc\n.text:0000000000405401\n.text:0000000000405406\n.text:0000000000405409\n.text:000000000040540e\n.text:0000000000405412\n.text:0000000000405415\n.text:000000000040541a\n.text:000000000040541c\n.text:0000000000405421\n.text:0000000000405425\n.text:0000000000405426\n'
p209
tp210
sS'XtGetApplicationResources'
p211
(S'\n__stdcall XtGetApplicationResources()\n'
p212
V\u000avoid XtGetApplicationResources(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetApplicationResources_0060d030)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x0060d030]\n'
p214
S'ff 25 fa a9 20 00\n'
p215
S'.plt:0000000000402630\n'
p216
tp217
sS'TellUserAboutMessage'
p218
(S'\n__stdcall TellUserAboutMessage(Widget label)\n'
p219
V\u000avoid TellUserAboutMessage(Widget label)\u000a\u000a{\u000a  undefined *puVar1;\u000a  uint in_ESI;\u000a  char msg [8192];\u000a  char acStack8216 [8200];\u000a  \u000a  if (in_ESI < 6) {\u000a    puVar1 = (&PTR_s__asking_for_widget_tree_00409630)[(long)(int)in_ESI];\u000a  }\u000a  else {\u000a    puVar1 = &DAT_0040a41e;\u000a  }\u000a  sprintf(acStack8216,res_labels[8],puVar1);\u000a  SetMessage(label,acStack8216);\u000a  return;\u000a}\u000a\u000a
p220
S'PUSH R14\nPUSH RBX\nSUB RSP,0x2008\nMOV R14,RDI\nCMP ESI,0x5\nJA 0x004036cf\nMOVSXD RAX,ESI\nMOV RDX,qword ptr [0x409630 + RAX*0x8]\nJMP 0x004036d4\nMOV EDX,0x40a41e\nMOV RSI,qword ptr [0x0060e040]\nMOV RBX,RSP\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00406120\nADD RSP,0x2008\nPOP RBX\nPOP R14\nRET\n'
p221
S'41 56\n53\n48 81 ec 08 20 00 00\n49 89 fe\n83 fe 05\n77 0d\n48 63 c6\n48 8b 14 c5 30 96 40 00\neb 05\nba 1e a4 40 00\n48 8b 35 65 a9 20 00\n48 89 e3\n31 c0\n48 89 df\ne8 08 f5 ff ff\n4c 89 f7\n48 89 de\ne8 2d 2a 00 00\n48 81 c4 08 20 00 00\n5b\n41 5e\nc3\n'
p222
S'.text:00000000004036b0\n.text:00000000004036b2\n.text:00000000004036b3\n.text:00000000004036ba\n.text:00000000004036bd\n.text:00000000004036c0\n.text:00000000004036c2\n.text:00000000004036c5\n.text:00000000004036cd\n.text:00000000004036cf\n.text:00000000004036d4\n.text:00000000004036db\n.text:00000000004036de\n.text:00000000004036e0\n.text:00000000004036e3\n.text:00000000004036e8\n.text:00000000004036eb\n.text:00000000004036ee\n.text:00000000004036f3\n.text:00000000004036fa\n.text:00000000004036fb\n.text:00000000004036fd\n'
p223
tp224
sS'CreateCommandMenu'
p225
(S'\n__stdcall CreateCommandMenu(Widget parent, String toolkit)\n'
p226
V\u000avoid CreateCommandMenu(Widget parent,String toolkit)\u000a\u000a{\u000a  Arg args [1];\u000a  char *local_18;\u000a  String local_10;\u000a  \u000a  if (cmenu == (Widget)0x0) {\u000a    cbutton = (Widget)XtCreateManagedWidget("commands",menuButtonWidgetClass,parent,0,0);\u000a  }\u000a  else {\u000a    XtDestroyWidget();\u000a    CM_set_insensitive = 1;\u000a  }\u000a  local_18 = "menuName";\u000a  local_10 = toolkit;\u000a  XtSetValues(cbutton,&local_18,1);\u000a  cmenu = (Widget)XtCreatePopupShell(toolkit,simpleMenuWidgetClass,cbutton,0,0);\u000a  CM_entries[0] = (Widget)XtCreateManagedWidget("sendTree",smeBSBObjectClass,cmenu,0,0);\u000a  XtAddCallback(CM_entries[0],0x60c408,SendTree,1);\u000a  CM_entries[1] = (Widget)XtCreateManagedWidget("refreshTree",smeBSBObjectClass,cmenu,0,0);\u000a  XtAddCallback(CM_entries[1],0x60c408,SendTree,0);\u000a  CM_entries[2] = (Widget)XtCreateManagedWidget("dumpTreeToFile",smeBSBObjectClass,cmenu,0,0);\u000a  XtAddCallback(CM_entries[2],0x60c408,DumpTreeToFile,0);\u000a  CM_entries[3] = (Widget)XtCreateManagedWidget(&DAT_0040a18e,smeLineObjectClass,cmenu,0,0);\u000a  CM_entries[4] = (Widget)XtCreateManagedWidget("getResourceList",smeBSBObjectClass,cmenu,0,0);\u000a  XtAddCallback(CM_entries[4],0x60c408,GetResourceList,0);\u000a  CM_entries[5] = (Widget)XtCreateManagedWidget("setValues",smeBSBObjectClass,cmenu,0,0);\u000a  XtAddCallback(CM_entries[5],0x60c408,InitSetValues,0);\u000a  CM_entries[6] = (Widget)XtCreateManagedWidget(&DAT_0040a18e,smeLineObjectClass,cmenu,0,0);\u000a  CM_entries[7] = (Widget)XtCreateManagedWidget(&DAT_004094e0,smeBSBObjectClass,cmenu,0,0);\u000a  XtAddCallback(CM_entries[7],0x60c408,Quit,0);\u000a  if (CM_set_insensitive == 0) {\u000a    SetEntriesSensitive(CM_entries + 1);\u000a  }\u000a  return;\u000a}\u000a\u000a
p227
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RSI\nMOV RAX,RDI\nMOV RDI,qword ptr [0x0060df08]\nTEST RDI,RDI\nJZ 0x004070e5\nCALL 0x00402b70\nMOV byte ptr [0x0060df10],0x1\nJMP 0x00407105\nMOV RSI,qword ptr [0x0060de60]\nMOV EDI,0x40a158\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV qword ptr [0x0060df18],RAX\nMOV qword ptr [RSP],0x40a161\nMOV qword ptr [RSP + 0x8],RBX\nMOV RDI,qword ptr [0x0060df18]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nMOV RSI,qword ptr [0x0060dd60]\nMOV RDX,qword ptr [0x0060df18]\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDI,RBX\nCALL 0x00402730\nMOV qword ptr [0x0060df08],RAX\nMOV RSI,qword ptr [0x0060dcc0]\nMOV EDI,0x40a16a\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV qword ptr [0x0060e1b0],RAX\nMOV ESI,0x60c408\nMOV EDX,0x404c30\nMOV ECX,0x1\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060dcc0]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x40a173\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1b8],RAX\nMOV ESI,0x60c408\nMOV EDX,0x404c30\nXOR ECX,ECX\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060dcc0]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x40a17f\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1c0],RAX\nMOV ESI,0x60c408\nMOV EDX,0x404ec0\nXOR ECX,ECX\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060dd80]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x40a18e\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1c8],RAX\nMOV RSI,qword ptr [0x0060dcc0]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x40a193\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1d0],RAX\nMOV ESI,0x60c408\nMOV EDX,0x404df0\nXOR ECX,ECX\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060dcc0]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x409bae\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1d8],RAX\nMOV ESI,0x60c408\nMOV EDX,0x404c90\nXOR ECX,ECX\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060dd80]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x40a18e\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1e0],RAX\nMOV RSI,qword ptr [0x0060dcc0]\nMOV RDX,qword ptr [0x0060df08]\nMOV EDI,0x4094e0\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060e1e8],RAX\nMOV ESI,0x60c408\nMOV EDX,0x404c10\nXOR ECX,ECX\nMOV RDI,RAX\nCALL 0x00402c70\nMOV AL,byte ptr [0x0060df10]\nTEST AL,AL\nJNZ 0x004072fa\nMOV EDI,0x60e1b8\nMOV ESI,0x5\nXOR EDX,EDX\nCALL 0x004075c0\nADD RSP,0x10\nPOP RBX\nRET\n'
p228
S'53\n48 83 ec 10\n48 89 f3\n48 89 f8\n48 8b 3d 36 6e 20 00\n48 85 ff\n74 0e\ne8 94 ba ff ff\nc6 05 2d 6e 20 00 01\neb 20\n48 8b 35 74 6d 20 00\nbf 58 a1 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 52 b6 ff ff\n48 89 05 13 6e 20 00\n48 c7 04 24 61 a1 40 00\n48 89 5c 24 08\n48 8b 3d ff 6d 20 00\n48 89 e6\nba 01 00 00 00\ne8 6a b6 ff ff\n48 8b 35 33 6c 20 00\n48 8b 15 e4 6d 20 00\n31 c9\n45 31 c0\n48 89 df\ne8 ef b5 ff ff\n48 89 05 c0 6d 20 00\n48 8b 35 71 6b 20 00\nbf 6a a1 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 ef b5 ff ff\n48 89 05 48 70 20 00\nbe 08 c4 60 00\nba 30 4c 40 00\nb9 01 00 00 00\n48 89 c7\ne8 f1 ba ff ff\n48 8b 35 3a 6b 20 00\n48 8b 15 7b 6d 20 00\nbf 73 a1 40 00\n31 c9\n45 31 c0\ne8 b4 b5 ff ff\n48 89 05 15 70 20 00\nbe 08 c4 60 00\nba 30 4c 40 00\n31 c9\n48 89 c7\ne8 b9 ba ff ff\n48 8b 35 02 6b 20 00\n48 8b 15 43 6d 20 00\nbf 7f a1 40 00\n31 c9\n45 31 c0\ne8 7c b5 ff ff\n48 89 05 e5 6f 20 00\nbe 08 c4 60 00\nba c0 4e 40 00\n31 c9\n48 89 c7\ne8 81 ba ff ff\n48 8b 35 8a 6b 20 00\n48 8b 15 0b 6d 20 00\nbf 8e a1 40 00\n31 c9\n45 31 c0\ne8 44 b5 ff ff\n48 89 05 b5 6f 20 00\n48 8b 35 a6 6a 20 00\n48 8b 15 e7 6c 20 00\nbf 93 a1 40 00\n31 c9\n45 31 c0\ne8 20 b5 ff ff\n48 89 05 99 6f 20 00\nbe 08 c4 60 00\nba f0 4d 40 00\n31 c9\n48 89 c7\ne8 25 ba ff ff\n48 8b 35 6e 6a 20 00\n48 8b 15 af 6c 20 00\nbf ae 9b 40 00\n31 c9\n45 31 c0\ne8 e8 b4 ff ff\n48 89 05 69 6f 20 00\nbe 08 c4 60 00\nba 90 4c 40 00\n31 c9\n48 89 c7\ne8 ed b9 ff ff\n48 8b 35 f6 6a 20 00\n48 8b 15 77 6c 20 00\nbf 8e a1 40 00\n31 c9\n45 31 c0\ne8 b0 b4 ff ff\n48 89 05 39 6f 20 00\n48 8b 35 12 6a 20 00\n48 8b 15 53 6c 20 00\nbf e0 94 40 00\n31 c9\n45 31 c0\ne8 8c b4 ff ff\n48 89 05 1d 6f 20 00\nbe 08 c4 60 00\nba 10 4c 40 00\n31 c9\n48 89 c7\ne8 91 b9 ff ff\n8a 05 2b 6c 20 00\n84 c0\n75 11\nbf b8 e1 60 00\nbe 05 00 00 00\n31 d2\ne8 c6 02 00 00\n48 83 c4 10\n5b\nc3\n'
p229
S'.text:00000000004070c0\n.text:00000000004070c1\n.text:00000000004070c5\n.text:00000000004070c8\n.text:00000000004070cb\n.text:00000000004070d2\n.text:00000000004070d5\n.text:00000000004070d7\n.text:00000000004070dc\n.text:00000000004070e3\n.text:00000000004070e5\n.text:00000000004070ec\n.text:00000000004070f1\n.text:00000000004070f3\n.text:00000000004070f6\n.text:00000000004070f9\n.text:00000000004070fe\n.text:0000000000407105\n.text:000000000040710d\n.text:0000000000407112\n.text:0000000000407119\n.text:000000000040711c\n.text:0000000000407121\n.text:0000000000407126\n.text:000000000040712d\n.text:0000000000407134\n.text:0000000000407136\n.text:0000000000407139\n.text:000000000040713c\n.text:0000000000407141\n.text:0000000000407148\n.text:000000000040714f\n.text:0000000000407154\n.text:0000000000407156\n.text:0000000000407159\n.text:000000000040715c\n.text:0000000000407161\n.text:0000000000407168\n.text:000000000040716d\n.text:0000000000407172\n.text:0000000000407177\n.text:000000000040717a\n.text:000000000040717f\n.text:0000000000407186\n.text:000000000040718d\n.text:0000000000407192\n.text:0000000000407194\n.text:0000000000407197\n.text:000000000040719c\n.text:00000000004071a3\n.text:00000000004071a8\n.text:00000000004071ad\n.text:00000000004071af\n.text:00000000004071b2\n.text:00000000004071b7\n.text:00000000004071be\n.text:00000000004071c5\n.text:00000000004071ca\n.text:00000000004071cc\n.text:00000000004071cf\n.text:00000000004071d4\n.text:00000000004071db\n.text:00000000004071e0\n.text:00000000004071e5\n.text:00000000004071e7\n.text:00000000004071ea\n.text:00000000004071ef\n.text:00000000004071f6\n.text:00000000004071fd\n.text:0000000000407202\n.text:0000000000407204\n.text:0000000000407207\n.text:000000000040720c\n.text:0000000000407213\n.text:000000000040721a\n.text:0000000000407221\n.text:0000000000407226\n.text:0000000000407228\n.text:000000000040722b\n.text:0000000000407230\n.text:0000000000407237\n.text:000000000040723c\n.text:0000000000407241\n.text:0000000000407243\n.text:0000000000407246\n.text:000000000040724b\n.text:0000000000407252\n.text:0000000000407259\n.text:000000000040725e\n.text:0000000000407260\n.text:0000000000407263\n.text:0000000000407268\n.text:000000000040726f\n.text:0000000000407274\n.text:0000000000407279\n.text:000000000040727b\n.text:000000000040727e\n.text:0000000000407283\n.text:000000000040728a\n.text:0000000000407291\n.text:0000000000407296\n.text:0000000000407298\n.text:000000000040729b\n.text:00000000004072a0\n.text:00000000004072a7\n.text:00000000004072ae\n.text:00000000004072b5\n.text:00000000004072ba\n.text:00000000004072bc\n.text:00000000004072bf\n.text:00000000004072c4\n.text:00000000004072cb\n.text:00000000004072d0\n.text:00000000004072d5\n.text:00000000004072d7\n.text:00000000004072da\n.text:00000000004072df\n.text:00000000004072e5\n.text:00000000004072e7\n.text:00000000004072e9\n.text:00000000004072ee\n.text:00000000004072f3\n.text:00000000004072f5\n.text:00000000004072fa\n.text:00000000004072fe\n.text:00000000004072ff\n'
p230
tp231
sS'Quit'
p232
(S'\n__stdcall Quit(Widget w, XtPointer client_data, XtPointer call_data)\n'
p233
V\u000avoid Quit(Widget w,XtPointer client_data,XtPointer call_data)\u000a\u000a{\u000a  XtWidgetToApplicationContext();\u000a  XtDestroyApplicationContext();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p234
S'PUSH RAX\nCALL 0x004028a0\nMOV RDI,RAX\nCALL 0x004026c0\nXOR EDI,EDI\nCALL 0x00402c10\n'
p235
S'50\ne8 8a dc ff ff\n48 89 c7\ne8 a2 da ff ff\n31 ff\ne8 eb df ff ff\n'
p236
S'.text:0000000000404c10\n.text:0000000000404c11\n.text:0000000000404c16\n.text:0000000000404c19\n.text:0000000000404c1e\n.text:0000000000404c20\n'
p237
tp238
sS'FUN_004025f0'
p239
(S'\n__stdcall FUN_004025f0()\n'
p240
V\u000avoid FUN_004025f0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_0060d010)();\u000a  return;\u000a}\u000a\u000a
p241
S'PUSH qword ptr [0x0060d008]\nJMP qword ptr [0x0060d010]\n'
p242
S'ff 35 12 aa 20 00\nff 25 14 aa 20 00\n'
p243
S'.plt:00000000004025f0\n.plt:00000000004025f6\n'
p244
tp245
sS'SetResourceString'
p246
(S'\n__stdcall SetResourceString(Widget w, XtPointer node_ptr, XtPointer junk)\n'
p247
V\u000avoid SetResourceString(Widget w,XtPointer node_ptr,XtPointer junk)\u000a\u000a{\u000a  ResourceBoxInfo *res_box;\u000a  char *malloc_string;\u000a  Cardinal malloc_size;\u000a  char cVar1;\u000a  int iVar2;\u000a  char *__src;\u000a  size_t sVar3;\u000a  uint uVar4;\u000a  NameInfo *pNVar5;\u000a  Arg args [1];\u000a  char buf [81920];\u000a  undefined8 uStack81976;\u000a  char *pcStack81968;\u000a  undefined2 auStack81960 [40964];\u000a  \u000a  res_box = *(ResourceBoxInfo **)(*(long *)((long)node_ptr + 0x48) + 0x18);\u000a  pNVar5 = res_box->name_info;\u000a  if (((w != (Widget)0x0) && (cVar1 = XtIsSubclass(w,toggleWidgetClass), cVar1 != 0)) &&\u000a     ((char)junk == 0)) {\u000a    return;\u000a  }\u000a  __src = (char *)XawToggleGetCurrent(pNVar5->sep_leader);\u000a  if (__src != (char *)0x0) {\u000a    strcat((char *)auStack81960,__src);\u000a  }\u000a  if (pNVar5->next != (_NameInfo *)0x0) {\u000a    do {\u000a      __src = (char *)XawToggleGetCurrent(pNVar5->name_leader);\u000a      if ((__src != (char *)0x0) && (iVar2 = strcmp(__src,"the any widget"), iVar2 != 0)) {\u000a        strcat((char *)auStack81960,__src);\u000a        __src = (char *)XawToggleGetCurrent(pNVar5->next->sep_leader);\u000a        if (__src == (char *)0x0) {\u000a          sVar3 = strlen((char *)auStack81960);\u000a          *(undefined2 *)((long)auStack81960 + sVar3) = 0x21;\u000a        }\u000a        else {\u000a          strcat((char *)auStack81960,__src);\u000a        }\u000a      }\u000a      pNVar5 = (NameInfo *)pNVar5->next;\u000a    } while (((_NameInfo *)pNVar5)->next != (_NameInfo *)0x0);\u000a  }\u000a  __src = GetResourceName(res_box);\u000a  strcat((char *)auStack81960,__src);\u000a  sVar3 = strlen((char *)auStack81960);\u000a  uVar4 = (int)sVar3 + 2;\u000a  if (malloc_size < uVar4) {\u000a    malloc_string = (char *)XtRealloc(malloc_string,(ulong)uVar4);\u000a    malloc_size = uVar4;\u000a  }\u000a  strcpy(malloc_string,(char *)auStack81960);\u000a  __src = malloc_string;\u000a  sVar3 = strlen(malloc_string);\u000a  *(undefined2 *)(__src + sVar3) = 0x3a;\u000a  uStack81976 = 0x60c52d;\u000a  pcStack81968 = malloc_string;\u000a  XtSetValues(res_box->res_label,&uStack81976,1);\u000a  return;\u000a}\u000a\u000a
p248
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x14018\nMOV RBX,RDX\nMOV RAX,qword ptr [RSI + 0x48]\nMOV R14,qword ptr [RAX + 0x18]\nMOV R12,qword ptr [R14 + 0x28]\nTEST RDI,RDI\nJZ 0x004050aa\nMOV RSI,qword ptr [0x0060dda0]\nCALL 0x004028c0\nTEST AL,AL\nJZ 0x004050aa\nTEST BL,BL\nJZ 0x004051df\nMOV byte ptr [RSP + 0x10],0x0\nMOV RDI,qword ptr [R12 + 0x8]\nCALL 0x004028d0\nTEST RAX,RAX\nJZ 0x004050cb\nLEA RDI,[RSP + 0x10]\nMOV RSI,RAX\nCALL 0x00402be0\nCMP qword ptr [R12],0x0\nJZ 0x0040514b\nLEA R15,[RSP + 0x10]\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [R12 + 0x10]\nCALL 0x004028d0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00405140\nMOV ESI,0x409a8b\nMOV RDI,RBX\nCALL 0x00402940\nTEST EAX,EAX\nJZ 0x00405140\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00402be0\nMOV RAX,qword ptr [R12]\nMOV RDI,qword ptr [RAX + 0x8]\nCALL 0x004028d0\nMOV RDI,R15\nTEST RAX,RAX\nJZ 0x0040512d\nMOV RSI,RAX\nCALL 0x00402be0\nJMP 0x00405140\nCALL 0x004027f0\nMOV word ptr [RSP + RAX*0x1 + 0x10],0x21\nNOP dword ptr [RAX]\nMOV R12,qword ptr [R12]\nCMP qword ptr [R12],0x0\nJNZ 0x004050e0\nMOV RDI,R14\nCALL 0x004052b0\nLEA RBX,[RSP + 0x10]\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x00402be0\nMOV RDI,RBX\nCALL 0x004027f0\nMOV RBX,RAX\nADD EBX,0x2\nCMP EBX,dword ptr [0x0060dee8]\nJBE 0x00405194\nMOV RDI,qword ptr [0x0060dee0]\nMOV ESI,EBX\nCALL 0x004028f0\nMOV qword ptr [0x0060dee0],RAX\nMOV dword ptr [0x0060dee8],EBX\nMOV RDI,qword ptr [0x0060dee0]\nLEA RSI,[RSP + 0x10]\nCALL 0x004026a0\nMOV RBX,qword ptr [0x0060dee0]\nMOV RDI,RBX\nCALL 0x004027f0\nMOV word ptr [RBX + RAX*0x1],0x3a\nMOV qword ptr [RSP],0x60c52d\nMOV RAX,qword ptr [0x0060dee0]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [R14 + 0x8]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nADD RSP,0x14018\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p249
S'41 57\n41 56\n41 54\n53\n48 81 ec 18 40 01 00\n48 89 d3\n48 8b 46 48\n4c 8b 70 18\n4d 8b 66 28\n48 85 ff\n74 18\n48 8b 35 07 8d 20 00\ne8 22 d8 ff ff\n84 c0\n74 08\n84 db\n0f 84 35 01 00 00\nc6 44 24 10 00\n49 8b 7c 24 08\ne8 17 d8 ff ff\n48 85 c0\n74 0d\n48 8d 7c 24 10\n48 89 c6\ne8 15 db ff ff\n49 83 3c 24 00\n74 79\n4c 8d 7c 24 10\n66 0f 1f 84 00 00 00 00 00\n49 8b 7c 24 10\ne8 e6 d7 ff ff\n48 89 c3\n48 85 db\n74 4e\nbe 8b 9a 40 00\n48 89 df\ne8 41 d8 ff ff\n85 c0\n74 3d\n4c 89 ff\n48 89 de\ne8 d2 da ff ff\n49 8b 04 24\n48 8b 78 08\ne8 b5 d7 ff ff\n4c 89 ff\n48 85 c0\n74 0a\n48 89 c6\ne8 b5 da ff ff\neb 13\ne8 be d6 ff ff\n66 c7 44 04 10 21 00\n0f 1f 80 00 00 00 00\n4d 8b 24 24\n49 83 3c 24 00\n75 95\n4c 89 f7\ne8 5d 01 00 00\n48 8d 5c 24 10\n48 89 df\n48 89 c6\ne8 7d da ff ff\n48 89 df\ne8 85 d6 ff ff\n48 89 c3\n83 c3 02\n3b 1d 71 8d 20 00\n76 1b\n48 8b 3d 60 8d 20 00\n89 de\ne8 69 d7 ff ff\n48 89 05 52 8d 20 00\n89 1d 54 8d 20 00\n48 8b 3d 45 8d 20 00\n48 8d 74 24 10\ne8 fb d4 ff ff\n48 8b 1d 34 8d 20 00\n48 89 df\ne8 3c d6 ff ff\n66 c7 04 03 3a 00\n48 c7 04 24 2d c5 60 00\n48 8b 05 17 8d 20 00\n48 89 44 24 08\n49 8b 7e 08\n48 89 e6\nba 01 00 00 00\ne8 b1 d5 ff ff\n48 81 c4 18 40 01 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p250
S'.text:0000000000405070\n.text:0000000000405072\n.text:0000000000405074\n.text:0000000000405076\n.text:0000000000405077\n.text:000000000040507e\n.text:0000000000405081\n.text:0000000000405085\n.text:0000000000405089\n.text:000000000040508d\n.text:0000000000405090\n.text:0000000000405092\n.text:0000000000405099\n.text:000000000040509e\n.text:00000000004050a0\n.text:00000000004050a2\n.text:00000000004050a4\n.text:00000000004050aa\n.text:00000000004050af\n.text:00000000004050b4\n.text:00000000004050b9\n.text:00000000004050bc\n.text:00000000004050be\n.text:00000000004050c3\n.text:00000000004050c6\n.text:00000000004050cb\n.text:00000000004050d0\n.text:00000000004050d2\n.text:00000000004050d7\n.text:00000000004050e0\n.text:00000000004050e5\n.text:00000000004050ea\n.text:00000000004050ed\n.text:00000000004050f0\n.text:00000000004050f2\n.text:00000000004050f7\n.text:00000000004050fa\n.text:00000000004050ff\n.text:0000000000405101\n.text:0000000000405103\n.text:0000000000405106\n.text:0000000000405109\n.text:000000000040510e\n.text:0000000000405112\n.text:0000000000405116\n.text:000000000040511b\n.text:000000000040511e\n.text:0000000000405121\n.text:0000000000405123\n.text:0000000000405126\n.text:000000000040512b\n.text:000000000040512d\n.text:0000000000405132\n.text:0000000000405139\n.text:0000000000405140\n.text:0000000000405144\n.text:0000000000405149\n.text:000000000040514b\n.text:000000000040514e\n.text:0000000000405153\n.text:0000000000405158\n.text:000000000040515b\n.text:000000000040515e\n.text:0000000000405163\n.text:0000000000405166\n.text:000000000040516b\n.text:000000000040516e\n.text:0000000000405171\n.text:0000000000405177\n.text:0000000000405179\n.text:0000000000405180\n.text:0000000000405182\n.text:0000000000405187\n.text:000000000040518e\n.text:0000000000405194\n.text:000000000040519b\n.text:00000000004051a0\n.text:00000000004051a5\n.text:00000000004051ac\n.text:00000000004051af\n.text:00000000004051b4\n.text:00000000004051ba\n.text:00000000004051c2\n.text:00000000004051c9\n.text:00000000004051ce\n.text:00000000004051d2\n.text:00000000004051d5\n.text:00000000004051da\n.text:00000000004051df\n.text:00000000004051e6\n.text:00000000004051e7\n.text:00000000004051e9\n.text:00000000004051eb\n.text:00000000004051ed\n'
p251
tp252
sS'GetFailureMessage'
p253
(S'\n__stdcall GetFailureMessage(ProtocolStream * stream)\n'
p254
V\u000achar * GetFailureMessage(ProtocolStream *stream)\u000a\u000a{\u000a  int iVar1;\u000a  char *in_RAX;\u000a  size_t sVar2;\u000a  char *__dest;\u000a  char *local_8;\u000a  \u000a  local_8 = in_RAX;\u000a  iVar1 = _XEditResGetString8(stream,&local_8);\u000a  if (iVar1 != 0) {\u000a    return local_8;\u000a  }\u000a  if (res_labels[35] != (String)0x0) {\u000a    sVar2 = strlen(res_labels[35]);\u000a    __dest = (char *)XtMalloc((ulong)((int)sVar2 + 1));\u000a    __dest = strcpy(__dest,res_labels[35]);\u000a    return __dest;\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p255
S'PUSH RAX\nMOV RSI,RSP\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00406f23\nMOV RAX,qword ptr [RSP]\nPOP RCX\nRET\nMOV RDI,qword ptr [0x0060e118]\nTEST RDI,RDI\nJZ 0x00406f4d\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RSI,qword ptr [0x0060e118]\nMOV RDI,RAX\nCALL 0x004026a0\nPOP RCX\nRET\nXOR EAX,EAX\nPOP RCX\nRET\n'
p256
S'50\n48 89 e6\ne8 f7 b9 ff ff\n85 c0\n74 06\n48 8b 04 24\n59\nc3\n48 8b 3d ee 71 20 00\n48 85 ff\n74 1e\ne8 bc b8 ff ff\n8d 78 01\ne8 24 b8 ff ff\n48 8b 35 d5 71 20 00\n48 89 c7\ne8 55 b7 ff ff\n59\nc3\n31 c0\n59\nc3\n'
p257
S'.text:0000000000406f10\n.text:0000000000406f11\n.text:0000000000406f14\n.text:0000000000406f19\n.text:0000000000406f1b\n.text:0000000000406f1d\n.text:0000000000406f21\n.text:0000000000406f22\n.text:0000000000406f23\n.text:0000000000406f2a\n.text:0000000000406f2d\n.text:0000000000406f2f\n.text:0000000000406f34\n.text:0000000000406f37\n.text:0000000000406f3c\n.text:0000000000406f43\n.text:0000000000406f46\n.text:0000000000406f4b\n.text:0000000000406f4c\n.text:0000000000406f4d\n.text:0000000000406f4f\n.text:0000000000406f50\n'
p258
tp259
sS'deregister_tm_clones'
p260
(S'\n__stdcall deregister_tm_clones()\n'
p261
V\u000a/* WARNING: Removing unreachable block (ram,0x00402cf5) */\u000a/* WARNING: Removing unreachable block (ram,0x00402cff) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p262
S'MOV EAX,0x60dc9f\nPUSH RBP\nSUB RAX,0x60dc98\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00402d10\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402d10\nPOP RBP\nMOV EDI,0x60dc98\nJMP RAX\nPOP RBP\nRET\n'
p263
S'b8 9f dc 60 00\n55\n48 2d 98 dc 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 98 dc 60 00\nff e0\n5d\nc3\n'
p264
S'.text:0000000000402ce0\n.text:0000000000402ce5\n.text:0000000000402ce6\n.text:0000000000402cec\n.text:0000000000402cf0\n.text:0000000000402cf3\n.text:0000000000402cf5\n.text:0000000000402cfa\n.text:0000000000402cfd\n.text:0000000000402cff\n.text:0000000000402d00\n.text:0000000000402d05\n.text:0000000000402d10\n.text:0000000000402d11\n'
p265
tp266
sS'TreeToggle'
p267
(S'\n__stdcall TreeToggle(Widget w, XtPointer node_ptr, XtPointer state_ptr)\n'
p268
V\u000avoid TreeToggle(Widget w,XtPointer node_ptr,XtPointer state_ptr)\u000a\u000a{\u000a  if ((char)state_ptr != 0) {\u000a    AddNodeToActiveList((WNode *)node_ptr);\u000a    return;\u000a  }\u000a  RemoveNodeFromActiveList((WNode *)node_ptr);\u000a  return;\u000a}\u000a\u000a
p269
S'MOV RDI,RSI\nTEST DL,DL\nJZ 0x00408a59\nJMP 0x00408a60\nJMP 0x00408ab0\n'
p270
S'48 89 f7\n84 d2\n74 02\neb 07\neb 55\n'
p271
S'.text:0000000000408a50\n.text:0000000000408a53\n.text:0000000000408a55\n.text:0000000000408a57\n.text:0000000000408a59\n'
p272
tp273
sS'XDeleteContext'
p274
(S'\n__stdcall XDeleteContext()\n'
p275
V\u000avoid XDeleteContext(void)\u000a\u000a{\u000a  (*(code *)PTR_XDeleteContext_0060d0e8)();\u000a  return;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x0060d0e8]\n'
p277
S'ff 25 42 a9 20 00\n'
p278
S'.plt:00000000004027a0\n'
p279
tp280
sS'XtDestroyApplicationContext'
p281
(S'\n__stdcall XtDestroyApplicationContext()\n'
p282
V\u000avoid XtDestroyApplicationContext(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDestroyApplicationContext_0060d078)();\u000a  return;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x0060d078]\n'
p284
S'ff 25 b2 a9 20 00\n'
p285
S'.plt:00000000004026c0\n'
p286
tp287
sS'FindWidgetFromWindowGivenNode'
p288
(S'\n__stdcall FindWidgetFromWindowGivenNode(WNode * node, Window win)\n'
p289
V\u000aWNode * FindWidgetFromWindowGivenNode(WNode *node,Window win)\u000a\u000a{\u000a  _WNode **pp_Var1;\u000a  WNode *pWVar2;\u000a  ulong uVar3;\u000a  ulong uVar4;\u000a  \u000a  if (node->window != win) {\u000a    if (node->num_children != 0) {\u000a      pp_Var1 = node->children;\u000a      uVar4 = 0;\u000a      do {\u000a        pWVar2 = FindWidgetFromWindowGivenNode((WNode *)pp_Var1[uVar4],win);\u000a        if (pWVar2 != (WNode *)0x0) {\u000a          return pWVar2;\u000a        }\u000a        uVar3 = uVar4 + 1;\u000a        uVar4 = uVar3 & 0xffffffff;\u000a      } while ((uint)uVar3 < node->num_children);\u000a    }\u000a    node = (WNode *)0x0;\u000a  }\u000a  return node;\u000a}\u000a\u000a
p290
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV R12,RDI\nCMP qword ptr [R12 + 0x18],R14\nJZ 0x00406383\nCMP dword ptr [R12 + 0x38],0x0\nJZ 0x0040637b\nMOV R15,qword ptr [R12 + 0x28]\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [R15 + RBX*0x8]\nMOV RSI,R14\nCALL 0x00406330\nTEST RAX,RAX\nJNZ 0x00406380\nINC RBX\nCMP EBX,dword ptr [R12 + 0x38]\nJC 0x00406360\nXOR R12D,R12D\nJMP 0x00406383\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p291
S'41 57\n41 56\n41 54\n53\n50\n49 89 f6\n49 89 fc\n4d 39 74 24 18\n74 3e\n41 83 7c 24 38 00\n74 2e\n4d 8b 7c 24 28\n31 db\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 3c df\n4c 89 f6\ne8 c4 ff ff ff\n48 85 c0\n75 0f\n48 ff c3\n41 3b 5c 24 38\n72 e5\n45 31 e4\neb 03\n49 89 c4\n4c 89 e0\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p292
S'.text:0000000000406330\n.text:0000000000406332\n.text:0000000000406334\n.text:0000000000406336\n.text:0000000000406337\n.text:0000000000406338\n.text:000000000040633b\n.text:000000000040633e\n.text:0000000000406343\n.text:0000000000406345\n.text:000000000040634b\n.text:000000000040634d\n.text:0000000000406352\n.text:0000000000406354\n.text:0000000000406360\n.text:0000000000406364\n.text:0000000000406367\n.text:000000000040636c\n.text:000000000040636f\n.text:0000000000406371\n.text:0000000000406374\n.text:0000000000406379\n.text:000000000040637b\n.text:000000000040637e\n.text:0000000000406380\n.text:0000000000406383\n.text:0000000000406386\n.text:000000000040638a\n.text:000000000040638b\n.text:000000000040638d\n.text:000000000040638f\n.text:0000000000406391\n'
p293
tp294
sS'BuildHeader'
p295
(S'\n__stdcall BuildHeader()\n'
p296
V\u000avoid BuildHeader(void)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  uchar *puVar3;\u000a  ulong uVar4;\u000a  \u000a  puVar3 = global_client.stream.current;\u000a  uVar2 = global_client.stream.alloc;\u000a  uVar1 = global_client.stream.size;\u000a  global_client.stream.current = global_client.stream.real_top;\u000a  global_client.stream.alloc = global_client.stream.size + 0xc;\u000a  _XEditResPut8(0x60df50);\u000a  uVar4 = (ulong)global_client.command;\u000a  switch(global_client.command) {\u000a  case LocalSendWidgetTree:\u000a    if (reset_protocol_level == 0) {\u000a      global_effective_protocol_version = 5;\u000a    }\u000a    reset_protocol_level = 0;\u000a  default:\u000a    uVar4 = 0;\u000a    break;\u000a  case LocalSetValues:\u000a  case LocalFlashWidget:\u000a    break;\u000a  case LocalFindChild:\u000a    uVar4 = 4;\u000a    break;\u000a  case LocalGetResources:\u000a    uVar4 = 2;\u000a    break;\u000a  case LocalGetValues:\u000a    uVar4 = 5;\u000a  }\u000a  _XEditResPut8(0x60df50,uVar4);\u000a  _XEditResPut32(0x60df50,uVar1);\u000a  global_client.stream.size = uVar1;\u000a  global_client.stream.alloc = uVar2;\u000a  global_client.stream.current = puVar3;\u000a  return;\u000a}\u000a\u000a
p297
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x0060df70]\nMOV R15,qword ptr [0x0060df58]\nMOV RBX,qword ptr [0x0060df50]\nMOV RAX,qword ptr [0x0060df60]\nMOV qword ptr [0x0060df70],RAX\nLEA RAX,[RBX + 0xc]\nMOV qword ptr [0x0060df58],RAX\nMOVZX ESI,byte ptr [0x0060df4c]\nMOV EDI,0x60df50\nCALL 0x00402800\nMOV ESI,dword ptr [0x0060df48]\nCMP RSI,0x6\nJA 0x004035a2\nJMP qword ptr [0x409560 + RSI*0x8]\nMOV AL,byte ptr [0x0060deb8]\nTEST AL,AL\nJNZ 0x0040359b\nMOV dword ptr [0x0060d4c0],0x5\nMOV byte ptr [0x0060deb8],0x0\nXOR ESI,ESI\nJMP 0x004035b9\nMOV ESI,0x4\nJMP 0x004035b9\nMOV ESI,0x2\nJMP 0x004035b9\nMOV ESI,0x5\nMOV EDI,0x60df50\nCALL 0x00402800\nMOV EDI,0x60df50\nMOV RSI,RBX\nCALL 0x00402770\nMOV qword ptr [0x0060df58],R15\nMOV qword ptr [0x0060df70],R14\nMOV qword ptr [0x0060df50],RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p298
S'41 57\n41 56\n53\n4c 8b 35 34 aa 20 00\n4c 8b 3d 15 aa 20 00\n48 8b 1d 06 aa 20 00\n48 8b 05 0f aa 20 00\n48 89 05 18 aa 20 00\n48 8d 43 0c\n48 89 05 f5 a9 20 00\n0f b6 35 e2 a9 20 00\nbf 50 df 60 00\ne8 8c f2 ff ff\n8b 35 ce a9 20 00\n48 83 fe 06\n77 22\nff 24 f5 60 95 40 00\n8a 05 2b a9 20 00\n84 c0\n75 0a\nc7 05 25 9f 20 00 05 00 00 00\nc6 05 16 a9 20 00 00\n31 f6\neb 13\nbe 04 00 00 00\neb 0c\nbe 02 00 00 00\neb 05\nbe 05 00 00 00\nbf 50 df 60 00\ne8 3d f2 ff ff\nbf 50 df 60 00\n48 89 de\ne8 a0 f1 ff ff\n4c 89 3d 81 a9 20 00\n4c 89 35 92 a9 20 00\n48 89 1d 6b a9 20 00\n5b\n41 5e\n41 5f\nc3\n'
p299
S'.text:0000000000403530\n.text:0000000000403532\n.text:0000000000403534\n.text:0000000000403535\n.text:000000000040353c\n.text:0000000000403543\n.text:000000000040354a\n.text:0000000000403551\n.text:0000000000403558\n.text:000000000040355c\n.text:0000000000403563\n.text:000000000040356a\n.text:000000000040356f\n.text:0000000000403574\n.text:000000000040357a\n.text:000000000040357e\n.text:0000000000403580\n.text:0000000000403587\n.text:000000000040358d\n.text:000000000040358f\n.text:0000000000403591\n.text:000000000040359b\n.text:00000000004035a2\n.text:00000000004035a4\n.text:00000000004035a6\n.text:00000000004035ab\n.text:00000000004035ad\n.text:00000000004035b2\n.text:00000000004035b4\n.text:00000000004035b9\n.text:00000000004035be\n.text:00000000004035c3\n.text:00000000004035c8\n.text:00000000004035cb\n.text:00000000004035d0\n.text:00000000004035d7\n.text:00000000004035de\n.text:00000000004035e5\n.text:00000000004035e6\n.text:00000000004035e8\n.text:00000000004035ea\n'
p300
tp301
sS'CreateResourceBoxWidgets'
p302
(S'\n__stdcall CreateResourceBoxWidgets(WNode * node, char * * names, char * * cons_names)\n'
p303
V\u000avoid CreateResourceBoxWidgets(WNode *node,char **names,char **cons_names)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  long lVar3;\u000a  ResourceBoxInfo *pRVar4;\u000a  Widget parent;\u000a  undefined8 uVar5;\u000a  Widget parent_00;\u000a  Widget p_Var6;\u000a  undefined8 uVar7;\u000a  \u000a  lVar3 = XtScreen(node->widget);\u000a  uVar1 = *(undefined4 *)(lVar3 + 0x18);\u000a  lVar3 = XtScreen(node->widget);\u000a  uVar2 = *(undefined4 *)(lVar3 + 0x1c);\u000a  pRVar4 = (ResourceBoxInfo *)XtMalloc(0x30);\u000a  node->resources->res_box = pRVar4;\u000a  parent = (Widget)XtVaCreatePopupShell\u000a                             (global_effective_toolkit,transientShellWidgetClass,node->widget,\u000a                              0x60c0ad,(ulong)(ushort)((short)uVar1 - 0x14),0x60c0bf,\u000a                              (ulong)(ushort)((short)uVar2 - 0x28),0);\u000a  pRVar4->shell = parent;\u000a  XtAddCallback(parent,0x60c429,FreeResBox,node);\u000a  parent = (Widget)XtCreateManagedWidget(&DAT_00409ede,panedWidgetClass,pRVar4->shell,0,0);\u000a  uVar5 = XtCreateManagedWidget("mainViewport",viewportWidgetClass,parent,0,0);\u000a  parent_00 = (Widget)XtCreateManagedWidget(&DAT_00409ede,panedWidgetClass,uVar5,0,0);\u000a  p_Var6 = (Widget)XtCreateManagedWidget("resourceLabel",labelWidgetClass,parent_00,0,0);\u000a  pRVar4->res_label = p_Var6;\u000a  CreateResourceNameForm(parent_00,node);\u000a  CreateLists(parent_00,node,names,cons_names);\u000a  CreateValueWidget(parent,node);\u000a  XtSetKeyboardFocus(parent,pRVar4->value_wid);\u000a  uVar5 = XtCreateManagedWidget("commandBox",boxWidgetClass,parent,0,0);\u000a  uVar7 = XtCreateManagedWidget("setFile",commandWidgetClass,uVar5,0,0);\u000a  XtAddCallback(uVar7,0x60c408,SetFile,0);\u000a  uVar7 = XtCreateManagedWidget(&DAT_00409f03,commandWidgetClass,uVar5,0,0);\u000a  XtAddCallback(uVar7,0x60c408,SaveResource,pRVar4);\u000a  uVar7 = XtCreateManagedWidget("apply",commandWidgetClass,uVar5,0,0);\u000a  XtAddCallback(uVar7,0x60c408,ApplyResource,node);\u000a  uVar7 = XtCreateManagedWidget("saveAndApply",commandWidgetClass,uVar5,0,0);\u000a  XtAddCallback(uVar7,0x60c408,SaveResource,pRVar4);\u000a  XtAddCallback(uVar7,0x60c408,ApplyResource,node);\u000a  uVar5 = XtCreateManagedWidget("cancel",commandWidgetClass,uVar5,0,0);\u000a  XtAddCallback(uVar5,0x60c408,PopdownResBox,pRVar4->shell);\u000a  SetToggleGroupLeaders(node);\u000a  PopupOnNode(node,pRVar4->shell);\u000a  return;\u000a}\u000a\u000a
p304
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nMOV RDI,qword ptr [R13 + 0x40]\nCALL 0x00402820\nMOV EBX,0xffec\nADD EBX,dword ptr [RAX + 0x18]\nMOV RDI,qword ptr [R13 + 0x40]\nCALL 0x00402820\nMOV EBP,dword ptr [RAX + 0x1c]\nADD EBP,0xffd8\nMOV EDI,0x30\nCALL 0x00402760\nMOV R14,RAX\nMOV RAX,qword ptr [R13 + 0x48]\nMOV qword ptr [RAX + 0x18],R14\nMOV RDI,qword ptr [0x0060d4c8]\nMOV RSI,qword ptr [0x0060dd50]\nMOV RDX,qword ptr [R13 + 0x40]\nMOVZX R8D,BX\nMOVZX EBP,BP\nMOV ECX,0x60c0ad\nMOV R9D,0x60c0bf\nMOV EAX,0x0\nPUSH 0x0\nPUSH RBP\nCALL 0x004026b0\nADD RSP,0x10\nMOV qword ptr [R14 + 0x10],RAX\nMOV ESI,0x60c429\nMOV EDX,0x407980\nMOV RDI,RAX\nMOV RCX,R13\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060dca8]\nMOV RDX,qword ptr [R14 + 0x10]\nMOV EDI,0x409ede\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV RBX,RAX\nMOV RSI,qword ptr [0x0060dd90]\nMOV EDI,0x409ee3\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV RSI,qword ptr [0x0060dca8]\nMOV EDI,0x409ede\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV RBP,RAX\nMOV RSI,qword ptr [0x0060de40]\nMOV EDI,0x409b74\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBP\nCALL 0x00402750\nMOV qword ptr [R14 + 0x8],RAX\nMOV RDI,RBP\nMOV RSI,R13\nCALL 0x004079d0\nMOV RDI,RBP\nMOV RSI,R13\nMOV RDX,R12\nMOV RCX,R15\nCALL 0x00407f40\nMOV RDI,RBX\nMOV RSI,R13\nCALL 0x004080e0\nMOV RSI,qword ptr [R14]\nMOV RDI,RBX\nCALL 0x00402af0\nMOV RSI,qword ptr [0x0060dde0]\nMOV EDI,0x409ef0\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV RBX,RAX\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409efb\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV ESI,0x60c408\nMOV EDX,0x4055b0\nXOR ECX,ECX\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409f03\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV ESI,0x60c408\nMOV EDX,0x405450\nMOV RDI,RAX\nMOV RCX,R14\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409f08\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV ESI,0x60c408\nMOV EDX,0x405640\nMOV RDI,RAX\nMOV RCX,R13\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409f0e\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV RBP,RAX\nMOV ESI,0x60c408\nMOV EDX,0x405450\nMOV RDI,RBP\nMOV RCX,R14\nCALL 0x00402c70\nMOV ESI,0x60c408\nMOV EDX,0x405640\nMOV RDI,RBP\nMOV RCX,R13\nCALL 0x00402c70\nMOV RSI,qword ptr [0x0060ddc0]\nMOV EDI,0x409543\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV RCX,qword ptr [R14 + 0x10]\nMOV ESI,0x60c408\nMOV EDX,0x405430\nMOV RDI,RAX\nCALL 0x00402c70\nMOV RDI,R13\nCALL 0x00408200\nMOV RSI,qword ptr [R14 + 0x10]\nMOV RDI,R13\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00408270\n'
p305
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d7\n49 89 f4\n49 89 fd\n49 8b 7d 40\ne8 03 b1 ff ff\nbb ec ff 00 00\n03 58 18\n49 8b 7d 40\ne8 f2 b0 ff ff\n8b 68 1c\n81 c5 d8 ff 00 00\nbf 30 00 00 00\ne8 1f b0 ff ff\n49 89 c6\n49 8b 45 48\n4c 89 70 18\n48 8b 3d 75 5d 20 00\n48 8b 35 f6 65 20 00\n49 8b 55 40\n44 0f b7 c3\n0f b7 ed\nb9 ad c0 60 00\n41 b9 bf c0 60 00\nb8 00 00 00 00\n6a 00\n55\ne8 33 af ff ff\n48 83 c4 10\n49 89 46 10\nbe 29 c4 60 00\nba 80 79 40 00\n48 89 c7\n4c 89 e9\ne8 d6 b4 ff ff\n48 8b 35 07 65 20 00\n49 8b 56 10\nbf de 9e 40 00\n31 c9\n45 31 c0\ne8 9c af ff ff\n48 89 c3\n48 8b 35 d2 65 20 00\nbf e3 9e 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 80 af ff ff\n48 8b 35 d1 64 20 00\nbf de 9e 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 67 af ff ff\n48 89 c5\n48 8b 35 4d 66 20 00\nbf 74 9b 40 00\n31 c9\n45 31 c0\n48 89 ea\ne8 4b af ff ff\n49 89 46 08\n48 89 ef\n4c 89 ee\ne8 bc 01 00 00\n48 89 ef\n4c 89 ee\n4c 89 e2\n4c 89 f9\ne8 1b 07 00 00\n48 89 df\n4c 89 ee\ne8 b0 08 00 00\n49 8b 36\n48 89 df\ne8 b5 b2 ff ff\n48 8b 35 9e 65 20 00\nbf f0 9e 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 fc ae ff ff\n48 89 c3\n48 8b 35 62 65 20 00\nbf fb 9e 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 e0 ae ff ff\nbe 08 c4 60 00\nba b0 55 40 00\n31 c9\n48 89 c7\ne8 ec b3 ff ff\n48 8b 35 35 65 20 00\nbf 03 9f 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 b3 ae ff ff\nbe 08 c4 60 00\nba 50 54 40 00\n48 89 c7\n4c 89 f1\ne8 be b3 ff ff\n48 8b 35 07 65 20 00\nbf 08 9f 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 85 ae ff ff\nbe 08 c4 60 00\nba 40 56 40 00\n48 89 c7\n4c 89 e9\ne8 90 b3 ff ff\n48 8b 35 d9 64 20 00\nbf 0e 9f 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 57 ae ff ff\n48 89 c5\nbe 08 c4 60 00\nba 50 54 40 00\n48 89 ef\n4c 89 f1\ne8 5f b3 ff ff\nbe 08 c4 60 00\nba 40 56 40 00\n48 89 ef\n4c 89 e9\ne8 4a b3 ff ff\n48 8b 35 93 64 20 00\nbf 43 95 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 11 ae ff ff\n49 8b 4e 10\nbe 08 c4 60 00\nba 30 54 40 00\n48 89 c7\ne8 1b b3 ff ff\n4c 89 ef\ne8 a3 08 00 00\n49 8b 76 10\n4c 89 ef\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 f9 08 00 00\n'
p306
S'.text:0000000000407700\n.text:0000000000407701\n.text:0000000000407703\n.text:0000000000407705\n.text:0000000000407707\n.text:0000000000407709\n.text:000000000040770a\n.text:000000000040770b\n.text:000000000040770e\n.text:0000000000407711\n.text:0000000000407714\n.text:0000000000407718\n.text:000000000040771d\n.text:0000000000407722\n.text:0000000000407725\n.text:0000000000407729\n.text:000000000040772e\n.text:0000000000407731\n.text:0000000000407737\n.text:000000000040773c\n.text:0000000000407741\n.text:0000000000407744\n.text:0000000000407748\n.text:000000000040774c\n.text:0000000000407753\n.text:000000000040775a\n.text:000000000040775e\n.text:0000000000407762\n.text:0000000000407765\n.text:000000000040776a\n.text:0000000000407770\n.text:0000000000407775\n.text:0000000000407777\n.text:0000000000407778\n.text:000000000040777d\n.text:0000000000407781\n.text:0000000000407785\n.text:000000000040778a\n.text:000000000040778f\n.text:0000000000407792\n.text:0000000000407795\n.text:000000000040779a\n.text:00000000004077a1\n.text:00000000004077a5\n.text:00000000004077aa\n.text:00000000004077ac\n.text:00000000004077af\n.text:00000000004077b4\n.text:00000000004077b7\n.text:00000000004077be\n.text:00000000004077c3\n.text:00000000004077c5\n.text:00000000004077c8\n.text:00000000004077cb\n.text:00000000004077d0\n.text:00000000004077d7\n.text:00000000004077dc\n.text:00000000004077de\n.text:00000000004077e1\n.text:00000000004077e4\n.text:00000000004077e9\n.text:00000000004077ec\n.text:00000000004077f3\n.text:00000000004077f8\n.text:00000000004077fa\n.text:00000000004077fd\n.text:0000000000407800\n.text:0000000000407805\n.text:0000000000407809\n.text:000000000040780c\n.text:000000000040780f\n.text:0000000000407814\n.text:0000000000407817\n.text:000000000040781a\n.text:000000000040781d\n.text:0000000000407820\n.text:0000000000407825\n.text:0000000000407828\n.text:000000000040782b\n.text:0000000000407830\n.text:0000000000407833\n.text:0000000000407836\n.text:000000000040783b\n.text:0000000000407842\n.text:0000000000407847\n.text:0000000000407849\n.text:000000000040784c\n.text:000000000040784f\n.text:0000000000407854\n.text:0000000000407857\n.text:000000000040785e\n.text:0000000000407863\n.text:0000000000407865\n.text:0000000000407868\n.text:000000000040786b\n.text:0000000000407870\n.text:0000000000407875\n.text:000000000040787a\n.text:000000000040787c\n.text:000000000040787f\n.text:0000000000407884\n.text:000000000040788b\n.text:0000000000407890\n.text:0000000000407892\n.text:0000000000407895\n.text:0000000000407898\n.text:000000000040789d\n.text:00000000004078a2\n.text:00000000004078a7\n.text:00000000004078aa\n.text:00000000004078ad\n.text:00000000004078b2\n.text:00000000004078b9\n.text:00000000004078be\n.text:00000000004078c0\n.text:00000000004078c3\n.text:00000000004078c6\n.text:00000000004078cb\n.text:00000000004078d0\n.text:00000000004078d5\n.text:00000000004078d8\n.text:00000000004078db\n.text:00000000004078e0\n.text:00000000004078e7\n.text:00000000004078ec\n.text:00000000004078ee\n.text:00000000004078f1\n.text:00000000004078f4\n.text:00000000004078f9\n.text:00000000004078fc\n.text:0000000000407901\n.text:0000000000407906\n.text:0000000000407909\n.text:000000000040790c\n.text:0000000000407911\n.text:0000000000407916\n.text:000000000040791b\n.text:000000000040791e\n.text:0000000000407921\n.text:0000000000407926\n.text:000000000040792d\n.text:0000000000407932\n.text:0000000000407934\n.text:0000000000407937\n.text:000000000040793a\n.text:000000000040793f\n.text:0000000000407943\n.text:0000000000407948\n.text:000000000040794d\n.text:0000000000407950\n.text:0000000000407955\n.text:0000000000407958\n.text:000000000040795d\n.text:0000000000407961\n.text:0000000000407964\n.text:0000000000407968\n.text:0000000000407969\n.text:000000000040796b\n.text:000000000040796d\n.text:000000000040796f\n.text:0000000000407971\n.text:0000000000407972\n'
p307
tp308
sS'FreeResBox'
p309
(S'\n__stdcall FreeResBox(Widget w, XtPointer ptr, XtPointer junk)\n'
p310
V\u000avoid FreeResBox(Widget w,XtPointer ptr,XtPointer junk)\u000a\u000a{\u000a  undefined8 *puVar1;\u000a  undefined8 *puVar2;\u000a  \u000a  puVar1 = *(undefined8 **)(*(long *)(*(long *)((long)ptr + 0x48) + 0x18) + 0x28);\u000a  global_resource_box_up = 0;\u000a  XtFree();\u000a  *(undefined8 *)(*(long *)((long)ptr + 0x48) + 0x18) = 0;\u000a  while (puVar1 != (undefined8 *)0x0) {\u000a    puVar2 = (undefined8 *)*puVar1;\u000a    XtFree(puVar1);\u000a    puVar1 = puVar2;\u000a  }\u000a  return;\u000a}\u000a\u000a
p311
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RAX,qword ptr [R14 + 0x48]\nMOV RDI,qword ptr [RAX + 0x18]\nMOV RBX,qword ptr [RDI + 0x28]\nMOV byte ptr [0x0060dec0],0x0\nCALL 0x00402a90\nMOV RAX,qword ptr [R14 + 0x48]\nMOV qword ptr [RAX + 0x18],0x0\nTEST RBX,RBX\nJZ 0x004079c3\nMOV R14,qword ptr [RBX]\nMOV RDI,RBX\nCALL 0x00402a90\nTEST R14,R14\nMOV RBX,R14\nJNZ 0x004079b0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p312
S'41 56\n53\n50\n49 89 f6\n49 8b 46 48\n48 8b 78 18\n48 8b 5f 28\nc6 05 26 65 20 00 00\ne8 f1 b0 ff ff\n49 8b 46 48\n48 c7 40 18 00 00 00 00\n48 85 db\n74 13\n4c 8b 33\n48 89 df\ne8 d5 b0 ff ff\n4d 85 f6\n4c 89 f3\n75 ed\n48 83 c4 08\n5b\n41 5e\nc3\n'
p313
S'.text:0000000000407980\n.text:0000000000407982\n.text:0000000000407983\n.text:0000000000407984\n.text:0000000000407987\n.text:000000000040798b\n.text:000000000040798f\n.text:0000000000407993\n.text:000000000040799a\n.text:000000000040799f\n.text:00000000004079a3\n.text:00000000004079ab\n.text:00000000004079ae\n.text:00000000004079b0\n.text:00000000004079b3\n.text:00000000004079b6\n.text:00000000004079bb\n.text:00000000004079be\n.text:00000000004079c1\n.text:00000000004079c3\n.text:00000000004079c7\n.text:00000000004079c8\n.text:00000000004079ca\n'
p314
tp315
sS'_XtCheckSubclassFlag'
p316
(S'\n__stdcall _XtCheckSubclassFlag()\n'
p317
V\u000avoid _XtCheckSubclassFlag(void)\u000a\u000a{\u000a  (*(code *)PTR__XtCheckSubclassFlag_0060d268)();\u000a  return;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x0060d268]\n'
p319
S'ff 25 c2 a7 20 00\n'
p320
S'.plt:0000000000402aa0\n'
p321
tp322
sS'XtParseTranslationTable'
p323
(S'\n__stdcall XtParseTranslationTable()\n'
p324
V\u000avoid XtParseTranslationTable(void)\u000a\u000a{\u000a  (*(code *)PTR_XtParseTranslationTable_0060d280)();\u000a  return;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x0060d280]\n'
p326
S'ff 25 aa a7 20 00\n'
p327
S'.plt:0000000000402ad0\n'
p328
tp329
sS'XtRealizeWidget'
p330
(S'\n__stdcall XtRealizeWidget()\n'
p331
V\u000avoid XtRealizeWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtRealizeWidget_0060d1d8)();\u000a  return;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x0060d1d8]\n'
p333
S'ff 25 52 a8 20 00\n'
p334
S'.plt:0000000000402980\n'
p335
tp336
sS'ActivateWidgetsAndSetResourceString'
p337
(S'\n__stdcall ActivateWidgetsAndSetResourceString(Widget w, XtPointer node_ptr, XtPointer call_data)\n'
p338
V\u000avoid ActivateWidgetsAndSetResourceString(Widget w,XtPointer node_ptr,XtPointer call_data)\u000a\u000a{\u000a  XtPointer junk;\u000a  \u000a  SetResourceString(w,node_ptr,call_data);\u000a  ActivateResourceWidgets(w,node_ptr,junk);\u000a  return;\u000a}\u000a\u000a
p339
S'PUSH RBX\nMOV RBX,RSI\nCALL 0x00405070\nMOV RSI,RBX\nPOP RBX\nJMP 0x004051f0\n'
p340
S'53\n48 89 f3\ne8 d7 fd ff ff\n48 89 de\n5b\ne9 4e ff ff ff\n'
p341
S'.text:0000000000405290\n.text:0000000000405291\n.text:0000000000405294\n.text:0000000000405299\n.text:000000000040529c\n.text:000000000040529d\n'
p342
tp343
sS'fopen'
p344
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p345
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_0060d2e0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x0060d2e0]\n'
p347
S'ff 25 4a a7 20 00\n'
p348
S'.plt:0000000000402b90\n'
p349
tp350
sS'XtDisplay'
p351
(S'\n__stdcall XtDisplay()\n'
p352
V\u000avoid XtDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisplay_0060d270)();\u000a  return;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x0060d270]\n'
p354
S'ff 25 ba a7 20 00\n'
p355
S'.plt:0000000000402ab0\n'
p356
tp357
sS'FlashActiveWidgets'
p358
(S'\n__stdcall FlashActiveWidgets(Widget w, XtPointer junk, XtPointer garbage)\n'
p359
V\u000avoid FlashActiveWidgets(Widget w,XtPointer junk,XtPointer garbage)\u000a\u000a{\u000a  _FlashActiveWidgets(global_tree_info);\u000a  return;\u000a}\u000a\u000a
p360
S'MOV RDI,qword ptr [0x0060dec8]\nJMP 0x00404550\n'
p361
S'48 8b 3d e1 90 20 00\ne9 64 f7 ff ff\n'
p362
S'.text:0000000000404de0\n.text:0000000000404de7\n'
p363
tp364
sS'GetClientValue'
p365
(S'\n__stdcall GetClientValue(Widget w, XtPointer data, Atom * selection, Atom * type, XtPointer value, ulong * length, int * format)\n'
p366
V\u000avoid GetClientValue(Widget w,XtPointer data,Atom *selection,Atom *type,XtPointer value,ulong *length\u000a                   ,int *format)\u000a\u000a{\u000a  char cVar1;\u000a  Event *event;\u000a  char *__dest;\u000a  size_t sVar2;\u000a  undefined4 *str;\u000a  uchar ident;\u000a  char msg [8192];\u000a  char local_2042;\u000a  ResIdent local_2041;\u000a  ProtocolStream local_2040;\u000a  undefined4 local_2018;\u000a  undefined4 uStack8212;\u000a  undefined4 uStack8208;\u000a  undefined4 uStack8204;\u000a  undefined4 local_2008;\u000a  undefined4 uStack8196;\u000a  undefined4 uStack8192;\u000a  undefined4 uStack8188;\u000a  undefined2 local_1ff8;\u000a  undefined local_1ff6;\u000a  \u000a  if (*length == 0) {\u000a    return;\u000a  }\u000a  local_2040.size = 6;\u000a  str = (undefined4 *)res_labels[9];\u000a  local_2040.top = (uchar *)value;\u000a  local_2040.current = (uchar *)value;\u000a  if (*length < 6) goto LAB_0040382f;\u000a  local_2040.top = (uchar *)value;\u000a  local_2040.current = (uchar *)value;\u000a  _XEditResGet8(&local_2040,&local_2041);\u000a  if (global_client.ident != local_2041) {\u000a    if (global_resources.debug != 0) {\u000a      puts("Incorrect ident from client.");\u000a    }\u000a    cVar1 = XtOwnSelection(w,*selection,0,ConvertCommand,LoseSelection,SelectionDone);\u000a    str = (undefined4 *)res_labels[10];\u000a    if (cVar1 != 0) {\u000a      return;\u000a    }\u000a    goto LAB_0040382f;\u000a  }\u000a  _XEditResGet8(&local_2040,&local_2042);\u000a  _XEditResGet32(&local_2040);\u000a  local_2040.top = local_2040.current;\u000a  if (local_2042 == 2) {\u000a    __dest = ProtocolFailure(&local_2040);\u000a    global_effective_protocol_version = global_effective_protocol_version + -1;\u000a    reset_protocol_level = 1;\u000a    SetCommand(w,(char *)0x0);\u000ajoined_r0x0040394e:\u000a    if (__dest != (char *)0x0) {\u000a      SetMessage(global_screen_data.info_label,__dest);\u000a      XtFree(__dest);\u000a      return;\u000a    }\u000a  }\u000a  else {\u000a    if (local_2042 == 1) {\u000a      __dest = GetFailureMessage(&local_2040);\u000a      goto joined_r0x0040394e;\u000a    }\u000a    if (local_2042 == 0) {\u000a      event = BuildEvent(&local_2040);\u000a      if (event == (Event *)0x0) {\u000a        local_2008 = "Unable to unpack protocol request."._16_4_;\u000a        uStack8196 = "Unable to unpack protocol request."._20_4_;\u000a        uStack8192 = "Unable to unpack protocol request."._24_4_;\u000a        uStack8188 = "Unable to unpack protocol request."._28_4_;\u000a        local_2018 = "Unable to unpack protocol request."._0_4_;\u000a        uStack8212 = "Unable to unpack protocol request."._4_4_;\u000a        uStack8208 = "Unable to unpack protocol request."._8_4_;\u000a        uStack8204 = "Unable to unpack protocol request."._12_4_;\u000a        local_1ff6 = 0;\u000a        local_1ff8 = 0x2e74;\u000a        sVar2 = strlen((char *)&local_2018);\u000a        __dest = (char *)XtMalloc((ulong)((int)sVar2 + 1));\u000a        __dest = strcpy(__dest,(char *)&local_2018);\u000a      }\u000a      else {\u000a        __dest = DispatchEvent(event);\u000a        FreeEvent(event);\u000a      }\u000a      goto joined_r0x0040394e;\u000a    }\u000a    sprintf((char *)&local_2018,res_labels[11]);\u000a    SetMessage(global_screen_data.info_label,(char *)&local_2018);\u000a  }\u000a  if (global_tree_info == (TreeInfo *)0x0) {\u000a    return;\u000a  }\u000a  sprintf((char *)&local_2018,res_labels[12],global_tree_info->top_node->name,\u000a          global_tree_info->top_node->class);\u000a  str = &local_2018;\u000aLAB_0040382f:\u000a  SetMessage(global_screen_data.info_label,(char *)str);\u000a  return;\u000a}\u000a\u000a
p367
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x2030\nMOV RBX,RDX\nMOV R15,RDI\nCMP qword ptr [R9],0x0\nJZ 0x00403834\nMOV qword ptr [RSP + 0x20],R8\nMOV qword ptr [RSP + 0x28],R8\nMOV qword ptr [RSP + 0x8],0x6\nCMP qword ptr [R9],0x5\nJA 0x00403841\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e048]\nCALL 0x00406120\nADD RSP,0x2030\nPOP RBX\nPOP R14\nPOP R15\nRET\nLEA RDI,[RSP + 0x8]\nLEA RSI,[RSP + 0x7]\nCALL 0x00402c90\nMOV AL,byte ptr [0x0060df4c]\nCMP AL,byte ptr [RSP + 0x7]\nJNZ 0x004038d9\nLEA RBX,[RSP + 0x8]\nLEA RSI,[RSP + 0x6]\nMOV RDI,RBX\nCALL 0x00402c90\nMOV RDI,RBX\nMOV RSI,RBX\nCALL 0x00402650\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x20],RAX\nMOVZX EDX,byte ptr [RSP + 0x6]\nCMP EDX,0x2\nJZ 0x00403925\nCMP DL,0x1\nJZ 0x00403959\nTEST DL,DL\nJNZ 0x00403965\nLEA RDI,[RSP + 0x8]\nCALL 0x00403a40\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040398c\nMOV RDI,RBX\nCALL 0x00403fb0\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00404060\nTEST R14,R14\nJNZ 0x004039d8\nJMP 0x004039f4\nCMP byte ptr [0x0060df90],0x0\nJZ 0x004038ec\nMOV EDI,0x409850\nCALL 0x004026f0\nMOV RSI,qword ptr [RBX]\nXOR EDX,EDX\nMOV ECX,0x4035f0\nMOV R8D,0x403640\nMOV R9D,0x4036a0\nMOV RDI,R15\nCALL 0x00402870\nTEST AL,AL\nJNZ 0x00403834\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e050]\nJMP 0x0040382f\nLEA RDI,[RSP + 0x8]\nCALL 0x00406f60\nMOV R14,RAX\nDEC dword ptr [0x0060d4c0]\nMOV byte ptr [0x0060deb8],0x1\nXOR ESI,ESI\nXOR EDX,EDX\nMOV RDI,R15\nCALL 0x00403310\nTEST R14,R14\nJNZ 0x004039d8\nJMP 0x004039f4\nLEA RDI,[RSP + 0x8]\nCALL 0x00406f10\nJMP 0x004039d0\nMOV RSI,qword ptr [0x0060e058]\nLEA RBX,[RSP + 0x30]\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nJMP 0x004039f4\nMOVUPS XMM0,xmmword ptr [0x004097fe]\nMOVAPS xmmword ptr [RSP + 0x40],XMM0\nMOVUPS XMM0,xmmword ptr [0x004097ee]\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nMOV byte ptr [RSP + 0x52],0x0\nMOV word ptr [RSP + 0x50],0x2e74\nLEA RBX,[RSP + 0x30]\nMOV RDI,RBX\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x004026a0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004039f4\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,R14\nCALL 0x00406120\nMOV RDI,R14\nCALL 0x00402a90\nJMP 0x00403834\nMOV RAX,qword ptr [0x0060dec8]\nTEST RAX,RAX\nJZ 0x00403834\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [0x0060e060]\nMOV RDX,qword ptr [RAX]\nMOV RCX,qword ptr [RAX + 0x8]\nLEA RBX,[RSP + 0x30]\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nJMP 0x0040382f\n'
p368
S'41 57\n41 56\n53\n48 81 ec 30 20 00 00\n48 89 d3\n49 89 ff\n49 83 39 00\n74 2c\n4c 89 44 24 20\n4c 89 44 24 28\n48 c7 44 24 08 06 00 00 00\n49 83 39 05\n77 20\n48 8b 3d d0 a7 20 00\n48 8b 35 19 a8 20 00\ne8 ec 28 00 00\n48 81 c4 30 20 00 00\n5b\n41 5e\n41 5f\nc3\n48 8d 7c 24 08\n48 8d 74 24 07\ne8 40 f4 ff ff\n8a 05 f6 a6 20 00\n3a 44 24 07\n75 7d\n48 8d 5c 24 08\n48 8d 74 24 06\n48 89 df\ne8 22 f4 ff ff\n48 89 df\n48 89 de\ne8 d7 ed ff ff\n48 8b 44 24 28\n48 89 44 24 20\n0f b6 54 24 06\n83 fa 02\n0f 84 94 00 00 00\n80 fa 01\n0f 84 bf 00 00 00\n84 d2\n0f 85 c3 00 00 00\n48 8d 7c 24 08\ne8 94 01 00 00\n48 89 c3\n48 85 db\n0f 84 d4 00 00 00\n48 89 df\ne8 f0 06 00 00\n49 89 c6\n48 89 df\ne8 95 07 00 00\n4d 85 f6\n0f 85 04 01 00 00\ne9 1b 01 00 00\n80 3d b0 a6 20 00 00\n74 0a\nbf 50 98 40 00\ne8 04 ee ff ff\n48 8b 33\n31 d2\nb9 f0 35 40 00\n41 b8 40 36 40 00\n41 b9 a0 36 40 00\n4c 89 ff\ne8 66 ef ff ff\n84 c0\n0f 85 22 ff ff ff\n48 8b 3d df a6 20 00\n48 8b 35 30 a7 20 00\ne9 0a ff ff ff\n48 8d 7c 24 08\ne8 31 36 00 00\n49 89 c6\nff 0d 88 9b 20 00\nc6 05 79 a5 20 00 01\n31 f6\n31 d2\n4c 89 ff\ne8 c5 f9 ff ff\n4d 85 f6\n0f 85 84 00 00 00\ne9 9b 00 00 00\n48 8d 7c 24 08\ne8 ad 35 00 00\neb 6b\n48 8b 35 ec a6 20 00\n48 8d 5c 24 30\n31 c0\n48 89 df\ne8 75 f2 ff ff\n48 8b 3d 76 a6 20 00\n48 89 de\ne8 96 27 00 00\neb 68\n0f 10 05 6b 5e 00 00\n0f 29 44 24 40\n0f 10 05 4f 5e 00 00\n0f 29 44 24 30\nc6 44 24 52 00\n66 c7 44 24 50 74 2e\n48 8d 5c 24 30\n48 89 df\ne8 33 ee ff ff\n8d 78 01\ne8 9b ed ff ff\n48 89 c7\n48 89 de\ne8 d0 ec ff ff\n49 89 c6\n4d 85 f6\n74 1c\n48 8b 3d 19 a6 20 00\n4c 89 f6\ne8 39 27 00 00\n4c 89 f7\ne8 a1 f0 ff ff\ne9 40 fe ff ff\n48 8b 05 cd a4 20 00\n48 85 c0\n0f 84 30 fe ff ff\n48 8b 40 08\n48 8b 35 51 a6 20 00\n48 8b 10\n48 8b 48 08\n48 8d 5c 24 30\n31 c0\n48 89 df\ne8 cb f1 ff ff\n48 8b 3d cc a5 20 00\n48 89 de\ne9 fb fd ff ff\n'
p369
S'.text:00000000004037f0\n.text:00000000004037f2\n.text:00000000004037f4\n.text:00000000004037f5\n.text:00000000004037fc\n.text:00000000004037ff\n.text:0000000000403802\n.text:0000000000403806\n.text:0000000000403808\n.text:000000000040380d\n.text:0000000000403812\n.text:000000000040381b\n.text:000000000040381f\n.text:0000000000403821\n.text:0000000000403828\n.text:000000000040382f\n.text:0000000000403834\n.text:000000000040383b\n.text:000000000040383c\n.text:000000000040383e\n.text:0000000000403840\n.text:0000000000403841\n.text:0000000000403846\n.text:000000000040384b\n.text:0000000000403850\n.text:0000000000403856\n.text:000000000040385a\n.text:000000000040385c\n.text:0000000000403861\n.text:0000000000403866\n.text:0000000000403869\n.text:000000000040386e\n.text:0000000000403871\n.text:0000000000403874\n.text:0000000000403879\n.text:000000000040387e\n.text:0000000000403883\n.text:0000000000403888\n.text:000000000040388b\n.text:0000000000403891\n.text:0000000000403894\n.text:000000000040389a\n.text:000000000040389c\n.text:00000000004038a2\n.text:00000000004038a7\n.text:00000000004038ac\n.text:00000000004038af\n.text:00000000004038b2\n.text:00000000004038b8\n.text:00000000004038bb\n.text:00000000004038c0\n.text:00000000004038c3\n.text:00000000004038c6\n.text:00000000004038cb\n.text:00000000004038ce\n.text:00000000004038d4\n.text:00000000004038d9\n.text:00000000004038e0\n.text:00000000004038e2\n.text:00000000004038e7\n.text:00000000004038ec\n.text:00000000004038ef\n.text:00000000004038f1\n.text:00000000004038f6\n.text:00000000004038fc\n.text:0000000000403902\n.text:0000000000403905\n.text:000000000040390a\n.text:000000000040390c\n.text:0000000000403912\n.text:0000000000403919\n.text:0000000000403920\n.text:0000000000403925\n.text:000000000040392a\n.text:000000000040392f\n.text:0000000000403932\n.text:0000000000403938\n.text:000000000040393f\n.text:0000000000403941\n.text:0000000000403943\n.text:0000000000403946\n.text:000000000040394b\n.text:000000000040394e\n.text:0000000000403954\n.text:0000000000403959\n.text:000000000040395e\n.text:0000000000403963\n.text:0000000000403965\n.text:000000000040396c\n.text:0000000000403971\n.text:0000000000403973\n.text:0000000000403976\n.text:000000000040397b\n.text:0000000000403982\n.text:0000000000403985\n.text:000000000040398a\n.text:000000000040398c\n.text:0000000000403993\n.text:0000000000403998\n.text:000000000040399f\n.text:00000000004039a4\n.text:00000000004039a9\n.text:00000000004039b0\n.text:00000000004039b5\n.text:00000000004039b8\n.text:00000000004039bd\n.text:00000000004039c0\n.text:00000000004039c5\n.text:00000000004039c8\n.text:00000000004039cb\n.text:00000000004039d0\n.text:00000000004039d3\n.text:00000000004039d6\n.text:00000000004039d8\n.text:00000000004039df\n.text:00000000004039e2\n.text:00000000004039e7\n.text:00000000004039ea\n.text:00000000004039ef\n.text:00000000004039f4\n.text:00000000004039fb\n.text:00000000004039fe\n.text:0000000000403a04\n.text:0000000000403a08\n.text:0000000000403a0f\n.text:0000000000403a12\n.text:0000000000403a16\n.text:0000000000403a1b\n.text:0000000000403a1d\n.text:0000000000403a20\n.text:0000000000403a25\n.text:0000000000403a2c\n.text:0000000000403a2f\n'
p370
tp371
sS'XrmPutLineResource'
p372
(S'\n__stdcall XrmPutLineResource()\n'
p373
V\u000avoid XrmPutLineResource(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmPutLineResource_0060d368)();\u000a  return;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x0060d368]\n'
p375
S'ff 25 c2 a6 20 00\n'
p376
S'.plt:0000000000402ca0\n'
p377
tp378
sS'fprintf'
p379
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p380
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_0060d1d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p381
S'JMP qword ptr [0x0060d1d0]\n'
p382
S'ff 25 5a a8 20 00\n'
p383
S'.plt:0000000000402970\n'
p384
tp385
sS'XGrabPointer'
p386
(S'\n__stdcall XGrabPointer()\n'
p387
V\u000avoid XGrabPointer(void)\u000a\u000a{\u000a  (*(code *)PTR_XGrabPointer_0060d170)();\u000a  return;\u000a}\u000a\u000a
p388
S'JMP qword ptr [0x0060d170]\n'
p389
S'ff 25 ba a8 20 00\n'
p390
S'.plt:00000000004028b0\n'
p391
tp392
sS'_XEditResPut8'
p393
(S'\n__stdcall _XEditResPut8()\n'
p394
V\u000avoid _XEditResPut8(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResPut8_0060d118)();\u000a  return;\u000a}\u000a\u000a
p395
S'JMP qword ptr [0x0060d118]\n'
p396
S'ff 25 12 a9 20 00\n'
p397
S'.plt:0000000000402800\n'
p398
tp399
sS'_TreeSelect'
p400
(S'\n__stdcall _TreeSelect(TreeInfo * tree_info)\n'
p401
V\u000avoid _TreeSelect(TreeInfo *tree_info)\u000a\u000a{\u000a  WNode **ppWVar1;\u000a  WNode **ppWVar2;\u000a  int in_ESI;\u000a  String str;\u000a  ulong uVar3;\u000a  \u000a  str = res_labels[17];\u000a  if (tree_info != (TreeInfo *)0x0) {\u000a    if (in_ESI - 1U < 3) {\u000a      _TreeSelectNode((WNode *)tree_info->top_node);\u000a      return;\u000a    }\u000a    str = res_labels[18];\u000a    if (tree_info->num_nodes != 0) {\u000a      ppWVar1 = CopyActiveNodes(tree_info);\u000a      uVar3 = (ulong)tree_info->num_nodes;\u000a      ppWVar2 = (WNode **)ppWVar1;\u000a      if (tree_info->num_nodes != 0) {\u000a        do {\u000a          _TreeActivateNode(*ppWVar2);\u000a          uVar3 = uVar3 - 1;\u000a          ppWVar2 = ppWVar2 + 1;\u000a        } while (uVar3 != 0);\u000a      }\u000a      XtFree(ppWVar1);\u000a      return;\u000a    }\u000a  }\u000a  SetMessage(global_screen_data.info_label,str);\u000a  return;\u000a}\u000a\u000a
p402
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12D,ESI\nMOV R15,RDI\nTEST R15,R15\nJZ 0x00408ea9\nLEA EAX,[R12 + -0x1]\nCMP EAX,0x2\nJA 0x00408eb9\nMOV RDI,qword ptr [R15 + 0x8]\nMOV EDX,0x1\nMOV ESI,R12D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00408f30\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e088]\nJMP 0x00408f15\nCMP dword ptr [R15 + 0x18],0x0\nJZ 0x00408f07\nMOV RDI,R15\nCALL 0x00409030\nMOV R14,RAX\nMOV R15D,dword ptr [R15 + 0x18]\nTEST R15,R15\nJZ 0x00408ef4\nMOV RBX,R14\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX]\nMOV ESI,R12D\nCALL 0x00409080\nADD RBX,0x8\nDEC R15\nJNZ 0x00408ee0\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402a90\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e090]\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00406120\n'
p403
S'41 57\n41 56\n41 54\n53\n50\n41 89 f4\n49 89 ff\n4d 85 ff\n74 26\n41 8d 44 24 ff\n83 f8 02\n77 2c\n49 8b 7f 08\nba 01 00 00 00\n44 89 e6\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 87 00 00 00\n48 8b 3d 48 51 20 00\n48 8b 35 d1 51 20 00\neb 5c\n41 83 7f 18 00\n74 47\n4c 89 ff\ne8 68 01 00 00\n49 89 c6\n45 8b 7f 18\n4d 85 ff\n74 20\n4c 89 f3\n66 0f 1f 84 00 00 00 00 00\n48 8b 3b\n44 89 e6\ne8 95 01 00 00\n48 83 c3 08\n49 ff cf\n75 ec\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 89 9b ff ff\n48 8b 3d ea 50 20 00\n48 8b 35 7b 51 20 00\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 fb d1 ff ff\n'
p404
S'.text:0000000000408e70\n.text:0000000000408e72\n.text:0000000000408e74\n.text:0000000000408e76\n.text:0000000000408e77\n.text:0000000000408e78\n.text:0000000000408e7b\n.text:0000000000408e7e\n.text:0000000000408e81\n.text:0000000000408e83\n.text:0000000000408e88\n.text:0000000000408e8b\n.text:0000000000408e8d\n.text:0000000000408e91\n.text:0000000000408e96\n.text:0000000000408e99\n.text:0000000000408e9d\n.text:0000000000408e9e\n.text:0000000000408ea0\n.text:0000000000408ea2\n.text:0000000000408ea4\n.text:0000000000408ea9\n.text:0000000000408eb0\n.text:0000000000408eb7\n.text:0000000000408eb9\n.text:0000000000408ebe\n.text:0000000000408ec0\n.text:0000000000408ec3\n.text:0000000000408ec8\n.text:0000000000408ecb\n.text:0000000000408ecf\n.text:0000000000408ed2\n.text:0000000000408ed4\n.text:0000000000408ed7\n.text:0000000000408ee0\n.text:0000000000408ee3\n.text:0000000000408ee6\n.text:0000000000408eeb\n.text:0000000000408eef\n.text:0000000000408ef2\n.text:0000000000408ef4\n.text:0000000000408ef7\n.text:0000000000408efb\n.text:0000000000408efc\n.text:0000000000408efe\n.text:0000000000408f00\n.text:0000000000408f02\n.text:0000000000408f07\n.text:0000000000408f0e\n.text:0000000000408f15\n.text:0000000000408f19\n.text:0000000000408f1a\n.text:0000000000408f1c\n.text:0000000000408f1e\n.text:0000000000408f20\n'
p405
tp406
sS'Syntax'
p407
(S'\n__stdcall Syntax(XtAppContext app_con, char * call)\n'
p408
V\u000avoid Syntax(XtAppContext app_con,char *call)\u000a\u000a{\u000a  XtDestroyApplicationContext();\u000a  fprintf(stderr,"Usage: %s\u005cn",call);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p409
S'PUSH RBX\nMOV RBX,RSI\nCALL 0x004026c0\nMOV RDI,qword ptr [0x0060de80]\nMOV ESI,0x409917\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402970\nMOV EDI,0x1\nCALL 0x00402c10\n'
p410
S'53\n48 89 f3\ne8 07 e3 ff ff\n48 8b 3d c0 9a 20 00\nbe 17 99 40 00\n31 c0\n48 89 da\ne8 a1 e5 ff ff\nbf 01 00 00 00\ne8 37 e8 ff ff\n'
p411
S'.text:00000000004043b0\n.text:00000000004043b1\n.text:00000000004043b4\n.text:00000000004043b9\n.text:00000000004043c0\n.text:00000000004043c5\n.text:00000000004043c7\n.text:00000000004043ca\n.text:00000000004043cf\n.text:00000000004043d4\n'
p412
tp413
sS'MakeBoxLookNice'
p414
(S'\n__stdcall MakeBoxLookNice(Widget dot, Widget star, Widget any, Widget single, Widget name, Widget class)\n'
p415
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000avoid MakeBoxLookNice(Widget dot,Widget star,Widget any,Widget single,Widget name,Widget class)\u000a\u000a{\u000a  int iVar1;\u000a  Widget p_Var2;\u000a  ushort uVar3;\u000a  long lVar4;\u000a  bool bVar5;\u000a  int in_stack_00000008;\u000a  int h_dist [3];\u000a  Arg args [10];\u000a  ushort local_f2;\u000a  ushort local_f0;\u000a  ushort local_ee;\u000a  int local_ec;\u000a  int local_e8;\u000a  int local_e4;\u000a  Widget local_e0;\u000a  undefined2 *local_d8;\u000a  undefined8 *local_d0;\u000a  char *local_c8;\u000a  undefined8 *local_c0;\u000a  Widget local_38;\u000a  \u000a  local_d8 = "horizDistance";\u000a  local_d0 = (undefined8 *)&local_ec;\u000a  local_c8 = (char *)0x60c6e8;\u000a  local_c0 = (undefined8 *)((long)&local_f2 + 2);\u000a  local_e0 = name;\u000a  local_38 = class;\u000a  XtGetValues(dot,&local_d8,2);\u000a  local_d8 = "horizDistance";\u000a  local_d0 = (undefined8 *)((long)&local_ec + 4);\u000a  local_c8 = (char *)0x60c6e8;\u000a  local_c0 = (undefined8 *)&local_f2;\u000a  XtGetValues(star,&local_d8,2);\u000a  local_d8 = "horizDistance";\u000a  local_d0 = (undefined8 *)(&local_ec + 1);\u000a  local_c8 = (char *)0x60c6e8;\u000a  local_c0 = (undefined8 *)((long)&local_f2 + 4);\u000a  XtGetValues(any,&local_d8,2);\u000a  uVar3 = local_f2;\u000a  if (local_f2 < local_f0) {\u000a    uVar3 = local_f0;\u000a  }\u000a  lVar4 = 0;\u000a  do {\u000a    iVar1 = *(int *)((long)&local_ec + (lVar4 + 1) * 4);\u000a    if (local_ec < iVar1) {\u000a      local_ec = iVar1;\u000a    }\u000a    lVar4 = lVar4 + 1;\u000a  } while (lVar4 != 2);\u000a  local_d0 = (undefined8 *)(long)local_ec;\u000a  local_d8 = "horizDistance";\u000a  XtSetValues(any,&local_d8,1);\u000a  local_c8 = (char *)0x60c6e8;\u000a  local_c0 = (undefined8 *)(ulong)uVar3;\u000a  XtSetValues(star,&local_d8,2);\u000a  XtSetValues(dot,&local_d8,2);\u000a  local_d8 = (char *)0x60c6e8;\u000a  local_d0 = (undefined8 *)((long)&local_f2 + 2);\u000a  local_c8 = "horizDistance";\u000a  local_c0 = (undefined8 *)&local_ec;\u000a  XtGetValues(local_e0,&local_d8,2);\u000a  p_Var2 = local_38;\u000a  local_d8 = (char *)0x60c6e8;\u000a  local_d0 = (undefined8 *)&local_f2;\u000a  local_c8 = "horizDistance";\u000a  local_c0 = (undefined8 *)((long)&local_ec + 4U);\u000a  XtGetValues(local_38,&local_d8,2);\u000a  if (local_f0 < local_f2) {\u000a    local_f0 = local_f2;\u000a  }\u000a  if (local_ec < local_e8) {\u000a    local_ec = local_e8;\u000a  }\u000a  local_d8 = (char *)0x60c6e8;\u000a  local_d0 = (undefined8 *)&local_f2;\u000a  local_c8 = "horizDistance";\u000a  local_c0 = (undefined8 *)((long)&local_ec + 4U);\u000a  XtGetValues(single,&local_d8,2);\u000a  if (local_f2 < local_f0) {\u000a    local_f2 = local_f0;\u000a  }\u000a  if (local_ec < local_e8) {\u000a    local_ec = local_e8;\u000a  }\u000a  if (local_f2 < local_ee) {\u000a    local_f2 = local_ee;\u000a  }\u000a  local_ee = (short)local_ec + uVar3 + local_f2;\u000a  bVar5 = in_stack_00000008 < 0;\u000a  if (bVar5) {\u000a    local_ee = local_ee - (short)((uint)uVar3 & 1);\u000a    local_d8 = "horizDistance";\u000a    local_d0 = (undefined8 *)(long)(int)((uint)(uVar3 >> 1) + ((uint)uVar3 & 1) + local_e4);\u000a  }\u000a  (&local_d8)[(ulong)bVar5 * 2] = (undefined2 *)0x60c6e8;\u000a  *(undefined6 **)(&local_d0 + (ulong)bVar5 * 2) = (undefined6 *)(ulong)local_ee;\u000a  XtSetValues(any,&local_d8,(ulong)((uint)bVar5 + 1));\u000a  local_d8 = (char *)0x60c6e8;\u000a  local_c8 = "horizDistance";\u000a  local_c0 = (undefined8 *)(long)local_ec;\u000a  local_d0 = (undefined8 *)(ulong)local_f2;\u000a  XtSetValues(local_e0,&local_d8,2);\u000a  XtSetValues(p_Var2,&local_d8,2);\u000a  XtSetValues(single,&local_d8,2);\u000a  return;\u000a}\u000a\u000a
p416
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xc8\nMOV qword ptr [0xc0 + RSP],R9\nMOV qword ptr [RSP + 0x18],R8\nMOV R12,RCX\nMOV R13,RDX\nMOV RBP,RSI\nMOV R15,RDI\nMOV qword ptr [RSP + 0x20],0x40a2a2\nLEA RAX,[RSP + 0xc]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c6e8\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x38],RAX\nLEA RBX,[RSP + 0x20]\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x004027d0\nMOV qword ptr [RSP + 0x20],0x40a2a2\nLEA RAX,[RSP + 0x10]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c6e8\nLEA RAX,[RSP + 0x6]\nMOV qword ptr [RSP + 0x38],RAX\nMOV EDX,0x2\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x004027d0\nMOV qword ptr [RSP + 0x20],0x40a2a2\nLEA RAX,[RSP + 0x14]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c6e8\nLEA RAX,[RSP + 0xa]\nMOV qword ptr [RSP + 0x38],RAX\nMOV EDX,0x2\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x004027d0\nMOVZX ECX,word ptr [RSP + 0x8]\nMOVZX EAX,word ptr [RSP + 0x6]\nCMP CX,AX\nCMOVA AX,CX\nXOR ECX,ECX\nMOV EDX,dword ptr [RSP + 0xc]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV ESI,dword ptr [RSP + RCX*0x4 + 0x10]\nCMP ESI,EDX\nJLE 0x0040856c\nMOV dword ptr [RSP + 0xc],ESI\nMOV EDX,dword ptr [RSP + 0xc]\nINC RCX\nCMP RCX,0x2\nJNZ 0x00408560\nMOVSXD RCX,EDX\nMOVZX EBX,AX\nMOV qword ptr [RSP + 0x20],0x40a2a2\nMOV qword ptr [RSP + 0x28],RCX\nLEA R14,[RSP + 0x20]\nMOV EDX,0x1\nMOV RDI,R13\nMOV RSI,R14\nCALL 0x00402790\nMOV qword ptr [RSP + 0x30],0x60c6e8\nMOV qword ptr [RSP + 0x38],RBX\nMOV EDX,0x2\nMOV RDI,RBP\nMOV RSI,R14\nCALL 0x00402790\nMOV EDX,0x2\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00402790\nMOV qword ptr [RSP + 0x20],0x60c6e8\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x40a2a2\nLEA RAX,[RSP + 0xc]\nMOV qword ptr [RSP + 0x38],RAX\nMOV EDX,0x2\nMOV RDI,qword ptr [RSP + 0x18]\nMOV RSI,R14\nCALL 0x004027d0\nMOV qword ptr [RSP + 0x20],0x60c6e8\nLEA RAX,[RSP + 0x6]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x40a2a2\nLEA RBP,[RSP + 0x10]\nMOV qword ptr [RSP + 0x38],RBP\nMOV EDX,0x2\nMOV R15,qword ptr [0xc0 + RSP]\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x004027d0\nMOVZX EAX,word ptr [RSP + 0x6]\nCMP AX,word ptr [RSP + 0x8]\nJBE 0x00408657\nMOV word ptr [RSP + 0x8],AX\nMOV EAX,dword ptr [RSP + 0x10]\nCMP EAX,dword ptr [RSP + 0xc]\nJLE 0x00408665\nMOV dword ptr [RSP + 0xc],EAX\nMOV qword ptr [RSP + 0x20],0x60c6e8\nLEA RAX,[RSP + 0x6]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x40a2a2\nMOV qword ptr [RSP + 0x38],RBP\nLEA RSI,[RSP + 0x20]\nMOV EDX,0x2\nMOV RDI,R12\nCALL 0x004027d0\nMOVZX EAX,word ptr [RSP + 0x8]\nMOVZX ECX,word ptr [RSP + 0x6]\nCMP AX,CX\nCMOVA CX,AX\nMOV EAX,dword ptr [RSP + 0x10]\nCMP EAX,dword ptr [RSP + 0xc]\nJLE 0x004086b7\nMOV dword ptr [RSP + 0xc],EAX\nMOVZX EAX,word ptr [RSP + 0xa]\nCMP AX,CX\nCMOVA CX,AX\nMOV EAX,dword ptr [RSP + 0xc]\nADD EAX,EBX\nMOVZX EBP,CX\nADD EAX,EBP\nMOV word ptr [RSP + 0xa],AX\nXOR EDX,EDX\nCMP dword ptr [0x100 + RSP],0x0\nJNS 0x00408709\nMOV ECX,EBX\nAND ECX,0x1\nSUB EAX,ECX\nMOV word ptr [RSP + 0xa],AX\nMOV qword ptr [RSP + 0x20],0x40a2a2\nSHR EBX,1\nADD EBX,ECX\nADD EBX,dword ptr [RSP + 0x14]\nMOVSXD RAX,EBX\nMOV qword ptr [RSP + 0x28],RAX\nMOV EDX,0x1\nMOV RAX,RDX\nSHL RAX,0x4\nMOV qword ptr [RSP + RAX*0x1 + 0x20],0x60c6e8\nMOVZX ECX,word ptr [RSP + 0xa]\nMOV qword ptr [RSP + RAX*0x1 + 0x28],RCX\nINC EDX\nLEA RBX,[RSP + 0x20]\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x00402790\nMOV qword ptr [RSP + 0x20],0x60c6e8\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x30],0x40a2a2\nMOVSXD RAX,dword ptr [RSP + 0xc]\nMOV qword ptr [RSP + 0x38],RAX\nMOV EDX,0x2\nMOV RDI,qword ptr [RSP + 0x18]\nMOV RSI,RBX\nCALL 0x00402790\nMOV EDX,0x2\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00402790\nMOV EDX,0x2\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x00402790\nADD RSP,0xc8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p417
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec c8 00 00 00\n4c 89 8c 24 c0 00 00 00\n4c 89 44 24 18\n49 89 cc\n49 89 d5\n48 89 f5\n49 89 ff\n48 c7 44 24 20 a2 a2 40 00\n48 8d 44 24 0c\n48 89 44 24 28\n48 c7 44 24 30 e8 c6 60 00\n48 8d 44 24 08\n48 89 44 24 38\n48 8d 5c 24 20\nba 02 00 00 00\n48 89 de\ne8 fe a2 ff ff\n48 c7 44 24 20 a2 a2 40 00\n48 8d 44 24 10\n48 89 44 24 28\n48 c7 44 24 30 e8 c6 60 00\n48 8d 44 24 06\n48 89 44 24 38\nba 02 00 00 00\n48 89 ef\n48 89 de\ne8 c8 a2 ff ff\n48 c7 44 24 20 a2 a2 40 00\n48 8d 44 24 14\n48 89 44 24 28\n48 c7 44 24 30 e8 c6 60 00\n48 8d 44 24 0a\n48 89 44 24 38\nba 02 00 00 00\n4c 89 ef\n48 89 de\ne8 92 a2 ff ff\n0f b7 4c 24 08\n0f b7 44 24 06\n66 39 c1\n66 0f 47 c1\n31 c9\n8b 54 24 0c\n66 66 2e 0f 1f 84 00 00 00 00 00\n8b 74 8c 10\n39 d6\n7e 04\n89 74 24 0c\n8b 54 24 0c\n48 ff c1\n48 83 f9 02\n75 e7\n48 63 ca\n0f b7 d8\n48 c7 44 24 20 a2 a2 40 00\n48 89 4c 24 28\n4c 8d 74 24 20\nba 01 00 00 00\n4c 89 ef\n4c 89 f6\ne8 ee a1 ff ff\n48 c7 44 24 30 e8 c6 60 00\n48 89 5c 24 38\nba 02 00 00 00\n48 89 ef\n4c 89 f6\ne8 d0 a1 ff ff\nba 02 00 00 00\n4c 89 ff\n4c 89 f6\ne8 c0 a1 ff ff\n48 c7 44 24 20 e8 c6 60 00\n48 8d 44 24 08\n48 89 44 24 28\n48 c7 44 24 30 a2 a2 40 00\n48 8d 44 24 0c\n48 89 44 24 38\nba 02 00 00 00\n48 8b 7c 24 18\n4c 89 f6\ne8 c8 a1 ff ff\n48 c7 44 24 20 e8 c6 60 00\n48 8d 44 24 06\n48 89 44 24 28\n48 c7 44 24 30 a2 a2 40 00\n48 8d 6c 24 10\n48 89 6c 24 38\nba 02 00 00 00\n4c 8b bc 24 c0 00 00 00\n4c 89 ff\n4c 89 f6\ne8 8a a1 ff ff\n0f b7 44 24 06\n66 3b 44 24 08\n76 05\n66 89 44 24 08\n8b 44 24 10\n3b 44 24 0c\n7e 04\n89 44 24 0c\n48 c7 44 24 20 e8 c6 60 00\n48 8d 44 24 06\n48 89 44 24 28\n48 c7 44 24 30 a2 a2 40 00\n48 89 6c 24 38\n48 8d 74 24 20\nba 02 00 00 00\n4c 89 e7\ne8 38 a1 ff ff\n0f b7 44 24 08\n0f b7 4c 24 06\n66 39 c8\n66 0f 47 c8\n8b 44 24 10\n3b 44 24 0c\n7e 04\n89 44 24 0c\n0f b7 44 24 0a\n66 39 c8\n66 0f 47 c8\n8b 44 24 0c\n01 d8\n0f b7 e9\n01 e8\n66 89 44 24 0a\n31 d2\n83 bc 24 00 01 00 00 00\n79 2a\n89 d9\n83 e1 01\n29 c8\n66 89 44 24 0a\n48 c7 44 24 20 a2 a2 40 00\nd1 eb\n01 cb\n03 5c 24 14\n48 63 c3\n48 89 44 24 28\nba 01 00 00 00\n48 89 d0\n48 c1 e0 04\n48 c7 44 04 20 e8 c6 60 00\n0f b7 4c 24 0a\n48 89 4c 04 28\nff c2\n48 8d 5c 24 20\n4c 89 ef\n48 89 de\ne8 5b a0 ff ff\n48 c7 44 24 20 e8 c6 60 00\n48 89 6c 24 28\n48 c7 44 24 30 a2 a2 40 00\n48 63 44 24 0c\n48 89 44 24 38\nba 02 00 00 00\n48 8b 7c 24 18\n48 89 de\ne8 28 a0 ff ff\nba 02 00 00 00\n4c 89 ff\n48 89 de\ne8 18 a0 ff ff\nba 02 00 00 00\n4c 89 e7\n48 89 de\ne8 08 a0 ff ff\n48 81 c4 c8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p418
S'.text:0000000000408470\n.text:0000000000408471\n.text:0000000000408473\n.text:0000000000408475\n.text:0000000000408477\n.text:0000000000408479\n.text:000000000040847a\n.text:0000000000408481\n.text:0000000000408489\n.text:000000000040848e\n.text:0000000000408491\n.text:0000000000408494\n.text:0000000000408497\n.text:000000000040849a\n.text:00000000004084a3\n.text:00000000004084a8\n.text:00000000004084ad\n.text:00000000004084b6\n.text:00000000004084bb\n.text:00000000004084c0\n.text:00000000004084c5\n.text:00000000004084ca\n.text:00000000004084cd\n.text:00000000004084d2\n.text:00000000004084db\n.text:00000000004084e0\n.text:00000000004084e5\n.text:00000000004084ee\n.text:00000000004084f3\n.text:00000000004084f8\n.text:00000000004084fd\n.text:0000000000408500\n.text:0000000000408503\n.text:0000000000408508\n.text:0000000000408511\n.text:0000000000408516\n.text:000000000040851b\n.text:0000000000408524\n.text:0000000000408529\n.text:000000000040852e\n.text:0000000000408533\n.text:0000000000408536\n.text:0000000000408539\n.text:000000000040853e\n.text:0000000000408543\n.text:0000000000408548\n.text:000000000040854b\n.text:000000000040854f\n.text:0000000000408551\n.text:0000000000408555\n.text:0000000000408560\n.text:0000000000408564\n.text:0000000000408566\n.text:0000000000408568\n.text:000000000040856c\n.text:0000000000408570\n.text:0000000000408573\n.text:0000000000408577\n.text:0000000000408579\n.text:000000000040857c\n.text:000000000040857f\n.text:0000000000408588\n.text:000000000040858d\n.text:0000000000408592\n.text:0000000000408597\n.text:000000000040859a\n.text:000000000040859d\n.text:00000000004085a2\n.text:00000000004085ab\n.text:00000000004085b0\n.text:00000000004085b5\n.text:00000000004085b8\n.text:00000000004085bb\n.text:00000000004085c0\n.text:00000000004085c5\n.text:00000000004085c8\n.text:00000000004085cb\n.text:00000000004085d0\n.text:00000000004085d9\n.text:00000000004085de\n.text:00000000004085e3\n.text:00000000004085ec\n.text:00000000004085f1\n.text:00000000004085f6\n.text:00000000004085fb\n.text:0000000000408600\n.text:0000000000408603\n.text:0000000000408608\n.text:0000000000408611\n.text:0000000000408616\n.text:000000000040861b\n.text:0000000000408624\n.text:0000000000408629\n.text:000000000040862e\n.text:0000000000408633\n.text:000000000040863b\n.text:000000000040863e\n.text:0000000000408641\n.text:0000000000408646\n.text:000000000040864b\n.text:0000000000408650\n.text:0000000000408652\n.text:0000000000408657\n.text:000000000040865b\n.text:000000000040865f\n.text:0000000000408661\n.text:0000000000408665\n.text:000000000040866e\n.text:0000000000408673\n.text:0000000000408678\n.text:0000000000408681\n.text:0000000000408686\n.text:000000000040868b\n.text:0000000000408690\n.text:0000000000408693\n.text:0000000000408698\n.text:000000000040869d\n.text:00000000004086a2\n.text:00000000004086a5\n.text:00000000004086a9\n.text:00000000004086ad\n.text:00000000004086b1\n.text:00000000004086b3\n.text:00000000004086b7\n.text:00000000004086bc\n.text:00000000004086bf\n.text:00000000004086c3\n.text:00000000004086c7\n.text:00000000004086c9\n.text:00000000004086cc\n.text:00000000004086ce\n.text:00000000004086d3\n.text:00000000004086d5\n.text:00000000004086dd\n.text:00000000004086df\n.text:00000000004086e1\n.text:00000000004086e4\n.text:00000000004086e6\n.text:00000000004086eb\n.text:00000000004086f4\n.text:00000000004086f6\n.text:00000000004086f8\n.text:00000000004086fc\n.text:00000000004086ff\n.text:0000000000408704\n.text:0000000000408709\n.text:000000000040870c\n.text:0000000000408710\n.text:0000000000408719\n.text:000000000040871e\n.text:0000000000408723\n.text:0000000000408725\n.text:000000000040872a\n.text:000000000040872d\n.text:0000000000408730\n.text:0000000000408735\n.text:000000000040873e\n.text:0000000000408743\n.text:000000000040874c\n.text:0000000000408751\n.text:0000000000408756\n.text:000000000040875b\n.text:0000000000408760\n.text:0000000000408763\n.text:0000000000408768\n.text:000000000040876d\n.text:0000000000408770\n.text:0000000000408773\n.text:0000000000408778\n.text:000000000040877d\n.text:0000000000408780\n.text:0000000000408783\n.text:0000000000408788\n.text:000000000040878f\n.text:0000000000408790\n.text:0000000000408792\n.text:0000000000408794\n.text:0000000000408796\n.text:0000000000408798\n.text:0000000000408799\n'
p419
tp420
sS'EnableGetVal'
p421
(S'\n__stdcall EnableGetVal(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p422
V\u000avoid EnableGetVal(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  do_get_values = 1;\u000a  return;\u000a}\u000a\u000a
p423
S'MOV byte ptr [0x0060de89],0x1\nRET\n'
p424
S'c6 05 c2 b0 20 00 01\nc3\n'
p425
S'.text:0000000000402dc0\n.text:0000000000402dc7\n'
p426
tp427
sS'SelectionDone'
p428
(S'\n__stdcall SelectionDone(Widget w, Atom * sel, Atom * targ)\n'
p429
V\u000avoid SelectionDone(Widget w,Atom *sel,Atom *targ)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p430
S'RET\n'
p431
S'c3\n'
p432
S'.text:00000000004036a0\n'
p433
tp434
sS'DoSetValues'
p435
(S'\n__stdcall DoSetValues(Widget w, XtPointer junk, XtPointer garbage)\n'
p436
V\u000avoid DoSetValues(Widget w,XtPointer junk,XtPointer garbage)\u000a\u000a{\u000a  ulong uVar1;\u000a  Arg args [1];\u000a  undefined8 local_38;\u000a  undefined8 *local_30;\u000a  undefined8 local_20;\u000a  undefined8 local_18;\u000a  \u000a  if (global_tree_info->num_nodes == 0) {\u000a    SetMessage(global_screen_data.info_label,res_labels[23]);\u000a  }\u000a  else {\u000a    local_38 = 0x60c65d;\u000a    local_30 = &local_18;\u000a    XtGetValues(global_screen_data.res_text,&local_38,1);\u000a    local_38 = 0x60c65d;\u000a    local_30 = &local_20;\u000a    XtGetValues(global_screen_data.val_text,&local_38,1);\u000a    _XEditResResetStream(0x60df50);\u000a    _XEditResPutString8(0x60df50,local_18);\u000a    _XEditResPutString8(0x60df50,0x60ca85);\u000a    _XEditResPutString8(0x60df50,local_20);\u000a    _XEditResPut16(0x60df50,(ulong)global_tree_info->num_nodes);\u000a    if (global_tree_info->num_nodes != 0) {\u000a      uVar1 = 0;\u000a      do {\u000a        InsertWidgetFromNode(&global_client.stream,(WNode *)global_tree_info->active_nodes[uVar1]);\u000a        uVar1 = uVar1 + 1;\u000a      } while (uVar1 < (ulong)global_tree_info->num_nodes);\u000a    }\u000a    SetCommand(w,&DAT_00000001);\u000a  }\u000a  return;\u000a}\u000a\u000a
p437
S'PUSH R14\nPUSH RBX\nSUB RSP,0x28\nMOV R14,RDI\nMOV RAX,qword ptr [0x0060dec8]\nCMP dword ptr [RAX + 0x18],0x0\nJZ 0x004060e5\nMOV qword ptr [RSP],0x60c65d\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [0x0060dfe8]\nMOV RBX,RSP\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x004027d0\nMOV qword ptr [RSP],0x60c65d\nLEA RAX,[RSP + 0x18]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [0x0060dff0]\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x004027d0\nMOV EDI,0x60df50\nCALL 0x00402bb0\nMOV RSI,qword ptr [RSP + 0x20]\nMOV EDI,0x60df50\nCALL 0x00402a70\nMOV EDI,0x60df50\nMOV ESI,0x60ca85\nCALL 0x00402a70\nMOV RSI,qword ptr [RSP + 0x18]\nMOV EDI,0x60df50\nCALL 0x00402a70\nMOV RAX,qword ptr [0x0060dec8]\nMOV ESI,dword ptr [RAX + 0x18]\nMOV EDI,0x60df50\nCALL 0x00402c80\nMOV RAX,qword ptr [0x0060dec8]\nCMP dword ptr [RAX + 0x18],0x0\nJZ 0x004060d4\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [RAX + 0x10]\nMOV RSI,qword ptr [RAX + RBX*0x8]\nMOV EDI,0x60df50\nCALL 0x00406e40\nINC RBX\nMOV RAX,qword ptr [0x0060dec8]\nMOV ECX,dword ptr [RAX + 0x18]\nCMP RBX,RCX\nJC 0x004060b0\nMOV ESI,0x1\nXOR EDX,EDX\nMOV RDI,R14\nCALL 0x00403310\nJMP 0x004060f8\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e0b8]\nCALL 0x00406120\nADD RSP,0x28\nPOP RBX\nPOP R14\nRET\n'
p438
S'41 56\n53\n48 83 ec 28\n49 89 fe\n48 8b 05 d7 7e 20 00\n83 78 18 00\n0f 84 ea 00 00 00\n48 c7 04 24 5d c6 60 00\n48 8d 44 24 20\n48 89 44 24 08\n48 8b 3d d4 7f 20 00\n48 89 e3\nba 01 00 00 00\n48 89 de\ne8 ac c7 ff ff\n48 c7 04 24 5d c6 60 00\n48 8d 44 24 18\n48 89 44 24 08\n48 8b 3d b3 7f 20 00\nba 01 00 00 00\n48 89 de\ne8 86 c7 ff ff\nbf 50 df 60 00\ne8 5c cb ff ff\n48 8b 74 24 20\nbf 50 df 60 00\ne8 0d ca ff ff\nbf 50 df 60 00\nbe 85 ca 60 00\ne8 fe c9 ff ff\n48 8b 74 24 18\nbf 50 df 60 00\ne8 ef c9 ff ff\n48 8b 05 40 7e 20 00\n8b 70 18\nbf 50 df 60 00\ne8 eb cb ff ff\n48 8b 05 2c 7e 20 00\n83 78 18 00\n74 32\n31 db\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 40 10\n48 8b 34 d8\nbf 50 df 60 00\ne8 7e 0d 00 00\n48 ff c3\n48 8b 05 fc 7d 20 00\n8b 48 18\n48 39 cb\n72 dc\nbe 01 00 00 00\n31 d2\n4c 89 f7\ne8 2d d2 ff ff\neb 13\n48 8b 3d 0c 7f 20 00\n48 8b 35 c5 7f 20 00\ne8 28 00 00 00\n48 83 c4 28\n5b\n41 5e\nc3\n'
p439
S'.text:0000000000405fe0\n.text:0000000000405fe2\n.text:0000000000405fe3\n.text:0000000000405fe7\n.text:0000000000405fea\n.text:0000000000405ff1\n.text:0000000000405ff5\n.text:0000000000405ffb\n.text:0000000000406003\n.text:0000000000406008\n.text:000000000040600d\n.text:0000000000406014\n.text:0000000000406017\n.text:000000000040601c\n.text:000000000040601f\n.text:0000000000406024\n.text:000000000040602c\n.text:0000000000406031\n.text:0000000000406036\n.text:000000000040603d\n.text:0000000000406042\n.text:0000000000406045\n.text:000000000040604a\n.text:000000000040604f\n.text:0000000000406054\n.text:0000000000406059\n.text:000000000040605e\n.text:0000000000406063\n.text:0000000000406068\n.text:000000000040606d\n.text:0000000000406072\n.text:0000000000406077\n.text:000000000040607c\n.text:0000000000406081\n.text:0000000000406088\n.text:000000000040608b\n.text:0000000000406090\n.text:0000000000406095\n.text:000000000040609c\n.text:00000000004060a0\n.text:00000000004060a2\n.text:00000000004060a4\n.text:00000000004060b0\n.text:00000000004060b4\n.text:00000000004060b8\n.text:00000000004060bd\n.text:00000000004060c2\n.text:00000000004060c5\n.text:00000000004060cc\n.text:00000000004060cf\n.text:00000000004060d2\n.text:00000000004060d4\n.text:00000000004060d9\n.text:00000000004060db\n.text:00000000004060de\n.text:00000000004060e3\n.text:00000000004060e5\n.text:00000000004060ec\n.text:00000000004060f3\n.text:00000000004060f8\n.text:00000000004060fc\n.text:00000000004060fd\n.text:00000000004060ff\n'
p440
tp441
sS'_init'
p442
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p443
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___0060cff8;\u000a  if (PTR___gmon_start___0060cff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___0060cff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p444
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x0060cff8]\nTEST RAX,RAX\nJZ 0x004025e2\nCALL RAX\nADD RSP,0x8\nRET\n'
p445
S'48 83 ec 08\n48 8b 05 1d aa 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p446
S'.init:00000000004025d0\n.init:00000000004025d4\n.init:00000000004025db\n.init:00000000004025de\n.init:00000000004025e0\n.init:00000000004025e2\n.init:00000000004025e6\n'
p447
tp448
sS'PortholeCallback'
p449
(S'\n__stdcall PortholeCallback(Widget w, XtPointer panner_ptr, XtPointer report_ptr)\n'
p450
V\u000avoid PortholeCallback(Widget w,XtPointer panner_ptr,XtPointer report_ptr)\u000a\u000a{\u000a  uint uVar1;\u000a  Arg args [10];\u000a  char *local_a8;\u000a  long local_a0;\u000a  char *local_98;\u000a  long local_90;\u000a  char *local_88;\u000a  ulong local_80;\u000a  char *local_78;\u000a  ulong local_70;\u000a  char *local_68;\u000a  ulong local_60;\u000a  char *local_58;\u000a  ulong local_50;\u000a  \u000a  local_a8 = "sliderX";\u000a  local_a0 = (long)*(short *)((long)report_ptr + 4);\u000a  local_98 = "sliderY";\u000a  local_90 = (long)*(short *)((long)report_ptr + 6);\u000a  uVar1 = 2;\u000a  if (*(int *)report_ptr != 3) {\u000a    local_88 = "sliderWidth";\u000a    local_80 = (ulong)*(ushort *)((long)report_ptr + 8);\u000a    local_78 = "sliderHeight";\u000a    local_70 = (ulong)*(ushort *)((long)report_ptr + 10);\u000a    local_68 = "canvasWidth";\u000a    local_60 = (ulong)*(ushort *)((long)report_ptr + 0xc);\u000a    local_58 = "canvasHeight";\u000a    local_50 = (ulong)*(ushort *)((long)report_ptr + 0xe);\u000a    uVar1 = 6;\u000a  }\u000a  XtSetValues(panner_ptr,&local_a8,(ulong)uVar1,&local_a8);\u000a  return;\u000a}\u000a\u000a
p451
S'SUB RSP,0xa8\nMOV qword ptr [RSP],0x409a2f\nMOVSX RAX,word ptr [RDX + 0x4]\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],0x409a37\nMOVSX RAX,word ptr [RDX + 0x6]\nMOV qword ptr [RSP + 0x18],RAX\nMOV EAX,0x2\nCMP dword ptr [RDX],0x3\nJZ 0x00404dc3\nMOV qword ptr [RSP + 0x20],0x409a3f\nMOVZX EAX,word ptr [RDX + 0x8]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x409a4b\nMOVZX EAX,word ptr [RDX + 0xa]\nMOV qword ptr [RSP + 0x38],RAX\nMOV qword ptr [RSP + 0x40],0x409a58\nMOVZX EAX,word ptr [RDX + 0xc]\nMOV qword ptr [RSP + 0x48],RAX\nMOV qword ptr [RSP + 0x50],0x409a64\nMOVZX EAX,word ptr [RDX + 0xe]\nMOV qword ptr [RSP + 0x58],RAX\nMOV EAX,0x6\nMOV RCX,RSP\nMOV RDI,RSI\nMOV RSI,RCX\nMOV EDX,EAX\nCALL 0x00402790\nADD RSP,0xa8\nRET\n'
p452
S'48 81 ec a8 00 00 00\n48 c7 04 24 2f 9a 40 00\n48 0f bf 42 04\n48 89 44 24 08\n48 c7 44 24 10 37 9a 40 00\n48 0f bf 42 06\n48 89 44 24 18\nb8 02 00 00 00\n83 3a 03\n74 4d\n48 c7 44 24 20 3f 9a 40 00\n0f b7 42 08\n48 89 44 24 28\n48 c7 44 24 30 4b 9a 40 00\n0f b7 42 0a\n48 89 44 24 38\n48 c7 44 24 40 58 9a 40 00\n0f b7 42 0c\n48 89 44 24 48\n48 c7 44 24 50 64 9a 40 00\n0f b7 42 0e\n48 89 44 24 58\nb8 06 00 00 00\n48 89 e1\n48 89 f7\n48 89 ce\n89 c2\ne8 bd d9 ff ff\n48 81 c4 a8 00 00 00\nc3\n'
p453
S'.text:0000000000404d40\n.text:0000000000404d47\n.text:0000000000404d4f\n.text:0000000000404d54\n.text:0000000000404d59\n.text:0000000000404d62\n.text:0000000000404d67\n.text:0000000000404d6c\n.text:0000000000404d71\n.text:0000000000404d74\n.text:0000000000404d76\n.text:0000000000404d7f\n.text:0000000000404d83\n.text:0000000000404d88\n.text:0000000000404d91\n.text:0000000000404d95\n.text:0000000000404d9a\n.text:0000000000404da3\n.text:0000000000404da7\n.text:0000000000404dac\n.text:0000000000404db5\n.text:0000000000404db9\n.text:0000000000404dbe\n.text:0000000000404dc3\n.text:0000000000404dc6\n.text:0000000000404dc9\n.text:0000000000404dcc\n.text:0000000000404dce\n.text:0000000000404dd3\n.text:0000000000404dda\n'
p454
tp455
sS'FlashWidgets'
p456
(S'\n__stdcall FlashWidgets(TreeInfo * tree_info)\n'
p457
V\u000avoid FlashWidgets(TreeInfo *tree_info)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  long lVar4;\u000a  \u000a  uVar1 = XtWidgetToApplicationContext(tree_info->tree_widget);\u000a  if (tree_info->flash_widgets != (Widget *)0x0) {\u000a    lVar4 = (long)((int)(((uint)global_resources.flash_time >> 0x1f) + global_resources.flash_time)\u000a                  >> 1);\u000a    lVar2 = lVar4;\u000a    if (1 < global_resources.num_flashes) {\u000a      iVar3 = 1;\u000a      lVar2 = 0;\u000a      do {\u000a        XtAppAddTimeOut(uVar1,lVar4 + lVar2,FlashWidgetsOff,tree_info);\u000a        lVar2 = lVar2 + lVar4 * 2;\u000a        XtAppAddTimeOut(uVar1,lVar2,FlashWidgetsOn,tree_info);\u000a        iVar3 = iVar3 + 1;\u000a      } while (iVar3 < global_resources.num_flashes);\u000a      lVar2 = lVar2 + lVar4;\u000a    }\u000a    XtAppAddTimeOut(uVar1,lVar2 + lVar4,FlashWidgetsCleanup,tree_info);\u000a    FlashWidgetsOn(tree_info,(XtIntervalId *)0x0);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p458
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RDI,qword ptr [R14]\nCALL 0x004028a0\nMOV R15,RAX\nCMP qword ptr [R14 + 0x20],0x0\nJZ 0x004047f5\nMOV EAX,dword ptr [0x0060df98]\nMOV ECX,EAX\nSHR ECX,0x1f\nADD ECX,EAX\nSAR ECX,1\nMOVSXD R12,ECX\nCMP dword ptr [0x0060df94],0x2\nMOV RBX,R12\nJL 0x004047c7\nLEA R13,[R12 + R12*0x1]\nMOV EBP,0x1\nXOR EBX,EBX\nNOP dword ptr [RAX]\nLEA RSI,[R12 + RBX*0x1]\nMOV EDX,0x404a90\nMOV RDI,R15\nMOV RCX,R14\nCALL 0x00402780\nADD RBX,R13\nMOV EDX,0x404af0\nMOV RDI,R15\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00402780\nINC EBP\nCMP EBP,dword ptr [0x0060df94]\nJL 0x00404790\nADD RBX,R12\nADD RBX,R12\nMOV EDX,0x404b60\nMOV RDI,R15\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00402780\nXOR ESI,ESI\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00404af0\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p459
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 fe\n49 8b 3e\ne8 4a e1 ff ff\n49 89 c7\n49 83 7e 20 00\n0f 84 91 00 00 00\n8b 05 2e 98 20 00\n89 c1\nc1 e9 1f\n01 c1\nd1 f9\n4c 63 e1\n83 3d 17 98 20 00 02\n4c 89 e3\n7c 45\n4f 8d 2c 24\nbd 01 00 00 00\n31 db\n0f 1f 00\n49 8d 34 1c\nba 90 4a 40 00\n4c 89 ff\n4c 89 f1\ne8 dc df ff ff\n4c 01 eb\nba f0 4a 40 00\n4c 89 ff\n48 89 de\n4c 89 f1\ne8 c6 df ff ff\nff c5\n3b 2d d2 97 20 00\n7c cc\n4c 01 e3\n4c 01 e3\nba 60 4b 40 00\n4c 89 ff\n48 89 de\n4c 89 f1\ne8 a3 df ff ff\n31 f6\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 fb 02 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p460
S'.text:0000000000404740\n.text:0000000000404741\n.text:0000000000404743\n.text:0000000000404745\n.text:0000000000404747\n.text:0000000000404749\n.text:000000000040474a\n.text:000000000040474b\n.text:000000000040474e\n.text:0000000000404751\n.text:0000000000404756\n.text:0000000000404759\n.text:000000000040475e\n.text:0000000000404764\n.text:000000000040476a\n.text:000000000040476c\n.text:000000000040476f\n.text:0000000000404771\n.text:0000000000404773\n.text:0000000000404776\n.text:000000000040477d\n.text:0000000000404780\n.text:0000000000404782\n.text:0000000000404786\n.text:000000000040478b\n.text:000000000040478d\n.text:0000000000404790\n.text:0000000000404794\n.text:0000000000404799\n.text:000000000040479c\n.text:000000000040479f\n.text:00000000004047a4\n.text:00000000004047a7\n.text:00000000004047ac\n.text:00000000004047af\n.text:00000000004047b2\n.text:00000000004047b5\n.text:00000000004047ba\n.text:00000000004047bc\n.text:00000000004047c2\n.text:00000000004047c4\n.text:00000000004047c7\n.text:00000000004047ca\n.text:00000000004047cf\n.text:00000000004047d2\n.text:00000000004047d5\n.text:00000000004047d8\n.text:00000000004047dd\n.text:00000000004047df\n.text:00000000004047e2\n.text:00000000004047e6\n.text:00000000004047e7\n.text:00000000004047e9\n.text:00000000004047eb\n.text:00000000004047ed\n.text:00000000004047ef\n.text:00000000004047f0\n.text:00000000004047f5\n.text:00000000004047f9\n.text:00000000004047fa\n.text:00000000004047fc\n.text:00000000004047fe\n.text:0000000000404800\n.text:0000000000404802\n.text:0000000000404803\n'
p461
tp462
sS'RebuildMenusAndLabel'
p463
(S'\n__stdcall RebuildMenusAndLabel(String toolkit)\n'
p464
V\u000avoid RebuildMenusAndLabel(String toolkit)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = strcmp(global_effective_toolkit,toolkit);\u000a  if (iVar1 != 0) {\u000a    CreateCommandMenu(box,toolkit);\u000a    CreateTreeCommandMenu(box,toolkit);\u000a    XtDestroyWidget(global_screen_data.info_label);\u000a    global_screen_data.info_label =\u000a         (Widget)XtCreateManagedWidget(toolkit,labelWidgetClass,hPane,0,0);\u000a    XtGetApplicationResources(global_screen_data.info_label,res_labels,resources,0x24,0,0);\u000a    global_effective_toolkit = toolkit;\u000a  }\u000a  return;\u000a}\u000a\u000a
p465
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [0x0060d4c8]\nMOV RSI,RBX\nCALL 0x00402940\nTEST EAX,EAX\nJZ 0x004070b7\nMOV RDI,qword ptr [0x0060def0]\nMOV RSI,RBX\nCALL 0x004070c0\nMOV RDI,qword ptr [0x0060def0]\nMOV RSI,RBX\nCALL 0x00407300\nMOV RDI,qword ptr [0x0060dff8]\nCALL 0x00402b70\nMOV RSI,qword ptr [0x0060de40]\nMOV RDX,qword ptr [0x0060def8]\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDI,RBX\nCALL 0x00402750\nMOV qword ptr [0x0060dff8],RAX\nMOV ESI,0x60e000\nMOV EDX,0x60d5c0\nMOV ECX,0x24\nXOR R8D,R8D\nXOR R9D,R9D\nMOV RDI,RAX\nCALL 0x00402630\nMOV qword ptr [0x0060d4c8],RBX\nPOP RBX\nRET\n'
p466
S'53\n48 89 fb\n48 8b 3d 8d 64 20 00\n48 89 de\ne8 fd b8 ff ff\n85 c0\n74 70\n48 8b 3d a2 6e 20 00\n48 89 de\ne8 6a 00 00 00\n48 8b 3d 93 6e 20 00\n48 89 de\ne8 9b 02 00 00\n48 8b 3d 8c 6f 20 00\ne8 ff ba ff ff\n48 8b 35 c8 6d 20 00\n48 8b 15 79 6e 20 00\n31 c9\n45 31 c0\n48 89 df\ne8 c4 b6 ff ff\n48 89 05 65 6f 20 00\nbe 00 e0 60 00\nba c0 d5 60 00\nb9 24 00 00 00\n45 31 c0\n45 31 c9\n48 89 c7\ne8 80 b5 ff ff\n48 89 1d 11 64 20 00\n5b\nc3\n'
p467
S'.text:0000000000407030\n.text:0000000000407031\n.text:0000000000407034\n.text:000000000040703b\n.text:000000000040703e\n.text:0000000000407043\n.text:0000000000407045\n.text:0000000000407047\n.text:000000000040704e\n.text:0000000000407051\n.text:0000000000407056\n.text:000000000040705d\n.text:0000000000407060\n.text:0000000000407065\n.text:000000000040706c\n.text:0000000000407071\n.text:0000000000407078\n.text:000000000040707f\n.text:0000000000407081\n.text:0000000000407084\n.text:0000000000407087\n.text:000000000040708c\n.text:0000000000407093\n.text:0000000000407098\n.text:000000000040709d\n.text:00000000004070a2\n.text:00000000004070a5\n.text:00000000004070a8\n.text:00000000004070ab\n.text:00000000004070b0\n.text:00000000004070b7\n.text:00000000004070b8\n'
p468
tp469
sS'XtDisplayOfObject'
p470
(S'\n__stdcall XtDisplayOfObject()\n'
p471
V\u000avoid XtDisplayOfObject(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisplayOfObject_0060d020)();\u000a  return;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x0060d020]\n'
p473
S'ff 25 0a aa 20 00\n'
p474
S'.plt:0000000000402610\n'
p475
tp476
sS'AddString'
p477
(S'\n__stdcall AddString(char * * str, char * add)\n'
p478
V\u000avoid AddString(char **str,char *add)\u000a\u000a{\u000a  int iVar1;\u000a  char *__s;\u000a  \u000a  __s = *str;\u000a  if (__s == (char *)0x0) {\u000a    iVar1 = 0;\u000a  }\u000a  else {\u000a    _iVar1 = strlen(__s);\u000a    iVar1 = (int)_iVar1;\u000a  }\u000a  _iVar1 = strlen(add);\u000a  __s = (char *)XtRealloc(__s,(ulong)(uint)(iVar1 + 1 + (int)_iVar1));\u000a  *str = __s;\u000a  strcpy(__s + (long)iVar1,add);\u000a  return;\u000a}\u000a\u000a
p479
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV R15,RDI\nMOV RBX,qword ptr [R15]\nTEST RBX,RBX\nJZ 0x00406283\nMOV RDI,RBX\nCALL 0x004027f0\nMOV R12,RAX\nJMP 0x00406286\nXOR R12D,R12D\nMOV RDI,R14\nCALL 0x004027f0\nLEA ESI,[R12 + RAX*0x1 + 0x1]\nMOV RDI,RBX\nCALL 0x004028f0\nMOV qword ptr [R15],RAX\nMOVSXD RDI,R12D\nADD RDI,RAX\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004026a0\n'
p480
S'41 57\n41 56\n41 54\n53\n50\n49 89 f6\n49 89 ff\n49 8b 1f\n48 85 db\n74 0d\n48 89 df\ne8 72 c5 ff ff\n49 89 c4\neb 03\n45 31 e4\n4c 89 f7\ne8 62 c5 ff ff\n41 8d 74 04 01\n48 89 df\ne8 55 c6 ff ff\n49 89 07\n49 63 fc\n48 01 c7\n4c 89 f6\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 e9 c3 ff ff\n'
p481
S'.text:0000000000406260\n.text:0000000000406262\n.text:0000000000406264\n.text:0000000000406266\n.text:0000000000406267\n.text:0000000000406268\n.text:000000000040626b\n.text:000000000040626e\n.text:0000000000406271\n.text:0000000000406274\n.text:0000000000406276\n.text:0000000000406279\n.text:000000000040627e\n.text:0000000000406281\n.text:0000000000406283\n.text:0000000000406286\n.text:0000000000406289\n.text:000000000040628e\n.text:0000000000406293\n.text:0000000000406296\n.text:000000000040629b\n.text:000000000040629e\n.text:00000000004062a1\n.text:00000000004062a4\n.text:00000000004062a7\n.text:00000000004062ab\n.text:00000000004062ac\n.text:00000000004062ae\n.text:00000000004062b0\n.text:00000000004062b2\n'
p482
tp483
sS'GetNamesAndClasses'
p484
(S'\n__stdcall GetNamesAndClasses(WNode * node, char * * * names, char * * * classes)\n'
p485
V\u000avoid GetNamesAndClasses(WNode *node,char ***names,char ***classes)\u000a\u000a{\u000a  long lVar1;\u000a  _WNode *p_Var2;\u000a  char **ppcVar3;\u000a  long lVar4;\u000a  uint uVar5;\u000a  \u000a  uVar5 = 8;\u000a  p_Var2 = (_WNode *)node;\u000a  lVar1 = 0;\u000a  do {\u000a    lVar4 = lVar1;\u000a    p_Var2 = ((WNode *)p_Var2)->parent;\u000a    uVar5 = uVar5 + 8;\u000a    lVar1 = lVar4 + 1;\u000a  } while (p_Var2 != (_WNode *)0x0);\u000a  ppcVar3 = (char **)XtMalloc((ulong)uVar5);\u000a  *names = ppcVar3;\u000a  ppcVar3 = (char **)XtMalloc((ulong)uVar5);\u000a  *classes = ppcVar3;\u000a  ppcVar3[lVar4 + 1] = (char *)0x0;\u000a  (*names)[lVar4 + 1] = (char *)0x0;\u000a  if (0 < (int)(lVar4 + 1)) {\u000a    lVar4 = lVar4 + 2;\u000a    do {\u000a      (*names)[lVar4 + -2] = node->name;\u000a      (*classes)[lVar4 + -2] = node->class;\u000a      node = (WNode *)node->parent;\u000a      lVar4 = lVar4 + -1;\u000a    } while (1 < lVar4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p486
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV R12,RDI\nMOV EBP,0x8\nXOR EBX,EBX\nMOV RAX,R12\nNOP\nMOV R13,RBX\nMOV RAX,qword ptr [RAX + 0x20]\nLEA RBX,[R13 + 0x1]\nADD EBP,0x8\nTEST RAX,RAX\nJNZ 0x00406850\nMOV EDI,EBP\nCALL 0x00402760\nMOV qword ptr [R15],RAX\nMOV EDI,EBP\nCALL 0x00402760\nMOV qword ptr [R14],RAX\nMOV qword ptr [RAX + R13*0x8 + 0x8],0x0\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RAX + R13*0x8 + 0x8],0x0\nTEST EBX,EBX\nJLE 0x004068c7\nINC RBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R12]\nMOV RCX,qword ptr [R15]\nMOV qword ptr [RCX + RBX*0x8 + -0x10],RAX\nMOV RAX,qword ptr [R12 + 0x8]\nMOV RCX,qword ptr [R14]\nMOV qword ptr [RCX + RBX*0x8 + -0x10],RAX\nMOV R12,qword ptr [R12 + 0x20]\nDEC RBX\nCMP RBX,0x1\nJG 0x004068a0\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p487
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f7\n49 89 fc\nbd 08 00 00 00\n31 db\n4c 89 e0\n66 90\n49 89 dd\n48 8b 40 20\n49 8d 5d 01\n83 c5 08\n48 85 c0\n75 ed\n89 ef\ne8 f6 be ff ff\n49 89 07\n89 ef\ne8 ec be ff ff\n49 89 06\n4a c7 44 e8 08 00 00 00 00\n49 8b 07\n4a c7 44 e8 08 00 00 00 00\n85 db\n7e 37\n48 ff c3\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 04 24\n49 8b 0f\n48 89 44 d9 f0\n49 8b 44 24 08\n49 8b 0e\n48 89 44 d9 f0\n4d 8b 64 24 20\n48 ff cb\n48 83 fb 01\n7f d9\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p488
S'.text:0000000000406830\n.text:0000000000406831\n.text:0000000000406833\n.text:0000000000406835\n.text:0000000000406837\n.text:0000000000406839\n.text:000000000040683a\n.text:000000000040683b\n.text:000000000040683e\n.text:0000000000406841\n.text:0000000000406844\n.text:0000000000406849\n.text:000000000040684b\n.text:000000000040684e\n.text:0000000000406850\n.text:0000000000406853\n.text:0000000000406857\n.text:000000000040685b\n.text:000000000040685e\n.text:0000000000406861\n.text:0000000000406863\n.text:0000000000406865\n.text:000000000040686a\n.text:000000000040686d\n.text:000000000040686f\n.text:0000000000406874\n.text:0000000000406877\n.text:0000000000406880\n.text:0000000000406883\n.text:000000000040688c\n.text:000000000040688e\n.text:0000000000406890\n.text:0000000000406893\n.text:00000000004068a0\n.text:00000000004068a4\n.text:00000000004068a7\n.text:00000000004068ac\n.text:00000000004068b1\n.text:00000000004068b4\n.text:00000000004068b9\n.text:00000000004068be\n.text:00000000004068c1\n.text:00000000004068c5\n.text:00000000004068c7\n.text:00000000004068cb\n.text:00000000004068cc\n.text:00000000004068ce\n.text:00000000004068d0\n.text:00000000004068d2\n.text:00000000004068d4\n.text:00000000004068d5\n'
p489
tp490
sS'sprintf'
p491
(S'\n__stdcall sprintf(char * __s, char * __format)\n'
p492
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sprintf(char *__s,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_sprintf_0060d310)();\u000a  return iVar1;\u000a}\u000a\u000a
p493
S'JMP qword ptr [0x0060d310]\n'
p494
S'ff 25 1a a7 20 00\n'
p495
S'.plt:0000000000402bf0\n'
p496
tp497
sS'PopdownResBox'
p498
(S'\n__stdcall PopdownResBox(Widget w, XtPointer shell_ptr, XtPointer junk)\n'
p499
V\u000avoid PopdownResBox(Widget w,XtPointer shell_ptr,XtPointer junk)\u000a\u000a{\u000a  XtPopdown(shell_ptr);\u000a  XtDestroyWidget(shell_ptr);\u000a  return;\u000a}\u000a\u000a
p500
S'PUSH RBX\nMOV RBX,RSI\nMOV RDI,RBX\nCALL 0x00402990\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402b70\n'
p501
S'53\n48 89 f3\n48 89 df\ne8 54 d5 ff ff\n48 89 df\n5b\ne9 2b d7 ff ff\n'
p502
S'.text:0000000000405430\n.text:0000000000405431\n.text:0000000000405434\n.text:0000000000405437\n.text:000000000040543c\n.text:000000000040543f\n.text:0000000000405440\n'
p503
tp504
sS'strlen'
p505
(S'\n__stdcall strlen(char * __s)\n'
p506
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_0060d110)();\u000a  return sVar1;\u000a}\u000a\u000a
p507
S'JMP qword ptr [0x0060d110]\n'
p508
S'ff 25 1a a9 20 00\n'
p509
S'.plt:00000000004027f0\n'
p510
tp511
sS'InternAtoms'
p512
(S'\n__stdcall InternAtoms(Display * dpy)\n'
p513
V\u000avoid InternAtoms(Display *dpy)\u000a\u000a{\u000a  atom_comm = XInternAtom(dpy,"EditresComm",0);\u000a  atom_command = XInternAtom(dpy,"EditresCommand",0);\u000a  atom_resource_editor = XInternAtom(dpy,"Editres",0);\u000a  atom_client_value = XInternAtom(dpy,"EditresClientVal",0);\u000a  atom_editres_protocol = XInternAtom(dpy,"EditresProtocol",0);\u000a  return;\u000a}\u000a\u000a
p514
S'PUSH RBX\nMOV RBX,RDI\nMOV ESI,0x4096c8\nXOR EDX,EDX\nCALL 0x00402a60\nMOV qword ptr [0x0060de90],RAX\nMOV ESI,0x4096d4\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00402a60\nMOV qword ptr [0x0060dea0],RAX\nMOV ESI,0x4096e3\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00402a60\nMOV qword ptr [0x0060de98],RAX\nMOV ESI,0x4096eb\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00402a60\nMOV qword ptr [0x0060dea8],RAX\nMOV ESI,0x4096fc\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00402a60\nMOV qword ptr [0x0060deb0],RAX\nPOP RBX\nRET\n'
p515
S'53\n48 89 fb\nbe c8 96 40 00\n31 d2\ne8 e0 f2 ff ff\n48 89 05 09 a7 20 00\nbe d4 96 40 00\n31 d2\n48 89 df\ne8 ca f2 ff ff\n48 89 05 03 a7 20 00\nbe e3 96 40 00\n31 d2\n48 89 df\ne8 b4 f2 ff ff\n48 89 05 e5 a6 20 00\nbe eb 96 40 00\n31 d2\n48 89 df\ne8 9e f2 ff ff\n48 89 05 df a6 20 00\nbe fc 96 40 00\n31 d2\n48 89 df\ne8 88 f2 ff ff\n48 89 05 d1 a6 20 00\n5b\nc3\n'
p516
S'.text:0000000000403770\n.text:0000000000403771\n.text:0000000000403774\n.text:0000000000403779\n.text:000000000040377b\n.text:0000000000403780\n.text:0000000000403787\n.text:000000000040378c\n.text:000000000040378e\n.text:0000000000403791\n.text:0000000000403796\n.text:000000000040379d\n.text:00000000004037a2\n.text:00000000004037a4\n.text:00000000004037a7\n.text:00000000004037ac\n.text:00000000004037b3\n.text:00000000004037b8\n.text:00000000004037ba\n.text:00000000004037bd\n.text:00000000004037c2\n.text:00000000004037c9\n.text:00000000004037ce\n.text:00000000004037d0\n.text:00000000004037d3\n.text:00000000004037d8\n.text:00000000004037df\n.text:00000000004037e0\n'
p517
tp518
sS'GetResourceName'
p519
(S'\n__stdcall GetResourceName(ResourceBoxInfo * res_box)\n'
p520
V\u000achar * GetResourceName(ResourceBoxInfo *res_box)\u000a\u000a{\u000a  char **ppcVar1;\u000a  \u000a  ppcVar1 = (char **)XawListShowCurrent(res_box->norm_list);\u000a  if ((*(int *)(ppcVar1 + 1) == -1) && (res_box->cons_list != (Widget)0x0)) {\u000a    ppcVar1 = (char **)XawListShowCurrent();\u000a  }\u000a  if (*(int *)(ppcVar1 + 1) != -1) {\u000a    return *ppcVar1;\u000a  }\u000a  return "unknown";\u000a}\u000a\u000a
p521
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX + 0x18]\nCALL 0x00402bc0\nCMP dword ptr [RAX + 0x8],-0x1\nJNZ 0x004052d1\nMOV RDI,qword ptr [RBX + 0x20]\nTEST RDI,RDI\nJZ 0x004052d1\nCALL 0x00402bc0\nCMP dword ptr [RAX + 0x8],-0x1\nJZ 0x004052dc\nMOV RAX,qword ptr [RAX]\nPOP RBX\nRET\nMOV EAX,0x409ac9\nPOP RBX\nRET\n'
p522
S'53\n48 89 fb\n48 8b 7b 18\ne8 03 d9 ff ff\n83 78 08 ff\n75 0e\n48 8b 7b 20\n48 85 ff\n74 05\ne8 ef d8 ff ff\n83 78 08 ff\n74 05\n48 8b 00\n5b\nc3\nb8 c9 9a 40 00\n5b\nc3\n'
p523
S'.text:00000000004052b0\n.text:00000000004052b1\n.text:00000000004052b4\n.text:00000000004052b8\n.text:00000000004052bd\n.text:00000000004052c1\n.text:00000000004052c3\n.text:00000000004052c7\n.text:00000000004052ca\n.text:00000000004052cc\n.text:00000000004052d1\n.text:00000000004052d5\n.text:00000000004052d7\n.text:00000000004052da\n.text:00000000004052db\n.text:00000000004052dc\n.text:00000000004052e1\n.text:00000000004052e2\n'
p524
tp525
sS'XrmQGetResource'
p526
(S'\n__stdcall XrmQGetResource()\n'
p527
V\u000avoid XrmQGetResource(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmQGetResource_0060d338)();\u000a  return;\u000a}\u000a\u000a
p528
S'JMP qword ptr [0x0060d338]\n'
p529
S'ff 25 f2 a6 20 00\n'
p530
S'.plt:0000000000402c40\n'
p531
tp532
sS'ApplyResource'
p533
(S'\n__stdcall ApplyResource(Widget w, XtPointer node_ptr, XtPointer junk)\n'
p534
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000avoid ApplyResource(Widget w,XtPointer node_ptr,XtPointer junk)\u000a\u000a{\u000a  ulong uVar1;\u000a  uchar *puVar2;\u000a  unsigned_short size;\u000a  Arg args [1];\u000a  ushort local_5a;\u000a  char *local_58;\u000a  char *local_50;\u000a  char *local_48;\u000a  ushort local_40;\u000a  undefined8 local_38;\u000a  undefined8 local_30;\u000a  undefined8 local_28;\u000a  char **local_20;\u000a  \u000a  local_50 = GetResourceName(*(ResourceBoxInfo **)(*(long *)((long)node_ptr + 0x48) + 0x18));\u000a  local_48 = "IGNORE_ME";\u000a  local_38 = 0x60df50;\u000a  local_40 = 0;\u000a  local_28 = 0x60c52d;\u000a  local_20 = &local_58;\u000a  XtGetValues(*(undefined8 *)(*(long *)(*(long *)((long)node_ptr + 0x48) + 0x18) + 8),&local_28,1);\u000a  local_30 = 0;\u000a  XrmPutLineResource(&local_30,local_58);\u000a  _XEditResResetStream(0x60df50);\u000a  _XEditResPutString8(0x60df50,local_50);\u000a  _XEditResPutString8(0x60df50,0x60ca85);\u000a  local_58 = GetResourceValueForSetValues((WNode *)node_ptr,&local_5a);\u000a  _XEditResPut16(0x60df50,(ulong)local_5a);\u000a  if (local_5a != 0) {\u000a    uVar1 = 0;\u000a    do {\u000a      _XEditResPut8(0x60df50,(ulong)(uint)(int)local_58[uVar1]);\u000a      uVar1 = uVar1 + 1;\u000a    } while (uVar1 < (ulong)local_5a);\u000a  }\u000a  XtFree();\u000a  puVar2 = global_client.stream.current + -(long)global_client.stream.top;\u000a  _XEditResPut16(0x60df50,0);\u000a  ExecuteOverAllNodes(*(WNode **)(*(long *)((long)node_ptr + 0x30) + 8),CreateSetValuesCommand,\u000a                      &local_50);\u000a  if (local_40 == 0) {\u000a    SetMessage(global_screen_data.info_label,res_labels[20]);\u000a  }\u000a  else {\u000a    global_client.stream.top[(long)puVar2] = (uchar)((ulong)local_40 >> 8);\u000a    (global_client.stream.top + 1)[(long)puVar2] = (uchar)local_40;\u000a    SetCommand(**(Widget **)((long)node_ptr + 0x30),&DAT_00000001);\u000a  }\u000a  XrmDestroyDatabase(local_30);\u000a  return;\u000a}\u000a\u000a
p535
S'PUSH RBP\nPUSH RBX\nSUB RSP,0x58\nMOV RBX,RSI\nMOV RAX,qword ptr [RBX + 0x48]\nMOV RDI,qword ptr [RAX + 0x18]\nCALL 0x004052b0\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x409abf\nMOV qword ptr [RSP + 0x30],0x60df50\nMOV word ptr [RSP + 0x28],0x0\nMOV qword ptr [RSP + 0x40],0x60c52d\nLEA RAX,[RSP + 0x10]\nMOV qword ptr [RSP + 0x48],RAX\nMOV RAX,qword ptr [RBX + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RDI,qword ptr [RAX + 0x8]\nLEA RSI,[RSP + 0x40]\nMOV EDX,0x1\nCALL 0x004027d0\nLEA RDI,[RSP + 0x38]\nMOV qword ptr [RSP + 0x38],0x0\nMOV RSI,qword ptr [RSP + 0x10]\nCALL 0x00402ca0\nMOV EDI,0x60df50\nCALL 0x00402bb0\nMOV RSI,qword ptr [RSP + 0x18]\nMOV EDI,0x60df50\nCALL 0x00402a70\nMOV EDI,0x60df50\nMOV ESI,0x60ca85\nCALL 0x00402a70\nLEA RSI,[RSP + 0xe]\nMOV RDI,RBX\nCALL 0x00405a60\nMOV qword ptr [RSP + 0x10],RAX\nMOVZX ESI,word ptr [RSP + 0xe]\nMOV EDI,0x60df50\nCALL 0x00402c80\nCMP word ptr [RSP + 0xe],0x0\nMOV RDI,qword ptr [RSP + 0x10]\nJZ 0x00405740\nXOR EBP,EBP\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVSX ESI,byte ptr [RDI + RBP*0x1]\nMOV EDI,0x60df50\nCALL 0x00402800\nINC RBP\nMOVZX EAX,word ptr [RSP + 0xe]\nMOV RDI,qword ptr [RSP + 0x10]\nCMP RBP,RAX\nJC 0x00405720\nCALL 0x00402a90\nMOV RBP,qword ptr [0x0060df70]\nSUB RBP,qword ptr [0x0060df68]\nMOV EDI,0x60df50\nXOR ESI,ESI\nCALL 0x00402c80\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RDI,qword ptr [RAX + 0x8]\nLEA RDX,[RSP + 0x18]\nMOV ESI,0x4057e0\nCALL 0x00406de0\nMOV AX,word ptr [RSP + 0x28]\nTEST AX,AX\nJZ 0x004057ae\nMOV RCX,qword ptr [0x0060df68]\nMOV byte ptr [RCX + RBP*0x1],AH\nMOV AL,byte ptr [RSP + 0x28]\nMOV RCX,qword ptr [0x0060df68]\nMOV byte ptr [RCX + RBP*0x1 + 0x1],AL\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RDI,qword ptr [RAX]\nMOV ESI,0x1\nXOR EDX,EDX\nCALL 0x00403310\nJMP 0x004057c1\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e0a0]\nCALL 0x00406120\nMOV RDI,qword ptr [RSP + 0x38]\nCALL 0x00402b80\nADD RSP,0x58\nPOP RBX\nPOP RBP\nRET\n'
p536
S'55\n53\n48 83 ec 58\n48 89 f3\n48 8b 43 48\n48 8b 78 18\ne8 5a fc ff ff\n48 89 44 24 18\n48 c7 44 24 20 bf 9a 40 00\n48 c7 44 24 30 50 df 60 00\n66 c7 44 24 28 00 00\n48 c7 44 24 40 2d c5 60 00\n48 8d 44 24 10\n48 89 44 24 48\n48 8b 43 48\n48 8b 40 18\n48 8b 78 08\n48 8d 74 24 40\nba 01 00 00 00\ne8 2e d1 ff ff\n48 8d 7c 24 38\n48 c7 44 24 38 00 00 00 00\n48 8b 74 24 10\ne8 e6 d5 ff ff\nbf 50 df 60 00\ne8 ec d4 ff ff\n48 8b 74 24 18\nbf 50 df 60 00\ne8 9d d3 ff ff\nbf 50 df 60 00\nbe 85 ca 60 00\ne8 8e d3 ff ff\n48 8d 74 24 0e\n48 89 df\ne8 71 03 00 00\n48 89 44 24 10\n0f b7 74 24 0e\nbf 50 df 60 00\ne8 7d d5 ff ff\n66 83 7c 24 0e 00\n48 8b 7c 24 10\n74 30\n31 ed\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f be 34 2f\nbf 50 df 60 00\ne8 d2 d0 ff ff\n48 ff c5\n0f b7 44 24 0e\n48 8b 7c 24 10\n48 39 c5\n72 e0\ne8 4b d3 ff ff\n48 8b 2d 24 88 20 00\n48 2b 2d 15 88 20 00\nbf 50 df 60 00\n31 f6\ne8 21 d5 ff ff\n48 8b 43 30\n48 8b 78 08\n48 8d 54 24 18\nbe e0 57 40 00\ne8 6a 16 00 00\n66 8b 44 24 28\n66 85 c0\n74 2e\n48 8b 0d e1 87 20 00\n88 24 29\n8a 44 24 28\n48 8b 0d d3 87 20 00\n88 44 29 01\n48 8b 43 30\n48 8b 38\nbe 01 00 00 00\n31 d2\ne8 64 db ff ff\neb 13\n48 8b 3d 43 88 20 00\n48 8b 35 e4 88 20 00\ne8 5f 09 00 00\n48 8b 7c 24 38\ne8 b5 d3 ff ff\n48 83 c4 58\n5b\n5d\nc3\n'
p537
S'.text:0000000000405640\n.text:0000000000405641\n.text:0000000000405642\n.text:0000000000405646\n.text:0000000000405649\n.text:000000000040564d\n.text:0000000000405651\n.text:0000000000405656\n.text:000000000040565b\n.text:0000000000405664\n.text:000000000040566d\n.text:0000000000405674\n.text:000000000040567d\n.text:0000000000405682\n.text:0000000000405687\n.text:000000000040568b\n.text:000000000040568f\n.text:0000000000405693\n.text:0000000000405698\n.text:000000000040569d\n.text:00000000004056a2\n.text:00000000004056a7\n.text:00000000004056b0\n.text:00000000004056b5\n.text:00000000004056ba\n.text:00000000004056bf\n.text:00000000004056c4\n.text:00000000004056c9\n.text:00000000004056ce\n.text:00000000004056d3\n.text:00000000004056d8\n.text:00000000004056dd\n.text:00000000004056e2\n.text:00000000004056e7\n.text:00000000004056ea\n.text:00000000004056ef\n.text:00000000004056f4\n.text:00000000004056f9\n.text:00000000004056fe\n.text:0000000000405703\n.text:0000000000405709\n.text:000000000040570e\n.text:0000000000405710\n.text:0000000000405712\n.text:0000000000405720\n.text:0000000000405724\n.text:0000000000405729\n.text:000000000040572e\n.text:0000000000405731\n.text:0000000000405736\n.text:000000000040573b\n.text:000000000040573e\n.text:0000000000405740\n.text:0000000000405745\n.text:000000000040574c\n.text:0000000000405753\n.text:0000000000405758\n.text:000000000040575a\n.text:000000000040575f\n.text:0000000000405763\n.text:0000000000405767\n.text:000000000040576c\n.text:0000000000405771\n.text:0000000000405776\n.text:000000000040577b\n.text:000000000040577e\n.text:0000000000405780\n.text:0000000000405787\n.text:000000000040578a\n.text:000000000040578e\n.text:0000000000405795\n.text:0000000000405799\n.text:000000000040579d\n.text:00000000004057a0\n.text:00000000004057a5\n.text:00000000004057a7\n.text:00000000004057ac\n.text:00000000004057ae\n.text:00000000004057b5\n.text:00000000004057bc\n.text:00000000004057c1\n.text:00000000004057c6\n.text:00000000004057cb\n.text:00000000004057cf\n.text:00000000004057d0\n.text:00000000004057d1\n'
p538
tp539
sS'AddNode'
p540
(S'\n__stdcall AddNode(WNode * * top_node, WidgetTreeInfo * info, TreeInfo * tree_info)\n'
p541
V\u000avoid AddNode(WNode **top_node,WidgetTreeInfo *info,TreeInfo *tree_info)\u000a\u000a{\u000a  ushort uVar1;\u000a  WNode *node;\u000a  WNode *parent;\u000a  uint uVar2;\u000a  \u000a  uVar1 = (info->widgets).num_widgets;\u000a  node = FindNode((WNode *)*top_node,(info->widgets).ids);\u000a  if (node != (WNode *)0x0) {\u000a    FillNode(info,node,tree_info);\u000a    return;\u000a  }\u000a  node = (WNode *)XtCalloc(0x50,1);\u000a  uVar2 = (uint)uVar1 - 1;\u000a  _uVar2 = (ulong)uVar2;\u000a  node->id = (info->widgets).ids[_uVar2];\u000a  FillNode(info,node,tree_info);\u000a  while( true ) {\u000a    if (uVar2 == 0) {\u000a      if (node->parent == (_WNode *)0x0) {\u000a        *(WNode **)top_node = node;\u000a      }\u000a      else {\u000a        *(_WNode **)top_node = node->parent;\u000a      }\u000a      return;\u000a    }\u000a    parent = FindNode((WNode *)*top_node,(info->widgets).ids);\u000a    if (parent != (WNode *)0x0) break;\u000a    parent = (WNode *)XtCalloc(0x50,1);\u000a    uVar2 = (int)_uVar2 - 1;\u000a    _uVar2 = (ulong)uVar2;\u000a    parent->id = (info->widgets).ids[_uVar2];\u000a    AddChild(parent,node);\u000a    node = parent;\u000a  }\u000a  AddChild(parent,node);\u000a  return;\u000a}\u000a\u000a
p542
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV R13,RDX\nMOV R15,RSI\nMOV R14,RDI\nMOVZX EBX,word ptr [R15]\nMOV RDI,qword ptr [R14]\nMOV RSI,qword ptr [R15 + 0x8]\nMOV EDX,EBX\nCALL 0x004062c0\nTEST RAX,RAX\nJZ 0x00408b60\nMOV RDI,R15\nMOV RSI,RAX\nMOV RDX,R13\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nJMP 0x004093a0\nMOV EDI,0x50\nMOV ESI,0x1\nCALL 0x00402b40\nMOV R12,RAX\nMOV RAX,qword ptr [R15 + 0x8]\nDEC EBX\nMOV RAX,qword ptr [RAX + RBX*0x8]\nMOV qword ptr [R12 + 0x10],RAX\nMOV RDI,R15\nMOV RSI,R12\nMOV RDX,R13\nCALL 0x004093a0\nTEST EBX,EBX\nJZ 0x00408be6\nMOV R13,R12\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [R14]\nMOV RSI,qword ptr [R15 + 0x8]\nMOV EDX,EBX\nCALL 0x004062c0\nTEST RAX,RAX\nJNZ 0x00408bf5\nMOV EDI,0x50\nMOV ESI,0x1\nCALL 0x00402b40\nMOV R12,RAX\nMOV RAX,qword ptr [R15 + 0x8]\nDEC EBX\nMOV RAX,qword ptr [RAX + RBX*0x8]\nMOV qword ptr [R12 + 0x10],RAX\nMOV RDI,R12\nMOV RSI,R13\nCALL 0x004093d0\nTEST EBX,EBX\nMOV R13,R12\nJNZ 0x00408ba0\nMOV RAX,qword ptr [R12 + 0x20]\nTEST RAX,RAX\nJZ 0x00408c09\nMOV qword ptr [R14],RAX\nJMP 0x00408c0c\nMOV RDI,RAX\nMOV RSI,R13\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nJMP 0x004093d0\nMOV qword ptr [R14],R12\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p543
S'41 57\n41 56\n41 55\n41 54\n53\n49 89 d5\n49 89 f7\n49 89 fe\n41 0f b7 1f\n49 8b 3e\n49 8b 77 08\n89 da\ne8 7c d7 ff ff\n48 85 c0\n74 17\n4c 89 ff\n48 89 c6\n4c 89 ea\n5b\n41 5c\n41 5d\n41 5e\n41 5f\ne9 40 08 00 00\nbf 50 00 00 00\nbe 01 00 00 00\ne8 d1 9f ff ff\n49 89 c4\n49 8b 47 08\nff cb\n48 8b 04 d8\n49 89 44 24 10\n4c 89 ff\n4c 89 e6\n4c 89 ea\ne8 11 08 00 00\n85 db\n74 53\n4d 89 e5\n66 2e 0f 1f 84 00 00 00 00 00\n49 8b 3e\n49 8b 77 08\n89 da\ne8 12 d7 ff ff\n48 85 c0\n75 42\nbf 50 00 00 00\nbe 01 00 00 00\ne8 7e 9f ff ff\n49 89 c4\n49 8b 47 08\nff cb\n48 8b 04 d8\n49 89 44 24 10\n4c 89 e7\n4c 89 ee\ne8 f1 07 00 00\n85 db\n4d 89 e5\n75 ba\n49 8b 44 24 20\n48 85 c0\n74 19\n49 89 06\neb 17\n48 89 c7\n4c 89 ee\n5b\n41 5c\n41 5d\n41 5e\n41 5f\ne9 c7 07 00 00\n4d 89 26\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p544
S'.text:0000000000408b20\n.text:0000000000408b22\n.text:0000000000408b24\n.text:0000000000408b26\n.text:0000000000408b28\n.text:0000000000408b29\n.text:0000000000408b2c\n.text:0000000000408b2f\n.text:0000000000408b32\n.text:0000000000408b36\n.text:0000000000408b39\n.text:0000000000408b3d\n.text:0000000000408b3f\n.text:0000000000408b44\n.text:0000000000408b47\n.text:0000000000408b49\n.text:0000000000408b4c\n.text:0000000000408b4f\n.text:0000000000408b52\n.text:0000000000408b53\n.text:0000000000408b55\n.text:0000000000408b57\n.text:0000000000408b59\n.text:0000000000408b5b\n.text:0000000000408b60\n.text:0000000000408b65\n.text:0000000000408b6a\n.text:0000000000408b6f\n.text:0000000000408b72\n.text:0000000000408b76\n.text:0000000000408b78\n.text:0000000000408b7c\n.text:0000000000408b81\n.text:0000000000408b84\n.text:0000000000408b87\n.text:0000000000408b8a\n.text:0000000000408b8f\n.text:0000000000408b91\n.text:0000000000408b93\n.text:0000000000408b96\n.text:0000000000408ba0\n.text:0000000000408ba3\n.text:0000000000408ba7\n.text:0000000000408ba9\n.text:0000000000408bae\n.text:0000000000408bb1\n.text:0000000000408bb3\n.text:0000000000408bb8\n.text:0000000000408bbd\n.text:0000000000408bc2\n.text:0000000000408bc5\n.text:0000000000408bc9\n.text:0000000000408bcb\n.text:0000000000408bcf\n.text:0000000000408bd4\n.text:0000000000408bd7\n.text:0000000000408bda\n.text:0000000000408bdf\n.text:0000000000408be1\n.text:0000000000408be4\n.text:0000000000408be6\n.text:0000000000408beb\n.text:0000000000408bee\n.text:0000000000408bf0\n.text:0000000000408bf3\n.text:0000000000408bf5\n.text:0000000000408bf8\n.text:0000000000408bfb\n.text:0000000000408bfc\n.text:0000000000408bfe\n.text:0000000000408c00\n.text:0000000000408c02\n.text:0000000000408c04\n.text:0000000000408c09\n.text:0000000000408c0c\n.text:0000000000408c0d\n.text:0000000000408c0f\n.text:0000000000408c11\n.text:0000000000408c13\n.text:0000000000408c15\n'
p545
tp546
sS'XawDialogGetValueString'
p547
(S'\n__stdcall XawDialogGetValueString()\n'
p548
V\u000avoid XawDialogGetValueString(void)\u000a\u000a{\u000a  (*(code *)PTR_XawDialogGetValueString_0060d1a8)();\u000a  return;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x0060d1a8]\n'
p550
S'ff 25 82 a8 20 00\n'
p551
S'.plt:0000000000402920\n'
p552
tp553
sS'XSendEvent'
p554
(S'\n__stdcall XSendEvent()\n'
p555
V\u000avoid XSendEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XSendEvent_0060d028)();\u000a  return;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x0060d028]\n'
p557
S'ff 25 02 aa 20 00\n'
p558
S'.plt:0000000000402620\n'
p559
tp560
sS'_PopdownFileDialog'
p561
(S'\n__stdcall _PopdownFileDialog(Widget w, XtPointer client_data, XtPointer junk)\n'
p562
V\u000avoid _PopdownFileDialog(Widget w,XtPointer client_data,XtPointer junk)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  undefined4 in_EAX;\u000a  int iVar3;\u000a  undefined4 in_register_00000004;\u000a  code **local_28;\u000a  \u000a  local_28 = (code **)CONCAT44(in_register_00000004,in_EAX);\u000a  uVar1 = XtParent();\u000a  uVar2 = XtDisplay(uVar1);\u000a  iVar3 = XFindContext(uVar2,uVar1,(ulong)(uint)file_dialog_context,&local_28);\u000a  if (iVar3 == 2) {\u000a    SetMessage(global_screen_data.info_label,"Error while trying to find Context\u005cnAborting...");\u000a  }\u000a  uVar2 = XtDisplay(uVar1);\u000a  XDeleteContext(uVar2,uVar1,(ulong)(uint)file_dialog_context);\u000a  if ((char)client_data == 1) {\u000a    uVar2 = XawDialogGetValueString(uVar1);\u000a    (**local_28)(w,local_28[1],uVar2);\u000a  }\u000a  XtFree(local_28);\u000a  uVar2 = XtParent(uVar1);\u000a  XtPopdown(uVar2);\u000a  uVar1 = XtParent(uVar1);\u000a  XtDestroyWidget(uVar1);\u000a  return;\u000a}\u000a\u000a
p563
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R14,RDI\nCALL 0x00402c00\nMOV RBX,RAX\nMOV RDI,RBX\nCALL 0x00402ab0\nMOV EDX,dword ptr [0x0060deec]\nMOV RCX,RSP\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x00402930\nCMP EAX,0x2\nJNZ 0x004065f8\nMOV RDI,qword ptr [0x0060dff8]\nMOV ESI,0x409cb1\nCALL 0x00406120\nMOV RDI,RBX\nCALL 0x00402ab0\nMOV EDX,dword ptr [0x0060deec]\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x004027a0\nMOV R12,qword ptr [RSP]\nCMP R15B,0x1\nJNZ 0x00406632\nMOV RDI,RBX\nCALL 0x00402920\nMOV RSI,qword ptr [R12 + 0x8]\nMOV RDI,R14\nMOV RDX,RAX\nCALL qword ptr [R12]\nMOV RDI,R12\nCALL 0x00402a90\nMOV RDI,RBX\nCALL 0x00402c00\nMOV RDI,RAX\nCALL 0x00402990\nMOV RDI,RBX\nCALL 0x00402c00\nMOV RDI,RAX\nCALL 0x00402b70\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p564
S'41 57\n41 56\n41 54\n53\n50\n49 89 f7\n49 89 fe\ne8 3d c6 ff ff\n48 89 c3\n48 89 df\ne8 e2 c4 ff ff\n8b 15 18 79 20 00\n48 89 e1\n48 89 c7\n48 89 de\ne8 4e c3 ff ff\n83 f8 02\n75 11\n48 8b 3d 0a 7a 20 00\nbe b1 9c 40 00\ne8 28 fb ff ff\n48 89 df\ne8 b0 c4 ff ff\n8b 15 e6 78 20 00\n48 89 c7\n48 89 de\ne8 8f c1 ff ff\n4c 8b 24 24\n41 80 ff 01\n75 17\n48 89 df\ne8 fd c2 ff ff\n49 8b 74 24 08\n4c 89 f7\n48 89 c2\n41 ff 14 24\n4c 89 e7\ne8 56 c4 ff ff\n48 89 df\ne8 be c5 ff ff\n48 89 c7\ne8 46 c3 ff ff\n48 89 df\ne8 ae c5 ff ff\n48 89 c7\ne8 16 c5 ff ff\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p565
S'.text:00000000004065b0\n.text:00000000004065b2\n.text:00000000004065b4\n.text:00000000004065b6\n.text:00000000004065b7\n.text:00000000004065b8\n.text:00000000004065bb\n.text:00000000004065be\n.text:00000000004065c3\n.text:00000000004065c6\n.text:00000000004065c9\n.text:00000000004065ce\n.text:00000000004065d4\n.text:00000000004065d7\n.text:00000000004065da\n.text:00000000004065dd\n.text:00000000004065e2\n.text:00000000004065e5\n.text:00000000004065e7\n.text:00000000004065ee\n.text:00000000004065f3\n.text:00000000004065f8\n.text:00000000004065fb\n.text:0000000000406600\n.text:0000000000406606\n.text:0000000000406609\n.text:000000000040660c\n.text:0000000000406611\n.text:0000000000406615\n.text:0000000000406619\n.text:000000000040661b\n.text:000000000040661e\n.text:0000000000406623\n.text:0000000000406628\n.text:000000000040662b\n.text:000000000040662e\n.text:0000000000406632\n.text:0000000000406635\n.text:000000000040663a\n.text:000000000040663d\n.text:0000000000406642\n.text:0000000000406645\n.text:000000000040664a\n.text:000000000040664d\n.text:0000000000406652\n.text:0000000000406655\n.text:000000000040665a\n.text:000000000040665e\n.text:000000000040665f\n.text:0000000000406661\n.text:0000000000406663\n.text:0000000000406665\n'
p566
tp567
sS'XMapRaised'
p568
(S'\n__stdcall XMapRaised()\n'
p569
V\u000avoid XMapRaised(void)\u000a\u000a{\u000a  (*(code *)PTR_XMapRaised_0060d240)();\u000a  return;\u000a}\u000a\u000a
p570
S'JMP qword ptr [0x0060d240]\n'
p571
S'ff 25 ea a7 20 00\n'
p572
S'.plt:0000000000402a50\n'
p573
tp574
sS'HandleXErrors'
p575
(S'\n__stdcall HandleXErrors(Display * display, XErrorEvent * error)\n'
p576
V\u000aint HandleXErrors(Display *display,XErrorEvent *error)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (error->serial == global_serial_num) {\u000a    if (error->error_code == 3) {\u000a      global_error_code = 1;\u000a    }\u000a    else {\u000a      iVar1 = XmuPrintDefaultErrorMessage(display,error,stderr);\u000a      if (iVar1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(1);\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    (*global_old_error_handler)(display,error);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p577
S'PUSH RAX\nMOV RAX,qword ptr [RSI + 0x18]\nCMP RAX,qword ptr [0x0060dfc8]\nJNZ 0x004063c0\nCMP byte ptr [RSI + 0x20],0x3\nJNZ 0x004063c8\nMOV dword ptr [0x0060df40],0x1\nJMP 0x004063d8\nCALL qword ptr [0x0060dfc0]\nJMP 0x004063d8\nMOV RDX,qword ptr [0x0060de80]\nCALL 0x00402640\nTEST EAX,EAX\nJNZ 0x004063dc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV EDI,0x1\nCALL 0x00402c10\n'
p578
S'50\n48 8b 46 18\n48 3b 05 1c 7c 20 00\n75 12\n80 7e 20 03\n75 14\nc7 05 82 7b 20 00 01 00 00 00\neb 18\nff 15 fa 7b 20 00\neb 10\n48 8b 15 b1 7a 20 00\ne8 6c c2 ff ff\n85 c0\n75 04\n31 c0\n59\nc3\nbf 01 00 00 00\ne8 2a c8 ff ff\n'
p579
S'.text:00000000004063a0\n.text:00000000004063a1\n.text:00000000004063a5\n.text:00000000004063ac\n.text:00000000004063ae\n.text:00000000004063b2\n.text:00000000004063b4\n.text:00000000004063be\n.text:00000000004063c0\n.text:00000000004063c6\n.text:00000000004063c8\n.text:00000000004063cf\n.text:00000000004063d4\n.text:00000000004063d6\n.text:00000000004063d8\n.text:00000000004063da\n.text:00000000004063db\n.text:00000000004063dc\n.text:00000000004063e1\n'
p580
tp581
sS'ClientTimedOut'
p582
(S'\n__stdcall ClientTimedOut(XtPointer data, XtIntervalId * id)\n'
p583
V\u000avoid ClientTimedOut(XtPointer data,XtIntervalId *id)\u000a\u000a{\u000a  Atom AVar1;\u000a  undefined8 uVar2;\u000a  char msg [8192];\u000a  char acStack8216 [8200];\u000a  \u000a  AVar1 = global_client.atom;\u000a  global_client.ident = 0;\u000a  uVar2 = XtDisplay();\u000a  uVar2 = XtLastTimestampProcessed(uVar2);\u000a  XtDisownSelection(data,AVar1,uVar2);\u000a  sprintf(acStack8216,res_labels[4],"the Editres Protocol.");\u000a  SetMessage(global_screen_data.info_label,acStack8216);\u000a  return;\u000a}\u000a\u000a
p584
S'PUSH R14\nPUSH RBX\nSUB RSP,0x2008\nMOV RBX,RDI\nMOV byte ptr [0x0060df4c],0x0\nMOV R14,qword ptr [0x0060df88]\nCALL 0x00402ab0\nMOV RDI,RAX\nCALL 0x00402b20\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00402a30\nMOV RSI,qword ptr [0x0060e020]\nMOV RBX,RSP\nMOV EDX,0x40970c\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nADD RSP,0x2008\nPOP RBX\nPOP R14\nRET\n'
p585
S'41 56\n53\n48 81 ec 08 20 00 00\n48 89 fb\nc6 05 38 a8 20 00 00\n4c 8b 35 6d a8 20 00\ne8 90 f3 ff ff\n48 89 c7\ne8 f8 f3 ff ff\n48 89 df\n4c 89 f6\n48 89 c2\ne8 fa f2 ff ff\n48 8b 35 e3 a8 20 00\n48 89 e3\nba 0c 97 40 00\n31 c0\n48 89 df\ne8 a1 f4 ff ff\n48 8b 3d a2 a8 20 00\n48 89 de\ne8 c2 29 00 00\n48 81 c4 08 20 00 00\n5b\n41 5e\nc3\n'
p586
S'.text:0000000000403700\n.text:0000000000403702\n.text:0000000000403703\n.text:000000000040370a\n.text:000000000040370d\n.text:0000000000403714\n.text:000000000040371b\n.text:0000000000403720\n.text:0000000000403723\n.text:0000000000403728\n.text:000000000040372b\n.text:000000000040372e\n.text:0000000000403731\n.text:0000000000403736\n.text:000000000040373d\n.text:0000000000403740\n.text:0000000000403745\n.text:0000000000403747\n.text:000000000040374a\n.text:000000000040374f\n.text:0000000000403756\n.text:0000000000403759\n.text:000000000040375e\n.text:0000000000403765\n.text:0000000000403766\n.text:0000000000403768\n'
p587
tp588
sS'AddResource'
p589
(S'\n__stdcall AddResource(ResourceInfo * res_info, WidgetResourceInfo * resource)\n'
p590
V\u000avoid AddResource(ResourceInfo *res_info,WidgetResourceInfo *resource)\u000a\u000a{\u000a  resource->name = res_info->name;\u000a  res_info->name = (char *)0x0;\u000a  resource->class = res_info->class;\u000a  res_info->class = (char *)0x0;\u000a  resource->type = res_info->type;\u000a  res_info->type = (char *)0x0;\u000a  return;\u000a}\u000a\u000a
p591
S'MOV RAX,qword ptr [RDI + 0x8]\nMOV qword ptr [RSI],RAX\nMOV qword ptr [RDI + 0x8],0x0\nMOV RAX,qword ptr [RDI + 0x10]\nMOV qword ptr [RSI + 0x8],RAX\nMOV qword ptr [RDI + 0x10],0x0\nMOV RAX,qword ptr [RDI + 0x18]\nMOV qword ptr [RSI + 0x10],RAX\nMOV qword ptr [RDI + 0x18],0x0\nRET\n'
p592
S'48 8b 47 08\n48 89 06\n48 c7 47 08 00 00 00 00\n48 8b 47 10\n48 89 46 08\n48 c7 47 10 00 00 00 00\n48 8b 47 18\n48 89 46 10\n48 c7 47 18 00 00 00 00\nc3\n'
p593
S'.text:0000000000406ff0\n.text:0000000000406ff4\n.text:0000000000406ff7\n.text:0000000000406fff\n.text:0000000000407003\n.text:0000000000407007\n.text:000000000040700f\n.text:0000000000407013\n.text:0000000000407017\n.text:000000000040701f\n'
p594
tp595
sS'XGetWindowAttributes'
p596
(S'\n__stdcall XGetWindowAttributes()\n'
p597
V\u000avoid XGetWindowAttributes(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetWindowAttributes_0060d2c8)();\u000a  return;\u000a}\u000a\u000a
p598
S'JMP qword ptr [0x0060d2c8]\n'
p599
S'ff 25 62 a7 20 00\n'
p600
S'.plt:0000000000402b60\n'
p601
tp602
sS'CheckAndFindEntry'
p603
(S'\n__stdcall CheckAndFindEntry(String action_name, String * params, ActionValues * table, int * type)\n'
p604
V\u000aBoolean CheckAndFindEntry(String action_name,String *params,ActionValues *table,int *type)\u000a\u000a{\u000a  int iVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  uint uVar4;\u000a  ulong uVar5;\u000a  uint in_R8D;\u000a  int *in_R9;\u000a  char buf [8192];\u000a  undefined4 local_2038 [2050];\u000a  \u000a  if ((int)table == 1) {\u000a    XmuCopyISOLatin1Lowered(local_2038,*params);\u000a    if (in_R8D == 0) {\u000a      sprintf((char *)local_2038,res_labels[3],action_name);\u000a    }\u000a    else {\u000a      piVar3 = type + 2;\u000a      uVar4 = 0;\u000a      do {\u000a        iVar1 = strcmp((char *)local_2038,*(char **)(piVar3 + -2));\u000a        if (iVar1 == 0) {\u000a          *in_R9 = *piVar3;\u000a          return 1;\u000a        }\u000a        piVar3 = piVar3 + 4;\u000a        uVar4 = uVar4 + 1;\u000a      } while (uVar4 < in_R8D);\u000a      sprintf((char *)local_2038,res_labels[3],action_name);\u000a      uVar5 = (ulong)in_R8D;\u000a      uVar4 = 1;\u000a      do {\u000a        strcat((char *)local_2038,*(char **)type);\u000a        if ((int)uVar5 == 2) {\u000a          sVar2 = strlen((char *)local_2038);\u000a          *(undefined2 *)((long)local_2038 + sVar2 + 4) = 0x20;\u000a          *(undefined4 *)((long)local_2038 + sVar2) = 0x726f202c;\u000a        }\u000a        else {\u000a          if (uVar4 < in_R8D) {\u000a            sVar2 = strlen((char *)local_2038);\u000a            *(undefined *)((long)local_2038 + sVar2 + 2) = 0;\u000a            *(undefined2 *)((long)local_2038 + sVar2) = 0x202c;\u000a          }\u000a        }\u000a        type = (int *)((char **)type + 2);\u000a        uVar4 = uVar4 + 1;\u000a        uVar5 = uVar5 - 1;\u000a      } while (uVar5 != 0);\u000a    }\u000a    SetMessage(global_screen_data.info_label,(char *)local_2038);\u000a  }\u000a  else {\u000a    sprintf((char *)local_2038,res_labels[2],action_name);\u000a    SetMessage(global_screen_data.info_label,(char *)local_2038);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p605
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2018\nMOV R15,R9\nMOV R13D,R8D\nMOV R14,RCX\nMOV RBP,RDI\nCMP EDX,0x1\nJNZ 0x004030d6\nMOV RSI,qword ptr [RSI]\nLEA RDI,[RSP + 0x10]\nCALL 0x00402a10\nTEST R13D,R13D\nJZ 0x00403102\nMOV qword ptr [RSP + 0x8],RBP\nLEA RBX,[R14 + 0x8]\nXOR EBP,EBP\nLEA R12,[RSP + 0x10]\nNOP dword ptr [RAX]\nMOV RSI,qword ptr [RBX + -0x8]\nMOV RDI,R12\nCALL 0x00402940\nTEST EAX,EAX\nJZ 0x0040312d\nADD RBX,0x10\nINC EBP\nCMP EBP,R13D\nJC 0x00403030\nMOV RSI,qword ptr [0x0060e018]\nLEA R15,[RSP + 0x10]\nXOR EAX,EAX\nMOV RDI,R15\nMOV RDX,qword ptr [RSP + 0x8]\nCALL 0x00402bf0\nMOV EBP,R13D\nMOV EBX,0x1\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RSI,qword ptr [R14]\nMOV RDI,R15\nCALL 0x00402be0\nCMP EBP,0x2\nJNZ 0x004030b0\nMOV RDI,R15\nCALL 0x004027f0\nMOV word ptr [RSP + RAX*0x1 + 0x14],0x20\nMOV dword ptr [RSP + RAX*0x1 + 0x10],0x726f202c\nJMP 0x004030c9\nCMP EBX,R13D\nJNC 0x004030c9\nMOV RDI,R15\nCALL 0x004027f0\nMOV byte ptr [RSP + RAX*0x1 + 0x12],0x0\nMOV word ptr [RSP + RAX*0x1 + 0x10],0x202c\nADD R14,0x10\nINC EBX\nDEC RBP\nJNZ 0x00403080\nJMP 0x00403118\nMOV RSI,qword ptr [0x0060e010]\nXOR EBX,EBX\nLEA R14,[RSP + 0x10]\nXOR EAX,EAX\nMOV RDI,R14\nMOV RDX,RBP\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,R14\nCALL 0x00406120\nJMP 0x00403134\nMOV RSI,qword ptr [0x0060e018]\nLEA RDI,[RSP + 0x10]\nXOR EAX,EAX\nMOV RDX,RBP\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nLEA RSI,[RSP + 0x10]\nCALL 0x00406120\nXOR EBX,EBX\nJMP 0x00403134\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [R15],EAX\nMOV BL,0x1\nMOV EAX,EBX\nADD RSP,0x2018\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p606
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 20 00 00\n4d 89 cf\n45 89 c5\n49 89 ce\n48 89 fd\n83 fa 01\n0f 85 d0 00 00 00\n48 8b 36\n48 8d 7c 24 10\ne8 fd f9 ff ff\n45 85 ed\n0f 84 e6 00 00 00\n48 89 6c 24 08\n49 8d 5e 08\n31 ed\n4c 8d 64 24 10\n0f 1f 40 00\n48 8b 73 f8\n4c 89 e7\ne8 04 f9 ff ff\n85 c0\n0f 84 e9 00 00 00\n48 83 c3 10\nff c5\n44 39 ed\n72 e1\n48 8b 35 c2 af 20 00\n4c 8d 7c 24 10\n31 c0\n4c 89 ff\n48 8b 54 24 08\ne8 86 fb ff ff\n44 89 ed\nbb 01 00 00 00\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 36\n4c 89 ff\ne8 55 fb ff ff\n83 fd 02\n75 20\n4c 89 ff\ne8 58 f7 ff ff\n66 c7 44 04 14 20 00\nc7 44 04 10 2c 20 6f 72\neb 20\n44 39 eb\n73 14\n4c 89 ff\ne8 33 f7 ff ff\nc6 44 04 12 00\n66 c7 44 04 10 2c 20\n49 83 c6 10\nff c3\n48 ff cd\n75 ac\neb 42\n48 8b 35 33 af 20 00\n31 db\n4c 8d 74 24 10\n31 c0\n4c 89 f7\n48 89 ea\ne8 ff fa ff ff\n48 8b 3d 00 af 20 00\n4c 89 f6\ne8 20 30 00 00\neb 32\n48 8b 35 0f af 20 00\n48 8d 7c 24 10\n31 c0\n48 89 ea\ne8 d8 fa ff ff\n48 8b 3d d9 ae 20 00\n48 8d 74 24 10\ne8 f7 2f 00 00\n31 db\neb 07\n8b 03\n41 89 07\nb3 01\n89 d8\n48 81 c4 18 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p607
S'.text:0000000000402fe0\n.text:0000000000402fe1\n.text:0000000000402fe3\n.text:0000000000402fe5\n.text:0000000000402fe7\n.text:0000000000402fe9\n.text:0000000000402fea\n.text:0000000000402ff1\n.text:0000000000402ff4\n.text:0000000000402ff7\n.text:0000000000402ffa\n.text:0000000000402ffd\n.text:0000000000403000\n.text:0000000000403006\n.text:0000000000403009\n.text:000000000040300e\n.text:0000000000403013\n.text:0000000000403016\n.text:000000000040301c\n.text:0000000000403021\n.text:0000000000403025\n.text:0000000000403027\n.text:000000000040302c\n.text:0000000000403030\n.text:0000000000403034\n.text:0000000000403037\n.text:000000000040303c\n.text:000000000040303e\n.text:0000000000403044\n.text:0000000000403048\n.text:000000000040304a\n.text:000000000040304d\n.text:000000000040304f\n.text:0000000000403056\n.text:000000000040305b\n.text:000000000040305d\n.text:0000000000403060\n.text:0000000000403065\n.text:000000000040306a\n.text:000000000040306d\n.text:0000000000403072\n.text:0000000000403080\n.text:0000000000403083\n.text:0000000000403086\n.text:000000000040308b\n.text:000000000040308e\n.text:0000000000403090\n.text:0000000000403093\n.text:0000000000403098\n.text:000000000040309f\n.text:00000000004030a7\n.text:00000000004030b0\n.text:00000000004030b3\n.text:00000000004030b5\n.text:00000000004030b8\n.text:00000000004030bd\n.text:00000000004030c2\n.text:00000000004030c9\n.text:00000000004030cd\n.text:00000000004030cf\n.text:00000000004030d2\n.text:00000000004030d4\n.text:00000000004030d6\n.text:00000000004030dd\n.text:00000000004030df\n.text:00000000004030e4\n.text:00000000004030e6\n.text:00000000004030e9\n.text:00000000004030ec\n.text:00000000004030f1\n.text:00000000004030f8\n.text:00000000004030fb\n.text:0000000000403100\n.text:0000000000403102\n.text:0000000000403109\n.text:000000000040310e\n.text:0000000000403110\n.text:0000000000403113\n.text:0000000000403118\n.text:000000000040311f\n.text:0000000000403124\n.text:0000000000403129\n.text:000000000040312b\n.text:000000000040312d\n.text:000000000040312f\n.text:0000000000403132\n.text:0000000000403134\n.text:0000000000403136\n.text:000000000040313d\n.text:000000000040313e\n.text:0000000000403140\n.text:0000000000403142\n.text:0000000000403144\n.text:0000000000403146\n.text:0000000000403147\n'
p608
tp609
sS'XawListShowCurrent'
p610
(S'\n__stdcall XawListShowCurrent()\n'
p611
V\u000avoid XawListShowCurrent(void)\u000a\u000a{\u000a  (*(code *)PTR_XawListShowCurrent_0060d2f8)();\u000a  return;\u000a}\u000a\u000a
p612
S'JMP qword ptr [0x0060d2f8]\n'
p613
S'ff 25 32 a7 20 00\n'
p614
S'.plt:0000000000402bc0\n'
p615
tp616
sS'__libc_csu_fini'
p617
(S'\n__stdcall __libc_csu_fini()\n'
p618
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p619
S'RET\n'
p620
S'f3 c3\n'
p621
S'.text:0000000000409490\n'
p622
tp623
sS'XtIsRealized'
p624
(S'\n__stdcall XtIsRealized()\n'
p625
V\u000avoid XtIsRealized(void)\u000a\u000a{\u000a  (*(code *)PTR_XtIsRealized_0060d210)();\u000a  return;\u000a}\u000a\u000a
p626
S'JMP qword ptr [0x0060d210]\n'
p627
S'ff 25 1a a8 20 00\n'
p628
S'.plt:00000000004029f0\n'
p629
tp630
sS'CreateTree'
p631
(S'\n__stdcall CreateTree(Event * event)\n'
p632
V\u000aTreeInfo * CreateTree(Event *event)\u000a\u000a{\u000a  TreeInfo *tree_info;\u000a  long lVar1;\u000a  long lVar2;\u000a  \u000a  tree_info = (TreeInfo *)XtMalloc(0x30);\u000a  *(undefined4 *)&tree_info->flash_widgets = 0;\u000a  *(undefined4 *)((long)&tree_info->flash_widgets + 4) = 0;\u000a  tree_info->num_flash_widgets = 0;\u000a  tree_info->alloc_flash_widgets = 0;\u000a  *(undefined4 *)&tree_info->active_nodes = 0;\u000a  *(undefined4 *)((long)&tree_info->active_nodes + 4) = 0;\u000a  tree_info->num_nodes = 0;\u000a  tree_info->alloc_nodes = 0;\u000a  *(undefined4 *)&tree_info->tree_widget = 0;\u000a  *(undefined4 *)((long)&tree_info->tree_widget + 4) = 0;\u000a  *(undefined4 *)&tree_info->top_node = 0;\u000a  *(undefined4 *)((long)&tree_info->top_node + 4) = 0;\u000a  if (*(short *)(*event + 0x10) != 0) {\u000a    lVar2 = 0;\u000a    lVar1 = 0;\u000a    do {\u000a      AddNode(&tree_info->top_node,(WidgetTreeInfo *)(*(long *)(*event + 0x18) + lVar2),tree_info);\u000a      lVar1 = lVar1 + 1;\u000a      lVar2 = lVar2 + 0x30;\u000a    } while (lVar1 < (long)(ulong)*(ushort *)(*event + 0x10));\u000a  }\u000a  return tree_info;\u000a}\u000a\u000a
p633
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV R12,RDI\nMOV EDI,0x30\nCALL 0x00402760\nMOV R14,RAX\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [R14 + 0x20],XMM0\nMOVUPS xmmword ptr [R14 + 0x10],XMM0\nMOVUPS xmmword ptr [R14],XMM0\nCMP word ptr [R12 + 0x10],0x0\nJZ 0x00408905\nMOV R15,R14\nADD R15,0x8\nXOR R13D,R13D\nXOR EBX,EBX\nNOP\nMOV RSI,qword ptr [R12 + 0x18]\nADD RSI,R13\nMOV RDI,R15\nMOV RDX,R14\nCALL 0x00408b20\nINC RBX\nMOVZX EAX,word ptr [R12 + 0x10]\nADD R13,0x30\nCMP RBX,RAX\nJL 0x004088e0\nMOV RAX,R14\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p634
S'41 57\n41 56\n41 55\n41 54\n53\n49 89 fc\nbf 30 00 00 00\ne8 aa 9e ff ff\n49 89 c6\n0f 57 c0\n41 0f 11 46 20\n41 0f 11 46 10\n41 0f 11 06\n66 41 83 7c 24 10 00\n74 32\n4d 89 f7\n49 83 c7 08\n45 31 ed\n31 db\n90\n49 8b 74 24 18\n4c 01 ee\n4c 89 ff\n4c 89 f2\ne8 2d 02 00 00\n48 ff c3\n41 0f b7 44 24 10\n49 83 c5 30\n48 39 c3\n7c db\n4c 89 f0\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p635
S'.text:00000000004088a0\n.text:00000000004088a2\n.text:00000000004088a4\n.text:00000000004088a6\n.text:00000000004088a8\n.text:00000000004088a9\n.text:00000000004088ac\n.text:00000000004088b1\n.text:00000000004088b6\n.text:00000000004088b9\n.text:00000000004088bc\n.text:00000000004088c1\n.text:00000000004088c6\n.text:00000000004088ca\n.text:00000000004088d1\n.text:00000000004088d3\n.text:00000000004088d6\n.text:00000000004088da\n.text:00000000004088dd\n.text:00000000004088df\n.text:00000000004088e0\n.text:00000000004088e5\n.text:00000000004088e8\n.text:00000000004088eb\n.text:00000000004088ee\n.text:00000000004088f3\n.text:00000000004088f6\n.text:00000000004088fc\n.text:0000000000408900\n.text:0000000000408903\n.text:0000000000408905\n.text:0000000000408908\n.text:0000000000408909\n.text:000000000040890b\n.text:000000000040890d\n.text:000000000040890f\n.text:0000000000408911\n'
p636
tp637
sS'CheckDatabase'
p638
(S'\n__stdcall CheckDatabase(XrmDatabase db, XrmQuarkList names, XrmQuarkList classes)\n'
p639
V\u000aBoolean CheckDatabase(XrmDatabase db,XrmQuarkList names,XrmQuarkList classes)\u000a\u000a{\u000a  Boolean BVar1;\u000a  XrmRepresentation junk;\u000a  XrmValue garbage;\u000a  \u000a  BVar1 = XrmQGetResource();\u000a  return BVar1;\u000a}\u000a\u000a
p640
S'SUB RSP,0x18\nLEA RCX,[RSP + 0x4]\nLEA R8,[RSP + 0x8]\nCALL 0x00402c40\nADD RSP,0x18\nRET\n'
p641
S'48 83 ec 18\n48 8d 4c 24 04\n4c 8d 44 24 08\ne8 1d bf ff ff\n48 83 c4 18\nc3\n'
p642
S'.text:0000000000406d10\n.text:0000000000406d14\n.text:0000000000406d19\n.text:0000000000406d1e\n.text:0000000000406d23\n.text:0000000000406d27\n'
p643
tp644
sS'GetResourceList'
p645
(S'\n__stdcall GetResourceList(Widget w, XtPointer junk, XtPointer garbage)\n'
p646
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000avoid GetResourceList(Widget w,XtPointer junk,XtPointer garbage)\u000a\u000a{\u000a  WNode *node;\u000a  String str;\u000a  char *local_10;\u000a  \u000a  str = res_labels[17];\u000a  if ((global_tree_info != (TreeInfo *)0x0) &&\u000a     (str = res_labels[19], global_tree_info->num_nodes == 1)) {\u000a    node = (WNode *)((WNode *)global_tree_info->active_nodes)->name;\u000a    if (node->resources == (WidgetResources *)0x0) {\u000a      _XEditResResetStream(0x60df50);\u000a      _XEditResPut16(0x60df50,1);\u000a      InsertWidgetFromNode(&global_client.stream,node);\u000a      SetCommand(global_tree_info->tree_widget,&DAT_00000005);\u000a      return;\u000a    }\u000a    local_10 = (char *)0x0;\u000a    CreateResourceBox(node,&local_10);\u000a    if (local_10 != (char *)0x0) {\u000a      SetMessage(global_screen_data.info_label,local_10);\u000a      XtFree(local_10);\u000a    }\u000a    return;\u000a  }\u000a  SetMessage(global_screen_data.info_label,str);\u000a  return;\u000a}\u000a\u000a
p647
S'PUSH RBX\nSUB RSP,0x10\nMOV RAX,qword ptr [0x0060dec8]\nTEST RAX,RAX\nJZ 0x00404e51\nCMP dword ptr [RAX + 0x18],0x1\nJNZ 0x00404e61\nMOV RAX,qword ptr [RAX + 0x10]\nMOV RBX,qword ptr [RAX]\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x00404e79\nMOV qword ptr [RSP + 0x8],0x0\nLEA RSI,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00406c20\nMOV RSI,qword ptr [RSP + 0x8]\nTEST RSI,RSI\nJZ 0x00404e4b\nMOV RDI,qword ptr [0x0060dff8]\nCALL 0x00406120\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402a90\nADD RSP,0x10\nPOP RBX\nRET\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e088]\nJMP 0x00404e6f\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e098]\nADD RSP,0x10\nPOP RBX\nJMP 0x00406120\nMOV EDI,0x60df50\nCALL 0x00402bb0\nMOV EDI,0x60df50\nMOV ESI,0x1\nCALL 0x00402c80\nMOV EDI,0x60df50\nMOV RSI,RBX\nCALL 0x00406e40\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX]\nMOV ESI,0x5\nXOR EDX,EDX\nADD RSP,0x10\nPOP RBX\nJMP 0x00403310\n'
p648
S'53\n48 83 ec 10\n48 8b 05 cc 90 20 00\n48 85 c0\n74 50\n83 78 18 01\n75 5a\n48 8b 40 10\n48 8b 18\n48 83 7b 48 00\n74 64\n48 c7 44 24 08 00 00 00 00\n48 8d 74 24 08\n48 89 df\ne8 f5 1d 00 00\n48 8b 74 24 08\n48 85 f6\n74 16\n48 8b 3d bc 91 20 00\ne8 df 12 00 00\n48 8b 7c 24 08\ne8 45 dc ff ff\n48 83 c4 10\n5b\nc3\n48 8b 3d a0 91 20 00\n48 8b 35 29 92 20 00\neb 0e\n48 8b 3d 90 91 20 00\n48 8b 35 29 92 20 00\n48 83 c4 10\n5b\ne9 a7 12 00 00\nbf 50 df 60 00\ne8 2d dd ff ff\nbf 50 df 60 00\nbe 01 00 00 00\ne8 ee dd ff ff\nbf 50 df 60 00\n48 89 de\ne8 a1 1f 00 00\n48 8b 05 22 90 20 00\n48 8b 38\nbe 05 00 00 00\n31 d2\n48 83 c4 10\n5b\ne9 56 e4 ff ff\n'
p649
S'.text:0000000000404df0\n.text:0000000000404df1\n.text:0000000000404df5\n.text:0000000000404dfc\n.text:0000000000404dff\n.text:0000000000404e01\n.text:0000000000404e05\n.text:0000000000404e07\n.text:0000000000404e0b\n.text:0000000000404e0e\n.text:0000000000404e13\n.text:0000000000404e15\n.text:0000000000404e1e\n.text:0000000000404e23\n.text:0000000000404e26\n.text:0000000000404e2b\n.text:0000000000404e30\n.text:0000000000404e33\n.text:0000000000404e35\n.text:0000000000404e3c\n.text:0000000000404e41\n.text:0000000000404e46\n.text:0000000000404e4b\n.text:0000000000404e4f\n.text:0000000000404e50\n.text:0000000000404e51\n.text:0000000000404e58\n.text:0000000000404e5f\n.text:0000000000404e61\n.text:0000000000404e68\n.text:0000000000404e6f\n.text:0000000000404e73\n.text:0000000000404e74\n.text:0000000000404e79\n.text:0000000000404e7e\n.text:0000000000404e83\n.text:0000000000404e88\n.text:0000000000404e8d\n.text:0000000000404e92\n.text:0000000000404e97\n.text:0000000000404e9a\n.text:0000000000404e9f\n.text:0000000000404ea6\n.text:0000000000404ea9\n.text:0000000000404eae\n.text:0000000000404eb0\n.text:0000000000404eb4\n.text:0000000000404eb5\n'
p650
tp651
sS'XrmUniqueQuark'
p652
(S'\n__stdcall XrmUniqueQuark()\n'
p653
V\u000avoid XrmUniqueQuark(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmUniqueQuark_0060d2e8)();\u000a  return;\u000a}\u000a\u000a
p654
S'JMP qword ptr [0x0060d2e8]\n'
p655
S'ff 25 42 a7 20 00\n'
p656
S'.plt:0000000000402ba0\n'
p657
tp658
sS'XtCreateWidget'
p659
(S'\n__stdcall XtCreateWidget()\n'
p660
V\u000avoid XtCreateWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreateWidget_0060d058)();\u000a  return;\u000a}\u000a\u000a
p661
S'JMP qword ptr [0x0060d058]\n'
p662
S'ff 25 d2 a9 20 00\n'
p663
S'.plt:0000000000402680\n'
p664
tp665
sS'XtIsSubclass'
p666
(S'\n__stdcall XtIsSubclass()\n'
p667
V\u000avoid XtIsSubclass(void)\u000a\u000a{\u000a  (*(code *)PTR_XtIsSubclass_0060d178)();\u000a  return;\u000a}\u000a\u000a
p668
S'JMP qword ptr [0x0060d178]\n'
p669
S'ff 25 b2 a8 20 00\n'
p670
S'.plt:00000000004028c0\n'
p671
tp672
sS'PopupOnNode'
p673
(S'\n__stdcall PopupOnNode(WNode * node, Widget shell)\n'
p674
V\u000avoid PopupOnNode(WNode *node,Widget shell)\u000a\u000a{\u000a  short sVar1;\u000a  undefined8 uVar2;\u000a  undefined8 uVar3;\u000a  long lVar4;\u000a  Arg args [3];\u000a  short local_52;\u000a  short local_50;\u000a  short local_4e;\u000a  ushort local_4c;\u000a  ushort local_4a;\u000a  undefined8 local_48;\u000a  ushort *local_40;\u000a  undefined8 local_38;\u000a  ushort *local_30;\u000a  undefined8 local_28;\u000a  short *local_20;\u000a  \u000a  local_48 = 0x60c6e8;\u000a  local_40 = &local_4a;\u000a  local_38 = 0x60c46a;\u000a  local_30 = &local_4c;\u000a  local_28 = 0x60c3fc;\u000a  local_20 = &local_52;\u000a  XtGetValues(node->widget,&local_48,3);\u000a  XtTranslateCoords(node->widget,(ulong)(uint)(int)(short)((local_4a >> 1) + local_52),\u000a                    (ulong)(uint)(int)(short)((local_4c >> 1) + local_52),&local_4e,&local_50);\u000a  uVar2 = XtParseTranslationTable("<Message>WM_PROTOCOLS: quit()");\u000a  XtOverrideTranslations(shell,uVar2);\u000a  XtRealizeWidget(shell);\u000a  uVar2 = XtDisplay(shell);\u000a  wm_delete_window = XInternAtom(uVar2,"WM_DELETE_WINDOW",0);\u000a  uVar2 = XtDisplay(shell);\u000a  uVar3 = XtWindow(shell);\u000a  XSetWMProtocols(uVar2,uVar3,&wm_delete_window);\u000a  XtGetValues(shell,&local_48,3);\u000a  local_4e = local_4e - ((local_4a >> 1) + local_52);\u000a  local_50 = local_50 - ((local_4c >> 1) + local_52);\u000a  lVar4 = XtScreen(shell);\u000a  sVar1 = (short)*(undefined4 *)(lVar4 + 0x18) - (local_52 * 2 + local_4a);\u000a  if (sVar1 < local_4e) {\u000a    local_4e = sVar1;\u000a  }\u000a  if (local_4e < 0) {\u000a    local_4e = 0;\u000a  }\u000a  lVar4 = XtScreen(shell);\u000a  sVar1 = (short)*(undefined4 *)(lVar4 + 0x1c) - (local_52 * 2 + local_4c);\u000a  if (sVar1 < local_50) {\u000a    local_50 = sVar1;\u000a  }\u000a  if (local_50 < 0) {\u000a    local_50 = 0;\u000a  }\u000a  local_48 = 0x60c6f5;\u000a  local_40 = (ushort *)(long)local_4e;\u000a  local_38 = 0x60c6f7;\u000a  local_30 = (ushort *)(long)local_50;\u000a  XtSetValues(shell,&local_48,2);\u000a  XtPopup(shell,0);\u000a  return;\u000a}\u000a\u000a
p675
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R15,RSI\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x10],0x60c6e8\nLEA RAX,[RSP + 0xe]\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x60c46a\nLEA RAX,[RSP + 0xc]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c3fc\nLEA RAX,[RSP + 0x6]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RDI,qword ptr [RBX + 0x40]\nLEA R14,[RSP + 0x10]\nMOV EDX,0x3\nMOV RSI,R14\nCALL 0x004027d0\nMOV RDI,qword ptr [RBX + 0x40]\nMOVZX EAX,word ptr [RSP + 0xe]\nSHR EAX,1\nMOVZX ECX,word ptr [RSP + 0x6]\nADD EAX,ECX\nMOVZX EDX,word ptr [RSP + 0xc]\nSHR EDX,1\nADD EDX,ECX\nMOVSX ESI,AX\nMOVSX EDX,DX\nLEA RCX,[RSP + 0xa]\nLEA R8,[RSP + 0x8]\nCALL 0x00402660\nMOV EDI,0x409870\nCALL 0x00402ad0\nMOV RDI,R15\nMOV RSI,RAX\nCALL 0x004029e0\nMOV RDI,R15\nCALL 0x00402980\nMOV RDI,R15\nCALL 0x00402ab0\nMOV ESI,0x40988e\nXOR EDX,EDX\nMOV RDI,RAX\nCALL 0x00402a60\nMOV qword ptr [0x0060dfd0],RAX\nMOV RDI,R15\nCALL 0x00402ab0\nMOV RBX,RAX\nMOV RDI,R15\nCALL 0x004027e0\nMOV EDX,0x60dfd0\nMOV ECX,0x1\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x004029c0\nMOV EDX,0x3\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x004027d0\nMOVZX EAX,word ptr [RSP + 0xe]\nSHR EAX,1\nADD AX,word ptr [RSP + 0x6]\nSUB word ptr [RSP + 0xa],AX\nMOVZX EAX,word ptr [RSP + 0xc]\nSHR EAX,1\nADD AX,word ptr [RSP + 0x6]\nSUB word ptr [RSP + 0x8],AX\nMOV RDI,R15\nCALL 0x00402820\nMOV EAX,dword ptr [RAX + 0x18]\nMOVZX ECX,word ptr [RSP + 0x6]\nADD ECX,ECX\nADD CX,word ptr [RSP + 0xe]\nMOVZX ECX,CX\nSUB EAX,ECX\nMOVSX ECX,word ptr [RSP + 0xa]\nMOVSX EDX,AX\nCMP ECX,EDX\nJLE 0x004083c3\nMOV word ptr [RSP + 0xa],AX\nMOV CX,AX\nTEST CX,CX\nJNS 0x004083cf\nMOV word ptr [RSP + 0xa],0x0\nMOV RDI,R15\nCALL 0x00402820\nMOV EAX,dword ptr [RAX + 0x1c]\nMOVZX ECX,word ptr [RSP + 0x6]\nADD ECX,ECX\nADD CX,word ptr [RSP + 0xc]\nMOVZX ECX,CX\nSUB EAX,ECX\nMOVSX ECX,word ptr [RSP + 0x8]\nMOVSX EDX,AX\nCMP ECX,EDX\nJLE 0x004083ff\nMOV word ptr [RSP + 0x8],AX\nMOV CX,AX\nTEST CX,CX\nJNS 0x0040840b\nMOV word ptr [RSP + 0x8],0x0\nMOV qword ptr [RSP + 0x10],0x60c6f5\nMOVSX RAX,word ptr [RSP + 0xa]\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x60c6f7\nMOVSX RAX,word ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x28],RAX\nLEA RSI,[RSP + 0x10]\nMOV EDX,0x2\nMOV RDI,R15\nCALL 0x00402790\nXOR ESI,ESI\nMOV RDI,R15\nCALL 0x004029b0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p676
S'41 57\n41 56\n53\n48 83 ec 40\n49 89 f7\n48 89 fb\n48 c7 44 24 10 e8 c6 60 00\n48 8d 44 24 0e\n48 89 44 24 18\n48 c7 44 24 20 6a c4 60 00\n48 8d 44 24 0c\n48 89 44 24 28\n48 c7 44 24 30 fc c3 60 00\n48 8d 44 24 06\n48 89 44 24 38\n48 8b 7b 40\n4c 8d 74 24 10\nba 03 00 00 00\n4c 89 f6\ne8 02 a5 ff ff\n48 8b 7b 40\n0f b7 44 24 0e\nd1 e8\n0f b7 4c 24 06\n01 c8\n0f b7 54 24 0c\nd1 ea\n01 ca\n0f bf f0\n0f bf d2\n48 8d 4c 24 0a\n4c 8d 44 24 08\ne8 62 a3 ff ff\nbf 70 98 40 00\ne8 c8 a7 ff ff\n4c 89 ff\n48 89 c6\ne8 cd a6 ff ff\n4c 89 ff\ne8 65 a6 ff ff\n4c 89 ff\ne8 8d a7 ff ff\nbe 8e 98 40 00\n31 d2\n48 89 c7\ne8 2e a7 ff ff\n48 89 05 97 5c 20 00\n4c 89 ff\ne8 6f a7 ff ff\n48 89 c3\n4c 89 ff\ne8 94 a4 ff ff\nba d0 df 60 00\nb9 01 00 00 00\n48 89 df\n48 89 c6\ne8 5f a6 ff ff\nba 03 00 00 00\n4c 89 ff\n4c 89 f6\ne8 5f a4 ff ff\n0f b7 44 24 0e\nd1 e8\n66 03 44 24 06\n66 29 44 24 0a\n0f b7 44 24 0c\nd1 e8\n66 03 44 24 06\n66 29 44 24 08\n4c 89 ff\ne8 85 a4 ff ff\n8b 40 18\n0f b7 4c 24 06\n01 c9\n66 03 4c 24 0e\n0f b7 c9\n29 c8\n0f bf 4c 24 0a\n0f bf d0\n39 d1\n7e 08\n66 89 44 24 0a\n66 89 c1\n66 85 c9\n79 07\n66 c7 44 24 0a 00 00\n4c 89 ff\ne8 49 a4 ff ff\n8b 40 1c\n0f b7 4c 24 06\n01 c9\n66 03 4c 24 0c\n0f b7 c9\n29 c8\n0f bf 4c 24 08\n0f bf d0\n39 d1\n7e 08\n66 89 44 24 08\n66 89 c1\n66 85 c9\n79 07\n66 c7 44 24 08 00 00\n48 c7 44 24 10 f5 c6 60 00\n48 0f bf 44 24 0a\n48 89 44 24 18\n48 c7 44 24 20 f7 c6 60 00\n48 0f bf 44 24 08\n48 89 44 24 28\n48 8d 74 24 10\nba 02 00 00 00\n4c 89 ff\ne8 4b a3 ff ff\n31 f6\n4c 89 ff\ne8 61 a5 ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p677
S'.text:0000000000408270\n.text:0000000000408272\n.text:0000000000408274\n.text:0000000000408275\n.text:0000000000408279\n.text:000000000040827c\n.text:000000000040827f\n.text:0000000000408288\n.text:000000000040828d\n.text:0000000000408292\n.text:000000000040829b\n.text:00000000004082a0\n.text:00000000004082a5\n.text:00000000004082ae\n.text:00000000004082b3\n.text:00000000004082b8\n.text:00000000004082bc\n.text:00000000004082c1\n.text:00000000004082c6\n.text:00000000004082c9\n.text:00000000004082ce\n.text:00000000004082d2\n.text:00000000004082d7\n.text:00000000004082d9\n.text:00000000004082de\n.text:00000000004082e0\n.text:00000000004082e5\n.text:00000000004082e7\n.text:00000000004082e9\n.text:00000000004082ec\n.text:00000000004082ef\n.text:00000000004082f4\n.text:00000000004082f9\n.text:00000000004082fe\n.text:0000000000408303\n.text:0000000000408308\n.text:000000000040830b\n.text:000000000040830e\n.text:0000000000408313\n.text:0000000000408316\n.text:000000000040831b\n.text:000000000040831e\n.text:0000000000408323\n.text:0000000000408328\n.text:000000000040832a\n.text:000000000040832d\n.text:0000000000408332\n.text:0000000000408339\n.text:000000000040833c\n.text:0000000000408341\n.text:0000000000408344\n.text:0000000000408347\n.text:000000000040834c\n.text:0000000000408351\n.text:0000000000408356\n.text:0000000000408359\n.text:000000000040835c\n.text:0000000000408361\n.text:0000000000408366\n.text:0000000000408369\n.text:000000000040836c\n.text:0000000000408371\n.text:0000000000408376\n.text:0000000000408378\n.text:000000000040837d\n.text:0000000000408382\n.text:0000000000408387\n.text:0000000000408389\n.text:000000000040838e\n.text:0000000000408393\n.text:0000000000408396\n.text:000000000040839b\n.text:000000000040839e\n.text:00000000004083a3\n.text:00000000004083a5\n.text:00000000004083aa\n.text:00000000004083ad\n.text:00000000004083af\n.text:00000000004083b4\n.text:00000000004083b7\n.text:00000000004083b9\n.text:00000000004083bb\n.text:00000000004083c0\n.text:00000000004083c3\n.text:00000000004083c6\n.text:00000000004083c8\n.text:00000000004083cf\n.text:00000000004083d2\n.text:00000000004083d7\n.text:00000000004083da\n.text:00000000004083df\n.text:00000000004083e1\n.text:00000000004083e6\n.text:00000000004083e9\n.text:00000000004083eb\n.text:00000000004083f0\n.text:00000000004083f3\n.text:00000000004083f5\n.text:00000000004083f7\n.text:00000000004083fc\n.text:00000000004083ff\n.text:0000000000408402\n.text:0000000000408404\n.text:000000000040840b\n.text:0000000000408414\n.text:000000000040841a\n.text:000000000040841f\n.text:0000000000408428\n.text:000000000040842e\n.text:0000000000408433\n.text:0000000000408438\n.text:000000000040843d\n.text:0000000000408440\n.text:0000000000408445\n.text:0000000000408447\n.text:000000000040844a\n.text:000000000040844f\n.text:0000000000408453\n.text:0000000000408454\n.text:0000000000408456\n.text:0000000000408458\n'
p678
tp679
sS'ConvertCommand'
p680
(S'\n__stdcall ConvertCommand(Widget w, Atom * selection, Atom * target, Atom * type_ret, XtPointer * value_ret, ulong * length_ret, int * format_ret)\n'
p681
V\u000aBoolean ConvertCommand(Widget w,Atom *selection,Atom *target,Atom *type_ret,XtPointer *value_ret,\u000a                      ulong *length_ret,int *format_ret)\u000a\u000a{\u000a  if (*selection != atom_comm) {\u000a    return 0;\u000a  }\u000a  if (*target == atom_command) {\u000a    *type_ret = atom_editres_protocol;\u000a    *(uchar **)value_ret = global_client.stream.real_top;\u000a    *length_ret = global_client.stream.size + 6;\u000a    *format_ret = 8;\u000a    return 1;\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p682
S'MOV RAX,qword ptr [RSI]\nCMP RAX,qword ptr [0x0060de90]\nJNZ 0x00403638\nMOV RAX,qword ptr [RDX]\nCMP RAX,qword ptr [0x0060dea0]\nJNZ 0x0040363b\nMOV RAX,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [0x0060deb0]\nMOV qword ptr [RCX],RDX\nMOV RCX,qword ptr [0x0060df60]\nMOV qword ptr [R8],RCX\nMOV RCX,qword ptr [0x0060df50]\nADD RCX,0x6\nMOV qword ptr [R9],RCX\nMOV dword ptr [RAX],0x8\nMOV AL,0x1\nRET\nXOR EAX,EAX\nRET\nXOR EAX,EAX\nRET\n'
p683
S'48 8b 06\n48 3b 05 96 a8 20 00\n75 3c\n48 8b 02\n48 3b 05 9a a8 20 00\n75 33\n48 8b 44 24 08\n48 8b 15 9c a8 20 00\n48 89 11\n48 8b 0d 42 a9 20 00\n49 89 08\n48 8b 0d 28 a9 20 00\n48 83 c1 06\n49 89 09\nc7 00 08 00 00 00\nb0 01\nc3\n31 c0\nc3\n31 c0\nc3\n'
p684
S'.text:00000000004035f0\n.text:00000000004035f3\n.text:00000000004035fa\n.text:00000000004035fc\n.text:00000000004035ff\n.text:0000000000403606\n.text:0000000000403608\n.text:000000000040360d\n.text:0000000000403614\n.text:0000000000403617\n.text:000000000040361e\n.text:0000000000403621\n.text:0000000000403628\n.text:000000000040362c\n.text:000000000040362f\n.text:0000000000403635\n.text:0000000000403637\n.text:0000000000403638\n.text:000000000040363a\n.text:000000000040363b\n.text:000000000040363d\n'
p685
tp686
sS'printf'
p687
(S'\n__stdcall printf(char * __format)\n'
p688
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_0060d140)();\u000a  return iVar1;\u000a}\u000a\u000a
p689
S'JMP qword ptr [0x0060d140]\n'
p690
S'ff 25 ea a8 20 00\n'
p691
S'.plt:0000000000402850\n'
p692
tp693
sS'strcat'
p694
(S'\n__stdcall strcat(char * __dest, char * __src)\n'
p695
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcat(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcat_0060d308)();\u000a  return pcVar1;\u000a}\u000a\u000a
p696
S'JMP qword ptr [0x0060d308]\n'
p697
S'ff 25 22 a7 20 00\n'
p698
S'.plt:0000000000402be0\n'
p699
tp700
sS'Quarkify'
p701
(S'\n__stdcall Quarkify(char * * list, char * ptr)\n'
p702
V\u000aXrmQuarkList Quarkify(char **list,char *ptr)\u000a\u000a{\u000a  char *pcVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  long lVar4;\u000a  XrmQuarkList piVar5;\u000a  uint uVar6;\u000a  undefined8 in_RDX;\u000a  XrmQuarkList piVar7;\u000a  \u000a  if (*list == (char *)0x0) {\u000a    iVar3 = 0;\u000a  }\u000a  else {\u000a    lVar4 = 0;\u000a    do {\u000a      lVar2 = lVar4 + 1;\u000a      lVar4 = lVar4 + 1;\u000a      iVar3 = (int)lVar4;\u000a    } while (list[lVar2] != (char *)0x0);\u000a  }\u000a  uVar6 = (uint)(ptr != (char *)0x0) + iVar3;\u000a  piVar5 = (XrmQuarkList)XtMalloc((ulong)(uVar6 * 4 + 4),ptr,in_RDX,(ulong)uVar6);\u000a  piVar7 = piVar5;\u000a  if (*list != (char *)0x0) {\u000a    list = list + 1;\u000a    piVar7 = piVar5;\u000a    do {\u000a      iVar3 = XrmStringToQuark();\u000a      *piVar7 = iVar3;\u000a      piVar7 = piVar7 + 1;\u000a      pcVar1 = *list;\u000a      list = list + 1;\u000a    } while (pcVar1 != (char *)0x0);\u000a  }\u000a  if (ptr != (char *)0x0) {\u000a    iVar3 = XrmStringToQuark(ptr);\u000a    *piVar7 = iVar3;\u000a    piVar7 = piVar7 + 1;\u000a  }\u000a  *piVar7 = 0;\u000a  return piVar5;\u000a}\u000a\u000a
p703
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV R12,RDI\nCMP qword ptr [R12],0x0\nJZ 0x00406d5e\nXOR EAX,EAX\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R12 + RAX*0x8 + 0x8],0x0\nLEA RAX,[RAX + 0x1]\nJNZ 0x00406d50\nJMP 0x00406d60\nXOR EAX,EAX\nXOR ECX,ECX\nTEST R14,R14\nSETNZ CL\nADD ECX,EAX\nLEA EDI,[0x4 + RCX*0x4]\nCALL 0x00402760\nMOV R15,RAX\nMOV RDI,qword ptr [R12]\nTEST RDI,RDI\nJZ 0x00406daa\nADD R12,0x8\nMOV RBX,R15\nNOP dword ptr [RAX]\nCALL 0x00402c30\nMOV dword ptr [RBX],EAX\nADD RBX,0x4\nMOV RDI,qword ptr [R12]\nADD R12,0x8\nTEST RDI,RDI\nJNZ 0x00406d90\nJMP 0x00406dad\nMOV RBX,R15\nTEST R14,R14\nJZ 0x00406dc0\nMOV RDI,R14\nCALL 0x00402c30\nMOV dword ptr [RBX],EAX\nADD RBX,0x4\nMOV dword ptr [RBX],0x0\nMOV RAX,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p704
S'41 57\n41 56\n41 54\n53\n50\n49 89 f6\n49 89 fc\n49 83 3c 24 00\n74 19\n31 c0\n66 0f 1f 84 00 00 00 00 00\n49 83 7c c4 08 00\n48 8d 40 01\n75 f4\neb 02\n31 c0\n31 c9\n4d 85 f6\n0f 95 c1\n01 c1\n8d 3c 8d 04 00 00 00\ne8 ea b9 ff ff\n49 89 c7\n49 8b 3c 24\n48 85 ff\n74 28\n49 83 c4 08\n4c 89 fb\n0f 1f 80 00 00 00 00\ne8 9b be ff ff\n89 03\n48 83 c3 04\n49 8b 3c 24\n49 83 c4 08\n48 85 ff\n75 e8\neb 03\n4c 89 fb\n4d 85 f6\n74 0e\n4c 89 f7\ne8 76 be ff ff\n89 03\n48 83 c3 04\nc7 03 00 00 00 00\n4c 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p705
S'.text:0000000000406d30\n.text:0000000000406d32\n.text:0000000000406d34\n.text:0000000000406d36\n.text:0000000000406d37\n.text:0000000000406d38\n.text:0000000000406d3b\n.text:0000000000406d3e\n.text:0000000000406d43\n.text:0000000000406d45\n.text:0000000000406d47\n.text:0000000000406d50\n.text:0000000000406d56\n.text:0000000000406d5a\n.text:0000000000406d5c\n.text:0000000000406d5e\n.text:0000000000406d60\n.text:0000000000406d62\n.text:0000000000406d65\n.text:0000000000406d68\n.text:0000000000406d6a\n.text:0000000000406d71\n.text:0000000000406d76\n.text:0000000000406d79\n.text:0000000000406d7d\n.text:0000000000406d80\n.text:0000000000406d82\n.text:0000000000406d86\n.text:0000000000406d89\n.text:0000000000406d90\n.text:0000000000406d95\n.text:0000000000406d97\n.text:0000000000406d9b\n.text:0000000000406d9f\n.text:0000000000406da3\n.text:0000000000406da6\n.text:0000000000406da8\n.text:0000000000406daa\n.text:0000000000406dad\n.text:0000000000406db0\n.text:0000000000406db2\n.text:0000000000406db5\n.text:0000000000406dba\n.text:0000000000406dbc\n.text:0000000000406dc0\n.text:0000000000406dc6\n.text:0000000000406dc9\n.text:0000000000406dcd\n.text:0000000000406dce\n.text:0000000000406dd0\n.text:0000000000406dd2\n.text:0000000000406dd4\n'
p706
tp707
sS'_XEditResPut16'
p708
(S'\n__stdcall _XEditResPut16()\n'
p709
V\u000avoid _XEditResPut16(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResPut16_0060d358)();\u000a  return;\u000a}\u000a\u000a
p710
S'JMP qword ptr [0x0060d358]\n'
p711
S'ff 25 d2 a6 20 00\n'
p712
S'.plt:0000000000402c80\n'
p713
tp714
sS'PerformTreeToFileDump'
p715
(S'\n__stdcall PerformTreeToFileDump(WNode * node, FILE * fp)\n'
p716
V\u000avoid PerformTreeToFileDump(WNode *node,FILE *fp)\u000a\u000a{\u000a  FILE *__stream;\u000a  uint uVar1;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  int iVar4;\u000a  \u000a  uVar3 = (ulong)fp & 0xffffffff;\u000a  iVar4 = (int)uVar3;\u000a  if (0 < iVar4) {\u000a    do {\u000a      fputc(9,__stream);\u000a      uVar1 = (int)uVar3 - 1;\u000a      uVar3 = (ulong)uVar1;\u000a    } while (uVar1 != 0);\u000a  }\u000a  fprintf(__stream,"%s  %s\u005cn",node->class,node->name);\u000a  if (node->num_children != 0) {\u000a    uVar3 = 0;\u000a    do {\u000a      PerformTreeToFileDump((WNode *)node->children[uVar3],(FILE *)(ulong)(iVar4 + 1));\u000a      uVar2 = uVar3 + 1;\u000a      uVar3 = uVar2 & 0xffffffff;\u000a    } while ((uint)uVar2 < node->num_children);\u000a  }\u000a  return;\u000a}\u000a\u000a
p717
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R14D,ESI\nMOV RBP,RDI\nTEST R14D,R14D\nJLE 0x00409311\nMOV EBX,R14D\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDI,0x9\nMOV RSI,R15\nCALL 0x00402900\nDEC EBX\nJNZ 0x00409300\nMOV RCX,qword ptr [RBP]\nMOV RDX,qword ptr [RBP + 0x8]\nMOV ESI,0x40a41f\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00402970\nCMP dword ptr [RBP + 0x38],0x0\nJZ 0x0040935b\nINC R14D\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [RBP + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nMOV ESI,R14D\nMOV RDX,R15\nCALL 0x004092e0\nINC RBX\nCMP EBX,dword ptr [RBP + 0x38]\nJC 0x00409340\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p718
S'55\n41 57\n41 56\n53\n50\n49 89 d7\n41 89 f6\n48 89 fd\n45 85 f6\n7e 1c\n44 89 f3\n0f 1f 84 00 00 00 00 00\nbf 09 00 00 00\n4c 89 fe\ne8 f3 95 ff ff\nff cb\n75 ef\n48 8b 4d 00\n48 8b 55 08\nbe 1f a4 40 00\n31 c0\n4c 89 ff\ne8 48 96 ff ff\n83 7d 38 00\n74 2d\n41 ff c6\n31 db\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 45 28\n48 8b 3c d8\n44 89 f6\n4c 89 fa\ne8 8d ff ff ff\n48 ff c3\n3b 5d 38\n72 e5\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p719
S'.text:00000000004092e0\n.text:00000000004092e1\n.text:00000000004092e3\n.text:00000000004092e5\n.text:00000000004092e6\n.text:00000000004092e7\n.text:00000000004092ea\n.text:00000000004092ed\n.text:00000000004092f0\n.text:00000000004092f3\n.text:00000000004092f5\n.text:00000000004092f8\n.text:0000000000409300\n.text:0000000000409305\n.text:0000000000409308\n.text:000000000040930d\n.text:000000000040930f\n.text:0000000000409311\n.text:0000000000409315\n.text:0000000000409319\n.text:000000000040931e\n.text:0000000000409320\n.text:0000000000409323\n.text:0000000000409328\n.text:000000000040932c\n.text:000000000040932e\n.text:0000000000409331\n.text:0000000000409333\n.text:0000000000409340\n.text:0000000000409344\n.text:0000000000409348\n.text:000000000040934b\n.text:000000000040934e\n.text:0000000000409353\n.text:0000000000409356\n.text:0000000000409359\n.text:000000000040935b\n.text:000000000040935f\n.text:0000000000409360\n.text:0000000000409362\n.text:0000000000409364\n.text:0000000000409365\n'
p720
tp721
sS'XawTreeForceLayout'
p722
(S'\n__stdcall XawTreeForceLayout()\n'
p723
V\u000avoid XawTreeForceLayout(void)\u000a\u000a{\u000a  (*(code *)PTR_XawTreeForceLayout_0060d130)();\u000a  return;\u000a}\u000a\u000a
p724
S'JMP qword ptr [0x0060d130]\n'
p725
S'ff 25 fa a8 20 00\n'
p726
S'.plt:0000000000402830\n'
p727
tp728
sS'XrmGetResource'
p729
(S'\n__stdcall XrmGetResource()\n'
p730
V\u000avoid XrmGetResource(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmGetResource_0060d0a0)();\u000a  return;\u000a}\u000a\u000a
p731
S'JMP qword ptr [0x0060d0a0]\n'
p732
S'ff 25 8a a9 20 00\n'
p733
S'.plt:0000000000402710\n'
p734
tp735
sS'XawToggleGetCurrent'
p736
(S'\n__stdcall XawToggleGetCurrent()\n'
p737
V\u000avoid XawToggleGetCurrent(void)\u000a\u000a{\u000a  (*(code *)PTR_XawToggleGetCurrent_0060d180)();\u000a  return;\u000a}\u000a\u000a
p738
S'JMP qword ptr [0x0060d180]\n'
p739
S'ff 25 aa a8 20 00\n'
p740
S'.plt:00000000004028d0\n'
p741
tp742
sS'XmuClientWindow'
p743
(S'\n__stdcall XmuClientWindow()\n'
p744
V\u000avoid XmuClientWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuClientWindow_0060d018)();\u000a  return;\u000a}\u000a\u000a
p745
S'JMP qword ptr [0x0060d018]\n'
p746
S'ff 25 12 aa 20 00\n'
p747
S'.plt:0000000000402600\n'
p748
tp749
sS'XtSetValues'
p750
(S'\n__stdcall XtSetValues()\n'
p751
V\u000avoid XtSetValues(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetValues_0060d0e0)();\u000a  return;\u000a}\u000a\u000a
p752
S'JMP qword ptr [0x0060d0e0]\n'
p753
S'ff 25 4a a9 20 00\n'
p754
S'.plt:0000000000402790\n'
p755
tp756
sS'AddToFlashList'
p757
(S'\n__stdcall AddToFlashList(TreeInfo * tree_info, GetGeomInfo * geom_info, char * * errors)\n'
p758
V\u000avoid AddToFlashList(TreeInfo *tree_info,GetGeomInfo *geom_info,char **errors)\u000a\u000a{\u000a  WNode *node;\u000a  undefined4 *__s;\u000a  char buf [8192];\u000a  undefined4 local_2018;\u000a  undefined4 uStack8212;\u000a  undefined4 uStack8208;\u000a  undefined4 uStack8204;\u000a  undefined4 local_2008;\u000a  undefined4 uStack8196;\u000a  undefined4 uStack8192;\u000a  undefined4 uStack8188;\u000a  char cStack8184;\u000a  undefined4 uStack8183;\u000a  undefined4 uStack8179;\u000a  undefined4 uStack8175;\u000a  \u000a  node = FindNode((WNode *)tree_info->top_node,(geom_info->widgets).ids);\u000a  if (node == (WNode *)0x0) {\u000a    cStack8184 = "Editres Internal Error: Unable to FindNode.\u005cn"[32];\u000a    uStack8183 = "Editres Internal Error: Unable to FindNode.\u005cn"._33_4_;\u000a    uStack8179 = "Editres Internal Error: Unable to FindNode.\u005cn"._37_4_;\u000a    uStack8175 = "Editres Internal Error: Unable to FindNode.\u005cn"._41_4_;\u000a    local_2008 = "Editres Internal Error: Unable to FindNode.\u005cn"._16_4_;\u000a    uStack8196 = "Editres Internal Error: Unable to FindNode.\u005cn"._20_4_;\u000a    uStack8192 = "Editres Internal Error: Unable to FindNode.\u005cn"._24_4_;\u000a    uStack8188 = "Editres Internal Error: Unable to FindNode.\u005cn"._28_4_;\u000a    local_2018 = "Editres Internal Error: Unable to FindNode.\u005cn"._0_4_;\u000a    uStack8212 = "Editres Internal Error: Unable to FindNode.\u005cn"._4_4_;\u000a    uStack8208 = "Editres Internal Error: Unable to FindNode.\u005cn"._8_4_;\u000a    uStack8204 = "Editres Internal Error: Unable to FindNode.\u005cn"._12_4_;\u000a    __s = &local_2018;\u000a  }\u000a  else {\u000a    if (geom_info->error == 0) {\u000a      if (geom_info->visable != 0) {\u000a        _AddToFlashList(tree_info,errors,node);\u000a        return;\u000a      }\u000a      __s = &local_2018;\u000a      sprintf((char *)__s,"%s(0x%lx) - This widget is not mapped\u005cn",node->name,node->id);\u000a    }\u000a    else {\u000a      __s = (undefined4 *)geom_info->message;\u000a    }\u000a  }\u000a  AddString(errors,(char *)__s);\u000a  return;\u000a}\u000a\u000a
p759
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x2010\nMOV R14,RDX\nMOV RBX,RSI\nMOV R15,RDI\nMOV RDI,qword ptr [R15 + 0x8]\nMOV RSI,qword ptr [RBX + 0x10]\nMOVZX EDX,word ptr [RBX + 0x8]\nCALL 0x004062c0\nTEST RAX,RAX\nJZ 0x004046a7\nCMP byte ptr [RBX + 0x20],0x0\nJZ 0x004046e5\nMOV RSI,qword ptr [RBX + 0x28]\nJMP 0x004046d0\nMOVUPS XMM0,xmmword ptr [0x0040993f]\nMOVUPS xmmword ptr [RSP + 0x2d],XMM0\nMOVUPS XMM0,xmmword ptr [0x00409932]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x00409922]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nLEA RSI,[RSP + 0x10]\nMOV RDI,R14\nCALL 0x00406260\nADD RSP,0x2010\nPOP RBX\nPOP R14\nPOP R15\nRET\nCMP byte ptr [RBX + 0x30],0x0\nJZ 0x00404719\nMOVSX ECX,word ptr [RBX + 0x32]\nMOVSX R8D,word ptr [RBX + 0x34]\nMOVZX R9D,word ptr [RBX + 0x36]\nMOVZX EDX,word ptr [RBX + 0x3a]\nADD R9D,EDX\nMOVZX ESI,word ptr [RBX + 0x38]\nADD ESI,EDX\nMOV dword ptr [RSP],ESI\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00404810\nJMP 0x004046d8\nMOV RDX,qword ptr [RAX]\nMOV RCX,qword ptr [RAX + 0x10]\nLEA RBX,[RSP + 0x10]\nMOV ESI,0x40994f\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,R14\nMOV RSI,RBX\nJMP 0x004046d3\n'
p760
S'41 57\n41 56\n53\n48 81 ec 10 20 00 00\n49 89 d6\n48 89 f3\n49 89 ff\n49 8b 7f 08\n48 8b 73 10\n0f b7 53 08\ne8 2a 1c 00 00\n48 85 c0\n74 0c\n80 7b 20 00\n74 44\n48 8b 73 28\neb 29\n0f 10 05 91 52 00 00\n0f 11 44 24 2d\n0f 10 05 78 52 00 00\n0f 29 44 24 20\n0f 10 05 5c 52 00 00\n0f 29 44 24 10\n48 8d 74 24 10\n4c 89 f7\ne8 88 1b 00 00\n48 81 c4 10 20 00 00\n5b\n41 5e\n41 5f\nc3\n80 7b 30 00\n74 2e\n0f bf 4b 32\n44 0f bf 43 34\n44 0f b7 4b 36\n0f b7 53 3a\n41 01 d1\n0f b7 73 38\n01 d6\n89 34 24\n4c 89 ff\n4c 89 f6\n48 89 c2\ne8 f9 00 00 00\neb bf\n48 8b 10\n48 8b 48 10\n48 8d 5c 24 10\nbe 4f 99 40 00\n31 c0\n48 89 df\ne8 bc e4 ff ff\n4c 89 f7\n48 89 de\neb 97\n'
p761
S'.text:0000000000404670\n.text:0000000000404672\n.text:0000000000404674\n.text:0000000000404675\n.text:000000000040467c\n.text:000000000040467f\n.text:0000000000404682\n.text:0000000000404685\n.text:0000000000404689\n.text:000000000040468d\n.text:0000000000404691\n.text:0000000000404696\n.text:0000000000404699\n.text:000000000040469b\n.text:000000000040469f\n.text:00000000004046a1\n.text:00000000004046a5\n.text:00000000004046a7\n.text:00000000004046ae\n.text:00000000004046b3\n.text:00000000004046ba\n.text:00000000004046bf\n.text:00000000004046c6\n.text:00000000004046cb\n.text:00000000004046d0\n.text:00000000004046d3\n.text:00000000004046d8\n.text:00000000004046df\n.text:00000000004046e0\n.text:00000000004046e2\n.text:00000000004046e4\n.text:00000000004046e5\n.text:00000000004046e9\n.text:00000000004046eb\n.text:00000000004046ef\n.text:00000000004046f4\n.text:00000000004046f9\n.text:00000000004046fd\n.text:0000000000404700\n.text:0000000000404704\n.text:0000000000404706\n.text:0000000000404709\n.text:000000000040470c\n.text:000000000040470f\n.text:0000000000404712\n.text:0000000000404717\n.text:0000000000404719\n.text:000000000040471c\n.text:0000000000404720\n.text:0000000000404725\n.text:000000000040472a\n.text:000000000040472c\n.text:000000000040472f\n.text:0000000000404734\n.text:0000000000404737\n.text:000000000040473a\n'
p762
tp763
sS'ProtocolFailure'
p764
(S'\n__stdcall ProtocolFailure(ProtocolStream * stream)\n'
p765
V\u000achar * ProtocolFailure(ProtocolStream *stream)\u000a\u000a{\u000a  int iVar1;\u000a  size_t sVar2;\u000a  char *__src;\u000a  char *__dest;\u000a  uchar version;\u000a  char buf [8192];\u000a  undefined local_2009;\u000a  char local_2008 [8192];\u000a  \u000a  iVar1 = _XEditResGet8(stream,&local_2009);\u000a  if (iVar1 == 0) {\u000a    if (res_labels[35] == (String)0x0) {\u000a      return (char *)0x0;\u000a    }\u000a    sVar2 = strlen(res_labels[35]);\u000a    __dest = (char *)XtMalloc((ulong)((int)sVar2 + 1));\u000a    __src = res_labels[35];\u000a  }\u000a  else {\u000a    sprintf(local_2008,res_labels[36],&DAT_00409ce4,&DAT_00409ce0);\u000a    sVar2 = strlen(local_2008);\u000a    __dest = (char *)XtMalloc((ulong)((int)sVar2 + 1));\u000a    __src = local_2008;\u000a  }\u000a  __src = strcpy(__dest,__src);\u000a  return __src;\u000a}\u000a\u000a
p766
S'PUSH RBX\nSUB RSP,0x2010\nLEA RSI,[RSP + 0xf]\nCALL 0x00402c90\nTEST EAX,EAX\nJZ 0x00406fae\nMOV RSI,qword ptr [0x0060e120]\nLEA RBX,[RSP + 0x10]\nMOV EDX,0x409ce4\nMOV ECX,0x409ce0\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,RBX\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RDI,RAX\nMOV RSI,RBX\nJMP 0x00406fd1\nMOV RDI,qword ptr [0x0060e118]\nTEST RDI,RDI\nJZ 0x00406fdf\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RSI,qword ptr [0x0060e118]\nMOV RDI,RAX\nCALL 0x004026a0\nADD RSP,0x2010\nPOP RBX\nRET\nXOR EAX,EAX\nJMP 0x00406fd6\n'
p767
S'53\n48 81 ec 10 20 00 00\n48 8d 74 24 0f\ne8 1e bd ff ff\n85 c0\n74 38\n48 8b 35 a3 71 20 00\n48 8d 5c 24 10\nba e4 9c 40 00\nb9 e0 9c 40 00\n31 c0\n48 89 df\ne8 5a bc ff ff\n48 89 df\ne8 52 b8 ff ff\n8d 78 01\ne8 ba b7 ff ff\n48 89 c7\n48 89 de\neb 23\n48 8b 3d 63 71 20 00\n48 85 ff\n74 25\ne8 31 b8 ff ff\n8d 78 01\ne8 99 b7 ff ff\n48 8b 35 4a 71 20 00\n48 89 c7\ne8 ca b6 ff ff\n48 81 c4 10 20 00 00\n5b\nc3\n31 c0\neb f3\n'
p768
S'.text:0000000000406f60\n.text:0000000000406f61\n.text:0000000000406f68\n.text:0000000000406f6d\n.text:0000000000406f72\n.text:0000000000406f74\n.text:0000000000406f76\n.text:0000000000406f7d\n.text:0000000000406f82\n.text:0000000000406f87\n.text:0000000000406f8c\n.text:0000000000406f8e\n.text:0000000000406f91\n.text:0000000000406f96\n.text:0000000000406f99\n.text:0000000000406f9e\n.text:0000000000406fa1\n.text:0000000000406fa6\n.text:0000000000406fa9\n.text:0000000000406fac\n.text:0000000000406fae\n.text:0000000000406fb5\n.text:0000000000406fb8\n.text:0000000000406fba\n.text:0000000000406fbf\n.text:0000000000406fc2\n.text:0000000000406fc7\n.text:0000000000406fce\n.text:0000000000406fd1\n.text:0000000000406fd6\n.text:0000000000406fdd\n.text:0000000000406fde\n.text:0000000000406fdf\n.text:0000000000406fe1\n'
p769
tp770
sS'_XEditResGet32'
p771
(S'\n__stdcall _XEditResGet32()\n'
p772
V\u000avoid _XEditResGet32(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResGet32_0060d040)();\u000a  return;\u000a}\u000a\u000a
p773
S'JMP qword ptr [0x0060d040]\n'
p774
S'ff 25 ea a9 20 00\n'
p775
S'.plt:0000000000402650\n'
p776
tp777
sS'XUngrabPointer'
p778
(S'\n__stdcall XUngrabPointer()\n'
p779
V\u000avoid XUngrabPointer(void)\u000a\u000a{\u000a  (*(code *)PTR_XUngrabPointer_0060d218)();\u000a  return;\u000a}\u000a\u000a
p780
S'JMP qword ptr [0x0060d218]\n'
p781
S'ff 25 12 a8 20 00\n'
p782
S'.plt:0000000000402a00\n'
p783
tp784
sS'XawListUnhighlight'
p785
(S'\n__stdcall XawListUnhighlight()\n'
p786
V\u000avoid XawListUnhighlight(void)\u000a\u000a{\u000a  (*(code *)PTR_XawListUnhighlight_0060d328)();\u000a  return;\u000a}\u000a\u000a
p787
S'JMP qword ptr [0x0060d328]\n'
p788
S'ff 25 02 a7 20 00\n'
p789
S'.plt:0000000000402c20\n'
p790
tp791
sS'fclose'
p792
(S'\n__stdcall fclose(FILE * __stream)\n'
p793
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_0060d0f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p794
S'JMP qword ptr [0x0060d0f0]\n'
p795
S'ff 25 3a a9 20 00\n'
p796
S'.plt:00000000004027b0\n'
p797
tp798
sS'CreateTreeCommandMenu'
p799
(S'\n__stdcall CreateTreeCommandMenu(Widget parent, String toolkit)\n'
p800
V\u000avoid CreateTreeCommandMenu(Widget parent,String toolkit)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  long lVar2;\u000a  code *pcVar3;\u000a  Arg args [1];\u000a  char *local_28;\u000a  String local_20;\u000a  \u000a  if (tmenu == (Widget)0x0) {\u000a    tbutton = (Widget)XtCreateManagedWidget("treeCommands",menuButtonWidgetClass,parent,0,0);\u000a  }\u000a  else {\u000a    XtDestroyWidget();\u000a    TM_set_insensitive = 1;\u000a  }\u000a  local_28 = "menuName";\u000a  local_20 = toolkit;\u000a  XtSetValues(tbutton,&local_28,1);\u000a  tmenu = (Widget)XtCreatePopupShell(toolkit,simpleMenuWidgetClass,tbutton,0,0);\u000a  lVar2 = -0x80;\u000a  do {\u000a    pcVar3 = TreeSelect;\u000a    uVar1 = smeBSBObjectClass;\u000a    switch(*(undefined4 *)("porthole" + lVar2 * 3 + 2)) {\u000a    case 0:\u000a      break;\u000a    default:\u000a      goto switchD_004073be_caseD_1;\u000a    case 2:\u000a      pcVar3 = TreeRelabel;\u000a      uVar1 = smeBSBObjectClass;\u000a      break;\u000a    case 3:\u000a      pcVar3 = (code *)0x0;\u000a      uVar1 = smeLineObjectClass;\u000a      break;\u000a    case 4:\u000a      pcVar3 = FindWidget;\u000a      uVar1 = smeBSBObjectClass;\u000a      break;\u000a    case 5:\u000a      pcVar3 = FlashActiveWidgets;\u000a      uVar1 = smeBSBObjectClass;\u000a    }\u000a    uVar1 = XtCreateManagedWidget(*(undefined8 *)("paned" + lVar2 * 3),uVar1,tmenu,0,0);\u000a    *(undefined8 *)((long)CM_entries + lVar2) = uVar1;\u000a    if (pcVar3 != (code *)0x0) {\u000a      XtAddCallback(uVar1,0x60c408,pcVar3);\u000a    }\u000aswitchD_004073be_caseD_1:\u000a    lVar2 = lVar2 + 8;\u000a    if (lVar2 == 0) {\u000a      if (TM_set_insensitive == 0) {\u000a        SetEntriesSensitive(TM_entries);\u000a      }\u000a      return;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p801
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RSI\nMOV RAX,RDI\nMOV RDI,qword ptr [0x0060df20]\nTEST RDI,RDI\nJZ 0x00407327\nCALL 0x00402b70\nMOV byte ptr [0x0060df28],0x1\nJMP 0x00407347\nMOV RSI,qword ptr [0x0060de60]\nMOV EDI,0x40a25a\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV qword ptr [0x0060df30],RAX\nMOV qword ptr [RSP],0x40a161\nMOV qword ptr [RSP + 0x8],RBX\nMOV RDI,qword ptr [0x0060df30]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nMOV RSI,qword ptr [0x0060dd60]\nMOV RDX,qword ptr [0x0060df30]\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDI,RBX\nCALL 0x00402730\nMOV qword ptr [0x0060df20],RAX\nMOV RBX,-0x80\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EAX,dword ptr [0x409ec8 + RBX + RBX*0x2]\nCMP RAX,0x5\nJA 0x0040742d\nMOV RSI,qword ptr [0x0060dcc0]\nMOV R14D,0x404cc0\nJMP qword ptr [0x409d10 + RAX*0x8]\nMOV R14D,0x404cd0\nJMP 0x004073f0\nMOV RSI,qword ptr [0x0060dd80]\nXOR R14D,R14D\nJMP 0x004073f0\nMOV R14D,0x404c80\nJMP 0x004073f0\nMOV R14D,0x404de0\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [0x409ec0 + RBX + RBX*0x2]\nMOV RDX,qword ptr [0x0060df20]\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x60e1b0 + RBX],RAX\nTEST R14,R14\nJZ 0x0040742d\nMOV RCX,qword ptr [0x409ed0 + RBX + RBX*0x2]\nMOV ESI,0x60c408\nMOV RDI,RAX\nMOV RDX,R14\nCALL 0x00402c70\nADD RBX,0x8\nJNZ 0x004073a0\nMOV AL,byte ptr [0x0060df28]\nTEST AL,AL\nJNZ 0x00407452\nMOV EDI,0x60e130\nMOV ESI,0x10\nXOR EDX,EDX\nCALL 0x004075c0\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p802
S'41 56\n53\n48 83 ec 18\n48 89 f3\n48 89 f8\n48 8b 3d 0c 6c 20 00\n48 85 ff\n74 0e\ne8 52 b8 ff ff\nc6 05 03 6c 20 00 01\neb 20\n48 8b 35 32 6b 20 00\nbf 5a a2 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 10 b4 ff ff\n48 89 05 e9 6b 20 00\n48 c7 04 24 61 a1 40 00\n48 89 5c 24 08\n48 8b 3d d5 6b 20 00\n48 89 e6\nba 01 00 00 00\ne8 28 b4 ff ff\n48 8b 35 f1 69 20 00\n48 8b 15 ba 6b 20 00\n31 c9\n45 31 c0\n48 89 df\ne8 ad b3 ff ff\n48 89 05 96 6b 20 00\n48 c7 c3 80 ff ff ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n8b 84 5b c8 9e 40 00\n48 83 f8 05\n0f 87 7c 00 00 00\n48 8b 35 08 69 20 00\n41 be c0 4c 40 00\nff 24 c5 10 9d 40 00\n41 be d0 4c 40 00\neb 23\n48 8b 35 ac 69 20 00\n45 31 f6\neb 17\n41 be 80 4c 40 00\neb 0f\n41 be e0 4d 40 00\n66 0f 1f 84 00 00 00 00 00\n48 8b bc 5b c0 9e 40 00\n48 8b 15 21 6b 20 00\n31 c9\n45 31 c0\ne8 47 b3 ff ff\n48 89 83 b0 e1 60 00\n4d 85 f6\n74 18\n48 8b 8c 5b d0 9e 40 00\nbe 08 c4 60 00\n48 89 c7\n4c 89 f2\ne8 43 b8 ff ff\n48 83 c3 08\n0f 85 69 ff ff ff\n8a 05 eb 6a 20 00\n84 c0\n75 11\nbf 30 e1 60 00\nbe 10 00 00 00\n31 d2\ne8 6e 01 00 00\n48 83 c4 18\n5b\n41 5e\nc3\n'
p803
S'.text:0000000000407300\n.text:0000000000407302\n.text:0000000000407303\n.text:0000000000407307\n.text:000000000040730a\n.text:000000000040730d\n.text:0000000000407314\n.text:0000000000407317\n.text:0000000000407319\n.text:000000000040731e\n.text:0000000000407325\n.text:0000000000407327\n.text:000000000040732e\n.text:0000000000407333\n.text:0000000000407335\n.text:0000000000407338\n.text:000000000040733b\n.text:0000000000407340\n.text:0000000000407347\n.text:000000000040734f\n.text:0000000000407354\n.text:000000000040735b\n.text:000000000040735e\n.text:0000000000407363\n.text:0000000000407368\n.text:000000000040736f\n.text:0000000000407376\n.text:0000000000407378\n.text:000000000040737b\n.text:000000000040737e\n.text:0000000000407383\n.text:000000000040738a\n.text:0000000000407391\n.text:00000000004073a0\n.text:00000000004073a7\n.text:00000000004073ab\n.text:00000000004073b1\n.text:00000000004073b8\n.text:00000000004073be\n.text:00000000004073c5\n.text:00000000004073cb\n.text:00000000004073cd\n.text:00000000004073d4\n.text:00000000004073d7\n.text:00000000004073d9\n.text:00000000004073df\n.text:00000000004073e1\n.text:00000000004073e7\n.text:00000000004073f0\n.text:00000000004073f8\n.text:00000000004073ff\n.text:0000000000407401\n.text:0000000000407404\n.text:0000000000407409\n.text:0000000000407410\n.text:0000000000407413\n.text:0000000000407415\n.text:000000000040741d\n.text:0000000000407422\n.text:0000000000407425\n.text:0000000000407428\n.text:000000000040742d\n.text:0000000000407431\n.text:0000000000407437\n.text:000000000040743d\n.text:000000000040743f\n.text:0000000000407441\n.text:0000000000407446\n.text:000000000040744b\n.text:000000000040744d\n.text:0000000000407452\n.text:0000000000407456\n.text:0000000000407457\n.text:0000000000407459\n'
p804
tp805
sS'XCreateFontCursor'
p806
(S'\n__stdcall XCreateFontCursor()\n'
p807
V\u000avoid XCreateFontCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateFontCursor_0060d098)();\u000a  return;\u000a}\u000a\u000a
p808
S'JMP qword ptr [0x0060d098]\n'
p809
S'ff 25 92 a9 20 00\n'
p810
S'.plt:0000000000402700\n'
p811
tp812
sS'_XEditResGetString8'
p813
(S'\n__stdcall _XEditResGetString8()\n'
p814
V\u000avoid _XEditResGetString8(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResGetString8_0060d1a0)();\u000a  return;\u000a}\u000a\u000a
p815
S'JMP qword ptr [0x0060d1a0]\n'
p816
S'ff 25 8a a8 20 00\n'
p817
S'.plt:0000000000402910\n'
p818
tp819
sS'FindWidgetFromWindow'
p820
(S'\n__stdcall FindWidgetFromWindow(TreeInfo * tree_info, Window win)\n'
p821
V\u000aWNode * FindWidgetFromWindow(TreeInfo *tree_info,Window win)\u000a\u000a{\u000a  WNode *pWVar1;\u000a  \u000a  if (tree_info != (TreeInfo *)0x0) {\u000a    pWVar1 = FindWidgetFromWindowGivenNode((WNode *)tree_info->top_node,win);\u000a    return pWVar1;\u000a  }\u000a  return (WNode *)0x0;\u000a}\u000a\u000a
p822
S'TEST RDI,RDI\nJZ 0x0040632b\nMOV RDI,qword ptr [RDI + 0x8]\nJMP 0x00406330\nXOR EAX,EAX\nRET\n'
p823
S'48 85 ff\n74 06\n48 8b 7f 08\neb 05\n31 c0\nc3\n'
p824
S'.text:0000000000406320\n.text:0000000000406323\n.text:0000000000406325\n.text:0000000000406329\n.text:000000000040632b\n.text:000000000040632d\n'
p825
tp826
sS'XtPopdown'
p827
(S'\n__stdcall XtPopdown()\n'
p828
V\u000avoid XtPopdown(void)\u000a\u000a{\u000a  (*(code *)PTR_XtPopdown_0060d1e0)();\u000a  return;\u000a}\u000a\u000a
p829
S'JMP qword ptr [0x0060d1e0]\n'
p830
S'ff 25 4a a8 20 00\n'
p831
S'.plt:0000000000402990\n'
p832
tp833
sS'ActionQuit'
p834
(S'\n__stdcall ActionQuit(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p835
V\u000avoid ActionQuit(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  char *__s1;\u000a  int iVar1;\u000a  \u000a  if (global_toplevel != w) {\u000a    __s1 = (char *)XtName(w);\u000a    iVar1 = strcmp(__s1,"resourceBox");\u000a    if (iVar1 == 0) {\u000a      global_resource_box_up = 0;\u000a    }\u000a    XtPopdown(w);\u000a    XtDestroyWidget(w);\u000a    return;\u000a  }\u000a  XtWidgetToApplicationContext(w);\u000a  XtDestroyApplicationContext();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p836
S'PUSH RBX\nMOV RBX,RDI\nCMP qword ptr [0x0060dfb8],RBX\nJZ 0x00402fbe\nMOV RDI,RBX\nCALL 0x00402810\nMOV ESI,0x40954f\nMOV RDI,RAX\nCALL 0x00402940\nTEST EAX,EAX\nJNZ 0x00402fad\nMOV byte ptr [0x0060dec0],0x0\nMOV RDI,RBX\nCALL 0x00402990\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402b70\nMOV RDI,RBX\nCALL 0x004028a0\nMOV RDI,RAX\nCALL 0x004026c0\nXOR EDI,EDI\nCALL 0x00402c10\n'
p837
S'53\n48 89 fb\n48 39 1d 2d b0 20 00\n74 31\n48 89 df\ne8 7b f8 ff ff\nbe 4f 95 40 00\n48 89 c7\ne8 9e f9 ff ff\n85 c0\n75 07\nc6 05 13 af 20 00 00\n48 89 df\ne8 db f9 ff ff\n48 89 df\n5b\ne9 b2 fb ff ff\n48 89 df\ne8 da f8 ff ff\n48 89 c7\ne8 f2 f6 ff ff\n31 ff\ne8 3b fc ff ff\n'
p838
S'.text:0000000000402f80\n.text:0000000000402f81\n.text:0000000000402f84\n.text:0000000000402f8b\n.text:0000000000402f8d\n.text:0000000000402f90\n.text:0000000000402f95\n.text:0000000000402f9a\n.text:0000000000402f9d\n.text:0000000000402fa2\n.text:0000000000402fa4\n.text:0000000000402fa6\n.text:0000000000402fad\n.text:0000000000402fb0\n.text:0000000000402fb5\n.text:0000000000402fb8\n.text:0000000000402fb9\n.text:0000000000402fbe\n.text:0000000000402fc1\n.text:0000000000402fc6\n.text:0000000000402fc9\n.text:0000000000402fce\n.text:0000000000402fd0\n'
p839
tp840
sS'PannerCallback'
p841
(S'\n__stdcall PannerCallback(Widget w, XtPointer closure, XtPointer report_ptr)\n'
p842
V\u000avoid PannerCallback(Widget w,XtPointer closure,XtPointer report_ptr)\u000a\u000a{\u000a  Arg args [2];\u000a  undefined8 local_28;\u000a  long local_20;\u000a  undefined8 local_18;\u000a  long local_10;\u000a  \u000a  if (global_tree_info != (TreeInfo *)0x0) {\u000a    local_28 = 0x60c6f5;\u000a    local_20 = -(long)*(short *)((long)report_ptr + 4);\u000a    local_18 = 0x60c6f7;\u000a    local_10 = -(long)*(short *)((long)report_ptr + 6);\u000a    XtSetValues(global_tree_info->tree_widget,&local_28,2);\u000a  }\u000a  return;\u000a}\u000a\u000a
p843
S'CMP qword ptr [0x0060dec8],0x0\nJZ 0x00404d34\nSUB RSP,0x28\nMOV qword ptr [RSP],0x60c6f5\nMOVSX RAX,word ptr [RDX + 0x4]\nNEG RAX\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],0x60c6f7\nMOVSX RAX,word ptr [RDX + 0x6]\nNEG RAX\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX]\nMOV RSI,RSP\nMOV EDX,0x2\nCALL 0x00402790\nADD RSP,0x28\nRET\n'
p844
S'48 83 3d e0 91 20 00 00\n74 4a\n48 83 ec 28\n48 c7 04 24 f5 c6 60 00\n48 0f bf 42 04\n48 f7 d8\n48 89 44 24 08\n48 c7 44 24 10 f7 c6 60 00\n48 0f bf 42 06\n48 f7 d8\n48 89 44 24 18\n48 8b 05 a8 91 20 00\n48 8b 38\n48 89 e6\nba 02 00 00 00\ne8 60 da ff ff\n48 83 c4 28\nc3\n'
p845
S'.text:0000000000404ce0\n.text:0000000000404ce8\n.text:0000000000404cea\n.text:0000000000404cee\n.text:0000000000404cf6\n.text:0000000000404cfb\n.text:0000000000404cfe\n.text:0000000000404d03\n.text:0000000000404d0c\n.text:0000000000404d11\n.text:0000000000404d14\n.text:0000000000404d19\n.text:0000000000404d20\n.text:0000000000404d23\n.text:0000000000404d26\n.text:0000000000404d2b\n.text:0000000000404d30\n.text:0000000000404d34\n'
p846
tp847
sS'TreeSelect'
p848
(S'\n__stdcall TreeSelect(Widget w, XtPointer client_data, XtPointer call_data)\n'
p849
V\u000avoid TreeSelect(Widget w,XtPointer client_data,XtPointer call_data)\u000a\u000a{\u000a  _TreeSelect(global_tree_info);\u000a  return;\u000a}\u000a\u000a
p850
S'MOV RDI,qword ptr [0x0060dec8]\nJMP 0x00408e70\n'
p851
S'48 8b 3d 01 92 20 00\ne9 a4 41 00 00\n'
p852
S'.text:0000000000404cc0\n.text:0000000000404cc7\n'
p853
tp854
sS'_AppendResourceString'
p855
(S'\n__stdcall _AppendResourceString(Widget w, XtPointer res_box_ptr, XtPointer filename_ptr)\n'
p856
V\u000avoid _AppendResourceString(Widget w,XtPointer res_box_ptr,XtPointer filename_ptr)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *__dest;\u000a  FILE *__stream;\u000a  Arg args [1];\u000a  char buf [8192];\u000a  undefined8 local_2038;\u000a  undefined8 *local_2030;\u000a  undefined8 local_2028;\u000a  undefined8 local_2020;\u000a  char local_2018 [8192];\u000a  \u000a  if (filename_ptr != (XtPointer)0x0) {\u000a    if (global_resources.allocated_save_resources_file == 0) {\u000a      global_resources.allocated_save_resources_file = 1;\u000a    }\u000a    else {\u000a      XtFree(global_resources.save_resources_file);\u000a    }\u000a    sVar1 = strlen((char *)filename_ptr);\u000a    __dest = (char *)XtMalloc((ulong)((int)sVar1 + 1));\u000a    global_resources.save_resources_file = strcpy(__dest,(char *)filename_ptr);\u000a  }\u000a  __stream = fopen(global_resources.save_resources_file,"a+");\u000a  if (__stream == (FILE *)0x0) {\u000a    sprintf(local_2018,"Unable to open this file for writing, would %s","you like To try again?");\u000a    _PopupFileDialog(global_toplevel,local_2018,global_resources.save_resources_file,\u000a                     _AppendResourceString,res_box_ptr);\u000a  }\u000a  else {\u000a    local_2038 = 0x60c52d;\u000a    local_2030 = &local_2020;\u000a    XtGetValues(*(undefined8 *)((long)res_box_ptr + 8),&local_2038,1);\u000a    local_2038 = 0x60c65d;\u000a    local_2030 = &local_2028;\u000a    XtGetValues(*(undefined8 *)res_box_ptr,&local_2038,1);\u000a    fprintf(__stream,"%s %s\u005cn",local_2020,local_2028);\u000a    fclose(__stream);\u000a  }\u000a  return;\u000a}\u000a\u000a
p857
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x2020\nMOV RBX,RDX\nMOV R14,RSI\nTEST RBX,RBX\nJZ 0x004054e7\nCMP byte ptr [0x0060dfb0],0x0\nJZ 0x004054be\nMOV RDI,qword ptr [0x0060dfa8]\nCALL 0x00402a90\nJMP 0x004054c5\nMOV byte ptr [0x0060dfb0],0x1\nMOV RDI,RBX\nCALL 0x004027f0\nLEA EDI,[RAX + 0x1]\nCALL 0x00402760\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x004026a0\nMOV qword ptr [0x0060dfa8],RAX\nMOV RDI,qword ptr [0x0060dfa8]\nMOV ESI,0x409ad1\nCALL 0x00402b90\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040556b\nMOV qword ptr [RSP],0x60c52d\nLEA RAX,[RSP + 0x18]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [R14 + 0x8]\nMOV R15,RSP\nMOV EDX,0x1\nMOV RSI,R15\nCALL 0x004027d0\nMOV qword ptr [RSP],0x60c65d\nLEA RAX,[RSP + 0x10]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [R14]\nMOV EDX,0x1\nMOV RSI,R15\nCALL 0x004027d0\nMOV RDX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP + 0x10]\nMOV ESI,0x409b1a\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402970\nMOV RDI,RBX\nCALL 0x004027b0\nJMP 0x004055a2\nLEA RBX,[RSP + 0x20]\nMOV ESI,0x409ad4\nMOV EDX,0x409b03\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dfb8]\nMOV RDX,qword ptr [0x0060dfa8]\nMOV ECX,0x405490\nMOV RSI,RBX\nMOV R8,R14\nCALL 0x00406490\nADD RSP,0x2020\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p858
S'41 57\n41 56\n53\n48 81 ec 20 20 00 00\n48 89 d3\n49 89 f6\n48 85 db\n74 40\n80 3d 02 8b 20 00 00\n74 0e\n48 8b 3d f1 8a 20 00\ne8 d4 d5 ff ff\neb 07\nc6 05 eb 8a 20 00 01\n48 89 df\ne8 23 d3 ff ff\n8d 78 01\ne8 8b d2 ff ff\n48 89 c7\n48 89 de\ne8 c0 d1 ff ff\n48 89 05 c1 8a 20 00\n48 8b 3d ba 8a 20 00\nbe d1 9a 40 00\ne8 98 d6 ff ff\n48 89 c3\n48 85 db\n74 6b\n48 c7 04 24 2d c5 60 00\n48 8d 44 24 18\n48 89 44 24 08\n49 8b 7e 08\n49 89 e7\nba 01 00 00 00\n4c 89 fe\ne8 aa d2 ff ff\n48 c7 04 24 5d c6 60 00\n48 8d 44 24 10\n48 89 44 24 08\n49 8b 3e\nba 01 00 00 00\n4c 89 fe\ne8 88 d2 ff ff\n48 8b 54 24 18\n48 8b 4c 24 10\nbe 1a 9b 40 00\n31 c0\n48 89 df\ne8 0f d4 ff ff\n48 89 df\ne8 47 d2 ff ff\neb 37\n48 8d 5c 24 20\nbe d4 9a 40 00\nba 03 9b 40 00\n31 c0\n48 89 df\ne8 6c d6 ff ff\n48 8b 3d 2d 8a 20 00\n48 8b 15 16 8a 20 00\nb9 90 54 40 00\n48 89 de\n4d 89 f0\ne8 ee 0e 00 00\n48 81 c4 20 20 00 00\n5b\n41 5e\n41 5f\nc3\n'
p859
S'.text:0000000000405490\n.text:0000000000405492\n.text:0000000000405494\n.text:0000000000405495\n.text:000000000040549c\n.text:000000000040549f\n.text:00000000004054a2\n.text:00000000004054a5\n.text:00000000004054a7\n.text:00000000004054ae\n.text:00000000004054b0\n.text:00000000004054b7\n.text:00000000004054bc\n.text:00000000004054be\n.text:00000000004054c5\n.text:00000000004054c8\n.text:00000000004054cd\n.text:00000000004054d0\n.text:00000000004054d5\n.text:00000000004054d8\n.text:00000000004054db\n.text:00000000004054e0\n.text:00000000004054e7\n.text:00000000004054ee\n.text:00000000004054f3\n.text:00000000004054f8\n.text:00000000004054fb\n.text:00000000004054fe\n.text:0000000000405500\n.text:0000000000405508\n.text:000000000040550d\n.text:0000000000405512\n.text:0000000000405516\n.text:0000000000405519\n.text:000000000040551e\n.text:0000000000405521\n.text:0000000000405526\n.text:000000000040552e\n.text:0000000000405533\n.text:0000000000405538\n.text:000000000040553b\n.text:0000000000405540\n.text:0000000000405543\n.text:0000000000405548\n.text:000000000040554d\n.text:0000000000405552\n.text:0000000000405557\n.text:0000000000405559\n.text:000000000040555c\n.text:0000000000405561\n.text:0000000000405564\n.text:0000000000405569\n.text:000000000040556b\n.text:0000000000405570\n.text:0000000000405575\n.text:000000000040557a\n.text:000000000040557c\n.text:000000000040557f\n.text:0000000000405584\n.text:000000000040558b\n.text:0000000000405592\n.text:0000000000405597\n.text:000000000040559a\n.text:000000000040559d\n.text:00000000004055a2\n.text:00000000004055a9\n.text:00000000004055aa\n.text:00000000004055ac\n.text:00000000004055ae\n'
p860
tp861
sS'_TreeRelabel'
p862
(S'\n__stdcall _TreeRelabel(TreeInfo * tree_info)\n'
p863
V\u000avoid _TreeRelabel(TreeInfo *tree_info)\u000a\u000a{\u000a  WNode *node;\u000a  \u000a  if (tree_info != (TreeInfo *)0x0) {\u000a    node = (WNode *)tree_info->top_node;\u000a    PrepareToLayoutTree(tree_info->tree_widget);\u000a    _TreeRelabelNode(node);\u000a    LayoutTree(tree_info->tree_widget);\u000a    return;\u000a  }\u000a  SetMessage(global_screen_data.info_label,res_labels[17]);\u000a  return;\u000a}\u000a\u000a
p864
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EBP,ESI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00408cd5\nMOV RDI,qword ptr [RBX]\nMOV R14,qword ptr [RBX + 0x8]\nCALL 0x00407600\nMOV EDX,0x1\nMOV RDI,R14\nMOV ESI,EBP\nCALL 0x00408cf0\nMOV RDI,qword ptr [RBX]\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00407690\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e088]\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00406120\n'
p865
S'55\n41 56\n53\n89 f5\n48 89 fb\n48 85 db\n74 27\n48 8b 3b\n4c 8b 73 08\ne8 46 e9 ff ff\nba 01 00 00 00\n4c 89 f7\n89 ee\ne8 27 00 00 00\n48 8b 3b\n5b\n41 5e\n5d\ne9 bb e9 ff ff\n48 8b 3d 1c 53 20 00\n48 8b 35 a5 53 20 00\n5b\n41 5e\n5d\ne9 34 d4 ff ff\n'
p866
S'.text:0000000000408ca0\n.text:0000000000408ca1\n.text:0000000000408ca3\n.text:0000000000408ca4\n.text:0000000000408ca6\n.text:0000000000408ca9\n.text:0000000000408cac\n.text:0000000000408cae\n.text:0000000000408cb1\n.text:0000000000408cb5\n.text:0000000000408cba\n.text:0000000000408cbf\n.text:0000000000408cc2\n.text:0000000000408cc4\n.text:0000000000408cc9\n.text:0000000000408ccc\n.text:0000000000408ccd\n.text:0000000000408ccf\n.text:0000000000408cd0\n.text:0000000000408cd5\n.text:0000000000408cdc\n.text:0000000000408ce3\n.text:0000000000408ce4\n.text:0000000000408ce6\n.text:0000000000408ce7\n'
p867
tp868
sS'FlashWidgetsCleanup'
p869
(S'\n__stdcall FlashWidgetsCleanup(XtPointer info_ptr, XtIntervalId * id)\n'
p870
V\u000avoid FlashWidgetsCleanup(XtPointer info_ptr,XtIntervalId *id)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  ulong uVar3;\u000a  ulong uVar4;\u000a  long lVar5;\u000a  \u000a  if (*(int *)((long)info_ptr + 0x28) != 0) {\u000a    uVar4 = 0;\u000a    do {\u000a      uVar1 = XtDisplay(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      uVar2 = XtWindow(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      XUnmapWindow(uVar1,uVar2);\u000a      uVar3 = uVar4 + 1;\u000a      uVar4 = uVar3 & 0xffffffff;\u000a    } while ((uint)uVar3 < *(uint *)((long)info_ptr + 0x28));\u000a  }\u000a  uVar1 = XtDisplay(*(undefined8 *)info_ptr);\u000a  XFlush(uVar1);\u000a  lVar5 = *(long *)((long)info_ptr + 0x20);\u000a  if (*(int *)((long)info_ptr + 0x28) != 0) {\u000a    uVar4 = 0;\u000a    do {\u000a      XtDestroyWidget(*(undefined8 *)(lVar5 + uVar4 * 8));\u000a      uVar3 = uVar4 + 1;\u000a      lVar5 = *(long *)((long)info_ptr + 0x20);\u000a      uVar4 = uVar3 & 0xffffffff;\u000a    } while ((uint)uVar3 < *(uint *)((long)info_ptr + 0x28));\u000a  }\u000a  XtFree();\u000a  *(undefined4 *)((long)info_ptr + 0x20) = 0;\u000a  *(undefined4 *)((long)info_ptr + 0x24) = 0;\u000a  *(undefined4 *)((long)info_ptr + 0x28) = 0;\u000a  *(undefined4 *)((long)info_ptr + 0x2c) = 0;\u000a  return;\u000a}\u000a\u000a
p871
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCMP dword ptr [R14 + 0x28],0x0\nJZ 0x00404bb1\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R14 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x00402ab0\nMOV R15,RAX\nMOV RAX,qword ptr [R14 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x004027e0\nMOV RDI,R15\nMOV RSI,RAX\nCALL 0x00402b10\nINC RBX\nCMP EBX,dword ptr [R14 + 0x28]\nJC 0x00404b80\nMOV RDI,qword ptr [R14]\nCALL 0x00402ab0\nMOV RDI,RAX\nCALL 0x00402b50\nLEA R15,[R14 + 0x20]\nCMP dword ptr [R14 + 0x28],0x0\nMOV RDI,qword ptr [R14 + 0x20]\nJZ 0x00404bf6\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RDI + RBX*0x8]\nCALL 0x00402b70\nINC RBX\nMOV RDI,qword ptr [R14 + 0x20]\nCMP EBX,dword ptr [R14 + 0x28]\nJC 0x00404be0\nCALL 0x00402a90\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [R15],XMM0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p872
S'41 57\n41 56\n53\n49 89 fe\n41 83 7e 28 00\n74 42\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 46 20\n48 8b 3c d8\ne8 23 df ff ff\n49 89 c7\n49 8b 46 20\n48 8b 3c d8\ne8 43 dc ff ff\n4c 89 ff\n48 89 c6\ne8 68 df ff ff\n48 ff c3\n41 3b 5e 28\n72 cf\n49 8b 3e\ne8 f7 de ff ff\n48 89 c7\ne8 8f df ff ff\n4d 8d 7e 20\n41 83 7e 28 00\n49 8b 7e 20\n74 26\n31 db\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 3c df\ne8 87 df ff ff\n48 ff c3\n49 8b 7e 20\n41 3b 5e 28\n72 ea\ne8 95 de ff ff\n0f 57 c0\n41 0f 11 07\n5b\n41 5e\n41 5f\nc3\n'
p873
S'.text:0000000000404b60\n.text:0000000000404b62\n.text:0000000000404b64\n.text:0000000000404b65\n.text:0000000000404b68\n.text:0000000000404b6d\n.text:0000000000404b6f\n.text:0000000000404b71\n.text:0000000000404b80\n.text:0000000000404b84\n.text:0000000000404b88\n.text:0000000000404b8d\n.text:0000000000404b90\n.text:0000000000404b94\n.text:0000000000404b98\n.text:0000000000404b9d\n.text:0000000000404ba0\n.text:0000000000404ba3\n.text:0000000000404ba8\n.text:0000000000404bab\n.text:0000000000404baf\n.text:0000000000404bb1\n.text:0000000000404bb4\n.text:0000000000404bb9\n.text:0000000000404bbc\n.text:0000000000404bc1\n.text:0000000000404bc5\n.text:0000000000404bca\n.text:0000000000404bce\n.text:0000000000404bd0\n.text:0000000000404bd2\n.text:0000000000404be0\n.text:0000000000404be4\n.text:0000000000404be9\n.text:0000000000404bec\n.text:0000000000404bf0\n.text:0000000000404bf4\n.text:0000000000404bf6\n.text:0000000000404bfb\n.text:0000000000404bfe\n.text:0000000000404c02\n.text:0000000000404c03\n.text:0000000000404c05\n.text:0000000000404c07\n'
p874
tp875
sS'__libc_csu_init'
p876
(S'\n__stdcall __libc_csu_init()\n'
p877
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p878
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x60be48]\nPUSH RBP\nLEA RBP,[0x60be50]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004025d0\nTEST RBP,RBP\nJZ 0x00409476\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00409460\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p879
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 16 2a 20 00\n55\n48 8d 2d 16 2a 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 7f 91 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p880
S'.text:0000000000409420\n.text:0000000000409422\n.text:0000000000409424\n.text:0000000000409427\n.text:0000000000409429\n.text:000000000040942b\n.text:0000000000409432\n.text:0000000000409433\n.text:000000000040943a\n.text:000000000040943b\n.text:000000000040943e\n.text:0000000000409441\n.text:0000000000409444\n.text:0000000000409448\n.text:000000000040944c\n.text:0000000000409451\n.text:0000000000409454\n.text:0000000000409456\n.text:0000000000409458\n.text:0000000000409460\n.text:0000000000409463\n.text:0000000000409466\n.text:0000000000409469\n.text:000000000040946d\n.text:0000000000409471\n.text:0000000000409474\n.text:0000000000409476\n.text:000000000040947a\n.text:000000000040947b\n.text:000000000040947c\n.text:000000000040947e\n.text:0000000000409480\n.text:0000000000409482\n.text:0000000000409484\n'
p881
tp882
sS'XtFree'
p883
(S'\n__stdcall XtFree()\n'
p884
V\u000avoid XtFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XtFree_0060d260)();\u000a  return;\u000a}\u000a\u000a
p885
S'JMP qword ptr [0x0060d260]\n'
p886
S'ff 25 ca a7 20 00\n'
p887
S'.plt:0000000000402a90\n'
p888
tp889
sS'RelabelAction'
p890
(S'\n__stdcall RelabelAction(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p891
V\u000avoid RelabelAction(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  Boolean BVar1;\u000a  WNode *node;\u000a  \u000a  BVar1 = CheckAndFindEntry("Relabel",params,(ActionValues *)(ulong)*num_params,(int *)label_values)\u000a  ;\u000a  if (BVar1 != 0) {\u000a    node = FindTreeNodeFromWidget(w);\u000a    if (node == (WNode *)0x0) {\u000a      _TreeRelabel(global_tree_info);\u000a    }\u000a    else {\u000a      PrepareToLayoutTree(global_tree_info->tree_widget);\u000a      _TreeRelabelNode(node);\u000a      LayoutTree(global_tree_info->tree_widget);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p892
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV EAX,dword ptr [RCX]\nLEA R9,[RSP + 0xc]\nMOV EDI,0x4094c6\nMOV ECX,0x60d460\nMOV R8D,0x5\nMOV RSI,RDX\nMOV EDX,EAX\nCALL 0x00402fe0\nTEST AL,AL\nJZ 0x00402ed4\nMOV RDI,RBX\nCALL 0x00403150\nMOV RBX,RAX\nMOV RDI,qword ptr [0x0060dec8]\nTEST RBX,RBX\nJZ 0x00402ecb\nMOV RDI,qword ptr [RDI]\nCALL 0x00407600\nMOV ESI,dword ptr [RSP + 0xc]\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00408cf0\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX]\nCALL 0x00407690\nJMP 0x00402ed4\nMOV ESI,dword ptr [RSP + 0xc]\nCALL 0x00408ca0\nADD RSP,0x10\nPOP RBX\nRET\n'
p893
S'53\n48 83 ec 10\n48 89 fb\n8b 01\n4c 8d 4c 24 0c\nbf c6 94 40 00\nb9 60 d4 60 00\n41 b8 05 00 00 00\n48 89 d6\n89 c2\ne8 57 01 00 00\n84 c0\n74 47\n48 89 df\ne8 bb 02 00 00\n48 89 c3\n48 8b 3d 29 b0 20 00\n48 85 db\n74 27\n48 8b 3f\ne8 54 47 00 00\n8b 74 24 0c\n31 d2\n48 89 df\ne8 36 5e 00 00\n48 8b 05 07 b0 20 00\n48 8b 38\ne8 c7 47 00 00\neb 09\n8b 74 24 0c\ne8 cc 5d 00 00\n48 83 c4 10\n5b\nc3\n'
p894
S'.text:0000000000402e60\n.text:0000000000402e61\n.text:0000000000402e65\n.text:0000000000402e68\n.text:0000000000402e6a\n.text:0000000000402e6f\n.text:0000000000402e74\n.text:0000000000402e79\n.text:0000000000402e7f\n.text:0000000000402e82\n.text:0000000000402e84\n.text:0000000000402e89\n.text:0000000000402e8b\n.text:0000000000402e8d\n.text:0000000000402e90\n.text:0000000000402e95\n.text:0000000000402e98\n.text:0000000000402e9f\n.text:0000000000402ea2\n.text:0000000000402ea4\n.text:0000000000402ea7\n.text:0000000000402eac\n.text:0000000000402eb0\n.text:0000000000402eb2\n.text:0000000000402eb5\n.text:0000000000402eba\n.text:0000000000402ec1\n.text:0000000000402ec4\n.text:0000000000402ec9\n.text:0000000000402ecb\n.text:0000000000402ecf\n.text:0000000000402ed4\n.text:0000000000402ed8\n.text:0000000000402ed9\n'
p895
tp896
sS'PrepareToLayoutTree'
p897
(S'\n__stdcall PrepareToLayoutTree(Widget tree)\n'
p898
V\u000avoid PrepareToLayoutTree(Widget tree)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  Arg args [1];\u000a  undefined8 local_28;\u000a  Pixmap *local_20;\u000a  \u000a  local_28 = 0x60c3bf;\u000a  local_20 = &old_pixmap;\u000a  uVar1 = XtParent();\u000a  XtGetValues(uVar1,&local_28,1);\u000a  local_28 = 0x60c3bf;\u000a  local_20 = (Pixmap *)0x0;\u000a  uVar1 = XtParent(tree);\u000a  XtSetValues(uVar1,&local_28,1);\u000a  uVar1 = XtDisplay(tree);\u000a  uVar2 = XtWindow(tree);\u000a  XUnmapWindow(uVar1,uVar2);\u000a  return;\u000a}\u000a\u000a
p899
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nMOV qword ptr [RSP],0x60c3bf\nMOV qword ptr [RSP + 0x8],0x60df00\nCALL 0x00402c00\nMOV R14,RSP\nMOV EDX,0x1\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x004027d0\nMOV qword ptr [RSP],0x60c3bf\nMOV qword ptr [RSP + 0x8],0x0\nMOV RDI,RBX\nCALL 0x00402c00\nMOV EDX,0x1\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00402790\nMOV RDI,RBX\nCALL 0x00402ab0\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x004027e0\nMOV RDI,R14\nMOV RSI,RAX\nCALL 0x00402b10\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p900
S'41 56\n53\n48 83 ec 18\n48 89 fb\n48 c7 04 24 bf c3 60 00\n48 c7 44 24 08 00 df 60 00\ne8 e0 b5 ff ff\n49 89 e6\nba 01 00 00 00\n48 89 c7\n4c 89 f6\ne8 9d b1 ff ff\n48 c7 04 24 bf c3 60 00\n48 c7 44 24 08 00 00 00 00\n48 89 df\ne8 b4 b5 ff ff\nba 01 00 00 00\n48 89 c7\n4c 89 f6\ne8 34 b1 ff ff\n48 89 df\ne8 4c b4 ff ff\n49 89 c6\n48 89 df\ne8 71 b1 ff ff\n4c 89 f7\n48 89 c6\ne8 96 b4 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p901
S'.text:0000000000407600\n.text:0000000000407602\n.text:0000000000407603\n.text:0000000000407607\n.text:000000000040760a\n.text:0000000000407612\n.text:000000000040761b\n.text:0000000000407620\n.text:0000000000407623\n.text:0000000000407628\n.text:000000000040762b\n.text:000000000040762e\n.text:0000000000407633\n.text:000000000040763b\n.text:0000000000407644\n.text:0000000000407647\n.text:000000000040764c\n.text:0000000000407651\n.text:0000000000407654\n.text:0000000000407657\n.text:000000000040765c\n.text:000000000040765f\n.text:0000000000407664\n.text:0000000000407667\n.text:000000000040766a\n.text:000000000040766f\n.text:0000000000407672\n.text:0000000000407675\n.text:000000000040767a\n.text:000000000040767e\n.text:000000000040767f\n.text:0000000000407681\n'
p902
tp903
sS'strcpy'
p904
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p905
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_0060d068)();\u000a  return pcVar1;\u000a}\u000a\u000a
p906
S'JMP qword ptr [0x0060d068]\n'
p907
S'ff 25 c2 a9 20 00\n'
p908
S'.plt:00000000004026a0\n'
p909
tp910
sS'_SetField'
p911
(S'\n__stdcall _SetField(Widget new, Widget old)\n'
p912
V\u000avoid _SetField(Widget new,Widget old)\u000a\u000a{\u000a  char cVar1;\u000a  undefined8 uVar2;\u000a  Arg args [2];\u000a  undefined8 local_58;\u000a  long *local_50;\u000a  undefined8 local_48;\u000a  long *local_40;\u000a  long local_30;\u000a  long local_28;\u000a  undefined8 local_20;\u000a  \u000a  cVar1 = XtIsSensitive();\u000a  if (cVar1 == 0) {\u000a    uVar2 = XtDisplay(old);\u000a    XBell(uVar2,0);\u000a  }\u000a  else {\u000a    uVar2 = XtParent(new);\u000a    XtSetKeyboardFocus(uVar2,new);\u000a    local_58 = 0x60c3d7;\u000a    local_50 = &local_30;\u000a    local_48 = 0x60c3b4;\u000a    local_40 = &local_28;\u000a    XtGetValues(new,&local_58,2);\u000a    local_58 = 0x60c3d7;\u000a    local_50 = &local_20;\u000a    XtGetValues(old,&local_58,1);\u000a    if (local_30 == local_28) {\u000a      local_58 = 0x60c3d7;\u000a      local_50 = (long *)local_30;\u000a      XtSetValues(old,&local_58,1);\u000a      local_58 = 0x60c3d7;\u000a      local_50 = (long *)local_20;\u000a      XtSetValues(new,&local_58,1);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p913
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RSI\nMOV RBX,RDI\nCALL 0x00402890\nTEST AL,AL\nJZ 0x00405f2e\nMOV RDI,RBX\nCALL 0x00402c00\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x00402af0\nMOV qword ptr [RSP],0x60c3d7\nLEA RAX,[RSP + 0x28]\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],0x60c3b4\nLEA RAX,[RSP + 0x30]\nMOV qword ptr [RSP + 0x18],RAX\nMOV R15,RSP\nMOV EDX,0x2\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x004027d0\nMOV qword ptr [RSP],0x60c3d7\nLEA RAX,[RSP + 0x38]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x004027d0\nMOV RAX,qword ptr [RSP + 0x28]\nCMP RAX,qword ptr [RSP + 0x30]\nJNZ 0x00405f40\nMOV qword ptr [RSP],0x60c3d7\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x8],RAX\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00402790\nMOV qword ptr [RSP],0x60c3d7\nMOV RAX,qword ptr [RSP + 0x38]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EDX,0x1\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00402790\nJMP 0x00405f40\nMOV RDI,R14\nCALL 0x00402ab0\nXOR ESI,ESI\nMOV RDI,RAX\nCALL 0x00402670\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p914
S'41 57\n41 56\n53\n48 83 ec 40\n49 89 f6\n48 89 fb\ne8 2c ca ff ff\n84 c0\n0f 84 c2 00 00 00\n48 89 df\ne8 8c cd ff ff\n48 89 c7\n48 89 de\ne8 71 cc ff ff\n48 c7 04 24 d7 c3 60 00\n48 8d 44 24 28\n48 89 44 24 08\n48 c7 44 24 10 b4 c3 60 00\n48 8d 44 24 30\n48 89 44 24 18\n49 89 e7\nba 02 00 00 00\n48 89 df\n4c 89 fe\ne8 19 c9 ff ff\n48 c7 04 24 d7 c3 60 00\n48 8d 44 24 38\n48 89 44 24 08\nba 01 00 00 00\n4c 89 f7\n4c 89 fe\ne8 f7 c8 ff ff\n48 8b 44 24 28\n48 3b 44 24 30\n75 5b\n48 c7 04 24 d7 c3 60 00\n48 8b 44 24 28\n48 89 44 24 08\n49 89 e7\nba 01 00 00 00\n4c 89 f7\n4c 89 fe\ne8 86 c8 ff ff\n48 c7 04 24 d7 c3 60 00\n48 8b 44 24 38\n48 89 44 24 08\nba 01 00 00 00\n48 89 df\n4c 89 fe\ne8 64 c8 ff ff\neb 12\n4c 89 f7\ne8 7a cb ff ff\n31 f6\n48 89 c7\ne8 30 c7 ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p915
S'.text:0000000000405e50\n.text:0000000000405e52\n.text:0000000000405e54\n.text:0000000000405e55\n.text:0000000000405e59\n.text:0000000000405e5c\n.text:0000000000405e5f\n.text:0000000000405e64\n.text:0000000000405e66\n.text:0000000000405e6c\n.text:0000000000405e6f\n.text:0000000000405e74\n.text:0000000000405e77\n.text:0000000000405e7a\n.text:0000000000405e7f\n.text:0000000000405e87\n.text:0000000000405e8c\n.text:0000000000405e91\n.text:0000000000405e9a\n.text:0000000000405e9f\n.text:0000000000405ea4\n.text:0000000000405ea7\n.text:0000000000405eac\n.text:0000000000405eaf\n.text:0000000000405eb2\n.text:0000000000405eb7\n.text:0000000000405ebf\n.text:0000000000405ec4\n.text:0000000000405ec9\n.text:0000000000405ece\n.text:0000000000405ed1\n.text:0000000000405ed4\n.text:0000000000405ed9\n.text:0000000000405ede\n.text:0000000000405ee3\n.text:0000000000405ee5\n.text:0000000000405eed\n.text:0000000000405ef2\n.text:0000000000405ef7\n.text:0000000000405efa\n.text:0000000000405eff\n.text:0000000000405f02\n.text:0000000000405f05\n.text:0000000000405f0a\n.text:0000000000405f12\n.text:0000000000405f17\n.text:0000000000405f1c\n.text:0000000000405f21\n.text:0000000000405f24\n.text:0000000000405f27\n.text:0000000000405f2c\n.text:0000000000405f2e\n.text:0000000000405f31\n.text:0000000000405f36\n.text:0000000000405f38\n.text:0000000000405f3b\n.text:0000000000405f40\n.text:0000000000405f44\n.text:0000000000405f45\n.text:0000000000405f47\n.text:0000000000405f49\n'
p916
tp917
sS'FreeClientData'
p918
(S'\n__stdcall FreeClientData(Widget w, XtPointer ptr, XtPointer junk)\n'
p919
V\u000avoid FreeClientData(Widget w,XtPointer ptr,XtPointer junk)\u000a\u000a{\u000a  XtFree(ptr);\u000a  return;\u000a}\u000a\u000a
p920
S'MOV RDI,RSI\nJMP 0x00402a90\n'
p921
S'48 89 f7\ne9 28 a6 ff ff\n'
p922
S'.text:0000000000408460\n.text:0000000000408463\n'
p923
tp924
sS'XtDestroyWidget'
p925
(S'\n__stdcall XtDestroyWidget()\n'
p926
V\u000avoid XtDestroyWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDestroyWidget_0060d2d0)();\u000a  return;\u000a}\u000a\u000a
p927
S'JMP qword ptr [0x0060d2d0]\n'
p928
S'ff 25 5a a7 20 00\n'
p929
S'.plt:0000000000402b70\n'
p930
tp931
sS'XtGetValues'
p932
(S'\n__stdcall XtGetValues()\n'
p933
V\u000avoid XtGetValues(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetValues_0060d100)();\u000a  return;\u000a}\u000a\u000a
p934
S'JMP qword ptr [0x0060d100]\n'
p935
S'ff 25 2a a9 20 00\n'
p936
S'.plt:00000000004027d0\n'
p937
tp938
sS'SetApplicationActions'
p939
(S'\n__stdcall SetApplicationActions(XtAppContext app_con)\n'
p940
V\u000avoid SetApplicationActions(XtAppContext app_con)\u000a\u000a{\u000a  (*(code *)PTR_XtAppAddActions_0060d238)(app_con,actions,6);\u000a  return;\u000a}\u000a\u000a
p941
S'MOV ESI,0x60d380\nMOV EDX,0x6\nJMP 0x00402a40\n'
p942
S'be 80 d3 60 00\nba 06 00 00 00\ne9 81 fc ff ff\n'
p943
S'.text:0000000000402db0\n.text:0000000000402db5\n.text:0000000000402dba\n'
p944
tp945
sS'XtRealloc'
p946
(S'\n__stdcall XtRealloc()\n'
p947
V\u000avoid XtRealloc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtRealloc_0060d190)();\u000a  return;\u000a}\u000a\u000a
p948
S'JMP qword ptr [0x0060d190]\n'
p949
S'ff 25 9a a8 20 00\n'
p950
S'.plt:00000000004028f0\n'
p951
tp952
sS'XrmDestroyDatabase'
p953
(S'\n__stdcall XrmDestroyDatabase()\n'
p954
V\u000avoid XrmDestroyDatabase(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmDestroyDatabase_0060d2d8)();\u000a  return;\u000a}\u000a\u000a
p955
S'JMP qword ptr [0x0060d2d8]\n'
p956
S'ff 25 52 a7 20 00\n'
p957
S'.plt:0000000000402b80\n'
p958
tp959
sS'DisplayChild'
p960
(S'\n__stdcall DisplayChild(Event * event)\n'
p961
V\u000avoid DisplayChild(Event *event)\u000a\u000a{\u000a  WNode *pWVar1;\u000a  WNode *node;\u000a  char msg [8192];\u000a  char acStack8200 [8192];\u000a  \u000a  node = FindNode((WNode *)global_tree_info->top_node,*(ulong **)(*event + 0x10));\u000a  if (node == (WNode *)0x0) {\u000a    sprintf(acStack8200,res_labels[13]);\u000a    SetMessage(global_screen_data.info_label,acStack8200);\u000a  }\u000a  else {\u000a    SetAndCenterTreeNode(node);\u000a    pWVar1 = node->tree_info->top_node;\u000a    sprintf(acStack8200,res_labels[12],pWVar1->name,pWVar1->class);\u000a    SetMessage(global_screen_data.info_label,acStack8200);\u000a    _FlashActiveWidgets(global_tree_info);\u000a  }\u000a  return;\u000a}\u000a\u000a
p962
S'PUSH RBX\nSUB RSP,0x2000\nMOV RAX,qword ptr [0x0060dec8]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [RDI + 0x10]\nMOVZX EDX,word ptr [RDI + 0x8]\nMOV RDI,RAX\nCALL 0x004062c0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00404523\nMOV RDI,RBX\nCALL 0x00409180\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [0x0060e060]\nMOV RDX,qword ptr [RAX]\nMOV RCX,qword ptr [RAX + 0x8]\nMOV RBX,RSP\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nMOV RDI,qword ptr [0x0060dec8]\nCALL 0x00404550\nJMP 0x00404546\nMOV RSI,qword ptr [0x0060e068]\nMOV RBX,RSP\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nADD RSP,0x2000\nPOP RBX\nRET\n'
p963
S'53\n48 81 ec 00 20 00 00\n48 8b 05 09 9a 20 00\n48 8b 40 08\n48 8b 77 10\n0f b7 57 08\n48 89 c7\ne8 ed 1d 00 00\n48 89 c3\n48 85 db\n74 48\n48 89 df\ne8 9d 4c 00 00\n48 8b 43 30\n48 8b 40 08\n48 8b 35 6e 9b 20 00\n48 8b 10\n48 8b 48 08\n48 89 e3\n31 c0\n48 89 df\ne8 ea e6 ff ff\n48 8b 3d eb 9a 20 00\n48 89 de\ne8 0b 1c 00 00\n48 8b 3d ac 99 20 00\ne8 2f 00 00 00\neb 23\n48 8b 35 3e 9b 20 00\n48 89 e3\n31 c0\n48 89 df\ne8 b9 e6 ff ff\n48 8b 3d ba 9a 20 00\n48 89 de\ne8 da 1b 00 00\n48 81 c4 00 20 00 00\n5b\nc3\n'
p964
S'.text:00000000004044b0\n.text:00000000004044b1\n.text:00000000004044b8\n.text:00000000004044bf\n.text:00000000004044c3\n.text:00000000004044c7\n.text:00000000004044cb\n.text:00000000004044ce\n.text:00000000004044d3\n.text:00000000004044d6\n.text:00000000004044d9\n.text:00000000004044db\n.text:00000000004044de\n.text:00000000004044e3\n.text:00000000004044e7\n.text:00000000004044eb\n.text:00000000004044f2\n.text:00000000004044f5\n.text:00000000004044f9\n.text:00000000004044fc\n.text:00000000004044fe\n.text:0000000000404501\n.text:0000000000404506\n.text:000000000040450d\n.text:0000000000404510\n.text:0000000000404515\n.text:000000000040451c\n.text:0000000000404521\n.text:0000000000404523\n.text:000000000040452a\n.text:000000000040452d\n.text:000000000040452f\n.text:0000000000404532\n.text:0000000000404537\n.text:000000000040453e\n.text:0000000000404541\n.text:0000000000404546\n.text:000000000040454d\n.text:000000000040454e\n'
p965
tp966
sS'_XEditResResetStream'
p967
(S'\n__stdcall _XEditResResetStream()\n'
p968
V\u000avoid _XEditResResetStream(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResResetStream_0060d2f0)();\u000a  return;\u000a}\u000a\u000a
p969
S'JMP qword ptr [0x0060d2f0]\n'
p970
S'ff 25 3a a7 20 00\n'
p971
S'.plt:0000000000402bb0\n'
p972
tp973
sS'XtCreatePopupShell'
p974
(S'\n__stdcall XtCreatePopupShell()\n'
p975
V\u000avoid XtCreatePopupShell(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreatePopupShell_0060d0b0)();\u000a  return;\u000a}\u000a\u000a
p976
S'JMP qword ptr [0x0060d0b0]\n'
p977
S'ff 25 7a a9 20 00\n'
p978
S'.plt:0000000000402730\n'
p979
tp980
sS'_XEditResGet16'
p981
(S'\n__stdcall _XEditResGet16()\n'
p982
V\u000avoid _XEditResGet16(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResGet16_0060d158)();\u000a  return;\u000a}\u000a\u000a
p983
S'JMP qword ptr [0x0060d158]\n'
p984
S'ff 25 d2 a8 20 00\n'
p985
S'.plt:0000000000402880\n'
p986
tp987
sS'LayoutTree'
p988
(S'\n__stdcall LayoutTree(Widget tree)\n'
p989
V\u000avoid LayoutTree(Widget tree)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  Arg args [1];\u000a  undefined8 local_28;\u000a  Pixmap local_20;\u000a  \u000a  XawTreeForceLayout();\u000a  uVar1 = XtDisplay(tree);\u000a  uVar2 = XtWindow(tree);\u000a  XMapWindow(uVar1,uVar2);\u000a  local_28 = 0x60c3bf;\u000a  local_20 = old_pixmap;\u000a  uVar1 = XtParent(tree);\u000a  XtSetValues(uVar1,&local_28,1);\u000a  return;\u000a}\u000a\u000a
p990
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RDI\nCALL 0x00402830\nMOV RDI,RBX\nCALL 0x00402ab0\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x004027e0\nMOV RDI,R14\nMOV RSI,RAX\nCALL 0x00402bd0\nMOV qword ptr [RSP],0x60c3bf\nMOV RAX,qword ptr [0x0060df00]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,RBX\nCALL 0x00402c00\nMOV RSI,RSP\nMOV EDX,0x1\nMOV RDI,RAX\nCALL 0x00402790\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p991
S'41 56\n53\n48 83 ec 18\n48 89 fb\ne8 91 b1 ff ff\n48 89 df\ne8 09 b4 ff ff\n49 89 c6\n48 89 df\ne8 2e b1 ff ff\n4c 89 f7\n48 89 c6\ne8 13 b5 ff ff\n48 c7 04 24 bf c3 60 00\n48 8b 05 34 68 20 00\n48 89 44 24 08\n48 89 df\ne8 27 b5 ff ff\n48 89 e6\nba 01 00 00 00\n48 89 c7\ne8 a7 b0 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p992
S'.text:0000000000407690\n.text:0000000000407692\n.text:0000000000407693\n.text:0000000000407697\n.text:000000000040769a\n.text:000000000040769f\n.text:00000000004076a2\n.text:00000000004076a7\n.text:00000000004076aa\n.text:00000000004076ad\n.text:00000000004076b2\n.text:00000000004076b5\n.text:00000000004076b8\n.text:00000000004076bd\n.text:00000000004076c5\n.text:00000000004076cc\n.text:00000000004076d1\n.text:00000000004076d4\n.text:00000000004076d9\n.text:00000000004076dc\n.text:00000000004076e1\n.text:00000000004076e4\n.text:00000000004076e9\n.text:00000000004076ed\n.text:00000000004076ee\n.text:00000000004076f0\n'
p993
tp994
sS'XtParent'
p995
(S'\n__stdcall XtParent()\n'
p996
V\u000avoid XtParent(void)\u000a\u000a{\u000a  (*(code *)PTR_XtParent_0060d318)();\u000a  return;\u000a}\u000a\u000a
p997
S'JMP qword ptr [0x0060d318]\n'
p998
S'ff 25 12 a7 20 00\n'
p999
S'.plt:0000000000402c00\n'
p1000
tp1001
sS'exit'
p1002
(S'\n__stdcall exit(int __status)\n'
p1003
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_0060d320)();\u000a  return;\u000a}\u000a\u000a
p1004
S'JMP qword ptr [0x0060d320]\n'
p1005
S'ff 25 0a a7 20 00\n'
p1006
S'.plt:0000000000402c10\n'
p1007
tp1008
sS'CreateLists'
p1009
(S'\n__stdcall CreateLists(Widget parent, WNode * node, char * * names, char * * cons_names)\n'
p1010
V\u000avoid CreateLists(Widget parent,WNode *node,char **names,char **cons_names)\u000a\u000a{\u000a  ResourceBoxInfo *pRVar1;\u000a  long lVar2;\u000a  undefined8 uVar3;\u000a  Widget p_Var4;\u000a  char **ppcVar5;\u000a  uint uVar6;\u000a  Arg args [3];\u000a  undefined8 local_68;\u000a  char **local_60;\u000a  char *local_58;\u000a  undefined8 local_50;\u000a  undefined8 local_48;\u000a  \u000a  pRVar1 = node->resources->res_box;\u000a  XtCreateManagedWidget("namesLabel",labelWidgetClass,parent,0,0);\u000a  local_68 = 0x4097a6;\u000a  if (names == (char **)0x0) {\u000a    local_60 = noneList;\u000a    local_58 = "numberStrings";\u000a    local_50 = 1;\u000a    local_48 = 0x60c647;\u000a    uVar6 = 3;\u000a    ppcVar5 = (char **)0x0;\u000a    lVar2 = 2;\u000a  }\u000a  else {\u000a    uVar6 = 1;\u000a    lVar2 = 0;\u000a    ppcVar5 = names;\u000a  }\u000a  (&local_60)[lVar2 * 2] = ppcVar5;\u000a  uVar3 = XtCreateManagedWidget("normalViewport",viewportWidgetClass,parent,0,0);\u000a  p_Var4 = (Widget)XtCreateManagedWidget("namesList",listWidgetClass,uVar3,&local_68,(ulong)uVar6);\u000a  pRVar1->norm_list = p_Var4;\u000a  XtAddCallback(p_Var4,0x60c408,ResourceListCallback,node);\u000a  XtAddCallback(pRVar1->norm_list,0x60c429,FreeClientData,names);\u000a  if (cons_names == (char **)0x0) {\u000a    pRVar1->cons_list = (Widget)0x0;\u000a  }\u000a  else {\u000a    XtCreateManagedWidget("constraintLabel",labelWidgetClass,parent,0,0);\u000a    local_68 = 0x4097a6;\u000a    local_60 = cons_names;\u000a    uVar3 = XtCreateManagedWidget("constraintViewport",viewportWidgetClass,parent,0,0);\u000a    p_Var4 = (Widget)XtCreateManagedWidget("constraintList",listWidgetClass,uVar3,&local_68,1);\u000a    pRVar1->cons_list = p_Var4;\u000a    XtAddCallback(p_Var4,0x60c408,ResourceListCallback,node);\u000a    XtAddCallback(pRVar1->cons_list,0x60c429,FreeClientData,cons_names);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1011
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV R15,RSI\nMOV R12,RDI\nMOV RAX,qword ptr [R15 + 0x48]\nMOV R13,qword ptr [RAX + 0x18]\nMOV RSI,qword ptr [0x0060de40]\nMOV EDI,0x40a2b0\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x00402750\nMOV qword ptr [RSP],0x4097a6\nTEST RBX,RBX\nJZ 0x00407f94\nMOV EBP,0x1\nXOR EAX,EAX\nMOV RCX,RBX\nJMP 0x00407fc4\nMOV qword ptr [RSP + 0x8],0x60dc90\nMOV qword ptr [RSP + 0x10],0x40a2bb\nMOV qword ptr [RSP + 0x18],0x1\nMOV qword ptr [RSP + 0x20],0x60c647\nMOV EBP,0x3\nXOR ECX,ECX\nMOV EAX,0x2\nSHL RAX,0x4\nMOV qword ptr [RSP + RAX*0x1 + 0x8],RCX\nMOV RSI,qword ptr [0x0060dd90]\nMOV EDI,0x40a2c9\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x00402750\nMOV RSI,qword ptr [0x0060de00]\nMOV RCX,RSP\nMOV EDI,0x40a2d8\nMOV RDX,RAX\nMOV R8D,EBP\nCALL 0x00402750\nMOV qword ptr [R13 + 0x18],RAX\nMOV ESI,0x60c408\nMOV EDX,0x4052f0\nMOV RDI,RAX\nMOV RCX,R15\nCALL 0x00402c70\nMOV RDI,qword ptr [R13 + 0x18]\nMOV ESI,0x60c429\nMOV EDX,0x408460\nMOV RCX,RBX\nCALL 0x00402c70\nTEST R14,R14\nJZ 0x004080c5\nMOV RSI,qword ptr [0x0060de40]\nMOV EDI,0x40a2e2\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x00402750\nMOV qword ptr [RSP],0x4097a6\nMOV qword ptr [RSP + 0x8],R14\nMOV RSI,qword ptr [0x0060dd90]\nMOV EDI,0x40a2f2\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R12\nCALL 0x00402750\nMOV RSI,qword ptr [0x0060de00]\nMOV RCX,RSP\nMOV EDI,0x40a305\nMOV R8D,0x1\nMOV RDX,RAX\nCALL 0x00402750\nMOV qword ptr [R13 + 0x20],RAX\nMOV ESI,0x60c408\nMOV EDX,0x4052f0\nMOV RDI,RAX\nMOV RCX,R15\nCALL 0x00402c70\nMOV RDI,qword ptr [R13 + 0x20]\nMOV ESI,0x60c429\nMOV EDX,0x408460\nMOV RCX,R14\nCALL 0x00402c70\nJMP 0x004080cd\nMOV qword ptr [R13 + 0x20],0x0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1012
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n49 89 f7\n49 89 fc\n49 8b 47 48\n4c 8b 68 18\n48 8b 35 d7 5e 20 00\nbf b0 a2 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 d5 a7 ff ff\n48 c7 04 24 a6 97 40 00\n48 85 db\n74 0c\nbd 01 00 00 00\n31 c0\n48 89 d9\neb 30\n48 c7 44 24 08 90 dc 60 00\n48 c7 44 24 10 bb a2 40 00\n48 c7 44 24 18 01 00 00 00\n48 c7 44 24 20 47 c6 60 00\nbd 03 00 00 00\n31 c9\nb8 02 00 00 00\n48 c1 e0 04\n48 89 4c 04 08\n48 8b 35 bc 5d 20 00\nbf c9 a2 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 6a a7 ff ff\n48 8b 35 13 5e 20 00\n48 89 e1\nbf d8 a2 40 00\n48 89 c2\n41 89 e8\ne8 50 a7 ff ff\n49 89 45 18\nbe 08 c4 60 00\nba f0 52 40 00\n48 89 c7\n4c 89 f9\ne8 57 ac ff ff\n49 8b 7d 18\nbe 29 c4 60 00\nba 60 84 40 00\n48 89 d9\ne8 41 ac ff ff\n4d 85 f6\n0f 84 8d 00 00 00\n48 8b 35 01 5e 20 00\nbf e2 a2 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 ff a6 ff ff\n48 c7 04 24 a6 97 40 00\n4c 89 74 24 08\n48 8b 35 2b 5d 20 00\nbf f2 a2 40 00\n31 c9\n45 31 c0\n4c 89 e2\ne8 d9 a6 ff ff\n48 8b 35 82 5d 20 00\n48 89 e1\nbf 05 a3 40 00\n41 b8 01 00 00 00\n48 89 c2\ne8 bc a6 ff ff\n49 89 45 20\nbe 08 c4 60 00\nba f0 52 40 00\n48 89 c7\n4c 89 f9\ne8 c3 ab ff ff\n49 8b 7d 20\nbe 29 c4 60 00\nba 60 84 40 00\n4c 89 f1\ne8 ad ab ff ff\neb 08\n49 c7 45 20 00 00 00 00\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1013
S'.text:0000000000407f40\n.text:0000000000407f41\n.text:0000000000407f43\n.text:0000000000407f45\n.text:0000000000407f47\n.text:0000000000407f49\n.text:0000000000407f4a\n.text:0000000000407f4e\n.text:0000000000407f51\n.text:0000000000407f54\n.text:0000000000407f57\n.text:0000000000407f5a\n.text:0000000000407f5e\n.text:0000000000407f62\n.text:0000000000407f69\n.text:0000000000407f6e\n.text:0000000000407f70\n.text:0000000000407f73\n.text:0000000000407f76\n.text:0000000000407f7b\n.text:0000000000407f83\n.text:0000000000407f86\n.text:0000000000407f88\n.text:0000000000407f8d\n.text:0000000000407f8f\n.text:0000000000407f92\n.text:0000000000407f94\n.text:0000000000407f9d\n.text:0000000000407fa6\n.text:0000000000407faf\n.text:0000000000407fb8\n.text:0000000000407fbd\n.text:0000000000407fbf\n.text:0000000000407fc4\n.text:0000000000407fc8\n.text:0000000000407fcd\n.text:0000000000407fd4\n.text:0000000000407fd9\n.text:0000000000407fdb\n.text:0000000000407fde\n.text:0000000000407fe1\n.text:0000000000407fe6\n.text:0000000000407fed\n.text:0000000000407ff0\n.text:0000000000407ff5\n.text:0000000000407ff8\n.text:0000000000407ffb\n.text:0000000000408000\n.text:0000000000408004\n.text:0000000000408009\n.text:000000000040800e\n.text:0000000000408011\n.text:0000000000408014\n.text:0000000000408019\n.text:000000000040801d\n.text:0000000000408022\n.text:0000000000408027\n.text:000000000040802a\n.text:000000000040802f\n.text:0000000000408032\n.text:0000000000408038\n.text:000000000040803f\n.text:0000000000408044\n.text:0000000000408046\n.text:0000000000408049\n.text:000000000040804c\n.text:0000000000408051\n.text:0000000000408059\n.text:000000000040805e\n.text:0000000000408065\n.text:000000000040806a\n.text:000000000040806c\n.text:000000000040806f\n.text:0000000000408072\n.text:0000000000408077\n.text:000000000040807e\n.text:0000000000408081\n.text:0000000000408086\n.text:000000000040808c\n.text:000000000040808f\n.text:0000000000408094\n.text:0000000000408098\n.text:000000000040809d\n.text:00000000004080a2\n.text:00000000004080a5\n.text:00000000004080a8\n.text:00000000004080ad\n.text:00000000004080b1\n.text:00000000004080b6\n.text:00000000004080bb\n.text:00000000004080be\n.text:00000000004080c3\n.text:00000000004080c5\n.text:00000000004080cd\n.text:00000000004080d1\n.text:00000000004080d2\n.text:00000000004080d4\n.text:00000000004080d6\n.text:00000000004080d8\n.text:00000000004080da\n.text:00000000004080db\n'
p1014
tp1015
sS'XawDialogAddButton'
p1016
(S'\n__stdcall XawDialogAddButton()\n'
p1017
V\u000avoid XawDialogAddButton(void)\u000a\u000a{\u000a  (*(code *)PTR_XawDialogAddButton_0060d1e8)();\u000a  return;\u000a}\u000a\u000a
p1018
S'JMP qword ptr [0x0060d1e8]\n'
p1019
S'ff 25 42 a8 20 00\n'
p1020
S'.plt:00000000004029a0\n'
p1021
tp1022
sS'XFindContext'
p1023
(S'\n__stdcall XFindContext()\n'
p1024
V\u000avoid XFindContext(void)\u000a\u000a{\u000a  (*(code *)PTR_XFindContext_0060d1b0)();\u000a  return;\u000a}\u000a\u000a
p1025
S'JMP qword ptr [0x0060d1b0]\n'
p1026
S'ff 25 7a a8 20 00\n'
p1027
S'.plt:0000000000402930\n'
p1028
tp1029
sS'_PopupFileDialog'
p1030
(S'\n__stdcall _PopupFileDialog(Widget w, String str, String default_value, XtCallbackProc * func, XtPointer data)\n'
p1031
V\u000avoid _PopupFileDialog(Widget w,String str,String default_value,\u000a                     void (*func)(Widget,XtPointer,XtPointer),XtPointer data)\u000a\u000a{\u000a  Widget w_00;\u000a  undefined8 uVar1;\u000a  void (**ppVar2)(Widget,XtPointer,XtPointer);\u000a  undefined8 uVar3;\u000a  int iVar4;\u000a  Arg args [2];\u000a  undefined8 local_58;\u000a  String local_50;\u000a  undefined8 local_48;\u000a  String local_40;\u000a  \u000a  if (file_dialog_context == 0) {\u000a    file_dialog_context = XrmUniqueQuark();\u000a  }\u000a  w_00 = (Widget)XtCreatePopupShell("fileDialog",transientShellWidgetClass,w,0,0);\u000a  local_58 = 0x60c52d;\u000a  local_48 = 0x60c6db;\u000a  local_50 = str;\u000a  local_40 = default_value;\u000a  uVar1 = XtCreateManagedWidget("dialog",dialogWidgetClass,w_00,&local_58,2);\u000a  ppVar2 = (void (**)(Widget,XtPointer,XtPointer))XtMalloc(0x10);\u000a  *ppVar2 = func;\u000a  ppVar2[1] = data;\u000a  uVar3 = XtDisplay(uVar1);\u000a  iVar4 = XSaveContext(uVar3,uVar1,(ulong)(uint)file_dialog_context,ppVar2);\u000a  if (iVar4 == 0) {\u000a    XawDialogAddButton(uVar1,&DAT_0040954a,_PopdownFileDialog,1);\u000a    XawDialogAddButton(uVar1,"cancel",_PopdownFileDialog,0);\u000a    PopupCentered((XEvent *)0x0,w_00);\u000a  }\u000a  else {\u000a    SetMessage(global_screen_data.info_label,\u000a               "Error while trying to save Context\u005cnAborting file dialog popup.");\u000a    XtDestroyWidget(w_00);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1032
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R14,R8\nMOV R15,RCX\nMOV R13,RDX\nMOV RBP,RSI\nMOV RBX,RDI\nCMP dword ptr [0x0060deec],0x0\nJNZ 0x004064c1\nCALL 0x00402ba0\nMOV dword ptr [0x0060deec],EAX\nMOV RSI,qword ptr [0x0060dd50]\nMOV EDI,0x409c60\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402730\nMOV R12,RAX\nMOV qword ptr [RSP],0x60c52d\nMOV qword ptr [RSP + 0x8],RBP\nMOV qword ptr [RSP + 0x10],0x60c6db\nMOV qword ptr [RSP + 0x18],R13\nMOV RSI,qword ptr [0x0060dd00]\nMOV RCX,RSP\nMOV EDI,0x409c6b\nMOV R8D,0x2\nMOV RDX,R12\nCALL 0x00402750\nMOV RBX,RAX\nMOV EDI,0x10\nCALL 0x00402760\nMOV RBP,RAX\nMOV qword ptr [RBP],R15\nMOV qword ptr [RBP + 0x8],R14\nMOV RDI,RBX\nCALL 0x00402ab0\nMOV EDX,dword ptr [0x0060deec]\nMOV RDI,RAX\nMOV RSI,RBX\nMOV RCX,RBP\nCALL 0x004027c0\nTEST EAX,EAX\nJZ 0x00406568\nMOV RDI,qword ptr [0x0060dff8]\nMOV ESI,0x409c72\nCALL 0x00406120\nMOV RDI,R12\nCALL 0x00402b70\nJMP 0x0040659f\nMOV ESI,0x40954a\nMOV EDX,0x4065b0\nMOV ECX,0x1\nMOV RDI,RBX\nCALL 0x004029a0\nMOV ESI,0x409543\nMOV EDX,0x4065b0\nXOR ECX,ECX\nMOV RDI,RBX\nCALL 0x004029a0\nXOR EDI,EDI\nXOR EDX,EDX\nMOV RSI,R12\nCALL 0x00406670\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1033
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n4d 89 c6\n49 89 cf\n49 89 d5\n48 89 f5\n48 89 fb\n83 3d 38 7a 20 00 00\n75 0b\ne8 e5 c6 ff ff\n89 05 2b 7a 20 00\n48 8b 35 88 78 20 00\nbf 60 9c 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 56 c2 ff ff\n49 89 c4\n48 c7 04 24 2d c5 60 00\n48 89 6c 24 08\n48 c7 44 24 10 db c6 60 00\n4c 89 6c 24 18\n48 8b 35 01 78 20 00\n48 89 e1\nbf 6b 9c 40 00\n41 b8 02 00 00 00\n4c 89 e2\ne8 3b c2 ff ff\n48 89 c3\nbf 10 00 00 00\ne8 3e c2 ff ff\n48 89 c5\n4c 89 7d 00\n4c 89 75 08\n48 89 df\ne8 7b c5 ff ff\n8b 15 b1 79 20 00\n48 89 c7\n48 89 de\n48 89 e9\ne8 77 c2 ff ff\n85 c0\n74 1b\n48 8b 3d a4 7a 20 00\nbe 72 9c 40 00\ne8 c2 fb ff ff\n4c 89 e7\ne8 0a c6 ff ff\neb 37\nbe 4a 95 40 00\nba b0 65 40 00\nb9 01 00 00 00\n48 89 df\ne8 21 c4 ff ff\nbe 43 95 40 00\nba b0 65 40 00\n31 c9\n48 89 df\ne8 0d c4 ff ff\n31 ff\n31 d2\n4c 89 e6\ne8 d1 00 00 00\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1034
S'.text:0000000000406490\n.text:0000000000406491\n.text:0000000000406493\n.text:0000000000406495\n.text:0000000000406497\n.text:0000000000406499\n.text:000000000040649a\n.text:000000000040649e\n.text:00000000004064a1\n.text:00000000004064a4\n.text:00000000004064a7\n.text:00000000004064aa\n.text:00000000004064ad\n.text:00000000004064b4\n.text:00000000004064b6\n.text:00000000004064bb\n.text:00000000004064c1\n.text:00000000004064c8\n.text:00000000004064cd\n.text:00000000004064cf\n.text:00000000004064d2\n.text:00000000004064d5\n.text:00000000004064da\n.text:00000000004064dd\n.text:00000000004064e5\n.text:00000000004064ea\n.text:00000000004064f3\n.text:00000000004064f8\n.text:00000000004064ff\n.text:0000000000406502\n.text:0000000000406507\n.text:000000000040650d\n.text:0000000000406510\n.text:0000000000406515\n.text:0000000000406518\n.text:000000000040651d\n.text:0000000000406522\n.text:0000000000406525\n.text:0000000000406529\n.text:000000000040652d\n.text:0000000000406530\n.text:0000000000406535\n.text:000000000040653b\n.text:000000000040653e\n.text:0000000000406541\n.text:0000000000406544\n.text:0000000000406549\n.text:000000000040654b\n.text:000000000040654d\n.text:0000000000406554\n.text:0000000000406559\n.text:000000000040655e\n.text:0000000000406561\n.text:0000000000406566\n.text:0000000000406568\n.text:000000000040656d\n.text:0000000000406572\n.text:0000000000406577\n.text:000000000040657a\n.text:000000000040657f\n.text:0000000000406584\n.text:0000000000406589\n.text:000000000040658b\n.text:000000000040658e\n.text:0000000000406593\n.text:0000000000406595\n.text:0000000000406597\n.text:000000000040659a\n.text:000000000040659f\n.text:00000000004065a3\n.text:00000000004065a4\n.text:00000000004065a6\n.text:00000000004065a8\n.text:00000000004065aa\n.text:00000000004065ac\n.text:00000000004065ad\n'
p1035
tp1036
sS'SetToggleGroupLeaders'
p1037
(S'\n__stdcall SetToggleGroupLeaders(WNode * node)\n'
p1038
V\u000avoid SetToggleGroupLeaders(WNode *node)\u000a\u000a{\u000a  NameInfo *pNVar1;\u000a  Arg args [1];\u000a  \u000a  pNVar1 = node->resources->res_box->name_info;\u000a  while (pNVar1 != (NameInfo *)0x0) {\u000a    XtSetValues(pNVar1->sep_leader,(Arg *)&ram0x0060dc80,1);\u000a    if (pNVar1->name_leader != (Widget)0x0) {\u000a      XtSetValues(pNVar1->name_leader,0x60dc80,1);\u000a    }\u000a    pNVar1 = (NameInfo *)pNVar1->next;\u000a  }\u000a  SetResourceString((Widget)0x0,node,(XtPointer)0x0);\u000a  return;\u000a}\u000a\u000a
p1039
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RAX,qword ptr [R14 + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RBX,qword ptr [RAX + 0x28]\nTEST RBX,RBX\nJNZ 0x00408228\nJMP 0x00408255\nMOV RBX,qword ptr [RBX]\nTEST RBX,RBX\nJZ 0x00408255\nMOV RDI,qword ptr [RBX + 0x8]\nMOV ESI,0x60dc80\nMOV EDX,0x1\nCALL 0x00402790\nMOV RDI,qword ptr [RBX + 0x10]\nTEST RDI,RDI\nJZ 0x00408220\nMOV ESI,0x60dc80\nMOV EDX,0x1\nCALL 0x00402790\nJMP 0x00408220\nXOR EDI,EDI\nXOR EDX,EDX\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00405070\n'
p1040
S'41 56\n53\n50\n49 89 fe\n49 8b 46 48\n48 8b 40 18\n48 8b 58 28\n48 85 db\n75 10\neb 3b\n48 8b 1b\n48 85 db\n74 2d\n48 8b 7b 08\nbe 80 dc 60 00\nba 01 00 00 00\ne8 55 a5 ff ff\n48 8b 7b 10\n48 85 ff\n74 dc\nbe 80 dc 60 00\nba 01 00 00 00\ne8 3d a5 ff ff\neb cb\n31 ff\n31 d2\n4c 89 f6\n48 83 c4 08\n5b\n41 5e\ne9 08 ce ff ff\n'
p1041
S'.text:0000000000408200\n.text:0000000000408202\n.text:0000000000408203\n.text:0000000000408204\n.text:0000000000408207\n.text:000000000040820b\n.text:000000000040820f\n.text:0000000000408213\n.text:0000000000408216\n.text:0000000000408218\n.text:0000000000408220\n.text:0000000000408223\n.text:0000000000408226\n.text:0000000000408228\n.text:000000000040822c\n.text:0000000000408231\n.text:0000000000408236\n.text:000000000040823b\n.text:000000000040823f\n.text:0000000000408242\n.text:0000000000408244\n.text:0000000000408249\n.text:000000000040824e\n.text:0000000000408253\n.text:0000000000408255\n.text:0000000000408257\n.text:0000000000408259\n.text:000000000040825c\n.text:0000000000408260\n.text:0000000000408261\n.text:0000000000408263\n'
p1042
tp1043
sS'XtIsSensitive'
p1044
(S'\n__stdcall XtIsSensitive()\n'
p1045
V\u000avoid XtIsSensitive(void)\u000a\u000a{\u000a  (*(code *)PTR_XtIsSensitive_0060d160)();\u000a  return;\u000a}\u000a\u000a
p1046
S'JMP qword ptr [0x0060d160]\n'
p1047
S'ff 25 ca a8 20 00\n'
p1048
S'.plt:0000000000402890\n'
p1049
tp1050
sS'_FindWidget'
p1051
(S'\n__stdcall _FindWidget(Widget w)\n'
p1052
V\u000avoid _FindWidget(Widget w)\u000a\u000a{\u000a  Window win;\u000a  WNode *node;\u000a  int y;\u000a  int x;\u000a  char msg [8192];\u000a  short local_2020 [2];\u000a  short local_201c [2];\u000a  char local_2018 [8200];\u000a  \u000a  sprintf(local_2018,res_labels[14]);\u000a  SetMessage(global_screen_data.info_label,local_2018);\u000a  win = GetClientWindow(w,(int *)local_201c,(int *)local_2020);\u000a  if ((win != 0) && (node = FindWidgetFromWindow(global_tree_info,win), node != (WNode *)0x0)) {\u000a    _XEditResResetStream(0x60df50);\u000a    InsertWidgetFromNode(&global_client.stream,node);\u000a    _XEditResPut16(0x60df50,(ulong)(uint)(int)local_201c[0]);\u000a    _XEditResPut16(0x60df50,(ulong)(uint)(int)local_2020[0]);\u000a    SetCommand(w,&DAT_00000002);\u000a    return;\u000a  }\u000a  SetMessage(global_screen_data.info_label,res_labels[15]);\u000a  return;\u000a}\u000a\u000a
p1053
S'PUSH R14\nPUSH RBX\nSUB RSP,0x2018\nMOV R14,RDI\nMOV RSI,qword ptr [0x0060e070]\nLEA RBX,[RSP + 0x10]\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nLEA RSI,[RSP + 0xc]\nLEA RDX,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00403190\nTEST RAX,RAX\nJZ 0x00404486\nMOV RDI,qword ptr [0x0060dec8]\nMOV RSI,RAX\nCALL 0x00406320\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00404486\nMOV EDI,0x60df50\nCALL 0x00402bb0\nMOV EDI,0x60df50\nMOV RSI,RBX\nCALL 0x00406e40\nMOVSX ESI,word ptr [RSP + 0xc]\nMOV EDI,0x60df50\nCALL 0x00402c80\nMOVSX ESI,word ptr [RSP + 0x8]\nMOV EDI,0x60df50\nCALL 0x00402c80\nMOV ESI,0x2\nXOR EDX,EDX\nMOV RDI,R14\nCALL 0x00403310\nJMP 0x00404499\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e078]\nCALL 0x00406120\nADD RSP,0x2018\nPOP RBX\nPOP R14\nRET\n'
p1054
S'41 56\n53\n48 81 ec 18 20 00 00\n49 89 fe\n48 8b 35 7c 9c 20 00\n48 8d 5c 24 10\n31 c0\n48 89 df\ne8 ed e7 ff ff\n48 8b 3d ee 9b 20 00\n48 89 de\ne8 0e 1d 00 00\n48 8d 74 24 0c\n48 8d 54 24 08\n4c 89 f7\ne8 6c ed ff ff\n48 85 c0\n74 5d\n48 8b 3d 98 9a 20 00\n48 89 c6\ne8 e8 1e 00 00\n48 89 c3\n48 85 db\n74 46\nbf 50 df 60 00\ne8 66 e7 ff ff\nbf 50 df 60 00\n48 89 de\ne8 e9 29 00 00\n0f bf 74 24 0c\nbf 50 df 60 00\ne8 1a e8 ff ff\n0f bf 74 24 08\nbf 50 df 60 00\ne8 0b e8 ff ff\nbe 02 00 00 00\n31 d2\n4c 89 f7\ne8 8c ee ff ff\neb 13\n48 8b 3d 6b 9b 20 00\n48 8b 35 e4 9b 20 00\ne8 87 1c 00 00\n48 81 c4 18 20 00 00\n5b\n41 5e\nc3\n'
p1055
S'.text:00000000004043e0\n.text:00000000004043e2\n.text:00000000004043e3\n.text:00000000004043ea\n.text:00000000004043ed\n.text:00000000004043f4\n.text:00000000004043f9\n.text:00000000004043fb\n.text:00000000004043fe\n.text:0000000000404403\n.text:000000000040440a\n.text:000000000040440d\n.text:0000000000404412\n.text:0000000000404417\n.text:000000000040441c\n.text:000000000040441f\n.text:0000000000404424\n.text:0000000000404427\n.text:0000000000404429\n.text:0000000000404430\n.text:0000000000404433\n.text:0000000000404438\n.text:000000000040443b\n.text:000000000040443e\n.text:0000000000404440\n.text:0000000000404445\n.text:000000000040444a\n.text:000000000040444f\n.text:0000000000404452\n.text:0000000000404457\n.text:000000000040445c\n.text:0000000000404461\n.text:0000000000404466\n.text:000000000040446b\n.text:0000000000404470\n.text:0000000000404475\n.text:000000000040447a\n.text:000000000040447c\n.text:000000000040447f\n.text:0000000000404484\n.text:0000000000404486\n.text:000000000040448d\n.text:0000000000404494\n.text:0000000000404499\n.text:00000000004044a0\n.text:00000000004044a1\n.text:00000000004044a3\n'
p1056
tp1057
sS'FreeEvent'
p1058
(S'\n__stdcall FreeEvent(Event * event)\n'
p1059
V\u000avoid FreeEvent(Event *event)\u000a\u000a{\u000a  uint uVar1;\u000a  undefined8 *puVar2;\u000a  uint uVar3;\u000a  undefined8 uVar4;\u000a  long lVar5;\u000a  \u000a  switch(*(undefined4 *)*event) {\u000a  case 0:\u000a    if (*(long *)(*event + 0x18) == 0) {\u000a      return;\u000a    }\u000a    if (*(short *)(*event + 0x10) != 0) {\u000a      puVar2 = (undefined8 *)(*(long *)(*event + 0x18) + 0x20);\u000a      uVar3 = 0;\u000a      do {\u000a        XtFree(puVar2[-3]);\u000a        XtFree(puVar2[-1]);\u000a        XtFree(*puVar2);\u000a        uVar3 = uVar3 + 1;\u000a        puVar2 = puVar2 + 6;\u000a      } while (uVar3 < (uint)*(ushort *)(*event + 0x10));\u000a    }\u000a    uVar4 = *(undefined8 *)(*event + 0x18);\u000a    goto LAB_00404239;\u000a  case 1:\u000a    if (*(long *)(*event + 8) == 0) {\u000a      return;\u000a    }\u000a    if (*(short *)(*event + 4) != 0) {\u000a      puVar2 = (undefined8 *)(*(long *)(*event + 8) + 0x18);\u000a      uVar3 = 0;\u000a      do {\u000a        XtFree(puVar2[-2]);\u000a        XtFree(*puVar2);\u000a        uVar3 = uVar3 + 1;\u000a        puVar2 = puVar2 + 4;\u000a      } while (uVar3 < (uint)*(ushort *)(*event + 4));\u000a    }\u000a    break;\u000a  case 2:\u000a    lVar5 = *(long *)(*event + 8);\u000a    if (lVar5 == 0) {\u000a      return;\u000a    }\u000a    if (*(short *)(*event + 4) != 0) {\u000a      uVar3 = 0;\u000a      do {\u000a        XtFree(*(undefined8 *)(lVar5 + 8));\u000a        if (*(char *)(lVar5 + 0x18) == 0) {\u000a          if (*(long *)(lVar5 + 0x30) != 0) {\u000a            if (*(short *)(lVar5 + 0x28) != 0) {\u000a              puVar2 = (undefined8 *)(*(long *)(lVar5 + 0x30) + 0x18);\u000a              uVar1 = 0;\u000a              do {\u000a                XtFree(puVar2[-2]);\u000a                XtFree(puVar2[-1]);\u000a                XtFree(*puVar2);\u000a                uVar1 = uVar1 + 1;\u000a                puVar2 = puVar2 + 4;\u000a              } while (uVar1 < (uint)*(ushort *)(lVar5 + 0x28));\u000a            }\u000a            uVar4 = *(undefined8 *)(lVar5 + 0x30);\u000a            goto LAB_004041c0;\u000a          }\u000a        }\u000a        else {\u000a          uVar4 = *(undefined8 *)(lVar5 + 0x20);\u000aLAB_004041c0:\u000a          XtFree(uVar4);\u000a        }\u000a        uVar3 = uVar3 + 1;\u000a        lVar5 = lVar5 + 0x38;\u000a      } while (uVar3 < (uint)*(ushort *)(*event + 4));\u000a    }\u000a    break;\u000a  case 3:\u000a    if (*(long *)(*event + 8) == 0) {\u000a      return;\u000a    }\u000a    if (*(short *)(*event + 4) != 0) {\u000a      puVar2 = (undefined8 *)(*(long *)(*event + 8) + 0x28);\u000a      uVar3 = 0;\u000a      do {\u000a        XtFree(puVar2[-3]);\u000a        if (*(char *)(puVar2 + -1) != 0) {\u000a          XtFree(*puVar2);\u000a        }\u000a        uVar3 = uVar3 + 1;\u000a        puVar2 = puVar2 + 8;\u000a      } while (uVar3 < (uint)*(ushort *)(*event + 4));\u000a    }\u000a    break;\u000a  case 4:\u000a    uVar4 = *(undefined8 *)(*event + 0x10);\u000a    goto LAB_00404239;\u000a  default:\u000a    return;\u000a  }\u000a  uVar4 = *(undefined8 *)(*event + 8);\u000aLAB_00404239:\u000a  XtFree(uVar4);\u000a  return;\u000a}\u000a\u000a
p1060
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14,RDI\nMOV EAX,dword ptr [R14]\nCMP RAX,0x4\nJA 0x0040422c\nJMP qword ptr [0x409608 + RAX*0x8]\nMOV RBX,qword ptr [R14 + 0x18]\nTEST RBX,RBX\nJZ 0x0040422c\nCMP word ptr [R14 + 0x10],0x0\nJZ 0x004040c9\nADD RBX,0x20\nXOR EBP,EBP\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX + -0x18]\nCALL 0x00402a90\nMOV RDI,qword ptr [RBX + -0x8]\nCALL 0x00402a90\nMOV RDI,qword ptr [RBX]\nCALL 0x00402a90\nINC EBP\nMOVZX EAX,word ptr [R14 + 0x10]\nADD RBX,0x30\nCMP EBP,EAX\nJC 0x004040a0\nMOV RDI,qword ptr [R14 + 0x18]\nJMP 0x00404239\nMOV RBX,qword ptr [R14 + 0x8]\nTEST RBX,RBX\nJZ 0x0040422c\nCMP word ptr [R14 + 0x4],0x0\nJZ 0x00404226\nADD RBX,0x18\nXOR EBP,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX + -0x10]\nCALL 0x00402a90\nMOV RDI,qword ptr [RBX]\nCALL 0x00402a90\nINC EBP\nMOVZX EAX,word ptr [R14 + 0x4]\nADD RBX,0x20\nCMP EBP,EAX\nJC 0x00404100\nJMP 0x00404226\nMOV R12,qword ptr [R14 + 0x8]\nTEST R12,R12\nJZ 0x0040422c\nCMP word ptr [R14 + 0x4],0x0\nJZ 0x00404226\nXOR R15D,R15D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [R12 + 0x8]\nCALL 0x00402a90\nCMP byte ptr [R12 + 0x18],0x0\nJZ 0x00404170\nMOV RDI,qword ptr [R12 + 0x20]\nJMP 0x004041c0\nMOV RBP,qword ptr [R12 + 0x30]\nTEST RBP,RBP\nJZ 0x004041c5\nCMP word ptr [R12 + 0x28],0x0\nJZ 0x004041bb\nADD RBP,0x18\nXOR EBX,EBX\nNOP dword ptr [RAX]\nMOV RDI,qword ptr [RBP + -0x10]\nCALL 0x00402a90\nMOV RDI,qword ptr [RBP + -0x8]\nCALL 0x00402a90\nMOV RDI,qword ptr [RBP]\nCALL 0x00402a90\nINC EBX\nMOVZX EAX,word ptr [R12 + 0x28]\nADD RBP,0x20\nCMP EBX,EAX\nJC 0x00404190\nMOV RDI,qword ptr [R12 + 0x30]\nCALL 0x00402a90\nINC R15D\nADD R12,0x38\nMOVZX EAX,word ptr [R14 + 0x4]\nCMP R15D,EAX\nJC 0x00404150\nJMP 0x00404226\nMOV RBX,qword ptr [R14 + 0x8]\nTEST RBX,RBX\nJZ 0x0040422c\nCMP word ptr [R14 + 0x4],0x0\nJZ 0x00404226\nADD RBX,0x28\nXOR EBP,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX + -0x18]\nCALL 0x00402a90\nCMP byte ptr [RBX + -0x8],0x0\nJZ 0x00404217\nMOV RDI,qword ptr [RBX]\nCALL 0x00402a90\nINC EBP\nMOVZX EAX,word ptr [R14 + 0x4]\nADD RBX,0x40\nCMP EBP,EAX\nJC 0x00404200\nMOV RDI,qword ptr [R14 + 0x8]\nJMP 0x00404239\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [R14 + 0x10]\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00402a90\n'
p1061
S'55\n41 57\n41 56\n41 54\n53\n49 89 fe\n41 8b 06\n48 83 f8 04\n0f 87 b4 01 00 00\nff 24 c5 08 96 40 00\n49 8b 5e 18\n48 85 db\n0f 84 a0 01 00 00\n66 41 83 7e 10 00\n74 35\n48 83 c3 20\n31 ed\n66 0f 1f 44 00 00\n48 8b 7b e8\ne8 e7 e9 ff ff\n48 8b 7b f8\ne8 de e9 ff ff\n48 8b 3b\ne8 d6 e9 ff ff\nff c5\n41 0f b7 46 10\n48 83 c3 30\n39 c5\n72 d7\n49 8b 7e 18\ne9 67 01 00 00\n49 8b 5e 08\n48 85 db\n0f 84 4d 01 00 00\n66 41 83 7e 04 00\n0f 84 3b 01 00 00\n48 83 c3 18\n31 ed\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 7b f0\ne8 87 e9 ff ff\n48 8b 3b\ne8 7f e9 ff ff\nff c5\n41 0f b7 46 04\n48 83 c3 20\n39 c5\n72 e0\ne9 01 01 00 00\n4d 8b 66 08\n4d 85 e4\n0f 84 fa 00 00 00\n66 41 83 7e 04 00\n0f 84 e8 00 00 00\n45 31 ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 7c 24 08\ne8 36 e9 ff ff\n41 80 7c 24 18 00\n74 0e\n49 8b 7c 24 20\neb 57\n49 8b 6c 24 30\n48 85 ed\n74 4b\n66 41 83 7c 24 28 00\n74 38\n48 83 c5 18\n31 db\n0f 1f 80 00 00 00 00\n48 8b 7d f0\ne8 f7 e8 ff ff\n48 8b 7d f8\ne8 ee e8 ff ff\n48 8b 7d 00\ne8 e5 e8 ff ff\nff c3\n41 0f b7 44 24 28\n48 83 c5 20\n39 c3\n72 d5\n49 8b 7c 24 30\ne8 cb e8 ff ff\n41 ff c7\n49 83 c4 38\n41 0f b7 46 04\n41 39 c7\n0f 82 76 ff ff ff\neb 4a\n49 8b 5e 08\n48 85 db\n74 47\n66 41 83 7e 04 00\n74 39\n48 83 c3 28\n31 ed\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 7b e8\ne8 87 e8 ff ff\n80 7b f8 00\n74 08\n48 8b 3b\ne8 79 e8 ff ff\nff c5\n41 0f b7 46 04\n48 83 c3 40\n39 c5\n72 da\n49 8b 7e 08\neb 0d\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n49 8b 7e 10\n5b\n41 5c\n41 5e\n41 5f\n5d\ne9 4a e8 ff ff\n'
p1062
S'.text:0000000000404060\n.text:0000000000404061\n.text:0000000000404063\n.text:0000000000404065\n.text:0000000000404067\n.text:0000000000404068\n.text:000000000040406b\n.text:000000000040406e\n.text:0000000000404072\n.text:0000000000404078\n.text:000000000040407f\n.text:0000000000404083\n.text:0000000000404086\n.text:000000000040408c\n.text:0000000000404092\n.text:0000000000404094\n.text:0000000000404098\n.text:000000000040409a\n.text:00000000004040a0\n.text:00000000004040a4\n.text:00000000004040a9\n.text:00000000004040ad\n.text:00000000004040b2\n.text:00000000004040b5\n.text:00000000004040ba\n.text:00000000004040bc\n.text:00000000004040c1\n.text:00000000004040c5\n.text:00000000004040c7\n.text:00000000004040c9\n.text:00000000004040cd\n.text:00000000004040d2\n.text:00000000004040d6\n.text:00000000004040d9\n.text:00000000004040df\n.text:00000000004040e5\n.text:00000000004040eb\n.text:00000000004040ef\n.text:00000000004040f1\n.text:0000000000404100\n.text:0000000000404104\n.text:0000000000404109\n.text:000000000040410c\n.text:0000000000404111\n.text:0000000000404113\n.text:0000000000404118\n.text:000000000040411c\n.text:000000000040411e\n.text:0000000000404120\n.text:0000000000404125\n.text:0000000000404129\n.text:000000000040412c\n.text:0000000000404132\n.text:0000000000404138\n.text:000000000040413e\n.text:0000000000404141\n.text:0000000000404150\n.text:0000000000404155\n.text:000000000040415a\n.text:0000000000404160\n.text:0000000000404162\n.text:0000000000404167\n.text:0000000000404170\n.text:0000000000404175\n.text:0000000000404178\n.text:000000000040417a\n.text:0000000000404181\n.text:0000000000404183\n.text:0000000000404187\n.text:0000000000404189\n.text:0000000000404190\n.text:0000000000404194\n.text:0000000000404199\n.text:000000000040419d\n.text:00000000004041a2\n.text:00000000004041a6\n.text:00000000004041ab\n.text:00000000004041ad\n.text:00000000004041b3\n.text:00000000004041b7\n.text:00000000004041b9\n.text:00000000004041bb\n.text:00000000004041c0\n.text:00000000004041c5\n.text:00000000004041c8\n.text:00000000004041cc\n.text:00000000004041d1\n.text:00000000004041d4\n.text:00000000004041da\n.text:00000000004041dc\n.text:00000000004041e0\n.text:00000000004041e3\n.text:00000000004041e5\n.text:00000000004041eb\n.text:00000000004041ed\n.text:00000000004041f1\n.text:00000000004041f3\n.text:0000000000404200\n.text:0000000000404204\n.text:0000000000404209\n.text:000000000040420d\n.text:000000000040420f\n.text:0000000000404212\n.text:0000000000404217\n.text:0000000000404219\n.text:000000000040421e\n.text:0000000000404222\n.text:0000000000404224\n.text:0000000000404226\n.text:000000000040422a\n.text:000000000040422c\n.text:000000000040422d\n.text:000000000040422f\n.text:0000000000404231\n.text:0000000000404233\n.text:0000000000404234\n.text:0000000000404235\n.text:0000000000404239\n.text:000000000040423a\n.text:000000000040423c\n.text:000000000040423e\n.text:0000000000404240\n.text:0000000000404241\n'
p1063
tp1064
sS'XtPopup'
p1065
(S'\n__stdcall XtPopup()\n'
p1066
V\u000avoid XtPopup(void)\u000a\u000a{\u000a  (*(code *)PTR_XtPopup_0060d1f0)();\u000a  return;\u000a}\u000a\u000a
p1067
S'JMP qword ptr [0x0060d1f0]\n'
p1068
S'ff 25 3a a8 20 00\n'
p1069
S'.plt:00000000004029b0\n'
p1070
tp1071
sS'XmuCopyISOLatin1Lowered'
p1072
(S'\n__stdcall XmuCopyISOLatin1Lowered()\n'
p1073
V\u000avoid XmuCopyISOLatin1Lowered(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuCopyISOLatin1Lowered_0060d220)();\u000a  return;\u000a}\u000a\u000a
p1074
S'JMP qword ptr [0x0060d220]\n'
p1075
S'ff 25 0a a8 20 00\n'
p1076
S'.plt:0000000000402a10\n'
p1077
tp1078
sS'XtManageChild'
p1079
(S'\n__stdcall XtManageChild()\n'
p1080
V\u000avoid XtManageChild(void)\u000a\u000a{\u000a  (*(code *)PTR_XtManageChild_0060d348)();\u000a  return;\u000a}\u000a\u000a
p1081
S'JMP qword ptr [0x0060d348]\n'
p1082
S'ff 25 e2 a6 20 00\n'
p1083
S'.plt:0000000000402c60\n'
p1084
tp1085
sS'fputc'
p1086
(S'\n__stdcall fputc(int __c, FILE * __stream)\n'
p1087
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_0060d198)();\u000a  return iVar1;\u000a}\u000a\u000a
p1088
S'JMP qword ptr [0x0060d198]\n'
p1089
S'ff 25 92 a8 20 00\n'
p1090
S'.plt:0000000000402900\n'
p1091
tp1092
sS'ModifySVEntry'
p1093
(S'\n__stdcall ModifySVEntry(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p1094
V\u000avoid ModifySVEntry(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  char msg [8192];\u000a  char acStack8200 [8192];\u000a  \u000a  if (*num_params == 1) {\u000a    uVar2 = (int)**params - 0x52;\u000a    uVar1 = uVar2 * 0x40000000 | uVar2 >> 2;\u000a    if ((uVar1 < 10) && ((0x303U >> (uVar2 >> 2 & 0x1f) & 1) != 0)) {\u000a      _SetField(**(Widget **)(&DAT_00409bc0 + (long)(int)uVar1 * 8),\u000a                **(Widget **)(&DAT_00409c10 + (long)(int)uVar1 * 8));\u000a      return;\u000a    }\u000a    sprintf(acStack8200,res_labels[22]);\u000a  }\u000a  else {\u000a    strcpy(acStack8200,res_labels[21]);\u000a  }\u000a  SetMessage(global_screen_data.info_label,acStack8200);\u000a  return;\u000a}\u000a\u000a
p1095
S'PUSH RBX\nSUB RSP,0x2000\nCMP dword ptr [RCX],0x1\nJNZ 0x00405f93\nMOV RAX,qword ptr [RDX]\nMOVSX ECX,byte ptr [RAX]\nADD ECX,-0x52\nMOV EAX,ECX\nROL EAX,0x1e\nCMP EAX,0xa\nJNC 0x00405f7d\nSHR ECX,0x2\nMOV EDX,0x303\nBT EDX,ECX\nJC 0x00405fbd\nMOV RSI,qword ptr [0x0060e0b0]\nMOV RBX,RSP\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nJMP 0x00405fa5\nMOV RSI,qword ptr [0x0060e0a8]\nMOV RBX,RSP\nMOV RDI,RBX\nCALL 0x004026a0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nADD RSP,0x2000\nPOP RBX\nRET\nCDQE\nMOV RCX,qword ptr [0x409bc0 + RAX*0x8]\nMOV RAX,qword ptr [0x409c10 + RAX*0x8]\nMOV RSI,qword ptr [RAX]\nMOV RDI,qword ptr [RCX]\nCALL 0x00405e50\nJMP 0x00405fb4\n'
p1096
S'53\n48 81 ec 00 20 00 00\n83 39 01\n75 36\n48 8b 02\n0f be 08\n83 c1 ae\n89 c8\nc1 c0 1e\n83 f8 0a\n73 0d\nc1 e9 02\nba 03 03 00 00\n0f a3 ca\n72 40\n48 8b 35 2c 81 20 00\n48 89 e3\n31 c0\n48 89 df\ne8 5f cc ff ff\neb 12\n48 8b 35 0e 81 20 00\n48 89 e3\n48 89 df\ne8 fb c6 ff ff\n48 8b 3d 4c 80 20 00\n48 89 de\ne8 6c 01 00 00\n48 81 c4 00 20 00 00\n5b\nc3\n48 98\n48 8b 0c c5 c0 9b 40 00\n48 8b 04 c5 10 9c 40 00\n48 8b 30\n48 8b 39\ne8 76 fe ff ff\neb d8\n'
p1097
S'.text:0000000000405f50\n.text:0000000000405f51\n.text:0000000000405f58\n.text:0000000000405f5b\n.text:0000000000405f5d\n.text:0000000000405f60\n.text:0000000000405f63\n.text:0000000000405f66\n.text:0000000000405f68\n.text:0000000000405f6b\n.text:0000000000405f6e\n.text:0000000000405f70\n.text:0000000000405f73\n.text:0000000000405f78\n.text:0000000000405f7b\n.text:0000000000405f7d\n.text:0000000000405f84\n.text:0000000000405f87\n.text:0000000000405f89\n.text:0000000000405f8c\n.text:0000000000405f91\n.text:0000000000405f93\n.text:0000000000405f9a\n.text:0000000000405f9d\n.text:0000000000405fa0\n.text:0000000000405fa5\n.text:0000000000405fac\n.text:0000000000405faf\n.text:0000000000405fb4\n.text:0000000000405fbb\n.text:0000000000405fbc\n.text:0000000000405fbd\n.text:0000000000405fbf\n.text:0000000000405fc7\n.text:0000000000405fcf\n.text:0000000000405fd2\n.text:0000000000405fd5\n.text:0000000000405fda\n'
p1098
tp1099
sS'CreateTopArea'
p1100
(S'\n__stdcall CreateTopArea(Widget parent)\n'
p1101
V\u000aWidget CreateTopArea(Widget parent)\u000a\u000a{\u000a  Widget p_Var1;\u000a  \u000a  box = (Widget)XtCreateManagedWidget(&DAT_0040a147,boxWidgetClass,parent,0,0);\u000a  CreateCommandMenu(box,"xt");\u000a  CreateTreeCommandMenu(box,"xt");\u000a  hPane = (Widget)XtCreateManagedWidget("hPane",panedWidgetClass,parent,0,0);\u000a  p_Var1 = (Widget)XtCreateManagedWidget("panner",pannerWidgetClass,hPane,0,0);\u000a  global_screen_data.info_label = (Widget)XtCreateManagedWidget(0x409b96,labelWidgetClass,hPane,0,0)\u000a  ;\u000a  XtGetApplicationResources(global_screen_data.info_label,res_labels,resources,0x24,0,0);\u000a  return p_Var1;\u000a}\u000a\u000a
p1102
S'PUSH RBX\nMOV RBX,RDI\nMOV RSI,qword ptr [0x0060dde0]\nMOV EDI,0x40a147\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV qword ptr [0x0060def0],RAX\nMOV ESI,0x409b96\nMOV RDI,RAX\nCALL 0x004070c0\nMOV RDI,qword ptr [0x0060def0]\nMOV ESI,0x409b96\nCALL 0x00407300\nMOV RSI,qword ptr [0x0060dca8]\nMOV EDI,0x40a14b\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV qword ptr [0x0060def8],RAX\nMOV RSI,qword ptr [0x0060dca0]\nMOV EDI,0x40a151\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV RBX,RAX\nMOV RSI,qword ptr [0x0060de40]\nMOV RDX,qword ptr [0x0060def8]\nMOV EDI,0x409b96\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00402750\nMOV qword ptr [0x0060dff8],RAX\nMOV ESI,0x60e000\nMOV EDX,0x60d5c0\nMOV ECX,0x24\nXOR R8D,R8D\nXOR R9D,R9D\nMOV RDI,RAX\nCALL 0x00402630\nMOV RAX,RBX\nPOP RBX\nRET\n'
p1103
S'53\n48 89 fb\n48 8b 35 e5 68 20 00\nbf 47 a1 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 43 b2 ff ff\n48 89 05 dc 69 20 00\nbe 96 9b 40 00\n48 89 c7\ne8 9f fb ff ff\n48 8b 3d c8 69 20 00\nbe 96 9b 40 00\ne8 ce fd ff ff\n48 8b 35 6f 67 20 00\nbf 4b a1 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 05 b2 ff ff\n48 89 05 a6 69 20 00\n48 8b 35 47 67 20 00\nbf 51 a1 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 e5 b1 ff ff\n48 89 c3\n48 8b 35 cb 68 20 00\n48 8b 15 7c 69 20 00\nbf 96 9b 40 00\n31 c9\n45 31 c0\ne8 c5 b1 ff ff\n48 89 05 66 6a 20 00\nbe 00 e0 60 00\nba c0 d5 60 00\nb9 24 00 00 00\n45 31 c0\n45 31 c9\n48 89 c7\ne8 81 b0 ff ff\n48 89 d8\n5b\nc3\n'
p1104
S'.text:00000000004074f0\n.text:00000000004074f1\n.text:00000000004074f4\n.text:00000000004074fb\n.text:0000000000407500\n.text:0000000000407502\n.text:0000000000407505\n.text:0000000000407508\n.text:000000000040750d\n.text:0000000000407514\n.text:0000000000407519\n.text:000000000040751c\n.text:0000000000407521\n.text:0000000000407528\n.text:000000000040752d\n.text:0000000000407532\n.text:0000000000407539\n.text:000000000040753e\n.text:0000000000407540\n.text:0000000000407543\n.text:0000000000407546\n.text:000000000040754b\n.text:0000000000407552\n.text:0000000000407559\n.text:000000000040755e\n.text:0000000000407560\n.text:0000000000407563\n.text:0000000000407566\n.text:000000000040756b\n.text:000000000040756e\n.text:0000000000407575\n.text:000000000040757c\n.text:0000000000407581\n.text:0000000000407583\n.text:0000000000407586\n.text:000000000040758b\n.text:0000000000407592\n.text:0000000000407597\n.text:000000000040759c\n.text:00000000004075a1\n.text:00000000004075a4\n.text:00000000004075a7\n.text:00000000004075aa\n.text:00000000004075af\n.text:00000000004075b2\n.text:00000000004075b3\n'
p1105
tp1106
sS'XtSetKeyboardFocus'
p1107
(S'\n__stdcall XtSetKeyboardFocus()\n'
p1108
V\u000avoid XtSetKeyboardFocus(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetKeyboardFocus_0060d290)();\u000a  return;\u000a}\u000a\u000a
p1109
S'JMP qword ptr [0x0060d290]\n'
p1110
S'ff 25 9a a7 20 00\n'
p1111
S'.plt:0000000000402af0\n'
p1112
tp1113
sS'FlashWidgetsOff'
p1114
(S'\n__stdcall FlashWidgetsOff(XtPointer info_ptr, XtIntervalId * id)\n'
p1115
V\u000avoid FlashWidgetsOff(XtPointer info_ptr,XtIntervalId *id)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  ulong uVar3;\u000a  ulong uVar4;\u000a  \u000a  if (*(int *)((long)info_ptr + 0x28) != 0) {\u000a    uVar4 = 0;\u000a    do {\u000a      uVar1 = XtDisplay(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      uVar2 = XtWindow(*(undefined8 *)(*(long *)((long)info_ptr + 0x20) + uVar4 * 8));\u000a      XUnmapWindow(uVar1,uVar2);\u000a      uVar3 = uVar4 + 1;\u000a      uVar4 = uVar3 & 0xffffffff;\u000a    } while ((uint)uVar3 < *(uint *)((long)info_ptr + 0x28));\u000a  }\u000a  return;\u000a}\u000a\u000a
p1116
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCMP dword ptr [R14 + 0x28],0x0\nJZ 0x00404ae1\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R14 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x00402ab0\nMOV R15,RAX\nMOV RAX,qword ptr [R14 + 0x20]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x004027e0\nMOV RDI,R15\nMOV RSI,RAX\nCALL 0x00402b10\nINC RBX\nCMP EBX,dword ptr [R14 + 0x28]\nJC 0x00404ab0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1117
S'41 57\n41 56\n53\n49 89 fe\n41 83 7e 28 00\n74 42\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 46 20\n48 8b 3c d8\ne8 f3 df ff ff\n49 89 c7\n49 8b 46 20\n48 8b 3c d8\ne8 13 dd ff ff\n4c 89 ff\n48 89 c6\ne8 38 e0 ff ff\n48 ff c3\n41 3b 5e 28\n72 cf\n5b\n41 5e\n41 5f\nc3\n'
p1118
S'.text:0000000000404a90\n.text:0000000000404a92\n.text:0000000000404a94\n.text:0000000000404a95\n.text:0000000000404a98\n.text:0000000000404a9d\n.text:0000000000404a9f\n.text:0000000000404aa1\n.text:0000000000404ab0\n.text:0000000000404ab4\n.text:0000000000404ab8\n.text:0000000000404abd\n.text:0000000000404ac0\n.text:0000000000404ac4\n.text:0000000000404ac8\n.text:0000000000404acd\n.text:0000000000404ad0\n.text:0000000000404ad3\n.text:0000000000404ad8\n.text:0000000000404adb\n.text:0000000000404adf\n.text:0000000000404ae1\n.text:0000000000404ae2\n.text:0000000000404ae4\n.text:0000000000404ae6\n'
p1119
tp1120
sS'_XEditResGetWidgetInfo'
p1121
(S'\n__stdcall _XEditResGetWidgetInfo()\n'
p1122
V\u000avoid _XEditResGetWidgetInfo(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResGetWidgetInfo_0060d088)();\u000a  return;\u000a}\u000a\u000a
p1123
S'JMP qword ptr [0x0060d088]\n'
p1124
S'ff 25 a2 a9 20 00\n'
p1125
S'.plt:00000000004026e0\n'
p1126
tp1127
sS'XtCreateManagedWidget'
p1128
(S'\n__stdcall XtCreateManagedWidget()\n'
p1129
V\u000avoid XtCreateManagedWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreateManagedWidget_0060d0c0)();\u000a  return;\u000a}\u000a\u000a
p1130
S'JMP qword ptr [0x0060d0c0]\n'
p1131
S'ff 25 6a a9 20 00\n'
p1132
S'.plt:0000000000402750\n'
p1133
tp1134
sS'SendTree'
p1135
(S'\n__stdcall SendTree(Widget w, XtPointer value, XtPointer call_data)\n'
p1136
V\u000avoid SendTree(Widget w,XtPointer value,XtPointer call_data)\u000a\u000a{\u000a  char cVar1;\u000a  \u000a  if ((char)value != 0) {\u000a    global_client.window = 0;\u000a  }\u000a  cVar1 = _XtCheckSubclassFlag(w);\u000a  if (cVar1 == 0) {\u000a    w = (Widget)XtParent(w);\u000a  }\u000a  _XEditResResetStream(0x60df50);\u000a  SetCommand(w,(char *)0x0);\u000a  return;\u000a}\u000a\u000a
p1137
S'PUSH RBX\nMOV RBX,RDI\nTEST SIL,SIL\nJZ 0x00404c44\nMOV qword ptr [0x0060df80],0x0\nMOV ESI,0x4\nMOV RDI,RBX\nCALL 0x00402aa0\nTEST AL,AL\nJNZ 0x00404c60\nMOV RDI,RBX\nCALL 0x00402c00\nMOV RBX,RAX\nMOV EDI,0x60df50\nCALL 0x00402bb0\nXOR ESI,ESI\nXOR EDX,EDX\nMOV RDI,RBX\nPOP RBX\nJMP 0x00403310\n'
p1138
S'53\n48 89 fb\n40 84 f6\n74 0b\n48 c7 05 3c 93 20 00 00 00 00 00\nbe 04 00 00 00\n48 89 df\ne8 4f de ff ff\n84 c0\n75 0b\n48 89 df\ne8 a3 df ff ff\n48 89 c3\nbf 50 df 60 00\ne8 46 df ff ff\n31 f6\n31 d2\n48 89 df\n5b\ne9 99 e6 ff ff\n'
p1139
S'.text:0000000000404c30\n.text:0000000000404c31\n.text:0000000000404c34\n.text:0000000000404c37\n.text:0000000000404c39\n.text:0000000000404c44\n.text:0000000000404c49\n.text:0000000000404c4c\n.text:0000000000404c51\n.text:0000000000404c53\n.text:0000000000404c55\n.text:0000000000404c58\n.text:0000000000404c5d\n.text:0000000000404c60\n.text:0000000000404c65\n.text:0000000000404c6a\n.text:0000000000404c6c\n.text:0000000000404c6e\n.text:0000000000404c71\n.text:0000000000404c72\n'
p1140
tp1141
sS'PopdownFileDialogAction'
p1142
(S'\n__stdcall PopdownFileDialogAction(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p1143
V\u000avoid PopdownFileDialogAction(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  int iVar1;\u000a  String __format;\u000a  undefined *client_data;\u000a  char buf [8192];\u000a  char acStack8216 [8200];\u000a  \u000a  __format = res_labels[2];\u000a  if (*num_params == 1) {\u000a    XmuCopyISOLatin1Lowered(acStack8216,*params);\u000a    iVar1 = strcmp(acStack8216,"cancel");\u000a    if (iVar1 == 0) {\u000a      client_data = (undefined *)0x0;\u000a    }\u000a    else {\u000a      iVar1 = strcmp(acStack8216,"okay");\u000a      __format = res_labels[1];\u000a      if (iVar1 != 0) goto LAB_00402f32;\u000a      client_data = &DAT_00000001;\u000a    }\u000a    _PopdownFileDialog(w,client_data,(XtPointer)0x0);\u000a  }\u000a  else {\u000aLAB_00402f32:\u000a    sprintf(acStack8216,__format,"PopdownFileDialog");\u000a    SetMessage(global_screen_data.info_label,acStack8216);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1144
S'PUSH R14\nPUSH RBX\nSUB RSP,0x2008\nMOV R14,RDI\nCMP dword ptr [RCX],0x1\nJNZ 0x00402f2b\nMOV RSI,qword ptr [RDX]\nMOV RBX,RSP\nMOV RDI,RBX\nCALL 0x00402a10\nMOV ESI,0x409543\nMOV RDI,RBX\nCALL 0x00402940\nTEST EAX,EAX\nJZ 0x00402f55\nMOV RDI,RSP\nMOV ESI,0x40954a\nCALL 0x00402940\nTEST EAX,EAX\nJZ 0x00402f59\nMOV RSI,qword ptr [0x0060e008]\nJMP 0x00402f32\nMOV RSI,qword ptr [0x0060e010]\nMOV RBX,RSP\nMOV EDX,0x4094ce\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nJMP 0x00402f68\nXOR ESI,ESI\nJMP 0x00402f5e\nMOV ESI,0x1\nXOR EDX,EDX\nMOV RDI,R14\nCALL 0x004065b0\nADD RSP,0x2008\nPOP RBX\nPOP R14\nRET\n'
p1145
S'41 56\n53\n48 81 ec 08 20 00 00\n49 89 fe\n83 39 01\n75 39\n48 8b 32\n48 89 e3\n48 89 df\ne8 10 fb ff ff\nbe 43 95 40 00\n48 89 df\ne8 33 fa ff ff\n85 c0\n74 44\n48 89 e7\nbe 4a 95 40 00\ne8 22 fa ff ff\n85 c0\n74 37\n48 8b 35 df b0 20 00\neb 07\n48 8b 35 de b0 20 00\n48 89 e3\nba ce 94 40 00\n31 c0\n48 89 df\ne8 ac fc ff ff\n48 8b 3d ad b0 20 00\n48 89 de\ne8 cd 31 00 00\neb 13\n31 f6\neb 05\nbe 01 00 00 00\n31 d2\n4c 89 f7\ne8 48 36 00 00\n48 81 c4 08 20 00 00\n5b\n41 5e\nc3\n'
p1146
S'.text:0000000000402ee0\n.text:0000000000402ee2\n.text:0000000000402ee3\n.text:0000000000402eea\n.text:0000000000402eed\n.text:0000000000402ef0\n.text:0000000000402ef2\n.text:0000000000402ef5\n.text:0000000000402ef8\n.text:0000000000402efb\n.text:0000000000402f00\n.text:0000000000402f05\n.text:0000000000402f08\n.text:0000000000402f0d\n.text:0000000000402f0f\n.text:0000000000402f11\n.text:0000000000402f14\n.text:0000000000402f19\n.text:0000000000402f1e\n.text:0000000000402f20\n.text:0000000000402f22\n.text:0000000000402f29\n.text:0000000000402f2b\n.text:0000000000402f32\n.text:0000000000402f35\n.text:0000000000402f3a\n.text:0000000000402f3c\n.text:0000000000402f3f\n.text:0000000000402f44\n.text:0000000000402f4b\n.text:0000000000402f4e\n.text:0000000000402f53\n.text:0000000000402f55\n.text:0000000000402f57\n.text:0000000000402f59\n.text:0000000000402f5e\n.text:0000000000402f60\n.text:0000000000402f63\n.text:0000000000402f68\n.text:0000000000402f6f\n.text:0000000000402f70\n.text:0000000000402f72\n'
p1147
tp1148
sS'XUnmapWindow'
p1149
(S'\n__stdcall XUnmapWindow()\n'
p1150
V\u000avoid XUnmapWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XUnmapWindow_0060d2a0)();\u000a  return;\u000a}\u000a\u000a
p1151
S'JMP qword ptr [0x0060d2a0]\n'
p1152
S'ff 25 8a a7 20 00\n'
p1153
S'.plt:0000000000402b10\n'
p1154
tp1155
sS'GetResourceValueForSetValues'
p1156
(S'\n__stdcall GetResourceValueForSetValues(WNode * node, unsigned short * size)\n'
p1157
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000achar * GetResourceValueForSetValues(WNode *node,unsigned_short *size)\u000a\u000a{\u000a  size_t sVar1;\u000a  XrmValue value;\u000a  Arg args [1];\u000a  char *local_40;\u000a  undefined8 local_38;\u000a  char *local_30;\u000a  uint local_28;\u000a  void *local_20;\u000a  undefined8 local_18;\u000a  char **local_10;\u000a  \u000a  local_38 = 0;\u000a  local_18 = 0x60c65d;\u000a  local_10 = &local_40;\u000a  XtGetValues(node->resources->res_box->value_wid,&local_18,1);\u000a  sVar1 = strlen(local_40);\u000a  local_30 = (char *)XtMalloc((ulong)((int)sVar1 + 6));\u000a  sprintf(local_30,"%s:%s",&DAT_00409527,local_40);\u000a  XrmPutLineResource(&local_38,local_30);\u000a  XtFree(local_30);\u000a  XrmGetResource(local_38,&DAT_00409527,"Class",&local_30,&local_28);\u000a  local_40 = (char *)XtMalloc((ulong)local_28);\u000a  memmove(local_40,local_20,(ulong)local_28);\u000a  XrmDestroyDatabase(local_38);\u000a  *size = (unsigned_short)local_28;\u000a  return local_40;\u000a}\u000a\u000a
p1158
S'PUSH RBX\nSUB RSP,0x40\nMOV RBX,RSI\nMOV qword ptr [RSP + 0x10],0x0\nMOV qword ptr [RSP + 0x30],0x60c65d\nLEA RAX,[RSP + 0x8]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RAX,qword ptr [RDI + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RDI,qword ptr [RAX]\nLEA RSI,[RSP + 0x30]\nMOV EDX,0x1\nCALL 0x004027d0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x004027f0\nLEA EDI,[RAX + 0x6]\nCALL 0x00402760\nMOV RDI,RAX\nMOV qword ptr [RSP + 0x18],RDI\nMOV RCX,qword ptr [RSP + 0x8]\nMOV ESI,0x409b4b\nMOV EDX,0x409527\nXOR EAX,EAX\nCALL 0x00402bf0\nMOV RSI,qword ptr [RSP + 0x18]\nLEA RDI,[RSP + 0x10]\nCALL 0x00402ca0\nMOV RDI,qword ptr [RSP + 0x18]\nCALL 0x00402a90\nMOV RDI,qword ptr [RSP + 0x10]\nLEA RCX,[RSP + 0x18]\nLEA R8,[RSP + 0x20]\nMOV ESI,0x409527\nMOV EDX,0x409b51\nCALL 0x00402710\nMOV EDI,dword ptr [RSP + 0x20]\nCALL 0x00402760\nMOV qword ptr [RSP + 0x8],RAX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EDX,dword ptr [RSP + 0x20]\nMOV RDI,RAX\nCALL 0x00402b30\nMOV RDI,qword ptr [RSP + 0x10]\nCALL 0x00402b80\nMOVZX EAX,word ptr [RSP + 0x20]\nMOV word ptr [RBX],AX\nMOV RAX,qword ptr [RSP + 0x8]\nADD RSP,0x40\nPOP RBX\nRET\n'
p1159
S'53\n48 83 ec 40\n48 89 f3\n48 c7 44 24 10 00 00 00 00\n48 c7 44 24 30 5d c6 60 00\n48 8d 44 24 08\n48 89 44 24 38\n48 8b 47 48\n48 8b 40 18\n48 8b 38\n48 8d 74 24 30\nba 01 00 00 00\ne8 32 cd ff ff\n48 8b 7c 24 08\ne8 48 cd ff ff\n8d 78 06\ne8 b0 cc ff ff\n48 89 c7\n48 89 7c 24 18\n48 8b 4c 24 08\nbe 4b 9b 40 00\nba 27 95 40 00\n31 c0\ne8 22 d1 ff ff\n48 8b 74 24 18\n48 8d 7c 24 10\ne8 c3 d1 ff ff\n48 8b 7c 24 18\ne8 a9 cf ff ff\n48 8b 7c 24 10\n48 8d 4c 24 18\n4c 8d 44 24 20\nbe 27 95 40 00\nba 51 9b 40 00\ne8 0b cc ff ff\n8b 7c 24 20\ne8 52 cc ff ff\n48 89 44 24 08\n48 8b 74 24 28\n8b 54 24 20\n48 89 c7\ne8 0c d0 ff ff\n48 8b 7c 24 10\ne8 52 d0 ff ff\n0f b7 44 24 20\n66 89 03\n48 8b 44 24 08\n48 83 c4 40\n5b\nc3\n'
p1160
S'.text:0000000000405a60\n.text:0000000000405a61\n.text:0000000000405a65\n.text:0000000000405a68\n.text:0000000000405a71\n.text:0000000000405a7a\n.text:0000000000405a7f\n.text:0000000000405a84\n.text:0000000000405a88\n.text:0000000000405a8c\n.text:0000000000405a8f\n.text:0000000000405a94\n.text:0000000000405a99\n.text:0000000000405a9e\n.text:0000000000405aa3\n.text:0000000000405aa8\n.text:0000000000405aab\n.text:0000000000405ab0\n.text:0000000000405ab3\n.text:0000000000405ab8\n.text:0000000000405abd\n.text:0000000000405ac2\n.text:0000000000405ac7\n.text:0000000000405ac9\n.text:0000000000405ace\n.text:0000000000405ad3\n.text:0000000000405ad8\n.text:0000000000405add\n.text:0000000000405ae2\n.text:0000000000405ae7\n.text:0000000000405aec\n.text:0000000000405af1\n.text:0000000000405af6\n.text:0000000000405afb\n.text:0000000000405b00\n.text:0000000000405b05\n.text:0000000000405b09\n.text:0000000000405b0e\n.text:0000000000405b13\n.text:0000000000405b18\n.text:0000000000405b1c\n.text:0000000000405b1f\n.text:0000000000405b24\n.text:0000000000405b29\n.text:0000000000405b2e\n.text:0000000000405b33\n.text:0000000000405b36\n.text:0000000000405b3b\n.text:0000000000405b3f\n.text:0000000000405b40\n'
p1161
tp1162
sS'DumpTreeToFile'
p1163
(S'\n__stdcall DumpTreeToFile(Widget w, XtPointer junk, XtPointer garbage)\n'
p1164
V\u000avoid DumpTreeToFile(Widget w,XtPointer junk,XtPointer garbage)\u000a\u000a{\u000a  Widget w_00;\u000a  \u000a  w_00 = (Widget)XtParent();\u000a  _PopupFileDialog(w_00,"Enter the filename:","",_DumpTreeToFile,global_tree_info);\u000a  return;\u000a}\u000a\u000a
p1165
S'PUSH RAX\nCALL 0x00402c00\nMOV R8,qword ptr [0x0060dec8]\nMOV ESI,0x409a71\nMOV EDX,0x40a41e\nMOV ECX,0x4063f0\nMOV RDI,RAX\nPOP RAX\nJMP 0x00406490\n'
p1166
S'50\ne8 3a dd ff ff\n4c 8b 05 fb 8f 20 00\nbe 71 9a 40 00\nba 1e a4 40 00\nb9 f0 63 40 00\n48 89 c7\n58\ne9 ab 15 00 00\n'
p1167
S'.text:0000000000404ec0\n.text:0000000000404ec1\n.text:0000000000404ec6\n.text:0000000000404ecd\n.text:0000000000404ed2\n.text:0000000000404ed7\n.text:0000000000404edc\n.text:0000000000404edf\n.text:0000000000404ee0\n'
p1168
tp1169
sS'CreateResourceBox'
p1170
(S'\n__stdcall CreateResourceBox(WNode * node, char * * errors)\n'
p1171
V\u000avoid CreateResourceBox(WNode *node,char **errors)\u000a\u000a{\u000a  WidgetResources *pWVar1;\u000a  long lVar2;\u000a  long lVar3;\u000a  char **cons_names;\u000a  char **names;\u000a  \u000a  if (global_resource_box_up == 0) {\u000a    pWVar1 = node->resources;\u000a    global_resource_box_up = 1;\u000a    if (pWVar1->num_normal < 1) {\u000a      names = (char **)0x0;\u000a    }\u000a    else {\u000a      names = (char **)XtMalloc((ulong)(pWVar1->num_normal * 8 + 8));\u000a      if (pWVar1->num_normal < 1) {\u000a        lVar2 = 0;\u000a      }\u000a      else {\u000a        lVar3 = 0;\u000a        lVar2 = 0;\u000a        do {\u000a          names[lVar2] = *(char **)((long)&pWVar1->normal->name + lVar3);\u000a          lVar2 = lVar2 + 1;\u000a          lVar3 = lVar3 + 0x18;\u000a        } while (lVar2 < (long)pWVar1->num_normal);\u000a      }\u000a      names[lVar2] = (char *)0x0;\u000a    }\u000a    if (pWVar1->num_constraint < 1) {\u000a      cons_names = (char **)0x0;\u000a    }\u000a    else {\u000a      cons_names = (char **)XtMalloc((ulong)(pWVar1->num_constraint * 8 + 8));\u000a      if (pWVar1->num_constraint < 1) {\u000a        lVar2 = 0;\u000a      }\u000a      else {\u000a        lVar3 = 0;\u000a        lVar2 = 0;\u000a        do {\u000a          cons_names[lVar2] = *(char **)((long)&pWVar1->constraint->name + lVar3);\u000a          lVar2 = lVar2 + 1;\u000a          lVar3 = lVar3 + 0x18;\u000a        } while (lVar2 < (long)pWVar1->num_constraint);\u000a      }\u000a      cons_names[lVar2] = (char *)0x0;\u000a    }\u000a    CreateResourceBoxWidgets(node,names,cons_names);\u000a    return;\u000a  }\u000a  AddString(errors,res_labels[34]);\u000a  return;\u000a}\u000a\u000a
p1172
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCMP byte ptr [0x0060dec0],0x0\nJZ 0x00406c48\nMOV RAX,qword ptr [0x0060e110]\nMOV RDI,RSI\nMOV RSI,RAX\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00406260\nMOV RBX,qword ptr [R14 + 0x48]\nMOV byte ptr [0x0060dec0],0x1\nMOV EAX,dword ptr [RBX]\nTEST EAX,EAX\nJLE 0x00406c9d\nLEA EDI,[0x8 + RAX*0x8]\nCALL 0x00402760\nMOV R15,RAX\nCMP dword ptr [RBX],0x0\nJLE 0x00406ca2\nXOR ECX,ECX\nXOR EAX,EAX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDX,qword ptr [RBX + 0x8]\nMOV RDX,qword ptr [RDX + RCX*0x1]\nMOV qword ptr [R15 + RAX*0x8],RDX\nINC RAX\nMOVSXD RDX,dword ptr [RBX]\nADD RCX,0x18\nCMP RAX,RDX\nJL 0x00406c80\nJMP 0x00406ca4\nXOR R15D,R15D\nJMP 0x00406cac\nXOR EAX,EAX\nMOV qword ptr [R15 + RAX*0x8],0x0\nMOV EAX,dword ptr [RBX + 0x4]\nTEST EAX,EAX\nJLE 0x00406cee\nLEA EDI,[0x8 + RAX*0x8]\nCALL 0x00402760\nMOV RDX,RAX\nCMP dword ptr [RBX + 0x4],0x0\nJLE 0x00406cf2\nXOR ECX,ECX\nXOR EAX,EAX\nNOP dword ptr [RAX]\nMOV RSI,qword ptr [RBX + 0x10]\nMOV RSI,qword ptr [RSI + RCX*0x1]\nMOV qword ptr [RDX + RAX*0x8],RSI\nINC RAX\nMOVSXD RSI,dword ptr [RBX + 0x4]\nADD RCX,0x18\nCMP RAX,RSI\nJL 0x00406cd0\nJMP 0x00406cf4\nXOR EDX,EDX\nJMP 0x00406cfc\nXOR EAX,EAX\nMOV qword ptr [RDX + RAX*0x8],0x0\nMOV RDI,R14\nMOV RSI,R15\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00407700\n'
p1173
S'41 57\n41 56\n53\n49 89 fe\n80 3d 91 72 20 00 00\n74 17\n48 8b 05 d8 74 20 00\n48 89 f7\n48 89 c6\n5b\n41 5e\n41 5f\ne9 18 f6 ff ff\n49 8b 5e 48\nc6 05 6d 72 20 00 01\n8b 03\n85 c0\n7e 44\n8d 3c c5 08 00 00 00\ne8 fb ba ff ff\n49 89 c7\n83 3b 00\n7e 35\n31 c9\n31 c0\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 53 08\n48 8b 14 0a\n49 89 14 c7\n48 ff c0\n48 63 13\n48 83 c1 18\n48 39 d0\n7c e5\neb 07\n45 31 ff\neb 0a\n31 c0\n49 c7 04 c7 00 00 00 00\n8b 43 04\n85 c0\n7e 3b\n8d 3c c5 08 00 00 00\ne8 a1 ba ff ff\n48 89 c2\n83 7b 04 00\n7e 2a\n31 c9\n31 c0\n0f 1f 40 00\n48 8b 73 10\n48 8b 34 0e\n48 89 34 c2\n48 ff c0\n48 63 73 04\n48 83 c1 18\n48 39 f0\n7c e4\neb 06\n31 d2\neb 0a\n31 c0\n48 c7 04 c2 00 00 00 00\n4c 89 f7\n4c 89 fe\n5b\n41 5e\n41 5f\ne9 f4 09 00 00\n'
p1174
S'.text:0000000000406c20\n.text:0000000000406c22\n.text:0000000000406c24\n.text:0000000000406c25\n.text:0000000000406c28\n.text:0000000000406c2f\n.text:0000000000406c31\n.text:0000000000406c38\n.text:0000000000406c3b\n.text:0000000000406c3e\n.text:0000000000406c3f\n.text:0000000000406c41\n.text:0000000000406c43\n.text:0000000000406c48\n.text:0000000000406c4c\n.text:0000000000406c53\n.text:0000000000406c55\n.text:0000000000406c57\n.text:0000000000406c59\n.text:0000000000406c60\n.text:0000000000406c65\n.text:0000000000406c68\n.text:0000000000406c6b\n.text:0000000000406c6d\n.text:0000000000406c6f\n.text:0000000000406c71\n.text:0000000000406c80\n.text:0000000000406c84\n.text:0000000000406c88\n.text:0000000000406c8c\n.text:0000000000406c8f\n.text:0000000000406c92\n.text:0000000000406c96\n.text:0000000000406c99\n.text:0000000000406c9b\n.text:0000000000406c9d\n.text:0000000000406ca0\n.text:0000000000406ca2\n.text:0000000000406ca4\n.text:0000000000406cac\n.text:0000000000406caf\n.text:0000000000406cb1\n.text:0000000000406cb3\n.text:0000000000406cba\n.text:0000000000406cbf\n.text:0000000000406cc2\n.text:0000000000406cc6\n.text:0000000000406cc8\n.text:0000000000406cca\n.text:0000000000406ccc\n.text:0000000000406cd0\n.text:0000000000406cd4\n.text:0000000000406cd8\n.text:0000000000406cdc\n.text:0000000000406cdf\n.text:0000000000406ce3\n.text:0000000000406ce7\n.text:0000000000406cea\n.text:0000000000406cec\n.text:0000000000406cee\n.text:0000000000406cf0\n.text:0000000000406cf2\n.text:0000000000406cf4\n.text:0000000000406cfc\n.text:0000000000406cff\n.text:0000000000406d02\n.text:0000000000406d03\n.text:0000000000406d05\n.text:0000000000406d07\n'
p1175
tp1176
sS'XAllowEvents'
p1177
(S'\n__stdcall XAllowEvents()\n'
p1178
V\u000avoid XAllowEvents(void)\u000a\u000a{\u000a  (*(code *)PTR_XAllowEvents_0060d080)();\u000a  return;\u000a}\u000a\u000a
p1179
S'JMP qword ptr [0x0060d080]\n'
p1180
S'ff 25 aa a9 20 00\n'
p1181
S'.plt:00000000004026d0\n'
p1182
tp1183
sS'SetFile'
p1184
(S'\n__stdcall SetFile(Widget w, XtPointer junk, XtPointer garbage)\n'
p1185
V\u000avoid SetFile(Widget w,XtPointer junk,XtPointer garbage)\u000a\u000a{\u000a  Widget w_00;\u000a  \u000a  w_00 = (Widget)XtParent();\u000a  _PopupFileDialog(w_00,"Enter file to dump resources into:",global_resources.save_resources_file,\u000a                   _SetResourcesFile,(XtPointer)0x0);\u000a  return;\u000a}\u000a\u000a
p1186
S'PUSH RAX\nCALL 0x00402c00\nMOV RDX,qword ptr [0x0060dfa8]\nMOV ESI,0x409a9c\nMOV ECX,0x4055e0\nXOR R8D,R8D\nMOV RDI,RAX\nPOP RAX\nJMP 0x00406490\n'
p1187
S'50\ne8 4a d6 ff ff\n48 8b 15 eb 89 20 00\nbe 9c 9a 40 00\nb9 e0 55 40 00\n45 31 c0\n48 89 c7\n58\ne9 bd 0e 00 00\n'
p1188
S'.text:00000000004055b0\n.text:00000000004055b1\n.text:00000000004055b6\n.text:00000000004055bd\n.text:00000000004055c2\n.text:00000000004055c7\n.text:00000000004055ca\n.text:00000000004055cd\n.text:00000000004055ce\n'
p1189
tp1190
sS'BuildVisualTree'
p1191
(S'\n__stdcall BuildVisualTree(Widget tree_parent, Event * event)\n'
p1192
V\u000avoid BuildVisualTree(Widget tree_parent,Event *event)\u000a\u000a{\u000a  WNode *top;\u000a  char cVar1;\u000a  Widget p_Var2;\u000a  char *str;\u000a  char msg [8192];\u000a  char acStack8216 [8200];\u000a  \u000a  if (global_tree_info != (TreeInfo *)0x0) {\u000a    XtDestroyWidget(global_tree_info->tree_widget);\u000a    XtFree(global_tree_info->active_nodes);\u000a    XtFree(global_tree_info);\u000a  }\u000a  global_tree_info = CreateTree(event);\u000a  top = (WNode *)global_tree_info->top_node;\u000a  p_Var2 = (Widget)XtCreateWidget(0x409735,treeWidgetClass,tree_parent,0,0);\u000a  global_tree_info->tree_widget = p_Var2;\u000a  str = res_labels[27];\u000a  if (top != (WNode *)0x0) {\u000a    AddTreeNode(global_tree_info->tree_widget,top);\u000a    cVar1 = XtIsRealized(tree_parent);\u000a    if (cVar1 != 0) {\u000a      XtRealizeWidget(global_tree_info->tree_widget);\u000a    }\u000a    XtManageChild(global_tree_info->tree_widget);\u000a    sprintf(acStack8216,res_labels[11],top->name,top->class);\u000a    str = acStack8216;\u000a  }\u000a  SetMessage(global_screen_data.info_label,str);\u000a  return;\u000a}\u000a\u000a
p1193
S'PUSH R14\nPUSH RBX\nSUB RSP,0x2008\nMOV RBX,RSI\nMOV R14,RDI\nMOV RAX,qword ptr [0x0060dec8]\nTEST RAX,RAX\nJZ 0x004087e0\nMOV RDI,qword ptr [RAX]\nCALL 0x00402b70\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX + 0x10]\nCALL 0x00402a90\nMOV RDI,qword ptr [0x0060dec8]\nCALL 0x00402a90\nMOV RDI,RBX\nCALL 0x004088a0\nMOV qword ptr [0x0060dec8],RAX\nMOV RBX,qword ptr [RAX + 0x8]\nMOV RSI,qword ptr [0x0060dce0]\nMOV EDI,0x409735\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R14\nCALL 0x00402680\nMOV RCX,qword ptr [0x0060dec8]\nMOV qword ptr [RCX],RAX\nTEST RBX,RBX\nJZ 0x0040887e\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX]\nMOV RSI,RBX\nCALL 0x00408920\nMOV RDI,R14\nCALL 0x004029f0\nTEST AL,AL\nJZ 0x00408848\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX]\nCALL 0x00402980\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX]\nCALL 0x00402c60\nMOV RSI,qword ptr [0x0060e058]\nMOV RDX,qword ptr [RBX]\nMOV RCX,qword ptr [RBX + 0x8]\nMOV RBX,RSP\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nJMP 0x0040888c\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e0d8]\nCALL 0x00406120\nADD RSP,0x2008\nPOP RBX\nPOP R14\nRET\n'
p1194
S'41 56\n53\n48 81 ec 08 20 00 00\n48 89 f3\n49 89 fe\n48 8b 05 11 57 20 00\n48 85 c0\n74 24\n48 8b 38\ne8 ac a3 ff ff\n48 8b 05 fd 56 20 00\n48 8b 78 10\ne8 bc a2 ff ff\n48 8b 3d ed 56 20 00\ne8 b0 a2 ff ff\n48 89 df\ne8 b8 00 00 00\n48 89 05 d9 56 20 00\n48 8b 58 08\n48 8b 35 e6 54 20 00\nbf 35 97 40 00\n31 c9\n45 31 c0\n4c 89 f2\ne8 74 9e ff ff\n48 8b 0d b5 56 20 00\n48 89 01\n48 85 db\n74 63\n48 8b 05 a6 56 20 00\n48 8b 38\n48 89 de\ne8 f3 00 00 00\n4c 89 f7\ne8 bb a1 ff ff\n84 c0\n74 0f\n48 8b 05 88 56 20 00\n48 8b 38\ne8 38 a1 ff ff\n48 8b 05 79 56 20 00\n48 8b 38\ne8 09 a4 ff ff\n48 8b 35 fa 57 20 00\n48 8b 13\n48 8b 4b 08\n48 89 e3\n31 c0\n48 89 df\ne8 7e a3 ff ff\n48 8b 3d 7f 57 20 00\n48 89 de\neb 0e\n48 8b 3d 73 57 20 00\n48 8b 35 4c 58 20 00\ne8 8f d8 ff ff\n48 81 c4 08 20 00 00\n5b\n41 5e\nc3\n'
p1195
S'.text:00000000004087a0\n.text:00000000004087a2\n.text:00000000004087a3\n.text:00000000004087aa\n.text:00000000004087ad\n.text:00000000004087b0\n.text:00000000004087b7\n.text:00000000004087ba\n.text:00000000004087bc\n.text:00000000004087bf\n.text:00000000004087c4\n.text:00000000004087cb\n.text:00000000004087cf\n.text:00000000004087d4\n.text:00000000004087db\n.text:00000000004087e0\n.text:00000000004087e3\n.text:00000000004087e8\n.text:00000000004087ef\n.text:00000000004087f3\n.text:00000000004087fa\n.text:00000000004087ff\n.text:0000000000408801\n.text:0000000000408804\n.text:0000000000408807\n.text:000000000040880c\n.text:0000000000408813\n.text:0000000000408816\n.text:0000000000408819\n.text:000000000040881b\n.text:0000000000408822\n.text:0000000000408825\n.text:0000000000408828\n.text:000000000040882d\n.text:0000000000408830\n.text:0000000000408835\n.text:0000000000408837\n.text:0000000000408839\n.text:0000000000408840\n.text:0000000000408843\n.text:0000000000408848\n.text:000000000040884f\n.text:0000000000408852\n.text:0000000000408857\n.text:000000000040885e\n.text:0000000000408861\n.text:0000000000408865\n.text:0000000000408868\n.text:000000000040886a\n.text:000000000040886d\n.text:0000000000408872\n.text:0000000000408879\n.text:000000000040887c\n.text:000000000040887e\n.text:0000000000408885\n.text:000000000040888c\n.text:0000000000408891\n.text:0000000000408898\n.text:0000000000408899\n.text:000000000040889b\n'
p1196
tp1197
sS'XtAppInitialize'
p1198
(S'\n__stdcall XtAppInitialize()\n'
p1199
V\u000avoid XtAppInitialize(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppInitialize_0060d0b8)();\u000a  return;\u000a}\u000a\u000a
p1200
S'JMP qword ptr [0x0060d0b8]\n'
p1201
S'ff 25 72 a9 20 00\n'
p1202
S'.plt:0000000000402740\n'
p1203
tp1204
sS'ResourceListCallback'
p1205
(S'\n__stdcall ResourceListCallback(Widget list, XtPointer node_ptr, XtPointer junk)\n'
p1206
V\u000avoid ResourceListCallback(Widget list,XtPointer node_ptr,XtPointer junk)\u000a\u000a{\u000a  long lVar1;\u000a  Widget p_Var2;\u000a  \u000a  lVar1 = *(long *)(*(long *)((long)node_ptr + 0x48) + 0x18);\u000a  p_Var2 = *(Widget *)(lVar1 + 0x18);\u000a  if (p_Var2 == list) {\u000a    p_Var2 = *(Widget *)(lVar1 + 0x20);\u000a  }\u000a  if (p_Var2 != (Widget)0x0) {\u000a    XawListUnhighlight();\u000a  }\u000a  SetResourceString(list,node_ptr,junk);\u000a  if ((4 < global_effective_protocol_version) && (do_get_values != 0)) {\u000a    ObtainResource(node_ptr);\u000a    do_get_values = 0;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1207
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [R15 + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RDI,qword ptr [RAX + 0x18]\nCMP RDI,RBX\nJNZ 0x00405313\nMOV RDI,qword ptr [RAX + 0x20]\nTEST RDI,RDI\nJZ 0x0040531d\nCALL 0x00402c20\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nCALL 0x00405070\nCMP dword ptr [0x0060d4c0],0x5\nJL 0x0040534d\nMOV AL,byte ptr [0x0060de89]\nTEST AL,AL\nJZ 0x0040534d\nMOV RDI,R15\nCALL 0x00405360\nMOV byte ptr [0x0060de89],0x0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1208
S'41 57\n41 56\n53\n49 89 d6\n49 89 f7\n48 89 fb\n49 8b 47 48\n48 8b 40 18\n48 8b 78 18\n48 39 df\n75 04\n48 8b 78 20\n48 85 ff\n74 05\ne8 03 d9 ff ff\n48 89 df\n4c 89 fe\n4c 89 f2\ne8 45 fd ff ff\n83 3d 8e 81 20 00 05\n7c 19\n8a 05 4f 8b 20 00\n84 c0\n74 0f\n4c 89 ff\ne8 1a 00 00 00\nc6 05 3c 8b 20 00 00\n5b\n41 5e\n41 5f\nc3\n'
p1209
S'.text:00000000004052f0\n.text:00000000004052f2\n.text:00000000004052f4\n.text:00000000004052f5\n.text:00000000004052f8\n.text:00000000004052fb\n.text:00000000004052fe\n.text:0000000000405302\n.text:0000000000405306\n.text:000000000040530a\n.text:000000000040530d\n.text:000000000040530f\n.text:0000000000405313\n.text:0000000000405316\n.text:0000000000405318\n.text:000000000040531d\n.text:0000000000405320\n.text:0000000000405323\n.text:0000000000405326\n.text:000000000040532b\n.text:0000000000405332\n.text:0000000000405334\n.text:000000000040533a\n.text:000000000040533c\n.text:000000000040533e\n.text:0000000000405341\n.text:0000000000405346\n.text:000000000040534d\n.text:000000000040534e\n.text:0000000000405350\n.text:0000000000405352\n'
p1210
tp1211
sS'XtDispatchEvent'
p1212
(S'\n__stdcall XtDispatchEvent()\n'
p1213
V\u000avoid XtDispatchEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDispatchEvent_0060d340)();\u000a  return;\u000a}\u000a\u000a
p1214
S'JMP qword ptr [0x0060d340]\n'
p1215
S'ff 25 ea a6 20 00\n'
p1216
S'.plt:0000000000402c50\n'
p1217
tp1218
sS'AnyChosen'
p1219
(S'\n__stdcall AnyChosen(Widget w, XtPointer any_info_ptr, XtPointer state_ptr)\n'
p1220
V\u000avoid AnyChosen(Widget w,XtPointer any_info_ptr,XtPointer state_ptr)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  XtPointer junk;\u000a  Widget w_00;\u000a  Arg args [1];\u000a  char *local_18;\u000a  undefined8 local_10;\u000a  \u000a  iVar1 = *(int *)((long)any_info_ptr + 0x28);\u000a  if ((char)state_ptr == 0) {\u000a    if (0 < iVar1) {\u000a      *(int *)((long)any_info_ptr + 0x28) = iVar1 + -1;\u000a    }\u000a    piVar2 = *(int **)((long)any_info_ptr + 0x30);\u000a    if ((piVar2 != (int *)0x0) && (0 < *piVar2)) {\u000a      *piVar2 = *piVar2 + -1;\u000a    }\u000a    if (*(int *)((long)any_info_ptr + 0x28) == 0) {\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 8),1);\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 0x10),1);\u000a      local_18 = "state";\u000a      local_10 = 1;\u000a      XtSetValues(*(undefined8 *)((long)any_info_ptr + 8),&local_18,1);\u000a    }\u000a    if ((*(int **)((long)any_info_ptr + 0x30) == (int *)0x0) ||\u000a       (**(int **)((long)any_info_ptr + 0x30) == 0)) {\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 0x18),1);\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 0x20),1);\u000a      local_18 = "state";\u000a      local_10 = 1;\u000a      XtSetValues(*(undefined8 *)((long)any_info_ptr + 0x18),&local_18,1);\u000a    }\u000a  }\u000a  else {\u000a    if (iVar1 == 0) {\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 8),0);\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 0x10),0);\u000a      local_18 = "state";\u000a      local_10 = 1;\u000a      XtSetValues(*(undefined8 *)((long)any_info_ptr + 0x10),&local_18,1);\u000a    }\u000a    if ((*(int **)((long)any_info_ptr + 0x30) == (int *)0x0) ||\u000a       (**(int **)((long)any_info_ptr + 0x30) == 0)) {\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 0x18),0);\u000a      XtSetSensitive(*(undefined8 *)((long)any_info_ptr + 0x20),0);\u000a      local_18 = "state";\u000a      local_10 = 1;\u000a      XtSetValues(*(undefined8 *)((long)any_info_ptr + 0x20),&local_18,1);\u000a    }\u000a    *(int *)((long)any_info_ptr + 0x28) = *(int *)((long)any_info_ptr + 0x28) + 1;\u000a    piVar2 = *(int **)((long)any_info_ptr + 0x30);\u000a    if (piVar2 != (int *)0x0) {\u000a      *piVar2 = *piVar2 + 1;\u000a    }\u000a  }\u000a  w_00 = (Widget)0x0;\u000a  SetResourceString((Widget)0x0,*(XtPointer *)any_info_ptr,(XtPointer)0x0);\u000a  ActivateResourceWidgets(w_00,*(XtPointer *)any_info_ptr,junk);\u000a  return;\u000a}\u000a\u000a
p1221
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RSI\nTEST DL,DL\nMOV EAX,dword ptr [RBX + 0x28]\nJZ 0x00404f9c\nTEST EAX,EAX\nJNZ 0x00404f3f\nMOV RDI,qword ptr [RBX + 0x8]\nXOR ESI,ESI\nCALL 0x00402960\nMOV RDI,qword ptr [RBX + 0x10]\nXOR ESI,ESI\nCALL 0x00402960\nMOV qword ptr [RSP],0x409a85\nMOV qword ptr [RSP + 0x8],0x1\nMOV RDI,qword ptr [RBX + 0x10]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nMOV RAX,qword ptr [RBX + 0x30]\nTEST RAX,RAX\nJZ 0x00404f4d\nCMP dword ptr [RAX],0x0\nJNZ 0x00404f85\nMOV RDI,qword ptr [RBX + 0x18]\nXOR ESI,ESI\nCALL 0x00402960\nMOV RDI,qword ptr [RBX + 0x20]\nXOR ESI,ESI\nCALL 0x00402960\nMOV qword ptr [RSP],0x409a85\nMOV qword ptr [RSP + 0x8],0x1\nMOV RDI,qword ptr [RBX + 0x20]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nINC dword ptr [RBX + 0x28]\nMOV RAX,qword ptr [RBX + 0x30]\nTEST RAX,RAX\nJZ 0x00405048\nINC dword ptr [RAX]\nJMP 0x00405048\nTEST EAX,EAX\nJLE 0x00404fa5\nDEC EAX\nMOV dword ptr [RBX + 0x28],EAX\nMOV RAX,qword ptr [RBX + 0x30]\nTEST RAX,RAX\nJZ 0x00404fb8\nMOV ECX,dword ptr [RAX]\nTEST ECX,ECX\nJLE 0x00404fb8\nDEC ECX\nMOV dword ptr [RAX],ECX\nCMP dword ptr [RBX + 0x28],0x0\nJNZ 0x00404ffc\nMOV RDI,qword ptr [RBX + 0x8]\nMOV ESI,0x1\nCALL 0x00402960\nMOV RDI,qword ptr [RBX + 0x10]\nMOV ESI,0x1\nCALL 0x00402960\nMOV qword ptr [RSP],0x409a85\nMOV qword ptr [RSP + 0x8],0x1\nMOV RDI,qword ptr [RBX + 0x8]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nMOV RAX,qword ptr [RBX + 0x30]\nTEST RAX,RAX\nJZ 0x0040500a\nCMP dword ptr [RAX],0x0\nJNZ 0x00405048\nMOV RDI,qword ptr [RBX + 0x18]\nMOV ESI,0x1\nCALL 0x00402960\nMOV RDI,qword ptr [RBX + 0x20]\nMOV ESI,0x1\nCALL 0x00402960\nMOV qword ptr [RSP],0x409a85\nMOV qword ptr [RSP + 0x8],0x1\nMOV RDI,qword ptr [RBX + 0x18]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nMOV RSI,qword ptr [RBX]\nXOR EDI,EDI\nXOR EDX,EDX\nCALL 0x00405070\nMOV RSI,qword ptr [RBX]\nCALL 0x004051f0\nADD RSP,0x10\nPOP RBX\nRET\n'
p1222
S'53\n48 83 ec 10\n48 89 f3\n84 d2\n8b 43 28\n0f 84 99 00 00 00\n85 c0\n75 38\n48 8b 7b 08\n31 f6\ne8 4e da ff ff\n48 8b 7b 10\n31 f6\ne8 43 da ff ff\n48 c7 04 24 85 9a 40 00\n48 c7 44 24 08 01 00 00 00\n48 8b 7b 10\n48 89 e6\nba 01 00 00 00\ne8 51 d8 ff ff\n48 8b 43 30\n48 85 c0\n74 05\n83 38 00\n75 38\n48 8b 7b 18\n31 f6\ne8 08 da ff ff\n48 8b 7b 20\n31 f6\ne8 fd d9 ff ff\n48 c7 04 24 85 9a 40 00\n48 c7 44 24 08 01 00 00 00\n48 8b 7b 20\n48 89 e6\nba 01 00 00 00\ne8 0b d8 ff ff\nff 43 28\n48 8b 43 30\n48 85 c0\n0f 84 b3 00 00 00\nff 00\ne9 ac 00 00 00\n85 c0\n7e 05\nff c8\n89 43 28\n48 8b 43 30\n48 85 c0\n74 0a\n8b 08\n85 c9\n7e 04\nff c9\n89 08\n83 7b 28 00\n75 3e\n48 8b 7b 08\nbe 01 00 00 00\ne8 94 d9 ff ff\n48 8b 7b 10\nbe 01 00 00 00\ne8 86 d9 ff ff\n48 c7 04 24 85 9a 40 00\n48 c7 44 24 08 01 00 00 00\n48 8b 7b 08\n48 89 e6\nba 01 00 00 00\ne8 94 d7 ff ff\n48 8b 43 30\n48 85 c0\n74 05\n83 38 00\n75 3e\n48 8b 7b 18\nbe 01 00 00 00\ne8 48 d9 ff ff\n48 8b 7b 20\nbe 01 00 00 00\ne8 3a d9 ff ff\n48 c7 04 24 85 9a 40 00\n48 c7 44 24 08 01 00 00 00\n48 8b 7b 18\n48 89 e6\nba 01 00 00 00\ne8 48 d7 ff ff\n48 8b 33\n31 ff\n31 d2\ne8 1c 00 00 00\n48 8b 33\ne8 94 01 00 00\n48 83 c4 10\n5b\nc3\n'
p1223
S'.text:0000000000404ef0\n.text:0000000000404ef1\n.text:0000000000404ef5\n.text:0000000000404ef8\n.text:0000000000404efa\n.text:0000000000404efd\n.text:0000000000404f03\n.text:0000000000404f05\n.text:0000000000404f07\n.text:0000000000404f0b\n.text:0000000000404f0d\n.text:0000000000404f12\n.text:0000000000404f16\n.text:0000000000404f18\n.text:0000000000404f1d\n.text:0000000000404f25\n.text:0000000000404f2e\n.text:0000000000404f32\n.text:0000000000404f35\n.text:0000000000404f3a\n.text:0000000000404f3f\n.text:0000000000404f43\n.text:0000000000404f46\n.text:0000000000404f48\n.text:0000000000404f4b\n.text:0000000000404f4d\n.text:0000000000404f51\n.text:0000000000404f53\n.text:0000000000404f58\n.text:0000000000404f5c\n.text:0000000000404f5e\n.text:0000000000404f63\n.text:0000000000404f6b\n.text:0000000000404f74\n.text:0000000000404f78\n.text:0000000000404f7b\n.text:0000000000404f80\n.text:0000000000404f85\n.text:0000000000404f88\n.text:0000000000404f8c\n.text:0000000000404f8f\n.text:0000000000404f95\n.text:0000000000404f97\n.text:0000000000404f9c\n.text:0000000000404f9e\n.text:0000000000404fa0\n.text:0000000000404fa2\n.text:0000000000404fa5\n.text:0000000000404fa9\n.text:0000000000404fac\n.text:0000000000404fae\n.text:0000000000404fb0\n.text:0000000000404fb2\n.text:0000000000404fb4\n.text:0000000000404fb6\n.text:0000000000404fb8\n.text:0000000000404fbc\n.text:0000000000404fbe\n.text:0000000000404fc2\n.text:0000000000404fc7\n.text:0000000000404fcc\n.text:0000000000404fd0\n.text:0000000000404fd5\n.text:0000000000404fda\n.text:0000000000404fe2\n.text:0000000000404feb\n.text:0000000000404fef\n.text:0000000000404ff2\n.text:0000000000404ff7\n.text:0000000000404ffc\n.text:0000000000405000\n.text:0000000000405003\n.text:0000000000405005\n.text:0000000000405008\n.text:000000000040500a\n.text:000000000040500e\n.text:0000000000405013\n.text:0000000000405018\n.text:000000000040501c\n.text:0000000000405021\n.text:0000000000405026\n.text:000000000040502e\n.text:0000000000405037\n.text:000000000040503b\n.text:000000000040503e\n.text:0000000000405043\n.text:0000000000405048\n.text:000000000040504b\n.text:000000000040504d\n.text:000000000040504f\n.text:0000000000405054\n.text:0000000000405057\n.text:000000000040505c\n.text:0000000000405060\n.text:0000000000405061\n'
p1224
tp1225
sS'SaveResource'
p1226
(S'\n__stdcall SaveResource(Widget w, XtPointer res_box_ptr, XtPointer junk)\n'
p1227
V\u000avoid SaveResource(Widget w,XtPointer res_box_ptr,XtPointer junk)\u000a\u000a{\u000a  Widget w_00;\u000a  \u000a  if (*global_resources.save_resources_file != 0) {\u000a    _AppendResourceString(w,res_box_ptr,(XtPointer)0x0);\u000a    return;\u000a  }\u000a  w_00 = (Widget)XtParent();\u000a  _PopupFileDialog(w_00,"Enter file to dump resources into:",global_resources.save_resources_file,\u000a                   _AppendResourceString,res_box_ptr);\u000a  return;\u000a}\u000a\u000a
p1228
S'PUSH RBX\nMOV RBX,RSI\nMOV RAX,qword ptr [0x0060dfa8]\nCMP byte ptr [RAX],0x0\nJZ 0x00405468\nXOR EDX,EDX\nMOV RSI,RBX\nPOP RBX\nJMP 0x00405490\nCALL 0x00402c00\nMOV RDX,qword ptr [0x0060dfa8]\nMOV ESI,0x409a9c\nMOV ECX,0x405490\nMOV RDI,RAX\nMOV R8,RBX\nPOP RBX\nJMP 0x00406490\n'
p1229
S'53\n48 89 f3\n48 8b 05 4d 8b 20 00\n80 38 00\n74 08\n31 d2\n48 89 de\n5b\neb 28\ne8 93 d7 ff ff\n48 8b 15 34 8b 20 00\nbe 9c 9a 40 00\nb9 90 54 40 00\n48 89 c7\n49 89 d8\n5b\ne9 06 10 00 00\n'
p1230
S'.text:0000000000405450\n.text:0000000000405451\n.text:0000000000405454\n.text:000000000040545b\n.text:000000000040545e\n.text:0000000000405460\n.text:0000000000405462\n.text:0000000000405465\n.text:0000000000405466\n.text:0000000000405468\n.text:000000000040546d\n.text:0000000000405474\n.text:0000000000405479\n.text:000000000040547e\n.text:0000000000405481\n.text:0000000000405484\n.text:0000000000405485\n'
p1231
tp1232
sS'_TreeSelectNode'
p1233
(S'\n__stdcall _TreeSelectNode(WNode * node)\n'
p1234
V\u000avoid _TreeSelectNode(WNode *node)\u000a\u000a{\u000a  char in_DL;\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  int in_ESI;\u000a  Widget w;\u000a  Arg args [1];\u000a  bool local_39;\u000a  char *local_38;\u000a  bool *local_30;\u000a  \u000a  if (in_ESI == 3) {\u000a    local_38 = "state";\u000a    local_30 = &local_39;\u000a    XtGetValues(node->widget,&local_38,1);\u000a    local_39 = local_39 == false;\u000a  }\u000a  else {\u000a    if (in_ESI == 2) {\u000a      local_39 = false;\u000a    }\u000a    else {\u000a      if (in_ESI != 1) {\u000a        SetMessage(global_screen_data.info_label,res_labels[16]);\u000a        return;\u000a      }\u000a      local_39 = true;\u000a    }\u000a  }\u000a  local_38 = "state";\u000a  local_30 = (bool *)(long)local_39;\u000a  w = node->widget;\u000a  XtSetValues(w,&local_38,1);\u000a  TreeToggle(w,node,(XtPointer)(long)local_39);\u000a  if ((in_DL != 0) && (node->num_children != 0)) {\u000a    uVar2 = 0;\u000a    do {\u000a      _TreeSelectNode((WNode *)node->children[uVar2]);\u000a      uVar1 = uVar2 + 1;\u000a      uVar2 = uVar1 & 0xffffffff;\u000a    } while ((uint)uVar1 < node->num_children);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1235
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV R14D,EDX\nMOV R15D,ESI\nMOV R12,RDI\nCMP R15D,0x3\nJZ 0x00408f62\nCMP R15D,0x2\nJZ 0x00408f95\nCMP R15D,0x1\nJNZ 0x0040900f\nMOV byte ptr [RSP + 0xf],0x1\nJMP 0x00408f9a\nMOV qword ptr [RSP + 0x10],0x409a85\nLEA RAX,[RSP + 0xf]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [R12 + 0x40]\nLEA RSI,[RSP + 0x10]\nMOV EDX,0x1\nCALL 0x004027d0\nCMP byte ptr [RSP + 0xf],0x0\nSETZ byte ptr [RSP + 0xf]\nJMP 0x00408f9a\nMOV byte ptr [RSP + 0xf],0x0\nMOV qword ptr [RSP + 0x10],0x409a85\nMOVSX RAX,byte ptr [RSP + 0xf]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RDI,qword ptr [R12 + 0x40]\nLEA RSI,[RSP + 0x10]\nMOV EDX,0x1\nCALL 0x00402790\nMOVSX RDX,byte ptr [RSP + 0xf]\nMOV RSI,R12\nCALL 0x00408a50\nTEST R14B,R14B\nJZ 0x00409022\nCMP dword ptr [R12 + 0x38],0x0\nJZ 0x00409022\nXOR EBX,EBX\nMOVSX EBP,R14B\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R12 + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nMOV ESI,R15D\nMOV EDX,EBP\nCALL 0x00408f30\nINC RBX\nCMP EBX,dword ptr [R12 + 0x38]\nJC 0x00408ff0\nJMP 0x00409022\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e080]\nCALL 0x00406120\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1236
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 20\n41 89 d6\n41 89 f7\n49 89 fc\n41 83 ff 03\n74 17\n41 83 ff 02\n74 44\n41 83 ff 01\n0f 85 b4 00 00 00\nc6 44 24 0f 01\neb 38\n48 c7 44 24 10 85 9a 40 00\n48 8d 44 24 0f\n48 89 44 24 18\n49 8b 7c 24 40\n48 8d 74 24 10\nba 01 00 00 00\ne8 47 98 ff ff\n80 7c 24 0f 00\n0f 94 44 24 0f\neb 05\nc6 44 24 0f 00\n48 c7 44 24 10 85 9a 40 00\n48 0f be 44 24 0f\n48 89 44 24 18\n49 8b 7c 24 40\n48 8d 74 24 10\nba 01 00 00 00\ne8 ce 97 ff ff\n48 0f be 54 24 0f\n4c 89 e6\ne8 80 fa ff ff\n45 84 f6\n74 4d\n41 83 7c 24 38 00\n74 45\n31 db\n41 0f be ee\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 44 24 28\n48 8b 3c d8\n44 89 fe\n89 ea\ne8 2d ff ff ff\n48 ff c3\n41 3b 5c 24 38\n72 e3\neb 13\n48 8b 3d e2 4f 20 00\n48 8b 35 63 50 20 00\ne8 fe d0 ff ff\n48 83 c4 20\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1237
S'.text:0000000000408f30\n.text:0000000000408f31\n.text:0000000000408f33\n.text:0000000000408f35\n.text:0000000000408f37\n.text:0000000000408f38\n.text:0000000000408f3c\n.text:0000000000408f3f\n.text:0000000000408f42\n.text:0000000000408f45\n.text:0000000000408f49\n.text:0000000000408f4b\n.text:0000000000408f4f\n.text:0000000000408f51\n.text:0000000000408f55\n.text:0000000000408f5b\n.text:0000000000408f60\n.text:0000000000408f62\n.text:0000000000408f6b\n.text:0000000000408f70\n.text:0000000000408f75\n.text:0000000000408f7a\n.text:0000000000408f7f\n.text:0000000000408f84\n.text:0000000000408f89\n.text:0000000000408f8e\n.text:0000000000408f93\n.text:0000000000408f95\n.text:0000000000408f9a\n.text:0000000000408fa3\n.text:0000000000408fa9\n.text:0000000000408fae\n.text:0000000000408fb3\n.text:0000000000408fb8\n.text:0000000000408fbd\n.text:0000000000408fc2\n.text:0000000000408fc8\n.text:0000000000408fcb\n.text:0000000000408fd0\n.text:0000000000408fd3\n.text:0000000000408fd5\n.text:0000000000408fdb\n.text:0000000000408fdd\n.text:0000000000408fdf\n.text:0000000000408fe3\n.text:0000000000408ff0\n.text:0000000000408ff5\n.text:0000000000408ff9\n.text:0000000000408ffc\n.text:0000000000408ffe\n.text:0000000000409003\n.text:0000000000409006\n.text:000000000040900b\n.text:000000000040900d\n.text:000000000040900f\n.text:0000000000409016\n.text:000000000040901d\n.text:0000000000409022\n.text:0000000000409026\n.text:0000000000409027\n.text:0000000000409029\n.text:000000000040902b\n.text:000000000040902d\n.text:000000000040902e\n'
p1238
tp1239
sS'_AddToFlashList'
p1240
(S'\n__stdcall _AddToFlashList(TreeInfo * tree_info, char * * errors, WNode * node)\n'
p1241
V\u000avoid _AddToFlashList(TreeInfo *tree_info,char **errors,WNode *node)\u000a\u000a{\u000a  long lVar1;\u000a  ulong uVar2;\u000a  char *__format;\u000a  char *__format_00;\u000a  XWindowAttributes attrs;\u000a  char buf [8192];\u000a  undefined local_20c0 [92];\u000a  int local_2064;\u000a  char local_2038 [8200];\u000a  \u000a  lVar1 = XtDisplay(tree_info->tree_widget);\u000a  uVar2 = node->window;\u000a  if (uVar2 == 2) {\u000a    uVar2 = node->parent->window;\u000a  }\u000a  if (uVar2 == 0) {\u000a    if (node->window == 2) {\u000a      __format = "%s(0x%lx) - This object\u005c's parent is unrealized\u005cn";\u000a    }\u000a    else {\u000a      __format = "%s(0x%lx) - This widget is unrealized\u005cn";\u000a    }\u000a    sprintf(local_2038,__format,node->name,node->id);\u000a  }\u000a  else {\u000a    global_error_code = 0;\u000a    global_old_error_handler = (int (*)(Display *,XErrorEvent *))XSetErrorHandler(HandleXErrors);\u000a    global_serial_num = *(long *)(lVar1 + 0x98) + 1;\u000a    XGetWindowAttributes(lVar1,uVar2,local_20c0);\u000a    XSync(lVar1,0);\u000a    XSetErrorHandler(global_old_error_handler);\u000a    if (global_error_code == 1) {\u000a      __format = node->name;\u000a      uVar2 = node->id;\u000a      __format_00 = "%s(0x%lx) - This widget\u005c's window no longer exists.\u005cn";\u000a    }\u000a    else {\u000a      if (local_2064 == 2) {\u000a        CreateFlashWidget(tree_info);\u000a        return;\u000a      }\u000a      __format = node->name;\u000a      uVar2 = node->id;\u000a      __format_00 = "%s(0x%lx) - This widget is not mapped.\u005cn";\u000a    }\u000a    sprintf(local_2038,__format_00,__format,uVar2);\u000a  }\u000a  AddString(errors,local_2038);\u000a  return;\u000a}\u000a\u000a
p1242
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x20a8\nMOV dword ptr [RSP + 0x14],R9D\nMOV R12D,R8D\nMOV R13D,ECX\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x8],RSI\nMOV RBP,RDI\nMOV RDI,qword ptr [RBP]\nCALL 0x00402ab0\nMOV R14,RAX\nMOV R15,qword ptr [RBX + 0x18]\nCMP R15,0x2\nJNZ 0x00404855\nMOV RAX,qword ptr [RBX + 0x20]\nMOV R15,qword ptr [RAX + 0x18]\nTEST R15,R15\nJZ 0x004048cb\nMOV dword ptr [0x0060df40],0x0\nMOV EDI,0x4063a0\nCALL 0x00402a20\nMOV qword ptr [0x0060dfc0],RAX\nMOV RAX,qword ptr [0x98 + R14]\nINC RAX\nMOV qword ptr [0x0060dfc8],RAX\nLEA RDX,[RSP + 0x18]\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00402b60\nXOR ESI,ESI\nMOV RDI,R14\nCALL 0x00402ac0\nMOV RDI,qword ptr [0x0060dfc0]\nCALL 0x00402a20\nCMP dword ptr [0x0060df40],0x1\nJNZ 0x004048e8\nMOV RDX,qword ptr [RBX]\nMOV RCX,qword ptr [RBX + 0x10]\nLEA RBX,[0xa0 + RSP]\nMOV ESI,0x4099cd\nJMP 0x00404942\nMOV RDX,qword ptr [RBX]\nMOV RCX,qword ptr [RBX + 0x10]\nCMP qword ptr [RBX + 0x18],0x2\nJNZ 0x0040490b\nLEA RDI,[0xa0 + RSP]\nMOV ESI,0x409976\nJMP 0x00404918\nCMP dword ptr [RSP + 0x74],0x2\nJNZ 0x0040492e\nMOV R8D,dword ptr [0x20e0 + RSP]\nMOV RDI,RBP\nMOV ESI,R13D\nMOV EDX,R12D\nMOV ECX,dword ptr [RSP + 0x14]\nCALL 0x00404970\nJMP 0x00404959\nLEA RDI,[0xa0 + RSP]\nMOV ESI,0x4099a6\nXOR EAX,EAX\nCALL 0x00402bf0\nMOV RDI,qword ptr [RSP + 0x8]\nLEA RSI,[0xa0 + RSP]\nJMP 0x00404954\nMOV RDX,qword ptr [RBX]\nMOV RCX,qword ptr [RBX + 0x10]\nLEA RBX,[0xa0 + RSP]\nMOV ESI,0x409a01\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00402bf0\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00406260\nADD RSP,0x20a8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1243
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 20 00 00\n44 89 4c 24 14\n45 89 c4\n41 89 cd\n48 89 d3\n48 89 74 24 08\n48 89 fd\n48 8b 7d 00\ne8 70 e2 ff ff\n49 89 c6\n4c 8b 7b 18\n49 83 ff 02\n75 08\n48 8b 43 20\n4c 8b 78 18\n4d 85 ff\n74 71\nc7 05 dc 96 20 00 00 00 00 00\nbf a0 63 40 00\ne8 b2 e1 ff ff\n48 89 05 4b 97 20 00\n49 8b 86 98 00 00 00\n48 ff c0\n48 89 05 42 97 20 00\n48 8d 54 24 18\n4c 89 f7\n4c 89 fe\ne8 ca e2 ff ff\n31 f6\n4c 89 f7\ne8 20 e2 ff ff\n48 8b 3d 19 97 20 00\ne8 74 e1 ff ff\n83 3d 8d 96 20 00 01\n75 33\n48 8b 13\n48 8b 4b 10\n48 8d 9c 24 a0 00 00 00\nbe cd 99 40 00\neb 77\n48 8b 13\n48 8b 4b 10\n48 83 7b 18 02\n75 32\n48 8d bc 24 a0 00 00 00\nbe 76 99 40 00\neb 30\n83 7c 24 74 02\n75 3f\n44 8b 84 24 e0 20 00 00\n48 89 ef\n44 89 ee\n44 89 e2\n8b 4c 24 14\ne8 67 00 00 00\neb 4e\n48 8d bc 24 a0 00 00 00\nbe a6 99 40 00\n31 c0\ne8 d1 e2 ff ff\n48 8b 7c 24 08\n48 8d b4 24 a0 00 00 00\neb 26\n48 8b 13\n48 8b 4b 10\n48 8d 9c 24 a0 00 00 00\nbe 01 9a 40 00\n31 c0\n48 89 df\ne8 a4 e2 ff ff\n48 8b 7c 24 08\n48 89 de\ne8 07 19 00 00\n48 81 c4 a8 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1244
S'.text:0000000000404810\n.text:0000000000404811\n.text:0000000000404813\n.text:0000000000404815\n.text:0000000000404817\n.text:0000000000404819\n.text:000000000040481a\n.text:0000000000404821\n.text:0000000000404826\n.text:0000000000404829\n.text:000000000040482c\n.text:000000000040482f\n.text:0000000000404834\n.text:0000000000404837\n.text:000000000040483b\n.text:0000000000404840\n.text:0000000000404843\n.text:0000000000404847\n.text:000000000040484b\n.text:000000000040484d\n.text:0000000000404851\n.text:0000000000404855\n.text:0000000000404858\n.text:000000000040485a\n.text:0000000000404864\n.text:0000000000404869\n.text:000000000040486e\n.text:0000000000404875\n.text:000000000040487c\n.text:000000000040487f\n.text:0000000000404886\n.text:000000000040488b\n.text:000000000040488e\n.text:0000000000404891\n.text:0000000000404896\n.text:0000000000404898\n.text:000000000040489b\n.text:00000000004048a0\n.text:00000000004048a7\n.text:00000000004048ac\n.text:00000000004048b3\n.text:00000000004048b5\n.text:00000000004048b8\n.text:00000000004048bc\n.text:00000000004048c4\n.text:00000000004048c9\n.text:00000000004048cb\n.text:00000000004048ce\n.text:00000000004048d2\n.text:00000000004048d7\n.text:00000000004048d9\n.text:00000000004048e1\n.text:00000000004048e6\n.text:00000000004048e8\n.text:00000000004048ed\n.text:00000000004048ef\n.text:00000000004048f7\n.text:00000000004048fa\n.text:00000000004048fd\n.text:0000000000404900\n.text:0000000000404904\n.text:0000000000404909\n.text:000000000040490b\n.text:0000000000404913\n.text:0000000000404918\n.text:000000000040491a\n.text:000000000040491f\n.text:0000000000404924\n.text:000000000040492c\n.text:000000000040492e\n.text:0000000000404931\n.text:0000000000404935\n.text:000000000040493d\n.text:0000000000404942\n.text:0000000000404944\n.text:0000000000404947\n.text:000000000040494c\n.text:0000000000404951\n.text:0000000000404954\n.text:0000000000404959\n.text:0000000000404960\n.text:0000000000404961\n.text:0000000000404963\n.text:0000000000404965\n.text:0000000000404967\n.text:0000000000404969\n.text:000000000040496a\n'
p1245
tp1246
sS'puts'
p1247
(S'\n__stdcall puts(char * __s)\n'
p1248
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_0060d090)();\u000a  return iVar1;\u000a}\u000a\u000a
p1249
S'JMP qword ptr [0x0060d090]\n'
p1250
S'ff 25 9a a9 20 00\n'
p1251
S'.plt:00000000004026f0\n'
p1252
tp1253
sS'XInternAtom'
p1254
(S'\n__stdcall XInternAtom()\n'
p1255
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_0060d248)();\u000a  return;\u000a}\u000a\u000a
p1256
S'JMP qword ptr [0x0060d248]\n'
p1257
S'ff 25 e2 a7 20 00\n'
p1258
S'.plt:0000000000402a60\n'
p1259
tp1260
sS'CreateValueWidget'
p1261
(S'\n__stdcall CreateValueWidget(Widget parent, WNode * node)\n'
p1262
V\u000avoid CreateValueWidget(Widget parent,WNode *node)\u000a\u000a{\u000a  ResourceBoxInfo *pRVar1;\u000a  undefined8 uVar2;\u000a  Widget p_Var3;\u000a  Arg args [10];\u000a  char *local_b8;\u000a  undefined8 local_b0;\u000a  char *local_a8;\u000a  undefined8 local_a0;\u000a  char *local_98;\u000a  undefined8 local_90;\u000a  char *local_88;\u000a  undefined8 local_80;\u000a  char *local_78;\u000a  undefined8 local_70;\u000a  \u000a  pRVar1 = node->resources->res_box;\u000a  uVar2 = XtCreateManagedWidget("valueForm",formWidgetClass,parent,0,0);\u000a  local_b8 = "left";\u000a  local_b0 = 2;\u000a  local_a8 = "right";\u000a  local_a0 = 2;\u000a  local_98 = (char *)0x60c69e;\u000a  local_90 = 0;\u000a  local_88 = "bottom";\u000a  local_80 = 1;\u000a  local_b0 = XtCreateManagedWidget("valueLabel",labelWidgetClass,uVar2,&local_b8,4);\u000a  local_b8 = "fromHoriz";\u000a  local_a8 = &DAT_0040a323;\u000a  local_a0 = 2;\u000a  local_98 = "right";\u000a  local_90 = 3;\u000a  local_88 = (char *)0x60c69e;\u000a  local_80 = 0;\u000a  local_78 = "bottom";\u000a  local_70 = 1;\u000a  p_Var3 = (Widget)XtCreateManagedWidget("valueText",asciiTextWidgetClass,uVar2,&local_b8,5);\u000a  pRVar1->value_wid = p_Var3;\u000a  return;\u000a}\u000a\u000a
p1263
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xa0\nMOV RAX,RDI\nMOV RCX,qword ptr [RSI + 0x48]\nMOV R15,qword ptr [RCX + 0x18]\nMOV RSI,qword ptr [0x0060de20]\nMOV EDI,0x40a319\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV RBX,RAX\nMOV qword ptr [RSP],0x40a323\nMOV qword ptr [RSP + 0x8],0x2\nMOV qword ptr [RSP + 0x10],0x40a328\nMOV qword ptr [RSP + 0x18],0x2\nMOV qword ptr [RSP + 0x20],0x60c69e\nMOV qword ptr [RSP + 0x28],0x0\nMOV qword ptr [RSP + 0x30],0x40a32e\nMOV qword ptr [RSP + 0x38],0x1\nMOV RSI,qword ptr [0x0060de40]\nMOV R14,RSP\nMOV EDI,0x409b99\nMOV R8D,0x4\nMOV RDX,RBX\nMOV RCX,R14\nCALL 0x00402750\nMOV qword ptr [RSP],0x409b82\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],0x40a323\nMOV qword ptr [RSP + 0x18],0x2\nMOV qword ptr [RSP + 0x20],0x40a328\nMOV qword ptr [RSP + 0x28],0x3\nMOV qword ptr [RSP + 0x30],0x60c69e\nMOV qword ptr [RSP + 0x38],0x0\nMOV qword ptr [RSP + 0x40],0x40a32e\nMOV qword ptr [RSP + 0x48],0x1\nMOV RSI,qword ptr [0x0060dd20]\nMOV EDI,0x409ba4\nMOV R8D,0x5\nMOV RDX,RBX\nMOV RCX,R14\nCALL 0x00402750\nMOV qword ptr [R15],RAX\nADD RSP,0xa0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1264
S'41 57\n41 56\n53\n48 81 ec a0 00 00 00\n48 89 f8\n48 8b 4e 48\n4c 8b 79 18\n48 8b 35 22 5d 20 00\nbf 19 a3 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 40 a6 ff ff\n48 89 c3\n48 c7 04 24 23 a3 40 00\n48 c7 44 24 08 02 00 00 00\n48 c7 44 24 10 28 a3 40 00\n48 c7 44 24 18 02 00 00 00\n48 c7 44 24 20 9e c6 60 00\n48 c7 44 24 28 00 00 00 00\n48 c7 44 24 30 2e a3 40 00\n48 c7 44 24 38 01 00 00 00\n48 8b 35 df 5c 20 00\n49 89 e6\nbf 99 9b 40 00\n41 b8 04 00 00 00\n48 89 da\n4c 89 f1\ne8 d6 a5 ff ff\n48 c7 04 24 82 9b 40 00\n48 89 44 24 08\n48 c7 44 24 10 23 a3 40 00\n48 c7 44 24 18 02 00 00 00\n48 c7 44 24 20 28 a3 40 00\n48 c7 44 24 28 03 00 00 00\n48 c7 44 24 30 9e c6 60 00\n48 c7 44 24 38 00 00 00 00\n48 c7 44 24 40 2e a3 40 00\n48 c7 44 24 48 01 00 00 00\n48 8b 35 4a 5b 20 00\nbf a4 9b 40 00\n41 b8 05 00 00 00\n48 89 da\n4c 89 f1\ne8 64 a5 ff ff\n49 89 07\n48 81 c4 a0 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p1265
S'.text:00000000004080e0\n.text:00000000004080e2\n.text:00000000004080e4\n.text:00000000004080e5\n.text:00000000004080ec\n.text:00000000004080ef\n.text:00000000004080f3\n.text:00000000004080f7\n.text:00000000004080fe\n.text:0000000000408103\n.text:0000000000408105\n.text:0000000000408108\n.text:000000000040810b\n.text:0000000000408110\n.text:0000000000408113\n.text:000000000040811b\n.text:0000000000408124\n.text:000000000040812d\n.text:0000000000408136\n.text:000000000040813f\n.text:0000000000408148\n.text:0000000000408151\n.text:000000000040815a\n.text:0000000000408161\n.text:0000000000408164\n.text:0000000000408169\n.text:000000000040816f\n.text:0000000000408172\n.text:0000000000408175\n.text:000000000040817a\n.text:0000000000408182\n.text:0000000000408187\n.text:0000000000408190\n.text:0000000000408199\n.text:00000000004081a2\n.text:00000000004081ab\n.text:00000000004081b4\n.text:00000000004081bd\n.text:00000000004081c6\n.text:00000000004081cf\n.text:00000000004081d6\n.text:00000000004081db\n.text:00000000004081e1\n.text:00000000004081e4\n.text:00000000004081e7\n.text:00000000004081ec\n.text:00000000004081ef\n.text:00000000004081f6\n.text:00000000004081f7\n.text:00000000004081f9\n.text:00000000004081fb\n'
p1266
tp1267
sS'XtName'
p1268
(S'\n__stdcall XtName()\n'
p1269
V\u000avoid XtName(void)\u000a\u000a{\u000a  (*(code *)PTR_XtName_0060d120)();\u000a  return;\u000a}\u000a\u000a
p1270
S'JMP qword ptr [0x0060d120]\n'
p1271
S'ff 25 0a a9 20 00\n'
p1272
S'.plt:0000000000402810\n'
p1273
tp1274
sS'XSetWMProtocols'
p1275
(S'\n__stdcall XSetWMProtocols()\n'
p1276
V\u000avoid XSetWMProtocols(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetWMProtocols_0060d1f8)();\u000a  return;\u000a}\u000a\u000a
p1277
S'JMP qword ptr [0x0060d1f8]\n'
p1278
S'ff 25 32 a8 20 00\n'
p1279
S'.plt:00000000004029c0\n'
p1280
tp1281
sS'XtSetSensitive'
p1282
(S'\n__stdcall XtSetSensitive()\n'
p1283
V\u000avoid XtSetSensitive(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetSensitive_0060d1c8)();\u000a  return;\u000a}\u000a\u000a
p1284
S'JMP qword ptr [0x0060d1c8]\n'
p1285
S'ff 25 62 a8 20 00\n'
p1286
S'.plt:0000000000402960\n'
p1287
tp1288
sS'XtCalloc'
p1289
(S'\n__stdcall XtCalloc()\n'
p1290
V\u000avoid XtCalloc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCalloc_0060d2b8)();\u000a  return;\u000a}\u000a\u000a
p1291
S'JMP qword ptr [0x0060d2b8]\n'
p1292
S'ff 25 72 a7 20 00\n'
p1293
S'.plt:0000000000402b40\n'
p1294
tp1295
sS'XtAppMainLoop'
p1296
(S'\n__stdcall XtAppMainLoop()\n'
p1297
V\u000avoid XtAppMainLoop(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppMainLoop_0060d258)();\u000a  return;\u000a}\u000a\u000a
p1298
S'JMP qword ptr [0x0060d258]\n'
p1299
S'ff 25 d2 a7 20 00\n'
p1300
S'.plt:0000000000402a80\n'
p1301
tp1302
sS'XmuPrintDefaultErrorMessage'
p1303
(S'\n__stdcall XmuPrintDefaultErrorMessage()\n'
p1304
V\u000avoid XmuPrintDefaultErrorMessage(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuPrintDefaultErrorMessage_0060d038)();\u000a  return;\u000a}\u000a\u000a
p1305
S'JMP qword ptr [0x0060d038]\n'
p1306
S'ff 25 f2 a9 20 00\n'
p1307
S'.plt:0000000000402640\n'
p1308
tp1309
sS'ExecuteOverAllNodes'
p1310
(S'\n__stdcall ExecuteOverAllNodes(WNode * top_node, anon_subr_void_WNode_ptr_XtPointer * func, XtPointer data)\n'
p1311
V\u000avoid ExecuteOverAllNodes(WNode *top_node,void (*func)(WNode *,XtPointer),XtPointer data)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  \u000a  (*func)(top_node,data);\u000a  if (top_node->num_children != 0) {\u000a    uVar2 = 0;\u000a    do {\u000a      ExecuteOverAllNodes((WNode *)top_node->children[uVar2],func,data);\u000a      uVar1 = uVar2 + 1;\u000a      uVar2 = uVar1 & 0xffffffff;\u000a    } while ((uint)uVar1 < top_node->num_children);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1312
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV R12,RDI\nMOV RSI,R14\nCALL R15\nCMP dword ptr [R12 + 0x38],0x0\nJZ 0x00406e2e\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R12 + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nMOV RSI,R15\nMOV RDX,R14\nCALL 0x00406de0\nINC RBX\nCMP EBX,dword ptr [R12 + 0x38]\nJC 0x00406e10\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p1313
S'41 57\n41 56\n41 54\n53\n50\n49 89 d6\n49 89 f7\n49 89 fc\n4c 89 f6\n41 ff d7\n41 83 7c 24 38 00\n74 2f\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 44 24 28\n48 8b 3c d8\n4c 89 fe\n4c 89 f2\ne8 bc ff ff ff\n48 ff c3\n41 3b 5c 24 38\n72 e2\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p1314
S'.text:0000000000406de0\n.text:0000000000406de2\n.text:0000000000406de4\n.text:0000000000406de6\n.text:0000000000406de7\n.text:0000000000406de8\n.text:0000000000406deb\n.text:0000000000406dee\n.text:0000000000406df1\n.text:0000000000406df4\n.text:0000000000406df7\n.text:0000000000406dfd\n.text:0000000000406dff\n.text:0000000000406e01\n.text:0000000000406e10\n.text:0000000000406e15\n.text:0000000000406e19\n.text:0000000000406e1c\n.text:0000000000406e1f\n.text:0000000000406e24\n.text:0000000000406e27\n.text:0000000000406e2c\n.text:0000000000406e2e\n.text:0000000000406e32\n.text:0000000000406e33\n.text:0000000000406e35\n.text:0000000000406e37\n.text:0000000000406e39\n'
p1315
tp1316
sS'XtLastTimestampProcessed'
p1317
(S'\n__stdcall XtLastTimestampProcessed()\n'
p1318
V\u000avoid XtLastTimestampProcessed(void)\u000a\u000a{\u000a  (*(code *)PTR_XtLastTimestampProcessed_0060d2a8)();\u000a  return;\u000a}\u000a\u000a
p1319
S'JMP qword ptr [0x0060d2a8]\n'
p1320
S'ff 25 82 a7 20 00\n'
p1321
S'.plt:0000000000402b20\n'
p1322
tp1323
sS'BuildWidgetTree'
p1324
(S'\n__stdcall BuildWidgetTree(Widget parent)\n'
p1325
V\u000avoid BuildWidgetTree(Widget parent)\u000a\u000a{\u000a  Widget parent_00;\u000a  Widget p_Var1;\u000a  \u000a  parent_00 = (Widget)XtCreateManagedWidget("paned",panedWidgetClass,parent,0,0);\u000a  p_Var1 = CreateTopArea(parent_00);\u000a  parent_00 = (Widget)XtCreateManagedWidget("porthole",portholeWidgetClass,parent_00,0,0);\u000a  XtAddCallback(parent_00,"reportCallback",PortholeCallback,p_Var1);\u000a  XtAddCallback(p_Var1,"reportCallback",PannerCallback,parent_00);\u000a  global_tree_parent = parent_00;\u000a  return;\u000a}\u000a\u000a
p1326
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RAX,RDI\nMOV RSI,qword ptr [0x0060dca8]\nMOV EDI,0x409ec0\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00402750\nMOV RBX,RAX\nMOV RDI,RBX\nCALL 0x004074f0\nMOV R14,RAX\nMOV RSI,qword ptr [0x0060dd40]\nMOV EDI,0x409ec6\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00402750\nMOV RBX,RAX\nMOV ESI,0x409ecf\nMOV EDX,0x404d40\nMOV RDI,RBX\nMOV RCX,R14\nCALL 0x00402c70\nMOV ESI,0x409ecf\nMOV EDX,0x404ce0\nMOV RDI,R14\nMOV RCX,RBX\nCALL 0x00402c70\nMOV qword ptr [0x0060dfd8],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1327
S'41 56\n53\n50\n48 89 f8\n48 8b 35 3a 68 20 00\nbf c0 9e 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 d0 b2 ff ff\n48 89 c3\n48 89 df\ne8 65 00 00 00\n49 89 c6\n48 8b 35 ab 68 20 00\nbf c6 9e 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 a9 b2 ff ff\n48 89 c3\nbe cf 9e 40 00\nba 40 4d 40 00\n48 89 df\n4c 89 f1\ne8 b1 b7 ff ff\nbe cf 9e 40 00\nba e0 4c 40 00\n4c 89 f7\n48 89 d9\ne8 9c b7 ff ff\n48 89 1d fd 6a 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1328
S'.text:0000000000407460\n.text:0000000000407462\n.text:0000000000407463\n.text:0000000000407464\n.text:0000000000407467\n.text:000000000040746e\n.text:0000000000407473\n.text:0000000000407475\n.text:0000000000407478\n.text:000000000040747b\n.text:0000000000407480\n.text:0000000000407483\n.text:0000000000407486\n.text:000000000040748b\n.text:000000000040748e\n.text:0000000000407495\n.text:000000000040749a\n.text:000000000040749c\n.text:000000000040749f\n.text:00000000004074a2\n.text:00000000004074a7\n.text:00000000004074aa\n.text:00000000004074af\n.text:00000000004074b4\n.text:00000000004074b7\n.text:00000000004074ba\n.text:00000000004074bf\n.text:00000000004074c4\n.text:00000000004074c9\n.text:00000000004074cc\n.text:00000000004074cf\n.text:00000000004074d4\n.text:00000000004074db\n.text:00000000004074df\n.text:00000000004074e0\n.text:00000000004074e2\n'
p1329
tp1330
sS'_XEditResPutString8'
p1331
(S'\n__stdcall _XEditResPutString8()\n'
p1332
V\u000avoid _XEditResPutString8(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResPutString8_0060d250)();\u000a  return;\u000a}\u000a\u000a
p1333
S'JMP qword ptr [0x0060d250]\n'
p1334
S'ff 25 da a7 20 00\n'
p1335
S'.plt:0000000000402a70\n'
p1336
tp1337
sS'FindTreeNodeFromWidget'
p1338
(S'\n__stdcall FindTreeNodeFromWidget(Widget w)\n'
p1339
V\u000aWNode * FindTreeNodeFromWidget(Widget w)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  WNode *pWVar3;\u000a  XPointer data_return;\u000a  WNode *local_10;\u000a  \u000a  uVar2 = XtDisplay();\u000a  iVar1 = XFindContext(uVar2,w,0x2a);\u000a  pWVar3 = (WNode *)0x0;\u000a  if (iVar1 == 0) {\u000a    pWVar3 = local_10;\u000a  }\u000a  return pWVar3;\u000a}\u000a\u000a
p1340
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nCALL 0x00402ab0\nLEA RCX,[RSP + 0x8]\nMOV EDX,0x2a\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x00402930\nXOR ECX,ECX\nTEST EAX,EAX\nCMOVZ RCX,qword ptr [RSP + 0x8]\nMOV RAX,RCX\nADD RSP,0x10\nPOP RBX\nRET\n'
p1341
S'53\n48 83 ec 10\n48 89 fb\ne8 53 f9 ff ff\n48 8d 4c 24 08\nba 2a 00 00 00\n48 89 c7\n48 89 de\ne8 be f7 ff ff\n31 c9\n85 c0\n48 0f 44 4c 24 08\n48 89 c8\n48 83 c4 10\n5b\nc3\n'
p1342
S'.text:0000000000403150\n.text:0000000000403151\n.text:0000000000403155\n.text:0000000000403158\n.text:000000000040315d\n.text:0000000000403162\n.text:0000000000403167\n.text:000000000040316a\n.text:000000000040316d\n.text:0000000000403172\n.text:0000000000403174\n.text:0000000000403176\n.text:000000000040317c\n.text:000000000040317f\n.text:0000000000403183\n.text:0000000000403184\n'
p1343
tp1344
sS'main'
p1345
(S'\n__stdcall main(char * * argv)\n'
p1346
V\u000aint main(char **argv)\u000a\u000a{\u000a  Widget p_Var1;\u000a  undefined8 uVar2;\u000a  Display *dpy;\u000a  undefined8 uVar3;\u000a  char **in_RSI;\u000a  char *call;\u000a  int local_14;\u000a  XtAppContext local_10;\u000a  \u000a  local_14 = (int)argv;\u000a  global_toplevel = (Widget)XtAppInitialize(&local_10,"Editres",0,0,&local_14);\u000a  if (local_14 == 1) {\u000a    SetApplicationActions(local_10);\u000a    XtGetApplicationResources(global_toplevel,&global_resources,editres_resources,5,0,0);\u000a    p_Var1 = global_toplevel;\u000a    global_resources.allocated_save_resources_file = 0;\u000a    uVar2 = XtParseTranslationTable("<Message>WM_PROTOCOLS: quit()");\u000a    XtOverrideTranslations(p_Var1,uVar2);\u000a    BuildWidgetTree(global_toplevel);\u000a    SetMessage(global_screen_data.info_label,res_labels[13]);\u000a    global_screen_data.set_values_popup = (Widget)0x0;\u000a    dpy = (Display *)XtDisplay(global_toplevel);\u000a    InternAtoms(dpy);\u000a    XtRealizeWidget(global_toplevel);\u000a    uVar2 = XtDisplay(global_toplevel);\u000a    wm_delete_window = XInternAtom(uVar2,"WM_DELETE_WINDOW",0);\u000a    uVar2 = XtDisplay(global_toplevel);\u000a    uVar3 = XtWindow(global_toplevel);\u000a    XSetWMProtocols(uVar2,uVar3,&wm_delete_window,1);\u000a    XtAppMainLoop();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  call = *in_RSI;\u000a  Syntax(local_10,call);\u000a  XtDestroyApplicationContext();\u000a  fprintf(stderr,"Usage: %s\u005cn",call);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p1347
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RSI\nMOV dword ptr [RSP + 0x4],EDI\nSUB RSP,0x8\nLEA RDI,[RSP + 0x10]\nLEA R8,[RSP + 0xc]\nMOV ESI,0x4096e3\nMOV EDX,0x0\nMOV ECX,0x0\nMOV R9,RBX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x60ded8\nCALL 0x00402740\nADD RSP,0x20\nMOV qword ptr [0x0060dfb8],RAX\nCMP dword ptr [RSP + 0x4],0x1\nMOV RDI,qword ptr [RSP + 0x8]\nJNZ 0x0040439b\nCALL 0x00402db0\nMOV RDI,qword ptr [0x0060dfb8]\nMOV ESI,0x60df90\nMOV EDX,0x60d4d0\nMOV ECX,0x5\nXOR R8D,R8D\nXOR R9D,R9D\nCALL 0x00402630\nMOV byte ptr [0x0060dfb0],0x0\nMOV RBX,qword ptr [0x0060dfb8]\nMOV EDI,0x409870\nCALL 0x00402ad0\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x004029e0\nMOV RDI,qword ptr [0x0060dfb8]\nCALL 0x00407460\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e068]\nCALL 0x00406120\nMOV qword ptr [0x0060dfe0],0x0\nMOV RDI,qword ptr [0x0060dfb8]\nCALL 0x00402ab0\nMOV RDI,RAX\nCALL 0x00403770\nMOV RDI,qword ptr [0x0060dfb8]\nCALL 0x00402980\nMOV RDI,qword ptr [0x0060dfb8]\nCALL 0x00402ab0\nMOV ESI,0x40988e\nXOR EDX,EDX\nMOV RDI,RAX\nCALL 0x00402a60\nMOV qword ptr [0x0060dfd0],RAX\nMOV RDI,qword ptr [0x0060dfb8]\nCALL 0x00402ab0\nMOV RBX,RAX\nMOV RDI,qword ptr [0x0060dfb8]\nCALL 0x004027e0\nMOV EDX,0x60dfd0\nMOV ECX,0x1\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x004029c0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402a80\nXOR EDI,EDI\nCALL 0x00402c10\nMOV RSI,qword ptr [RBX]\nCALL 0x004043b0\nNOP dword ptr CS:[RAX + RAX*0x1]\n'
p1348
S'53\n48 83 ec 10\n48 89 f3\n89 7c 24 04\n48 83 ec 08\n48 8d 7c 24 10\n4c 8d 44 24 0c\nbe e3 96 40 00\nba 00 00 00 00\nb9 00 00 00 00\n49 89 d9\n6a 00\n6a 00\n68 d8 de 60 00\ne8 b6 e4 ff ff\n48 83 c4 20\n48 89 05 23 9d 20 00\n83 7c 24 04 01\n48 8b 7c 24 08\n0f 85 f6 00 00 00\ne8 06 eb ff ff\n48 8b 3d 07 9d 20 00\nbe 90 df 60 00\nba d0 d4 60 00\nb9 05 00 00 00\n45 31 c0\n45 31 c9\ne8 65 e3 ff ff\nc6 05 de 9c 20 00 00\n48 8b 1d df 9c 20 00\nbf 70 98 40 00\ne8 ed e7 ff ff\n48 89 df\n48 89 c6\ne8 f2 e6 ff ff\n48 8b 3d c3 9c 20 00\ne8 66 31 00 00\n48 8b 3d f7 9c 20 00\n48 8b 35 60 9d 20 00\ne8 13 1e 00 00\n48 c7 05 c8 9c 20 00 00 00 00 00\n48 8b 3d 99 9c 20 00\ne8 8c e7 ff ff\n48 89 c7\ne8 44 f4 ff ff\n48 8b 3d 85 9c 20 00\ne8 48 e6 ff ff\n48 8b 3d 79 9c 20 00\ne8 6c e7 ff ff\nbe 8e 98 40 00\n31 d2\n48 89 c7\ne8 0d e7 ff ff\n48 89 05 76 9c 20 00\n48 8b 3d 57 9c 20 00\ne8 4a e7 ff ff\n48 89 c3\n48 8b 3d 48 9c 20 00\ne8 6b e4 ff ff\nba d0 df 60 00\nb9 01 00 00 00\n48 89 df\n48 89 c6\ne8 36 e6 ff ff\n48 8b 7c 24 08\ne8 ec e6 ff ff\n31 ff\ne8 75 e8 ff ff\n48 8b 33\ne8 0d 00 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n'
p1349
S'.text:0000000000404250\n.text:0000000000404251\n.text:0000000000404255\n.text:0000000000404258\n.text:000000000040425c\n.text:0000000000404260\n.text:0000000000404265\n.text:000000000040426a\n.text:000000000040426f\n.text:0000000000404274\n.text:0000000000404279\n.text:000000000040427c\n.text:000000000040427e\n.text:0000000000404280\n.text:0000000000404285\n.text:000000000040428a\n.text:000000000040428e\n.text:0000000000404295\n.text:000000000040429a\n.text:000000000040429f\n.text:00000000004042a5\n.text:00000000004042aa\n.text:00000000004042b1\n.text:00000000004042b6\n.text:00000000004042bb\n.text:00000000004042c0\n.text:00000000004042c3\n.text:00000000004042c6\n.text:00000000004042cb\n.text:00000000004042d2\n.text:00000000004042d9\n.text:00000000004042de\n.text:00000000004042e3\n.text:00000000004042e6\n.text:00000000004042e9\n.text:00000000004042ee\n.text:00000000004042f5\n.text:00000000004042fa\n.text:0000000000404301\n.text:0000000000404308\n.text:000000000040430d\n.text:0000000000404318\n.text:000000000040431f\n.text:0000000000404324\n.text:0000000000404327\n.text:000000000040432c\n.text:0000000000404333\n.text:0000000000404338\n.text:000000000040433f\n.text:0000000000404344\n.text:0000000000404349\n.text:000000000040434b\n.text:000000000040434e\n.text:0000000000404353\n.text:000000000040435a\n.text:0000000000404361\n.text:0000000000404366\n.text:0000000000404369\n.text:0000000000404370\n.text:0000000000404375\n.text:000000000040437a\n.text:000000000040437f\n.text:0000000000404382\n.text:0000000000404385\n.text:000000000040438a\n.text:000000000040438f\n.text:0000000000404394\n.text:0000000000404396\n.text:000000000040439b\n.text:000000000040439e\n.text:00000000004043a3\n'
p1350
tp1351
sS'XBell'
p1352
(S'\n__stdcall XBell()\n'
p1353
V\u000avoid XBell(void)\u000a\u000a{\u000a  (*(code *)PTR_XBell_0060d050)();\u000a  return;\u000a}\u000a\u000a
p1354
S'JMP qword ptr [0x0060d050]\n'
p1355
S'ff 25 da a9 20 00\n'
p1356
S'.plt:0000000000402670\n'
p1357
tp1358
sS'ActivateResourceWidgets'
p1359
(S'\n__stdcall ActivateResourceWidgets(Widget w, XtPointer node_ptr, XtPointer junk)\n'
p1360
V\u000avoid ActivateResourceWidgets(Widget w,XtPointer node_ptr,XtPointer junk)\u000a\u000a{\u000a  Arg args [1];\u000a  undefined8 local_48;\u000a  char *local_40;\u000a  char *local_38;\u000a  undefined2 local_30;\u000a  undefined8 local_28;\u000a  undefined8 local_20;\u000a  undefined8 local_18;\u000a  undefined8 *local_10;\u000a  \u000a  local_10 = &local_48;\u000a  local_40 = GetResourceName(*(ResourceBoxInfo **)(*(long *)((long)node_ptr + 0x48) + 0x18));\u000a  local_38 = "IGNORE_ME";\u000a  local_30 = 0;\u000a  local_28 = 0;\u000a  local_18 = 0x60c52d;\u000a  XtGetValues(*(undefined8 *)(*(long *)(*(long *)((long)node_ptr + 0x48) + 0x18) + 8),&local_18,1);\u000a  local_20 = 0;\u000a  XrmPutLineResource(&local_20,local_48);\u000a  ExecuteOverAllNodes(*(WNode **)(*(long *)((long)node_ptr + 0x30) + 8),SetOnlyMatchingWidgets,\u000a                      &local_40);\u000a  XrmDestroyDatabase(local_20);\u000a  return;\u000a}\u000a\u000a
p1361
S'PUSH RBX\nSUB RSP,0x40\nMOV RBX,RSI\nMOV RAX,qword ptr [RBX + 0x48]\nMOV RDI,qword ptr [RAX + 0x18]\nCALL 0x004052b0\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],0x409abf\nMOV word ptr [RSP + 0x18],0x0\nMOV qword ptr [RSP + 0x20],0x0\nMOV qword ptr [RSP + 0x30],0x60c52d\nMOV RAX,RSP\nMOV qword ptr [RSP + 0x38],RAX\nMOV RAX,qword ptr [RBX + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RDI,qword ptr [RAX + 0x8]\nLEA RSI,[RSP + 0x30]\nMOV EDX,0x1\nCALL 0x004027d0\nLEA RDI,[RSP + 0x28]\nMOV qword ptr [RSP + 0x28],0x0\nMOV RSI,qword ptr [RSP]\nCALL 0x00402ca0\nMOV RAX,qword ptr [RBX + 0x30]\nMOV RDI,qword ptr [RAX + 0x8]\nLEA RDX,[RSP + 0x8]\nMOV ESI,0x405880\nCALL 0x00406de0\nMOV RDI,qword ptr [RSP + 0x28]\nCALL 0x00402b80\nADD RSP,0x40\nPOP RBX\nRET\n'
p1362
S'53\n48 83 ec 40\n48 89 f3\n48 8b 43 48\n48 8b 78 18\ne8 ab 00 00 00\n48 89 44 24 08\n48 c7 44 24 10 bf 9a 40 00\n66 c7 44 24 18 00 00\n48 c7 44 24 20 00 00 00 00\n48 c7 44 24 30 2d c5 60 00\n48 89 e0\n48 89 44 24 38\n48 8b 43 48\n48 8b 40 18\n48 8b 78 08\n48 8d 74 24 30\nba 01 00 00 00\ne8 81 d5 ff ff\n48 8d 7c 24 28\n48 c7 44 24 28 00 00 00 00\n48 8b 34 24\ne8 3a da ff ff\n48 8b 43 30\n48 8b 78 08\n48 8d 54 24 08\nbe 80 58 40 00\ne8 63 1b 00 00\n48 8b 7c 24 28\ne8 f9 d8 ff ff\n48 83 c4 40\n5b\nc3\n'
p1363
S'.text:00000000004051f0\n.text:00000000004051f1\n.text:00000000004051f5\n.text:00000000004051f8\n.text:00000000004051fc\n.text:0000000000405200\n.text:0000000000405205\n.text:000000000040520a\n.text:0000000000405213\n.text:000000000040521a\n.text:0000000000405223\n.text:000000000040522c\n.text:000000000040522f\n.text:0000000000405234\n.text:0000000000405238\n.text:000000000040523c\n.text:0000000000405240\n.text:0000000000405245\n.text:000000000040524a\n.text:000000000040524f\n.text:0000000000405254\n.text:000000000040525d\n.text:0000000000405261\n.text:0000000000405266\n.text:000000000040526a\n.text:000000000040526e\n.text:0000000000405273\n.text:0000000000405278\n.text:000000000040527d\n.text:0000000000405282\n.text:0000000000405287\n.text:000000000040528b\n.text:000000000040528c\n'
p1364
tp1365
sS'XtMalloc'
p1366
(S'\n__stdcall XtMalloc()\n'
p1367
V\u000avoid XtMalloc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtMalloc_0060d0c8)();\u000a  return;\u000a}\u000a\u000a
p1368
S'JMP qword ptr [0x0060d0c8]\n'
p1369
S'ff 25 62 a9 20 00\n'
p1370
S'.plt:0000000000402760\n'
p1371
tp1372
sS'XtAppAddTimeOut'
p1373
(S'\n__stdcall XtAppAddTimeOut()\n'
p1374
V\u000avoid XtAppAddTimeOut(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppAddTimeOut_0060d0d8)();\u000a  return;\u000a}\u000a\u000a
p1375
S'JMP qword ptr [0x0060d0d8]\n'
p1376
S'ff 25 52 a9 20 00\n'
p1377
S'.plt:0000000000402780\n'
p1378
tp1379
sS'AddTreeNode'
p1380
(S'\n__stdcall AddTreeNode(Widget tree, WNode * top)\n'
p1381
V\u000avoid AddTreeNode(Widget tree,WNode *top)\u000a\u000a{\u000a  _WNode *p_Var1;\u000a  int iVar2;\u000a  Widget p_Var3;\u000a  ulong uVar4;\u000a  ulong uVar5;\u000a  undefined8 uVar6;\u000a  Arg args [1];\u000a  char msg [8192];\u000a  char *local_2038;\u000a  Widget local_2030;\u000a  char local_2028 [8200];\u000a  \u000a  p_Var1 = top->parent;\u000a  if (p_Var1 == (_WNode *)0x0) {\u000a    uVar6 = 0;\u000a  }\u000a  else {\u000a    if (p_Var1->widget == (Widget)0x0) {\u000a      sprintf(local_2028,res_labels[28],top->name,p_Var1->name,"not been created yet");\u000a      SetMessage(global_screen_data.info_label,local_2028);\u000a    }\u000a    local_2038 = "treeParent";\u000a    local_2030 = top->parent->widget;\u000a    uVar6 = 1;\u000a  }\u000a  p_Var3 = (Widget)XtCreateManagedWidget(top->name,toggleWidgetClass,tree,&local_2038,uVar6);\u000a  top->widget = p_Var3;\u000a  uVar6 = XtDisplay(p_Var3);\u000a  iVar2 = XSaveContext(uVar6,top->widget,0x2a,top);\u000a  if (iVar2 != 0) {\u000a    sprintf(local_2028,res_labels[29],top->name);\u000a    SetMessage(global_screen_data.info_label,local_2028);\u000a  }\u000a  XtAddCallback(top->widget,0x60c408,TreeToggle,top);\u000a  if (top->num_children != 0) {\u000a    uVar5 = 0;\u000a    do {\u000a      AddTreeNode(tree,(WNode *)top->children[uVar5]);\u000a      uVar4 = uVar5 + 1;\u000a      uVar5 = uVar4 & 0xffffffff;\u000a    } while ((uint)uVar4 < top->num_children);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1382
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x2018\nMOV R12,RSI\nMOV R14,RDI\nMOV RAX,qword ptr [R12 + 0x20]\nTEST RAX,RAX\nJZ 0x00408995\nCMP qword ptr [RAX + 0x40],0x0\nJNZ 0x00408977\nMOV RSI,qword ptr [0x0060e0e0]\nMOV RDX,qword ptr [R12]\nMOV RCX,qword ptr [RAX]\nLEA R15,[RSP + 0x10]\nMOV R8D,0x40a360\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,R15\nCALL 0x00406120\nMOV qword ptr [RSP],0x40a375\nMOV RAX,qword ptr [R12 + 0x20]\nMOV RAX,qword ptr [RAX + 0x40]\nMOV qword ptr [RSP + 0x8],RAX\nMOV R8D,0x1\nJMP 0x00408998\nXOR R8D,R8D\nMOV RDI,qword ptr [R12]\nMOV RSI,qword ptr [0x0060dda0]\nMOV RCX,RSP\nMOV RDX,R14\nCALL 0x00402750\nMOV qword ptr [R12 + 0x40],RAX\nMOV RDI,RAX\nCALL 0x00402ab0\nMOV RSI,qword ptr [R12 + 0x40]\nMOV EDX,0x2a\nMOV RDI,RAX\nMOV RCX,R12\nCALL 0x004027c0\nTEST EAX,EAX\nJZ 0x004089fd\nMOV RSI,qword ptr [0x0060e0e8]\nMOV RDX,qword ptr [R12]\nLEA R15,[RSP + 0x10]\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,R15\nCALL 0x00406120\nMOV RDI,qword ptr [R12 + 0x40]\nMOV ESI,0x60c408\nMOV EDX,0x408a50\nMOV RCX,R12\nCALL 0x00402c70\nCMP dword ptr [R12 + 0x38],0x0\nJZ 0x00408a3b\nXOR EBX,EBX\nNOP\nMOV RAX,qword ptr [R12 + 0x28]\nMOV RSI,qword ptr [RAX + RBX*0x8]\nMOV RDI,R14\nCALL 0x00408920\nINC RBX\nCMP EBX,dword ptr [R12 + 0x38]\nJC 0x00408a20\nADD RSP,0x2018\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p1383
S'41 57\n41 56\n41 54\n53\n48 81 ec 18 20 00 00\n49 89 f4\n49 89 fe\n49 8b 44 24 20\n48 85 c0\n74 57\n48 83 78 40 00\n75 32\n48 8b 35 94 57 20 00\n49 8b 14 24\n48 8b 08\n4c 8d 7c 24 10\n41 b8 60 a3 40 00\n31 c0\n4c 89 ff\ne8 88 a2 ff ff\n48 8b 3d 89 56 20 00\n4c 89 fe\ne8 a9 d7 ff ff\n48 c7 04 24 75 a3 40 00\n49 8b 44 24 20\n48 8b 40 40\n48 89 44 24 08\n41 b8 01 00 00 00\neb 03\n45 31 c0\n49 8b 3c 24\n48 8b 35 fd 53 20 00\n48 89 e1\n4c 89 f2\ne8 a2 9d ff ff\n49 89 44 24 40\n48 89 c7\ne8 f5 a0 ff ff\n49 8b 74 24 40\nba 2a 00 00 00\n48 89 c7\n4c 89 e1\ne8 f0 9d ff ff\n85 c0\n74 29\n48 8b 35 0d 57 20 00\n49 8b 14 24\n4c 8d 7c 24 10\n31 c0\n4c 89 ff\ne8 02 a2 ff ff\n48 8b 3d 03 56 20 00\n4c 89 fe\ne8 23 d7 ff ff\n49 8b 7c 24 40\nbe 08 c4 60 00\nba 50 8a 40 00\n4c 89 e1\ne8 5c a2 ff ff\n41 83 7c 24 38 00\n74 1f\n31 db\n66 90\n49 8b 44 24 28\n48 8b 34 d8\n4c 89 f7\ne8 ef fe ff ff\n48 ff c3\n41 3b 5c 24 38\n72 e5\n48 81 c4 18 20 00 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p1384
S'.text:0000000000408920\n.text:0000000000408922\n.text:0000000000408924\n.text:0000000000408926\n.text:0000000000408927\n.text:000000000040892e\n.text:0000000000408931\n.text:0000000000408934\n.text:0000000000408939\n.text:000000000040893c\n.text:000000000040893e\n.text:0000000000408943\n.text:0000000000408945\n.text:000000000040894c\n.text:0000000000408950\n.text:0000000000408953\n.text:0000000000408958\n.text:000000000040895e\n.text:0000000000408960\n.text:0000000000408963\n.text:0000000000408968\n.text:000000000040896f\n.text:0000000000408972\n.text:0000000000408977\n.text:000000000040897f\n.text:0000000000408984\n.text:0000000000408988\n.text:000000000040898d\n.text:0000000000408993\n.text:0000000000408995\n.text:0000000000408998\n.text:000000000040899c\n.text:00000000004089a3\n.text:00000000004089a6\n.text:00000000004089a9\n.text:00000000004089ae\n.text:00000000004089b3\n.text:00000000004089b6\n.text:00000000004089bb\n.text:00000000004089c0\n.text:00000000004089c5\n.text:00000000004089c8\n.text:00000000004089cb\n.text:00000000004089d0\n.text:00000000004089d2\n.text:00000000004089d4\n.text:00000000004089db\n.text:00000000004089df\n.text:00000000004089e4\n.text:00000000004089e6\n.text:00000000004089e9\n.text:00000000004089ee\n.text:00000000004089f5\n.text:00000000004089f8\n.text:00000000004089fd\n.text:0000000000408a02\n.text:0000000000408a07\n.text:0000000000408a0c\n.text:0000000000408a0f\n.text:0000000000408a14\n.text:0000000000408a1a\n.text:0000000000408a1c\n.text:0000000000408a1e\n.text:0000000000408a20\n.text:0000000000408a25\n.text:0000000000408a29\n.text:0000000000408a2c\n.text:0000000000408a31\n.text:0000000000408a34\n.text:0000000000408a39\n.text:0000000000408a3b\n.text:0000000000408a42\n.text:0000000000408a43\n.text:0000000000408a45\n.text:0000000000408a47\n.text:0000000000408a49\n'
p1385
tp1386
sS'XtOwnSelection'
p1387
(S'\n__stdcall XtOwnSelection()\n'
p1388
V\u000avoid XtOwnSelection(void)\u000a\u000a{\u000a  (*(code *)PTR_XtOwnSelection_0060d150)();\u000a  return;\u000a}\u000a\u000a
p1389
S'JMP qword ptr [0x0060d150]\n'
p1390
S'ff 25 da a8 20 00\n'
p1391
S'.plt:0000000000402870\n'
p1392
tp1393
sS'_DumpTreeToFile'
p1394
(S'\n__stdcall _DumpTreeToFile(Widget w, XtPointer tree_ptr, XtPointer filename)\n'
p1395
V\u000avoid _DumpTreeToFile(Widget w,XtPointer tree_ptr,XtPointer filename)\u000a\u000a{\u000a  FILE *__stream;\u000a  char buf [8192];\u000a  char acStack8216 [8192];\u000a  \u000a  if (tree_ptr == (XtPointer)0x0) {\u000a    SetMessage(global_screen_data.info_label,res_labels[17]);\u000a    return;\u000a  }\u000a  __stream = fopen((char *)filename,"w");\u000a  if (__stream != (FILE *)0x0) {\u000a    PerformTreeToFileDump(*(WNode **)((long)tree_ptr + 8),(FILE *)0x0);\u000a    fclose(__stream);\u000a    return;\u000a  }\u000a  sprintf(acStack8216,res_labels[24],filename);\u000a  SetMessage(global_screen_data.info_label,acStack8216);\u000a  return;\u000a}\u000a\u000a
p1396
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x2000\nMOV R14,RDX\nMOV RBX,RSI\nTEST RBX,RBX\nJZ 0x0040643e\nMOV ESI,0x40953a\nMOV RDI,R14\nCALL 0x00402b90\nMOV R15,RAX\nTEST R15,R15\nJZ 0x0040645d\nMOV RDI,qword ptr [RBX + 0x8]\nXOR ESI,ESI\nMOV RDX,R15\nCALL 0x004092e0\nMOV RDI,R15\nADD RSP,0x2000\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x004027b0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e088]\nADD RSP,0x2000\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00406120\nMOV RSI,qword ptr [0x0060e0c0]\nMOV RBX,RSP\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00402bf0\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,RBX\nCALL 0x00406120\nADD RSP,0x2000\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1397
S'41 57\n41 56\n53\n48 81 ec 00 20 00 00\n49 89 d6\n48 89 f3\n48 85 db\n74 37\nbe 3a 95 40 00\n4c 89 f7\ne8 7c c7 ff ff\n49 89 c7\n4d 85 ff\n74 41\n48 8b 7b 08\n31 f6\n4c 89 fa\ne8 b6 2e 00 00\n4c 89 ff\n48 81 c4 00 20 00 00\n5b\n41 5e\n41 5f\ne9 72 c3 ff ff\n48 8b 3d b3 7b 20 00\n48 8b 35 3c 7c 20 00\n48 81 c4 00 20 00 00\n5b\n41 5e\n41 5f\ne9 c3 fc ff ff\n48 8b 35 5c 7c 20 00\n48 89 e3\n31 c0\n48 89 df\n4c 89 f2\ne8 7c c7 ff ff\n48 8b 3d 7d 7b 20 00\n48 89 de\ne8 9d fc ff ff\n48 81 c4 00 20 00 00\n5b\n41 5e\n41 5f\nc3\n'
p1398
S'.text:00000000004063f0\n.text:00000000004063f2\n.text:00000000004063f4\n.text:00000000004063f5\n.text:00000000004063fc\n.text:00000000004063ff\n.text:0000000000406402\n.text:0000000000406405\n.text:0000000000406407\n.text:000000000040640c\n.text:000000000040640f\n.text:0000000000406414\n.text:0000000000406417\n.text:000000000040641a\n.text:000000000040641c\n.text:0000000000406420\n.text:0000000000406422\n.text:0000000000406425\n.text:000000000040642a\n.text:000000000040642d\n.text:0000000000406434\n.text:0000000000406435\n.text:0000000000406437\n.text:0000000000406439\n.text:000000000040643e\n.text:0000000000406445\n.text:000000000040644c\n.text:0000000000406453\n.text:0000000000406454\n.text:0000000000406456\n.text:0000000000406458\n.text:000000000040645d\n.text:0000000000406464\n.text:0000000000406467\n.text:0000000000406469\n.text:000000000040646c\n.text:000000000040646f\n.text:0000000000406474\n.text:000000000040647b\n.text:000000000040647e\n.text:0000000000406483\n.text:000000000040648a\n.text:000000000040648b\n.text:000000000040648d\n.text:000000000040648f\n'
p1399
tp1400
sS'_FlashActiveWidgets'
p1401
(S'\n__stdcall _FlashActiveWidgets(TreeInfo * tree_info)\n'
p1402
V\u000avoid _FlashActiveWidgets(TreeInfo *tree_info)\u000a\u000a{\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  String str;\u000a  \u000a  str = res_labels[17];\u000a  if ((tree_info != (TreeInfo *)0x0) && (str = res_labels[18], tree_info->num_nodes != 0)) {\u000a    _XEditResResetStream(0x60df50);\u000a    _XEditResPut16(0x60df50,(ulong)*(ushort *)&tree_info->num_nodes);\u000a    if (tree_info->num_nodes != 0) {\u000a      uVar2 = 0;\u000a      do {\u000a        InsertWidgetFromNode(&global_client.stream,(WNode *)global_tree_info->active_nodes[uVar2]);\u000a        uVar1 = uVar2 + 1;\u000a        uVar2 = uVar1 & 0xffffffff;\u000a      } while ((uint)uVar1 < tree_info->num_nodes);\u000a    }\u000a    SetCommand(tree_info->tree_widget,&DAT_00000003);\u000a    return;\u000a  }\u000a  SetMessage(global_screen_data.info_label,str);\u000a  return;\u000a}\u000a\u000a
p1403
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nTEST R14,R14\nJZ 0x004045c8\nCMP dword ptr [R14 + 0x18],0x0\nJZ 0x004045d8\nMOV EDI,0x60df50\nCALL 0x00402bb0\nMOVZX ESI,word ptr [R14 + 0x18]\nMOV EDI,0x60df50\nCALL 0x00402c80\nCMP dword ptr [R14 + 0x18],0x0\nJZ 0x004045b2\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [0x0060dec8]\nMOV RAX,qword ptr [RAX + 0x10]\nMOV RSI,qword ptr [RAX + RBX*0x8]\nMOV EDI,0x60df50\nCALL 0x00406e40\nINC RBX\nCMP EBX,dword ptr [R14 + 0x18]\nJC 0x00404590\nMOV RDI,qword ptr [R14]\nMOV ESI,0x3\nXOR EDX,EDX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00403310\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e088]\nJMP 0x004045e6\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e090]\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00406120\n'
p1404
S'41 56\n53\n50\n49 89 fe\n4d 85 f6\n74 6c\n41 83 7e 18 00\n74 75\nbf 50 df 60 00\ne8 43 e6 ff ff\n41 0f b7 76 18\nbf 50 df 60 00\ne8 04 e7 ff ff\n41 83 7e 18 00\n74 2f\n31 db\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 05 31 99 20 00\n48 8b 40 10\n48 8b 34 d8\nbf 50 df 60 00\ne8 97 28 00 00\n48 ff c3\n41 3b 5e 18\n72 de\n49 8b 3e\nbe 03 00 00 00\n31 d2\n48 83 c4 08\n5b\n41 5e\ne9 48 ed ff ff\n48 8b 3d 29 9a 20 00\n48 8b 35 b2 9a 20 00\neb 0e\n48 8b 3d 19 9a 20 00\n48 8b 35 aa 9a 20 00\n48 83 c4 08\n5b\n41 5e\ne9 2e 1b 00 00\n'
p1405
S'.text:0000000000404550\n.text:0000000000404552\n.text:0000000000404553\n.text:0000000000404554\n.text:0000000000404557\n.text:000000000040455a\n.text:000000000040455c\n.text:0000000000404561\n.text:0000000000404563\n.text:0000000000404568\n.text:000000000040456d\n.text:0000000000404572\n.text:0000000000404577\n.text:000000000040457c\n.text:0000000000404581\n.text:0000000000404583\n.text:0000000000404585\n.text:0000000000404590\n.text:0000000000404597\n.text:000000000040459b\n.text:000000000040459f\n.text:00000000004045a4\n.text:00000000004045a9\n.text:00000000004045ac\n.text:00000000004045b0\n.text:00000000004045b2\n.text:00000000004045b5\n.text:00000000004045ba\n.text:00000000004045bc\n.text:00000000004045c0\n.text:00000000004045c1\n.text:00000000004045c3\n.text:00000000004045c8\n.text:00000000004045cf\n.text:00000000004045d6\n.text:00000000004045d8\n.text:00000000004045df\n.text:00000000004045e6\n.text:00000000004045ea\n.text:00000000004045eb\n.text:00000000004045ed\n'
p1406
tp1407
sS'GetNewIdent'
p1408
(S'\n__stdcall GetNewIdent()\n'
p1409
V\u000aResIdent GetNewIdent(void)\u000a\u000a{\u000a  ResIdent ident;\u000a  \u000a  return ident;\u000a}\u000a\u000a
p1410
S'MOV AL,byte ptr [0x0060d4b0]\nMOV ECX,EAX\nINC CL\nMOV byte ptr [0x0060d4b0],CL\nRET\n'
p1411
S'8a 05 9a 9f 20 00\n89 c1\nfe c1\n88 0d 90 9f 20 00\nc3\n'
p1412
S'.text:0000000000403510\n.text:0000000000403516\n.text:0000000000403518\n.text:000000000040351a\n.text:0000000000403520\n'
p1413
tp1414
sS'FreeResources'
p1415
(S'\n__stdcall FreeResources(WidgetResources * resources)\n'
p1416
V\u000avoid FreeResources(WidgetResources *resources)\u000a\u000a{\u000a  long lVar1;\u000a  WidgetResourceInfo *pWVar2;\u000a  long lVar3;\u000a  \u000a  if (0 < resources->num_normal) {\u000a    pWVar2 = resources->normal;\u000a    if (0 < resources->num_normal) {\u000a      lVar1 = 0;\u000a      lVar3 = 0;\u000a      do {\u000a        XtFree(*(undefined8 *)((long)&pWVar2->name + lVar1));\u000a        XtFree(*(undefined8 *)((long)&resources->normal->class + lVar1));\u000a        XtFree(*(undefined8 *)((long)&resources->normal->type + lVar1));\u000a        lVar3 = lVar3 + 1;\u000a        pWVar2 = resources->normal;\u000a        lVar1 = lVar1 + 0x18;\u000a      } while (lVar3 < (long)resources->num_normal);\u000a    }\u000a    XFree();\u000a  }\u000a  if (0 < resources->num_constraint) {\u000a    pWVar2 = resources->constraint;\u000a    if (0 < resources->num_constraint) {\u000a      lVar1 = 0;\u000a      lVar3 = 0;\u000a      do {\u000a        XtFree(*(undefined8 *)((long)&pWVar2->name + lVar1));\u000a        XtFree(*(undefined8 *)((long)&resources->constraint->class + lVar1));\u000a        XtFree(*(undefined8 *)((long)&resources->constraint->type + lVar1));\u000a        lVar3 = lVar3 + 1;\u000a        pWVar2 = resources->constraint;\u000a        lVar1 = lVar1 + 0x18;\u000a      } while (lVar3 < (long)resources->num_constraint);\u000a    }\u000a    XFree();\u000a  }\u000a  XFree(resources);\u000a  return;\u000a}\u000a\u000a
p1417
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCMP dword ptr [R14],0x0\nJLE 0x00406a4d\nMOV RDI,qword ptr [R14 + 0x8]\nCMP dword ptr [R14],0x0\nJLE 0x00406a48\nXOR EBX,EBX\nXOR R15D,R15D\nNOP dword ptr [RAX]\nMOV RDI,qword ptr [RDI + RBX*0x1]\nCALL 0x00402a90\nMOV RAX,qword ptr [R14 + 0x8]\nMOV RDI,qword ptr [RAX + RBX*0x1 + 0x8]\nCALL 0x00402a90\nMOV RAX,qword ptr [R14 + 0x8]\nMOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]\nCALL 0x00402a90\nINC R15\nMOVSXD RAX,dword ptr [R14]\nMOV RDI,qword ptr [R14 + 0x8]\nADD RBX,0x18\nCMP R15,RAX\nJL 0x00406a10\nCALL 0x00402860\nCMP dword ptr [R14 + 0x4],0x0\nJLE 0x00406aae\nMOV RDI,qword ptr [R14 + 0x10]\nCMP dword ptr [R14 + 0x4],0x0\nJLE 0x00406aa9\nXOR EBX,EBX\nXOR R15D,R15D\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RDI + RBX*0x1]\nCALL 0x00402a90\nMOV RAX,qword ptr [R14 + 0x10]\nMOV RDI,qword ptr [RAX + RBX*0x1 + 0x8]\nCALL 0x00402a90\nMOV RAX,qword ptr [R14 + 0x10]\nMOV RDI,qword ptr [RAX + RBX*0x1 + 0x10]\nCALL 0x00402a90\nINC R15\nMOVSXD RAX,dword ptr [R14 + 0x4]\nMOV RDI,qword ptr [R14 + 0x10]\nADD RBX,0x18\nCMP R15,RAX\nJL 0x00406a70\nCALL 0x00402860\nMOV RDI,R14\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00402860\n'
p1418
S'41 57\n41 56\n53\n49 89 fe\n41 83 3e 00\n7e 4f\n49 8b 7e 08\n41 83 3e 00\n7e 40\n31 db\n45 31 ff\n0f 1f 00\n48 8b 3c 1f\ne8 77 c0 ff ff\n49 8b 46 08\n48 8b 7c 18 08\ne8 69 c0 ff ff\n49 8b 46 08\n48 8b 7c 18 10\ne8 5b c0 ff ff\n49 ff c7\n49 63 06\n49 8b 7e 08\n48 83 c3 18\n49 39 c7\n7c c8\ne8 13 be ff ff\n41 83 7e 04 00\n7e 5a\n49 8b 7e 10\n41 83 7e 04 00\n7e 4a\n31 db\n45 31 ff\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 3c 1f\ne8 17 c0 ff ff\n49 8b 46 10\n48 8b 7c 18 08\ne8 09 c0 ff ff\n49 8b 46 10\n48 8b 7c 18 10\ne8 fb bf ff ff\n49 ff c7\n49 63 46 04\n49 8b 7e 10\n48 83 c3 18\n49 39 c7\n7c c7\ne8 b2 bd ff ff\n4c 89 f7\n5b\n41 5e\n41 5f\ne9 a5 bd ff ff\n'
p1419
S'.text:00000000004069f0\n.text:00000000004069f2\n.text:00000000004069f4\n.text:00000000004069f5\n.text:00000000004069f8\n.text:00000000004069fc\n.text:00000000004069fe\n.text:0000000000406a02\n.text:0000000000406a06\n.text:0000000000406a08\n.text:0000000000406a0a\n.text:0000000000406a0d\n.text:0000000000406a10\n.text:0000000000406a14\n.text:0000000000406a19\n.text:0000000000406a1d\n.text:0000000000406a22\n.text:0000000000406a27\n.text:0000000000406a2b\n.text:0000000000406a30\n.text:0000000000406a35\n.text:0000000000406a38\n.text:0000000000406a3b\n.text:0000000000406a3f\n.text:0000000000406a43\n.text:0000000000406a46\n.text:0000000000406a48\n.text:0000000000406a4d\n.text:0000000000406a52\n.text:0000000000406a54\n.text:0000000000406a58\n.text:0000000000406a5d\n.text:0000000000406a5f\n.text:0000000000406a61\n.text:0000000000406a64\n.text:0000000000406a70\n.text:0000000000406a74\n.text:0000000000406a79\n.text:0000000000406a7d\n.text:0000000000406a82\n.text:0000000000406a87\n.text:0000000000406a8b\n.text:0000000000406a90\n.text:0000000000406a95\n.text:0000000000406a98\n.text:0000000000406a9c\n.text:0000000000406aa0\n.text:0000000000406aa4\n.text:0000000000406aa7\n.text:0000000000406aa9\n.text:0000000000406aae\n.text:0000000000406ab1\n.text:0000000000406ab2\n.text:0000000000406ab4\n.text:0000000000406ab6\n'
p1420
tp1421
sS'SetMessage'
p1422
(S'\n__stdcall SetMessage(Widget w, char * str)\n'
p1423
V\u000avoid SetMessage(Widget w,char *str)\u000a\u000a{\u000a  Arg args [1];\u000a  undefined8 local_18;\u000a  char *local_10;\u000a  \u000a  local_18 = 0x60c52d;\u000a  local_10 = str;\u000a  XtSetValues(w,&local_18,1);\u000a  return;\u000a}\u000a\u000a
p1424
S'SUB RSP,0x18\nMOV qword ptr [RSP],0x60c52d\nMOV qword ptr [RSP + 0x8],RSI\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nADD RSP,0x18\nRET\n'
p1425
S'48 83 ec 18\n48 c7 04 24 2d c5 60 00\n48 89 74 24 08\n48 89 e6\nba 01 00 00 00\ne8 52 c6 ff ff\n48 83 c4 18\nc3\n'
p1426
S'.text:0000000000406120\n.text:0000000000406124\n.text:000000000040612c\n.text:0000000000406131\n.text:0000000000406134\n.text:0000000000406139\n.text:000000000040613e\n.text:0000000000406142\n'
p1427
tp1428
sS'CreateFlashWidget'
p1429
(S'\n__stdcall CreateFlashWidget(TreeInfo * tree_info)\n'
p1430
V\u000avoid CreateFlashWidget(TreeInfo *tree_info)\u000a\u000a{\u000a  uint uVar1;\u000a  Widget p_Var2;\u000a  Widget *pp_Var3;\u000a  int in_ECX;\u000a  int in_EDX;\u000a  int in_ESI;\u000a  int in_R8D;\u000a  Arg args [3];\u000a  ushort local_5a;\u000a  undefined8 local_58;\u000a  ushort *local_50;\u000a  undefined8 local_48;\u000a  ulong local_40;\u000a  undefined8 local_38;\u000a  Pixel local_30;\u000a  \u000a  local_58 = 0x60c6f5;\u000a  local_50 = (ushort *)(long)in_ESI;\u000a  local_48 = 0x60c6f7;\u000a  local_40 = SEXT48(in_EDX);\u000a  local_38 = 0x60c3b4;\u000a  local_30 = global_resources.flash_color;\u000a  p_Var2 = (Widget)XtCreatePopupShell("flash",overrideShellWidgetClass,tree_info->tree_widget,\u000a                                      &local_58,3);\u000a  local_58 = 0x60c3fc;\u000a  local_50 = &local_5a;\u000a  XtGetValues(p_Var2,&local_58,1);\u000a  local_5a = local_5a * 2;\u000a  local_58 = 0x60c6e8;\u000a  local_50 = (ushort *)(ulong)(in_ECX - (uint)local_5a);\u000a  local_48 = 0x60c46a;\u000a  local_40 = (ulong)(in_R8D - (uint)local_5a);\u000a  XtSetValues(p_Var2,&local_58,2);\u000a  uVar1 = tree_info->alloc_flash_widgets;\u000a  if (uVar1 < tree_info->num_flash_widgets + 1) {\u000a    tree_info->alloc_flash_widgets = uVar1 + 5;\u000a    pp_Var3 = (Widget *)XtRealloc(tree_info->flash_widgets,(ulong)(uVar1 * 8 + 0x28));\u000a    tree_info->flash_widgets = pp_Var3;\u000a  }\u000a  tree_info->flash_widgets[(ulong)tree_info->num_flash_widgets] = p_Var2;\u000a  tree_info->num_flash_widgets = tree_info->num_flash_widgets + 1;\u000a  return;\u000a}\u000a\u000a
p1431
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x40\nMOV R15D,R8D\nMOV R12D,ECX\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x10],0x60c6f5\nMOVSXD RAX,ESI\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],0x60c6f7\nMOVSXD RAX,EDX\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c3b4\nMOV RAX,qword ptr [0x0060dfa0]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RSI,qword ptr [0x0060dcf0]\nMOV RDX,qword ptr [RBX]\nLEA R13,[RSP + 0x10]\nMOV EDI,0x409a29\nMOV R8D,0x3\nMOV RCX,R13\nCALL 0x00402730\nMOV R14,RAX\nMOV qword ptr [RSP + 0x10],0x60c3fc\nLEA RAX,[RSP + 0xe]\nMOV qword ptr [RSP + 0x18],RAX\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,R13\nCALL 0x004027d0\nMOVZX EAX,word ptr [RSP + 0xe]\nADD EAX,EAX\nMOV word ptr [RSP + 0xe],AX\nMOV qword ptr [RSP + 0x10],0x60c6e8\nMOVZX EAX,AX\nSUB R12D,EAX\nMOV qword ptr [RSP + 0x18],R12\nMOV qword ptr [RSP + 0x20],0x60c46a\nMOVZX EAX,word ptr [RSP + 0xe]\nSUB R15D,EAX\nMOV qword ptr [RSP + 0x28],R15\nMOV EDX,0x2\nMOV RDI,R14\nMOV RSI,R13\nCALL 0x00402790\nMOV ECX,dword ptr [RBX + 0x28]\nMOV EAX,dword ptr [RBX + 0x2c]\nINC ECX\nCMP ECX,EAX\nJBE 0x00404a71\nLEA ECX,[RAX + 0x5]\nMOV dword ptr [RBX + 0x2c],ECX\nMOV RDI,qword ptr [RBX + 0x20]\nLEA ESI,[0x28 + RAX*0x8]\nCALL 0x004028f0\nMOV qword ptr [RBX + 0x20],RAX\nMOV RAX,qword ptr [RBX + 0x20]\nMOV ECX,dword ptr [RBX + 0x28]\nMOV qword ptr [RAX + RCX*0x8],R14\nINC dword ptr [RBX + 0x28]\nADD RSP,0x40\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p1432
S'41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 40\n45 89 c7\n41 89 cc\n48 89 fb\n48 c7 44 24 10 f5 c6 60 00\n48 63 c6\n48 89 44 24 18\n48 c7 44 24 20 f7 c6 60 00\n48 63 c2\n48 89 44 24 28\n48 c7 44 24 30 b4 c3 60 00\n48 8b 05 e8 95 20 00\n48 89 44 24 38\n48 8b 35 2c 93 20 00\n48 8b 13\n4c 8d 6c 24 10\nbf 29 9a 40 00\n41 b8 03 00 00 00\n4c 89 e9\ne8 51 dd ff ff\n49 89 c6\n48 c7 44 24 10 fc c3 60 00\n48 8d 44 24 0e\n48 89 44 24 18\nba 01 00 00 00\n4c 89 f7\n4c 89 ee\ne8 cb dd ff ff\n0f b7 44 24 0e\n01 c0\n66 89 44 24 0e\n48 c7 44 24 10 e8 c6 60 00\n0f b7 c0\n41 29 c4\n4c 89 64 24 18\n48 c7 44 24 20 6a c4 60 00\n0f b7 44 24 0e\n41 29 c7\n4c 89 7c 24 28\nba 02 00 00 00\n4c 89 f7\n4c 89 ee\ne8 45 dd ff ff\n8b 4b 28\n8b 43 2c\nff c1\n39 c1\n76 1a\n8d 48 05\n89 4b 2c\n48 8b 7b 20\n8d 34 c5 28 00 00 00\ne8 83 de ff ff\n48 89 43 20\n48 8b 43 20\n8b 4b 28\n4c 89 34 c8\nff 43 28\n48 83 c4 40\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p1433
S'.text:0000000000404970\n.text:0000000000404972\n.text:0000000000404974\n.text:0000000000404976\n.text:0000000000404978\n.text:0000000000404979\n.text:000000000040497d\n.text:0000000000404980\n.text:0000000000404983\n.text:0000000000404986\n.text:000000000040498f\n.text:0000000000404992\n.text:0000000000404997\n.text:00000000004049a0\n.text:00000000004049a3\n.text:00000000004049a8\n.text:00000000004049b1\n.text:00000000004049b8\n.text:00000000004049bd\n.text:00000000004049c4\n.text:00000000004049c7\n.text:00000000004049cc\n.text:00000000004049d1\n.text:00000000004049d7\n.text:00000000004049da\n.text:00000000004049df\n.text:00000000004049e2\n.text:00000000004049eb\n.text:00000000004049f0\n.text:00000000004049f5\n.text:00000000004049fa\n.text:00000000004049fd\n.text:0000000000404a00\n.text:0000000000404a05\n.text:0000000000404a0a\n.text:0000000000404a0c\n.text:0000000000404a11\n.text:0000000000404a1a\n.text:0000000000404a1d\n.text:0000000000404a20\n.text:0000000000404a25\n.text:0000000000404a2e\n.text:0000000000404a33\n.text:0000000000404a36\n.text:0000000000404a3b\n.text:0000000000404a40\n.text:0000000000404a43\n.text:0000000000404a46\n.text:0000000000404a4b\n.text:0000000000404a4e\n.text:0000000000404a51\n.text:0000000000404a53\n.text:0000000000404a55\n.text:0000000000404a57\n.text:0000000000404a5a\n.text:0000000000404a5d\n.text:0000000000404a61\n.text:0000000000404a68\n.text:0000000000404a6d\n.text:0000000000404a71\n.text:0000000000404a75\n.text:0000000000404a78\n.text:0000000000404a7c\n.text:0000000000404a7f\n.text:0000000000404a83\n.text:0000000000404a84\n.text:0000000000404a86\n.text:0000000000404a88\n.text:0000000000404a8a\n.text:0000000000404a8c\n'
p1434
tp1435
sS'strcmp'
p1436
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1437
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_0060d1b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p1438
S'JMP qword ptr [0x0060d1b8]\n'
p1439
S'ff 25 72 a8 20 00\n'
p1440
S'.plt:0000000000402940\n'
p1441
tp1442
sS'XMapWindow'
p1443
(S'\n__stdcall XMapWindow()\n'
p1444
V\u000avoid XMapWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XMapWindow_0060d300)();\u000a  return;\u000a}\u000a\u000a
p1445
S'JMP qword ptr [0x0060d300]\n'
p1446
S'ff 25 2a a7 20 00\n'
p1447
S'.plt:0000000000402bd0\n'
p1448
tp1449
sS'XSaveContext'
p1450
(S'\n__stdcall XSaveContext()\n'
p1451
V\u000avoid XSaveContext(void)\u000a\u000a{\u000a  (*(code *)PTR_XSaveContext_0060d0f8)();\u000a  return;\u000a}\u000a\u000a
p1452
S'JMP qword ptr [0x0060d0f8]\n'
p1453
S'ff 25 32 a9 20 00\n'
p1454
S'.plt:00000000004027c0\n'
p1455
tp1456
sS'GetClientWindow'
p1457
(S'\n__stdcall GetClientWindow(Widget w, int * x, int * y)\n'
p1458
V\u000aWindow GetClientWindow(Widget w,int *x,int *y)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  long lVar3;\u000a  undefined8 uVar4;\u000a  undefined8 uVar5;\u000a  Window WVar6;\u000a  int iVar7;\u000a  bool bVar8;\u000a  undefined8 uVar9;\u000a  long local_108;\u000a  int local_f0 [8];\u000a  long local_d0;\u000a  long local_c0;\u000a  int local_a8;\u000a  int local_a4;\u000a  \u000a  uVar2 = XtDisplayOfObject();\u000a  lVar3 = XtScreenOfObject(w);\u000a  lVar3 = *(long *)(lVar3 + 0x10);\u000a  uVar4 = XtWidgetToApplicationContext(w);\u000a  uVar9 = 0x4031d6;\u000a  uVar5 = XCreateFontCursor(uVar2,0x22);\u000a  iVar7 = 0;\u000a  iVar1 = XGrabPointer(uVar2,lVar3,0,0xc,0,1,lVar3,uVar5,0,uVar9);\u000a  if (iVar1 == 0) {\u000a    bVar8 = true;\u000a    local_108 = 0;\u000a    do {\u000a      while( true ) {\u000a        XAllowEvents(uVar2,1,0);\u000a        XtAppNextEvent(uVar4,local_f0);\u000a        if (local_f0[0] == 5) break;\u000a        if ((local_f0[0] == 4) && (local_d0 == lVar3)) {\u000a          if (bVar8) {\u000a            local_108 = local_c0;\u000a            if (x != (int *)0x0) {\u000a              *x = local_a8;\u000a            }\u000a            if (y != (int *)0x0) {\u000a              *y = local_a4;\u000a            }\u000a          }\u000a          iVar7 = iVar7 + 1;\u000a          bVar8 = local_108 == 0;\u000a          if ((!bVar8) && (iVar7 == 0)) goto LAB_004032e4;\u000a        }\u000a        else {\u000aLAB_00403240:\u000a          XtDispatchEvent(local_f0);\u000a        }\u000a      }\u000a      if (local_d0 != lVar3) goto LAB_00403240;\u000a      iVar7 = iVar7 - (uint)(0 < iVar7);\u000a    } while ((bool)(iVar7 != 0 | bVar8));\u000aLAB_004032e4:\u000a    XUngrabPointer(uVar2,0);\u000a    WVar6 = XmuClientWindow(uVar2,local_108);\u000a  }\u000a  else {\u000a    SetMessage(global_screen_data.info_label,res_labels[5]);\u000a    WVar6 = 0;\u000a  }\u000a  return WVar6;\u000a}\u000a\u000a
p1459
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV R14,RDX\nMOV RBP,RSI\nMOV RBX,RDI\nCALL 0x00402610\nMOV R13,RAX\nMOV RDI,RBX\nCALL 0x00402ae0\nMOV R12,qword ptr [RAX + 0x10]\nMOV RDI,RBX\nCALL 0x004028a0\nMOV RBX,RAX\nMOV ESI,0x22\nMOV RDI,R13\nCALL 0x00402700\nSUB RSP,0x8\nXOR R15D,R15D\nMOV EDX,0x0\nMOV ECX,0xc\nMOV R8D,0x0\nMOV R9D,0x1\nMOV RDI,R13\nMOV RSI,R12\nPUSH 0x0\nPUSH RAX\nPUSH R12\nCALL 0x004028b0\nADD RSP,0x20\nTEST EAX,EAX\nJZ 0x00403225\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e028]\nCALL 0x00406120\nXOR EAX,EAX\nJMP 0x004032fa\nMOV qword ptr [RSP + 0x8],RBP\nMOV qword ptr [RSP + 0x10],R14\nMOV BPL,0x1\nLEA R14,[RSP + 0x18]\nXOR EAX,EAX\nMOV qword ptr [RSP],RAX\nJMP 0x00403248\nMOV RDI,R14\nCALL 0x00402c50\nMOV ESI,0x1\nXOR EDX,EDX\nMOV RDI,R13\nCALL 0x004026d0\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x004028e0\nMOV EAX,dword ptr [RSP + 0x18]\nCMP EAX,0x5\nJZ 0x004032c0\nCMP EAX,0x4\nJNZ 0x00403240\nCMP qword ptr [RSP + 0x38],R12\nJNZ 0x00403240\nTEST BPL,0x1\nJZ 0x004032a6\nMOV RCX,qword ptr [RSP + 0x8]\nTEST RCX,RCX\nMOV RAX,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP],RAX\nJZ 0x00403296\nMOV EAX,dword ptr [RSP + 0x60]\nMOV dword ptr [RCX],EAX\nMOV RCX,qword ptr [RSP + 0x10]\nTEST RCX,RCX\nJZ 0x004032a6\nMOV EAX,dword ptr [RSP + 0x64]\nMOV dword ptr [RCX],EAX\nINC R15D\nCMP qword ptr [RSP],0x0\nSETZ BPL\nJZ 0x00403248\nTEST R15D,R15D\nJNZ 0x00403248\nJMP 0x004032e4\nCMP qword ptr [RSP + 0x38],R12\nJNZ 0x00403240\nXOR EAX,EAX\nTEST R15D,R15D\nSETG AL\nSUB R15D,EAX\nSETNZ AL\nOR AL,BPL\nTEST AL,0x1\nJNZ 0x00403248\nXOR ESI,ESI\nMOV RDI,R13\nCALL 0x00402a00\nMOV RDI,R13\nMOV RSI,qword ptr [RSP]\nCALL 0x00402600\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1460
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n49 89 d6\n48 89 f5\n48 89 fb\ne8 61 f4 ff ff\n49 89 c5\n48 89 df\ne8 26 f9 ff ff\n4c 8b 60 10\n48 89 df\ne8 da f6 ff ff\n48 89 c3\nbe 22 00 00 00\n4c 89 ef\ne8 2a f5 ff ff\n48 83 ec 08\n45 31 ff\nba 00 00 00 00\nb9 0c 00 00 00\n41 b8 00 00 00 00\n41 b9 01 00 00 00\n4c 89 ef\n4c 89 e6\n6a 00\n50\n41 54\ne8 ad f6 ff ff\n48 83 c4 20\n85 c0\n74 1a\n48 8b 3d e6 ad 20 00\n48 8b 35 0f ae 20 00\ne8 02 2f 00 00\n31 c0\ne9 d5 00 00 00\n48 89 6c 24 08\n4c 89 74 24 10\n40 b5 01\n4c 8d 74 24 18\n31 c0\n48 89 04 24\neb 09\n4c 89 f7\ne8 08 fa ff ff\nbe 01 00 00 00\n31 d2\n4c 89 ef\ne8 79 f4 ff ff\n48 89 df\n4c 89 f6\ne8 7e f6 ff ff\n8b 44 24 18\n83 f8 05\n74 55\n83 f8 04\n75 d0\n4c 39 64 24 38\n75 c9\n40 f6 c5 01\n74 29\n48 8b 4c 24 08\n48 85 c9\n48 8b 44 24 48\n48 89 04 24\n74 06\n8b 44 24 60\n89 01\n48 8b 4c 24 10\n48 85 c9\n74 06\n8b 44 24 64\n89 01\n41 ff c7\n48 83 3c 24 00\n40 0f 94 c5\n74 94\n45 85 ff\n75 8f\neb 29\n4c 39 64 24 38\n0f 85 75 ff ff ff\n31 c0\n45 85 ff\n0f 9f c0\n41 29 c7\n0f 95 c0\n40 08 e8\na8 01\n0f 85 64 ff ff ff\n31 f6\n4c 89 ef\ne8 12 f7 ff ff\n4c 89 ef\n48 8b 34 24\ne8 06 f3 ff ff\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1461
S'.text:0000000000403190\n.text:0000000000403191\n.text:0000000000403193\n.text:0000000000403195\n.text:0000000000403197\n.text:0000000000403199\n.text:000000000040319a\n.text:00000000004031a1\n.text:00000000004031a4\n.text:00000000004031a7\n.text:00000000004031aa\n.text:00000000004031af\n.text:00000000004031b2\n.text:00000000004031b5\n.text:00000000004031ba\n.text:00000000004031be\n.text:00000000004031c1\n.text:00000000004031c6\n.text:00000000004031c9\n.text:00000000004031ce\n.text:00000000004031d1\n.text:00000000004031d6\n.text:00000000004031da\n.text:00000000004031dd\n.text:00000000004031e2\n.text:00000000004031e7\n.text:00000000004031ed\n.text:00000000004031f3\n.text:00000000004031f6\n.text:00000000004031f9\n.text:00000000004031fb\n.text:00000000004031fc\n.text:00000000004031fe\n.text:0000000000403203\n.text:0000000000403207\n.text:0000000000403209\n.text:000000000040320b\n.text:0000000000403212\n.text:0000000000403219\n.text:000000000040321e\n.text:0000000000403220\n.text:0000000000403225\n.text:000000000040322a\n.text:000000000040322f\n.text:0000000000403232\n.text:0000000000403237\n.text:0000000000403239\n.text:000000000040323d\n.text:0000000000403240\n.text:0000000000403243\n.text:0000000000403248\n.text:000000000040324d\n.text:000000000040324f\n.text:0000000000403252\n.text:0000000000403257\n.text:000000000040325a\n.text:000000000040325d\n.text:0000000000403262\n.text:0000000000403266\n.text:0000000000403269\n.text:000000000040326b\n.text:000000000040326e\n.text:0000000000403270\n.text:0000000000403275\n.text:0000000000403277\n.text:000000000040327b\n.text:000000000040327d\n.text:0000000000403282\n.text:0000000000403285\n.text:000000000040328a\n.text:000000000040328e\n.text:0000000000403290\n.text:0000000000403294\n.text:0000000000403296\n.text:000000000040329b\n.text:000000000040329e\n.text:00000000004032a0\n.text:00000000004032a4\n.text:00000000004032a6\n.text:00000000004032a9\n.text:00000000004032ae\n.text:00000000004032b2\n.text:00000000004032b4\n.text:00000000004032b7\n.text:00000000004032b9\n.text:00000000004032c0\n.text:00000000004032c5\n.text:00000000004032cb\n.text:00000000004032cd\n.text:00000000004032d0\n.text:00000000004032d3\n.text:00000000004032d6\n.text:00000000004032d9\n.text:00000000004032dc\n.text:00000000004032de\n.text:00000000004032e4\n.text:00000000004032e6\n.text:00000000004032e9\n.text:00000000004032ee\n.text:00000000004032f1\n.text:00000000004032f5\n.text:00000000004032fa\n.text:0000000000403301\n.text:0000000000403302\n.text:0000000000403304\n.text:0000000000403306\n.text:0000000000403308\n.text:000000000040330a\n.text:000000000040330b\n'
p1462
tp1463
sS'CreateSetValuesCommand'
p1464
(S'\n__stdcall CreateSetValuesCommand(WNode * node, XtPointer info_ptr)\n'
p1465
V\u000avoid CreateSetValuesCommand(WNode *node,XtPointer info_ptr)\u000a\u000a{\u000a  Boolean BVar1;\u000a  XrmQuarkList names;\u000a  XrmQuarkList classes;\u000a  char **local_30;\u000a  char **local_28;\u000a  \u000a  GetNamesAndClasses(node,&local_28,&local_30);\u000a  names = Quarkify(local_28,*(char **)info_ptr);\u000a  classes = Quarkify(local_30,*(char **)((long)info_ptr + 8));\u000a  BVar1 = CheckDatabase(*(XrmDatabase *)((long)info_ptr + 0x20),names,classes);\u000a  if (BVar1 != 0) {\u000a    InsertWidgetFromNode(*(ProtocolStream **)((long)info_ptr + 0x18),node);\u000a    *(short *)((long)info_ptr + 0x10) = *(short *)((long)info_ptr + 0x10) + 1;\u000a  }\u000a  XtFree(local_28);\u000a  XtFree(local_30);\u000a  XtFree(names);\u000a  XtFree(classes);\u000a  return;\u000a}\u000a\u000a
p1466
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RSI\nMOV R15,RDI\nLEA RSI,[RSP + 0x10]\nLEA RDX,[RSP + 0x8]\nCALL 0x00406830\nMOV RDI,qword ptr [RSP + 0x10]\nMOV RSI,qword ptr [RBX]\nCALL 0x00406d30\nMOV R14,RAX\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [RBX + 0x8]\nCALL 0x00406d30\nMOV R12,RAX\nMOV RDI,qword ptr [RBX + 0x20]\nMOV RSI,R14\nMOV RDX,R12\nCALL 0x00406d10\nTEST AL,AL\nJZ 0x00405844\nMOV RDI,qword ptr [RBX + 0x18]\nMOV RSI,R15\nCALL 0x00406e40\nINC word ptr [RBX + 0x10]\nMOV RDI,qword ptr [RSP + 0x10]\nCALL 0x00402a90\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402a90\nMOV RDI,R14\nCALL 0x00402a90\nMOV RDI,R12\nCALL 0x00402a90\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p1467
S'41 57\n41 56\n41 54\n53\n48 83 ec 18\n48 89 f3\n49 89 ff\n48 8d 74 24 10\n48 8d 54 24 08\ne8 30 10 00 00\n48 8b 7c 24 10\n48 8b 33\ne8 23 15 00 00\n49 89 c6\n48 8b 7c 24 08\n48 8b 73 08\ne8 12 15 00 00\n49 89 c4\n48 8b 7b 20\n4c 89 f6\n4c 89 e2\ne8 e0 14 00 00\n84 c0\n74 10\n48 8b 7b 18\n4c 89 fe\ne8 00 16 00 00\n66 ff 43 10\n48 8b 7c 24 10\ne8 42 d2 ff ff\n48 8b 7c 24 08\ne8 38 d2 ff ff\n4c 89 f7\ne8 30 d2 ff ff\n4c 89 e7\ne8 28 d2 ff ff\n48 83 c4 18\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p1468
S'.text:00000000004057e0\n.text:00000000004057e2\n.text:00000000004057e4\n.text:00000000004057e6\n.text:00000000004057e7\n.text:00000000004057eb\n.text:00000000004057ee\n.text:00000000004057f1\n.text:00000000004057f6\n.text:00000000004057fb\n.text:0000000000405800\n.text:0000000000405805\n.text:0000000000405808\n.text:000000000040580d\n.text:0000000000405810\n.text:0000000000405815\n.text:0000000000405819\n.text:000000000040581e\n.text:0000000000405821\n.text:0000000000405825\n.text:0000000000405828\n.text:000000000040582b\n.text:0000000000405830\n.text:0000000000405832\n.text:0000000000405834\n.text:0000000000405838\n.text:000000000040583b\n.text:0000000000405840\n.text:0000000000405844\n.text:0000000000405849\n.text:000000000040584e\n.text:0000000000405853\n.text:0000000000405858\n.text:000000000040585b\n.text:0000000000405860\n.text:0000000000405863\n.text:0000000000405868\n.text:000000000040586c\n.text:000000000040586d\n.text:000000000040586f\n.text:0000000000405871\n.text:0000000000405873\n'
p1469
tp1470
sS'RemoveNodeFromActiveList'
p1471
(S'\n__stdcall RemoveNodeFromActiveList(WNode * node)\n'
p1472
V\u000avoid RemoveNodeFromActiveList(WNode *node)\u000a\u000a{\u000a  _TreeInfo *p_Var1;\u000a  WNode *pWVar2;\u000a  bool bVar3;\u000a  bool bVar4;\u000a  Boolean BVar5;\u000a  ulong uVar6;\u000a  Cardinal CVar7;\u000a  \u000a  p_Var1 = node->tree_info;\u000a  BVar5 = IsActiveNode(node);\u000a  if (BVar5 != 0) {\u000a    if (p_Var1->num_nodes == 0) {\u000a      CVar7 = 0xffffffff;\u000a    }\u000a    else {\u000a      uVar6 = 0;\u000a      bVar3 = false;\u000a      do {\u000a        pWVar2 = (WNode *)p_Var1->active_nodes[uVar6];\u000a        if (bVar3) {\u000a          *(WNode **)(p_Var1->active_nodes + (uVar6 - 1)) = pWVar2;\u000a          bVar4 = bVar3;\u000a        }\u000a        else {\u000a          bVar4 = true;\u000a          if (pWVar2 != node) {\u000a            bVar4 = bVar3;\u000a          }\u000a        }\u000a        bVar3 = bVar4;\u000a        uVar6 = uVar6 + 1;\u000a      } while (uVar6 < (ulong)p_Var1->num_nodes);\u000a      CVar7 = p_Var1->num_nodes - 1;\u000a    }\u000a    p_Var1->num_nodes = CVar7;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1473
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RBX,qword ptr [R14 + 0x30]\nCALL 0x00409370\nTEST AL,AL\nJZ 0x00408b12\nCMP dword ptr [RBX + 0x18],0x0\nJZ 0x00408b0a\nXOR EAX,EAX\nXOR ECX,ECX\nNOP\nTEST CL,CL\nMOV RSI,qword ptr [RBX + 0x10]\nMOV RDX,qword ptr [RSI + RAX*0x8]\nJZ 0x00408af0\nMOV qword ptr [RSI + RAX*0x8 + -0x8],RDX\nJMP 0x00408afb\nCMP RDX,R14\nMOV DL,0x1\nJZ 0x00408af9\nMOV EDX,ECX\nMOV CL,DL\nINC RAX\nMOV EDX,dword ptr [RBX + 0x18]\nCMP RAX,RDX\nJC 0x00408ad0\nDEC EDX\nJMP 0x00408b0f\nMOV EDX,0xffffffff\nMOV dword ptr [RBX + 0x18],EDX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1474
S'41 56\n53\n50\n49 89 fe\n49 8b 5e 30\ne8 b0 08 00 00\n84 c0\n74 4e\n83 7b 18 00\n74 40\n31 c0\n31 c9\n66 90\n84 c9\n48 8b 73 10\n48 8b 14 c6\n74 14\n48 89 54 c6 f8\neb 18\n4c 39 f2\nb2 01\n74 02\n89 ca\n88 d1\n48 ff c0\n8b 53 18\n48 39 d0\n72 ca\nff ca\neb 05\nba ff ff ff ff\n89 53 18\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1475
S'.text:0000000000408ab0\n.text:0000000000408ab2\n.text:0000000000408ab3\n.text:0000000000408ab4\n.text:0000000000408ab7\n.text:0000000000408abb\n.text:0000000000408ac0\n.text:0000000000408ac2\n.text:0000000000408ac4\n.text:0000000000408ac8\n.text:0000000000408aca\n.text:0000000000408acc\n.text:0000000000408ace\n.text:0000000000408ad0\n.text:0000000000408ad2\n.text:0000000000408ad6\n.text:0000000000408ada\n.text:0000000000408adc\n.text:0000000000408ae1\n.text:0000000000408af0\n.text:0000000000408af3\n.text:0000000000408af5\n.text:0000000000408af7\n.text:0000000000408af9\n.text:0000000000408afb\n.text:0000000000408afe\n.text:0000000000408b01\n.text:0000000000408b04\n.text:0000000000408b06\n.text:0000000000408b08\n.text:0000000000408b0a\n.text:0000000000408b0f\n.text:0000000000408b12\n.text:0000000000408b16\n.text:0000000000408b17\n.text:0000000000408b19\n'
p1476
tp1477
sS'PrintSetValuesError'
p1478
(S'\n__stdcall PrintSetValuesError(Event * event)\n'
p1479
V\u000achar * PrintSetValuesError(Event *event)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  WNode *pWVar4;\u000a  long lVar5;\u000a  long lVar6;\u000a  char buf [8192];\u000a  undefined4 *local_2030;\u000a  undefined4 local_2028;\u000a  undefined4 uStack8228;\u000a  undefined4 uStack8224;\u000a  undefined4 uStack8220;\u000a  undefined4 local_2018;\u000a  undefined4 uStack8212;\u000a  undefined4 uStack8208;\u000a  undefined4 uStack8204;\u000a  char cStack8200;\u000a  undefined4 uStack8199;\u000a  undefined4 uStack8195;\u000a  undefined4 uStack8191;\u000a  \u000a  local_2030 = (undefined4 *)0x0;\u000a  if (*(short *)(*event + 4) == 0) {\u000a    local_2030 = (undefined4 *)XtMalloc(0x1a);\u000a    uVar3 = "SetValues was Successful."._22_4_;\u000a    uVar2 = "SetValues was Successful."._18_4_;\u000a    uVar1 = CONCAT22("SetValues was Successful."._16_2_,"SetValues was Successful."._14_2_);\u000a    *(undefined4 *)((long)local_2030 + 10) =\u000a         CONCAT22("SetValues was Successful."._12_2_,"SetValues was Successful."._10_2_);\u000a    *(undefined4 *)((long)local_2030 + 0xe) = uVar1;\u000a    *(undefined4 *)((long)local_2030 + 0x12) = uVar2;\u000a    *(undefined4 *)((long)local_2030 + 0x16) = uVar3;\u000a    uVar3 = "SetValues was Successful."._4_4_;\u000a    uVar1 = CONCAT22("SetValues was Successful."._10_2_,"SetValues was Successful."._8_2_);\u000a    uVar2 = CONCAT22("SetValues was Successful."._14_2_,"SetValues was Successful."._12_2_);\u000a    *local_2030 = "SetValues was Successful."._0_4_;\u000a    local_2030[1] = uVar3;\u000a    local_2030[2] = uVar1;\u000a    local_2030[3] = uVar2;\u000a  }\u000a  else {\u000a    if (*(short *)(*event + 4) != 0) {\u000a      lVar5 = 0;\u000a      lVar6 = 0;\u000a      do {\u000a        pWVar4 = FindNode((WNode *)global_tree_info->top_node,\u000a                          *(ulong **)(*(long *)(*event + 8) + 8 + lVar5));\u000a        if (pWVar4 == (WNode *)0x0) {\u000a          cStack8200 = "Editres Internal Error: Unable to FindNode.\u005cn"[32];\u000a          uStack8199 = "Editres Internal Error: Unable to FindNode.\u005cn"._33_4_;\u000a          uStack8195 = "Editres Internal Error: Unable to FindNode.\u005cn"._37_4_;\u000a          uStack8191 = "Editres Internal Error: Unable to FindNode.\u005cn"._41_4_;\u000a          local_2018 = "Editres Internal Error: Unable to FindNode.\u005cn"._16_4_;\u000a          uStack8212 = "Editres Internal Error: Unable to FindNode.\u005cn"._20_4_;\u000a          uStack8208 = "Editres Internal Error: Unable to FindNode.\u005cn"._24_4_;\u000a          uStack8204 = "Editres Internal Error: Unable to FindNode.\u005cn"._28_4_;\u000a          local_2028 = "Editres Internal Error: Unable to FindNode.\u005cn"._0_4_;\u000a          uStack8228 = "Editres Internal Error: Unable to FindNode.\u005cn"._4_4_;\u000a          uStack8224 = "Editres Internal Error: Unable to FindNode.\u005cn"._8_4_;\u000a          uStack8220 = "Editres Internal Error: Unable to FindNode.\u005cn"._12_4_;\u000a        }\u000a        else {\u000a          sprintf((char *)&local_2028,"%s(0x%lx) - %s\u005cn",pWVar4->name,pWVar4->id,\u000a                  *(undefined8 *)(*(long *)(*event + 8) + 0x18 + lVar5));\u000a        }\u000a        AddString((char **)&local_2030,(char *)&local_2028);\u000a        lVar6 = lVar6 + 1;\u000a        lVar5 = lVar5 + 0x20;\u000a      } while (lVar6 < (long)(ulong)*(ushort *)(*event + 4));\u000a    }\u000a  }\u000a  return (char *)local_2030;\u000a}\u000a\u000a
p1480
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2010\nMOV R12,RDI\nMOV qword ptr [RSP + 0x8],0x0\nCMP word ptr [R12 + 0x4],0x0\nJZ 0x00405a2c\nCMP word ptr [R12 + 0x4],0x0\nJZ 0x00405a25\nLEA R14,[RSP + 0x8]\nLEA R15,[RSP + 0x10]\nXOR EBX,EBX\nXOR R13D,R13D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX + 0x8]\nMOV RAX,qword ptr [R12 + 0x8]\nMOV RSI,qword ptr [RAX + RBX*0x1 + 0x8]\nMOVZX EDX,word ptr [RAX + RBX*0x1]\nCALL 0x004062c0\nTEST RAX,RAX\nJZ 0x004059e0\nMOV RDX,qword ptr [RAX]\nMOV RCX,qword ptr [RAX + 0x10]\nMOV RAX,qword ptr [R12 + 0x8]\nMOV R8,qword ptr [RAX + RBX*0x1 + 0x18]\nMOV ESI,0x409b3b\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00402bf0\nJMP 0x00405a04\nMOVUPS XMM0,xmmword ptr [0x0040993f]\nMOVUPS xmmword ptr [RSP + 0x2d],XMM0\nMOVUPS XMM0,xmmword ptr [0x00409932]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x00409922]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00406260\nINC R13\nMOVZX EAX,word ptr [R12 + 0x4]\nADD RBX,0x20\nCMP R13,RAX\nJL 0x00405990\nMOV RAX,qword ptr [RSP + 0x8]\nJMP 0x00405a4b\nMOV EDI,0x1a\nCALL 0x00402760\nMOVUPS XMM0,xmmword ptr [0x00409b2b]\nMOVUPS xmmword ptr [RAX + 0xa],XMM0\nMOVUPS XMM0,xmmword ptr [0x00409b21]\nMOVUPS xmmword ptr [RAX],XMM0\nADD RSP,0x2010\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p1481
S'41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 10 20 00 00\n49 89 fc\n48 c7 44 24 08 00 00 00 00\n66 41 83 7c 24 04 00\n0f 84 c3 00 00 00\n66 41 83 7c 24 04 00\n0f 84 af 00 00 00\n4c 8d 74 24 08\n4c 8d 7c 24 10\n31 db\n45 31 ed\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 05 31 85 20 00\n48 8b 78 08\n49 8b 44 24 08\n48 8b 74 18 08\n0f b7 14 18\ne8 12 09 00 00\n48 85 c0\n74 2d\n48 8b 10\n48 8b 48 10\n49 8b 44 24 08\n4c 8b 44 18 18\nbe 3b 9b 40 00\n31 c0\n4c 89 ff\ne8 1d d2 ff ff\neb 2f\n0f 10 05 58 3f 00 00\n0f 11 44 24 2d\n0f 10 05 3f 3f 00 00\n0f 29 44 24 20\n0f 10 05 23 3f 00 00\n0f 29 44 24 10\n4c 89 f7\n4c 89 fe\ne8 51 08 00 00\n49 ff c5\n41 0f b7 44 24 04\n48 83 c3 20\n49 39 c5\n0f 8c 6b ff ff ff\n48 8b 44 24 08\neb 1f\nbf 1a 00 00 00\ne8 2a cd ff ff\n0f 10 05 ee 40 00 00\n0f 11 40 0a\n0f 10 05 d9 40 00 00\n0f 11 00\n48 81 c4 10 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p1482
S'.text:0000000000405940\n.text:0000000000405942\n.text:0000000000405944\n.text:0000000000405946\n.text:0000000000405948\n.text:0000000000405949\n.text:0000000000405950\n.text:0000000000405953\n.text:000000000040595c\n.text:0000000000405963\n.text:0000000000405969\n.text:0000000000405970\n.text:0000000000405976\n.text:000000000040597b\n.text:0000000000405980\n.text:0000000000405982\n.text:0000000000405985\n.text:0000000000405990\n.text:0000000000405997\n.text:000000000040599b\n.text:00000000004059a0\n.text:00000000004059a5\n.text:00000000004059a9\n.text:00000000004059ae\n.text:00000000004059b1\n.text:00000000004059b3\n.text:00000000004059b6\n.text:00000000004059ba\n.text:00000000004059bf\n.text:00000000004059c4\n.text:00000000004059c9\n.text:00000000004059cb\n.text:00000000004059ce\n.text:00000000004059d3\n.text:00000000004059e0\n.text:00000000004059e7\n.text:00000000004059ec\n.text:00000000004059f3\n.text:00000000004059f8\n.text:00000000004059ff\n.text:0000000000405a04\n.text:0000000000405a07\n.text:0000000000405a0a\n.text:0000000000405a0f\n.text:0000000000405a12\n.text:0000000000405a18\n.text:0000000000405a1c\n.text:0000000000405a1f\n.text:0000000000405a25\n.text:0000000000405a2a\n.text:0000000000405a2c\n.text:0000000000405a31\n.text:0000000000405a36\n.text:0000000000405a3d\n.text:0000000000405a41\n.text:0000000000405a48\n.text:0000000000405a4b\n.text:0000000000405a52\n.text:0000000000405a53\n.text:0000000000405a55\n.text:0000000000405a57\n.text:0000000000405a59\n.text:0000000000405a5b\n'
p1483
tp1484
sS'_XEditResGetSigned16'
p1485
(S'\n__stdcall _XEditResGetSigned16()\n'
p1486
V\u000avoid _XEditResGetSigned16(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResGetSigned16_0060d060)();\u000a  return;\u000a}\u000a\u000a
p1487
S'JMP qword ptr [0x0060d060]\n'
p1488
S'ff 25 ca a9 20 00\n'
p1489
S'.plt:0000000000402690\n'
p1490
tp1491
sS'XtScreen'
p1492
(S'\n__stdcall XtScreen()\n'
p1493
V\u000avoid XtScreen(void)\u000a\u000a{\u000a  (*(code *)PTR_XtScreen_0060d128)();\u000a  return;\u000a}\u000a\u000a
p1494
S'JMP qword ptr [0x0060d128]\n'
p1495
S'ff 25 02 a9 20 00\n'
p1496
S'.plt:0000000000402820\n'
p1497
tp1498
sS'_TreeActivateNode'
p1499
(S'\n__stdcall _TreeActivateNode(WNode * node)\n'
p1500
V\u000avoid _TreeActivateNode(WNode *node)\u000a\u000a{\u000a  WNode *node_00;\u000a  ulong uVar1;\u000a  ulong uVar2;\u000a  int in_ESI;\u000a  Arg args [1];\u000a  char *local_38;\u000a  undefined8 local_30;\u000a  \u000a  local_38 = "state";\u000a  local_30 = 1;\u000a  if ((in_ESI == 7) || (in_ESI == 4)) {\u000a    node_00 = (WNode *)node->parent;\u000a    if (node_00 != (WNode *)0x0) {\u000a      XtSetValues(node_00->widget,&local_38,1);\u000a      AddNodeToActiveList(node_00);\u000a      if (in_ESI == 7) {\u000a        _TreeActivateNode(node_00);\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    if (in_ESI - 5U < 2) {\u000a      if (node->num_children != 0) {\u000a        uVar2 = 0;\u000a        do {\u000a          AddNodeToActiveList((WNode *)node->children[uVar2]);\u000a          XtSetValues(node->children[uVar2]->widget,&local_38,1);\u000a          if (in_ESI == 6) {\u000a            _TreeActivateNode((WNode *)node->children[uVar2]);\u000a          }\u000a          uVar1 = uVar2 + 1;\u000a          uVar2 = uVar1 & 0xffffffff;\u000a        } while ((uint)uVar1 < node->num_children);\u000a      }\u000a    }\u000a    else {\u000a      SetMessage(global_screen_data.info_label,res_labels[33]);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1501
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R14D,ESI\nMOV R12,RDI\nMOV qword ptr [RSP],0x409a85\nMOV qword ptr [RSP + 0x8],0x1\nCMP R14D,0x7\nJZ 0x004090ae\nCMP R14D,0x4\nJNZ 0x004090ef\nMOV RBX,qword ptr [R12 + 0x20]\nTEST RBX,RBX\nJZ 0x0040916e\nMOV RDI,qword ptr [RBX + 0x40]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nMOV RDI,RBX\nCALL 0x00408a60\nCMP R14D,0x7\nJNZ 0x0040916e\nMOV RDI,RBX\nMOV ESI,R14D\nCALL 0x00409080\nJMP 0x0040916e\nLEA EAX,[R14 + -0x5]\nCMP EAX,0x1\nJA 0x0040915b\nCMP dword ptr [R12 + 0x38],0x0\nJZ 0x0040916e\nXOR EBX,EBX\nMOV R15,RSP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [R12 + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nCALL 0x00408a60\nMOV RAX,qword ptr [R12 + 0x28]\nMOV RAX,qword ptr [RAX + RBX*0x8]\nMOV RDI,qword ptr [RAX + 0x40]\nMOV EDX,0x1\nMOV RSI,R15\nCALL 0x00402790\nCMP R14D,0x6\nJNZ 0x0040914f\nMOV RAX,qword ptr [R12 + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nMOV ESI,R14D\nCALL 0x00409080\nINC RBX\nCMP EBX,dword ptr [R12 + 0x38]\nJC 0x00409110\nJMP 0x0040916e\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e108]\nCALL 0x00406120\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p1502
S'41 57\n41 56\n41 54\n53\n48 83 ec 18\n41 89 f6\n49 89 fc\n48 c7 04 24 85 9a 40 00\n48 c7 44 24 08 01 00 00 00\n41 83 fe 07\n74 06\n41 83 fe 04\n75 41\n49 8b 5c 24 20\n48 85 db\n0f 84 b2 00 00 00\n48 8b 7b 40\n48 89 e6\nba 01 00 00 00\ne8 c3 96 ff ff\n48 89 df\ne8 8b f9 ff ff\n41 83 fe 07\n0f 85 8f 00 00 00\n48 89 df\n44 89 f6\ne8 96 ff ff ff\ne9 7f 00 00 00\n41 8d 46 fb\n83 f8 01\n77 63\n41 83 7c 24 38 00\n74 6e\n31 db\n49 89 e7\n66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 44 24 28\n48 8b 3c d8\ne8 42 f9 ff ff\n49 8b 44 24 28\n48 8b 04 d8\n48 8b 78 40\nba 01 00 00 00\n4c 89 fe\ne8 58 96 ff ff\n41 83 fe 06\n75 11\n49 8b 44 24 28\n48 8b 3c d8\n44 89 f6\ne8 31 ff ff ff\n48 ff c3\n41 3b 5c 24 38\n72 b7\neb 13\n48 8b 3d 96 4e 20 00\n48 8b 35 9f 4f 20 00\ne8 b2 cf ff ff\n48 83 c4 18\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p1503
S'.text:0000000000409080\n.text:0000000000409082\n.text:0000000000409084\n.text:0000000000409086\n.text:0000000000409087\n.text:000000000040908b\n.text:000000000040908e\n.text:0000000000409091\n.text:0000000000409099\n.text:00000000004090a2\n.text:00000000004090a6\n.text:00000000004090a8\n.text:00000000004090ac\n.text:00000000004090ae\n.text:00000000004090b3\n.text:00000000004090b6\n.text:00000000004090bc\n.text:00000000004090c0\n.text:00000000004090c3\n.text:00000000004090c8\n.text:00000000004090cd\n.text:00000000004090d0\n.text:00000000004090d5\n.text:00000000004090d9\n.text:00000000004090df\n.text:00000000004090e2\n.text:00000000004090e5\n.text:00000000004090ea\n.text:00000000004090ef\n.text:00000000004090f3\n.text:00000000004090f6\n.text:00000000004090f8\n.text:00000000004090fe\n.text:0000000000409100\n.text:0000000000409102\n.text:0000000000409105\n.text:0000000000409110\n.text:0000000000409115\n.text:0000000000409119\n.text:000000000040911e\n.text:0000000000409123\n.text:0000000000409127\n.text:000000000040912b\n.text:0000000000409130\n.text:0000000000409133\n.text:0000000000409138\n.text:000000000040913c\n.text:000000000040913e\n.text:0000000000409143\n.text:0000000000409147\n.text:000000000040914a\n.text:000000000040914f\n.text:0000000000409152\n.text:0000000000409157\n.text:0000000000409159\n.text:000000000040915b\n.text:0000000000409162\n.text:0000000000409169\n.text:000000000040916e\n.text:0000000000409172\n.text:0000000000409173\n.text:0000000000409175\n.text:0000000000409177\n.text:0000000000409179\n'
p1504
tp1505
sS'memmove'
p1506
(S'\n__stdcall memmove(void * __dest, void * __src, size_t __n)\n'
p1507
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memmove(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memmove_0060d2b0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1508
S'JMP qword ptr [0x0060d2b0]\n'
p1509
S'ff 25 7a a7 20 00\n'
p1510
S'.plt:0000000000402b30\n'
p1511
tp1512
sS'BuildEvent'
p1513
(S'\n__stdcall BuildEvent(ProtocolStream * stream)\n'
p1514
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aEvent * BuildEvent(ProtocolStream *stream)\u000a\u000a{\u000a  char *pcVar1;\u000a  ushort *puVar2;\u000a  int iVar3;\u000a  Event *event;\u000a  undefined8 uVar4;\u000a  long lVar5;\u000a  ulong uVar6;\u000a  long lVar7;\u000a  long lVar8;\u000a  uchar temp;\u000a  undefined8 local_48;\u000a  undefined8 local_40;\u000a  long *local_38;\u000a  \u000a  event = (Event *)XtCalloc(0x20,1);\u000a  switch(global_client.command) {\u000a  case LocalSendWidgetTree:\u000a    *(undefined4 *)*event = 0;\u000a    iVar3 = _XEditResGet16(stream,*event + 0x10);\u000a    if (iVar3 != 0) {\u000a      uVar4 = XtCalloc(0x30,(ulong)*(ushort *)(*event + 0x10));\u000a      *(undefined8 *)(*event + 0x18) = uVar4;\u000a      if (*(short *)(*event + 0x10) != 0) {\u000a        lVar8 = 0;\u000a        lVar5 = 0x18;\u000a        do {\u000a          lVar7 = *(long *)(*event + 0x18);\u000a          iVar3 = _XEditResGetWidgetInfo(stream,lVar7 + -0x18 + lVar5);\u000a          if ((((iVar3 == 0) || (iVar3 = _XEditResGetString8(stream,lVar7 + lVar5), iVar3 == 0)) ||\u000a              (iVar3 = _XEditResGetString8(stream,lVar7 + 8 + lVar5), iVar3 == 0)) ||\u000a             (iVar3 = _XEditResGet32(stream,lVar7 + 0x10 + lVar5), iVar3 == 0))\u000a          goto switchD_00403a73_caseD_7;\u000a          lVar8 = lVar8 + 1;\u000a          lVar5 = lVar5 + 0x30;\u000a        } while (lVar8 < (long)(ulong)*(ushort *)(*event + 0x10));\u000a      }\u000a      if ((global_effective_protocol_version != 5) ||\u000a         (iVar3 = _XEditResGetString8(stream,*event + 8), iVar3 != 0)) {\u000a        SetEntriesSensitive(CM_entries + 1);\u000a        SetEntriesSensitive(TM_entries);\u000a        if (global_effective_protocol_version != 5) {\u000a          RebuildMenusAndLabel("xt");\u000a          return event;\u000a        }\u000a        iVar3 = strcmp(*(char **)(*event + 8),"InterViews");\u000a        if (iVar3 != 0) {\u000a          return event;\u000a        }\u000a        RebuildMenusAndLabel("iv");\u000a        return event;\u000a      }\u000a    }\u000a    break;\u000a  case LocalSetValues:\u000a    *(undefined4 *)*event = 1;\u000a    iVar3 = _XEditResGet16(stream,*event + 4);\u000a    if (iVar3 != 0) {\u000a      uVar4 = XtCalloc(0x20,(ulong)*(ushort *)(*event + 4));\u000a      *(undefined8 *)(*event + 8) = uVar4;\u000a      if (*(short *)(*event + 4) == 0) {\u000a        return event;\u000a      }\u000a      lVar8 = 0;\u000a      lVar5 = 0x18;\u000a      while( true ) {\u000a        lVar7 = *(long *)(*event + 8);\u000a        iVar3 = _XEditResGetWidgetInfo(stream,lVar7 + -0x18 + lVar5);\u000a        if ((iVar3 == 0) || (iVar3 = _XEditResGetString8(stream,lVar7 + lVar5), iVar3 == 0)) break;\u000a        lVar8 = lVar8 + 1;\u000a        lVar5 = lVar5 + 0x20;\u000a        if ((long)(ulong)*(ushort *)(*event + 4) <= lVar8) {\u000a          return event;\u000a        }\u000a      }\u000a    }\u000a    break;\u000a  case LocalFindChild:\u000a    *(undefined4 *)*event = 4;\u000a    iVar3 = _XEditResGetWidgetInfo(stream,*event + 8);\u000a    if (iVar3 != 0) {\u000a      return event;\u000a    }\u000a    break;\u000a  case LocalFlashWidget:\u000a  case LocalGetGeometry:\u000a    *(undefined4 *)*event = 3;\u000a    iVar3 = _XEditResGet16(stream,*event + 4);\u000a    if (iVar3 != 0) {\u000a      uVar4 = XtCalloc(0x40,(ulong)*(ushort *)(*event + 4));\u000a      *(undefined8 *)(*event + 8) = uVar4;\u000a      if (*(short *)(*event + 4) == 0) {\u000a        return event;\u000a      }\u000a      lVar5 = 0;\u000a      lVar8 = 0;\u000a      while( true ) {\u000a        lVar7 = *(long *)(*event + 8);\u000a        iVar3 = _XEditResGetWidgetInfo(stream,lVar7 + 8 + lVar5);\u000a        if (iVar3 == 0) break;\u000a        pcVar1 = (char *)(lVar7 + 0x20 + lVar5);\u000a        iVar3 = _XEditResGet8(stream,pcVar1);\u000a        if (iVar3 == 0) break;\u000a        if (*pcVar1 == 0) {\u000a          iVar3 = _XEditResGet8(stream,lVar7 + 0x30 + lVar5);\u000a          if (((iVar3 == 0) ||\u000a              (iVar3 = _XEditResGetSigned16(stream,lVar7 + 0x32 + lVar5), iVar3 == 0)) ||\u000a             ((iVar3 = _XEditResGetSigned16(stream,lVar7 + 0x34 + lVar5), iVar3 == 0 ||\u000a              ((iVar3 = _XEditResGet16(stream,lVar7 + 0x36 + lVar5), iVar3 == 0 ||\u000a               (iVar3 = _XEditResGet16(stream,lVar7 + 0x38 + lVar5), iVar3 == 0)))))) break;\u000a          iVar3 = _XEditResGet16(stream,lVar7 + 0x3a + lVar5);\u000a        }\u000a        else {\u000a          iVar3 = _XEditResGetString8(stream,lVar7 + 0x28 + lVar5);\u000a        }\u000a        if (iVar3 == 0) break;\u000a        lVar8 = lVar8 + 1;\u000a        lVar5 = lVar5 + 0x40;\u000a        if ((long)(ulong)*(ushort *)(*event + 4) <= lVar8) {\u000a          return event;\u000a        }\u000a      }\u000a    }\u000a    break;\u000a  case LocalGetResources:\u000a    *(undefined4 *)*event = 3;\u000a    iVar3 = _XEditResGet16(stream,*event + 4);\u000a    if (iVar3 != 0) {\u000a      uVar4 = XtCalloc(0x38,(ulong)*(ushort *)(*event + 4));\u000a      *(undefined8 *)(*event + 8) = uVar4;\u000a      if (*(short *)(*event + 4) == 0) {\u000a        return event;\u000a      }\u000a      lVar5 = 0;\u000a      while( true ) {\u000a        lVar8 = *(long *)(*event + 8);\u000a        lVar7 = lVar5 * 0x38;\u000a        iVar3 = _XEditResGetWidgetInfo(stream,lVar8 + lVar7);\u000a        if (iVar3 == 0) break;\u000a        pcVar1 = (char *)(lVar8 + 0x18 + lVar7);\u000a        iVar3 = _XEditResGet8(stream,pcVar1);\u000a        if (iVar3 == 0) break;\u000a        if (*pcVar1 == 0) {\u000a          puVar2 = (ushort *)(lVar8 + 0x28 + lVar7);\u000a          iVar3 = _XEditResGet16(stream);\u000a          if (iVar3 == 0) break;\u000a          uVar4 = XtCalloc(0x20,(ulong)*puVar2);\u000a          *(undefined8 *)(lVar8 + 0x30 + lVar7) = uVar4;\u000a          if (*puVar2 != 0) {\u000a            local_38 = (long *)(lVar8 + 0x30 + lVar7);\u000a            lVar8 = 0x10;\u000a            uVar6 = 0;\u000a            do {\u000a              lVar7 = *local_38;\u000a              iVar3 = _XEditResGet8(stream,&local_48);\u000a              if ((((iVar3 == 0) ||\u000a                   (iVar3 = _XEditResGetString8(stream,lVar7 + -8 + lVar8), iVar3 == 0)) ||\u000a                  (iVar3 = _XEditResGetString8(stream,lVar7 + lVar8), iVar3 == 0)) ||\u000a                 (iVar3 = _XEditResGetString8(stream,lVar7 + 8 + lVar8), iVar3 == 0))\u000a              goto switchD_00403a73_caseD_7;\u000a              *(uint *)(lVar7 + -0x10 + lVar8) = (uint)(byte)local_48;\u000a              uVar6 = uVar6 + 1;\u000a              lVar8 = lVar8 + 0x20;\u000a            } while (uVar6 < (ulong)*puVar2);\u000a          }\u000a        }\u000a        else {\u000a          iVar3 = _XEditResGetString8(stream,lVar8 + 0x20 + lVar7);\u000a          if (iVar3 == 0) break;\u000a        }\u000a        lVar5 = lVar5 + 1;\u000a        if ((long)(ulong)*(ushort *)(*event + 4) <= lVar5) {\u000a          return event;\u000a        }\u000a      }\u000a    }\u000a    break;\u000a  case LocalGetValues:\u000a    *(undefined4 *)*event = 5;\u000a    iVar3 = _XEditResGet16(stream,*event + 4);\u000a    if (iVar3 != 0) {\u000a      lVar5 = XtCalloc(0x20,1);\u000a      *(long *)(*event + 8) = lVar5;\u000a      iVar3 = _XEditResGetString8(stream,(undefined8 *)(lVar5 + 0x18));\u000a      if (iVar3 != 0) {\u000a        local_48 = 0x60c65d;\u000a        local_40 = *(undefined8 *)(lVar5 + 0x18);\u000a        XtSetValues((*global_tree_info->active_nodes)->resources->res_box->value_wid,&local_48,1);\u000a        return event;\u000a      }\u000a    }\u000a  }\u000aswitchD_00403a73_caseD_7:\u000a  FreeEvent(event);\u000a  return (Event *)0x0;\u000a}\u000a\u000a
p1515
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RDI\nMOV EDI,0x20\nMOV ESI,0x1\nCALL 0x00402b40\nMOV R14,RAX\nMOV EAX,dword ptr [0x0060df48]\nCMP RAX,0x6\nJA 0x00403f7b\nJMP qword ptr [0x409598 + RAX*0x8]\nMOV dword ptr [R14],0x3\nMOV RSI,R14\nADD RSI,0x4\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nMOVZX ESI,word ptr [R14 + 0x4]\nMOV EDI,0x40\nCALL 0x00402b40\nMOV qword ptr [R14 + 0x8],RAX\nCMP word ptr [R14 + 0x4],0x0\nJZ 0x00403f86\nXOR R12D,R12D\nXOR R15D,R15D\nNOP dword ptr [RAX]\nMOV RBP,qword ptr [R14 + 0x8]\nLEA RSI,[RBP + R12*0x1 + 0x8]\nMOV RDI,R13\nCALL 0x004026e0\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RBX,[RBP + R12*0x1 + 0x20]\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x00402c90\nTEST EAX,EAX\nJZ 0x00403f7b\nCMP byte ptr [RBX],0x0\nJZ 0x00403b10\nLEA RSI,[RBP + R12*0x1 + 0x28]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJNZ 0x00403b8e\nJMP 0x00403f7b\nLEA RSI,[RBP + R12*0x1 + 0x30]\nMOV RDI,R13\nCALL 0x00402c90\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R12*0x1 + 0x32]\nMOV RDI,R13\nCALL 0x00402690\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R12*0x1 + 0x34]\nMOV RDI,R13\nCALL 0x00402690\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R12*0x1 + 0x36]\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R12*0x1 + 0x38]\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R12*0x1 + 0x3a]\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nINC R15\nMOVZX EAX,word ptr [R14 + 0x4]\nADD R12,0x40\nCMP R15,RAX\nJL 0x00403ac0\nJMP 0x00403f86\nMOV dword ptr [R14],0x0\nLEA R15,[R14 + 0x10]\nMOV RDI,R13\nMOV RSI,R15\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nMOVZX ESI,word ptr [R14 + 0x10]\nMOV EDI,0x30\nCALL 0x00402b40\nMOV qword ptr [R14 + 0x18],RAX\nCMP word ptr [R14 + 0x10],0x0\nJZ 0x00403c57\nXOR R12D,R12D\nMOV EBP,0x18\nNOP dword ptr [RAX]\nMOV RBX,qword ptr [R14 + 0x18]\nLEA RSI,[RBX + RBP*0x1 + -0x18]\nMOV RDI,R13\nCALL 0x004026e0\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBX + RBP*0x1]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBX + RBP*0x1 + 0x8]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBX + RBP*0x1 + 0x10]\nMOV RDI,R13\nCALL 0x00402650\nTEST EAX,EAX\nJZ 0x00403f7b\nINC R12\nMOVZX EAX,word ptr [R15]\nADD RBP,0x30\nCMP R12,RAX\nJL 0x00403bf0\nCMP dword ptr [0x0060d4c0],0x5\nJNZ 0x00403c77\nMOV RSI,R14\nADD RSI,0x8\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nMOV EDI,0x60e1b8\nMOV ESI,0x5\nMOV EDX,0x1\nCALL 0x004075c0\nMOV EDI,0x60e130\nMOV ESI,0x10\nMOV EDX,0x1\nCALL 0x004075c0\nCMP dword ptr [0x0060d4c0],0x5\nJNZ 0x00403f98\nMOV RDI,qword ptr [R14 + 0x8]\nMOV ESI,0x409811\nCALL 0x00402940\nTEST EAX,EAX\nJNZ 0x00403f86\nMOV EDI,0x40981c\nCALL 0x00407030\nJMP 0x00403f86\nMOV dword ptr [R14],0x1\nMOV RSI,R14\nADD RSI,0x4\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nMOVZX ESI,word ptr [R14 + 0x4]\nMOV EDI,0x20\nCALL 0x00402b40\nMOV qword ptr [R14 + 0x8],RAX\nCMP word ptr [R14 + 0x4],0x0\nJZ 0x00403f86\nXOR R15D,R15D\nMOV EBP,0x18\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RBX,qword ptr [R14 + 0x8]\nLEA RSI,[RBX + RBP*0x1 + -0x18]\nMOV RDI,R13\nCALL 0x004026e0\nTEST EAX,EAX\nJZ 0x00403f7b\nADD RBX,RBP\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nINC R15\nMOVZX EAX,word ptr [R14 + 0x4]\nADD RBP,0x20\nCMP R15,RAX\nJL 0x00403d20\nJMP 0x00403f86\nMOV dword ptr [R14],0x4\nMOV RSI,R14\nADD RSI,0x8\nMOV RDI,R13\nCALL 0x004026e0\nTEST EAX,EAX\nJNZ 0x00403f86\nJMP 0x00403f7b\nMOV dword ptr [R14],0x3\nMOV RSI,R14\nADD RSI,0x4\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nMOVZX ESI,word ptr [R14 + 0x4]\nMOV EDI,0x38\nCALL 0x00402b40\nMOV qword ptr [R14 + 0x8],RAX\nCMP word ptr [R14 + 0x4],0x0\nJZ 0x00403f86\nXOR R12D,R12D\nJMP 0x00403edf\nLEA RBX,[R15 + RBP*0x1 + 0x18]\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x00402c90\nTEST EAX,EAX\nJZ 0x00403f7b\nCMP byte ptr [RBX],0x0\nJZ 0x00403e15\nLEA RSI,[R15 + RBP*0x1 + 0x20]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nINC R12\nMOVZX EAX,word ptr [R14 + 0x4]\nCMP R12,RAX\nJL 0x00403edf\nJMP 0x00403f86\nLEA RSI,[R15 + RBP*0x1 + 0x28]\nMOV RDI,R13\nMOV qword ptr [RSP + 0x8],RSI\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nMOV RBX,qword ptr [RSP + 0x8]\nMOVZX ESI,word ptr [RBX]\nMOV EDI,0x20\nCALL 0x00402b40\nMOV qword ptr [R15 + RBP*0x1 + 0x30],RAX\nCMP word ptr [RBX],0x0\nJZ 0x00403dff\nLEA RAX,[R15 + RBP*0x1 + 0x30]\nMOV qword ptr [RSP + 0x20],RAX\nMOV R15D,0x10\nXOR EBX,EBX\nNOP\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RBP,qword ptr [RAX]\nMOV RDI,R13\nLEA RSI,[RSP + 0x10]\nCALL 0x00402c90\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R15*0x1 + -0x8]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R15*0x1]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nLEA RSI,[RBP + R15*0x1 + 0x8]\nMOV RDI,R13\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nMOVZX EAX,byte ptr [RSP + 0x10]\nMOV dword ptr [RBP + R15*0x1 + -0x10],EAX\nINC RBX\nMOV RAX,qword ptr [RSP + 0x8]\nMOVZX EAX,word ptr [RAX]\nADD R15,0x20\nCMP RBX,RAX\nJC 0x00403e60\nJMP 0x00403dff\nMOV R15,qword ptr [R14 + 0x8]\nIMUL RBP,R12,0x38\nLEA RSI,[R15 + RBP*0x1]\nMOV RDI,R13\nCALL 0x004026e0\nTEST EAX,EAX\nJNZ 0x00403dcd\nJMP 0x00403f7b\nMOV dword ptr [R14],0x5\nMOV RSI,R14\nADD RSI,0x4\nMOV RDI,R13\nCALL 0x00402880\nTEST EAX,EAX\nJZ 0x00403f7b\nMOV EDI,0x20\nMOV ESI,0x1\nCALL 0x00402b40\nMOV R15,RAX\nMOV qword ptr [R14 + 0x8],R15\nADD R15,0x18\nMOV RDI,R13\nMOV RSI,R15\nCALL 0x00402910\nTEST EAX,EAX\nJZ 0x00403f7b\nMOV qword ptr [RSP + 0x10],0x60c65d\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [0x0060dec8]\nMOV RAX,qword ptr [RAX + 0x10]\nMOV RAX,qword ptr [RAX]\nMOV RAX,qword ptr [RAX + 0x48]\nMOV RAX,qword ptr [RAX + 0x18]\nMOV RDI,qword ptr [RAX]\nLEA RSI,[RSP + 0x10]\nMOV EDX,0x1\nCALL 0x00402790\nJMP 0x00403f86\nMOV RDI,R14\nCALL 0x00404060\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x409b96\nCALL 0x00407030\nJMP 0x00403f86\n'
p1516
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 fd\nbf 20 00 00 00\nbe 01 00 00 00\ne8 e0 f0 ff ff\n49 89 c6\n8b 05 df a4 20 00\n48 83 f8 06\n0f 87 08 05 00 00\nff 24 c5 98 95 40 00\n41 c7 06 03 00 00 00\n4c 89 f6\n48 83 c6 04\n4c 89 ef\ne8 f0 ed ff ff\n85 c0\n0f 84 e3 04 00 00\n41 0f b7 76 04\nbf 40 00 00 00\ne8 99 f0 ff ff\n49 89 46 08\n66 41 83 7e 04 00\n0f 84 cf 04 00 00\n45 31 e4\n45 31 ff\n0f 1f 00\n49 8b 6e 08\n4a 8d 74 25 08\n4c 89 ef\ne8 0f ec ff ff\n85 c0\n0f 84 a2 04 00 00\n4a 8d 5c 25 20\n4c 89 ef\n48 89 de\ne8 a7 f1 ff ff\n85 c0\n0f 84 8a 04 00 00\n80 3b 00\n74 1a\n4a 8d 74 25 28\n4c 89 ef\ne8 0d ee ff ff\n85 c0\n0f 85 83 00 00 00\ne9 6b 04 00 00\n4a 8d 74 25 30\n4c 89 ef\ne8 73 f1 ff ff\n85 c0\n0f 84 56 04 00 00\n4a 8d 74 25 32\n4c 89 ef\ne8 5e eb ff ff\n85 c0\n0f 84 41 04 00 00\n4a 8d 74 25 34\n4c 89 ef\ne8 49 eb ff ff\n85 c0\n0f 84 2c 04 00 00\n4a 8d 74 25 36\n4c 89 ef\ne8 24 ed ff ff\n85 c0\n0f 84 17 04 00 00\n4a 8d 74 25 38\n4c 89 ef\ne8 0f ed ff ff\n85 c0\n0f 84 02 04 00 00\n4a 8d 74 25 3a\n4c 89 ef\ne8 fa ec ff ff\n85 c0\n0f 84 ed 03 00 00\n49 ff c7\n41 0f b7 46 04\n49 83 c4 40\n49 39 c7\n0f 8c 1d ff ff ff\ne9 de 03 00 00\n41 c7 06 00 00 00 00\n4d 8d 7e 10\n4c 89 ef\n4c 89 fe\ne8 c2 ec ff ff\n85 c0\n0f 84 b5 03 00 00\n41 0f b7 76 10\nbf 30 00 00 00\ne8 6b ef ff ff\n49 89 46 18\n66 41 83 7e 10 00\n74 76\n45 31 e4\nbd 18 00 00 00\n0f 1f 80 00 00 00 00\n49 8b 5e 18\n48 8d 74 2b e8\n4c 89 ef\ne8 df ea ff ff\n85 c0\n0f 84 72 03 00 00\n48 8d 34 2b\n4c 89 ef\ne8 fb ec ff ff\n85 c0\n0f 84 5e 03 00 00\n48 8d 74 2b 08\n4c 89 ef\ne8 e6 ec ff ff\n85 c0\n0f 84 49 03 00 00\n48 8d 74 2b 10\n4c 89 ef\ne8 11 ea ff ff\n85 c0\n0f 84 34 03 00 00\n49 ff c4\n41 0f b7 07\n48 83 c5 30\n49 39 c4\n7c 99\n83 3d 62 98 20 00 05\n75 17\n4c 89 f6\n48 83 c6 08\n4c 89 ef\ne8 a1 ec ff ff\n85 c0\n0f 84 04 03 00 00\nbf b8 e1 60 00\nbe 05 00 00 00\nba 01 00 00 00\ne8 35 39 00 00\nbf 30 e1 60 00\nbe 10 00 00 00\nba 01 00 00 00\ne8 21 39 00 00\n83 3d 1a 98 20 00 05\n0f 85 ec 02 00 00\n49 8b 7e 08\nbe 11 98 40 00\ne8 86 ec ff ff\n85 c0\n0f 85 c4 02 00 00\nbf 1c 98 40 00\ne8 64 33 00 00\ne9 b5 02 00 00\n41 c7 06 01 00 00 00\n4c 89 f6\n48 83 c6 04\n4c 89 ef\ne8 99 eb ff ff\n85 c0\n0f 84 8c 02 00 00\n41 0f b7 76 04\nbf 20 00 00 00\ne8 42 ee ff ff\n49 89 46 08\n66 41 83 7e 04 00\n0f 84 78 02 00 00\n45 31 ff\nbd 18 00 00 00\n66 2e 0f 1f 84 00 00 00 00 00\n49 8b 5e 08\n48 8d 74 2b e8\n4c 89 ef\ne8 af e9 ff ff\n85 c0\n0f 84 42 02 00 00\n48 01 eb\n4c 89 ef\n48 89 de\ne8 c9 eb ff ff\n85 c0\n0f 84 2c 02 00 00\n49 ff c7\n41 0f b7 46 04\n48 83 c5 20\n49 39 c7\n7c c0\ne9 21 02 00 00\n41 c7 06 04 00 00 00\n4c 89 f6\n48 83 c6 08\n4c 89 ef\ne8 65 e9 ff ff\n85 c0\n0f 85 03 02 00 00\ne9 f3 01 00 00\n41 c7 06 03 00 00 00\n4c 89 f6\n48 83 c6 04\n4c 89 ef\ne8 e2 ea ff ff\n85 c0\n0f 84 d5 01 00 00\n41 0f b7 76 04\nbf 38 00 00 00\ne8 8b ed ff ff\n49 89 46 08\n66 41 83 7e 04 00\n0f 84 c1 01 00 00\n45 31 e4\ne9 12 01 00 00\n49 8d 5c 2f 18\n4c 89 ef\n48 89 de\ne8 b3 ee ff ff\n85 c0\n0f 84 96 01 00 00\n80 3b 00\n74 2b\n49 8d 74 2f 20\n4c 89 ef\ne8 19 eb ff ff\n85 c0\n0f 84 7c 01 00 00\n49 ff c4\n41 0f b7 46 04\n49 39 c4\n0f 8c cf 00 00 00\ne9 71 01 00 00\n49 8d 74 2f 28\n4c 89 ef\n48 89 74 24 08\ne8 59 ea ff ff\n85 c0\n0f 84 4c 01 00 00\n48 8b 5c 24 08\n0f b7 33\nbf 20 00 00 00\ne8 ff ec ff ff\n49 89 44 2f 30\n66 83 3b 00\n74 b3\n49 8d 44 2f 30\n48 89 44 24 20\n41 bf 10 00 00 00\n31 db\n66 90\n48 8b 44 24 20\n48 8b 28\n4c 89 ef\n48 8d 74 24 10\ne8 1b ee ff ff\n85 c0\n0f 84 fe 00 00 00\n4a 8d 74 3d f8\n4c 89 ef\ne8 86 ea ff ff\n85 c0\n0f 84 e9 00 00 00\n4a 8d 74 3d 00\n4c 89 ef\ne8 71 ea ff ff\n85 c0\n0f 84 d4 00 00 00\n4a 8d 74 3d 08\n4c 89 ef\ne8 5c ea ff ff\n85 c0\n0f 84 bf 00 00 00\n0f b6 44 24 10\n42 89 44 3d f0\n48 ff c3\n48 8b 44 24 08\n0f b7 00\n49 83 c7 20\n48 39 c3\n72 86\ne9 20 ff ff ff\n4d 8b 7e 08\n49 6b ec 38\n49 8d 34 2f\n4c 89 ef\ne8 ed e7 ff ff\n85 c0\n0f 85 d2 fe ff ff\neb 7e\n41 c7 06 05 00 00 00\n4c 89 f6\n48 83 c6 04\n4c 89 ef\ne8 6d e9 ff ff\n85 c0\n74 64\nbf 20 00 00 00\nbe 01 00 00 00\ne8 1a ec ff ff\n49 89 c7\n4d 89 7e 08\n49 83 c7 18\n4c 89 ef\n4c 89 fe\ne8 d4 e9 ff ff\n85 c0\n74 3b\n48 c7 44 24 10 5d c6 60 00\n49 8b 07\n48 89 44 24 18\n48 8b 05 70 9f 20 00\n48 8b 40 10\n48 8b 00\n48 8b 40 48\n48 8b 40 18\n48 8b 38\n48 8d 74 24 10\nba 01 00 00 00\ne8 17 e8 ff ff\neb 0b\n4c 89 f7\ne8 dd 00 00 00\n45 31 f6\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf 96 9b 40 00\ne8 8e 30 00 00\neb e2\n'
p1517
S'.text:0000000000403a40\n.text:0000000000403a41\n.text:0000000000403a43\n.text:0000000000403a45\n.text:0000000000403a47\n.text:0000000000403a49\n.text:0000000000403a4a\n.text:0000000000403a4e\n.text:0000000000403a51\n.text:0000000000403a56\n.text:0000000000403a5b\n.text:0000000000403a60\n.text:0000000000403a63\n.text:0000000000403a69\n.text:0000000000403a6d\n.text:0000000000403a73\n.text:0000000000403a7a\n.text:0000000000403a81\n.text:0000000000403a84\n.text:0000000000403a88\n.text:0000000000403a8b\n.text:0000000000403a90\n.text:0000000000403a92\n.text:0000000000403a98\n.text:0000000000403a9d\n.text:0000000000403aa2\n.text:0000000000403aa7\n.text:0000000000403aab\n.text:0000000000403ab1\n.text:0000000000403ab7\n.text:0000000000403aba\n.text:0000000000403abd\n.text:0000000000403ac0\n.text:0000000000403ac4\n.text:0000000000403ac9\n.text:0000000000403acc\n.text:0000000000403ad1\n.text:0000000000403ad3\n.text:0000000000403ad9\n.text:0000000000403ade\n.text:0000000000403ae1\n.text:0000000000403ae4\n.text:0000000000403ae9\n.text:0000000000403aeb\n.text:0000000000403af1\n.text:0000000000403af4\n.text:0000000000403af6\n.text:0000000000403afb\n.text:0000000000403afe\n.text:0000000000403b03\n.text:0000000000403b05\n.text:0000000000403b0b\n.text:0000000000403b10\n.text:0000000000403b15\n.text:0000000000403b18\n.text:0000000000403b1d\n.text:0000000000403b1f\n.text:0000000000403b25\n.text:0000000000403b2a\n.text:0000000000403b2d\n.text:0000000000403b32\n.text:0000000000403b34\n.text:0000000000403b3a\n.text:0000000000403b3f\n.text:0000000000403b42\n.text:0000000000403b47\n.text:0000000000403b49\n.text:0000000000403b4f\n.text:0000000000403b54\n.text:0000000000403b57\n.text:0000000000403b5c\n.text:0000000000403b5e\n.text:0000000000403b64\n.text:0000000000403b69\n.text:0000000000403b6c\n.text:0000000000403b71\n.text:0000000000403b73\n.text:0000000000403b79\n.text:0000000000403b7e\n.text:0000000000403b81\n.text:0000000000403b86\n.text:0000000000403b88\n.text:0000000000403b8e\n.text:0000000000403b91\n.text:0000000000403b96\n.text:0000000000403b9a\n.text:0000000000403b9d\n.text:0000000000403ba3\n.text:0000000000403ba8\n.text:0000000000403baf\n.text:0000000000403bb3\n.text:0000000000403bb6\n.text:0000000000403bb9\n.text:0000000000403bbe\n.text:0000000000403bc0\n.text:0000000000403bc6\n.text:0000000000403bcb\n.text:0000000000403bd0\n.text:0000000000403bd5\n.text:0000000000403bd9\n.text:0000000000403bdf\n.text:0000000000403be1\n.text:0000000000403be4\n.text:0000000000403be9\n.text:0000000000403bf0\n.text:0000000000403bf4\n.text:0000000000403bf9\n.text:0000000000403bfc\n.text:0000000000403c01\n.text:0000000000403c03\n.text:0000000000403c09\n.text:0000000000403c0d\n.text:0000000000403c10\n.text:0000000000403c15\n.text:0000000000403c17\n.text:0000000000403c1d\n.text:0000000000403c22\n.text:0000000000403c25\n.text:0000000000403c2a\n.text:0000000000403c2c\n.text:0000000000403c32\n.text:0000000000403c37\n.text:0000000000403c3a\n.text:0000000000403c3f\n.text:0000000000403c41\n.text:0000000000403c47\n.text:0000000000403c4a\n.text:0000000000403c4e\n.text:0000000000403c52\n.text:0000000000403c55\n.text:0000000000403c57\n.text:0000000000403c5e\n.text:0000000000403c60\n.text:0000000000403c63\n.text:0000000000403c67\n.text:0000000000403c6a\n.text:0000000000403c6f\n.text:0000000000403c71\n.text:0000000000403c77\n.text:0000000000403c7c\n.text:0000000000403c81\n.text:0000000000403c86\n.text:0000000000403c8b\n.text:0000000000403c90\n.text:0000000000403c95\n.text:0000000000403c9a\n.text:0000000000403c9f\n.text:0000000000403ca6\n.text:0000000000403cac\n.text:0000000000403cb0\n.text:0000000000403cb5\n.text:0000000000403cba\n.text:0000000000403cbc\n.text:0000000000403cc2\n.text:0000000000403cc7\n.text:0000000000403ccc\n.text:0000000000403cd1\n.text:0000000000403cd8\n.text:0000000000403cdb\n.text:0000000000403cdf\n.text:0000000000403ce2\n.text:0000000000403ce7\n.text:0000000000403ce9\n.text:0000000000403cef\n.text:0000000000403cf4\n.text:0000000000403cf9\n.text:0000000000403cfe\n.text:0000000000403d02\n.text:0000000000403d08\n.text:0000000000403d0e\n.text:0000000000403d11\n.text:0000000000403d16\n.text:0000000000403d20\n.text:0000000000403d24\n.text:0000000000403d29\n.text:0000000000403d2c\n.text:0000000000403d31\n.text:0000000000403d33\n.text:0000000000403d39\n.text:0000000000403d3c\n.text:0000000000403d3f\n.text:0000000000403d42\n.text:0000000000403d47\n.text:0000000000403d49\n.text:0000000000403d4f\n.text:0000000000403d52\n.text:0000000000403d57\n.text:0000000000403d5b\n.text:0000000000403d5e\n.text:0000000000403d60\n.text:0000000000403d65\n.text:0000000000403d6c\n.text:0000000000403d6f\n.text:0000000000403d73\n.text:0000000000403d76\n.text:0000000000403d7b\n.text:0000000000403d7d\n.text:0000000000403d83\n.text:0000000000403d88\n.text:0000000000403d8f\n.text:0000000000403d92\n.text:0000000000403d96\n.text:0000000000403d99\n.text:0000000000403d9e\n.text:0000000000403da0\n.text:0000000000403da6\n.text:0000000000403dab\n.text:0000000000403db0\n.text:0000000000403db5\n.text:0000000000403db9\n.text:0000000000403dbf\n.text:0000000000403dc5\n.text:0000000000403dc8\n.text:0000000000403dcd\n.text:0000000000403dd2\n.text:0000000000403dd5\n.text:0000000000403dd8\n.text:0000000000403ddd\n.text:0000000000403ddf\n.text:0000000000403de5\n.text:0000000000403de8\n.text:0000000000403dea\n.text:0000000000403def\n.text:0000000000403df2\n.text:0000000000403df7\n.text:0000000000403df9\n.text:0000000000403dff\n.text:0000000000403e02\n.text:0000000000403e07\n.text:0000000000403e0a\n.text:0000000000403e10\n.text:0000000000403e15\n.text:0000000000403e1a\n.text:0000000000403e1d\n.text:0000000000403e22\n.text:0000000000403e27\n.text:0000000000403e29\n.text:0000000000403e2f\n.text:0000000000403e34\n.text:0000000000403e37\n.text:0000000000403e3c\n.text:0000000000403e41\n.text:0000000000403e46\n.text:0000000000403e4a\n.text:0000000000403e4c\n.text:0000000000403e51\n.text:0000000000403e56\n.text:0000000000403e5c\n.text:0000000000403e5e\n.text:0000000000403e60\n.text:0000000000403e65\n.text:0000000000403e68\n.text:0000000000403e6b\n.text:0000000000403e70\n.text:0000000000403e75\n.text:0000000000403e77\n.text:0000000000403e7d\n.text:0000000000403e82\n.text:0000000000403e85\n.text:0000000000403e8a\n.text:0000000000403e8c\n.text:0000000000403e92\n.text:0000000000403e97\n.text:0000000000403e9a\n.text:0000000000403e9f\n.text:0000000000403ea1\n.text:0000000000403ea7\n.text:0000000000403eac\n.text:0000000000403eaf\n.text:0000000000403eb4\n.text:0000000000403eb6\n.text:0000000000403ebc\n.text:0000000000403ec1\n.text:0000000000403ec6\n.text:0000000000403ec9\n.text:0000000000403ece\n.text:0000000000403ed1\n.text:0000000000403ed5\n.text:0000000000403ed8\n.text:0000000000403eda\n.text:0000000000403edf\n.text:0000000000403ee3\n.text:0000000000403ee7\n.text:0000000000403eeb\n.text:0000000000403eee\n.text:0000000000403ef3\n.text:0000000000403ef5\n.text:0000000000403efb\n.text:0000000000403efd\n.text:0000000000403f04\n.text:0000000000403f07\n.text:0000000000403f0b\n.text:0000000000403f0e\n.text:0000000000403f13\n.text:0000000000403f15\n.text:0000000000403f17\n.text:0000000000403f1c\n.text:0000000000403f21\n.text:0000000000403f26\n.text:0000000000403f29\n.text:0000000000403f2d\n.text:0000000000403f31\n.text:0000000000403f34\n.text:0000000000403f37\n.text:0000000000403f3c\n.text:0000000000403f3e\n.text:0000000000403f40\n.text:0000000000403f49\n.text:0000000000403f4c\n.text:0000000000403f51\n.text:0000000000403f58\n.text:0000000000403f5c\n.text:0000000000403f5f\n.text:0000000000403f63\n.text:0000000000403f67\n.text:0000000000403f6a\n.text:0000000000403f6f\n.text:0000000000403f74\n.text:0000000000403f79\n.text:0000000000403f7b\n.text:0000000000403f7e\n.text:0000000000403f83\n.text:0000000000403f86\n.text:0000000000403f89\n.text:0000000000403f8d\n.text:0000000000403f8e\n.text:0000000000403f90\n.text:0000000000403f92\n.text:0000000000403f94\n.text:0000000000403f96\n.text:0000000000403f97\n.text:0000000000403f98\n.text:0000000000403f9d\n.text:0000000000403fa2\n'
p1518
tp1519
sS'SelectAction'
p1520
(S'\n__stdcall SelectAction(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p1521
V\u000avoid SelectAction(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a  Boolean BVar1;\u000a  Widget w_00;\u000a  WNode *node;\u000a  int local_c;\u000a  \u000a  BVar1 = CheckAndFindEntry("Select",params,(ActionValues *)(ulong)*num_params,(int *)select_values)\u000a  ;\u000a  if (BVar1 == 0) {\u000a    return;\u000a  }\u000a  if (2 < local_c - 1U) {\u000a    if (local_c == 0) {\u000a      w_00 = (Widget)XtParent();\u000a      _FindWidget(w_00);\u000a      return;\u000a    }\u000a    node = FindTreeNodeFromWidget(w);\u000a    if (node != (WNode *)0x0) {\u000a      _TreeActivateNode(node);\u000a      return;\u000a    }\u000a  }\u000a  _TreeSelect(global_tree_info);\u000a  return;\u000a}\u000a\u000a
p1522
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV EAX,dword ptr [RCX]\nLEA R9,[RSP + 0xc]\nMOV EDI,0x4094b1\nMOV ECX,0x60d3e0\nMOV R8D,0x8\nMOV RSI,RDX\nMOV EDX,EAX\nCALL 0x00402fe0\nTEST AL,AL\nJZ 0x00402e43\nMOV ESI,dword ptr [RSP + 0xc]\nLEA EAX,[RSI + -0x1]\nCMP EAX,0x3\nJNC 0x00402e17\nMOV RDI,qword ptr [0x0060dec8]\nCALL 0x00408e70\nJMP 0x00402e43\nMOV RDI,RBX\nTEST ESI,ESI\nJNZ 0x00402e2d\nCALL 0x00402c00\nMOV RDI,RAX\nCALL 0x004043e0\nJMP 0x00402e43\nCALL 0x00403150\nTEST RAX,RAX\nMOV ESI,dword ptr [RSP + 0xc]\nJZ 0x00402e49\nMOV RDI,RAX\nCALL 0x00409080\nADD RSP,0x10\nPOP RBX\nRET\nMOV RDI,qword ptr [0x0060dec8]\nJMP 0x00402e10\n'
p1523
S'53\n48 83 ec 10\n48 89 fb\n8b 01\n4c 8d 4c 24 0c\nbf b1 94 40 00\nb9 e0 d3 60 00\n41 b8 08 00 00 00\n48 89 d6\n89 c2\ne8 e7 01 00 00\n84 c0\n74 46\n8b 74 24 0c\n8d 46 ff\n83 f8 03\n73 0e\n48 8b 3d b8 b0 20 00\ne8 5b 60 00 00\neb 2c\n48 89 df\n85 f6\n75 0f\ne8 dd fd ff ff\n48 89 c7\ne8 b5 15 00 00\neb 16\ne8 1e 03 00 00\n48 85 c0\n8b 74 24 0c\n74 0e\n48 89 c7\ne8 3d 62 00 00\n48 83 c4 10\n5b\nc3\n48 8b 3d 78 b0 20 00\neb be\n'
p1524
S'.text:0000000000402dd0\n.text:0000000000402dd1\n.text:0000000000402dd5\n.text:0000000000402dd8\n.text:0000000000402dda\n.text:0000000000402ddf\n.text:0000000000402de4\n.text:0000000000402de9\n.text:0000000000402def\n.text:0000000000402df2\n.text:0000000000402df4\n.text:0000000000402df9\n.text:0000000000402dfb\n.text:0000000000402dfd\n.text:0000000000402e01\n.text:0000000000402e04\n.text:0000000000402e07\n.text:0000000000402e09\n.text:0000000000402e10\n.text:0000000000402e15\n.text:0000000000402e17\n.text:0000000000402e1a\n.text:0000000000402e1c\n.text:0000000000402e1e\n.text:0000000000402e23\n.text:0000000000402e26\n.text:0000000000402e2b\n.text:0000000000402e2d\n.text:0000000000402e32\n.text:0000000000402e35\n.text:0000000000402e39\n.text:0000000000402e3b\n.text:0000000000402e3e\n.text:0000000000402e43\n.text:0000000000402e47\n.text:0000000000402e48\n.text:0000000000402e49\n.text:0000000000402e50\n'
p1525
tp1526
sS'AddChild'
p1527
(S'\n__stdcall AddChild(WNode * parent, WNode * child)\n'
p1528
V\u000avoid AddChild(WNode *parent,WNode *child)\u000a\u000a{\u000a  uint uVar1;\u000a  _WNode **pp_Var2;\u000a  \u000a  uVar1 = parent->alloc_children;\u000a  if (uVar1 <= parent->num_children) {\u000a    parent->alloc_children = uVar1 + 10;\u000a    pp_Var2 = (_WNode **)XtRealloc(parent->children,(ulong)(uVar1 * 8 + 0x50));\u000a    parent->children = pp_Var2;\u000a  }\u000a  *(WNode **)(parent->children + (ulong)parent->num_children) = child;\u000a  parent->num_children = parent->num_children + 1;\u000a  *(WNode **)&child->parent = parent;\u000a  return;\u000a}\u000a\u000a
p1529
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nMOV EAX,dword ptr [RBX + 0x3c]\nCMP dword ptr [RBX + 0x38],EAX\nJC 0x004093fc\nLEA ECX,[RAX + 0xa]\nMOV dword ptr [RBX + 0x3c],ECX\nMOV RDI,qword ptr [RBX + 0x28]\nLEA ESI,[0x50 + RAX*0x8]\nCALL 0x004028f0\nMOV qword ptr [RBX + 0x28],RAX\nMOV RAX,qword ptr [RBX + 0x28]\nMOV ECX,dword ptr [RBX + 0x38]\nMOV qword ptr [RAX + RCX*0x8],R14\nINC dword ptr [RBX + 0x38]\nMOV qword ptr [R14 + 0x20],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1530
S'41 56\n53\n50\n49 89 f6\n48 89 fb\n8b 43 3c\n39 43 38\n72 1a\n8d 48 0a\n89 4b 3c\n48 8b 7b 28\n8d 34 c5 50 00 00 00\ne8 f8 94 ff ff\n48 89 43 28\n48 8b 43 28\n8b 4b 38\n4c 89 34 c8\nff 43 38\n49 89 5e 20\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1531
S'.text:00000000004093d0\n.text:00000000004093d2\n.text:00000000004093d3\n.text:00000000004093d4\n.text:00000000004093d7\n.text:00000000004093da\n.text:00000000004093dd\n.text:00000000004093e0\n.text:00000000004093e2\n.text:00000000004093e5\n.text:00000000004093e8\n.text:00000000004093ec\n.text:00000000004093f3\n.text:00000000004093f8\n.text:00000000004093fc\n.text:0000000000409400\n.text:0000000000409403\n.text:0000000000409407\n.text:000000000040940a\n.text:000000000040940e\n.text:0000000000409412\n.text:0000000000409413\n.text:0000000000409415\n'
p1532
tp1533
sS'XFlush'
p1534
(S'\n__stdcall XFlush()\n'
p1535
V\u000avoid XFlush(void)\u000a\u000a{\u000a  (*(code *)PTR_XFlush_0060d2c0)();\u000a  return;\u000a}\u000a\u000a
p1536
S'JMP qword ptr [0x0060d2c0]\n'
p1537
S'ff 25 6a a7 20 00\n'
p1538
S'.plt:0000000000402b50\n'
p1539
tp1540
sS'InitSetValues'
p1541
(S'\n__stdcall InitSetValues(Widget w, XtPointer client_data, XtPointer call_data)\n'
p1542
V\u000avoid InitSetValues(Widget w,XtPointer client_data,XtPointer call_data)\u000a\u000a{\u000a  char cVar1;\u000a  \u000a  cVar1 = _XtCheckSubclassFlag();\u000a  if (cVar1 == 0) {\u000a    w = (Widget)XtParent(w);\u000a  }\u000a  PopupSetValues(w,(XEvent *)0x0);\u000a  return;\u000a}\u000a\u000a
p1543
S'PUSH RBX\nMOV RBX,RDI\nMOV ESI,0x4\nCALL 0x00402aa0\nTEST AL,AL\nJNZ 0x00404cad\nMOV RDI,RBX\nCALL 0x00402c00\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nPOP RBX\nJMP 0x00405b50\n'
p1544
S'53\n48 89 fb\nbe 04 00 00 00\ne8 02 de ff ff\n84 c0\n75 0b\n48 89 df\ne8 56 df ff ff\n48 89 c3\n31 f6\n48 89 df\n5b\ne9 98 0e 00 00\n'
p1545
S'.text:0000000000404c90\n.text:0000000000404c91\n.text:0000000000404c94\n.text:0000000000404c99\n.text:0000000000404c9e\n.text:0000000000404ca0\n.text:0000000000404ca2\n.text:0000000000404ca5\n.text:0000000000404caa\n.text:0000000000404cad\n.text:0000000000404caf\n.text:0000000000404cb2\n.text:0000000000404cb3\n'
p1546
tp1547
sS'_start'
p1548
(S'\n__stdcall _start()\n'
p1549
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_0060cff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1550
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x409490\nMOV RCX,0x409420\nMOV RDI,0x404250\nCALL qword ptr [0x0060cff0]\nHLT\n'
p1551
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 90 94 40 00\n48 c7 c1 20 94 40 00\n48 c7 c7 50 42 40 00\nff 15 16 a3 20 00\nf4\n'
p1552
S'.text:0000000000402cb0\n.text:0000000000402cb2\n.text:0000000000402cb5\n.text:0000000000402cb6\n.text:0000000000402cb9\n.text:0000000000402cbd\n.text:0000000000402cbe\n.text:0000000000402cbf\n.text:0000000000402cc6\n.text:0000000000402ccd\n.text:0000000000402cd4\n.text:0000000000402cda\n'
p1553
tp1554
sS'XtScreenOfObject'
p1555
(S'\n__stdcall XtScreenOfObject()\n'
p1556
V\u000avoid XtScreenOfObject(void)\u000a\u000a{\u000a  (*(code *)PTR_XtScreenOfObject_0060d288)();\u000a  return;\u000a}\u000a\u000a
p1557
S'JMP qword ptr [0x0060d288]\n'
p1558
S'ff 25 a2 a7 20 00\n'
p1559
S'.plt:0000000000402ae0\n'
p1560
tp1561
sS'_TreeRelabelNode'
p1562
(S'\n__stdcall _TreeRelabelNode(WNode * node)\n'
p1563
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000avoid _TreeRelabelNode(WNode *node)\u000a\u000a{\u000a  int iVar1;\u000a  char in_DL;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  undefined4 in_ESI;\u000a  Arg args [1];\u000a  char buf [30];\u000a  undefined8 local_78;\u000a  char **local_70;\u000a  char *local_60;\u000a  undefined4 local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  undefined4 local_48;\u000a  \u000a  switch(in_ESI) {\u000a  case 0:\u000a    local_70 = (char **)node->class;\u000a    break;\u000a  case 2:\u000a    local_70 = (char **)&local_58;\u000a    sprintf((char *)local_70,"id: 0x%lx",node->id);\u000a    break;\u000a  case 3:\u000a    if (node->window == 2) {\u000a      local_58 = "non windowed object"._0_4_;\u000a      uStack84 = "non windowed object"._4_4_;\u000a      uStack80 = "non windowed object"._8_4_;\u000a      uStack76 = "non windowed object"._12_4_;\u000a      local_48 = 0x746365;\u000a    }\u000a    else {\u000a      if (node->window == 0) {\u000a        local_58 = "unrealized widget"._0_4_;\u000a        uStack84 = "unrealized widget"._4_4_;\u000a        uStack80 = "unrealized widget"._8_4_;\u000a        uStack76 = "unrealized widget"._12_4_;\u000a        local_48 = CONCAT22(local_48._2_2_,0x74);\u000a      }\u000a      else {\u000a        sprintf((char *)&local_58,"win: 0x%lx");\u000a      }\u000a    }\u000a    local_70 = (char **)&local_58;\u000a    break;\u000a  case 4:\u000a    local_78 = 0x60c52d;\u000a    local_70 = &local_60;\u000a    XtGetValues(node->widget,&local_78,1);\u000a    if ((local_60 != (char *)0x0) && (iVar1 = strcmp(local_60,node->name), iVar1 == 0)) {\u000a      local_70 = (char **)node->class;\u000a      break;\u000a    }\u000a  case 1:\u000a    local_70 = (char **)node->name;\u000a    break;\u000a  default:\u000a    SetMessage(global_screen_data.info_label,res_labels[32]);\u000a    return;\u000a  }\u000a  local_78 = 0x60c52d;\u000a  XtSetValues(node->widget,&local_78,1);\u000a  if ((in_DL != 0) && (node->num_children != 0)) {\u000a    uVar3 = 0;\u000a    do {\u000a      _TreeRelabelNode((WNode *)node->children[uVar3]);\u000a      uVar2 = uVar3 + 1;\u000a      uVar3 = uVar2 & 0xffffffff;\u000a    } while ((uint)uVar2 < node->num_children);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1564
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x48\nMOV R14D,EDX\nMOV R12D,ESI\nMOV R13,RDI\nCMP R12D,0x4\nJA 0x00408d28\nMOV EAX,R12D\nJMP qword ptr [0x40a338 + RAX*0x8]\nMOV qword ptr [RSP],0x60c52d\nMOV R15,qword ptr [R13 + 0x8]\nJMP 0x00408e16\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e100]\nCALL 0x00406120\nJMP 0x00408e5b\nLEA R15,[RSP + 0x20]\nMOV RDX,qword ptr [R13 + 0x10]\nMOV ESI,0x40a3e2\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00402bf0\nMOV qword ptr [RSP],0x60c52d\nJMP 0x00408e16\nMOV RDX,qword ptr [R13 + 0x18]\nCMP RDX,0x2\nJZ 0x00408dd1\nTEST RDX,RDX\nJNZ 0x00408de7\nMOVUPS XMM0,xmmword ptr [0x0040a3ec]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOV word ptr [RSP + 0x30],0x74\nJMP 0x00408df8\nMOV qword ptr [RSP],0x60c52d\nLEA RAX,[RSP + 0x18]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [R13 + 0x40]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x004027d0\nMOV RDI,qword ptr [RSP + 0x18]\nTEST RDI,RDI\nJZ 0x00408dc3\nMOV RSI,qword ptr [R13]\nCALL 0x00402940\nTEST EAX,EAX\nJZ 0x00408e07\nMOV qword ptr [RSP],0x60c52d\nMOV R15,qword ptr [R13]\nJMP 0x00408e16\nMOVUPS XMM0,xmmword ptr [0x0040a3fe]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOV dword ptr [RSP + 0x30],0x746365\nJMP 0x00408df8\nLEA RDI,[RSP + 0x20]\nMOV ESI,0x40a412\nXOR EAX,EAX\nCALL 0x00402bf0\nLEA R15,[RSP + 0x20]\nMOV qword ptr [RSP],0x60c52d\nJMP 0x00408e16\nMOV qword ptr [RSP],0x60c52d\nLEA RAX,[R13 + 0x8]\nMOV R15,qword ptr [RAX]\nMOV qword ptr [RSP + 0x8],R15\nMOV RDI,qword ptr [R13 + 0x40]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00402790\nTEST R14B,R14B\nJZ 0x00408e5b\nCMP dword ptr [R13 + 0x38],0x0\nJZ 0x00408e5b\nXOR EBX,EBX\nMOVSX EBP,R14B\nNOP\nMOV RAX,qword ptr [R13 + 0x28]\nMOV RDI,qword ptr [RAX + RBX*0x8]\nMOV ESI,R12D\nMOV EDX,EBP\nCALL 0x00408cf0\nINC RBX\nCMP EBX,dword ptr [R13 + 0x38]\nJC 0x00408e40\nADD RSP,0x48\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1565
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 48\n41 89 d6\n41 89 f4\n49 89 fd\n41 83 fc 04\n77 1b\n44 89 e0\nff 24 c5 38 a3 40 00\n48 c7 04 24 2d c5 60 00\n4d 8b 7d 08\ne9 ee 00 00 00\n48 8b 3d c9 52 20 00\n48 8b 35 ca 53 20 00\ne8 e5 d3 ff ff\ne9 1b 01 00 00\n4c 8d 7c 24 20\n49 8b 55 10\nbe e2 a3 40 00\n31 c0\n4c 89 ff\ne8 98 9e ff ff\n48 c7 04 24 2d c5 60 00\ne9 b1 00 00 00\n49 8b 55 18\n48 83 fa 02\n74 62\n48 85 d2\n75 73\n0f 10 05 71 16 00 00\n0f 29 44 24 20\n66 c7 44 24 30 74 00\neb 6f\n48 c7 04 24 2d c5 60 00\n48 8d 44 24 18\n48 89 44 24 08\n49 8b 7d 40\n48 89 e6\nba 01 00 00 00\ne8 24 9a ff ff\n48 8b 7c 24 18\n48 85 ff\n74 0d\n49 8b 75 00\ne8 81 9b ff ff\n85 c0\n74 44\n48 c7 04 24 2d c5 60 00\n4d 8b 7d 00\neb 45\n0f 10 05 26 16 00 00\n0f 29 44 24 20\nc7 44 24 30 65 63 74 00\neb 11\n48 8d 7c 24 20\nbe 12 a4 40 00\n31 c0\ne8 f8 9d ff ff\n4c 8d 7c 24 20\n48 c7 04 24 2d c5 60 00\neb 0f\n48 c7 04 24 2d c5 60 00\n49 8d 45 08\n4c 8b 38\n4c 89 7c 24 08\n49 8b 7d 40\n48 89 e6\nba 01 00 00 00\ne8 64 99 ff ff\n45 84 f6\n74 2a\n41 83 7d 38 00\n74 23\n31 db\n41 0f be ee\n66 90\n49 8b 45 28\n48 8b 3c d8\n44 89 e6\n89 ea\ne8 9e fe ff ff\n48 ff c3\n41 3b 5d 38\n72 e5\n48 83 c4 48\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1566
S'.text:0000000000408cf0\n.text:0000000000408cf1\n.text:0000000000408cf3\n.text:0000000000408cf5\n.text:0000000000408cf7\n.text:0000000000408cf9\n.text:0000000000408cfa\n.text:0000000000408cfe\n.text:0000000000408d01\n.text:0000000000408d04\n.text:0000000000408d07\n.text:0000000000408d0b\n.text:0000000000408d0d\n.text:0000000000408d10\n.text:0000000000408d17\n.text:0000000000408d1f\n.text:0000000000408d23\n.text:0000000000408d28\n.text:0000000000408d2f\n.text:0000000000408d36\n.text:0000000000408d3b\n.text:0000000000408d40\n.text:0000000000408d45\n.text:0000000000408d49\n.text:0000000000408d4e\n.text:0000000000408d50\n.text:0000000000408d53\n.text:0000000000408d58\n.text:0000000000408d60\n.text:0000000000408d65\n.text:0000000000408d69\n.text:0000000000408d6d\n.text:0000000000408d6f\n.text:0000000000408d72\n.text:0000000000408d74\n.text:0000000000408d7b\n.text:0000000000408d80\n.text:0000000000408d87\n.text:0000000000408d89\n.text:0000000000408d91\n.text:0000000000408d96\n.text:0000000000408d9b\n.text:0000000000408d9f\n.text:0000000000408da2\n.text:0000000000408da7\n.text:0000000000408dac\n.text:0000000000408db1\n.text:0000000000408db4\n.text:0000000000408db6\n.text:0000000000408dba\n.text:0000000000408dbf\n.text:0000000000408dc1\n.text:0000000000408dc3\n.text:0000000000408dcb\n.text:0000000000408dcf\n.text:0000000000408dd1\n.text:0000000000408dd8\n.text:0000000000408ddd\n.text:0000000000408de5\n.text:0000000000408de7\n.text:0000000000408dec\n.text:0000000000408df1\n.text:0000000000408df3\n.text:0000000000408df8\n.text:0000000000408dfd\n.text:0000000000408e05\n.text:0000000000408e07\n.text:0000000000408e0f\n.text:0000000000408e13\n.text:0000000000408e16\n.text:0000000000408e1b\n.text:0000000000408e1f\n.text:0000000000408e22\n.text:0000000000408e27\n.text:0000000000408e2c\n.text:0000000000408e2f\n.text:0000000000408e31\n.text:0000000000408e36\n.text:0000000000408e38\n.text:0000000000408e3a\n.text:0000000000408e3e\n.text:0000000000408e40\n.text:0000000000408e44\n.text:0000000000408e48\n.text:0000000000408e4b\n.text:0000000000408e4d\n.text:0000000000408e52\n.text:0000000000408e55\n.text:0000000000408e59\n.text:0000000000408e5b\n.text:0000000000408e5f\n.text:0000000000408e60\n.text:0000000000408e62\n.text:0000000000408e64\n.text:0000000000408e66\n.text:0000000000408e68\n.text:0000000000408e69\n'
p1567
tp1568
sS'TreeRelabel'
p1569
(S'\n__stdcall TreeRelabel(Widget w, XtPointer client_data, XtPointer call_data)\n'
p1570
V\u000avoid TreeRelabel(Widget w,XtPointer client_data,XtPointer call_data)\u000a\u000a{\u000a  _TreeRelabel(global_tree_info);\u000a  return;\u000a}\u000a\u000a
p1571
S'MOV RDI,qword ptr [0x0060dec8]\nJMP 0x00408ca0\n'
p1572
S'48 8b 3d f1 91 20 00\ne9 c4 3f 00 00\n'
p1573
S'.text:0000000000404cd0\n.text:0000000000404cd7\n'
p1574
tp1575
sS'XtAddCallback'
p1576
(S'\n__stdcall XtAddCallback()\n'
p1577
V\u000avoid XtAddCallback(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAddCallback_0060d350)();\u000a  return;\u000a}\u000a\u000a
p1578
S'JMP qword ptr [0x0060d350]\n'
p1579
S'ff 25 da a6 20 00\n'
p1580
S'.plt:0000000000402c70\n'
p1581
tp1582
sS'ParseResources'
p1583
(S'\n__stdcall ParseResources(GetResourcesInfo * info, char * * error)\n'
p1584
V\u000aWidgetResources * ParseResources(GetResourcesInfo *info,char **error)\u000a\u000a{\u000a  int iVar1;\u000a  ResourceInfo *pRVar2;\u000a  WidgetResourceInfo *resource;\u000a  WidgetResources *pWVar3;\u000a  long lVar4;\u000a  WidgetResourceInfo *resource_00;\u000a  long lVar5;\u000a  char buf [8192];\u000a  char local_2038 [8200];\u000a  \u000a  pWVar3 = (WidgetResources *)XtMalloc(0x20);\u000a  resource_00 = (WidgetResourceInfo *)XtMalloc((ulong)((uint)info->num_resources * 0x18));\u000a  pWVar3->normal = resource_00;\u000a  pWVar3->constraint = (WidgetResourceInfo *)&resource_00[(ulong)info->num_resources - 1].type;\u000a  *(undefined8 *)pWVar3 = 0;\u000a  if (info->num_resources != 0) {\u000a    lVar4 = 0;\u000a    lVar5 = 0;\u000a    do {\u000a      iVar1 = *(int *)((long)&info->res_info->res_type + lVar4);\u000a      if (iVar1 == 1) {\u000a        pWVar3->num_constraint = pWVar3->num_constraint + 1;\u000a        pRVar2 = info->res_info;\u000a        resource = pWVar3->constraint;\u000a        pWVar3->constraint = (WidgetResourceInfo *)&resource[-1].type;\u000a        AddResource((ResourceInfo *)((long)&pRVar2->res_type + lVar4),resource);\u000a      }\u000a      else {\u000a        if (iVar1 == 0) {\u000a          pWVar3->num_normal = pWVar3->num_normal + 1;\u000a          AddResource((ResourceInfo *)((long)&info->res_info->res_type + lVar4),resource_00);\u000a          resource_00 = resource_00 + 1;\u000a        }\u000a        else {\u000a          sprintf(local_2038,"Unknown resource type %d\u005cn",\u000a                  (ulong)*(uint *)((long)&info->res_info->res_type + lVar4));\u000a          AddString(error,local_2038);\u000a        }\u000a      }\u000a      lVar5 = lVar5 + 1;\u000a      lVar4 = lVar4 + 0x20;\u000a    } while (lVar5 < (long)(ulong)info->num_resources);\u000a  }\u000a  qsort(pWVar3->normal,(long)pWVar3->num_normal,0x18,CompareResourceEntries);\u000a  if (pWVar3->num_constraint < 1) {\u000a    pWVar3->constraint = (WidgetResourceInfo *)0x0;\u000a  }\u000a  else {\u000a    resource_00 = pWVar3->constraint;\u000a    pWVar3->constraint = resource_00 + 1;\u000a    qsort(resource_00 + 1,(long)pWVar3->num_constraint,0x18,CompareResourceEntries);\u000a  }\u000a  return pWVar3;\u000a}\u000a\u000a
p1585
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2018\nMOV qword ptr [RSP + 0x8],RSI\nMOV RBX,RDI\nMOV EDI,0x20\nCALL 0x00402760\nMOV R15,RAX\nMOVZX EAX,word ptr [RBX + 0x28]\nSHL EAX,0x3\nLEA EDI,[RAX + RAX*0x2]\nCALL 0x00402760\nMOV R12,RAX\nMOV qword ptr [R15 + 0x8],R12\nMOVZX EAX,word ptr [RBX + 0x28]\nLEA RAX,[RAX + RAX*0x2]\nLEA RAX,[R12 + RAX*0x8 + -0x18]\nMOV qword ptr [R15 + 0x10],RAX\nMOV qword ptr [R15],0x0\nCMP word ptr [RBX + 0x28],0x0\nJZ 0x00406bb7\nLEA R13,[RSP + 0x10]\nXOR EBP,EBP\nXOR R14D,R14D\nNOP dword ptr [RAX]\nMOV RAX,qword ptr [RBX + 0x30]\nMOV EAX,dword ptr [RAX + RBP*0x1]\nCMP EAX,0x1\nJZ 0x00406b60\nTEST EAX,EAX\nJNZ 0x00406b80\nINC dword ptr [R15]\nMOV RDI,qword ptr [RBX + 0x30]\nADD RDI,RBP\nMOV RSI,R12\nLEA R12,[R12 + 0x18]\nCALL 0x00406ff0\nJMP 0x00406ba3\nINC dword ptr [R15 + 0x4]\nMOV RDI,qword ptr [RBX + 0x30]\nADD RDI,RBP\nMOV RSI,qword ptr [R15 + 0x10]\nLEA RAX,[RSI + -0x18]\nMOV qword ptr [R15 + 0x10],RAX\nCALL 0x00406ff0\nJMP 0x00406ba3\nMOV RAX,qword ptr [RBX + 0x30]\nMOV EDX,dword ptr [RAX + RBP*0x1]\nMOV ESI,0x409ce8\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00402bf0\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,R13\nCALL 0x00406260\nINC R14\nMOVZX EAX,word ptr [RBX + 0x28]\nADD RBP,0x20\nCMP R14,RAX\nJL 0x00406b30\nMOV RDI,qword ptr [R15 + 0x8]\nMOVSXD RSI,dword ptr [R15]\nMOV EDX,0x18\nMOV ECX,0x407020\nCALL 0x00402720\nCMP dword ptr [R15 + 0x4],0x0\nJLE 0x00406bf5\nMOV RDI,qword ptr [R15 + 0x10]\nADD RDI,0x18\nMOV qword ptr [R15 + 0x10],RDI\nMOVSXD RSI,dword ptr [R15 + 0x4]\nMOV EDX,0x18\nMOV ECX,0x407020\nCALL 0x00402720\nJMP 0x00406bfd\nMOV qword ptr [R15 + 0x10],0x0\nMOV RAX,R15\nADD RSP,0x2018\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1586
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 20 00 00\n48 89 74 24 08\n48 89 fb\nbf 20 00 00 00\ne8 7d bc ff ff\n49 89 c7\n0f b7 43 28\nc1 e0 03\n8d 3c 40\ne8 6b bc ff ff\n49 89 c4\n4d 89 67 08\n0f b7 43 28\n48 8d 04 40\n49 8d 44 c4 e8\n49 89 47 10\n49 c7 07 00 00 00 00\n66 83 7b 28 00\n0f 84 98 00 00 00\n4c 8d 6c 24 10\n31 ed\n45 31 f6\n0f 1f 80 00 00 00 00\n48 8b 43 30\n8b 04 28\n83 f8 01\n74 24\n85 c0\n75 40\n41 ff 07\n48 8b 7b 30\n48 01 ef\n4c 89 e6\n4d 8d 64 24 18\ne8 99 04 00 00\neb 4a\n41 ff 47 04\n48 8b 7b 30\n48 01 ef\n49 8b 77 10\n48 8d 46 e8\n49 89 47 10\ne8 74 04 00 00\neb 25\n48 8b 43 30\n8b 14 28\nbe e8 9c 40 00\n31 c0\n4c 89 ef\ne8 5a c0 ff ff\n48 8b 7c 24 08\n4c 89 ee\ne8 bd f6 ff ff\n49 ff c6\n0f b7 43 28\n48 83 c5 20\n49 39 c6\n0f 8c 79 ff ff ff\n49 8b 7f 08\n49 63 37\nba 18 00 00 00\nb9 20 70 40 00\ne8 53 bb ff ff\n41 83 7f 04 00\n7e 21\n49 8b 7f 10\n48 83 c7 18\n49 89 7f 10\n49 63 77 04\nba 18 00 00 00\nb9 20 70 40 00\ne8 2d bb ff ff\neb 08\n49 c7 47 10 00 00 00 00\n4c 89 f8\n48 81 c4 18 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1587
S'.text:0000000000406ac0\n.text:0000000000406ac1\n.text:0000000000406ac3\n.text:0000000000406ac5\n.text:0000000000406ac7\n.text:0000000000406ac9\n.text:0000000000406aca\n.text:0000000000406ad1\n.text:0000000000406ad6\n.text:0000000000406ad9\n.text:0000000000406ade\n.text:0000000000406ae3\n.text:0000000000406ae6\n.text:0000000000406aea\n.text:0000000000406aed\n.text:0000000000406af0\n.text:0000000000406af5\n.text:0000000000406af8\n.text:0000000000406afc\n.text:0000000000406b00\n.text:0000000000406b04\n.text:0000000000406b09\n.text:0000000000406b0d\n.text:0000000000406b14\n.text:0000000000406b19\n.text:0000000000406b1f\n.text:0000000000406b24\n.text:0000000000406b26\n.text:0000000000406b29\n.text:0000000000406b30\n.text:0000000000406b34\n.text:0000000000406b37\n.text:0000000000406b3a\n.text:0000000000406b3c\n.text:0000000000406b3e\n.text:0000000000406b40\n.text:0000000000406b43\n.text:0000000000406b47\n.text:0000000000406b4a\n.text:0000000000406b4d\n.text:0000000000406b52\n.text:0000000000406b57\n.text:0000000000406b60\n.text:0000000000406b64\n.text:0000000000406b68\n.text:0000000000406b6b\n.text:0000000000406b6f\n.text:0000000000406b73\n.text:0000000000406b77\n.text:0000000000406b7c\n.text:0000000000406b80\n.text:0000000000406b84\n.text:0000000000406b87\n.text:0000000000406b8c\n.text:0000000000406b8e\n.text:0000000000406b91\n.text:0000000000406b96\n.text:0000000000406b9b\n.text:0000000000406b9e\n.text:0000000000406ba3\n.text:0000000000406ba6\n.text:0000000000406baa\n.text:0000000000406bae\n.text:0000000000406bb1\n.text:0000000000406bb7\n.text:0000000000406bbb\n.text:0000000000406bbe\n.text:0000000000406bc3\n.text:0000000000406bc8\n.text:0000000000406bcd\n.text:0000000000406bd2\n.text:0000000000406bd4\n.text:0000000000406bd8\n.text:0000000000406bdc\n.text:0000000000406be0\n.text:0000000000406be4\n.text:0000000000406be9\n.text:0000000000406bee\n.text:0000000000406bf3\n.text:0000000000406bf5\n.text:0000000000406bfd\n.text:0000000000406c00\n.text:0000000000406c07\n.text:0000000000406c08\n.text:0000000000406c0a\n.text:0000000000406c0c\n.text:0000000000406c0e\n.text:0000000000406c10\n.text:0000000000406c11\n'
p1588
tp1589
sS'CompareResourceEntries'
p1590
(S'\n__stdcall CompareResourceEntries(void * e1, void * e2)\n'
p1591
V\u000aint CompareResourceEntries(void *e1,void *e2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = strcmp(*(char **)e1,*(char **)e2);\u000a  return iVar1;\u000a}\u000a\u000a
p1592
S'MOV RDI,qword ptr [RDI]\nMOV RSI,qword ptr [RSI]\nJMP 0x00402940\n'
p1593
S'48 8b 3f\n48 8b 36\ne9 15 b9 ff ff\n'
p1594
S'.text:0000000000407020\n.text:0000000000407023\n.text:0000000000407026\n'
p1595
tp1596
sS'GetAllStrings'
p1597
(S'\n__stdcall GetAllStrings(char * in, char * * * out, int * num)\n'
p1598
V\u000avoid GetAllStrings(char *in,char ***out,int *num)\u000a\u000a{\u000a  char *__dest;\u000a  size_t sVar1;\u000a  long lVar2;\u000a  char *__s;\u000a  int *in_RCX;\u000a  int iVar3;\u000a  long lVar4;\u000a  int __c;\u000a  \u000a  __s = in + 1;\u000a  if (*in != (char)((ulong)out & 0xffffffff)) {\u000a    __s = in;\u000a  }\u000a  *in_RCX = 1;\u000a  __dest = strchr(__s,(int)out);\u000a  __c = (int)((ulong)out & 0xffffffff);\u000a  if (__dest == (char *)0x0) {\u000a    iVar3 = 9;\u000a  }\u000a  else {\u000a    iVar3 = 1;\u000a    do {\u000a      iVar3 = iVar3 + 1;\u000a      *in_RCX = iVar3;\u000a      __dest = strchr(__dest + 1,__c);\u000a    } while (__dest != (char *)0x0);\u000a    iVar3 = iVar3 * 8 + 1;\u000a  }\u000a  sVar1 = strlen(__s);\u000a  lVar2 = XtMalloc((ulong)(uint)(iVar3 + (int)sVar1));\u000a  *(long *)num = lVar2;\u000a  __dest = (char *)(lVar2 + (long)*in_RCX * 8);\u000a  strcpy(__dest,__s);\u000a  **(char ***)num = __dest;\u000a  __s = strchr(__dest,__c);\u000a  if (__s == (char *)0x0) {\u000a    lVar2 = 0;\u000a  }\u000a  else {\u000a    lVar4 = 8;\u000a    lVar2 = 0;\u000a    do {\u000a      *__s = 0;\u000a      *(char **)(*(long *)num + lVar4) = __s + 1;\u000a      __s = strchr(__s + 1,__c);\u000a      lVar4 = lVar4 + 8;\u000a      lVar2 = lVar2 + 0x100000000;\u000a    } while (__s != (char *)0x0);\u000a    lVar2 = lVar2 >> 0x20;\u000a  }\u000a  if (**(char **)(*(long *)num + lVar2 * 8) == 0) {\u000a    *in_RCX = *in_RCX + -1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1599
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R13,RDX\nMOV R15D,ESI\nLEA RBX,[RDI + 0x1]\nCMP byte ptr [RDI],R15B\nCMOVNZ RBX,RDI\nMOV dword ptr [R14],0x1\nMOV RDI,RBX\nCALL 0x00402840\nTEST RAX,RAX\nJZ 0x004061b5\nMOV EBP,0x1\nNOP dword ptr [RAX + RAX*0x1]\nINC RAX\nINC EBP\nMOV dword ptr [R14],EBP\nMOV RDI,RAX\nMOV ESI,R15D\nCALL 0x00402840\nTEST RAX,RAX\nJNZ 0x00406190\nMOVSXD RAX,EBP\nLEA R12,[0x1 + RAX*0x8]\nJMP 0x004061bb\nMOV R12D,0x9\nMOV RDI,RBX\nCALL 0x004027f0\nADD R12D,EAX\nMOV EDI,R12D\nCALL 0x00402760\nMOV qword ptr [R13],RAX\nMOVSXD RCX,dword ptr [R14]\nLEA R12,[RAX + RCX*0x8]\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x004026a0\nMOV RAX,qword ptr [R13]\nMOV qword ptr [RAX],R12\nMOV RDI,R12\nMOV ESI,R15D\nCALL 0x00402840\nTEST RAX,RAX\nJZ 0x0040623b\nMOV EBP,0x8\nXOR EBX,EBX\nMOV R12,0x100000000\nNOP dword ptr [RAX]\nMOV byte ptr [RAX],0x0\nINC RAX\nMOV RCX,qword ptr [R13]\nMOV qword ptr [RCX + RBP*0x1],RAX\nMOV RDI,RAX\nMOV ESI,R15D\nCALL 0x00402840\nADD RBP,0x8\nADD RBX,R12\nTEST RAX,RAX\nJNZ 0x00406210\nSAR RBX,0x20\nJMP 0x0040623d\nXOR EBX,EBX\nMOV RAX,qword ptr [R13]\nMOV RAX,qword ptr [RAX + RBX*0x8]\nCMP byte ptr [RAX],0x0\nJNZ 0x0040624d\nDEC dword ptr [R14]\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1600
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d5\n41 89 f7\n48 8d 5f 01\n44 38 3f\n48 0f 45 df\n41 c7 06 01 00 00 00\n48 89 df\ne8 c2 c6 ff ff\n48 85 c0\n74 32\nbd 01 00 00 00\n0f 1f 84 00 00 00 00 00\n48 ff c0\nff c5\n41 89 2e\n48 89 c7\n44 89 fe\ne8 9d c6 ff ff\n48 85 c0\n75 e8\n48 63 c5\n4c 8d 24 c5 01 00 00 00\neb 06\n41 bc 09 00 00 00\n48 89 df\ne8 2d c6 ff ff\n41 01 c4\n44 89 e7\ne8 92 c5 ff ff\n49 89 45 00\n49 63 0e\n4c 8d 24 c8\n4c 89 e7\n48 89 de\ne8 bc c4 ff ff\n49 8b 45 00\n4c 89 20\n4c 89 e7\n44 89 fe\ne8 4a c6 ff ff\n48 85 c0\n74 40\nbd 08 00 00 00\n31 db\n49 bc 00 00 00 00 01 00 00 00\n0f 1f 40 00\nc6 00 00\n48 ff c0\n49 8b 4d 00\n48 89 04 29\n48 89 c7\n44 89 fe\ne8 17 c6 ff ff\n48 83 c5 08\n4c 01 e3\n48 85 c0\n75 db\n48 c1 fb 20\neb 02\n31 db\n49 8b 45 00\n48 8b 04 d8\n80 38 00\n75 03\n41 ff 0e\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1601
S'.text:0000000000406150\n.text:0000000000406151\n.text:0000000000406153\n.text:0000000000406155\n.text:0000000000406157\n.text:0000000000406159\n.text:000000000040615a\n.text:000000000040615b\n.text:000000000040615e\n.text:0000000000406161\n.text:0000000000406164\n.text:0000000000406168\n.text:000000000040616b\n.text:000000000040616f\n.text:0000000000406176\n.text:0000000000406179\n.text:000000000040617e\n.text:0000000000406181\n.text:0000000000406183\n.text:0000000000406188\n.text:0000000000406190\n.text:0000000000406193\n.text:0000000000406195\n.text:0000000000406198\n.text:000000000040619b\n.text:000000000040619e\n.text:00000000004061a3\n.text:00000000004061a6\n.text:00000000004061a8\n.text:00000000004061ab\n.text:00000000004061b3\n.text:00000000004061b5\n.text:00000000004061bb\n.text:00000000004061be\n.text:00000000004061c3\n.text:00000000004061c6\n.text:00000000004061c9\n.text:00000000004061ce\n.text:00000000004061d2\n.text:00000000004061d5\n.text:00000000004061d9\n.text:00000000004061dc\n.text:00000000004061df\n.text:00000000004061e4\n.text:00000000004061e8\n.text:00000000004061eb\n.text:00000000004061ee\n.text:00000000004061f1\n.text:00000000004061f6\n.text:00000000004061f9\n.text:00000000004061fb\n.text:0000000000406200\n.text:0000000000406202\n.text:000000000040620c\n.text:0000000000406210\n.text:0000000000406213\n.text:0000000000406216\n.text:000000000040621a\n.text:000000000040621e\n.text:0000000000406221\n.text:0000000000406224\n.text:0000000000406229\n.text:000000000040622d\n.text:0000000000406230\n.text:0000000000406233\n.text:0000000000406235\n.text:0000000000406239\n.text:000000000040623b\n.text:000000000040623d\n.text:0000000000406241\n.text:0000000000406245\n.text:0000000000406248\n.text:000000000040624a\n.text:000000000040624d\n.text:0000000000406251\n.text:0000000000406252\n.text:0000000000406254\n.text:0000000000406256\n.text:0000000000406258\n.text:000000000040625a\n.text:000000000040625b\n'
p1602
tp1603
sS'HandleGetResources'
p1604
(S'\n__stdcall HandleGetResources(Event * event)\n'
p1605
V\u000achar * HandleGetResources(Event *event)\u000a\u000a{\u000a  long lVar1;\u000a  WNode *node;\u000a  WidgetResources *pWVar2;\u000a  long lVar3;\u000a  long lVar4;\u000a  char *add;\u000a  char buf [8192];\u000a  char *local_2040;\u000a  char local_2038 [8200];\u000a  \u000a  local_2040 = (char *)0x0;\u000a  if (*(short *)(*event + 4) != 0) {\u000a    lVar3 = 0;\u000a    lVar4 = 0;\u000a    do {\u000a      node = FindNode((WNode *)global_tree_info->top_node,\u000a                      *(ulong **)(*(long *)(*event + 8) + 8 + lVar3));\u000a      if (node == (WNode *)0x0) {\u000a        sprintf(local_2038,res_labels[16]);\u000a        add = local_2038;\u000aLAB_00406997:\u000a        AddString(&local_2040,add);\u000a      }\u000a      else {\u000a        if (node->resources != (WidgetResources *)0x0) {\u000a          FreeResources(node->resources);\u000a        }\u000a        lVar1 = *(long *)(*event + 8);\u000a        if (*(char *)(lVar1 + 0x18 + lVar3) != 0) {\u000a          AddString(&local_2040,*(char **)(lVar1 + 0x20 + lVar3));\u000a          add = "\u005cn";\u000a          goto LAB_00406997;\u000a        }\u000a        pWVar2 = ParseResources((GetResourcesInfo *)(lVar1 + lVar3),&local_2040);\u000a        node->resources = pWVar2;\u000a        CreateResourceBox(node,&local_2040);\u000a      }\u000a      lVar4 = lVar4 + 1;\u000a      lVar3 = lVar3 + 0x38;\u000a    } while (lVar4 < (long)(ulong)*(ushort *)(*event + 4));\u000a  }\u000a  return local_2040;\u000a}\u000a\u000a
p1606
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2018\nMOV R12,RDI\nMOV qword ptr [RSP + 0x8],0x0\nCMP word ptr [R12 + 0x4],0x0\nJZ 0x004069d0\nLEA R14,[RSP + 0x10]\nLEA R15,[RSP + 0x8]\nXOR EBX,EBX\nXOR EBP,EBP\nNOP dword ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [0x0060dec8]\nMOV RDI,qword ptr [RAX + 0x8]\nMOV RAX,qword ptr [R12 + 0x8]\nMOV RSI,qword ptr [RAX + RBX*0x1 + 0x8]\nMOVZX EDX,word ptr [RAX + RBX*0x1]\nCALL 0x004062c0\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00406980\nMOV RDI,qword ptr [R13 + 0x48]\nTEST RDI,RDI\nJZ 0x00406954\nCALL 0x004069f0\nMOV RDI,qword ptr [R12 + 0x8]\nCMP byte ptr [RDI + RBX*0x1 + 0x18],0x0\nJZ 0x004069a0\nMOV RSI,qword ptr [RDI + RBX*0x1 + 0x20]\nMOV RDI,R15\nCALL 0x00406260\nMOV ESI,0x409a27\nMOV RDI,R15\nJMP 0x00406997\nMOV RSI,qword ptr [0x0060e080]\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00402bf0\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00406260\nJMP 0x004069ba\nADD RDI,RBX\nMOV RSI,R15\nCALL 0x00406ac0\nMOV qword ptr [R13 + 0x48],RAX\nMOV RDI,R13\nMOV RSI,R15\nCALL 0x00406c20\nINC RBP\nMOVZX EAX,word ptr [R12 + 0x4]\nADD RBX,0x38\nCMP RBP,RAX\nJL 0x00406920\nMOV RAX,qword ptr [RSP + 0x8]\nADD RSP,0x2018\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1607
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 20 00 00\n49 89 fc\n48 c7 44 24 08 00 00 00 00\n66 41 83 7c 24 04 00\n0f 84 c6 00 00 00\n4c 8d 74 24 10\n4c 8d 7c 24 08\n31 db\n31 ed\n0f 1f 84 00 00 00 00 00\n48 8b 05 a1 75 20 00\n48 8b 78 08\n49 8b 44 24 08\n48 8b 74 18 08\n0f b7 14 18\ne8 82 f9 ff ff\n49 89 c5\n4d 85 ed\n74 3a\n49 8b 7d 48\n48 85 ff\n74 05\ne8 9c 00 00 00\n49 8b 7c 24 08\n80 7c 1f 18 00\n74 40\n48 8b 74 1f 20\n4c 89 ff\ne8 f3 f8 ff ff\nbe 27 9a 40 00\n4c 89 ff\neb 20\n48 8b 35 f9 76 20 00\n31 c0\n4c 89 f7\ne8 5f c2 ff ff\n4c 89 ff\n4c 89 f6\ne8 c4 f8 ff ff\neb 1c\n48 01 df\n4c 89 fe\ne8 15 01 00 00\n49 89 45 48\n4c 89 ef\n4c 89 fe\ne8 66 02 00 00\n48 ff c5\n41 0f b7 44 24 04\n48 83 c3 38\n48 39 c5\n0f 8c 50 ff ff ff\n48 8b 44 24 08\n48 81 c4 18 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1608
S'.text:00000000004068e0\n.text:00000000004068e1\n.text:00000000004068e3\n.text:00000000004068e5\n.text:00000000004068e7\n.text:00000000004068e9\n.text:00000000004068ea\n.text:00000000004068f1\n.text:00000000004068f4\n.text:00000000004068fd\n.text:0000000000406904\n.text:000000000040690a\n.text:000000000040690f\n.text:0000000000406914\n.text:0000000000406916\n.text:0000000000406918\n.text:0000000000406920\n.text:0000000000406927\n.text:000000000040692b\n.text:0000000000406930\n.text:0000000000406935\n.text:0000000000406939\n.text:000000000040693e\n.text:0000000000406941\n.text:0000000000406944\n.text:0000000000406946\n.text:000000000040694a\n.text:000000000040694d\n.text:000000000040694f\n.text:0000000000406954\n.text:0000000000406959\n.text:000000000040695e\n.text:0000000000406960\n.text:0000000000406965\n.text:0000000000406968\n.text:000000000040696d\n.text:0000000000406972\n.text:0000000000406975\n.text:0000000000406980\n.text:0000000000406987\n.text:0000000000406989\n.text:000000000040698c\n.text:0000000000406991\n.text:0000000000406994\n.text:0000000000406997\n.text:000000000040699c\n.text:00000000004069a0\n.text:00000000004069a3\n.text:00000000004069a6\n.text:00000000004069ab\n.text:00000000004069af\n.text:00000000004069b2\n.text:00000000004069b5\n.text:00000000004069ba\n.text:00000000004069bd\n.text:00000000004069c3\n.text:00000000004069c7\n.text:00000000004069ca\n.text:00000000004069d0\n.text:00000000004069d5\n.text:00000000004069dc\n.text:00000000004069dd\n.text:00000000004069df\n.text:00000000004069e1\n.text:00000000004069e3\n.text:00000000004069e5\n.text:00000000004069e6\n'
p1609
tp1610
sS'CopyActiveNodes'
p1611
(S'\n__stdcall CopyActiveNodes(TreeInfo * tree_info)\n'
p1612
V\u000aWNode ** CopyActiveNodes(TreeInfo *tree_info)\u000a\u000a{\u000a  WNode **ppWVar1;\u000a  ulong uVar2;\u000a  \u000a  if (tree_info == (TreeInfo *)0x0) {\u000a    return (WNode **)0x0;\u000a  }\u000a  if (tree_info->num_nodes != 0) {\u000a    ppWVar1 = (WNode **)XtMalloc((ulong)(tree_info->num_nodes << 3));\u000a    if (tree_info->num_nodes != 0) {\u000a      uVar2 = 0;\u000a      do {\u000a        ppWVar1[uVar2] = tree_info->active_nodes[uVar2];\u000a        uVar2 = uVar2 + 1;\u000a      } while (uVar2 < (ulong)tree_info->num_nodes);\u000a    }\u000a    return ppWVar1;\u000a  }\u000a  return (WNode **)0x0;\u000a}\u000a\u000a
p1613
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00409069\nMOV EDI,dword ptr [RBX + 0x18]\nTEST EDI,EDI\nJZ 0x0040906d\nSHL EDI,0x3\nCALL 0x00402760\nCMP dword ptr [RBX + 0x18],0x0\nJZ 0x00409067\nXOR ECX,ECX\nMOV RDX,qword ptr [RBX + 0x10]\nMOV RDX,qword ptr [RDX + RCX*0x8]\nMOV qword ptr [RAX + RCX*0x8],RDX\nINC RCX\nMOV EDX,dword ptr [RBX + 0x18]\nCMP RCX,RDX\nJC 0x00409050\nPOP RBX\nRET\nXOR EAX,EAX\nPOP RBX\nRET\nXOR EAX,EAX\nPOP RBX\nRET\n'
p1614
S'53\n48 89 fb\n48 85 db\n74 30\n8b 7b 18\n85 ff\n74 2d\nc1 e7 03\ne8 18 97 ff ff\n83 7b 18 00\n74 19\n31 c9\n48 8b 53 10\n48 8b 14 ca\n48 89 14 c8\n48 ff c1\n8b 53 18\n48 39 d1\n72 e9\n5b\nc3\n31 c0\n5b\nc3\n31 c0\n5b\nc3\n'
p1615
S'.text:0000000000409030\n.text:0000000000409031\n.text:0000000000409034\n.text:0000000000409037\n.text:0000000000409039\n.text:000000000040903c\n.text:000000000040903e\n.text:0000000000409040\n.text:0000000000409043\n.text:0000000000409048\n.text:000000000040904c\n.text:000000000040904e\n.text:0000000000409050\n.text:0000000000409054\n.text:0000000000409058\n.text:000000000040905c\n.text:000000000040905f\n.text:0000000000409062\n.text:0000000000409065\n.text:0000000000409067\n.text:0000000000409068\n.text:0000000000409069\n.text:000000000040906b\n.text:000000000040906c\n.text:000000000040906d\n.text:000000000040906f\n.text:0000000000409070\n'
p1616
tp1617
sS'PopupSetValues'
p1618
(S'\n__stdcall PopupSetValues(Widget parent, XEvent * event)\n'
p1619
V\u000avoid PopupSetValues(Widget parent,XEvent *event)\u000a\u000a{\u000a  Arg args [1];\u000a  undefined8 local_28;\u000a  undefined *local_20;\u000a  \u000a  if (global_tree_info == (TreeInfo *)0x0) {\u000a    SetMessage(global_screen_data.info_label,res_labels[17]);\u000a  }\u000a  else {\u000a    if (global_screen_data.set_values_popup == (Widget)0x0) {\u000a      CreateSetValuesPopup();\u000a    }\u000a    local_28 = 0x60c65d;\u000a    local_20 = &DAT_0040a41e;\u000a    XtSetValues(global_screen_data.res_text,&local_28,1);\u000a    XtSetValues(global_screen_data.val_text,&local_28,1);\u000a    _SetField(global_screen_data.res_text,global_screen_data.val_text);\u000a    PopupCentered(event,global_screen_data.set_values_popup);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1620
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV R14,RSI\nCMP qword ptr [0x0060dec8],0x0\nJZ 0x00405bd5\nCMP qword ptr [0x0060dfe0],0x0\nJNZ 0x00405b73\nCALL 0x00405bf0\nMOV qword ptr [RSP],0x60c65d\nMOV qword ptr [RSP + 0x8],0x40a41e\nMOV RDI,qword ptr [0x0060dfe8]\nMOV RBX,RSP\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00402790\nMOV RDI,qword ptr [0x0060dff0]\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x00402790\nMOV RDI,qword ptr [0x0060dfe8]\nMOV RSI,qword ptr [0x0060dff0]\nCALL 0x00405e50\nMOV RSI,qword ptr [0x0060dfe0]\nXOR EDX,EDX\nMOV RDI,R14\nCALL 0x00406670\nJMP 0x00405be8\nMOV RDI,qword ptr [0x0060dff8]\nMOV RSI,qword ptr [0x0060e088]\nCALL 0x00406120\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p1621
S'41 56\n53\n48 83 ec 18\n49 89 f6\n48 83 3d 66 83 20 00 00\n74 71\n48 83 3d 74 84 20 00 00\n75 05\ne8 7d 00 00 00\n48 c7 04 24 5d c6 60 00\n48 c7 44 24 08 1e a4 40 00\n48 8b 3d 5d 84 20 00\n48 89 e3\nba 01 00 00 00\n48 89 de\ne8 f5 cb ff ff\n48 8b 3d 4e 84 20 00\nba 01 00 00 00\n48 89 de\ne8 e1 cb ff ff\n48 8b 3d 32 84 20 00\n48 8b 35 33 84 20 00\ne8 8e 02 00 00\n48 8b 35 17 84 20 00\n31 d2\n4c 89 f7\ne8 9d 0a 00 00\neb 13\n48 8b 3d 1c 84 20 00\n48 8b 35 a5 84 20 00\ne8 38 05 00 00\n48 83 c4 18\n5b\n41 5e\nc3\n'
p1622
S'.text:0000000000405b50\n.text:0000000000405b52\n.text:0000000000405b53\n.text:0000000000405b57\n.text:0000000000405b5a\n.text:0000000000405b62\n.text:0000000000405b64\n.text:0000000000405b6c\n.text:0000000000405b6e\n.text:0000000000405b73\n.text:0000000000405b7b\n.text:0000000000405b84\n.text:0000000000405b8b\n.text:0000000000405b8e\n.text:0000000000405b93\n.text:0000000000405b96\n.text:0000000000405b9b\n.text:0000000000405ba2\n.text:0000000000405ba7\n.text:0000000000405baa\n.text:0000000000405baf\n.text:0000000000405bb6\n.text:0000000000405bbd\n.text:0000000000405bc2\n.text:0000000000405bc9\n.text:0000000000405bcb\n.text:0000000000405bce\n.text:0000000000405bd3\n.text:0000000000405bd5\n.text:0000000000405bdc\n.text:0000000000405be3\n.text:0000000000405be8\n.text:0000000000405bec\n.text:0000000000405bed\n.text:0000000000405bef\n'
p1623
tp1624
sS'XtDisownSelection'
p1625
(S'\n__stdcall XtDisownSelection()\n'
p1626
V\u000avoid XtDisownSelection(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisownSelection_0060d230)();\u000a  return;\u000a}\u000a\u000a
p1627
S'JMP qword ptr [0x0060d230]\n'
p1628
S'ff 25 fa a7 20 00\n'
p1629
S'.plt:0000000000402a30\n'
p1630
tp1631
sS'qsort'
p1632
(S'\n__stdcall qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)\n'
p1633
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\u000a\u000a{\u000a  (*(code *)PTR_qsort_0060d0a8)();\u000a  return;\u000a}\u000a\u000a
p1634
S'JMP qword ptr [0x0060d0a8]\n'
p1635
S'ff 25 82 a9 20 00\n'
p1636
S'.plt:0000000000402720\n'
p1637
tp1638
sS'register_tm_clones'
p1639
(S'\n__stdcall register_tm_clones()\n'
p1640
V\u000a/* WARNING: Removing unreachable block (ram,0x00402d43) */\u000a/* WARNING: Removing unreachable block (ram,0x00402d4d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1641
S'MOV ESI,0x60dc98\nPUSH RBP\nSUB RSI,0x60dc98\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00402d58\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402d58\nPOP RBP\nMOV EDI,0x60dc98\nJMP RAX\nPOP RBP\nRET\n'
p1642
S'be 98 dc 60 00\n55\n48 81 ee 98 dc 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 98 dc 60 00\nff e0\n5d\nc3\n'
p1643
S'.text:0000000000402d20\n.text:0000000000402d25\n.text:0000000000402d26\n.text:0000000000402d2d\n.text:0000000000402d31\n.text:0000000000402d34\n.text:0000000000402d37\n.text:0000000000402d3b\n.text:0000000000402d3e\n.text:0000000000402d41\n.text:0000000000402d43\n.text:0000000000402d48\n.text:0000000000402d4b\n.text:0000000000402d4d\n.text:0000000000402d4e\n.text:0000000000402d53\n.text:0000000000402d58\n.text:0000000000402d59\n'
p1644
tp1645
sS'XSync'
p1646
(S'\n__stdcall XSync()\n'
p1647
V\u000avoid XSync(void)\u000a\u000a{\u000a  (*(code *)PTR_XSync_0060d278)();\u000a  return;\u000a}\u000a\u000a
p1648
S'JMP qword ptr [0x0060d278]\n'
p1649
S'ff 25 b2 a7 20 00\n'
p1650
S'.plt:0000000000402ac0\n'
p1651
tp1652
sS'_XEditResGet8'
p1653
(S'\n__stdcall _XEditResGet8()\n'
p1654
V\u000avoid _XEditResGet8(void)\u000a\u000a{\u000a  (*(code *)PTR__XEditResGet8_0060d360)();\u000a  return;\u000a}\u000a\u000a
p1655
S'JMP qword ptr [0x0060d360]\n'
p1656
S'ff 25 ca a6 20 00\n'
p1657
S'.plt:0000000000402c90\n'
p1658
tp1659
sS'PopupCentered'
p1660
(S'\n__stdcall PopupCentered(XEvent * event, Widget w)\n'
p1661
V\u000avoid PopupCentered(XEvent *event,Widget w)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  undefined8 uVar3;\u000a  long lVar4;\u000a  ulong in_RDX;\u000a  int iVar5;\u000a  int win_x;\u000a  int win_y;\u000a  Window child;\u000a  Arg args [3];\u000a  uint mask;\u000a  undefined8 uVar6;\u000a  int local_80;\u000a  int local_7c;\u000a  ushort local_78 [2];\u000a  short local_74 [2];\u000a  ushort local_70 [4];\u000a  undefined8 local_68;\u000a  ushort *local_60;\u000a  undefined8 local_58;\u000a  ushort *local_50;\u000a  undefined8 local_48;\u000a  short *local_40;\u000a  undefined local_2c [4];\u000a  \u000a  XtRealizeWidget(w);\u000a  if ((event == (XEvent *)0x0) || ((1 < *(int *)*event - 2U && (1 < *(int *)*event - 4U)))) {\u000a    uVar2 = XtDisplay(w);\u000a    uVar6 = 0x4066c8;\u000a    uVar3 = XtWindow(w);\u000a    XQueryPointer(uVar2,uVar3,&local_68,local_70,&local_7c,&local_80,local_78,local_74,local_2c,\u000a                  uVar6);\u000a  }\u000a  else {\u000a    local_7c = *(int *)(*event + 0x48);\u000a    local_80 = *(int *)(*event + 0x4c);\u000a  }\u000a  local_68 = 0x60c6e8;\u000a  local_60 = local_70;\u000a  local_58 = 0x60c46a;\u000a  local_50 = local_78;\u000a  local_48 = 0x60c3fc;\u000a  local_40 = local_74;\u000a  XtGetValues(w,&local_68,3);\u000a  local_70[0] = local_70[0] + local_74[0] * 2;\u000a  local_78[0] = local_78[0] + local_74[0] * 2;\u000a  iVar5 = local_7c - (uint)(local_70[0] >> 1);\u000a  if (iVar5 < 0) {\u000a    iVar5 = 0;\u000a  }\u000a  local_7c = iVar5;\u000a  lVar4 = XtScreen(w);\u000a  iVar1 = *(int *)(lVar4 + 0x18) - (uint)local_70[0];\u000a  if (iVar1 < iVar5) {\u000a    local_7c = iVar1;\u000a  }\u000a  local_80 = local_80 - (int)((short)((local_78[0] >> 0xf) + local_78[0]) >> 1);\u000a  iVar5 = 0;\u000a  if (-1 < local_80) {\u000a    iVar5 = local_80;\u000a  }\u000a  local_80 = iVar5;\u000a  lVar4 = XtScreen(w);\u000a  iVar1 = *(int *)(lVar4 + 0x1c) - (uint)local_78[0];\u000a  if (iVar1 < iVar5) {\u000a    local_80 = iVar1;\u000a  }\u000a  local_68 = 0x60c6f5;\u000a  local_60 = (ushort *)(long)local_7c;\u000a  local_58 = 0x60c6f7;\u000a  local_50 = (ushort *)(long)local_80;\u000a  XtSetValues(w,&local_68,2);\u000a  XtPopup(w,in_RDX & 0xffffffff);\u000a  return;\u000a}\u000a\u000a
p1662
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x60\nMOV R14D,EDX\nMOV R12,RSI\nMOV RBP,RDI\nMOV RDI,R12\nCALL 0x00402980\nTEST RBP,RBP\nJZ 0x004066b5\nMOV EAX,dword ptr [RBP]\nLEA ECX,[RAX + -0x2]\nCMP ECX,0x2\nJC 0x004066a5\nADD EAX,-0x4\nCMP EAX,0x1\nJA 0x004066b5\nMOV EAX,dword ptr [RBP + 0x48]\nMOV dword ptr [RSP + 0xc],EAX\nMOV EAX,dword ptr [RBP + 0x4c]\nMOV dword ptr [RSP + 0x8],EAX\nJMP 0x00406704\nMOV RDI,R12\nCALL 0x00402ab0\nMOV RBP,RAX\nMOV RDI,R12\nCALL 0x004027e0\nSUB RSP,0x8\nLEA R10,[RSP + 0x64]\nLEA R11,[RSP + 0x1c]\nLEA R15,[RSP + 0x18]\nLEA RDX,[RSP + 0x28]\nLEA RCX,[RSP + 0x20]\nLEA R8,[RSP + 0x14]\nLEA R9,[RSP + 0x10]\nMOV RDI,RBP\nMOV RSI,RAX\nPUSH R10\nPUSH R11\nPUSH R15\nCALL 0x004029d0\nADD RSP,0x20\nMOV qword ptr [RSP + 0x20],0x60c6e8\nLEA RAX,[RSP + 0x18]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c46a\nLEA RAX,[RSP + 0x10]\nMOV qword ptr [RSP + 0x38],RAX\nMOV qword ptr [RSP + 0x40],0x60c3fc\nLEA RAX,[RSP + 0x14]\nMOV qword ptr [RSP + 0x48],RAX\nLEA RSI,[RSP + 0x20]\nMOV EDX,0x3\nMOV RDI,R12\nCALL 0x004027d0\nMOVZX EAX,word ptr [RSP + 0x14]\nADD EAX,EAX\nMOV CX,word ptr [RSP + 0x18]\nADD CX,AX\nMOV word ptr [RSP + 0x18],CX\nAND ECX,0xfffe\nADD word ptr [RSP + 0x10],AX\nSHR ECX,1\nMOV EBX,dword ptr [RSP + 0xc]\nXOR EBP,EBP\nSUB EBX,ECX\nCMOVS EBX,EBP\nMOV dword ptr [RSP + 0xc],EBX\nMOV RDI,R12\nCALL 0x00402820\nMOV EAX,dword ptr [RAX + 0x18]\nMOVZX ECX,word ptr [RSP + 0x18]\nSUB EAX,ECX\nCMP EBX,EAX\nJLE 0x00406799\nMOV dword ptr [RSP + 0xc],EAX\nMOVZX EAX,word ptr [RSP + 0x10]\nMOV ECX,EAX\nSHR ECX,0xf\nADD ECX,EAX\nSAR CX,1\nMOVSX EAX,CX\nMOV ECX,dword ptr [RSP + 0x8]\nSUB ECX,EAX\nCMOVNS EBP,ECX\nMOV dword ptr [RSP + 0x8],EBP\nMOV RDI,R12\nCALL 0x00402820\nMOV EAX,dword ptr [RAX + 0x1c]\nMOVZX ECX,word ptr [RSP + 0x10]\nSUB EAX,ECX\nCMP EBP,EAX\nJLE 0x004067d2\nMOV dword ptr [RSP + 0x8],EAX\nMOV qword ptr [RSP + 0x20],0x60c6f5\nMOVSXD RAX,dword ptr [RSP + 0xc]\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x30],0x60c6f7\nMOVSXD RAX,dword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x38],RAX\nLEA RSI,[RSP + 0x20]\nMOV EDX,0x2\nMOV RDI,R12\nCALL 0x00402790\nMOV RDI,R12\nMOV ESI,R14D\nCALL 0x004029b0\nADD RSP,0x60\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1663
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 60\n41 89 d6\n49 89 f4\n48 89 fd\n4c 89 e7\ne8 f3 c2 ff ff\n48 85 ed\n74 23\n8b 45 00\n8d 48 fe\n83 f9 02\n72 08\n83 c0 fc\n83 f8 01\n77 10\n8b 45 48\n89 44 24 0c\n8b 45 4c\n89 44 24 08\neb 4f\n4c 89 e7\ne8 f3 c3 ff ff\n48 89 c5\n4c 89 e7\ne8 18 c1 ff ff\n48 83 ec 08\n4c 8d 54 24 64\n4c 8d 5c 24 1c\n4c 8d 7c 24 18\n48 8d 54 24 28\n48 8d 4c 24 20\n4c 8d 44 24 14\n4c 8d 4c 24 10\n48 89 ef\n48 89 c6\n41 52\n41 53\n41 57\ne8 d0 c2 ff ff\n48 83 c4 20\n48 c7 44 24 20 e8 c6 60 00\n48 8d 44 24 18\n48 89 44 24 28\n48 c7 44 24 30 6a c4 60 00\n48 8d 44 24 10\n48 89 44 24 38\n48 c7 44 24 40 fc c3 60 00\n48 8d 44 24 14\n48 89 44 24 48\n48 8d 74 24 20\nba 03 00 00 00\n4c 89 e7\ne8 81 c0 ff ff\n0f b7 44 24 14\n01 c0\n66 8b 4c 24 18\n66 01 c1\n66 89 4c 24 18\n81 e1 fe ff 00 00\n66 01 44 24 10\nd1 e9\n8b 5c 24 0c\n31 ed\n29 cb\n0f 48 dd\n89 5c 24 0c\n4c 89 e7\ne8 99 c0 ff ff\n8b 40 18\n0f b7 4c 24 18\n29 c8\n39 c3\n7e 04\n89 44 24 0c\n0f b7 44 24 10\n89 c1\nc1 e9 0f\n01 c1\n66 d1 f9\n0f bf c1\n8b 4c 24 08\n29 c1\n0f 49 e9\n89 6c 24 08\n4c 89 e7\ne8 60 c0 ff ff\n8b 40 1c\n0f b7 4c 24 10\n29 c8\n39 c5\n7e 04\n89 44 24 08\n48 c7 44 24 20 f5 c6 60 00\n48 63 44 24 0c\n48 89 44 24 28\n48 c7 44 24 30 f7 c6 60 00\n48 63 44 24 08\n48 89 44 24 38\n48 8d 74 24 20\nba 02 00 00 00\n4c 89 e7\ne8 86 bf ff ff\n4c 89 e7\n44 89 f6\ne8 9b c1 ff ff\n48 83 c4 60\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1664
S'.text:0000000000406670\n.text:0000000000406671\n.text:0000000000406673\n.text:0000000000406675\n.text:0000000000406677\n.text:0000000000406678\n.text:000000000040667c\n.text:000000000040667f\n.text:0000000000406682\n.text:0000000000406685\n.text:0000000000406688\n.text:000000000040668d\n.text:0000000000406690\n.text:0000000000406692\n.text:0000000000406695\n.text:0000000000406698\n.text:000000000040669b\n.text:000000000040669d\n.text:00000000004066a0\n.text:00000000004066a3\n.text:00000000004066a5\n.text:00000000004066a8\n.text:00000000004066ac\n.text:00000000004066af\n.text:00000000004066b3\n.text:00000000004066b5\n.text:00000000004066b8\n.text:00000000004066bd\n.text:00000000004066c0\n.text:00000000004066c3\n.text:00000000004066c8\n.text:00000000004066cc\n.text:00000000004066d1\n.text:00000000004066d6\n.text:00000000004066db\n.text:00000000004066e0\n.text:00000000004066e5\n.text:00000000004066ea\n.text:00000000004066ef\n.text:00000000004066f2\n.text:00000000004066f5\n.text:00000000004066f7\n.text:00000000004066f9\n.text:00000000004066fb\n.text:0000000000406700\n.text:0000000000406704\n.text:000000000040670d\n.text:0000000000406712\n.text:0000000000406717\n.text:0000000000406720\n.text:0000000000406725\n.text:000000000040672a\n.text:0000000000406733\n.text:0000000000406738\n.text:000000000040673d\n.text:0000000000406742\n.text:0000000000406747\n.text:000000000040674a\n.text:000000000040674f\n.text:0000000000406754\n.text:0000000000406756\n.text:000000000040675b\n.text:000000000040675e\n.text:0000000000406763\n.text:0000000000406769\n.text:000000000040676e\n.text:0000000000406770\n.text:0000000000406774\n.text:0000000000406776\n.text:0000000000406778\n.text:000000000040677b\n.text:000000000040677f\n.text:0000000000406782\n.text:0000000000406787\n.text:000000000040678a\n.text:000000000040678f\n.text:0000000000406791\n.text:0000000000406793\n.text:0000000000406795\n.text:0000000000406799\n.text:000000000040679e\n.text:00000000004067a0\n.text:00000000004067a3\n.text:00000000004067a5\n.text:00000000004067a8\n.text:00000000004067ab\n.text:00000000004067af\n.text:00000000004067b1\n.text:00000000004067b4\n.text:00000000004067b8\n.text:00000000004067bb\n.text:00000000004067c0\n.text:00000000004067c3\n.text:00000000004067c8\n.text:00000000004067ca\n.text:00000000004067cc\n.text:00000000004067ce\n.text:00000000004067d2\n.text:00000000004067db\n.text:00000000004067e0\n.text:00000000004067e5\n.text:00000000004067ee\n.text:00000000004067f3\n.text:00000000004067f8\n.text:00000000004067fd\n.text:0000000000406802\n.text:0000000000406805\n.text:000000000040680a\n.text:000000000040680d\n.text:0000000000406810\n.text:0000000000406815\n.text:0000000000406819\n.text:000000000040681a\n.text:000000000040681c\n.text:000000000040681e\n.text:0000000000406820\n.text:0000000000406821\n'
p1665
tp1666
sS'XtOverrideTranslations'
p1667
(S'\n__stdcall XtOverrideTranslations()\n'
p1668
V\u000avoid XtOverrideTranslations(void)\u000a\u000a{\u000a  (*(code *)PTR_XtOverrideTranslations_0060d208)();\u000a  return;\u000a}\u000a\u000a
p1669
S'JMP qword ptr [0x0060d208]\n'
p1670
S'ff 25 22 a8 20 00\n'
p1671
S'.plt:00000000004029e0\n'
p1672
tp1673
sS'__do_global_dtors_aux'
p1674
(S'\n__stdcall __do_global_dtors_aux()\n'
p1675
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1676
S'CMP byte ptr [0x0060de88],0x0\nJNZ 0x00402d7a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00402ce0\nPOP RBP\nMOV byte ptr [0x0060de88],0x1\nRET\n'
p1677
S'80 3d 21 b1 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 0e b1 20 00 01\nf3 c3\n'
p1678
S'.text:0000000000402d60\n.text:0000000000402d67\n.text:0000000000402d69\n.text:0000000000402d6a\n.text:0000000000402d6d\n.text:0000000000402d72\n.text:0000000000402d73\n.text:0000000000402d7a\n'
p1679
tp1680
sS'_fini'
p1681
(S'\n__stdcall _fini()\n'
p1682
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1683
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1684
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1685
S'.fini:0000000000409494\n.fini:0000000000409498\n.fini:000000000040949c\n'
p1686
tp1687
sS'XtAppNextEvent'
p1688
(S'\n__stdcall XtAppNextEvent()\n'
p1689
V\u000avoid XtAppNextEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppNextEvent_0060d188)();\u000a  return;\u000a}\u000a\u000a
p1690
S'JMP qword ptr [0x0060d188]\n'
p1691
S'ff 25 a2 a8 20 00\n'
p1692
S'.plt:00000000004028e0\n'
p1693
tp1694
sS'CancelSetValues'
p1695
(S'\n__stdcall CancelSetValues(Widget w, XtPointer junk, XtPointer garbage)\n'
p1696
V\u000avoid CancelSetValues(Widget w,XtPointer junk,XtPointer garbage)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  \u000a  uVar1 = XtParent();\u000a  uVar1 = XtParent(uVar1);\u000a  XtPopdown(uVar1);\u000a  return;\u000a}\u000a\u000a
p1697
S'PUSH RAX\nCALL 0x00402c00\nMOV RDI,RAX\nCALL 0x00402c00\nMOV RDI,RAX\nPOP RAX\nJMP 0x00402990\n'
p1698
S'50\ne8 fa ca ff ff\n48 89 c7\ne8 f2 ca ff ff\n48 89 c7\n58\ne9 79 c8 ff ff\n'
p1699
S'.text:0000000000406100\n.text:0000000000406101\n.text:0000000000406106\n.text:0000000000406109\n.text:000000000040610e\n.text:0000000000406111\n.text:0000000000406112\n'
p1700
tp1701
sS'AddNodeToActiveList'
p1702
(S'\n__stdcall AddNodeToActiveList(WNode * node)\n'
p1703
V\u000avoid AddNodeToActiveList(WNode *node)\u000a\u000a{\u000a  uint uVar1;\u000a  _TreeInfo *p_Var2;\u000a  Boolean BVar3;\u000a  WNode **ppWVar4;\u000a  \u000a  p_Var2 = node->tree_info;\u000a  BVar3 = IsActiveNode(node);\u000a  if (BVar3 == 0) {\u000a    uVar1 = p_Var2->alloc_nodes;\u000a    if (uVar1 <= p_Var2->num_nodes) {\u000a      p_Var2->alloc_nodes = uVar1 + 10;\u000a      ppWVar4 = (WNode **)XtRealloc(p_Var2->active_nodes,(ulong)(uVar1 * 8 + 0x50));\u000a      p_Var2->active_nodes = ppWVar4;\u000a    }\u000a    uVar1 = p_Var2->num_nodes;\u000a    p_Var2->num_nodes = uVar1 + 1;\u000a    *(WNode **)(p_Var2->active_nodes + (ulong)uVar1) = node;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1704
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RBX,qword ptr [R14 + 0x30]\nCALL 0x00409370\nTEST AL,AL\nJNZ 0x00408aa7\nMOV EAX,dword ptr [RBX + 0x1c]\nCMP dword ptr [RBX + 0x18],EAX\nJC 0x00408a96\nLEA ECX,[RAX + 0xa]\nMOV dword ptr [RBX + 0x1c],ECX\nMOV RDI,qword ptr [RBX + 0x10]\nLEA ESI,[0x50 + RAX*0x8]\nCALL 0x004028f0\nMOV qword ptr [RBX + 0x10],RAX\nMOV RAX,qword ptr [RBX + 0x10]\nMOV ECX,dword ptr [RBX + 0x18]\nLEA EDX,[RCX + 0x1]\nMOV dword ptr [RBX + 0x18],EDX\nMOV qword ptr [RAX + RCX*0x8],R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1705
S'41 56\n53\n50\n49 89 fe\n49 8b 5e 30\ne8 00 09 00 00\n84 c0\n75 33\n8b 43 1c\n39 43 18\n72 1a\n8d 48 0a\n89 4b 1c\n48 8b 7b 10\n8d 34 c5 50 00 00 00\ne8 5e 9e ff ff\n48 89 43 10\n48 8b 43 10\n8b 4b 18\n8d 51 01\n89 53 18\n4c 89 34 c8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1706
S'.text:0000000000408a60\n.text:0000000000408a62\n.text:0000000000408a63\n.text:0000000000408a64\n.text:0000000000408a67\n.text:0000000000408a6b\n.text:0000000000408a70\n.text:0000000000408a72\n.text:0000000000408a74\n.text:0000000000408a77\n.text:0000000000408a7a\n.text:0000000000408a7c\n.text:0000000000408a7f\n.text:0000000000408a82\n.text:0000000000408a86\n.text:0000000000408a8d\n.text:0000000000408a92\n.text:0000000000408a96\n.text:0000000000408a9a\n.text:0000000000408a9d\n.text:0000000000408aa0\n.text:0000000000408aa3\n.text:0000000000408aa7\n.text:0000000000408aab\n.text:0000000000408aac\n.text:0000000000408aae\n'
p1707
tp1708
s.