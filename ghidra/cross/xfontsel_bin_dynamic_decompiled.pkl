(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x607368]\nPUSH RBP\nLEA RBP,[0x607370]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401d78\nTEST RBP,RBP\nJZ 0x004058e6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x004058d0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 c6 1a 20 00\n55\n48 8d 2d c6 1a 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 b7 c4 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000405890\n.text:0000000000405892\n.text:0000000000405894\n.text:0000000000405897\n.text:0000000000405899\n.text:000000000040589b\n.text:00000000004058a2\n.text:00000000004058a3\n.text:00000000004058aa\n.text:00000000004058ab\n.text:00000000004058ae\n.text:00000000004058b1\n.text:00000000004058b4\n.text:00000000004058b8\n.text:00000000004058bc\n.text:00000000004058c1\n.text:00000000004058c4\n.text:00000000004058c6\n.text:00000000004058c8\n.text:00000000004058d0\n.text:00000000004058d3\n.text:00000000004058d6\n.text:00000000004058d9\n.text:00000000004058dd\n.text:00000000004058e1\n.text:00000000004058e4\n.text:00000000004058e6\n.text:00000000004058ea\n.text:00000000004058eb\n.text:00000000004058ec\n.text:00000000004058ee\n.text:00000000004058f0\n.text:00000000004058f2\n.text:00000000004058f4\n'
p6
tp7
sS'AlphabeticSort'
p8
(S'\n__stdcall AlphabeticSort(void * fval1, void * fval2)\n'
p9
V\u000aint AlphabeticSort(void *fval1,void *fval2)\u000a\u000a{\u000a  char *pcVar1;\u000a  int iVar2;\u000a  \u000a  pcVar1 = *(char **)((long)fval1 + 8);\u000a  if (((pcVar1 != (char *)0x0) && (*pcVar1 == '*')) && (pcVar1[1] == 0)) {\u000a    return -1;\u000a  }\u000a  pcVar1 = *(char **)((long)fval2 + 8);\u000a  if (((pcVar1 == (char *)0x0) || (*pcVar1 != '*')) || (pcVar1[1] != 0)) {\u000a    if (*(char **)((long)fval1 + 8) == (char *)0x0) {\u000a      return -1;\u000a    }\u000a    if (*(char **)((long)fval2 + 8) != (char *)0x0) {\u000a      iVar2 = strcmpn(*(char **)((long)fval1 + 8),*(char **)((long)fval2 + 8));\u000a      return iVar2;\u000a    }\u000a  }\u000a  return 1;\u000a}\u000a\u000a
p10
S'MOV RAX,qword ptr [RDI + 0x8]\nTEST RAX,RAX\nJZ 0x00404d84\nCMP byte ptr [RAX],0x2a\nJNZ 0x00404d84\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x00404dbb\nMOV RAX,qword ptr [RSI + 0x8]\nTEST RAX,RAX\nJZ 0x00404d98\nCMP byte ptr [RAX],0x2a\nJNZ 0x00404d98\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x00404db5\nMOV RDI,qword ptr [RDI + 0x8]\nTEST RDI,RDI\nJZ 0x00404daf\nMOV RSI,qword ptr [RSI + 0x8]\nTEST RSI,RSI\nJZ 0x00404db5\nJMP 0x004057a0\nMOV EAX,0xffffffff\nRET\nMOV EAX,0x1\nRET\nMOV EAX,0xffffffff\nRET\n'
p11
S'48 8b 47 08\n48 85 c0\n74 0b\n80 38 2a\n75 06\n80 78 01 00\n74 37\n48 8b 46 08\n48 85 c0\n74 0b\n80 38 2a\n75 06\n80 78 01 00\n74 1d\n48 8b 7f 08\n48 85 ff\n74 0e\n48 8b 76 08\n48 85 f6\n74 0b\ne9 f1 09 00 00\nb8 ff ff ff ff\nc3\nb8 01 00 00 00\nc3\nb8 ff ff ff ff\nc3\n'
p12
S'.text:0000000000404d70\n.text:0000000000404d74\n.text:0000000000404d77\n.text:0000000000404d79\n.text:0000000000404d7c\n.text:0000000000404d7e\n.text:0000000000404d82\n.text:0000000000404d84\n.text:0000000000404d88\n.text:0000000000404d8b\n.text:0000000000404d8d\n.text:0000000000404d90\n.text:0000000000404d92\n.text:0000000000404d96\n.text:0000000000404d98\n.text:0000000000404d9c\n.text:0000000000404d9f\n.text:0000000000404da1\n.text:0000000000404da5\n.text:0000000000404da8\n.text:0000000000404daa\n.text:0000000000404daf\n.text:0000000000404db4\n.text:0000000000404db5\n.text:0000000000404dba\n.text:0000000000404dbb\n.text:0000000000404dc0\n'
p13
tp14
sS'EnableMenu'
p15
(S'\n__stdcall EnableMenu(XtPointer closure)\n'
p16
V\u000avoid EnableMenu(XtPointer closure)\u000a\u000a{\u000a  char cVar1;\u000a  char cVar2;\u000a  FieldValueList *pFVar3;\u000a  char cVar4;\u000a  long lVar5;\u000a  Widget *pp_Var6;\u000a  int iVar7;\u000a  Widget *pp_Var8;\u000a  Widget *pp_Var9;\u000a  Widget *local_50;\u000a  Widget *local_48;\u000a  \u000a  lVar5 = (long)(int)closure;\u000a  pFVar3 = fieldValues[lVar5];\u000a  iVar7 = pFVar3->count;\u000a  if (iVar7 != 0) {\u000a    cVar1 = pFVar3->show_unselectable;\u000a    pp_Var9 = &pFVar3->value[0].menu_item;\u000a    pp_Var8 = (Widget *)0x0;\u000a    local_50 = (Widget *)0x0;\u000a    pp_Var6 = (Widget *)0x0;\u000a    local_48 = (Widget *)0x0;\u000a    do {\u000a      cVar2 = *(char *)(pp_Var9 + 3);\u000a      if (cVar1 == 0) {\u000a        cVar4 = XtIsManaged(*pp_Var9);\u000a        if (cVar2 != cVar4) {\u000a          if (*(char *)(pp_Var9 + 3) == 0) {\u000a            if (local_50 == (Widget *)0x0) {\u000a              pp_Var8 = (Widget *)XtMalloc((ulong)(uint)(fieldValues[lVar5]->count << 3));\u000a              local_50 = pp_Var8;\u000a            }\u000a            *pp_Var8 = *pp_Var9;\u000a            pp_Var8 = pp_Var8 + 1;\u000a          }\u000a          else {\u000a            if (local_48 == (Widget *)0x0) {\u000a              pp_Var6 = (Widget *)XtMalloc((ulong)(uint)(fieldValues[lVar5]->count << 3));\u000a              local_48 = pp_Var6;\u000a            }\u000a            *pp_Var6 = *pp_Var9;\u000a            pp_Var6 = pp_Var6 + 1;\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        cVar4 = XtIsSensitive();\u000a        if (cVar2 != cVar4) {\u000a          XtSetSensitive(*pp_Var9,(ulong)(uint)(int)*(char *)(pp_Var9 + 3));\u000a        }\u000a      }\u000a      pp_Var9 = pp_Var9 + 6;\u000a      iVar7 = iVar7 + -1;\u000a    } while (iVar7 != 0);\u000a    if ((Widget *)((long)pp_Var6 - (long)local_48) != (Widget *)0x0) {\u000a      XtManageChildren(local_48,(ulong)(Widget *)((long)pp_Var6 - (long)local_48) >> 3 & 0xffffffff)\u000a      ;\u000a      XtFree(local_48);\u000a    }\u000a    if ((Widget *)((long)pp_Var8 - (long)local_50) != (Widget *)0x0) {\u000a      XtUnmanageChildren(local_50,(ulong)(Widget *)((long)pp_Var8 - (long)local_50) >> 3 &\u000a                                  0xffffffff);\u000a      XtFree(local_50);\u000a    }\u000a  }\u000a  enabledMenuIndex = (int)closure;\u000a  return;\u000a}\u000a\u000a
p17
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDI\nMOVSXD RAX,EBX\nMOV qword ptr [RSP + 0x18],RAX\nMOV R14,qword ptr [0x608ac0 + RAX*0x8]\nMOV EBP,dword ptr [R14]\nTEST EBP,EBP\nJZ 0x00405682\nMOV qword ptr [RSP + 0x20],RBX\nMOV R15B,byte ptr [R14 + 0x8]\nADD R14,0x20\nXOR R13D,R13D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nNOP dword ptr [RAX]\nTEST R15B,R15B\nMOVZX R12D,byte ptr [R14 + 0x18]\nMOV RDI,qword ptr [R14]\nJZ 0x004055b0\nCALL 0x00401f90\nCMP R12B,AL\nJZ 0x00405630\nMOV RDI,qword ptr [R14]\nMOVSX ESI,byte ptr [R14 + 0x18]\nCALL 0x00402010\nJMP 0x00405630\nCALL 0x00402180\nCMP R12B,AL\nJZ 0x00405630\nCMP byte ptr [R14 + 0x18],0x0\nJZ 0x004055f7\nCMP qword ptr [RSP + 0x10],0x0\nJNZ 0x004055eb\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [0x608ac0 + RAX*0x8]\nMOV EDI,dword ptr [RAX]\nSHL EDI,0x3\nCALL 0x00401eb0\nMOV RBX,RAX\nMOV RCX,RBX\nMOV qword ptr [RSP + 0x10],RCX\nMOV RAX,qword ptr [R14]\nMOV qword ptr [RBX],RAX\nADD RBX,0x8\nJMP 0x00405630\nCMP qword ptr [RSP + 0x8],0x0\nJNZ 0x00405621\nMOV RAX,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [0x608ac0 + RAX*0x8]\nMOV EDI,dword ptr [RAX]\nSHL EDI,0x3\nCALL 0x00401eb0\nMOV R13,RAX\nMOV RCX,R13\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [R14]\nMOV qword ptr [R13],RAX\nADD R13,0x8\nNOP dword ptr [RAX]\nADD R14,0x30\nDEC EBP\nJNZ 0x00405580\nMOV RBP,qword ptr [RSP + 0x10]\nSUB RBX,RBP\nJZ 0x0040565c\nSHR RBX,0x3\nMOV RDI,RBP\nMOV ESI,EBX\nCALL 0x00402280\nMOV RDI,RBP\nCALL 0x004020e0\nMOV RBP,qword ptr [RSP + 0x8]\nSUB R13,RBP\nMOV RBX,qword ptr [RSP + 0x20]\nJZ 0x00405682\nSHR R13,0x3\nMOV RDI,RBP\nMOV ESI,R13D\nCALL 0x00401fa0\nMOV RDI,RBP\nCALL 0x004020e0\nMOV dword ptr [0x00608b78],EBX\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p18
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 fb\n48 63 c3\n48 89 44 24 18\n4c 8b 34 c5 c0 8a 60 00\n41 8b 2e\n85 ed\n0f 84 26 01 00 00\n48 89 5c 24 20\n45 8a 7e 08\n49 83 c6 20\n45 31 ed\n31 c0\n48 89 44 24 08\n31 db\n31 c0\n48 89 44 24 10\n0f 1f 40 00\n45 84 ff\n45 0f b6 66 18\n49 8b 3e\n74 23\ne8 fe c9 ff ff\n41 38 c4\n0f 84 95 00 00 00\n49 8b 3e\n41 0f be 76 18\ne8 68 ca ff ff\ne9 83 00 00 00\ne8 cb cb ff ff\n41 38 c4\n74 76\n41 80 7e 18 00\n74 36\n48 83 7c 24 10 00\n75 22\n48 8b 44 24 18\n48 8b 04 c5 c0 8a 60 00\n8b 38\nc1 e7 03\ne8 d0 c8 ff ff\n48 89 c3\n48 89 d9\n48 89 4c 24 10\n49 8b 06\n48 89 03\n48 83 c3 08\neb 39\n48 83 7c 24 08 00\n75 22\n48 8b 44 24 18\n48 8b 04 c5 c0 8a 60 00\n8b 38\nc1 e7 03\ne8 9a c8 ff ff\n49 89 c5\n4c 89 e9\n48 89 4c 24 08\n49 8b 06\n49 89 45 00\n49 83 c5 08\n0f 1f 40 00\n49 83 c6 30\nff cd\n0f 85 44 ff ff ff\n48 8b 6c 24 10\n48 29 eb\n74 16\n48 c1 eb 03\n48 89 ef\n89 de\ne8 2c cc ff ff\n48 89 ef\ne8 84 ca ff ff\n48 8b 6c 24 08\n49 29 ed\n48 8b 5c 24 20\n74 17\n49 c1 ed 03\n48 89 ef\n44 89 ee\ne8 26 c9 ff ff\n48 89 ef\ne8 5e ca ff ff\n89 1d f0 34 20 00\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p19
S'.text:0000000000405530\n.text:0000000000405531\n.text:0000000000405533\n.text:0000000000405535\n.text:0000000000405537\n.text:0000000000405539\n.text:000000000040553a\n.text:000000000040553e\n.text:0000000000405541\n.text:0000000000405544\n.text:0000000000405549\n.text:0000000000405551\n.text:0000000000405554\n.text:0000000000405556\n.text:000000000040555c\n.text:0000000000405561\n.text:0000000000405565\n.text:0000000000405569\n.text:000000000040556c\n.text:000000000040556e\n.text:0000000000405573\n.text:0000000000405575\n.text:0000000000405577\n.text:000000000040557c\n.text:0000000000405580\n.text:0000000000405583\n.text:0000000000405588\n.text:000000000040558b\n.text:000000000040558d\n.text:0000000000405592\n.text:0000000000405595\n.text:000000000040559b\n.text:000000000040559e\n.text:00000000004055a3\n.text:00000000004055a8\n.text:00000000004055b0\n.text:00000000004055b5\n.text:00000000004055b8\n.text:00000000004055ba\n.text:00000000004055bf\n.text:00000000004055c1\n.text:00000000004055c7\n.text:00000000004055c9\n.text:00000000004055ce\n.text:00000000004055d6\n.text:00000000004055d8\n.text:00000000004055db\n.text:00000000004055e0\n.text:00000000004055e3\n.text:00000000004055e6\n.text:00000000004055eb\n.text:00000000004055ee\n.text:00000000004055f1\n.text:00000000004055f5\n.text:00000000004055f7\n.text:00000000004055fd\n.text:00000000004055ff\n.text:0000000000405604\n.text:000000000040560c\n.text:000000000040560e\n.text:0000000000405611\n.text:0000000000405616\n.text:0000000000405619\n.text:000000000040561c\n.text:0000000000405621\n.text:0000000000405624\n.text:0000000000405628\n.text:000000000040562c\n.text:0000000000405630\n.text:0000000000405634\n.text:0000000000405636\n.text:000000000040563c\n.text:0000000000405641\n.text:0000000000405644\n.text:0000000000405646\n.text:000000000040564a\n.text:000000000040564d\n.text:000000000040564f\n.text:0000000000405654\n.text:0000000000405657\n.text:000000000040565c\n.text:0000000000405661\n.text:0000000000405664\n.text:0000000000405669\n.text:000000000040566b\n.text:000000000040566f\n.text:0000000000405672\n.text:0000000000405675\n.text:000000000040567a\n.text:000000000040567d\n.text:0000000000405682\n.text:0000000000405688\n.text:000000000040568c\n.text:000000000040568d\n.text:000000000040568f\n.text:0000000000405691\n.text:0000000000405693\n.text:0000000000405695\n.text:0000000000405696\n'
p20
tp21
sS'XtFree'
p22
(S'\n__stdcall XtFree()\n'
p23
V\u000a/* WARNING: Switch with 1 destination removed at 0x004020e0 */\u000a\u000avoid XtFree(void)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x006081b8]\n'
p25
S'ff 25 d2 60 20 00\n'
p26
S'.plt:00000000004020e0\n'
p27
tp28
sS'XmuConvertStandardSelection'
p29
(S'\n__stdcall XmuConvertStandardSelection()\n'
p30
V\u000avoid XmuConvertStandardSelection(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuConvertStandardSelection_006080b0)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x006080b0]\n'
p32
S'ff 25 da 61 20 00\n'
p33
S'.plt:0000000000401ed0\n'
p34
tp35
sS'XtCloseDisplay'
p36
(S'\n__stdcall XtCloseDisplay()\n'
p37
V\u000avoid XtCloseDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCloseDisplay_006082a8)();\u000a  return;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x006082a8]\n'
p39
S'ff 25 e2 5f 20 00\n'
p40
S'.plt:00000000004022c0\n'
p41
tp42
sS'XtWindow'
p43
(S'\n__stdcall XtWindow()\n'
p44
V\u000avoid XtWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XtWindow_006080b8)();\u000a  return;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x006080b8]\n'
p46
S'ff 25 d2 61 20 00\n'
p47
S'.plt:0000000000401ee0\n'
p48
tp49
sS'XawInitializeWidgetSet'
p50
(S'\n__stdcall XawInitializeWidgetSet()\n'
p51
V\u000avoid XawInitializeWidgetSet(void)\u000a\u000a{\u000a  (*(code *)PTR_XawInitializeWidgetSet_00608120)();\u000a  return;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00608120]\n'
p53
S'ff 25 6a 61 20 00\n'
p54
S'.plt:0000000000401fb0\n'
p55
tp56
sS'strchr'
p57
(S'\n__stdcall strchr(char * __s, int __c)\n'
p58
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_006080d0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x006080d0]\n'
p60
S'ff 25 ba 61 20 00\n'
p61
S'.plt:0000000000401f10\n'
p62
tp63
sS'SelectValue'
p64
(S'\n__stdcall SelectValue(Widget w, XtPointer closure, XtPointer callData)\n'
p65
V\u000avoid SelectValue(Widget w,XtPointer closure,XtPointer callData)\u000a\u000a{\u000a  Choice pChoice;\u000a  \u000a  pChoice.prev = choiceList;\u000a  pChoice.value = (FieldValue *)closure;\u000a  *(int *)(currentFont_0 + (long)*(int *)closure * 4) =\u000a       (int)((ulong)((long)closure - (long)fieldValues[(long)*(int *)closure]->value) >> 4) *\u000a       -0x55555555;\u000a  choiceList = (Choice *)0x608b58;\u000a  SetCurrentFont(w);\u000a  EnableRemainingItems(1);\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH RAX\nMOVSXD RAX,dword ptr [RSI]\nMOV RCX,qword ptr [0x608ac0 + RAX*0x8]\nADD RCX,0x10\nMOV RDX,qword ptr [0x00608b68]\nMOV qword ptr [0x00608b58],RDX\nMOV qword ptr [0x00608b60],RSI\nSUB RSI,RCX\nSHR RSI,0x4\nIMUL ECX,ESI,-0x55555555\nMOV dword ptr [0x608b8c + RAX*0x4],ECX\nMOV qword ptr [0x00608b68],0x608b58\nCALL 0x00404750\nMOV EDI,0x1\nPOP RAX\nJMP 0x004050f0\n'
p67
S'50\n48 63 06\n48 8b 0c c5 c0 8a 60 00\n48 83 c1 10\n48 8b 15 c1 3a 20 00\n48 89 15 aa 3a 20 00\n48 89 35 ab 3a 20 00\n48 29 ce\n48 c1 ee 04\n69 ce ab aa aa aa\n89 0c 85 8c 8b 60 00\n48 c7 05 94 3a 20 00 58 8b 60 00\ne8 77 f6 ff ff\nbf 01 00 00 00\n58\neb 0f\n'
p68
S'.text:0000000000405090\n.text:0000000000405091\n.text:0000000000405094\n.text:000000000040509c\n.text:00000000004050a0\n.text:00000000004050a7\n.text:00000000004050ae\n.text:00000000004050b5\n.text:00000000004050b8\n.text:00000000004050bc\n.text:00000000004050c2\n.text:00000000004050c9\n.text:00000000004050d4\n.text:00000000004050d9\n.text:00000000004050de\n.text:00000000004050df\n'
p69
tp70
sS'Initialize'
p71
(S'\n__stdcall Initialize(Widget request, Widget new, ArgList * args, Cardinal * num_args)\n'
p72
V\u000avoid Initialize(Widget request,Widget new,ArgList *args,Cardinal *num_args)\u000a\u000a{\u000a  short sVar1;\u000a  size_t sVar2;\u000a  char *__s;\u000a  short sVar3;\u000a  char **ppcVar4;\u000a  \u000a  __s = (char *)new[1].core.border_pixel;\u000a  if (__s == (char *)0x0) {\u000a    __s = (new->core).name;\u000a    if (__s == (String)0x0) {\u000a      __s = (char *)0x0;\u000a      goto LAB_0040243b;\u000a    }\u000a    ppcVar4 = &(new->core).name;\u000a  }\u000a  else {\u000a    ppcVar4 = (char **)&new[1].core.border_pixel;\u000a  }\u000a  sVar2 = strlen(__s);\u000a  __s = (char *)XtMalloc((ulong)((int)sVar2 + 1));\u000a  __s = strcpy(__s,*ppcVar4);\u000aLAB_0040243b:\u000a  *(char **)&new[1].core.border_pixel = __s;\u000a  GetnormalGC((UCSLabelWidget)new);\u000a  GetgrayGC((UCSLabelWidget)new);\u000a  SetTextWidthAndHeight((UCSLabelWidget)new);\u000a  if ((new->core).height == 0) {\u000a    (new->core).height =\u000a         *(short *)((long)&new[1].core.border_pixmap + 6) * 2 + *(short *)&new[1].core.field_0xb6;\u000a  }\u000a  set_bitmap_info((UCSLabelWidget)new);\u000a  if ((new->core).width == 0) {\u000a    sVar1 = *(short *)((long)&new[1].core.border_pixmap + 4);\u000a    if (new[1].core.name == (String)0x0) {\u000a      sVar3 = 0;\u000a    }\u000a    else {\u000a      sVar3 = sVar1 + (short)*(undefined4 *)&new[1].core.background_pixmap;\u000a    }\u000a    (new->core).width = *(short *)&new[1].core.field_0xb4 + sVar1 * 2 + sVar3;\u000a  }\u000a  new[1].core.depth = 0;\u000a                    /* WARNING: Could not recover jumptable at 0x004024c6. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(((new->core).widget_class)->core_class).resize)(new);\u000a  return;\u000a}\u000a\u000a
p73
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV RDI,qword ptr [0x140 + RBX]\nTEST RDI,RDI\nJZ 0x0040240c\nLEA R14,[0x140 + RBX]\nJMP 0x00402423\nMOV RDI,qword ptr [0x90 + RBX]\nTEST RDI,RDI\nJZ 0x004024a2\nLEA R14,[0x90 + RBX]\nCALL 0x00401ef0\nLEA EDI,[RAX + 0x1]\nCALL 0x00401eb0\nMOV RSI,qword ptr [R14]\nMOV RDI,RAX\nCALL 0x00401e40\nMOV qword ptr [0x140 + RBX],RAX\nMOV RDI,RBX\nCALL 0x00402d40\nMOV RDI,RBX\nCALL 0x00402dd0\nMOV RDI,RBX\nCALL 0x00402e90\nCMP word ptr [RBX + 0x36],0x0\nJNZ 0x00402475\nMOVZX EAX,word ptr [0x14e + RBX]\nADD EAX,EAX\nADD AX,word ptr [0x186 + RBX]\nMOV word ptr [RBX + 0x36],AX\nMOV RDI,RBX\nCALL 0x00403210\nCMP word ptr [RBX + 0x34],0x0\nJNZ 0x004024ae\nLEA RDX,[0x128 + RBX]\nMOVZX EAX,word ptr [RDX + 0x5c]\nMOVZX ECX,word ptr [RDX + 0x24]\nLEA EAX,[RAX + RCX*0x2]\nCMP qword ptr [RDX + 0x38],0x0\nJZ 0x004024a6\nADD ECX,dword ptr [RDX + 0x68]\nJMP 0x004024a8\nXOR EAX,EAX\nJMP 0x0040243b\nXOR ECX,ECX\nADD EAX,ECX\nMOV word ptr [RBX + 0x34],AX\nMOV dword ptr [0x180 + RBX],0x0\nMOV RAX,qword ptr [RBX + 0x8]\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP qword ptr [RAX + 0x78]\n'
p74
S'41 56\n53\n50\n48 89 f3\n48 8b bb 40 01 00 00\n48 85 ff\n74 09\n4c 8d b3 40 01 00 00\neb 17\n48 8b bb 90 00 00 00\n48 85 ff\n0f 84 86 00 00 00\n4c 8d b3 90 00 00 00\ne8 c8 fa ff ff\n8d 78 01\ne8 80 fa ff ff\n49 8b 36\n48 89 c7\ne8 05 fa ff ff\n48 89 83 40 01 00 00\n48 89 df\ne8 f6 08 00 00\n48 89 df\ne8 7e 09 00 00\n48 89 df\ne8 36 0a 00 00\n66 83 7b 36 00\n75 14\n0f b7 83 4e 01 00 00\n01 c0\n66 03 83 86 01 00 00\n66 89 43 36\n48 89 df\ne8 93 0d 00 00\n66 83 7b 34 00\n75 2a\n48 8d 93 28 01 00 00\n0f b7 42 5c\n0f b7 4a 24\n8d 04 48\n48 83 7a 38 00\n74 09\n03 4a 68\neb 06\n31 c0\neb 95\n31 c9\n01 c8\n66 89 43 34\nc7 83 80 01 00 00 00 00 00 00\n48 8b 43 08\n48 89 df\n48 83 c4 08\n5b\n41 5e\nff 60 78\n'
p75
S'.text:00000000004023f0\n.text:00000000004023f2\n.text:00000000004023f3\n.text:00000000004023f4\n.text:00000000004023f7\n.text:00000000004023fe\n.text:0000000000402401\n.text:0000000000402403\n.text:000000000040240a\n.text:000000000040240c\n.text:0000000000402413\n.text:0000000000402416\n.text:000000000040241c\n.text:0000000000402423\n.text:0000000000402428\n.text:000000000040242b\n.text:0000000000402430\n.text:0000000000402433\n.text:0000000000402436\n.text:000000000040243b\n.text:0000000000402442\n.text:0000000000402445\n.text:000000000040244a\n.text:000000000040244d\n.text:0000000000402452\n.text:0000000000402455\n.text:000000000040245a\n.text:000000000040245f\n.text:0000000000402461\n.text:0000000000402468\n.text:000000000040246a\n.text:0000000000402471\n.text:0000000000402475\n.text:0000000000402478\n.text:000000000040247d\n.text:0000000000402482\n.text:0000000000402484\n.text:000000000040248b\n.text:000000000040248f\n.text:0000000000402493\n.text:0000000000402496\n.text:000000000040249b\n.text:000000000040249d\n.text:00000000004024a0\n.text:00000000004024a2\n.text:00000000004024a4\n.text:00000000004024a6\n.text:00000000004024a8\n.text:00000000004024aa\n.text:00000000004024ae\n.text:00000000004024b8\n.text:00000000004024bc\n.text:00000000004024bf\n.text:00000000004024c3\n.text:00000000004024c4\n.text:00000000004024c6\n'
p76
tp77
sS'strcpy'
p78
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_00608068)();\u000a  return pcVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00608068]\n'
p81
S'ff 25 22 62 20 00\n'
p82
S'.plt:0000000000401e40\n'
p83
tp84
sS'XtSetLanguageProc'
p85
(S'\n__stdcall XtSetLanguageProc()\n'
p86
V\u000avoid XtSetLanguageProc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetLanguageProc_00608228)();\u000a  return;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00608228]\n'
p88
S'ff 25 62 60 20 00\n'
p89
S'.plt:00000000004021c0\n'
p90
tp91
sS'strncmp'
p92
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00608050)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00608050]\n'
p95
S'ff 25 3a 62 20 00\n'
p96
S'.plt:0000000000401e10\n'
p97
tp98
sS'FinishWork'
p99
(S'\n__stdcall FinishWork()\n'
p100
V\u000aundefined8 FinishWork(XtPointer pvParm1)\u000a\u000a{\u000a  undefined8 in_RAX;\u000a  \u000a  while ((workQueue != (WorkPiece)0x0 && (workQueue->priority < 10))) {\u000a    DoWorkPiece(pvParm1);\u000a  }\u000a  return in_RAX;\u000a}\u000a\u000a
p101
S'PUSH RAX\nJMP 0x00405435\nCALL 0x00404030\nMOV RAX,qword ptr [0x00608a98]\nTEST RAX,RAX\nJZ 0x00405447\nCMP dword ptr [RAX + 0x8],0x9\nJLE 0x00405430\nPOP RAX\nRET\n'
p102
S'50\neb 12\ne8 fb eb ff ff\n48 8b 05 5c 36 20 00\n48 85 c0\n74 06\n83 78 08 09\n7e e9\n58\nc3\n'
p103
S'.text:0000000000405420\n.text:0000000000405421\n.text:0000000000405430\n.text:0000000000405435\n.text:000000000040543c\n.text:000000000040543f\n.text:0000000000405441\n.text:0000000000405445\n.text:0000000000405447\n.text:0000000000405448\n'
p104
tp105
sS'XtRealloc'
p106
(S'\n__stdcall XtRealloc()\n'
p107
V\u000avoid XtRealloc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtRealloc_00608140)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00608140]\n'
p109
S'ff 25 4a 61 20 00\n'
p110
S'.plt:0000000000401ff0\n'
p111
tp112
sS'XmuReleaseStippledPixmap'
p113
(S'\n__stdcall XmuReleaseStippledPixmap()\n'
p114
V\u000avoid XmuReleaseStippledPixmap(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuReleaseStippledPixmap_00608158)();\u000a  return;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x00608158]\n'
p116
S'ff 25 32 61 20 00\n'
p117
S'.plt:0000000000402020\n'
p118
tp119
sS'XmuMakeAtom'
p120
(S'\n__stdcall XmuMakeAtom()\n'
p121
V\u000avoid XmuMakeAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuMakeAtom_00608230)();\u000a  return;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00608230]\n'
p123
S'ff 25 5a 60 20 00\n'
p124
S'.plt:00000000004021d0\n'
p125
tp126
sS'LoseSelection'
p127
(S'\n__stdcall LoseSelection(Widget w, Atom * selection)\n'
p128
V\u000avoid LoseSelection(Widget w,Atom *selection)\u000a\u000a{\u000a  Atom AVar1;\u000a  undefined8 uVar2;\u000a  Atom AVar3;\u000a  Arg args [1];\u000a  char *local_28;\u000a  undefined8 local_20;\u000a  \u000a  local_28 = "state";\u000a  local_20 = 0;\u000a  XtSetValues(w,&local_28,1);\u000a  AVar1 = *selection;\u000a  uVar2 = XtDisplay(w);\u000a  AVar3 = XmuInternAtom(uVar2,_XA_PRIMARY_FONT);\u000a  if (AVar1 == AVar3) {\u000a    XtSetSensitive(currentFontName,0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p129
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV R14,RSI\nMOV RBX,RDI\nMOV qword ptr [RSP],0x405ee3\nMOV qword ptr [RSP + 0x8],0x0\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00401ec0\nMOV R14,qword ptr [R14]\nMOV RDI,RBX\nCALL 0x00402110\nMOV RSI,qword ptr [0x00608b80]\nMOV RDI,RAX\nCALL 0x00402250\nCMP R14,RAX\nJNZ 0x00405778\nMOV RDI,qword ptr [0x00608a80]\nXOR ESI,ESI\nCALL 0x00402010\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p130
S'41 56\n53\n48 83 ec 18\n49 89 f6\n48 89 fb\n48 c7 04 24 e3 5e 40 00\n48 c7 44 24 08 00 00 00 00\n48 89 e6\nba 01 00 00 00\ne8 75 c7 ff ff\n4d 8b 36\n48 89 df\ne8 ba c9 ff ff\n48 8b 35 23 34 20 00\n48 89 c7\ne8 eb ca ff ff\n49 39 c6\n75 0e\n48 8b 3d 0f 33 20 00\n31 f6\ne8 98 c8 ff ff\n48 83 c4 18\n5b\n41 5e\nc3\n'
p131
S'.text:0000000000405720\n.text:0000000000405722\n.text:0000000000405723\n.text:0000000000405727\n.text:000000000040572a\n.text:000000000040572d\n.text:0000000000405735\n.text:000000000040573e\n.text:0000000000405741\n.text:0000000000405746\n.text:000000000040574b\n.text:000000000040574e\n.text:0000000000405751\n.text:0000000000405756\n.text:000000000040575d\n.text:0000000000405760\n.text:0000000000405765\n.text:0000000000405768\n.text:000000000040576a\n.text:0000000000405771\n.text:0000000000405773\n.text:0000000000405778\n.text:000000000040577c\n.text:000000000040577d\n.text:000000000040577f\n'
p132
tp133
sS'OwnSelection'
p134
(S'\n__stdcall OwnSelection(Widget w, XtPointer closure, XtPointer callData)\n'
p135
V\u000avoid OwnSelection(Widget w,XtPointer closure,XtPointer callData)\u000a\u000a{\u000a  char cVar1;\u000a  undefined8 uVar2;\u000a  undefined8 uVar3;\u000a  \u000a  uVar3 = XtDisplay();\u000a  uVar3 = XtLastTimestampProcessed(uVar3);\u000a  if (_XA_PRIMARY_FONT == (AtomPtr)0x0) {\u000a    _XA_PRIMARY_FONT = (AtomPtr)XmuMakeAtom("PRIMARY_FONT");\u000a  }\u000a  uVar2 = XtDisplay(w);\u000a  uVar2 = XmuInternAtom(uVar2,_XA_PRIMARY_FONT);\u000a  if ((char)callData == 0) {\u000a    XtDisownSelection(w,uVar2,uVar3);\u000a    if ((char)closure != 0) {\u000a      XtDisownSelection(w,1,uVar3);\u000a    }\u000a    uVar3 = 0;\u000a  }\u000a  else {\u000a    XtOwnSelection(w,uVar2,uVar3,ConvertSelection,LoseSelection,DoneSelection);\u000a    if ((char)closure != 0) {\u000a      XtOwnSelection(w,1,uVar3,ConvertSelection,LoseSelection,DoneSelection);\u000a    }\u000a    cVar1 = XtIsSensitive(currentFontName);\u000a    if (cVar1 != 0) {\u000a      return;\u000a    }\u000a    uVar3 = 1;\u000a  }\u000a  XtSetSensitive(currentFontName,uVar3);\u000a  return;\u000a}\u000a\u000a
p136
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,RDX\nMOV R15,RSI\nMOV RBX,RDI\nCALL 0x00402110\nMOV RDI,RAX\nCALL 0x004021a0\nMOV R14,RAX\nCMP qword ptr [0x00608b80],0x0\nJNZ 0x00403d8c\nMOV EDI,0x405b31\nCALL 0x004021d0\nMOV qword ptr [0x00608b80],RAX\nMOV RDI,RBX\nCALL 0x00402110\nMOV RSI,qword ptr [0x00608b80]\nMOV RDI,RAX\nCALL 0x00402250\nTEST R12B,R12B\nJZ 0x00403e09\nMOV ECX,0x4056a0\nMOV R8D,0x405720\nMOV R9D,0x405780\nMOV RDI,RBX\nMOV RSI,RAX\nMOV RDX,R14\nCALL 0x00401f50\nTEST R15B,R15B\nJZ 0x00403ded\nMOV ESI,0x1\nMOV ECX,0x4056a0\nMOV R8D,0x405720\nMOV R9D,0x405780\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00401f50\nMOV RDI,qword ptr [0x00608a80]\nCALL 0x00401f90\nTEST AL,AL\nJZ 0x00403e37\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nMOV RDI,RBX\nMOV RSI,RAX\nMOV RDX,R14\nCALL 0x00402090\nTEST R15B,R15B\nJZ 0x00403e2c\nMOV ESI,0x1\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00402090\nMOV RDI,qword ptr [0x00608a80]\nXOR ESI,ESI\nJMP 0x00403e43\nMOV RDI,qword ptr [0x00608a80]\nMOV ESI,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402010\n'
p137
S'41 57\n41 56\n41 54\n53\n50\n49 89 d4\n49 89 f7\n48 89 fb\ne8 aa e3 ff ff\n48 89 c7\ne8 32 e4 ff ff\n49 89 c6\n48 83 3d 07 4e 20 00 00\n75 11\nbf 31 5b 40 00\ne8 4b e4 ff ff\n48 89 05 f4 4d 20 00\n48 89 df\ne8 7c e3 ff ff\n48 8b 35 e5 4d 20 00\n48 89 c7\ne8 ad e4 ff ff\n45 84 e4\n74 61\nb9 a0 56 40 00\n41 b8 20 57 40 00\n41 b9 80 57 40 00\n48 89 df\n48 89 c6\n4c 89 f2\ne8 89 e1 ff ff\n45 84 ff\n74 21\nbe 01 00 00 00\nb9 a0 56 40 00\n41 b8 20 57 40 00\n41 b9 80 57 40 00\n48 89 df\n4c 89 f2\ne8 63 e1 ff ff\n48 8b 3d 8c 4c 20 00\ne8 97 e1 ff ff\n84 c0\n74 3a\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n48 89 df\n48 89 c6\n4c 89 f2\ne8 79 e2 ff ff\n45 84 ff\n74 10\nbe 01 00 00 00\n48 89 df\n4c 89 f2\ne8 64 e2 ff ff\n48 8b 3d 4d 4c 20 00\n31 f6\neb 0c\n48 8b 3d 42 4c 20 00\nbe 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 bd e1 ff ff\n'
p138
S'.text:0000000000403d50\n.text:0000000000403d52\n.text:0000000000403d54\n.text:0000000000403d56\n.text:0000000000403d57\n.text:0000000000403d58\n.text:0000000000403d5b\n.text:0000000000403d5e\n.text:0000000000403d61\n.text:0000000000403d66\n.text:0000000000403d69\n.text:0000000000403d6e\n.text:0000000000403d71\n.text:0000000000403d79\n.text:0000000000403d7b\n.text:0000000000403d80\n.text:0000000000403d85\n.text:0000000000403d8c\n.text:0000000000403d8f\n.text:0000000000403d94\n.text:0000000000403d9b\n.text:0000000000403d9e\n.text:0000000000403da3\n.text:0000000000403da6\n.text:0000000000403da8\n.text:0000000000403dad\n.text:0000000000403db3\n.text:0000000000403db9\n.text:0000000000403dbc\n.text:0000000000403dbf\n.text:0000000000403dc2\n.text:0000000000403dc7\n.text:0000000000403dca\n.text:0000000000403dcc\n.text:0000000000403dd1\n.text:0000000000403dd6\n.text:0000000000403ddc\n.text:0000000000403de2\n.text:0000000000403de5\n.text:0000000000403de8\n.text:0000000000403ded\n.text:0000000000403df4\n.text:0000000000403df9\n.text:0000000000403dfb\n.text:0000000000403dfd\n.text:0000000000403e01\n.text:0000000000403e02\n.text:0000000000403e04\n.text:0000000000403e06\n.text:0000000000403e08\n.text:0000000000403e09\n.text:0000000000403e0c\n.text:0000000000403e0f\n.text:0000000000403e12\n.text:0000000000403e17\n.text:0000000000403e1a\n.text:0000000000403e1c\n.text:0000000000403e21\n.text:0000000000403e24\n.text:0000000000403e27\n.text:0000000000403e2c\n.text:0000000000403e33\n.text:0000000000403e35\n.text:0000000000403e37\n.text:0000000000403e3e\n.text:0000000000403e43\n.text:0000000000403e47\n.text:0000000000403e48\n.text:0000000000403e4a\n.text:0000000000403e4c\n.text:0000000000403e4e\n'
p139
tp140
sS'XFree'
p141
(S'\n__stdcall XFree()\n'
p142
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_006080e0)();\u000a  return;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x006080e0]\n'
p144
S'ff 25 aa 61 20 00\n'
p145
S'.plt:0000000000401f30\n'
p146
tp147
sS'frame_dummy'
p148
(S'\n__stdcall frame_dummy()\n'
p149
V\u000a/* WARNING: Removing unreachable block (ram,0x004023ba) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p150
S'MOV EDI,0x607378\nCMP qword ptr [RDI],0x0\nJNZ 0x004023b0\nJMP 0x00402340\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004023ab\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00402340\n'
p151
S'bf 78 73 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p152
S'.text:00000000004023a0\n.text:00000000004023a5\n.text:00000000004023a9\n.text:00000000004023ab\n.text:00000000004023b0\n.text:00000000004023b5\n.text:00000000004023b8\n.text:00000000004023ba\n.text:00000000004023bb\n.text:00000000004023be\n.text:00000000004023c0\n.text:00000000004023c1\n'
p153
tp154
sS'XtCreatePopupShell'
p155
(S'\n__stdcall XtCreatePopupShell()\n'
p156
V\u000avoid XtCreatePopupShell(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreatePopupShell_00608078)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00608078]\n'
p158
S'ff 25 12 62 20 00\n'
p159
S'.plt:0000000000401e60\n'
p160
tp161
sS'FUN_00401d90'
p162
(S'\n__stdcall FUN_00401d90()\n'
p163
V\u000avoid FUN_00401d90(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00608010)();\u000a  return;\u000a}\u000a\u000a
p164
S'PUSH qword ptr [0x00608008]\nJMP qword ptr [0x00608010]\n'
p165
S'ff 35 72 62 20 00\nff 25 74 62 20 00\n'
p166
S'.plt:0000000000401d90\n.plt:0000000000401d96\n'
p167
tp168
sS'XtAppPending'
p169
(S'\n__stdcall XtAppPending()\n'
p170
V\u000avoid XtAppPending(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppPending_00608298)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00608298]\n'
p172
S'ff 25 f2 5f 20 00\n'
p173
S'.plt:00000000004022a0\n'
p174
tp175
sS'XtAppAddActions'
p176
(S'\n__stdcall XtAppAddActions()\n'
p177
V\u000avoid XtAppAddActions(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppAddActions_00608198)();\u000a  return;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00608198]\n'
p179
S'ff 25 f2 60 20 00\n'
p180
S'.plt:00000000004020a0\n'
p181
tp182
sS'MakeFieldMenu'
p183
(S'\n__stdcall MakeFieldMenu(XtPointer closure)\n'
p184
V\u000avoid MakeFieldMenu(XtPointer closure)\u000a\u000a{\u000a  FieldValueList *pFVar1;\u000a  undefined8 uVar2;\u000a  undefined8 uVar3;\u000a  Widget p_Var4;\u000a  int iVar5;\u000a  char *pcVar6;\u000a  FieldValue *pFVar7;\u000a  Arg args [1];\u000a  undefined8 local_48;\u000a  char *local_40;\u000a  \u000a  if (numFonts == 0) {\u000a    SetNoFonts();\u000a  }\u000a  else {\u000a    pFVar1 = fieldValues[(long)*(int *)closure];\u000a    pFVar7 = pFVar1->value;\u000a    uVar2 = XtCreatePopupShell(&DAT_00405af1,simpleMenuWidgetClass,\u000a                               *(undefined8 *)((long)closure + 8),0,0);\u000a    XtGetSubresources(uVar2,pFVar1,"options","Options",menuResources,1,0,0);\u000a    XtAddCallback(uVar2,0x607596,EnableOtherValues,(long)*(int *)closure);\u000a    if (patternFieldSpecified[(long)pFVar1->value[0].field] == 0) {\u000a      local_48 = 0x60752d;\u000a      local_40 = &DAT_00405abd;\u000a      uVar3 = XtCreateManagedWidget(&DAT_00405b06,smeBSBObjectClass,uVar2,&local_48,1);\u000a      XtAddCallback(uVar3,0x607408,AnyValue,(long)pFVar7->field);\u000a    }\u000a    iVar5 = pFVar1->count;\u000a    while (iVar5 != 0) {\u000a      local_48 = 0x60752d;\u000a      pcVar6 = pFVar7->string;\u000a      local_40 = pcVar6;\u000a      if (pcVar6 == (char *)0x0) {\u000a        pcVar6 = "nil";\u000a        local_40 = "(nil)";\u000a      }\u000a      p_Var4 = (Widget)XtCreateManagedWidget(pcVar6,smeBSBObjectClass,uVar2,&local_48,1);\u000a      XtAddCallback(p_Var4,0x607408,SelectValue,pFVar7);\u000a      pFVar7->menu_item = p_Var4;\u000a      pFVar7 = pFVar7 + 1;\u000a      iVar5 = iVar5 + -1;\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p185
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R12,RDI\nCMP dword ptr [0x00608aa0],0x0\nJZ 0x0040400f\nMOVSXD RAX,dword ptr [R12]\nMOV R15,qword ptr [0x608ac0 + RAX*0x8]\nLEA R13,[R15 + 0x10]\nMOV RSI,qword ptr [0x00608900]\nMOV RDX,qword ptr [R12 + 0x8]\nMOV EDI,0x405af1\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00401e60\nMOV R14,RAX\nMOV EDX,0x405af6\nMOV ECX,0x405afe\nMOV R8D,0x608880\nMOV R9D,0x1\nMOV RDI,R14\nMOV RSI,R15\nPUSH 0x0\nPUSH 0x0\nCALL 0x00401e80\nADD RSP,0x10\nMOVSXD RCX,dword ptr [R12]\nMOV ESI,0x607596\nMOV EDX,0x404dd0\nMOV RDI,R14\nCALL 0x00402290\nMOVSXD RAX,dword ptr [R15 + 0x10]\nCMP byte ptr [0x608b38 + RAX],0x0\nJNZ 0x00403f9c\nMOV qword ptr [RSP],0x60752d\nMOV qword ptr [RSP + 0x8],0x405abd\nMOV RSI,qword ptr [0x006088e0]\nMOV RCX,RSP\nMOV EDI,0x405b06\nMOV R8D,0x1\nMOV RDX,R14\nCALL 0x00401e90\nMOVSXD RCX,dword ptr [R13]\nMOV ESI,0x607408\nMOV EDX,0x405070\nMOV RDI,RAX\nCALL 0x00402290\nMOV EBP,dword ptr [R15]\nTEST EBP,EBP\nJZ 0x00404014\nMOV R12D,0x405b10\nMOV R15,RSP\nNOP dword ptr [RAX]\nMOV qword ptr [RSP],0x60752d\nMOV RDI,qword ptr [R13 + 0x8]\nTEST RDI,RDI\nMOV EAX,0x405b0a\nCMOVNZ RAX,RDI\nMOV qword ptr [RSP + 0x8],RAX\nCMOVZ RDI,R12\nMOV RSI,qword ptr [0x006088e0]\nMOV R8D,0x1\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00401e90\nMOV RBX,RAX\nMOV ESI,0x607408\nMOV EDX,0x405090\nMOV RDI,RBX\nMOV RCX,R13\nCALL 0x00402290\nMOV qword ptr [R13 + 0x10],RBX\nADD R13,0x30\nDEC EBP\nJNZ 0x00403fb0\nJMP 0x00404014\nCALL 0x00404070\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p186
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 fc\n83 3d c8 4b 20 00 00\n0f 84 31 01 00 00\n49 63 04 24\n4c 8b 3c c5 c0 8a 60 00\n4d 8d 6f 10\n48 8b 35 0b 4a 20 00\n49 8b 54 24 08\nbf f1 5a 40 00\n31 c9\n45 31 c0\ne8 57 df ff ff\n49 89 c6\nba f6 5a 40 00\nb9 fe 5a 40 00\n41 b8 80 88 60 00\n41 b9 01 00 00 00\n4c 89 f7\n4c 89 fe\n6a 00\n6a 00\ne8 4f df ff ff\n48 83 c4 10\n49 63 0c 24\nbe 96 75 60 00\nba d0 4d 40 00\n4c 89 f7\ne8 45 e3 ff ff\n49 63 47 10\n80 b8 38 8b 60 00 00\n75 44\n48 c7 04 24 2d 75 60 00\n48 c7 44 24 08 bd 5a 40 00\n48 8b 35 70 49 20 00\n48 89 e1\nbf 06 5b 40 00\n41 b8 01 00 00 00\n4c 89 f2\ne8 0a df ff ff\n49 63 4d 00\nbe 08 74 60 00\nba 70 50 40 00\n48 89 c7\ne8 f4 e2 ff ff\n41 8b 2f\n85 ed\n74 71\n41 bc 10 5b 40 00\n49 89 e7\n0f 1f 40 00\n48 c7 04 24 2d 75 60 00\n49 8b 7d 08\n48 85 ff\nb8 0a 5b 40 00\n48 0f 45 c7\n48 89 44 24 08\n49 0f 44 fc\n48 8b 35 08 49 20 00\n41 b8 01 00 00 00\n4c 89 f2\n4c 89 f9\ne8 a7 de ff ff\n48 89 c3\nbe 08 74 60 00\nba 90 50 40 00\n48 89 df\n4c 89 e9\ne8 8f e2 ff ff\n49 89 5d 10\n49 83 c5 30\nff cd\n75 a3\neb 05\ne8 5c 00 00 00\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p187
S'.text:0000000000403ec0\n.text:0000000000403ec1\n.text:0000000000403ec3\n.text:0000000000403ec5\n.text:0000000000403ec7\n.text:0000000000403ec9\n.text:0000000000403eca\n.text:0000000000403ece\n.text:0000000000403ed1\n.text:0000000000403ed8\n.text:0000000000403ede\n.text:0000000000403ee2\n.text:0000000000403eea\n.text:0000000000403eee\n.text:0000000000403ef5\n.text:0000000000403efa\n.text:0000000000403eff\n.text:0000000000403f01\n.text:0000000000403f04\n.text:0000000000403f09\n.text:0000000000403f0c\n.text:0000000000403f11\n.text:0000000000403f16\n.text:0000000000403f1c\n.text:0000000000403f22\n.text:0000000000403f25\n.text:0000000000403f28\n.text:0000000000403f2a\n.text:0000000000403f2c\n.text:0000000000403f31\n.text:0000000000403f35\n.text:0000000000403f39\n.text:0000000000403f3e\n.text:0000000000403f43\n.text:0000000000403f46\n.text:0000000000403f4b\n.text:0000000000403f4f\n.text:0000000000403f56\n.text:0000000000403f58\n.text:0000000000403f60\n.text:0000000000403f69\n.text:0000000000403f70\n.text:0000000000403f73\n.text:0000000000403f78\n.text:0000000000403f7e\n.text:0000000000403f81\n.text:0000000000403f86\n.text:0000000000403f8a\n.text:0000000000403f8f\n.text:0000000000403f94\n.text:0000000000403f97\n.text:0000000000403f9c\n.text:0000000000403f9f\n.text:0000000000403fa1\n.text:0000000000403fa3\n.text:0000000000403fa9\n.text:0000000000403fac\n.text:0000000000403fb0\n.text:0000000000403fb8\n.text:0000000000403fbc\n.text:0000000000403fbf\n.text:0000000000403fc4\n.text:0000000000403fc8\n.text:0000000000403fcd\n.text:0000000000403fd1\n.text:0000000000403fd8\n.text:0000000000403fde\n.text:0000000000403fe1\n.text:0000000000403fe4\n.text:0000000000403fe9\n.text:0000000000403fec\n.text:0000000000403ff1\n.text:0000000000403ff6\n.text:0000000000403ff9\n.text:0000000000403ffc\n.text:0000000000404001\n.text:0000000000404005\n.text:0000000000404009\n.text:000000000040400b\n.text:000000000040400d\n.text:000000000040400f\n.text:0000000000404014\n.text:0000000000404018\n.text:0000000000404019\n.text:000000000040401b\n.text:000000000040401d\n.text:000000000040401f\n.text:0000000000404021\n.text:0000000000404022\n'
p188
tp189
sS'XtWarning'
p190
(S'\n__stdcall XtWarning()\n'
p191
V\u000avoid XtWarning(void)\u000a\u000a{\u000a  (*(code *)PTR_XtWarning_006081a8)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x006081a8]\n'
p193
S'ff 25 e2 60 20 00\n'
p194
S'.plt:00000000004020c0\n'
p195
tp196
sS'XGetGeometry'
p197
(S'\n__stdcall XGetGeometry()\n'
p198
V\u000avoid XGetGeometry(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetGeometry_006081e0)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x006081e0]\n'
p200
S'ff 25 aa 60 20 00\n'
p201
S'.plt:0000000000402130\n'
p202
tp203
sS'XmbTextEscapement'
p204
(S'\n__stdcall XmbTextEscapement()\n'
p205
V\u000avoid XmbTextEscapement(void)\u000a\u000a{\u000a  (*(code *)PTR_XmbTextEscapement_00608278)();\u000a  return;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00608278]\n'
p207
S'ff 25 12 60 20 00\n'
p208
S'.plt:0000000000402260\n'
p209
tp210
sS'exit'
p211
(S'\n__stdcall exit(int __status)\n'
p212
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00608280)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x00608280]\n'
p214
S'ff 25 0a 60 20 00\n'
p215
S'.plt:0000000000402270\n'
p216
tp217
sS'XDefineCursor'
p218
(S'\n__stdcall XDefineCursor()\n'
p219
V\u000avoid XDefineCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XDefineCursor_006081f8)();\u000a  return;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x006081f8]\n'
p221
S'ff 25 92 60 20 00\n'
p222
S'.plt:0000000000402160\n'
p223
tp224
sS'XCopyArea'
p225
(S'\n__stdcall XCopyArea()\n'
p226
V\u000avoid XCopyArea(void)\u000a\u000a{\u000a  (*(code *)PTR_XCopyArea_00608188)();\u000a  return;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x00608188]\n'
p228
S'ff 25 02 61 20 00\n'
p229
S'.plt:0000000000402080\n'
p230
tp231
sS'DoneSelection'
p232
(S'\n__stdcall DoneSelection(Widget w, Atom * selection, Atom * target)\n'
p233
V\u000avoid DoneSelection(Widget w,Atom *selection,Atom *target)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p234
S'RET\n'
p235
S'c3\n'
p236
S'.text:0000000000405780\n'
p237
tp238
sS'XtIsSensitive'
p239
(S'\n__stdcall XtIsSensitive()\n'
p240
V\u000avoid XtIsSensitive(void)\u000a\u000a{\u000a  (*(code *)PTR_XtIsSensitive_00608110)();\u000a  return;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x00608110]\n'
p242
S'ff 25 7a 61 20 00\n'
p243
S'.plt:0000000000401f90\n'
p244
tp245
sS'XTextWidth'
p246
(S'\n__stdcall XTextWidth()\n'
p247
V\u000avoid XTextWidth(void)\u000a\u000a{\u000a  (*(code *)PTR_XTextWidth_00608250)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00608250]\n'
p249
S'ff 25 3a 60 20 00\n'
p250
S'.plt:0000000000402210\n'
p251
tp252
sS'XLoadQueryFont'
p253
(S'\n__stdcall XLoadQueryFont()\n'
p254
V\u000avoid XLoadQueryFont(void)\u000a\u000a{\u000a  (*(code *)PTR_XLoadQueryFont_00608130)();\u000a  return;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x00608130]\n'
p256
S'ff 25 5a 61 20 00\n'
p257
S'.plt:0000000000401fd0\n'
p258
tp259
sS'QuitAction'
p260
(S'\n__stdcall QuitAction(Widget w, XEvent * event, String * params, Cardinal * num_params)\n'
p261
V\u000avoid QuitAction(Widget w,XEvent *event,String *params,Cardinal *num_params)\u000a\u000a{\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p262
S'PUSH RAX\nXOR EDI,EDI\nCALL 0x00402270\n'
p263
S'50\n31 ff\ne8 d8 ca ff ff\n'
p264
S'.text:0000000000405790\n.text:0000000000405791\n.text:0000000000405793\n'
p265
tp266
sS'XtGetApplicationResources'
p267
(S'\n__stdcall XtGetApplicationResources()\n'
p268
V\u000avoid XtGetApplicationResources(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetApplicationResources_00608028)();\u000a  return;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x00608028]\n'
p270
S'ff 25 62 62 20 00\n'
p271
S'.plt:0000000000401dc0\n'
p272
tp273
sS'Matches'
p274
(S'\n__stdcall Matches(String pattern, String fontName, Boolean * fields, int * maxField)\n'
p275
V\u000aBoolean Matches(String pattern,String fontName,Boolean *fields,int *maxField)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  char cVar3;\u000a  Boolean BVar4;\u000a  bool bVar5;\u000a  String pcVar6;\u000a  uint uVar7;\u000a  Boolean field_bits [14];\u000a  uint local_4c;\u000a  undefined6 local_48;\u000a  undefined2 uStack66;\u000a  undefined6 uStack64;\u000a  int *local_38;\u000a  \u000a  _uVar7 = 0xffffffffffffffff;\u000a  if (*fontName != '-') {\u000a    _uVar7 = 0;\u000a  }\u000a  do {\u000a    bVar5 = true;\u000a    pcVar6 = pattern;\u000aLAB_00404670:\u000a    pattern = pcVar6 + 1;\u000a    cVar2 = *pcVar6;\u000a    cVar3 = *fontName;\u000a    if (cVar2 == 0) {\u000a      if (cVar3 != 0) {\u000a        return 0;\u000a      }\u000aLAB_00404705:\u000a      *maxField = (int)_uVar7;\u000a      return 1;\u000a    }\u000a    if ((cVar2 != '?') && (cVar2 != cVar3)) {\u000a      if (cVar2 != '*') {\u000a        return 0;\u000a      }\u000a      if (*pattern != 0) {\u000a        if (*fontName == 0) {\u000a          return 0;\u000a        }\u000a        local_38 = maxField;\u000a        do {\u000a          uVar7 = (uint)(*fontName == '-') + (int)_uVar7;\u000a          _uVar7 = (ulong)uVar7;\u000a          uStack64 = 0;\u000a          local_48 = 0;\u000a          uStack66 = 0;\u000a          BVar4 = Matches(pattern,fontName,(Boolean *)&local_48,(int *)&local_4c);\u000a          if (BVar4 != 0) {\u000a            *local_38 = local_4c + uVar7;\u000a            if (-1 < (int)local_4c) {\u000a              memcpy(fields + (long)(int)uVar7,&local_48,(ulong)local_4c + 1);\u000a            }\u000a            return 1;\u000a          }\u000a          pcVar1 = fontName + 1;\u000a          fontName = fontName + 1;\u000a        } while (*pcVar1 != 0);\u000a        return 0;\u000a      }\u000a      goto LAB_00404705;\u000a    }\u000a    if (cVar3 != '-') {\u000a      fontName = fontName + 1;\u000a      pcVar6 = pattern;\u000a      if (bVar5) {\u000a        fields[_uVar7] = 1;\u000a        bVar5 = false;\u000a        pcVar6 = pattern;\u000a      }\u000a      goto LAB_00404670;\u000a    }\u000a    fontName = fontName + 1;\u000a    _uVar7 = _uVar7 + 1;\u000a  } while( true );\u000a}\u000a\u000a
p276
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12,RDI\nXOR EAX,EAX\nCMP byte ptr [RBX],0x2d\nMOV R14,-0x1\nCMOVNZ R14,RAX\nJMP 0x00404656\nINC R14\nINC RBX\nMOV SIL,0x1\nJMP 0x0040466a\nMOV byte ptr [R15 + R14*0x1],0x1\nDEC R12\nXOR ESI,ESI\nINC R12\nNOP dword ptr [RAX]\nMOVZX EAX,byte ptr [R12 + -0x1]\nTEST AL,AL\nMOVZX EDX,byte ptr [RBX]\nJZ 0x00404698\nCMP AL,0x3f\nJZ 0x00404685\nCMP AL,DL\nJNZ 0x0040469e\nCMP DL,0x2d\nJZ 0x00404650\nINC RBX\nINC R12\nTEST SIL,0x1\nJZ 0x00404670\nJMP 0x00404660\nTEST DL,DL\nJNZ 0x00404701\nJMP 0x00404705\nCMP AL,0x2a\nJNZ 0x00404701\nCMP byte ptr [R12],0x0\nJZ 0x00404705\nCMP byte ptr [RBX],0x0\nJZ 0x00404701\nMOV qword ptr [RSP + 0x20],RCX\nLEA R13,[RSP + 0x10]\nLEA RBP,[RSP + 0xc]\nNOP dword ptr [RAX]\nMOV EAX,R14D\nXOR R14D,R14D\nCMP byte ptr [RBX],0x2d\nSETZ R14B\nADD R14D,EAX\nMOV qword ptr [RSP + 0x16],0x0\nMOV qword ptr [RSP + 0x10],0x0\nMOV RDI,R12\nMOV RSI,RBX\nMOV RDX,R13\nMOV RCX,RBP\nCALL 0x00404620\nTEST AL,AL\nJNZ 0x00404719\nCMP byte ptr [RBX + 0x1],0x0\nLEA RBX,[RBX + 0x1]\nJNZ 0x004046c0\nXOR EAX,EAX\nJMP 0x0040470a\nMOV dword ptr [RCX],R14D\nMOV AL,0x1\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDX,dword ptr [RSP + 0xc]\nLEA EAX,[RDX + R14*0x1]\nMOV RCX,qword ptr [RSP + 0x20]\nMOV dword ptr [RCX],EAX\nTEST EDX,EDX\nJS 0x00404708\nMOVSXD RAX,R14D\nADD R15,RAX\nINC RDX\nLEA RSI,[RSP + 0x10]\nMOV RDI,R15\nCALL 0x00402050\nJMP 0x00404708\n'
p277
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 d7\n48 89 f3\n49 89 fc\n31 c0\n80 3b 2d\n49 c7 c6 ff ff ff ff\n4c 0f 45 f0\neb 0d\n49 ff c6\n48 ff c3\n40 b6 01\neb 0f\n43 c6 04 37 01\n49 ff cc\n31 f6\n49 ff c4\n0f 1f 00\n41 0f b6 44 24 ff\n84 c0\n0f b6 13\n74 1b\n3c 3f\n74 04\n38 d0\n75 19\n80 fa 2d\n74 c6\n48 ff c3\n49 ff c4\n40 f6 c6 01\n74 da\neb c8\n84 d2\n75 65\neb 67\n3c 2a\n75 5f\n41 80 3c 24 00\n74 5c\n80 3b 00\n74 53\n48 89 4c 24 20\n4c 8d 6c 24 10\n48 8d 6c 24 0c\n0f 1f 00\n44 89 f0\n45 31 f6\n80 3b 2d\n41 0f 94 c6\n41 01 c6\n48 c7 44 24 16 00 00 00 00\n48 c7 44 24 10 00 00 00 00\n4c 89 e7\n48 89 de\n4c 89 ea\n48 89 e9\ne8 2d ff ff ff\n84 c0\n75 22\n80 7b 01 00\n48 8d 5b 01\n75 bf\n31 c0\neb 05\n44 89 31\nb0 01\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n8b 54 24 0c\n42 8d 04 32\n48 8b 4c 24 20\n89 01\n85 d2\n78 dc\n49 63 c6\n49 01 c7\n48 ff c2\n48 8d 74 24 10\n4c 89 ff\ne8 0e d9 ff ff\neb c4\n'
p278
S'.text:0000000000404620\n.text:0000000000404621\n.text:0000000000404623\n.text:0000000000404625\n.text:0000000000404627\n.text:0000000000404629\n.text:000000000040462a\n.text:000000000040462e\n.text:0000000000404631\n.text:0000000000404634\n.text:0000000000404637\n.text:0000000000404639\n.text:000000000040463c\n.text:0000000000404643\n.text:0000000000404647\n.text:0000000000404650\n.text:0000000000404653\n.text:0000000000404656\n.text:0000000000404659\n.text:0000000000404660\n.text:0000000000404665\n.text:0000000000404668\n.text:000000000040466a\n.text:000000000040466d\n.text:0000000000404670\n.text:0000000000404676\n.text:0000000000404678\n.text:000000000040467b\n.text:000000000040467d\n.text:000000000040467f\n.text:0000000000404681\n.text:0000000000404683\n.text:0000000000404685\n.text:0000000000404688\n.text:000000000040468a\n.text:000000000040468d\n.text:0000000000404690\n.text:0000000000404694\n.text:0000000000404696\n.text:0000000000404698\n.text:000000000040469a\n.text:000000000040469c\n.text:000000000040469e\n.text:00000000004046a0\n.text:00000000004046a2\n.text:00000000004046a7\n.text:00000000004046a9\n.text:00000000004046ac\n.text:00000000004046ae\n.text:00000000004046b3\n.text:00000000004046b8\n.text:00000000004046bd\n.text:00000000004046c0\n.text:00000000004046c3\n.text:00000000004046c6\n.text:00000000004046c9\n.text:00000000004046cd\n.text:00000000004046d0\n.text:00000000004046d9\n.text:00000000004046e2\n.text:00000000004046e5\n.text:00000000004046e8\n.text:00000000004046eb\n.text:00000000004046ee\n.text:00000000004046f3\n.text:00000000004046f5\n.text:00000000004046f7\n.text:00000000004046fb\n.text:00000000004046ff\n.text:0000000000404701\n.text:0000000000404703\n.text:0000000000404705\n.text:0000000000404708\n.text:000000000040470a\n.text:000000000040470e\n.text:000000000040470f\n.text:0000000000404711\n.text:0000000000404713\n.text:0000000000404715\n.text:0000000000404717\n.text:0000000000404718\n.text:0000000000404719\n.text:000000000040471d\n.text:0000000000404721\n.text:0000000000404726\n.text:0000000000404728\n.text:000000000040472a\n.text:000000000040472c\n.text:000000000040472f\n.text:0000000000404732\n.text:0000000000404735\n.text:000000000040473a\n.text:000000000040473d\n.text:0000000000404742\n'
p279
tp280
sS'Quit'
p281
(S'\n__stdcall Quit(Widget w, XtPointer closure, XtPointer callData)\n'
p282
V\u000avoid Quit(Widget w,XtPointer closure,XtPointer callData)\u000a\u000a{\u000a  XtDisplay();\u000a  XtCloseDisplay();\u000a  if (AppRes.print_on_quit != 0) {\u000a    printf("%s",currentFontNameString);\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p283
S'PUSH RAX\nCALL 0x00402110\nMOV RDI,RAX\nCALL 0x004022c0\nCMP byte ptr [0x00608a30],0x0\nJZ 0x00403d3a\nMOV RSI,qword ptr [0x00608a78]\nMOV EDI,0x405b2e\nXOR EAX,EAX\nCALL 0x00401f20\nXOR EDI,EDI\nCALL 0x00402270\n'
p284
S'50\ne8 fa e3 ff ff\n48 89 c7\ne8 a2 e5 ff ff\n80 3d 0b 4d 20 00 00\n74 13\n48 8b 35 4a 4d 20 00\nbf 2e 5b 40 00\n31 c0\ne8 e6 e1 ff ff\n31 ff\ne8 2f e5 ff ff\n'
p285
S'.text:0000000000403d10\n.text:0000000000403d11\n.text:0000000000403d16\n.text:0000000000403d19\n.text:0000000000403d1e\n.text:0000000000403d25\n.text:0000000000403d27\n.text:0000000000403d2e\n.text:0000000000403d33\n.text:0000000000403d35\n.text:0000000000403d3a\n.text:0000000000403d3c\n'
p286
tp287
sS'strcmpn'
p288
(S'\n__stdcall strcmpn(char * s1, char * s2)\n'
p289
V\u000aint strcmpn(char *s1,char *s2)\u000a\u000a{\u000a  byte bVar1;\u000a  long lVar2;\u000a  bool bVar3;\u000a  byte *pbVar4;\u000a  long lVar5;\u000a  byte *pbVar6;\u000a  bool bVar7;\u000a  \u000a  bVar3 = false;\u000a  do {\u000a    if (*s1 == 0) {\u000a      bVar7 = false;\u000a      if (*s2 == 0) {\u000a        return 0;\u000a      }\u000a    }\u000a    else {\u000a      bVar7 = false;\u000a      if ((byte)(*s1 - 0x30U) < 10) {\u000a        bVar7 = (byte)(*s2 - 0x30U) < 10;\u000a        if ((!bVar3) && ((byte)(*s2 - 0x30U) < 10)) {\u000a          pbVar4 = (byte *)s1;\u000a          pbVar6 = (byte *)s2;\u000a          if ((byte)(*s1 - 0x30U) < 10) {\u000a            lVar5 = 0;\u000a            do {\u000a              if (9 < (byte)(((byte *)s2)[lVar5] - 0x30)) break;\u000a              lVar2 = lVar5 + 1;\u000a              lVar5 = lVar5 + 1;\u000a            } while ((byte)(((byte *)s1)[lVar2] - 0x30) < 10);\u000a            pbVar6 = (byte *)s2 + lVar5;\u000a            pbVar4 = (byte *)s1 + lVar5;\u000a          }\u000a          if ((byte)(*pbVar4 - 0x30) < 10) {\u000a            if (9 < (byte)(*pbVar6 - 0x30)) {\u000a              return 1;\u000a            }\u000a          }\u000a          else {\u000a            if ((byte)(*pbVar6 - 0x30) < 10) {\u000a              return -1;\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a    bVar1 = *s2;\u000a    if ((byte)*s1 < bVar1) {\u000a      return -1;\u000a    }\u000a    if ((byte)*s1 >= bVar1 && *s1 != bVar1) {\u000a      return 1;\u000a    }\u000a    s1 = (char *)((byte *)s1 + 1);\u000a    s2 = (char *)((byte *)s2 + 1);\u000a    bVar3 = bVar7;\u000a  } while( true );\u000a}\u000a\u000a
p290
S'XOR ECX,ECX\nJMP 0x00405808\nLEA R8,[RSI + RCX*0x1]\nADD RCX,RDI\nMOV DL,byte ptr [RCX]\nADD DL,0xd0\nMOV CL,byte ptr [R8]\nADD CL,0xd0\nCMP DL,0xa\nJNC 0x004057ec\nCMP CL,0x9\nJBE 0x004057db\nJMP 0x00405875\nXOR EAX,EAX\nCMP byte ptr [RSI],0x0\nJZ 0x0040587a\nMOV CL,byte ptr [RSI]\nCMP byte ptr [RDI],CL\nJC 0x0040587b\nJBE 0x00405800\nJMP 0x00405875\nCMP CL,0xa\nJNC 0x004057db\nJMP 0x00405881\nINC RDI\nINC RSI\nMOV ECX,EAX\nMOV DL,byte ptr [RDI]\nTEST DL,DL\nJZ 0x004057d0\nADD DL,0xd0\nXOR EAX,EAX\nCMP DL,0x9\nJA 0x004057db\nMOV DL,byte ptr [RSI]\nADD DL,0xd0\nCMP DL,0xa\nSBB EAX,EAX\nAND EAX,0x1\nCMP DL,0x9\nSETA DL\nTEST ECX,ECX\nJNZ 0x004057db\nTEST DL,DL\nJNZ 0x004057db\nMOV CL,byte ptr [RDI]\nADD CL,0xd0\nCMP CL,0x9\nMOV RCX,RDI\nMOV R8,RSI\nJA 0x004057ab\nXOR ECX,ECX\nNOP dword ptr [RAX]\nMOVZX EDX,byte ptr [RSI + RCX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x004057a4\nMOVZX EDX,byte ptr [RDI + RCX*0x1 + 0x1]\nADD DL,0xd0\nINC RCX\nCMP DL,0xa\nJC 0x00405850\nJMP 0x004057a4\nMOV EAX,0x1\nRET\nMOV EAX,0xffffffff\nRET\nMOV EAX,0xffffffff\nRET\n'
p291
S'31 c9\neb 64\n4c 8d 04 0e\n48 01 f9\n8a 11\n80 c2 d0\n41 8a 08\n80 c1 d0\n80 fa 0a\n73 31\n80 f9 09\n76 1b\ne9 b0 00 00 00\n31 c0\n80 3e 00\n0f 84 9f 00 00 00\n8a 0e\n38 0f\n0f 82 96 00 00 00\n76 19\ne9 89 00 00 00\n80 f9 0a\n73 ea\ne9 8b 00 00 00\n48 ff c7\n48 ff c6\n89 c1\n8a 17\n84 d2\n74 c2\n80 c2 d0\n31 c0\n80 fa 09\n77 c3\n8a 16\n80 c2 d0\n80 fa 0a\n19 c0\n83 e0 01\n80 fa 09\n0f 97 c2\n85 c9\n75 ac\n84 d2\n75 a8\n8a 0f\n80 c1 d0\n80 f9 09\n48 89 f9\n49 89 f0\n0f 87 64 ff ff ff\n31 c9\n0f 1f 80 00 00 00 00\n0f b6 14 0e\n80 c2 d0\n80 fa 09\n0f 87 44 ff ff ff\n0f b6 54 0f 01\n80 c2 d0\n48 ff c1\n80 fa 0a\n72 e0\ne9 2f ff ff ff\nb8 01 00 00 00\nc3\nb8 ff ff ff ff\nc3\nb8 ff ff ff ff\nc3\n'
p292
S'.text:00000000004057a0\n.text:00000000004057a2\n.text:00000000004057a4\n.text:00000000004057a8\n.text:00000000004057ab\n.text:00000000004057ad\n.text:00000000004057b0\n.text:00000000004057b3\n.text:00000000004057b6\n.text:00000000004057b9\n.text:00000000004057bb\n.text:00000000004057be\n.text:00000000004057c0\n.text:00000000004057d0\n.text:00000000004057d2\n.text:00000000004057d5\n.text:00000000004057db\n.text:00000000004057dd\n.text:00000000004057df\n.text:00000000004057e5\n.text:00000000004057e7\n.text:00000000004057ec\n.text:00000000004057ef\n.text:00000000004057f1\n.text:0000000000405800\n.text:0000000000405803\n.text:0000000000405806\n.text:0000000000405808\n.text:000000000040580a\n.text:000000000040580c\n.text:000000000040580e\n.text:0000000000405811\n.text:0000000000405813\n.text:0000000000405816\n.text:0000000000405818\n.text:000000000040581a\n.text:000000000040581d\n.text:0000000000405820\n.text:0000000000405822\n.text:0000000000405825\n.text:0000000000405828\n.text:000000000040582b\n.text:000000000040582d\n.text:000000000040582f\n.text:0000000000405831\n.text:0000000000405833\n.text:0000000000405835\n.text:0000000000405838\n.text:000000000040583b\n.text:000000000040583e\n.text:0000000000405841\n.text:0000000000405847\n.text:0000000000405849\n.text:0000000000405850\n.text:0000000000405854\n.text:0000000000405857\n.text:000000000040585a\n.text:0000000000405860\n.text:0000000000405865\n.text:0000000000405868\n.text:000000000040586b\n.text:000000000040586e\n.text:0000000000405870\n.text:0000000000405875\n.text:000000000040587a\n.text:000000000040587b\n.text:0000000000405880\n.text:0000000000405881\n.text:0000000000405886\n'
p293
tp294
sS'AddScalables'
p295
(S'\n__stdcall AddScalables()\n'
p296
V\u000avoid AddScalables(int iParm1)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  char *pcVar5;\u000a  int *piVar6;\u000a  int *piVar7;\u000a  int *piVar8;\u000a  int iVar9;\u000a  int iVar10;\u000a  long lVar11;\u000a  int *piVar12;\u000a  FieldValue *pFVar13;\u000a  int iVar14;\u000a  int iVar15;\u000a  bool bVar16;\u000a  \u000a  iVar2 = fieldValues[(long)iParm1]->count;\u000a  if (0 < iVar2) {\u000a    pFVar13 = fieldValues[(long)iParm1]->value;\u000a    iVar15 = 0;\u000a    do {\u000a      iVar9 = numScaledFonts;\u000a      piVar8 = scaledFonts;\u000a      pcVar5 = pFVar13->string;\u000a      if (((pcVar5 == (char *)0x0) || (*pcVar5 != '0')) || (pcVar5[1] != 0)) {\u000a        iVar14 = pFVar13->count;\u000a        iVar10 = iVar14 + numScaledFonts;\u000a        piVar6 = (int *)XtMalloc((ulong)(uint)(iVar10 * 4));\u000a        piVar7 = pFVar13->font;\u000a        pFVar13->font = piVar6;\u000a        pFVar13->count = iVar10;\u000a        pFVar13->allocated = iVar10;\u000a        bVar16 = iVar14 == 0;\u000a        iVar10 = iVar9;\u000a        if ((!bVar16) && (iVar10 = iVar9, iVar9 != 0)) {\u000a          do {\u000a            piVar12 = piVar6;\u000a            lVar11 = 0;\u000a            while( true ) {\u000a              iVar10 = iVar9 + -1;\u000a              iVar3 = *(int *)((long)piVar8 + lVar11);\u000a              iVar4 = *piVar7;\u000a              if (iVar4 <= iVar3) break;\u000a              *(int *)((long)piVar12 + lVar11) = iVar3;\u000a              lVar11 = lVar11 + 4;\u000a              iVar9 = iVar10;\u000a              if (bVar16 || iVar10 == 0) {\u000a                piVar6 = (int *)((long)piVar12 + lVar11);\u000a                piVar8 = (int *)((long)piVar8 + lVar11);\u000a                goto joined_r0x00404b27;\u000a              }\u000a            }\u000a            iVar14 = iVar14 + -1;\u000a            if (iVar3 == iVar4) {\u000a              piVar8 = piVar8 + 1;\u000a              *(int *)((long)piVar12 + lVar11) = iVar3;\u000a              pFVar13->count = pFVar13->count + -1;\u000a              iVar9 = iVar10;\u000a            }\u000a            else {\u000a              *(int *)((long)piVar12 + lVar11) = iVar4;\u000a            }\u000a            piVar8 = (int *)((long)piVar8 + lVar11);\u000a            piVar7 = piVar7 + 1;\u000a            bVar16 = iVar14 == 0;\u000a          } while ((!bVar16) && (piVar6 = (int *)((long)piVar12 + lVar11 + 4), iVar9 != 0));\u000a          piVar6 = (int *)((long)piVar12 + lVar11 + 4);\u000a          iVar10 = iVar9;\u000a        }\u000ajoined_r0x00404b27:\u000a        if (iVar14 != 0) {\u000a          uVar1 = iVar14 - 1;\u000a          piVar12 = piVar6;\u000a          do {\u000a            iVar9 = *piVar7;\u000a            piVar7 = piVar7 + 1;\u000a            *piVar12 = iVar9;\u000a            piVar12 = piVar12 + 1;\u000a            iVar14 = iVar14 + -1;\u000a          } while (iVar14 != 0);\u000a          piVar6 = piVar6 + (ulong)uVar1 + 1;\u000a        }\u000a        while (iVar10 != 0) {\u000a          iVar9 = *piVar8;\u000a          piVar8 = piVar8 + 1;\u000a          *piVar6 = iVar9;\u000a          piVar6 = piVar6 + 1;\u000a          iVar10 = iVar10 + -1;\u000a        }\u000a        XtFree();\u000a      }\u000a      iVar15 = iVar15 + 1;\u000a      pFVar13 = pFVar13 + 1;\u000a    } while (iVar15 != iVar2);\u000a  }\u000a  return;\u000a}\u000a\u000a
p297
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOVSXD RAX,EDI\nMOV R12,qword ptr [0x608ac0 + RAX*0x8]\nMOV EAX,dword ptr [R12]\nMOV dword ptr [RSP + 0x4],EAX\nTEST EAX,EAX\nJLE 0x00404b97\nADD R12,0x10\nXOR R15D,R15D\nNOP dword ptr [RAX]\nMOV RAX,qword ptr [R12 + 0x8]\nTEST RAX,RAX\nJZ 0x00404a69\nCMP byte ptr [RAX],0x30\nJNZ 0x00404a69\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x00404b85\nMOV EBP,dword ptr [0x00608b50]\nMOV RBX,qword ptr [0x00608b48]\nMOV R13D,dword ptr [R12 + 0x18]\nLEA R14D,[R13 + RBP*0x1]\nLEA EDI,[R14*0x4]\nCALL 0x00401eb0\nMOV RDI,qword ptr [R12 + 0x20]\nMOV qword ptr [R12 + 0x20],RAX\nMOV dword ptr [R12 + 0x18],R14D\nMOV dword ptr [R12 + 0x1c],R14D\nTEST R13D,R13D\nSETNZ R9B\nMOV RCX,RDI\nJZ 0x00404b3b\nTEST EBP,EBP\nJZ 0x00404b3b\nMOV R8,RAX\nDEC EBP\nXOR ESI,ESI\nMOV EDX,dword ptr [RBX + RSI*0x1]\nMOV EAX,dword ptr [RCX]\nCMP EDX,EAX\nJGE 0x00404ae0\nMOV dword ptr [R8 + RSI*0x1],EDX\nTEST EBP,EBP\nSETNZ AL\nADD RSI,0x4\nDEC EBP\nTEST R9B,AL\nJNZ 0x00404ac0\nJMP 0x00404b30\nDEC R13D\nCMP EDX,EAX\nJNZ 0x00404b00\nLEA RBX,[RBX + RSI*0x1 + 0x4]\nMOV dword ptr [R8 + RSI*0x1],EDX\nDEC dword ptr [R12 + 0x18]\nJMP 0x00404b09\nADD RBX,RSI\nINC EBP\nMOV dword ptr [R8 + RSI*0x1],EAX\nADD RCX,0x4\nTEST R13D,R13D\nSETNZ R9B\nJZ 0x00404b1f\nLEA RAX,[R8 + RSI*0x1 + 0x4]\nTEST EBP,EBP\nJNZ 0x00404ab9\nLEA RAX,[R8 + RSI*0x1 + 0x4]\nTEST R13D,R13D\nJNZ 0x00404b40\nJMP 0x00404b66\nADD R8,RSI\nADD RBX,RSI\nINC EBP\nMOV RAX,R8\nTEST R13D,R13D\nJZ 0x00404b66\nLEA R8D,[R13 + -0x1]\nMOV RSI,RAX\nNOP word ptr [RAX + RAX*0x1]\nMOV EDX,dword ptr [RCX]\nADD RCX,0x4\nMOV dword ptr [RSI],EDX\nADD RSI,0x4\nDEC R13D\nJNZ 0x00404b50\nLEA RAX,[RAX + R8*0x4 + 0x4]\nTEST EBP,EBP\nJZ 0x00404b80\nNOP word ptr [RAX + RAX*0x1]\nMOV ECX,dword ptr [RBX]\nADD RBX,0x4\nMOV dword ptr [RAX],ECX\nADD RAX,0x4\nDEC EBP\nJNZ 0x00404b70\nCALL 0x004020e0\nINC R15D\nADD R12,0x30\nCMP R15D,dword ptr [RSP + 0x4]\nJNZ 0x00404a50\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p298
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 63 c7\n4c 8b 24 c5 c0 8a 60 00\n41 8b 04 24\n89 44 24 04\n85 c0\n0f 8e 51 01 00 00\n49 83 c4 10\n45 31 ff\n0f 1f 00\n49 8b 44 24 08\n48 85 c0\n74 0f\n80 38 30\n75 0a\n80 78 01 00\n0f 84 1c 01 00 00\n8b 2d e1 40 20 00\n48 8b 1d d2 40 20 00\n45 8b 6c 24 18\n45 8d 74 2d 00\n42 8d 3c b5 00 00 00 00\ne8 23 d4 ff ff\n49 8b 7c 24 20\n49 89 44 24 20\n45 89 74 24 18\n45 89 74 24 1c\n45 85 ed\n41 0f 95 c1\n48 89 f9\n0f 84 8a 00 00 00\n85 ed\n0f 84 82 00 00 00\n49 89 c0\nff cd\n31 f6\n8b 14 33\n8b 01\n39 c2\n7d 17\n41 89 14 30\n85 ed\n0f 95 c0\n48 83 c6 04\nff cd\n41 84 c1\n75 e3\neb 51\n41 ff cd\n39 c2\n75 19\n48 8d 5c 33 04\n41 89 14 30\n41 ff 4c 24 18\neb 12\n48 01 f3\nff c5\n41 89 04 30\n48 83 c1 04\n45 85 ed\n41 0f 95 c1\n74 09\n49 8d 44 30 04\n85 ed\n75 9a\n49 8d 44 30 04\n45 85 ed\n75 17\neb 3b\n49 01 f0\n48 01 f3\nff c5\n4c 89 c0\n45 85 ed\n74 26\n45 8d 45 ff\n48 89 c6\n66 0f 1f 84 00 00 00 00 00\n8b 11\n48 83 c1 04\n89 16\n48 83 c6 04\n41 ff cd\n75 ef\n4a 8d 44 80 04\n85 ed\n74 16\n66 0f 1f 44 00 00\n8b 0b\n48 83 c3 04\n89 08\n48 83 c0 04\nff cd\n75 f0\ne8 5b d5 ff ff\n41 ff c7\n49 83 c4 30\n44 3b 7c 24 04\n0f 85 b9 fe ff ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p299
S'.text:0000000000404a20\n.text:0000000000404a21\n.text:0000000000404a23\n.text:0000000000404a25\n.text:0000000000404a27\n.text:0000000000404a29\n.text:0000000000404a2a\n.text:0000000000404a2b\n.text:0000000000404a2e\n.text:0000000000404a36\n.text:0000000000404a3a\n.text:0000000000404a3e\n.text:0000000000404a40\n.text:0000000000404a46\n.text:0000000000404a4a\n.text:0000000000404a4d\n.text:0000000000404a50\n.text:0000000000404a55\n.text:0000000000404a58\n.text:0000000000404a5a\n.text:0000000000404a5d\n.text:0000000000404a5f\n.text:0000000000404a63\n.text:0000000000404a69\n.text:0000000000404a6f\n.text:0000000000404a76\n.text:0000000000404a7b\n.text:0000000000404a80\n.text:0000000000404a88\n.text:0000000000404a8d\n.text:0000000000404a92\n.text:0000000000404a97\n.text:0000000000404a9c\n.text:0000000000404aa1\n.text:0000000000404aa4\n.text:0000000000404aa8\n.text:0000000000404aab\n.text:0000000000404ab1\n.text:0000000000404ab3\n.text:0000000000404ab9\n.text:0000000000404abc\n.text:0000000000404abe\n.text:0000000000404ac0\n.text:0000000000404ac3\n.text:0000000000404ac5\n.text:0000000000404ac7\n.text:0000000000404ac9\n.text:0000000000404acd\n.text:0000000000404acf\n.text:0000000000404ad2\n.text:0000000000404ad6\n.text:0000000000404ad8\n.text:0000000000404adb\n.text:0000000000404add\n.text:0000000000404ae0\n.text:0000000000404ae3\n.text:0000000000404ae5\n.text:0000000000404ae7\n.text:0000000000404aec\n.text:0000000000404af0\n.text:0000000000404af5\n.text:0000000000404b00\n.text:0000000000404b03\n.text:0000000000404b05\n.text:0000000000404b09\n.text:0000000000404b0d\n.text:0000000000404b10\n.text:0000000000404b14\n.text:0000000000404b16\n.text:0000000000404b1b\n.text:0000000000404b1d\n.text:0000000000404b1f\n.text:0000000000404b24\n.text:0000000000404b27\n.text:0000000000404b29\n.text:0000000000404b30\n.text:0000000000404b33\n.text:0000000000404b36\n.text:0000000000404b38\n.text:0000000000404b3b\n.text:0000000000404b3e\n.text:0000000000404b40\n.text:0000000000404b44\n.text:0000000000404b47\n.text:0000000000404b50\n.text:0000000000404b52\n.text:0000000000404b56\n.text:0000000000404b58\n.text:0000000000404b5c\n.text:0000000000404b5f\n.text:0000000000404b61\n.text:0000000000404b66\n.text:0000000000404b68\n.text:0000000000404b6a\n.text:0000000000404b70\n.text:0000000000404b72\n.text:0000000000404b76\n.text:0000000000404b78\n.text:0000000000404b7c\n.text:0000000000404b7e\n.text:0000000000404b80\n.text:0000000000404b85\n.text:0000000000404b88\n.text:0000000000404b8c\n.text:0000000000404b91\n.text:0000000000404b97\n.text:0000000000404b9b\n.text:0000000000404b9c\n.text:0000000000404b9e\n.text:0000000000404ba0\n.text:0000000000404ba2\n.text:0000000000404ba4\n.text:0000000000404ba5\n'
p300
tp301
sS'deregister_tm_clones'
p302
(S'\n__stdcall deregister_tm_clones()\n'
p303
V\u000a/* WARNING: Removing unreachable block (ram,0x00402315) */\u000a/* WARNING: Removing unreachable block (ram,0x0040231f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p304
S'MOV EAX,0x6088bf\nPUSH RBP\nSUB RAX,0x6088b8\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00402330\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402330\nPOP RBP\nMOV EDI,0x6088b8\nJMP RAX\nPOP RBP\nRET\n'
p305
S'b8 bf 88 60 00\n55\n48 2d b8 88 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf b8 88 60 00\nff e0\n5d\nc3\n'
p306
S'.text:0000000000402300\n.text:0000000000402305\n.text:0000000000402306\n.text:000000000040230c\n.text:0000000000402310\n.text:0000000000402313\n.text:0000000000402315\n.text:000000000040231a\n.text:000000000040231d\n.text:000000000040231f\n.text:0000000000402320\n.text:0000000000402325\n.text:0000000000402330\n.text:0000000000402331\n'
p307
tp308
sS'XtCreateManagedWidget'
p309
(S'\n__stdcall XtCreateManagedWidget()\n'
p310
V\u000avoid XtCreateManagedWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreateManagedWidget_00608090)();\u000a  return;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x00608090]\n'
p312
S'ff 25 fa 61 20 00\n'
p313
S'.plt:0000000000401e90\n'
p314
tp315
sS'XTextWidth16'
p316
(S'\n__stdcall XTextWidth16()\n'
p317
V\u000avoid XTextWidth16(void)\u000a\u000a{\u000a  (*(code *)PTR_XTextWidth16_00608108)();\u000a  return;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x00608108]\n'
p319
S'ff 25 82 61 20 00\n'
p320
S'.plt:0000000000401f80\n'
p321
tp322
sS'SetNoFonts'
p323
(S'\n__stdcall SetNoFonts()\n'
p324
V\u000avoid SetNoFonts(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  matchingFontCount = 0;\u000a  SetCurrentFontCount();\u000a  XtSetSensitive(fieldBox,0);\u000a  XtSetSensitive(ownButton,0);\u000a  if (0 < AppRes.app_defaults_version) {\u000a    uVar1 = XtDisplay(sampleText);\u000a    uVar2 = XtWindow(sampleText);\u000a    (*(code *)PTR_XUnmapWindow_00608200)(uVar1,uVar2);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p325
S'PUSH RBX\nMOV dword ptr [0x00608b30],0x0\nCALL 0x004052a0\nMOV RDI,qword ptr [0x00608a68]\nXOR ESI,ESI\nCALL 0x00402010\nMOV RDI,qword ptr [0x00608a58]\nXOR ESI,ESI\nCALL 0x00402010\nCMP dword ptr [0x00608a08],0x0\nJLE 0x004040cc\nMOV RDI,qword ptr [0x00608a88]\nCALL 0x00402110\nMOV RBX,RAX\nMOV RDI,qword ptr [0x00608a88]\nCALL 0x00401ee0\nMOV RDI,RBX\nMOV RSI,RAX\nPOP RBX\nJMP 0x00402170\nPOP RBX\nRET\n'
p326
S'53\nc7 05 b5 4a 20 00 00 00 00 00\ne8 20 12 00 00\n48 8b 3d e1 49 20 00\n31 f6\ne8 82 df ff ff\n48 8b 3d c3 49 20 00\n31 f6\ne8 74 df ff ff\n83 3d 65 49 20 00 00\n7e 27\n48 8b 3d dc 49 20 00\ne8 5f e0 ff ff\n48 89 c3\n48 8b 3d cd 49 20 00\ne8 20 de ff ff\n48 89 df\n48 89 c6\n5b\ne9 a4 e0 ff ff\n5b\nc3\n'
p327
S'.text:0000000000404070\n.text:0000000000404071\n.text:000000000040407b\n.text:0000000000404080\n.text:0000000000404087\n.text:0000000000404089\n.text:000000000040408e\n.text:0000000000404095\n.text:0000000000404097\n.text:000000000040409c\n.text:00000000004040a3\n.text:00000000004040a5\n.text:00000000004040ac\n.text:00000000004040b1\n.text:00000000004040b4\n.text:00000000004040bb\n.text:00000000004040c0\n.text:00000000004040c3\n.text:00000000004040c6\n.text:00000000004040c7\n.text:00000000004040cc\n.text:00000000004040cd\n'
p328
tp329
sS'FixScalables'
p330
(S'\n__stdcall FixScalables(XtPointer closure)\n'
p331
V\u000avoid FixScalables(XtPointer closure)\u000a\u000a{\u000a  char *pcVar1;\u000a  FieldValueList *pFVar2;\u000a  FieldValueList *pFVar3;\u000a  int iVar4;\u000a  \u000a  if (0 < fieldValues[6]->count) {\u000a    iVar4 = fieldValues[6]->count + 1;\u000a    pFVar3 = fieldValues[6];\u000a    do {\u000a      pFVar2 = (FieldValueList *)&pFVar3->value[0].font;\u000a      pcVar1 = pFVar3->value[0].string;\u000a      if (((pcVar1 != (char *)0x0) && (*pcVar1 == '0')) && (pcVar1[1] == 0)) {\u000a        scaledFonts = *(int **)pFVar2;\u000a        numScaledFonts = pFVar3->value[0].count;\u000a        AddScalables(6);\u000a        NewScalables((char *)0x6);\u000a        AddScalables(7);\u000a        NewScalables((char *)0x7);\u000a        AddScalables(8);\u000a        AddScalables(9);\u000a        AddScalables(0xb);\u000a        return;\u000a      }\u000a      iVar4 = iVar4 + -1;\u000a      pFVar3 = pFVar2;\u000a    } while (1 < iVar4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p332
S'MOV RAX,qword ptr [0x00608af0]\nMOV ECX,dword ptr [RAX]\nTEST ECX,ECX\nJLE 0x004043ef\nINC ECX\nADD RAX,0x30\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDX,qword ptr [RAX + -0x18]\nTEST RDX,RDX\nJZ 0x004043e4\nCMP byte ptr [RDX],0x30\nJNZ 0x004043e4\nCMP byte ptr [RDX + 0x1],0x0\nJZ 0x004043f0\nDEC ECX\nADD RAX,0x30\nCMP ECX,0x1\nJG 0x004043d0\nRET\nPUSH RAX\nMOV RCX,qword ptr [RAX]\nMOV qword ptr [0x00608b48],RCX\nMOV EAX,dword ptr [RAX + -0x8]\nMOV dword ptr [0x00608b50],EAX\nMOV EDI,0x6\nCALL 0x00404a20\nMOV RSI,qword ptr [0x00608a20]\nMOV EDI,0x6\nCALL 0x00404bb0\nMOV EDI,0x7\nCALL 0x00404a20\nMOV RSI,qword ptr [0x00608a28]\nMOV EDI,0x7\nCALL 0x00404bb0\nMOV EDI,0x8\nCALL 0x00404a20\nMOV EDI,0x9\nCALL 0x00404a20\nMOV EDI,0xb\nPOP RAX\nJMP 0x00404a20\n'
p333
S'48 8b 05 39 47 20 00\n8b 08\n85 c9\n7e 32\nff c1\n48 83 c0 30\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 50 e8\n48 85 d2\n74 0b\n80 3a 30\n75 06\n80 7a 01 00\n74 0c\nff c9\n48 83 c0 30\n83 f9 01\n7f e1\nc3\n50\n48 8b 08\n48 89 0d 4d 47 20 00\n8b 40 f8\n89 05 4c 47 20 00\nbf 06 00 00 00\ne8 12 06 00 00\n48 8b 35 0b 46 20 00\nbf 06 00 00 00\ne8 91 07 00 00\nbf 07 00 00 00\ne8 f7 05 00 00\n48 8b 35 f8 45 20 00\nbf 07 00 00 00\ne8 76 07 00 00\nbf 08 00 00 00\ne8 dc 05 00 00\nbf 09 00 00 00\ne8 d2 05 00 00\nbf 0b 00 00 00\n58\ne9 c7 05 00 00\n'
p334
S'.text:00000000004043b0\n.text:00000000004043b7\n.text:00000000004043b9\n.text:00000000004043bb\n.text:00000000004043bd\n.text:00000000004043bf\n.text:00000000004043c3\n.text:00000000004043d0\n.text:00000000004043d4\n.text:00000000004043d7\n.text:00000000004043d9\n.text:00000000004043dc\n.text:00000000004043de\n.text:00000000004043e2\n.text:00000000004043e4\n.text:00000000004043e6\n.text:00000000004043ea\n.text:00000000004043ed\n.text:00000000004043ef\n.text:00000000004043f0\n.text:00000000004043f1\n.text:00000000004043f4\n.text:00000000004043fb\n.text:00000000004043fe\n.text:0000000000404404\n.text:0000000000404409\n.text:000000000040440e\n.text:0000000000404415\n.text:000000000040441a\n.text:000000000040441f\n.text:0000000000404424\n.text:0000000000404429\n.text:0000000000404430\n.text:0000000000404435\n.text:000000000040443a\n.text:000000000040443f\n.text:0000000000404444\n.text:0000000000404449\n.text:000000000040444e\n.text:0000000000404453\n.text:0000000000404454\n'
p335
tp336
sS'ConvertSelection'
p337
(S'\n__stdcall ConvertSelection(Widget w, Atom * selection, Atom * target, Atom * type, XtPointer * value, ulong * length, int * format)\n'
p338
V\u000aBoolean ConvertSelection(Widget w,Atom *selection,Atom *target,Atom *type,XtPointer *value,\u000a                        ulong *length,int *format)\u000a\u000a{\u000a  String __s;\u000a  char cVar1;\u000a  size_t sVar2;\u000a  Boolean BVar3;\u000a  \u000a  cVar1 = XmuConvertStandardSelection(w,0,selection,target,type,value,length,format);\u000a  BVar3 = 1;\u000a  if (cVar1 == 0) {\u000a    if (*target == 0x1f) {\u000a      *type = 0x1f;\u000a      __s = currentFontNameString;\u000a      *(String *)value = currentFontNameString;\u000a      sVar2 = strlen(__s);\u000a      *length = sVar2;\u000a      *format = 8;\u000a    }\u000a    else {\u000a      BVar3 = 0;\u000a    }\u000a  }\u000a  return BVar3;\u000a}\u000a\u000a
p339
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R9\nMOV R15,R8\nMOV R12,RCX\nMOV RBX,RDX\nMOV RAX,RSI\nMOV R13,qword ptr [RSP + 0x40]\nXOR ESI,ESI\nMOV RDX,RAX\nMOV RCX,RBX\nMOV R8,R12\nMOV R9,R15\nPUSH R13\nPUSH R14\nCALL 0x00401ed0\nADD RSP,0x10\nMOV BPL,0x1\nTEST AL,AL\nJNZ 0x0040570d\nCMP qword ptr [RBX],0x1f\nJNZ 0x0040570b\nMOV qword ptr [R12],0x1f\nMOV RDI,qword ptr [0x00608a78]\nMOV qword ptr [R15],RDI\nCALL 0x00401ef0\nMOV qword ptr [R14],RAX\nMOV dword ptr [R13],0x8\nJMP 0x0040570d\nXOR EBP,EBP\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p340
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 ce\n4d 89 c7\n49 89 cc\n48 89 d3\n48 89 f0\n4c 8b 6c 24 40\n31 f6\n48 89 c2\n48 89 d9\n4d 89 e0\n4d 89 f9\n41 55\n41 56\ne8 fa c7 ff ff\n48 83 c4 10\n40 b5 01\n84 c0\n75 2c\n48 83 3b 1f\n75 24\n49 c7 04 24 1f 00 00 00\n48 8b 3d 82 33 20 00\n49 89 3f\ne8 f2 c7 ff ff\n49 89 06\n41 c7 45 00 08 00 00 00\neb 02\n31 ed\n89 e8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p341
S'.text:00000000004056a0\n.text:00000000004056a1\n.text:00000000004056a3\n.text:00000000004056a5\n.text:00000000004056a7\n.text:00000000004056a9\n.text:00000000004056aa\n.text:00000000004056ab\n.text:00000000004056ae\n.text:00000000004056b1\n.text:00000000004056b4\n.text:00000000004056b7\n.text:00000000004056ba\n.text:00000000004056bf\n.text:00000000004056c1\n.text:00000000004056c4\n.text:00000000004056c7\n.text:00000000004056ca\n.text:00000000004056cd\n.text:00000000004056cf\n.text:00000000004056d1\n.text:00000000004056d6\n.text:00000000004056da\n.text:00000000004056dd\n.text:00000000004056df\n.text:00000000004056e1\n.text:00000000004056e5\n.text:00000000004056e7\n.text:00000000004056ef\n.text:00000000004056f6\n.text:00000000004056f9\n.text:00000000004056fe\n.text:0000000000405701\n.text:0000000000405709\n.text:000000000040570b\n.text:000000000040570d\n.text:000000000040570f\n.text:0000000000405713\n.text:0000000000405714\n.text:0000000000405716\n.text:0000000000405718\n.text:000000000040571a\n.text:000000000040571c\n.text:000000000040571d\n'
p342
tp343
sS'XtParseTranslationTable'
p344
(S'\n__stdcall XtParseTranslationTable()\n'
p345
V\u000avoid XtParseTranslationTable(void)\u000a\u000a{\u000a  (*(code *)PTR_XtParseTranslationTable_006081e8)();\u000a  return;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x006081e8]\n'
p347
S'ff 25 a2 60 20 00\n'
p348
S'.plt:0000000000402140\n'
p349
tp350
sS'XtRealizeWidget'
p351
(S'\n__stdcall XtRealizeWidget()\n'
p352
V\u000avoid XtRealizeWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtRealizeWidget_00608168)();\u000a  return;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x00608168]\n'
p354
S'ff 25 22 61 20 00\n'
p355
S'.plt:0000000000402040\n'
p356
tp357
sS'XDrawString16'
p358
(S'\n__stdcall XDrawString16()\n'
p359
V\u000avoid XDrawString16(void)\u000a\u000a{\u000a  (*(code *)PTR_XDrawString16_00608220)();\u000a  return;\u000a}\u000a\u000a
p360
S'JMP qword ptr [0x00608220]\n'
p361
S'ff 25 6a 60 20 00\n'
p362
S'.plt:00000000004021b0\n'
p363
tp364
sS'atoi'
p365
(S'\n__stdcall atoi(char * __nptr)\n'
p366
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint atoi(char *__nptr)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_atoi_00608260)();\u000a  return iVar1;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x00608260]\n'
p368
S'ff 25 2a 60 20 00\n'
p369
S'.plt:0000000000402230\n'
p370
tp371
sS'XtAppInitialize'
p372
(S'\n__stdcall XtAppInitialize()\n'
p373
V\u000avoid XtAppInitialize(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppInitialize_00608080)();\u000a  return;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x00608080]\n'
p375
S'ff 25 0a 62 20 00\n'
p376
S'.plt:0000000000401e70\n'
p377
tp378
sS'IsXLFDFontName'
p379
(S'\n__stdcall IsXLFDFontName(String fontName)\n'
p380
V\u000aBoolean IsXLFDFontName(String fontName)\u000a\u000a{\u000a  int iVar1;\u000a  char cVar2;\u000a  char *pcVar3;\u000a  bool bVar4;\u000a  \u000a  cVar2 = *fontName;\u000a  iVar1 = 0;\u000a  bVar4 = false;\u000a  if (cVar2 != 0) {\u000a    pcVar3 = fontName + 1;\u000a    do {\u000a      iVar1 = iVar1 + (uint)(cVar2 == '-');\u000a      cVar2 = *pcVar3;\u000a      pcVar3 = pcVar3 + 1;\u000a    } while (cVar2 != 0);\u000a    bVar4 = iVar1 == 0xe;\u000a  }\u000a  return (Boolean)bVar4;\u000a}\u000a\u000a
p381
S'MOV CL,byte ptr [RDI]\nXOR EAX,EAX\nTEST CL,CL\nJZ 0x0040461a\nINC RDI\nNOP dword ptr [RAX + RAX*0x1]\nXOR EDX,EDX\nCMP CL,0x2d\nSETZ DL\nADD EAX,EDX\nMOVZX ECX,byte ptr [RDI]\nINC RDI\nTEST CL,CL\nJNZ 0x00404600\nCMP EAX,0xe\nSETZ AL\nRET\n'
p382
S'8a 0f\n31 c0\n84 c9\n74 22\n48 ff c7\n0f 1f 44 00 00\n31 d2\n80 f9 2d\n0f 94 c2\n01 d0\n0f b6 0f\n48 ff c7\n84 c9\n75 ec\n83 f8 0e\n0f 94 c0\nc3\n'
p383
S'.text:00000000004045f0\n.text:00000000004045f2\n.text:00000000004045f4\n.text:00000000004045f6\n.text:00000000004045f8\n.text:00000000004045fb\n.text:0000000000404600\n.text:0000000000404602\n.text:0000000000404605\n.text:0000000000404608\n.text:000000000040460a\n.text:000000000040460d\n.text:0000000000404610\n.text:0000000000404612\n.text:0000000000404614\n.text:0000000000404617\n.text:000000000040461a\n'
p384
tp385
sS'Resize'
p386
(S'\n__stdcall Resize(Widget w)\n'
p387
V\u000avoid Resize(Widget w)\u000a\u000a{\u000a  Position dy;\u000a  Position dx;\u000a  \u000a  _Reposition((UCSLabelWidget)w,(Position *)(ulong)(w->core).width,\u000a              (Position *)(ulong)(w->core).height);\u000a  compute_bitmap_offsets((UCSLabelWidget)w);\u000a  return;\u000a}\u000a\u000a
p388
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOVZX EDX,word ptr [RBX + 0x36]\nMOVZX ESI,word ptr [RBX + 0x34]\nLEA RCX,[RSP + 0xe]\nLEA R8,[RSP + 0xc]\nCALL 0x004034a0\nMOV RDI,RBX\nCALL 0x00403360\nADD RSP,0x10\nPOP RBX\nRET\n'
p389
S'53\n48 83 ec 10\n48 89 fb\n0f b7 53 36\n0f b7 73 34\n48 8d 4c 24 0e\n4c 8d 44 24 0c\ne8 61 0f 00 00\n48 89 df\ne8 19 0e 00 00\n48 83 c4 10\n5b\nc3\n'
p390
S'.text:0000000000402520\n.text:0000000000402521\n.text:0000000000402525\n.text:0000000000402528\n.text:000000000040252c\n.text:0000000000402530\n.text:0000000000402535\n.text:000000000040253a\n.text:000000000040253f\n.text:0000000000402542\n.text:0000000000402547\n.text:000000000040254b\n.text:000000000040254c\n'
p391
tp392
sS'Redisplay'
p393
(S'\n__stdcall Redisplay(Widget gw, XEvent * event, Region region)\n'
p394
V\u000avoid Redisplay(Widget gw,XEvent *event,Region region)\u000a\u000a{\u000a  ushort uVar1;\u000a  short sVar2;\u000a  uint uVar3;\u000a  Screen *gc;\u000a  WidgetList pp_Var4;\u000a  String pcVar5;\u000a  Drawable d;\u000a  Display *dpy;\u000a  ushort uVar6;\u000a  char cVar7;\u000a  uint uVar8;\u000a  int iVar9;\u000a  long lVar10;\u000a  char *pcVar11;\u000a  size_t sVar12;\u000a  ulong uVar13;\u000a  Screen **ppSVar14;\u000a  char *str;\u000a  short sVar15;\u000a  ushort uVar16;\u000a  ulong uVar17;\u000a  char *__s;\u000a  undefined8 uVar18;\u000a  \u000a  if (region != (Region)0x0) {\u000a    uVar8 = SEXT24(*(short *)&gw[1].core.depth);\u000a    uVar1 = *(ushort *)&gw[1].core.field_0xb4;\u000a    uVar13 = (ulong)uVar1;\u000a    if (*(int *)&gw[1].core.background_pixmap == 0) {\u000a      uVar17 = (ulong)uVar8;\u000a    }\u000a    else {\u000a      uVar16 = *(ushort *)((long)&gw[1].core.border_pixmap + 4);\u000a      uVar17 = (ulong)uVar16;\u000a      if ((int)(uint)uVar16 < (int)uVar8) {\u000a        uVar13 = (ulong)(((uint)uVar1 + uVar8) - (uint)uVar16);\u000a      }\u000a    }\u000a    iVar9 = XRectInRegion(region,uVar17,(ulong)(uint)(int)*(short *)((long)&gw[1].core.depth + 2),\u000a                          uVar13,(ulong)*(ushort *)&gw[1].core.field_0xb6);\u000a    if (iVar9 == 0) {\u000a      return;\u000a    }\u000a  }\u000a  uVar18 = 0x4025be;\u000a  cVar7 = XtIsSensitive(gw);\u000a  ppSVar14 = (Screen **)&gw[1].core.colormap;\u000a  if (cVar7 != 0) {\u000a    ppSVar14 = &gw[1].core.screen;\u000a  }\u000a  gc = *ppSVar14;\u000a  pp_Var4 = gw[1].core.popup_list;\u000a  uVar1 = *(ushort *)&gw[1].core.background_pixel;\u000a  sVar12 = (size_t)uVar1;\u000a  uVar8 = (uint)uVar1;\u000a  sVar2 = *(short *)((long)&gw[1].core.depth + 2);\u000a  if (pp_Var4 == (WidgetList)0x0) {\u000a    __s = (char *)gw[1].core.border_pixel;\u000a    sVar15 = *(short *)(gw[1].core.tm.lastEventTime + 0x4a) + sVar2;\u000a    pcVar5 = gw[1].core.name;\u000a    if ((pcVar5 != (String)0x0) && (uVar3 = *(uint *)&gw[1].core.background_pixmap, uVar3 != 0)) {\u000a      XCopyPlane(((gw->core).screen)->display,pcVar5,(gw->core).window,gc,0,0,(ulong)uVar3,\u000a                 (ulong)*(uint *)((long)&gw[1].core.background_pixmap + 4),\u000a                 (ulong)*(ushort *)((long)&gw[1].core.border_pixmap + 4),\u000a                 (ulong)((uint)*(ushort *)((long)&gw[1].core.border_pixmap + 6) +\u000a                        *(int *)((long)&gw[1].core.background_pixel + 4)),1,uVar18);\u000a    }\u000a    if (*(char *)&gw[1].core.constraints == 1) {\u000a      lVar10 = XExtentsOfFontSet(gw[1].core.accelerators);\u000a      uVar16 = *(ushort *)(lVar10 + 2);\u000a      uVar6 = -uVar16;\u000a      if (0 < (short)uVar16) {\u000a        uVar6 = uVar16;\u000a      }\u000a      uVar8 = (uint)uVar6 + (int)sVar2;\u000a      uVar13 = (ulong)uVar8;\u000a      uVar16 = (ushort)uVar8;\u000a      if (uVar1 == 0x7fff) {\u000a        pcVar11 = strchr(__s,10);\u000a        while (pcVar11 != (char *)0x0) {\u000a          XmbDrawString(((gw->core).screen)->display,(gw->core).window,gw[1].core.accelerators,gc,\u000a                        (ulong)(uint)(int)*(short *)&gw[1].core.depth,\u000a                        (ulong)(uint)(int)(short)uVar13,__s,(ulong)(uint)((int)pcVar11 - (int)__s));\u000a          uVar16 = (short)uVar13 + *(short *)(lVar10 + 6);\u000a          uVar13 = (ulong)uVar16;\u000a          __s = pcVar11 + 1;\u000a          pcVar11 = strchr(__s,10);\u000a        }\u000a        sVar12 = strlen(__s);\u000a        if ((int)sVar12 == 0) {\u000a          return;\u000a        }\u000a      }\u000a      else {\u000a        if (uVar1 == 0) {\u000a          return;\u000a        }\u000a      }\u000a      XmbDrawString(((gw->core).screen)->display,(gw->core).window,gw[1].core.accelerators,gc,\u000a                    (ulong)(uint)(int)*(short *)&gw[1].core.depth,(ulong)(uint)(int)(short)uVar16,\u000a                    __s,sVar12);\u000a    }\u000a    else {\u000a      if (uVar1 == 0x7fff) {\u000a        while( true ) {\u000a          uVar18 = 0x40280f;\u000a          pcVar11 = strchr(__s,10);\u000a          if (pcVar11 == (char *)0x0) break;\u000a          cVar7 = *(char *)((long)&gw[1].core.num_popups + 1);\u000a          d = (gw->core).window;\u000a          str = (char *)(ulong)(uint)(int)*(short *)&gw[1].core.depth;\u000a          dpy = (Display *)((gw->core).screen)->display;\u000a          if (cVar7 == 1) {\u000a            XDrawString16(dpy,d,gc);\u000a          }\u000a          else {\u000a            if (cVar7 == 2) {\u000a              _XawLabelDrawUCS(dpy,d,(GC)gc,str);\u000a            }\u000a            else {\u000a              XDrawString(dpy,d,gc,str,(ulong)(uint)(int)sVar15,__s,\u000a                          (ulong)(uint)((int)pcVar11 - (int)__s),uVar18);\u000a            }\u000a          }\u000a          uVar13 = gw[1].core.tm.lastEventTime;\u000a          sVar15 = sVar15 + *(short *)(uVar13 + 0x4a) + *(short *)(uVar13 + 0x4c);\u000a          __s = pcVar11 + 1;\u000a        }\u000a        sVar12 = strlen(__s);\u000a        uVar8 = (uint)sVar12;\u000a      }\u000a      if (uVar8 != 0) {\u000a        cVar7 = *(char *)((long)&gw[1].core.num_popups + 1);\u000a        if (cVar7 == 2) {\u000a          _XawLabelDrawUCS((Display *)((gw->core).screen)->display,(gw->core).window,(GC)gc,\u000a                           (char *)(ulong)(uint)(int)*(short *)&gw[1].core.depth);\u000a        }\u000a        else {\u000a          if (cVar7 == 1) {\u000a            XDrawString16();\u000a          }\u000a          else {\u000a            XDrawString();\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    if (uVar1 == 1) {\u000a      XCopyPlane();\u000a    }\u000a    else {\u000a      XCopyArea(((gw->core).screen)->display,pp_Var4,(gw->core).window,gc,0,0,\u000a                (ulong)*(ushort *)&gw[1].core.field_0xb4,(ulong)*(ushort *)&gw[1].core.field_0xb6,\u000a                (ulong)(uint)(int)*(short *)&gw[1].core.depth,(ulong)(uint)(int)sVar2);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p395
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R15,RDI\nTEST RDX,RDX\nJZ 0x004025b6\nMOVSX EAX,word ptr [0x180 + R15]\nMOVZX ECX,word ptr [0x184 + R15]\nCMP dword ptr [0x190 + R15],0x0\nJZ 0x00402592\nMOVZX ESI,word ptr [0x14c + R15]\nCMP EAX,ESI\nJLE 0x00402594\nADD ECX,EAX\nSUB ECX,ESI\nJMP 0x00402594\nMOV ESI,EAX\nMOVSX EAX,word ptr [0x182 + R15]\nMOVZX R8D,word ptr [0x186 + R15]\nMOV RDI,RDX\nMOV EDX,EAX\nCALL 0x00402200\nTEST EAX,EAX\nJZ 0x00402948\nMOV RDI,R15\nCALL 0x00401f90\nLEA RCX,[0x170 + R15]\nLEA RDX,[0x168 + R15]\nTEST AL,AL\nCMOVNZ RCX,RDX\nMOV RAX,qword ptr [RCX]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RSI,qword ptr [0x150 + R15]\nMOVZX EAX,word ptr [0x188 + R15]\nMOVSX R12D,word ptr [0x182 + R15]\nTEST RSI,RSI\nJZ 0x00402654\nMOV RCX,qword ptr [0x98 + R15]\nMOV RDX,qword ptr [0xa8 + R15]\nMOV RDI,qword ptr [RCX + 0x8]\nMOVZX R10D,word ptr [0x184 + R15]\nMOVZX EBP,word ptr [0x186 + R15]\nMOVSX EBX,word ptr [0x180 + R15]\nCMP EAX,0x1\nJNZ 0x004027b3\nSUB RSP,0x8\nMOV R8D,0x0\nMOV R9D,0x0\nMOV RCX,qword ptr [RSP + 0x10]\nPUSH 0x1\nPUSH R12\nPUSH RBX\nPUSH RBP\nPUSH R10\nCALL 0x00401e20\nADD RSP,0x48\nJMP 0x0040294c\nLEA R13,[0x128 + R15]\nMOV RCX,qword ptr [R13 + 0x8]\nMOV R14,qword ptr [R13 + 0x18]\nMOVZX EBX,word ptr [RCX + 0x4a]\nADD BX,R12W\nMOV RSI,qword ptr [R13 + 0x38]\nTEST RSI,RSI\nJZ 0x004026dd\nMOV R10D,dword ptr [R13 + 0x68]\nTEST R10D,R10D\nJZ 0x004026dd\nMOV RCX,qword ptr [0x98 + R15]\nMOV RDX,qword ptr [0xa8 + R15]\nMOV RDI,qword ptr [RCX + 0x8]\nMOV qword ptr [RSP + 0x10],RAX\nMOV EAX,dword ptr [0x194 + R15]\nMOVZX R11D,word ptr [0x14c + R15]\nMOVZX EBP,word ptr [0x14e + R15]\nADD EBP,dword ptr [0x18c + R15]\nSUB RSP,0x8\nMOV R8D,0x0\nMOV R9D,0x0\nMOV RCX,qword ptr [RSP + 0x10]\nPUSH 0x1\nPUSH RBP\nPUSH R11\nPUSH RAX\nPUSH R10\nCALL 0x00401e20\nMOV RAX,qword ptr [RSP + 0x40]\nADD RSP,0x30\nCMP byte ptr [0xf8 + R15],0x1\nJNZ 0x004027d8\nMOV RDI,qword ptr [R13 + 0x10]\nMOV RBX,RAX\nCALL 0x00402190\nMOV R13,RAX\nMOVZX EAX,word ptr [R13 + 0x2]\nMOV BP,AX\nNEG BP\nCMOVL BP,AX\nADD EBP,R12D\nCMP EBX,0x7fff\nJNZ 0x004028a7\nMOV ESI,0xa\nMOV RDI,R14\nCALL 0x00401f10\nMOV RBX,RAX\nTEST RBX,RBX\nMOV R12,qword ptr [RSP + 0x8]\nJZ 0x0040279b\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [0x98 + R15]\nMOV RSI,qword ptr [0xa8 + R15]\nMOV RDI,qword ptr [RAX + 0x8]\nMOV RDX,qword ptr [0x138 + R15]\nMOVSX R8D,word ptr [0x180 + R15]\nMOVSX EBP,BP\nMOV EAX,EBX\nSUB EAX,R14D\nMOV RCX,R12\nMOV R9D,EBP\nPUSH RAX\nPUSH R14\nCALL 0x00401fe0\nADD RSP,0x10\nADD BP,word ptr [R13 + 0x6]\nMOV R14,RBX\nINC R14\nMOV ESI,0xa\nMOV RDI,R14\nCALL 0x00401f10\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00402740\nMOV RDI,R14\nCALL 0x00401ef0\nMOV RBX,RAX\nTEST EBX,EBX\nJNZ 0x004028b4\nJMP 0x00402948\nMOV R8D,0x0\nMOV R9D,0x0\nMOV RCX,qword ptr [RSP + 0x8]\nPUSH R12\nPUSH RBX\nPUSH RBP\nPUSH R10\nCALL 0x00402080\nADD RSP,0x38\nJMP 0x0040294c\nCMP EAX,0x7fff\nJZ 0x00402802\nJMP 0x004028f2\nMOV RAX,qword ptr [R13 + 0x8]\nADD BX,word ptr [RAX + 0x4a]\nADD BX,word ptr [RAX + 0x4c]\nMOV R14,R12\nINC R14\nMOV ESI,0xa\nMOV RDI,R14\nCALL 0x00401f10\nMOV R12,RAX\nTEST R12,R12\nJZ 0x004028ea\nMOVZX EDX,byte ptr [0x159 + R15]\nMOV RDI,qword ptr [0x98 + R15]\nMOV RSI,qword ptr [0xa8 + R15]\nMOV EBP,R12D\nSUB EBP,R14D\nMOVSX ECX,word ptr [0x180 + R15]\nMOV RDI,qword ptr [RDI + 0x8]\nMOVSX R8D,BX\nCMP DL,0x1\nJNZ 0x00402870\nMOV EAX,EBP\nSHR EAX,0x1f\nADD EAX,EBP\nSAR EAX,1\nSUB RSP,0x8\nMOV RDX,qword ptr [RSP + 0x10]\nMOV R9,R14\nPUSH RAX\nCALL 0x004021b0\nADD RSP,0x10\nJMP 0x004027f0\nSUB RSP,0x8\nCMP DL,0x2\nJNZ 0x00402890\nMOV RDX,qword ptr [RSP + 0x10]\nMOV R9,R14\nPUSH RBP\nCALL 0x00403390\nADD RSP,0x10\nJMP 0x004027f0\nMOV RDX,qword ptr [RSP + 0x10]\nMOV R9,R14\nPUSH RBP\nCALL 0x00402150\nADD RSP,0x10\nJMP 0x004027f0\nMOV R12,qword ptr [RSP + 0x8]\nTEST EBX,EBX\nJZ 0x00402948\nMOV RAX,qword ptr [0x98 + R15]\nMOV RSI,qword ptr [0xa8 + R15]\nMOV RDI,qword ptr [RAX + 0x8]\nMOV RDX,qword ptr [0x138 + R15]\nMOVSX R8D,word ptr [0x180 + R15]\nMOVSX R9D,BP\nMOV RCX,R12\nPUSH RBX\nPUSH R14\nCALL 0x00401fe0\nADD RSP,0x28\nJMP 0x0040294c\nMOV RDI,R14\nCALL 0x00401ef0\nTEST EAX,EAX\nMOV RDX,qword ptr [RSP + 0x8]\nJZ 0x00402948\nMOV R9B,byte ptr [0x159 + R15]\nMOVSX R8D,BX\nMOV RDI,qword ptr [0x98 + R15]\nMOV RSI,qword ptr [0xa8 + R15]\nMOVSX ECX,word ptr [0x180 + R15]\nMOV RDI,qword ptr [RDI + 0x8]\nCMP R9B,0x2\nJZ 0x00402957\nCMP R9B,0x1\nJNZ 0x0040296a\nMOV EBP,EAX\nSHR EBP,0x1f\nADD EBP,EAX\nSAR EBP,1\nSUB RSP,0x8\nMOV R9,R14\nPUSH RBP\nCALL 0x004021b0\nADD RSP,0x28\nJMP 0x0040294c\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nSUB RSP,0x8\nMOV R9,R14\nPUSH RAX\nCALL 0x00403390\nADD RSP,0x28\nJMP 0x0040294c\nSUB RSP,0x8\nMOV R9,R14\nPUSH RAX\nCALL 0x00402150\nADD RSP,0x28\nJMP 0x0040294c\n'
p396
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 ff\n48 85 d2\n74 50\n41 0f bf 87 80 01 00 00\n41 0f b7 8f 84 01 00 00\n41 83 bf 90 01 00 00 00\n74 12\n41 0f b7 b7 4c 01 00 00\n39 f0\n7e 08\n01 c1\n29 f1\neb 02\n89 c6\n41 0f bf 87 82 01 00 00\n45 0f b7 87 86 01 00 00\n48 89 d7\n89 c2\ne8 52 fc ff ff\n85 c0\n0f 84 92 03 00 00\n4c 89 ff\ne8 d2 f9 ff ff\n49 8d 8f 70 01 00 00\n49 8d 97 68 01 00 00\n84 c0\n48 0f 45 ca\n48 8b 01\n48 89 44 24 08\n49 8b b7 50 01 00 00\n41 0f b7 87 88 01 00 00\n45 0f bf a7 82 01 00 00\n48 85 f6\n74 5e\n49 8b 8f 98 00 00 00\n49 8b 97 a8 00 00 00\n48 8b 79 08\n45 0f b7 97 84 01 00 00\n41 0f b7 af 86 01 00 00\n41 0f bf 9f 80 01 00 00\n83 f8 01\n0f 85 8a 01 00 00\n48 83 ec 08\n41 b8 00 00 00 00\n41 b9 00 00 00 00\n48 8b 4c 24 10\n6a 01\n41 54\n53\n55\n41 52\ne8 d5 f7 ff ff\n48 83 c4 48\ne9 f8 02 00 00\n4d 8d af 28 01 00 00\n49 8b 4d 08\n4d 8b 75 18\n0f b7 59 4a\n66 44 01 e3\n49 8b 75 38\n48 85 f6\n74 69\n45 8b 55 68\n45 85 d2\n74 60\n49 8b 8f 98 00 00 00\n49 8b 97 a8 00 00 00\n48 8b 79 08\n48 89 44 24 10\n41 8b 87 94 01 00 00\n45 0f b7 9f 4c 01 00 00\n41 0f b7 af 4e 01 00 00\n41 03 af 8c 01 00 00\n48 83 ec 08\n41 b8 00 00 00 00\n41 b9 00 00 00 00\n48 8b 4c 24 10\n6a 01\n55\n41 53\n50\n41 52\ne8 4c f7 ff ff\n48 8b 44 24 40\n48 83 c4 30\n41 80 bf f8 00 00 00 01\n0f 85 ed 00 00 00\n49 8b 7d 10\n48 89 c3\ne8 99 fa ff ff\n49 89 c5\n41 0f b7 45 02\n66 89 c5\n66 f7 dd\n66 0f 4c e8\n44 01 e5\n81 fb ff 7f 00 00\n0f 85 8f 01 00 00\nbe 0a 00 00 00\n4c 89 f7\ne8 eb f7 ff ff\n48 89 c3\n48 85 db\n4c 8b 64 24 08\n74 69\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 87 98 00 00 00\n49 8b b7 a8 00 00 00\n48 8b 78 08\n49 8b 97 38 01 00 00\n45 0f bf 87 80 01 00 00\n0f bf ed\n89 d8\n44 29 f0\n4c 89 e1\n41 89 e9\n50\n41 56\ne8 69 f8 ff ff\n48 83 c4 10\n66 41 03 6d 06\n49 89 de\n49 ff c6\nbe 0a 00 00 00\n4c 89 f7\ne8 7d f7 ff ff\n48 89 c3\n48 85 db\n75 a5\n4c 89 f7\ne8 4d f7 ff ff\n48 89 c3\n85 db\n0f 85 06 01 00 00\ne9 95 01 00 00\n41 b8 00 00 00 00\n41 b9 00 00 00 00\n48 8b 4c 24 08\n41 54\n53\n55\n41 52\ne8 b1 f8 ff ff\n48 83 c4 38\ne9 74 01 00 00\n3d ff 7f 00 00\n74 23\ne9 0e 01 00 00\n49 8b 45 08\n66 03 58 4a\n66 03 58 4c\n4d 89 e6\n49 ff c6\nbe 0a 00 00 00\n4c 89 f7\ne8 01 f7 ff ff\n49 89 c4\n4d 85 e4\n0f 84 cf 00 00 00\n41 0f b6 97 59 01 00 00\n49 8b bf 98 00 00 00\n49 8b b7 a8 00 00 00\n44 89 e5\n44 29 f5\n41 0f bf 8f 80 01 00 00\n48 8b 7f 08\n44 0f bf c3\n80 fa 01\n75 24\n89 e8\nc1 e8 1f\n01 e8\nd1 f8\n48 83 ec 08\n48 8b 54 24 10\n4d 89 f1\n50\ne8 49 f9 ff ff\n48 83 c4 10\neb 83\n48 83 ec 08\n80 fa 02\n75 17\n48 8b 54 24 10\n4d 89 f1\n55\ne8 09 0b 00 00\n48 83 c4 10\ne9 60 ff ff ff\n48 8b 54 24 10\n4d 89 f1\n55\ne8 b2 f8 ff ff\n48 83 c4 10\ne9 49 ff ff ff\n4c 8b 64 24 08\n85 db\n0f 84 94 00 00 00\n49 8b 87 98 00 00 00\n49 8b b7 a8 00 00 00\n48 8b 78 08\n49 8b 97 38 01 00 00\n45 0f bf 87 80 01 00 00\n44 0f bf cd\n4c 89 e1\n53\n41 56\ne8 fc f6 ff ff\n48 83 c4 28\neb 62\n4c 89 f7\ne8 fe f5 ff ff\n85 c0\n48 8b 54 24 08\n74 4d\n45 8a 8f 59 01 00 00\n44 0f bf c3\n49 8b bf 98 00 00 00\n49 8b b7 a8 00 00 00\n41 0f bf 8f 80 01 00 00\n48 8b 7f 08\n41 80 f9 02\n74 31\n41 80 f9 01\n75 3e\n89 c5\nc1 ed 1f\n01 c5\nd1 fd\n48 83 ec 08\n4d 89 f1\n55\ne8 6e f8 ff ff\n48 83 c4 28\neb 04\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 83 ec 08\n4d 89 f1\n50\ne8 2c 0a 00 00\n48 83 c4 28\neb e2\n48 83 ec 08\n4d 89 f1\n50\ne8 d9 f7 ff ff\n48 83 c4 28\neb cf\n'
p397
S'.text:0000000000402550\n.text:0000000000402551\n.text:0000000000402553\n.text:0000000000402555\n.text:0000000000402557\n.text:0000000000402559\n.text:000000000040255a\n.text:000000000040255e\n.text:0000000000402561\n.text:0000000000402564\n.text:0000000000402566\n.text:000000000040256e\n.text:0000000000402576\n.text:000000000040257e\n.text:0000000000402580\n.text:0000000000402588\n.text:000000000040258a\n.text:000000000040258c\n.text:000000000040258e\n.text:0000000000402590\n.text:0000000000402592\n.text:0000000000402594\n.text:000000000040259c\n.text:00000000004025a4\n.text:00000000004025a7\n.text:00000000004025a9\n.text:00000000004025ae\n.text:00000000004025b0\n.text:00000000004025b6\n.text:00000000004025b9\n.text:00000000004025be\n.text:00000000004025c5\n.text:00000000004025cc\n.text:00000000004025ce\n.text:00000000004025d2\n.text:00000000004025d5\n.text:00000000004025da\n.text:00000000004025e1\n.text:00000000004025e9\n.text:00000000004025f1\n.text:00000000004025f4\n.text:00000000004025f6\n.text:00000000004025fd\n.text:0000000000402604\n.text:0000000000402608\n.text:0000000000402610\n.text:0000000000402618\n.text:0000000000402620\n.text:0000000000402623\n.text:0000000000402629\n.text:000000000040262d\n.text:0000000000402633\n.text:0000000000402639\n.text:000000000040263e\n.text:0000000000402640\n.text:0000000000402642\n.text:0000000000402643\n.text:0000000000402644\n.text:0000000000402646\n.text:000000000040264b\n.text:000000000040264f\n.text:0000000000402654\n.text:000000000040265b\n.text:000000000040265f\n.text:0000000000402663\n.text:0000000000402667\n.text:000000000040266b\n.text:000000000040266f\n.text:0000000000402672\n.text:0000000000402674\n.text:0000000000402678\n.text:000000000040267b\n.text:000000000040267d\n.text:0000000000402684\n.text:000000000040268b\n.text:000000000040268f\n.text:0000000000402694\n.text:000000000040269b\n.text:00000000004026a3\n.text:00000000004026ab\n.text:00000000004026b2\n.text:00000000004026b6\n.text:00000000004026bc\n.text:00000000004026c2\n.text:00000000004026c7\n.text:00000000004026c9\n.text:00000000004026ca\n.text:00000000004026cc\n.text:00000000004026cd\n.text:00000000004026cf\n.text:00000000004026d4\n.text:00000000004026d9\n.text:00000000004026dd\n.text:00000000004026e5\n.text:00000000004026eb\n.text:00000000004026ef\n.text:00000000004026f2\n.text:00000000004026f7\n.text:00000000004026fa\n.text:00000000004026ff\n.text:0000000000402702\n.text:0000000000402705\n.text:0000000000402709\n.text:000000000040270c\n.text:0000000000402712\n.text:0000000000402718\n.text:000000000040271d\n.text:0000000000402720\n.text:0000000000402725\n.text:0000000000402728\n.text:000000000040272b\n.text:0000000000402730\n.text:0000000000402732\n.text:0000000000402740\n.text:0000000000402747\n.text:000000000040274e\n.text:0000000000402752\n.text:0000000000402759\n.text:0000000000402761\n.text:0000000000402764\n.text:0000000000402766\n.text:0000000000402769\n.text:000000000040276c\n.text:000000000040276f\n.text:0000000000402770\n.text:0000000000402772\n.text:0000000000402777\n.text:000000000040277b\n.text:0000000000402780\n.text:0000000000402783\n.text:0000000000402786\n.text:000000000040278b\n.text:000000000040278e\n.text:0000000000402793\n.text:0000000000402796\n.text:0000000000402799\n.text:000000000040279b\n.text:000000000040279e\n.text:00000000004027a3\n.text:00000000004027a6\n.text:00000000004027a8\n.text:00000000004027ae\n.text:00000000004027b3\n.text:00000000004027b9\n.text:00000000004027bf\n.text:00000000004027c4\n.text:00000000004027c6\n.text:00000000004027c7\n.text:00000000004027c8\n.text:00000000004027ca\n.text:00000000004027cf\n.text:00000000004027d3\n.text:00000000004027d8\n.text:00000000004027dd\n.text:00000000004027df\n.text:00000000004027f0\n.text:00000000004027f4\n.text:00000000004027f8\n.text:00000000004027fc\n.text:00000000004027ff\n.text:0000000000402802\n.text:0000000000402807\n.text:000000000040280a\n.text:000000000040280f\n.text:0000000000402812\n.text:0000000000402815\n.text:000000000040281b\n.text:0000000000402823\n.text:000000000040282a\n.text:0000000000402831\n.text:0000000000402834\n.text:0000000000402837\n.text:000000000040283f\n.text:0000000000402843\n.text:0000000000402847\n.text:000000000040284a\n.text:000000000040284c\n.text:000000000040284e\n.text:0000000000402851\n.text:0000000000402853\n.text:0000000000402855\n.text:0000000000402859\n.text:000000000040285e\n.text:0000000000402861\n.text:0000000000402862\n.text:0000000000402867\n.text:000000000040286b\n.text:0000000000402870\n.text:0000000000402874\n.text:0000000000402877\n.text:0000000000402879\n.text:000000000040287e\n.text:0000000000402881\n.text:0000000000402882\n.text:0000000000402887\n.text:000000000040288b\n.text:0000000000402890\n.text:0000000000402895\n.text:0000000000402898\n.text:0000000000402899\n.text:000000000040289e\n.text:00000000004028a2\n.text:00000000004028a7\n.text:00000000004028ac\n.text:00000000004028ae\n.text:00000000004028b4\n.text:00000000004028bb\n.text:00000000004028c2\n.text:00000000004028c6\n.text:00000000004028cd\n.text:00000000004028d5\n.text:00000000004028d9\n.text:00000000004028dc\n.text:00000000004028dd\n.text:00000000004028df\n.text:00000000004028e4\n.text:00000000004028e8\n.text:00000000004028ea\n.text:00000000004028ed\n.text:00000000004028f2\n.text:00000000004028f4\n.text:00000000004028f9\n.text:00000000004028fb\n.text:0000000000402902\n.text:0000000000402906\n.text:000000000040290d\n.text:0000000000402914\n.text:000000000040291c\n.text:0000000000402920\n.text:0000000000402924\n.text:0000000000402926\n.text:000000000040292a\n.text:000000000040292c\n.text:000000000040292e\n.text:0000000000402931\n.text:0000000000402933\n.text:0000000000402935\n.text:0000000000402939\n.text:000000000040293c\n.text:000000000040293d\n.text:0000000000402942\n.text:0000000000402946\n.text:0000000000402948\n.text:000000000040294c\n.text:000000000040294d\n.text:000000000040294f\n.text:0000000000402951\n.text:0000000000402953\n.text:0000000000402955\n.text:0000000000402956\n.text:0000000000402957\n.text:000000000040295b\n.text:000000000040295e\n.text:000000000040295f\n.text:0000000000402964\n.text:0000000000402968\n.text:000000000040296a\n.text:000000000040296e\n.text:0000000000402971\n.text:0000000000402972\n.text:0000000000402977\n.text:000000000040297b\n'
p398
tp399
sS'SortFields'
p400
(S'\n__stdcall SortFields(XtPointer closure)\n'
p401
V\u000avoid SortFields(XtPointer closure)\u000a\u000a{\u000a  uint uVar1;\u000a  FieldValueList *pFVar2;\u000a  long lVar3;\u000a  FieldValue *__base;\u000a  int *piVar4;\u000a  ulong uVar5;\u000a  code *__compar;\u000a  long lVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  long lVar9;\u000a  ulong __nmemb;\u000a  \u000a  lVar9 = 0;\u000a  do {\u000a    pFVar2 = fieldValues[lVar9];\u000a    uVar1 = pFVar2->count;\u000a    __nmemb = SEXT48((int)uVar1);\u000a    lVar3 = XtMalloc((ulong)(uVar1 * 4));\u000a    if (0 < (long)__nmemb) {\u000a      __base = pFVar2->value;\u000a      uVar5 = 0;\u000a      do {\u000a        __base->field = (int)uVar5;\u000a        uVar5 = uVar5 + 1;\u000a        __base = __base + 1;\u000a      } while ((__nmemb & 0xffffffff) != uVar5);\u000a    }\u000a    __base = pFVar2->value;\u000a    uVar8 = (uint)lVar9;\u000a    uVar7 = (uint)(__nmemb & 0xffffffff);\u000a    if ((uVar8 < 0xc) && ((uVar7 >> (uVar8 & 0x1f) & 1) != 0)) {\u000a      __compar = NumericSort;\u000a    }\u000a    else {\u000a      __compar = AlphabeticSort;\u000a    }\u000a    qsort(__base,__nmemb,0x30,__compar);\u000a    if (0 < (int)uVar7) {\u000a      __nmemb = 0;\u000a      do {\u000a        *(undefined4 *)(lVar3 + (long)__base->field * 4) = (int)__nmemb;\u000a        __base->field = uVar8;\u000a        __nmemb = __nmemb + 1;\u000a        __base = __base + 1;\u000a      } while ((ulong)uVar1 != __nmemb);\u000a    }\u000a    if (0 < numFonts) {\u000a      piVar4 = fonts->value_index + lVar9;\u000a      lVar6 = 0;\u000a      do {\u000a        if (-1 < (long)*piVar4) {\u000a          *piVar4 = *(int *)(lVar3 + (long)*piVar4 * 4);\u000a        }\u000a        lVar6 = lVar6 + 1;\u000a        piVar4 = piVar4 + 0xe;\u000a      } while (lVar6 < (long)numFonts);\u000a    }\u000a    XtFree();\u000a    lVar9 = lVar9 + 1;\u000a  } while (lVar9 != 0xe);\u000a  return;\u000a}\u000a\u000a
p402
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nXOR R12D,R12D\nMOV R13D,0xbc0\nJMP 0x00404490\nMOV EDX,0x30\nMOV ECX,0x404d70\nJMP 0x004044e8\nMOV RBX,qword ptr [0x608ac0 + R12*0x8]\nMOVSXD R15,dword ptr [RBX]\nLEA EDI,[R15*0x4]\nCALL 0x00401eb0\nMOV R14,RAX\nTEST R15,R15\nMOV EBP,R15D\nJLE 0x004044ce\nLEA RAX,[RBX + 0x10]\nXOR ECX,ECX\nNOP dword ptr [RAX]\nMOV dword ptr [RAX],ECX\nINC RCX\nADD RAX,0x30\nCMP RBP,RCX\nJNZ 0x004044c0\nADD RBX,0x10\nCMP R12D,0xb\nJA 0x00404476\nBT EBP,R12D\nJNC 0x00404476\nMOV EDX,0x30\nMOV ECX,0x404d00\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00401e50\nTEST EBP,EBP\nJLE 0x00404516\nMOV EAX,R15D\nXOR ECX,ECX\nNOP dword ptr [RAX]\nMOVSXD RDX,dword ptr [RBX]\nMOV dword ptr [R14 + RDX*0x4],ECX\nMOV dword ptr [RBX],R12D\nINC RCX\nADD RBX,0x30\nCMP RAX,RCX\nJNZ 0x00404500\nCMP dword ptr [0x00608aa0],0x0\nJLE 0x00404551\nLEA RAX,[R12*0x4]\nADD RAX,qword ptr [0x00608aa8]\nXOR ECX,ECX\nMOVSXD RDX,dword ptr [RAX]\nTEST RDX,RDX\nJS 0x0040453e\nMOV EDX,dword ptr [R14 + RDX*0x4]\nMOV dword ptr [RAX],EDX\nINC RCX\nMOVSXD RDX,dword ptr [0x00608aa0]\nADD RAX,0x38\nCMP RCX,RDX\nJL 0x00404530\nMOV RDI,R14\nCALL 0x004020e0\nINC R12\nCMP R12,0xe\nJNZ 0x00404490\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p403
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 31 e4\n41 bd c0 0b 00 00\neb 1a\nba 30 00 00 00\nb9 70 4d 40 00\neb 66\n4a 8b 1c e5 c0 8a 60 00\n4c 63 3b\n42 8d 3c bd 00 00 00 00\ne8 08 da ff ff\n49 89 c6\n4d 85 ff\n44 89 fd\n7e 1b\n48 8d 43 10\n31 c9\n0f 1f 80 00 00 00 00\n89 08\n48 ff c1\n48 83 c0 30\n48 39 cd\n75 f2\n48 83 c3 10\n41 83 fc 0b\n77 9e\n45 0f a3 e5\n73 98\nba 30 00 00 00\nb9 00 4d 40 00\n48 89 df\n4c 89 fe\ne8 5d d9 ff ff\n85 ed\n7e 1f\n44 89 f8\n31 c9\n0f 1f 40 00\n48 63 13\n41 89 0c 96\n44 89 23\n48 ff c1\n48 83 c3 30\n48 39 c8\n75 ea\n83 3d 83 45 20 00 00\n7e 32\n4a 8d 04 a5 00 00 00 00\n48 03 05 7a 45 20 00\n31 c9\n48 63 10\n48 85 d2\n78 06\n41 8b 14 96\n89 10\n48 ff c1\n48 63 15 58 45 20 00\n48 83 c0 38\n48 39 d1\n7c df\n4c 89 f7\ne8 87 db ff ff\n49 ff c4\n49 83 fc 0e\n0f 85 2a ff ff ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p404
S'.text:0000000000404460\n.text:0000000000404461\n.text:0000000000404463\n.text:0000000000404465\n.text:0000000000404467\n.text:0000000000404469\n.text:000000000040446a\n.text:000000000040446b\n.text:000000000040446e\n.text:0000000000404474\n.text:0000000000404476\n.text:000000000040447b\n.text:0000000000404480\n.text:0000000000404490\n.text:0000000000404498\n.text:000000000040449b\n.text:00000000004044a3\n.text:00000000004044a8\n.text:00000000004044ab\n.text:00000000004044ae\n.text:00000000004044b1\n.text:00000000004044b3\n.text:00000000004044b7\n.text:00000000004044b9\n.text:00000000004044c0\n.text:00000000004044c2\n.text:00000000004044c5\n.text:00000000004044c9\n.text:00000000004044cc\n.text:00000000004044ce\n.text:00000000004044d2\n.text:00000000004044d6\n.text:00000000004044d8\n.text:00000000004044dc\n.text:00000000004044de\n.text:00000000004044e3\n.text:00000000004044e8\n.text:00000000004044eb\n.text:00000000004044ee\n.text:00000000004044f3\n.text:00000000004044f5\n.text:00000000004044f7\n.text:00000000004044fa\n.text:00000000004044fc\n.text:0000000000404500\n.text:0000000000404503\n.text:0000000000404507\n.text:000000000040450a\n.text:000000000040450d\n.text:0000000000404511\n.text:0000000000404514\n.text:0000000000404516\n.text:000000000040451d\n.text:000000000040451f\n.text:0000000000404527\n.text:000000000040452e\n.text:0000000000404530\n.text:0000000000404533\n.text:0000000000404536\n.text:0000000000404538\n.text:000000000040453c\n.text:000000000040453e\n.text:0000000000404541\n.text:0000000000404548\n.text:000000000040454c\n.text:000000000040454f\n.text:0000000000404551\n.text:0000000000404554\n.text:0000000000404559\n.text:000000000040455c\n.text:0000000000404560\n.text:0000000000404566\n.text:000000000040456a\n.text:000000000040456b\n.text:000000000040456d\n.text:000000000040456f\n.text:0000000000404571\n.text:0000000000404573\n.text:0000000000404574\n'
p405
tp406
sS'XtDisplay'
p407
(S'\n__stdcall XtDisplay()\n'
p408
V\u000avoid XtDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisplay_006081d0)();\u000a  return;\u000a}\u000a\u000a
p409
S'JMP qword ptr [0x006081d0]\n'
p410
S'ff 25 ba 60 20 00\n'
p411
S'.plt:0000000000402110\n'
p412
tp413
sS'XmuCreateStippledPixmap'
p414
(S'\n__stdcall XmuCreateStippledPixmap()\n'
p415
V\u000avoid XmuCreateStippledPixmap(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuCreateStippledPixmap_006081c8)();\u000a  return;\u000a}\u000a\u000a
p416
S'JMP qword ptr [0x006081c8]\n'
p417
S'ff 25 c2 60 20 00\n'
p418
S'.plt:0000000000402100\n'
p419
tp420
sS'XrmPutLineResource'
p421
(S'\n__stdcall XrmPutLineResource()\n'
p422
V\u000avoid XrmPutLineResource(void)\u000a\u000a{\u000a  (*(code *)PTR_XrmPutLineResource_006082a0)();\u000a  return;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x006082a0]\n'
p424
S'ff 25 ea 5f 20 00\n'
p425
S'.plt:00000000004022b0\n'
p426
tp427
sS'XmuCvtStringToJustify'
p428
(S'\n__stdcall XmuCvtStringToJustify()\n'
p429
V\u000a/* WARNING: Switch with 1 destination removed at 0x00401f60 */\u000a\u000avoid XmuCvtStringToJustify(void)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x006080f8]\n'
p431
S'ff 25 92 61 20 00\n'
p432
S'.plt:0000000000401f60\n'
p433
tp434
sS'fprintf'
p435
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p436
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00608160)();\u000a  return iVar1;\u000a}\u000a\u000a
p437
S'JMP qword ptr [0x00608160]\n'
p438
S'ff 25 2a 61 20 00\n'
p439
S'.plt:0000000000402030\n'
p440
tp441
sS'GetgrayGC'
p442
(S'\n__stdcall GetgrayGC(UCSLabelWidget lw)\n'
p443
V\u000avoid GetgrayGC(UCSLabelWidget lw)\u000a\u000a{\u000a  GC p_Var1;\u000a  undefined auStack136 [16];\u000a  Pixel local_78;\u000a  Pixel local_70;\u000a  undefined4 local_58;\u000a  Pixmap local_48;\u000a  Font local_30;\u000a  undefined4 local_24;\u000a  \u000a  local_78 = (lw->label).foreground;\u000a  local_70 = (lw->core).background_pixel;\u000a  local_30 = ((lw->label).font)->fid;\u000a  local_58 = 1;\u000a  local_48 = XmuCreateStippledPixmap\u000a                       ((lw->core).screen,(lw->label).foreground,(lw->core).background_pixel,\u000a                        (ulong)(lw->core).depth);\u000a  local_24 = 0;\u000a  (lw->label).stipple = local_48;\u000a  if ((lw->simple).international == 1) {\u000a    p_Var1 = (GC)XtAllocateGC(lw,0,0x1050c,auStack136,0x4000,0);\u000a  }\u000a  else {\u000a    p_Var1 = (GC)XtGetGC(lw,0x1450c,auStack136);\u000a  }\u000a  (lw->label).gray_GC = p_Var1;\u000a  return;\u000a}\u000a\u000a
p444
S'PUSH RBX\nSUB RSP,0x80\nMOV RBX,RDI\nMOV RAX,qword ptr [0x128 + RBX]\nMOV qword ptr [RSP + 0x10],RAX\nMOV RAX,qword ptr [0xb8 + RBX]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [0x130 + RBX]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x30],0x1\nMOV RDI,qword ptr [0x98 + RBX]\nMOV RSI,qword ptr [0x128 + RBX]\nMOV RDX,qword ptr [0xb8 + RBX]\nMOV ECX,dword ptr [0xb0 + RBX]\nCALL 0x00402100\nMOV qword ptr [RSP + 0x40],RAX\nMOV dword ptr [RSP + 0x64],0x0\nMOV qword ptr [0x178 + RBX],RAX\nCMP byte ptr [0xf8 + RBX],0x1\nJNZ 0x00402e65\nMOV RCX,RSP\nXOR ESI,ESI\nMOV EDX,0x1050c\nMOV R8D,0x4000\nXOR R9D,R9D\nMOV RDI,RBX\nCALL 0x00402220\nJMP 0x00402e75\nMOV RDX,RSP\nMOV ESI,0x1450c\nMOV RDI,RBX\nCALL 0x004021e0\nMOV qword ptr [0x170 + RBX],RAX\nADD RSP,0x80\nPOP RBX\nRET\n'
p445
S'53\n48 81 ec 80 00 00 00\n48 89 fb\n48 8b 83 28 01 00 00\n48 89 44 24 10\n48 8b 83 b8 00 00 00\n48 89 44 24 18\n48 8b 83 30 01 00 00\n48 8b 40 08\n48 89 44 24 58\nc7 44 24 30 01 00 00 00\n48 8b bb 98 00 00 00\n48 8b b3 28 01 00 00\n48 8b 93 b8 00 00 00\n8b 8b b0 00 00 00\ne8 d5 f2 ff ff\n48 89 44 24 40\nc7 44 24 64 00 00 00 00\n48 89 83 78 01 00 00\n80 bb f8 00 00 00 01\n75 1d\n48 89 e1\n31 f6\nba 0c 05 01 00\n41 b8 00 40 00 00\n45 31 c9\n48 89 df\ne8 bd f3 ff ff\neb 10\n48 89 e2\nbe 0c 45 01 00\n48 89 df\ne8 6b f3 ff ff\n48 89 83 70 01 00 00\n48 81 c4 80 00 00 00\n5b\nc3\n'
p446
S'.text:0000000000402dd0\n.text:0000000000402dd1\n.text:0000000000402dd8\n.text:0000000000402ddb\n.text:0000000000402de2\n.text:0000000000402de7\n.text:0000000000402dee\n.text:0000000000402df3\n.text:0000000000402dfa\n.text:0000000000402dfe\n.text:0000000000402e03\n.text:0000000000402e0b\n.text:0000000000402e12\n.text:0000000000402e19\n.text:0000000000402e20\n.text:0000000000402e26\n.text:0000000000402e2b\n.text:0000000000402e30\n.text:0000000000402e38\n.text:0000000000402e3f\n.text:0000000000402e46\n.text:0000000000402e48\n.text:0000000000402e4b\n.text:0000000000402e4d\n.text:0000000000402e52\n.text:0000000000402e58\n.text:0000000000402e5b\n.text:0000000000402e5e\n.text:0000000000402e63\n.text:0000000000402e65\n.text:0000000000402e68\n.text:0000000000402e6d\n.text:0000000000402e70\n.text:0000000000402e75\n.text:0000000000402e7c\n.text:0000000000402e83\n.text:0000000000402e84\n'
p447
tp448
sS'XInternAtom'
p449
(S'\n__stdcall XInternAtom()\n'
p450
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_006081a0)();\u000a  return;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x006081a0]\n'
p452
S'ff 25 ea 60 20 00\n'
p453
S'.plt:00000000004020b0\n'
p454
tp455
sS'XtDatabase'
p456
(S'\n__stdcall XtDatabase()\n'
p457
V\u000avoid XtDatabase(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDatabase_00608020)();\u000a  return;\u000a}\u000a\u000a
p458
S'JMP qword ptr [0x00608020]\n'
p459
S'ff 25 6a 62 20 00\n'
p460
S'.plt:0000000000401db0\n'
p461
tp462
sS'memcpy'
p463
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p464
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_00608170)();\u000a  return pvVar1;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x00608170]\n'
p466
S'ff 25 1a 61 20 00\n'
p467
S'.plt:0000000000402050\n'
p468
tp469
sS'XSetWMProtocols'
p470
(S'\n__stdcall XSetWMProtocols()\n'
p471
V\u000avoid XSetWMProtocols(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetWMProtocols_00608178)();\u000a  return;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x00608178]\n'
p473
S'ff 25 12 61 20 00\n'
p474
S'.plt:0000000000402060\n'
p475
tp476
sS'SetParsingFontCount'
p477
(S'\n__stdcall SetParsingFontCount()\n'
p478
V\u000avoid SetParsingFontCount(int iParm1)\u000a\u000a{\u000a  Display *dpy;\u000a  Arg args [1];\u000a  char label [80];\u000a  undefined8 local_68;\u000a  undefined4 *local_60;\u000a  undefined4 local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  \u000a  if (iParm1 == 1) {\u000a    local_58 = "1 name to parse"._0_4_;\u000a    uStack84 = "1 name to parse"._4_4_;\u000a    uStack80 = "1 name to parse"._8_4_;\u000a    uStack76 = "1 name to parse"._12_4_;\u000a  }\u000a  else {\u000a    snprintf((char *)&local_58,0x50,"%d names to parse");\u000a  }\u000a  local_68 = 0x60752d;\u000a  local_60 = &local_58;\u000a  XtSetValues(countLabel,&local_68,1);\u000a  dpy = (Display *)XtDisplay(countLabel);\u000a  FlushXqueue(dpy);\u000a  return;\u000a}\u000a\u000a
p479
S'SUB RSP,0x68\nMOV ECX,EDI\nCMP ECX,0x1\nJNZ 0x00404599\nMOVUPS XMM0,xmmword ptr [0x00405e71]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nJMP 0x004045af\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x50\nMOV EDX,0x405e81\nXOR EAX,EAX\nCALL 0x00401f70\nMOV qword ptr [RSP],0x60752d\nLEA RAX,[RSP + 0x10]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [0x00608a60]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00401ec0\nMOV RDI,qword ptr [0x00608a60]\nCALL 0x00402110\nMOV RDI,RAX\nCALL 0x004053e0\nADD RSP,0x68\nRET\n'
p480
S'48 83 ec 68\n89 f9\n83 f9 01\n75 0e\n0f 10 05 df 18 00 00\n0f 29 44 24 10\neb 16\n48 8d 7c 24 10\nbe 50 00 00 00\nba 81 5e 40 00\n31 c0\ne8 c1 d9 ff ff\n48 c7 04 24 2d 75 60 00\n48 8d 44 24 10\n48 89 44 24 08\n48 8b 3d 98 44 20 00\n48 89 e6\nba 01 00 00 00\ne8 eb d8 ff ff\n48 8b 3d 84 44 20 00\ne8 2f db ff ff\n48 89 c7\ne8 f7 0d 00 00\n48 83 c4 68\nc3\n'
p481
S'.text:0000000000404580\n.text:0000000000404584\n.text:0000000000404586\n.text:0000000000404589\n.text:000000000040458b\n.text:0000000000404592\n.text:0000000000404597\n.text:0000000000404599\n.text:000000000040459e\n.text:00000000004045a3\n.text:00000000004045a8\n.text:00000000004045aa\n.text:00000000004045af\n.text:00000000004045b7\n.text:00000000004045bc\n.text:00000000004045c1\n.text:00000000004045c8\n.text:00000000004045cb\n.text:00000000004045d0\n.text:00000000004045d5\n.text:00000000004045dc\n.text:00000000004045e1\n.text:00000000004045e4\n.text:00000000004045e9\n.text:00000000004045ed\n'
p482
tp483
sS'XtSetSensitive'
p484
(S'\n__stdcall XtSetSensitive()\n'
p485
V\u000avoid XtSetSensitive(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetSensitive_00608150)();\u000a  return;\u000a}\u000a\u000a
p486
S'JMP qword ptr [0x00608150]\n'
p487
S'ff 25 3a 61 20 00\n'
p488
S'.plt:0000000000402010\n'
p489
tp490
sS'AnyValue'
p491
(S'\n__stdcall AnyValue(Widget w, XtPointer closure, XtPointer callData)\n'
p492
V\u000avoid AnyValue(Widget w,XtPointer closure,XtPointer callData)\u000a\u000a{\u000a  *(undefined4 *)(currentFont_0 + (long)(int)closure * 4) = 0xffffffff;\u000a  SetCurrentFont(w);\u000a  EnableAllItems((ulong)closure & 0xffffffff);\u000a  EnableRemainingItems(0);\u000a  return;\u000a}\u000a\u000a
p493
S'PUSH RBX\nMOVSXD RBX,ESI\nMOV dword ptr [0x608b8c + RBX*0x4],0xffffffff\nCALL 0x00404750\nMOV EDI,EBX\nCALL 0x00405200\nXOR EDI,EDI\nPOP RBX\nJMP 0x004050f0\n'
p494
S'53\n48 63 de\nc7 04 9d 8c 8b 60 00 ff ff ff ff\ne8 cc f6 ff ff\n89 df\ne8 75 01 00 00\n31 ff\n5b\neb 60\n'
p495
S'.text:0000000000405070\n.text:0000000000405071\n.text:0000000000405074\n.text:000000000040507f\n.text:0000000000405084\n.text:0000000000405086\n.text:000000000040508b\n.text:000000000040508d\n.text:000000000040508e\n'
p496
tp497
sS'ScheduleWork'
p498
(S'\n__stdcall ScheduleWork(XtProc * proc, XtPointer closure)\n'
p499
V\u000avoid ScheduleWork(void (*proc)(),XtPointer closure)\u000a\u000a{\u000a  WorkPiece_conflict pWVar1;\u000a  WorkPiece pWVar2;\u000a  WorkPiece_conflict pWVar3;\u000a  int in_EDX;\u000a  \u000a  pWVar2 = (WorkPiece)XtMalloc(0x20);\u000a  pWVar2->priority = in_EDX;\u000a  pWVar2->proc = proc;\u000a  pWVar2->closure = closure;\u000a  if (workQueue == (WorkPiece)0x0) {\u000a    pWVar2->next = (WorkPiece_conflict)0x0;\u000a    workQueue = pWVar2;\u000a    (*(code *)PTR_XtAppAddWorkProc_00608038)(appCtx,DoWorkPiece,0);\u000a    return;\u000a  }\u000a  pWVar1 = (WorkPiece_conflict)workQueue;\u000a  if (workQueue->priority == in_EDX || workQueue->priority < in_EDX) {\u000a    do {\u000a      pWVar3 = pWVar1;\u000a      pWVar1 = pWVar3->next;\u000a      if (pWVar1 == (WorkPiece_conflict)0x0) break;\u000a    } while (pWVar1->priority == in_EDX || pWVar1->priority < in_EDX);\u000a    pWVar2->next = pWVar1;\u000a    *(WorkPiece *)&pWVar3->next = pWVar2;\u000a  }\u000a  else {\u000a    *(WorkPiece *)&pWVar2->next = workQueue;\u000a    workQueue = pWVar2;\u000a  }\u000a  return;\u000a}\u000a\u000a
p500
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV EBX,EDX\nMOV R14,RSI\nMOV R15,RDI\nMOV EDI,0x20\nCALL 0x00401eb0\nMOV dword ptr [RAX + 0x8],EBX\nMOV qword ptr [RAX + 0x10],R15\nMOV qword ptr [RAX + 0x18],R14\nMOV RCX,qword ptr [0x00608a98]\nTEST RCX,RCX\nJZ 0x004039dc\nCMP dword ptr [RCX + 0x8],EBX\nJLE 0x004039c0\nMOV qword ptr [RAX],RCX\nMOV qword ptr [0x00608a98],RAX\nJMP 0x004039d6\nMOV RDX,RCX\nMOV RCX,qword ptr [RDX]\nTEST RCX,RCX\nJZ 0x004039d0\nCMP dword ptr [RCX + 0x8],EBX\nJLE 0x004039c0\nMOV qword ptr [RAX],RCX\nMOV qword ptr [RDX],RAX\nPOP RBX\nPOP R14\nPOP R15\nRET\nMOV qword ptr [RAX],0x0\nMOV qword ptr [0x00608a98],RAX\nMOV RDI,qword ptr [0x00608a00]\nMOV ESI,0x404030\nXOR EDX,EDX\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00401de0\n'
p501
S'41 57\n41 56\n53\n89 d3\n49 89 f6\n49 89 ff\nbf 20 00 00 00\ne8 19 e5 ff ff\n89 58 08\n4c 89 78 10\n4c 89 70 18\n48 8b 0d ef 50 20 00\n48 85 c9\n74 2e\n39 59 08\n7e 0d\n48 89 08\n48 89 05 db 50 20 00\neb 17\n48 89 ca\n48 8b 0a\n48 85 c9\n74 05\n39 59 08\n7e f0\n48 89 08\n48 89 02\n5b\n41 5e\n41 5f\nc3\n48 c7 00 00 00 00 00\n48 89 05 ae 50 20 00\n48 8b 3d 0f 50 20 00\nbe 30 40 40 00\n31 d2\n5b\n41 5e\n41 5f\ne9 de e3 ff ff\n'
p502
S'.text:0000000000403980\n.text:0000000000403982\n.text:0000000000403984\n.text:0000000000403985\n.text:0000000000403987\n.text:000000000040398a\n.text:000000000040398d\n.text:0000000000403992\n.text:0000000000403997\n.text:000000000040399a\n.text:000000000040399e\n.text:00000000004039a2\n.text:00000000004039a9\n.text:00000000004039ac\n.text:00000000004039ae\n.text:00000000004039b1\n.text:00000000004039b3\n.text:00000000004039b6\n.text:00000000004039bd\n.text:00000000004039c0\n.text:00000000004039c3\n.text:00000000004039c6\n.text:00000000004039c9\n.text:00000000004039cb\n.text:00000000004039ce\n.text:00000000004039d0\n.text:00000000004039d3\n.text:00000000004039d6\n.text:00000000004039d7\n.text:00000000004039d9\n.text:00000000004039db\n.text:00000000004039dc\n.text:00000000004039e3\n.text:00000000004039ea\n.text:00000000004039f1\n.text:00000000004039f6\n.text:00000000004039f8\n.text:00000000004039f9\n.text:00000000004039fb\n.text:00000000004039fd\n'
p503
tp504
sS'Syntax'
p505
(S'\n__stdcall Syntax(char * call)\n'
p506
V\u000avoid Syntax(char *call)\u000a\u000a{\u000a  fprintf(stderr,"usage:  %s [-options ...] -fn font\u005cn\u005cn%s\u005cn",call,\u000a                    \u000a          "where options include:\u005cn    -display dpy           X server to contact\u005cn    -geometry geom         size and location of window\u005cn    -pattern fontspec      font name pattern to match against\u005cn    -print                 print selected font name on exit\u005cn    -sample string         sample text to use for 1-byte fonts\u005cn    -sample16 string       sample text to use for 2-byte fonts\u005cn    -sampleUCS string      sample text to use for ISO10646 fonts\u005cn    -scaled                use scaled instances of fonts\u005cn"\u000a         );\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p507
S'PUSH RAX\nMOV RDX,RDI\nMOV RDI,qword ptr [0x006089e0]\nMOV ESI,0x405bab\nMOV ECX,0x405bd3\nXOR EAX,EAX\nCALL 0x00402030\nMOV EDI,0x1\nCALL 0x00402270\n'
p508
S'50\n48 89 fa\n48 8b 3d 85 50 20 00\nbe ab 5b 40 00\nb9 d3 5b 40 00\n31 c0\ne8 c4 e6 ff ff\nbf 01 00 00 00\ne8 fa e8 ff ff\n'
p509
S'.text:0000000000403950\n.text:0000000000403951\n.text:0000000000403954\n.text:000000000040395b\n.text:0000000000403960\n.text:0000000000403965\n.text:0000000000403967\n.text:000000000040396c\n.text:0000000000403971\n'
p510
tp511
sS'XtAppWarning'
p512
(S'\n__stdcall XtAppWarning()\n'
p513
V\u000avoid XtAppWarning(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppWarning_00608098)();\u000a  return;\u000a}\u000a\u000a
p514
S'JMP qword ptr [0x00608098]\n'
p515
S'ff 25 f2 61 20 00\n'
p516
S'.plt:0000000000401ea0\n'
p517
tp518
sS'XtAppMainLoop'
p519
(S'\n__stdcall XtAppMainLoop()\n'
p520
V\u000avoid XtAppMainLoop(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppMainLoop_006081b0)();\u000a  return;\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x006081b0]\n'
p522
S'ff 25 da 60 20 00\n'
p523
S'.plt:00000000004020d0\n'
p524
tp525
sS'_init'
p526
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p527
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00607ff8;\u000a  if (PTR___gmon_start___00607ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00607ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p528
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00607ff8]\nTEST RAX,RAX\nJZ 0x00401d8a\nCALL RAX\nADD RSP,0x8\nRET\n'
p529
S'48 83 ec 08\n48 8b 05 75 62 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p530
S'.init:0000000000401d78\n.init:0000000000401d7c\n.init:0000000000401d83\n.init:0000000000401d86\n.init:0000000000401d88\n.init:0000000000401d8a\n.init:0000000000401d8e\n'
p531
tp532
sS'EnableOtherValues'
p533
(S'\n__stdcall EnableOtherValues(Widget w, XtPointer closure, XtPointer callData)\n'
p534
V\u000avoid EnableOtherValues(Widget w,XtPointer closure,XtPointer callData)\u000a\u000a{\u000a  byte *pbVar1;\u000a  FieldValueList *pFVar2;\u000a  Boolean *pBVar3;\u000a  int iVar4;\u000a  Boolean *set;\u000a  long lVar5;\u000a  int iVar6;\u000a  Boolean *pBVar7;\u000a  long lVar8;\u000a  ulong uVar9;\u000a  int iVar10;\u000a  long lVar11;\u000a  bool bVar12;\u000a  bool bVar13;\u000a  \u000a  iVar10 = (int)closure;\u000a  set = (Boolean *)XtMalloc((ulong)(uint)numFonts);\u000a  FinishWork();\u000a  if (numFonts != 0) {\u000a    memset(set,1,(ulong)(numFonts - 1) + 1);\u000a  }\u000a  uVar9 = 0;\u000a  do {\u000a    if ((((ulong)closure & 0xffffffff) != uVar9) &&\u000a       ((long)*(int *)(currentFont_0 + uVar9 * 4) != -1)) {\u000a      MarkInvalidFonts(set,fieldValues[uVar9]->value + (long)*(int *)(currentFont_0 + uVar9 * 4));\u000a    }\u000a    uVar9 = uVar9 + 1;\u000a  } while (uVar9 != 0xe);\u000a  if (scaledFonts != (int *)0x0) {\u000a    if (((long)currentFont_0._24_4_ < 0) ||\u000a       (pbVar1 = (byte *)fieldValues[6]->value[(long)currentFont_0._24_4_].string,\u000a       pbVar1 == (byte *)0x0)) {\u000a      bVar12 = false;\u000a    }\u000a    else {\u000a      iVar6 = 0x30 - (uint)*pbVar1;\u000a      if (iVar6 == 0) {\u000a        iVar6 = -(uint)pbVar1[1];\u000a      }\u000a      bVar12 = iVar6 != 0;\u000a    }\u000a    if (((long)currentFont_0._28_4_ < 0) ||\u000a       (pbVar1 = (byte *)fieldValues[7]->value[(long)currentFont_0._28_4_].string,\u000a       pbVar1 == (byte *)0x0)) {\u000a      bVar13 = false;\u000a    }\u000a    else {\u000a      iVar6 = 0x30 - (uint)*pbVar1;\u000a      if (iVar6 == 0) {\u000a        iVar6 = -(uint)pbVar1[1];\u000a      }\u000a      bVar13 = iVar6 != 0;\u000a    }\u000a    if ((-1 < (long)currentFont_0._36_4_) &&\u000a       (pbVar1 = (byte *)fieldValues[9]->value[(long)currentFont_0._36_4_].string,\u000a       pbVar1 != (byte *)0x0)) {\u000a      iVar6 = 0x30 - (uint)*pbVar1;\u000a      if (iVar6 == 0) {\u000a        iVar6 = -(uint)pbVar1[1];\u000a      }\u000a      if ((bool)(iVar6 != 0 & bVar13)) {\u000a        DisableScaled(6,7,9);\u000a      }\u000a      if ((bool)(iVar6 != 0 & bVar12)) {\u000a        DisableScaled(7,6,9);\u000a      }\u000a    }\u000a    if ((bool)(bVar12 & bVar13)) {\u000a      DisableScaled(9,6,7);\u000a    }\u000a  }\u000a  pBVar3 = fontInSet;\u000a  if (numFonts == 0) {\u000a    iVar6 = 0;\u000a  }\u000a  else {\u000a    iVar6 = 0;\u000a    pBVar7 = set;\u000a    iVar4 = numFonts;\u000a    do {\u000a      iVar6 = (iVar6 + 1) - (uint)(*pBVar7 == 0);\u000a      pBVar7 = pBVar7 + 1;\u000a      iVar4 = iVar4 + -1;\u000a    } while (iVar4 != 0);\u000a  }\u000a  if ((iVar6 != matchingFontCount) && (0 < numFonts)) {\u000a    pFVar2 = fieldValues[(long)iVar10];\u000a    lVar8 = (long)iVar10 << 2;\u000a    lVar11 = 0;\u000a    do {\u000a      if (set[lVar11] != pBVar3[lVar11]) {\u000a        lVar5 = (long)*(int *)((long)fonts->value_index + lVar8);\u000a        pFVar2->value[lVar5].enable = 1;\u000a        XtSetSensitive(pFVar2->value[lVar5].menu_item,1);\u000a        iVar6 = iVar6 + 1;\u000a        if (iVar6 == matchingFontCount) break;\u000a      }\u000a      lVar11 = lVar11 + 1;\u000a      lVar8 = lVar8 + 0x38;\u000a    } while (lVar11 < (long)numFonts);\u000a  }\u000a  XtFree(set);\u000a  if (iVar10 <= enabledMenuIndex) {\u000a    return;\u000a  }\u000a  EnableMenu((XtPointer)(long)iVar10);\u000a  return;\u000a}\u000a\u000a
p535
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV EDI,dword ptr [0x00608aa0]\nCALL 0x00401eb0\nMOV R12,RAX\nCALL 0x00405420\nMOV EDX,dword ptr [0x00608aa0]\nTEST EDX,EDX\nJZ 0x00404e0d\nDEC EDX\nINC RDX\nMOV ESI,0x1\nMOV RDI,R12\nCALL 0x00401fc0\nMOV EBX,R14D\nXOR EBP,EBP\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP RBX,RBP\nJZ 0x00404e50\nMOVSXD RAX,dword ptr [0x608b8c + RBP*0x4]\nCMP RAX,-0x1\nJZ 0x00404e50\nMOV RCX,qword ptr [0x608ac0 + RBP*0x8]\nLEA RAX,[RAX + RAX*0x2]\nSHL RAX,0x4\nLEA RSI,[RCX + RAX*0x1 + 0x10]\nMOV RDI,R12\nCALL 0x00405230\nINC RBP\nCMP RBP,0xe\nJNZ 0x00404e20\nCMP qword ptr [0x00608b48],0x0\nJZ 0x00404f7e\nMOVSXD RAX,dword ptr [0x00608ba4]\nTEST RAX,RAX\nJS 0x00404ea6\nMOV RCX,qword ptr [0x00608af0]\nLEA RAX,[RAX + RAX*0x2]\nSHL RAX,0x4\nMOV RAX,qword ptr [RCX + RAX*0x1 + 0x18]\nTEST RAX,RAX\nJZ 0x00404ea6\nMOVZX EDX,byte ptr [RAX]\nMOV ECX,0x30\nSUB ECX,EDX\nJNZ 0x00404e9e\nMOVZX ECX,byte ptr [RAX + 0x1]\nNEG ECX\nTEST ECX,ECX\nSETNZ BPL\nJMP 0x00404ea8\nXOR EBP,EBP\nMOVSXD RAX,dword ptr [0x00608ba8]\nTEST RAX,RAX\nJS 0x00404ee7\nMOV RCX,qword ptr [0x00608af8]\nLEA RAX,[RAX + RAX*0x2]\nSHL RAX,0x4\nMOV RAX,qword ptr [RCX + RAX*0x1 + 0x18]\nTEST RAX,RAX\nJZ 0x00404ee7\nMOVZX EDX,byte ptr [RAX]\nMOV ECX,0x30\nSUB ECX,EDX\nJNZ 0x00404edf\nMOVZX ECX,byte ptr [RAX + 0x1]\nNEG ECX\nTEST ECX,ECX\nSETNZ R15B\nJMP 0x00404eea\nXOR R15D,R15D\nMOVSXD RAX,dword ptr [0x00608bb0]\nTEST RAX,RAX\nJS 0x00404f61\nMOV RCX,qword ptr [0x00608b08]\nLEA RAX,[RAX + RAX*0x2]\nSHL RAX,0x4\nMOV RAX,qword ptr [RCX + RAX*0x1 + 0x18]\nTEST RAX,RAX\nJZ 0x00404f61\nMOVZX ECX,byte ptr [RAX]\nMOV EBX,0x30\nSUB EBX,ECX\nJNZ 0x00404f21\nMOVZX EBX,byte ptr [RAX + 0x1]\nNEG EBX\nTEST EBX,EBX\nSETNZ AL\nAND AL,R15B\nCMP AL,0x1\nJNZ 0x00404f41\nMOV EDI,0x6\nMOV ESI,0x7\nMOV EDX,0x9\nCALL 0x00405450\nTEST EBX,EBX\nSETNZ AL\nAND AL,BPL\nCMP AL,0x1\nJNZ 0x00404f61\nMOV EDI,0x7\nMOV ESI,0x6\nMOV EDX,0x9\nCALL 0x00405450\nAND BPL,R15B\nCMP BPL,0x1\nJNZ 0x00404f7e\nMOV EDI,0x9\nMOV ESI,0x6\nMOV EDX,0x7\nCALL 0x00405450\nMOV EAX,dword ptr [0x00608aa0]\nTEST EAX,EAX\nMOV qword ptr [RSP],R14\nJZ 0x00404faf\nXOR EBP,EBP\nMOV RCX,R12\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [RCX],0x1\nSBB EBP,-0x1\nINC RCX\nDEC EAX\nJNZ 0x00404fa0\nJMP 0x00404fb1\nXOR EBP,EBP\nCMP EBP,dword ptr [0x00608b30]\nJZ 0x00405031\nCMP dword ptr [0x00608aa0],0x0\nJLE 0x00405031\nMOVSXD RBX,dword ptr [RSP]\nMOV R15,qword ptr [0x608ac0 + RBX*0x8]\nMOV R13,qword ptr [0x00608ab0]\nSHL RBX,0x2\nXOR R14D,R14D\nNOP dword ptr [RAX]\nMOVZX EAX,byte ptr [R12 + R14*0x1]\nCMP AL,byte ptr [R13 + R14*0x1]\nJZ 0x0040501e\nMOV RAX,qword ptr [0x00608aa8]\nMOVSXD RAX,dword ptr [RAX + RBX*0x1]\nLEA RAX,[RAX + RAX*0x2]\nSHL RAX,0x4\nMOV byte ptr [R15 + RAX*0x1 + 0x38],0x1\nMOV RDI,qword ptr [R15 + RAX*0x1 + 0x20]\nMOV ESI,0x1\nCALL 0x00402010\nINC EBP\nCMP EBP,dword ptr [0x00608b30]\nJZ 0x00405031\nINC R14\nMOVSXD RAX,dword ptr [0x00608aa0]\nADD RBX,0x38\nCMP R14,RAX\nJL 0x00404fe0\nMOV RDI,R12\nCALL 0x004020e0\nMOV RAX,qword ptr [RSP]\nCMP dword ptr [0x00608b78],EAX\nJGE 0x0040505b\nMOVSXD RDI,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405530\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p536
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f6\n8b 3d bc 3c 20 00\ne8 c7 d0 ff ff\n49 89 c4\ne8 2f 06 00 00\n8b 15 a9 3c 20 00\n85 d2\n74 12\nff ca\n48 ff c2\nbe 01 00 00 00\n4c 89 e7\ne8 b3 d1 ff ff\n44 89 f3\n31 ed\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 39 eb\n74 2b\n48 63 04 ad 8c 8b 60 00\n48 83 f8 ff\n74 1d\n48 8b 0c ed c0 8a 60 00\n48 8d 04 40\n48 c1 e0 04\n48 8d 74 01 10\n4c 89 e7\ne8 e0 03 00 00\n48 ff c5\n48 83 fd 0e\n75 c7\n48 83 3d e7 3c 20 00 00\n0f 84 17 01 00 00\n48 63 05 36 3d 20 00\n48 85 c0\n78 33\n48 8b 0d 76 3c 20 00\n48 8d 04 40\n48 c1 e0 04\n48 8b 44 01 18\n48 85 c0\n74 1a\n0f b6 10\nb9 30 00 00 00\n29 d1\n75 06\n0f b6 48 01\nf7 d9\n85 c9\n40 0f 95 c5\neb 02\n31 ed\n48 63 05 f9 3c 20 00\n48 85 c0\n78 33\n48 8b 0d 3d 3c 20 00\n48 8d 04 40\n48 c1 e0 04\n48 8b 44 01 18\n48 85 c0\n74 1a\n0f b6 10\nb9 30 00 00 00\n29 d1\n75 06\n0f b6 48 01\nf7 d9\n85 c9\n41 0f 95 c7\neb 03\n45 31 ff\n48 63 05 bf 3c 20 00\n48 85 c0\n78 6b\n48 8b 0d 0b 3c 20 00\n48 8d 04 40\n48 c1 e0 04\n48 8b 44 01 18\n48 85 c0\n74 52\n0f b6 08\nbb 30 00 00 00\n29 cb\n75 06\n0f b6 58 01\nf7 db\n85 db\n0f 95 c0\n44 20 f8\n3c 01\n75 14\nbf 06 00 00 00\nbe 07 00 00 00\nba 09 00 00 00\ne8 0f 05 00 00\n85 db\n0f 95 c0\n40 20 e8\n3c 01\n75 14\nbf 07 00 00 00\nbe 06 00 00 00\nba 09 00 00 00\ne8 ef 04 00 00\n44 20 fd\n40 80 fd 01\n75 14\nbf 09 00 00 00\nbe 06 00 00 00\nba 07 00 00 00\ne8 d2 04 00 00\n8b 05 1c 3b 20 00\n85 c0\n4c 89 34 24\n74 23\n31 ed\n4c 89 e1\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 39 01\n83 dd ff\n48 ff c1\nff c8\n75 f3\neb 02\n31 ed\n3b 2d 79 3b 20 00\n74 78\n83 3d e0 3a 20 00 00\n7e 6f\n48 63 1c 24\n4c 8b 3c dd c0 8a 60 00\n4c 8b 2d db 3a 20 00\n48 c1 e3 02\n45 31 f6\n0f 1f 40 00\n43 0f b6 04 34\n43 3a 44 35 00\n74 32\n48 8b 05 b5 3a 20 00\n48 63 04 18\n48 8d 04 40\n48 c1 e0 04\n41 c6 44 07 38 01\n49 8b 7c 07 20\nbe 01 00 00 00\ne8 fc cf ff ff\nff c5\n3b 2d 14 3b 20 00\n74 13\n49 ff c6\n48 63 05 78 3a 20 00\n48 83 c3 38\n49 39 c6\n7c af\n4c 89 e7\ne8 a7 d0 ff ff\n48 8b 04 24\n39 05 35 3b 20 00\n7d 16\n48 63 f8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 d5 04 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p537
S'.text:0000000000404dd0\n.text:0000000000404dd1\n.text:0000000000404dd3\n.text:0000000000404dd5\n.text:0000000000404dd7\n.text:0000000000404dd9\n.text:0000000000404dda\n.text:0000000000404ddb\n.text:0000000000404dde\n.text:0000000000404de4\n.text:0000000000404de9\n.text:0000000000404dec\n.text:0000000000404df1\n.text:0000000000404df7\n.text:0000000000404df9\n.text:0000000000404dfb\n.text:0000000000404dfd\n.text:0000000000404e00\n.text:0000000000404e05\n.text:0000000000404e08\n.text:0000000000404e0d\n.text:0000000000404e10\n.text:0000000000404e12\n.text:0000000000404e20\n.text:0000000000404e23\n.text:0000000000404e25\n.text:0000000000404e2d\n.text:0000000000404e31\n.text:0000000000404e33\n.text:0000000000404e3b\n.text:0000000000404e3f\n.text:0000000000404e43\n.text:0000000000404e48\n.text:0000000000404e4b\n.text:0000000000404e50\n.text:0000000000404e53\n.text:0000000000404e57\n.text:0000000000404e59\n.text:0000000000404e61\n.text:0000000000404e67\n.text:0000000000404e6e\n.text:0000000000404e71\n.text:0000000000404e73\n.text:0000000000404e7a\n.text:0000000000404e7e\n.text:0000000000404e82\n.text:0000000000404e87\n.text:0000000000404e8a\n.text:0000000000404e8c\n.text:0000000000404e8f\n.text:0000000000404e94\n.text:0000000000404e96\n.text:0000000000404e98\n.text:0000000000404e9c\n.text:0000000000404e9e\n.text:0000000000404ea0\n.text:0000000000404ea4\n.text:0000000000404ea6\n.text:0000000000404ea8\n.text:0000000000404eaf\n.text:0000000000404eb2\n.text:0000000000404eb4\n.text:0000000000404ebb\n.text:0000000000404ebf\n.text:0000000000404ec3\n.text:0000000000404ec8\n.text:0000000000404ecb\n.text:0000000000404ecd\n.text:0000000000404ed0\n.text:0000000000404ed5\n.text:0000000000404ed7\n.text:0000000000404ed9\n.text:0000000000404edd\n.text:0000000000404edf\n.text:0000000000404ee1\n.text:0000000000404ee5\n.text:0000000000404ee7\n.text:0000000000404eea\n.text:0000000000404ef1\n.text:0000000000404ef4\n.text:0000000000404ef6\n.text:0000000000404efd\n.text:0000000000404f01\n.text:0000000000404f05\n.text:0000000000404f0a\n.text:0000000000404f0d\n.text:0000000000404f0f\n.text:0000000000404f12\n.text:0000000000404f17\n.text:0000000000404f19\n.text:0000000000404f1b\n.text:0000000000404f1f\n.text:0000000000404f21\n.text:0000000000404f23\n.text:0000000000404f26\n.text:0000000000404f29\n.text:0000000000404f2b\n.text:0000000000404f2d\n.text:0000000000404f32\n.text:0000000000404f37\n.text:0000000000404f3c\n.text:0000000000404f41\n.text:0000000000404f43\n.text:0000000000404f46\n.text:0000000000404f49\n.text:0000000000404f4b\n.text:0000000000404f4d\n.text:0000000000404f52\n.text:0000000000404f57\n.text:0000000000404f5c\n.text:0000000000404f61\n.text:0000000000404f64\n.text:0000000000404f68\n.text:0000000000404f6a\n.text:0000000000404f6f\n.text:0000000000404f74\n.text:0000000000404f79\n.text:0000000000404f7e\n.text:0000000000404f84\n.text:0000000000404f86\n.text:0000000000404f8a\n.text:0000000000404f8c\n.text:0000000000404f8e\n.text:0000000000404f91\n.text:0000000000404fa0\n.text:0000000000404fa3\n.text:0000000000404fa6\n.text:0000000000404fa9\n.text:0000000000404fab\n.text:0000000000404fad\n.text:0000000000404faf\n.text:0000000000404fb1\n.text:0000000000404fb7\n.text:0000000000404fb9\n.text:0000000000404fc0\n.text:0000000000404fc2\n.text:0000000000404fc6\n.text:0000000000404fce\n.text:0000000000404fd5\n.text:0000000000404fd9\n.text:0000000000404fdc\n.text:0000000000404fe0\n.text:0000000000404fe5\n.text:0000000000404fea\n.text:0000000000404fec\n.text:0000000000404ff3\n.text:0000000000404ff7\n.text:0000000000404ffb\n.text:0000000000404fff\n.text:0000000000405005\n.text:000000000040500a\n.text:000000000040500f\n.text:0000000000405014\n.text:0000000000405016\n.text:000000000040501c\n.text:000000000040501e\n.text:0000000000405021\n.text:0000000000405028\n.text:000000000040502c\n.text:000000000040502f\n.text:0000000000405031\n.text:0000000000405034\n.text:0000000000405039\n.text:000000000040503d\n.text:0000000000405043\n.text:0000000000405045\n.text:0000000000405048\n.text:000000000040504c\n.text:000000000040504d\n.text:000000000040504f\n.text:0000000000405051\n.text:0000000000405053\n.text:0000000000405055\n.text:0000000000405056\n.text:000000000040505b\n.text:000000000040505f\n.text:0000000000405060\n.text:0000000000405062\n.text:0000000000405064\n.text:0000000000405066\n.text:0000000000405068\n.text:0000000000405069\n'
p538
tp539
sS'XmbDrawString'
p540
(S'\n__stdcall XmbDrawString()\n'
p541
V\u000avoid XmbDrawString(void)\u000a\u000a{\u000a  (*(code *)PTR_XmbDrawString_00608138)();\u000a  return;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x00608138]\n'
p543
S'ff 25 52 61 20 00\n'
p544
S'.plt:0000000000401fe0\n'
p545
tp546
sS'XtLastTimestampProcessed'
p547
(S'\n__stdcall XtLastTimestampProcessed()\n'
p548
V\u000avoid XtLastTimestampProcessed(void)\u000a\u000a{\u000a  (*(code *)PTR_XtLastTimestampProcessed_00608218)();\u000a  return;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x00608218]\n'
p550
S'ff 25 72 60 20 00\n'
p551
S'.plt:00000000004021a0\n'
p552
tp553
sS'XExtentsOfFontSet'
p554
(S'\n__stdcall XExtentsOfFontSet()\n'
p555
V\u000avoid XExtentsOfFontSet(void)\u000a\u000a{\u000a  (*(code *)PTR_XExtentsOfFontSet_00608210)();\u000a  return;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x00608210]\n'
p557
S'ff 25 7a 60 20 00\n'
p558
S'.plt:0000000000402190\n'
p559
tp560
sS'FlushXqueue'
p561
(S'\n__stdcall FlushXqueue(Display * dpy)\n'
p562
V\u000avoid FlushXqueue(Display *dpy)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  XSync(dpy,0);\u000a  while( true ) {\u000a    lVar1 = XtAppPending(appCtx);\u000a    if (lVar1 == 0) break;\u000a    XtAppProcessEvent(appCtx,0xf);\u000a  }\u000a  return;\u000a}\u000a\u000a
p563
S'PUSH RAX\nXOR ESI,ESI\nCALL 0x00402120\nJMP 0x00405401\nMOV RDI,qword ptr [0x00608a00]\nMOV ESI,0xf\nCALL 0x00401f40\nMOV RDI,qword ptr [0x00608a00]\nCALL 0x004022a0\nTEST RAX,RAX\nJNZ 0x004053f0\nPOP RAX\nRET\n'
p564
S'50\n31 f6\ne8 38 cd ff ff\neb 17\n48 8b 3d 09 36 20 00\nbe 0f 00 00 00\ne8 3f cb ff ff\n48 8b 3d f8 35 20 00\ne8 93 ce ff ff\n48 85 c0\n75 de\n58\nc3\n'
p565
S'.text:00000000004053e0\n.text:00000000004053e1\n.text:00000000004053e3\n.text:00000000004053e8\n.text:00000000004053f0\n.text:00000000004053f7\n.text:00000000004053fc\n.text:0000000000405401\n.text:0000000000405408\n.text:000000000040540d\n.text:0000000000405410\n.text:0000000000405412\n.text:0000000000405413\n'
p566
tp567
sS'main'
p568
(S'\n__stdcall main(char * * argv)\n'
p569
V\u000aint main(char **argv)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  XtPointer closure;\u000a  undefined8 uVar3;\u000a  undefined8 uVar4;\u000a  undefined4 *closure_00;\u000a  size_t sVar5;\u000a  ulong uVar6;\u000a  char **in_RSI;\u000a  char *call;\u000a  char name [10];\u000a  int local_4c;\u000a  undefined8 local_48;\u000a  String local_40;\u000a  \u000a  local_4c = (int)argv;\u000a  XtSetLanguageProc(0,0,0);\u000a  uVar1 = XtAppInitialize(&appCtx,"XFontSel",options,6,&local_4c);\u000a  if (local_4c == 1) {\u000a    XtAppAddActions(appCtx,xfontsel_actions,1);\u000a    uVar2 = XtParseTranslationTable("<Message>WM_PROTOCOLS: Quit()");\u000a    XtOverrideTranslations(uVar1,uVar2);\u000a    XtGetApplicationResources(uVar1,&AppRes,resources,10,0,0);\u000a    if (AppRes.app_defaults_version < 1) {\u000a      uVar2 = XtDisplay(uVar1);\u000a      local_48 = XtDatabase(uVar2);\u000a      XtWarning("app-defaults file not properly installed.");\u000a      XrmPutLineResource(&local_48,\u000a                                                  \u000a                         "*sampleText*UCSLabel:XFontSel app-defaults file not properly installed;\u005c\u005cnsee \u005c'xfontsel\u005c' manual page."\u000a                        );\u000a    }\u000a    closure = (XtPointer)XtDisplay(uVar1);\u000a    ScheduleWork(GetFontNames,closure);\u000a    uVar2 = XtCreateManagedWidget(&DAT_00405a2e,panedWidgetClass,uVar1,0,0);\u000a    uVar3 = XtCreateManagedWidget("commandBox",formWidgetClass,uVar2,0,0);\u000a    uVar4 = XtCreateManagedWidget("quitButton",commandWidgetClass,uVar3,0,0);\u000a    ownButton = (Widget)XtCreateManagedWidget("ownButton",toggleWidgetClass,uVar3,0,0);\u000a    countLabel = (Widget)XtCreateManagedWidget("countLabel",labelWidgetClass,uVar3,0,0);\u000a    XtAddCallback(uVar4,0x607408,Quit,0);\u000a    XtAddCallback(ownButton,0x607408,OwnSelection,1);\u000a    fieldBox = (Widget)XtCreateManagedWidget("fieldBox",boxWidgetClass,uVar2,0,0);\u000a    uVar6 = 0;\u000a    do {\u000a      closure_00 = (undefined4 *)XtMalloc(0x10);\u000a      snprintf((char *)&local_48,10,"field%d",uVar6 & 0xffffffff);\u000a      XtCreateManagedWidget(&DAT_00405a6f,labelWidgetClass,fieldBox,0,0);\u000a      uVar3 = XtCreateManagedWidget(&local_48,menuButtonWidgetClass,fieldBox,0);\u000a      XtAddCallback(uVar3,0x607408,SelectField);\u000a      *closure_00 = (int)uVar6;\u000a      *(undefined8 *)(closure_00 + 2) = uVar3;\u000a      ScheduleWork(MakeFieldMenu,closure_00);\u000a      ScheduleWork(XtFree,closure_00);\u000a      uVar6 = uVar6 + 1;\u000a    } while (uVar6 != 0xe);\u000a    sVar5 = strlen(AppRes.pattern);\u000a    currentFontNameSize = 0x80;\u000a    if (0x7f < (int)sVar5) {\u000a      currentFontNameSize = (int)sVar5;\u000a    }\u000a    currentFontNameString = (String)XtMalloc();\u000a    strcpy(currentFontNameString,AppRes.pattern);\u000a    local_48 = 0x60752d;\u000a    local_40 = currentFontNameString;\u000a    currentFontName = (Widget)XtCreateManagedWidget("fontName",labelWidgetClass,uVar2,&local_48,1);\u000a    uVar2 = XtCreateManagedWidget("viewPort",viewportWidgetClass,uVar2,0,0);\u000a    sampleText = (Widget)XtCreateManagedWidget("sampleText",ucsLabelWidgetClass,uVar2,0,0);\u000a    XtRealizeWidget(uVar1);\u000a    uVar2 = XtDisplay(uVar1);\u000a    uVar3 = XtWindow(uVar1);\u000a    XDefineCursor(uVar2,uVar3,AppRes.cursor);\u000a    currentFont_0._32_16_ = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\u000a    currentFont_0._16_16_ = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\u000a    currentFont_0._0_16_ = CONCAT412(0xffffffff,CONCAT48(0xffffffff,0xffffffffffffffff));\u000a    currentFont_0._48_8_ = 0xffffffffffffffff;\u000a    uVar2 = XtDisplay(uVar1);\u000a    wm_delete_window = XInternAtom(uVar2,"WM_DELETE_WINDOW",0);\u000a    uVar2 = XtDisplay(uVar1);\u000a    uVar1 = XtWindow(uVar1);\u000a    XSetWMProtocols(uVar2,uVar1,&wm_delete_window,1);\u000a    XtAppMainLoop(appCtx);\u000a    return 0;\u000a  }\u000a  call = *in_RSI;\u000a  Syntax(call);\u000a  fprintf(stderr,"usage:  %s [-options ...] -fn font\u005cn\u005cn%s\u005cn",call,\u000a                    \u000a          "where options include:\u005cn    -display dpy           X server to contact\u005cn    -geometry geom         size and location of window\u005cn    -pattern fontspec      font name pattern to match against\u005cn    -print                 print selected font name on exit\u005cn    -sample string         sample text to use for 1-byte fonts\u005cn    -sample16 string       sample text to use for 2-byte fonts\u005cn    -sampleUCS string      sample text to use for ISO10646 fonts\u005cn    -scaled                use scaled instances of fonts\u005cn"\u000a         );\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p570
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RSI\nMOV dword ptr [RSP + 0xc],EDI\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EDX,EDX\nCALL 0x004021c0\nSUB RSP,0x8\nLEA R8,[RSP + 0x14]\nMOV EDI,0x608a00\nMOV ESI,0x405978\nMOV EDX,0x6085d0\nMOV ECX,0x6\nMOV R9,RBX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x00401e70\nADD RSP,0x20\nMOV R15,RAX\nCMP dword ptr [RSP + 0xc],0x1\nJNZ 0x0040393f\nMOV RDI,qword ptr [0x00608a00]\nMOV ESI,0x608690\nMOV EDX,0x1\nCALL 0x004020a0\nMOV EDI,0x405981\nCALL 0x00402140\nMOV RDI,R15\nMOV RSI,RAX\nCALL 0x00402070\nMOV ESI,0x608a08\nMOV EDX,0x6086a0\nMOV ECX,0xa\nXOR R8D,R8D\nXOR R9D,R9D\nMOV RDI,R15\nCALL 0x00401dc0\nCMP dword ptr [0x00608a08],0x0\nJG 0x0040362c\nMOV RDI,R15\nCALL 0x00402110\nMOV RDI,RAX\nCALL 0x00401db0\nMOV qword ptr [RSP + 0x10],RAX\nMOV EDI,0x40599f\nCALL 0x004020c0\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x4059c9\nCALL 0x004022b0\nMOV RDI,R15\nCALL 0x00402110\nMOV EDI,0x403a10\nXOR EDX,EDX\nMOV RSI,RAX\nCALL 0x00403980\nMOV RSI,qword ptr [0x006088c0]\nMOV EDI,0x405a2e\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R15\nCALL 0x00401e90\nMOV R14,RAX\nMOV RSI,qword ptr [0x00608980]\nMOV EDI,0x405a33\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R14\nCALL 0x00401e90\nMOV RBX,RAX\nMOV RSI,qword ptr [0x00608940]\nMOV EDI,0x405a3e\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00401e90\nMOV R12,RAX\nMOV RSI,qword ptr [0x00608920]\nMOV EDI,0x405a49\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00401e90\nMOV qword ptr [0x00608a58],RAX\nMOV RSI,qword ptr [0x006089a0]\nMOV EDI,0x405a53\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RBX\nCALL 0x00401e90\nMOV qword ptr [0x00608a60],RAX\nMOV ESI,0x607408\nMOV EDX,0x403d10\nXOR ECX,ECX\nMOV RDI,R12\nCALL 0x00402290\nMOV RDI,qword ptr [0x00608a58]\nMOV ESI,0x607408\nMOV EDX,0x403d50\nMOV ECX,0x1\nCALL 0x00402290\nMOV RSI,qword ptr [0x00608960]\nMOV EDI,0x405a5e\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R14\nCALL 0x00401e90\nMOV qword ptr [0x00608a68],RAX\nLEA R12,[RSP + 0x10]\nXOR EBX,EBX\nNOP dword ptr [RAX]\nMOV EDI,0x10\nCALL 0x00401eb0\nMOV R13,RAX\nMOV ESI,0xa\nMOV EDX,0x405a67\nXOR EAX,EAX\nMOV RDI,R12\nMOV ECX,EBX\nCALL 0x00401f70\nMOV RSI,qword ptr [0x006089a0]\nMOV RDX,qword ptr [0x00608a68]\nMOV EDI,0x405a6f\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00401e90\nMOV RSI,qword ptr [0x006089c0]\nMOV RDX,qword ptr [0x00608a68]\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDI,R12\nCALL 0x00401e90\nMOV RBP,RAX\nMOV ESI,0x607408\nMOV EDX,0x403e60\nMOV RDI,RBP\nMOV RCX,RBX\nCALL 0x00402290\nMOV dword ptr [R13],EBX\nMOV qword ptr [R13 + 0x8],RBP\nMOV EDI,0x403ec0\nMOV EDX,0x2\nMOV RSI,R13\nCALL 0x00403980\nMOV EDI,0x4020e0\nMOV EDX,0x2\nMOV RSI,R13\nCALL 0x00403980\nINC RBX\nCMP RBX,0xe\nJNZ 0x00403730\nMOV RDI,qword ptr [0x00608a18]\nCALL 0x00401ef0\nCMP EAX,0x7f\nMOV EDI,0x80\nCMOVG EDI,EAX\nMOV dword ptr [0x00608a70],EDI\nCALL 0x00401eb0\nMOV qword ptr [0x00608a78],RAX\nMOV RSI,qword ptr [0x00608a18]\nMOV RDI,RAX\nCALL 0x00401e40\nMOV qword ptr [RSP + 0x10],0x60752d\nMOV RAX,qword ptr [0x00608a78]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RSI,qword ptr [0x006089a0]\nLEA RCX,[RSP + 0x10]\nMOV EDI,0x405a74\nMOV R8D,0x1\nMOV RDX,R14\nCALL 0x00401e90\nMOV qword ptr [0x00608a80],RAX\nMOV RSI,qword ptr [0x00608910]\nMOV EDI,0x405a7d\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R14\nCALL 0x00401e90\nMOV RSI,qword ptr [0x006085c8]\nMOV EDI,0x405a86\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,RAX\nCALL 0x00401e90\nMOV qword ptr [0x00608a88],RAX\nMOV RDI,R15\nCALL 0x00402040\nMOV RDI,R15\nCALL 0x00402110\nMOV RBX,RAX\nMOV RDI,R15\nCALL 0x00401ee0\nMOV RDX,qword ptr [0x00608a10]\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x00402160\nPCMPEQD XMM0,XMM0\nMOVDQU xmmword ptr [0x00608bac],XMM0\nMOVDQU xmmword ptr [0x00608b9c],XMM0\nMOVDQU xmmword ptr [0x00608b8c],XMM0\nMOV qword ptr [0x00608bbc],-0x1\nMOV RDI,R15\nCALL 0x00402110\nMOV ESI,0x405a91\nXOR EDX,EDX\nMOV RDI,RAX\nCALL 0x004020b0\nMOV qword ptr [0x00608a90],RAX\nMOV RDI,R15\nCALL 0x00402110\nMOV RBX,RAX\nMOV RDI,R15\nCALL 0x00401ee0\nMOV EDX,0x608a90\nMOV ECX,0x1\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x00402060\nMOV RDI,qword ptr [0x00608a00]\nCALL 0x004020d0\nXOR EAX,EAX\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [RBX]\nCALL 0x00403950\nNOP word ptr [RAX + RAX*0x1]\n'
p571
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 f3\n89 7c 24 0c\n31 ff\n31 f6\n31 d2\ne8 50 ec ff ff\n48 83 ec 08\n4c 8d 44 24 14\nbf 00 8a 60 00\nbe 78 59 40 00\nba d0 85 60 00\nb9 06 00 00 00\n49 89 d9\n6a 00\n6a 00\n6a 00\ne8 d5 e8 ff ff\n48 83 c4 20\n49 89 c7\n83 7c 24 0c 01\n0f 85 92 03 00 00\n48 8b 3d 4c 54 20 00\nbe 90 86 60 00\nba 01 00 00 00\ne8 dd ea ff ff\nbf 81 59 40 00\ne8 73 eb ff ff\n4c 89 ff\n48 89 c6\ne8 98 ea ff ff\nbe 08 8a 60 00\nba a0 86 60 00\nb9 0a 00 00 00\n45 31 c0\n45 31 c9\n4c 89 ff\ne8 cb e7 ff ff\n83 3d 0c 54 20 00 00\n7f 2e\n4c 89 ff\ne8 0a eb ff ff\n48 89 c7\ne8 a2 e7 ff ff\n48 89 44 24 10\nbf 9f 59 40 00\ne8 a3 ea ff ff\n48 8d 7c 24 10\nbe c9 59 40 00\ne8 84 ec ff ff\n4c 89 ff\ne8 dc ea ff ff\nbf 10 3a 40 00\n31 d2\n48 89 c6\ne8 3d 03 00 00\n48 8b 35 76 52 20 00\nbf 2e 5a 40 00\n31 c9\n45 31 c0\n4c 89 fa\ne8 34 e8 ff ff\n49 89 c6\n48 8b 35 1a 53 20 00\nbf 33 5a 40 00\n31 c9\n45 31 c0\n4c 89 f2\ne8 18 e8 ff ff\n48 89 c3\n48 8b 35 be 52 20 00\nbf 3e 5a 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 fc e7 ff ff\n49 89 c4\n48 8b 35 82 52 20 00\nbf 49 5a 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 e0 e7 ff ff\n48 89 05 a1 53 20 00\n48 8b 35 e2 52 20 00\nbf 53 5a 40 00\n31 c9\n45 31 c0\n48 89 da\ne8 c0 e7 ff ff\n48 89 05 89 53 20 00\nbe 08 74 60 00\nba 10 3d 40 00\n31 c9\n4c 89 e7\ne8 a5 eb ff ff\n48 8b 3d 66 53 20 00\nbe 08 74 60 00\nba 50 3d 40 00\nb9 01 00 00 00\ne8 8a eb ff ff\n48 8b 35 53 52 20 00\nbf 5e 5a 40 00\n31 c9\n45 31 c0\n4c 89 f2\ne8 71 e7 ff ff\n48 89 05 42 53 20 00\n4c 8d 64 24 10\n31 db\n0f 1f 00\nbf 10 00 00 00\ne8 76 e7 ff ff\n49 89 c5\nbe 0a 00 00 00\nba 67 5a 40 00\n31 c0\n4c 89 e7\n89 d9\ne8 1d e8 ff ff\n48 8b 35 46 52 20 00\n48 8b 15 07 53 20 00\nbf 6f 5a 40 00\n31 c9\n45 31 c0\ne8 20 e7 ff ff\n48 8b 35 49 52 20 00\n48 8b 15 ea 52 20 00\n31 c9\n45 31 c0\n4c 89 e7\ne8 05 e7 ff ff\n48 89 c5\nbe 08 74 60 00\nba 60 3e 40 00\n48 89 ef\n48 89 d9\ne8 ed ea ff ff\n41 89 5d 00\n49 89 6d 08\nbf c0 3e 40 00\nba 02 00 00 00\n4c 89 ee\ne8 c3 01 00 00\nbf e0 20 40 00\nba 02 00 00 00\n4c 89 ee\ne8 b1 01 00 00\n48 ff c3\n48 83 fb 0e\n0f 85 54 ff ff ff\n48 8b 3d 35 52 20 00\ne8 08 e7 ff ff\n83 f8 7f\nbf 80 00 00 00\n0f 4f f8\n89 3d 77 52 20 00\ne8 b2 e6 ff ff\n48 89 05 73 52 20 00\n48 8b 35 0c 52 20 00\n48 89 c7\ne8 2c e6 ff ff\n48 c7 44 24 10 2d 75 60 00\n48 8b 05 54 52 20 00\n48 89 44 24 18\n48 8b 35 70 51 20 00\n48 8d 4c 24 10\nbf 74 5a 40 00\n41 b8 01 00 00 00\n4c 89 f2\ne8 48 e6 ff ff\n48 89 05 31 52 20 00\n48 8b 35 ba 50 20 00\nbf 7d 5a 40 00\n31 c9\n45 31 c0\n4c 89 f2\ne8 28 e6 ff ff\n48 8b 35 59 4d 20 00\nbf 86 5a 40 00\n31 c9\n45 31 c0\n48 89 c2\ne8 0f e6 ff ff\n48 89 05 00 52 20 00\n4c 89 ff\ne8 b0 e7 ff ff\n4c 89 ff\ne8 78 e8 ff ff\n48 89 c3\n4c 89 ff\ne8 3d e6 ff ff\n48 8b 15 66 51 20 00\n48 89 df\n48 89 c6\ne8 ab e8 ff ff\n66 0f 76 c0\nf3 0f 7f 05 eb 52 20 00\nf3 0f 7f 05 d3 52 20 00\nf3 0f 7f 05 bb 52 20 00\n48 c7 05 e0 52 20 00 ff ff ff ff\n4c 89 ff\ne8 2c e8 ff ff\nbe 91 5a 40 00\n31 d2\n48 89 c7\ne8 bd e7 ff ff\n48 89 05 96 51 20 00\n4c 89 ff\ne8 0e e8 ff ff\n48 89 c3\n4c 89 ff\ne8 d3 e5 ff ff\nba 90 8a 60 00\nb9 01 00 00 00\n48 89 df\n48 89 c6\ne8 3e e7 ff ff\n48 8b 3d d7 50 20 00\ne8 a2 e7 ff ff\n31 c0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 3b\ne8 09 00 00 00\n66 0f 1f 84 00 00 00 00 00\n'
p572
S'.text:0000000000403550\n.text:0000000000403551\n.text:0000000000403553\n.text:0000000000403555\n.text:0000000000403557\n.text:0000000000403559\n.text:000000000040355a\n.text:000000000040355e\n.text:0000000000403561\n.text:0000000000403565\n.text:0000000000403567\n.text:0000000000403569\n.text:000000000040356b\n.text:0000000000403570\n.text:0000000000403574\n.text:0000000000403579\n.text:000000000040357e\n.text:0000000000403583\n.text:0000000000403588\n.text:000000000040358d\n.text:0000000000403590\n.text:0000000000403592\n.text:0000000000403594\n.text:0000000000403596\n.text:000000000040359b\n.text:000000000040359f\n.text:00000000004035a2\n.text:00000000004035a7\n.text:00000000004035ad\n.text:00000000004035b4\n.text:00000000004035b9\n.text:00000000004035be\n.text:00000000004035c3\n.text:00000000004035c8\n.text:00000000004035cd\n.text:00000000004035d0\n.text:00000000004035d3\n.text:00000000004035d8\n.text:00000000004035dd\n.text:00000000004035e2\n.text:00000000004035e7\n.text:00000000004035ea\n.text:00000000004035ed\n.text:00000000004035f0\n.text:00000000004035f5\n.text:00000000004035fc\n.text:00000000004035fe\n.text:0000000000403601\n.text:0000000000403606\n.text:0000000000403609\n.text:000000000040360e\n.text:0000000000403613\n.text:0000000000403618\n.text:000000000040361d\n.text:0000000000403622\n.text:0000000000403627\n.text:000000000040362c\n.text:000000000040362f\n.text:0000000000403634\n.text:0000000000403639\n.text:000000000040363b\n.text:000000000040363e\n.text:0000000000403643\n.text:000000000040364a\n.text:000000000040364f\n.text:0000000000403651\n.text:0000000000403654\n.text:0000000000403657\n.text:000000000040365c\n.text:000000000040365f\n.text:0000000000403666\n.text:000000000040366b\n.text:000000000040366d\n.text:0000000000403670\n.text:0000000000403673\n.text:0000000000403678\n.text:000000000040367b\n.text:0000000000403682\n.text:0000000000403687\n.text:0000000000403689\n.text:000000000040368c\n.text:000000000040368f\n.text:0000000000403694\n.text:0000000000403697\n.text:000000000040369e\n.text:00000000004036a3\n.text:00000000004036a5\n.text:00000000004036a8\n.text:00000000004036ab\n.text:00000000004036b0\n.text:00000000004036b7\n.text:00000000004036be\n.text:00000000004036c3\n.text:00000000004036c5\n.text:00000000004036c8\n.text:00000000004036cb\n.text:00000000004036d0\n.text:00000000004036d7\n.text:00000000004036dc\n.text:00000000004036e1\n.text:00000000004036e3\n.text:00000000004036e6\n.text:00000000004036eb\n.text:00000000004036f2\n.text:00000000004036f7\n.text:00000000004036fc\n.text:0000000000403701\n.text:0000000000403706\n.text:000000000040370d\n.text:0000000000403712\n.text:0000000000403714\n.text:0000000000403717\n.text:000000000040371a\n.text:000000000040371f\n.text:0000000000403726\n.text:000000000040372b\n.text:000000000040372d\n.text:0000000000403730\n.text:0000000000403735\n.text:000000000040373a\n.text:000000000040373d\n.text:0000000000403742\n.text:0000000000403747\n.text:0000000000403749\n.text:000000000040374c\n.text:000000000040374e\n.text:0000000000403753\n.text:000000000040375a\n.text:0000000000403761\n.text:0000000000403766\n.text:0000000000403768\n.text:000000000040376b\n.text:0000000000403770\n.text:0000000000403777\n.text:000000000040377e\n.text:0000000000403780\n.text:0000000000403783\n.text:0000000000403786\n.text:000000000040378b\n.text:000000000040378e\n.text:0000000000403793\n.text:0000000000403798\n.text:000000000040379b\n.text:000000000040379e\n.text:00000000004037a3\n.text:00000000004037a7\n.text:00000000004037ab\n.text:00000000004037b0\n.text:00000000004037b5\n.text:00000000004037b8\n.text:00000000004037bd\n.text:00000000004037c2\n.text:00000000004037c7\n.text:00000000004037ca\n.text:00000000004037cf\n.text:00000000004037d2\n.text:00000000004037d6\n.text:00000000004037dc\n.text:00000000004037e3\n.text:00000000004037e8\n.text:00000000004037eb\n.text:00000000004037f0\n.text:00000000004037f3\n.text:00000000004037f9\n.text:00000000004037fe\n.text:0000000000403805\n.text:000000000040380c\n.text:000000000040380f\n.text:0000000000403814\n.text:000000000040381d\n.text:0000000000403824\n.text:0000000000403829\n.text:0000000000403830\n.text:0000000000403835\n.text:000000000040383a\n.text:0000000000403840\n.text:0000000000403843\n.text:0000000000403848\n.text:000000000040384f\n.text:0000000000403856\n.text:000000000040385b\n.text:000000000040385d\n.text:0000000000403860\n.text:0000000000403863\n.text:0000000000403868\n.text:000000000040386f\n.text:0000000000403874\n.text:0000000000403876\n.text:0000000000403879\n.text:000000000040387c\n.text:0000000000403881\n.text:0000000000403888\n.text:000000000040388b\n.text:0000000000403890\n.text:0000000000403893\n.text:0000000000403898\n.text:000000000040389b\n.text:000000000040389e\n.text:00000000004038a3\n.text:00000000004038aa\n.text:00000000004038ad\n.text:00000000004038b0\n.text:00000000004038b5\n.text:00000000004038b9\n.text:00000000004038c1\n.text:00000000004038c9\n.text:00000000004038d1\n.text:00000000004038dc\n.text:00000000004038df\n.text:00000000004038e4\n.text:00000000004038e9\n.text:00000000004038eb\n.text:00000000004038ee\n.text:00000000004038f3\n.text:00000000004038fa\n.text:00000000004038fd\n.text:0000000000403902\n.text:0000000000403905\n.text:0000000000403908\n.text:000000000040390d\n.text:0000000000403912\n.text:0000000000403917\n.text:000000000040391a\n.text:000000000040391d\n.text:0000000000403922\n.text:0000000000403929\n.text:000000000040392e\n.text:0000000000403930\n.text:0000000000403934\n.text:0000000000403935\n.text:0000000000403937\n.text:0000000000403939\n.text:000000000040393b\n.text:000000000040393d\n.text:000000000040393e\n.text:000000000040393f\n.text:0000000000403942\n.text:0000000000403947\n'
p573
tp574
sS'XtMalloc'
p575
(S'\n__stdcall XtMalloc()\n'
p576
V\u000avoid XtMalloc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtMalloc_006080a0)();\u000a  return;\u000a}\u000a\u000a
p577
S'JMP qword ptr [0x006080a0]\n'
p578
S'ff 25 ea 61 20 00\n'
p579
S'.plt:0000000000401eb0\n'
p580
tp581
sS'GetnormalGC'
p582
(S'\n__stdcall GetnormalGC(UCSLabelWidget lw)\n'
p583
V\u000avoid GetnormalGC(UCSLabelWidget lw)\u000a\u000a{\u000a  GC p_Var1;\u000a  undefined auStack136 [16];\u000a  Pixel local_78;\u000a  Pixel local_70;\u000a  Font local_30;\u000a  undefined4 local_24;\u000a  \u000a  local_78 = (lw->label).foreground;\u000a  local_70 = (lw->core).background_pixel;\u000a  local_30 = ((lw->label).font)->fid;\u000a  local_24 = 0;\u000a  if ((lw->simple).international == 1) {\u000a    p_Var1 = (GC)XtAllocateGC(lw,0,0x1000c,auStack136,0x4000,0);\u000a  }\u000a  else {\u000a    p_Var1 = (GC)XtGetGC(lw,0x1400c,auStack136);\u000a  }\u000a  (lw->label).normal_GC = p_Var1;\u000a  return;\u000a}\u000a\u000a
p584
S'PUSH RBX\nSUB RSP,0x80\nMOV RBX,RDI\nMOV RAX,qword ptr [0x128 + RBX]\nMOV qword ptr [RSP + 0x10],RAX\nMOV RAX,qword ptr [0xb8 + RBX]\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [0x130 + RBX]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x64],0x0\nCMP byte ptr [0xf8 + RBX],0x1\nJNZ 0x00402da1\nMOV RCX,RSP\nXOR ESI,ESI\nMOV EDX,0x1000c\nMOV R8D,0x4000\nXOR R9D,R9D\nMOV RDI,RBX\nCALL 0x00402220\nJMP 0x00402db1\nMOV RDX,RSP\nMOV ESI,0x1400c\nMOV RDI,RBX\nCALL 0x004021e0\nMOV qword ptr [0x168 + RBX],RAX\nADD RSP,0x80\nPOP RBX\nRET\n'
p585
S'53\n48 81 ec 80 00 00 00\n48 89 fb\n48 8b 83 28 01 00 00\n48 89 44 24 10\n48 8b 83 b8 00 00 00\n48 89 44 24 18\n48 8b 83 30 01 00 00\n48 8b 40 08\n48 89 44 24 58\nc7 44 24 64 00 00 00 00\n80 bb f8 00 00 00 01\n75 1d\n48 89 e1\n31 f6\nba 0c 00 01 00\n41 b8 00 40 00 00\n45 31 c9\n48 89 df\ne8 81 f4 ff ff\neb 10\n48 89 e2\nbe 0c 40 01 00\n48 89 df\ne8 2f f4 ff ff\n48 89 83 68 01 00 00\n48 81 c4 80 00 00 00\n5b\nc3\n'
p586
S'.text:0000000000402d40\n.text:0000000000402d41\n.text:0000000000402d48\n.text:0000000000402d4b\n.text:0000000000402d52\n.text:0000000000402d57\n.text:0000000000402d5e\n.text:0000000000402d63\n.text:0000000000402d6a\n.text:0000000000402d6e\n.text:0000000000402d73\n.text:0000000000402d7b\n.text:0000000000402d82\n.text:0000000000402d84\n.text:0000000000402d87\n.text:0000000000402d89\n.text:0000000000402d8e\n.text:0000000000402d94\n.text:0000000000402d97\n.text:0000000000402d9a\n.text:0000000000402d9f\n.text:0000000000402da1\n.text:0000000000402da4\n.text:0000000000402da9\n.text:0000000000402dac\n.text:0000000000402db1\n.text:0000000000402db8\n.text:0000000000402dbf\n.text:0000000000402dc0\n'
p587
tp588
sS'XRectInRegion'
p589
(S'\n__stdcall XRectInRegion()\n'
p590
V\u000avoid XRectInRegion(void)\u000a\u000a{\u000a  (*(code *)PTR_XRectInRegion_00608248)();\u000a  return;\u000a}\u000a\u000a
p591
S'JMP qword ptr [0x00608248]\n'
p592
S'ff 25 42 60 20 00\n'
p593
S'.plt:0000000000402200\n'
p594
tp595
sS'XtAllocateGC'
p596
(S'\n__stdcall XtAllocateGC()\n'
p597
V\u000avoid XtAllocateGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAllocateGC_00608258)();\u000a  return;\u000a}\u000a\u000a
p598
S'JMP qword ptr [0x00608258]\n'
p599
S'ff 25 32 60 20 00\n'
p600
S'.plt:0000000000402220\n'
p601
tp602
sS'strlen'
p603
(S'\n__stdcall strlen(char * __s)\n'
p604
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_006080c0)();\u000a  return sVar1;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x006080c0]\n'
p606
S'ff 25 ca 61 20 00\n'
p607
S'.plt:0000000000401ef0\n'
p608
tp609
sS'ParseFontNames'
p610
(S'\n__stdcall ParseFontNames(XtPointer closure)\n'
p611
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000avoid ParseFontNames(XtPointer closure)\u000a\u000a{\u000a  int iVar1;\u000a  long lVar2;\u000a  long lVar3;\u000a  Boolean BVar4;\u000a  int iVar5;\u000a  char *__s1;\u000a  undefined8 uVar6;\u000a  String *ppcVar7;\u000a  long lVar8;\u000a  long lVar9;\u000a  int *piVar10;\u000a  char *fontName;\u000a  int iVar11;\u000a  char *fieldP;\u000a  char *local_60;\u000a  int local_58;\u000a  long local_40;\u000a  \u000a  local_58 = *(int *)((long)closure + 0xc);\u000a  iVar1 = *(int *)((long)closure + 0x10);\u000a  if (local_58 < iVar1) {\u000a    lVar2 = *(long *)((long)closure + 0x20);\u000a    local_40 = (long)numBadFonts * -0x38 + *(long *)((long)closure + 0x18);\u000a    ppcVar7 = *(String **)closure;\u000a    do {\u000a      fontName = *ppcVar7;\u000a      BVar4 = IsXLFDFontName(fontName);\u000a      if (BVar4 == 0) {\u000a        numFonts = numFonts + -1;\u000a        numBadFonts = numBadFonts + 1;\u000a      }\u000a      else {\u000a        lVar9 = 0;\u000a        do {\u000a          local_60 = fontName + 1;\u000a          if (*fontName == 0) {\u000a            local_60 = fontName;\u000a          }\u000a          local_60._0_4_ = 0;\u000a          if ((*local_60 == 0) || (fontName = local_60, *local_60 == '-')) {\u000a            fontName = local_60;\u000a            local_60 = "";\u000a          }\u000a          else {\u000a            do {\u000a              if (*fontName == 0) break;\u000a              __s1 = fontName + 1;\u000a              fontName = fontName + 1;\u000a            } while (*__s1 != '-');\u000a            local_60._0_4_ = (int)fontName - (int)local_60;\u000a          }\u000a          piVar10 = *(int **)(lVar2 + lVar9 * 8);\u000a          iVar11 = *piVar10;\u000a          if (iVar11 != 0) {\u000a            piVar10 = piVar10 + 4;\u000a            do {\u000a              __s1 = *(char **)(piVar10 + 2);\u000a              if ((int)local_60 == 0) {\u000a                if (__s1 == (char *)0x0) goto LAB_004042e5;\u000a              }\u000a              else {\u000a                if (((__s1 != (char *)0x0) &&\u000a                    (iVar5 = strncmp(__s1,local_60,(long)(int)local_60), iVar5 == 0)) &&\u000a                   (__s1[(long)(int)local_60] == 0)) goto LAB_004042e5;\u000a              }\u000a              piVar10 = piVar10 + 0xc;\u000a              iVar11 = iVar11 + -1;\u000a            } while (iVar11 != 0);\u000a          }\u000a          piVar10 = *(int **)(lVar2 + lVar9 * 8);\u000a          iVar11 = *piVar10;\u000a          *piVar10 = iVar11 + 1;\u000a          lVar3 = *(long *)(lVar2 + lVar9 * 8);\u000a          iVar5 = *(int *)(lVar3 + 4);\u000a          if (iVar11 == iVar5) {\u000a            *(int *)(lVar3 + 4) = iVar5 + 10;\u000a            uVar6 = XtRealloc(*(undefined8 *)(lVar2 + lVar9 * 8),(ulong)(iVar5 * 0x30 + 0x1f0));\u000a            *(undefined8 *)(lVar2 + lVar9 * 8) = uVar6;\u000a          }\u000a          lVar3 = *(long *)(lVar2 + lVar9 * 8);\u000a          lVar8 = (long)iVar11 * 0x30;\u000a          *(undefined4 *)(lVar3 + 0x10 + lVar8) = (int)lVar9;\u000a          if ((int)local_60 == 0) {\u000a            *(undefined8 *)(lVar3 + 0x18 + lVar8) = 0;\u000a          }\u000a          else {\u000a            __s1 = (char *)XtMalloc((ulong)((int)local_60 + 1));\u000a            *(char **)(lVar3 + 0x18 + lVar8) = __s1;\u000a            strncpy(__s1,local_60,(long)(int)local_60);\u000a            *(undefined *)(*(long *)(lVar3 + 0x18 + lVar8) + (long)(int)local_60) = 0;\u000a          }\u000a          piVar10 = (int *)(lVar3 + 0x10 + lVar8);\u000a          uVar6 = XtMalloc(0x28);\u000a          *(undefined8 *)(lVar3 + 0x30 + lVar8) = uVar6;\u000a          *(undefined4 *)(lVar3 + 0x2c + lVar8) = 10;\u000a          *(undefined4 *)(lVar3 + 0x28 + lVar8) = 0;\u000a          *(undefined *)(lVar3 + 0x38 + lVar8) = 1;\u000a          iVar11 = 1;\u000aLAB_004042e5:\u000a          *(int *)(local_40 + lVar9 * 4) = **(int **)(lVar2 + lVar9 * 8) - iVar11;\u000a          iVar11 = piVar10[6];\u000a          piVar10[6] = iVar11 + 1;\u000a          iVar5 = piVar10[7];\u000a          if (iVar11 == iVar5) {\u000a            piVar10[7] = iVar5 + 10;\u000a            uVar6 = XtRealloc(*(undefined8 *)(piVar10 + 8),(ulong)(iVar5 * 4 + 0x28));\u000a            *(undefined8 *)(piVar10 + 8) = uVar6;\u000a          }\u000a          *(int *)(*(long *)(piVar10 + 8) + (long)iVar11 * 4) = local_58 - numBadFonts;\u000a          lVar9 = lVar9 + 1;\u000a        } while (lVar9 != 0xe);\u000a        ppcVar7 = ppcVar7 + 1;\u000a        local_40 = local_40 + 0x38;\u000a      }\u000a      local_58 = local_58 + 1;\u000a    } while (local_58 != iVar1);\u000a  }\u000a  SetParsingFontCount((ulong)(uint)(numFonts - iVar1));\u000a  return;\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV ECX,dword ptr [RDI + 0xc]\nMOV EAX,dword ptr [RDI + 0x10]\nMOV dword ptr [RSP + 0x14],EAX\nMOV dword ptr [RSP + 0x10],ECX\nCMP ECX,EAX\nJGE 0x00404385\nMOV R15,qword ptr [RDI + 0x20]\nMOVSXD RAX,dword ptr [0x00608b34]\nNEG RAX\nIMUL RAX,RAX,0x38\nADD RAX,qword ptr [RDI + 0x18]\nMOV qword ptr [RSP + 0x28],RAX\nMOV RCX,qword ptr [RDI]\nMOV qword ptr [RSP + 0x18],R15\nNOP word ptr [RAX + RAX*0x1]\nMOV qword ptr [RSP + 0x20],RCX\nMOV R12,qword ptr [RCX]\nMOV RDI,R12\nCALL 0x004045f0\nTEST AL,AL\nJZ 0x00404360\nXOR EBX,EBX\nNOP word ptr [RAX + RAX*0x1]\nLEA RCX,[R12 + 0x1]\nCMP byte ptr [R12],0x0\nCMOVZ RCX,R12\nMOV RAX,RCX\nMOV qword ptr [RSP + 0x8],RAX\nMOV AL,byte ptr [RCX]\nXOR R13D,R13D\nTEST AL,AL\nJZ 0x00404163\nCMP AL,0x2d\nJNZ 0x00404180\nMOV R12,qword ptr [RSP + 0x8]\nMOV EAX,0x405b1e\nMOV qword ptr [RSP + 0x8],RAX\nJMP 0x004041ac\nMOV R12,qword ptr [RSP + 0x8]\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [R12],0x0\nJZ 0x004041a4\nCMP byte ptr [R12 + 0x1],0x2d\nLEA R12,[R12 + 0x1]\nJNZ 0x00404190\nMOV R13D,R12D\nSUB R13D,dword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x30],RBX\nMOV RBP,qword ptr [R15 + RBX*0x8]\nMOV R14D,dword ptr [RBP]\nTEST R14D,R14D\nJZ 0x00404212\nADD RBP,0x10\nMOVSXD R15,R13D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RBX,qword ptr [RBP + 0x8]\nTEST R13D,R13D\nJZ 0x00404200\nTEST RBX,RBX\nJZ 0x00404209\nMOV RDI,RBX\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RDX,R15\nCALL 0x00401e10\nTEST EAX,EAX\nJNZ 0x00404209\nCMP byte ptr [RBX + R15*0x1],0x0\nJNZ 0x00404209\nJMP 0x004042e0\nTEST RBX,RBX\nJZ 0x004042e0\nADD RBP,0x30\nDEC R14D\nJNZ 0x004041d0\nMOV R15,qword ptr [RSP + 0x18]\nMOV RBP,qword ptr [RSP + 0x30]\nMOV RAX,qword ptr [R15 + RBP*0x8]\nMOVSXD RBX,dword ptr [RAX]\nLEA ECX,[RBX + 0x1]\nMOV dword ptr [RAX],ECX\nMOV RCX,qword ptr [R15 + RBP*0x8]\nMOV EAX,dword ptr [RCX + 0x4]\nCMP EBX,EAX\nJNZ 0x00404252\nLEA EDX,[RAX + 0xa]\nMOV dword ptr [RCX + 0x4],EDX\nMOV RDI,qword ptr [R15 + RBP*0x8]\nLEA ESI,[RAX + RAX*0x2]\nSHL ESI,0x4\nADD ESI,0x1f0\nCALL 0x00401ff0\nMOV qword ptr [R15 + RBP*0x8],RAX\nMOV R14,qword ptr [R15 + RBP*0x8]\nLEA RBX,[RBX + RBX*0x2]\nSHL RBX,0x4\nMOV dword ptr [R14 + RBX*0x1 + 0x10],EBP\nTEST R13D,R13D\nJZ 0x004042a0\nLEA EDI,[R13 + 0x1]\nCALL 0x00401eb0\nMOV qword ptr [R14 + RBX*0x1 + 0x18],RAX\nMOVSXD RBP,R13D\nMOV RDI,RAX\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RDX,RBP\nCALL 0x00401e00\nMOV RAX,qword ptr [R14 + RBX*0x1 + 0x18]\nMOV byte ptr [RAX + RBP*0x1],0x0\nJMP 0x004042a9\nMOV qword ptr [R14 + RBX*0x1 + 0x18],0x0\nLEA RBP,[R14 + RBX*0x1 + 0x10]\nMOV EDI,0x28\nCALL 0x00401eb0\nMOV qword ptr [R14 + RBX*0x1 + 0x30],RAX\nMOV dword ptr [R14 + RBX*0x1 + 0x2c],0xa\nMOV dword ptr [R14 + RBX*0x1 + 0x28],0x0\nMOV byte ptr [R14 + RBX*0x1 + 0x38],0x1\nMOV R14D,0x1\nJMP 0x004042e5\nMOV R15,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP + 0x30]\nMOV RAX,qword ptr [R15 + RCX*0x8]\nMOV EAX,dword ptr [RAX]\nSUB EAX,R14D\nMOV RBX,RCX\nMOV RCX,qword ptr [RSP + 0x28]\nMOV dword ptr [RCX + RBX*0x4],EAX\nMOVSXD R14,dword ptr [RBP + 0x18]\nLEA EAX,[R14 + 0x1]\nMOV dword ptr [RBP + 0x18],EAX\nMOV EAX,dword ptr [RBP + 0x1c]\nCMP R14D,EAX\nJNZ 0x0040432b\nLEA ECX,[RAX + 0xa]\nMOV dword ptr [RBP + 0x1c],ECX\nMOV RDI,qword ptr [RBP + 0x20]\nLEA ESI,[0x28 + RAX*0x4]\nCALL 0x00401ff0\nMOV qword ptr [RBP + 0x20],RAX\nMOV EAX,dword ptr [RSP + 0x10]\nSUB EAX,dword ptr [0x00608b34]\nMOV RCX,qword ptr [RBP + 0x20]\nMOV dword ptr [RCX + R14*0x4],EAX\nINC RBX\nCMP RBX,0xe\nJNZ 0x00404140\nMOV RCX,qword ptr [RSP + 0x20]\nADD RCX,0x8\nADD qword ptr [RSP + 0x28],0x38\nJMP 0x00404371\nDEC dword ptr [0x00608aa0]\nINC dword ptr [0x00608b34]\nMOV RCX,qword ptr [RSP + 0x20]\nMOV EAX,dword ptr [RSP + 0x10]\nINC EAX\nMOV dword ptr [RSP + 0x10],EAX\nCMP EAX,dword ptr [RSP + 0x14]\nJNZ 0x00404120\nMOV EDI,dword ptr [0x00608aa0]\nSUB EDI,dword ptr [RSP + 0x14]\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00404580\n'
p613
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n8b 4f 0c\n8b 47 10\n89 44 24 14\n89 4c 24 10\n39 c1\n0f 8d 91 02 00 00\n4c 8b 7f 20\n48 63 05 35 4a 20 00\n48 f7 d8\n48 6b c0 38\n48 03 47 18\n48 89 44 24 28\n48 8b 0f\n4c 89 7c 24 18\n66 0f 1f 84 00 00 00 00 00\n48 89 4c 24 20\n4c 8b 21\n4c 89 e7\ne8 c0 04 00 00\n84 c0\n0f 84 28 02 00 00\n31 db\n66 0f 1f 44 00 00\n49 8d 4c 24 01\n41 80 3c 24 00\n49 0f 44 cc\n48 89 c8\n48 89 44 24 08\n8a 01\n45 31 ed\n84 c0\n74 04\n3c 2d\n75 1d\n4c 8b 64 24 08\nb8 1e 5b 40 00\n48 89 44 24 08\neb 38\n4c 8b 64 24 08\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 80 3c 24 00\n74 0d\n41 80 7c 24 01 2d\n4d 8d 64 24 01\n75 ec\n45 89 e5\n44 2b 6c 24 08\n48 89 5c 24 30\n49 8b 2c df\n44 8b 75 00\n45 85 f6\n74 54\n48 83 c5 10\n4d 63 fd\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 5d 08\n45 85 ed\n74 27\n48 85 db\n74 2b\n48 89 df\n48 8b 74 24 08\n4c 89 fa\ne8 22 dc ff ff\n85 c0\n75 17\n42 80 3c 3b 00\n75 10\ne9 e2 00 00 00\n48 85 db\n0f 84 d7 00 00 00\n48 83 c5 30\n41 ff ce\n75 be\n4c 8b 7c 24 18\n48 8b 6c 24 30\n49 8b 04 ef\n48 63 18\n8d 4b 01\n89 08\n49 8b 0c ef\n8b 41 04\n39 c3\n75 1f\n8d 50 0a\n89 51 04\n49 8b 3c ef\n8d 34 40\nc1 e6 04\n81 c6 f0 01 00 00\ne8 a2 dd ff ff\n49 89 04 ef\n4d 8b 34 ef\n48 8d 1c 5b\n48 c1 e3 04\n41 89 6c 1e 10\n45 85 ed\n74 38\n41 8d 7d 01\ne8 3f dc ff ff\n49 89 44 1e 18\n49 63 ed\n48 89 c7\n48 8b 74 24 08\n48 89 ea\ne8 77 db ff ff\n49 8b 44 1e 18\nc6 04 28 00\neb 15\n49 c7 44 1e 18 00 00 00 00\n49 8d 6c 1e 10\nbf 28 00 00 00\ne8 f8 db ff ff\n49 89 44 1e 30\n41 c7 44 1e 2c 0a 00 00 00\n41 c7 44 1e 28 00 00 00 00\n41 c6 44 1e 38 01\n41 be 01 00 00 00\neb 08\n4c 8b 7c 24 18\n48 8b 4c 24 30\n49 8b 04 cf\n8b 00\n44 29 f0\n48 89 cb\n48 8b 4c 24 28\n89 04 99\n4c 63 75 18\n41 8d 46 01\n89 45 18\n8b 45 1c\n41 39 c6\n75 1a\n8d 48 0a\n89 4d 1c\n48 8b 7d 20\n8d 34 85 28 00 00 00\ne8 c9 dc ff ff\n48 89 45 20\n8b 44 24 10\n2b 05 ff 47 20 00\n48 8b 4d 20\n42 89 04 b1\n48 ff c3\n48 83 fb 0e\n0f 85 f6 fd ff ff\n48 8b 4c 24 20\n48 83 c1 08\n48 83 44 24 28 38\neb 16\nff 0d 3a 47 20 00\nff 05 c8 47 20 00\n48 8b 4c 24 20\n8b 44 24 10\nff c0\n89 44 24 10\n3b 44 24 14\n0f 85 9b fd ff ff\n8b 3d 15 47 20 00\n2b 7c 24 14\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 de 01 00 00\n'
p614
S'.text:00000000004040d0\n.text:00000000004040d1\n.text:00000000004040d3\n.text:00000000004040d5\n.text:00000000004040d7\n.text:00000000004040d9\n.text:00000000004040da\n.text:00000000004040de\n.text:00000000004040e1\n.text:00000000004040e4\n.text:00000000004040e8\n.text:00000000004040ec\n.text:00000000004040ee\n.text:00000000004040f4\n.text:00000000004040f8\n.text:00000000004040ff\n.text:0000000000404102\n.text:0000000000404106\n.text:000000000040410a\n.text:000000000040410f\n.text:0000000000404112\n.text:0000000000404117\n.text:0000000000404120\n.text:0000000000404125\n.text:0000000000404128\n.text:000000000040412b\n.text:0000000000404130\n.text:0000000000404132\n.text:0000000000404138\n.text:000000000040413a\n.text:0000000000404140\n.text:0000000000404145\n.text:000000000040414a\n.text:000000000040414e\n.text:0000000000404151\n.text:0000000000404156\n.text:0000000000404158\n.text:000000000040415b\n.text:000000000040415d\n.text:000000000040415f\n.text:0000000000404161\n.text:0000000000404163\n.text:0000000000404168\n.text:000000000040416d\n.text:0000000000404172\n.text:0000000000404180\n.text:0000000000404185\n.text:0000000000404190\n.text:0000000000404195\n.text:0000000000404197\n.text:000000000040419d\n.text:00000000004041a2\n.text:00000000004041a4\n.text:00000000004041a7\n.text:00000000004041ac\n.text:00000000004041b1\n.text:00000000004041b5\n.text:00000000004041b9\n.text:00000000004041bc\n.text:00000000004041be\n.text:00000000004041c2\n.text:00000000004041c5\n.text:00000000004041d0\n.text:00000000004041d4\n.text:00000000004041d7\n.text:00000000004041d9\n.text:00000000004041dc\n.text:00000000004041de\n.text:00000000004041e1\n.text:00000000004041e6\n.text:00000000004041e9\n.text:00000000004041ee\n.text:00000000004041f0\n.text:00000000004041f2\n.text:00000000004041f7\n.text:00000000004041f9\n.text:0000000000404200\n.text:0000000000404203\n.text:0000000000404209\n.text:000000000040420d\n.text:0000000000404210\n.text:0000000000404212\n.text:0000000000404217\n.text:000000000040421c\n.text:0000000000404220\n.text:0000000000404223\n.text:0000000000404226\n.text:0000000000404228\n.text:000000000040422c\n.text:000000000040422f\n.text:0000000000404231\n.text:0000000000404233\n.text:0000000000404236\n.text:0000000000404239\n.text:000000000040423d\n.text:0000000000404240\n.text:0000000000404243\n.text:0000000000404249\n.text:000000000040424e\n.text:0000000000404252\n.text:0000000000404256\n.text:000000000040425a\n.text:000000000040425e\n.text:0000000000404263\n.text:0000000000404266\n.text:0000000000404268\n.text:000000000040426c\n.text:0000000000404271\n.text:0000000000404276\n.text:0000000000404279\n.text:000000000040427c\n.text:0000000000404281\n.text:0000000000404284\n.text:0000000000404289\n.text:000000000040428e\n.text:0000000000404292\n.text:00000000004042a0\n.text:00000000004042a9\n.text:00000000004042ae\n.text:00000000004042b3\n.text:00000000004042b8\n.text:00000000004042bd\n.text:00000000004042c6\n.text:00000000004042cf\n.text:00000000004042d5\n.text:00000000004042db\n.text:00000000004042e0\n.text:00000000004042e5\n.text:00000000004042ea\n.text:00000000004042ee\n.text:00000000004042f0\n.text:00000000004042f3\n.text:00000000004042f6\n.text:00000000004042fb\n.text:00000000004042fe\n.text:0000000000404302\n.text:0000000000404306\n.text:0000000000404309\n.text:000000000040430c\n.text:000000000040430f\n.text:0000000000404311\n.text:0000000000404314\n.text:0000000000404317\n.text:000000000040431b\n.text:0000000000404322\n.text:0000000000404327\n.text:000000000040432b\n.text:000000000040432f\n.text:0000000000404335\n.text:0000000000404339\n.text:000000000040433d\n.text:0000000000404340\n.text:0000000000404344\n.text:000000000040434a\n.text:000000000040434f\n.text:0000000000404353\n.text:0000000000404359\n.text:0000000000404360\n.text:0000000000404366\n.text:000000000040436c\n.text:0000000000404371\n.text:0000000000404375\n.text:0000000000404377\n.text:000000000040437b\n.text:000000000040437f\n.text:0000000000404385\n.text:000000000040438b\n.text:000000000040438f\n.text:0000000000404393\n.text:0000000000404394\n.text:0000000000404396\n.text:0000000000404398\n.text:000000000040439a\n.text:000000000040439c\n.text:000000000040439d\n'
p615
tp616
sS'XtOwnSelection'
p617
(S'\n__stdcall XtOwnSelection()\n'
p618
V\u000avoid XtOwnSelection(void)\u000a\u000a{\u000a  (*(code *)PTR_XtOwnSelection_006080f0)();\u000a  return;\u000a}\u000a\u000a
p619
S'JMP qword ptr [0x006080f0]\n'
p620
S'ff 25 9a 61 20 00\n'
p621
S'.plt:0000000000401f50\n'
p622
tp623
sS'SetCurrentFont'
p624
(S'\n__stdcall SetCurrentFont(XtPointer closure)\n'
p625
V\u000avoid SetCurrentFont(XtPointer closure)\u000a\u000a{\u000a  long lVar1;\u000a  Widget p_Var2;\u000a  Boolean BVar3;\u000a  long lVar4;\u000a  size_t sVar5;\u000a  Display *dpy;\u000a  XFontStruct *font;\u000a  String *ppcVar6;\u000a  undefined8 uVar7;\u000a  uint uVar8;\u000a  char *__s;\u000a  undefined8 uVar9;\u000a  int iVar10;\u000a  int iVar11;\u000a  int iVar12;\u000a  long lVar13;\u000a  int iVar14;\u000a  Arg args [1];\u000a  undefined8 local_68;\u000a  XFontStruct *local_60;\u000a  char *local_58;\u000a  ulong local_50;\u000a  undefined8 local_48;\u000a  String local_40;\u000a  \u000a  if (numFonts != 0) {\u000a    memset(fontInSet,1,(ulong)(numFonts - 1) + 1);\u000a    iVar10 = 0;\u000a    lVar13 = -0x38;\u000a    iVar11 = currentFontNameSize;\u000a    do {\u000a      currentFontNameString[(long)iVar10] = '-';\u000a      if ((long)*(int *)(lVar13 + 0x608bc4) == -1) {\u000a        iVar12 = 1;\u000a        __s = "*";\u000a      }\u000a      else {\u000a        lVar1 = *(long *)((long)&matchingFontCount + lVar13 * 2);\u000a        lVar4 = (long)*(int *)(lVar13 + 0x608bc4) * 0x30;\u000a        __s = *(char **)(lVar1 + 0x18 + lVar4);\u000a        if (__s == (char *)0x0) {\u000a          iVar12 = 0;\u000a          __s = "";\u000a        }\u000a        else {\u000a          sVar5 = strlen(__s);\u000a          iVar12 = (int)sVar5;\u000a        }\u000a        MarkInvalidFonts(fontInSet,(FieldValue *)(lVar1 + 0x10 + lVar4));\u000a      }\u000a      iVar14 = iVar11 + -1;\u000a      if (iVar14 <= iVar12) {\u000a        currentFontNameSize = currentFontNameSize + 0x80;\u000a        currentFontNameString = (String)XtRealloc(currentFontNameString);\u000a        iVar14 = iVar11 + 0x7f;\u000a      }\u000a      strcpy(currentFontNameString + (long)(iVar10 + 1),__s);\u000a      iVar10 = iVar10 + 1 + iVar12;\u000a      iVar11 = iVar14 - iVar12;\u000a      lVar13 = lVar13 + 4;\u000a    } while (lVar13 != 0);\u000a    local_68 = 0x60752d;\u000a    local_60 = (XFontStruct *)currentFontNameString;\u000a    XtSetValues(currentFontName,&local_68,1);\u000a    matchingFontCount = 0;\u000a    iVar11 = numFonts;\u000a    __s = fontInSet;\u000a    while (iVar11 != 0) {\u000a      if (*__s != 0) {\u000a        matchingFontCount = matchingFontCount + 1;\u000a      }\u000a      __s = __s + 1;\u000a      iVar11 = iVar11 + -1;\u000a    }\u000a    SetCurrentFontCount();\u000a    p_Var2 = sampleText;\u000a    dpy = (Display *)XtDisplay(sampleText);\u000a    font = (XFontStruct *)XLoadQueryFont(dpy,currentFontNameString);\u000a    if (font == (XFontStruct *)0x0) {\u000a      XtSetSensitive(p_Var2,0);\u000a    }\u000a    else {\u000a      if ((font->min_byte1 == 0) && (font->max_byte1 == 0)) {\u000a        uVar8 = 0;\u000a        ppcVar6 = &AppRes.sample_text;\u000a      }\u000a      else {\u000a        BVar3 = IsISO10646(dpy,font);\u000a        ppcVar6 = &AppRes.sample_text16;\u000a        if (BVar3 == 1) {\u000a          ppcVar6 = &AppRes.sample_textUCS;\u000a        }\u000a        uVar8 = (uint)(BVar3 == 1) + 1;\u000a      }\u000a      local_68 = 0x607447;\u000a      uVar9 = 1;\u000a      if (uVar8 != textEncoding) {\u000a        local_58 = "encoding";\u000a        local_50 = (ulong)uVar8;\u000a        local_48 = 0x60752d;\u000a        uVar9 = 3;\u000a        textEncoding = uVar8;\u000a        local_40 = *ppcVar6;\u000a      }\u000a      local_60 = font;\u000a      XtSetValues(sampleText,&local_68,uVar9);\u000a      XtSetSensitive(p_Var2,1);\u000a      uVar9 = XtDisplay(p_Var2);\u000a      uVar7 = XtWindow(p_Var2);\u000a      XMapWindow(uVar9,uVar7);\u000a      if (sampleFont != (XFontStruct *)0x0) {\u000a        XFreeFont(dpy);\u000a      }\u000a      sampleFont = font;\u000a      OwnSelection(sampleText,(XtPointer)0x0,&DAT_00000001);\u000a    }\u000a    FlushXqueue(dpy);\u000a    return;\u000a  }\u000a  SetNoFonts();\u000a  return;\u000a}\u000a\u000a
p626
S'MOV EDX,dword ptr [0x00608aa0]\nTEST EDX,EDX\nJZ 0x004049ea\nPUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RDI,qword ptr [0x00608ab0]\nDEC EDX\nINC RDX\nMOV ESI,0x1\nCALL 0x00401fc0\nMOV R15D,dword ptr [0x00608a70]\nXOR EBX,EBX\nMOV R13,-0x38\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [0x00608a78]\nMOVSXD RCX,EBX\nMOV byte ptr [RAX + RCX*0x1],0x2d\nMOVSXD RAX,dword ptr [0x608bc4 + R13]\nCMP RAX,-0x1\nJZ 0x004047f0\nMOV RCX,qword ptr [0x608b30 + R13 + R13*0x1]\nLEA RAX,[RAX + RAX*0x2]\nSHL RAX,0x4\nLEA RBP,[RCX + RAX*0x1 + 0x10]\nMOV R14,qword ptr [RCX + RAX*0x1 + 0x18]\nTEST R14,R14\nJZ 0x00404800\nMOV RDI,R14\nCALL 0x00401ef0\nMOV R12,RAX\nJMP 0x00404809\nMOV R12D,0x1\nMOV R14D,0x405abd\nJMP 0x00404818\nXOR R12D,R12D\nMOV R14D,0x405b1e\nMOV RDI,qword ptr [0x00608ab0]\nMOV RSI,RBP\nCALL 0x00405230\nINC EBX\nLEA EBP,[R15 + -0x1]\nCMP R12D,EBP\nJL 0x00404850\nMOV RDI,qword ptr [0x00608a78]\nMOV ESI,dword ptr [0x00608a70]\nMOV EAX,0x80\nADD ESI,EAX\nMOV dword ptr [0x00608a70],ESI\nCALL 0x00401ff0\nMOV qword ptr [0x00608a78],RAX\nADD R15D,0x7f\nMOV EBP,R15D\nMOVSXD RBX,EBX\nMOV RDI,qword ptr [0x00608a78]\nADD RDI,RBX\nMOV RSI,R14\nCALL 0x00401e40\nADD EBX,R12D\nSUB EBP,R12D\nADD R13,0x4\nMOV R15D,EBP\nJNZ 0x004047a0\nMOV qword ptr [RSP],0x60752d\nMOV RAX,qword ptr [0x00608a78]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [0x00608a80]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00401ec0\nMOV dword ptr [0x00608b30],0x0\nMOV EAX,dword ptr [0x00608aa0]\nTEST EAX,EAX\nJZ 0x004048d2\nMOV RCX,qword ptr [0x00608ab0]\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RCX],0x0\nJZ 0x004048cb\nINC dword ptr [0x00608b30]\nINC RCX\nDEC EAX\nJNZ 0x004048c0\nCALL 0x004052a0\nMOV R15,qword ptr [0x00608a88]\nMOV RDI,R15\nCALL 0x00402110\nMOV R14,RAX\nMOV RSI,qword ptr [0x00608a78]\nMOV RDI,R14\nCALL 0x00401fd0\nMOV R12,RAX\nTEST R12,R12\nJZ 0x004049ef\nCMP dword ptr [R12 + 0x1c],0x0\nJNZ 0x00404918\nCMP dword ptr [R12 + 0x20],0x0\nJZ 0x00404a10\nMOV RDI,R14\nMOV RSI,R12\nCALL 0x00405330\nXOR ECX,ECX\nCMP AL,0x1\nSETZ CL\nMOV EDX,0x608a48\nMOV EAX,0x608a40\nCMOVZ RAX,RDX\nINC ECX\nMOV RAX,qword ptr [RAX]\nMOV qword ptr [RSP],0x607447\nMOV qword ptr [RSP + 0x8],R12\nMOV EDX,0x1\nCMP ECX,dword ptr [0x006088b0]\nJZ 0x00404980\nMOV qword ptr [RSP + 0x10],0x405950\nMOV EDX,ECX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x20],0x60752d\nMOV qword ptr [RSP + 0x28],RAX\nMOV dword ptr [0x006088b0],ECX\nMOV EDX,0x3\nMOV RDI,qword ptr [0x00608a88]\nMOV RSI,RSP\nCALL 0x00401ec0\nMOV ESI,0x1\nMOV RDI,R15\nCALL 0x00402010\nMOV RDI,R15\nCALL 0x00402110\nMOV RBX,RAX\nMOV RDI,R15\nCALL 0x00401ee0\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x004021f0\nMOV RSI,qword ptr [0x00608b70]\nTEST RSI,RSI\nJZ 0x004049ce\nMOV RDI,R14\nCALL 0x00401e30\nMOV qword ptr [0x00608b70],R12\nMOV RDI,qword ptr [0x00608a88]\nXOR ESI,ESI\nMOV EDX,0x1\nCALL 0x00403d50\nJMP 0x004049f9\nJMP 0x00404070\nXOR ESI,ESI\nMOV RDI,R15\nCALL 0x00402010\nMOV RDI,R14\nCALL 0x004053e0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR ECX,ECX\nMOV EAX,0x608a38\nJMP 0x0040493a\n'
p627
S'8b 15 4a 43 20 00\n85 d2\n0f 84 8c 02 00 00\n55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 8b 3d 3d 43 20 00\nff ca\n48 ff c2\nbe 01 00 00 00\ne8 3e d8 ff ff\n44 8b 3d e7 42 20 00\n31 db\n49 c7 c5 c8 ff ff ff\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 05 d1 42 20 00\n48 63 cb\nc6 04 08 2d\n49 63 85 c4 8b 60 00\n48 83 f8 ff\n74 35\n4b 8b 8c 2d 30 8b 60 00\n48 8d 04 40\n48 c1 e0 04\n48 8d 6c 01 10\n4c 8b 74 01 18\n4d 85 f6\n74 26\n4c 89 f7\ne8 0e d7 ff ff\n49 89 c4\neb 22\n41 bc 01 00 00 00\n41 be bd 5a 40 00\neb 1a\n45 31 e4\n41 be 1e 5b 40 00\n48 8b 3d a0 42 20 00\n48 89 ee\ne8 18 0a 00 00\nff c3\n41 8d 6f ff\n41 39 ec\n7c 2d\n48 8b 3d 4e 42 20 00\n8b 35 40 42 20 00\nb8 80 00 00 00\n01 c6\n89 35 33 42 20 00\ne8 ae d7 ff ff\n48 89 05 2f 42 20 00\n41 83 c7 7f\n44 89 fd\n48 63 db\n48 8b 3d 1e 42 20 00\n48 01 df\n4c 89 f6\ne8 db d5 ff ff\n44 01 e3\n44 29 e5\n49 83 c5 04\n41 89 ef\n0f 85 28 ff ff ff\n48 c7 04 24 2d 75 60 00\n48 8b 05 f1 41 20 00\n48 89 44 24 08\n48 8b 3d ed 41 20 00\n48 89 e6\nba 01 00 00 00\ne8 20 d6 ff ff\nc7 05 86 42 20 00 00 00 00 00\n8b 05 f0 41 20 00\n85 c0\n74 1e\n48 8b 0d f5 41 20 00\n0f 1f 44 00 00\n80 39 00\n74 06\nff 05 65 42 20 00\n48 ff c1\nff c8\n75 ee\ne8 c9 09 00 00\n4c 8b 3d aa 41 20 00\n4c 89 ff\ne8 2a d8 ff ff\n49 89 c6\n48 8b 35 88 41 20 00\n4c 89 f7\ne8 d8 d6 ff ff\n49 89 c4\n4d 85 e4\n0f 84 eb 00 00 00\n41 83 7c 24 1c 00\n75 0c\n41 83 7c 24 20 00\n0f 84 f8 00 00 00\n4c 89 f7\n4c 89 e6\ne8 0d 0a 00 00\n31 c9\n3c 01\n0f 94 c1\nba 48 8a 60 00\nb8 40 8a 60 00\n48 0f 44 c2\nff c1\n48 8b 00\n48 c7 04 24 47 74 60 00\n4c 89 64 24 08\nba 01 00 00 00\n3b 0d 5b 3f 20 00\n74 29\n48 c7 44 24 10 50 59 40 00\n89 ca\n48 89 54 24 18\n48 c7 44 24 20 2d 75 60 00\n48 89 44 24 28\n89 0d 35 3f 20 00\nba 03 00 00 00\n48 8b 3d 01 41 20 00\n48 89 e6\ne8 31 d5 ff ff\nbe 01 00 00 00\n4c 89 ff\ne8 74 d6 ff ff\n4c 89 ff\ne8 6c d7 ff ff\n48 89 c3\n4c 89 ff\ne8 31 d5 ff ff\n48 89 df\n48 89 c6\ne8 36 d8 ff ff\n48 8b 35 af 41 20 00\n48 85 f6\n74 08\n4c 89 f7\ne8 62 d4 ff ff\n4c 89 25 9b 41 20 00\n48 8b 3d ac 40 20 00\n31 f6\nba 01 00 00 00\ne8 68 f3 ff ff\neb 0f\ne9 81 f6 ff ff\n31 f6\n4c 89 ff\ne8 17 d6 ff ff\n4c 89 f7\ne8 df 09 00 00\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n31 c9\nb8 38 8a 60 00\ne9 1e ff ff ff\n'
p628
S'.text:0000000000404750\n.text:0000000000404756\n.text:0000000000404758\n.text:000000000040475e\n.text:000000000040475f\n.text:0000000000404761\n.text:0000000000404763\n.text:0000000000404765\n.text:0000000000404767\n.text:0000000000404768\n.text:000000000040476c\n.text:0000000000404773\n.text:0000000000404775\n.text:0000000000404778\n.text:000000000040477d\n.text:0000000000404782\n.text:0000000000404789\n.text:000000000040478b\n.text:0000000000404792\n.text:00000000004047a0\n.text:00000000004047a7\n.text:00000000004047aa\n.text:00000000004047ae\n.text:00000000004047b5\n.text:00000000004047b9\n.text:00000000004047bb\n.text:00000000004047c3\n.text:00000000004047c7\n.text:00000000004047cb\n.text:00000000004047d0\n.text:00000000004047d5\n.text:00000000004047d8\n.text:00000000004047da\n.text:00000000004047dd\n.text:00000000004047e2\n.text:00000000004047e5\n.text:00000000004047f0\n.text:00000000004047f6\n.text:00000000004047fc\n.text:0000000000404800\n.text:0000000000404803\n.text:0000000000404809\n.text:0000000000404810\n.text:0000000000404813\n.text:0000000000404818\n.text:000000000040481a\n.text:000000000040481e\n.text:0000000000404821\n.text:0000000000404823\n.text:000000000040482a\n.text:0000000000404830\n.text:0000000000404835\n.text:0000000000404837\n.text:000000000040483d\n.text:0000000000404842\n.text:0000000000404849\n.text:000000000040484d\n.text:0000000000404850\n.text:0000000000404853\n.text:000000000040485a\n.text:000000000040485d\n.text:0000000000404860\n.text:0000000000404865\n.text:0000000000404868\n.text:000000000040486b\n.text:000000000040486f\n.text:0000000000404872\n.text:0000000000404878\n.text:0000000000404880\n.text:0000000000404887\n.text:000000000040488c\n.text:0000000000404893\n.text:0000000000404896\n.text:000000000040489b\n.text:00000000004048a0\n.text:00000000004048aa\n.text:00000000004048b0\n.text:00000000004048b2\n.text:00000000004048b4\n.text:00000000004048bb\n.text:00000000004048c0\n.text:00000000004048c3\n.text:00000000004048c5\n.text:00000000004048cb\n.text:00000000004048ce\n.text:00000000004048d0\n.text:00000000004048d2\n.text:00000000004048d7\n.text:00000000004048de\n.text:00000000004048e1\n.text:00000000004048e6\n.text:00000000004048e9\n.text:00000000004048f0\n.text:00000000004048f3\n.text:00000000004048f8\n.text:00000000004048fb\n.text:00000000004048fe\n.text:0000000000404904\n.text:000000000040490a\n.text:000000000040490c\n.text:0000000000404912\n.text:0000000000404918\n.text:000000000040491b\n.text:000000000040491e\n.text:0000000000404923\n.text:0000000000404925\n.text:0000000000404927\n.text:000000000040492a\n.text:000000000040492f\n.text:0000000000404934\n.text:0000000000404938\n.text:000000000040493a\n.text:000000000040493d\n.text:0000000000404945\n.text:000000000040494a\n.text:000000000040494f\n.text:0000000000404955\n.text:0000000000404957\n.text:0000000000404960\n.text:0000000000404962\n.text:0000000000404967\n.text:0000000000404970\n.text:0000000000404975\n.text:000000000040497b\n.text:0000000000404980\n.text:0000000000404987\n.text:000000000040498a\n.text:000000000040498f\n.text:0000000000404994\n.text:0000000000404997\n.text:000000000040499c\n.text:000000000040499f\n.text:00000000004049a4\n.text:00000000004049a7\n.text:00000000004049aa\n.text:00000000004049af\n.text:00000000004049b2\n.text:00000000004049b5\n.text:00000000004049ba\n.text:00000000004049c1\n.text:00000000004049c4\n.text:00000000004049c6\n.text:00000000004049c9\n.text:00000000004049ce\n.text:00000000004049d5\n.text:00000000004049dc\n.text:00000000004049de\n.text:00000000004049e3\n.text:00000000004049e8\n.text:00000000004049ea\n.text:00000000004049ef\n.text:00000000004049f1\n.text:00000000004049f4\n.text:00000000004049f9\n.text:00000000004049fc\n.text:0000000000404a01\n.text:0000000000404a05\n.text:0000000000404a06\n.text:0000000000404a08\n.text:0000000000404a0a\n.text:0000000000404a0c\n.text:0000000000404a0e\n.text:0000000000404a0f\n.text:0000000000404a10\n.text:0000000000404a12\n.text:0000000000404a17\n'
p629
tp630
sS'IsISO10646'
p631
(S'\n__stdcall IsISO10646(Display * dpy, XFontStruct * font)\n'
p632
V\u000aBoolean IsISO10646(Display *dpy,XFontStruct *font)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  char *__s1;\u000a  int iVar3;\u000a  ulong *puVar4;\u000a  \u000a  iVar3 = 0;\u000a  uVar2 = XInternAtom(dpy,"CHARSET_REGISTRY",0);\u000a  if (0 < font->n_properties) {\u000a    puVar4 = &font->properties->card32;\u000a    do {\u000a      if (puVar4[-1] == uVar2) {\u000a        __s1 = (char *)XGetAtomName(dpy,*puVar4);\u000a        iVar1 = strcmp(__s1,"ISO10646");\u000a        if ((iVar1 == 0) || (iVar1 = strcmp(__s1,"iso10646"), iVar1 == 0)) {\u000a          XFree(__s1);\u000a          return 1;\u000a        }\u000a        XFree(__s1);\u000a      }\u000a      iVar3 = iVar3 + 1;\u000a      puVar4 = puVar4 + 2;\u000a    } while (iVar3 < font->n_properties);\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p633
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV R15,RDI\nXOR EBX,EBX\nMOV ESI,0x405ec0\nXOR EDX,EDX\nCALL 0x004020b0\nMOV R12,RAX\nCMP dword ptr [R14 + 0x2c],0x0\nJLE 0x004053c9\nMOV RBP,qword ptr [R14 + 0x30]\nADD RBP,0x8\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP qword ptr [RBP + -0x8],R12\nJNZ 0x004053af\nMOV RSI,qword ptr [RBP]\nMOV RDI,R15\nCALL 0x004020f0\nMOV R13,RAX\nMOV ESI,0x405ed1\nMOV RDI,R13\nCALL 0x00402000\nTEST EAX,EAX\nJZ 0x004053bf\nMOV ESI,0x405eda\nMOV RDI,R13\nCALL 0x00402000\nTEST EAX,EAX\nJZ 0x004053bf\nMOV RDI,R13\nCALL 0x00401f30\nINC EBX\nADD RBP,0x10\nCMP EBX,dword ptr [R14 + 0x2c]\nJL 0x00405370\nXOR EBX,EBX\nJMP 0x004053c9\nMOV RDI,R13\nCALL 0x00401f30\nMOV BL,0x1\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p634
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f6\n49 89 ff\n31 db\nbe c0 5e 40 00\n31 d2\ne8 61 cd ff ff\n49 89 c4\n41 83 7e 2c 00\n7e 70\n49 8b 6e 30\n48 83 c5 08\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 39 65 f8\n75 39\n48 8b 75 00\n4c 89 ff\ne8 6e cd ff ff\n49 89 c5\nbe d1 5e 40 00\n4c 89 ef\ne8 6e cc ff ff\n85 c0\n74 29\nbe da 5e 40 00\n4c 89 ef\ne8 5d cc ff ff\n85 c0\n74 18\n4c 89 ef\ne8 81 cb ff ff\nff c3\n48 83 c5 10\n41 3b 5e 2c\n7c b5\n31 db\neb 0a\n4c 89 ef\ne8 69 cb ff ff\nb3 01\n89 d8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p635
S'.text:0000000000405330\n.text:0000000000405331\n.text:0000000000405333\n.text:0000000000405335\n.text:0000000000405337\n.text:0000000000405339\n.text:000000000040533a\n.text:000000000040533b\n.text:000000000040533e\n.text:0000000000405341\n.text:0000000000405343\n.text:0000000000405348\n.text:000000000040534a\n.text:000000000040534f\n.text:0000000000405352\n.text:0000000000405357\n.text:0000000000405359\n.text:000000000040535d\n.text:0000000000405361\n.text:0000000000405370\n.text:0000000000405374\n.text:0000000000405376\n.text:000000000040537a\n.text:000000000040537d\n.text:0000000000405382\n.text:0000000000405385\n.text:000000000040538a\n.text:000000000040538d\n.text:0000000000405392\n.text:0000000000405394\n.text:0000000000405396\n.text:000000000040539b\n.text:000000000040539e\n.text:00000000004053a3\n.text:00000000004053a5\n.text:00000000004053a7\n.text:00000000004053aa\n.text:00000000004053af\n.text:00000000004053b1\n.text:00000000004053b5\n.text:00000000004053b9\n.text:00000000004053bb\n.text:00000000004053bd\n.text:00000000004053bf\n.text:00000000004053c2\n.text:00000000004053c7\n.text:00000000004053c9\n.text:00000000004053cb\n.text:00000000004053cf\n.text:00000000004053d0\n.text:00000000004053d2\n.text:00000000004053d4\n.text:00000000004053d6\n.text:00000000004053d8\n.text:00000000004053d9\n'
p636
tp637
sS'compute_bitmap_offsets'
p638
(S'\n__stdcall compute_bitmap_offsets(UCSLabelWidget lw)\n'
p639
V\u000avoid compute_bitmap_offsets(UCSLabelWidget lw)\u000a\u000a{\u000a  uint uVar1;\u000a  \u000a  uVar1 = (lw->label).lbm_height;\u000a  if (uVar1 != 0) {\u000a    (lw->label).lbm_y =\u000a         ((uint)(lw->core).height - uVar1) + (uint)(lw->label).internal_height * -2 >> 1;\u000a    return;\u000a  }\u000a  (lw->label).lbm_y = 0;\u000a  return;\u000a}\u000a\u000a
p640
S'MOV ECX,dword ptr [0x194 + RDI]\nTEST ECX,ECX\nJZ 0x00403384\nMOVZX EAX,word ptr [RDI + 0x36]\nMOVZX EDX,word ptr [0x14e + RDI]\nADD EDX,EDX\nSUB EAX,ECX\nSUB EAX,EDX\nSHR EAX,1\nMOV dword ptr [0x18c + RDI],EAX\nRET\nXOR EAX,EAX\nMOV dword ptr [0x18c + RDI],EAX\nRET\n'
p641
S'8b 8f 94 01 00 00\n85 c9\n74 1a\n0f b7 47 36\n0f b7 97 4e 01 00 00\n01 d2\n29 c8\n29 d0\nd1 e8\n89 87 8c 01 00 00\nc3\n31 c0\n89 87 8c 01 00 00\nc3\n'
p642
S'.text:0000000000403360\n.text:0000000000403366\n.text:0000000000403368\n.text:000000000040336a\n.text:000000000040336e\n.text:0000000000403375\n.text:0000000000403377\n.text:0000000000403379\n.text:000000000040337b\n.text:000000000040337d\n.text:0000000000403383\n.text:0000000000403384\n.text:0000000000403386\n.text:000000000040338c\n'
p643
tp644
sS'XtGetSubresources'
p645
(S'\n__stdcall XtGetSubresources()\n'
p646
V\u000avoid XtGetSubresources(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetSubresources_00608088)();\u000a  return;\u000a}\u000a\u000a
p647
S'JMP qword ptr [0x00608088]\n'
p648
S'ff 25 02 62 20 00\n'
p649
S'.plt:0000000000401e80\n'
p650
tp651
sS'strcmp'
p652
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p653
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00608148)();\u000a  return iVar1;\u000a}\u000a\u000a
p654
S'JMP qword ptr [0x00608148]\n'
p655
S'ff 25 42 61 20 00\n'
p656
S'.plt:0000000000402000\n'
p657
tp658
sS'SetValues'
p659
(S'\n__stdcall SetValues(Widget current, Widget request, Widget new, ArgList * args, Cardinal * num_args)\n'
p660
V\u000aBoolean SetValues(Widget current,Widget request,Widget new,ArgList *args,Cardinal *num_args)\u000a\u000a{\u000a  short sVar1;\u000a  uint uVar2;\u000a  String pcVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  bool bVar6;\u000a  bool bVar7;\u000a  bool bVar8;\u000a  char cVar9;\u000a  char cVar10;\u000a  int iVar11;\u000a  size_t sVar12;\u000a  char *__s2;\u000a  byte bVar13;\u000a  short sVar14;\u000a  ulong uVar15;\u000a  bool bVar16;\u000a  Boolean checks [3];\u000a  Position dy;\u000a  Position dx;\u000a  \u000a  bVar4 = false;\u000a  bVar16 = false;\u000a  bVar6 = false;\u000a  if (*num_args != 0) {\u000a    uVar2 = *num_args;\u000a    uVar15 = 0;\u000a    bVar8 = false;\u000a    bVar5 = false;\u000a    bVar7 = false;\u000a    do {\u000a      __s2 = args->name;\u000a      iVar11 = strcmp(XtStrings + 0x50,__s2);\u000a      bVar16 = true;\u000a      if (iVar11 != 0) {\u000a        bVar16 = bVar5;\u000a      }\u000a      iVar11 = strcmp(XtStrings + 0x368,__s2);\u000a      bVar6 = true;\u000a      if (iVar11 != 0) {\u000a        bVar6 = bVar7;\u000a      }\u000a      iVar11 = strcmp(XtStrings + 0xea,args->name);\u000a      bVar4 = true;\u000a      if (iVar11 != 0) {\u000a        bVar4 = bVar8;\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      args = args + 1;\u000a      bVar8 = bVar4;\u000a      bVar5 = bVar16;\u000a      bVar7 = bVar6;\u000a    } while (uVar15 < (ulong)uVar2);\u000a  }\u000a  if (new[1].core.border_pixel == 0) {\u000a    *(String *)&new[1].core.border_pixel = (new->core).name;\u000a  }\u000a  bVar8 = *(char *)((long)&current[1].core.num_popups + 1) !=\u000a          *(char *)((long)&new[1].core.num_popups + 1) || current[1].core.name != new[1].core.name;\u000a  if (current[1].core.accelerators != new[1].core.accelerators) {\u000a    bVar8 = bVar8 || *(char *)&current[1].core.constraints != 0;\u000a  }\u000a  pcVar3 = (String)current[1].core.border_pixel;\u000a  if (pcVar3 == (String)new[1].core.border_pixel) {\u000a    if ((((!bVar8) && (current[1].core.tm.lastEventTime == new[1].core.tm.lastEventTime)) &&\u000a        (*(int *)&current[1].core.border_pixmap == *(int *)&new[1].core.border_pixmap)) &&\u000a       (bVar13 = 1, !bVar16)) goto LAB_00402bbd;\u000a  }\u000a  else {\u000a    if (pcVar3 != (current->core).name) {\u000a      XtFree();\u000a    }\u000a    __s2 = (char *)new[1].core.border_pixel;\u000a    if (__s2 != (new->core).name) {\u000a      if (__s2 == (char *)0x0) {\u000a        __s2 = (char *)0x0;\u000a      }\u000a      else {\u000a        sVar12 = strlen(__s2);\u000a        __s2 = (char *)XtMalloc((ulong)((int)sVar12 + 1));\u000a        __s2 = strcpy(__s2,(char *)new[1].core.border_pixel);\u000a      }\u000a      *(char **)&new[1].core.border_pixel = __s2;\u000a    }\u000a  }\u000a  SetTextWidthAndHeight((UCSLabelWidget)new);\u000a  if (*(char *)&new[1].core.num_popups != 0) {\u000a    if (((current->core).height == (request->core).height) && (!bVar4)) {\u000a      (new->core).height =\u000a           *(short *)((long)&new[1].core.border_pixmap + 6) * 2 + *(short *)&new[1].core.field_0xb6;\u000a    }\u000a    set_bitmap_info((UCSLabelWidget)new);\u000a    if ((current->core).width == (request->core).width) {\u000a      bVar13 = 0;\u000a      sVar14 = 0;\u000a      if (bVar6) goto LAB_00402bbd;\u000a      sVar1 = *(short *)((long)&new[1].core.border_pixmap + 4);\u000a      if (new[1].core.name != (String)0x0) {\u000a        sVar14 = (short)*(undefined4 *)&new[1].core.background_pixmap + sVar1;\u000a      }\u000a      (new->core).width = *(short *)&new[1].core.field_0xb4 + sVar1 * 2 + sVar14;\u000a    }\u000a  }\u000a  bVar13 = 0;\u000aLAB_00402bbd:\u000a  if (((current[1].core.tm.current_state != new[1].core.tm.current_state) ||\u000a      ((current->core).background_pixel != (new->core).background_pixel)) ||\u000a     (bVar4 = false,\u000a     *(long *)(current[1].core.tm.lastEventTime + 8) != *(long *)(new[1].core.tm.lastEventTime + 8))\u000a     ) {\u000a    XtReleaseGC(new,current[1].core.screen);\u000a    XtReleaseGC(new,current[1].core.colormap);\u000a    XmuReleaseStippledPixmap((current->core).screen);\u000a    GetnormalGC((UCSLabelWidget)new);\u000a    GetgrayGC((UCSLabelWidget)new);\u000a    bVar4 = true;\u000a  }\u000a  if ((*(short *)((long)&current[1].core.border_pixmap + 4) !=\u000a       *(short *)((long)&new[1].core.border_pixmap + 4)) ||\u000a     (!(bool)(bVar13 & *(short *)((long)&current[1].core.border_pixmap + 6) ==\u000a                       *(short *)((long)&new[1].core.border_pixmap + 6)))) {\u000a    _Reposition((UCSLabelWidget)new,(Position *)(ulong)(current->core).width,\u000a                (Position *)(ulong)(current->core).height);\u000a  }\u000a  bVar16 = true;\u000a  if ((bool)(bVar13 & !bVar4)) {\u000a    cVar9 = XtIsSensitive(current);\u000a    cVar10 = XtIsSensitive(new);\u000a    bVar16 = cVar9 != cVar10;\u000a  }\u000a  return (Boolean)bVar16;\u000a}\u000a\u000a
p661
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RCX\nMOV RBX,RDX\nMOV R15,RSI\nMOV RBP,RDI\nMOV byte ptr [RSP + 0x2],0x0\nMOV word ptr [RSP],0x0\nCMP dword ptr [R8],0x0\nJZ 0x00402a58\nMOV qword ptr [RSP + 0x8],R15\nMOV qword ptr [RSP + 0x10],RBP\nMOV qword ptr [RSP + 0x18],RBX\nMOV BPL,byte ptr [RSP]\nMOV R12B,byte ptr [RSP + 0x1]\nMOV R14B,byte ptr [RSP + 0x2]\nMOV EAX,dword ptr [R8]\nMOV qword ptr [RSP + 0x20],RAX\nXOR R15D,R15D\nNOP word ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [R13]\nMOV EDI,0x6073d0\nMOV RSI,RBX\nCALL 0x00402000\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x004029f9\nMOV EAX,EBP\nMOV EBP,EAX\nMOV EDI,0x6076e8\nMOV RSI,RBX\nCALL 0x00402000\nTEST EAX,EAX\nMOV BL,0x1\nJZ 0x00402a11\nMOV EBX,R12D\nMOV RSI,qword ptr [R13]\nMOV EDI,0x60746a\nCALL 0x00402000\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00402a28\nMOV EAX,R14D\nINC R15\nADD R13,0x10\nCMP R15,qword ptr [RSP + 0x20]\nMOV R14D,EAX\nMOV R12D,EBX\nMOV ECX,EBP\nJC 0x004029e0\nMOV byte ptr [RSP],CL\nMOV byte ptr [RSP + 0x1],BL\nMOV byte ptr [RSP + 0x2],AL\nMOV RBX,qword ptr [RSP + 0x18]\nMOV RBP,qword ptr [RSP + 0x10]\nMOV R15,qword ptr [RSP + 0x8]\nCMP qword ptr [0x140 + RBX],0x0\nJNZ 0x00402a70\nMOV RAX,qword ptr [0x90 + RBX]\nMOV qword ptr [0x140 + RBX],RAX\nMOV RAX,qword ptr [0x160 + RBP]\nCMP RAX,qword ptr [0x160 + RBX]\nSETNZ CL\nMOV AL,byte ptr [0x159 + RBP]\nCMP AL,byte ptr [0x159 + RBX]\nSETNZ AL\nOR AL,CL\nMOV RCX,qword ptr [0x138 + RBP]\nCMP RCX,qword ptr [0x138 + RBX]\nJZ 0x00402aae\nCMP byte ptr [0xf8 + RBP],0x0\nSETNZ CL\nOR AL,CL\nMOV RDI,qword ptr [0x140 + RBP]\nCMP RDI,qword ptr [0x140 + RBX]\nJZ 0x00402aff\nCMP RDI,qword ptr [0x90 + RBP]\nJZ 0x00402acc\nCALL 0x004020e0\nMOV RDI,qword ptr [0x140 + RBX]\nCMP RDI,qword ptr [0x90 + RBX]\nJZ 0x00402b3a\nTEST RDI,RDI\nJZ 0x00402b31\nCALL 0x00401ef0\nLEA EDI,[RAX + 0x1]\nCALL 0x00401eb0\nMOV RSI,qword ptr [0x140 + RBX]\nMOV RDI,RAX\nCALL 0x00401e40\nJMP 0x00402b33\nTEST AL,AL\nJNZ 0x00402b3a\nMOV RAX,qword ptr [0x130 + RBP]\nCMP RAX,qword ptr [0x130 + RBX]\nJNZ 0x00402b3a\nMOV EAX,dword ptr [0x148 + RBP]\nCMP EAX,dword ptr [0x148 + RBX]\nJNZ 0x00402b3a\nMOV AL,byte ptr [RSP]\nMOV R14B,0x1\nTEST AL,AL\nJZ 0x00402bbd\nJMP 0x00402b3a\nXOR EAX,EAX\nMOV qword ptr [0x140 + RBX],RAX\nMOV RDI,RBX\nCALL 0x00402e90\nCMP byte ptr [0x158 + RBX],0x0\nJZ 0x00402bba\nMOVZX EAX,word ptr [RBP + 0x36]\nCMP AX,word ptr [R15 + 0x36]\nJNZ 0x00402b71\nCMP byte ptr [RSP + 0x2],0x0\nJNZ 0x00402b71\nMOVZX EAX,word ptr [0x14e + RBX]\nADD EAX,EAX\nADD AX,word ptr [0x186 + RBX]\nMOV word ptr [RBX + 0x36],AX\nMOV RDI,RBX\nCALL 0x00403210\nMOVZX EAX,word ptr [RBP + 0x34]\nCMP AX,word ptr [R15 + 0x34]\nJNZ 0x00402bba\nXOR R14D,R14D\nCMP byte ptr [RSP + 0x1],0x0\nJNZ 0x00402bbd\nMOVZX EAX,word ptr [0x184 + RBX]\nCMP qword ptr [0x160 + RBX],0x0\nMOVZX ECX,word ptr [0x14c + RBX]\nJZ 0x00402bb0\nMOV R14D,dword ptr [0x190 + RBX]\nADD R14D,ECX\nLEA EAX,[RAX + RCX*0x2]\nADD EAX,R14D\nMOV word ptr [RBX + 0x34],AX\nXOR R14D,R14D\nMOV RAX,qword ptr [0x128 + RBP]\nCMP RAX,qword ptr [0x128 + RBX]\nJNZ 0x00402bf8\nMOV RAX,qword ptr [0xb8 + RBP]\nCMP RAX,qword ptr [0xb8 + RBX]\nJNZ 0x00402bf8\nMOV RAX,qword ptr [0x130 + RBP]\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RCX,qword ptr [0x130 + RBX]\nXOR R15D,R15D\nCMP RAX,qword ptr [RCX + 0x8]\nJZ 0x00402c3f\nMOV RSI,qword ptr [0x168 + RBP]\nMOV RDI,RBX\nCALL 0x00401dd0\nMOV RSI,qword ptr [0x170 + RBP]\nMOV RDI,RBX\nCALL 0x00401dd0\nMOV RDI,qword ptr [0x98 + RBP]\nMOV RSI,qword ptr [0x178 + RBP]\nCALL 0x00402020\nMOV RDI,RBX\nCALL 0x00402d40\nMOV RDI,RBX\nCALL 0x00402dd0\nMOV R15D,0x1\nMOVZX EAX,word ptr [0x14c + RBP]\nCMP AX,word ptr [0x14c + RBX]\nJNZ 0x00402c65\nMOVZX EAX,word ptr [0x14e + RBP]\nCMP AX,word ptr [0x14e + RBX]\nSETZ AL\nTEST R14B,AL\nJNZ 0x00402c7f\nMOVZX EDX,word ptr [RBP + 0x36]\nMOVZX ESI,word ptr [RBP + 0x34]\nLEA RCX,[RSP + 0x6]\nLEA R8,[RSP + 0x4]\nMOV RDI,RBX\nCALL 0x004034a0\nTEST R15D,R15D\nSETZ AL\nAND R14B,AL\nMOV AL,0x1\nCMP R14B,0x1\nJNZ 0x00402ca8\nMOV RDI,RBP\nCALL 0x00401f90\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x00401f90\nCMP BPL,AL\nSETNZ AL\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p662
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 cd\n48 89 d3\n49 89 f7\n48 89 fd\nc6 44 24 02 00\n66 c7 04 24 00 00\n41 83 38 00\n0f 84 a9 00 00 00\n4c 89 7c 24 08\n48 89 6c 24 10\n48 89 5c 24 18\n40 8a 2c 24\n44 8a 64 24 01\n44 8a 74 24 02\n41 8b 00\n48 89 44 24 20\n45 31 ff\n66 0f 1f 84 00 00 00 00 00\n49 8b 5d 00\nbf d0 73 60 00\n48 89 de\ne8 0f f6 ff ff\n85 c0\nb0 01\n74 02\n89 e8\n89 c5\nbf e8 76 60 00\n48 89 de\ne8 f8 f5 ff ff\n85 c0\nb3 01\n74 03\n44 89 e3\n49 8b 75 00\nbf 6a 74 60 00\ne8 e1 f5 ff ff\n85 c0\nb0 01\n74 03\n44 89 f0\n49 ff c7\n49 83 c5 10\n4c 3b 7c 24 20\n41 89 c6\n41 89 dc\n89 e9\n72 a2\n88 0c 24\n88 5c 24 01\n88 44 24 02\n48 8b 5c 24 18\n48 8b 6c 24 10\n4c 8b 7c 24 08\n48 83 bb 40 01 00 00 00\n75 0e\n48 8b 83 90 00 00 00\n48 89 83 40 01 00 00\n48 8b 85 60 01 00 00\n48 3b 83 60 01 00 00\n0f 95 c1\n8a 85 59 01 00 00\n3a 83 59 01 00 00\n0f 95 c0\n08 c8\n48 8b 8d 38 01 00 00\n48 3b 8b 38 01 00 00\n74 0c\n80 bd f8 00 00 00 00\n0f 95 c1\n08 c8\n48 8b bd 40 01 00 00\n48 3b bb 40 01 00 00\n74 41\n48 3b bd 90 00 00 00\n74 05\ne8 14 f6 ff ff\n48 8b bb 40 01 00 00\n48 3b bb 90 00 00 00\n74 5e\n48 85 ff\n74 50\ne8 0a f4 ff ff\n8d 78 01\ne8 c2 f3 ff ff\n48 8b b3 40 01 00 00\n48 89 c7\ne8 43 f3 ff ff\neb 34\n84 c0\n75 37\n48 8b 85 30 01 00 00\n48 3b 83 30 01 00 00\n75 27\n8b 85 48 01 00 00\n3b 83 48 01 00 00\n75 19\n8a 04 24\n41 b6 01\n84 c0\n0f 84 8e 00 00 00\neb 09\n31 c0\n48 89 83 40 01 00 00\n48 89 df\ne8 4e 03 00 00\n80 bb 58 01 00 00 00\n74 6f\n0f b7 45 36\n66 41 3b 47 36\n75 1b\n80 7c 24 02 00\n75 14\n0f b7 83 4e 01 00 00\n01 c0\n66 03 83 86 01 00 00\n66 89 43 36\n48 89 df\ne8 97 06 00 00\n0f b7 45 34\n66 41 3b 47 34\n75 36\n45 31 f6\n80 7c 24 01 00\n75 2f\n0f b7 83 84 01 00 00\n48 83 bb 60 01 00 00 00\n0f b7 8b 4c 01 00 00\n74 0a\n44 8b b3 90 01 00 00\n41 01 ce\n8d 04 48\n44 01 f0\n66 89 43 34\n45 31 f6\n48 8b 85 28 01 00 00\n48 3b 83 28 01 00 00\n75 2b\n48 8b 85 b8 00 00 00\n48 3b 83 b8 00 00 00\n75 1b\n48 8b 85 30 01 00 00\n48 8b 40 08\n48 8b 8b 30 01 00 00\n45 31 ff\n48 3b 41 08\n74 47\n48 8b b5 68 01 00 00\n48 89 df\ne8 c9 f1 ff ff\n48 8b b5 70 01 00 00\n48 89 df\ne8 ba f1 ff ff\n48 8b bd 98 00 00 00\n48 8b b5 78 01 00 00\ne8 f7 f3 ff ff\n48 89 df\ne8 0f 01 00 00\n48 89 df\ne8 97 01 00 00\n41 bf 01 00 00 00\n0f b7 85 4c 01 00 00\n66 3b 83 4c 01 00 00\n75 16\n0f b7 85 4e 01 00 00\n66 3b 83 4e 01 00 00\n0f 94 c0\n41 84 c6\n75 1a\n0f b7 55 36\n0f b7 75 34\n48 8d 4c 24 06\n4c 8d 44 24 04\n48 89 df\ne8 21 08 00 00\n45 85 ff\n0f 94 c0\n41 20 c6\nb0 01\n41 80 fe 01\n75 18\n48 89 ef\ne8 f8 f2 ff ff\n89 c5\n48 89 df\ne8 ee f2 ff ff\n40 38 c5\n0f 95 c0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p663
S'.text:0000000000402980\n.text:0000000000402981\n.text:0000000000402983\n.text:0000000000402985\n.text:0000000000402987\n.text:0000000000402989\n.text:000000000040298a\n.text:000000000040298e\n.text:0000000000402991\n.text:0000000000402994\n.text:0000000000402997\n.text:000000000040299a\n.text:000000000040299f\n.text:00000000004029a5\n.text:00000000004029a9\n.text:00000000004029af\n.text:00000000004029b4\n.text:00000000004029b9\n.text:00000000004029be\n.text:00000000004029c2\n.text:00000000004029c7\n.text:00000000004029cc\n.text:00000000004029cf\n.text:00000000004029d4\n.text:00000000004029d7\n.text:00000000004029e0\n.text:00000000004029e4\n.text:00000000004029e9\n.text:00000000004029ec\n.text:00000000004029f1\n.text:00000000004029f3\n.text:00000000004029f5\n.text:00000000004029f7\n.text:00000000004029f9\n.text:00000000004029fb\n.text:0000000000402a00\n.text:0000000000402a03\n.text:0000000000402a08\n.text:0000000000402a0a\n.text:0000000000402a0c\n.text:0000000000402a0e\n.text:0000000000402a11\n.text:0000000000402a15\n.text:0000000000402a1a\n.text:0000000000402a1f\n.text:0000000000402a21\n.text:0000000000402a23\n.text:0000000000402a25\n.text:0000000000402a28\n.text:0000000000402a2b\n.text:0000000000402a2f\n.text:0000000000402a34\n.text:0000000000402a37\n.text:0000000000402a3a\n.text:0000000000402a3c\n.text:0000000000402a3e\n.text:0000000000402a41\n.text:0000000000402a45\n.text:0000000000402a49\n.text:0000000000402a4e\n.text:0000000000402a53\n.text:0000000000402a58\n.text:0000000000402a60\n.text:0000000000402a62\n.text:0000000000402a69\n.text:0000000000402a70\n.text:0000000000402a77\n.text:0000000000402a7e\n.text:0000000000402a81\n.text:0000000000402a87\n.text:0000000000402a8d\n.text:0000000000402a90\n.text:0000000000402a92\n.text:0000000000402a99\n.text:0000000000402aa0\n.text:0000000000402aa2\n.text:0000000000402aa9\n.text:0000000000402aac\n.text:0000000000402aae\n.text:0000000000402ab5\n.text:0000000000402abc\n.text:0000000000402abe\n.text:0000000000402ac5\n.text:0000000000402ac7\n.text:0000000000402acc\n.text:0000000000402ad3\n.text:0000000000402ada\n.text:0000000000402adc\n.text:0000000000402adf\n.text:0000000000402ae1\n.text:0000000000402ae6\n.text:0000000000402ae9\n.text:0000000000402aee\n.text:0000000000402af5\n.text:0000000000402af8\n.text:0000000000402afd\n.text:0000000000402aff\n.text:0000000000402b01\n.text:0000000000402b03\n.text:0000000000402b0a\n.text:0000000000402b11\n.text:0000000000402b13\n.text:0000000000402b19\n.text:0000000000402b1f\n.text:0000000000402b21\n.text:0000000000402b24\n.text:0000000000402b27\n.text:0000000000402b29\n.text:0000000000402b2f\n.text:0000000000402b31\n.text:0000000000402b33\n.text:0000000000402b3a\n.text:0000000000402b3d\n.text:0000000000402b42\n.text:0000000000402b49\n.text:0000000000402b4b\n.text:0000000000402b4f\n.text:0000000000402b54\n.text:0000000000402b56\n.text:0000000000402b5b\n.text:0000000000402b5d\n.text:0000000000402b64\n.text:0000000000402b66\n.text:0000000000402b6d\n.text:0000000000402b71\n.text:0000000000402b74\n.text:0000000000402b79\n.text:0000000000402b7d\n.text:0000000000402b82\n.text:0000000000402b84\n.text:0000000000402b87\n.text:0000000000402b8c\n.text:0000000000402b8e\n.text:0000000000402b95\n.text:0000000000402b9d\n.text:0000000000402ba4\n.text:0000000000402ba6\n.text:0000000000402bad\n.text:0000000000402bb0\n.text:0000000000402bb3\n.text:0000000000402bb6\n.text:0000000000402bba\n.text:0000000000402bbd\n.text:0000000000402bc4\n.text:0000000000402bcb\n.text:0000000000402bcd\n.text:0000000000402bd4\n.text:0000000000402bdb\n.text:0000000000402bdd\n.text:0000000000402be4\n.text:0000000000402be8\n.text:0000000000402bef\n.text:0000000000402bf2\n.text:0000000000402bf6\n.text:0000000000402bf8\n.text:0000000000402bff\n.text:0000000000402c02\n.text:0000000000402c07\n.text:0000000000402c0e\n.text:0000000000402c11\n.text:0000000000402c16\n.text:0000000000402c1d\n.text:0000000000402c24\n.text:0000000000402c29\n.text:0000000000402c2c\n.text:0000000000402c31\n.text:0000000000402c34\n.text:0000000000402c39\n.text:0000000000402c3f\n.text:0000000000402c46\n.text:0000000000402c4d\n.text:0000000000402c4f\n.text:0000000000402c56\n.text:0000000000402c5d\n.text:0000000000402c60\n.text:0000000000402c63\n.text:0000000000402c65\n.text:0000000000402c69\n.text:0000000000402c6d\n.text:0000000000402c72\n.text:0000000000402c77\n.text:0000000000402c7a\n.text:0000000000402c7f\n.text:0000000000402c82\n.text:0000000000402c85\n.text:0000000000402c88\n.text:0000000000402c8a\n.text:0000000000402c8e\n.text:0000000000402c90\n.text:0000000000402c93\n.text:0000000000402c98\n.text:0000000000402c9a\n.text:0000000000402c9d\n.text:0000000000402ca2\n.text:0000000000402ca5\n.text:0000000000402ca8\n.text:0000000000402cac\n.text:0000000000402cad\n.text:0000000000402caf\n.text:0000000000402cb1\n.text:0000000000402cb3\n.text:0000000000402cb5\n.text:0000000000402cb6\n'
p664
tp665
sS'_XawLabelDrawUCS'
p666
(S'\n__stdcall _XawLabelDrawUCS(Display * dpy, Drawable d, GC gc, char * str)\n'
p667
V\u000avoid _XawLabelDrawUCS(Display *dpy,Drawable d,GC gc,char *str)\u000a\u000a{\u000a  XChar2b *pXVar1;\u000a  ushort uVar2;\u000a  uint uVar3;\u000a  long lVar4;\u000a  char *pcVar5;\u000a  char *in_R9;\u000a  int in_stack_00000008;\u000a  \u000a  if (buf2blen < in_stack_00000008) {\u000a    str = (char *)((ulong)str & 0xffffffff);\u000a    buf2b = (XChar2b *)XtRealloc(buf2b);\u000a    buf2blen = in_stack_00000008;\u000a  }\u000a  if (0 < in_stack_00000008) {\u000a    pcVar5 = in_R9 + (long)in_stack_00000008;\u000a    pXVar1 = buf2b;\u000a    do {\u000a      uVar3 = SEXT14(*in_R9);\u000a      uVar2 = SEXT12(*in_R9);\u000a      if ((int)uVar3 < 0) {\u000a        if ((uVar3 & 0x20) == 0) {\u000a          uVar2 = (ushort)((uVar3 & 0x1f) << 6) | (ushort)(byte)in_R9[1] & 0x3f;\u000a          lVar4 = 2;\u000a        }\u000a        else {\u000a          if ((uVar3 & 0x10) != 0) {\u000a            uVar2 = 0x3f;\u000a            goto LAB_00403418;\u000a          }\u000a          uVar2 = (ushort)(byte)in_R9[2] & 0x3f |\u000a                  (ushort)(((uint)(byte)in_R9[1] & 0x3f) << 6) | (ushort)((uVar3 & 0xf) << 0xc);\u000a          lVar4 = 3;\u000a        }\u000a      }\u000a      else {\u000aLAB_00403418:\u000a        lVar4 = 1;\u000a      }\u000a      in_R9 = in_R9 + lVar4;\u000a      pXVar1->byte1 = (uchar)(uVar2 >> 8);\u000a      pXVar1->byte2 = (uchar)uVar2;\u000a      pXVar1 = pXVar1 + 1;\u000a    } while (in_R9 < pcVar5);\u000a  }\u000a  XDrawString16(dpy,d,gc,str);\u000a  return;\u000a}\u000a\u000a
p668
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV RBP,R9\nMOV R13,RSI\nMOV R11,RDI\nMOV R14D,dword ptr [RSP + 0x50]\nCMP dword ptr [0x006089f0],R14D\nJGE 0x004033ef\nMOV RDI,qword ptr [0x006089f8]\nLEA ESI,[R14 + R14*0x1]\nMOV R15D,R8D\nMOV R12D,ECX\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x10],R11\nCALL 0x00401ff0\nMOV R11,qword ptr [RSP + 0x10]\nMOV RDX,RBX\nMOV ECX,R12D\nMOV R8D,R15D\nMOV qword ptr [0x006089f8],RAX\nMOV dword ptr [0x006089f0],R14D\nMOV RAX,qword ptr [0x006089f8]\nTEST R14D,R14D\nJLE 0x00403471\nMOVSXD RDI,R14D\nADD RDI,RBP\nJMP 0x00403410\nMOV EBX,0x3f\nJMP 0x00403418\nMOVSX EBX,byte ptr [RBP]\nTEST EBX,EBX\nJS 0x00403420\nMOV ESI,0x1\nJMP 0x00403460\nTEST BL,0x20\nJNZ 0x0040343b\nAND EBX,0x1f\nSHL EBX,0x6\nMOVZX ESI,byte ptr [RBP + 0x1]\nAND ESI,0x3f\nOR EBX,ESI\nMOV ESI,0x2\nJMP 0x00403460\nTEST BL,0x10\nJNZ 0x00403403\nAND EBX,0xf\nSHL EBX,0xc\nMOVZX ESI,byte ptr [RBP + 0x1]\nAND ESI,0x3f\nSHL ESI,0x6\nOR ESI,EBX\nMOVZX EBX,byte ptr [RBP + 0x2]\nAND EBX,0x3f\nOR EBX,ESI\nMOV ESI,0x3\nADD RBP,RSI\nMOV byte ptr [RAX],BH\nMOV byte ptr [RAX + 0x1],BL\nADD RAX,0x2\nCMP RBP,RDI\nJC 0x00403410\nMOV R9,qword ptr [0x006089f8]\nSUB RAX,R9\nSHR RAX,1\nMOV dword ptr [RSP],EAX\nMOV RDI,R11\nMOV RSI,R13\nCALL 0x004021b0\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p669
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n4c 89 cd\n49 89 f5\n49 89 fb\n44 8b 74 24 50\n44 39 35 3d 56 20 00\n7d 3a\n48 8b 3d 3c 56 20 00\n43 8d 34 36\n45 89 c7\n41 89 cc\n48 89 d3\n4c 89 5c 24 10\ne8 1d ec ff ff\n4c 8b 5c 24 10\n48 89 da\n44 89 e1\n45 89 f8\n48 89 05 10 56 20 00\n44 89 35 01 56 20 00\n48 8b 05 02 56 20 00\n45 85 f6\n7e 76\n49 63 fe\n48 01 ef\neb 0d\nbb 3f 00 00 00\neb 0e\n0f be 5d 00\n85 db\n78 08\nbe 01 00 00 00\neb 41\nf6 c3 20\n75 16\n83 e3 1f\nc1 e3 06\n0f b6 75 01\n83 e6 3f\n09 f3\nbe 02 00 00 00\neb 25\nf6 c3 10\n75 c3\n83 e3 0f\nc1 e3 0c\n0f b6 75 01\n83 e6 3f\nc1 e6 06\n09 de\n0f b6 5d 02\n83 e3 3f\n09 f3\nbe 03 00 00 00\n48 01 f5\n88 38\n88 58 01\n48 83 c0 02\n48 39 fd\n72 9f\n4c 8b 0d 80 55 20 00\n4c 29 c8\n48 d1 e8\n89 04 24\n4c 89 df\n4c 89 ee\ne8 24 ed ff ff\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p670
S'.text:0000000000403390\n.text:0000000000403391\n.text:0000000000403393\n.text:0000000000403395\n.text:0000000000403397\n.text:0000000000403399\n.text:000000000040339a\n.text:000000000040339e\n.text:00000000004033a1\n.text:00000000004033a4\n.text:00000000004033a7\n.text:00000000004033ac\n.text:00000000004033b3\n.text:00000000004033b5\n.text:00000000004033bc\n.text:00000000004033c0\n.text:00000000004033c3\n.text:00000000004033c6\n.text:00000000004033c9\n.text:00000000004033ce\n.text:00000000004033d3\n.text:00000000004033d8\n.text:00000000004033db\n.text:00000000004033de\n.text:00000000004033e1\n.text:00000000004033e8\n.text:00000000004033ef\n.text:00000000004033f6\n.text:00000000004033f9\n.text:00000000004033fb\n.text:00000000004033fe\n.text:0000000000403401\n.text:0000000000403403\n.text:0000000000403408\n.text:0000000000403410\n.text:0000000000403414\n.text:0000000000403416\n.text:0000000000403418\n.text:000000000040341d\n.text:0000000000403420\n.text:0000000000403423\n.text:0000000000403425\n.text:0000000000403428\n.text:000000000040342b\n.text:000000000040342f\n.text:0000000000403432\n.text:0000000000403434\n.text:0000000000403439\n.text:000000000040343b\n.text:000000000040343e\n.text:0000000000403440\n.text:0000000000403443\n.text:0000000000403446\n.text:000000000040344a\n.text:000000000040344d\n.text:0000000000403450\n.text:0000000000403452\n.text:0000000000403456\n.text:0000000000403459\n.text:000000000040345b\n.text:0000000000403460\n.text:0000000000403463\n.text:0000000000403465\n.text:0000000000403468\n.text:000000000040346c\n.text:000000000040346f\n.text:0000000000403471\n.text:0000000000403478\n.text:000000000040347b\n.text:000000000040347e\n.text:0000000000403481\n.text:0000000000403484\n.text:0000000000403487\n.text:000000000040348c\n.text:0000000000403490\n.text:0000000000403491\n.text:0000000000403493\n.text:0000000000403495\n.text:0000000000403497\n.text:0000000000403499\n.text:000000000040349a\n'
p671
tp672
sS'XMapWindow'
p673
(S'\n__stdcall XMapWindow()\n'
p674
V\u000avoid XMapWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XMapWindow_00608240)();\u000a  return;\u000a}\u000a\u000a
p675
S'JMP qword ptr [0x00608240]\n'
p676
S'ff 25 4a 60 20 00\n'
p677
S'.plt:00000000004021f0\n'
p678
tp679
sS'XFreeFontNames'
p680
(S'\n__stdcall XFreeFontNames()\n'
p681
V\u000a/* WARNING: Switch with 1 destination removed at 0x00401da0 */\u000a\u000avoid XFreeFontNames(void)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p682
S'JMP qword ptr [0x00608018]\n'
p683
S'ff 25 72 62 20 00\n'
p684
S'.plt:0000000000401da0\n'
p685
tp686
sS'NumericSort'
p687
(S'\n__stdcall NumericSort(void * fval1, void * fval2)\n'
p688
V\u000aint NumericSort(void *fval1,void *fval2)\u000a\u000a{\u000a  char *__nptr;\u000a  int iVar1;\u000a  int iVar2;\u000a  \u000a  __nptr = *(char **)((long)fval1 + 8);\u000a  if (((__nptr == (char *)0x0) || (*__nptr != '*')) || (__nptr[1] != 0)) {\u000a    __nptr = *(char **)((long)fval2 + 8);\u000a    if (((__nptr == (char *)0x0) || (*__nptr != '*')) || (__nptr[1] != 0)) {\u000a      if (*(char **)((long)fval1 + 8) == (char *)0x0) goto LAB_00404d51;\u000a      __nptr = *(char **)((long)fval2 + 8);\u000a      if (__nptr != (char *)0x0) {\u000a        iVar1 = atoi(*(char **)((long)fval1 + 8));\u000a        iVar2 = atoi(__nptr);\u000a        return iVar1 - iVar2;\u000a      }\u000a    }\u000a    iVar1 = 1;\u000a  }\u000a  else {\u000aLAB_00404d51:\u000a    iVar1 = -1;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p689
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RAX,qword ptr [RDI + 0x8]\nTEST RAX,RAX\nJZ 0x00404d18\nCMP byte ptr [RAX],0x2a\nJNZ 0x00404d18\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x00404d51\nMOV RAX,qword ptr [RSI + 0x8]\nTEST RAX,RAX\nJZ 0x00404d2c\nCMP byte ptr [RAX],0x2a\nJNZ 0x00404d2c\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x00404d58\nMOV RDI,qword ptr [RDI + 0x8]\nTEST RDI,RDI\nJZ 0x00404d51\nMOV R14,qword ptr [RSI + 0x8]\nTEST R14,R14\nJZ 0x00404d58\nCALL 0x00402230\nMOV EBX,EAX\nMOV RDI,R14\nCALL 0x00402230\nSUB EBX,EAX\nJMP 0x00404d5d\nMOV EBX,0xffffffff\nJMP 0x00404d5d\nMOV EBX,0x1\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p690
S'41 56\n53\n50\n48 8b 47 08\n48 85 c0\n74 0b\n80 38 2a\n75 06\n80 78 01 00\n74 39\n48 8b 46 08\n48 85 c0\n74 0b\n80 38 2a\n75 06\n80 78 01 00\n74 2c\n48 8b 7f 08\n48 85 ff\n74 1c\n4c 8b 76 08\n4d 85 f6\n74 1a\ne8 ed d4 ff ff\n89 c3\n4c 89 f7\ne8 e3 d4 ff ff\n29 c3\neb 0c\nbb ff ff ff ff\neb 05\nbb 01 00 00 00\n89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p691
S'.text:0000000000404d00\n.text:0000000000404d02\n.text:0000000000404d03\n.text:0000000000404d04\n.text:0000000000404d08\n.text:0000000000404d0b\n.text:0000000000404d0d\n.text:0000000000404d10\n.text:0000000000404d12\n.text:0000000000404d16\n.text:0000000000404d18\n.text:0000000000404d1c\n.text:0000000000404d1f\n.text:0000000000404d21\n.text:0000000000404d24\n.text:0000000000404d26\n.text:0000000000404d2a\n.text:0000000000404d2c\n.text:0000000000404d30\n.text:0000000000404d33\n.text:0000000000404d35\n.text:0000000000404d39\n.text:0000000000404d3c\n.text:0000000000404d3e\n.text:0000000000404d43\n.text:0000000000404d45\n.text:0000000000404d48\n.text:0000000000404d4d\n.text:0000000000404d4f\n.text:0000000000404d51\n.text:0000000000404d56\n.text:0000000000404d58\n.text:0000000000404d5d\n.text:0000000000404d5f\n.text:0000000000404d63\n.text:0000000000404d64\n.text:0000000000404d66\n'
p692
tp693
sS'XtUnmanageChildren'
p694
(S'\n__stdcall XtUnmanageChildren()\n'
p695
V\u000avoid XtUnmanageChildren(void)\u000a\u000a{\u000a  (*(code *)PTR_XtUnmanageChildren_00608118)();\u000a  return;\u000a}\u000a\u000a
p696
S'JMP qword ptr [0x00608118]\n'
p697
S'ff 25 72 61 20 00\n'
p698
S'.plt:0000000000401fa0\n'
p699
tp700
sS'memset'
p701
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p702
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_00608128)();\u000a  return pvVar1;\u000a}\u000a\u000a
p703
S'JMP qword ptr [0x00608128]\n'
p704
S'ff 25 62 61 20 00\n'
p705
S'.plt:0000000000401fc0\n'
p706
tp707
sS'__libc_csu_fini'
p708
(S'\n__stdcall __libc_csu_fini()\n'
p709
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p710
S'RET\n'
p711
S'f3 c3\n'
p712
S'.text:0000000000405900\n'
p713
tp714
sS'_XawLabelWidthUCS'
p715
(S'\n__stdcall _XawLabelWidthUCS(XFontStruct * fs, char * str)\n'
p716
V\u000aint _XawLabelWidthUCS(XFontStruct *fs,char *str)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  ushort uVar3;\u000a  uint uVar4;\u000a  int in_EDX;\u000a  XChar2b *pXVar5;\u000a  long lVar6;\u000a  \u000a  if (buf2blen < in_EDX) {\u000a    buf2b = (XChar2b *)XtRealloc(buf2b);\u000a    buf2blen = in_EDX;\u000a  }\u000a  pXVar5 = buf2b;\u000a  if (0 < in_EDX) {\u000a    pcVar2 = str + (long)in_EDX;\u000a    pXVar5 = buf2b;\u000a    do {\u000a      uVar4 = SEXT14(*str);\u000a      uVar3 = SEXT12(*str);\u000a      if ((int)uVar4 < 0) {\u000a        if ((uVar4 & 0x20) == 0) {\u000a          uVar3 = (ushort)((uVar4 & 0x1f) << 6) | (ushort)(byte)str[1] & 0x3f;\u000a          lVar6 = 2;\u000a        }\u000a        else {\u000a          if ((uVar4 & 0x10) != 0) {\u000a            uVar3 = 0x3f;\u000a            goto LAB_004032e7;\u000a          }\u000a          uVar3 = (ushort)(byte)str[2] & 0x3f |\u000a                  (ushort)(((uint)(byte)str[1] & 0x3f) << 6) | (ushort)((uVar4 & 0xf) << 0xc);\u000a          lVar6 = 3;\u000a        }\u000a      }\u000a      else {\u000aLAB_004032e7:\u000a        lVar6 = 1;\u000a      }\u000a      str = str + lVar6;\u000a      pXVar5->byte1 = (uchar)(uVar3 >> 8);\u000a      pXVar5->byte2 = (uchar)uVar3;\u000a      pXVar5 = pXVar5 + 1;\u000a    } while (str < pcVar2);\u000a  }\u000a  iVar1 = XTextWidth16(fs,buf2b,(ulong)((long)pXVar5 - (long)buf2b) >> 1);\u000a  return iVar1;\u000a}\u000a\u000a
p717
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15D,EDX\nMOV RBX,RSI\nMOV R14,RDI\nCMP dword ptr [0x006089f0],R15D\nJGE 0x004032c5\nMOV RDI,qword ptr [0x006089f8]\nLEA ESI,[R15 + R15*0x1]\nCALL 0x00401ff0\nMOV qword ptr [0x006089f8],RAX\nMOV dword ptr [0x006089f0],R15D\nMOV RDX,qword ptr [0x006089f8]\nTEST R15D,R15D\nJLE 0x00403341\nMOVSXD RAX,R15D\nADD RAX,RBX\nJMP 0x004032e0\nMOV ECX,0x3f\nJMP 0x004032e7\nMOVSX ECX,byte ptr [RBX]\nTEST ECX,ECX\nJS 0x004032f0\nMOV ESI,0x1\nJMP 0x00403330\nTEST CL,0x20\nJNZ 0x0040330b\nAND ECX,0x1f\nSHL ECX,0x6\nMOVZX ESI,byte ptr [RBX + 0x1]\nAND ESI,0x3f\nOR ECX,ESI\nMOV ESI,0x2\nJMP 0x00403330\nTEST CL,0x10\nJNZ 0x004032d9\nAND ECX,0xf\nSHL ECX,0xc\nMOVZX ESI,byte ptr [RBX + 0x1]\nAND ESI,0x3f\nSHL ESI,0x6\nOR ESI,ECX\nMOVZX ECX,byte ptr [RBX + 0x2]\nAND ECX,0x3f\nOR ECX,ESI\nMOV ESI,0x3\nADD RBX,RSI\nMOV byte ptr [RDX],CH\nMOV byte ptr [RDX + 0x1],CL\nADD RDX,0x2\nCMP RBX,RAX\nJC 0x004032e0\nMOV RSI,qword ptr [0x006089f8]\nSUB RDX,RSI\nSHR RDX,1\nMOV RDI,R14\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00401f80\n'
p718
S'41 57\n41 56\n53\n41 89 d7\n48 89 f3\n49 89 fe\n44 39 3d 4b 57 20 00\n7d 1e\n48 8b 3d 4a 57 20 00\n43 8d 34 3f\ne8 39 ed ff ff\n48 89 05 3a 57 20 00\n44 89 3d 2b 57 20 00\n48 8b 15 2c 57 20 00\n45 85 ff\n7e 70\n49 63 c7\n48 01 d8\neb 07\nb9 3f 00 00 00\neb 07\n0f be 0b\n85 c9\n78 09\nbe 01 00 00 00\neb 42\nf6 c1 20\n75 16\n83 e1 1f\nc1 e1 06\n0f b6 73 01\n83 e6 3f\n09 f1\nbe 02 00 00 00\neb 25\nf6 c1 10\n75 c9\n83 e1 0f\nc1 e1 0c\n0f b6 73 01\n83 e6 3f\nc1 e6 06\n09 ce\n0f b6 4b 02\n83 e1 3f\n09 f1\nbe 03 00 00 00\n48 01 f3\n88 2a\n88 4a 01\n48 83 c2 02\n48 39 c3\n72 9f\n48 8b 35 b0 56 20 00\n48 29 f2\n48 d1 ea\n4c 89 f7\n5b\n41 5e\n41 5f\ne9 25 ec ff ff\n'
p719
S'.text:0000000000403290\n.text:0000000000403292\n.text:0000000000403294\n.text:0000000000403295\n.text:0000000000403298\n.text:000000000040329b\n.text:000000000040329e\n.text:00000000004032a5\n.text:00000000004032a7\n.text:00000000004032ae\n.text:00000000004032b2\n.text:00000000004032b7\n.text:00000000004032be\n.text:00000000004032c5\n.text:00000000004032cc\n.text:00000000004032cf\n.text:00000000004032d1\n.text:00000000004032d4\n.text:00000000004032d7\n.text:00000000004032d9\n.text:00000000004032de\n.text:00000000004032e0\n.text:00000000004032e3\n.text:00000000004032e5\n.text:00000000004032e7\n.text:00000000004032ec\n.text:00000000004032f0\n.text:00000000004032f3\n.text:00000000004032f5\n.text:00000000004032f8\n.text:00000000004032fb\n.text:00000000004032ff\n.text:0000000000403302\n.text:0000000000403304\n.text:0000000000403309\n.text:000000000040330b\n.text:000000000040330e\n.text:0000000000403310\n.text:0000000000403313\n.text:0000000000403316\n.text:000000000040331a\n.text:000000000040331d\n.text:0000000000403320\n.text:0000000000403322\n.text:0000000000403326\n.text:0000000000403329\n.text:000000000040332b\n.text:0000000000403330\n.text:0000000000403333\n.text:0000000000403335\n.text:0000000000403338\n.text:000000000040333c\n.text:000000000040333f\n.text:0000000000403341\n.text:0000000000403348\n.text:000000000040334b\n.text:000000000040334e\n.text:0000000000403351\n.text:0000000000403352\n.text:0000000000403354\n.text:0000000000403356\n'
p720
tp721
sS'MarkInvalidFonts'
p722
(S'\n__stdcall MarkInvalidFonts(Boolean * set, FieldValue * val)\n'
p723
V\u000avoid MarkInvalidFonts(Boolean *set,FieldValue *val)\u000a\u000a{\u000a  int iVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  int *piVar4;\u000a  \u000a  iVar3 = val->count;\u000a  if (iVar3 == 0) {\u000a    iVar1 = 0;\u000a  }\u000a  else {\u000a    piVar4 = val->font;\u000a    iVar1 = 0;\u000a    do {\u000a      if (iVar1 < *piVar4) {\u000a        lVar2 = (long)iVar1;\u000a        do {\u000a          set[(long)(int)lVar2] = 0;\u000a          lVar2 = lVar2 + 1;\u000a          iVar1 = (int)lVar2;\u000a        } while (lVar2 < (long)*piVar4);\u000a      }\u000a      iVar1 = iVar1 + 1;\u000a      piVar4 = piVar4 + 1;\u000a      iVar3 = iVar3 + -1;\u000a    } while (iVar3 != 0);\u000a  }\u000a  if (iVar1 < numFonts) {\u000a    lVar2 = (long)iVar1;\u000a    do {\u000a      set[lVar2] = 0;\u000a      lVar2 = lVar2 + 1;\u000a    } while (lVar2 < (long)numFonts);\u000a  }\u000a  return;\u000a}\u000a\u000a
p724
S'MOV ECX,dword ptr [RSI + 0x18]\nTEST ECX,ECX\nJZ 0x0040526e\nMOV RDX,qword ptr [RSI + 0x20]\nXOR EAX,EAX\nNOP dword ptr [RAX]\nCMP EAX,dword ptr [RDX]\nJGE 0x00405262\nCDQE\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVSXD RSI,EAX\nMOV byte ptr [RDI + RSI*0x1],0x0\nMOVSXD RSI,dword ptr [RDX]\nINC RAX\nCMP RAX,RSI\nJL 0x00405250\nINC EAX\nADD RDX,0x4\nDEC ECX\nJNZ 0x00405240\nJMP 0x00405270\nXOR EAX,EAX\nCMP EAX,dword ptr [0x00608aa0]\nJGE 0x00405293\nCDQE\nNOP word ptr [RAX + RAX*0x1]\nMOV byte ptr [RDI + RAX*0x1],0x0\nINC RAX\nMOVSXD RCX,dword ptr [0x00608aa0]\nCMP RAX,RCX\nJL 0x00405280\nRET\n'
p725
S'8b 4e 18\n85 c9\n74 37\n48 8b 56 20\n31 c0\n0f 1f 00\n3b 02\n7d 1e\n48 98\n66 2e 0f 1f 84 00 00 00 00 00\n48 63 f0\nc6 04 37 00\n48 63 32\n48 ff c0\n48 39 f0\n7c ee\nff c0\n48 83 c2 04\nff c9\n75 d4\neb 02\n31 c0\n3b 05 2a 38 20 00\n7d 1b\n48 98\n66 0f 1f 44 00 00\nc6 04 07 00\n48 ff c0\n48 63 0d 12 38 20 00\n48 39 c8\n7c ed\nc3\n'
p726
S'.text:0000000000405230\n.text:0000000000405233\n.text:0000000000405235\n.text:0000000000405237\n.text:000000000040523b\n.text:000000000040523d\n.text:0000000000405240\n.text:0000000000405242\n.text:0000000000405244\n.text:0000000000405246\n.text:0000000000405250\n.text:0000000000405253\n.text:0000000000405257\n.text:000000000040525a\n.text:000000000040525d\n.text:0000000000405260\n.text:0000000000405262\n.text:0000000000405264\n.text:0000000000405268\n.text:000000000040526a\n.text:000000000040526c\n.text:000000000040526e\n.text:0000000000405270\n.text:0000000000405276\n.text:0000000000405278\n.text:000000000040527a\n.text:0000000000405280\n.text:0000000000405284\n.text:0000000000405287\n.text:000000000040528e\n.text:0000000000405291\n.text:0000000000405293\n'
p727
tp728
sS'XmuInternAtom'
p729
(S'\n__stdcall XmuInternAtom()\n'
p730
V\u000avoid XmuInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuInternAtom_00608270)();\u000a  return;\u000a}\u000a\u000a
p731
S'JMP qword ptr [0x00608270]\n'
p732
S'ff 25 1a 60 20 00\n'
p733
S'.plt:0000000000402250\n'
p734
tp735
sS'DoWorkPiece'
p736
(S'\n__stdcall DoWorkPiece(XtPointer closure)\n'
p737
V\u000aBoolean DoWorkPiece(XtPointer closure)\u000a\u000a{\u000a  WorkPiece pWVar1;\u000a  \u000a  pWVar1 = workQueue;\u000a  if (workQueue != (WorkPiece)0x0) {\u000a    (*workQueue->proc)(workQueue->closure);\u000a    workQueue = (WorkPiece)pWVar1->next;\u000a    XtFree(pWVar1);\u000a    if (workQueue != (WorkPiece)0x0) {\u000a      return 0;\u000a    }\u000a  }\u000a  return 1;\u000a}\u000a\u000a
p738
S'PUSH RBX\nMOV RBX,qword ptr [0x00608a98]\nTEST RBX,RBX\nJZ 0x00404064\nMOV RDI,qword ptr [RBX + 0x18]\nCALL qword ptr [RBX + 0x10]\nMOV RAX,qword ptr [RBX]\nMOV qword ptr [0x00608a98],RAX\nMOV RDI,RBX\nCALL 0x004020e0\nCMP qword ptr [0x00608a98],0x0\nJZ 0x00404064\nXOR EAX,EAX\nJMP 0x00404066\nMOV AL,0x1\nPOP RBX\nRET\n'
p739
S'53\n48 8b 1d 60 4a 20 00\n48 85 db\n74 27\n48 8b 7b 18\nff 53 10\n48 8b 03\n48 89 05 4a 4a 20 00\n48 89 df\ne8 8a e0 ff ff\n48 83 3d 3a 4a 20 00 00\n74 04\n31 c0\neb 02\nb0 01\n5b\nc3\n'
p740
S'.text:0000000000404030\n.text:0000000000404031\n.text:0000000000404038\n.text:000000000040403b\n.text:000000000040403d\n.text:0000000000404041\n.text:0000000000404044\n.text:0000000000404047\n.text:000000000040404e\n.text:0000000000404051\n.text:0000000000404056\n.text:000000000040405e\n.text:0000000000404060\n.text:0000000000404062\n.text:0000000000404064\n.text:0000000000404066\n.text:0000000000404067\n'
p741
tp742
sS'_start'
p743
(S'\n__stdcall _start()\n'
p744
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00607ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p745
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x405900\nMOV RCX,0x405890\nMOV RDI,0x403550\nCALL qword ptr [0x00607ff0]\nHLT\n'
p746
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 00 59 40 00\n48 c7 c1 90 58 40 00\n48 c7 c7 50 35 40 00\nff 15 f6 5c 20 00\nf4\n'
p747
S'.text:00000000004022d0\n.text:00000000004022d2\n.text:00000000004022d5\n.text:00000000004022d6\n.text:00000000004022d9\n.text:00000000004022dd\n.text:00000000004022de\n.text:00000000004022df\n.text:00000000004022e6\n.text:00000000004022ed\n.text:00000000004022f4\n.text:00000000004022fa\n'
p748
tp749
sS'DisableScaled'
p750
(S'\n__stdcall DisableScaled()\n'
p751
V\u000avoid DisableScaled(int iParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  char *pcVar1;\u000a  bool bVar2;\u000a  int iVar3;\u000a  int *piVar4;\u000a  FieldValue *pFVar5;\u000a  int iVar6;\u000a  \u000a  iVar6 = fieldValues[(long)iParm1]->count;\u000a  if (0 < iVar6) {\u000a    pFVar5 = fieldValues[(long)iParm1]->value;\u000a    do {\u000a      if (((pFVar5->enable != 0) && (pcVar1 = pFVar5->string, pcVar1 != (char *)0x0)) &&\u000a         ((*pcVar1 != '0' || (pcVar1[1] != 0)))) {\u000a        if (0 < pFVar5->count) {\u000a          piVar4 = pFVar5->font;\u000a          iVar3 = pFVar5->count + 1;\u000a          do {\u000a            if (fontInSet[(long)*piVar4] != 0) {\u000a              if ((fonts[(long)*piVar4].value_index[(long)iParm2] ==\u000a                   *(int *)(currentFont_0 + (long)iParm2 * 4)) &&\u000a                 (fonts[(long)*piVar4].value_index[(long)iParm3] ==\u000a                  *(int *)(currentFont_0 + (long)iParm3 * 4))) goto LAB_00405506;\u000a            }\u000a            piVar4 = piVar4 + 1;\u000a            iVar3 = iVar3 + -1;\u000a          } while (1 < iVar3);\u000a        }\u000a        pFVar5->enable = 0;\u000a        XtSetSensitive(pFVar5->menu_item);\u000a      }\u000aLAB_00405506:\u000a      pFVar5 = pFVar5 + 1;\u000a      bVar2 = 1 < iVar6;\u000a      iVar6 = iVar6 + -1;\u000a    } while (bVar2);\u000a  }\u000a  return;\u000a}\u000a\u000a
p752
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOVSXD RAX,EDI\nMOV RBX,qword ptr [0x608ac0 + RAX*0x8]\nMOV R14D,dword ptr [RBX]\nTEST R14D,R14D\nJLE 0x0040551b\nADD RBX,0x10\nMOVSXD R15,ESI\nMOVSXD R12,EDX\nNOP dword ptr [RAX]\nCMP byte ptr [RBX + 0x28],0x0\nJZ 0x00405506\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nJZ 0x00405506\nCMP byte ptr [RAX],0x30\nJNZ 0x0040549e\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x00405506\nMOV EAX,dword ptr [RBX + 0x18]\nTEST EAX,EAX\nJLE 0x004054f7\nMOV RCX,qword ptr [RBX + 0x20]\nMOV RDX,qword ptr [0x00608ab0]\nMOV R8,qword ptr [0x00608aa8]\nINC EAX\nNOP dword ptr [RAX]\nMOVSXD RDI,dword ptr [RCX]\nCMP byte ptr [RDX + RDI*0x1],0x0\nJZ 0x004054ec\nIMUL RDI,RDI,0x38\nADD RDI,R8\nMOV ESI,dword ptr [RDI + R15*0x4]\nCMP ESI,dword ptr [0x608b8c + R15*0x4]\nJNZ 0x004054ec\nMOV ESI,dword ptr [RDI + R12*0x4]\nCMP ESI,dword ptr [0x608b8c + R12*0x4]\nJZ 0x00405506\nADD RCX,0x4\nDEC EAX\nCMP EAX,0x1\nJG 0x004054c0\nMOV byte ptr [RBX + 0x28],0x0\nMOV RDI,qword ptr [RBX + 0x10]\nXOR ESI,ESI\nCALL 0x00402010\nADD RBX,0x30\nCMP R14D,0x1\nLEA EAX,[R14 + -0x1]\nMOV R14D,EAX\nJG 0x00405480\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p753
S'41 57\n41 56\n41 54\n53\n50\n48 63 c7\n48 8b 1c c5 c0 8a 60 00\n44 8b 33\n45 85 f6\n0f 8e ac 00 00 00\n48 83 c3 10\n4c 63 fe\n4c 63 e2\n0f 1f 80 00 00 00 00\n80 7b 28 00\n0f 84 7c 00 00 00\n48 8b 43 08\n48 85 c0\n74 73\n80 38 30\n75 06\n80 78 01 00\n74 68\n8b 43 18\n85 c0\n7e 52\n48 8b 4b 20\n48 8b 15 00 36 20 00\n4c 8b 05 f1 35 20 00\nff c0\n0f 1f 80 00 00 00 00\n48 63 39\n80 3c 3a 00\n74 23\n48 6b ff 38\n4c 01 c7\n42 8b 34 bf\n42 3b 34 bd 8c 8b 60 00\n75 0e\n42 8b 34 a7\n42 3b 34 a5 8c 8b 60 00\n74 1a\n48 83 c1 04\nff c8\n83 f8 01\n7f c9\nc6 43 28 00\n48 8b 7b 10\n31 f6\ne8 0a cb ff ff\n48 83 c3 30\n41 83 fe 01\n41 8d 46 ff\n41 89 c6\n0f 8f 65 ff ff ff\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p754
S'.text:0000000000405450\n.text:0000000000405452\n.text:0000000000405454\n.text:0000000000405456\n.text:0000000000405457\n.text:0000000000405458\n.text:000000000040545b\n.text:0000000000405463\n.text:0000000000405466\n.text:0000000000405469\n.text:000000000040546f\n.text:0000000000405473\n.text:0000000000405476\n.text:0000000000405479\n.text:0000000000405480\n.text:0000000000405484\n.text:000000000040548a\n.text:000000000040548e\n.text:0000000000405491\n.text:0000000000405493\n.text:0000000000405496\n.text:0000000000405498\n.text:000000000040549c\n.text:000000000040549e\n.text:00000000004054a1\n.text:00000000004054a3\n.text:00000000004054a5\n.text:00000000004054a9\n.text:00000000004054b0\n.text:00000000004054b7\n.text:00000000004054b9\n.text:00000000004054c0\n.text:00000000004054c3\n.text:00000000004054c7\n.text:00000000004054c9\n.text:00000000004054cd\n.text:00000000004054d0\n.text:00000000004054d4\n.text:00000000004054dc\n.text:00000000004054de\n.text:00000000004054e2\n.text:00000000004054ea\n.text:00000000004054ec\n.text:00000000004054f0\n.text:00000000004054f2\n.text:00000000004054f5\n.text:00000000004054f7\n.text:00000000004054fb\n.text:00000000004054ff\n.text:0000000000405501\n.text:0000000000405506\n.text:000000000040550a\n.text:000000000040550e\n.text:0000000000405512\n.text:0000000000405515\n.text:000000000040551b\n.text:000000000040551f\n.text:0000000000405520\n.text:0000000000405522\n.text:0000000000405524\n.text:0000000000405526\n'
p755
tp756
sS'XDrawString'
p757
(S'\n__stdcall XDrawString()\n'
p758
V\u000avoid XDrawString(void)\u000a\u000a{\u000a  (*(code *)PTR_XDrawString_006081f0)();\u000a  return;\u000a}\u000a\u000a
p759
S'JMP qword ptr [0x006081f0]\n'
p760
S'ff 25 9a 60 20 00\n'
p761
S'.plt:0000000000402150\n'
p762
tp763
sS'XtIsManaged'
p764
(S'\n__stdcall XtIsManaged()\n'
p765
V\u000avoid XtIsManaged(void)\u000a\u000a{\u000a  (*(code *)PTR_XtIsManaged_00608208)();\u000a  return;\u000a}\u000a\u000a
p766
S'JMP qword ptr [0x00608208]\n'
p767
S'ff 25 82 60 20 00\n'
p768
S'.plt:0000000000402180\n'
p769
tp770
sS'XtReleaseGC'
p771
(S'\n__stdcall XtReleaseGC()\n'
p772
V\u000avoid XtReleaseGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XtReleaseGC_00608030)();\u000a  return;\u000a}\u000a\u000a
p773
S'JMP qword ptr [0x00608030]\n'
p774
S'ff 25 5a 62 20 00\n'
p775
S'.plt:0000000000401dd0\n'
p776
tp777
sS'XtAppProcessEvent'
p778
(S'\n__stdcall XtAppProcessEvent()\n'
p779
V\u000avoid XtAppProcessEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppProcessEvent_006080e8)();\u000a  return;\u000a}\u000a\u000a
p780
S'JMP qword ptr [0x006080e8]\n'
p781
S'ff 25 a2 61 20 00\n'
p782
S'.plt:0000000000401f40\n'
p783
tp784
sS'printf'
p785
(S'\n__stdcall printf(char * __format)\n'
p786
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_006080d8)();\u000a  return iVar1;\u000a}\u000a\u000a
p787
S'JMP qword ptr [0x006080d8]\n'
p788
S'ff 25 b2 61 20 00\n'
p789
S'.plt:0000000000401f20\n'
p790
tp791
sS'NewScalables'
p792
(S'\n__stdcall NewScalables(char * slist)\n'
p793
V\u000avoid NewScalables(char *slist)\u000a\u000a{\u000a  byte bVar1;\u000a  long lVar2;\u000a  byte *pbVar3;\u000a  int iVar4;\u000a  FieldValueList *pFVar5;\u000a  byte *pbVar6;\u000a  char **ppcVar7;\u000a  byte *__s2;\u000a  int iVar8;\u000a  long lVar9;\u000a  long local_38;\u000a  \u000a  local_38 = (long)(int)slist;\u000a  do {\u000a    while ((bVar1 = *__s2, bVar1 == 0x20 || (bVar1 == 0x2c))) {\u000a      __s2 = __s2 + 1;\u000a    }\u000a    pbVar3 = __s2;\u000a    if (bVar1 == 0) {\u000a      return;\u000a    }\u000a    do {\u000a      while (pbVar6 = pbVar3, bVar1 = *pbVar6, 0x2c < bVar1) {\u000a        pbVar3 = pbVar6 + 1;\u000a      }\u000a      pbVar3 = pbVar6 + 1;\u000a    } while (((ulong)&local_38 >> ((ulong)bVar1 & 0x1f) & 1) != 0);\u000a    *pbVar6 = 0;\u000a    iVar8 = fieldValues[local_38]->count;\u000a    if (0 < iVar8) {\u000a      iVar8 = iVar8 + 1;\u000a      ppcVar7 = &fieldValues[local_38]->value[0].string;\u000a      do {\u000a        if ((*ppcVar7 != (char *)0x0) && (iVar4 = strcmp(*ppcVar7,(char *)__s2), iVar4 == 0))\u000a        goto LAB_00404cde;\u000a        iVar8 = iVar8 + -1;\u000a        ppcVar7 = ppcVar7 + 6;\u000a      } while (1 < iVar8);\u000a    }\u000a    lVar2 = local_38;\u000a    iVar8 = fieldValues[local_38]->count;\u000a    lVar9 = (long)iVar8;\u000a    fieldValues[local_38]->count = iVar8 + 1;\u000a    iVar4 = fieldValues[local_38]->allocated;\u000a    if (iVar8 == iVar4) {\u000a      fieldValues[local_38]->allocated = iVar4 + 10;\u000a      pFVar5 = (FieldValueList *)XtRealloc(fieldValues[local_38],(ulong)(iVar4 * 0x30 + 0x1f0));\u000a      fieldValues[lVar2] = pFVar5;\u000a    }\u000a    pFVar5 = fieldValues[lVar2];\u000a    pFVar5->value[lVar9].field = (int)lVar2;\u000a    *(byte **)&pFVar5->value[lVar9].string = __s2;\u000a    pFVar5->value[lVar9].count = numScaledFonts;\u000a    pFVar5->value[lVar9].font = scaledFonts;\u000a    pFVar5->value[lVar9].allocated = 0;\u000a    pFVar5->value[lVar9].enable = 1;\u000aLAB_00404cde:\u000a    __s2 = pbVar6 + 1;\u000a    if (bVar1 == 0) {\u000a      return;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p794
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOVSXD RDX,EDI\nMOV R12,0xffefffffffe\nMOV R14,RBX\nJMP 0x00404bd3\nINC R14\nMOVZX EAX,byte ptr [R14]\nCMP AL,0x20\nJZ 0x00404bd0\nCMP AL,0x2c\nJZ 0x00404bd0\nTEST AL,AL\nMOV RBX,R14\nJZ 0x00404ceb\nJMP 0x00404bf6\nINC RAX\nMOV RBX,RAX\nMOV RAX,RBX\nMOVZX R13D,byte ptr [RAX]\nCMP R13B,0x2d\nJNC 0x00404bf0\nLEA RBX,[RAX + 0x1]\nMOVZX ECX,R13B\nBT RSP,RCX\nJC 0x00404bf6\nMOV byte ptr [RAX],0x0\nMOV qword ptr [RSP],RDX\nMOV RBP,qword ptr [0x608ac0 + RDX*0x8]\nMOV R15D,dword ptr [RBP]\nTEST R15D,R15D\nJLE 0x00404c56\nINC R15D\nADD RBP,0x18\nMOV RDI,qword ptr [RBP]\nTEST RDI,RDI\nJZ 0x00404c49\nMOV RSI,R14\nCALL 0x00402000\nTEST EAX,EAX\nJZ 0x00404cde\nDEC R15D\nADD RBP,0x30\nCMP R15D,0x1\nJG 0x00404c30\nMOV RBP,qword ptr [RSP]\nMOV RAX,qword ptr [0x608ac0 + RBP*0x8]\nMOVSXD R15,dword ptr [RAX]\nLEA ECX,[R15 + 0x1]\nMOV dword ptr [RAX],ECX\nMOV RCX,qword ptr [0x608ac0 + RBP*0x8]\nMOV EAX,dword ptr [RCX + 0x4]\nCMP R15D,EAX\nJNZ 0x00404ca2\nLEA EDX,[RAX + 0xa]\nMOV dword ptr [RCX + 0x4],EDX\nMOV RDI,qword ptr [0x608ac0 + RBP*0x8]\nLEA ESI,[RAX + RAX*0x2]\nSHL ESI,0x4\nADD ESI,0x1f0\nCALL 0x00401ff0\nMOV qword ptr [0x608ac0 + RBP*0x8],RAX\nMOV RAX,qword ptr [0x608ac0 + RBP*0x8]\nLEA RCX,[R15 + R15*0x2]\nSHL RCX,0x4\nMOV dword ptr [RAX + RCX*0x1 + 0x10],EBP\nMOV qword ptr [RAX + RCX*0x1 + 0x18],R14\nMOV EDX,dword ptr [0x00608b50]\nMOV dword ptr [RAX + RCX*0x1 + 0x28],EDX\nMOV RDX,qword ptr [0x00608b48]\nMOV qword ptr [RAX + RCX*0x1 + 0x30],RDX\nMOV dword ptr [RAX + RCX*0x1 + 0x2c],0x0\nMOV byte ptr [RAX + RCX*0x1 + 0x38],0x1\nTEST R13B,R13B\nMOV RDX,qword ptr [RSP]\nJNZ 0x00404bcb\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p795
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 f3\n48 63 d7\n49 bc fe ff ff ff fe 0f 00 00\n49 89 de\neb 03\n49 ff c6\n41 0f b6 06\n3c 20\n74 f5\n3c 2c\n74 f1\n84 c0\n4c 89 f3\n0f 84 01 01 00 00\neb 0a\n48 ff c0\n48 89 c3\n48 89 d8\n44 0f b6 28\n41 80 fd 2d\n73 ed\n48 8d 58 01\n41 0f b6 cd\n49 0f a3 cc\n72 e5\nc6 00 00\n48 89 14 24\n48 8b 2c d5 c0 8a 60 00\n44 8b 7d 00\n45 85 ff\n7e 2d\n41 ff c7\n48 83 c5 18\n48 8b 7d 00\n48 85 ff\n74 10\n4c 89 f6\ne8 bf d3 ff ff\n85 c0\n0f 84 95 00 00 00\n41 ff cf\n48 83 c5 30\n41 83 ff 01\n7f da\n48 8b 2c 24\n48 8b 04 ed c0 8a 60 00\n4c 63 38\n41 8d 4f 01\n89 08\n48 8b 0c ed c0 8a 60 00\n8b 41 04\n41 39 c7\n75 27\n8d 50 0a\n89 51 04\n48 8b 3c ed c0 8a 60 00\n8d 34 40\nc1 e6 04\n81 c6 f0 01 00 00\ne8 56 d3 ff ff\n48 89 04 ed c0 8a 60 00\n48 8b 04 ed c0 8a 60 00\n4b 8d 0c 7f\n48 c1 e1 04\n89 6c 08 10\n4c 89 74 08 18\n8b 15 8f 3e 20 00\n89 54 08 28\n48 8b 15 7c 3e 20 00\n48 89 54 08 30\nc7 44 08 2c 00 00 00 00\nc6 44 08 38 01\n45 84 ed\n48 8b 14 24\n0f 85 e0 fe ff ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p796
S'.text:0000000000404bb0\n.text:0000000000404bb1\n.text:0000000000404bb3\n.text:0000000000404bb5\n.text:0000000000404bb7\n.text:0000000000404bb9\n.text:0000000000404bba\n.text:0000000000404bbb\n.text:0000000000404bbe\n.text:0000000000404bc1\n.text:0000000000404bcb\n.text:0000000000404bce\n.text:0000000000404bd0\n.text:0000000000404bd3\n.text:0000000000404bd7\n.text:0000000000404bd9\n.text:0000000000404bdb\n.text:0000000000404bdd\n.text:0000000000404bdf\n.text:0000000000404be1\n.text:0000000000404be4\n.text:0000000000404bea\n.text:0000000000404bf0\n.text:0000000000404bf3\n.text:0000000000404bf6\n.text:0000000000404bf9\n.text:0000000000404bfd\n.text:0000000000404c01\n.text:0000000000404c03\n.text:0000000000404c07\n.text:0000000000404c0b\n.text:0000000000404c0f\n.text:0000000000404c11\n.text:0000000000404c14\n.text:0000000000404c18\n.text:0000000000404c20\n.text:0000000000404c24\n.text:0000000000404c27\n.text:0000000000404c29\n.text:0000000000404c2c\n.text:0000000000404c30\n.text:0000000000404c34\n.text:0000000000404c37\n.text:0000000000404c39\n.text:0000000000404c3c\n.text:0000000000404c41\n.text:0000000000404c43\n.text:0000000000404c49\n.text:0000000000404c4c\n.text:0000000000404c50\n.text:0000000000404c54\n.text:0000000000404c56\n.text:0000000000404c5a\n.text:0000000000404c62\n.text:0000000000404c65\n.text:0000000000404c69\n.text:0000000000404c6b\n.text:0000000000404c73\n.text:0000000000404c76\n.text:0000000000404c79\n.text:0000000000404c7b\n.text:0000000000404c7e\n.text:0000000000404c81\n.text:0000000000404c89\n.text:0000000000404c8c\n.text:0000000000404c8f\n.text:0000000000404c95\n.text:0000000000404c9a\n.text:0000000000404ca2\n.text:0000000000404caa\n.text:0000000000404cae\n.text:0000000000404cb2\n.text:0000000000404cb6\n.text:0000000000404cbb\n.text:0000000000404cc1\n.text:0000000000404cc5\n.text:0000000000404ccc\n.text:0000000000404cd1\n.text:0000000000404cd9\n.text:0000000000404cde\n.text:0000000000404ce1\n.text:0000000000404ce5\n.text:0000000000404ceb\n.text:0000000000404cef\n.text:0000000000404cf0\n.text:0000000000404cf2\n.text:0000000000404cf4\n.text:0000000000404cf6\n.text:0000000000404cf8\n.text:0000000000404cf9\n'
p797
tp798
sS'set_bitmap_info'
p799
(S'\n__stdcall set_bitmap_info(UCSLabelWidget lw)\n'
p800
V\u000avoid set_bitmap_info(UCSLabelWidget lw)\u000a\u000a{\u000a  Pixmap PVar1;\u000a  int iVar2;\u000a  uint depth;\u000a  uint bw;\u000a  int y;\u000a  int x;\u000a  Window root;\u000a  undefined local_20 [4];\u000a  undefined local_1c [4];\u000a  undefined local_18 [4];\u000a  undefined local_14 [4];\u000a  undefined local_10 [8];\u000a  \u000a  PVar1 = (lw->label).left_bitmap;\u000a  if (PVar1 != 0) {\u000a    iVar2 = XGetGeometry(((lw->core).screen)->display,PVar1,local_10,local_14,local_18,\u000a                         &(lw->label).lbm_width,&(lw->label).lbm_height,local_1c,local_20);\u000a    if (iVar2 != 0) goto LAB_00403277;\u000a  }\u000a  *(undefined8 *)&(lw->label).lbm_width = 0;\u000aLAB_00403277:\u000a  compute_bitmap_offsets(lw);\u000a  return;\u000a}\u000a\u000a
p801
S'PUSH RBX\nSUB RSP,0x20\nMOV RBX,RDI\nMOV RSI,qword ptr [0x160 + RBX]\nTEST RSI,RSI\nJZ 0x0040326c\nMOV RAX,qword ptr [0x98 + RBX]\nMOV RDI,qword ptr [RAX + 0x8]\nLEA R9,[0x190 + RBX]\nLEA RAX,[0x194 + RBX]\nSUB RSP,0x8\nLEA R10,[RSP + 0x10]\nLEA R11,[RSP + 0x14]\nLEA RDX,[RSP + 0x20]\nLEA RCX,[RSP + 0x1c]\nLEA R8,[RSP + 0x18]\nPUSH R10\nPUSH R11\nPUSH RAX\nCALL 0x00402130\nADD RSP,0x20\nTEST EAX,EAX\nJNZ 0x00403277\nMOV qword ptr [0x190 + RBX],0x0\nMOV RDI,RBX\nCALL 0x00403360\nADD RSP,0x20\nPOP RBX\nRET\n'
p802
S'53\n48 83 ec 20\n48 89 fb\n48 8b b3 60 01 00 00\n48 85 f6\n74 48\n48 8b 83 98 00 00 00\n48 8b 78 08\n4c 8d 8b 90 01 00 00\n48 8d 83 94 01 00 00\n48 83 ec 08\n4c 8d 54 24 10\n4c 8d 5c 24 14\n48 8d 54 24 20\n48 8d 4c 24 1c\n4c 8d 44 24 18\n41 52\n41 53\n50\ne8 cc ee ff ff\n48 83 c4 20\n85 c0\n75 0b\n48 c7 83 90 01 00 00 00 00 00 00\n48 89 df\ne8 e1 00 00 00\n48 83 c4 20\n5b\nc3\n'
p803
S'.text:0000000000403210\n.text:0000000000403211\n.text:0000000000403215\n.text:0000000000403218\n.text:000000000040321f\n.text:0000000000403222\n.text:0000000000403224\n.text:000000000040322b\n.text:000000000040322f\n.text:0000000000403236\n.text:000000000040323d\n.text:0000000000403241\n.text:0000000000403246\n.text:000000000040324b\n.text:0000000000403250\n.text:0000000000403255\n.text:000000000040325a\n.text:000000000040325c\n.text:000000000040325e\n.text:000000000040325f\n.text:0000000000403264\n.text:0000000000403268\n.text:000000000040326a\n.text:000000000040326c\n.text:0000000000403277\n.text:000000000040327a\n.text:000000000040327f\n.text:0000000000403283\n.text:0000000000403284\n'
p804
tp805
sS'GetFontNames'
p806
(S'\n__stdcall GetFontNames(XtPointer closure)\n'
p807
V\u000avoid GetFontNames(XtPointer closure)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  undefined4 uVar6;\u000a  undefined4 uVar7;\u000a  FontValues *pFVar8;\u000a  Boolean BVar9;\u000a  XtPointer closure_00;\u000a  long lVar10;\u000a  XtPointer *closure_01;\u000a  XtPointer *ppvVar11;\u000a  int iVar12;\u000a  long lVar13;\u000a  int iVar14;\u000a  int maxField;\u000a  int local_2c;\u000a  \u000a  closure_00 = (XtPointer)XListFonts(closure,AppRes.pattern,0x7fff,&numFonts);\u000a  fonts = (FontValues *)XtMalloc((ulong)(uint)(numFonts * 0x38));\u000a  fontInSet = (Boolean *)XtMalloc((ulong)(uint)numFonts);\u000a  if (numFonts != 0) {\u000a    memset(fontInSet,1,(ulong)(numFonts - 1) + 1);\u000a  }\u000a  lVar13 = -0x70;\u000a  do {\u000a    lVar10 = XtMalloc(0x40);\u000a    *(long *)((long)&matchingFontCount + lVar13) = lVar10;\u000a    *(undefined4 *)(lVar10 + 4) = 1;\u000a    **(undefined4 **)((long)&matchingFontCount + lVar13) = 0;\u000a    iVar14 = numFonts;\u000a    lVar13 = lVar13 + 8;\u000a  } while (lVar13 != 0);\u000a  if (numFonts == 0) {\u000a    SetNoFonts();\u000a    return;\u000a  }\u000a  matchingFontCount = numFonts;\u000a  numBadFonts = 0;\u000a  closure_01 = (XtPointer *)XtMalloc(0x28);\u000a  pFVar8 = fonts;\u000a  *closure_01 = closure_00;\u000a  *(int *)(closure_01 + 1) = iVar14;\u000a  *(undefined4 *)((long)closure_01 + 0xc) = 0;\u000a  *(undefined4 *)(closure_01 + 2) = 0;\u000a  *(FontValues **)(closure_01 + 3) = pFVar8;\u000a  *(FieldValueList ***)(closure_01 + 4) = fieldValues;\u000a  while (0x19 < iVar14) {\u000a    *(int *)(closure_01 + 2) = *(int *)((long)closure_01 + 0xc) + 0x19;\u000a    ScheduleWork(ParseFontNames,closure_01);\u000a    ScheduleWork(XtFree,closure_01);\u000a    ppvVar11 = (XtPointer *)XtMalloc(0x28);\u000a    ppvVar11[4] = closure_01[4];\u000a    uVar1 = *(undefined4 *)closure_01;\u000a    uVar2 = *(undefined4 *)((long)closure_01 + 4);\u000a    uVar4 = *(undefined4 *)(closure_01 + 1);\u000a    uVar6 = *(undefined4 *)((long)closure_01 + 0xc);\u000a    uVar3 = *(undefined4 *)((long)closure_01 + 0x14);\u000a    uVar5 = *(undefined4 *)(closure_01 + 3);\u000a    uVar7 = *(undefined4 *)((long)closure_01 + 0x1c);\u000a    *(undefined4 *)(ppvVar11 + 2) = *(undefined4 *)(closure_01 + 2);\u000a    *(undefined4 *)((long)ppvVar11 + 0x14) = uVar3;\u000a    *(undefined4 *)(ppvVar11 + 3) = uVar5;\u000a    *(undefined4 *)((long)ppvVar11 + 0x1c) = uVar7;\u000a    *(undefined4 *)ppvVar11 = uVar1;\u000a    *(undefined4 *)((long)ppvVar11 + 4) = uVar2;\u000a    *(undefined4 *)(ppvVar11 + 1) = uVar4;\u000a    *(undefined4 *)((long)ppvVar11 + 0xc) = uVar6;\u000a    *(int *)((long)ppvVar11 + 0xc) = *(int *)((long)ppvVar11 + 0xc) + 0x19;\u000a    ppvVar11[3] = (XtPointer)((long)ppvVar11[3] + 0x578);\u000a    *ppvVar11 = (XtPointer)((long)*ppvVar11 + 200);\u000a    iVar14 = iVar14 + -0x19;\u000a    closure_01 = ppvVar11;\u000a  }\u000a  *(int *)(closure_01 + 2) = numFonts;\u000a  ScheduleWork(ParseFontNames,closure_01);\u000a  ScheduleWork(XFreeFontNames,closure_00);\u000a  ScheduleWork(XtFree,closure_01);\u000a  if (AppRes.scaled_fonts != 0) {\u000a    ScheduleWork(FixScalables,(XtPointer)0x0);\u000a  }\u000a  iVar12 = 0;\u000a  ScheduleWork(SortFields,(XtPointer)0x0);\u000a  SetParsingFontCount((ulong)(uint)matchingFontCount);\u000a  iVar14 = strcmp(AppRes.pattern,"-*-*-*-*-*-*-*-*-*-*-*-*-*-*");\u000a  if (iVar14 != 0) {\u000a    if (0 < numFonts) {\u000a      lVar10 = (long)numFonts;\u000a      lVar13 = 0;\u000a      do {\u000a        iVar12 = (int)lVar13;\u000a        BVar9 = IsXLFDFontName(*(String *)((long)closure_00 + lVar13 * 8));\u000a        if (BVar9 != 0) break;\u000a        lVar13 = lVar13 + 1;\u000a        iVar12 = (int)lVar13;\u000a      } while (lVar13 < lVar10);\u000a    }\u000a    if (iVar12 == numFonts) {\u000a      SetNoFonts();\u000a      return;\u000a    }\u000a    BVar9 = Matches(AppRes.pattern,*(String *)((long)closure_00 + (long)iVar12 * 8),\u000a                    patternFieldSpecified,&local_2c);\u000a    if (BVar9 == 0) {\u000a      XtAppWarning(appCtx);\u000a    }\u000a    else {\u000a      if (-1 < local_2c) {\u000a        lVar13 = -1;\u000a        do {\u000a          if (patternFieldSpecified[lVar13 + 1] != 0) {\u000a            *(undefined4 *)(currentFont_0 + lVar13 * 4 + 4) = 0;\u000a          }\u000a          lVar13 = lVar13 + 1;\u000a        } while (lVar13 < (long)local_2c);\u000a      }\u000a    }\u000a  }\u000a  ScheduleWork(SetCurrentFont,(XtPointer)0x0);\u000a  return;\u000a}\u000a\u000a
p808
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RSI,qword ptr [0x00608a18]\nMOV EDX,0x7fff\nMOV ECX,0x608aa0\nCALL 0x00401f00\nMOV R14,RAX\nIMUL EDI,dword ptr [0x00608aa0],0x38\nCALL 0x00401eb0\nMOV qword ptr [0x00608aa8],RAX\nMOV EDI,dword ptr [0x00608aa0]\nCALL 0x00401eb0\nMOV qword ptr [0x00608ab0],RAX\nMOV EDX,dword ptr [0x00608aa0]\nTEST EDX,EDX\nJZ 0x00403a76\nDEC EDX\nINC RDX\nMOV ESI,0x1\nMOV RDI,RAX\nCALL 0x00401fc0\nMOV RBX,-0x70\nNOP dword ptr [RAX]\nMOV EDI,0x40\nCALL 0x00401eb0\nMOV qword ptr [0x608b30 + RBX],RAX\nMOV dword ptr [RAX + 0x4],0x1\nMOV RAX,qword ptr [0x608b30 + RBX]\nMOV dword ptr [RAX],0x0\nADD RBX,0x8\nJNZ 0x00403a80\nMOV R12D,dword ptr [0x00608aa0]\nTEST R12D,R12D\nJZ 0x00403b96\nMOV dword ptr [0x00608b30],R12D\nMOV dword ptr [0x00608b34],0x0\nMOV EDI,0x28\nCALL 0x00401eb0\nMOV RBX,RAX\nMOV RAX,qword ptr [0x00608aa8]\nMOV qword ptr [RBX],R14\nMOV dword ptr [RBX + 0x8],R12D\nMOV dword ptr [RBX + 0xc],0x0\nMOV dword ptr [RBX + 0x10],0x0\nMOV qword ptr [RBX + 0x18],RAX\nMOV qword ptr [RBX + 0x20],0x608ac0\nXOR R15D,R15D\nCMP R12D,0x1a\nJL 0x00403ba7\nXOR R15D,R15D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EAX,dword ptr [RBX + 0xc]\nADD EAX,0x19\nMOV dword ptr [RBX + 0x10],EAX\nMOV EDI,0x4040d0\nMOV RSI,RBX\nMOV EDX,R15D\nCALL 0x00403980\nMOV EDI,0x4020e0\nMOV RSI,RBX\nMOV EDX,R15D\nCALL 0x00403980\nMOV EDI,0x28\nCALL 0x00401eb0\nMOV RBP,RAX\nMOV RAX,qword ptr [RBX + 0x20]\nMOV qword ptr [RBP + 0x20],RAX\nMOVUPS XMM0,xmmword ptr [RBX]\nMOVUPS XMM1,xmmword ptr [RBX + 0x10]\nMOVUPS xmmword ptr [RBP + 0x10],XMM1\nMOVUPS xmmword ptr [RBP],XMM0\nADD dword ptr [RBP + 0xc],0x19\nADD qword ptr [RBP + 0x18],0x578\nADD qword ptr [RBP],0xc8\nADD R12D,-0x19\nMOV R15D,0x1\nCMP R12D,0x19\nMOV RBX,RBP\nJG 0x00403b20\nJMP 0x00403baa\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00404070\nMOV RBP,RBX\nMOV EAX,dword ptr [0x00608aa0]\nMOV dword ptr [RBP + 0x10],EAX\nMOV EDI,0x4040d0\nMOV RSI,RBP\nMOV EDX,R15D\nCALL 0x00403980\nMOV EDI,0x401da0\nMOV RSI,R14\nMOV EDX,R15D\nCALL 0x00403980\nMOV EDI,0x4020e0\nMOV RSI,RBP\nMOV EDX,R15D\nCALL 0x00403980\nCMP byte ptr [0x00608a50],0x0\nJZ 0x00403bfb\nMOV EDI,0x4043b0\nXOR ESI,ESI\nMOV EDX,R15D\nCALL 0x00403980\nXOR EBX,EBX\nMOV EDI,0x404460\nXOR ESI,ESI\nMOV EDX,R15D\nCALL 0x00403980\nMOV EDI,dword ptr [0x00608b30]\nCALL 0x00404580\nMOV RDI,qword ptr [0x00608a18]\nMOV ESI,0x405aa2\nCALL 0x00402000\nTEST EAX,EAX\nJZ 0x00403cef\nCMP dword ptr [0x00608aa0],0x0\nJLE 0x00403c65\nMOVSXD RBP,dword ptr [0x00608aa0]\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [R14 + RBX*0x8]\nCALL 0x004045f0\nTEST AL,AL\nJNZ 0x00403c65\nINC RBX\nCMP RBX,RBP\nJL 0x00403c50\nCMP EBX,dword ptr [0x00608aa0]\nJNZ 0x00403c7f\nCALL 0x00404070\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [0x00608a18]\nMOVSXD RAX,EBX\nMOV RSI,qword ptr [R14 + RAX*0x8]\nLEA RCX,[RSP + 0xc]\nMOV EDX,0x608b38\nCALL 0x00404620\nTEST AL,AL\nJZ 0x00403cde\nCMP dword ptr [RSP + 0xc],0x0\nJS 0x00403cef\nMOV RAX,-0x1\nMOVSXD RCX,dword ptr [RSP + 0xc]\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [0x608b39 + RAX],0x0\nJZ 0x00403cd4\nMOV dword ptr [0x608b90 + RAX*0x4],0x0\nINC RAX\nCMP RAX,RCX\nJL 0x00403cc0\nJMP 0x00403cef\nMOV RDI,qword ptr [0x00608a00]\nMOV ESI,0x405abf\nCALL 0x00401ea0\nMOV EDI,0x404750\nXOR ESI,ESI\nMOV EDX,0x1\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00403980\n'
p809
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 8b 35 f5 4f 20 00\nba ff 7f 00 00\nb9 a0 8a 60 00\ne8 ce e4 ff ff\n49 89 c6\n6b 3d 64 50 20 00 38\ne8 6f e4 ff ff\n48 89 05 60 50 20 00\n8b 3d 52 50 20 00\ne8 5d e4 ff ff\n48 89 05 56 50 20 00\n8b 15 40 50 20 00\n85 d2\n74 12\nff ca\n48 ff c2\nbe 01 00 00 00\n48 89 c7\ne8 4a e5 ff ff\n48 c7 c3 90 ff ff ff\n0f 1f 00\nbf 40 00 00 00\ne8 26 e4 ff ff\n48 89 83 30 8b 60 00\nc7 40 04 01 00 00 00\n48 8b 83 30 8b 60 00\nc7 00 00 00 00 00\n48 83 c3 08\n75 d5\n44 8b 25 ee 4f 20 00\n45 85 e4\n0f 84 db 00 00 00\n44 89 25 6e 50 20 00\nc7 05 68 50 20 00 00 00 00 00\nbf 28 00 00 00\ne8 da e3 ff ff\n48 89 c3\n48 8b 05 c8 4f 20 00\n4c 89 33\n44 89 63 08\nc7 43 0c 00 00 00 00\nc7 43 10 00 00 00 00\n48 89 43 18\n48 c7 43 20 c0 8a 60 00\n45 31 ff\n41 83 fc 1a\n0f 8c 99 00 00 00\n45 31 ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n8b 43 0c\n83 c0 19\n89 43 10\nbf d0 40 40 00\n48 89 de\n44 89 fa\ne8 47 fe ff ff\nbf e0 20 40 00\n48 89 de\n44 89 fa\ne8 37 fe ff ff\nbf 28 00 00 00\ne8 5d e3 ff ff\n48 89 c5\n48 8b 43 20\n48 89 45 20\n0f 10 03\n0f 10 4b 10\n0f 11 4d 10\n0f 11 45 00\n83 45 0c 19\n48 81 45 18 78 05 00 00\n48 81 45 00 c8 00 00 00\n41 83 c4 e7\n41 bf 01 00 00 00\n41 83 fc 19\n48 89 eb\n7f 8c\neb 14\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\ne9 c9 04 00 00\n48 89 dd\n8b 05 f0 4e 20 00\n89 45 10\nbf d0 40 40 00\n48 89 ee\n44 89 fa\ne8 bd fd ff ff\nbf a0 1d 40 00\n4c 89 f6\n44 89 fa\ne8 ad fd ff ff\nbf e0 20 40 00\n48 89 ee\n44 89 fa\ne8 9d fd ff ff\n80 3d 66 4e 20 00 00\n74 0f\nbf b0 43 40 00\n31 f6\n44 89 fa\ne8 85 fd ff ff\n31 db\nbf 60 44 40 00\n31 f6\n44 89 fa\ne8 74 fd ff ff\n8b 3d 1e 4f 20 00\ne8 69 09 00 00\n48 8b 3d fa 4d 20 00\nbe a2 5a 40 00\ne8 d8 e3 ff ff\n85 c0\n0f 84 bf 00 00 00\n83 3d 69 4e 20 00 00\n7e 2c\n48 63 2d 60 4e 20 00\n31 db\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 3c de\ne8 97 09 00 00\n84 c0\n75 08\n48 ff c3\n48 39 eb\n7c eb\n3b 1d 35 4e 20 00\n75 12\ne8 fe 03 00 00\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n48 8b 3d 92 4d 20 00\n48 63 c3\n49 8b 34 c6\n48 8d 4c 24 0c\nba 38 8b 60 00\ne8 84 09 00 00\n84 c0\n74 3e\n83 7c 24 0c 00\n78 48\n48 c7 c0 ff ff ff ff\n48 63 4c 24 0c\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 b8 39 8b 60 00 00\n74 0b\nc7 04 85 90 8b 60 00 00 00 00 00\n48 ff c0\n48 39 c8\n7c e4\neb 11\n48 8b 3d 1b 4d 20 00\nbe bf 5a 40 00\ne8 b1 e1 ff ff\nbf 50 47 40 00\n31 f6\nba 01 00 00 00\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\ne9 74 fc ff ff\n'
p810
S'.text:0000000000403a10\n.text:0000000000403a11\n.text:0000000000403a13\n.text:0000000000403a15\n.text:0000000000403a17\n.text:0000000000403a18\n.text:0000000000403a1c\n.text:0000000000403a23\n.text:0000000000403a28\n.text:0000000000403a2d\n.text:0000000000403a32\n.text:0000000000403a35\n.text:0000000000403a3c\n.text:0000000000403a41\n.text:0000000000403a48\n.text:0000000000403a4e\n.text:0000000000403a53\n.text:0000000000403a5a\n.text:0000000000403a60\n.text:0000000000403a62\n.text:0000000000403a64\n.text:0000000000403a66\n.text:0000000000403a69\n.text:0000000000403a6e\n.text:0000000000403a71\n.text:0000000000403a76\n.text:0000000000403a7d\n.text:0000000000403a80\n.text:0000000000403a85\n.text:0000000000403a8a\n.text:0000000000403a91\n.text:0000000000403a98\n.text:0000000000403a9f\n.text:0000000000403aa5\n.text:0000000000403aa9\n.text:0000000000403aab\n.text:0000000000403ab2\n.text:0000000000403ab5\n.text:0000000000403abb\n.text:0000000000403ac2\n.text:0000000000403acc\n.text:0000000000403ad1\n.text:0000000000403ad6\n.text:0000000000403ad9\n.text:0000000000403ae0\n.text:0000000000403ae3\n.text:0000000000403ae7\n.text:0000000000403aee\n.text:0000000000403af5\n.text:0000000000403af9\n.text:0000000000403b01\n.text:0000000000403b04\n.text:0000000000403b08\n.text:0000000000403b0e\n.text:0000000000403b11\n.text:0000000000403b20\n.text:0000000000403b23\n.text:0000000000403b26\n.text:0000000000403b29\n.text:0000000000403b2e\n.text:0000000000403b31\n.text:0000000000403b34\n.text:0000000000403b39\n.text:0000000000403b3e\n.text:0000000000403b41\n.text:0000000000403b44\n.text:0000000000403b49\n.text:0000000000403b4e\n.text:0000000000403b53\n.text:0000000000403b56\n.text:0000000000403b5a\n.text:0000000000403b5e\n.text:0000000000403b61\n.text:0000000000403b65\n.text:0000000000403b69\n.text:0000000000403b6d\n.text:0000000000403b71\n.text:0000000000403b79\n.text:0000000000403b81\n.text:0000000000403b85\n.text:0000000000403b8b\n.text:0000000000403b8f\n.text:0000000000403b92\n.text:0000000000403b94\n.text:0000000000403b96\n.text:0000000000403b9a\n.text:0000000000403b9b\n.text:0000000000403b9d\n.text:0000000000403b9f\n.text:0000000000403ba1\n.text:0000000000403ba2\n.text:0000000000403ba7\n.text:0000000000403baa\n.text:0000000000403bb0\n.text:0000000000403bb3\n.text:0000000000403bb8\n.text:0000000000403bbb\n.text:0000000000403bbe\n.text:0000000000403bc3\n.text:0000000000403bc8\n.text:0000000000403bcb\n.text:0000000000403bce\n.text:0000000000403bd3\n.text:0000000000403bd8\n.text:0000000000403bdb\n.text:0000000000403bde\n.text:0000000000403be3\n.text:0000000000403bea\n.text:0000000000403bec\n.text:0000000000403bf1\n.text:0000000000403bf3\n.text:0000000000403bf6\n.text:0000000000403bfb\n.text:0000000000403bfd\n.text:0000000000403c02\n.text:0000000000403c04\n.text:0000000000403c07\n.text:0000000000403c0c\n.text:0000000000403c12\n.text:0000000000403c17\n.text:0000000000403c1e\n.text:0000000000403c23\n.text:0000000000403c28\n.text:0000000000403c2a\n.text:0000000000403c30\n.text:0000000000403c37\n.text:0000000000403c39\n.text:0000000000403c40\n.text:0000000000403c42\n.text:0000000000403c50\n.text:0000000000403c54\n.text:0000000000403c59\n.text:0000000000403c5b\n.text:0000000000403c5d\n.text:0000000000403c60\n.text:0000000000403c63\n.text:0000000000403c65\n.text:0000000000403c6b\n.text:0000000000403c6d\n.text:0000000000403c72\n.text:0000000000403c76\n.text:0000000000403c77\n.text:0000000000403c79\n.text:0000000000403c7b\n.text:0000000000403c7d\n.text:0000000000403c7e\n.text:0000000000403c7f\n.text:0000000000403c86\n.text:0000000000403c89\n.text:0000000000403c8d\n.text:0000000000403c92\n.text:0000000000403c97\n.text:0000000000403c9c\n.text:0000000000403c9e\n.text:0000000000403ca0\n.text:0000000000403ca5\n.text:0000000000403ca7\n.text:0000000000403cae\n.text:0000000000403cb3\n.text:0000000000403cc0\n.text:0000000000403cc7\n.text:0000000000403cc9\n.text:0000000000403cd4\n.text:0000000000403cd7\n.text:0000000000403cda\n.text:0000000000403cdc\n.text:0000000000403cde\n.text:0000000000403ce5\n.text:0000000000403cea\n.text:0000000000403cef\n.text:0000000000403cf4\n.text:0000000000403cf6\n.text:0000000000403cfb\n.text:0000000000403cff\n.text:0000000000403d00\n.text:0000000000403d02\n.text:0000000000403d04\n.text:0000000000403d06\n.text:0000000000403d07\n'
p811
tp812
sS'XListFonts'
p813
(S'\n__stdcall XListFonts()\n'
p814
V\u000avoid XListFonts(void)\u000a\u000a{\u000a  (*(code *)PTR_XListFonts_006080c8)();\u000a  return;\u000a}\u000a\u000a
p815
S'JMP qword ptr [0x006080c8]\n'
p816
S'ff 25 c2 61 20 00\n'
p817
S'.plt:0000000000401f00\n'
p818
tp819
sS'XtAddCallback'
p820
(S'\n__stdcall XtAddCallback()\n'
p821
V\u000avoid XtAddCallback(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAddCallback_00608290)();\u000a  return;\u000a}\u000a\u000a
p822
S'JMP qword ptr [0x00608290]\n'
p823
S'ff 25 fa 5f 20 00\n'
p824
S'.plt:0000000000402290\n'
p825
tp826
sS'Destroy'
p827
(S'\n__stdcall Destroy(Widget w)\n'
p828
V\u000avoid Destroy(Widget w)\u000a\u000a{\u000a  if ((String)w[1].core.border_pixel != (w->core).name) {\u000a    XtFree();\u000a  }\u000a  XtReleaseGC(w,w[1].core.screen);\u000a  XtReleaseGC(w,w[1].core.colormap);\u000a  XmuReleaseStippledPixmap((w->core).screen,w[1].core.window);\u000a  return;\u000a}\u000a\u000a
p829
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [0x140 + RBX]\nCMP RDI,qword ptr [0x90 + RBX]\nJZ 0x004024e9\nCALL 0x004020e0\nMOV RSI,qword ptr [0x168 + RBX]\nMOV RDI,RBX\nCALL 0x00401dd0\nMOV RSI,qword ptr [0x170 + RBX]\nMOV RDI,RBX\nCALL 0x00401dd0\nMOV RDI,qword ptr [0x98 + RBX]\nMOV RSI,qword ptr [0x178 + RBX]\nPOP RBX\nJMP 0x00402020\n'
p830
S'53\n48 89 fb\n48 8b bb 40 01 00 00\n48 3b bb 90 00 00 00\n74 05\ne8 f7 fb ff ff\n48 8b b3 68 01 00 00\n48 89 df\ne8 d8 f8 ff ff\n48 8b b3 70 01 00 00\n48 89 df\ne8 c9 f8 ff ff\n48 8b bb 98 00 00 00\n48 8b b3 78 01 00 00\n5b\ne9 05 fb ff ff\n'
p831
S'.text:00000000004024d0\n.text:00000000004024d1\n.text:00000000004024d4\n.text:00000000004024db\n.text:00000000004024e2\n.text:00000000004024e4\n.text:00000000004024e9\n.text:00000000004024f0\n.text:00000000004024f3\n.text:00000000004024f8\n.text:00000000004024ff\n.text:0000000000402502\n.text:0000000000402507\n.text:000000000040250e\n.text:0000000000402515\n.text:0000000000402516\n'
p832
tp833
sS'XtGetGC'
p834
(S'\n__stdcall XtGetGC()\n'
p835
V\u000avoid XtGetGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetGC_00608238)();\u000a  return;\u000a}\u000a\u000a
p836
S'JMP qword ptr [0x00608238]\n'
p837
S'ff 25 52 60 20 00\n'
p838
S'.plt:00000000004021e0\n'
p839
tp840
sS'SetTextWidthAndHeight'
p841
(S'\n__stdcall SetTextWidthAndHeight(UCSLabelWidget lw)\n'
p842
V\u000avoid SetTextWidthAndHeight(UCSLabelWidget lw)\u000a\u000a{\u000a  Dimension *pDVar1;\u000a  uchar uVar2;\u000a  XFontStruct *fs;\u000a  XFontSet p_Var3;\u000a  Dimension DVar4;\u000a  int iVar5;\u000a  long lVar6;\u000a  char *pcVar7;\u000a  size_t sVar8;\u000a  uint uVar9;\u000a  char *__s;\u000a  uint height;\u000a  uint width;\u000a  uint bw;\u000a  int y;\u000a  int x;\u000a  Window root;\u000a  Dimension local_48 [2];\u000a  Dimension local_44 [2];\u000a  Dimension local_40 [2];\u000a  undefined local_3c [4];\u000a  undefined local_38 [4];\u000a  undefined local_34 [4];\u000a  undefined local_30 [8];\u000a  \u000a  fs = (lw->label).font;\u000a  if (((lw->label).pixmap != 0) &&\u000a     (iVar5 = XGetGeometry(((lw->core).screen)->display,(lw->label).pixmap,local_30,local_34,\u000a                           local_38,local_40,local_44,local_3c,local_48), iVar5 != 0)) {\u000a    (lw->label).label_height = local_44[0];\u000a    (lw->label).label_width = local_40[0];\u000a    (lw->label).label_len = local_48[0];\u000a    return;\u000a  }\u000a  if ((lw->simple).international == 1) {\u000a    p_Var3 = (lw->label).fontset;\u000a    lVar6 = XExtentsOfFontSet(p_Var3);\u000a    (lw->label).label_height = *(Dimension *)(lVar6 + 6);\u000a    __s = (lw->label).label;\u000a    if (__s == (char *)0x0) {\u000aLAB_00403141:\u000a      (lw->label).label_len = 0;\u000a      (lw->label).label_width = 0;\u000a      return;\u000a    }\u000a    pcVar7 = strchr(__s,10);\u000a    if (pcVar7 == (char *)0x0) {\u000a      sVar8 = strlen(__s);\u000a      (lw->label).label_len = (Dimension)sVar8;\u000a      DVar4 = XmbTextEscapement(p_Var3,__s,sVar8 & 0xffff);\u000a      goto LAB_004031ef;\u000a    }\u000a    (lw->label).label_len = 0x7fff;\u000a    (lw->label).label_width = 0;\u000a    do {\u000a      iVar5 = XmbTextEscapement(p_Var3,__s,(ulong)(uint)((int)pcVar7 - (int)__s));\u000a      if ((int)(uint)(lw->label).label_width < iVar5) {\u000a        (lw->label).label_width = (Dimension)iVar5;\u000a      }\u000a      __s = pcVar7 + 1;\u000a      if (pcVar7[1] != 0) {\u000a        pDVar1 = &(lw->label).label_height;\u000a        *pDVar1 = *pDVar1 + *(short *)(lVar6 + 6);\u000a      }\u000a      pcVar7 = strchr(__s,10);\u000a    } while (pcVar7 != (char *)0x0);\u000a    if (*__s == 0) {\u000a      return;\u000a    }\u000a    sVar8 = strlen(__s);\u000a    iVar5 = XmbTextEscapement(p_Var3,__s,sVar8 & 0xffffffff);\u000a  }\u000a  else {\u000a    (lw->label).label_height = (fs->max_bounds).descent + (fs->max_bounds).ascent;\u000a    __s = (lw->label).label;\u000a    if (__s == (char *)0x0) goto LAB_00403141;\u000a    pcVar7 = strchr(__s,10);\u000a    if (pcVar7 == (char *)0x0) {\u000a      sVar8 = strlen(__s);\u000a      (lw->label).label_len = (Dimension)sVar8;\u000a      uVar2 = (lw->label).encoding;\u000a      if (uVar2 == 1) {\u000a        DVar4 = XTextWidth16(fs,__s,(sVar8 & 0xffff) >> 1);\u000a      }\u000a      else {\u000a        __s = (lw->label).label;\u000a        if (uVar2 == 2) {\u000a          iVar5 = _XawLabelWidthUCS(fs,__s);\u000a          DVar4 = (Dimension)iVar5;\u000a        }\u000a        else {\u000a          DVar4 = XTextWidth(fs,__s,sVar8 & 0xffff);\u000a        }\u000a      }\u000a      goto LAB_004031ef;\u000a    }\u000a    (lw->label).label_len = 0x7fff;\u000a    (lw->label).label_width = 0;\u000a    do {\u000a      uVar2 = (lw->label).encoding;\u000a      uVar9 = (int)pcVar7 - (int)__s;\u000a      if (uVar2 == 2) {\u000a        iVar5 = _XawLabelWidthUCS(fs,__s);\u000a      }\u000a      else {\u000a        if (uVar2 == 1) {\u000a          iVar5 = XTextWidth16(fs,__s,(ulong)(uint)((int)((uVar9 >> 0x1f) + uVar9) >> 1));\u000a        }\u000a        else {\u000a          iVar5 = XTextWidth(fs,__s,(ulong)uVar9);\u000a        }\u000a      }\u000a      if ((int)(uint)(lw->label).label_width < iVar5) {\u000a        (lw->label).label_width = (Dimension)iVar5;\u000a      }\u000a      __s = pcVar7 + 1;\u000a      if (pcVar7[1] != 0) {\u000a        pDVar1 = &(lw->label).label_height;\u000a        *pDVar1 = *pDVar1 + (fs->max_bounds).descent + (fs->max_bounds).ascent;\u000a      }\u000a      pcVar7 = strchr(__s,10);\u000a    } while (pcVar7 != (char *)0x0);\u000a    if (*__s == 0) {\u000a      return;\u000a    }\u000a    uVar2 = (lw->label).encoding;\u000a    if (uVar2 == 1) {\u000a      sVar8 = strlen(__s);\u000a      iVar5 = XTextWidth16(fs,__s,(ulong)(uint)((int)((sVar8 & 0xffffffff) >> 0x1f) + (int)sVar8 >>\u000a                                               1));\u000a    }\u000a    else {\u000a      sVar8 = strlen(__s);\u000a      if (uVar2 == 2) {\u000a        iVar5 = _XawLabelWidthUCS(fs,__s);\u000a      }\u000a      else {\u000a        iVar5 = XTextWidth(fs,__s,sVar8 & 0xffffffff);\u000a      }\u000a    }\u000a  }\u000a  DVar4 = (Dimension)iVar5;\u000a  if (iVar5 <= (int)(uint)(lw->label).label_width) {\u000a    return;\u000a  }\u000aLAB_004031ef:\u000a  (lw->label).label_width = DVar4;\u000a  return;\u000a}\u000a\u000a
p843
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV R15,RDI\nMOV R14,qword ptr [0x130 + R15]\nCMP qword ptr [0x150 + R15],0x0\nJZ 0x00402f26\nMOV RAX,qword ptr [0x98 + R15]\nMOV RSI,qword ptr [0x150 + R15]\nMOV RDI,qword ptr [RAX + 0x8]\nSUB RSP,0x8\nLEA RAX,[RSP + 0x8]\nLEA RBX,[RSP + 0x14]\nLEA R10,[RSP + 0xc]\nLEA RDX,[RSP + 0x20]\nLEA RCX,[RSP + 0x1c]\nLEA R8,[RSP + 0x18]\nLEA R9,[RSP + 0x10]\nPUSH RAX\nPUSH RBX\nPUSH R10\nCALL 0x00402130\nADD RSP,0x20\nTEST EAX,EAX\nJZ 0x00402f26\nMOVZX EAX,word ptr [RSP + 0x4]\nMOV word ptr [0x186 + R15],AX\nMOVZX EAX,word ptr [RSP + 0x8]\nMOV word ptr [0x184 + R15],AX\nMOVZX EAX,word ptr [RSP]\nMOV word ptr [0x188 + R15],AX\nJMP 0x004031f7\nCMP byte ptr [0xf8 + R15],0x1\nJNZ 0x00403016\nMOV R14,qword ptr [0x138 + R15]\nMOV RDI,R14\nCALL 0x00402190\nMOV R12,RAX\nMOVZX EAX,word ptr [R12 + 0x6]\nMOV word ptr [0x186 + R15],AX\nMOV R13,qword ptr [0x140 + R15]\nTEST R13,R13\nJZ 0x00403141\nMOV ESI,0xa\nMOV RDI,R13\nCALL 0x00401f10\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040315a\nMOV word ptr [0x188 + R15],0x7fff\nMOV word ptr [0x184 + R15],0x0\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDX,EBX\nSUB EDX,R13D\nMOV RDI,R14\nMOV RSI,R13\nCALL 0x00402260\nMOVZX ECX,word ptr [0x184 + R15]\nCMP EAX,ECX\nJLE 0x00402fc4\nMOV word ptr [0x184 + R15],AX\nCMP byte ptr [RBX + 0x1],0x0\nLEA R13,[RBX + 0x1]\nJZ 0x00402fdc\nMOVZX EAX,word ptr [R12 + 0x6]\nADD word ptr [0x186 + R15],AX\nMOV ESI,0xa\nMOV RDI,R13\nCALL 0x00401f10\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00402fa0\nCMP byte ptr [R13],0x0\nJZ 0x004031f7\nMOV RDI,R13\nCALL 0x00401ef0\nMOV RDI,R14\nMOV RSI,R13\nMOV EDX,EAX\nCALL 0x00402260\nJMP 0x004031dc\nMOVZX EAX,word ptr [R14 + 0x4c]\nADD AX,word ptr [R14 + 0x4a]\nMOV word ptr [0x186 + R15],AX\nMOV R12,qword ptr [0x140 + R15]\nTEST R12,R12\nJZ 0x00403141\nMOV ESI,0xa\nMOV RDI,R12\nCALL 0x00401f10\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040317a\nMOV word ptr [0x188 + R15],0x7fff\nMOV word ptr [0x184 + R15],0x0\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EAX,byte ptr [0x159 + R15]\nMOV EDX,EBX\nSUB EDX,R12D\nCMP AL,0x2\nJZ 0x004030a0\nCMP AL,0x1\nJNZ 0x004030b0\nMOV EAX,EDX\nSHR EAX,0x1f\nADD EAX,EDX\nSAR EAX,1\nMOV RDI,R14\nMOV RSI,R12\nMOV EDX,EAX\nCALL 0x00401f80\nJMP 0x004030bb\nMOV RDI,R14\nMOV RSI,R12\nCALL 0x00403290\nJMP 0x004030bb\nMOV RDI,R14\nMOV RSI,R12\nCALL 0x00402210\nMOVZX ECX,word ptr [0x184 + R15]\nCMP EAX,ECX\nJLE 0x004030cf\nMOV word ptr [0x184 + R15],AX\nCMP byte ptr [RBX + 0x1],0x0\nLEA R12,[RBX + 0x1]\nJZ 0x004030eb\nMOVZX EAX,word ptr [R14 + 0x4c]\nADD AX,word ptr [R14 + 0x4a]\nADD word ptr [0x186 + R15],AX\nMOV ESI,0xa\nMOV RDI,R12\nCALL 0x00401f10\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00403070\nCMP byte ptr [R12],0x0\nJZ 0x004031f7\nMOV BL,byte ptr [0x159 + R15]\nMOV RDI,R12\nCMP BL,0x1\nJNZ 0x004031a8\nCALL 0x00401ef0\nMOV ECX,EAX\nSHR ECX,0x1f\nLEA EDX,[RCX + RAX*0x1]\nSAR EDX,1\nMOV RDI,R14\nMOV RSI,R12\nCALL 0x00401f80\nJMP 0x004031dc\nMOV word ptr [0x188 + R15],0x0\nMOV word ptr [0x184 + R15],0x0\nJMP 0x004031f7\nMOV RDI,R13\nCALL 0x00401ef0\nMOV word ptr [0x188 + R15],AX\nMOVZX EDX,AX\nMOV RDI,R14\nMOV RSI,R13\nCALL 0x00402260\nJMP 0x004031ef\nMOV RDI,R12\nCALL 0x00401ef0\nMOV word ptr [0x188 + R15],AX\nMOV CL,byte ptr [0x159 + R15]\nMOVZX EDX,AX\nCMP CL,0x1\nJNZ 0x004031c1\nSHR EDX,1\nMOV RDI,R14\nMOV RSI,R12\nCALL 0x00401f80\nJMP 0x004031ef\nCALL 0x00401ef0\nMOV RDI,R14\nMOV RSI,R12\nMOV EDX,EAX\nCMP BL,0x2\nJNZ 0x004031d7\nCALL 0x00403290\nJMP 0x004031dc\nMOV RSI,qword ptr [0x140 + R15]\nMOV RDI,R14\nCMP CL,0x2\nJNZ 0x004031ea\nCALL 0x00403290\nJMP 0x004031ef\nCALL 0x00402210\nMOVZX ECX,word ptr [0x184 + R15]\nCMP EAX,ECX\nJG 0x004031ef\nJMP 0x004031f7\nCALL 0x00402210\nMOV word ptr [0x184 + R15],AX\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p844
S'41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 20\n49 89 ff\n4d 8b b7 30 01 00 00\n49 83 bf 50 01 00 00 00\n74 75\n49 8b 87 98 00 00 00\n49 8b b7 50 01 00 00\n48 8b 78 08\n48 83 ec 08\n48 8d 44 24 08\n48 8d 5c 24 14\n4c 8d 54 24 0c\n48 8d 54 24 20\n48 8d 4c 24 1c\n4c 8d 44 24 18\n4c 8d 4c 24 10\n50\n53\n41 52\ne8 3d f2 ff ff\n48 83 c4 20\n85 c0\n74 2b\n0f b7 44 24 04\n66 41 89 87 86 01 00 00\n0f b7 44 24 08\n66 41 89 87 84 01 00 00\n0f b7 04 24\n66 41 89 87 88 01 00 00\ne9 d1 02 00 00\n41 80 bf f8 00 00 00 01\n0f 85 e2 00 00 00\n4d 8b b7 38 01 00 00\n4c 89 f7\ne8 4d f2 ff ff\n49 89 c4\n41 0f b7 44 24 06\n66 41 89 87 86 01 00 00\n4d 8b af 40 01 00 00\n4d 85 ed\n0f 84 dd 01 00 00\nbe 0a 00 00 00\n4c 89 ef\ne8 9f ef ff ff\n48 89 c3\n48 85 db\n0f 84 dd 01 00 00\n66 41 c7 87 88 01 00 00 ff 7f\n66 41 c7 87 84 01 00 00 00 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 da\n44 29 ea\n4c 89 f7\n4c 89 ee\ne8 b0 f2 ff ff\n41 0f b7 8f 84 01 00 00\n39 c8\n7e 08\n66 41 89 87 84 01 00 00\n80 7b 01 00\n4c 8d 6b 01\n74 0e\n41 0f b7 44 24 06\n66 41 01 87 86 01 00 00\nbe 0a 00 00 00\n4c 89 ef\ne8 27 ef ff ff\n48 89 c3\n48 85 db\n75 af\n41 80 7d 00 00\n0f 84 fb 01 00 00\n4c 89 ef\ne8 ec ee ff ff\n4c 89 f7\n4c 89 ee\n89 c2\ne8 4f f2 ff ff\ne9 c6 01 00 00\n41 0f b7 46 4c\n66 41 03 46 4a\n66 41 89 87 86 01 00 00\n4d 8b a7 40 01 00 00\n4d 85 e4\n0f 84 09 01 00 00\nbe 0a 00 00 00\n4c 89 e7\ne8 cb ee ff ff\n48 89 c3\n48 85 db\n0f 84 29 01 00 00\n66 41 c7 87 88 01 00 00 ff 7f\n66 41 c7 87 84 01 00 00 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 0f b6 87 59 01 00 00\n89 da\n44 29 e2\n3c 02\n74 1f\n3c 01\n75 2b\n89 d0\nc1 e8 1f\n01 d0\nd1 f8\n4c 89 f7\n4c 89 e6\n89 c2\ne8 e5 ee ff ff\neb 1e\n4c 89 f7\n4c 89 e6\ne8 e5 01 00 00\neb 0e\n4c 89 f7\n4c 89 e6\ne8 55 f1 ff ff\n41 0f b7 8f 84 01 00 00\n39 c8\n7e 08\n66 41 89 87 84 01 00 00\n80 7b 01 00\n4c 8d 63 01\n74 12\n41 0f b7 46 4c\n66 41 03 46 4a\n66 41 01 87 86 01 00 00\nbe 0a 00 00 00\n4c 89 e7\ne8 18 ee ff ff\n48 89 c3\n48 85 db\n0f 85 6c ff ff ff\n41 80 3c 24 00\n0f 84 e8 00 00 00\n41 8a 9f 59 01 00 00\n4c 89 e7\n80 fb 01\n0f 85 86 00 00 00\ne8 c9 ed ff ff\n89 c1\nc1 e9 1f\n8d 14 01\nd1 fa\n4c 89 f7\n4c 89 e6\ne8 44 ee ff ff\ne9 9b 00 00 00\n66 41 c7 87 88 01 00 00 00 00\n66 41 c7 87 84 01 00 00 00 00\ne9 9d 00 00 00\n4c 89 ef\ne8 8e ed ff ff\n66 41 89 87 88 01 00 00\n0f b7 d0\n4c 89 f7\n4c 89 ee\ne8 e8 f0 ff ff\neb 75\n4c 89 e7\ne8 6e ed ff ff\n66 41 89 87 88 01 00 00\n41 8a 8f 59 01 00 00\n0f b7 d0\n80 f9 01\n75 28\nd1 ea\n4c 89 f7\n4c 89 e6\ne8 da ed ff ff\neb 47\ne8 43 ed ff ff\n4c 89 f7\n4c 89 e6\n89 c2\n80 fb 02\n75 1d\ne8 d1 00 00 00\neb 1b\n49 8b b7 40 01 00 00\n4c 89 f7\n80 f9 02\n75 1a\ne8 bb 00 00 00\neb 18\ne8 34 f0 ff ff\n41 0f b7 8f 84 01 00 00\n39 c8\n7f 07\neb 0d\ne8 21 f0 ff ff\n66 41 89 87 84 01 00 00\n48 83 c4 20\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p845
S'.text:0000000000402e90\n.text:0000000000402e92\n.text:0000000000402e94\n.text:0000000000402e96\n.text:0000000000402e98\n.text:0000000000402e99\n.text:0000000000402e9d\n.text:0000000000402ea0\n.text:0000000000402ea7\n.text:0000000000402eaf\n.text:0000000000402eb1\n.text:0000000000402eb8\n.text:0000000000402ebf\n.text:0000000000402ec3\n.text:0000000000402ec7\n.text:0000000000402ecc\n.text:0000000000402ed1\n.text:0000000000402ed6\n.text:0000000000402edb\n.text:0000000000402ee0\n.text:0000000000402ee5\n.text:0000000000402eea\n.text:0000000000402eeb\n.text:0000000000402eec\n.text:0000000000402eee\n.text:0000000000402ef3\n.text:0000000000402ef7\n.text:0000000000402ef9\n.text:0000000000402efb\n.text:0000000000402f00\n.text:0000000000402f08\n.text:0000000000402f0d\n.text:0000000000402f15\n.text:0000000000402f19\n.text:0000000000402f21\n.text:0000000000402f26\n.text:0000000000402f2e\n.text:0000000000402f34\n.text:0000000000402f3b\n.text:0000000000402f3e\n.text:0000000000402f43\n.text:0000000000402f46\n.text:0000000000402f4c\n.text:0000000000402f54\n.text:0000000000402f5b\n.text:0000000000402f5e\n.text:0000000000402f64\n.text:0000000000402f69\n.text:0000000000402f6c\n.text:0000000000402f71\n.text:0000000000402f74\n.text:0000000000402f77\n.text:0000000000402f7d\n.text:0000000000402f87\n.text:0000000000402f91\n.text:0000000000402fa0\n.text:0000000000402fa2\n.text:0000000000402fa5\n.text:0000000000402fa8\n.text:0000000000402fab\n.text:0000000000402fb0\n.text:0000000000402fb8\n.text:0000000000402fba\n.text:0000000000402fbc\n.text:0000000000402fc4\n.text:0000000000402fc8\n.text:0000000000402fcc\n.text:0000000000402fce\n.text:0000000000402fd4\n.text:0000000000402fdc\n.text:0000000000402fe1\n.text:0000000000402fe4\n.text:0000000000402fe9\n.text:0000000000402fec\n.text:0000000000402fef\n.text:0000000000402ff1\n.text:0000000000402ff6\n.text:0000000000402ffc\n.text:0000000000402fff\n.text:0000000000403004\n.text:0000000000403007\n.text:000000000040300a\n.text:000000000040300c\n.text:0000000000403011\n.text:0000000000403016\n.text:000000000040301b\n.text:0000000000403020\n.text:0000000000403028\n.text:000000000040302f\n.text:0000000000403032\n.text:0000000000403038\n.text:000000000040303d\n.text:0000000000403040\n.text:0000000000403045\n.text:0000000000403048\n.text:000000000040304b\n.text:0000000000403051\n.text:000000000040305b\n.text:0000000000403065\n.text:0000000000403070\n.text:0000000000403078\n.text:000000000040307a\n.text:000000000040307d\n.text:000000000040307f\n.text:0000000000403081\n.text:0000000000403083\n.text:0000000000403085\n.text:0000000000403087\n.text:000000000040308a\n.text:000000000040308c\n.text:000000000040308e\n.text:0000000000403091\n.text:0000000000403094\n.text:0000000000403096\n.text:000000000040309b\n.text:00000000004030a0\n.text:00000000004030a3\n.text:00000000004030a6\n.text:00000000004030ab\n.text:00000000004030b0\n.text:00000000004030b3\n.text:00000000004030b6\n.text:00000000004030bb\n.text:00000000004030c3\n.text:00000000004030c5\n.text:00000000004030c7\n.text:00000000004030cf\n.text:00000000004030d3\n.text:00000000004030d7\n.text:00000000004030d9\n.text:00000000004030de\n.text:00000000004030e3\n.text:00000000004030eb\n.text:00000000004030f0\n.text:00000000004030f3\n.text:00000000004030f8\n.text:00000000004030fb\n.text:00000000004030fe\n.text:0000000000403104\n.text:0000000000403109\n.text:000000000040310f\n.text:0000000000403116\n.text:0000000000403119\n.text:000000000040311c\n.text:0000000000403122\n.text:0000000000403127\n.text:0000000000403129\n.text:000000000040312c\n.text:000000000040312f\n.text:0000000000403131\n.text:0000000000403134\n.text:0000000000403137\n.text:000000000040313c\n.text:0000000000403141\n.text:000000000040314b\n.text:0000000000403155\n.text:000000000040315a\n.text:000000000040315d\n.text:0000000000403162\n.text:000000000040316a\n.text:000000000040316d\n.text:0000000000403170\n.text:0000000000403173\n.text:0000000000403178\n.text:000000000040317a\n.text:000000000040317d\n.text:0000000000403182\n.text:000000000040318a\n.text:0000000000403191\n.text:0000000000403194\n.text:0000000000403197\n.text:0000000000403199\n.text:000000000040319b\n.text:000000000040319e\n.text:00000000004031a1\n.text:00000000004031a6\n.text:00000000004031a8\n.text:00000000004031ad\n.text:00000000004031b0\n.text:00000000004031b3\n.text:00000000004031b5\n.text:00000000004031b8\n.text:00000000004031ba\n.text:00000000004031bf\n.text:00000000004031c1\n.text:00000000004031c8\n.text:00000000004031cb\n.text:00000000004031ce\n.text:00000000004031d0\n.text:00000000004031d5\n.text:00000000004031d7\n.text:00000000004031dc\n.text:00000000004031e4\n.text:00000000004031e6\n.text:00000000004031e8\n.text:00000000004031ea\n.text:00000000004031ef\n.text:00000000004031f7\n.text:00000000004031fb\n.text:00000000004031fc\n.text:00000000004031fe\n.text:0000000000403200\n.text:0000000000403202\n.text:0000000000403204\n'
p846
tp847
sS'EnableAllItems'
p848
(S'\n__stdcall EnableAllItems()\n'
p849
V\u000avoid EnableAllItems(int iParm1)\u000a\u000a{\u000a  Boolean *pBVar1;\u000a  int iVar2;\u000a  \u000a  iVar2 = fieldValues[(long)iParm1]->count;\u000a  if (iVar2 != 0) {\u000a    pBVar1 = &fieldValues[(long)iParm1]->value[0].enable;\u000a    do {\u000a      *pBVar1 = 1;\u000a      pBVar1 = pBVar1 + 0x30;\u000a      iVar2 = iVar2 + -1;\u000a    } while (iVar2 != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p850
S'MOVSXD RAX,EDI\nMOV RAX,qword ptr [0x608ac0 + RAX*0x8]\nMOV ECX,dword ptr [RAX]\nTEST ECX,ECX\nJZ 0x0040522b\nADD RAX,0x38\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV byte ptr [RAX],0x1\nADD RAX,0x30\nDEC ECX\nJNZ 0x00405220\nRET\n'
p851
S'48 63 c7\n48 8b 04 c5 c0 8a 60 00\n8b 08\n85 c9\n74 1a\n48 83 c0 38\n66 66 2e 0f 1f 84 00 00 00 00 00\nc6 00 01\n48 83 c0 30\nff c9\n75 f5\nc3\n'
p852
S'.text:0000000000405200\n.text:0000000000405203\n.text:000000000040520b\n.text:000000000040520d\n.text:000000000040520f\n.text:0000000000405211\n.text:0000000000405215\n.text:0000000000405220\n.text:0000000000405223\n.text:0000000000405227\n.text:0000000000405229\n.text:000000000040522b\n'
p853
tp854
sS'XtDisownSelection'
p855
(S'\n__stdcall XtDisownSelection()\n'
p856
V\u000avoid XtDisownSelection(void)\u000a\u000a{\u000a  (*(code *)PTR_XtDisownSelection_00608190)();\u000a  return;\u000a}\u000a\u000a
p857
S'JMP qword ptr [0x00608190]\n'
p858
S'ff 25 fa 60 20 00\n'
p859
S'.plt:0000000000402090\n'
p860
tp861
sS'snprintf'
p862
(S'\n__stdcall snprintf(char * __s, size_t __maxlen, char * __format)\n'
p863
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint snprintf(char *__s,size_t __maxlen,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_snprintf_00608100)();\u000a  return iVar1;\u000a}\u000a\u000a
p864
S'JMP qword ptr [0x00608100]\n'
p865
S'ff 25 8a 61 20 00\n'
p866
S'.plt:0000000000401f70\n'
p867
tp868
sS'XtSetValues'
p869
(S'\n__stdcall XtSetValues()\n'
p870
V\u000avoid XtSetValues(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetValues_006080a8)();\u000a  return;\u000a}\u000a\u000a
p871
S'JMP qword ptr [0x006080a8]\n'
p872
S'ff 25 e2 61 20 00\n'
p873
S'.plt:0000000000401ec0\n'
p874
tp875
sS'qsort'
p876
(S'\n__stdcall qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)\n'
p877
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\u000a\u000a{\u000a  (*(code *)PTR_qsort_00608070)();\u000a  return;\u000a}\u000a\u000a
p878
S'JMP qword ptr [0x00608070]\n'
p879
S'ff 25 1a 62 20 00\n'
p880
S'.plt:0000000000401e50\n'
p881
tp882
sS'register_tm_clones'
p883
(S'\n__stdcall register_tm_clones()\n'
p884
V\u000a/* WARNING: Removing unreachable block (ram,0x00402363) */\u000a/* WARNING: Removing unreachable block (ram,0x0040236d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p885
S'MOV ESI,0x6088b8\nPUSH RBP\nSUB RSI,0x6088b8\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00402378\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402378\nPOP RBP\nMOV EDI,0x6088b8\nJMP RAX\nPOP RBP\nRET\n'
p886
S'be b8 88 60 00\n55\n48 81 ee b8 88 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf b8 88 60 00\nff e0\n5d\nc3\n'
p887
S'.text:0000000000402340\n.text:0000000000402345\n.text:0000000000402346\n.text:000000000040234d\n.text:0000000000402351\n.text:0000000000402354\n.text:0000000000402357\n.text:000000000040235b\n.text:000000000040235e\n.text:0000000000402361\n.text:0000000000402363\n.text:0000000000402368\n.text:000000000040236b\n.text:000000000040236d\n.text:000000000040236e\n.text:0000000000402373\n.text:0000000000402378\n.text:0000000000402379\n'
p888
tp889
sS'ClassInitialize'
p890
(S'\n__stdcall ClassInitialize()\n'
p891
V\u000avoid ClassInitialize(void)\u000a\u000a{\u000a  XawInitializeWidgetSet();\u000a  (*(code *)PTR_XtAddConverter_00608268)(0x607a85,0x607a3a,XmuCvtStringToJustify,0,0);\u000a  return;\u000a}\u000a\u000a
p892
S'PUSH RAX\nCALL 0x00401fb0\nMOV EDI,0x607a85\nMOV ESI,0x607a3a\nMOV EDX,0x401f60\nXOR ECX,ECX\nXOR R8D,R8D\nPOP RAX\nJMP 0x00402240\n'
p893
S'50\ne8 da fb ff ff\nbf 85 7a 60 00\nbe 3a 7a 60 00\nba 60 1f 40 00\n31 c9\n45 31 c0\n58\ne9 50 fe ff ff\n'
p894
S'.text:00000000004023d0\n.text:00000000004023d1\n.text:00000000004023d6\n.text:00000000004023db\n.text:00000000004023e0\n.text:00000000004023e5\n.text:00000000004023e7\n.text:00000000004023ea\n.text:00000000004023eb\n'
p895
tp896
sS'SelectField'
p897
(S'\n__stdcall SelectField(Widget w, XtPointer closure, XtPointer callData)\n'
p898
V\u000avoid SelectField(Widget w,XtPointer closure,XtPointer callData)\u000a\u000a{\u000a  FieldValueList *pFVar1;\u000a  uint *puVar2;\u000a  int iVar3;\u000a  \u000a  pFVar1 = fieldValues[(long)(int)closure];\u000a  iVar3 = pFVar1->count;\u000a  printf("field %d:\u005cn");\u000a  if (iVar3 != 0) {\u000a    puVar2 = (uint *)&pFVar1->value[0].count;\u000a    do {\u000a      printf(" %s: %d fonts\u005cn",*(undefined8 *)(puVar2 + -4),(ulong)*puVar2);\u000a      puVar2 = puVar2 + 0xc;\u000a      iVar3 = iVar3 + -1;\u000a    } while (iVar3 != 0);\u000a  }\u000a  (*(code *)PTR_putchar_00608040)(10);\u000a  return;\u000a}\u000a\u000a
p899
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOVSXD RSI,ESI\nMOV RBX,qword ptr [0x608ac0 + RSI*0x8]\nMOV EBP,dword ptr [RBX]\nMOV EDI,0x405b14\nXOR EAX,EAX\nCALL 0x00401f20\nTEST EBP,EBP\nJZ 0x00403eaa\nADD RBX,0x28\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RSI,qword ptr [RBX + -0x10]\nMOV EDX,dword ptr [RBX]\nMOV EDI,0x405b1f\nXOR EAX,EAX\nCALL 0x00401f20\nADD RBX,0x30\nDEC EBP\nJNZ 0x00403e90\nMOV EDI,0xa\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401df0\n'
p900
S'55\n53\n50\n48 63 f6\n48 8b 1c f5 c0 8a 60 00\n8b 2b\nbf 14 5b 40 00\n31 c0\ne8 a4 e0 ff ff\n85 ed\n74 2a\n48 83 c3 28\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 73 f0\n8b 13\nbf 1f 5b 40 00\n31 c0\ne8 7e e0 ff ff\n48 83 c3 30\nff cd\n75 e6\nbf 0a 00 00 00\n48 83 c4 08\n5b\n5d\ne9 36 df ff ff\n'
p901
S'.text:0000000000403e60\n.text:0000000000403e61\n.text:0000000000403e62\n.text:0000000000403e63\n.text:0000000000403e66\n.text:0000000000403e6e\n.text:0000000000403e70\n.text:0000000000403e75\n.text:0000000000403e77\n.text:0000000000403e7c\n.text:0000000000403e7e\n.text:0000000000403e80\n.text:0000000000403e84\n.text:0000000000403e90\n.text:0000000000403e94\n.text:0000000000403e96\n.text:0000000000403e9b\n.text:0000000000403e9d\n.text:0000000000403ea2\n.text:0000000000403ea6\n.text:0000000000403ea8\n.text:0000000000403eaa\n.text:0000000000403eaf\n.text:0000000000403eb3\n.text:0000000000403eb4\n.text:0000000000403eb5\n'
p902
tp903
sS'XSync'
p904
(S'\n__stdcall XSync()\n'
p905
V\u000avoid XSync(void)\u000a\u000a{\u000a  (*(code *)PTR_XSync_006081d8)();\u000a  return;\u000a}\u000a\u000a
p906
S'JMP qword ptr [0x006081d8]\n'
p907
S'ff 25 b2 60 20 00\n'
p908
S'.plt:0000000000402120\n'
p909
tp910
sS'_Reposition'
p911
(S'\n__stdcall _Reposition(UCSLabelWidget lw, Position * dx, Position * dy)\n'
p912
V\u000avoid _Reposition(UCSLabelWidget lw,Position *dx,Position *dy)\u000a\u000a{\u000a  Dimension DVar1;\u000a  XtJustify XVar2;\u000a  uint uVar3;\u000a  short *in_RCX;\u000a  short sVar4;\u000a  short *in_R8;\u000a  short sVar5;\u000a  \u000a  DVar1 = (lw->label).internal_width;\u000a  if ((lw->label).left_bitmap == 0) {\u000a    sVar5 = 0;\u000a  }\u000a  else {\u000a    sVar5 = (short)(lw->label).lbm_width + DVar1;\u000a  }\u000a  sVar5 = sVar5 + DVar1;\u000a  XVar2 = (lw->label).justify;\u000a  sVar4 = sVar5;\u000a  if (XVar2 != XtJustifyLeft) {\u000a    if (XVar2 == XtJustifyRight) {\u000a      sVar4 = ((short)dx - DVar1) - (lw->label).label_width;\u000a    }\u000a    else {\u000a      uVar3 = ((uint)dx & 0xffff) - (uint)(lw->label).label_width;\u000a      sVar4 = (short)((uVar3 >> 0x1f) + uVar3 >> 1);\u000a    }\u000a  }\u000a  if (sVar4 < sVar5) {\u000a    sVar4 = sVar5;\u000a  }\u000a  *in_RCX = sVar4 - (lw->label).label_x;\u000a  (lw->label).label_x = sVar4;\u000a  uVar3 = ((uint)dy & 0xffff) - (uint)(lw->label).label_height;\u000a  sVar5 = (short)((int)((uVar3 >> 0x1f) + uVar3) >> 1);\u000a  *in_R8 = sVar5 - (lw->label).label_y;\u000a  (lw->label).label_y = sVar5;\u000a  return;\u000a}\u000a\u000a
p913
S'MOVZX R9D,word ptr [0x14c + RDI]\nCMP qword ptr [0x160 + RDI],0x0\nJZ 0x004034be\nMOV R10D,dword ptr [0x190 + RDI]\nADD R10D,R9D\nJMP 0x004034c1\nXOR R10D,R10D\nADD R10D,R9D\nMOV R11D,dword ptr [0x148 + RDI]\nTEST R11D,R11D\nMOV AX,R10W\nJZ 0x004034fe\nCMP R11D,0x2\nJNZ 0x004034e9\nSUB ESI,R9D\nSUB SI,word ptr [0x184 + RDI]\nMOV AX,SI\nJMP 0x004034fe\nMOVZX ESI,SI\nMOVZX EAX,word ptr [0x184 + RDI]\nSUB ESI,EAX\nMOV EAX,ESI\nSHR EAX,0x1f\nADD EAX,ESI\nSHR EAX,1\nCWDE\nMOVSX ESI,R10W\nCMP EAX,ESI\nCMOVL AX,R10W\nMOV ESI,EAX\nSUB SI,word ptr [0x180 + RDI]\nMOV word ptr [RCX],SI\nMOV word ptr [0x180 + RDI],AX\nMOVZX EAX,DX\nMOVZX ECX,word ptr [0x186 + RDI]\nSUB EAX,ECX\nMOV ECX,EAX\nSHR ECX,0x1f\nADD ECX,EAX\nSAR ECX,1\nMOVZX EAX,word ptr [0x182 + RDI]\nMOV EDX,ECX\nSUB EDX,EAX\nMOV word ptr [R8],DX\nMOV word ptr [0x182 + RDI],CX\nRET\n'
p914
S'44 0f b7 8f 4c 01 00 00\n48 83 bf 60 01 00 00 00\n74 0c\n44 8b 97 90 01 00 00\n45 01 ca\neb 03\n45 31 d2\n45 01 ca\n44 8b 9f 48 01 00 00\n45 85 db\n66 44 89 d0\n74 2a\n41 83 fb 02\n75 0f\n44 29 ce\n66 2b b7 84 01 00 00\n66 89 f0\neb 15\n0f b7 f6\n0f b7 87 84 01 00 00\n29 c6\n89 f0\nc1 e8 1f\n01 f0\nd1 e8\n98\n41 0f bf f2\n39 f0\n66 41 0f 4c c2\n89 c6\n66 2b b7 80 01 00 00\n66 89 31\n66 89 87 80 01 00 00\n0f b7 c2\n0f b7 8f 86 01 00 00\n29 c8\n89 c1\nc1 e9 1f\n01 c1\nd1 f9\n0f b7 87 82 01 00 00\n89 ca\n29 c2\n66 41 89 10\n66 89 8f 82 01 00 00\nc3\n'
p915
S'.text:00000000004034a0\n.text:00000000004034a8\n.text:00000000004034b0\n.text:00000000004034b2\n.text:00000000004034b9\n.text:00000000004034bc\n.text:00000000004034be\n.text:00000000004034c1\n.text:00000000004034c4\n.text:00000000004034cb\n.text:00000000004034ce\n.text:00000000004034d2\n.text:00000000004034d4\n.text:00000000004034d8\n.text:00000000004034da\n.text:00000000004034dd\n.text:00000000004034e4\n.text:00000000004034e7\n.text:00000000004034e9\n.text:00000000004034ec\n.text:00000000004034f3\n.text:00000000004034f5\n.text:00000000004034f7\n.text:00000000004034fa\n.text:00000000004034fc\n.text:00000000004034fe\n.text:00000000004034ff\n.text:0000000000403503\n.text:0000000000403505\n.text:000000000040350a\n.text:000000000040350c\n.text:0000000000403513\n.text:0000000000403516\n.text:000000000040351d\n.text:0000000000403520\n.text:0000000000403527\n.text:0000000000403529\n.text:000000000040352b\n.text:000000000040352e\n.text:0000000000403530\n.text:0000000000403532\n.text:0000000000403539\n.text:000000000040353b\n.text:000000000040353d\n.text:0000000000403541\n.text:0000000000403548\n'
p916
tp917
sS'XGetAtomName'
p918
(S'\n__stdcall XGetAtomName()\n'
p919
V\u000avoid XGetAtomName(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetAtomName_006081c0)();\u000a  return;\u000a}\u000a\u000a
p920
S'JMP qword ptr [0x006081c0]\n'
p921
S'ff 25 ca 60 20 00\n'
p922
S'.plt:00000000004020f0\n'
p923
tp924
sS'QueryGeometry'
p925
(S'\n__stdcall QueryGeometry(Widget w, XtWidgetGeometry * intended, XtWidgetGeometry * preferred)\n'
p926
V\u000aXtGeometryResult QueryGeometry(Widget w,XtWidgetGeometry *intended,XtWidgetGeometry *preferred)\u000a\u000a{\u000a  short sVar1;\u000a  XtGeometryResult XVar2;\u000a  short sVar3;\u000a  Dimension DVar4;\u000a  \u000a  preferred->request_mode = 0xc;\u000a  sVar1 = *(short *)((long)&w[1].core.border_pixmap + 4);\u000a  if (w[1].core.name == (String)0x0) {\u000a    sVar3 = 0;\u000a  }\u000a  else {\u000a    sVar3 = sVar1 + (short)*(undefined4 *)&w[1].core.background_pixmap;\u000a  }\u000a  preferred->width = *(short *)&w[1].core.field_0xb4 + sVar1 * 2 + sVar3;\u000a  DVar4 = *(short *)((long)&w[1].core.border_pixmap + 6) * 2 + *(short *)&w[1].core.field_0xb6;\u000a  preferred->height = DVar4;\u000a  if (((((intended->request_mode & 0xc) != 0xc) || (intended->width != preferred->width)) ||\u000a      (XVar2 = XtGeometryYes, intended->height != DVar4)) &&\u000a     ((preferred->width != (w->core).width ||\u000a      (XVar2 = XtGeometryNo, preferred->height != (w->core).height)))) {\u000a    XVar2 = XtGeometryAlmost;\u000a  }\u000a  return XVar2;\u000a}\u000a\u000a
p927
S'MOV dword ptr [RDX],0xc\nMOVZX EAX,word ptr [0x184 + RDI]\nMOVZX ECX,word ptr [0x14c + RDI]\nLEA EAX,[RAX + RCX*0x2]\nCMP qword ptr [0x160 + RDI],0x0\nJZ 0x00402ce9\nADD ECX,dword ptr [0x190 + RDI]\nJMP 0x00402ceb\nXOR ECX,ECX\nADD EAX,ECX\nMOV word ptr [RDX + 0x8],AX\nMOVZX ECX,word ptr [0x14e + RDI]\nADD ECX,ECX\nADD CX,word ptr [0x186 + RDI]\nMOV word ptr [RDX + 0xa],CX\nMOV EAX,dword ptr [RSI]\nAND EAX,0xc\nMOVZX R8D,word ptr [RDX + 0x8]\nCMP EAX,0xc\nJNZ 0x00402d23\nCMP word ptr [RSI + 0x8],R8W\nJNZ 0x00402d23\nXOR EAX,EAX\nCMP word ptr [RSI + 0xa],CX\nJZ 0x00402d3e\nCMP R8W,word ptr [RDI + 0x34]\nJNZ 0x00402d39\nMOVZX ECX,word ptr [RDX + 0xa]\nMOV EAX,0x1\nCMP CX,word ptr [RDI + 0x36]\nJZ 0x00402d3e\nMOV EAX,0x2\nRET\n'
p928
S'c7 02 0c 00 00 00\n0f b7 87 84 01 00 00\n0f b7 8f 4c 01 00 00\n8d 04 48\n48 83 bf 60 01 00 00 00\n74 08\n03 8f 90 01 00 00\neb 02\n31 c9\n01 c8\n66 89 42 08\n0f b7 8f 4e 01 00 00\n01 c9\n66 03 8f 86 01 00 00\n66 89 4a 0a\n8b 06\n83 e0 0c\n44 0f b7 42 08\n83 f8 0c\n75 0f\n66 44 39 46 08\n75 08\n31 c0\n66 39 4e 0a\n74 1b\n66 44 3b 47 34\n75 0f\n0f b7 4a 0a\nb8 01 00 00 00\n66 3b 4f 36\n74 05\nb8 02 00 00 00\nc3\n'
p929
S'.text:0000000000402cc0\n.text:0000000000402cc6\n.text:0000000000402ccd\n.text:0000000000402cd4\n.text:0000000000402cd7\n.text:0000000000402cdf\n.text:0000000000402ce1\n.text:0000000000402ce7\n.text:0000000000402ce9\n.text:0000000000402ceb\n.text:0000000000402ced\n.text:0000000000402cf1\n.text:0000000000402cf8\n.text:0000000000402cfa\n.text:0000000000402d01\n.text:0000000000402d05\n.text:0000000000402d07\n.text:0000000000402d0a\n.text:0000000000402d0f\n.text:0000000000402d12\n.text:0000000000402d14\n.text:0000000000402d19\n.text:0000000000402d1b\n.text:0000000000402d1d\n.text:0000000000402d21\n.text:0000000000402d23\n.text:0000000000402d28\n.text:0000000000402d2a\n.text:0000000000402d2e\n.text:0000000000402d33\n.text:0000000000402d37\n.text:0000000000402d39\n.text:0000000000402d3e\n'
p930
tp931
sS'XtOverrideTranslations'
p932
(S'\n__stdcall XtOverrideTranslations()\n'
p933
V\u000avoid XtOverrideTranslations(void)\u000a\u000a{\u000a  (*(code *)PTR_XtOverrideTranslations_00608180)();\u000a  return;\u000a}\u000a\u000a
p934
S'JMP qword ptr [0x00608180]\n'
p935
S'ff 25 0a 61 20 00\n'
p936
S'.plt:0000000000402070\n'
p937
tp938
sS'__do_global_dtors_aux'
p939
(S'\n__stdcall __do_global_dtors_aux()\n'
p940
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p941
S'CMP byte ptr [0x006089e8],0x0\nJNZ 0x0040239a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00402300\nPOP RBP\nMOV byte ptr [0x006089e8],0x1\nRET\n'
p942
S'80 3d 61 66 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 4e 66 20 00 01\nf3 c3\n'
p943
S'.text:0000000000402380\n.text:0000000000402387\n.text:0000000000402389\n.text:000000000040238a\n.text:000000000040238d\n.text:0000000000402392\n.text:0000000000402393\n.text:000000000040239a\n'
p944
tp945
sS'strncpy'
p946
(S'\n__stdcall strncpy(char * __dest, char * __src, size_t __n)\n'
p947
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strncpy(char *__dest,char *__src,size_t __n)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strncpy_00608048)();\u000a  return pcVar1;\u000a}\u000a\u000a
p948
S'JMP qword ptr [0x00608048]\n'
p949
S'ff 25 42 62 20 00\n'
p950
S'.plt:0000000000401e00\n'
p951
tp952
sS'XCopyPlane'
p953
(S'\n__stdcall XCopyPlane()\n'
p954
V\u000avoid XCopyPlane(void)\u000a\u000a{\u000a  (*(code *)PTR_XCopyPlane_00608058)();\u000a  return;\u000a}\u000a\u000a
p955
S'JMP qword ptr [0x00608058]\n'
p956
S'ff 25 32 62 20 00\n'
p957
S'.plt:0000000000401e20\n'
p958
tp959
sS'_fini'
p960
(S'\n__stdcall _fini()\n'
p961
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p962
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p963
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p964
S'.fini:0000000000405904\n.fini:0000000000405908\n.fini:000000000040590c\n'
p965
tp966
sS'XtManageChildren'
p967
(S'\n__stdcall XtManageChildren()\n'
p968
V\u000avoid XtManageChildren(void)\u000a\u000a{\u000a  (*(code *)PTR_XtManageChildren_00608288)();\u000a  return;\u000a}\u000a\u000a
p969
S'JMP qword ptr [0x00608288]\n'
p970
S'ff 25 02 60 20 00\n'
p971
S'.plt:0000000000402280\n'
p972
tp973
sS'XFreeFont'
p974
(S'\n__stdcall XFreeFont()\n'
p975
V\u000avoid XFreeFont(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeFont_00608060)();\u000a  return;\u000a}\u000a\u000a
p976
S'JMP qword ptr [0x00608060]\n'
p977
S'ff 25 2a 62 20 00\n'
p978
S'.plt:0000000000401e30\n'
p979
tp980
sS'SetCurrentFontCount'
p981
(S'\n__stdcall SetCurrentFontCount()\n'
p982
V\u000avoid SetCurrentFontCount(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  Arg args [1];\u000a  char label [80];\u000a  undefined8 local_68;\u000a  undefined7 *local_60;\u000a  undefined7 local_58;\u000a  undefined uStack81;\u000a  undefined7 uStack80;\u000a  \u000a  if (matchingFontCount == 0) {\u000a    uStack80 = 0x686374616d20;\u000a    uVar1 = 0x73656d616e206f6e;\u000a  }\u000a  else {\u000a    if (matchingFontCount != 1) {\u000a      snprintf((char *)&local_58,0x50,"%d names match");\u000a      goto LAB_00405304;\u000a    }\u000a    uStack80 = 0x736568637461;\u000a    uVar1 = 0x6d20656d616e2031;\u000a  }\u000a  local_58 = (undefined7)uVar1;\u000a  uStack81 = (undefined)((ulong)uVar1 >> 0x38);\u000aLAB_00405304:\u000a  local_68 = 0x60752d;\u000a  local_60 = &local_58;\u000a  XtSetValues(countLabel,&local_68,1);\u000a  return;\u000a}\u000a\u000a
p983
S'SUB RSP,0x68\nMOV ECX,dword ptr [0x00608b30]\nTEST ECX,ECX\nJZ 0x004052ce\nCMP ECX,0x1\nJNZ 0x004052ee\nMOV RAX,0x7365686374616d\nMOV qword ptr [RSP + 0x17],RAX\nMOV RAX,0x6d20656d616e2031\nJMP 0x004052e7\nMOV RAX,0x686374616d2073\nMOV qword ptr [RSP + 0x17],RAX\nMOV RAX,0x73656d616e206f6e\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00405304\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x50\nMOV EDX,0x405ea2\nXOR EAX,EAX\nCALL 0x00401f70\nMOV qword ptr [RSP],0x60752d\nLEA RAX,[RSP + 0x10]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDI,qword ptr [0x00608a60]\nMOV RSI,RSP\nMOV EDX,0x1\nCALL 0x00401ec0\nADD RSP,0x68\nRET\n'
p984
S'48 83 ec 68\n8b 0d 86 38 20 00\n85 c9\n74 20\n83 f9 01\n75 3b\n48 b8 6d 61 74 63 68 65 73 00\n48 89 44 24 17\n48 b8 31 20 6e 61 6d 65 20 6d\neb 19\n48 b8 73 20 6d 61 74 63 68 00\n48 89 44 24 17\n48 b8 6e 6f 20 6e 61 6d 65 73\n48 89 44 24 10\neb 16\n48 8d 7c 24 10\nbe 50 00 00 00\nba a2 5e 40 00\n31 c0\ne8 6c cc ff ff\n48 c7 04 24 2d 75 60 00\n48 8d 44 24 10\n48 89 44 24 08\n48 8b 3d 43 37 20 00\n48 89 e6\nba 01 00 00 00\ne8 96 cb ff ff\n48 83 c4 68\nc3\n'
p985
S'.text:00000000004052a0\n.text:00000000004052a4\n.text:00000000004052aa\n.text:00000000004052ac\n.text:00000000004052ae\n.text:00000000004052b1\n.text:00000000004052b3\n.text:00000000004052bd\n.text:00000000004052c2\n.text:00000000004052cc\n.text:00000000004052ce\n.text:00000000004052d8\n.text:00000000004052dd\n.text:00000000004052e7\n.text:00000000004052ec\n.text:00000000004052ee\n.text:00000000004052f3\n.text:00000000004052f8\n.text:00000000004052fd\n.text:00000000004052ff\n.text:0000000000405304\n.text:000000000040530c\n.text:0000000000405311\n.text:0000000000405316\n.text:000000000040531d\n.text:0000000000405320\n.text:0000000000405325\n.text:000000000040532a\n.text:000000000040532e\n'
p986
tp987
sS'EnableRemainingItems'
p988
(S'\n__stdcall EnableRemainingItems()\n'
p989
V\u000avoid EnableRemainingItems(int iParm1)\u000a\u000a{\u000a  Boolean *pBVar1;\u000a  Boolean BVar2;\u000a  int *piVar3;\u000a  FieldValue *pFVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  XtPointer closure;\u000a  ulong uVar7;\u000a  int iVar8;\u000a  \u000a  pBVar1 = fontInSet;\u000a  if ((matchingFontCount == 0) || (matchingFontCount == numFonts)) {\u000a    if (anyDisabled == 1) {\u000a      uVar7 = 0;\u000a      do {\u000a        EnableAllItems(uVar7);\u000a        uVar6 = (int)uVar7 + 1;\u000a        uVar7 = (ulong)uVar6;\u000a      } while (uVar6 != 0xe);\u000a      anyDisabled = 0;\u000a    }\u000a  }\u000a  else {\u000a    uVar7 = 0;\u000a    do {\u000a      if (((iParm1 != 1) || (uVar7 != (ulong)(uint)(pChoice.value)->field)) &&\u000a         (iVar8 = fieldValues[uVar7]->count, iVar8 != 0)) {\u000a        pFVar4 = fieldValues[uVar7]->value;\u000a        do {\u000a          iVar5 = pFVar4->count;\u000a          if (iVar5 != 0) {\u000a            piVar3 = pFVar4->font;\u000a            do {\u000a              if (pBVar1[(long)*piVar3] != 0) {\u000a                BVar2 = 1;\u000a                goto LAB_00405182;\u000a              }\u000a              piVar3 = piVar3 + 1;\u000a              iVar5 = iVar5 + -1;\u000a            } while (iVar5 != 0);\u000a          }\u000a          BVar2 = 0;\u000aLAB_00405182:\u000a          pFVar4->enable = BVar2;\u000a          pFVar4 = pFVar4 + 1;\u000a          iVar8 = iVar8 + -1;\u000a        } while (iVar8 != 0);\u000a      }\u000a      uVar7 = uVar7 + 1;\u000a    } while (uVar7 != 0xe);\u000a    anyDisabled = 1;\u000a  }\u000a  enabledMenuIndex = -1;\u000a  closure = (XtPointer)0x0;\u000a  do {\u000a    ScheduleWork(EnableMenu,closure);\u000a    closure = (XtPointer)((long)closure + 1);\u000a  } while (closure != (XtPointer)0xe);\u000a  return;\u000a}\u000a\u000a
p990
S'PUSH RBX\nMOV EAX,dword ptr [0x00608b30]\nTEST EAX,EAX\nJZ 0x0040519b\nCMP EAX,dword ptr [0x00608aa0]\nJZ 0x0040519b\nMOV RAX,qword ptr [0x00608ab0]\nXOR R8D,R8D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDX,qword ptr [0x608ac0 + R8*0x8]\nCMP EDI,0x1\nJNZ 0x0040513b\nMOV RCX,qword ptr [0x00608b60]\nMOV ECX,dword ptr [RCX]\nCMP R8,RCX\nJZ 0x0040518e\nMOV R9D,dword ptr [RDX]\nTEST R9D,R9D\nJZ 0x0040518e\nADD RDX,0x10\nNOP word ptr [RAX + RAX*0x1]\nMOV EBX,dword ptr [RDX + 0x18]\nTEST EBX,EBX\nJZ 0x00405171\nMOV RCX,qword ptr [RDX + 0x20]\nNOP dword ptr [RAX + RAX*0x1]\nMOVSXD RSI,dword ptr [RCX]\nCMP byte ptr [RAX + RSI*0x1],0x0\nJNZ 0x00405180\nADD RCX,0x4\nDEC EBX\nJNZ 0x00405160\nXOR ECX,ECX\nJMP 0x00405182\nMOV CL,0x1\nMOV byte ptr [RDX + 0x28],CL\nADD RDX,0x30\nDEC R9D\nJNZ 0x00405150\nINC R8\nCMP R8,0xe\nJNZ 0x00405120\nMOV AL,0x1\nJMP 0x004051c0\nCMP byte ptr [0x00608b88],0x1\nJNZ 0x004051c6\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,EBX\nCALL 0x00405200\nINC EBX\nCMP EBX,0xe\nJNZ 0x004051b0\nXOR EAX,EAX\nMOV byte ptr [0x00608b88],AL\nMOV dword ptr [0x00608b78],0xffffffff\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x405530\nMOV EDX,0xa\nMOV RSI,RBX\nCALL 0x00403980\nINC RBX\nCMP RBX,0xe\nJNZ 0x004051e0\nPOP RBX\nRET\n'
p991
S'53\n8b 05 39 3a 20 00\n85 c0\n0f 84 9c 00 00 00\n3b 05 9b 39 20 00\n0f 84 90 00 00 00\n48 8b 05 9e 39 20 00\n45 31 c0\n66 66 2e 0f 1f 84 00 00 00 00 00\n4a 8b 14 c5 c0 8a 60 00\n83 ff 01\n75 0e\n48 8b 0d 2c 3a 20 00\n8b 09\n49 39 c8\n74 53\n44 8b 0a\n45 85 c9\n74 4b\n48 83 c2 10\n66 0f 1f 84 00 00 00 00 00\n8b 5a 18\n85 db\n74 1a\n48 8b 4a 20\n0f 1f 44 00 00\n48 63 31\n80 3c 30 00\n75 17\n48 83 c1 04\nff cb\n75 ef\n31 c9\neb 0d\nb1 01\n88 4a 28\n48 83 c2 30\n41 ff c9\n75 c2\n49 ff c0\n49 83 f8 0e\n75 89\nb0 01\neb 25\n80 3d e6 39 20 00 01\n75 22\n31 db\n66 2e 0f 1f 84 00 00 00 00 00\n89 df\ne8 49 00 00 00\nff c3\n83 fb 0e\n75 f2\n31 c0\n88 05 c2 39 20 00\nc7 05 a8 39 20 00 ff ff ff ff\n31 db\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 55 40 00\nba 0a 00 00 00\n48 89 de\ne8 8e e7 ff ff\n48 ff c3\n48 83 fb 0e\n75 e5\n5b\nc3\n'
p992
S'.text:00000000004050f0\n.text:00000000004050f1\n.text:00000000004050f7\n.text:00000000004050f9\n.text:00000000004050ff\n.text:0000000000405105\n.text:000000000040510b\n.text:0000000000405112\n.text:0000000000405115\n.text:0000000000405120\n.text:0000000000405128\n.text:000000000040512b\n.text:000000000040512d\n.text:0000000000405134\n.text:0000000000405136\n.text:0000000000405139\n.text:000000000040513b\n.text:000000000040513e\n.text:0000000000405141\n.text:0000000000405143\n.text:0000000000405147\n.text:0000000000405150\n.text:0000000000405153\n.text:0000000000405155\n.text:0000000000405157\n.text:000000000040515b\n.text:0000000000405160\n.text:0000000000405163\n.text:0000000000405167\n.text:0000000000405169\n.text:000000000040516d\n.text:000000000040516f\n.text:0000000000405171\n.text:0000000000405173\n.text:0000000000405180\n.text:0000000000405182\n.text:0000000000405185\n.text:0000000000405189\n.text:000000000040518c\n.text:000000000040518e\n.text:0000000000405191\n.text:0000000000405195\n.text:0000000000405197\n.text:0000000000405199\n.text:000000000040519b\n.text:00000000004051a2\n.text:00000000004051a4\n.text:00000000004051a6\n.text:00000000004051b0\n.text:00000000004051b2\n.text:00000000004051b7\n.text:00000000004051b9\n.text:00000000004051bc\n.text:00000000004051be\n.text:00000000004051c0\n.text:00000000004051c6\n.text:00000000004051d0\n.text:00000000004051d2\n.text:00000000004051e0\n.text:00000000004051e5\n.text:00000000004051ea\n.text:00000000004051ed\n.text:00000000004051f2\n.text:00000000004051f5\n.text:00000000004051f9\n.text:00000000004051fb\n.text:00000000004051fc\n'
p993
tp994
s.