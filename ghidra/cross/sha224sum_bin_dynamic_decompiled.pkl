(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x60be08]\nPUSH RBP\nLEA RBP,[0x60be10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401358\nTEST RBP,RBP\nJZ 0x00408096\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00408080\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 b6 3d 20 00\n55\n48 8d 2d b6 3d 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 e7 92 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000408040\n.text:0000000000408042\n.text:0000000000408044\n.text:0000000000408047\n.text:0000000000408049\n.text:000000000040804b\n.text:0000000000408052\n.text:0000000000408053\n.text:000000000040805a\n.text:000000000040805b\n.text:000000000040805e\n.text:0000000000408061\n.text:0000000000408064\n.text:0000000000408068\n.text:000000000040806c\n.text:0000000000408071\n.text:0000000000408074\n.text:0000000000408076\n.text:0000000000408078\n.text:0000000000408080\n.text:0000000000408083\n.text:0000000000408086\n.text:0000000000408089\n.text:000000000040808d\n.text:0000000000408091\n.text:0000000000408094\n.text:0000000000408096\n.text:000000000040809a\n.text:000000000040809b\n.text:000000000040809c\n.text:000000000040809e\n.text:00000000004080a0\n.text:00000000004080a2\n.text:00000000004080a4\n'
p6
tp7
sS'ungetc'
p8
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p9
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_0060c140)();\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x0060c140]\n'
p11
S'ff 25 6a ab 20 00\n'
p12
S'.plt:00000000004015d0\n'
p13
tp14
sS'c_isdigit'
p15
(S'\n__stdcall c_isdigit()\n'
p16
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p17
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p18
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p19
S'.text:0000000000407bd0\n.text:0000000000407bd3\n.text:0000000000407bd6\n.text:0000000000407bd9\n'
p20
tp21
sS'version_etc_arn'
p22
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p23
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_00409513,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x4072c7;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x407348;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x4073dc;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x00407158\nMOV EDX,0x409500\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x004016d0\nJMP 0x0040716d\nMOV EDX,0x40950c\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x004016d0\nXOR EDI,EDI\nMOV ESI,0x409513\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x4097e0\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x004016d0\nXOR EDI,EDI\nMOV ESI,0x409517\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00401530\nCMP R12,0x9\nJA 0x004071f6\nJMP qword ptr [0x4094b0 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x4095e2\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004016d0\nXOR EDI,EDI\nMOV ESI,0x409721\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x38\nJMP 0x00407467\nXOR EDI,EDI\nMOV ESI,0x4095f2\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004016d0\nXOR EDI,EDI\nMOV ESI,0x409609\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004016d0\nXOR EDI,EDI\nMOV ESI,0x409625\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x18\nJMP 0x00407467\nXOR EDI,EDI\nMOV ESI,0x409645\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x18\nJMP 0x00407467\nXOR EDI,EDI\nMOV ESI,0x409669\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x28\nJMP 0x00407467\nXOR EDI,EDI\nMOV ESI,0x409691\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x28\nJMP 0x00407467\nXOR EDI,EDI\nMOV ESI,0x4096bd\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x38\nJMP 0x00407467\nXOR EDI,EDI\nMOV ESI,0x4096ed\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004016d0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x004013a0\n'
p25
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba 00 95 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 7a a5 ff ff\neb 15\nba 0c 95 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 63 a5 ff ff\n31 ff\nbe 13 95 40 00\nba 05 00 00 00\ne8 e2 a2 ff ff\n48 89 c1\nbe 01 00 00 00\nba e0 97 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 35 a5 ff ff\n31 ff\nbe 17 95 40 00\nba 05 00 00 00\ne8 b4 a2 ff ff\n48 89 c7\n4c 89 f6\ne8 79 a3 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 b0 94 40 00\n31 ff\nbe e2 95 40 00\nba 05 00 00 00\ne8 8a a2 ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 da a4 ff ff\n31 ff\nbe 21 97 40 00\nba 05 00 00 00\ne8 59 a2 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 91 a4 ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe f2 95 40 00\nba 05 00 00 00\ne8 07 a2 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 53 a4 ff ff\n31 ff\nbe 09 96 40 00\nba 05 00 00 00\ne8 d2 a1 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 1a a4 ff ff\n31 ff\nbe 25 96 40 00\nba 05 00 00 00\ne8 99 a1 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 e4 a3 ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe 45 96 40 00\nba 05 00 00 00\ne8 5a a1 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 a2 a3 ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe 69 96 40 00\nba 05 00 00 00\ne8 18 a1 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 58 a3 ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe 91 96 40 00\nba 05 00 00 00\ne8 ce a0 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 0e a3 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe bd 96 40 00\nba 05 00 00 00\ne8 84 a0 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 bc a2 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe ed 96 40 00\nba 05 00 00 00\ne8 35 a0 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 6d a2 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 2c 9f ff ff\n'
p26
S'.text:0000000000407120\n.text:0000000000407122\n.text:0000000000407124\n.text:0000000000407126\n.text:0000000000407127\n.text:0000000000407128\n.text:000000000040712b\n.text:000000000040712e\n.text:0000000000407131\n.text:0000000000407134\n.text:0000000000407137\n.text:000000000040713a\n.text:000000000040713f\n.text:0000000000407142\n.text:0000000000407144\n.text:0000000000407149\n.text:000000000040714b\n.text:000000000040714e\n.text:0000000000407151\n.text:0000000000407156\n.text:0000000000407158\n.text:000000000040715d\n.text:000000000040715f\n.text:0000000000407162\n.text:0000000000407165\n.text:0000000000407168\n.text:000000000040716d\n.text:000000000040716f\n.text:0000000000407174\n.text:0000000000407179\n.text:000000000040717e\n.text:0000000000407181\n.text:0000000000407186\n.text:000000000040718b\n.text:0000000000407191\n.text:0000000000407193\n.text:0000000000407196\n.text:000000000040719b\n.text:000000000040719d\n.text:00000000004071a2\n.text:00000000004071a7\n.text:00000000004071ac\n.text:00000000004071af\n.text:00000000004071b2\n.text:00000000004071b7\n.text:00000000004071bb\n.text:00000000004071bd\n.text:00000000004071c5\n.text:00000000004071c7\n.text:00000000004071cc\n.text:00000000004071d1\n.text:00000000004071d6\n.text:00000000004071d9\n.text:00000000004071dc\n.text:00000000004071e1\n.text:00000000004071e3\n.text:00000000004071e6\n.text:00000000004071ea\n.text:00000000004071eb\n.text:00000000004071ed\n.text:00000000004071ef\n.text:00000000004071f1\n.text:00000000004071f6\n.text:00000000004071f8\n.text:00000000004071fd\n.text:0000000000407202\n.text:0000000000407207\n.text:000000000040720a\n.text:000000000040720d\n.text:0000000000407211\n.text:0000000000407215\n.text:000000000040721a\n.text:000000000040721f\n.text:0000000000407222\n.text:0000000000407226\n.text:000000000040722a\n.text:000000000040722e\n.text:0000000000407232\n.text:0000000000407236\n.text:000000000040723a\n.text:000000000040723f\n.text:0000000000407243\n.text:0000000000407248\n.text:000000000040724a\n.text:000000000040724f\n.text:0000000000407254\n.text:0000000000407259\n.text:000000000040725c\n.text:000000000040725f\n.text:0000000000407263\n.text:0000000000407268\n.text:000000000040726a\n.text:000000000040726d\n.text:0000000000407271\n.text:0000000000407272\n.text:0000000000407274\n.text:0000000000407276\n.text:0000000000407278\n.text:000000000040727d\n.text:000000000040727f\n.text:0000000000407284\n.text:0000000000407289\n.text:000000000040728e\n.text:0000000000407291\n.text:0000000000407294\n.text:0000000000407298\n.text:000000000040729c\n.text:00000000004072a1\n.text:00000000004072a3\n.text:00000000004072a6\n.text:00000000004072aa\n.text:00000000004072ab\n.text:00000000004072ad\n.text:00000000004072af\n.text:00000000004072b1\n.text:00000000004072b6\n.text:00000000004072b8\n.text:00000000004072bd\n.text:00000000004072c2\n.text:00000000004072c7\n.text:00000000004072ca\n.text:00000000004072cd\n.text:00000000004072d1\n.text:00000000004072d5\n.text:00000000004072d9\n.text:00000000004072de\n.text:00000000004072e0\n.text:00000000004072e3\n.text:00000000004072e7\n.text:00000000004072ec\n.text:00000000004072f0\n.text:00000000004072f5\n.text:00000000004072f7\n.text:00000000004072fc\n.text:0000000000407301\n.text:0000000000407306\n.text:0000000000407309\n.text:000000000040730c\n.text:0000000000407310\n.text:0000000000407314\n.text:0000000000407319\n.text:000000000040731e\n.text:0000000000407321\n.text:0000000000407325\n.text:0000000000407329\n.text:000000000040732e\n.text:0000000000407332\n.text:0000000000407337\n.text:0000000000407339\n.text:000000000040733e\n.text:0000000000407343\n.text:0000000000407348\n.text:000000000040734b\n.text:000000000040734e\n.text:0000000000407352\n.text:0000000000407356\n.text:000000000040735a\n.text:000000000040735f\n.text:0000000000407364\n.text:0000000000407367\n.text:000000000040736b\n.text:000000000040736f\n.text:0000000000407373\n.text:0000000000407378\n.text:000000000040737c\n.text:0000000000407381\n.text:0000000000407383\n.text:0000000000407388\n.text:000000000040738d\n.text:0000000000407392\n.text:0000000000407395\n.text:0000000000407398\n.text:000000000040739c\n.text:00000000004073a0\n.text:00000000004073a5\n.text:00000000004073aa\n.text:00000000004073ad\n.text:00000000004073b1\n.text:00000000004073b5\n.text:00000000004073b9\n.text:00000000004073bd\n.text:00000000004073c2\n.text:00000000004073c6\n.text:00000000004073cb\n.text:00000000004073cd\n.text:00000000004073d2\n.text:00000000004073d7\n.text:00000000004073dc\n.text:00000000004073df\n.text:00000000004073e2\n.text:00000000004073e6\n.text:00000000004073ea\n.text:00000000004073ee\n.text:00000000004073f3\n.text:00000000004073f8\n.text:00000000004073fb\n.text:00000000004073ff\n.text:0000000000407403\n.text:0000000000407407\n.text:000000000040740b\n.text:000000000040740f\n.text:0000000000407414\n.text:0000000000407418\n.text:000000000040741a\n.text:000000000040741c\n.text:0000000000407421\n.text:0000000000407426\n.text:000000000040742b\n.text:000000000040742e\n.text:0000000000407431\n.text:0000000000407435\n.text:0000000000407439\n.text:000000000040743e\n.text:0000000000407443\n.text:0000000000407446\n.text:000000000040744a\n.text:000000000040744e\n.text:0000000000407452\n.text:0000000000407456\n.text:000000000040745a\n.text:000000000040745e\n.text:0000000000407463\n.text:0000000000407467\n.text:0000000000407468\n.text:000000000040746a\n.text:000000000040746c\n.text:000000000040746e\n.text:000000000040746f\n'
p27
tp28
sS'usage'
p29
(S'\n__stdcall usage()\n'
p30
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,"Usage: %s [OPTION]... [FILE]...\u005cnPrint or check %s (%d-bit) checksums.\u005cn",5\u000a                     );\u000a    __printf_chk(1,uVar1,program_name,"SHA224",0xe0);\u000a    emit_stdin_note();\u000a    __s = (char *)dcgettext(0,"\u005cn  -b, --binary         read in binary mode\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,"  -c, --check          read %s sums from the FILEs and check them\u005cn",5);\u000a    __printf_chk(1,uVar1,"SHA224",uVar1);\u000a    __s = (char *)dcgettext(0,"      --tag            create a BSD-style checksum\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"  -t, --text           read in text mode (default)\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnThe following five options are useful only when verifying checksums:\u005cn      --ignore-missing  don\u005c't fail or report status for missing files\u005cn      --quiet          don\u005c't print OK for each successfully verified file\u005cn      --status         don\u005c't output anything, status code shows success\u005cn      --strict         exit non-zero for improperly formatted checksum lines\u005cn  -w, --warn           warn about improperly formatted checksum lines\u005cn\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,\u000a                      "\u005cnThe sums are computed as described in %s.  When checking, the input\u005cnshould be a former output of this program.  The default mode is to print a\u005cnline with checksum, a space, a character indicating input mode (\u005c'*\u005c' for binary,\u005cn\u005c' \u005c' for text or where binary is insignificant), and name for each FILE.\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,"RFC 3874",uVar1);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p31
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x0040198e\nXOR EDI,EDI\nMOV ESI,0x408420\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,RAX\nMOV RDX,qword ptr [0x0060c2f8]\nMOV EDI,0x1\nMOV ECX,0x408467\nMOV R8D,0xe0\nXOR EAX,EAX\nCALL 0x00401620\nCALL 0x004019e0\nXOR EDI,EDI\nMOV ESI,0x40846e\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nCALL 0x00401530\nXOR EDI,EDI\nMOV ESI,0x40849b\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408467\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401620\nXOR EDI,EDI\nMOV ESI,0x4084de\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nCALL 0x00401530\nXOR EDI,EDI\nMOV ESI,0x408512\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nCALL 0x00401530\nXOR EDI,EDI\nMOV ESI,0x408546\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nCALL 0x00401530\nXOR EDI,EDI\nMOV ESI,0x4086f9\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nCALL 0x00401530\nXOR EDI,EDI\nMOV ESI,0x408726\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nCALL 0x00401530\nXOR EDI,EDI\nMOV ESI,0x40875c\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408885\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401620\nCALL 0x00401a10\nMOV EDI,EBX\nCALL 0x004016b0\nCALL 0x004019a0\nMOV EDI,EBX\nCALL 0x004016b0\n'
p32
S'53\n89 fb\n85 db\n0f 85 53 01 00 00\n31 ff\nbe 20 84 40 00\nba 05 00 00 00\ne8 14 fc ff ff\n48 89 c6\n48 8b 15 a2 aa 20 00\nbf 01 00 00 00\nb9 67 84 40 00\n41 b8 e0 00 00 00\n31 c0\ne8 b3 fd ff ff\ne8 6e 01 00 00\n31 ff\nbe 6e 84 40 00\nba 05 00 00 00\ne8 dd fb ff ff\n48 8b 35 fe a9 20 00\n48 89 c7\ne8 9e fc ff ff\n31 ff\nbe 9b 84 40 00\nba 05 00 00 00\ne8 bd fb ff ff\n48 89 c1\nbf 01 00 00 00\nba 67 84 40 00\n31 c0\n48 89 ce\ne8 66 fd ff ff\n31 ff\nbe de 84 40 00\nba 05 00 00 00\ne8 95 fb ff ff\n48 8b 35 b6 a9 20 00\n48 89 c7\ne8 56 fc ff ff\n31 ff\nbe 12 85 40 00\nba 05 00 00 00\ne8 75 fb ff ff\n48 8b 35 96 a9 20 00\n48 89 c7\ne8 36 fc ff ff\n31 ff\nbe 46 85 40 00\nba 05 00 00 00\ne8 55 fb ff ff\n48 8b 35 76 a9 20 00\n48 89 c7\ne8 16 fc ff ff\n31 ff\nbe f9 86 40 00\nba 05 00 00 00\ne8 35 fb ff ff\n48 8b 35 56 a9 20 00\n48 89 c7\ne8 f6 fb ff ff\n31 ff\nbe 26 87 40 00\nba 05 00 00 00\ne8 15 fb ff ff\n48 8b 35 36 a9 20 00\n48 89 c7\ne8 d6 fb ff ff\n31 ff\nbe 5c 87 40 00\nba 05 00 00 00\ne8 f5 fa ff ff\n48 89 c1\nbf 01 00 00 00\nba 85 88 40 00\n31 c0\n48 89 ce\ne8 9e fc ff ff\ne8 89 00 00 00\n89 df\ne8 22 fd ff ff\ne8 0d 00 00 00\n89 df\ne8 16 fd ff ff\n'
p33
S'.text:0000000000401830\n.text:0000000000401831\n.text:0000000000401833\n.text:0000000000401835\n.text:000000000040183b\n.text:000000000040183d\n.text:0000000000401842\n.text:0000000000401847\n.text:000000000040184c\n.text:000000000040184f\n.text:0000000000401856\n.text:000000000040185b\n.text:0000000000401860\n.text:0000000000401866\n.text:0000000000401868\n.text:000000000040186d\n.text:0000000000401872\n.text:0000000000401874\n.text:0000000000401879\n.text:000000000040187e\n.text:0000000000401883\n.text:000000000040188a\n.text:000000000040188d\n.text:0000000000401892\n.text:0000000000401894\n.text:0000000000401899\n.text:000000000040189e\n.text:00000000004018a3\n.text:00000000004018a6\n.text:00000000004018ab\n.text:00000000004018b0\n.text:00000000004018b2\n.text:00000000004018b5\n.text:00000000004018ba\n.text:00000000004018bc\n.text:00000000004018c1\n.text:00000000004018c6\n.text:00000000004018cb\n.text:00000000004018d2\n.text:00000000004018d5\n.text:00000000004018da\n.text:00000000004018dc\n.text:00000000004018e1\n.text:00000000004018e6\n.text:00000000004018eb\n.text:00000000004018f2\n.text:00000000004018f5\n.text:00000000004018fa\n.text:00000000004018fc\n.text:0000000000401901\n.text:0000000000401906\n.text:000000000040190b\n.text:0000000000401912\n.text:0000000000401915\n.text:000000000040191a\n.text:000000000040191c\n.text:0000000000401921\n.text:0000000000401926\n.text:000000000040192b\n.text:0000000000401932\n.text:0000000000401935\n.text:000000000040193a\n.text:000000000040193c\n.text:0000000000401941\n.text:0000000000401946\n.text:000000000040194b\n.text:0000000000401952\n.text:0000000000401955\n.text:000000000040195a\n.text:000000000040195c\n.text:0000000000401961\n.text:0000000000401966\n.text:000000000040196b\n.text:000000000040196e\n.text:0000000000401973\n.text:0000000000401978\n.text:000000000040197a\n.text:000000000040197d\n.text:0000000000401982\n.text:0000000000401987\n.text:0000000000401989\n.text:000000000040198e\n.text:0000000000401993\n.text:0000000000401995\n'
p34
tp35
sS'quoting_options_from_style'
p36
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p37
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p38
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x00406a8d\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x004013a0\n'
p39
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 0e a9 ff ff\n'
p40
S'.text:0000000000406a40\n.text:0000000000406a44\n.text:0000000000406a47\n.text:0000000000406a4c\n.text:0000000000406a51\n.text:0000000000406a55\n.text:0000000000406a5d\n.text:0000000000406a60\n.text:0000000000406a62\n.text:0000000000406a64\n.text:0000000000406a68\n.text:0000000000406a6b\n.text:0000000000406a6f\n.text:0000000000406a74\n.text:0000000000406a79\n.text:0000000000406a7d\n.text:0000000000406a81\n.text:0000000000406a85\n.text:0000000000406a88\n.text:0000000000406a8c\n.text:0000000000406a8d\n'
p41
tp42
sS'strchr'
p43
(S'\n__stdcall strchr(char * __s, int __c)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_0060c0b0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x0060c0b0]\n'
p46
S'ff 25 fa ab 20 00\n'
p47
S'.plt:00000000004014b0\n'
p48
tp49
sS'rpl_fclose'
p50
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p51
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_004078b9;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_004078b9:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401590\nTEST EAX,EAX\nJS 0x004078b9\nMOV RDI,RBX\nCALL 0x004015e0\nTEST EAX,EAX\nJZ 0x00407887\nMOV RDI,RBX\nCALL 0x00401590\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x004014d0\nCMP RAX,-0x1\nJZ 0x004078b9\nMOV RDI,RBX\nCALL 0x00407a90\nTEST EAX,EAX\nJZ 0x004078b9\nCALL 0x004013b0\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x00401440\nTEST EBP,EBP\nJZ 0x004078b2\nCALL 0x004013b0\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401440\n'
p53
S'55\n53\n50\n48 89 fb\ne8 35 9d ff ff\n85 c0\n78 5a\n48 89 df\ne8 79 9d ff ff\n85 c0\n74 1c\n48 89 df\ne8 1d 9d ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 4f 9c ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 01 02 00 00\n85 c0\n74 26\ne8 18 9b ff ff\n8b 28\n48 89 df\ne8 9e 9b ff ff\n85 ed\n74 0c\ne8 05 9b ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 79 9b ff ff\n'
p54
S'.text:0000000000407850\n.text:0000000000407851\n.text:0000000000407852\n.text:0000000000407853\n.text:0000000000407856\n.text:000000000040785b\n.text:000000000040785d\n.text:000000000040785f\n.text:0000000000407862\n.text:0000000000407867\n.text:0000000000407869\n.text:000000000040786b\n.text:000000000040786e\n.text:0000000000407873\n.text:0000000000407875\n.text:000000000040787a\n.text:000000000040787c\n.text:0000000000407881\n.text:0000000000407885\n.text:0000000000407887\n.text:000000000040788a\n.text:000000000040788f\n.text:0000000000407891\n.text:0000000000407893\n.text:0000000000407898\n.text:000000000040789a\n.text:000000000040789d\n.text:00000000004078a2\n.text:00000000004078a4\n.text:00000000004078a6\n.text:00000000004078ab\n.text:00000000004078ad\n.text:00000000004078b2\n.text:00000000004078b6\n.text:00000000004078b7\n.text:00000000004078b8\n.text:00000000004078b9\n.text:00000000004078bc\n.text:00000000004078c0\n.text:00000000004078c1\n.text:00000000004078c2\n'
p55
tp56
sS'sha224_init_ctx'
p57
(S'\n__stdcall sha224_init_ctx(sha256_ctx * ctx)\n'
p58
V\u000avoid sha224_init_ctx(sha256_ctx *ctx)\u000a\u000a{\u000a  ctx->state[0] = 0xc1059ed8;\u000a  ctx->state[1] = 0x367cd507;\u000a  ctx->state[2] = 0x3070dd17;\u000a  ctx->state[3] = 0xf70e5939;\u000a  ctx->state[4] = 0xffc00b31;\u000a  ctx->state[5] = 0x68581511;\u000a  ctx->state[6] = 0x64f98fa7;\u000a  ctx->state[7] = 0xbefa4fa4;\u000a  ctx->total[0] = 0;\u000a  ctx->total[1] = 0;\u000a  *(undefined4 *)&ctx->buflen = 0;\u000a  *(undefined4 *)((long)&ctx->buflen + 4) = 0;\u000a  return;\u000a}\u000a\u000a
p59
S'MOV dword ptr [RDI],0xc1059ed8\nMOV dword ptr [RDI + 0x4],0x367cd507\nMOV dword ptr [RDI + 0x8],0x3070dd17\nMOV dword ptr [RDI + 0xc],0xf70e5939\nMOV dword ptr [RDI + 0x10],0xffc00b31\nMOV dword ptr [RDI + 0x14],0x68581511\nMOV dword ptr [RDI + 0x18],0x64f98fa7\nMOV dword ptr [RDI + 0x1c],0xbefa4fa4\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RDI + 0x20],XMM0\nRET\n'
p60
S'c7 07 d8 9e 05 c1\nc7 47 04 07 d5 7c 36\nc7 47 08 17 dd 70 30\nc7 47 0c 39 59 0e f7\nc7 47 10 31 0b c0 ff\nc7 47 14 11 15 58 68\nc7 47 18 a7 8f f9 64\nc7 47 1c a4 4f fa be\n0f 57 c0\n0f 11 47 20\nc3\n'
p61
S'.text:0000000000402d60\n.text:0000000000402d66\n.text:0000000000402d6d\n.text:0000000000402d74\n.text:0000000000402d7b\n.text:0000000000402d82\n.text:0000000000402d89\n.text:0000000000402d90\n.text:0000000000402d97\n.text:0000000000402d9a\n.text:0000000000402d9e\n'
p62
tp63
sS'strcpy'
p64
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p65
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_0060c048)();\u000a  return pcVar1;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x0060c048]\n'
p67
S'ff 25 62 ac 20 00\n'
p68
S'.plt:00000000004013e0\n'
p69
tp70
sS'strncmp'
p71
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_0060c038)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x0060c038]\n'
p74
S'ff 25 72 ac 20 00\n'
p75
S'.plt:00000000004013c0\n'
p76
tp77
sS'xnrealloc'
p78
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p79
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p80
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x00407674\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x00407680\nPUSH RAX\nCALL 0x004077d0\n'
p81
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p82
S'.text:0000000000407660\n.text:0000000000407663\n.text:0000000000407666\n.text:0000000000407669\n.text:000000000040766b\n.text:000000000040766f\n.text:0000000000407672\n.text:0000000000407674\n.text:0000000000407675\n'
p83
tp84
sS'quote'
p85
(S'\n__stdcall quote(char * arg)\n'
p86
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p87
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00406cf0\n'
p88
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p89
S'.text:0000000000406d00\n.text:0000000000406d03\n.text:0000000000406d05\n.text:0000000000406d08\n'
p90
tp91
sS'emit_bug_reporting_address'
p92
(S'\n__stdcall emit_bug_reporting_address()\n'
p93
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40975d\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x409772\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401620\nXOR EDI,EDI\nMOV ESI,0x409788\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x4088b5\nMOV ECX,0x408bbd\nXOR EAX,EAX\nCALL 0x00401620\nXOR EDI,EDI\nMOV ESI,0x40979c\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401530\n'
p95
S'50\n31 ff\nbe 5d 97 40 00\nba 05 00 00 00\ne8 ae 9e ff ff\n48 89 c1\nbf 01 00 00 00\nba 72 97 40 00\n31 c0\n48 89 ce\ne8 57 a0 ff ff\n31 ff\nbe 88 97 40 00\nba 05 00 00 00\ne8 86 9e ff ff\n48 89 c6\nbf 01 00 00 00\nba b5 88 40 00\nb9 bd 8b 40 00\n31 c0\ne8 2d a0 ff ff\n31 ff\nbe 9c 97 40 00\nba 05 00 00 00\ne8 5c 9e ff ff\n48 8b 35 7d 4c 20 00\n48 89 c7\n58\ne9 1c 9f ff ff\n'
p96
S'.text:00000000004075a0\n.text:00000000004075a1\n.text:00000000004075a3\n.text:00000000004075a8\n.text:00000000004075ad\n.text:00000000004075b2\n.text:00000000004075b5\n.text:00000000004075ba\n.text:00000000004075bf\n.text:00000000004075c1\n.text:00000000004075c4\n.text:00000000004075c9\n.text:00000000004075cb\n.text:00000000004075d0\n.text:00000000004075d5\n.text:00000000004075da\n.text:00000000004075dd\n.text:00000000004075e2\n.text:00000000004075e7\n.text:00000000004075ec\n.text:00000000004075ee\n.text:00000000004075f3\n.text:00000000004075f5\n.text:00000000004075fa\n.text:00000000004075ff\n.text:0000000000407604\n.text:000000000040760b\n.text:000000000040760e\n.text:000000000040760f\n'
p97
tp98
sS'clone_quoting_options'
p99
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p100
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p101
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x004013b0\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x60c300\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00407780\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p102
S'55\n41 56\n53\n48 89 fb\ne8 e4 ba ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 00 c3 60 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 95 1e 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p103
S'.text:00000000004058c0\n.text:00000000004058c1\n.text:00000000004058c3\n.text:00000000004058c4\n.text:00000000004058c7\n.text:00000000004058cc\n.text:00000000004058cf\n.text:00000000004058d2\n.text:00000000004058d5\n.text:00000000004058da\n.text:00000000004058de\n.text:00000000004058e3\n.text:00000000004058e6\n.text:00000000004058eb\n.text:00000000004058ee\n.text:00000000004058ef\n.text:00000000004058f1\n.text:00000000004058f2\n'
p104
tp105
sS'xmalloc'
p106
(S'\n__stdcall xmalloc(size_t n)\n'
p107
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p108
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x004015a0\nTEST RBX,RBX\nJZ 0x00407653\nTEST RAX,RAX\nJZ 0x00407655\nPOP RBX\nRET\nCALL 0x004077d0\n'
p109
S'53\n48 89 fb\ne8 57 9f ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p110
S'.text:0000000000407640\n.text:0000000000407641\n.text:0000000000407644\n.text:0000000000407649\n.text:000000000040764c\n.text:000000000040764e\n.text:0000000000407651\n.text:0000000000407653\n.text:0000000000407654\n.text:0000000000407655\n'
p111
tp112
sS'quotearg_char_mem'
p113
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p114
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p115
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x0060c330]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x0060c320]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060c310]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060c300]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x00405920\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00406810\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p116
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d f8 57 20 00\n48 89 4c 24 30\n0f 10 05 dc 57 20 00\n0f 29 44 24 20\n0f 10 05 c0 57 20 00\n0f 29 44 24 10\n0f 10 05 a4 57 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p117
S'.text:0000000000406b20\n.text:0000000000406b22\n.text:0000000000406b24\n.text:0000000000406b25\n.text:0000000000406b29\n.text:0000000000406b2b\n.text:0000000000406b2e\n.text:0000000000406b31\n.text:0000000000406b38\n.text:0000000000406b3d\n.text:0000000000406b44\n.text:0000000000406b49\n.text:0000000000406b50\n.text:0000000000406b55\n.text:0000000000406b5c\n.text:0000000000406b60\n.text:0000000000406b63\n.text:0000000000406b68\n.text:0000000000406b6b\n.text:0000000000406b6d\n.text:0000000000406b72\n.text:0000000000406b74\n.text:0000000000406b77\n.text:0000000000406b7a\n.text:0000000000406b7d\n.text:0000000000406b82\n.text:0000000000406b86\n.text:0000000000406b87\n.text:0000000000406b89\n.text:0000000000406b8b\n'
p118
tp119
sS'c_isgraph'
p120
(S'\n__stdcall c_isgraph()\n'
p121
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p122
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p123
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p124
S'.text:0000000000407be0\n.text:0000000000407be3\n.text:0000000000407be6\n.text:0000000000407be9\n'
p125
tp126
sS'frame_dummy'
p127
(S'\n__stdcall frame_dummy()\n'
p128
V\u000a/* WARNING: Removing unreachable block (ram,0x0040181a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p129
S'MOV EDI,0x60be18\nCMP qword ptr [RDI],0x0\nJNZ 0x00401810\nJMP 0x004017a0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x0040180b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x004017a0\n'
p130
S'bf 18 be 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p131
S'.text:0000000000401800\n.text:0000000000401805\n.text:0000000000401809\n.text:000000000040180b\n.text:0000000000401810\n.text:0000000000401815\n.text:0000000000401818\n.text:000000000040181a\n.text:000000000040181b\n.text:000000000040181e\n.text:0000000000401820\n.text:0000000000401821\n'
p132
tp133
sS'quotearg_buffer_restyled'
p134
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p135
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_00405abc_caseD_7;\u000a  case 2:\u000a    goto switchD_00405abc_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_00405abc_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_00405abc_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_00405abc_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_00405abc_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_00405abc_caseD_7;\u000aswitchD_00405abc_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_00405abc_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_00405abc_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_00406580;\u000aLAB_00405ca0:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_00406589:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_00406598:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_00405cab:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_00405cef:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_00405cef;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_00406598;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_004064c5;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x004063d0;\u000a    }\u000a    goto LAB_00406598;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_004064fa;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_00406598;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_00406529;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00405fe8;\u000a  case '\u005ca':\u000a    goto joined_r0x00405ed8;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x00405ed8;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_00405d06_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x00405ed8;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x00405ed8;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_00405d06_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x00405ed8:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_0040643e;\u000a    }\u000a    goto LAB_00406598;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_00406598;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_00406598;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_00406598;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_00406598;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_00406598;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_00405d06_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00406496;\u000a      goto joined_r0x00406488;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00405f91:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00406488;\u000a      goto LAB_00406496;\u000a    }\u000a    goto LAB_00406598;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_00406598;\u000a  }\u000a  goto joined_r0x004063d0;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_004064fa:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_00406529;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_00406529:\u000a  if (1 < uVar10) {\u000aLAB_00406006:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_004060c2;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00405f91;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_004060c2:\u000a        if (bVar6 != 0) goto LAB_00406598;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00405fe8:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_00406006;\u000ajoined_r0x004063d0:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x004063d0:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_004063f7;\u000aLAB_00406430:\u000a    if (bVar22) goto LAB_00406435;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_00406430;\u000aLAB_004063f7:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_00406435:\u000a      if (bVar6 != 0) goto LAB_00406598;\u000aLAB_0040643e:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00406488;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00406496:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00406488:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_004064c5:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_00405ca0;\u000aLAB_00406580:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_00406589;\u000a  goto LAB_00405cab;\u000a}\u000a\u000a
p136
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401470\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00406665\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x408f60 + RAX*0x8]\nMOV EDI,0x409488\nMOV ESI,R15D\nCALL 0x00406d10\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x40948a\nMOV ESI,R15D\nCALL 0x00406d10\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x00405b1d\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x00405b20\nNOP\nCMP R12,RSI\nJNC 0x00405b0e\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x00405b00\nJMP 0x00405b20\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401480\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x00405bec\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x00405bec\nMOV ECX,0x409486\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x00405be6\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x00405b87\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x00405bb4\nTEST RSI,RSI\nJZ 0x00405ba1\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x40948a\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x00405bc2\nMOV ECX,0x40948a\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x00405bec\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x0040663c\nMOV ECX,0x409486\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x00406580\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x00406589\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x00405cef\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x00405cea\nCMP R11,-0x1\nJNZ 0x00405cea\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401480\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x00405d40\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x00405f9c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x408fb8 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x00406598\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x004063f0\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x004063f7\nJMP 0x00406430\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x00401520\nTEST EAX,EAX\nSETZ AL\nJNZ 0x00405d8d\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00405cf1\nJMP 0x00406598\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00405cf1\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x00405d1b\nCMP EBX,0x2\nJNZ 0x00405d1b\nTEST R13,R13\nJNZ 0x00405d1b\nJMP 0x00406598\nCMP R11,-0x1\nJZ 0x00406173\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00406193\nJMP 0x00405d1b\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004061a4\nTEST R8B,R8B\nJNZ 0x00406598\nCMP EBX,0x2\nJNZ 0x00405e48\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00405e48\nCMP R12,RSI\nJNC 0x00405e23\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405e32\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405e41\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00405e52\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x00406318\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x00406318\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x00406318\nCMP RCX,RSI\nJNC 0x00405e8c\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x00405e9b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405d26\nJMP 0x004063f0\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405d19\nJMP 0x00405efa\nMOV DL,0x74\nJMP 0x00405ee2\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405d19\nJMP 0x00405efa\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405d19\nJMP 0x00405efa\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x00406598\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405d19\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x0040643e\nJMP 0x00406598\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x00405d19\nTEST R8B,R8B\nJNZ 0x00406598\nCMP R12,RSI\nJNC 0x00405f2a\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405f39\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405f48\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x00405d19\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x0040632b\nCMP EBX,0x2\nJNZ 0x00405d19\nTEST R8B,R8B\nJZ 0x00405d19\nJMP 0x00406598\nCMP EBX,0x2\nJNZ 0x004061c4\nTEST R8B,R8B\nJNZ 0x00406598\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00406496\nJMP 0x004064b9\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x004061e5\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x00401720\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004063d8\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x004063d8\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x004060c2\nJMP 0x00406090\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x00406079\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x00406076\nCMP R12,RSI\nJNC 0x0040605b\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x0040606a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x004060b0\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x004060b0\nTEST BPL,0x1\nJZ 0x00406153\nCMP R12,RSI\nJNC 0x004060a4\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x00406153\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00406090\nTEST R8B,R8B\nJNZ 0x00406598\nCMP EBX,0x2\nJNZ 0x0040610a\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x0040610a\nCMP R12,RSI\nJNC 0x004060e2\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004060f1\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00406100\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x00406114\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040612b\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00406145\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x00406040\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00406496\nJMP 0x004064b9\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x00405d1b\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x00405d1b\nJMP 0x00406598\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x004064c5\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405d26\nJMP 0x004063f0\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00405ee2\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00406496\nJMP 0x004064b9\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x00406207\nMOV RDI,R10\nCALL 0x00401480\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x004014a0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004064df\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x004064d7\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x004064e6\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x004062ce\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x004062c6\nBT RDI,RDX\nJC 0x00406632\nINC RCX\nCMP RCX,R14\nJC 0x004062b0\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x004016f0\nTEST EAX,EAX\nJNZ 0x004062e3\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x004016e0\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00406225\nJMP 0x00406529\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405d26\nJMP 0x004063f0\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x00405d19\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x00405d19\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x00405d19\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x00405d1b\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00406562\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x00406598\nCMP R12,RSI\nJNC 0x0040638e\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x004063a1\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004063b0\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x004063bf\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405d26\nJMP 0x004063f0\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405d26\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x00406430\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x00406435\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00406490\nJMP 0x00406435\nTEST BPL,BPL\nJZ 0x00406490\nTEST R8B,R8B\nJNZ 0x00406598\nCMP EBX,0x2\nJNZ 0x00406478\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00406478\nCMP R12,RSI\nJNC 0x00406453\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00406462\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00406471\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00406482\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x004064c2\nJMP 0x004064be\nTEST DIL,0x1\nJZ 0x004064b9\nAND AL,0x1\nJNZ 0x004064b9\nCMP R12,RSI\nJNC 0x004064a4\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004064b3\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x004064c2\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x00406580\nJMP 0x00405ca0\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x00406524\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x0040651c\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x00406558\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x004064fa\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00406529\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00405fe8\nJMP 0x00406006\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00406529\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405d26\nJMP 0x004063f0\nCMP R13,R11\nJNZ 0x00405cab\nTEST R8B,R8B\nJZ 0x004065f2\nCMP EBX,0x2\nJNZ 0x004065f2\nTEST R12,R12\nJNZ 0x004065f2\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x00405a30\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x00406626\nTEST R8B,R8B\nJNZ 0x00406626\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x00406626\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x00406619\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x00406610\nCMP R12,RSI\nJNC 0x004065dd\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x004065dd\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x00406598\nTEST RSI,RSI\nJZ 0x00406649\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x409486\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x00405bec\nCALL 0x004013a0\n'
p137
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 12 ba ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 60 8f 40 00\nbf 88 94 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf 8a 94 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 53 b9 ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 86 94 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 8a 94 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 8a 94 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 86 94 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 b3 b7 ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd b8 8f 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 c7 b7 ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 67 b7 ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 81 b2 ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 53 b2 ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 19 b4 ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 e2 b3 ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 86 94 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 36 ad ff ff\n'
p138
S'.text:0000000000405a30\n.text:0000000000405a31\n.text:0000000000405a33\n.text:0000000000405a35\n.text:0000000000405a37\n.text:0000000000405a39\n.text:0000000000405a3a\n.text:0000000000405a41\n.text:0000000000405a44\n.text:0000000000405a47\n.text:0000000000405a4a\n.text:0000000000405a4f\n.text:0000000000405a54\n.text:0000000000405a59\n.text:0000000000405a5e\n.text:0000000000405a66\n.text:0000000000405a6a\n.text:0000000000405a70\n.text:0000000000405a78\n.text:0000000000405a7d\n.text:0000000000405a85\n.text:0000000000405a8a\n.text:0000000000405a8e\n.text:0000000000405a90\n.text:0000000000405a93\n.text:0000000000405a96\n.text:0000000000405a99\n.text:0000000000405a9e\n.text:0000000000405aa1\n.text:0000000000405aa4\n.text:0000000000405aa7\n.text:0000000000405aaa\n.text:0000000000405aac\n.text:0000000000405aaf\n.text:0000000000405ab4\n.text:0000000000405ab7\n.text:0000000000405abc\n.text:0000000000405ac3\n.text:0000000000405ac8\n.text:0000000000405acb\n.text:0000000000405ad0\n.text:0000000000405ad5\n.text:0000000000405ada\n.text:0000000000405add\n.text:0000000000405ae2\n.text:0000000000405ae7\n.text:0000000000405aec\n.text:0000000000405aee\n.text:0000000000405af0\n.text:0000000000405af5\n.text:0000000000405af7\n.text:0000000000405afa\n.text:0000000000405afc\n.text:0000000000405afe\n.text:0000000000405b00\n.text:0000000000405b03\n.text:0000000000405b05\n.text:0000000000405b0a\n.text:0000000000405b0e\n.text:0000000000405b14\n.text:0000000000405b17\n.text:0000000000405b19\n.text:0000000000405b1b\n.text:0000000000405b1d\n.text:0000000000405b20\n.text:0000000000405b25\n.text:0000000000405b28\n.text:0000000000405b2d\n.text:0000000000405b32\n.text:0000000000405b35\n.text:0000000000405b38\n.text:0000000000405b3b\n.text:0000000000405b3e\n.text:0000000000405b43\n.text:0000000000405b46\n.text:0000000000405b49\n.text:0000000000405b4e\n.text:0000000000405b51\n.text:0000000000405b53\n.text:0000000000405b56\n.text:0000000000405b58\n.text:0000000000405b5a\n.text:0000000000405b5d\n.text:0000000000405b62\n.text:0000000000405b67\n.text:0000000000405b6c\n.text:0000000000405b6f\n.text:0000000000405b75\n.text:0000000000405b77\n.text:0000000000405b7a\n.text:0000000000405b7d\n.text:0000000000405b80\n.text:0000000000405b82\n.text:0000000000405b84\n.text:0000000000405b87\n.text:0000000000405b8a\n.text:0000000000405b8f\n.text:0000000000405b92\n.text:0000000000405b94\n.text:0000000000405b97\n.text:0000000000405b99\n.text:0000000000405b9e\n.text:0000000000405ba1\n.text:0000000000405ba6\n.text:0000000000405bac\n.text:0000000000405bb2\n.text:0000000000405bb4\n.text:0000000000405bb9\n.text:0000000000405bbf\n.text:0000000000405bc2\n.text:0000000000405bc5\n.text:0000000000405bc8\n.text:0000000000405bca\n.text:0000000000405bcf\n.text:0000000000405bd2\n.text:0000000000405bd8\n.text:0000000000405bdd\n.text:0000000000405be3\n.text:0000000000405be6\n.text:0000000000405be9\n.text:0000000000405bec\n.text:0000000000405bf4\n.text:0000000000405bf6\n.text:0000000000405bf8\n.text:0000000000405bfb\n.text:0000000000405bff\n.text:0000000000405c01\n.text:0000000000405c04\n.text:0000000000405c08\n.text:0000000000405c0a\n.text:0000000000405c0d\n.text:0000000000405c10\n.text:0000000000405c13\n.text:0000000000405c15\n.text:0000000000405c19\n.text:0000000000405c1b\n.text:0000000000405c1f\n.text:0000000000405c22\n.text:0000000000405c25\n.text:0000000000405c28\n.text:0000000000405c2a\n.text:0000000000405c2e\n.text:0000000000405c37\n.text:0000000000405c3a\n.text:0000000000405c3c\n.text:0000000000405c40\n.text:0000000000405c42\n.text:0000000000405c46\n.text:0000000000405c48\n.text:0000000000405c4b\n.text:0000000000405c4f\n.text:0000000000405c51\n.text:0000000000405c54\n.text:0000000000405c58\n.text:0000000000405c5d\n.text:0000000000405c60\n.text:0000000000405c64\n.text:0000000000405c6c\n.text:0000000000405c6f\n.text:0000000000405c72\n.text:0000000000405c74\n.text:0000000000405c78\n.text:0000000000405c7b\n.text:0000000000405c7d\n.text:0000000000405c82\n.text:0000000000405c86\n.text:0000000000405c8b\n.text:0000000000405c90\n.text:0000000000405c94\n.text:0000000000405c9a\n.text:0000000000405ca0\n.text:0000000000405ca5\n.text:0000000000405cab\n.text:0000000000405cb0\n.text:0000000000405cb2\n.text:0000000000405cb7\n.text:0000000000405cbb\n.text:0000000000405cbd\n.text:0000000000405cc1\n.text:0000000000405cc3\n.text:0000000000405cc5\n.text:0000000000405cc8\n.text:0000000000405ccd\n.text:0000000000405ccf\n.text:0000000000405cd4\n.text:0000000000405cd9\n.text:0000000000405cdd\n.text:0000000000405ce2\n.text:0000000000405ce7\n.text:0000000000405cea\n.text:0000000000405ced\n.text:0000000000405cef\n.text:0000000000405cf1\n.text:0000000000405cf6\n.text:0000000000405cfa\n.text:0000000000405d00\n.text:0000000000405d02\n.text:0000000000405d04\n.text:0000000000405d06\n.text:0000000000405d0e\n.text:0000000000405d13\n.text:0000000000405d19\n.text:0000000000405d1b\n.text:0000000000405d20\n.text:0000000000405d26\n.text:0000000000405d2f\n.text:0000000000405d35\n.text:0000000000405d40\n.text:0000000000405d42\n.text:0000000000405d45\n.text:0000000000405d49\n.text:0000000000405d51\n.text:0000000000405d54\n.text:0000000000405d59\n.text:0000000000405d5b\n.text:0000000000405d5e\n.text:0000000000405d60\n.text:0000000000405d65\n.text:0000000000405d68\n.text:0000000000405d6d\n.text:0000000000405d70\n.text:0000000000405d75\n.text:0000000000405d79\n.text:0000000000405d7e\n.text:0000000000405d80\n.text:0000000000405d82\n.text:0000000000405d88\n.text:0000000000405d8d\n.text:0000000000405d92\n.text:0000000000405d95\n.text:0000000000405d9a\n.text:0000000000405d9e\n.text:0000000000405da3\n.text:0000000000405da8\n.text:0000000000405daa\n.text:0000000000405dac\n.text:0000000000405db1\n.text:0000000000405db3\n.text:0000000000405db6\n.text:0000000000405dbc\n.text:0000000000405dbf\n.text:0000000000405dc5\n.text:0000000000405dc8\n.text:0000000000405dce\n.text:0000000000405dd3\n.text:0000000000405dd7\n.text:0000000000405ddd\n.text:0000000000405de0\n.text:0000000000405de3\n.text:0000000000405de7\n.text:0000000000405dea\n.text:0000000000405dec\n.text:0000000000405def\n.text:0000000000405df5\n.text:0000000000405dfa\n.text:0000000000405dff\n.text:0000000000405e05\n.text:0000000000405e08\n.text:0000000000405e0e\n.text:0000000000405e11\n.text:0000000000405e13\n.text:0000000000405e15\n.text:0000000000405e17\n.text:0000000000405e19\n.text:0000000000405e1c\n.text:0000000000405e1e\n.text:0000000000405e23\n.text:0000000000405e28\n.text:0000000000405e2b\n.text:0000000000405e2d\n.text:0000000000405e32\n.text:0000000000405e37\n.text:0000000000405e3a\n.text:0000000000405e3c\n.text:0000000000405e41\n.text:0000000000405e45\n.text:0000000000405e48\n.text:0000000000405e4b\n.text:0000000000405e4d\n.text:0000000000405e52\n.text:0000000000405e57\n.text:0000000000405e59\n.text:0000000000405e5c\n.text:0000000000405e5f\n.text:0000000000405e65\n.text:0000000000405e69\n.text:0000000000405e6c\n.text:0000000000405e72\n.text:0000000000405e76\n.text:0000000000405e79\n.text:0000000000405e7c\n.text:0000000000405e82\n.text:0000000000405e85\n.text:0000000000405e87\n.text:0000000000405e8c\n.text:0000000000405e91\n.text:0000000000405e94\n.text:0000000000405e96\n.text:0000000000405e9b\n.text:0000000000405e9f\n.text:0000000000405ea4\n.text:0000000000405eaa\n.text:0000000000405eaf\n.text:0000000000405eb1\n.text:0000000000405eb6\n.text:0000000000405ebc\n.text:0000000000405ebe\n.text:0000000000405ec0\n.text:0000000000405ec2\n.text:0000000000405ec4\n.text:0000000000405ec9\n.text:0000000000405ecf\n.text:0000000000405ed1\n.text:0000000000405ed3\n.text:0000000000405ed8\n.text:0000000000405ede\n.text:0000000000405ee0\n.text:0000000000405ee2\n.text:0000000000405ee7\n.text:0000000000405ee9\n.text:0000000000405eef\n.text:0000000000405ef4\n.text:0000000000405efa\n.text:0000000000405efd\n.text:0000000000405f00\n.text:0000000000405f06\n.text:0000000000405f0b\n.text:0000000000405f0e\n.text:0000000000405f11\n.text:0000000000405f17\n.text:0000000000405f1a\n.text:0000000000405f20\n.text:0000000000405f23\n.text:0000000000405f25\n.text:0000000000405f2a\n.text:0000000000405f2f\n.text:0000000000405f32\n.text:0000000000405f34\n.text:0000000000405f39\n.text:0000000000405f3e\n.text:0000000000405f41\n.text:0000000000405f43\n.text:0000000000405f48\n.text:0000000000405f4c\n.text:0000000000405f4e\n.text:0000000000405f53\n.text:0000000000405f56\n.text:0000000000405f59\n.text:0000000000405f5f\n.text:0000000000405f62\n.text:0000000000405f68\n.text:0000000000405f6b\n.text:0000000000405f71\n.text:0000000000405f76\n.text:0000000000405f79\n.text:0000000000405f7f\n.text:0000000000405f82\n.text:0000000000405f88\n.text:0000000000405f8b\n.text:0000000000405f8d\n.text:0000000000405f91\n.text:0000000000405f97\n.text:0000000000405f9c\n.text:0000000000405fa0\n.text:0000000000405fa9\n.text:0000000000405faf\n.text:0000000000405fb4\n.text:0000000000405fb9\n.text:0000000000405fbe\n.text:0000000000405fc1\n.text:0000000000405fc6\n.text:0000000000405fc9\n.text:0000000000405fcc\n.text:0000000000405fd1\n.text:0000000000405fd6\n.text:0000000000405fda\n.text:0000000000405fdf\n.text:0000000000405fe4\n.text:0000000000405fe8\n.text:0000000000405fea\n.text:0000000000405fef\n.text:0000000000405ff5\n.text:0000000000405ff8\n.text:0000000000405ffa\n.text:0000000000405ffd\n.text:0000000000406000\n.text:0000000000406006\n.text:000000000040600b\n.text:000000000040600e\n.text:0000000000406011\n.text:0000000000406014\n.text:0000000000406017\n.text:0000000000406019\n.text:000000000040601d\n.text:000000000040601f\n.text:0000000000406024\n.text:0000000000406029\n.text:000000000040602f\n.text:0000000000406040\n.text:0000000000406045\n.text:0000000000406047\n.text:000000000040604a\n.text:000000000040604c\n.text:000000000040604f\n.text:0000000000406051\n.text:0000000000406054\n.text:0000000000406056\n.text:000000000040605b\n.text:0000000000406060\n.text:0000000000406063\n.text:0000000000406065\n.text:000000000040606a\n.text:000000000040606e\n.text:0000000000406076\n.text:0000000000406079\n.text:000000000040607c\n.text:000000000040607e\n.text:0000000000406082\n.text:0000000000406090\n.text:0000000000406094\n.text:000000000040609a\n.text:000000000040609d\n.text:000000000040609f\n.text:00000000004060a4\n.text:00000000004060a7\n.text:00000000004060a9\n.text:00000000004060b0\n.text:00000000004060b3\n.text:00000000004060b8\n.text:00000000004060bb\n.text:00000000004060c0\n.text:00000000004060c2\n.text:00000000004060c5\n.text:00000000004060cb\n.text:00000000004060ce\n.text:00000000004060d0\n.text:00000000004060d4\n.text:00000000004060d6\n.text:00000000004060d8\n.text:00000000004060db\n.text:00000000004060dd\n.text:00000000004060e2\n.text:00000000004060e7\n.text:00000000004060ea\n.text:00000000004060ec\n.text:00000000004060f1\n.text:00000000004060f6\n.text:00000000004060f9\n.text:00000000004060fb\n.text:0000000000406100\n.text:0000000000406104\n.text:0000000000406106\n.text:000000000040610a\n.text:000000000040610d\n.text:000000000040610f\n.text:0000000000406114\n.text:0000000000406119\n.text:000000000040611c\n.text:000000000040611e\n.text:0000000000406121\n.text:0000000000406124\n.text:0000000000406127\n.text:000000000040612b\n.text:0000000000406130\n.text:0000000000406133\n.text:0000000000406135\n.text:0000000000406138\n.text:000000000040613b\n.text:000000000040613e\n.text:0000000000406141\n.text:0000000000406145\n.text:0000000000406149\n.text:000000000040614d\n.text:0000000000406151\n.text:0000000000406153\n.text:0000000000406157\n.text:000000000040615a\n.text:0000000000406160\n.text:0000000000406164\n.text:0000000000406168\n.text:000000000040616e\n.text:0000000000406173\n.text:0000000000406176\n.text:0000000000406179\n.text:000000000040617e\n.text:0000000000406181\n.text:0000000000406183\n.text:0000000000406186\n.text:000000000040618d\n.text:0000000000406193\n.text:0000000000406195\n.text:0000000000406199\n.text:000000000040619f\n.text:00000000004061a4\n.text:00000000004061a9\n.text:00000000004061af\n.text:00000000004061b2\n.text:00000000004061b4\n.text:00000000004061b9\n.text:00000000004061bf\n.text:00000000004061c4\n.text:00000000004061c6\n.text:00000000004061cb\n.text:00000000004061d1\n.text:00000000004061d3\n.text:00000000004061d6\n.text:00000000004061da\n.text:00000000004061e0\n.text:00000000004061e5\n.text:00000000004061f1\n.text:00000000004061f5\n.text:00000000004061f7\n.text:00000000004061fa\n.text:00000000004061ff\n.text:0000000000406204\n.text:0000000000406207\n.text:000000000040620b\n.text:0000000000406210\n.text:0000000000406212\n.text:0000000000406216\n.text:0000000000406218\n.text:0000000000406220\n.text:0000000000406225\n.text:000000000040622a\n.text:000000000040622e\n.text:0000000000406232\n.text:000000000040623a\n.text:000000000040623d\n.text:0000000000406242\n.text:0000000000406245\n.text:0000000000406248\n.text:000000000040624d\n.text:0000000000406250\n.text:0000000000406253\n.text:0000000000406259\n.text:000000000040625d\n.text:0000000000406267\n.text:000000000040626d\n.text:0000000000406271\n.text:0000000000406276\n.text:000000000040627c\n.text:0000000000406280\n.text:0000000000406283\n.text:0000000000406287\n.text:0000000000406289\n.text:000000000040628e\n.text:0000000000406293\n.text:0000000000406297\n.text:0000000000406299\n.text:000000000040629e\n.text:00000000004062a3\n.text:00000000004062a7\n.text:00000000004062ac\n.text:00000000004062b0\n.text:00000000004062b4\n.text:00000000004062b7\n.text:00000000004062ba\n.text:00000000004062bc\n.text:00000000004062c0\n.text:00000000004062c6\n.text:00000000004062c9\n.text:00000000004062cc\n.text:00000000004062ce\n.text:00000000004062d2\n.text:00000000004062d7\n.text:00000000004062d9\n.text:00000000004062db\n.text:00000000004062e3\n.text:00000000004062e8\n.text:00000000004062eb\n.text:00000000004062f3\n.text:00000000004062f6\n.text:00000000004062f9\n.text:00000000004062fe\n.text:0000000000406301\n.text:0000000000406303\n.text:0000000000406308\n.text:000000000040630d\n.text:0000000000406313\n.text:0000000000406318\n.text:000000000040631b\n.text:0000000000406320\n.text:0000000000406326\n.text:000000000040632b\n.text:0000000000406330\n.text:0000000000406336\n.text:000000000040633a\n.text:000000000040633d\n.text:0000000000406343\n.text:0000000000406349\n.text:000000000040634f\n.text:0000000000406354\n.text:0000000000406356\n.text:0000000000406359\n.text:000000000040635f\n.text:0000000000406363\n.text:0000000000406365\n.text:000000000040636f\n.text:0000000000406373\n.text:0000000000406379\n.text:000000000040637c\n.text:000000000040637e\n.text:0000000000406384\n.text:0000000000406387\n.text:0000000000406389\n.text:000000000040638e\n.text:0000000000406393\n.text:0000000000406396\n.text:000000000040639a\n.text:000000000040639c\n.text:00000000004063a1\n.text:00000000004063a6\n.text:00000000004063a9\n.text:00000000004063ab\n.text:00000000004063b0\n.text:00000000004063b5\n.text:00000000004063b8\n.text:00000000004063ba\n.text:00000000004063bf\n.text:00000000004063c3\n.text:00000000004063c5\n.text:00000000004063c8\n.text:00000000004063cb\n.text:00000000004063d0\n.text:00000000004063d6\n.text:00000000004063d8\n.text:00000000004063dd\n.text:00000000004063e2\n.text:00000000004063e8\n.text:00000000004063f0\n.text:00000000004063f5\n.text:00000000004063f7\n.text:00000000004063fc\n.text:00000000004063ff\n.text:0000000000406401\n.text:0000000000406404\n.text:0000000000406406\n.text:0000000000406409\n.text:000000000040640c\n.text:000000000040640f\n.text:0000000000406411\n.text:0000000000406419\n.text:000000000040641c\n.text:000000000040641e\n.text:0000000000406420\n.text:0000000000406430\n.text:0000000000406433\n.text:0000000000406435\n.text:0000000000406438\n.text:000000000040643e\n.text:0000000000406441\n.text:0000000000406443\n.text:0000000000406445\n.text:0000000000406447\n.text:0000000000406449\n.text:000000000040644c\n.text:000000000040644e\n.text:0000000000406453\n.text:0000000000406458\n.text:000000000040645b\n.text:000000000040645d\n.text:0000000000406462\n.text:0000000000406467\n.text:000000000040646a\n.text:000000000040646c\n.text:0000000000406471\n.text:0000000000406475\n.text:0000000000406478\n.text:000000000040647b\n.text:000000000040647d\n.text:0000000000406482\n.text:0000000000406485\n.text:0000000000406488\n.text:000000000040648a\n.text:0000000000406490\n.text:0000000000406494\n.text:0000000000406496\n.text:0000000000406498\n.text:000000000040649a\n.text:000000000040649d\n.text:000000000040649f\n.text:00000000004064a4\n.text:00000000004064a9\n.text:00000000004064ac\n.text:00000000004064ae\n.text:00000000004064b3\n.text:00000000004064b7\n.text:00000000004064b9\n.text:00000000004064bc\n.text:00000000004064be\n.text:00000000004064c2\n.text:00000000004064c5\n.text:00000000004064c8\n.text:00000000004064cc\n.text:00000000004064d2\n.text:00000000004064d7\n.text:00000000004064df\n.text:00000000004064e4\n.text:00000000004064e6\n.text:00000000004064ee\n.text:00000000004064f3\n.text:00000000004064f5\n.text:00000000004064fa\n.text:00000000004064ff\n.text:0000000000406503\n.text:0000000000406505\n.text:000000000040650a\n.text:000000000040650d\n.text:0000000000406510\n.text:0000000000406512\n.text:000000000040651a\n.text:000000000040651c\n.text:0000000000406524\n.text:0000000000406529\n.text:000000000040652d\n.text:0000000000406532\n.text:0000000000406537\n.text:000000000040653b\n.text:0000000000406540\n.text:0000000000406545\n.text:0000000000406549\n.text:000000000040654d\n.text:0000000000406553\n.text:0000000000406558\n.text:0000000000406560\n.text:0000000000406562\n.text:0000000000406564\n.text:0000000000406568\n.text:000000000040656d\n.text:0000000000406573\n.text:0000000000406580\n.text:0000000000406583\n.text:0000000000406589\n.text:000000000040658c\n.text:000000000040658e\n.text:0000000000406591\n.text:0000000000406593\n.text:0000000000406596\n.text:0000000000406598\n.text:00000000004065a0\n.text:00000000004065a6\n.text:00000000004065aa\n.text:00000000004065ad\n.text:00000000004065b1\n.text:00000000004065b6\n.text:00000000004065ba\n.text:00000000004065be\n.text:00000000004065c1\n.text:00000000004065c4\n.text:00000000004065c7\n.text:00000000004065cb\n.text:00000000004065cf\n.text:00000000004065d1\n.text:00000000004065d6\n.text:00000000004065da\n.text:00000000004065dd\n.text:00000000004065e0\n.text:00000000004065e7\n.text:00000000004065e8\n.text:00000000004065ea\n.text:00000000004065ec\n.text:00000000004065ee\n.text:00000000004065f0\n.text:00000000004065f1\n.text:00000000004065f2\n.text:00000000004065fa\n.text:00000000004065fd\n.text:00000000004065ff\n.text:0000000000406602\n.text:0000000000406604\n.text:0000000000406606\n.text:0000000000406608\n.text:000000000040660a\n.text:000000000040660d\n.text:0000000000406610\n.text:0000000000406613\n.text:0000000000406615\n.text:0000000000406619\n.text:000000000040661c\n.text:000000000040661f\n.text:0000000000406622\n.text:0000000000406624\n.text:0000000000406626\n.text:0000000000406629\n.text:000000000040662b\n.text:0000000000406630\n.text:0000000000406632\n.text:0000000000406637\n.text:000000000040663c\n.text:000000000040663f\n.text:0000000000406641\n.text:0000000000406646\n.text:0000000000406649\n.text:000000000040664e\n.text:0000000000406651\n.text:0000000000406657\n.text:000000000040665d\n.text:0000000000406660\n.text:0000000000406665\n'
p139
tp140
sS'set_quoting_style'
p141
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p142
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p143
S'TEST RDI,RDI\nMOV EAX,0x60c300\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p144
S'48 85 ff\nb8 00 c3 60 00\n48 0f 45 c7\n89 30\nc3\n'
p145
S'.text:0000000000405910\n.text:0000000000405913\n.text:0000000000405918\n.text:000000000040591c\n.text:000000000040591e\n'
p146
tp147
sS'quotearg_n_style_colon'
p148
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p149
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00406a40\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x00405920\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x00406810\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p151
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p152
S'.text:0000000000406bc0\n.text:0000000000406bc1\n.text:0000000000406bc3\n.text:0000000000406bc4\n.text:0000000000406bc8\n.text:0000000000406bcb\n.text:0000000000406bcd\n.text:0000000000406bd2\n.text:0000000000406bd5\n.text:0000000000406bda\n.text:0000000000406bdf\n.text:0000000000406be4\n.text:0000000000406be7\n.text:0000000000406bec\n.text:0000000000406bf3\n.text:0000000000406bf5\n.text:0000000000406bf8\n.text:0000000000406bfb\n.text:0000000000406c00\n.text:0000000000406c04\n.text:0000000000406c05\n.text:0000000000406c07\n.text:0000000000406c08\n'
p153
tp154
sS'textdomain'
p155
(S'\n__stdcall textdomain()\n'
p156
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_0060c070)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x0060c070]\n'
p158
S'ff 25 3a ac 20 00\n'
p159
S'.plt:0000000000401430\n'
p160
tp161
sS'xmemdup'
p162
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p163
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p164
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x00407640\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401570\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p165
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 cc 9d ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p166
S'.text:0000000000407780\n.text:0000000000407782\n.text:0000000000407784\n.text:0000000000407785\n.text:0000000000407788\n.text:000000000040778b\n.text:000000000040778e\n.text:0000000000407793\n.text:0000000000407796\n.text:0000000000407799\n.text:000000000040779c\n.text:000000000040779f\n.text:00000000004077a4\n.text:00000000004077a7\n.text:00000000004077a8\n.text:00000000004077aa\n.text:00000000004077ac\n'
p167
tp168
sS'filename_unescape'
p169
(S'\n__stdcall filename_unescape(char * s, size_t s_len)\n'
p170
V\u000achar * filename_unescape(char *s,size_t s_len)\u000a\u000a{\u000a  long lVar1;\u000a  char *pcVar2;\u000a  ulong uVar3;\u000a  char cVar4;\u000a  \u000a  pcVar2 = s;\u000a  if (s_len != 0) {\u000a    uVar3 = 0;\u000a    pcVar2 = s;\u000a    do {\u000a      cVar4 = s[uVar3];\u000a      if (cVar4 == '\u005c\u005c') {\u000a        if (uVar3 == s_len - 1) {\u000a          return (char *)0x0;\u000a        }\u000a        lVar1 = uVar3 + 1;\u000a        uVar3 = uVar3 + 1;\u000a        cVar4 = '\u005c\u005c';\u000a        if (s[lVar1] != '\u005c\u005c') {\u000a          if (s[lVar1] != 'n') {\u000a            return (char *)0x0;\u000a          }\u000a          cVar4 = '\u005cn';\u000a        }\u000a      }\u000a      else {\u000a        if (cVar4 == 0) {\u000a          return (char *)0x0;\u000a        }\u000a      }\u000a      *pcVar2 = cVar4;\u000a      pcVar2 = pcVar2 + 1;\u000a      uVar3 = uVar3 + 1;\u000a    } while (uVar3 < s_len);\u000a  }\u000a  if (pcVar2 < s + s_len) {\u000a    *pcVar2 = 0;\u000a  }\u000a  return s;\u000a}\u000a\u000a
p171
S'TEST RSI,RSI\nMOV RAX,RDI\nJZ 0x00402c1e\nLEA R8,[RSI + -0x1]\nXOR EDX,EDX\nMOV RAX,RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX R10D,byte ptr [RDI + RDX*0x1]\nMOVSX ECX,R10B\nCMP ECX,0x5c\nJZ 0x00402bf0\nTEST ECX,ECX\nJNZ 0x00402c10\nJMP 0x00402c2d\nCMP RDX,R8\nJZ 0x00402c33\nMOVSX R9D,byte ptr [RDI + RDX*0x1 + 0x1]\nINC RDX\nMOV R10B,0x5c\nCMP R9D,0x5c\nJZ 0x00402c10\nCMP R9D,0x6e\nJNZ 0x00402c39\nMOV R10B,0xa\nMOV byte ptr [RAX],R10B\nINC RAX\nINC RDX\nCMP RDX,RSI\nJC 0x00402bd0\nADD RSI,RDI\nCMP RAX,RSI\nJNC 0x00402c29\nMOV byte ptr [RAX],0x0\nMOV RAX,RDI\nRET\nXOR EDI,EDI\nMOV RAX,RDI\nRET\nXOR EDI,EDI\nMOV RAX,RDI\nRET\nXOR EDI,EDI\nMOV RAX,RDI\nRET\n'
p172
S'48 85 f6\n48 89 f8\n74 66\n4c 8d 46 ff\n31 d2\n48 89 f8\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n44 0f b6 14 17\n41 0f be ca\n83 f9 5c\n74 12\n85 c9\n75 2e\neb 49\n4c 39 c2\n74 3e\n44 0f be 4c 17 01\n48 ff c2\n41 b2 5c\n41 83 f9 5c\n74 09\n41 83 f9 6e\n75 2c\n41 b2 0a\n44 88 10\n48 ff c0\n48 ff c2\n48 39 f2\n72 b2\n48 01 fe\n48 39 f0\n73 03\nc6 00 00\n48 89 f8\nc3\n31 ff\n48 89 f8\nc3\n31 ff\n48 89 f8\nc3\n31 ff\n48 89 f8\nc3\n'
p173
S'.text:0000000000402bb0\n.text:0000000000402bb3\n.text:0000000000402bb6\n.text:0000000000402bb8\n.text:0000000000402bbc\n.text:0000000000402bbe\n.text:0000000000402bc1\n.text:0000000000402bd0\n.text:0000000000402bd5\n.text:0000000000402bd9\n.text:0000000000402bdc\n.text:0000000000402bde\n.text:0000000000402be0\n.text:0000000000402be2\n.text:0000000000402bf0\n.text:0000000000402bf3\n.text:0000000000402bf5\n.text:0000000000402bfb\n.text:0000000000402bfe\n.text:0000000000402c01\n.text:0000000000402c05\n.text:0000000000402c07\n.text:0000000000402c0b\n.text:0000000000402c0d\n.text:0000000000402c10\n.text:0000000000402c13\n.text:0000000000402c16\n.text:0000000000402c19\n.text:0000000000402c1c\n.text:0000000000402c1e\n.text:0000000000402c21\n.text:0000000000402c24\n.text:0000000000402c26\n.text:0000000000402c29\n.text:0000000000402c2c\n.text:0000000000402c2d\n.text:0000000000402c2f\n.text:0000000000402c32\n.text:0000000000402c33\n.text:0000000000402c35\n.text:0000000000402c38\n.text:0000000000402c39\n.text:0000000000402c3b\n.text:0000000000402c3e\n'
p174
tp175
sS'get_quoting_style'
p176
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p177
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p178
S'TEST RDI,RDI\nMOV EAX,0x60c300\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p179
S'48 85 ff\nb8 00 c3 60 00\n48 0f 45 c7\n8b 00\nc3\n'
p180
S'.text:0000000000405900\n.text:0000000000405903\n.text:0000000000405908\n.text:000000000040590c\n.text:000000000040590e\n'
p181
tp182
sS'fread_unlocked'
p183
(S'\n__stdcall fread_unlocked(void * __ptr, size_t __size, size_t __n, FILE * __stream)\n'
p184
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fread_unlocked_0060c068)();\u000a  return sVar1;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x0060c068]\n'
p186
S'ff 25 42 ac 20 00\n'
p187
S'.plt:0000000000401420\n'
p188
tp189
sS'ferror_unlocked'
p190
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p191
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_0060c0f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x0060c0f8]\n'
p193
S'ff 25 b2 ab 20 00\n'
p194
S'.plt:0000000000401540\n'
p195
tp196
sS'exit'
p197
(S'\n__stdcall exit(int __status)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_0060c1b0)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x0060c1b0]\n'
p200
S'ff 25 fa aa 20 00\n'
p201
S'.plt:00000000004016b0\n'
p202
tp203
sS'quote_mem'
p204
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p205
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p206
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00406cd0\n'
p207
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p208
S'.text:0000000000406ce0\n.text:0000000000406ce3\n.text:0000000000406ce6\n.text:0000000000406ce8\n.text:0000000000406ceb\n.text:0000000000406cee\n'
p209
tp210
sS'locale_charset'
p211
(S'\n__stdcall locale_charset()\n'
p212
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_00407d8d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_00407d8d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p213
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x004015c0\nTEST RAX,RAX\nMOV R14D,0x4095e1\nCMOVNZ R14,RAX\nCALL 0x00407da0\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00407d65\nJMP 0x00407d8d\nMOV RDI,RBX\nCALL 0x00401480\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401480\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x00407d8d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401560\nTEST EAX,EAX\nJZ 0x00407d80\nCMP BPL,0x2a\nJNZ 0x00407d40\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00407d40\nMOV RDI,RBX\nCALL 0x00401480\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x409c38\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p214
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 a2 98 ff ff\n48 85 c0\n41 be e1 95 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 38 97 ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 2a 97 ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 f0 97 ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 f8 96 ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 38 9c 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p215
S'.text:0000000000407d10\n.text:0000000000407d11\n.text:0000000000407d13\n.text:0000000000407d14\n.text:0000000000407d19\n.text:0000000000407d1e\n.text:0000000000407d21\n.text:0000000000407d27\n.text:0000000000407d2b\n.text:0000000000407d30\n.text:0000000000407d33\n.text:0000000000407d36\n.text:0000000000407d39\n.text:0000000000407d3b\n.text:0000000000407d40\n.text:0000000000407d43\n.text:0000000000407d48\n.text:0000000000407d4c\n.text:0000000000407d51\n.text:0000000000407d56\n.text:0000000000407d5b\n.text:0000000000407d60\n.text:0000000000407d63\n.text:0000000000407d65\n.text:0000000000407d68\n.text:0000000000407d6b\n.text:0000000000407d70\n.text:0000000000407d72\n.text:0000000000407d74\n.text:0000000000407d78\n.text:0000000000407d7a\n.text:0000000000407d7e\n.text:0000000000407d80\n.text:0000000000407d83\n.text:0000000000407d88\n.text:0000000000407d8d\n.text:0000000000407d91\n.text:0000000000407d96\n.text:0000000000407d9a\n.text:0000000000407d9b\n.text:0000000000407d9d\n.text:0000000000407d9e\n'
p216
tp217
sS'fadvise'
p218
(S'\n__stdcall fadvise(FILE * fp)\n'
p219
V\u000avoid fadvise(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int __advise;\u000a  \u000a  if (fp != (FILE *)0x0) {\u000a    __fd = fileno((FILE *)fp);\u000a    fdadvise(__fd,0,0,__advise);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p220
S'PUSH RBX\nMOV EBX,ESI\nTEST RDI,RDI\nJZ 0x00405778\nCALL 0x00401590\nXOR ESI,ESI\nXOR EDX,EDX\nMOV EDI,EAX\nMOV ECX,EBX\nPOP RBX\nJMP 0x00405750\nPOP RBX\nRET\n'
p221
S'53\n89 f3\n48 85 ff\n74 10\ne8 23 be ff ff\n31 f6\n31 d2\n89 c7\n89 d9\n5b\neb d8\n5b\nc3\n'
p222
S'.text:0000000000405760\n.text:0000000000405761\n.text:0000000000405763\n.text:0000000000405766\n.text:0000000000405768\n.text:000000000040576d\n.text:000000000040576f\n.text:0000000000405771\n.text:0000000000405773\n.text:0000000000405775\n.text:0000000000405776\n.text:0000000000405778\n.text:0000000000405779\n'
p223
tp224
sS'set_program_name'
p225
(S'\n__stdcall set_program_name(char * argv0)\n'
p226
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p227
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00405891\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x004014c0\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x0040587b\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x408f48\nMOV EDX,0x7\nCALL 0x004013c0\nTEST EAX,EAX\nJNZ 0x0040587b\nMOV ESI,0x408f50\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x004013c0\nTEST EAX,EAX\nJNZ 0x00405878\nADD R14,0x3\nMOV qword ptr [0x0060c280],R14\nMOV RBX,R14\nMOV qword ptr [0x0060c2f8],RBX\nMOV qword ptr [0x0060c2a0],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x0060c2c0]\nMOV EDI,0x408f10\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x004016c0\nCALL 0x004013a0\n'
p228
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 97 bc ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 48 8f 40 00\nba 07 00 00 00\ne8 6d bb ff ff\n85 c0\n75 24\nbe 50 8f 40 00\nba 03 00 00 00\n4c 89 f7\ne8 57 bb ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 08 6a 20 00\n4c 89 f3\n48 89 1d 76 6a 20 00\n48 89 1d 17 6a 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d 28 6a 20 00\nbf 10 8f 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 14 be ff ff\ne8 ef ba ff ff\n'
p229
S'.text:0000000000405810\n.text:0000000000405812\n.text:0000000000405813\n.text:0000000000405814\n.text:0000000000405817\n.text:000000000040581a\n.text:000000000040581c\n.text:0000000000405821\n.text:0000000000405824\n.text:0000000000405829\n.text:000000000040582c\n.text:0000000000405830\n.text:0000000000405834\n.text:0000000000405837\n.text:000000000040583a\n.text:000000000040583e\n.text:0000000000405840\n.text:0000000000405844\n.text:0000000000405849\n.text:000000000040584e\n.text:0000000000405853\n.text:0000000000405855\n.text:0000000000405857\n.text:000000000040585c\n.text:0000000000405861\n.text:0000000000405864\n.text:0000000000405869\n.text:000000000040586b\n.text:000000000040586d\n.text:0000000000405871\n.text:0000000000405878\n.text:000000000040587b\n.text:0000000000405882\n.text:0000000000405889\n.text:000000000040588d\n.text:000000000040588e\n.text:0000000000405890\n.text:0000000000405891\n.text:0000000000405898\n.text:000000000040589d\n.text:00000000004058a2\n.text:00000000004058a7\n.text:00000000004058ac\n'
p230
tp231
sS'fileno'
p232
(S'\n__stdcall fileno(FILE * __stream)\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_0060c120)();\u000a  return iVar1;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x0060c120]\n'
p235
S'ff 25 8a ab 20 00\n'
p236
S'.plt:0000000000401590\n'
p237
tp238
sS'digest_check'
p239
(S'\n__stdcall digest_check(char * checkfile_name)\n'
p240
V\u000a_Bool digest_check(char *checkfile_name)\u000a\u000a{\u000a  uint uVar1;\u000a  bool bVar2;\u000a  char "0123456789abcdef8.25" [16];\u000a  _Bool _Var3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  int iVar6;\u000a  FILE *fp;\u000a  __int32_t **pp_Var7;\u000a  undefined8 uVar8;\u000a  char *pcVar9;\u000a  size_t s_len;\u000a  uint *puVar10;\u000a  ulong uVar11;\u000a  uintmax_t n;\u000a  byte bVar12;\u000a  uintmax_t n_00;\u000a  long lVar13;\u000a  long lVar14;\u000a  ulong uVar15;\u000a  bool bVar16;\u000a  int binary;\u000a  uchar bin_buffer_unaligned [32];\u000a  uintmax_t local_d0;\u000a  char *local_a8;\u000a  uintmax_t local_a0;\u000a  long local_98;\u000a  char *local_90;\u000a  char *local_88;\u000a  size_t local_80;\u000a  uintmax_t local_78;\u000a  uchar *local_70;\u000a  uintmax_t local_68;\u000a  int local_5c [11];\u000a  \u000a  local_90 = (char *)ptr_align();\u000a  if ((*checkfile_name == '-') && (checkfile_name[1] == 0)) {\u000a    have_read_stdin = 1;\u000a    dcgettext(0,"standard input",5);\u000a    bVar2 = true;\u000a    fp = stdin;\u000aLAB_004020ca:\u000a    local_88 = (char *)0x0;\u000a    local_80 = 0;\u000a    lVar13 = 0;\u000a    bVar5 = false;\u000a    bVar4 = false;\u000a    local_78 = 0;\u000a    local_d0 = 0;\u000a    lVar14 = 0;\u000a    n_00 = 0;\u000a    while( true ) {\u000a      lVar13 = lVar13 + 1;\u000a      if (lVar13 == 0) {\u000a        uVar8 = dcgettext(0,"%s: too many checksum lines",5);\u000a        pcVar9 = quotearg_n_style_colon((char *)0x0);\u000a        error(1,0,uVar8,pcVar9);\u000a      }\u000a      s_len = getline(&local_88,&local_80,(FILE *)fp);\u000a      if ((long)s_len < 1) break;\u000a      if (*local_88 != '#') {\u000a        if (local_88[s_len - 1] == '\u005cn') {\u000a          s_len = s_len - 1;\u000a          local_88[s_len] = 0;\u000a        }\u000a        _Var3 = split_3(local_88,s_len,&local_70,local_5c,&local_a8);\u000a        if ((_Var3 == false) ||\u000a           ((((bVar2 && (*local_a8 == '-')) && (local_a8[1] == 0)) ||\u000a            (_Var3 = hex_digits(local_70), _Var3 == false)))) {\u000a          if (warn == 1) {\u000a            uVar8 = dcgettext(0,"%s: %lu: improperly formatted %s checksum line",5);\u000a            pcVar9 = quotearg_n_style_colon((char *)0x0);\u000a            error(0,0,uVar8,pcVar9,lVar13,"SHA224");\u000a          }\u000a          n_00 = n_00 + 1;\u000a          lVar14 = lVar14 + 1;\u000a        }\u000a        else {\u000a          if (status_only == 0) {\u000a            pcVar9 = strchr(local_a8,10);\u000a            bVar16 = pcVar9 != (char *)0x0;\u000a          }\u000a          else {\u000a            bVar16 = false;\u000a          }\u000a          *local_90 = 1;\u000a          _Var3 = digest_file();\u000a          if (_Var3 == false) {\u000a            local_78 = local_78 + 1;\u000a            bVar4 = true;\u000a            if (status_only == 0) {\u000a              if (bVar16) {\u000a                putchar_unlocked(0x5c);\u000a              }\u000a              print_filename(local_a8);\u000a              uVar8 = dcgettext(0,"FAILED open or read",5);\u000a              __printf_chk(1,0x40976c,uVar8,uVar8);\u000a            }\u000a          }\u000a          else {\u000a            if ((ignore_missing == 1) && (*local_90 == 0)) {\u000aLAB_00402456:\u000a              bVar4 = true;\u000a            }\u000a            else {\u000a              uVar11 = 0;\u000a              if (digest_hex_bytes != 0) {\u000a                uVar11 = 0x1c;\u000a              }\u000a              uVar15 = 0;\u000a              local_a0 = n_00;\u000a              local_98 = lVar14;\u000a              if (digest_hex_bytes != 0) {\u000a                local_a0 = n_00;\u000a                local_98 = lVar14;\u000a                pp_Var7 = __ctype_tolower_loc();\u000a                uVar15 = 0;\u000a                do {\u000a                  if (((*pp_Var7)[(ulong)local_70[uVar15 * 2]] !=\u000a                       (int)"0123456789abcdef8.25"[(ulong)((byte)local_90[uVar15] >> 4)]) ||\u000a                     ((*pp_Var7)[(ulong)local_70[uVar15 * 2 + 1]] !=\u000a                      (int)*(char *)((ulong)((uint)(byte)local_90[uVar15] & 0xf) + 0x408ea0)))\u000a                  break;\u000a                  uVar15 = uVar15 + 1;\u000a                } while (uVar15 < uVar11);\u000a              }\u000a              n_00 = local_d0 + 1;\u000a              n = n_00;\u000a              bVar4 = bVar5;\u000a              if (uVar15 == uVar11) {\u000a                n = local_d0;\u000a                bVar4 = true;\u000a              }\u000a              if (status_only == 0) {\u000a                if ((uVar15 == uVar11) && (quiet != 0)) {\u000a                  n = local_d0;\u000a                  bVar4 = true;\u000a                }\u000a                else {\u000a                  local_68 = n_00;\u000a                  if (bVar16) {\u000a                    local_68 = n_00;\u000a                    putchar_unlocked(0x5c);\u000a                  }\u000a                  print_filename(local_a8);\u000a                  lVar14 = local_98;\u000a                  n_00 = local_a0;\u000a                  if (uVar15 == uVar11) {\u000a                    bVar5 = true;\u000a                    if (quiet == 0) {\u000a                      uVar8 = dcgettext(0,&DAT_00408d30,5);\u000a                      __printf_chk(1,0x40976c,uVar8,uVar8);\u000a                    }\u000a                    goto LAB_00402456;\u000a                  }\u000a                  uVar8 = dcgettext(0,"FAILED",5);\u000a                  __printf_chk(1,0x40976c,uVar8,uVar8);\u000a                  local_d0 = local_68;\u000a                  n = local_d0;\u000a                  bVar4 = bVar5;\u000a                }\u000a              }\u000a              bVar5 = bVar4;\u000a              local_d0 = n;\u000a              bVar4 = true;\u000a              n_00 = local_a0;\u000a              lVar14 = local_98;\u000a            }\u000a          }\u000a        }\u000a      }\u000a      iVar6 = feof_unlocked((FILE *)fp);\u000a      if ((iVar6 != 0) || (iVar6 = ferror_unlocked((FILE *)fp), iVar6 != 0)) break;\u000a    }\u000a    free(local_88);\u000a    iVar6 = ferror_unlocked((FILE *)fp);\u000a    if (iVar6 == 0) {\u000a      if ((bVar2) || (iVar6 = rpl_fclose(fp), iVar6 == 0)) {\u000a        n = local_78;\u000a        if (bVar4) {\u000a          if (status_only == 0) {\u000a            if (n_00 != 0) {\u000a              uVar11 = select_plural(n_00);\u000a              uVar8 = dcngettext(0,"WARNING: %lu line is improperly formatted",\u000a                                 "WARNING: %lu lines are improperly formatted",uVar11,5);\u000a              error(0,0,uVar8,n_00);\u000a            }\u000a            if (n != 0) {\u000a              uVar11 = select_plural(n);\u000a              uVar8 = dcngettext(0,"WARNING: %lu listed file could not be read",\u000a                                 "WARNING: %lu listed files could not be read",uVar11,5);\u000a              error(0,0,uVar8,n);\u000a            }\u000a            if (local_d0 != 0) {\u000a              uVar11 = select_plural(local_d0);\u000a              uVar8 = dcngettext(0,"WARNING: %lu computed checksum did NOT match",\u000a                                 "WARNING: %lu computed checksums did NOT match",uVar11,5);\u000a              error(0,0,uVar8,local_d0);\u000a            }\u000a            if ((!bVar5) && ((ignore_missing & 1) != 0)) {\u000a              uVar8 = dcgettext(0,"%s: no file was verified",5);\u000a              pcVar9 = quotearg_n_style_colon((char *)0x0);\u000a              error(0,0,uVar8,pcVar9);\u000a            }\u000a            if (!bVar4) {\u000a              bVar12 = 0;\u000a              goto LAB_00402558;\u000a            }\u000a          }\u000a          bVar12 = 0;\u000a          if (((n | local_d0) == 0) && (bVar5)) {\u000a            bVar12 = strict ^ 1 | lVar14 == 0;\u000a          }\u000a        }\u000a        else {\u000a          bVar12 = 0;\u000a          uVar8 = dcgettext(0,"%s: no properly formatted %s checksum lines found",5);\u000a          pcVar9 = quotearg_n_style_colon((char *)0x0);\u000a          error(0,0,uVar8,pcVar9,"SHA224");\u000a        }\u000a        goto LAB_00402558;\u000a      }\u000a      goto LAB_0040252b;\u000a    }\u000a    uVar8 = dcgettext(0,"%s: read error",5);\u000a    pcVar9 = quotearg_n_style_colon((char *)0x0);\u000a    uVar11 = 0;\u000a  }\u000a  else {\u000a    fp = fopen_safer(checkfile_name,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      bVar2 = false;\u000a      goto LAB_004020ca;\u000a    }\u000aLAB_0040252b:\u000a    puVar10 = (uint *)__errno_location();\u000a    uVar1 = *puVar10;\u000a    pcVar9 = quotearg_n_style_colon((char *)0x0);\u000a    uVar8 = 0x408ec5;\u000a    uVar11 = (ulong)uVar1;\u000a  }\u000a  bVar12 = 0;\u000a  error(0,uVar11,uVar8,pcVar9);\u000aLAB_00402558:\u000a  return (_Bool)(bVar12 & 1);\u000a}\u000a\u000a
p241
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV RBX,RDI\nLEA RDI,[0x80 + RSP]\nCALL 0x00402030\nMOV qword ptr [RSP + 0x48],RAX\nMOV qword ptr [RSP + 0x10],RBX\nCMP byte ptr [RBX],0x2d\nJNZ 0x0040207b\nMOV RAX,qword ptr [RSP + 0x10]\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x004020a0\nMOV ESI,0x4088dd\nMOV RDI,qword ptr [RSP + 0x10]\nCALL 0x00405780\nMOV R12,RAX\nTEST R12,R12\nJZ 0x0040252b\nMOV dword ptr [RSP + 0x24],0x0\nJMP 0x004020ca\nMOV byte ptr [0x0060c2e1],0x1\nXOR EDI,EDI\nMOV ESI,0x408ae3\nMOV EDX,0x5\nCALL 0x00401460\nMOV qword ptr [RSP + 0x10],RAX\nMOV R12,qword ptr [0x0060c290]\nMOV AL,0x1\nMOV dword ptr [RSP + 0x24],EAX\nMOV qword ptr [RSP + 0x50],0x0\nMOV qword ptr [RSP + 0x58],0x0\nLEA RBX,[RSP + 0x58]\nMOV R14D,0x0\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x28],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x60],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nXOR EBP,EBP\nJMP 0x00402470\nMOV RCX,qword ptr [RSP + 0x50]\nCMP byte ptr [RCX],0x23\nJZ 0x004021f9\nCMP byte ptr [RCX + RAX*0x1 + -0x1],0xa\nJNZ 0x0040212c\nDEC RAX\nMOV byte ptr [RCX + RAX*0x1],0x0\nMOV RDI,qword ptr [RSP + 0x50]\nMOV RSI,RAX\nLEA RDX,[RSP + 0x68]\nLEA RCX,[RSP + 0x7c]\nLEA R8,[RSP + 0x30]\nCALL 0x004028e0\nTEST AL,AL\nJZ 0x004021a0\nCMP byte ptr [RSP + 0x24],0x0\nJZ 0x00402170\nMOV RAX,qword ptr [RSP + 0x30]\nCMP byte ptr [RAX],0x2d\nJNZ 0x00402170\nCMP byte ptr [RAX + 0x1],0x0\nJZ 0x004021a0\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RSP + 0x68]\nCALL 0x00402a80\nTEST AL,AL\nJZ 0x004021a0\nMOV AL,byte ptr [0x0060c2d0]\nTEST AL,AL\nJZ 0x0040221e\nXOR R13D,R13D\nJMP 0x00402234\nCMP byte ptr [0x0060c2d1],0x1\nJNZ 0x004021f3\nXOR EDI,EDI\nMOV ESI,0x408ce6\nMOV EDX,0x5\nCALL 0x00401460\nMOV R13,RBP\nMOV RBP,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nMOV R9D,0x408467\nXOR EAX,EAX\nMOV RDX,RBP\nMOV RBP,R13\nLEA RBX,[RSP + 0x58]\nMOV R8,R14\nCALL 0x00401640\nINC RBP\nINC R15\nMOV RDI,R12\nCALL 0x00401700\nTEST EAX,EAX\nJNZ 0x004024cd\nMOV RDI,R12\nCALL 0x00401540\nTEST EAX,EAX\nJZ 0x00402470\nJMP 0x004024cd\nMOV RDI,qword ptr [RSP + 0x30]\nMOV ESI,0xa\nCALL 0x004014b0\nTEST RAX,RAX\nSETNZ R13B\nMOV RSI,qword ptr [RSP + 0x48]\nMOV byte ptr [RSI],0x1\nMOV RDI,qword ptr [RSP + 0x30]\nCALL 0x00402730\nTEST AL,AL\nJZ 0x00402328\nCMP byte ptr [0x0060c2d3],0x1\nMOV RAX,qword ptr [RSP + 0x48]\nJNZ 0x00402265\nCMP byte ptr [RAX],0x0\nJZ 0x00402456\nMOV qword ptr [RSP + 0x38],RBP\nMOV qword ptr [RSP + 0x40],R15\nMOV AL,byte ptr [0x0060c2e0]\nTEST AL,AL\nMOV EBP,0x0\nMOV EAX,0x1c\nCMOVNZ RBP,RAX\nMOV R15D,0x0\nJZ 0x004022ea\nCALL 0x00401710\nMOV RBX,qword ptr [RSP + 0x48]\nMOV RAX,qword ptr [RAX]\nMOV RCX,qword ptr [RSP + 0x68]\nXOR R15D,R15D\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVZX ESI,byte ptr [RCX + R15*0x2]\nMOVZX EDX,byte ptr [RBX + R15*0x1]\nMOV RDI,RDX\nSHR RDI,0x4\nMOVSX EDI,byte ptr [0x408ea0 + RDI]\nCMP dword ptr [RAX + RSI*0x4],EDI\nJNZ 0x004022ea\nMOVZX ESI,byte ptr [RCX + R15*0x2 + 0x1]\nAND EDX,0xf\nMOVSX EDX,byte ptr [0x408ea0 + RDX]\nCMP dword ptr [RAX + RSI*0x4],EDX\nJNZ 0x004022ea\nINC R15\nCMP R15,RBP\nJC 0x004022b0\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RSI,[RCX + 0x1]\nCMP R15,RBP\nMOV AL,0x1\nMOV qword ptr [RSP + 0x18],RAX\nMOV RAX,qword ptr [RSP + 0x28]\nJNZ 0x00402306\nMOV AL,0x1\nCMOVNZ RCX,RSI\nMOV DL,byte ptr [0x0060c2d0]\nTEST DL,DL\nLEA RBX,[RSP + 0x58]\nJZ 0x0040238c\nMOV qword ptr [RSP + 0x28],RAX\nMOV qword ptr [RSP + 0x8],RCX\nJMP 0x00402404\nINC qword ptr [RSP + 0x60]\nMOV AL,0x1\nMOV qword ptr [RSP + 0x18],RAX\nMOV AL,byte ptr [0x0060c2d0]\nTEST AL,AL\nJNZ 0x004021f9\nTEST R13B,R13B\nJZ 0x00402351\nMOV EDI,0x5c\nCALL 0x00401580\nMOV RDI,qword ptr [RSP + 0x30]\nMOVZX ESI,R13B\nCALL 0x00402850\nXOR EDI,EDI\nMOV ESI,0x408d15\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV ESI,0x40976c\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401620\nJMP 0x004021f9\nCMP R15,RBP\nJNZ 0x004023ab\nMOV AL,byte ptr [0x0060c2d2]\nTEST AL,AL\nJZ 0x004023ab\nMOV AL,0x1\nMOV qword ptr [RSP + 0x28],RAX\nMOV AL,0x1\nMOV qword ptr [RSP + 0x18],RAX\nJMP 0x00402404\nMOV qword ptr [RSP + 0x70],RSI\nTEST R13B,R13B\nJZ 0x004023bf\nMOV EDI,0x5c\nCALL 0x00401580\nMOV RDI,qword ptr [RSP + 0x30]\nMOVZX ESI,R13B\nCALL 0x00402850\nCMP R15,RBP\nJZ 0x00402413\nXOR EDI,EDI\nMOV ESI,0x408d29\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV ESI,0x40976c\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401620\nMOV RAX,qword ptr [RSP + 0x70]\nMOV qword ptr [RSP + 0x8],RAX\nMOV R15,qword ptr [RSP + 0x40]\nMOV RBP,qword ptr [RSP + 0x38]\nJMP 0x004021f9\nMOV AL,0x1\nMOV qword ptr [RSP + 0x28],RAX\nMOV AL,byte ptr [0x0060c2d2]\nTEST AL,AL\nMOV R15,qword ptr [RSP + 0x40]\nMOV RBP,qword ptr [RSP + 0x38]\nJNZ 0x00402456\nXOR EDI,EDI\nMOV ESI,0x408d30\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV ESI,0x40976c\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401620\nMOV AL,0x1\nMOV qword ptr [RSP + 0x18],RAX\nJMP 0x004021f9\nINC R14\nJNZ 0x004024b4\nXOR EDI,EDI\nMOV ESI,0x408cca\nMOV EDX,0x5\nCALL 0x00401460\nMOV R13,R15\nMOV R15,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00406bc0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R15\nMOV R15,R13\nCALL 0x00401640\nLEA RDI,[RSP + 0x50]\nMOV RSI,RBX\nMOV RDX,R12\nCALL 0x004016a0\nTEST RAX,RAX\nJG 0x00402110\nMOV RDI,qword ptr [RSP + 0x50]\nCALL 0x00401390\nMOV RDI,R12\nCALL 0x00401540\nTEST EAX,EAX\nJZ 0x00402518\nXOR EBX,EBX\nXOR EDI,EDI\nMOV ESI,0x408d33\nMOV EDX,0x5\nCALL 0x00401460\nMOV R14,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nJMP 0x00402553\nCMP byte ptr [RSP + 0x24],0x0\nJNZ 0x0040256f\nMOV RDI,R12\nCALL 0x00407850\nTEST EAX,EAX\nJZ 0x0040256f\nCALL 0x004013b0\nMOV EBP,dword ptr [RAX]\nXOR EBX,EBX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x408ec5\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401640\nAND BL,0x1\nMOV EAX,EBX\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV R12,R15\nMOV R15,qword ptr [RSP + 0x18]\nAND R15B,0x1\nJZ 0x004026de\nMOV AL,byte ptr [0x0060c2d0]\nTEST AL,AL\nMOV R14,qword ptr [RSP + 0x60]\nMOV RAX,qword ptr [RSP + 0x8]\nJNZ 0x004026b0\nMOV RBX,RBP\nTEST RBX,RBX\nJZ 0x004025dc\nMOV RDI,RBX\nCALL 0x00402af0\nXOR EDI,EDI\nMOV ESI,0x408d74\nMOV EDX,0x408d9e\nMOV R8D,0x5\nMOV RCX,RAX\nCALL 0x00401680\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nMOV RCX,RBX\nCALL 0x00401640\nMOV RAX,qword ptr [RSP + 0x8]\nTEST R14,R14\nJZ 0x0040261c\nMOV RDI,R14\nCALL 0x00402af0\nXOR EDI,EDI\nMOV ESI,0x408dca\nMOV EDX,0x408df5\nMOV R8D,0x5\nMOV RCX,RAX\nCALL 0x00401680\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nMOV RCX,R14\nCALL 0x00401640\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00402660\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00402af0\nXOR EDI,EDI\nMOV ESI,0x408e21\nMOV EDX,0x408e4e\nMOV R8D,0x5\nMOV RCX,RAX\nCALL 0x00401680\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nMOV RCX,qword ptr [RSP + 0x8]\nCALL 0x00401640\nMOV RAX,qword ptr [RSP + 0x8]\nTEST byte ptr [RSP + 0x28],0x1\nJNZ 0x004026ab\nTEST byte ptr [0x0060c2d3],0x1\nJZ 0x004026ab\nXOR EDI,EDI\nMOV ESI,0x408e7c\nMOV EDX,0x5\nCALL 0x00401460\nMOV RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401640\nMOV RAX,qword ptr [RSP + 0x8]\nTEST R15B,R15B\nJZ 0x00402721\nXOR EBX,EBX\nOR R14,RAX\nJNZ 0x00402558\nMOV RAX,qword ptr [RSP + 0x28]\nAND AL,0x1\nJZ 0x00402558\nMOV BL,byte ptr [0x0060c2d4]\nTEST R12,R12\nSETZ AL\nXOR BL,0x1\nOR BL,AL\nJMP 0x00402558\nXOR EBX,EBX\nXOR EDI,EDI\nMOV ESI,0x408d42\nMOV EDX,0x5\nCALL 0x00401460\nMOV R14,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nMOV R8D,0x408467\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00401640\nJMP 0x00402558\nXOR EBX,EBX\nJMP 0x00402558\n'
p242
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n48 89 fb\n48 8d bc 24 80 00 00 00\ne8 cf ff ff ff\n48 89 44 24 48\n48 89 5c 24 10\n80 3b 2d\n75 0b\n48 8b 44 24 10\n80 78 01 00\n74 25\nbe dd 88 40 00\n48 8b 7c 24 10\ne8 f6 36 00 00\n49 89 c4\n4d 85 e4\n0f 84 95 04 00 00\nc7 44 24 24 00 00 00 00\neb 2a\nc6 05 3a a2 20 00 01\n31 ff\nbe e3 8a 40 00\nba 05 00 00 00\ne8 a8 f3 ff ff\n48 89 44 24 10\n4c 8b 25 cc a1 20 00\nb0 01\n89 44 24 24\n48 c7 44 24 50 00 00 00 00\n48 c7 44 24 58 00 00 00 00\n48 8d 5c 24 58\n41 be 00 00 00 00\nb8 00 00 00 00\n48 89 44 24 28\n31 c0\n48 89 44 24 18\n31 c0\n48 89 44 24 60\n31 c0\n48 89 44 24 08\n45 31 ff\n31 ed\ne9 60 03 00 00\n48 8b 4c 24 50\n80 39 23\n0f 84 db 00 00 00\n80 7c 01 ff 0a\n75 07\n48 ff c8\nc6 04 01 00\n48 8b 7c 24 50\n48 89 c6\n48 8d 54 24 68\n48 8d 4c 24 7c\n4c 8d 44 24 30\ne8 98 07 00 00\n84 c0\n74 54\n80 7c 24 24 00\n74 1d\n48 8b 44 24 30\n80 38 2d\n75 13\n80 78 01 00\n74 3d\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 7c 24 68\ne8 06 09 00 00\n84 c0\n74 22\n8a 05 4c a1 20 00\n84 c0\n0f 84 92 00 00 00\n45 31 ed\ne9 a0 00 00 00\n80 3d 2a a1 20 00 01\n75 4a\n31 ff\nbe e6 8c 40 00\nba 05 00 00 00\ne8 a6 f2 ff ff\n49 89 ed\n48 89 c5\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 ef 49 00 00\n48 89 c1\n31 ff\n31 f6\n41 b9 67 84 40 00\n31 c0\n48 89 ea\n4c 89 ed\n48 8d 5c 24 58\n4d 89 f0\ne8 4d f4 ff ff\n48 ff c5\n49 ff c7\n4c 89 e7\ne8 ff f4 ff ff\n85 c0\n0f 85 c4 02 00 00\n4c 89 e7\ne8 2f f3 ff ff\n85 c0\n0f 84 57 02 00 00\ne9 af 02 00 00\n48 8b 7c 24 30\nbe 0a 00 00 00\ne8 83 f2 ff ff\n48 85 c0\n41 0f 95 c5\n48 8b 74 24 48\nc6 06 01\n48 8b 7c 24 30\ne8 ea 04 00 00\n84 c0\n0f 84 da 00 00 00\n80 3d 7e a0 20 00 01\n48 8b 44 24 48\n75 09\n80 38 00\n0f 84 f1 01 00 00\n48 89 6c 24 38\n4c 89 7c 24 40\n8a 05 6b a0 20 00\n84 c0\nbd 00 00 00 00\nb8 1c 00 00 00\n48 0f 45 e8\n41 bf 00 00 00 00\n74 5d\ne8 7e f4 ff ff\n48 8b 5c 24 48\n48 8b 00\n48 8b 4c 24 68\n45 31 ff\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n42 0f b6 34 79\n42 0f b6 14 3b\n48 89 d7\n48 c1 ef 04\n0f be bf a0 8e 40 00\n39 3c b0\n75 1d\n42 0f b6 74 79 01\n83 e2 0f\n0f be 92 a0 8e 40 00\n39 14 b0\n75 08\n49 ff c7\n49 39 ef\n72 c6\n48 8b 4c 24 08\n48 8d 71 01\n49 39 ef\nb0 01\n48 89 44 24 18\n48 8b 44 24 28\n75 02\nb0 01\n48 0f 45 ce\n8a 15 c0 9f 20 00\n84 d2\n48 8d 5c 24 58\n74 73\n48 89 44 24 28\n48 89 4c 24 08\ne9 dc 00 00 00\n48 ff 44 24 60\nb0 01\n48 89 44 24 18\n8a 05 96 9f 20 00\n84 c0\n0f 85 b7 fe ff ff\n45 84 ed\n74 0a\nbf 5c 00 00 00\ne8 2f f2 ff ff\n48 8b 7c 24 30\n41 0f b6 f5\ne8 f1 04 00 00\n31 ff\nbe 15 8d 40 00\nba 05 00 00 00\ne8 f0 f0 ff ff\n48 89 c1\nbf 01 00 00 00\nbe 6c 97 40 00\n31 c0\n48 89 ca\ne8 99 f2 ff ff\ne9 6d fe ff ff\n49 39 ef\n75 1a\n8a 05 3b 9f 20 00\n84 c0\n74 10\nb0 01\n48 89 44 24 28\nb0 01\n48 89 44 24 18\neb 59\n48 89 74 24 70\n45 84 ed\n74 0a\nbf 5c 00 00 00\ne8 c1 f1 ff ff\n48 8b 7c 24 30\n41 0f b6 f5\ne8 83 04 00 00\n49 39 ef\n74 41\n31 ff\nbe 29 8d 40 00\nba 05 00 00 00\ne8 7d f0 ff ff\n48 89 c1\nbf 01 00 00 00\nbe 6c 97 40 00\n31 c0\n48 89 ca\ne8 26 f2 ff ff\n48 8b 44 24 70\n48 89 44 24 08\n4c 8b 7c 24 40\n48 8b 6c 24 38\ne9 e6 fd ff ff\nb0 01\n48 89 44 24 28\n8a 05 b2 9e 20 00\n84 c0\n4c 8b 7c 24 40\n48 8b 6c 24 38\n75 28\n31 ff\nbe 30 8d 40 00\nba 05 00 00 00\ne8 21 f0 ff ff\n48 89 c1\nbf 01 00 00 00\nbe 6c 97 40 00\n31 c0\n48 89 ca\ne8 ca f1 ff ff\nb0 01\n48 89 44 24 18\ne9 97 fd ff ff\n49 ff c6\n75 3f\n31 ff\nbe ca 8c 40 00\nba 05 00 00 00\ne8 da ef ff ff\n4d 89 fd\n49 89 c7\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 23 47 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n4c 89 fa\n4d 89 ef\ne8 8c f1 ff ff\n48 8d 7c 24 50\n48 89 de\n4c 89 e2\ne8 dc f1 ff ff\n48 85 c0\n0f 8f 43 fc ff ff\n48 8b 7c 24 50\ne8 b9 ee ff ff\n4c 89 e7\ne8 61 f0 ff ff\n85 c0\n74 35\n31 db\n31 ff\nbe 33 8d 40 00\nba 05 00 00 00\ne8 6a ef ff ff\n49 89 c6\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 b6 46 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n4c 89 f2\neb 3b\n80 7c 24 24 00\n75 50\n4c 89 e7\ne8 29 53 00 00\n85 c0\n74 44\ne8 80 ee ff ff\n8b 28\n31 db\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 7b 46 00 00\n48 89 c1\n31 ff\nba c5 8e 40 00\n31 c0\n89 ee\ne8 e8 f0 ff ff\n80 e3 01\n89 d8\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n4d 89 fc\n4c 8b 7c 24 18\n41 80 e7 01\n0f 84 5d 01 00 00\n8a 05 49 9d 20 00\n84 c0\n4c 8b 74 24 60\n48 8b 44 24 08\n0f 85 17 01 00 00\n48 89 eb\n48 85 db\n74 3b\n48 89 df\ne8 47 05 00 00\n31 ff\nbe 74 8d 40 00\nba 9e 8d 40 00\n41 b8 05 00 00 00\n48 89 c1\ne8 bd f0 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\n48 89 d9\ne8 69 f0 ff ff\n48 8b 44 24 08\n4d 85 f6\n74 3b\n4c 89 f7\ne8 07 05 00 00\n31 ff\nbe ca 8d 40 00\nba f5 8d 40 00\n41 b8 05 00 00 00\n48 89 c1\ne8 7d f0 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\n4c 89 f1\ne8 29 f0 ff ff\n48 8b 44 24 08\n48 85 c0\n74 3f\n48 8b 7c 24 08\ne8 c5 04 00 00\n31 ff\nbe 21 8e 40 00\nba 4e 8e 40 00\n41 b8 05 00 00 00\n48 89 c1\ne8 3b f0 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\n48 8b 4c 24 08\ne8 e5 ef ff ff\n48 8b 44 24 08\nf6 44 24 28 01\n75 44\nf6 05 65 9c 20 00 01\n74 3b\n31 ff\nbe 7c 8e 40 00\nba 05 00 00 00\ne8 df ed ff ff\n48 89 c3\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 2b 45 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 9a ef ff ff\n48 8b 44 24 08\n45 84 ff\n74 71\n31 db\n49 09 c6\n0f 85 9d fe ff ff\n48 8b 44 24 28\n24 01\n0f 84 90 fe ff ff\n8a 1d 06 9c 20 00\n4d 85 e4\n0f 94 c0\n80 f3 01\n08 c3\ne9 7a fe ff ff\n31 db\n31 ff\nbe 42 8d 40 00\nba 05 00 00 00\ne8 6f ed ff ff\n49 89 c6\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 bb 44 00 00\n48 89 c1\n31 ff\n31 f6\n41 b8 67 84 40 00\n31 c0\n4c 89 f2\ne8 24 ef ff ff\ne9 37 fe ff ff\n31 db\ne9 30 fe ff ff\n'
p243
S'.text:0000000000402040\n.text:0000000000402041\n.text:0000000000402043\n.text:0000000000402045\n.text:0000000000402047\n.text:0000000000402049\n.text:000000000040204a\n.text:0000000000402051\n.text:0000000000402054\n.text:000000000040205c\n.text:0000000000402061\n.text:0000000000402066\n.text:000000000040206b\n.text:000000000040206e\n.text:0000000000402070\n.text:0000000000402075\n.text:0000000000402079\n.text:000000000040207b\n.text:0000000000402080\n.text:0000000000402085\n.text:000000000040208a\n.text:000000000040208d\n.text:0000000000402090\n.text:0000000000402096\n.text:000000000040209e\n.text:00000000004020a0\n.text:00000000004020a7\n.text:00000000004020a9\n.text:00000000004020ae\n.text:00000000004020b3\n.text:00000000004020b8\n.text:00000000004020bd\n.text:00000000004020c4\n.text:00000000004020c6\n.text:00000000004020ca\n.text:00000000004020d3\n.text:00000000004020dc\n.text:00000000004020e1\n.text:00000000004020e7\n.text:00000000004020ec\n.text:00000000004020f1\n.text:00000000004020f3\n.text:00000000004020f8\n.text:00000000004020fa\n.text:00000000004020ff\n.text:0000000000402101\n.text:0000000000402106\n.text:0000000000402109\n.text:000000000040210b\n.text:0000000000402110\n.text:0000000000402115\n.text:0000000000402118\n.text:000000000040211e\n.text:0000000000402123\n.text:0000000000402125\n.text:0000000000402128\n.text:000000000040212c\n.text:0000000000402131\n.text:0000000000402134\n.text:0000000000402139\n.text:000000000040213e\n.text:0000000000402143\n.text:0000000000402148\n.text:000000000040214a\n.text:000000000040214c\n.text:0000000000402151\n.text:0000000000402153\n.text:0000000000402158\n.text:000000000040215b\n.text:000000000040215d\n.text:0000000000402161\n.text:0000000000402163\n.text:0000000000402170\n.text:0000000000402175\n.text:000000000040217a\n.text:000000000040217c\n.text:000000000040217e\n.text:0000000000402184\n.text:0000000000402186\n.text:000000000040218c\n.text:000000000040218f\n.text:00000000004021a0\n.text:00000000004021a7\n.text:00000000004021a9\n.text:00000000004021ab\n.text:00000000004021b0\n.text:00000000004021b5\n.text:00000000004021ba\n.text:00000000004021bd\n.text:00000000004021c0\n.text:00000000004021c2\n.text:00000000004021c7\n.text:00000000004021cc\n.text:00000000004021d1\n.text:00000000004021d4\n.text:00000000004021d6\n.text:00000000004021d8\n.text:00000000004021de\n.text:00000000004021e0\n.text:00000000004021e3\n.text:00000000004021e6\n.text:00000000004021eb\n.text:00000000004021ee\n.text:00000000004021f3\n.text:00000000004021f6\n.text:00000000004021f9\n.text:00000000004021fc\n.text:0000000000402201\n.text:0000000000402203\n.text:0000000000402209\n.text:000000000040220c\n.text:0000000000402211\n.text:0000000000402213\n.text:0000000000402219\n.text:000000000040221e\n.text:0000000000402223\n.text:0000000000402228\n.text:000000000040222d\n.text:0000000000402230\n.text:0000000000402234\n.text:0000000000402239\n.text:000000000040223c\n.text:0000000000402241\n.text:0000000000402246\n.text:0000000000402248\n.text:000000000040224e\n.text:0000000000402255\n.text:000000000040225a\n.text:000000000040225c\n.text:000000000040225f\n.text:0000000000402265\n.text:000000000040226a\n.text:000000000040226f\n.text:0000000000402275\n.text:0000000000402277\n.text:000000000040227c\n.text:0000000000402281\n.text:0000000000402285\n.text:000000000040228b\n.text:000000000040228d\n.text:0000000000402292\n.text:0000000000402297\n.text:000000000040229a\n.text:000000000040229f\n.text:00000000004022a2\n.text:00000000004022b0\n.text:00000000004022b5\n.text:00000000004022ba\n.text:00000000004022bd\n.text:00000000004022c1\n.text:00000000004022c8\n.text:00000000004022cb\n.text:00000000004022cd\n.text:00000000004022d3\n.text:00000000004022d6\n.text:00000000004022dd\n.text:00000000004022e0\n.text:00000000004022e2\n.text:00000000004022e5\n.text:00000000004022e8\n.text:00000000004022ea\n.text:00000000004022ef\n.text:00000000004022f3\n.text:00000000004022f6\n.text:00000000004022f8\n.text:00000000004022fd\n.text:0000000000402302\n.text:0000000000402304\n.text:0000000000402306\n.text:000000000040230a\n.text:0000000000402310\n.text:0000000000402312\n.text:0000000000402317\n.text:0000000000402319\n.text:000000000040231e\n.text:0000000000402323\n.text:0000000000402328\n.text:000000000040232d\n.text:000000000040232f\n.text:0000000000402334\n.text:000000000040233a\n.text:000000000040233c\n.text:0000000000402342\n.text:0000000000402345\n.text:0000000000402347\n.text:000000000040234c\n.text:0000000000402351\n.text:0000000000402356\n.text:000000000040235a\n.text:000000000040235f\n.text:0000000000402361\n.text:0000000000402366\n.text:000000000040236b\n.text:0000000000402370\n.text:0000000000402373\n.text:0000000000402378\n.text:000000000040237d\n.text:000000000040237f\n.text:0000000000402382\n.text:0000000000402387\n.text:000000000040238c\n.text:000000000040238f\n.text:0000000000402391\n.text:0000000000402397\n.text:0000000000402399\n.text:000000000040239b\n.text:000000000040239d\n.text:00000000004023a2\n.text:00000000004023a4\n.text:00000000004023a9\n.text:00000000004023ab\n.text:00000000004023b0\n.text:00000000004023b3\n.text:00000000004023b5\n.text:00000000004023ba\n.text:00000000004023bf\n.text:00000000004023c4\n.text:00000000004023c8\n.text:00000000004023cd\n.text:00000000004023d0\n.text:00000000004023d2\n.text:00000000004023d4\n.text:00000000004023d9\n.text:00000000004023de\n.text:00000000004023e3\n.text:00000000004023e6\n.text:00000000004023eb\n.text:00000000004023f0\n.text:00000000004023f2\n.text:00000000004023f5\n.text:00000000004023fa\n.text:00000000004023ff\n.text:0000000000402404\n.text:0000000000402409\n.text:000000000040240e\n.text:0000000000402413\n.text:0000000000402415\n.text:000000000040241a\n.text:0000000000402420\n.text:0000000000402422\n.text:0000000000402427\n.text:000000000040242c\n.text:000000000040242e\n.text:0000000000402430\n.text:0000000000402435\n.text:000000000040243a\n.text:000000000040243f\n.text:0000000000402442\n.text:0000000000402447\n.text:000000000040244c\n.text:000000000040244e\n.text:0000000000402451\n.text:0000000000402456\n.text:0000000000402458\n.text:000000000040245d\n.text:0000000000402470\n.text:0000000000402473\n.text:0000000000402475\n.text:0000000000402477\n.text:000000000040247c\n.text:0000000000402481\n.text:0000000000402486\n.text:0000000000402489\n.text:000000000040248c\n.text:000000000040248e\n.text:0000000000402493\n.text:0000000000402498\n.text:000000000040249d\n.text:00000000004024a0\n.text:00000000004024a5\n.text:00000000004024a7\n.text:00000000004024a9\n.text:00000000004024ac\n.text:00000000004024af\n.text:00000000004024b4\n.text:00000000004024b9\n.text:00000000004024bc\n.text:00000000004024bf\n.text:00000000004024c4\n.text:00000000004024c7\n.text:00000000004024cd\n.text:00000000004024d2\n.text:00000000004024d7\n.text:00000000004024da\n.text:00000000004024df\n.text:00000000004024e1\n.text:00000000004024e3\n.text:00000000004024e5\n.text:00000000004024e7\n.text:00000000004024ec\n.text:00000000004024f1\n.text:00000000004024f6\n.text:00000000004024f9\n.text:00000000004024fb\n.text:0000000000402500\n.text:0000000000402505\n.text:000000000040250a\n.text:000000000040250d\n.text:000000000040250f\n.text:0000000000402511\n.text:0000000000402513\n.text:0000000000402516\n.text:0000000000402518\n.text:000000000040251d\n.text:000000000040251f\n.text:0000000000402522\n.text:0000000000402527\n.text:0000000000402529\n.text:000000000040252b\n.text:0000000000402530\n.text:0000000000402532\n.text:0000000000402534\n.text:0000000000402536\n.text:000000000040253b\n.text:0000000000402540\n.text:0000000000402545\n.text:0000000000402548\n.text:000000000040254a\n.text:000000000040254f\n.text:0000000000402551\n.text:0000000000402553\n.text:0000000000402558\n.text:000000000040255b\n.text:000000000040255d\n.text:0000000000402564\n.text:0000000000402565\n.text:0000000000402567\n.text:0000000000402569\n.text:000000000040256b\n.text:000000000040256d\n.text:000000000040256e\n.text:000000000040256f\n.text:0000000000402572\n.text:0000000000402577\n.text:000000000040257b\n.text:0000000000402581\n.text:0000000000402587\n.text:0000000000402589\n.text:000000000040258e\n.text:0000000000402593\n.text:0000000000402599\n.text:000000000040259c\n.text:000000000040259f\n.text:00000000004025a1\n.text:00000000004025a4\n.text:00000000004025a9\n.text:00000000004025ab\n.text:00000000004025b0\n.text:00000000004025b5\n.text:00000000004025bb\n.text:00000000004025be\n.text:00000000004025c3\n.text:00000000004025c6\n.text:00000000004025c8\n.text:00000000004025ca\n.text:00000000004025cc\n.text:00000000004025cf\n.text:00000000004025d2\n.text:00000000004025d7\n.text:00000000004025dc\n.text:00000000004025df\n.text:00000000004025e1\n.text:00000000004025e4\n.text:00000000004025e9\n.text:00000000004025eb\n.text:00000000004025f0\n.text:00000000004025f5\n.text:00000000004025fb\n.text:00000000004025fe\n.text:0000000000402603\n.text:0000000000402606\n.text:0000000000402608\n.text:000000000040260a\n.text:000000000040260c\n.text:000000000040260f\n.text:0000000000402612\n.text:0000000000402617\n.text:000000000040261c\n.text:000000000040261f\n.text:0000000000402621\n.text:0000000000402626\n.text:000000000040262b\n.text:000000000040262d\n.text:0000000000402632\n.text:0000000000402637\n.text:000000000040263d\n.text:0000000000402640\n.text:0000000000402645\n.text:0000000000402648\n.text:000000000040264a\n.text:000000000040264c\n.text:000000000040264e\n.text:0000000000402651\n.text:0000000000402656\n.text:000000000040265b\n.text:0000000000402660\n.text:0000000000402665\n.text:0000000000402667\n.text:000000000040266e\n.text:0000000000402670\n.text:0000000000402672\n.text:0000000000402677\n.text:000000000040267c\n.text:0000000000402681\n.text:0000000000402684\n.text:0000000000402686\n.text:000000000040268b\n.text:0000000000402690\n.text:0000000000402695\n.text:0000000000402698\n.text:000000000040269a\n.text:000000000040269c\n.text:000000000040269e\n.text:00000000004026a1\n.text:00000000004026a6\n.text:00000000004026ab\n.text:00000000004026ae\n.text:00000000004026b0\n.text:00000000004026b2\n.text:00000000004026b5\n.text:00000000004026bb\n.text:00000000004026c0\n.text:00000000004026c2\n.text:00000000004026c8\n.text:00000000004026ce\n.text:00000000004026d1\n.text:00000000004026d4\n.text:00000000004026d7\n.text:00000000004026d9\n.text:00000000004026de\n.text:00000000004026e0\n.text:00000000004026e2\n.text:00000000004026e7\n.text:00000000004026ec\n.text:00000000004026f1\n.text:00000000004026f4\n.text:00000000004026f6\n.text:00000000004026fb\n.text:0000000000402700\n.text:0000000000402705\n.text:0000000000402708\n.text:000000000040270a\n.text:000000000040270c\n.text:0000000000402712\n.text:0000000000402714\n.text:0000000000402717\n.text:000000000040271c\n.text:0000000000402721\n.text:0000000000402723\n'
p244
tp245
sS'quotearg_buffer'
p246
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p247
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p248
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x60c300\nCMOVNZ RBP,R8\nCALL 0x004013b0\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x00405a30\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p249
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd 00 c3 60 00\n49 0f 45 e8\ne8 d8 b9 ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p250
S'.text:00000000004059b0\n.text:00000000004059b1\n.text:00000000004059b3\n.text:00000000004059b5\n.text:00000000004059b7\n.text:00000000004059b9\n.text:00000000004059ba\n.text:00000000004059bb\n.text:00000000004059be\n.text:00000000004059c1\n.text:00000000004059c4\n.text:00000000004059c7\n.text:00000000004059ca\n.text:00000000004059cf\n.text:00000000004059d3\n.text:00000000004059d8\n.text:00000000004059db\n.text:00000000004059dd\n.text:00000000004059e1\n.text:00000000004059e5\n.text:00000000004059e9\n.text:00000000004059ed\n.text:00000000004059f0\n.text:00000000004059f3\n.text:00000000004059f6\n.text:00000000004059f9\n.text:00000000004059fc\n.text:00000000004059ff\n.text:0000000000405a03\n.text:0000000000405a04\n.text:0000000000405a09\n.text:0000000000405a0d\n.text:0000000000405a11\n.text:0000000000405a13\n.text:0000000000405a17\n.text:0000000000405a18\n.text:0000000000405a1a\n.text:0000000000405a1c\n.text:0000000000405a1e\n.text:0000000000405a20\n.text:0000000000405a21\n'
p251
tp252
sS'quotearg_colon'
p253
(S'\n__stdcall quotearg_colon(char * arg)\n'
p254
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p255
S'MOV ESI,0x3a\nJMP 0x00406b90\n'
p256
S'be 3a 00 00 00\neb e9\n'
p257
S'.text:0000000000406ba0\n.text:0000000000406ba5\n'
p258
tp259
sS'print_filename'
p260
(S'\n__stdcall print_filename(char * file)\n'
p261
V\u000avoid print_filename(char *file)\u000a\u000a{\u000a  char cVar1;\u000a  char in_SIL;\u000a  int __c;\u000a  \u000a  if (in_SIL != 0) {\u000a    cVar1 = *file;\u000a    if (cVar1 != 0) {\u000a      file = file + 1;\u000a      do {\u000a        __c = (int)cVar1;\u000a        if (__c == 0x5c) {\u000a          fputs_unlocked("\u005c\u005c\u005c\u005c",stdout);\u000a        }\u000a        else {\u000a          if (__c == 10) {\u000a            fputs_unlocked("\u005c\u005cn",stdout);\u000a          }\u000a          else {\u000a            putchar_unlocked(__c);\u000a          }\u000a        }\u000a        cVar1 = *file;\u000a        file = file + 1;\u000a      } while (cVar1 != 0);\u000a    }\u000a    return;\u000a  }\u000a  fputs_unlocked(file,stdout);\u000a  return;\u000a}\u000a\u000a
p262
S'PUSH RBX\nMOV RBX,RDI\nTEST SIL,SIL\nJZ 0x004028c1\nMOV AL,byte ptr [RBX]\nTEST AL,AL\nJZ 0x004028bf\nINC RBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVSX EDI,AL\nCMP EDI,0x5c\nJZ 0x00402890\nCMP EDI,0xa\nJNZ 0x004028b0\nMOV RSI,qword ptr [0x0060c288]\nMOV EDI,0x408e95\nCALL 0x00401530\nJMP 0x004028b5\nMOV RSI,qword ptr [0x0060c288]\nMOV EDI,0x408e98\nCALL 0x00401530\nJMP 0x004028b5\nCALL 0x00401580\nMOVZX EAX,byte ptr [RBX]\nINC RBX\nTEST AL,AL\nJNZ 0x00402870\nPOP RBX\nRET\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401530\n'
p263
S'53\n48 89 fb\n40 84 f6\n74 68\n8a 03\n84 c0\n74 60\n48 ff c3\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f be f8\n83 ff 5c\n74 18\n83 ff 0a\n75 33\n48 8b 35 04 9a 20 00\nbf 95 8e 40 00\ne8 a2 ec ff ff\neb 25\n48 8b 35 f1 99 20 00\nbf 98 8e 40 00\ne8 8f ec ff ff\neb 12\ne8 cb ec ff ff\n0f b6 03\n48 ff c3\n84 c0\n75 b1\n5b\nc3\n48 8b 35 c0 99 20 00\n48 89 df\n5b\ne9 5f ec ff ff\n'
p264
S'.text:0000000000402850\n.text:0000000000402851\n.text:0000000000402854\n.text:0000000000402857\n.text:0000000000402859\n.text:000000000040285b\n.text:000000000040285d\n.text:000000000040285f\n.text:0000000000402862\n.text:0000000000402870\n.text:0000000000402873\n.text:0000000000402876\n.text:0000000000402878\n.text:000000000040287b\n.text:000000000040287d\n.text:0000000000402884\n.text:0000000000402889\n.text:000000000040288e\n.text:0000000000402890\n.text:0000000000402897\n.text:000000000040289c\n.text:00000000004028a1\n.text:00000000004028b0\n.text:00000000004028b5\n.text:00000000004028b8\n.text:00000000004028bb\n.text:00000000004028bd\n.text:00000000004028bf\n.text:00000000004028c0\n.text:00000000004028c1\n.text:00000000004028c8\n.text:00000000004028cb\n.text:00000000004028cc\n'
p265
tp266
sS'mbrtowc'
p267
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p268
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_0060c0a8)();\u000a  return sVar1;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x0060c0a8]\n'
p270
S'ff 25 02 ac 20 00\n'
p271
S'.plt:00000000004014a0\n'
p272
tp273
sS'rpl_fflush'
p274
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p275
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_0060c130)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p276
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00407aad\nMOV RDI,RBX\nCALL 0x004015e0\nTEST EAX,EAX\nJZ 0x00407aad\nMOV RDI,RBX\nCALL 0x00407ac0\nMOV RDI,RBX\nPOP RBX\nJMP 0x004015b0\n'
p277
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 3f 9b ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 fa 9a ff ff\n'
p278
S'.text:0000000000407a90\n.text:0000000000407a91\n.text:0000000000407a94\n.text:0000000000407a97\n.text:0000000000407a99\n.text:0000000000407a9c\n.text:0000000000407aa1\n.text:0000000000407aa3\n.text:0000000000407aa5\n.text:0000000000407aa8\n.text:0000000000407aad\n.text:0000000000407ab0\n.text:0000000000407ab1\n'
p279
tp280
sS'setlocale'
p281
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p282
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_0060c160)();\u000a  return pcVar1;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x0060c160]\n'
p284
S'ff 25 4a ab 20 00\n'
p285
S'.plt:0000000000401610\n'
p286
tp287
sS'c_toupper'
p288
(S'\n__stdcall c_toupper()\n'
p289
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p290
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p291
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p292
S'.text:0000000000407c90\n.text:0000000000407c93\n.text:0000000000407c96\n.text:0000000000407c99\n.text:0000000000407c9c\n'
p293
tp294
sS'bindtextdomain'
p295
(S'\n__stdcall bindtextdomain()\n'
p296
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_0060c080)();\u000a  return;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x0060c080]\n'
p298
S'ff 25 2a ac 20 00\n'
p299
S'.plt:0000000000401450\n'
p300
tp301
sS'fcntl'
p302
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_0060c060)();\u000a  return iVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x0060c060]\n'
p305
S'ff 25 4a ac 20 00\n'
p306
S'.plt:0000000000401410\n'
p307
tp308
sS'set_char_quoting'
p309
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p310
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p311
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x60c300\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p312
S'89 f1\n48 85 ff\nbe 00 c3 60 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p313
S'.text:0000000000405920\n.text:0000000000405922\n.text:0000000000405925\n.text:000000000040592a\n.text:000000000040592e\n.text:0000000000405930\n.text:0000000000405933\n.text:0000000000405937\n.text:000000000040593c\n.text:000000000040593f\n.text:0000000000405941\n.text:0000000000405943\n.text:0000000000405946\n.text:0000000000405948\n.text:000000000040594b\n.text:000000000040594d\n.text:0000000000405950\n.text:0000000000405955\n'
p314
tp315
sS'quotearg_n'
p316
(S'\n__stdcall quotearg_n(char * arg)\n'
p317
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p318
S'MOV RDX,-0x1\nMOV ECX,0x60c300\nJMP 0x00406810\n'
p319
S'48 c7 c2 ff ff ff ff\nb9 00 c3 60 00\neb 02\n'
p320
S'.text:0000000000406800\n.text:0000000000406807\n.text:000000000040680c\n'
p321
tp322
sS'mbsinit'
p323
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_0060c1c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x0060c1c8]\n'
p326
S'ff 25 e2 aa 20 00\n'
p327
S'.plt:00000000004016e0\n'
p328
tp329
sS'dcgettext'
p330
(S'\n__stdcall dcgettext()\n'
p331
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_0060c088)();\u000a  return;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x0060c088]\n'
p333
S'ff 25 22 ac 20 00\n'
p334
S'.plt:0000000000401460\n'
p335
tp336
sS'close_stream'
p337
(S'\n__stdcall close_stream(FILE * stream)\n'
p338
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p339
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x004013f0\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00401540\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x00407850\nTEST EBP,EBP\nJZ 0x00407cdb\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x00407cff\nCALL 0x004013b0\nMOV dword ptr [RAX],0x0\nJMP 0x00407cff\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x00407cff\nTEST CL,CL\nJNZ 0x00407cff\nCALL 0x004013b0\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p340
S'55\n41 56\n53\n48 89 fb\ne8 44 97 ff ff\n49 89 c6\n48 89 df\ne8 89 98 ff ff\n89 c5\n48 89 df\ne8 8f fb ff ff\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 dd 96 ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 be 96 ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p341
S'.text:0000000000407ca0\n.text:0000000000407ca1\n.text:0000000000407ca3\n.text:0000000000407ca4\n.text:0000000000407ca7\n.text:0000000000407cac\n.text:0000000000407caf\n.text:0000000000407cb2\n.text:0000000000407cb7\n.text:0000000000407cb9\n.text:0000000000407cbc\n.text:0000000000407cc1\n.text:0000000000407cc3\n.text:0000000000407cc5\n.text:0000000000407cca\n.text:0000000000407ccc\n.text:0000000000407cce\n.text:0000000000407cd3\n.text:0000000000407cd9\n.text:0000000000407cdb\n.text:0000000000407cdd\n.text:0000000000407ce0\n.text:0000000000407ce2\n.text:0000000000407ce4\n.text:0000000000407ce7\n.text:0000000000407ce9\n.text:0000000000407ceb\n.text:0000000000407ced\n.text:0000000000407cf2\n.text:0000000000407cf4\n.text:0000000000407cf7\n.text:0000000000407cfc\n.text:0000000000407cff\n.text:0000000000407d01\n.text:0000000000407d02\n.text:0000000000407d04\n.text:0000000000407d05\n'
p342
tp343
sS'quotearg_colon_mem'
p344
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p345
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p346
S'MOV EDX,0x3a\nJMP 0x00406b20\n'
p347
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p348
S'.text:0000000000406bb0\n.text:0000000000406bb5\n'
p349
tp350
sS'quotearg_free'
p351
(S'\n__stdcall quotearg_free()\n'
p352
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p353
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x0060c218]\nCMP dword ptr [0x0060c220],0x2\nJC 0x004067aa\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00401390\nINC RBX\nMOV EAX,dword ptr [0x0060c220]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x00406790\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x60c340\nCMP RDI,RAX\nJZ 0x004067d3\nCALL 0x00401390\nMOV qword ptr [0x0060c228],0x100\nMOV qword ptr [0x0060c230],0x60c340\nMOV EAX,0x60c228\nCMP R14,RAX\nJZ 0x004067f0\nMOV RDI,R14\nCALL 0x00401390\nMOV qword ptr [0x0060c218],0x60c228\nMOV dword ptr [0x0060c220],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p354
S'41 57\n41 56\n53\n4c 8b 35 9c 5a 20 00\n83 3d 9d 5a 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 f8 ab ff ff\n48 ff c3\n8b 05 7f 5a 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 40 c3 60 00\n48 39 c7\n74 1b\ne8 d3 ab ff ff\n48 c7 05 60 5a 20 00 00 01 00 00\n48 c7 05 5d 5a 20 00 40 c3 60 00\nb8 28 c2 60 00\n49 39 c6\n74 13\n4c 89 f7\ne8 ab ab ff ff\n48 c7 05 28 5a 20 00 28 c2 60 00\nc7 05 26 5a 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p355
S'.text:0000000000406770\n.text:0000000000406772\n.text:0000000000406774\n.text:0000000000406775\n.text:000000000040677c\n.text:0000000000406783\n.text:0000000000406785\n.text:0000000000406789\n.text:000000000040678e\n.text:0000000000406790\n.text:0000000000406793\n.text:0000000000406798\n.text:000000000040679b\n.text:00000000004067a1\n.text:00000000004067a5\n.text:00000000004067a8\n.text:00000000004067aa\n.text:00000000004067ae\n.text:00000000004067b3\n.text:00000000004067b6\n.text:00000000004067b8\n.text:00000000004067bd\n.text:00000000004067c8\n.text:00000000004067d3\n.text:00000000004067d8\n.text:00000000004067db\n.text:00000000004067dd\n.text:00000000004067e0\n.text:00000000004067e5\n.text:00000000004067f0\n.text:00000000004067fa\n.text:00000000004067fb\n.text:00000000004067fd\n.text:00000000004067ff\n'
p356
tp357
sS'quotearg_mem'
p358
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p359
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p360
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x004069d0\n'
p361
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p362
S'.text:00000000004069f0\n.text:00000000004069f3\n.text:00000000004069f6\n.text:00000000004069f8\n.text:00000000004069fb\n.text:00000000004069fe\n'
p363
tp364
sS'xcalloc'
p365
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p366
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p367
S'PUSH RAX\nCALL 0x00407800\nTEST RAX,RAX\nJZ 0x0040776d\nPOP RCX\nRET\nCALL 0x004077d0\n'
p368
S'50\ne8 9a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p369
S'.text:0000000000407760\n.text:0000000000407761\n.text:0000000000407766\n.text:0000000000407769\n.text:000000000040776b\n.text:000000000040776c\n.text:000000000040776d\n'
p370
tp371
sS'deregister_tm_clones'
p372
(S'\n__stdcall deregister_tm_clones()\n'
p373
V\u000a/* WARNING: Removing unreachable block (ram,0x00401775) */\u000a/* WARNING: Removing unreachable block (ram,0x0040177f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p374
S'MOV EAX,0x60c277\nPUSH RBP\nSUB RAX,0x60c270\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401790\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401790\nPOP RBP\nMOV EDI,0x60c270\nJMP RAX\nPOP RBP\nRET\n'
p375
S'b8 77 c2 60 00\n55\n48 2d 70 c2 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 70 c2 60 00\nff e0\n5d\nc3\n'
p376
S'.text:0000000000401760\n.text:0000000000401765\n.text:0000000000401766\n.text:000000000040176c\n.text:0000000000401770\n.text:0000000000401773\n.text:0000000000401775\n.text:000000000040177a\n.text:000000000040177d\n.text:000000000040177f\n.text:0000000000401780\n.text:0000000000401785\n.text:0000000000401790\n.text:0000000000401791\n'
p377
tp378
sS'ptr_align'
p379
(S'\n__stdcall ptr_align()\n'
p380
V\u000avoid * ptr_align(void)\u000a\u000a{\u000a  long in_RDI;\u000a  \u000a  return (void *)((in_RDI + 3) - (ulong)((uint)(in_RDI + 3) & 3));\u000a}\u000a\u000a
p381
S'ADD RDI,0x3\nMOV EAX,EDI\nAND EAX,0x3\nSUB RDI,RAX\nMOV RAX,RDI\nRET\n'
p382
S'48 83 c7 03\n89 f8\n83 e0 03\n48 29 c7\n48 89 f8\nc3\n'
p383
S'.text:0000000000402030\n.text:0000000000402034\n.text:0000000000402036\n.text:0000000000402039\n.text:000000000040203c\n.text:000000000040203f\n'
p384
tp385
sS'clear_ungetc_buffer_preserving_position'
p386
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p387
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p388
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x00407ac7\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x00407ae0\n'
p389
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p390
S'.text:0000000000407ac0\n.text:0000000000407ac4\n.text:0000000000407ac6\n.text:0000000000407ac7\n.text:0000000000407ac9\n.text:0000000000407ace\n'
p391
tp392
sS'xnmalloc'
p393
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p394
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p395
S'MOV RAX,RDI\nMUL RSI\nJO 0x00407631\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x00407640\nPUSH RAX\nCALL 0x004077d0\n'
p396
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p397
S'.text:0000000000407620\n.text:0000000000407623\n.text:0000000000407626\n.text:0000000000407628\n.text:000000000040762c\n.text:000000000040762f\n.text:0000000000407631\n.text:0000000000407632\n'
p398
tp399
sS'quotearg_custom'
p400
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p401
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p402
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00406c10\n'
p403
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p404
S'.text:0000000000406c90\n.text:0000000000406c93\n.text:0000000000406c96\n.text:0000000000406c99\n.text:0000000000406c9b\n.text:0000000000406c9e\n.text:0000000000406ca1\n.text:0000000000406ca4\n'
p405
tp406
sS'free'
p407
(S'\n__stdcall free(void * __ptr)\n'
p408
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_0060c020)();\u000a  return;\u000a}\u000a\u000a
p409
S'JMP qword ptr [0x0060c020]\n'
p410
S'ff 25 8a ac 20 00\n'
p411
S'.plt:0000000000401390\n'
p412
tp413
sS'close'
p414
(S'\n__stdcall close(int __fd)\n'
p415
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_0060c0d8)();\u000a  return iVar1;\u000a}\u000a\u000a
p416
S'JMP qword ptr [0x0060c0d8]\n'
p417
S'ff 25 d2 ab 20 00\n'
p418
S'.plt:0000000000401500\n'
p419
tp420
sS'getenv'
p421
(S'\n__stdcall getenv(char * __name)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_0060c018)();\u000a  return pcVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x0060c018]\n'
p424
S'ff 25 92 ac 20 00\n'
p425
S'.plt:0000000000401380\n'
p426
tp427
sS'putchar_unlocked'
p428
(S'\n__stdcall putchar_unlocked(int __c)\n'
p429
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar_unlocked(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_unlocked_0060c118)();\u000a  return iVar1;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x0060c118]\n'
p431
S'ff 25 92 ab 20 00\n'
p432
S'.plt:0000000000401580\n'
p433
tp434
sS'quotearg_char'
p435
(S'\n__stdcall quotearg_char(char * arg)\n'
p436
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p437
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x00406b20\n'
p438
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p439
S'.text:0000000000406b90\n.text:0000000000406b92\n.text:0000000000406b99\n.text:0000000000406b9b\n'
p440
tp441
sS'fopen'
p442
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p443
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_0060c190)();\u000a  return pFVar1;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x0060c190]\n'
p445
S'ff 25 1a ab 20 00\n'
p446
S'.plt:0000000000401670\n'
p447
tp448
sS'malloc'
p449
(S'\n__stdcall malloc(size_t __size)\n'
p450
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_0060c128)();\u000a  return pvVar1;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x0060c128]\n'
p452
S'ff 25 82 ab 20 00\n'
p453
S'.plt:00000000004015a0\n'
p454
tp455
sS'c_tolower'
p456
(S'\n__stdcall c_tolower()\n'
p457
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p458
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p459
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p460
S'.text:0000000000407c80\n.text:0000000000407c83\n.text:0000000000407c86\n.text:0000000000407c89\n.text:0000000000407c8c\n'
p461
tp462
sS'rpl_fseeko'
p463
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p464
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_0060c188)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p465
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x00407b08\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x00407b08\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x00407b1a\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401660\nMOV RDI,RBX\nCALL 0x00401590\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x004014d0\nCMP RAX,-0x1\nJZ 0x00407b43\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x00407b48\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p466
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 46 9b ff ff\n48 89 df\ne8 6e 9a ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 a1 99 ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p467
S'.text:0000000000407ae0\n.text:0000000000407ae1\n.text:0000000000407ae3\n.text:0000000000407ae4\n.text:0000000000407ae7\n.text:0000000000407aea\n.text:0000000000407aed\n.text:0000000000407af1\n.text:0000000000407af5\n.text:0000000000407af7\n.text:0000000000407afb\n.text:0000000000407aff\n.text:0000000000407b01\n.text:0000000000407b06\n.text:0000000000407b08\n.text:0000000000407b0b\n.text:0000000000407b0e\n.text:0000000000407b11\n.text:0000000000407b12\n.text:0000000000407b14\n.text:0000000000407b15\n.text:0000000000407b1a\n.text:0000000000407b1d\n.text:0000000000407b22\n.text:0000000000407b24\n.text:0000000000407b27\n.text:0000000000407b2a\n.text:0000000000407b2f\n.text:0000000000407b33\n.text:0000000000407b35\n.text:0000000000407b38\n.text:0000000000407b3f\n.text:0000000000407b41\n.text:0000000000407b43\n.text:0000000000407b48\n.text:0000000000407b49\n.text:0000000000407b4b\n.text:0000000000407b4c\n'
p468
tp469
sS'getopt_long'
p470
(S'\n__stdcall getopt_long()\n'
p471
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_0060c0a0)();\u000a  return;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x0060c0a0]\n'
p473
S'ff 25 0a ac 20 00\n'
p474
S'.plt:0000000000401490\n'
p475
tp476
sS'quote_n_mem'
p477
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p478
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p479
S'MOV ECX,0x60c238\nJMP 0x00406810\n'
p480
S'b9 38 c2 60 00\ne9 36 fb ff ff\n'
p481
S'.text:0000000000406cd0\n.text:0000000000406cd5\n'
p482
tp483
sS'xstrdup'
p484
(S'\n__stdcall xstrdup(char * string)\n'
p485
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p486
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401480\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00407780\n'
p487
S'53\n48 89 fb\ne8 c7 9c ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p488
S'.text:00000000004077b0\n.text:00000000004077b1\n.text:00000000004077b4\n.text:00000000004077b9\n.text:00000000004077bd\n.text:00000000004077c0\n.text:00000000004077c1\n'
p489
tp490
sS'c_ispunct'
p491
(S'\n__stdcall c_ispunct()\n'
p492
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p493
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x00407c22\nMOV AL,0x1\nJMP qword ptr [0x409820 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p494
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd 20 98 40 00\nc3\n31 c0\nc3\n'
p495
S'.text:0000000000407c10\n.text:0000000000407c13\n.text:0000000000407c16\n.text:0000000000407c18\n.text:0000000000407c1a\n.text:0000000000407c21\n.text:0000000000407c22\n.text:0000000000407c24\n'
p496
tp497
sS'sha224_finish_ctx'
p498
(S'\n__stdcall sha224_finish_ctx(sha256_ctx * ctx, void * resbuf)\n'
p499
V\u000avoid * sha224_finish_ctx(sha256_ctx *ctx,void *resbuf)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  sha256_conclude_ctx(ctx);\u000a  pvVar1 = sha224_read_ctx(ctx,resbuf);\u000a  return pvVar1;\u000a}\u000a\u000a
p500
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nCALL 0x00402e60\nMOV RDI,RBX\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402df0\n'
p501
S'41 56\n53\n50\n49 89 f6\n48 89 fb\ne8 11 ff ff ff\n48 89 df\n4c 89 f6\n48 83 c4 08\n5b\n41 5e\ne9 8f fe ff ff\n'
p502
S'.text:0000000000402f40\n.text:0000000000402f42\n.text:0000000000402f43\n.text:0000000000402f44\n.text:0000000000402f47\n.text:0000000000402f4a\n.text:0000000000402f4f\n.text:0000000000402f52\n.text:0000000000402f55\n.text:0000000000402f59\n.text:0000000000402f5a\n.text:0000000000402f5c\n'
p503
tp504
sS'quotearg_style'
p505
(S'\n__stdcall quotearg_style(char * arg)\n'
p506
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p507
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x00406a00\n'
p508
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p509
S'.text:0000000000406ae0\n.text:0000000000406ae3\n.text:0000000000406ae5\n.text:0000000000406ae7\n.text:0000000000406ae9\n.text:0000000000406aec\n'
p510
tp511
sS'sha256_stream'
p512
(S'\n__stdcall sha256_stream(FILE * stream, void * resblock)\n'
p513
V\u000aint sha256_stream(FILE *stream,void *resblock)\u000a\u000a{\u000a  int iVar1;\u000a  void *__ptr;\u000a  size_t sVar2;\u000a  size_t len;\u000a  sha256_ctx local_e0;\u000a  \u000a  __ptr = malloc(0x8048);\u000a  if (__ptr == (void *)0x0) {\u000a    return 1;\u000a  }\u000a  sha256_init_ctx(&local_e0);\u000a  do {\u000a    len = 0;\u000a    while( true ) {\u000a      sVar2 = fread_unlocked((void *)((long)__ptr + len),1,0x8000 - len,(FILE *)stream);\u000a      len = len + sVar2;\u000a      if (len == 0x8000) break;\u000a      if (sVar2 == 0) {\u000a        iVar1 = ferror_unlocked((FILE *)stream);\u000a        if (iVar1 != 0) {\u000a          free(__ptr);\u000a          return 1;\u000a        }\u000a        goto LAB_0040303e;\u000a      }\u000a      iVar1 = feof_unlocked((FILE *)stream);\u000a      if (iVar1 != 0) {\u000aLAB_0040303e:\u000a        if (len != 0) {\u000a          sha256_process_bytes(__ptr,len,&local_e0);\u000a        }\u000a        sha256_finish_ctx(&local_e0,resblock);\u000a        free(__ptr);\u000a        return 0;\u000a      }\u000a    }\u000a    sha256_process_block(__ptr,0x8000,&local_e0);\u000a  } while( true );\u000a}\u000a\u000a
p514
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xb8\nMOV R14,RSI\nMOV RBP,RDI\nMOV EDI,0x8048\nCALL 0x004015a0\nMOV R13,RAX\nMOV R15D,0x1\nTEST R13,R13\nJZ 0x0040306b\nLEA R12,[RSP + 0x8]\nMOV RDI,R12\nCALL 0x00402d20\nJMP 0x00402ff0\nTEST RAX,RAX\nJZ 0x00403028\nMOV RDI,RBP\nCALL 0x00401700\nTEST EAX,EAX\nJZ 0x00403000\nJMP 0x0040303e\nMOV ESI,0x8000\nMOV RDI,R13\nMOV RDX,R12\nCALL 0x00403080\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nLEA RDI,[R13 + RBX*0x1]\nMOV EDX,0x8000\nSUB RDX,RBX\nMOV ESI,0x1\nMOV RCX,RBP\nCALL 0x00401420\nADD RBX,RAX\nCMP RBX,0x8000\nJNZ 0x00402fc0\nJMP 0x00402fe0\nMOV RDI,RBP\nCALL 0x00401540\nTEST EAX,EAX\nJZ 0x0040303e\nMOV RDI,R13\nCALL 0x00401390\nJMP 0x0040306b\nTEST RBX,RBX\nJZ 0x00403053\nLEA RDX,[RSP + 0x8]\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x00405400\nLEA RDI,[RSP + 0x8]\nMOV RSI,R14\nCALL 0x00402e30\nMOV RDI,R13\nCALL 0x00401390\nXOR R15D,R15D\nMOV EAX,R15D\nADD RSP,0xb8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p515
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec b8 00 00 00\n49 89 f6\n48 89 fd\nbf 48 80 00 00\ne8 0f e6 ff ff\n49 89 c5\n41 bf 01 00 00 00\n4d 85 ed\n0f 84 c8 00 00 00\n4c 8d 64 24 08\n4c 89 e7\ne8 70 fd ff ff\neb 3e\n48 85 c0\n74 63\n48 89 ef\ne8 33 e7 ff ff\n85 c0\n74 2f\neb 6b\nbe 00 80 00 00\n4c 89 ef\n4c 89 e2\ne8 90 00 00 00\n31 db\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8d 7c 1d 00\nba 00 80 00 00\n48 29 da\nbe 01 00 00 00\n48 89 e9\ne8 06 e4 ff ff\n48 01 c3\n48 81 fb 00 80 00 00\n75 9a\neb b8\n48 89 ef\ne8 10 e5 ff ff\n85 c0\n74 0a\n4c 89 ef\ne8 54 e3 ff ff\neb 2d\n48 85 db\n74 10\n48 8d 54 24 08\n4c 89 ef\n48 89 de\ne8 ad 23 00 00\n48 8d 7c 24 08\n4c 89 f6\ne8 d0 fd ff ff\n4c 89 ef\ne8 28 e3 ff ff\n45 31 ff\n44 89 f8\n48 81 c4 b8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p516
S'.text:0000000000402f70\n.text:0000000000402f71\n.text:0000000000402f73\n.text:0000000000402f75\n.text:0000000000402f77\n.text:0000000000402f79\n.text:0000000000402f7a\n.text:0000000000402f81\n.text:0000000000402f84\n.text:0000000000402f87\n.text:0000000000402f8c\n.text:0000000000402f91\n.text:0000000000402f94\n.text:0000000000402f9a\n.text:0000000000402f9d\n.text:0000000000402fa3\n.text:0000000000402fa8\n.text:0000000000402fab\n.text:0000000000402fb0\n.text:0000000000402fc0\n.text:0000000000402fc3\n.text:0000000000402fc5\n.text:0000000000402fc8\n.text:0000000000402fcd\n.text:0000000000402fcf\n.text:0000000000402fd1\n.text:0000000000402fe0\n.text:0000000000402fe5\n.text:0000000000402fe8\n.text:0000000000402feb\n.text:0000000000402ff0\n.text:0000000000402ff2\n.text:0000000000403000\n.text:0000000000403005\n.text:000000000040300a\n.text:000000000040300d\n.text:0000000000403012\n.text:0000000000403015\n.text:000000000040301a\n.text:000000000040301d\n.text:0000000000403024\n.text:0000000000403026\n.text:0000000000403028\n.text:000000000040302b\n.text:0000000000403030\n.text:0000000000403032\n.text:0000000000403034\n.text:0000000000403037\n.text:000000000040303c\n.text:000000000040303e\n.text:0000000000403041\n.text:0000000000403043\n.text:0000000000403048\n.text:000000000040304b\n.text:000000000040304e\n.text:0000000000403053\n.text:0000000000403058\n.text:000000000040305b\n.text:0000000000403060\n.text:0000000000403063\n.text:0000000000403068\n.text:000000000040306b\n.text:000000000040306e\n.text:0000000000403075\n.text:0000000000403076\n.text:0000000000403078\n.text:000000000040307a\n.text:000000000040307c\n.text:000000000040307e\n.text:000000000040307f\n'
p517
tp518
sS'fscanf'
p519
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p520
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_0060c0d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x0060c0d0]\n'
p522
S'ff 25 da ab 20 00\n'
p523
S'.plt:00000000004014f0\n'
p524
tp525
sS'emit_try_help'
p526
(S'\n__stdcall emit_try_help()\n'
p527
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p528
S'PUSH RBX\nMOV RBX,qword ptr [0x0060c2c0]\nXOR EDI,EDI\nMOV ESI,0x408af2\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nMOV RCX,qword ptr [0x0060c2f8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x004016d0\n'
p529
S'53\n48 8b 1d 18 a9 20 00\n31 ff\nbe f2 8a 40 00\nba 05 00 00 00\ne8 a7 fa ff ff\n48 89 c2\n48 8b 0d 35 a9 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 fd fc ff ff\n'
p530
S'.text:00000000004019a0\n.text:00000000004019a1\n.text:00000000004019a8\n.text:00000000004019aa\n.text:00000000004019af\n.text:00000000004019b4\n.text:00000000004019b9\n.text:00000000004019bc\n.text:00000000004019c3\n.text:00000000004019c8\n.text:00000000004019ca\n.text:00000000004019cd\n.text:00000000004019ce\n'
p531
tp532
sS'memcpy'
p533
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p534
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_0060c110)();\u000a  return pvVar1;\u000a}\u000a\u000a
p535
S'JMP qword ptr [0x0060c110]\n'
p536
S'ff 25 9a ab 20 00\n'
p537
S'.plt:0000000000401570\n'
p538
tp539
sS'strrchr'
p540
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p541
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_0060c0b8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x0060c0b8]\n'
p543
S'ff 25 f2 ab 20 00\n'
p544
S'.plt:00000000004014c0\n'
p545
tp546
sS'close_stdout_set_ignore_EPIPE'
p547
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p548
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p549
S'MOV byte ptr [0x0060c2f0],DIL\nRET\n'
p550
S'40 88 3d 99 96 20 00\nc3\n'
p551
S'.text:0000000000402c50\n.text:0000000000402c57\n'
p552
tp553
sS'quotearg_alloc_mem'
p554
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p555
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p556
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x60c300\nCMOVNZ R12,RCX\nCALL 0x004013b0\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x00405a30\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00407710\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x00405a30\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x0040675a\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p557
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc 00 c3 60 00\n4c 0f 45 e1\ne8 f8 ac ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 01 10 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p558
S'.text:0000000000406680\n.text:0000000000406681\n.text:0000000000406683\n.text:0000000000406685\n.text:0000000000406687\n.text:0000000000406689\n.text:000000000040668a\n.text:000000000040668e\n.text:0000000000406691\n.text:0000000000406696\n.text:0000000000406699\n.text:000000000040669e\n.text:00000000004066a1\n.text:00000000004066a6\n.text:00000000004066a9\n.text:00000000004066af\n.text:00000000004066b3\n.text:00000000004066b8\n.text:00000000004066bd\n.text:00000000004066bf\n.text:00000000004066c3\n.text:00000000004066c5\n.text:00000000004066c8\n.text:00000000004066cc\n.text:00000000004066d1\n.text:00000000004066d5\n.text:00000000004066da\n.text:00000000004066de\n.text:00000000004066e0\n.text:00000000004066e2\n.text:00000000004066e5\n.text:00000000004066e8\n.text:00000000004066eb\n.text:00000000004066f0\n.text:00000000004066f5\n.text:00000000004066f7\n.text:00000000004066fc\n.text:0000000000406700\n.text:0000000000406703\n.text:0000000000406707\n.text:000000000040670a\n.text:000000000040670f\n.text:0000000000406712\n.text:0000000000406716\n.text:000000000040671a\n.text:000000000040671d\n.text:0000000000406720\n.text:0000000000406725\n.text:000000000040672a\n.text:000000000040672d\n.text:0000000000406732\n.text:0000000000406737\n.text:0000000000406739\n.text:000000000040673e\n.text:0000000000406743\n.text:0000000000406747\n.text:000000000040674a\n.text:000000000040674e\n.text:0000000000406753\n.text:0000000000406755\n.text:0000000000406757\n.text:000000000040675a\n.text:000000000040675d\n.text:0000000000406761\n.text:0000000000406762\n.text:0000000000406764\n.text:0000000000406766\n.text:0000000000406768\n.text:000000000040676a\n.text:000000000040676b\n'
p559
tp560
sS'iswprint'
p561
(S'\n__stdcall iswprint(wint_t __wc)\n'
p562
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_0060c1d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p563
S'JMP qword ptr [0x0060c1d0]\n'
p564
S'ff 25 da aa 20 00\n'
p565
S'.plt:00000000004016f0\n'
p566
tp567
sS'quotearg_style_mem'
p568
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p569
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p570
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00406aa0\n'
p571
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p572
S'.text:0000000000406b00\n.text:0000000000406b03\n.text:0000000000406b06\n.text:0000000000406b08\n.text:0000000000406b0a\n.text:0000000000406b0c\n.text:0000000000406b0f\n.text:0000000000406b12\n'
p573
tp574
sS'xalloc_die'
p575
(S'\n__stdcall xalloc_die()\n'
p576
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,0x408ec5,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p577
S'PUSH RBX\nMOV EBX,dword ptr [0x0060c210]\nXOR EDI,EDI\nMOV ESI,0x40980f\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x408ec5\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00401640\nCALL 0x004013a0\n'
p578
S'53\n8b 1d 39 4a 20 00\n31 ff\nbe 0f 98 40 00\nba 05 00 00 00\ne8 78 9c ff ff\n48 89 c1\n31 f6\nba c5 8e 40 00\n31 c0\n89 df\ne8 45 9e ff ff\ne8 a0 9b ff ff\n'
p579
S'.text:00000000004077d0\n.text:00000000004077d1\n.text:00000000004077d7\n.text:00000000004077d9\n.text:00000000004077de\n.text:00000000004077e3\n.text:00000000004077e8\n.text:00000000004077eb\n.text:00000000004077ed\n.text:00000000004077f2\n.text:00000000004077f4\n.text:00000000004077f6\n.text:00000000004077fb\n'
p580
tp581
sS'c_isspace'
p582
(S'\n__stdcall c_isspace()\n'
p583
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p584
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00407c45\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p585
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p586
S'.text:0000000000407c30\n.text:0000000000407c33\n.text:0000000000407c36\n.text:0000000000407c38\n.text:0000000000407c3d\n.text:0000000000407c3f\n.text:0000000000407c41\n.text:0000000000407c44\n.text:0000000000407c45\n.text:0000000000407c47\n'
p587
tp588
sS'fopen_safer'
p589
(S'\n__stdcall fopen_safer(char * file, char * mode)\n'
p590
V\u000aFILE * fopen_safer(char *file,char *mode)\u000a\u000a{\u000a  uint uVar1;\u000a  int __fd;\u000a  int iVar2;\u000a  FILE *fp;\u000a  int *piVar3;\u000a  \u000a  fp = (FILE *)fopen(file,mode);\u000a  if (fp != (FILE *)0x0) {\u000a    uVar1 = fileno((FILE *)fp);\u000a    if (2 < uVar1) {\u000a      return fp;\u000a    }\u000a    __fd = dup_safer();\u000a    if (__fd < 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      rpl_fclose(fp);\u000a      *piVar3 = __fd;\u000a    }\u000a    else {\u000a      iVar2 = rpl_fclose(fp);\u000a      if ((iVar2 == 0) && (fp = (FILE *)fdopen(__fd,mode), fp != (FILE *)0x0)) {\u000a        return fp;\u000a      }\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a    }\u000a  }\u000a  return (FILE *)0x0;\u000a}\u000a\u000a
p591
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nCALL 0x00401670\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x004057fb\nMOV RDI,RBX\nCALL 0x00401590\nCMP EAX,0x2\nJA 0x004057fd\nMOV EDI,EAX\nCALL 0x00407110\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x004057e3\nMOV RDI,RBX\nCALL 0x00407850\nTEST EAX,EAX\nJNZ 0x004057cc\nMOV EDI,EBP\nMOV RSI,R14\nCALL 0x00401600\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x004057fd\nCALL 0x004013b0\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00401500\nMOV dword ptr [RBX],R14D\nJMP 0x004057fb\nCALL 0x004013b0\nMOV RBP,RAX\nMOV R14D,dword ptr [RBP]\nMOV RDI,RBX\nCALL 0x00407850\nMOV dword ptr [RBP],R14D\nXOR EBX,EBX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p592
S'55\n41 56\n53\n49 89 f6\ne8 e4 be ff ff\n48 89 c3\n48 85 db\n74 67\n48 89 df\ne8 f4 bd ff ff\n83 f8 02\n77 5c\n89 c7\ne8 68 19 00 00\n89 c5\n85 ed\n78 35\n48 89 df\ne8 9a 20 00 00\n85 c0\n75 12\n89 ef\n4c 89 f6\ne8 3c be ff ff\n48 89 c3\n48 85 db\n75 31\ne8 df bb ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 22 bd ff ff\n44 89 33\neb 18\ne8 c8 bb ff ff\n48 89 c5\n44 8b 75 00\n48 89 df\ne8 59 20 00 00\n44 89 75 00\n31 db\n48 89 d8\n5b\n41 5e\n5d\nc3\n'
p593
S'.text:0000000000405780\n.text:0000000000405781\n.text:0000000000405783\n.text:0000000000405784\n.text:0000000000405787\n.text:000000000040578c\n.text:000000000040578f\n.text:0000000000405792\n.text:0000000000405794\n.text:0000000000405797\n.text:000000000040579c\n.text:000000000040579f\n.text:00000000004057a1\n.text:00000000004057a3\n.text:00000000004057a8\n.text:00000000004057aa\n.text:00000000004057ac\n.text:00000000004057ae\n.text:00000000004057b1\n.text:00000000004057b6\n.text:00000000004057b8\n.text:00000000004057ba\n.text:00000000004057bc\n.text:00000000004057bf\n.text:00000000004057c4\n.text:00000000004057c7\n.text:00000000004057ca\n.text:00000000004057cc\n.text:00000000004057d1\n.text:00000000004057d4\n.text:00000000004057d7\n.text:00000000004057d9\n.text:00000000004057de\n.text:00000000004057e1\n.text:00000000004057e3\n.text:00000000004057e8\n.text:00000000004057eb\n.text:00000000004057ef\n.text:00000000004057f2\n.text:00000000004057f7\n.text:00000000004057fb\n.text:00000000004057fd\n.text:0000000000405800\n.text:0000000000405801\n.text:0000000000405803\n.text:0000000000405804\n'
p594
tp595
sS'quotearg_n_custom'
p596
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p597
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p598
S'MOV R8,-0x1\nJMP 0x00406c20\n'
p599
S'49 c7 c0 ff ff ff ff\neb 07\n'
p600
S'.text:0000000000406c10\n.text:0000000000406c17\n'
p601
tp602
sS'open'
p603
(S'\n__stdcall open(char * __file, int __oflag)\n'
p604
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_0060c180)();\u000a  return iVar1;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x0060c180]\n'
p606
S'ff 25 2a ab 20 00\n'
p607
S'.plt:0000000000401650\n'
p608
tp609
sS'quotearg_n_custom_mem'
p610
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p611
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x0060c330]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x0060c320]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060c310]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060c300]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00405980\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00406810\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p613
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 f7 56 20 00\n48 89 44 24 30\n0f 10 05 db 56 20 00\n0f 29 44 24 20\n0f 10 05 bf 56 20 00\n0f 29 44 24 10\n0f 10 05 a3 56 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p614
S'.text:0000000000406c20\n.text:0000000000406c21\n.text:0000000000406c23\n.text:0000000000406c25\n.text:0000000000406c26\n.text:0000000000406c2a\n.text:0000000000406c2d\n.text:0000000000406c30\n.text:0000000000406c32\n.text:0000000000406c39\n.text:0000000000406c3e\n.text:0000000000406c45\n.text:0000000000406c4a\n.text:0000000000406c51\n.text:0000000000406c56\n.text:0000000000406c5d\n.text:0000000000406c61\n.text:0000000000406c64\n.text:0000000000406c67\n.text:0000000000406c6c\n.text:0000000000406c6e\n.text:0000000000406c71\n.text:0000000000406c74\n.text:0000000000406c77\n.text:0000000000406c7c\n.text:0000000000406c80\n.text:0000000000406c81\n.text:0000000000406c83\n.text:0000000000406c85\n.text:0000000000406c86\n'
p615
tp616
sS'_init'
p617
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p618
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___0060bff8;\u000a  if (PTR___gmon_start___0060bff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___0060bff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p619
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x0060bff8]\nTEST RAX,RAX\nJZ 0x0040136a\nCALL RAX\nADD RSP,0x8\nRET\n'
p620
S'48 83 ec 08\n48 8b 05 95 ac 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p621
S'.init:0000000000401358\n.init:000000000040135c\n.init:0000000000401363\n.init:0000000000401366\n.init:0000000000401368\n.init:000000000040136a\n.init:000000000040136e\n'
p622
tp623
sS'__freading'
p624
(S'\n__stdcall __freading()\n'
p625
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_0060c148)();\u000a  return;\u000a}\u000a\u000a
p626
S'JMP qword ptr [0x0060c148]\n'
p627
S'ff 25 62 ab 20 00\n'
p628
S'.plt:00000000004015e0\n'
p629
tp630
sS'digest_file'
p631
(S'\n__stdcall digest_file()\n'
p632
V\u000a_Bool digest_file(void)\u000a\u000a{\u000a  bool bVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  FILE *fp;\u000a  uint *puVar4;\u000a  char *pcVar5;\u000a  uint uVar6;\u000a  undefined *resblock;\u000a  char *file;\u000a  \u000a  if ((*file == '-') && (file[1] == 0)) {\u000a    have_read_stdin = 1;\u000a    bVar1 = true;\u000a    fp = stdin;\u000a  }\u000a  else {\u000a    fp = fopen_safer(file,"r");\u000a    cVar2 = ignore_missing;\u000a    if (fp == (FILE *)0x0) {\u000a      puVar4 = (uint *)__errno_location();\u000a      uVar6 = *puVar4;\u000a      if ((cVar2 == 1) && (uVar6 == 2)) {\u000a        *resblock = 0;\u000a        return true;\u000a      }\u000a      goto LAB_0040281b;\u000a    }\u000a    bVar1 = false;\u000a  }\u000a  fadvise(fp);\u000a  iVar3 = sha224_stream(fp,resblock);\u000a  if (iVar3 != 0) {\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar6 = *puVar4;\u000a    pcVar5 = quotearg_n_style_colon((char *)0x0);\u000a    error(0,(ulong)uVar6,0x408ec5,pcVar5);\u000a    if (fp == stdin) {\u000a      return false;\u000a    }\u000a    rpl_fclose(fp);\u000a    return false;\u000a  }\u000a  if (bVar1) {\u000a    return true;\u000a  }\u000a  iVar3 = rpl_fclose(fp);\u000a  if (iVar3 == 0) {\u000a    return true;\u000a  }\u000a  puVar4 = (uint *)__errno_location();\u000a  uVar6 = *puVar4;\u000aLAB_0040281b:\u000a  pcVar5 = quotearg_n_style_colon((char *)0x0);\u000a  error(0,(ulong)uVar6,0x408ec5,pcVar5);\u000a  return false;\u000a}\u000a\u000a
p633
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nCMP byte ptr [RBX],0x2d\nJNZ 0x00402748\nCMP byte ptr [RBX + 0x1],0x0\nJZ 0x0040278f\nMOV ESI,0x4088dd\nMOV RDI,RBX\nCALL 0x00405780\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00402762\nXOR R15D,R15D\nJMP 0x004027a0\nMOV R15B,byte ptr [0x0060c2d3]\nCALL 0x004013b0\nMOV EBP,dword ptr [RAX]\nCMP R15B,0x1\nJNZ 0x0040281b\nCMP EBP,0x2\nJNZ 0x0040281b\nMOV byte ptr [R14],0x0\nMOV R14B,0x1\nJMP 0x00402840\nMOV byte ptr [0x0060c2e1],0x1\nMOV RBP,qword ptr [0x0060c290]\nMOV R15B,0x1\nMOV ESI,0x2\nMOV RDI,RBP\nCALL 0x00405760\nMOV RDI,RBP\nMOV RSI,R14\nCALL 0x004055a0\nTEST EAX,EAX\nJZ 0x00402800\nCALL 0x004013b0\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBX\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x408ec5\nXOR EAX,EAX\nMOV ESI,R15D\nCALL 0x00401640\nCMP RBP,qword ptr [0x0060c290]\nJZ 0x00402840\nMOV RDI,RBP\nCALL 0x00407850\nXOR R14D,R14D\nJMP 0x00402840\nMOV R14B,0x1\nTEST R15B,R15B\nJNZ 0x00402840\nMOV RDI,RBP\nCALL 0x00407850\nTEST EAX,EAX\nJZ 0x00402840\nCALL 0x004013b0\nMOV EBP,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBX\nCALL 0x00406bc0\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x408ec5\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401640\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p634
S'55\n41 57\n41 56\n53\n50\n49 89 f6\n48 89 fb\n80 3b 2d\n75 06\n80 7b 01 00\n74 47\nbe dd 88 40 00\n48 89 df\ne8 2b 30 00 00\n48 89 c5\n48 85 ed\n74 05\n45 31 ff\neb 3e\n44 8a 3d 6a 9b 20 00\ne8 42 ec ff ff\n8b 28\n41 80 ff 01\n0f 85 a1 00 00 00\n83 fd 02\n0f 85 98 00 00 00\n41 c6 06 00\n41 b6 01\ne9 b1 00 00 00\nc6 05 4b 9b 20 00 01\n48 8b 2d f3 9a 20 00\n41 b7 01\nbe 02 00 00 00\n48 89 ef\ne8 b3 2f 00 00\n48 89 ef\n4c 89 f6\ne8 e8 2d 00 00\n85 c0\n74 44\ne8 ef eb ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 03 00 00 00\n48 89 da\ne8 ea 43 00 00\n48 89 c1\n31 ff\nba c5 8e 40 00\n31 c0\n44 89 fe\ne8 56 ee ff ff\n48 3b 2d 9f 9a 20 00\n74 4d\n48 89 ef\ne8 55 50 00 00\n45 31 f6\neb 40\n41 b6 01\n45 84 ff\n75 38\n48 89 ef\ne8 40 50 00 00\n85 c0\n74 2c\ne8 97 eb ff ff\n8b 28\n45 31 f6\n31 ff\nbe 03 00 00 00\n48 89 da\ne8 93 43 00 00\n48 89 c1\n31 ff\nba c5 8e 40 00\n31 c0\n89 ee\ne8 00 ee ff ff\n44 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p635
S'.text:0000000000402730\n.text:0000000000402731\n.text:0000000000402733\n.text:0000000000402735\n.text:0000000000402736\n.text:0000000000402737\n.text:000000000040273a\n.text:000000000040273d\n.text:0000000000402740\n.text:0000000000402742\n.text:0000000000402746\n.text:0000000000402748\n.text:000000000040274d\n.text:0000000000402750\n.text:0000000000402755\n.text:0000000000402758\n.text:000000000040275b\n.text:000000000040275d\n.text:0000000000402760\n.text:0000000000402762\n.text:0000000000402769\n.text:000000000040276e\n.text:0000000000402770\n.text:0000000000402774\n.text:000000000040277a\n.text:000000000040277d\n.text:0000000000402783\n.text:0000000000402787\n.text:000000000040278a\n.text:000000000040278f\n.text:0000000000402796\n.text:000000000040279d\n.text:00000000004027a0\n.text:00000000004027a5\n.text:00000000004027a8\n.text:00000000004027ad\n.text:00000000004027b0\n.text:00000000004027b3\n.text:00000000004027b8\n.text:00000000004027ba\n.text:00000000004027bc\n.text:00000000004027c1\n.text:00000000004027c4\n.text:00000000004027c7\n.text:00000000004027c9\n.text:00000000004027ce\n.text:00000000004027d1\n.text:00000000004027d6\n.text:00000000004027d9\n.text:00000000004027db\n.text:00000000004027e0\n.text:00000000004027e2\n.text:00000000004027e5\n.text:00000000004027ea\n.text:00000000004027f1\n.text:00000000004027f3\n.text:00000000004027f6\n.text:00000000004027fb\n.text:00000000004027fe\n.text:0000000000402800\n.text:0000000000402803\n.text:0000000000402806\n.text:0000000000402808\n.text:000000000040280b\n.text:0000000000402810\n.text:0000000000402812\n.text:0000000000402814\n.text:0000000000402819\n.text:000000000040281b\n.text:000000000040281e\n.text:0000000000402820\n.text:0000000000402825\n.text:0000000000402828\n.text:000000000040282d\n.text:0000000000402830\n.text:0000000000402832\n.text:0000000000402837\n.text:0000000000402839\n.text:000000000040283b\n.text:0000000000402840\n.text:0000000000402843\n.text:0000000000402847\n.text:0000000000402848\n.text:000000000040284a\n.text:000000000040284c\n.text:000000000040284d\n'
p636
tp637
sS'set_quoting_flags'
p638
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p639
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p640
S'TEST RDI,RDI\nMOV ECX,0x60c300\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p641
S'48 85 ff\nb9 00 c3 60 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p642
S'.text:0000000000405960\n.text:0000000000405963\n.text:0000000000405968\n.text:000000000040596c\n.text:000000000040596f\n.text:0000000000405972\n'
p643
tp644
sS'fputs_unlocked'
p645
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p646
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_0060c0f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p647
S'JMP qword ptr [0x0060c0f0]\n'
p648
S'ff 25 ba ab 20 00\n'
p649
S'.plt:0000000000401530\n'
p650
tp651
sS'main'
p652
(S'\n__stdcall main(char * * argv)\n'
p653
V\u000aint main(char **argv)\u000a\u000a{\u000a  uint uVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  _Bool _Var4;\u000a  int iVar5;\u000a  int __c;\u000a  void *pvVar6;\u000a  long lVar7;\u000a  char *pcVar8;\u000a  ulong uVar9;\u000a  uint *puVar10;\u000a  undefined8 uVar11;\u000a  int iVar12;\u000a  char **in_RSI;\u000a  char *__s;\u000a  int iVar13;\u000a  ulong uVar14;\u000a  byte bVar15;\u000a  bool bVar16;\u000a  uchar bin_buffer_unaligned [32];\u000a  \u000a  iVar13 = (int)((ulong)argv & 0xffffffff);\u000a  pvVar6 = ptr_align();\u000a  set_program_name(*in_RSI);\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  bindtextdomain(0x4088b9);\u000a  textdomain(0x4088b9);\u000a  atexit(close_stdout);\u000a  bVar3 = false;\u000a  setvbuf((FILE *)stdout,(char *)0x0,1,0);\u000a  bVar2 = false;\u000a  __c = 0xffffffff;\u000aswitchD_00401c04_caseD_62:\u000a  iVar12 = __c;\u000a  iVar5 = getopt_long((ulong)argv & 0xffffffff);\u000a  if (iVar5 < 0x62) {\u000a    if (iVar5 == -1) {\u000a      min_digest_line_length = 1;\u000a      digest_hex_bytes = 1;\u000a      if ((iVar12 == 0) && (bVar2)) goto LAB_00401fb6;\u000a      bVar16 = !bVar3;\u000a      if (bVar2 && !bVar16) {\u000a        __s = "the --tag option is meaningless when verifying checksums";\u000a      }\u000a      else {\u000a        if (iVar12 < 0 || bVar16) {\u000a          if ((bVar3) || (((ignore_missing ^ 1) & 1) != 0)) {\u000a            if ((bVar3) || (((status_only ^ 1) & 1) != 0)) {\u000a              if ((bVar3) || (((warn ^ 1) & 1) != 0)) {\u000a                if ((bVar3) || (((quiet ^ 1) & 1) != 0)) {\u000a                  if ((bVar16 & strict) != 1) {\u000a                    if (optind == iVar13) {\u000a                      lVar7 = (long)iVar13;\u000a                      iVar13 = iVar13 + 1;\u000a                      in_RSI[lVar7] = "-";\u000a                    }\u000a                    bVar15 = 1;\u000a                    if (optind < iVar13) {\u000a                      __c = 0x2a;\u000a                      if (iVar12 < 1) {\u000a                        __c = 0x20;\u000a                      }\u000a                      bVar15 = 1;\u000a                      do {\u000a                        __s = in_RSI[(long)optind];\u000a                        if (bVar3) {\u000a                          _Var4 = digest_check(__s);\u000a                          bVar15 = bVar15 & _Var4;\u000a                        }\u000a                        else {\u000a                          _Var4 = digest_file();\u000a                          if (_Var4 == false) {\u000a                            bVar15 = 0;\u000a                          }\u000a                          else {\u000a                            pcVar8 = strchr(__s,0x5c);\u000a                            bVar16 = true;\u000a                            if (pcVar8 == (char *)0x0) {\u000a                              pcVar8 = strchr(__s,10);\u000a                              bVar16 = pcVar8 != (char *)0x0;\u000a                            }\u000a                            if (bVar2) {\u000a                              if (bVar16) {\u000a                                putchar_unlocked(0x5c);\u000a                              }\u000a                              fputs_unlocked("SHA224",(FILE *)stdout);\u000a                              fputs_unlocked(" (",(FILE *)stdout);\u000a                              print_filename(__s);\u000a                              fputs_unlocked(") = ",(FILE *)stdout);\u000a                            }\u000a                            else {\u000a                              if (bVar16) {\u000a                                putchar_unlocked(0x5c);\u000a                              }\u000a                            }\u000a                            if (digest_hex_bytes == 1) {\u000a                              uVar14 = 0;\u000a                              do {\u000a                                __printf_chk(1,&DAT_00408ade,(ulong)*(byte *)((long)pvVar6 + uVar14)\u000a                                            );\u000a                                uVar14 = uVar14 + 1;\u000a                                uVar9 = 0;\u000a                                if (digest_hex_bytes != 0) {\u000a                                  uVar9 = 0x1c;\u000a                                }\u000a                              } while (uVar14 < uVar9);\u000a                            }\u000a                            if (!bVar2) {\u000a                              putchar_unlocked(0x20);\u000a                              putchar_unlocked(__c);\u000a                              print_filename(__s);\u000a                            }\u000a                            putchar_unlocked(10);\u000a                          }\u000a                        }\u000a                        optind = optind + 1;\u000a                      } while (optind < iVar13);\u000a                    }\u000a                    if ((have_read_stdin == 1) && (__c = rpl_fclose(stdin), __c == -1)) {\u000a                      puVar10 = (uint *)__errno_location();\u000a                      uVar1 = *puVar10;\u000a                      uVar11 = dcgettext(0,"standard input",5);\u000a                      error(1,(ulong)uVar1,uVar11,uVar11);\u000a                    }\u000a                    return (int)(uint)(~bVar15 & 1);\u000a                  }\u000a                  __s = "the --strict option is meaningful only when verifying checksums";\u000a                }\u000a                else {\u000a                  __s = "the --quiet option is meaningful only when verifying checksums";\u000a                }\u000a              }\u000a              else {\u000a                __s = "the --warn option is meaningful only when verifying checksums";\u000a              }\u000a            }\u000a            else {\u000a              __s = "the --status option is meaningful only when verifying checksums";\u000a            }\u000a          }\u000a          else {\u000a            __s = "the --ignore-missing option is meaningful only when verifying checksums";\u000a          }\u000a        }\u000a        else {\u000a          __s = "the --binary and --text options are meaningless when verifying checksums";\u000a        }\u000a      }\u000a      goto LAB_00401ffc;\u000a    }\u000a    if (iVar5 != -0x83) {\u000a      if (iVar5 != -0x82) goto switchD_00401c04_caseD_64;\u000a      usage(0);\u000a    }\u000a    version_etc(stdout,"sha224sum","GNU coreutils",Version,"Ulrich Drepper","Scott Miller",\u000a                "David Madore",0);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  __c = 1;\u000a  switch(iVar5) {\u000a  case 0x62:\u000a    goto switchD_00401c04_caseD_62;\u000a  case 99:\u000a    bVar3 = true;\u000a    __c = iVar12;\u000a    goto switchD_00401c04_caseD_62;\u000a  default:\u000a    goto switchD_00401c04_caseD_64;\u000a  case 0x74:\u000a    __c = 0;\u000a    goto switchD_00401c04_caseD_62;\u000a  case 0x77:\u000a    status_only = 0;\u000a    warn = 1;\u000a    break;\u000a  case 0x80:\u000a    ignore_missing = 1;\u000a    __c = iVar12;\u000a    goto switchD_00401c04_caseD_62;\u000a  case 0x81:\u000a    status_only = 1;\u000a    warn = 0;\u000a    break;\u000a  case 0x82:\u000a    status_only = 0;\u000a    warn = 0;\u000a    quiet = 1;\u000a    __c = iVar12;\u000a    goto switchD_00401c04_caseD_62;\u000a  case 0x83:\u000a    strict = 1;\u000a    __c = iVar12;\u000a    goto switchD_00401c04_caseD_62;\u000a  case 0x84:\u000a    bVar2 = true;\u000a    __c = 1;\u000a    goto switchD_00401c04_caseD_62;\u000a  }\u000a  quiet = 0;\u000a  __c = iVar12;\u000a  goto switchD_00401c04_caseD_62;\u000aswitchD_00401c04_caseD_64:\u000a  usage(1);\u000aLAB_00401fb6:\u000a  __s = "--tag does not support --text mode";\u000aLAB_00401ffc:\u000a  uVar11 = dcgettext(0,__s,5);\u000a  error(0,0,uVar11,uVar11);\u000a  __c = 1;\u000a  usage();\u000a  return (int)((__c + 3U) - (__c + 3U & 3));\u000a}\u000a\u000a
p654
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x48\nMOV R14,RSI\nMOV R12D,EDI\nLEA RDI,[RSP + 0x20]\nCALL 0x00402030\nMOV RBX,RAX\nMOV RDI,qword ptr [R14]\nCALL 0x00405810\nMOV EDI,0x6\nMOV ESI,0x4095e1\nCALL 0x00401610\nMOV EDI,0x4088b9\nMOV ESI,0x408898\nCALL 0x00401450\nMOV EDI,0x4088b9\nCALL 0x00401430\nMOV EDI,0x402c60\nCALL 0x004080c0\nMOV RDI,qword ptr [0x0060c288]\nXOR EAX,EAX\nMOV qword ptr [RSP],RAX\nXOR ESI,ESI\nMOV EDX,0x1\nXOR ECX,ECX\nCALL 0x00401630\nMOV ECX,0xffffffff\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nJMP 0x00401bd0\nMOV byte ptr [0x0060c2d2],0x0\nMOV ECX,EBP\nNOP dword ptr [RAX]\nMOV EBP,ECX\nMOV EDX,0x4088b0\nMOV ECX,0x408230\nXOR R8D,R8D\nMOV EDI,R12D\nMOV RSI,R14\nCALL 0x00401490\nCMP EAX,0x61\nJLE 0x00401c7f\nADD EAX,-0x62\nCMP EAX,0x22\nJA 0x00401fac\nMOV ECX,0x1\nJMP qword ptr [0x408110 + RAX*0x8]\nMOV AL,0x1\nMOV qword ptr [RSP],RAX\nMOV ECX,EBP\nJMP 0x00401bd0\nXOR ECX,ECX\nJMP 0x00401bd0\nMOV byte ptr [0x0060c2d0],0x0\nMOV byte ptr [0x0060c2d1],0x1\nJMP 0x00401bc4\nMOV byte ptr [0x0060c2d3],0x1\nMOV ECX,EBP\nJMP 0x00401bd0\nMOV byte ptr [0x0060c2d0],0x1\nMOV byte ptr [0x0060c2d1],0x0\nJMP 0x00401bc4\nMOV byte ptr [0x0060c2d0],0x0\nMOV byte ptr [0x0060c2d1],0x0\nMOV byte ptr [0x0060c2d2],0x1\nMOV ECX,EBP\nJMP 0x00401bd0\nMOV byte ptr [0x0060c2d4],0x1\nMOV ECX,EBP\nJMP 0x00401bd0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x8],RAX\nMOV ECX,0x1\nJMP 0x00401bd0\nCMP EAX,-0x1\nJNZ 0x00401f57\nMOV byte ptr [0x0060c2d8],0x1\nMOV byte ptr [0x0060c2e0],0x1\nCMP byte ptr [RSP + 0x8],0x0\nSETZ CL\nTEST EBP,EBP\nJNZ 0x00401caa\nTEST CL,CL\nJZ 0x00401fb6\nCMP byte ptr [RSP],0x0\nSETZ AL\nOR CL,AL\nJZ 0x00401fbf\nTEST EBP,EBP\nSETS CL\nOR CL,AL\nJZ 0x00401fc8\nCMP byte ptr [RSP],0x0\nJNZ 0x00401cde\nMOV CL,byte ptr [0x0060c2d3]\nXOR CL,0x1\nTEST CL,0x1\nJZ 0x00401fd1\nCMP byte ptr [RSP],0x0\nJNZ 0x00401cf6\nMOV CL,byte ptr [0x0060c2d0]\nXOR CL,0x1\nTEST CL,0x1\nJZ 0x00401fda\nCMP byte ptr [RSP],0x0\nJNZ 0x00401d0e\nMOV CL,byte ptr [0x0060c2d1]\nXOR CL,0x1\nTEST CL,0x1\nJZ 0x00401fe3\nCMP byte ptr [RSP],0x0\nJNZ 0x00401d26\nMOV CL,byte ptr [0x0060c2d2]\nXOR CL,0x1\nTEST CL,0x1\nJZ 0x00401fec\nAND AL,byte ptr [0x0060c2d4]\nCMP AL,0x1\nJZ 0x00401ff5\nCMP dword ptr [0x0060c298],R12D\nJNZ 0x00401d4b\nMOVSXD RAX,R12D\nINC R12D\nMOV qword ptr [R14 + RAX*0x8],0x408f52\nMOV EAX,dword ptr [0x0060c298]\nMOV R15B,0x1\nCMP EAX,R12D\nJGE 0x00401ef7\nTEST EBP,EBP\nMOV EDX,0x2a\nMOV ECX,0x20\nCMOVLE EDX,ECX\nMOV dword ptr [RSP + 0x10],EDX\nMOV R15B,0x1\nMOV R13D,0x1c\nMOV qword ptr [RSP + 0x18],R14\nMOV dword ptr [RSP + 0x14],R12D\nNOP dword ptr CS:[RAX + RAX*0x1]\nCDQE\nMOV RBP,qword ptr [R14 + RAX*0x8]\nCMP byte ptr [RSP],0x0\nJZ 0x00401db0\nMOV RDI,RBP\nCALL 0x00402040\nAND R15B,AL\nJMP 0x00401ee0\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x00402730\nTEST AL,AL\nJZ 0x00401e4c\nMOV ESI,0x5c\nMOV RDI,RBP\nCALL 0x004014b0\nMOV R14B,0x1\nTEST RAX,RAX\nJNZ 0x00401dec\nMOV ESI,0xa\nMOV RDI,RBP\nCALL 0x004014b0\nTEST RAX,RAX\nSETNZ R14B\nCMP byte ptr [RSP + 0x8],0x0\nJZ 0x00401e54\nTEST R14B,R14B\nJZ 0x00401e02\nMOV EDI,0x5c\nCALL 0x00401580\nMOV RSI,qword ptr [0x0060c288]\nMOV EDI,0x408467\nCALL 0x00401530\nMOV RSI,qword ptr [0x0060c288]\nMOV EDI,0x408ad6\nCALL 0x00401530\nMOVZX ESI,R14B\nMOV RDI,RBP\nCALL 0x00402850\nMOV RSI,qword ptr [0x0060c288]\nMOV EDI,0x408ad9\nCALL 0x00401530\nCMP byte ptr [0x0060c2e0],0x1\nJZ 0x00401e6c\nJMP 0x00401ea0\nXOR R15D,R15D\nJMP 0x00401ee0\nTEST R14B,R14B\nJZ 0x00401e63\nMOV EDI,0x5c\nCALL 0x00401580\nCMP byte ptr [0x0060c2e0],0x1\nJNZ 0x00401ea0\nXOR R12D,R12D\nNOP\nMOVZX EDX,byte ptr [RBX + R12*0x1]\nMOV EDI,0x1\nMOV ESI,0x408ade\nXOR EAX,EAX\nCALL 0x00401620\nINC R12\nMOVZX EAX,byte ptr [0x0060c2e0]\nTEST AL,AL\nMOV EAX,0x0\nCMOVNZ RAX,R13\nCMP R12,RAX\nJC 0x00401e70\nCMP byte ptr [RSP + 0x8],0x0\nJNZ 0x00401ec6\nMOV EDI,0x20\nCALL 0x00401580\nMOV EDI,dword ptr [RSP + 0x10]\nCALL 0x00401580\nMOVZX ESI,R14B\nMOV RDI,RBP\nCALL 0x00402850\nMOV EDI,0xa\nCALL 0x00401580\nMOV R14,qword ptr [RSP + 0x18]\nMOV R12D,dword ptr [RSP + 0x14]\nNOP word ptr [RAX + RAX*0x1]\nMOV EAX,dword ptr [0x0060c298]\nINC EAX\nMOV dword ptr [0x0060c298],EAX\nCMP EAX,R12D\nJL 0x00401d90\nCMP byte ptr [0x0060c2e1],0x1\nJNZ 0x00401f3d\nMOV RDI,qword ptr [0x0060c290]\nCALL 0x00407850\nCMP EAX,-0x1\nJNZ 0x00401f3d\nCALL 0x004013b0\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x408ae3\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00401640\nNOT R15B\nAND R15B,0x1\nMOVZX EAX,R15B\nADD RSP,0x48\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP EAX,0xffffff7d\nJZ 0x00401f6c\nCMP EAX,0xffffff7e\nJNZ 0x00401fac\nXOR EDI,EDI\nCALL 0x00401830\nMOV RDI,qword ptr [0x0060c288]\nMOV RCX,qword ptr [0x0060c208]\nMOV ESI,0x40888e\nMOV EDX,0x4088b5\nMOV R8D,0x4088c3\nMOV R9D,0x4088d2\nMOV EAX,0x0\nPUSH 0x0\nPUSH 0x4088df\nCALL 0x00407510\nADD RSP,0x10\nXOR EDI,EDI\nCALL 0x004016b0\nMOV EDI,0x1\nCALL 0x00401830\nXOR EDI,EDI\nMOV ESI,0x4088ec\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x40890f\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x408948\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x408991\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x4089d9\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x408a19\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x408a57\nJMP 0x00401ffc\nXOR EDI,EDI\nMOV ESI,0x408a96\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401640\nMOV EDI,0x1\nCALL 0x00401830\nNOP dword ptr CS:[RAX + RAX*0x1]\n'
p655
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 48\n49 89 f6\n41 89 fc\n48 8d 7c 24 20\ne8 d2 04 00 00\n48 89 c3\n49 8b 3e\ne8 a7 3c 00 00\nbf 06 00 00 00\nbe e1 95 40 00\ne8 98 fa ff ff\nbf b9 88 40 00\nbe 98 88 40 00\ne8 c9 f8 ff ff\nbf b9 88 40 00\ne8 9f f8 ff ff\nbf 60 2c 40 00\ne8 25 65 00 00\n48 8b 3d e6 a6 20 00\n31 c0\n48 89 04 24\n31 f6\nba 01 00 00 00\n31 c9\ne8 7a fa ff ff\nb9 ff ff ff ff\n31 c0\n48 89 44 24 08\neb 0c\nc6 05 07 a7 20 00 00\n89 e9\n0f 1f 00\n89 cd\nba b0 88 40 00\nb9 30 82 40 00\n45 31 c0\n44 89 e7\n4c 89 f6\ne8 a6 f8 ff ff\n83 f8 61\n0f 8e 8c 00 00 00\n83 c0 9e\n83 f8 22\n0f 87 ad 03 00 00\nb9 01 00 00 00\nff 24 c5 10 81 40 00\nb0 01\n48 89 04 24\n89 e9\neb bb\n31 c9\neb b7\nc6 05 b0 a6 20 00 00\nc6 05 aa a6 20 00 01\neb 9b\nc6 05 a3 a6 20 00 01\n89 e9\neb 9c\nc6 05 95 a6 20 00 01\nc6 05 8f a6 20 00 00\neb 80\nc6 05 85 a6 20 00 00\nc6 05 7f a6 20 00 00\nc6 05 79 a6 20 00 01\n89 e9\ne9 70 ff ff ff\nc6 05 6d a6 20 00 01\n89 e9\ne9 62 ff ff ff\nb0 01\n48 89 44 24 08\nb9 01 00 00 00\ne9 51 ff ff ff\n83 f8 ff\n0f 85 cf 02 00 00\nc6 05 49 a6 20 00 01\nc6 05 4a a6 20 00 01\n80 7c 24 08 00\n0f 94 c1\n85 ed\n75 08\n84 c9\n0f 84 0c 03 00 00\n80 3c 24 00\n0f 94 c0\n08 c1\n0f 84 06 03 00 00\n85 ed\n0f 98 c1\n08 c1\n0f 84 02 03 00 00\n80 3c 24 00\n75 12\n8a 0d 01 a6 20 00\n80 f1 01\nf6 c1 01\n0f 84 f3 02 00 00\n80 3c 24 00\n75 12\n8a 0d e6 a5 20 00\n80 f1 01\nf6 c1 01\n0f 84 e4 02 00 00\n80 3c 24 00\n75 12\n8a 0d cf a5 20 00\n80 f1 01\nf6 c1 01\n0f 84 d5 02 00 00\n80 3c 24 00\n75 12\n8a 0d b8 a5 20 00\n80 f1 01\nf6 c1 01\n0f 84 c6 02 00 00\n22 05 a8 a5 20 00\n3c 01\n0f 84 c1 02 00 00\n44 39 25 5d a5 20 00\n75 0e\n49 63 c4\n41 ff c4\n49 c7 04 c6 52 8f 40 00\n8b 05 47 a5 20 00\n41 b7 01\n44 39 e0\n0f 8d 9a 01 00 00\n85 ed\nba 2a 00 00 00\nb9 20 00 00 00\n0f 4e d1\n89 54 24 10\n41 b7 01\n41 bd 1c 00 00 00\n4c 89 74 24 18\n44 89 64 24 14\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 98\n49 8b 2c c6\n80 3c 24 00\n74 14\n48 89 ef\ne8 9c 02 00 00\n41 20 c7\ne9 34 01 00 00\n48 89 ef\n48 89 de\ne8 75 09 00 00\n84 c0\n0f 84 89 00 00 00\nbe 5c 00 00 00\n48 89 ef\ne8 e0 f6 ff ff\n41 b6 01\n48 85 c0\n75 14\nbe 0a 00 00 00\n48 89 ef\ne8 cb f6 ff ff\n48 85 c0\n41 0f 95 c6\n80 7c 24 08 00\n74 61\n45 84 f6\n74 0a\nbf 5c 00 00 00\ne8 7e f7 ff ff\n48 8b 35 7f a4 20 00\nbf 67 84 40 00\ne8 1d f7 ff ff\n48 8b 35 6e a4 20 00\nbf d6 8a 40 00\ne8 0c f7 ff ff\n41 0f b6 f6\n48 89 ef\ne8 20 0a 00 00\n48 8b 35 51 a4 20 00\nbf d9 8a 40 00\ne8 ef f6 ff ff\n80 3d 98 a4 20 00 01\n74 22\neb 54\n45 31 ff\ne9 8c 00 00 00\n45 84 f6\n74 0a\nbf 5c 00 00 00\ne8 1d f7 ff ff\n80 3d 76 a4 20 00 01\n75 34\n45 31 e4\n90\n42 0f b6 14 23\nbf 01 00 00 00\nbe de 8a 40 00\n31 c0\ne8 9a f7 ff ff\n49 ff c4\n0f b6 05 50 a4 20 00\n84 c0\nb8 00 00 00 00\n49 0f 45 c5\n49 39 c4\n72 d0\n80 7c 24 08 00\n75 1f\nbf 20 00 00 00\ne8 cf f6 ff ff\n8b 7c 24 10\ne8 c6 f6 ff ff\n41 0f b6 f6\n48 89 ef\ne8 8a 09 00 00\nbf 0a 00 00 00\ne8 b0 f6 ff ff\n4c 8b 74 24 18\n44 8b 64 24 14\n66 0f 1f 44 00 00\n8b 05 b2 a3 20 00\nff c0\n89 05 aa a3 20 00\n44 39 e0\n0f 8c 99 fe ff ff\n80 3d e3 a3 20 00 01\n75 3d\n48 8b 3d 89 a3 20 00\ne8 44 59 00 00\n83 f8 ff\n75 2c\ne8 9a f4 ff ff\n8b 18\n31 ff\nbe e3 8a 40 00\nba 05 00 00 00\ne8 37 f5 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n89 de\n48 89 ca\ne8 03 f7 ff ff\n41 f6 d7\n41 80 e7 01\n41 0f b6 c7\n48 83 c4 48\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n3d 7d ff ff ff\n74 0e\n3d 7e ff ff ff\n75 47\n31 ff\ne8 c4 f8 ff ff\n48 8b 3d 15 a3 20 00\n48 8b 0d 8e a2 20 00\nbe 8e 88 40 00\nba b5 88 40 00\n41 b8 c3 88 40 00\n41 b9 d2 88 40 00\nb8 00 00 00 00\n6a 00\n68 df 88 40 00\ne8 6f 55 00 00\n48 83 c4 10\n31 ff\ne8 04 f7 ff ff\nbf 01 00 00 00\ne8 7a f8 ff ff\n31 ff\nbe ec 88 40 00\neb 3d\n31 ff\nbe 0f 89 40 00\neb 34\n31 ff\nbe 48 89 40 00\neb 2b\n31 ff\nbe 91 89 40 00\neb 22\n31 ff\nbe d9 89 40 00\neb 19\n31 ff\nbe 19 8a 40 00\neb 10\n31 ff\nbe 57 8a 40 00\neb 07\n31 ff\nbe 96 8a 40 00\nba 05 00 00 00\ne8 5a f4 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 29 f6 ff ff\nbf 01 00 00 00\ne8 0f f8 ff ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n'
p656
S'.text:0000000000401b40\n.text:0000000000401b41\n.text:0000000000401b43\n.text:0000000000401b45\n.text:0000000000401b47\n.text:0000000000401b49\n.text:0000000000401b4a\n.text:0000000000401b4e\n.text:0000000000401b51\n.text:0000000000401b54\n.text:0000000000401b59\n.text:0000000000401b5e\n.text:0000000000401b61\n.text:0000000000401b64\n.text:0000000000401b69\n.text:0000000000401b6e\n.text:0000000000401b73\n.text:0000000000401b78\n.text:0000000000401b7d\n.text:0000000000401b82\n.text:0000000000401b87\n.text:0000000000401b8c\n.text:0000000000401b91\n.text:0000000000401b96\n.text:0000000000401b9b\n.text:0000000000401ba2\n.text:0000000000401ba4\n.text:0000000000401ba8\n.text:0000000000401baa\n.text:0000000000401baf\n.text:0000000000401bb1\n.text:0000000000401bb6\n.text:0000000000401bbb\n.text:0000000000401bbd\n.text:0000000000401bc2\n.text:0000000000401bc4\n.text:0000000000401bcb\n.text:0000000000401bcd\n.text:0000000000401bd0\n.text:0000000000401bd2\n.text:0000000000401bd7\n.text:0000000000401bdc\n.text:0000000000401bdf\n.text:0000000000401be2\n.text:0000000000401be5\n.text:0000000000401bea\n.text:0000000000401bed\n.text:0000000000401bf3\n.text:0000000000401bf6\n.text:0000000000401bf9\n.text:0000000000401bff\n.text:0000000000401c04\n.text:0000000000401c0b\n.text:0000000000401c0d\n.text:0000000000401c11\n.text:0000000000401c13\n.text:0000000000401c15\n.text:0000000000401c17\n.text:0000000000401c19\n.text:0000000000401c20\n.text:0000000000401c27\n.text:0000000000401c29\n.text:0000000000401c30\n.text:0000000000401c32\n.text:0000000000401c34\n.text:0000000000401c3b\n.text:0000000000401c42\n.text:0000000000401c44\n.text:0000000000401c4b\n.text:0000000000401c52\n.text:0000000000401c59\n.text:0000000000401c5b\n.text:0000000000401c60\n.text:0000000000401c67\n.text:0000000000401c69\n.text:0000000000401c6e\n.text:0000000000401c70\n.text:0000000000401c75\n.text:0000000000401c7a\n.text:0000000000401c7f\n.text:0000000000401c82\n.text:0000000000401c88\n.text:0000000000401c8f\n.text:0000000000401c96\n.text:0000000000401c9b\n.text:0000000000401c9e\n.text:0000000000401ca0\n.text:0000000000401ca2\n.text:0000000000401ca4\n.text:0000000000401caa\n.text:0000000000401cae\n.text:0000000000401cb1\n.text:0000000000401cb3\n.text:0000000000401cb9\n.text:0000000000401cbb\n.text:0000000000401cbe\n.text:0000000000401cc0\n.text:0000000000401cc6\n.text:0000000000401cca\n.text:0000000000401ccc\n.text:0000000000401cd2\n.text:0000000000401cd5\n.text:0000000000401cd8\n.text:0000000000401cde\n.text:0000000000401ce2\n.text:0000000000401ce4\n.text:0000000000401cea\n.text:0000000000401ced\n.text:0000000000401cf0\n.text:0000000000401cf6\n.text:0000000000401cfa\n.text:0000000000401cfc\n.text:0000000000401d02\n.text:0000000000401d05\n.text:0000000000401d08\n.text:0000000000401d0e\n.text:0000000000401d12\n.text:0000000000401d14\n.text:0000000000401d1a\n.text:0000000000401d1d\n.text:0000000000401d20\n.text:0000000000401d26\n.text:0000000000401d2c\n.text:0000000000401d2e\n.text:0000000000401d34\n.text:0000000000401d3b\n.text:0000000000401d3d\n.text:0000000000401d40\n.text:0000000000401d43\n.text:0000000000401d4b\n.text:0000000000401d51\n.text:0000000000401d54\n.text:0000000000401d57\n.text:0000000000401d5d\n.text:0000000000401d5f\n.text:0000000000401d64\n.text:0000000000401d69\n.text:0000000000401d6c\n.text:0000000000401d70\n.text:0000000000401d73\n.text:0000000000401d79\n.text:0000000000401d7e\n.text:0000000000401d83\n.text:0000000000401d90\n.text:0000000000401d92\n.text:0000000000401d96\n.text:0000000000401d9a\n.text:0000000000401d9c\n.text:0000000000401d9f\n.text:0000000000401da4\n.text:0000000000401da7\n.text:0000000000401db0\n.text:0000000000401db3\n.text:0000000000401db6\n.text:0000000000401dbb\n.text:0000000000401dbd\n.text:0000000000401dc3\n.text:0000000000401dc8\n.text:0000000000401dcb\n.text:0000000000401dd0\n.text:0000000000401dd3\n.text:0000000000401dd6\n.text:0000000000401dd8\n.text:0000000000401ddd\n.text:0000000000401de0\n.text:0000000000401de5\n.text:0000000000401de8\n.text:0000000000401dec\n.text:0000000000401df1\n.text:0000000000401df3\n.text:0000000000401df6\n.text:0000000000401df8\n.text:0000000000401dfd\n.text:0000000000401e02\n.text:0000000000401e09\n.text:0000000000401e0e\n.text:0000000000401e13\n.text:0000000000401e1a\n.text:0000000000401e1f\n.text:0000000000401e24\n.text:0000000000401e28\n.text:0000000000401e2b\n.text:0000000000401e30\n.text:0000000000401e37\n.text:0000000000401e3c\n.text:0000000000401e41\n.text:0000000000401e48\n.text:0000000000401e4a\n.text:0000000000401e4c\n.text:0000000000401e4f\n.text:0000000000401e54\n.text:0000000000401e57\n.text:0000000000401e59\n.text:0000000000401e5e\n.text:0000000000401e63\n.text:0000000000401e6a\n.text:0000000000401e6c\n.text:0000000000401e6f\n.text:0000000000401e70\n.text:0000000000401e75\n.text:0000000000401e7a\n.text:0000000000401e7f\n.text:0000000000401e81\n.text:0000000000401e86\n.text:0000000000401e89\n.text:0000000000401e90\n.text:0000000000401e92\n.text:0000000000401e97\n.text:0000000000401e9b\n.text:0000000000401e9e\n.text:0000000000401ea0\n.text:0000000000401ea5\n.text:0000000000401ea7\n.text:0000000000401eac\n.text:0000000000401eb1\n.text:0000000000401eb5\n.text:0000000000401eba\n.text:0000000000401ebe\n.text:0000000000401ec1\n.text:0000000000401ec6\n.text:0000000000401ecb\n.text:0000000000401ed0\n.text:0000000000401ed5\n.text:0000000000401eda\n.text:0000000000401ee0\n.text:0000000000401ee6\n.text:0000000000401ee8\n.text:0000000000401eee\n.text:0000000000401ef1\n.text:0000000000401ef7\n.text:0000000000401efe\n.text:0000000000401f00\n.text:0000000000401f07\n.text:0000000000401f0c\n.text:0000000000401f0f\n.text:0000000000401f11\n.text:0000000000401f16\n.text:0000000000401f18\n.text:0000000000401f1a\n.text:0000000000401f1f\n.text:0000000000401f24\n.text:0000000000401f29\n.text:0000000000401f2c\n.text:0000000000401f31\n.text:0000000000401f33\n.text:0000000000401f35\n.text:0000000000401f38\n.text:0000000000401f3d\n.text:0000000000401f40\n.text:0000000000401f44\n.text:0000000000401f48\n.text:0000000000401f4c\n.text:0000000000401f4d\n.text:0000000000401f4f\n.text:0000000000401f51\n.text:0000000000401f53\n.text:0000000000401f55\n.text:0000000000401f56\n.text:0000000000401f57\n.text:0000000000401f5c\n.text:0000000000401f5e\n.text:0000000000401f63\n.text:0000000000401f65\n.text:0000000000401f67\n.text:0000000000401f6c\n.text:0000000000401f73\n.text:0000000000401f7a\n.text:0000000000401f7f\n.text:0000000000401f84\n.text:0000000000401f8a\n.text:0000000000401f90\n.text:0000000000401f95\n.text:0000000000401f97\n.text:0000000000401f9c\n.text:0000000000401fa1\n.text:0000000000401fa5\n.text:0000000000401fa7\n.text:0000000000401fac\n.text:0000000000401fb1\n.text:0000000000401fb6\n.text:0000000000401fb8\n.text:0000000000401fbd\n.text:0000000000401fbf\n.text:0000000000401fc1\n.text:0000000000401fc6\n.text:0000000000401fc8\n.text:0000000000401fca\n.text:0000000000401fcf\n.text:0000000000401fd1\n.text:0000000000401fd3\n.text:0000000000401fd8\n.text:0000000000401fda\n.text:0000000000401fdc\n.text:0000000000401fe1\n.text:0000000000401fe3\n.text:0000000000401fe5\n.text:0000000000401fea\n.text:0000000000401fec\n.text:0000000000401fee\n.text:0000000000401ff3\n.text:0000000000401ff5\n.text:0000000000401ff7\n.text:0000000000401ffc\n.text:0000000000402001\n.text:0000000000402006\n.text:0000000000402009\n.text:000000000040200b\n.text:000000000040200d\n.text:000000000040200f\n.text:0000000000402012\n.text:0000000000402017\n.text:000000000040201c\n.text:0000000000402021\n'
p657
tp658
sS'realloc'
p659
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p660
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_0060c150)();\u000a  return pvVar1;\u000a}\u000a\u000a
p661
S'JMP qword ptr [0x0060c150]\n'
p662
S'ff 25 5a ab 20 00\n'
p663
S'.plt:00000000004015f0\n'
p664
tp665
sS'xcharalloc'
p666
(S'\n__stdcall xcharalloc(size_t n)\n'
p667
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p668
S'JMP 0x00407640\n'
p669
S'e9 2b ff ff ff\n'
p670
S'.text:0000000000407710\n'
p671
tp672
sS'c_isupper'
p673
(S'\n__stdcall c_isupper()\n'
p674
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p675
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p676
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p677
S'.text:0000000000407c50\n.text:0000000000407c53\n.text:0000000000407c56\n.text:0000000000407c59\n'
p678
tp679
sS'__fprintf_chk'
p680
(S'\n__stdcall __fprintf_chk()\n'
p681
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_0060c1c0)();\u000a  return;\u000a}\u000a\u000a
p682
S'JMP qword ptr [0x0060c1c0]\n'
p683
S'ff 25 ea aa 20 00\n'
p684
S'.plt:00000000004016d0\n'
p685
tp686
sS'get_charset_aliases'
p687
(S'\n__stdcall get_charset_aliases()\n'
p688
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_00407fb4_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_00407fb4_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_00407fb4_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_00407fb4_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_00407fb4_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_00407fb4_caseD_9;\u000a      case -1:\u000a        goto switchD_00407fb4_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_0040800d:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_00408013:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_00407fb4_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_00408013;\u000a  }\u000a  goto LAB_0040800d;\u000a}\u000a\u000a
p689
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x0060c448]\nTEST R15,R15\nJNZ 0x00408022\nMOV EDI,0x409c4c\nCALL 0x00401380\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00407dd8\nCMP byte ptr [RBX],0x0\nJNZ 0x00407ddd\nMOV EBX,0x409c5c\nMOV RDI,RBX\nCALL 0x00401480\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00407df7\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x00407df9\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x004015a0\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00407e4d\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401570\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00407e58\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00407e75\nMOV R15D,0x4095e1\nJMP 0x0040801b\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00401650\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0040800d\nMOV ESI,0x4088dd\nMOV EDI,EBP\nCALL 0x00401600\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00407fd4\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x00407fa0\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x004013e0\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x004013e0\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x00407fa0\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x004015d0\nMOV ESI,0x409c6b\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x004014f0\nCMP EAX,0x2\nJL 0x00407ff4\nMOV RDI,R12\nCALL 0x00401480\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401480\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00407f7d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x004015f0\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x00407ec4\nJMP 0x00407fdd\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x004015a0\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x00407ec4\nJMP 0x00407fdd\nMOV RDI,RBX\nCALL 0x00401400\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x00407f07\nJMP qword ptr [0x409b10 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x00401400\nCMP EAX,-0x1\nJZ 0x00407ff4\nCMP EAX,0xa\nJNZ 0x00407fc0\nJMP 0x00407fa0\nMOV EDI,EBP\nCALL 0x00401500\nJMP 0x0040800d\nMOV RDI,R15\nCALL 0x00401390\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x00407850\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040800d\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x00408013\nMOV R15D,0x4095e1\nMOV RDI,R13\nCALL 0x00401390\nMOV qword ptr [0x0060c448],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p690
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d 90 46 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf 4c 9c 40 00\ne8 b5 95 ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb 5c 9c 40 00\n48 89 df\ne8 9b 96 ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 99 97 ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 53 97 ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf e1 95 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 cc 97 ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe dd 88 40 00\n89 ef\ne8 66 97 ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 fb 94 ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 eb 94 ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 bf 96 ff ff\nbe 6b 9c 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 ca 95 ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 49 95 ff ff\n49 89 c4\n48 89 ef\ne8 3e 95 ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 86 96 ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 15 96 ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 58 94 ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd 10 9b 40 00\n48 89 df\ne8 38 94 ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 25 95 ff ff\neb 30\n4c 89 ff\ne8 ab 93 ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 54 f8 ff ff\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf e1 95 40 00\n4c 89 ef\ne8 75 93 ff ff\n4c 89 3d 26 44 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p691
S'.text:0000000000407da0\n.text:0000000000407da1\n.text:0000000000407da3\n.text:0000000000407da5\n.text:0000000000407da7\n.text:0000000000407da9\n.text:0000000000407daa\n.text:0000000000407db1\n.text:0000000000407db8\n.text:0000000000407dbb\n.text:0000000000407dc1\n.text:0000000000407dc6\n.text:0000000000407dcb\n.text:0000000000407dce\n.text:0000000000407dd1\n.text:0000000000407dd3\n.text:0000000000407dd6\n.text:0000000000407dd8\n.text:0000000000407ddd\n.text:0000000000407de0\n.text:0000000000407de5\n.text:0000000000407de8\n.text:0000000000407deb\n.text:0000000000407ded\n.text:0000000000407df2\n.text:0000000000407df5\n.text:0000000000407df7\n.text:0000000000407df9\n.text:0000000000407dfd\n.text:0000000000407e02\n.text:0000000000407e07\n.text:0000000000407e0a\n.text:0000000000407e0d\n.text:0000000000407e0f\n.text:0000000000407e12\n.text:0000000000407e15\n.text:0000000000407e18\n.text:0000000000407e1d\n.text:0000000000407e20\n.text:0000000000407e23\n.text:0000000000407e26\n.text:0000000000407e28\n.text:0000000000407e2e\n.text:0000000000407e38\n.text:0000000000407e3d\n.text:0000000000407e47\n.text:0000000000407e4b\n.text:0000000000407e4d\n.text:0000000000407e53\n.text:0000000000407e58\n.text:0000000000407e62\n.text:0000000000407e67\n.text:0000000000407e71\n.text:0000000000407e75\n.text:0000000000407e7a\n.text:0000000000407e7c\n.text:0000000000407e7f\n.text:0000000000407e84\n.text:0000000000407e86\n.text:0000000000407e88\n.text:0000000000407e8e\n.text:0000000000407e93\n.text:0000000000407e95\n.text:0000000000407e9a\n.text:0000000000407e9d\n.text:0000000000407ea0\n.text:0000000000407ea6\n.text:0000000000407eab\n.text:0000000000407eb0\n.text:0000000000407eb2\n.text:0000000000407eb7\n.text:0000000000407eba\n.text:0000000000407ebf\n.text:0000000000407ec4\n.text:0000000000407ec9\n.text:0000000000407ecc\n.text:0000000000407ecf\n.text:0000000000407ed2\n.text:0000000000407ed5\n.text:0000000000407ed8\n.text:0000000000407edd\n.text:0000000000407ee0\n.text:0000000000407ee5\n.text:0000000000407ee8\n.text:0000000000407eed\n.text:0000000000407ef0\n.text:0000000000407ef5\n.text:0000000000407efa\n.text:0000000000407efd\n.text:0000000000407f02\n.text:0000000000407f07\n.text:0000000000407f09\n.text:0000000000407f0c\n.text:0000000000407f11\n.text:0000000000407f16\n.text:0000000000407f18\n.text:0000000000407f1b\n.text:0000000000407f1e\n.text:0000000000407f21\n.text:0000000000407f26\n.text:0000000000407f29\n.text:0000000000407f2f\n.text:0000000000407f32\n.text:0000000000407f37\n.text:0000000000407f3a\n.text:0000000000407f3d\n.text:0000000000407f42\n.text:0000000000407f45\n.text:0000000000407f4a\n.text:0000000000407f4f\n.text:0000000000407f52\n.text:0000000000407f54\n.text:0000000000407f58\n.text:0000000000407f5d\n.text:0000000000407f62\n.text:0000000000407f65\n.text:0000000000407f6a\n.text:0000000000407f6d\n.text:0000000000407f72\n.text:0000000000407f75\n.text:0000000000407f7b\n.text:0000000000407f7d\n.text:0000000000407f82\n.text:0000000000407f86\n.text:0000000000407f8b\n.text:0000000000407f8e\n.text:0000000000407f91\n.text:0000000000407f97\n.text:0000000000407fa0\n.text:0000000000407fa3\n.text:0000000000407fa8\n.text:0000000000407fab\n.text:0000000000407fae\n.text:0000000000407fb4\n.text:0000000000407fc0\n.text:0000000000407fc3\n.text:0000000000407fc8\n.text:0000000000407fcb\n.text:0000000000407fcd\n.text:0000000000407fd0\n.text:0000000000407fd2\n.text:0000000000407fd4\n.text:0000000000407fd6\n.text:0000000000407fdb\n.text:0000000000407fdd\n.text:0000000000407fe0\n.text:0000000000407fe5\n.text:0000000000407fe7\n.text:0000000000407fec\n.text:0000000000407fef\n.text:0000000000407ff4\n.text:0000000000407ff7\n.text:0000000000407ffc\n.text:0000000000408001\n.text:0000000000408004\n.text:0000000000408006\n.text:000000000040800b\n.text:000000000040800d\n.text:0000000000408013\n.text:0000000000408016\n.text:000000000040801b\n.text:0000000000408022\n.text:0000000000408025\n.text:000000000040802c\n.text:000000000040802d\n.text:000000000040802f\n.text:0000000000408031\n.text:0000000000408033\n.text:0000000000408035\n.text:0000000000408036\n'
p692
tp693
sS'nl_langinfo'
p694
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p695
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0060c138)();\u000a  return pcVar1;\u000a}\u000a\u000a
p696
S'JMP qword ptr [0x0060c138]\n'
p697
S'ff 25 72 ab 20 00\n'
p698
S'.plt:00000000004015c0\n'
p699
tp700
sS'c_isalnum'
p701
(S'\n__stdcall c_isalnum()\n'
p702
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p703
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x00407b6b\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x00407b6b\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x00407b6a\nXOR EAX,EAX\nRET\n'
p704
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p705
S'.text:0000000000407b50\n.text:0000000000407b52\n.text:0000000000407b55\n.text:0000000000407b58\n.text:0000000000407b5a\n.text:0000000000407b64\n.text:0000000000407b68\n.text:0000000000407b6a\n.text:0000000000407b6b\n.text:0000000000407b6e\n.text:0000000000407b71\n.text:0000000000407b73\n.text:0000000000407b75\n'
p706
tp707
sS'x2realloc'
p708
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p709
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p710
S'MOV EDX,0x1\nJMP 0x004076b0\n'
p711
S'ba 01 00 00 00\neb 89\n'
p712
S'.text:0000000000407720\n.text:0000000000407725\n'
p713
tp714
sS'strlen'
p715
(S'\n__stdcall strlen(char * __s)\n'
p716
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_0060c098)();\u000a  return sVar1;\u000a}\u000a\u000a
p717
S'JMP qword ptr [0x0060c098]\n'
p718
S'ff 25 12 ac 20 00\n'
p719
S'.plt:0000000000401480\n'
p720
tp721
sS'memcmp'
p722
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p723
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_0060c0e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p724
S'JMP qword ptr [0x0060c0e8]\n'
p725
S'ff 25 c2 ab 20 00\n'
p726
S'.plt:0000000000401520\n'
p727
tp728
sS'quotearg_n_style_mem'
p729
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p730
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p731
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00406a40\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00406810\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p732
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p733
S'.text:0000000000406aa0\n.text:0000000000406aa1\n.text:0000000000406aa3\n.text:0000000000406aa5\n.text:0000000000406aa6\n.text:0000000000406aaa\n.text:0000000000406aad\n.text:0000000000406ab0\n.text:0000000000406ab2\n.text:0000000000406ab5\n.text:0000000000406ab8\n.text:0000000000406abd\n.text:0000000000406abf\n.text:0000000000406ac2\n.text:0000000000406ac5\n.text:0000000000406ac8\n.text:0000000000406acd\n.text:0000000000406ad1\n.text:0000000000406ad2\n.text:0000000000406ad4\n.text:0000000000406ad6\n.text:0000000000406ad7\n'
p734
tp735
sS'_exit'
p736
(S'\n__stdcall _exit(int __status)\n'
p737
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_0060c040)();\u000a  return;\u000a}\u000a\u000a
p738
S'JMP qword ptr [0x0060c040]\n'
p739
S'ff 25 6a ac 20 00\n'
p740
S'.plt:00000000004013d0\n'
p741
tp742
sS'emit_stdin_note'
p743
(S'\n__stdcall emit_stdin_note()\n'
p744
V\u000avoid emit_stdin_note(void)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = (char *)dcgettext(0,"\u005cnWith no FILE, or when FILE is -, read standard input.\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p745
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x408b19\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,qword ptr [0x0060c288]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401530\n'
p746
S'50\n31 ff\nbe 19 8b 40 00\nba 05 00 00 00\ne8 6e fa ff ff\n48 8b 35 8f a8 20 00\n48 89 c7\n58\ne9 2e fb ff ff\n'
p747
S'.text:00000000004019e0\n.text:00000000004019e1\n.text:00000000004019e3\n.text:00000000004019e8\n.text:00000000004019ed\n.text:00000000004019f2\n.text:00000000004019f9\n.text:00000000004019fc\n.text:00000000004019fd\n'
p748
tp749
sS'__errno_location'
p750
(S'\n__stdcall __errno_location()\n'
p751
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_0060c030)();\u000a  return piVar1;\u000a}\u000a\u000a
p752
S'JMP qword ptr [0x0060c030]\n'
p753
S'ff 25 7a ac 20 00\n'
p754
S'.plt:00000000004013b0\n'
p755
tp756
sS'sha256_read_ctx'
p757
(S'\n__stdcall sha256_read_ctx(sha256_ctx * ctx, void * resbuf)\n'
p758
V\u000avoid * sha256_read_ctx(sha256_ctx *ctx,void *resbuf)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = 0;\u000a  do {\u000a    set_uint32((char *)((long)resbuf + lVar1));\u000a    lVar1 = lVar1 + 4;\u000a  } while (lVar1 != 0x20);\u000a  return resbuf;\u000a}\u000a\u000a
p759
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nMOV R15,RDI\nXOR EBX,EBX\nNOP dword ptr [RAX]\nLEA RDI,[R14 + RBX*0x1]\nMOV ESI,dword ptr [R15 + RBX*0x1]\nBSWAP ESI\nCALL 0x00402de0\nADD RBX,0x4\nCMP RBX,0x20\nJNZ 0x00402db0\nMOV RAX,R14\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p760
S'41 57\n41 56\n53\n49 89 f6\n49 89 ff\n31 db\n0f 1f 00\n49 8d 3c 1e\n41 8b 34 1f\n0f ce\ne8 21 00 00 00\n48 83 c3 04\n48 83 fb 20\n75 e7\n4c 89 f0\n5b\n41 5e\n41 5f\nc3\n'
p761
S'.text:0000000000402da0\n.text:0000000000402da2\n.text:0000000000402da4\n.text:0000000000402da5\n.text:0000000000402da8\n.text:0000000000402dab\n.text:0000000000402dad\n.text:0000000000402db0\n.text:0000000000402db4\n.text:0000000000402db8\n.text:0000000000402dba\n.text:0000000000402dbf\n.text:0000000000402dc3\n.text:0000000000402dc7\n.text:0000000000402dc9\n.text:0000000000402dcc\n.text:0000000000402dcd\n.text:0000000000402dcf\n.text:0000000000402dd1\n'
p762
tp763
sS'x2nrealloc'
p764
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p765
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p766
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x004076dc\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00407709\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x004076fa\nTEST RCX,RCX\nJNZ 0x004076fa\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x00407680\nPUSH RAX\nCALL 0x004077d0\n'
p767
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p768
S'.text:00000000004076b0\n.text:00000000004076b3\n.text:00000000004076b6\n.text:00000000004076b9\n.text:00000000004076bb\n.text:00000000004076c5\n.text:00000000004076c7\n.text:00000000004076ca\n.text:00000000004076cd\n.text:00000000004076cf\n.text:00000000004076d2\n.text:00000000004076d5\n.text:00000000004076da\n.text:00000000004076dc\n.text:00000000004076df\n.text:00000000004076e1\n.text:00000000004076e6\n.text:00000000004076e8\n.text:00000000004076eb\n.text:00000000004076ed\n.text:00000000004076f4\n.text:00000000004076f7\n.text:00000000004076fa\n.text:00000000004076fd\n.text:0000000000407701\n.text:0000000000407704\n.text:0000000000407709\n.text:000000000040770a\n'
p769
tp770
sS'sha256_conclude_ctx'
p771
(S'\n__stdcall sha256_conclude_ctx(sha256_ctx * ctx)\n'
p772
V\u000avoid sha256_conclude_ctx(sha256_ctx *ctx)\u000a\u000a{\u000a  ulong uVar1;\u000a  uint uVar2;\u000a  long lVar3;\u000a  \u000a  uVar1 = ctx->buflen;\u000a  lVar3 = 0x20;\u000a  if (uVar1 < 0x38) {\u000a    lVar3 = 0x10;\u000a  }\u000a  uVar2 = ctx->total[0] + (int)uVar1;\u000a  ctx->total[0] = uVar2;\u000a  if ((ulong)uVar2 < uVar1) {\u000a    ctx->total[1] = ctx->total[1] + 1;\u000a  }\u000a  set_uint32((char *)((long)&ctx->buflen + lVar3 * 4));\u000a  set_uint32((char *)((long)&ctx->buflen + lVar3 * 4 + 4));\u000a  memcpy((void *)((long)ctx->buffer + uVar1),fillbuf,(lVar3 * 4 + -8) - uVar1);\u000a  sha256_process_block(ctx->buffer,lVar3 << 2,ctx);\u000a  return;\u000a}\u000a\u000a
p773
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV R12,qword ptr [RBX + 0x28]\nCMP R12,0x38\nMOV EAX,0x10\nMOV R14D,0x20\nCMOVC R14,RAX\nMOV EAX,dword ptr [RBX + 0x20]\nADD RAX,R12\nMOV dword ptr [RBX + 0x20],EAX\nMOV EAX,EAX\nCMP RAX,R12\nJNC 0x00402e95\nINC dword ptr [RBX + 0x24]\nLEA RDI,[RBX + R14*0x4 + 0x28]\nLEA R15,[RBX + 0x30]\nMOV EAX,dword ptr [RBX + 0x20]\nMOV ECX,dword ptr [RBX + 0x24]\nSHRD EAX,ECX,0x1d\nSHL EAX,0x18\nMOV EDX,ECX\nSHL EDX,0xb\nAND EDX,0xff0000\nMOV ESI,ECX\nSHR ESI,0x5\nAND ESI,0xff00\nSHR ECX,0x15\nMOVZX ECX,CL\nOR ESI,EDX\nOR ESI,ECX\nOR ESI,EAX\nCALL 0x00402de0\nLEA RDI,[RBX + R14*0x4 + 0x2c]\nMOV EAX,dword ptr [RBX + 0x20]\nMOV ECX,EAX\nSHL ECX,0x1b\nMOV EDX,EAX\nSHL EDX,0xb\nAND EDX,0xff0000\nOR EDX,ECX\nMOV ECX,EAX\nSHR ECX,0x5\nAND ECX,0xff00\nOR ECX,EDX\nSHR EAX,0x15\nMOVZX ESI,AL\nOR ESI,ECX\nCALL 0x00402de0\nLEA RDI,[RBX + R12*0x1 + 0x30]\nLEA RDX,[-0x8 + R14*0x4]\nSUB RDX,R12\nMOV ESI,0x408ed0\nCALL 0x00401570\nSHL R14,0x2\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00403080\n'
p774
S'41 57\n41 56\n41 54\n53\n50\n48 89 fb\n4c 8b 63 28\n49 83 fc 38\nb8 10 00 00 00\n41 be 20 00 00 00\n4c 0f 42 f0\n8b 43 20\n4c 01 e0\n89 43 20\n89 c0\n4c 39 e0\n73 03\nff 43 24\n4a 8d 7c b3 28\n4c 8d 7b 30\n8b 43 20\n8b 4b 24\n0f ac c8 1d\nc1 e0 18\n89 ca\nc1 e2 0b\n81 e2 00 00 ff 00\n89 ce\nc1 ee 05\n81 e6 00 ff 00 00\nc1 e9 15\n0f b6 c9\n09 d6\n09 ce\n09 c6\ne8 0e ff ff ff\n4a 8d 7c b3 2c\n8b 43 20\n89 c1\nc1 e1 1b\n89 c2\nc1 e2 0b\n81 e2 00 00 ff 00\n09 ca\n89 c1\nc1 e9 05\n81 e1 00 ff 00 00\n09 d1\nc1 e8 15\n0f b6 f0\n09 ce\ne8 da fe ff ff\n4a 8d 7c 23 30\n4a 8d 14 b5 f8 ff ff ff\n4c 29 e2\nbe d0 8e 40 00\ne8 50 e6 ff ff\n49 c1 e6 02\n4c 89 ff\n4c 89 f6\n48 89 da\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 43 01 00 00\n'
p775
S'.text:0000000000402e60\n.text:0000000000402e62\n.text:0000000000402e64\n.text:0000000000402e66\n.text:0000000000402e67\n.text:0000000000402e68\n.text:0000000000402e6b\n.text:0000000000402e6f\n.text:0000000000402e73\n.text:0000000000402e78\n.text:0000000000402e7e\n.text:0000000000402e82\n.text:0000000000402e85\n.text:0000000000402e88\n.text:0000000000402e8b\n.text:0000000000402e8d\n.text:0000000000402e90\n.text:0000000000402e92\n.text:0000000000402e95\n.text:0000000000402e9a\n.text:0000000000402e9e\n.text:0000000000402ea1\n.text:0000000000402ea4\n.text:0000000000402ea8\n.text:0000000000402eab\n.text:0000000000402ead\n.text:0000000000402eb0\n.text:0000000000402eb6\n.text:0000000000402eb8\n.text:0000000000402ebb\n.text:0000000000402ec1\n.text:0000000000402ec4\n.text:0000000000402ec7\n.text:0000000000402ec9\n.text:0000000000402ecb\n.text:0000000000402ecd\n.text:0000000000402ed2\n.text:0000000000402ed7\n.text:0000000000402eda\n.text:0000000000402edc\n.text:0000000000402edf\n.text:0000000000402ee1\n.text:0000000000402ee4\n.text:0000000000402eea\n.text:0000000000402eec\n.text:0000000000402eee\n.text:0000000000402ef1\n.text:0000000000402ef7\n.text:0000000000402ef9\n.text:0000000000402efc\n.text:0000000000402eff\n.text:0000000000402f01\n.text:0000000000402f06\n.text:0000000000402f0b\n.text:0000000000402f13\n.text:0000000000402f16\n.text:0000000000402f1b\n.text:0000000000402f20\n.text:0000000000402f24\n.text:0000000000402f27\n.text:0000000000402f2a\n.text:0000000000402f2d\n.text:0000000000402f31\n.text:0000000000402f32\n.text:0000000000402f34\n.text:0000000000402f36\n.text:0000000000402f38\n'
p776
tp777
sS'xrealloc'
p778
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p779
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p780
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x00407697\nTEST RBX,RBX\nJNZ 0x00407697\nCALL 0x00401390\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x004015f0\nTEST RBX,RBX\nJZ 0x004076a9\nTEST RAX,RAX\nJZ 0x004076ab\nPOP RBX\nRET\nCALL 0x004077d0\n'
p781
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 fd 9c ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 51 9f ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p782
S'.text:0000000000407680\n.text:0000000000407681\n.text:0000000000407684\n.text:0000000000407687\n.text:0000000000407689\n.text:000000000040768c\n.text:000000000040768e\n.text:0000000000407693\n.text:0000000000407695\n.text:0000000000407696\n.text:0000000000407697\n.text:000000000040769a\n.text:000000000040769f\n.text:00000000004076a2\n.text:00000000004076a4\n.text:00000000004076a7\n.text:00000000004076a9\n.text:00000000004076aa\n.text:00000000004076ab\n'
p783
tp784
sS'quotearg_n_options'
p785
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p786
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p787
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x004013b0\nTEST R12D,R12D\nJS 0x004069c1\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x0060c218]\nCMP dword ptr [0x0060c220],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x004068db\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x60c228\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x00407680\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x0060c218],R15\nJNZ 0x004068a2\nMOVUPS XMM0,xmmword ptr [0x0060c228]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x0060c220]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x004014e0\nMOV dword ptr [0x0060c220],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x00405a30\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x0040693d\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x004069ab\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x60c340\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x00406968\nCALL 0x00401390\nMOV RDI,R15\nCALL 0x00407710\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x00405a30\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x004013a0\n'
p788
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 81 ab ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 ce 59 20 00\n44 39 25 cf 59 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 28 c2 60 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 f8 0d 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d 83 59 20 00\n75 0b\n0f 10 05 8a 59 20 00\n41 0f 11 07\n8b 05 78 59 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 1d ac ff ff\n89 1d 57 59 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 40 c3 60 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 28 aa ff ff\n4c 89 ff\ne8 a0 0d 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 da a9 ff ff\n'
p789
S'.text:0000000000406810\n.text:0000000000406811\n.text:0000000000406813\n.text:0000000000406815\n.text:0000000000406817\n.text:0000000000406819\n.text:000000000040681a\n.text:000000000040681e\n.text:0000000000406821\n.text:0000000000406824\n.text:0000000000406827\n.text:000000000040682a\n.text:000000000040682f\n.text:0000000000406832\n.text:0000000000406838\n.text:000000000040683d\n.text:000000000040683f\n.text:0000000000406843\n.text:000000000040684a\n.text:0000000000406851\n.text:0000000000406856\n.text:000000000040685b\n.text:0000000000406860\n.text:0000000000406862\n.text:0000000000406867\n.text:000000000040686a\n.text:000000000040686d\n.text:0000000000406873\n.text:0000000000406875\n.text:0000000000406878\n.text:000000000040687c\n.text:000000000040687f\n.text:0000000000406883\n.text:0000000000406888\n.text:000000000040688b\n.text:000000000040688e\n.text:0000000000406895\n.text:0000000000406897\n.text:000000000040689e\n.text:00000000004068a2\n.text:00000000004068a8\n.text:00000000004068ab\n.text:00000000004068af\n.text:00000000004068b2\n.text:00000000004068b5\n.text:00000000004068b9\n.text:00000000004068bb\n.text:00000000004068be\n.text:00000000004068c3\n.text:00000000004068c9\n.text:00000000004068cc\n.text:00000000004068d1\n.text:00000000004068d6\n.text:00000000004068db\n.text:00000000004068de\n.text:00000000004068e2\n.text:00000000004068e6\n.text:00000000004068eb\n.text:00000000004068ef\n.text:00000000004068f3\n.text:00000000004068f7\n.text:00000000004068fb\n.text:00000000004068ff\n.text:0000000000406904\n.text:0000000000406907\n.text:000000000040690a\n.text:000000000040690d\n.text:0000000000406912\n.text:0000000000406915\n.text:0000000000406918\n.text:000000000040691b\n.text:000000000040691c\n.text:0000000000406921\n.text:0000000000406925\n.text:0000000000406928\n.text:000000000040692b\n.text:000000000040692d\n.text:0000000000406932\n.text:0000000000406936\n.text:000000000040693b\n.text:000000000040693d\n.text:0000000000406941\n.text:0000000000406946\n.text:0000000000406949\n.text:000000000040694c\n.text:0000000000406951\n.text:0000000000406956\n.text:0000000000406959\n.text:000000000040695e\n.text:0000000000406961\n.text:0000000000406963\n.text:0000000000406968\n.text:000000000040696b\n.text:0000000000406970\n.text:0000000000406973\n.text:0000000000406976\n.text:000000000040697b\n.text:000000000040697e\n.text:0000000000406982\n.text:0000000000406985\n.text:0000000000406988\n.text:000000000040698d\n.text:0000000000406992\n.text:0000000000406997\n.text:000000000040699a\n.text:000000000040699d\n.text:000000000040699e\n.text:00000000004069a3\n.text:00000000004069a7\n.text:00000000004069ab\n.text:00000000004069af\n.text:00000000004069b2\n.text:00000000004069b6\n.text:00000000004069b7\n.text:00000000004069b9\n.text:00000000004069bb\n.text:00000000004069bd\n.text:00000000004069bf\n.text:00000000004069c0\n.text:00000000004069c1\n'
p790
tp791
sS'strcmp'
p792
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p793
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_0060c108)();\u000a  return iVar1;\u000a}\u000a\u000a
p794
S'JMP qword ptr [0x0060c108]\n'
p795
S'ff 25 a2 ab 20 00\n'
p796
S'.plt:0000000000401560\n'
p797
tp798
sS'set_custom_quoting'
p799
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p800
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p801
S'TEST RDI,RDI\nMOV EAX,0x60c300\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x004059a5\nTEST RDX,RDX\nJZ 0x004059a5\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x004013a0\n'
p802
S'48 85 ff\nb8 00 c3 60 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 f5 b9 ff ff\n'
p803
S'.text:0000000000405980\n.text:0000000000405983\n.text:0000000000405988\n.text:000000000040598c\n.text:0000000000405992\n.text:0000000000405995\n.text:0000000000405997\n.text:000000000040599a\n.text:000000000040599c\n.text:00000000004059a0\n.text:00000000004059a4\n.text:00000000004059a5\n.text:00000000004059a6\n'
p804
tp805
sS'c_isalpha'
p806
(S'\n__stdcall c_isalpha()\n'
p807
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p808
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x00407b9b\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p809
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p810
S'.text:0000000000407b80\n.text:0000000000407b83\n.text:0000000000407b86\n.text:0000000000407b88\n.text:0000000000407b92\n.text:0000000000407b94\n.text:0000000000407b97\n.text:0000000000407b9a\n.text:0000000000407b9b\n.text:0000000000407b9d\n'
p811
tp812
sS'sha256_buffer'
p813
(S'\n__stdcall sha256_buffer(char * buffer, size_t len, void * resblock)\n'
p814
V\u000avoid * sha256_buffer(char *buffer,size_t len,void *resblock)\u000a\u000a{\u000a  void *pvVar1;\u000a  sha256_ctx ctx;\u000a  sha256_ctx local_d0;\u000a  \u000a  sha256_init_ctx(&local_d0);\u000a  sha256_process_bytes(buffer,len,&local_d0);\u000a  pvVar1 = sha256_finish_ctx(&local_d0,resblock);\u000a  return pvVar1;\u000a}\u000a\u000a
p815
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0xb8\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nLEA R12,[RSP + 0x8]\nMOV RDI,R12\nCALL 0x00402d20\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R12\nCALL 0x00405400\nMOV RDI,R12\nMOV RSI,R14\nCALL 0x00402e30\nADD RSP,0xb8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p816
S'41 57\n41 56\n41 54\n53\n48 81 ec b8 00 00 00\n49 89 d6\n49 89 f7\n48 89 fb\n4c 8d 64 24 08\n4c 89 e7\ne8 4c d6 ff ff\n48 89 df\n4c 89 fe\n4c 89 e2\ne8 1e fd ff ff\n4c 89 e7\n4c 89 f6\ne8 43 d7 ff ff\n48 81 c4 b8 00 00 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p817
S'.text:00000000004056b0\n.text:00000000004056b2\n.text:00000000004056b4\n.text:00000000004056b6\n.text:00000000004056b7\n.text:00000000004056be\n.text:00000000004056c1\n.text:00000000004056c4\n.text:00000000004056c7\n.text:00000000004056cc\n.text:00000000004056cf\n.text:00000000004056d4\n.text:00000000004056d7\n.text:00000000004056da\n.text:00000000004056dd\n.text:00000000004056e2\n.text:00000000004056e5\n.text:00000000004056e8\n.text:00000000004056ed\n.text:00000000004056f4\n.text:00000000004056f5\n.text:00000000004056f7\n.text:00000000004056f9\n.text:00000000004056fb\n'
p818
tp819
sS'feof_unlocked'
p820
(S'\n__stdcall feof_unlocked(FILE * __stream)\n'
p821
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint feof_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_feof_unlocked_0060c1d8)();\u000a  return iVar1;\u000a}\u000a\u000a
p822
S'JMP qword ptr [0x0060c1d8]\n'
p823
S'ff 25 d2 aa 20 00\n'
p824
S'.plt:0000000000401700\n'
p825
tp826
sS'quotearg_custom_mem'
p827
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p828
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p829
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x00406c20\n'
p830
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p831
S'.text:0000000000406cb0\n.text:0000000000406cb3\n.text:0000000000406cb6\n.text:0000000000406cb9\n.text:0000000000406cbc\n.text:0000000000406cbe\n.text:0000000000406cc1\n'
p832
tp833
sS'dcngettext'
p834
(S'\n__stdcall dcngettext()\n'
p835
V\u000avoid dcngettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcngettext_0060c198)();\u000a  return;\u000a}\u000a\u000a
p836
S'JMP qword ptr [0x0060c198]\n'
p837
S'ff 25 12 ab 20 00\n'
p838
S'.plt:0000000000401680\n'
p839
tp840
sS'close_stdout'
p841
(S'\n__stdcall close_stdout()\n'
p842
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00402c87;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,0x408ec5,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00402c87:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p843
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x0060c288]\nCALL 0x00407ca0\nTEST EAX,EAX\nJZ 0x00402c87\nCMP byte ptr [0x0060c2f0],0x0\nJZ 0x00402c9c\nCALL 0x004013b0\nCMP dword ptr [RAX],0x20\nJNZ 0x00402c9c\nMOV RDI,qword ptr [0x0060c2c0]\nCALL 0x00407ca0\nTEST EAX,EAX\nJNZ 0x00402ce1\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x408eb5\nMOV EDX,0x5\nCALL 0x00401460\nMOV R14,RAX\nMOV RBX,qword ptr [0x0060c2e8]\nCALL 0x004013b0\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x00402cec\nXOR EDI,EDI\nMOV EDX,0x408ec5\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00401640\nMOV EDI,dword ptr [0x0060c210]\nCALL 0x004013d0\nMOV EDI,dword ptr [0x0060c210]\nCALL 0x004013d0\nMOV RDI,RBX\nCALL 0x00406ba0\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x408ec1\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00401640\nMOV EDI,dword ptr [0x0060c210]\nCALL 0x004013d0\n'
p844
S'55\n41 56\n53\n48 8b 3d 1d 96 20 00\ne8 30 50 00 00\n85 c0\n74 13\n80 3d 75 96 20 00 00\n74 1f\ne8 2e e7 ff ff\n83 38 20\n75 15\n48 8b 3d 32 96 20 00\ne8 0d 50 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe b5 8e 40 00\nba 05 00 00 00\ne8 b3 e7 ff ff\n49 89 c6\n48 8b 1d 31 96 20 00\ne8 f4 e6 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba c5 8e 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 6a e9 ff ff\n8b 3d 34 95 20 00\ne8 ef e6 ff ff\n8b 3d 29 95 20 00\ne8 e4 e6 ff ff\n48 89 df\ne8 ac 3e 00 00\n48 89 c1\n31 ff\nba c1 8e 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 36 e9 ff ff\n8b 3d 00 95 20 00\ne8 bb e6 ff ff\n'
p845
S'.text:0000000000402c60\n.text:0000000000402c61\n.text:0000000000402c63\n.text:0000000000402c64\n.text:0000000000402c6b\n.text:0000000000402c70\n.text:0000000000402c72\n.text:0000000000402c74\n.text:0000000000402c7b\n.text:0000000000402c7d\n.text:0000000000402c82\n.text:0000000000402c85\n.text:0000000000402c87\n.text:0000000000402c8e\n.text:0000000000402c93\n.text:0000000000402c95\n.text:0000000000402c97\n.text:0000000000402c98\n.text:0000000000402c9a\n.text:0000000000402c9b\n.text:0000000000402c9c\n.text:0000000000402c9e\n.text:0000000000402ca3\n.text:0000000000402ca8\n.text:0000000000402cad\n.text:0000000000402cb0\n.text:0000000000402cb7\n.text:0000000000402cbc\n.text:0000000000402cbf\n.text:0000000000402cc1\n.text:0000000000402cc3\n.text:0000000000402cc5\n.text:0000000000402cca\n.text:0000000000402ccc\n.text:0000000000402cce\n.text:0000000000402cd1\n.text:0000000000402cd6\n.text:0000000000402cdc\n.text:0000000000402ce1\n.text:0000000000402ce7\n.text:0000000000402cec\n.text:0000000000402cef\n.text:0000000000402cf4\n.text:0000000000402cf7\n.text:0000000000402cf9\n.text:0000000000402cfe\n.text:0000000000402d00\n.text:0000000000402d02\n.text:0000000000402d05\n.text:0000000000402d0a\n.text:0000000000402d10\n'
p846
tp847
sS'version_etc_ar'
p848
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p849
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p850
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x00407490\nJMP 0x00407120\n'
p851
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p852
S'.text:0000000000407480\n.text:0000000000407487\n.text:0000000000407490\n.text:0000000000407496\n.text:000000000040749a\n.text:000000000040749c\n'
p853
tp854
sS'__ctype_tolower_loc'
p855
(S'\n__stdcall __ctype_tolower_loc()\n'
p856
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_0060c1e0)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p857
S'JMP qword ptr [0x0060c1e0]\n'
p858
S'ff 25 ca aa 20 00\n'
p859
S'.plt:0000000000401710\n'
p860
tp861
sS'set_uint32'
p862
(S'\n__stdcall set_uint32(char * cp)\n'
p863
V\u000avoid set_uint32(char *cp)\u000a\u000a{\u000a  undefined4 in_ESI;\u000a  \u000a  *(undefined4 *)cp = in_ESI;\u000a  return;\u000a}\u000a\u000a
p864
S'MOV dword ptr [RDI],ESI\nRET\n'
p865
S'89 37\nc3\n'
p866
S'.text:0000000000402de0\n.text:0000000000402de2\n'
p867
tp868
sS'rpl_calloc'
p869
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p870
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_0060c100)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p871
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x0040783b\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x00407840\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x00407840\nPUSH RAX\nCALL 0x004013b0\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401550\n'
p872
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 7f 9b ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 05 9d ff ff\n'
p873
S'.text:0000000000407800\n.text:0000000000407803\n.text:0000000000407808\n.text:000000000040780a\n.text:000000000040780d\n.text:0000000000407812\n.text:0000000000407814\n.text:0000000000407817\n.text:000000000040781b\n.text:000000000040781d\n.text:0000000000407820\n.text:0000000000407823\n.text:0000000000407826\n.text:0000000000407829\n.text:000000000040782b\n.text:000000000040782c\n.text:0000000000407831\n.text:0000000000407837\n.text:0000000000407839\n.text:000000000040783a\n.text:000000000040783b\n.text:0000000000407840\n.text:0000000000407843\n.text:0000000000407846\n'
p874
tp875
sS'memset'
p876
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p877
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_0060c0c8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p878
S'JMP qword ptr [0x0060c0c8]\n'
p879
S'ff 25 e2 ab 20 00\n'
p880
S'.plt:00000000004014e0\n'
p881
tp882
sS'sha224_stream'
p883
(S'\n__stdcall sha224_stream(FILE * stream, void * resblock)\n'
p884
V\u000aint sha224_stream(FILE *stream,void *resblock)\u000a\u000a{\u000a  int iVar1;\u000a  void *__ptr;\u000a  size_t sVar2;\u000a  size_t len;\u000a  sha256_ctx local_e0;\u000a  \u000a  __ptr = malloc(0x8048);\u000a  if (__ptr == (void *)0x0) {\u000a    return 1;\u000a  }\u000a  sha224_init_ctx(&local_e0);\u000a  do {\u000a    len = 0;\u000a    while( true ) {\u000a      sVar2 = fread_unlocked((void *)((long)__ptr + len),1,0x8000 - len,(FILE *)stream);\u000a      len = len + sVar2;\u000a      if (len == 0x8000) break;\u000a      if (sVar2 == 0) {\u000a        iVar1 = ferror_unlocked((FILE *)stream);\u000a        if (iVar1 != 0) {\u000a          free(__ptr);\u000a          return 1;\u000a        }\u000a        goto LAB_0040566e;\u000a      }\u000a      iVar1 = feof_unlocked((FILE *)stream);\u000a      if (iVar1 != 0) {\u000aLAB_0040566e:\u000a        if (len != 0) {\u000a          sha256_process_bytes(__ptr,len,&local_e0);\u000a        }\u000a        sha224_finish_ctx(&local_e0,resblock);\u000a        free(__ptr);\u000a        return 0;\u000a      }\u000a    }\u000a    sha256_process_block(__ptr,0x8000,&local_e0);\u000a  } while( true );\u000a}\u000a\u000a
p885
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xb8\nMOV R14,RSI\nMOV RBP,RDI\nMOV EDI,0x8048\nCALL 0x004015a0\nMOV R13,RAX\nMOV R15D,0x1\nTEST R13,R13\nJZ 0x0040569b\nLEA R12,[RSP + 0x8]\nMOV RDI,R12\nCALL 0x00402d60\nJMP 0x00405620\nTEST RAX,RAX\nJZ 0x00405658\nMOV RDI,RBP\nCALL 0x00401700\nTEST EAX,EAX\nJZ 0x00405630\nJMP 0x0040566e\nMOV ESI,0x8000\nMOV RDI,R13\nMOV RDX,R12\nCALL 0x00403080\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nLEA RDI,[R13 + RBX*0x1]\nMOV EDX,0x8000\nSUB RDX,RBX\nMOV ESI,0x1\nMOV RCX,RBP\nCALL 0x00401420\nADD RBX,RAX\nCMP RBX,0x8000\nJNZ 0x004055f0\nJMP 0x00405610\nMOV RDI,RBP\nCALL 0x00401540\nTEST EAX,EAX\nJZ 0x0040566e\nMOV RDI,R13\nCALL 0x00401390\nJMP 0x0040569b\nTEST RBX,RBX\nJZ 0x00405683\nLEA RDX,[RSP + 0x8]\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x00405400\nLEA RDI,[RSP + 0x8]\nMOV RSI,R14\nCALL 0x00402f40\nMOV RDI,R13\nCALL 0x00401390\nXOR R15D,R15D\nMOV EAX,R15D\nADD RSP,0xb8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p886
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec b8 00 00 00\n49 89 f6\n48 89 fd\nbf 48 80 00 00\ne8 df bf ff ff\n49 89 c5\n41 bf 01 00 00 00\n4d 85 ed\n0f 84 c8 00 00 00\n4c 8d 64 24 08\n4c 89 e7\ne8 80 d7 ff ff\neb 3e\n48 85 c0\n74 63\n48 89 ef\ne8 03 c1 ff ff\n85 c0\n74 2f\neb 6b\nbe 00 80 00 00\n4c 89 ef\n4c 89 e2\ne8 60 da ff ff\n31 db\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8d 7c 1d 00\nba 00 80 00 00\n48 29 da\nbe 01 00 00 00\n48 89 e9\ne8 d6 bd ff ff\n48 01 c3\n48 81 fb 00 80 00 00\n75 9a\neb b8\n48 89 ef\ne8 e0 be ff ff\n85 c0\n74 0a\n4c 89 ef\ne8 24 bd ff ff\neb 2d\n48 85 db\n74 10\n48 8d 54 24 08\n4c 89 ef\n48 89 de\ne8 7d fd ff ff\n48 8d 7c 24 08\n4c 89 f6\ne8 b0 d8 ff ff\n4c 89 ef\ne8 f8 bc ff ff\n45 31 ff\n44 89 f8\n48 81 c4 b8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p887
S'.text:00000000004055a0\n.text:00000000004055a1\n.text:00000000004055a3\n.text:00000000004055a5\n.text:00000000004055a7\n.text:00000000004055a9\n.text:00000000004055aa\n.text:00000000004055b1\n.text:00000000004055b4\n.text:00000000004055b7\n.text:00000000004055bc\n.text:00000000004055c1\n.text:00000000004055c4\n.text:00000000004055ca\n.text:00000000004055cd\n.text:00000000004055d3\n.text:00000000004055d8\n.text:00000000004055db\n.text:00000000004055e0\n.text:00000000004055f0\n.text:00000000004055f3\n.text:00000000004055f5\n.text:00000000004055f8\n.text:00000000004055fd\n.text:00000000004055ff\n.text:0000000000405601\n.text:0000000000405610\n.text:0000000000405615\n.text:0000000000405618\n.text:000000000040561b\n.text:0000000000405620\n.text:0000000000405622\n.text:0000000000405630\n.text:0000000000405635\n.text:000000000040563a\n.text:000000000040563d\n.text:0000000000405642\n.text:0000000000405645\n.text:000000000040564a\n.text:000000000040564d\n.text:0000000000405654\n.text:0000000000405656\n.text:0000000000405658\n.text:000000000040565b\n.text:0000000000405660\n.text:0000000000405662\n.text:0000000000405664\n.text:0000000000405667\n.text:000000000040566c\n.text:000000000040566e\n.text:0000000000405671\n.text:0000000000405673\n.text:0000000000405678\n.text:000000000040567b\n.text:000000000040567e\n.text:0000000000405683\n.text:0000000000405688\n.text:000000000040568b\n.text:0000000000405690\n.text:0000000000405693\n.text:0000000000405698\n.text:000000000040569b\n.text:000000000040569e\n.text:00000000004056a5\n.text:00000000004056a6\n.text:00000000004056a8\n.text:00000000004056aa\n.text:00000000004056ac\n.text:00000000004056ae\n.text:00000000004056af\n'
p888
tp889
sS'c_isxdigit'
p890
(S'\n__stdcall c_isxdigit()\n'
p891
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p892
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x00407c7b\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p893
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p894
S'.text:0000000000407c60\n.text:0000000000407c63\n.text:0000000000407c66\n.text:0000000000407c68\n.text:0000000000407c72\n.text:0000000000407c74\n.text:0000000000407c77\n.text:0000000000407c7a\n.text:0000000000407c7b\n.text:0000000000407c7d\n'
p895
tp896
sS'__libc_csu_fini'
p897
(S'\n__stdcall __libc_csu_fini()\n'
p898
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p899
S'RET\n'
p900
S'f3 c3\n'
p901
S'.text:00000000004080b0\n'
p902
tp903
sS'getc_unlocked'
p904
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p905
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_0060c058)();\u000a  return iVar1;\u000a}\u000a\u000a
p906
S'JMP qword ptr [0x0060c058]\n'
p907
S'ff 25 52 ac 20 00\n'
p908
S'.plt:0000000000401400\n'
p909
tp910
sS'abort'
p911
(S'\n__stdcall abort()\n'
p912
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_0060c028)();\u000a  return;\u000a}\u000a\u000a
p913
S'JMP qword ptr [0x0060c028]\n'
p914
S'ff 25 82 ac 20 00\n'
p915
S'.plt:00000000004013a0\n'
p916
tp917
sS'c_isascii'
p918
(S'\n__stdcall c_isascii()\n'
p919
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p920
S'CMP EDI,0x80\nSETC AL\nRET\n'
p921
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p922
S'.text:0000000000407ba0\n.text:0000000000407ba6\n.text:0000000000407ba9\n'
p923
tp924
sS'sha256_finish_ctx'
p925
(S'\n__stdcall sha256_finish_ctx(sha256_ctx * ctx, void * resbuf)\n'
p926
V\u000avoid * sha256_finish_ctx(sha256_ctx *ctx,void *resbuf)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  sha256_conclude_ctx(ctx);\u000a  pvVar1 = sha256_read_ctx(ctx,resbuf);\u000a  return pvVar1;\u000a}\u000a\u000a
p927
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nCALL 0x00402e60\nMOV RDI,RBX\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402da0\n'
p928
S'41 56\n53\n50\n49 89 f6\n48 89 fb\ne8 21 00 00 00\n48 89 df\n4c 89 f6\n48 83 c4 08\n5b\n41 5e\ne9 4f ff ff ff\n'
p929
S'.text:0000000000402e30\n.text:0000000000402e32\n.text:0000000000402e33\n.text:0000000000402e34\n.text:0000000000402e37\n.text:0000000000402e3a\n.text:0000000000402e3f\n.text:0000000000402e42\n.text:0000000000402e45\n.text:0000000000402e49\n.text:0000000000402e4a\n.text:0000000000402e4c\n'
p930
tp931
sS'dup_safer'
p932
(S'\n__stdcall dup_safer()\n'
p933
V\u000aint dup_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0,3);\u000a  return iVar1;\u000a}\u000a\u000a
p934
S'XOR ESI,ESI\nMOV EDX,0x3\nXOR EAX,EAX\nJMP 0x004078d0\n'
p935
S'31 f6\nba 03 00 00 00\n31 c0\ne9 b2 07 00 00\n'
p936
S'.text:0000000000407110\n.text:0000000000407112\n.text:0000000000407117\n.text:0000000000407119\n'
p937
tp938
sS'select_plural'
p939
(S'\n__stdcall select_plural(uintmax_t n)\n'
p940
V\u000aulong select_plural(uintmax_t n)\u000a\u000a{\u000a  return n;\u000a}\u000a\u000a
p941
S'MOV RAX,RDI\nRET\n'
p942
S'48 89 f8\nc3\n'
p943
S'.text:0000000000402af0\n.text:0000000000402af3\n'
p944
tp945
sS'version_etc'
p946
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p947
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p948
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00407552\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x004074b0\nADD RSP,0xd8\nRET\n'
p949
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p950
S'.text:0000000000407510\n.text:0000000000407517\n.text:0000000000407519\n.text:000000000040751b\n.text:0000000000407520\n.text:0000000000407525\n.text:000000000040752a\n.text:0000000000407532\n.text:000000000040753a\n.text:0000000000407542\n.text:000000000040754a\n.text:0000000000407552\n.text:0000000000407557\n.text:000000000040755c\n.text:0000000000407561\n.text:0000000000407566\n.text:000000000040756e\n.text:0000000000407573\n.text:000000000040757b\n.text:0000000000407582\n.text:0000000000407585\n.text:000000000040758a\n.text:0000000000407591\n'
p951
tp952
sS'setvbuf'
p953
(S'\n__stdcall setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n'
p954
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_setvbuf_0060c170)();\u000a  return iVar1;\u000a}\u000a\u000a
p955
S'JMP qword ptr [0x0060c170]\n'
p956
S'ff 25 3a ab 20 00\n'
p957
S'.plt:0000000000401630\n'
p958
tp959
sS'posix_fadvise'
p960
(S'\n__stdcall posix_fadvise(int __fd, __off_t __offset, __off_t __len, int __advise)\n'
p961
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_posix_fadvise_0060c0e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p962
S'JMP qword ptr [0x0060c0e0]\n'
p963
S'ff 25 ca ab 20 00\n'
p964
S'.plt:0000000000401510\n'
p965
tp966
sS'__ctype_b_loc'
p967
(S'\n__stdcall __ctype_b_loc()\n'
p968
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0060c1e8)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p969
S'JMP qword ptr [0x0060c1e8]\n'
p970
S'ff 25 c2 aa 20 00\n'
p971
S'.plt:0000000000401720\n'
p972
tp973
sS'lseek'
p974
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p975
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_0060c0c0)();\u000a  return _Var1;\u000a}\u000a\u000a
p976
S'JMP qword ptr [0x0060c0c0]\n'
p977
S'ff 25 ea ab 20 00\n'
p978
S'.plt:00000000004014d0\n'
p979
tp980
sS'fdadvise'
p981
(S'\n__stdcall fdadvise(int __fd, __off_t __offset, __off_t __len, int __advise)\n'
p982
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fdadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_posix_fadvise_0060c0e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p983
S'JMP 0x00401510\n'
p984
S'e9 bb bd ff ff\n'
p985
S'.text:0000000000405750\n'
p986
tp987
sS'quotearg'
p988
(S'\n__stdcall quotearg(char * arg)\n'
p989
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p990
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00406800\n'
p991
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p992
S'.text:00000000004069e0\n.text:00000000004069e3\n.text:00000000004069e5\n.text:00000000004069e8\n'
p993
tp994
sS'_start'
p995
(S'\n__stdcall _start()\n'
p996
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_0060bff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p997
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4080b0\nMOV RCX,0x408040\nMOV RDI,0x401b40\nCALL qword ptr [0x0060bff0]\nHLT\n'
p998
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 b0 80 40 00\n48 c7 c1 40 80 40 00\n48 c7 c7 40 1b 40 00\nff 15 96 a8 20 00\nf4\n'
p999
S'.text:0000000000401730\n.text:0000000000401732\n.text:0000000000401735\n.text:0000000000401736\n.text:0000000000401739\n.text:000000000040173d\n.text:000000000040173e\n.text:000000000040173f\n.text:0000000000401746\n.text:000000000040174d\n.text:0000000000401754\n.text:000000000040175a\n'
p1000
tp1001
sS'c_iscntrl'
p1002
(S'\n__stdcall c_iscntrl()\n'
p1003
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1004
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x00407bc8\nRET\nCMP EDI,0x7f\nJZ 0x00407bc7\nXOR EAX,EAX\nRET\n'
p1005
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1006
S'.text:0000000000407bc0\n.text:0000000000407bc2\n.text:0000000000407bc5\n.text:0000000000407bc7\n.text:0000000000407bc8\n.text:0000000000407bcb\n.text:0000000000407bcd\n.text:0000000000407bcf\n'
p1007
tp1008
sS'bsd_split_3'
p1009
(S'\n__stdcall bsd_split_3(char * s, size_t s_len, uchar * * hex_digest, char * * file_name)\n'
p1010
V\u000a_Bool bsd_split_3(char *s,size_t s_len,uchar **hex_digest,char **file_name)\u000a\u000a{\u000a  uchar uVar1;\u000a  char *pcVar2;\u000a  uchar *puVar3;\u000a  size_t sVar4;\u000a  char in_R8B;\u000a  \u000a  if (s_len != 0) {\u000a    do {\u000a      sVar4 = s_len;\u000a      s_len = sVar4 - 1;\u000a      if (sVar4 == 1) break;\u000a    } while (s[sVar4 - 1] != ')');\u000a    if ((s[sVar4 - 1] == ')') &&\u000a       ((*file_name = s, in_R8B == 0 || (pcVar2 = filename_unescape(s,s_len), pcVar2 != (char *)0x0)\u000a        ))) {\u000a      puVar3 = (uchar *)(s + sVar4 + 1);\u000a      s[s_len] = 0;\u000a      while ((uVar1 = puVar3[-1], uVar1 == '\u005ct' || (uVar1 == ' '))) {\u000a        puVar3 = puVar3 + 1;\u000a      }\u000a      if (uVar1 == '=') {\u000a        while ((*puVar3 == ' ' || (*puVar3 == '\u005ct'))) {\u000a          puVar3 = puVar3 + 1;\u000a        }\u000a        *hex_digest = puVar3;\u000a        return true;\u000a      }\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1011
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV R15,RDI\nTEST RBX,RBX\nJZ 0x00402b86\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EAX,byte ptr [R15 + RBX*0x1 + -0x1]\nCMP AL,0x29\nSETZ DL\nCMP RBX,0x1\nLEA RBX,[RBX + -0x1]\nJZ 0x00402b39\nTEST DL,DL\nJZ 0x00402b20\nCMP AL,0x29\nJNZ 0x00402b86\nMOV qword ptr [RCX],R15\nTEST R8B,R8B\nJZ 0x00402b55\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00402bb0\nTEST RAX,RAX\nJZ 0x00402b86\nLEA RCX,[R15 + RBX*0x1]\nLEA RAX,[R15 + RBX*0x1 + 0x2]\nMOV byte ptr [RCX],0x0\nJMP 0x00402b73\nINC RAX\nMOVZX ECX,byte ptr [RAX + -0x1]\nCMP CL,0x9\nJZ 0x00402b70\nCMP CL,0x20\nJZ 0x00402b70\nCMP CL,0x3d\nJZ 0x00402b93\nXOR EAX,EAX\nPOP RBX\nPOP R14\nPOP R15\nRET\nINC RAX\nMOVZX ECX,byte ptr [RAX]\nCMP CL,0x20\nJZ 0x00402b90\nCMP CL,0x9\nJZ 0x00402b90\nMOV qword ptr [R14],RAX\nMOV AL,0x1\nJMP 0x00402b88\n'
p1012
S'41 57\n41 56\n53\n49 89 d6\n48 89 f3\n49 89 ff\n48 85 db\n74 73\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n41 0f b6 44 1f ff\n3c 29\n0f 94 c2\n48 83 fb 01\n48 8d 5b ff\n74 04\n84 d2\n74 e7\n3c 29\n75 49\n4c 89 39\n45 84 c0\n74 10\n4c 89 ff\n48 89 de\ne8 60 00 00 00\n48 85 c0\n74 31\n49 8d 0c 1f\n49 8d 44 1f 02\nc6 01 00\neb 10\n48 ff c0\n0f b6 48 ff\n80 f9 09\n74 f4\n80 f9 20\n74 ef\n80 f9 3d\n74 0d\n31 c0\n5b\n41 5e\n41 5f\nc3\n48 ff c0\n0f b6 08\n80 f9 20\n74 f5\n80 f9 09\n74 f0\n49 89 06\nb0 01\neb e1\n'
p1013
S'.text:0000000000402b00\n.text:0000000000402b02\n.text:0000000000402b04\n.text:0000000000402b05\n.text:0000000000402b08\n.text:0000000000402b0b\n.text:0000000000402b0e\n.text:0000000000402b11\n.text:0000000000402b13\n.text:0000000000402b20\n.text:0000000000402b26\n.text:0000000000402b28\n.text:0000000000402b2b\n.text:0000000000402b2f\n.text:0000000000402b33\n.text:0000000000402b35\n.text:0000000000402b37\n.text:0000000000402b39\n.text:0000000000402b3b\n.text:0000000000402b3d\n.text:0000000000402b40\n.text:0000000000402b43\n.text:0000000000402b45\n.text:0000000000402b48\n.text:0000000000402b4b\n.text:0000000000402b50\n.text:0000000000402b53\n.text:0000000000402b55\n.text:0000000000402b59\n.text:0000000000402b5e\n.text:0000000000402b61\n.text:0000000000402b70\n.text:0000000000402b73\n.text:0000000000402b77\n.text:0000000000402b7a\n.text:0000000000402b7c\n.text:0000000000402b7f\n.text:0000000000402b81\n.text:0000000000402b84\n.text:0000000000402b86\n.text:0000000000402b88\n.text:0000000000402b89\n.text:0000000000402b8b\n.text:0000000000402b8d\n.text:0000000000402b90\n.text:0000000000402b93\n.text:0000000000402b96\n.text:0000000000402b99\n.text:0000000000402b9b\n.text:0000000000402b9e\n.text:0000000000402ba0\n.text:0000000000402ba3\n.text:0000000000402ba5\n'
p1014
tp1015
sS'c_isblank'
p1016
(S'\n__stdcall c_isblank()\n'
p1017
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1018
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1019
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1020
S'.text:0000000000407bb0\n.text:0000000000407bb3\n.text:0000000000407bb6\n.text:0000000000407bb9\n.text:0000000000407bbc\n.text:0000000000407bbe\n'
p1021
tp1022
sS'quotearg_n_mem'
p1023
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p1024
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p1025
S'MOV ECX,0x60c300\nJMP 0x00406810\n'
p1026
S'b9 00 c3 60 00\ne9 36 fe ff ff\n'
p1027
S'.text:00000000004069d0\n.text:00000000004069d5\n'
p1028
tp1029
sS'atexit'
p1030
(S'\n__stdcall atexit(__func * __func)\n'
p1031
V\u000a/* WARNING: Removing unreachable block (ram,0x004080e0) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_0060c1a0)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1032
S'MOV RAX,0x60c1f8\nTEST RAX,RAX\nJZ 0x004080e0\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x00401690\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x00401690\n'
p1033
S'48 c7 c0 f8 c1 60 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 ba 95 ff ff\n31 d2\n31 f6\ne9 a7 95 ff ff\n'
p1034
S'.text:00000000004080c0\n.text:00000000004080c7\n.text:00000000004080ca\n.text:00000000004080cc\n.text:00000000004080cf\n.text:00000000004080d1\n.text:00000000004080e0\n.text:00000000004080e2\n.text:00000000004080e4\n'
p1035
tp1036
sS'__printf_chk'
p1037
(S'\n__stdcall __printf_chk()\n'
p1038
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_0060c168)();\u000a  return;\u000a}\u000a\u000a
p1039
S'JMP qword ptr [0x0060c168]\n'
p1040
S'ff 25 42 ab 20 00\n'
p1041
S'.plt:0000000000401620\n'
p1042
tp1043
sS'fdopen'
p1044
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1045
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0060c158)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1046
S'JMP qword ptr [0x0060c158]\n'
p1047
S'ff 25 52 ab 20 00\n'
p1048
S'.plt:0000000000401600\n'
p1049
tp1050
sS'sha256_process_block'
p1051
(S'\n__stdcall sha256_process_block(void * buffer, size_t len, sha256_ctx * ctx)\n'
p1052
V\u000a/* WARNING: Variable defined which should be unmapped: x */\u000a\u000avoid sha256_process_block(void *buffer,size_t len,sha256_ctx *ctx)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  void *pvVar6;\u000a  uint uVar7;\u000a  long lVar8;\u000a  uint32_t uVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  uint uVar12;\u000a  uint uVar13;\u000a  uint uVar14;\u000a  uint32_t uVar15;\u000a  uint uVar16;\u000a  uint uVar17;\u000a  uint32_t uVar18;\u000a  uint uVar19;\u000a  uint uVar20;\u000a  uint32_t uVar21;\u000a  uint uVar22;\u000a  uint32_t uVar23;\u000a  uint uVar24;\u000a  uint uVar25;\u000a  uint32_t uVar26;\u000a  uint uVar27;\u000a  uint uVar28;\u000a  int iVar29;\u000a  uint uVar30;\u000a  uint uVar31;\u000a  uint uVar32;\u000a  uint32_t uVar33;\u000a  uint uVar34;\u000a  uint uVar35;\u000a  uint uVar36;\u000a  uint32_t uVar37;\u000a  uint local_98 [4];\u000a  uint local_88;\u000a  uint local_84;\u000a  uint local_80;\u000a  uint local_7c;\u000a  uint local_78;\u000a  uint local_74;\u000a  uint local_70;\u000a  uint local_6c;\u000a  uint32_t x [16];\u000a  \u000a  pvVar6 = (void *)((len & 0xfffffffffffffffc) + (long)buffer);\u000a  uVar15 = ctx->state[0];\u000a  uVar9 = ctx->state[1];\u000a  uVar18 = ctx->state[2];\u000a  uVar26 = ctx->state[3];\u000a  uVar23 = ctx->state[4];\u000a  uVar37 = ctx->state[5];\u000a  uVar21 = ctx->state[6];\u000a  uVar33 = ctx->state[7];\u000a  uVar4 = ctx->total[0];\u000a  ctx->total[0] = uVar4 + (uint)len;\u000a  ctx->total[1] = ctx->total[1] + (int)(len >> 0x20) + (uint)CARRY4(uVar4,(uint)len);\u000a  if (buffer < pvVar6) {\u000a    do {\u000a      lVar8 = 0;\u000a      do {\u000a        uVar4 = *(uint *)((long)buffer + lVar8 * 4);\u000a        local_98[lVar8] =\u000a             uVar4 >> 0x18 | (uVar4 & 0xff0000) >> 8 | (uVar4 & 0xff00) << 8 | uVar4 << 0x18;\u000a        lVar8 = lVar8 + 1;\u000a      } while (lVar8 != 0x10);\u000a      iVar29 = uVar33 + ((uVar23 << 7 | uVar23 >> 0x19) ^\u000a                        (uVar23 << 0x15 | uVar23 >> 0xb) ^ (uVar23 << 0x1a | uVar23 >> 6)) +\u000a               ((uVar21 ^ uVar37) & uVar23 ^ uVar21);\u000a      uVar4 = uVar26 + 0x428a2f98 + iVar29 + local_98[0];\u000a      uVar7 = local_98[0] + 0x428a2f98 + iVar29 +\u000a              ((uVar15 | uVar9) & uVar18 | uVar15 & uVar9) +\u000a              ((uVar15 << 10 | uVar15 >> 0x16) ^\u000a              (uVar15 << 0x13 | uVar15 >> 0xd) ^ (uVar15 << 0x1e | uVar15 >> 2));\u000a      uVar1 = (uVar4 * 0x80 | uVar4 >> 0x19) ^\u000a              (uVar4 * 0x200000 | uVar4 >> 0xb) ^ (uVar4 * 0x4000000 | uVar4 >> 6);\u000a      iVar29 = uVar21 + local_98[1] + ((uVar37 ^ uVar23) & uVar4 ^ uVar37);\u000a      uVar5 = uVar18 + 0x71374491 + iVar29 + uVar1;\u000a      uVar24 = uVar1 + 0x71374491 + iVar29 +\u000a               ((uVar7 | uVar15) & uVar9 | uVar7 & uVar15) +\u000a               ((uVar7 * 0x400 | uVar7 >> 0x16) ^\u000a               (uVar7 * 0x80000 | uVar7 >> 0xd) ^ (uVar7 * 0x40000000 | uVar7 >> 2));\u000a      uVar2 = (uVar5 * 0x80 | uVar5 >> 0x19) ^\u000a              (uVar5 * 0x200000 | uVar5 >> 0xb) ^ (uVar5 * 0x4000000 | uVar5 >> 6);\u000a      iVar29 = uVar37 + local_98[2] + ((uVar4 ^ uVar23) & uVar5 ^ uVar23);\u000a      uVar1 = uVar9 + 0xb5c0fbcf + iVar29 + uVar2;\u000a      uVar19 = uVar2 + 0xb5c0fbcf + iVar29 +\u000a               ((uVar24 | uVar7) & uVar15 | uVar24 & uVar7) +\u000a               ((uVar24 * 0x400 | uVar24 >> 0x16) ^\u000a               (uVar24 * 0x80000 | uVar24 >> 0xd) ^ (uVar24 * 0x40000000 | uVar24 >> 2));\u000a      uVar3 = (uVar1 * 0x80 | uVar1 >> 0x19) ^\u000a              (uVar1 * 0x200000 | uVar1 >> 0xb) ^ (uVar1 * 0x4000000 | uVar1 >> 6);\u000a      iVar29 = uVar23 + local_98[3] + ((uVar5 ^ uVar4) & uVar1 ^ uVar4);\u000a      uVar2 = uVar15 + 0xe9b5dba5 + iVar29 + uVar3;\u000a      uVar27 = uVar3 + 0xe9b5dba5 + iVar29 +\u000a               ((uVar19 | uVar24) & uVar7 | uVar19 & uVar24) +\u000a               ((uVar19 * 0x400 | uVar19 >> 0x16) ^\u000a               (uVar19 * 0x80000 | uVar19 >> 0xd) ^ (uVar19 * 0x40000000 | uVar19 >> 2));\u000a      iVar29 = ((uVar2 * 0x80 | uVar2 >> 0x19) ^\u000a               (uVar2 * 0x200000 | uVar2 >> 0xb) ^ (uVar2 * 0x4000000 | uVar2 >> 6)) + 0x3956c25b +\u000a               uVar4 + local_88 + ((uVar1 ^ uVar5) & uVar2 ^ uVar5);\u000a      uVar7 = uVar7 + iVar29;\u000a      uVar3 = ((uVar27 | uVar19) & uVar24 | uVar27 & uVar19) +\u000a              ((uVar27 * 0x400 | uVar27 >> 0x16) ^\u000a              (uVar27 * 0x80000 | uVar27 >> 0xd) ^ (uVar27 * 0x40000000 | uVar27 >> 2)) + iVar29;\u000a      iVar29 = ((uVar7 * 0x80 | uVar7 >> 0x19) ^\u000a               (uVar7 * 0x200000 | uVar7 >> 0xb) ^ (uVar7 * 0x4000000 | uVar7 >> 6)) + 0x59f111f1 +\u000a               uVar5 + local_84 + ((uVar2 ^ uVar1) & uVar7 ^ uVar1);\u000a      uVar24 = uVar24 + iVar29;\u000a      uVar16 = ((uVar3 | uVar27) & uVar19 | uVar3 & uVar27) +\u000a               ((uVar3 * 0x400 | uVar3 >> 0x16) ^\u000a               (uVar3 * 0x80000 | uVar3 >> 0xd) ^ (uVar3 * 0x40000000 | uVar3 >> 2)) + iVar29;\u000a      iVar29 = ((uVar24 * 0x80 | uVar24 >> 0x19) ^\u000a               (uVar24 * 0x200000 | uVar24 >> 0xb) ^ (uVar24 * 0x4000000 | uVar24 >> 6)) +\u000a               0x923f82a4 + uVar1 + local_80 + ((uVar7 ^ uVar2) & uVar24 ^ uVar2);\u000a      uVar19 = uVar19 + iVar29;\u000a      uVar1 = ((uVar16 | uVar3) & uVar27 | uVar16 & uVar3) +\u000a              ((uVar16 * 0x400 | uVar16 >> 0x16) ^\u000a              (uVar16 * 0x80000 | uVar16 >> 0xd) ^ (uVar16 * 0x40000000 | uVar16 >> 2)) + iVar29;\u000a      iVar29 = ((uVar19 * 0x80 | uVar19 >> 0x19) ^\u000a               (uVar19 * 0x200000 | uVar19 >> 0xb) ^ (uVar19 * 0x4000000 | uVar19 >> 6)) +\u000a               0xab1c5ed5 + uVar2 + local_7c + ((uVar24 ^ uVar7) & uVar19 ^ uVar7);\u000a      uVar27 = uVar27 + iVar29;\u000a      uVar30 = ((uVar1 | uVar16) & uVar3 | uVar1 & uVar16) +\u000a               ((uVar1 * 0x400 | uVar1 >> 0x16) ^\u000a               (uVar1 * 0x80000 | uVar1 >> 0xd) ^ (uVar1 * 0x40000000 | uVar1 >> 2)) + iVar29;\u000a      iVar29 = ((uVar27 * 0x80 | uVar27 >> 0x19) ^\u000a               (uVar27 * 0x200000 | uVar27 >> 0xb) ^ (uVar27 * 0x4000000 | uVar27 >> 6)) +\u000a               0xd807aa98 + uVar7 + local_78 + ((uVar19 ^ uVar24) & uVar27 ^ uVar24);\u000a      uVar3 = uVar3 + iVar29;\u000a      uVar34 = ((uVar30 | uVar1) & uVar16 | uVar30 & uVar1) +\u000a               ((uVar30 * 0x400 | uVar30 >> 0x16) ^\u000a               (uVar30 * 0x80000 | uVar30 >> 0xd) ^ (uVar30 * 0x40000000 | uVar30 >> 2)) + iVar29;\u000a      iVar29 = ((uVar3 * 0x80 | uVar3 >> 0x19) ^\u000a               (uVar3 * 0x200000 | uVar3 >> 0xb) ^ (uVar3 * 0x4000000 | uVar3 >> 6)) + 0x12835b01 +\u000a               uVar24 + local_74 + ((uVar27 ^ uVar19) & uVar3 ^ uVar19);\u000a      uVar16 = uVar16 + iVar29;\u000a      uVar5 = ((uVar34 | uVar30) & uVar1 | uVar34 & uVar30) +\u000a              ((uVar34 * 0x400 | uVar34 >> 0x16) ^\u000a              (uVar34 * 0x80000 | uVar34 >> 0xd) ^ (uVar34 * 0x40000000 | uVar34 >> 2)) + iVar29;\u000a      iVar29 = ((uVar16 * 0x80 | uVar16 >> 0x19) ^\u000a               (uVar16 * 0x200000 | uVar16 >> 0xb) ^ (uVar16 * 0x4000000 | uVar16 >> 6)) +\u000a               0x243185be + uVar19 + local_70 + ((uVar3 ^ uVar27) & uVar16 ^ uVar27);\u000a      uVar1 = uVar1 + iVar29;\u000a      uVar19 = ((uVar5 | uVar34) & uVar30 | uVar5 & uVar34) +\u000a               ((uVar5 * 0x400 | uVar5 >> 0x16) ^\u000a               (uVar5 * 0x80000 | uVar5 >> 0xd) ^ (uVar5 * 0x40000000 | uVar5 >> 2)) + iVar29;\u000a      iVar29 = ((uVar1 * 0x80 | uVar1 >> 0x19) ^\u000a               (uVar1 * 0x200000 | uVar1 >> 0xb) ^ (uVar1 * 0x4000000 | uVar1 >> 6)) + 0x550c7dc3 +\u000a               uVar27 + local_6c + ((uVar16 ^ uVar3) & uVar1 ^ uVar3);\u000a      uVar30 = uVar30 + iVar29;\u000a      uVar4 = ((uVar19 | uVar5) & uVar34 | uVar19 & uVar5) +\u000a              ((uVar19 * 0x400 | uVar19 >> 0x16) ^\u000a              (uVar19 * 0x80000 | uVar19 >> 0xd) ^ (uVar19 * 0x40000000 | uVar19 >> 2)) + iVar29;\u000a      iVar29 = ((uVar30 * 0x80 | uVar30 >> 0x19) ^\u000a               (uVar30 * 0x200000 | uVar30 >> 0xb) ^ (uVar30 * 0x4000000 | uVar30 >> 6)) +\u000a               0x72be5d74 + uVar3 + x[0] + ((uVar1 ^ uVar16) & uVar30 ^ uVar16);\u000a      uVar34 = uVar34 + iVar29;\u000a      uVar7 = ((uVar4 | uVar19) & uVar5 | uVar4 & uVar19) +\u000a              ((uVar4 * 0x400 | uVar4 >> 0x16) ^\u000a              (uVar4 * 0x80000 | uVar4 >> 0xd) ^ (uVar4 * 0x40000000 | uVar4 >> 2)) + iVar29;\u000a      iVar29 = ((uVar34 * 0x80 | uVar34 >> 0x19) ^\u000a               (uVar34 * 0x200000 | uVar34 >> 0xb) ^ (uVar34 * 0x4000000 | uVar34 >> 6)) +\u000a               0x80deb1fe + uVar16 + x[1] + ((uVar30 ^ uVar1) & uVar34 ^ uVar1);\u000a      uVar5 = uVar5 + iVar29;\u000a      uVar16 = ((uVar7 | uVar4) & uVar19 | uVar7 & uVar4) +\u000a               ((uVar7 * 0x400 | uVar7 >> 0x16) ^\u000a               (uVar7 * 0x80000 | uVar7 >> 0xd) ^ (uVar7 * 0x40000000 | uVar7 >> 2)) + iVar29;\u000a      iVar29 = ((uVar5 * 0x80 | uVar5 >> 0x19) ^\u000a               (uVar5 * 0x200000 | uVar5 >> 0xb) ^ (uVar5 * 0x4000000 | uVar5 >> 6)) + 0x9bdc06a7 +\u000a               uVar1 + x[2] + ((uVar34 ^ uVar30) & uVar5 ^ uVar30);\u000a      uVar19 = uVar19 + iVar29;\u000a      uVar2 = ((uVar16 | uVar7) & uVar4 | uVar16 & uVar7) +\u000a              ((uVar16 * 0x400 | uVar16 >> 0x16) ^\u000a              (uVar16 * 0x80000 | uVar16 >> 0xd) ^ (uVar16 * 0x40000000 | uVar16 >> 2)) + iVar29;\u000a      iVar29 = ((uVar19 * 0x80 | uVar19 >> 0x19) ^\u000a               (uVar19 * 0x200000 | uVar19 >> 0xb) ^ (uVar19 * 0x4000000 | uVar19 >> 6)) +\u000a               0xc19bf174 + uVar30 + x[3] + ((uVar5 ^ uVar34) & uVar19 ^ uVar34);\u000a      uVar4 = uVar4 + iVar29;\u000a      uVar24 = ((uVar2 | uVar16) & uVar7 | uVar2 & uVar16) +\u000a               ((uVar2 * 0x400 | uVar2 >> 0x16) ^\u000a               (uVar2 * 0x80000 | uVar2 >> 0xd) ^ (uVar2 * 0x40000000 | uVar2 >> 2)) + iVar29;\u000a      uVar30 = (local_98[1] >> 3 ^ (local_98[1] << 0xe | local_98[1] >> 0x12) ^\u000a               (local_98[1] << 0x19 | local_98[1] >> 7)) + local_98[0] + local_74 +\u000a               (x[2] >> 10 ^ (x[2] << 0xd | x[2] >> 0x13) ^ (x[2] << 0xf | x[2] >> 0x11));\u000a      iVar29 = ((uVar4 * 0x80 | uVar4 >> 0x19) ^\u000a               (uVar4 * 0x200000 | uVar4 >> 0xb) ^ (uVar4 * 0x4000000 | uVar4 >> 6)) + 0xe49b69c1 +\u000a               uVar30 + uVar34 + ((uVar19 ^ uVar5) & uVar4 ^ uVar5);\u000a      uVar7 = uVar7 + iVar29;\u000a      uVar31 = ((uVar24 | uVar2) & uVar16 | uVar24 & uVar2) +\u000a               ((uVar24 * 0x400 | uVar24 >> 0x16) ^\u000a               (uVar24 * 0x80000 | uVar24 >> 0xd) ^ (uVar24 * 0x40000000 | uVar24 >> 2)) + iVar29;\u000a      uVar27 = local_98[1] + local_70 +\u000a               (x[3] >> 10 ^ (x[3] << 0xd | x[3] >> 0x13) ^ (x[3] << 0xf | x[3] >> 0x11)) +\u000a               (local_98[2] >> 3 ^ (local_98[2] << 0xe | local_98[2] >> 0x12) ^\u000a               (local_98[2] << 0x19 | local_98[2] >> 7));\u000a      iVar29 = ((uVar7 * 0x80 | uVar7 >> 0x19) ^\u000a               (uVar7 * 0x200000 | uVar7 >> 0xb) ^ (uVar7 * 0x4000000 | uVar7 >> 6)) + 0xefbe4786 +\u000a               uVar27 + uVar5 + ((uVar4 ^ uVar19) & uVar7 ^ uVar19);\u000a      uVar16 = uVar16 + iVar29;\u000a      uVar35 = ((uVar31 | uVar24) & uVar2 | uVar31 & uVar24) +\u000a               ((uVar31 * 0x400 | uVar31 >> 0x16) ^\u000a               (uVar31 * 0x80000 | uVar31 >> 0xd) ^ (uVar31 * 0x40000000 | uVar31 >> 2)) + iVar29;\u000a      uVar5 = local_98[2] + local_6c +\u000a              (uVar30 >> 10 ^ (uVar30 * 0x2000 | uVar30 >> 0x13) ^\u000a              (uVar30 * 0x8000 | uVar30 >> 0x11)) +\u000a              (local_98[3] >> 3 ^ (local_98[3] << 0xe | local_98[3] >> 0x12) ^\u000a              (local_98[3] << 0x19 | local_98[3] >> 7));\u000a      iVar29 = ((uVar16 * 0x80 | uVar16 >> 0x19) ^\u000a               (uVar16 * 0x200000 | uVar16 >> 0xb) ^ (uVar16 * 0x4000000 | uVar16 >> 6)) + 0xfc19dc6\u000a               + uVar5 + uVar19 + ((uVar7 ^ uVar4) & uVar16 ^ uVar4);\u000a      uVar2 = uVar2 + iVar29;\u000a      uVar3 = ((uVar35 | uVar31) & uVar24 | uVar35 & uVar31) +\u000a              ((uVar35 * 0x400 | uVar35 >> 0x16) ^\u000a              (uVar35 * 0x80000 | uVar35 >> 0xd) ^ (uVar35 * 0x40000000 | uVar35 >> 2)) + iVar29;\u000a      uVar1 = local_98[3] + x[0] +\u000a              (uVar27 >> 10 ^ (uVar27 * 0x2000 | uVar27 >> 0x13) ^\u000a              (uVar27 * 0x8000 | uVar27 >> 0x11)) +\u000a              (local_88 >> 3 ^ (local_88 << 0xe | local_88 >> 0x12) ^\u000a              (local_88 << 0x19 | local_88 >> 7));\u000a      iVar29 = ((uVar2 * 0x80 | uVar2 >> 0x19) ^\u000a               (uVar2 * 0x200000 | uVar2 >> 0xb) ^ (uVar2 * 0x4000000 | uVar2 >> 6)) + 0x240ca1cc +\u000a               uVar1 + uVar4 + ((uVar16 ^ uVar7) & uVar2 ^ uVar7);\u000a      uVar24 = uVar24 + iVar29;\u000a      uVar4 = ((uVar3 | uVar35) & uVar31 | uVar3 & uVar35) +\u000a              ((uVar3 * 0x400 | uVar3 >> 0x16) ^\u000a              (uVar3 * 0x80000 | uVar3 >> 0xd) ^ (uVar3 * 0x40000000 | uVar3 >> 2)) + iVar29;\u000a      uVar34 = local_88 + x[1] +\u000a               (uVar5 >> 10 ^ (uVar5 * 0x2000 | uVar5 >> 0x13) ^ (uVar5 * 0x8000 | uVar5 >> 0x11)) +\u000a               (local_84 >> 3 ^ (local_84 << 0xe | local_84 >> 0x12) ^\u000a               (local_84 << 0x19 | local_84 >> 7));\u000a      iVar29 = ((uVar24 * 0x80 | uVar24 >> 0x19) ^\u000a               (uVar24 * 0x200000 | uVar24 >> 0xb) ^ (uVar24 * 0x4000000 | uVar24 >> 6)) +\u000a               0x2de92c6f + uVar34 + uVar7 + ((uVar2 ^ uVar16) & uVar24 ^ uVar16);\u000a      uVar31 = uVar31 + iVar29;\u000a      uVar7 = ((uVar4 | uVar3) & uVar35 | uVar4 & uVar3) +\u000a              ((uVar4 * 0x400 | uVar4 >> 0x16) ^\u000a              (uVar4 * 0x80000 | uVar4 >> 0xd) ^ (uVar4 * 0x40000000 | uVar4 >> 2)) + iVar29;\u000a      uVar10 = local_84 + x[2] +\u000a               (uVar1 >> 10 ^ (uVar1 * 0x2000 | uVar1 >> 0x13) ^ (uVar1 * 0x8000 | uVar1 >> 0x11)) +\u000a               (local_80 >> 3 ^ (local_80 << 0xe | local_80 >> 0x12) ^\u000a               (local_80 << 0x19 | local_80 >> 7));\u000a      iVar29 = ((uVar31 * 0x80 | uVar31 >> 0x19) ^\u000a               (uVar31 * 0x200000 | uVar31 >> 0xb) ^ (uVar31 * 0x4000000 | uVar31 >> 6)) +\u000a               0x4a7484aa + uVar10 + uVar16 + ((uVar24 ^ uVar2) & uVar31 ^ uVar2);\u000a      uVar35 = uVar35 + iVar29;\u000a      uVar16 = ((uVar7 | uVar4) & uVar3 | uVar7 & uVar4) +\u000a               ((uVar7 * 0x400 | uVar7 >> 0x16) ^\u000a               (uVar7 * 0x80000 | uVar7 >> 0xd) ^ (uVar7 * 0x40000000 | uVar7 >> 2)) + iVar29;\u000a      uVar11 = local_80 + x[3] +\u000a               (uVar34 >> 10 ^ (uVar34 * 0x2000 | uVar34 >> 0x13) ^\u000a               (uVar34 * 0x8000 | uVar34 >> 0x11)) +\u000a               (local_7c >> 3 ^ (local_7c << 0xe | local_7c >> 0x12) ^\u000a               (local_7c << 0x19 | local_7c >> 7));\u000a      iVar29 = ((uVar35 * 0x80 | uVar35 >> 0x19) ^\u000a               (uVar35 * 0x200000 | uVar35 >> 0xb) ^ (uVar35 * 0x4000000 | uVar35 >> 6)) +\u000a               0x5cb0a9dc + uVar11 + uVar2 + ((uVar31 ^ uVar24) & uVar35 ^ uVar24);\u000a      uVar3 = uVar3 + iVar29;\u000a      uVar19 = ((uVar16 | uVar7) & uVar4 | uVar16 & uVar7) +\u000a               ((uVar16 * 0x400 | uVar16 >> 0x16) ^\u000a               (uVar16 * 0x80000 | uVar16 >> 0xd) ^ (uVar16 * 0x40000000 | uVar16 >> 2)) + iVar29;\u000a      uVar12 = local_7c + uVar30 +\u000a               (uVar10 >> 10 ^ (uVar10 * 0x2000 | uVar10 >> 0x13) ^\u000a               (uVar10 * 0x8000 | uVar10 >> 0x11)) +\u000a               (local_78 >> 3 ^ (local_78 << 0xe | local_78 >> 0x12) ^\u000a               (local_78 << 0x19 | local_78 >> 7));\u000a      iVar29 = ((uVar3 * 0x80 | uVar3 >> 0x19) ^\u000a               (uVar3 * 0x200000 | uVar3 >> 0xb) ^ (uVar3 * 0x4000000 | uVar3 >> 6)) + 0x76f988da +\u000a               uVar12 + uVar24 + ((uVar35 ^ uVar31) & uVar3 ^ uVar31);\u000a      uVar4 = uVar4 + iVar29;\u000a      uVar24 = ((uVar19 | uVar16) & uVar7 | uVar19 & uVar16) +\u000a               ((uVar19 * 0x400 | uVar19 >> 0x16) ^\u000a               (uVar19 * 0x80000 | uVar19 >> 0xd) ^ (uVar19 * 0x40000000 | uVar19 >> 2)) + iVar29;\u000a      uVar13 = local_78 + uVar27 +\u000a               (uVar11 >> 10 ^ (uVar11 * 0x2000 | uVar11 >> 0x13) ^\u000a               (uVar11 * 0x8000 | uVar11 >> 0x11)) +\u000a               (local_74 >> 3 ^ (local_74 << 0xe | local_74 >> 0x12) ^\u000a               (local_74 << 0x19 | local_74 >> 7));\u000a      iVar29 = ((uVar4 * 0x80 | uVar4 >> 0x19) ^\u000a               (uVar4 * 0x200000 | uVar4 >> 0xb) ^ (uVar4 * 0x4000000 | uVar4 >> 6)) + 0x983e5152 +\u000a               uVar13 + uVar31 + ((uVar3 ^ uVar35) & uVar4 ^ uVar35);\u000a      uVar7 = uVar7 + iVar29;\u000a      uVar31 = ((uVar24 | uVar19) & uVar16 | uVar24 & uVar19) +\u000a               ((uVar24 * 0x400 | uVar24 >> 0x16) ^\u000a               (uVar24 * 0x80000 | uVar24 >> 0xd) ^ (uVar24 * 0x40000000 | uVar24 >> 2)) + iVar29;\u000a      uVar14 = local_74 + uVar5 +\u000a               (uVar12 >> 10 ^ (uVar12 * 0x2000 | uVar12 >> 0x13) ^\u000a               (uVar12 * 0x8000 | uVar12 >> 0x11)) +\u000a               (local_70 >> 3 ^ (local_70 << 0xe | local_70 >> 0x12) ^\u000a               (local_70 << 0x19 | local_70 >> 7));\u000a      iVar29 = ((uVar7 * 0x80 | uVar7 >> 0x19) ^\u000a               (uVar7 * 0x200000 | uVar7 >> 0xb) ^ (uVar7 * 0x4000000 | uVar7 >> 6)) + 0xa831c66d +\u000a               uVar14 + uVar35 + ((uVar4 ^ uVar3) & uVar7 ^ uVar3);\u000a      uVar16 = uVar16 + iVar29;\u000a      uVar32 = ((uVar31 | uVar24) & uVar19 | uVar31 & uVar24) +\u000a               ((uVar31 * 0x400 | uVar31 >> 0x16) ^\u000a               (uVar31 * 0x80000 | uVar31 >> 0xd) ^ (uVar31 * 0x40000000 | uVar31 >> 2)) + iVar29;\u000a      uVar35 = local_70 + uVar1 +\u000a               (uVar13 >> 10 ^ (uVar13 * 0x2000 | uVar13 >> 0x13) ^\u000a               (uVar13 * 0x8000 | uVar13 >> 0x11)) +\u000a               (local_6c >> 3 ^ (local_6c << 0xe | local_6c >> 0x12) ^\u000a               (local_6c << 0x19 | local_6c >> 7));\u000a      iVar29 = ((uVar16 * 0x80 | uVar16 >> 0x19) ^\u000a               (uVar16 * 0x200000 | uVar16 >> 0xb) ^ (uVar16 * 0x4000000 | uVar16 >> 6)) +\u000a               0xb00327c8 + uVar35 + uVar3 + ((uVar7 ^ uVar4) & uVar16 ^ uVar4);\u000a      uVar19 = uVar19 + iVar29;\u000a      uVar36 = ((uVar32 | uVar31) & uVar24 | uVar32 & uVar31) +\u000a               ((uVar32 * 0x400 | uVar32 >> 0x16) ^\u000a               (uVar32 * 0x80000 | uVar32 >> 0xd) ^ (uVar32 * 0x40000000 | uVar32 >> 2)) + iVar29;\u000a      uVar2 = local_6c + uVar34 +\u000a              (uVar14 >> 10 ^ (uVar14 * 0x2000 | uVar14 >> 0x13) ^\u000a              (uVar14 * 0x8000 | uVar14 >> 0x11)) +\u000a              (x[0] >> 3 ^ (x[0] << 0xe | x[0] >> 0x12) ^ (x[0] << 0x19 | x[0] >> 7));\u000a      iVar29 = ((uVar19 * 0x80 | uVar19 >> 0x19) ^\u000a               (uVar19 * 0x200000 | uVar19 >> 0xb) ^ (uVar19 * 0x4000000 | uVar19 >> 6)) +\u000a               0xbf597fc7 + uVar2 + uVar4 + ((uVar16 ^ uVar7) & uVar19 ^ uVar7);\u000a      uVar24 = uVar24 + iVar29;\u000a      uVar4 = ((uVar36 | uVar32) & uVar31 | uVar36 & uVar32) +\u000a              ((uVar36 * 0x400 | uVar36 >> 0x16) ^\u000a              (uVar36 * 0x80000 | uVar36 >> 0xd) ^ (uVar36 * 0x40000000 | uVar36 >> 2)) + iVar29;\u000a      uVar3 = x[0] + uVar10 +\u000a              (uVar35 >> 10 ^ (uVar35 * 0x2000 | uVar35 >> 0x13) ^\u000a              (uVar35 * 0x8000 | uVar35 >> 0x11)) +\u000a              (x[1] >> 3 ^ (x[1] << 0xe | x[1] >> 0x12) ^ (x[1] << 0x19 | x[1] >> 7));\u000a      iVar29 = ((uVar24 * 0x80 | uVar24 >> 0x19) ^\u000a               (uVar24 * 0x200000 | uVar24 >> 0xb) ^ (uVar24 * 0x4000000 | uVar24 >> 6)) +\u000a               0xc6e00bf3 + uVar3 + uVar7 + ((uVar19 ^ uVar16) & uVar24 ^ uVar16);\u000a      uVar31 = uVar31 + iVar29;\u000a      uVar25 = ((uVar4 | uVar36) & uVar32 | uVar4 & uVar36) +\u000a               ((uVar4 * 0x400 | uVar4 >> 0x16) ^\u000a               (uVar4 * 0x80000 | uVar4 >> 0xd) ^ (uVar4 * 0x40000000 | uVar4 >> 2)) + iVar29;\u000a      uVar7 = x[1] + uVar11 +\u000a              (uVar2 >> 10 ^ (uVar2 * 0x2000 | uVar2 >> 0x13) ^ (uVar2 * 0x8000 | uVar2 >> 0x11)) +\u000a              (x[2] >> 3 ^ (x[2] << 0xe | x[2] >> 0x12) ^ (x[2] << 0x19 | x[2] >> 7));\u000a      iVar29 = ((uVar31 * 0x80 | uVar31 >> 0x19) ^\u000a               (uVar31 * 0x200000 | uVar31 >> 0xb) ^ (uVar31 * 0x4000000 | uVar31 >> 6)) +\u000a               0xd5a79147 + uVar7 + uVar16 + ((uVar24 ^ uVar19) & uVar31 ^ uVar19);\u000a      uVar32 = uVar32 + iVar29;\u000a      uVar17 = ((uVar25 | uVar4) & uVar36 | uVar25 & uVar4) +\u000a               ((uVar25 * 0x400 | uVar25 >> 0x16) ^\u000a               (uVar25 * 0x80000 | uVar25 >> 0xd) ^ (uVar25 * 0x40000000 | uVar25 >> 2)) + iVar29;\u000a      uVar16 = x[2] + uVar12 +\u000a               (uVar3 >> 10 ^ (uVar3 * 0x2000 | uVar3 >> 0x13) ^ (uVar3 * 0x8000 | uVar3 >> 0x11)) +\u000a               (x[3] >> 3 ^ (x[3] << 0xe | x[3] >> 0x12) ^ (x[3] << 0x19 | x[3] >> 7));\u000a      iVar29 = ((uVar32 * 0x80 | uVar32 >> 0x19) ^\u000a               (uVar32 * 0x200000 | uVar32 >> 0xb) ^ (uVar32 * 0x4000000 | uVar32 >> 6)) + 0x6ca6351\u000a               + uVar16 + uVar19 + ((uVar31 ^ uVar24) & uVar32 ^ uVar24);\u000a      uVar36 = uVar36 + iVar29;\u000a      uVar20 = ((uVar17 | uVar25) & uVar4 | uVar17 & uVar25) +\u000a               ((uVar17 * 0x400 | uVar17 >> 0x16) ^\u000a               (uVar17 * 0x80000 | uVar17 >> 0xd) ^ (uVar17 * 0x40000000 | uVar17 >> 2)) + iVar29;\u000a      uVar19 = x[3] + uVar13 +\u000a               (uVar7 >> 10 ^ (uVar7 * 0x2000 | uVar7 >> 0x13) ^ (uVar7 * 0x8000 | uVar7 >> 0x11)) +\u000a               (uVar30 >> 3 ^ (uVar30 * 0x4000 | uVar30 >> 0x12) ^\u000a               (uVar30 * 0x2000000 | uVar30 >> 7));\u000a      iVar29 = ((uVar36 * 0x80 | uVar36 >> 0x19) ^\u000a               (uVar36 * 0x200000 | uVar36 >> 0xb) ^ (uVar36 * 0x4000000 | uVar36 >> 6)) +\u000a               0x14292967 + uVar19 + uVar24 + ((uVar32 ^ uVar31) & uVar36 ^ uVar31);\u000a      uVar4 = uVar4 + iVar29;\u000a      uVar22 = ((uVar20 | uVar17) & uVar25 | uVar20 & uVar17) +\u000a               ((uVar20 * 0x400 | uVar20 >> 0x16) ^\u000a               (uVar20 * 0x80000 | uVar20 >> 0xd) ^ (uVar20 * 0x40000000 | uVar20 >> 2)) + iVar29;\u000a      uVar24 = uVar30 + uVar14 +\u000a               (uVar16 >> 10 ^ (uVar16 * 0x2000 | uVar16 >> 0x13) ^\u000a               (uVar16 * 0x8000 | uVar16 >> 0x11)) +\u000a               (uVar27 >> 3 ^ (uVar27 * 0x4000 | uVar27 >> 0x12) ^\u000a               (uVar27 * 0x2000000 | uVar27 >> 7));\u000a      iVar29 = ((uVar4 * 0x80 | uVar4 >> 0x19) ^\u000a               (uVar4 * 0x200000 | uVar4 >> 0xb) ^ (uVar4 * 0x4000000 | uVar4 >> 6)) + 0x27b70a85 +\u000a               uVar24 + uVar31 + ((uVar36 ^ uVar32) & uVar4 ^ uVar32);\u000a      uVar25 = uVar25 + iVar29;\u000a      uVar31 = ((uVar22 | uVar20) & uVar17 | uVar22 & uVar20) +\u000a               ((uVar22 * 0x400 | uVar22 >> 0x16) ^\u000a               (uVar22 * 0x80000 | uVar22 >> 0xd) ^ (uVar22 * 0x40000000 | uVar22 >> 2)) + iVar29;\u000a      uVar27 = uVar27 + uVar35 +\u000a               (uVar19 >> 10 ^ (uVar19 * 0x2000 | uVar19 >> 0x13) ^\u000a               (uVar19 * 0x8000 | uVar19 >> 0x11)) +\u000a               (uVar5 >> 3 ^ (uVar5 * 0x4000 | uVar5 >> 0x12) ^ (uVar5 * 0x2000000 | uVar5 >> 7));\u000a      iVar29 = ((uVar25 * 0x80 | uVar25 >> 0x19) ^\u000a               (uVar25 * 0x200000 | uVar25 >> 0xb) ^ (uVar25 * 0x4000000 | uVar25 >> 6)) +\u000a               0x2e1b2138 + uVar27 + uVar32 + ((uVar4 ^ uVar36) & uVar25 ^ uVar36);\u000a      uVar17 = uVar17 + iVar29;\u000a      uVar28 = ((uVar31 | uVar22) & uVar20 | uVar31 & uVar22) +\u000a               ((uVar31 * 0x400 | uVar31 >> 0x16) ^\u000a               (uVar31 * 0x80000 | uVar31 >> 0xd) ^ (uVar31 * 0x40000000 | uVar31 >> 2)) + iVar29;\u000a      uVar30 = uVar5 + uVar2 +\u000a               (uVar24 >> 10 ^ (uVar24 * 0x2000 | uVar24 >> 0x13) ^\u000a               (uVar24 * 0x8000 | uVar24 >> 0x11)) +\u000a               (uVar1 >> 3 ^ (uVar1 * 0x4000 | uVar1 >> 0x12) ^ (uVar1 * 0x2000000 | uVar1 >> 7));\u000a      iVar29 = ((uVar17 * 0x80 | uVar17 >> 0x19) ^\u000a               (uVar17 * 0x200000 | uVar17 >> 0xb) ^ (uVar17 * 0x4000000 | uVar17 >> 6)) +\u000a               0x4d2c6dfc + uVar30 + uVar36 + ((uVar25 ^ uVar4) & uVar17 ^ uVar4);\u000a      uVar20 = uVar20 + iVar29;\u000a      uVar36 = ((uVar28 | uVar31) & uVar22 | uVar28 & uVar31) +\u000a               ((uVar28 * 0x400 | uVar28 >> 0x16) ^\u000a               (uVar28 * 0x80000 | uVar28 >> 0xd) ^ (uVar28 * 0x40000000 | uVar28 >> 2)) + iVar29;\u000a      uVar1 = uVar1 + uVar3 +\u000a              (uVar27 >> 10 ^ (uVar27 * 0x2000 | uVar27 >> 0x13) ^\u000a              (uVar27 * 0x8000 | uVar27 >> 0x11)) +\u000a              (uVar34 >> 3 ^ (uVar34 * 0x4000 | uVar34 >> 0x12) ^ (uVar34 * 0x2000000 | uVar34 >> 7)\u000a              );\u000a      iVar29 = ((uVar20 * 0x80 | uVar20 >> 0x19) ^\u000a               (uVar20 * 0x200000 | uVar20 >> 0xb) ^ (uVar20 * 0x4000000 | uVar20 >> 6)) +\u000a               0x53380d13 + uVar1 + uVar4 + ((uVar17 ^ uVar25) & uVar20 ^ uVar25);\u000a      uVar22 = uVar22 + iVar29;\u000a      uVar32 = ((uVar36 | uVar28) & uVar31 | uVar36 & uVar28) +\u000a               ((uVar36 * 0x400 | uVar36 >> 0x16) ^\u000a               (uVar36 * 0x80000 | uVar36 >> 0xd) ^ (uVar36 * 0x40000000 | uVar36 >> 2)) + iVar29;\u000a      uVar4 = uVar34 + uVar7 +\u000a              (uVar30 >> 10 ^ (uVar30 * 0x2000 | uVar30 >> 0x13) ^\u000a              (uVar30 * 0x8000 | uVar30 >> 0x11)) +\u000a              (uVar10 >> 3 ^ (uVar10 * 0x4000 | uVar10 >> 0x12) ^ (uVar10 * 0x2000000 | uVar10 >> 7)\u000a              );\u000a      iVar29 = ((uVar22 * 0x80 | uVar22 >> 0x19) ^\u000a               (uVar22 * 0x200000 | uVar22 >> 0xb) ^ (uVar22 * 0x4000000 | uVar22 >> 6)) +\u000a               0x650a7354 + uVar4 + uVar25 + ((uVar20 ^ uVar17) & uVar22 ^ uVar17);\u000a      uVar31 = uVar31 + iVar29;\u000a      uVar25 = ((uVar32 | uVar36) & uVar28 | uVar32 & uVar36) +\u000a               ((uVar32 * 0x400 | uVar32 >> 0x16) ^\u000a               (uVar32 * 0x80000 | uVar32 >> 0xd) ^ (uVar32 * 0x40000000 | uVar32 >> 2)) + iVar29;\u000a      uVar34 = uVar10 + uVar16 +\u000a               (uVar1 >> 10 ^ (uVar1 * 0x2000 | uVar1 >> 0x13) ^ (uVar1 * 0x8000 | uVar1 >> 0x11)) +\u000a               (uVar11 >> 3 ^ (uVar11 * 0x4000 | uVar11 >> 0x12) ^\u000a               (uVar11 * 0x2000000 | uVar11 >> 7));\u000a      iVar29 = ((uVar31 * 0x80 | uVar31 >> 0x19) ^\u000a               (uVar31 * 0x200000 | uVar31 >> 0xb) ^ (uVar31 * 0x4000000 | uVar31 >> 6)) +\u000a               0x766a0abb + uVar34 + uVar17 + ((uVar22 ^ uVar20) & uVar31 ^ uVar20);\u000a      uVar28 = uVar28 + iVar29;\u000a      uVar5 = ((uVar25 | uVar32) & uVar36 | uVar25 & uVar32) +\u000a              ((uVar25 * 0x400 | uVar25 >> 0x16) ^\u000a              (uVar25 * 0x80000 | uVar25 >> 0xd) ^ (uVar25 * 0x40000000 | uVar25 >> 2)) + iVar29;\u000a      uVar10 = uVar11 + uVar19 +\u000a               (uVar4 >> 10 ^ (uVar4 * 0x2000 | uVar4 >> 0x13) ^ (uVar4 * 0x8000 | uVar4 >> 0x11)) +\u000a               (uVar12 >> 3 ^ (uVar12 * 0x4000 | uVar12 >> 0x12) ^\u000a               (uVar12 * 0x2000000 | uVar12 >> 7));\u000a      iVar29 = ((uVar28 * 0x80 | uVar28 >> 0x19) ^\u000a               (uVar28 * 0x200000 | uVar28 >> 0xb) ^ (uVar28 * 0x4000000 | uVar28 >> 6)) +\u000a               0x81c2c92e + uVar10 + uVar20 + ((uVar31 ^ uVar22) & uVar28 ^ uVar22);\u000a      uVar36 = uVar36 + iVar29;\u000a      uVar17 = ((uVar5 | uVar25) & uVar32 | uVar5 & uVar25) +\u000a               ((uVar5 * 0x400 | uVar5 >> 0x16) ^\u000a               (uVar5 * 0x80000 | uVar5 >> 0xd) ^ (uVar5 * 0x40000000 | uVar5 >> 2)) + iVar29;\u000a      uVar11 = uVar12 + uVar24 +\u000a               (uVar34 >> 10 ^ (uVar34 * 0x2000 | uVar34 >> 0x13) ^\u000a               (uVar34 * 0x8000 | uVar34 >> 0x11)) +\u000a               (uVar13 >> 3 ^ (uVar13 * 0x4000 | uVar13 >> 0x12) ^\u000a               (uVar13 * 0x2000000 | uVar13 >> 7));\u000a      iVar29 = ((uVar36 * 0x80 | uVar36 >> 0x19) ^\u000a               (uVar36 * 0x200000 | uVar36 >> 0xb) ^ (uVar36 * 0x4000000 | uVar36 >> 6)) +\u000a               0x92722c85 + uVar11 + uVar22 + ((uVar28 ^ uVar31) & uVar36 ^ uVar31);\u000a      uVar32 = uVar32 + iVar29;\u000a      uVar20 = ((uVar17 | uVar5) & uVar25 | uVar17 & uVar5) +\u000a               ((uVar17 * 0x400 | uVar17 >> 0x16) ^\u000a               (uVar17 * 0x80000 | uVar17 >> 0xd) ^ (uVar17 * 0x40000000 | uVar17 >> 2)) + iVar29;\u000a      uVar12 = uVar13 + uVar27 +\u000a               (uVar10 >> 10 ^ (uVar10 * 0x2000 | uVar10 >> 0x13) ^\u000a               (uVar10 * 0x8000 | uVar10 >> 0x11)) +\u000a               (uVar14 >> 3 ^ (uVar14 * 0x4000 | uVar14 >> 0x12) ^\u000a               (uVar14 * 0x2000000 | uVar14 >> 7));\u000a      iVar29 = ((uVar32 * 0x80 | uVar32 >> 0x19) ^\u000a               (uVar32 * 0x200000 | uVar32 >> 0xb) ^ (uVar32 * 0x4000000 | uVar32 >> 6)) +\u000a               0xa2bfe8a1 + uVar12 + uVar31 + ((uVar36 ^ uVar28) & uVar32 ^ uVar28);\u000a      uVar25 = uVar25 + iVar29;\u000a      uVar22 = ((uVar20 | uVar17) & uVar5 | uVar20 & uVar17) +\u000a               ((uVar20 * 0x400 | uVar20 >> 0x16) ^\u000a               (uVar20 * 0x80000 | uVar20 >> 0xd) ^ (uVar20 * 0x40000000 | uVar20 >> 2)) + iVar29;\u000a      uVar31 = uVar14 + uVar30 +\u000a               (uVar11 >> 10 ^ (uVar11 * 0x2000 | uVar11 >> 0x13) ^\u000a               (uVar11 * 0x8000 | uVar11 >> 0x11)) +\u000a               (uVar35 >> 3 ^ (uVar35 * 0x4000 | uVar35 >> 0x12) ^\u000a               (uVar35 * 0x2000000 | uVar35 >> 7));\u000a      iVar29 = ((uVar25 * 0x80 | uVar25 >> 0x19) ^\u000a               (uVar25 * 0x200000 | uVar25 >> 0xb) ^ (uVar25 * 0x4000000 | uVar25 >> 6)) +\u000a               0xa81a664b + uVar31 + uVar28 + ((uVar32 ^ uVar36) & uVar25 ^ uVar36);\u000a      uVar5 = uVar5 + iVar29;\u000a      uVar14 = ((uVar22 | uVar20) & uVar17 | uVar22 & uVar20) +\u000a               ((uVar22 * 0x400 | uVar22 >> 0x16) ^\u000a               (uVar22 * 0x80000 | uVar22 >> 0xd) ^ (uVar22 * 0x40000000 | uVar22 >> 2)) + iVar29;\u000a      uVar13 = uVar35 + uVar1 +\u000a               (uVar12 >> 10 ^ (uVar12 * 0x2000 | uVar12 >> 0x13) ^\u000a               (uVar12 * 0x8000 | uVar12 >> 0x11)) +\u000a               (uVar2 >> 3 ^ (uVar2 * 0x4000 | uVar2 >> 0x12) ^ (uVar2 * 0x2000000 | uVar2 >> 7));\u000a      iVar29 = ((uVar5 * 0x80 | uVar5 >> 0x19) ^\u000a               (uVar5 * 0x200000 | uVar5 >> 0xb) ^ (uVar5 * 0x4000000 | uVar5 >> 6)) + 0xc24b8b70 +\u000a               uVar13 + uVar36 + ((uVar25 ^ uVar32) & uVar5 ^ uVar32);\u000a      uVar17 = uVar17 + iVar29;\u000a      uVar28 = ((uVar14 | uVar22) & uVar20 | uVar14 & uVar22) +\u000a               ((uVar14 * 0x400 | uVar14 >> 0x16) ^\u000a               (uVar14 * 0x80000 | uVar14 >> 0xd) ^ (uVar14 * 0x40000000 | uVar14 >> 2)) + iVar29;\u000a      uVar2 = uVar2 + uVar4 +\u000a              (uVar31 >> 10 ^ (uVar31 * 0x2000 | uVar31 >> 0x13) ^\u000a              (uVar31 * 0x8000 | uVar31 >> 0x11)) +\u000a              (uVar3 >> 3 ^ (uVar3 * 0x4000 | uVar3 >> 0x12) ^ (uVar3 * 0x2000000 | uVar3 >> 7));\u000a      iVar29 = ((uVar17 * 0x80 | uVar17 >> 0x19) ^\u000a               (uVar17 * 0x200000 | uVar17 >> 0xb) ^ (uVar17 * 0x4000000 | uVar17 >> 6)) +\u000a               0xc76c51a3 + uVar2 + uVar32 + ((uVar5 ^ uVar25) & uVar17 ^ uVar25);\u000a      uVar20 = uVar20 + iVar29;\u000a      uVar36 = ((uVar28 | uVar14) & uVar22 | uVar28 & uVar14) +\u000a               ((uVar28 * 0x400 | uVar28 >> 0x16) ^\u000a               (uVar28 * 0x80000 | uVar28 >> 0xd) ^ (uVar28 * 0x40000000 | uVar28 >> 2)) + iVar29;\u000a      uVar3 = uVar3 + uVar34 +\u000a              (uVar13 >> 10 ^ (uVar13 * 0x2000 | uVar13 >> 0x13) ^\u000a              (uVar13 * 0x8000 | uVar13 >> 0x11)) +\u000a              (uVar7 >> 3 ^ (uVar7 * 0x4000 | uVar7 >> 0x12) ^ (uVar7 * 0x2000000 | uVar7 >> 7));\u000a      iVar29 = ((uVar20 * 0x80 | uVar20 >> 0x19) ^\u000a               (uVar20 * 0x200000 | uVar20 >> 0xb) ^ (uVar20 * 0x4000000 | uVar20 >> 6)) +\u000a               0xd192e819 + uVar3 + uVar25 + ((uVar17 ^ uVar5) & uVar20 ^ uVar5);\u000a      uVar22 = uVar22 + iVar29;\u000a      uVar25 = ((uVar36 | uVar28) & uVar14 | uVar36 & uVar28) +\u000a               ((uVar36 * 0x400 | uVar36 >> 0x16) ^\u000a               (uVar36 * 0x80000 | uVar36 >> 0xd) ^ (uVar36 * 0x40000000 | uVar36 >> 2)) + iVar29;\u000a      uVar35 = uVar7 + uVar10 +\u000a               (uVar2 >> 10 ^ (uVar2 * 0x2000 | uVar2 >> 0x13) ^ (uVar2 * 0x8000 | uVar2 >> 0x11)) +\u000a               (uVar16 >> 3 ^ (uVar16 * 0x4000 | uVar16 >> 0x12) ^\u000a               (uVar16 * 0x2000000 | uVar16 >> 7));\u000a      iVar29 = ((uVar22 * 0x80 | uVar22 >> 0x19) ^\u000a               (uVar22 * 0x200000 | uVar22 >> 0xb) ^ (uVar22 * 0x4000000 | uVar22 >> 6)) +\u000a               0xd6990624 + uVar35 + uVar5 + ((uVar20 ^ uVar17) & uVar22 ^ uVar17);\u000a      uVar14 = uVar14 + iVar29;\u000a      uVar5 = ((uVar25 | uVar36) & uVar28 | uVar25 & uVar36) +\u000a              ((uVar25 * 0x400 | uVar25 >> 0x16) ^\u000a              (uVar25 * 0x80000 | uVar25 >> 0xd) ^ (uVar25 * 0x40000000 | uVar25 >> 2)) + iVar29;\u000a      uVar16 = uVar16 + uVar11 +\u000a               (uVar3 >> 10 ^ (uVar3 * 0x2000 | uVar3 >> 0x13) ^ (uVar3 * 0x8000 | uVar3 >> 0x11)) +\u000a               (uVar19 >> 3 ^ (uVar19 * 0x4000 | uVar19 >> 0x12) ^\u000a               (uVar19 * 0x2000000 | uVar19 >> 7));\u000a      iVar29 = ((uVar14 * 0x80 | uVar14 >> 0x19) ^\u000a               (uVar14 * 0x200000 | uVar14 >> 0xb) ^ (uVar14 * 0x4000000 | uVar14 >> 6)) +\u000a               0xf40e3585 + uVar16 + uVar17 + ((uVar22 ^ uVar20) & uVar14 ^ uVar20);\u000a      uVar28 = uVar28 + iVar29;\u000a      uVar32 = ((uVar5 | uVar25) & uVar36 | uVar5 & uVar25) +\u000a               ((uVar5 * 0x400 | uVar5 >> 0x16) ^\u000a               (uVar5 * 0x80000 | uVar5 >> 0xd) ^ (uVar5 * 0x40000000 | uVar5 >> 2)) + iVar29;\u000a      uVar7 = uVar19 + uVar12 +\u000a              (uVar35 >> 10 ^ (uVar35 * 0x2000 | uVar35 >> 0x13) ^\u000a              (uVar35 * 0x8000 | uVar35 >> 0x11)) +\u000a              (uVar24 >> 3 ^ (uVar24 * 0x4000 | uVar24 >> 0x12) ^ (uVar24 * 0x2000000 | uVar24 >> 7)\u000a              );\u000a      iVar29 = ((uVar28 * 0x80 | uVar28 >> 0x19) ^\u000a               (uVar28 * 0x200000 | uVar28 >> 0xb) ^ (uVar28 * 0x4000000 | uVar28 >> 6)) +\u000a               0x106aa070 + uVar7 + uVar20 + ((uVar14 ^ uVar22) & uVar28 ^ uVar22);\u000a      uVar36 = uVar36 + iVar29;\u000a      uVar17 = ((uVar32 | uVar5) & uVar25 | uVar32 & uVar5) +\u000a               ((uVar32 * 0x400 | uVar32 >> 0x16) ^\u000a               (uVar32 * 0x80000 | uVar32 >> 0xd) ^ (uVar32 * 0x40000000 | uVar32 >> 2)) + iVar29;\u000a      local_98[0] = uVar24 + uVar31 +\u000a                    (uVar16 >> 10 ^ (uVar16 * 0x2000 | uVar16 >> 0x13) ^\u000a                    (uVar16 * 0x8000 | uVar16 >> 0x11)) +\u000a                    (uVar27 >> 3 ^ (uVar27 * 0x4000 | uVar27 >> 0x12) ^\u000a                    (uVar27 * 0x2000000 | uVar27 >> 7));\u000a      iVar29 = ((uVar36 * 0x80 | uVar36 >> 0x19) ^\u000a               (uVar36 * 0x200000 | uVar36 >> 0xb) ^ (uVar36 * 0x4000000 | uVar36 >> 6)) +\u000a               0x19a4c116 + local_98[0] + uVar22 + ((uVar28 ^ uVar14) & uVar36 ^ uVar14);\u000a      uVar25 = uVar25 + iVar29;\u000a      uVar20 = ((uVar17 | uVar32) & uVar5 | uVar17 & uVar32) +\u000a               ((uVar17 * 0x400 | uVar17 >> 0x16) ^\u000a               (uVar17 * 0x80000 | uVar17 >> 0xd) ^ (uVar17 * 0x40000000 | uVar17 >> 2)) + iVar29;\u000a      local_98[1] = uVar27 + uVar13 +\u000a                    (uVar7 >> 10 ^ (uVar7 * 0x2000 | uVar7 >> 0x13) ^\u000a                    (uVar7 * 0x8000 | uVar7 >> 0x11)) +\u000a                    (uVar30 >> 3 ^ (uVar30 * 0x4000 | uVar30 >> 0x12) ^\u000a                    (uVar30 * 0x2000000 | uVar30 >> 7));\u000a      iVar29 = ((uVar25 * 0x80 | uVar25 >> 0x19) ^\u000a               (uVar25 * 0x200000 | uVar25 >> 0xb) ^ (uVar25 * 0x4000000 | uVar25 >> 6)) +\u000a               0x1e376c08 + local_98[1] + uVar14 + ((uVar36 ^ uVar28) & uVar25 ^ uVar28);\u000a      uVar5 = uVar5 + iVar29;\u000a      uVar27 = ((uVar20 | uVar17) & uVar32 | uVar20 & uVar17) +\u000a               ((uVar20 * 0x400 | uVar20 >> 0x16) ^\u000a               (uVar20 * 0x80000 | uVar20 >> 0xd) ^ (uVar20 * 0x40000000 | uVar20 >> 2)) + iVar29;\u000a      local_98[2] = uVar30 + uVar2 +\u000a                    (local_98[0] >> 10 ^ (local_98[0] * 0x2000 | local_98[0] >> 0x13) ^\u000a                    (local_98[0] * 0x8000 | local_98[0] >> 0x11)) +\u000a                    (uVar1 >> 3 ^ (uVar1 * 0x4000 | uVar1 >> 0x12) ^\u000a                    (uVar1 * 0x2000000 | uVar1 >> 7));\u000a      iVar29 = ((uVar5 * 0x80 | uVar5 >> 0x19) ^\u000a               (uVar5 * 0x200000 | uVar5 >> 0xb) ^ (uVar5 * 0x4000000 | uVar5 >> 6)) + 0x2748774c +\u000a               local_98[2] + uVar28 + ((uVar25 ^ uVar36) & uVar5 ^ uVar36);\u000a      uVar32 = uVar32 + iVar29;\u000a      uVar24 = ((uVar27 | uVar20) & uVar17 | uVar27 & uVar20) +\u000a               ((uVar27 * 0x400 | uVar27 >> 0x16) ^\u000a               (uVar27 * 0x80000 | uVar27 >> 0xd) ^ (uVar27 * 0x40000000 | uVar27 >> 2)) + iVar29;\u000a      local_98[3] = uVar1 + uVar3 +\u000a                    (local_98[1] >> 10 ^ (local_98[1] * 0x2000 | local_98[1] >> 0x13) ^\u000a                    (local_98[1] * 0x8000 | local_98[1] >> 0x11)) +\u000a                    (uVar4 >> 3 ^ (uVar4 * 0x4000 | uVar4 >> 0x12) ^\u000a                    (uVar4 * 0x2000000 | uVar4 >> 7));\u000a      iVar29 = ((uVar32 * 0x80 | uVar32 >> 0x19) ^\u000a               (uVar32 * 0x200000 | uVar32 >> 0xb) ^ (uVar32 * 0x4000000 | uVar32 >> 6)) +\u000a               0x34b0bcb5 + local_98[3] + uVar36 + ((uVar5 ^ uVar25) & uVar32 ^ uVar25);\u000a      uVar17 = uVar17 + iVar29;\u000a      uVar1 = ((uVar24 | uVar27) & uVar20 | uVar24 & uVar27) +\u000a              ((uVar24 * 0x400 | uVar24 >> 0x16) ^\u000a              (uVar24 * 0x80000 | uVar24 >> 0xd) ^ (uVar24 * 0x40000000 | uVar24 >> 2)) + iVar29;\u000a      local_88 = uVar4 + uVar35 +\u000a                 (local_98[2] >> 10 ^ (local_98[2] * 0x2000 | local_98[2] >> 0x13) ^\u000a                 (local_98[2] * 0x8000 | local_98[2] >> 0x11)) +\u000a                 (uVar34 >> 3 ^ (uVar34 * 0x4000 | uVar34 >> 0x12) ^\u000a                 (uVar34 * 0x2000000 | uVar34 >> 7));\u000a      iVar29 = ((uVar17 * 0x80 | uVar17 >> 0x19) ^\u000a               (uVar17 * 0x200000 | uVar17 >> 0xb) ^ (uVar17 * 0x4000000 | uVar17 >> 6)) +\u000a               0x391c0cb3 + local_88 + uVar25 + ((uVar32 ^ uVar5) & uVar17 ^ uVar5);\u000a      uVar20 = uVar20 + iVar29;\u000a      uVar4 = ((uVar1 | uVar24) & uVar27 | uVar1 & uVar24) +\u000a              ((uVar1 * 0x400 | uVar1 >> 0x16) ^\u000a              (uVar1 * 0x80000 | uVar1 >> 0xd) ^ (uVar1 * 0x40000000 | uVar1 >> 2)) + iVar29;\u000a      local_84 = uVar34 + uVar16 +\u000a                 (local_98[3] >> 10 ^ (local_98[3] * 0x2000 | local_98[3] >> 0x13) ^\u000a                 (local_98[3] * 0x8000 | local_98[3] >> 0x11)) +\u000a                 (uVar10 >> 3 ^ (uVar10 * 0x4000 | uVar10 >> 0x12) ^\u000a                 (uVar10 * 0x2000000 | uVar10 >> 7));\u000a      iVar29 = ((uVar20 * 0x80 | uVar20 >> 0x19) ^\u000a               (uVar20 * 0x200000 | uVar20 >> 0xb) ^ (uVar20 * 0x4000000 | uVar20 >> 6)) +\u000a               0x4ed8aa4a + local_84 + uVar5 + ((uVar17 ^ uVar32) & uVar20 ^ uVar32);\u000a      uVar27 = uVar27 + iVar29;\u000a      uVar19 = ((uVar4 | uVar1) & uVar24 | uVar4 & uVar1) +\u000a               ((uVar4 * 0x400 | uVar4 >> 0x16) ^\u000a               (uVar4 * 0x80000 | uVar4 >> 0xd) ^ (uVar4 * 0x40000000 | uVar4 >> 2)) + iVar29;\u000a      local_80 = uVar10 + uVar7 +\u000a                 (local_88 >> 10 ^ (local_88 * 0x2000 | local_88 >> 0x13) ^\u000a                 (local_88 * 0x8000 | local_88 >> 0x11)) +\u000a                 (uVar11 >> 3 ^ (uVar11 * 0x4000 | uVar11 >> 0x12) ^\u000a                 (uVar11 * 0x2000000 | uVar11 >> 7));\u000a      iVar29 = ((uVar27 * 0x80 | uVar27 >> 0x19) ^\u000a               (uVar27 * 0x200000 | uVar27 >> 0xb) ^ (uVar27 * 0x4000000 | uVar27 >> 6)) +\u000a               0x5b9cca4f + local_80 + uVar32 + ((uVar20 ^ uVar17) & uVar27 ^ uVar17);\u000a      uVar24 = uVar24 + iVar29;\u000a      uVar30 = ((uVar19 | uVar4) & uVar1 | uVar19 & uVar4) +\u000a               ((uVar19 * 0x400 | uVar19 >> 0x16) ^\u000a               (uVar19 * 0x80000 | uVar19 >> 0xd) ^ (uVar19 * 0x40000000 | uVar19 >> 2)) + iVar29;\u000a      local_7c = uVar11 + local_98[0] +\u000a                 (local_84 >> 10 ^ (local_84 * 0x2000 | local_84 >> 0x13) ^\u000a                 (local_84 * 0x8000 | local_84 >> 0x11)) +\u000a                 (uVar12 >> 3 ^ (uVar12 * 0x4000 | uVar12 >> 0x12) ^\u000a                 (uVar12 * 0x2000000 | uVar12 >> 7));\u000a      iVar29 = ((uVar24 * 0x80 | uVar24 >> 0x19) ^\u000a               (uVar24 * 0x200000 | uVar24 >> 0xb) ^ (uVar24 * 0x4000000 | uVar24 >> 6)) +\u000a               0x682e6ff3 + local_7c + uVar17 + ((uVar27 ^ uVar20) & uVar24 ^ uVar20);\u000a      uVar1 = uVar1 + iVar29;\u000a      uVar5 = ((uVar30 | uVar19) & uVar4 | uVar30 & uVar19) +\u000a              ((uVar30 * 0x400 | uVar30 >> 0x16) ^\u000a              (uVar30 * 0x80000 | uVar30 >> 0xd) ^ (uVar30 * 0x40000000 | uVar30 >> 2)) + iVar29;\u000a      local_78 = uVar12 + local_98[1] +\u000a                 (local_80 >> 10 ^ (local_80 * 0x2000 | local_80 >> 0x13) ^\u000a                 (local_80 * 0x8000 | local_80 >> 0x11)) +\u000a                 (uVar31 >> 3 ^ (uVar31 * 0x4000 | uVar31 >> 0x12) ^\u000a                 (uVar31 * 0x2000000 | uVar31 >> 7));\u000a      iVar29 = ((uVar1 * 0x80 | uVar1 >> 0x19) ^\u000a               (uVar1 * 0x200000 | uVar1 >> 0xb) ^ (uVar1 * 0x4000000 | uVar1 >> 6)) + 0x748f82ee +\u000a               local_78 + uVar20 + ((uVar24 ^ uVar27) & uVar1 ^ uVar27);\u000a      uVar4 = uVar4 + iVar29;\u000a      uVar34 = ((uVar5 | uVar30) & uVar19 | uVar5 & uVar30) +\u000a               ((uVar5 * 0x400 | uVar5 >> 0x16) ^\u000a               (uVar5 * 0x80000 | uVar5 >> 0xd) ^ (uVar5 * 0x40000000 | uVar5 >> 2)) + iVar29;\u000a      local_74 = uVar31 + local_98[2] +\u000a                 (local_7c >> 10 ^ (local_7c * 0x2000 | local_7c >> 0x13) ^\u000a                 (local_7c * 0x8000 | local_7c >> 0x11)) +\u000a                 (uVar13 >> 3 ^ (uVar13 * 0x4000 | uVar13 >> 0x12) ^\u000a                 (uVar13 * 0x2000000 | uVar13 >> 7));\u000a      iVar29 = ((uVar4 * 0x80 | uVar4 >> 0x19) ^\u000a               (uVar4 * 0x200000 | uVar4 >> 0xb) ^ (uVar4 * 0x4000000 | uVar4 >> 6)) + 0x78a5636f +\u000a               local_74 + uVar27 + ((uVar1 ^ uVar24) & uVar4 ^ uVar24);\u000a      uVar19 = uVar19 + iVar29;\u000a      uVar27 = ((uVar34 | uVar5) & uVar30 | uVar34 & uVar5) +\u000a               ((uVar34 * 0x400 | uVar34 >> 0x16) ^\u000a               (uVar34 * 0x80000 | uVar34 >> 0xd) ^ (uVar34 * 0x40000000 | uVar34 >> 2)) + iVar29;\u000a      local_70 = uVar13 + local_98[3] +\u000a                 (local_78 >> 10 ^ (local_78 * 0x2000 | local_78 >> 0x13) ^\u000a                 (local_78 * 0x8000 | local_78 >> 0x11)) +\u000a                 (uVar2 >> 3 ^ (uVar2 * 0x4000 | uVar2 >> 0x12) ^ (uVar2 * 0x2000000 | uVar2 >> 7));\u000a      iVar29 = ((uVar19 * 0x80 | uVar19 >> 0x19) ^\u000a               (uVar19 * 0x200000 | uVar19 >> 0xb) ^ (uVar19 * 0x4000000 | uVar19 >> 6)) +\u000a               0x84c87814 + local_70 + uVar24 + ((uVar4 ^ uVar1) & uVar19 ^ uVar1);\u000a      uVar30 = uVar30 + iVar29;\u000a      uVar24 = ((uVar27 | uVar34) & uVar5 | uVar27 & uVar34) +\u000a               ((uVar27 * 0x400 | uVar27 >> 0x16) ^\u000a               (uVar27 * 0x80000 | uVar27 >> 0xd) ^ (uVar27 * 0x40000000 | uVar27 >> 2)) + iVar29;\u000a      local_6c = uVar2 + local_88 +\u000a                 (local_74 >> 10 ^ (local_74 * 0x2000 | local_74 >> 0x13) ^\u000a                 (local_74 * 0x8000 | local_74 >> 0x11)) +\u000a                 (uVar3 >> 3 ^ (uVar3 * 0x4000 | uVar3 >> 0x12) ^ (uVar3 * 0x2000000 | uVar3 >> 7));\u000a      iVar29 = ((uVar30 * 0x80 | uVar30 >> 0x19) ^\u000a               (uVar30 * 0x200000 | uVar30 >> 0xb) ^ (uVar30 * 0x4000000 | uVar30 >> 6)) +\u000a               0x8cc70208 + local_6c + uVar1 + ((uVar19 ^ uVar4) & uVar30 ^ uVar4);\u000a      uVar5 = uVar5 + iVar29;\u000a      uVar2 = ((uVar24 | uVar27) & uVar34 | uVar24 & uVar27) +\u000a              ((uVar24 * 0x400 | uVar24 >> 0x16) ^\u000a              (uVar24 * 0x80000 | uVar24 >> 0xd) ^ (uVar24 * 0x40000000 | uVar24 >> 2)) + iVar29;\u000a      x[0] = uVar3 + local_84 +\u000a             (local_70 >> 10 ^ (local_70 * 0x2000 | local_70 >> 0x13) ^\u000a             (local_70 * 0x8000 | local_70 >> 0x11)) +\u000a             (uVar35 >> 3 ^ (uVar35 * 0x4000 | uVar35 >> 0x12) ^ (uVar35 * 0x2000000 | uVar35 >> 7))\u000a      ;\u000a      iVar29 = ((uVar5 * 0x80 | uVar5 >> 0x19) ^\u000a               (uVar5 * 0x200000 | uVar5 >> 0xb) ^ (uVar5 * 0x4000000 | uVar5 >> 6)) + 0x90befffa +\u000a               x[0] + uVar4 + ((uVar30 ^ uVar19) & uVar5 ^ uVar19);\u000a      uVar34 = uVar34 + iVar29;\u000a      uVar3 = ((uVar2 | uVar24) & uVar27 | uVar2 & uVar24) +\u000a              ((uVar2 * 0x400 | uVar2 >> 0x16) ^\u000a              (uVar2 * 0x80000 | uVar2 >> 0xd) ^ (uVar2 * 0x40000000 | uVar2 >> 2)) + iVar29;\u000a      x[1] = uVar35 + local_80 +\u000a             (local_6c >> 10 ^ (local_6c * 0x2000 | local_6c >> 0x13) ^\u000a             (local_6c * 0x8000 | local_6c >> 0x11)) +\u000a             (uVar16 >> 3 ^ (uVar16 * 0x4000 | uVar16 >> 0x12) ^ (uVar16 * 0x2000000 | uVar16 >> 7))\u000a      ;\u000a      iVar29 = ((uVar34 * 0x80 | uVar34 >> 0x19) ^\u000a               (uVar34 * 0x200000 | uVar34 >> 0xb) ^ (uVar34 * 0x4000000 | uVar34 >> 6)) +\u000a               0xa4506ceb + x[1] + uVar19 + ((uVar5 ^ uVar30) & uVar34 ^ uVar30);\u000a      uVar27 = uVar27 + iVar29;\u000a      uVar1 = ((uVar3 | uVar2) & uVar24 | uVar3 & uVar2) +\u000a              ((uVar3 * 0x400 | uVar3 >> 0x16) ^\u000a              (uVar3 * 0x80000 | uVar3 >> 0xd) ^ (uVar3 * 0x40000000 | uVar3 >> 2)) + iVar29;\u000a      x[2] = uVar16 + local_7c +\u000a             (x[0] >> 10 ^ (x[0] * 0x2000 | x[0] >> 0x13) ^ (x[0] * 0x8000 | x[0] >> 0x11)) +\u000a             (uVar7 >> 3 ^ (uVar7 * 0x4000 | uVar7 >> 0x12) ^ (uVar7 * 0x2000000 | uVar7 >> 7));\u000a      iVar29 = ((uVar27 * 0x80 | uVar27 >> 0x19) ^\u000a               (uVar27 * 0x200000 | uVar27 >> 0xb) ^ (uVar27 * 0x4000000 | uVar27 >> 6)) +\u000a               0xbef9a3f7 + x[2] + uVar30 + ((uVar34 ^ uVar5) & uVar27 ^ uVar5);\u000a      uVar24 = uVar24 + iVar29;\u000a      uVar4 = ((uVar1 | uVar3) & uVar2 | uVar1 & uVar3) +\u000a              ((uVar1 * 0x400 | uVar1 >> 0x16) ^\u000a              (uVar1 * 0x80000 | uVar1 >> 0xd) ^ (uVar1 * 0x40000000 | uVar1 >> 2)) + iVar29;\u000a      x[3] = uVar7 + local_78 +\u000a             (x[1] >> 10 ^ (x[1] * 0x2000 | x[1] >> 0x13) ^ (x[1] * 0x8000 | x[1] >> 0x11)) +\u000a             (local_98[0] >> 3 ^ (local_98[0] * 0x4000 | local_98[0] >> 0x12) ^\u000a             (local_98[0] * 0x2000000 | local_98[0] >> 7));\u000a      iVar29 = ((uVar24 * 0x80 | uVar24 >> 0x19) ^\u000a               (uVar24 * 0x200000 | uVar24 >> 0xb) ^ (uVar24 * 0x4000000 | uVar24 >> 6)) +\u000a               0xc67178f2 + x[3] + uVar5 + ((uVar27 ^ uVar34) & uVar24 ^ uVar34);\u000a      uVar15 = ((uVar4 | uVar1) & uVar3 | uVar4 & uVar1) + ctx->state[0] +\u000a               ((uVar4 * 0x400 | uVar4 >> 0x16) ^\u000a               (uVar4 * 0x80000 | uVar4 >> 0xd) ^ (uVar4 * 0x40000000 | uVar4 >> 2)) + iVar29;\u000a      ctx->state[0] = uVar15;\u000a      uVar9 = uVar4 + ctx->state[1];\u000a      ctx->state[1] = uVar9;\u000a      uVar18 = uVar1 + ctx->state[2];\u000a      ctx->state[2] = uVar18;\u000a      uVar26 = uVar3 + ctx->state[3];\u000a      ctx->state[3] = uVar26;\u000a      uVar23 = uVar2 + ctx->state[4] + iVar29;\u000a      buffer = (void *)((long)buffer + 0x40);\u000a      ctx->state[4] = uVar23;\u000a      uVar37 = uVar24 + ctx->state[5];\u000a      ctx->state[5] = uVar37;\u000a      uVar21 = uVar27 + ctx->state[6];\u000a      ctx->state[6] = uVar21;\u000a      uVar33 = uVar34 + ctx->state[7];\u000a      ctx->state[7] = uVar33;\u000a    } while (buffer < pvVar6);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1053
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV RCX,RSI\nAND RCX,-0x4\nADD RCX,RDI\nMOV EBP,dword ptr [RDX]\nMOV EBX,dword ptr [RDX + 0x4]\nMOV R9D,dword ptr [RDX + 0x8]\nMOV R12D,dword ptr [RDX + 0xc]\nMOV R11D,dword ptr [RDX + 0x10]\nMOV R15D,dword ptr [RDX + 0x14]\nMOV R10D,dword ptr [RDX + 0x18]\nMOV R14D,dword ptr [RDX + 0x1c]\nMOV R8,RSI\nSHR R8,0x20\nMOV EAX,dword ptr [RDX + 0x20]\nADD EAX,ESI\nMOV dword ptr [RDX + 0x20],EAX\nADC R8D,0x0\nMOV qword ptr [RSP + -0x18],RDX\nADD dword ptr [RDX + 0x24],R8D\nMOV qword ptr [RSP + -0x20],RCX\nCMP RDI,RCX\nJNC 0x004053ec\nNOP dword ptr [RAX + RAX*0x1]\nXOR EDX,EDX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV ESI,dword ptr [RDI + RDX*0x4]\nBSWAP ESI\nMOV dword ptr [RSP + RDX*0x4 + -0x68],ESI\nINC RDX\nCMP RDX,0x10\nJNZ 0x004030f0\nMOV EDX,EBP\nROL EDX,0x1e\nMOV ESI,EBP\nROL ESI,0x13\nXOR ESI,EDX\nMOV EDX,EBP\nROL EDX,0xa\nXOR EDX,ESI\nMOV EAX,EBP\nAND EAX,EBX\nMOV ESI,EBP\nOR ESI,EBX\nAND ESI,R9D\nOR ESI,EAX\nADD ESI,EDX\nMOV EAX,R11D\nROL EAX,0x1a\nMOV EDX,R11D\nROL EDX,0x15\nXOR EDX,EAX\nMOV EAX,R11D\nROL EAX,0x7\nXOR EAX,EDX\nMOV EDX,R10D\nXOR EDX,R15D\nAND EDX,R11D\nXOR EDX,R10D\nADD R14D,EAX\nADD R14D,EDX\nMOV ECX,dword ptr [RSP + -0x68]\nMOV qword ptr [RSP + -0x10],RCX\nMOV R8D,dword ptr [RSP + -0x64]\nLEA EAX,[R14 + RCX*0x1]\nLEA EDX,[0x428a2f98 + RCX + R14*0x1]\nLEA R14D,[0x428a2f98 + R12 + RAX*0x1]\nADD EDX,ESI\nMOV EAX,EDX\nROL EAX,0x1e\nMOV ESI,EDX\nROL ESI,0x13\nXOR ESI,EAX\nMOV EAX,EDX\nROL EAX,0xa\nXOR EAX,ESI\nMOV ECX,EDX\nAND ECX,EBP\nMOV ESI,EDX\nOR ESI,EBP\nAND ESI,EBX\nOR ESI,ECX\nADD ESI,EAX\nMOV EAX,R14D\nROL EAX,0x1a\nMOV ECX,R14D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R14D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R15D\nXOR ECX,R11D\nAND ECX,R14D\nXOR ECX,R15D\nADD R10D,R8D\nADD R10D,ECX\nLEA ECX,[R10 + RAX*0x1]\nLEA R12D,[0x71374491 + RAX + R10*0x1]\nLEA R9D,[0x71374491 + R9 + RCX*0x1]\nADD R12D,ESI\nMOV EAX,R12D\nROL EAX,0x1e\nMOV ECX,R12D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R12D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R12D\nAND ECX,EDX\nMOV ESI,R12D\nOR ESI,EDX\nAND ESI,EBP\nOR ESI,ECX\nADD ESI,EAX\nMOV EAX,R9D\nROL EAX,0x1a\nMOV ECX,R9D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R9D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R14D\nXOR ECX,R11D\nAND ECX,R9D\nXOR ECX,R11D\nADD R15D,dword ptr [RSP + -0x60]\nADD R15D,ECX\nLEA ECX,[R15 + RAX*0x1]\nLEA R10D,[-0x4a3f0431 + RAX + R15*0x1]\nLEA R15D,[-0x4a3f0431 + RBX + RCX*0x1]\nADD R10D,ESI\nMOV EAX,R10D\nROL EAX,0x1e\nMOV ESI,R10D\nROL ESI,0x13\nXOR ESI,EAX\nMOV EAX,R10D\nROL EAX,0xa\nXOR EAX,ESI\nMOV qword ptr [RSP + -0x8],RDI\nMOV EDI,R10D\nAND EDI,R12D\nMOV ESI,R10D\nOR ESI,R12D\nAND ESI,EDX\nOR ESI,EDI\nADD ESI,EAX\nMOV EAX,R15D\nROL EAX,0x1a\nMOV EDI,R15D\nROL EDI,0x15\nXOR EDI,EAX\nMOV EAX,R15D\nROL EAX,0x7\nXOR EAX,EDI\nMOV EDI,R9D\nXOR EDI,R14D\nAND EDI,R15D\nXOR EDI,R14D\nADD R11D,dword ptr [RSP + -0x5c]\nADD R11D,EDI\nLEA EDI,[R11 + RAX*0x1]\nLEA R13D,[-0x164a245b + RAX + R11*0x1]\nLEA EAX,[-0x164a245b + RBP + RDI*0x1]\nADD R13D,ESI\nMOV ESI,R13D\nROL ESI,0x1e\nMOV EDI,R13D\nROL EDI,0x13\nXOR EDI,ESI\nMOV ESI,R13D\nROL ESI,0xa\nXOR ESI,EDI\nMOV EDI,R13D\nAND EDI,R10D\nMOV EBX,R13D\nOR EBX,R10D\nAND EBX,R12D\nOR EBX,EDI\nADD EBX,ESI\nMOV ESI,EAX\nROL ESI,0x1a\nMOV EDI,EAX\nROL EDI,0x15\nXOR EDI,ESI\nMOV ESI,EAX\nROL ESI,0x7\nXOR ESI,EDI\nMOV EDI,R15D\nXOR EDI,R9D\nAND EDI,EAX\nXOR EDI,R9D\nADD R14D,dword ptr [RSP + -0x58]\nADD R14D,EDI\nLEA ESI,[0x3956c25b + RSI + R14*0x1]\nADD EDX,ESI\nADD EBX,ESI\nMOV ESI,EBX\nROL ESI,0x1e\nMOV EDI,EBX\nROL EDI,0x13\nXOR EDI,ESI\nMOV EBP,EBX\nROL EBP,0xa\nXOR EBP,EDI\nMOV EDI,EBX\nAND EDI,R13D\nMOV ESI,EBX\nOR ESI,R13D\nAND ESI,R10D\nOR ESI,EDI\nADD ESI,EBP\nMOV EDI,EDX\nROL EDI,0x1a\nMOV EBP,EDX\nROL EBP,0x15\nXOR EBP,EDI\nMOV EDI,EDX\nROL EDI,0x7\nXOR EDI,EBP\nMOV EBP,EAX\nXOR EBP,R15D\nAND EBP,EDX\nXOR EBP,R15D\nADD R9D,dword ptr [RSP + -0x54]\nADD R9D,EBP\nLEA EDI,[0x59f111f1 + RDI + R9*0x1]\nADD R12D,EDI\nADD ESI,EDI\nMOV EDI,ESI\nROL EDI,0x1e\nMOV EBP,ESI\nROL EBP,0x13\nXOR EBP,EDI\nMOV EDI,ESI\nROL EDI,0xa\nXOR EDI,EBP\nMOV ECX,ESI\nAND ECX,EBX\nMOV EBP,ESI\nOR EBP,EBX\nAND EBP,R13D\nOR EBP,ECX\nADD EBP,EDI\nMOV ECX,R12D\nROL ECX,0x1a\nMOV EDI,R12D\nROL EDI,0x15\nXOR EDI,ECX\nMOV ECX,R12D\nROL ECX,0x7\nXOR ECX,EDI\nMOV EDI,EDX\nXOR EDI,EAX\nAND EDI,R12D\nXOR EDI,EAX\nADD R15D,dword ptr [RSP + -0x50]\nADD R15D,EDI\nLEA ECX,[-0x6dc07d5c + RCX + R15*0x1]\nADD R10D,ECX\nADD EBP,ECX\nMOV ECX,EBP\nROL ECX,0x1e\nMOV EDI,EBP\nROL EDI,0x13\nXOR EDI,ECX\nMOV ECX,EBP\nROL ECX,0xa\nXOR ECX,EDI\nMOV EDI,EBP\nAND EDI,ESI\nMOV R14D,EBP\nOR R14D,ESI\nAND R14D,EBX\nOR R14D,EDI\nADD R14D,ECX\nMOV ECX,R10D\nROL ECX,0x1a\nMOV EDI,R10D\nROL EDI,0x15\nXOR EDI,ECX\nMOV ECX,R10D\nROL ECX,0x7\nXOR ECX,EDI\nMOV EDI,R12D\nXOR EDI,EDX\nAND EDI,R10D\nXOR EDI,EDX\nADD EAX,dword ptr [RSP + -0x4c]\nADD EAX,EDI\nLEA EAX,[-0x54e3a12b + RCX + RAX*0x1]\nADD R13D,EAX\nADD R14D,EAX\nMOV EAX,R14D\nROL EAX,0x1e\nMOV ECX,R14D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R14D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R14D\nAND ECX,EBP\nMOV R15D,R14D\nOR R15D,EBP\nAND R15D,ESI\nOR R15D,ECX\nADD R15D,EAX\nMOV EAX,R13D\nROL EAX,0x1a\nMOV ECX,R13D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R13D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R10D\nXOR ECX,R12D\nAND ECX,R13D\nXOR ECX,R12D\nADD EDX,dword ptr [RSP + -0x48]\nADD EDX,ECX\nLEA EAX,[-0x27f85568 + RAX + RDX*0x1]\nADD EBX,EAX\nADD R15D,EAX\nMOV EAX,R15D\nROL EAX,0x1e\nMOV ECX,R15D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R15D\nROL EAX,0xa\nXOR EAX,ECX\nMOV EDX,R15D\nAND EDX,R14D\nMOV ECX,R15D\nOR ECX,R14D\nAND ECX,EBP\nOR ECX,EDX\nADD ECX,EAX\nMOV EAX,EBX\nROL EAX,0x1a\nMOV EDX,EBX\nROL EDX,0x15\nXOR EDX,EAX\nMOV EAX,EBX\nROL EAX,0x7\nXOR EAX,EDX\nMOV EDX,R13D\nXOR EDX,R10D\nAND EDX,EBX\nXOR EDX,R10D\nMOV R9D,dword ptr [RSP + -0x44]\nADD R12D,R9D\nADD R12D,EDX\nLEA EAX,[0x12835b01 + RAX + R12*0x1]\nADD ESI,EAX\nADD ECX,EAX\nMOV EAX,ECX\nROL EAX,0x1e\nMOV EDX,ECX\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,ECX\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,ECX\nAND EDX,R15D\nMOV R12D,ECX\nOR R12D,R15D\nAND R12D,R14D\nOR R12D,EDX\nADD R12D,EAX\nMOV EAX,ESI\nROL EAX,0x1a\nMOV EDX,ESI\nROL EDX,0x15\nXOR EDX,EAX\nMOV EAX,ESI\nROL EAX,0x7\nXOR EAX,EDX\nMOV EDX,EBX\nXOR EDX,R13D\nAND EDX,ESI\nXOR EDX,R13D\nADD R10D,dword ptr [RSP + -0x40]\nADD R10D,EDX\nLEA EAX,[0x243185be + RAX + R10*0x1]\nADD EBP,EAX\nADD R12D,EAX\nMOV EAX,R12D\nROL EAX,0x1e\nMOV EDX,R12D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EDI,R12D\nROL EDI,0xa\nXOR EDI,EDX\nMOV EDX,R12D\nAND EDX,ECX\nMOV EAX,R12D\nOR EAX,ECX\nAND EAX,R15D\nOR EAX,EDX\nADD EAX,EDI\nMOV EDX,EBP\nROL EDX,0x1a\nMOV EDI,EBP\nROL EDI,0x15\nXOR EDI,EDX\nMOV EDX,EBP\nROL EDX,0x7\nXOR EDX,EDI\nMOV EDI,ESI\nXOR EDI,EBX\nAND EDI,EBP\nXOR EDI,EBX\nADD R13D,dword ptr [RSP + -0x3c]\nADD R13D,EDI\nLEA EDX,[0x550c7dc3 + RDX + R13*0x1]\nADD R14D,EDX\nADD EAX,EDX\nMOV EDX,EAX\nROL EDX,0x1e\nMOV EDI,EAX\nROL EDI,0x13\nXOR EDI,EDX\nMOV EDX,EAX\nROL EDX,0xa\nXOR EDX,EDI\nMOV EDI,EAX\nAND EDI,R12D\nMOV R10D,EAX\nOR R10D,R12D\nAND R10D,ECX\nOR R10D,EDI\nADD R10D,EDX\nMOV EDX,R14D\nROL EDX,0x1a\nMOV EDI,R14D\nROL EDI,0x15\nXOR EDI,EDX\nMOV EDX,R14D\nROL EDX,0x7\nXOR EDX,EDI\nMOV EDI,EBP\nXOR EDI,ESI\nAND EDI,R14D\nXOR EDI,ESI\nADD EBX,dword ptr [RSP + -0x38]\nADD EBX,EDI\nLEA EDX,[0x72be5d74 + RDX + RBX*0x1]\nADD R15D,EDX\nADD R10D,EDX\nMOV EDX,R10D\nROL EDX,0x1e\nMOV EDI,R10D\nROL EDI,0x13\nXOR EDI,EDX\nMOV EDX,R10D\nROL EDX,0xa\nXOR EDX,EDI\nMOV EDI,R10D\nAND EDI,EAX\nMOV R11D,R10D\nOR R11D,EAX\nAND R11D,R12D\nOR R11D,EDI\nADD R11D,EDX\nMOV EDX,R15D\nROL EDX,0x1a\nMOV EDI,R15D\nROL EDI,0x15\nXOR EDI,EDX\nMOV EDX,R15D\nROL EDX,0x7\nXOR EDX,EDI\nMOV EDI,R14D\nXOR EDI,EBP\nAND EDI,R15D\nXOR EDI,EBP\nADD ESI,dword ptr [RSP + -0x34]\nADD ESI,EDI\nLEA EDX,[-0x7f214e02 + RDX + RSI*0x1]\nADD ECX,EDX\nADD R11D,EDX\nMOV EDX,R11D\nROL EDX,0x1e\nMOV ESI,R11D\nROL ESI,0x13\nXOR ESI,EDX\nMOV EDX,R11D\nROL EDX,0xa\nXOR EDX,ESI\nMOV ESI,R11D\nAND ESI,R10D\nMOV EBX,R11D\nOR EBX,R10D\nAND EBX,EAX\nOR EBX,ESI\nADD EBX,EDX\nMOV EDX,ECX\nROL EDX,0x1a\nMOV ESI,ECX\nROL ESI,0x15\nXOR ESI,EDX\nMOV EDX,ECX\nROL EDX,0x7\nXOR EDX,ESI\nMOV EDI,R15D\nXOR EDI,R14D\nAND EDI,ECX\nXOR EDI,R14D\nMOV ESI,dword ptr [RSP + -0x30]\nADD EBP,ESI\nADD EBP,EDI\nLEA EDX,[-0x6423f959 + RDX + RBP*0x1]\nADD R12D,EDX\nADD EBX,EDX\nMOV EDX,EBX\nROL EDX,0x1e\nMOV EDI,EBX\nROL EDI,0x13\nXOR EDI,EDX\nMOV EDX,EBX\nROL EDX,0xa\nXOR EDX,EDI\nMOV EDI,EBX\nAND EDI,R11D\nMOV R13D,EBX\nOR R13D,R11D\nAND R13D,R10D\nOR R13D,EDI\nADD R13D,EDX\nMOV EDX,R12D\nROL EDX,0x1a\nMOV EDI,R12D\nROL EDI,0x15\nXOR EDI,EDX\nMOV EDX,R12D\nROL EDX,0x7\nXOR EDX,EDI\nMOV EDI,ECX\nXOR EDI,R15D\nAND EDI,R12D\nXOR EDI,R15D\nADD R14D,dword ptr [RSP + -0x2c]\nADD R14D,EDI\nLEA EDX,[-0x3e640e8c + RDX + R14*0x1]\nADD EAX,EDX\nADD R13D,EDX\nMOV EDX,R13D\nROL EDX,0x1e\nMOV EDI,R13D\nROL EDI,0x13\nXOR EDI,EDX\nMOV EDX,R13D\nROL EDX,0xa\nXOR EDX,EDI\nMOV EDI,R13D\nAND EDI,EBX\nMOV R14D,R13D\nOR R14D,EBX\nAND R14D,R11D\nOR R14D,EDI\nADD R14D,EDX\nMOV EDX,EAX\nROL EDX,0x1a\nMOV EDI,EAX\nROL EDI,0x15\nXOR EDI,EDX\nMOV EBP,EAX\nROL EBP,0x7\nXOR EBP,EDI\nMOV EDX,ESI\nROL EDX,0xd\nMOV EDI,ESI\nSHR ESI,0xa\nXOR ESI,EDX\nROL EDI,0xf\nXOR ESI,EDI\nMOV EDX,R8D\nROL EDX,0xe\nMOV EDI,R8D\nSHR R8D,0x3\nXOR R8D,EDX\nROL EDI,0x19\nXOR R8D,EDI\nMOV EDX,R12D\nXOR EDX,ECX\nAND EDX,EAX\nXOR EDX,ECX\nADD R8D,dword ptr [RSP + -0x10]\nADD R8D,R9D\nADD R8D,ESI\nMOV dword ptr [RSP + -0x68],R8D\nADD R8D,R15D\nADD R8D,EDX\nLEA EDX,[-0x1b64963f + RBP + R8*0x1]\nADD R10D,EDX\nADD R14D,EDX\nMOV EDX,R14D\nROL EDX,0x1e\nMOV ESI,R14D\nROL ESI,0x13\nXOR ESI,EDX\nMOV EDX,R14D\nROL EDX,0xa\nXOR EDX,ESI\nMOV ESI,R14D\nAND ESI,R13D\nMOV R15D,R14D\nOR R15D,R13D\nAND R15D,EBX\nOR R15D,ESI\nADD R15D,EDX\nMOV EDX,R10D\nROL EDX,0x1a\nMOV ESI,R10D\nROL ESI,0x15\nXOR ESI,EDX\nMOV R8D,R10D\nROL R8D,0x7\nXOR R8D,ESI\nMOV ESI,EAX\nXOR ESI,R12D\nAND ESI,R10D\nXOR ESI,R12D\nMOV EDI,dword ptr [RSP + -0x2c]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBP\nMOV EDX,dword ptr [RSP + -0x60]\nMOV R9D,EDX\nMOV EBP,EDX\nROL EBP,0xe\nSHR EDX,0x3\nXOR EDX,EBP\nMOV EBP,dword ptr [RSP + -0x64]\nROL R9D,0x19\nXOR EDX,R9D\nADD EBP,dword ptr [RSP + -0x40]\nADD EBP,EDI\nADD EBP,EDX\nMOV dword ptr [RSP + -0x64],EBP\nADD EBP,ECX\nADD EBP,ESI\nLEA ECX,[-0x1041b87a + R8 + RBP*0x1]\nADD R11D,ECX\nADD R15D,ECX\nMOV ECX,R15D\nROL ECX,0x1e\nMOV EDX,R15D\nROL EDX,0x13\nXOR EDX,ECX\nMOV ECX,R15D\nROL ECX,0xa\nXOR ECX,EDX\nMOV EDX,R15D\nAND EDX,R14D\nMOV R8D,R15D\nOR R8D,R14D\nAND R8D,R13D\nOR R8D,EDX\nADD R8D,ECX\nMOV ECX,R11D\nROL ECX,0x1a\nMOV EDX,R11D\nROL EDX,0x15\nXOR EDX,ECX\nMOV R9D,R11D\nROL R9D,0x7\nXOR R9D,EDX\nMOV EDX,R10D\nXOR EDX,EAX\nAND EDX,R11D\nXOR EDX,EAX\nMOV ESI,dword ptr [RSP + -0x68]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x5c]\nMOV EBP,EDI\nMOV ECX,EDI\nROL ECX,0xe\nSHR EDI,0x3\nXOR EDI,ECX\nMOV ECX,dword ptr [RSP + -0x60]\nROL EBP,0x19\nXOR EDI,EBP\nADD ECX,dword ptr [RSP + -0x3c]\nADD ECX,ESI\nADD ECX,EDI\nMOV dword ptr [RSP + -0x60],ECX\nADD ECX,R12D\nADD ECX,EDX\nLEA ECX,[0xfc19dc6 + R9 + RCX*0x1]\nADD EBX,ECX\nADD R8D,ECX\nMOV ECX,R8D\nROL ECX,0x1e\nMOV EDX,R8D\nROL EDX,0x13\nXOR EDX,ECX\nMOV ECX,R8D\nROL ECX,0xa\nXOR ECX,EDX\nMOV EDX,R8D\nAND EDX,R15D\nMOV R12D,R8D\nOR R12D,R15D\nAND R12D,R14D\nOR R12D,EDX\nADD R12D,ECX\nMOV ECX,EBX\nROL ECX,0x1a\nMOV EDX,EBX\nROL EDX,0x15\nXOR EDX,ECX\nMOV R9D,EBX\nROL R9D,0x7\nXOR R9D,EDX\nMOV EDX,R11D\nXOR EDX,R10D\nAND EDX,EBX\nXOR EDX,R10D\nMOV ESI,dword ptr [RSP + -0x64]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x58]\nMOV EBP,EDI\nMOV ECX,EDI\nROL ECX,0xe\nSHR EDI,0x3\nXOR EDI,ECX\nMOV ECX,dword ptr [RSP + -0x5c]\nROL EBP,0x19\nXOR EDI,EBP\nADD ECX,dword ptr [RSP + -0x38]\nADD ECX,ESI\nADD ECX,EDI\nMOV dword ptr [RSP + -0x5c],ECX\nADD ECX,EAX\nADD ECX,EDX\nLEA EAX,[0x240ca1cc + R9 + RCX*0x1]\nADD R13D,EAX\nADD R12D,EAX\nMOV EAX,R12D\nROL EAX,0x1e\nMOV ECX,R12D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R12D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R12D\nAND ECX,R8D\nMOV R9D,R12D\nOR R9D,R8D\nAND R9D,R15D\nOR R9D,ECX\nADD R9D,EAX\nMOV EAX,R13D\nROL EAX,0x1a\nMOV ECX,R13D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R13D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,EBX\nXOR ECX,R11D\nAND ECX,R13D\nXOR ECX,R11D\nMOV EDX,dword ptr [RSP + -0x60]\nMOV ESI,EDX\nROL ESI,0xf\nMOV EDI,EDX\nROL EDI,0xd\nSHR EDX,0xa\nXOR EDX,EDI\nXOR EDX,ESI\nMOV ESI,dword ptr [RSP + -0x54]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x58]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x34]\nADD EBP,EDX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x58],EBP\nADD EBP,R10D\nADD EBP,ECX\nLEA EAX,[0x2de92c6f + RAX + RBP*0x1]\nADD R14D,EAX\nADD R9D,EAX\nMOV EAX,R9D\nROL EAX,0x1e\nMOV ECX,R9D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R9D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R9D\nAND ECX,R12D\nMOV R10D,R9D\nOR R10D,R12D\nAND R10D,R8D\nOR R10D,ECX\nADD R10D,EAX\nMOV EAX,R14D\nROL EAX,0x1a\nMOV ECX,R14D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R14D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R13D\nXOR ECX,EBX\nAND ECX,R14D\nXOR ECX,EBX\nMOV EDX,dword ptr [RSP + -0x5c]\nMOV ESI,EDX\nROL ESI,0xf\nMOV EDI,EDX\nROL EDI,0xd\nSHR EDX,0xa\nXOR EDX,EDI\nXOR EDX,ESI\nMOV ESI,dword ptr [RSP + -0x50]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x54]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x30]\nADD EBP,EDX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x54],EBP\nADD EBP,R11D\nADD EBP,ECX\nLEA EAX,[0x4a7484aa + RAX + RBP*0x1]\nADD R15D,EAX\nADD R10D,EAX\nMOV EAX,R10D\nROL EAX,0x1e\nMOV ECX,R10D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R10D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R10D\nAND ECX,R9D\nMOV R11D,R10D\nOR R11D,R9D\nAND R11D,R12D\nOR R11D,ECX\nADD R11D,EAX\nMOV EAX,R15D\nROL EAX,0x1a\nMOV ECX,R15D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R15D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R14D\nXOR ECX,R13D\nAND ECX,R15D\nXOR ECX,R13D\nMOV EDX,dword ptr [RSP + -0x58]\nMOV ESI,EDX\nROL ESI,0xf\nMOV EDI,EDX\nROL EDI,0xd\nSHR EDX,0xa\nXOR EDX,EDI\nXOR EDX,ESI\nMOV ESI,dword ptr [RSP + -0x4c]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x50]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x2c]\nADD EBP,EDX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x50],EBP\nADD EBP,EBX\nADD EBP,ECX\nLEA EAX,[0x5cb0a9dc + RAX + RBP*0x1]\nADD R8D,EAX\nADD R11D,EAX\nMOV EAX,R11D\nROL EAX,0x1e\nMOV ECX,R11D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R11D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R11D\nAND ECX,R10D\nMOV EBX,R11D\nOR EBX,R10D\nAND EBX,R9D\nOR EBX,ECX\nADD EBX,EAX\nMOV EAX,R8D\nROL EAX,0x1a\nMOV ECX,R8D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R8D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R15D\nXOR ECX,R14D\nAND ECX,R8D\nXOR ECX,R14D\nMOV EDX,dword ptr [RSP + -0x54]\nMOV ESI,EDX\nROL ESI,0xf\nMOV EDI,EDX\nROL EDI,0xd\nSHR EDX,0xa\nXOR EDX,EDI\nXOR EDX,ESI\nMOV ESI,dword ptr [RSP + -0x48]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x4c]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x68]\nADD EBP,EDX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x4c],EBP\nADD EBP,R13D\nADD EBP,ECX\nLEA EAX,[0x76f988da + RAX + RBP*0x1]\nADD R12D,EAX\nADD EBX,EAX\nMOV EAX,EBX\nROL EAX,0x1e\nMOV ECX,EBX\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,EBX\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,EBX\nAND ECX,R11D\nMOV R13D,EBX\nOR R13D,R11D\nAND R13D,R10D\nOR R13D,ECX\nADD R13D,EAX\nMOV EAX,R12D\nROL EAX,0x1a\nMOV ECX,R12D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R12D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R8D\nXOR ECX,R15D\nAND ECX,R12D\nXOR ECX,R15D\nMOV EDX,dword ptr [RSP + -0x50]\nMOV ESI,EDX\nROL ESI,0xf\nMOV EDI,EDX\nROL EDI,0xd\nSHR EDX,0xa\nXOR EDX,EDI\nXOR EDX,ESI\nMOV ESI,dword ptr [RSP + -0x44]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x48]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x64]\nADD EBP,EDX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x48],EBP\nADD EBP,R14D\nADD EBP,ECX\nLEA EAX,[-0x67c1aeae + RAX + RBP*0x1]\nADD R9D,EAX\nADD R13D,EAX\nMOV EAX,R13D\nROL EAX,0x1e\nMOV ECX,R13D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R13D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R13D\nAND ECX,EBX\nMOV R14D,R13D\nOR R14D,EBX\nAND R14D,R11D\nOR R14D,ECX\nADD R14D,EAX\nMOV EAX,R9D\nROL EAX,0x1a\nMOV ECX,R9D\nROL ECX,0x15\nXOR ECX,EAX\nMOV EAX,R9D\nROL EAX,0x7\nXOR EAX,ECX\nMOV ECX,R12D\nXOR ECX,R8D\nAND ECX,R9D\nXOR ECX,R8D\nMOV EDX,dword ptr [RSP + -0x4c]\nMOV ESI,EDX\nROL ESI,0xf\nMOV EDI,EDX\nROL EDI,0xd\nSHR EDX,0xa\nXOR EDX,EDI\nXOR EDX,ESI\nMOV ESI,dword ptr [RSP + -0x40]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x44]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x60]\nADD EBP,EDX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x44],EBP\nADD EBP,R15D\nADD EBP,ECX\nLEA EAX,[-0x57ce3993 + RAX + RBP*0x1]\nADD R10D,EAX\nADD R14D,EAX\nMOV EAX,R14D\nROL EAX,0x1e\nMOV ECX,R14D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R14D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R14D\nAND ECX,R13D\nMOV R15D,R14D\nOR R15D,R13D\nAND R15D,EBX\nOR R15D,ECX\nADD R15D,EAX\nMOV EAX,R10D\nROL EAX,0x1a\nMOV EDX,R10D\nROL EDX,0x15\nXOR EDX,EAX\nMOV ECX,R10D\nROL ECX,0x7\nXOR ECX,EDX\nMOV EDX,R9D\nXOR EDX,R12D\nAND EDX,R10D\nXOR EDX,R12D\nMOV EAX,dword ptr [RSP + -0x48]\nMOV ESI,EAX\nROL ESI,0xf\nMOV EDI,EAX\nROL EDI,0xd\nSHR EAX,0xa\nXOR EAX,EDI\nXOR EAX,ESI\nMOV ESI,dword ptr [RSP + -0x3c]\nMOV EDI,ESI\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nMOV EBP,dword ptr [RSP + -0x40]\nROL EDI,0x19\nXOR ESI,EDI\nADD EBP,dword ptr [RSP + -0x5c]\nADD EBP,EAX\nADD EBP,ESI\nMOV dword ptr [RSP + -0x40],EBP\nADD EBP,R8D\nADD EBP,EDX\nLEA EAX,[-0x4ffcd838 + RCX + RBP*0x1]\nADD R11D,EAX\nADD R15D,EAX\nMOV EAX,R15D\nROL EAX,0x1e\nMOV ECX,R15D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R15D\nROL EAX,0xa\nXOR EAX,ECX\nMOV EDX,R15D\nAND EDX,R14D\nMOV ECX,R15D\nOR ECX,R14D\nAND ECX,R13D\nOR ECX,EDX\nADD ECX,EAX\nMOV EAX,R11D\nROL EAX,0x1a\nMOV ESI,R11D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,R11D\nROL R8D,0x7\nXOR R8D,ESI\nMOV ESI,R10D\nXOR ESI,R9D\nAND ESI,R11D\nXOR ESI,R9D\nMOV EAX,dword ptr [RSP + -0x44]\nMOV EDI,EAX\nROL EDI,0xf\nMOV EBP,EAX\nROL EBP,0xd\nSHR EAX,0xa\nXOR EAX,EBP\nXOR EAX,EDI\nMOV EDI,dword ptr [RSP + -0x38]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x3c]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x58]\nADD EDX,EAX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x3c],EDX\nADD EDX,R12D\nADD EDX,ESI\nLEA EAX,[-0x40a68039 + R8 + RDX*0x1]\nADD EBX,EAX\nADD ECX,EAX\nMOV EAX,ECX\nROL EAX,0x1e\nMOV EDX,ECX\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,ECX\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,ECX\nAND EDX,R15D\nMOV R12D,ECX\nOR R12D,R15D\nAND R12D,R14D\nOR R12D,EDX\nADD R12D,EAX\nMOV EAX,EBX\nROL EAX,0x1a\nMOV EDI,EBX\nROL EDI,0x15\nXOR EDI,EAX\nMOV R8D,EBX\nROL R8D,0x7\nXOR R8D,EDI\nMOV EAX,R11D\nXOR EAX,R10D\nAND EAX,EBX\nXOR EAX,R10D\nMOV EDI,dword ptr [RSP + -0x40]\nMOV EBP,EDI\nROL EBP,0xf\nMOV ESI,EDI\nROL ESI,0xd\nSHR EDI,0xa\nXOR EDI,ESI\nXOR EDI,EBP\nMOV ESI,dword ptr [RSP + -0x34]\nMOV EBP,ESI\nMOV EDX,ESI\nROL EDX,0xe\nSHR ESI,0x3\nXOR ESI,EDX\nMOV EDX,dword ptr [RSP + -0x38]\nROL EBP,0x19\nXOR ESI,EBP\nADD EDX,dword ptr [RSP + -0x54]\nADD EDX,EDI\nADD EDX,ESI\nMOV dword ptr [RSP + -0x38],EDX\nADD EDX,R9D\nADD EDX,EAX\nLEA EAX,[-0x391ff40d + R8 + RDX*0x1]\nADD R13D,EAX\nADD R12D,EAX\nMOV EAX,R12D\nROL EAX,0x1e\nMOV EDX,R12D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R12D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R12D\nAND EDX,ECX\nMOV R9D,R12D\nOR R9D,ECX\nAND R9D,R15D\nOR R9D,EDX\nADD R9D,EAX\nMOV EAX,R13D\nROL EAX,0x1a\nMOV ESI,R13D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,R13D\nROL R8D,0x7\nXOR R8D,ESI\nMOV EAX,EBX\nXOR EAX,R11D\nAND EAX,R13D\nXOR EAX,R11D\nMOV ESI,dword ptr [RSP + -0x3c]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x30]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x34]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x50]\nADD EDX,ESI\nADD EDX,EDI\nMOV dword ptr [RSP + -0x34],EDX\nADD EDX,R10D\nADD EDX,EAX\nLEA EAX,[-0x2a586eb9 + R8 + RDX*0x1]\nADD R14D,EAX\nADD R9D,EAX\nMOV EAX,R9D\nROL EAX,0x1e\nMOV EDX,R9D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R9D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R9D\nAND EDX,R12D\nMOV R10D,R9D\nOR R10D,R12D\nAND R10D,ECX\nOR R10D,EDX\nADD R10D,EAX\nMOV EAX,R14D\nROL EAX,0x1a\nMOV ESI,R14D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,R14D\nROL R8D,0x7\nXOR R8D,ESI\nMOV EAX,R13D\nXOR EAX,EBX\nAND EAX,R14D\nXOR EAX,EBX\nMOV ESI,dword ptr [RSP + -0x38]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x2c]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x30]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x4c]\nADD EDX,ESI\nADD EDX,EDI\nMOV dword ptr [RSP + -0x30],EDX\nADD EDX,R11D\nADD EDX,EAX\nLEA EAX,[0x6ca6351 + R8 + RDX*0x1]\nADD R15D,EAX\nADD R10D,EAX\nMOV EAX,R10D\nROL EAX,0x1e\nMOV EDX,R10D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R10D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R10D\nAND EDX,R9D\nMOV R11D,R10D\nOR R11D,R9D\nAND R11D,R12D\nOR R11D,EDX\nADD R11D,EAX\nMOV EAX,R15D\nROL EAX,0x1a\nMOV ESI,R15D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,R15D\nROL R8D,0x7\nXOR R8D,ESI\nMOV EAX,R14D\nXOR EAX,R13D\nAND EAX,R15D\nXOR EAX,R13D\nMOV ESI,dword ptr [RSP + -0x68]\nMOV EDI,dword ptr [RSP + -0x34]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBP\nMOV EDX,ESI\nROL EDX,0x19\nMOV EBP,ESI\nROL EBP,0xe\nSHR ESI,0x3\nXOR ESI,EBP\nXOR ESI,EDX\nMOV EDX,dword ptr [RSP + -0x2c]\nADD EDX,dword ptr [RSP + -0x48]\nADD EDX,EDI\nADD EDX,ESI\nMOV dword ptr [RSP + -0x2c],EDX\nADD EDX,EBX\nADD EDX,EAX\nLEA EAX,[0x14292967 + R8 + RDX*0x1]\nADD ECX,EAX\nADD R11D,EAX\nMOV EAX,R11D\nROL EAX,0x1e\nMOV EDX,R11D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R11D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R11D\nAND EDX,R10D\nMOV EBX,R11D\nOR EBX,R10D\nAND EBX,R9D\nOR EBX,EDX\nADD EBX,EAX\nMOV EAX,ECX\nROL EAX,0x1a\nMOV ESI,ECX\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,ECX\nROL R8D,0x7\nXOR R8D,ESI\nMOV EAX,R15D\nXOR EAX,R14D\nAND EAX,ECX\nXOR EAX,R14D\nMOV ESI,dword ptr [RSP + -0x30]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x64]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x68]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x44]\nADD EDX,ESI\nADD EDX,EDI\nMOV dword ptr [RSP + -0x68],EDX\nADD EDX,R13D\nADD EDX,EAX\nLEA EAX,[0x27b70a85 + R8 + RDX*0x1]\nADD R12D,EAX\nADD EBX,EAX\nMOV EAX,EBX\nROL EAX,0x1e\nMOV EDX,EBX\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,EBX\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,EBX\nAND EDX,R11D\nMOV R13D,EBX\nOR R13D,R11D\nAND R13D,R10D\nOR R13D,EDX\nADD R13D,EAX\nMOV EAX,R12D\nROL EAX,0x1a\nMOV ESI,R12D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,R12D\nROL R8D,0x7\nXOR R8D,ESI\nMOV EAX,ECX\nXOR EAX,R15D\nAND EAX,R12D\nXOR EAX,R15D\nMOV ESI,dword ptr [RSP + -0x2c]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x60]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x64]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x40]\nADD EDX,ESI\nADD EDX,EDI\nMOV dword ptr [RSP + -0x64],EDX\nADD EDX,R14D\nADD EDX,EAX\nLEA EAX,[0x2e1b2138 + R8 + RDX*0x1]\nADD R9D,EAX\nADD R13D,EAX\nMOV EAX,R13D\nROL EAX,0x1e\nMOV EDX,R13D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R13D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R13D\nAND EDX,EBX\nMOV R14D,R13D\nOR R14D,EBX\nAND R14D,R11D\nOR R14D,EDX\nADD R14D,EAX\nMOV EAX,R9D\nROL EAX,0x1a\nMOV ESI,R9D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R8D,R9D\nROL R8D,0x7\nXOR R8D,ESI\nMOV EAX,R12D\nXOR EAX,ECX\nAND EAX,R9D\nXOR EAX,ECX\nMOV ESI,dword ptr [RSP + -0x68]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x5c]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x60]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x3c]\nADD EDX,ESI\nADD EDX,EDI\nMOV dword ptr [RSP + -0x60],EDX\nADD EDX,R15D\nADD EDX,EAX\nLEA EAX,[0x4d2c6dfc + R8 + RDX*0x1]\nADD R10D,EAX\nADD R14D,EAX\nMOV EAX,R14D\nROL EAX,0x1e\nMOV EDX,R14D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R14D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R14D\nAND EDX,R13D\nMOV R8D,R14D\nOR R8D,R13D\nAND R8D,EBX\nOR R8D,EDX\nADD R8D,EAX\nMOV EAX,R10D\nROL EAX,0x1a\nMOV ESI,R10D\nROL ESI,0x15\nXOR ESI,EAX\nMOV R15D,R10D\nROL R15D,0x7\nXOR R15D,ESI\nMOV EAX,R9D\nXOR EAX,R12D\nAND EAX,R10D\nXOR EAX,R12D\nMOV ESI,dword ptr [RSP + -0x64]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x58]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x5c]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x38]\nADD EDX,ESI\nADD EDX,EDI\nMOV dword ptr [RSP + -0x5c],EDX\nADD EDX,ECX\nADD EDX,EAX\nLEA EAX,[0x53380d13 + R15 + RDX*0x1]\nADD R11D,EAX\nADD R8D,EAX\nMOV EAX,R8D\nROL EAX,0x1e\nMOV ECX,R8D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R8D\nROL EAX,0xa\nXOR EAX,ECX\nMOV EDX,R8D\nAND EDX,R14D\nMOV R15D,R8D\nOR R15D,R14D\nAND R15D,R13D\nOR R15D,EDX\nADD R15D,EAX\nMOV EAX,R11D\nROL EAX,0x1a\nMOV ESI,R11D\nROL ESI,0x15\nXOR ESI,EAX\nMOV EDX,R11D\nROL EDX,0x7\nXOR EDX,ESI\nMOV EAX,R10D\nXOR EAX,R9D\nAND EAX,R11D\nXOR EAX,R9D\nMOV ESI,dword ptr [RSP + -0x60]\nMOV EDI,ESI\nROL EDI,0xf\nMOV EBP,ESI\nROL EBP,0xd\nSHR ESI,0xa\nXOR ESI,EBP\nXOR ESI,EDI\nMOV EDI,dword ptr [RSP + -0x54]\nMOV EBP,EDI\nMOV ECX,EDI\nROL ECX,0xe\nSHR EDI,0x3\nXOR EDI,ECX\nMOV ECX,dword ptr [RSP + -0x58]\nROL EBP,0x19\nXOR EDI,EBP\nADD ECX,dword ptr [RSP + -0x34]\nADD ECX,ESI\nADD ECX,EDI\nMOV dword ptr [RSP + -0x58],ECX\nADD ECX,R12D\nADD ECX,EAX\nLEA EAX,[0x650a7354 + RDX + RCX*0x1]\nADD EBX,EAX\nADD R15D,EAX\nMOV EAX,R15D\nROL EAX,0x1e\nMOV ECX,R15D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R15D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R15D\nAND ECX,R8D\nMOV ESI,R15D\nOR ESI,R8D\nAND ESI,R14D\nOR ESI,ECX\nADD ESI,EAX\nMOV EAX,EBX\nROL EAX,0x1a\nMOV ECX,EBX\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,EBX\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,R11D\nXOR EAX,R10D\nAND EAX,EBX\nXOR EAX,R10D\nMOV ECX,dword ptr [RSP + -0x5c]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x50]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x54]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x30]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x54],EDX\nADD EDX,R9D\nADD EDX,EAX\nLEA EAX,[0x766a0abb + R12 + RDX*0x1]\nADD R13D,EAX\nADD ESI,EAX\nMOV EAX,ESI\nROL EAX,0x1e\nMOV ECX,ESI\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,ESI\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,ESI\nAND ECX,R15D\nMOV R9D,ESI\nOR R9D,R15D\nAND R9D,R8D\nOR R9D,ECX\nADD R9D,EAX\nMOV EAX,R13D\nROL EAX,0x1a\nMOV ECX,R13D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,R13D\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,EBX\nXOR EAX,R11D\nAND EAX,R13D\nXOR EAX,R11D\nMOV ECX,dword ptr [RSP + -0x58]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x4c]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x50]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x2c]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x50],EDX\nADD EDX,R10D\nADD EDX,EAX\nLEA EAX,[-0x7e3d36d2 + R12 + RDX*0x1]\nADD R14D,EAX\nADD R9D,EAX\nMOV EAX,R9D\nROL EAX,0x1e\nMOV ECX,R9D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R9D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R9D\nAND ECX,ESI\nMOV R10D,R9D\nOR R10D,ESI\nAND R10D,R15D\nOR R10D,ECX\nADD R10D,EAX\nMOV EAX,R14D\nROL EAX,0x1a\nMOV ECX,R14D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,R14D\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,R13D\nXOR EAX,EBX\nAND EAX,R14D\nXOR EAX,EBX\nMOV ECX,dword ptr [RSP + -0x54]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x48]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x4c]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x68]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x4c],EDX\nADD EDX,R11D\nADD EDX,EAX\nLEA EAX,[-0x6d8dd37b + R12 + RDX*0x1]\nADD R8D,EAX\nADD R10D,EAX\nMOV EAX,R10D\nROL EAX,0x1e\nMOV ECX,R10D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R10D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R10D\nAND ECX,R9D\nMOV R11D,R10D\nOR R11D,R9D\nAND R11D,ESI\nOR R11D,ECX\nADD R11D,EAX\nMOV EAX,R8D\nROL EAX,0x1a\nMOV ECX,R8D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,R8D\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,R14D\nXOR EAX,R13D\nAND EAX,R8D\nXOR EAX,R13D\nMOV ECX,dword ptr [RSP + -0x50]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x44]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x48]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x64]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x48],EDX\nADD EDX,EBX\nADD EDX,EAX\nLEA EAX,[-0x5d40175f + R12 + RDX*0x1]\nADD R15D,EAX\nADD R11D,EAX\nMOV EAX,R11D\nROL EAX,0x1e\nMOV ECX,R11D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R11D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R11D\nAND ECX,R10D\nMOV EBX,R11D\nOR EBX,R10D\nAND EBX,R9D\nOR EBX,ECX\nADD EBX,EAX\nMOV EAX,R15D\nROL EAX,0x1a\nMOV ECX,R15D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,R15D\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,R8D\nXOR EAX,R14D\nAND EAX,R15D\nXOR EAX,R14D\nMOV ECX,dword ptr [RSP + -0x4c]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x40]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x44]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x60]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x44],EDX\nADD EDX,R13D\nADD EDX,EAX\nLEA EAX,[-0x57e599b5 + R12 + RDX*0x1]\nADD ESI,EAX\nADD EBX,EAX\nMOV EAX,EBX\nROL EAX,0x1e\nMOV ECX,EBX\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,EBX\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,EBX\nAND ECX,R11D\nMOV R13D,EBX\nOR R13D,R11D\nAND R13D,R10D\nOR R13D,ECX\nADD R13D,EAX\nMOV EAX,ESI\nROL EAX,0x1a\nMOV ECX,ESI\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,ESI\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,R15D\nXOR EAX,R8D\nAND EAX,ESI\nXOR EAX,R8D\nMOV ECX,dword ptr [RSP + -0x48]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x3c]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x40]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x5c]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x40],EDX\nADD EDX,R14D\nADD EDX,EAX\nLEA EAX,[-0x3db47490 + R12 + RDX*0x1]\nADD R9D,EAX\nADD R13D,EAX\nMOV EAX,R13D\nROL EAX,0x1e\nMOV ECX,R13D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R13D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R13D\nAND ECX,EBX\nMOV R14D,R13D\nOR R14D,EBX\nAND R14D,R11D\nOR R14D,ECX\nADD R14D,EAX\nMOV EAX,R9D\nROL EAX,0x1a\nMOV ECX,R9D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R12D,R9D\nROL R12D,0x7\nXOR R12D,ECX\nMOV EAX,ESI\nXOR EAX,R15D\nAND EAX,R9D\nXOR EAX,R15D\nMOV ECX,dword ptr [RSP + -0x44]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x38]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x3c]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x58]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x3c],EDX\nADD EDX,R8D\nADD EDX,EAX\nLEA EAX,[-0x3893ae5d + R12 + RDX*0x1]\nADD R10D,EAX\nADD R14D,EAX\nMOV EAX,R14D\nROL EAX,0x1e\nMOV ECX,R14D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R14D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R14D\nAND ECX,R13D\nMOV R12D,R14D\nOR R12D,R13D\nAND R12D,EBX\nOR R12D,ECX\nADD R12D,EAX\nMOV EAX,R10D\nROL EAX,0x1a\nMOV ECX,R10D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R8D,R10D\nROL R8D,0x7\nXOR R8D,ECX\nMOV EAX,R9D\nXOR EAX,ESI\nAND EAX,R10D\nXOR EAX,ESI\nMOV ECX,dword ptr [RSP + -0x40]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EBP,ECX\nROL EBP,0xd\nSHR ECX,0xa\nXOR ECX,EBP\nXOR ECX,EDI\nMOV EDI,dword ptr [RSP + -0x34]\nMOV EBP,EDI\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nMOV EDX,dword ptr [RSP + -0x38]\nROL EBP,0x19\nXOR EDI,EBP\nADD EDX,dword ptr [RSP + -0x54]\nADD EDX,ECX\nADD EDX,EDI\nMOV dword ptr [RSP + -0x38],EDX\nADD EDX,R15D\nADD EDX,EAX\nLEA EAX,[-0x2e6d17e7 + R8 + RDX*0x1]\nADD R11D,EAX\nADD R12D,EAX\nMOV EAX,R12D\nROL EAX,0x1e\nMOV ECX,R12D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R12D\nROL EAX,0xa\nXOR EAX,ECX\nMOV EDX,R12D\nAND EDX,R14D\nMOV ECX,R12D\nOR ECX,R14D\nAND ECX,R13D\nOR ECX,EDX\nADD ECX,EAX\nMOV EAX,R11D\nROL EAX,0x1a\nMOV EDI,R11D\nROL EDI,0x15\nXOR EDI,EAX\nMOV R8D,R11D\nROL R8D,0x7\nXOR R8D,EDI\nMOV EAX,R10D\nXOR EAX,R9D\nAND EAX,R11D\nXOR EAX,R9D\nMOV EDI,dword ptr [RSP + -0x3c]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBP\nMOV EDX,dword ptr [RSP + -0x30]\nMOV R15D,EDX\nMOV EBP,EDX\nROL EBP,0xe\nSHR EDX,0x3\nXOR EDX,EBP\nMOV EBP,dword ptr [RSP + -0x34]\nROL R15D,0x19\nXOR EDX,R15D\nADD EBP,dword ptr [RSP + -0x50]\nADD EBP,EDI\nADD EBP,EDX\nMOV dword ptr [RSP + -0x34],EBP\nADD EBP,ESI\nADD EBP,EAX\nLEA EAX,[-0x2966f9dc + R8 + RBP*0x1]\nADD EBX,EAX\nADD ECX,EAX\nMOV EAX,ECX\nROL EAX,0x1e\nMOV EDX,ECX\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,ECX\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,ECX\nAND EDX,R12D\nMOV ESI,ECX\nOR ESI,R12D\nAND ESI,R14D\nOR ESI,EDX\nADD ESI,EAX\nMOV EAX,EBX\nROL EAX,0x1a\nMOV EDI,EBX\nROL EDI,0x15\nXOR EDI,EAX\nMOV R8D,EBX\nROL R8D,0x7\nXOR R8D,EDI\nMOV EAX,R11D\nXOR EAX,R10D\nAND EAX,EBX\nXOR EAX,R10D\nMOV EDI,dword ptr [RSP + -0x38]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBP\nMOV EDX,dword ptr [RSP + -0x2c]\nMOV R15D,EDX\nMOV EBP,EDX\nROL EBP,0xe\nSHR EDX,0x3\nXOR EDX,EBP\nMOV EBP,dword ptr [RSP + -0x30]\nROL R15D,0x19\nXOR EDX,R15D\nADD EBP,dword ptr [RSP + -0x4c]\nADD EBP,EDI\nADD EBP,EDX\nMOV dword ptr [RSP + -0x30],EBP\nADD EBP,R9D\nADD EBP,EAX\nLEA EAX,[-0xbf1ca7b + R8 + RBP*0x1]\nADD R13D,EAX\nADD ESI,EAX\nMOV EAX,ESI\nROL EAX,0x1e\nMOV EDX,ESI\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,ESI\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,ESI\nAND EDX,ECX\nMOV R9D,ESI\nOR R9D,ECX\nAND R9D,R12D\nOR R9D,EDX\nADD R9D,EAX\nMOV EAX,R13D\nROL EAX,0x1a\nMOV EDI,R13D\nROL EDI,0x15\nXOR EDI,EAX\nMOV R8D,R13D\nROL R8D,0x7\nXOR R8D,EDI\nMOV EAX,EBX\nXOR EAX,R11D\nAND EAX,R13D\nXOR EAX,R11D\nMOV EDI,dword ptr [RSP + -0x68]\nMOV EBP,dword ptr [RSP + -0x34]\nMOV R15D,EBP\nROL R15D,0xf\nMOV EDX,EBP\nROL EDX,0xd\nSHR EBP,0xa\nXOR EBP,EDX\nXOR EBP,R15D\nMOV R15D,EDI\nROL R15D,0x19\nMOV EDX,EDI\nROL EDX,0xe\nSHR EDI,0x3\nXOR EDI,EDX\nXOR EDI,R15D\nMOV EDX,dword ptr [RSP + -0x2c]\nADD EDX,dword ptr [RSP + -0x48]\nADD EDX,EBP\nADD EDX,EDI\nMOV dword ptr [RSP + -0x2c],EDX\nADD EDX,R10D\nADD EDX,EAX\nLEA EAX,[0x106aa070 + R8 + RDX*0x1]\nADD R14D,EAX\nADD R9D,EAX\nMOV EAX,R9D\nROL EAX,0x1e\nMOV EDX,R9D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R9D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R9D\nAND EDX,ESI\nMOV R15D,R9D\nOR R15D,ESI\nAND R15D,ECX\nOR R15D,EDX\nADD R15D,EAX\nMOV EAX,R14D\nROL EAX,0x1a\nMOV EDI,R14D\nROL EDI,0x15\nXOR EDI,EAX\nMOV R8D,R14D\nROL R8D,0x7\nXOR R8D,EDI\nMOV EAX,R13D\nXOR EAX,EBX\nAND EAX,R14D\nXOR EAX,EBX\nMOV EDI,dword ptr [RSP + -0x30]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBP\nMOV EDX,dword ptr [RSP + -0x64]\nMOV R10D,EDX\nMOV EBP,EDX\nROL EBP,0xe\nSHR EDX,0x3\nXOR EDX,EBP\nMOV EBP,dword ptr [RSP + -0x68]\nROL R10D,0x19\nXOR EDX,R10D\nADD EBP,dword ptr [RSP + -0x44]\nADD EBP,EDI\nADD EBP,EDX\nMOV dword ptr [RSP + -0x68],EBP\nADD EBP,R11D\nADD EBP,EAX\nLEA EAX,[0x19a4c116 + R8 + RBP*0x1]\nADD R12D,EAX\nADD R15D,EAX\nMOV EAX,R15D\nROL EAX,0x1e\nMOV EDX,R15D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R15D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R15D\nAND EDX,R9D\nMOV R11D,R15D\nOR R11D,R9D\nAND R11D,ESI\nOR R11D,EDX\nADD R11D,EAX\nMOV EAX,R12D\nROL EAX,0x1a\nMOV EDI,R12D\nROL EDI,0x15\nXOR EDI,EAX\nMOV R8D,R12D\nROL R8D,0x7\nXOR R8D,EDI\nMOV EAX,R14D\nXOR EAX,R13D\nAND EAX,R12D\nXOR EAX,R13D\nMOV EDI,dword ptr [RSP + -0x2c]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBP\nMOV EDX,dword ptr [RSP + -0x60]\nMOV R10D,EDX\nMOV EBP,EDX\nROL EBP,0xe\nSHR EDX,0x3\nXOR EDX,EBP\nMOV EBP,dword ptr [RSP + -0x64]\nROL R10D,0x19\nXOR EDX,R10D\nADD EBP,dword ptr [RSP + -0x40]\nADD EBP,EDI\nADD EBP,EDX\nMOV dword ptr [RSP + -0x64],EBP\nADD EBP,EBX\nADD EBP,EAX\nLEA EAX,[0x1e376c08 + R8 + RBP*0x1]\nADD ECX,EAX\nADD R11D,EAX\nMOV EAX,R11D\nROL EAX,0x1e\nMOV EDX,R11D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R11D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R11D\nAND EDX,R15D\nMOV R8D,R11D\nOR R8D,R15D\nAND R8D,R9D\nOR R8D,EDX\nADD R8D,EAX\nMOV EAX,ECX\nROL EAX,0x1a\nMOV EDI,ECX\nROL EDI,0x15\nXOR EDI,EAX\nMOV R10D,ECX\nROL R10D,0x7\nXOR R10D,EDI\nMOV EAX,R12D\nXOR EAX,R14D\nAND EAX,ECX\nXOR EAX,R14D\nMOV EDI,dword ptr [RSP + -0x68]\nMOV EBP,EDI\nROL EBP,0xf\nMOV EBX,EDI\nROL EBX,0xd\nSHR EDI,0xa\nXOR EDI,EBX\nXOR EDI,EBP\nMOV EBP,dword ptr [RSP + -0x5c]\nMOV EBX,EBP\nMOV EDX,EBP\nROL EDX,0xe\nSHR EBP,0x3\nXOR EBP,EDX\nMOV EDX,dword ptr [RSP + -0x60]\nROL EBX,0x19\nXOR EBP,EBX\nADD EDX,dword ptr [RSP + -0x3c]\nADD EDX,EDI\nADD EDX,EBP\nMOV dword ptr [RSP + -0x60],EDX\nADD EDX,R13D\nADD EDX,EAX\nLEA EAX,[0x2748774c + R10 + RDX*0x1]\nADD ESI,EAX\nADD R8D,EAX\nMOV EAX,R8D\nROL EAX,0x1e\nMOV EDX,R8D\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,R8D\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,R8D\nAND EDX,R11D\nMOV EBP,R8D\nOR EBP,R11D\nAND EBP,R15D\nOR EBP,EDX\nADD EBP,EAX\nMOV EAX,ESI\nROL EAX,0x1a\nMOV EDI,ESI\nROL EDI,0x15\nXOR EDI,EAX\nMOV R10D,ESI\nROL R10D,0x7\nXOR R10D,EDI\nMOV EAX,ECX\nXOR EAX,R12D\nAND EAX,ESI\nXOR EAX,R12D\nMOV EDI,dword ptr [RSP + -0x64]\nMOV EBX,EDI\nROL EBX,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,EBX\nMOV EDX,dword ptr [RSP + -0x58]\nMOV R13D,EDX\nMOV EBX,EDX\nROL EBX,0xe\nSHR EDX,0x3\nXOR EDX,EBX\nMOV EBX,dword ptr [RSP + -0x5c]\nROL R13D,0x19\nXOR EDX,R13D\nADD EBX,dword ptr [RSP + -0x38]\nADD EBX,EDI\nADD EBX,EDX\nMOV dword ptr [RSP + -0x5c],EBX\nADD EBX,R14D\nADD EBX,EAX\nLEA EAX,[0x34b0bcb5 + R10 + RBX*0x1]\nADD R9D,EAX\nADD EBP,EAX\nMOV EAX,EBP\nROL EAX,0x1e\nMOV EDX,EBP\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,EBP\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,EBP\nAND EDX,R8D\nMOV EBX,EBP\nOR EBX,R8D\nAND EBX,R11D\nOR EBX,EDX\nADD EBX,EAX\nMOV EAX,R9D\nROL EAX,0x1a\nMOV EDI,R9D\nROL EDI,0x15\nXOR EDI,EAX\nMOV R10D,R9D\nROL R10D,0x7\nXOR R10D,EDI\nMOV R13D,ESI\nXOR R13D,ECX\nAND R13D,R9D\nXOR R13D,ECX\nMOV EDI,dword ptr [RSP + -0x60]\nMOV R14D,EDI\nROL R14D,0xf\nMOV EDX,EDI\nROL EDX,0xd\nSHR EDI,0xa\nXOR EDI,EDX\nXOR EDI,R14D\nMOV EDX,dword ptr [RSP + -0x54]\nMOV R14D,EDX\nMOV EAX,EDX\nROL EAX,0xe\nSHR EDX,0x3\nXOR EDX,EAX\nMOV EAX,dword ptr [RSP + -0x58]\nROL R14D,0x19\nXOR EDX,R14D\nADD EAX,dword ptr [RSP + -0x34]\nADD EAX,EDI\nADD EAX,EDX\nMOV dword ptr [RSP + -0x58],EAX\nADD EAX,R12D\nADD EAX,R13D\nLEA EAX,[0x391c0cb3 + R10 + RAX*0x1]\nADD R15D,EAX\nADD EBX,EAX\nMOV EAX,EBX\nROL EAX,0x1e\nMOV EDX,EBX\nROL EDX,0x13\nXOR EDX,EAX\nMOV EAX,EBX\nROL EAX,0xa\nXOR EAX,EDX\nMOV EDX,EBX\nAND EDX,EBP\nMOV EDI,EBX\nOR EDI,EBP\nAND EDI,R8D\nOR EDI,EDX\nADD EDI,EAX\nMOV EAX,R15D\nROL EAX,0x1a\nMOV EDX,R15D\nROL EDX,0x15\nXOR EDX,EAX\nMOV R10D,R15D\nROL R10D,0x7\nXOR R10D,EDX\nMOV R12D,R9D\nXOR R12D,ESI\nAND R12D,R15D\nXOR R12D,ESI\nMOV EAX,dword ptr [RSP + -0x5c]\nMOV R14D,EAX\nROL R14D,0xf\nMOV EDX,EAX\nROL EDX,0xd\nSHR EAX,0xa\nXOR EAX,EDX\nXOR EAX,R14D\nMOV EDX,dword ptr [RSP + -0x50]\nMOV R14D,EDX\nMOV R13D,EDX\nROL R13D,0xe\nSHR EDX,0x3\nXOR EDX,R13D\nMOV R13D,dword ptr [RSP + -0x54]\nROL R14D,0x19\nXOR EDX,R14D\nADD R13D,dword ptr [RSP + -0x30]\nADD R13D,EAX\nADD R13D,EDX\nMOV dword ptr [RSP + -0x54],R13D\nADD R13D,ECX\nADD R13D,R12D\nLEA EAX,[0x4ed8aa4a + R10 + R13*0x1]\nADD R11D,EAX\nADD EDI,EAX\nMOV EAX,EDI\nROL EAX,0x1e\nMOV ECX,EDI\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,EDI\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,EDI\nAND ECX,EBX\nMOV R13D,EDI\nOR R13D,EBX\nAND R13D,EBP\nOR R13D,ECX\nADD R13D,EAX\nMOV EAX,R11D\nROL EAX,0x1a\nMOV ECX,R11D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R10D,R11D\nROL R10D,0x7\nXOR R10D,ECX\nMOV R12D,R15D\nXOR R12D,R9D\nAND R12D,R11D\nXOR R12D,R9D\nMOV EDX,dword ptr [RSP + -0x58]\nMOV R14D,EDX\nROL R14D,0xf\nMOV EAX,EDX\nROL EAX,0xd\nSHR EDX,0xa\nXOR EDX,EAX\nXOR EDX,R14D\nMOV EAX,dword ptr [RSP + -0x4c]\nMOV R14D,EAX\nMOV ECX,EAX\nROL ECX,0xe\nSHR EAX,0x3\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x50]\nROL R14D,0x19\nXOR EAX,R14D\nADD ECX,dword ptr [RSP + -0x2c]\nADD ECX,EDX\nADD ECX,EAX\nMOV dword ptr [RSP + -0x50],ECX\nADD ECX,ESI\nADD ECX,R12D\nLEA EAX,[0x5b9cca4f + R10 + RCX*0x1]\nADD R8D,EAX\nADD R13D,EAX\nMOV EAX,R13D\nROL EAX,0x1e\nMOV ECX,R13D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R13D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R13D\nAND ECX,EDI\nMOV ESI,R13D\nOR ESI,EDI\nAND ESI,EBX\nOR ESI,ECX\nADD ESI,EAX\nMOV EAX,R8D\nROL EAX,0x1a\nMOV ECX,R8D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R10D,R8D\nROL R10D,0x7\nXOR R10D,ECX\nMOV R12D,R11D\nXOR R12D,R15D\nAND R12D,R8D\nXOR R12D,R15D\nMOV EDX,dword ptr [RSP + -0x54]\nMOV R14D,EDX\nROL R14D,0xf\nMOV EAX,EDX\nROL EAX,0xd\nSHR EDX,0xa\nXOR EDX,EAX\nXOR EDX,R14D\nMOV EAX,dword ptr [RSP + -0x48]\nMOV R14D,EAX\nMOV ECX,EAX\nROL ECX,0xe\nSHR EAX,0x3\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x4c]\nROL R14D,0x19\nXOR EAX,R14D\nADD ECX,dword ptr [RSP + -0x68]\nADD ECX,EDX\nADD ECX,EAX\nMOV dword ptr [RSP + -0x4c],ECX\nADD ECX,R9D\nADD ECX,R12D\nLEA EAX,[0x682e6ff3 + R10 + RCX*0x1]\nADD EBP,EAX\nADD ESI,EAX\nMOV EAX,ESI\nROL EAX,0x1e\nMOV ECX,ESI\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,ESI\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,ESI\nAND ECX,R13D\nMOV R14D,ESI\nOR R14D,R13D\nAND R14D,EDI\nOR R14D,ECX\nADD R14D,EAX\nMOV EAX,EBP\nROL EAX,0x1a\nMOV ECX,EBP\nROL ECX,0x15\nXOR ECX,EAX\nMOV R9D,EBP\nROL R9D,0x7\nXOR R9D,ECX\nMOV R12D,R8D\nXOR R12D,R11D\nAND R12D,EBP\nXOR R12D,R11D\nMOV EDX,dword ptr [RSP + -0x50]\nMOV R10D,EDX\nROL R10D,0xf\nMOV EAX,EDX\nROL EAX,0xd\nSHR EDX,0xa\nXOR EDX,EAX\nXOR EDX,R10D\nMOV EAX,dword ptr [RSP + -0x44]\nMOV R10D,EAX\nMOV ECX,EAX\nROL ECX,0xe\nSHR EAX,0x3\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x48]\nROL R10D,0x19\nXOR EAX,R10D\nADD ECX,dword ptr [RSP + -0x64]\nADD ECX,EDX\nADD ECX,EAX\nMOV dword ptr [RSP + -0x48],ECX\nADD ECX,R15D\nADD ECX,R12D\nLEA EAX,[0x748f82ee + R9 + RCX*0x1]\nADD EBX,EAX\nADD R14D,EAX\nMOV EAX,R14D\nROL EAX,0x1e\nMOV ECX,R14D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R14D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R14D\nAND ECX,ESI\nMOV R10D,R14D\nOR R10D,ESI\nAND R10D,R13D\nOR R10D,ECX\nADD R10D,EAX\nMOV EAX,EBX\nROL EAX,0x1a\nMOV ECX,EBX\nROL ECX,0x15\nXOR ECX,EAX\nMOV R9D,EBX\nROL R9D,0x7\nXOR R9D,ECX\nMOV R12D,EBP\nXOR R12D,R8D\nAND R12D,EBX\nXOR R12D,R8D\nMOV EDX,dword ptr [RSP + -0x4c]\nMOV R15D,EDX\nROL R15D,0xf\nMOV EAX,EDX\nROL EAX,0xd\nSHR EDX,0xa\nXOR EDX,EAX\nXOR EDX,R15D\nMOV EAX,dword ptr [RSP + -0x40]\nMOV R15D,EAX\nMOV ECX,EAX\nROL ECX,0xe\nSHR EAX,0x3\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x44]\nROL R15D,0x19\nXOR EAX,R15D\nADD ECX,dword ptr [RSP + -0x60]\nADD ECX,EDX\nADD ECX,EAX\nMOV dword ptr [RSP + -0x44],ECX\nADD ECX,R11D\nADD ECX,R12D\nLEA EAX,[0x78a5636f + R9 + RCX*0x1]\nADD EDI,EAX\nADD R10D,EAX\nMOV EAX,R10D\nROL EAX,0x1e\nMOV ECX,R10D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R10D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R10D\nAND ECX,R14D\nMOV R15D,R10D\nOR R15D,R14D\nAND R15D,ESI\nOR R15D,ECX\nADD R15D,EAX\nMOV EAX,EDI\nROL EAX,0x1a\nMOV ECX,EDI\nROL ECX,0x15\nXOR ECX,EAX\nMOV R9D,EDI\nROL R9D,0x7\nXOR R9D,ECX\nMOV R12D,EBX\nXOR R12D,EBP\nAND R12D,EDI\nXOR R12D,EBP\nMOV EDX,dword ptr [RSP + -0x48]\nMOV R11D,EDX\nROL R11D,0xf\nMOV EAX,EDX\nROL EAX,0xd\nSHR EDX,0xa\nXOR EDX,EAX\nXOR EDX,R11D\nMOV EAX,dword ptr [RSP + -0x3c]\nMOV R11D,EAX\nMOV ECX,EAX\nROL ECX,0xe\nSHR EAX,0x3\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x40]\nROL R11D,0x19\nXOR EAX,R11D\nADD ECX,dword ptr [RSP + -0x5c]\nADD ECX,EDX\nADD ECX,EAX\nMOV dword ptr [RSP + -0x40],ECX\nADD ECX,R8D\nADD ECX,R12D\nLEA EAX,[-0x7b3787ec + R9 + RCX*0x1]\nADD R13D,EAX\nADD R15D,EAX\nMOV EAX,R15D\nROL EAX,0x1e\nMOV ECX,R15D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R15D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R15D\nAND ECX,R10D\nMOV R11D,R15D\nOR R11D,R10D\nAND R11D,R14D\nOR R11D,ECX\nADD R11D,EAX\nMOV EAX,R13D\nROL EAX,0x1a\nMOV EDX,R13D\nROL EDX,0x15\nXOR EDX,EAX\nMOV R8D,R13D\nROL R8D,0x7\nXOR R8D,EDX\nMOV R12D,EDI\nXOR R12D,EBX\nAND R12D,R13D\nXOR R12D,EBX\nMOV EAX,dword ptr [RSP + -0x44]\nMOV R9D,EAX\nROL R9D,0xf\nMOV ECX,EAX\nROL ECX,0xd\nSHR EAX,0xa\nXOR EAX,ECX\nXOR EAX,R9D\nMOV ECX,dword ptr [RSP + -0x38]\nMOV R9D,ECX\nMOV EDX,ECX\nROL EDX,0xe\nSHR ECX,0x3\nXOR ECX,EDX\nMOV EDX,dword ptr [RSP + -0x3c]\nROL R9D,0x19\nXOR ECX,R9D\nADD EDX,dword ptr [RSP + -0x58]\nADD EDX,EAX\nADD EDX,ECX\nMOV dword ptr [RSP + -0x3c],EDX\nADD EDX,EBP\nADD EDX,R12D\nLEA EAX,[-0x7338fdf8 + R8 + RDX*0x1]\nADD ESI,EAX\nADD R11D,EAX\nMOV EAX,R11D\nROL EAX,0x1e\nMOV ECX,R11D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R11D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R11D\nAND ECX,R15D\nMOV R12D,R11D\nOR R12D,R15D\nAND R12D,R10D\nOR R12D,ECX\nADD R12D,EAX\nMOV EAX,ESI\nROL EAX,0x1a\nMOV EDX,ESI\nROL EDX,0x15\nXOR EDX,EAX\nMOV R8D,ESI\nROL R8D,0x7\nXOR R8D,EDX\nMOV EDX,R13D\nXOR EDX,EDI\nAND EDX,ESI\nXOR EDX,EDI\nMOV EAX,dword ptr [RSP + -0x40]\nMOV EBP,EAX\nROL EBP,0xf\nMOV ECX,EAX\nROL ECX,0xd\nSHR EAX,0xa\nXOR EAX,ECX\nXOR EAX,EBP\nMOV ECX,dword ptr [RSP + -0x34]\nMOV R9D,ECX\nMOV EBP,ECX\nROL EBP,0xe\nSHR ECX,0x3\nXOR ECX,EBP\nMOV EBP,dword ptr [RSP + -0x38]\nROL R9D,0x19\nXOR ECX,R9D\nADD EBP,dword ptr [RSP + -0x54]\nADD EBP,EAX\nADD EBP,ECX\nMOV dword ptr [RSP + -0x38],EBP\nADD EBP,EBX\nADD EBP,EDX\nLEA EAX,[-0x6f410006 + R8 + RBP*0x1]\nADD R14D,EAX\nADD R12D,EAX\nMOV EAX,R12D\nROL EAX,0x1e\nMOV ECX,R12D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R12D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R12D\nAND ECX,R11D\nMOV R9D,R12D\nOR R9D,R11D\nAND R9D,R15D\nOR R9D,ECX\nADD R9D,EAX\nMOV EAX,R14D\nROL EAX,0x1a\nMOV ECX,R14D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R8D,R14D\nROL R8D,0x7\nXOR R8D,ECX\nMOV EBP,ESI\nXOR EBP,R13D\nAND EBP,R14D\nXOR EBP,R13D\nMOV EAX,dword ptr [RSP + -0x3c]\nMOV ECX,EAX\nROL ECX,0xf\nMOV EBX,EAX\nROL EBX,0xd\nSHR EAX,0xa\nXOR EAX,EBX\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x30]\nMOV EBX,ECX\nMOV EDX,ECX\nROL EDX,0xe\nSHR ECX,0x3\nXOR ECX,EDX\nMOV EDX,dword ptr [RSP + -0x34]\nROL EBX,0x19\nXOR ECX,EBX\nADD EDX,dword ptr [RSP + -0x50]\nADD EDX,EAX\nADD EDX,ECX\nMOV dword ptr [RSP + -0x34],EDX\nADD EDX,EDI\nADD EDX,EBP\nLEA EAX,[-0x5baf9315 + R8 + RDX*0x1]\nADD R10D,EAX\nADD R9D,EAX\nMOV EAX,R9D\nROL EAX,0x1e\nMOV ECX,R9D\nROL ECX,0x13\nXOR ECX,EAX\nMOV EAX,R9D\nROL EAX,0xa\nXOR EAX,ECX\nMOV ECX,R9D\nAND ECX,R12D\nMOV EBX,R9D\nOR EBX,R12D\nAND EBX,R11D\nOR EBX,ECX\nADD EBX,EAX\nMOV EAX,R10D\nROL EAX,0x1a\nMOV ECX,R10D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R8D,R10D\nROL R8D,0x7\nXOR R8D,ECX\nMOV EBP,R14D\nXOR EBP,ESI\nAND EBP,R10D\nXOR EBP,ESI\nMOV EAX,dword ptr [RSP + -0x38]\nMOV ECX,EAX\nROL ECX,0xf\nMOV EDI,EAX\nROL EDI,0xd\nSHR EAX,0xa\nXOR EAX,EDI\nXOR EAX,ECX\nMOV ECX,dword ptr [RSP + -0x2c]\nMOV EDI,ECX\nMOV EDX,ECX\nROL EDX,0xe\nSHR ECX,0x3\nXOR ECX,EDX\nMOV EDX,dword ptr [RSP + -0x30]\nROL EDI,0x19\nXOR ECX,EDI\nADD EDX,dword ptr [RSP + -0x4c]\nADD EDX,EAX\nADD EDX,ECX\nMOV dword ptr [RSP + -0x30],EDX\nADD EDX,R13D\nADD EDX,EBP\nLEA EAX,[-0x41065c09 + R8 + RDX*0x1]\nADD R15D,EAX\nADD EBX,EAX\nMOV EAX,EBX\nROL EAX,0x1e\nMOV ECX,EBX\nROL ECX,0x13\nXOR ECX,EAX\nMOV R8D,EBX\nROL R8D,0xa\nXOR R8D,ECX\nMOV EAX,EBX\nAND EAX,R9D\nMOV EBP,EBX\nOR EBP,R9D\nAND EBP,R12D\nOR EBP,EAX\nMOV EAX,R15D\nROL EAX,0x1a\nMOV ECX,R15D\nROL ECX,0x15\nXOR ECX,EAX\nMOV R13D,R15D\nROL R13D,0x7\nXOR R13D,ECX\nMOV EAX,dword ptr [RSP + -0x68]\nMOV ECX,dword ptr [RSP + -0x34]\nMOV EDI,ECX\nROL EDI,0xf\nMOV EDX,ECX\nROL EDX,0xd\nSHR ECX,0xa\nXOR ECX,EDX\nXOR ECX,EDI\nMOV EDX,EAX\nMOV EDI,EAX\nROL EDI,0xe\nSHR EAX,0x3\nXOR EAX,EDI\nMOV RDI,qword ptr [RSP + -0x8]\nROL EDX,0x19\nXOR EAX,EDX\nMOV EDX,dword ptr [RSP + -0x2c]\nADD EDX,dword ptr [RSP + -0x48]\nADD EDX,ECX\nADD EDX,EAX\nMOV dword ptr [RSP + -0x2c],EDX\nADD EDX,ESI\nMOV EAX,R10D\nXOR EAX,R14D\nAND EAX,R15D\nXOR EAX,R14D\nADD EDX,EAX\nLEA EAX,[-0x398e870e + R13 + RDX*0x1]\nMOV RCX,qword ptr [RSP + -0x18]\nADD EBP,dword ptr [RCX]\nADD EBP,R8D\nADD EBP,EAX\nMOV dword ptr [RCX],EBP\nADD EBX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],EBX\nADD R9D,dword ptr [RCX + 0x8]\nMOV dword ptr [RCX + 0x8],R9D\nADD R12D,dword ptr [RCX + 0xc]\nMOV dword ptr [RCX + 0xc],R12D\nADD R11D,dword ptr [RCX + 0x10]\nADD R11D,EAX\nADD RDI,0x40\nMOV dword ptr [RCX + 0x10],R11D\nADD R15D,dword ptr [RCX + 0x14]\nMOV dword ptr [RCX + 0x14],R15D\nADD R10D,dword ptr [RCX + 0x18]\nMOV dword ptr [RCX + 0x18],R10D\nADD R14D,dword ptr [RCX + 0x1c]\nMOV dword ptr [RCX + 0x1c],R14D\nCMP RDI,qword ptr [RSP + -0x20]\nJC 0x004030e0\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1054
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 89 f1\n48 83 e1 fc\n48 01 f9\n8b 2a\n8b 5a 04\n44 8b 4a 08\n44 8b 62 0c\n44 8b 5a 10\n44 8b 7a 14\n44 8b 52 18\n44 8b 72 1c\n49 89 f0\n49 c1 e8 20\n8b 42 20\n01 f0\n89 42 20\n41 83 d0 00\n48 89 54 24 e8\n44 01 42 24\n48 89 4c 24 e0\n48 39 cf\n0f 83 11 23 00 00\n0f 1f 44 00 00\n31 d2\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n8b 34 97\n0f ce\n89 74 94 98\n48 ff c2\n48 83 fa 10\n75 ee\n89 ea\nc1 c2 1e\n89 ee\nc1 c6 13\n31 d6\n89 ea\nc1 c2 0a\n31 f2\n89 e8\n21 d8\n89 ee\n09 de\n44 21 ce\n09 c6\n01 d6\n44 89 d8\nc1 c0 1a\n44 89 da\nc1 c2 15\n31 c2\n44 89 d8\nc1 c0 07\n31 d0\n44 89 d2\n44 31 fa\n44 21 da\n44 31 d2\n41 01 c6\n41 01 d6\n8b 4c 24 98\n48 89 4c 24 f0\n44 8b 44 24 9c\n41 8d 04 0e\n42 8d 94 31 98 2f 8a 42\n45 8d b4 04 98 2f 8a 42\n01 f2\n89 d0\nc1 c0 1e\n89 d6\nc1 c6 13\n31 c6\n89 d0\nc1 c0 0a\n31 f0\n89 d1\n21 e9\n89 d6\n09 ee\n21 de\n09 ce\n01 c6\n44 89 f0\nc1 c0 1a\n44 89 f1\nc1 c1 15\n31 c1\n44 89 f0\nc1 c0 07\n31 c8\n44 89 f9\n44 31 d9\n44 21 f1\n44 31 f9\n45 01 c2\n41 01 ca\n41 8d 0c 02\n46 8d a4 10 91 44 37 71\n45 8d 8c 09 91 44 37 71\n41 01 f4\n44 89 e0\nc1 c0 1e\n44 89 e1\nc1 c1 13\n31 c1\n44 89 e0\nc1 c0 0a\n31 c8\n44 89 e1\n21 d1\n44 89 e6\n09 d6\n21 ee\n09 ce\n01 c6\n44 89 c8\nc1 c0 1a\n44 89 c9\nc1 c1 15\n31 c1\n44 89 c8\nc1 c0 07\n31 c8\n44 89 f1\n44 31 d9\n44 21 c9\n44 31 d9\n44 03 7c 24 a0\n41 01 cf\n41 8d 0c 07\n46 8d 94 38 cf fb c0 b5\n44 8d bc 0b cf fb c0 b5\n41 01 f2\n44 89 d0\nc1 c0 1e\n44 89 d6\nc1 c6 13\n31 c6\n44 89 d0\nc1 c0 0a\n31 f0\n48 89 7c 24 f8\n44 89 d7\n44 21 e7\n44 89 d6\n44 09 e6\n21 d6\n09 fe\n01 c6\n44 89 f8\nc1 c0 1a\n44 89 ff\nc1 c7 15\n31 c7\n44 89 f8\nc1 c0 07\n31 f8\n44 89 cf\n44 31 f7\n44 21 ff\n44 31 f7\n44 03 5c 24 a4\n41 01 fb\n41 8d 3c 03\n46 8d ac 18 a5 db b5 e9\n8d 84 3d a5 db b5 e9\n41 01 f5\n44 89 ee\nc1 c6 1e\n44 89 ef\nc1 c7 13\n31 f7\n44 89 ee\nc1 c6 0a\n31 fe\n44 89 ef\n44 21 d7\n44 89 eb\n44 09 d3\n44 21 e3\n09 fb\n01 f3\n89 c6\nc1 c6 1a\n89 c7\nc1 c7 15\n31 f7\n89 c6\nc1 c6 07\n31 fe\n44 89 ff\n44 31 cf\n21 c7\n44 31 cf\n44 03 74 24 a8\n41 01 fe\n42 8d b4 36 5b c2 56 39\n01 f2\n01 f3\n89 de\nc1 c6 1e\n89 df\nc1 c7 13\n31 f7\n89 dd\nc1 c5 0a\n31 fd\n89 df\n44 21 ef\n89 de\n44 09 ee\n44 21 d6\n09 fe\n01 ee\n89 d7\nc1 c7 1a\n89 d5\nc1 c5 15\n31 fd\n89 d7\nc1 c7 07\n31 ef\n89 c5\n44 31 fd\n21 d5\n44 31 fd\n44 03 4c 24 ac\n41 01 e9\n42 8d bc 0f f1 11 f1 59\n41 01 fc\n01 fe\n89 f7\nc1 c7 1e\n89 f5\nc1 c5 13\n31 fd\n89 f7\nc1 c7 0a\n31 ef\n89 f1\n21 d9\n89 f5\n09 dd\n44 21 ed\n09 cd\n01 fd\n44 89 e1\nc1 c1 1a\n44 89 e7\nc1 c7 15\n31 cf\n44 89 e1\nc1 c1 07\n31 f9\n89 d7\n31 c7\n44 21 e7\n31 c7\n44 03 7c 24 b0\n41 01 ff\n42 8d 8c 39 a4 82 3f 92\n41 01 ca\n01 cd\n89 e9\nc1 c1 1e\n89 ef\nc1 c7 13\n31 cf\n89 e9\nc1 c1 0a\n31 f9\n89 ef\n21 f7\n41 89 ee\n41 09 f6\n41 21 de\n41 09 fe\n41 01 ce\n44 89 d1\nc1 c1 1a\n44 89 d7\nc1 c7 15\n31 cf\n44 89 d1\nc1 c1 07\n31 f9\n44 89 e7\n31 d7\n44 21 d7\n31 d7\n03 44 24 b4\n01 f8\n8d 84 01 d5 5e 1c ab\n41 01 c5\n41 01 c6\n44 89 f0\nc1 c0 1e\n44 89 f1\nc1 c1 13\n31 c1\n44 89 f0\nc1 c0 0a\n31 c8\n44 89 f1\n21 e9\n45 89 f7\n41 09 ef\n41 21 f7\n41 09 cf\n41 01 c7\n44 89 e8\nc1 c0 1a\n44 89 e9\nc1 c1 15\n31 c1\n44 89 e8\nc1 c0 07\n31 c8\n44 89 d1\n44 31 e1\n44 21 e9\n44 31 e1\n03 54 24 b8\n01 ca\n8d 84 10 98 aa 07 d8\n01 c3\n41 01 c7\n44 89 f8\nc1 c0 1e\n44 89 f9\nc1 c1 13\n31 c1\n44 89 f8\nc1 c0 0a\n31 c8\n44 89 fa\n44 21 f2\n44 89 f9\n44 09 f1\n21 e9\n09 d1\n01 c1\n89 d8\nc1 c0 1a\n89 da\nc1 c2 15\n31 c2\n89 d8\nc1 c0 07\n31 d0\n44 89 ea\n44 31 d2\n21 da\n44 31 d2\n44 8b 4c 24 bc\n45 01 cc\n41 01 d4\n42 8d 84 20 01 5b 83 12\n01 c6\n01 c1\n89 c8\nc1 c0 1e\n89 ca\nc1 c2 13\n31 c2\n89 c8\nc1 c0 0a\n31 d0\n89 ca\n44 21 fa\n41 89 cc\n45 09 fc\n45 21 f4\n41 09 d4\n41 01 c4\n89 f0\nc1 c0 1a\n89 f2\nc1 c2 15\n31 c2\n89 f0\nc1 c0 07\n31 d0\n89 da\n44 31 ea\n21 f2\n44 31 ea\n44 03 54 24 c0\n41 01 d2\n42 8d 84 10 be 85 31 24\n01 c5\n41 01 c4\n44 89 e0\nc1 c0 1e\n44 89 e2\nc1 c2 13\n31 c2\n44 89 e7\nc1 c7 0a\n31 d7\n44 89 e2\n21 ca\n44 89 e0\n09 c8\n44 21 f8\n09 d0\n01 f8\n89 ea\nc1 c2 1a\n89 ef\nc1 c7 15\n31 d7\n89 ea\nc1 c2 07\n31 fa\n89 f7\n31 df\n21 ef\n31 df\n44 03 6c 24 c4\n41 01 fd\n42 8d 94 2a c3 7d 0c 55\n41 01 d6\n01 d0\n89 c2\nc1 c2 1e\n89 c7\nc1 c7 13\n31 d7\n89 c2\nc1 c2 0a\n31 fa\n89 c7\n44 21 e7\n41 89 c2\n45 09 e2\n41 21 ca\n41 09 fa\n41 01 d2\n44 89 f2\nc1 c2 1a\n44 89 f7\nc1 c7 15\n31 d7\n44 89 f2\nc1 c2 07\n31 fa\n89 ef\n31 f7\n44 21 f7\n31 f7\n03 5c 24 c8\n01 fb\n8d 94 1a 74 5d be 72\n41 01 d7\n41 01 d2\n44 89 d2\nc1 c2 1e\n44 89 d7\nc1 c7 13\n31 d7\n44 89 d2\nc1 c2 0a\n31 fa\n44 89 d7\n21 c7\n45 89 d3\n41 09 c3\n45 21 e3\n41 09 fb\n41 01 d3\n44 89 fa\nc1 c2 1a\n44 89 ff\nc1 c7 15\n31 d7\n44 89 fa\nc1 c2 07\n31 fa\n44 89 f7\n31 ef\n44 21 ff\n31 ef\n03 74 24 cc\n01 fe\n8d 94 32 fe b1 de 80\n01 d1\n41 01 d3\n44 89 da\nc1 c2 1e\n44 89 de\nc1 c6 13\n31 d6\n44 89 da\nc1 c2 0a\n31 f2\n44 89 de\n44 21 d6\n44 89 db\n44 09 d3\n21 c3\n09 f3\n01 d3\n89 ca\nc1 c2 1a\n89 ce\nc1 c6 15\n31 d6\n89 ca\nc1 c2 07\n31 f2\n44 89 ff\n44 31 f7\n21 cf\n44 31 f7\n8b 74 24 d0\n01 f5\n01 fd\n8d 94 2a a7 06 dc 9b\n41 01 d4\n01 d3\n89 da\nc1 c2 1e\n89 df\nc1 c7 13\n31 d7\n89 da\nc1 c2 0a\n31 fa\n89 df\n44 21 df\n41 89 dd\n45 09 dd\n45 21 d5\n41 09 fd\n41 01 d5\n44 89 e2\nc1 c2 1a\n44 89 e7\nc1 c7 15\n31 d7\n44 89 e2\nc1 c2 07\n31 fa\n89 cf\n44 31 ff\n44 21 e7\n44 31 ff\n44 03 74 24 d4\n41 01 fe\n42 8d 94 32 74 f1 9b c1\n01 d0\n41 01 d5\n44 89 ea\nc1 c2 1e\n44 89 ef\nc1 c7 13\n31 d7\n44 89 ea\nc1 c2 0a\n31 fa\n44 89 ef\n21 df\n45 89 ee\n41 09 de\n45 21 de\n41 09 fe\n41 01 d6\n89 c2\nc1 c2 1a\n89 c7\nc1 c7 15\n31 d7\n89 c5\nc1 c5 07\n31 fd\n89 f2\nc1 c2 0d\n89 f7\nc1 ee 0a\n31 d6\nc1 c7 0f\n31 fe\n44 89 c2\nc1 c2 0e\n44 89 c7\n41 c1 e8 03\n41 31 d0\nc1 c7 19\n41 31 f8\n44 89 e2\n31 ca\n21 c2\n31 ca\n44 03 44 24 f0\n45 01 c8\n41 01 f0\n44 89 44 24 98\n45 01 f8\n41 01 d0\n42 8d 94 05 c1 69 9b e4\n41 01 d2\n41 01 d6\n44 89 f2\nc1 c2 1e\n44 89 f6\nc1 c6 13\n31 d6\n44 89 f2\nc1 c2 0a\n31 f2\n44 89 f6\n44 21 ee\n45 89 f7\n45 09 ef\n41 21 df\n41 09 f7\n41 01 d7\n44 89 d2\nc1 c2 1a\n44 89 d6\nc1 c6 15\n31 d6\n45 89 d0\n41 c1 c0 07\n41 31 f0\n89 c6\n44 31 e6\n44 21 d6\n44 31 e6\n8b 7c 24 d4\n89 fd\nc1 c5 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 ef\n8b 54 24 a0\n41 89 d1\n89 d5\nc1 c5 0e\nc1 ea 03\n31 ea\n8b 6c 24 9c\n41 c1 c1 19\n44 31 ca\n03 6c 24 c0\n01 fd\n01 d5\n89 6c 24 9c\n01 cd\n01 f5\n41 8d 8c 28 86 47 be ef\n41 01 cb\n41 01 cf\n44 89 f9\nc1 c1 1e\n44 89 fa\nc1 c2 13\n31 ca\n44 89 f9\nc1 c1 0a\n31 d1\n44 89 fa\n44 21 f2\n45 89 f8\n45 09 f0\n45 21 e8\n41 09 d0\n41 01 c8\n44 89 d9\nc1 c1 1a\n44 89 da\nc1 c2 15\n31 ca\n45 89 d9\n41 c1 c1 07\n41 31 d1\n44 89 d2\n31 c2\n44 21 da\n31 c2\n8b 74 24 98\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 a4\n89 fd\n89 f9\nc1 c1 0e\nc1 ef 03\n31 cf\n8b 4c 24 a0\nc1 c5 19\n31 ef\n03 4c 24 c4\n01 f1\n01 f9\n89 4c 24 a0\n44 01 e1\n01 d1\n41 8d 8c 09 c6 9d c1 0f\n01 cb\n41 01 c8\n44 89 c1\nc1 c1 1e\n44 89 c2\nc1 c2 13\n31 ca\n44 89 c1\nc1 c1 0a\n31 d1\n44 89 c2\n44 21 fa\n45 89 c4\n45 09 fc\n45 21 f4\n41 09 d4\n41 01 cc\n89 d9\nc1 c1 1a\n89 da\nc1 c2 15\n31 ca\n41 89 d9\n41 c1 c1 07\n41 31 d1\n44 89 da\n44 31 d2\n21 da\n44 31 d2\n8b 74 24 9c\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 a8\n89 fd\n89 f9\nc1 c1 0e\nc1 ef 03\n31 cf\n8b 4c 24 a4\nc1 c5 19\n31 ef\n03 4c 24 c8\n01 f1\n01 f9\n89 4c 24 a4\n01 c1\n01 d1\n41 8d 84 09 cc a1 0c 24\n41 01 c5\n41 01 c4\n44 89 e0\nc1 c0 1e\n44 89 e1\nc1 c1 13\n31 c1\n44 89 e0\nc1 c0 0a\n31 c8\n44 89 e1\n44 21 c1\n45 89 e1\n45 09 c1\n45 21 f9\n41 09 c9\n41 01 c1\n44 89 e8\nc1 c0 1a\n44 89 e9\nc1 c1 15\n31 c1\n44 89 e8\nc1 c0 07\n31 c8\n89 d9\n44 31 d9\n44 21 e9\n44 31 d9\n8b 54 24 a0\n89 d6\nc1 c6 0f\n89 d7\nc1 c7 0d\nc1 ea 0a\n31 fa\n31 f2\n8b 74 24 ac\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 a8\nc1 c7 19\n31 fe\n03 6c 24 cc\n01 d5\n01 f5\n89 6c 24 a8\n44 01 d5\n01 cd\n8d 84 28 6f 2c e9 2d\n41 01 c6\n41 01 c1\n44 89 c8\nc1 c0 1e\n44 89 c9\nc1 c1 13\n31 c1\n44 89 c8\nc1 c0 0a\n31 c8\n44 89 c9\n44 21 e1\n45 89 ca\n45 09 e2\n45 21 c2\n41 09 ca\n41 01 c2\n44 89 f0\nc1 c0 1a\n44 89 f1\nc1 c1 15\n31 c1\n44 89 f0\nc1 c0 07\n31 c8\n44 89 e9\n31 d9\n44 21 f1\n31 d9\n8b 54 24 a4\n89 d6\nc1 c6 0f\n89 d7\nc1 c7 0d\nc1 ea 0a\n31 fa\n31 f2\n8b 74 24 b0\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 ac\nc1 c7 19\n31 fe\n03 6c 24 d0\n01 d5\n01 f5\n89 6c 24 ac\n44 01 dd\n01 cd\n8d 84 28 aa 84 74 4a\n41 01 c7\n41 01 c2\n44 89 d0\nc1 c0 1e\n44 89 d1\nc1 c1 13\n31 c1\n44 89 d0\nc1 c0 0a\n31 c8\n44 89 d1\n44 21 c9\n45 89 d3\n45 09 cb\n45 21 e3\n41 09 cb\n41 01 c3\n44 89 f8\nc1 c0 1a\n44 89 f9\nc1 c1 15\n31 c1\n44 89 f8\nc1 c0 07\n31 c8\n44 89 f1\n44 31 e9\n44 21 f9\n44 31 e9\n8b 54 24 a8\n89 d6\nc1 c6 0f\n89 d7\nc1 c7 0d\nc1 ea 0a\n31 fa\n31 f2\n8b 74 24 b4\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 b0\nc1 c7 19\n31 fe\n03 6c 24 d4\n01 d5\n01 f5\n89 6c 24 b0\n01 dd\n01 cd\n8d 84 28 dc a9 b0 5c\n41 01 c0\n41 01 c3\n44 89 d8\nc1 c0 1e\n44 89 d9\nc1 c1 13\n31 c1\n44 89 d8\nc1 c0 0a\n31 c8\n44 89 d9\n44 21 d1\n44 89 db\n44 09 d3\n44 21 cb\n09 cb\n01 c3\n44 89 c0\nc1 c0 1a\n44 89 c1\nc1 c1 15\n31 c1\n44 89 c0\nc1 c0 07\n31 c8\n44 89 f9\n44 31 f1\n44 21 c1\n44 31 f1\n8b 54 24 ac\n89 d6\nc1 c6 0f\n89 d7\nc1 c7 0d\nc1 ea 0a\n31 fa\n31 f2\n8b 74 24 b8\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 b4\nc1 c7 19\n31 fe\n03 6c 24 98\n01 d5\n01 f5\n89 6c 24 b4\n44 01 ed\n01 cd\n8d 84 28 da 88 f9 76\n41 01 c4\n01 c3\n89 d8\nc1 c0 1e\n89 d9\nc1 c1 13\n31 c1\n89 d8\nc1 c0 0a\n31 c8\n89 d9\n44 21 d9\n41 89 dd\n45 09 dd\n45 21 d5\n41 09 cd\n41 01 c5\n44 89 e0\nc1 c0 1a\n44 89 e1\nc1 c1 15\n31 c1\n44 89 e0\nc1 c0 07\n31 c8\n44 89 c1\n44 31 f9\n44 21 e1\n44 31 f9\n8b 54 24 b0\n89 d6\nc1 c6 0f\n89 d7\nc1 c7 0d\nc1 ea 0a\n31 fa\n31 f2\n8b 74 24 bc\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 b8\nc1 c7 19\n31 fe\n03 6c 24 9c\n01 d5\n01 f5\n89 6c 24 b8\n44 01 f5\n01 cd\n8d 84 28 52 51 3e 98\n41 01 c1\n41 01 c5\n44 89 e8\nc1 c0 1e\n44 89 e9\nc1 c1 13\n31 c1\n44 89 e8\nc1 c0 0a\n31 c8\n44 89 e9\n21 d9\n45 89 ee\n41 09 de\n45 21 de\n41 09 ce\n41 01 c6\n44 89 c8\nc1 c0 1a\n44 89 c9\nc1 c1 15\n31 c1\n44 89 c8\nc1 c0 07\n31 c8\n44 89 e1\n44 31 c1\n44 21 c9\n44 31 c1\n8b 54 24 b4\n89 d6\nc1 c6 0f\n89 d7\nc1 c7 0d\nc1 ea 0a\n31 fa\n31 f2\n8b 74 24 c0\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 bc\nc1 c7 19\n31 fe\n03 6c 24 a0\n01 d5\n01 f5\n89 6c 24 bc\n44 01 fd\n01 cd\n8d 84 28 6d c6 31 a8\n41 01 c2\n41 01 c6\n44 89 f0\nc1 c0 1e\n44 89 f1\nc1 c1 13\n31 c1\n44 89 f0\nc1 c0 0a\n31 c8\n44 89 f1\n44 21 e9\n45 89 f7\n45 09 ef\n41 21 df\n41 09 cf\n41 01 c7\n44 89 d0\nc1 c0 1a\n44 89 d2\nc1 c2 15\n31 c2\n44 89 d1\nc1 c1 07\n31 d1\n44 89 ca\n44 31 e2\n44 21 d2\n44 31 e2\n8b 44 24 b8\n89 c6\nc1 c6 0f\n89 c7\nc1 c7 0d\nc1 e8 0a\n31 f8\n31 f0\n8b 74 24 c4\n89 f7\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n8b 6c 24 c0\nc1 c7 19\n31 fe\n03 6c 24 a4\n01 c5\n01 f5\n89 6c 24 c0\n44 01 c5\n01 d5\n8d 84 29 c8 27 03 b0\n41 01 c3\n41 01 c7\n44 89 f8\nc1 c0 1e\n44 89 f9\nc1 c1 13\n31 c1\n44 89 f8\nc1 c0 0a\n31 c8\n44 89 fa\n44 21 f2\n44 89 f9\n44 09 f1\n44 21 e9\n09 d1\n01 c1\n44 89 d8\nc1 c0 1a\n44 89 de\nc1 c6 15\n31 c6\n45 89 d8\n41 c1 c0 07\n41 31 f0\n44 89 d6\n44 31 ce\n44 21 de\n44 31 ce\n8b 44 24 bc\n89 c7\nc1 c7 0f\n89 c5\nc1 c5 0d\nc1 e8 0a\n31 e8\n31 f8\n8b 7c 24 c8\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 c4\nc1 c5 19\n31 ef\n03 54 24 a8\n01 c2\n01 fa\n89 54 24 c4\n44 01 e2\n01 f2\n41 8d 84 10 c7 7f 59 bf\n01 c3\n01 c1\n89 c8\nc1 c0 1e\n89 ca\nc1 c2 13\n31 c2\n89 c8\nc1 c0 0a\n31 d0\n89 ca\n44 21 fa\n41 89 cc\n45 09 fc\n45 21 f4\n41 09 d4\n41 01 c4\n89 d8\nc1 c0 1a\n89 df\nc1 c7 15\n31 c7\n41 89 d8\n41 c1 c0 07\n41 31 f8\n44 89 d8\n44 31 d0\n21 d8\n44 31 d0\n8b 7c 24 c0\n89 fd\nc1 c5 0f\n89 fe\nc1 c6 0d\nc1 ef 0a\n31 f7\n31 ef\n8b 74 24 cc\n89 f5\n89 f2\nc1 c2 0e\nc1 ee 03\n31 d6\n8b 54 24 c8\nc1 c5 19\n31 ee\n03 54 24 ac\n01 fa\n01 f2\n89 54 24 c8\n44 01 ca\n01 c2\n41 8d 84 10 f3 0b e0 c6\n41 01 c5\n41 01 c4\n44 89 e0\nc1 c0 1e\n44 89 e2\nc1 c2 13\n31 c2\n44 89 e0\nc1 c0 0a\n31 d0\n44 89 e2\n21 ca\n45 89 e1\n41 09 c9\n45 21 f9\n41 09 d1\n41 01 c1\n44 89 e8\nc1 c0 1a\n44 89 ee\nc1 c6 15\n31 c6\n45 89 e8\n41 c1 c0 07\n41 31 f0\n89 d8\n44 31 d8\n44 21 e8\n44 31 d8\n8b 74 24 c4\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 d0\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 cc\nc1 c5 19\n31 ef\n03 54 24 b0\n01 f2\n01 fa\n89 54 24 cc\n44 01 d2\n01 c2\n41 8d 84 10 47 91 a7 d5\n41 01 c6\n41 01 c1\n44 89 c8\nc1 c0 1e\n44 89 ca\nc1 c2 13\n31 c2\n44 89 c8\nc1 c0 0a\n31 d0\n44 89 ca\n44 21 e2\n45 89 ca\n45 09 e2\n41 21 ca\n41 09 d2\n41 01 c2\n44 89 f0\nc1 c0 1a\n44 89 f6\nc1 c6 15\n31 c6\n45 89 f0\n41 c1 c0 07\n41 31 f0\n44 89 e8\n31 d8\n44 21 f0\n31 d8\n8b 74 24 c8\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 d4\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 d0\nc1 c5 19\n31 ef\n03 54 24 b4\n01 f2\n01 fa\n89 54 24 d0\n44 01 da\n01 c2\n41 8d 84 10 51 63 ca 06\n41 01 c7\n41 01 c2\n44 89 d0\nc1 c0 1e\n44 89 d2\nc1 c2 13\n31 c2\n44 89 d0\nc1 c0 0a\n31 d0\n44 89 d2\n44 21 ca\n45 89 d3\n45 09 cb\n45 21 e3\n41 09 d3\n41 01 c3\n44 89 f8\nc1 c0 1a\n44 89 fe\nc1 c6 15\n31 c6\n45 89 f8\n41 c1 c0 07\n41 31 f0\n44 89 f0\n44 31 e8\n44 21 f8\n44 31 e8\n8b 74 24 98\n8b 7c 24 cc\n89 fd\nc1 c5 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 ef\n89 f2\nc1 c2 19\n89 f5\nc1 c5 0e\nc1 ee 03\n31 ee\n31 d6\n8b 54 24 d4\n03 54 24 b8\n01 fa\n01 f2\n89 54 24 d4\n01 da\n01 c2\n41 8d 84 10 67 29 29 14\n01 c1\n41 01 c3\n44 89 d8\nc1 c0 1e\n44 89 da\nc1 c2 13\n31 c2\n44 89 d8\nc1 c0 0a\n31 d0\n44 89 da\n44 21 d2\n44 89 db\n44 09 d3\n44 21 cb\n09 d3\n01 c3\n89 c8\nc1 c0 1a\n89 ce\nc1 c6 15\n31 c6\n41 89 c8\n41 c1 c0 07\n41 31 f0\n44 89 f8\n44 31 f0\n21 c8\n44 31 f0\n8b 74 24 d0\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 9c\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 98\nc1 c5 19\n31 ef\n03 54 24 bc\n01 f2\n01 fa\n89 54 24 98\n44 01 ea\n01 c2\n41 8d 84 10 85 0a b7 27\n41 01 c4\n01 c3\n89 d8\nc1 c0 1e\n89 da\nc1 c2 13\n31 c2\n89 d8\nc1 c0 0a\n31 d0\n89 da\n44 21 da\n41 89 dd\n45 09 dd\n45 21 d5\n41 09 d5\n41 01 c5\n44 89 e0\nc1 c0 1a\n44 89 e6\nc1 c6 15\n31 c6\n45 89 e0\n41 c1 c0 07\n41 31 f0\n89 c8\n44 31 f8\n44 21 e0\n44 31 f8\n8b 74 24 d4\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 a0\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 9c\nc1 c5 19\n31 ef\n03 54 24 c0\n01 f2\n01 fa\n89 54 24 9c\n44 01 f2\n01 c2\n41 8d 84 10 38 21 1b 2e\n41 01 c1\n41 01 c5\n44 89 e8\nc1 c0 1e\n44 89 ea\nc1 c2 13\n31 c2\n44 89 e8\nc1 c0 0a\n31 d0\n44 89 ea\n21 da\n45 89 ee\n41 09 de\n45 21 de\n41 09 d6\n41 01 c6\n44 89 c8\nc1 c0 1a\n44 89 ce\nc1 c6 15\n31 c6\n45 89 c8\n41 c1 c0 07\n41 31 f0\n44 89 e0\n31 c8\n44 21 c8\n31 c8\n8b 74 24 98\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 a4\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 a0\nc1 c5 19\n31 ef\n03 54 24 c4\n01 f2\n01 fa\n89 54 24 a0\n44 01 fa\n01 c2\n41 8d 84 10 fc 6d 2c 4d\n41 01 c2\n41 01 c6\n44 89 f0\nc1 c0 1e\n44 89 f2\nc1 c2 13\n31 c2\n44 89 f0\nc1 c0 0a\n31 d0\n44 89 f2\n44 21 ea\n45 89 f0\n45 09 e8\n41 21 d8\n41 09 d0\n41 01 c0\n44 89 d0\nc1 c0 1a\n44 89 d6\nc1 c6 15\n31 c6\n45 89 d7\n41 c1 c7 07\n41 31 f7\n44 89 c8\n44 31 e0\n44 21 d0\n44 31 e0\n8b 74 24 9c\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 a8\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 a4\nc1 c5 19\n31 ef\n03 54 24 c8\n01 f2\n01 fa\n89 54 24 a4\n01 ca\n01 c2\n41 8d 84 17 13 0d 38 53\n41 01 c3\n41 01 c0\n44 89 c0\nc1 c0 1e\n44 89 c1\nc1 c1 13\n31 c1\n44 89 c0\nc1 c0 0a\n31 c8\n44 89 c2\n44 21 f2\n45 89 c7\n45 09 f7\n45 21 ef\n41 09 d7\n41 01 c7\n44 89 d8\nc1 c0 1a\n44 89 de\nc1 c6 15\n31 c6\n44 89 da\nc1 c2 07\n31 f2\n44 89 d0\n44 31 c8\n44 21 d8\n44 31 c8\n8b 74 24 a0\n89 f7\nc1 c7 0f\n89 f5\nc1 c5 0d\nc1 ee 0a\n31 ee\n31 fe\n8b 7c 24 ac\n89 fd\n89 f9\nc1 c1 0e\nc1 ef 03\n31 cf\n8b 4c 24 a8\nc1 c5 19\n31 ef\n03 4c 24 cc\n01 f1\n01 f9\n89 4c 24 a8\n44 01 e1\n01 c1\n8d 84 0a 54 73 0a 65\n01 c3\n41 01 c7\n44 89 f8\nc1 c0 1e\n44 89 f9\nc1 c1 13\n31 c1\n44 89 f8\nc1 c0 0a\n31 c8\n44 89 f9\n44 21 c1\n44 89 fe\n44 09 c6\n44 21 f6\n09 ce\n01 c6\n89 d8\nc1 c0 1a\n89 d9\nc1 c1 15\n31 c1\n41 89 dc\n41 c1 c4 07\n41 31 cc\n44 89 d8\n44 31 d0\n21 d8\n44 31 d0\n8b 4c 24 a4\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 b0\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 ac\nc1 c5 19\n31 ef\n03 54 24 d0\n01 ca\n01 fa\n89 54 24 ac\n44 01 ca\n01 c2\n41 8d 84 14 bb 0a 6a 76\n41 01 c5\n01 c6\n89 f0\nc1 c0 1e\n89 f1\nc1 c1 13\n31 c1\n89 f0\nc1 c0 0a\n31 c8\n89 f1\n44 21 f9\n41 89 f1\n45 09 f9\n45 21 c1\n41 09 c9\n41 01 c1\n44 89 e8\nc1 c0 1a\n44 89 e9\nc1 c1 15\n31 c1\n45 89 ec\n41 c1 c4 07\n41 31 cc\n89 d8\n44 31 d8\n44 21 e8\n44 31 d8\n8b 4c 24 a8\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 b4\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 b0\nc1 c5 19\n31 ef\n03 54 24 d4\n01 ca\n01 fa\n89 54 24 b0\n44 01 d2\n01 c2\n41 8d 84 14 2e c9 c2 81\n41 01 c6\n41 01 c1\n44 89 c8\nc1 c0 1e\n44 89 c9\nc1 c1 13\n31 c1\n44 89 c8\nc1 c0 0a\n31 c8\n44 89 c9\n21 f1\n45 89 ca\n41 09 f2\n45 21 fa\n41 09 ca\n41 01 c2\n44 89 f0\nc1 c0 1a\n44 89 f1\nc1 c1 15\n31 c1\n45 89 f4\n41 c1 c4 07\n41 31 cc\n44 89 e8\n31 d8\n44 21 f0\n31 d8\n8b 4c 24 ac\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 b8\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 b4\nc1 c5 19\n31 ef\n03 54 24 98\n01 ca\n01 fa\n89 54 24 b4\n44 01 da\n01 c2\n41 8d 84 14 85 2c 72 92\n41 01 c0\n41 01 c2\n44 89 d0\nc1 c0 1e\n44 89 d1\nc1 c1 13\n31 c1\n44 89 d0\nc1 c0 0a\n31 c8\n44 89 d1\n44 21 c9\n45 89 d3\n45 09 cb\n41 21 f3\n41 09 cb\n41 01 c3\n44 89 c0\nc1 c0 1a\n44 89 c1\nc1 c1 15\n31 c1\n45 89 c4\n41 c1 c4 07\n41 31 cc\n44 89 f0\n44 31 e8\n44 21 c0\n44 31 e8\n8b 4c 24 b0\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 bc\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 b8\nc1 c5 19\n31 ef\n03 54 24 9c\n01 ca\n01 fa\n89 54 24 b8\n01 da\n01 c2\n41 8d 84 14 a1 e8 bf a2\n41 01 c7\n41 01 c3\n44 89 d8\nc1 c0 1e\n44 89 d9\nc1 c1 13\n31 c1\n44 89 d8\nc1 c0 0a\n31 c8\n44 89 d9\n44 21 d1\n44 89 db\n44 09 d3\n44 21 cb\n09 cb\n01 c3\n44 89 f8\nc1 c0 1a\n44 89 f9\nc1 c1 15\n31 c1\n45 89 fc\n41 c1 c4 07\n41 31 cc\n44 89 c0\n44 31 f0\n44 21 f8\n44 31 f0\n8b 4c 24 b4\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 c0\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 bc\nc1 c5 19\n31 ef\n03 54 24 a0\n01 ca\n01 fa\n89 54 24 bc\n44 01 ea\n01 c2\n41 8d 84 14 4b 66 1a a8\n01 c6\n01 c3\n89 d8\nc1 c0 1e\n89 d9\nc1 c1 13\n31 c1\n89 d8\nc1 c0 0a\n31 c8\n89 d9\n44 21 d9\n41 89 dd\n45 09 dd\n45 21 d5\n41 09 cd\n41 01 c5\n89 f0\nc1 c0 1a\n89 f1\nc1 c1 15\n31 c1\n41 89 f4\n41 c1 c4 07\n41 31 cc\n44 89 f8\n44 31 c0\n21 f0\n44 31 c0\n8b 4c 24 b8\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 c4\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 c0\nc1 c5 19\n31 ef\n03 54 24 a4\n01 ca\n01 fa\n89 54 24 c0\n44 01 f2\n01 c2\n41 8d 84 14 70 8b 4b c2\n41 01 c1\n41 01 c5\n44 89 e8\nc1 c0 1e\n44 89 e9\nc1 c1 13\n31 c1\n44 89 e8\nc1 c0 0a\n31 c8\n44 89 e9\n21 d9\n45 89 ee\n41 09 de\n45 21 de\n41 09 ce\n41 01 c6\n44 89 c8\nc1 c0 1a\n44 89 c9\nc1 c1 15\n31 c1\n45 89 cc\n41 c1 c4 07\n41 31 cc\n89 f0\n44 31 f8\n44 21 c8\n44 31 f8\n8b 4c 24 bc\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 c8\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 c4\nc1 c5 19\n31 ef\n03 54 24 a8\n01 ca\n01 fa\n89 54 24 c4\n44 01 c2\n01 c2\n41 8d 84 14 a3 51 6c c7\n41 01 c2\n41 01 c6\n44 89 f0\nc1 c0 1e\n44 89 f1\nc1 c1 13\n31 c1\n44 89 f0\nc1 c0 0a\n31 c8\n44 89 f1\n44 21 e9\n45 89 f4\n45 09 ec\n41 21 dc\n41 09 cc\n41 01 c4\n44 89 d0\nc1 c0 1a\n44 89 d1\nc1 c1 15\n31 c1\n45 89 d0\n41 c1 c0 07\n41 31 c8\n44 89 c8\n31 f0\n44 21 d0\n31 f0\n8b 4c 24 c0\n89 cf\nc1 c7 0f\n89 cd\nc1 c5 0d\nc1 e9 0a\n31 e9\n31 f9\n8b 7c 24 cc\n89 fd\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n8b 54 24 c8\nc1 c5 19\n31 ef\n03 54 24 ac\n01 ca\n01 fa\n89 54 24 c8\n44 01 fa\n01 c2\n41 8d 84 10 19 e8 92 d1\n41 01 c3\n41 01 c4\n44 89 e0\nc1 c0 1e\n44 89 e1\nc1 c1 13\n31 c1\n44 89 e0\nc1 c0 0a\n31 c8\n44 89 e2\n44 21 f2\n44 89 e1\n44 09 f1\n44 21 e9\n09 d1\n01 c1\n44 89 d8\nc1 c0 1a\n44 89 df\nc1 c7 15\n31 c7\n45 89 d8\n41 c1 c0 07\n41 31 f8\n44 89 d0\n44 31 c8\n44 21 d8\n44 31 c8\n8b 7c 24 c4\n89 fd\nc1 c5 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 ef\n8b 54 24 d0\n41 89 d7\n89 d5\nc1 c5 0e\nc1 ea 03\n31 ea\n8b 6c 24 cc\n41 c1 c7 19\n44 31 fa\n03 6c 24 b0\n01 fd\n01 d5\n89 6c 24 cc\n01 f5\n01 c5\n41 8d 84 28 24 06 99 d6\n01 c3\n01 c1\n89 c8\nc1 c0 1e\n89 ca\nc1 c2 13\n31 c2\n89 c8\nc1 c0 0a\n31 d0\n89 ca\n44 21 e2\n89 ce\n44 09 e6\n44 21 f6\n09 d6\n01 c6\n89 d8\nc1 c0 1a\n89 df\nc1 c7 15\n31 c7\n41 89 d8\n41 c1 c0 07\n41 31 f8\n44 89 d8\n44 31 d0\n21 d8\n44 31 d0\n8b 7c 24 c8\n89 fd\nc1 c5 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 ef\n8b 54 24 d4\n41 89 d7\n89 d5\nc1 c5 0e\nc1 ea 03\n31 ea\n8b 6c 24 d0\n41 c1 c7 19\n44 31 fa\n03 6c 24 b4\n01 fd\n01 d5\n89 6c 24 d0\n44 01 cd\n01 c5\n41 8d 84 28 85 35 0e f4\n41 01 c5\n01 c6\n89 f0\nc1 c0 1e\n89 f2\nc1 c2 13\n31 c2\n89 f0\nc1 c0 0a\n31 d0\n89 f2\n21 ca\n41 89 f1\n41 09 c9\n45 21 e1\n41 09 d1\n41 01 c1\n44 89 e8\nc1 c0 1a\n44 89 ef\nc1 c7 15\n31 c7\n45 89 e8\n41 c1 c0 07\n41 31 f8\n89 d8\n44 31 d8\n44 21 e8\n44 31 d8\n8b 7c 24 98\n8b 6c 24 cc\n41 89 ef\n41 c1 c7 0f\n89 ea\nc1 c2 0d\nc1 ed 0a\n31 d5\n44 31 fd\n41 89 ff\n41 c1 c7 19\n89 fa\nc1 c2 0e\nc1 ef 03\n31 d7\n44 31 ff\n8b 54 24 d4\n03 54 24 b8\n01 ea\n01 fa\n89 54 24 d4\n44 01 d2\n01 c2\n41 8d 84 10 70 a0 6a 10\n41 01 c6\n41 01 c1\n44 89 c8\nc1 c0 1e\n44 89 ca\nc1 c2 13\n31 c2\n44 89 c8\nc1 c0 0a\n31 d0\n44 89 ca\n21 f2\n45 89 cf\n41 09 f7\n41 21 cf\n41 09 d7\n41 01 c7\n44 89 f0\nc1 c0 1a\n44 89 f7\nc1 c7 15\n31 c7\n45 89 f0\n41 c1 c0 07\n41 31 f8\n44 89 e8\n31 d8\n44 21 f0\n31 d8\n8b 7c 24 d0\n89 fd\nc1 c5 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 ef\n8b 54 24 9c\n41 89 d2\n89 d5\nc1 c5 0e\nc1 ea 03\n31 ea\n8b 6c 24 98\n41 c1 c2 19\n44 31 d2\n03 6c 24 bc\n01 fd\n01 d5\n89 6c 24 98\n44 01 dd\n01 c5\n41 8d 84 28 16 c1 a4 19\n41 01 c4\n41 01 c7\n44 89 f8\nc1 c0 1e\n44 89 fa\nc1 c2 13\n31 c2\n44 89 f8\nc1 c0 0a\n31 d0\n44 89 fa\n44 21 ca\n45 89 fb\n45 09 cb\n41 21 f3\n41 09 d3\n41 01 c3\n44 89 e0\nc1 c0 1a\n44 89 e7\nc1 c7 15\n31 c7\n45 89 e0\n41 c1 c0 07\n41 31 f8\n44 89 f0\n44 31 e8\n44 21 e0\n44 31 e8\n8b 7c 24 d4\n89 fd\nc1 c5 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 ef\n8b 54 24 a0\n41 89 d2\n89 d5\nc1 c5 0e\nc1 ea 03\n31 ea\n8b 6c 24 9c\n41 c1 c2 19\n44 31 d2\n03 6c 24 c0\n01 fd\n01 d5\n89 6c 24 9c\n01 dd\n01 c5\n41 8d 84 28 08 6c 37 1e\n01 c1\n41 01 c3\n44 89 d8\nc1 c0 1e\n44 89 da\nc1 c2 13\n31 c2\n44 89 d8\nc1 c0 0a\n31 d0\n44 89 da\n44 21 fa\n45 89 d8\n45 09 f8\n45 21 c8\n41 09 d0\n41 01 c0\n89 c8\nc1 c0 1a\n89 cf\nc1 c7 15\n31 c7\n41 89 ca\n41 c1 c2 07\n41 31 fa\n44 89 e0\n44 31 f0\n21 c8\n44 31 f0\n8b 7c 24 98\n89 fd\nc1 c5 0f\n89 fb\nc1 c3 0d\nc1 ef 0a\n31 df\n31 ef\n8b 6c 24 a4\n89 eb\n89 ea\nc1 c2 0e\nc1 ed 03\n31 d5\n8b 54 24 a0\nc1 c3 19\n31 dd\n03 54 24 c4\n01 fa\n01 ea\n89 54 24 a0\n44 01 ea\n01 c2\n41 8d 84 12 4c 77 48 27\n01 c6\n41 01 c0\n44 89 c0\nc1 c0 1e\n44 89 c2\nc1 c2 13\n31 c2\n44 89 c0\nc1 c0 0a\n31 d0\n44 89 c2\n44 21 da\n44 89 c5\n44 09 dd\n44 21 fd\n09 d5\n01 c5\n89 f0\nc1 c0 1a\n89 f7\nc1 c7 15\n31 c7\n41 89 f2\n41 c1 c2 07\n41 31 fa\n89 c8\n44 31 e0\n21 f0\n44 31 e0\n8b 7c 24 9c\n89 fb\nc1 c3 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n31 df\n8b 54 24 a8\n41 89 d5\n89 d3\nc1 c3 0e\nc1 ea 03\n31 da\n8b 5c 24 a4\n41 c1 c5 19\n44 31 ea\n03 5c 24 c8\n01 fb\n01 d3\n89 5c 24 a4\n44 01 f3\n01 c3\n41 8d 84 1a b5 bc b0 34\n41 01 c1\n01 c5\n89 e8\nc1 c0 1e\n89 ea\nc1 c2 13\n31 c2\n89 e8\nc1 c0 0a\n31 d0\n89 ea\n44 21 c2\n89 eb\n44 09 c3\n44 21 db\n09 d3\n01 c3\n44 89 c8\nc1 c0 1a\n44 89 cf\nc1 c7 15\n31 c7\n45 89 ca\n41 c1 c2 07\n41 31 fa\n41 89 f5\n41 31 cd\n45 21 cd\n41 31 cd\n8b 7c 24 a0\n41 89 fe\n41 c1 c6 0f\n89 fa\nc1 c2 0d\nc1 ef 0a\n31 d7\n44 31 f7\n8b 54 24 ac\n41 89 d6\n89 d0\nc1 c0 0e\nc1 ea 03\n31 c2\n8b 44 24 a8\n41 c1 c6 19\n44 31 f2\n03 44 24 cc\n01 f8\n01 d0\n89 44 24 a8\n44 01 e0\n44 01 e8\n41 8d 84 02 b3 0c 1c 39\n41 01 c7\n01 c3\n89 d8\nc1 c0 1e\n89 da\nc1 c2 13\n31 c2\n89 d8\nc1 c0 0a\n31 d0\n89 da\n21 ea\n89 df\n09 ef\n44 21 c7\n09 d7\n01 c7\n44 89 f8\nc1 c0 1a\n44 89 fa\nc1 c2 15\n31 c2\n45 89 fa\n41 c1 c2 07\n41 31 d2\n45 89 cc\n41 31 f4\n45 21 fc\n41 31 f4\n8b 44 24 a4\n41 89 c6\n41 c1 c6 0f\n89 c2\nc1 c2 0d\nc1 e8 0a\n31 d0\n44 31 f0\n8b 54 24 b0\n41 89 d6\n41 89 d5\n41 c1 c5 0e\nc1 ea 03\n44 31 ea\n44 8b 6c 24 ac\n41 c1 c6 19\n44 31 f2\n44 03 6c 24 d0\n41 01 c5\n41 01 d5\n44 89 6c 24 ac\n41 01 cd\n45 01 e5\n43 8d 84 2a 4a aa d8 4e\n41 01 c3\n01 c7\n89 f8\nc1 c0 1e\n89 f9\nc1 c1 13\n31 c1\n89 f8\nc1 c0 0a\n31 c8\n89 f9\n21 d9\n41 89 fd\n41 09 dd\n41 21 ed\n41 09 cd\n41 01 c5\n44 89 d8\nc1 c0 1a\n44 89 d9\nc1 c1 15\n31 c1\n45 89 da\n41 c1 c2 07\n41 31 ca\n45 89 fc\n45 31 cc\n45 21 dc\n45 31 cc\n8b 54 24 a8\n41 89 d6\n41 c1 c6 0f\n89 d0\nc1 c0 0d\nc1 ea 0a\n31 c2\n44 31 f2\n8b 44 24 b4\n41 89 c6\n89 c1\nc1 c1 0e\nc1 e8 03\n31 c8\n8b 4c 24 b0\n41 c1 c6 19\n44 31 f0\n03 4c 24 d4\n01 d1\n01 c1\n89 4c 24 b0\n01 f1\n44 01 e1\n41 8d 84 0a 4f ca 9c 5b\n41 01 c0\n41 01 c5\n44 89 e8\nc1 c0 1e\n44 89 e9\nc1 c1 13\n31 c1\n44 89 e8\nc1 c0 0a\n31 c8\n44 89 e9\n21 f9\n44 89 ee\n09 fe\n21 de\n09 ce\n01 c6\n44 89 c0\nc1 c0 1a\n44 89 c1\nc1 c1 15\n31 c1\n45 89 c2\n41 c1 c2 07\n41 31 ca\n45 89 dc\n45 31 fc\n45 21 c4\n45 31 fc\n8b 54 24 ac\n41 89 d6\n41 c1 c6 0f\n89 d0\nc1 c0 0d\nc1 ea 0a\n31 c2\n44 31 f2\n8b 44 24 b8\n41 89 c6\n89 c1\nc1 c1 0e\nc1 e8 03\n31 c8\n8b 4c 24 b4\n41 c1 c6 19\n44 31 f0\n03 4c 24 98\n01 d1\n01 c1\n89 4c 24 b4\n44 01 c9\n44 01 e1\n41 8d 84 0a f3 6f 2e 68\n01 c5\n01 c6\n89 f0\nc1 c0 1e\n89 f1\nc1 c1 13\n31 c1\n89 f0\nc1 c0 0a\n31 c8\n89 f1\n44 21 e9\n41 89 f6\n45 09 ee\n41 21 fe\n41 09 ce\n41 01 c6\n89 e8\nc1 c0 1a\n89 e9\nc1 c1 15\n31 c1\n41 89 e9\n41 c1 c1 07\n41 31 c9\n45 89 c4\n45 31 dc\n41 21 ec\n45 31 dc\n8b 54 24 b0\n41 89 d2\n41 c1 c2 0f\n89 d0\nc1 c0 0d\nc1 ea 0a\n31 c2\n44 31 d2\n8b 44 24 bc\n41 89 c2\n89 c1\nc1 c1 0e\nc1 e8 03\n31 c8\n8b 4c 24 b8\n41 c1 c2 19\n44 31 d0\n03 4c 24 9c\n01 d1\n01 c1\n89 4c 24 b8\n44 01 f9\n44 01 e1\n41 8d 84 09 ee 82 8f 74\n01 c3\n41 01 c6\n44 89 f0\nc1 c0 1e\n44 89 f1\nc1 c1 13\n31 c1\n44 89 f0\nc1 c0 0a\n31 c8\n44 89 f1\n21 f1\n45 89 f2\n41 09 f2\n45 21 ea\n41 09 ca\n41 01 c2\n89 d8\nc1 c0 1a\n89 d9\nc1 c1 15\n31 c1\n41 89 d9\n41 c1 c1 07\n41 31 c9\n41 89 ec\n45 31 c4\n41 21 dc\n45 31 c4\n8b 54 24 b4\n41 89 d7\n41 c1 c7 0f\n89 d0\nc1 c0 0d\nc1 ea 0a\n31 c2\n44 31 fa\n8b 44 24 c0\n41 89 c7\n89 c1\nc1 c1 0e\nc1 e8 03\n31 c8\n8b 4c 24 bc\n41 c1 c7 19\n44 31 f8\n03 4c 24 a0\n01 d1\n01 c1\n89 4c 24 bc\n44 01 d9\n44 01 e1\n41 8d 84 09 6f 63 a5 78\n01 c7\n41 01 c2\n44 89 d0\nc1 c0 1e\n44 89 d1\nc1 c1 13\n31 c1\n44 89 d0\nc1 c0 0a\n31 c8\n44 89 d1\n44 21 f1\n45 89 d7\n45 09 f7\n41 21 f7\n41 09 cf\n41 01 c7\n89 f8\nc1 c0 1a\n89 f9\nc1 c1 15\n31 c1\n41 89 f9\n41 c1 c1 07\n41 31 c9\n41 89 dc\n41 31 ec\n41 21 fc\n41 31 ec\n8b 54 24 b8\n41 89 d3\n41 c1 c3 0f\n89 d0\nc1 c0 0d\nc1 ea 0a\n31 c2\n44 31 da\n8b 44 24 c4\n41 89 c3\n89 c1\nc1 c1 0e\nc1 e8 03\n31 c8\n8b 4c 24 c0\n41 c1 c3 19\n44 31 d8\n03 4c 24 a4\n01 d1\n01 c1\n89 4c 24 c0\n44 01 c1\n44 01 e1\n41 8d 84 09 14 78 c8 84\n41 01 c5\n41 01 c7\n44 89 f8\nc1 c0 1e\n44 89 f9\nc1 c1 13\n31 c1\n44 89 f8\nc1 c0 0a\n31 c8\n44 89 f9\n44 21 d1\n45 89 fb\n45 09 d3\n45 21 f3\n41 09 cb\n41 01 c3\n44 89 e8\nc1 c0 1a\n44 89 ea\nc1 c2 15\n31 c2\n45 89 e8\n41 c1 c0 07\n41 31 d0\n41 89 fc\n41 31 dc\n45 21 ec\n41 31 dc\n8b 44 24 bc\n41 89 c1\n41 c1 c1 0f\n89 c1\nc1 c1 0d\nc1 e8 0a\n31 c8\n44 31 c8\n8b 4c 24 c8\n41 89 c9\n89 ca\nc1 c2 0e\nc1 e9 03\n31 d1\n8b 54 24 c4\n41 c1 c1 19\n44 31 c9\n03 54 24 a8\n01 c2\n01 ca\n89 54 24 c4\n01 ea\n44 01 e2\n41 8d 84 10 08 02 c7 8c\n01 c6\n41 01 c3\n44 89 d8\nc1 c0 1e\n44 89 d9\nc1 c1 13\n31 c1\n44 89 d8\nc1 c0 0a\n31 c8\n44 89 d9\n44 21 f9\n45 89 dc\n45 09 fc\n45 21 d4\n41 09 cc\n41 01 c4\n89 f0\nc1 c0 1a\n89 f2\nc1 c2 15\n31 c2\n41 89 f0\n41 c1 c0 07\n41 31 d0\n44 89 ea\n31 fa\n21 f2\n31 fa\n8b 44 24 c0\n89 c5\nc1 c5 0f\n89 c1\nc1 c1 0d\nc1 e8 0a\n31 c8\n31 e8\n8b 4c 24 cc\n41 89 c9\n89 cd\nc1 c5 0e\nc1 e9 03\n31 e9\n8b 6c 24 c8\n41 c1 c1 19\n44 31 c9\n03 6c 24 ac\n01 c5\n01 cd\n89 6c 24 c8\n01 dd\n01 d5\n41 8d 84 28 fa ff be 90\n41 01 c6\n41 01 c4\n44 89 e0\nc1 c0 1e\n44 89 e1\nc1 c1 13\n31 c1\n44 89 e0\nc1 c0 0a\n31 c8\n44 89 e1\n44 21 d9\n45 89 e1\n45 09 d9\n45 21 f9\n41 09 c9\n41 01 c1\n44 89 f0\nc1 c0 1a\n44 89 f1\nc1 c1 15\n31 c1\n45 89 f0\n41 c1 c0 07\n41 31 c8\n89 f5\n44 31 ed\n44 21 f5\n44 31 ed\n8b 44 24 c4\n89 c1\nc1 c1 0f\n89 c3\nc1 c3 0d\nc1 e8 0a\n31 d8\n31 c8\n8b 4c 24 d0\n89 cb\n89 ca\nc1 c2 0e\nc1 e9 03\n31 d1\n8b 54 24 cc\nc1 c3 19\n31 d9\n03 54 24 b0\n01 c2\n01 ca\n89 54 24 cc\n01 fa\n01 ea\n41 8d 84 10 eb 6c 50 a4\n41 01 c2\n41 01 c1\n44 89 c8\nc1 c0 1e\n44 89 c9\nc1 c1 13\n31 c1\n44 89 c8\nc1 c0 0a\n31 c8\n44 89 c9\n44 21 e1\n44 89 cb\n44 09 e3\n44 21 db\n09 cb\n01 c3\n44 89 d0\nc1 c0 1a\n44 89 d1\nc1 c1 15\n31 c1\n45 89 d0\n41 c1 c0 07\n41 31 c8\n44 89 f5\n31 f5\n44 21 d5\n31 f5\n8b 44 24 c8\n89 c1\nc1 c1 0f\n89 c7\nc1 c7 0d\nc1 e8 0a\n31 f8\n31 c8\n8b 4c 24 d4\n89 cf\n89 ca\nc1 c2 0e\nc1 e9 03\n31 d1\n8b 54 24 d0\nc1 c7 19\n31 f9\n03 54 24 b4\n01 c2\n01 ca\n89 54 24 d0\n44 01 ea\n01 ea\n41 8d 84 10 f7 a3 f9 be\n41 01 c7\n01 c3\n89 d8\nc1 c0 1e\n89 d9\nc1 c1 13\n31 c1\n41 89 d8\n41 c1 c0 0a\n41 31 c8\n89 d8\n44 21 c8\n89 dd\n44 09 cd\n44 21 e5\n09 c5\n44 89 f8\nc1 c0 1a\n44 89 f9\nc1 c1 15\n31 c1\n45 89 fd\n41 c1 c5 07\n41 31 cd\n8b 44 24 98\n8b 4c 24 cc\n89 cf\nc1 c7 0f\n89 ca\nc1 c2 0d\nc1 e9 0a\n31 d1\n31 f9\n89 c2\n89 c7\nc1 c7 0e\nc1 e8 03\n31 f8\n48 8b 7c 24 f8\nc1 c2 19\n31 d0\n8b 54 24 d4\n03 54 24 b8\n01 ca\n01 c2\n89 54 24 d4\n01 f2\n44 89 d0\n44 31 f0\n44 21 f8\n44 31 f0\n01 c2\n41 8d 84 15 f2 78 71 c6\n48 8b 4c 24 e8\n03 29\n44 01 c5\n01 c5\n89 29\n03 59 04\n89 59 04\n44 03 49 08\n44 89 49 08\n44 03 61 0c\n44 89 61 0c\n44 03 59 10\n41 01 c3\n48 83 c7 40\n44 89 59 10\n44 03 79 14\n44 89 79 14\n44 03 51 18\n44 89 51 18\n44 03 71 1c\n44 89 71 1c\n48 3b 7c 24 e0\n0f 82 f4 dc ff ff\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1055
S'.text:0000000000403080\n.text:0000000000403081\n.text:0000000000403083\n.text:0000000000403085\n.text:0000000000403087\n.text:0000000000403089\n.text:000000000040308a\n.text:000000000040308d\n.text:0000000000403091\n.text:0000000000403094\n.text:0000000000403096\n.text:0000000000403099\n.text:000000000040309d\n.text:00000000004030a1\n.text:00000000004030a5\n.text:00000000004030a9\n.text:00000000004030ad\n.text:00000000004030b1\n.text:00000000004030b4\n.text:00000000004030b8\n.text:00000000004030bb\n.text:00000000004030bd\n.text:00000000004030c0\n.text:00000000004030c4\n.text:00000000004030c9\n.text:00000000004030cd\n.text:00000000004030d2\n.text:00000000004030d5\n.text:00000000004030db\n.text:00000000004030e0\n.text:00000000004030e2\n.text:00000000004030f0\n.text:00000000004030f3\n.text:00000000004030f5\n.text:00000000004030f9\n.text:00000000004030fc\n.text:0000000000403100\n.text:0000000000403102\n.text:0000000000403104\n.text:0000000000403107\n.text:0000000000403109\n.text:000000000040310c\n.text:000000000040310e\n.text:0000000000403110\n.text:0000000000403113\n.text:0000000000403115\n.text:0000000000403117\n.text:0000000000403119\n.text:000000000040311b\n.text:000000000040311d\n.text:0000000000403120\n.text:0000000000403122\n.text:0000000000403124\n.text:0000000000403127\n.text:000000000040312a\n.text:000000000040312d\n.text:0000000000403130\n.text:0000000000403132\n.text:0000000000403135\n.text:0000000000403138\n.text:000000000040313a\n.text:000000000040313d\n.text:0000000000403140\n.text:0000000000403143\n.text:0000000000403146\n.text:0000000000403149\n.text:000000000040314c\n.text:0000000000403150\n.text:0000000000403155\n.text:000000000040315a\n.text:000000000040315e\n.text:0000000000403166\n.text:000000000040316e\n.text:0000000000403170\n.text:0000000000403172\n.text:0000000000403175\n.text:0000000000403177\n.text:000000000040317a\n.text:000000000040317c\n.text:000000000040317e\n.text:0000000000403181\n.text:0000000000403183\n.text:0000000000403185\n.text:0000000000403187\n.text:0000000000403189\n.text:000000000040318b\n.text:000000000040318d\n.text:000000000040318f\n.text:0000000000403191\n.text:0000000000403194\n.text:0000000000403197\n.text:000000000040319a\n.text:000000000040319d\n.text:000000000040319f\n.text:00000000004031a2\n.text:00000000004031a5\n.text:00000000004031a7\n.text:00000000004031aa\n.text:00000000004031ad\n.text:00000000004031b0\n.text:00000000004031b3\n.text:00000000004031b6\n.text:00000000004031b9\n.text:00000000004031bd\n.text:00000000004031c5\n.text:00000000004031cd\n.text:00000000004031d0\n.text:00000000004031d3\n.text:00000000004031d6\n.text:00000000004031d9\n.text:00000000004031dc\n.text:00000000004031de\n.text:00000000004031e1\n.text:00000000004031e4\n.text:00000000004031e6\n.text:00000000004031e9\n.text:00000000004031eb\n.text:00000000004031ee\n.text:00000000004031f0\n.text:00000000004031f2\n.text:00000000004031f4\n.text:00000000004031f6\n.text:00000000004031f9\n.text:00000000004031fc\n.text:00000000004031ff\n.text:0000000000403202\n.text:0000000000403204\n.text:0000000000403207\n.text:000000000040320a\n.text:000000000040320c\n.text:000000000040320f\n.text:0000000000403212\n.text:0000000000403215\n.text:0000000000403218\n.text:000000000040321d\n.text:0000000000403220\n.text:0000000000403224\n.text:000000000040322c\n.text:0000000000403234\n.text:0000000000403237\n.text:000000000040323a\n.text:000000000040323d\n.text:0000000000403240\n.text:0000000000403243\n.text:0000000000403245\n.text:0000000000403248\n.text:000000000040324b\n.text:000000000040324d\n.text:0000000000403252\n.text:0000000000403255\n.text:0000000000403258\n.text:000000000040325b\n.text:000000000040325e\n.text:0000000000403260\n.text:0000000000403262\n.text:0000000000403264\n.text:0000000000403267\n.text:000000000040326a\n.text:000000000040326d\n.text:0000000000403270\n.text:0000000000403272\n.text:0000000000403275\n.text:0000000000403278\n.text:000000000040327a\n.text:000000000040327d\n.text:0000000000403280\n.text:0000000000403283\n.text:0000000000403286\n.text:000000000040328b\n.text:000000000040328e\n.text:0000000000403292\n.text:000000000040329a\n.text:00000000004032a1\n.text:00000000004032a4\n.text:00000000004032a7\n.text:00000000004032aa\n.text:00000000004032ad\n.text:00000000004032b0\n.text:00000000004032b2\n.text:00000000004032b5\n.text:00000000004032b8\n.text:00000000004032ba\n.text:00000000004032bd\n.text:00000000004032c0\n.text:00000000004032c3\n.text:00000000004032c6\n.text:00000000004032c9\n.text:00000000004032cb\n.text:00000000004032cd\n.text:00000000004032cf\n.text:00000000004032d2\n.text:00000000004032d4\n.text:00000000004032d7\n.text:00000000004032d9\n.text:00000000004032db\n.text:00000000004032de\n.text:00000000004032e0\n.text:00000000004032e3\n.text:00000000004032e6\n.text:00000000004032e8\n.text:00000000004032eb\n.text:00000000004032f0\n.text:00000000004032f3\n.text:00000000004032fb\n.text:00000000004032fd\n.text:00000000004032ff\n.text:0000000000403301\n.text:0000000000403304\n.text:0000000000403306\n.text:0000000000403309\n.text:000000000040330b\n.text:000000000040330d\n.text:0000000000403310\n.text:0000000000403312\n.text:0000000000403314\n.text:0000000000403317\n.text:0000000000403319\n.text:000000000040331c\n.text:000000000040331f\n.text:0000000000403321\n.text:0000000000403323\n.text:0000000000403325\n.text:0000000000403328\n.text:000000000040332a\n.text:000000000040332d\n.text:000000000040332f\n.text:0000000000403331\n.text:0000000000403334\n.text:0000000000403336\n.text:0000000000403338\n.text:000000000040333b\n.text:000000000040333d\n.text:0000000000403340\n.text:0000000000403345\n.text:0000000000403348\n.text:0000000000403350\n.text:0000000000403353\n.text:0000000000403355\n.text:0000000000403357\n.text:000000000040335a\n.text:000000000040335c\n.text:000000000040335f\n.text:0000000000403361\n.text:0000000000403363\n.text:0000000000403366\n.text:0000000000403368\n.text:000000000040336a\n.text:000000000040336c\n.text:000000000040336e\n.text:0000000000403370\n.text:0000000000403373\n.text:0000000000403375\n.text:0000000000403377\n.text:000000000040337a\n.text:000000000040337d\n.text:0000000000403380\n.text:0000000000403383\n.text:0000000000403385\n.text:0000000000403388\n.text:000000000040338b\n.text:000000000040338d\n.text:000000000040338f\n.text:0000000000403391\n.text:0000000000403394\n.text:0000000000403396\n.text:000000000040339b\n.text:000000000040339e\n.text:00000000004033a6\n.text:00000000004033a9\n.text:00000000004033ab\n.text:00000000004033ad\n.text:00000000004033b0\n.text:00000000004033b2\n.text:00000000004033b5\n.text:00000000004033b7\n.text:00000000004033b9\n.text:00000000004033bc\n.text:00000000004033be\n.text:00000000004033c0\n.text:00000000004033c2\n.text:00000000004033c5\n.text:00000000004033c8\n.text:00000000004033cb\n.text:00000000004033ce\n.text:00000000004033d1\n.text:00000000004033d4\n.text:00000000004033d7\n.text:00000000004033da\n.text:00000000004033dd\n.text:00000000004033df\n.text:00000000004033e2\n.text:00000000004033e5\n.text:00000000004033e7\n.text:00000000004033ea\n.text:00000000004033ec\n.text:00000000004033ef\n.text:00000000004033f1\n.text:00000000004033f5\n.text:00000000004033f7\n.text:00000000004033fe\n.text:0000000000403401\n.text:0000000000403404\n.text:0000000000403407\n.text:000000000040340a\n.text:000000000040340d\n.text:0000000000403410\n.text:0000000000403412\n.text:0000000000403415\n.text:0000000000403418\n.text:000000000040341a\n.text:000000000040341d\n.text:000000000040341f\n.text:0000000000403422\n.text:0000000000403425\n.text:0000000000403428\n.text:000000000040342b\n.text:000000000040342e\n.text:0000000000403431\n.text:0000000000403434\n.text:0000000000403437\n.text:000000000040343a\n.text:000000000040343c\n.text:000000000040343f\n.text:0000000000403442\n.text:0000000000403444\n.text:0000000000403447\n.text:000000000040344a\n.text:000000000040344d\n.text:0000000000403450\n.text:0000000000403454\n.text:0000000000403456\n.text:000000000040345d\n.text:000000000040345f\n.text:0000000000403462\n.text:0000000000403465\n.text:0000000000403468\n.text:000000000040346b\n.text:000000000040346e\n.text:0000000000403470\n.text:0000000000403473\n.text:0000000000403476\n.text:0000000000403478\n.text:000000000040347b\n.text:000000000040347e\n.text:0000000000403481\n.text:0000000000403484\n.text:0000000000403486\n.text:0000000000403488\n.text:000000000040348a\n.text:000000000040348c\n.text:000000000040348f\n.text:0000000000403491\n.text:0000000000403494\n.text:0000000000403496\n.text:0000000000403498\n.text:000000000040349b\n.text:000000000040349d\n.text:00000000004034a0\n.text:00000000004034a3\n.text:00000000004034a5\n.text:00000000004034a8\n.text:00000000004034ad\n.text:00000000004034b0\n.text:00000000004034b3\n.text:00000000004034bb\n.text:00000000004034bd\n.text:00000000004034bf\n.text:00000000004034c1\n.text:00000000004034c4\n.text:00000000004034c6\n.text:00000000004034c9\n.text:00000000004034cb\n.text:00000000004034cd\n.text:00000000004034d0\n.text:00000000004034d2\n.text:00000000004034d4\n.text:00000000004034d7\n.text:00000000004034da\n.text:00000000004034dd\n.text:00000000004034e0\n.text:00000000004034e3\n.text:00000000004034e6\n.text:00000000004034e8\n.text:00000000004034eb\n.text:00000000004034ed\n.text:00000000004034f0\n.text:00000000004034f2\n.text:00000000004034f4\n.text:00000000004034f7\n.text:00000000004034f9\n.text:00000000004034fb\n.text:00000000004034fe\n.text:0000000000403500\n.text:0000000000403503\n.text:0000000000403508\n.text:000000000040350b\n.text:0000000000403513\n.text:0000000000403515\n.text:0000000000403518\n.text:000000000040351b\n.text:000000000040351e\n.text:0000000000403521\n.text:0000000000403524\n.text:0000000000403526\n.text:0000000000403529\n.text:000000000040352c\n.text:000000000040352e\n.text:0000000000403531\n.text:0000000000403533\n.text:0000000000403536\n.text:0000000000403538\n.text:000000000040353b\n.text:000000000040353d\n.text:000000000040353f\n.text:0000000000403541\n.text:0000000000403544\n.text:0000000000403546\n.text:0000000000403549\n.text:000000000040354b\n.text:000000000040354d\n.text:0000000000403550\n.text:0000000000403552\n.text:0000000000403554\n.text:0000000000403556\n.text:0000000000403558\n.text:000000000040355a\n.text:000000000040355f\n.text:0000000000403562\n.text:000000000040356a\n.text:000000000040356d\n.text:000000000040356f\n.text:0000000000403571\n.text:0000000000403574\n.text:0000000000403576\n.text:0000000000403579\n.text:000000000040357b\n.text:000000000040357d\n.text:0000000000403580\n.text:0000000000403582\n.text:0000000000403584\n.text:0000000000403587\n.text:000000000040358a\n.text:000000000040358d\n.text:0000000000403590\n.text:0000000000403593\n.text:0000000000403596\n.text:0000000000403599\n.text:000000000040359c\n.text:000000000040359f\n.text:00000000004035a2\n.text:00000000004035a4\n.text:00000000004035a7\n.text:00000000004035aa\n.text:00000000004035ac\n.text:00000000004035ae\n.text:00000000004035b0\n.text:00000000004035b3\n.text:00000000004035b5\n.text:00000000004035b9\n.text:00000000004035bb\n.text:00000000004035c2\n.text:00000000004035c5\n.text:00000000004035c8\n.text:00000000004035cb\n.text:00000000004035ce\n.text:00000000004035d1\n.text:00000000004035d4\n.text:00000000004035d6\n.text:00000000004035d9\n.text:00000000004035dc\n.text:00000000004035de\n.text:00000000004035e1\n.text:00000000004035e3\n.text:00000000004035e6\n.text:00000000004035e9\n.text:00000000004035ec\n.text:00000000004035ef\n.text:00000000004035f2\n.text:00000000004035f5\n.text:00000000004035f8\n.text:00000000004035fb\n.text:00000000004035fe\n.text:0000000000403600\n.text:0000000000403603\n.text:0000000000403606\n.text:0000000000403608\n.text:000000000040360b\n.text:000000000040360d\n.text:0000000000403610\n.text:0000000000403612\n.text:0000000000403616\n.text:0000000000403618\n.text:000000000040361f\n.text:0000000000403621\n.text:0000000000403624\n.text:0000000000403627\n.text:000000000040362a\n.text:000000000040362d\n.text:0000000000403630\n.text:0000000000403632\n.text:0000000000403635\n.text:0000000000403638\n.text:000000000040363a\n.text:000000000040363d\n.text:0000000000403640\n.text:0000000000403643\n.text:0000000000403646\n.text:0000000000403648\n.text:000000000040364a\n.text:000000000040364c\n.text:000000000040364e\n.text:0000000000403651\n.text:0000000000403653\n.text:0000000000403656\n.text:0000000000403658\n.text:000000000040365a\n.text:000000000040365d\n.text:000000000040365f\n.text:0000000000403662\n.text:0000000000403665\n.text:0000000000403667\n.text:000000000040366a\n.text:000000000040366e\n.text:0000000000403670\n.text:0000000000403672\n.text:0000000000403679\n.text:000000000040367c\n.text:000000000040367e\n.text:0000000000403680\n.text:0000000000403683\n.text:0000000000403685\n.text:0000000000403688\n.text:000000000040368a\n.text:000000000040368c\n.text:000000000040368f\n.text:0000000000403691\n.text:0000000000403693\n.text:0000000000403696\n.text:0000000000403699\n.text:000000000040369c\n.text:000000000040369f\n.text:00000000004036a2\n.text:00000000004036a5\n.text:00000000004036a8\n.text:00000000004036ab\n.text:00000000004036ae\n.text:00000000004036b1\n.text:00000000004036b3\n.text:00000000004036b6\n.text:00000000004036b9\n.text:00000000004036bb\n.text:00000000004036bd\n.text:00000000004036c0\n.text:00000000004036c3\n.text:00000000004036c6\n.text:00000000004036cb\n.text:00000000004036ce\n.text:00000000004036d6\n.text:00000000004036d8\n.text:00000000004036db\n.text:00000000004036de\n.text:00000000004036e1\n.text:00000000004036e4\n.text:00000000004036e7\n.text:00000000004036e9\n.text:00000000004036ec\n.text:00000000004036ef\n.text:00000000004036f1\n.text:00000000004036f4\n.text:00000000004036f6\n.text:00000000004036f9\n.text:00000000004036fc\n.text:00000000004036ff\n.text:0000000000403702\n.text:0000000000403705\n.text:0000000000403707\n.text:000000000040370a\n.text:000000000040370c\n.text:000000000040370f\n.text:0000000000403711\n.text:0000000000403713\n.text:0000000000403716\n.text:0000000000403718\n.text:000000000040371a\n.text:000000000040371d\n.text:000000000040371f\n.text:0000000000403722\n.text:0000000000403724\n.text:0000000000403727\n.text:0000000000403729\n.text:000000000040372c\n.text:000000000040372f\n.text:0000000000403732\n.text:0000000000403736\n.text:0000000000403739\n.text:000000000040373c\n.text:000000000040373f\n.text:0000000000403742\n.text:0000000000403744\n.text:0000000000403746\n.text:0000000000403748\n.text:000000000040374d\n.text:0000000000403750\n.text:0000000000403753\n.text:0000000000403758\n.text:000000000040375b\n.text:000000000040375e\n.text:0000000000403766\n.text:0000000000403769\n.text:000000000040376c\n.text:000000000040376f\n.text:0000000000403772\n.text:0000000000403775\n.text:0000000000403778\n.text:000000000040377a\n.text:000000000040377d\n.text:0000000000403780\n.text:0000000000403782\n.text:0000000000403785\n.text:0000000000403788\n.text:000000000040378b\n.text:000000000040378e\n.text:0000000000403791\n.text:0000000000403794\n.text:0000000000403797\n.text:000000000040379a\n.text:000000000040379d\n.text:00000000004037a0\n.text:00000000004037a3\n.text:00000000004037a5\n.text:00000000004037a8\n.text:00000000004037ac\n.text:00000000004037af\n.text:00000000004037b1\n.text:00000000004037b4\n.text:00000000004037b7\n.text:00000000004037ba\n.text:00000000004037be\n.text:00000000004037c0\n.text:00000000004037c3\n.text:00000000004037c5\n.text:00000000004037c8\n.text:00000000004037cb\n.text:00000000004037cd\n.text:00000000004037cf\n.text:00000000004037d3\n.text:00000000004037d6\n.text:00000000004037d8\n.text:00000000004037db\n.text:00000000004037de\n.text:00000000004037e0\n.text:00000000004037e4\n.text:00000000004037e8\n.text:00000000004037eb\n.text:00000000004037ef\n.text:00000000004037f1\n.text:00000000004037f3\n.text:00000000004037f7\n.text:00000000004037f9\n.text:00000000004037fb\n.text:0000000000403803\n.text:0000000000403806\n.text:0000000000403809\n.text:000000000040380c\n.text:000000000040380f\n.text:0000000000403812\n.text:0000000000403815\n.text:0000000000403817\n.text:000000000040381a\n.text:000000000040381d\n.text:000000000040381f\n.text:0000000000403822\n.text:0000000000403825\n.text:0000000000403828\n.text:000000000040382b\n.text:000000000040382e\n.text:0000000000403831\n.text:0000000000403834\n.text:0000000000403837\n.text:000000000040383a\n.text:000000000040383d\n.text:0000000000403840\n.text:0000000000403842\n.text:0000000000403845\n.text:0000000000403849\n.text:000000000040384c\n.text:000000000040384f\n.text:0000000000403851\n.text:0000000000403854\n.text:0000000000403856\n.text:000000000040385a\n.text:000000000040385c\n.text:000000000040385f\n.text:0000000000403861\n.text:0000000000403864\n.text:0000000000403867\n.text:0000000000403869\n.text:000000000040386b\n.text:000000000040386f\n.text:0000000000403871\n.text:0000000000403873\n.text:0000000000403876\n.text:0000000000403879\n.text:000000000040387b\n.text:000000000040387f\n.text:0000000000403882\n.text:0000000000403884\n.text:0000000000403888\n.text:000000000040388a\n.text:000000000040388c\n.text:0000000000403890\n.text:0000000000403893\n.text:0000000000403895\n.text:000000000040389d\n.text:000000000040389f\n.text:00000000004038a2\n.text:00000000004038a5\n.text:00000000004038a8\n.text:00000000004038ab\n.text:00000000004038ae\n.text:00000000004038b0\n.text:00000000004038b3\n.text:00000000004038b6\n.text:00000000004038b8\n.text:00000000004038bb\n.text:00000000004038be\n.text:00000000004038c1\n.text:00000000004038c4\n.text:00000000004038c7\n.text:00000000004038ca\n.text:00000000004038cd\n.text:00000000004038cf\n.text:00000000004038d2\n.text:00000000004038d4\n.text:00000000004038d7\n.text:00000000004038d9\n.text:00000000004038dc\n.text:00000000004038e0\n.text:00000000004038e3\n.text:00000000004038e6\n.text:00000000004038e9\n.text:00000000004038eb\n.text:00000000004038ee\n.text:00000000004038f2\n.text:00000000004038f4\n.text:00000000004038f7\n.text:00000000004038f9\n.text:00000000004038fc\n.text:00000000004038ff\n.text:0000000000403901\n.text:0000000000403903\n.text:0000000000403907\n.text:0000000000403909\n.text:000000000040390b\n.text:000000000040390e\n.text:0000000000403911\n.text:0000000000403913\n.text:0000000000403917\n.text:000000000040391a\n.text:000000000040391c\n.text:0000000000403920\n.text:0000000000403922\n.text:0000000000403924\n.text:0000000000403928\n.text:000000000040392a\n.text:000000000040392c\n.text:0000000000403934\n.text:0000000000403937\n.text:000000000040393a\n.text:000000000040393d\n.text:0000000000403940\n.text:0000000000403943\n.text:0000000000403946\n.text:0000000000403948\n.text:000000000040394b\n.text:000000000040394e\n.text:0000000000403950\n.text:0000000000403953\n.text:0000000000403956\n.text:0000000000403959\n.text:000000000040395c\n.text:000000000040395f\n.text:0000000000403962\n.text:0000000000403965\n.text:0000000000403968\n.text:000000000040396b\n.text:000000000040396e\n.text:0000000000403971\n.text:0000000000403973\n.text:0000000000403976\n.text:0000000000403979\n.text:000000000040397b\n.text:000000000040397d\n.text:0000000000403980\n.text:0000000000403983\n.text:0000000000403986\n.text:000000000040398a\n.text:000000000040398c\n.text:000000000040398f\n.text:0000000000403991\n.text:0000000000403994\n.text:0000000000403997\n.text:0000000000403999\n.text:000000000040399b\n.text:000000000040399f\n.text:00000000004039a1\n.text:00000000004039a3\n.text:00000000004039a6\n.text:00000000004039a9\n.text:00000000004039ab\n.text:00000000004039af\n.text:00000000004039b2\n.text:00000000004039b4\n.text:00000000004039b8\n.text:00000000004039ba\n.text:00000000004039bc\n.text:00000000004039c0\n.text:00000000004039c3\n.text:00000000004039c5\n.text:00000000004039cc\n.text:00000000004039cf\n.text:00000000004039d2\n.text:00000000004039d5\n.text:00000000004039d8\n.text:00000000004039db\n.text:00000000004039de\n.text:00000000004039e0\n.text:00000000004039e3\n.text:00000000004039e6\n.text:00000000004039e8\n.text:00000000004039eb\n.text:00000000004039ee\n.text:00000000004039f1\n.text:00000000004039f4\n.text:00000000004039f7\n.text:00000000004039fa\n.text:00000000004039fd\n.text:0000000000403a00\n.text:0000000000403a03\n.text:0000000000403a06\n.text:0000000000403a09\n.text:0000000000403a0b\n.text:0000000000403a0e\n.text:0000000000403a11\n.text:0000000000403a13\n.text:0000000000403a16\n.text:0000000000403a18\n.text:0000000000403a1b\n.text:0000000000403a1d\n.text:0000000000403a21\n.text:0000000000403a23\n.text:0000000000403a26\n.text:0000000000403a28\n.text:0000000000403a2b\n.text:0000000000403a2e\n.text:0000000000403a30\n.text:0000000000403a32\n.text:0000000000403a36\n.text:0000000000403a38\n.text:0000000000403a3a\n.text:0000000000403a3d\n.text:0000000000403a40\n.text:0000000000403a42\n.text:0000000000403a46\n.text:0000000000403a49\n.text:0000000000403a4b\n.text:0000000000403a4f\n.text:0000000000403a51\n.text:0000000000403a53\n.text:0000000000403a57\n.text:0000000000403a5a\n.text:0000000000403a5c\n.text:0000000000403a63\n.text:0000000000403a66\n.text:0000000000403a69\n.text:0000000000403a6c\n.text:0000000000403a6f\n.text:0000000000403a72\n.text:0000000000403a75\n.text:0000000000403a77\n.text:0000000000403a7a\n.text:0000000000403a7d\n.text:0000000000403a7f\n.text:0000000000403a82\n.text:0000000000403a85\n.text:0000000000403a88\n.text:0000000000403a8b\n.text:0000000000403a8e\n.text:0000000000403a91\n.text:0000000000403a94\n.text:0000000000403a97\n.text:0000000000403a9a\n.text:0000000000403a9d\n.text:0000000000403aa0\n.text:0000000000403aa2\n.text:0000000000403aa5\n.text:0000000000403aa8\n.text:0000000000403aaa\n.text:0000000000403aad\n.text:0000000000403ab0\n.text:0000000000403ab3\n.text:0000000000403ab6\n.text:0000000000403aba\n.text:0000000000403abc\n.text:0000000000403abf\n.text:0000000000403ac1\n.text:0000000000403ac4\n.text:0000000000403ac7\n.text:0000000000403ac9\n.text:0000000000403acb\n.text:0000000000403acf\n.text:0000000000403ad1\n.text:0000000000403ad3\n.text:0000000000403ad6\n.text:0000000000403ad9\n.text:0000000000403adb\n.text:0000000000403adf\n.text:0000000000403ae2\n.text:0000000000403ae4\n.text:0000000000403ae8\n.text:0000000000403aea\n.text:0000000000403aec\n.text:0000000000403af0\n.text:0000000000403af2\n.text:0000000000403af4\n.text:0000000000403afb\n.text:0000000000403afe\n.text:0000000000403b01\n.text:0000000000403b04\n.text:0000000000403b07\n.text:0000000000403b0a\n.text:0000000000403b0d\n.text:0000000000403b0f\n.text:0000000000403b12\n.text:0000000000403b15\n.text:0000000000403b17\n.text:0000000000403b1a\n.text:0000000000403b1d\n.text:0000000000403b20\n.text:0000000000403b23\n.text:0000000000403b26\n.text:0000000000403b28\n.text:0000000000403b2a\n.text:0000000000403b2d\n.text:0000000000403b30\n.text:0000000000403b33\n.text:0000000000403b36\n.text:0000000000403b38\n.text:0000000000403b3b\n.text:0000000000403b3e\n.text:0000000000403b40\n.text:0000000000403b43\n.text:0000000000403b46\n.text:0000000000403b49\n.text:0000000000403b4c\n.text:0000000000403b50\n.text:0000000000403b52\n.text:0000000000403b55\n.text:0000000000403b57\n.text:0000000000403b5a\n.text:0000000000403b5d\n.text:0000000000403b5f\n.text:0000000000403b61\n.text:0000000000403b65\n.text:0000000000403b67\n.text:0000000000403b69\n.text:0000000000403b6c\n.text:0000000000403b6f\n.text:0000000000403b71\n.text:0000000000403b75\n.text:0000000000403b78\n.text:0000000000403b7a\n.text:0000000000403b7e\n.text:0000000000403b80\n.text:0000000000403b82\n.text:0000000000403b86\n.text:0000000000403b89\n.text:0000000000403b8b\n.text:0000000000403b92\n.text:0000000000403b95\n.text:0000000000403b97\n.text:0000000000403b99\n.text:0000000000403b9c\n.text:0000000000403b9e\n.text:0000000000403ba1\n.text:0000000000403ba3\n.text:0000000000403ba5\n.text:0000000000403ba8\n.text:0000000000403baa\n.text:0000000000403bac\n.text:0000000000403baf\n.text:0000000000403bb2\n.text:0000000000403bb5\n.text:0000000000403bb8\n.text:0000000000403bbb\n.text:0000000000403bbe\n.text:0000000000403bc1\n.text:0000000000403bc4\n.text:0000000000403bc7\n.text:0000000000403bca\n.text:0000000000403bcc\n.text:0000000000403bcf\n.text:0000000000403bd2\n.text:0000000000403bd4\n.text:0000000000403bd7\n.text:0000000000403bda\n.text:0000000000403bdd\n.text:0000000000403be0\n.text:0000000000403be4\n.text:0000000000403be6\n.text:0000000000403be9\n.text:0000000000403beb\n.text:0000000000403bee\n.text:0000000000403bf1\n.text:0000000000403bf3\n.text:0000000000403bf5\n.text:0000000000403bf9\n.text:0000000000403bfb\n.text:0000000000403bfd\n.text:0000000000403c00\n.text:0000000000403c03\n.text:0000000000403c05\n.text:0000000000403c09\n.text:0000000000403c0c\n.text:0000000000403c0e\n.text:0000000000403c12\n.text:0000000000403c14\n.text:0000000000403c16\n.text:0000000000403c1a\n.text:0000000000403c1d\n.text:0000000000403c1f\n.text:0000000000403c26\n.text:0000000000403c29\n.text:0000000000403c2c\n.text:0000000000403c2f\n.text:0000000000403c32\n.text:0000000000403c35\n.text:0000000000403c38\n.text:0000000000403c3a\n.text:0000000000403c3d\n.text:0000000000403c40\n.text:0000000000403c42\n.text:0000000000403c45\n.text:0000000000403c47\n.text:0000000000403c4a\n.text:0000000000403c4d\n.text:0000000000403c50\n.text:0000000000403c53\n.text:0000000000403c56\n.text:0000000000403c59\n.text:0000000000403c5c\n.text:0000000000403c5f\n.text:0000000000403c62\n.text:0000000000403c64\n.text:0000000000403c67\n.text:0000000000403c6a\n.text:0000000000403c6c\n.text:0000000000403c6f\n.text:0000000000403c72\n.text:0000000000403c75\n.text:0000000000403c78\n.text:0000000000403c7c\n.text:0000000000403c7e\n.text:0000000000403c81\n.text:0000000000403c83\n.text:0000000000403c86\n.text:0000000000403c89\n.text:0000000000403c8b\n.text:0000000000403c8d\n.text:0000000000403c91\n.text:0000000000403c93\n.text:0000000000403c95\n.text:0000000000403c98\n.text:0000000000403c9b\n.text:0000000000403c9d\n.text:0000000000403ca1\n.text:0000000000403ca4\n.text:0000000000403ca6\n.text:0000000000403caa\n.text:0000000000403cac\n.text:0000000000403cae\n.text:0000000000403cb2\n.text:0000000000403cb5\n.text:0000000000403cb7\n.text:0000000000403cbe\n.text:0000000000403cc1\n.text:0000000000403cc4\n.text:0000000000403cc7\n.text:0000000000403cca\n.text:0000000000403ccd\n.text:0000000000403cd0\n.text:0000000000403cd2\n.text:0000000000403cd5\n.text:0000000000403cd8\n.text:0000000000403cda\n.text:0000000000403cdd\n.text:0000000000403ce0\n.text:0000000000403ce3\n.text:0000000000403ce6\n.text:0000000000403ce9\n.text:0000000000403cec\n.text:0000000000403cef\n.text:0000000000403cf2\n.text:0000000000403cf5\n.text:0000000000403cf8\n.text:0000000000403cfb\n.text:0000000000403cfd\n.text:0000000000403d00\n.text:0000000000403d03\n.text:0000000000403d05\n.text:0000000000403d08\n.text:0000000000403d0b\n.text:0000000000403d0e\n.text:0000000000403d11\n.text:0000000000403d15\n.text:0000000000403d17\n.text:0000000000403d1a\n.text:0000000000403d1c\n.text:0000000000403d1f\n.text:0000000000403d22\n.text:0000000000403d24\n.text:0000000000403d26\n.text:0000000000403d2a\n.text:0000000000403d2c\n.text:0000000000403d2e\n.text:0000000000403d31\n.text:0000000000403d34\n.text:0000000000403d36\n.text:0000000000403d3a\n.text:0000000000403d3d\n.text:0000000000403d3f\n.text:0000000000403d43\n.text:0000000000403d45\n.text:0000000000403d47\n.text:0000000000403d4b\n.text:0000000000403d4e\n.text:0000000000403d50\n.text:0000000000403d57\n.text:0000000000403d5a\n.text:0000000000403d5d\n.text:0000000000403d60\n.text:0000000000403d63\n.text:0000000000403d66\n.text:0000000000403d69\n.text:0000000000403d6b\n.text:0000000000403d6e\n.text:0000000000403d71\n.text:0000000000403d73\n.text:0000000000403d76\n.text:0000000000403d79\n.text:0000000000403d7c\n.text:0000000000403d7f\n.text:0000000000403d82\n.text:0000000000403d84\n.text:0000000000403d86\n.text:0000000000403d89\n.text:0000000000403d8c\n.text:0000000000403d8f\n.text:0000000000403d92\n.text:0000000000403d94\n.text:0000000000403d97\n.text:0000000000403d9b\n.text:0000000000403d9e\n.text:0000000000403da1\n.text:0000000000403da4\n.text:0000000000403da7\n.text:0000000000403daa\n.text:0000000000403dae\n.text:0000000000403db0\n.text:0000000000403db3\n.text:0000000000403db5\n.text:0000000000403db8\n.text:0000000000403dbb\n.text:0000000000403dbd\n.text:0000000000403dbf\n.text:0000000000403dc3\n.text:0000000000403dc5\n.text:0000000000403dc7\n.text:0000000000403dca\n.text:0000000000403dcd\n.text:0000000000403dcf\n.text:0000000000403dd3\n.text:0000000000403dd6\n.text:0000000000403dd8\n.text:0000000000403ddc\n.text:0000000000403dde\n.text:0000000000403de0\n.text:0000000000403de4\n.text:0000000000403de7\n.text:0000000000403de9\n.text:0000000000403df1\n.text:0000000000403df3\n.text:0000000000403df5\n.text:0000000000403df7\n.text:0000000000403dfa\n.text:0000000000403dfc\n.text:0000000000403dff\n.text:0000000000403e01\n.text:0000000000403e03\n.text:0000000000403e06\n.text:0000000000403e08\n.text:0000000000403e0a\n.text:0000000000403e0d\n.text:0000000000403e10\n.text:0000000000403e13\n.text:0000000000403e16\n.text:0000000000403e19\n.text:0000000000403e1c\n.text:0000000000403e1e\n.text:0000000000403e21\n.text:0000000000403e23\n.text:0000000000403e26\n.text:0000000000403e28\n.text:0000000000403e2b\n.text:0000000000403e2f\n.text:0000000000403e32\n.text:0000000000403e35\n.text:0000000000403e38\n.text:0000000000403e3a\n.text:0000000000403e3d\n.text:0000000000403e41\n.text:0000000000403e43\n.text:0000000000403e46\n.text:0000000000403e48\n.text:0000000000403e4b\n.text:0000000000403e4e\n.text:0000000000403e50\n.text:0000000000403e52\n.text:0000000000403e56\n.text:0000000000403e58\n.text:0000000000403e5a\n.text:0000000000403e5d\n.text:0000000000403e60\n.text:0000000000403e62\n.text:0000000000403e66\n.text:0000000000403e69\n.text:0000000000403e6b\n.text:0000000000403e6f\n.text:0000000000403e71\n.text:0000000000403e73\n.text:0000000000403e77\n.text:0000000000403e7a\n.text:0000000000403e7c\n.text:0000000000403e84\n.text:0000000000403e87\n.text:0000000000403e8a\n.text:0000000000403e8d\n.text:0000000000403e90\n.text:0000000000403e93\n.text:0000000000403e96\n.text:0000000000403e98\n.text:0000000000403e9b\n.text:0000000000403e9e\n.text:0000000000403ea0\n.text:0000000000403ea3\n.text:0000000000403ea5\n.text:0000000000403ea8\n.text:0000000000403eab\n.text:0000000000403eae\n.text:0000000000403eb1\n.text:0000000000403eb4\n.text:0000000000403eb7\n.text:0000000000403eba\n.text:0000000000403ebd\n.text:0000000000403ec0\n.text:0000000000403ec2\n.text:0000000000403ec5\n.text:0000000000403ec9\n.text:0000000000403ecc\n.text:0000000000403ece\n.text:0000000000403ed1\n.text:0000000000403ed4\n.text:0000000000403ed7\n.text:0000000000403edb\n.text:0000000000403edd\n.text:0000000000403ee0\n.text:0000000000403ee2\n.text:0000000000403ee5\n.text:0000000000403ee8\n.text:0000000000403eea\n.text:0000000000403eec\n.text:0000000000403ef0\n.text:0000000000403ef2\n.text:0000000000403ef4\n.text:0000000000403ef7\n.text:0000000000403efa\n.text:0000000000403efc\n.text:0000000000403f00\n.text:0000000000403f03\n.text:0000000000403f05\n.text:0000000000403f09\n.text:0000000000403f0b\n.text:0000000000403f0d\n.text:0000000000403f11\n.text:0000000000403f14\n.text:0000000000403f16\n.text:0000000000403f1e\n.text:0000000000403f21\n.text:0000000000403f24\n.text:0000000000403f27\n.text:0000000000403f2a\n.text:0000000000403f2d\n.text:0000000000403f30\n.text:0000000000403f32\n.text:0000000000403f35\n.text:0000000000403f38\n.text:0000000000403f3a\n.text:0000000000403f3d\n.text:0000000000403f40\n.text:0000000000403f43\n.text:0000000000403f46\n.text:0000000000403f49\n.text:0000000000403f4c\n.text:0000000000403f4f\n.text:0000000000403f52\n.text:0000000000403f55\n.text:0000000000403f58\n.text:0000000000403f5b\n.text:0000000000403f5d\n.text:0000000000403f60\n.text:0000000000403f64\n.text:0000000000403f67\n.text:0000000000403f6a\n.text:0000000000403f6c\n.text:0000000000403f6f\n.text:0000000000403f71\n.text:0000000000403f75\n.text:0000000000403f77\n.text:0000000000403f7a\n.text:0000000000403f7c\n.text:0000000000403f7f\n.text:0000000000403f82\n.text:0000000000403f84\n.text:0000000000403f86\n.text:0000000000403f8a\n.text:0000000000403f8c\n.text:0000000000403f8e\n.text:0000000000403f91\n.text:0000000000403f94\n.text:0000000000403f96\n.text:0000000000403f9a\n.text:0000000000403f9d\n.text:0000000000403f9f\n.text:0000000000403fa3\n.text:0000000000403fa5\n.text:0000000000403fa7\n.text:0000000000403fab\n.text:0000000000403fae\n.text:0000000000403fb0\n.text:0000000000403fb8\n.text:0000000000403fbb\n.text:0000000000403fbe\n.text:0000000000403fc1\n.text:0000000000403fc4\n.text:0000000000403fc7\n.text:0000000000403fca\n.text:0000000000403fcc\n.text:0000000000403fcf\n.text:0000000000403fd2\n.text:0000000000403fd4\n.text:0000000000403fd7\n.text:0000000000403fda\n.text:0000000000403fdd\n.text:0000000000403fe0\n.text:0000000000403fe3\n.text:0000000000403fe6\n.text:0000000000403fe9\n.text:0000000000403fec\n.text:0000000000403fef\n.text:0000000000403ff2\n.text:0000000000403ff5\n.text:0000000000403ff7\n.text:0000000000403ffa\n.text:0000000000403ffe\n.text:0000000000404001\n.text:0000000000404004\n.text:0000000000404007\n.text:000000000040400a\n.text:000000000040400d\n.text:0000000000404011\n.text:0000000000404015\n.text:0000000000404017\n.text:000000000040401a\n.text:000000000040401c\n.text:000000000040401f\n.text:0000000000404022\n.text:0000000000404024\n.text:0000000000404026\n.text:0000000000404028\n.text:000000000040402b\n.text:000000000040402d\n.text:0000000000404030\n.text:0000000000404033\n.text:0000000000404035\n.text:0000000000404037\n.text:000000000040403b\n.text:000000000040403f\n.text:0000000000404041\n.text:0000000000404043\n.text:0000000000404047\n.text:0000000000404049\n.text:000000000040404b\n.text:0000000000404053\n.text:0000000000404055\n.text:0000000000404058\n.text:000000000040405b\n.text:000000000040405e\n.text:0000000000404061\n.text:0000000000404064\n.text:0000000000404066\n.text:0000000000404069\n.text:000000000040406c\n.text:000000000040406e\n.text:0000000000404071\n.text:0000000000404074\n.text:0000000000404077\n.text:000000000040407a\n.text:000000000040407d\n.text:000000000040407f\n.text:0000000000404081\n.text:0000000000404083\n.text:0000000000404086\n.text:0000000000404088\n.text:000000000040408b\n.text:000000000040408d\n.text:0000000000404090\n.text:0000000000404094\n.text:0000000000404097\n.text:000000000040409a\n.text:000000000040409d\n.text:000000000040409f\n.text:00000000004040a2\n.text:00000000004040a6\n.text:00000000004040a8\n.text:00000000004040ab\n.text:00000000004040ad\n.text:00000000004040b0\n.text:00000000004040b3\n.text:00000000004040b5\n.text:00000000004040b7\n.text:00000000004040bb\n.text:00000000004040bd\n.text:00000000004040bf\n.text:00000000004040c2\n.text:00000000004040c5\n.text:00000000004040c7\n.text:00000000004040cb\n.text:00000000004040ce\n.text:00000000004040d0\n.text:00000000004040d4\n.text:00000000004040d6\n.text:00000000004040d8\n.text:00000000004040dc\n.text:00000000004040df\n.text:00000000004040e1\n.text:00000000004040e9\n.text:00000000004040ec\n.text:00000000004040ee\n.text:00000000004040f0\n.text:00000000004040f3\n.text:00000000004040f5\n.text:00000000004040f8\n.text:00000000004040fa\n.text:00000000004040fc\n.text:00000000004040ff\n.text:0000000000404101\n.text:0000000000404103\n.text:0000000000404106\n.text:0000000000404109\n.text:000000000040410c\n.text:000000000040410f\n.text:0000000000404112\n.text:0000000000404115\n.text:0000000000404118\n.text:000000000040411b\n.text:000000000040411e\n.text:0000000000404121\n.text:0000000000404123\n.text:0000000000404126\n.text:000000000040412a\n.text:000000000040412d\n.text:000000000040412f\n.text:0000000000404132\n.text:0000000000404135\n.text:0000000000404138\n.text:000000000040413c\n.text:000000000040413e\n.text:0000000000404141\n.text:0000000000404143\n.text:0000000000404146\n.text:0000000000404149\n.text:000000000040414b\n.text:000000000040414d\n.text:0000000000404151\n.text:0000000000404153\n.text:0000000000404155\n.text:0000000000404158\n.text:000000000040415b\n.text:000000000040415d\n.text:0000000000404161\n.text:0000000000404164\n.text:0000000000404166\n.text:000000000040416a\n.text:000000000040416c\n.text:000000000040416e\n.text:0000000000404172\n.text:0000000000404175\n.text:0000000000404177\n.text:000000000040417f\n.text:0000000000404182\n.text:0000000000404185\n.text:0000000000404188\n.text:000000000040418b\n.text:000000000040418e\n.text:0000000000404191\n.text:0000000000404193\n.text:0000000000404196\n.text:0000000000404199\n.text:000000000040419b\n.text:000000000040419e\n.text:00000000004041a0\n.text:00000000004041a3\n.text:00000000004041a6\n.text:00000000004041a9\n.text:00000000004041ac\n.text:00000000004041af\n.text:00000000004041b2\n.text:00000000004041b5\n.text:00000000004041b8\n.text:00000000004041bb\n.text:00000000004041bd\n.text:00000000004041c0\n.text:00000000004041c4\n.text:00000000004041c7\n.text:00000000004041ca\n.text:00000000004041cc\n.text:00000000004041cf\n.text:00000000004041d1\n.text:00000000004041d5\n.text:00000000004041d7\n.text:00000000004041da\n.text:00000000004041dc\n.text:00000000004041df\n.text:00000000004041e2\n.text:00000000004041e4\n.text:00000000004041e6\n.text:00000000004041ea\n.text:00000000004041ec\n.text:00000000004041ee\n.text:00000000004041f1\n.text:00000000004041f4\n.text:00000000004041f6\n.text:00000000004041fa\n.text:00000000004041fd\n.text:00000000004041ff\n.text:0000000000404203\n.text:0000000000404205\n.text:0000000000404207\n.text:000000000040420b\n.text:000000000040420e\n.text:0000000000404210\n.text:0000000000404218\n.text:000000000040421b\n.text:000000000040421e\n.text:0000000000404221\n.text:0000000000404224\n.text:0000000000404227\n.text:000000000040422a\n.text:000000000040422c\n.text:000000000040422f\n.text:0000000000404232\n.text:0000000000404234\n.text:0000000000404237\n.text:000000000040423a\n.text:000000000040423d\n.text:0000000000404240\n.text:0000000000404243\n.text:0000000000404246\n.text:0000000000404249\n.text:000000000040424c\n.text:000000000040424f\n.text:0000000000404252\n.text:0000000000404255\n.text:0000000000404257\n.text:000000000040425a\n.text:000000000040425e\n.text:0000000000404261\n.text:0000000000404264\n.text:0000000000404267\n.text:000000000040426a\n.text:000000000040426d\n.text:0000000000404271\n.text:0000000000404273\n.text:0000000000404276\n.text:0000000000404278\n.text:000000000040427b\n.text:000000000040427e\n.text:0000000000404280\n.text:0000000000404282\n.text:0000000000404286\n.text:0000000000404288\n.text:000000000040428a\n.text:000000000040428d\n.text:0000000000404290\n.text:0000000000404292\n.text:0000000000404296\n.text:0000000000404299\n.text:000000000040429b\n.text:000000000040429f\n.text:00000000004042a1\n.text:00000000004042a3\n.text:00000000004042a7\n.text:00000000004042a9\n.text:00000000004042ab\n.text:00000000004042b3\n.text:00000000004042b6\n.text:00000000004042b9\n.text:00000000004042bc\n.text:00000000004042bf\n.text:00000000004042c2\n.text:00000000004042c5\n.text:00000000004042c7\n.text:00000000004042ca\n.text:00000000004042cd\n.text:00000000004042cf\n.text:00000000004042d2\n.text:00000000004042d5\n.text:00000000004042d8\n.text:00000000004042db\n.text:00000000004042de\n.text:00000000004042e1\n.text:00000000004042e4\n.text:00000000004042e7\n.text:00000000004042ea\n.text:00000000004042ed\n.text:00000000004042f0\n.text:00000000004042f2\n.text:00000000004042f5\n.text:00000000004042f8\n.text:00000000004042fa\n.text:00000000004042fd\n.text:0000000000404300\n.text:0000000000404303\n.text:0000000000404306\n.text:000000000040430a\n.text:000000000040430c\n.text:000000000040430f\n.text:0000000000404311\n.text:0000000000404314\n.text:0000000000404317\n.text:0000000000404319\n.text:000000000040431b\n.text:000000000040431f\n.text:0000000000404321\n.text:0000000000404323\n.text:0000000000404326\n.text:0000000000404329\n.text:000000000040432b\n.text:000000000040432f\n.text:0000000000404332\n.text:0000000000404334\n.text:0000000000404338\n.text:000000000040433a\n.text:000000000040433c\n.text:0000000000404340\n.text:0000000000404343\n.text:0000000000404345\n.text:000000000040434c\n.text:000000000040434e\n.text:0000000000404351\n.text:0000000000404354\n.text:0000000000404357\n.text:000000000040435a\n.text:000000000040435d\n.text:000000000040435f\n.text:0000000000404362\n.text:0000000000404365\n.text:0000000000404367\n.text:000000000040436a\n.text:000000000040436d\n.text:0000000000404370\n.text:0000000000404373\n.text:0000000000404376\n.text:0000000000404378\n.text:000000000040437a\n.text:000000000040437c\n.text:000000000040437f\n.text:0000000000404381\n.text:0000000000404384\n.text:0000000000404386\n.text:0000000000404389\n.text:000000000040438d\n.text:0000000000404390\n.text:0000000000404393\n.text:0000000000404396\n.text:0000000000404398\n.text:000000000040439b\n.text:000000000040439f\n.text:00000000004043a1\n.text:00000000004043a4\n.text:00000000004043a6\n.text:00000000004043a9\n.text:00000000004043ac\n.text:00000000004043ae\n.text:00000000004043b0\n.text:00000000004043b4\n.text:00000000004043b6\n.text:00000000004043b8\n.text:00000000004043bb\n.text:00000000004043be\n.text:00000000004043c0\n.text:00000000004043c4\n.text:00000000004043c7\n.text:00000000004043c9\n.text:00000000004043cd\n.text:00000000004043cf\n.text:00000000004043d1\n.text:00000000004043d5\n.text:00000000004043d8\n.text:00000000004043da\n.text:00000000004043e2\n.text:00000000004043e5\n.text:00000000004043e7\n.text:00000000004043e9\n.text:00000000004043ec\n.text:00000000004043ee\n.text:00000000004043f1\n.text:00000000004043f3\n.text:00000000004043f5\n.text:00000000004043f8\n.text:00000000004043fa\n.text:00000000004043fc\n.text:00000000004043ff\n.text:0000000000404402\n.text:0000000000404405\n.text:0000000000404408\n.text:000000000040440b\n.text:000000000040440e\n.text:0000000000404411\n.text:0000000000404414\n.text:0000000000404417\n.text:000000000040441a\n.text:000000000040441c\n.text:000000000040441f\n.text:0000000000404423\n.text:0000000000404426\n.text:0000000000404428\n.text:000000000040442b\n.text:000000000040442e\n.text:0000000000404431\n.text:0000000000404435\n.text:0000000000404437\n.text:000000000040443a\n.text:000000000040443c\n.text:000000000040443f\n.text:0000000000404442\n.text:0000000000404444\n.text:0000000000404446\n.text:000000000040444a\n.text:000000000040444c\n.text:000000000040444e\n.text:0000000000404451\n.text:0000000000404454\n.text:0000000000404456\n.text:000000000040445a\n.text:000000000040445d\n.text:000000000040445f\n.text:0000000000404463\n.text:0000000000404465\n.text:0000000000404467\n.text:000000000040446b\n.text:000000000040446e\n.text:0000000000404470\n.text:0000000000404478\n.text:000000000040447b\n.text:000000000040447e\n.text:0000000000404481\n.text:0000000000404484\n.text:0000000000404487\n.text:000000000040448a\n.text:000000000040448c\n.text:000000000040448f\n.text:0000000000404492\n.text:0000000000404494\n.text:0000000000404497\n.text:0000000000404499\n.text:000000000040449c\n.text:000000000040449f\n.text:00000000004044a2\n.text:00000000004044a5\n.text:00000000004044a8\n.text:00000000004044ab\n.text:00000000004044ae\n.text:00000000004044b1\n.text:00000000004044b4\n.text:00000000004044b6\n.text:00000000004044b9\n.text:00000000004044bd\n.text:00000000004044c0\n.text:00000000004044c3\n.text:00000000004044c5\n.text:00000000004044c8\n.text:00000000004044ca\n.text:00000000004044ce\n.text:00000000004044d0\n.text:00000000004044d3\n.text:00000000004044d5\n.text:00000000004044d8\n.text:00000000004044db\n.text:00000000004044dd\n.text:00000000004044df\n.text:00000000004044e3\n.text:00000000004044e5\n.text:00000000004044e7\n.text:00000000004044ea\n.text:00000000004044ed\n.text:00000000004044ef\n.text:00000000004044f3\n.text:00000000004044f6\n.text:00000000004044f8\n.text:00000000004044fc\n.text:00000000004044fe\n.text:0000000000404500\n.text:0000000000404504\n.text:0000000000404507\n.text:0000000000404509\n.text:0000000000404511\n.text:0000000000404514\n.text:0000000000404517\n.text:000000000040451a\n.text:000000000040451d\n.text:0000000000404520\n.text:0000000000404523\n.text:0000000000404525\n.text:0000000000404528\n.text:000000000040452b\n.text:000000000040452d\n.text:0000000000404530\n.text:0000000000404533\n.text:0000000000404536\n.text:0000000000404539\n.text:000000000040453c\n.text:000000000040453f\n.text:0000000000404542\n.text:0000000000404545\n.text:0000000000404548\n.text:000000000040454b\n.text:000000000040454e\n.text:0000000000404550\n.text:0000000000404553\n.text:0000000000404557\n.text:000000000040455a\n.text:000000000040455d\n.text:0000000000404560\n.text:0000000000404563\n.text:0000000000404566\n.text:000000000040456a\n.text:000000000040456c\n.text:000000000040456f\n.text:0000000000404571\n.text:0000000000404574\n.text:0000000000404577\n.text:0000000000404579\n.text:000000000040457b\n.text:000000000040457f\n.text:0000000000404581\n.text:0000000000404583\n.text:0000000000404586\n.text:0000000000404589\n.text:000000000040458b\n.text:000000000040458f\n.text:0000000000404592\n.text:0000000000404594\n.text:0000000000404598\n.text:000000000040459a\n.text:000000000040459c\n.text:00000000004045a0\n.text:00000000004045a2\n.text:00000000004045a4\n.text:00000000004045ac\n.text:00000000004045af\n.text:00000000004045b2\n.text:00000000004045b5\n.text:00000000004045b8\n.text:00000000004045bb\n.text:00000000004045be\n.text:00000000004045c0\n.text:00000000004045c3\n.text:00000000004045c6\n.text:00000000004045c8\n.text:00000000004045cb\n.text:00000000004045ce\n.text:00000000004045d1\n.text:00000000004045d4\n.text:00000000004045d7\n.text:00000000004045d9\n.text:00000000004045db\n.text:00000000004045de\n.text:00000000004045e1\n.text:00000000004045e4\n.text:00000000004045e7\n.text:00000000004045e9\n.text:00000000004045ec\n.text:00000000004045f0\n.text:00000000004045f3\n.text:00000000004045f6\n.text:00000000004045f9\n.text:00000000004045fc\n.text:00000000004045ff\n.text:0000000000404603\n.text:0000000000404605\n.text:0000000000404608\n.text:000000000040460a\n.text:000000000040460d\n.text:0000000000404610\n.text:0000000000404612\n.text:0000000000404614\n.text:0000000000404618\n.text:000000000040461a\n.text:000000000040461c\n.text:000000000040461f\n.text:0000000000404622\n.text:0000000000404624\n.text:0000000000404628\n.text:000000000040462b\n.text:000000000040462d\n.text:0000000000404631\n.text:0000000000404633\n.text:0000000000404635\n.text:0000000000404639\n.text:000000000040463c\n.text:000000000040463e\n.text:0000000000404646\n.text:0000000000404648\n.text:000000000040464a\n.text:000000000040464c\n.text:000000000040464f\n.text:0000000000404651\n.text:0000000000404654\n.text:0000000000404656\n.text:0000000000404658\n.text:000000000040465b\n.text:000000000040465d\n.text:000000000040465f\n.text:0000000000404662\n.text:0000000000404665\n.text:0000000000404668\n.text:000000000040466b\n.text:000000000040466e\n.text:0000000000404671\n.text:0000000000404673\n.text:0000000000404676\n.text:0000000000404678\n.text:000000000040467b\n.text:000000000040467d\n.text:0000000000404680\n.text:0000000000404684\n.text:0000000000404687\n.text:000000000040468a\n.text:000000000040468d\n.text:000000000040468f\n.text:0000000000404692\n.text:0000000000404696\n.text:0000000000404698\n.text:000000000040469b\n.text:000000000040469d\n.text:00000000004046a0\n.text:00000000004046a3\n.text:00000000004046a5\n.text:00000000004046a7\n.text:00000000004046ab\n.text:00000000004046ad\n.text:00000000004046af\n.text:00000000004046b2\n.text:00000000004046b5\n.text:00000000004046b7\n.text:00000000004046bb\n.text:00000000004046be\n.text:00000000004046c0\n.text:00000000004046c4\n.text:00000000004046c6\n.text:00000000004046c8\n.text:00000000004046cc\n.text:00000000004046cf\n.text:00000000004046d1\n.text:00000000004046d9\n.text:00000000004046dc\n.text:00000000004046df\n.text:00000000004046e2\n.text:00000000004046e5\n.text:00000000004046e8\n.text:00000000004046eb\n.text:00000000004046ed\n.text:00000000004046f0\n.text:00000000004046f3\n.text:00000000004046f5\n.text:00000000004046f8\n.text:00000000004046fa\n.text:00000000004046fd\n.text:0000000000404700\n.text:0000000000404703\n.text:0000000000404706\n.text:0000000000404709\n.text:000000000040470c\n.text:000000000040470f\n.text:0000000000404712\n.text:0000000000404715\n.text:0000000000404717\n.text:000000000040471a\n.text:000000000040471e\n.text:0000000000404721\n.text:0000000000404723\n.text:0000000000404726\n.text:0000000000404729\n.text:000000000040472c\n.text:0000000000404730\n.text:0000000000404732\n.text:0000000000404735\n.text:0000000000404737\n.text:000000000040473a\n.text:000000000040473d\n.text:000000000040473f\n.text:0000000000404741\n.text:0000000000404745\n.text:0000000000404747\n.text:0000000000404749\n.text:000000000040474c\n.text:000000000040474f\n.text:0000000000404751\n.text:0000000000404755\n.text:0000000000404758\n.text:000000000040475a\n.text:000000000040475e\n.text:0000000000404760\n.text:0000000000404762\n.text:0000000000404766\n.text:0000000000404769\n.text:000000000040476b\n.text:0000000000404773\n.text:0000000000404776\n.text:0000000000404779\n.text:000000000040477c\n.text:000000000040477f\n.text:0000000000404782\n.text:0000000000404785\n.text:0000000000404787\n.text:000000000040478a\n.text:000000000040478d\n.text:000000000040478f\n.text:0000000000404792\n.text:0000000000404795\n.text:0000000000404798\n.text:000000000040479b\n.text:000000000040479e\n.text:00000000004047a1\n.text:00000000004047a4\n.text:00000000004047a7\n.text:00000000004047aa\n.text:00000000004047ad\n.text:00000000004047b0\n.text:00000000004047b2\n.text:00000000004047b5\n.text:00000000004047b9\n.text:00000000004047bc\n.text:00000000004047bf\n.text:00000000004047c1\n.text:00000000004047c4\n.text:00000000004047c6\n.text:00000000004047ca\n.text:00000000004047cc\n.text:00000000004047cf\n.text:00000000004047d1\n.text:00000000004047d4\n.text:00000000004047d7\n.text:00000000004047d9\n.text:00000000004047db\n.text:00000000004047df\n.text:00000000004047e1\n.text:00000000004047e3\n.text:00000000004047e6\n.text:00000000004047e9\n.text:00000000004047eb\n.text:00000000004047ef\n.text:00000000004047f2\n.text:00000000004047f4\n.text:00000000004047f8\n.text:00000000004047fa\n.text:00000000004047fc\n.text:0000000000404800\n.text:0000000000404803\n.text:0000000000404805\n.text:000000000040480d\n.text:0000000000404810\n.text:0000000000404813\n.text:0000000000404816\n.text:0000000000404819\n.text:000000000040481c\n.text:000000000040481f\n.text:0000000000404821\n.text:0000000000404824\n.text:0000000000404827\n.text:0000000000404829\n.text:000000000040482c\n.text:000000000040482f\n.text:0000000000404832\n.text:0000000000404835\n.text:0000000000404838\n.text:000000000040483a\n.text:000000000040483c\n.text:000000000040483f\n.text:0000000000404842\n.text:0000000000404845\n.text:0000000000404848\n.text:000000000040484a\n.text:000000000040484d\n.text:0000000000404851\n.text:0000000000404854\n.text:0000000000404857\n.text:000000000040485a\n.text:000000000040485d\n.text:0000000000404860\n.text:0000000000404864\n.text:0000000000404866\n.text:0000000000404869\n.text:000000000040486b\n.text:000000000040486e\n.text:0000000000404871\n.text:0000000000404873\n.text:0000000000404875\n.text:0000000000404879\n.text:000000000040487c\n.text:000000000040487e\n.text:0000000000404881\n.text:0000000000404884\n.text:0000000000404886\n.text:000000000040488a\n.text:000000000040488e\n.text:0000000000404891\n.text:0000000000404895\n.text:0000000000404897\n.text:0000000000404899\n.text:000000000040489d\n.text:000000000040489f\n.text:00000000004048a1\n.text:00000000004048a9\n.text:00000000004048ab\n.text:00000000004048ad\n.text:00000000004048af\n.text:00000000004048b2\n.text:00000000004048b4\n.text:00000000004048b7\n.text:00000000004048b9\n.text:00000000004048bb\n.text:00000000004048be\n.text:00000000004048c0\n.text:00000000004048c2\n.text:00000000004048c5\n.text:00000000004048c7\n.text:00000000004048ca\n.text:00000000004048cd\n.text:00000000004048cf\n.text:00000000004048d1\n.text:00000000004048d3\n.text:00000000004048d6\n.text:00000000004048d8\n.text:00000000004048db\n.text:00000000004048dd\n.text:00000000004048e0\n.text:00000000004048e4\n.text:00000000004048e7\n.text:00000000004048ea\n.text:00000000004048ed\n.text:00000000004048ef\n.text:00000000004048f2\n.text:00000000004048f6\n.text:00000000004048f8\n.text:00000000004048fb\n.text:00000000004048fd\n.text:0000000000404900\n.text:0000000000404903\n.text:0000000000404905\n.text:0000000000404907\n.text:000000000040490b\n.text:000000000040490e\n.text:0000000000404910\n.text:0000000000404913\n.text:0000000000404916\n.text:0000000000404918\n.text:000000000040491c\n.text:0000000000404920\n.text:0000000000404923\n.text:0000000000404927\n.text:0000000000404929\n.text:000000000040492b\n.text:000000000040492f\n.text:0000000000404932\n.text:0000000000404934\n.text:000000000040493c\n.text:000000000040493f\n.text:0000000000404941\n.text:0000000000404943\n.text:0000000000404946\n.text:0000000000404948\n.text:000000000040494b\n.text:000000000040494d\n.text:000000000040494f\n.text:0000000000404952\n.text:0000000000404954\n.text:0000000000404956\n.text:0000000000404958\n.text:000000000040495b\n.text:000000000040495e\n.text:0000000000404961\n.text:0000000000404964\n.text:0000000000404967\n.text:000000000040496a\n.text:000000000040496d\n.text:0000000000404970\n.text:0000000000404973\n.text:0000000000404975\n.text:0000000000404978\n.text:000000000040497c\n.text:000000000040497f\n.text:0000000000404981\n.text:0000000000404984\n.text:0000000000404987\n.text:000000000040498a\n.text:000000000040498e\n.text:0000000000404992\n.text:0000000000404995\n.text:0000000000404999\n.text:000000000040499b\n.text:000000000040499e\n.text:00000000004049a1\n.text:00000000004049a3\n.text:00000000004049a6\n.text:00000000004049a9\n.text:00000000004049ad\n.text:00000000004049af\n.text:00000000004049b2\n.text:00000000004049b5\n.text:00000000004049b7\n.text:00000000004049ba\n.text:00000000004049be\n.text:00000000004049c2\n.text:00000000004049c4\n.text:00000000004049c6\n.text:00000000004049ca\n.text:00000000004049cd\n.text:00000000004049cf\n.text:00000000004049d7\n.text:00000000004049da\n.text:00000000004049dd\n.text:00000000004049e0\n.text:00000000004049e3\n.text:00000000004049e6\n.text:00000000004049e9\n.text:00000000004049eb\n.text:00000000004049ee\n.text:00000000004049f1\n.text:00000000004049f3\n.text:00000000004049f6\n.text:00000000004049f8\n.text:00000000004049fb\n.text:00000000004049fe\n.text:0000000000404a01\n.text:0000000000404a04\n.text:0000000000404a07\n.text:0000000000404a0a\n.text:0000000000404a0d\n.text:0000000000404a10\n.text:0000000000404a13\n.text:0000000000404a15\n.text:0000000000404a18\n.text:0000000000404a1c\n.text:0000000000404a1f\n.text:0000000000404a22\n.text:0000000000404a24\n.text:0000000000404a27\n.text:0000000000404a29\n.text:0000000000404a2d\n.text:0000000000404a2f\n.text:0000000000404a32\n.text:0000000000404a34\n.text:0000000000404a37\n.text:0000000000404a3a\n.text:0000000000404a3c\n.text:0000000000404a3e\n.text:0000000000404a42\n.text:0000000000404a45\n.text:0000000000404a47\n.text:0000000000404a4a\n.text:0000000000404a4d\n.text:0000000000404a4f\n.text:0000000000404a53\n.text:0000000000404a57\n.text:0000000000404a5a\n.text:0000000000404a5e\n.text:0000000000404a60\n.text:0000000000404a62\n.text:0000000000404a66\n.text:0000000000404a69\n.text:0000000000404a6b\n.text:0000000000404a73\n.text:0000000000404a76\n.text:0000000000404a79\n.text:0000000000404a7c\n.text:0000000000404a7f\n.text:0000000000404a82\n.text:0000000000404a85\n.text:0000000000404a87\n.text:0000000000404a8a\n.text:0000000000404a8d\n.text:0000000000404a8f\n.text:0000000000404a92\n.text:0000000000404a95\n.text:0000000000404a98\n.text:0000000000404a9b\n.text:0000000000404a9e\n.text:0000000000404aa1\n.text:0000000000404aa4\n.text:0000000000404aa7\n.text:0000000000404aaa\n.text:0000000000404aad\n.text:0000000000404ab0\n.text:0000000000404ab2\n.text:0000000000404ab5\n.text:0000000000404ab9\n.text:0000000000404abc\n.text:0000000000404abf\n.text:0000000000404ac2\n.text:0000000000404ac5\n.text:0000000000404ac8\n.text:0000000000404acc\n.text:0000000000404ace\n.text:0000000000404ad1\n.text:0000000000404ad3\n.text:0000000000404ad6\n.text:0000000000404ad9\n.text:0000000000404adb\n.text:0000000000404add\n.text:0000000000404ae1\n.text:0000000000404ae4\n.text:0000000000404ae6\n.text:0000000000404ae9\n.text:0000000000404aec\n.text:0000000000404aee\n.text:0000000000404af2\n.text:0000000000404af6\n.text:0000000000404af9\n.text:0000000000404afd\n.text:0000000000404aff\n.text:0000000000404b01\n.text:0000000000404b05\n.text:0000000000404b07\n.text:0000000000404b09\n.text:0000000000404b11\n.text:0000000000404b13\n.text:0000000000404b16\n.text:0000000000404b19\n.text:0000000000404b1c\n.text:0000000000404b1f\n.text:0000000000404b22\n.text:0000000000404b24\n.text:0000000000404b27\n.text:0000000000404b2a\n.text:0000000000404b2c\n.text:0000000000404b2f\n.text:0000000000404b32\n.text:0000000000404b35\n.text:0000000000404b38\n.text:0000000000404b3b\n.text:0000000000404b3e\n.text:0000000000404b41\n.text:0000000000404b43\n.text:0000000000404b46\n.text:0000000000404b48\n.text:0000000000404b4b\n.text:0000000000404b4d\n.text:0000000000404b50\n.text:0000000000404b54\n.text:0000000000404b57\n.text:0000000000404b5a\n.text:0000000000404b5d\n.text:0000000000404b5f\n.text:0000000000404b62\n.text:0000000000404b66\n.text:0000000000404b68\n.text:0000000000404b6b\n.text:0000000000404b6d\n.text:0000000000404b70\n.text:0000000000404b73\n.text:0000000000404b75\n.text:0000000000404b77\n.text:0000000000404b7b\n.text:0000000000404b7d\n.text:0000000000404b7f\n.text:0000000000404b82\n.text:0000000000404b85\n.text:0000000000404b87\n.text:0000000000404b8b\n.text:0000000000404b8e\n.text:0000000000404b90\n.text:0000000000404b94\n.text:0000000000404b96\n.text:0000000000404b98\n.text:0000000000404b9c\n.text:0000000000404b9f\n.text:0000000000404ba1\n.text:0000000000404ba9\n.text:0000000000404bab\n.text:0000000000404bae\n.text:0000000000404bb1\n.text:0000000000404bb4\n.text:0000000000404bb7\n.text:0000000000404bba\n.text:0000000000404bbc\n.text:0000000000404bbf\n.text:0000000000404bc2\n.text:0000000000404bc4\n.text:0000000000404bc7\n.text:0000000000404bca\n.text:0000000000404bcd\n.text:0000000000404bd0\n.text:0000000000404bd3\n.text:0000000000404bd5\n.text:0000000000404bd7\n.text:0000000000404bd9\n.text:0000000000404bdc\n.text:0000000000404bde\n.text:0000000000404be1\n.text:0000000000404be3\n.text:0000000000404be6\n.text:0000000000404bea\n.text:0000000000404bed\n.text:0000000000404bef\n.text:0000000000404bf2\n.text:0000000000404bf4\n.text:0000000000404bf7\n.text:0000000000404bfb\n.text:0000000000404bfd\n.text:0000000000404c00\n.text:0000000000404c02\n.text:0000000000404c05\n.text:0000000000404c08\n.text:0000000000404c0a\n.text:0000000000404c0c\n.text:0000000000404c10\n.text:0000000000404c13\n.text:0000000000404c15\n.text:0000000000404c18\n.text:0000000000404c1b\n.text:0000000000404c1d\n.text:0000000000404c21\n.text:0000000000404c25\n.text:0000000000404c28\n.text:0000000000404c2c\n.text:0000000000404c2e\n.text:0000000000404c30\n.text:0000000000404c34\n.text:0000000000404c37\n.text:0000000000404c39\n.text:0000000000404c41\n.text:0000000000404c44\n.text:0000000000404c46\n.text:0000000000404c48\n.text:0000000000404c4b\n.text:0000000000404c4d\n.text:0000000000404c50\n.text:0000000000404c52\n.text:0000000000404c54\n.text:0000000000404c57\n.text:0000000000404c59\n.text:0000000000404c5b\n.text:0000000000404c5e\n.text:0000000000404c60\n.text:0000000000404c63\n.text:0000000000404c66\n.text:0000000000404c68\n.text:0000000000404c6a\n.text:0000000000404c6d\n.text:0000000000404c70\n.text:0000000000404c73\n.text:0000000000404c76\n.text:0000000000404c78\n.text:0000000000404c7b\n.text:0000000000404c7f\n.text:0000000000404c82\n.text:0000000000404c85\n.text:0000000000404c88\n.text:0000000000404c8b\n.text:0000000000404c8e\n.text:0000000000404c92\n.text:0000000000404c95\n.text:0000000000404c99\n.text:0000000000404c9b\n.text:0000000000404c9e\n.text:0000000000404ca1\n.text:0000000000404ca3\n.text:0000000000404ca6\n.text:0000000000404caa\n.text:0000000000404cad\n.text:0000000000404caf\n.text:0000000000404cb2\n.text:0000000000404cb5\n.text:0000000000404cb7\n.text:0000000000404cbb\n.text:0000000000404cbf\n.text:0000000000404cc2\n.text:0000000000404cc6\n.text:0000000000404cc8\n.text:0000000000404cca\n.text:0000000000404cce\n.text:0000000000404cd1\n.text:0000000000404cd4\n.text:0000000000404cdc\n.text:0000000000404cdf\n.text:0000000000404ce1\n.text:0000000000404ce3\n.text:0000000000404ce6\n.text:0000000000404ce8\n.text:0000000000404ceb\n.text:0000000000404ced\n.text:0000000000404cef\n.text:0000000000404cf2\n.text:0000000000404cf4\n.text:0000000000404cf6\n.text:0000000000404cf8\n.text:0000000000404cfa\n.text:0000000000404cfc\n.text:0000000000404cff\n.text:0000000000404d01\n.text:0000000000404d03\n.text:0000000000404d06\n.text:0000000000404d09\n.text:0000000000404d0c\n.text:0000000000404d0f\n.text:0000000000404d11\n.text:0000000000404d14\n.text:0000000000404d18\n.text:0000000000404d1b\n.text:0000000000404d1e\n.text:0000000000404d21\n.text:0000000000404d24\n.text:0000000000404d27\n.text:0000000000404d2b\n.text:0000000000404d2e\n.text:0000000000404d32\n.text:0000000000404d34\n.text:0000000000404d37\n.text:0000000000404d3a\n.text:0000000000404d3c\n.text:0000000000404d3f\n.text:0000000000404d43\n.text:0000000000404d46\n.text:0000000000404d49\n.text:0000000000404d4d\n.text:0000000000404d50\n.text:0000000000404d53\n.text:0000000000404d58\n.text:0000000000404d5c\n.text:0000000000404d5f\n.text:0000000000404d64\n.text:0000000000404d67\n.text:0000000000404d6a\n.text:0000000000404d6f\n.text:0000000000404d72\n.text:0000000000404d75\n.text:0000000000404d7d\n.text:0000000000404d80\n.text:0000000000404d82\n.text:0000000000404d84\n.text:0000000000404d87\n.text:0000000000404d89\n.text:0000000000404d8c\n.text:0000000000404d8e\n.text:0000000000404d90\n.text:0000000000404d93\n.text:0000000000404d95\n.text:0000000000404d97\n.text:0000000000404d99\n.text:0000000000404d9c\n.text:0000000000404d9f\n.text:0000000000404da2\n.text:0000000000404da5\n.text:0000000000404da8\n.text:0000000000404dab\n.text:0000000000404dae\n.text:0000000000404db1\n.text:0000000000404db4\n.text:0000000000404db6\n.text:0000000000404db9\n.text:0000000000404dbd\n.text:0000000000404dc0\n.text:0000000000404dc3\n.text:0000000000404dc6\n.text:0000000000404dc9\n.text:0000000000404dcc\n.text:0000000000404dd0\n.text:0000000000404dd3\n.text:0000000000404dd7\n.text:0000000000404dd9\n.text:0000000000404ddc\n.text:0000000000404ddf\n.text:0000000000404de1\n.text:0000000000404de4\n.text:0000000000404de8\n.text:0000000000404deb\n.text:0000000000404ded\n.text:0000000000404df0\n.text:0000000000404df3\n.text:0000000000404df5\n.text:0000000000404df9\n.text:0000000000404dfd\n.text:0000000000404e00\n.text:0000000000404e04\n.text:0000000000404e06\n.text:0000000000404e08\n.text:0000000000404e0c\n.text:0000000000404e0e\n.text:0000000000404e11\n.text:0000000000404e19\n.text:0000000000404e1c\n.text:0000000000404e1f\n.text:0000000000404e22\n.text:0000000000404e25\n.text:0000000000404e28\n.text:0000000000404e2b\n.text:0000000000404e2d\n.text:0000000000404e30\n.text:0000000000404e33\n.text:0000000000404e35\n.text:0000000000404e38\n.text:0000000000404e3a\n.text:0000000000404e3d\n.text:0000000000404e3f\n.text:0000000000404e41\n.text:0000000000404e43\n.text:0000000000404e45\n.text:0000000000404e48\n.text:0000000000404e4b\n.text:0000000000404e4e\n.text:0000000000404e51\n.text:0000000000404e53\n.text:0000000000404e56\n.text:0000000000404e5a\n.text:0000000000404e5d\n.text:0000000000404e60\n.text:0000000000404e63\n.text:0000000000404e66\n.text:0000000000404e69\n.text:0000000000404e6d\n.text:0000000000404e70\n.text:0000000000404e74\n.text:0000000000404e76\n.text:0000000000404e79\n.text:0000000000404e7c\n.text:0000000000404e7e\n.text:0000000000404e81\n.text:0000000000404e85\n.text:0000000000404e88\n.text:0000000000404e8a\n.text:0000000000404e8d\n.text:0000000000404e90\n.text:0000000000404e92\n.text:0000000000404e96\n.text:0000000000404e9a\n.text:0000000000404e9d\n.text:0000000000404ea1\n.text:0000000000404ea3\n.text:0000000000404ea5\n.text:0000000000404ea9\n.text:0000000000404eac\n.text:0000000000404eaf\n.text:0000000000404eb7\n.text:0000000000404eb9\n.text:0000000000404ebb\n.text:0000000000404ebd\n.text:0000000000404ec0\n.text:0000000000404ec2\n.text:0000000000404ec5\n.text:0000000000404ec7\n.text:0000000000404ec9\n.text:0000000000404ecc\n.text:0000000000404ece\n.text:0000000000404ed0\n.text:0000000000404ed3\n.text:0000000000404ed6\n.text:0000000000404ed9\n.text:0000000000404edc\n.text:0000000000404edf\n.text:0000000000404ee2\n.text:0000000000404ee4\n.text:0000000000404ee7\n.text:0000000000404ee9\n.text:0000000000404eec\n.text:0000000000404eee\n.text:0000000000404ef1\n.text:0000000000404ef5\n.text:0000000000404ef8\n.text:0000000000404efb\n.text:0000000000404efe\n.text:0000000000404f01\n.text:0000000000404f04\n.text:0000000000404f08\n.text:0000000000404f0b\n.text:0000000000404f0f\n.text:0000000000404f11\n.text:0000000000404f14\n.text:0000000000404f17\n.text:0000000000404f19\n.text:0000000000404f1c\n.text:0000000000404f20\n.text:0000000000404f23\n.text:0000000000404f25\n.text:0000000000404f28\n.text:0000000000404f2b\n.text:0000000000404f2d\n.text:0000000000404f31\n.text:0000000000404f35\n.text:0000000000404f38\n.text:0000000000404f3c\n.text:0000000000404f3e\n.text:0000000000404f40\n.text:0000000000404f44\n.text:0000000000404f47\n.text:0000000000404f4a\n.text:0000000000404f52\n.text:0000000000404f54\n.text:0000000000404f57\n.text:0000000000404f5a\n.text:0000000000404f5d\n.text:0000000000404f60\n.text:0000000000404f63\n.text:0000000000404f65\n.text:0000000000404f68\n.text:0000000000404f6b\n.text:0000000000404f6d\n.text:0000000000404f70\n.text:0000000000404f72\n.text:0000000000404f75\n.text:0000000000404f78\n.text:0000000000404f7b\n.text:0000000000404f7e\n.text:0000000000404f81\n.text:0000000000404f83\n.text:0000000000404f86\n.text:0000000000404f88\n.text:0000000000404f8b\n.text:0000000000404f8d\n.text:0000000000404f90\n.text:0000000000404f94\n.text:0000000000404f97\n.text:0000000000404f9a\n.text:0000000000404f9d\n.text:0000000000404fa0\n.text:0000000000404fa3\n.text:0000000000404fa7\n.text:0000000000404faa\n.text:0000000000404fae\n.text:0000000000404fb0\n.text:0000000000404fb3\n.text:0000000000404fb6\n.text:0000000000404fb8\n.text:0000000000404fbb\n.text:0000000000404fbf\n.text:0000000000404fc2\n.text:0000000000404fc4\n.text:0000000000404fc7\n.text:0000000000404fca\n.text:0000000000404fcc\n.text:0000000000404fd0\n.text:0000000000404fd4\n.text:0000000000404fd7\n.text:0000000000404fdb\n.text:0000000000404fdd\n.text:0000000000404fdf\n.text:0000000000404fe3\n.text:0000000000404fe6\n.text:0000000000404fe9\n.text:0000000000404ff1\n.text:0000000000404ff3\n.text:0000000000404ff6\n.text:0000000000404ff9\n.text:0000000000404ffc\n.text:0000000000404fff\n.text:0000000000405002\n.text:0000000000405004\n.text:0000000000405007\n.text:000000000040500a\n.text:000000000040500c\n.text:000000000040500f\n.text:0000000000405012\n.text:0000000000405015\n.text:0000000000405018\n.text:000000000040501b\n.text:000000000040501e\n.text:0000000000405021\n.text:0000000000405023\n.text:0000000000405026\n.text:0000000000405028\n.text:000000000040502b\n.text:000000000040502d\n.text:0000000000405030\n.text:0000000000405034\n.text:0000000000405037\n.text:000000000040503a\n.text:000000000040503d\n.text:0000000000405040\n.text:0000000000405043\n.text:0000000000405047\n.text:000000000040504a\n.text:000000000040504e\n.text:0000000000405050\n.text:0000000000405053\n.text:0000000000405056\n.text:0000000000405058\n.text:000000000040505b\n.text:000000000040505f\n.text:0000000000405062\n.text:0000000000405064\n.text:0000000000405067\n.text:000000000040506a\n.text:000000000040506c\n.text:0000000000405070\n.text:0000000000405074\n.text:0000000000405077\n.text:000000000040507b\n.text:000000000040507d\n.text:000000000040507f\n.text:0000000000405083\n.text:0000000000405086\n.text:0000000000405089\n.text:0000000000405091\n.text:0000000000405094\n.text:0000000000405097\n.text:000000000040509a\n.text:000000000040509d\n.text:00000000004050a0\n.text:00000000004050a3\n.text:00000000004050a5\n.text:00000000004050a8\n.text:00000000004050ab\n.text:00000000004050ad\n.text:00000000004050b0\n.text:00000000004050b3\n.text:00000000004050b6\n.text:00000000004050b9\n.text:00000000004050bc\n.text:00000000004050bf\n.text:00000000004050c2\n.text:00000000004050c5\n.text:00000000004050c8\n.text:00000000004050cb\n.text:00000000004050ce\n.text:00000000004050d0\n.text:00000000004050d3\n.text:00000000004050d7\n.text:00000000004050da\n.text:00000000004050dd\n.text:00000000004050e0\n.text:00000000004050e3\n.text:00000000004050e6\n.text:00000000004050ea\n.text:00000000004050ed\n.text:00000000004050f1\n.text:00000000004050f3\n.text:00000000004050f6\n.text:00000000004050f9\n.text:00000000004050fb\n.text:00000000004050fe\n.text:0000000000405102\n.text:0000000000405105\n.text:0000000000405107\n.text:000000000040510a\n.text:000000000040510d\n.text:000000000040510f\n.text:0000000000405113\n.text:0000000000405117\n.text:000000000040511a\n.text:000000000040511e\n.text:0000000000405120\n.text:0000000000405122\n.text:0000000000405126\n.text:0000000000405128\n.text:000000000040512b\n.text:0000000000405133\n.text:0000000000405135\n.text:0000000000405138\n.text:000000000040513b\n.text:000000000040513e\n.text:0000000000405141\n.text:0000000000405144\n.text:0000000000405146\n.text:0000000000405149\n.text:000000000040514c\n.text:000000000040514e\n.text:0000000000405151\n.text:0000000000405154\n.text:0000000000405157\n.text:000000000040515a\n.text:000000000040515d\n.text:0000000000405160\n.text:0000000000405163\n.text:0000000000405165\n.text:0000000000405168\n.text:000000000040516a\n.text:000000000040516d\n.text:000000000040516f\n.text:0000000000405172\n.text:0000000000405176\n.text:0000000000405179\n.text:000000000040517c\n.text:000000000040517e\n.text:0000000000405180\n.text:0000000000405182\n.text:0000000000405186\n.text:0000000000405188\n.text:000000000040518b\n.text:000000000040518d\n.text:0000000000405190\n.text:0000000000405193\n.text:0000000000405195\n.text:0000000000405197\n.text:000000000040519b\n.text:000000000040519e\n.text:00000000004051a0\n.text:00000000004051a3\n.text:00000000004051a6\n.text:00000000004051a8\n.text:00000000004051ac\n.text:00000000004051b0\n.text:00000000004051b3\n.text:00000000004051b7\n.text:00000000004051b9\n.text:00000000004051bb\n.text:00000000004051bf\n.text:00000000004051c1\n.text:00000000004051c3\n.text:00000000004051cb\n.text:00000000004051ce\n.text:00000000004051d1\n.text:00000000004051d4\n.text:00000000004051d7\n.text:00000000004051da\n.text:00000000004051dd\n.text:00000000004051df\n.text:00000000004051e2\n.text:00000000004051e5\n.text:00000000004051e7\n.text:00000000004051ea\n.text:00000000004051ed\n.text:00000000004051f0\n.text:00000000004051f3\n.text:00000000004051f6\n.text:00000000004051f9\n.text:00000000004051fc\n.text:00000000004051ff\n.text:0000000000405202\n.text:0000000000405205\n.text:0000000000405208\n.text:000000000040520a\n.text:000000000040520d\n.text:0000000000405211\n.text:0000000000405214\n.text:0000000000405216\n.text:0000000000405219\n.text:000000000040521c\n.text:000000000040521f\n.text:0000000000405223\n.text:0000000000405225\n.text:0000000000405228\n.text:000000000040522a\n.text:000000000040522d\n.text:0000000000405230\n.text:0000000000405232\n.text:0000000000405234\n.text:0000000000405238\n.text:000000000040523a\n.text:000000000040523c\n.text:000000000040523f\n.text:0000000000405242\n.text:0000000000405244\n.text:0000000000405248\n.text:000000000040524b\n.text:000000000040524d\n.text:0000000000405251\n.text:0000000000405253\n.text:0000000000405255\n.text:0000000000405259\n.text:000000000040525b\n.text:000000000040525d\n.text:0000000000405265\n.text:0000000000405268\n.text:000000000040526b\n.text:000000000040526e\n.text:0000000000405271\n.text:0000000000405274\n.text:0000000000405277\n.text:0000000000405279\n.text:000000000040527c\n.text:000000000040527f\n.text:0000000000405281\n.text:0000000000405284\n.text:0000000000405287\n.text:000000000040528a\n.text:000000000040528d\n.text:0000000000405290\n.text:0000000000405292\n.text:0000000000405294\n.text:0000000000405297\n.text:000000000040529a\n.text:000000000040529d\n.text:00000000004052a0\n.text:00000000004052a2\n.text:00000000004052a5\n.text:00000000004052a9\n.text:00000000004052ac\n.text:00000000004052af\n.text:00000000004052b1\n.text:00000000004052b4\n.text:00000000004052b6\n.text:00000000004052ba\n.text:00000000004052bc\n.text:00000000004052bf\n.text:00000000004052c1\n.text:00000000004052c4\n.text:00000000004052c7\n.text:00000000004052c9\n.text:00000000004052cb\n.text:00000000004052cf\n.text:00000000004052d1\n.text:00000000004052d3\n.text:00000000004052d6\n.text:00000000004052d9\n.text:00000000004052db\n.text:00000000004052df\n.text:00000000004052e2\n.text:00000000004052e4\n.text:00000000004052e8\n.text:00000000004052ea\n.text:00000000004052ec\n.text:00000000004052f0\n.text:00000000004052f3\n.text:00000000004052f5\n.text:00000000004052fd\n.text:0000000000405300\n.text:0000000000405302\n.text:0000000000405304\n.text:0000000000405307\n.text:0000000000405309\n.text:000000000040530c\n.text:000000000040530e\n.text:0000000000405311\n.text:0000000000405315\n.text:0000000000405318\n.text:000000000040531a\n.text:000000000040531d\n.text:000000000040531f\n.text:0000000000405322\n.text:0000000000405325\n.text:0000000000405327\n.text:000000000040532a\n.text:000000000040532d\n.text:0000000000405330\n.text:0000000000405333\n.text:0000000000405335\n.text:0000000000405338\n.text:000000000040533c\n.text:000000000040533f\n.text:0000000000405343\n.text:0000000000405347\n.text:0000000000405349\n.text:000000000040534c\n.text:000000000040534e\n.text:0000000000405351\n.text:0000000000405354\n.text:0000000000405356\n.text:0000000000405358\n.text:000000000040535a\n.text:000000000040535c\n.text:000000000040535f\n.text:0000000000405362\n.text:0000000000405364\n.text:0000000000405369\n.text:000000000040536c\n.text:000000000040536e\n.text:0000000000405372\n.text:0000000000405376\n.text:0000000000405378\n.text:000000000040537a\n.text:000000000040537e\n.text:0000000000405380\n.text:0000000000405383\n.text:0000000000405386\n.text:0000000000405389\n.text:000000000040538c\n.text:000000000040538e\n.text:0000000000405396\n.text:000000000040539b\n.text:000000000040539d\n.text:00000000004053a0\n.text:00000000004053a2\n.text:00000000004053a4\n.text:00000000004053a7\n.text:00000000004053aa\n.text:00000000004053ae\n.text:00000000004053b2\n.text:00000000004053b6\n.text:00000000004053ba\n.text:00000000004053be\n.text:00000000004053c1\n.text:00000000004053c5\n.text:00000000004053c9\n.text:00000000004053cd\n.text:00000000004053d1\n.text:00000000004053d5\n.text:00000000004053d9\n.text:00000000004053dd\n.text:00000000004053e1\n.text:00000000004053e6\n.text:00000000004053ec\n.text:00000000004053ed\n.text:00000000004053ef\n.text:00000000004053f1\n.text:00000000004053f3\n.text:00000000004053f5\n.text:00000000004053f6\n'
p1056
tp1057
sS'error'
p1058
(S'\n__stdcall error()\n'
p1059
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_0060c178)();\u000a  return;\u000a}\u000a\u000a
p1060
S'JMP qword ptr [0x0060c178]\n'
p1061
S'ff 25 32 ab 20 00\n'
p1062
S'.plt:0000000000401640\n'
p1063
tp1064
sS'strcaseeq6'
p1065
(S'\n__stdcall strcaseeq6()\n'
p1066
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1067
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x004070a2\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004070a9\nJMP 0x004070be\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004070be\nTEST BPL,BPL\nJZ 0x004070b9\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x004070d0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1068
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 c1 0b 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1069
S'.text:0000000000407080\n.text:0000000000407081\n.text:0000000000407082\n.text:0000000000407083\n.text:0000000000407085\n.text:0000000000407088\n.text:000000000040708a\n.text:000000000040708f\n.text:0000000000407093\n.text:0000000000407095\n.text:0000000000407097\n.text:000000000040709a\n.text:000000000040709c\n.text:000000000040709e\n.text:00000000004070a0\n.text:00000000004070a2\n.text:00000000004070a4\n.text:00000000004070a7\n.text:00000000004070a9\n.text:00000000004070ac\n.text:00000000004070ae\n.text:00000000004070b1\n.text:00000000004070b5\n.text:00000000004070b6\n.text:00000000004070b7\n.text:00000000004070b9\n.text:00000000004070be\n.text:00000000004070c2\n.text:00000000004070c3\n.text:00000000004070c4\n'
p1070
tp1071
sS'strcaseeq5'
p1072
(S'\n__stdcall strcaseeq5()\n'
p1073
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1074
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x00407056\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040705d\nJMP 0x00407074\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00407074\nTEST BPL,BPL\nJZ 0x0040706f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00407080\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1075
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 0d 0c 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1076
S'.text:0000000000407030\n.text:0000000000407031\n.text:0000000000407033\n.text:0000000000407034\n.text:0000000000407037\n.text:0000000000407039\n.text:000000000040703c\n.text:000000000040703e\n.text:0000000000407043\n.text:0000000000407047\n.text:0000000000407049\n.text:000000000040704b\n.text:000000000040704e\n.text:0000000000407050\n.text:0000000000407052\n.text:0000000000407054\n.text:0000000000407056\n.text:0000000000407058\n.text:000000000040705b\n.text:000000000040705d\n.text:0000000000407060\n.text:0000000000407062\n.text:0000000000407066\n.text:0000000000407069\n.text:000000000040706a\n.text:000000000040706c\n.text:000000000040706d\n.text:000000000040706f\n.text:0000000000407074\n.text:0000000000407075\n.text:0000000000407077\n.text:0000000000407078\n'
p1077
tp1078
sS'emit_ancillary_info'
p1079
(S'\n__stdcall emit_ancillary_info()\n'
p1080
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x004083b0;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("sha224sum",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "sha224sum";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,"sha224sum",uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/","sha224sum");\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x4095e1;\u000a  if (__s2 == "sha224sum") {\u000a    uVar3 = 0x408b6d;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p1081
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x4083b0\nMOV ESI,0x408b51\nNOP\nMOV EDI,0x40888e\nCALL 0x00401560\nTEST EAX,EAX\nJZ 0x00401a3b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00401a20\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x40888e\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x408ba6\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x4088b5\nMOV ECX,0x408bbd\nXOR EAX,EAX\nCALL 0x00401620\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00401610\nTEST RAX,RAX\nJZ 0x00401ac4\nMOV ESI,0x408be4\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x004013c0\nTEST EAX,EAX\nJZ 0x00401ac4\nXOR EDI,EDI\nMOV ESI,0x408be8\nMOV EDX,0x5\nCALL 0x00401460\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40888e\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401620\nXOR EDI,EDI\nMOV ESI,0x408c2d\nMOV EDX,0x5\nCALL 0x00401460\nMOV RSI,RAX\nMOV R14D,0x40888e\nMOV EDI,0x1\nMOV EDX,0x408bbd\nMOV ECX,0x40888e\nXOR EAX,EAX\nCALL 0x00401620\nXOR EDI,EDI\nMOV ESI,0x408c4c\nMOV EDX,0x5\nCALL 0x00401460\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x408b6d\nMOV ECX,0x4095e1\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401620\n'
p1082
S'41 56\n53\n50\nbb b0 83 40 00\nbe 51 8b 40 00\n66 90\nbf 8e 88 40 00\ne8 36 fb ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb 8e 88 40 00\n48 0f 45 d8\n31 ff\nbe a6 8b 40 00\nba 05 00 00 00\ne8 04 fa ff ff\n48 89 c6\nbf 01 00 00 00\nba b5 88 40 00\nb9 bd 8b 40 00\n31 c0\ne8 ab fb ff ff\nbf 05 00 00 00\n31 f6\ne8 8f fb ff ff\n48 85 c0\n74 3e\nbe e4 8b 40 00\nba 03 00 00 00\n48 89 c7\ne8 28 f9 ff ff\n85 c0\n74 28\n31 ff\nbe e8 8b 40 00\nba 05 00 00 00\ne8 b3 f9 ff ff\n48 89 c1\nbf 01 00 00 00\nba 8e 88 40 00\n31 c0\n48 89 ce\ne8 5c fb ff ff\n31 ff\nbe 2d 8c 40 00\nba 05 00 00 00\ne8 8b f9 ff ff\n48 89 c6\n41 be 8e 88 40 00\nbf 01 00 00 00\nba bd 8b 40 00\nb9 8e 88 40 00\n31 c0\ne8 2c fb ff ff\n31 ff\nbe 4c 8c 40 00\nba 05 00 00 00\ne8 5b f9 ff ff\n48 89 c2\n4c 39 f3\nb8 6d 8b 40 00\nb9 e1 95 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 ee fa ff ff\n'
p1083
S'.text:0000000000401a10\n.text:0000000000401a12\n.text:0000000000401a13\n.text:0000000000401a14\n.text:0000000000401a19\n.text:0000000000401a1e\n.text:0000000000401a20\n.text:0000000000401a25\n.text:0000000000401a2a\n.text:0000000000401a2c\n.text:0000000000401a2e\n.text:0000000000401a32\n.text:0000000000401a36\n.text:0000000000401a39\n.text:0000000000401a3b\n.text:0000000000401a3f\n.text:0000000000401a42\n.text:0000000000401a47\n.text:0000000000401a4b\n.text:0000000000401a4d\n.text:0000000000401a52\n.text:0000000000401a57\n.text:0000000000401a5c\n.text:0000000000401a5f\n.text:0000000000401a64\n.text:0000000000401a69\n.text:0000000000401a6e\n.text:0000000000401a70\n.text:0000000000401a75\n.text:0000000000401a7a\n.text:0000000000401a7c\n.text:0000000000401a81\n.text:0000000000401a84\n.text:0000000000401a86\n.text:0000000000401a8b\n.text:0000000000401a90\n.text:0000000000401a93\n.text:0000000000401a98\n.text:0000000000401a9a\n.text:0000000000401a9c\n.text:0000000000401a9e\n.text:0000000000401aa3\n.text:0000000000401aa8\n.text:0000000000401aad\n.text:0000000000401ab0\n.text:0000000000401ab5\n.text:0000000000401aba\n.text:0000000000401abc\n.text:0000000000401abf\n.text:0000000000401ac4\n.text:0000000000401ac6\n.text:0000000000401acb\n.text:0000000000401ad0\n.text:0000000000401ad5\n.text:0000000000401ad8\n.text:0000000000401ade\n.text:0000000000401ae3\n.text:0000000000401ae8\n.text:0000000000401aed\n.text:0000000000401aef\n.text:0000000000401af4\n.text:0000000000401af6\n.text:0000000000401afb\n.text:0000000000401b00\n.text:0000000000401b05\n.text:0000000000401b08\n.text:0000000000401b0b\n.text:0000000000401b10\n.text:0000000000401b15\n.text:0000000000401b19\n.text:0000000000401b1e\n.text:0000000000401b20\n.text:0000000000401b23\n.text:0000000000401b26\n.text:0000000000401b2a\n.text:0000000000401b2b\n.text:0000000000401b2d\n'
p1084
tp1085
sS'sha256_init_ctx'
p1086
(S'\n__stdcall sha256_init_ctx(sha256_ctx * ctx)\n'
p1087
V\u000avoid sha256_init_ctx(sha256_ctx *ctx)\u000a\u000a{\u000a  ctx->state[0] = 0x6a09e667;\u000a  ctx->state[1] = 0xbb67ae85;\u000a  ctx->state[2] = 0x3c6ef372;\u000a  ctx->state[3] = 0xa54ff53a;\u000a  ctx->state[4] = 0x510e527f;\u000a  ctx->state[5] = 0x9b05688c;\u000a  ctx->state[6] = 0x1f83d9ab;\u000a  ctx->state[7] = 0x5be0cd19;\u000a  ctx->total[0] = 0;\u000a  ctx->total[1] = 0;\u000a  *(undefined4 *)&ctx->buflen = 0;\u000a  *(undefined4 *)((long)&ctx->buflen + 4) = 0;\u000a  return;\u000a}\u000a\u000a
p1088
S'MOV dword ptr [RDI],0x6a09e667\nMOV dword ptr [RDI + 0x4],0xbb67ae85\nMOV dword ptr [RDI + 0x8],0x3c6ef372\nMOV dword ptr [RDI + 0xc],0xa54ff53a\nMOV dword ptr [RDI + 0x10],0x510e527f\nMOV dword ptr [RDI + 0x14],0x9b05688c\nMOV dword ptr [RDI + 0x18],0x1f83d9ab\nMOV dword ptr [RDI + 0x1c],0x5be0cd19\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RDI + 0x20],XMM0\nRET\n'
p1089
S'c7 07 67 e6 09 6a\nc7 47 04 85 ae 67 bb\nc7 47 08 72 f3 6e 3c\nc7 47 0c 3a f5 4f a5\nc7 47 10 7f 52 0e 51\nc7 47 14 8c 68 05 9b\nc7 47 18 ab d9 83 1f\nc7 47 1c 19 cd e0 5b\n0f 57 c0\n0f 11 47 20\nc3\n'
p1090
S'.text:0000000000402d20\n.text:0000000000402d26\n.text:0000000000402d2d\n.text:0000000000402d34\n.text:0000000000402d3b\n.text:0000000000402d42\n.text:0000000000402d49\n.text:0000000000402d50\n.text:0000000000402d57\n.text:0000000000402d5a\n.text:0000000000402d5e\n'
p1091
tp1092
sS'strcaseeq7'
p1093
(S'\n__stdcall strcaseeq7()\n'
p1094
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1095
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x004070f2\nTEST ECX,0xffffffdf\nJNZ 0x004070f6\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x004070fa\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1096
S'53\n48 89 fb\n31 ff\ne8 75 0b 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1097
S'.text:00000000004070d0\n.text:00000000004070d1\n.text:00000000004070d4\n.text:00000000004070d6\n.text:00000000004070db\n.text:00000000004070df\n.text:00000000004070e1\n.text:00000000004070e3\n.text:00000000004070e9\n.text:00000000004070eb\n.text:00000000004070f0\n.text:00000000004070f1\n.text:00000000004070f2\n.text:00000000004070f4\n.text:00000000004070f6\n.text:00000000004070f8\n.text:00000000004070f9\n.text:00000000004070fa\n.text:00000000004070ff\n.text:0000000000407100\n'
p1098
tp1099
sS'version_etc_va'
p1100
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p1101
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p1102
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x004074e0\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x004074ec\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00407501\nINC R9\nCMP R9,0xa\nJC 0x004074c0\nMOV R8,RSP\nCALL 0x00407120\nADD RSP,0x58\nRET\n'
p1103
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p1104
S'.text:00000000004074b0\n.text:00000000004074b4\n.text:00000000004074b7\n.text:00000000004074c0\n.text:00000000004074c3\n.text:00000000004074c7\n.text:00000000004074c9\n.text:00000000004074cc\n.text:00000000004074d0\n.text:00000000004074d4\n.text:00000000004074d7\n.text:00000000004074e0\n.text:00000000004074e4\n.text:00000000004074e8\n.text:00000000004074ec\n.text:00000000004074ef\n.text:00000000004074f3\n.text:00000000004074f6\n.text:00000000004074f8\n.text:00000000004074fb\n.text:00000000004074ff\n.text:0000000000407501\n.text:0000000000407504\n.text:0000000000407509\n.text:000000000040750d\n'
p1105
tp1106
sS'xzalloc'
p1107
(S'\n__stdcall xzalloc(size_t s)\n'
p1108
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p1109
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00407640\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x004014e0\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1110
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 94 9d ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1111
S'.text:0000000000407730\n.text:0000000000407732\n.text:0000000000407733\n.text:0000000000407734\n.text:0000000000407737\n.text:000000000040773c\n.text:000000000040773f\n.text:0000000000407741\n.text:0000000000407744\n.text:0000000000407747\n.text:000000000040774c\n.text:000000000040774f\n.text:0000000000407753\n.text:0000000000407754\n.text:0000000000407756\n'
p1112
tp1113
sS'sha224_read_ctx'
p1114
(S'\n__stdcall sha224_read_ctx(sha256_ctx * ctx, void * resbuf)\n'
p1115
V\u000avoid * sha224_read_ctx(sha256_ctx *ctx,void *resbuf)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = 0;\u000a  do {\u000a    set_uint32((char *)((long)resbuf + lVar1));\u000a    lVar1 = lVar1 + 4;\u000a  } while (lVar1 != 0x1c);\u000a  return resbuf;\u000a}\u000a\u000a
p1116
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nMOV R15,RDI\nXOR EBX,EBX\nNOP dword ptr [RAX]\nLEA RDI,[R14 + RBX*0x1]\nMOV ESI,dword ptr [R15 + RBX*0x1]\nBSWAP ESI\nCALL 0x00402de0\nADD RBX,0x4\nCMP RBX,0x1c\nJNZ 0x00402e00\nMOV RAX,R14\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1117
S'41 57\n41 56\n53\n49 89 f6\n49 89 ff\n31 db\n0f 1f 00\n49 8d 3c 1e\n41 8b 34 1f\n0f ce\ne8 d1 ff ff ff\n48 83 c3 04\n48 83 fb 1c\n75 e7\n4c 89 f0\n5b\n41 5e\n41 5f\nc3\n'
p1118
S'.text:0000000000402df0\n.text:0000000000402df2\n.text:0000000000402df4\n.text:0000000000402df5\n.text:0000000000402df8\n.text:0000000000402dfb\n.text:0000000000402dfd\n.text:0000000000402e00\n.text:0000000000402e04\n.text:0000000000402e08\n.text:0000000000402e0a\n.text:0000000000402e0f\n.text:0000000000402e13\n.text:0000000000402e17\n.text:0000000000402e19\n.text:0000000000402e1c\n.text:0000000000402e1d\n.text:0000000000402e1f\n.text:0000000000402e21\n'
p1119
tp1120
sS'getline'
p1121
(S'\n__stdcall getline(char * * __lineptr, size_t * __n, FILE * __stream)\n'
p1122
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\u000a\u000a{\u000a  __ssize_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getline_0060c1a8)();\u000a  return _Var1;\u000a}\u000a\u000a
p1123
S'JMP qword ptr [0x0060c1a8]\n'
p1124
S'ff 25 02 ab 20 00\n'
p1125
S'.plt:00000000004016a0\n'
p1126
tp1127
sS'strcaseeq0'
p1128
(S'\n__stdcall strcaseeq0()\n'
p1129
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1130
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00406e05\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406e0c\nJMP 0x00406e40\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406e40\nTEST BPL,BPL\nJZ 0x00406e3b\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x00406e50\nJMP 0x00406e40\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1131
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 5d 0e 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1132
S'.text:0000000000406dd0\n.text:0000000000406dd1\n.text:0000000000406dd3\n.text:0000000000406dd5\n.text:0000000000406dd7\n.text:0000000000406dd9\n.text:0000000000406dda\n.text:0000000000406ddb\n.text:0000000000406dde\n.text:0000000000406de1\n.text:0000000000406de4\n.text:0000000000406de7\n.text:0000000000406de9\n.text:0000000000406dec\n.text:0000000000406dee\n.text:0000000000406df3\n.text:0000000000406df6\n.text:0000000000406df8\n.text:0000000000406dfa\n.text:0000000000406dfd\n.text:0000000000406dff\n.text:0000000000406e01\n.text:0000000000406e03\n.text:0000000000406e05\n.text:0000000000406e07\n.text:0000000000406e0a\n.text:0000000000406e0c\n.text:0000000000406e0f\n.text:0000000000406e11\n.text:0000000000406e15\n.text:0000000000406e1a\n.text:0000000000406e1d\n.text:0000000000406e21\n.text:0000000000406e25\n.text:0000000000406e29\n.text:0000000000406e2d\n.text:0000000000406e31\n.text:0000000000406e34\n.text:0000000000406e39\n.text:0000000000406e3b\n.text:0000000000406e40\n.text:0000000000406e44\n.text:0000000000406e45\n.text:0000000000406e47\n.text:0000000000406e49\n.text:0000000000406e4b\n.text:0000000000406e4d\n.text:0000000000406e4e\n'
p1133
tp1134
sS'strcaseeq2'
p1135
(S'\n__stdcall strcaseeq2()\n'
p1136
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1137
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x00406f16\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406f1d\nJMP 0x00406f4a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406f4a\nTEST BPL,BPL\nJZ 0x00406f45\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406f60\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1138
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 4d 0d 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1139
S'.text:0000000000406ee0\n.text:0000000000406ee1\n.text:0000000000406ee3\n.text:0000000000406ee5\n.text:0000000000406ee7\n.text:0000000000406ee9\n.text:0000000000406eea\n.text:0000000000406eeb\n.text:0000000000406eee\n.text:0000000000406ef1\n.text:0000000000406ef4\n.text:0000000000406ef7\n.text:0000000000406ef9\n.text:0000000000406efc\n.text:0000000000406efe\n.text:0000000000406f03\n.text:0000000000406f07\n.text:0000000000406f09\n.text:0000000000406f0b\n.text:0000000000406f0e\n.text:0000000000406f10\n.text:0000000000406f12\n.text:0000000000406f14\n.text:0000000000406f16\n.text:0000000000406f18\n.text:0000000000406f1b\n.text:0000000000406f1d\n.text:0000000000406f20\n.text:0000000000406f22\n.text:0000000000406f26\n.text:0000000000406f2a\n.text:0000000000406f2e\n.text:0000000000406f32\n.text:0000000000406f35\n.text:0000000000406f39\n.text:0000000000406f3a\n.text:0000000000406f3c\n.text:0000000000406f3e\n.text:0000000000406f40\n.text:0000000000406f42\n.text:0000000000406f43\n.text:0000000000406f45\n.text:0000000000406f4a\n.text:0000000000406f4e\n.text:0000000000406f4f\n.text:0000000000406f51\n.text:0000000000406f53\n.text:0000000000406f55\n.text:0000000000406f57\n.text:0000000000406f58\n'
p1140
tp1141
sS'strcaseeq1'
p1142
(S'\n__stdcall strcaseeq1()\n'
p1143
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1144
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x00406e8d\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406e94\nJMP 0x00406ec7\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406ec7\nTEST BPL,BPL\nJZ 0x00406ec2\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406ee0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1145
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 d6 0d 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1146
S'.text:0000000000406e50\n.text:0000000000406e51\n.text:0000000000406e53\n.text:0000000000406e55\n.text:0000000000406e57\n.text:0000000000406e59\n.text:0000000000406e5a\n.text:0000000000406e5b\n.text:0000000000406e60\n.text:0000000000406e63\n.text:0000000000406e66\n.text:0000000000406e69\n.text:0000000000406e6b\n.text:0000000000406e6e\n.text:0000000000406e73\n.text:0000000000406e75\n.text:0000000000406e7a\n.text:0000000000406e7e\n.text:0000000000406e80\n.text:0000000000406e82\n.text:0000000000406e85\n.text:0000000000406e87\n.text:0000000000406e89\n.text:0000000000406e8b\n.text:0000000000406e8d\n.text:0000000000406e8f\n.text:0000000000406e92\n.text:0000000000406e94\n.text:0000000000406e97\n.text:0000000000406e99\n.text:0000000000406e9d\n.text:0000000000406ea1\n.text:0000000000406ea5\n.text:0000000000406eab\n.text:0000000000406eaf\n.text:0000000000406eb2\n.text:0000000000406eb6\n.text:0000000000406eb7\n.text:0000000000406eb9\n.text:0000000000406ebb\n.text:0000000000406ebd\n.text:0000000000406ebf\n.text:0000000000406ec0\n.text:0000000000406ec2\n.text:0000000000406ec7\n.text:0000000000406ecb\n.text:0000000000406ecc\n.text:0000000000406ece\n.text:0000000000406ed0\n.text:0000000000406ed2\n.text:0000000000406ed4\n.text:0000000000406ed5\n'
p1147
tp1148
sS'strcaseeq4'
p1149
(S'\n__stdcall strcaseeq4()\n'
p1150
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1151
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x00406ffc\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00407003\nJMP 0x00407024\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00407024\nTEST BPL,BPL\nJZ 0x0040701f\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00407030\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1152
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 67 0c 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1153
S'.text:0000000000406fd0\n.text:0000000000406fd1\n.text:0000000000406fd3\n.text:0000000000406fd5\n.text:0000000000406fd6\n.text:0000000000406fd7\n.text:0000000000406fda\n.text:0000000000406fdd\n.text:0000000000406fdf\n.text:0000000000406fe2\n.text:0000000000406fe4\n.text:0000000000406fe9\n.text:0000000000406fed\n.text:0000000000406fef\n.text:0000000000406ff1\n.text:0000000000406ff4\n.text:0000000000406ff6\n.text:0000000000406ff8\n.text:0000000000406ffa\n.text:0000000000406ffc\n.text:0000000000406ffe\n.text:0000000000407001\n.text:0000000000407003\n.text:0000000000407006\n.text:0000000000407008\n.text:000000000040700c\n.text:0000000000407010\n.text:0000000000407013\n.text:0000000000407017\n.text:0000000000407018\n.text:000000000040701a\n.text:000000000040701c\n.text:000000000040701d\n.text:000000000040701f\n.text:0000000000407024\n.text:0000000000407028\n.text:0000000000407029\n.text:000000000040702b\n.text:000000000040702d\n.text:000000000040702e\n'
p1154
tp1155
sS'strcaseeq3'
p1156
(S'\n__stdcall strcaseeq3()\n'
p1157
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1158
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00407c50\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00406f90\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406f97\nJMP 0x00406fba\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406fba\nTEST BPL,BPL\nJZ 0x00406fb5\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406fd0\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1159
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 d3 0c 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1160
S'.text:0000000000406f60\n.text:0000000000406f61\n.text:0000000000406f63\n.text:0000000000406f65\n.text:0000000000406f67\n.text:0000000000406f68\n.text:0000000000406f6b\n.text:0000000000406f6e\n.text:0000000000406f71\n.text:0000000000406f73\n.text:0000000000406f76\n.text:0000000000406f78\n.text:0000000000406f7d\n.text:0000000000406f81\n.text:0000000000406f83\n.text:0000000000406f85\n.text:0000000000406f88\n.text:0000000000406f8a\n.text:0000000000406f8c\n.text:0000000000406f8e\n.text:0000000000406f90\n.text:0000000000406f92\n.text:0000000000406f95\n.text:0000000000406f97\n.text:0000000000406f9a\n.text:0000000000406f9c\n.text:0000000000406fa0\n.text:0000000000406fa4\n.text:0000000000406fa8\n.text:0000000000406fab\n.text:0000000000406fac\n.text:0000000000406fae\n.text:0000000000406fb0\n.text:0000000000406fb2\n.text:0000000000406fb3\n.text:0000000000406fb5\n.text:0000000000406fba\n.text:0000000000406fbb\n.text:0000000000406fbd\n.text:0000000000406fbf\n.text:0000000000406fc1\n.text:0000000000406fc2\n'
p1161
tp1162
sS'split_3'
p1163
(S'\n__stdcall split_3(char * s, size_t s_len, uchar * * hex_digest, int * binary, char * * file_name)\n'
p1164
V\u000a_Bool split_3(char *s,size_t s_len,uchar **hex_digest,int *binary,char **file_name)\u000a\u000a{\u000a  char cVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  char *pcVar4;\u000a  ulong uVar5;\u000a  long lVar6;\u000a  long lVar7;\u000a  bool bVar8;\u000a  \u000a  lVar7 = 0;\u000a  while ((cVar1 = s[lVar7], cVar1 == '\u005ct' || (cVar1 == ' '))) {\u000a    lVar7 = lVar7 + 1;\u000a  }\u000a  if (cVar1 == '\u005c\u005c') {\u000a    lVar7 = lVar7 + 1;\u000a  }\u000a  iVar3 = strncmp(s + lVar7,"SHA224",6);\u000a  if ((iVar3 == 0) && (lVar7 = lVar7 + (ulong)(s[lVar7 + 6] == ' '), s[lVar7 + 6] == '(')) {\u000a    *binary = 0;\u000a    _Var2 = bsd_split_3(s + lVar7 + 7,(s_len - 7) - lVar7,hex_digest,file_name);\u000a    return _Var2;\u000a  }\u000a  bVar8 = false;\u000a  uVar5 = 0x3a;\u000a  if (min_digest_line_length == 0) {\u000a    uVar5 = 0;\u000a  }\u000a  if (((ulong)(s[lVar7] == '\u005c\u005c') | uVar5) <= s_len - lVar7) {\u000a    *(char **)hex_digest = s + lVar7;\u000a    bVar8 = false;\u000a    lVar6 = 0x38;\u000a    if (digest_hex_bytes == 0) {\u000a      lVar6 = 0;\u000a    }\u000a    lVar6 = lVar6 + lVar7;\u000a    if ((s[lVar6] == ' ') || (s[lVar6] == '\u005ct')) {\u000a      lVar7 = lVar6 + 1;\u000a      s[lVar6] = 0;\u000a      if ((s_len - lVar7 == 1) || ((s[lVar7] != ' ' && (s[lVar7] != '*')))) {\u000a        if (bsd_reversed == 0) {\u000a          return false;\u000a        }\u000a        bsd_reversed = 1;\u000a      }\u000a      else {\u000a        if (bsd_reversed != 1) {\u000a          bsd_reversed = 0;\u000a          lVar7 = lVar6 + 2;\u000a          *binary = (uint)(s[lVar6 + 1] == '*');\u000a        }\u000a      }\u000a      *file_name = s + lVar7;\u000a      bVar8 = true;\u000a      if (cVar1 == '\u005c\u005c') {\u000a        pcVar4 = filename_unescape(s + lVar7,s_len - lVar7);\u000a        bVar8 = pcVar4 != (char *)0x0;\u000a      }\u000a    }\u000a  }\u000a  return (_Bool)bVar8;\u000a}\u000a\u000a
p1165
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R13,RDX\nMOV R15,RSI\nMOV RBX,RDI\nXOR R14D,R14D\nJMP 0x00402903\nINC R14\nMOVZX EAX,byte ptr [RBX + R14*0x1]\nCMP AL,0x9\nJZ 0x00402900\nCMP AL,0x20\nJZ 0x00402900\nCMP AL,0x5c\nMOV qword ptr [RSP],R8\nMOV R12,RCX\nJNZ 0x00402923\nINC R14\nMOV BPL,0x1\nJMP 0x00402925\nXOR EBP,EBP\nLEA RDI,[RBX + R14*0x1]\nMOV ESI,0x408467\nMOV EDX,0x6\nCALL 0x004013c0\nTEST EAX,EAX\nJNZ 0x00402987\nXOR EAX,EAX\nCMP byte ptr [RBX + R14*0x1 + 0x6],0x20\nSETZ AL\nADD R14,RAX\nCMP byte ptr [RBX + R14*0x1 + 0x6],0x28\nJNZ 0x00402987\nMOV dword ptr [R12],0x0\nLEA RDI,[RBX + R14*0x1 + 0x7]\nADD R15,-0x7\nSUB R15,R14\nMOVZX R8D,BPL\nMOV RSI,R15\nMOV RDX,R13\nMOV RCX,qword ptr [RSP]\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00402b00\nMOV RCX,R15\nSUB RCX,R14\nMOV DL,byte ptr [0x0060c2d8]\nXOR EAX,EAX\nTEST DL,DL\nMOV EDX,0x3a\nCMOVZ RDX,RAX\nXOR ESI,ESI\nCMP byte ptr [RBX + R14*0x1],0x5c\nSETZ SIL\nOR RSI,RDX\nCMP RCX,RSI\nJC 0x00402a68\nLEA RAX,[RBX + R14*0x1]\nMOV qword ptr [R13],RAX\nMOV CL,byte ptr [0x0060c2e0]\nXOR EAX,EAX\nTEST CL,CL\nMOV EDX,0x38\nCMOVZ RDX,RAX\nADD RDX,R14\nMOV CL,byte ptr [RBX + RDX*0x1]\nCMP CL,0x20\nJZ 0x004029e6\nCMP CL,0x9\nJNZ 0x00402a68\nLEA RCX,[RDX + 0x1]\nMOV byte ptr [RBX + RDX*0x1],0x0\nMOV RAX,R15\nSUB RAX,RCX\nCMP RAX,0x1\nJZ 0x00402a2c\nMOV AL,byte ptr [RBX + RCX*0x1]\nCMP AL,0x20\nJZ 0x00402a05\nCMP AL,0x2a\nJNZ 0x00402a2c\nCMP dword ptr [0x0060c200],0x1\nJZ 0x00402a3f\nMOV dword ptr [0x0060c200],0x0\nXOR EAX,EAX\nCMP byte ptr [RBX + RDX*0x1 + 0x1],0x2a\nLEA RCX,[RDX + 0x2]\nSETZ AL\nMOV dword ptr [R12],EAX\nJMP 0x00402a3f\nCMP dword ptr [0x0060c200],0x0\nJZ 0x00402a66\nMOV dword ptr [0x0060c200],0x1\nADD RBX,RCX\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RAX],RBX\nMOV AL,0x1\nTEST BPL,BPL\nJZ 0x00402a68\nSUB R15,RCX\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00402bb0\nTEST RAX,RAX\nSETNZ AL\nJMP 0x00402a68\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1166
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d5\n49 89 f7\n48 89 fb\n45 31 f6\neb 0a\n49 ff c6\n42 0f b6 04 33\n3c 09\n74 f4\n3c 20\n74 f0\n3c 5c\n4c 89 04 24\n49 89 cc\n75 08\n49 ff c6\n40 b5 01\neb 02\n31 ed\n4a 8d 3c 33\nbe 67 84 40 00\nba 06 00 00 00\ne8 88 ea ff ff\n85 c0\n75 4b\n31 c0\n42 80 7c 33 06 20\n0f 94 c0\n49 01 c6\n42 80 7c 33 06 28\n75 35\n41 c7 04 24 00 00 00 00\n4a 8d 7c 33 07\n49 83 c7 f9\n4d 29 f7\n44 0f b6 c5\n4c 89 fe\n4c 89 ea\n48 8b 0c 24\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 79 01 00 00\n4c 89 f9\n4c 29 f1\n8a 15 45 99 20 00\n31 c0\n84 d2\nba 3a 00 00 00\n48 0f 44 d0\n31 f6\n42 80 3c 33 5c\n40 0f 94 c6\n48 09 d6\n48 39 f1\n0f 82 b1 00 00 00\n4a 8d 04 33\n49 89 45 00\n8a 0d 1b 99 20 00\n31 c0\n84 c9\nba 38 00 00 00\n48 0f 44 d0\n4c 01 f2\n8a 0c 13\n80 f9 20\n74 09\n80 f9 09\n0f 85 82 00 00 00\n48 8d 4a 01\nc6 04 13 00\n4c 89 f8\n48 29 c8\n48 83 f8 01\n74 32\n8a 04 0b\n3c 20\n74 04\n3c 2a\n75 27\n83 3d f4 97 20 00 01\n74 31\nc7 05 e8 97 20 00 00 00 00 00\n31 c0\n80 7c 13 01 2a\n48 8d 4a 02\n0f 94 c0\n41 89 04 24\neb 13\n83 3d cd 97 20 00 00\n74 31\nc7 05 c1 97 20 00 01 00 00 00\n48 01 cb\n48 8b 04 24\n48 89 18\nb0 01\n40 84 ed\n74 18\n49 29 cf\n48 89 df\n4c 89 fe\ne8 52 01 00 00\n48 85 c0\n0f 95 c0\neb 02\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1167
S'.text:00000000004028e0\n.text:00000000004028e1\n.text:00000000004028e3\n.text:00000000004028e5\n.text:00000000004028e7\n.text:00000000004028e9\n.text:00000000004028ea\n.text:00000000004028eb\n.text:00000000004028ee\n.text:00000000004028f1\n.text:00000000004028f4\n.text:00000000004028f7\n.text:0000000000402900\n.text:0000000000402903\n.text:0000000000402908\n.text:000000000040290a\n.text:000000000040290c\n.text:000000000040290e\n.text:0000000000402910\n.text:0000000000402912\n.text:0000000000402916\n.text:0000000000402919\n.text:000000000040291b\n.text:000000000040291e\n.text:0000000000402921\n.text:0000000000402923\n.text:0000000000402925\n.text:0000000000402929\n.text:000000000040292e\n.text:0000000000402933\n.text:0000000000402938\n.text:000000000040293a\n.text:000000000040293c\n.text:000000000040293e\n.text:0000000000402944\n.text:0000000000402947\n.text:000000000040294a\n.text:0000000000402950\n.text:0000000000402952\n.text:000000000040295a\n.text:000000000040295f\n.text:0000000000402963\n.text:0000000000402966\n.text:000000000040296a\n.text:000000000040296d\n.text:0000000000402970\n.text:0000000000402974\n.text:0000000000402978\n.text:0000000000402979\n.text:000000000040297b\n.text:000000000040297d\n.text:000000000040297f\n.text:0000000000402981\n.text:0000000000402982\n.text:0000000000402987\n.text:000000000040298a\n.text:000000000040298d\n.text:0000000000402993\n.text:0000000000402995\n.text:0000000000402997\n.text:000000000040299c\n.text:00000000004029a0\n.text:00000000004029a2\n.text:00000000004029a7\n.text:00000000004029ab\n.text:00000000004029ae\n.text:00000000004029b1\n.text:00000000004029b7\n.text:00000000004029bb\n.text:00000000004029bf\n.text:00000000004029c5\n.text:00000000004029c7\n.text:00000000004029c9\n.text:00000000004029ce\n.text:00000000004029d2\n.text:00000000004029d5\n.text:00000000004029d8\n.text:00000000004029db\n.text:00000000004029dd\n.text:00000000004029e0\n.text:00000000004029e6\n.text:00000000004029ea\n.text:00000000004029ee\n.text:00000000004029f1\n.text:00000000004029f4\n.text:00000000004029f8\n.text:00000000004029fa\n.text:00000000004029fd\n.text:00000000004029ff\n.text:0000000000402a01\n.text:0000000000402a03\n.text:0000000000402a05\n.text:0000000000402a0c\n.text:0000000000402a0e\n.text:0000000000402a18\n.text:0000000000402a1a\n.text:0000000000402a1f\n.text:0000000000402a23\n.text:0000000000402a26\n.text:0000000000402a2a\n.text:0000000000402a2c\n.text:0000000000402a33\n.text:0000000000402a35\n.text:0000000000402a3f\n.text:0000000000402a42\n.text:0000000000402a46\n.text:0000000000402a49\n.text:0000000000402a4b\n.text:0000000000402a4e\n.text:0000000000402a50\n.text:0000000000402a53\n.text:0000000000402a56\n.text:0000000000402a59\n.text:0000000000402a5e\n.text:0000000000402a61\n.text:0000000000402a64\n.text:0000000000402a66\n.text:0000000000402a68\n.text:0000000000402a6c\n.text:0000000000402a6d\n.text:0000000000402a6f\n.text:0000000000402a71\n.text:0000000000402a73\n.text:0000000000402a75\n.text:0000000000402a76\n'
p1168
tp1169
sS'register_tm_clones'
p1170
(S'\n__stdcall register_tm_clones()\n'
p1171
V\u000a/* WARNING: Removing unreachable block (ram,0x004017c3) */\u000a/* WARNING: Removing unreachable block (ram,0x004017cd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1172
S'MOV ESI,0x60c270\nPUSH RBP\nSUB RSI,0x60c270\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x004017d8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004017d8\nPOP RBP\nMOV EDI,0x60c270\nJMP RAX\nPOP RBP\nRET\n'
p1173
S'be 70 c2 60 00\n55\n48 81 ee 70 c2 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 70 c2 60 00\nff e0\n5d\nc3\n'
p1174
S'.text:00000000004017a0\n.text:00000000004017a5\n.text:00000000004017a6\n.text:00000000004017ad\n.text:00000000004017b1\n.text:00000000004017b4\n.text:00000000004017b7\n.text:00000000004017bb\n.text:00000000004017be\n.text:00000000004017c1\n.text:00000000004017c3\n.text:00000000004017c8\n.text:00000000004017cb\n.text:00000000004017cd\n.text:00000000004017ce\n.text:00000000004017d3\n.text:00000000004017d8\n.text:00000000004017d9\n'
p1175
tp1176
sS'gettext_quote'
p1177
(S'\n__stdcall gettext_quote(char * msgid)\n'
p1178
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_004094a2;\u000a        pcVar2 = &DAT_004094a6;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p1179
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00401460\nCMP RAX,RBX\nJNZ 0x00406dc8\nCALL 0x00407d10\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x00406dd0\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00406d78\nCMP byte ptr [RBX],0x60\nMOV ECX,0x409492\nMOV EAX,0x409496\nJMP 0x00406dc4\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x00406dd0\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00406db6\nCMP byte ptr [RBX],0x60\nMOV ECX,0x4094a2\nMOV EAX,0x4094a6\nJMP 0x00406dc4\nCMP R14D,0x9\nMOV ECX,0x409486\nMOV EAX,0x40948a\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1180
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 37 a7 ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 d9 0f 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 92 94 40 00\nb8 96 94 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 a2 94 40 00\nb8 a6 94 40 00\neb 0e\n41 83 fe 09\nb9 86 94 40 00\nb8 8a 94 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p1181
S'.text:0000000000406d10\n.text:0000000000406d11\n.text:0000000000406d13\n.text:0000000000406d14\n.text:0000000000406d17\n.text:0000000000406d1a\n.text:0000000000406d1c\n.text:0000000000406d21\n.text:0000000000406d24\n.text:0000000000406d29\n.text:0000000000406d2c\n.text:0000000000406d32\n.text:0000000000406d37\n.text:0000000000406d3a\n.text:0000000000406d3f\n.text:0000000000406d44\n.text:0000000000406d49\n.text:0000000000406d4f\n.text:0000000000406d55\n.text:0000000000406d58\n.text:0000000000406d5a\n.text:0000000000406d5c\n.text:0000000000406d61\n.text:0000000000406d65\n.text:0000000000406d67\n.text:0000000000406d69\n.text:0000000000406d6c\n.text:0000000000406d71\n.text:0000000000406d76\n.text:0000000000406d78\n.text:0000000000406d7d\n.text:0000000000406d82\n.text:0000000000406d87\n.text:0000000000406d8d\n.text:0000000000406d93\n.text:0000000000406d96\n.text:0000000000406d98\n.text:0000000000406d9a\n.text:0000000000406d9f\n.text:0000000000406da3\n.text:0000000000406da5\n.text:0000000000406da7\n.text:0000000000406daa\n.text:0000000000406daf\n.text:0000000000406db4\n.text:0000000000406db6\n.text:0000000000406dba\n.text:0000000000406dbf\n.text:0000000000406dc4\n.text:0000000000406dc8\n.text:0000000000406dc9\n.text:0000000000406dcb\n.text:0000000000406dcc\n'
p1182
tp1183
sS'c_islower'
p1184
(S'\n__stdcall c_islower()\n'
p1185
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p1186
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1187
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p1188
S'.text:0000000000407bf0\n.text:0000000000407bf3\n.text:0000000000407bf6\n.text:0000000000407bf9\n'
p1189
tp1190
sS'hex_digits'
p1191
(S'\n__stdcall hex_digits(uchar * s)\n'
p1192
V\u000a_Bool hex_digits(uchar *s)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  ulong uVar2;\u000a  ulong uVar3;\u000a  byte bVar4;\u000a  ulong uVar5;\u000a  \u000a  bVar4 = *s;\u000a  if (digest_hex_bytes == 1) {\u000a    ppuVar1 = __ctype_b_loc();\u000a    uVar2 = 0;\u000a    if (digest_hex_bytes != 0) {\u000a      uVar2 = 0x38;\u000a    }\u000a    uVar3 = 1;\u000a    do {\u000a      if ((*(byte *)((long)*ppuVar1 + (ulong)bVar4 * 2 + 1) & 0x10) == 0) {\u000a        return false;\u000a      }\u000a      uVar5 = uVar3 & 0xffffffff;\u000a      bVar4 = s[uVar3];\u000a      uVar3 = uVar3 + 1;\u000a    } while (uVar5 < uVar2);\u000a  }\u000a  return (_Bool)(bVar4 == 0);\u000a}\u000a\u000a
p1193
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV BL,byte ptr [R14]\nCMP byte ptr [0x0060c2e0],0x1\nJNZ 0x00402ada\nCALL 0x00401720\nMOV RAX,qword ptr [RAX]\nMOV DL,byte ptr [0x0060c2e0]\nXOR ECX,ECX\nTEST DL,DL\nMOV EDX,0x38\nCMOVNZ RCX,RDX\nMOV EDX,0x1\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX ESI,BL\nTEST byte ptr [RAX + RSI*0x2 + 0x1],0x10\nJZ 0x00402ae1\nMOV ESI,EDX\nCMP RSI,RCX\nMOVZX EBX,byte ptr [R14 + RDX*0x1]\nLEA RDX,[RDX + 0x1]\nJC 0x00402ac0\nTEST BL,BL\nSETZ AL\nJMP 0x00402ae3\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1194
S'41 56\n53\n50\n49 89 fe\n41 8a 1e\n80 3d 4f 98 20 00 01\n75 47\ne8 88 ec ff ff\n48 8b 00\n8a 15 3f 98 20 00\n31 c9\n84 d2\nba 38 00 00 00\n48 0f 45 ca\nba 01 00 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 f3\nf6 44 70 01 10\n74 17\n89 d6\n48 39 ce\n41 0f b6 1c 16\n48 8d 52 01\n72 e6\n84 db\n0f 94 c0\neb 02\n31 c0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1195
S'.text:0000000000402a80\n.text:0000000000402a82\n.text:0000000000402a83\n.text:0000000000402a84\n.text:0000000000402a87\n.text:0000000000402a8a\n.text:0000000000402a91\n.text:0000000000402a93\n.text:0000000000402a98\n.text:0000000000402a9b\n.text:0000000000402aa1\n.text:0000000000402aa3\n.text:0000000000402aa5\n.text:0000000000402aaa\n.text:0000000000402aae\n.text:0000000000402ab3\n.text:0000000000402ac0\n.text:0000000000402ac3\n.text:0000000000402ac8\n.text:0000000000402aca\n.text:0000000000402acc\n.text:0000000000402acf\n.text:0000000000402ad4\n.text:0000000000402ad8\n.text:0000000000402ada\n.text:0000000000402adc\n.text:0000000000402adf\n.text:0000000000402ae1\n.text:0000000000402ae3\n.text:0000000000402ae7\n.text:0000000000402ae8\n.text:0000000000402aea\n'
p1196
tp1197
sS'fclose'
p1198
(S'\n__stdcall fclose(FILE * __stream)\n'
p1199
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_0060c078)();\u000a  return iVar1;\u000a}\u000a\u000a
p1200
S'JMP qword ptr [0x0060c078]\n'
p1201
S'ff 25 32 ac 20 00\n'
p1202
S'.plt:0000000000401440\n'
p1203
tp1204
sS'__ctype_get_mb_cur_max'
p1205
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p1206
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0060c090)();\u000a  return sVar1;\u000a}\u000a\u000a
p1207
S'JMP qword ptr [0x0060c090]\n'
p1208
S'ff 25 1a ac 20 00\n'
p1209
S'.plt:0000000000401470\n'
p1210
tp1211
sS'quotearg_n_style'
p1212
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p1213
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1214
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00406a40\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00406810\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1215
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p1216
S'.text:0000000000406a00\n.text:0000000000406a01\n.text:0000000000406a03\n.text:0000000000406a04\n.text:0000000000406a08\n.text:0000000000406a0b\n.text:0000000000406a0d\n.text:0000000000406a12\n.text:0000000000406a15\n.text:0000000000406a1a\n.text:0000000000406a21\n.text:0000000000406a23\n.text:0000000000406a26\n.text:0000000000406a29\n.text:0000000000406a2e\n.text:0000000000406a32\n.text:0000000000406a33\n.text:0000000000406a35\n.text:0000000000406a36\n'
p1217
tp1218
sS'fwrite'
p1219
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p1220
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_0060c1b8)();\u000a  return sVar1;\u000a}\u000a\u000a
p1221
S'JMP qword ptr [0x0060c1b8]\n'
p1222
S'ff 25 f2 aa 20 00\n'
p1223
S'.plt:00000000004016c0\n'
p1224
tp1225
sS'quote_n'
p1226
(S'\n__stdcall quote_n(char * arg)\n'
p1227
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1228
S'MOV RDX,-0x1\nJMP 0x00406cd0\n'
p1229
S'48 c7 c2 ff ff ff ff\neb d7\n'
p1230
S'.text:0000000000406cf0\n.text:0000000000406cf7\n'
p1231
tp1232
sS'FUN_00401370'
p1233
(S'\n__stdcall FUN_00401370()\n'
p1234
V\u000avoid FUN_00401370(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_0060c010)();\u000a  return;\u000a}\u000a\u000a
p1235
S'PUSH qword ptr [0x0060c008]\nJMP qword ptr [0x0060c010]\n'
p1236
S'ff 35 92 ac 20 00\nff 25 94 ac 20 00\n'
p1237
S'.plt:0000000000401370\n.plt:0000000000401376\n'
p1238
tp1239
sS'quotearg_alloc'
p1240
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p1241
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p1242
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x00406680\n'
p1243
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p1244
S'.text:0000000000406670\n.text:0000000000406673\n.text:0000000000406675\n.text:0000000000406678\n'
p1245
tp1246
sS'__do_global_dtors_aux'
p1247
(S'\n__stdcall __do_global_dtors_aux()\n'
p1248
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1249
S'CMP byte ptr [0x0060c2c8],0x0\nJNZ 0x004017fa\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401760\nPOP RBP\nMOV byte ptr [0x0060c2c8],0x1\nRET\n'
p1250
S'80 3d e1 aa 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 ce aa 20 00 01\nf3 c3\n'
p1251
S'.text:00000000004017e0\n.text:00000000004017e7\n.text:00000000004017e9\n.text:00000000004017ea\n.text:00000000004017ed\n.text:00000000004017f2\n.text:00000000004017f3\n.text:00000000004017fa\n'
p1252
tp1253
sS'close_stdout_set_file_name'
p1254
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p1255
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p1256
S'MOV qword ptr [0x0060c2e8],RDI\nRET\n'
p1257
S'48 89 3d a1 96 20 00\nc3\n'
p1258
S'.text:0000000000402c40\n.text:0000000000402c47\n'
p1259
tp1260
sS'c_isprint'
p1261
(S'\n__stdcall c_isprint()\n'
p1262
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p1263
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p1264
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p1265
S'.text:0000000000407c00\n.text:0000000000407c03\n.text:0000000000407c06\n.text:0000000000407c09\n'
p1266
tp1267
sS'sha256_process_bytes'
p1268
(S'\n__stdcall sha256_process_bytes(void * buffer, size_t len, sha256_ctx * ctx)\n'
p1269
V\u000avoid sha256_process_bytes(void *buffer,size_t len,sha256_ctx *ctx)\u000a\u000a{\u000a  long lVar1;\u000a  uint32_t uVar2;\u000a  uint32_t uVar3;\u000a  uint32_t uVar4;\u000a  uint32_t uVar5;\u000a  uint32_t uVar6;\u000a  uint32_t uVar7;\u000a  uint32_t uVar8;\u000a  uint32_t uVar9;\u000a  uint32_t uVar10;\u000a  uint32_t uVar11;\u000a  uint32_t uVar12;\u000a  uint32_t uVar13;\u000a  uint32_t uVar14;\u000a  uint32_t uVar15;\u000a  uint32_t uVar16;\u000a  ulong __n;\u000a  ulong __n_00;\u000a  size_t __n_01;\u000a  uint32_t *buffer_00;\u000a  \u000a  __n_01 = ctx->buflen;\u000a  if (__n_01 != 0) {\u000a    __n_00 = 0x80 - __n_01;\u000a    if (len < 0x80 - __n_01) {\u000a      __n_00 = len;\u000a    }\u000a    memcpy((void *)((long)ctx->buffer + __n_01),buffer,__n_00);\u000a    __n = ctx->buflen + __n_00;\u000a    ctx->buflen = __n;\u000a    if (0x40 < __n) {\u000a      buffer_00 = ctx->buffer;\u000a      sha256_process_block(buffer_00,__n & 0xffffffffffffffc0,ctx);\u000a      __n = (ulong)((uint)ctx->buflen & 0x3f);\u000a      ctx->buflen = __n;\u000a      memcpy(buffer_00,(void *)((__n_01 + __n_00 & 0xffffffffffffffc0) + (long)buffer_00),__n);\u000a    }\u000a    buffer = (void *)((long)buffer + __n_00);\u000a    len = len - __n_00;\u000a  }\u000a  if (0x3f < len) {\u000a    if (((ulong)buffer & 3) != 0) {\u000a      if (len < 0x41) {\u000a        len = 0x40;\u000a      }\u000a      else {\u000a        __n_00 = len - 0x41 & 0xffffffffffffffc0;\u000a        lVar1 = len - 0x40;\u000a        buffer_00 = (uint32_t *)buffer;\u000a        do {\u000a          uVar2 = *buffer_00;\u000a          uVar5 = buffer_00[1];\u000a          uVar9 = buffer_00[2];\u000a          uVar13 = buffer_00[3];\u000a          uVar3 = buffer_00[4];\u000a          uVar6 = buffer_00[5];\u000a          uVar10 = buffer_00[6];\u000a          uVar14 = buffer_00[7];\u000a          uVar4 = buffer_00[8];\u000a          uVar7 = buffer_00[9];\u000a          uVar11 = buffer_00[10];\u000a          uVar15 = buffer_00[0xb];\u000a          uVar8 = buffer_00[0xd];\u000a          uVar12 = buffer_00[0xe];\u000a          uVar16 = buffer_00[0xf];\u000a          ctx->buffer[0xc] = buffer_00[0xc];\u000a          ctx->buffer[0xd] = uVar8;\u000a          ctx->buffer[0xe] = uVar12;\u000a          ctx->buffer[0xf] = uVar16;\u000a          ctx->buffer[8] = uVar4;\u000a          ctx->buffer[9] = uVar7;\u000a          ctx->buffer[10] = uVar11;\u000a          ctx->buffer[0xb] = uVar15;\u000a          ctx->buffer[4] = uVar3;\u000a          ctx->buffer[5] = uVar6;\u000a          ctx->buffer[6] = uVar10;\u000a          ctx->buffer[7] = uVar14;\u000a          ctx->buffer[0] = uVar2;\u000a          ctx->buffer[1] = uVar5;\u000a          ctx->buffer[2] = uVar9;\u000a          ctx->buffer[3] = uVar13;\u000a          sha256_process_block(ctx->buffer,0x40,ctx);\u000a          buffer_00 = buffer_00 + 0x10;\u000a          len = len - 0x40;\u000a        } while (0x40 < len);\u000a        buffer = (void *)((long)buffer + __n_00 + 0x40);\u000a        len = lVar1 - __n_00;\u000a      }\u000a      goto LAB_00405549;\u000a    }\u000a    sha256_process_block(buffer,len & 0xffffffffffffffc0,ctx);\u000a    buffer = (void *)((long)buffer + (len & 0xffffffffffffffc0));\u000a    len = (size_t)((uint)len & 0x3f);\u000a  }\u000a  if (len == 0) {\u000a    return;\u000a  }\u000aLAB_00405549:\u000a  __n_01 = ctx->buflen;\u000a  memcpy((void *)((long)ctx->buffer + __n_01),buffer,len);\u000a  __n_01 = __n_01 + len;\u000a  if (0x3f < __n_01) {\u000a    sha256_process_block(ctx->buffer,0x40,ctx);\u000a    __n_01 = __n_01 - 0x40;\u000a    memcpy(ctx->buffer,ctx->buffer + 0x10,__n_01);\u000a  }\u000a  ctx->buflen = __n_01;\u000a  return;\u000a}\u000a\u000a
p1270
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R15,RDX\nMOV RBP,RSI\nMOV R14,RDI\nMOV R13,qword ptr [R15 + 0x28]\nTEST R13,R13\nJZ 0x0040548a\nMOV R12D,0x80\nSUB R12,R13\nCMP R12,RBP\nCMOVA R12,RBP\nLEA RDI,[R15 + R13*0x1 + 0x30]\nMOV RSI,R14\nMOV RDX,R12\nCALL 0x00401570\nMOV RSI,qword ptr [R15 + 0x28]\nADD RSI,R12\nMOV qword ptr [R15 + 0x28],RSI\nCMP RSI,0x41\nJC 0x00405484\nLEA RBX,[R15 + 0x30]\nAND RSI,-0x40\nMOV RDI,RBX\nMOV RDX,R15\nCALL 0x00403080\nMOV RDX,qword ptr [R15 + 0x28]\nAND EDX,0x3f\nMOV qword ptr [R15 + 0x28],RDX\nADD R13,R12\nAND R13,-0x40\nADD R13,RBX\nMOV RDI,RBX\nMOV RSI,R13\nCALL 0x00401570\nADD R14,R12\nSUB RBP,R12\nCMP RBP,0x40\nJC 0x0040553d\nTEST R14B,0x3\nJZ 0x00405522\nCMP RBP,0x41\nJC 0x00405544\nLEA RBX,[R15 + 0x30]\nLEA R12,[RBP + -0x41]\nAND R12,-0x40\nLEA RAX,[R12 + 0x40]\nMOV qword ptr [RSP + 0x8],RAX\nLEA R13,[RBP + -0x40]\nMOV qword ptr [RSP + 0x10],R14\nNOP word ptr [RAX + RAX*0x1]\nMOVUPS XMM0,xmmword ptr [R14]\nMOVUPS XMM1,xmmword ptr [R14 + 0x10]\nMOVUPS XMM2,xmmword ptr [R14 + 0x20]\nMOVUPS XMM3,xmmword ptr [R14 + 0x30]\nMOVUPS xmmword ptr [RBX + 0x30],XMM3\nMOVUPS xmmword ptr [RBX + 0x20],XMM2\nMOVUPS xmmword ptr [RBX + 0x10],XMM1\nMOVUPS xmmword ptr [RBX],XMM0\nMOV ESI,0x40\nMOV RDI,RBX\nMOV RDX,R15\nCALL 0x00403080\nADD R14,0x40\nADD RBP,-0x40\nCMP RBP,0x40\nJA 0x004054d0\nMOV R14,qword ptr [RSP + 0x10]\nADD R14,qword ptr [RSP + 0x8]\nSUB R13,R12\nMOV RBP,R13\nJMP 0x00405549\nMOV RBX,RBP\nAND RBX,-0x40\nMOV RDI,R14\nMOV RSI,RBX\nMOV RDX,R15\nCALL 0x00403080\nADD R14,RBX\nAND EBP,0x3f\nTEST RBP,RBP\nJNZ 0x00405549\nJMP 0x00405591\nMOV EBP,0x40\nMOV R12,qword ptr [R15 + 0x28]\nLEA RDI,[R15 + R12*0x1 + 0x30]\nMOV RSI,R14\nMOV RDX,RBP\nCALL 0x00401570\nADD R12,RBP\nCMP R12,0x40\nJC 0x0040558d\nLEA RBX,[R15 + 0x30]\nMOV ESI,0x40\nMOV RDI,RBX\nMOV RDX,R15\nCALL 0x00403080\nADD R12,-0x40\nLEA RSI,[R15 + 0x70]\nMOV RDI,RBX\nMOV RDX,R12\nCALL 0x00401570\nMOV qword ptr [R15 + 0x28],R12\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1271
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 d7\n48 89 f5\n49 89 fe\n4d 8b 6f 28\n4d 85 ed\n74 6a\n41 bc 80 00 00 00\n4d 29 ec\n49 39 ec\n4c 0f 47 e5\n4b 8d 7c 2f 30\n4c 89 f6\n4c 89 e2\ne8 30 c1 ff ff\n49 8b 77 28\n4c 01 e6\n49 89 77 28\n48 83 fe 41\n72 33\n49 8d 5f 30\n48 83 e6 c0\n48 89 df\n4c 89 fa\ne8 1c dc ff ff\n49 8b 57 28\n83 e2 3f\n49 89 57 28\n4d 01 e5\n49 83 e5 c0\n49 01 dd\n48 89 df\n4c 89 ee\ne8 ec c0 ff ff\n4d 01 e6\n4c 29 e5\n48 83 fd 40\n0f 82 a9 00 00 00\n41 f6 c6 03\n0f 84 84 00 00 00\n48 83 fd 41\n0f 82 9c 00 00 00\n49 8d 5f 30\n4c 8d 65 bf\n49 83 e4 c0\n49 8d 44 24 40\n48 89 44 24 08\n4c 8d 6d c0\n4c 89 74 24 10\n66 0f 1f 84 00 00 00 00 00\n41 0f 10 06\n41 0f 10 4e 10\n41 0f 10 56 20\n41 0f 10 5e 30\n0f 11 5b 30\n0f 11 53 20\n0f 11 4b 10\n0f 11 03\nbe 40 00 00 00\n48 89 df\n4c 89 fa\ne8 7e db ff ff\n49 83 c6 40\n48 83 c5 c0\n48 83 fd 40\n77 c0\n4c 8b 74 24 10\n4c 03 74 24 08\n4d 29 e5\n4c 89 ed\neb 27\n48 89 eb\n48 83 e3 c0\n4c 89 f7\n48 89 de\n4c 89 fa\ne8 49 db ff ff\n49 01 de\n83 e5 3f\n48 85 ed\n75 07\neb 4d\nbd 40 00 00 00\n4d 8b 67 28\n4b 8d 7c 27 30\n4c 89 f6\n48 89 ea\ne8 13 c0 ff ff\n49 01 ec\n49 83 fc 40\n72 27\n49 8d 5f 30\nbe 40 00 00 00\n48 89 df\n4c 89 fa\ne8 06 db ff ff\n49 83 c4 c0\n49 8d 77 70\n48 89 df\n4c 89 e2\ne8 e3 bf ff ff\n4d 89 67 28\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1272
S'.text:0000000000405400\n.text:0000000000405401\n.text:0000000000405403\n.text:0000000000405405\n.text:0000000000405407\n.text:0000000000405409\n.text:000000000040540a\n.text:000000000040540e\n.text:0000000000405411\n.text:0000000000405414\n.text:0000000000405417\n.text:000000000040541b\n.text:000000000040541e\n.text:0000000000405420\n.text:0000000000405426\n.text:0000000000405429\n.text:000000000040542c\n.text:0000000000405430\n.text:0000000000405435\n.text:0000000000405438\n.text:000000000040543b\n.text:0000000000405440\n.text:0000000000405444\n.text:0000000000405447\n.text:000000000040544b\n.text:000000000040544f\n.text:0000000000405451\n.text:0000000000405455\n.text:0000000000405459\n.text:000000000040545c\n.text:000000000040545f\n.text:0000000000405464\n.text:0000000000405468\n.text:000000000040546b\n.text:000000000040546f\n.text:0000000000405472\n.text:0000000000405476\n.text:0000000000405479\n.text:000000000040547c\n.text:000000000040547f\n.text:0000000000405484\n.text:0000000000405487\n.text:000000000040548a\n.text:000000000040548e\n.text:0000000000405494\n.text:0000000000405498\n.text:000000000040549e\n.text:00000000004054a2\n.text:00000000004054a8\n.text:00000000004054ac\n.text:00000000004054b0\n.text:00000000004054b4\n.text:00000000004054b9\n.text:00000000004054be\n.text:00000000004054c2\n.text:00000000004054c7\n.text:00000000004054d0\n.text:00000000004054d4\n.text:00000000004054d9\n.text:00000000004054de\n.text:00000000004054e3\n.text:00000000004054e7\n.text:00000000004054eb\n.text:00000000004054ef\n.text:00000000004054f2\n.text:00000000004054f7\n.text:00000000004054fa\n.text:00000000004054fd\n.text:0000000000405502\n.text:0000000000405506\n.text:000000000040550a\n.text:000000000040550e\n.text:0000000000405510\n.text:0000000000405515\n.text:000000000040551a\n.text:000000000040551d\n.text:0000000000405520\n.text:0000000000405522\n.text:0000000000405525\n.text:0000000000405529\n.text:000000000040552c\n.text:000000000040552f\n.text:0000000000405532\n.text:0000000000405537\n.text:000000000040553a\n.text:000000000040553d\n.text:0000000000405540\n.text:0000000000405542\n.text:0000000000405544\n.text:0000000000405549\n.text:000000000040554d\n.text:0000000000405552\n.text:0000000000405555\n.text:0000000000405558\n.text:000000000040555d\n.text:0000000000405560\n.text:0000000000405564\n.text:0000000000405566\n.text:000000000040556a\n.text:000000000040556f\n.text:0000000000405572\n.text:0000000000405575\n.text:000000000040557a\n.text:000000000040557e\n.text:0000000000405582\n.text:0000000000405585\n.text:0000000000405588\n.text:000000000040558d\n.text:0000000000405591\n.text:0000000000405595\n.text:0000000000405596\n.text:0000000000405598\n.text:000000000040559a\n.text:000000000040559c\n.text:000000000040559e\n.text:000000000040559f\n'
p1273
tp1274
sS'_fini'
p1275
(S'\n__stdcall _fini()\n'
p1276
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1277
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1278
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1279
S'.fini:00000000004080ec\n.fini:00000000004080f0\n.fini:00000000004080f4\n'
p1280
tp1281
sS'sha224_buffer'
p1282
(S'\n__stdcall sha224_buffer(char * buffer, size_t len, void * resblock)\n'
p1283
V\u000avoid * sha224_buffer(char *buffer,size_t len,void *resblock)\u000a\u000a{\u000a  void *pvVar1;\u000a  sha256_ctx ctx;\u000a  sha256_ctx local_d0;\u000a  \u000a  sha224_init_ctx(&local_d0);\u000a  sha256_process_bytes(buffer,len,&local_d0);\u000a  pvVar1 = sha224_finish_ctx(&local_d0,resblock);\u000a  return pvVar1;\u000a}\u000a\u000a
p1284
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0xb8\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nLEA R12,[RSP + 0x8]\nMOV RDI,R12\nCALL 0x00402d60\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R12\nCALL 0x00405400\nMOV RDI,R12\nMOV RSI,R14\nCALL 0x00402f40\nADD RSP,0xb8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p1285
S'41 57\n41 56\n41 54\n53\n48 81 ec b8 00 00 00\n49 89 d6\n49 89 f7\n48 89 fb\n4c 8d 64 24 08\n4c 89 e7\ne8 3c d6 ff ff\n48 89 df\n4c 89 fe\n4c 89 e2\ne8 ce fc ff ff\n4c 89 e7\n4c 89 f6\ne8 03 d8 ff ff\n48 81 c4 b8 00 00 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p1286
S'.text:0000000000405700\n.text:0000000000405702\n.text:0000000000405704\n.text:0000000000405706\n.text:0000000000405707\n.text:000000000040570e\n.text:0000000000405711\n.text:0000000000405714\n.text:0000000000405717\n.text:000000000040571c\n.text:000000000040571f\n.text:0000000000405724\n.text:0000000000405727\n.text:000000000040572a\n.text:000000000040572d\n.text:0000000000405732\n.text:0000000000405735\n.text:0000000000405738\n.text:000000000040573d\n.text:0000000000405744\n.text:0000000000405745\n.text:0000000000405747\n.text:0000000000405749\n.text:000000000040574b\n'
p1287
tp1288
sS'rpl_fcntl'
p1289
(S'\n__stdcall rpl_fcntl()\n'
p1290
V\u000a/* WARNING: Removing unreachable block (ram,0x0040798b) */\u000a/* WARNING: Removing unreachable block (ram,0x004079f4) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff38 : 0x00407999 */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint rpl_fcntl(void...)\u000a\u000a{\u000a  int have_dupfd_cloexec;\u000a  int __fd;\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int __cmd;\u000a  uint __fd_00;\u000a  va_list arg;\u000a  ulong local_c8;\u000a  \u000a  if (__cmd == 0x406) {\u000a    if (have_dupfd_cloexec < 0) {\u000a      __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a    }\u000a    else {\u000a      __fd = fcntl(__fd_00,0x406,local_c8 & 0xffffffff);\u000a      have_dupfd_cloexec = 1;\u000a      if ((__fd < 0) && (piVar3 = __errno_location(), *piVar3 == 0x16)) {\u000a        __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a        have_dupfd_cloexec = -1;\u000a        if (__fd < 0) {\u000a          return __fd;\u000a        }\u000a      }\u000a    }\u000a    if (((-1 < __fd) && (have_dupfd_cloexec == -1)) &&\u000a       ((uVar1 = fcntl(__fd,1), (int)uVar1 < 0 ||\u000a        (iVar2 = fcntl(__fd,2,(ulong)(uVar1 | 1),(ulong)(uVar1 | 1)), iVar2 == -1)))) {\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a      __fd = -1;\u000a    }\u000a  }\u000a  else {\u000a    __fd = fcntl(__fd_00,__cmd,local_c8);\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p1291
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14D,EDI\nTEST AL,AL\nJZ 0x0040791b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RAX,dword ptr [RSP]\nCMP ESI,0x406\nJNZ 0x00407976\nCMP EAX,0x28\nJA 0x0040798b\nMOV RCX,qword ptr [RSP + 0x10]\nADD RCX,RAX\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00407999\nCMP EAX,0x28\nJA 0x004079f4\nMOV RCX,RAX\nADD RCX,qword ptr [RSP + 0x10]\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00407a02\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EBX,dword ptr [RCX]\nCMP dword ptr [0x0060c440],0x0\nJS 0x00407a13\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00401410\nMOV EBP,EAX\nMOV R15D,0x1\nTEST EBP,EBP\nJNS 0x004079e4\nCALL 0x004013b0\nCMP dword ptr [RAX],0x16\nJNZ 0x004079e4\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x004078d0\nMOV EBP,EAX\nMOV R15D,0xffffffff\nTEST EBP,EBP\nJS 0x00407a76\nMOV dword ptr [0x0060c440],R15D\nTEST EBP,EBP\nJNS 0x00407a27\nJMP 0x00407a76\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDX,qword ptr [RCX]\nXOR EAX,EAX\nMOV EDI,R14D\nCALL 0x00401410\nMOV EBP,EAX\nJMP 0x00407a76\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x004078d0\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00407a76\nCMP dword ptr [0x0060c440],-0x1\nJNZ 0x00407a76\nMOV ESI,0x1\nXOR EAX,EAX\nMOV EDI,EBP\nCALL 0x00401410\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x00407a5c\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBP\nMOV EDX,ECX\nCALL 0x00401410\nCMP EAX,-0x1\nJNZ 0x00407a76\nCALL 0x004013b0\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00401500\nMOV dword ptr [RBX],R14D\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0xd8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1292
S'55\n41 57\n41 56\n53\n48 81 ec d8 00 00 00\n41 89 fe\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 04 24\n81 fe 06 04 00 00\n75 15\n83 f8 28\n77 25\n48 8b 4c 24 10\n48 01 c1\n8d 40 08\n89 04 24\neb 23\n83 f8 28\n77 79\n48 89 c1\n48 03 4c 24 10\n8d 40 08\n89 04 24\neb 77\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n8b 19\n83 3d 9e 4a 20 00 00\n78 6f\n31 c0\n44 89 f7\n89 da\ne8 60 9a ff ff\n89 c5\n41 bf 01 00 00 00\n85 ed\n79 28\ne8 ef 99 ff ff\n83 38 16\n75 1e\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 fc fe ff ff\n89 c5\n41 bf ff ff ff ff\n85 ed\n0f 88 92 00 00 00\n44 89 3d 55 4a 20 00\n85 ed\n79 38\ne9 82 00 00 00\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n48 8b 11\n31 c0\n44 89 f7\ne8 01 9a ff ff\n89 c5\neb 63\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 af fe ff ff\n89 c5\n85 ed\n78 4f\n83 3d 12 4a 20 00 ff\n75 46\nbe 01 00 00 00\n31 c0\n89 ef\ne8 d2 99 ff ff\n89 c1\n85 c9\n78 18\n83 c9 01\nbe 02 00 00 00\n31 c0\n89 ef\n89 ca\ne8 b9 99 ff ff\n83 f8 ff\n75 1a\ne8 4f 99 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 92 9a ff ff\n44 89 33\nbd ff ff ff ff\n89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1293
S'.text:00000000004078d0\n.text:00000000004078d1\n.text:00000000004078d3\n.text:00000000004078d5\n.text:00000000004078d6\n.text:00000000004078dd\n.text:00000000004078e0\n.text:00000000004078e2\n.text:00000000004078e4\n.text:00000000004078e9\n.text:00000000004078ee\n.text:00000000004078f3\n.text:00000000004078fb\n.text:0000000000407903\n.text:000000000040790b\n.text:0000000000407913\n.text:000000000040791b\n.text:0000000000407920\n.text:0000000000407925\n.text:000000000040792a\n.text:000000000040792f\n.text:0000000000407934\n.text:0000000000407939\n.text:0000000000407941\n.text:0000000000407946\n.text:000000000040794e\n.text:0000000000407955\n.text:0000000000407959\n.text:000000000040795f\n.text:0000000000407961\n.text:0000000000407964\n.text:0000000000407966\n.text:000000000040796b\n.text:000000000040796e\n.text:0000000000407971\n.text:0000000000407974\n.text:0000000000407976\n.text:0000000000407979\n.text:000000000040797b\n.text:000000000040797e\n.text:0000000000407983\n.text:0000000000407986\n.text:0000000000407989\n.text:000000000040798b\n.text:0000000000407990\n.text:0000000000407994\n.text:0000000000407999\n.text:000000000040799b\n.text:00000000004079a2\n.text:00000000004079a4\n.text:00000000004079a6\n.text:00000000004079a9\n.text:00000000004079ab\n.text:00000000004079b0\n.text:00000000004079b2\n.text:00000000004079b8\n.text:00000000004079ba\n.text:00000000004079bc\n.text:00000000004079c1\n.text:00000000004079c4\n.text:00000000004079c6\n.text:00000000004079c8\n.text:00000000004079ca\n.text:00000000004079cd\n.text:00000000004079cf\n.text:00000000004079d4\n.text:00000000004079d6\n.text:00000000004079dc\n.text:00000000004079de\n.text:00000000004079e4\n.text:00000000004079eb\n.text:00000000004079ed\n.text:00000000004079ef\n.text:00000000004079f4\n.text:00000000004079f9\n.text:00000000004079fd\n.text:0000000000407a02\n.text:0000000000407a05\n.text:0000000000407a07\n.text:0000000000407a0a\n.text:0000000000407a0f\n.text:0000000000407a11\n.text:0000000000407a13\n.text:0000000000407a15\n.text:0000000000407a17\n.text:0000000000407a1a\n.text:0000000000407a1c\n.text:0000000000407a21\n.text:0000000000407a23\n.text:0000000000407a25\n.text:0000000000407a27\n.text:0000000000407a2e\n.text:0000000000407a30\n.text:0000000000407a35\n.text:0000000000407a37\n.text:0000000000407a39\n.text:0000000000407a3e\n.text:0000000000407a40\n.text:0000000000407a42\n.text:0000000000407a44\n.text:0000000000407a47\n.text:0000000000407a4c\n.text:0000000000407a4e\n.text:0000000000407a50\n.text:0000000000407a52\n.text:0000000000407a57\n.text:0000000000407a5a\n.text:0000000000407a5c\n.text:0000000000407a61\n.text:0000000000407a64\n.text:0000000000407a67\n.text:0000000000407a69\n.text:0000000000407a6e\n.text:0000000000407a71\n.text:0000000000407a76\n.text:0000000000407a78\n.text:0000000000407a7f\n.text:0000000000407a80\n.text:0000000000407a82\n.text:0000000000407a84\n.text:0000000000407a85\n'
p1294
tp1295
sS'__fpending'
p1296
(S'\n__stdcall __fpending()\n'
p1297
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_0060c050)();\u000a  return;\u000a}\u000a\u000a
p1298
S'JMP qword ptr [0x0060c050]\n'
p1299
S'ff 25 5a ac 20 00\n'
p1300
S'.plt:00000000004013f0\n'
p1301
tp1302
s.