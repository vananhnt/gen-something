(dp0
S'to_hour'
p1
(S'\n__stdcall to_hour(long hours)\n'
p2
V\u000aint to_hour(long hours)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ESI;\u000a  int iVar2;\u000a  \u000a  iVar2 = (int)hours;\u000a  if (in_ESI == 0) {\u000a    iVar1 = -1;\u000a    if (hours == 0xc) {\u000a      iVar1 = 0;\u000a    }\u000a    if (hours - 1U < 0xb) {\u000a      iVar1 = iVar2;\u000a    }\u000a    return iVar1;\u000a  }\u000a  if (in_ESI == 1) {\u000a    iVar1 = -1;\u000a    if (hours == 0xc) {\u000a      iVar1 = iVar2;\u000a    }\u000a    if (hours - 1U < 0xb) {\u000a      iVar1 = iVar2 + 0xc;\u000a    }\u000a    return iVar1;\u000a  }\u000a  iVar1 = -1;\u000a  if ((ulong)hours < 0x18) {\u000a    iVar1 = iVar2;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'TEST ESI,ESI\nJZ 0x00406209\nCMP ESI,0x1\nJNZ 0x00406227\nLEA RCX,[RDI + -0x1]\nLEA RDX,[RDI + 0xc]\nCMP RDI,0xc\nMOV RAX,-0x1\nCMOVZ RAX,RDI\nCMP RCX,0xb\nCMOVC RAX,RDX\nRET\nLEA RCX,[RDI + -0x1]\nXOR EDX,EDX\nCMP RDI,0xc\nMOV RAX,-0x1\nCMOVZ RAX,RDX\nCMP RCX,0xb\nCMOVC RAX,RDI\nRET\nCMP RDI,0x18\nMOV RAX,-0x1\nCMOVC RAX,RDI\nRET\n'
p4
S'85 f6\n74 25\n83 fe 01\n75 3e\n48 8d 4f ff\n48 8d 57 0c\n48 83 ff 0c\n48 c7 c0 ff ff ff ff\n48 0f 44 c7\n48 83 f9 0b\n48 0f 42 c2\nc3\n48 8d 4f ff\n31 d2\n48 83 ff 0c\n48 c7 c0 ff ff ff ff\n48 0f 44 c2\n48 83 f9 0b\n48 0f 42 c7\nc3\n48 83 ff 18\n48 c7 c0 ff ff ff ff\n48 0f 42 c7\nc3\n'
p5
S'.text:00000000004061e0\n.text:00000000004061e2\n.text:00000000004061e4\n.text:00000000004061e7\n.text:00000000004061e9\n.text:00000000004061ed\n.text:00000000004061f1\n.text:00000000004061f5\n.text:00000000004061fc\n.text:0000000000406200\n.text:0000000000406204\n.text:0000000000406208\n.text:0000000000406209\n.text:000000000040620d\n.text:000000000040620f\n.text:0000000000406213\n.text:000000000040621a\n.text:000000000040621e\n.text:0000000000406222\n.text:0000000000406226\n.text:0000000000406227\n.text:000000000040622b\n.text:0000000000406232\n.text:0000000000406236\n'
p6
tp7
sS'ungetc'
p8
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p9
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_006101a0)();\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x006101a0]\n'
p11
S'ff 25 7a e7 20 00\n'
p12
S'.plt:0000000000401a20\n'
p13
tp14
sS'posix_time_parse'
p15
(S'\n__stdcall posix_time_parse(tm * tm, char * s)\n'
p16
V\u000a_Bool posix_time_parse(tm *tm,char *s)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char *pcVar3;\u000a  int *piVar4;\u000a  ulong uVar5;\u000a  ulong in_RDX;\u000a  char *pcVar6;\u000a  char *pcVar7;\u000a  ulong uVar8;\u000a  int *piVar9;\u000a  int pair [6];\u000a  int local_48 [8];\u000a  \u000a  piVar4 = local_48;\u000a  piVar9 = local_48;\u000a  pcVar7 = (char *)strlen(s);\u000a  if (((in_RDX & 8) == 0) || (pcVar3 = strchr(s,0x2e), pcVar3 == (char *)0x0)) {\u000a    pcVar3 = (char *)0x0;\u000a  }\u000a  else {\u000a    pcVar6 = pcVar7 + -(long)(pcVar3 + -(long)s);\u000a    pcVar7 = pcVar3 + -(long)s;\u000a    if (pcVar6 != (char *)0x3) {\u000a      return false;\u000a    }\u000a  }\u000a  if ((char *)0x4 < pcVar7 + -8) {\u000a    return false;\u000a  }\u000a  if (((ulong)pcVar7 & 1) != 0) {\u000a    return false;\u000a  }\u000a  pcVar6 = (char *)0x0;\u000a  do {\u000a    if (9 < (int)s[(long)pcVar6] - 0x30U) {\u000a      return false;\u000a    }\u000a    pcVar6 = pcVar6 + 1;\u000a  } while (pcVar6 < pcVar7);\u000a  uVar8 = (ulong)pcVar7 >> 1;\u000a  if (uVar8 != 0) {\u000a    s = s + 1;\u000a    uVar5 = uVar8;\u000a    do {\u000a      *piVar4 = (int)*s + -0x210 + (int)s[-1] * 10;\u000a      piVar4 = piVar4 + 1;\u000a      s = s + 2;\u000a      uVar5 = uVar5 - 1;\u000a    } while (uVar5 != 0);\u000a  }\u000a  if ((in_RDX & 1) != 0) {\u000a    _Var1 = year(tm,local_48,uVar8 - 4);\u000a    if (_Var1 == false) {\u000a      return false;\u000a    }\u000a    piVar9 = local_48 + (uVar8 - 4);\u000a    uVar8 = 4;\u000a  }\u000a  tm->tm_mon = *piVar9 + -1;\u000a  tm->tm_mday = piVar9[1];\u000a  tm->tm_hour = piVar9[2];\u000a  tm->tm_min = piVar9[3];\u000a  if (((in_RDX & 2) != 0) && (_Var1 = year(tm,piVar9 + 4,uVar8 - 4), _Var1 == false)) {\u000a    return false;\u000a  }\u000a  if (pcVar3 == (char *)0x0) {\u000a    iVar2 = 0;\u000a  }\u000a  else {\u000a    if (9 < (int)pcVar3[1] - 0x30U) {\u000a      return false;\u000a    }\u000a    if (9 < (int)pcVar3[2] - 0x30U) {\u000a      return false;\u000a    }\u000a    iVar2 = (int)pcVar3[2] + -0x30 + ((int)pcVar3[1] - 0x30U) * 10;\u000a  }\u000a  tm->tm_sec = iVar2;\u000a  return true;\u000a}\u000a\u000a
p17
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x20\nMOV R12D,EDX\nMOV RBP,RSI\nMOV R14,RDI\nMOV RDI,RBP\nCALL 0x00401840\nMOV RBX,RAX\nTEST R12B,0x8\nJZ 0x00406702\nMOV ESI,0x2e\nMOV RDI,RBP\nCALL 0x00401870\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00406702\nMOV RAX,R15\nSUB RAX,RBP\nSUB RBX,RAX\nCMP RBX,0x3\nMOV RBX,RAX\nJZ 0x00406705\nJMP 0x00406813\nXOR R15D,R15D\nLEA RCX,[RBX + -0x8]\nXOR EAX,EAX\nCMP RCX,0x4\nJA 0x00406815\nMOV ECX,EBX\nAND ECX,0x1\nTEST RCX,RCX\nJNZ 0x00406815\nXOR EAX,EAX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVSX ECX,byte ptr [RBP + RAX*0x1]\nADD ECX,-0x30\nCMP ECX,0xa\nJNC 0x00406813\nINC RAX\nCMP RAX,RBX\nJC 0x00406730\nSHR RBX,1\nJZ 0x00406781\nINC RBP\nMOV RAX,RSP\nMOV RCX,RBX\nNOP word ptr [RAX + RAX*0x1]\nMOVSX EDX,byte ptr [RBP + -0x1]\nLEA EDX,[RDX + RDX*0x4]\nMOVSX ESI,byte ptr [RBP]\nLEA EDX,[-0x210 + RSI + RDX*0x2]\nMOV dword ptr [RAX],EDX\nADD RAX,0x4\nADD RBP,0x2\nDEC RCX\nJNZ 0x00406760\nTEST R12B,0x1\nJNZ 0x0040678c\nMOV RSI,RSP\nJMP 0x004067ae\nADD RBX,-0x4\nMOV RSI,RSP\nMOV RDI,R14\nMOV RDX,RBX\nMOV ECX,R12D\nCALL 0x00406830\nTEST AL,AL\nJZ 0x00406813\nLEA RSI,[RSP + RBX*0x4]\nMOV EBX,0x4\nMOV EAX,dword ptr [RSI]\nDEC EAX\nMOV dword ptr [R14 + 0x10],EAX\nMOV EAX,dword ptr [RSI + 0x4]\nMOV dword ptr [R14 + 0xc],EAX\nMOV EAX,dword ptr [RSI + 0x8]\nMOV dword ptr [R14 + 0x8],EAX\nMOV EAX,dword ptr [RSI + 0xc]\nMOV dword ptr [R14 + 0x4],EAX\nTEST R12B,0x2\nJZ 0x004067eb\nADD RBX,-0x4\nADD RSI,0x10\nMOV RDI,R14\nMOV RDX,RBX\nMOV ECX,R12D\nCALL 0x00406830\nTEST AL,AL\nJZ 0x00406813\nTEST R15,R15\nJZ 0x00406822\nMOVSX EAX,byte ptr [R15 + 0x1]\nADD EAX,-0x30\nCMP EAX,0x9\nJA 0x00406813\nMOVSX ECX,byte ptr [R15 + 0x2]\nLEA EDX,[RCX + -0x30]\nCMP EDX,0x9\nJA 0x00406813\nLEA EAX,[RAX + RAX*0x4]\nLEA EAX,[RCX + RAX*0x2 + -0x30]\nJMP 0x00406824\nXOR EAX,EAX\nADD RSP,0x20\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EAX,EAX\nMOV dword ptr [R14],EAX\nMOV AL,0x1\nJMP 0x00406815\n'
p18
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 20\n41 89 d4\n48 89 f5\n49 89 fe\n48 89 ef\ne8 73 b1 ff ff\n48 89 c3\n41 f6 c4 08\n74 2c\nbe 2e 00 00 00\n48 89 ef\ne8 8d b1 ff ff\n49 89 c7\n4d 85 ff\n74 17\n4c 89 f8\n48 29 e8\n48 29 c3\n48 83 fb 03\n48 89 c3\n74 08\ne9 11 01 00 00\n45 31 ff\n48 8d 4b f8\n31 c0\n48 83 f9 04\n0f 87 00 01 00 00\n89 d9\n83 e1 01\n48 85 c9\n0f 85 f2 00 00 00\n31 c0\n66 66 2e 0f 1f 84 00 00 00 00 00\n0f be 4c 05 00\n83 c1 d0\n83 f9 0a\n0f 83 d2 00 00 00\n48 ff c0\n48 39 d8\n72 e7\n48 d1 eb\n74 33\n48 ff c5\n48 89 e0\n48 89 d9\n66 0f 1f 84 00 00 00 00 00\n0f be 55 ff\n8d 14 92\n0f be 75 00\n8d 94 56 f0 fd ff ff\n89 10\n48 83 c0 04\n48 83 c5 02\n48 ff c9\n75 df\n41 f6 c4 01\n75 05\n48 89 e6\neb 22\n48 83 c3 fc\n48 89 e6\n4c 89 f7\n48 89 da\n44 89 e1\ne8 8f 00 00 00\n84 c0\n74 6e\n48 8d 34 9c\nbb 04 00 00 00\n8b 06\nff c8\n41 89 46 10\n8b 46 04\n41 89 46 0c\n8b 46 08\n41 89 46 08\n8b 46 0c\n41 89 46 04\n41 f6 c4 02\n74 1a\n48 83 c3 fc\n48 83 c6 10\n4c 89 f7\n48 89 da\n44 89 e1\ne8 49 00 00 00\n84 c0\n74 28\n4d 85 ff\n74 32\n41 0f be 47 01\n83 c0 d0\n83 f8 09\n77 16\n41 0f be 4f 02\n8d 51 d0\n83 fa 09\n77 09\n8d 04 80\n8d 44 41 d0\neb 11\n31 c0\n48 83 c4 20\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n31 c0\n41 89 06\nb0 01\neb ea\n'
p19
S'.text:00000000004066b0\n.text:00000000004066b1\n.text:00000000004066b3\n.text:00000000004066b5\n.text:00000000004066b7\n.text:00000000004066b8\n.text:00000000004066bc\n.text:00000000004066bf\n.text:00000000004066c2\n.text:00000000004066c5\n.text:00000000004066c8\n.text:00000000004066cd\n.text:00000000004066d0\n.text:00000000004066d4\n.text:00000000004066d6\n.text:00000000004066db\n.text:00000000004066de\n.text:00000000004066e3\n.text:00000000004066e6\n.text:00000000004066e9\n.text:00000000004066eb\n.text:00000000004066ee\n.text:00000000004066f1\n.text:00000000004066f4\n.text:00000000004066f8\n.text:00000000004066fb\n.text:00000000004066fd\n.text:0000000000406702\n.text:0000000000406705\n.text:0000000000406709\n.text:000000000040670b\n.text:000000000040670f\n.text:0000000000406715\n.text:0000000000406717\n.text:000000000040671a\n.text:000000000040671d\n.text:0000000000406723\n.text:0000000000406725\n.text:0000000000406730\n.text:0000000000406735\n.text:0000000000406738\n.text:000000000040673b\n.text:0000000000406741\n.text:0000000000406744\n.text:0000000000406747\n.text:0000000000406749\n.text:000000000040674c\n.text:000000000040674e\n.text:0000000000406751\n.text:0000000000406754\n.text:0000000000406757\n.text:0000000000406760\n.text:0000000000406764\n.text:0000000000406767\n.text:000000000040676b\n.text:0000000000406772\n.text:0000000000406774\n.text:0000000000406778\n.text:000000000040677c\n.text:000000000040677f\n.text:0000000000406781\n.text:0000000000406785\n.text:0000000000406787\n.text:000000000040678a\n.text:000000000040678c\n.text:0000000000406790\n.text:0000000000406793\n.text:0000000000406796\n.text:0000000000406799\n.text:000000000040679c\n.text:00000000004067a1\n.text:00000000004067a3\n.text:00000000004067a5\n.text:00000000004067a9\n.text:00000000004067ae\n.text:00000000004067b0\n.text:00000000004067b2\n.text:00000000004067b6\n.text:00000000004067b9\n.text:00000000004067bd\n.text:00000000004067c0\n.text:00000000004067c4\n.text:00000000004067c7\n.text:00000000004067cb\n.text:00000000004067cf\n.text:00000000004067d1\n.text:00000000004067d5\n.text:00000000004067d9\n.text:00000000004067dc\n.text:00000000004067df\n.text:00000000004067e2\n.text:00000000004067e7\n.text:00000000004067e9\n.text:00000000004067eb\n.text:00000000004067ee\n.text:00000000004067f0\n.text:00000000004067f5\n.text:00000000004067f8\n.text:00000000004067fb\n.text:00000000004067fd\n.text:0000000000406802\n.text:0000000000406805\n.text:0000000000406808\n.text:000000000040680a\n.text:000000000040680d\n.text:0000000000406811\n.text:0000000000406813\n.text:0000000000406815\n.text:0000000000406819\n.text:000000000040681a\n.text:000000000040681c\n.text:000000000040681e\n.text:0000000000406820\n.text:0000000000406821\n.text:0000000000406822\n.text:0000000000406824\n.text:0000000000406827\n.text:0000000000406829\n'
p20
tp21
sS'year'
p22
(S'\n__stdcall year(tm * tm, int * digit_pair, size_t n)\n'
p23
V\u000a_Bool year(tm *tm,int *digit_pair,size_t n)\u000a\u000a{\u000a  int iVar1;\u000a  tm *ptVar2;\u000a  ulong in_RCX;\u000a  time_t tStack24;\u000a  \u000a  if (n == 0) {\u000a    time(&tStack24);\u000a    ptVar2 = localtime(&tStack24);\u000a    if (ptVar2 != (tm *)0x0) {\u000a      iVar1 = ptVar2->tm_year;\u000aLAB_00406894:\u000a      tm->tm_year = iVar1;\u000a      return true;\u000a    }\u000a  }\u000a  else {\u000a    if (n == 2) {\u000a      if ((in_RCX & 4) != 0) {\u000a        iVar1 = digit_pair[1] + -0x76c + *digit_pair * 100;\u000a        goto LAB_00406894;\u000a      }\u000a    }\u000a    else {\u000a      if (n != 1) {\u000a                    /* WARNING: Subroutine does not return */\u000a        abort();\u000a      }\u000a      iVar1 = *digit_pair;\u000a      tm->tm_year = iVar1;\u000a      if (0x44 < *digit_pair) {\u000a        return true;\u000a      }\u000a      if ((in_RCX & 0x10) == 0) {\u000a        tm->tm_year = iVar1 + 100;\u000a        return true;\u000a      }\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p24
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RDX,RDX\nJZ 0x00406861\nCMP RDX,0x2\nJZ 0x0040687e\nCMP RDX,0x1\nJNZ 0x004068a1\nMOV EDX,dword ptr [RSI]\nMOV dword ptr [RBX + 0x14],EDX\nMOV AL,0x1\nCMP dword ptr [RSI],0x44\nJG 0x00406899\nTEST CL,0x10\nJNZ 0x00406883\nADD EDX,0x64\nMOV dword ptr [RBX + 0x14],EDX\nJMP 0x00406899\nMOV R14,RSP\nMOV RDI,R14\nCALL 0x00401990\nMOV RDI,R14\nCALL 0x00401740\nTEST RAX,RAX\nJZ 0x00406883\nMOV EAX,dword ptr [RAX + 0x14]\nJMP 0x00406894\nTEST CL,0x4\nJNZ 0x00406887\nXOR EAX,EAX\nJMP 0x00406899\nIMUL EAX,dword ptr [RSI],0x64\nMOV ECX,dword ptr [RSI + 0x4]\nLEA EAX,[-0x76c + RCX + RAX*0x1]\nMOV dword ptr [RBX + 0x14],EAX\nMOV AL,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nCALL 0x00401750\n'
p25
S'41 56\n53\n50\n48 89 fb\n48 85 d2\n74 25\n48 83 fa 02\n74 3c\n48 83 fa 01\n75 59\n8b 16\n89 53 14\nb0 01\n83 3e 44\n7f 45\nf6 c1 10\n75 2a\n83 c2 64\n89 53 14\neb 38\n49 89 e6\n4c 89 f7\ne8 24 b1 ff ff\n4c 89 f7\ne8 cc ae ff ff\n48 85 c0\n74 0a\n8b 40 14\neb 16\nf6 c1 04\n75 04\n31 c0\neb 12\n6b 06 64\n8b 4e 04\n8d 84 01 94 f8 ff ff\n89 43 14\nb0 01\n48 83 c4 08\n5b\n41 5e\nc3\ne8 aa ae ff ff\n'
p26
S'.text:0000000000406830\n.text:0000000000406832\n.text:0000000000406833\n.text:0000000000406834\n.text:0000000000406837\n.text:000000000040683a\n.text:000000000040683c\n.text:0000000000406840\n.text:0000000000406842\n.text:0000000000406846\n.text:0000000000406848\n.text:000000000040684a\n.text:000000000040684d\n.text:000000000040684f\n.text:0000000000406852\n.text:0000000000406854\n.text:0000000000406857\n.text:0000000000406859\n.text:000000000040685c\n.text:000000000040685f\n.text:0000000000406861\n.text:0000000000406864\n.text:0000000000406867\n.text:000000000040686c\n.text:000000000040686f\n.text:0000000000406874\n.text:0000000000406877\n.text:0000000000406879\n.text:000000000040687c\n.text:000000000040687e\n.text:0000000000406881\n.text:0000000000406883\n.text:0000000000406885\n.text:0000000000406887\n.text:000000000040688a\n.text:000000000040688d\n.text:0000000000406894\n.text:0000000000406897\n.text:0000000000406899\n.text:000000000040689d\n.text:000000000040689e\n.text:00000000004068a0\n.text:00000000004068a1\n'
p27
tp28
sS'version_etc_arn'
p29
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p30
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_0040d49b,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x408447;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x4084c8;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x40855c;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p31
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x004082d8\nMOV EDX,0x40d488\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x00401b40\nJMP 0x004082ed\nMOV EDX,0x40d494\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x00401b40\nXOR EDI,EDI\nMOV ESI,0x40d49b\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x40d770\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401b40\nXOR EDI,EDI\nMOV ESI,0x40d49f\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00401910\nCMP R12,0x9\nJA 0x00408376\nJMP qword ptr [0x40d438 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x40d56a\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401b40\nXOR EDI,EDI\nMOV ESI,0x40d6a9\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x38\nJMP 0x004085e7\nXOR EDI,EDI\nMOV ESI,0x40d57a\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401b40\nXOR EDI,EDI\nMOV ESI,0x40d591\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401b40\nXOR EDI,EDI\nMOV ESI,0x40d5ad\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x18\nJMP 0x004085e7\nXOR EDI,EDI\nMOV ESI,0x40d5cd\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x18\nJMP 0x004085e7\nXOR EDI,EDI\nMOV ESI,0x40d5f1\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x28\nJMP 0x004085e7\nXOR EDI,EDI\nMOV ESI,0x40d619\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x28\nJMP 0x004085e7\nXOR EDI,EDI\nMOV ESI,0x40d645\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x38\nJMP 0x004085e7\nXOR EDI,EDI\nMOV ESI,0x40d675\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401b40\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x00401750\n'
p32
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba 88 d4 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 6a 98 ff ff\neb 15\nba 94 d4 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 53 98 ff ff\n31 ff\nbe 9b d4 40 00\nba 05 00 00 00\ne8 22 95 ff ff\n48 89 c1\nbe 01 00 00 00\nba 70 d7 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 25 98 ff ff\n31 ff\nbe 9f d4 40 00\nba 05 00 00 00\ne8 f4 94 ff ff\n48 89 c7\n4c 89 f6\ne8 d9 95 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 38 d4 40 00\n31 ff\nbe 6a d5 40 00\nba 05 00 00 00\ne8 ca 94 ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 ca 97 ff ff\n31 ff\nbe a9 d6 40 00\nba 05 00 00 00\ne8 99 94 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 81 97 ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe 7a d5 40 00\nba 05 00 00 00\ne8 47 94 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 43 97 ff ff\n31 ff\nbe 91 d5 40 00\nba 05 00 00 00\ne8 12 94 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 0a 97 ff ff\n31 ff\nbe ad d5 40 00\nba 05 00 00 00\ne8 d9 93 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 d4 96 ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe cd d5 40 00\nba 05 00 00 00\ne8 9a 93 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 92 96 ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe f1 d5 40 00\nba 05 00 00 00\ne8 58 93 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 48 96 ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe 19 d6 40 00\nba 05 00 00 00\ne8 0e 93 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 fe 95 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe 45 d6 40 00\nba 05 00 00 00\ne8 c4 92 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 ac 95 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe 75 d6 40 00\nba 05 00 00 00\ne8 75 92 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 5d 95 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 5c 91 ff ff\n'
p33
S'.text:00000000004082a0\n.text:00000000004082a2\n.text:00000000004082a4\n.text:00000000004082a6\n.text:00000000004082a7\n.text:00000000004082a8\n.text:00000000004082ab\n.text:00000000004082ae\n.text:00000000004082b1\n.text:00000000004082b4\n.text:00000000004082b7\n.text:00000000004082ba\n.text:00000000004082bf\n.text:00000000004082c2\n.text:00000000004082c4\n.text:00000000004082c9\n.text:00000000004082cb\n.text:00000000004082ce\n.text:00000000004082d1\n.text:00000000004082d6\n.text:00000000004082d8\n.text:00000000004082dd\n.text:00000000004082df\n.text:00000000004082e2\n.text:00000000004082e5\n.text:00000000004082e8\n.text:00000000004082ed\n.text:00000000004082ef\n.text:00000000004082f4\n.text:00000000004082f9\n.text:00000000004082fe\n.text:0000000000408301\n.text:0000000000408306\n.text:000000000040830b\n.text:0000000000408311\n.text:0000000000408313\n.text:0000000000408316\n.text:000000000040831b\n.text:000000000040831d\n.text:0000000000408322\n.text:0000000000408327\n.text:000000000040832c\n.text:000000000040832f\n.text:0000000000408332\n.text:0000000000408337\n.text:000000000040833b\n.text:000000000040833d\n.text:0000000000408345\n.text:0000000000408347\n.text:000000000040834c\n.text:0000000000408351\n.text:0000000000408356\n.text:0000000000408359\n.text:000000000040835c\n.text:0000000000408361\n.text:0000000000408363\n.text:0000000000408366\n.text:000000000040836a\n.text:000000000040836b\n.text:000000000040836d\n.text:000000000040836f\n.text:0000000000408371\n.text:0000000000408376\n.text:0000000000408378\n.text:000000000040837d\n.text:0000000000408382\n.text:0000000000408387\n.text:000000000040838a\n.text:000000000040838d\n.text:0000000000408391\n.text:0000000000408395\n.text:000000000040839a\n.text:000000000040839f\n.text:00000000004083a2\n.text:00000000004083a6\n.text:00000000004083aa\n.text:00000000004083ae\n.text:00000000004083b2\n.text:00000000004083b6\n.text:00000000004083ba\n.text:00000000004083bf\n.text:00000000004083c3\n.text:00000000004083c8\n.text:00000000004083ca\n.text:00000000004083cf\n.text:00000000004083d4\n.text:00000000004083d9\n.text:00000000004083dc\n.text:00000000004083df\n.text:00000000004083e3\n.text:00000000004083e8\n.text:00000000004083ea\n.text:00000000004083ed\n.text:00000000004083f1\n.text:00000000004083f2\n.text:00000000004083f4\n.text:00000000004083f6\n.text:00000000004083f8\n.text:00000000004083fd\n.text:00000000004083ff\n.text:0000000000408404\n.text:0000000000408409\n.text:000000000040840e\n.text:0000000000408411\n.text:0000000000408414\n.text:0000000000408418\n.text:000000000040841c\n.text:0000000000408421\n.text:0000000000408423\n.text:0000000000408426\n.text:000000000040842a\n.text:000000000040842b\n.text:000000000040842d\n.text:000000000040842f\n.text:0000000000408431\n.text:0000000000408436\n.text:0000000000408438\n.text:000000000040843d\n.text:0000000000408442\n.text:0000000000408447\n.text:000000000040844a\n.text:000000000040844d\n.text:0000000000408451\n.text:0000000000408455\n.text:0000000000408459\n.text:000000000040845e\n.text:0000000000408460\n.text:0000000000408463\n.text:0000000000408467\n.text:000000000040846c\n.text:0000000000408470\n.text:0000000000408475\n.text:0000000000408477\n.text:000000000040847c\n.text:0000000000408481\n.text:0000000000408486\n.text:0000000000408489\n.text:000000000040848c\n.text:0000000000408490\n.text:0000000000408494\n.text:0000000000408499\n.text:000000000040849e\n.text:00000000004084a1\n.text:00000000004084a5\n.text:00000000004084a9\n.text:00000000004084ae\n.text:00000000004084b2\n.text:00000000004084b7\n.text:00000000004084b9\n.text:00000000004084be\n.text:00000000004084c3\n.text:00000000004084c8\n.text:00000000004084cb\n.text:00000000004084ce\n.text:00000000004084d2\n.text:00000000004084d6\n.text:00000000004084da\n.text:00000000004084df\n.text:00000000004084e4\n.text:00000000004084e7\n.text:00000000004084eb\n.text:00000000004084ef\n.text:00000000004084f3\n.text:00000000004084f8\n.text:00000000004084fc\n.text:0000000000408501\n.text:0000000000408503\n.text:0000000000408508\n.text:000000000040850d\n.text:0000000000408512\n.text:0000000000408515\n.text:0000000000408518\n.text:000000000040851c\n.text:0000000000408520\n.text:0000000000408525\n.text:000000000040852a\n.text:000000000040852d\n.text:0000000000408531\n.text:0000000000408535\n.text:0000000000408539\n.text:000000000040853d\n.text:0000000000408542\n.text:0000000000408546\n.text:000000000040854b\n.text:000000000040854d\n.text:0000000000408552\n.text:0000000000408557\n.text:000000000040855c\n.text:000000000040855f\n.text:0000000000408562\n.text:0000000000408566\n.text:000000000040856a\n.text:000000000040856e\n.text:0000000000408573\n.text:0000000000408578\n.text:000000000040857b\n.text:000000000040857f\n.text:0000000000408583\n.text:0000000000408587\n.text:000000000040858b\n.text:000000000040858f\n.text:0000000000408594\n.text:0000000000408598\n.text:000000000040859a\n.text:000000000040859c\n.text:00000000004085a1\n.text:00000000004085a6\n.text:00000000004085ab\n.text:00000000004085ae\n.text:00000000004085b1\n.text:00000000004085b5\n.text:00000000004085b9\n.text:00000000004085be\n.text:00000000004085c3\n.text:00000000004085c6\n.text:00000000004085ca\n.text:00000000004085ce\n.text:00000000004085d2\n.text:00000000004085d6\n.text:00000000004085da\n.text:00000000004085de\n.text:00000000004085e3\n.text:00000000004085e7\n.text:00000000004085e8\n.text:00000000004085ea\n.text:00000000004085ec\n.text:00000000004085ee\n.text:00000000004085ef\n'
p34
tp35
sS'mktime_internal'
p36
(S'\n__stdcall mktime_internal(tm * tp, anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * offset)\n'
p37
V\u000atime_t mktime_internal(tm *tp,tm *(*convert)(time_t *,tm *),time_t *offset)\u000a\u000a{\u000a  uint uVar1;\u000a  tm *(*convert_00)(time_t *,tm *);\u000a  int iVar2;\u000a  int iVar3;\u000a  time_t tVar4;\u000a  tm *ptVar5;\u000a  uint uVar6;\u000a  time_t tVar7;\u000a  long a;\u000a  int iVar8;\u000a  long lVar9;\u000a  bool bVar10;\u000a  bool bVar11;\u000a  int isdst;\u000a  time_t local_108;\u000a  uint local_100;\u000a  int local_fc;\u000a  uint local_f8;\u000a  int local_f4;\u000a  time_t local_f0;\u000a  time_t local_e8;\u000a  long *local_e0;\u000a  long local_d8;\u000a  long local_d0;\u000a  long local_c8;\u000a  tm *local_c0;\u000a  long local_b8;\u000a  long local_b0;\u000a  tm *(*local_a8)(time_t *,tm *);\u000a  int local_a0;\u000a  int iStack156;\u000a  int iStack152;\u000a  int iStack148;\u000a  int local_90;\u000a  int iStack140;\u000a  int iStack136;\u000a  int iStack132;\u000a  int local_80;\u000a  undefined4 uStack124;\u000a  undefined4 uStack120;\u000a  undefined4 uStack116;\u000a  char *local_70;\u000a  tm local_68;\u000a  \u000a  iVar8 = tp->tm_sec;\u000a  local_b0 = (long)iVar8;\u000a  local_100 = tp->tm_min;\u000a  local_f8 = tp->tm_hour;\u000a  iVar3 = tp->tm_mon;\u000a  local_f4 = tp->tm_isdst;\u000a  iVar2 = iVar3 / 0xc + (iVar3 >> 0x1f) + ((uint)(iVar3 / 6 + (iVar3 >> 0x1f)) >> 0x1f);\u000a  uVar6 = iVar3 + iVar2 * -0xc;\u000a  local_d0 = (long)(int)(iVar2 - (uVar6 >> 0x1f)) + (long)tp->tm_year;\u000a  iVar3 = tp->tm_mday;\u000a  local_e0 = offset;\u000a  local_c0 = tp;\u000a  local_a8 = convert;\u000a  iVar2 = leapyear(local_d0);\u000a  uVar1 = local_f8;\u000a  bVar10 = false;\u000a  local_d8 = (long)iVar3 + -1 +\u000a             (ulong)__mon_yday[(long)iVar2 * 0xd + (long)(int)(((int)uVar6 >> 0x1f & 0xcU) + uVar6)]\u000a  ;\u000a  local_b8 = *local_e0;\u000a  iVar3 = 0;\u000a  if (-1 < local_b0) {\u000a    iVar3 = iVar8;\u000a  }\u000a  local_fc = 0x3b;\u000a  if (iVar3 < 0x3c) {\u000a    local_fc = iVar3;\u000a  }\u000a  local_108 = ydhms_diff(local_d0,local_d8,local_f8,local_100,local_fc,0x46);\u000a  convert_00 = local_a8;\u000a  local_f0 = local_108;\u000a  local_e8 = local_108;\u000a  ranged_convert(local_a8,&local_108,(tm *)&local_a0);\u000a  uVar6 = local_100;\u000a  tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)uVar1,(tm *)(ulong)local_100);\u000a  if (local_108 != tVar4) {\u000a    iVar8 = -6;\u000a    tVar7 = local_e8;\u000a    do {\u000a      a = local_f0;\u000a      if ((local_108 == tVar7) && (local_108 != local_f0)) {\u000a        if (local_80 < 0) goto LAB_00408e0b;\u000a        if (local_f4 < 0) {\u000a          if (bVar10 <= (local_80 != 0)) goto LAB_00408e0b;\u000a        }\u000a        else {\u000a          if ((local_f4 != 0) != (local_80 != 0)) goto LAB_00408e0b;\u000a        }\u000a      }\u000a      iVar8 = iVar8 + 1;\u000a      if (iVar8 == 0) {\u000a        return -1;\u000a      }\u000a      local_f0 = local_108;\u000a      bVar10 = local_80 != 0;\u000a      local_108 = tVar4;\u000a      ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a      tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,(tm *)(ulong)uVar6);\u000a      tVar7 = a;\u000a    } while (local_108 != tVar4);\u000a  }\u000a  iVar8 = isdst_differ();\u000a  if (iVar8 != 0) {\u000a    a = 0x92c70;\u000a    do {\u000a      lVar9 = -1;\u000a      do {\u000a        iVar8 = time_t_int_add_ok(local_108);\u000a        if (iVar8 != 0) {\u000a          local_c8 = lVar9 * a + local_108;\u000a          ranged_convert(convert_00,&local_c8,&local_68);\u000a          iVar8 = isdst_differ();\u000a          if (iVar8 == 0) {\u000a            local_108 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,\u000a                                      (tm *)(ulong)local_100);\u000a            ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a            goto LAB_00408e0b;\u000a          }\u000a        }\u000a        bVar10 = lVar9 < 0;\u000a        lVar9 = lVar9 + 2;\u000a      } while (bVar10);\u000a      a = a + 0x92c70;\u000a    } while (a < 0x1005fe28);\u000a  }\u000aLAB_00408e0b:\u000a  a = local_b0;\u000a  iVar8 = local_fc;\u000a  *local_e0 = (local_b8 - local_e8) + local_108;\u000a  if ((int)local_b0 != local_a0) {\u000a    bVar10 = local_fc == 0;\u000a    bVar11 = local_a0 == 0x3c;\u000a    iVar3 = time_t_int_add_ok(local_108);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    a = a + local_108;\u000a    iVar3 = time_t_int_add_ok(a);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    local_f0 = a + (long)(int)((uint)(bVar10 && bVar11) - iVar8);\u000a    ptVar5 = (*convert_00)(&local_f0,(tm *)&local_a0);\u000a    if (ptVar5 == (tm *)0x0) {\u000a      return -1;\u000a    }\u000a    local_108 = local_f0;\u000a  }\u000a  local_c0->tm_zone = local_70;\u000a  local_c0->tm_isdst = local_80;\u000a  *(undefined4 *)&local_c0->field_0x24 = uStack124;\u000a  *(undefined4 *)&local_c0->tm_gmtoff = uStack120;\u000a  *(undefined4 *)((long)&local_c0->tm_gmtoff + 4) = uStack116;\u000a  local_c0->tm_mon = local_90;\u000a  local_c0->tm_year = iStack140;\u000a  local_c0->tm_wday = iStack136;\u000a  local_c0->tm_yday = iStack132;\u000a  local_c0->tm_sec = local_a0;\u000a  local_c0->tm_min = iStack156;\u000a  local_c0->tm_hour = iStack152;\u000a  local_c0->tm_mday = iStack148;\u000a  return local_108;\u000a}\u000a\u000a
p38
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV qword ptr [RSP + 0x28],RDX\nMOV qword ptr [RSP + 0x60],RSI\nMOVSXD R15,dword ptr [RDI]\nMOV EAX,dword ptr [RDI + 0x4]\nMOV dword ptr [RSP + 0x8],EAX\nMOV EAX,dword ptr [RDI + 0x8]\nMOV dword ptr [RSP + 0x10],EAX\nMOVSXD RBX,dword ptr [RDI + 0x10]\nMOV EAX,dword ptr [RDI + 0x20]\nMOV dword ptr [RSP + 0x14],EAX\nIMUL RAX,RBX,0x2aaaaaab\nMOV RCX,RAX\nSHR RCX,0x3f\nSAR RAX,0x21\nADD EAX,ECX\nLEA ECX,[RAX*0x4]\nLEA ECX,[RCX + RCX*0x2]\nSUB EBX,ECX\nMOV ECX,EBX\nSHR ECX,0x1f\nSUB EAX,ECX\nMOVSXD RCX,dword ptr [RDI + 0x14]\nMOVSXD R13,EAX\nADD R13,RCX\nMOV qword ptr [RSP + 0x48],RDI\nMOVSXD R14,dword ptr [RDI + 0xc]\nMOV RDI,R13\nCALL 0x00408ef0\nCDQE\nMOV ECX,EBX\nSAR ECX,0x1f\nAND ECX,0xc\nADD ECX,EBX\nIMUL RAX,RAX,0x1a\nXOR EBP,EBP\nTEST R15,R15\nMOVSXD RCX,ECX\nMOVZX EAX,word ptr [0x40d7a0 + RAX + RCX*0x2]\nLEA R12,[R14 + RAX*0x1 + -0x1]\nMOV RAX,qword ptr [RSP + 0x28]\nMOV RDX,qword ptr [RAX]\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x58],R15\nCMOVNS EAX,R15D\nCMP EAX,0x3c\nMOV EBX,0x3b\nCMOVL EBX,EAX\nMOV qword ptr [RSP + 0x50],RDX\nMOV EAX,EDX\nNEG EAX\nMOV R9D,0x46\nMOV RDI,R13\nMOV RSI,R12\nMOV R14D,dword ptr [RSP + 0x10]\nMOV EDX,R14D\nMOV ECX,dword ptr [RSP + 0x8]\nMOV R8D,EBX\nPUSH RAX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x00408f50\nADD RSP,0x20\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,qword ptr [RSP + 0x60]\nMOV R15,RDI\nCALL 0x004090f0\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x40],R13\nMOV RDI,R13\nMOV qword ptr [RSP + 0x38],R12\nMOV RSI,R12\nMOV EDX,R14D\nMOV R14D,dword ptr [RSP + 0x10]\nMOV ECX,R14D\nMOV dword ptr [RSP + 0x14],EBX\nMOV R8D,EBX\nLEA R9,[RSP + 0x8]\nPUSH RAX\nCALL 0x00409060\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJZ 0x00408d3d\nMOV R13D,0xfffffffa\nMOV R12,RSP\nMOV RBX,qword ptr [RSP + 0x20]\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP RCX,RBX\nJNZ 0x00408cd0\nCMP RCX,qword ptr [RSP + 0x18]\nJZ 0x00408cd0\nMOV ECX,dword ptr [0x88 + RSP]\nTEST ECX,ECX\nJS 0x00408e0b\nMOV EDX,dword ptr [RSP + 0x14]\nTEST EDX,EDX\nJS 0x00408cb6\nTEST ECX,ECX\nSETNZ CL\nTEST EDX,EDX\nSETNZ DL\nXOR DL,CL\nJZ 0x00408cd0\nJMP 0x00408e0b\nXOR EDX,EDX\nTEST ECX,ECX\nSETNZ DL\nCMP EBP,EDX\nJBE 0x00408e0b\nNOP dword ptr CS:[RAX + RAX*0x1]\nINC R13D\nJZ 0x00408ecc\nMOV RBX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP]\nMOV qword ptr [RSP + 0x18],RCX\nMOV qword ptr [RSP],RAX\nXOR EBP,EBP\nCMP dword ptr [0x88 + RSP],0x0\nSETNZ BPL\nMOV RDI,R15\nMOV RSI,R12\nLEA RDX,[RSP + 0x68]\nCALL 0x004090f0\nSUB RSP,0x8\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,R14D\nMOV R8D,dword ptr [RSP + 0x14]\nMOV R9,R12\nPUSH RAX\nCALL 0x00409060\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJNZ 0x00408c80\nMOV ESI,dword ptr [0x88 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x004091c0\nTEST EAX,EAX\nJZ 0x00408e0b\nMOV EBX,0x92c70\nLEA R13,[RSP + 0x40]\nLEA RBP,[0xa0 + RSP]\nMOV R14,-0x1\nNOP\nMOV RDI,qword ptr [RSP]\nMOV R12,R14\nIMUL R12,RBX\nMOV ESI,R12D\nCALL 0x004091e0\nTEST EAX,EAX\nJZ 0x00408db2\nADD R12,qword ptr [RSP]\nMOV qword ptr [RSP + 0x40],R12\nMOV RDI,R15\nMOV RSI,R13\nMOV RDX,RBP\nCALL 0x004090f0\nMOV ESI,dword ptr [0xc0 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x004091c0\nTEST EAX,EAX\nJZ 0x00408dcd\nTEST R14,R14\nLEA R14,[R14 + 0x2]\nJS 0x00408d70\nADD RBX,0x92c70\nCMP RBX,0x1005fe28\nJL 0x00408d67\nJMP 0x00408e0b\nSUB RSP,0x8\nLEA R9,[RSP + 0x48]\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,dword ptr [RSP + 0x10]\nMOV R8D,dword ptr [RSP + 0x14]\nPUSH RBP\nCALL 0x00409060\nADD RSP,0x10\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,R15\nCALL 0x004090f0\nMOV RDI,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x50]\nSUB RCX,qword ptr [RSP + 0x20]\nADD RCX,RDI\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [RAX],RCX\nMOV EAX,dword ptr [RSP + 0x68]\nMOV RBX,qword ptr [RSP + 0x58]\nCMP EBX,EAX\nJZ 0x00408e98\nMOV R13D,dword ptr [RSP + 0xc]\nTEST R13D,R13D\nSETZ R12B\nCMP EAX,0x3c\nSETZ BPL\nMOV ESI,EBX\nCALL 0x004091e0\nMOV R14,-0x1\nTEST EAX,EAX\nJZ 0x00408ed3\nAND R12B,BPL\nMOVZX EBP,R12B\nSUB EBP,R13D\nADD RBX,qword ptr [RSP]\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x004091e0\nTEST EAX,EAX\nJZ 0x00408ed3\nMOVSXD RAX,EBP\nADD RBX,RAX\nMOV qword ptr [RSP + 0x18],RBX\nLEA RDI,[RSP + 0x18]\nLEA RSI,[RSP + 0x68]\nCALL R15\nTEST RAX,RAX\nJZ 0x00408ed3\nMOV RAX,qword ptr [RSP + 0x18]\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [0x98 + RSP]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x68]\nMOVUPS XMM1,xmmword ptr [RSP + 0x78]\nMOVUPS XMM2,xmmword ptr [0x88 + RSP]\nMOVUPS xmmword ptr [RCX + 0x20],XMM2\nMOVUPS xmmword ptr [RCX + 0x10],XMM1\nMOVUPS xmmword ptr [RCX],XMM0\nMOV R14,qword ptr [RSP]\nJMP 0x00408ed3\nMOV R14,-0x1\nMOV RAX,R14\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p39
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n48 89 54 24 28\n48 89 74 24 60\n4c 63 3f\n8b 47 04\n89 44 24 08\n8b 47 08\n89 44 24 10\n48 63 5f 10\n8b 47 20\n89 44 24 14\n48 69 c3 ab aa aa 2a\n48 89 c1\n48 c1 e9 3f\n48 c1 f8 21\n01 c8\n8d 0c 85 00 00 00 00\n8d 0c 49\n29 cb\n89 d9\nc1 e9 1f\n29 c8\n48 63 4f 14\n4c 63 e8\n49 01 cd\n48 89 7c 24 48\n4c 63 77 0c\n4c 89 ef\ne8 67 03 00 00\n48 98\n89 d9\nc1 f9 1f\n83 e1 0c\n01 d9\n48 6b c0 1a\n31 ed\n4d 85 ff\n48 63 c9\n0f b7 84 48 a0 d7 40 00\n4d 8d 64 06 ff\n48 8b 44 24 28\n48 8b 10\nb8 00 00 00 00\n4c 89 7c 24 58\n41 0f 49 c7\n83 f8 3c\nbb 3b 00 00 00\n0f 4c d8\n48 89 54 24 50\n89 d0\nf7 d8\n41 b9 46 00 00 00\n4c 89 ef\n4c 89 e6\n44 8b 74 24 10\n44 89 f2\n8b 4c 24 08\n41 89 d8\n50\n6a 00\n6a 00\n6a 00\ne8 51 03 00 00\n48 83 c4 20\n48 89 44 24 18\n48 89 44 24 20\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n48 8b 7c 24 60\n49 89 ff\ne8 ca 04 00 00\n48 83 ec 08\n4c 89 6c 24 40\n4c 89 ef\n4c 89 64 24 38\n4c 89 e6\n44 89 f2\n44 8b 74 24 10\n44 89 f1\n89 5c 24 14\n41 89 d8\n4c 8d 4c 24 08\n50\ne8 09 04 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 84 d5 00 00 00\n41 bd fa ff ff ff\n49 89 e4\n48 8b 5c 24 20\n66 2e 0f 1f 84 00 00 00 00 00\n48 39 d9\n75 4b\n48 3b 4c 24 18\n74 44\n8b 8c 24 88 00 00 00\n85 c9\n0f 88 70 01 00 00\n8b 54 24 14\n85 d2\n78 13\n85 c9\n0f 95 c1\n85 d2\n0f 95 c2\n30 ca\n74 1f\ne9 55 01 00 00\n31 d2\n85 c9\n0f 95 c2\n39 d5\n0f 86 46 01 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 ff c5\n0f 84 f3 01 00 00\n48 8b 5c 24 18\n48 8b 0c 24\n48 89 4c 24 18\n48 89 04 24\n31 ed\n83 bc 24 88 00 00 00 00\n40 0f 95 c5\n4c 89 ff\n4c 89 e6\n48 8d 54 24 68\ne8 e7 03 00 00\n48 83 ec 08\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n44 89 f1\n44 8b 44 24 14\n4d 89 e1\n50\ne8 34 03 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 85 43 ff ff ff\n8b b4 24 88 00 00 00\n8b 7c 24 14\ne8 73 04 00 00\n85 c0\n0f 84 b6 00 00 00\nbb 70 2c 09 00\n4c 8d 6c 24 40\n48 8d ac 24 a0 00 00 00\n49 c7 c6 ff ff ff ff\n66 90\n48 8b 3c 24\n4d 89 f4\n4c 0f af e3\n44 89 e6\ne8 5d 04 00 00\n85 c0\n74 2b\n4c 03 24 24\n4c 89 64 24 40\n4c 89 ff\n4c 89 ee\n48 89 ea\ne8 52 03 00 00\n8b b4 24 c0 00 00 00\n8b 7c 24 14\ne8 12 04 00 00\n85 c0\n74 1b\n4d 85 f6\n4d 8d 76 02\n78 b5\n48 81 c3 70 2c 09 00\n48 81 fb 28 fe 05 10\n7c 9c\neb 3e\n48 83 ec 08\n4c 8d 4c 24 48\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n8b 4c 24 10\n44 8b 44 24 14\n55\ne8 6d 02 00 00\n48 83 c4 10\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n4c 89 ff\ne8 e5 02 00 00\n48 8b 3c 24\n48 8b 4c 24 50\n48 2b 4c 24 20\n48 01 f9\n48 8b 44 24 28\n48 89 08\n8b 44 24 68\n48 8b 5c 24 58\n39 c3\n74 67\n44 8b 6c 24 0c\n45 85 ed\n41 0f 94 c4\n83 f8 3c\n40 0f 94 c5\n89 de\ne8 95 03 00 00\n49 c7 c6 ff ff ff ff\n85 c0\n74 7d\n41 20 ec\n41 0f b6 ec\n44 29 ed\n48 03 1c 24\n48 89 df\n89 ee\ne8 72 03 00 00\n85 c0\n74 61\n48 63 c5\n48 01 c3\n48 89 5c 24 18\n48 8d 7c 24 18\n48 8d 74 24 68\n41 ff d7\n48 85 c0\n74 44\n48 8b 44 24 18\n48 89 04 24\n48 8b 84 24 98 00 00 00\n48 8b 4c 24 48\n48 89 41 30\n0f 10 44 24 68\n0f 10 4c 24 78\n0f 10 94 24 88 00 00 00\n0f 11 51 20\n0f 11 49 10\n0f 11 01\n4c 8b 34 24\neb 07\n49 c7 c6 ff ff ff ff\n4c 89 f0\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p40
S'.text:0000000000408b10\n.text:0000000000408b11\n.text:0000000000408b13\n.text:0000000000408b15\n.text:0000000000408b17\n.text:0000000000408b19\n.text:0000000000408b1a\n.text:0000000000408b21\n.text:0000000000408b26\n.text:0000000000408b2b\n.text:0000000000408b2e\n.text:0000000000408b31\n.text:0000000000408b35\n.text:0000000000408b38\n.text:0000000000408b3c\n.text:0000000000408b40\n.text:0000000000408b43\n.text:0000000000408b47\n.text:0000000000408b4e\n.text:0000000000408b51\n.text:0000000000408b55\n.text:0000000000408b59\n.text:0000000000408b5b\n.text:0000000000408b62\n.text:0000000000408b65\n.text:0000000000408b67\n.text:0000000000408b69\n.text:0000000000408b6c\n.text:0000000000408b6e\n.text:0000000000408b72\n.text:0000000000408b75\n.text:0000000000408b78\n.text:0000000000408b7d\n.text:0000000000408b81\n.text:0000000000408b84\n.text:0000000000408b89\n.text:0000000000408b8b\n.text:0000000000408b8d\n.text:0000000000408b90\n.text:0000000000408b93\n.text:0000000000408b95\n.text:0000000000408b99\n.text:0000000000408b9b\n.text:0000000000408b9e\n.text:0000000000408ba1\n.text:0000000000408ba9\n.text:0000000000408bae\n.text:0000000000408bb3\n.text:0000000000408bb6\n.text:0000000000408bbb\n.text:0000000000408bc0\n.text:0000000000408bc4\n.text:0000000000408bc7\n.text:0000000000408bcc\n.text:0000000000408bcf\n.text:0000000000408bd4\n.text:0000000000408bd6\n.text:0000000000408bd8\n.text:0000000000408bde\n.text:0000000000408be1\n.text:0000000000408be4\n.text:0000000000408be9\n.text:0000000000408bec\n.text:0000000000408bf0\n.text:0000000000408bf3\n.text:0000000000408bf4\n.text:0000000000408bf6\n.text:0000000000408bf8\n.text:0000000000408bfa\n.text:0000000000408bff\n.text:0000000000408c03\n.text:0000000000408c08\n.text:0000000000408c0d\n.text:0000000000408c11\n.text:0000000000408c14\n.text:0000000000408c19\n.text:0000000000408c1e\n.text:0000000000408c21\n.text:0000000000408c26\n.text:0000000000408c2a\n.text:0000000000408c2f\n.text:0000000000408c32\n.text:0000000000408c37\n.text:0000000000408c3a\n.text:0000000000408c3d\n.text:0000000000408c42\n.text:0000000000408c45\n.text:0000000000408c49\n.text:0000000000408c4c\n.text:0000000000408c51\n.text:0000000000408c52\n.text:0000000000408c57\n.text:0000000000408c5b\n.text:0000000000408c5f\n.text:0000000000408c62\n.text:0000000000408c68\n.text:0000000000408c6e\n.text:0000000000408c71\n.text:0000000000408c76\n.text:0000000000408c80\n.text:0000000000408c83\n.text:0000000000408c85\n.text:0000000000408c8a\n.text:0000000000408c8c\n.text:0000000000408c93\n.text:0000000000408c95\n.text:0000000000408c9b\n.text:0000000000408c9f\n.text:0000000000408ca1\n.text:0000000000408ca3\n.text:0000000000408ca5\n.text:0000000000408ca8\n.text:0000000000408caa\n.text:0000000000408cad\n.text:0000000000408caf\n.text:0000000000408cb1\n.text:0000000000408cb6\n.text:0000000000408cb8\n.text:0000000000408cba\n.text:0000000000408cbd\n.text:0000000000408cbf\n.text:0000000000408cc5\n.text:0000000000408cd0\n.text:0000000000408cd3\n.text:0000000000408cd9\n.text:0000000000408cde\n.text:0000000000408ce2\n.text:0000000000408ce7\n.text:0000000000408ceb\n.text:0000000000408ced\n.text:0000000000408cf5\n.text:0000000000408cf9\n.text:0000000000408cfc\n.text:0000000000408cff\n.text:0000000000408d04\n.text:0000000000408d09\n.text:0000000000408d0d\n.text:0000000000408d12\n.text:0000000000408d17\n.text:0000000000408d1b\n.text:0000000000408d1e\n.text:0000000000408d23\n.text:0000000000408d26\n.text:0000000000408d27\n.text:0000000000408d2c\n.text:0000000000408d30\n.text:0000000000408d34\n.text:0000000000408d37\n.text:0000000000408d3d\n.text:0000000000408d44\n.text:0000000000408d48\n.text:0000000000408d4d\n.text:0000000000408d4f\n.text:0000000000408d55\n.text:0000000000408d5a\n.text:0000000000408d5f\n.text:0000000000408d67\n.text:0000000000408d6e\n.text:0000000000408d70\n.text:0000000000408d74\n.text:0000000000408d77\n.text:0000000000408d7b\n.text:0000000000408d7e\n.text:0000000000408d83\n.text:0000000000408d85\n.text:0000000000408d87\n.text:0000000000408d8b\n.text:0000000000408d90\n.text:0000000000408d93\n.text:0000000000408d96\n.text:0000000000408d99\n.text:0000000000408d9e\n.text:0000000000408da5\n.text:0000000000408da9\n.text:0000000000408dae\n.text:0000000000408db0\n.text:0000000000408db2\n.text:0000000000408db5\n.text:0000000000408db9\n.text:0000000000408dbb\n.text:0000000000408dc2\n.text:0000000000408dc9\n.text:0000000000408dcb\n.text:0000000000408dcd\n.text:0000000000408dd1\n.text:0000000000408dd6\n.text:0000000000408ddb\n.text:0000000000408de0\n.text:0000000000408de4\n.text:0000000000408de8\n.text:0000000000408ded\n.text:0000000000408dee\n.text:0000000000408df3\n.text:0000000000408df7\n.text:0000000000408dfb\n.text:0000000000408dfe\n.text:0000000000408e03\n.text:0000000000408e06\n.text:0000000000408e0b\n.text:0000000000408e0f\n.text:0000000000408e14\n.text:0000000000408e19\n.text:0000000000408e1c\n.text:0000000000408e21\n.text:0000000000408e24\n.text:0000000000408e28\n.text:0000000000408e2d\n.text:0000000000408e2f\n.text:0000000000408e31\n.text:0000000000408e36\n.text:0000000000408e39\n.text:0000000000408e3d\n.text:0000000000408e40\n.text:0000000000408e44\n.text:0000000000408e46\n.text:0000000000408e4b\n.text:0000000000408e52\n.text:0000000000408e54\n.text:0000000000408e56\n.text:0000000000408e59\n.text:0000000000408e5d\n.text:0000000000408e60\n.text:0000000000408e64\n.text:0000000000408e67\n.text:0000000000408e69\n.text:0000000000408e6e\n.text:0000000000408e70\n.text:0000000000408e72\n.text:0000000000408e75\n.text:0000000000408e78\n.text:0000000000408e7d\n.text:0000000000408e82\n.text:0000000000408e87\n.text:0000000000408e8a\n.text:0000000000408e8d\n.text:0000000000408e8f\n.text:0000000000408e94\n.text:0000000000408e98\n.text:0000000000408ea0\n.text:0000000000408ea5\n.text:0000000000408ea9\n.text:0000000000408eae\n.text:0000000000408eb3\n.text:0000000000408ebb\n.text:0000000000408ebf\n.text:0000000000408ec3\n.text:0000000000408ec6\n.text:0000000000408eca\n.text:0000000000408ecc\n.text:0000000000408ed3\n.text:0000000000408ed6\n.text:0000000000408edd\n.text:0000000000408ede\n.text:0000000000408ee0\n.text:0000000000408ee2\n.text:0000000000408ee4\n.text:0000000000408ee6\n.text:0000000000408ee7\n'
p41
tp42
sS'strchr'
p43
(S'\n__stdcall strchr(char * __s, int __c)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_006100c8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x006100c8]\n'
p46
S'ff 25 52 e8 20 00\n'
p47
S'.plt:0000000000401870\n'
p48
tp49
sS'apply_relative_time'
p50
(S'\n__stdcall apply_relative_time(parser_control * pc, relative_time rel)\n'
p51
V\u000avoid apply_relative_time(parser_control *pc,relative_time rel)\u000a\u000a{\u000a  long *plVar1;\u000a  long lVar2;\u000a  int in_ESI;\u000a  \u000a  lVar2 = (long)in_ESI;\u000a  plVar1 = &(pc->rel).ns;\u000a  *plVar1 = *plVar1 + rel.ns * lVar2;\u000a  plVar1 = &(pc->rel).seconds;\u000a  *plVar1 = *plVar1 + rel.seconds * lVar2;\u000a  plVar1 = &(pc->rel).minutes;\u000a  *plVar1 = *plVar1 + rel.minutes * lVar2;\u000a  plVar1 = &(pc->rel).hour;\u000a  *plVar1 = *plVar1 + rel.hour * lVar2;\u000a  plVar1 = &(pc->rel).day;\u000a  *plVar1 = *plVar1 + rel.day * lVar2;\u000a  plVar1 = &(pc->rel).month;\u000a  *plVar1 = *plVar1 + rel.month * lVar2;\u000a  (pc->rel).year = (pc->rel).year + lVar2 * rel.year;\u000a  pc->rels_seen = true;\u000a  return;\u000a}\u000a\u000a
p52
S'MOVSXD RAX,ESI\nMOV RCX,qword ptr [RSP + 0x38]\nIMUL RCX,RAX\nADD qword ptr [0xa0 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x30]\nIMUL RCX,RAX\nADD qword ptr [0x98 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x28]\nIMUL RCX,RAX\nADD qword ptr [0x90 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x20]\nIMUL RCX,RAX\nADD qword ptr [0x88 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x18]\nIMUL RCX,RAX\nADD qword ptr [0x80 + RDI],RCX\nMOV RCX,qword ptr [RSP + 0x10]\nIMUL RCX,RAX\nADD qword ptr [RDI + 0x78],RCX\nIMUL RAX,qword ptr [RSP + 0x8]\nADD qword ptr [RDI + 0x70],RAX\nMOV byte ptr [0xa9 + RDI],0x1\nRET\n'
p53
S'48 63 c6\n48 8b 4c 24 38\n48 0f af c8\n48 01 8f a0 00 00 00\n48 8b 4c 24 30\n48 0f af c8\n48 01 8f 98 00 00 00\n48 8b 4c 24 28\n48 0f af c8\n48 01 8f 90 00 00 00\n48 8b 4c 24 20\n48 0f af c8\n48 01 8f 88 00 00 00\n48 8b 4c 24 18\n48 0f af c8\n48 01 8f 80 00 00 00\n48 8b 4c 24 10\n48 0f af c8\n48 01 4f 78\n48 0f af 44 24 08\n48 01 47 70\nc6 87 a9 00 00 00 01\nc3\n'
p54
S'.text:0000000000405680\n.text:0000000000405683\n.text:0000000000405688\n.text:000000000040568c\n.text:0000000000405693\n.text:0000000000405698\n.text:000000000040569c\n.text:00000000004056a3\n.text:00000000004056a8\n.text:00000000004056ac\n.text:00000000004056b3\n.text:00000000004056b8\n.text:00000000004056bc\n.text:00000000004056c3\n.text:00000000004056c8\n.text:00000000004056cc\n.text:00000000004056d3\n.text:00000000004056d8\n.text:00000000004056dc\n.text:00000000004056e0\n.text:00000000004056e6\n.text:00000000004056ea\n.text:00000000004056f1\n'
p55
tp56
sS'rpl_fclose'
p57
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p58
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_00408a39;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_00408a39:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x004019a0\nTEST EAX,EAX\nJS 0x00408a39\nMOV RDI,RBX\nCALL 0x00401a40\nTEST EAX,EAX\nJZ 0x00408a07\nMOV RDI,RBX\nCALL 0x004019a0\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x004018a0\nCMP RAX,-0x1\nJZ 0x00408a39\nMOV RDI,RBX\nCALL 0x00408a50\nTEST EAX,EAX\nJZ 0x00408a39\nCALL 0x00401760\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x00401800\nTEST EBP,EBP\nJZ 0x00408a32\nCALL 0x00401760\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401800\n'
p60
S'55\n53\n50\n48 89 fb\ne8 c5 8f ff ff\n85 c0\n78 5a\n48 89 df\ne8 59 90 ff ff\n85 c0\n74 1c\n48 89 df\ne8 ad 8f ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 9f 8e ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 41 00 00 00\n85 c0\n74 26\ne8 48 8d ff ff\n8b 28\n48 89 df\ne8 de 8d ff ff\n85 ed\n74 0c\ne8 35 8d ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 b9 8d ff ff\n'
p61
S'.text:00000000004089d0\n.text:00000000004089d1\n.text:00000000004089d2\n.text:00000000004089d3\n.text:00000000004089d6\n.text:00000000004089db\n.text:00000000004089dd\n.text:00000000004089df\n.text:00000000004089e2\n.text:00000000004089e7\n.text:00000000004089e9\n.text:00000000004089eb\n.text:00000000004089ee\n.text:00000000004089f3\n.text:00000000004089f5\n.text:00000000004089fa\n.text:00000000004089fc\n.text:0000000000408a01\n.text:0000000000408a05\n.text:0000000000408a07\n.text:0000000000408a0a\n.text:0000000000408a0f\n.text:0000000000408a11\n.text:0000000000408a13\n.text:0000000000408a18\n.text:0000000000408a1a\n.text:0000000000408a1d\n.text:0000000000408a22\n.text:0000000000408a24\n.text:0000000000408a26\n.text:0000000000408a2b\n.text:0000000000408a2d\n.text:0000000000408a32\n.text:0000000000408a36\n.text:0000000000408a37\n.text:0000000000408a38\n.text:0000000000408a39\n.text:0000000000408a3c\n.text:0000000000408a40\n.text:0000000000408a41\n.text:0000000000408a42\n'
p62
tp63
sS'to_uchar'
p64
(S'\n__stdcall to_uchar()\n'
p65
V\u000auchar to_uchar(void)\u000a\u000a{\u000a  uchar in_DIL;\u000a  \u000a  return in_DIL;\u000a}\u000a\u000a
p66
S'MOV EAX,EDI\nRET\n'
p67
S'89 f8\nc3\n'
p68
S'.text:00000000004064d0\n.text:00000000004064d2\n'
p69
tp70
sS'strncmp'
p71
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00610048)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00610048]\n'
p74
S'ff 25 d2 e8 20 00\n'
p75
S'.plt:0000000000401770\n'
p76
tp77
sS'xnrealloc'
p78
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p79
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p80
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x004087f4\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x00408800\nPUSH RAX\nCALL 0x00408950\n'
p81
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p82
S'.text:00000000004087e0\n.text:00000000004087e3\n.text:00000000004087e6\n.text:00000000004087e9\n.text:00000000004087eb\n.text:00000000004087ef\n.text:00000000004087f2\n.text:00000000004087f4\n.text:00000000004087f5\n'
p83
tp84
sS'quote'
p85
(S'\n__stdcall quote(char * arg)\n'
p86
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p87
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00407d90\n'
p88
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p89
S'.text:0000000000407da0\n.text:0000000000407da3\n.text:0000000000407da5\n.text:0000000000407da8\n'
p90
tp91
sS'emit_bug_reporting_address'
p92
(S'\n__stdcall emit_bug_reporting_address()\n'
p93
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40d6e5\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40d6fa\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a80\nXOR EDI,EDI\nMOV ESI,0x40d710\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40b301\nMOV ECX,0x40b586\nXOR EAX,EAX\nCALL 0x00401a80\nXOR EDI,EDI\nMOV ESI,0x40d724\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401910\n'
p95
S'50\n31 ff\nbe e5 d6 40 00\nba 05 00 00 00\ne8 ee 90 ff ff\n48 89 c1\nbf 01 00 00 00\nba fa d6 40 00\n31 c0\n48 89 ce\ne8 37 93 ff ff\n31 ff\nbe 10 d7 40 00\nba 05 00 00 00\ne8 c6 90 ff ff\n48 89 c6\nbf 01 00 00 00\nba 01 b3 40 00\nb9 86 b5 40 00\n31 c0\ne8 0d 93 ff ff\n31 ff\nbe 24 d7 40 00\nba 05 00 00 00\ne8 9c 90 ff ff\n48 8b 35 5d 7b 20 00\n48 89 c7\n58\ne9 7c 91 ff ff\n'
p96
S'.text:0000000000408720\n.text:0000000000408721\n.text:0000000000408723\n.text:0000000000408728\n.text:000000000040872d\n.text:0000000000408732\n.text:0000000000408735\n.text:000000000040873a\n.text:000000000040873f\n.text:0000000000408741\n.text:0000000000408744\n.text:0000000000408749\n.text:000000000040874b\n.text:0000000000408750\n.text:0000000000408755\n.text:000000000040875a\n.text:000000000040875d\n.text:0000000000408762\n.text:0000000000408767\n.text:000000000040876c\n.text:000000000040876e\n.text:0000000000408773\n.text:0000000000408775\n.text:000000000040877a\n.text:000000000040877f\n.text:0000000000408784\n.text:000000000040878b\n.text:000000000040878e\n.text:000000000040878f\n'
p97
tp98
sS'clone_quoting_options'
p99
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p100
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p101
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401760\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x610350\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00408900\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p102
S'55\n41 56\n53\n48 89 fb\ne8 f4 ad ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 50 03 61 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 75 1f 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p103
S'.text:0000000000406960\n.text:0000000000406961\n.text:0000000000406963\n.text:0000000000406964\n.text:0000000000406967\n.text:000000000040696c\n.text:000000000040696f\n.text:0000000000406972\n.text:0000000000406975\n.text:000000000040697a\n.text:000000000040697e\n.text:0000000000406983\n.text:0000000000406986\n.text:000000000040698b\n.text:000000000040698e\n.text:000000000040698f\n.text:0000000000406991\n.text:0000000000406992\n'
p104
tp105
sS'get_stat_atime'
p106
(S'\n__stdcall get_stat_atime(stat * st)\n'
p107
V\u000atimespec get_stat_atime(stat *st)\u000a\u000a{\u000a  return st->st_atim;\u000a}\u000a\u000a
p108
S'MOV RAX,qword ptr [RDI + 0x48]\nMOV RDX,qword ptr [RDI + 0x50]\nRET\n'
p109
S'48 8b 47 48\n48 8b 57 50\nc3\n'
p110
S'.text:0000000000408260\n.text:0000000000408264\n.text:0000000000408268\n'
p111
tp112
sS'xmalloc'
p113
(S'\n__stdcall xmalloc(size_t n)\n'
p114
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p115
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x004019f0\nTEST RBX,RBX\nJZ 0x004087d3\nTEST RAX,RAX\nJZ 0x004087d5\nPOP RBX\nRET\nCALL 0x00408950\n'
p116
S'53\n48 89 fb\ne8 27 92 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p117
S'.text:00000000004087c0\n.text:00000000004087c1\n.text:00000000004087c4\n.text:00000000004087c9\n.text:00000000004087cc\n.text:00000000004087ce\n.text:00000000004087d1\n.text:00000000004087d3\n.text:00000000004087d4\n.text:00000000004087d5\n'
p118
tp119
sS'leapyear'
p120
(S'\n__stdcall leapyear(long_int year)\n'
p121
V\u000aint leapyear(long_int year)\u000a\u000a{\u000a  bool bVar1;\u000a  \u000a  if ((year & 3U) != 0) {\u000a    return 0;\u000a  }\u000a  bVar1 = true;\u000a  if (year == (year / 100 + (year >> 0x3f) +\u000a              SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * 100) {\u000a    bVar1 = (((uint)SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x46,0) & 0x3ffffff) +\u000a             SUB164(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0) & 3) == 1;\u000a  }\u000a  return (int)(uint)bVar1;\u000a}\u000a\u000a
p122
S'TEST DIL,0x3\nJZ 0x00408efc\nXOR EAX,EAX\nMOVZX EAX,AL\nRET\nMOV RCX,-0x5c28f5c28f5c28f5\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RDX,RDX,0x64\nMOV AL,0x1\nCMP RDI,RDX\nJNZ 0x00408f47\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSHR EDX,0x6\nADD EDX,EAX\nAND EDX,0x3\nCMP RDX,0x1\nSETZ AL\nMOVZX EAX,AL\nRET\n'
p123
S'40 f6 c7 03\n74 06\n31 c0\n0f b6 c0\nc3\n48 b9 0b d7 a3 70 3d 0a d7 a3\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b d2 64\nb0 01\n48 39 d7\n75 1f\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\nc1 ea 06\n01 c2\n83 e2 03\n48 83 fa 01\n0f 94 c0\n0f b6 c0\nc3\n'
p124
S'.text:0000000000408ef0\n.text:0000000000408ef4\n.text:0000000000408ef6\n.text:0000000000408ef8\n.text:0000000000408efb\n.text:0000000000408efc\n.text:0000000000408f06\n.text:0000000000408f09\n.text:0000000000408f0c\n.text:0000000000408f0f\n.text:0000000000408f12\n.text:0000000000408f16\n.text:0000000000408f1a\n.text:0000000000408f1d\n.text:0000000000408f21\n.text:0000000000408f23\n.text:0000000000408f26\n.text:0000000000408f28\n.text:0000000000408f2b\n.text:0000000000408f2e\n.text:0000000000408f31\n.text:0000000000408f34\n.text:0000000000408f38\n.text:0000000000408f3b\n.text:0000000000408f3d\n.text:0000000000408f40\n.text:0000000000408f44\n.text:0000000000408f47\n.text:0000000000408f4a\n'
p125
tp126
sS'clock_gettime'
p127
(S'\n__stdcall clock_gettime(clockid_t __clock_id, timespec * __tp)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint clock_gettime(clockid_t __clock_id,timespec *__tp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_clock_gettime_00610078)();\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00610078]\n'
p130
S'ff 25 a2 e8 20 00\n'
p131
S'.plt:00000000004017d0\n'
p132
tp133
sS'quotearg_char_mem'
p134
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p135
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p136
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x00610380]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x00610370]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x00610360]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x00610350]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x004069c0\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x004078b0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p137
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d a8 87 20 00\n48 89 4c 24 30\n0f 10 05 8c 87 20 00\n0f 29 44 24 20\n0f 10 05 70 87 20 00\n0f 29 44 24 10\n0f 10 05 54 87 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p138
S'.text:0000000000407bc0\n.text:0000000000407bc2\n.text:0000000000407bc4\n.text:0000000000407bc5\n.text:0000000000407bc9\n.text:0000000000407bcb\n.text:0000000000407bce\n.text:0000000000407bd1\n.text:0000000000407bd8\n.text:0000000000407bdd\n.text:0000000000407be4\n.text:0000000000407be9\n.text:0000000000407bf0\n.text:0000000000407bf5\n.text:0000000000407bfc\n.text:0000000000407c00\n.text:0000000000407c03\n.text:0000000000407c08\n.text:0000000000407c0b\n.text:0000000000407c0d\n.text:0000000000407c12\n.text:0000000000407c14\n.text:0000000000407c17\n.text:0000000000407c1a\n.text:0000000000407c1d\n.text:0000000000407c22\n.text:0000000000407c26\n.text:0000000000407c27\n.text:0000000000407c29\n.text:0000000000407c2b\n'
p139
tp140
sS'frame_dummy'
p141
(S'\n__stdcall frame_dummy()\n'
p142
V\u000a/* WARNING: Removing unreachable block (ram,0x00401c8a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p143
S'MOV EDI,0x60fe18\nCMP qword ptr [RDI],0x0\nJNZ 0x00401c80\nJMP 0x00401c10\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401c7b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401c10\n'
p144
S'bf 18 fe 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p145
S'.text:0000000000401c70\n.text:0000000000401c75\n.text:0000000000401c79\n.text:0000000000401c7b\n.text:0000000000401c80\n.text:0000000000401c85\n.text:0000000000401c88\n.text:0000000000401c8a\n.text:0000000000401c8b\n.text:0000000000401c8e\n.text:0000000000401c90\n.text:0000000000401c91\n'
p146
tp147
sS'yylex'
p148
(S'\n__stdcall yylex(YYSTYPE * lvalp, parser_control * pc)\n'
p149
V\u000aint yylex(YYSTYPE *lvalp,parser_control *pc)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  _Bool _Var4;\u000a  byte bVar5;\u000a  int iVar6;\u000a  long lVar7;\u000a  table *ptVar8;\u000a  int iVar9;\u000a  char *pcVar10;\u000a  char *pcVar11;\u000a  ulong uVar12;\u000a  byte *pbVar13;\u000a  ulong uVar14;\u000a  byte bVar15;\u000a  uint uVar16;\u000a  int iVar17;\u000a  char buff [20];\u000a  byte local_48 [19];\u000a  byte local_35 [5];\u000a  \u000a  pbVar13 = local_48;\u000aLAB_004052e0:\u000a  do {\u000a    bVar5 = *pc->input;\u000a    while (_Var4 = c_isspace(), _Var4 != false) {\u000a      pcVar10 = pc->input;\u000a      pc->input = pcVar10 + 1;\u000a      bVar5 = pcVar10[1];\u000a    }\u000a    if ((uint)bVar5 - 0x30 < 10) {\u000a      if ((bVar5 != 0x2d) && (bVar5 != 0x2b)) {\u000a        iVar9 = 0;\u000a        bVar15 = bVar5;\u000a        break;\u000a      }\u000a    }\u000a    else {\u000a      if ((bVar5 != 0x2b) && (bVar5 != 0x2d)) {\u000a        _Var4 = c_isalpha();\u000a        if (_Var4 != false) {\u000a          do {\u000a            if (pbVar13 < local_35) {\u000a              *pbVar13 = bVar5;\u000a              pbVar13 = pbVar13 + 1;\u000a            }\u000a            pcVar10 = pc->input;\u000a            pc->input = pcVar10 + 1;\u000a            bVar5 = pcVar10[1];\u000a            _Var4 = c_isalpha();\u000a          } while ((_Var4 != false) || (bVar5 == 0x2e));\u000a          *pbVar13 = 0;\u000a          ptVar8 = lookup_word(pc,(char *)local_48);\u000a          if (ptVar8 == (table *)0x0) {\u000a            return 0x3f;\u000a          }\u000a          *(long *)*lvalp = (long)ptVar8->value;\u000a          return ptVar8->type;\u000a        }\u000a        if (bVar5 != 0x28) {\u000a          pc->input = pc->input + 1;\u000a          bVar5 = to_uchar();\u000a          return (uint)bVar5;\u000a        }\u000a        lVar7 = 0;\u000a        do {\u000a          pcVar10 = pc->input;\u000a          pc->input = pcVar10 + 1;\u000a          cVar1 = *pcVar10;\u000a          if (cVar1 == '(') {\u000a            lVar7 = lVar7 + 1;\u000a          }\u000a          else {\u000a            if (cVar1 == ')') {\u000a              lVar7 = lVar7 + -1;\u000a            }\u000a            else {\u000a              if (cVar1 == 0) {\u000a                return 0;\u000a              }\u000a            }\u000a          }\u000a        } while (lVar7 != 0);\u000a        goto LAB_004052e0;\u000a      }\u000a    }\u000a    do {\u000a      pcVar10 = pc->input;\u000a      pc->input = pcVar10 + 1;\u000a      bVar15 = pcVar10[1];\u000a      _Var4 = c_isspace();\u000a    } while (_Var4 != false);\u000a    iVar9 = 1;\u000a    if (bVar5 == 0x2d) {\u000a      iVar9 = -1;\u000a    }\u000a  } while (9 < (uint)bVar15 - 0x30);\u000a  pcVar10 = pc->input;\u000a  uVar14 = 0;\u000a  while (uVar12 = (uVar14 - 0x30) + (ulong)bVar15, uVar14 <= uVar12) {\u000a    bVar15 = pcVar10[1];\u000a    pcVar10 = pcVar10 + 1;\u000a    bVar2 = (uint)bVar15 - 0x30 < 10;\u000a    bVar3 = bVar2 && 0x1999999999999999 < uVar12;\u000a    if (bVar2 && 0x1999999999999999 < uVar12) goto LAB_004053f5;\u000a    uVar14 = uVar12 * 10;\u000a  }\u000a  bVar3 = true;\u000a  uVar12 = uVar14;\u000aLAB_004053f5:\u000a  if (bVar3 != true) {\u000a    return 0x3f;\u000a  }\u000a  if (((bVar15 | 2) != 0x2e) || (9 < (int)pcVar10[1] - 0x30U)) {\u000a    (*lvalp)[0] = (byte)((uint)iVar9 >> 0x1f);\u000a    if (iVar9 < 0) {\u000a      *(ulong *)(*lvalp + 8) = -uVar12;\u000a      if (-uVar12 != 0 && (long)uVar12 < 1) {\u000a        return 0x3f;\u000a      }\u000a    }\u000a    else {\u000a      *(ulong *)(*lvalp + 8) = uVar12;\u000a      if ((long)uVar12 < 0) {\u000a        return 0x3f;\u000a      }\u000a    }\u000a    *(char **)(*lvalp + 0x10) = pcVar10 + -(long)pc->input;\u000a    pc->input = pcVar10;\u000a    return (uint)(iVar9 == 0) | 0x112;\u000a  }\u000a  if (iVar9 < 0) {\u000a    uVar14 = -uVar12;\u000a    if (uVar14 != 0 && (long)uVar12 < 1) {\u000a      return 0x3f;\u000a    }\u000a  }\u000a  else {\u000a    uVar14 = uVar12;\u000a    if ((long)uVar12 < 0) {\u000a      return 0x3f;\u000a    }\u000a  }\u000a  pcVar11 = pcVar10 + 2;\u000a  iVar17 = (int)pcVar10[1] + -0x30;\u000a  iVar6 = 8;\u000a  do {\u000a    uVar16 = (int)*pcVar11 - 0x30;\u000a    pcVar10 = pcVar11 + 1;\u000a    if (9 < uVar16) {\u000a      uVar16 = 0;\u000a      pcVar10 = pcVar11;\u000a    }\u000a    pcVar11 = pcVar10;\u000a    iVar17 = uVar16 + iVar17 * 10;\u000a    iVar6 = iVar6 + -1;\u000a  } while (iVar6 != 0);\u000a  if (iVar9 < 0) {\u000a    cVar1 = *pcVar11;\u000a    while ((int)cVar1 - 0x30U < 10) {\u000a      if (cVar1 != '0') {\u000a        iVar17 = iVar17 + 1;\u000a        break;\u000a      }\u000a      cVar1 = pcVar11[1];\u000a      pcVar11 = pcVar11 + 1;\u000a    }\u000a  }\u000a  pcVar11 = pcVar11 + -1;\u000a  do {\u000a    pcVar10 = pcVar11 + 1;\u000a    pcVar11 = pcVar11 + 1;\u000a  } while ((int)*pcVar10 - 0x30U < 10);\u000a  if ((iVar9 < 0) && (iVar17 != 0)) {\u000a    if (0 < (long)uVar14) {\u000a      return 0x3f;\u000a    }\u000a    uVar14 = uVar14 - 1;\u000a    iVar17 = 1000000000 - iVar17;\u000a  }\u000a  *(ulong *)*lvalp = uVar14;\u000a  *(long *)(*lvalp + 8) = (long)iVar17;\u000a  pc->input = pcVar11;\u000a  return (uint)(iVar9 == 0) | 0x114;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R15,RSI\nMOV R14,RDI\nMOV R13D,0xffffffff\nJMP 0x004052e0\nMOV EDI,EBX\nCALL 0x00409740\nTEST AL,AL\nJNZ 0x00405443\nCMP R12B,0x28\nJNZ 0x004054dc\nXOR EAX,EAX\nNOP word ptr [RAX + RAX*0x1]\nMOV RCX,qword ptr [R15]\nLEA RDX,[RCX + 0x1]\nMOV qword ptr [R15],RDX\nMOVZX ECX,byte ptr [RCX]\nCMP CL,0x28\nJZ 0x004052c0\nCMP CL,0x29\nJZ 0x004052d0\nTEST CL,CL\nJNZ 0x004052d3\nJMP 0x00405378\nINC RAX\nJMP 0x004052d3\nDEC RAX\nTEST RAX,RAX\nJNZ 0x004052a0\nNOP dword ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [R15]\nMOV R12B,byte ptr [RAX]\nJMP 0x004052ff\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOVZX R12D,byte ptr [RAX + 0x1]\nMOVZX EBX,R12B\nMOV EDI,EBX\nCALL 0x004097f0\nTEST AL,AL\nJNZ 0x004052f0\nLEA EAX,[RBX + -0x30]\nCMP EAX,0xa\nJNC 0x00405330\nCMP R12B,0x2d\nJZ 0x00405340\nCMP R12B,0x2b\nJZ 0x00405340\nJMP 0x0040537f\nCMP R12B,0x2b\nJZ 0x00405340\nCMP R12B,0x2d\nJNZ 0x0040527c\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOV BPL,byte ptr [RAX + 0x1]\nMOVZX EBX,BPL\nMOV EDI,EBX\nCALL 0x004097f0\nTEST AL,AL\nJNZ 0x00405340\nCMP R12B,0x2d\nMOV ECX,0x1\nCMOVZ ECX,R13D\nADD EBX,-0x30\nCMP EBX,0x9\nJA 0x004052e0\nJMP 0x00405384\nXOR EAX,EAX\nJMP 0x004055b6\nXOR ECX,ECX\nMOV BPL,R12B\nMOV RDX,qword ptr [R15]\nXOR ESI,ESI\nMOV RAX,0x1999999999999999\nJMP 0x004053a7\nADD RBX,RBX\nLEA RSI,[RBX + RBX*0x4]\nMOVZX EDI,BPL\nLEA RBX,[RSI + RDI*0x1 + -0x30]\nMOV EDI,0x1\nCMP RBX,RSI\nJNC 0x004053d0\nMOV RBX,RSI\nAND DIL,0xf\nJZ 0x004053a0\nJMP 0x004053f5\nMOVZX EBP,byte ptr [RDX + 0x1]\nINC RDX\nMOV ESI,EBP\nADD ESI,-0x30\nMOV EDI,0x8\nCMP ESI,0x9\nJA 0x004053ef\nXOR EDI,EDI\nCMP RBX,RAX\nSETA DIL\nAND DIL,0xf\nJZ 0x004053a0\nCMP DIL,0x8\nJNZ 0x0040549f\nOR BPL,0x2\nCMP BPL,0x2e\nJNZ 0x00405428\nMOVSX EAX,byte ptr [RDX + 0x1]\nADD EAX,-0x30\nCMP EAX,0x9\nJA 0x00405428\nTEST ECX,ECX\nJS 0x004054f6\nTEST RBX,RBX\nJNS 0x00405507\nJMP 0x0040549f\nMOV EAX,ECX\nSHR EAX,0x1f\nMOV byte ptr [R14],AL\nTEST ECX,ECX\nJS 0x004054a9\nMOV qword ptr [R14 + 0x8],RBX\nTEST RBX,RBX\nJNS 0x004054be\nJMP 0x0040549f\nMOV RBX,RSP\nLEA RBP,[RSP + 0x13]\nNOP dword ptr [RAX + RAX*0x1]\nCMP RBX,RBP\nJNC 0x0040545b\nMOV byte ptr [RBX],R12B\nINC RBX\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOVZX R12D,byte ptr [RAX + 0x1]\nMOVZX EDI,R12B\nCALL 0x00409740\nTEST AL,AL\nJNZ 0x00405450\nCMP R12B,0x2e\nJZ 0x00405450\nMOV byte ptr [RBX],0x0\nMOV RSI,RSP\nMOV RDI,R15\nCALL 0x004062a0\nTEST RAX,RAX\nJZ 0x0040549f\nMOVSXD RCX,dword ptr [RAX + 0xc]\nMOV qword ptr [R14],RCX\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x004055b6\nMOV EAX,0x3f\nJMP 0x004055b6\nNEG RBX\nMOV qword ptr [R14 + 0x8],RBX\nMOV EAX,0x3f\nTEST RBX,RBX\nJG 0x004055b6\nMOV RAX,RDX\nSUB RAX,qword ptr [R15]\nMOV qword ptr [R14 + 0x10],RAX\nMOV qword ptr [R15],RDX\nXOR EAX,EAX\nTEST ECX,ECX\nSETZ AL\nOR EAX,0x112\nJMP 0x004055b6\nMOV RAX,qword ptr [R15]\nLEA RCX,[RAX + 0x1]\nMOV qword ptr [R15],RCX\nMOVSX EDI,byte ptr [RAX]\nCALL 0x004064d0\nMOVZX EAX,AL\nJMP 0x004055b6\nNEG RBX\nMOV EAX,0x3f\nTEST RBX,RBX\nJG 0x004055b6\nMOVSX EDI,byte ptr [RDX + 0x1]\nADD RDX,0x2\nADD EDI,-0x30\nMOV EAX,0x8\nXOR R8D,R8D\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,RDX\nLEA EDI,[RDI + RDI*0x4]\nMOVSX EBP,byte ptr [RSI]\nADD EBP,-0x30\nLEA RDX,[RSI + 0x1]\nCMP EBP,0xa\nCMOVNC RDX,RSI\nCMOVNC EBP,R8D\nLEA EDI,[RBP + RDI*0x2]\nDEC EAX\nJNZ 0x00405520\nTEST ECX,ECX\nJNS 0x0040556b\nMOVSX EAX,byte ptr [RDX]\nLEA ESI,[RAX + -0x30]\nCMP ESI,0x9\nJA 0x0040556b\nCMP AL,0x30\nJNZ 0x00405569\nMOVSX EAX,byte ptr [RDX + 0x1]\nINC RDX\nMOV ESI,EAX\nADD ESI,-0x30\nCMP ESI,0xa\nJC 0x00405552\nJMP 0x0040556b\nINC EDI\nDEC RDX\nNOP\nMOVSX EAX,byte ptr [RDX + 0x1]\nINC RDX\nADD EAX,-0x30\nCMP EAX,0xa\nJC 0x00405570\nTEST ECX,ECX\nJNS 0x0040559d\nTEST EDI,EDI\nJZ 0x0040559d\nMOV EAX,0x3f\nTEST RBX,RBX\nJG 0x004055b6\nDEC RBX\nMOV EAX,0x3b9aca00\nSUB EAX,EDI\nMOV EDI,EAX\nMOV qword ptr [R14],RBX\nMOVSXD RAX,EDI\nMOV qword ptr [R14 + 0x8],RAX\nMOV qword ptr [R15],RDX\nXOR EAX,EAX\nTEST ECX,ECX\nSETZ AL\nOR EAX,0x114\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p151
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 f7\n49 89 fe\n41 bd ff ff ff ff\neb 64\n89 df\ne8 bd 44 00 00\n84 c0\n0f 85 b8 01 00 00\n41 80 fc 28\n0f 85 47 02 00 00\n31 c0\n66 0f 1f 84 00 00 00 00 00\n49 8b 0f\n48 8d 51 01\n49 89 17\n0f b6 09\n80 f9 28\n74 0e\n80 f9 29\n74 19\n84 c9\n75 18\ne9 b8 00 00 00\n48 ff c0\neb 0e\n48 ff c8\n48 85 c0\n75 c8\n0f 1f 84 00 00 00 00 00\n49 8b 07\n44 8a 20\neb 17\n49 8b 07\n48 8d 48 01\n49 89 0f\n44 0f b6 60 01\n41 0f b6 dc\n89 df\ne8 e6 44 00 00\n84 c0\n75 e2\n8d 43 d0\n83 f8 0a\n73 1a\n41 80 fc 2d\n74 24\n41 80 fc 2b\n74 1e\neb 5b\n41 80 fc 2b\n74 0a\n41 80 fc 2d\n0f 85 3c ff ff ff\n49 8b 07\n48 8d 48 01\n49 89 0f\n40 8a 68 01\n40 0f b6 dd\n89 df\ne8 97 44 00 00\n84 c0\n75 e3\n41 80 fc 2d\nb9 01 00 00 00\n41 0f 44 cd\n83 c3 d0\n83 fb 09\n0f 87 6a ff ff ff\neb 0c\n31 c0\ne9 37 02 00 00\n31 c9\n44 88 e5\n49 8b 17\n31 f6\n48 b8 99 99 99 99 99 99 99 19\neb 12\n48 01 db\n48 8d 34 9b\n40 0f b6 fd\n48 8d 5c 3e d0\nbf 01 00 00 00\n48 39 f3\n73 16\n48 89 f3\n40 80 e7 0f\n74 dd\neb 30\n0f b6 6a 01\n48 ff c2\n89 ee\n83 c6 d0\nbf 08 00 00 00\n83 fe 09\n77 09\n31 ff\n48 39 c3\n40 0f 97 c7\n40 80 e7 0f\n74 ab\n40 80 ff 08\n0f 85 a0 00 00 00\n40 80 cd 02\n40 80 fd 2e\n75 1f\n0f be 42 01\n83 c0 d0\n83 f8 09\n77 13\n85 c9\n0f 88 d9 00 00 00\n48 85 db\n0f 89 e1 00 00 00\neb 77\n89 c8\nc1 e8 1f\n41 88 06\n85 c9\n78 75\n49 89 5e 08\n48 85 db\n0f 89 7d 00 00 00\neb 5c\n48 89 e3\n48 8d 6c 24 13\n0f 1f 44 00 00\n48 39 eb\n73 06\n44 88 23\n48 ff c3\n49 8b 07\n48 8d 48 01\n49 89 0f\n44 0f b6 60 01\n41 0f b6 fc\ne8 cd 42 00 00\n84 c0\n75 d9\n41 80 fc 2e\n74 d3\nc6 03 00\n48 89 e6\n4c 89 ff\ne8 15 0e 00 00\n48 85 c0\n74 0f\n48 63 48 0c\n49 89 0e\n8b 40 08\ne9 17 01 00 00\nb8 3f 00 00 00\ne9 0d 01 00 00\n48 f7 db\n49 89 5e 08\nb8 3f 00 00 00\n48 85 db\n0f 8f f8 00 00 00\n48 89 d0\n49 2b 07\n49 89 46 10\n49 89 17\n31 c0\n85 c9\n0f 94 c0\n0d 12 01 00 00\ne9 da 00 00 00\n49 8b 07\n48 8d 48 01\n49 89 0f\n0f be 38\ne8 e2 0f 00 00\n0f b6 c0\ne9 c0 00 00 00\n48 f7 db\nb8 3f 00 00 00\n48 85 db\n0f 8f af 00 00 00\n0f be 7a 01\n48 83 c2 02\n83 c7 d0\nb8 08 00 00 00\n45 31 c0\n66 0f 1f 44 00 00\n48 89 d6\n8d 3c bf\n0f be 2e\n83 c5 d0\n48 8d 56 01\n83 fd 0a\n48 0f 43 d6\n41 0f 43 e8\n8d 7c 7d 00\nff c8\n75 dd\n85 c9\n79 24\n0f be 02\n8d 70 d0\n83 fe 09\n77 19\n3c 30\n75 13\n0f be 42 01\n48 ff c2\n89 c6\n83 c6 d0\n83 fe 0a\n72 eb\neb 02\nff c7\n48 ff ca\n66 90\n0f be 42 01\n48 ff c2\n83 c0 d0\n83 f8 0a\n72 f1\n85 c9\n79 1a\n85 ff\n74 16\nb8 3f 00 00 00\n48 85 db\n7f 25\n48 ff cb\nb8 00 ca 9a 3b\n29 f8\n89 c7\n49 89 1e\n48 63 c7\n49 89 46 08\n49 89 17\n31 c0\n85 c9\n0f 94 c0\n0d 14 01 00 00\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p152
S'.text:0000000000405260\n.text:0000000000405261\n.text:0000000000405263\n.text:0000000000405265\n.text:0000000000405267\n.text:0000000000405269\n.text:000000000040526a\n.text:000000000040526e\n.text:0000000000405271\n.text:0000000000405274\n.text:000000000040527a\n.text:000000000040527c\n.text:000000000040527e\n.text:0000000000405283\n.text:0000000000405285\n.text:000000000040528b\n.text:000000000040528f\n.text:0000000000405295\n.text:0000000000405297\n.text:00000000004052a0\n.text:00000000004052a3\n.text:00000000004052a7\n.text:00000000004052aa\n.text:00000000004052ad\n.text:00000000004052b0\n.text:00000000004052b2\n.text:00000000004052b5\n.text:00000000004052b7\n.text:00000000004052b9\n.text:00000000004052bb\n.text:00000000004052c0\n.text:00000000004052c3\n.text:00000000004052d0\n.text:00000000004052d3\n.text:00000000004052d6\n.text:00000000004052d8\n.text:00000000004052e0\n.text:00000000004052e3\n.text:00000000004052e6\n.text:00000000004052f0\n.text:00000000004052f3\n.text:00000000004052f7\n.text:00000000004052fa\n.text:00000000004052ff\n.text:0000000000405303\n.text:0000000000405305\n.text:000000000040530a\n.text:000000000040530c\n.text:000000000040530e\n.text:0000000000405311\n.text:0000000000405314\n.text:0000000000405316\n.text:000000000040531a\n.text:000000000040531c\n.text:0000000000405320\n.text:0000000000405322\n.text:0000000000405330\n.text:0000000000405334\n.text:0000000000405336\n.text:000000000040533a\n.text:0000000000405340\n.text:0000000000405343\n.text:0000000000405347\n.text:000000000040534a\n.text:000000000040534e\n.text:0000000000405352\n.text:0000000000405354\n.text:0000000000405359\n.text:000000000040535b\n.text:000000000040535d\n.text:0000000000405361\n.text:0000000000405366\n.text:000000000040536a\n.text:000000000040536d\n.text:0000000000405370\n.text:0000000000405376\n.text:0000000000405378\n.text:000000000040537a\n.text:000000000040537f\n.text:0000000000405381\n.text:0000000000405384\n.text:0000000000405387\n.text:0000000000405389\n.text:0000000000405393\n.text:00000000004053a0\n.text:00000000004053a3\n.text:00000000004053a7\n.text:00000000004053ab\n.text:00000000004053b0\n.text:00000000004053b5\n.text:00000000004053b8\n.text:00000000004053ba\n.text:00000000004053bd\n.text:00000000004053c1\n.text:00000000004053c3\n.text:00000000004053d0\n.text:00000000004053d4\n.text:00000000004053d7\n.text:00000000004053d9\n.text:00000000004053dc\n.text:00000000004053e1\n.text:00000000004053e4\n.text:00000000004053e6\n.text:00000000004053e8\n.text:00000000004053eb\n.text:00000000004053ef\n.text:00000000004053f3\n.text:00000000004053f5\n.text:00000000004053f9\n.text:00000000004053ff\n.text:0000000000405403\n.text:0000000000405407\n.text:0000000000405409\n.text:000000000040540d\n.text:0000000000405410\n.text:0000000000405413\n.text:0000000000405415\n.text:0000000000405417\n.text:000000000040541d\n.text:0000000000405420\n.text:0000000000405426\n.text:0000000000405428\n.text:000000000040542a\n.text:000000000040542d\n.text:0000000000405430\n.text:0000000000405432\n.text:0000000000405434\n.text:0000000000405438\n.text:000000000040543b\n.text:0000000000405441\n.text:0000000000405443\n.text:0000000000405446\n.text:000000000040544b\n.text:0000000000405450\n.text:0000000000405453\n.text:0000000000405455\n.text:0000000000405458\n.text:000000000040545b\n.text:000000000040545e\n.text:0000000000405462\n.text:0000000000405465\n.text:000000000040546a\n.text:000000000040546e\n.text:0000000000405473\n.text:0000000000405475\n.text:0000000000405477\n.text:000000000040547b\n.text:000000000040547d\n.text:0000000000405480\n.text:0000000000405483\n.text:0000000000405486\n.text:000000000040548b\n.text:000000000040548e\n.text:0000000000405490\n.text:0000000000405494\n.text:0000000000405497\n.text:000000000040549a\n.text:000000000040549f\n.text:00000000004054a4\n.text:00000000004054a9\n.text:00000000004054ac\n.text:00000000004054b0\n.text:00000000004054b5\n.text:00000000004054b8\n.text:00000000004054be\n.text:00000000004054c1\n.text:00000000004054c4\n.text:00000000004054c8\n.text:00000000004054cb\n.text:00000000004054cd\n.text:00000000004054cf\n.text:00000000004054d2\n.text:00000000004054d7\n.text:00000000004054dc\n.text:00000000004054df\n.text:00000000004054e3\n.text:00000000004054e6\n.text:00000000004054e9\n.text:00000000004054ee\n.text:00000000004054f1\n.text:00000000004054f6\n.text:00000000004054f9\n.text:00000000004054fe\n.text:0000000000405501\n.text:0000000000405507\n.text:000000000040550b\n.text:000000000040550f\n.text:0000000000405512\n.text:0000000000405517\n.text:000000000040551a\n.text:0000000000405520\n.text:0000000000405523\n.text:0000000000405526\n.text:0000000000405529\n.text:000000000040552c\n.text:0000000000405530\n.text:0000000000405533\n.text:0000000000405537\n.text:000000000040553b\n.text:000000000040553f\n.text:0000000000405541\n.text:0000000000405543\n.text:0000000000405545\n.text:0000000000405547\n.text:000000000040554a\n.text:000000000040554d\n.text:0000000000405550\n.text:0000000000405552\n.text:0000000000405554\n.text:0000000000405556\n.text:000000000040555a\n.text:000000000040555d\n.text:000000000040555f\n.text:0000000000405562\n.text:0000000000405565\n.text:0000000000405567\n.text:0000000000405569\n.text:000000000040556b\n.text:000000000040556e\n.text:0000000000405570\n.text:0000000000405574\n.text:0000000000405577\n.text:000000000040557a\n.text:000000000040557d\n.text:000000000040557f\n.text:0000000000405581\n.text:0000000000405583\n.text:0000000000405585\n.text:0000000000405587\n.text:000000000040558c\n.text:000000000040558f\n.text:0000000000405591\n.text:0000000000405594\n.text:0000000000405599\n.text:000000000040559b\n.text:000000000040559d\n.text:00000000004055a0\n.text:00000000004055a3\n.text:00000000004055a7\n.text:00000000004055aa\n.text:00000000004055ac\n.text:00000000004055ae\n.text:00000000004055b1\n.text:00000000004055b6\n.text:00000000004055ba\n.text:00000000004055bb\n.text:00000000004055bd\n.text:00000000004055bf\n.text:00000000004055c1\n.text:00000000004055c3\n.text:00000000004055c4\n'
p153
tp154
sS'extend_abbrs'
p155
(S'\n__stdcall extend_abbrs(char * abbrs, char * abbr, size_t abbr_size)\n'
p156
V\u000avoid extend_abbrs(char *abbrs,char *abbr,size_t abbr_size)\u000a\u000a{\u000a  memcpy(abbrs,abbr,abbr_size);\u000a  abbrs[abbr_size] = 0;\u000a  return;\u000a}\u000a\u000a
p157
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nCALL 0x00401970\nMOV byte ptr [RBX + R14*0x1],0x0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p158
S'41 56\n53\n50\n49 89 d6\n48 89 fb\ne8 91 86 ff ff\n42 c6 04 33 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p159
S'.text:00000000004092d0\n.text:00000000004092d2\n.text:00000000004092d3\n.text:00000000004092d4\n.text:00000000004092d7\n.text:00000000004092da\n.text:00000000004092df\n.text:00000000004092e4\n.text:00000000004092e8\n.text:00000000004092e9\n.text:00000000004092eb\n'
p160
tp161
sS'gettimeofday'
p162
(S'\n__stdcall gettimeofday(timeval * __tv, __timezone_ptr_t __tz)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_gettimeofday_006100e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x006100e8]\n'
p165
S'ff 25 32 e8 20 00\n'
p166
S'.plt:00000000004018b0\n'
p167
tp168
sS'quotearg_n_style_colon'
p169
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p170
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p171
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00407ae0\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x004069c0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x004078b0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p172
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p173
S'.text:0000000000407c60\n.text:0000000000407c61\n.text:0000000000407c63\n.text:0000000000407c64\n.text:0000000000407c68\n.text:0000000000407c6b\n.text:0000000000407c6d\n.text:0000000000407c72\n.text:0000000000407c75\n.text:0000000000407c7a\n.text:0000000000407c7f\n.text:0000000000407c84\n.text:0000000000407c87\n.text:0000000000407c8c\n.text:0000000000407c93\n.text:0000000000407c95\n.text:0000000000407c98\n.text:0000000000407c9b\n.text:0000000000407ca0\n.text:0000000000407ca4\n.text:0000000000407ca5\n.text:0000000000407ca7\n.text:0000000000407ca8\n'
p174
tp175
sS'get_stat_birthtime_ns'
p176
(S'\n__stdcall get_stat_birthtime_ns(stat * st)\n'
p177
V\u000along get_stat_birthtime_ns(stat *st)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p178
S'XOR EAX,EAX\nRET\n'
p179
S'31 c0\nc3\n'
p180
S'.text:0000000000408250\n.text:0000000000408252\n'
p181
tp182
sS'time_zone_hhmm'
p183
(S'\n__stdcall time_zone_hhmm(parser_control * pc, textint s, long mm)\n'
p184
V\u000along time_zone_hhmm(parser_control *pc,textint s,long mm)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  \u000a  if ((mm < 0) && (s.digits < 3)) {\u000a    s.value = s.value * 100;\u000a  }\u000a  if (mm < 0) {\u000a    lVar3 = s.value + (s.value / 100 + (s.value >> 0x3f) +\u000a                      SUB168(SEXT816(s.value) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * -0x28;\u000a  }\u000a  else {\u000a    lVar3 = -mm;\u000a    if (s.negative == false) {\u000a      lVar3 = mm;\u000a    }\u000a    lVar3 = lVar3 + s.value * 0x3c;\u000a  }\u000a  iVar2 = (int)lVar3;\u000a  iVar1 = -iVar2;\u000a  if (0 < iVar2) {\u000a    iVar1 = iVar2;\u000a  }\u000a  if (0x5a0 < iVar1) {\u000a    pc->zones_seen = pc->zones_seen + 1;\u000a  }\u000a  return lVar3;\u000a}\u000a\u000a
p185
S'LEA RAX,[RSP + 0x8]\nTEST RSI,RSI\nJNS 0x0040560b\nCMP qword ptr [RSP + 0x18],0x2\nJA 0x0040560b\nIMUL RCX,qword ptr [RAX + 0x8],0x64\nMOV qword ptr [RAX + 0x8],RCX\nMOV RCX,qword ptr [RAX + 0x8]\nTEST RSI,RSI\nJS 0x0040562a\nIMUL RDX,RCX,0x3c\nMOV RCX,RSI\nNEG RCX\nCMP byte ptr [RAX],0x0\nCMOVZ RCX,RSI\nADD RCX,RDX\nJMP 0x00405659\nMOV RDX,-0x5c28f5c28f5c28f5\nMOV RAX,RCX\nIMUL RDX\nADD RDX,RCX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RAX,RDX,0x3c\nIMUL RDX,RDX,0x64\nSUB RCX,RDX\nADD RCX,RAX\nMOV EAX,ECX\nNEG EAX\nCMOVL EAX,ECX\nCMP EAX,0x5a1\nJL 0x0040566e\nINC qword ptr [0xd8 + RDI]\nMOV RAX,RCX\nRET\n'
p186
S'48 8d 44 24 08\n48 85 f6\n79 11\n48 83 7c 24 18 02\n77 09\n48 6b 48 08 64\n48 89 48 08\n48 8b 48 08\n48 85 f6\n78 16\n48 6b d1 3c\n48 89 f1\n48 f7 d9\n80 38 00\n48 0f 44 ce\n48 01 d1\neb 2f\n48 ba 0b d7 a3 70 3d 0a d7 a3\n48 89 c8\n48 f7 ea\n48 01 ca\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b c2 3c\n48 6b d2 64\n48 29 d1\n48 01 c1\n89 c8\nf7 d8\n0f 4c c1\n3d a1 05 00 00\n7c 07\n48 ff 87 d8 00 00 00\n48 89 c8\nc3\n'
p187
S'.text:00000000004055f0\n.text:00000000004055f5\n.text:00000000004055f8\n.text:00000000004055fa\n.text:0000000000405600\n.text:0000000000405602\n.text:0000000000405607\n.text:000000000040560b\n.text:000000000040560f\n.text:0000000000405612\n.text:0000000000405614\n.text:0000000000405618\n.text:000000000040561b\n.text:000000000040561e\n.text:0000000000405621\n.text:0000000000405625\n.text:0000000000405628\n.text:000000000040562a\n.text:0000000000405634\n.text:0000000000405637\n.text:000000000040563a\n.text:000000000040563d\n.text:0000000000405640\n.text:0000000000405644\n.text:0000000000405648\n.text:000000000040564b\n.text:000000000040564f\n.text:0000000000405653\n.text:0000000000405656\n.text:0000000000405659\n.text:000000000040565b\n.text:000000000040565d\n.text:0000000000405660\n.text:0000000000405665\n.text:0000000000405667\n.text:000000000040566e\n.text:0000000000405671\n'
p188
tp189
sS'posixtime'
p190
(S'\n__stdcall posixtime(time_t * p, char * s)\n'
p191
V\u000a_Bool posixtime(time_t *p,char *s)\u000a\u000a{\u000a  _Bool _Var1;\u000a  undefined *puVar2;\u000a  tm *tp;\u000a  tm tm0;\u000a  time_t dummy;\u000a  tm tm1;\u000a  char buf [16];\u000a  time_t local_c0;\u000a  uint local_b8;\u000a  uint local_b4;\u000a  uint local_b0;\u000a  uint local_ac;\u000a  uint local_a8;\u000a  uint local_a4;\u000a  int iStack160;\u000a  int iStack156;\u000a  undefined4 uStack148;\u000a  undefined4 uStack144;\u000a  undefined4 uStack140;\u000a  char *local_88;\u000a  time_t local_80;\u000a  uint local_78;\u000a  uint local_74;\u000a  uint local_70;\u000a  uint local_6c;\u000a  uint local_68;\u000a  uint local_64;\u000a  int iStack96;\u000a  int iStack92;\u000a  int local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  char *local_48;\u000a  char local_38 [24];\u000a  \u000a  _Var1 = posix_time_parse((tm *)&local_b8,s);\u000a  if (_Var1 != false) {\u000a    local_48 = local_88;\u000a    uStack84 = uStack148;\u000a    uStack80 = uStack144;\u000a    uStack76 = uStack140;\u000a    local_68 = local_a8;\u000a    local_64 = local_a4;\u000a    iStack96 = iStack160;\u000a    iStack92 = iStack156;\u000a    local_78 = local_b8;\u000a    local_74 = local_b4;\u000a    local_70 = local_b0;\u000a    local_6c = local_ac;\u000a    local_58 = -1;\u000a    tp = (tm *)&local_78;\u000a    local_c0 = rpl_mktime(tp);\u000a    if ((local_c0 != -1) || (tp = (tm *)localtime(&local_c0), tp != (tm *)0x0)) {\u000a      if ((tp->tm_sec ^ local_b8 |\u000a          tp->tm_min ^ local_b4 |\u000a          tp->tm_hour ^ local_b0 | tp->tm_mday ^ local_ac |\u000a          tp->tm_mon ^ local_a8 | tp->tm_year ^ local_a4) == 0) {\u000aLAB_00406687:\u000a        *p = local_c0;\u000a        return true;\u000a      }\u000a      if (local_b8 == 0x3c) {\u000a        puVar2 = (undefined *)__stpcpy_chk(local_38,s,0x10);\u000a        *puVar2 = 0;\u000a        *(undefined2 *)(puVar2 + -2) = 0x3935;\u000a        _Var1 = posixtime(&local_80,local_38);\u000a        if (_Var1 != false) goto LAB_00406687;\u000a      }\u000a    }\u000a  }\u000a  return false;\u000a}\u000a\u000a
p192
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xa8\nMOV R15D,EDX\nMOV RBX,RSI\nMOV R14,RDI\nLEA RDI,[RSP + 0x10]\nCALL 0x004066b0\nTEST AL,AL\nJZ 0x00406693\nMOV RAX,qword ptr [RSP + 0x40]\nMOV qword ptr [0x80 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x10]\nMOVUPS XMM1,xmmword ptr [RSP + 0x20]\nMOVUPS XMM2,xmmword ptr [RSP + 0x30]\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOV dword ptr [RSP + 0x70],0xffffffff\nLEA RBP,[RSP + 0x50]\nMOV RDI,RBP\nCALL 0x00409210\nMOV qword ptr [RSP + 0x8],RAX\nCMP RAX,-0x1\nJNZ 0x00406615\nLEA RDI,[RSP + 0x8]\nCALL 0x00401740\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00406693\nMOV EAX,dword ptr [RBP + 0x14]\nXOR EAX,dword ptr [RSP + 0x24]\nMOV ECX,dword ptr [RBP + 0x10]\nXOR ECX,dword ptr [RSP + 0x20]\nOR ECX,EAX\nMOV EAX,dword ptr [RBP + 0xc]\nXOR EAX,dword ptr [RSP + 0x1c]\nMOV EDX,dword ptr [RBP + 0x4]\nMOV ESI,dword ptr [RBP + 0x8]\nXOR ESI,dword ptr [RSP + 0x18]\nOR ESI,EAX\nOR ESI,ECX\nXOR EDX,dword ptr [RSP + 0x14]\nOR EDX,ESI\nMOV EAX,dword ptr [RSP + 0x10]\nMOV ECX,dword ptr [RBP]\nXOR ECX,EAX\nOR ECX,EDX\nJZ 0x00406687\nCMP EAX,0x3c\nJNZ 0x00406693\nLEA RBP,[0x90 + RSP]\nMOV EDX,0x10\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x004019b0\nMOV byte ptr [RAX],0x0\nMOV word ptr [RAX + -0x2],0x3935\nLEA RDI,[RSP + 0x48]\nMOV RSI,RBP\nMOV EDX,R15D\nCALL 0x00406590\nTEST AL,AL\nJZ 0x00406693\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [R14],RAX\nMOV AL,0x1\nJMP 0x00406695\nXOR EAX,EAX\nADD RSP,0xa8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p193
S'55\n41 57\n41 56\n53\n48 81 ec a8 00 00 00\n41 89 d7\n48 89 f3\n49 89 fe\n48 8d 7c 24 10\ne8 00 01 00 00\n84 c0\n0f 84 db 00 00 00\n48 8b 44 24 40\n48 89 84 24 80 00 00 00\n0f 10 44 24 10\n0f 10 4c 24 20\n0f 10 54 24 30\n0f 29 54 24 70\n0f 29 4c 24 60\n0f 29 44 24 50\nc7 44 24 70 ff ff ff ff\n48 8d 6c 24 50\n48 89 ef\ne8 18 2c 00 00\n48 89 44 24 08\n48 83 f8 ff\n75 12\n48 8d 7c 24 08\ne8 33 b1 ff ff\n48 89 c5\n48 85 ed\n74 7e\n8b 45 14\n33 44 24 24\n8b 4d 10\n33 4c 24 20\n09 c1\n8b 45 0c\n33 44 24 1c\n8b 55 04\n8b 75 08\n33 74 24 18\n09 c6\n09 ce\n33 54 24 14\n09 f2\n8b 44 24 10\n8b 4d 00\n31 c1\n09 d1\n74 3a\n83 f8 3c\n75 41\n48 8d ac 24 90 00 00 00\nba 10 00 00 00\n48 89 ef\n48 89 de\ne8 46 b3 ff ff\nc6 00 00\n66 c7 40 fe 35 39\n48 8d 7c 24 48\n48 89 ee\n44 89 fa\ne8 0d ff ff ff\n84 c0\n74 0c\n48 8b 44 24 08\n49 89 06\nb0 01\neb 02\n31 c0\n48 81 c4 a8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p194
S'.text:0000000000406590\n.text:0000000000406591\n.text:0000000000406593\n.text:0000000000406595\n.text:0000000000406596\n.text:000000000040659d\n.text:00000000004065a0\n.text:00000000004065a3\n.text:00000000004065a6\n.text:00000000004065ab\n.text:00000000004065b0\n.text:00000000004065b2\n.text:00000000004065b8\n.text:00000000004065bd\n.text:00000000004065c5\n.text:00000000004065ca\n.text:00000000004065cf\n.text:00000000004065d4\n.text:00000000004065d9\n.text:00000000004065de\n.text:00000000004065e3\n.text:00000000004065eb\n.text:00000000004065f0\n.text:00000000004065f3\n.text:00000000004065f8\n.text:00000000004065fd\n.text:0000000000406601\n.text:0000000000406603\n.text:0000000000406608\n.text:000000000040660d\n.text:0000000000406610\n.text:0000000000406613\n.text:0000000000406615\n.text:0000000000406618\n.text:000000000040661c\n.text:000000000040661f\n.text:0000000000406623\n.text:0000000000406625\n.text:0000000000406628\n.text:000000000040662c\n.text:000000000040662f\n.text:0000000000406632\n.text:0000000000406636\n.text:0000000000406638\n.text:000000000040663a\n.text:000000000040663e\n.text:0000000000406640\n.text:0000000000406644\n.text:0000000000406647\n.text:0000000000406649\n.text:000000000040664b\n.text:000000000040664d\n.text:0000000000406650\n.text:0000000000406652\n.text:000000000040665a\n.text:000000000040665f\n.text:0000000000406662\n.text:0000000000406665\n.text:000000000040666a\n.text:000000000040666d\n.text:0000000000406673\n.text:0000000000406678\n.text:000000000040667b\n.text:000000000040667e\n.text:0000000000406683\n.text:0000000000406685\n.text:0000000000406687\n.text:000000000040668c\n.text:000000000040668f\n.text:0000000000406691\n.text:0000000000406693\n.text:0000000000406695\n.text:000000000040669c\n.text:000000000040669d\n.text:000000000040669f\n.text:00000000004066a1\n.text:00000000004066a2\n'
p195
tp196
sS'localtime_rz'
p197
(S'\n__stdcall localtime_rz(timezone_t tz, time_t * t, tm * tm)\n'
p198
V\u000atm * localtime_rz(timezone_t tz,time_t *t,tm *tm)\u000a\u000a{\u000a  _Bool _Var1;\u000a  tm *ptVar2;\u000a  timezone_t tz_00;\u000a  tm *ptVar3;\u000a  byte bVar4;\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    ptVar2 = (tm *)(*(code *)PTR_gmtime_r_006100d8)(t,tm);\u000a    return ptVar2;\u000a  }\u000a  tz_00 = set_tz(tz);\u000a  if (tz_00 == (timezone_t)0x0) {\u000a    tm = (tm *)0x0;\u000a  }\u000a  else {\u000a    ptVar3 = localtime_r(t,(tm *)tm);\u000a    if (ptVar3 == (tm *)0x0) {\u000a      bVar4 = 1;\u000a    }\u000a    else {\u000a      _Var1 = save_abbr(tz,tm);\u000a      bVar4 = _Var1 ^ 1;\u000a    }\u000a    _Var1 = revert_tz(tz_00);\u000a    if (_Var1 == false) {\u000a      tm = (tm *)0x0;\u000a    }\u000a    if (bVar4 != 0) {\u000a      tm = (tm *)0x0;\u000a    }\u000a  }\u000a  return tm;\u000a}\u000a\u000a
p199
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R12,RSI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00409368\nMOV RDI,RBX\nCALL 0x004093b0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040937e\nMOV RDI,R12\nMOV RSI,R15\nCALL 0x00401780\nTEST RAX,RAX\nJZ 0x00409382\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00409430\nMOV EBX,EAX\nXOR BL,0x1\nJMP 0x00409384\nMOV RDI,R12\nMOV RSI,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401890\nXOR EAX,EAX\nJMP 0x0040939d\nMOV BL,0x1\nMOV RDI,R14\nCALL 0x00409540\nXOR ECX,ECX\nTEST AL,AL\nCMOVZ R15,RCX\nTEST BL,BL\nCMOVNZ R15,RCX\nMOV RAX,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p200
S'41 57\n41 56\n41 54\n53\n50\n49 89 d7\n49 89 f4\n48 89 fb\n48 85 db\n74 32\n48 89 df\ne8 72 00 00 00\n49 89 c6\n4d 85 f6\n74 38\n4c 89 e7\n4c 89 fe\ne8 2f 84 ff ff\n48 85 c0\n74 2c\n48 89 df\n4c 89 fe\ne8 cf 00 00 00\n89 c3\n80 f3 01\neb 1c\n4c 89 e7\n4c 89 fe\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 12 85 ff ff\n31 c0\neb 1b\nb3 01\n4c 89 f7\ne8 b4 01 00 00\n31 c9\n84 c0\n4c 0f 44 f9\n84 db\n4c 0f 45 f9\n4c 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p201
S'.text:0000000000409320\n.text:0000000000409322\n.text:0000000000409324\n.text:0000000000409326\n.text:0000000000409327\n.text:0000000000409328\n.text:000000000040932b\n.text:000000000040932e\n.text:0000000000409331\n.text:0000000000409334\n.text:0000000000409336\n.text:0000000000409339\n.text:000000000040933e\n.text:0000000000409341\n.text:0000000000409344\n.text:0000000000409346\n.text:0000000000409349\n.text:000000000040934c\n.text:0000000000409351\n.text:0000000000409354\n.text:0000000000409356\n.text:0000000000409359\n.text:000000000040935c\n.text:0000000000409361\n.text:0000000000409363\n.text:0000000000409366\n.text:0000000000409368\n.text:000000000040936b\n.text:000000000040936e\n.text:0000000000409372\n.text:0000000000409373\n.text:0000000000409375\n.text:0000000000409377\n.text:0000000000409379\n.text:000000000040937e\n.text:0000000000409380\n.text:0000000000409382\n.text:0000000000409384\n.text:0000000000409387\n.text:000000000040938c\n.text:000000000040938e\n.text:0000000000409390\n.text:0000000000409394\n.text:0000000000409396\n.text:000000000040939a\n.text:000000000040939d\n.text:00000000004093a1\n.text:00000000004093a2\n.text:00000000004093a4\n.text:00000000004093a6\n.text:00000000004093a8\n'
p202
tp203
sS'quote_mem'
p204
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p205
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p206
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00407d70\n'
p207
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p208
S'.text:0000000000407d80\n.text:0000000000407d83\n.text:0000000000407d86\n.text:0000000000407d88\n.text:0000000000407d8b\n.text:0000000000407d8e\n'
p209
tp210
sS'fileno'
p211
(S'\n__stdcall fileno(FILE * __stream)\n'
p212
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_00610160)();\u000a  return iVar1;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x00610160]\n'
p214
S'ff 25 ba e7 20 00\n'
p215
S'.plt:00000000004019a0\n'
p216
tp217
sS'yyparse'
p218
(S'\n__stdcall yyparse(parser_control * pc)\n'
p219
V\u000aint yyparse(parser_control *pc)\u000a\u000a{\u000a  textint *ptVar1;\u000a  char cVar2;\u000a  long lVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  int iVar6;\u000a  ulong uVar7;\u000a  long lVar8;\u000a  long local_568;\u000a  ulong uVar9;\u000a  relative_time *prVar10;\u000a  long lVar11;\u000a  uint uVar12;\u000a  long lVar13;\u000a  long lVar14;\u000a  long lVar15;\u000a  long_time_t lVar16;\u000a  long lVar17;\u000a  relative_time *prVar18;\u000a  YYSTYPE yylval;\u000a  yytype_int16 yyssa [20];\u000a  YYSTYPE yyvsa [20];\u000a  undefined4 local_598;\u000a  undefined4 uVar19;\u000a  undefined4 uVar20;\u000a  undefined4 uVar21;\u000a  undefined4 uVar22;\u000a  undefined4 uVar23;\u000a  undefined4 uVar24;\u000a  undefined4 uVar25;\u000a  undefined4 local_578;\u000a  undefined4 uVar26;\u000a  undefined4 uVar27;\u000a  undefined4 uVar28;\u000a  long local_530;\u000a  undefined4 local_508;\u000a  undefined4 uStack1284;\u000a  undefined4 local_500;\u000a  undefined4 uStack1276;\u000a  undefined4 local_4f8;\u000a  undefined4 uStack1268;\u000a  undefined4 uStack1264;\u000a  undefined4 uStack1260;\u000a  undefined4 local_4e8;\u000a  undefined4 uStack1252;\u000a  undefined4 uStack1248;\u000a  undefined4 uStack1244;\u000a  long local_4d8;\u000a  short local_4c8 [24];\u000a  relative_time local_498 [20];\u000a  \u000a  local_4e8 = 0;\u000a  uStack1252 = 0;\u000a  uStack1248 = 0;\u000a  uStack1244 = 0;\u000a  local_4f8 = 0;\u000a  uStack1268 = 0;\u000a  uStack1264 = 0;\u000a  uStack1260 = 0;\u000a  local_508 = 0;\u000a  uStack1284 = 0;\u000a  local_500 = 0;\u000a  uStack1276 = 0;\u000a  local_4d8 = 0;\u000a  local_4c8[0] = 0;\u000a  ptVar1 = &pc->year;\u000a  uVar4 = 0xfffffffe;\u000a  uVar7 = 0;\u000a  lVar17 = 0;\u000a  prVar18 = local_498;\u000aLAB_00405230:\u000a  iVar6 = (int)uVar7;\u000a  if (iVar6 == 0xc) {\u000a    return 0;\u000a  }\u000a  cVar2 = yypact[(long)iVar6];\u000a  if ((int)cVar2 != -0x5d) {\u000a    if (uVar4 == 0xfffffffe) {\u000a      uVar4 = yylex((YYSTYPE *)&local_508,pc);\u000a    }\u000a    if ((int)uVar4 < 1) {\u000a      uVar5 = 0;\u000a      uVar4 = 0;\u000a    }\u000a    else {\u000a      uVar5 = 2;\u000a      if (uVar4 < 0x116) {\u000a        uVar5 = (uint)""[(long)(int)uVar4];\u000a      }\u000a    }\u000a    uVar12 = (int)cVar2 + uVar5;\u000a    if ((0x70 < uVar12) ||\u000a       (uVar9 = SEXT48((int)uVar12),\u000a       (int)\u000a            "\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx04\u005cf\u005cx0ff\u005cx0f\u005cx10\u005cx13\u005cx0f\u005cx13\u005cx13\u005cx14\u005cx13\u005cx19p\u005cx19\u005cx13\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx13\u005cx13\u005cx13k\u005cx13\u005cx14\u005cx19\u005cx19\u005cx19q\u005cx13\u005cx14\u005cx15\u005cx16\u005cx19\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cv\u005cf\u005cr\u005cx0e\u005cx17\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16`\u005cx18\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn"\u000a            [uVar9] != uVar5)) goto LAB_00404870;\u000a    uVar7 = (ulong)\u000a                   "OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\u005c\u005coZ[jpXo\u005cx05\u005cx06\u005ca\u005cbX\u005cr\u005cx0e\u005cx0f\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16\u005cx01\u005cx17\u005cx18\u005cx19\u005cx1a\u005cx1b\u005cx1c\u005cx1dO\u005cx1e345678\u005cf9=>?@AB<0P/\u005cx06S\u005cbQR\u005cx1aTUVW^_`Yiabc"\u000a                   [uVar9];\u000a    if ((uVar9 | 4) == 0x6f) {\u000a      uVar5 = -(uint)\u000a                     "OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\u005c\u005coZ[jpXo\u005cx05\u005cx06\u005ca\u005cbX\u005cr\u005cx0e\u005cx0f\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16\u005cx01\u005cx17\u005cx18\u005cx19\u005cx1a\u005cx1b\u005cx1c\u005cx1dO\u005cx1e345678\u005cf9=>?@AB<0P/\u005cx06S\u005cbQR\u005cx1aTUVW^_`Yiabc"\u000a                     [uVar9];\u000a      goto LAB_0040487f;\u000a    }\u000a    prVar18[1].ns = local_4d8;\u000a    *(undefined4 *)&prVar18[1].minutes = local_4e8;\u000a    *(undefined4 *)((long)&prVar18[1].minutes + 4) = uStack1252;\u000a    *(undefined4 *)&prVar18[1].seconds = uStack1248;\u000a    *(undefined4 *)((long)&prVar18[1].seconds + 4) = uStack1244;\u000a    *(undefined4 *)&prVar18[1].day = local_4f8;\u000a    *(undefined4 *)((long)&prVar18[1].day + 4) = uStack1268;\u000a    *(undefined4 *)&prVar18[1].hour = uStack1264;\u000a    *(undefined4 *)((long)&prVar18[1].hour + 4) = uStack1260;\u000a    *(undefined4 *)&prVar18[1].year = local_508;\u000a    *(undefined4 *)((long)&prVar18[1].year + 4) = uStack1284;\u000a    *(undefined4 *)&prVar18[1].month = local_500;\u000a    *(undefined4 *)((long)&prVar18[1].month + 4) = uStack1276;\u000a    prVar10 = prVar18 + 1;\u000a    uVar4 = 0xfffffffe;\u000a    goto LAB_004050c7;\u000a  }\u000aLAB_00404870:\u000a  uVar5 = (uint)"\u005cx05"[(long)iVar6];\u000a  if ("\u005cx05"[(long)iVar6] == 0) {\u000a    return 1;\u000a  }\u000aLAB_0040487f:\u000a  uVar7 = (ulong)""[(long)(int)uVar5];\u000a  lVar8 = 1 - uVar7;\u000a  lVar14 = prVar18[lVar8].year;\u000a  lVar13 = prVar18[lVar8].month;\u000a  lVar11 = prVar18[lVar8].day;\u000a  local_530 = prVar18[lVar8].hour;\u000a  lVar15 = prVar18[lVar8].minutes;\u000a  lVar16 = prVar18[lVar8].seconds;\u000a  lVar8 = prVar18[lVar8].ns;\u000a  switch(uVar5) {\u000a  case 4:\u000a    local_598 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->month;\u000a    local_578 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    *(undefined4 *)&(pc->seconds).tv_sec = *(undefined4 *)&prVar18->year;\u000a    *(undefined4 *)((long)&(pc->seconds).tv_sec + 4) = local_598;\u000a    *(undefined4 *)&(pc->seconds).tv_nsec = uVar22;\u000a    *(undefined4 *)((long)&(pc->seconds).tv_nsec + 4) = local_578;\u000a    pc->timespec_seen = true;\u000a    break;\u000a  case 7:\u000a    pc->times_seen = pc->times_seen + 1;\u000a    pc->dates_seen = pc->dates_seen + 1;\u000a    break;\u000a  case 8:\u000a    pc->times_seen = pc->times_seen + 1;\u000a    break;\u000a  case 9:\u000a    pc->local_zones_seen = pc->local_zones_seen + 1;\u000a    break;\u000a  case 10:\u000a    pc->zones_seen = pc->zones_seen + 1;\u000a    break;\u000a  case 0xb:\u000a    pc->dates_seen = pc->dates_seen + 1;\u000a    break;\u000a  case 0xc:\u000a    pc->days_seen = pc->days_seen + 1;\u000a    break;\u000a  case 0x12:\u000a    set_hhmmss(pc,prVar18[-1].hour,0,0,0);\u000a    goto LAB_00404c9c;\u000a  case 0x13:\u000a    set_hhmmss(pc,prVar18[-3].hour,prVar18[-1].hour,0,0);\u000a    goto LAB_00404c9c;\u000a  case 0x14:\u000a    set_hhmmss(pc,prVar18[-5].hour,prVar18[-3].hour,prVar18[-1].day,prVar18[-1].hour);\u000aLAB_00404c9c:\u000a    pc->meridian = *(int *)&prVar18->year;\u000a    break;\u000a  case 0x16:\u000a    set_hhmmss(pc,prVar18[-1].hour,0,0,0);\u000a    goto LAB_00404d49;\u000a  case 0x17:\u000a    set_hhmmss(pc,prVar18[-3].hour,prVar18[-1].hour,0,0);\u000a    goto LAB_00404d49;\u000a  case 0x18:\u000a    set_hhmmss(pc,prVar18[-5].hour,prVar18[-3].hour,prVar18[-1].day,prVar18[-1].hour);\u000aLAB_00404d49:\u000a    pc->meridian = 2;\u000a    break;\u000a  case 0x1b:\u000a    pc->zones_seen = pc->zones_seen + 1;\u000a                    /* WARNING: Load size is inaccurate */\u000a    local_568 = time_zone_hhmm(pc,(textint)CONCAT420((int)((ulong)prVar18[-1].minutes >> 0x20),\u000a                                                     CONCAT416((int)prVar18[-1].minutes,\u000a                                                               *(undefined *)&prVar18[-1].day)),\u000a                               prVar18->year);\u000a    goto LAB_00404ec2;\u000a  case 0x1c:\u000a    local_568 = prVar18->year;\u000a    pc->local_isdst = (int)local_568;\u000a    pc->dsts_seen = pc->dsts_seen + (ulong)(0 < local_568);\u000a    break;\u000a  case 0x1d:\u000a    pc->local_isdst = 1;\u000a    pc->dsts_seen = (ulong)(0 < prVar18[-1].day) + 1 + pc->dsts_seen;\u000a    break;\u000a  case 0x1e:\u000a    local_568 = prVar18->year;\u000a    goto LAB_00404ec2;\u000a  case 0x1f:\u000a    pc->time_zone = 0x1a4;\u000a    break;\u000a  case 0x20:\u000a    pc->time_zone = prVar18[-1].day;\u000a    goto LAB_00404de2;\u000a  case 0x21:\u000a    pc->time_zone = 0x1a4;\u000aLAB_00404de2:\u000a    local_568 = prVar18->ns;\u000a    local_598 = *(undefined4 *)&prVar18->year;\u000a    uVar19 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar20 = *(undefined4 *)&prVar18->month;\u000a    uVar21 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->day;\u000a    uVar23 = *(undefined4 *)((long)&prVar18->day + 4);\u000a    uVar24 = *(undefined4 *)&prVar18->hour;\u000a    uVar25 = *(undefined4 *)((long)&prVar18->hour + 4);\u000a    local_578 = *(undefined4 *)&prVar18->minutes;\u000a    uVar26 = *(undefined4 *)((long)&prVar18->minutes + 4);\u000a    uVar27 = *(undefined4 *)&prVar18->seconds;\u000a    uVar28 = *(undefined4 *)((long)&prVar18->seconds + 4);\u000aLAB_00404e11:\u000a    apply_relative_time(pc,(relative_time)\u000a                           CONCAT848(local_568,\u000a                                     CONCAT444(uVar28,CONCAT440(uVar27,CONCAT436(uVar26,CONCAT432(\u000a                                                  local_578,\u000a                                                  CONCAT428(uVar25,CONCAT424(uVar24,CONCAT420(uVar23\u000a                                                  ,CONCAT416(uVar22,CONCAT412(uVar21,CONCAT48(uVar20\u000a                                                  ,CONCAT44(uVar19,local_598)))))))))))));\u000a    break;\u000a  case 0x22:\u000a    lVar3 = prVar18[-2].day;\u000a                    /* WARNING: Load size is inaccurate */\u000a    local_568 = time_zone_hhmm(pc,(textint)CONCAT420((int)((ulong)prVar18[-1].minutes >> 0x20),\u000a                                                     CONCAT416((int)prVar18[-1].minutes,\u000a                                                               *(undefined *)&prVar18[-1].day)),\u000a                               prVar18->year);\u000a    local_568 = local_568 + lVar3;\u000a    goto LAB_00404ec2;\u000a  case 0x23:\u000a    local_568 = prVar18->year;\u000a    goto LAB_00404ebe;\u000a  case 0x24:\u000a    local_568 = prVar18[-1].day;\u000aLAB_00404ebe:\u000a    local_568 = local_568 + 0x3c;\u000aLAB_00404ec2:\u000a    pc->time_zone = local_568;\u000a    break;\u000a  case 0x25:\u000a    pc->day_ordinal = 0;\u000a    goto LAB_00404ef6;\u000a  case 0x26:\u000a    pc->day_ordinal = 0;\u000a    pc->day_number = *(int *)&prVar18[-1].day;\u000a    break;\u000a  case 0x27:\u000a    local_568 = prVar18[-1].day;\u000a    goto LAB_00404eed;\u000a  case 0x28:\u000a    local_568 = prVar18[-1].hour;\u000aLAB_00404eed:\u000a    pc->day_ordinal = local_568;\u000aLAB_00404ef6:\u000a    pc->day_number = *(int *)&prVar18->year;\u000a    break;\u000a  case 0x29:\u000a    goto switchD_004048ca_caseD_29;\u000a  case 0x2a:\u000a    if ((ulong)prVar18[-4].minutes < 4) {\u000a      local_568 = prVar18[-4].hour;\u000a      goto LAB_004051fa;\u000a    }\u000a    (pc->year).digits = prVar18[-4].minutes;\u000a    local_598 = *(undefined4 *)((long)&prVar18[-4].day + 4);\u000a    uVar22 = *(undefined4 *)&prVar18[-4].hour;\u000a    local_578 = *(undefined4 *)((long)&prVar18[-4].hour + 4);\u000a    *(undefined4 *)ptVar1 = *(undefined4 *)&prVar18[-4].day;\u000a    *(undefined4 *)&(pc->year).field_0x4 = local_598;\u000a    *(undefined4 *)&(pc->year).value = uVar22;\u000a    *(undefined4 *)((long)&(pc->year).value + 4) = local_578;\u000a    goto switchD_004048ca_caseD_29;\u000a  case 0x2b:\u000a    pc->day = prVar18[-2].hour;\u000a    pc->month = prVar18[-1].day;\u000a    (pc->year).value = -prVar18->month;\u000a    (pc->year).digits = prVar18->day;\u000a    break;\u000a  case 0x2c:\u000a    pc->month = prVar18[-2].day;\u000a    pc->day = -prVar18[-1].hour;\u000a    (pc->year).value = -prVar18->month;\u000a    (pc->year).digits = prVar18->day;\u000a    break;\u000a  case 0x2d:\u000a    local_568 = prVar18[-1].day;\u000a    goto LAB_00404f91;\u000a  case 0x2e:\u000a    local_568 = prVar18[-3].day;\u000aLAB_004051fa:\u000a    pc->month = local_568;\u000a    pc->day = prVar18[-2].hour;\u000a    goto LAB_0040520b;\u000a  case 0x2f:\u000a    pc->day = prVar18[-1].hour;\u000a    pc->month = prVar18->year;\u000a    break;\u000a  case 0x30:\u000a    pc->day = prVar18[-2].hour;\u000a    pc->month = prVar18[-1].day;\u000aLAB_0040520b:\u000a    (pc->year).digits = prVar18->day;\u000a    local_598 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->month;\u000a    local_578 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    *(undefined4 *)ptVar1 = *(undefined4 *)&prVar18->year;\u000a    *(undefined4 *)&(pc->year).field_0x4 = local_598;\u000a    *(undefined4 *)&(pc->year).value = uVar22;\u000a    *(undefined4 *)((long)&(pc->year).value + 4) = local_578;\u000a    break;\u000a  case 0x32:\u000a    (pc->year).digits = prVar18[-2].minutes;\u000a    local_598 = *(undefined4 *)((long)&prVar18[-2].day + 4);\u000a    uVar22 = *(undefined4 *)&prVar18[-2].hour;\u000a    local_578 = *(undefined4 *)((long)&prVar18[-2].hour + 4);\u000a    *(undefined4 *)ptVar1 = *(undefined4 *)&prVar18[-2].day;\u000a    *(undefined4 *)&(pc->year).field_0x4 = local_598;\u000a    *(undefined4 *)&(pc->year).value = uVar22;\u000a    *(undefined4 *)((long)&(pc->year).value + 4) = local_578;\u000a    pc->month = -prVar18[-1].hour;\u000a    pc->day = -prVar18->month;\u000a    break;\u000a  case 0x33:\u000a    apply_relative_time(pc,*(relative_time *)&prVar18[-1].day);\u000a    break;\u000a  case 0x34:\u000a  case 0x35:\u000a    local_568 = prVar18->ns;\u000a    local_598 = *(undefined4 *)&prVar18->year;\u000a    uVar19 = *(undefined4 *)((long)&prVar18->year + 4);\u000a    uVar20 = *(undefined4 *)&prVar18->month;\u000a    uVar21 = *(undefined4 *)((long)&prVar18->month + 4);\u000a    uVar22 = *(undefined4 *)&prVar18->day;\u000a    uVar23 = *(undefined4 *)((long)&prVar18->day + 4);\u000a    uVar24 = *(undefined4 *)&prVar18->hour;\u000a    uVar25 = *(undefined4 *)((long)&prVar18->hour + 4);\u000a    local_578 = *(undefined4 *)&prVar18->minutes;\u000a    uVar26 = *(undefined4 *)((long)&prVar18->minutes + 4);\u000a    uVar27 = *(undefined4 *)&prVar18->seconds;\u000a    uVar28 = *(undefined4 *)((long)&prVar18->seconds + 4);\u000a    goto LAB_00404e11;\u000a  case 0x36:\u000a    lVar14 = prVar18[-1].day;\u000a    goto LAB_00404b1f;\u000a  case 0x37:\u000a  case 0x4b:\u000a    lVar14 = prVar18[-1].hour;\u000aLAB_00404b1f:\u000a    lVar13 = 0;\u000a    goto LAB_00405010;\u000a  case 0x38:\u000a    lVar13 = 0;\u000a    lVar14 = 1;\u000a    goto LAB_00405010;\u000a  case 0x39:\u000a    lVar13 = prVar18[-1].day;\u000a    goto LAB_0040500e;\u000a  case 0x3a:\u000a  case 0x4c:\u000a    lVar13 = prVar18[-1].hour;\u000a    goto LAB_0040500e;\u000a  case 0x3b:\u000a    lVar13 = 1;\u000aLAB_0040500e:\u000a    lVar14 = 0;\u000aLAB_00405010:\u000a    lVar11 = 0;\u000aLAB_00405020:\u000a    local_530 = 0;\u000aLAB_0040503f:\u000a    lVar15 = 0;\u000aLAB_00405042:\u000a    lVar16 = 0;\u000aLAB_00405045:\u000a    lVar8 = 0;\u000a    break;\u000a  case 0x3c:\u000a    lVar11 = prVar18->year * prVar18[-1].day;\u000a    goto LAB_0040501c;\u000a  case 0x3d:\u000a  case 0x4d:\u000a    lVar11 = prVar18->year * prVar18[-1].hour;\u000a    goto LAB_0040501c;\u000a  case 0x3e:\u000a  case 0x51:\u000a    lVar11 = prVar18->year;\u000aLAB_0040501c:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    goto LAB_00405020;\u000a  case 0x3f:\u000a    local_530 = prVar18[-1].day;\u000a    goto LAB_00405034;\u000a  case 0x40:\u000a  case 0x4e:\u000a    local_530 = prVar18[-1].hour;\u000a    goto LAB_00405034;\u000a  case 0x41:\u000a    local_530 = 1;\u000aLAB_00405034:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    goto LAB_0040503f;\u000a  case 0x42:\u000a    lVar15 = prVar18[-1].day;\u000a    goto LAB_004050eb;\u000a  case 0x43:\u000a  case 0x4f:\u000a    lVar15 = prVar18[-1].hour;\u000a    goto LAB_004050eb;\u000a  case 0x44:\u000a    lVar15 = 1;\u000aLAB_004050eb:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    local_530 = 0;\u000a    goto LAB_00405042;\u000a  case 0x45:\u000a    lVar16 = prVar18[-1].day;\u000a    goto LAB_00405109;\u000a  case 0x46:\u000a  case 0x50:\u000a    lVar16 = prVar18[-1].hour;\u000a    goto LAB_00405109;\u000a  case 0x47:\u000a  case 0x48:\u000a    lVar16 = prVar18[-1].day;\u000a    lVar8 = prVar18[-1].hour;\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    local_530 = 0;\u000a    lVar15 = 0;\u000a    break;\u000a  case 0x49:\u000a    lVar16 = 1;\u000aLAB_00405109:\u000a    lVar14 = 0;\u000a    lVar13 = 0;\u000a    lVar11 = 0;\u000a    local_530 = 0;\u000a    lVar15 = 0;\u000a    goto LAB_00405045;\u000a  case 0x55:\u000a  case 0x57:\u000a    lVar14 = prVar18->month;\u000a    lVar13 = 0;\u000a    break;\u000a  case 0x58:\u000a                    /* WARNING: Load size is inaccurate */\u000a    digits_to_date_time(pc,(textint)CONCAT420((int)((ulong)prVar18->day >> 0x20),\u000a                                              CONCAT416((int)prVar18->day,*(undefined *)prVar18)));\u000a    break;\u000a  case 0x59:\u000a                    /* WARNING: Load size is inaccurate */\u000a    digits_to_date_time(pc,(textint)CONCAT420((int)((ulong)prVar18[-1].minutes >> 0x20),\u000a                                              CONCAT416((int)prVar18[-1].minutes,\u000a                                                        *(undefined *)&prVar18[-1].day)));\u000a    apply_relative_time(pc,*prVar18);\u000a    break;\u000a  case 0x5a:\u000a    lVar14 = -1;\u000a    break;\u000a  case 0x5b:\u000a    lVar14 = prVar18->month;\u000a  }\u000aswitchD_004048ca_caseD_5:\u000a  lVar17 = lVar17 - uVar7;\u000a  local_568 = uVar7 * -0x38;\u000a  prVar10 = (relative_time *)((long)prVar18 + local_568 + 0x38);\u000a  *(long *)((long)prVar18 + local_568 + 0x38) = lVar14;\u000a  *(long *)((long)prVar18 + local_568 + 0x40) = lVar13;\u000a  *(long *)((long)prVar18 + local_568 + 0x48) = lVar11;\u000a  *(long *)((long)prVar18 + local_568 + 0x50) = local_530;\u000a  *(long *)((long)prVar18 + local_568 + 0x58) = lVar15;\u000a  *(long_time_t *)((long)prVar18 + local_568 + 0x60) = lVar16;\u000a  *(long *)((long)prVar18 + local_568 + 0x68) = lVar8;\u000a  uVar12 = (int)(char)""[(ulong)""[(long)(int)uVar5] + 0x44] + (int)local_4c8[lVar17];\u000a  if ((uVar12 < 0x71) &&\u000a     ((int)\u000a           "\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx04\u005cf\u005cx0ff\u005cx0f\u005cx10\u005cx13\u005cx0f\u005cx13\u005cx13\u005cx14\u005cx13\u005cx19p\u005cx19\u005cx13\u005cx1b\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cx13\u005cx13\u005cx13k\u005cx13\u005cx14\u005cx19\u005cx19\u005cx19q\u005cx13\u005cx14\u005cx15\u005cx16\u005cx19\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn\u005cv\u005cf\u005cr\u005cx0e\u005cx17\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16`\u005cx18\u005cx05\u005cx06\u005ca\u005cb\u005ct\u005cn"\u000a           [(long)(int)uVar12] == (int)local_4c8[lVar17])) {\u000a    uVar7 = (ulong)\u000a                   "OCDEFGH:IdkJKenL12efqM;N=>?@AB=>?@ABee\u005c\u005coZ[jpXo\u005cx05\u005cx06\u005ca\u005cbX\u005cr\u005cx0e\u005cx0f\u005cx10\u005cx11\u005cx12\u005cx13\u005cx14\u005cx15\u005cx16\u005cx01\u005cx17\u005cx18\u005cx19\u005cx1a\u005cx1b\u005cx1c\u005cx1dO\u005cx1e345678\u005cf9=>?@AB<0P/\u005cx06S\u005cbQR\u005cx1aTUVW^_`Yiabc"\u000a                   [(long)(int)uVar12];\u000a  }\u000a  else {\u000a    uVar7 = (ulong)(uint)(int)yypgoto[(ulong)""[(long)(int)uVar5] + 4];\u000a  }\u000aLAB_004050c7:\u000a  local_4c8[lVar17 + 1] = (short)uVar7;\u000a  lVar17 = lVar17 + 1;\u000a  prVar18 = prVar10;\u000a  if (0x12 < lVar17) {\u000a    return 2;\u000a  }\u000a  goto LAB_00405230;\u000aswitchD_004048ca_caseD_29:\u000a  local_568 = prVar18[-2].hour;\u000aLAB_00404f91:\u000a  pc->month = local_568;\u000a  pc->day = prVar18->month;\u000a  goto switchD_004048ca_caseD_5;\u000a}\u000a\u000a
p220
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x568\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [0xb0 + RSP],XMM0\nMOVAPS xmmword ptr [0xa0 + RSP],XMM0\nMOVAPS xmmword ptr [0x90 + RSP],XMM0\nMOV qword ptr [0xc0 + RSP],0x0\nLEA R15,[0x100 + RSP]\nMOV word ptr [0xd0 + RSP],0x0\nLEA RAX,[RDI + 0x60]\nMOV qword ptr [0x88 + RSP],RAX\nMOV qword ptr [RSP + 0x48],RDI\nLEA RAX,[RDI + 0x28]\nMOV qword ptr [0x80 + RSP],RAX\nMOV R8D,0xfffffffe\nXOR EAX,EAX\nXOR R12D,R12D\nJMP 0x00405230\nMOVSXD RBX,EAX\nMOVSX EBP,byte ptr [0x40be60 + RBX]\nCMP EBP,-0x5d\nJZ 0x00404870\nCMP R8D,-0x2\nJNZ 0x0040481a\nLEA RDI,[0x90 + RSP]\nMOV RSI,qword ptr [RSP + 0x48]\nCALL 0x00405260\nMOV R8D,EAX\nTEST R8D,R8D\nJLE 0x00404839\nMOV EAX,0x2\nCMP R8D,0x115\nJA 0x0040483e\nMOVSXD RAX,R8D\nMOVZX EAX,byte ptr [0x40bee0 + RAX]\nJMP 0x0040483e\nXOR EAX,EAX\nXOR R8D,R8D\nADD EBP,EAX\nCMP EBP,0x70\nJA 0x00404870\nMOVSXD RCX,EBP\nMOVSX EDX,byte ptr [0x40c000 + RCX]\nCMP EDX,EAX\nJNZ 0x00404870\nMOVZX EAX,byte ptr [0x40c080 + RCX]\nOR RCX,0x4\nCMP RCX,0x6f\nJNZ 0x0040490f\nNEG EAX\nJMP 0x0040487f\nMOVZX EAX,byte ptr [0x40c100 + RBX]\nTEST EAX,EAX\nJZ 0x00405244\nMOVSXD R13,EAX\nMOVZX R14D,byte ptr [0x40c180 + R13]\nMOV EAX,0x1\nSUB RAX,R14\nIMUL RAX,RAX,0x38\nMOV RSI,qword ptr [R15 + RAX*0x1]\nMOV RBP,qword ptr [R15 + RAX*0x1 + 0x8]\nMOV RBX,qword ptr [R15 + RAX*0x1 + 0x10]\nMOV RCX,qword ptr [R15 + RAX*0x1 + 0x18]\nMOV qword ptr [RSP + 0x68],RCX\nMOV R9,qword ptr [R15 + RAX*0x1 + 0x20]\nMOV R10,qword ptr [R15 + RAX*0x1 + 0x28]\nMOV R11,qword ptr [R15 + RAX*0x1 + 0x30]\nLEA EAX,[R13 + -0x4]\nCMP EAX,0x57\nJA 0x00405048\nJMP qword ptr [0x40bb60 + RAX*0x8]\nMOV RAX,qword ptr [R15 + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS XMM1,xmmword ptr [R15 + 0x10]\nMOVUPS XMM2,xmmword ptr [R15 + 0x20]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x60],RSI\nMOV ESI,0x1\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nJMP 0x00404e11\nMOV RCX,qword ptr [0xc0 + RSP]\nMOV qword ptr [R15 + 0x68],RCX\nMOVAPS XMM0,xmmword ptr [0x90 + RSP]\nMOVAPS XMM1,xmmword ptr [0xa0 + RSP]\nMOVAPS XMM2,xmmword ptr [0xb0 + RSP]\nMOVUPS xmmword ptr [R15 + 0x58],XMM2\nMOVUPS xmmword ptr [R15 + 0x48],XMM1\nMOVUPS xmmword ptr [R15 + 0x38],XMM0\nLEA RCX,[R15 + 0x38]\nMOV R8D,0xfffffffe\nJMP 0x004050c7\nMOV R10,qword ptr [R15 + -0x38]\nMOV R11,qword ptr [R15 + -0x30]\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nXOR R9D,R9D\nJMP 0x00405048\nMOV RSI,qword ptr [R15 + -0x30]\nJMP 0x00404b1f\nMOV RBP,qword ptr [R15 + -0x30]\nJMP 0x0040500e\nMOV RBX,qword ptr [R15]\nIMUL RBX,qword ptr [R15 + -0x30]\nJMP 0x0040501c\nMOV RBX,qword ptr [R15]\nJMP 0x0040501c\nMOV RAX,qword ptr [R15 + -0x30]\nJMP 0x00405034\nMOV R9,qword ptr [R15 + -0x30]\nJMP 0x004050eb\nMOV R10,qword ptr [R15 + -0x30]\nJMP 0x00405109\nMOV RSI,qword ptr [R15 + 0x8]\nXOR EBP,EBP\nJMP 0x00405048\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15 + -0x30]\nXOR EDX,EDX\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x78],RBX\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV RBX,R11\nCALL 0x004055d0\nMOV R11,RBX\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBX,qword ptr [RSP + 0x78]\nJMP 0x00404d49\nMOV RDI,qword ptr [RSP + 0x48]\nINC qword ptr [0xd8 + RDI]\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15]\nMOV RAX,qword ptr [R15 + -0x28]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV dword ptr [RSP + 0x44],R8D\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x004055f0\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nJMP 0x00404ec2\nMOV RAX,qword ptr [R15 + -0x38]\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RDI + 0x18],RAX\nJMP 0x00404de2\nMOV RAX,qword ptr [R15]\nJMP 0x00404ebe\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x8],0x0\nJMP 0x00404ef6\nMOV RAX,qword ptr [R15 + -0x38]\nJMP 0x00404eed\nMOV RAX,qword ptr [R15 + -0x30]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15]\nMOV qword ptr [RCX + 0x40],RAX\nJMP 0x00405048\nMOV qword ptr [RSP + 0x60],RSI\nMOV ESI,dword ptr [R15]\nMOV RAX,qword ptr [R15 + -0x8]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS XMM1,xmmword ptr [R15 + -0x28]\nMOVUPS XMM2,xmmword ptr [R15 + -0x18]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00405680\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x00404e3f\nMOV RSI,qword ptr [R15 + -0x38]\nXOR EBP,EBP\nJMP 0x00405010\nMOV RBP,qword ptr [R15 + -0x38]\nJMP 0x0040500e\nMOV R9,qword ptr [R15 + -0x38]\nJMP 0x004050eb\nMOVUPS XMM0,xmmword ptr [R15]\nMOV RAX,qword ptr [0x88 + RSP]\nMOVUPS xmmword ptr [RAX],XMM0\nMOV RAX,qword ptr [RSP + 0x48]\nMOV byte ptr [0xa8 + RAX],0x1\nJMP 0x00405048\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xd0 + RAX]\nINC qword ptr [0xb0 + RAX]\nJMP 0x00405048\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xd0 + RAX]\nJMP 0x00405048\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xc0 + RAX]\nJMP 0x00405048\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xd8 + RAX]\nJMP 0x00405048\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xb0 + RAX]\nJMP 0x00405048\nMOV RAX,qword ptr [RSP + 0x48]\nINC qword ptr [0xb8 + RAX]\nJMP 0x00405048\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15 + -0x30]\nXOR EDX,EDX\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x78],RBX\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV RBX,R11\nCALL 0x004055d0\nMOV R11,RBX\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBX,qword ptr [RSP + 0x78]\nJMP 0x00404c9c\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0xa0 + R15]\nMOV RDX,qword ptr [R15 + -0x30]\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x004055d0\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x00404c9c\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0x110 + R15]\nMOV RDX,qword ptr [-0xa0 + R15]\nMOV RCX,qword ptr [R15 + -0x38]\nMOV dword ptr [RSP + 0x44],R8D\nMOV R8,qword ptr [R15 + -0x30]\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x50],R9\nMOV RBP,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x004055d0\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,RBP\nMOV R9,qword ptr [RSP + 0x50]\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nMOV EAX,dword ptr [R15]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV dword ptr [RCX + 0x20],EAX\nJMP 0x00405048\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0xa0 + R15]\nMOV RDX,qword ptr [R15 + -0x30]\nXOR ECX,ECX\nMOV dword ptr [RSP + 0x44],R8D\nXOR R8D,R8D\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x004055d0\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x00404d49\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [-0x110 + R15]\nMOV RDX,qword ptr [-0xa0 + R15]\nMOV RCX,qword ptr [R15 + -0x38]\nMOV dword ptr [RSP + 0x44],R8D\nMOV R8,qword ptr [R15 + -0x30]\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RSP + 0x50],R9\nMOV RBP,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x004055d0\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,RBP\nMOV R9,qword ptr [RSP + 0x50]\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nMOV RAX,qword ptr [RSP + 0x48]\nMOV dword ptr [RAX + 0x20],0x2\nJMP 0x00405048\nMOV RAX,qword ptr [R15]\nMOV RDX,qword ptr [RSP + 0x48]\nMOV dword ptr [RDX + 0x14],EAX\nXOR ECX,ECX\nTEST RAX,RAX\nSETG CL\nADD qword ptr [0xc8 + RDX],RCX\nJMP 0x00405048\nMOV RDX,qword ptr [RSP + 0x48]\nMOV dword ptr [RDX + 0x14],0x1\nXOR EAX,EAX\nCMP qword ptr [R15 + -0x38],0x0\nSETG AL\nMOV RCX,qword ptr [0xc8 + RDX]\nLEA RAX,[RAX + RCX*0x1 + 0x1]\nMOV qword ptr [0xc8 + RDX],RAX\nJMP 0x00405048\nMOV RAX,qword ptr [R15]\nJMP 0x00404ec2\nMOV RAX,qword ptr [RSP + 0x48]\nMOV qword ptr [RAX + 0x18],0x1a4\nJMP 0x00405048\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV qword ptr [RDI + 0x18],0x1a4\nMOV RAX,qword ptr [R15 + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS XMM1,xmmword ptr [R15 + 0x10]\nMOVUPS XMM2,xmmword ptr [R15 + 0x20]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x60],RSI\nMOV ESI,0x1\nMOV dword ptr [RSP + 0x44],R8D\nMOV qword ptr [RSP + 0x78],RBX\nMOV qword ptr [RSP + 0x50],R9\nMOV RBX,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00405680\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,RBX\nMOV R9,qword ptr [RSP + 0x50]\nMOV RBX,qword ptr [RSP + 0x78]\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nJMP 0x00405048\nMOV RAX,qword ptr [R15 + -0x70]\nMOV qword ptr [RSP + 0x78],RAX\nMOV qword ptr [RSP + 0x60],RSI\nMOV RSI,qword ptr [R15]\nMOV RAX,qword ptr [R15 + -0x28]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x004055f0\nMOV R11,qword ptr [RSP + 0x70]\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nMOV RBP,qword ptr [RSP + 0x58]\nMOV RSI,qword ptr [RSP + 0x60]\nMOV R8D,dword ptr [RSP + 0x44]\nADD RAX,qword ptr [RSP + 0x78]\nJMP 0x00404ec2\nMOV RAX,qword ptr [R15 + -0x38]\nADD RAX,0x3c\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x18],RAX\nJMP 0x00405048\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x8],0x0\nMOV EAX,dword ptr [R15 + -0x38]\nMOV dword ptr [RCX + 0x10],EAX\nJMP 0x00405048\nMOV RAX,qword ptr [R15 + -0x30]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x8],RAX\nMOV EAX,dword ptr [R15]\nMOV dword ptr [RCX + 0x10],EAX\nJMP 0x00405048\nCMP qword ptr [-0xd0 + R15],0x4\nJC 0x004051f3\nMOV RAX,qword ptr [-0xd0 + R15]\nMOV RCX,qword ptr [0x80 + RSP]\nMOV qword ptr [RCX + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [-0xe0 + R15]\nMOVUPS xmmword ptr [RCX],XMM0\nMOV RAX,qword ptr [R15 + -0x68]\nJMP 0x00404f91\nMOV RAX,qword ptr [R15 + -0x68]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15 + -0x38]\nMOV qword ptr [RCX + 0x40],RAX\nXOR EAX,EAX\nSUB RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RCX + 0x30],RAX\nMOV RAX,qword ptr [R15 + 0x10]\nMOV qword ptr [RCX + 0x38],RAX\nJMP 0x00405048\nMOV RAX,qword ptr [R15 + -0x70]\nMOV RDX,qword ptr [RSP + 0x48]\nMOV qword ptr [RDX + 0x40],RAX\nXOR EAX,EAX\nXOR ECX,ECX\nSUB RCX,qword ptr [R15 + -0x30]\nMOV qword ptr [RDX + 0x48],RCX\nSUB RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RDX + 0x30],RAX\nMOV RAX,qword ptr [R15 + 0x10]\nMOV qword ptr [RDX + 0x38],RAX\nJMP 0x00405048\nMOV RAX,qword ptr [R15 + -0x38]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x40],RAX\nMOV RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RCX + 0x48],RAX\nJMP 0x00405048\nMOV RAX,qword ptr [-0xa8 + R15]\nJMP 0x004051fa\nMOV RAX,qword ptr [R15 + -0x68]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15 + -0x38]\nMOV qword ptr [RCX + 0x40],RAX\nJMP 0x0040520b\nMOV RAX,qword ptr [R15 + -0x60]\nMOV RCX,qword ptr [0x80 + RSP]\nMOV qword ptr [RCX + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x70]\nMOVUPS xmmword ptr [RCX],XMM0\nXOR EAX,EAX\nXOR ECX,ECX\nSUB RCX,qword ptr [R15 + -0x30]\nMOV RDX,qword ptr [RSP + 0x48]\nMOV qword ptr [RDX + 0x40],RCX\nSUB RAX,qword ptr [R15 + 0x8]\nMOV qword ptr [RDX + 0x48],RAX\nJMP 0x00405048\nXOR EBP,EBP\nMOV ESI,0x1\nJMP 0x00405010\nMOV EBP,0x1\nXOR ESI,ESI\nXOR EBX,EBX\nJMP 0x00405020\nMOV RBX,qword ptr [R15]\nIMUL RBX,qword ptr [R15 + -0x38]\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nJMP 0x0040503f\nMOV RAX,qword ptr [R15 + -0x38]\nJMP 0x00405034\nMOV EAX,0x1\nMOV qword ptr [RSP + 0x68],RAX\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR R9D,R9D\nXOR R10D,R10D\nXOR R11D,R11D\nSUB R12,R14\nNEG R14\nIMUL RAX,R14,0x38\nLEA RCX,[R15 + RAX*0x1 + 0x38]\nMOV qword ptr [R15 + RAX*0x1 + 0x38],RSI\nMOV qword ptr [R15 + RAX*0x1 + 0x40],RBP\nMOV qword ptr [R15 + RAX*0x1 + 0x48],RBX\nMOV RDX,qword ptr [RSP + 0x68]\nMOV qword ptr [R15 + RAX*0x1 + 0x50],RDX\nMOV qword ptr [R15 + RAX*0x1 + 0x58],R9\nMOV qword ptr [R15 + RAX*0x1 + 0x60],R10\nMOV qword ptr [R15 + RAX*0x1 + 0x68],R11\nMOVZX EAX,byte ptr [0x40c1e0 + R13]\nMOVSX ESI,byte ptr [0x40c224 + RAX]\nMOVSX EDX,word ptr [0xd0 + RSP + R12*0x2]\nADD ESI,EDX\nCMP ESI,0x70\nJA 0x004050c0\nMOVSXD RSI,ESI\nMOVSX EDI,byte ptr [0x40c000 + RSI]\nCMP EDI,EDX\nJNZ 0x004050c0\nMOVZX EAX,byte ptr [0x40c080 + RSI]\nJMP 0x004050c7\nMOVSX EAX,byte ptr [0x40c244 + RAX]\nMOV word ptr [0xd2 + RSP + R12*0x2],AX\nINC R12\nCMP R12,0x12\nMOV R15,RCX\nJLE 0x00405230\nJMP 0x0040523d\nMOV R9D,0x1\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nJMP 0x00405042\nMOV R10,qword ptr [R15 + -0x38]\nJMP 0x00405109\nMOV R10D,0x1\nXOR ESI,ESI\nXOR EBP,EBP\nXOR EBX,EBX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nXOR R9D,R9D\nJMP 0x00405045\nMOV RAX,qword ptr [R15 + 0x10]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV qword ptr [RSP + 0x60],RSI\nMOV qword ptr [RSP + 0x78],RBX\nMOV qword ptr [RSP + 0x50],R9\nMOV RBX,R10\nMOV qword ptr [RSP + 0x70],R11\nCALL 0x00405700\nJMP 0x00404e2d\nMOV RAX,qword ptr [R15 + -0x28]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15 + -0x38]\nMOVUPS xmmword ptr [RSP],XMM0\nMOV qword ptr [RSP + 0x58],RBP\nMOV RDI,qword ptr [RSP + 0x48]\nMOV dword ptr [RSP + 0x44],R8D\nMOV qword ptr [RSP + 0x60],RSI\nMOV qword ptr [RSP + 0x78],RBX\nMOV RBP,R9\nMOV qword ptr [RSP + 0x50],R10\nMOV RBX,R11\nCALL 0x00405700\nMOV RAX,qword ptr [R15 + 0x30]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS XMM1,xmmword ptr [R15 + 0x10]\nMOVUPS XMM2,xmmword ptr [R15 + 0x20]\nMOVUPS xmmword ptr [RSP + 0x20],XMM2\nMOVUPS xmmword ptr [RSP + 0x10],XMM1\nMOVUPS xmmword ptr [RSP],XMM0\nMOV ESI,0x1\nMOV RDI,qword ptr [RSP + 0x48]\nCALL 0x00405680\nMOV R11,RBX\nMOV R10,qword ptr [RSP + 0x50]\nMOV R9,RBP\nJMP 0x00404e3a\nMOV RSI,-0x1\nJMP 0x00405048\nMOV RSI,qword ptr [R15 + 0x8]\nJMP 0x00405048\nMOV RAX,qword ptr [-0xd8 + R15]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x40],RAX\nMOV RAX,qword ptr [R15 + -0x68]\nMOV qword ptr [RCX + 0x48],RAX\nMOV RAX,qword ptr [R15 + 0x10]\nMOV RCX,qword ptr [0x80 + RSP]\nMOV qword ptr [RCX + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R15]\nMOVUPS xmmword ptr [RCX],XMM0\nJMP 0x00405048\nCMP EAX,0xc\nJNZ 0x004047f0\nXOR EAX,EAX\nJMP 0x00405249\nMOV EAX,0x2\nJMP 0x00405249\nMOV EAX,0x1\nADD RSP,0x568\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p221
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 68 05 00 00\n0f 57 c0\n0f 29 84 24 b0 00 00 00\n0f 29 84 24 a0 00 00 00\n0f 29 84 24 90 00 00 00\n48 c7 84 24 c0 00 00 00 00 00 00 00\n4c 8d bc 24 00 01 00 00\n66 c7 84 24 d0 00 00 00 00 00\n48 8d 47 60\n48 89 84 24 88 00 00 00\n48 89 7c 24 48\n48 8d 47 28\n48 89 84 24 80 00 00 00\n41 b8 fe ff ff ff\n31 c0\n45 31 e4\ne9 49 0a 00 00\n48 63 d8\n0f be ab 60 be 40 00\n83 fd a3\n74 71\n41 83 f8 fe\n75 15\n48 8d bc 24 90 00 00 00\n48 8b 74 24 48\ne8 49 0a 00 00\n41 89 c0\n45 85 c0\n7e 1a\nb8 02 00 00 00\n41 81 f8 15 01 00 00\n77 11\n49 63 c0\n0f b6 80 e0 be 40 00\neb 05\n31 c0\n45 31 c0\n01 c5\n83 fd 70\n77 2b\n48 63 cd\n0f be 91 00 c0 40 00\n39 c2\n75 1d\n0f b6 81 80 c0 40 00\n48 83 c9 04\n48 83 f9 6f\n0f 85 a7 00 00 00\nf7 d8\neb 13\n0f b6 83 00 c1 40 00\n85 c0\n0f 84 c5 09 00 00\n4c 63 e8\n45 0f b6 b5 80 c1 40 00\nb8 01 00 00 00\n4c 29 f0\n48 6b c0 38\n49 8b 34 07\n49 8b 6c 07 08\n49 8b 5c 07 10\n49 8b 4c 07 18\n48 89 4c 24 68\n4d 8b 4c 07 20\n4d 8b 54 07 28\n4d 8b 5c 07 30\n41 8d 45 fc\n83 f8 57\n0f 87 7e 07 00 00\nff 24 c5 60 bb 40 00\n49 8b 47 30\n48 89 44 24 30\n41 0f 10 07\n41 0f 10 4f 10\n41 0f 10 57 20\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\n48 89 74 24 60\nbe 01 00 00 00\n48 89 6c 24 58\n48 8b 7c 24 48\ne9 02 05 00 00\n48 8b 8c 24 c0 00 00 00\n49 89 4f 68\n0f 28 84 24 90 00 00 00\n0f 28 8c 24 a0 00 00 00\n0f 28 94 24 b0 00 00 00\n41 0f 11 57 58\n41 0f 11 4f 48\n41 0f 11 47 38\n49 8d 4f 38\n41 b8 fe ff ff ff\ne9 76 07 00 00\n4d 8b 57 c8\n4d 8b 5f d0\n31 f6\n31 ed\n31 db\n31 c0\n48 89 44 24 68\n45 31 c9\ne9 da 06 00 00\n49 8b 77 d0\ne9 a8 01 00 00\n49 8b 6f d0\ne9 8e 06 00 00\n49 8b 1f\n49 0f af 5f d0\ne9 8f 06 00 00\n49 8b 1f\ne9 87 06 00 00\n49 8b 47 d0\ne9 96 06 00 00\n4d 8b 4f d0\ne9 44 07 00 00\n4d 8b 57 d0\ne9 59 07 00 00\n49 8b 77 08\n31 ed\ne9 8d 06 00 00\n48 89 74 24 60\n49 8b 77 d0\n31 d2\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n48 89 5c 24 78\n4c 89 cd\n4c 89 54 24 50\n4c 89 db\ne8 e1 0b 00 00\n49 89 db\n4c 8b 54 24 50\n49 89 e9\n48 8b 5c 24 78\ne9 45 03 00 00\n48 8b 7c 24 48\n48 ff 87 d8 00 00 00\n48 89 74 24 60\n49 8b 37\n49 8b 47 d8\n48 89 44 24 10\n41 0f 10 47 c8\n0f 11 04 24\n48 89 6c 24 58\n44 89 44 24 44\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 aa 0b 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\ne9 5b 04 00 00\n49 8b 47 c8\n48 89 6c 24 58\n48 8b 7c 24 48\n48 89 47 18\ne9 64 03 00 00\n49 8b 07\ne9 38 04 00 00\n48 8b 4c 24 48\n48 c7 41 08 00 00 00 00\ne9 5e 04 00 00\n49 8b 47 c8\ne9 4c 04 00 00\n49 8b 47 d0\n48 8b 4c 24 48\n48 89 41 48\n49 8b 07\n48 89 41 40\ne9 8e 05 00 00\n48 89 74 24 60\n41 8b 37\n49 8b 47 f8\n48 89 44 24 30\n41 0f 10 47 c8\n41 0f 10 4f d8\n41 0f 10 57 e8\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 77 0b 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\ne9 24 03 00 00\n49 8b 77 c8\n31 ed\ne9 ea 04 00 00\n49 8b 6f c8\ne9 df 04 00 00\n4d 8b 4f c8\ne9 b3 05 00 00\n41 0f 10 07\n48 8b 84 24 88 00 00 00\n0f 11 00\n48 8b 44 24 48\nc6 80 a8 00 00 00 01\ne9 f0 04 00 00\n48 8b 44 24 48\n48 ff 80 d0 00 00 00\n48 ff 80 b0 00 00 00\ne9 d8 04 00 00\n48 8b 44 24 48\n48 ff 80 d0 00 00 00\ne9 c7 04 00 00\n48 8b 44 24 48\n48 ff 80 c0 00 00 00\ne9 b6 04 00 00\n48 8b 44 24 48\n48 ff 80 d8 00 00 00\ne9 a5 04 00 00\n48 8b 44 24 48\n48 ff 80 b0 00 00 00\ne9 94 04 00 00\n48 8b 44 24 48\n48 ff 80 b8 00 00 00\ne9 83 04 00 00\n48 89 74 24 60\n49 8b 77 d0\n31 d2\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n48 89 5c 24 78\n4c 89 cd\n4c 89 54 24 50\n4c 89 db\ne8 d7 09 00 00\n49 89 db\n4c 8b 54 24 50\n49 89 e9\n48 8b 5c 24 78\ne9 8e 00 00 00\n48 89 74 24 60\n49 8b b7 60 ff ff ff\n49 8b 57 d0\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 8c 09 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\neb 49\n48 89 74 24 60\n49 8b b7 f0 fe ff ff\n49 8b 97 60 ff ff ff\n49 8b 4f c8\n44 89 44 24 44\n4d 8b 47 d0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 4c 24 50\n4c 89 d5\n4c 89 5c 24 70\ne8 41 09 00 00\n4c 8b 5c 24 70\n49 89 ea\n4c 8b 4c 24 50\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\n41 8b 07\n48 8b 4c 24 48\n89 41 20\ne9 8d 03 00 00\n48 89 74 24 60\n49 8b b7 60 ff ff ff\n49 8b 57 d0\n31 c9\n44 89 44 24 44\n45 31 c0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 df 08 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\neb 49\n48 89 74 24 60\n49 8b b7 f0 fe ff ff\n49 8b 97 60 ff ff ff\n49 8b 4f c8\n44 89 44 24 44\n4d 8b 47 d0\n48 89 6c 24 58\n48 8b 7c 24 48\n4c 89 4c 24 50\n4c 89 d5\n4c 89 5c 24 70\ne8 94 08 00 00\n4c 8b 5c 24 70\n49 89 ea\n4c 8b 4c 24 50\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\n48 8b 44 24 48\nc7 40 20 02 00 00 00\ne9 df 02 00 00\n49 8b 07\n48 8b 54 24 48\n89 42 14\n31 c9\n48 85 c0\n0f 9f c1\n48 01 8a c8 00 00 00\ne9 c0 02 00 00\n48 8b 54 24 48\nc7 42 14 01 00 00 00\n31 c0\n49 83 7f c8 00\n0f 9f c0\n48 8b 8a c8 00 00 00\n48 8d 44 08 01\n48 89 82 c8 00 00 00\ne9 92 02 00 00\n49 8b 07\ne9 04 01 00 00\n48 8b 44 24 48\n48 c7 40 18 a4 01 00 00\ne9 78 02 00 00\n48 89 6c 24 58\n48 8b 7c 24 48\n48 c7 47 18 a4 01 00 00\n49 8b 47 30\n48 89 44 24 30\n41 0f 10 07\n41 0f 10 4f 10\n41 0f 10 57 20\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\n48 89 74 24 60\nbe 01 00 00 00\n44 89 44 24 44\n48 89 5c 24 78\n4c 89 4c 24 50\n4c 89 d3\n4c 89 5c 24 70\ne8 53 08 00 00\n4c 8b 5c 24 70\n49 89 da\n4c 8b 4c 24 50\n48 8b 5c 24 78\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\ne9 f5 01 00 00\n49 8b 47 90\n48 89 44 24 78\n48 89 74 24 60\n49 8b 37\n49 8b 47 d8\n48 89 44 24 10\n41 0f 10 47 c8\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n4c 89 cd\n4c 89 54 24 50\n4c 89 5c 24 70\ne8 59 07 00 00\n4c 8b 5c 24 70\n4c 8b 54 24 50\n49 89 e9\n48 8b 6c 24 58\n48 8b 74 24 60\n44 8b 44 24 44\n48 03 44 24 78\neb 08\n49 8b 47 c8\n48 83 c0 3c\n48 8b 4c 24 48\n48 89 41 18\ne9 78 01 00 00\n48 8b 4c 24 48\n48 c7 41 08 00 00 00 00\n41 8b 47 c8\n89 41 10\ne9 5f 01 00 00\n49 8b 47 d0\n48 8b 4c 24 48\n48 89 41 08\n41 8b 07\n89 41 10\ne9 47 01 00 00\n49 83 bf 30 ff ff ff 04\n0f 82 e4 02 00 00\n49 8b 87 30 ff ff ff\n48 8b 8c 24 80 00 00 00\n48 89 41 10\n41 0f 10 87 20 ff ff ff\n0f 11 01\n49 8b 47 98\neb 5e\n49 8b 47 98\n48 8b 4c 24 48\n48 89 41 48\n49 8b 47 c8\n48 89 41 40\n31 c0\n49 2b 47 08\n48 89 41 30\n49 8b 47 10\n48 89 41 38\ne9 e9 00 00 00\n49 8b 47 90\n48 8b 54 24 48\n48 89 42 40\n31 c0\n31 c9\n49 2b 4f d0\n48 89 4a 48\n49 2b 47 08\n48 89 42 30\n49 8b 47 10\n48 89 42 38\ne9 bb 00 00 00\n49 8b 47 c8\n48 8b 4c 24 48\n48 89 41 40\n49 8b 47 08\n48 89 41 48\ne9 a1 00 00 00\n49 8b 87 58 ff ff ff\ne9 47 02 00 00\n49 8b 47 98\n48 8b 4c 24 48\n48 89 41 48\n49 8b 47 c8\n48 89 41 40\ne9 3e 02 00 00\n49 8b 47 a0\n48 8b 8c 24 80 00 00 00\n48 89 41 10\n41 0f 10 47 90\n0f 11 01\n31 c0\n31 c9\n49 2b 4f d0\n48 8b 54 24 48\n48 89 4a 40\n49 2b 47 08\n48 89 42 48\neb 48\n31 ed\nbe 01 00 00 00\neb 07\nbd 01 00 00 00\n31 f6\n31 db\neb 0c\n49 8b 1f\n49 0f af 5f c8\n31 f6\n31 ed\n31 c0\n48 89 44 24 68\neb 16\n49 8b 47 c8\neb 05\nb8 01 00 00 00\n48 89 44 24 68\n31 f6\n31 ed\n31 db\n45 31 c9\n45 31 d2\n45 31 db\n4d 29 f4\n49 f7 de\n49 6b c6 38\n49 8d 4c 07 38\n49 89 74 07 38\n49 89 6c 07 40\n49 89 5c 07 48\n48 8b 54 24 68\n49 89 54 07 50\n4d 89 4c 07 58\n4d 89 54 07 60\n4d 89 5c 07 68\n41 0f b6 85 e0 c1 40 00\n0f be b0 24 c2 40 00\n42 0f bf 94 64 d0 00 00 00\n01 d6\n83 fe 70\n77 22\n48 63 f6\n0f be be 00 c0 40 00\n39 d7\n75 14\n0f b6 86 80 c0 40 00\neb 12\n0f be 80 44 c2 40 00\n66 42 89 84 64 d2 00 00 00\n49 ff c4\n49 83 fc 12\n49 89 cf\n0f 8e 50 01 00 00\ne9 58 01 00 00\n41 b9 01 00 00 00\n31 f6\n31 ed\n31 db\n31 c0\n48 89 44 24 68\ne9 45 ff ff ff\n4d 8b 57 c8\neb 06\n41 ba 01 00 00 00\n31 f6\n31 ed\n31 db\n31 c0\n48 89 44 24 68\n45 31 c9\ne9 27 ff ff ff\n49 8b 47 10\n48 89 44 24 10\n41 0f 10 07\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n48 89 74 24 60\n48 89 5c 24 78\n4c 89 4c 24 50\n4c 89 d3\n4c 89 5c 24 70\ne8 a6 05 00 00\ne9 ce fc ff ff\n49 8b 47 d8\n48 89 44 24 10\n41 0f 10 47 c8\n0f 11 04 24\n48 89 6c 24 58\n48 8b 7c 24 48\n44 89 44 24 44\n48 89 74 24 60\n48 89 5c 24 78\n4c 89 cd\n4c 89 54 24 50\n4c 89 db\ne8 66 05 00 00\n49 8b 47 30\n48 89 44 24 30\n41 0f 10 07\n41 0f 10 4f 10\n41 0f 10 57 20\n0f 11 54 24 20\n0f 11 4c 24 10\n0f 11 04 24\nbe 01 00 00 00\n48 8b 7c 24 48\ne8 b2 04 00 00\n49 89 db\n4c 8b 54 24 50\n49 89 e9\ne9 5c fc ff ff\n48 c7 c6 ff ff ff ff\ne9 5e fe ff ff\n49 8b 77 08\ne9 55 fe ff ff\n49 8b 87 28 ff ff ff\n48 8b 4c 24 48\n48 89 41 40\n49 8b 47 98\n48 89 41 48\n49 8b 47 10\n48 8b 8c 24 80 00 00 00\n48 89 41 10\n41 0f 10 07\n0f 11 01\ne9 21 fe ff ff\n83 f8 0c\n0f 85 b7 f5 ff ff\n31 c0\neb 0c\nb8 02 00 00 00\neb 05\nb8 01 00 00 00\n48 81 c4 68 05 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p222
S'.text:0000000000404770\n.text:0000000000404771\n.text:0000000000404773\n.text:0000000000404775\n.text:0000000000404777\n.text:0000000000404779\n.text:000000000040477a\n.text:0000000000404781\n.text:0000000000404784\n.text:000000000040478c\n.text:0000000000404794\n.text:000000000040479c\n.text:00000000004047a8\n.text:00000000004047b0\n.text:00000000004047ba\n.text:00000000004047be\n.text:00000000004047c6\n.text:00000000004047cb\n.text:00000000004047cf\n.text:00000000004047d7\n.text:00000000004047dd\n.text:00000000004047df\n.text:00000000004047e2\n.text:00000000004047f0\n.text:00000000004047f3\n.text:00000000004047fa\n.text:00000000004047fd\n.text:00000000004047ff\n.text:0000000000404803\n.text:0000000000404805\n.text:000000000040480d\n.text:0000000000404812\n.text:0000000000404817\n.text:000000000040481a\n.text:000000000040481d\n.text:000000000040481f\n.text:0000000000404824\n.text:000000000040482b\n.text:000000000040482d\n.text:0000000000404830\n.text:0000000000404837\n.text:0000000000404839\n.text:000000000040483b\n.text:000000000040483e\n.text:0000000000404840\n.text:0000000000404843\n.text:0000000000404845\n.text:0000000000404848\n.text:000000000040484f\n.text:0000000000404851\n.text:0000000000404853\n.text:000000000040485a\n.text:000000000040485e\n.text:0000000000404862\n.text:0000000000404868\n.text:000000000040486a\n.text:0000000000404870\n.text:0000000000404877\n.text:0000000000404879\n.text:000000000040487f\n.text:0000000000404882\n.text:000000000040488a\n.text:000000000040488f\n.text:0000000000404892\n.text:0000000000404896\n.text:000000000040489a\n.text:000000000040489f\n.text:00000000004048a4\n.text:00000000004048a9\n.text:00000000004048ae\n.text:00000000004048b3\n.text:00000000004048b8\n.text:00000000004048bd\n.text:00000000004048c1\n.text:00000000004048c4\n.text:00000000004048ca\n.text:00000000004048d1\n.text:00000000004048d5\n.text:00000000004048da\n.text:00000000004048de\n.text:00000000004048e3\n.text:00000000004048e8\n.text:00000000004048ed\n.text:00000000004048f2\n.text:00000000004048f6\n.text:00000000004048fb\n.text:0000000000404900\n.text:0000000000404905\n.text:000000000040490a\n.text:000000000040490f\n.text:0000000000404917\n.text:000000000040491b\n.text:0000000000404923\n.text:000000000040492b\n.text:0000000000404933\n.text:0000000000404938\n.text:000000000040493d\n.text:0000000000404942\n.text:0000000000404946\n.text:000000000040494c\n.text:0000000000404951\n.text:0000000000404955\n.text:0000000000404959\n.text:000000000040495b\n.text:000000000040495d\n.text:000000000040495f\n.text:0000000000404961\n.text:0000000000404966\n.text:0000000000404969\n.text:000000000040496e\n.text:0000000000404972\n.text:0000000000404977\n.text:000000000040497b\n.text:0000000000404980\n.text:0000000000404983\n.text:0000000000404988\n.text:000000000040498d\n.text:0000000000404990\n.text:0000000000404995\n.text:0000000000404999\n.text:000000000040499e\n.text:00000000004049a2\n.text:00000000004049a7\n.text:00000000004049ab\n.text:00000000004049b0\n.text:00000000004049b4\n.text:00000000004049b6\n.text:00000000004049bb\n.text:00000000004049c0\n.text:00000000004049c4\n.text:00000000004049c6\n.text:00000000004049c8\n.text:00000000004049cd\n.text:00000000004049d0\n.text:00000000004049d5\n.text:00000000004049da\n.text:00000000004049df\n.text:00000000004049e2\n.text:00000000004049e7\n.text:00000000004049ea\n.text:00000000004049ef\n.text:00000000004049f2\n.text:00000000004049f7\n.text:00000000004049fa\n.text:00000000004049ff\n.text:0000000000404a04\n.text:0000000000404a09\n.text:0000000000404a10\n.text:0000000000404a15\n.text:0000000000404a18\n.text:0000000000404a1c\n.text:0000000000404a21\n.text:0000000000404a26\n.text:0000000000404a2a\n.text:0000000000404a2f\n.text:0000000000404a34\n.text:0000000000404a37\n.text:0000000000404a3c\n.text:0000000000404a41\n.text:0000000000404a46\n.text:0000000000404a4b\n.text:0000000000404a50\n.text:0000000000404a53\n.text:0000000000404a58\n.text:0000000000404a5d\n.text:0000000000404a62\n.text:0000000000404a67\n.text:0000000000404a6b\n.text:0000000000404a70\n.text:0000000000404a75\n.text:0000000000404a79\n.text:0000000000404a7e\n.text:0000000000404a81\n.text:0000000000404a86\n.text:0000000000404a8b\n.text:0000000000404a93\n.text:0000000000404a98\n.text:0000000000404a9c\n.text:0000000000404aa1\n.text:0000000000404aa5\n.text:0000000000404aaa\n.text:0000000000404aae\n.text:0000000000404ab1\n.text:0000000000404ab5\n.text:0000000000404aba\n.text:0000000000404abf\n.text:0000000000404ac2\n.text:0000000000404ac6\n.text:0000000000404acb\n.text:0000000000404ad0\n.text:0000000000404ad5\n.text:0000000000404ada\n.text:0000000000404adf\n.text:0000000000404ae4\n.text:0000000000404ae8\n.text:0000000000404aed\n.text:0000000000404af2\n.text:0000000000404af7\n.text:0000000000404afa\n.text:0000000000404aff\n.text:0000000000404b04\n.text:0000000000404b09\n.text:0000000000404b0e\n.text:0000000000404b13\n.text:0000000000404b16\n.text:0000000000404b1b\n.text:0000000000404b1f\n.text:0000000000404b21\n.text:0000000000404b26\n.text:0000000000404b2a\n.text:0000000000404b2f\n.text:0000000000404b33\n.text:0000000000404b38\n.text:0000000000404b3c\n.text:0000000000404b44\n.text:0000000000404b47\n.text:0000000000404b4c\n.text:0000000000404b53\n.text:0000000000404b58\n.text:0000000000404b5d\n.text:0000000000404b64\n.text:0000000000404b6b\n.text:0000000000404b70\n.text:0000000000404b75\n.text:0000000000404b7c\n.text:0000000000404b81\n.text:0000000000404b86\n.text:0000000000404b8d\n.text:0000000000404b92\n.text:0000000000404b97\n.text:0000000000404b9e\n.text:0000000000404ba3\n.text:0000000000404ba8\n.text:0000000000404baf\n.text:0000000000404bb4\n.text:0000000000404bb9\n.text:0000000000404bc0\n.text:0000000000404bc5\n.text:0000000000404bca\n.text:0000000000404bce\n.text:0000000000404bd0\n.text:0000000000404bd2\n.text:0000000000404bd7\n.text:0000000000404bda\n.text:0000000000404bdf\n.text:0000000000404be4\n.text:0000000000404be9\n.text:0000000000404bec\n.text:0000000000404bf1\n.text:0000000000404bf4\n.text:0000000000404bf9\n.text:0000000000404bfc\n.text:0000000000404c01\n.text:0000000000404c04\n.text:0000000000404c09\n.text:0000000000404c0e\n.text:0000000000404c13\n.text:0000000000404c1a\n.text:0000000000404c1e\n.text:0000000000404c20\n.text:0000000000404c25\n.text:0000000000404c28\n.text:0000000000404c2d\n.text:0000000000404c32\n.text:0000000000404c35\n.text:0000000000404c3a\n.text:0000000000404c3f\n.text:0000000000404c44\n.text:0000000000404c49\n.text:0000000000404c4e\n.text:0000000000404c51\n.text:0000000000404c53\n.text:0000000000404c58\n.text:0000000000404c5f\n.text:0000000000404c66\n.text:0000000000404c6a\n.text:0000000000404c6f\n.text:0000000000404c73\n.text:0000000000404c78\n.text:0000000000404c7d\n.text:0000000000404c82\n.text:0000000000404c85\n.text:0000000000404c8a\n.text:0000000000404c8f\n.text:0000000000404c94\n.text:0000000000404c97\n.text:0000000000404c9c\n.text:0000000000404ca1\n.text:0000000000404ca6\n.text:0000000000404cab\n.text:0000000000404cae\n.text:0000000000404cb3\n.text:0000000000404cb6\n.text:0000000000404cbb\n.text:0000000000404cc0\n.text:0000000000404cc7\n.text:0000000000404ccb\n.text:0000000000404ccd\n.text:0000000000404cd2\n.text:0000000000404cd5\n.text:0000000000404cda\n.text:0000000000404cdf\n.text:0000000000404ce2\n.text:0000000000404ce7\n.text:0000000000404cec\n.text:0000000000404cf1\n.text:0000000000404cf6\n.text:0000000000404cfb\n.text:0000000000404cfe\n.text:0000000000404d00\n.text:0000000000404d05\n.text:0000000000404d0c\n.text:0000000000404d13\n.text:0000000000404d17\n.text:0000000000404d1c\n.text:0000000000404d20\n.text:0000000000404d25\n.text:0000000000404d2a\n.text:0000000000404d2f\n.text:0000000000404d32\n.text:0000000000404d37\n.text:0000000000404d3c\n.text:0000000000404d41\n.text:0000000000404d44\n.text:0000000000404d49\n.text:0000000000404d4e\n.text:0000000000404d53\n.text:0000000000404d58\n.text:0000000000404d5d\n.text:0000000000404d64\n.text:0000000000404d69\n.text:0000000000404d6c\n.text:0000000000404d71\n.text:0000000000404d74\n.text:0000000000404d76\n.text:0000000000404d79\n.text:0000000000404d7c\n.text:0000000000404d83\n.text:0000000000404d88\n.text:0000000000404d8d\n.text:0000000000404d94\n.text:0000000000404d96\n.text:0000000000404d9b\n.text:0000000000404d9e\n.text:0000000000404da5\n.text:0000000000404daa\n.text:0000000000404db1\n.text:0000000000404db6\n.text:0000000000404db9\n.text:0000000000404dbe\n.text:0000000000404dc3\n.text:0000000000404dcb\n.text:0000000000404dd0\n.text:0000000000404dd5\n.text:0000000000404dda\n.text:0000000000404de2\n.text:0000000000404de6\n.text:0000000000404deb\n.text:0000000000404def\n.text:0000000000404df4\n.text:0000000000404df9\n.text:0000000000404dfe\n.text:0000000000404e03\n.text:0000000000404e07\n.text:0000000000404e0c\n.text:0000000000404e11\n.text:0000000000404e16\n.text:0000000000404e1b\n.text:0000000000404e20\n.text:0000000000404e23\n.text:0000000000404e28\n.text:0000000000404e2d\n.text:0000000000404e32\n.text:0000000000404e35\n.text:0000000000404e3a\n.text:0000000000404e3f\n.text:0000000000404e44\n.text:0000000000404e49\n.text:0000000000404e4e\n.text:0000000000404e53\n.text:0000000000404e57\n.text:0000000000404e5c\n.text:0000000000404e61\n.text:0000000000404e64\n.text:0000000000404e68\n.text:0000000000404e6d\n.text:0000000000404e72\n.text:0000000000404e76\n.text:0000000000404e7b\n.text:0000000000404e80\n.text:0000000000404e85\n.text:0000000000404e88\n.text:0000000000404e8d\n.text:0000000000404e92\n.text:0000000000404e97\n.text:0000000000404e9c\n.text:0000000000404ea1\n.text:0000000000404ea4\n.text:0000000000404ea9\n.text:0000000000404eae\n.text:0000000000404eb3\n.text:0000000000404eb8\n.text:0000000000404eba\n.text:0000000000404ebe\n.text:0000000000404ec2\n.text:0000000000404ec7\n.text:0000000000404ecb\n.text:0000000000404ed0\n.text:0000000000404ed5\n.text:0000000000404edd\n.text:0000000000404ee1\n.text:0000000000404ee4\n.text:0000000000404ee9\n.text:0000000000404eed\n.text:0000000000404ef2\n.text:0000000000404ef6\n.text:0000000000404ef9\n.text:0000000000404efc\n.text:0000000000404f01\n.text:0000000000404f09\n.text:0000000000404f0f\n.text:0000000000404f16\n.text:0000000000404f1e\n.text:0000000000404f22\n.text:0000000000404f2a\n.text:0000000000404f2d\n.text:0000000000404f31\n.text:0000000000404f33\n.text:0000000000404f37\n.text:0000000000404f3c\n.text:0000000000404f40\n.text:0000000000404f44\n.text:0000000000404f48\n.text:0000000000404f4a\n.text:0000000000404f4e\n.text:0000000000404f52\n.text:0000000000404f56\n.text:0000000000404f5a\n.text:0000000000404f5f\n.text:0000000000404f63\n.text:0000000000404f68\n.text:0000000000404f6c\n.text:0000000000404f6e\n.text:0000000000404f70\n.text:0000000000404f74\n.text:0000000000404f78\n.text:0000000000404f7c\n.text:0000000000404f80\n.text:0000000000404f84\n.text:0000000000404f88\n.text:0000000000404f8d\n.text:0000000000404f91\n.text:0000000000404f96\n.text:0000000000404f9a\n.text:0000000000404f9e\n.text:0000000000404fa2\n.text:0000000000404fa7\n.text:0000000000404fae\n.text:0000000000404fb3\n.text:0000000000404fb7\n.text:0000000000404fbc\n.text:0000000000404fc0\n.text:0000000000404fc4\n.text:0000000000404fc8\n.text:0000000000404fcd\n.text:0000000000404fd1\n.text:0000000000404fd9\n.text:0000000000404fdd\n.text:0000000000404fe2\n.text:0000000000404fe5\n.text:0000000000404fe7\n.text:0000000000404fe9\n.text:0000000000404fed\n.text:0000000000404ff2\n.text:0000000000404ff6\n.text:0000000000404ffa\n.text:0000000000404ffe\n.text:0000000000405000\n.text:0000000000405002\n.text:0000000000405007\n.text:0000000000405009\n.text:000000000040500e\n.text:0000000000405010\n.text:0000000000405012\n.text:0000000000405014\n.text:0000000000405017\n.text:000000000040501c\n.text:000000000040501e\n.text:0000000000405020\n.text:0000000000405022\n.text:0000000000405027\n.text:0000000000405029\n.text:000000000040502d\n.text:000000000040502f\n.text:0000000000405034\n.text:0000000000405039\n.text:000000000040503b\n.text:000000000040503d\n.text:000000000040503f\n.text:0000000000405042\n.text:0000000000405045\n.text:0000000000405048\n.text:000000000040504b\n.text:000000000040504e\n.text:0000000000405052\n.text:0000000000405057\n.text:000000000040505c\n.text:0000000000405061\n.text:0000000000405066\n.text:000000000040506b\n.text:0000000000405070\n.text:0000000000405075\n.text:000000000040507a\n.text:000000000040507f\n.text:0000000000405087\n.text:000000000040508e\n.text:0000000000405097\n.text:0000000000405099\n.text:000000000040509c\n.text:000000000040509e\n.text:00000000004050a1\n.text:00000000004050a8\n.text:00000000004050aa\n.text:00000000004050ac\n.text:00000000004050b3\n.text:00000000004050c0\n.text:00000000004050c7\n.text:00000000004050d0\n.text:00000000004050d3\n.text:00000000004050d7\n.text:00000000004050da\n.text:00000000004050e0\n.text:00000000004050e5\n.text:00000000004050eb\n.text:00000000004050ed\n.text:00000000004050ef\n.text:00000000004050f1\n.text:00000000004050f3\n.text:00000000004050f8\n.text:00000000004050fd\n.text:0000000000405101\n.text:0000000000405103\n.text:0000000000405109\n.text:000000000040510b\n.text:000000000040510d\n.text:000000000040510f\n.text:0000000000405111\n.text:0000000000405116\n.text:0000000000405119\n.text:000000000040511e\n.text:0000000000405122\n.text:0000000000405127\n.text:000000000040512b\n.text:000000000040512f\n.text:0000000000405134\n.text:0000000000405139\n.text:000000000040513e\n.text:0000000000405143\n.text:0000000000405148\n.text:000000000040514d\n.text:0000000000405150\n.text:0000000000405155\n.text:000000000040515a\n.text:000000000040515f\n.text:0000000000405163\n.text:0000000000405168\n.text:000000000040516d\n.text:0000000000405171\n.text:0000000000405176\n.text:000000000040517b\n.text:0000000000405180\n.text:0000000000405185\n.text:000000000040518a\n.text:000000000040518d\n.text:0000000000405192\n.text:0000000000405195\n.text:000000000040519a\n.text:000000000040519e\n.text:00000000004051a3\n.text:00000000004051a7\n.text:00000000004051ac\n.text:00000000004051b1\n.text:00000000004051b6\n.text:00000000004051bb\n.text:00000000004051bf\n.text:00000000004051c4\n.text:00000000004051c9\n.text:00000000004051ce\n.text:00000000004051d1\n.text:00000000004051d6\n.text:00000000004051d9\n.text:00000000004051de\n.text:00000000004051e5\n.text:00000000004051ea\n.text:00000000004051ee\n.text:00000000004051f3\n.text:00000000004051fa\n.text:00000000004051ff\n.text:0000000000405203\n.text:0000000000405207\n.text:000000000040520b\n.text:000000000040520f\n.text:0000000000405217\n.text:000000000040521b\n.text:000000000040521f\n.text:0000000000405222\n.text:0000000000405230\n.text:0000000000405233\n.text:0000000000405239\n.text:000000000040523b\n.text:000000000040523d\n.text:0000000000405242\n.text:0000000000405244\n.text:0000000000405249\n.text:0000000000405250\n.text:0000000000405251\n.text:0000000000405253\n.text:0000000000405255\n.text:0000000000405257\n.text:0000000000405259\n.text:000000000040525a\n'
p223
tp224
sS'batch_convert'
p225
(S'\n__stdcall batch_convert(char * input_filename, char * format, timezone_t tz)\n'
p226
V\u000a_Bool batch_convert(char *input_filename,char *format,timezone_t tz)\u000a\u000a{\u000a  uint uVar1;\u000a  _Bool _Var2;\u000a  byte bVar3;\u000a  int iVar4;\u000a  uint *puVar5;\u000a  char *pcVar6;\u000a  __ssize_t _Var7;\u000a  undefined8 uVar8;\u000a  FILE *fp;\u000a  timespec when;\u000a  char *local_68;\u000a  size_t local_60;\u000a  char *local_58;\u000a  char *local_50;\u000a  timezone_t local_48;\u000a  timespec local_40;\u000a  \u000a  if ((*input_filename == '-') && (input_filename[1] == 0)) {\u000a    local_50 = format;\u000a    local_48 = tz;\u000a    input_filename = (char *)dcgettext(0,"standard input",5);\u000a    fp = stdin;\u000a  }\u000a  else {\u000a    local_50 = format;\u000a    local_48 = tz;\u000a    fp = (FILE *)fopen(input_filename,"r");\u000a    if (fp == (FILE *)0x0) {\u000a      puVar5 = (uint *)__errno_location();\u000a      uVar1 = *puVar5;\u000a      pcVar6 = quotearg_n_style_colon((char *)0x0);\u000a      error(1,(ulong)uVar1,&DAT_0040b727,pcVar6);\u000a      fp = (FILE *)0x0;\u000a    }\u000a  }\u000a  local_68 = (char *)0x0;\u000a  local_60 = 0;\u000a  _Var7 = getline(&local_68,&local_60,(FILE *)fp);\u000a  bVar3 = 1;\u000a  local_58 = input_filename;\u000a  if (-1 < _Var7) {\u000a    local_58 = input_filename;\u000a    do {\u000a      _Var2 = parse_datetime(&local_40,local_68,(timespec *)0x0);\u000a      if (_Var2 == false) {\u000a        if (local_68[_Var7 + -1] == '\u005cn') {\u000a          local_68[_Var7 + -1] = 0;\u000a        }\u000a        uVar8 = dcgettext(0,"invalid date %s",5);\u000a        pcVar6 = quote(local_68);\u000a        error(0,0,uVar8,pcVar6);\u000a        bVar3 = 0;\u000a      }\u000a      else {\u000a        _Var2 = show_date(local_50,local_40.tv_sec);\u000a        bVar3 = _Var2 & bVar3;\u000a      }\u000a      _Var7 = getline(&local_68,&local_60,(FILE *)fp);\u000a    } while (-1 < _Var7);\u000a  }\u000a  iVar4 = rpl_fclose(fp);\u000a  if (iVar4 == -1) {\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    pcVar6 = quotearg_n_style_colon((char *)0x0);\u000a    error(1,(ulong)uVar1,&DAT_0040b727,pcVar6);\u000a  }\u000a  free(local_68);\u000a  return (_Bool)bVar3;\u000a}\u000a\u000a
p227
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV qword ptr [RSP + 0x20],RDX\nMOV qword ptr [RSP + 0x18],RSI\nMOV RBP,RDI\nCMP byte ptr [RBP],0x2d\nJNZ 0x00402707\nCMP byte ptr [RBP + 0x1],0x0\nJZ 0x0040274d\nMOV ESI,0x40b3bf\nMOV RDI,RBP\nCALL 0x00401ae0\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x00402768\nCALL 0x00401760\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x00407c60\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40b727\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401ab0\nJMP 0x00402768\nXOR EDI,EDI\nMOV ESI,0x40b6a4\nMOV EDX,0x5\nCALL 0x00401820\nMOV RBP,RAX\nMOV R13,qword ptr [0x006102f0]\nMOV qword ptr [RSP],0x0\nMOV qword ptr [RSP + 0x8],0x0\nMOV RDI,RSP\nLEA RSI,[RSP + 0x8]\nMOV RDX,R13\nCALL 0x00401b10\nMOV R12,RAX\nTEST R12,R12\nMOV qword ptr [RSP + 0x10],RBP\nMOV R15B,0x1\nJS 0x00402859\nLEA R14,[RSP + 0x28]\nMOV RBX,RSP\nLEA RBP,[RSP + 0x8]\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,qword ptr [RSP]\nXOR EDX,EDX\nMOV RDI,R14\nCALL 0x00405840\nTEST AL,AL\nJZ 0x004027f0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV RDX,qword ptr [RSP + 0x30]\nMOV RDI,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP + 0x20]\nCALL 0x004028b0\nAND AL,R15B\nMOV R15B,AL\nJMP 0x0040283f\nMOV R15,R13\nMOV R13,RBP\nMOV RAX,qword ptr [RSP]\nCMP byte ptr [RAX + R12*0x1 + -0x1],0xa\nJNZ 0x00402808\nMOV byte ptr [RAX + R12*0x1 + -0x1],0x0\nXOR EDI,EDI\nMOV ESI,0x40b47e\nMOV EDX,0x5\nCALL 0x00401820\nMOV RBP,RAX\nMOV RDI,qword ptr [RSP]\nCALL 0x00407da0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBP\nCALL 0x00401ab0\nMOV RBP,R13\nMOV R13,R15\nXOR R15D,R15D\nMOV RDI,RBX\nMOV RSI,RBP\nMOV RDX,R13\nCALL 0x00401b10\nMOV R12,RAX\nTEST R12,R12\nJNS 0x004027b0\nMOV RDI,R13\nCALL 0x004089d0\nCMP EAX,-0x1\nJNZ 0x00402894\nCALL 0x00401760\nMOV EBP,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,qword ptr [RSP + 0x10]\nCALL 0x00407c60\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40b727\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401ab0\nMOV RDI,qword ptr [RSP]\nCALL 0x00401730\nMOV EAX,R15D\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p228
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 54 24 20\n48 89 74 24 18\n48 89 fd\n80 7d 00 2d\n75 06\n80 7d 01 00\n74 46\nbe bf b3 40 00\n48 89 ef\ne8 cc f3 ff ff\n49 89 c5\n4d 85 ed\n75 4c\ne8 3f f0 ff ff\n8b 18\n45 31 ed\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 2b 55 00 00\n48 89 c1\nbf 01 00 00 00\nba 27 b7 40 00\n31 c0\n89 de\ne8 65 f3 ff ff\neb 1b\n31 ff\nbe a4 b6 40 00\nba 05 00 00 00\ne8 c2 f0 ff ff\n48 89 c5\n4c 8b 2d 88 db 20 00\n48 c7 04 24 00 00 00 00\n48 c7 44 24 08 00 00 00 00\n48 89 e7\n48 8d 74 24 08\n4c 89 ea\ne8 87 f3 ff ff\n49 89 c4\n4d 85 e4\n48 89 6c 24 10\n41 b7 01\n0f 88 bc 00 00 00\n4c 8d 74 24 28\n48 89 e3\n48 8d 6c 24 08\n66 0f 1f 44 00 00\n48 8b 34 24\n31 d2\n4c 89 f7\ne8 82 30 00 00\n84 c0\n74 2e\n48 8b 74 24 28\n48 8b 54 24 30\n48 8b 7c 24 18\n48 8b 4c 24 20\ne8 d5 00 00 00\n44 20 f8\n41 88 c7\neb 5c\n4d 89 ef\n49 89 ed\n48 8b 04 24\n42 80 7c 20 ff 0a\n75 06\n42 c6 44 20 ff 00\n31 ff\nbe 7e b4 40 00\nba 05 00 00 00\ne8 07 f0 ff ff\n48 89 c5\n48 8b 3c 24\ne8 7b 55 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ea\ne8 7a f2 ff ff\n4c 89 ed\n4d 89 fd\n45 31 ff\n48 89 df\n48 89 ee\n4c 89 ea\ne8 c3 f2 ff ff\n49 89 c4\n4d 85 e4\n0f 89 57 ff ff ff\n4c 89 ef\ne8 6f 61 00 00\n83 f8 ff\n75 2e\ne8 f5 ee ff ff\n8b 28\n31 ff\nbe 03 00 00 00\n48 8b 54 24 10\ne8 e2 53 00 00\n48 89 c1\nbf 01 00 00 00\nba 27 b7 40 00\n31 c0\n89 ee\ne8 1c f2 ff ff\n48 8b 3c 24\ne8 93 ee ff ff\n44 89 f8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p229
S'.text:00000000004026e0\n.text:00000000004026e1\n.text:00000000004026e3\n.text:00000000004026e5\n.text:00000000004026e7\n.text:00000000004026e9\n.text:00000000004026ea\n.text:00000000004026ee\n.text:00000000004026f3\n.text:00000000004026f8\n.text:00000000004026fb\n.text:00000000004026ff\n.text:0000000000402701\n.text:0000000000402705\n.text:0000000000402707\n.text:000000000040270c\n.text:000000000040270f\n.text:0000000000402714\n.text:0000000000402717\n.text:000000000040271a\n.text:000000000040271c\n.text:0000000000402721\n.text:0000000000402723\n.text:0000000000402726\n.text:0000000000402728\n.text:000000000040272d\n.text:0000000000402730\n.text:0000000000402735\n.text:0000000000402738\n.text:000000000040273d\n.text:0000000000402742\n.text:0000000000402744\n.text:0000000000402746\n.text:000000000040274b\n.text:000000000040274d\n.text:000000000040274f\n.text:0000000000402754\n.text:0000000000402759\n.text:000000000040275e\n.text:0000000000402761\n.text:0000000000402768\n.text:0000000000402770\n.text:0000000000402779\n.text:000000000040277c\n.text:0000000000402781\n.text:0000000000402784\n.text:0000000000402789\n.text:000000000040278c\n.text:000000000040278f\n.text:0000000000402794\n.text:0000000000402797\n.text:000000000040279d\n.text:00000000004027a2\n.text:00000000004027a5\n.text:00000000004027aa\n.text:00000000004027b0\n.text:00000000004027b4\n.text:00000000004027b6\n.text:00000000004027b9\n.text:00000000004027be\n.text:00000000004027c0\n.text:00000000004027c2\n.text:00000000004027c7\n.text:00000000004027cc\n.text:00000000004027d1\n.text:00000000004027d6\n.text:00000000004027db\n.text:00000000004027de\n.text:00000000004027e1\n.text:00000000004027f0\n.text:00000000004027f3\n.text:00000000004027f6\n.text:00000000004027fa\n.text:0000000000402800\n.text:0000000000402802\n.text:0000000000402808\n.text:000000000040280a\n.text:000000000040280f\n.text:0000000000402814\n.text:0000000000402819\n.text:000000000040281c\n.text:0000000000402820\n.text:0000000000402825\n.text:0000000000402828\n.text:000000000040282a\n.text:000000000040282c\n.text:000000000040282e\n.text:0000000000402831\n.text:0000000000402836\n.text:0000000000402839\n.text:000000000040283c\n.text:000000000040283f\n.text:0000000000402842\n.text:0000000000402845\n.text:0000000000402848\n.text:000000000040284d\n.text:0000000000402850\n.text:0000000000402853\n.text:0000000000402859\n.text:000000000040285c\n.text:0000000000402861\n.text:0000000000402864\n.text:0000000000402866\n.text:000000000040286b\n.text:000000000040286d\n.text:000000000040286f\n.text:0000000000402874\n.text:0000000000402879\n.text:000000000040287e\n.text:0000000000402881\n.text:0000000000402886\n.text:000000000040288b\n.text:000000000040288d\n.text:000000000040288f\n.text:0000000000402894\n.text:0000000000402898\n.text:000000000040289d\n.text:00000000004028a0\n.text:00000000004028a4\n.text:00000000004028a5\n.text:00000000004028a7\n.text:00000000004028a9\n.text:00000000004028ab\n.text:00000000004028ad\n.text:00000000004028ae\n'
p230
tp231
sS'mbrtowc'
p232
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_006100c0)();\u000a  return sVar1;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x006100c0]\n'
p235
S'ff 25 5a e8 20 00\n'
p236
S'.plt:0000000000401860\n'
p237
tp238
sS'time_t_add_ok'
p239
(S'\n__stdcall time_t_add_ok(time_t a, time_t b)\n'
p240
V\u000aint time_t_add_ok(time_t a,time_t b)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = time_t_avg(a,b);\u000a  return (int)((uint)((ulong)(tVar1 + 0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p241
S'PUSH RAX\nCALL 0x00409240\nMOV RCX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nPOP RCX\nRET\n'
p242
S'50\ne8 1a 00 00 00\n48 b9 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\n59\nc3\n'
p243
S'.text:0000000000409220\n.text:0000000000409221\n.text:0000000000409226\n.text:0000000000409230\n.text:0000000000409233\n.text:0000000000409237\n.text:000000000040923a\n.text:000000000040923b\n'
p244
tp245
sS'setlocale'
p246
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p247
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_006101c8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x006101c8]\n'
p249
S'ff 25 52 e7 20 00\n'
p250
S'.plt:0000000000401a70\n'
p251
tp252
sS'c_toupper'
p253
(S'\n__stdcall c_toupper()\n'
p254
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p255
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p256
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p257
S'.text:0000000000409850\n.text:0000000000409853\n.text:0000000000409856\n.text:0000000000409859\n.text:000000000040985c\n'
p258
tp259
sS'mbsinit'
p260
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p261
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_00610238)();\u000a  return iVar1;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x00610238]\n'
p263
S'ff 25 e2 e6 20 00\n'
p264
S'.plt:0000000000401b50\n'
p265
tp266
sS'dcgettext'
p267
(S'\n__stdcall dcgettext()\n'
p268
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_006100a0)();\u000a  return;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006100a0]\n'
p270
S'ff 25 7a e8 20 00\n'
p271
S'.plt:0000000000401820\n'
p272
tp273
sS'lookup_word'
p274
(S'\n__stdcall lookup_word(parser_control * pc, char * word)\n'
p275
V\u000atable * lookup_word(parser_control *pc,char *word)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  int iVar3;\u000a  size_t sVar4;\u000a  table *ptVar5;\u000a  char *pcVar6;\u000a  char *__s2;\u000a  bool bVar7;\u000a  \u000a  if (*word != 0) {\u000a    __s2 = word + 1;\u000a    do {\u000a      iVar3 = c_toupper();\u000a      __s2[-1] = (char)iVar3;\u000a      cVar1 = *__s2;\u000a      __s2 = __s2 + 1;\u000a    } while (cVar1 != 0);\u000a  }\u000a  ptVar5 = meridian_table;\u000a  __s2 = "AM";\u000a  do {\u000a    iVar3 = strcmp(word,__s2);\u000a    if (iVar3 == 0) {\u000a      return ptVar5;\u000a    }\u000a    __s2 = ptVar5[1].name;\u000a    ptVar5 = ptVar5 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  sVar4 = strlen(word);\u000a  if (sVar4 == 3) {\u000a    bVar7 = true;\u000a  }\u000a  else {\u000a    if (sVar4 == 4) {\u000a      bVar7 = word[3] == '.';\u000a    }\u000a    else {\u000a      bVar7 = false;\u000a    }\u000a  }\u000a  ptVar5 = month_and_day_table;\u000a  __s2 = "JANUARY";\u000a  do {\u000a    if (bVar7) {\u000a      iVar3 = strncmp(word,__s2,3);\u000a    }\u000a    else {\u000a      iVar3 = strcmp(word,__s2);\u000a    }\u000a    if (iVar3 == 0) {\u000a      return ptVar5;\u000a    }\u000a    __s2 = ptVar5[1].name;\u000a    ptVar5 = ptVar5 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  ptVar5 = lookup_zone(pc,word);\u000a  if (ptVar5 == (table *)0x0) {\u000a    iVar3 = strcmp(word,"DST");\u000a    if (iVar3 == 0) {\u000a      ptVar5 = dst_table;\u000a    }\u000a    else {\u000a      ptVar5 = time_units_table;\u000a      __s2 = "YEAR";\u000a      do {\u000a        iVar3 = strcmp(word,__s2);\u000a        if (iVar3 == 0) {\u000a          return ptVar5;\u000a        }\u000a        __s2 = ptVar5[1].name;\u000a        ptVar5 = ptVar5 + 1;\u000a      } while (__s2 != (char *)0x0);\u000a      if (word[sVar4 - 1] == 'S') {\u000a        word[sVar4 - 1] = 0;\u000a        ptVar5 = time_units_table;\u000a        __s2 = "YEAR";\u000a        do {\u000a          iVar3 = strcmp(word,__s2);\u000a          if (iVar3 == 0) {\u000a            return ptVar5;\u000a          }\u000a          __s2 = ptVar5[1].name;\u000a          ptVar5 = ptVar5 + 1;\u000a        } while (__s2 != (char *)0x0);\u000a        word[sVar4 - 1] = 'S';\u000a      }\u000a      ptVar5 = relative_time_table;\u000a      __s2 = "TOMORROW";\u000a      do {\u000a        iVar3 = strcmp(word,__s2);\u000a        if (iVar3 == 0) {\u000a          return ptVar5;\u000a        }\u000a        __s2 = ptVar5[1].name;\u000a        ptVar5 = ptVar5 + 1;\u000a      } while (__s2 != (char *)0x0);\u000a      if (sVar4 == 1) {\u000a        ptVar5 = military_table;\u000a        __s2 = "A";\u000a        do {\u000a          if (*word == *__s2) {\u000a            return ptVar5;\u000a          }\u000a          __s2 = ptVar5[1].name;\u000a          ptVar5 = ptVar5 + 1;\u000a        } while (__s2 != (char *)0x0);\u000a      }\u000a      if (*word != 0) {\u000a        __s2 = word + 1;\u000a        pcVar6 = word;\u000a        bVar7 = false;\u000a        do {\u000a          cVar1 = *__s2;\u000a          bVar2 = true;\u000a          if (__s2[-1] != '.') {\u000a            pcVar6 = pcVar6 + 1;\u000a            bVar2 = bVar7;\u000a          }\u000a          *pcVar6 = cVar1;\u000a          __s2 = __s2 + 1;\u000a          bVar7 = bVar2;\u000a        } while (cVar1 != 0);\u000a        if ((bVar2) && (ptVar5 = lookup_zone(pc,word), ptVar5 != (table *)0x0)) {\u000a          return ptVar5;\u000a        }\u000a      }\u000a      ptVar5 = (table *)0x0;\u000a    }\u000a  }\u000a  return ptVar5;\u000a}\u000a\u000a
p276
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV AL,byte ptr [R15]\nTEST AL,AL\nJZ 0x004062d5\nLEA RBX,[R15 + 0x1]\nNOP dword ptr [RAX]\nMOVZX EDI,AL\nCALL 0x00409850\nMOV byte ptr [RBX + -0x1],AL\nMOVZX EAX,byte ptr [RBX]\nINC RBX\nTEST AL,AL\nJNZ 0x004062c0\nMOV EBX,0x40c300\nMOV ESI,0x40cc51\nNOP\nMOV RDI,R15\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040637c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x004062e0\nMOV RDI,R15\nCALL 0x00401840\nMOV R12,RAX\nCMP R12,0x3\nJZ 0x0040631f\nCMP R12,0x4\nJNZ 0x00406324\nCMP byte ptr [R15 + 0x3],0x2e\nSETZ BPL\nJMP 0x00406326\nMOV BPL,0x1\nJMP 0x00406326\nXOR EBP,EBP\nMOV EBX,0x40c350\nMOV ESI,0x40cc61\nTEST BPL,BPL\nJZ 0x00406350\nMOV EDX,0x3\nMOV RDI,R15\nCALL 0x00401770\nTEST EAX,EAX\nJNZ 0x0040635c\nJMP 0x0040637c\nMOV RDI,R15\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040637c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00406330\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x004064e0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00406388\nMOV RAX,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV ESI,0x40cdd1\nMOV RDI,R15\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x004064ba\nMOV EBX,0x40c4f0\nMOV ESI,0x40cdd5\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,R15\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040637c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x004063b0\nCMP byte ptr [R15 + R12*0x1 + -0x1],0x53\nJNZ 0x0040640f\nMOV byte ptr [R15 + R12*0x1 + -0x1],0x0\nMOV EBX,0x40c4f0\nMOV ESI,0x40cdd5\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R15\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040637c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x004063f0\nMOV byte ptr [R15 + R12*0x1 + -0x1],0x53\nMOV EBX,0x40c5a0\nMOV ESI,0x40ce0a\nNOP dword ptr [RAX]\nMOV RDI,R15\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040637c\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00406420\nCMP R12,0x1\nJNZ 0x00406465\nMOV EBX,0x40c6f0\nMOV ECX,0x40ce8b\nMOV AL,byte ptr [R15]\nCMP AL,byte ptr [RCX]\nJZ 0x0040637c\nMOV RCX,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RCX,RCX\nJNZ 0x00406450\nCMP byte ptr [R15],0x0\nJZ 0x004064b3\nLEA RAX,[R15 + 0x1]\nXOR EDX,EDX\nMOV RCX,R15\nLEA RDI,[RCX + 0x1]\nMOVZX EBX,byte ptr [RAX]\nCMP byte ptr [RAX + -0x1],0x2e\nMOV SIL,0x1\nJZ 0x00406486\nMOV ESI,EDX\nCMOVNZ RCX,RDI\nMOV byte ptr [RCX],BL\nINC RAX\nTEST BL,BL\nMOV DL,SIL\nJNZ 0x00406474\nTEST SIL,0x1\nJZ 0x004064b3\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x004064e0\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x0040637c\nXOR EBX,EBX\nJMP 0x0040637c\nMOV EBX,0x40c4e0\nJMP 0x0040637c\n'
p277
S'55\n41 57\n41 56\n41 54\n53\n49 89 f7\n49 89 fe\n41 8a 07\n84 c0\n74 20\n49 8d 5f 01\n0f 1f 80 00 00 00 00\n0f b6 f8\ne8 88 35 00 00\n88 43 ff\n0f b6 03\n48 ff c3\n84 c0\n75 eb\nbb 00 c3 40 00\nbe 51 cc 40 00\n90\n4c 89 ff\ne8 68 b6 ff ff\n85 c0\n0f 84 8c 00 00 00\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e3\n4c 89 ff\ne8 3b b5 ff ff\n49 89 c4\n49 83 fc 03\n74 11\n49 83 fc 04\n75 10\n41 80 7f 03 2e\n40 0f 94 c5\neb 07\n40 b5 01\neb 02\n31 ed\nbb 50 c3 40 00\nbe 61 cc 40 00\n40 84 ed\n74 1b\nba 03 00 00 00\n4c 89 ff\ne8 2e b4 ff ff\n85 c0\n75 16\neb 34\n4c 89 ff\ne8 f8 b5 ff ff\n85 c0\n74 20\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 c7\n4c 89 f7\n4c 89 fe\ne8 6c 01 00 00\n48 89 c3\n48 85 db\n74 0c\n48 89 d8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\nbe d1 cd 40 00\n4c 89 ff\ne8 bb b5 ff ff\n85 c0\n0f 84 1d 01 00 00\nbb f0 c4 40 00\nbe d5 cd 40 00\n66 0f 1f 84 00 00 00 00 00\n4c 89 ff\ne8 98 b5 ff ff\n85 c0\n74 c0\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n43 80 7c 27 ff 53\n75 3e\n43 c6 44 27 ff 00\nbb f0 c4 40 00\nbe d5 cd 40 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ff\ne8 58 b5 ff ff\n85 c0\n74 80\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n43 c6 44 27 ff 53\nbb a0 c5 40 00\nbe 0a ce 40 00\n0f 1f 80 00 00 00 00\n4c 89 ff\ne8 28 b5 ff ff\n85 c0\n0f 84 4c ff ff ff\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e3\n49 83 fc 01\n75 22\nbb f0 c6 40 00\nb9 8b ce 40 00\n41 8a 07\n3a 01\n0f 84 24 ff ff ff\n48 8b 4b 10\n48 83 c3 10\n48 85 c9\n75 eb\n41 80 3f 00\n74 48\n49 8d 47 01\n31 d2\n4c 89 f9\n48 8d 79 01\n0f b6 18\n80 78 ff 2e\n40 b6 01\n74 02\n89 d6\n48 0f 45 cf\n88 19\n48 ff c0\n84 db\n40 88 f2\n75 de\n40 f6 c6 01\n74 17\n4c 89 f7\n4c 89 fe\ne8 39 00 00 00\n48 89 c3\n48 85 db\n0f 85 c9 fe ff ff\n31 db\ne9 c2 fe ff ff\nbb e0 c4 40 00\ne9 b8 fe ff ff\n'
p278
S'.text:00000000004062a0\n.text:00000000004062a1\n.text:00000000004062a3\n.text:00000000004062a5\n.text:00000000004062a7\n.text:00000000004062a8\n.text:00000000004062ab\n.text:00000000004062ae\n.text:00000000004062b1\n.text:00000000004062b3\n.text:00000000004062b5\n.text:00000000004062b9\n.text:00000000004062c0\n.text:00000000004062c3\n.text:00000000004062c8\n.text:00000000004062cb\n.text:00000000004062ce\n.text:00000000004062d1\n.text:00000000004062d3\n.text:00000000004062d5\n.text:00000000004062da\n.text:00000000004062df\n.text:00000000004062e0\n.text:00000000004062e3\n.text:00000000004062e8\n.text:00000000004062ea\n.text:00000000004062f0\n.text:00000000004062f4\n.text:00000000004062f8\n.text:00000000004062fb\n.text:00000000004062fd\n.text:0000000000406300\n.text:0000000000406305\n.text:0000000000406308\n.text:000000000040630c\n.text:000000000040630e\n.text:0000000000406312\n.text:0000000000406314\n.text:0000000000406319\n.text:000000000040631d\n.text:000000000040631f\n.text:0000000000406322\n.text:0000000000406324\n.text:0000000000406326\n.text:000000000040632b\n.text:0000000000406330\n.text:0000000000406333\n.text:0000000000406335\n.text:000000000040633a\n.text:000000000040633d\n.text:0000000000406342\n.text:0000000000406344\n.text:0000000000406346\n.text:0000000000406350\n.text:0000000000406353\n.text:0000000000406358\n.text:000000000040635a\n.text:000000000040635c\n.text:0000000000406360\n.text:0000000000406364\n.text:0000000000406367\n.text:0000000000406369\n.text:000000000040636c\n.text:000000000040636f\n.text:0000000000406374\n.text:0000000000406377\n.text:000000000040637a\n.text:000000000040637c\n.text:000000000040637f\n.text:0000000000406380\n.text:0000000000406382\n.text:0000000000406384\n.text:0000000000406386\n.text:0000000000406387\n.text:0000000000406388\n.text:000000000040638d\n.text:0000000000406390\n.text:0000000000406395\n.text:0000000000406397\n.text:000000000040639d\n.text:00000000004063a2\n.text:00000000004063a7\n.text:00000000004063b0\n.text:00000000004063b3\n.text:00000000004063b8\n.text:00000000004063ba\n.text:00000000004063bc\n.text:00000000004063c0\n.text:00000000004063c4\n.text:00000000004063c7\n.text:00000000004063c9\n.text:00000000004063cf\n.text:00000000004063d1\n.text:00000000004063d7\n.text:00000000004063dc\n.text:00000000004063e1\n.text:00000000004063f0\n.text:00000000004063f3\n.text:00000000004063f8\n.text:00000000004063fa\n.text:00000000004063fc\n.text:0000000000406400\n.text:0000000000406404\n.text:0000000000406407\n.text:0000000000406409\n.text:000000000040640f\n.text:0000000000406414\n.text:0000000000406419\n.text:0000000000406420\n.text:0000000000406423\n.text:0000000000406428\n.text:000000000040642a\n.text:0000000000406430\n.text:0000000000406434\n.text:0000000000406438\n.text:000000000040643b\n.text:000000000040643d\n.text:0000000000406441\n.text:0000000000406443\n.text:0000000000406448\n.text:000000000040644d\n.text:0000000000406450\n.text:0000000000406452\n.text:0000000000406458\n.text:000000000040645c\n.text:0000000000406460\n.text:0000000000406463\n.text:0000000000406465\n.text:0000000000406469\n.text:000000000040646b\n.text:000000000040646f\n.text:0000000000406471\n.text:0000000000406474\n.text:0000000000406478\n.text:000000000040647b\n.text:000000000040647f\n.text:0000000000406482\n.text:0000000000406484\n.text:0000000000406486\n.text:000000000040648a\n.text:000000000040648c\n.text:000000000040648f\n.text:0000000000406491\n.text:0000000000406494\n.text:0000000000406496\n.text:000000000040649a\n.text:000000000040649c\n.text:000000000040649f\n.text:00000000004064a2\n.text:00000000004064a7\n.text:00000000004064aa\n.text:00000000004064ad\n.text:00000000004064b3\n.text:00000000004064b5\n.text:00000000004064ba\n.text:00000000004064bf\n'
p279
tp280
sS'clock_settime'
p281
(S'\n__stdcall clock_settime(clockid_t __clock_id, timespec * __tp)\n'
p282
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint clock_settime(clockid_t __clock_id,timespec *__tp)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_clock_settime_006101a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x006101a8]\n'
p284
S'ff 25 72 e7 20 00\n'
p285
S'.plt:0000000000401a30\n'
p286
tp287
sS'parse_datetime'
p288
(S'\n__stdcall parse_datetime(timespec * result, char * p, timespec * now)\n'
p289
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000a_Bool parse_datetime(timespec *result,char *p,timespec *now)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  __syscall_slong_t _Var3;\u000a  ulong uVar4;\u000a  byte bVar5;\u000a  bool bVar6;\u000a  timespec *ptVar7;\u000a  _Bool _Var8;\u000a  int iVar9;\u000a  tm *ptVar10;\u000a  char *__value;\u000a  time_t t;\u000a  char *pcVar11;\u000a  long lVar12;\u000a  ulong n;\u000a  long lVar13;\u000a  char *__s1;\u000a  __time_t _Var14;\u000a  time_t probe;\u000a  parser_control pc;\u000a  timespec gettime_buffer;\u000a  char tz1buf [30];\u000a  char tz0buf [100];\u000a  char *local_268;\u000a  int local_258;\u000a  int local_254;\u000a  int local_250;\u000a  int local_24c;\u000a  int local_248;\u000a  int local_244;\u000a  int local_240;\u000a  int iStack572;\u000a  int local_238;\u000a  undefined4 uStack564;\u000a  undefined4 local_230;\u000a  undefined4 uStack556;\u000a  char *local_228;\u000a  timespec *local_220;\u000a  undefined8 local_218;\u000a  int local_210;\u000a  int iStack524;\u000a  int local_208;\u000a  int iStack516;\u000a  int iStack512;\u000a  int iStack508;\u000a  int local_1f8;\u000a  undefined4 uStack500;\u000a  undefined4 uStack496;\u000a  undefined4 uStack492;\u000a  char *local_1e8;\u000a  char *local_1d8;\u000a  long local_1d0;\u000a  int local_1c8;\u000a  int local_1c4;\u000a  long local_1c0;\u000a  int local_1b8;\u000a  undefined4 local_1b0;\u000a  undefined4 uStack428;\u000a  undefined8 local_1a8;\u000a  size_t local_1a0;\u000a  long local_198;\u000a  long local_190;\u000a  long local_188;\u000a  long local_180;\u000a  undefined8 local_178;\u000a  undefined8 local_170;\u000a  int local_168;\u000a  uint uStack356;\u000a  int local_160;\u000a  uint uStack348;\u000a  int local_158;\u000a  uint uStack340;\u000a  undefined4 local_150;\u000a  undefined4 uStack332;\u000a  undefined4 local_148;\u000a  undefined4 uStack324;\u000a  undefined2 local_140;\u000a  undefined2 uStack318;\u000a  undefined2 uStack316;\u000a  undefined2 uStack314;\u000a  undefined2 local_138;\u000a  undefined4 uStack310;\u000a  undefined2 uStack306;\u000a  _Bool local_130;\u000a  _Bool local_12f;\u000a  undefined4 local_128;\u000a  undefined4 uStack292;\u000a  undefined4 local_120;\u000a  undefined4 uStack284;\u000a  undefined4 local_118;\u000a  undefined4 uStack276;\u000a  undefined4 local_110;\u000a  undefined4 uStack268;\u000a  undefined4 local_108;\u000a  undefined4 uStack260;\u000a  undefined4 local_100;\u000a  undefined4 uStack252;\u000a  char *local_f8;\u000a  int local_f0;\u000a  int local_ec;\u000a  char *local_e8;\u000a  int local_e0;\u000a  int local_dc;\u000a  char *local_d8;\u000a  timespec local_c8;\u000a  char local_b8 [32];\u000a  char local_98 [104];\u000a  \u000a  if (now == (timespec *)0x0) {\u000a    now = &local_c8;\u000a    gettime(now);\u000a  }\u000a  _Var14 = now->tv_sec;\u000a  _Var3 = now->tv_nsec;\u000a  ptVar10 = localtime((time_t *)now);\u000a  if (ptVar10 == (tm *)0x0) {\u000a    return false;\u000a  }\u000a  pcVar11 = p + 3;\u000a  local_220 = result;\u000a  do {\u000a    __s1 = pcVar11;\u000a    _Var8 = c_isspace();\u000a    pcVar11 = __s1 + 1;\u000a  } while (_Var8 != false);\u000a  __s1 = __s1 + -3;\u000a  iVar9 = strncmp(__s1,"TZ=\u005c"",4);\u000a  if (iVar9 == 0) {\u000a    n = 1;\u000a    __value = pcVar11;\u000a    do {\u000a      cVar2 = *__value;\u000a      if (cVar2 == '\u005c\u005c') {\u000a        pcVar1 = __value + 1;\u000a        __value = __value + 1;\u000a        if ((*pcVar1 != '\u005c"') && (*pcVar1 != '\u005c\u005c')) break;\u000a      }\u000a      else {\u000a        if (cVar2 == 0) break;\u000a        if (cVar2 == '\u005c"') goto LAB_00405c6a;\u000a      }\u000a      __value = __value + 1;\u000a      n = n + 1;\u000a    } while( true );\u000a  }\u000a  local_268 = (char *)0x0;\u000a  bVar6 = false;\u000aLAB_004058d7:\u000a  local_1d8 = "0";\u000a  if (*__s1 != 0) {\u000a    local_1d8 = __s1;\u000a  }\u000a  local_1a8 = (long)ptVar10->tm_year + 0x76c;\u000a  local_1a0 = 0;\u000a  local_198 = (long)ptVar10->tm_mon + 1;\u000a  local_190 = (long)ptVar10->tm_mday;\u000a  local_188 = (long)ptVar10->tm_hour;\u000a  local_180 = (long)ptVar10->tm_min;\u000a  local_178 = (long)ptVar10->tm_sec;\u000a  local_238 = ptVar10->tm_isdst;\u000a  local_1b8 = 2;\u000a  local_138 = 0;\u000a  uStack310 = 0;\u000a  uStack306 = 0;\u000a  local_130 = false;\u000a  local_12f = false;\u000a  local_148 = 0;\u000a  uStack324 = 0;\u000a  local_140 = 0;\u000a  uStack318 = 0;\u000a  uStack316 = 0;\u000a  uStack314 = 0;\u000a  local_158 = 0;\u000a  uStack340 = 0;\u000a  local_150 = 0;\u000a  uStack332 = 0;\u000a  local_168 = 0;\u000a  uStack356 = 0;\u000a  local_160 = 0;\u000a  uStack348 = 0;\u000a  local_108 = 0;\u000a  uStack260 = 0;\u000a  local_100 = 0;\u000a  uStack252 = 0;\u000a  local_118 = 0;\u000a  uStack276 = 0;\u000a  local_110 = 0;\u000a  uStack268 = 0;\u000a  local_128 = 0;\u000a  uStack292 = 0;\u000a  local_120 = 0;\u000a  uStack284 = 0;\u000a  local_f8 = ptVar10->tm_zone;\u000a  local_f0 = 0x10d;\u000a  local_ec = ptVar10->tm_isdst;\u000a  local_e8 = (char *)0x0;\u000a  lVar12 = 1;\u000a  local_170 = _Var3;\u000a  do {\u000a    _Var14 = _Var14 + 0x76a700;\u000a    local_218 = _Var14;\u000a    ptVar10 = localtime(&local_218);\u000a    if (((ptVar10 != (tm *)0x0) && (ptVar10->tm_zone != (char *)0x0)) &&\u000a       (ptVar10->tm_isdst != local_ec)) {\u000a      local_e0 = 0x10d;\u000a      local_d8 = (char *)0x0;\u000a      local_e8 = ptVar10->tm_zone;\u000a      local_dc = ptVar10->tm_isdst;\u000a      break;\u000a    }\u000a    lVar12 = lVar12 + 1;\u000a  } while (lVar12 < 4);\u000a  if (((local_f8 != (char *)0x0) && (local_e8 != (char *)0x0)) &&\u000a     (iVar9 = strcmp(local_f8,local_e8), iVar9 == 0)) {\u000a    local_ec = -1;\u000a    local_e8 = (char *)0x0;\u000a  }\u000a  iVar9 = yyparse((parser_control *)&local_1d8);\u000a  if (iVar9 == 0) {\u000a    if (local_130 != false) {\u000a      *(int *)&local_220->tv_sec = (int)local_178;\u000a      *(undefined4 *)((long)&local_220->tv_sec + 4) = local_178._4_4_;\u000a      *(undefined4 *)&local_220->tv_nsec = (undefined4)local_170;\u000a      *(undefined4 *)((long)&local_220->tv_nsec + 4) = local_170._4_4_;\u000a      bVar5 = 1;\u000a      goto joined_r0x00406013;\u000a    }\u000a    if (1 < (CONCAT44(uStack252,local_100) + CONCAT44(uStack276,local_118) |\u000a            CONCAT44(uStack292,local_128) | CONCAT44(uStack260,local_108) |\u000a            CONCAT44(uStack284,local_120) | CONCAT44(uStack268,local_110))) goto LAB_00405af7;\u000a    lVar12 = to_year((textint)CONCAT816(local_1a0,\u000a                                        CONCAT412(local_1a8._4_4_,\u000a                                                  CONCAT48((undefined4)local_1a8,\u000a                                                           CONCAT44(uStack428,local_1b0)))));\u000a    local_244 = (int)lVar12 + -0x76c;\u000a    local_248 = (int)local_198 + -1;\u000a    local_24c = (int)local_190;\u000a    if ((CONCAT44(uStack260,local_108) != 0) ||\u000a       ((local_12f != false &&\u000a        ((CONCAT44(uStack284,local_120) | CONCAT44(uStack292,local_128)) == 0)))) {\u000a      local_250 = to_hour(local_188);\u000a      if (-1 < local_250) {\u000a        local_254 = (int)local_180;\u000a        local_258 = (int)local_178;\u000a        goto LAB_00405d5b;\u000a      }\u000aLAB_004060c5:\u000a      bVar5 = 0;\u000a      goto joined_r0x00406013;\u000a    }\u000a    local_258 = 0;\u000a    local_254 = 0;\u000a    local_250 = 0;\u000a    local_170 = 0;\u000aLAB_00405d5b:\u000a    ptVar7 = local_220;\u000a    if ((CONCAT44(uStack284,local_120) | CONCAT44(uStack292,local_128) |\u000a        CONCAT44(uStack260,local_108)) != 0) {\u000a      local_238 = -1;\u000a    }\u000a    if (CONCAT44(uStack276,local_118) != 0) {\u000a      local_238 = local_1c4;\u000a    }\u000a    local_1e8 = local_228;\u000a    local_1f8 = local_238;\u000a    uStack500 = uStack564;\u000a    uStack496 = local_230;\u000a    uStack492 = uStack556;\u000a    local_208 = local_248;\u000a    iStack516 = local_244;\u000a    iStack512 = local_240;\u000a    iStack508 = iStack572;\u000a    local_218 = CONCAT44(local_254,local_258);\u000a    local_210 = local_250;\u000a    iStack524 = local_24c;\u000a    t = rpl_mktime((tm *)&local_258);\u000a    _Var8 = mktime_ok((tm *)&local_218,(tm *)&local_258,t);\u000a    if (_Var8 != false) {\u000a      lVar12 = CONCAT44(uStack284,local_120);\u000ajoined_r0x00406136:\u000a      if ((lVar12 != 0) && (CONCAT44(uStack292,local_128) == 0)) {\u000a        iVar9 = (local_1c8 + 7) - local_240;\u000a        local_24c = iVar9 + (iVar9 / 7 + (iVar9 >> 0x1f) +\u000a                            (uint)((ulong)((long)iVar9 * 0x92492493) >> 0x3f)) * -7 + local_24c +\u000a                    ((int)local_1d0 - (uint)(0 < local_1d0 && local_1c8 != local_240)) * 7;\u000a        local_238 = -1;\u000a        t = rpl_mktime((tm *)&local_258);\u000a        if (t == -1) goto LAB_004060c5;\u000a      }\u000a      if ((CONCAT44(uStack348,local_160) | CONCAT44(uStack356,local_168) |\u000a          CONCAT44(uStack340,local_158)) == 0) {\u000aLAB_00405f49:\u000a        if (CONCAT44(uStack252,local_100) != 0) {\u000a          t = local_1c0 * -0x3c + t + CONCAT44(uStack556,local_230);\u000a        }\u000a        lVar13 = CONCAT26(uStack306,CONCAT42(uStack310,local_138)) + local_170;\u000a        lVar12 = lVar13 + (lVar13 / 1000000000 + (lVar13 >> 0x3f)) * -1000000000 + 1000000000;\u000a        lVar12 = lVar12 + (lVar12 / 1000000000 + (lVar12 >> 0x3f)) * -1000000000;\u000a        lVar13 = lVar13 - lVar12;\u000a        ptVar7->tv_sec =\u000a             CONCAT44(uStack324,local_148) * 0x3c + CONCAT44(uStack332,local_150) * 0xe10 + t +\u000a             CONCAT26(uStack314,CONCAT24(uStack316,CONCAT22(uStack318,local_140))) +\u000a             lVar13 / 1000000000 + (lVar13 >> 0x3f);\u000a        ptVar7->tv_nsec = lVar12;\u000a        bVar5 = 1;\u000a        goto joined_r0x00406013;\u000a      }\u000a      if ((uStack340 >> 0x1f ^ (uint)(local_158 + local_24c < local_24c) |\u000a          uStack348 >> 0x1f ^ (uint)(local_160 + local_248 < local_248) |\u000a          uStack356 >> 0x1f ^ (uint)(local_168 + local_244 < local_244)) == 0) {\u000a        local_250 = local_210;\u000a        local_254 = local_218._4_4_;\u000a        local_258 = (int)local_218;\u000a        local_238 = local_1f8;\u000a        local_24c = local_158 + local_24c;\u000a        local_248 = local_160 + local_248;\u000a        local_244 = local_168 + local_244;\u000a        t = rpl_mktime((tm *)&local_258);\u000a        if (t != -1) goto LAB_00405f49;\u000a      }\u000a      goto LAB_004060c5;\u000a    }\u000a    if (CONCAT44(uStack252,local_100) == 0) goto LAB_004060c5;\u000a    if (!bVar6) {\u000a      local_268 = get_tz(local_98);\u000a    }\u000a    __sprintf_chk(local_b8,1,0x1e);\u000a    iVar9 = setenv("TZ",local_b8,1);\u000a    if (iVar9 != 0) goto LAB_004060c5;\u000a    local_228 = local_1e8;\u000a    local_238 = local_1f8;\u000a    uStack564 = uStack500;\u000a    local_230 = uStack496;\u000a    uStack556 = uStack492;\u000a    local_248 = local_208;\u000a    local_244 = iStack516;\u000a    local_240 = iStack512;\u000a    iStack572 = iStack508;\u000a    local_258 = (int)local_218;\u000a    local_254 = local_218._4_4_;\u000a    local_250 = local_210;\u000a    local_24c = iStack524;\u000a    t = rpl_mktime((tm *)&local_258);\u000a    _Var8 = mktime_ok((tm *)&local_218,(tm *)&local_258,t);\u000a    if (_Var8 != false) {\u000a      bVar6 = true;\u000a      lVar12 = CONCAT44(uStack284,local_120);\u000a      goto joined_r0x00406136;\u000a    }\u000a    bVar5 = 0;\u000a  }\u000a  else {\u000aLAB_00405af7:\u000a    bVar5 = 0;\u000ajoined_r0x00406013:\u000a    if (!bVar6) goto LAB_00405b48;\u000a  }\u000a  if (local_268 == (char *)0x0) {\u000a    iVar9 = unsetenv("TZ");\u000a  }\u000a  else {\u000a    iVar9 = setenv("TZ",local_268,1);\u000a  }\u000a  bVar5 = bVar5 & iVar9 == 0;\u000aLAB_00405b48:\u000a  if (local_268 != local_98) {\u000a    free(local_268);\u000a  }\u000a  return (_Bool)bVar5;\u000aLAB_00405c6a:\u000a  local_268 = get_tz(local_98);\u000a  if (n < 0x65) {\u000a    __value = &local_1d8;\u000a  }\u000a  else {\u000a    __value = (char *)xmalloc(n);\u000a  }\u000a  cVar2 = *pcVar11;\u000a  __s1 = pcVar11;\u000a  pcVar11 = __value;\u000a  while (cVar2 != '\u005c"') {\u000a    uVar4 = (ulong)(cVar2 == '\u005c\u005c');\u000a    *pcVar11 = __s1[uVar4];\u000a    pcVar11 = pcVar11 + 1;\u000a    cVar2 = __s1[uVar4 + 1];\u000a    __s1 = __s1 + uVar4 + 1;\u000a  }\u000a  *pcVar11 = 0;\u000a  iVar9 = setenv("TZ",__value,1);\u000a  if (100 < n) {\u000a    free(__value);\u000a  }\u000a  if (iVar9 != 0) {\u000a    bVar5 = 0;\u000a    goto LAB_00405b48;\u000a  }\u000a  do {\u000a    __s1 = __s1 + 1;\u000a    _Var8 = c_isspace();\u000a  } while (_Var8 != false);\u000a  bVar6 = true;\u000a  goto LAB_004058d7;\u000a}\u000a\u000a
p290
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x258\nMOV RBP,RDX\nMOV RBX,RSI\nMOV R13,RDI\nTEST RBP,RBP\nJNZ 0x0040586f\nLEA RBP,[0x1c0 + RSP]\nMOV RDI,RBP\nCALL 0x00404670\nMOV R15,qword ptr [RBP]\nMOV R14,qword ptr [RBP + 0x8]\nMOV RDI,RBP\nCALL 0x00401740\nMOV R12,RAX\nTEST R12,R12\nJZ 0x00405a39\nMOV qword ptr [RSP + 0x68],R13\nADD RBX,0x3\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVZX EDI,byte ptr [RBX + -0x3]\nCALL 0x004097f0\nINC RBX\nTEST AL,AL\nJNZ 0x004058a0\nLEA R13,[RBX + -0x4]\nMOV ESI,0x40cc3e\nMOV EDX,0x4\nMOV RDI,R13\nCALL 0x00401770\nTEST EAX,EAX\nJZ 0x00405a40\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x20],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nCMP byte ptr [R13],0x0\nMOV EAX,0x40d42a\nCMOVNZ RAX,R13\nMOV qword ptr [0xb0 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0x14]\nLEA R13,[0xd8 + RSP]\nADD RAX,0x76c\nMOV qword ptr [0xe0 + RSP],RAX\nMOV qword ptr [0xe8 + RSP],0x0\nMOVSXD RAX,dword ptr [R12 + 0x10]\nINC RAX\nMOV qword ptr [0xf0 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0xc]\nMOV qword ptr [0xf8 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0x8]\nMOV qword ptr [0x100 + RSP],RAX\nMOVSXD RAX,dword ptr [R12 + 0x4]\nMOV qword ptr [0x108 + RSP],RAX\nMOVSXD RAX,dword ptr [R12]\nMOV qword ptr [0x110 + RSP],RAX\nMOV qword ptr [0x118 + RSP],R14\nMOV EAX,dword ptr [R12 + 0x20]\nMOV dword ptr [RSP + 0x50],EAX\nMOV dword ptr [0xd0 + RSP],0x2\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [0x14a + RSP],XMM0\nMOVUPS xmmword ptr [0x140 + RSP],XMM0\nMOVUPS xmmword ptr [0x130 + RSP],XMM0\nMOVUPS xmmword ptr [0x120 + RSP],XMM0\nMOVUPS xmmword ptr [0x180 + RSP],XMM0\nMOVUPS xmmword ptr [0x170 + RSP],XMM0\nMOVUPS xmmword ptr [0x160 + RSP],XMM0\nMOV RAX,qword ptr [R12 + 0x30]\nMOV qword ptr [0x190 + RSP],RAX\nMOV dword ptr [0x198 + RSP],0x10d\nMOV EAX,dword ptr [R12 + 0x20]\nMOV dword ptr [0x19c + RSP],EAX\nMOV qword ptr [0x1a0 + RSP],0x0\nADD R15,0x76a700\nMOV EBP,0x1\nLEA RBX,[RSP + 0x70]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV qword ptr [RSP + 0x70],R15\nMOV RDI,RBX\nCALL 0x00401740\nTEST RAX,RAX\nJZ 0x00405a27\nMOV RCX,qword ptr [RAX + 0x30]\nTEST RCX,RCX\nJZ 0x00405a27\nMOV EAX,dword ptr [RAX + 0x20]\nCMP EAX,dword ptr [0x19c + RSP]\nJNZ 0x00405a86\nINC RBP\nADD R15,0x76a700\nCMP RBP,0x4\nJL 0x00405a00\nJMP 0x00405aac\nXOR EAX,EAX\nJMP 0x00405b62\nMOV EBP,0x1\nMOV RAX,RBX\nJMP 0x00405a56\nINC RAX\nINC RBP\nMOVZX ECX,byte ptr [RAX]\nCMP CL,0x5c\nJZ 0x00405a70\nTEST CL,CL\nJZ 0x004058ce\nCMP CL,0x22\nJNZ 0x00405a50\nJMP 0x00405c6a\nMOVZX ECX,byte ptr [RAX + 0x1]\nINC RAX\nCMP CL,0x22\nJZ 0x00405a50\nCMP CL,0x5c\nJZ 0x00405a50\nJMP 0x004058ce\nMOV qword ptr [0x1a0 + RSP],RCX\nMOV dword ptr [0x1a8 + RSP],0x10d\nMOV dword ptr [0x1ac + RSP],EAX\nMOV qword ptr [0x1b0 + RSP],0x0\nMOV RDI,qword ptr [0x190 + RSP]\nTEST RDI,RDI\nJZ 0x00405ae6\nMOV RSI,qword ptr [0x1a0 + RSP]\nTEST RSI,RSI\nJZ 0x00405ae6\nCALL 0x00401950\nTEST EAX,EAX\nJNZ 0x00405ae6\nMOV dword ptr [0x19c + RSP],0xffffffff\nMOV qword ptr [0x1a0 + RSP],0x0\nLEA RDI,[0xb0 + RSP]\nCALL 0x00404770\nTEST EAX,EAX\nJZ 0x00405afb\nXOR EBX,EBX\nJMP 0x00405b14\nCMP byte ptr [0x158 + RSP],0x0\nJZ 0x00405b74\nMOVUPS XMM0,xmmword ptr [R13 + 0x38]\nMOV RAX,qword ptr [RSP + 0x68]\nMOVUPS xmmword ptr [RAX],XMM0\nMOV BL,0x1\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R13,qword ptr [RSP + 0x28]\nTEST R13B,R13B\nJZ 0x00405b48\nMOV EDI,0x40b47b\nTEST RBP,RBP\nJZ 0x00405b3c\nMOV EDX,0x1\nMOV RSI,RBP\nCALL 0x004017e0\nJMP 0x00405b41\nCALL 0x00401af0\nTEST EAX,EAX\nSETZ AL\nAND BL,AL\nLEA RAX,[0x1f0 + RSP]\nCMP RBP,RAX\nJZ 0x00405b5d\nMOV RDI,RBP\nCALL 0x00401730\nTEST BL,BL\nSETNZ AL\nADD RSP,0x258\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RAX,qword ptr [0x160 + RSP]\nMOV RCX,qword ptr [0x188 + RSP]\nOR RAX,qword ptr [0x180 + RSP]\nOR RAX,qword ptr [0x168 + RSP]\nOR RAX,qword ptr [0x178 + RSP]\nADD RCX,qword ptr [0x170 + RSP]\nOR RCX,RAX\nCMP RCX,0x1\nJA 0x00405af7\nMOV RAX,qword ptr [R13 + 0x10]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R13]\nMOVUPS xmmword ptr [RSP],XMM0\nCALL 0x004061b0\nADD EAX,0xfffff894\nMOV dword ptr [RSP + 0x44],EAX\nMOV EAX,0xfffff894\nADD EAX,dword ptr [0xf0 + RSP]\nADD EAX,0x76b\nMOV dword ptr [RSP + 0x40],EAX\nMOV EAX,dword ptr [0xf8 + RSP]\nMOV dword ptr [RSP + 0x3c],EAX\nCMP qword ptr [0x180 + RSP],0x0\nJNZ 0x00405c20\nCMP byte ptr [0x159 + RSP],0x0\nJZ 0x00405d28\nMOV RAX,qword ptr [0x168 + RSP]\nOR RAX,qword ptr [0x160 + RSP]\nJNZ 0x00405d28\nMOV RDI,qword ptr [0x100 + RSP]\nMOV ESI,dword ptr [0xd0 + RSP]\nCALL 0x004061e0\nMOV dword ptr [RSP + 0x38],EAX\nTEST EAX,EAX\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R12,qword ptr [RSP + 0x68]\nMOV R13,qword ptr [RSP + 0x28]\nJS 0x004060c5\nMOV EAX,dword ptr [0x108 + RSP]\nMOV dword ptr [RSP + 0x34],EAX\nMOV EAX,dword ptr [0x110 + RSP]\nMOV dword ptr [RSP + 0x30],EAX\nJMP 0x00405d5b\nLEA RDI,[0x1f0 + RSP]\nCALL 0x00406150\nMOV R13,RAX\nCMP RBP,0x65\nJC 0x00405c8a\nMOV RDI,RBP\nCALL 0x004087c0\nJMP 0x00405c92\nLEA RAX,[0xb0 + RSP]\nMOV qword ptr [RSP + 0x20],R13\nMOV CL,byte ptr [RBX]\nMOV RSI,RAX\nCMP CL,0x22\nJNZ 0x00405cb0\nMOV R13,RBX\nJMP 0x00405cd3\nXOR EDX,EDX\nCMP CL,0x5c\nSETZ DL\nMOVZX ECX,byte ptr [RBX + RDX*0x1]\nMOV byte ptr [RSI],CL\nINC RSI\nLEA R13,[RBX + RDX*0x1 + 0x1]\nMOVZX ECX,byte ptr [RBX + RDX*0x1 + 0x1]\nCMP CL,0x22\nMOV RBX,R13\nJNZ 0x00405cb0\nMOV byte ptr [RSI],0x0\nMOV EDI,0x40b47b\nMOV EDX,0x1\nMOV RBX,RAX\nMOV RSI,RBX\nCALL 0x004017e0\nCMP RBP,0x65\nJC 0x00405cfd\nMOV RDI,RBX\nMOV EBX,EAX\nCALL 0x00401730\nMOV EAX,EBX\nTEST EAX,EAX\nJZ 0x00405d10\nXOR EBX,EBX\nMOV RBP,qword ptr [RSP + 0x20]\nJMP 0x00405b48\nMOVZX EDI,byte ptr [R13 + 0x1]\nINC R13\nCALL 0x004097f0\nTEST AL,AL\nJNZ 0x00405d10\nMOV AL,0x1\nJMP 0x004058d7\nMOV dword ptr [RSP + 0x30],0x0\nMOV dword ptr [RSP + 0x34],0x0\nMOV dword ptr [RSP + 0x38],0x0\nMOV qword ptr [0x118 + RSP],0x0\nMOV RBP,qword ptr [RSP + 0x20]\nMOV R12,qword ptr [RSP + 0x68]\nMOV R13,qword ptr [RSP + 0x28]\nMOV RAX,qword ptr [0x168 + RSP]\nOR RAX,qword ptr [0x160 + RSP]\nOR RAX,qword ptr [0x180 + RSP]\nJZ 0x00405d7d\nMOV dword ptr [RSP + 0x50],0xffffffff\nCMP qword ptr [0x170 + RSP],0x0\nJZ 0x00405d93\nMOV EAX,dword ptr [0xc4 + RSP]\nMOV dword ptr [RSP + 0x50],EAX\nMOV RAX,qword ptr [RSP + 0x60]\nMOV qword ptr [0xa0 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x30]\nMOVUPS XMM1,xmmword ptr [RSP + 0x40]\nMOVUPS XMM2,xmmword ptr [RSP + 0x50]\nMOVAPS xmmword ptr [0x90 + RSP],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM0\nLEA RBX,[RSP + 0x30]\nMOV RDI,RBX\nCALL 0x00409210\nMOV R14,RAX\nLEA RDI,[RSP + 0x70]\nMOV RSI,RBX\nMOV RDX,R14\nCALL 0x00406240\nTEST AL,AL\nJZ 0x0040601e\nCMP qword ptr [0x168 + RSP],0x0\nJZ 0x00405e8c\nMOV RAX,qword ptr [0x160 + RSP]\nTEST RAX,RAX\nJNZ 0x00405e8c\nMOV ECX,dword ptr [0xc0 + RSP]\nMOV EDX,dword ptr [RSP + 0x48]\nLEA EAX,[RCX + 0x7]\nSUB EAX,EDX\nCDQE\nIMUL RSI,RAX,-0x6db6db6d\nSHR RSI,0x20\nADD ESI,EAX\nMOV EDI,ESI\nSHR EDI,0x1f\nSAR ESI,0x2\nADD ESI,EDI\nLEA EDI,[RSI*0x8]\nSUB EDI,ESI\nSUB EAX,EDI\nMOV RSI,qword ptr [0xb8 + RSP]\nTEST RSI,RSI\nSETG BL\nCMP ECX,EDX\nSETNZ CL\nAND CL,BL\nMOVZX ECX,CL\nSUB ESI,ECX\nLEA ECX,[RSI*0x8]\nSUB ECX,ESI\nADD EAX,dword ptr [RSP + 0x3c]\nADD EAX,ECX\nMOV dword ptr [RSP + 0x3c],EAX\nMOV dword ptr [RSP + 0x50],0xffffffff\nLEA RDI,[RSP + 0x30]\nCALL 0x00409210\nMOV R14,RAX\nCMP R14,-0x1\nJZ 0x004060c5\nMOV RSI,qword ptr [0x120 + RSP]\nMOV RAX,qword ptr [0x128 + RSP]\nMOV RDX,RAX\nOR RDX,RSI\nMOV RCX,qword ptr [0x130 + RSP]\nOR RDX,RCX\nJZ 0x00405f49\nMOV EDX,dword ptr [RSP + 0x44]\nLEA R8D,[RSI + RDX*0x1]\nMOV R11D,dword ptr [RSP + 0x3c]\nMOV EDI,dword ptr [RSP + 0x40]\nLEA R9D,[RAX + RDI*0x1]\nLEA R10D,[RCX + R11*0x1]\nXOR EBX,EBX\nCMP R8D,EDX\nSETL BL\nSHR RSI,0x3f\nXOR ESI,EBX\nXOR EDX,EDX\nCMP R9D,EDI\nSETL DL\nSHR RAX,0x3f\nXOR EAX,EDX\nOR EAX,ESI\nXOR EDX,EDX\nCMP R10D,R11D\nSETL DL\nSHR RCX,0x3f\nXOR ECX,EDX\nOR ECX,EAX\nJNZ 0x004060c5\nMOV dword ptr [RSP + 0x44],R8D\nMOV dword ptr [RSP + 0x40],R9D\nMOV dword ptr [RSP + 0x3c],R10D\nMOV EAX,dword ptr [RSP + 0x78]\nMOV dword ptr [RSP + 0x38],EAX\nMOV EAX,dword ptr [RSP + 0x74]\nMOV dword ptr [RSP + 0x34],EAX\nMOV EAX,dword ptr [RSP + 0x70]\nMOV dword ptr [RSP + 0x30],EAX\nMOV EAX,dword ptr [0x90 + RSP]\nMOV dword ptr [RSP + 0x50],EAX\nLEA RDI,[RSP + 0x30]\nCALL 0x00409210\nMOV R14,RAX\nCMP R14,-0x1\nJZ 0x004060c5\nCMP qword ptr [0x188 + RSP],0x0\nJZ 0x00405f68\nIMUL RAX,qword ptr [0xc8 + RSP],-0x3c\nADD RAX,R14\nADD RAX,qword ptr [RSP + 0x58]\nMOV R14,RAX\nMOV RSI,qword ptr [0x150 + RSP]\nADD RSI,qword ptr [0x118 + RSP]\nMOV RDI,0x112e0be826d694b3\nMOV RAX,RSI\nIMUL RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x1a\nADD RDX,RAX\nIMUL RAX,RDX,0x3b9aca00\nMOV RCX,RSI\nSUB RCX,RAX\nADD RCX,0x3b9aca00\nMOV RAX,RCX\nIMUL RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x1a\nADD RDX,RAX\nIMUL RAX,RDX,0x3b9aca00\nSUB RCX,RAX\nSUB RSI,RCX\nMOV RAX,RSI\nIMUL RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x1a\nADD RDX,RAX\nIMUL RAX,qword ptr [0x138 + RSP],0xe10\nADD RAX,R14\nIMUL RSI,qword ptr [0x140 + RSP],0x3c\nADD RSI,RAX\nADD RSI,qword ptr [0x148 + RSP]\nADD RSI,RDX\nMOV qword ptr [R12],RSI\nMOV qword ptr [R12 + 0x8],RCX\nMOV BL,0x1\nTEST R13B,R13B\nJNZ 0x00405b23\nJMP 0x00405b48\nCMP qword ptr [0x188 + RSP],0x0\nJZ 0x004060c5\nMOV R15,qword ptr [0xc8 + RSP]\nMOV RBX,R15\nNEG RBX\nCMOVL RBX,R15\nMOV RCX,-0x7777777777777777\nMOV RAX,RBX\nIMUL RCX\nADD RDX,RBX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x5\nLEA R14,[RDX + RAX*0x1]\nADD EDX,EAX\nIMUL EAX,EDX,0x3c\nSUB EBX,EAX\nTEST R13B,R13B\nJNZ 0x0040607d\nLEA RDI,[0x1f0 + RSP]\nCALL 0x00406150\nMOV RBP,RAX\nSHR R15,0x3f\nLEA R8,[0x40cee2 + R15]\nMOV dword ptr [RSP],EBX\nLEA RBX,[0x1d0 + RSP]\nMOV ESI,0x1\nMOV EDX,0x1e\nMOV ECX,0x40cc43\nXOR EAX,EAX\nMOV RDI,RBX\nMOV R9,R14\nCALL 0x00401b90\nMOV EDI,0x40b47b\nMOV EDX,0x1\nMOV RSI,RBX\nCALL 0x004017e0\nTEST EAX,EAX\nJZ 0x004060d5\nXOR EBX,EBX\nTEST R13B,R13B\nJNZ 0x00405b23\nJMP 0x00405b48\nMOV RAX,qword ptr [0xa0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOVAPS XMM0,xmmword ptr [RSP + 0x70]\nMOVAPS XMM1,xmmword ptr [0x80 + RSP]\nMOVAPS XMM2,xmmword ptr [0x90 + RSP]\nMOVAPS xmmword ptr [RSP + 0x50],XMM2\nMOVAPS xmmword ptr [RSP + 0x40],XMM1\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nLEA RBX,[RSP + 0x30]\nMOV RDI,RBX\nCALL 0x00409210\nMOV R14,RAX\nLEA RDI,[RSP + 0x70]\nMOV RSI,RBX\nMOV RDX,R14\nCALL 0x00406240\nTEST AL,AL\nJZ 0x00406141\nMOV R13B,0x1\nCMP qword ptr [0x168 + RSP],0x0\nJNZ 0x00405dfb\nJMP 0x00405e8c\nXOR EBX,EBX\nJMP 0x00405b23\n'
p291
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 58 02 00 00\n48 89 d5\n48 89 f3\n49 89 fd\n48 85 ed\n75 10\n48 8d ac 24 c0 01 00 00\n48 89 ef\ne8 01 ee ff ff\n4c 8b 7d 00\n4c 8b 75 08\n48 89 ef\ne8 c1 be ff ff\n49 89 c4\n4d 85 e4\n0f 84 ae 01 00 00\n4c 89 6c 24 68\n48 83 c3 03\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 7b fd\ne8 47 3f 00 00\n48 ff c3\n84 c0\n75 f0\n4c 8d 6b fc\nbe 3e cc 40 00\nba 04 00 00 00\n4c 89 ef\ne8 aa be ff ff\n85 c0\n0f 84 72 01 00 00\n31 c0\n48 89 44 24 20\n31 c0\n48 89 44 24 28\n41 80 7d 00 00\nb8 2a d4 40 00\n49 0f 45 c5\n48 89 84 24 b0 00 00 00\n49 63 44 24 14\n4c 8d ac 24 d8 00 00 00\n48 05 6c 07 00 00\n48 89 84 24 e0 00 00 00\n48 c7 84 24 e8 00 00 00 00 00 00 00\n49 63 44 24 10\n48 ff c0\n48 89 84 24 f0 00 00 00\n49 63 44 24 0c\n48 89 84 24 f8 00 00 00\n49 63 44 24 08\n48 89 84 24 00 01 00 00\n49 63 44 24 04\n48 89 84 24 08 01 00 00\n49 63 04 24\n48 89 84 24 10 01 00 00\n4c 89 b4 24 18 01 00 00\n41 8b 44 24 20\n89 44 24 50\nc7 84 24 d0 00 00 00 02 00 00 00\n0f 57 c0\n0f 11 84 24 4a 01 00 00\n0f 11 84 24 40 01 00 00\n0f 11 84 24 30 01 00 00\n0f 11 84 24 20 01 00 00\n0f 11 84 24 80 01 00 00\n0f 11 84 24 70 01 00 00\n0f 11 84 24 60 01 00 00\n49 8b 44 24 30\n48 89 84 24 90 01 00 00\nc7 84 24 98 01 00 00 0d 01 00 00\n41 8b 44 24 20\n89 84 24 9c 01 00 00\n48 c7 84 24 a0 01 00 00 00 00 00 00\n49 81 c7 00 a7 76 00\nbd 01 00 00 00\n48 8d 5c 24 70\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 7c 24 70\n48 89 df\ne8 33 bd ff ff\n48 85 c0\n74 15\n48 8b 48 30\n48 85 c9\n74 0c\n8b 40 20\n3b 84 24 9c 01 00 00\n75 5f\n48 ff c5\n49 81 c7 00 a7 76 00\n48 83 fd 04\n7c c9\neb 73\n31 c0\ne9 22 01 00 00\nbd 01 00 00 00\n48 89 d8\neb 0c\n48 ff c0\n48 ff c5\n0f b6 08\n80 f9 5c\n74 12\n84 c9\n0f 84 68 fe ff ff\n80 f9 22\n75 e5\ne9 fa 01 00 00\n0f b6 48 01\n48 ff c0\n80 f9 22\n74 d4\n80 f9 5c\n74 cf\ne9 48 fe ff ff\n48 89 8c 24 a0 01 00 00\nc7 84 24 a8 01 00 00 0d 01 00 00\n89 84 24 ac 01 00 00\n48 c7 84 24 b0 01 00 00 00 00 00 00\n48 8b bc 24 90 01 00 00\n48 85 ff\n74 2d\n48 8b b4 24 a0 01 00 00\n48 85 f6\n74 20\ne8 85 be ff ff\n85 c0\n75 17\nc7 84 24 9c 01 00 00 ff ff ff ff\n48 c7 84 24 a0 01 00 00 00 00 00 00\n48 8d bc 24 b0 00 00 00\ne8 7d ec ff ff\n85 c0\n74 04\n31 db\neb 19\n80 bc 24 58 01 00 00 00\n74 6f\n41 0f 10 45 38\n48 8b 44 24 68\n0f 11 00\nb3 01\n48 8b 6c 24 20\n4c 8b 6c 24 28\n45 84 ed\n74 25\nbf 7b b4 40 00\n48 85 ed\n74 0f\nba 01 00 00 00\n48 89 ee\ne8 a6 bc ff ff\neb 05\ne8 af bf ff ff\n85 c0\n0f 94 c0\n20 c3\n48 8d 84 24 f0 01 00 00\n48 39 c5\n74 08\n48 89 ef\ne8 d3 bb ff ff\n84 db\n0f 95 c0\n48 81 c4 58 02 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 84 24 60 01 00 00\n48 8b 8c 24 88 01 00 00\n48 0b 84 24 80 01 00 00\n48 0b 84 24 68 01 00 00\n48 0b 84 24 78 01 00 00\n48 03 8c 24 70 01 00 00\n48 09 c1\n48 83 f9 01\n0f 87 46 ff ff ff\n49 8b 45 10\n48 89 44 24 10\n41 0f 10 45 00\n0f 11 04 24\ne8 e8 05 00 00\n05 94 f8 ff ff\n89 44 24 44\nb8 94 f8 ff ff\n03 84 24 f0 00 00 00\n05 6b 07 00 00\n89 44 24 40\n8b 84 24 f8 00 00 00\n89 44 24 3c\n48 83 bc 24 80 01 00 00 00\n75 24\n80 bc 24 59 01 00 00 00\n0f 84 1e 01 00 00\n48 8b 84 24 68 01 00 00\n48 0b 84 24 60 01 00 00\n0f 85 08 01 00 00\n48 8b bc 24 00 01 00 00\n8b b4 24 d0 00 00 00\ne8 ac 05 00 00\n89 44 24 38\n85 c0\n48 8b 6c 24 20\n4c 8b 64 24 68\n4c 8b 6c 24 28\n0f 88 76 04 00 00\n8b 84 24 08 01 00 00\n89 44 24 34\n8b 84 24 10 01 00 00\n89 44 24 30\ne9 f1 00 00 00\n48 8d bc 24 f0 01 00 00\ne8 d9 04 00 00\n49 89 c5\n48 83 fd 65\n72 0a\n48 89 ef\ne8 38 2b 00 00\neb 08\n48 8d 84 24 b0 00 00 00\n4c 89 6c 24 20\n8a 0b\n48 89 c6\n80 f9 22\n75 0f\n49 89 dd\neb 2d\n31 d2\n80 f9 5c\n0f 94 c2\n0f b6 0c 13\n88 0e\n48 ff c6\n4c 8d 6c 13 01\n0f b6 4c 13 01\n80 f9 22\n4c 89 eb\n75 dd\nc6 06 00\nbf 7b b4 40 00\nba 01 00 00 00\n48 89 c3\n48 89 de\ne8 f5 ba ff ff\n48 83 fd 65\n72 0c\n48 89 df\n89 c3\ne8 35 ba ff ff\n89 d8\n85 c0\n74 0f\n31 db\n48 8b 6c 24 20\ne9 3b fe ff ff\n41 0f b6 7d 01\n49 ff c5\ne8 d3 3a 00 00\n84 c0\n75 ef\nb0 01\ne9 af fb ff ff\nc7 44 24 30 00 00 00 00\nc7 44 24 34 00 00 00 00\nc7 44 24 38 00 00 00 00\n48 c7 84 24 18 01 00 00 00 00 00 00\n48 8b 6c 24 20\n4c 8b 64 24 68\n4c 8b 6c 24 28\n48 8b 84 24 68 01 00 00\n48 0b 84 24 60 01 00 00\n48 0b 84 24 80 01 00 00\n74 08\nc7 44 24 50 ff ff ff ff\n48 83 bc 24 70 01 00 00 00\n74 0b\n8b 84 24 c4 00 00 00\n89 44 24 50\n48 8b 44 24 60\n48 89 84 24 a0 00 00 00\n0f 10 44 24 30\n0f 10 4c 24 40\n0f 10 54 24 50\n0f 29 94 24 90 00 00 00\n0f 29 8c 24 80 00 00 00\n0f 29 44 24 70\n48 8d 5c 24 30\n48 89 df\ne8 3f 34 00 00\n49 89 c6\n48 8d 7c 24 70\n48 89 de\n4c 89 f2\ne8 5c 04 00 00\n84 c0\n0f 84 32 02 00 00\n48 83 bc 24 68 01 00 00 00\n0f 84 91 00 00 00\n48 8b 84 24 60 01 00 00\n48 85 c0\n0f 85 80 00 00 00\n8b 8c 24 c0 00 00 00\n8b 54 24 48\n8d 41 07\n29 d0\n48 98\n48 69 f0 93 24 49 92\n48 c1 ee 20\n01 c6\n89 f7\nc1 ef 1f\nc1 fe 02\n01 fe\n8d 3c f5 00 00 00 00\n29 f7\n29 f8\n48 8b b4 24 b8 00 00 00\n48 85 f6\n0f 9f c3\n39 d1\n0f 95 c1\n20 d9\n0f b6 c9\n29 ce\n8d 0c f5 00 00 00 00\n29 f1\n03 44 24 3c\n01 c8\n89 44 24 3c\nc7 44 24 50 ff ff ff ff\n48 8d 7c 24 30\ne8 91 33 00 00\n49 89 c6\n49 83 fe ff\n0f 84 39 02 00 00\n48 8b b4 24 20 01 00 00\n48 8b 84 24 28 01 00 00\n48 89 c2\n48 09 f2\n48 8b 8c 24 30 01 00 00\n48 09 ca\n0f 84 96 00 00 00\n8b 54 24 44\n44 8d 04 16\n44 8b 5c 24 3c\n8b 7c 24 40\n44 8d 0c 38\n46 8d 14 19\n31 db\n41 39 d0\n0f 9c c3\n48 c1 ee 3f\n31 de\n31 d2\n41 39 f9\n0f 9c c2\n48 c1 e8 3f\n31 d0\n09 f0\n31 d2\n45 39 da\n0f 9c c2\n48 c1 e9 3f\n31 d1\n09 c1\n0f 85 c5 01 00 00\n44 89 44 24 44\n44 89 4c 24 40\n44 89 54 24 3c\n8b 44 24 78\n89 44 24 38\n8b 44 24 74\n89 44 24 34\n8b 44 24 70\n89 44 24 30\n8b 84 24 90 00 00 00\n89 44 24 50\n48 8d 7c 24 30\ne8 d4 32 00 00\n49 89 c6\n49 83 fe ff\n0f 84 7c 01 00 00\n48 83 bc 24 88 01 00 00 00\n74 14\n48 6b 84 24 c8 00 00 00 c4\n4c 01 f0\n48 03 44 24 58\n49 89 c6\n48 8b b4 24 50 01 00 00\n48 03 b4 24 18 01 00 00\n48 bf b3 94 d6 26 e8 0b 2e 11\n48 89 f0\n48 f7 ef\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 1a\n48 01 c2\n48 69 c2 00 ca 9a 3b\n48 89 f1\n48 29 c1\n48 81 c1 00 ca 9a 3b\n48 89 c8\n48 f7 ef\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 1a\n48 01 c2\n48 69 c2 00 ca 9a 3b\n48 29 c1\n48 29 ce\n48 89 f0\n48 f7 ef\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 1a\n48 01 c2\n48 69 84 24 38 01 00 00 10 0e 00 00\n4c 01 f0\n48 6b b4 24 40 01 00 00 3c\n48 01 c6\n48 03 b4 24 48 01 00 00\n48 01 d6\n49 89 34 24\n49 89 4c 24 08\nb3 01\n45 84 ed\n0f 85 0a fb ff ff\ne9 2a fb ff ff\n48 83 bc 24 88 01 00 00 00\n0f 84 98 00 00 00\n4c 8b bc 24 c8 00 00 00\n4c 89 fb\n48 f7 db\n49 0f 4c df\n48 b9 89 88 88 88 88 88 88 88\n48 89 d8\n48 f7 e9\n48 01 da\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 05\n4c 8d 34 02\n01 c2\n6b c2 3c\n29 c3\n45 84 ed\n75 10\n48 8d bc 24 f0 01 00 00\ne8 d6 00 00 00\n48 89 c5\n49 c1 ef 3f\n4d 8d 87 e2 ce 40 00\n89 1c 24\n48 8d 9c 24 d0 01 00 00\nbe 01 00 00 00\nba 1e 00 00 00\nb9 43 cc 40 00\n31 c0\n48 89 df\n4d 89 f1\ne8 e1 ba ff ff\nbf 7b b4 40 00\nba 01 00 00 00\n48 89 de\ne8 1f b7 ff ff\n85 c0\n74 10\n31 db\n45 84 ed\n0f 85 53 fa ff ff\ne9 73 fa ff ff\n48 8b 84 24 a0 00 00 00\n48 89 44 24 60\n0f 28 44 24 70\n0f 28 8c 24 80 00 00 00\n0f 28 94 24 90 00 00 00\n0f 29 54 24 50\n0f 29 4c 24 40\n0f 29 44 24 30\n48 8d 5c 24 30\n48 89 df\ne8 fd 30 00 00\n49 89 c6\n48 8d 7c 24 70\n48 89 de\n4c 89 f2\ne8 1a 01 00 00\n84 c0\n74 17\n41 b5 01\n48 83 bc 24 68 01 00 00 00\n0f 85 bf fc ff ff\ne9 4b fd ff ff\n31 db\ne9 db f9 ff ff\n'
p292
S'.text:0000000000405840\n.text:0000000000405841\n.text:0000000000405843\n.text:0000000000405845\n.text:0000000000405847\n.text:0000000000405849\n.text:000000000040584a\n.text:0000000000405851\n.text:0000000000405854\n.text:0000000000405857\n.text:000000000040585a\n.text:000000000040585d\n.text:000000000040585f\n.text:0000000000405867\n.text:000000000040586a\n.text:000000000040586f\n.text:0000000000405873\n.text:0000000000405877\n.text:000000000040587a\n.text:000000000040587f\n.text:0000000000405882\n.text:0000000000405885\n.text:000000000040588b\n.text:0000000000405890\n.text:0000000000405894\n.text:00000000004058a0\n.text:00000000004058a4\n.text:00000000004058a9\n.text:00000000004058ac\n.text:00000000004058ae\n.text:00000000004058b0\n.text:00000000004058b4\n.text:00000000004058b9\n.text:00000000004058be\n.text:00000000004058c1\n.text:00000000004058c6\n.text:00000000004058c8\n.text:00000000004058ce\n.text:00000000004058d0\n.text:00000000004058d5\n.text:00000000004058d7\n.text:00000000004058dc\n.text:00000000004058e1\n.text:00000000004058e6\n.text:00000000004058ea\n.text:00000000004058f2\n.text:00000000004058f7\n.text:00000000004058ff\n.text:0000000000405905\n.text:000000000040590d\n.text:0000000000405919\n.text:000000000040591e\n.text:0000000000405921\n.text:0000000000405929\n.text:000000000040592e\n.text:0000000000405936\n.text:000000000040593b\n.text:0000000000405943\n.text:0000000000405948\n.text:0000000000405950\n.text:0000000000405954\n.text:000000000040595c\n.text:0000000000405964\n.text:0000000000405969\n.text:000000000040596d\n.text:0000000000405978\n.text:000000000040597b\n.text:0000000000405983\n.text:000000000040598b\n.text:0000000000405993\n.text:000000000040599b\n.text:00000000004059a3\n.text:00000000004059ab\n.text:00000000004059b3\n.text:00000000004059b8\n.text:00000000004059c0\n.text:00000000004059cb\n.text:00000000004059d0\n.text:00000000004059d7\n.text:00000000004059e3\n.text:00000000004059ea\n.text:00000000004059ef\n.text:00000000004059f4\n.text:0000000000405a00\n.text:0000000000405a05\n.text:0000000000405a08\n.text:0000000000405a0d\n.text:0000000000405a10\n.text:0000000000405a12\n.text:0000000000405a16\n.text:0000000000405a19\n.text:0000000000405a1b\n.text:0000000000405a1e\n.text:0000000000405a25\n.text:0000000000405a27\n.text:0000000000405a2a\n.text:0000000000405a31\n.text:0000000000405a35\n.text:0000000000405a37\n.text:0000000000405a39\n.text:0000000000405a3b\n.text:0000000000405a40\n.text:0000000000405a45\n.text:0000000000405a48\n.text:0000000000405a50\n.text:0000000000405a53\n.text:0000000000405a56\n.text:0000000000405a59\n.text:0000000000405a5c\n.text:0000000000405a5e\n.text:0000000000405a60\n.text:0000000000405a66\n.text:0000000000405a69\n.text:0000000000405a6b\n.text:0000000000405a70\n.text:0000000000405a74\n.text:0000000000405a77\n.text:0000000000405a7a\n.text:0000000000405a7c\n.text:0000000000405a7f\n.text:0000000000405a81\n.text:0000000000405a86\n.text:0000000000405a8e\n.text:0000000000405a99\n.text:0000000000405aa0\n.text:0000000000405aac\n.text:0000000000405ab4\n.text:0000000000405ab7\n.text:0000000000405ab9\n.text:0000000000405ac1\n.text:0000000000405ac4\n.text:0000000000405ac6\n.text:0000000000405acb\n.text:0000000000405acd\n.text:0000000000405acf\n.text:0000000000405ada\n.text:0000000000405ae6\n.text:0000000000405aee\n.text:0000000000405af3\n.text:0000000000405af5\n.text:0000000000405af7\n.text:0000000000405af9\n.text:0000000000405afb\n.text:0000000000405b03\n.text:0000000000405b05\n.text:0000000000405b0a\n.text:0000000000405b0f\n.text:0000000000405b12\n.text:0000000000405b14\n.text:0000000000405b19\n.text:0000000000405b1e\n.text:0000000000405b21\n.text:0000000000405b23\n.text:0000000000405b28\n.text:0000000000405b2b\n.text:0000000000405b2d\n.text:0000000000405b32\n.text:0000000000405b35\n.text:0000000000405b3a\n.text:0000000000405b3c\n.text:0000000000405b41\n.text:0000000000405b43\n.text:0000000000405b46\n.text:0000000000405b48\n.text:0000000000405b50\n.text:0000000000405b53\n.text:0000000000405b55\n.text:0000000000405b58\n.text:0000000000405b5d\n.text:0000000000405b5f\n.text:0000000000405b62\n.text:0000000000405b69\n.text:0000000000405b6a\n.text:0000000000405b6c\n.text:0000000000405b6e\n.text:0000000000405b70\n.text:0000000000405b72\n.text:0000000000405b73\n.text:0000000000405b74\n.text:0000000000405b7c\n.text:0000000000405b84\n.text:0000000000405b8c\n.text:0000000000405b94\n.text:0000000000405b9c\n.text:0000000000405ba4\n.text:0000000000405ba7\n.text:0000000000405bab\n.text:0000000000405bb1\n.text:0000000000405bb5\n.text:0000000000405bba\n.text:0000000000405bbf\n.text:0000000000405bc3\n.text:0000000000405bc8\n.text:0000000000405bcd\n.text:0000000000405bd1\n.text:0000000000405bd6\n.text:0000000000405bdd\n.text:0000000000405be2\n.text:0000000000405be6\n.text:0000000000405bed\n.text:0000000000405bf1\n.text:0000000000405bfa\n.text:0000000000405bfc\n.text:0000000000405c04\n.text:0000000000405c0a\n.text:0000000000405c12\n.text:0000000000405c1a\n.text:0000000000405c20\n.text:0000000000405c28\n.text:0000000000405c2f\n.text:0000000000405c34\n.text:0000000000405c38\n.text:0000000000405c3a\n.text:0000000000405c3f\n.text:0000000000405c44\n.text:0000000000405c49\n.text:0000000000405c4f\n.text:0000000000405c56\n.text:0000000000405c5a\n.text:0000000000405c61\n.text:0000000000405c65\n.text:0000000000405c6a\n.text:0000000000405c72\n.text:0000000000405c77\n.text:0000000000405c7a\n.text:0000000000405c7e\n.text:0000000000405c80\n.text:0000000000405c83\n.text:0000000000405c88\n.text:0000000000405c8a\n.text:0000000000405c92\n.text:0000000000405c97\n.text:0000000000405c99\n.text:0000000000405c9c\n.text:0000000000405c9f\n.text:0000000000405ca1\n.text:0000000000405ca4\n.text:0000000000405cb0\n.text:0000000000405cb2\n.text:0000000000405cb5\n.text:0000000000405cb8\n.text:0000000000405cbc\n.text:0000000000405cbe\n.text:0000000000405cc1\n.text:0000000000405cc6\n.text:0000000000405ccb\n.text:0000000000405cce\n.text:0000000000405cd1\n.text:0000000000405cd3\n.text:0000000000405cd6\n.text:0000000000405cdb\n.text:0000000000405ce0\n.text:0000000000405ce3\n.text:0000000000405ce6\n.text:0000000000405ceb\n.text:0000000000405cef\n.text:0000000000405cf1\n.text:0000000000405cf4\n.text:0000000000405cf6\n.text:0000000000405cfb\n.text:0000000000405cfd\n.text:0000000000405cff\n.text:0000000000405d01\n.text:0000000000405d03\n.text:0000000000405d08\n.text:0000000000405d10\n.text:0000000000405d15\n.text:0000000000405d18\n.text:0000000000405d1d\n.text:0000000000405d1f\n.text:0000000000405d21\n.text:0000000000405d23\n.text:0000000000405d28\n.text:0000000000405d30\n.text:0000000000405d38\n.text:0000000000405d40\n.text:0000000000405d4c\n.text:0000000000405d51\n.text:0000000000405d56\n.text:0000000000405d5b\n.text:0000000000405d63\n.text:0000000000405d6b\n.text:0000000000405d73\n.text:0000000000405d75\n.text:0000000000405d7d\n.text:0000000000405d86\n.text:0000000000405d88\n.text:0000000000405d8f\n.text:0000000000405d93\n.text:0000000000405d98\n.text:0000000000405da0\n.text:0000000000405da5\n.text:0000000000405daa\n.text:0000000000405daf\n.text:0000000000405db7\n.text:0000000000405dbf\n.text:0000000000405dc4\n.text:0000000000405dc9\n.text:0000000000405dcc\n.text:0000000000405dd1\n.text:0000000000405dd4\n.text:0000000000405dd9\n.text:0000000000405ddc\n.text:0000000000405ddf\n.text:0000000000405de4\n.text:0000000000405de6\n.text:0000000000405dec\n.text:0000000000405df5\n.text:0000000000405dfb\n.text:0000000000405e03\n.text:0000000000405e06\n.text:0000000000405e0c\n.text:0000000000405e13\n.text:0000000000405e17\n.text:0000000000405e1a\n.text:0000000000405e1c\n.text:0000000000405e1e\n.text:0000000000405e25\n.text:0000000000405e29\n.text:0000000000405e2b\n.text:0000000000405e2d\n.text:0000000000405e30\n.text:0000000000405e33\n.text:0000000000405e35\n.text:0000000000405e3c\n.text:0000000000405e3e\n.text:0000000000405e40\n.text:0000000000405e48\n.text:0000000000405e4b\n.text:0000000000405e4e\n.text:0000000000405e50\n.text:0000000000405e53\n.text:0000000000405e55\n.text:0000000000405e58\n.text:0000000000405e5a\n.text:0000000000405e61\n.text:0000000000405e63\n.text:0000000000405e67\n.text:0000000000405e69\n.text:0000000000405e6d\n.text:0000000000405e75\n.text:0000000000405e7a\n.text:0000000000405e7f\n.text:0000000000405e82\n.text:0000000000405e86\n.text:0000000000405e8c\n.text:0000000000405e94\n.text:0000000000405e9c\n.text:0000000000405e9f\n.text:0000000000405ea2\n.text:0000000000405eaa\n.text:0000000000405ead\n.text:0000000000405eb3\n.text:0000000000405eb7\n.text:0000000000405ebb\n.text:0000000000405ec0\n.text:0000000000405ec4\n.text:0000000000405ec8\n.text:0000000000405ecc\n.text:0000000000405ece\n.text:0000000000405ed1\n.text:0000000000405ed4\n.text:0000000000405ed8\n.text:0000000000405eda\n.text:0000000000405edc\n.text:0000000000405edf\n.text:0000000000405ee2\n.text:0000000000405ee6\n.text:0000000000405ee8\n.text:0000000000405eea\n.text:0000000000405eec\n.text:0000000000405eef\n.text:0000000000405ef2\n.text:0000000000405ef6\n.text:0000000000405ef8\n.text:0000000000405efa\n.text:0000000000405f00\n.text:0000000000405f05\n.text:0000000000405f0a\n.text:0000000000405f0f\n.text:0000000000405f13\n.text:0000000000405f17\n.text:0000000000405f1b\n.text:0000000000405f1f\n.text:0000000000405f23\n.text:0000000000405f27\n.text:0000000000405f2e\n.text:0000000000405f32\n.text:0000000000405f37\n.text:0000000000405f3c\n.text:0000000000405f3f\n.text:0000000000405f43\n.text:0000000000405f49\n.text:0000000000405f52\n.text:0000000000405f54\n.text:0000000000405f5d\n.text:0000000000405f60\n.text:0000000000405f65\n.text:0000000000405f68\n.text:0000000000405f70\n.text:0000000000405f78\n.text:0000000000405f82\n.text:0000000000405f85\n.text:0000000000405f88\n.text:0000000000405f8b\n.text:0000000000405f8f\n.text:0000000000405f93\n.text:0000000000405f96\n.text:0000000000405f9d\n.text:0000000000405fa0\n.text:0000000000405fa3\n.text:0000000000405faa\n.text:0000000000405fad\n.text:0000000000405fb0\n.text:0000000000405fb3\n.text:0000000000405fb7\n.text:0000000000405fbb\n.text:0000000000405fbe\n.text:0000000000405fc5\n.text:0000000000405fc8\n.text:0000000000405fcb\n.text:0000000000405fce\n.text:0000000000405fd1\n.text:0000000000405fd4\n.text:0000000000405fd8\n.text:0000000000405fdc\n.text:0000000000405fdf\n.text:0000000000405feb\n.text:0000000000405fee\n.text:0000000000405ff7\n.text:0000000000405ffa\n.text:0000000000406002\n.text:0000000000406005\n.text:0000000000406009\n.text:000000000040600e\n.text:0000000000406010\n.text:0000000000406013\n.text:0000000000406019\n.text:000000000040601e\n.text:0000000000406027\n.text:000000000040602d\n.text:0000000000406035\n.text:0000000000406038\n.text:000000000040603b\n.text:000000000040603f\n.text:0000000000406049\n.text:000000000040604c\n.text:000000000040604f\n.text:0000000000406052\n.text:0000000000406055\n.text:0000000000406059\n.text:000000000040605d\n.text:0000000000406061\n.text:0000000000406063\n.text:0000000000406066\n.text:0000000000406068\n.text:000000000040606b\n.text:000000000040606d\n.text:0000000000406075\n.text:000000000040607a\n.text:000000000040607d\n.text:0000000000406081\n.text:0000000000406088\n.text:000000000040608b\n.text:0000000000406093\n.text:0000000000406098\n.text:000000000040609d\n.text:00000000004060a2\n.text:00000000004060a4\n.text:00000000004060a7\n.text:00000000004060aa\n.text:00000000004060af\n.text:00000000004060b4\n.text:00000000004060b9\n.text:00000000004060bc\n.text:00000000004060c1\n.text:00000000004060c3\n.text:00000000004060c5\n.text:00000000004060c7\n.text:00000000004060ca\n.text:00000000004060d0\n.text:00000000004060d5\n.text:00000000004060dd\n.text:00000000004060e2\n.text:00000000004060e7\n.text:00000000004060ef\n.text:00000000004060f7\n.text:00000000004060fc\n.text:0000000000406101\n.text:0000000000406106\n.text:000000000040610b\n.text:000000000040610e\n.text:0000000000406113\n.text:0000000000406116\n.text:000000000040611b\n.text:000000000040611e\n.text:0000000000406121\n.text:0000000000406126\n.text:0000000000406128\n.text:000000000040612a\n.text:000000000040612d\n.text:0000000000406136\n.text:000000000040613c\n.text:0000000000406141\n.text:0000000000406143\n'
p293
tp294
sS'__ctype_toupper_loc'
p295
(S'\n__stdcall __ctype_toupper_loc()\n'
p296
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_toupper_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_00610018)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x00610018]\n'
p298
S'ff 25 02 e9 20 00\n'
p299
S'.plt:0000000000401710\n'
p300
tp301
sS'quotearg_free'
p302
(S'\n__stdcall quotearg_free()\n'
p303
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p304
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x00610288]\nCMP dword ptr [0x00610290],0x2\nJC 0x0040784a\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00401730\nINC RBX\nMOV EAX,dword ptr [0x00610290]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x00407830\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x610390\nCMP RDI,RAX\nJZ 0x00407873\nCALL 0x00401730\nMOV qword ptr [0x00610298],0x100\nMOV qword ptr [0x006102a0],0x610390\nMOV EAX,0x610298\nCMP R14,RAX\nJZ 0x00407890\nMOV RDI,R14\nCALL 0x00401730\nMOV qword ptr [0x00610288],0x610298\nMOV dword ptr [0x00610290],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p305
S'41 57\n41 56\n53\n4c 8b 35 6c 8a 20 00\n83 3d 6d 8a 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 f8 9e ff ff\n48 ff c3\n8b 05 4f 8a 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 90 03 61 00\n48 39 c7\n74 1b\ne8 d3 9e ff ff\n48 c7 05 30 8a 20 00 00 01 00 00\n48 c7 05 2d 8a 20 00 90 03 61 00\nb8 98 02 61 00\n49 39 c6\n74 13\n4c 89 f7\ne8 ab 9e ff ff\n48 c7 05 f8 89 20 00 98 02 61 00\nc7 05 f6 89 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p306
S'.text:0000000000407810\n.text:0000000000407812\n.text:0000000000407814\n.text:0000000000407815\n.text:000000000040781c\n.text:0000000000407823\n.text:0000000000407825\n.text:0000000000407829\n.text:000000000040782e\n.text:0000000000407830\n.text:0000000000407833\n.text:0000000000407838\n.text:000000000040783b\n.text:0000000000407841\n.text:0000000000407845\n.text:0000000000407848\n.text:000000000040784a\n.text:000000000040784e\n.text:0000000000407853\n.text:0000000000407856\n.text:0000000000407858\n.text:000000000040785d\n.text:0000000000407868\n.text:0000000000407873\n.text:0000000000407878\n.text:000000000040787b\n.text:000000000040787d\n.text:0000000000407880\n.text:0000000000407885\n.text:0000000000407890\n.text:000000000040789a\n.text:000000000040789b\n.text:000000000040789d\n.text:000000000040789f\n'
p307
tp308
sS'quotearg_mem'
p309
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p310
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p311
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00407a70\n'
p312
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p313
S'.text:0000000000407a90\n.text:0000000000407a93\n.text:0000000000407a96\n.text:0000000000407a98\n.text:0000000000407a9b\n.text:0000000000407a9e\n'
p314
tp315
sS'deregister_tm_clones'
p316
(S'\n__stdcall deregister_tm_clones()\n'
p317
V\u000a/* WARNING: Removing unreachable block (ram,0x00401be5) */\u000a/* WARNING: Removing unreachable block (ram,0x00401bef) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p318
S'MOV EAX,0x6102e7\nPUSH RBP\nSUB RAX,0x6102e0\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401c00\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401c00\nPOP RBP\nMOV EDI,0x6102e0\nJMP RAX\nPOP RBP\nRET\n'
p319
S'b8 e7 02 61 00\n55\n48 2d e0 02 61 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf e0 02 61 00\nff e0\n5d\nc3\n'
p320
S'.text:0000000000401bd0\n.text:0000000000401bd5\n.text:0000000000401bd6\n.text:0000000000401bdc\n.text:0000000000401be0\n.text:0000000000401be3\n.text:0000000000401be5\n.text:0000000000401bea\n.text:0000000000401bed\n.text:0000000000401bef\n.text:0000000000401bf0\n.text:0000000000401bf5\n.text:0000000000401c00\n.text:0000000000401c01\n'
p321
tp322
sS'fputc_unlocked'
p323
(S'\n__stdcall fputc_unlocked(int __c, FILE * __stream)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc_unlocked(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_unlocked_00610140)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x00610140]\n'
p326
S'ff 25 da e7 20 00\n'
p327
S'.plt:0000000000401960\n'
p328
tp329
sS'strftime_case_'
p330
(S'\n__stdcall strftime_case_(FILE * s, char * format, tm * tp, timezone_t tz)\n'
p331
V\u000a/* WARNING: Removing unreachable block (ram,0x00404031) */\u000a/* WARNING: Removing unreachable block (ram,0x0040403a) */\u000a/* WARNING: Removing unreachable block (ram,0x00404040) */\u000a/* WARNING: Removing unreachable block (ram,0x0040405b) */\u000a/* WARNING: Type propagation algorithm not settling */\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000asize_t strftime_case_(FILE *s,char *format,tm *tp,timezone_t tz)\u000a\u000a{\u000a  int *piVar1;\u000a  tm_zone *ptVar2;\u000a  byte bVar3;\u000a  char cVar4;\u000a  bool bVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  size_t sVar9;\u000a  int __c;\u000a  ulong uVar10;\u000a  char *pcVar11;\u000a  char *pcVar12;\u000a  uint unaff_EBX;\u000a  long lVar13;\u000a  size_t len;\u000a  ulong len_00;\u000a  char *__size;\u000a  char cVar14;\u000a  ulong unaff_RBP;\u000a  tm_zone *__ptr;\u000a  char cVar15;\u000a  ulong uVar16;\u000a  uint uVar17;\u000a  int __c_00;\u000a  timezone_t in_R8;\u000a  uint in_R9D;\u000a  uint uVar18;\u000a  ulong in_R11;\u000a  char *src;\u000a  ulong uVar19;\u000a  ulong uVar20;\u000a  char ufmt [5];\u000a  char buf [23];\u000a  tm ltm;\u000a  ulong local_4d0;\u000a  uint local_4c4;\u000a  char *local_4c0;\u000a  ulong local_4a0;\u000a  undefined2 local_485;\u000a  char local_483;\u000a  char local_482 [2];\u000a  char *local_480;\u000a  uint local_474;\u000a  tm_zone *local_470;\u000a  timezone_t local_468;\u000a  undefined4 local_45c;\u000a  char local_441 [9];\u000a  undefined4 local_438;\u000a  int iStack1076;\u000a  int iStack1072;\u000a  int iStack1068;\u000a  int local_428;\u000a  int iStack1060;\u000a  int iStack1056;\u000a  int iStack1052;\u000a  int local_418;\u000a  undefined4 uStack1044;\u000a  undefined4 uStack1040;\u000a  undefined4 uStack1036;\u000a  tm_zone *local_408;\u000a  \u000a  local_45c = SUB84(s,0);\u000a  uVar7 = *(uint *)&tz->tz_is_set;\u000a  local_470 = (tm_zone *)\u000a              (\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  if (tz[3].next != (tm_zone *)0x0) {\u000a    local_470 = tz[3].next;\u000a  }\u000a  local_474 = 0xc;\u000a  if (uVar7 != 0) {\u000a    local_474 = uVar7;\u000a  }\u000a  if (0xc < (int)uVar7) {\u000a    local_474 = uVar7 - 0xc;\u000a  }\u000a  if (*(char *)&tp->tm_sec == 0) {\u000a    return 0;\u000a  }\u000a  local_4c0 = (char *)0x0;\u000a  local_4a0 = unaff_RBP;\u000a  local_4d0 = in_R11;\u000a  local_468 = in_R8;\u000a  local_4c4 = unaff_EBX;\u000a  do {\u000a    if ((int)*(char *)&tp->tm_sec != 0x25) {\u000a      uVar7 = 1;\u000a      if (local_4c0 < (char *)0xfffffffffffffffe) {\u000a        if (format != (char *)0x0) {\u000a          fputc((int)*(char *)&tp->tm_sec,(FILE *)format);\u000a        }\u000a        local_4c0 = local_4c0 + 1;\u000a        uVar7 = 0;\u000a      }\u000a      if (uVar7 == 0) {\u000a        uVar7 = 4;\u000a      }\u000a      goto LAB_00402f53;\u000a    }\u000a    bVar5 = false;\u000a    bVar3 = (byte)local_45c;\u000a    tp = (tm *)((long)&tp->tm_sec + 1);\u000a    __c_00 = 0;\u000aLAB_00402ec6:\u000a    while( true ) {\u000a      while (iVar6 = (int)*(char *)&tp->tm_sec, 0x2f < iVar6) {\u000a        if ((iVar6 == 0x30) || (iVar6 == 0x5f)) goto LAB_00402ec0;\u000a        if (iVar6 != 0x5e) goto LAB_00402f70;\u000a        bVar3 = 1;\u000a        tp = (tm *)((long)&tp->tm_sec + 1);\u000a      }\u000a      if (iVar6 != 0x2d) break;\u000aLAB_00402ec0:\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a      __c_00 = iVar6;\u000a    }\u000a    if (iVar6 == 0x23) {\u000a      bVar5 = true;\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a      goto LAB_00402ec6;\u000a    }\u000aLAB_00402f70:\u000a    uVar19 = 0xffffffff;\u000a    if (iVar6 - 0x30U < 10) {\u000a      uVar19 = 0;\u000a      do {\u000a        iVar6 = (int)uVar19;\u000a        uVar19 = 0x7fffffff;\u000a        if ((iVar6 < 0xccccccd) &&\u000a           ((__c = (int)*(char *)&tp->tm_sec + -0x30, iVar6 != 0xccccccc ||\u000a            (uVar19 = 0x7fffffff, __c < 8)))) {\u000a          uVar19 = (ulong)(uint)(__c + iVar6 * 10);\u000a        }\u000a        piVar1 = &tp->tm_sec;\u000a        tp = (tm *)((long)&tp->tm_sec + 1);\u000a      } while ((int)*(char *)((long)piVar1 + 1) - 0x30U < 10);\u000a    }\u000a    uVar8 = (uint)uVar19;\u000a    cVar15 = *(char *)&tp->tm_sec;\u000a    if ((cVar15 == 'O') || (cVar15 == 'E')) {\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a    }\u000a    else {\u000a      cVar15 = 0;\u000a    }\u000a    cVar14 = *(char *)&tp->tm_sec;\u000a    uVar20 = 0;\u000a    src = &DAT_0040bb4a;\u000a    uVar17 = 0;\u000a    cVar4 = 'r';\u000a    switch(cVar14) {\u000a    case 0:\u000a      tp = (tm *)((long)&tp->tm_mday + 3);\u000a    default:\u000a      goto switchD_00402ff0_caseD_1;\u000a    case '%':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        uVar7 = 0;\u000a        if (-1 < (int)uVar8) {\u000a          uVar7 = uVar8;\u000a        }\u000a        uVar19 = 1;\u000a        if (1 < uVar7) {\u000a          uVar19 = (ulong)uVar7;\u000a        }\u000a        if (~(ulong)local_4c0 <= uVar19) {\u000a          return 0;\u000a        }\u000a        if (format != (char *)0x0) {\u000a          if (1 < uVar7) {\u000a            lVar13 = (long)(int)uVar8 + -1;\u000a            if (__c_00 == 0x30) {\u000a              while (lVar13 != 0) {\u000a                fputc(0x30,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a            else {\u000a              while (lVar13 != 0) {\u000a                fputc(0x20,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a          }\u000a          __c_00 = (int)*(char *)&tp->tm_sec;\u000a          goto LAB_00404538;\u000a        }\u000a        goto LAB_0040454c;\u000a      }\u000a      break;\u000a    case ':':\u000a      uVar20 = 1;\u000a      while (cVar4 = *(char *)((long)&tp->tm_sec + uVar20), cVar4 == ':') {\u000a        uVar20 = uVar20 + 1;\u000a      }\u000a      if (cVar4 == 'z') {\u000a        tp = (tm *)((long)&tp->tm_sec + uVar20);\u000a        goto switchD_00402ff0_caseD_7a;\u000a      }\u000a      goto switchD_00402ff0_caseD_1;\u000a    case 'A':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        if (bVar5) {\u000a          bVar3 = 1;\u000a        }\u000a        cVar4 = 'A';\u000aLAB_00403c4b:\u000a        uVar20 = 0;\u000a        uVar17 = 0;\u000a        goto switchD_00402ff0_caseD_72;\u000a      }\u000a      break;\u000a    case 'B':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        if (bVar5) {\u000a          bVar3 = 1;\u000a        }\u000a        cVar4 = 'B';\u000a        goto LAB_00403c4b;\u000a      }\u000a      break;\u000a    case 'C':\u000a      if (cVar15 == 'E') {\u000a        cVar4 = 'C';\u000a        goto LAB_00403c4b;\u000a      }\u000a      if (cVar15 != 'O') {\u000a        iVar6 = *(int *)((long)&tz[1].next + 4);\u000a        lVar13 = (long)iVar6;\u000a        bVar5 = lVar13 < 0xfffff894;\u000a        __c = iVar6 / 100 + (iVar6 >> 0x1f) + (uint)((ulong)(lVar13 * 0x51eb851f) >> 0x3f);\u000a        uVar7 = (__c - (uint)(iVar6 + __c * -100 < 0 && 0xfffff894 < lVar13)) + 0x13;\u000a        goto LAB_004037ef;\u000a      }\u000aswitchD_00402ff0_caseD_1:\u000a      uVar17 = 0;\u000a      break;\u000a    case 'D':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        src = "%m/%d/%y";\u000a        goto switchD_00402ff0_caseD_52;\u000a      }\u000a      break;\u000a    case 'F':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        src = "%Y-%m-%d";\u000a        goto switchD_00402ff0_caseD_52;\u000a      }\u000a      break;\u000a    case 'G':\u000a    case 'V':\u000a    case 'g':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = iso_week_days();\u000a        if ((int)uVar7 < 0) {\u000a          uVar7 = iso_week_days();\u000a          uVar8 = 0xffffffff;\u000a        }\u000a        else {\u000a          uVar17 = iso_week_days();\u000a          uVar8 = uVar17 >> 0x1f ^ 1;\u000a          if (-1 < (int)uVar17) {\u000a            uVar7 = uVar17;\u000a          }\u000a        }\u000a        if (*(char *)&tp->tm_sec == 'G') {\u000a          iVar6 = *(int *)((long)&tz[1].next + 4);\u000a          local_4a0 = (ulong)(iVar6 < (int)(-0x76c - uVar8));\u000a          local_4d0 = (ulong)(uVar8 + 0x76c + iVar6);\u000a          uVar17 = 4;\u000a          goto LAB_00403bb0;\u000a        }\u000a        if (*(char *)&tp->tm_sec == 'g') {\u000a          iVar6 = *(int *)((long)&tz[1].next + 4);\u000a          __c = iVar6 + (iVar6 / 100 + (iVar6 >> 0x1f) +\u000a                        (uint)((ulong)((long)iVar6 * 0x51eb851f) >> 0x3f)) * -100 + uVar8;\u000a          uVar7 = __c + (__c / 100 + (__c >> 0x1f) + (uint)((ulong)((long)__c * 0x51eb851f) >> 0x3f)\u000a                        ) * -100;\u000a          uVar18 = 2;\u000a          if ((int)uVar7 < 0) {\u000a            uVar17 = -uVar7;\u000a            uVar7 = uVar7 + 100;\u000a            if (iVar6 < (int)(-0x76c - uVar8)) {\u000a              uVar7 = uVar17;\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          uVar7 = (int)uVar7 / 7 + ((int)uVar7 >> 0x1f) + 1 +\u000a                  (uint)((ulong)((long)(int)uVar7 * 0x92492493) >> 0x3f);\u000a          uVar18 = 2;\u000a        }\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'H':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->tz_is_set;\u000a        uVar18 = 2;\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'I':\u000a      uVar17 = 0;\u000a      uVar7 = local_474;\u000a      uVar18 = 2;\u000a      if (cVar15 != 'E') goto LAB_00403ced;\u000a      break;\u000a    case 'M':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)((long)&tz->next + 4);\u000a        uVar18 = 2;\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'N':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        if (uVar8 == 0xffffffff) {\u000a          uVar19 = 9;\u000a          uVar7 = in_R9D;\u000a          uVar18 = 9;\u000a        }\u000a        else {\u000a          uVar7 = in_R9D;\u000a          uVar18 = uVar8;\u000a          if ((int)uVar8 < 9) {\u000a            uVar17 = 9;\u000a            uVar7 = in_R9D;\u000a            do {\u000a              uVar7 = (int)uVar7 / 10 + ((int)uVar7 >> 0x1f) +\u000a                      (uint)((ulong)((long)(int)uVar7 * 0x66666667) >> 0x3f);\u000a              uVar17 = uVar17 - 1;\u000a              uVar18 = uVar8;\u000a            } while (uVar8 != uVar17);\u000a          }\u000a        }\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'P':\u000a      uVar20 = 1;\u000a    case 'p':\u000a      uVar17 = 0;\u000a      if (bVar5) {\u000a        bVar3 = 0;\u000a        uVar20 = 1;\u000a      }\u000a      cVar4 = 'p';\u000a      goto switchD_00402ff0_caseD_72;\u000a    case 'R':\u000a      goto switchD_00402ff0_caseD_52;\u000a    case 'S':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->next;\u000a        uVar18 = 2;\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'T':\u000a      src = &DAT_0040bb50;\u000a      goto switchD_00402ff0_caseD_52;\u000a    case 'U':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        iVar6 = (*(int *)&tz[1].field_0xc + 7) - *(int *)&tz[1].tz_is_set;\u000aLAB_004034de:\u000a        uVar7 = iVar6 / 7 + (iVar6 >> 0x1f) + (uint)((ulong)((long)iVar6 * 0x92492493) >> 0x3f);\u000a        uVar18 = 2;\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'W':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        iVar6 = *(int *)&tz[1].tz_is_set + 6;\u000a        uVar7 = (int)((ulong)((long)iVar6 * -0x6db6db6d) >> 0x20) + 6 + *(int *)&tz[1].tz_is_set;\u000a        iVar6 = (*(int *)&tz[1].field_0xc + 7) -\u000a                (iVar6 + (((int)uVar7 >> 2) + (uVar7 >> 0x1f)) * -7);\u000a        goto LAB_004034de;\u000a      }\u000a      break;\u000a    case 'X':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'O') {\u000a        cVar4 = 'X';\u000a        uVar20 = 0;\u000a        goto switchD_00402ff0_caseD_72;\u000a      }\u000a      break;\u000a    case 'Y':\u000a      if (cVar15 == 'E') {\u000a        cVar4 = 'Y';\u000a        goto LAB_00403c4b;\u000a      }\u000a      if (cVar15 == 'O') goto switchD_00402ff0_caseD_1;\u000a      iVar6 = *(int *)((long)&tz[1].next + 4);\u000a      bVar5 = iVar6 < -0x76c;\u000a      uVar7 = iVar6 + 0x76c;\u000a      iVar6 = 0;\u000a      uVar17 = 4;\u000a      local_4a0 = (ulong)bVar5 | 0x40bb00;\u000a      local_4c4 = 0;\u000a      goto LAB_00403e0b;\u000a    case 'Z':\u000a      len = strlen((char *)local_470);\u000a      uVar20 = 0;\u000a      if (-1 < (int)uVar8) {\u000a        uVar20 = uVar19;\u000a      }\u000a      uVar19 = len;\u000a      if (len < uVar20) {\u000a        uVar19 = uVar20;\u000a      }\u000a      if (~(ulong)local_4c0 <= uVar19) {\u000a        return 0;\u000a      }\u000a      if (format != (char *)0x0) {\u000a        if (len < uVar20) {\u000a          lVar13 = (long)(int)uVar8 - len;\u000a          if (__c_00 == 0x30) {\u000a            while (lVar13 != 0) {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a          else {\u000a            while (lVar13 != 0) {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a        }\u000a        if (bVar5) {\u000a          fwrite_lowcase((FILE *)format,(char *)local_470,len);\u000a          goto LAB_00403c39;\u000a        }\u000a        __ptr = local_470;\u000a        if (bVar3 != 0) {\u000a          fwrite_uppcase((FILE *)format,(char *)local_470,len);\u000a          goto LAB_00403c39;\u000a        }\u000a        goto LAB_00403628;\u000a      }\u000a      goto LAB_00403c39;\u000a    case 'a':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        if (bVar5) {\u000a          bVar3 = 1;\u000a        }\u000a        cVar4 = 'a';\u000a        goto LAB_00403c4b;\u000a      }\u000a      break;\u000a    case 'b':\u000a    case 'h':\u000a      if (bVar5) {\u000a        bVar3 = 1;\u000a      }\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        uVar20 = 0;\u000a        cVar4 = cVar14;\u000a        goto switchD_00402ff0_caseD_72;\u000a      }\u000a      break;\u000a    case 'c':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'O') {\u000a        cVar4 = 'c';\u000a        uVar20 = 0;\u000a        goto switchD_00402ff0_caseD_72;\u000a      }\u000a      break;\u000a    case 'd':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->field_0xc;\u000a        uVar18 = 2;\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'e':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->field_0xc;\u000aLAB_004037a2:\u000a        uVar18 = 2;\u000a        if ((__c_00 != 0x2d) && (__c_00 != 0x30)) {\u000a          __c_00 = 0x5f;\u000a        }\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'j':\u000a      uVar17 = 0;\u000a      if (cVar15 == 'E') break;\u000a      local_4a0 = (ulong)(*(int *)&tz[1].field_0xc < -1) | 0x40bb00;\u000a      local_4d0 = (ulong)(*(int *)&tz[1].field_0xc + 1);\u000a      uVar17 = 3;\u000aLAB_00403bb0:\u000a      local_4c4 = 0;\u000a      iVar6 = 0;\u000a      goto LAB_00403cfb;\u000a    case 'k':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->tz_is_set;\u000a        goto LAB_004037a2;\u000a      }\u000a      break;\u000a    case 'l':\u000a      uVar17 = 0;\u000a      uVar7 = local_474;\u000a      if (cVar15 != 'E') goto LAB_004037a2;\u000a      break;\u000a    case 'm':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        bVar5 = *(int *)&tz[1].next < -1;\u000a        uVar7 = *(int *)&tz[1].next + 1;\u000aLAB_004037ef:\u000a        local_4d0 = (ulong)uVar7;\u000a        local_4a0 = (ulong)bVar5 | 0x40bb00;\u000a        uVar17 = 2;\u000a        goto LAB_00403bb0;\u000a      }\u000a      break;\u000a    case 'n':\u000a      uVar7 = 0;\u000a      if (-1 < (int)uVar8) {\u000a        uVar7 = uVar8;\u000a      }\u000a      uVar19 = 1;\u000a      if (1 < uVar7) {\u000a        uVar19 = (ulong)uVar7;\u000a      }\u000a      if (~(ulong)local_4c0 <= uVar19) {\u000a        return 0;\u000a      }\u000a      if (format != (char *)0x0) {\u000a        if (1 < uVar7) {\u000a          lVar13 = (long)(int)uVar8 + -1;\u000a          if (__c_00 == 0x30) {\u000a            while (lVar13 != 0) {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a          else {\u000a            while (lVar13 != 0) {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a        }\u000a        __c_00 = 10;\u000aLAB_00404538:\u000a        fputc(__c_00,(FILE *)format);\u000a      }\u000a      goto LAB_0040454c;\u000a    case 'r':\u000a      goto switchD_00402ff0_caseD_72;\u000a    case 's':\u000a      local_408 = tz[3].next;\u000a      local_438 = *(int *)&tz->next;\u000a      iStack1076 = *(int *)((long)&tz->next + 4);\u000a      iStack1072 = *(int *)&tz->tz_is_set;\u000a      iStack1068 = *(int *)&tz->field_0xc;\u000a      local_428 = *(int *)&tz[1].next;\u000a      iStack1060 = *(int *)((long)&tz[1].next + 4);\u000a      iStack1056 = *(int *)&tz[1].tz_is_set;\u000a      iStack1052 = *(int *)&tz[1].field_0xc;\u000a      local_418 = *(int *)&tz[2].next;\u000a      uStack1044 = *(undefined4 *)((long)&tz[2].next + 4);\u000a      uStack1040 = *(undefined4 *)&tz[2].tz_is_set;\u000a      uStack1036 = *(undefined4 *)&tz[2].field_0xc;\u000a      len_00 = mktime_z(local_468,(tm *)&local_438);\u000a      local_4a0 = len_00 >> 0x3f;\u000a      src = local_441;\u000a      uVar20 = len_00;\u000a      do {\u000a        uVar10 = (long)uVar20 / 10 + ((long)uVar20 >> 0x3f);\u000a        cVar14 = (char)uVar20 + (char)uVar10 * -10;\u000a        cVar15 = -cVar14;\u000a        if (-1 < (long)len_00) {\u000a          cVar15 = cVar14;\u000a        }\u000a        src[-1] = cVar15 + '0';\u000a        src = src + -1;\u000a        uVar16 = uVar20 + 9;\u000a        uVar20 = uVar10;\u000a      } while (0x12 < uVar16);\u000a      uVar17 = 1;\u000a      iVar6 = 0;\u000a      goto LAB_00403e64;\u000a    case 't':\u000a      uVar7 = 0;\u000a      if (-1 < (int)uVar8) {\u000a        uVar7 = uVar8;\u000a      }\u000a      uVar19 = 1;\u000a      if (1 < uVar7) {\u000a        uVar19 = (ulong)uVar7;\u000a      }\u000a      if (~(ulong)local_4c0 <= uVar19) {\u000a        return 0;\u000a      }\u000a      if (format != (char *)0x0) {\u000a        if (1 < uVar7) {\u000a          lVar13 = (long)(int)uVar8 + -1;\u000a          if (__c_00 == 0x30) {\u000a            while (lVar13 != 0) {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a          else {\u000a            while (lVar13 != 0) {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a        }\u000a        __c_00 = 9;\u000a        goto LAB_00404538;\u000a      }\u000aLAB_0040454c:\u000a      local_4c0 = local_4c0 + uVar19;\u000a      goto LAB_00404563;\u000a    case 'u':\u000a      iVar6 = *(int *)&tz[1].tz_is_set + 6;\u000a      uVar7 = (int)((ulong)((long)iVar6 * -0x6db6db6d) >> 0x20) + 6 + *(int *)&tz[1].tz_is_set;\u000a      uVar7 = iVar6 + (((int)uVar7 >> 2) + (uVar7 >> 0x1f)) * -7 + 1;\u000a      uVar18 = 1;\u000a      goto LAB_00403ced;\u000a    case 'w':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz[1].tz_is_set;\u000a        uVar18 = 1;\u000a        goto LAB_00403ced;\u000a      }\u000a      break;\u000a    case 'x':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'O') {\u000a        uVar20 = 0;\u000a        cVar4 = 'x';\u000a        goto switchD_00402ff0_caseD_72;\u000a      }\u000a      break;\u000a    case 'y':\u000a      if (cVar15 == 'E') {\u000a        cVar4 = 'y';\u000a        goto LAB_00403c4b;\u000a      }\u000a      iVar6 = *(int *)((long)&tz[1].next + 4);\u000a      uVar8 = iVar6 + (iVar6 / 100 + (iVar6 >> 0x1f) +\u000a                      (uint)((ulong)((long)iVar6 * 0x51eb851f) >> 0x3f)) * -100;\u000a      uVar18 = 2;\u000a      uVar7 = uVar8;\u000a      if ((int)uVar8 < 0) {\u000a        uVar7 = uVar8 + 100;\u000a        if (iVar6 < -0x76c) {\u000a          uVar7 = -uVar8;\u000a        }\u000a      }\u000aLAB_00403ced:\u000a      uVar17 = uVar18;\u000a      local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a      local_4c4 = 0;\u000a      iVar6 = 0;\u000a      local_4d0 = (ulong)uVar7;\u000aLAB_00403cfb:\u000a      uVar7 = (uint)local_4d0;\u000a      uVar8 = (uint)uVar19;\u000a      bVar5 = (bool)((byte)local_4a0 & 1);\u000a      if ((cVar15 == 'O') && ((local_4a0 & 1) == 0)) {\u000a        uVar20 = 0;\u000a        cVar4 = cVar14;\u000aswitchD_00402ff0_caseD_72:\u000a        local_485 = 0x2520;\u000a        src = &local_483;\u000a        if (cVar15 != 0) {\u000a          src = local_482;\u000a          local_483 = cVar15;\u000a        }\u000a        *src = cVar4;\u000a        src[1] = 0;\u000a        len = strftime(&local_438,0x400,(char *)&local_485,(tm *)tz);\u000a        if (len != 0) {\u000a          len_00 = len - 1;\u000a          uVar19 = 0;\u000a          if (-1 < (int)uVar8) {\u000a            uVar19 = (ulong)uVar8;\u000a          }\u000a          uVar10 = len_00;\u000a          if (len_00 < uVar19) {\u000a            uVar10 = uVar19;\u000a          }\u000a          if (~(ulong)local_4c0 <= uVar10) {\u000a            return 0;\u000a          }\u000a          if (format != (char *)0x0) {\u000a            if ((uVar17 == 0) && (len_00 < uVar19)) {\u000a              lVar13 = (long)(int)uVar8 - len_00;\u000a              if (__c_00 == 0x30) {\u000a                while (lVar13 != 0) {\u000a                  fputc(0x30,(FILE *)format);\u000a                  lVar13 = lVar13 + -1;\u000a                }\u000a              }\u000a              else {\u000a                while (lVar13 != 0) {\u000a                  fputc(0x20,(FILE *)format);\u000a                  lVar13 = lVar13 + -1;\u000a                }\u000a              }\u000a            }\u000a            if (uVar20 == 0) {\u000a              if ((bVar3 & 1) == 0) {\u000a                fwrite(&local_438 + 1,len_00,1,(FILE *)format);\u000a              }\u000a              else {\u000a                fwrite_uppcase((FILE *)format,&local_438 + 1,len_00);\u000a              }\u000a            }\u000a            else {\u000a              fwrite_lowcase((FILE *)format,&local_438 + 1,len_00);\u000a            }\u000a          }\u000a          local_4c0 = local_4c0 + uVar10;\u000a        }\u000a      }\u000a      else {\u000aLAB_00403e0b:\u000a        uVar8 = -uVar7;\u000a        if (bVar5 == false) {\u000a          uVar8 = uVar7;\u000a        }\u000a        src = local_441;\u000a        do {\u000a          if ((local_4c4 & 1) != 0) {\u000a            src[-1] = ':';\u000a            src = src + -1;\u000a          }\u000a          local_4c4 = (int)local_4c4 >> 1;\u000a          local_4d0 = (ulong)uVar8 * 0xcccccccd >> 0x23;\u000a          src[-1] = (char)uVar8 + ((char)(uVar8 / 10) + (char)(uVar8 / 10)) * -5 | 0x30;\u000a          src = src + -1;\u000a          uVar7 = uVar8 / 10;\u000a          bVar5 = 9 < uVar8;\u000a          uVar8 = uVar7;\u000a        } while ((bVar5) || (uVar8 = uVar7, local_4c4 != 0));\u000aLAB_00403e64:\u000a        uVar7 = (uint)uVar19;\u000a        if ((int)uVar17 < (int)uVar7) {\u000a          uVar17 = uVar7;\u000a        }\u000a        if ((char)iVar6 != 0) {\u000a          iVar6 = 0x2b;\u000a        }\u000a        __c = 0x2d;\u000a        if ((local_4a0 & 1) == 0) {\u000a          __c = iVar6;\u000a        }\u000a        cVar15 = (char)__c;\u000a        if (__c_00 == 0x2d) {\u000a          if (cVar15 != 0) {\u000a            uVar20 = 0;\u000a            if (-1 < (int)uVar7) {\u000a              uVar20 = uVar19;\u000a            }\u000a            uVar19 = 1;\u000a            if (1 < (uint)uVar20) {\u000a              uVar19 = uVar20;\u000a            }\u000a            if (~(ulong)local_4c0 <= uVar19) {\u000a              return 0;\u000a            }\u000a            if (format != (char *)0x0) {\u000a              if ((1 < (uint)uVar20) && (uVar17 == 0)) {\u000a                lVar13 = (long)(int)uVar7;\u000a                while (lVar13 = lVar13 + -1, lVar13 != 0) {\u000a                  fputc(0x20,(FILE *)format);\u000a                }\u000a              }\u000a              fputc(__c,(FILE *)format);\u000a            }\u000a            local_4c0 = local_4c0 + uVar19;\u000a          }\u000a        }\u000a        else {\u000a          pcVar11 = src + (long)(int)uVar17 + (-(ulong)(cVar15 != 0) - (long)local_441);\u000a          iVar6 = (int)pcVar11;\u000a          if (iVar6 < 1) {\u000a            if (cVar15 != 0) {\u000a              uVar20 = 0;\u000a              if (-1 < (int)uVar7) {\u000a                uVar20 = uVar19;\u000a              }\u000a              uVar19 = 1;\u000a              if (1 < (uint)uVar20) {\u000a                uVar19 = uVar20;\u000a              }\u000a              if (~(ulong)local_4c0 <= uVar19) {\u000a                return 0;\u000a              }\u000a              if (format != (char *)0x0) {\u000a                if ((1 < (uint)uVar20) && (uVar17 == 0)) {\u000a                  lVar13 = (long)(int)uVar7 + -1;\u000a                  if (__c_00 == 0x30) {\u000a                    while (lVar13 != 0) {\u000a                      fputc(0x30,(FILE *)format);\u000a                      lVar13 = lVar13 + -1;\u000a                    }\u000a                  }\u000a                  else {\u000a                    while (lVar13 != 0) {\u000a                      fputc(0x20,(FILE *)format);\u000a                      lVar13 = lVar13 + -1;\u000a                    }\u000a                  }\u000a                }\u000aLAB_0040432b:\u000a                fputc(__c,(FILE *)format);\u000a              }\u000aLAB_0040434a:\u000a              local_4c0 = local_4c0 + uVar19;\u000a            }\u000a          }\u000a          else {\u000a            uVar19 = ~(ulong)local_4c0;\u000a            if (__c_00 == 0x5f) {\u000a              uVar20 = SEXT48(iVar6);\u000a              if (uVar19 <= uVar20) {\u000a                return 0;\u000a              }\u000a              local_480 = pcVar11;\u000a              if ((format != (char *)0x0) && (local_480 = pcVar11, uVar20 != 0)) {\u000a                uVar19 = 0;\u000a                local_480 = pcVar11;\u000a                do {\u000a                  fputc(0x20,(FILE *)format);\u000a                  uVar19 = uVar19 + 1;\u000a                } while (uVar19 < uVar20);\u000a              }\u000a              local_4c0 = local_4c0 + uVar20;\u000a              uVar20 = (ulong)(uVar7 - (int)local_480);\u000a              if (uVar7 - (int)local_480 == 0 || (int)uVar7 < (int)local_480) {\u000a                uVar20 = 0;\u000a              }\u000a              uVar7 = (uint)uVar20;\u000a              if (cVar15 != 0) {\u000a                uVar19 = 1;\u000a                if (1 < uVar7) {\u000a                  uVar19 = uVar20;\u000a                }\u000a                if (~(ulong)local_4c0 <= uVar19) {\u000a                  return 0;\u000a                }\u000a                if (format != (char *)0x0) {\u000a                  if (((uVar17 == 0) && (1 < uVar7)) &&\u000a                     (local_480 = (char *)(uVar20 - 1), local_480 != (char *)0x0)) {\u000a                    pcVar11 = (char *)0x0;\u000a                    do {\u000a                      fputc(0x20,(FILE *)format);\u000a                      pcVar11 = pcVar11 + 1;\u000a                    } while (pcVar11 < local_480);\u000a                  }\u000a                  goto LAB_0040432b;\u000a                }\u000a                goto LAB_0040434a;\u000a              }\u000a            }\u000a            else {\u000a              if (uVar19 <= (ulong)(long)(int)uVar17) {\u000a                return 0;\u000a              }\u000a              if (cVar15 != 0) {\u000a                uVar8 = 0;\u000a                if (-1 < (int)uVar7) {\u000a                  uVar8 = uVar7;\u000a                }\u000a                uVar20 = 1;\u000a                if (1 < uVar8) {\u000a                  uVar20 = (ulong)uVar8;\u000a                }\u000a                if (uVar19 <= uVar20) {\u000a                  return 0;\u000a                }\u000a                if (format != (char *)0x0) {\u000a                  local_480 = pcVar11;\u000a                  if ((1 < uVar8) && (local_480 = pcVar11, uVar17 == 0)) {\u000a                    lVar13 = (long)(int)uVar7 + -1;\u000a                    local_480 = pcVar11;\u000a                    if (__c_00 == 0x30) {\u000a                      while (lVar13 != 0) {\u000a                        fputc(0x30,(FILE *)format);\u000a                        lVar13 = lVar13 + -1;\u000a                      }\u000a                    }\u000a                    else {\u000a                      while (lVar13 != 0) {\u000a                        fputc(0x20,(FILE *)format);\u000a                        lVar13 = lVar13 + -1;\u000a                      }\u000a                    }\u000a                  }\u000a                  fputc(__c,(FILE *)format);\u000a                  iVar6 = (int)local_480;\u000a                }\u000a                local_4c0 = local_4c0 + uVar20;\u000a              }\u000a              if ((format != (char *)0x0) && (iVar6 != 0)) {\u000a                uVar19 = 0;\u000a                do {\u000a                  fputc(0x30,(FILE *)format);\u000a                  uVar19 = uVar19 + 1;\u000a                } while (uVar19 < (ulong)(long)iVar6);\u000a              }\u000a              local_4c0 = local_4c0 + (long)iVar6;\u000a              uVar7 = 0;\u000a            }\u000a          }\u000a        }\u000a        __size = local_441 + -(long)src;\u000a        pcVar11 = (char *)0x0;\u000a        if (-1 < (int)uVar7) {\u000a          pcVar11 = (char *)(ulong)uVar7;\u000a        }\u000a        pcVar12 = __size;\u000a        if (__size < pcVar11) {\u000a          pcVar12 = pcVar11;\u000a        }\u000a        if ((char *)~(ulong)local_4c0 <= pcVar12) {\u000a          return 0;\u000a        }\u000a        if (format != (char *)0x0) {\u000a          if ((uVar17 == 0) && (__size < pcVar11)) {\u000a            lVar13 = (long)(int)uVar7 - (long)__size;\u000a            if (__c_00 == 0x30) {\u000a              while (lVar13 != 0) {\u000a                fputc(0x30,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a            else {\u000a              while (lVar13 != 0) {\u000a                fputc(0x20,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a          }\u000a          if (bVar3 == 0) {\u000a            fwrite(src,(size_t)__size,1,(FILE *)format);\u000a          }\u000a          else {\u000a            fwrite_uppcase((FILE *)format,src,(size_t)__size);\u000a          }\u000a        }\u000a        local_4c0 = pcVar12 + (long)local_4c0;\u000a      }\u000a      goto LAB_00404563;\u000a    case 'z':\u000aswitchD_00402ff0_caseD_7a:\u000a      if (*(int *)&tz[2].next < 0) goto LAB_00404563;\u000a      if (3 < uVar20) {\u000a        uVar17 = 0;\u000a        uVar7 = 0x18;\u000a        goto LAB_004044f0;\u000a      }\u000a      uVar7 = *(uint *)&tz[2].tz_is_set;\u000a      iVar6 = (int)uVar7 / 0x3c + ((int)uVar7 >> 0x1f) +\u000a              (uint)((ulong)((long)(int)uVar7 * 0x88888889) >> 0x3f);\u000a      uVar18 = (int)uVar7 / 0xe10 + ((int)uVar7 >> 0x1f) +\u000a               (uint)((ulong)((long)(int)uVar7 * 0x91a2b3c5) >> 0x3f);\u000a      __c = iVar6 + (iVar6 / 0x3c + (iVar6 >> 0x1f) +\u000a                    (uint)((ulong)((long)iVar6 * 0x88888889) >> 0x3f)) * -0x3c;\u000a      iVar6 = uVar7 + iVar6 * -0x3c;\u000a      switch(uVar20) {\u000a      case 0:\u000a        uVar18 = uVar18 * 100 + __c;\u000a        uVar17 = 5;\u000a        goto LAB_0040320e;\u000a      case 1:\u000aswitchD_004031f8_caseD_1:\u000a        local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a        local_4d0 = (ulong)(uVar18 * 100 + __c);\u000a        uVar17 = 6;\u000a        local_4c4 = 4;\u000a        break;\u000a      case 2:\u000aswitchD_004031f8_caseD_2:\u000a        local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a        local_4d0 = (ulong)(uVar18 * 10000 + iVar6 + __c * 100);\u000a        uVar17 = 9;\u000a        local_4c4 = 0x14;\u000a        break;\u000a      case 3:\u000a        if (iVar6 != 0) goto switchD_004031f8_caseD_2;\u000a        if (__c != 0) goto switchD_004031f8_caseD_1;\u000a        uVar17 = 3;\u000aLAB_0040320e:\u000a        local_4d0 = (ulong)uVar18;\u000a        local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a        local_4c4 = 0;\u000a      }\u000a      uVar7 = 0x4a;\u000aLAB_004044f0:\u000a      if ((char)uVar7 == 0x18) break;\u000a      iVar6 = 1;\u000a      if ((char)uVar7 == 'J') goto LAB_00403cfb;\u000aLAB_00402f53:\u000a      if ((uVar7 | 4) != 4) {\u000a        return 0;\u000a      }\u000a      goto LAB_00404563;\u000a    }\u000a    __ptr = (tm_zone *)((long)&tp->tm_sec + 1);\u000a    lVar13 = 0;\u000a    iVar6 = 1;\u000a    do {\u000a      __c = iVar6;\u000a      lVar13 = lVar13 + 0x100000000;\u000a      ptVar2 = __ptr + -1;\u000a      __ptr = (tm_zone *)&__ptr[-1].field_0xf;\u000a      iVar6 = __c + 1;\u000a    } while (*(char *)&ptVar2->field_0xf != '%');\u000a    len = lVar13 >> 0x20;\u000a    uVar20 = 0;\u000a    if (-1 < (int)uVar8) {\u000a      uVar20 = uVar19;\u000a    }\u000a    uVar19 = len;\u000a    if (len < uVar20) {\u000a      uVar19 = uVar20;\u000a    }\u000a    if (~(ulong)local_4c0 <= uVar19) {\u000a      return 0;\u000a    }\u000a    if (format != (char *)0x0) {\u000a      if ((uVar17 == 0) && (len < uVar20)) {\u000a        uVar20 = SEXT48((int)uVar8);\u000a        if (__c_00 == 0x30) {\u000a          if (uVar20 != len) {\u000a            lVar13 = uVar20 - (long)__c;\u000a            do {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            } while (lVar13 != 0);\u000a          }\u000a        }\u000a        else {\u000a          if (uVar20 != len) {\u000a            lVar13 = uVar20 - (long)__c;\u000a            do {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            } while (lVar13 != 0);\u000a          }\u000a        }\u000a      }\u000a      if ((bVar3 & 1) == 0) {\u000aLAB_00403628:\u000a        fwrite(__ptr,len,1,(FILE *)format);\u000a      }\u000a      else {\u000a        fwrite_uppcase((FILE *)format,(char *)__ptr,len);\u000a      }\u000a    }\u000aLAB_00403c39:\u000a    local_4c0 = local_4c0 + uVar19;\u000aLAB_00404563:\u000a    piVar1 = &tp->tm_sec;\u000a    tp = (tm *)((long)&tp->tm_sec + 1);\u000a    if (*(char *)((long)piVar1 + 1) == 0) {\u000a      return (size_t)local_4c0;\u000a    }\u000a  } while( true );\u000aswitchD_00402ff0_caseD_52:\u000a  sVar9 = strftime_case_((FILE *)(ulong)(bVar3 != 0),(char *)0x0,(tm *)src,tz);\u000a  uVar20 = 0;\u000a  if (-1 < (int)uVar8) {\u000a    uVar20 = uVar19;\u000a  }\u000a  uVar19 = sVar9;\u000a  if (sVar9 < uVar20) {\u000a    uVar19 = uVar20;\u000a  }\u000a  if (~(ulong)local_4c0 <= uVar19) {\u000a    return 0;\u000a  }\u000a  if (format != (char *)0x0) {\u000a    if (sVar9 < uVar20) {\u000a      lVar13 = (long)(int)uVar8 - sVar9;\u000a      if (__c_00 == 0x30) {\u000a        while (lVar13 != 0) {\u000a          fputc(0x30,(FILE *)format);\u000a          lVar13 = lVar13 + -1;\u000a        }\u000a      }\u000a      else {\u000a        while (lVar13 != 0) {\u000a          fputc(0x20,(FILE *)format);\u000a          lVar13 = lVar13 + -1;\u000a        }\u000a      }\u000a    }\u000a    strftime_case_((FILE *)(ulong)(bVar3 != 0),format,(tm *)src,tz);\u000a  }\u000a  goto LAB_00403c39;\u000a}\u000a\u000a
p332
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x4a8\nMOV dword ptr [RSP + 0x4c],R9D\nMOV qword ptr [RSP + 0x70],R8\nMOV R12,RDX\nMOV R8,RSI\nMOV dword ptr [RSP + 0x7c],EDI\nMOV EAX,dword ptr [RCX + 0x8]\nMOV qword ptr [RSP + 0x28],RCX\nMOV RCX,qword ptr [RCX + 0x30]\nTEST RCX,RCX\nMOV EDX,0x40d569\nCMOVNZ RDX,RCX\nMOV qword ptr [RSP + 0x68],RDX\nLEA ECX,[RAX + -0xc]\nTEST EAX,EAX\nMOV EDX,0xc\nCMOVNZ EDX,EAX\nCMP EAX,0xc\nCMOVG EDX,ECX\nMOV dword ptr [RSP + 0x64],EDX\nCMP byte ptr [R12],0x0\nJZ 0x00404576\nMOV R14,0x100000000\nXOR R9D,R9D\nMOV qword ptr [RSP],R8\nJMP 0x00402ea0\nSHR EBP,0x1f\nMOV EDI,0x3\nJMP 0x0040320e\nMOVSX EDI,byte ptr [R12]\nCMP EDI,0x25\nJNZ 0x00402f10\nMOV dword ptr [RSP + 0x14],EBX\nXOR EBX,EBX\nMOV EAX,dword ptr [RSP + 0x7c]\nMOV R10B,AL\nXOR R13D,R13D\nINC R12\nJMP 0x00402ec6\nINC R12\nMOV R13D,EAX\nMOVSX EAX,byte ptr [R12]\nCMP EAX,0x2f\nJLE 0x00402ef0\nCMP EAX,0x30\nJZ 0x00402ec0\nCMP EAX,0x5f\nJZ 0x00402ec0\nCMP EAX,0x5e\nJNZ 0x00402f70\nMOV R10B,0x1\nINC R12\nJMP 0x00402ec6\nCMP EAX,0x2d\nJZ 0x00402ec0\nCMP EAX,0x23\nJNZ 0x00402f70\nMOV BL,0x1\nINC R12\nJMP 0x00402ec6\nMOV EAX,0x1\nCMP R9,-0x3\nJA 0x00402f49\nTEST R8,R8\nJZ 0x00402f44\nMOV RSI,R8\nMOV R15D,EBX\nMOV RBX,R9\nMOV R13,RBP\nMOV RBP,R11\nCALL 0x004018f0\nMOV R11,RBP\nMOV RBP,R13\nMOV R9,RBX\nMOV EBX,R15D\nMOV R8,qword ptr [RSP]\nINC R9\nXOR EAX,EAX\nTEST EAX,EAX\nMOV ECX,0x4\nCMOVZ EAX,ECX\nOR EAX,0x4\nCMP EAX,0x4\nJZ 0x00404563\nJMP 0x00404576\nADD EAX,-0x30\nMOV R15D,0xffffffff\nCMP EAX,0x9\nJA 0x00402fbc\nXOR EAX,EAX\nMOV R15D,0x7fffffff\nCMP EAX,0xccccccc\nJG 0x00402fa8\nMOVSX ECX,byte ptr [R12]\nADD ECX,-0x30\nCMP EAX,0xccccccc\nJNZ 0x00402fa1\nCMP ECX,0x7\nJG 0x00402fa8\nLEA EAX,[RAX + RAX*0x4]\nLEA R15D,[RCX + RAX*0x2]\nMOVSX EAX,byte ptr [R12 + 0x1]\nINC R12\nADD EAX,-0x30\nCMP EAX,0xa\nMOV EAX,R15D\nJC 0x00402f80\nMOV qword ptr [RSP + 0x38],RBP\nMOVSX ESI,byte ptr [R12]\nCMP ESI,0x4f\nJZ 0x00402fd0\nCMP ESI,0x45\nJNZ 0x00402fd5\nINC R12\nJMP 0x00402fd7\nXOR ESI,ESI\nMOVSX ECX,byte ptr [R12]\nCMP ECX,0x7a\nJA 0x00403521\nXOR EDX,EDX\nMOV AL,0x72\nMOV EBP,0x40bb4a\nXOR EDI,EDI\nJMP qword ptr [0x40b740 + RCX*0x8]\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV dword ptr [RSP + 0x14],ESI\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x18],R9\nMOV RDX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RDX + 0x14]\nMOV ESI,dword ptr [RDX + 0x18]\nMOV ECX,EAX\nSAR ECX,0x1f\nAND ECX,0x190\nLEA EBX,[RAX + RCX*0x1 + -0x64]\nMOV EDI,dword ptr [RDX + 0x1c]\nMOV R14D,EDI\nCALL 0x00404630\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00403a55\nMOV EAX,0x16d\nTEST BL,0x3\nJNZ 0x0040308e\nMOVSXD RAX,EBX\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSAR RCX,0x25\nMOV RDX,RAX\nSHR RDX,0x3f\nADD ECX,EDX\nIMUL ECX,ECX,0x64\nSAR RAX,0x27\nADD EAX,EDX\nIMUL EAX,EAX,0x190\nXOR EDX,EDX\nCMP EBX,EAX\nSETZ DL\nADD EDX,0x16d\nCMP EBX,ECX\nMOV EAX,0x16e\nCMOVZ EAX,EDX\nSUB R14D,EAX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV ESI,dword ptr [RAX + 0x18]\nMOV EDI,R14D\nCALL 0x00404630\nMOV ECX,EAX\nSHR ECX,0x1f\nXOR ECX,0x1\nTEST EAX,EAX\nCMOVNS EBP,EAX\nJMP 0x00403ab8\nTEST BL,BL\nJZ 0x004030ba\nMOV R10B,0x1\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nMOV EAX,ECX\nXOR EDX,EDX\nJMP 0x00403d20\nDEC R12\nJMP 0x00403521\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x0040454c\nMOV qword ptr [RSP + 0x8],R11\nMOV R14,R9\nCMP EAX,0x2\nJC 0x00404533\nMOVSXD RBP,R15D\nDEC RBP\nCMP R13D,0x30\nJNZ 0x00404518\nTEST RBP,RBP\nJZ 0x00404533\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403135\nJMP 0x00404533\nMOV EDX,0x1\nJMP 0x00403163\nINC RDX\nMOVZX EAX,byte ptr [R12 + RDX*0x1]\nCMP AL,0x3a\nJZ 0x00403160\nCMP AL,0x7a\nJNZ 0x00403521\nADD R12,RDX\nMOV RAX,qword ptr [RSP + 0x28]\nCMP dword ptr [RAX + 0x20],0x0\nJS 0x0040455a\nCMP RDX,0x3\nMOV qword ptr [RSP + 0x8],RCX\nJA 0x00403c7d\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RBP,dword ptr [RAX + 0x28]\nIMUL RAX,RBP,-0x77777777\nSHR RAX,0x20\nADD EAX,EBP\nMOV ECX,EAX\nSHR ECX,0x1f\nSAR EAX,0x5\nADD EAX,ECX\nIMUL R11,RBP,-0x6e5d4c3b\nSHR R11,0x20\nADD R11D,EBP\nMOV ECX,R11D\nSHR ECX,0x1f\nSAR R11D,0xb\nADD R11D,ECX\nCDQE\nIMUL RCX,RAX,-0x77777777\nSHR RCX,0x20\nADD ECX,EAX\nMOV RDI,RDX\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x5\nADD ECX,EDX\nIMUL ECX,ECX,0x3c\nIMUL EDX,EAX,0x3c\nSUB EAX,ECX\nMOV ECX,EBP\nSUB ECX,EDX\nJMP qword ptr [0x40bb18 + RDI*0x8]\nSHR EBP,0x1f\nIMUL R11D,R11D,0x64\nADD R11D,EAX\nMOV EDI,0x5\nXOR EBX,EBX\nJMP 0x004044eb\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nTEST BL,BL\nJZ 0x00403226\nMOV R10B,0x1\nXOR EDX,EDX\nMOV AL,0x41\nJMP 0x00403c4b\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nTEST BL,BL\nJZ 0x00403240\nMOV R10B,0x1\nXOR EDX,EDX\nMOV AL,0x42\nJMP 0x00403c4b\nCMP ESI,0x45\nJZ 0x00403c41\nCMP ESI,0x4f\nJZ 0x00403521\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RAX,dword ptr [RAX + 0x14]\nCMP RAX,0xfffff894\nSETL BPL\nSETG CL\nIMUL R11,RAX,0x51eb851f\nMOV RDX,R11\nSHR RDX,0x3f\nSAR R11,0x25\nADD R11D,EDX\nIMUL EDX,R11D,0x64\nCMP EAX,EDX\nSETS AL\nAND AL,CL\nMOVZX EAX,AL\nSUB R11D,EAX\nADD R11D,0x13\nJMP 0x004037ef\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nMOV EBP,0x40bb38\nJMP 0x004033c1\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nMOV EBP,0x40bb41\nJMP 0x004033c1\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x8]\nMOV EDX,0x2\nJMP 0x00403ced\nMOV EDX,0x2\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV EAX,dword ptr [RSP + 0x64]\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x4]\nMOV EDX,0x2\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nCMP R15D,-0x1\nMOV qword ptr [RSP + 0x8],RCX\nJZ 0x00403cbc\nCMP R15D,0x8\nJG 0x00403ce6\nMOV ECX,0x9\nMOV EAX,dword ptr [RSP + 0x4c]\nNOP dword ptr [RAX]\nCDQE\nIMUL RAX,RAX,0x66666667\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x22\nADD EAX,EDX\nDEC ECX\nCMP R15D,ECX\nJNZ 0x00403360\nJMP 0x00403cea\nMOV DL,0x1\nXOR EDI,EDI\nTEST BL,BL\nJZ 0x00403390\nMOV R10D,0x0\nJZ 0x00403394\nMOV DL,0x1\nMOV AL,0x70\nJMP 0x00403d20\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX]\nMOV EDX,0x2\nJMP 0x00403ced\nMOV EBP,0x40bb50\nXOR EDI,EDI\nMOV dword ptr [RSP + 0x24],R10D\nTEST R10B,R10B\nSETNZ DIL\nXOR EBX,EBX\nXOR ESI,ESI\nMOV RDX,RBP\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R8,qword ptr [RSP + 0x70]\nMOV qword ptr [RSP + 0x18],R9\nMOV R9D,dword ptr [RSP + 0x4c]\nMOV qword ptr [RSP + 0x8],R11\nCALL 0x00402e10\nMOV R11,qword ptr [RSP + 0x8]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R8,qword ptr [RSP]\nTEST R15D,R15D\nCMOVNS EBX,R15D\nCMP RAX,RBX\nMOV R14,RAX\nCMOVC R14,RBX\nMOV RCX,R9\nNOT RCX\nCMP R14,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x00403c39\nCMP RAX,RBX\nJNC 0x00403c06\nMOVSXD RBX,R15D\nSUB RBX,RAX\nCMP R13D,0x30\nJNZ 0x00403bdf\nTEST RBX,RBX\nJZ 0x00403c06\nNOP dword ptr [RAX]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403450\nJMP 0x00403c06\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RCX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RCX + 0x1c]\nADD EAX,0x7\nSUB EAX,dword ptr [RCX + 0x18]\nCDQE\nJMP 0x004034de\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RCX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RCX + 0x18]\nMOV ECX,dword ptr [RCX + 0x1c]\nLEA EDX,[RAX + 0x6]\nMOVSXD RDX,EDX\nMOV EDI,ESI\nIMUL RSI,RDX,-0x6db6db6d\nSHR RSI,0x20\nLEA EAX,[RSI + RAX*0x1 + 0x6]\nMOV ESI,EAX\nSHR ESI,0x1f\nSAR EAX,0x2\nADD EAX,ESI\nLEA ESI,[RAX*0x8]\nSUB ESI,EAX\nSUB EDX,ESI\nMOV ESI,EDI\nADD ECX,0x7\nSUB ECX,EDX\nMOVSXD RAX,ECX\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD EAX,ECX\nMOV ECX,EAX\nSHR ECX,0x1f\nSAR EAX,0x2\nADD EAX,ECX\nMOV EDX,0x2\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x4f\nJZ 0x00403530\nMOV AL,0x58\nXOR EDX,EDX\nJMP 0x00403d20\nCMP ESI,0x45\nJZ 0x00403c47\nCMP ESI,0x4f\nJNZ 0x00403c52\nXOR EDI,EDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV dword ptr [RSP + 0x24],R10D\nLEA RBP,[R12 + 0x1]\nMOV ECX,0x1\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EAX,ECX\nADD RBX,R14\nLEA ECX,[RAX + 0x1]\nCMP byte ptr [RBP + -0x1],0x25\nLEA RBP,[RBP + -0x1]\nJNZ 0x00403550\nSAR RBX,0x20\nTEST R15D,R15D\nMOV ECX,0x0\nCMOVNS ECX,R15D\nCMP RBX,RCX\nMOV R14,RBX\nCMOVC R14,RCX\nMOV RDX,R9\nNOT RDX\nCMP R14,RDX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x00403c39\nMOV qword ptr [RSP + 0x8],R11\nMOV qword ptr [RSP + 0x18],R9\nCMP RBX,RCX\nSETNC CL\nTEST EDI,EDI\nJNZ 0x00403616\nTEST CL,CL\nJNZ 0x00403616\nMOVSXD R15,R15D\nMOV RCX,R15\nSUB RCX,RBX\nCMP R13D,0x30\nJNZ 0x004035e8\nTEST RCX,RCX\nJZ 0x00403616\nCDQE\nSUB R15,RAX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC R15\nJNZ 0x004035d0\nJMP 0x00403616\nTEST RCX,RCX\nJZ 0x00403616\nCDQE\nSUB R15,RAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC R15\nJNZ 0x00403600\nTEST byte ptr [RSP + 0x24],0x1\nJNZ 0x00403635\nMOV EDX,0x1\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RCX,R8\nCALL 0x00401b30\nJMP 0x00403c2b\nMOV RDI,R8\nMOV RSI,RBP\nMOV RDX,RBX\nCALL 0x004045e0\nJMP 0x00403c2b\nMOV dword ptr [RSP + 0x24],R10D\nMOV RDI,qword ptr [RSP + 0x68]\nMOV qword ptr [RSP + 0x18],R9\nMOV qword ptr [RSP + 0x8],R11\nCALL 0x00401840\nMOV R11,qword ptr [RSP + 0x8]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R8,qword ptr [RSP]\nXOR EDX,EDX\nTEST R15D,R15D\nCMOVNS EDX,R15D\nCMP RAX,RDX\nMOV R14,RAX\nCMOVC R14,RDX\nMOV RCX,R9\nNOT RCX\nCMP R14,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x00403c39\nMOV qword ptr [RSP + 0x30],RAX\nCMP RAX,RDX\nJNC 0x00404246\nMOVSXD RBP,R15D\nSUB RBP,qword ptr [RSP + 0x30]\nCMP R13D,0x30\nJNZ 0x00404223\nTEST RBP,RBP\nJZ 0x00404246\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x004036d0\nJMP 0x00404246\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00403530\nTEST BL,BL\nJZ 0x004036fc\nMOV R10B,0x1\nXOR EDX,EDX\nMOV AL,0x61\nJMP 0x00403c4b\nXOR EDI,EDI\nCMP ESI,0x4f\nJZ 0x00403530\nMOV AL,0x63\nXOR EDX,EDX\nJMP 0x00403d20\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0xc]\nMOV EDX,0x2\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0xc]\nJMP 0x004037a2\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R11D,dword ptr [RAX + 0x1c]\nCMP R11D,-0x1\nSETL BPL\nINC R11D\nMOV EDI,0x3\nJMP 0x00403bb0\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x004037a2\nXOR EDI,EDI\nCMP ESI,0x45\nMOV EAX,dword ptr [RSP + 0x64]\nJZ 0x00403530\nMOV EDX,0x2\nCMP R13D,0x2d\nMOV qword ptr [RSP + 0x8],RCX\nJZ 0x00403ced\nCMP R13D,0x30\nJZ 0x00403ced\nMOV R13D,0x5f\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R11D,dword ptr [RAX + 0x10]\nCMP R11D,-0x1\nSETL BPL\nINC R11D\nMOV EDI,0x2\nJMP 0x00403bb0\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x0040454c\nMOV qword ptr [RSP + 0x8],R11\nMOV R14,R9\nCMP EAX,0x2\nJC 0x004042a6\nMOVSXD RBP,R15D\nDEC RBP\nCMP R13D,0x30\nJNZ 0x00404283\nTEST RBP,RBP\nJZ 0x004042a6\nNOP\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403850\nJMP 0x004042a6\nMOV qword ptr [RSP + 0x8],R11\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x18],R9\nMOV RCX,qword ptr [RSP + 0x28]\nMOV RAX,qword ptr [RCX + 0x30]\nMOV qword ptr [0xd0 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RCX]\nMOVUPS XMM1,xmmword ptr [RCX + 0x10]\nMOVUPS XMM2,xmmword ptr [RCX + 0x20]\nMOVAPS xmmword ptr [0xc0 + RSP],XMM2\nMOVAPS xmmword ptr [0xb0 + RSP],XMM1\nMOVAPS xmmword ptr [0xa0 + RSP],XMM0\nLEA RSI,[0xa0 + RSP]\nMOV RDI,qword ptr [RSP + 0x70]\nCALL 0x00409590\nMOV RCX,RAX\nSHR RAX,0x3f\nMOV RBX,RAX\nMOV RSI,RCX\nLEA R14,[0x97 + RSP]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDX,0x6666666666666667\nMOV RAX,RSI\nIMUL RDX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + RAX*0x1]\nADD EDI,EDI\nLEA EDI,[RDI + RDI*0x4]\nMOV EBP,ESI\nSUB EBP,EDI\nADD RDX,RAX\nMOV EAX,EBP\nNEG EAX\nTEST RCX,RCX\nCMOVNS EAX,EBP\nADD EAX,0x30\nMOV byte ptr [R14 + -0x1],AL\nDEC R14\nADD RSI,0x9\nCMP RSI,0x12\nMOV RSI,RDX\nJA 0x004038e0\nMOV EDI,0x1\nXOR ECX,ECX\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R10D,dword ptr [RSP + 0x24]\nMOV RBP,RBX\nMOV R11,qword ptr [RSP + 0x8]\nMOV EBX,dword ptr [RSP + 0x14]\nJMP 0x00403e64\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x0040454c\nMOV qword ptr [RSP + 0x8],R11\nMOV R14,R9\nCMP EAX,0x2\nJC 0x004042d6\nMOVSXD RBP,R15D\nDEC RBP\nCMP R13D,0x30\nJNZ 0x004042b0\nTEST RBP,RBP\nJZ 0x004042d6\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x004039b0\nJMP 0x004042d6\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV ECX,dword ptr [RAX + 0x18]\nLEA EAX,[RCX + 0x6]\nCDQE\nIMUL RDX,RAX,-0x6db6db6d\nSHR RDX,0x20\nLEA ECX,[RDX + RCX*0x1 + 0x6]\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x2\nADD ECX,EDX\nLEA EDX,[RCX*0x8]\nSUB EDX,ECX\nSUB EAX,EDX\nINC EAX\nMOV EDX,0x1\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00403530\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x18]\nMOV EDX,0x1\nJMP 0x00403ced\nXOR EDI,EDI\nCMP ESI,0x4f\nJZ 0x00403530\nMOV AL,0x78\nXOR EDX,EDX\nJMP 0x00403d20\nCMP ESI,0x45\nJNZ 0x00403b41\nXOR EDX,EDX\nMOV AL,0x79\nJMP 0x00403c4b\nDEC EBX\nMOV EDI,0x16d\nTEST BL,0x3\nJNZ 0x00403aa1\nMOVSXD RAX,EBX\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSAR RCX,0x25\nMOV RDX,RAX\nSHR RDX,0x3f\nADD ECX,EDX\nIMUL ECX,ECX,0x64\nSAR RAX,0x27\nADD EAX,EDX\nIMUL EAX,EAX,0x190\nXOR EDX,EDX\nCMP EBX,EAX\nSETZ DL\nADD EDX,0x16d\nCMP EBX,ECX\nMOV EDI,0x16e\nCMOVZ EDI,EDX\nADD EDI,R14D\nMOV RAX,qword ptr [RSP + 0x28]\nMOV ESI,dword ptr [RAX + 0x18]\nCALL 0x00404630\nMOV EBP,EAX\nMOV ECX,0xffffffff\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R14,0x100000000\nMOV R10D,dword ptr [RSP + 0x24]\nMOV ESI,dword ptr [RSP + 0x14]\nMOVSX EAX,byte ptr [R12]\nCMP EAX,0x47\nJZ 0x00403b8e\nCMP EAX,0x67\nJNZ 0x00403bb9\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RSI,dword ptr [RAX + 0x14]\nIMUL RAX,RSI,0x51eb851f\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x25\nADD EAX,EDX\nIMUL EAX,EAX,0x64\nMOV EDX,ESI\nSUB EDX,EAX\nADD EDX,ECX\nMOVSXD RAX,EDX\nIMUL RDX,RAX,0x51eb851f\nMOV RDI,RDX\nSHR RDI,0x3f\nSAR RDX,0x25\nADD EDX,EDI\nIMUL EDX,EDX,0x64\nSUB EAX,EDX\nMOV EDX,0x2\nJS 0x00403ccd\nMOV ESI,dword ptr [RSP + 0x14]\nJMP 0x00403ced\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RCX,dword ptr [RAX + 0x14]\nIMUL RAX,RCX,0x51eb851f\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x25\nADD EAX,EDX\nIMUL EDX,EAX,0x64\nMOV EAX,ECX\nSUB EAX,EDX\nMOV EDX,0x2\nJNS 0x00403ced\nMOV EDI,ESI\nMOV ESI,EAX\nNEG ESI\nADD EAX,0x64\nCMP ECX,0xfffff894\nCMOVL EAX,ESI\nMOV ESI,EDI\nJMP 0x00403ced\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x14]\nMOV EDX,0xfffff894\nSUB EDX,ECX\nCMP EAX,EDX\nSETL BPL\nLEA R11D,[0x76c + RCX + RAX*0x1]\nMOV EDI,0x4\nXOR EBX,EBX\nXOR ECX,ECX\nJMP 0x00403cfb\nMOVSXD RAX,EBP\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD EAX,ECX\nMOV ECX,EAX\nSAR ECX,0x2\nSHR EAX,0x1f\nLEA EAX,[RCX + RAX*0x1 + 0x1]\nMOV EDX,0x2\nJMP 0x00403ced\nTEST RBX,RBX\nJZ 0x00403c06\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403bf0\nXOR EDI,EDI\nCMP byte ptr [RSP + 0x24],0x0\nSETNZ DIL\nMOV RSI,R8\nMOV RDX,RBP\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R8,qword ptr [RSP + 0x70]\nMOV R9D,dword ptr [RSP + 0x4c]\nCALL 0x00402e10\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nADD R9,R14\nJMP 0x00404550\nXOR EDX,EDX\nMOV AL,0x43\nJMP 0x00403c4b\nXOR EDX,EDX\nMOV AL,0x59\nXOR EDI,EDI\nJMP 0x00403d20\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R11D,dword ptr [RAX + 0x14]\nCMP R11D,0xfffff894\nSETL AL\nADD R11D,0x76c\nXOR ECX,ECX\nMOV EDI,0x4\nMOV BPL,AL\nXOR EBX,EBX\nJMP 0x00403e0b\nXOR EDI,EDI\nMOV EAX,0x18\nMOV RBP,qword ptr [RSP + 0x38]\nMOV EBX,dword ptr [RSP + 0x14]\nJMP 0x004044f0\nTEST ECX,ECX\nJZ 0x004044cf\nSHR EBP,0x1f\nIMUL R11D,R11D,0x2710\nIMUL EAX,EAX,0x64\nADD R11D,ECX\nADD R11D,EAX\nMOV EDI,0x9\nMOV EBX,0x14\nJMP 0x004044eb\nMOV R15D,0x9\nMOV EAX,dword ptr [RSP + 0x4c]\nMOV EDX,0x9\nJMP 0x00403ced\nMOV EDI,0xfffff894\nSUB EDI,ECX\nMOV ECX,EAX\nNEG ECX\nADD EAX,0x64\nCMP ESI,EDI\nCMOVL EAX,ECX\nMOV ESI,dword ptr [RSP + 0x14]\nJMP 0x00403ced\nMOV EAX,dword ptr [RSP + 0x4c]\nMOV EDX,R15D\nMOV EBP,EAX\nSHR EBP,0x1f\nXOR EBX,EBX\nXOR ECX,ECX\nMOV R11D,EAX\nMOV EDI,EDX\nMOV EAX,EBP\nAND AL,0x1\nCMP ESI,0x4f\nJNZ 0x00403e0b\nTEST AL,AL\nJNZ 0x00403e0b\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x38],RBP\nXOR EDX,EDX\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x30],RDX\nMOV EBP,EDI\nMOV qword ptr [RSP + 0x8],R11\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x18],R9\nMOV word ptr [RSP + 0x53],0x2520\nTEST ESI,ESI\nLEA RCX,[RSP + 0x55]\nJZ 0x00403d50\nMOV byte ptr [RSP + 0x55],SIL\nLEA RCX,[RSP + 0x56]\nMOV byte ptr [RCX],AL\nMOV byte ptr [RCX + 0x1],0x0\nLEA RDI,[0xa0 + RSP]\nLEA RDX,[RSP + 0x53]\nMOV ESI,0x400\nMOV RCX,qword ptr [RSP + 0x28]\nCALL 0x00401aa0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00403f2d\nDEC RBX\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP RBX,RAX\nMOV R14,RBX\nCMOVC R14,RAX\nMOV R9,qword ptr [RSP + 0x18]\nMOV RCX,R9\nNOT RCX\nCMP R14,RCX\nJNC 0x00404576\nMOV R8,qword ptr [RSP]\nTEST R8,R8\nJZ 0x0040415f\nCMP RBX,RAX\nSETNC AL\nTEST EBP,EBP\nJNZ 0x00404106\nTEST AL,AL\nJNZ 0x00404106\nMOVSXD RBP,R15D\nSUB RBP,RBX\nCMP R13D,0x30\nJNZ 0x004040eb\nTEST RBP,RBP\nJZ 0x00404106\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403df0\nJMP 0x00404106\nMOV EDX,R11D\nNEG EDX\nTEST AL,AL\nCMOVZ EDX,R11D\nLEA R14,[0x97 + RSP]\nNOP\nTEST BL,0x1\nJZ 0x00403e2d\nMOV byte ptr [R14 + -0x1],0x3a\nDEC R14\nSAR EBX,1\nMOV EAX,EDX\nMOV R11D,0xcccccccd\nIMUL R11,RAX\nSHR R11,0x23\nLEA EAX,[R11 + R11*0x1]\nLEA EAX,[RAX + RAX*0x4]\nMOV ESI,EDX\nSUB ESI,EAX\nOR SIL,0x30\nMOV byte ptr [R14 + -0x1],SIL\nDEC R14\nCMP EDX,0x9\nMOV EDX,R11D\nJA 0x00403e20\nTEST EBX,EBX\nMOV EDX,R11D\nJNZ 0x00403e20\nCMP EDI,R15D\nCMOVL EDI,R15D\nTEST CL,CL\nJZ 0x00403e71\nMOV CL,0x2b\nTEST BPL,0x1\nMOV SIL,0x2d\nJNZ 0x00403e7c\nMOV ESI,ECX\nCMP R13D,0x2d\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x38],RBP\nMOV qword ptr [RSP + 0x8],R11\nMOV dword ptr [RSP + 0x14],EBX\nJNZ 0x00403f3b\nTEST SIL,SIL\nJZ 0x004043e0\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x00403f25\nMOV byte ptr [RSP + 0x40],SIL\nMOV dword ptr [RSP + 0x30],EDI\nMOV qword ptr [RSP + 0x18],R9\nCMP EAX,0x2\nJC 0x00403f06\nCMP dword ptr [RSP + 0x30],0x0\nJNZ 0x00403f06\nMOVSXD RBP,R15D\nDEC RBP\nJZ 0x00403f06\nNOP dword ptr [RAX]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403ef0\nMOVZX EDI,byte ptr [RSP + 0x40]\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nADD R9,RBX\nJMP 0x004043e0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nJMP 0x0040416c\nMOVSXD RCX,EDI\nMOV RAX,R14\nLEA RDX,[0x97 + RSP]\nSUB RAX,RDX\nMOV EDX,ESI\nNEG DL\nSBB RDX,RDX\nADD RDX,RAX\nADD RDX,RCX\nTEST EDX,EDX\nJLE 0x00404060\nMOV RAX,R9\nNOT RAX\nCMP R13D,0x5f\nMOV dword ptr [RSP + 0x30],EDI\nJNZ 0x0040417b\nMOVSXD RBX,EDX\nCMP RBX,RAX\nJNC 0x00404576\nMOV qword ptr [RSP + 0x58],RDX\nMOV byte ptr [RSP + 0x40],SIL\nMOV qword ptr [RSP + 0x18],R9\nTEST R8,R8\nJZ 0x00403fb9\nTEST RBX,RBX\nJZ 0x00403fb9\nXOR EBP,EBP\nNOP dword ptr [RAX]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nINC RBP\nCMP RBP,RBX\nJC 0x00403fa0\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,RBX\nXOR EAX,EAX\nSUB R15D,dword ptr [RSP + 0x58]\nCMOVLE R15D,EAX\nCMP byte ptr [RSP + 0x40],0x0\nJZ 0x004043d7\nCMP R15D,0x1\nMOV EBP,0x1\nCMOVA EBP,R15D\nMOV RAX,R9\nNOT RAX\nCMP RBP,RAX\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nJNC 0x00404576\nTEST R8,R8\nJZ 0x0040434a\nMOV qword ptr [RSP + 0x18],R9\nTEST EDI,EDI\nJNZ 0x0040432b\nCMP R15D,0x2\nJC 0x0040432b\nMOV EAX,R15D\nDEC RAX\nCMP R13D,0x30\nMOV qword ptr [RSP + 0x58],RAX\nJNZ 0x00404308\nTEST RAX,RAX\nJZ 0x0040432b\nXOR EBX,EBX\nNOP dword ptr [RAX]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nINC RBX\nCMP RBX,qword ptr [RSP + 0x58]\nJC 0x00404040\nJMP 0x0040432b\nTEST SIL,SIL\nJZ 0x004043e0\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBP,0x1\nCMOVA EBP,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBP,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x0040434a\nMOV byte ptr [RSP + 0x40],SIL\nMOV dword ptr [RSP + 0x30],EDI\nMOV qword ptr [RSP + 0x18],R9\nCMP EAX,0x2\nJC 0x0040432b\nCMP dword ptr [RSP + 0x30],0x0\nJNZ 0x0040432b\nMOVSXD RBX,R15D\nDEC RBX\nCMP R13D,0x30\nJNZ 0x004042e0\nTEST RBX,RBX\nJZ 0x0040432b\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x004040d0\nJMP 0x0040432b\nTEST RBP,RBP\nJZ 0x00404106\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x004040f0\nTEST byte ptr [RSP + 0x30],0x1\nJNZ 0x0040412e\nTEST byte ptr [RSP + 0x24],0x1\nJNZ 0x00404143\nMOV EDX,0x1\nLEA RDI,[0xa1 + RSP]\nMOV RSI,RBX\nMOV RCX,R8\nCALL 0x00401b30\nJMP 0x00404156\nMOV RDI,R8\nLEA RSI,[0xa1 + RSP]\nMOV RDX,RBX\nCALL 0x00404590\nJMP 0x00404156\nMOV RDI,R8\nLEA RSI,[0xa1 + RSP]\nMOV RDX,RBX\nCALL 0x004045e0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,R14\nMOV R14,0x100000000\nMOV RBP,qword ptr [RSP + 0x38]\nMOV R11,qword ptr [RSP + 0x8]\nJMP 0x0040455f\nCMP RCX,RAX\nJNC 0x00404576\nTEST SIL,SIL\nJZ 0x0040421b\nXOR ECX,ECX\nTEST R15D,R15D\nCMOVNS ECX,R15D\nCMP ECX,0x1\nMOV EBP,0x1\nCMOVA EBP,ECX\nCMP RBP,RAX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x00404395\nMOV qword ptr [RSP + 0x40],RBP\nMOV qword ptr [RSP + 0x58],RDX\nMOV EBP,ESI\nMOV qword ptr [RSP + 0x18],R9\nCMP ECX,0x2\nJC 0x00404376\nCMP dword ptr [RSP + 0x30],0x0\nJNZ 0x00404376\nMOVSXD RBX,R15D\nDEC RBX\nCMP R13D,0x30\nJNZ 0x00404352\nTEST RBX,RBX\nJZ 0x00404376\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00404200\nJMP 0x00404376\nMOV R15,RDX\nJMP 0x0040439b\nTEST RBP,RBP\nJZ 0x00404246\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00404230\nTEST BL,BL\nJZ 0x00404261\nMOV RDI,R8\nMOV RSI,qword ptr [RSP + 0x68]\nMOV RDX,qword ptr [RSP + 0x30]\nCALL 0x00404590\nJMP 0x00403c2b\nCMP byte ptr [RSP + 0x24],0x0\nJZ 0x004044bb\nMOV RDI,R8\nMOV RSI,qword ptr [RSP + 0x68]\nMOV RDX,qword ptr [RSP + 0x30]\nCALL 0x004045e0\nJMP 0x00403c2b\nTEST RBP,RBP\nJZ 0x004042a6\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00404290\nMOV EDI,0xa\nJMP 0x00404538\nTEST RBP,RBP\nJZ 0x004042d6\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x004042c0\nMOV EDI,0x9\nJMP 0x00404538\nTEST RBX,RBX\nJZ 0x0040432b\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x004042f0\nJMP 0x0040432b\nTEST RAX,RAX\nJZ 0x0040432b\nXOR EBX,EBX\nNOP\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nINC RBX\nCMP RBX,qword ptr [RSP + 0x58]\nJC 0x00404310\nMOVZX EDI,byte ptr [RSP + 0x40]\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nADD R9,RBP\nJMP 0x004043e0\nTEST RBX,RBX\nJZ 0x00404376\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00404360\nMOVZX EDI,BPL\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV RDX,qword ptr [RSP + 0x58]\nMOV RBP,qword ptr [RSP + 0x40]\nMOV R15,RDX\nADD R9,RBP\nMOV qword ptr [RSP + 0x18],R9\nTEST R8,R8\nJZ 0x004043c9\nTEST R15D,R15D\nJZ 0x004043c9\nMOVSXD RBX,R15D\nXOR EBP,EBP\nNOP\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nINC RBP\nCMP RBP,RBX\nJC 0x004043b0\nMOVSXD RAX,R15D\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,RAX\nXOR R15D,R15D\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nLEA RBX,[0x97 + RSP]\nSUB RBX,R14\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP RBX,RAX\nMOV RDX,RBX\nCMOVC RDX,RAX\nMOV RCX,R9\nNOT RCX\nCMP RDX,RCX\nJNC 0x00404576\nTEST R8,R8\nJZ 0x004044b3\nMOV qword ptr [RSP + 0x40],RDX\nMOV qword ptr [RSP + 0x18],R9\nCMP RBX,RAX\nSETNC AL\nTEST EDI,EDI\nJNZ 0x00404476\nTEST AL,AL\nJNZ 0x00404476\nMOVSXD RBP,R15D\nSUB RBP,RBX\nCMP R13D,0x30\nJNZ 0x00404458\nTEST RBP,RBP\nJZ 0x00404476\nNOP\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00404440\nJMP 0x00404476\nTEST RBP,RBP\nJZ 0x00404476\nNOP dword ptr [RAX]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00404460\nCMP byte ptr [RSP + 0x24],0x0\nJZ 0x0040448d\nMOV RDI,R8\nMOV RSI,R14\nMOV RDX,RBX\nCALL 0x004045e0\nJMP 0x004044a0\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,RBX\nMOV RCX,R8\nCALL 0x00401b30\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RSP + 0x40]\nADD R9,RDX\nJMP 0x00404550\nMOV EDX,0x1\nMOV RDI,qword ptr [RSP + 0x68]\nMOV RSI,qword ptr [RSP + 0x30]\nJMP 0x00403628\nTEST EAX,EAX\nJZ 0x00402e87\nSHR EBP,0x1f\nIMUL R11D,R11D,0x64\nADD R11D,EAX\nMOV EDI,0x6\nMOV EBX,0x4\nMOV EAX,0x4a\nMOV EDX,EAX\nAND DL,0x7f\nCMP DL,0x18\nJZ 0x0040450a\nMOV CL,0x1\nCMP DL,0x4a\nJZ 0x00403cfb\nJMP 0x00402f53\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x38],RBP\nJMP 0x00403530\nTEST RBP,RBP\nJZ 0x00404533\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x0040451d\nMOVSX EDI,byte ptr [R12]\nMOV RSI,R8\nCALL 0x004018f0\nMOV R8,qword ptr [RSP]\nMOV R9,R14\nMOV R11,qword ptr [RSP + 0x8]\nADD R9,RBX\nNOP\nMOV R14,0x100000000\nMOV RBP,qword ptr [RSP + 0x38]\nMOV EBX,dword ptr [RSP + 0x14]\nCMP byte ptr [R12 + 0x1],0x0\nLEA R12,[R12 + 0x1]\nJNZ 0x00402ea0\nJMP 0x00404579\nXOR R9D,R9D\nMOV RAX,R9\nADD RSP,0x4a8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p333
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 04 00 00\n44 89 4c 24 4c\n4c 89 44 24 70\n49 89 d4\n49 89 f0\n89 7c 24 7c\n8b 41 08\n48 89 4c 24 28\n48 8b 49 30\n48 85 c9\nba 69 d5 40 00\n48 0f 45 d1\n48 89 54 24 68\n8d 48 f4\n85 c0\nba 0c 00 00 00\n0f 45 d0\n83 f8 0c\n0f 4f d1\n89 54 24 64\n41 80 3c 24 00\n0f 84 02 17 00 00\n49 be 00 00 00 00 01 00 00 00\n45 31 c9\n4c 89 04 24\neb 19\nc1 ed 1f\nbf 03 00 00 00\ne9 7a 03 00 00\n41 0f be 3c 24\n83 ff 25\n75 66\n89 5c 24 14\n31 db\n8b 44 24 7c\n41 88 c2\n45 31 ed\n49 ff c4\neb 07\n49 ff c4\n41 89 c5\n41 0f be 04 24\n83 f8 2f\n7e 20\n83 f8 30\n74 eb\n83 f8 5f\n74 e6\n83 f8 5e\n0f 85 8d 00 00 00\n41 b2 01\n49 ff c4\neb db\n83 f8 2d\n74 cb\n83 f8 23\n75 76\nb3 01\n49 ff c4\neb c5\nb8 01 00 00 00\n49 83 f9 fd\n77 2e\n4d 85 c0\n74 24\n4c 89 c6\n41 89 df\n4c 89 cb\n49 89 ed\n4c 89 dd\ne8 bc e9 ff ff\n49 89 eb\n4c 89 ed\n49 89 d9\n44 89 fb\n4c 8b 04 24\n49 ff c1\n31 c0\n85 c0\nb9 04 00 00 00\n0f 44 c1\n83 c8 04\n83 f8 04\n0f 84 04 16 00 00\ne9 12 16 00 00\n83 c0 d0\n41 bf ff ff ff ff\n83 f8 09\n77 3e\n31 c0\n41 bf ff ff ff 7f\n3d cc cc cc 0c\n7f 1b\n41 0f be 0c 24\n83 c1 d0\n3d cc cc cc 0c\n75 05\n83 f9 07\n7f 07\n8d 04 80\n44 8d 3c 41\n41 0f be 44 24 01\n49 ff c4\n83 c0 d0\n83 f8 0a\n44 89 f8\n72 c4\n48 89 6c 24 38\n41 0f be 34 24\n83 fe 4f\n74 05\n83 fe 45\n75 05\n49 ff c4\neb 02\n31 f6\n41 0f be 0c 24\n83 f9 7a\n0f 87 3c 05 00 00\n31 d2\nb0 72\nbd 4a bb 40 00\n31 ff\nff 24 cd 40 b7 40 00\n31 ff\n83 fe 45\n0f 84 2e 05 00 00\n48 89 4c 24 08\n89 74 24 14\n44 89 54 24 24\n4c 89 4c 24 18\n48 8b 54 24 28\n8b 42 14\n8b 72 18\n89 c1\nc1 f9 1f\n81 e1 90 01 00 00\n8d 5c 08 9c\n8b 7a 1c\n41 89 fe\ne8 f6 15 00 00\n89 c5\n85 ed\n0f 88 11 0a 00 00\nb8 6d 01 00 00\nf6 c3 03\n75 40\n48 63 c3\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 f9 25\n48 89 c2\n48 c1 ea 3f\n01 d1\n6b c9 64\n48 c1 f8 27\n01 d0\n69 c0 90 01 00 00\n31 d2\n39 c3\n0f 94 c2\n81 c2 6d 01 00 00\n39 cb\nb8 6e 01 00 00\n0f 44 c2\n41 29 c6\n48 8b 44 24 28\n8b 70 18\n44 89 f7\ne8 8f 15 00 00\n89 c1\nc1 e9 1f\n83 f1 01\n85 c0\n0f 49 e8\ne9 05 0a 00 00\n84 db\n74 03\n41 b2 01\n31 ff\n85 f6\n0f 85 6c 04 00 00\n89 c8\n31 d2\ne9 53 0c 00 00\n49 ff cc\ne9 4c 04 00 00\n31 ff\n85 f6\n0f 85 51 04 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 74 14 00 00\n4d 85 c0\n0f 84 41 14 00 00\n4c 89 5c 24 08\n4d 89 ce\n83 f8 02\n0f 82 17 14 00 00\n49 63 ef\n48 ff cd\n41 83 fd 30\n0f 85 ec 13 00 00\n48 85 ed\n0f 84 fe 13 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 ae e7 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 e3 13 00 00\nba 01 00 00 00\neb 0c\n48 ff c2\n41 0f b6 04 14\n3c 3a\n74 f4\n3c 7a\n0f 85 ad 03 00 00\n49 01 d4\n48 8b 44 24 28\n83 78 20 00\n0f 88 d4 13 00 00\n48 83 fa 03\n48 89 4c 24 08\n0f 87 e8 0a 00 00\n48 8b 44 24 28\n48 63 68 28\n48 69 c5 89 88 88 88\n48 c1 e8 20\n01 e8\n89 c1\nc1 e9 1f\nc1 f8 05\n01 c8\n4c 69 dd c5 b3 a2 91\n49 c1 eb 20\n41 01 eb\n44 89 d9\nc1 e9 1f\n41 c1 fb 0b\n41 01 cb\n48 98\n48 69 c8 89 88 88 88\n48 c1 e9 20\n01 c1\n48 89 d7\n89 ca\nc1 ea 1f\nc1 f9 05\n01 d1\n6b c9 3c\n6b d0 3c\n29 c8\n89 e9\n29 d1\nff 24 fd 18 bb 40 00\nc1 ed 1f\n45 6b db 64\n41 01 c3\nbf 05 00 00 00\n31 db\ne9 d6 12 00 00\n31 ff\n85 f6\n0f 85 11 03 00 00\n84 db\n74 03\n41 b2 01\n31 d2\nb0 41\ne9 1c 0a 00 00\n31 ff\n85 f6\n0f 85 f7 02 00 00\n84 db\n74 03\n41 b2 01\n31 d2\nb0 42\ne9 02 0a 00 00\n83 fe 45\n0f 84 ef 09 00 00\n83 fe 4f\n0f 84 c6 02 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n48 63 40 14\n48 3d 94 f8 ff ff\n40 0f 9c c5\n0f 9f c1\n4c 69 d8 1f 85 eb 51\n4c 89 da\n48 c1 ea 3f\n49 c1 fb 25\n41 01 d3\n41 6b d3 64\n39 d0\n0f 98 c0\n20 c8\n0f b6 c0\n41 29 c3\n41 83 c3 13\ne9 4a 05 00 00\n31 ff\n85 f6\n0f 85 81 02 00 00\nbd 38 bb 40 00\ne9 08 01 00 00\n31 ff\n85 f6\n0f 85 6d 02 00 00\nbd 41 bb 40 00\ne9 f4 00 00 00\n31 ff\n83 fe 45\n0f 84 58 02 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 08\nba 02 00 00 00\ne9 fe 09 00 00\nba 02 00 00 00\n31 ff\n83 fe 45\n0f 84 31 02 00 00\n48 89 4c 24 08\n8b 44 24 64\ne9 e0 09 00 00\n31 ff\n83 fe 45\n0f 84 18 02 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 04\nba 02 00 00 00\ne9 be 09 00 00\n31 ff\n83 fe 45\n0f 84 f6 01 00 00\n41 83 ff ff\n48 89 4c 24 08\n0f 84 73 09 00 00\n41 83 ff 08\n0f 8f 93 09 00 00\nb9 09 00 00 00\n8b 44 24 4c\n0f 1f 40 00\n48 98\n48 69 c0 67 66 66 66\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 22\n01 d0\nff c9\n41 39 cf\n75 e3\ne9 68 09 00 00\nb2 01\n31 ff\n84 db\n74 06\n41 ba 00 00 00 00\n74 02\nb2 01\nb0 70\ne9 85 09 00 00\n31 ff\n83 fe 45\n0f 84 8a 01 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 00\nba 02 00 00 00\ne9 31 09 00 00\nbd 50 bb 40 00\n31 ff\n44 89 54 24 24\n45 84 d2\n40 0f 95 c7\n31 db\n31 f6\n48 89 ea\n48 8b 4c 24 28\n4c 8b 44 24 70\n4c 89 4c 24 18\n44 8b 4c 24 4c\n4c 89 5c 24 08\ne8 1c fa ff ff\n4c 8b 5c 24 08\n4c 8b 4c 24 18\n4c 8b 04 24\n45 85 ff\n41 0f 49 df\n48 39 d8\n49 89 c6\n4c 0f 42 f3\n4c 89 c9\n48 f7 d1\n49 39 ce\n0f 83 54 11 00 00\n4d 85 c0\n0f 84 0e 08 00 00\n48 39 d8\n0f 83 d2 07 00 00\n49 63 df\n48 29 c3\n41 83 fd 30\n0f 85 9b 07 00 00\n48 85 db\n0f 84 b9 07 00 00\n0f 1f 00\nbf 30 00 00 00\n4c 89 c6\ne8 93 e4 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\ne9 9b 07 00 00\n31 ff\n83 fe 45\n0f 84 ba 00 00 00\n48 89 4c 24 08\n48 8b 4c 24 28\n8b 41 1c\n83 c0 07\n2b 41 18\n48 98\neb 51\n31 ff\n83 fe 45\n0f 84 98 00 00 00\n48 89 4c 24 08\n48 8b 4c 24 28\n8b 41 18\n8b 49 1c\n8d 50 06\n48 63 d2\n89 f7\n48 69 f2 93 24 49 92\n48 c1 ee 20\n8d 44 06 06\n89 c6\nc1 ee 1f\nc1 f8 02\n01 f0\n8d 34 c5 00 00 00 00\n29 c6\n29 f2\n89 fe\n83 c1 07\n29 d1\n48 63 c1\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c8\n89 c1\nc1 e9 1f\nc1 f8 02\n01 c8\nba 02 00 00 00\ne9 ee 07 00 00\n31 ff\n83 fe 4f\n74 2a\nb0 58\n31 d2\ne9 11 08 00 00\n83 fe 45\n0f 84 2f 07 00 00\n83 fe 4f\n0f 85 31 07 00 00\n31 ff\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n44 89 54 24 24\n49 8d 6c 24 01\nb9 01 00 00 00\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 c8\n4c 01 f3\n8d 48 01\n80 7d ff 25\n48 8d 6d ff\n75 ee\n48 c1 fb 20\n45 85 ff\nb9 00 00 00 00\n41 0f 49 cf\n48 39 cb\n49 89 de\n4c 0f 42 f1\n4c 89 ca\n48 f7 d2\n49 39 d6\n0f 83 eb 0f 00 00\n4d 85 c0\n0f 84 a5 06 00 00\n4c 89 5c 24 08\n4c 89 4c 24 18\n48 39 cb\n0f 93 c1\n85 ff\n75 6e\n84 c9\n75 6a\n4d 63 ff\n4c 89 f9\n48 29 d9\n41 83 fd 30\n75 2d\n48 85 c9\n74 56\n48 98\n49 29 c7\n66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 13 e3 ff ff\n4c 8b 04 24\n49 ff cf\n75 ea\neb 2e\n48 85 c9\n74 29\n48 98\n49 29 c7\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 e3 e2 ff ff\n4c 8b 04 24\n49 ff cf\n75 ea\nf6 44 24 24 01\n75 18\nba 01 00 00 00\n48 89 ef\n48 89 de\n4c 89 c1\ne8 00 e5 ff ff\ne9 f6 05 00 00\n4c 89 c7\n48 89 ee\n48 89 da\ne8 9d 0f 00 00\ne9 e3 05 00 00\n44 89 54 24 24\n48 8b 7c 24 68\n4c 89 4c 24 18\n4c 89 5c 24 08\ne8 df e1 ff ff\n4c 8b 5c 24 08\n4c 8b 4c 24 18\n4c 8b 04 24\n31 d2\n45 85 ff\n41 0f 49 d7\n48 39 d0\n49 89 c6\n4c 0f 42 f2\n4c 89 c9\n48 f7 d1\n49 39 ce\n0f 83 e5 0e 00 00\n4d 85 c0\n0f 84 9f 05 00 00\n48 89 44 24 30\n48 39 d0\n0f 83 9e 0b 00 00\n49 63 ef\n48 2b 6c 24 30\n41 83 fd 30\n0f 85 69 0b 00 00\n48 85 ed\n0f 84 83 0b 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 13 e2 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 5b 0b 00 00\n31 ff\n85 f6\n0f 85 3b fe ff ff\n84 db\n74 03\n41 b2 01\n31 d2\nb0 61\ne9 46 05 00 00\n31 ff\n83 fe 4f\n0f 84 20 fe ff ff\nb0 63\n31 d2\ne9 07 06 00 00\n31 ff\n83 fe 45\n0f 84 0c fe ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 0c\nba 02 00 00 00\ne9 b2 05 00 00\n31 ff\n83 fe 45\n0f 84 ea fd ff ff\n48 8b 44 24 28\n8b 40 0c\neb 52\n31 ff\n83 fe 45\n0f 84 d5 fd ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n44 8b 58 1c\n41 83 fb ff\n40 0f 9c c5\n41 ff c3\nbf 03 00 00 00\ne9 32 04 00 00\n31 ff\n83 fe 45\n0f 84 a7 fd ff ff\n48 8b 44 24 28\n8b 40 08\neb 0f\n31 ff\n83 fe 45\n8b 44 24 64\n0f 84 8e fd ff ff\nba 02 00 00 00\n41 83 fd 2d\n48 89 4c 24 08\n0f 84 37 05 00 00\n41 83 fd 30\n0f 84 2d 05 00 00\n41 bd 5f 00 00 00\ne9 22 05 00 00\n31 ff\n83 fe 45\n0f 84 5a fd ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n44 8b 58 10\n41 83 fb ff\n40 0f 9c c5\n41 ff c3\nbf 02 00 00 00\ne9 b7 03 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 5a 0d 00 00\n4d 85 c0\n0f 84 27 0d 00 00\n4c 89 5c 24 08\n4d 89 ce\n83 f8 02\n0f 82 70 0a 00 00\n49 63 ef\n48 ff cd\n41 83 fd 30\n0f 85 3d 0a 00 00\n48 85 ed\n0f 84 57 0a 00 00\n90\nbf 30 00 00 00\n4c 89 c6\ne8 93 e0 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 3b 0a 00 00\n4c 89 5c 24 08\n44 89 54 24 24\n4c 89 4c 24 18\n48 8b 4c 24 28\n48 8b 41 30\n48 89 84 24 d0 00 00 00\n0f 10 01\n0f 10 49 10\n0f 10 51 20\n0f 29 94 24 c0 00 00 00\n0f 29 8c 24 b0 00 00 00\n0f 29 84 24 a0 00 00 00\n48 8d b4 24 a0 00 00 00\n48 8b 7c 24 70\ne8 d0 5c 00 00\n48 89 c1\n48 c1 e8 3f\n48 89 c3\n48 89 ce\n4c 8d b4 24 97 00 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 ba 67 66 66 66 66 66 66 66\n48 89 f0\n48 f7 ea\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 02\n8d 3c 02\n01 ff\n8d 3c bf\n89 f5\n29 fd\n48 01 c2\n89 e8\nf7 d8\n48 85 c9\n0f 49 c5\n83 c0 30\n41 88 46 ff\n49 ff ce\n48 83 c6 09\n48 83 fe 12\n48 89 d6\n77 b5\nbf 01 00 00 00\n31 c9\n4c 8b 04 24\n4c 8b 4c 24 18\n44 8b 54 24 24\n48 89 dd\n4c 8b 5c 24 08\n8b 5c 24 14\ne9 13 05 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 02 0c 00 00\n4d 85 c0\n0f 84 cf 0b 00 00\n4c 89 5c 24 08\n4d 89 ce\n83 f8 02\n0f 82 48 09 00 00\n49 63 ef\n48 ff cd\n41 83 fd 30\n0f 85 12 09 00 00\n48 85 ed\n0f 84 2f 09 00 00\n66 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 33 df ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 0b 09 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 48 18\n8d 41 06\n48 98\n48 69 d0 93 24 49 92\n48 c1 ea 20\n8d 4c 0a 06\n89 ca\nc1 ea 1f\nc1 f9 02\n01 d1\n8d 14 cd 00 00 00 00\n29 ca\n29 d0\nff c0\nba 01 00 00 00\ne9 e0 02 00 00\n31 ff\n83 fe 45\n0f 84 18 fb ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 18\nba 01 00 00 00\ne9 be 02 00 00\n31 ff\n83 fe 4f\n0f 84 f6 fa ff ff\nb0 78\n31 d2\ne9 dd 02 00 00\n83 fe 45\n0f 85 f5 00 00 00\n31 d2\nb0 79\ne9 f6 01 00 00\nff cb\nbf 6d 01 00 00\nf6 c3 03\n75 40\n48 63 c3\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 f9 25\n48 89 c2\n48 c1 ea 3f\n01 d1\n6b c9 64\n48 c1 f8 27\n01 d0\n69 c0 90 01 00 00\n31 d2\n39 c3\n0f 94 c2\n81 c2 6d 01 00 00\n39 cb\nbf 6e 01 00 00\n0f 44 fa\n44 01 f7\n48 8b 44 24 28\n8b 70 18\ne8 7f 0b 00 00\n89 c5\nb9 ff ff ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n49 be 00 00 00 00 01 00 00 00\n44 8b 54 24 24\n8b 74 24 14\n41 0f be 04 24\n83 f8 47\n0f 84 ac 00 00 00\n83 f8 67\n0f 85 ce 00 00 00\n48 8b 44 24 28\n48 63 70 14\n48 69 c6 1f 85 eb 51\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 25\n01 d0\n6b c0 64\n89 f2\n29 c2\n01 ca\n48 63 c2\n48 69 d0 1f 85 eb 51\n48 89 d7\n48 c1 ef 3f\n48 c1 fa 25\n01 fa\n6b d2 64\n29 d0\nba 02 00 00 00\n0f 88 95 01 00 00\n8b 74 24 14\ne9 ac 01 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n48 63 48 14\n48 69 c1 1f 85 eb 51\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 25\n01 d0\n6b d0 64\n89 c8\n29 d0\nba 02 00 00 00\n0f 89 78 01 00 00\n89 f7\n89 c6\nf7 de\n83 c0 64\n81 f9 94 f8 ff ff\n0f 4c c6\n89 fe\ne9 5f 01 00 00\n48 8b 44 24 28\n8b 40 14\nba 94 f8 ff ff\n29 ca\n39 d0\n40 0f 9c c5\n44 8d 9c 01 6c 07 00 00\nbf 04 00 00 00\n31 db\n31 c9\ne9 42 01 00 00\n48 63 c5\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c8\n89 c1\nc1 f9 02\nc1 e8 1f\n8d 44 01 01\nba 02 00 00 00\ne9 0e 01 00 00\n48 85 db\n74 22\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 f3 dc ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\n31 ff\n80 7c 24 24 00\n40 0f 95 c7\n4c 89 c6\n48 89 ea\n48 8b 4c 24 28\n4c 8b 44 24 70\n44 8b 4c 24 4c\ne8 e5 f1 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n4d 01 f1\ne9 0f 09 00 00\n31 d2\nb0 43\neb 04\n31 d2\nb0 59\n31 ff\ne9 ce 00 00 00\n48 8b 44 24 28\n44 8b 58 14\n41 81 fb 94 f8 ff ff\n0f 9c c0\n41 81 c3 6c 07 00 00\n31 c9\nbf 04 00 00 00\n40 88 c5\n31 db\ne9 8e 01 00 00\n31 ff\nb8 18 00 00 00\n48 8b 6c 24 38\n8b 5c 24 14\ne9 5e 08 00 00\n85 c9\n0f 84 35 08 00 00\nc1 ed 1f\n45 69 db 10 27 00 00\n6b c0 64\n41 01 cb\n41 01 c3\nbf 09 00 00 00\nbb 14 00 00 00\ne9 2f 08 00 00\n41 bf 09 00 00 00\n8b 44 24 4c\nba 09 00 00 00\neb 20\nbf 94 f8 ff ff\n29 cf\n89 c1\nf7 d9\n83 c0 64\n39 fe\n0f 4c c1\n8b 74 24 14\neb 07\n8b 44 24 4c\n44 89 fa\n89 c5\nc1 ed 1f\n31 db\n31 c9\n41 89 c3\n89 d7\n89 e8\n24 01\n83 fe 4f\n0f 85 03 01 00 00\n84 c0\n0f 85 fb 00 00 00\n89 5c 24 14\n48 89 6c 24 38\n31 d2\n48 8b 44 24 08\n48 89 54 24 30\n89 fd\n4c 89 5c 24 08\n44 89 54 24 24\n4c 89 4c 24 18\n66 c7 44 24 53 20 25\n85 f6\n48 8d 4c 24 55\n74 0a\n40 88 74 24 55\n48 8d 4c 24 56\n88 01\nc6 41 01 00\n48 8d bc 24 a0 00 00 00\n48 8d 54 24 53\nbe 00 04 00 00\n48 8b 4c 24 28\ne8 2e dd ff ff\n48 89 c3\n48 85 db\n0f 84 af 01 00 00\n48 ff cb\n31 c0\n45 85 ff\n41 0f 49 c7\n48 39 c3\n49 89 de\n4c 0f 42 f0\n4c 8b 4c 24 18\n4c 89 c9\n48 f7 d1\n49 39 ce\n0f 83 ce 07 00 00\n4c 8b 04 24\n4d 85 c0\n0f 84 aa 03 00 00\n48 39 c3\n0f 93 c0\n85 ed\n0f 85 43 03 00 00\n84 c0\n0f 85 3b 03 00 00\n49 63 ef\n48 29 dd\n41 83 fd 30\n0f 85 10 03 00 00\n48 85 ed\n0f 84 22 03 00 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 f3 da ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 fb 02 00 00\n44 89 da\nf7 da\n84 c0\n41 0f 44 d3\n4c 8d b4 24 97 00 00 00\n66 90\nf6 c3 01\n74 08\n41 c6 46 ff 3a\n49 ff ce\nd1 fb\n89 d0\n41 bb cd cc cc cc\n4c 0f af d8\n49 c1 eb 23\n43 8d 04 1b\n8d 04 80\n89 d6\n29 c6\n40 80 ce 30\n41 88 76 ff\n49 ff ce\n83 fa 09\n44 89 da\n77 c3\n85 db\n44 89 da\n75 bc\n44 39 ff\n41 0f 4c ff\n84 c9\n74 02\nb1 2b\n40 f6 c5 01\n40 b6 2d\n75 02\n89 ce\n41 83 fd 2d\n44 89 54 24 24\n48 89 6c 24 38\n4c 89 5c 24 08\n89 5c 24 14\n0f 85 a2 00 00 00\n40 84 f6\n0f 84 3e 05 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 b1 06 00 00\n4d 85 c0\n74 5b\n40 88 74 24 40\n89 7c 24 30\n4c 89 4c 24 18\n83 f8 02\n72 29\n83 7c 24 30 00\n75 22\n49 63 ef\n48 ff cd\n74 1a\n0f 1f 40 00\nbf 20 00 00 00\n4c 89 c6\ne8 f3 d9 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n0f b6 7c 24 40\n4c 89 c6\ne8 dd d9 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n8b 7c 24 30\n49 01 d9\ne9 b3 04 00 00\n4c 8b 04 24\n4c 8b 4c 24 18\ne9 31 02 00 00\n48 63 cf\n4c 89 f0\n48 8d 94 24 97 00 00 00\n48 29 d0\n89 f2\nf6 da\n48 19 d2\n48 01 c2\n48 01 ca\n85 d2\n0f 8e ff 00 00 00\n4c 89 c8\n48 f7 d0\n41 83 fd 5f\n89 7c 24 30\n0f 85 06 02 00 00\n48 63 da\n48 39 c3\n0f 83 f5 05 00 00\n48 89 54 24 58\n40 88 74 24 40\n4c 89 4c 24 18\n4d 85 c0\n74 24\n48 85 db\n74 1f\n31 ed\n0f 1f 40 00\nbf 20 00 00 00\n4c 89 c6\ne8 43 d9 ff ff\n4c 8b 04 24\n48 ff c5\n48 39 dd\n72 e7\n4c 8b 4c 24 18\n49 01 d9\n31 c0\n44 2b 7c 24 58\n44 0f 4e f8\n80 7c 24 40 00\n0f 84 00 04 00 00\n41 83 ff 01\nbd 01 00 00 00\n41 0f 47 ef\n4c 89 c8\n48 f7 d0\n48 39 c5\n4c 8b 5c 24 08\n8b 7c 24 30\n0f 83 7a 05 00 00\n4d 85 c0\n0f 84 45 03 00 00\n4c 89 4c 24 18\n85 ff\n0f 85 19 03 00 00\n41 83 ff 02\n0f 82 0f 03 00 00\n44 89 f8\n48 ff c8\n41 83 fd 30\n48 89 44 24 58\n0f 85 d7 02 00 00\n48 85 c0\n0f 84 f1 02 00 00\n31 db\n0f 1f 40 00\nbf 30 00 00 00\n4c 89 c6\ne8 a3 d8 ff ff\n4c 8b 04 24\n48 ff c3\n48 3b 5c 24 58\n72 e5\ne9 cb 02 00 00\n40 84 f6\n0f 84 77 03 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbd 01 00 00 00\n0f 47 e8\n4c 89 c9\n48 f7 d1\n48 39 cd\n0f 83 ea 04 00 00\n4d 85 c0\n0f 84 b5 02 00 00\n40 88 74 24 40\n89 7c 24 30\n4c 89 4c 24 18\n83 f8 02\n0f 82 7f 02 00 00\n83 7c 24 30 00\n0f 85 74 02 00 00\n49 63 df\n48 ff cb\n41 83 fd 30\n0f 85 19 02 00 00\n48 85 db\n0f 84 5b 02 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 13 d8 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\ne9 40 02 00 00\n48 85 ed\n74 16\nbf 20 00 00 00\n4c 89 c6\ne8 f3 d7 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\nf6 44 24 30 01\n75 21\nf6 44 24 24 01\n75 2f\nba 01 00 00 00\n48 8d bc 24 a1 00 00 00\n48 89 de\n4c 89 c1\ne8 04 da ff ff\neb 28\n4c 89 c7\n48 8d b4 24 a1 00 00 00\n48 89 da\ne8 4f 04 00 00\neb 13\n4c 89 c7\n48 8d b4 24 a1 00 00 00\n48 89 da\ne8 8a 04 00 00\n4c 8b 04 24\n4c 8b 4c 24 18\n4d 01 f1\n49 be 00 00 00 00 01 00 00 00\n48 8b 6c 24 38\n4c 8b 5c 24 08\ne9 e4 03 00 00\n48 39 c1\n0f 83 f2 03 00 00\n40 84 f6\n0f 84 8e 00 00 00\n31 c9\n45 85 ff\n41 0f 49 cf\n83 f9 01\nbd 01 00 00 00\n0f 47 e9\n48 39 c5\n0f 83 cc 03 00 00\n4d 85 c0\n0f 84 e2 01 00 00\n48 89 6c 24 40\n48 89 54 24 58\n89 f5\n4c 89 4c 24 18\n83 f9 02\n0f 82 a9 01 00 00\n83 7c 24 30 00\n0f 85 9e 01 00 00\n49 63 df\n48 ff cb\n41 83 fd 30\n0f 85 6a 01 00 00\n48 85 db\n0f 84 85 01 00 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 e3 d6 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\ne9 5b 01 00 00\n49 89 d7\ne9 78 01 00 00\n48 85 ed\n74 1e\n0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 b3 d6 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n84 db\n74 17\n4c 89 c7\n48 8b 74 24 68\n48 8b 54 24 30\ne8 34 03 00 00\ne9 ca f9 ff ff\n80 7c 24 24 00\n0f 84 4f 02 00 00\n4c 89 c7\n48 8b 74 24 68\n48 8b 54 24 30\ne8 62 03 00 00\ne9 a8 f9 ff ff\n48 85 ed\n74 1e\n0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 53 d6 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\nbf 0a 00 00 00\ne9 88 02 00 00\n48 85 ed\n74 21\n66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 23 d6 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\nbf 09 00 00 00\ne9 58 02 00 00\n48 85 db\n74 46\n66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 f3 d5 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\neb 23\n48 85 c0\n74 1e\n31 db\n90\nbf 20 00 00 00\n4c 89 c6\ne8 d3 d5 ff ff\n4c 8b 04 24\n48 ff c3\n48 3b 5c 24 58\n72 e5\n0f b6 7c 24 40\n4c 89 c6\ne8 b8 d5 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n8b 7c 24 30\n49 01 e9\ne9 8e 00 00 00\n48 85 db\n74 1f\n66 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 83 d5 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\n40 0f b6 fd\n4c 89 c6\ne8 6e d5 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n48 8b 54 24 58\n48 8b 6c 24 40\n49 89 d7\n49 01 e9\n4c 89 4c 24 18\n4d 85 c0\n74 24\n45 85 ff\n74 1f\n49 63 df\n31 ed\n90\nbf 30 00 00 00\n4c 89 c6\ne8 33 d5 ff ff\n4c 8b 04 24\n48 ff c5\n48 39 dd\n72 e7\n49 63 c7\n4c 8b 4c 24 18\n49 01 c1\n45 31 ff\n4c 8b 5c 24 08\n8b 7c 24 30\n48 8d 9c 24 97 00 00 00\n4c 29 f3\n31 c0\n45 85 ff\n41 0f 49 c7\n48 39 c3\n48 89 da\n48 0f 42 d0\n4c 89 c9\n48 f7 d1\n48 39 ca\n0f 83 69 01 00 00\n4d 85 c0\n0f 84 9d 00 00 00\n48 89 54 24 40\n4c 89 4c 24 18\n48 39 c3\n0f 93 c0\n85 ff\n75 4c\n84 c0\n75 48\n49 63 ef\n48 29 dd\n41 83 fd 30\n75 1e\n48 85 ed\n74 37\n90\nbf 30 00 00 00\n4c 89 c6\ne8 a3 d4 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\neb 1e\n48 85 ed\n74 19\n0f 1f 00\nbf 20 00 00 00\n4c 89 c6\ne8 83 d4 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n80 7c 24 24 00\n74 10\n4c 89 c7\n4c 89 f6\n48 89 da\ne8 55 01 00 00\neb 13\nba 01 00 00 00\n4c 89 f7\n48 89 de\n4c 89 c1\ne8 90 d6 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n48 8b 54 24 40\n49 01 d1\ne9 95 00 00 00\nba 01 00 00 00\n48 8b 7c 24 68\n48 8b 74 24 30\ne9 59 f1 ff ff\n85 c0\n0f 84 b0 e9 ff ff\nc1 ed 1f\n45 6b db 64\n41 01 c3\nbf 06 00 00 00\nbb 04 00 00 00\nb8 4a 00 00 00\n89 c2\n80 e2 7f\n80 fa 18\n74 10\nb1 01\n80 fa 4a\n0f 84 f6 f7 ff ff\ne9 49 ea ff ff\n89 5c 24 14\n48 89 6c 24 38\ne9 18 f0 ff ff\n48 85 ed\n74 16\nbf 20 00 00 00\n4c 89 c6\ne8 c6 d3 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n41 0f be 3c 24\n4c 89 c6\ne8 b0 d3 ff ff\n4c 8b 04 24\n4d 89 f1\n4c 8b 5c 24 08\n49 01 d9\n90\n49 be 00 00 00 00 01 00 00 00\n48 8b 6c 24 38\n8b 5c 24 14\n41 80 7c 24 01 00\n4d 8d 64 24 01\n0f 85 2c e9 ff ff\neb 03\n45 31 c9\n4c 89 c8\n48 81 c4 a8 04 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p334
S'.text:0000000000402e10\n.text:0000000000402e11\n.text:0000000000402e13\n.text:0000000000402e15\n.text:0000000000402e17\n.text:0000000000402e19\n.text:0000000000402e1a\n.text:0000000000402e21\n.text:0000000000402e26\n.text:0000000000402e2b\n.text:0000000000402e2e\n.text:0000000000402e31\n.text:0000000000402e35\n.text:0000000000402e38\n.text:0000000000402e3d\n.text:0000000000402e41\n.text:0000000000402e44\n.text:0000000000402e49\n.text:0000000000402e4d\n.text:0000000000402e52\n.text:0000000000402e55\n.text:0000000000402e57\n.text:0000000000402e5c\n.text:0000000000402e5f\n.text:0000000000402e62\n.text:0000000000402e65\n.text:0000000000402e69\n.text:0000000000402e6e\n.text:0000000000402e74\n.text:0000000000402e7e\n.text:0000000000402e81\n.text:0000000000402e85\n.text:0000000000402e87\n.text:0000000000402e8a\n.text:0000000000402e8f\n.text:0000000000402ea0\n.text:0000000000402ea5\n.text:0000000000402ea8\n.text:0000000000402eaa\n.text:0000000000402eae\n.text:0000000000402eb0\n.text:0000000000402eb4\n.text:0000000000402eb7\n.text:0000000000402eba\n.text:0000000000402ebd\n.text:0000000000402ec0\n.text:0000000000402ec3\n.text:0000000000402ec6\n.text:0000000000402ecb\n.text:0000000000402ece\n.text:0000000000402ed0\n.text:0000000000402ed3\n.text:0000000000402ed5\n.text:0000000000402ed8\n.text:0000000000402eda\n.text:0000000000402edd\n.text:0000000000402ee3\n.text:0000000000402ee6\n.text:0000000000402ee9\n.text:0000000000402ef0\n.text:0000000000402ef3\n.text:0000000000402ef5\n.text:0000000000402ef8\n.text:0000000000402efa\n.text:0000000000402efc\n.text:0000000000402eff\n.text:0000000000402f10\n.text:0000000000402f15\n.text:0000000000402f19\n.text:0000000000402f1b\n.text:0000000000402f1e\n.text:0000000000402f20\n.text:0000000000402f23\n.text:0000000000402f26\n.text:0000000000402f29\n.text:0000000000402f2c\n.text:0000000000402f2f\n.text:0000000000402f34\n.text:0000000000402f37\n.text:0000000000402f3a\n.text:0000000000402f3d\n.text:0000000000402f40\n.text:0000000000402f44\n.text:0000000000402f47\n.text:0000000000402f49\n.text:0000000000402f4b\n.text:0000000000402f50\n.text:0000000000402f53\n.text:0000000000402f56\n.text:0000000000402f59\n.text:0000000000402f5f\n.text:0000000000402f70\n.text:0000000000402f73\n.text:0000000000402f79\n.text:0000000000402f7c\n.text:0000000000402f7e\n.text:0000000000402f80\n.text:0000000000402f86\n.text:0000000000402f8b\n.text:0000000000402f8d\n.text:0000000000402f92\n.text:0000000000402f95\n.text:0000000000402f9a\n.text:0000000000402f9c\n.text:0000000000402f9f\n.text:0000000000402fa1\n.text:0000000000402fa4\n.text:0000000000402fa8\n.text:0000000000402fae\n.text:0000000000402fb1\n.text:0000000000402fb4\n.text:0000000000402fb7\n.text:0000000000402fba\n.text:0000000000402fbc\n.text:0000000000402fc1\n.text:0000000000402fc6\n.text:0000000000402fc9\n.text:0000000000402fcb\n.text:0000000000402fce\n.text:0000000000402fd0\n.text:0000000000402fd3\n.text:0000000000402fd5\n.text:0000000000402fd7\n.text:0000000000402fdc\n.text:0000000000402fdf\n.text:0000000000402fe5\n.text:0000000000402fe7\n.text:0000000000402fe9\n.text:0000000000402fee\n.text:0000000000402ff0\n.text:0000000000402ff7\n.text:0000000000402ff9\n.text:0000000000402ffc\n.text:0000000000403002\n.text:0000000000403007\n.text:000000000040300b\n.text:0000000000403010\n.text:0000000000403015\n.text:000000000040301a\n.text:000000000040301d\n.text:0000000000403020\n.text:0000000000403022\n.text:0000000000403025\n.text:000000000040302b\n.text:000000000040302f\n.text:0000000000403032\n.text:0000000000403035\n.text:000000000040303a\n.text:000000000040303c\n.text:000000000040303e\n.text:0000000000403044\n.text:0000000000403049\n.text:000000000040304c\n.text:000000000040304e\n.text:0000000000403051\n.text:0000000000403058\n.text:000000000040305b\n.text:000000000040305f\n.text:0000000000403062\n.text:0000000000403066\n.text:0000000000403068\n.text:000000000040306b\n.text:000000000040306f\n.text:0000000000403071\n.text:0000000000403077\n.text:0000000000403079\n.text:000000000040307b\n.text:000000000040307e\n.text:0000000000403084\n.text:0000000000403086\n.text:000000000040308b\n.text:000000000040308e\n.text:0000000000403091\n.text:0000000000403096\n.text:0000000000403099\n.text:000000000040309c\n.text:00000000004030a1\n.text:00000000004030a3\n.text:00000000004030a6\n.text:00000000004030a9\n.text:00000000004030ab\n.text:00000000004030ae\n.text:00000000004030b3\n.text:00000000004030b5\n.text:00000000004030b7\n.text:00000000004030ba\n.text:00000000004030bc\n.text:00000000004030be\n.text:00000000004030c4\n.text:00000000004030c6\n.text:00000000004030c8\n.text:00000000004030cd\n.text:00000000004030d0\n.text:00000000004030d5\n.text:00000000004030d7\n.text:00000000004030d9\n.text:00000000004030df\n.text:00000000004030e1\n.text:00000000004030e4\n.text:00000000004030e8\n.text:00000000004030eb\n.text:00000000004030f0\n.text:00000000004030f3\n.text:00000000004030f6\n.text:00000000004030f9\n.text:00000000004030fc\n.text:0000000000403102\n.text:0000000000403105\n.text:000000000040310b\n.text:0000000000403110\n.text:0000000000403113\n.text:0000000000403116\n.text:000000000040311c\n.text:000000000040311f\n.text:0000000000403122\n.text:0000000000403126\n.text:000000000040312c\n.text:000000000040312f\n.text:0000000000403135\n.text:000000000040313a\n.text:000000000040313d\n.text:0000000000403142\n.text:0000000000403146\n.text:0000000000403149\n.text:000000000040314b\n.text:0000000000403150\n.text:0000000000403155\n.text:0000000000403160\n.text:0000000000403163\n.text:0000000000403168\n.text:000000000040316a\n.text:000000000040316c\n.text:000000000040316e\n.text:0000000000403174\n.text:0000000000403177\n.text:000000000040317c\n.text:0000000000403180\n.text:0000000000403186\n.text:000000000040318a\n.text:000000000040318f\n.text:0000000000403195\n.text:000000000040319a\n.text:000000000040319e\n.text:00000000004031a5\n.text:00000000004031a9\n.text:00000000004031ab\n.text:00000000004031ad\n.text:00000000004031b0\n.text:00000000004031b3\n.text:00000000004031b5\n.text:00000000004031bc\n.text:00000000004031c0\n.text:00000000004031c3\n.text:00000000004031c6\n.text:00000000004031c9\n.text:00000000004031cd\n.text:00000000004031d0\n.text:00000000004031d2\n.text:00000000004031d9\n.text:00000000004031dd\n.text:00000000004031df\n.text:00000000004031e2\n.text:00000000004031e4\n.text:00000000004031e7\n.text:00000000004031ea\n.text:00000000004031ec\n.text:00000000004031ef\n.text:00000000004031f2\n.text:00000000004031f4\n.text:00000000004031f6\n.text:00000000004031f8\n.text:00000000004031ff\n.text:0000000000403202\n.text:0000000000403206\n.text:0000000000403209\n.text:000000000040320e\n.text:0000000000403210\n.text:0000000000403215\n.text:0000000000403217\n.text:0000000000403219\n.text:000000000040321f\n.text:0000000000403221\n.text:0000000000403223\n.text:0000000000403226\n.text:0000000000403228\n.text:000000000040322a\n.text:000000000040322f\n.text:0000000000403231\n.text:0000000000403233\n.text:0000000000403239\n.text:000000000040323b\n.text:000000000040323d\n.text:0000000000403240\n.text:0000000000403242\n.text:0000000000403244\n.text:0000000000403249\n.text:000000000040324c\n.text:0000000000403252\n.text:0000000000403255\n.text:000000000040325b\n.text:0000000000403260\n.text:0000000000403265\n.text:0000000000403269\n.text:000000000040326f\n.text:0000000000403273\n.text:0000000000403276\n.text:000000000040327d\n.text:0000000000403280\n.text:0000000000403284\n.text:0000000000403288\n.text:000000000040328b\n.text:000000000040328f\n.text:0000000000403291\n.text:0000000000403294\n.text:0000000000403296\n.text:0000000000403299\n.text:000000000040329c\n.text:00000000004032a0\n.text:00000000004032a5\n.text:00000000004032a7\n.text:00000000004032a9\n.text:00000000004032af\n.text:00000000004032b4\n.text:00000000004032b9\n.text:00000000004032bb\n.text:00000000004032bd\n.text:00000000004032c3\n.text:00000000004032c8\n.text:00000000004032cd\n.text:00000000004032cf\n.text:00000000004032d2\n.text:00000000004032d8\n.text:00000000004032dd\n.text:00000000004032e2\n.text:00000000004032e5\n.text:00000000004032ea\n.text:00000000004032ef\n.text:00000000004032f4\n.text:00000000004032f6\n.text:00000000004032f9\n.text:00000000004032ff\n.text:0000000000403304\n.text:0000000000403308\n.text:000000000040330d\n.text:000000000040330f\n.text:0000000000403312\n.text:0000000000403318\n.text:000000000040331d\n.text:0000000000403322\n.text:0000000000403325\n.text:000000000040332a\n.text:000000000040332f\n.text:0000000000403331\n.text:0000000000403334\n.text:000000000040333a\n.text:000000000040333e\n.text:0000000000403343\n.text:0000000000403349\n.text:000000000040334d\n.text:0000000000403353\n.text:0000000000403358\n.text:000000000040335c\n.text:0000000000403360\n.text:0000000000403362\n.text:0000000000403369\n.text:000000000040336c\n.text:0000000000403370\n.text:0000000000403374\n.text:0000000000403376\n.text:0000000000403378\n.text:000000000040337b\n.text:000000000040337d\n.text:0000000000403382\n.text:0000000000403384\n.text:0000000000403386\n.text:0000000000403388\n.text:000000000040338a\n.text:0000000000403390\n.text:0000000000403392\n.text:0000000000403394\n.text:0000000000403396\n.text:000000000040339b\n.text:000000000040339d\n.text:00000000004033a0\n.text:00000000004033a6\n.text:00000000004033ab\n.text:00000000004033b0\n.text:00000000004033b2\n.text:00000000004033b7\n.text:00000000004033bc\n.text:00000000004033c1\n.text:00000000004033c3\n.text:00000000004033c8\n.text:00000000004033cb\n.text:00000000004033cf\n.text:00000000004033d1\n.text:00000000004033d3\n.text:00000000004033d6\n.text:00000000004033db\n.text:00000000004033e0\n.text:00000000004033e5\n.text:00000000004033ea\n.text:00000000004033ef\n.text:00000000004033f4\n.text:00000000004033f9\n.text:00000000004033fe\n.text:0000000000403402\n.text:0000000000403405\n.text:0000000000403409\n.text:000000000040340c\n.text:000000000040340f\n.text:0000000000403413\n.text:0000000000403416\n.text:0000000000403419\n.text:000000000040341c\n.text:0000000000403422\n.text:0000000000403425\n.text:000000000040342b\n.text:000000000040342e\n.text:0000000000403434\n.text:0000000000403437\n.text:000000000040343a\n.text:000000000040343e\n.text:0000000000403444\n.text:0000000000403447\n.text:000000000040344d\n.text:0000000000403450\n.text:0000000000403455\n.text:0000000000403458\n.text:000000000040345d\n.text:0000000000403461\n.text:0000000000403464\n.text:0000000000403466\n.text:000000000040346b\n.text:000000000040346d\n.text:0000000000403470\n.text:0000000000403476\n.text:000000000040347b\n.text:0000000000403480\n.text:0000000000403483\n.text:0000000000403486\n.text:0000000000403489\n.text:000000000040348b\n.text:000000000040348d\n.text:000000000040348f\n.text:0000000000403492\n.text:0000000000403498\n.text:000000000040349d\n.text:00000000004034a2\n.text:00000000004034a5\n.text:00000000004034a8\n.text:00000000004034ab\n.text:00000000004034ae\n.text:00000000004034b0\n.text:00000000004034b7\n.text:00000000004034bb\n.text:00000000004034bf\n.text:00000000004034c1\n.text:00000000004034c4\n.text:00000000004034c7\n.text:00000000004034c9\n.text:00000000004034d0\n.text:00000000004034d2\n.text:00000000004034d4\n.text:00000000004034d6\n.text:00000000004034d9\n.text:00000000004034db\n.text:00000000004034de\n.text:00000000004034e5\n.text:00000000004034e9\n.text:00000000004034eb\n.text:00000000004034ed\n.text:00000000004034f0\n.text:00000000004034f3\n.text:00000000004034f5\n.text:00000000004034fa\n.text:00000000004034ff\n.text:0000000000403501\n.text:0000000000403504\n.text:0000000000403506\n.text:0000000000403508\n.text:000000000040350a\n.text:000000000040350f\n.text:0000000000403512\n.text:0000000000403518\n.text:000000000040351b\n.text:0000000000403521\n.text:0000000000403523\n.text:0000000000403530\n.text:0000000000403535\n.text:000000000040353a\n.text:000000000040353f\n.text:0000000000403541\n.text:0000000000403550\n.text:0000000000403552\n.text:0000000000403555\n.text:0000000000403558\n.text:000000000040355c\n.text:0000000000403560\n.text:0000000000403562\n.text:0000000000403566\n.text:0000000000403569\n.text:000000000040356e\n.text:0000000000403572\n.text:0000000000403575\n.text:0000000000403578\n.text:000000000040357c\n.text:000000000040357f\n.text:0000000000403582\n.text:0000000000403585\n.text:000000000040358b\n.text:000000000040358e\n.text:0000000000403594\n.text:0000000000403599\n.text:000000000040359e\n.text:00000000004035a1\n.text:00000000004035a4\n.text:00000000004035a6\n.text:00000000004035a8\n.text:00000000004035aa\n.text:00000000004035ac\n.text:00000000004035af\n.text:00000000004035b2\n.text:00000000004035b5\n.text:00000000004035b9\n.text:00000000004035bb\n.text:00000000004035be\n.text:00000000004035c0\n.text:00000000004035c2\n.text:00000000004035c5\n.text:00000000004035d0\n.text:00000000004035d5\n.text:00000000004035d8\n.text:00000000004035dd\n.text:00000000004035e1\n.text:00000000004035e4\n.text:00000000004035e6\n.text:00000000004035e8\n.text:00000000004035eb\n.text:00000000004035ed\n.text:00000000004035ef\n.text:00000000004035f2\n.text:0000000000403600\n.text:0000000000403605\n.text:0000000000403608\n.text:000000000040360d\n.text:0000000000403611\n.text:0000000000403614\n.text:0000000000403616\n.text:000000000040361b\n.text:000000000040361d\n.text:0000000000403622\n.text:0000000000403625\n.text:0000000000403628\n.text:000000000040362b\n.text:0000000000403630\n.text:0000000000403635\n.text:0000000000403638\n.text:000000000040363b\n.text:000000000040363e\n.text:0000000000403643\n.text:0000000000403648\n.text:000000000040364d\n.text:0000000000403652\n.text:0000000000403657\n.text:000000000040365c\n.text:0000000000403661\n.text:0000000000403666\n.text:000000000040366b\n.text:000000000040366f\n.text:0000000000403671\n.text:0000000000403674\n.text:0000000000403678\n.text:000000000040367b\n.text:000000000040367e\n.text:0000000000403682\n.text:0000000000403685\n.text:0000000000403688\n.text:000000000040368b\n.text:0000000000403691\n.text:0000000000403694\n.text:000000000040369a\n.text:000000000040369f\n.text:00000000004036a2\n.text:00000000004036a8\n.text:00000000004036ab\n.text:00000000004036b0\n.text:00000000004036b4\n.text:00000000004036ba\n.text:00000000004036bd\n.text:00000000004036c3\n.text:00000000004036d0\n.text:00000000004036d5\n.text:00000000004036d8\n.text:00000000004036dd\n.text:00000000004036e1\n.text:00000000004036e4\n.text:00000000004036e6\n.text:00000000004036eb\n.text:00000000004036ed\n.text:00000000004036ef\n.text:00000000004036f5\n.text:00000000004036f7\n.text:00000000004036f9\n.text:00000000004036fc\n.text:00000000004036fe\n.text:0000000000403700\n.text:0000000000403705\n.text:0000000000403707\n.text:000000000040370a\n.text:0000000000403710\n.text:0000000000403712\n.text:0000000000403714\n.text:0000000000403719\n.text:000000000040371b\n.text:000000000040371e\n.text:0000000000403724\n.text:0000000000403729\n.text:000000000040372e\n.text:0000000000403731\n.text:0000000000403736\n.text:000000000040373b\n.text:000000000040373d\n.text:0000000000403740\n.text:0000000000403746\n.text:000000000040374b\n.text:000000000040374e\n.text:0000000000403750\n.text:0000000000403752\n.text:0000000000403755\n.text:000000000040375b\n.text:0000000000403760\n.text:0000000000403765\n.text:0000000000403769\n.text:000000000040376d\n.text:0000000000403771\n.text:0000000000403774\n.text:0000000000403779\n.text:000000000040377e\n.text:0000000000403780\n.text:0000000000403783\n.text:0000000000403789\n.text:000000000040378e\n.text:0000000000403791\n.text:0000000000403793\n.text:0000000000403795\n.text:0000000000403798\n.text:000000000040379c\n.text:00000000004037a2\n.text:00000000004037a7\n.text:00000000004037ab\n.text:00000000004037b0\n.text:00000000004037b6\n.text:00000000004037ba\n.text:00000000004037c0\n.text:00000000004037c6\n.text:00000000004037cb\n.text:00000000004037cd\n.text:00000000004037d0\n.text:00000000004037d6\n.text:00000000004037db\n.text:00000000004037e0\n.text:00000000004037e4\n.text:00000000004037e8\n.text:00000000004037ec\n.text:00000000004037ef\n.text:00000000004037f4\n.text:00000000004037f9\n.text:00000000004037fb\n.text:00000000004037fe\n.text:0000000000403802\n.text:0000000000403805\n.text:000000000040380a\n.text:000000000040380d\n.text:0000000000403810\n.text:0000000000403813\n.text:0000000000403816\n.text:000000000040381c\n.text:000000000040381f\n.text:0000000000403825\n.text:000000000040382a\n.text:000000000040382d\n.text:0000000000403830\n.text:0000000000403836\n.text:0000000000403839\n.text:000000000040383c\n.text:0000000000403840\n.text:0000000000403846\n.text:0000000000403849\n.text:000000000040384f\n.text:0000000000403850\n.text:0000000000403855\n.text:0000000000403858\n.text:000000000040385d\n.text:0000000000403861\n.text:0000000000403864\n.text:0000000000403866\n.text:000000000040386b\n.text:0000000000403870\n.text:0000000000403875\n.text:000000000040387a\n.text:000000000040387f\n.text:0000000000403883\n.text:000000000040388b\n.text:000000000040388e\n.text:0000000000403892\n.text:0000000000403896\n.text:000000000040389e\n.text:00000000004038a6\n.text:00000000004038ae\n.text:00000000004038b6\n.text:00000000004038bb\n.text:00000000004038c0\n.text:00000000004038c3\n.text:00000000004038c7\n.text:00000000004038ca\n.text:00000000004038cd\n.text:00000000004038d5\n.text:00000000004038e0\n.text:00000000004038ea\n.text:00000000004038ed\n.text:00000000004038f0\n.text:00000000004038f3\n.text:00000000004038f7\n.text:00000000004038fb\n.text:00000000004038fe\n.text:0000000000403900\n.text:0000000000403903\n.text:0000000000403905\n.text:0000000000403907\n.text:000000000040390a\n.text:000000000040390c\n.text:000000000040390e\n.text:0000000000403911\n.text:0000000000403914\n.text:0000000000403917\n.text:000000000040391b\n.text:000000000040391e\n.text:0000000000403922\n.text:0000000000403926\n.text:0000000000403929\n.text:000000000040392b\n.text:0000000000403930\n.text:0000000000403932\n.text:0000000000403936\n.text:000000000040393b\n.text:0000000000403940\n.text:0000000000403943\n.text:0000000000403948\n.text:000000000040394c\n.text:0000000000403951\n.text:0000000000403953\n.text:0000000000403956\n.text:000000000040395a\n.text:000000000040395d\n.text:0000000000403962\n.text:0000000000403965\n.text:0000000000403968\n.text:000000000040396b\n.text:000000000040396e\n.text:0000000000403974\n.text:0000000000403977\n.text:000000000040397d\n.text:0000000000403982\n.text:0000000000403985\n.text:0000000000403988\n.text:000000000040398e\n.text:0000000000403991\n.text:0000000000403994\n.text:0000000000403998\n.text:000000000040399e\n.text:00000000004039a1\n.text:00000000004039a7\n.text:00000000004039b0\n.text:00000000004039b5\n.text:00000000004039b8\n.text:00000000004039bd\n.text:00000000004039c1\n.text:00000000004039c4\n.text:00000000004039c6\n.text:00000000004039cb\n.text:00000000004039d0\n.text:00000000004039d5\n.text:00000000004039d8\n.text:00000000004039db\n.text:00000000004039dd\n.text:00000000004039e4\n.text:00000000004039e8\n.text:00000000004039ec\n.text:00000000004039ee\n.text:00000000004039f1\n.text:00000000004039f4\n.text:00000000004039f6\n.text:00000000004039fd\n.text:00000000004039ff\n.text:0000000000403a01\n.text:0000000000403a03\n.text:0000000000403a08\n.text:0000000000403a0d\n.text:0000000000403a0f\n.text:0000000000403a12\n.text:0000000000403a18\n.text:0000000000403a1d\n.text:0000000000403a22\n.text:0000000000403a25\n.text:0000000000403a2a\n.text:0000000000403a2f\n.text:0000000000403a31\n.text:0000000000403a34\n.text:0000000000403a3a\n.text:0000000000403a3c\n.text:0000000000403a3e\n.text:0000000000403a43\n.text:0000000000403a46\n.text:0000000000403a4c\n.text:0000000000403a4e\n.text:0000000000403a50\n.text:0000000000403a55\n.text:0000000000403a57\n.text:0000000000403a5c\n.text:0000000000403a5f\n.text:0000000000403a61\n.text:0000000000403a64\n.text:0000000000403a6b\n.text:0000000000403a6e\n.text:0000000000403a72\n.text:0000000000403a75\n.text:0000000000403a79\n.text:0000000000403a7b\n.text:0000000000403a7e\n.text:0000000000403a82\n.text:0000000000403a84\n.text:0000000000403a8a\n.text:0000000000403a8c\n.text:0000000000403a8e\n.text:0000000000403a91\n.text:0000000000403a97\n.text:0000000000403a99\n.text:0000000000403a9e\n.text:0000000000403aa1\n.text:0000000000403aa4\n.text:0000000000403aa9\n.text:0000000000403aac\n.text:0000000000403ab1\n.text:0000000000403ab3\n.text:0000000000403ab8\n.text:0000000000403abc\n.text:0000000000403ac1\n.text:0000000000403acb\n.text:0000000000403ad0\n.text:0000000000403ad4\n.text:0000000000403ad9\n.text:0000000000403adc\n.text:0000000000403ae2\n.text:0000000000403ae5\n.text:0000000000403aeb\n.text:0000000000403af0\n.text:0000000000403af4\n.text:0000000000403afb\n.text:0000000000403afe\n.text:0000000000403b02\n.text:0000000000403b06\n.text:0000000000403b08\n.text:0000000000403b0b\n.text:0000000000403b0d\n.text:0000000000403b0f\n.text:0000000000403b11\n.text:0000000000403b14\n.text:0000000000403b1b\n.text:0000000000403b1e\n.text:0000000000403b22\n.text:0000000000403b26\n.text:0000000000403b28\n.text:0000000000403b2b\n.text:0000000000403b2d\n.text:0000000000403b32\n.text:0000000000403b38\n.text:0000000000403b3c\n.text:0000000000403b41\n.text:0000000000403b46\n.text:0000000000403b4b\n.text:0000000000403b4f\n.text:0000000000403b56\n.text:0000000000403b59\n.text:0000000000403b5d\n.text:0000000000403b61\n.text:0000000000403b63\n.text:0000000000403b66\n.text:0000000000403b68\n.text:0000000000403b6a\n.text:0000000000403b6f\n.text:0000000000403b75\n.text:0000000000403b77\n.text:0000000000403b79\n.text:0000000000403b7b\n.text:0000000000403b7e\n.text:0000000000403b84\n.text:0000000000403b87\n.text:0000000000403b89\n.text:0000000000403b8e\n.text:0000000000403b93\n.text:0000000000403b96\n.text:0000000000403b9b\n.text:0000000000403b9d\n.text:0000000000403b9f\n.text:0000000000403ba3\n.text:0000000000403bab\n.text:0000000000403bb0\n.text:0000000000403bb2\n.text:0000000000403bb4\n.text:0000000000403bb9\n.text:0000000000403bbc\n.text:0000000000403bc3\n.text:0000000000403bc7\n.text:0000000000403bc9\n.text:0000000000403bcb\n.text:0000000000403bce\n.text:0000000000403bd1\n.text:0000000000403bd5\n.text:0000000000403bda\n.text:0000000000403bdf\n.text:0000000000403be2\n.text:0000000000403be4\n.text:0000000000403bf0\n.text:0000000000403bf5\n.text:0000000000403bf8\n.text:0000000000403bfd\n.text:0000000000403c01\n.text:0000000000403c04\n.text:0000000000403c06\n.text:0000000000403c08\n.text:0000000000403c0d\n.text:0000000000403c11\n.text:0000000000403c14\n.text:0000000000403c17\n.text:0000000000403c1c\n.text:0000000000403c21\n.text:0000000000403c26\n.text:0000000000403c2b\n.text:0000000000403c2f\n.text:0000000000403c34\n.text:0000000000403c39\n.text:0000000000403c3c\n.text:0000000000403c41\n.text:0000000000403c43\n.text:0000000000403c45\n.text:0000000000403c47\n.text:0000000000403c49\n.text:0000000000403c4b\n.text:0000000000403c4d\n.text:0000000000403c52\n.text:0000000000403c57\n.text:0000000000403c5b\n.text:0000000000403c62\n.text:0000000000403c65\n.text:0000000000403c6c\n.text:0000000000403c6e\n.text:0000000000403c73\n.text:0000000000403c76\n.text:0000000000403c78\n.text:0000000000403c7d\n.text:0000000000403c7f\n.text:0000000000403c84\n.text:0000000000403c89\n.text:0000000000403c8d\n.text:0000000000403c92\n.text:0000000000403c94\n.text:0000000000403c9a\n.text:0000000000403c9d\n.text:0000000000403ca4\n.text:0000000000403ca7\n.text:0000000000403caa\n.text:0000000000403cad\n.text:0000000000403cb2\n.text:0000000000403cb7\n.text:0000000000403cbc\n.text:0000000000403cc2\n.text:0000000000403cc6\n.text:0000000000403ccb\n.text:0000000000403ccd\n.text:0000000000403cd2\n.text:0000000000403cd4\n.text:0000000000403cd6\n.text:0000000000403cd8\n.text:0000000000403cdb\n.text:0000000000403cdd\n.text:0000000000403ce0\n.text:0000000000403ce4\n.text:0000000000403ce6\n.text:0000000000403cea\n.text:0000000000403ced\n.text:0000000000403cef\n.text:0000000000403cf2\n.text:0000000000403cf4\n.text:0000000000403cf6\n.text:0000000000403cf9\n.text:0000000000403cfb\n.text:0000000000403cfd\n.text:0000000000403cff\n.text:0000000000403d02\n.text:0000000000403d08\n.text:0000000000403d0a\n.text:0000000000403d10\n.text:0000000000403d14\n.text:0000000000403d19\n.text:0000000000403d1b\n.text:0000000000403d20\n.text:0000000000403d25\n.text:0000000000403d27\n.text:0000000000403d2c\n.text:0000000000403d31\n.text:0000000000403d36\n.text:0000000000403d3d\n.text:0000000000403d3f\n.text:0000000000403d44\n.text:0000000000403d46\n.text:0000000000403d4b\n.text:0000000000403d50\n.text:0000000000403d52\n.text:0000000000403d56\n.text:0000000000403d5e\n.text:0000000000403d63\n.text:0000000000403d68\n.text:0000000000403d6d\n.text:0000000000403d72\n.text:0000000000403d75\n.text:0000000000403d78\n.text:0000000000403d7e\n.text:0000000000403d81\n.text:0000000000403d83\n.text:0000000000403d86\n.text:0000000000403d8a\n.text:0000000000403d8d\n.text:0000000000403d90\n.text:0000000000403d94\n.text:0000000000403d99\n.text:0000000000403d9c\n.text:0000000000403d9f\n.text:0000000000403da2\n.text:0000000000403da8\n.text:0000000000403dac\n.text:0000000000403daf\n.text:0000000000403db5\n.text:0000000000403db8\n.text:0000000000403dbb\n.text:0000000000403dbd\n.text:0000000000403dc3\n.text:0000000000403dc5\n.text:0000000000403dcb\n.text:0000000000403dce\n.text:0000000000403dd1\n.text:0000000000403dd5\n.text:0000000000403ddb\n.text:0000000000403dde\n.text:0000000000403de4\n.text:0000000000403df0\n.text:0000000000403df5\n.text:0000000000403df8\n.text:0000000000403dfd\n.text:0000000000403e01\n.text:0000000000403e04\n.text:0000000000403e06\n.text:0000000000403e0b\n.text:0000000000403e0e\n.text:0000000000403e10\n.text:0000000000403e12\n.text:0000000000403e16\n.text:0000000000403e1e\n.text:0000000000403e20\n.text:0000000000403e23\n.text:0000000000403e25\n.text:0000000000403e2a\n.text:0000000000403e2d\n.text:0000000000403e2f\n.text:0000000000403e31\n.text:0000000000403e37\n.text:0000000000403e3b\n.text:0000000000403e3f\n.text:0000000000403e43\n.text:0000000000403e46\n.text:0000000000403e48\n.text:0000000000403e4a\n.text:0000000000403e4e\n.text:0000000000403e52\n.text:0000000000403e55\n.text:0000000000403e58\n.text:0000000000403e5b\n.text:0000000000403e5d\n.text:0000000000403e5f\n.text:0000000000403e62\n.text:0000000000403e64\n.text:0000000000403e67\n.text:0000000000403e6b\n.text:0000000000403e6d\n.text:0000000000403e6f\n.text:0000000000403e71\n.text:0000000000403e75\n.text:0000000000403e78\n.text:0000000000403e7a\n.text:0000000000403e7c\n.text:0000000000403e80\n.text:0000000000403e85\n.text:0000000000403e8a\n.text:0000000000403e8f\n.text:0000000000403e93\n.text:0000000000403e99\n.text:0000000000403e9c\n.text:0000000000403ea2\n.text:0000000000403ea4\n.text:0000000000403ea7\n.text:0000000000403eab\n.text:0000000000403eae\n.text:0000000000403eb3\n.text:0000000000403eb6\n.text:0000000000403eb9\n.text:0000000000403ebc\n.text:0000000000403ebf\n.text:0000000000403ec5\n.text:0000000000403ec8\n.text:0000000000403eca\n.text:0000000000403ecf\n.text:0000000000403ed3\n.text:0000000000403ed8\n.text:0000000000403edb\n.text:0000000000403edd\n.text:0000000000403ee2\n.text:0000000000403ee4\n.text:0000000000403ee7\n.text:0000000000403eea\n.text:0000000000403eec\n.text:0000000000403ef0\n.text:0000000000403ef5\n.text:0000000000403ef8\n.text:0000000000403efd\n.text:0000000000403f01\n.text:0000000000403f04\n.text:0000000000403f06\n.text:0000000000403f0b\n.text:0000000000403f0e\n.text:0000000000403f13\n.text:0000000000403f17\n.text:0000000000403f1c\n.text:0000000000403f21\n.text:0000000000403f25\n.text:0000000000403f28\n.text:0000000000403f2d\n.text:0000000000403f31\n.text:0000000000403f36\n.text:0000000000403f3b\n.text:0000000000403f3e\n.text:0000000000403f41\n.text:0000000000403f49\n.text:0000000000403f4c\n.text:0000000000403f4e\n.text:0000000000403f50\n.text:0000000000403f53\n.text:0000000000403f56\n.text:0000000000403f59\n.text:0000000000403f5b\n.text:0000000000403f61\n.text:0000000000403f64\n.text:0000000000403f67\n.text:0000000000403f6b\n.text:0000000000403f6f\n.text:0000000000403f75\n.text:0000000000403f78\n.text:0000000000403f7b\n.text:0000000000403f81\n.text:0000000000403f86\n.text:0000000000403f8b\n.text:0000000000403f90\n.text:0000000000403f93\n.text:0000000000403f95\n.text:0000000000403f98\n.text:0000000000403f9a\n.text:0000000000403f9c\n.text:0000000000403fa0\n.text:0000000000403fa5\n.text:0000000000403fa8\n.text:0000000000403fad\n.text:0000000000403fb1\n.text:0000000000403fb4\n.text:0000000000403fb7\n.text:0000000000403fb9\n.text:0000000000403fbe\n.text:0000000000403fc1\n.text:0000000000403fc3\n.text:0000000000403fc8\n.text:0000000000403fcc\n.text:0000000000403fd1\n.text:0000000000403fd7\n.text:0000000000403fdb\n.text:0000000000403fe0\n.text:0000000000403fe4\n.text:0000000000403fe7\n.text:0000000000403fea\n.text:0000000000403fed\n.text:0000000000403ff2\n.text:0000000000403ff6\n.text:0000000000403ffc\n.text:0000000000403fff\n.text:0000000000404005\n.text:000000000040400a\n.text:000000000040400c\n.text:0000000000404012\n.text:0000000000404016\n.text:000000000040401c\n.text:000000000040401f\n.text:0000000000404022\n.text:0000000000404026\n.text:000000000040402b\n.text:0000000000404031\n.text:0000000000404034\n.text:000000000040403a\n.text:000000000040403c\n.text:0000000000404040\n.text:0000000000404045\n.text:0000000000404048\n.text:000000000040404d\n.text:0000000000404051\n.text:0000000000404054\n.text:0000000000404059\n.text:000000000040405b\n.text:0000000000404060\n.text:0000000000404063\n.text:0000000000404069\n.text:000000000040406b\n.text:000000000040406e\n.text:0000000000404072\n.text:0000000000404075\n.text:000000000040407a\n.text:000000000040407d\n.text:0000000000404080\n.text:0000000000404083\n.text:0000000000404086\n.text:000000000040408c\n.text:000000000040408f\n.text:0000000000404095\n.text:000000000040409a\n.text:000000000040409e\n.text:00000000004040a3\n.text:00000000004040a6\n.text:00000000004040ac\n.text:00000000004040b1\n.text:00000000004040b7\n.text:00000000004040ba\n.text:00000000004040bd\n.text:00000000004040c1\n.text:00000000004040c7\n.text:00000000004040ca\n.text:00000000004040d0\n.text:00000000004040d5\n.text:00000000004040d8\n.text:00000000004040dd\n.text:00000000004040e1\n.text:00000000004040e4\n.text:00000000004040e6\n.text:00000000004040eb\n.text:00000000004040ee\n.text:00000000004040f0\n.text:00000000004040f5\n.text:00000000004040f8\n.text:00000000004040fd\n.text:0000000000404101\n.text:0000000000404104\n.text:0000000000404106\n.text:000000000040410b\n.text:000000000040410d\n.text:0000000000404112\n.text:0000000000404114\n.text:0000000000404119\n.text:0000000000404121\n.text:0000000000404124\n.text:0000000000404127\n.text:000000000040412c\n.text:000000000040412e\n.text:0000000000404131\n.text:0000000000404139\n.text:000000000040413c\n.text:0000000000404141\n.text:0000000000404143\n.text:0000000000404146\n.text:000000000040414e\n.text:0000000000404151\n.text:0000000000404156\n.text:000000000040415a\n.text:000000000040415f\n.text:0000000000404162\n.text:000000000040416c\n.text:0000000000404171\n.text:0000000000404176\n.text:000000000040417b\n.text:000000000040417e\n.text:0000000000404184\n.text:0000000000404187\n.text:000000000040418d\n.text:000000000040418f\n.text:0000000000404192\n.text:0000000000404196\n.text:0000000000404199\n.text:000000000040419e\n.text:00000000004041a1\n.text:00000000004041a4\n.text:00000000004041aa\n.text:00000000004041ad\n.text:00000000004041b3\n.text:00000000004041b8\n.text:00000000004041bd\n.text:00000000004041bf\n.text:00000000004041c4\n.text:00000000004041c7\n.text:00000000004041cd\n.text:00000000004041d2\n.text:00000000004041d8\n.text:00000000004041db\n.text:00000000004041de\n.text:00000000004041e2\n.text:00000000004041e8\n.text:00000000004041eb\n.text:00000000004041f1\n.text:0000000000404200\n.text:0000000000404205\n.text:0000000000404208\n.text:000000000040420d\n.text:0000000000404211\n.text:0000000000404214\n.text:0000000000404216\n.text:000000000040421b\n.text:000000000040421e\n.text:0000000000404223\n.text:0000000000404226\n.text:0000000000404228\n.text:0000000000404230\n.text:0000000000404235\n.text:0000000000404238\n.text:000000000040423d\n.text:0000000000404241\n.text:0000000000404244\n.text:0000000000404246\n.text:0000000000404248\n.text:000000000040424a\n.text:000000000040424d\n.text:0000000000404252\n.text:0000000000404257\n.text:000000000040425c\n.text:0000000000404261\n.text:0000000000404266\n.text:000000000040426c\n.text:000000000040426f\n.text:0000000000404274\n.text:0000000000404279\n.text:000000000040427e\n.text:0000000000404283\n.text:0000000000404286\n.text:0000000000404288\n.text:0000000000404290\n.text:0000000000404295\n.text:0000000000404298\n.text:000000000040429d\n.text:00000000004042a1\n.text:00000000004042a4\n.text:00000000004042a6\n.text:00000000004042ab\n.text:00000000004042b0\n.text:00000000004042b3\n.text:00000000004042b5\n.text:00000000004042c0\n.text:00000000004042c5\n.text:00000000004042c8\n.text:00000000004042cd\n.text:00000000004042d1\n.text:00000000004042d4\n.text:00000000004042d6\n.text:00000000004042db\n.text:00000000004042e0\n.text:00000000004042e3\n.text:00000000004042e5\n.text:00000000004042f0\n.text:00000000004042f5\n.text:00000000004042f8\n.text:00000000004042fd\n.text:0000000000404301\n.text:0000000000404304\n.text:0000000000404306\n.text:0000000000404308\n.text:000000000040430b\n.text:000000000040430d\n.text:000000000040430f\n.text:0000000000404310\n.text:0000000000404315\n.text:0000000000404318\n.text:000000000040431d\n.text:0000000000404321\n.text:0000000000404324\n.text:0000000000404329\n.text:000000000040432b\n.text:0000000000404330\n.text:0000000000404333\n.text:0000000000404338\n.text:000000000040433c\n.text:0000000000404341\n.text:0000000000404346\n.text:000000000040434a\n.text:000000000040434d\n.text:0000000000404352\n.text:0000000000404355\n.text:0000000000404357\n.text:0000000000404360\n.text:0000000000404365\n.text:0000000000404368\n.text:000000000040436d\n.text:0000000000404371\n.text:0000000000404374\n.text:0000000000404376\n.text:000000000040437a\n.text:000000000040437d\n.text:0000000000404382\n.text:0000000000404386\n.text:000000000040438b\n.text:0000000000404390\n.text:0000000000404395\n.text:0000000000404398\n.text:000000000040439b\n.text:00000000004043a0\n.text:00000000004043a3\n.text:00000000004043a5\n.text:00000000004043a8\n.text:00000000004043aa\n.text:00000000004043ad\n.text:00000000004043af\n.text:00000000004043b0\n.text:00000000004043b5\n.text:00000000004043b8\n.text:00000000004043bd\n.text:00000000004043c1\n.text:00000000004043c4\n.text:00000000004043c7\n.text:00000000004043c9\n.text:00000000004043cc\n.text:00000000004043d1\n.text:00000000004043d4\n.text:00000000004043d7\n.text:00000000004043dc\n.text:00000000004043e0\n.text:00000000004043e8\n.text:00000000004043eb\n.text:00000000004043ed\n.text:00000000004043f0\n.text:00000000004043f4\n.text:00000000004043f7\n.text:00000000004043fa\n.text:00000000004043fe\n.text:0000000000404401\n.text:0000000000404404\n.text:0000000000404407\n.text:000000000040440d\n.text:0000000000404410\n.text:0000000000404416\n.text:000000000040441b\n.text:0000000000404420\n.text:0000000000404423\n.text:0000000000404426\n.text:0000000000404428\n.text:000000000040442a\n.text:000000000040442c\n.text:000000000040442e\n.text:0000000000404431\n.text:0000000000404434\n.text:0000000000404438\n.text:000000000040443a\n.text:000000000040443d\n.text:000000000040443f\n.text:0000000000404440\n.text:0000000000404445\n.text:0000000000404448\n.text:000000000040444d\n.text:0000000000404451\n.text:0000000000404454\n.text:0000000000404456\n.text:0000000000404458\n.text:000000000040445b\n.text:000000000040445d\n.text:0000000000404460\n.text:0000000000404465\n.text:0000000000404468\n.text:000000000040446d\n.text:0000000000404471\n.text:0000000000404474\n.text:0000000000404476\n.text:000000000040447b\n.text:000000000040447d\n.text:0000000000404480\n.text:0000000000404483\n.text:0000000000404486\n.text:000000000040448b\n.text:000000000040448d\n.text:0000000000404492\n.text:0000000000404495\n.text:0000000000404498\n.text:000000000040449b\n.text:00000000004044a0\n.text:00000000004044a4\n.text:00000000004044a9\n.text:00000000004044ae\n.text:00000000004044b3\n.text:00000000004044b6\n.text:00000000004044bb\n.text:00000000004044c0\n.text:00000000004044c5\n.text:00000000004044ca\n.text:00000000004044cf\n.text:00000000004044d1\n.text:00000000004044d7\n.text:00000000004044da\n.text:00000000004044de\n.text:00000000004044e1\n.text:00000000004044e6\n.text:00000000004044eb\n.text:00000000004044f0\n.text:00000000004044f2\n.text:00000000004044f5\n.text:00000000004044f8\n.text:00000000004044fa\n.text:00000000004044fc\n.text:00000000004044ff\n.text:0000000000404505\n.text:000000000040450a\n.text:000000000040450e\n.text:0000000000404513\n.text:0000000000404518\n.text:000000000040451b\n.text:000000000040451d\n.text:0000000000404522\n.text:0000000000404525\n.text:000000000040452a\n.text:000000000040452e\n.text:0000000000404531\n.text:0000000000404533\n.text:0000000000404538\n.text:000000000040453b\n.text:0000000000404540\n.text:0000000000404544\n.text:0000000000404547\n.text:000000000040454c\n.text:000000000040454f\n.text:0000000000404550\n.text:000000000040455a\n.text:000000000040455f\n.text:0000000000404563\n.text:0000000000404569\n.text:000000000040456e\n.text:0000000000404574\n.text:0000000000404576\n.text:0000000000404579\n.text:000000000040457c\n.text:0000000000404583\n.text:0000000000404584\n.text:0000000000404586\n.text:0000000000404588\n.text:000000000040458a\n.text:000000000040458c\n.text:000000000040458d\n'
p335
tp336
sS'quotearg_custom'
p337
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p338
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p339
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00407cb0\n'
p340
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p341
S'.text:0000000000407d30\n.text:0000000000407d33\n.text:0000000000407d36\n.text:0000000000407d39\n.text:0000000000407d3b\n.text:0000000000407d3e\n.text:0000000000407d41\n.text:0000000000407d44\n'
p342
tp343
sS'free'
p344
(S'\n__stdcall free(void * __ptr)\n'
p345
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_00610028)();\u000a  return;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x00610028]\n'
p347
S'ff 25 f2 e8 20 00\n'
p348
S'.plt:0000000000401730\n'
p349
tp350
sS'close'
p351
(S'\n__stdcall close(int __fd)\n'
p352
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_00610100)();\u000a  return iVar1;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x00610100]\n'
p354
S'ff 25 1a e8 20 00\n'
p355
S'.plt:00000000004018e0\n'
p356
tp357
sS'getenv'
p358
(S'\n__stdcall getenv(char * __name)\n'
p359
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_00610020)();\u000a  return pcVar1;\u000a}\u000a\u000a
p360
S'JMP qword ptr [0x00610020]\n'
p361
S'ff 25 fa e8 20 00\n'
p362
S'.plt:0000000000401720\n'
p363
tp364
sS'fopen'
p365
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p366
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_00610200)();\u000a  return pFVar1;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x00610200]\n'
p368
S'ff 25 1a e7 20 00\n'
p369
S'.plt:0000000000401ae0\n'
p370
tp371
sS'stat'
p372
(S'\n__stdcall stat(char * __file, stat * __buf)\n'
p373
V\u000aint stat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___xstat_00610178)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p374
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x004019d0\n'
p375
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 10 7d ff ff\n'
p376
S'.text:0000000000409cb0\n.text:0000000000409cb3\n.text:0000000000409cb6\n.text:0000000000409cbb\n'
p377
tp378
sS'rpl_fseeko'
p379
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p380
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_006101f8)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p381
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x00408ac8\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x00408ac8\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x00408ada\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401ad0\nMOV RDI,RBX\nCALL 0x004019a0\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x004018a0\nCMP RAX,-0x1\nJZ 0x00408b03\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x00408b08\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p382
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 f6 8f ff ff\n48 89 df\ne8 be 8e ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 b1 8d ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p383
S'.text:0000000000408aa0\n.text:0000000000408aa1\n.text:0000000000408aa3\n.text:0000000000408aa4\n.text:0000000000408aa7\n.text:0000000000408aaa\n.text:0000000000408aad\n.text:0000000000408ab1\n.text:0000000000408ab5\n.text:0000000000408ab7\n.text:0000000000408abb\n.text:0000000000408abf\n.text:0000000000408ac1\n.text:0000000000408ac6\n.text:0000000000408ac8\n.text:0000000000408acb\n.text:0000000000408ace\n.text:0000000000408ad1\n.text:0000000000408ad2\n.text:0000000000408ad4\n.text:0000000000408ad5\n.text:0000000000408ada\n.text:0000000000408add\n.text:0000000000408ae2\n.text:0000000000408ae4\n.text:0000000000408ae7\n.text:0000000000408aea\n.text:0000000000408aef\n.text:0000000000408af3\n.text:0000000000408af5\n.text:0000000000408af8\n.text:0000000000408aff\n.text:0000000000408b01\n.text:0000000000408b03\n.text:0000000000408b08\n.text:0000000000408b09\n.text:0000000000408b0b\n.text:0000000000408b0c\n'
p384
tp385
sS'tzalloc'
p386
(S'\n__stdcall tzalloc(char * name)\n'
p387
V\u000atimezone_t tzalloc(char *name)\u000a\u000a{\u000a  size_t __size;\u000a  timezone_t ptVar1;\u000a  ulong abbr_size;\u000a  \u000a  if (name == (char *)0x0) {\u000a    abbr_size = 0;\u000a  }\u000a  else {\u000a    __size = strlen(name);\u000a    abbr_size = __size + 1;\u000a  }\u000a  __size = 0x80;\u000a  if (0x76 < abbr_size) {\u000a    __size = abbr_size + 10;\u000a  }\u000a  ptVar1 = (timezone_t)malloc(__size);\u000a  if (ptVar1 != (timezone_t)0x0) {\u000a    ptVar1->next = (tm_zone *)0x0;\u000a    *(bool *)&ptVar1->tz_is_set = name != (char *)0x0;\u000a    ptVar1->abbrs[0] = 0;\u000a    if (name != (char *)0x0) {\u000a      extend_abbrs(ptVar1->abbrs,name,abbr_size);\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p388
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nTEST R14,R14\nJZ 0x0040927d\nMOV RDI,R14\nCALL 0x00401840\nMOV R15,RAX\nINC R15\nJMP 0x00409280\nXOR R15D,R15D\nLEA RAX,[R15 + 0xa]\nCMP R15,0x77\nMOV EDI,0x80\nCMOVNC RDI,RAX\nCALL 0x004019f0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x004092c4\nMOV qword ptr [RBX],0x0\nTEST R14,R14\nSETNZ byte ptr [RBX + 0x8]\nMOV byte ptr [RBX + 0x9],0x0\nJZ 0x004092c4\nMOV RDI,RBX\nADD RDI,0x9\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004092d0\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p389
S'41 57\n41 56\n53\n49 89 fe\n4d 85 f6\n74 10\n4c 89 f7\ne8 cb 85 ff ff\n49 89 c7\n49 ff c7\neb 03\n45 31 ff\n49 8d 47 0a\n49 83 ff 77\nbf 80 00 00 00\n48 0f 43 f8\ne8 5a 87 ff ff\n48 89 c3\n48 85 db\n74 26\n48 c7 03 00 00 00 00\n4d 85 f6\n0f 95 43 08\nc6 43 09 00\n74 12\n48 89 df\n48 83 c7 09\n4c 89 f6\n4c 89 fa\ne8 0c 00 00 00\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p390
S'.text:0000000000409260\n.text:0000000000409262\n.text:0000000000409264\n.text:0000000000409265\n.text:0000000000409268\n.text:000000000040926b\n.text:000000000040926d\n.text:0000000000409270\n.text:0000000000409275\n.text:0000000000409278\n.text:000000000040927b\n.text:000000000040927d\n.text:0000000000409280\n.text:0000000000409284\n.text:0000000000409288\n.text:000000000040928d\n.text:0000000000409291\n.text:0000000000409296\n.text:0000000000409299\n.text:000000000040929c\n.text:000000000040929e\n.text:00000000004092a5\n.text:00000000004092a8\n.text:00000000004092ac\n.text:00000000004092b0\n.text:00000000004092b2\n.text:00000000004092b5\n.text:00000000004092b9\n.text:00000000004092bc\n.text:00000000004092bf\n.text:00000000004092c4\n.text:00000000004092c7\n.text:00000000004092c8\n.text:00000000004092ca\n.text:00000000004092cc\n'
p391
tp392
sS'quote_n_mem'
p393
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p394
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p395
S'MOV ECX,0x6102a8\nJMP 0x004078b0\n'
p396
S'b9 a8 02 61 00\ne9 36 fb ff ff\n'
p397
S'.text:0000000000407d70\n.text:0000000000407d75\n'
p398
tp399
sS'xstrdup'
p400
(S'\n__stdcall xstrdup(char * string)\n'
p401
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p402
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401840\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00408900\n'
p403
S'53\n48 89 fb\ne8 07 8f ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p404
S'.text:0000000000408930\n.text:0000000000408931\n.text:0000000000408934\n.text:0000000000408939\n.text:000000000040893d\n.text:0000000000408940\n.text:0000000000408941\n'
p405
tp406
sS'c_ispunct'
p407
(S'\n__stdcall c_ispunct()\n'
p408
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p409
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x004097e2\nMOV AL,0x1\nJMP qword ptr [0x40d7d8 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p410
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd d8 d7 40 00\nc3\n31 c0\nc3\n'
p411
S'.text:00000000004097d0\n.text:00000000004097d3\n.text:00000000004097d6\n.text:00000000004097d8\n.text:00000000004097da\n.text:00000000004097e1\n.text:00000000004097e2\n.text:00000000004097e4\n'
p412
tp413
sS'settime'
p414
(S'\n__stdcall settime(timespec * ts)\n'
p415
V\u000aint settime(timespec *ts)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  timeval local_28;\u000a  \u000a  iVar1 = clock_settime(0,(timespec *)ts);\u000a  iVar2 = 0;\u000a  if (iVar1 != 0) {\u000a    piVar3 = __errno_location();\u000a    iVar2 = iVar1;\u000a    if (*piVar3 != 1) {\u000a      local_28.tv_sec = ts->tv_sec;\u000a      local_28.tv_usec = SUB168(SEXT816(0x20c49ba5e353f7cf) * SEXT816(ts->tv_nsec) >> 0x47,0);\u000a      iVar2 = settimeofday(&local_28,(timezone *)0x0);\u000a    }\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p416
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV R14,RDI\nXOR EBP,EBP\nXOR EDI,EDI\nMOV RSI,R14\nCALL 0x00401a30\nMOV EBX,EAX\nTEST EBX,EBX\nJZ 0x0040820d\nCALL 0x00401760\nCMP dword ptr [RAX],0x1\nMOV EBP,EBX\nJZ 0x0040820d\nMOV RAX,qword ptr [R14]\nMOV qword ptr [RSP],RAX\nMOV RAX,0x20c49ba5e353f7cf\nIMUL qword ptr [R14 + 0x8]\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x7\nADD RDX,RAX\nMOV qword ptr [RSP + 0x8],RDX\nMOV RDI,RSP\nXOR ESI,ESI\nCALL 0x004019c0\nMOV EBP,EAX\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p417
S'55\n41 56\n53\n48 83 ec 10\n49 89 fe\n31 ed\n31 ff\n4c 89 f6\ne8 69 98 ff ff\n89 c3\n85 db\n74 40\ne8 8e 95 ff ff\n83 38 01\n89 dd\n74 34\n49 8b 06\n48 89 04 24\n48 b8 cf f7 53 e3 a5 9b c4 20\n49 f7 6e 08\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 07\n48 01 c2\n48 89 54 24 08\n48 89 e7\n31 f6\ne8 b5 97 ff ff\n89 c5\n89 e8\n48 83 c4 10\n5b\n41 5e\n5d\nc3\n'
p418
S'.text:00000000004081b0\n.text:00000000004081b1\n.text:00000000004081b3\n.text:00000000004081b4\n.text:00000000004081b8\n.text:00000000004081bb\n.text:00000000004081bd\n.text:00000000004081bf\n.text:00000000004081c2\n.text:00000000004081c7\n.text:00000000004081c9\n.text:00000000004081cb\n.text:00000000004081cd\n.text:00000000004081d2\n.text:00000000004081d5\n.text:00000000004081d7\n.text:00000000004081d9\n.text:00000000004081dc\n.text:00000000004081e0\n.text:00000000004081ea\n.text:00000000004081ee\n.text:00000000004081f1\n.text:00000000004081f5\n.text:00000000004081f9\n.text:00000000004081fc\n.text:0000000000408201\n.text:0000000000408204\n.text:0000000000408206\n.text:000000000040820b\n.text:000000000040820d\n.text:000000000040820f\n.text:0000000000408213\n.text:0000000000408214\n.text:0000000000408216\n.text:0000000000408217\n'
p419
tp420
sS'fscanf'
p421
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_006100f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x006100f8]\n'
p424
S'ff 25 22 e8 20 00\n'
p425
S'.plt:00000000004018d0\n'
p426
tp427
sS'strftime'
p428
(S'\n__stdcall strftime(char * __s, size_t __maxsize, char * __format, tm * __tp)\n'
p429
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strftime_006101e0)();\u000a  return sVar1;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x006101e0]\n'
p431
S'ff 25 3a e7 20 00\n'
p432
S'.plt:0000000000401aa0\n'
p433
tp434
sS'memcpy'
p435
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p436
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_00610148)();\u000a  return pvVar1;\u000a}\u000a\u000a
p437
S'JMP qword ptr [0x00610148]\n'
p438
S'ff 25 d2 e7 20 00\n'
p439
S'.plt:0000000000401970\n'
p440
tp441
sS'close_stdout_set_ignore_EPIPE'
p442
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p443
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p444
S'MOV byte ptr [0x00610338],DIL\nRET\n'
p445
S'40 88 3d 11 d6 20 00\nc3\n'
p446
S'.text:0000000000402d20\n.text:0000000000402d27\n'
p447
tp448
sS'iswprint'
p449
(S'\n__stdcall iswprint(wint_t __wc)\n'
p450
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_00610240)();\u000a  return iVar1;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x00610240]\n'
p452
S'ff 25 da e6 20 00\n'
p453
S'.plt:0000000000401b60\n'
p454
tp455
sS'c_isspace'
p456
(S'\n__stdcall c_isspace()\n'
p457
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p458
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00409805\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p459
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p460
S'.text:00000000004097f0\n.text:00000000004097f3\n.text:00000000004097f6\n.text:00000000004097f8\n.text:00000000004097fd\n.text:00000000004097ff\n.text:0000000000409801\n.text:0000000000409804\n.text:0000000000409805\n.text:0000000000409807\n'
p461
tp462
sS'timetostr'
p463
(S'\n__stdcall timetostr(intmax_t i, char * buf)\n'
p464
V\u000achar * timetostr(intmax_t i,char *buf)\u000a\u000a{\u000a  ulong uVar1;\u000a  long lVar2;\u000a  \u000a  buf[0x14] = 0;\u000a  if (i < 0) {\u000a    buf = buf + 0x13;\u000a    do {\u000a      lVar2 = i / 10 + (i >> 0x3f);\u000a      *buf = '0' - ((char)i + (char)lVar2 * -10);\u000a      uVar1 = i + 9;\u000a      buf = buf + -1;\u000a      i = lVar2;\u000a    } while (0x12 < uVar1);\u000a    *buf = '-';\u000a  }\u000a  else {\u000a    buf = buf + 0x14;\u000a    do {\u000a      lVar2 = i / 10 + (i >> 0x3f);\u000a      buf[-1] = (char)i + (char)lVar2 * -10 + '0';\u000a      buf = buf + -1;\u000a      uVar1 = i + 9;\u000a      i = lVar2;\u000a    } while (0x12 < uVar1);\u000a  }\u000a  return buf;\u000a}\u000a\u000a
p465
S'JMP 0x004046b0\n'
p466
S'e9 fb 1c 00 00\n'
p467
S'.text:00000000004029b0\n'
p468
tp469
sS'setenv_TZ'
p470
(S'\n__stdcall setenv_TZ(char * tz)\n'
p471
V\u000aint setenv_TZ(char *tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (tz != (char *)0x0) {\u000a    iVar1 = setenv("TZ",tz,1);\u000a    return iVar1;\u000a  }\u000a  iVar1 = unsetenv("TZ");\u000a  return iVar1;\u000a}\u000a\u000a
p472
S'MOV RAX,RDI\nMOV EDI,0x40d7d4\nTEST RAX,RAX\nJZ 0x004096ea\nMOV EDX,0x1\nMOV RSI,RAX\nJMP 0x004017e0\nJMP 0x00401af0\n'
p473
S'48 89 f8\nbf d4 d7 40 00\n48 85 c0\n74 0d\nba 01 00 00 00\n48 89 c6\ne9 f6 80 ff ff\ne9 01 84 ff ff\n'
p474
S'.text:00000000004096d0\n.text:00000000004096d3\n.text:00000000004096d8\n.text:00000000004096db\n.text:00000000004096dd\n.text:00000000004096e2\n.text:00000000004096e5\n.text:00000000004096ea\n'
p475
tp476
sS'open'
p477
(S'\n__stdcall open(char * __file, int __oflag)\n'
p478
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_006101f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p479
S'JMP qword ptr [0x006101f0]\n'
p480
S'ff 25 2a e7 20 00\n'
p481
S'.plt:0000000000401ac0\n'
p482
tp483
sS'quotearg_n_custom_mem'
p484
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p485
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p486
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x00610380]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x00610370]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x00610360]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x00610350]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00406a20\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x004078b0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p487
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 a7 86 20 00\n48 89 44 24 30\n0f 10 05 8b 86 20 00\n0f 29 44 24 20\n0f 10 05 6f 86 20 00\n0f 29 44 24 10\n0f 10 05 53 86 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p488
S'.text:0000000000407cc0\n.text:0000000000407cc1\n.text:0000000000407cc3\n.text:0000000000407cc5\n.text:0000000000407cc6\n.text:0000000000407cca\n.text:0000000000407ccd\n.text:0000000000407cd0\n.text:0000000000407cd2\n.text:0000000000407cd9\n.text:0000000000407cde\n.text:0000000000407ce5\n.text:0000000000407cea\n.text:0000000000407cf1\n.text:0000000000407cf6\n.text:0000000000407cfd\n.text:0000000000407d01\n.text:0000000000407d04\n.text:0000000000407d07\n.text:0000000000407d0c\n.text:0000000000407d0e\n.text:0000000000407d11\n.text:0000000000407d14\n.text:0000000000407d17\n.text:0000000000407d1c\n.text:0000000000407d20\n.text:0000000000407d21\n.text:0000000000407d23\n.text:0000000000407d25\n.text:0000000000407d26\n'
p489
tp490
sS'localtime'
p491
(S'\n__stdcall localtime(time_t * __timer)\n'
p492
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime(time_t *__timer)\u000a\u000a{\u000a  tm *ptVar1;\u000a  \u000a  ptVar1 = (tm *)(*(code *)PTR_localtime_00610030)();\u000a  return ptVar1;\u000a}\u000a\u000a
p493
S'JMP qword ptr [0x00610030]\n'
p494
S'ff 25 ea e8 20 00\n'
p495
S'.plt:0000000000401740\n'
p496
tp497
sS'localtime_r'
p498
(S'\n__stdcall localtime_r(time_t * __timer, tm * __tp)\n'
p499
V\u000a/* WARNING: Switch with 1 destination removed at 0x00401780 */\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime_r(time_t *__timer,tm *__tp)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x00610050]\n'
p501
S'ff 25 ca e8 20 00\n'
p502
S'.plt:0000000000401780\n'
p503
tp504
sS'_init'
p505
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p506
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___0060fff8;\u000a  if (PTR___gmon_start___0060fff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___0060fff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p507
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x0060fff8]\nTEST RAX,RAX\nJZ 0x004016fa\nCALL RAX\nADD RSP,0x8\nRET\n'
p508
S'48 83 ec 08\n48 8b 05 05 e9 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p509
S'.init:00000000004016e8\n.init:00000000004016ec\n.init:00000000004016f3\n.init:00000000004016f6\n.init:00000000004016f8\n.init:00000000004016fa\n.init:00000000004016fe\n'
p510
tp511
sS'tzset'
p512
(S'\n__stdcall tzset()\n'
p513
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid tzset(void)\u000a\u000a{\u000a  (*(code *)PTR_tzset_00610150)();\u000a  return;\u000a}\u000a\u000a
p514
S'JMP qword ptr [0x00610150]\n'
p515
S'ff 25 ca e7 20 00\n'
p516
S'.plt:0000000000401980\n'
p517
tp518
sS'set_quoting_flags'
p519
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p520
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p521
S'TEST RDI,RDI\nMOV ECX,0x610350\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p522
S'48 85 ff\nb9 50 03 61 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p523
S'.text:0000000000406a00\n.text:0000000000406a03\n.text:0000000000406a08\n.text:0000000000406a0c\n.text:0000000000406a0f\n.text:0000000000406a12\n'
p524
tp525
sS'get_stat_birthtime'
p526
(S'\n__stdcall get_stat_birthtime(stat * st)\n'
p527
V\u000atimespec get_stat_birthtime(stat *st)\u000a\u000a{\u000a  return (timespec)CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\u000a}\u000a\u000a
p528
S'MOV RAX,-0x1\nMOV RDX,-0x1\nRET\n'
p529
S'48 c7 c0 ff ff ff ff\n48 c7 c2 ff ff ff ff\nc3\n'
p530
S'.text:0000000000408290\n.text:0000000000408297\n.text:000000000040829e\n'
p531
tp532
sS'realloc'
p533
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p534
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_006101b8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p535
S'JMP qword ptr [0x006101b8]\n'
p536
S'ff 25 62 e7 20 00\n'
p537
S'.plt:0000000000401a50\n'
p538
tp539
sS'__fprintf_chk'
p540
(S'\n__stdcall __fprintf_chk()\n'
p541
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_00610230)();\u000a  return;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x00610230]\n'
p543
S'ff 25 ea e6 20 00\n'
p544
S'.plt:0000000000401b40\n'
p545
tp546
sS'get_charset_aliases'
p547
(S'\n__stdcall get_charset_aliases()\n'
p548
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_00409b74_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_00409b74_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_00409b74_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_00409b74_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_00409b74_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_00409b74_caseD_9;\u000a      case -1:\u000a        goto switchD_00409b74_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_00409bcd:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_00409bd3:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_00409b74_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_00409bd3;\u000a  }\u000a  goto LAB_00409bcd;\u000a}\u000a\u000a
p549
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x00610498]\nTEST R15,R15\nJNZ 0x00409be2\nMOV EDI,0x40dc04\nCALL 0x00401720\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409998\nCMP byte ptr [RBX],0x0\nJNZ 0x0040999d\nMOV EBX,0x40dc14\nMOV RDI,RBX\nCALL 0x00401840\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004099b7\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x004099b9\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x004019f0\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00409a0d\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401970\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00409a18\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00409a35\nMOV R15D,0x40d569\nJMP 0x00409bdb\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00401ac0\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00409bcd\nMOV ESI,0x40b3bf\nMOV EDI,EBP\nCALL 0x00401a60\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409b94\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x00409b60\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x004017a0\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x004017a0\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x00409b60\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x00401a20\nMOV ESI,0x40dc23\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x004018d0\nCMP EAX,0x2\nJL 0x00409bb4\nMOV RDI,R12\nCALL 0x00401840\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401840\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00409b3d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x00401a50\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x00409a84\nJMP 0x00409b9d\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x004019f0\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x00409a84\nJMP 0x00409b9d\nMOV RDI,RBX\nCALL 0x004017c0\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x00409ac7\nJMP qword ptr [0x40dac8 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x004017c0\nCMP EAX,-0x1\nJZ 0x00409bb4\nCMP EAX,0xa\nJNZ 0x00409b80\nJMP 0x00409b60\nMOV EDI,EBP\nCALL 0x004018e0\nJMP 0x00409bcd\nMOV RDI,R15\nCALL 0x00401730\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x004089d0\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00409bcd\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x00409bd3\nMOV R15D,0x40d569\nMOV RDI,R13\nCALL 0x00401730\nMOV qword ptr [0x00610498],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p550
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d 20 6b 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf 04 dc 40 00\ne8 95 7d ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb 14 dc 40 00\n48 89 df\ne8 9b 7e ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 29 80 ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 93 7f ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf 69 d5 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 7c 80 ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe bf b3 40 00\n89 ef\ne8 06 80 ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 fb 7c ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 eb 7c ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 4f 7f ff ff\nbe 23 dc 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 ea 7d ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 49 7d ff ff\n49 89 c4\n48 89 ef\ne8 3e 7d ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 26 7f ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 a5 7e ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 58 7c ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd c8 da 40 00\n48 89 df\ne8 38 7c ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 45 7d ff ff\neb 30\n4c 89 ff\ne8 8b 7b ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 14 ee ff ff\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf 69 d5 40 00\n4c 89 ef\ne8 55 7b ff ff\n4c 89 3d b6 68 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p551
S'.text:0000000000409960\n.text:0000000000409961\n.text:0000000000409963\n.text:0000000000409965\n.text:0000000000409967\n.text:0000000000409969\n.text:000000000040996a\n.text:0000000000409971\n.text:0000000000409978\n.text:000000000040997b\n.text:0000000000409981\n.text:0000000000409986\n.text:000000000040998b\n.text:000000000040998e\n.text:0000000000409991\n.text:0000000000409993\n.text:0000000000409996\n.text:0000000000409998\n.text:000000000040999d\n.text:00000000004099a0\n.text:00000000004099a5\n.text:00000000004099a8\n.text:00000000004099ab\n.text:00000000004099ad\n.text:00000000004099b2\n.text:00000000004099b5\n.text:00000000004099b7\n.text:00000000004099b9\n.text:00000000004099bd\n.text:00000000004099c2\n.text:00000000004099c7\n.text:00000000004099ca\n.text:00000000004099cd\n.text:00000000004099cf\n.text:00000000004099d2\n.text:00000000004099d5\n.text:00000000004099d8\n.text:00000000004099dd\n.text:00000000004099e0\n.text:00000000004099e3\n.text:00000000004099e6\n.text:00000000004099e8\n.text:00000000004099ee\n.text:00000000004099f8\n.text:00000000004099fd\n.text:0000000000409a07\n.text:0000000000409a0b\n.text:0000000000409a0d\n.text:0000000000409a13\n.text:0000000000409a18\n.text:0000000000409a22\n.text:0000000000409a27\n.text:0000000000409a31\n.text:0000000000409a35\n.text:0000000000409a3a\n.text:0000000000409a3c\n.text:0000000000409a3f\n.text:0000000000409a44\n.text:0000000000409a46\n.text:0000000000409a48\n.text:0000000000409a4e\n.text:0000000000409a53\n.text:0000000000409a55\n.text:0000000000409a5a\n.text:0000000000409a5d\n.text:0000000000409a60\n.text:0000000000409a66\n.text:0000000000409a6b\n.text:0000000000409a70\n.text:0000000000409a72\n.text:0000000000409a77\n.text:0000000000409a7a\n.text:0000000000409a7f\n.text:0000000000409a84\n.text:0000000000409a89\n.text:0000000000409a8c\n.text:0000000000409a8f\n.text:0000000000409a92\n.text:0000000000409a95\n.text:0000000000409a98\n.text:0000000000409a9d\n.text:0000000000409aa0\n.text:0000000000409aa5\n.text:0000000000409aa8\n.text:0000000000409aad\n.text:0000000000409ab0\n.text:0000000000409ab5\n.text:0000000000409aba\n.text:0000000000409abd\n.text:0000000000409ac2\n.text:0000000000409ac7\n.text:0000000000409ac9\n.text:0000000000409acc\n.text:0000000000409ad1\n.text:0000000000409ad6\n.text:0000000000409ad8\n.text:0000000000409adb\n.text:0000000000409ade\n.text:0000000000409ae1\n.text:0000000000409ae6\n.text:0000000000409ae9\n.text:0000000000409aef\n.text:0000000000409af2\n.text:0000000000409af7\n.text:0000000000409afa\n.text:0000000000409afd\n.text:0000000000409b02\n.text:0000000000409b05\n.text:0000000000409b0a\n.text:0000000000409b0f\n.text:0000000000409b12\n.text:0000000000409b14\n.text:0000000000409b18\n.text:0000000000409b1d\n.text:0000000000409b22\n.text:0000000000409b25\n.text:0000000000409b2a\n.text:0000000000409b2d\n.text:0000000000409b32\n.text:0000000000409b35\n.text:0000000000409b3b\n.text:0000000000409b3d\n.text:0000000000409b42\n.text:0000000000409b46\n.text:0000000000409b4b\n.text:0000000000409b4e\n.text:0000000000409b51\n.text:0000000000409b57\n.text:0000000000409b60\n.text:0000000000409b63\n.text:0000000000409b68\n.text:0000000000409b6b\n.text:0000000000409b6e\n.text:0000000000409b74\n.text:0000000000409b80\n.text:0000000000409b83\n.text:0000000000409b88\n.text:0000000000409b8b\n.text:0000000000409b8d\n.text:0000000000409b90\n.text:0000000000409b92\n.text:0000000000409b94\n.text:0000000000409b96\n.text:0000000000409b9b\n.text:0000000000409b9d\n.text:0000000000409ba0\n.text:0000000000409ba5\n.text:0000000000409ba7\n.text:0000000000409bac\n.text:0000000000409baf\n.text:0000000000409bb4\n.text:0000000000409bb7\n.text:0000000000409bbc\n.text:0000000000409bc1\n.text:0000000000409bc4\n.text:0000000000409bc6\n.text:0000000000409bcb\n.text:0000000000409bcd\n.text:0000000000409bd3\n.text:0000000000409bd6\n.text:0000000000409bdb\n.text:0000000000409be2\n.text:0000000000409be5\n.text:0000000000409bec\n.text:0000000000409bed\n.text:0000000000409bef\n.text:0000000000409bf1\n.text:0000000000409bf3\n.text:0000000000409bf5\n.text:0000000000409bf6\n'
p552
tp553
sS'nl_langinfo'
p554
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p555
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00610198)();\u000a  return pcVar1;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x00610198]\n'
p557
S'ff 25 82 e7 20 00\n'
p558
S'.plt:0000000000401a10\n'
p559
tp560
sS'x2realloc'
p561
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p562
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p563
S'MOV EDX,0x1\nJMP 0x00408830\n'
p564
S'ba 01 00 00 00\neb 89\n'
p565
S'.text:00000000004088a0\n.text:00000000004088a5\n'
p566
tp567
sS'strlen'
p568
(S'\n__stdcall strlen(char * __s)\n'
p569
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_006100b0)();\u000a  return sVar1;\u000a}\u000a\u000a
p570
S'JMP qword ptr [0x006100b0]\n'
p571
S'ff 25 6a e8 20 00\n'
p572
S'.plt:0000000000401840\n'
p573
tp574
sS'memcmp'
p575
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p576
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_00610110)();\u000a  return iVar1;\u000a}\u000a\u000a
p577
S'JMP qword ptr [0x00610110]\n'
p578
S'ff 25 0a e8 20 00\n'
p579
S'.plt:0000000000401900\n'
p580
tp581
sS'quotearg_n_style_mem'
p582
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p583
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p584
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00407ae0\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x004078b0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p585
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p586
S'.text:0000000000407b40\n.text:0000000000407b41\n.text:0000000000407b43\n.text:0000000000407b45\n.text:0000000000407b46\n.text:0000000000407b4a\n.text:0000000000407b4d\n.text:0000000000407b50\n.text:0000000000407b52\n.text:0000000000407b55\n.text:0000000000407b58\n.text:0000000000407b5d\n.text:0000000000407b5f\n.text:0000000000407b62\n.text:0000000000407b65\n.text:0000000000407b68\n.text:0000000000407b6d\n.text:0000000000407b71\n.text:0000000000407b72\n.text:0000000000407b74\n.text:0000000000407b76\n.text:0000000000407b77\n'
p587
tp588
sS'_exit'
p589
(S'\n__stdcall _exit(int __status)\n'
p590
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_00610058)();\u000a  return;\u000a}\u000a\u000a
p591
S'JMP qword ptr [0x00610058]\n'
p592
S'ff 25 c2 e8 20 00\n'
p593
S'.plt:0000000000401790\n'
p594
tp595
sS'argmatch_valid'
p596
(S'\n__stdcall argmatch_valid(char * * arglist, char * vallist, size_t valsize)\n'
p597
V\u000avoid argmatch_valid(char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  int iVar2;\u000a  char *__s;\u000a  char *__s1;\u000a  long lVar3;\u000a  \u000a  __s = (char *)dcgettext(0,"Valid arguments are:",5);\u000a  fputs_unlocked(__s,stderr);\u000a  __s = *arglist;\u000a  if (__s != (char *)0x0) {\u000a    __s1 = (char *)0x0;\u000a    lVar3 = 0;\u000a    do {\u000a      pFVar1 = stderr;\u000a      if (lVar3 == 0) {\u000aLAB_00402ba7:\u000a        __s = quote(__s);\u000a        __fprintf_chk(pFVar1,1,"\u005cn  - %s",__s);\u000a        __s1 = vallist;\u000a      }\u000a      else {\u000a        iVar2 = memcmp(__s1,vallist,valsize);\u000a        if (iVar2 != 0) goto LAB_00402ba7;\u000a        __s = quote(__s);\u000a        __fprintf_chk(pFVar1,1,&DAT_0040b725,__s);\u000a      }\u000a      __s = arglist[lVar3 + 1];\u000a      lVar3 = lVar3 + 1;\u000a      vallist = vallist + valsize;\u000a    } while (__s != (char *)0x0);\u000a  }\u000a  (*(code *)PTR_putc_unlocked_00610180)(10,stderr);\u000a  return;\u000a}\u000a\u000a
p598
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R13,RSI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV ESI,0x40b708\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x00610320]\nMOV RDI,RAX\nCALL 0x00401910\nMOV qword ptr [RSP],RBX\nMOV RBX,qword ptr [RBX]\nTEST RBX,RBX\nMOV R12,qword ptr [0x00610320]\nJZ 0x00402c0a\nXOR EBP,EBP\nXOR R15D,R15D\nTEST R15,R15\nJZ 0x00402ba7\nMOV RDI,RBP\nMOV RSI,R13\nMOV RDX,R14\nCALL 0x00401900\nTEST EAX,EAX\nJZ 0x00402bd0\nMOV RDI,RBX\nCALL 0x00407da0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x40b71d\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00401b40\nMOV RBP,R13\nJMP 0x00402bef\nMOV RDI,RBX\nCALL 0x00407da0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x40b725\nXOR EAX,EAX\nMOV RDI,R12\nCALL 0x00401b40\nMOV RAX,qword ptr [RSP]\nMOV RBX,qword ptr [RAX + R15*0x8 + 0x8]\nINC R15\nMOV R12,qword ptr [0x00610320]\nADD R13,R14\nTEST RBX,RBX\nJNZ 0x00402b90\nMOV EDI,0xa\nMOV RSI,R12\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004019e0\n'
p599
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f5\n48 89 fb\n31 ff\nbe 08 b7 40 00\nba 05 00 00 00\ne8 bb ec ff ff\n48 8b 35 b4 d7 20 00\n48 89 c7\ne8 9c ed ff ff\n48 89 1c 24\n48 8b 1b\n48 85 db\n4c 8b 25 9b d7 20 00\n0f 84 7f 00 00 00\n31 ed\n45 31 ff\n4d 85 ff\n74 12\n48 89 ef\n4c 89 ee\n4c 89 f2\ne8 5d ed ff ff\n85 c0\n74 29\n48 89 df\ne8 f1 51 00 00\n48 89 c1\nbe 01 00 00 00\nba 1d b7 40 00\n31 c0\n4c 89 e7\ne8 7a ef ff ff\n4c 89 ed\neb 24\n48 89 df\ne8 c8 51 00 00\n48 89 c1\nbe 01 00 00 00\nba 25 b7 40 00\n31 c0\n4c 89 e7\ne8 51 ef ff ff\n48 8b 04 24\n4a 8b 5c f8 08\n49 ff c7\n4c 8b 25 1e d7 20 00\n4d 01 f5\n48 85 db\n75 86\nbf 0a 00 00 00\n4c 89 e6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 bb ed ff ff\n'
p600
S'.text:0000000000402b40\n.text:0000000000402b41\n.text:0000000000402b43\n.text:0000000000402b45\n.text:0000000000402b47\n.text:0000000000402b49\n.text:0000000000402b4a\n.text:0000000000402b4b\n.text:0000000000402b4e\n.text:0000000000402b51\n.text:0000000000402b54\n.text:0000000000402b56\n.text:0000000000402b5b\n.text:0000000000402b60\n.text:0000000000402b65\n.text:0000000000402b6c\n.text:0000000000402b6f\n.text:0000000000402b74\n.text:0000000000402b78\n.text:0000000000402b7b\n.text:0000000000402b7e\n.text:0000000000402b85\n.text:0000000000402b8b\n.text:0000000000402b8d\n.text:0000000000402b90\n.text:0000000000402b93\n.text:0000000000402b95\n.text:0000000000402b98\n.text:0000000000402b9b\n.text:0000000000402b9e\n.text:0000000000402ba3\n.text:0000000000402ba5\n.text:0000000000402ba7\n.text:0000000000402baa\n.text:0000000000402baf\n.text:0000000000402bb2\n.text:0000000000402bb7\n.text:0000000000402bbc\n.text:0000000000402bbe\n.text:0000000000402bc1\n.text:0000000000402bc6\n.text:0000000000402bc9\n.text:0000000000402bd0\n.text:0000000000402bd3\n.text:0000000000402bd8\n.text:0000000000402bdb\n.text:0000000000402be0\n.text:0000000000402be5\n.text:0000000000402be7\n.text:0000000000402bea\n.text:0000000000402bef\n.text:0000000000402bf3\n.text:0000000000402bf8\n.text:0000000000402bfb\n.text:0000000000402c02\n.text:0000000000402c05\n.text:0000000000402c08\n.text:0000000000402c0a\n.text:0000000000402c0f\n.text:0000000000402c12\n.text:0000000000402c16\n.text:0000000000402c17\n.text:0000000000402c19\n.text:0000000000402c1b\n.text:0000000000402c1d\n.text:0000000000402c1f\n.text:0000000000402c20\n'
p601
tp602
sS'xrealloc'
p603
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p604
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p605
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x00408817\nTEST RBX,RBX\nJNZ 0x00408817\nCALL 0x00401730\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x00401a50\nTEST RBX,RBX\nJZ 0x00408829\nTEST RAX,RAX\nJZ 0x0040882b\nPOP RBX\nRET\nCALL 0x00408950\n'
p606
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 1d 8f ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 31 92 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p607
S'.text:0000000000408800\n.text:0000000000408801\n.text:0000000000408804\n.text:0000000000408807\n.text:0000000000408809\n.text:000000000040880c\n.text:000000000040880e\n.text:0000000000408813\n.text:0000000000408815\n.text:0000000000408816\n.text:0000000000408817\n.text:000000000040881a\n.text:000000000040881f\n.text:0000000000408822\n.text:0000000000408824\n.text:0000000000408827\n.text:0000000000408829\n.text:000000000040882a\n.text:000000000040882b\n'
p608
tp609
sS'close_stdout'
p610
(S'\n__stdcall close_stdout()\n'
p611
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00402d57;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,&DAT_0040b727,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00402d57:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x006102e8]\nCALL 0x00409860\nTEST EAX,EAX\nJZ 0x00402d57\nCMP byte ptr [0x00610338],0x0\nJZ 0x00402d6c\nCALL 0x00401760\nCMP dword ptr [RAX],0x20\nJNZ 0x00402d6c\nMOV RDI,qword ptr [0x00610320]\nCALL 0x00409860\nTEST EAX,EAX\nJNZ 0x00402db1\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x40b72a\nMOV EDX,0x5\nCALL 0x00401820\nMOV R14,RAX\nMOV RBX,qword ptr [0x00610330]\nCALL 0x00401760\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x00402dbc\nXOR EDI,EDI\nMOV EDX,0x40b727\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00401ab0\nMOV EDI,dword ptr [0x00610280]\nCALL 0x00401790\nMOV EDI,dword ptr [0x00610280]\nCALL 0x00401790\nMOV RDI,RBX\nCALL 0x00407c40\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x40b736\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00401ab0\nMOV EDI,dword ptr [0x00610280]\nCALL 0x00401790\n'
p613
S'55\n41 56\n53\n48 8b 3d ad d5 20 00\ne8 20 6b 00 00\n85 c0\n74 13\n80 3d ed d5 20 00 00\n74 1f\ne8 0e ea ff ff\n83 38 20\n75 15\n48 8b 3d c2 d5 20 00\ne8 fd 6a 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe 2a b7 40 00\nba 05 00 00 00\ne8 a3 ea ff ff\n49 89 c6\n48 8b 1d a9 d5 20 00\ne8 d4 e9 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba 27 b7 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 0a ed ff ff\n8b 3d d4 d4 20 00\ne8 df e9 ff ff\n8b 3d c9 d4 20 00\ne8 d4 e9 ff ff\n48 89 df\ne8 7c 4e 00 00\n48 89 c1\n31 ff\nba 36 b7 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 d6 ec ff ff\n8b 3d a0 d4 20 00\ne8 ab e9 ff ff\n'
p614
S'.text:0000000000402d30\n.text:0000000000402d31\n.text:0000000000402d33\n.text:0000000000402d34\n.text:0000000000402d3b\n.text:0000000000402d40\n.text:0000000000402d42\n.text:0000000000402d44\n.text:0000000000402d4b\n.text:0000000000402d4d\n.text:0000000000402d52\n.text:0000000000402d55\n.text:0000000000402d57\n.text:0000000000402d5e\n.text:0000000000402d63\n.text:0000000000402d65\n.text:0000000000402d67\n.text:0000000000402d68\n.text:0000000000402d6a\n.text:0000000000402d6b\n.text:0000000000402d6c\n.text:0000000000402d6e\n.text:0000000000402d73\n.text:0000000000402d78\n.text:0000000000402d7d\n.text:0000000000402d80\n.text:0000000000402d87\n.text:0000000000402d8c\n.text:0000000000402d8f\n.text:0000000000402d91\n.text:0000000000402d93\n.text:0000000000402d95\n.text:0000000000402d9a\n.text:0000000000402d9c\n.text:0000000000402d9e\n.text:0000000000402da1\n.text:0000000000402da6\n.text:0000000000402dac\n.text:0000000000402db1\n.text:0000000000402db7\n.text:0000000000402dbc\n.text:0000000000402dbf\n.text:0000000000402dc4\n.text:0000000000402dc7\n.text:0000000000402dc9\n.text:0000000000402dce\n.text:0000000000402dd0\n.text:0000000000402dd2\n.text:0000000000402dd5\n.text:0000000000402dda\n.text:0000000000402de0\n'
p615
tp616
sS'version_etc_ar'
p617
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p618
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p619
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x00408610\nJMP 0x004082a0\n'
p620
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p621
S'.text:0000000000408600\n.text:0000000000408607\n.text:0000000000408610\n.text:0000000000408616\n.text:000000000040861a\n.text:000000000040861c\n'
p622
tp623
sS'__ctype_tolower_loc'
p624
(S'\n__stdcall __ctype_tolower_loc()\n'
p625
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_00610248)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p626
S'JMP qword ptr [0x00610248]\n'
p627
S'ff 25 d2 e6 20 00\n'
p628
S'.plt:0000000000401b70\n'
p629
tp630
sS'c_isxdigit'
p631
(S'\n__stdcall c_isxdigit()\n'
p632
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p633
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x0040983b\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p634
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p635
S'.text:0000000000409820\n.text:0000000000409823\n.text:0000000000409826\n.text:0000000000409828\n.text:0000000000409832\n.text:0000000000409834\n.text:0000000000409837\n.text:000000000040983a\n.text:000000000040983b\n.text:000000000040983d\n'
p636
tp637
sS'to_year'
p638
(S'\n__stdcall to_year(textint textyear)\n'
p639
V\u000along to_year(textint textyear)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  if (-1 < textyear.value) {\u000a    if (textyear.digits == 2) {\u000a      lVar1 = 0x76c;\u000a      if (textyear.value < 0x45) {\u000a        lVar1 = 2000;\u000a      }\u000a      textyear.value = textyear.value + lVar1;\u000a    }\u000a    return textyear.value;\u000a  }\u000a  return -textyear.value;\u000a}\u000a\u000a
p640
S'MOV RAX,qword ptr [RSP + 0x10]\nTEST RAX,RAX\nJS 0x004061dc\nLEA RCX,[RSP + 0x8]\nCMP qword ptr [RCX + 0x10],0x2\nJNZ 0x004061db\nCMP RAX,0x45\nMOV ECX,0x7d0\nMOV EDX,0x76c\nCMOVL RDX,RCX\nADD RAX,RDX\nRET\nNEG RAX\nRET\n'
p641
S'48 8b 44 24 10\n48 85 c0\n78 22\n48 8d 4c 24 08\n48 83 79 10 02\n75 15\n48 83 f8 45\nb9 d0 07 00 00\nba 6c 07 00 00\n48 0f 4c d1\n48 01 d0\nc3\n48 f7 d8\nc3\n'
p642
S'.text:00000000004061b0\n.text:00000000004061b5\n.text:00000000004061b8\n.text:00000000004061ba\n.text:00000000004061bf\n.text:00000000004061c4\n.text:00000000004061c6\n.text:00000000004061ca\n.text:00000000004061cf\n.text:00000000004061d4\n.text:00000000004061d8\n.text:00000000004061db\n.text:00000000004061dc\n.text:00000000004061df\n'
p643
tp644
sS'__libc_csu_fini'
p645
(S'\n__stdcall __libc_csu_fini()\n'
p646
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p647
S'RET\n'
p648
S'f3 c3\n'
p649
S'.text:0000000000409c70\n'
p650
tp651
sS'abort'
p652
(S'\n__stdcall abort()\n'
p653
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_00610038)();\u000a  return;\u000a}\u000a\u000a
p654
S'JMP qword ptr [0x00610038]\n'
p655
S'ff 25 e2 e8 20 00\n'
p656
S'.plt:0000000000401750\n'
p657
tp658
sS'gettime'
p659
(S'\n__stdcall gettime(timespec * ts)\n'
p660
V\u000avoid gettime(timespec *ts)\u000a\u000a{\u000a  int iVar1;\u000a  timeval local_18;\u000a  \u000a  iVar1 = clock_gettime(0,(timespec *)ts);\u000a  if (iVar1 != 0) {\u000a    gettimeofday(&local_18,(__timezone_ptr_t)0x0);\u000a    ts->tv_sec = local_18.tv_sec;\u000a    ts->tv_nsec = local_18.tv_usec * 1000;\u000a  }\u000a  return;\u000a}\u000a\u000a
p661
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nXOR EDI,EDI\nMOV RSI,RBX\nCALL 0x004017d0\nTEST EAX,EAX\nJZ 0x004046a4\nMOV RDI,RSP\nXOR ESI,ESI\nCALL 0x004018b0\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RBX],RAX\nIMUL RAX,qword ptr [RSP + 0x8],0x3e8\nMOV qword ptr [RBX + 0x8],RAX\nADD RSP,0x10\nPOP RBX\nRET\n'
p662
S'53\n48 83 ec 10\n48 89 fb\n31 ff\n48 89 de\ne8 4e d1 ff ff\n85 c0\n74 1e\n48 89 e7\n31 f6\ne8 20 d2 ff ff\n48 8b 04 24\n48 89 03\n48 69 44 24 08 e8 03 00 00\n48 89 43 08\n48 83 c4 10\n5b\nc3\n'
p663
S'.text:0000000000404670\n.text:0000000000404671\n.text:0000000000404675\n.text:0000000000404678\n.text:000000000040467a\n.text:000000000040467d\n.text:0000000000404682\n.text:0000000000404684\n.text:0000000000404686\n.text:0000000000404689\n.text:000000000040468b\n.text:0000000000404690\n.text:0000000000404694\n.text:0000000000404697\n.text:00000000004046a0\n.text:00000000004046a4\n.text:00000000004046a8\n.text:00000000004046a9\n'
p664
tp665
sS'version_etc'
p666
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p667
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p668
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x004086d2\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x00408630\nADD RSP,0xd8\nRET\n'
p669
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p670
S'.text:0000000000408690\n.text:0000000000408697\n.text:0000000000408699\n.text:000000000040869b\n.text:00000000004086a0\n.text:00000000004086a5\n.text:00000000004086aa\n.text:00000000004086b2\n.text:00000000004086ba\n.text:00000000004086c2\n.text:00000000004086ca\n.text:00000000004086d2\n.text:00000000004086d7\n.text:00000000004086dc\n.text:00000000004086e1\n.text:00000000004086e6\n.text:00000000004086ee\n.text:00000000004086f3\n.text:00000000004086fb\n.text:0000000000408702\n.text:0000000000408705\n.text:000000000040870a\n.text:0000000000408711\n'
p671
tp672
sS'putenv'
p673
(S'\n__stdcall putenv(char * __string)\n'
p674
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putenv(char *__string)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putenv_00610130)();\u000a  return iVar1;\u000a}\u000a\u000a
p675
S'JMP qword ptr [0x00610130]\n'
p676
S'ff 25 ea e7 20 00\n'
p677
S'.plt:0000000000401940\n'
p678
tp679
sS'mktime_ok'
p680
(S'\n__stdcall mktime_ok(tm * tm0, tm * tm1, time_t t)\n'
p681
V\u000a_Bool mktime_ok(tm *tm0,tm *tm1,time_t t)\u000a\u000a{\u000a  time_t local_10;\u000a  \u000a  if ((t == -1) && (local_10 = t, tm1 = (tm *)localtime(&local_10), tm1 == (tm *)0x0)) {\u000a    return false;\u000a  }\u000a  return (_Bool)((((tm *)tm1)->tm_year ^ tm0->tm_year |\u000a                 ((tm *)tm1)->tm_mon ^ tm0->tm_mon |\u000a                 ((tm *)tm1)->tm_mday ^ tm0->tm_mday | ((tm *)tm1)->tm_hour ^ tm0->tm_hour |\u000a                 ((tm *)tm1)->tm_min ^ tm0->tm_min | ((tm *)tm1)->tm_sec ^ tm0->tm_sec) == 0);\u000a}\u000a\u000a
p682
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x8],RDX\nCMP RDX,-0x1\nJNZ 0x00406265\nLEA RDI,[RSP + 0x8]\nCALL 0x00401740\nMOV RSI,RAX\nTEST RSI,RSI\nJZ 0x0040629a\nMOV EAX,dword ptr [RSI]\nMOV ECX,dword ptr [RSI + 0x4]\nXOR EAX,dword ptr [RBX]\nXOR ECX,dword ptr [RBX + 0x4]\nOR ECX,EAX\nMOV EAX,dword ptr [RSI + 0x8]\nXOR EAX,dword ptr [RBX + 0x8]\nMOV EDX,dword ptr [RSI + 0xc]\nXOR EDX,dword ptr [RBX + 0xc]\nOR EDX,EAX\nOR EDX,ECX\nMOV EAX,dword ptr [RSI + 0x10]\nXOR EAX,dword ptr [RBX + 0x10]\nOR EAX,EDX\nMOV ECX,dword ptr [RSI + 0x14]\nXOR ECX,dword ptr [RBX + 0x14]\nOR ECX,EAX\nSETZ AL\nADD RSP,0x10\nPOP RBX\nRET\nXOR EAX,EAX\nJMP 0x00406294\n'
p683
S'53\n48 83 ec 10\n48 89 fb\n48 89 54 24 08\n48 83 fa ff\n75 12\n48 8d 7c 24 08\ne8 e3 b4 ff ff\n48 89 c6\n48 85 f6\n74 35\n8b 06\n8b 4e 04\n33 03\n33 4b 04\n09 c1\n8b 46 08\n33 43 08\n8b 56 0c\n33 53 0c\n09 c2\n09 ca\n8b 46 10\n33 43 10\n09 d0\n8b 4e 14\n33 4b 14\n09 c1\n0f 94 c0\n48 83 c4 10\n5b\nc3\n31 c0\neb f6\n'
p684
S'.text:0000000000406240\n.text:0000000000406241\n.text:0000000000406245\n.text:0000000000406248\n.text:000000000040624d\n.text:0000000000406251\n.text:0000000000406253\n.text:0000000000406258\n.text:000000000040625d\n.text:0000000000406260\n.text:0000000000406263\n.text:0000000000406265\n.text:0000000000406267\n.text:000000000040626a\n.text:000000000040626c\n.text:000000000040626f\n.text:0000000000406271\n.text:0000000000406274\n.text:0000000000406277\n.text:000000000040627a\n.text:000000000040627d\n.text:000000000040627f\n.text:0000000000406281\n.text:0000000000406284\n.text:0000000000406287\n.text:0000000000406289\n.text:000000000040628c\n.text:000000000040628f\n.text:0000000000406291\n.text:0000000000406294\n.text:0000000000406298\n.text:0000000000406299\n.text:000000000040629a\n.text:000000000040629c\n'
p685
tp686
sS'lseek'
p687
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p688
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_006100e0)();\u000a  return _Var1;\u000a}\u000a\u000a
p689
S'JMP qword ptr [0x006100e0]\n'
p690
S'ff 25 3a e8 20 00\n'
p691
S'.plt:00000000004018a0\n'
p692
tp693
sS'quotearg_n_mem'
p694
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p695
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p696
S'MOV ECX,0x610350\nJMP 0x004078b0\n'
p697
S'b9 50 03 61 00\ne9 36 fe ff ff\n'
p698
S'.text:0000000000407a70\n.text:0000000000407a75\n'
p699
tp700
sS'__printf_chk'
p701
(S'\n__stdcall __printf_chk()\n'
p702
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_006101d0)();\u000a  return;\u000a}\u000a\u000a
p703
S'JMP qword ptr [0x006101d0]\n'
p704
S'ff 25 4a e7 20 00\n'
p705
S'.plt:0000000000401a80\n'
p706
tp707
sS'settimeofday'
p708
(S'\n__stdcall settimeofday(timeval * __tv, timezone * __tz)\n'
p709
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint settimeofday(timeval *__tv,timezone *__tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_settimeofday_00610170)();\u000a  return iVar1;\u000a}\u000a\u000a
p710
S'JMP qword ptr [0x00610170]\n'
p711
S'ff 25 aa e7 20 00\n'
p712
S'.plt:00000000004019c0\n'
p713
tp714
sS'emit_ancillary_info'
p715
(S'\n__stdcall emit_ancillary_info()\n'
p716
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x0040a1e0;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("date",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "date";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,0x40b499,uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/",0x40b499);\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x40d569;\u000a  if (__s2 == "date") {\u000a    uVar3 = 0x40b52c;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p717
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x40a1e0\nMOV ESI,0x40b510\nNOP\nMOV EDI,0x40b499\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040207b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00402060\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x40b499\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x40b56f\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40b301\nMOV ECX,0x40b586\nXOR EAX,EAX\nCALL 0x00401a80\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00401a70\nTEST RAX,RAX\nJZ 0x00402104\nMOV ESI,0x40b5ad\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x00401770\nTEST EAX,EAX\nJZ 0x00402104\nXOR EDI,EDI\nMOV ESI,0x40b5b1\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40b499\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a80\nXOR EDI,EDI\nMOV ESI,0x40b5f6\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,RAX\nMOV R14D,0x40b499\nMOV EDI,0x1\nMOV EDX,0x40b586\nMOV ECX,0x40b499\nXOR EAX,EAX\nCALL 0x00401a80\nXOR EDI,EDI\nMOV ESI,0x40b615\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x40b52c\nMOV ECX,0x40d569\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401a80\n'
p718
S'41 56\n53\n50\nbb e0 a1 40 00\nbe 10 b5 40 00\n66 90\nbf 99 b4 40 00\ne8 e6 f8 ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb 99 b4 40 00\n48 0f 45 d8\n31 ff\nbe 6f b5 40 00\nba 05 00 00 00\ne8 84 f7 ff ff\n48 89 c6\nbf 01 00 00 00\nba 01 b3 40 00\nb9 86 b5 40 00\n31 c0\ne8 cb f9 ff ff\nbf 05 00 00 00\n31 f6\ne8 af f9 ff ff\n48 85 c0\n74 3e\nbe ad b5 40 00\nba 03 00 00 00\n48 89 c7\ne8 98 f6 ff ff\n85 c0\n74 28\n31 ff\nbe b1 b5 40 00\nba 05 00 00 00\ne8 33 f7 ff ff\n48 89 c1\nbf 01 00 00 00\nba 99 b4 40 00\n31 c0\n48 89 ce\ne8 7c f9 ff ff\n31 ff\nbe f6 b5 40 00\nba 05 00 00 00\ne8 0b f7 ff ff\n48 89 c6\n41 be 99 b4 40 00\nbf 01 00 00 00\nba 86 b5 40 00\nb9 99 b4 40 00\n31 c0\ne8 4c f9 ff ff\n31 ff\nbe 15 b6 40 00\nba 05 00 00 00\ne8 db f6 ff ff\n48 89 c2\n4c 39 f3\nb8 2c b5 40 00\nb9 69 d5 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 0e f9 ff ff\n'
p719
S'.text:0000000000402050\n.text:0000000000402052\n.text:0000000000402053\n.text:0000000000402054\n.text:0000000000402059\n.text:000000000040205e\n.text:0000000000402060\n.text:0000000000402065\n.text:000000000040206a\n.text:000000000040206c\n.text:000000000040206e\n.text:0000000000402072\n.text:0000000000402076\n.text:0000000000402079\n.text:000000000040207b\n.text:000000000040207f\n.text:0000000000402082\n.text:0000000000402087\n.text:000000000040208b\n.text:000000000040208d\n.text:0000000000402092\n.text:0000000000402097\n.text:000000000040209c\n.text:000000000040209f\n.text:00000000004020a4\n.text:00000000004020a9\n.text:00000000004020ae\n.text:00000000004020b0\n.text:00000000004020b5\n.text:00000000004020ba\n.text:00000000004020bc\n.text:00000000004020c1\n.text:00000000004020c4\n.text:00000000004020c6\n.text:00000000004020cb\n.text:00000000004020d0\n.text:00000000004020d3\n.text:00000000004020d8\n.text:00000000004020da\n.text:00000000004020dc\n.text:00000000004020de\n.text:00000000004020e3\n.text:00000000004020e8\n.text:00000000004020ed\n.text:00000000004020f0\n.text:00000000004020f5\n.text:00000000004020fa\n.text:00000000004020fc\n.text:00000000004020ff\n.text:0000000000402104\n.text:0000000000402106\n.text:000000000040210b\n.text:0000000000402110\n.text:0000000000402115\n.text:0000000000402118\n.text:000000000040211e\n.text:0000000000402123\n.text:0000000000402128\n.text:000000000040212d\n.text:000000000040212f\n.text:0000000000402134\n.text:0000000000402136\n.text:000000000040213b\n.text:0000000000402140\n.text:0000000000402145\n.text:0000000000402148\n.text:000000000040214b\n.text:0000000000402150\n.text:0000000000402155\n.text:0000000000402159\n.text:000000000040215e\n.text:0000000000402160\n.text:0000000000402163\n.text:0000000000402166\n.text:000000000040216a\n.text:000000000040216b\n.text:000000000040216d\n'
p720
tp721
sS'version_etc_va'
p722
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p723
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p724
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x00408660\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x0040866c\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00408681\nINC R9\nCMP R9,0xa\nJC 0x00408640\nMOV R8,RSP\nCALL 0x004082a0\nADD RSP,0x58\nRET\n'
p725
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p726
S'.text:0000000000408630\n.text:0000000000408634\n.text:0000000000408637\n.text:0000000000408640\n.text:0000000000408643\n.text:0000000000408647\n.text:0000000000408649\n.text:000000000040864c\n.text:0000000000408650\n.text:0000000000408654\n.text:0000000000408657\n.text:0000000000408660\n.text:0000000000408664\n.text:0000000000408668\n.text:000000000040866c\n.text:000000000040866f\n.text:0000000000408673\n.text:0000000000408676\n.text:0000000000408678\n.text:000000000040867b\n.text:000000000040867f\n.text:0000000000408681\n.text:0000000000408684\n.text:0000000000408689\n.text:000000000040868d\n'
p727
tp728
sS'xzalloc'
p729
(S'\n__stdcall xzalloc(size_t s)\n'
p730
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p731
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x004087c0\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x004018c0\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p732
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 f4 8f ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p733
S'.text:00000000004088b0\n.text:00000000004088b2\n.text:00000000004088b3\n.text:00000000004088b4\n.text:00000000004088b7\n.text:00000000004088bc\n.text:00000000004088bf\n.text:00000000004088c1\n.text:00000000004088c4\n.text:00000000004088c7\n.text:00000000004088cc\n.text:00000000004088cf\n.text:00000000004088d3\n.text:00000000004088d4\n.text:00000000004088d6\n'
p734
tp735
sS'gettext_quote'
p736
(S'\n__stdcall gettext_quote(char * msgid)\n'
p737
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = \u000a                 "the argument %s lacks a leading \u005c'+\u005c';\u005cnwhen using an option to specify date(s), any non-option\u005cnargument must be a format string beginning with \u005c'+\u005c'"\u000a                 + 0x8f;\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_0040d42c;\u000a        pcVar2 = &DAT_0040d430;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p738
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00401820\nCMP RAX,RBX\nJNZ 0x00407e68\nCALL 0x004098d0\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x00407e70\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00407e18\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40d41c\nMOV EAX,0x40d420\nJMP 0x00407e64\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x00407e70\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00407e56\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40d42c\nMOV EAX,0x40d430\nJMP 0x00407e64\nCMP R14D,0x9\nMOV ECX,0x40cc41\nMOV EAX,0x40b461\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p739
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 57 9a ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 f9 1a 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 1c d4 40 00\nb8 20 d4 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 2c d4 40 00\nb8 30 d4 40 00\neb 0e\n41 83 fe 09\nb9 41 cc 40 00\nb8 61 b4 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p740
S'.text:0000000000407db0\n.text:0000000000407db1\n.text:0000000000407db3\n.text:0000000000407db4\n.text:0000000000407db7\n.text:0000000000407dba\n.text:0000000000407dbc\n.text:0000000000407dc1\n.text:0000000000407dc4\n.text:0000000000407dc9\n.text:0000000000407dcc\n.text:0000000000407dd2\n.text:0000000000407dd7\n.text:0000000000407dda\n.text:0000000000407ddf\n.text:0000000000407de4\n.text:0000000000407de9\n.text:0000000000407def\n.text:0000000000407df5\n.text:0000000000407df8\n.text:0000000000407dfa\n.text:0000000000407dfc\n.text:0000000000407e01\n.text:0000000000407e05\n.text:0000000000407e07\n.text:0000000000407e09\n.text:0000000000407e0c\n.text:0000000000407e11\n.text:0000000000407e16\n.text:0000000000407e18\n.text:0000000000407e1d\n.text:0000000000407e22\n.text:0000000000407e27\n.text:0000000000407e2d\n.text:0000000000407e33\n.text:0000000000407e36\n.text:0000000000407e38\n.text:0000000000407e3a\n.text:0000000000407e3f\n.text:0000000000407e43\n.text:0000000000407e45\n.text:0000000000407e47\n.text:0000000000407e4a\n.text:0000000000407e4f\n.text:0000000000407e54\n.text:0000000000407e56\n.text:0000000000407e5a\n.text:0000000000407e5f\n.text:0000000000407e64\n.text:0000000000407e68\n.text:0000000000407e69\n.text:0000000000407e6b\n.text:0000000000407e6c\n'
p741
tp742
sS'digits_to_date_time'
p743
(S'\n__stdcall digits_to_date_time(parser_control * pc, textint text_int)\n'
p744
V\u000avoid digits_to_date_time(parser_control *pc,textint text_int)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  long lVar3;\u000a  \u000a  if ((((pc->dates_seen != 0) && ((pc->year).digits == 0)) && (pc->rels_seen == false)) &&\u000a     ((pc->times_seen != 0 || (2 < text_int.digits)))) {\u000a    (pc->year).digits = text_int.digits;\u000a    *(undefined4 *)&pc->year = text_int._0_4_;\u000a    *(undefined4 *)&(pc->year).field_0x4 = text_int._4_4_;\u000a    *(undefined4 *)&(pc->year).value = (undefined4)text_int.value;\u000a    *(int *)((long)&(pc->year).value + 4) = text_int.value._4_4_;\u000a    return;\u000a  }\u000a  lVar1 = SUB248(text_int >> 0x40,0);\u000a  lVar2 = (long)text_int.value._4_4_ >> 0x1f;\u000a  if (4 < text_int.digits) {\u000a    pc->dates_seen = pc->dates_seen + 1;\u000a    lVar3 = lVar1 / 100 + lVar2 + SUB168(SEXT816(lVar1) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0);\u000a    pc->day = lVar1 + lVar3 * -100;\u000a    pc->month = lVar3 + (lVar3 / 100 + (lVar3 >> 0x3f) +\u000a                        SUB168(SEXT816(lVar3) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * -100;\u000a    (pc->year).value = lVar1 / 10000 + lVar2;\u000a    (pc->year).digits = text_int.digits - 4;\u000a    return;\u000a  }\u000a  pc->times_seen = pc->times_seen + 1;\u000a  if (text_int.digits < 3) {\u000a    pc->hour = lVar1;\u000a    lVar1 = 0;\u000a  }\u000a  else {\u000a    lVar2 = lVar1 / 100 + lVar2 + SUB168(SEXT816(lVar1) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0);\u000a    pc->hour = lVar2;\u000a    lVar1 = lVar1 + lVar2 * -100;\u000a  }\u000a  pc->minutes = lVar1;\u000a  *(undefined4 *)&(pc->seconds).tv_sec = 0;\u000a  *(undefined4 *)((long)&(pc->seconds).tv_sec + 4) = 0;\u000a  *(undefined4 *)&(pc->seconds).tv_nsec = 0;\u000a  *(undefined4 *)((long)&(pc->seconds).tv_nsec + 4) = 0;\u000a  pc->meridian = 2;\u000a  return;\u000a}\u000a\u000a
p745
S'LEA RAX,[RSP + 0x8]\nCMP qword ptr [0xb0 + RDI],0x0\nJZ 0x00405723\nCMP qword ptr [RDI + 0x38],0x0\nJNZ 0x00405723\nCMP byte ptr [0xa9 + RDI],0x0\nJZ 0x0040580f\nMOV RCX,qword ptr [RAX + 0x8]\nMOV R8,qword ptr [RAX + 0x10]\nCMP R8,0x5\nJC 0x004057bb\nINC qword ptr [0xb0 + RDI]\nMOV R9,-0x5c28f5c28f5c28f5\nMOV RAX,RCX\nIMUL R9\nMOV RSI,RDX\nADD RSI,RCX\nMOV RAX,RSI\nSHR RAX,0x3f\nSAR RSI,0x6\nADD RSI,RAX\nIMUL RAX,RSI,0x64\nMOV RDX,RCX\nSUB RDX,RAX\nMOV qword ptr [RDI + 0x48],RDX\nMOV RAX,RSI\nIMUL R9\nADD RDX,RSI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RAX,RDX,0x64\nSUB RSI,RAX\nMOV qword ptr [RDI + 0x40],RSI\nMOV RDX,0x346dc5d63886594b\nMOV RAX,RCX\nIMUL RDX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0xb\nADD RDX,RAX\nMOV qword ptr [RDI + 0x30],RDX\nADD R8,-0x4\nMOV qword ptr [RDI + 0x38],R8\nRET\nINC qword ptr [0xd0 + RDI]\nCMP R8,0x2\nJA 0x004057d0\nMOV qword ptr [RDI + 0x50],RCX\nXOR ECX,ECX\nJMP 0x004057fc\nMOV RDX,-0x5c28f5c28f5c28f5\nMOV RAX,RCX\nIMUL RDX\nADD RDX,RCX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nMOV qword ptr [RDI + 0x50],RDX\nIMUL RAX,RDX,0x64\nSUB RCX,RAX\nMOV qword ptr [RDI + 0x58],RCX\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RDI + 0x60],XMM0\nMOV dword ptr [RDI + 0x20],0x2\nRET\nCMP qword ptr [0xd0 + RDI],0x0\nJNZ 0x00405824\nCMP qword ptr [RAX + 0x10],0x3\nJC 0x00405723\nMOV RCX,qword ptr [RAX + 0x10]\nMOV qword ptr [RDI + 0x38],RCX\nMOVUPS XMM0,xmmword ptr [RAX]\nMOVUPS xmmword ptr [RDI + 0x28],XMM0\nRET\n'
p746
S'48 8d 44 24 08\n48 83 bf b0 00 00 00 00\n74 14\n48 83 7f 38 00\n75 0d\n80 bf a9 00 00 00 00\n0f 84 ec 00 00 00\n48 8b 48 08\n4c 8b 40 10\n49 83 f8 05\n0f 82 86 00 00 00\n48 ff 87 b0 00 00 00\n49 b9 0b d7 a3 70 3d 0a d7 a3\n48 89 c8\n49 f7 e9\n48 89 d6\n48 01 ce\n48 89 f0\n48 c1 e8 3f\n48 c1 fe 06\n48 01 c6\n48 6b c6 64\n48 89 ca\n48 29 c2\n48 89 57 48\n48 89 f0\n49 f7 e9\n48 01 f2\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b c2 64\n48 29 c6\n48 89 77 40\n48 ba 4b 59 86 38 d6 c5 6d 34\n48 89 c8\n48 f7 ea\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 0b\n48 01 c2\n48 89 57 30\n49 83 c0 fc\n4c 89 47 38\nc3\n48 ff 87 d0 00 00 00\n49 83 f8 02\n77 08\n48 89 4f 50\n31 c9\neb 2c\n48 ba 0b d7 a3 70 3d 0a d7 a3\n48 89 c8\n48 f7 ea\n48 01 ca\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 89 57 50\n48 6b c2 64\n48 29 c1\n48 89 4f 58\n0f 57 c0\n0f 11 47 60\nc7 47 20 02 00 00 00\nc3\n48 83 bf d0 00 00 00 00\n75 0b\n48 83 78 10 03\n0f 82 ff fe ff ff\n48 8b 48 10\n48 89 4f 38\n0f 10 00\n0f 11 47 28\nc3\n'
p747
S'.text:0000000000405700\n.text:0000000000405705\n.text:000000000040570d\n.text:000000000040570f\n.text:0000000000405714\n.text:0000000000405716\n.text:000000000040571d\n.text:0000000000405723\n.text:0000000000405727\n.text:000000000040572b\n.text:000000000040572f\n.text:0000000000405735\n.text:000000000040573c\n.text:0000000000405746\n.text:0000000000405749\n.text:000000000040574c\n.text:000000000040574f\n.text:0000000000405752\n.text:0000000000405755\n.text:0000000000405759\n.text:000000000040575d\n.text:0000000000405760\n.text:0000000000405764\n.text:0000000000405767\n.text:000000000040576a\n.text:000000000040576e\n.text:0000000000405771\n.text:0000000000405774\n.text:0000000000405777\n.text:000000000040577a\n.text:000000000040577e\n.text:0000000000405782\n.text:0000000000405785\n.text:0000000000405789\n.text:000000000040578c\n.text:0000000000405790\n.text:000000000040579a\n.text:000000000040579d\n.text:00000000004057a0\n.text:00000000004057a3\n.text:00000000004057a7\n.text:00000000004057ab\n.text:00000000004057ae\n.text:00000000004057b2\n.text:00000000004057b6\n.text:00000000004057ba\n.text:00000000004057bb\n.text:00000000004057c2\n.text:00000000004057c6\n.text:00000000004057c8\n.text:00000000004057cc\n.text:00000000004057ce\n.text:00000000004057d0\n.text:00000000004057da\n.text:00000000004057dd\n.text:00000000004057e0\n.text:00000000004057e3\n.text:00000000004057e6\n.text:00000000004057ea\n.text:00000000004057ee\n.text:00000000004057f1\n.text:00000000004057f5\n.text:00000000004057f9\n.text:00000000004057fc\n.text:0000000000405800\n.text:0000000000405803\n.text:0000000000405807\n.text:000000000040580e\n.text:000000000040580f\n.text:0000000000405817\n.text:0000000000405819\n.text:000000000040581e\n.text:0000000000405824\n.text:0000000000405828\n.text:000000000040582c\n.text:000000000040582f\n.text:0000000000405833\n'
p748
tp749
sS'fclose'
p750
(S'\n__stdcall fclose(FILE * __stream)\n'
p751
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_00610090)();\u000a  return iVar1;\u000a}\u000a\u000a
p752
S'JMP qword ptr [0x00610090]\n'
p753
S'ff 25 8a e8 20 00\n'
p754
S'.plt:0000000000401800\n'
p755
tp756
sS'__ctype_get_mb_cur_max'
p757
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p758
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_006100a8)();\u000a  return sVar1;\u000a}\u000a\u000a
p759
S'JMP qword ptr [0x006100a8]\n'
p760
S'ff 25 72 e8 20 00\n'
p761
S'.plt:0000000000401830\n'
p762
tp763
sS'quotearg_n_style'
p764
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p765
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p766
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00407ae0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x004078b0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p767
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p768
S'.text:0000000000407aa0\n.text:0000000000407aa1\n.text:0000000000407aa3\n.text:0000000000407aa4\n.text:0000000000407aa8\n.text:0000000000407aab\n.text:0000000000407aad\n.text:0000000000407ab2\n.text:0000000000407ab5\n.text:0000000000407aba\n.text:0000000000407ac1\n.text:0000000000407ac3\n.text:0000000000407ac6\n.text:0000000000407ac9\n.text:0000000000407ace\n.text:0000000000407ad2\n.text:0000000000407ad3\n.text:0000000000407ad5\n.text:0000000000407ad6\n'
p769
tp770
sS'quote_n'
p771
(S'\n__stdcall quote_n(char * arg)\n'
p772
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p773
S'MOV RDX,-0x1\nJMP 0x00407d70\n'
p774
S'48 c7 c2 ff ff ff ff\neb d7\n'
p775
S'.text:0000000000407d90\n.text:0000000000407d97\n'
p776
tp777
sS'quotearg_alloc'
p778
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p779
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p780
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x00407720\n'
p781
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p782
S'.text:0000000000407710\n.text:0000000000407713\n.text:0000000000407715\n.text:0000000000407718\n'
p783
tp784
sS'close_stdout_set_file_name'
p785
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p786
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p787
S'MOV qword ptr [0x00610330],RDI\nRET\n'
p788
S'48 89 3d 19 d6 20 00\nc3\n'
p789
S'.text:0000000000402d10\n.text:0000000000402d17\n'
p790
tp791
sS'time'
p792
(S'\n__stdcall time(time_t * __timer)\n'
p793
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atime_t time(time_t *__timer)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = (*(code *)PTR_time_00610158)();\u000a  return tVar1;\u000a}\u000a\u000a
p794
S'JMP qword ptr [0x00610158]\n'
p795
S'ff 25 c2 e7 20 00\n'
p796
S'.plt:0000000000401990\n'
p797
tp798
sS'__libc_csu_init'
p799
(S'\n__stdcall __libc_csu_init()\n'
p800
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p801
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x60fe08]\nPUSH RBP\nLEA RBP,[0x60fe10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004016e8\nTEST RBP,RBP\nJZ 0x00409c56\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00409c40\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p802
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 f6 61 20 00\n55\n48 8d 2d f6 61 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 b7 7a ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p803
S'.text:0000000000409c00\n.text:0000000000409c02\n.text:0000000000409c04\n.text:0000000000409c07\n.text:0000000000409c09\n.text:0000000000409c0b\n.text:0000000000409c12\n.text:0000000000409c13\n.text:0000000000409c1a\n.text:0000000000409c1b\n.text:0000000000409c1e\n.text:0000000000409c21\n.text:0000000000409c24\n.text:0000000000409c28\n.text:0000000000409c2c\n.text:0000000000409c31\n.text:0000000000409c34\n.text:0000000000409c36\n.text:0000000000409c38\n.text:0000000000409c40\n.text:0000000000409c43\n.text:0000000000409c46\n.text:0000000000409c49\n.text:0000000000409c4d\n.text:0000000000409c51\n.text:0000000000409c54\n.text:0000000000409c56\n.text:0000000000409c5a\n.text:0000000000409c5b\n.text:0000000000409c5c\n.text:0000000000409c5e\n.text:0000000000409c60\n.text:0000000000409c62\n.text:0000000000409c64\n'
p804
tp805
sS'argmatch_to_argument'
p806
(S'\n__stdcall argmatch_to_argument(char * value, char * * arglist, char * vallist, size_t valsize)\n'
p807
V\u000achar * argmatch_to_argument(char *value,char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  \u000a  pcVar2 = *arglist;\u000a  if (pcVar2 != (char *)0x0) {\u000a    arglist = arglist + 1;\u000a    do {\u000a      iVar1 = memcmp(value,vallist,valsize);\u000a      if (iVar1 == 0) {\u000a        return pcVar2;\u000a      }\u000a      pcVar2 = *arglist;\u000a      arglist = arglist + 1;\u000a      vallist = vallist + valsize;\u000a    } while (pcVar2 != (char *)0x0);\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p808
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV R14,RCX\nMOV R12,RDX\nMOV RBX,RSI\nMOV R13,RDI\nMOV R15,qword ptr [RBX]\nTEST R15,R15\nJZ 0x00402cf1\nADD RBX,0x8\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R14\nCALL 0x00401900\nTEST EAX,EAX\nJZ 0x00402cf4\nMOV R15,qword ptr [RBX]\nADD RBX,0x8\nADD R12,R14\nTEST R15,R15\nJNZ 0x00402cd0\nXOR R15D,R15D\nMOV RAX,R15\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p809
S'41 57\n41 56\n41 55\n41 54\n53\n49 89 ce\n49 89 d4\n48 89 f3\n49 89 fd\n4c 8b 3b\n4d 85 ff\n74 34\n48 83 c3 08\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ef\n4c 89 e6\n4c 89 f2\ne8 22 ec ff ff\n85 c0\n74 12\n4c 8b 3b\n48 83 c3 08\n4d 01 f4\n4d 85 ff\n75 df\n45 31 ff\n4c 89 f8\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p810
S'.text:0000000000402ca0\n.text:0000000000402ca2\n.text:0000000000402ca4\n.text:0000000000402ca6\n.text:0000000000402ca8\n.text:0000000000402ca9\n.text:0000000000402cac\n.text:0000000000402caf\n.text:0000000000402cb2\n.text:0000000000402cb5\n.text:0000000000402cb8\n.text:0000000000402cbb\n.text:0000000000402cbd\n.text:0000000000402cc1\n.text:0000000000402cd0\n.text:0000000000402cd3\n.text:0000000000402cd6\n.text:0000000000402cd9\n.text:0000000000402cde\n.text:0000000000402ce0\n.text:0000000000402ce2\n.text:0000000000402ce5\n.text:0000000000402ce9\n.text:0000000000402cec\n.text:0000000000402cef\n.text:0000000000402cf1\n.text:0000000000402cf4\n.text:0000000000402cf7\n.text:0000000000402cf8\n.text:0000000000402cfa\n.text:0000000000402cfc\n.text:0000000000402cfe\n.text:0000000000402d00\n'
p811
tp812
sS'c_isdigit'
p813
(S'\n__stdcall c_isdigit()\n'
p814
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p815
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p816
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p817
S'.text:0000000000409790\n.text:0000000000409793\n.text:0000000000409796\n.text:0000000000409799\n'
p818
tp819
sS'usage'
p820
(S'\n__stdcall usage()\n'
p821
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,\u000a                      "Usage: %s [OPTION]... [+FORMAT]\u005cn  or:  %s [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,program_name,program_name);\u000a    __s = (char *)dcgettext(0,\u000a                            "Display the current time in the given FORMAT, or set the system date.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_mandatory_arg_note();\u000a    __s = (char *)dcgettext(0,\u000a                            "  -d, --date=STRING          display time described by STRING, not \u005c'now\u005c'\u005cn  -f, --file=DATEFILE        like --date; once for each line of DATEFILE\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -I[FMT], --iso-8601[=FMT]  output date/time in ISO 8601 format.\u005cn                               FMT=\u005c'date\u005c' for date only (the default),\u005cn                               \u005c'hours\u005c', \u005c'minutes\u005c', \u005c'seconds\u005c', or \u005c'ns\u005c'\u005cn                               for date and time to the indicated precision.\u005cn                               Example: 2006-08-14T02:34:56-0600\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -R, --rfc-2822             output date and time in RFC 2822 format.\u005cn                               Example: Mon, 14 Aug 2006 02:34:56 -0600\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "      --rfc-3339=FMT         output date/time in RFC 3339 format.\u005cn                               FMT=\u005c'date\u005c', \u005c'seconds\u005c', or \u005c'ns\u005c'\u005cn                               for date and time to the indicated precision.\u005cn                               Example: 2006-08-14 02:34:56-06:00\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -r, --reference=FILE       display the last modification time of FILE\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -s, --set=STRING           set time described by STRING\u005cn  -u, --utc, --universal     print or set Coordinated Universal Time (UTC)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnFORMAT controls the output.  Interpreted sequences are:\u005cn\u005cn  %%   a literal %\u005cn  %a   locale\u005c's abbreviated weekday name (e.g., Sun)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %A   locale\u005c's full weekday name (e.g., Sunday)\u005cn  %b   locale\u005c's abbreviated month name (e.g., Jan)\u005cn  %B   locale\u005c's full month name (e.g., January)\u005cn  %c   locale\u005c's date and time (e.g., Thu Mar  3 23:05:25 2005)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %C   century; like %Y, except omit last two digits (e.g., 20)\u005cn  %d   day of month (e.g., 01)\u005cn  %D   date; same as %m/%d/%y\u005cn  %e   day of month, space padded; same as %_d\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %F   full date; same as %Y-%m-%d\u005cn  %g   last two digits of year of ISO week number (see %G)\u005cn  %G   year of ISO week number (see %V); normally useful only with %V\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %h   same as %b\u005cn  %H   hour (00..23)\u005cn  %I   hour (01..12)\u005cn  %j   day of year (001..366)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %k   hour, space padded ( 0..23); same as %_H\u005cn  %l   hour, space padded ( 1..12); same as %_I\u005cn  %m   month (01..12)\u005cn  %M   minute (00..59)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %n   a newline\u005cn  %N   nanoseconds (000000000..999999999)\u005cn  %p   locale\u005c's equivalent of either AM or PM; blank if not known\u005cn  %P   like %p, but lower case\u005cn  %r   locale\u005c's 12-hour clock time (e.g., 11:11:04 PM)\u005cn  %R   24-hour hour and minute; same as %H:%M\u005cn  %s   seconds since 1970-01-01 00:00:00 UTC\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %S   second (00..60)\u005cn  %t   a tab\u005cn  %T   time; same as %H:%M:%S\u005cn  %u   day of week (1..7); 1 is Monday\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %U   week number of year, with Sunday as first day of week (00..53)\u005cn  %V   ISO week number, with Monday as first day of week (01..53)\u005cn  %w   day of week (0..6); 0 is Sunday\u005cn  %W   week number of year, with Monday as first day of week (00..53)\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %x   locale\u005c's date representation (e.g., 12/31/99)\u005cn  %X   locale\u005c's time representation (e.g., 23:13:48)\u005cn  %y   last two digits of year (00..99)\u005cn  %Y   year\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %z   +hhmm numeric time zone (e.g., -0400)\u005cn  %:z  +hh:mm numeric time zone (e.g., -04:00)\u005cn  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)\u005cn  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)\u005cn  %Z   alphabetic time zone abbreviation (e.g., EDT)\u005cn\u005cnBy default, date pads numeric fields with zeroes.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "The following optional flags may follow \u005c'%\u005c':\u005cn\u005cn  -  (hyphen) do not pad the field\u005cn  _  (underscore) pad with spaces\u005cn  0  (zero) pad with zeros\u005cn  ^  use upper case if possible\u005cn  #  use opposite case if possible\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnAfter any flags comes an optional field width, as a decimal number;\u005cnthen an optional modifier, which is either\u005cnE to use the locale\u005c's alternate representations if available, or\u005cnO to use the locale\u005c's alternate numeric symbols if available.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnExamples:\u005cnConvert seconds since the epoch (1970-01-01 UTC) to a date\u005cn  $ date --date=\u005c'@2147483647\u005c'\u005cn\u005cnShow the time on the west coast of the US (use tzselect(1) to find TZ)\u005cn  $ TZ=\u005c'America/Los_Angeles\u005c' date\u005cn\u005cnShow the local time for 9AM next Friday on the west coast of the US\u005cn  $ date --date=\u005c'TZ=\u005c"America/Los_Angeles\u005c" 09:00 next Fri\u005c'\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p822
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x00401fc9\nXOR EDI,EDI\nMOV ESI,0x40a250\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nMOV RDX,qword ptr [0x00610340]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nMOV RCX,RDX\nCALL 0x00401a80\nXOR EDI,EDI\nMOV ESI,0x40a2aa\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nCALL 0x00402020\nXOR EDI,EDI\nMOV ESI,0x40a2f1\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a384\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a4e2\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a571\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a681\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a6ca\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a750\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a77d\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a7b3\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a836\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a90a\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40a9b7\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40aa5c\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40aab7\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40ab45\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40ac74\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40acde\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40add4\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40ae73\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40afbb\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40b08d\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nXOR EDI,EDI\nMOV ESI,0x40b17d\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nCALL 0x00401910\nCALL 0x00402050\nMOV EDI,EBX\nCALL 0x00401b20\nCALL 0x00401fe0\nMOV EDI,EBX\nCALL 0x00401b20\n'
p823
S'53\n89 fb\n85 db\n0f 85 1e 03 00 00\n31 ff\nbe 50 a2 40 00\nba 05 00 00 00\ne8 64 fb ff ff\n48 89 c1\n48 8b 15 7a e6 20 00\nbf 01 00 00 00\n31 c0\n48 89 ce\n48 89 d1\ne8 a8 fd ff ff\n31 ff\nbe aa a2 40 00\nba 05 00 00 00\ne8 37 fb ff ff\n48 8b 35 f8 e5 20 00\n48 89 c7\ne8 18 fc ff ff\ne8 23 03 00 00\n31 ff\nbe f1 a2 40 00\nba 05 00 00 00\ne8 12 fb ff ff\n48 8b 35 d3 e5 20 00\n48 89 c7\ne8 f3 fb ff ff\n31 ff\nbe 84 a3 40 00\nba 05 00 00 00\ne8 f2 fa ff ff\n48 8b 35 b3 e5 20 00\n48 89 c7\ne8 d3 fb ff ff\n31 ff\nbe e2 a4 40 00\nba 05 00 00 00\ne8 d2 fa ff ff\n48 8b 35 93 e5 20 00\n48 89 c7\ne8 b3 fb ff ff\n31 ff\nbe 71 a5 40 00\nba 05 00 00 00\ne8 b2 fa ff ff\n48 8b 35 73 e5 20 00\n48 89 c7\ne8 93 fb ff ff\n31 ff\nbe 81 a6 40 00\nba 05 00 00 00\ne8 92 fa ff ff\n48 8b 35 53 e5 20 00\n48 89 c7\ne8 73 fb ff ff\n31 ff\nbe ca a6 40 00\nba 05 00 00 00\ne8 72 fa ff ff\n48 8b 35 33 e5 20 00\n48 89 c7\ne8 53 fb ff ff\n31 ff\nbe 50 a7 40 00\nba 05 00 00 00\ne8 52 fa ff ff\n48 8b 35 13 e5 20 00\n48 89 c7\ne8 33 fb ff ff\n31 ff\nbe 7d a7 40 00\nba 05 00 00 00\ne8 32 fa ff ff\n48 8b 35 f3 e4 20 00\n48 89 c7\ne8 13 fb ff ff\n31 ff\nbe b3 a7 40 00\nba 05 00 00 00\ne8 12 fa ff ff\n48 8b 35 d3 e4 20 00\n48 89 c7\ne8 f3 fa ff ff\n31 ff\nbe 36 a8 40 00\nba 05 00 00 00\ne8 f2 f9 ff ff\n48 8b 35 b3 e4 20 00\n48 89 c7\ne8 d3 fa ff ff\n31 ff\nbe 0a a9 40 00\nba 05 00 00 00\ne8 d2 f9 ff ff\n48 8b 35 93 e4 20 00\n48 89 c7\ne8 b3 fa ff ff\n31 ff\nbe b7 a9 40 00\nba 05 00 00 00\ne8 b2 f9 ff ff\n48 8b 35 73 e4 20 00\n48 89 c7\ne8 93 fa ff ff\n31 ff\nbe 5c aa 40 00\nba 05 00 00 00\ne8 92 f9 ff ff\n48 8b 35 53 e4 20 00\n48 89 c7\ne8 73 fa ff ff\n31 ff\nbe b7 aa 40 00\nba 05 00 00 00\ne8 72 f9 ff ff\n48 8b 35 33 e4 20 00\n48 89 c7\ne8 53 fa ff ff\n31 ff\nbe 45 ab 40 00\nba 05 00 00 00\ne8 52 f9 ff ff\n48 8b 35 13 e4 20 00\n48 89 c7\ne8 33 fa ff ff\n31 ff\nbe 74 ac 40 00\nba 05 00 00 00\ne8 32 f9 ff ff\n48 8b 35 f3 e3 20 00\n48 89 c7\ne8 13 fa ff ff\n31 ff\nbe de ac 40 00\nba 05 00 00 00\ne8 12 f9 ff ff\n48 8b 35 d3 e3 20 00\n48 89 c7\ne8 f3 f9 ff ff\n31 ff\nbe d4 ad 40 00\nba 05 00 00 00\ne8 f2 f8 ff ff\n48 8b 35 b3 e3 20 00\n48 89 c7\ne8 d3 f9 ff ff\n31 ff\nbe 73 ae 40 00\nba 05 00 00 00\ne8 d2 f8 ff ff\n48 8b 35 93 e3 20 00\n48 89 c7\ne8 b3 f9 ff ff\n31 ff\nbe bb af 40 00\nba 05 00 00 00\ne8 b2 f8 ff ff\n48 8b 35 73 e3 20 00\n48 89 c7\ne8 93 f9 ff ff\n31 ff\nbe 8d b0 40 00\nba 05 00 00 00\ne8 92 f8 ff ff\n48 8b 35 53 e3 20 00\n48 89 c7\ne8 73 f9 ff ff\n31 ff\nbe 7d b1 40 00\nba 05 00 00 00\ne8 72 f8 ff ff\n48 8b 35 33 e3 20 00\n48 89 c7\ne8 53 f9 ff ff\ne8 8e 00 00 00\n89 df\ne8 57 fb ff ff\ne8 12 00 00 00\n89 df\ne8 4b fb ff ff\n'
p824
S'.text:0000000000401ca0\n.text:0000000000401ca1\n.text:0000000000401ca3\n.text:0000000000401ca5\n.text:0000000000401cab\n.text:0000000000401cad\n.text:0000000000401cb2\n.text:0000000000401cb7\n.text:0000000000401cbc\n.text:0000000000401cbf\n.text:0000000000401cc6\n.text:0000000000401ccb\n.text:0000000000401ccd\n.text:0000000000401cd0\n.text:0000000000401cd3\n.text:0000000000401cd8\n.text:0000000000401cda\n.text:0000000000401cdf\n.text:0000000000401ce4\n.text:0000000000401ce9\n.text:0000000000401cf0\n.text:0000000000401cf3\n.text:0000000000401cf8\n.text:0000000000401cfd\n.text:0000000000401cff\n.text:0000000000401d04\n.text:0000000000401d09\n.text:0000000000401d0e\n.text:0000000000401d15\n.text:0000000000401d18\n.text:0000000000401d1d\n.text:0000000000401d1f\n.text:0000000000401d24\n.text:0000000000401d29\n.text:0000000000401d2e\n.text:0000000000401d35\n.text:0000000000401d38\n.text:0000000000401d3d\n.text:0000000000401d3f\n.text:0000000000401d44\n.text:0000000000401d49\n.text:0000000000401d4e\n.text:0000000000401d55\n.text:0000000000401d58\n.text:0000000000401d5d\n.text:0000000000401d5f\n.text:0000000000401d64\n.text:0000000000401d69\n.text:0000000000401d6e\n.text:0000000000401d75\n.text:0000000000401d78\n.text:0000000000401d7d\n.text:0000000000401d7f\n.text:0000000000401d84\n.text:0000000000401d89\n.text:0000000000401d8e\n.text:0000000000401d95\n.text:0000000000401d98\n.text:0000000000401d9d\n.text:0000000000401d9f\n.text:0000000000401da4\n.text:0000000000401da9\n.text:0000000000401dae\n.text:0000000000401db5\n.text:0000000000401db8\n.text:0000000000401dbd\n.text:0000000000401dbf\n.text:0000000000401dc4\n.text:0000000000401dc9\n.text:0000000000401dce\n.text:0000000000401dd5\n.text:0000000000401dd8\n.text:0000000000401ddd\n.text:0000000000401ddf\n.text:0000000000401de4\n.text:0000000000401de9\n.text:0000000000401dee\n.text:0000000000401df5\n.text:0000000000401df8\n.text:0000000000401dfd\n.text:0000000000401dff\n.text:0000000000401e04\n.text:0000000000401e09\n.text:0000000000401e0e\n.text:0000000000401e15\n.text:0000000000401e18\n.text:0000000000401e1d\n.text:0000000000401e1f\n.text:0000000000401e24\n.text:0000000000401e29\n.text:0000000000401e2e\n.text:0000000000401e35\n.text:0000000000401e38\n.text:0000000000401e3d\n.text:0000000000401e3f\n.text:0000000000401e44\n.text:0000000000401e49\n.text:0000000000401e4e\n.text:0000000000401e55\n.text:0000000000401e58\n.text:0000000000401e5d\n.text:0000000000401e5f\n.text:0000000000401e64\n.text:0000000000401e69\n.text:0000000000401e6e\n.text:0000000000401e75\n.text:0000000000401e78\n.text:0000000000401e7d\n.text:0000000000401e7f\n.text:0000000000401e84\n.text:0000000000401e89\n.text:0000000000401e8e\n.text:0000000000401e95\n.text:0000000000401e98\n.text:0000000000401e9d\n.text:0000000000401e9f\n.text:0000000000401ea4\n.text:0000000000401ea9\n.text:0000000000401eae\n.text:0000000000401eb5\n.text:0000000000401eb8\n.text:0000000000401ebd\n.text:0000000000401ebf\n.text:0000000000401ec4\n.text:0000000000401ec9\n.text:0000000000401ece\n.text:0000000000401ed5\n.text:0000000000401ed8\n.text:0000000000401edd\n.text:0000000000401edf\n.text:0000000000401ee4\n.text:0000000000401ee9\n.text:0000000000401eee\n.text:0000000000401ef5\n.text:0000000000401ef8\n.text:0000000000401efd\n.text:0000000000401eff\n.text:0000000000401f04\n.text:0000000000401f09\n.text:0000000000401f0e\n.text:0000000000401f15\n.text:0000000000401f18\n.text:0000000000401f1d\n.text:0000000000401f1f\n.text:0000000000401f24\n.text:0000000000401f29\n.text:0000000000401f2e\n.text:0000000000401f35\n.text:0000000000401f38\n.text:0000000000401f3d\n.text:0000000000401f3f\n.text:0000000000401f44\n.text:0000000000401f49\n.text:0000000000401f4e\n.text:0000000000401f55\n.text:0000000000401f58\n.text:0000000000401f5d\n.text:0000000000401f5f\n.text:0000000000401f64\n.text:0000000000401f69\n.text:0000000000401f6e\n.text:0000000000401f75\n.text:0000000000401f78\n.text:0000000000401f7d\n.text:0000000000401f7f\n.text:0000000000401f84\n.text:0000000000401f89\n.text:0000000000401f8e\n.text:0000000000401f95\n.text:0000000000401f98\n.text:0000000000401f9d\n.text:0000000000401f9f\n.text:0000000000401fa4\n.text:0000000000401fa9\n.text:0000000000401fae\n.text:0000000000401fb5\n.text:0000000000401fb8\n.text:0000000000401fbd\n.text:0000000000401fc2\n.text:0000000000401fc4\n.text:0000000000401fc9\n.text:0000000000401fce\n.text:0000000000401fd0\n'
p825
tp826
sS'get_stat_ctime_ns'
p827
(S'\n__stdcall get_stat_ctime_ns(stat * st)\n'
p828
V\u000along get_stat_ctime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_ctim).tv_nsec;\u000a}\u000a\u000a
p829
S'MOV RAX,qword ptr [RDI + 0x70]\nRET\n'
p830
S'48 8b 47 70\nc3\n'
p831
S'.text:0000000000408230\n.text:0000000000408234\n'
p832
tp833
sS'quoting_options_from_style'
p834
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p835
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p836
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x00407b2d\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x00401750\n'
p837
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 1e 9c ff ff\n'
p838
S'.text:0000000000407ae0\n.text:0000000000407ae4\n.text:0000000000407ae7\n.text:0000000000407aec\n.text:0000000000407af1\n.text:0000000000407af5\n.text:0000000000407afd\n.text:0000000000407b00\n.text:0000000000407b02\n.text:0000000000407b04\n.text:0000000000407b08\n.text:0000000000407b0b\n.text:0000000000407b0f\n.text:0000000000407b14\n.text:0000000000407b19\n.text:0000000000407b1d\n.text:0000000000407b21\n.text:0000000000407b25\n.text:0000000000407b28\n.text:0000000000407b2c\n.text:0000000000407b2d\n'
p839
tp840
sS'strcpy'
p841
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p842
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_00610060)();\u000a  return pcVar1;\u000a}\u000a\u000a
p843
S'JMP qword ptr [0x00610060]\n'
p844
S'ff 25 ba e8 20 00\n'
p845
S'.plt:00000000004017a0\n'
p846
tp847
sS'get_stat_mtime_ns'
p848
(S'\n__stdcall get_stat_mtime_ns(stat * st)\n'
p849
V\u000along get_stat_mtime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_mtim).tv_nsec;\u000a}\u000a\u000a
p850
S'MOV RAX,qword ptr [RDI + 0x60]\nRET\n'
p851
S'48 8b 47 60\nc3\n'
p852
S'.text:0000000000408240\n.text:0000000000408244\n'
p853
tp854
sS'get_stat_atime_ns'
p855
(S'\n__stdcall get_stat_atime_ns(stat * st)\n'
p856
V\u000along get_stat_atime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_atim).tv_nsec;\u000a}\u000a\u000a
p857
S'MOV RAX,qword ptr [RDI + 0x50]\nRET\n'
p858
S'48 8b 47 50\nc3\n'
p859
S'.text:0000000000408220\n.text:0000000000408224\n'
p860
tp861
sS'c_isgraph'
p862
(S'\n__stdcall c_isgraph()\n'
p863
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p864
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p865
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p866
S'.text:00000000004097a0\n.text:00000000004097a3\n.text:00000000004097a6\n.text:00000000004097a9\n'
p867
tp868
sS'quotearg_buffer_restyled'
p869
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p870
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_00406b5c_caseD_7;\u000a  case 2:\u000a    goto switchD_00406b5c_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_00406b5c_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_00406b5c_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_00406b5c_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote(\u000a                             "the argument %s lacks a leading \u005c'+\u005c';\u005cnwhen using an option to specify date(s), any non-option\u005cnargument must be a format string beginning with \u005c'+\u005c'"\u000a                             + 0x8f);\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_00406b5c_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_00406b5c_caseD_7;\u000aswitchD_00406b5c_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_00406b5c_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = \u000a             "the argument %s lacks a leading \u005c'+\u005c';\u005cnwhen using an option to specify date(s), any non-option\u005cnargument must be a format string beginning with \u005c'+\u005c'"\u000a             + 0x8f;\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_00406b5c_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_00407620;\u000aLAB_00406d40:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_00407629:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_00407638:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_00406d4b:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_00406d8f:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_00406d8f;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_00407638;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_00407565;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x00407470;\u000a    }\u000a    goto LAB_00407638;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_0040759a;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_00407638;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_004075c9;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00407088;\u000a  case '\u005ca':\u000a    goto joined_r0x00406f78;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x00406f78;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_00406da6_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x00406f78;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x00406f78;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_00406da6_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x00406f78:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_004074de;\u000a    }\u000a    goto LAB_00407638;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_00407638;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_00407638;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_00407638;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_00407638;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_00407638;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_00406da6_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00407536;\u000a      goto joined_r0x00407528;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00407031:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00407528;\u000a      goto LAB_00407536;\u000a    }\u000a    goto LAB_00407638;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_00407638;\u000a  }\u000a  goto joined_r0x00407470;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_0040759a:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_004075c9;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_004075c9:\u000a  if (1 < uVar10) {\u000aLAB_004070a6:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_00407162;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00407031;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_00407162:\u000a        if (bVar6 != 0) goto LAB_00407638;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00407088:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_004070a6;\u000ajoined_r0x00407470:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x00407470:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_00407497;\u000aLAB_004074d0:\u000a    if (bVar22) goto LAB_004074d5;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_004074d0;\u000aLAB_00407497:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_004074d5:\u000a      if (bVar6 != 0) goto LAB_00407638;\u000aLAB_004074de:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00407528;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00407536:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00407528:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_00407565:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_00406d40;\u000aLAB_00407620:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_00407629;\u000a  goto LAB_00406d4b;\u000a}\u000a\u000a
p871
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401830\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00407705\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x40cef0 + RAX*0x8]\nMOV EDI,0x40d414\nMOV ESI,R15D\nCALL 0x00407db0\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x40b461\nMOV ESI,R15D\nCALL 0x00407db0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x00406bbd\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x00406bc0\nNOP\nCMP R12,RSI\nJNC 0x00406bae\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x00406ba0\nJMP 0x00406bc0\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401840\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x00406c8c\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x00406c8c\nMOV ECX,0x40cc41\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x00406c86\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x00406c27\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x00406c54\nTEST RSI,RSI\nJZ 0x00406c41\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x40b461\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x00406c62\nMOV ECX,0x40b461\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x00406c8c\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x004076dc\nMOV ECX,0x40cc41\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x00407620\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x00407629\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x00406d8f\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x00406d8a\nCMP R11,-0x1\nJNZ 0x00406d8a\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401840\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x00406de0\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x0040703c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x40cf48 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x00407638\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x00407490\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x00407497\nJMP 0x004074d0\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x00401900\nTEST EAX,EAX\nSETZ AL\nJNZ 0x00406e2d\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00406d91\nJMP 0x00407638\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00406d91\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x00406dbb\nCMP EBX,0x2\nJNZ 0x00406dbb\nTEST R13,R13\nJNZ 0x00406dbb\nJMP 0x00407638\nCMP R11,-0x1\nJZ 0x00407213\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00407233\nJMP 0x00406dbb\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00407244\nTEST R8B,R8B\nJNZ 0x00407638\nCMP EBX,0x2\nJNZ 0x00406ee8\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00406ee8\nCMP R12,RSI\nJNC 0x00406ec3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00406ed2\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00406ee1\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00406ef2\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x004073b8\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x004073b8\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x004073b8\nCMP RCX,RSI\nJNC 0x00406f2c\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x00406f3b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00406dc6\nJMP 0x00407490\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00406db9\nJMP 0x00406f9a\nMOV DL,0x74\nJMP 0x00406f82\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00406db9\nJMP 0x00406f9a\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00406db9\nJMP 0x00406f9a\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x00407638\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00406db9\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x004074de\nJMP 0x00407638\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x00406db9\nTEST R8B,R8B\nJNZ 0x00407638\nCMP R12,RSI\nJNC 0x00406fca\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00406fd9\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00406fe8\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x00406db9\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x004073cb\nCMP EBX,0x2\nJNZ 0x00406db9\nTEST R8B,R8B\nJZ 0x00406db9\nJMP 0x00407638\nCMP EBX,0x2\nJNZ 0x00407264\nTEST R8B,R8B\nJNZ 0x00407638\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00407536\nJMP 0x00407559\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x00407285\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x00401b80\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00407478\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x00407478\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x00407162\nJMP 0x00407130\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x00407119\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x00407116\nCMP R12,RSI\nJNC 0x004070fb\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x0040710a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x00407150\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x00407150\nTEST BPL,0x1\nJZ 0x004071f3\nCMP R12,RSI\nJNC 0x00407144\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x004071f3\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00407130\nTEST R8B,R8B\nJNZ 0x00407638\nCMP EBX,0x2\nJNZ 0x004071aa\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x004071aa\nCMP R12,RSI\nJNC 0x00407182\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00407191\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004071a0\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x004071b4\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004071cb\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004071e5\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x004070e0\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00407536\nJMP 0x00407559\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x00406dbb\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x00406dbb\nJMP 0x00407638\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x00407565\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00406dc6\nJMP 0x00407490\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00406f82\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00407536\nJMP 0x00407559\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x004072a7\nMOV RDI,R10\nCALL 0x00401840\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x00401860\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040757f\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x00407577\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00407586\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x0040736e\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x00407366\nBT RDI,RDX\nJC 0x004076d2\nINC RCX\nCMP RCX,R14\nJC 0x00407350\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x00401b60\nTEST EAX,EAX\nJNZ 0x00407383\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x00401b50\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x004072c5\nJMP 0x004075c9\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00406dc6\nJMP 0x00407490\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x00406db9\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x00406db9\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x00406db9\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x00406dbb\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00407602\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x00407638\nCMP R12,RSI\nJNC 0x0040742e\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x00407441\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00407450\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x0040745f\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00406dc6\nJMP 0x00407490\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00406dc6\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x004074d0\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x004074d5\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00407530\nJMP 0x004074d5\nTEST BPL,BPL\nJZ 0x00407530\nTEST R8B,R8B\nJNZ 0x00407638\nCMP EBX,0x2\nJNZ 0x00407518\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00407518\nCMP R12,RSI\nJNC 0x004074f3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00407502\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00407511\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00407522\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x00407562\nJMP 0x0040755e\nTEST DIL,0x1\nJZ 0x00407559\nAND AL,0x1\nJNZ 0x00407559\nCMP R12,RSI\nJNC 0x00407544\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00407553\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x00407562\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x00407620\nJMP 0x00406d40\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x004075c4\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x004075bc\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x004075f8\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x0040759a\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x004075c9\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00407088\nJMP 0x004070a6\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x004075c9\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00406dc6\nJMP 0x00407490\nCMP R13,R11\nJNZ 0x00406d4b\nTEST R8B,R8B\nJZ 0x00407692\nCMP EBX,0x2\nJNZ 0x00407692\nTEST R12,R12\nJNZ 0x00407692\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x00406ad0\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x004076c6\nTEST R8B,R8B\nJNZ 0x004076c6\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x004076c6\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x004076b9\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x004076b0\nCMP R12,RSI\nJNC 0x0040767d\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x0040767d\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x00407638\nTEST RSI,RSI\nJZ 0x004076e9\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x40cc41\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x00406c8c\nCALL 0x00401750\n'
p872
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 32 ad ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 f0 ce 40 00\nbf 14 d4 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf 61 b4 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 73 ac ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 41 cc 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 61 b4 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 61 b4 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 41 cc 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 d3 aa ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd 48 cf 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 07 ab ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 27 ab ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 a1 a5 ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 73 a5 ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 e9 a7 ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 b2 a7 ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 41 cc 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 46 a0 ff ff\n'
p873
S'.text:0000000000406ad0\n.text:0000000000406ad1\n.text:0000000000406ad3\n.text:0000000000406ad5\n.text:0000000000406ad7\n.text:0000000000406ad9\n.text:0000000000406ada\n.text:0000000000406ae1\n.text:0000000000406ae4\n.text:0000000000406ae7\n.text:0000000000406aea\n.text:0000000000406aef\n.text:0000000000406af4\n.text:0000000000406af9\n.text:0000000000406afe\n.text:0000000000406b06\n.text:0000000000406b0a\n.text:0000000000406b10\n.text:0000000000406b18\n.text:0000000000406b1d\n.text:0000000000406b25\n.text:0000000000406b2a\n.text:0000000000406b2e\n.text:0000000000406b30\n.text:0000000000406b33\n.text:0000000000406b36\n.text:0000000000406b39\n.text:0000000000406b3e\n.text:0000000000406b41\n.text:0000000000406b44\n.text:0000000000406b47\n.text:0000000000406b4a\n.text:0000000000406b4c\n.text:0000000000406b4f\n.text:0000000000406b54\n.text:0000000000406b57\n.text:0000000000406b5c\n.text:0000000000406b63\n.text:0000000000406b68\n.text:0000000000406b6b\n.text:0000000000406b70\n.text:0000000000406b75\n.text:0000000000406b7a\n.text:0000000000406b7d\n.text:0000000000406b82\n.text:0000000000406b87\n.text:0000000000406b8c\n.text:0000000000406b8e\n.text:0000000000406b90\n.text:0000000000406b95\n.text:0000000000406b97\n.text:0000000000406b9a\n.text:0000000000406b9c\n.text:0000000000406b9e\n.text:0000000000406ba0\n.text:0000000000406ba3\n.text:0000000000406ba5\n.text:0000000000406baa\n.text:0000000000406bae\n.text:0000000000406bb4\n.text:0000000000406bb7\n.text:0000000000406bb9\n.text:0000000000406bbb\n.text:0000000000406bbd\n.text:0000000000406bc0\n.text:0000000000406bc5\n.text:0000000000406bc8\n.text:0000000000406bcd\n.text:0000000000406bd2\n.text:0000000000406bd5\n.text:0000000000406bd8\n.text:0000000000406bdb\n.text:0000000000406bde\n.text:0000000000406be3\n.text:0000000000406be6\n.text:0000000000406be9\n.text:0000000000406bee\n.text:0000000000406bf1\n.text:0000000000406bf3\n.text:0000000000406bf6\n.text:0000000000406bf8\n.text:0000000000406bfa\n.text:0000000000406bfd\n.text:0000000000406c02\n.text:0000000000406c07\n.text:0000000000406c0c\n.text:0000000000406c0f\n.text:0000000000406c15\n.text:0000000000406c17\n.text:0000000000406c1a\n.text:0000000000406c1d\n.text:0000000000406c20\n.text:0000000000406c22\n.text:0000000000406c24\n.text:0000000000406c27\n.text:0000000000406c2a\n.text:0000000000406c2f\n.text:0000000000406c32\n.text:0000000000406c34\n.text:0000000000406c37\n.text:0000000000406c39\n.text:0000000000406c3e\n.text:0000000000406c41\n.text:0000000000406c46\n.text:0000000000406c4c\n.text:0000000000406c52\n.text:0000000000406c54\n.text:0000000000406c59\n.text:0000000000406c5f\n.text:0000000000406c62\n.text:0000000000406c65\n.text:0000000000406c68\n.text:0000000000406c6a\n.text:0000000000406c6f\n.text:0000000000406c72\n.text:0000000000406c78\n.text:0000000000406c7d\n.text:0000000000406c83\n.text:0000000000406c86\n.text:0000000000406c89\n.text:0000000000406c8c\n.text:0000000000406c94\n.text:0000000000406c96\n.text:0000000000406c98\n.text:0000000000406c9b\n.text:0000000000406c9f\n.text:0000000000406ca1\n.text:0000000000406ca4\n.text:0000000000406ca8\n.text:0000000000406caa\n.text:0000000000406cad\n.text:0000000000406cb0\n.text:0000000000406cb3\n.text:0000000000406cb5\n.text:0000000000406cb9\n.text:0000000000406cbb\n.text:0000000000406cbf\n.text:0000000000406cc2\n.text:0000000000406cc5\n.text:0000000000406cc8\n.text:0000000000406cca\n.text:0000000000406cce\n.text:0000000000406cd7\n.text:0000000000406cda\n.text:0000000000406cdc\n.text:0000000000406ce0\n.text:0000000000406ce2\n.text:0000000000406ce6\n.text:0000000000406ce8\n.text:0000000000406ceb\n.text:0000000000406cef\n.text:0000000000406cf1\n.text:0000000000406cf4\n.text:0000000000406cf8\n.text:0000000000406cfd\n.text:0000000000406d00\n.text:0000000000406d04\n.text:0000000000406d0c\n.text:0000000000406d0f\n.text:0000000000406d12\n.text:0000000000406d14\n.text:0000000000406d18\n.text:0000000000406d1b\n.text:0000000000406d1d\n.text:0000000000406d22\n.text:0000000000406d26\n.text:0000000000406d2b\n.text:0000000000406d30\n.text:0000000000406d34\n.text:0000000000406d3a\n.text:0000000000406d40\n.text:0000000000406d45\n.text:0000000000406d4b\n.text:0000000000406d50\n.text:0000000000406d52\n.text:0000000000406d57\n.text:0000000000406d5b\n.text:0000000000406d5d\n.text:0000000000406d61\n.text:0000000000406d63\n.text:0000000000406d65\n.text:0000000000406d68\n.text:0000000000406d6d\n.text:0000000000406d6f\n.text:0000000000406d74\n.text:0000000000406d79\n.text:0000000000406d7d\n.text:0000000000406d82\n.text:0000000000406d87\n.text:0000000000406d8a\n.text:0000000000406d8d\n.text:0000000000406d8f\n.text:0000000000406d91\n.text:0000000000406d96\n.text:0000000000406d9a\n.text:0000000000406da0\n.text:0000000000406da2\n.text:0000000000406da4\n.text:0000000000406da6\n.text:0000000000406dae\n.text:0000000000406db3\n.text:0000000000406db9\n.text:0000000000406dbb\n.text:0000000000406dc0\n.text:0000000000406dc6\n.text:0000000000406dcf\n.text:0000000000406dd5\n.text:0000000000406de0\n.text:0000000000406de2\n.text:0000000000406de5\n.text:0000000000406de9\n.text:0000000000406df1\n.text:0000000000406df4\n.text:0000000000406df9\n.text:0000000000406dfb\n.text:0000000000406dfe\n.text:0000000000406e00\n.text:0000000000406e05\n.text:0000000000406e08\n.text:0000000000406e0d\n.text:0000000000406e10\n.text:0000000000406e15\n.text:0000000000406e19\n.text:0000000000406e1e\n.text:0000000000406e20\n.text:0000000000406e22\n.text:0000000000406e28\n.text:0000000000406e2d\n.text:0000000000406e32\n.text:0000000000406e35\n.text:0000000000406e3a\n.text:0000000000406e3e\n.text:0000000000406e43\n.text:0000000000406e48\n.text:0000000000406e4a\n.text:0000000000406e4c\n.text:0000000000406e51\n.text:0000000000406e53\n.text:0000000000406e56\n.text:0000000000406e5c\n.text:0000000000406e5f\n.text:0000000000406e65\n.text:0000000000406e68\n.text:0000000000406e6e\n.text:0000000000406e73\n.text:0000000000406e77\n.text:0000000000406e7d\n.text:0000000000406e80\n.text:0000000000406e83\n.text:0000000000406e87\n.text:0000000000406e8a\n.text:0000000000406e8c\n.text:0000000000406e8f\n.text:0000000000406e95\n.text:0000000000406e9a\n.text:0000000000406e9f\n.text:0000000000406ea5\n.text:0000000000406ea8\n.text:0000000000406eae\n.text:0000000000406eb1\n.text:0000000000406eb3\n.text:0000000000406eb5\n.text:0000000000406eb7\n.text:0000000000406eb9\n.text:0000000000406ebc\n.text:0000000000406ebe\n.text:0000000000406ec3\n.text:0000000000406ec8\n.text:0000000000406ecb\n.text:0000000000406ecd\n.text:0000000000406ed2\n.text:0000000000406ed7\n.text:0000000000406eda\n.text:0000000000406edc\n.text:0000000000406ee1\n.text:0000000000406ee5\n.text:0000000000406ee8\n.text:0000000000406eeb\n.text:0000000000406eed\n.text:0000000000406ef2\n.text:0000000000406ef7\n.text:0000000000406ef9\n.text:0000000000406efc\n.text:0000000000406eff\n.text:0000000000406f05\n.text:0000000000406f09\n.text:0000000000406f0c\n.text:0000000000406f12\n.text:0000000000406f16\n.text:0000000000406f19\n.text:0000000000406f1c\n.text:0000000000406f22\n.text:0000000000406f25\n.text:0000000000406f27\n.text:0000000000406f2c\n.text:0000000000406f31\n.text:0000000000406f34\n.text:0000000000406f36\n.text:0000000000406f3b\n.text:0000000000406f3f\n.text:0000000000406f44\n.text:0000000000406f4a\n.text:0000000000406f4f\n.text:0000000000406f51\n.text:0000000000406f56\n.text:0000000000406f5c\n.text:0000000000406f5e\n.text:0000000000406f60\n.text:0000000000406f62\n.text:0000000000406f64\n.text:0000000000406f69\n.text:0000000000406f6f\n.text:0000000000406f71\n.text:0000000000406f73\n.text:0000000000406f78\n.text:0000000000406f7e\n.text:0000000000406f80\n.text:0000000000406f82\n.text:0000000000406f87\n.text:0000000000406f89\n.text:0000000000406f8f\n.text:0000000000406f94\n.text:0000000000406f9a\n.text:0000000000406f9d\n.text:0000000000406fa0\n.text:0000000000406fa6\n.text:0000000000406fab\n.text:0000000000406fae\n.text:0000000000406fb1\n.text:0000000000406fb7\n.text:0000000000406fba\n.text:0000000000406fc0\n.text:0000000000406fc3\n.text:0000000000406fc5\n.text:0000000000406fca\n.text:0000000000406fcf\n.text:0000000000406fd2\n.text:0000000000406fd4\n.text:0000000000406fd9\n.text:0000000000406fde\n.text:0000000000406fe1\n.text:0000000000406fe3\n.text:0000000000406fe8\n.text:0000000000406fec\n.text:0000000000406fee\n.text:0000000000406ff3\n.text:0000000000406ff6\n.text:0000000000406ff9\n.text:0000000000406fff\n.text:0000000000407002\n.text:0000000000407008\n.text:000000000040700b\n.text:0000000000407011\n.text:0000000000407016\n.text:0000000000407019\n.text:000000000040701f\n.text:0000000000407022\n.text:0000000000407028\n.text:000000000040702b\n.text:000000000040702d\n.text:0000000000407031\n.text:0000000000407037\n.text:000000000040703c\n.text:0000000000407040\n.text:0000000000407049\n.text:000000000040704f\n.text:0000000000407054\n.text:0000000000407059\n.text:000000000040705e\n.text:0000000000407061\n.text:0000000000407066\n.text:0000000000407069\n.text:000000000040706c\n.text:0000000000407071\n.text:0000000000407076\n.text:000000000040707a\n.text:000000000040707f\n.text:0000000000407084\n.text:0000000000407088\n.text:000000000040708a\n.text:000000000040708f\n.text:0000000000407095\n.text:0000000000407098\n.text:000000000040709a\n.text:000000000040709d\n.text:00000000004070a0\n.text:00000000004070a6\n.text:00000000004070ab\n.text:00000000004070ae\n.text:00000000004070b1\n.text:00000000004070b4\n.text:00000000004070b7\n.text:00000000004070b9\n.text:00000000004070bd\n.text:00000000004070bf\n.text:00000000004070c4\n.text:00000000004070c9\n.text:00000000004070cf\n.text:00000000004070e0\n.text:00000000004070e5\n.text:00000000004070e7\n.text:00000000004070ea\n.text:00000000004070ec\n.text:00000000004070ef\n.text:00000000004070f1\n.text:00000000004070f4\n.text:00000000004070f6\n.text:00000000004070fb\n.text:0000000000407100\n.text:0000000000407103\n.text:0000000000407105\n.text:000000000040710a\n.text:000000000040710e\n.text:0000000000407116\n.text:0000000000407119\n.text:000000000040711c\n.text:000000000040711e\n.text:0000000000407122\n.text:0000000000407130\n.text:0000000000407134\n.text:000000000040713a\n.text:000000000040713d\n.text:000000000040713f\n.text:0000000000407144\n.text:0000000000407147\n.text:0000000000407149\n.text:0000000000407150\n.text:0000000000407153\n.text:0000000000407158\n.text:000000000040715b\n.text:0000000000407160\n.text:0000000000407162\n.text:0000000000407165\n.text:000000000040716b\n.text:000000000040716e\n.text:0000000000407170\n.text:0000000000407174\n.text:0000000000407176\n.text:0000000000407178\n.text:000000000040717b\n.text:000000000040717d\n.text:0000000000407182\n.text:0000000000407187\n.text:000000000040718a\n.text:000000000040718c\n.text:0000000000407191\n.text:0000000000407196\n.text:0000000000407199\n.text:000000000040719b\n.text:00000000004071a0\n.text:00000000004071a4\n.text:00000000004071a6\n.text:00000000004071aa\n.text:00000000004071ad\n.text:00000000004071af\n.text:00000000004071b4\n.text:00000000004071b9\n.text:00000000004071bc\n.text:00000000004071be\n.text:00000000004071c1\n.text:00000000004071c4\n.text:00000000004071c7\n.text:00000000004071cb\n.text:00000000004071d0\n.text:00000000004071d3\n.text:00000000004071d5\n.text:00000000004071d8\n.text:00000000004071db\n.text:00000000004071de\n.text:00000000004071e1\n.text:00000000004071e5\n.text:00000000004071e9\n.text:00000000004071ed\n.text:00000000004071f1\n.text:00000000004071f3\n.text:00000000004071f7\n.text:00000000004071fa\n.text:0000000000407200\n.text:0000000000407204\n.text:0000000000407208\n.text:000000000040720e\n.text:0000000000407213\n.text:0000000000407216\n.text:0000000000407219\n.text:000000000040721e\n.text:0000000000407221\n.text:0000000000407223\n.text:0000000000407226\n.text:000000000040722d\n.text:0000000000407233\n.text:0000000000407235\n.text:0000000000407239\n.text:000000000040723f\n.text:0000000000407244\n.text:0000000000407249\n.text:000000000040724f\n.text:0000000000407252\n.text:0000000000407254\n.text:0000000000407259\n.text:000000000040725f\n.text:0000000000407264\n.text:0000000000407266\n.text:000000000040726b\n.text:0000000000407271\n.text:0000000000407273\n.text:0000000000407276\n.text:000000000040727a\n.text:0000000000407280\n.text:0000000000407285\n.text:0000000000407291\n.text:0000000000407295\n.text:0000000000407297\n.text:000000000040729a\n.text:000000000040729f\n.text:00000000004072a4\n.text:00000000004072a7\n.text:00000000004072ab\n.text:00000000004072b0\n.text:00000000004072b2\n.text:00000000004072b6\n.text:00000000004072b8\n.text:00000000004072c0\n.text:00000000004072c5\n.text:00000000004072ca\n.text:00000000004072ce\n.text:00000000004072d2\n.text:00000000004072da\n.text:00000000004072dd\n.text:00000000004072e2\n.text:00000000004072e5\n.text:00000000004072e8\n.text:00000000004072ed\n.text:00000000004072f0\n.text:00000000004072f3\n.text:00000000004072f9\n.text:00000000004072fd\n.text:0000000000407307\n.text:000000000040730d\n.text:0000000000407311\n.text:0000000000407316\n.text:000000000040731c\n.text:0000000000407320\n.text:0000000000407323\n.text:0000000000407327\n.text:0000000000407329\n.text:000000000040732e\n.text:0000000000407333\n.text:0000000000407337\n.text:0000000000407339\n.text:000000000040733e\n.text:0000000000407343\n.text:0000000000407347\n.text:000000000040734c\n.text:0000000000407350\n.text:0000000000407354\n.text:0000000000407357\n.text:000000000040735a\n.text:000000000040735c\n.text:0000000000407360\n.text:0000000000407366\n.text:0000000000407369\n.text:000000000040736c\n.text:000000000040736e\n.text:0000000000407372\n.text:0000000000407377\n.text:0000000000407379\n.text:000000000040737b\n.text:0000000000407383\n.text:0000000000407388\n.text:000000000040738b\n.text:0000000000407393\n.text:0000000000407396\n.text:0000000000407399\n.text:000000000040739e\n.text:00000000004073a1\n.text:00000000004073a3\n.text:00000000004073a8\n.text:00000000004073ad\n.text:00000000004073b3\n.text:00000000004073b8\n.text:00000000004073bb\n.text:00000000004073c0\n.text:00000000004073c6\n.text:00000000004073cb\n.text:00000000004073d0\n.text:00000000004073d6\n.text:00000000004073da\n.text:00000000004073dd\n.text:00000000004073e3\n.text:00000000004073e9\n.text:00000000004073ef\n.text:00000000004073f4\n.text:00000000004073f6\n.text:00000000004073f9\n.text:00000000004073ff\n.text:0000000000407403\n.text:0000000000407405\n.text:000000000040740f\n.text:0000000000407413\n.text:0000000000407419\n.text:000000000040741c\n.text:000000000040741e\n.text:0000000000407424\n.text:0000000000407427\n.text:0000000000407429\n.text:000000000040742e\n.text:0000000000407433\n.text:0000000000407436\n.text:000000000040743a\n.text:000000000040743c\n.text:0000000000407441\n.text:0000000000407446\n.text:0000000000407449\n.text:000000000040744b\n.text:0000000000407450\n.text:0000000000407455\n.text:0000000000407458\n.text:000000000040745a\n.text:000000000040745f\n.text:0000000000407463\n.text:0000000000407465\n.text:0000000000407468\n.text:000000000040746b\n.text:0000000000407470\n.text:0000000000407476\n.text:0000000000407478\n.text:000000000040747d\n.text:0000000000407482\n.text:0000000000407488\n.text:0000000000407490\n.text:0000000000407495\n.text:0000000000407497\n.text:000000000040749c\n.text:000000000040749f\n.text:00000000004074a1\n.text:00000000004074a4\n.text:00000000004074a6\n.text:00000000004074a9\n.text:00000000004074ac\n.text:00000000004074af\n.text:00000000004074b1\n.text:00000000004074b9\n.text:00000000004074bc\n.text:00000000004074be\n.text:00000000004074c0\n.text:00000000004074d0\n.text:00000000004074d3\n.text:00000000004074d5\n.text:00000000004074d8\n.text:00000000004074de\n.text:00000000004074e1\n.text:00000000004074e3\n.text:00000000004074e5\n.text:00000000004074e7\n.text:00000000004074e9\n.text:00000000004074ec\n.text:00000000004074ee\n.text:00000000004074f3\n.text:00000000004074f8\n.text:00000000004074fb\n.text:00000000004074fd\n.text:0000000000407502\n.text:0000000000407507\n.text:000000000040750a\n.text:000000000040750c\n.text:0000000000407511\n.text:0000000000407515\n.text:0000000000407518\n.text:000000000040751b\n.text:000000000040751d\n.text:0000000000407522\n.text:0000000000407525\n.text:0000000000407528\n.text:000000000040752a\n.text:0000000000407530\n.text:0000000000407534\n.text:0000000000407536\n.text:0000000000407538\n.text:000000000040753a\n.text:000000000040753d\n.text:000000000040753f\n.text:0000000000407544\n.text:0000000000407549\n.text:000000000040754c\n.text:000000000040754e\n.text:0000000000407553\n.text:0000000000407557\n.text:0000000000407559\n.text:000000000040755c\n.text:000000000040755e\n.text:0000000000407562\n.text:0000000000407565\n.text:0000000000407568\n.text:000000000040756c\n.text:0000000000407572\n.text:0000000000407577\n.text:000000000040757f\n.text:0000000000407584\n.text:0000000000407586\n.text:000000000040758e\n.text:0000000000407593\n.text:0000000000407595\n.text:000000000040759a\n.text:000000000040759f\n.text:00000000004075a3\n.text:00000000004075a5\n.text:00000000004075aa\n.text:00000000004075ad\n.text:00000000004075b0\n.text:00000000004075b2\n.text:00000000004075ba\n.text:00000000004075bc\n.text:00000000004075c4\n.text:00000000004075c9\n.text:00000000004075cd\n.text:00000000004075d2\n.text:00000000004075d7\n.text:00000000004075db\n.text:00000000004075e0\n.text:00000000004075e5\n.text:00000000004075e9\n.text:00000000004075ed\n.text:00000000004075f3\n.text:00000000004075f8\n.text:0000000000407600\n.text:0000000000407602\n.text:0000000000407604\n.text:0000000000407608\n.text:000000000040760d\n.text:0000000000407613\n.text:0000000000407620\n.text:0000000000407623\n.text:0000000000407629\n.text:000000000040762c\n.text:000000000040762e\n.text:0000000000407631\n.text:0000000000407633\n.text:0000000000407636\n.text:0000000000407638\n.text:0000000000407640\n.text:0000000000407646\n.text:000000000040764a\n.text:000000000040764d\n.text:0000000000407651\n.text:0000000000407656\n.text:000000000040765a\n.text:000000000040765e\n.text:0000000000407661\n.text:0000000000407664\n.text:0000000000407667\n.text:000000000040766b\n.text:000000000040766f\n.text:0000000000407671\n.text:0000000000407676\n.text:000000000040767a\n.text:000000000040767d\n.text:0000000000407680\n.text:0000000000407687\n.text:0000000000407688\n.text:000000000040768a\n.text:000000000040768c\n.text:000000000040768e\n.text:0000000000407690\n.text:0000000000407691\n.text:0000000000407692\n.text:000000000040769a\n.text:000000000040769d\n.text:000000000040769f\n.text:00000000004076a2\n.text:00000000004076a4\n.text:00000000004076a6\n.text:00000000004076a8\n.text:00000000004076aa\n.text:00000000004076ad\n.text:00000000004076b0\n.text:00000000004076b3\n.text:00000000004076b5\n.text:00000000004076b9\n.text:00000000004076bc\n.text:00000000004076bf\n.text:00000000004076c2\n.text:00000000004076c4\n.text:00000000004076c6\n.text:00000000004076c9\n.text:00000000004076cb\n.text:00000000004076d0\n.text:00000000004076d2\n.text:00000000004076d7\n.text:00000000004076dc\n.text:00000000004076df\n.text:00000000004076e1\n.text:00000000004076e6\n.text:00000000004076e9\n.text:00000000004076ee\n.text:00000000004076f1\n.text:00000000004076f7\n.text:00000000004076fd\n.text:0000000000407700\n.text:0000000000407705\n'
p874
tp875
sS'FUN_00401700'
p876
(S'\n__stdcall FUN_00401700()\n'
p877
V\u000avoid FUN_00401700(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00610010)();\u000a  return;\u000a}\u000a\u000a
p878
S'PUSH qword ptr [0x00610008]\nJMP qword ptr [0x00610010]\n'
p879
S'ff 35 02 e9 20 00\nff 25 04 e9 20 00\n'
p880
S'.plt:0000000000401700\n.plt:0000000000401706\n'
p881
tp882
sS'set_quoting_style'
p883
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p884
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p885
S'TEST RDI,RDI\nMOV EAX,0x610350\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p886
S'48 85 ff\nb8 50 03 61 00\n48 0f 45 c7\n89 30\nc3\n'
p887
S'.text:00000000004069b0\n.text:00000000004069b3\n.text:00000000004069b8\n.text:00000000004069bc\n.text:00000000004069be\n'
p888
tp889
sS'textdomain'
p890
(S'\n__stdcall textdomain()\n'
p891
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_00610088)();\u000a  return;\u000a}\u000a\u000a
p892
S'JMP qword ptr [0x00610088]\n'
p893
S'ff 25 92 e8 20 00\n'
p894
S'.plt:00000000004017f0\n'
p895
tp896
sS'tzfree'
p897
(S'\n__stdcall tzfree(timezone_t tz)\n'
p898
V\u000avoid tzfree(timezone_t tz)\u000a\u000a{\u000a  tm_zone *ptVar1;\u000a  \u000a  if ((timezone_t)0x1 < tz) {\u000a    do {\u000a      ptVar1 = tz->next;\u000a      free(tz);\u000a      tz = (timezone_t)ptVar1;\u000a    } while (ptVar1 != (tm_zone *)0x0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p899
S'PUSH RBX\nCMP RDI,0x2\nJC 0x00409310\nNOP word ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [RDI]\nCALL 0x00401730\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x00409300\nPOP RBX\nRET\n'
p900
S'53\n48 83 ff 02\n72 19\n66 0f 1f 84 00 00 00 00 00\n48 8b 1f\ne8 28 84 ff ff\n48 85 db\n48 89 df\n75 f0\n5b\nc3\n'
p901
S'.text:00000000004092f0\n.text:00000000004092f1\n.text:00000000004092f5\n.text:00000000004092f7\n.text:0000000000409300\n.text:0000000000409303\n.text:0000000000409308\n.text:000000000040930b\n.text:000000000040930e\n.text:0000000000409310\n.text:0000000000409311\n'
p902
tp903
sS'xmemdup'
p904
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p905
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p906
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x004087c0\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401970\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p907
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 4c 90 ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p908
S'.text:0000000000408900\n.text:0000000000408902\n.text:0000000000408904\n.text:0000000000408905\n.text:0000000000408908\n.text:000000000040890b\n.text:000000000040890e\n.text:0000000000408913\n.text:0000000000408916\n.text:0000000000408919\n.text:000000000040891c\n.text:000000000040891f\n.text:0000000000408924\n.text:0000000000408927\n.text:0000000000408928\n.text:000000000040892a\n.text:000000000040892c\n'
p909
tp910
sS'time_t_avg'
p911
(S'\n__stdcall time_t_avg(time_t a, time_t b)\n'
p912
V\u000atime_t time_t_avg(time_t a,time_t b)\u000a\u000a{\u000a  return (ulong)((uint)a & (uint)b & 1) + (b >> 1) + (a >> 1);\u000a}\u000a\u000a
p913
S'MOV RAX,RDI\nSAR RAX,1\nAND EDI,ESI\nSAR RSI,1\nLEA RAX,[RSI + RAX*0x1]\nAND EDI,0x1\nADD RDI,RAX\nMOV RAX,RDI\nRET\n'
p914
S'48 89 f8\n48 d1 f8\n21 f7\n48 d1 fe\n48 8d 04 06\n83 e7 01\n48 01 c7\n48 89 f8\nc3\n'
p915
S'.text:0000000000409240\n.text:0000000000409243\n.text:0000000000409246\n.text:0000000000409248\n.text:000000000040924b\n.text:000000000040924f\n.text:0000000000409252\n.text:0000000000409255\n.text:0000000000409258\n'
p916
tp917
sS'change_env'
p918
(S'\n__stdcall change_env(timezone_t tz)\n'
p919
V\u000a_Bool change_env(timezone_t tz)\u000a\u000a{\u000a  int iVar1;\u000a  char *tz_00;\u000a  \u000a  tz_00 = tz->abbrs;\u000a  if (tz->tz_is_set == 0) {\u000a    tz_00 = (char *)0x0;\u000a  }\u000a  iVar1 = setenv_TZ(tz_00);\u000a  if (iVar1 == 0) {\u000a    tzset();\u000a  }\u000a  return (_Bool)(iVar1 == 0);\u000a}\u000a\u000a
p920
S'PUSH RBX\nXOR EBX,EBX\nCMP byte ptr [RDI + 0x8],0x0\nLEA RDI,[RDI + 0x9]\nCMOVZ RDI,RBX\nCALL 0x004096d0\nTEST EAX,EAX\nJNZ 0x004096bf\nCALL 0x00401980\nMOV BL,0x1\nMOV EAX,EBX\nPOP RBX\nRET\n'
p921
S'53\n31 db\n80 7f 08 00\n48 8d 7f 09\n48 0f 44 fb\ne8 1c 00 00 00\n85 c0\n75 07\ne8 c3 82 ff ff\nb3 01\n89 d8\n5b\nc3\n'
p922
S'.text:00000000004096a0\n.text:00000000004096a1\n.text:00000000004096a3\n.text:00000000004096a7\n.text:00000000004096ab\n.text:00000000004096af\n.text:00000000004096b4\n.text:00000000004096b6\n.text:00000000004096b8\n.text:00000000004096bd\n.text:00000000004096bf\n.text:00000000004096c1\n.text:00000000004096c2\n'
p923
tp924
sS'__stpcpy_chk'
p925
(S'\n__stdcall __stpcpy_chk()\n'
p926
V\u000avoid __stpcpy_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___stpcpy_chk_00610168)();\u000a  return;\u000a}\u000a\u000a
p927
S'JMP qword ptr [0x00610168]\n'
p928
S'ff 25 b2 e7 20 00\n'
p929
S'.plt:00000000004019b0\n'
p930
tp931
sS'get_quoting_style'
p932
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p933
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p934
S'TEST RDI,RDI\nMOV EAX,0x610350\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p935
S'48 85 ff\nb8 50 03 61 00\n48 0f 45 c7\n8b 00\nc3\n'
p936
S'.text:00000000004069a0\n.text:00000000004069a3\n.text:00000000004069a8\n.text:00000000004069ac\n.text:00000000004069ae\n'
p937
tp938
sS'ferror_unlocked'
p939
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p940
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_00610120)();\u000a  return iVar1;\u000a}\u000a\u000a
p941
S'JMP qword ptr [0x00610120]\n'
p942
S'ff 25 fa e7 20 00\n'
p943
S'.plt:0000000000401920\n'
p944
tp945
sS'exit'
p946
(S'\n__stdcall exit(int __status)\n'
p947
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00610220)();\u000a  return;\u000a}\u000a\u000a
p948
S'JMP qword ptr [0x00610220]\n'
p949
S'ff 25 fa e6 20 00\n'
p950
S'.plt:0000000000401b20\n'
p951
tp952
sS'fwrite_lowcase'
p953
(S'\n__stdcall fwrite_lowcase(FILE * fp, char * src, size_t len)\n'
p954
V\u000avoid fwrite_lowcase(FILE *fp,char *src,size_t len)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  if (len != 0) {\u000a    do {\u000a      pp_Var1 = __ctype_tolower_loc();\u000a      fputc((*pp_Var1)[(ulong)(byte)*src],(FILE *)fp);\u000a      src = (char *)((byte *)src + 1);\u000a      len = len - 1;\u000a    } while (len != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p955
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV R15,RDI\nTEST R14,R14\nJZ 0x004045ce\nNOP dword ptr CS:[RAX + RAX*0x1]\nCALL 0x00401b70\nMOV RAX,qword ptr [RAX]\nMOVZX ECX,byte ptr [RBX]\nMOV EDI,dword ptr [RAX + RCX*0x4]\nMOV RSI,R15\nCALL 0x004018f0\nINC RBX\nDEC R14\nJNZ 0x004045b0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p956
S'41 57\n41 56\n53\n49 89 d6\n48 89 f3\n49 89 ff\n4d 85 f6\n74 2b\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\ne8 bb d5 ff ff\n48 8b 00\n0f b6 0b\n8b 3c 88\n4c 89 fe\ne8 2a d3 ff ff\n48 ff c3\n49 ff ce\n75 e2\n5b\n41 5e\n41 5f\nc3\n'
p957
S'.text:0000000000404590\n.text:0000000000404592\n.text:0000000000404594\n.text:0000000000404595\n.text:0000000000404598\n.text:000000000040459b\n.text:000000000040459e\n.text:00000000004045a1\n.text:00000000004045a3\n.text:00000000004045b0\n.text:00000000004045b5\n.text:00000000004045b8\n.text:00000000004045bb\n.text:00000000004045be\n.text:00000000004045c1\n.text:00000000004045c6\n.text:00000000004045c9\n.text:00000000004045cc\n.text:00000000004045ce\n.text:00000000004045cf\n.text:00000000004045d1\n.text:00000000004045d3\n'
p958
tp959
sS'locale_charset'
p960
(S'\n__stdcall locale_charset()\n'
p961
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_0040994d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_0040994d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p962
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x00401a10\nTEST RAX,RAX\nMOV R14D,0x40d569\nCMOVNZ R14,RAX\nCALL 0x00409960\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00409925\nJMP 0x0040994d\nMOV RDI,RBX\nCALL 0x00401840\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401840\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x0040994d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x00409940\nCMP BPL,0x2a\nJNZ 0x00409900\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00409900\nMOV RDI,RBX\nCALL 0x00401840\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x40dbf0\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p963
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 32 81 ff ff\n48 85 c0\n41 be 69 d5 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 38 7f ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 2a 7f ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 20 80 ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 f8 7e ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 f0 db 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p964
S'.text:00000000004098d0\n.text:00000000004098d1\n.text:00000000004098d3\n.text:00000000004098d4\n.text:00000000004098d9\n.text:00000000004098de\n.text:00000000004098e1\n.text:00000000004098e7\n.text:00000000004098eb\n.text:00000000004098f0\n.text:00000000004098f3\n.text:00000000004098f6\n.text:00000000004098f9\n.text:00000000004098fb\n.text:0000000000409900\n.text:0000000000409903\n.text:0000000000409908\n.text:000000000040990c\n.text:0000000000409911\n.text:0000000000409916\n.text:000000000040991b\n.text:0000000000409920\n.text:0000000000409923\n.text:0000000000409925\n.text:0000000000409928\n.text:000000000040992b\n.text:0000000000409930\n.text:0000000000409932\n.text:0000000000409934\n.text:0000000000409938\n.text:000000000040993a\n.text:000000000040993e\n.text:0000000000409940\n.text:0000000000409943\n.text:0000000000409948\n.text:000000000040994d\n.text:0000000000409951\n.text:0000000000409956\n.text:000000000040995a\n.text:000000000040995b\n.text:000000000040995d\n.text:000000000040995e\n'
p965
tp966
sS'set_program_name'
p967
(S'\n__stdcall set_program_name(char * argv0)\n'
p968
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p969
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00406931\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x00401880\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x0040691b\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x40ced8\nMOV EDX,0x7\nCALL 0x00401770\nTEST EAX,EAX\nJNZ 0x0040691b\nMOV ESI,0x40cee0\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x00401770\nTEST EAX,EAX\nJNZ 0x00406918\nADD R14,0x3\nMOV qword ptr [0x006102e0],R14\nMOV RBX,R14\nMOV qword ptr [0x00610340],RBX\nMOV qword ptr [0x00610308],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x00610320]\nMOV EDI,0x40cea0\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x00401b30\nCALL 0x00401750\n'
p970
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 b7 af ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe d8 ce 40 00\nba 07 00 00 00\ne8 7d ae ff ff\n85 c0\n75 24\nbe e0 ce 40 00\nba 03 00 00 00\n4c 89 f7\ne8 67 ae ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 c8 99 20 00\n4c 89 f3\n48 89 1d 1e 9a 20 00\n48 89 1d df 99 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d e8 99 20 00\nbf a0 ce 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 e4 b1 ff ff\ne8 ff ad ff ff\n'
p971
S'.text:00000000004068b0\n.text:00000000004068b2\n.text:00000000004068b3\n.text:00000000004068b4\n.text:00000000004068b7\n.text:00000000004068ba\n.text:00000000004068bc\n.text:00000000004068c1\n.text:00000000004068c4\n.text:00000000004068c9\n.text:00000000004068cc\n.text:00000000004068d0\n.text:00000000004068d4\n.text:00000000004068d7\n.text:00000000004068da\n.text:00000000004068de\n.text:00000000004068e0\n.text:00000000004068e4\n.text:00000000004068e9\n.text:00000000004068ee\n.text:00000000004068f3\n.text:00000000004068f5\n.text:00000000004068f7\n.text:00000000004068fc\n.text:0000000000406901\n.text:0000000000406904\n.text:0000000000406909\n.text:000000000040690b\n.text:000000000040690d\n.text:0000000000406911\n.text:0000000000406918\n.text:000000000040691b\n.text:0000000000406922\n.text:0000000000406929\n.text:000000000040692d\n.text:000000000040692e\n.text:0000000000406930\n.text:0000000000406931\n.text:0000000000406938\n.text:000000000040693d\n.text:0000000000406942\n.text:0000000000406947\n.text:000000000040694c\n'
p972
tp973
sS'show_date'
p974
(S'\n__stdcall show_date(char * format, timezone_t tz)\n'
p975
V\u000a_Bool show_date(char *format,timezone_t tz)\u000a\u000a{\u000a  tm *tp;\u000a  undefined8 uVar1;\u000a  char *arg;\u000a  timezone_t tz_00;\u000a  undefined uVar2;\u000a  char buf [21];\u000a  timezone_t local_48 [2];\u000a  char local_38 [32];\u000a  \u000a  local_48[0] = tz;\u000a  tp = localtime((time_t *)local_48);\u000a  if (tp == (tm *)0x0) {\u000a    uVar2 = 0;\u000a    uVar1 = dcgettext(0,"time %s is out of range",5);\u000a    arg = timetostr((intmax_t)local_48[0],local_38);\u000a    arg = quote(arg);\u000a    error(0,0,uVar1,arg);\u000a  }\u000a  else {\u000a    if (format == "%a, %d %b %Y %H:%M:%S %z") {\u000a      setlocale(2,"C");\u000a      fprintftime(stdout,"%a, %d %b %Y %H:%M:%S %z",(tm *)tp,tz_00);\u000a      fputc_unlocked(10,(FILE *)stdout);\u000a      setlocale(2,\u000a                  "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                  + 0xca);\u000a    }\u000a    else {\u000a      fprintftime(stdout,format,(tm *)tp,tz_00);\u000a      fputc_unlocked(10,(FILE *)stdout);\u000a    }\u000a    uVar2 = 1;\u000a  }\u000a  return (_Bool)uVar2;\u000a}\u000a\u000a
p976
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x30\nMOV R14,RCX\nMOV R15,RDI\nMOV qword ptr [RSP],RSI\nMOV qword ptr [RSP + 0x8],RDX\nMOV RDI,RSP\nCALL 0x00401740\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00402912\nMOV EAX,0x40a1c0\nCMP R15,RAX\nJZ 0x00402951\nMOV RDI,qword ptr [0x006102e8]\nMOV R8D,dword ptr [RSP + 0x8]\nMOV RSI,R15\nMOV RDX,RBX\nMOV RCX,R14\nCALL 0x00402df0\nMOV RSI,qword ptr [0x006102e8]\nMOV EDI,0xa\nCALL 0x00401960\nJMP 0x0040299a\nXOR EBX,EBX\nXOR EDI,EDI\nMOV ESI,0x40b6b3\nMOV EDX,0x5\nCALL 0x00401820\nMOV R14,RAX\nMOV RDI,qword ptr [RSP]\nLEA RSI,[RSP + 0x10]\nCALL 0x004029b0\nMOV RDI,RAX\nCALL 0x00407da0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00401ab0\nJMP 0x0040299c\nMOV EDI,0x2\nMOV ESI,0x40ce08\nCALL 0x00401a70\nMOV RDI,qword ptr [0x006102e8]\nMOV R8D,dword ptr [RSP + 0x8]\nMOV RSI,R15\nMOV RDX,RBX\nMOV RCX,R14\nCALL 0x00402df0\nMOV RSI,qword ptr [0x006102e8]\nMOV EDI,0xa\nCALL 0x00401960\nMOV EDI,0x2\nMOV ESI,0x40d569\nCALL 0x00401a70\nMOV BL,0x1\nMOV EAX,EBX\nADD RSP,0x30\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p977
S'41 57\n41 56\n53\n48 83 ec 30\n49 89 ce\n49 89 ff\n48 89 34 24\n48 89 54 24 08\n48 89 e7\ne8 70 ee ff ff\n48 89 c3\n48 85 db\n74 3a\nb8 c0 a1 40 00\n49 39 c7\n74 6f\n48 8b 3d ff d9 20 00\n44 8b 44 24 08\n4c 89 fe\n48 89 da\n4c 89 f1\ne8 f4 04 00 00\n48 8b 35 e5 d9 20 00\nbf 0a 00 00 00\ne8 53 f0 ff ff\ne9 88 00 00 00\n31 db\n31 ff\nbe b3 b6 40 00\nba 05 00 00 00\ne8 fb ee ff ff\n49 89 c6\n48 8b 3c 24\n48 8d 74 24 10\ne8 7a 00 00 00\n48 89 c7\ne8 62 54 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n4c 89 f2\ne8 61 f1 ff ff\neb 4b\nbf 02 00 00 00\nbe 08 ce 40 00\ne8 10 f1 ff ff\n48 8b 3d 81 d9 20 00\n44 8b 44 24 08\n4c 89 fe\n48 89 da\n4c 89 f1\ne8 76 04 00 00\n48 8b 35 67 d9 20 00\nbf 0a 00 00 00\ne8 d5 ef ff ff\nbf 02 00 00 00\nbe 69 d5 40 00\ne8 d6 f0 ff ff\nb3 01\n89 d8\n48 83 c4 30\n5b\n41 5e\n41 5f\nc3\n'
p978
S'.text:00000000004028b0\n.text:00000000004028b2\n.text:00000000004028b4\n.text:00000000004028b5\n.text:00000000004028b9\n.text:00000000004028bc\n.text:00000000004028bf\n.text:00000000004028c3\n.text:00000000004028c8\n.text:00000000004028cb\n.text:00000000004028d0\n.text:00000000004028d3\n.text:00000000004028d6\n.text:00000000004028d8\n.text:00000000004028dd\n.text:00000000004028e0\n.text:00000000004028e2\n.text:00000000004028e9\n.text:00000000004028ee\n.text:00000000004028f1\n.text:00000000004028f4\n.text:00000000004028f7\n.text:00000000004028fc\n.text:0000000000402903\n.text:0000000000402908\n.text:000000000040290d\n.text:0000000000402912\n.text:0000000000402914\n.text:0000000000402916\n.text:000000000040291b\n.text:0000000000402920\n.text:0000000000402925\n.text:0000000000402928\n.text:000000000040292c\n.text:0000000000402931\n.text:0000000000402936\n.text:0000000000402939\n.text:000000000040293e\n.text:0000000000402941\n.text:0000000000402943\n.text:0000000000402945\n.text:0000000000402947\n.text:000000000040294a\n.text:000000000040294f\n.text:0000000000402951\n.text:0000000000402956\n.text:000000000040295b\n.text:0000000000402960\n.text:0000000000402967\n.text:000000000040296c\n.text:000000000040296f\n.text:0000000000402972\n.text:0000000000402975\n.text:000000000040297a\n.text:0000000000402981\n.text:0000000000402986\n.text:000000000040298b\n.text:0000000000402990\n.text:0000000000402995\n.text:000000000040299a\n.text:000000000040299c\n.text:000000000040299e\n.text:00000000004029a2\n.text:00000000004029a3\n.text:00000000004029a5\n.text:00000000004029a7\n'
p979
tp980
sS'quotearg_buffer'
p981
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p982
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p983
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x610350\nCMOVNZ RBP,R8\nCALL 0x00401760\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x00406ad0\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p984
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd 50 03 61 00\n49 0f 45 e8\ne8 e8 ac ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p985
S'.text:0000000000406a50\n.text:0000000000406a51\n.text:0000000000406a53\n.text:0000000000406a55\n.text:0000000000406a57\n.text:0000000000406a59\n.text:0000000000406a5a\n.text:0000000000406a5b\n.text:0000000000406a5e\n.text:0000000000406a61\n.text:0000000000406a64\n.text:0000000000406a67\n.text:0000000000406a6a\n.text:0000000000406a6f\n.text:0000000000406a73\n.text:0000000000406a78\n.text:0000000000406a7b\n.text:0000000000406a7d\n.text:0000000000406a81\n.text:0000000000406a85\n.text:0000000000406a89\n.text:0000000000406a8d\n.text:0000000000406a90\n.text:0000000000406a93\n.text:0000000000406a96\n.text:0000000000406a99\n.text:0000000000406a9c\n.text:0000000000406a9f\n.text:0000000000406aa3\n.text:0000000000406aa4\n.text:0000000000406aa9\n.text:0000000000406aad\n.text:0000000000406ab1\n.text:0000000000406ab3\n.text:0000000000406ab7\n.text:0000000000406ab8\n.text:0000000000406aba\n.text:0000000000406abc\n.text:0000000000406abe\n.text:0000000000406ac0\n.text:0000000000406ac1\n'
p986
tp987
sS'quotearg_colon'
p988
(S'\n__stdcall quotearg_colon(char * arg)\n'
p989
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p990
S'MOV ESI,0x3a\nJMP 0x00407c30\n'
p991
S'be 3a 00 00 00\neb e9\n'
p992
S'.text:0000000000407c40\n.text:0000000000407c45\n'
p993
tp994
sS'get_stat_ctime'
p995
(S'\n__stdcall get_stat_ctime(stat * st)\n'
p996
V\u000atimespec get_stat_ctime(stat *st)\u000a\u000a{\u000a  return st->st_ctim;\u000a}\u000a\u000a
p997
S'MOV RAX,qword ptr [RDI + 0x68]\nMOV RDX,qword ptr [RDI + 0x70]\nRET\n'
p998
S'48 8b 47 68\n48 8b 57 70\nc3\n'
p999
S'.text:0000000000408270\n.text:0000000000408274\n.text:0000000000408278\n'
p1000
tp1001
sS'ydhms_diff'
p1002
(S'\n__stdcall ydhms_diff(long_int year1, long_int yday1, int yday0, int hour0, int min0, int sec0)\n'
p1003
V\u000atime_t ydhms_diff(long_int year1,long_int yday1,int yday0,int hour0,int min0,int sec0)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int in_stack_00000008;\u000a  int in_stack_00000010;\u000a  int in_stack_00000018;\u000a  int in_stack_00000020;\u000a  \u000a  iVar3 = ((int)((ulong)year1 >> 2) + 0x1db) - (uint)((year1 & 3U) == 0);\u000a  iVar1 = ((sec0 >> 2) + 0x1db) - (uint)((sec0 & 3U) == 0);\u000a  iVar4 = iVar3 / 0x19 + (iVar3 >> 0x1f) + (uint)((ulong)((long)iVar3 * 0x51eb851f) >> 0x3f);\u000a  iVar4 = iVar4 - ((uint)(iVar3 + iVar4 * -0x19) >> 0x1f);\u000a  iVar2 = iVar1 / 0x19 + (iVar1 >> 0x1f) + (uint)((ulong)((long)iVar1 * 0x51eb851f) >> 0x3f);\u000a  iVar2 = iVar2 - ((uint)(iVar1 + iVar2 * -0x19) >> 0x1f);\u000a  return ((long)min0 - (long)in_stack_00000020) +\u000a         (((long)hour0 - (long)in_stack_00000018) +\u000a         (((long)yday0 - (long)in_stack_00000010) +\u000a         ((yday1 - (long)in_stack_00000008) + (year1 - (long)sec0) * 0x16d +\u000a         (long)((((iVar3 - iVar4) - iVar1) + (iVar4 >> 2) + iVar2) - (iVar2 >> 2))) * 0x18) * 0x3c)\u000a         * 0x3c;\u000a}\u000a\u000a
p1004
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R10,RDI\nSHR R10,0x2\nMOV EAX,EDI\nAND EAX,0x3\nCMP RAX,0x1\nSBB RAX,RAX\nLEA R10,[0x1db + R10 + RAX*0x1]\nMOV R11D,R9D\nMOVSXD R14,R9D\nMOV EAX,R9D\nSAR EAX,0x2\nAND R11D,0x3\nCMP R11D,0x1\nSBB EBX,EBX\nLEA R9D,[0x1db + RAX + RBX*0x1]\nMOVSXD R11,R10D\nIMUL R15,R11,0x51eb851f\nMOV R10,R15\nSHR R10,0x3f\nSAR R15,0x23\nADD R15D,R10D\nLEA EBX,[R15 + R15*0x4]\nLEA R10D,[RBX + RBX*0x4]\nMOV EBX,R11D\nSUB EBX,R10D\nSHR EBX,0x1f\nSUB R15D,EBX\nMOVSXD R9,R9D\nIMUL RBX,R9,0x51eb851f\nMOV R10,RBX\nSHR R10,0x3f\nSAR RBX,0x23\nADD EBX,R10D\nLEA EAX,[RBX + RBX*0x4]\nLEA R10D,[RAX + RAX*0x4]\nSUB R11D,R15D\nSUB R11D,R9D\nMOV EAX,R9D\nSUB EAX,R10D\nSHR EAX,0x1f\nSUB EBX,EAX\nSAR R15D,0x2\nADD R11D,R15D\nADD R11D,EBX\nSAR EBX,0x2\nSUB R11D,EBX\nSUB RDI,R14\nIMUL RAX,RDI,0x16d\nMOVSXD RDI,dword ptr [RSP + 0x20]\nMOVSXD RBX,R11D\nSUB RSI,RDI\nADD RSI,RAX\nADD RSI,RBX\nLEA RAX,[RSI + RSI*0x2]\nMOVSXD RDX,EDX\nMOVSXD RSI,dword ptr [RSP + 0x28]\nSUB RDX,RSI\nLEA RAX,[RDX + RAX*0x8]\nIMUL RAX,RAX,0x3c\nMOVSXD RCX,ECX\nMOVSXD RDX,dword ptr [RSP + 0x30]\nSUB RCX,RDX\nADD RCX,RAX\nIMUL RCX,RCX,0x3c\nMOVSXD RAX,R8D\nMOVSXD RDX,dword ptr [RSP + 0x38]\nSUB RAX,RDX\nADD RAX,RCX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1005
S'41 57\n41 56\n53\n49 89 fa\n49 c1 ea 02\n89 f8\n83 e0 03\n48 83 f8 01\n48 19 c0\n4d 8d 94 02 db 01 00 00\n45 89 cb\n4d 63 f1\n44 89 c8\nc1 f8 02\n41 83 e3 03\n41 83 fb 01\n19 db\n44 8d 8c 18 db 01 00 00\n4d 63 da\n4d 69 fb 1f 85 eb 51\n4d 89 fa\n49 c1 ea 3f\n49 c1 ff 23\n45 01 d7\n43 8d 1c bf\n44 8d 14 9b\n44 89 db\n44 29 d3\nc1 eb 1f\n41 29 df\n4d 63 c9\n49 69 d9 1f 85 eb 51\n49 89 da\n49 c1 ea 3f\n48 c1 fb 23\n44 01 d3\n8d 04 9b\n44 8d 14 80\n45 29 fb\n45 29 cb\n44 89 c8\n44 29 d0\nc1 e8 1f\n29 c3\n41 c1 ff 02\n45 01 fb\n41 01 db\nc1 fb 02\n41 29 db\n4c 29 f7\n48 69 c7 6d 01 00 00\n48 63 7c 24 20\n49 63 db\n48 29 fe\n48 01 c6\n48 01 de\n48 8d 04 76\n48 63 d2\n48 63 74 24 28\n48 29 f2\n48 8d 04 c2\n48 6b c0 3c\n48 63 c9\n48 63 54 24 30\n48 29 d1\n48 01 c1\n48 6b c9 3c\n49 63 c0\n48 63 54 24 38\n48 29 d0\n48 01 c8\n5b\n41 5e\n41 5f\nc3\n'
p1006
S'.text:0000000000408f50\n.text:0000000000408f52\n.text:0000000000408f54\n.text:0000000000408f55\n.text:0000000000408f58\n.text:0000000000408f5c\n.text:0000000000408f5e\n.text:0000000000408f61\n.text:0000000000408f65\n.text:0000000000408f68\n.text:0000000000408f70\n.text:0000000000408f73\n.text:0000000000408f76\n.text:0000000000408f79\n.text:0000000000408f7c\n.text:0000000000408f80\n.text:0000000000408f84\n.text:0000000000408f86\n.text:0000000000408f8e\n.text:0000000000408f91\n.text:0000000000408f98\n.text:0000000000408f9b\n.text:0000000000408f9f\n.text:0000000000408fa3\n.text:0000000000408fa6\n.text:0000000000408faa\n.text:0000000000408fae\n.text:0000000000408fb1\n.text:0000000000408fb4\n.text:0000000000408fb7\n.text:0000000000408fba\n.text:0000000000408fbd\n.text:0000000000408fc4\n.text:0000000000408fc7\n.text:0000000000408fcb\n.text:0000000000408fcf\n.text:0000000000408fd2\n.text:0000000000408fd5\n.text:0000000000408fd9\n.text:0000000000408fdc\n.text:0000000000408fdf\n.text:0000000000408fe2\n.text:0000000000408fe5\n.text:0000000000408fe8\n.text:0000000000408fea\n.text:0000000000408fee\n.text:0000000000408ff1\n.text:0000000000408ff4\n.text:0000000000408ff7\n.text:0000000000408ffa\n.text:0000000000408ffd\n.text:0000000000409004\n.text:0000000000409009\n.text:000000000040900c\n.text:000000000040900f\n.text:0000000000409012\n.text:0000000000409015\n.text:0000000000409019\n.text:000000000040901c\n.text:0000000000409021\n.text:0000000000409024\n.text:0000000000409028\n.text:000000000040902c\n.text:000000000040902f\n.text:0000000000409034\n.text:0000000000409037\n.text:000000000040903a\n.text:000000000040903e\n.text:0000000000409041\n.text:0000000000409046\n.text:0000000000409049\n.text:000000000040904c\n.text:000000000040904d\n.text:000000000040904f\n.text:0000000000409051\n'
p1007
tp1008
sS'rpl_fflush'
p1009
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p1010
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_00610190)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p1011
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00408a6d\nMOV RDI,RBX\nCALL 0x00401a40\nTEST EAX,EAX\nJZ 0x00408a6d\nMOV RDI,RBX\nCALL 0x00408a80\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401a00\n'
p1012
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 df 8f ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 8a 8f ff ff\n'
p1013
S'.text:0000000000408a50\n.text:0000000000408a51\n.text:0000000000408a54\n.text:0000000000408a57\n.text:0000000000408a59\n.text:0000000000408a5c\n.text:0000000000408a61\n.text:0000000000408a63\n.text:0000000000408a65\n.text:0000000000408a68\n.text:0000000000408a6d\n.text:0000000000408a70\n.text:0000000000408a71\n'
p1014
tp1015
sS'save_abbr'
p1016
(S'\n__stdcall save_abbr(timezone_t tz, tm * tm)\n'
p1017
V\u000a_Bool save_abbr(timezone_t tz,tm *tm)\u000a\u000a{\u000a  char *pcVar1;\u000a  tm *__s2;\u000a  tm_zone *ptVar2;\u000a  int iVar3;\u000a  size_t sVar4;\u000a  timezone_t ptVar5;\u000a  char *pcVar6;\u000a  char *__s1;\u000a  \u000a  __s2 = (tm *)tm->tm_zone;\u000a  if ((__s2 != (tm *)0x0) && ((__s2 < tm || (tm + 1 <= __s2)))) {\u000a    if (*(char *)&__s2->tm_sec != 0) {\u000a      pcVar6 = tz->abbrs;\u000a      do {\u000a        __s1 = pcVar6;\u000a        do {\u000a          iVar3 = strcmp(__s1,(char *)__s2);\u000a          if (iVar3 == 0) goto LAB_00409521;\u000a          if ((*__s1 == 0) && ((__s1 != tz->abbrs || (tz->tz_is_set == 0)))) {\u000a            sVar4 = strlen((char *)__s2);\u000a            if (sVar4 + 1 < (ulong)((long)tz + (0x80 - (long)__s1))) {\u000a              extend_abbrs(__s1,(char *)__s2,sVar4 + 1);\u000a            }\u000a            else {\u000a              ptVar5 = tzalloc((char *)__s2);\u000a              *(timezone_t *)&tz->next = ptVar5;\u000a              if (ptVar5 == (timezone_t)0x0) {\u000a                return false;\u000a              }\u000a              ptVar5->tz_is_set = 0;\u000a              __s1 = ptVar5->abbrs;\u000a            }\u000a            goto LAB_00409521;\u000a          }\u000a          sVar4 = strlen(__s1);\u000a          pcVar6 = __s1 + sVar4 + 1;\u000a          pcVar1 = __s1 + sVar4 + 1;\u000a          __s1 = pcVar6;\u000a        } while (*pcVar1 != 0);\u000a        ptVar2 = tz->next;\u000a        if (ptVar2 != (tm_zone *)0x0) {\u000a          pcVar6 = ptVar2->abbrs;\u000a          tz = (timezone_t)ptVar2;\u000a        }\u000a      } while( true );\u000a    }\u000a    __s1 = \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000aLAB_00409521:\u000a    tm->tm_zone = __s1;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1018
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R12,RDI\nMOV RBX,qword ptr [R15 + 0x30]\nMOV R14B,0x1\nTEST RBX,RBX\nJZ 0x00409525\nCMP R15,RBX\nJA 0x00409463\nLEA RAX,[R15 + 0x38]\nCMP RBX,RAX\nJC 0x00409525\nCMP byte ptr [RBX],0x0\nJZ 0x0040946f\nLEA RBP,[R12 + 0x9]\nJMP 0x0040948c\nMOV EBP,0x40d569\nJMP 0x00409521\nMOV RAX,qword ptr [R12]\nLEA RBP,[RAX + 0x9]\nTEST RAX,RAX\nCMOVZ RBP,RCX\nCMOVNZ R12,RAX\nLEA R13,[R12 + 0x9]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x00409521\nCMP byte ptr [RBP],0x0\nJNZ 0x004094c2\nCMP RBP,R13\nJNZ 0x004094db\nCMP byte ptr [R12 + 0x8],0x0\nJZ 0x004094db\nMOV RDI,RBP\nCALL 0x00401840\nLEA RCX,[RBP + RAX*0x1 + 0x1]\nCMP byte ptr [RBP + RAX*0x1 + 0x1],0x0\nMOV RBP,RCX\nJNZ 0x004094a0\nJMP 0x00409479\nMOV RDI,RBX\nCALL 0x00401840\nINC RAX\nMOV RCX,R12\nSUB RCX,-0x80\nSUB RCX,RBP\nCMP RAX,RCX\nJNC 0x00409505\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x004092d0\nJMP 0x00409521\nMOV RDI,RBX\nCALL 0x00409260\nMOV RBP,RAX\nMOV qword ptr [R12],RBP\nTEST RBP,RBP\nJZ 0x00409537\nMOV byte ptr [RBP + 0x8],0x0\nADD RBP,0x9\nMOV qword ptr [R15 + 0x30],RBP\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR R14D,R14D\nJMP 0x00409525\n'
p1019
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f7\n49 89 fc\n49 8b 5f 30\n41 b6 01\n48 85 db\n0f 84 d4 00 00 00\n49 39 df\n77 0d\n49 8d 47 38\n48 39 c3\n0f 82 c2 00 00 00\n80 3b 00\n74 07\n49 8d 6c 24 09\neb 1d\nbd 69 d5 40 00\ne9 a8 00 00 00\n49 8b 04 24\n48 8d 68 09\n48 85 c0\n48 0f 44 e9\n4c 0f 45 e0\n4d 8d 6c 24 09\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 ef\n48 89 de\ne8 a5 84 ff ff\n85 c0\n74 72\n80 7d 00 00\n75 0d\n4c 39 ed\n75 21\n41 80 7c 24 08 00\n74 19\n48 89 ef\ne8 76 83 ff ff\n48 8d 4c 05 01\n80 7c 05 01 00\n48 89 cd\n75 c7\neb 9e\n48 89 df\ne8 5d 83 ff ff\n48 ff c0\n4c 89 e1\n48 83 e9 80\n48 29 e9\n48 39 c8\n73 10\n48 89 ef\n48 89 de\n48 89 c2\ne8 cd fd ff ff\neb 1c\n48 89 df\ne8 53 fd ff ff\n48 89 c5\n49 89 2c 24\n48 85 ed\n74 1e\nc6 45 08 00\n48 83 c5 09\n49 89 6f 30\n44 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n45 31 f6\neb e9\n'
p1020
S'.text:0000000000409430\n.text:0000000000409431\n.text:0000000000409433\n.text:0000000000409435\n.text:0000000000409437\n.text:0000000000409439\n.text:000000000040943a\n.text:000000000040943b\n.text:000000000040943e\n.text:0000000000409441\n.text:0000000000409445\n.text:0000000000409448\n.text:000000000040944b\n.text:0000000000409451\n.text:0000000000409454\n.text:0000000000409456\n.text:000000000040945a\n.text:000000000040945d\n.text:0000000000409463\n.text:0000000000409466\n.text:0000000000409468\n.text:000000000040946d\n.text:000000000040946f\n.text:0000000000409474\n.text:0000000000409479\n.text:000000000040947d\n.text:0000000000409481\n.text:0000000000409484\n.text:0000000000409488\n.text:000000000040948c\n.text:0000000000409491\n.text:00000000004094a0\n.text:00000000004094a3\n.text:00000000004094a6\n.text:00000000004094ab\n.text:00000000004094ad\n.text:00000000004094af\n.text:00000000004094b3\n.text:00000000004094b5\n.text:00000000004094b8\n.text:00000000004094ba\n.text:00000000004094c0\n.text:00000000004094c2\n.text:00000000004094c5\n.text:00000000004094ca\n.text:00000000004094cf\n.text:00000000004094d4\n.text:00000000004094d7\n.text:00000000004094d9\n.text:00000000004094db\n.text:00000000004094de\n.text:00000000004094e3\n.text:00000000004094e6\n.text:00000000004094e9\n.text:00000000004094ed\n.text:00000000004094f0\n.text:00000000004094f3\n.text:00000000004094f5\n.text:00000000004094f8\n.text:00000000004094fb\n.text:00000000004094fe\n.text:0000000000409503\n.text:0000000000409505\n.text:0000000000409508\n.text:000000000040950d\n.text:0000000000409510\n.text:0000000000409514\n.text:0000000000409517\n.text:0000000000409519\n.text:000000000040951d\n.text:0000000000409521\n.text:0000000000409525\n.text:0000000000409528\n.text:000000000040952c\n.text:000000000040952d\n.text:000000000040952f\n.text:0000000000409531\n.text:0000000000409533\n.text:0000000000409535\n.text:0000000000409536\n.text:0000000000409537\n.text:000000000040953a\n'
p1021
tp1022
sS'bindtextdomain'
p1023
(S'\n__stdcall bindtextdomain()\n'
p1024
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_00610098)();\u000a  return;\u000a}\u000a\u000a
p1025
S'JMP qword ptr [0x00610098]\n'
p1026
S'ff 25 82 e8 20 00\n'
p1027
S'.plt:0000000000401810\n'
p1028
tp1029
sS'fprintftime'
p1030
(S'\n__stdcall fprintftime(FILE * s, char * format, tm * tp, timezone_t tz)\n'
p1031
V\u000asize_t fprintftime(FILE *s,char *format,tm *tp,timezone_t tz)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strftime_case_((FILE *)0x0,(char *)s,(tm *)format,(timezone_t)tp);\u000a  return sVar1;\u000a}\u000a\u000a
p1032
S'MOV R9D,R8D\nMOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x00402e10\n'
p1033
S'45 89 c1\n48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\neb 0a\n'
p1034
S'.text:0000000000402df0\n.text:0000000000402df3\n.text:0000000000402df6\n.text:0000000000402df9\n.text:0000000000402dfc\n.text:0000000000402dff\n.text:0000000000402e01\n.text:0000000000402e04\n'
p1035
tp1036
sS'set_char_quoting'
p1037
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p1038
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p1039
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x610350\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p1040
S'89 f1\n48 85 ff\nbe 50 03 61 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p1041
S'.text:00000000004069c0\n.text:00000000004069c2\n.text:00000000004069c5\n.text:00000000004069ca\n.text:00000000004069ce\n.text:00000000004069d0\n.text:00000000004069d3\n.text:00000000004069d7\n.text:00000000004069dc\n.text:00000000004069df\n.text:00000000004069e1\n.text:00000000004069e3\n.text:00000000004069e6\n.text:00000000004069e8\n.text:00000000004069eb\n.text:00000000004069ed\n.text:00000000004069f0\n.text:00000000004069f5\n'
p1042
tp1043
sS'quotearg_n'
p1044
(S'\n__stdcall quotearg_n(char * arg)\n'
p1045
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1046
S'MOV RDX,-0x1\nMOV ECX,0x610350\nJMP 0x004078b0\n'
p1047
S'48 c7 c2 ff ff ff ff\nb9 50 03 61 00\neb 02\n'
p1048
S'.text:00000000004078a0\n.text:00000000004078a7\n.text:00000000004078ac\n'
p1049
tp1050
sS'close_stream'
p1051
(S'\n__stdcall close_stream(FILE * stream)\n'
p1052
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1053
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x004017b0\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00401920\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x004089d0\nTEST EBP,EBP\nJZ 0x0040989b\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x004098bf\nCALL 0x00401760\nMOV dword ptr [RAX],0x0\nJMP 0x004098bf\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x004098bf\nTEST CL,CL\nJNZ 0x004098bf\nCALL 0x00401760\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1054
S'55\n41 56\n53\n48 89 fb\ne8 44 7f ff ff\n49 89 c6\n48 89 df\ne8 a9 80 ff ff\n89 c5\n48 89 df\ne8 4f f1 ff ff\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 cd 7e ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 ae 7e ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p1055
S'.text:0000000000409860\n.text:0000000000409861\n.text:0000000000409863\n.text:0000000000409864\n.text:0000000000409867\n.text:000000000040986c\n.text:000000000040986f\n.text:0000000000409872\n.text:0000000000409877\n.text:0000000000409879\n.text:000000000040987c\n.text:0000000000409881\n.text:0000000000409883\n.text:0000000000409885\n.text:000000000040988a\n.text:000000000040988c\n.text:000000000040988e\n.text:0000000000409893\n.text:0000000000409899\n.text:000000000040989b\n.text:000000000040989d\n.text:00000000004098a0\n.text:00000000004098a2\n.text:00000000004098a4\n.text:00000000004098a7\n.text:00000000004098a9\n.text:00000000004098ab\n.text:00000000004098ad\n.text:00000000004098b2\n.text:00000000004098b4\n.text:00000000004098b7\n.text:00000000004098bc\n.text:00000000004098bf\n.text:00000000004098c1\n.text:00000000004098c2\n.text:00000000004098c4\n.text:00000000004098c5\n'
p1056
tp1057
sS'fputc'
p1058
(S'\n__stdcall fputc(int __c, FILE * __stream)\n'
p1059
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_00610108)();\u000a  return iVar1;\u000a}\u000a\u000a
p1060
S'JMP qword ptr [0x00610108]\n'
p1061
S'ff 25 12 e8 20 00\n'
p1062
S'.plt:00000000004018f0\n'
p1063
tp1064
sS'quotearg_colon_mem'
p1065
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p1066
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1067
S'MOV EDX,0x3a\nJMP 0x00407bc0\n'
p1068
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p1069
S'.text:0000000000407c50\n.text:0000000000407c55\n'
p1070
tp1071
sS'setenv'
p1072
(S'\n__stdcall setenv(char * __name, char * __value, int __replace)\n'
p1073
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint setenv(char *__name,char *__value,int __replace)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_setenv_00610080)();\u000a  return iVar1;\u000a}\u000a\u000a
p1074
S'JMP qword ptr [0x00610080]\n'
p1075
S'ff 25 9a e8 20 00\n'
p1076
S'.plt:00000000004017e0\n'
p1077
tp1078
sS'xcalloc'
p1079
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p1080
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1081
S'PUSH RAX\nCALL 0x00408980\nTEST RAX,RAX\nJZ 0x004088ed\nPOP RCX\nRET\nCALL 0x00408950\n'
p1082
S'50\ne8 9a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p1083
S'.text:00000000004088e0\n.text:00000000004088e1\n.text:00000000004088e6\n.text:00000000004088e9\n.text:00000000004088eb\n.text:00000000004088ec\n.text:00000000004088ed\n'
p1084
tp1085
sS'clear_ungetc_buffer_preserving_position'
p1086
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p1087
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p1088
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x00408a87\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x00408aa0\n'
p1089
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p1090
S'.text:0000000000408a80\n.text:0000000000408a84\n.text:0000000000408a86\n.text:0000000000408a87\n.text:0000000000408a89\n.text:0000000000408a8e\n'
p1091
tp1092
sS'xnmalloc'
p1093
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p1094
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1095
S'MOV RAX,RDI\nMUL RSI\nJO 0x004087b1\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x004087c0\nPUSH RAX\nCALL 0x00408950\n'
p1096
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p1097
S'.text:00000000004087a0\n.text:00000000004087a3\n.text:00000000004087a6\n.text:00000000004087a8\n.text:00000000004087ac\n.text:00000000004087af\n.text:00000000004087b1\n.text:00000000004087b2\n'
p1098
tp1099
sS'quotearg_char'
p1100
(S'\n__stdcall quotearg_char(char * arg)\n'
p1101
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1102
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x00407bc0\n'
p1103
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p1104
S'.text:0000000000407c30\n.text:0000000000407c32\n.text:0000000000407c39\n.text:0000000000407c3b\n'
p1105
tp1106
sS'malloc'
p1107
(S'\n__stdcall malloc(size_t __size)\n'
p1108
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_00610188)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1109
S'JMP qword ptr [0x00610188]\n'
p1110
S'ff 25 92 e7 20 00\n'
p1111
S'.plt:00000000004019f0\n'
p1112
tp1113
sS'argmatch_invalid'
p1114
(S'\n__stdcall argmatch_invalid(char * context, char * value, ptrdiff_t problem)\n'
p1115
V\u000avoid argmatch_invalid(char *context,char *value,ptrdiff_t problem)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  \u000a  pcVar2 = "ambiguous argument %s for %s";\u000a  if (problem == -1) {\u000a    pcVar2 = "invalid argument %s for %s";\u000a  }\u000a  uVar1 = dcgettext(0,pcVar2,5);\u000a  pcVar2 = quotearg_n_style((char *)0x0);\u000a  pcVar3 = quote_n((char *)0x1);\u000a  error(0,0,uVar1,pcVar2,pcVar3);\u000a  return;\u000a}\u000a\u000a
p1116
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R14,RDI\nCMP RDX,-0x1\nMOV EAX,0x40b6d0\nMOV ESI,0x40b6eb\nCMOVZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00401820\nMOV R12,RAX\nXOR EDI,EDI\nMOV ESI,0x8\nMOV RDX,R15\nCALL 0x00407aa0\nMOV R15,RAX\nMOV EDI,0x1\nMOV RSI,R14\nCALL 0x00407d90\nMOV RBX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R12\nMOV RCX,R15\nMOV R8,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401ab0\n'
p1117
S'41 57\n41 56\n41 54\n53\n50\n49 89 f7\n49 89 fe\n48 83 fa ff\nb8 d0 b6 40 00\nbe eb b6 40 00\n48 0f 44 f0\n31 ff\nba 05 00 00 00\ne8 24 ed ff ff\n49 89 c4\n31 ff\nbe 08 00 00 00\n4c 89 fa\ne8 92 4f 00 00\n49 89 c7\nbf 01 00 00 00\n4c 89 f6\ne8 72 52 00 00\n48 89 c3\n31 ff\n31 f6\n31 c0\n4c 89 e2\n4c 89 f9\n49 89 d8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 70 ef ff ff\n'
p1118
S'.text:0000000000402ad0\n.text:0000000000402ad2\n.text:0000000000402ad4\n.text:0000000000402ad6\n.text:0000000000402ad7\n.text:0000000000402ad8\n.text:0000000000402adb\n.text:0000000000402ade\n.text:0000000000402ae2\n.text:0000000000402ae7\n.text:0000000000402aec\n.text:0000000000402af0\n.text:0000000000402af2\n.text:0000000000402af7\n.text:0000000000402afc\n.text:0000000000402aff\n.text:0000000000402b01\n.text:0000000000402b06\n.text:0000000000402b09\n.text:0000000000402b0e\n.text:0000000000402b11\n.text:0000000000402b16\n.text:0000000000402b19\n.text:0000000000402b1e\n.text:0000000000402b21\n.text:0000000000402b23\n.text:0000000000402b25\n.text:0000000000402b27\n.text:0000000000402b2a\n.text:0000000000402b2d\n.text:0000000000402b30\n.text:0000000000402b34\n.text:0000000000402b35\n.text:0000000000402b37\n.text:0000000000402b39\n.text:0000000000402b3b\n'
p1119
tp1120
sS'c_tolower'
p1121
(S'\n__stdcall c_tolower()\n'
p1122
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1123
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p1124
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p1125
S'.text:0000000000409840\n.text:0000000000409843\n.text:0000000000409846\n.text:0000000000409849\n.text:000000000040984c\n'
p1126
tp1127
sS'getopt_long'
p1128
(S'\n__stdcall getopt_long()\n'
p1129
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_006100b8)();\u000a  return;\u000a}\u000a\u000a
p1130
S'JMP qword ptr [0x006100b8]\n'
p1131
S'ff 25 62 e8 20 00\n'
p1132
S'.plt:0000000000401850\n'
p1133
tp1134
sS'fwrite_uppcase'
p1135
(S'\n__stdcall fwrite_uppcase(FILE * fp, char * src, size_t len)\n'
p1136
V\u000avoid fwrite_uppcase(FILE *fp,char *src,size_t len)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  if (len != 0) {\u000a    do {\u000a      pp_Var1 = __ctype_toupper_loc();\u000a      fputc((*pp_Var1)[(ulong)(byte)*src],(FILE *)fp);\u000a      src = (char *)((byte *)src + 1);\u000a      len = len - 1;\u000a    } while (len != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1137
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV R15,RDI\nTEST R14,R14\nJZ 0x0040461e\nNOP dword ptr CS:[RAX + RAX*0x1]\nCALL 0x00401710\nMOV RAX,qword ptr [RAX]\nMOVZX ECX,byte ptr [RBX]\nMOV EDI,dword ptr [RAX + RCX*0x4]\nMOV RSI,R15\nCALL 0x004018f0\nINC RBX\nDEC R14\nJNZ 0x00404600\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1138
S'41 57\n41 56\n53\n49 89 d6\n48 89 f3\n49 89 ff\n4d 85 f6\n74 2b\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\ne8 0b d1 ff ff\n48 8b 00\n0f b6 0b\n8b 3c 88\n4c 89 fe\ne8 da d2 ff ff\n48 ff c3\n49 ff ce\n75 e2\n5b\n41 5e\n41 5f\nc3\n'
p1139
S'.text:00000000004045e0\n.text:00000000004045e2\n.text:00000000004045e4\n.text:00000000004045e5\n.text:00000000004045e8\n.text:00000000004045eb\n.text:00000000004045ee\n.text:00000000004045f1\n.text:00000000004045f3\n.text:0000000000404600\n.text:0000000000404605\n.text:0000000000404608\n.text:000000000040460b\n.text:000000000040460e\n.text:0000000000404611\n.text:0000000000404616\n.text:0000000000404619\n.text:000000000040461c\n.text:000000000040461e\n.text:000000000040461f\n.text:0000000000404621\n.text:0000000000404623\n'
p1140
tp1141
sS'quotearg_style'
p1142
(S'\n__stdcall quotearg_style(char * arg)\n'
p1143
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1144
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x00407aa0\n'
p1145
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p1146
S'.text:0000000000407b80\n.text:0000000000407b83\n.text:0000000000407b85\n.text:0000000000407b87\n.text:0000000000407b89\n.text:0000000000407b8c\n'
p1147
tp1148
sS'__argmatch_die'
p1149
(S'\n__stdcall __argmatch_die()\n'
p1150
V\u000avoid __argmatch_die(void)\u000a\u000a{\u000a  usage(1);\u000a  return;\u000a}\u000a\u000a
p1151
S'MOV EDI,0x1\nJMP 0x00401ca0\n'
p1152
S'bf 01 00 00 00\ne9 d6 f2 ff ff\n'
p1153
S'.text:00000000004029c0\n.text:00000000004029c5\n'
p1154
tp1155
sS'emit_try_help'
p1156
(S'\n__stdcall emit_try_help()\n'
p1157
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p1158
S'PUSH RBX\nMOV RBX,qword ptr [0x00610320]\nXOR EDI,EDI\nMOV ESI,0x40b49e\nMOV EDX,0x5\nCALL 0x00401820\nMOV RDX,RAX\nMOV RCX,qword ptr [0x00610340]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401b40\n'
p1159
S'53\n48 8b 1d 38 e3 20 00\n31 ff\nbe 9e b4 40 00\nba 05 00 00 00\ne8 27 f8 ff ff\n48 89 c2\n48 8b 0d 3d e3 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 2d fb ff ff\n'
p1160
S'.text:0000000000401fe0\n.text:0000000000401fe1\n.text:0000000000401fe8\n.text:0000000000401fea\n.text:0000000000401fef\n.text:0000000000401ff4\n.text:0000000000401ff9\n.text:0000000000401ffc\n.text:0000000000402003\n.text:0000000000402008\n.text:000000000040200a\n.text:000000000040200d\n.text:000000000040200e\n'
p1161
tp1162
sS'strrchr'
p1163
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p1164
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_006100d0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1165
S'JMP qword ptr [0x006100d0]\n'
p1166
S'ff 25 4a e8 20 00\n'
p1167
S'.plt:0000000000401880\n'
p1168
tp1169
sS'quotearg_alloc_mem'
p1170
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p1171
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p1172
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x610350\nCMOVNZ R12,RCX\nCALL 0x00401760\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x00406ad0\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00408890\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x00406ad0\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x004077fa\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1173
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc 50 03 61 00\n4c 0f 45 e1\ne8 08 a0 ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 e1 10 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1174
S'.text:0000000000407720\n.text:0000000000407721\n.text:0000000000407723\n.text:0000000000407725\n.text:0000000000407727\n.text:0000000000407729\n.text:000000000040772a\n.text:000000000040772e\n.text:0000000000407731\n.text:0000000000407736\n.text:0000000000407739\n.text:000000000040773e\n.text:0000000000407741\n.text:0000000000407746\n.text:0000000000407749\n.text:000000000040774f\n.text:0000000000407753\n.text:0000000000407758\n.text:000000000040775d\n.text:000000000040775f\n.text:0000000000407763\n.text:0000000000407765\n.text:0000000000407768\n.text:000000000040776c\n.text:0000000000407771\n.text:0000000000407775\n.text:000000000040777a\n.text:000000000040777e\n.text:0000000000407780\n.text:0000000000407782\n.text:0000000000407785\n.text:0000000000407788\n.text:000000000040778b\n.text:0000000000407790\n.text:0000000000407795\n.text:0000000000407797\n.text:000000000040779c\n.text:00000000004077a0\n.text:00000000004077a3\n.text:00000000004077a7\n.text:00000000004077aa\n.text:00000000004077af\n.text:00000000004077b2\n.text:00000000004077b6\n.text:00000000004077ba\n.text:00000000004077bd\n.text:00000000004077c0\n.text:00000000004077c5\n.text:00000000004077ca\n.text:00000000004077cd\n.text:00000000004077d2\n.text:00000000004077d7\n.text:00000000004077d9\n.text:00000000004077de\n.text:00000000004077e3\n.text:00000000004077e7\n.text:00000000004077ea\n.text:00000000004077ee\n.text:00000000004077f3\n.text:00000000004077f5\n.text:00000000004077f7\n.text:00000000004077fa\n.text:00000000004077fd\n.text:0000000000407801\n.text:0000000000407802\n.text:0000000000407804\n.text:0000000000407806\n.text:0000000000407808\n.text:000000000040780a\n.text:000000000040780b\n'
p1175
tp1176
sS'quotearg_style_mem'
p1177
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p1178
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1179
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00407b40\n'
p1180
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p1181
S'.text:0000000000407ba0\n.text:0000000000407ba3\n.text:0000000000407ba6\n.text:0000000000407ba8\n.text:0000000000407baa\n.text:0000000000407bac\n.text:0000000000407baf\n.text:0000000000407bb2\n'
p1182
tp1183
sS'xalloc_die'
p1184
(S'\n__stdcall xalloc_die()\n'
p1185
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,&DAT_0040b727,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1186
S'PUSH RBX\nMOV EBX,dword ptr [0x00610280]\nXOR EDI,EDI\nMOV ESI,0x40cbfe\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x40b727\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00401ab0\nCALL 0x00401750\n'
p1187
S'53\n8b 1d 29 79 20 00\n31 ff\nbe fe cb 40 00\nba 05 00 00 00\ne8 b8 8e ff ff\n48 89 c1\n31 f6\nba 27 b7 40 00\n31 c0\n89 df\ne8 35 91 ff ff\ne8 d0 8d ff ff\n'
p1188
S'.text:0000000000408950\n.text:0000000000408951\n.text:0000000000408957\n.text:0000000000408959\n.text:000000000040895e\n.text:0000000000408963\n.text:0000000000408968\n.text:000000000040896b\n.text:000000000040896d\n.text:0000000000408972\n.text:0000000000408974\n.text:0000000000408976\n.text:000000000040897b\n'
p1189
tp1190
sS'__sprintf_chk'
p1191
(S'\n__stdcall __sprintf_chk()\n'
p1192
V\u000avoid __sprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___sprintf_chk_00610258)();\u000a  return;\u000a}\u000a\u000a
p1193
S'JMP qword ptr [0x00610258]\n'
p1194
S'ff 25 c2 e6 20 00\n'
p1195
S'.plt:0000000000401b90\n'
p1196
tp1197
sS'quotearg_n_custom'
p1198
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p1199
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1200
S'MOV R8,-0x1\nJMP 0x00407cc0\n'
p1201
S'49 c7 c0 ff ff ff ff\neb 07\n'
p1202
S'.text:0000000000407cb0\n.text:0000000000407cb7\n'
p1203
tp1204
sS'set_tz'
p1205
(S'\n__stdcall set_tz(timezone_t tz)\n'
p1206
V\u000atimezone_t set_tz(timezone_t tz)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char *__s2;\u000a  timezone_t tz_00;\u000a  int *piVar3;\u000a  \u000a  __s2 = getenv_TZ();\u000a  if (__s2 == (char *)0x0) {\u000a    if (tz->tz_is_set == 0) {\u000a      return (timezone_t)0x1;\u000a    }\u000a  }\u000a  else {\u000a    if ((tz->tz_is_set != 0) && (iVar2 = strcmp(tz->abbrs,__s2), iVar2 == 0)) {\u000a      return (timezone_t)0x1;\u000a    }\u000a  }\u000a  tz_00 = tzalloc(__s2);\u000a  if (tz_00 != (timezone_t)0x0) {\u000a    _Var1 = change_env(tz);\u000a    if (_Var1 != false) {\u000a      return tz_00;\u000a    }\u000a    piVar3 = __errno_location();\u000a    iVar2 = *piVar3;\u000a    tzfree(tz_00);\u000a    *piVar3 = iVar2;\u000a  }\u000a  return (timezone_t)0x0;\u000a}\u000a\u000a
p1207
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCALL 0x00409690\nMOV RBX,RAX\nTEST RBX,RBX\nMOV AL,byte ptr [R14 + 0x8]\nJZ 0x004093de\nTEST AL,AL\nJZ 0x004093e2\nLEA RDI,[R14 + 0x9]\nMOV RSI,RBX\nCALL 0x00401950\nTEST EAX,EAX\nJNZ 0x004093e2\nJMP 0x00409418\nTEST AL,AL\nJZ 0x00409418\nMOV RDI,RBX\nCALL 0x00409260\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409414\nMOV RDI,R14\nCALL 0x004096a0\nTEST AL,AL\nJNZ 0x0040941d\nCALL 0x00401760\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x004092f0\nMOV dword ptr [R14],EBP\nXOR EBX,EBX\nJMP 0x0040941d\nMOV EBX,0x1\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1208
S'55\n41 56\n53\n49 89 fe\ne8 d4 02 00 00\n48 89 c3\n48 85 db\n41 8a 46 08\n74 16\n84 c0\n74 16\n49 8d 7e 09\n48 89 de\ne8 78 85 ff ff\n85 c0\n75 06\neb 3a\n84 c0\n74 36\n48 89 df\ne8 76 fe ff ff\n48 89 c3\n48 85 db\n74 22\n4c 89 f7\ne8 a6 02 00 00\n84 c0\n75 1f\ne8 5d 83 ff ff\n49 89 c6\n41 8b 2e\n48 89 df\ne8 df fe ff ff\n41 89 2e\n31 db\neb 05\nbb 01 00 00 00\n48 89 d8\n5b\n41 5e\n5d\nc3\n'
p1209
S'.text:00000000004093b0\n.text:00000000004093b1\n.text:00000000004093b3\n.text:00000000004093b4\n.text:00000000004093b7\n.text:00000000004093bc\n.text:00000000004093bf\n.text:00000000004093c2\n.text:00000000004093c6\n.text:00000000004093c8\n.text:00000000004093ca\n.text:00000000004093cc\n.text:00000000004093d0\n.text:00000000004093d3\n.text:00000000004093d8\n.text:00000000004093da\n.text:00000000004093dc\n.text:00000000004093de\n.text:00000000004093e0\n.text:00000000004093e2\n.text:00000000004093e5\n.text:00000000004093ea\n.text:00000000004093ed\n.text:00000000004093f0\n.text:00000000004093f2\n.text:00000000004093f5\n.text:00000000004093fa\n.text:00000000004093fc\n.text:00000000004093fe\n.text:0000000000409403\n.text:0000000000409406\n.text:0000000000409409\n.text:000000000040940c\n.text:0000000000409411\n.text:0000000000409414\n.text:0000000000409416\n.text:0000000000409418\n.text:000000000040941d\n.text:0000000000409420\n.text:0000000000409421\n.text:0000000000409423\n.text:0000000000409424\n'
p1210
tp1211
sS'revert_tz'
p1212
(S'\n__stdcall revert_tz(timezone_t tz)\n'
p1213
V\u000a_Bool revert_tz(timezone_t tz)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int *piVar2;\u000a  int iVar3;\u000a  \u000a  if (tz == (timezone_t)0x1) {\u000a    _Var1 = true;\u000a  }\u000a  else {\u000a    piVar2 = __errno_location();\u000a    iVar3 = *piVar2;\u000a    _Var1 = change_env(tz);\u000a    if (_Var1 == false) {\u000a      iVar3 = *piVar2;\u000a    }\u000a    tzfree(tz);\u000a    *piVar2 = iVar3;\u000a  }\u000a  return _Var1;\u000a}\u000a\u000a
p1214
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCMP RBX,0x1\nJZ 0x0040957a\nCALL 0x00401760\nMOV R14,RAX\nMOV R15D,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x004096a0\nMOV EBP,EAX\nTEST BPL,BPL\nJNZ 0x0040956d\nMOV R15D,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x004092f0\nMOV dword ptr [R14],R15D\nJMP 0x0040957d\nMOV BPL,0x1\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1215
S'55\n41 57\n41 56\n53\n50\n48 89 fb\n48 83 fb 01\n74 2a\ne8 0b 82 ff ff\n49 89 c6\n45 8b 3e\n48 89 df\ne8 3d 01 00 00\n89 c5\n40 84 ed\n75 03\n45 8b 3e\n48 89 df\ne8 7b fd ff ff\n45 89 3e\neb 03\n40 b5 01\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1216
S'.text:0000000000409540\n.text:0000000000409541\n.text:0000000000409543\n.text:0000000000409545\n.text:0000000000409546\n.text:0000000000409547\n.text:000000000040954a\n.text:000000000040954e\n.text:0000000000409550\n.text:0000000000409555\n.text:0000000000409558\n.text:000000000040955b\n.text:000000000040955e\n.text:0000000000409563\n.text:0000000000409565\n.text:0000000000409568\n.text:000000000040956a\n.text:000000000040956d\n.text:0000000000409570\n.text:0000000000409575\n.text:0000000000409578\n.text:000000000040957a\n.text:000000000040957d\n.text:000000000040957f\n.text:0000000000409583\n.text:0000000000409584\n.text:0000000000409586\n.text:0000000000409588\n.text:0000000000409589\n'
p1217
tp1218
sS'__freading'
p1219
(S'\n__stdcall __freading()\n'
p1220
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_006101b0)();\u000a  return;\u000a}\u000a\u000a
p1221
S'JMP qword ptr [0x006101b0]\n'
p1222
S'ff 25 6a e7 20 00\n'
p1223
S'.plt:0000000000401a40\n'
p1224
tp1225
sS'ranged_convert'
p1226
(S'\n__stdcall ranged_convert(anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * t, tm * tp)\n'
p1227
V\u000atm * ranged_convert(tm *(*convert)(time_t *,tm *),time_t *t,tm *tp)\u000a\u000a{\u000a  tm *ptVar1;\u000a  ulong uVar2;\u000a  ulong a;\u000a  ulong uVar3;\u000a  ulong b;\u000a  undefined auVar4 [16];\u000a  \u000a  ptVar1 = (*convert)(t,tp);\u000a  if (ptVar1 == (tm *)0x0) {\u000a    b = *t;\u000a    if ((b == 0) || (b == ((long)b >> 0x3f | 1U))) {\u000a      ptVar1 = (tm *)0x0;\u000a    }\u000a    else {\u000a      a = 0;\u000a      do {\u000a        uVar2 = time_t_avg(a,b);\u000a        *t = uVar2;\u000a        auVar4 = (undefined  [16])(*convert)(t,tp);\u000a        ptVar1 = SUB168(auVar4,0);\u000a        uVar3 = uVar2;\u000a        if (ptVar1 == (tm *)0x0) {\u000a          uVar3 = a;\u000a          b = uVar2;\u000a        }\u000a        a = uVar3;\u000a      } while (b != ((long)b >> 0x3f | 1U) + uVar3);\u000a      if ((uVar3 != 0) && (ptVar1 == (tm *)0x0)) {\u000a        *t = uVar3;\u000a                    /* WARNING: Could not recover jumptable at 0x004091af. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a        ptVar1 = (*convert)(t,tp);\u000a        return ptVar1;\u000a      }\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p1228
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nMOV RDI,R15\nMOV RSI,R14\nCALL RBX\nTEST RAX,RAX\nJNZ 0x0040912f\nMOV qword ptr [RSP],RBX\nMOV R12,qword ptr [R15]\nTEST R12,R12\nJZ 0x0040912d\nMOV RAX,R12\nSAR RAX,0x3f\nOR RAX,0x1\nCMP R12,RAX\nJNZ 0x0040913e\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EBX,EBX\nMOV RBP,qword ptr [RSP]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV R13,RBX\nMOV RDI,R13\nMOV RSI,R12\nCALL 0x00409240\nMOV RBX,RAX\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nCALL RBP\nTEST RAX,RAX\nCMOVZ R12,RBX\nCMOVZ RBX,R13\nMOV RCX,R12\nSAR RCX,0x3f\nOR RCX,0x1\nADD RCX,RBX\nCMP R12,RCX\nJNZ 0x00409150\nTEST RBX,RBX\nJZ 0x0040912f\nTEST RAX,RAX\nMOV RCX,qword ptr [RSP]\nJNZ 0x0040912f\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP RCX\n'
p1229
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f7\n48 89 fb\n4c 89 ff\n4c 89 f6\nff d3\n48 85 c0\n75 1e\n48 89 1c 24\n4d 8b 27\n4d 85 e4\n74 10\n4c 89 e0\n48 c1 f8 3f\n48 83 c8 01\n49 39 c4\n75 11\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n31 db\n48 8b 2c 24\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 89 dd\n4c 89 ef\n4c 89 e6\ne8 e2 00 00 00\n48 89 c3\n49 89 1f\n4c 89 ff\n4c 89 f6\nff d5\n48 85 c0\n4c 0f 44 e3\n49 0f 44 dd\n4c 89 e1\n48 c1 f9 3f\n48 83 c9 01\n48 01 d9\n49 39 cc\n75 c6\n48 85 db\n74 a0\n48 85 c0\n48 8b 0c 24\n75 97\n49 89 1f\n4c 89 ff\n4c 89 f6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nff e1\n'
p1230
S'.text:00000000004090f0\n.text:00000000004090f1\n.text:00000000004090f3\n.text:00000000004090f5\n.text:00000000004090f7\n.text:00000000004090f9\n.text:00000000004090fa\n.text:00000000004090fb\n.text:00000000004090fe\n.text:0000000000409101\n.text:0000000000409104\n.text:0000000000409107\n.text:000000000040910a\n.text:000000000040910c\n.text:000000000040910f\n.text:0000000000409111\n.text:0000000000409115\n.text:0000000000409118\n.text:000000000040911b\n.text:000000000040911d\n.text:0000000000409120\n.text:0000000000409124\n.text:0000000000409128\n.text:000000000040912b\n.text:000000000040912d\n.text:000000000040912f\n.text:0000000000409133\n.text:0000000000409134\n.text:0000000000409136\n.text:0000000000409138\n.text:000000000040913a\n.text:000000000040913c\n.text:000000000040913d\n.text:000000000040913e\n.text:0000000000409140\n.text:0000000000409144\n.text:0000000000409150\n.text:0000000000409153\n.text:0000000000409156\n.text:0000000000409159\n.text:000000000040915e\n.text:0000000000409161\n.text:0000000000409164\n.text:0000000000409167\n.text:000000000040916a\n.text:000000000040916c\n.text:000000000040916f\n.text:0000000000409173\n.text:0000000000409177\n.text:000000000040917a\n.text:000000000040917e\n.text:0000000000409182\n.text:0000000000409185\n.text:0000000000409188\n.text:000000000040918a\n.text:000000000040918d\n.text:000000000040918f\n.text:0000000000409192\n.text:0000000000409196\n.text:0000000000409198\n.text:000000000040919b\n.text:000000000040919e\n.text:00000000004091a1\n.text:00000000004091a5\n.text:00000000004091a6\n.text:00000000004091a8\n.text:00000000004091aa\n.text:00000000004091ac\n.text:00000000004091ae\n.text:00000000004091af\n'
p1231
tp1232
sS'get_tz'
p1233
(S'\n__stdcall get_tz(char * tzbuf)\n'
p1234
V\u000achar * get_tz(char *tzbuf)\u000a\u000a{\u000a  char *__s;\u000a  size_t sVar1;\u000a  ulong s;\u000a  \u000a  __s = getenv("TZ");\u000a  if (__s == (char *)0x0) {\u000a    tzbuf = (char *)0x0;\u000a  }\u000a  else {\u000a    sVar1 = strlen(__s);\u000a    s = sVar1 + 1;\u000a    if (100 < s) {\u000a      __s = (char *)xmemdup(__s,s);\u000a      return __s;\u000a    }\u000a    memcpy(tzbuf,__s,s);\u000a  }\u000a  return tzbuf;\u000a}\u000a\u000a
p1235
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV EDI,0x40b47b\nCALL 0x00401720\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040618a\nMOV RDI,RBX\nCALL 0x00401840\nINC RAX\nCMP RAX,0x64\nJA 0x00406198\nMOV RDI,R14\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x00401970\nJMP 0x0040618d\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RDI,RBX\nMOV RSI,RAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00408900\n'
p1236
S'41 56\n53\n50\n49 89 fe\nbf 7b b4 40 00\ne8 bf b5 ff ff\n48 89 c3\n48 85 db\n74 21\n48 89 df\ne8 cf b6 ff ff\n48 ff c0\n48 83 f8 64\n77 1e\n4c 89 f7\n48 89 de\n48 89 c2\ne8 e8 b7 ff ff\neb 03\n45 31 f6\n4c 89 f0\n48 83 c4 08\n5b\n41 5e\nc3\n48 89 df\n48 89 c6\n48 83 c4 08\n5b\n41 5e\ne9 56 27 00 00\n'
p1237
S'.text:0000000000406150\n.text:0000000000406152\n.text:0000000000406153\n.text:0000000000406154\n.text:0000000000406157\n.text:000000000040615c\n.text:0000000000406161\n.text:0000000000406164\n.text:0000000000406167\n.text:0000000000406169\n.text:000000000040616c\n.text:0000000000406171\n.text:0000000000406174\n.text:0000000000406178\n.text:000000000040617a\n.text:000000000040617d\n.text:0000000000406180\n.text:0000000000406183\n.text:0000000000406188\n.text:000000000040618a\n.text:000000000040618d\n.text:0000000000406190\n.text:0000000000406194\n.text:0000000000406195\n.text:0000000000406197\n.text:0000000000406198\n.text:000000000040619b\n.text:000000000040619e\n.text:00000000004061a2\n.text:00000000004061a3\n.text:00000000004061a5\n'
p1238
tp1239
sS'fputs_unlocked'
p1240
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p1241
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_00610118)();\u000a  return iVar1;\u000a}\u000a\u000a
p1242
S'JMP qword ptr [0x00610118]\n'
p1243
S'ff 25 02 e8 20 00\n'
p1244
S'.plt:0000000000401910\n'
p1245
tp1246
sS'main'
p1247
(S'\n__stdcall main(char * * argv)\n'
p1248
V\u000aint main(char **argv)\u000a\u000a{\u000a  uint uVar1;\u000a  char rfc_3339_format [3] [32];\u000a  char iso_8601_format [5] [32];\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  Time_spec TVar4;\u000a  int iVar5;\u000a  ptrdiff_t pVar6;\u000a  long lVar7;\u000a  char *arg;\u000a  timezone_t tz;\u000a  undefined8 uVar8;\u000a  uint *puVar9;\u000a  __ssize_t _Var10;\u000a  undefined8 extraout_RDX;\u000a  char cVar11;\u000a  char *pcVar12;\u000a  char **in_RSI;\u000a  FILE *fp;\u000a  uint uVar13;\u000a  ulong uVar14;\u000a  bool bVar15;\u000a  char *set_datestr;\u000a  char *pcStack352;\u000a  size_t sStack344;\u000a  char *pcStack336;\u000a  char *pcStack328;\u000a  undefined8 uStack320;\u000a  timespec tStack312;\u000a  ulong uStack296;\u000a  char *pcStack280;\u000a  char *pcStack272;\u000a  ulong uStack264;\u000a  undefined8 uStack256;\u000a  timespec local_f0;\u000a  ulong local_e0;\u000a  char *local_d8;\u000a  char *local_d0;\u000a  char *local_c8;\u000a  stat local_c0;\u000a  \u000a  uStack256 = 0x40219f;\u000a  set_program_name(*in_RSI);\u000a  uStack256 = 0x4021ae;\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  uStack256 = 0x4021bd;\u000a  bindtextdomain(0x40b305,"/usr/local/share/locale");\u000a  uStack256 = 0x4021c7;\u000a  textdomain(0x40b305);\u000a  uStack256 = 0x4021d1;\u000a  atexit(close_stdout);\u000a  local_d8 = (char *)0x0;\u000a  local_e0 = 0;\u000a  local_d0 = (char *)0x0;\u000a  pcStack280 = (char *)0x0;\u000a  pcStack272 = (char *)0x0;\u000a  arg = (char *)0x0;\u000aLAB_00402210:\u000a  iVar5 = (int)((ulong)argv & 0xffffffff);\u000a  uStack256 = 0x402227;\u000a  iVar3 = getopt_long((ulong)argv & 0xffffffff);\u000a  uStack296 = local_e0;\u000a  if (iVar3 < 0x49) {\u000a    if (iVar3 != -1) {\u000a      if (iVar3 == -0x83) {\u000aLAB_00402600:\u000a        uStack256 = 0x402628;\u000a        version_etc(stdout,"date","GNU coreutils",Version,"David MacKenzie",0);\u000a                    /* WARNING: Subroutine does not return */\u000a        uStack256 = 0x40262f;\u000a        exit(0);\u000a      }\u000a      if (iVar3 == -0x82) {\u000a        uStack256 = 0x402600;\u000a        usage(0);\u000a        goto LAB_00402600;\u000a      }\u000a      goto switchD_00402241_caseD_4a;\u000a    }\u000a    uVar13 = (((uint)(local_d8 != (char *)0x0) + 1) - (uint)(pcStack280 == (char *)0x0)) +\u000a             (uint)(arg != (char *)0x0);\u000a    uStack264 = (ulong)uVar13;\u000a    local_c8 = arg;\u000a    if (1 < uVar13) goto LAB_00402639;\u000a    cVar11 = (char)local_e0;\u000a    if ((cVar11 != 0) && (uVar13 != 0)) {\u000a      pcVar12 = "the options to print and set the time may not be used together";\u000a      local_c8 = arg;\u000a      goto LAB_00402649;\u000a    }\u000a    if (optind < iVar5) {\u000a      if (optind + 1 < iVar5) {\u000a        uStack256 = 0x402684;\u000a        local_c8 = arg;\u000a        uVar8 = dcgettext(0,"extra operand %s",5);\u000a        arg = in_RSI[(long)optind + 1];\u000aLAB_004026b4:\u000a        uStack256 = 0x4026b9;\u000a        arg = quote(arg);\u000a        pcStack328 = (char *)0x0;\u000a        uStack256 = 0x4026ca;\u000a        error(0,0,uVar8,arg);\u000a        pcStack336 = (char *)0x1;\u000a        uStack256 = 0x4026d4;\u000a        usage();\u000a        if ((*pcStack336 == '-') && (pcStack336[1] == 0)) {\u000a          uStack320 = extraout_RDX;\u000a          uStack256 = uVar8;\u000a          pcStack336 = (char *)dcgettext(0,"standard input",5);\u000a          fp = stdin;\u000a        }\u000a        else {\u000a          uStack320 = extraout_RDX;\u000a          uStack256 = uVar8;\u000a          fp = (FILE *)fopen(pcStack336,"r");\u000a          if (fp == (FILE *)0x0) {\u000a            puVar9 = (uint *)__errno_location();\u000a            uVar1 = *puVar9;\u000a            arg = quotearg_n_style_colon((char *)0x0);\u000a            error(1,(ulong)uVar1,&DAT_0040b727,arg);\u000a            fp = (FILE *)0x0;\u000a          }\u000a        }\u000a        pcStack352 = (char *)0x0;\u000a        sStack344 = 0;\u000a        _Var10 = getline(&pcStack352,&sStack344,(FILE *)fp);\u000a        uVar14 = CONCAT71((uint7)(uint3)(uVar13 >> 8),1);\u000a        iVar3 = (int)uVar14;\u000a        if (-1 < _Var10) {\u000a          do {\u000a            _Var2 = parse_datetime(&tStack312,pcStack352,(timespec *)0x0);\u000a            if (_Var2 == false) {\u000a              if (pcStack352[_Var10 + -1] == '\u005cn') {\u000a                pcStack352[_Var10 + -1] = 0;\u000a              }\u000a              uVar8 = dcgettext(0,"invalid date %s",5);\u000a              arg = quote(pcStack352);\u000a              error(0,0,uVar8,arg);\u000a              uVar14 = 0;\u000a            }\u000a            else {\u000a              _Var2 = show_date(pcStack328,tStack312.tv_sec);\u000a              uVar14 = uVar14 & 0xffffffffffffff00 | (ulong)(_Var2 & (byte)uVar14);\u000a            }\u000a            iVar3 = (int)uVar14;\u000a            _Var10 = getline(&pcStack352,&sStack344,(FILE *)fp);\u000a          } while (-1 < _Var10);\u000a        }\u000a        iVar5 = rpl_fclose(fp);\u000a        if (iVar5 == -1) {\u000a          puVar9 = (uint *)__errno_location();\u000a          uVar13 = *puVar9;\u000a          arg = quotearg_n_style_colon((char *)0x0);\u000a          error(1,(ulong)uVar13,&DAT_0040b727,arg);\u000a        }\u000a        free(pcStack352);\u000a        return iVar3;\u000a      }\u000a      if (*in_RSI[(long)optind] != '+') {\u000a        if ((cVar11 != 0) || (uVar13 != 0)) {\u000a          uStack256 = 0x4026a6;\u000a          local_c8 = arg;\u000a          uVar8 = dcgettext(0,\u000a                            "the argument %s lacks a leading \u005c'+\u005c';\u005cnwhen using an option to specify date(s), any non-option\u005cnargument must be a format string beginning with \u005c'+\u005c'"\u000a                            ,5);\u000a          arg = in_RSI[(long)optind];\u000a          goto LAB_004026b4;\u000a        }\u000a        goto LAB_00402415;\u000a      }\u000a      local_c8 = arg;\u000a      if (pcStack272 != (char *)0x0) {\u000a        uStack256 = 0x4023d7;\u000a        local_c8 = arg;\u000a        uVar8 = dcgettext(0,"multiple output formats specified",5);\u000a        uStack256 = 0x4023eb;\u000a        error(1,0,uVar8);\u000a      }\u000a      lVar7 = (long)optind;\u000a      optind = optind + 1;\u000a      pcStack272 = in_RSI[lVar7] + 1;\u000a    }\u000a    else {\u000aLAB_00402415:\u000a      local_c8 = arg;\u000a      if (pcStack272 == (char *)0x0) {\u000a        uStack256 = 0x402424;\u000a        local_c8 = arg;\u000a        arg = nl_langinfo(0x2006c);\u000a        pcStack272 = "%a %b %e %H:%M:%S %Z %Y";\u000a        if (*arg != 0) {\u000a          pcStack272 = arg;\u000a        }\u000a      }\u000a    }\u000a    uStack256 = 0x40243b;\u000a    arg = getenv("TZ");\u000a    uStack256 = 0x402443;\u000a    tz = tzalloc(arg);\u000a    if (pcStack280 != (char *)0x0) {\u000a      uStack256 = 0x402456;\u000a      _Var2 = batch_convert(pcStack280,pcStack272,tz);\u000a      uVar13 = (uint)_Var2;\u000a      goto LAB_004025d6;\u000a    }\u000a    if ((cVar11 == 0) && (uVar13 == 0)) {\u000a      if (iVar5 <= optind) {\u000a        uStack256 = 0x402516;\u000a        gettime(&local_f0);\u000a        goto LAB_00402572;\u000a      }\u000a      arg = in_RSI[(long)optind];\u000a      uStack256 = 0x40248f;\u000a      _Var2 = posixtime((time_t *)&local_f0,arg);\u000a      local_f0.tv_nsec = 0;\u000a      local_f0 = (timespec)ZEXT816(local_f0.tv_sec);\u000a      uStack296 = 1;\u000a      if (_Var2 == false) {\u000aLAB_0040253c:\u000a        uStack256 = 0x40254d;\u000a        uVar8 = dcgettext(0,"invalid date %s",5);\u000a        uStack256 = 0x40255b;\u000a        arg = quote(arg);\u000a        uStack256 = 0x402572;\u000a        error(1,0,uVar8,arg);\u000a        goto LAB_00402572;\u000a      }\u000aLAB_0040257c:\u000a      uStack256 = 0x402586;\u000a      iVar3 = settime(&local_f0);\u000a      if (iVar3 == 0) {\u000a        uVar13 = 1;\u000a      }\u000a      else {\u000a        uStack256 = 0x40258f;\u000a        puVar9 = (uint *)__errno_location();\u000a        uVar1 = *puVar9;\u000a        uVar13 = 0;\u000a        uStack256 = 0x4025a4;\u000a        uVar8 = dcgettext(0,"cannot set date",5);\u000a        uStack256 = 0x4025b5;\u000a        error(0,(ulong)uVar1,uVar8,uVar8);\u000a      }\u000a    }\u000a    else {\u000a      if (local_d8 == (char *)0x0) {\u000a        arg = local_c8;\u000a        if (local_d0 != (char *)0x0) {\u000a          arg = local_d0;\u000a        }\u000a        uStack256 = 0x402538;\u000a        _Var2 = parse_datetime(&local_f0,arg,(timespec *)0x0);\u000a        if (_Var2 == false) goto LAB_0040253c;\u000a      }\u000a      else {\u000a        uStack256 = 0x4024c1;\u000a        iVar3 = stat(local_d8,(stat *)&local_c0);\u000a        if (iVar3 != 0) {\u000a          uStack256 = 0x4024ca;\u000a          puVar9 = (uint *)__errno_location();\u000a          uVar13 = *puVar9;\u000a          uStack256 = 0x4024db;\u000a          arg = quotearg_n_style_colon((char *)0x0);\u000a          uStack296 = local_e0;\u000a          uStack256 = 0x4024f6;\u000a          error(1,(ulong)uVar13,&DAT_0040b727,arg);\u000a        }\u000a        uStack256 = 0x402500;\u000a        local_f0 = get_stat_mtime(&local_c0);\u000a      }\u000aLAB_00402572:\u000a      uVar13 = 1;\u000a      if ((uStack296 & 1) != 0) goto LAB_0040257c;\u000a    }\u000a    uStack256 = 0x4025d1;\u000a    _Var2 = show_date(pcStack272,local_f0.tv_sec);\u000a    uVar13 = (uint)_Var2 & uVar13;\u000aLAB_004025d6:\u000a    return (int)(uVar13 ^ 1);\u000a  }\u000a  pcVar12 = "%a, %d %b %Y %H:%M:%S %z";\u000a  switch(iVar3) {\u000a  case 0x49:\u000a    if (optarg == (char *)0x0) {\u000a      TVar4 = TIME_SPEC_DATE;\u000a    }\u000a    else {\u000a      uStack256 = 0x402279;\u000a      pVar6 = __xargmatch_internal\u000a                        ("--iso-8601",optarg,time_spec_string,(char *)time_spec,4,argmatch_die);\u000a      TVar4 = time_spec[pVar6];\u000a    }\u000a    pcVar12 = "%Y-%m-%d" + (ulong)TVar4 * 0x20;\u000a    break;\u000a  default:\u000aswitchD_00402241_caseD_4a:\u000a    uStack256 = 0x402639;\u000a    usage(1);\u000aLAB_00402639:\u000a    pcVar12 = "the options to specify dates for printing are mutually exclusive";\u000aLAB_00402649:\u000a    uStack256 = 0x402653;\u000a    uVar8 = dcgettext(0,pcVar12,5);\u000a    uStack256 = 0x402664;\u000a    error(0,0,uVar8,uVar8);\u000a    uStack256 = 0x40266e;\u000a    usage(1);\u000a    goto LAB_0040266e;\u000a  case 0x52:\u000a    goto switchD_00402241_caseD_52;\u000a  case 100:\u000a    arg = optarg;\u000a    goto LAB_00402210;\u000a  case 0x66:\u000a    pcStack280 = optarg;\u000a    goto LAB_00402210;\u000a  case 0x72:\u000a    local_d8 = optarg;\u000a    goto LAB_00402210;\u000a  case 0x73:\u000a    local_d0 = optarg;\u000a    local_e0 = CONCAT71((int7)((ulong)optarg >> 8),1);\u000a    goto LAB_00402210;\u000a  case 0x75:\u000a    goto switchD_00402241_caseD_75;\u000a  case 0x80:\u000a    uStack256 = 0x4022ea;\u000a    pVar6 = __xargmatch_internal\u000a                      ("--rfc-3339",optarg,time_spec_string + 2,(char *)(time_spec + 2),4,\u000a                       argmatch_die);\u000a    pcVar12 = "%Y-%m-%d" + (ulong)time_spec[pVar6 + 2] * 0x20;\u000a  }\u000a  if (pcVar12 != (char *)0x0) {\u000aswitchD_00402241_caseD_52:\u000a    bVar15 = pcStack272 != (char *)0x0;\u000a    pcStack272 = pcVar12;\u000a    if (bVar15) {\u000a      uStack256 = 0x40233c;\u000a      uVar8 = dcgettext(0,"multiple output formats specified",5);\u000a      uStack256 = 0x402350;\u000a      error(1,0,uVar8,uVar8);\u000a      pcStack272 = pcVar12;\u000a    }\u000a  }\u000a  goto LAB_00402210;\u000aswitchD_00402241_caseD_75:\u000a  uStack256 = 0x4022b5;\u000a  iVar3 = putenv("TZ=UTC0");\u000a  if (iVar3 != 0) {\u000aLAB_0040266e:\u000a                    /* WARNING: Subroutine does not return */\u000a    uStack256 = 0x402673;\u000a    xalloc_die();\u000a  }\u000a  goto LAB_00402210;\u000a}\u000a\u000a
p1249
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xc8\nMOV R12,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [R12]\nCALL 0x004068b0\nMOV EDI,0x6\nMOV ESI,0x40d569\nCALL 0x00401a70\nMOV EDI,0x40b305\nMOV ESI,0x40b2cb\nCALL 0x00401810\nMOV EDI,0x40b305\nCALL 0x004017f0\nMOV EDI,0x402d30\nCALL 0x00409c80\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x20],RAX\nXOR R13D,R13D\nXOR R14D,R14D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nXOR R15D,R15D\nJMP 0x00402210\nMOV RAX,qword ptr [0x00610300]\nMOV qword ptr [RSP + 0x28],RAX\nMOV AL,0x1\nMOV qword ptr [RSP + 0x18],RAX\nNOP word ptr [RAX + RAX*0x1]\nMOV EDX,0x409ea0\nMOV ECX,0x409eb0\nXOR R8D,R8D\nMOV EDI,EBP\nMOV RSI,R12\nCALL 0x00401850\nCMP EAX,0x48\nJLE 0x00402358\nADD EAX,-0x49\nCMP EAX,0x37\nJA 0x0040262f\nMOV EBX,0x40a1c0\nJMP qword ptr [0x409ce0 + RAX*0x8]\nMOV RSI,qword ptr [0x00610300]\nTEST RSI,RSI\nJZ 0x00402307\nMOV R9,qword ptr [0x00610278]\nMOV EDI,0x40b2ee\nMOV EDX,0x40a0f0\nMOV ECX,0x40a0d0\nMOV R8D,0x4\nCALL 0x00402c30\nMOV EAX,dword ptr [0x40a0d0 + RAX*0x4]\nJMP 0x00402309\nMOV R15,qword ptr [0x00610300]\nJMP 0x00402210\nMOV R13,qword ptr [0x00610300]\nJMP 0x00402210\nMOV RAX,qword ptr [0x00610300]\nMOV qword ptr [RSP + 0x20],RAX\nJMP 0x00402210\nMOV EDI,0x40b2f9\nCALL 0x00401940\nTEST EAX,EAX\nJZ 0x00402210\nJMP 0x0040266e\nMOV RSI,qword ptr [0x00610300]\nMOV R9,qword ptr [0x00610278]\nMOV EDI,0x40b2e3\nMOV EDX,0x40a100\nMOV ECX,0x40a0d8\nMOV R8D,0x4\nCALL 0x00402c30\nMOV EAX,dword ptr [0x40a0d8 + RAX*0x4]\nSHL RAX,0x5\nLEA RBX,[0x40a070 + RAX]\nTEST RBX,RBX\nJZ 0x00402210\nJMP 0x0040231f\nXOR EAX,EAX\nMOV EAX,EAX\nSHL RAX,0x5\nLEA RBX,[0x40a120 + RAX]\nTEST RBX,RBX\nJZ 0x00402210\nTEST R14,R14\nMOV R14,RBX\nJZ 0x00402210\nXOR EDI,EDI\nMOV ESI,0x40b31f\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401ab0\nMOV R14,RBX\nJMP 0x00402210\nCMP EAX,-0x1\nJNZ 0x004025eb\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x30],R15\nTEST R15,R15\nSETNZ AL\nXOR R15D,R15D\nCMP qword ptr [RSP + 0x20],0x0\nSETNZ R15B\nCMP R13,0x1\nSBB R15D,-0x1\nADD R15D,EAX\nCMP R15D,0x2\nMOV RBX,qword ptr [RSP + 0x18]\nJNC 0x00402639\nTEST BL,BL\nJZ 0x004023a2\nTEST R15D,R15D\nJNZ 0x00402642\nMOVSXD RAX,dword ptr [0x006102f8]\nCMP EAX,EBP\nJGE 0x00402415\nLEA ECX,[RAX + 0x1]\nCMP ECX,EBP\nJL 0x00402673\nMOV RAX,qword ptr [R12 + RAX*0x8]\nCMP byte ptr [RAX],0x2b\nJNZ 0x00402404\nTEST R14,R14\nJZ 0x004023eb\nXOR EDI,EDI\nMOV ESI,0x40b31f\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401ab0\nMOVSXD RAX,dword ptr [0x006102f8]\nLEA ECX,[RAX + 0x1]\nMOV dword ptr [0x006102f8],ECX\nMOV R14,qword ptr [R12 + RAX*0x8]\nINC R14\nJMP 0x00402431\nTEST BL,BL\nJNZ 0x00402695\nTEST R15D,R15D\nJNZ 0x00402695\nTEST R14,R14\nJNZ 0x00402431\nMOV EDI,0x2006c\nCALL 0x00401a10\nCMP byte ptr [RAX],0x0\nMOV R14D,0x40b463\nCMOVNZ R14,RAX\nMOV EDI,0x40b47b\nCALL 0x00401720\nMOV RDI,RAX\nCALL 0x00409260\nTEST R13,R13\nJZ 0x0040245e\nMOV RDI,R13\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x004026e0\nMOVZX EAX,AL\nJMP 0x004025d6\nTEST BL,BL\nJNZ 0x004024a7\nTEST R15D,R15D\nJNZ 0x004024a7\nMOV R13,RAX\nMOVSXD RAX,dword ptr [0x006102f8]\nCMP EAX,EBP\nJGE 0x0040250c\nMOV RBP,qword ptr [R12 + RAX*0x8]\nLEA RDI,[RSP + 0x8]\nMOV EDX,0xe\nMOV RSI,RBP\nCALL 0x00406590\nMOV qword ptr [RSP + 0x10],0x0\nMOV BL,0x1\nTEST AL,AL\nJZ 0x0040253c\nJMP 0x0040257c\nMOV R13,RAX\nMOV RBP,qword ptr [RSP + 0x20]\nTEST RBP,RBP\nJZ 0x00402518\nLEA RSI,[RSP + 0x38]\nMOV RDI,RBP\nCALL 0x00409cb0\nTEST EAX,EAX\nJZ 0x004024f6\nCALL 0x00401760\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x00407c60\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40b727\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RBX,qword ptr [RSP + 0x18]\nCALL 0x00401ab0\nLEA RDI,[RSP + 0x38]\nCALL 0x00408280\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],RDX\nJMP 0x00402572\nLEA RDI,[RSP + 0x8]\nCALL 0x00404670\nJMP 0x00402572\nMOV RAX,qword ptr [RSP + 0x28]\nTEST RAX,RAX\nMOV RBP,qword ptr [RSP + 0x30]\nCMOVNZ RBP,RAX\nLEA RDI,[RSP + 0x8]\nXOR EDX,EDX\nMOV RSI,RBP\nCALL 0x00405840\nTEST AL,AL\nJNZ 0x00402572\nXOR EDI,EDI\nMOV ESI,0x40b47e\nMOV EDX,0x5\nCALL 0x00401820\nMOV R15,RBX\nMOV RBX,RAX\nMOV RDI,RBP\nCALL 0x00407da0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nMOV RBX,R15\nCALL 0x00401ab0\nMOV EBP,0x1\nTEST BL,0x1\nJZ 0x004025bc\nLEA RDI,[RSP + 0x8]\nCALL 0x004081b0\nTEST EAX,EAX\nJZ 0x004025b7\nCALL 0x00401760\nMOV EBX,dword ptr [RAX]\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x40b48e\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00401ab0\nJMP 0x004025bc\nMOV EBP,0x1\nMOV RSI,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RDI,R14\nMOV RCX,R13\nCALL 0x004028b0\nMOVZX EAX,AL\nAND EAX,EBP\nXOR EAX,0x1\nADD RSP,0xc8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP EAX,0xffffff7d\nJZ 0x00402600\nCMP EAX,0xffffff7e\nJNZ 0x0040262f\nXOR EDI,EDI\nCALL 0x00401ca0\nMOV RDI,qword ptr [0x006102e8]\nMOV RCX,qword ptr [0x00610270]\nMOV ESI,0x40b499\nMOV EDX,0x40b301\nMOV R8D,0x40b30f\nXOR R9D,R9D\nXOR EAX,EAX\nCALL 0x00408690\nXOR EDI,EDI\nCALL 0x00401b20\nMOV EDI,0x1\nCALL 0x00401ca0\nXOR EDI,EDI\nMOV ESI,0x40b341\nJMP 0x00402649\nXOR EDI,EDI\nMOV ESI,0x40b382\nMOV EDX,0x5\nCALL 0x00401820\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401ab0\nMOV EDI,0x1\nCALL 0x00401ca0\nCALL 0x00408950\nXOR EDI,EDI\nMOV ESI,0x40b3c1\nMOV EDX,0x5\nCALL 0x00401820\nMOV RBP,RAX\nMOVSXD RAX,dword ptr [0x006102f8]\nMOV RDI,qword ptr [R12 + RAX*0x8 + 0x8]\nJMP 0x004026b4\nXOR EDI,EDI\nMOV ESI,0x40b3d2\nMOV EDX,0x5\nCALL 0x00401820\nMOV RBP,RAX\nMOVSXD RAX,dword ptr [0x006102f8]\nMOV RDI,qword ptr [R12 + RAX*0x8]\nCALL 0x00407da0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBP\nCALL 0x00401ab0\nMOV EDI,0x1\nCALL 0x00401ca0\nNOP word ptr CS:[RAX + RAX*0x1]\n'
p1250
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec c8 00 00 00\n49 89 f4\n89 fd\n49 8b 3c 24\ne8 11 47 00 00\nbf 06 00 00 00\nbe 69 d5 40 00\ne8 c2 f8 ff ff\nbf 05 b3 40 00\nbe cb b2 40 00\ne8 53 f6 ff ff\nbf 05 b3 40 00\ne8 29 f6 ff ff\nbf 30 2d 40 00\ne8 af 7a 00 00\nb8 00 00 00 00\n48 89 44 24 20\n45 31 ed\n45 31 f6\n31 c0\n48 89 44 24 18\n31 c0\n48 89 44 24 28\n45 31 ff\neb 1c\n48 8b 05 05 e1 20 00\n48 89 44 24 28\nb0 01\n48 89 44 24 18\n66 0f 1f 84 00 00 00 00 00\nba a0 9e 40 00\nb9 b0 9e 40 00\n45 31 c0\n89 ef\n4c 89 e6\ne8 29 f6 ff ff\n83 f8 48\n0f 8e 28 01 00 00\n83 c0 b7\n83 f8 37\n0f 87 f3 03 00 00\nbb c0 a1 40 00\nff 24 c5 e0 9c 40 00\n48 8b 35 b1 e0 20 00\n48 85 f6\n0f 84 af 00 00 00\n4c 8b 0d 19 e0 20 00\nbf ee b2 40 00\nba f0 a0 40 00\nb9 d0 a0 40 00\n41 b8 04 00 00 00\ne8 b7 09 00 00\n8b 04 85 d0 a0 40 00\ne9 84 00 00 00\n4c 8b 3d 74 e0 20 00\neb 82\n4c 8b 2d 6b e0 20 00\ne9 76 ff ff ff\n48 8b 05 5f e0 20 00\n48 89 44 24 20\ne9 65 ff ff ff\nbf f9 b2 40 00\ne8 8b f6 ff ff\n85 c0\n0f 84 53 ff ff ff\ne9 ac 03 00 00\n48 8b 35 37 e0 20 00\n4c 8b 0d a8 df 20 00\nbf e3 b2 40 00\nba 00 a1 40 00\nb9 d8 a0 40 00\n41 b8 04 00 00 00\ne8 46 09 00 00\n8b 04 85 d8 a0 40 00\n48 c1 e0 05\n48 8d 98 70 a0 40 00\n48 85 db\n0f 84 0b ff ff ff\neb 18\n31 c0\n89 c0\n48 c1 e0 05\n48 8d 98 20 a1 40 00\n48 85 db\n0f 84 f1 fe ff ff\n4d 85 f6\n49 89 de\n0f 84 e5 fe ff ff\n31 ff\nbe 1f b3 40 00\nba 05 00 00 00\ne8 e4 f4 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 60 f7 ff ff\n49 89 de\ne9 b8 fe ff ff\n83 f8 ff\n0f 85 8a 02 00 00\n31 c0\n4c 89 7c 24 30\n4d 85 ff\n0f 95 c0\n45 31 ff\n48 83 7c 24 20 00\n41 0f 95 c7\n49 83 fd 01\n41 83 df ff\n41 01 c7\n41 83 ff 02\n48 8b 5c 24 18\n0f 83 a4 02 00 00\n84 db\n74 09\n45 85 ff\n0f 85 a0 02 00 00\n48 63 05 4f df 20 00\n39 e8\n7d 68\n8d 48 01\n39 e9\n0f 8c bb 02 00 00\n49 8b 04 c4\n80 38 2b\n75 43\n4d 85 f6\n74 25\n31 ff\nbe 1f b3 40 00\nba 05 00 00 00\ne8 49 f4 ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 c5 f6 ff ff\n48 63 05 06 df 20 00\n8d 48 01\n89 0d fd de 20 00\n4d 8b 34 c4\n49 ff c6\neb 2d\n84 db\n0f 85 89 02 00 00\n45 85 ff\n0f 85 80 02 00 00\n4d 85 f6\n75 17\nbf 6c 00 02 00\ne8 ec f5 ff ff\n80 38 00\n41 be 63 b4 40 00\n4c 0f 45 f0\nbf 7b b4 40 00\ne8 e5 f2 ff ff\n48 89 c7\ne8 1d 6e 00 00\n4d 85 ed\n74 16\n4c 89 ef\n4c 89 f6\n48 89 c2\ne8 8a 02 00 00\n0f b6 c0\ne9 78 01 00 00\n84 db\n75 45\n45 85 ff\n75 40\n49 89 c5\n48 63 05 87 de 20 00\n39 e8\n0f 8d 93 00 00 00\n49 8b 2c c4\n48 8d 7c 24 08\nba 0e 00 00 00\n48 89 ee\ne8 01 41 00 00\n48 c7 44 24 10 00 00 00 00\nb3 01\n84 c0\n0f 84 9a 00 00 00\ne9 d5 00 00 00\n49 89 c5\n48 8b 6c 24 20\n48 85 ed\n74 64\n48 8d 74 24 38\n48 89 ef\ne8 ef 77 00 00\n85 c0\n74 31\ne8 96 f2 ff ff\n8b 18\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 85 57 00 00\n48 89 c1\nbf 01 00 00 00\nba 27 b7 40 00\n31 c0\n89 de\n48 8b 5c 24 18\ne8 ba f5 ff ff\n48 8d 7c 24 38\ne8 80 5d 00 00\n48 89 44 24 08\n48 89 54 24 10\neb 66\n48 8d 7c 24 08\ne8 5a 21 00 00\neb 5a\n48 8b 44 24 28\n48 85 c0\n48 8b 6c 24 30\n48 0f 45 e8\n48 8d 7c 24 08\n31 d2\n48 89 ee\ne8 08 33 00 00\n84 c0\n75 36\n31 ff\nbe 7e b4 40 00\nba 05 00 00 00\ne8 d3 f2 ff ff\n49 89 df\n48 89 c3\n48 89 ef\ne8 45 58 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\n4c 89 fb\ne8 3e f5 ff ff\nbd 01 00 00 00\nf6 c3 01\n74 40\n48 8d 7c 24 08\ne8 2a 5c 00 00\n85 c0\n74 2d\ne8 d1 f1 ff ff\n8b 18\n31 ed\n31 ff\nbe 8e b4 40 00\nba 05 00 00 00\ne8 7c f2 ff ff\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ca\ne8 fb f4 ff ff\neb 05\nbd 01 00 00 00\n48 8b 74 24 08\n48 8b 54 24 10\n4c 89 f7\n4c 89 e9\ne8 df 02 00 00\n0f b6 c0\n21 e8\n83 f0 01\n48 81 c4 c8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n3d 7d ff ff ff\n74 0e\n3d 7e ff ff ff\n75 36\n31 ff\ne8 a0 f6 ff ff\n48 8b 3d e1 dc 20 00\n48 8b 0d 62 dc 20 00\nbe 99 b4 40 00\nba 01 b3 40 00\n41 b8 0f b3 40 00\n45 31 c9\n31 c0\ne8 68 60 00 00\n31 ff\ne8 f1 f4 ff ff\nbf 01 00 00 00\ne8 67 f6 ff ff\n31 ff\nbe 41 b3 40 00\neb 07\n31 ff\nbe 82 b3 40 00\nba 05 00 00 00\ne8 cd f1 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 4c f4 ff ff\nbf 01 00 00 00\ne8 32 f6 ff ff\ne8 dd 62 00 00\n31 ff\nbe c1 b3 40 00\nba 05 00 00 00\ne8 9c f1 ff ff\n48 89 c5\n48 63 05 6a dc 20 00\n49 8b 7c c4 08\neb 1f\n31 ff\nbe d2 b3 40 00\nba 05 00 00 00\ne8 7a f1 ff ff\n48 89 c5\n48 63 05 48 dc 20 00\n49 8b 3c c4\ne8 e7 56 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ea\ne8 e6 f3 ff ff\nbf 01 00 00 00\ne8 cc f5 ff ff\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n'
p1251
S'.text:0000000000402180\n.text:0000000000402181\n.text:0000000000402183\n.text:0000000000402185\n.text:0000000000402187\n.text:0000000000402189\n.text:000000000040218a\n.text:0000000000402191\n.text:0000000000402194\n.text:0000000000402196\n.text:000000000040219a\n.text:000000000040219f\n.text:00000000004021a4\n.text:00000000004021a9\n.text:00000000004021ae\n.text:00000000004021b3\n.text:00000000004021b8\n.text:00000000004021bd\n.text:00000000004021c2\n.text:00000000004021c7\n.text:00000000004021cc\n.text:00000000004021d1\n.text:00000000004021d6\n.text:00000000004021db\n.text:00000000004021de\n.text:00000000004021e1\n.text:00000000004021e3\n.text:00000000004021e8\n.text:00000000004021ea\n.text:00000000004021ef\n.text:00000000004021f2\n.text:00000000004021f4\n.text:00000000004021fb\n.text:0000000000402200\n.text:0000000000402202\n.text:0000000000402207\n.text:0000000000402210\n.text:0000000000402215\n.text:000000000040221a\n.text:000000000040221d\n.text:000000000040221f\n.text:0000000000402222\n.text:0000000000402227\n.text:000000000040222a\n.text:0000000000402230\n.text:0000000000402233\n.text:0000000000402236\n.text:000000000040223c\n.text:0000000000402241\n.text:0000000000402248\n.text:000000000040224f\n.text:0000000000402252\n.text:0000000000402258\n.text:000000000040225f\n.text:0000000000402264\n.text:0000000000402269\n.text:000000000040226e\n.text:0000000000402274\n.text:0000000000402279\n.text:0000000000402280\n.text:0000000000402285\n.text:000000000040228c\n.text:000000000040228e\n.text:0000000000402295\n.text:000000000040229a\n.text:00000000004022a1\n.text:00000000004022a6\n.text:00000000004022ab\n.text:00000000004022b0\n.text:00000000004022b5\n.text:00000000004022b7\n.text:00000000004022bd\n.text:00000000004022c2\n.text:00000000004022c9\n.text:00000000004022d0\n.text:00000000004022d5\n.text:00000000004022da\n.text:00000000004022df\n.text:00000000004022e5\n.text:00000000004022ea\n.text:00000000004022f1\n.text:00000000004022f5\n.text:00000000004022fc\n.text:00000000004022ff\n.text:0000000000402305\n.text:0000000000402307\n.text:0000000000402309\n.text:000000000040230b\n.text:000000000040230f\n.text:0000000000402316\n.text:0000000000402319\n.text:000000000040231f\n.text:0000000000402322\n.text:0000000000402325\n.text:000000000040232b\n.text:000000000040232d\n.text:0000000000402332\n.text:0000000000402337\n.text:000000000040233c\n.text:000000000040233f\n.text:0000000000402344\n.text:0000000000402346\n.text:0000000000402348\n.text:000000000040234b\n.text:0000000000402350\n.text:0000000000402353\n.text:0000000000402358\n.text:000000000040235b\n.text:0000000000402361\n.text:0000000000402363\n.text:0000000000402368\n.text:000000000040236b\n.text:000000000040236e\n.text:0000000000402371\n.text:0000000000402377\n.text:000000000040237b\n.text:000000000040237f\n.text:0000000000402383\n.text:0000000000402386\n.text:000000000040238a\n.text:000000000040238f\n.text:0000000000402395\n.text:0000000000402397\n.text:0000000000402399\n.text:000000000040239c\n.text:00000000004023a2\n.text:00000000004023a9\n.text:00000000004023ab\n.text:00000000004023ad\n.text:00000000004023b0\n.text:00000000004023b2\n.text:00000000004023b8\n.text:00000000004023bc\n.text:00000000004023bf\n.text:00000000004023c1\n.text:00000000004023c4\n.text:00000000004023c6\n.text:00000000004023c8\n.text:00000000004023cd\n.text:00000000004023d2\n.text:00000000004023d7\n.text:00000000004023da\n.text:00000000004023df\n.text:00000000004023e1\n.text:00000000004023e3\n.text:00000000004023e6\n.text:00000000004023eb\n.text:00000000004023f2\n.text:00000000004023f5\n.text:00000000004023fb\n.text:00000000004023ff\n.text:0000000000402402\n.text:0000000000402404\n.text:0000000000402406\n.text:000000000040240c\n.text:000000000040240f\n.text:0000000000402415\n.text:0000000000402418\n.text:000000000040241a\n.text:000000000040241f\n.text:0000000000402424\n.text:0000000000402427\n.text:000000000040242d\n.text:0000000000402431\n.text:0000000000402436\n.text:000000000040243b\n.text:000000000040243e\n.text:0000000000402443\n.text:0000000000402446\n.text:0000000000402448\n.text:000000000040244b\n.text:000000000040244e\n.text:0000000000402451\n.text:0000000000402456\n.text:0000000000402459\n.text:000000000040245e\n.text:0000000000402460\n.text:0000000000402462\n.text:0000000000402465\n.text:0000000000402467\n.text:000000000040246a\n.text:0000000000402471\n.text:0000000000402473\n.text:0000000000402479\n.text:000000000040247d\n.text:0000000000402482\n.text:0000000000402487\n.text:000000000040248a\n.text:000000000040248f\n.text:0000000000402498\n.text:000000000040249a\n.text:000000000040249c\n.text:00000000004024a2\n.text:00000000004024a7\n.text:00000000004024aa\n.text:00000000004024af\n.text:00000000004024b2\n.text:00000000004024b4\n.text:00000000004024b9\n.text:00000000004024bc\n.text:00000000004024c1\n.text:00000000004024c3\n.text:00000000004024c5\n.text:00000000004024ca\n.text:00000000004024cc\n.text:00000000004024ce\n.text:00000000004024d3\n.text:00000000004024d6\n.text:00000000004024db\n.text:00000000004024de\n.text:00000000004024e3\n.text:00000000004024e8\n.text:00000000004024ea\n.text:00000000004024ec\n.text:00000000004024f1\n.text:00000000004024f6\n.text:00000000004024fb\n.text:0000000000402500\n.text:0000000000402505\n.text:000000000040250a\n.text:000000000040250c\n.text:0000000000402511\n.text:0000000000402516\n.text:0000000000402518\n.text:000000000040251d\n.text:0000000000402520\n.text:0000000000402525\n.text:0000000000402529\n.text:000000000040252e\n.text:0000000000402530\n.text:0000000000402533\n.text:0000000000402538\n.text:000000000040253a\n.text:000000000040253c\n.text:000000000040253e\n.text:0000000000402543\n.text:0000000000402548\n.text:000000000040254d\n.text:0000000000402550\n.text:0000000000402553\n.text:0000000000402556\n.text:000000000040255b\n.text:000000000040255e\n.text:0000000000402563\n.text:0000000000402565\n.text:0000000000402567\n.text:000000000040256a\n.text:000000000040256d\n.text:0000000000402572\n.text:0000000000402577\n.text:000000000040257a\n.text:000000000040257c\n.text:0000000000402581\n.text:0000000000402586\n.text:0000000000402588\n.text:000000000040258a\n.text:000000000040258f\n.text:0000000000402591\n.text:0000000000402593\n.text:0000000000402595\n.text:000000000040259a\n.text:000000000040259f\n.text:00000000004025a4\n.text:00000000004025a7\n.text:00000000004025a9\n.text:00000000004025ab\n.text:00000000004025ad\n.text:00000000004025b0\n.text:00000000004025b5\n.text:00000000004025b7\n.text:00000000004025bc\n.text:00000000004025c1\n.text:00000000004025c6\n.text:00000000004025c9\n.text:00000000004025cc\n.text:00000000004025d1\n.text:00000000004025d4\n.text:00000000004025d6\n.text:00000000004025d9\n.text:00000000004025e0\n.text:00000000004025e1\n.text:00000000004025e3\n.text:00000000004025e5\n.text:00000000004025e7\n.text:00000000004025e9\n.text:00000000004025ea\n.text:00000000004025eb\n.text:00000000004025f0\n.text:00000000004025f2\n.text:00000000004025f7\n.text:00000000004025f9\n.text:00000000004025fb\n.text:0000000000402600\n.text:0000000000402607\n.text:000000000040260e\n.text:0000000000402613\n.text:0000000000402618\n.text:000000000040261e\n.text:0000000000402621\n.text:0000000000402623\n.text:0000000000402628\n.text:000000000040262a\n.text:000000000040262f\n.text:0000000000402634\n.text:0000000000402639\n.text:000000000040263b\n.text:0000000000402640\n.text:0000000000402642\n.text:0000000000402644\n.text:0000000000402649\n.text:000000000040264e\n.text:0000000000402653\n.text:0000000000402656\n.text:0000000000402658\n.text:000000000040265a\n.text:000000000040265c\n.text:000000000040265f\n.text:0000000000402664\n.text:0000000000402669\n.text:000000000040266e\n.text:0000000000402673\n.text:0000000000402675\n.text:000000000040267a\n.text:000000000040267f\n.text:0000000000402684\n.text:0000000000402687\n.text:000000000040268e\n.text:0000000000402693\n.text:0000000000402695\n.text:0000000000402697\n.text:000000000040269c\n.text:00000000004026a1\n.text:00000000004026a6\n.text:00000000004026a9\n.text:00000000004026b0\n.text:00000000004026b4\n.text:00000000004026b9\n.text:00000000004026bc\n.text:00000000004026be\n.text:00000000004026c0\n.text:00000000004026c2\n.text:00000000004026c5\n.text:00000000004026ca\n.text:00000000004026cf\n.text:00000000004026d4\n'
p1252
tp1253
sS'xcharalloc'
p1254
(S'\n__stdcall xcharalloc(size_t n)\n'
p1255
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1256
S'JMP 0x004087c0\n'
p1257
S'e9 2b ff ff ff\n'
p1258
S'.text:0000000000408890\n'
p1259
tp1260
sS'c_isupper'
p1261
(S'\n__stdcall c_isupper()\n'
p1262
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1263
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1264
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1265
S'.text:0000000000409810\n.text:0000000000409813\n.text:0000000000409816\n.text:0000000000409819\n'
p1266
tp1267
sS'time_t_int_add_ok'
p1268
(S'\n__stdcall time_t_int_add_ok(time_t a)\n'
p1269
V\u000aint time_t_int_add_ok(time_t a)\u000a\u000a{\u000a  uint in_ESI;\u000a  \u000a  return (int)((uint)((ulong)((long)(int)(((uint)a & in_ESI & 1) + ((int)in_ESI >> 1)) + (a >> 1) +\u000a                             0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p1270
S'MOV EAX,EDI\nAND EAX,ESI\nSAR RDI,1\nSAR ESI,1\nAND EAX,0x1\nADD EAX,ESI\nMOVSXD RCX,EAX\nADD RCX,RDI\nMOV RAX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nRET\n'
p1271
S'89 f8\n21 f0\n48 d1 ff\nd1 fe\n83 e0 01\n01 f0\n48 63 c8\n48 01 f9\n48 b8 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\nc3\n'
p1272
S'.text:00000000004091e0\n.text:00000000004091e2\n.text:00000000004091e4\n.text:00000000004091e7\n.text:00000000004091e9\n.text:00000000004091ec\n.text:00000000004091ee\n.text:00000000004091f1\n.text:00000000004091f4\n.text:00000000004091fe\n.text:0000000000409201\n.text:0000000000409205\n.text:0000000000409208\n'
p1273
tp1274
sS'c_isalnum'
p1275
(S'\n__stdcall c_isalnum()\n'
p1276
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1277
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x0040972b\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x0040972b\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x0040972a\nXOR EAX,EAX\nRET\n'
p1278
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p1279
S'.text:0000000000409710\n.text:0000000000409712\n.text:0000000000409715\n.text:0000000000409718\n.text:000000000040971a\n.text:0000000000409724\n.text:0000000000409728\n.text:000000000040972a\n.text:000000000040972b\n.text:000000000040972e\n.text:0000000000409731\n.text:0000000000409733\n.text:0000000000409735\n'
p1280
tp1281
sS'__errno_location'
p1282
(S'\n__stdcall __errno_location()\n'
p1283
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00610040)();\u000a  return piVar1;\u000a}\u000a\u000a
p1284
S'JMP qword ptr [0x00610040]\n'
p1285
S'ff 25 da e8 20 00\n'
p1286
S'.plt:0000000000401760\n'
p1287
tp1288
sS'x2nrealloc'
p1289
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p1290
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p1291
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x0040885c\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00408889\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x0040887a\nTEST RCX,RCX\nJNZ 0x0040887a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x00408800\nPUSH RAX\nCALL 0x00408950\n'
p1292
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p1293
S'.text:0000000000408830\n.text:0000000000408833\n.text:0000000000408836\n.text:0000000000408839\n.text:000000000040883b\n.text:0000000000408845\n.text:0000000000408847\n.text:000000000040884a\n.text:000000000040884d\n.text:000000000040884f\n.text:0000000000408852\n.text:0000000000408855\n.text:000000000040885a\n.text:000000000040885c\n.text:000000000040885f\n.text:0000000000408861\n.text:0000000000408866\n.text:0000000000408868\n.text:000000000040886b\n.text:000000000040886d\n.text:0000000000408874\n.text:0000000000408877\n.text:000000000040887a\n.text:000000000040887d\n.text:0000000000408881\n.text:0000000000408884\n.text:0000000000408889\n.text:000000000040888a\n'
p1294
tp1295
sS'quotearg_n_options'
p1296
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p1297
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p1298
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x00401760\nTEST R12D,R12D\nJS 0x00407a61\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x00610288]\nCMP dword ptr [0x00610290],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x0040797b\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x610298\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x00408800\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x00610288],R15\nJNZ 0x00407942\nMOVUPS XMM0,xmmword ptr [0x00610298]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x00610290]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x004018c0\nMOV dword ptr [0x00610290],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x00406ad0\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x004079dd\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x00407a4b\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x610390\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x00407a08\nCALL 0x00401730\nMOV RDI,R15\nCALL 0x00408890\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x00406ad0\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401750\n'
p1299
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 91 9e ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 9e 89 20 00\n44 39 25 9f 89 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 98 02 61 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 d8 0e 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d 53 89 20 00\n75 0b\n0f 10 05 5a 89 20 00\n41 0f 11 07\n8b 05 48 89 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 5d 9f ff ff\n89 1d 27 89 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 90 03 61 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 28 9d ff ff\n4c 89 ff\ne8 80 0e 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 ea 9c ff ff\n'
p1300
S'.text:00000000004078b0\n.text:00000000004078b1\n.text:00000000004078b3\n.text:00000000004078b5\n.text:00000000004078b7\n.text:00000000004078b9\n.text:00000000004078ba\n.text:00000000004078be\n.text:00000000004078c1\n.text:00000000004078c4\n.text:00000000004078c7\n.text:00000000004078ca\n.text:00000000004078cf\n.text:00000000004078d2\n.text:00000000004078d8\n.text:00000000004078dd\n.text:00000000004078df\n.text:00000000004078e3\n.text:00000000004078ea\n.text:00000000004078f1\n.text:00000000004078f6\n.text:00000000004078fb\n.text:0000000000407900\n.text:0000000000407902\n.text:0000000000407907\n.text:000000000040790a\n.text:000000000040790d\n.text:0000000000407913\n.text:0000000000407915\n.text:0000000000407918\n.text:000000000040791c\n.text:000000000040791f\n.text:0000000000407923\n.text:0000000000407928\n.text:000000000040792b\n.text:000000000040792e\n.text:0000000000407935\n.text:0000000000407937\n.text:000000000040793e\n.text:0000000000407942\n.text:0000000000407948\n.text:000000000040794b\n.text:000000000040794f\n.text:0000000000407952\n.text:0000000000407955\n.text:0000000000407959\n.text:000000000040795b\n.text:000000000040795e\n.text:0000000000407963\n.text:0000000000407969\n.text:000000000040796c\n.text:0000000000407971\n.text:0000000000407976\n.text:000000000040797b\n.text:000000000040797e\n.text:0000000000407982\n.text:0000000000407986\n.text:000000000040798b\n.text:000000000040798f\n.text:0000000000407993\n.text:0000000000407997\n.text:000000000040799b\n.text:000000000040799f\n.text:00000000004079a4\n.text:00000000004079a7\n.text:00000000004079aa\n.text:00000000004079ad\n.text:00000000004079b2\n.text:00000000004079b5\n.text:00000000004079b8\n.text:00000000004079bb\n.text:00000000004079bc\n.text:00000000004079c1\n.text:00000000004079c5\n.text:00000000004079c8\n.text:00000000004079cb\n.text:00000000004079cd\n.text:00000000004079d2\n.text:00000000004079d6\n.text:00000000004079db\n.text:00000000004079dd\n.text:00000000004079e1\n.text:00000000004079e6\n.text:00000000004079e9\n.text:00000000004079ec\n.text:00000000004079f1\n.text:00000000004079f6\n.text:00000000004079f9\n.text:00000000004079fe\n.text:0000000000407a01\n.text:0000000000407a03\n.text:0000000000407a08\n.text:0000000000407a0b\n.text:0000000000407a10\n.text:0000000000407a13\n.text:0000000000407a16\n.text:0000000000407a1b\n.text:0000000000407a1e\n.text:0000000000407a22\n.text:0000000000407a25\n.text:0000000000407a28\n.text:0000000000407a2d\n.text:0000000000407a32\n.text:0000000000407a37\n.text:0000000000407a3a\n.text:0000000000407a3d\n.text:0000000000407a3e\n.text:0000000000407a43\n.text:0000000000407a47\n.text:0000000000407a4b\n.text:0000000000407a4f\n.text:0000000000407a52\n.text:0000000000407a56\n.text:0000000000407a57\n.text:0000000000407a59\n.text:0000000000407a5b\n.text:0000000000407a5d\n.text:0000000000407a5f\n.text:0000000000407a60\n.text:0000000000407a61\n'
p1301
tp1302
sS'strcmp'
p1303
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1304
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00610138)();\u000a  return iVar1;\u000a}\u000a\u000a
p1305
S'JMP qword ptr [0x00610138]\n'
p1306
S'ff 25 e2 e7 20 00\n'
p1307
S'.plt:0000000000401950\n'
p1308
tp1309
sS'mktime_z'
p1310
(S'\n__stdcall mktime_z(timezone_t tz, tm * tm)\n'
p1311
V\u000atime_t mktime_z(timezone_t tz,tm *tm)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  time_t tVar3;\u000a  timezone_t tz_00;\u000a  tm *ptVar4;\u000a  time_t local_58;\u000a  tm local_50;\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    tVar3 = (*(code *)PTR_timegm_006101d8)(tm);\u000a    return tVar3;\u000a  }\u000a  tz_00 = set_tz(tz);\u000a  if (tz_00 != (timezone_t)0x0) {\u000a    local_58 = rpl_mktime(tm);\u000a    if (((local_58 != -1) ||\u000a        ((ptVar4 = localtime_r(&local_58,&local_50), ptVar4 != (tm *)0x0 &&\u000a         (iVar2 = equal_tm(tm,(tm *)&local_50), iVar2 != 0)))) &&\u000a       (_Var1 = save_abbr(tz,tm), _Var1 == false)) {\u000a      local_58 = -1;\u000a    }\u000a    _Var1 = revert_tz(tz_00);\u000a    if (_Var1 != false) {\u000a      return local_58;\u000a    }\u000a  }\u000a  return -1;\u000a}\u000a\u000a
p1312
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R15,RSI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x004095df\nMOV RDI,RBX\nCALL 0x004093b0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00409625\nMOV RDI,R15\nCALL 0x00409210\nMOV qword ptr [RSP],RAX\nCMP RAX,-0x1\nJZ 0x004095f0\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00409430\nTEST AL,AL\nJNZ 0x00409613\nMOV qword ptr [RSP],-0x1\nJMP 0x00409613\nMOV RDI,R15\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00401a90\nMOV RDI,RSP\nLEA RSI,[RSP + 0x8]\nCALL 0x00401780\nTEST RAX,RAX\nJZ 0x00409613\nLEA RSI,[RSP + 0x8]\nMOV RDI,R15\nCALL 0x00409640\nTEST EAX,EAX\nJNZ 0x004095c6\nMOV RDI,R14\nCALL 0x00409540\nTEST AL,AL\nJZ 0x00409625\nMOV RAX,qword ptr [RSP]\nJMP 0x0040962c\nMOV RAX,-0x1\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1313
S'41 57\n41 56\n53\n48 83 ec 40\n49 89 f7\n48 89 fb\n48 85 db\n74 3b\n48 89 df\ne8 04 fe ff ff\n49 89 c6\n4d 85 f6\n74 71\n4c 89 ff\ne8 54 fc ff ff\n48 89 04 24\n48 83 f8 ff\n74 2a\n48 89 df\n4c 89 fe\ne8 5f fe ff ff\n84 c0\n75 3e\n48 c7 04 24 ff ff ff ff\neb 34\n4c 89 ff\n48 83 c4 40\n5b\n41 5e\n41 5f\ne9 a0 84 ff ff\n48 89 e7\n48 8d 74 24 08\ne8 83 81 ff ff\n48 85 c0\n74 11\n48 8d 74 24 08\n4c 89 ff\ne8 31 00 00 00\n85 c0\n75 b3\n4c 89 f7\ne8 25 ff ff ff\n84 c0\n74 06\n48 8b 04 24\neb 07\n48 c7 c0 ff ff ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p1314
S'.text:0000000000409590\n.text:0000000000409592\n.text:0000000000409594\n.text:0000000000409595\n.text:0000000000409599\n.text:000000000040959c\n.text:000000000040959f\n.text:00000000004095a2\n.text:00000000004095a4\n.text:00000000004095a7\n.text:00000000004095ac\n.text:00000000004095af\n.text:00000000004095b2\n.text:00000000004095b4\n.text:00000000004095b7\n.text:00000000004095bc\n.text:00000000004095c0\n.text:00000000004095c4\n.text:00000000004095c6\n.text:00000000004095c9\n.text:00000000004095cc\n.text:00000000004095d1\n.text:00000000004095d3\n.text:00000000004095d5\n.text:00000000004095dd\n.text:00000000004095df\n.text:00000000004095e2\n.text:00000000004095e6\n.text:00000000004095e7\n.text:00000000004095e9\n.text:00000000004095eb\n.text:00000000004095f0\n.text:00000000004095f3\n.text:00000000004095f8\n.text:00000000004095fd\n.text:0000000000409600\n.text:0000000000409602\n.text:0000000000409607\n.text:000000000040960a\n.text:000000000040960f\n.text:0000000000409611\n.text:0000000000409613\n.text:0000000000409616\n.text:000000000040961b\n.text:000000000040961d\n.text:000000000040961f\n.text:0000000000409623\n.text:0000000000409625\n.text:000000000040962c\n.text:0000000000409630\n.text:0000000000409631\n.text:0000000000409633\n.text:0000000000409635\n'
p1315
tp1316
sS'set_custom_quoting'
p1317
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1318
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1319
S'TEST RDI,RDI\nMOV EAX,0x610350\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x00406a45\nTEST RDX,RDX\nJZ 0x00406a45\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x00401750\n'
p1320
S'48 85 ff\nb8 50 03 61 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 05 ad ff ff\n'
p1321
S'.text:0000000000406a20\n.text:0000000000406a23\n.text:0000000000406a28\n.text:0000000000406a2c\n.text:0000000000406a32\n.text:0000000000406a35\n.text:0000000000406a37\n.text:0000000000406a3a\n.text:0000000000406a3c\n.text:0000000000406a40\n.text:0000000000406a44\n.text:0000000000406a45\n.text:0000000000406a46\n'
p1322
tp1323
sS'c_isalpha'
p1324
(S'\n__stdcall c_isalpha()\n'
p1325
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1326
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x0040975b\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1327
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1328
S'.text:0000000000409740\n.text:0000000000409743\n.text:0000000000409746\n.text:0000000000409748\n.text:0000000000409752\n.text:0000000000409754\n.text:0000000000409757\n.text:000000000040975a\n.text:000000000040975b\n.text:000000000040975d\n'
p1329
tp1330
sS'quotearg_custom_mem'
p1331
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p1332
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1333
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x00407cc0\n'
p1334
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p1335
S'.text:0000000000407d50\n.text:0000000000407d53\n.text:0000000000407d56\n.text:0000000000407d59\n.text:0000000000407d5c\n.text:0000000000407d5e\n.text:0000000000407d61\n'
p1336
tp1337
sS'set_hhmmss'
p1338
(S'\n__stdcall set_hhmmss(parser_control * pc, long hour, long minutes, time_t sec, long nsec)\n'
p1339
V\u000avoid set_hhmmss(parser_control *pc,long hour,long minutes,time_t sec,long nsec)\u000a\u000a{\u000a  pc->hour = hour;\u000a  pc->minutes = minutes;\u000a  (pc->seconds).tv_sec = sec;\u000a  (pc->seconds).tv_nsec = nsec;\u000a  return;\u000a}\u000a\u000a
p1340
S'MOV qword ptr [RDI + 0x50],RSI\nMOV qword ptr [RDI + 0x58],RDX\nMOV qword ptr [RDI + 0x60],RCX\nMOV qword ptr [RDI + 0x68],R8\nRET\n'
p1341
S'48 89 77 50\n48 89 57 58\n48 89 4f 60\n4c 89 47 68\nc3\n'
p1342
S'.text:00000000004055d0\n.text:00000000004055d4\n.text:00000000004055d8\n.text:00000000004055dc\n.text:00000000004055e0\n'
p1343
tp1344
sS'rpl_calloc'
p1345
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1346
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_00610128)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1347
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x004089bb\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x004089c0\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x004089c0\nPUSH RAX\nCALL 0x00401760\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401930\n'
p1348
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 af 8d ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 65 8f ff ff\n'
p1349
S'.text:0000000000408980\n.text:0000000000408983\n.text:0000000000408988\n.text:000000000040898a\n.text:000000000040898d\n.text:0000000000408992\n.text:0000000000408994\n.text:0000000000408997\n.text:000000000040899b\n.text:000000000040899d\n.text:00000000004089a0\n.text:00000000004089a3\n.text:00000000004089a6\n.text:00000000004089a9\n.text:00000000004089ab\n.text:00000000004089ac\n.text:00000000004089b1\n.text:00000000004089b7\n.text:00000000004089b9\n.text:00000000004089ba\n.text:00000000004089bb\n.text:00000000004089c0\n.text:00000000004089c3\n.text:00000000004089c6\n'
p1350
tp1351
sS'memset'
p1352
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1353
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_006100f0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1354
S'JMP qword ptr [0x006100f0]\n'
p1355
S'ff 25 2a e8 20 00\n'
p1356
S'.plt:00000000004018c0\n'
p1357
tp1358
sS'getc_unlocked'
p1359
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p1360
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_00610070)();\u000a  return iVar1;\u000a}\u000a\u000a
p1361
S'JMP qword ptr [0x00610070]\n'
p1362
S'ff 25 aa e8 20 00\n'
p1363
S'.plt:00000000004017c0\n'
p1364
tp1365
sS'c_isascii'
p1366
(S'\n__stdcall c_isascii()\n'
p1367
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p1368
S'CMP EDI,0x80\nSETC AL\nRET\n'
p1369
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p1370
S'.text:0000000000409760\n.text:0000000000409766\n.text:0000000000409769\n'
p1371
tp1372
sS'__xargmatch_internal'
p1373
(S'\n__stdcall __xargmatch_internal(char * context, char * arg, char * * arglist, char * vallist, size_t valsize, argmatch_exit_fn * exit_fn)\n'
p1374
V\u000aptrdiff_t __xargmatch_internal\u000a                    (char *context,char *arg,char **arglist,char *vallist,size_t valsize,\u000a                    void (*exit_fn)())\u000a\u000a{\u000a  ptrdiff_t problem;\u000a  \u000a  problem = argmatch(arg,arglist,vallist,valsize);\u000a  if (problem < 0) {\u000a    argmatch_invalid(context,arg,problem);\u000a    argmatch_valid(arglist,vallist,valsize);\u000a    (*exit_fn)();\u000a    problem = -1;\u000a  }\u000a  return problem;\u000a}\u000a\u000a
p1375
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R9\nMOV R15,R8\nMOV R12,RCX\nMOV R13,RDX\nMOV RBX,RSI\nMOV RBP,RDI\nMOV RDI,RBX\nMOV RSI,R13\nMOV RDX,R12\nMOV RCX,R15\nCALL 0x004029d0\nTEST RAX,RAX\nJNS 0x00402c89\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x00402ad0\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nCALL 0x00402b40\nCALL R14\nMOV RAX,-0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1376
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 ce\n4d 89 c7\n49 89 cc\n49 89 d5\n48 89 f3\n48 89 fd\n48 89 df\n4c 89 ee\n4c 89 e2\n4c 89 f9\ne8 72 fd ff ff\n48 85 c0\n79 26\n48 89 ef\n48 89 de\n48 89 c2\ne8 5f fe ff ff\n4c 89 ef\n4c 89 e6\n4c 89 fa\ne8 c1 fe ff ff\n41 ff d6\n48 c7 c0 ff ff ff ff\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1377
S'.text:0000000000402c30\n.text:0000000000402c31\n.text:0000000000402c33\n.text:0000000000402c35\n.text:0000000000402c37\n.text:0000000000402c39\n.text:0000000000402c3a\n.text:0000000000402c3b\n.text:0000000000402c3e\n.text:0000000000402c41\n.text:0000000000402c44\n.text:0000000000402c47\n.text:0000000000402c4a\n.text:0000000000402c4d\n.text:0000000000402c50\n.text:0000000000402c53\n.text:0000000000402c56\n.text:0000000000402c59\n.text:0000000000402c5e\n.text:0000000000402c61\n.text:0000000000402c63\n.text:0000000000402c66\n.text:0000000000402c69\n.text:0000000000402c6c\n.text:0000000000402c71\n.text:0000000000402c74\n.text:0000000000402c77\n.text:0000000000402c7a\n.text:0000000000402c7f\n.text:0000000000402c82\n.text:0000000000402c89\n.text:0000000000402c8d\n.text:0000000000402c8e\n.text:0000000000402c90\n.text:0000000000402c92\n.text:0000000000402c94\n.text:0000000000402c96\n.text:0000000000402c97\n'
p1378
tp1379
sS'lookup_zone'
p1380
(S'\n__stdcall lookup_zone(parser_control * pc, char * name)\n'
p1381
V\u000atable * lookup_zone(parser_control *pc,char *name)\u000a\u000a{\u000a  int iVar1;\u000a  table *ptVar2;\u000a  char *__s2;\u000a  \u000a  ptVar2 = universal_time_zone_table;\u000a  __s2 = "GMT";\u000a  do {\u000a    iVar1 = strcmp(name,__s2);\u000a    if (iVar1 == 0) {\u000a      return ptVar2;\u000a    }\u000a    __s2 = ptVar2[1].name;\u000a    ptVar2 = ptVar2 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = pc->local_time_zone_table[0].name;\u000a  if (__s2 != (char *)0x0) {\u000a    ptVar2 = pc->local_time_zone_table;\u000a    do {\u000a      iVar1 = strcmp(name,__s2);\u000a      if (iVar1 == 0) {\u000a        return ptVar2;\u000a      }\u000a      __s2 = ptVar2[1].name;\u000a      ptVar2 = ptVar2 + 1;\u000a    } while (__s2 != (char *)0x0);\u000a  }\u000a  ptVar2 = time_zone_table;\u000a  __s2 = "WET";\u000a  do {\u000a    iVar1 = strcmp(name,__s2);\u000a    if (iVar1 == 0) {\u000a      return ptVar2;\u000a    }\u000a    __s2 = ptVar2[1].name;\u000a    ptVar2 = ptVar2 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  return (table *)0x0;\u000a}\u000a\u000a
p1382
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nMOV R15,RDI\nMOV EBX,0x40c890\nMOV ESI,0x40cd0c\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R14\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040657b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00406500\nMOV RSI,qword ptr [0xe0 + R15]\nTEST RSI,RSI\nJZ 0x00406549\nADD R15,0xe0\nMOV RBX,R15\nNOP\nMOV RDI,R14\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040657b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00406530\nMOV EBX,0x40c8d0\nMOV ESI,0x40cd17\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R14\nCALL 0x00401950\nTEST EAX,EAX\nJZ 0x0040657b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00406560\nXOR EBX,EBX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1383
S'41 57\n41 56\n53\n49 89 f6\n49 89 ff\nbb 90 c8 40 00\nbe 0c cd 40 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 f7\ne8 48 b4 ff ff\n85 c0\n74 6f\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n49 8b b7 e0 00 00 00\n48 85 f6\n74 24\n49 81 c7 e0 00 00 00\n4c 89 fb\n90\n4c 89 f7\ne8 18 b4 ff ff\n85 c0\n74 3f\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\nbb d0 c8 40 00\nbe 17 cd 40 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 f7\ne8 e8 b3 ff ff\n85 c0\n74 0f\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e7\n31 db\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1384
S'.text:00000000004064e0\n.text:00000000004064e2\n.text:00000000004064e4\n.text:00000000004064e5\n.text:00000000004064e8\n.text:00000000004064eb\n.text:00000000004064f0\n.text:00000000004064f5\n.text:0000000000406500\n.text:0000000000406503\n.text:0000000000406508\n.text:000000000040650a\n.text:000000000040650c\n.text:0000000000406510\n.text:0000000000406514\n.text:0000000000406517\n.text:0000000000406519\n.text:0000000000406520\n.text:0000000000406523\n.text:0000000000406525\n.text:000000000040652c\n.text:000000000040652f\n.text:0000000000406530\n.text:0000000000406533\n.text:0000000000406538\n.text:000000000040653a\n.text:000000000040653c\n.text:0000000000406540\n.text:0000000000406544\n.text:0000000000406547\n.text:0000000000406549\n.text:000000000040654e\n.text:0000000000406553\n.text:0000000000406560\n.text:0000000000406563\n.text:0000000000406568\n.text:000000000040656a\n.text:000000000040656c\n.text:0000000000406570\n.text:0000000000406574\n.text:0000000000406577\n.text:0000000000406579\n.text:000000000040657b\n.text:000000000040657e\n.text:000000000040657f\n.text:0000000000406581\n.text:0000000000406583\n'
p1385
tp1386
sS'getenv_TZ'
p1387
(S'\n__stdcall getenv_TZ()\n'
p1388
V\u000achar * getenv_TZ(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = getenv("TZ");\u000a  return pcVar1;\u000a}\u000a\u000a
p1389
S'MOV EDI,0x40d7d4\nJMP 0x00401720\n'
p1390
S'bf d4 d7 40 00\ne9 86 80 ff ff\n'
p1391
S'.text:0000000000409690\n.text:0000000000409695\n'
p1392
tp1393
sS'__ctype_b_loc'
p1394
(S'\n__stdcall __ctype_b_loc()\n'
p1395
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00610250)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1396
S'JMP qword ptr [0x00610250]\n'
p1397
S'ff 25 ca e6 20 00\n'
p1398
S'.plt:0000000000401b80\n'
p1399
tp1400
sS'quotearg'
p1401
(S'\n__stdcall quotearg(char * arg)\n'
p1402
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1403
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x004078a0\n'
p1404
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1405
S'.text:0000000000407a80\n.text:0000000000407a83\n.text:0000000000407a85\n.text:0000000000407a88\n'
p1406
tp1407
sS'equal_tm'
p1408
(S'\n__stdcall equal_tm(tm * a, tm * b)\n'
p1409
V\u000aint equal_tm(tm *a,tm *b)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  uint uVar12;\u000a  _Bool _Var13;\u000a  \u000a  uVar1 = b->tm_sec;\u000a  uVar2 = b->tm_min;\u000a  uVar3 = a->tm_sec;\u000a  uVar4 = a->tm_min;\u000a  uVar5 = b->tm_hour;\u000a  uVar6 = a->tm_hour;\u000a  uVar7 = b->tm_mday;\u000a  uVar8 = a->tm_mday;\u000a  uVar9 = b->tm_mon;\u000a  uVar10 = a->tm_mon;\u000a  uVar11 = b->tm_year;\u000a  uVar12 = a->tm_year;\u000a  _Var13 = isdst_differ();\u000a  return (int)(uint)(((uint)_Var13 |\u000a                     uVar11 ^ uVar12 | uVar9 ^ uVar10 |\u000a                     uVar7 ^ uVar8 | uVar5 ^ uVar6 | uVar2 ^ uVar4 | uVar1 ^ uVar3) == 0);\u000a}\u000a\u000a
p1410
S'PUSH RBX\nMOV EAX,dword ptr [RSI]\nMOV ECX,dword ptr [RSI + 0x4]\nXOR EAX,dword ptr [RDI]\nXOR ECX,dword ptr [RDI + 0x4]\nOR ECX,EAX\nMOV EAX,dword ptr [RSI + 0x8]\nXOR EAX,dword ptr [RDI + 0x8]\nMOV EDX,dword ptr [RSI + 0xc]\nXOR EDX,dword ptr [RDI + 0xc]\nOR EDX,EAX\nOR EDX,ECX\nMOV EAX,dword ptr [RSI + 0x10]\nXOR EAX,dword ptr [RDI + 0x10]\nMOV EBX,dword ptr [RSI + 0x14]\nXOR EBX,dword ptr [RDI + 0x14]\nOR EBX,EAX\nOR EBX,EDX\nMOV EDI,dword ptr [RDI + 0x20]\nMOV ESI,dword ptr [RSI + 0x20]\nCALL 0x004096f0\nMOVZX ECX,AL\nXOR EAX,EAX\nOR ECX,EBX\nSETZ AL\nPOP RBX\nRET\n'
p1411
S'53\n8b 06\n8b 4e 04\n33 07\n33 4f 04\n09 c1\n8b 46 08\n33 47 08\n8b 56 0c\n33 57 0c\n09 c2\n09 ca\n8b 46 10\n33 47 10\n8b 5e 14\n33 5f 14\n09 c3\n09 d3\n8b 7f 20\n8b 76 20\ne8 78 00 00 00\n0f b6 c8\n31 c0\n09 d9\n0f 94 c0\n5b\nc3\n'
p1412
S'.text:0000000000409640\n.text:0000000000409641\n.text:0000000000409643\n.text:0000000000409646\n.text:0000000000409648\n.text:000000000040964b\n.text:000000000040964d\n.text:0000000000409650\n.text:0000000000409653\n.text:0000000000409656\n.text:0000000000409659\n.text:000000000040965b\n.text:000000000040965d\n.text:0000000000409660\n.text:0000000000409663\n.text:0000000000409666\n.text:0000000000409669\n.text:000000000040966b\n.text:000000000040966d\n.text:0000000000409670\n.text:0000000000409673\n.text:0000000000409678\n.text:000000000040967b\n.text:000000000040967d\n.text:000000000040967f\n.text:0000000000409682\n.text:0000000000409683\n'
p1413
tp1414
sS'_start'
p1415
(S'\n__stdcall _start()\n'
p1416
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_0060fff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1417
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x409c70\nMOV RCX,0x409c00\nMOV RDI,0x402180\nCALL qword ptr [0x0060fff0]\nHLT\n'
p1418
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 70 9c 40 00\n48 c7 c1 00 9c 40 00\n48 c7 c7 80 21 40 00\nff 15 26 e4 20 00\nf4\n'
p1419
S'.text:0000000000401ba0\n.text:0000000000401ba2\n.text:0000000000401ba5\n.text:0000000000401ba6\n.text:0000000000401ba9\n.text:0000000000401bad\n.text:0000000000401bae\n.text:0000000000401baf\n.text:0000000000401bb6\n.text:0000000000401bbd\n.text:0000000000401bc4\n.text:0000000000401bca\n'
p1420
tp1421
sS'c_iscntrl'
p1422
(S'\n__stdcall c_iscntrl()\n'
p1423
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1424
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x00409788\nRET\nCMP EDI,0x7f\nJZ 0x00409787\nXOR EAX,EAX\nRET\n'
p1425
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1426
S'.text:0000000000409780\n.text:0000000000409782\n.text:0000000000409785\n.text:0000000000409787\n.text:0000000000409788\n.text:000000000040978b\n.text:000000000040978d\n.text:000000000040978f\n'
p1427
tp1428
sS'c_isblank'
p1429
(S'\n__stdcall c_isblank()\n'
p1430
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1431
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1432
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1433
S'.text:0000000000409770\n.text:0000000000409773\n.text:0000000000409776\n.text:0000000000409779\n.text:000000000040977c\n.text:000000000040977e\n'
p1434
tp1435
sS'atexit'
p1436
(S'\n__stdcall atexit(__func * __func)\n'
p1437
V\u000a/* WARNING: Removing unreachable block (ram,0x00409ca0) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_00610210)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1438
S'MOV RAX,0x610268\nTEST RAX,RAX\nJZ 0x00409ca0\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x00401b00\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x00401b00\n'
p1439
S'48 c7 c0 68 02 61 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 6a 7e ff ff\n31 d2\n31 f6\ne9 57 7e ff ff\n'
p1440
S'.text:0000000000409c80\n.text:0000000000409c87\n.text:0000000000409c8a\n.text:0000000000409c8c\n.text:0000000000409c8f\n.text:0000000000409c91\n.text:0000000000409ca0\n.text:0000000000409ca2\n.text:0000000000409ca4\n'
p1441
tp1442
sS'fdopen'
p1443
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1444
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_006101c0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1445
S'JMP qword ptr [0x006101c0]\n'
p1446
S'ff 25 5a e7 20 00\n'
p1447
S'.plt:0000000000401a60\n'
p1448
tp1449
sS'error'
p1450
(S'\n__stdcall error()\n'
p1451
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_006101e8)();\u000a  return;\u000a}\u000a\u000a
p1452
S'JMP qword ptr [0x006101e8]\n'
p1453
S'ff 25 32 e7 20 00\n'
p1454
S'.plt:0000000000401ab0\n'
p1455
tp1456
sS'isdst_differ'
p1457
(S'\n__stdcall isdst_differ()\n'
p1458
V\u000a_Bool isdst_differ(void)\u000a\u000a{\u000a  uint in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(-1 < (int)(in_ESI | in_EDI) && (in_ESI == 0) != (in_EDI == 0));\u000a}\u000a\u000a
p1459
S'TEST EDI,EDI\nSETZ AL\nTEST ESI,ESI\nSETZ CL\nXOR CL,AL\nOR ESI,EDI\nSETNS AL\nAND AL,CL\nRET\n'
p1460
S'85 ff\n0f 94 c0\n85 f6\n0f 94 c1\n30 c1\n09 fe\n0f 99 c0\n20 c8\nc3\n'
p1461
S'.text:00000000004096f0\n.text:00000000004096f2\n.text:00000000004096f5\n.text:00000000004096f7\n.text:00000000004096fa\n.text:00000000004096fc\n.text:00000000004096fe\n.text:0000000000409701\n.text:0000000000409703\n'
p1462
tp1463
sS'strcaseeq6'
p1464
(S'\n__stdcall strcaseeq6()\n'
p1465
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1466
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x00408142\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00408149\nJMP 0x0040815e\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040815e\nTEST BPL,BPL\nJZ 0x00408159\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00408170\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1467
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 e1 16 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1468
S'.text:0000000000408120\n.text:0000000000408121\n.text:0000000000408122\n.text:0000000000408123\n.text:0000000000408125\n.text:0000000000408128\n.text:000000000040812a\n.text:000000000040812f\n.text:0000000000408133\n.text:0000000000408135\n.text:0000000000408137\n.text:000000000040813a\n.text:000000000040813c\n.text:000000000040813e\n.text:0000000000408140\n.text:0000000000408142\n.text:0000000000408144\n.text:0000000000408147\n.text:0000000000408149\n.text:000000000040814c\n.text:000000000040814e\n.text:0000000000408151\n.text:0000000000408155\n.text:0000000000408156\n.text:0000000000408157\n.text:0000000000408159\n.text:000000000040815e\n.text:0000000000408162\n.text:0000000000408163\n.text:0000000000408164\n'
p1469
tp1470
sS'imaxtostr'
p1471
(S'\n__stdcall imaxtostr(intmax_t i, char * buf)\n'
p1472
V\u000achar * imaxtostr(intmax_t i,char *buf)\u000a\u000a{\u000a  ulong uVar1;\u000a  long lVar2;\u000a  \u000a  buf[0x14] = 0;\u000a  if (i < 0) {\u000a    buf = buf + 0x13;\u000a    do {\u000a      lVar2 = i / 10 + (i >> 0x3f);\u000a      *buf = '0' - ((char)i + (char)lVar2 * -10);\u000a      uVar1 = i + 9;\u000a      buf = buf + -1;\u000a      i = lVar2;\u000a    } while (0x12 < uVar1);\u000a    *buf = '-';\u000a  }\u000a  else {\u000a    buf = buf + 0x14;\u000a    do {\u000a      lVar2 = i / 10 + (i >> 0x3f);\u000a      buf[-1] = (char)i + (char)lVar2 * -10 + '0';\u000a      buf = buf + -1;\u000a      uVar1 = i + 9;\u000a      i = lVar2;\u000a    } while (0x12 < uVar1);\u000a  }\u000a  return buf;\u000a}\u000a\u000a
p1473
S'MOV RCX,RDI\nMOV byte ptr [RSI + 0x14],0x0\nTEST RCX,RCX\nJS 0x0040470b\nADD RSI,0x14\nMOV R8,0x6666666666666667\nNOP word ptr [RAX + RAX*0x1]\nMOV RAX,RCX\nIMUL R8\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + RAX*0x1]\nADD EDI,EDI\nLEA R9D,[RDI + RDI*0x4]\nMOV EDI,ECX\nSUB EDI,R9D\nADD EDI,0x30\nMOV byte ptr [RSI + -0x1],DIL\nDEC RSI\nADD RDX,RAX\nADD RCX,0x9\nCMP RCX,0x12\nMOV RCX,RDX\nJA 0x004046d0\nJMP 0x0040475f\nADD RSI,0x13\nMOV R8,0x6666666666666667\nNOP dword ptr [RAX]\nMOV RAX,RCX\nIMUL R8\nMOV R10,RDX\nSHR R10,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + R10*0x1]\nADD EDI,EDI\nLEA R9D,[RDI + RDI*0x4]\nMOV EDI,ECX\nSUB EDI,R9D\nMOV EAX,0x30\nSUB EAX,EDI\nMOV byte ptr [RSI],AL\nADD RDX,R10\nADD RCX,0x9\nDEC RSI\nCMP RCX,0x12\nMOV RCX,RDX\nJA 0x00404720\nMOV byte ptr [RSI],0x2d\nMOV RAX,RSI\nRET\n'
p1474
S'48 89 f9\nc6 46 14 00\n48 85 c9\n78 4f\n48 83 c6 14\n49 b8 67 66 66 66 66 66 66 66\n66 0f 1f 44 00 00\n48 89 c8\n49 f7 e8\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 02\n8d 3c 02\n01 ff\n44 8d 0c bf\n89 cf\n44 29 cf\n83 c7 30\n40 88 7e ff\n48 ff ce\n48 01 c2\n48 83 c1 09\n48 83 f9 12\n48 89 d1\n77 c7\neb 54\n48 83 c6 13\n49 b8 67 66 66 66 66 66 66 66\n0f 1f 80 00 00 00 00\n48 89 c8\n49 f7 e8\n49 89 d2\n49 c1 ea 3f\n48 c1 fa 02\n42 8d 3c 12\n01 ff\n44 8d 0c bf\n89 cf\n44 29 cf\nb8 30 00 00 00\n29 f8\n88 06\n4c 01 d2\n48 83 c1 09\n48 ff ce\n48 83 f9 12\n48 89 d1\n77 c4\nc6 06 2d\n48 89 f0\nc3\n'
p1475
S'.text:00000000004046b0\n.text:00000000004046b3\n.text:00000000004046b7\n.text:00000000004046ba\n.text:00000000004046bc\n.text:00000000004046c0\n.text:00000000004046ca\n.text:00000000004046d0\n.text:00000000004046d3\n.text:00000000004046d6\n.text:00000000004046d9\n.text:00000000004046dd\n.text:00000000004046e1\n.text:00000000004046e4\n.text:00000000004046e6\n.text:00000000004046ea\n.text:00000000004046ec\n.text:00000000004046ef\n.text:00000000004046f2\n.text:00000000004046f6\n.text:00000000004046f9\n.text:00000000004046fc\n.text:0000000000404700\n.text:0000000000404704\n.text:0000000000404707\n.text:0000000000404709\n.text:000000000040470b\n.text:000000000040470f\n.text:0000000000404719\n.text:0000000000404720\n.text:0000000000404723\n.text:0000000000404726\n.text:0000000000404729\n.text:000000000040472d\n.text:0000000000404731\n.text:0000000000404735\n.text:0000000000404737\n.text:000000000040473b\n.text:000000000040473d\n.text:0000000000404740\n.text:0000000000404745\n.text:0000000000404747\n.text:0000000000404749\n.text:000000000040474c\n.text:0000000000404750\n.text:0000000000404753\n.text:0000000000404757\n.text:000000000040475a\n.text:000000000040475c\n.text:000000000040475f\n.text:0000000000404762\n'
p1476
tp1477
sS'strcaseeq5'
p1478
(S'\n__stdcall strcaseeq5()\n'
p1479
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1480
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x004080f6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004080fd\nJMP 0x00408114\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00408114\nTEST BPL,BPL\nJZ 0x0040810f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00408120\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1481
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 2d 17 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1482
S'.text:00000000004080d0\n.text:00000000004080d1\n.text:00000000004080d3\n.text:00000000004080d4\n.text:00000000004080d7\n.text:00000000004080d9\n.text:00000000004080dc\n.text:00000000004080de\n.text:00000000004080e3\n.text:00000000004080e7\n.text:00000000004080e9\n.text:00000000004080eb\n.text:00000000004080ee\n.text:00000000004080f0\n.text:00000000004080f2\n.text:00000000004080f4\n.text:00000000004080f6\n.text:00000000004080f8\n.text:00000000004080fb\n.text:00000000004080fd\n.text:0000000000408100\n.text:0000000000408102\n.text:0000000000408106\n.text:0000000000408109\n.text:000000000040810a\n.text:000000000040810c\n.text:000000000040810d\n.text:000000000040810f\n.text:0000000000408114\n.text:0000000000408115\n.text:0000000000408117\n.text:0000000000408118\n'
p1483
tp1484
sS'strcaseeq7'
p1485
(S'\n__stdcall strcaseeq7()\n'
p1486
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1487
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x00408192\nTEST ECX,0xffffffdf\nJNZ 0x00408196\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x0040819a\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1488
S'53\n48 89 fb\n31 ff\ne8 95 16 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1489
S'.text:0000000000408170\n.text:0000000000408171\n.text:0000000000408174\n.text:0000000000408176\n.text:000000000040817b\n.text:000000000040817f\n.text:0000000000408181\n.text:0000000000408183\n.text:0000000000408189\n.text:000000000040818b\n.text:0000000000408190\n.text:0000000000408191\n.text:0000000000408192\n.text:0000000000408194\n.text:0000000000408196\n.text:0000000000408198\n.text:0000000000408199\n.text:000000000040819a\n.text:000000000040819f\n.text:00000000004081a0\n'
p1490
tp1491
sS'getline'
p1492
(S'\n__stdcall getline(char * * __lineptr, size_t * __n, FILE * __stream)\n'
p1493
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\u000a\u000a{\u000a  __ssize_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getline_00610218)();\u000a  return _Var1;\u000a}\u000a\u000a
p1494
S'JMP qword ptr [0x00610218]\n'
p1495
S'ff 25 02 e7 20 00\n'
p1496
S'.plt:0000000000401b10\n'
p1497
tp1498
sS'emit_mandatory_arg_note'
p1499
(S'\n__stdcall emit_mandatory_arg_note()\n'
p1500
V\u000avoid emit_mandatory_arg_note(void)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnMandatory arguments to long options are mandatory for short options too.\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p1501
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40b4c5\nMOV EDX,0x5\nCALL 0x00401820\nMOV RSI,qword ptr [0x006102e8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401910\n'
p1502
S'50\n31 ff\nbe c5 b4 40 00\nba 05 00 00 00\ne8 ee f7 ff ff\n48 8b 35 af e2 20 00\n48 89 c7\n58\ne9 ce f8 ff ff\n'
p1503
S'.text:0000000000402020\n.text:0000000000402021\n.text:0000000000402023\n.text:0000000000402028\n.text:000000000040202d\n.text:0000000000402032\n.text:0000000000402039\n.text:000000000040203c\n.text:000000000040203d\n'
p1504
tp1505
sS'strcaseeq0'
p1506
(S'\n__stdcall strcaseeq0()\n'
p1507
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1508
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00407ea5\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00407eac\nJMP 0x00407ee0\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00407ee0\nTEST BPL,BPL\nJZ 0x00407edb\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x00407ef0\nJMP 0x00407ee0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1509
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 7d 19 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1510
S'.text:0000000000407e70\n.text:0000000000407e71\n.text:0000000000407e73\n.text:0000000000407e75\n.text:0000000000407e77\n.text:0000000000407e79\n.text:0000000000407e7a\n.text:0000000000407e7b\n.text:0000000000407e7e\n.text:0000000000407e81\n.text:0000000000407e84\n.text:0000000000407e87\n.text:0000000000407e89\n.text:0000000000407e8c\n.text:0000000000407e8e\n.text:0000000000407e93\n.text:0000000000407e96\n.text:0000000000407e98\n.text:0000000000407e9a\n.text:0000000000407e9d\n.text:0000000000407e9f\n.text:0000000000407ea1\n.text:0000000000407ea3\n.text:0000000000407ea5\n.text:0000000000407ea7\n.text:0000000000407eaa\n.text:0000000000407eac\n.text:0000000000407eaf\n.text:0000000000407eb1\n.text:0000000000407eb5\n.text:0000000000407eba\n.text:0000000000407ebd\n.text:0000000000407ec1\n.text:0000000000407ec5\n.text:0000000000407ec9\n.text:0000000000407ecd\n.text:0000000000407ed1\n.text:0000000000407ed4\n.text:0000000000407ed9\n.text:0000000000407edb\n.text:0000000000407ee0\n.text:0000000000407ee4\n.text:0000000000407ee5\n.text:0000000000407ee7\n.text:0000000000407ee9\n.text:0000000000407eeb\n.text:0000000000407eed\n.text:0000000000407eee\n'
p1511
tp1512
sS'get_stat_mtime'
p1513
(S'\n__stdcall get_stat_mtime(stat * st)\n'
p1514
V\u000atimespec get_stat_mtime(stat *st)\u000a\u000a{\u000a  return st->st_mtim;\u000a}\u000a\u000a
p1515
S'MOV RAX,qword ptr [RDI + 0x58]\nMOV RDX,qword ptr [RDI + 0x60]\nRET\n'
p1516
S'48 8b 47 58\n48 8b 57 60\nc3\n'
p1517
S'.text:0000000000408280\n.text:0000000000408284\n.text:0000000000408288\n'
p1518
tp1519
sS'strcaseeq2'
p1520
(S'\n__stdcall strcaseeq2()\n'
p1521
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1522
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x00407fb6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00407fbd\nJMP 0x00407fea\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00407fea\nTEST BPL,BPL\nJZ 0x00407fe5\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00408000\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1523
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 6d 18 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1524
S'.text:0000000000407f80\n.text:0000000000407f81\n.text:0000000000407f83\n.text:0000000000407f85\n.text:0000000000407f87\n.text:0000000000407f89\n.text:0000000000407f8a\n.text:0000000000407f8b\n.text:0000000000407f8e\n.text:0000000000407f91\n.text:0000000000407f94\n.text:0000000000407f97\n.text:0000000000407f99\n.text:0000000000407f9c\n.text:0000000000407f9e\n.text:0000000000407fa3\n.text:0000000000407fa7\n.text:0000000000407fa9\n.text:0000000000407fab\n.text:0000000000407fae\n.text:0000000000407fb0\n.text:0000000000407fb2\n.text:0000000000407fb4\n.text:0000000000407fb6\n.text:0000000000407fb8\n.text:0000000000407fbb\n.text:0000000000407fbd\n.text:0000000000407fc0\n.text:0000000000407fc2\n.text:0000000000407fc6\n.text:0000000000407fca\n.text:0000000000407fce\n.text:0000000000407fd2\n.text:0000000000407fd5\n.text:0000000000407fd9\n.text:0000000000407fda\n.text:0000000000407fdc\n.text:0000000000407fde\n.text:0000000000407fe0\n.text:0000000000407fe2\n.text:0000000000407fe3\n.text:0000000000407fe5\n.text:0000000000407fea\n.text:0000000000407fee\n.text:0000000000407fef\n.text:0000000000407ff1\n.text:0000000000407ff3\n.text:0000000000407ff5\n.text:0000000000407ff7\n.text:0000000000407ff8\n'
p1525
tp1526
sS'strcaseeq1'
p1527
(S'\n__stdcall strcaseeq1()\n'
p1528
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1529
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x00407f2d\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00407f34\nJMP 0x00407f67\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00407f67\nTEST BPL,BPL\nJZ 0x00407f62\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00407f80\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1530
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 f6 18 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1531
S'.text:0000000000407ef0\n.text:0000000000407ef1\n.text:0000000000407ef3\n.text:0000000000407ef5\n.text:0000000000407ef7\n.text:0000000000407ef9\n.text:0000000000407efa\n.text:0000000000407efb\n.text:0000000000407f00\n.text:0000000000407f03\n.text:0000000000407f06\n.text:0000000000407f09\n.text:0000000000407f0b\n.text:0000000000407f0e\n.text:0000000000407f13\n.text:0000000000407f15\n.text:0000000000407f1a\n.text:0000000000407f1e\n.text:0000000000407f20\n.text:0000000000407f22\n.text:0000000000407f25\n.text:0000000000407f27\n.text:0000000000407f29\n.text:0000000000407f2b\n.text:0000000000407f2d\n.text:0000000000407f2f\n.text:0000000000407f32\n.text:0000000000407f34\n.text:0000000000407f37\n.text:0000000000407f39\n.text:0000000000407f3d\n.text:0000000000407f41\n.text:0000000000407f45\n.text:0000000000407f4b\n.text:0000000000407f4f\n.text:0000000000407f52\n.text:0000000000407f56\n.text:0000000000407f57\n.text:0000000000407f59\n.text:0000000000407f5b\n.text:0000000000407f5d\n.text:0000000000407f5f\n.text:0000000000407f60\n.text:0000000000407f62\n.text:0000000000407f67\n.text:0000000000407f6b\n.text:0000000000407f6c\n.text:0000000000407f6e\n.text:0000000000407f70\n.text:0000000000407f72\n.text:0000000000407f74\n.text:0000000000407f75\n'
p1532
tp1533
sS'strcaseeq4'
p1534
(S'\n__stdcall strcaseeq4()\n'
p1535
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1536
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x0040809c\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004080a3\nJMP 0x004080c4\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004080c4\nTEST BPL,BPL\nJZ 0x004080bf\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004080d0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1537
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 87 17 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1538
S'.text:0000000000408070\n.text:0000000000408071\n.text:0000000000408073\n.text:0000000000408075\n.text:0000000000408076\n.text:0000000000408077\n.text:000000000040807a\n.text:000000000040807d\n.text:000000000040807f\n.text:0000000000408082\n.text:0000000000408084\n.text:0000000000408089\n.text:000000000040808d\n.text:000000000040808f\n.text:0000000000408091\n.text:0000000000408094\n.text:0000000000408096\n.text:0000000000408098\n.text:000000000040809a\n.text:000000000040809c\n.text:000000000040809e\n.text:00000000004080a1\n.text:00000000004080a3\n.text:00000000004080a6\n.text:00000000004080a8\n.text:00000000004080ac\n.text:00000000004080b0\n.text:00000000004080b3\n.text:00000000004080b7\n.text:00000000004080b8\n.text:00000000004080ba\n.text:00000000004080bc\n.text:00000000004080bd\n.text:00000000004080bf\n.text:00000000004080c4\n.text:00000000004080c8\n.text:00000000004080c9\n.text:00000000004080cb\n.text:00000000004080cd\n.text:00000000004080ce\n'
p1539
tp1540
sS'guess_time_tm'
p1541
(S'\n__stdcall guess_time_tm(long_int year, long_int yday, time_t * t, tm * tp)\n'
p1542
V\u000atime_t guess_time_tm(long_int year,long_int yday,time_t *t,tm *tp)\u000a\u000a{\u000a  int iVar1;\u000a  time_t b;\u000a  long lVar2;\u000a  time_t a;\u000a  int min0;\u000a  time_t *in_R9;\u000a  long in_stack_00000008;\u000a  \u000a  if (in_stack_00000008 == 0) {\u000a    a = *in_R9;\u000a  }\u000a  else {\u000a    b = ydhms_diff(year,yday,(int)t,(int)tp,min0,*(int *)(in_stack_00000008 + 0x14));\u000a    a = *in_R9;\u000a    iVar1 = time_t_add_ok(a,b);\u000a    if (iVar1 != 0) {\u000a      return a + b;\u000a    }\u000a  }\u000a  if (a < 0) {\u000a    lVar2 = -0x8000000000000000;\u000a    if (a < -0x7ffffffffffffffe) {\u000a      lVar2 = a + 1;\u000a    }\u000a  }\u000a  else {\u000a    lVar2 = a + -1;\u000a    if (a < 0x7ffffffffffffffe) {\u000a      lVar2 = 0x7fffffffffffffff;\u000a    }\u000a  }\u000a  return lVar2;\u000a}\u000a\u000a
p1543
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,R9\nMOV RAX,qword ptr [RSP + 0x20]\nTEST RAX,RAX\nJZ 0x004090ac\nMOV R9D,dword ptr [RAX + 0x14]\nMOV R10D,dword ptr [RAX + 0x1c]\nMOV R11D,dword ptr [RAX + 0x8]\nMOV EBX,dword ptr [RAX]\nMOV EAX,dword ptr [RAX + 0x4]\nPUSH RBX\nPUSH RAX\nPUSH R11\nPUSH R10\nCALL 0x00408f50\nADD RSP,0x20\nMOV R14,RAX\nMOV RBX,qword ptr [R15]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00409220\nTEST EAX,EAX\nJZ 0x004090af\nADD RBX,R14\nJMP 0x004090e5\nMOV RBX,qword ptr [R15]\nMOV RAX,0x7ffffffffffffffd\nTEST RBX,RBX\nJS 0x004090cf\nCMP RBX,RAX\nLEA RCX,[RAX + 0x2]\nLEA RAX,[RBX + -0x1]\nCMOVLE RAX,RCX\nJMP 0x004090e8\nLEA RCX,[RAX + 0x5]\nLEA RDX,[RBX + 0x1]\nADD RAX,0x3\nCMP RBX,RCX\nCMOVL RAX,RDX\nMOV RBX,RAX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1544
S'41 57\n41 56\n53\n4d 89 cf\n48 8b 44 24 20\n48 85 c0\n74 3a\n44 8b 48 14\n44 8b 50 1c\n44 8b 58 08\n8b 18\n8b 40 04\n53\n50\n41 53\n41 52\ne8 c2 fe ff ff\n48 83 c4 20\n49 89 c6\n49 8b 1f\n48 89 df\n4c 89 f6\ne8 7d 01 00 00\n85 c0\n74 08\n4c 01 f3\neb 39\n49 8b 1f\n48 b8 fd ff ff ff ff ff ff 7f\n48 85 db\n78 11\n48 39 c3\n48 8d 48 02\n48 8d 43 ff\n48 0f 4e c1\neb 19\n48 8d 48 05\n48 8d 53 01\n48 83 c0 03\n48 39 cb\n48 0f 4c c2\n48 89 c3\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1545
S'.text:0000000000409060\n.text:0000000000409062\n.text:0000000000409064\n.text:0000000000409065\n.text:0000000000409068\n.text:000000000040906d\n.text:0000000000409070\n.text:0000000000409072\n.text:0000000000409076\n.text:000000000040907a\n.text:000000000040907e\n.text:0000000000409080\n.text:0000000000409083\n.text:0000000000409084\n.text:0000000000409085\n.text:0000000000409087\n.text:0000000000409089\n.text:000000000040908e\n.text:0000000000409092\n.text:0000000000409095\n.text:0000000000409098\n.text:000000000040909b\n.text:000000000040909e\n.text:00000000004090a3\n.text:00000000004090a5\n.text:00000000004090a7\n.text:00000000004090aa\n.text:00000000004090ac\n.text:00000000004090af\n.text:00000000004090b9\n.text:00000000004090bc\n.text:00000000004090be\n.text:00000000004090c1\n.text:00000000004090c5\n.text:00000000004090c9\n.text:00000000004090cd\n.text:00000000004090cf\n.text:00000000004090d3\n.text:00000000004090d7\n.text:00000000004090db\n.text:00000000004090de\n.text:00000000004090e2\n.text:00000000004090e5\n.text:00000000004090e8\n.text:00000000004090e9\n.text:00000000004090eb\n.text:00000000004090ed\n'
p1546
tp1547
sS'strcaseeq3'
p1548
(S'\n__stdcall strcaseeq3()\n'
p1549
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1550
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409810\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00408030\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00408037\nJMP 0x0040805a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040805a\nTEST BPL,BPL\nJZ 0x00408055\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00408070\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1551
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 f3 17 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1552
S'.text:0000000000408000\n.text:0000000000408001\n.text:0000000000408003\n.text:0000000000408005\n.text:0000000000408007\n.text:0000000000408008\n.text:000000000040800b\n.text:000000000040800e\n.text:0000000000408011\n.text:0000000000408013\n.text:0000000000408016\n.text:0000000000408018\n.text:000000000040801d\n.text:0000000000408021\n.text:0000000000408023\n.text:0000000000408025\n.text:0000000000408028\n.text:000000000040802a\n.text:000000000040802c\n.text:000000000040802e\n.text:0000000000408030\n.text:0000000000408032\n.text:0000000000408035\n.text:0000000000408037\n.text:000000000040803a\n.text:000000000040803c\n.text:0000000000408040\n.text:0000000000408044\n.text:0000000000408048\n.text:000000000040804b\n.text:000000000040804c\n.text:000000000040804e\n.text:0000000000408050\n.text:0000000000408052\n.text:0000000000408053\n.text:0000000000408055\n.text:000000000040805a\n.text:000000000040805b\n.text:000000000040805d\n.text:000000000040805f\n.text:0000000000408061\n.text:0000000000408062\n'
p1553
tp1554
sS'register_tm_clones'
p1555
(S'\n__stdcall register_tm_clones()\n'
p1556
V\u000a/* WARNING: Removing unreachable block (ram,0x00401c33) */\u000a/* WARNING: Removing unreachable block (ram,0x00401c3d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1557
S'MOV ESI,0x6102e0\nPUSH RBP\nSUB RSI,0x6102e0\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401c48\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401c48\nPOP RBP\nMOV EDI,0x6102e0\nJMP RAX\nPOP RBP\nRET\n'
p1558
S'be e0 02 61 00\n55\n48 81 ee e0 02 61 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf e0 02 61 00\nff e0\n5d\nc3\n'
p1559
S'.text:0000000000401c10\n.text:0000000000401c15\n.text:0000000000401c16\n.text:0000000000401c1d\n.text:0000000000401c21\n.text:0000000000401c24\n.text:0000000000401c27\n.text:0000000000401c2b\n.text:0000000000401c2e\n.text:0000000000401c31\n.text:0000000000401c33\n.text:0000000000401c38\n.text:0000000000401c3b\n.text:0000000000401c3d\n.text:0000000000401c3e\n.text:0000000000401c43\n.text:0000000000401c48\n.text:0000000000401c49\n'
p1560
tp1561
sS'c_islower'
p1562
(S'\n__stdcall c_islower()\n'
p1563
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p1564
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1565
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p1566
S'.text:00000000004097b0\n.text:00000000004097b3\n.text:00000000004097b6\n.text:00000000004097b9\n'
p1567
tp1568
sS'argmatch'
p1569
(S'\n__stdcall argmatch(char * arg, char * * arglist, char * vallist, size_t valsize)\n'
p1570
V\u000aptrdiff_t argmatch(char *arg,char **arglist,char *vallist,size_t valsize)\u000a\u000a{\u000a  bool bVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  size_t __n;\u000a  size_t sVar4;\u000a  long lVar5;\u000a  ptrdiff_t pVar6;\u000a  char *__s2;\u000a  char *__s1;\u000a  long local_50;\u000a  \u000a  __n = strlen(arg);\u000a  __s1 = *arglist;\u000a  if (__s1 == (char *)0x0) {\u000a    local_50 = -1;\u000a    bVar1 = false;\u000a  }\u000a  else {\u000a    local_50 = -1;\u000a    bVar1 = false;\u000a    lVar5 = 0;\u000a    __s2 = vallist;\u000a    do {\u000a      iVar3 = strncmp(__s1,arg,__n);\u000a      lVar2 = local_50;\u000a      if (iVar3 == 0) {\u000a        sVar4 = strlen(__s1);\u000a        if (sVar4 == __n) {\u000a          return lVar5;\u000a        }\u000a        lVar2 = lVar5;\u000a        if ((local_50 != -1) &&\u000a           ((vallist == (char *)0x0 ||\u000a            (iVar3 = memcmp(vallist + local_50 * valsize,__s2,valsize), lVar2 = local_50, iVar3 != 0\u000a            )))) {\u000a          bVar1 = true;\u000a          lVar2 = local_50;\u000a        }\u000a      }\u000a      local_50 = lVar2;\u000a      __s1 = arglist[lVar5 + 1];\u000a      lVar5 = lVar5 + 1;\u000a      __s2 = __s2 + valsize;\u000a    } while (__s1 != (char *)0x0);\u000a  }\u000a  pVar6 = -2;\u000a  if (!bVar1) {\u000a    pVar6 = local_50;\u000a  }\u000a  return pVar6;\u000a}\u000a\u000a
p1571
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RCX\nMOV R14,RDX\nMOV RBP,RSI\nMOV R12,RDI\nCALL 0x00401840\nMOV RBX,RAX\nMOV qword ptr [RSP + 0x20],RBP\nMOV R15,qword ptr [RBP]\nTEST R15,R15\nJZ 0x00402a97\nMOV qword ptr [RSP + 0x8],-0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],R14\nXOR EBP,EBP\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,R15\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x00401770\nTEST EAX,EAX\nJNZ 0x00402a80\nMOV RDI,R15\nCALL 0x00401840\nCMP RAX,RBX\nJZ 0x00402ab9\nCMP qword ptr [RSP + 0x8],-0x1\nJZ 0x00402a75\nMOV RAX,qword ptr [RSP + 0x18]\nTEST RAX,RAX\nJZ 0x00402a6c\nMOV RDI,qword ptr [RSP + 0x8]\nIMUL RDI,R13\nADD RDI,RAX\nMOV RSI,R14\nMOV RDX,R13\nCALL 0x00401900\nTEST EAX,EAX\nJZ 0x00402a80\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00402a80\nMOV qword ptr [RSP + 0x8],RBP\nNOP word ptr [RAX + RAX*0x1]\nMOV RAX,qword ptr [RSP + 0x20]\nMOV R15,qword ptr [RAX + RBP*0x8 + 0x8]\nINC RBP\nADD R14,R13\nTEST R15,R15\nJNZ 0x00402a20\nJMP 0x00402aa7\nMOV qword ptr [RSP + 0x8],-0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nTEST byte ptr [RSP + 0x10],0x1\nMOV RBP,-0x2\nCMOVZ RBP,qword ptr [RSP + 0x8]\nMOV RAX,RBP\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1572
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 cd\n49 89 d6\n48 89 f5\n49 89 fc\ne8 51 ee ff ff\n48 89 c3\n48 89 6c 24 20\n4c 8b 7d 00\n4d 85 ff\n0f 84 93 00 00 00\n48 c7 44 24 08 ff ff ff ff\n31 c0\n48 89 44 24 10\n4c 89 74 24 18\n31 ed\n0f 1f 44 00 00\n4c 89 ff\n4c 89 e6\n48 89 da\ne8 42 ed ff ff\n85 c0\n75 4e\n4c 89 ff\ne8 06 ee ff ff\n48 39 d8\n74 7a\n48 83 7c 24 08 ff\n74 2e\n48 8b 44 24 18\n48 85 c0\n74 1b\n48 8b 7c 24 08\n49 0f af fd\n48 01 c7\n4c 89 f6\n4c 89 ea\ne8 98 ee ff ff\n85 c0\n74 14\nb0 01\n48 89 44 24 10\neb 0b\n48 89 6c 24 08\n66 0f 1f 44 00 00\n48 8b 44 24 20\n4c 8b 7c e8 08\n48 ff c5\n4d 01 ee\n4d 85 ff\n75 8b\neb 10\n48 c7 44 24 08 ff ff ff ff\n31 c0\n48 89 44 24 10\nf6 44 24 10 01\n48 c7 c5 fe ff ff ff\n48 0f 44 6c 24 08\n48 89 e8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1573
S'.text:00000000004029d0\n.text:00000000004029d1\n.text:00000000004029d3\n.text:00000000004029d5\n.text:00000000004029d7\n.text:00000000004029d9\n.text:00000000004029da\n.text:00000000004029de\n.text:00000000004029e1\n.text:00000000004029e4\n.text:00000000004029e7\n.text:00000000004029ea\n.text:00000000004029ef\n.text:00000000004029f2\n.text:00000000004029f7\n.text:00000000004029fb\n.text:00000000004029fe\n.text:0000000000402a04\n.text:0000000000402a0d\n.text:0000000000402a0f\n.text:0000000000402a14\n.text:0000000000402a19\n.text:0000000000402a1b\n.text:0000000000402a20\n.text:0000000000402a23\n.text:0000000000402a26\n.text:0000000000402a29\n.text:0000000000402a2e\n.text:0000000000402a30\n.text:0000000000402a32\n.text:0000000000402a35\n.text:0000000000402a3a\n.text:0000000000402a3d\n.text:0000000000402a3f\n.text:0000000000402a45\n.text:0000000000402a47\n.text:0000000000402a4c\n.text:0000000000402a4f\n.text:0000000000402a51\n.text:0000000000402a56\n.text:0000000000402a5a\n.text:0000000000402a5d\n.text:0000000000402a60\n.text:0000000000402a63\n.text:0000000000402a68\n.text:0000000000402a6a\n.text:0000000000402a6c\n.text:0000000000402a6e\n.text:0000000000402a73\n.text:0000000000402a75\n.text:0000000000402a7a\n.text:0000000000402a80\n.text:0000000000402a85\n.text:0000000000402a8a\n.text:0000000000402a8d\n.text:0000000000402a90\n.text:0000000000402a93\n.text:0000000000402a95\n.text:0000000000402a97\n.text:0000000000402aa0\n.text:0000000000402aa2\n.text:0000000000402aa7\n.text:0000000000402aac\n.text:0000000000402ab3\n.text:0000000000402ab9\n.text:0000000000402abc\n.text:0000000000402ac0\n.text:0000000000402ac1\n.text:0000000000402ac3\n.text:0000000000402ac5\n.text:0000000000402ac7\n.text:0000000000402ac9\n.text:0000000000402aca\n'
p1574
tp1575
sS'fwrite'
p1576
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p1577
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00610228)();\u000a  return sVar1;\u000a}\u000a\u000a
p1578
S'JMP qword ptr [0x00610228]\n'
p1579
S'ff 25 f2 e6 20 00\n'
p1580
S'.plt:0000000000401b30\n'
p1581
tp1582
sS'rpl_mktime'
p1583
(S'\n__stdcall rpl_mktime(tm * tp)\n'
p1584
V\u000atime_t rpl_mktime(tm *tp)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = mktime_internal(tp,localtime_r,&localtime_offset);\u000a  return tVar1;\u000a}\u000a\u000a
p1585
S'MOV ESI,0x401780\nMOV EDX,0x610490\nJMP 0x00408b10\n'
p1586
S'be 80 17 40 00\nba 90 04 61 00\ne9 f1 f8 ff ff\n'
p1587
S'.text:0000000000409210\n.text:0000000000409215\n.text:000000000040921a\n'
p1588
tp1589
sS'__do_global_dtors_aux'
p1590
(S'\n__stdcall __do_global_dtors_aux()\n'
p1591
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1592
S'CMP byte ptr [0x00610328],0x0\nJNZ 0x00401c6a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401bd0\nPOP RBP\nMOV byte ptr [0x00610328],0x1\nRET\n'
p1593
S'80 3d d1 e6 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 be e6 20 00 01\nf3 c3\n'
p1594
S'.text:0000000000401c50\n.text:0000000000401c57\n.text:0000000000401c59\n.text:0000000000401c5a\n.text:0000000000401c5d\n.text:0000000000401c62\n.text:0000000000401c63\n.text:0000000000401c6a\n'
p1595
tp1596
sS'c_isprint'
p1597
(S'\n__stdcall c_isprint()\n'
p1598
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p1599
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p1600
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p1601
S'.text:00000000004097c0\n.text:00000000004097c3\n.text:00000000004097c6\n.text:00000000004097c9\n'
p1602
tp1603
sS'_fini'
p1604
(S'\n__stdcall _fini()\n'
p1605
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1606
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1607
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1608
S'.fini:0000000000409cc0\n.fini:0000000000409cc4\n.fini:0000000000409cc8\n'
p1609
tp1610
sS'iso_week_days'
p1611
(S'\n__stdcall iso_week_days()\n'
p1612
V\u000aint iso_week_days(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ESI;\u000a  int in_EDI;\u000a  \u000a  iVar1 = (in_EDI + 0x17e) - in_ESI;\u000a  return (int)((in_EDI + 3) -\u000a              (iVar1 + (iVar1 / 7 + (iVar1 >> 0x1f) +\u000a                       (uint)((ulong)((long)iVar1 * 0x92492493) >> 0x3f)) * -7));\u000a}\u000a\u000a
p1613
S'LEA EAX,[0x17e + RDI]\nSUB EAX,ESI\nCDQE\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD ECX,EAX\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x2\nADD ECX,EDX\nLEA EDX,[RCX*0x8]\nSUB EDX,ECX\nSUB EAX,EDX\nNEG EAX\nLEA EAX,[RDI + RAX*0x1 + 0x3]\nRET\n'
p1614
S'8d 87 7e 01 00 00\n29 f0\n48 98\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c1\n89 ca\nc1 ea 1f\nc1 f9 02\n01 d1\n8d 14 cd 00 00 00 00\n29 ca\n29 d0\nf7 d8\n8d 44 07 03\nc3\n'
p1615
S'.text:0000000000404630\n.text:0000000000404636\n.text:0000000000404638\n.text:000000000040463a\n.text:0000000000404641\n.text:0000000000404645\n.text:0000000000404647\n.text:0000000000404649\n.text:000000000040464c\n.text:000000000040464f\n.text:0000000000404651\n.text:0000000000404658\n.text:000000000040465a\n.text:000000000040465c\n.text:000000000040465e\n.text:0000000000404662\n'
p1616
tp1617
sS'unsetenv'
p1618
(S'\n__stdcall unsetenv(char * __name)\n'
p1619
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint unsetenv(char *__name)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_unsetenv_00610208)();\u000a  return iVar1;\u000a}\u000a\u000a
p1620
S'JMP qword ptr [0x00610208]\n'
p1621
S'ff 25 12 e7 20 00\n'
p1622
S'.plt:0000000000401af0\n'
p1623
tp1624
sS'__fpending'
p1625
(S'\n__stdcall __fpending()\n'
p1626
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_00610068)();\u000a  return;\u000a}\u000a\u000a
p1627
S'JMP qword ptr [0x00610068]\n'
p1628
S'ff 25 b2 e8 20 00\n'
p1629
S'.plt:00000000004017b0\n'
p1630
tp1631
s.