(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x600e08]\nPUSH RBP\nLEA RBP,[0x600e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004006c0\nTEST RBP,RBP\nJZ 0x00400bd6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00400bc0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 76 02 20 00\n55\n48 8d 2d 76 02 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 0f fb ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000400b80\n.text:0000000000400b82\n.text:0000000000400b84\n.text:0000000000400b87\n.text:0000000000400b89\n.text:0000000000400b8b\n.text:0000000000400b92\n.text:0000000000400b93\n.text:0000000000400b9a\n.text:0000000000400b9b\n.text:0000000000400b9e\n.text:0000000000400ba1\n.text:0000000000400ba4\n.text:0000000000400ba8\n.text:0000000000400bac\n.text:0000000000400bb1\n.text:0000000000400bb4\n.text:0000000000400bb6\n.text:0000000000400bb8\n.text:0000000000400bc0\n.text:0000000000400bc3\n.text:0000000000400bc6\n.text:0000000000400bc9\n.text:0000000000400bcd\n.text:0000000000400bd1\n.text:0000000000400bd4\n.text:0000000000400bd6\n.text:0000000000400bda\n.text:0000000000400bdb\n.text:0000000000400bdc\n.text:0000000000400bde\n.text:0000000000400be0\n.text:0000000000400be2\n.text:0000000000400be4\n'
p6
tp7
sS'_init'
p8
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p9
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00600ff8;\u000a  if (PTR___gmon_start___00600ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00600ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00600ff8]\nTEST RAX,RAX\nJZ 0x004006d2\nCALL RAX\nADD RSP,0x8\nRET\n'
p11
S'48 83 ec 08\n48 8b 05 2d 09 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p12
S'.init:00000000004006c0\n.init:00000000004006c4\n.init:00000000004006cb\n.init:00000000004006ce\n.init:00000000004006d0\n.init:00000000004006d2\n.init:00000000004006d6\n'
p13
tp14
sS'_start'
p15
(S'\n__stdcall _start()\n'
p16
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00600ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p17
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x400bf0\nMOV RCX,0x400b80\nMOV RDI,0x4008c0\nCALL qword ptr [0x00600ff0]\nHLT\n'
p18
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 f0 0b 40 00\n48 c7 c1 80 0b 40 00\n48 c7 c7 c0 08 40 00\nff 15 06 08 20 00\nf4\n'
p19
S'.text:00000000004007c0\n.text:00000000004007c2\n.text:00000000004007c5\n.text:00000000004007c6\n.text:00000000004007c9\n.text:00000000004007cd\n.text:00000000004007ce\n.text:00000000004007cf\n.text:00000000004007d6\n.text:00000000004007dd\n.text:00000000004007e4\n.text:00000000004007ea\n'
p20
tp21
sS'stdin_to_stream'
p22
(S'\n__stdcall stdin_to_stream(char * buf, ssize_t r, FILE * outf)\n'
p23
V\u000avoid stdin_to_stream(char *buf,ssize_t r,FILE *outf)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  if (0 < r) {\u000a    do {\u000a      sVar1 = fwrite(buf,r,1,(FILE *)outf);\u000a      if (sVar1 == 0) {\u000a        fwrite("Write error\u005cn",0xc,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a        exit(1);\u000a      }\u000a      r = read(0,buf,0x2000);\u000a    } while (0 < r);\u000a  }\u000a  if (r == 0xffffffffffffffff) {\u000a    perror("read");\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RAX,RSI\nMOV RBX,RDI\nTEST RAX,RAX\nJG 0x00400b14\nJMP 0x00400b51\nXOR EDI,EDI\nMOV EDX,0x2000\nMOV RSI,RBX\nCALL 0x00400740\nTEST RAX,RAX\nJLE 0x00400b51\nMOV EDX,0x1\nMOV RDI,RBX\nMOV RSI,RAX\nMOV RCX,R14\nCALL 0x004007a0\nTEST RAX,RAX\nJNZ 0x00400b00\nMOV RCX,qword ptr [0x006010c0]\nMOV EDI,0x400c4d\nMOV ESI,0xc\nMOV EDX,0x1\nCALL 0x004007a0\nMOV EDI,0x1\nCALL 0x00400790\nCMP RAX,-0x1\nJZ 0x00400b5f\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV EDI,0x400c28\nCALL 0x00400770\nMOV EDI,0x1\nCALL 0x00400790\n'
p25
S'41 56\n53\n50\n49 89 d6\n48 89 f0\n48 89 fb\n48 85 c0\n7f 22\neb 5d\n31 ff\nba 00 20 00 00\n48 89 de\ne8 31 fc ff ff\n48 85 c0\n7e 3d\nba 01 00 00 00\n48 89 df\n48 89 c6\n4c 89 f1\ne8 79 fc ff ff\n48 85 c0\n75 d4\n48 8b 0d 8d 05 20 00\nbf 4d 0c 40 00\nbe 0c 00 00 00\nba 01 00 00 00\ne8 59 fc ff ff\nbf 01 00 00 00\ne8 3f fc ff ff\n48 83 f8 ff\n74 08\n48 83 c4 08\n5b\n41 5e\nc3\nbf 28 0c 40 00\ne8 07 fc ff ff\nbf 01 00 00 00\ne8 1d fc ff ff\n'
p26
S'.text:0000000000400ae0\n.text:0000000000400ae2\n.text:0000000000400ae3\n.text:0000000000400ae4\n.text:0000000000400ae7\n.text:0000000000400aea\n.text:0000000000400aed\n.text:0000000000400af0\n.text:0000000000400af2\n.text:0000000000400b00\n.text:0000000000400b02\n.text:0000000000400b07\n.text:0000000000400b0a\n.text:0000000000400b0f\n.text:0000000000400b12\n.text:0000000000400b14\n.text:0000000000400b19\n.text:0000000000400b1c\n.text:0000000000400b1f\n.text:0000000000400b22\n.text:0000000000400b27\n.text:0000000000400b2a\n.text:0000000000400b2c\n.text:0000000000400b33\n.text:0000000000400b38\n.text:0000000000400b3d\n.text:0000000000400b42\n.text:0000000000400b47\n.text:0000000000400b4c\n.text:0000000000400b51\n.text:0000000000400b55\n.text:0000000000400b57\n.text:0000000000400b5b\n.text:0000000000400b5c\n.text:0000000000400b5e\n.text:0000000000400b5f\n.text:0000000000400b64\n.text:0000000000400b69\n.text:0000000000400b6e\n'
p27
tp28
sS'main'
p29
(S'\n__stdcall main(char * * argv)\n'
p30
V\u000aint main(char **argv)\u000a\u000a{\u000a  char **__argv;\u000a  byte *pbVar1;\u000a  int iVar2;\u000a  __pid_t __pid;\u000a  __pid_t _Var3;\u000a  ssize_t r;\u000a  FILE *outf;\u000a  long in_RSI;\u000a  uint __sig;\u000a  char *__s;\u000a  bool bVar4;\u000a  int fds [2];\u000a  char buf [8192];\u000a  int local_2044;\u000a  int local_2040;\u000a  uint local_203c;\u000a  char local_2038 [8200];\u000a  \u000a  if (((int)argv < 2) ||\u000a     (((((int)argv == 2 && (__s = *(char **)(in_RSI + 8), *__s == '-')) && (__s[1] == 'n')) &&\u000a      (__s[2] == 0)))) {\u000a    fwrite("Usage: ifne [-n] command [args]\u005cn",0x20,1,stderr);\u000a  }\u000a  else {\u000a    pbVar1 = *(byte **)(in_RSI + 8);\u000a    iVar2 = 0x2d - (uint)*pbVar1;\u000a    if ((iVar2 == 0) && (iVar2 = 0x6e - (uint)pbVar1[1], iVar2 == 0)) {\u000a      iVar2 = -(uint)pbVar1[2];\u000a    }\u000a    bVar4 = iVar2 == 0;\u000a    r = read(0,local_2038,0x2000);\u000a    if ((r == 0) && (!bVar4)) {\u000a      return 0;\u000a    }\u000a    if (r == -1) {\u000a      __s = "read";\u000a    }\u000a    else {\u000a      iVar2 = pipe(&local_2044);\u000a      if (iVar2 == 0) {\u000a        if (r != 0 && bVar4) {\u000a          stdin_to_stream(local_2038,r,stdout);\u000a          return 0;\u000a        }\u000a        __pid = fork();\u000a        if (__pid == -1) {\u000a          __s = "fork";\u000a        }\u000a        else {\u000a          if (__pid == 0) {\u000a            close(local_2040);\u000a            iVar2 = dup2(local_2044,0);\u000a            if (iVar2 == 0) {\u000a              __argv = (char **)(in_RSI + 8 + (ulong)bVar4 * 8);\u000a              execvp(*__argv,__argv);\u000a              perror(*__argv);\u000a              close(local_2044);\u000a              return 1;\u000a            }\u000a            __s = "dup2";\u000a          }\u000a          else {\u000a            close(local_2044);\u000a            outf = (FILE *)fdopen(local_2040,"w");\u000a            if (outf == (FILE *)0x0) {\u000a              perror("fdopen");\u000a                    /* WARNING: Subroutine does not return */\u000a              exit(1);\u000a            }\u000a            stdin_to_stream(local_2038,r,outf);\u000a            fclose((FILE *)outf);\u000a            _Var3 = waitpid(__pid,(int *)&local_203c,0);\u000a            if (_Var3 == __pid) {\u000a              __sig = local_203c & 0x7f;\u000a              if (__sig == 0) {\u000a                return local_203c >> 8 & 0xff;\u000a              }\u000a              if (0 < (int)(__sig * 0x1000000 + 0x1000000) >> 0x19) {\u000a                raise(__sig);\u000a                return 1;\u000a              }\u000a              return 1;\u000a            }\u000a            __s = "waitpid";\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        __s = "pipe";\u000a      }\u000a    }\u000a    perror(__s);\u000a  }\u000a  return 1;\u000a}\u000a\u000a
p31
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2018\nMOV R14,RSI\nCMP EDI,0x2\nJL 0x00400a2b\nJNZ 0x004008f8\nMOV RAX,qword ptr [R14 + 0x8]\nCMP byte ptr [RAX],0x2d\nJNZ 0x004008f8\nCMP byte ptr [RAX + 0x1],0x6e\nJNZ 0x004008f8\nCMP byte ptr [RAX + 0x2],0x0\nJZ 0x00400a2b\nMOV RCX,qword ptr [R14 + 0x8]\nMOVZX EDX,byte ptr [RCX]\nMOV EAX,0x2d\nSUB EAX,EDX\nJNZ 0x0040091b\nMOVZX EDX,byte ptr [RCX + 0x1]\nMOV EAX,0x6e\nSUB EAX,EDX\nJNZ 0x0040091b\nMOVZX EAX,byte ptr [RCX + 0x2]\nNEG EAX\nXOR R12D,R12D\nTEST EAX,EAX\nSETZ R13B\nXOR EBP,EBP\nLEA RSI,[RSP + 0x10]\nXOR EDI,EDI\nMOV EDX,0x2000\nCALL 0x00400740\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00400948\nTEST R13B,R13B\nJZ 0x00400ab1\nCMP RBX,-0x1\nJZ 0x00400a48\nLEA RDI,[RSP + 0x4]\nCALL 0x00400730\nTEST EAX,EAX\nJNZ 0x00400a4f\nTEST RBX,RBX\nSETNZ AL\nAND AL,R13B\nCMP AL,0x1\nJNZ 0x0040098a\nMOV RDX,qword ptr [0x006010a0]\nLEA RDI,[RSP + 0x10]\nMOV RSI,RBX\nCALL 0x00400ae0\nJMP 0x00400ab1\nCALL 0x004007b0\nMOV R15D,EAX\nCMP R15D,-0x1\nJZ 0x00400a5d\nTEST R15D,R15D\nJZ 0x00400a64\nMOV EDI,dword ptr [RSP + 0x4]\nCALL 0x00400720\nMOV EDI,dword ptr [RSP + 0x8]\nMOV ESI,0x400c3c\nCALL 0x00400750\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00400ac5\nLEA RDI,[RSP + 0x10]\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00400ae0\nMOV RDI,RBP\nCALL 0x00400700\nLEA RSI,[RSP + 0xc]\nXOR EDX,EDX\nMOV EDI,R15D\nCALL 0x00400760\nCMP EAX,R15D\nJNZ 0x00400a56\nMOV EAX,dword ptr [RSP + 0xc]\nMOV EDI,EAX\nAND EDI,0x7f\nJZ 0x00400a23\nMOV EAX,EDI\nSHL EAX,0x18\nADD EAX,0x1000000\nSAR EAX,0x19\nMOV EBP,0x1\nTEST EAX,EAX\nJLE 0x00400ab1\nCALL 0x004006f0\nJMP 0x00400ab1\nMOVZX EBP,AH\nJMP 0x00400ab1\nMOV RCX,qword ptr [0x006010c0]\nMOV EDI,0x400c07\nMOV ESI,0x20\nMOV EDX,0x1\nCALL 0x004007a0\nJMP 0x00400aac\nMOV EDI,0x400c28\nJMP 0x00400aa7\nMOV EDI,0x400c2d\nJMP 0x00400aa7\nMOV EDI,0x400c45\nJMP 0x00400aa7\nMOV EDI,0x400c37\nJMP 0x00400aa7\nMOV EDI,dword ptr [RSP + 0x8]\nCALL 0x00400720\nMOV EDI,dword ptr [RSP + 0x4]\nXOR ESI,ESI\nCALL 0x00400710\nTEST EAX,EAX\nJNZ 0x00400aa2\nMOV R12B,R13B\nLEA RBX,[R14 + R12*0x8 + 0x8]\nMOV RDI,qword ptr [RBX]\nMOV RSI,RBX\nCALL 0x00400780\nMOV RDI,qword ptr [RBX]\nCALL 0x00400770\nMOV EDI,dword ptr [RSP + 0x4]\nCALL 0x00400720\nJMP 0x00400aac\nMOV EDI,0x400c32\nCALL 0x00400770\nMOV EBP,0x1\nMOV EAX,EBP\nADD RSP,0x2018\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x400c3e\nCALL 0x00400770\nMOV EDI,0x1\nCALL 0x00400790\n'
p32
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 20 00 00\n49 89 f6\n83 ff 02\n0f 8c 4e 01 00 00\n75 19\n49 8b 46 08\n80 38 2d\n75 10\n80 78 01 6e\n75 0a\n80 78 02 00\n0f 84 33 01 00 00\n49 8b 4e 08\n0f b6 11\nb8 2d 00 00 00\n29 d0\n75 13\n0f b6 51 01\nb8 6e 00 00 00\n29 d0\n75 06\n0f b6 41 02\nf7 d8\n45 31 e4\n85 c0\n41 0f 94 c5\n31 ed\n48 8d 74 24 10\n31 ff\nba 00 20 00 00\ne8 09 fe ff ff\n48 89 c3\n48 85 db\n75 09\n45 84 ed\n0f 84 69 01 00 00\n48 83 fb ff\n0f 84 f6 00 00 00\n48 8d 7c 24 04\ne8 d4 fd ff ff\n85 c0\n0f 85 eb 00 00 00\n48 85 db\n0f 95 c0\n44 20 e8\n3c 01\n75 19\n48 8b 15 28 07 20 00\n48 8d 7c 24 10\n48 89 de\ne8 5b 01 00 00\ne9 27 01 00 00\ne8 21 fe ff ff\n41 89 c7\n41 83 ff ff\n0f 84 c1 00 00 00\n45 85 ff\n0f 84 bf 00 00 00\n8b 7c 24 04\ne8 72 fd ff ff\n8b 7c 24 08\nbe 3c 0c 40 00\ne8 94 fd ff ff\n48 89 c5\n48 85 ed\n0f 84 fd 00 00 00\n48 8d 7c 24 10\n48 89 de\n48 89 ea\ne8 08 01 00 00\n48 89 ef\ne8 20 fd ff ff\n48 8d 74 24 0c\n31 d2\n44 89 ff\ne8 71 fd ff ff\n44 39 f8\n75 62\n8b 44 24 0c\n89 c7\n83 e7 7f\n74 24\n89 f8\nc1 e0 18\n05 00 00 00 01\nc1 f8 19\nbd 01 00 00 00\n85 c0\n0f 8e 98 00 00 00\ne8 d2 fc ff ff\ne9 8e 00 00 00\n0f b6 ec\ne9 86 00 00 00\n48 8b 0d 8e 06 20 00\nbf 07 0c 40 00\nbe 20 00 00 00\nba 01 00 00 00\ne8 5a fd ff ff\neb 64\nbf 28 0c 40 00\neb 58\nbf 2d 0c 40 00\neb 51\nbf 45 0c 40 00\neb 4a\nbf 37 0c 40 00\neb 43\n8b 7c 24 08\ne8 b3 fc ff ff\n8b 7c 24 04\n31 f6\ne8 98 fc ff ff\n85 c0\n75 26\n45 88 ec\n4b 8d 5c e6 08\n48 8b 3b\n48 89 de\ne8 f1 fc ff ff\n48 8b 3b\ne8 d9 fc ff ff\n8b 7c 24 04\ne8 80 fc ff ff\neb 0a\nbf 32 0c 40 00\ne8 c4 fc ff ff\nbd 01 00 00 00\n89 e8\n48 81 c4 18 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf 3e 0c 40 00\ne8 a1 fc ff ff\nbf 01 00 00 00\ne8 b7 fc ff ff\n'
p33
S'.text:00000000004008c0\n.text:00000000004008c1\n.text:00000000004008c3\n.text:00000000004008c5\n.text:00000000004008c7\n.text:00000000004008c9\n.text:00000000004008ca\n.text:00000000004008d1\n.text:00000000004008d4\n.text:00000000004008d7\n.text:00000000004008dd\n.text:00000000004008df\n.text:00000000004008e3\n.text:00000000004008e6\n.text:00000000004008e8\n.text:00000000004008ec\n.text:00000000004008ee\n.text:00000000004008f2\n.text:00000000004008f8\n.text:00000000004008fc\n.text:00000000004008ff\n.text:0000000000400904\n.text:0000000000400906\n.text:0000000000400908\n.text:000000000040090c\n.text:0000000000400911\n.text:0000000000400913\n.text:0000000000400915\n.text:0000000000400919\n.text:000000000040091b\n.text:000000000040091e\n.text:0000000000400920\n.text:0000000000400924\n.text:0000000000400926\n.text:000000000040092b\n.text:000000000040092d\n.text:0000000000400932\n.text:0000000000400937\n.text:000000000040093a\n.text:000000000040093d\n.text:000000000040093f\n.text:0000000000400942\n.text:0000000000400948\n.text:000000000040094c\n.text:0000000000400952\n.text:0000000000400957\n.text:000000000040095c\n.text:000000000040095e\n.text:0000000000400964\n.text:0000000000400967\n.text:000000000040096a\n.text:000000000040096d\n.text:000000000040096f\n.text:0000000000400971\n.text:0000000000400978\n.text:000000000040097d\n.text:0000000000400980\n.text:0000000000400985\n.text:000000000040098a\n.text:000000000040098f\n.text:0000000000400992\n.text:0000000000400996\n.text:000000000040099c\n.text:000000000040099f\n.text:00000000004009a5\n.text:00000000004009a9\n.text:00000000004009ae\n.text:00000000004009b2\n.text:00000000004009b7\n.text:00000000004009bc\n.text:00000000004009bf\n.text:00000000004009c2\n.text:00000000004009c8\n.text:00000000004009cd\n.text:00000000004009d0\n.text:00000000004009d3\n.text:00000000004009d8\n.text:00000000004009db\n.text:00000000004009e0\n.text:00000000004009e5\n.text:00000000004009e7\n.text:00000000004009ea\n.text:00000000004009ef\n.text:00000000004009f2\n.text:00000000004009f4\n.text:00000000004009f8\n.text:00000000004009fa\n.text:00000000004009fd\n.text:00000000004009ff\n.text:0000000000400a01\n.text:0000000000400a04\n.text:0000000000400a09\n.text:0000000000400a0c\n.text:0000000000400a11\n.text:0000000000400a13\n.text:0000000000400a19\n.text:0000000000400a1e\n.text:0000000000400a23\n.text:0000000000400a26\n.text:0000000000400a2b\n.text:0000000000400a32\n.text:0000000000400a37\n.text:0000000000400a3c\n.text:0000000000400a41\n.text:0000000000400a46\n.text:0000000000400a48\n.text:0000000000400a4d\n.text:0000000000400a4f\n.text:0000000000400a54\n.text:0000000000400a56\n.text:0000000000400a5b\n.text:0000000000400a5d\n.text:0000000000400a62\n.text:0000000000400a64\n.text:0000000000400a68\n.text:0000000000400a6d\n.text:0000000000400a71\n.text:0000000000400a73\n.text:0000000000400a78\n.text:0000000000400a7a\n.text:0000000000400a7c\n.text:0000000000400a7f\n.text:0000000000400a84\n.text:0000000000400a87\n.text:0000000000400a8a\n.text:0000000000400a8f\n.text:0000000000400a92\n.text:0000000000400a97\n.text:0000000000400a9b\n.text:0000000000400aa0\n.text:0000000000400aa2\n.text:0000000000400aa7\n.text:0000000000400aac\n.text:0000000000400ab1\n.text:0000000000400ab3\n.text:0000000000400aba\n.text:0000000000400abb\n.text:0000000000400abd\n.text:0000000000400abf\n.text:0000000000400ac1\n.text:0000000000400ac3\n.text:0000000000400ac4\n.text:0000000000400ac5\n.text:0000000000400aca\n.text:0000000000400acf\n.text:0000000000400ad4\n'
p34
tp35
sS'fdopen'
p36
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p37
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_00601048)();\u000a  return pFVar1;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00601048]\n'
p39
S'ff 25 f2 08 20 00\n'
p40
S'.plt:0000000000400750\n'
p41
tp42
sS'deregister_tm_clones'
p43
(S'\n__stdcall deregister_tm_clones()\n'
p44
V\u000a/* WARNING: Removing unreachable block (ram,0x00400805) */\u000a/* WARNING: Removing unreachable block (ram,0x0040080f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p45
S'MOV EAX,0x601097\nPUSH RBP\nSUB RAX,0x601090\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400820\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400820\nPOP RBP\nMOV EDI,0x601090\nJMP RAX\nPOP RBP\nRET\n'
p46
S'b8 97 10 60 00\n55\n48 2d 90 10 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 90 10 60 00\nff e0\n5d\nc3\n'
p47
S'.text:00000000004007f0\n.text:00000000004007f5\n.text:00000000004007f6\n.text:00000000004007fc\n.text:0000000000400800\n.text:0000000000400803\n.text:0000000000400805\n.text:000000000040080a\n.text:000000000040080d\n.text:000000000040080f\n.text:0000000000400810\n.text:0000000000400815\n.text:0000000000400820\n.text:0000000000400821\n'
p48
tp49
sS'raise'
p50
(S'\n__stdcall raise(int __sig)\n'
p51
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint raise(int __sig)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_raise_00601018)();\u000a  return iVar1;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00601018]\n'
p53
S'ff 25 22 09 20 00\n'
p54
S'.plt:00000000004006f0\n'
p55
tp56
sS'pipe'
p57
(S'\n__stdcall pipe(int * __pipedes)\n'
p58
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint pipe(int *__pipedes)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_pipe_00601038)();\u000a  return iVar1;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00601038]\n'
p60
S'ff 25 02 09 20 00\n'
p61
S'.plt:0000000000400730\n'
p62
tp63
sS'close'
p64
(S'\n__stdcall close(int __fd)\n'
p65
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_00601030)();\u000a  return iVar1;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00601030]\n'
p67
S'ff 25 0a 09 20 00\n'
p68
S'.plt:0000000000400720\n'
p69
tp70
sS'frame_dummy'
p71
(S'\n__stdcall frame_dummy()\n'
p72
V\u000a/* WARNING: Removing unreachable block (ram,0x004008aa) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p73
S'MOV EDI,0x600e18\nCMP qword ptr [RDI],0x0\nJNZ 0x004008a0\nJMP 0x00400830\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x0040089b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400830\n'
p74
S'bf 18 0e 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p75
S'.text:0000000000400890\n.text:0000000000400895\n.text:0000000000400899\n.text:000000000040089b\n.text:00000000004008a0\n.text:00000000004008a5\n.text:00000000004008a8\n.text:00000000004008aa\n.text:00000000004008ab\n.text:00000000004008ae\n.text:00000000004008b0\n.text:00000000004008b1\n'
p76
tp77
sS'register_tm_clones'
p78
(S'\n__stdcall register_tm_clones()\n'
p79
V\u000a/* WARNING: Removing unreachable block (ram,0x00400853) */\u000a/* WARNING: Removing unreachable block (ram,0x0040085d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p80
S'MOV ESI,0x601090\nPUSH RBP\nSUB RSI,0x601090\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400868\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400868\nPOP RBP\nMOV EDI,0x601090\nJMP RAX\nPOP RBP\nRET\n'
p81
S'be 90 10 60 00\n55\n48 81 ee 90 10 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 90 10 60 00\nff e0\n5d\nc3\n'
p82
S'.text:0000000000400830\n.text:0000000000400835\n.text:0000000000400836\n.text:000000000040083d\n.text:0000000000400841\n.text:0000000000400844\n.text:0000000000400847\n.text:000000000040084b\n.text:000000000040084e\n.text:0000000000400851\n.text:0000000000400853\n.text:0000000000400858\n.text:000000000040085b\n.text:000000000040085d\n.text:000000000040085e\n.text:0000000000400863\n.text:0000000000400868\n.text:0000000000400869\n'
p83
tp84
sS'read'
p85
(S'\n__stdcall read(int __fd, void * __buf, size_t __nbytes)\n'
p86
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t read(int __fd,void *__buf,size_t __nbytes)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_read_00601040)();\u000a  return sVar1;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00601040]\n'
p88
S'ff 25 fa 08 20 00\n'
p89
S'.plt:0000000000400740\n'
p90
tp91
sS'fclose'
p92
(S'\n__stdcall fclose(FILE * __stream)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_00601020)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00601020]\n'
p95
S'ff 25 1a 09 20 00\n'
p96
S'.plt:0000000000400700\n'
p97
tp98
sS'execvp'
p99
(S'\n__stdcall execvp(char * __file, char * * __argv)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint execvp(char *__file,char **__argv)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_execvp_00601060)();\u000a  return iVar1;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00601060]\n'
p102
S'ff 25 da 08 20 00\n'
p103
S'.plt:0000000000400780\n'
p104
tp105
sS'fwrite'
p106
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00601070)();\u000a  return sVar1;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00601070]\n'
p109
S'ff 25 ca 08 20 00\n'
p110
S'.plt:00000000004007a0\n'
p111
tp112
sS'FUN_004006e0'
p113
(S'\n__stdcall FUN_004006e0()\n'
p114
V\u000avoid FUN_004006e0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00601010)();\u000a  return;\u000a}\u000a\u000a
p115
S'PUSH qword ptr [0x00601008]\nJMP qword ptr [0x00601010]\n'
p116
S'ff 35 22 09 20 00\nff 25 24 09 20 00\n'
p117
S'.plt:00000000004006e0\n.plt:00000000004006e6\n'
p118
tp119
sS'exit'
p120
(S'\n__stdcall exit(int __status)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00601068)();\u000a  return;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00601068]\n'
p123
S'ff 25 d2 08 20 00\n'
p124
S'.plt:0000000000400790\n'
p125
tp126
sS'__libc_csu_fini'
p127
(S'\n__stdcall __libc_csu_fini()\n'
p128
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p129
S'RET\n'
p130
S'f3 c3\n'
p131
S'.text:0000000000400bf0\n'
p132
tp133
sS'fork'
p134
(S'\n__stdcall fork()\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t fork(void)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_fork_00601078)();\u000a  return _Var1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00601078]\n'
p137
S'ff 25 c2 08 20 00\n'
p138
S'.plt:00000000004007b0\n'
p139
tp140
sS'__do_global_dtors_aux'
p141
(S'\n__stdcall __do_global_dtors_aux()\n'
p142
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p143
S'CMP byte ptr [0x006010c8],0x0\nJNZ 0x0040088a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x004007f0\nPOP RBP\nMOV byte ptr [0x006010c8],0x1\nRET\n'
p144
S'80 3d 51 08 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 3e 08 20 00 01\nf3 c3\n'
p145
S'.text:0000000000400870\n.text:0000000000400877\n.text:0000000000400879\n.text:000000000040087a\n.text:000000000040087d\n.text:0000000000400882\n.text:0000000000400883\n.text:000000000040088a\n'
p146
tp147
sS'_fini'
p148
(S'\n__stdcall _fini()\n'
p149
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p150
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p151
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p152
S'.fini:0000000000400bf4\n.fini:0000000000400bf8\n.fini:0000000000400bfc\n'
p153
tp154
sS'perror'
p155
(S'\n__stdcall perror(char * __s)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid perror(char *__s)\u000a\u000a{\u000a  (*(code *)PTR_perror_00601058)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00601058]\n'
p158
S'ff 25 e2 08 20 00\n'
p159
S'.plt:0000000000400770\n'
p160
tp161
sS'dup2'
p162
(S'\n__stdcall dup2(int __fd, int __fd2)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint dup2(int __fd,int __fd2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_dup2_00601028)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00601028]\n'
p165
S'ff 25 12 09 20 00\n'
p166
S'.plt:0000000000400710\n'
p167
tp168
sS'waitpid'
p169
(S'\n__stdcall waitpid(__pid_t __pid, int * __stat_loc, int __options)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_waitpid_00601050)();\u000a  return _Var1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00601050]\n'
p172
S'ff 25 ea 08 20 00\n'
p173
S'.plt:0000000000400760\n'
p174
tp175
s.