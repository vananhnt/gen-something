(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x601dc8]\nPUSH RBP\nLEA RBP,[0x601dd0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004009b0\nTEST RBP,RBP\nJZ 0x00401296\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00401280\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 76 0b 20 00\n55\n48 8d 2d 76 0b 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 3f f7 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000401240\n.text:0000000000401242\n.text:0000000000401244\n.text:0000000000401247\n.text:0000000000401249\n.text:000000000040124b\n.text:0000000000401252\n.text:0000000000401253\n.text:000000000040125a\n.text:000000000040125b\n.text:000000000040125e\n.text:0000000000401261\n.text:0000000000401264\n.text:0000000000401268\n.text:000000000040126c\n.text:0000000000401271\n.text:0000000000401274\n.text:0000000000401276\n.text:0000000000401278\n.text:0000000000401280\n.text:0000000000401283\n.text:0000000000401286\n.text:0000000000401289\n.text:000000000040128d\n.text:0000000000401291\n.text:0000000000401294\n.text:0000000000401296\n.text:000000000040129a\n.text:000000000040129b\n.text:000000000040129c\n.text:000000000040129e\n.text:00000000004012a0\n.text:00000000004012a2\n.text:00000000004012a4\n'
p6
tp7
sS'XmuWnInitializeNodes'
p8
(S'\n__stdcall XmuWnInitializeNodes()\n'
p9
V\u000avoid XmuWnInitializeNodes(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuWnInitializeNodes_00602050)();\u000a  return;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x00602050]\n'
p11
S'ff 25 fa 15 20 00\n'
p12
S'.plt:0000000000400a50\n'
p13
tp14
sS'_init'
p15
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p16
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00601ff8;\u000a  if (PTR___gmon_start___00601ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00601ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p17
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00601ff8]\nTEST RAX,RAX\nJZ 0x004009c2\nCALL RAX\nADD RSP,0x8\nRET\n'
p18
S'48 83 ec 08\n48 8b 05 3d 16 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p19
S'.init:00000000004009b0\n.init:00000000004009b4\n.init:00000000004009bb\n.init:00000000004009be\n.init:00000000004009c0\n.init:00000000004009c2\n.init:00000000004009c6\n'
p20
tp21
sS'XtGetApplicationResources'
p22
(S'\n__stdcall XtGetApplicationResources()\n'
p23
V\u000avoid XtGetApplicationResources(void)\u000a\u000a{\u000a  (*(code *)PTR_XtGetApplicationResources_00602018)();\u000a  return;\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x00602018]\n'
p25
S'ff 25 32 16 20 00\n'
p26
S'.plt:00000000004009e0\n'
p27
tp28
sS'_start'
p29
(S'\n__stdcall _start()\n'
p30
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00601ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p31
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4012b0\nMOV RCX,0x401240\nMOV RDI,0x400bb0\nCALL qword ptr [0x00601ff0]\nHLT\n'
p32
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 b0 12 40 00\n48 c7 c1 40 12 40 00\n48 c7 c7 b0 0b 40 00\nff 15 16 15 20 00\nf4\n'
p33
S'.text:0000000000400ab0\n.text:0000000000400ab2\n.text:0000000000400ab5\n.text:0000000000400ab6\n.text:0000000000400ab9\n.text:0000000000400abd\n.text:0000000000400abe\n.text:0000000000400abf\n.text:0000000000400ac6\n.text:0000000000400acd\n.text:0000000000400ad4\n.text:0000000000400ada\n'
p34
tp35
sS'usage'
p36
(S'\n__stdcall usage()\n'
p37
V\u000avoid usage(void)\u000a\u000a{\u000a  fprintf(stderr,"usage:  %s [-options...]\u005cn%s\u005cn",ProgramName,\u000a                    \u000a          "\u005cnwhere options include:\u005cn    -all             list all known widget and object classes\u005cn    -tree            list all widgets and objects in a tree\u005cn    -nosuper         do not print superclass resources\u005cn    -variable        show variable name instead of class name\u005cn    -top name        object to be top of tree\u005cn    -format string   printf format for instance, class, type\u005cn"\u000a         );\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p38
S'PUSH RAX\nMOV RDI,qword ptr [0x006035e0]\nMOV RDX,qword ptr [0x006035f0]\nMOV ESI,0x4013fe\nMOV ECX,0x40141b\nXOR EAX,EAX\nCALL 0x00400a60\nMOV EDI,0x1\nCALL 0x00400aa0\n'
p39
S'50\n48 8b 3d 08 26 20 00\n48 8b 15 11 26 20 00\nbe fe 13 40 00\nb9 1b 14 40 00\n31 c0\ne8 70 fa ff ff\nbf 01 00 00 00\ne8 a6 fa ff ff\n'
p40
S'.text:0000000000400fd0\n.text:0000000000400fd1\n.text:0000000000400fd8\n.text:0000000000400fdf\n.text:0000000000400fe4\n.text:0000000000400fe9\n.text:0000000000400feb\n.text:0000000000400ff0\n.text:0000000000400ff5\n'
p41
tp42
sS'main'
p43
(S'\n__stdcall main(char * * argv)\n'
p44
V\u000aint main(char **argv)\u000a\u000a{\u000a  char *__s;\u000a  bool bVar1;\u000a  int iVar2;\u000a  undefined8 uVar3;\u000a  Widget toplevel;\u000a  XmuWidgetNode *topnode;\u000a  size_t sVar4;\u000a  XmuWidgetNode *node;\u000a  undefined1 *node_00;\u000a  char **ppcVar5;\u000a  char **in_RSI;\u000a  XtAppContext appcon;\u000a  int local_34;\u000a  undefined local_30 [8];\u000a  \u000a  local_34 = (int)argv;\u000a  ProgramName = *in_RSI;\u000a  XtSetLanguageProc(0,0,0);\u000a  uVar3 = XtAppInitialize(local_30,"Listres",Options,5,&local_34);\u000a  toplevel = (Widget)XtCreateWidget("dummy",widgetClass,uVar3,0,0);\u000a  XtGetApplicationResources(uVar3,&options,Resources,5,0,0);\u000a  XmuWnInitializeNodes(XawWidgetArray,(ulong)XawWidgetCount);\u000a  if (local_34 == 1) {\u000a    if (options.show_tree == 0) {\u000a      list_known_widgets();\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(0);\u000a    }\u000aLAB_00400dce:\u000a    tree_known_widgets();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  topnode = (XmuWidgetNode *)\u000a            XmuWnNameToNode(XawWidgetArray,(ulong)XawWidgetCount,options.top_object);\u000a  iVar2 = local_34 + -1;\u000a  ppcVar5 = in_RSI + 1;\u000a  if ((local_34 < 2) || (__s = *ppcVar5, *__s != '-')) {\u000a    local_34 = iVar2;\u000a    if (0 < iVar2) {\u000a      do {\u000a        if (**ppcVar5 == '-') {\u000a          usage();\u000a          break;\u000a        }\u000a        node = (XmuWidgetNode *)XmuWnNameToNode(XawWidgetArray,(ulong)XawWidgetCount);\u000a        if (node == (XmuWidgetNode *)0x0) {\u000a          fprintf(stderr,"%s:  unable to find widget \u005c"%s\u005c"\u005cn",ProgramName);\u000a        }\u000a        else {\u000a          list_resources(node,options.format,topnode,toplevel);\u000a        }\u000a        iVar2 = local_34 + -1;\u000a        ppcVar5 = ppcVar5 + 1;\u000a        bVar1 = 1 < local_34;\u000a        local_34 = iVar2;\u000a      } while (bVar1);\u000a    }\u000a  }\u000a  else {\u000a    local_34 = iVar2;\u000a    sVar4 = strlen(__s);\u000a    if (((int)sVar4 < 2) || (iVar2 = strncmp(__s,"-all",(long)(int)sVar4), iVar2 != 0)) {\u000a      usage();\u000a      goto LAB_00400dce;\u000a    }\u000a    if (0 < (int)XawWidgetCount) {\u000a      node_00 = XawWidgetArray;\u000a      iVar2 = 0;\u000a      do {\u000a        list_resources((XmuWidgetNode *)node_00,options.format,topnode,toplevel);\u000a        iVar2 = iVar2 + 1;\u000a        node_00 = (undefined1 *)((XmuWidgetNode *)node_00 + 1);\u000a      } while (iVar2 < (int)XawWidgetCount);\u000a    }\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p45
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RSI\nMOV dword ptr [RSP + 0x4],EDI\nMOV RAX,qword ptr [RBX]\nMOV qword ptr [0x006035f0],RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EDX,EDX\nCALL 0x00400a90\nSUB RSP,0x8\nLEA RDI,[RSP + 0x10]\nLEA R8,[RSP + 0xc]\nMOV ESI,0x4012c4\nMOV EDX,0x602090\nMOV ECX,0x5\nMOV R9,RBX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x00400a20\nADD RSP,0x20\nMOV R15,RAX\nMOV RSI,qword ptr [0x006035d0]\nMOV EDI,0x4012cc\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDX,R15\nCALL 0x00400a00\nMOV R14,RAX\nMOV ESI,0x6035f8\nMOV EDX,0x602130\nMOV ECX,0x5\nXOR R8D,R8D\nXOR R9D,R9D\nMOV RDI,R15\nCALL 0x004009e0\nMOV ESI,dword ptr [0x006035d8]\nMOV EDI,0x602220\nCALL 0x00400a50\nCMP dword ptr [RSP + 0x4],0x1\nJZ 0x00400db4\nMOV ESI,dword ptr [0x006035d8]\nMOV RDX,qword ptr [0x00603600]\nMOV EDI,0x602220\nCALL 0x00400a80\nMOV R15,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nLEA EAX,[RCX + -0x1]\nMOV dword ptr [RSP + 0x4],EAX\nADD RBX,0x8\nCMP ECX,0x2\nJL 0x00400d1c\nMOV R12,qword ptr [RBX]\nCMP byte ptr [R12],0x2d\nJNZ 0x00400d18\nMOV RDI,R12\nCALL 0x00400a30\nCMP EAX,0x2\nJL 0x00400dc9\nMOVSXD RDX,EAX\nMOV ESI,0x4012d2\nMOV RDI,R12\nCALL 0x00400a10\nTEST EAX,EAX\nJNZ 0x00400dc9\nCMP dword ptr [0x006035d8],0x0\nJLE 0x00400dad\nMOV EBX,0x602220\nXOR EBP,EBP\nNOP word ptr [RAX + RAX*0x1]\nMOV RSI,qword ptr [0x00603608]\nMOVSX R8D,byte ptr [0x006035fb]\nMOVSX R9D,byte ptr [0x006035fa]\nMOV RDI,RBX\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00400ee0\nINC EBP\nADD RBX,0x78\nCMP EBP,dword ptr [0x006035d8]\nJL 0x00400ce0\nJMP 0x00400dad\nMOV EAX,dword ptr [RSP + 0x4]\nTEST EAX,EAX\nJG 0x00400da0\nJMP 0x00400dad\nMOV ESI,dword ptr [0x006035d8]\nMOV EDI,0x602220\nCALL 0x00400a80\nTEST RAX,RAX\nJZ 0x00400d80\nMOV RSI,qword ptr [0x00603608]\nMOVSX R8D,byte ptr [0x006035fb]\nMOVSX R9D,byte ptr [0x006035fa]\nMOV RDI,RAX\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00400ee0\nMOV EAX,dword ptr [RSP + 0x4]\nLEA ECX,[RAX + -0x1]\nMOV dword ptr [RSP + 0x4],ECX\nADD RBX,0x8\nCMP EAX,0x1\nJG 0x00400da0\nJMP 0x00400dad\nMOV RDI,qword ptr [0x006035e0]\nMOV RDX,qword ptr [0x006035f0]\nMOV RCX,qword ptr [RBX]\nMOV ESI,0x4012d7\nXOR EAX,EAX\nCALL 0x00400a60\nJMP 0x00400d6a\nMOV RDX,qword ptr [RBX]\nCMP byte ptr [RDX],0x2d\nJNZ 0x00400d30\nCALL 0x00400fd0\nXOR EDI,EDI\nCALL 0x00400aa0\nCMP byte ptr [0x006035f8],0x0\nJNZ 0x00400dce\nCALL 0x00400e30\nXOR EDI,EDI\nCALL 0x00400aa0\nCALL 0x00400fd0\nCALL 0x00400de0\nXOR EDI,EDI\nCALL 0x00400aa0\n'
p46
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 f3\n89 7c 24 04\n48 8b 03\n48 89 05 23 2a 20 00\n31 ff\n31 f6\n31 d2\ne8 b8 fe ff ff\n48 83 ec 08\n48 8d 7c 24 10\n4c 8d 44 24 0c\nbe c4 12 40 00\nba 90 20 60 00\nb9 05 00 00 00\n49 89 d9\n6a 00\n6a 00\n6a 00\ne8 1d fe ff ff\n48 83 c4 20\n49 89 c7\n48 8b 35 bf 29 20 00\nbf cc 12 40 00\n31 c9\n45 31 c0\n4c 89 fa\ne8 dd fd ff ff\n49 89 c6\nbe f8 35 60 00\nba 30 21 60 00\nb9 05 00 00 00\n45 31 c0\n45 31 c9\n4c 89 ff\ne8 9d fd ff ff\n8b 35 8f 29 20 00\nbf 20 22 60 00\ne8 fd fd ff ff\n83 7c 24 04 01\n0f 84 56 01 00 00\n8b 35 74 29 20 00\n48 8b 15 95 29 20 00\nbf 20 22 60 00\ne8 0b fe ff ff\n49 89 c7\n8b 4c 24 04\n8d 41 ff\n89 44 24 04\n48 83 c3 08\n83 f9 02\n0f 8c 8c 00 00 00\n4c 8b 23\n41 80 3c 24 2d\n75 7e\n4c 89 e7\ne8 8e fd ff ff\n83 f8 02\n0f 8c 1e 01 00 00\n48 63 d0\nbe d2 12 40 00\n4c 89 e7\ne8 55 fd ff ff\n85 c0\n0f 85 06 01 00 00\n83 3d 0e 29 20 00 00\n0f 8e dd 00 00 00\nbb 20 22 60 00\n31 ed\n66 0f 1f 84 00 00 00 00 00\n48 8b 35 21 29 20 00\n44 0f be 05 0c 29 20 00\n44 0f be 0d 03 29 20 00\n48 89 df\n4c 89 fa\n4c 89 f1\ne8 db 01 00 00\nff c5\n48 83 c3 78\n3b 2d c7 28 20 00\n7c cd\ne9 95 00 00 00\n8b 44 24 04\n85 c0\n0f 8f 7c 00 00 00\ne9 84 00 00 00\n8b 35 a2 28 20 00\nbf 20 22 60 00\ne8 40 fd ff ff\n48 85 c0\n74 3b\n48 8b 35 bc 28 20 00\n44 0f be 05 a7 28 20 00\n44 0f be 0d 9e 28 20 00\n48 89 c7\n4c 89 fa\n4c 89 f1\ne8 76 01 00 00\n8b 44 24 04\n8d 48 ff\n89 4c 24 04\n48 83 c3 08\n83 f8 01\n7f 22\neb 2d\n48 8b 3d 59 28 20 00\n48 8b 15 62 28 20 00\n48 8b 0b\nbe d7 12 40 00\n31 c0\ne8 c3 fc ff ff\neb cb\n48 8b 13\n80 3a 2d\n75 88\ne8 23 02 00 00\n31 ff\ne8 ec fc ff ff\n80 3d 3d 28 20 00 00\n75 11\ne8 6e 00 00 00\n31 ff\ne8 d7 fc ff ff\ne8 02 02 00 00\ne8 0d 00 00 00\n31 ff\ne8 c6 fc ff ff\n'
p47
S'.text:0000000000400bb0\n.text:0000000000400bb1\n.text:0000000000400bb3\n.text:0000000000400bb5\n.text:0000000000400bb7\n.text:0000000000400bb8\n.text:0000000000400bbc\n.text:0000000000400bbf\n.text:0000000000400bc3\n.text:0000000000400bc6\n.text:0000000000400bcd\n.text:0000000000400bcf\n.text:0000000000400bd1\n.text:0000000000400bd3\n.text:0000000000400bd8\n.text:0000000000400bdc\n.text:0000000000400be1\n.text:0000000000400be6\n.text:0000000000400beb\n.text:0000000000400bf0\n.text:0000000000400bf5\n.text:0000000000400bf8\n.text:0000000000400bfa\n.text:0000000000400bfc\n.text:0000000000400bfe\n.text:0000000000400c03\n.text:0000000000400c07\n.text:0000000000400c0a\n.text:0000000000400c11\n.text:0000000000400c16\n.text:0000000000400c18\n.text:0000000000400c1b\n.text:0000000000400c1e\n.text:0000000000400c23\n.text:0000000000400c26\n.text:0000000000400c2b\n.text:0000000000400c30\n.text:0000000000400c35\n.text:0000000000400c38\n.text:0000000000400c3b\n.text:0000000000400c3e\n.text:0000000000400c43\n.text:0000000000400c49\n.text:0000000000400c4e\n.text:0000000000400c53\n.text:0000000000400c58\n.text:0000000000400c5e\n.text:0000000000400c64\n.text:0000000000400c6b\n.text:0000000000400c70\n.text:0000000000400c75\n.text:0000000000400c78\n.text:0000000000400c7c\n.text:0000000000400c7f\n.text:0000000000400c83\n.text:0000000000400c87\n.text:0000000000400c8a\n.text:0000000000400c90\n.text:0000000000400c93\n.text:0000000000400c98\n.text:0000000000400c9a\n.text:0000000000400c9d\n.text:0000000000400ca2\n.text:0000000000400ca5\n.text:0000000000400cab\n.text:0000000000400cae\n.text:0000000000400cb3\n.text:0000000000400cb6\n.text:0000000000400cbb\n.text:0000000000400cbd\n.text:0000000000400cc3\n.text:0000000000400cca\n.text:0000000000400cd0\n.text:0000000000400cd5\n.text:0000000000400cd7\n.text:0000000000400ce0\n.text:0000000000400ce7\n.text:0000000000400cef\n.text:0000000000400cf7\n.text:0000000000400cfa\n.text:0000000000400cfd\n.text:0000000000400d00\n.text:0000000000400d05\n.text:0000000000400d07\n.text:0000000000400d0b\n.text:0000000000400d11\n.text:0000000000400d13\n.text:0000000000400d18\n.text:0000000000400d1c\n.text:0000000000400d1e\n.text:0000000000400d24\n.text:0000000000400d30\n.text:0000000000400d36\n.text:0000000000400d3b\n.text:0000000000400d40\n.text:0000000000400d43\n.text:0000000000400d45\n.text:0000000000400d4c\n.text:0000000000400d54\n.text:0000000000400d5c\n.text:0000000000400d5f\n.text:0000000000400d62\n.text:0000000000400d65\n.text:0000000000400d6a\n.text:0000000000400d6e\n.text:0000000000400d71\n.text:0000000000400d75\n.text:0000000000400d79\n.text:0000000000400d7c\n.text:0000000000400d7e\n.text:0000000000400d80\n.text:0000000000400d87\n.text:0000000000400d8e\n.text:0000000000400d91\n.text:0000000000400d96\n.text:0000000000400d98\n.text:0000000000400d9d\n.text:0000000000400da0\n.text:0000000000400da3\n.text:0000000000400da6\n.text:0000000000400da8\n.text:0000000000400dad\n.text:0000000000400daf\n.text:0000000000400db4\n.text:0000000000400dbb\n.text:0000000000400dbd\n.text:0000000000400dc2\n.text:0000000000400dc4\n.text:0000000000400dc9\n.text:0000000000400dce\n.text:0000000000400dd3\n.text:0000000000400dd5\n'
p48
tp49
sS'XtSetLanguageProc'
p50
(S'\n__stdcall XtSetLanguageProc()\n'
p51
V\u000avoid XtSetLanguageProc(void)\u000a\u000a{\u000a  (*(code *)PTR_XtSetLanguageProc_00602070)();\u000a  return;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00602070]\n'
p53
S'ff 25 da 15 20 00\n'
p54
S'.plt:0000000000400a90\n'
p55
tp56
sS'list_resources'
p57
(S'\n__stdcall list_resources(XmuWidgetNode * node, char * format, XmuWidgetNode * topnode, Widget toplevel)\n'
p58
V\u000avoid list_resources(XmuWidgetNode *node,char *format,XmuWidgetNode *topnode,Widget toplevel)\u000a\u000a{\u000a  char *pcVar1;\u000a  char *pcVar2;\u000a  ulong in_R8;\u000a  uint in_R9D;\u000a  \u000a  XmuWnFetchResources(node,toplevel);\u000a  if (list_resources_first == 0) {\u000a    pcVar2 = "WidgetClass";\u000a    if (in_R9D != 0) {\u000a      pcVar2 = "Variable";\u000a    }\u000a    pcVar1 = "-----------";\u000a    if (in_R9D != 0) {\u000a      pcVar1 = "--------";\u000a    }\u000a    printf(format,pcVar2,"Instance",0x4013d8,&DAT_004013e7);\u000a    putchar(10);\u000a    printf(format,pcVar1,0x4013ef,0x4013f2,0x4013f3);\u000a    putchar(10);\u000a    list_resources_first = 1;\u000a  }\u000a  printf("%s:  ",node->label);\u000a  print_classname(node,topnode);\u000a  putchar(10);\u000a  print_resources(node,format,in_R8 & 0xffffffff,(ulong)in_R9D);\u000a  putchar(10);\u000a  return;\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R13D,R9D\nMOV R14D,R8D\nMOV R12,RDX\nMOV R15,RSI\nMOV RBP,RDI\nMOV RSI,RCX\nCALL 0x00400a70\nMOV AL,byte ptr [0x00603610]\nTEST AL,AL\nJNZ 0x00400f7d\nTEST R13D,R13D\nMOV EAX,0x40137a\nMOV ESI,0x4013d2\nCMOVNZ RSI,RAX\nMOV EAX,0x4013ef\nMOV EBX,0x4013ec\nCMOVNZ RBX,RAX\nMOV EDX,0x4013de\nMOV ECX,0x4013d8\nMOV R8D,0x4013e7\nXOR EAX,EAX\nMOV RDI,R15\nCALL 0x00400a40\nMOV EDI,0xa\nCALL 0x004009f0\nMOV EDX,0x4013ef\nMOV ECX,0x4013f2\nMOV R8D,0x4013f3\nXOR EAX,EAX\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00400a40\nMOV EDI,0xa\nCALL 0x004009f0\nMOV byte ptr [0x00603610],0x1\nMOV RSI,qword ptr [RBP]\nMOV EDI,0x4013f8\nXOR EAX,EAX\nCALL 0x00400a40\nXOR EDX,EDX\nMOV RDI,RBP\nMOV RSI,R12\nMOV ECX,R13D\nCALL 0x00401090\nMOV EDI,0xa\nCALL 0x004009f0\nMOV RDI,RBP\nMOV RSI,R15\nMOV EDX,R14D\nMOV ECX,R13D\nCALL 0x00401110\nMOV EDI,0xa\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004009f0\n'
p60
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 cd\n45 89 c6\n49 89 d4\n49 89 f7\n48 89 fd\n48 89 ce\ne8 6e fb ff ff\n8a 05 08 27 20 00\n84 c0\n75 71\n45 85 ed\nb8 7a 13 40 00\nbe d2 13 40 00\n48 0f 45 f0\nb8 ef 13 40 00\nbb ec 13 40 00\n48 0f 45 d8\nba de 13 40 00\nb9 d8 13 40 00\n41 b8 e7 13 40 00\n31 c0\n4c 89 ff\ne8 fb fa ff ff\nbf 0a 00 00 00\ne8 a1 fa ff ff\nba ef 13 40 00\nb9 f2 13 40 00\n41 b8 f3 13 40 00\n31 c0\n4c 89 ff\n48 89 de\ne8 d4 fa ff ff\nbf 0a 00 00 00\ne8 7a fa ff ff\nc6 05 93 26 20 00 01\n48 8b 75 00\nbf f8 13 40 00\n31 c0\ne8 b3 fa ff ff\n31 d2\n48 89 ef\n4c 89 e6\n44 89 e9\ne8 f3 00 00 00\nbf 0a 00 00 00\ne8 49 fa ff ff\n48 89 ef\n4c 89 fe\n44 89 f2\n44 89 e9\ne8 58 01 00 00\nbf 0a 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 20 fa ff ff\n'
p61
S'.text:0000000000400ee0\n.text:0000000000400ee1\n.text:0000000000400ee3\n.text:0000000000400ee5\n.text:0000000000400ee7\n.text:0000000000400ee9\n.text:0000000000400eea\n.text:0000000000400eeb\n.text:0000000000400eee\n.text:0000000000400ef1\n.text:0000000000400ef4\n.text:0000000000400ef7\n.text:0000000000400efa\n.text:0000000000400efd\n.text:0000000000400f02\n.text:0000000000400f08\n.text:0000000000400f0a\n.text:0000000000400f0c\n.text:0000000000400f0f\n.text:0000000000400f14\n.text:0000000000400f19\n.text:0000000000400f1d\n.text:0000000000400f22\n.text:0000000000400f27\n.text:0000000000400f2b\n.text:0000000000400f30\n.text:0000000000400f35\n.text:0000000000400f3b\n.text:0000000000400f3d\n.text:0000000000400f40\n.text:0000000000400f45\n.text:0000000000400f4a\n.text:0000000000400f4f\n.text:0000000000400f54\n.text:0000000000400f59\n.text:0000000000400f5f\n.text:0000000000400f61\n.text:0000000000400f64\n.text:0000000000400f67\n.text:0000000000400f6c\n.text:0000000000400f71\n.text:0000000000400f76\n.text:0000000000400f7d\n.text:0000000000400f81\n.text:0000000000400f86\n.text:0000000000400f88\n.text:0000000000400f8d\n.text:0000000000400f8f\n.text:0000000000400f92\n.text:0000000000400f95\n.text:0000000000400f98\n.text:0000000000400f9d\n.text:0000000000400fa2\n.text:0000000000400fa7\n.text:0000000000400faa\n.text:0000000000400fad\n.text:0000000000400fb0\n.text:0000000000400fb3\n.text:0000000000400fb8\n.text:0000000000400fbd\n.text:0000000000400fc1\n.text:0000000000400fc2\n.text:0000000000400fc4\n.text:0000000000400fc6\n.text:0000000000400fc8\n.text:0000000000400fca\n.text:0000000000400fcb\n'
p62
tp63
sS'printf'
p64
(S'\n__stdcall printf(char * __format)\n'
p65
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00602048)();\u000a  return iVar1;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00602048]\n'
p67
S'ff 25 02 16 20 00\n'
p68
S'.plt:0000000000400a40\n'
p69
tp70
sS'deregister_tm_clones'
p71
(S'\n__stdcall deregister_tm_clones()\n'
p72
V\u000a/* WARNING: Removing unreachable block (ram,0x00400af5) */\u000a/* WARNING: Removing unreachable block (ram,0x00400aff) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p73
S'MOV EAX,0x602227\nPUSH RBP\nSUB RAX,0x602220\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400b10\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400b10\nPOP RBP\nMOV EDI,0x602220\nJMP RAX\nPOP RBP\nRET\n'
p74
S'b8 27 22 60 00\n55\n48 2d 20 22 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 20 22 60 00\nff e0\n5d\nc3\n'
p75
S'.text:0000000000400ae0\n.text:0000000000400ae5\n.text:0000000000400ae6\n.text:0000000000400aec\n.text:0000000000400af0\n.text:0000000000400af3\n.text:0000000000400af5\n.text:0000000000400afa\n.text:0000000000400afd\n.text:0000000000400aff\n.text:0000000000400b00\n.text:0000000000400b05\n.text:0000000000400b10\n.text:0000000000400b11\n'
p76
tp77
sS'print_resources'
p78
(S'\n__stdcall print_resources()\n'
p79
V\u000avoid print_resources(undefined8 *puParm1,char *pcParm2,int iParm3,int iParm4)\u000a\u000a{\u000a  long lVar1;\u000a  undefined8 *puVar2;\u000a  undefined8 *puVar3;\u000a  ulong uVar4;\u000a  ulong uVar5;\u000a  \u000a  if (*(int *)(puParm1 + 10) != 0) {\u000a    lVar1 = puParm1[9];\u000a    puVar3 = (undefined8 *)(puParm1[8] + 0x10);\u000a    uVar5 = 0;\u000a    do {\u000a      puVar2 = *(undefined8 **)(lVar1 + uVar5 * 8);\u000a      if ((iParm3 != 0) || (puVar2 == puParm1)) {\u000a        if (iParm4 == 0) {\u000a          puVar2 = (undefined8 *)(*(long *)puVar2[1] + 8);\u000a        }\u000a        printf(pcParm2,*puVar2,puVar3[-2],puVar3[-1],*puVar3);\u000a        putchar(10);\u000a      }\u000a      uVar4 = uVar5 + 1;\u000a      puVar3 = puVar3 + 6;\u000a      uVar5 = uVar4 & 0xffffffff;\u000a    } while ((uint)uVar4 < *(uint *)(puParm1 + 10));\u000a  }\u000a  if (*(int *)(puParm1 + 0xd) != 0) {\u000a    printf(pcParm2,0x4013f3,0x4013f3,0x4013f3,0x4013f3);\u000a    putchar(10);\u000a    if (*(int *)(puParm1 + 0xd) != 0) {\u000a      lVar1 = puParm1[0xc];\u000a      puVar3 = (undefined8 *)(puParm1[0xb] + 0x10);\u000a      uVar5 = 0;\u000a      do {\u000a        puVar2 = *(undefined8 **)(lVar1 + uVar5 * 8);\u000a        if ((iParm3 != 0) || (puVar2 == puParm1)) {\u000a          if (iParm4 == 0) {\u000a            puVar2 = (undefined8 *)(*(long *)puVar2[1] + 8);\u000a          }\u000a          printf(pcParm2,*puVar2,puVar3[-2],puVar3[-1],*puVar3);\u000a          putchar(10);\u000a        }\u000a        uVar4 = uVar5 + 1;\u000a        puVar3 = puVar3 + 6;\u000a        uVar5 = uVar4 & 0xffffffff;\u000a      } while ((uint)uVar4 < *(uint *)(puParm1 + 0xd));\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p80
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV EBX,ECX\nMOV R12D,EDX\nMOV qword ptr [RSP],RSI\nMOV R15,RDI\nCMP dword ptr [R15 + 0x50],0x0\nJZ 0x0040118f\nMOV RBP,qword ptr [R15 + 0x40]\nMOV R13,qword ptr [R15 + 0x48]\nADD RBP,0x10\nXOR R14D,R14D\nNOP dword ptr [RAX]\nTEST R12D,R12D\nMOV RAX,qword ptr [R13 + R14*0x8]\nJNZ 0x0040114f\nCMP RAX,R15\nJNZ 0x00401182\nTEST EBX,EBX\nJNZ 0x0040115e\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RAX,qword ptr [RAX]\nADD RAX,0x8\nMOV RSI,qword ptr [RAX]\nMOV RDX,qword ptr [RBP + -0x10]\nMOV RCX,qword ptr [RBP + -0x8]\nMOV R8,qword ptr [RBP]\nXOR EAX,EAX\nMOV RDI,qword ptr [RSP]\nCALL 0x00400a40\nMOV EDI,0xa\nCALL 0x004009f0\nINC R14\nADD RBP,0x30\nCMP R14D,dword ptr [R15 + 0x50]\nJC 0x00401140\nMOV R14D,EBX\nCMP dword ptr [R15 + 0x68],0x0\nJZ 0x00401230\nMOV ESI,0x4013f3\nMOV EDX,0x4013f3\nMOV ECX,0x4013f3\nMOV R8D,0x4013f3\nXOR EAX,EAX\nMOV RDI,qword ptr [RSP]\nCALL 0x00400a40\nMOV EDI,0xa\nCALL 0x004009f0\nCMP dword ptr [R15 + 0x68],0x0\nJZ 0x00401230\nMOV RBP,qword ptr [R15 + 0x58]\nMOV R13,qword ptr [R15 + 0x60]\nADD RBP,0x10\nXOR EBX,EBX\nNOP dword ptr [RAX]\nTEST R12D,R12D\nMOV RAX,qword ptr [R13 + RBX*0x8]\nJNZ 0x004011ef\nCMP RAX,R15\nJNZ 0x00401223\nTEST R14D,R14D\nJNZ 0x004011ff\nMOV RAX,qword ptr [RAX + 0x8]\nMOV RAX,qword ptr [RAX]\nADD RAX,0x8\nMOV RSI,qword ptr [RAX]\nMOV RDX,qword ptr [RBP + -0x10]\nMOV RCX,qword ptr [RBP + -0x8]\nMOV R8,qword ptr [RBP]\nXOR EAX,EAX\nMOV RDI,qword ptr [RSP]\nCALL 0x00400a40\nMOV EDI,0xa\nCALL 0x004009f0\nINC RBX\nADD RBP,0x30\nCMP EBX,dword ptr [R15 + 0x68]\nJC 0x004011e0\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p81
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n89 cb\n41 89 d4\n48 89 34 24\n49 89 ff\n41 83 7f 50 00\n74 61\n49 8b 6f 40\n4d 8b 6f 48\n48 83 c5 10\n45 31 f6\n0f 1f 00\n45 85 e4\n4b 8b 44 f5 00\n75 05\n4c 39 f8\n75 33\n85 db\n75 0b\n48 8b 40 08\n48 8b 00\n48 83 c0 08\n48 8b 30\n48 8b 55 f0\n48 8b 4d f8\n4c 8b 45 00\n31 c0\n48 8b 3c 24\ne8 c8 f8 ff ff\nbf 0a 00 00 00\ne8 6e f8 ff ff\n49 ff c6\n48 83 c5 30\n45 3b 77 50\n72 b1\n41 89 de\n41 83 7f 68 00\n0f 84 93 00 00 00\nbe f3 13 40 00\nba f3 13 40 00\nb9 f3 13 40 00\n41 b8 f3 13 40 00\n31 c0\n48 8b 3c 24\ne8 83 f8 ff ff\nbf 0a 00 00 00\ne8 29 f8 ff ff\n41 83 7f 68 00\n74 62\n49 8b 6f 58\n4d 8b 6f 60\n48 83 c5 10\n31 db\n0f 1f 40 00\n45 85 e4\n49 8b 44 dd 00\n75 05\n4c 39 f8\n75 34\n45 85 f6\n75 0b\n48 8b 40 08\n48 8b 00\n48 83 c0 08\n48 8b 30\n48 8b 55 f0\n48 8b 4d f8\n4c 8b 45 00\n31 c0\n48 8b 3c 24\ne8 27 f8 ff ff\nbf 0a 00 00 00\ne8 cd f7 ff ff\n48 ff c3\n48 83 c5 30\n41 3b 5f 68\n72 b0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p82
S'.text:0000000000401110\n.text:0000000000401111\n.text:0000000000401113\n.text:0000000000401115\n.text:0000000000401117\n.text:0000000000401119\n.text:000000000040111a\n.text:000000000040111b\n.text:000000000040111d\n.text:0000000000401120\n.text:0000000000401124\n.text:0000000000401127\n.text:000000000040112c\n.text:000000000040112e\n.text:0000000000401132\n.text:0000000000401136\n.text:000000000040113a\n.text:000000000040113d\n.text:0000000000401140\n.text:0000000000401143\n.text:0000000000401148\n.text:000000000040114a\n.text:000000000040114d\n.text:000000000040114f\n.text:0000000000401151\n.text:0000000000401153\n.text:0000000000401157\n.text:000000000040115a\n.text:000000000040115e\n.text:0000000000401161\n.text:0000000000401165\n.text:0000000000401169\n.text:000000000040116d\n.text:000000000040116f\n.text:0000000000401173\n.text:0000000000401178\n.text:000000000040117d\n.text:0000000000401182\n.text:0000000000401185\n.text:0000000000401189\n.text:000000000040118d\n.text:000000000040118f\n.text:0000000000401192\n.text:0000000000401197\n.text:000000000040119d\n.text:00000000004011a2\n.text:00000000004011a7\n.text:00000000004011ac\n.text:00000000004011b2\n.text:00000000004011b4\n.text:00000000004011b8\n.text:00000000004011bd\n.text:00000000004011c2\n.text:00000000004011c7\n.text:00000000004011cc\n.text:00000000004011ce\n.text:00000000004011d2\n.text:00000000004011d6\n.text:00000000004011da\n.text:00000000004011dc\n.text:00000000004011e0\n.text:00000000004011e3\n.text:00000000004011e8\n.text:00000000004011ea\n.text:00000000004011ed\n.text:00000000004011ef\n.text:00000000004011f2\n.text:00000000004011f4\n.text:00000000004011f8\n.text:00000000004011fb\n.text:00000000004011ff\n.text:0000000000401202\n.text:0000000000401206\n.text:000000000040120a\n.text:000000000040120e\n.text:0000000000401210\n.text:0000000000401214\n.text:0000000000401219\n.text:000000000040121e\n.text:0000000000401223\n.text:0000000000401226\n.text:000000000040122a\n.text:000000000040122e\n.text:0000000000401230\n.text:0000000000401234\n.text:0000000000401235\n.text:0000000000401237\n.text:0000000000401239\n.text:000000000040123b\n.text:000000000040123d\n.text:000000000040123e\n'
p83
tp84
sS'strlen'
p85
(S'\n__stdcall strlen(char * __s)\n'
p86
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_00602040)();\u000a  return sVar1;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00602040]\n'
p88
S'ff 25 0a 16 20 00\n'
p89
S'.plt:0000000000400a30\n'
p90
tp91
sS'strncmp'
p92
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00602030)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00602030]\n'
p95
S'ff 25 1a 16 20 00\n'
p96
S'.plt:0000000000400a10\n'
p97
tp98
sS'FUN_004009d0'
p99
(S'\n__stdcall FUN_004009d0()\n'
p100
V\u000avoid FUN_004009d0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00602010)();\u000a  return;\u000a}\u000a\u000a
p101
S'PUSH qword ptr [0x00602008]\nJMP qword ptr [0x00602010]\n'
p102
S'ff 35 32 16 20 00\nff 25 34 16 20 00\n'
p103
S'.plt:00000000004009d0\n.plt:00000000004009d6\n'
p104
tp105
sS'putchar'
p106
(S'\n__stdcall putchar(int __c)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_00602020)();\u000a  return iVar1;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00602020]\n'
p109
S'ff 25 2a 16 20 00\n'
p110
S'.plt:00000000004009f0\n'
p111
tp112
sS'frame_dummy'
p113
(S'\n__stdcall frame_dummy()\n'
p114
V\u000a/* WARNING: Removing unreachable block (ram,0x00400b9a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p115
S'MOV EDI,0x601dd8\nCMP qword ptr [RDI],0x0\nJNZ 0x00400b90\nJMP 0x00400b20\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400b8b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400b20\n'
p116
S'bf d8 1d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p117
S'.text:0000000000400b80\n.text:0000000000400b85\n.text:0000000000400b89\n.text:0000000000400b8b\n.text:0000000000400b90\n.text:0000000000400b95\n.text:0000000000400b98\n.text:0000000000400b9a\n.text:0000000000400b9b\n.text:0000000000400b9e\n.text:0000000000400ba0\n.text:0000000000400ba1\n'
p118
tp119
sS'print_classname'
p120
(S'\n__stdcall print_classname(XmuWidgetNode * node, XmuWidgetNode * topnode)\n'
p121
V\u000aint print_classname(XmuWidgetNode *node,XmuWidgetNode *topnode)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ECX;\u000a  int in_EDX;\u000a  undefined *puVar2;\u000a  \u000a  if ((node == topnode) || (node == (XmuWidgetNode *)0x0)) {\u000a    iVar1 = in_EDX + -1;\u000a  }\u000a  else {\u000a    iVar1 = print_classname((XmuWidgetNode *)node->superclass,topnode);\u000a  }\u000a  if (node != (XmuWidgetNode *)0x0) {\u000a    if (in_ECX == 0) {\u000a      node = (XmuWidgetNode *)&((*node->widget_class_ptr)->core_class).class_name;\u000a    }\u000a    puVar2 = (undefined *)0x4012f7;\u000a    if (in_EDX != 0) {\u000a      puVar2 = &DAT_004013d0;\u000a    }\u000a    printf("%s%s",node->label,puVar2);\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p122
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBP,ECX\nMOV R14D,EDX\nMOV RBX,RDI\nTEST RBX,RBX\nSETZ AL\nCMP RBX,RSI\nJZ 0x004010c7\nTEST AL,AL\nJNZ 0x004010c7\nMOV RDI,qword ptr [RBX + 0x10]\nLEA EDX,[R14 + 0x1]\nMOV ECX,EBP\nCALL 0x00401090\nMOV R15D,EAX\nTEST RBX,RBX\nJNZ 0x004010d0\nJMP 0x004010ff\nLEA R15D,[R14 + -0x1]\nTEST RBX,RBX\nJZ 0x004010ff\nTEST EBP,EBP\nJNZ 0x004010df\nMOV RAX,qword ptr [RBX + 0x8]\nMOV RBX,qword ptr [RAX]\nADD RBX,0x8\nMOV RSI,qword ptr [RBX]\nTEST R14D,R14D\nMOV EAX,0x4013d0\nMOV EDX,0x4012f7\nCMOVNZ RDX,RAX\nMOV EDI,0x4013cb\nXOR EAX,EAX\nCALL 0x00400a40\nMOV EAX,R15D\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p123
S'55\n41 57\n41 56\n53\n50\n89 cd\n41 89 d6\n48 89 fb\n48 85 db\n0f 94 c0\n48 39 f3\n74 1d\n84 c0\n75 19\n48 8b 7b 10\n41 8d 56 01\n89 e9\ne8 d3 ff ff ff\n41 89 c7\n48 85 db\n75 0b\neb 38\n45 8d 7e ff\n48 85 db\n74 2f\n85 ed\n75 0b\n48 8b 43 08\n48 8b 18\n48 83 c3 08\n48 8b 33\n45 85 f6\nb8 d0 13 40 00\nba f7 12 40 00\n48 0f 45 d0\nbf cb 13 40 00\n31 c0\ne8 41 f9 ff ff\n44 89 f8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p124
S'.text:0000000000401090\n.text:0000000000401091\n.text:0000000000401093\n.text:0000000000401095\n.text:0000000000401096\n.text:0000000000401097\n.text:0000000000401099\n.text:000000000040109c\n.text:000000000040109f\n.text:00000000004010a2\n.text:00000000004010a5\n.text:00000000004010a8\n.text:00000000004010aa\n.text:00000000004010ac\n.text:00000000004010ae\n.text:00000000004010b2\n.text:00000000004010b6\n.text:00000000004010b8\n.text:00000000004010bd\n.text:00000000004010c0\n.text:00000000004010c3\n.text:00000000004010c5\n.text:00000000004010c7\n.text:00000000004010cb\n.text:00000000004010ce\n.text:00000000004010d0\n.text:00000000004010d2\n.text:00000000004010d4\n.text:00000000004010d8\n.text:00000000004010db\n.text:00000000004010df\n.text:00000000004010e2\n.text:00000000004010e5\n.text:00000000004010ea\n.text:00000000004010ef\n.text:00000000004010f3\n.text:00000000004010f8\n.text:00000000004010fa\n.text:00000000004010ff\n.text:0000000000401102\n.text:0000000000401106\n.text:0000000000401107\n.text:0000000000401109\n.text:000000000040110b\n.text:000000000040110c\n'
p125
tp126
sS'XtAppInitialize'
p127
(S'\n__stdcall XtAppInitialize()\n'
p128
V\u000avoid XtAppInitialize(void)\u000a\u000a{\u000a  (*(code *)PTR_XtAppInitialize_00602038)();\u000a  return;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00602038]\n'
p130
S'ff 25 12 16 20 00\n'
p131
S'.plt:0000000000400a20\n'
p132
tp133
sS'register_tm_clones'
p134
(S'\n__stdcall register_tm_clones()\n'
p135
V\u000a/* WARNING: Removing unreachable block (ram,0x00400b43) */\u000a/* WARNING: Removing unreachable block (ram,0x00400b4d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p136
S'MOV ESI,0x602220\nPUSH RBP\nSUB RSI,0x602220\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400b58\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400b58\nPOP RBP\nMOV EDI,0x602220\nJMP RAX\nPOP RBP\nRET\n'
p137
S'be 20 22 60 00\n55\n48 81 ee 20 22 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 20 22 60 00\nff e0\n5d\nc3\n'
p138
S'.text:0000000000400b20\n.text:0000000000400b25\n.text:0000000000400b26\n.text:0000000000400b2d\n.text:0000000000400b31\n.text:0000000000400b34\n.text:0000000000400b37\n.text:0000000000400b3b\n.text:0000000000400b3e\n.text:0000000000400b41\n.text:0000000000400b43\n.text:0000000000400b48\n.text:0000000000400b4b\n.text:0000000000400b4d\n.text:0000000000400b4e\n.text:0000000000400b53\n.text:0000000000400b58\n.text:0000000000400b59\n'
p139
tp140
sS'XmuWnNameToNode'
p141
(S'\n__stdcall XmuWnNameToNode()\n'
p142
V\u000avoid XmuWnNameToNode(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuWnNameToNode_00602068)();\u000a  return;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00602068]\n'
p144
S'ff 25 e2 15 20 00\n'
p145
S'.plt:0000000000400a80\n'
p146
tp147
sS'XmuWnFetchResources'
p148
(S'\n__stdcall XmuWnFetchResources()\n'
p149
V\u000avoid XmuWnFetchResources(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuWnFetchResources_00602060)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00602060]\n'
p151
S'ff 25 ea 15 20 00\n'
p152
S'.plt:0000000000400a70\n'
p153
tp154
sS'print_tree_level'
p155
(S'\n__stdcall print_tree_level(XmuWidgetNode * wn)\n'
p156
V\u000avoid print_tree_level(XmuWidgetNode *wn)\u000a\u000a{\u000a  uint uVar1;\u000a  uint in_ESI;\u000a  \u000a  if (wn != (XmuWidgetNode *)0x0) {\u000a    do {\u000a      uVar1 = in_ESI;\u000a      if (0 < (int)in_ESI) {\u000a        do {\u000a          putchar(0x20);\u000a          putchar(0x20);\u000a          uVar1 = uVar1 - 1;\u000a        } while (uVar1 != 0);\u000a      }\u000a      printf("%d:  %s/%s\u005cn",(ulong)in_ESI,wn->label,((*wn->widget_class_ptr)->core_class).class_name\u000a            );\u000a      print_tree_level((XmuWidgetNode *)wn->children);\u000a      wn = (XmuWidgetNode *)wn->siblings;\u000a    } while (wn != (XmuWidgetNode *)0x0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p157
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ESI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x0040107a\nLEA R15D,[R14 + 0x1]\nNOP word ptr CS:[RAX + RAX*0x1]\nTEST R14D,R14D\nJLE 0x00401048\nMOV EBP,R14D\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nCALL 0x004009f0\nMOV EDI,0x20\nCALL 0x004009f0\nDEC EBP\nJNZ 0x00401030\nMOV RDX,qword ptr [RBX]\nMOV RAX,qword ptr [RBX + 0x8]\nMOV RAX,qword ptr [RAX]\nMOV RCX,qword ptr [RAX + 0x8]\nMOV EDI,0x4013b8\nXOR EAX,EAX\nMOV ESI,R14D\nCALL 0x00400a40\nMOV RDI,qword ptr [RBX + 0x18]\nMOV ESI,R15D\nCALL 0x00401000\nMOV RBX,qword ptr [RBX + 0x20]\nTEST RBX,RBX\nJNZ 0x00401020\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p158
S'55\n41 57\n41 56\n53\n50\n41 89 f6\n48 89 fb\n48 85 db\n74 68\n45 8d 7e 01\n66 2e 0f 1f 84 00 00 00 00 00\n45 85 f6\n7e 23\n44 89 f5\n0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\ne8 b6 f9 ff ff\nbf 20 00 00 00\ne8 ac f9 ff ff\nff cd\n75 e8\n48 8b 13\n48 8b 43 08\n48 8b 00\n48 8b 48 08\nbf b8 13 40 00\n31 c0\n44 89 f6\ne8 db f9 ff ff\n48 8b 7b 18\n44 89 fe\ne8 8f ff ff ff\n48 8b 5b 20\n48 85 db\n75 a6\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p159
S'.text:0000000000401000\n.text:0000000000401001\n.text:0000000000401003\n.text:0000000000401005\n.text:0000000000401006\n.text:0000000000401007\n.text:000000000040100a\n.text:000000000040100d\n.text:0000000000401010\n.text:0000000000401012\n.text:0000000000401016\n.text:0000000000401020\n.text:0000000000401023\n.text:0000000000401025\n.text:0000000000401028\n.text:0000000000401030\n.text:0000000000401035\n.text:000000000040103a\n.text:000000000040103f\n.text:0000000000401044\n.text:0000000000401046\n.text:0000000000401048\n.text:000000000040104b\n.text:000000000040104f\n.text:0000000000401052\n.text:0000000000401056\n.text:000000000040105b\n.text:000000000040105d\n.text:0000000000401060\n.text:0000000000401065\n.text:0000000000401069\n.text:000000000040106c\n.text:0000000000401071\n.text:0000000000401075\n.text:0000000000401078\n.text:000000000040107a\n.text:000000000040107e\n.text:000000000040107f\n.text:0000000000401081\n.text:0000000000401083\n.text:0000000000401084\n'
p160
tp161
sS'list_known_widgets'
p162
(S'\n__stdcall list_known_widgets()\n'
p163
V\u000avoid list_known_widgets(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  undefined1 *node;\u000a  uint uVar4;\u000a  \u000a  iVar3 = XawWidgetCount;\u000a  if (0 < XawWidgetCount) {\u000a    node = XawWidgetArray;\u000a    iVar2 = 0;\u000a    uVar4 = 0;\u000a    do {\u000a      sVar1 = strlen(*(char **)node);\u000a      if ((int)uVar4 <= (int)(uint)sVar1) {\u000a        uVar4 = (uint)sVar1;\u000a      }\u000a      iVar2 = iVar2 + 1;\u000a      node = (undefined1 *)((char **)node + 0xf);\u000a    } while (iVar2 < iVar3);\u000a    if (0 < XawWidgetCount) {\u000a      node = XawWidgetArray;\u000a      iVar3 = 0;\u000a      do {\u000a        printf("%-*s  ",(ulong)uVar4,((XmuWidgetNode *)node)->label);\u000a        print_classname((XmuWidgetNode *)node,(XmuWidgetNode *)0x0);\u000a        putchar(10);\u000a        iVar3 = iVar3 + 1;\u000a        node = (undefined1 *)((XmuWidgetNode *)node + 1);\u000a      } while (iVar3 < XawWidgetCount);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p164
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nCMP dword ptr [0x006035d8],0x0\nJLE 0x00400ec8\nMOV EBP,0x602220\nXOR EBX,EBX\nMOV R14D,dword ptr [0x006035d8]\nXOR R15D,R15D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [RBP]\nCALL 0x00400a30\nCMP EAX,R15D\nCMOVGE R15D,EAX\nINC EBX\nADD RBP,0x78\nCMP EBX,R14D\nJL 0x00400e60\nCMP dword ptr [0x006035d8],0x0\nJLE 0x00400ec8\nMOV R14D,0x602220\nXOR EBP,EBP\nNOP dword ptr [RAX]\nMOV RDX,qword ptr [R14]\nMOV EDI,0x4013c4\nXOR EAX,EAX\nMOV ESI,R15D\nCALL 0x00400a40\nXOR ESI,ESI\nXOR EDX,EDX\nXOR ECX,ECX\nMOV RDI,R14\nCALL 0x00401090\nMOV EDI,0xa\nCALL 0x004009f0\nINC EBP\nADD R14,0x78\nCMP EBP,dword ptr [0x006035d8]\nJL 0x00400e90\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p165
S'55\n41 57\n41 56\n53\n50\n83 3d 9a 27 20 00 00\n0f 8e 84 00 00 00\nbd 20 22 60 00\n31 db\n44 8b 35 86 27 20 00\n45 31 ff\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 7d 00\ne8 c7 fb ff ff\n44 39 f8\n44 0f 4d f8\nff c3\n48 83 c5 78\n44 39 f3\n7c e5\n83 3d 56 27 20 00 00\n7e 44\n41 be 20 22 60 00\n31 ed\n0f 1f 40 00\n49 8b 16\nbf c4 13 40 00\n31 c0\n44 89 fe\ne8 9e fb ff ff\n31 f6\n31 d2\n31 c9\n4c 89 f7\ne8 e0 01 00 00\nbf 0a 00 00 00\ne8 36 fb ff ff\nff c5\n49 83 c6 78\n3b 2d 12 27 20 00\n7c c8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p166
S'.text:0000000000400e30\n.text:0000000000400e31\n.text:0000000000400e33\n.text:0000000000400e35\n.text:0000000000400e36\n.text:0000000000400e37\n.text:0000000000400e3e\n.text:0000000000400e44\n.text:0000000000400e49\n.text:0000000000400e4b\n.text:0000000000400e52\n.text:0000000000400e55\n.text:0000000000400e60\n.text:0000000000400e64\n.text:0000000000400e69\n.text:0000000000400e6c\n.text:0000000000400e70\n.text:0000000000400e72\n.text:0000000000400e76\n.text:0000000000400e79\n.text:0000000000400e7b\n.text:0000000000400e82\n.text:0000000000400e84\n.text:0000000000400e8a\n.text:0000000000400e8c\n.text:0000000000400e90\n.text:0000000000400e93\n.text:0000000000400e98\n.text:0000000000400e9a\n.text:0000000000400e9d\n.text:0000000000400ea2\n.text:0000000000400ea4\n.text:0000000000400ea6\n.text:0000000000400ea8\n.text:0000000000400eab\n.text:0000000000400eb0\n.text:0000000000400eb5\n.text:0000000000400eba\n.text:0000000000400ebc\n.text:0000000000400ec0\n.text:0000000000400ec6\n.text:0000000000400ec8\n.text:0000000000400ecc\n.text:0000000000400ecd\n.text:0000000000400ecf\n.text:0000000000400ed1\n.text:0000000000400ed2\n'
p167
tp168
sS'fprintf'
p169
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00602058)();\u000a  return iVar1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00602058]\n'
p172
S'ff 25 f2 15 20 00\n'
p173
S'.plt:0000000000400a60\n'
p174
tp175
sS'exit'
p176
(S'\n__stdcall exit(int __status)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00602078)();\u000a  return;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00602078]\n'
p179
S'ff 25 d2 15 20 00\n'
p180
S'.plt:0000000000400aa0\n'
p181
tp182
sS'__libc_csu_fini'
p183
(S'\n__stdcall __libc_csu_fini()\n'
p184
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p185
S'RET\n'
p186
S'f3 c3\n'
p187
S'.text:00000000004012b0\n'
p188
tp189
sS'__do_global_dtors_aux'
p190
(S'\n__stdcall __do_global_dtors_aux()\n'
p191
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p192
S'CMP byte ptr [0x006035e8],0x0\nJNZ 0x00400b7a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400ae0\nPOP RBP\nMOV byte ptr [0x006035e8],0x1\nRET\n'
p193
S'80 3d 81 2a 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 6e 2a 20 00 01\nf3 c3\n'
p194
S'.text:0000000000400b60\n.text:0000000000400b67\n.text:0000000000400b69\n.text:0000000000400b6a\n.text:0000000000400b6d\n.text:0000000000400b72\n.text:0000000000400b73\n.text:0000000000400b7a\n'
p195
tp196
sS'_fini'
p197
(S'\n__stdcall _fini()\n'
p198
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p199
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p200
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p201
S'.fini:00000000004012b4\n.fini:00000000004012b8\n.fini:00000000004012bc\n'
p202
tp203
sS'tree_known_widgets'
p204
(S'\n__stdcall tree_known_widgets()\n'
p205
V\u000avoid tree_known_widgets(void)\u000a\u000a{\u000a  undefined1 *wn;\u000a  int iVar1;\u000a  \u000a  if (0 < XawWidgetCount) {\u000a    wn = XawWidgetArray;\u000a    iVar1 = 0;\u000a    do {\u000a      if (((XmuWidgetNode *)wn)->superclass == (_XmuWidgetNode *)0x0) {\u000a        print_tree_level((XmuWidgetNode *)wn);\u000a      }\u000a      iVar1 = iVar1 + 1;\u000a      wn = (undefined1 *)((XmuWidgetNode *)wn + 1);\u000a    } while (iVar1 < XawWidgetCount);\u000a  }\u000a  return;\u000a}\u000a\u000a
p206
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nCMP dword ptr [0x006035d8],0x0\nJLE 0x00400e1f\nMOV EBX,0x602220\nXOR EBP,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP qword ptr [RBX + 0x10],0x0\nJNZ 0x00400e11\nXOR ESI,ESI\nMOV RDI,RBX\nCALL 0x00401000\nINC EBP\nADD RBX,0x78\nCMP EBP,dword ptr [0x006035d8]\nJL 0x00400e00\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p207
S'55\n53\n50\n83 3d ee 27 20 00 00\n7e 33\nbb 20 22 60 00\n31 ed\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 83 7b 10 00\n75 0a\n31 f6\n48 89 df\ne8 ef 01 00 00\nff c5\n48 83 c3 78\n3b 2d bb 27 20 00\n7c e1\n48 83 c4 08\n5b\n5d\nc3\n'
p208
S'.text:0000000000400de0\n.text:0000000000400de1\n.text:0000000000400de2\n.text:0000000000400de3\n.text:0000000000400dea\n.text:0000000000400dec\n.text:0000000000400df1\n.text:0000000000400df3\n.text:0000000000400e00\n.text:0000000000400e05\n.text:0000000000400e07\n.text:0000000000400e09\n.text:0000000000400e0c\n.text:0000000000400e11\n.text:0000000000400e13\n.text:0000000000400e17\n.text:0000000000400e1d\n.text:0000000000400e1f\n.text:0000000000400e23\n.text:0000000000400e24\n.text:0000000000400e25\n'
p209
tp210
sS'XtCreateWidget'
p211
(S'\n__stdcall XtCreateWidget()\n'
p212
V\u000avoid XtCreateWidget(void)\u000a\u000a{\u000a  (*(code *)PTR_XtCreateWidget_00602028)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x00602028]\n'
p214
S'ff 25 22 16 20 00\n'
p215
S'.plt:0000000000400a00\n'
p216
tp217
s.