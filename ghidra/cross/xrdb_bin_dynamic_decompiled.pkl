(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x605de8]\nPUSH RBP\nLEA RBP,[0x605df0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004012f8\nTEST RBP,RBP\nJZ 0x00403ea6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00403e90\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 86 1f 20 00\n55\n48 8d 2d 86 1f 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 77 d4 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000403e50\n.text:0000000000403e52\n.text:0000000000403e54\n.text:0000000000403e57\n.text:0000000000403e59\n.text:0000000000403e5b\n.text:0000000000403e62\n.text:0000000000403e63\n.text:0000000000403e6a\n.text:0000000000403e6b\n.text:0000000000403e6e\n.text:0000000000403e71\n.text:0000000000403e74\n.text:0000000000403e78\n.text:0000000000403e7c\n.text:0000000000403e81\n.text:0000000000403e84\n.text:0000000000403e86\n.text:0000000000403e88\n.text:0000000000403e90\n.text:0000000000403e93\n.text:0000000000403e96\n.text:0000000000403e99\n.text:0000000000403e9d\n.text:0000000000403ea1\n.text:0000000000403ea4\n.text:0000000000403ea6\n.text:0000000000403eaa\n.text:0000000000403eab\n.text:0000000000403eac\n.text:0000000000403eae\n.text:0000000000403eb0\n.text:0000000000403eb2\n.text:0000000000403eb4\n'
p6
tp7
sS'CompareEntries'
p8
(S'\n__stdcall CompareEntries(void * e1, void * e2)\n'
p9
V\u000aint CompareEntries(void *e1,void *e2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = strcmp(*(char **)e1,*(char **)e2);\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'MOV RDI,qword ptr [RDI]\nMOV RSI,qword ptr [RSI]\nJMP 0x004014d0\n'
p11
S'48 8b 3f\n48 8b 36\ne9 f5 d6 ff ff\n'
p12
S'.text:0000000000403dd0\n.text:0000000000403dd3\n.text:0000000000403dd6\n'
p13
tp14
sS'strchr'
p15
(S'\n__stdcall strchr(char * __s, int __c)\n'
p16
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_00606088)();\u000a  return pcVar1;\u000a}\u000a\u000a
p17
S'JMP qword ptr [0x00606088]\n'
p18
S'ff 25 82 4c 20 00\n'
p19
S'.plt:0000000000401400\n'
p20
tp21
sS'FreeEntries'
p22
(S'\n__stdcall FreeEntries()\n'
p23
V\u000avoid FreeEntries(void)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  \u000a  if (0 < newDB.used) {\u000a    lVar1 = 0;\u000a    lVar2 = 0;\u000a    do {\u000a      if (*(int *)((long)&(newDB.entry)->usable + lVar1) != 0) {\u000a        free(*(void **)((long)&(newDB.entry)->tag + lVar1));\u000a        free(*(void **)((long)&(newDB.entry)->value + lVar1));\u000a      }\u000a      lVar2 = lVar2 + 1;\u000a      lVar1 = lVar1 + 0x18;\u000a    } while (lVar2 < (long)newDB.used);\u000a  }\u000a  free(newDB.entry);\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RDI,qword ptr [0x006072e8]\nCMP dword ptr [0x006072f4],0x0\nJLE 0x00403beb\nXOR EBX,EBX\nXOR R14D,R14D\nNOP dword ptr [RAX]\nCMP dword ptr [RDI + RBX*0x1 + 0x14],0x0\nJZ 0x00403bd1\nMOV RDI,qword ptr [RDI + RBX*0x1]\nCALL 0x00401320\nMOV RAX,qword ptr [0x006072e8]\nMOV RDI,qword ptr [RAX + RBX*0x1 + 0x8]\nCALL 0x00401320\nINC R14\nMOVSXD RAX,dword ptr [0x006072f4]\nMOV RDI,qword ptr [0x006072e8]\nADD RBX,0x18\nCMP R14,RAX\nJL 0x00403bb0\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401320\n'
p25
S'41 56\n53\n50\n48 8b 3d 4d 37 20 00\n83 3d 52 37 20 00 00\n7e 47\n31 db\n45 31 f6\n0f 1f 80 00 00 00 00\n83 7c 1f 14 00\n74 1a\n48 8b 3c 1f\ne8 60 d7 ff ff\n48 8b 05 21 37 20 00\n48 8b 7c 18 08\ne8 4f d7 ff ff\n49 ff c6\n48 63 05 19 37 20 00\n48 8b 3d 06 37 20 00\n48 83 c3 18\n49 39 c6\n7c c5\n48 83 c4 08\n5b\n41 5e\ne9 29 d7 ff ff\n'
p26
S'.text:0000000000403b90\n.text:0000000000403b92\n.text:0000000000403b93\n.text:0000000000403b94\n.text:0000000000403b9b\n.text:0000000000403ba2\n.text:0000000000403ba4\n.text:0000000000403ba6\n.text:0000000000403ba9\n.text:0000000000403bb0\n.text:0000000000403bb5\n.text:0000000000403bb7\n.text:0000000000403bbb\n.text:0000000000403bc0\n.text:0000000000403bc7\n.text:0000000000403bcc\n.text:0000000000403bd1\n.text:0000000000403bd4\n.text:0000000000403bdb\n.text:0000000000403be2\n.text:0000000000403be6\n.text:0000000000403be9\n.text:0000000000403beb\n.text:0000000000403bef\n.text:0000000000403bf0\n.text:0000000000403bf2\n'
p27
tp28
sS'strcpy'
p29
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p30
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_00606058)();\u000a  return pcVar1;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x00606058]\n'
p32
S'ff 25 b2 4c 20 00\n'
p33
S'.plt:00000000004013a0\n'
p34
tp35
sS'strncmp'
p36
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p37
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00606040)();\u000a  return iVar1;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00606040]\n'
p39
S'ff 25 ca 4c 20 00\n'
p40
S'.plt:0000000000401370\n'
p41
tp42
sS'XmuGetHostname'
p43
(S'\n__stdcall XmuGetHostname()\n'
p44
V\u000avoid XmuGetHostname(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuGetHostname_006060f8)();\u000a  return;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x006060f8]\n'
p46
S'ff 25 12 4c 20 00\n'
p47
S'.plt:00000000004014e0\n'
p48
tp49
sS'vfprintf'
p50
(S'\n__stdcall vfprintf(FILE * __s, char * __format, __gnuc_va_list __arg)\n'
p51
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_vfprintf_006061b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x006061b8]\n'
p53
S'ff 25 52 4b 20 00\n'
p54
S'.plt:0000000000401660\n'
p55
tp56
sS'putchar'
p57
(S'\n__stdcall putchar(int __c)\n'
p58
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_00606020)();\u000a  return iVar1;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00606020]\n'
p60
S'ff 25 ea 4c 20 00\n'
p61
S'.plt:0000000000401330\n'
p62
tp63
sS'ReProcess'
p64
(S'\n__stdcall ReProcess()\n'
p65
V\u000avoid ReProcess(int iParm1,int iParm2)\u000a\u000a{\u000a  Atom res_prop;\u000a  Window root;\u000a  \u000a  FormatEntries();\u000a  if (iParm2 == 0) {\u000a    root = *(Window *)(*(long *)(dpy + 0xe8) + 0x10);\u000a    res_prop = 0x17;\u000a  }\u000a  else {\u000a    root = *(Window *)(*(long *)(dpy + 0xe8) + 0x10 + (long)iParm1 * 0x80);\u000a    res_prop = XInternAtom(dpy,"SCREEN_RESOURCES",0);\u000a  }\u000a  if (dont_execute == 1) {\u000a    if (0 < buffer.used) {\u000a      fwrite(buffer.buff,1,(long)buffer.used,stdout);\u000a      if (buffer.buff[(long)buffer.used + -1] != '\u005cn') {\u000a        putchar(10);\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    if ((iParm2 == 0) || (1 < buffer.used)) {\u000a      StoreProperty(dpy,root,res_prop);\u000a    }\u000a    else {\u000a      XDeleteProperty(dpy,root,res_prop);\u000a    }\u000a  }\u000a  FreeEntries();\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EBX,ESI\nMOV EBP,EDI\nCALL 0x00403a00\nMOV RDI,qword ptr [0x006072a0]\nMOV RAX,qword ptr [0xe8 + RDI]\nTEST EBX,EBX\nJZ 0x00402dc9\nMOVSXD RCX,EBP\nSHL RCX,0x7\nMOV R14,qword ptr [RAX + RCX*0x1 + 0x10]\nMOV ESI,0x404685\nXOR EDX,EDX\nCALL 0x00401570\nJMP 0x00402dd2\nMOV R14,qword ptr [RAX + 0x10]\nMOV EAX,0x17\nMOVSXD RDX,dword ptr [0x006072e4]\nCMP byte ptr [0x00606288],0x1\nJNZ 0x00402e1f\nTEST EDX,EDX\nJLE 0x00402e47\nMOV RDI,qword ptr [0x006072d8]\nMOV RCX,qword ptr [0x00606220]\nMOV ESI,0x1\nCALL 0x00401690\nMOV RAX,qword ptr [0x006072d8]\nMOVSXD RCX,dword ptr [0x006072e4]\nCMP byte ptr [RAX + RCX*0x1 + -0x1],0xa\nJZ 0x00402e47\nMOV EDI,0xa\nCALL 0x00401330\nJMP 0x00402e47\nMOV RDI,qword ptr [0x006072a0]\nTEST EBX,EBX\nJZ 0x00402e3c\nCMP EDX,0x2\nJGE 0x00402e3c\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00401430\nJMP 0x00402e47\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00403a90\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00403b90\n'
p67
S'55\n41 56\n53\n89 f3\n89 fd\ne8 63 0c 00 00\n48 8b 3d fc 44 20 00\n48 8b 87 e8 00 00 00\n85 db\n74 1a\n48 63 cd\n48 c1 e1 07\n4c 8b 74 08 10\nbe 85 46 40 00\n31 d2\ne8 a9 e7 ff ff\neb 09\n4c 8b 70 10\nb8 17 00 00 00\n48 63 15 0b 45 20 00\n80 3d a8 34 20 00 01\n75 3d\n85 d2\n7e 61\n48 8b 3d eb 44 20 00\n48 8b 0d 2c 34 20 00\nbe 01 00 00 00\ne8 92 e8 ff ff\n48 8b 05 d3 44 20 00\n48 63 0d d8 44 20 00\n80 7c 08 ff 0a\n74 34\nbf 0a 00 00 00\ne8 13 e5 ff ff\neb 28\n48 8b 3d 7a 44 20 00\n85 db\n74 12\n83 fa 02\n7d 0d\n4c 89 f6\n48 89 c2\ne8 f6 e5 ff ff\neb 0b\n4c 89 f6\n48 89 c2\ne8 49 0c 00 00\n5b\n41 5e\n5d\ne9 40 0d 00 00\n'
p68
S'.text:0000000000402d90\n.text:0000000000402d91\n.text:0000000000402d93\n.text:0000000000402d94\n.text:0000000000402d96\n.text:0000000000402d98\n.text:0000000000402d9d\n.text:0000000000402da4\n.text:0000000000402dab\n.text:0000000000402dad\n.text:0000000000402daf\n.text:0000000000402db2\n.text:0000000000402db6\n.text:0000000000402dbb\n.text:0000000000402dc0\n.text:0000000000402dc2\n.text:0000000000402dc7\n.text:0000000000402dc9\n.text:0000000000402dcd\n.text:0000000000402dd2\n.text:0000000000402dd9\n.text:0000000000402de0\n.text:0000000000402de2\n.text:0000000000402de4\n.text:0000000000402de6\n.text:0000000000402ded\n.text:0000000000402df4\n.text:0000000000402df9\n.text:0000000000402dfe\n.text:0000000000402e05\n.text:0000000000402e0c\n.text:0000000000402e11\n.text:0000000000402e13\n.text:0000000000402e18\n.text:0000000000402e1d\n.text:0000000000402e1f\n.text:0000000000402e26\n.text:0000000000402e28\n.text:0000000000402e2a\n.text:0000000000402e2d\n.text:0000000000402e2f\n.text:0000000000402e32\n.text:0000000000402e35\n.text:0000000000402e3a\n.text:0000000000402e3c\n.text:0000000000402e3f\n.text:0000000000402e42\n.text:0000000000402e47\n.text:0000000000402e48\n.text:0000000000402e4a\n.text:0000000000402e4b\n'
p69
tp70
sS'XFree'
p71
(S'\n__stdcall XFree()\n'
p72
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_00606098)();\u000a  return;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00606098]\n'
p74
S'ff 25 72 4c 20 00\n'
p75
S'.plt:0000000000401420\n'
p76
tp77
sS'frame_dummy'
p78
(S'\n__stdcall frame_dummy()\n'
p79
V\u000a/* WARNING: Removing unreachable block (ram,0x004017ca) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p80
S'MOV EDI,0x605df8\nCMP qword ptr [RDI],0x0\nJNZ 0x004017c0\nJMP 0x00401750\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004017bb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401750\n'
p81
S'bf f8 5d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p82
S'.text:00000000004017b0\n.text:00000000004017b5\n.text:00000000004017b9\n.text:00000000004017bb\n.text:00000000004017c0\n.text:00000000004017c5\n.text:00000000004017c8\n.text:00000000004017ca\n.text:00000000004017cb\n.text:00000000004017ce\n.text:00000000004017d0\n.text:00000000004017d1\n'
p83
tp84
sS'AppendToBuffer'
p85
(S'\n__stdcall AppendToBuffer(Buffer * b, char * str)\n'
p86
V\u000avoid AppendToBuffer(Buffer *b,char *str)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int in_EDX;\u000a  char *__ptr;\u000a  \u000a  iVar2 = b->used;\u000a  iVar1 = b->room;\u000a  __ptr = b->buff;\u000a  if (iVar1 < iVar2 + in_EDX) {\u000a    do {\u000a      __ptr = (char *)realloc(__ptr,(long)(iVar1 * 2));\u000a      b->buff = __ptr;\u000a      iVar1 = b->room * 2;\u000a      b->room = iVar1;\u000a      iVar2 = b->used;\u000a      __ptr = b->buff;\u000a    } while (iVar1 < iVar2 + in_EDX);\u000a  }\u000a  strncpy(__ptr + (long)iVar2,str,(long)in_EDX);\u000a  b->used = b->used + in_EDX;\u000a  return;\u000a}\u000a\u000a
p87
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15D,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV ECX,dword ptr [RBX + 0xc]\nLEA EDX,[RCX + R15*0x1]\nMOV EAX,dword ptr [RBX + 0x8]\nMOV RDI,qword ptr [RBX]\nCMP EDX,EAX\nJLE 0x00403cc3\nNOP\nADD EAX,EAX\nMOVSXD RSI,EAX\nCALL 0x004015d0\nMOV qword ptr [RBX],RAX\nMOV EAX,dword ptr [RBX + 0x8]\nADD EAX,EAX\nMOV dword ptr [RBX + 0x8],EAX\nMOV ECX,dword ptr [RBX + 0xc]\nLEA EDX,[RCX + R15*0x1]\nCMP EDX,EAX\nMOV RDI,qword ptr [RBX]\nJG 0x00403ca0\nMOVSXD RAX,ECX\nADD RAX,RDI\nMOVSXD R15,R15D\nMOV RDI,RAX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401360\nADD dword ptr [RBX + 0xc],R15D\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p88
S'41 57\n41 56\n53\n41 89 d7\n49 89 f6\n48 89 fb\n8b 4b 0c\n42 8d 14 39\n8b 43 08\n48 8b 3b\n39 c2\n7e 24\n90\n01 c0\n48 63 f0\ne8 26 d9 ff ff\n48 89 03\n8b 43 08\n01 c0\n89 43 08\n8b 4b 0c\n42 8d 14 39\n39 c2\n48 8b 3b\n7f dd\n48 63 c1\n48 01 f8\n4d 63 ff\n48 89 c7\n4c 89 f6\n4c 89 fa\ne8 86 d6 ff ff\n44 01 7b 0c\n5b\n41 5e\n41 5f\nc3\n'
p89
S'.text:0000000000403c80\n.text:0000000000403c82\n.text:0000000000403c84\n.text:0000000000403c85\n.text:0000000000403c88\n.text:0000000000403c8b\n.text:0000000000403c8e\n.text:0000000000403c91\n.text:0000000000403c95\n.text:0000000000403c98\n.text:0000000000403c9b\n.text:0000000000403c9d\n.text:0000000000403c9f\n.text:0000000000403ca0\n.text:0000000000403ca2\n.text:0000000000403ca5\n.text:0000000000403caa\n.text:0000000000403cad\n.text:0000000000403cb0\n.text:0000000000403cb2\n.text:0000000000403cb5\n.text:0000000000403cb8\n.text:0000000000403cbc\n.text:0000000000403cbe\n.text:0000000000403cc1\n.text:0000000000403cc3\n.text:0000000000403cc6\n.text:0000000000403cc9\n.text:0000000000403ccc\n.text:0000000000403ccf\n.text:0000000000403cd2\n.text:0000000000403cd5\n.text:0000000000403cda\n.text:0000000000403cde\n.text:0000000000403cdf\n.text:0000000000403ce1\n.text:0000000000403ce3\n'
p90
tp91
sS'GetEntriesString'
p92
(S'\n__stdcall GetEntriesString(Entries * entries)\n'
p93
V\u000avoid GetEntriesString(Entries *entries)\u000a\u000a{\u000a  size_t sVar1;\u000a  Buffer buff;\u000a  Buffer local_10;\u000a  \u000a  if ((entries != (Entries *)0x0) && (*(char *)&entries->entry != 0)) {\u000a    local_10.buff = entries;\u000a    sVar1 = strlen((char *)entries);\u000a    local_10.used = (int)sVar1;\u000a    GetEntries(&newDB,&local_10);\u000a  }\u000a  return;\u000a}\u000a\u000a
p94
S'TEST RDI,RDI\nJZ 0x00402bc4\nCMP byte ptr [RDI],0x0\nJZ 0x00402bc4\nSUB RSP,0x18\nMOV qword ptr [RSP + 0x8],RDI\nCALL 0x004013f0\nMOV dword ptr [RSP + 0x14],EAX\nLEA RSI,[RSP + 0x8]\nMOV EDI,0x6072e8\nMOV EDX,0x1\nCALL 0x004030d0\nADD RSP,0x18\nRET\n'
p95
S'48 85 ff\n74 2f\n80 3f 00\n74 2a\n48 83 ec 18\n48 89 7c 24 08\ne8 48 e8 ff ff\n89 44 24 14\n48 8d 74 24 08\nbf e8 72 60 00\nba 01 00 00 00\ne8 10 05 00 00\n48 83 c4 18\nc3\n'
p96
S'.text:0000000000402b90\n.text:0000000000402b93\n.text:0000000000402b95\n.text:0000000000402b98\n.text:0000000000402b9a\n.text:0000000000402b9e\n.text:0000000000402ba3\n.text:0000000000402ba8\n.text:0000000000402bac\n.text:0000000000402bb1\n.text:0000000000402bb6\n.text:0000000000402bbb\n.text:0000000000402bc0\n.text:0000000000402bc4\n'
p97
tp98
sS'fread'
p99
(S'\n__stdcall fread(void * __ptr, size_t __size, size_t __n, FILE * __stream)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fread_00606070)();\u000a  return sVar1;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00606070]\n'
p102
S'ff 25 9a 4c 20 00\n'
p103
S'.plt:00000000004013d0\n'
p104
tp105
sS'exit'
p106
(S'\n__stdcall exit(int __status)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_006061c8)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x006061c8]\n'
p109
S'ff 25 42 4b 20 00\n'
p110
S'.plt:0000000000401680\n'
p111
tp112
sS'FormatEntries'
p113
(S'\n__stdcall FormatEntries()\n'
p114
V\u000avoid FormatEntries(void)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  \u000a  buffer.used = 0;\u000a  if ((long)newDB.used != 0) {\u000a    if (oper == 5) {\u000a      qsort(newDB.entry,(long)newDB.used,0x18,CompareEntries);\u000a    }\u000a    if (0 < newDB.used) {\u000a      lVar1 = 0;\u000a      lVar2 = 0;\u000a      do {\u000a        if (*(int *)((long)&(newDB.entry)->usable + lVar1) != 0) {\u000a          AppendEntryToBuffer((Buffer *)((long)&(newDB.entry)->tag + lVar1));\u000a        }\u000a        lVar2 = lVar2 + 1;\u000a        lVar1 = lVar1 + 0x18;\u000a      } while (lVar2 < (long)newDB.used);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p115
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV dword ptr [0x006072e4],0x0\nMOVSXD RSI,dword ptr [0x006072f4]\nTEST RSI,RSI\nJZ 0x00403a79\nCMP dword ptr [0x00606208],0x5\nJNZ 0x00403a39\nMOV RDI,qword ptr [0x006072e8]\nMOV EDX,0x18\nMOV ECX,0x403dd0\nCALL 0x004013c0\nCMP dword ptr [0x006072f4],0x0\nJLE 0x00403a79\nXOR EBX,EBX\nXOR R14D,R14D\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [0x006072e8]\nCMP dword ptr [RDI + RBX*0x1 + 0x14],0x0\nJZ 0x00403a66\nADD RDI,RBX\nCALL 0x00403de0\nINC R14\nMOVSXD RAX,dword ptr [0x006072f4]\nADD RBX,0x18\nCMP R14,RAX\nJL 0x00403a50\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p116
S'41 56\n53\n50\nc7 05 d6 38 20 00 00 00 00 00\n48 63 35 df 38 20 00\n48 85 f6\n74 5f\n83 3d e7 27 20 00 05\n75 16\n48 8b 3d be 38 20 00\nba 18 00 00 00\nb9 d0 3d 40 00\ne8 87 d9 ff ff\n83 3d b4 38 20 00 00\n7e 37\n31 db\n45 31 f6\n66 0f 1f 84 00 00 00 00 00\n48 8b 3d 91 38 20 00\n83 7c 1f 14 00\n74 08\n48 01 df\ne8 7a 03 00 00\n49 ff c6\n48 63 05 84 38 20 00\n48 83 c3 18\n49 39 c6\n7c d7\n48 83 c4 08\n5b\n41 5e\nc3\n'
p117
S'.text:0000000000403a00\n.text:0000000000403a02\n.text:0000000000403a03\n.text:0000000000403a04\n.text:0000000000403a0e\n.text:0000000000403a15\n.text:0000000000403a18\n.text:0000000000403a1a\n.text:0000000000403a21\n.text:0000000000403a23\n.text:0000000000403a2a\n.text:0000000000403a2f\n.text:0000000000403a34\n.text:0000000000403a39\n.text:0000000000403a40\n.text:0000000000403a42\n.text:0000000000403a44\n.text:0000000000403a47\n.text:0000000000403a50\n.text:0000000000403a57\n.text:0000000000403a5c\n.text:0000000000403a5e\n.text:0000000000403a61\n.text:0000000000403a66\n.text:0000000000403a69\n.text:0000000000403a70\n.text:0000000000403a74\n.text:0000000000403a77\n.text:0000000000403a79\n.text:0000000000403a7d\n.text:0000000000403a7e\n.text:0000000000403a80\n'
p118
tp119
sS'sscanf'
p120
(S'\n__stdcall sscanf(char * __s, char * __format)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sscanf(char *__s,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_sscanf_00606150)();\u000a  return iVar1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00606150]\n'
p123
S'ff 25 ba 4b 20 00\n'
p124
S'.plt:0000000000401590\n'
p125
tp126
sS'XDeleteProperty'
p127
(S'\n__stdcall XDeleteProperty()\n'
p128
V\u000avoid XDeleteProperty(void)\u000a\u000a{\u000a  (*(code *)PTR_XDeleteProperty_006060a0)();\u000a  return;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x006060a0]\n'
p130
S'ff 25 6a 4c 20 00\n'
p131
S'.plt:0000000000401430\n'
p132
tp133
sS'AppendEntryToBuffer'
p134
(S'\n__stdcall AppendEntryToBuffer(Buffer * b)\n'
p135
V\u000avoid AppendEntryToBuffer(Buffer *b)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = b->buff;\u000a  strlen(__s);\u000a  AppendToBuffer(&buffer,__s);\u000a  AppendToBuffer(&buffer,":\u005ct");\u000a  __s = *(char **)&b->room;\u000a  strlen(__s);\u000a  AppendToBuffer(&buffer,__s);\u000a  AppendToBuffer(&buffer,"\u005cn");\u000a  return;\u000a}\u000a\u000a
p136
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RBX,qword ptr [R14]\nMOV RDI,RBX\nCALL 0x004013f0\nMOV EDI,0x6072d8\nMOV RSI,RBX\nMOV EDX,EAX\nCALL 0x00403c80\nMOV EDI,0x6072d8\nMOV ESI,0x404865\nMOV EDX,0x2\nCALL 0x00403c80\nMOV RBX,qword ptr [R14 + 0x8]\nMOV RDI,RBX\nCALL 0x004013f0\nMOV EDI,0x6072d8\nMOV RSI,RBX\nMOV EDX,EAX\nCALL 0x00403c80\nMOV EDI,0x6072d8\nMOV ESI,0x404702\nMOV EDX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00403c80\n'
p137
S'41 56\n53\n50\n49 89 fe\n49 8b 1e\n48 89 df\ne8 fe d5 ff ff\nbf d8 72 60 00\n48 89 de\n89 c2\ne8 7f fe ff ff\nbf d8 72 60 00\nbe 65 48 40 00\nba 02 00 00 00\ne8 6b fe ff ff\n49 8b 5e 08\n48 89 df\ne8 cf d5 ff ff\nbf d8 72 60 00\n48 89 de\n89 c2\ne8 50 fe ff ff\nbf d8 72 60 00\nbe 02 47 40 00\nba 01 00 00 00\n48 83 c4 08\n5b\n41 5e\ne9 35 fe ff ff\n'
p138
S'.text:0000000000403de0\n.text:0000000000403de2\n.text:0000000000403de3\n.text:0000000000403de4\n.text:0000000000403de7\n.text:0000000000403dea\n.text:0000000000403ded\n.text:0000000000403df2\n.text:0000000000403df7\n.text:0000000000403dfa\n.text:0000000000403dfc\n.text:0000000000403e01\n.text:0000000000403e06\n.text:0000000000403e0b\n.text:0000000000403e10\n.text:0000000000403e15\n.text:0000000000403e19\n.text:0000000000403e1c\n.text:0000000000403e21\n.text:0000000000403e26\n.text:0000000000403e29\n.text:0000000000403e2b\n.text:0000000000403e30\n.text:0000000000403e35\n.text:0000000000403e3a\n.text:0000000000403e3f\n.text:0000000000403e43\n.text:0000000000403e44\n.text:0000000000403e46\n'
p139
tp140
sS'FUN_00401310'
p141
(S'\n__stdcall FUN_00401310()\n'
p142
V\u000avoid FUN_00401310(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00606010)();\u000a  return;\u000a}\u000a\u000a
p143
S'PUSH qword ptr [0x00606008]\nJMP qword ptr [0x00606010]\n'
p144
S'ff 35 f2 4c 20 00\nff 25 f4 4c 20 00\n'
p145
S'.plt:0000000000401310\n.plt:0000000000401316\n'
p146
tp147
sS'addescapedstring'
p148
(S'\n__stdcall addescapedstring(String * arg, char * s)\n'
p149
V\u000avoid addescapedstring(String *arg,char *s)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  char cVar3;\u000a  char copy [512];\u000a  char local_208 [511];\u000a  char local_9 [9];\u000a  \u000a  pcVar1 = local_208;\u000a  cVar2 = *s;\u000a  if (cVar2 != 0) {\u000a    s = s + 1;\u000a    pcVar1 = local_208;\u000a    do {\u000a      if ((0x3e < (int)cVar2 - 0x22U) ||\u000a         (cVar3 = '_', ((ulong)pcVar1 >> ((ulong)((int)cVar2 - 0x22U) & 0x1f) & 1) == 0)) {\u000a        cVar3 = cVar2;\u000a      }\u000a      *pcVar1 = cVar3;\u000a      pcVar1 = pcVar1 + 1;\u000a      if (local_9 <= pcVar1) break;\u000a      cVar2 = *s;\u000a      s = s + 1;\u000a    } while (cVar2 != 0);\u000a  }\u000a  *pcVar1 = 0;\u000a  addstring(arg,local_208);\u000a  return;\u000a}\u000a\u000a
p150
S'SUB RSP,0x208\nMOV DL,byte ptr [RSI]\nTEST DL,DL\nJZ 0x0040237b\nLEA R9,[0x1ff + RSP]\nMOV RAX,RSP\nINC RSI\nMOV R8,0x4400000000000025\nJMP 0x00402350\nMOV R10D,EDX\nJMP 0x00402364\nMOVSX ECX,DL\nADD ECX,-0x22\nCMP ECX,0x3e\nJA 0x00402347\nMOV R10B,0x5f\nBT RAX,RCX\nJNC 0x00402347\nMOV byte ptr [RAX],R10B\nINC RAX\nCMP RAX,R9\nJNC 0x0040237e\nMOVZX EDX,byte ptr [RSI]\nINC RSI\nTEST DL,DL\nJNZ 0x00402350\nJMP 0x0040237e\nMOV RAX,RSP\nMOV byte ptr [RAX],0x0\nMOV RSI,RSP\nCALL 0x004021e0\nADD RSP,0x208\nRET\n'
p151
S'48 81 ec 08 02 00 00\n8a 16\n84 d2\n74 4e\n4c 8d 8c 24 ff 01 00 00\n48 89 e0\n48 ff c6\n49 b8 25 00 00 00 00 00 00 44\neb 09\n41 89 d2\neb 18\n0f be ca\n83 c1 de\n83 f9 3e\n77 ec\n41 b2 5f\n49 0f a3 c8\n73 e3\n44 88 10\n48 ff c0\n4c 39 c8\n73 0f\n0f b6 16\n48 ff c6\n84 d2\n75 d7\neb 03\n48 89 e0\nc6 00 00\n48 89 e6\ne8 57 fe ff ff\n48 81 c4 08 02 00 00\nc3\n'
p152
S'.text:0000000000402320\n.text:0000000000402327\n.text:0000000000402329\n.text:000000000040232b\n.text:000000000040232d\n.text:0000000000402335\n.text:0000000000402338\n.text:000000000040233b\n.text:0000000000402345\n.text:0000000000402347\n.text:000000000040234a\n.text:0000000000402350\n.text:0000000000402353\n.text:0000000000402356\n.text:0000000000402359\n.text:000000000040235b\n.text:000000000040235e\n.text:0000000000402362\n.text:0000000000402364\n.text:0000000000402367\n.text:000000000040236a\n.text:000000000040236d\n.text:000000000040236f\n.text:0000000000402372\n.text:0000000000402375\n.text:0000000000402377\n.text:0000000000402379\n.text:000000000040237b\n.text:000000000040237e\n.text:0000000000402381\n.text:0000000000402384\n.text:0000000000402389\n.text:0000000000402390\n'
p153
tp154
sS'access'
p155
(S'\n__stdcall access(char * __name, int __type)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint access(char *__name,int __type)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_access_00606190)();\u000a  return iVar1;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00606190]\n'
p158
S'ff 25 7a 4b 20 00\n'
p159
S'.plt:0000000000401610\n'
p160
tp161
sS'XResourceManagerString'
p162
(S'\n__stdcall XResourceManagerString()\n'
p163
V\u000avoid XResourceManagerString(void)\u000a\u000a{\u000a  (*(code *)PTR_XResourceManagerString_00606138)();\u000a  return;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x00606138]\n'
p165
S'ff 25 d2 4b 20 00\n'
p166
S'.plt:0000000000401560\n'
p167
tp168
sS'pclose'
p169
(S'\n__stdcall pclose(FILE * __stream)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint pclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_pclose_006060a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x006060a8]\n'
p172
S'ff 25 62 4c 20 00\n'
p173
S'.plt:0000000000401440\n'
p174
tp175
sS'ReadFile'
p176
(S'\n__stdcall ReadFile()\n'
p177
V\u000avoid ReadFile(FILE *pFParm1)\u000a\u000a{\u000a  int iVar1;\u000a  size_t sVar2;\u000a  char buf [8193];\u000a  char acStack8216 [8200];\u000a  \u000a  buffer.used = 0;\u000a  iVar1 = feof(pFParm1);\u000a  while ((iVar1 == 0 && (sVar2 = fread(acStack8216,1,0x2000,pFParm1), 0 < (int)sVar2))) {\u000a    AppendToBuffer(&buffer,acStack8216);\u000a    iVar1 = feof(pFParm1);\u000a  }\u000a  AppendToBuffer(&buffer,"");\u000a  return;\u000a}\u000a\u000a
p178
S'PUSH R14\nPUSH RBX\nSUB RSP,0x2008\nMOV RBX,RDI\nMOV dword ptr [0x006072e4],0x0\nCALL 0x00401520\nTEST EAX,EAX\nJNZ 0x004039d4\nMOV R14,RSP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV ESI,0x1\nMOV EDX,0x2000\nMOV RDI,R14\nMOV RCX,RBX\nCALL 0x004013d0\nTEST EAX,EAX\nJLE 0x004039d4\nMOV EDI,0x6072d8\nMOV RSI,R14\nMOV EDX,EAX\nCALL 0x00403c80\nMOV RDI,RBX\nCALL 0x00401520\nTEST EAX,EAX\nJZ 0x004039a0\nMOV EDI,0x6072d8\nMOV ESI,0x404867\nMOV EDX,0x1\nCALL 0x00403c80\nADD RSP,0x2008\nPOP RBX\nPOP R14\nRET\n'
p179
S'41 56\n53\n48 81 ec 08 20 00 00\n48 89 fb\nc7 05 5d 39 20 00 00 00 00 00\ne8 94 db ff ff\n85 c0\n75 44\n49 89 e6\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbe 01 00 00 00\nba 00 20 00 00\n4c 89 f7\n48 89 d9\ne8 1b da ff ff\n85 c0\n7e 1b\nbf d8 72 60 00\n4c 89 f6\n89 c2\ne8 b8 02 00 00\n48 89 df\ne8 50 db ff ff\n85 c0\n74 cc\nbf d8 72 60 00\nbe 67 48 40 00\nba 01 00 00 00\ne8 98 02 00 00\n48 81 c4 08 20 00 00\n5b\n41 5e\nc3\n'
p180
S'.text:0000000000403970\n.text:0000000000403972\n.text:0000000000403973\n.text:000000000040397a\n.text:000000000040397d\n.text:0000000000403987\n.text:000000000040398c\n.text:000000000040398e\n.text:0000000000403990\n.text:0000000000403993\n.text:00000000004039a0\n.text:00000000004039a5\n.text:00000000004039aa\n.text:00000000004039ad\n.text:00000000004039b0\n.text:00000000004039b5\n.text:00000000004039b7\n.text:00000000004039b9\n.text:00000000004039be\n.text:00000000004039c1\n.text:00000000004039c3\n.text:00000000004039c8\n.text:00000000004039cb\n.text:00000000004039d0\n.text:00000000004039d2\n.text:00000000004039d4\n.text:00000000004039d9\n.text:00000000004039de\n.text:00000000004039e3\n.text:00000000004039e8\n.text:00000000004039ef\n.text:00000000004039f0\n.text:00000000004039f2\n'
p181
tp182
sS'deregister_tm_clones'
p183
(S'\n__stdcall deregister_tm_clones()\n'
p184
V\u000a/* WARNING: Removing unreachable block (ram,0x00401725) */\u000a/* WARNING: Removing unreachable block (ram,0x0040172f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p185
S'MOV EAX,0x60621f\nPUSH RBP\nSUB RAX,0x606218\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401740\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401740\nPOP RBP\nMOV EDI,0x606218\nJMP RAX\nPOP RBP\nRET\n'
p186
S'b8 1f 62 60 00\n55\n48 2d 18 62 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 18 62 60 00\nff e0\n5d\nc3\n'
p187
S'.text:0000000000401710\n.text:0000000000401715\n.text:0000000000401716\n.text:000000000040171c\n.text:0000000000401720\n.text:0000000000401723\n.text:0000000000401725\n.text:000000000040172a\n.text:000000000040172d\n.text:000000000040172f\n.text:0000000000401730\n.text:0000000000401735\n.text:0000000000401740\n.text:0000000000401741\n'
p188
tp189
sS'XDisplayName'
p190
(S'\n__stdcall XDisplayName()\n'
p191
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_00606158)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00606158]\n'
p193
S'ff 25 b2 4b 20 00\n'
p194
S'.plt:00000000004015a0\n'
p195
tp196
sS'addstring'
p197
(S'\n__stdcall addstring(String * arg, char * s)\n'
p198
V\u000avoid addstring(String *arg,char *s)\u000a\u000a{\u000a  int iVar1;\u000a  size_t __size;\u000a  char *pcVar2;\u000a  \u000a  iVar1 = arg->used;\u000a  __size = strlen(s);\u000a  if ((ulong)(long)arg->room <= __size + 1 + (long)iVar1) {\u000a    __size = (long)arg->room + 0x1000;\u000a    if (arg->val == (char *)0x0) {\u000a      pcVar2 = (char *)malloc(__size);\u000a    }\u000a    else {\u000a      pcVar2 = (char *)realloc(arg->val,__size);\u000a    }\u000a    arg->val = pcVar2;\u000a    if (pcVar2 == (char *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      fatal("%s: Not enough memory\u005cn",ProgramName);\u000a    }\u000a    arg->room = arg->room + 0x1000;\u000a  }\u000a  if (arg->used == 0) {\u000a    strcpy(arg->val,s);\u000a  }\u000a  else {\u000a    strcat(arg->val,s);\u000a  }\u000a  __size = strlen(s);\u000a  arg->used = arg->used + (int)__size;\u000a  return;\u000a}\u000a\u000a
p199
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nMOV RBX,RDI\nMOVSXD R15,dword ptr [RBX + 0xc]\nMOV RDI,R14\nCALL 0x004013f0\nLEA RAX,[RAX + R15*0x1 + 0x1]\nMOVSXD RSI,dword ptr [RBX + 0x8]\nCMP RAX,RSI\nJC 0x00402232\nMOV RDI,qword ptr [RBX]\nADD RSI,0x1000\nTEST RDI,RDI\nJZ 0x0040221b\nCALL 0x004015d0\nJMP 0x00402223\nMOV RDI,RSI\nCALL 0x00401550\nMOV qword ptr [RBX],RAX\nTEST RAX,RAX\nJZ 0x0040225b\nADD dword ptr [RBX + 0x8],0x1000\nCMP dword ptr [RBX + 0xc],0x0\nMOV RDI,qword ptr [RBX]\nMOV RSI,R14\nJZ 0x00402245\nCALL 0x00401670\nJMP 0x0040224a\nCALL 0x004013a0\nMOV RDI,R14\nCALL 0x004013f0\nADD dword ptr [RBX + 0xc],EAX\nPOP RBX\nPOP R14\nPOP R15\nRET\nMOV RSI,qword ptr [0x00606250]\nMOV EDI,0x4040e8\nXOR EAX,EAX\nCALL 0x004023a0\n'
p200
S'41 57\n41 56\n53\n49 89 f6\n48 89 fb\n4c 63 7b 0c\n4c 89 f7\ne8 f9 f1 ff ff\n4a 8d 44 38 01\n48 63 73 08\n48 39 f0\n72 2d\n48 8b 3b\n48 81 c6 00 10 00 00\n48 85 ff\n74 07\ne8 b7 f3 ff ff\neb 08\n48 89 f7\ne8 2d f3 ff ff\n48 89 03\n48 85 c0\n74 30\n81 43 08 00 10 00 00\n83 7b 0c 00\n48 8b 3b\n4c 89 f6\n74 07\ne8 2d f4 ff ff\neb 05\ne8 56 f1 ff ff\n4c 89 f7\ne8 9e f1 ff ff\n01 43 0c\n5b\n41 5e\n41 5f\nc3\n48 8b 35 ee 3f 20 00\nbf e8 40 40 00\n31 c0\ne8 32 01 00 00\n'
p201
S'.text:00000000004021e0\n.text:00000000004021e2\n.text:00000000004021e4\n.text:00000000004021e5\n.text:00000000004021e8\n.text:00000000004021eb\n.text:00000000004021ef\n.text:00000000004021f2\n.text:00000000004021f7\n.text:00000000004021fc\n.text:0000000000402200\n.text:0000000000402203\n.text:0000000000402205\n.text:0000000000402208\n.text:000000000040220f\n.text:0000000000402212\n.text:0000000000402214\n.text:0000000000402219\n.text:000000000040221b\n.text:000000000040221e\n.text:0000000000402223\n.text:0000000000402226\n.text:0000000000402229\n.text:000000000040222b\n.text:0000000000402232\n.text:0000000000402236\n.text:0000000000402239\n.text:000000000040223c\n.text:000000000040223e\n.text:0000000000402243\n.text:0000000000402245\n.text:000000000040224a\n.text:000000000040224d\n.text:0000000000402252\n.text:0000000000402255\n.text:0000000000402256\n.text:0000000000402258\n.text:000000000040225a\n.text:000000000040225b\n.text:0000000000402262\n.text:0000000000402267\n.text:0000000000402269\n'
p202
tp203
sS'free'
p204
(S'\n__stdcall free(void * __ptr)\n'
p205
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_00606018)();\u000a  return;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00606018]\n'
p207
S'ff 25 f2 4c 20 00\n'
p208
S'.plt:0000000000401320\n'
p209
tp210
sS'close'
p211
(S'\n__stdcall close(int __fd)\n'
p212
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_006060d8)();\u000a  return iVar1;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x006060d8]\n'
p214
S'ff 25 32 4c 20 00\n'
p215
S'.plt:00000000004014a0\n'
p216
tp217
sS'asprintf'
p218
(S'\n__stdcall asprintf(char * * __ptr, char * __fmt)\n'
p219
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint asprintf(char **__ptr,char *__fmt,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_asprintf_00606180)();\u000a  return iVar1;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x00606180]\n'
p221
S'ff 25 8a 4b 20 00\n'
p222
S'.plt:00000000004015f0\n'
p223
tp224
sS'AddDef'
p225
(S'\n__stdcall AddDef()\n'
p226
V\u000avoid AddDef(String *pSParm1,char *pcParm2)\u000a\u000a{\u000a  char *s;\u000a  \u000a  if (defines.used == 0) {\u000a    s = "-D";\u000a  }\u000a  else {\u000a    if (oper == 0) {\u000a      s = "\u005cn-D";\u000a    }\u000a    else {\u000a      s = " -D";\u000a    }\u000a  }\u000a  addstring(&defines,s);\u000a  addtokstring(pSParm1,s);\u000a  if ((pcParm2 != (char *)0x0) && (*pcParm2 != 0)) {\u000a    addstring(&defines,"=");\u000a    addescapedstring(&defines,pcParm2);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p227
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV R14,RDI\nCMP dword ptr [0x00606274],0x0\nJZ 0x00402fd8\nCMP dword ptr [0x00606208],0x0\nJZ 0x00402fe4\nMOV EDI,0x606268\nMOV ESI,0x40460a\nJMP 0x00402fee\nMOV EDI,0x606268\nMOV ESI,0x404607\nJMP 0x00402fee\nMOV EDI,0x606268\nMOV ESI,0x404606\nCALL 0x004021e0\nMOV RDI,R14\nCALL 0x00403030\nTEST RBX,RBX\nJZ 0x00403028\nCMP byte ptr [RBX],0x0\nJZ 0x00403028\nMOV EDI,0x606268\nMOV ESI,0x40460e\nCALL 0x004021e0\nMOV EDI,0x606268\nMOV RSI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402320\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p228
S'41 56\n53\n50\n48 89 f3\n49 89 fe\n83 3d b3 32 20 00 00\n74 15\n83 3d 3e 32 20 00 00\n74 18\nbf 68 62 60 00\nbe 0a 46 40 00\neb 16\nbf 68 62 60 00\nbe 07 46 40 00\neb 0a\nbf 68 62 60 00\nbe 06 46 40 00\ne8 ed f1 ff ff\n4c 89 f7\ne8 35 00 00 00\n48 85 db\n74 28\n80 3b 00\n74 23\nbf 68 62 60 00\nbe 0e 46 40 00\ne8 cc f1 ff ff\nbf 68 62 60 00\n48 89 de\n48 83 c4 08\n5b\n41 5e\ne9 f8 f2 ff ff\n48 83 c4 08\n5b\n41 5e\nc3\n'
p229
S'.text:0000000000402fb0\n.text:0000000000402fb2\n.text:0000000000402fb3\n.text:0000000000402fb4\n.text:0000000000402fb7\n.text:0000000000402fba\n.text:0000000000402fc1\n.text:0000000000402fc3\n.text:0000000000402fca\n.text:0000000000402fcc\n.text:0000000000402fd1\n.text:0000000000402fd6\n.text:0000000000402fd8\n.text:0000000000402fdd\n.text:0000000000402fe2\n.text:0000000000402fe4\n.text:0000000000402fe9\n.text:0000000000402fee\n.text:0000000000402ff3\n.text:0000000000402ff6\n.text:0000000000402ffb\n.text:0000000000402ffe\n.text:0000000000403000\n.text:0000000000403003\n.text:0000000000403005\n.text:000000000040300a\n.text:000000000040300f\n.text:0000000000403014\n.text:0000000000403019\n.text:000000000040301c\n.text:0000000000403020\n.text:0000000000403021\n.text:0000000000403023\n.text:0000000000403028\n.text:000000000040302c\n.text:000000000040302d\n.text:000000000040302f\n'
p230
tp231
sS'fopen'
p232
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_006061a0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x006061a0]\n'
p235
S'ff 25 6a 4b 20 00\n'
p236
S'.plt:0000000000401630\n'
p237
tp238
sS'malloc'
p239
(S'\n__stdcall malloc(size_t __size)\n'
p240
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_00606130)();\u000a  return pvVar1;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x00606130]\n'
p242
S'ff 25 da 4b 20 00\n'
p243
S'.plt:0000000000401550\n'
p244
tp245
sS'XScreenResourceString'
p246
(S'\n__stdcall XScreenResourceString()\n'
p247
V\u000avoid XScreenResourceString(void)\u000a\u000a{\u000a  (*(code *)PTR_XScreenResourceString_00606110)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00606110]\n'
p249
S'ff 25 fa 4b 20 00\n'
p250
S'.plt:0000000000401510\n'
p251
tp252
sS'XChangeProperty'
p253
(S'\n__stdcall XChangeProperty()\n'
p254
V\u000avoid XChangeProperty(void)\u000a\u000a{\u000a  (*(code *)PTR_XChangeProperty_00606148)();\u000a  return;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x00606148]\n'
p256
S'ff 25 c2 4b 20 00\n'
p257
S'.plt:0000000000401580\n'
p258
tp259
sS'AddUndef'
p260
(S'\n__stdcall AddUndef()\n'
p261
V\u000avoid AddUndef(String *pSParm1)\u000a\u000a{\u000a  char *s;\u000a  \u000a  if (defines.used == 0) {\u000a    s = "-U";\u000a  }\u000a  else {\u000a    if (oper == 0) {\u000a      s = "\u005cn-U";\u000a    }\u000a    else {\u000a      s = " -U";\u000a    }\u000a  }\u000a  addstring(&defines,s);\u000a  addtokstring(pSParm1,s);\u000a  return;\u000a}\u000a\u000a
p262
S'PUSH RBX\nMOV RBX,RDI\nCMP dword ptr [0x00606274],0x0\nJZ 0x00403c52\nCMP dword ptr [0x00606208],0x0\nJZ 0x00403c5e\nMOV EDI,0x606268\nMOV ESI,0x404859\nJMP 0x00403c68\nMOV EDI,0x606268\nMOV ESI,0x404856\nJMP 0x00403c68\nMOV EDI,0x606268\nMOV ESI,0x404855\nCALL 0x004021e0\nMOV RDI,RBX\nPOP RBX\nJMP 0x00403030\n'
p263
S'53\n48 89 fb\n83 3d 39 26 20 00 00\n74 15\n83 3d c4 25 20 00 00\n74 18\nbf 68 62 60 00\nbe 59 48 40 00\neb 16\nbf 68 62 60 00\nbe 56 48 40 00\neb 0a\nbf 68 62 60 00\nbe 55 48 40 00\ne8 73 e5 ff ff\n48 89 df\n5b\ne9 ba f3 ff ff\n'
p264
S'.text:0000000000403c30\n.text:0000000000403c31\n.text:0000000000403c34\n.text:0000000000403c3b\n.text:0000000000403c3d\n.text:0000000000403c44\n.text:0000000000403c46\n.text:0000000000403c4b\n.text:0000000000403c50\n.text:0000000000403c52\n.text:0000000000403c57\n.text:0000000000403c5c\n.text:0000000000403c5e\n.text:0000000000403c63\n.text:0000000000403c68\n.text:0000000000403c6d\n.text:0000000000403c70\n.text:0000000000403c71\n'
p265
tp266
sS'XCloseDisplay'
p267
(S'\n__stdcall XCloseDisplay()\n'
p268
V\u000avoid XCloseDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XCloseDisplay_006061d8)();\u000a  return;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006061d8]\n'
p270
S'ff 25 32 4b 20 00\n'
p271
S'.plt:00000000004016a0\n'
p272
tp273
sS'fprintf'
p274
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00606108)();\u000a  return iVar1;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00606108]\n'
p277
S'ff 25 02 4c 20 00\n'
p278
S'.plt:0000000000401500\n'
p279
tp280
sS'puts'
p281
(S'\n__stdcall puts(char * __s)\n'
p282
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00606060)();\u000a  return iVar1;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x00606060]\n'
p284
S'ff 25 aa 4c 20 00\n'
p285
S'.plt:00000000004013b0\n'
p286
tp287
sS'XInternAtom'
p288
(S'\n__stdcall XInternAtom()\n'
p289
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_00606140)();\u000a  return;\u000a}\u000a\u000a
p290
S'JMP qword ptr [0x00606140]\n'
p291
S'ff 25 ca 4b 20 00\n'
p292
S'.plt:0000000000401570\n'
p293
tp294
sS'DoCmdDefines'
p295
(S'\n__stdcall DoCmdDefines(String * buff)\n'
p296
V\u000avoid DoCmdDefines(String *buff)\u000a\u000a{\u000a  char *__s1;\u000a  int iVar1;\u000a  char *pcVar2;\u000a  long lVar3;\u000a  \u000a  if (0 < num_cmd_defines) {\u000a    lVar3 = 0;\u000a    do {\u000a      __s1 = cmd_defines[lVar3];\u000a      if (__s1[1] == 'U') {\u000a        AddUndef(__s1 + 2);\u000a      }\u000a      else {\u000a        if (__s1[1] == 'D') {\u000a          pcVar2 = strchr(__s1,0x3d);\u000a          if (pcVar2 == (char *)0x0) {\u000a            AddSimpleDef(__s1 + 2);\u000a          }\u000a          else {\u000a            *pcVar2 = 0;\u000a            AddDefQ((String *)(__s1 + 2));\u000a            *pcVar2 = '=';\u000a          }\u000a        }\u000a        else {\u000a          iVar1 = strcmp(__s1,"-undef");\u000a          if ((iVar1 == 0) && (oper != 0)) {\u000a            addstring(&defines," -undef");\u000a          }\u000a        }\u000a      }\u000a      lVar3 = lVar3 + 1;\u000a    } while (lVar3 < (long)num_cmd_defines);\u000a  }\u000a  return;\u000a}\u000a\u000a
p297
S'PUSH R15\nPUSH R14\nPUSH RBX\nCMP dword ptr [0x0060629c],0x0\nJLE 0x00403833\nXOR R15D,R15D\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RBX,qword ptr [0x6062a0 + R15*0x8]\nMOVZX EAX,byte ptr [RBX + 0x1]\nCMP AL,0x55\nJZ 0x004037d0\nCMP AL,0x44\nJNZ 0x004037e0\nMOV ESI,0x3d\nMOV RDI,RBX\nCALL 0x00401400\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040380c\nMOV byte ptr [R14],0x0\nADD RBX,0x2\nMOV RSI,R14\nINC RSI\nMOV RDI,RBX\nCALL 0x00402f60\nMOV byte ptr [R14],0x3d\nJMP 0x00403820\nADD RBX,0x2\nMOV RDI,RBX\nCALL 0x00403c30\nJMP 0x00403820\nMOV ESI,0x40484e\nMOV RDI,RBX\nCALL 0x004014d0\nTEST EAX,EAX\nJNZ 0x00403820\nMOV EAX,dword ptr [0x00606208]\nTEST EAX,EAX\nJZ 0x00403820\nMOV EDI,0x606268\nMOV ESI,0x40484d\nCALL 0x004021e0\nJMP 0x00403820\nADD RBX,0x2\nMOV RDI,RBX\nCALL 0x004030c0\nNOP dword ptr [RAX + RAX*0x1]\nINC R15\nMOVSXD RAX,dword ptr [0x0060629c]\nCMP R15,RAX\nJL 0x00403780\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p298
S'41 57\n41 56\n53\n83 3d 30 2b 20 00 00\n0f 8e c1 00 00 00\n45 31 ff\n66 66 2e 0f 1f 84 00 00 00 00 00\n4a 8b 1c fd a0 62 60 00\n0f b6 43 01\n3c 55\n74 40\n3c 44\n75 4c\nbe 3d 00 00 00\n48 89 df\ne8 5f dc ff ff\n49 89 c6\n4d 85 f6\n74 63\n41 c6 06 00\n48 83 c3 02\n4c 89 f6\n48 ff c6\n48 89 df\ne8 a1 f7 ff ff\n41 c6 06 3d\neb 5b\n48 83 c3 02\n48 89 df\ne8 54 04 00 00\neb 42\nbe 4e 48 40 00\n48 89 df\ne8 e3 dc ff ff\n85 c0\n75 2f\n8b 05 11 2a 20 00\n85 c0\n74 25\nbf 68 62 60 00\nbe 4d 48 40 00\ne8 d6 e9 ff ff\neb 14\n48 83 c3 02\n48 89 df\ne8 a8 f8 ff ff\n0f 1f 84 00 00 00 00 00\n49 ff c7\n48 63 05 72 2a 20 00\n49 39 c7\n0f 8c 4d ff ff ff\n5b\n41 5e\n41 5f\nc3\n'
p299
S'.text:0000000000403760\n.text:0000000000403762\n.text:0000000000403764\n.text:0000000000403765\n.text:000000000040376c\n.text:0000000000403772\n.text:0000000000403775\n.text:0000000000403780\n.text:0000000000403788\n.text:000000000040378c\n.text:000000000040378e\n.text:0000000000403790\n.text:0000000000403792\n.text:0000000000403794\n.text:0000000000403799\n.text:000000000040379c\n.text:00000000004037a1\n.text:00000000004037a4\n.text:00000000004037a7\n.text:00000000004037a9\n.text:00000000004037ad\n.text:00000000004037b1\n.text:00000000004037b4\n.text:00000000004037b7\n.text:00000000004037ba\n.text:00000000004037bf\n.text:00000000004037c3\n.text:00000000004037d0\n.text:00000000004037d4\n.text:00000000004037d7\n.text:00000000004037dc\n.text:00000000004037e0\n.text:00000000004037e5\n.text:00000000004037e8\n.text:00000000004037ed\n.text:00000000004037ef\n.text:00000000004037f1\n.text:00000000004037f7\n.text:00000000004037f9\n.text:00000000004037fb\n.text:0000000000403800\n.text:0000000000403805\n.text:000000000040380a\n.text:000000000040380c\n.text:0000000000403810\n.text:0000000000403813\n.text:0000000000403818\n.text:0000000000403820\n.text:0000000000403823\n.text:000000000040382a\n.text:000000000040382d\n.text:0000000000403833\n.text:0000000000403834\n.text:0000000000403836\n.text:0000000000403838\n'
p300
tp301
sS'rename'
p302
(S'\n__stdcall rename(char * __old, char * __new)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint rename(char *__old,char *__new)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_rename_006061b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x006061b0]\n'
p305
S'ff 25 5a 4b 20 00\n'
p306
S'.plt:0000000000401650\n'
p307
tp308
sS'XGrabServer'
p309
(S'\n__stdcall XGrabServer()\n'
p310
V\u000avoid XGrabServer(void)\u000a\u000a{\u000a  (*(code *)PTR_XGrabServer_00606168)();\u000a  return;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x00606168]\n'
p312
S'ff 25 a2 4b 20 00\n'
p313
S'.plt:00000000004015c0\n'
p314
tp315
sS'strrchr'
p316
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p317
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_006060b8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x006060b8]\n'
p319
S'ff 25 52 4c 20 00\n'
p320
S'.plt:0000000000401460\n'
p321
tp322
sS'fputs'
p323
(S'\n__stdcall fputs(char * __s, FILE * __stream)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_006060c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x006060c0]\n'
p326
S'ff 25 4a 4c 20 00\n'
p327
S'.plt:0000000000401470\n'
p328
tp329
sS'InitEntries'
p330
(S'\n__stdcall InitEntries()\n'
p331
V\u000aundefined8 InitEntries(void)\u000a\u000a{\u000a  undefined8 in_RAX;\u000a  \u000a  newDB._8_8_ = 500;\u000a  newDB.entry = (Entry *)malloc(12000);\u000a  return in_RAX;\u000a}\u000a\u000a
p332
S'PUSH RAX\nMOV qword ptr [0x006072f0],0x1f4\nMOV EDI,0x2ee0\nCALL 0x00401550\nMOV qword ptr [0x006072e8],RAX\nPOP RAX\nRET\n'
p333
S'50\n48 c7 05 74 47 20 00 f4 01 00 00\nbf e0 2e 00 00\ne8 ca e9 ff ff\n48 89 05 5b 47 20 00\n58\nc3\n'
p334
S'.text:0000000000402b70\n.text:0000000000402b71\n.text:0000000000402b7c\n.text:0000000000402b81\n.text:0000000000402b86\n.text:0000000000402b8d\n.text:0000000000402b8e\n'
p335
tp336
sS'perror'
p337
(S'\n__stdcall perror(char * __s)\n'
p338
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid perror(char *__s)\u000a\u000a{\u000a  (*(code *)PTR_perror_006061a8)();\u000a  return;\u000a}\u000a\u000a
p339
S'JMP qword ptr [0x006061a8]\n'
p340
S'ff 25 62 4b 20 00\n'
p341
S'.plt:0000000000401640\n'
p342
tp343
sS'Syntax'
p344
(S'\n__stdcall Syntax()\n'
p345
V\u000avoid Syntax(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = "";\u000a  if (cpp_program != (char *)0x0) {\u000a    pcVar1 = cpp_program;\u000a  }\u000a  fprintf(stderr,\u000a          "usage:  %s [-options ...] [filename]\u005cn\u005cnwhere options include:\u005cn -help               print this help message\u005cn -version            print the program version\u005cn -display host:dpy   display to use\u005cn -all                do all resources [default]\u005cn -global             do screen-independent resources\u005cn -screen             do screen-specific resources for one screen\u005cn -screens            do screen-specific resources for all screens\u005cn -n                  show but don\u005c't do changes\u005cn -cpp filename       preprocessor to use [%s]\u005cn -nocpp              do not use a preprocessor\u005cn -query              query resources\u005cn -load               load resources from file [default]\u005cn -override           add in resources from file\u005cn -merge              merge resources from file & sort\u005cn -edit filename      edit resources into file\u005cn -backup string      backup suffix for -edit [%s]\u005cn -symbols            show preprocessor symbols\u005cn -remove             remove resources\u005cn -retain             avoid server reset (avoid using this)\u005cn -quiet              don\u005c't warn about duplicates\u005cn -Dname[=value], -Uname, -Idirectory    passed to preprocessor\u005cn\u005cnA - or no input filename represents stdin.\u005cn"\u000a          ,ProgramName,pcVar1,&DAT_0040458d);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p346
S'PUSH RAX\nMOV RDI,qword ptr [0x00606240]\nMOV RDX,qword ptr [0x00606250]\nMOV RAX,qword ptr [0x00606278]\nTEST RAX,RAX\nMOV ECX,0x404867\nCMOVNZ RCX,RAX\nMOV ESI,0x40410c\nMOV R8D,0x40458d\nXOR EAX,EAX\nCALL 0x00401500\nMOV EDI,0x1\nCALL 0x00401680\n'
p347
S'50\n48 8b 3d 58 3f 20 00\n48 8b 15 61 3f 20 00\n48 8b 05 82 3f 20 00\n48 85 c0\nb9 67 48 40 00\n48 0f 45 c8\nbe 0c 41 40 00\n41 b8 8d 45 40 00\n31 c0\ne8 ec f1 ff ff\nbf 01 00 00 00\ne8 62 f3 ff ff\n'
p348
S'.text:00000000004022e0\n.text:00000000004022e1\n.text:00000000004022e8\n.text:00000000004022ef\n.text:00000000004022f6\n.text:00000000004022f9\n.text:00000000004022fe\n.text:0000000000402302\n.text:0000000000402307\n.text:000000000040230d\n.text:000000000040230f\n.text:0000000000402314\n.text:0000000000402319\n'
p349
tp350
sS'open'
p351
(S'\n__stdcall open(char * __file, int __oflag)\n'
p352
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_00606188)();\u000a  return iVar1;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x00606188]\n'
p354
S'ff 25 82 4b 20 00\n'
p355
S'.plt:0000000000401600\n'
p356
tp357
sS'AddSimpleDef'
p358
(S'\n__stdcall AddSimpleDef()\n'
p359
V\u000avoid AddSimpleDef(undefined8 uParm1)\u000a\u000a{\u000a  AddDef(uParm1,0);\u000a  return;\u000a}\u000a\u000a
p360
S'XOR ESI,ESI\nJMP 0x00402fb0\n'
p361
S'31 f6\ne9 e9 fe ff ff\n'
p362
S'.text:00000000004030c0\n.text:00000000004030c2\n'
p363
tp364
sS'_init'
p365
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p366
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00605ff8;\u000a  if (PTR___gmon_start___00605ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00605ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p367
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00605ff8]\nTEST RAX,RAX\nJZ 0x0040130a\nCALL RAX\nADD RSP,0x8\nRET\n'
p368
S'48 83 ec 08\n48 8b 05 f5 4c 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p369
S'.init:00000000004012f8\n.init:00000000004012fc\n.init:0000000000401303\n.init:0000000000401306\n.init:0000000000401308\n.init:000000000040130a\n.init:000000000040130e\n'
p370
tp371
sS'Process'
p372
(S'\n__stdcall Process()\n'
p373
V\u000avoid Process(ulong uParm1,int iParm2,int iParm3)\u000a\u000a{\u000a  int __fd;\u000a  Atom res_prop;\u000a  FILE *__stream;\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  FILE *__stream_00;\u000a  long lVar3;\u000a  undefined *puVar4;\u000a  String *buff;\u000a  Entries *entries;\u000a  Window root;\u000a  char template [100];\u000a  char old [100];\u000a  char buf [8192];\u000a  char local_2118 [112];\u000a  char local_20a8 [112];\u000a  char *local_2038 [1025];\u000a  \u000a  defines.used = defines_base;\u000a  defines.val[(long)defines_base] = 0;\u000a  buffer.used = 0;\u000a  InitEntries();\u000a  buff = (String *)dpy;\u000a  DoScreenDefines(dpy,uParm1 & 0xffffffff);\u000a  DoCmdDefines(buff);\u000a  if (iParm2 == 0) {\u000a    entries = (Entries *)XResourceManagerString();\u000a    root = *(Window *)(*(long *)(dpy + 0xe8) + 0x10);\u000a    res_prop = 0x17;\u000a  }\u000a  else {\u000a    lVar3 = (long)(int)(uParm1 & 0xffffffff) * 0x80;\u000a    entries = (Entries *)XScreenResourceString(*(long *)(dpy + 0xe8) + lVar3);\u000a    root = *(Window *)(*(long *)(dpy + 0xe8) + 0x10 + lVar3);\u000a    res_prop = XInternAtom(dpy,"SCREEN_RESOURCES",0);\u000a  }\u000a  switch(oper) {\u000a  case 0:\u000a    puts(defines.val);\u000a    break;\u000a  case 1:\u000a    if (entries != (Entries *)0x0) {\u000a      printf("%s",entries);\u000a    }\u000a    break;\u000a  case 2:\u000a    if (entries != (Entries *)0x0) {\u000a      XDeleteProperty(dpy,root,res_prop);\u000a    }\u000a    break;\u000a  case 3:\u000a    __stream_00 = fopen(editFile,"r");\u000a    snprintf(local_2118,100,"%sXXXXXX",editFile);\u000a    __fd = mkstemp(local_2118);\u000a    __stream = fdopen(__fd,"w");\u000a    if (__stream == (FILE *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      fatal("%s: can\u005c't open temporary file \u005c'%s\u005c'\u005cn",ProgramName,local_2118);\u000a    }\u000a    GetEntriesString(entries);\u000a    EditFile(__stream_00,__stream);\u000a    if (__stream_00 != (FILE *)0x0) {\u000a      fclose(__stream_00);\u000a    }\u000a    fclose(__stream);\u000a    snprintf(local_20a8,100,"%s%s",editFile,backup_suffix);\u000a    if (dont_execute == 1) {\u000a      __stream_00 = fopen(local_2118,"r");\u000a      if (__stream_00 != (FILE *)0x0) {\u000a        sVar1 = fread(local_2038,1,0x2000,__stream_00);\u000a        if (0 < (int)sVar1) {\u000a          do {\u000a            fwrite(local_2038,1,(long)(int)sVar1,stdout);\u000a            sVar1 = fread(local_2038,1,0x2000,__stream_00);\u000a          } while (0 < (int)sVar1);\u000a        }\u000a        fclose(__stream_00);\u000a      }\u000a      unlink(local_2118);\u000a    }\u000a    else {\u000a      rename(editFile,local_20a8);\u000a      __fd = rename(local_2118,editFile);\u000a      if (__fd != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        fatal("%s: can\u005c't rename file \u005c'%s\u005c' to \u005c'%s\u005c'\u005cn",ProgramName,local_2118,editFile);\u000a      }\u000a    }\u000a    break;\u000a  default:\u000a    if (oper - 5U < 2) {\u000a      GetEntriesString(entries);\u000a    }\u000a    if (((cpp_program == (char *)0x0) || (pcVar2 = strstr(cpp_program,"cpp"), pcVar2 == (char *)0x0)\u000a        ) || ((byte)(pcVar2[3] | 0x20U) != 0x20)) {\u000a      puVar4 = &DAT_00404867;\u000a    }\u000a    else {\u000a      puVar4 = &DAT_004046e7;\u000a    }\u000a    if ((filename != (char *)0x0) &&\u000a       (__stream_00 = freopen(filename,"r",stdin), __stream_00 == (FILE *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a      fatal("%s: can\u005c't open file \u005c'%s\u005c'\u005cn",ProgramName,filename);\u000a    }\u000a    __stream_00 = stdin;\u000a    if (cpp_program != (char *)0x0) {\u000a      pcVar2 = "";\u000a      if (filename != (char *)0x0) {\u000a        pcVar2 = filename;\u000a      }\u000a      __fd = asprintf(local_2038,"%s %s %s %s %s",cpp_program,puVar4,includes.val,defines.val,pcVar2\u000a                     );\u000a      if (__fd == -1) {\u000a                    /* WARNING: Subroutine does not return */\u000a        fatal("%s: Out of memory\u005cn",ProgramName);\u000a      }\u000a      __stream_00 = popen(local_2038[0],"r");\u000a      if (__stream_00 == (FILE *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        fatal("%s: cannot run \u005c'%s\u005c'\u005cn",ProgramName,local_2038[0]);\u000a      }\u000a      free(local_2038[0]);\u000a    }\u000a    ReadFile(__stream_00);\u000a    if (cpp_program != (char *)0x0) {\u000a      pclose(__stream_00);\u000a    }\u000a    GetEntries(&newDB,&buffer);\u000a    if (iParm3 == 0) goto LAB_00402a03;\u000a    FormatEntries();\u000a    if (dont_execute == 1) {\u000a      if ((0 < buffer.used) &&\u000a         (fwrite(buffer.buff,1,(long)buffer.used,stdout),\u000a         buffer.buff[(long)buffer.used + -1] != '\u005cn')) {\u000a        putchar(10);\u000a      }\u000a    }\u000a    else {\u000a      if ((iParm2 == 0) || (1 < buffer.used)) {\u000a        StoreProperty(dpy,root,res_prop);\u000a      }\u000a      else {\u000a        XDeleteProperty(dpy,root,res_prop);\u000a      }\u000a    }\u000a    goto LAB_004029fe;\u000a  }\u000a  if (iParm3 != 0) {\u000aLAB_004029fe:\u000a    FreeEntries();\u000a  }\u000aLAB_00402a03:\u000a  if ((iParm2 != 0) && (entries != (Entries *)0x0)) {\u000a    XFree(entries);\u000a  }\u000a  return;\u000a}\u000a\u000a
p374
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x20f8\nMOV EBP,EDX\nMOV R13D,ESI\nMOV EBX,EDI\nMOV RAX,qword ptr [0x00606268]\nMOVSXD RCX,dword ptr [0x006072d0]\nMOV byte ptr [RAX + RCX*0x1],0x0\nMOV dword ptr [0x00606274],ECX\nMOV dword ptr [0x006072e4],0x0\nCALL 0x00402b70\nMOV RDI,qword ptr [0x006072a0]\nMOV ESI,EBX\nCALL 0x00403510\nCALL 0x00403760\nMOV RDI,qword ptr [0x006072a0]\nTEST R13D,R13D\nJZ 0x004026eb\nMOVSXD RBX,EBX\nSHL RBX,0x7\nMOV RDI,qword ptr [0xe8 + RDI]\nADD RDI,RBX\nCALL 0x00401510\nMOV R14,RAX\nMOV RDI,qword ptr [0x006072a0]\nMOV RAX,qword ptr [0xe8 + RDI]\nMOV R15,qword ptr [RAX + RBX*0x1 + 0x10]\nMOV ESI,0x404685\nXOR EDX,EDX\nCALL 0x00401570\nMOV R12,RAX\nJMP 0x0040270b\nCALL 0x00401560\nMOV R14,RAX\nMOV RAX,qword ptr [0x006072a0]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOV R15,qword ptr [RAX + 0x10]\nMOV R12D,0x17\nMOV EAX,dword ptr [0x00606208]\nCMP RAX,0x3\nJA 0x004028b2\nJMP qword ptr [0x403ee0 + RAX*0x8]\nMOV RDI,qword ptr [0x00606268]\nCALL 0x004013b0\nTEST EBP,EBP\nJNZ 0x004029fe\nJMP 0x00402a03\nTEST R14,R14\nJZ 0x004029fa\nMOV RDI,qword ptr [0x006072a0]\nMOV RSI,R15\nMOV RDX,R12\nCALL 0x00401430\nTEST EBP,EBP\nJNZ 0x004029fe\nJMP 0x00402a03\nMOV R15D,EBP\nMOV RDI,qword ptr [0x00606290]\nMOV ESI,0x404829\nCALL 0x00401630\nMOV RBP,RAX\nMOV RCX,qword ptr [0x00606290]\nLEA RBX,[RSP + 0x10]\nMOV ESI,0x64\nMOV EDX,0x404696\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00401450\nMOV RDI,RBX\nCALL 0x004015b0\nMOV ESI,0x40405a\nMOV EDI,EAX\nCALL 0x004015e0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00402aeb\nMOV RDI,R14\nCALL 0x00402b90\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x00403840\nTEST RBP,RBP\nJZ 0x004027da\nMOV RDI,RBP\nCALL 0x004013e0\nMOV RDI,RBX\nCALL 0x004013e0\nMOV RCX,qword ptr [0x00606290]\nMOV R8,qword ptr [0x00606210]\nLEA RDI,[0x80 + RSP]\nMOV ESI,0x64\nMOV EDX,0x404610\nXOR EAX,EAX\nCALL 0x00401450\nCMP byte ptr [0x00606288],0x1\nJNZ 0x004029ca\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x404829\nCALL 0x00401630\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00402898\nLEA RDI,[0xf0 + RSP]\nMOV ESI,0x1\nMOV EDX,0x2000\nMOV RCX,RBP\nCALL 0x004013d0\nTEST EAX,EAX\nJLE 0x00402890\nLEA RBX,[0xf0 + RSP]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVSXD RDX,EAX\nMOV RCX,qword ptr [0x00606220]\nMOV ESI,0x1\nMOV RDI,RBX\nCALL 0x00401690\nMOV ESI,0x1\nMOV EDX,0x2000\nMOV RDI,RBX\nMOV RCX,RBP\nCALL 0x004013d0\nTEST EAX,EAX\nJG 0x00402860\nMOV RDI,RBP\nCALL 0x004013e0\nLEA RDI,[RSP + 0x10]\nCALL 0x00401350\nMOV EBP,R15D\nTEST EBP,EBP\nJNZ 0x004029fe\nJMP 0x00402a03\nADD EAX,-0x5\nCMP EAX,0x1\nJA 0x004028c2\nMOV RDI,R14\nCALL 0x00402b90\nMOV RDI,qword ptr [0x00606278]\nTEST RDI,RDI\nMOV dword ptr [RSP + 0xc],EBP\nJZ 0x00402916\nMOV ESI,0x403f6e\nCALL 0x004016b0\nTEST RAX,RAX\nJZ 0x00402916\nMOV AL,byte ptr [RAX + 0x3]\nOR AL,0x20\nCMP AL,0x20\nJNZ 0x00402916\nMOV EBP,0x4046e7\nJMP 0x0040291b\nTEST R14,R14\nJZ 0x004029fa\nMOV EDI,0x404710\nXOR EAX,EAX\nMOV RSI,R14\nCALL 0x00401410\nTEST EBP,EBP\nJNZ 0x004029fe\nJMP 0x00402a03\nMOV EBP,0x404867\nMOV RDI,qword ptr [0x00606280]\nTEST RDI,RDI\nJZ 0x00402941\nMOV RDX,qword ptr [0x00606230]\nMOV ESI,0x404829\nCALL 0x00401490\nTEST RAX,RAX\nJZ 0x00402b03\nMOV RDX,qword ptr [0x00606278]\nTEST RDX,RDX\nJZ 0x00402a27\nMOV R8,qword ptr [0x00606258]\nMOV R9,qword ptr [0x00606268]\nMOV RAX,qword ptr [0x00606280]\nTEST RAX,RAX\nMOV ECX,0x404867\nCMOVNZ RCX,RAX\nMOV qword ptr [RSP],RCX\nLEA RDI,[0xf0 + RSP]\nMOV ESI,0x404704\nXOR EAX,EAX\nMOV RCX,RBP\nCALL 0x004015f0\nCMP EAX,-0x1\nJZ 0x00402b1d\nMOV RDI,qword ptr [0xf0 + RSP]\nMOV ESI,0x404829\nCALL 0x00401620\nMOV RBX,RAX\nMOV RCX,qword ptr [0xf0 + RSP]\nTEST RBX,RBX\nMOV EBP,dword ptr [RSP + 0xc]\nJZ 0x00402b30\nMOV RDI,RCX\nCALL 0x00401320\nJMP 0x00402a32\nMOV RDI,qword ptr [0x00606290]\nLEA RSI,[0x80 + RSP]\nCALL 0x00401650\nMOV RSI,qword ptr [0x00606290]\nLEA RDI,[RSP + 0x10]\nCALL 0x00401650\nTEST EAX,EAX\nJNZ 0x00402b46\nMOV EBP,R15D\nTEST EBP,EBP\nJZ 0x00402a03\nCALL 0x00403b90\nTEST R13D,R13D\nJZ 0x00402a15\nTEST R14,R14\nJZ 0x00402a15\nMOV RDI,R14\nCALL 0x00401420\nADD RSP,0x20f8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RBX,qword ptr [0x00606230]\nMOV EBP,dword ptr [RSP + 0xc]\nMOV RDI,RBX\nCALL 0x00403970\nCMP qword ptr [0x00606278],0x0\nJZ 0x00402a4c\nMOV RDI,RBX\nCALL 0x00401440\nMOV EDI,0x6072e8\nMOV ESI,0x6072d8\nXOR EDX,EDX\nCALL 0x004030d0\nTEST EBP,EBP\nJZ 0x00402a03\nCALL 0x00403a00\nMOVSXD RDX,dword ptr [0x006072e4]\nCMP byte ptr [0x00606288],0x1\nJNZ 0x00402aba\nTEST EDX,EDX\nJLE 0x004029fe\nMOV RDI,qword ptr [0x006072d8]\nMOV RCX,qword ptr [0x00606220]\nMOV ESI,0x1\nCALL 0x00401690\nMOV RAX,qword ptr [0x006072d8]\nMOVSXD RCX,dword ptr [0x006072e4]\nCMP byte ptr [RAX + RCX*0x1 + -0x1],0xa\nJZ 0x004029fe\nMOV EDI,0xa\nCALL 0x00401330\nJMP 0x004029fe\nMOV RDI,qword ptr [0x006072a0]\nTEST R13D,R13D\nJZ 0x00402adb\nCMP EDX,0x2\nJGE 0x00402adb\nMOV RSI,R15\nMOV RDX,R12\nCALL 0x00401430\nJMP 0x004029fe\nMOV RSI,R15\nMOV RDX,R12\nCALL 0x00403a90\nJMP 0x004029fe\nMOV RSI,qword ptr [0x00606250]\nLEA RDX,[RSP + 0x10]\nMOV EDI,0x40469f\nXOR EAX,EAX\nCALL 0x004023a0\nMOV RSI,qword ptr [0x00606250]\nMOV RDX,qword ptr [0x00606280]\nMOV EDI,0x4046ea\nXOR EAX,EAX\nCALL 0x004023a0\nMOV RSI,qword ptr [0x00606250]\nMOV EDI,0x404713\nXOR EAX,EAX\nCALL 0x004023a0\nMOV RSI,qword ptr [0x00606250]\nMOV EDI,0x404726\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x004023a0\nMOV RSI,qword ptr [0x00606250]\nMOV RCX,qword ptr [0x00606290]\nLEA RDX,[RSP + 0x10]\nMOV EDI,0x4046c3\nXOR EAX,EAX\nCALL 0x004023a0\n'
p375
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec f8 20 00 00\n89 d5\n41 89 f5\n89 fb\n48 8b 05 f9 3b 20 00\n48 63 0d 5a 4c 20 00\nc6 04 08 00\n89 0d f4 3b 20 00\nc7 05 5a 4c 20 00 00 00 00 00\ne8 e1 04 00 00\n48 8b 3d 0a 4c 20 00\n89 de\ne8 73 0e 00 00\ne8 be 10 00 00\n48 8b 3d f7 4b 20 00\n45 85 ed\n74 3d\n48 63 db\n48 c1 e3 07\n48 8b bf e8 00 00 00\n48 01 df\ne8 4c ee ff ff\n49 89 c6\n48 8b 3d d2 4b 20 00\n48 8b 87 e8 00 00 00\n4c 8b 7c 18 10\nbe 85 46 40 00\n31 d2\ne8 8a ee ff ff\n49 89 c4\neb 20\ne8 70 ee ff ff\n49 89 c6\n48 8b 05 a6 4b 20 00\n48 8b 80 e8 00 00 00\n4c 8b 78 10\n41 bc 17 00 00 00\n8b 05 f7 3a 20 00\n48 83 f8 03\n0f 87 97 01 00 00\nff 24 c5 e0 3e 40 00\n48 8b 3d 3f 3b 20 00\ne8 82 ec ff ff\n85 ed\n0f 85 c8 02 00 00\ne9 c8 02 00 00\n4d 85 f6\n0f 84 b6 02 00 00\n48 8b 3d 55 4b 20 00\n4c 89 fe\n4c 89 e2\ne8 da ec ff ff\n85 ed\n0f 85 a0 02 00 00\ne9 a0 02 00 00\n41 89 ef\n48 8b 3d 23 3b 20 00\nbe 29 48 40 00\ne8 b9 ee ff ff\n48 89 c5\n48 8b 0d 0f 3b 20 00\n48 8d 5c 24 10\nbe 64 00 00 00\nba 96 46 40 00\n31 c0\n48 89 df\ne8 b6 ec ff ff\n48 89 df\ne8 0e ee ff ff\nbe 5a 40 40 00\n89 c7\ne8 32 ee ff ff\n48 89 c3\n48 85 db\n0f 84 31 03 00 00\n4c 89 f7\ne8 ce 03 00 00\n48 89 ef\n48 89 de\ne8 73 10 00 00\n48 85 ed\n74 08\n48 89 ef\ne8 06 ec ff ff\n48 89 df\ne8 fe eb ff ff\n48 8b 0d a7 3a 20 00\n4c 8b 05 20 3a 20 00\n48 8d bc 24 80 00 00 00\nbe 64 00 00 00\nba 10 46 40 00\n31 c0\ne8 47 ec ff ff\n80 3d 78 3a 20 00 01\n0f 85 b4 01 00 00\n48 8d 7c 24 10\nbe 29 48 40 00\ne8 0b ee ff ff\n48 89 c5\n48 85 ed\n74 6b\n48 8d bc 24 f0 00 00 00\nbe 01 00 00 00\nba 00 20 00 00\n48 89 e9\ne8 89 eb ff ff\n85 c0\n7e 45\n48 8d 9c 24 f0 00 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 63 d0\n48 8b 0d b6 39 20 00\nbe 01 00 00 00\n48 89 df\ne8 19 ee ff ff\nbe 01 00 00 00\nba 00 20 00 00\n48 89 df\n48 89 e9\ne8 44 eb ff ff\n85 c0\n7f d0\n48 89 ef\ne8 48 eb ff ff\n48 8d 7c 24 10\ne8 ae ea ff ff\n44 89 fd\n85 ed\n0f 85 51 01 00 00\ne9 51 01 00 00\n83 c0 fb\n83 f8 01\n77 08\n4c 89 f7\ne8 ce 02 00 00\n48 8b 3d af 39 20 00\n48 85 ff\n89 6c 24 0c\n74 44\nbe 6e 3f 40 00\ne8 d4 ed ff ff\n48 85 c0\n74 35\n8a 40 03\n0c 20\n3c 20\n75 2c\nbd e7 46 40 00\neb 2a\n4d 85 f6\n0f 84 00 01 00 00\nbf 10 47 40 00\n31 c0\n4c 89 f6\ne8 07 eb ff ff\n85 ed\n0f 85 ed 00 00 00\ne9 ed 00 00 00\nbd 67 48 40 00\n48 8b 3d 5e 39 20 00\n48 85 ff\n74 1a\n48 8b 15 02 39 20 00\nbe 29 48 40 00\ne8 58 eb ff ff\n48 85 c0\n0f 84 c2 01 00 00\n48 8b 15 30 39 20 00\n48 85 d2\n0f 84 d6 00 00 00\n4c 8b 05 00 39 20 00\n4c 8b 0d 09 39 20 00\n48 8b 05 1a 39 20 00\n48 85 c0\nb9 67 48 40 00\n48 0f 45 c8\n48 89 0c 24\n48 8d bc 24 f0 00 00 00\nbe 04 47 40 00\n31 c0\n48 89 e9\ne8 63 ec ff ff\n83 f8 ff\n0f 84 87 01 00 00\n48 8b bc 24 f0 00 00 00\nbe 29 48 40 00\ne8 78 ec ff ff\n48 89 c3\n48 8b 8c 24 f0 00 00 00\n48 85 db\n8b 6c 24 0c\n0f 84 70 01 00 00\n48 89 cf\ne8 58 e9 ff ff\neb 68\n48 8b 3d bf 38 20 00\n48 8d b4 24 80 00 00 00\ne8 72 ec ff ff\n48 8b 35 ab 38 20 00\n48 8d 7c 24 10\ne8 61 ec ff ff\n85 c0\n0f 85 4f 01 00 00\n44 89 fd\n85 ed\n74 05\ne8 8d 11 00 00\n45 85 ed\n74 0d\n4d 85 f6\n74 08\n4c 89 f7\ne8 0b ea ff ff\n48 81 c4 f8 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 1d 02 38 20 00\n8b 6c 24 0c\n48 89 df\ne8 36 0f 00 00\n48 83 3d 36 38 20 00 00\n74 08\n48 89 df\ne8 f4 e9 ff ff\nbf e8 72 60 00\nbe d8 72 60 00\n31 d2\ne8 73 06 00 00\n85 ed\n74 a2\ne8 9a 0f 00 00\n48 63 15 77 48 20 00\n80 3d 14 38 20 00 01\n75 44\n85 d2\n7e 84\n48 8b 3d 57 48 20 00\n48 8b 0d 98 37 20 00\nbe 01 00 00 00\ne8 fe eb ff ff\n48 8b 05 3f 48 20 00\n48 63 0d 44 48 20 00\n80 7c 08 ff 0a\n0f 84 53 ff ff ff\nbf 0a 00 00 00\ne8 7b e8 ff ff\ne9 44 ff ff ff\n48 8b 3d df 47 20 00\n45 85 ed\n74 15\n83 fa 02\n7d 10\n4c 89 fe\n4c 89 e2\ne8 5a e9 ff ff\ne9 23 ff ff ff\n4c 89 fe\n4c 89 e2\ne8 aa 0f 00 00\ne9 13 ff ff ff\n48 8b 35 5e 37 20 00\n48 8d 54 24 10\nbf 9f 46 40 00\n31 c0\ne8 9d f8 ff ff\n48 8b 35 46 37 20 00\n48 8b 15 6f 37 20 00\nbf ea 46 40 00\n31 c0\ne8 83 f8 ff ff\n48 8b 35 2c 37 20 00\nbf 13 47 40 00\n31 c0\ne8 70 f8 ff ff\n48 8b 35 19 37 20 00\nbf 26 47 40 00\n31 c0\n48 89 ca\ne8 5a f8 ff ff\n48 8b 35 03 37 20 00\n48 8b 0d 3c 37 20 00\n48 8d 54 24 10\nbf c3 46 40 00\n31 c0\ne8 3b f8 ff ff\n'
p376
S'.text:0000000000402650\n.text:0000000000402651\n.text:0000000000402653\n.text:0000000000402655\n.text:0000000000402657\n.text:0000000000402659\n.text:000000000040265a\n.text:0000000000402661\n.text:0000000000402663\n.text:0000000000402666\n.text:0000000000402668\n.text:000000000040266f\n.text:0000000000402676\n.text:000000000040267a\n.text:0000000000402680\n.text:000000000040268a\n.text:000000000040268f\n.text:0000000000402696\n.text:0000000000402698\n.text:000000000040269d\n.text:00000000004026a2\n.text:00000000004026a9\n.text:00000000004026ac\n.text:00000000004026ae\n.text:00000000004026b1\n.text:00000000004026b5\n.text:00000000004026bc\n.text:00000000004026bf\n.text:00000000004026c4\n.text:00000000004026c7\n.text:00000000004026ce\n.text:00000000004026d5\n.text:00000000004026da\n.text:00000000004026df\n.text:00000000004026e1\n.text:00000000004026e6\n.text:00000000004026e9\n.text:00000000004026eb\n.text:00000000004026f0\n.text:00000000004026f3\n.text:00000000004026fa\n.text:0000000000402701\n.text:0000000000402705\n.text:000000000040270b\n.text:0000000000402711\n.text:0000000000402715\n.text:000000000040271b\n.text:0000000000402722\n.text:0000000000402729\n.text:000000000040272e\n.text:0000000000402730\n.text:0000000000402736\n.text:000000000040273b\n.text:000000000040273e\n.text:0000000000402744\n.text:000000000040274b\n.text:000000000040274e\n.text:0000000000402751\n.text:0000000000402756\n.text:0000000000402758\n.text:000000000040275e\n.text:0000000000402763\n.text:0000000000402766\n.text:000000000040276d\n.text:0000000000402772\n.text:0000000000402777\n.text:000000000040277a\n.text:0000000000402781\n.text:0000000000402786\n.text:000000000040278b\n.text:0000000000402790\n.text:0000000000402792\n.text:0000000000402795\n.text:000000000040279a\n.text:000000000040279d\n.text:00000000004027a2\n.text:00000000004027a7\n.text:00000000004027a9\n.text:00000000004027ae\n.text:00000000004027b1\n.text:00000000004027b4\n.text:00000000004027ba\n.text:00000000004027bd\n.text:00000000004027c2\n.text:00000000004027c5\n.text:00000000004027c8\n.text:00000000004027cd\n.text:00000000004027d0\n.text:00000000004027d2\n.text:00000000004027d5\n.text:00000000004027da\n.text:00000000004027dd\n.text:00000000004027e2\n.text:00000000004027e9\n.text:00000000004027f0\n.text:00000000004027f8\n.text:00000000004027fd\n.text:0000000000402802\n.text:0000000000402804\n.text:0000000000402809\n.text:0000000000402810\n.text:0000000000402816\n.text:000000000040281b\n.text:0000000000402820\n.text:0000000000402825\n.text:0000000000402828\n.text:000000000040282b\n.text:000000000040282d\n.text:0000000000402835\n.text:000000000040283a\n.text:000000000040283f\n.text:0000000000402842\n.text:0000000000402847\n.text:0000000000402849\n.text:000000000040284b\n.text:0000000000402853\n.text:0000000000402860\n.text:0000000000402863\n.text:000000000040286a\n.text:000000000040286f\n.text:0000000000402872\n.text:0000000000402877\n.text:000000000040287c\n.text:0000000000402881\n.text:0000000000402884\n.text:0000000000402887\n.text:000000000040288c\n.text:000000000040288e\n.text:0000000000402890\n.text:0000000000402893\n.text:0000000000402898\n.text:000000000040289d\n.text:00000000004028a2\n.text:00000000004028a5\n.text:00000000004028a7\n.text:00000000004028ad\n.text:00000000004028b2\n.text:00000000004028b5\n.text:00000000004028b8\n.text:00000000004028ba\n.text:00000000004028bd\n.text:00000000004028c2\n.text:00000000004028c9\n.text:00000000004028cc\n.text:00000000004028d0\n.text:00000000004028d2\n.text:00000000004028d7\n.text:00000000004028dc\n.text:00000000004028df\n.text:00000000004028e1\n.text:00000000004028e4\n.text:00000000004028e6\n.text:00000000004028e8\n.text:00000000004028ea\n.text:00000000004028ef\n.text:00000000004028f1\n.text:00000000004028f4\n.text:00000000004028fa\n.text:00000000004028ff\n.text:0000000000402901\n.text:0000000000402904\n.text:0000000000402909\n.text:000000000040290b\n.text:0000000000402911\n.text:0000000000402916\n.text:000000000040291b\n.text:0000000000402922\n.text:0000000000402925\n.text:0000000000402927\n.text:000000000040292e\n.text:0000000000402933\n.text:0000000000402938\n.text:000000000040293b\n.text:0000000000402941\n.text:0000000000402948\n.text:000000000040294b\n.text:0000000000402951\n.text:0000000000402958\n.text:000000000040295f\n.text:0000000000402966\n.text:0000000000402969\n.text:000000000040296e\n.text:0000000000402972\n.text:0000000000402976\n.text:000000000040297e\n.text:0000000000402983\n.text:0000000000402985\n.text:0000000000402988\n.text:000000000040298d\n.text:0000000000402990\n.text:0000000000402996\n.text:000000000040299e\n.text:00000000004029a3\n.text:00000000004029a8\n.text:00000000004029ab\n.text:00000000004029b3\n.text:00000000004029b6\n.text:00000000004029ba\n.text:00000000004029c0\n.text:00000000004029c3\n.text:00000000004029c8\n.text:00000000004029ca\n.text:00000000004029d1\n.text:00000000004029d9\n.text:00000000004029de\n.text:00000000004029e5\n.text:00000000004029ea\n.text:00000000004029ef\n.text:00000000004029f1\n.text:00000000004029f7\n.text:00000000004029fa\n.text:00000000004029fc\n.text:00000000004029fe\n.text:0000000000402a03\n.text:0000000000402a06\n.text:0000000000402a08\n.text:0000000000402a0b\n.text:0000000000402a0d\n.text:0000000000402a10\n.text:0000000000402a15\n.text:0000000000402a1c\n.text:0000000000402a1d\n.text:0000000000402a1f\n.text:0000000000402a21\n.text:0000000000402a23\n.text:0000000000402a25\n.text:0000000000402a26\n.text:0000000000402a27\n.text:0000000000402a2e\n.text:0000000000402a32\n.text:0000000000402a35\n.text:0000000000402a3a\n.text:0000000000402a42\n.text:0000000000402a44\n.text:0000000000402a47\n.text:0000000000402a4c\n.text:0000000000402a51\n.text:0000000000402a56\n.text:0000000000402a58\n.text:0000000000402a5d\n.text:0000000000402a5f\n.text:0000000000402a61\n.text:0000000000402a66\n.text:0000000000402a6d\n.text:0000000000402a74\n.text:0000000000402a76\n.text:0000000000402a78\n.text:0000000000402a7a\n.text:0000000000402a81\n.text:0000000000402a88\n.text:0000000000402a8d\n.text:0000000000402a92\n.text:0000000000402a99\n.text:0000000000402aa0\n.text:0000000000402aa5\n.text:0000000000402aab\n.text:0000000000402ab0\n.text:0000000000402ab5\n.text:0000000000402aba\n.text:0000000000402ac1\n.text:0000000000402ac4\n.text:0000000000402ac6\n.text:0000000000402ac9\n.text:0000000000402acb\n.text:0000000000402ace\n.text:0000000000402ad1\n.text:0000000000402ad6\n.text:0000000000402adb\n.text:0000000000402ade\n.text:0000000000402ae1\n.text:0000000000402ae6\n.text:0000000000402aeb\n.text:0000000000402af2\n.text:0000000000402af7\n.text:0000000000402afc\n.text:0000000000402afe\n.text:0000000000402b03\n.text:0000000000402b0a\n.text:0000000000402b11\n.text:0000000000402b16\n.text:0000000000402b18\n.text:0000000000402b1d\n.text:0000000000402b24\n.text:0000000000402b29\n.text:0000000000402b2b\n.text:0000000000402b30\n.text:0000000000402b37\n.text:0000000000402b3c\n.text:0000000000402b3e\n.text:0000000000402b41\n.text:0000000000402b46\n.text:0000000000402b4d\n.text:0000000000402b54\n.text:0000000000402b59\n.text:0000000000402b5e\n.text:0000000000402b60\n'
p377
tp378
sS'main'
p379
(S'\n__stdcall main(char * * argv)\n'
p380
V\u000aint main(char **argv)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  undefined4 uVar3;\u000a  int __fd;\u000a  int iVar4;\u000a  char *pcVar5;\u000a  long lVar6;\u000a  char *__s;\u000a  ulong uVar7;\u000a  uint uVar8;\u000a  Entries *db;\u000a  FILE *__stream;\u000a  undefined8 uVar9;\u000a  int iVar10;\u000a  Entries *entries;\u000a  int iVar11;\u000a  byte bVar12;\u000a  char *displayname;\u000a  char inputbuf [1024];\u000a  ulong local_440;\u000a  char local_438 [1032];\u000a  \u000a  uVar7 = (ulong)argv & 0xffffffff;\u000a  ProgramName = *(char **)__stream;\u000a  includes.used = 0;\u000a  includes.room = 0;\u000a  defines._8_8_ = 0;\u000a  addstring(&includes,"");\u000a  if (cpp_program == (char *)0x0) {\u000a    __s = (char *)__strdup("/usr/bin/cpp");\u000a    pcVar5 = strchr(__s,0x20);\u000a    if (pcVar5 != (char *)0x0) {\u000a      *pcVar5 = 0;\u000a    }\u000a    __fd = access(__s,1);\u000a    if (__fd == 0) {\u000a      cpp_program = "/usr/bin/cpp";\u000a    }\u000a    free(__s);\u000a  }\u000a  __fd = (int)uVar7;\u000a  if (__fd < 2) {\u000a    bVar2 = false;\u000a    iVar11 = 0;\u000a    local_440 = 0;\u000a  }\u000a  else {\u000a    local_440 = 0;\u000a    iVar10 = 1;\u000a    iVar11 = 0;\u000a    bVar2 = false;\u000a    do {\u000a      __s = *(char **)(&__stream->_flags + (long)iVar10 * 2);\u000a      pcVar5 = filename;\u000a      if ((*__s != '=') && (pcVar5 = __s, *__s == '-')) {\u000a        cVar1 = __s[1];\u000a        if (cVar1 == 0) {\u000a          filename = (char *)0x0;\u000a          pcVar5 = filename;\u000a        }\u000a        else {\u000a          iVar4 = isabbreviation("-help",__s);\u000a          if (iVar4 != 0) {\u000a            Syntax();\u000aLAB_00402115:\u000a            puts("xrdb 1.1.0");\u000a                    /* WARNING: Subroutine does not return */\u000a            exit(0);\u000a          }\u000a          iVar4 = isabbreviation("-version",__s);\u000a          if (iVar4 != 0) goto LAB_00402115;\u000a          iVar4 = isabbreviation("-display",__s);\u000a          if (iVar4 == 0) {\u000a            iVar4 = isabbreviation("-geometry",__s);\u000a            if (iVar4 == 0) {\u000a              iVar4 = isabbreviation("-cpp",__s);\u000a              if (iVar4 == 0) {\u000a                if ((cVar1 == 'n') && (__s[2] == 0)) {\u000a                  dont_execute = 1;\u000a                  pcVar5 = filename;\u000a                }\u000a                else {\u000a                  iVar4 = isabbreviation("-nocpp",__s);\u000a                  if (iVar4 == 0) {\u000a                    iVar4 = isabbreviation("-query",__s);\u000a                    if (iVar4 == 0) {\u000a                      iVar4 = isabbreviation("-load",__s);\u000a                      if (iVar4 == 0) {\u000a                        iVar4 = isabbreviation("-merge",__s);\u000a                        if (iVar4 == 0) {\u000a                          iVar4 = isabbreviation("-override",__s);\u000a                          if (iVar4 == 0) {\u000a                            iVar4 = isabbreviation("-symbols",__s);\u000a                            if (iVar4 == 0) {\u000a                              iVar4 = isabbreviation("-remove",__s);\u000a                              if (iVar4 == 0) {\u000a                                iVar4 = isabbreviation("-edit",__s);\u000a                                if (iVar4 == 0) {\u000a                                  iVar4 = isabbreviation("-backup",__s);\u000a                                  if (iVar4 == 0) {\u000a                                    iVar4 = isabbreviation("-all",__s);\u000a                                    if (iVar4 == 0) {\u000a                                      iVar4 = isabbreviation("-global",__s);\u000a                                      if (iVar4 == 0) {\u000a                                        iVar4 = isabbreviation("-screen",__s);\u000a                                        if (iVar4 == 0) {\u000a                                          iVar4 = strcmp("-screens",__s);\u000a                                          if (iVar4 == 0) {\u000a                                            iVar11 = 3;\u000a                                            pcVar5 = filename;\u000a                                          }\u000a                                          else {\u000a                                            iVar4 = isabbreviation("-retain",__s);\u000a                                            if (iVar4 == 0) {\u000a                                              iVar4 = isabbreviation("-quiet",__s);\u000a                                              if (iVar4 == 0) {\u000a                                                cVar1 = __s[1];\u000a                                                if ((cVar1 == 'D') || (cVar1 == 'U')) {\u000a                                                  lVar6 = (long)num_cmd_defines;\u000a                                                  if (0x1ff < lVar6) {\u000a                    /* WARNING: Subroutine does not return */\u000a                                                    fatal("%s: Too many -U/-D arguments\u005cn",\u000a                                                          ProgramName);\u000a                                                  }\u000a                                                  num_cmd_defines = num_cmd_defines + 1;\u000a                                                  cmd_defines[lVar6] = __s;\u000a                                                  pcVar5 = filename;\u000a                                                }\u000a                                                else {\u000a                                                  if (cVar1 == 'I') {\u000a                                                    addstring(&includes," ");\u000a                                                    addescapedstring(&includes,__s);\u000a                                                    pcVar5 = filename;\u000a                                                  }\u000a                                                  else {\u000a                                                    iVar4 = strcmp("-undef",__s);\u000a                                                    if (iVar4 != 0) {\u000a                                                      Syntax();\u000aLAB_004021c5:\u000a                    /* WARNING: Subroutine does not return */\u000a                                                      fatal("%s: Too many cpp arguments\u005cn",\u000a                                                            ProgramName);\u000a                                                    }\u000a                                                    lVar6 = (long)num_cmd_defines;\u000a                                                    if (0x1ff < lVar6) goto LAB_004021c5;\u000a                                                    num_cmd_defines = num_cmd_defines + 1;\u000a                                                    cmd_defines[lVar6] = "-undef";\u000a                                                    pcVar5 = filename;\u000a                                                  }\u000a                                                }\u000a                                              }\u000a                                              else {\u000a                                                quiet = 1;\u000a                                                pcVar5 = filename;\u000a                                              }\u000a                                            }\u000a                                            else {\u000a                                              bVar2 = true;\u000a                                              pcVar5 = filename;\u000a                                            }\u000a                                          }\u000a                                        }\u000a                                        else {\u000a                                          iVar11 = 2;\u000a                                          pcVar5 = filename;\u000a                                        }\u000a                                      }\u000a                                      else {\u000a                                        iVar11 = 1;\u000a                                        pcVar5 = filename;\u000a                                      }\u000a                                    }\u000a                                    else {\u000a                                      iVar11 = 0;\u000a                                      pcVar5 = filename;\u000a                                    }\u000a                                  }\u000a                                  else {\u000a                                    iVar10 = iVar10 + 1;\u000a                                    if (__fd <= iVar10) goto LAB_00402126;\u000a                                    backup_suffix = *(char **)(&__stream->_flags + (long)iVar10 * 2)\u000a                                    ;\u000a                                    pcVar5 = filename;\u000a                                  }\u000a                                }\u000a                                else {\u000a                                  iVar10 = iVar10 + 1;\u000a                                  if (__fd <= iVar10) {\u000aLAB_00402126:\u000a                                    Syntax();\u000a                                    goto LAB_0040212b;\u000a                                  }\u000a                                  oper = 3;\u000a                                  editFile = *(char **)(&__stream->_flags + (long)iVar10 * 2);\u000a                                  pcVar5 = filename;\u000a                                }\u000a                              }\u000a                              else {\u000a                                oper = 2;\u000a                                pcVar5 = filename;\u000a                              }\u000a                            }\u000a                            else {\u000a                              oper = 0;\u000a                              pcVar5 = filename;\u000a                            }\u000a                          }\u000a                          else {\u000a                            oper = 6;\u000a                            pcVar5 = filename;\u000a                          }\u000a                        }\u000a                        else {\u000a                          oper = 5;\u000a                          pcVar5 = filename;\u000a                        }\u000a                      }\u000a                      else {\u000a                        oper = 4;\u000a                        pcVar5 = filename;\u000a                      }\u000a                    }\u000a                    else {\u000a                      oper = 1;\u000a                      pcVar5 = filename;\u000a                    }\u000a                  }\u000a                  else {\u000a                    cpp_program = (char *)0x0;\u000a                    pcVar5 = filename;\u000a                  }\u000a                }\u000a              }\u000a              else {\u000a                iVar10 = iVar10 + 1;\u000a                if (__fd <= iVar10) goto LAB_00402126;\u000a                cpp_program = *(char **)(&__stream->_flags + (long)iVar10 * 2);\u000a                pcVar5 = filename;\u000a              }\u000a            }\u000a            else {\u000a              iVar10 = iVar10 + 1;\u000a              pcVar5 = filename;\u000a              if (__fd <= iVar10) {\u000a                Syntax();\u000a                goto LAB_00402154;\u000a              }\u000a            }\u000a          }\u000a          else {\u000a            iVar10 = iVar10 + 1;\u000a            if (__fd <= iVar10) goto LAB_00402126;\u000a            local_440 = *(ulong *)(&__stream->_flags + (long)iVar10 * 2);\u000a            pcVar5 = filename;\u000a          }\u000a        }\u000a      }\u000a      filename = pcVar5;\u000a      iVar10 = iVar10 + 1;\u000a    } while (iVar10 < __fd);\u000a  }\u000a  do {\u000a    __fd = open("/dev/null",0);\u000a  } while (__fd < 3);\u000a  close(__fd);\u000a  dpy = (Display *)XOpenDisplay(local_440);\u000a  uVar7 = local_440;\u000a  if (dpy == (Display *)0x0) {\u000aLAB_0040212b:\u000a    __s = ProgramName;\u000a    uVar9 = XDisplayName(uVar7);\u000a                    /* WARNING: Subroutine does not return */\u000a    fatal("%s: Can\u005c't open display \u005c'%s\u005c'\u005cn",__s,uVar9,uVar9);\u000a  }\u000a  if ((iVar11 == 0) && (*(int *)(dpy + 0xe4) == 1)) {\u000a    iVar11 = *(int *)(dpy + 0xe4);\u000a  }\u000a  if (((filename == (char *)0x0) && (oper - 4U < 3)) && ((iVar11 == 3 || (iVar11 == 0)))) {\u000a    tmpname._0_4_ = DAT_00404049;\u000a    tmpname._4_4_ = DAT_0040404d;\u000a    tmpname._8_4_ = DAT_00404051;\u000a    tmpname._12_4_ = DAT_00404055;\u000a    tmpname[16] = 0;\u000a    __fd = mkstemp(tmpname);\u000a    filename = tmpname;\u000a    __stream = fdopen(__fd,"w");\u000a    if (__stream == (FILE *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      fatal("%s: Failed to open temp file: %s\u005cn",ProgramName,filename);\u000a    }\u000a    __s = fgets(local_438,0x400,stdin);\u000a    if (__s != (char *)0x0) {\u000a      do {\u000a        fputs(local_438,__stream);\u000a        __s = fgets(local_438,0x400,stdin);\u000a      } while (__s != (char *)0x0);\u000a    }\u000a    fclose(__stream);\u000a  }\u000a  else {\u000a    __stream = (FILE *)0x0;\u000a  }\u000a  DoDisplayDefines(dpy,local_440);\u000a  defines_base = defines.used;\u000a  bVar12 = 1;\u000a  if ((oper | 1U) != 1) {\u000a    bVar12 = oper != 2 & dont_execute;\u000a  }\u000a  InitBuffer(&buffer);\u000a  if (iVar11 == 3) {\u000aLAB_0040200d:\u000a    if (0 < *(int *)(dpy + 0xe4)) {\u000a      uVar7 = 0;\u000a      do {\u000a        if (bVar12 == 0) {\u000a          Process(uVar7,1,1);\u000a        }\u000a        else {\u000a          if (oper == 0) {\u000a            __s = "# screen %d symbols\u005cn";\u000a          }\u000a          else {\u000a            printf("! screen %d resources\u005cn",uVar7);\u000a            __s = "#if SCREEN_NUM == %d\u005cn";\u000a          }\u000a          printf(__s,uVar7);\u000a          Process(uVar7,1,1);\u000a          if (oper != 0) {\u000a            puts("#endif");\u000a          }\u000a          if ((int)uVar7 + 1 != *(int *)(dpy + 0xe4)) {\u000a            putchar(10);\u000a          }\u000a        }\u000a        uVar8 = (int)uVar7 + 1;\u000a        uVar7 = (ulong)uVar8;\u000a      } while ((int)uVar8 < *(int *)(dpy + 0xe4));\u000a    }\u000a  }\u000a  else {\u000a    if (iVar11 == 2) {\u000aLAB_00402154:\u000a      uVar8 = *(uint *)(dpy + 0xe0);\u000a      uVar9 = 1;\u000a    }\u000a    else {\u000a      if (iVar11 != 1) {\u000a        if (oper - 4U < 3) {\u000a          db = (Entries *)malloc((long)*(int *)(dpy + 0xe4) << 4);\u000a          if (0 < *(int *)(dpy + 0xe4)) {\u000a            uVar7 = 0;\u000a            entries = db;\u000a            do {\u000a              Process(uVar7 & 0xffffffff,1,0);\u000a              iVar11 = newDB.used;\u000a              __fd = newDB.room;\u000a              uVar3 = newDB.entry._4_4_;\u000a              *(undefined4 *)&entries->entry = newDB.entry._0_4_;\u000a              *(undefined4 *)((long)&entries->entry + 4) = uVar3;\u000a              entries->room = __fd;\u000a              entries->used = iVar11;\u000a              uVar7 = uVar7 + 1;\u000a              entries = entries + 1;\u000a            } while ((long)uVar7 < (long)*(int *)(dpy + 0xe4));\u000a          }\u000a          InitEntries();\u000a          if (oper - 5U < 2) {\u000a            entries = (Entries *)XResourceManagerString(dpy);\u000a            GetEntriesString(entries);\u000a          }\u000a          ShuffleEntries(db);\u000a          if (bVar12 == 0) {\u000a            ReProcess(0,0);\u000a          }\u000a          else {\u000a            puts("! screen-independent resources");\u000a            ReProcess(0,0);\u000a            putchar(10);\u000a          }\u000a          if (0 < *(int *)(dpy + 0xe4)) {\u000a            uVar7 = 0;\u000a            do {\u000a              newDB.entry._0_4_ = *(undefined4 *)&db->entry;\u000a              newDB.entry._4_4_ = *(undefined4 *)((long)&db->entry + 4);\u000a              newDB.room = db->room;\u000a              newDB.used = db->used;\u000a              if (bVar12 == 0) {\u000a                ReProcess(uVar7 & 0xffffffff,1);\u000a              }\u000a              else {\u000a                printf("! screen %d resources\u005cn",uVar7 & 0xffffffff);\u000a                printf("#if SCREEN_NUM == %d\u005cn",uVar7 & 0xffffffff);\u000a                ReProcess(uVar7 & 0xffffffff);\u000a                puts("#endif");\u000a                if ((int)uVar7 + 1 != *(int *)(dpy + 0xe4)) {\u000a                  putchar(10);\u000a                }\u000a              }\u000a              uVar7 = uVar7 + 1;\u000a              db = db + 1;\u000a            } while ((long)uVar7 < (long)*(int *)(dpy + 0xe4));\u000a          }\u000a          goto joined_r0x004020d9;\u000a        }\u000a        if ((iVar11 == 0) && (oper != 0)) {\u000a          if (bVar12 == 0) {\u000a            Process(0,0,1);\u000a          }\u000a          else {\u000a            puts("! screen-independent resources");\u000a            Process(0,0,1);\u000a            putchar(10);\u000a          }\u000a        }\u000a        goto LAB_0040200d;\u000a      }\u000a      uVar8 = *(uint *)(dpy + 0xe0);\u000a      uVar9 = 0;\u000a    }\u000a    Process((ulong)uVar8,uVar9,1);\u000a  }\u000ajoined_r0x004020d9:\u000a  if (__stream != (FILE *)0x0) {\u000a    unlink(filename);\u000a  }\u000a  if (bVar2) {\u000a    XSetCloseDownMode(dpy,1);\u000a  }\u000a  XCloseDisplay();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p381
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x418\nMOV R15,RSI\nMOV EBP,EDI\nMOV RAX,qword ptr [R15]\nMOV qword ptr [0x00606250],RAX\nMOV dword ptr [0x00606264],0x0\nMOV dword ptr [0x00606260],0x0\nMOV qword ptr [0x00606270],0x0\nMOV EDI,0x606258\nMOV ESI,0x404867\nCALL 0x004021e0\nCMP qword ptr [0x00606278],0x0\nJNZ 0x0040187e\nMOV EDI,0x4040ff\nCALL 0x004014b0\nMOV RBX,RAX\nMOV ESI,0x20\nMOV RDI,RBX\nCALL 0x00401400\nTEST RAX,RAX\nJZ 0x0040185a\nMOV byte ptr [RAX],0x0\nMOV ESI,0x1\nMOV RDI,RBX\nCALL 0x00401610\nTEST EAX,EAX\nJNZ 0x00401876\nMOV qword ptr [0x00606278],0x4040ff\nMOV RDI,RBX\nCALL 0x00401320\nXOR EAX,EAX\nCMP EBP,0x2\nJL 0x0040189e\nMOV qword ptr [RSP + 0x8],RAX\nMOV R12D,0x1\nXOR R13D,R13D\nXOR EAX,EAX\nMOV qword ptr [RSP],RAX\nJMP 0x004019b0\nMOV qword ptr [RSP],RAX\nXOR R13D,R13D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nJMP 0x00401cb0\nMOV EDI,0x403fce\nMOV RSI,RBX\nCALL 0x004014d0\nTEST EAX,EAX\nJZ 0x004018e6\nMOV EDI,0x403fd7\nMOV EDX,0x4\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x004018f1\nMOV EAX,0x1\nMOV qword ptr [RSP],RAX\nJMP 0x00401ca0\nMOV R13D,0x3\nJMP 0x00401ca0\nMOV EDI,0x403fdf\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401913\nMOV byte ptr [0x00606298],0x1\nJMP 0x00401ca0\nMOVZX EAX,byte ptr [RBX + 0x1]\nCMP AL,0x44\nJZ 0x00401944\nCMP AL,0x55\nJZ 0x00401944\nCMP AL,0x49\nJNZ 0x0040196d\nMOV EDI,0x606258\nMOV ESI,0x403fe6\nCALL 0x004021e0\nMOV EDI,0x606258\nMOV RSI,RBX\nCALL 0x00402320\nJMP 0x00401ca0\nMOVSXD RAX,dword ptr [0x0060629c]\nCMP RAX,0x1ff\nJG 0x004021ad\nLEA ECX,[RAX + 0x1]\nMOV dword ptr [0x0060629c],ECX\nMOV qword ptr [0x6062a0 + RAX*0x8],RBX\nJMP 0x00401ca0\nMOV EDI,0x40484e\nMOV RSI,RBX\nCALL 0x004014d0\nTEST EAX,EAX\nJNZ 0x004021c0\nMOVSXD RAX,dword ptr [0x0060629c]\nCMP RAX,0x1ff\nJG 0x004021c5\nLEA ECX,[RAX + 0x1]\nMOV dword ptr [0x0060629c],ECX\nMOV qword ptr [0x6062a0 + RAX*0x8],0x40484e\nJMP 0x00401ca0\nMOVSXD RAX,R12D\nMOV RBX,qword ptr [R15 + RAX*0x8]\nMOVZX EAX,byte ptr [RBX]\nCMP AL,0x3d\nJZ 0x00401ca0\nCMP AL,0x2d\nJNZ 0x00401a40\nMOVZX R14D,byte ptr [RBX + 0x1]\nTEST R14B,R14B\nJZ 0x00401a4c\nMOV EDI,0x403f40\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJNZ 0x00402110\nMOV EDI,0x403f46\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJNZ 0x00402115\nMOV EDI,0x403f5a\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401a5c\nINC R12D\nCMP R12D,EBP\nJGE 0x00402126\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R15 + RAX*0x8]\nMOV qword ptr [RSP + 0x8],RAX\nJMP 0x00401ca0\nMOV qword ptr [0x00606280],RBX\nJMP 0x00401ca0\nMOV qword ptr [0x00606280],0x0\nJMP 0x00401ca0\nMOV EDI,0x403f63\nMOV EDX,0x3\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401a83\nINC R12D\nCMP R12D,EBP\nJL 0x00401ca0\nJMP 0x0040214f\nMOV EDI,0x403f6d\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401ab8\nINC R12D\nCMP R12D,EBP\nJGE 0x00402126\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R15 + RAX*0x8]\nMOV qword ptr [0x00606278],RAX\nJMP 0x00401ca0\nCMP R14B,0x6e\nJNZ 0x00401ac4\nCMP byte ptr [RBX + 0x2],0x0\nJZ 0x00401b0f\nMOV EDI,0x403f75\nMOV EDX,0x3\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401aea\nMOV qword ptr [0x00606278],0x0\nJMP 0x00401ca0\nMOV EDI,0x403f7c\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401b1b\nMOV dword ptr [0x00606208],0x1\nJMP 0x00401ca0\nMOV byte ptr [0x00606288],0x1\nJMP 0x00401ca0\nMOV EDI,0x403f83\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401b40\nMOV dword ptr [0x00606208],0x4\nJMP 0x00401ca0\nMOV EDI,0x403f89\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401b65\nMOV dword ptr [0x00606208],0x5\nJMP 0x00401ca0\nMOV EDI,0x403f90\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401b8a\nMOV dword ptr [0x00606208],0x6\nJMP 0x00401ca0\nMOV EDI,0x403f9a\nMOV EDX,0x3\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401baf\nMOV dword ptr [0x00606208],0x0\nJMP 0x00401ca0\nMOV EDI,0x403fa3\nMOV EDX,0x4\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401bd4\nMOV dword ptr [0x00606208],0x2\nJMP 0x00401ca0\nMOV EDI,0x403fab\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401c13\nINC R12D\nCMP R12D,EBP\nJGE 0x00402126\nMOV dword ptr [0x00606208],0x3\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R15 + RAX*0x8]\nMOV qword ptr [0x00606290],RAX\nJMP 0x00401ca0\nMOV EDI,0x403fb1\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401c45\nINC R12D\nCMP R12D,EBP\nJGE 0x00402126\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R15 + RAX*0x8]\nMOV qword ptr [0x00606210],RAX\nJMP 0x00401ca0\nMOV EDI,0x403fb9\nMOV EDX,0x2\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401c60\nXOR R13D,R13D\nJMP 0x00401ca0\nMOV EDI,0x403fbe\nMOV EDX,0x3\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x00401c7e\nMOV R13D,0x1\nJMP 0x00401ca0\nMOV EDI,0x403fc6\nMOV EDX,0x3\nMOV RSI,RBX\nCALL 0x00402270\nTEST EAX,EAX\nJZ 0x004018b1\nMOV R13D,0x2\nNOP\nINC R12D\nCMP R12D,EBP\nJL 0x004019b0\nNOP dword ptr [RAX]\nMOV EDI,0x404022\nXOR ESI,ESI\nXOR EAX,EAX\nCALL 0x00401600\nCMP EAX,0x3\nJL 0x00401cb0\nMOV EDI,EAX\nCALL 0x004014a0\nMOV RBP,qword ptr [RSP + 0x8]\nMOV RDI,RBP\nCALL 0x004014f0\nMOV qword ptr [0x006072a0],RAX\nTEST RAX,RAX\nJZ 0x0040212b\nTEST R13D,R13D\nJNZ 0x00401cf9\nMOV EAX,dword ptr [0xe4 + RAX]\nCMP EAX,0x1\nCMOVZ R13D,EAX\nCMP qword ptr [0x00606280],0x0\nJNZ 0x00401dbe\nMOV EAX,dword ptr [0x00606208]\nADD EAX,-0x4\nCMP EAX,0x2\nJA 0x00401dbe\nCMP R13D,0x3\nJZ 0x00401d28\nTEST R13D,R13D\nJNZ 0x00401dbe\nMOVUPS XMM0,xmmword ptr [0x00404049]\nMOVAPS xmmword ptr [0x006072b0],XMM0\nMOV byte ptr [0x006072c0],0x0\nMOV EDI,0x6072b0\nCALL 0x004015b0\nMOV qword ptr [0x00606280],0x6072b0\nMOV ESI,0x40405a\nMOV EDI,EAX\nCALL 0x004015e0\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00402193\nMOV RDX,qword ptr [0x00606230]\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x400\nCALL 0x004014c0\nTEST RAX,RAX\nJZ 0x00401db4\nLEA RBX,[RSP + 0x10]\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00401470\nMOV RDX,qword ptr [0x00606230]\nMOV ESI,0x400\nMOV RDI,RBX\nCALL 0x004014c0\nTEST RAX,RAX\nJNZ 0x00401d90\nMOV RDI,R15\nCALL 0x004013e0\nJMP 0x00401dc1\nXOR R15D,R15D\nMOV RDI,qword ptr [0x006072a0]\nMOV RSI,RBP\nCALL 0x00402460\nMOV EAX,dword ptr [0x00606274]\nMOV dword ptr [0x006072d0],EAX\nMOV EAX,dword ptr [0x00606208]\nMOV ECX,EAX\nOR ECX,0x1\nMOV R14B,0x1\nCMP ECX,0x1\nJZ 0x00401dfd\nCMP EAX,0x2\nSETNZ R14B\nAND R14B,byte ptr [0x00606288]\nMOV EDI,0x6072d8\nCALL 0x00402630\nCMP R13D,0x3\nJZ 0x0040200d\nCMP R13D,0x2\nJZ 0x00402154\nCMP R13D,0x1\nJZ 0x00402168\nMOV EAX,dword ptr [0x00606208]\nADD EAX,-0x4\nCMP EAX,0x3\nJNC 0x00401f08\nMOV RAX,qword ptr [0x006072a0]\nMOVSXD RDI,dword ptr [0xe4 + RAX]\nSHL RDI,0x4\nCALL 0x00401550\nMOV RBP,RAX\nMOV RAX,qword ptr [0x006072a0]\nCMP dword ptr [0xe4 + RAX],0x0\nJLE 0x00401ea4\nXOR EBX,EBX\nMOV R12,RBP\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV ESI,0x1\nXOR EDX,EDX\nMOV EDI,EBX\nCALL 0x00402650\nMOVUPS XMM0,xmmword ptr [0x006072e8]\nMOVUPS xmmword ptr [R12],XMM0\nINC RBX\nMOV RAX,qword ptr [0x006072a0]\nMOVSXD RAX,dword ptr [0xe4 + RAX]\nADD R12,0x10\nCMP RBX,RAX\nJL 0x00401e70\nCALL 0x00402b70\nMOV EAX,dword ptr [0x00606208]\nADD EAX,-0x5\nCMP EAX,0x1\nMOV R12,qword ptr [RSP]\nJA 0x00401ecf\nMOV RDI,qword ptr [0x006072a0]\nCALL 0x00401560\nMOV RDI,RAX\nCALL 0x00402b90\nMOV RAX,qword ptr [0x006072a0]\nMOV ESI,dword ptr [0xe4 + RAX]\nMOV RDI,RBP\nCALL 0x00402bd0\nTEST R14B,R14B\nJZ 0x00401f4f\nMOV EDI,0x404870\nCALL 0x004013b0\nXOR EDI,EDI\nXOR ESI,ESI\nCALL 0x00402d90\nMOV EDI,0xa\nCALL 0x00401330\nJMP 0x00401f58\nTEST R13D,R13D\nJNZ 0x0040200d\nMOV EAX,dword ptr [0x00606208]\nTEST EAX,EAX\nJZ 0x0040200d\nTEST R14B,R14B\nJZ 0x00401fff\nMOV EDI,0x404870\nCALL 0x004013b0\nXOR EDI,EDI\nXOR ESI,ESI\nMOV EDX,0x1\nCALL 0x00402650\nMOV EDI,0xa\nCALL 0x00401330\nJMP 0x0040200d\nXOR EDI,EDI\nXOR ESI,ESI\nCALL 0x00402d90\nMOV RAX,qword ptr [0x006072a0]\nCMP dword ptr [0xe4 + RAX],0x0\nJLE 0x004020d6\nXOR EBX,EBX\nNOP\nMOVUPS XMM0,xmmword ptr [RBP]\nMOVUPS xmmword ptr [0x006072e8],XMM0\nTEST R14B,R14B\nJZ 0x00401fd0\nMOV EDI,0x4040b3\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401410\nMOV EDI,0x4040ca\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401410\nMOV ESI,0x1\nMOV EDI,EBX\nCALL 0x00402d90\nMOV EDI,0x404868\nCALL 0x004013b0\nLEA EAX,[RBX + 0x1]\nMOV RCX,qword ptr [0x006072a0]\nCMP EAX,dword ptr [0xe4 + RCX]\nJZ 0x00401fdc\nMOV EDI,0xa\nCALL 0x00401330\nJMP 0x00401fdc\nMOV ESI,0x1\nMOV EDI,EBX\nCALL 0x00402d90\nINC RBX\nMOV RAX,qword ptr [0x006072a0]\nMOVSXD RAX,dword ptr [0xe4 + RAX]\nADD RBP,0x10\nCMP RBX,RAX\nJL 0x00401f70\nJMP 0x004020d6\nXOR EDI,EDI\nXOR ESI,ESI\nMOV EDX,0x1\nCALL 0x00402650\nMOV RAX,qword ptr [0x006072a0]\nCMP dword ptr [0xe4 + RAX],0x0\nMOV R12,qword ptr [RSP]\nJLE 0x004020d6\nXOR EBP,EBP\nNOP word ptr [RAX + RAX*0x1]\nTEST R14B,R14B\nJZ 0x00402060\nCMP dword ptr [0x00606208],0x0\nJZ 0x00402073\nMOV EDI,0x4040b3\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401410\nMOV EDI,0x4040ca\nJMP 0x00402078\nMOV ESI,0x1\nMOV EDX,0x1\nMOV EDI,EBP\nCALL 0x00402650\nJMP 0x004020c1\nMOV EDI,0x40409e\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401410\nMOV ESI,0x1\nMOV EDX,0x1\nMOV EDI,EBP\nCALL 0x00402650\nCMP dword ptr [0x00606208],0x0\nJZ 0x004020a5\nMOV EDI,0x404868\nCALL 0x004013b0\nLEA EAX,[RBP + 0x1]\nMOV RCX,qword ptr [0x006072a0]\nCMP EAX,dword ptr [0xe4 + RCX]\nJZ 0x004020c1\nMOV EDI,0xa\nCALL 0x00401330\nINC EBP\nMOV RAX,qword ptr [0x006072a0]\nCMP EBP,dword ptr [0xe4 + RAX]\nJL 0x00402030\nTEST R15,R15\nJZ 0x004020e7\nMOV RDI,qword ptr [0x00606280]\nCALL 0x00401350\nTEST R12D,R12D\nJZ 0x004020fd\nMOV RDI,qword ptr [0x006072a0]\nMOV ESI,0x1\nCALL 0x00401380\nMOV RDI,qword ptr [0x006072a0]\nCALL 0x004016a0\nXOR EDI,EDI\nCALL 0x00401680\nCALL 0x004022e0\nMOV EDI,0x403f4f\nCALL 0x004013b0\nXOR EDI,EDI\nCALL 0x00401680\nCALL 0x004022e0\nMOV RBX,qword ptr [0x00606250]\nMOV RDI,RBP\nCALL 0x004015a0\nMOV RCX,RAX\nMOV EDI,0x40402c\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x004023a0\nCALL 0x004022e0\nMOV RAX,qword ptr [0x006072a0]\nMOV EDI,dword ptr [0xe0 + RAX]\nMOV ESI,0x1\nJMP 0x00402177\nMOV RAX,qword ptr [0x006072a0]\nMOV EDI,dword ptr [0xe0 + RAX]\nXOR ESI,ESI\nMOV EDX,0x1\nCALL 0x00402650\nMOV R12,qword ptr [RSP]\nTEST R15,R15\nJNZ 0x004020db\nJMP 0x004020e7\nMOV RSI,qword ptr [0x00606250]\nMOV RDX,qword ptr [0x00606280]\nMOV EDI,0x40405c\nXOR EAX,EAX\nCALL 0x004023a0\nMOV RSI,qword ptr [0x00606250]\nMOV EDI,0x403fe8\nXOR EAX,EAX\nCALL 0x004023a0\nCALL 0x004022e0\nMOV RSI,qword ptr [0x00606250]\nMOV EDI,0x404006\nXOR EAX,EAX\nCALL 0x004023a0\n'
p382
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 18 04 00 00\n49 89 f7\n89 fd\n49 8b 07\n48 89 05 50 4a 20 00\nc7 05 5a 4a 20 00 00 00 00 00\nc7 05 4c 4a 20 00 00 00 00 00\n48 c7 05 51 4a 20 00 00 00 00 00\nbf 58 62 60 00\nbe 67 48 40 00\ne8 b2 09 00 00\n48 83 3d 42 4a 20 00 00\n75 46\nbf ff 40 40 00\ne8 6e fc ff ff\n48 89 c3\nbe 20 00 00 00\n48 89 df\ne8 ae fb ff ff\n48 85 c0\n74 03\nc6 00 00\nbe 01 00 00 00\n48 89 df\ne8 a9 fd ff ff\n85 c0\n75 0b\n48 c7 05 02 4a 20 00 ff 40 40 00\n48 89 df\ne8 a2 fa ff ff\n31 c0\n83 fd 02\n7c 19\n48 89 44 24 08\n41 bc 01 00 00 00\n45 31 ed\n31 c0\n48 89 04 24\ne9 12 01 00 00\n48 89 04 24\n45 31 ed\n31 c0\n48 89 44 24 08\ne9 ff 03 00 00\nbf ce 3f 40 00\n48 89 de\ne8 12 fc ff ff\n85 c0\n74 24\nbf d7 3f 40 00\nba 04 00 00 00\n48 89 de\ne8 9c 09 00 00\n85 c0\n74 19\nb8 01 00 00 00\n48 89 04 24\ne9 ba 03 00 00\n41 bd 03 00 00 00\ne9 af 03 00 00\nbf df 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 6d 09 00 00\n85 c0\n74 0c\nc6 05 8a 49 20 00 01\ne9 8d 03 00 00\n0f b6 43 01\n3c 44\n74 29\n3c 55\n74 25\n3c 49\n75 4a\nbf 58 62 60 00\nbe e6 3f 40 00\ne8 ae 08 00 00\nbf 58 62 60 00\n48 89 de\ne8 e1 09 00 00\ne9 5c 03 00 00\n48 63 05 51 49 20 00\n48 3d ff 01 00 00\n0f 8f 56 08 00 00\n8d 48 01\n89 0d 3c 49 20 00\n48 89 1c c5 a0 62 60 00\ne9 33 03 00 00\nbf 4e 48 40 00\n48 89 de\ne8 56 fb ff ff\n85 c0\n0f 85 3e 08 00 00\n48 63 05 13 49 20 00\n48 3d ff 01 00 00\n0f 8f 30 08 00 00\n8d 48 01\n89 0d fe 48 20 00\n48 c7 04 c5 a0 62 60 00 4e 48 40 00\ne9 f1 02 00 00\n49 63 c4\n49 8b 1c c7\n0f b6 03\n3c 3d\n0f 84 de 02 00 00\n3c 2d\n75 7a\n44 0f b6 73 01\n45 84 f6\n74 7c\nbf 40 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 8e 08 00 00\n85 c0\n0f 85 26 07 00 00\nbf 46 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 74 08 00 00\n85 c0\n0f 85 11 07 00 00\nbf 5a 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 5a 08 00 00\n85 c0\n74 42\n41 ff c4\n41 39 ec\n0f 8d 00 07 00 00\n49 63 c4\n49 8b 04 c7\n48 89 44 24 08\ne9 69 02 00 00\n48 89 1d 39 48 20 00\ne9 54 02 00 00\n48 c7 05 29 48 20 00 00 00 00 00\ne9 44 02 00 00\nbf 63 3f 40 00\nba 03 00 00 00\n48 89 de\ne8 02 08 00 00\n85 c0\n74 11\n41 ff c4\n41 39 ec\n0f 8c 22 02 00 00\ne9 cc 06 00 00\nbf 6d 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 db 07 00 00\n85 c0\n74 1f\n41 ff c4\n41 39 ec\n0f 8d 81 06 00 00\n49 63 c4\n49 8b 04 c7\n48 89 05 c5 47 20 00\ne9 e8 01 00 00\n41 80 fe 6e\n75 06\n80 7b 02 00\n74 4b\nbf 75 3f 40 00\nba 03 00 00 00\n48 89 de\ne8 9a 07 00 00\n85 c0\n74 10\n48 c7 05 93 47 20 00 00 00 00 00\ne9 b6 01 00 00\nbf 7c 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 74 07 00 00\n85 c0\n74 1b\nc7 05 fe 46 20 00 01 00 00 00\ne9 91 01 00 00\nc6 05 72 47 20 00 01\ne9 85 01 00 00\nbf 83 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 43 07 00 00\n85 c0\n74 0f\nc7 05 cd 46 20 00 04 00 00 00\ne9 60 01 00 00\nbf 89 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 1e 07 00 00\n85 c0\n74 0f\nc7 05 a8 46 20 00 05 00 00 00\ne9 3b 01 00 00\nbf 90 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 f9 06 00 00\n85 c0\n74 0f\nc7 05 83 46 20 00 06 00 00 00\ne9 16 01 00 00\nbf 9a 3f 40 00\nba 03 00 00 00\n48 89 de\ne8 d4 06 00 00\n85 c0\n74 0f\nc7 05 5e 46 20 00 00 00 00 00\ne9 f1 00 00 00\nbf a3 3f 40 00\nba 04 00 00 00\n48 89 de\ne8 af 06 00 00\n85 c0\n74 0f\nc7 05 39 46 20 00 02 00 00 00\ne9 cc 00 00 00\nbf ab 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 8a 06 00 00\n85 c0\n74 29\n41 ff c4\n41 39 ec\n0f 8d 30 05 00 00\nc7 05 08 46 20 00 03 00 00 00\n49 63 c4\n49 8b 04 c7\n48 89 05 82 46 20 00\ne9 8d 00 00 00\nbf b1 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 4b 06 00 00\n85 c0\n74 1c\n41 ff c4\n41 39 ec\n0f 8d f1 04 00 00\n49 63 c4\n49 8b 04 c7\n48 89 05 cd 45 20 00\neb 5b\nbf b9 3f 40 00\nba 02 00 00 00\n48 89 de\ne8 19 06 00 00\n85 c0\n74 05\n45 31 ed\neb 40\nbf be 3f 40 00\nba 03 00 00 00\n48 89 de\ne8 fe 05 00 00\n85 c0\n74 08\n41 bd 01 00 00 00\neb 22\nbf c6 3f 40 00\nba 03 00 00 00\n48 89 de\ne8 e0 05 00 00\n85 c0\n0f 84 19 fc ff ff\n41 bd 02 00 00 00\n66 90\n41 ff c4\n41 39 ec\n0f 8c 04 fd ff ff\n0f 1f 40 00\nbf 22 40 40 00\n31 f6\n31 c0\ne8 42 f9 ff ff\n83 f8 03\n7c ed\n89 c7\ne8 d6 f7 ff ff\n48 8b 6c 24 08\n48 89 ef\ne8 19 f8 ff ff\n48 89 05 c2 55 20 00\n48 85 c0\n0f 84 44 04 00 00\n45 85 ed\n75 0d\n8b 80 e4 00 00 00\n83 f8 01\n44 0f 44 e8\n48 83 3d 7f 45 20 00 00\n0f 85 b7 00 00 00\n8b 05 fb 44 20 00\n83 c0 fc\n83 f8 02\n0f 87 a5 00 00 00\n41 83 fd 03\n74 09\n45 85 ed\n0f 85 96 00 00 00\n0f 10 05 1a 23 00 00\n0f 29 05 7a 55 20 00\nc6 05 83 55 20 00 00\nbf b0 72 60 00\ne8 69 f8 ff ff\n48 c7 05 2e 45 20 00 b0 72 60 00\nbe 5a 40 40 00\n89 c7\ne8 82 f8 ff ff\n49 89 c7\n4d 85 ff\n0f 84 29 04 00 00\n48 8b 15 bf 44 20 00\n48 8d 7c 24 10\nbe 00 04 00 00\ne8 40 f7 ff ff\n48 85 c0\n74 2f\n48 8d 5c 24 10\n66 0f 1f 44 00 00\n48 89 df\n4c 89 fe\ne8 d5 f6 ff ff\n48 8b 15 8e 44 20 00\nbe 00 04 00 00\n48 89 df\ne8 11 f7 ff ff\n48 85 c0\n75 dc\n4c 89 ff\ne8 24 f6 ff ff\neb 03\n45 31 ff\n48 8b 3d d8 54 20 00\n48 89 ee\ne8 90 06 00 00\n8b 05 9e 44 20 00\n89 05 f4 54 20 00\n8b 05 26 44 20 00\n89 c1\n83 c9 01\n41 b6 01\n83 f9 01\n74 0e\n83 f8 02\n41 0f 95 c6\n44 22 35 8b 44 20 00\nbf d8 72 60 00\ne8 29 08 00 00\n41 83 fd 03\n0f 84 fc 01 00 00\n41 83 fd 02\n0f 84 39 03 00 00\n41 83 fd 01\n0f 84 43 03 00 00\n8b 05 dd 43 20 00\n83 c0 fc\n83 f8 03\n0f 83 d1 00 00 00\n48 8b 05 62 54 20 00\n48 63 b8 e4 00 00 00\n48 c1 e7 04\ne8 02 f7 ff ff\n48 89 c5\n48 8b 05 48 54 20 00\n83 b8 e4 00 00 00 00\n7e 43\n31 db\n49 89 ec\n66 2e 0f 1f 84 00 00 00 00 00\nbe 01 00 00 00\n31 d2\n89 df\ne8 d2 07 00 00\n0f 10 05 63 54 20 00\n41 0f 11 04 24\n48 ff c3\n48 8b 05 0c 54 20 00\n48 63 80 e4 00 00 00\n49 83 c4 10\n48 39 c3\n7c cc\ne8 c7 0c 00 00\n8b 05 59 43 20 00\n83 c0 fb\n83 f8 01\n4c 8b 24 24\n77 14\n48 8b 3d de 53 20 00\ne8 99 f6 ff ff\n48 89 c7\ne8 c1 0c 00 00\n48 8b 05 ca 53 20 00\n8b b0 e4 00 00 00\n48 89 ef\ne8 ec 0c 00 00\n45 84 f6\n74 66\nbf 70 48 40 00\ne8 bd f4 ff ff\n31 ff\n31 f6\ne8 94 0e 00 00\nbf 0a 00 00 00\ne8 2a f4 ff ff\neb 50\n45 85 ed\n0f 85 fc 00 00 00\n8b 05 f1 42 20 00\n85 c0\n0f 84 ee 00 00 00\n45 84 f6\n0f 84 d7 00 00 00\nbf 70 48 40 00\ne8 7e f4 ff ff\n31 ff\n31 f6\nba 01 00 00 00\ne8 10 07 00 00\nbf 0a 00 00 00\ne8 e6 f3 ff ff\ne9 be 00 00 00\n31 ff\n31 f6\ne8 38 0e 00 00\n48 8b 05 41 53 20 00\n83 b8 e4 00 00 00 00\n0f 8e 6a 01 00 00\n31 db\n66 90\n0f 10 45 00\n0f 11 05 6d 53 20 00\n45 84 f6\n74 50\nbf b3 40 40 00\n31 c0\n89 de\ne8 82 f4 ff ff\nbf ca 40 40 00\n31 c0\n89 de\ne8 74 f4 ff ff\nbe 01 00 00 00\n89 df\ne8 e8 0d 00 00\nbf 68 48 40 00\ne8 fe f3 ff ff\n8d 43 01\n48 8b 0d e4 52 20 00\n3b 81 e4 00 00 00\n74 18\nbf 0a 00 00 00\ne8 62 f3 ff ff\neb 0c\nbe 01 00 00 00\n89 df\ne8 b4 0d 00 00\n48 ff c3\n48 8b 05 ba 52 20 00\n48 63 80 e4 00 00 00\n48 83 c5 10\n48 39 c3\n0f 8c 76 ff ff ff\ne9 d7 00 00 00\n31 ff\n31 f6\nba 01 00 00 00\ne8 43 06 00 00\n48 8b 05 8c 52 20 00\n83 b8 e4 00 00 00 00\n4c 8b 24 24\n0f 8e b1 00 00 00\n31 ed\n66 0f 1f 84 00 00 00 00 00\n45 84 f6\n74 2b\n83 3d cc 41 20 00 00\n74 35\nbf b3 40 40 00\n31 c0\n89 ee\ne8 c4 f3 ff ff\nbf ca 40 40 00\neb 25\nbe 01 00 00 00\nba 01 00 00 00\n89 ef\ne8 df 05 00 00\neb 4e\nbf 9e 40 40 00\n31 c0\n89 ee\ne8 8f f3 ff ff\nbe 01 00 00 00\nba 01 00 00 00\n89 ef\ne8 be 05 00 00\n83 3d 6f 41 20 00 00\n74 0a\nbf 68 48 40 00\ne8 0b f3 ff ff\n8d 45 01\n48 8b 0d f1 51 20 00\n3b 81 e4 00 00 00\n74 0a\nbf 0a 00 00 00\ne8 6f f2 ff ff\nff c5\n48 8b 05 d6 51 20 00\n3b a8 e4 00 00 00\n0f 8c 5a ff ff ff\n4d 85 ff\n74 0c\n48 8b 3d 9e 41 20 00\ne8 69 f2 ff ff\n45 85 e4\n74 11\n48 8b 3d ad 51 20 00\nbe 01 00 00 00\ne8 83 f2 ff ff\n48 8b 3d 9c 51 20 00\ne8 97 f5 ff ff\n31 ff\ne8 70 f5 ff ff\ne8 cb 01 00 00\nbf 4f 3f 40 00\ne8 91 f2 ff ff\n31 ff\ne8 5a f5 ff ff\ne8 b5 01 00 00\n48 8b 1d 1e 41 20 00\n48 89 ef\ne8 66 f4 ff ff\n48 89 c1\nbf 2c 40 40 00\n31 c0\n48 89 de\n48 89 ca\ne8 51 02 00 00\ne8 8c 01 00 00\n48 8b 05 45 51 20 00\n8b b8 e0 00 00 00\nbe 01 00 00 00\neb 0f\n48 8b 05 31 51 20 00\n8b b8 e0 00 00 00\n31 f6\nba 01 00 00 00\ne8 cf 04 00 00\n4c 8b 24 24\n4d 85 ff\n0f 85 4d ff ff ff\ne9 54 ff ff ff\n48 8b 35 b6 40 20 00\n48 8b 15 df 40 20 00\nbf 5c 40 40 00\n31 c0\ne8 f3 01 00 00\n48 8b 35 9c 40 20 00\nbf e8 3f 40 00\n31 c0\ne8 e0 01 00 00\ne8 1b 01 00 00\n48 8b 35 84 40 20 00\nbf 06 40 40 00\n31 c0\ne8 c8 01 00 00\n'
p383
S'.text:00000000004017e0\n.text:00000000004017e1\n.text:00000000004017e3\n.text:00000000004017e5\n.text:00000000004017e7\n.text:00000000004017e9\n.text:00000000004017ea\n.text:00000000004017f1\n.text:00000000004017f4\n.text:00000000004017f6\n.text:00000000004017f9\n.text:0000000000401800\n.text:000000000040180a\n.text:0000000000401814\n.text:000000000040181f\n.text:0000000000401824\n.text:0000000000401829\n.text:000000000040182e\n.text:0000000000401836\n.text:0000000000401838\n.text:000000000040183d\n.text:0000000000401842\n.text:0000000000401845\n.text:000000000040184a\n.text:000000000040184d\n.text:0000000000401852\n.text:0000000000401855\n.text:0000000000401857\n.text:000000000040185a\n.text:000000000040185f\n.text:0000000000401862\n.text:0000000000401867\n.text:0000000000401869\n.text:000000000040186b\n.text:0000000000401876\n.text:0000000000401879\n.text:000000000040187e\n.text:0000000000401880\n.text:0000000000401883\n.text:0000000000401885\n.text:000000000040188a\n.text:0000000000401890\n.text:0000000000401893\n.text:0000000000401895\n.text:0000000000401899\n.text:000000000040189e\n.text:00000000004018a2\n.text:00000000004018a5\n.text:00000000004018a7\n.text:00000000004018ac\n.text:00000000004018b1\n.text:00000000004018b6\n.text:00000000004018b9\n.text:00000000004018be\n.text:00000000004018c0\n.text:00000000004018c2\n.text:00000000004018c7\n.text:00000000004018cc\n.text:00000000004018cf\n.text:00000000004018d4\n.text:00000000004018d6\n.text:00000000004018d8\n.text:00000000004018dd\n.text:00000000004018e1\n.text:00000000004018e6\n.text:00000000004018ec\n.text:00000000004018f1\n.text:00000000004018f6\n.text:00000000004018fb\n.text:00000000004018fe\n.text:0000000000401903\n.text:0000000000401905\n.text:0000000000401907\n.text:000000000040190e\n.text:0000000000401913\n.text:0000000000401917\n.text:0000000000401919\n.text:000000000040191b\n.text:000000000040191d\n.text:000000000040191f\n.text:0000000000401921\n.text:0000000000401923\n.text:0000000000401928\n.text:000000000040192d\n.text:0000000000401932\n.text:0000000000401937\n.text:000000000040193a\n.text:000000000040193f\n.text:0000000000401944\n.text:000000000040194b\n.text:0000000000401951\n.text:0000000000401957\n.text:000000000040195a\n.text:0000000000401960\n.text:0000000000401968\n.text:000000000040196d\n.text:0000000000401972\n.text:0000000000401975\n.text:000000000040197a\n.text:000000000040197c\n.text:0000000000401982\n.text:0000000000401989\n.text:000000000040198f\n.text:0000000000401995\n.text:0000000000401998\n.text:000000000040199e\n.text:00000000004019aa\n.text:00000000004019b0\n.text:00000000004019b3\n.text:00000000004019b7\n.text:00000000004019ba\n.text:00000000004019bc\n.text:00000000004019c2\n.text:00000000004019c4\n.text:00000000004019c6\n.text:00000000004019cb\n.text:00000000004019ce\n.text:00000000004019d0\n.text:00000000004019d5\n.text:00000000004019da\n.text:00000000004019dd\n.text:00000000004019e2\n.text:00000000004019e4\n.text:00000000004019ea\n.text:00000000004019ef\n.text:00000000004019f4\n.text:00000000004019f7\n.text:00000000004019fc\n.text:00000000004019fe\n.text:0000000000401a04\n.text:0000000000401a09\n.text:0000000000401a0e\n.text:0000000000401a11\n.text:0000000000401a16\n.text:0000000000401a18\n.text:0000000000401a1a\n.text:0000000000401a1d\n.text:0000000000401a20\n.text:0000000000401a26\n.text:0000000000401a29\n.text:0000000000401a2d\n.text:0000000000401a32\n.text:0000000000401a40\n.text:0000000000401a47\n.text:0000000000401a4c\n.text:0000000000401a57\n.text:0000000000401a5c\n.text:0000000000401a61\n.text:0000000000401a66\n.text:0000000000401a69\n.text:0000000000401a6e\n.text:0000000000401a70\n.text:0000000000401a72\n.text:0000000000401a75\n.text:0000000000401a78\n.text:0000000000401a7e\n.text:0000000000401a83\n.text:0000000000401a88\n.text:0000000000401a8d\n.text:0000000000401a90\n.text:0000000000401a95\n.text:0000000000401a97\n.text:0000000000401a99\n.text:0000000000401a9c\n.text:0000000000401a9f\n.text:0000000000401aa5\n.text:0000000000401aa8\n.text:0000000000401aac\n.text:0000000000401ab3\n.text:0000000000401ab8\n.text:0000000000401abc\n.text:0000000000401abe\n.text:0000000000401ac2\n.text:0000000000401ac4\n.text:0000000000401ac9\n.text:0000000000401ace\n.text:0000000000401ad1\n.text:0000000000401ad6\n.text:0000000000401ad8\n.text:0000000000401ada\n.text:0000000000401ae5\n.text:0000000000401aea\n.text:0000000000401aef\n.text:0000000000401af4\n.text:0000000000401af7\n.text:0000000000401afc\n.text:0000000000401afe\n.text:0000000000401b00\n.text:0000000000401b0a\n.text:0000000000401b0f\n.text:0000000000401b16\n.text:0000000000401b1b\n.text:0000000000401b20\n.text:0000000000401b25\n.text:0000000000401b28\n.text:0000000000401b2d\n.text:0000000000401b2f\n.text:0000000000401b31\n.text:0000000000401b3b\n.text:0000000000401b40\n.text:0000000000401b45\n.text:0000000000401b4a\n.text:0000000000401b4d\n.text:0000000000401b52\n.text:0000000000401b54\n.text:0000000000401b56\n.text:0000000000401b60\n.text:0000000000401b65\n.text:0000000000401b6a\n.text:0000000000401b6f\n.text:0000000000401b72\n.text:0000000000401b77\n.text:0000000000401b79\n.text:0000000000401b7b\n.text:0000000000401b85\n.text:0000000000401b8a\n.text:0000000000401b8f\n.text:0000000000401b94\n.text:0000000000401b97\n.text:0000000000401b9c\n.text:0000000000401b9e\n.text:0000000000401ba0\n.text:0000000000401baa\n.text:0000000000401baf\n.text:0000000000401bb4\n.text:0000000000401bb9\n.text:0000000000401bbc\n.text:0000000000401bc1\n.text:0000000000401bc3\n.text:0000000000401bc5\n.text:0000000000401bcf\n.text:0000000000401bd4\n.text:0000000000401bd9\n.text:0000000000401bde\n.text:0000000000401be1\n.text:0000000000401be6\n.text:0000000000401be8\n.text:0000000000401bea\n.text:0000000000401bed\n.text:0000000000401bf0\n.text:0000000000401bf6\n.text:0000000000401c00\n.text:0000000000401c03\n.text:0000000000401c07\n.text:0000000000401c0e\n.text:0000000000401c13\n.text:0000000000401c18\n.text:0000000000401c1d\n.text:0000000000401c20\n.text:0000000000401c25\n.text:0000000000401c27\n.text:0000000000401c29\n.text:0000000000401c2c\n.text:0000000000401c2f\n.text:0000000000401c35\n.text:0000000000401c38\n.text:0000000000401c3c\n.text:0000000000401c43\n.text:0000000000401c45\n.text:0000000000401c4a\n.text:0000000000401c4f\n.text:0000000000401c52\n.text:0000000000401c57\n.text:0000000000401c59\n.text:0000000000401c5b\n.text:0000000000401c5e\n.text:0000000000401c60\n.text:0000000000401c65\n.text:0000000000401c6a\n.text:0000000000401c6d\n.text:0000000000401c72\n.text:0000000000401c74\n.text:0000000000401c76\n.text:0000000000401c7c\n.text:0000000000401c7e\n.text:0000000000401c83\n.text:0000000000401c88\n.text:0000000000401c8b\n.text:0000000000401c90\n.text:0000000000401c92\n.text:0000000000401c98\n.text:0000000000401c9e\n.text:0000000000401ca0\n.text:0000000000401ca3\n.text:0000000000401ca6\n.text:0000000000401cac\n.text:0000000000401cb0\n.text:0000000000401cb5\n.text:0000000000401cb7\n.text:0000000000401cb9\n.text:0000000000401cbe\n.text:0000000000401cc1\n.text:0000000000401cc3\n.text:0000000000401cc5\n.text:0000000000401cca\n.text:0000000000401ccf\n.text:0000000000401cd2\n.text:0000000000401cd7\n.text:0000000000401cde\n.text:0000000000401ce1\n.text:0000000000401ce7\n.text:0000000000401cea\n.text:0000000000401cec\n.text:0000000000401cf2\n.text:0000000000401cf5\n.text:0000000000401cf9\n.text:0000000000401d01\n.text:0000000000401d07\n.text:0000000000401d0d\n.text:0000000000401d10\n.text:0000000000401d13\n.text:0000000000401d19\n.text:0000000000401d1d\n.text:0000000000401d1f\n.text:0000000000401d22\n.text:0000000000401d28\n.text:0000000000401d2f\n.text:0000000000401d36\n.text:0000000000401d3d\n.text:0000000000401d42\n.text:0000000000401d47\n.text:0000000000401d52\n.text:0000000000401d57\n.text:0000000000401d59\n.text:0000000000401d5e\n.text:0000000000401d61\n.text:0000000000401d64\n.text:0000000000401d6a\n.text:0000000000401d71\n.text:0000000000401d76\n.text:0000000000401d7b\n.text:0000000000401d80\n.text:0000000000401d83\n.text:0000000000401d85\n.text:0000000000401d8a\n.text:0000000000401d90\n.text:0000000000401d93\n.text:0000000000401d96\n.text:0000000000401d9b\n.text:0000000000401da2\n.text:0000000000401da7\n.text:0000000000401daa\n.text:0000000000401daf\n.text:0000000000401db2\n.text:0000000000401db4\n.text:0000000000401db7\n.text:0000000000401dbc\n.text:0000000000401dbe\n.text:0000000000401dc1\n.text:0000000000401dc8\n.text:0000000000401dcb\n.text:0000000000401dd0\n.text:0000000000401dd6\n.text:0000000000401ddc\n.text:0000000000401de2\n.text:0000000000401de4\n.text:0000000000401de7\n.text:0000000000401dea\n.text:0000000000401ded\n.text:0000000000401def\n.text:0000000000401df2\n.text:0000000000401df6\n.text:0000000000401dfd\n.text:0000000000401e02\n.text:0000000000401e07\n.text:0000000000401e0b\n.text:0000000000401e11\n.text:0000000000401e15\n.text:0000000000401e1b\n.text:0000000000401e1f\n.text:0000000000401e25\n.text:0000000000401e2b\n.text:0000000000401e2e\n.text:0000000000401e31\n.text:0000000000401e37\n.text:0000000000401e3e\n.text:0000000000401e45\n.text:0000000000401e49\n.text:0000000000401e4e\n.text:0000000000401e51\n.text:0000000000401e58\n.text:0000000000401e5f\n.text:0000000000401e61\n.text:0000000000401e63\n.text:0000000000401e66\n.text:0000000000401e70\n.text:0000000000401e75\n.text:0000000000401e77\n.text:0000000000401e79\n.text:0000000000401e7e\n.text:0000000000401e85\n.text:0000000000401e8a\n.text:0000000000401e8d\n.text:0000000000401e94\n.text:0000000000401e9b\n.text:0000000000401e9f\n.text:0000000000401ea2\n.text:0000000000401ea4\n.text:0000000000401ea9\n.text:0000000000401eaf\n.text:0000000000401eb2\n.text:0000000000401eb5\n.text:0000000000401eb9\n.text:0000000000401ebb\n.text:0000000000401ec2\n.text:0000000000401ec7\n.text:0000000000401eca\n.text:0000000000401ecf\n.text:0000000000401ed6\n.text:0000000000401edc\n.text:0000000000401edf\n.text:0000000000401ee4\n.text:0000000000401ee7\n.text:0000000000401ee9\n.text:0000000000401eee\n.text:0000000000401ef3\n.text:0000000000401ef5\n.text:0000000000401ef7\n.text:0000000000401efc\n.text:0000000000401f01\n.text:0000000000401f06\n.text:0000000000401f08\n.text:0000000000401f0b\n.text:0000000000401f11\n.text:0000000000401f17\n.text:0000000000401f19\n.text:0000000000401f1f\n.text:0000000000401f22\n.text:0000000000401f28\n.text:0000000000401f2d\n.text:0000000000401f32\n.text:0000000000401f34\n.text:0000000000401f36\n.text:0000000000401f3b\n.text:0000000000401f40\n.text:0000000000401f45\n.text:0000000000401f4a\n.text:0000000000401f4f\n.text:0000000000401f51\n.text:0000000000401f53\n.text:0000000000401f58\n.text:0000000000401f5f\n.text:0000000000401f66\n.text:0000000000401f6c\n.text:0000000000401f6e\n.text:0000000000401f70\n.text:0000000000401f74\n.text:0000000000401f7b\n.text:0000000000401f7e\n.text:0000000000401f80\n.text:0000000000401f85\n.text:0000000000401f87\n.text:0000000000401f89\n.text:0000000000401f8e\n.text:0000000000401f93\n.text:0000000000401f95\n.text:0000000000401f97\n.text:0000000000401f9c\n.text:0000000000401fa1\n.text:0000000000401fa3\n.text:0000000000401fa8\n.text:0000000000401fad\n.text:0000000000401fb2\n.text:0000000000401fb5\n.text:0000000000401fbc\n.text:0000000000401fc2\n.text:0000000000401fc4\n.text:0000000000401fc9\n.text:0000000000401fce\n.text:0000000000401fd0\n.text:0000000000401fd5\n.text:0000000000401fd7\n.text:0000000000401fdc\n.text:0000000000401fdf\n.text:0000000000401fe6\n.text:0000000000401fed\n.text:0000000000401ff1\n.text:0000000000401ff4\n.text:0000000000401ffa\n.text:0000000000401fff\n.text:0000000000402001\n.text:0000000000402003\n.text:0000000000402008\n.text:000000000040200d\n.text:0000000000402014\n.text:000000000040201b\n.text:000000000040201f\n.text:0000000000402025\n.text:0000000000402027\n.text:0000000000402030\n.text:0000000000402033\n.text:0000000000402035\n.text:000000000040203c\n.text:000000000040203e\n.text:0000000000402043\n.text:0000000000402045\n.text:0000000000402047\n.text:000000000040204c\n.text:0000000000402051\n.text:0000000000402060\n.text:0000000000402065\n.text:000000000040206a\n.text:000000000040206c\n.text:0000000000402071\n.text:0000000000402073\n.text:0000000000402078\n.text:000000000040207a\n.text:000000000040207c\n.text:0000000000402081\n.text:0000000000402086\n.text:000000000040208b\n.text:000000000040208d\n.text:0000000000402092\n.text:0000000000402099\n.text:000000000040209b\n.text:00000000004020a0\n.text:00000000004020a5\n.text:00000000004020a8\n.text:00000000004020af\n.text:00000000004020b5\n.text:00000000004020b7\n.text:00000000004020bc\n.text:00000000004020c1\n.text:00000000004020c3\n.text:00000000004020ca\n.text:00000000004020d0\n.text:00000000004020d6\n.text:00000000004020d9\n.text:00000000004020db\n.text:00000000004020e2\n.text:00000000004020e7\n.text:00000000004020ea\n.text:00000000004020ec\n.text:00000000004020f3\n.text:00000000004020f8\n.text:00000000004020fd\n.text:0000000000402104\n.text:0000000000402109\n.text:000000000040210b\n.text:0000000000402110\n.text:0000000000402115\n.text:000000000040211a\n.text:000000000040211f\n.text:0000000000402121\n.text:0000000000402126\n.text:000000000040212b\n.text:0000000000402132\n.text:0000000000402135\n.text:000000000040213a\n.text:000000000040213d\n.text:0000000000402142\n.text:0000000000402144\n.text:0000000000402147\n.text:000000000040214a\n.text:000000000040214f\n.text:0000000000402154\n.text:000000000040215b\n.text:0000000000402161\n.text:0000000000402166\n.text:0000000000402168\n.text:000000000040216f\n.text:0000000000402175\n.text:0000000000402177\n.text:000000000040217c\n.text:0000000000402181\n.text:0000000000402185\n.text:0000000000402188\n.text:000000000040218e\n.text:0000000000402193\n.text:000000000040219a\n.text:00000000004021a1\n.text:00000000004021a6\n.text:00000000004021a8\n.text:00000000004021ad\n.text:00000000004021b4\n.text:00000000004021b9\n.text:00000000004021bb\n.text:00000000004021c0\n.text:00000000004021c5\n.text:00000000004021cc\n.text:00000000004021d1\n.text:00000000004021d3\n'
p384
tp385
sS'realloc'
p386
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p387
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_00606170)();\u000a  return pvVar1;\u000a}\u000a\u000a
p388
S'JMP qword ptr [0x00606170]\n'
p389
S'ff 25 9a 4b 20 00\n'
p390
S'.plt:00000000004015d0\n'
p391
tp392
sS'DoDisplayDefines'
p393
(S'\n__stdcall DoDisplayDefines()\n'
p394
V\u000avoid DoDisplayDefines(long lParm1,undefined8 uParm2)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  char *__src;\u000a  long lVar3;\u000a  char server [64];\u000a  char client [64];\u000a  uint local_9c;\u000a  char local_98 [63];\u000a  undefined local_59;\u000a  char local_58 [72];\u000a  \u000a  XmuGetHostname(local_58,0x40);\u000a  __src = (char *)XDisplayName(uParm2);\u000a  strncpy(local_98,__src,0x40);\u000a  local_59 = 0;\u000a  __src = strrchr(local_98,0x3a);\u000a  local_9c = 0;\u000a  if (__src != (char *)0x0) {\u000a    if (((local_98 < __src) && (__src[-1] == ':')) &&\u000a       ((__src + -1 == local_98 || (__src[-2] != ':')))) {\u000a      __src[-1] = ':';\u000a    }\u000a    *__src = 0;\u000a    sscanf(__src + 1,"%d",&local_9c);\u000a  }\u000a  if (local_98[0] != 0) {\u000a    iVar1 = strcmp(local_98,"unix");\u000a    if (iVar1 != 0) {\u000a      iVar1 = strcmp(local_98,"localhost");\u000a      if (iVar1 != 0) goto LAB_0040252e;\u000a    }\u000a  }\u000a  strcpy(local_98,local_58);\u000aLAB_0040252e:\u000a  AddDefHostname(0x4045a7,local_98);\u000a  AddDefHostname("SERVERHOST",local_98);\u000a  AddDefTok("SRVR_",local_98);\u000a  AddNum("DISPLAY_NUM",(ulong)local_9c);\u000a  AddDefHostname("CLIENTHOST",local_58);\u000a  AddDefTok("CLNT_",local_58);\u000a  AddNum("VERSION",(ulong)*(uint *)(lParm1 + 0x18));\u000a  AddNum("REVISION",(ulong)*(uint *)(lParm1 + 0x1c));\u000a  AddDefQ((String *)"VENDOR");\u000a  AddDefTok("VNDR_",*(undefined8 *)(lParm1 + 0x20));\u000a  AddNum("RELEASE",(ulong)*(uint *)(lParm1 + 0x74));\u000a  AddNum("NUM_SCREENS",(ulong)*(uint *)(lParm1 + 0xe4));\u000a  lVar3 = XListExtensions(lParm1,&local_9c);\u000a  while( true ) {\u000a    uVar2 = local_9c - 1;\u000a    if ((int)local_9c < 1) break;\u000a    local_9c = uVar2;\u000a    AddDefTok(&DAT_00404601,*(undefined8 *)(lVar3 + (long)(int)uVar2 * 8));\u000a  }\u000a  local_9c = uVar2;\u000a  XFreeExtensionList(lVar3);\u000a  return;\u000a}\u000a\u000a
p395
S'PUSH R14\nPUSH RBX\nSUB RSP,0x98\nMOV RBX,RSI\nMOV R14,RDI\nLEA RDI,[RSP + 0x50]\nMOV ESI,0x40\nCALL 0x004014e0\nMOV RDI,RBX\nCALL 0x004015a0\nLEA RBX,[RSP + 0x10]\nMOV EDX,0x40\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x00401360\nMOV byte ptr [RSP + 0x4f],0x0\nMOV ESI,0x3a\nMOV RDI,RBX\nCALL 0x00401460\nMOV dword ptr [RSP + 0xc],0x0\nTEST RAX,RAX\nJZ 0x004024f2\nCMP RAX,RBX\nJBE 0x004024d8\nCMP byte ptr [RAX + -0x1],0x3a\nJNZ 0x004024d8\nLEA RCX,[RAX + -0x1]\nCMP RCX,RBX\nJZ 0x004024d5\nCMP byte ptr [RAX + -0x2],0x3a\nJZ 0x004024d8\nMOV byte ptr [RCX],0x3a\nMOV RDI,RAX\nINC RDI\nMOV byte ptr [RAX],0x0\nLEA RDX,[RSP + 0xc]\nMOV ESI,0x40461a\nXOR EAX,EAX\nCALL 0x00401590\nCMP byte ptr [RSP + 0x10],0x0\nJZ 0x0040251f\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x404592\nCALL 0x004014d0\nTEST EAX,EAX\nJZ 0x0040251f\nLEA RDI,[RSP + 0x10]\nMOV ESI,0x404597\nCALL 0x004014d0\nTEST EAX,EAX\nJNZ 0x0040252e\nLEA RDI,[RSP + 0x10]\nLEA RSI,[RSP + 0x50]\nCALL 0x004013a0\nLEA RBX,[RSP + 0x10]\nMOV EDI,0x4045a7\nMOV RSI,RBX\nCALL 0x00402e50\nMOV EDI,0x4045a1\nMOV RSI,RBX\nCALL 0x00402e50\nMOV EDI,0x4045ac\nMOV RSI,RBX\nCALL 0x00402ee0\nMOV ESI,dword ptr [RSP + 0xc]\nMOV EDI,0x4045b2\nCALL 0x00402f20\nLEA RBX,[RSP + 0x50]\nMOV EDI,0x4045be\nMOV RSI,RBX\nCALL 0x00402e50\nMOV EDI,0x4045c9\nMOV RSI,RBX\nCALL 0x00402ee0\nMOV ESI,dword ptr [R14 + 0x18]\nMOV EDI,0x4045cf\nCALL 0x00402f20\nMOV ESI,dword ptr [R14 + 0x1c]\nMOV EDI,0x4045d7\nCALL 0x00402f20\nMOV RSI,qword ptr [R14 + 0x20]\nMOV EDI,0x4045e0\nCALL 0x00402f60\nMOV RSI,qword ptr [R14 + 0x20]\nMOV EDI,0x4045e7\nCALL 0x00402ee0\nMOV ESI,dword ptr [R14 + 0x74]\nMOV EDI,0x4045ed\nCALL 0x00402f20\nMOV ESI,dword ptr [0xe4 + R14]\nMOV EDI,0x4045f5\nCALL 0x00402f20\nLEA RSI,[RSP + 0xc]\nMOV RDI,R14\nCALL 0x00401390\nMOV RBX,RAX\nJMP 0x00402600\nCDQE\nMOV RSI,qword ptr [RBX + RAX*0x8]\nMOV EDI,0x404601\nCALL 0x00402ee0\nMOV ECX,dword ptr [RSP + 0xc]\nLEA EAX,[RCX + -0x1]\nMOV dword ptr [RSP + 0xc],EAX\nTEST ECX,ECX\nJG 0x004025f0\nMOV RDI,RBX\nCALL 0x00401530\nADD RSP,0x98\nPOP RBX\nPOP R14\nRET\n'
p396
S'41 56\n53\n48 81 ec 98 00 00 00\n48 89 f3\n49 89 fe\n48 8d 7c 24 50\nbe 40 00 00 00\ne8 61 f0 ff ff\n48 89 df\ne8 19 f1 ff ff\n48 8d 5c 24 10\nba 40 00 00 00\n48 89 df\n48 89 c6\ne8 c4 ee ff ff\nc6 44 24 4f 00\nbe 3a 00 00 00\n48 89 df\ne8 b2 ef ff ff\nc7 44 24 0c 00 00 00 00\n48 85 c0\n74 37\n48 39 d8\n76 18\n80 78 ff 3a\n75 12\n48 8d 48 ff\n48 39 d9\n74 06\n80 78 fe 3a\n74 03\nc6 01 3a\n48 89 c7\n48 ff c7\nc6 00 00\n48 8d 54 24 0c\nbe 1a 46 40 00\n31 c0\ne8 9e f0 ff ff\n80 7c 24 10 00\n74 26\n48 8d 7c 24 10\nbe 92 45 40 00\ne8 c8 ef ff ff\n85 c0\n74 13\n48 8d 7c 24 10\nbe 97 45 40 00\ne8 b5 ef ff ff\n85 c0\n75 0f\n48 8d 7c 24 10\n48 8d 74 24 50\ne8 72 ee ff ff\n48 8d 5c 24 10\nbf a7 45 40 00\n48 89 de\ne8 10 09 00 00\nbf a1 45 40 00\n48 89 de\ne8 03 09 00 00\nbf ac 45 40 00\n48 89 de\ne8 86 09 00 00\n8b 74 24 0c\nbf b2 45 40 00\ne8 b8 09 00 00\n48 8d 5c 24 50\nbf be 45 40 00\n48 89 de\ne8 d6 08 00 00\nbf c9 45 40 00\n48 89 de\ne8 59 09 00 00\n41 8b 76 18\nbf cf 45 40 00\ne8 8b 09 00 00\n41 8b 76 1c\nbf d7 45 40 00\ne8 7d 09 00 00\n49 8b 76 20\nbf e0 45 40 00\ne8 af 09 00 00\n49 8b 76 20\nbf e7 45 40 00\ne8 21 09 00 00\n41 8b 76 74\nbf ed 45 40 00\ne8 53 09 00 00\n41 8b b6 e4 00 00 00\nbf f5 45 40 00\ne8 42 09 00 00\n48 8d 74 24 0c\n4c 89 f7\ne8 a5 ed ff ff\n48 89 c3\neb 10\n48 98\n48 8b 34 c3\nbf 01 46 40 00\ne8 e0 08 00 00\n8b 4c 24 0c\n8d 41 ff\n89 44 24 0c\n85 c9\n7f e1\n48 89 df\ne8 19 ef ff ff\n48 81 c4 98 00 00 00\n5b\n41 5e\nc3\n'
p397
S'.text:0000000000402460\n.text:0000000000402462\n.text:0000000000402463\n.text:000000000040246a\n.text:000000000040246d\n.text:0000000000402470\n.text:0000000000402475\n.text:000000000040247a\n.text:000000000040247f\n.text:0000000000402482\n.text:0000000000402487\n.text:000000000040248c\n.text:0000000000402491\n.text:0000000000402494\n.text:0000000000402497\n.text:000000000040249c\n.text:00000000004024a1\n.text:00000000004024a6\n.text:00000000004024a9\n.text:00000000004024ae\n.text:00000000004024b6\n.text:00000000004024b9\n.text:00000000004024bb\n.text:00000000004024be\n.text:00000000004024c0\n.text:00000000004024c4\n.text:00000000004024c6\n.text:00000000004024ca\n.text:00000000004024cd\n.text:00000000004024cf\n.text:00000000004024d3\n.text:00000000004024d5\n.text:00000000004024d8\n.text:00000000004024db\n.text:00000000004024de\n.text:00000000004024e1\n.text:00000000004024e6\n.text:00000000004024eb\n.text:00000000004024ed\n.text:00000000004024f2\n.text:00000000004024f7\n.text:00000000004024f9\n.text:00000000004024fe\n.text:0000000000402503\n.text:0000000000402508\n.text:000000000040250a\n.text:000000000040250c\n.text:0000000000402511\n.text:0000000000402516\n.text:000000000040251b\n.text:000000000040251d\n.text:000000000040251f\n.text:0000000000402524\n.text:0000000000402529\n.text:000000000040252e\n.text:0000000000402533\n.text:0000000000402538\n.text:000000000040253b\n.text:0000000000402540\n.text:0000000000402545\n.text:0000000000402548\n.text:000000000040254d\n.text:0000000000402552\n.text:0000000000402555\n.text:000000000040255a\n.text:000000000040255e\n.text:0000000000402563\n.text:0000000000402568\n.text:000000000040256d\n.text:0000000000402572\n.text:0000000000402575\n.text:000000000040257a\n.text:000000000040257f\n.text:0000000000402582\n.text:0000000000402587\n.text:000000000040258b\n.text:0000000000402590\n.text:0000000000402595\n.text:0000000000402599\n.text:000000000040259e\n.text:00000000004025a3\n.text:00000000004025a7\n.text:00000000004025ac\n.text:00000000004025b1\n.text:00000000004025b5\n.text:00000000004025ba\n.text:00000000004025bf\n.text:00000000004025c3\n.text:00000000004025c8\n.text:00000000004025cd\n.text:00000000004025d4\n.text:00000000004025d9\n.text:00000000004025de\n.text:00000000004025e3\n.text:00000000004025e6\n.text:00000000004025eb\n.text:00000000004025ee\n.text:00000000004025f0\n.text:00000000004025f2\n.text:00000000004025f6\n.text:00000000004025fb\n.text:0000000000402600\n.text:0000000000402604\n.text:0000000000402607\n.text:000000000040260b\n.text:000000000040260d\n.text:000000000040260f\n.text:0000000000402612\n.text:0000000000402617\n.text:000000000040261e\n.text:000000000040261f\n.text:0000000000402621\n'
p398
tp399
sS'fgets'
p400
(S'\n__stdcall fgets(char * __s, int __n, FILE * __stream)\n'
p401
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * fgets(char *__s,int __n,FILE *__stream)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_fgets_006060e8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p402
S'JMP qword ptr [0x006060e8]\n'
p403
S'ff 25 22 4c 20 00\n'
p404
S'.plt:00000000004014c0\n'
p405
tp406
sS'isabbreviation'
p407
(S'\n__stdcall isabbreviation(char * arg, char * s)\n'
p408
V\u000aint isabbreviation(char *arg,char *s)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  size_t sVar3;\u000a  size_t sVar4;\u000a  int in_EDX;\u000a  \u000a  iVar1 = strcmp(arg,s);\u000a  if (iVar1 == 0) {\u000a    uVar2 = 1;\u000a  }\u000a  else {\u000a    sVar3 = strlen(arg);\u000a    sVar4 = strlen(s);\u000a    uVar2 = 0;\u000a    iVar1 = (int)sVar4;\u000a    if ((iVar1 < (int)sVar3) && (in_EDX <= iVar1)) {\u000a      iVar1 = strncmp(arg,s,(long)iVar1);\u000a      uVar2 = (uint)(iVar1 == 0);\u000a    }\u000a  }\u000a  return (int)uVar2;\u000a}\u000a\u000a
p409
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R15D,EDX\nMOV R14,RSI\nMOV RBX,RDI\nCALL 0x004014d0\nTEST EAX,EAX\nJZ 0x004022c3\nMOV RDI,RBX\nCALL 0x004013f0\nMOV RBP,RAX\nMOV RDI,R14\nCALL 0x004013f0\nMOV RCX,RAX\nXOR EAX,EAX\nCMP ECX,EBP\nJGE 0x004022c8\nCMP ECX,R15D\nJL 0x004022c8\nMOVSXD RDX,ECX\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00401370\nMOV ECX,EAX\nXOR EAX,EAX\nTEST ECX,ECX\nSETZ AL\nJMP 0x004022c8\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p410
S'55\n41 57\n41 56\n53\n50\n41 89 d7\n49 89 f6\n48 89 fb\ne8 4b f2 ff ff\n85 c0\n74 3a\n48 89 df\ne8 5f f1 ff ff\n48 89 c5\n4c 89 f7\ne8 54 f1 ff ff\n48 89 c1\n31 c0\n39 e9\n7d 23\n44 39 f9\n7c 1e\n48 63 d1\n48 89 df\n4c 89 f6\ne8 b8 f0 ff ff\n89 c1\n31 c0\n85 c9\n0f 94 c0\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p411
S'.text:0000000000402270\n.text:0000000000402271\n.text:0000000000402273\n.text:0000000000402275\n.text:0000000000402276\n.text:0000000000402277\n.text:000000000040227a\n.text:000000000040227d\n.text:0000000000402280\n.text:0000000000402285\n.text:0000000000402287\n.text:0000000000402289\n.text:000000000040228c\n.text:0000000000402291\n.text:0000000000402294\n.text:0000000000402297\n.text:000000000040229c\n.text:000000000040229f\n.text:00000000004022a1\n.text:00000000004022a3\n.text:00000000004022a5\n.text:00000000004022a8\n.text:00000000004022aa\n.text:00000000004022ad\n.text:00000000004022b0\n.text:00000000004022b3\n.text:00000000004022b8\n.text:00000000004022ba\n.text:00000000004022bc\n.text:00000000004022be\n.text:00000000004022c1\n.text:00000000004022c3\n.text:00000000004022c8\n.text:00000000004022cc\n.text:00000000004022cd\n.text:00000000004022cf\n.text:00000000004022d1\n.text:00000000004022d2\n'
p412
tp413
sS'XGetVisualInfo'
p414
(S'\n__stdcall XGetVisualInfo()\n'
p415
V\u000avoid XGetVisualInfo(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetVisualInfo_006060c8)();\u000a  return;\u000a}\u000a\u000a
p416
S'JMP qword ptr [0x006060c8]\n'
p417
S'ff 25 42 4c 20 00\n'
p418
S'.plt:0000000000401480\n'
p419
tp420
sS'strlen'
p421
(S'\n__stdcall strlen(char * __s)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_00606080)();\u000a  return sVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x00606080]\n'
p424
S'ff 25 8a 4c 20 00\n'
p425
S'.plt:00000000004013f0\n'
p426
tp427
sS'XFreeExtensionList'
p428
(S'\n__stdcall XFreeExtensionList()\n'
p429
V\u000avoid XFreeExtensionList(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeExtensionList_00606120)();\u000a  return;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x00606120]\n'
p431
S'ff 25 ea 4b 20 00\n'
p432
S'.plt:0000000000401530\n'
p433
tp434
sS'EditFile'
p435
(S'\n__stdcall EditFile()\n'
p436
V\u000avoid EditFile(FILE *pFParm1,FILE *pFParm2)\u000a\u000a{\u000a  char *pcVar1;\u000a  Entry *pEVar2;\u000a  long lVar3;\u000a  long lVar4;\u000a  char buff [8192];\u000a  Buffer local_2038;\u000a  char local_2028 [8200];\u000a  \u000a  InitBuffer(&local_2038);\u000a  if (pFParm1 != (FILE *)0x0) {\u000a    do {\u000a      local_2038.used = 0;\u000a      do {\u000a        local_2028[0] = 0;\u000a        pcVar1 = fgets(local_2028,0x2000,pFParm1);\u000a        if (pcVar1 == (char *)0x0) goto LAB_0040390f;\u000a        strlen(local_2028);\u000a        AppendToBuffer(&local_2038,local_2028);\u000a      } while ((local_2038.buff[(long)local_2038.used + -1] != '\u005cn') ||\u000a              ((local_2038.used != 1 && (local_2038.buff[(long)local_2038.used + -2] == '\u005c\u005c'))));\u000a      pEVar2 = FindEntry();\u000a      if (pEVar2 == (Entry *)0x0) {\u000a        fwrite(local_2038.buff,1,(long)local_2038.used,pFParm2);\u000a      }\u000a      else {\u000a        fprintf(pFParm2,"%s:\u005ct%s\u005cn",pEVar2->tag,pEVar2->value);\u000a      }\u000a    } while (pFParm1 != (FILE *)0x0);\u000a  }\u000aLAB_0040390f:\u000a  if (0 < newDB.used) {\u000a    lVar3 = 0;\u000a    lVar4 = 0;\u000a    do {\u000a      if (*(int *)((long)&(newDB.entry)->usable + lVar3) != 0) {\u000a        fprintf(pFParm2,"%s:\u005ct%s\u005cn",*(undefined8 *)((long)&(newDB.entry)->tag + lVar3),\u000a                *(undefined8 *)((long)&(newDB.entry)->value + lVar3));\u000a      }\u000a      lVar4 = lVar4 + 1;\u000a      lVar3 = lVar3 + 0x18;\u000a    } while (lVar4 < (long)newDB.used);\u000a  }\u000a  return;\u000a}\u000a\u000a
p437
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x2018\nMOV R14,RSI\nMOV R15,RDI\nMOV RDI,RSP\nCALL 0x00402630\nTEST R15,R15\nJZ 0x0040390f\nLEA RBX,[RSP + 0x10]\nMOV R12,RSP\nMOV dword ptr [RSP + 0xc],0x0\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV byte ptr [RSP + 0x10],0x0\nMOV ESI,0x2000\nMOV RDI,RBX\nMOV RDX,R15\nCALL 0x004014c0\nTEST RAX,RAX\nJZ 0x0040390f\nMOV RDI,RBX\nCALL 0x004013f0\nMOV RDI,R12\nMOV RSI,RBX\nMOV EDX,EAX\nCALL 0x00403c80\nMOV RAX,qword ptr [RSP]\nMOVSXD RCX,dword ptr [RSP + 0xc]\nCMP byte ptr [RAX + RCX*0x1 + -0x1],0xa\nJNZ 0x00403880\nCMP ECX,0x1\nJZ 0x004038cb\nCMP byte ptr [RAX + RCX*0x1 + -0x2],0x5c\nJZ 0x00403880\nMOV RDI,R12\nCALL 0x00403cf0\nTEST RAX,RAX\nJZ 0x004038f0\nMOV RDX,qword ptr [RAX]\nMOV RCX,qword ptr [RAX + 0x8]\nMOV ESI,0x40485d\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401500\nJMP 0x00403906\nMOV RDI,qword ptr [RSP]\nMOVSXD RDX,dword ptr [RSP + 0xc]\nMOV ESI,0x1\nMOV RCX,R14\nCALL 0x00401690\nTEST R15,R15\nJNZ 0x0040386d\nCMP dword ptr [0x006072f4],0x0\nJLE 0x00403959\nXOR EBX,EBX\nXOR R15D,R15D\nNOP dword ptr [RAX]\nMOV RAX,qword ptr [0x006072e8]\nCMP dword ptr [RAX + RBX*0x1 + 0x14],0x0\nJZ 0x00403946\nMOV RDX,qword ptr [RAX + RBX*0x1]\nMOV RCX,qword ptr [RAX + RBX*0x1 + 0x8]\nMOV ESI,0x40485d\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401500\nINC R15\nMOVSXD RAX,dword ptr [0x006072f4]\nADD RBX,0x18\nCMP R15,RAX\nJL 0x00403920\nADD RSP,0x2018\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p438
S'41 57\n41 56\n41 54\n53\n48 81 ec 18 20 00 00\n49 89 f6\n49 89 ff\n48 89 e7\ne8 d4 ed ff ff\n4d 85 ff\n0f 84 aa 00 00 00\n48 8d 5c 24 10\n49 89 e4\nc7 44 24 0c 00 00 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\nc6 44 24 10 00\nbe 00 20 00 00\n48 89 df\n4c 89 fa\ne8 2b dc ff ff\n48 85 c0\n74 75\n48 89 df\ne8 4e db ff ff\n4c 89 e7\n48 89 de\n89 c2\ne8 d1 03 00 00\n48 8b 04 24\n48 63 4c 24 0c\n80 7c 08 ff 0a\n75 c1\n83 f9 01\n74 07\n80 7c 08 fe 5c\n74 b5\n4c 89 e7\ne8 1d 04 00 00\n48 85 c0\n74 18\n48 8b 10\n48 8b 48 08\nbe 5d 48 40 00\n31 c0\n4c 89 f7\ne8 12 dc ff ff\neb 16\n48 8b 3c 24\n48 63 54 24 0c\nbe 01 00 00 00\n4c 89 f1\ne8 8a dd ff ff\n4d 85 ff\n0f 85 5e ff ff ff\n83 3d de 39 20 00 00\n7e 41\n31 db\n45 31 ff\n0f 1f 00\n48 8b 05 c1 39 20 00\n83 7c 18 14 00\n74 18\n48 8b 14 18\n48 8b 4c 18 08\nbe 5d 48 40 00\n31 c0\n4c 89 f7\ne8 ba db ff ff\n49 ff c7\n48 63 05 a4 39 20 00\n48 83 c3 18\n49 39 c7\n7c c7\n48 81 c4 18 20 00 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p439
S'.text:0000000000403840\n.text:0000000000403842\n.text:0000000000403844\n.text:0000000000403846\n.text:0000000000403847\n.text:000000000040384e\n.text:0000000000403851\n.text:0000000000403854\n.text:0000000000403857\n.text:000000000040385c\n.text:000000000040385f\n.text:0000000000403865\n.text:000000000040386a\n.text:000000000040386d\n.text:0000000000403875\n.text:0000000000403880\n.text:0000000000403885\n.text:000000000040388a\n.text:000000000040388d\n.text:0000000000403890\n.text:0000000000403895\n.text:0000000000403898\n.text:000000000040389a\n.text:000000000040389d\n.text:00000000004038a2\n.text:00000000004038a5\n.text:00000000004038a8\n.text:00000000004038aa\n.text:00000000004038af\n.text:00000000004038b3\n.text:00000000004038b8\n.text:00000000004038bd\n.text:00000000004038bf\n.text:00000000004038c2\n.text:00000000004038c4\n.text:00000000004038c9\n.text:00000000004038cb\n.text:00000000004038ce\n.text:00000000004038d3\n.text:00000000004038d6\n.text:00000000004038d8\n.text:00000000004038db\n.text:00000000004038df\n.text:00000000004038e4\n.text:00000000004038e6\n.text:00000000004038e9\n.text:00000000004038ee\n.text:00000000004038f0\n.text:00000000004038f4\n.text:00000000004038f9\n.text:00000000004038fe\n.text:0000000000403901\n.text:0000000000403906\n.text:0000000000403909\n.text:000000000040390f\n.text:0000000000403916\n.text:0000000000403918\n.text:000000000040391a\n.text:000000000040391d\n.text:0000000000403920\n.text:0000000000403927\n.text:000000000040392c\n.text:000000000040392e\n.text:0000000000403932\n.text:0000000000403937\n.text:000000000040393c\n.text:000000000040393e\n.text:0000000000403941\n.text:0000000000403946\n.text:0000000000403949\n.text:0000000000403950\n.text:0000000000403954\n.text:0000000000403957\n.text:0000000000403959\n.text:0000000000403960\n.text:0000000000403961\n.text:0000000000403963\n.text:0000000000403965\n.text:0000000000403967\n'
p440
tp441
sS'__errno_location'
p442
(S'\n__stdcall __errno_location()\n'
p443
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00606028)();\u000a  return piVar1;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x00606028]\n'
p445
S'ff 25 e2 4c 20 00\n'
p446
S'.plt:0000000000401340\n'
p447
tp448
sS'strcmp'
p449
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p450
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_006060f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x006060f0]\n'
p452
S'ff 25 1a 4c 20 00\n'
p453
S'.plt:00000000004014d0\n'
p454
tp455
sS'XListExtensions'
p456
(S'\n__stdcall XListExtensions()\n'
p457
V\u000avoid XListExtensions(void)\u000a\u000a{\u000a  (*(code *)PTR_XListExtensions_00606050)();\u000a  return;\u000a}\u000a\u000a
p458
S'JMP qword ptr [0x00606050]\n'
p459
S'ff 25 ba 4c 20 00\n'
p460
S'.plt:0000000000401390\n'
p461
tp462
sS'DoScreenDefines'
p463
(S'\n__stdcall DoScreenDefines()\n'
p464
V\u000avoid DoScreenDefines(long lParm1,uint uParm2)\u000a\u000a{\u000a  uint uVar1;\u000a  long lVar2;\u000a  ulong uVar3;\u000a  int *piVar4;\u000a  long lVar5;\u000a  long lVar6;\u000a  long lVar7;\u000a  int *piVar8;\u000a  int nv;\u000a  char name [50];\u000a  XVisualInfo vinfo;\u000a  int local_ac;\u000a  char local_a8 [56];\u000a  undefined local_70 [16];\u000a  uint local_60;\u000a  \u000a  lVar6 = *(long *)(lParm1 + 0xe8);\u000a  lVar5 = (long)(int)uParm2 * 0x80;\u000a  lVar7 = *(long *)(lVar6 + 0x40 + lVar5);\u000a  local_60 = uParm2;\u000a  lVar2 = XGetVisualInfo(lParm1,2,local_70,&local_ac);\u000a  AddNum("SCREEN_NUM",(ulong)uParm2);\u000a  AddNum("WIDTH",(ulong)*(uint *)(lVar6 + 0x18 + lVar5));\u000a  AddNum("HEIGHT",(ulong)*(uint *)(lVar6 + 0x1c + lVar5));\u000a  uVar1 = Resolution();\u000a  AddNum("X_RESOLUTION",(ulong)uVar1);\u000a  uVar1 = Resolution();\u000a  AddNum("Y_RESOLUTION",(ulong)uVar1);\u000a  AddNum("PLANES",(ulong)*(uint *)(*(long *)(lParm1 + 0xe8) + 0x38 + lVar5));\u000a  AddNum("BITS_PER_RGB",(ulong)*(uint *)(lVar7 + 0x30));\u000a  if ((ulong)(long)*(int *)(lVar7 + 0x10) < 6) {\u000a    AddDefQ((String *)"CLASS");\u000a    snprintf(local_a8,0x32,"CLASS_%s",ClassNames[(long)*(int *)(lVar7 + 0x10)]);\u000a    AddNum(local_a8,(ulong)*(uint *)(lVar7 + 8));\u000a  }\u000a  else {\u000a    fprintf(stderr,"%s: unknown visual type %d for default visual id 0x%lx\u005cn",ProgramName,\u000a            (long)*(int *)(lVar7 + 0x10),*(undefined8 *)(lVar7 + 8));\u000a  }\u000a  if (*(int *)(lVar7 + 0x10) - 2U < 4) {\u000a    AddSimpleDef();\u000a  }\u000a  if (0 < local_ac) {\u000a    piVar8 = (int *)(lVar2 + -0x28);\u000a    lVar7 = 1;\u000a    lVar6 = 0;\u000a    do {\u000a      if (0 < lVar6) {\u000a        piVar4 = piVar8;\u000a        lVar5 = lVar7;\u000a        do {\u000a          if ((*piVar4 == *(int *)(lVar2 + 0x18 + lVar6 * 0x40)) &&\u000a             (piVar4[-1] == *(int *)(lVar2 + 0x14 + lVar6 * 0x40))) goto LAB_00403708;\u000a          lVar5 = lVar5 + -1;\u000a          piVar4 = piVar4 + -0x10;\u000a        } while (1 < lVar5);\u000a      }\u000a      lVar5 = lVar6 * 0x40;\u000a      uVar3 = SEXT48(*(int *)(lVar2 + 0x18 + lVar5));\u000a      if (uVar3 < 6) {\u000a        snprintf(local_a8,0x32,"CLASS_%s_%d",ClassNames[uVar3],\u000a                 (ulong)*(uint *)(lVar2 + 0x14 + lVar5));\u000a        AddNum(local_a8,(ulong)*(uint *)(lVar2 + 8 + lVar5));\u000a      }\u000a      else {\u000a        fprintf(stderr,"%s: unknown visual type %d for visual id 0x%lx\u005cn",ProgramName,uVar3,\u000a                *(undefined8 *)(lVar2 + 8 + lVar5));\u000a      }\u000aLAB_00403708:\u000a      lVar6 = lVar6 + 1;\u000a      lVar7 = lVar7 + 1;\u000a      piVar8 = piVar8 + 0x10;\u000a    } while (lVar6 < (long)local_ac);\u000a  }\u000a  XFree(lVar2);\u000a  return;\u000a}\u000a\u000a
p465
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x88\nMOV R14,RDI\nMOV RBP,qword ptr [0xe8 + R14]\nMOVSXD R15,ESI\nMOV RBX,R15\nSHL RBX,0x7\nMOV R12,qword ptr [RBP + RBX*0x1 + 0x40]\nMOV dword ptr [RSP + 0x58],R15D\nLEA RDX,[RSP + 0x48]\nLEA RCX,[RSP + 0xc]\nMOV ESI,0x2\nCALL 0x00401480\nMOV R13,RAX\nMOV EDI,0x40473b\nMOV ESI,R15D\nCALL 0x00402f20\nMOV ESI,dword ptr [RBP + RBX*0x1 + 0x18]\nMOV EDI,0x404746\nCALL 0x00402f20\nMOV ESI,dword ptr [RBP + RBX*0x1 + 0x1c]\nMOV EDI,0x40474c\nCALL 0x00402f20\nMOV EDI,dword ptr [RBP + RBX*0x1 + 0x18]\nMOV ESI,dword ptr [RBP + RBX*0x1 + 0x20]\nCALL 0x00403c00\nMOV EDI,0x404753\nMOV ESI,EAX\nCALL 0x00402f20\nMOV EDI,dword ptr [RBP + RBX*0x1 + 0x1c]\nMOV ESI,dword ptr [RBP + RBX*0x1 + 0x24]\nCALL 0x00403c00\nMOV EDI,0x404760\nMOV ESI,EAX\nCALL 0x00402f20\nMOV RAX,qword ptr [0xe8 + R14]\nMOV ESI,dword ptr [RAX + RBX*0x1 + 0x38]\nMOV EDI,0x40476d\nCALL 0x00402f20\nMOV ESI,dword ptr [R12 + 0x30]\nMOV EDI,0x404774\nCALL 0x00402f20\nMOVSXD RCX,dword ptr [R12 + 0x10]\nCMP RCX,0x5\nJA 0x0040373a\nMOV RSI,qword ptr [0x403f10 + RCX*0x8]\nMOV EDI,0x404781\nCALL 0x00402f60\nMOVSXD RAX,dword ptr [R12 + 0x10]\nMOV RCX,qword ptr [0x403f10 + RAX*0x8]\nLEA R14,[RSP + 0x10]\nMOV ESI,0x32\nMOV EDX,0x404787\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401450\nMOV ESI,dword ptr [R12 + 0x8]\nMOV RDI,R14\nCALL 0x00402f20\nMOV EAX,dword ptr [R12 + 0x10]\nADD EAX,-0x2\nCMP EAX,0x3\nJA 0x00403640\nMOV EDI,0x4047c8\nCALL 0x004030c0\nCMP dword ptr [RSP + 0xc],0x0\nJLE 0x00403720\nLEA R15,[R13 + -0x28]\nMOV R12D,0x1\nLEA R14,[RSP + 0x10]\nXOR EBX,EBX\nJMP 0x00403690\nMOV RDI,qword ptr [0x00606240]\nMOV RDX,qword ptr [0x00606250]\nMOV R8,qword ptr [R13 + RBP*0x1 + 0x8]\nMOV ESI,0x4047da\nXOR EAX,EAX\nCALL 0x00401500\nJMP 0x00403708\nTEST RBX,RBX\nJLE 0x004036c8\nMOV RCX,RBX\nSHL RCX,0x6\nMOV EAX,dword ptr [R13 + RCX*0x1 + 0x18]\nLEA RCX,[R13 + RCX*0x1 + 0x14]\nMOV RDX,R15\nMOV RSI,R12\nNOP dword ptr [RAX]\nCMP dword ptr [RDX],EAX\nJNZ 0x004036bb\nMOV EDI,dword ptr [RDX + -0x4]\nCMP EDI,dword ptr [RCX]\nJZ 0x00403708\nDEC RSI\nADD RDX,-0x40\nCMP RSI,0x1\nJG 0x004036b0\nMOV RBP,RBX\nSHL RBP,0x6\nMOVSXD RCX,dword ptr [R13 + RBP*0x1 + 0x18]\nCMP RCX,0x5\nJA 0x0040365e\nMOV RCX,qword ptr [0x403f10 + RCX*0x8]\nMOV R8D,dword ptr [R13 + RBP*0x1 + 0x14]\nMOV ESI,0x32\nMOV EDX,0x4047ce\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401450\nMOV ESI,dword ptr [R13 + RBP*0x1 + 0x8]\nMOV RDI,R14\nCALL 0x00402f20\nINC RBX\nMOVSXD RAX,dword ptr [RSP + 0xc]\nINC R12\nADD R15,0x40\nCMP RBX,RAX\nJL 0x00403690\nMOV RDI,R13\nCALL 0x00401420\nADD RSP,0x88\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [0x00606240]\nMOV RDX,qword ptr [0x00606250]\nMOV R8,qword ptr [R12 + 0x8]\nMOV ESI,0x404790\nXOR EAX,EAX\nCALL 0x00401500\nJMP 0x00403629\n'
p466
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 88 00 00 00\n49 89 fe\n49 8b ae e8 00 00 00\n4c 63 fe\n4c 89 fb\n48 c1 e3 07\n4c 8b 64 1d 40\n44 89 7c 24 58\n48 8d 54 24 48\n48 8d 4c 24 0c\nbe 02 00 00 00\ne8 2d df ff ff\n49 89 c5\nbf 3b 47 40 00\n44 89 fe\ne8 bd f9 ff ff\n8b 74 1d 18\nbf 46 47 40 00\ne8 af f9 ff ff\n8b 74 1d 1c\nbf 4c 47 40 00\ne8 a1 f9 ff ff\n8b 7c 1d 18\n8b 74 1d 20\ne8 74 06 00 00\nbf 53 47 40 00\n89 c6\ne8 88 f9 ff ff\n8b 7c 1d 1c\n8b 74 1d 24\ne8 5b 06 00 00\nbf 60 47 40 00\n89 c6\ne8 6f f9 ff ff\n49 8b 86 e8 00 00 00\n8b 74 18 38\nbf 6d 47 40 00\ne8 5a f9 ff ff\n41 8b 74 24 30\nbf 74 47 40 00\ne8 4b f9 ff ff\n49 63 4c 24 10\n48 83 f9 05\n0f 87 56 01 00 00\n48 8b 34 cd 10 3f 40 00\nbf 81 47 40 00\ne8 6a f9 ff ff\n49 63 44 24 10\n48 8b 0c c5 10 3f 40 00\n4c 8d 74 24 10\nbe 32 00 00 00\nba 87 47 40 00\n31 c0\n4c 89 f7\ne8 34 de ff ff\n41 8b 74 24 08\n4c 89 f7\ne8 f7 f8 ff ff\n41 8b 44 24 10\n83 c0 fe\n83 f8 03\n77 0a\nbf c8 47 40 00\ne8 80 fa ff ff\n83 7c 24 0c 00\n0f 8e d5 00 00 00\n4d 8d 7d d8\n41 bc 01 00 00 00\n4c 8d 74 24 10\n31 db\neb 32\n48 8b 3d db 2b 20 00\n48 8b 15 e4 2b 20 00\n4d 8b 44 2d 08\nbe da 47 40 00\n31 c0\ne8 83 de ff ff\ne9 86 00 00 00\n48 85 db\n7e 33\n48 89 d9\n48 c1 e1 06\n41 8b 44 0d 18\n49 8d 4c 0d 14\n4c 89 fa\n4c 89 e6\n0f 1f 40 00\n39 02\n75 07\n8b 7a fc\n3b 39\n74 4d\n48 ff ce\n48 83 c2 c0\n48 83 fe 01\n7f e8\n48 89 dd\n48 c1 e5 06\n49 63 4c 2d 18\n48 83 f9 05\n77 84\n48 8b 0c cd 10 3f 40 00\n45 8b 44 2d 14\nbe 32 00 00 00\nba ce 47 40 00\n31 c0\n4c 89 f7\ne8 55 dd ff ff\n41 8b 74 2d 08\n4c 89 f7\ne8 18 f8 ff ff\n48 ff c3\n48 63 44 24 0c\n49 ff c4\n49 83 c7 40\n48 39 c3\n0f 8c 70 ff ff ff\n4c 89 ef\ne8 f8 dc ff ff\n48 81 c4 88 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 3d ff 2a 20 00\n48 8b 15 08 2b 20 00\n4d 8b 44 24 08\nbe 90 47 40 00\n31 c0\ne8 a7 dd ff ff\ne9 cb fe ff ff\n'
p467
S'.text:0000000000403510\n.text:0000000000403511\n.text:0000000000403513\n.text:0000000000403515\n.text:0000000000403517\n.text:0000000000403519\n.text:000000000040351a\n.text:0000000000403521\n.text:0000000000403524\n.text:000000000040352b\n.text:000000000040352e\n.text:0000000000403531\n.text:0000000000403535\n.text:000000000040353a\n.text:000000000040353f\n.text:0000000000403544\n.text:0000000000403549\n.text:000000000040354e\n.text:0000000000403553\n.text:0000000000403556\n.text:000000000040355b\n.text:000000000040355e\n.text:0000000000403563\n.text:0000000000403567\n.text:000000000040356c\n.text:0000000000403571\n.text:0000000000403575\n.text:000000000040357a\n.text:000000000040357f\n.text:0000000000403583\n.text:0000000000403587\n.text:000000000040358c\n.text:0000000000403591\n.text:0000000000403593\n.text:0000000000403598\n.text:000000000040359c\n.text:00000000004035a0\n.text:00000000004035a5\n.text:00000000004035aa\n.text:00000000004035ac\n.text:00000000004035b1\n.text:00000000004035b8\n.text:00000000004035bc\n.text:00000000004035c1\n.text:00000000004035c6\n.text:00000000004035cb\n.text:00000000004035d0\n.text:00000000004035d5\n.text:00000000004035da\n.text:00000000004035de\n.text:00000000004035e4\n.text:00000000004035ec\n.text:00000000004035f1\n.text:00000000004035f6\n.text:00000000004035fb\n.text:0000000000403603\n.text:0000000000403608\n.text:000000000040360d\n.text:0000000000403612\n.text:0000000000403614\n.text:0000000000403617\n.text:000000000040361c\n.text:0000000000403621\n.text:0000000000403624\n.text:0000000000403629\n.text:000000000040362e\n.text:0000000000403631\n.text:0000000000403634\n.text:0000000000403636\n.text:000000000040363b\n.text:0000000000403640\n.text:0000000000403645\n.text:000000000040364b\n.text:000000000040364f\n.text:0000000000403655\n.text:000000000040365a\n.text:000000000040365c\n.text:000000000040365e\n.text:0000000000403665\n.text:000000000040366c\n.text:0000000000403671\n.text:0000000000403676\n.text:0000000000403678\n.text:000000000040367d\n.text:0000000000403690\n.text:0000000000403693\n.text:0000000000403695\n.text:0000000000403698\n.text:000000000040369c\n.text:00000000004036a1\n.text:00000000004036a6\n.text:00000000004036a9\n.text:00000000004036ac\n.text:00000000004036b0\n.text:00000000004036b2\n.text:00000000004036b4\n.text:00000000004036b7\n.text:00000000004036b9\n.text:00000000004036bb\n.text:00000000004036be\n.text:00000000004036c2\n.text:00000000004036c6\n.text:00000000004036c8\n.text:00000000004036cb\n.text:00000000004036cf\n.text:00000000004036d4\n.text:00000000004036d8\n.text:00000000004036da\n.text:00000000004036e2\n.text:00000000004036e7\n.text:00000000004036ec\n.text:00000000004036f1\n.text:00000000004036f3\n.text:00000000004036f6\n.text:00000000004036fb\n.text:0000000000403700\n.text:0000000000403703\n.text:0000000000403708\n.text:000000000040370b\n.text:0000000000403710\n.text:0000000000403713\n.text:0000000000403717\n.text:000000000040371a\n.text:0000000000403720\n.text:0000000000403723\n.text:0000000000403728\n.text:000000000040372f\n.text:0000000000403730\n.text:0000000000403732\n.text:0000000000403734\n.text:0000000000403736\n.text:0000000000403738\n.text:0000000000403739\n.text:000000000040373a\n.text:0000000000403741\n.text:0000000000403748\n.text:000000000040374d\n.text:0000000000403752\n.text:0000000000403754\n.text:0000000000403759\n'
p468
tp469
sS'XMaxRequestSize'
p470
(S'\n__stdcall XMaxRequestSize()\n'
p471
V\u000avoid XMaxRequestSize(void)\u000a\u000a{\u000a  (*(code *)PTR_XMaxRequestSize_006061f0)();\u000a  return;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x006061f0]\n'
p473
S'ff 25 1a 4b 20 00\n'
p474
S'.plt:00000000004016d0\n'
p475
tp476
sS'AddEntry'
p477
(S'\n__stdcall AddEntry(Entries * e, Entry * entry)\n'
p478
V\u000avoid AddEntry(Entries *e,Entry *entry)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  undefined4 uVar2;\u000a  undefined4 uVar3;\u000a  char *__s2;\u000a  int iVar4;\u000a  Entry *pEVar5;\u000a  long lVar6;\u000a  long lVar7;\u000a  \u000a  iVar4 = e->used;\u000a  if (0 < iVar4) {\u000a    pEVar5 = e->entry;\u000a    __s2 = entry->tag;\u000a    lVar6 = 0;\u000a    lVar7 = 0;\u000a    do {\u000a      iVar4 = strcmp(*(char **)((long)&pEVar5->tag + lVar6),__s2);\u000a      if (iVar4 == 0) {\u000a        if ((*(int *)((long)&pEVar5->lineno + lVar6) != 0) && ((quiet & 1) == 0)) {\u000a          fprintf(stderr,"%s:  \u005c"%s\u005c" on line %d overrides entry on line %d\u005cn",ProgramName,__s2,\u000a                  (ulong)(uint)entry->lineno);\u000a        }\u000a        free(*(void **)((long)&e->entry->tag + lVar6));\u000a        free(*(void **)((long)&e->entry->value + lVar6));\u000a        entry->usable = 1;\u000a        pEVar5 = e->entry;\u000a        *(undefined8 *)((long)&pEVar5->lineno + lVar6) = *(undefined8 *)&entry->lineno;\u000a        uVar1 = *(undefined4 *)((long)&entry->tag + 4);\u000a        uVar2 = *(undefined4 *)&entry->value;\u000a        uVar3 = *(undefined4 *)((long)&entry->value + 4);\u000a        *(undefined4 *)((long)&pEVar5->tag + lVar6) = *(undefined4 *)&entry->tag;\u000a        *(undefined4 *)((long)&pEVar5->tag + lVar6 + 4) = uVar1;\u000a        *(undefined4 *)((long)&pEVar5->value + lVar6) = uVar2;\u000a        *(undefined4 *)((long)&pEVar5->value + lVar6 + 4) = uVar3;\u000a        return;\u000a      }\u000a      lVar7 = lVar7 + 1;\u000a      iVar4 = e->used;\u000a      lVar6 = lVar6 + 0x18;\u000a    } while (lVar7 < (long)iVar4);\u000a  }\u000a  if (iVar4 == e->room) {\u000a    pEVar5 = (Entry *)realloc(e->entry,(long)e->room * 0x30);\u000a    e->entry = pEVar5;\u000a    e->room = e->room << 1;\u000a  }\u000a  entry->usable = 1;\u000a  pEVar5 = e->entry;\u000a  lVar6 = (long)e->used;\u000a  e->used = e->used + 1;\u000a  *(undefined8 *)&pEVar5[lVar6].lineno = *(undefined8 *)&entry->lineno;\u000a  uVar1 = *(undefined4 *)((long)&entry->tag + 4);\u000a  uVar2 = *(undefined4 *)&entry->value;\u000a  uVar3 = *(undefined4 *)((long)&entry->value + 4);\u000a  *(undefined4 *)&pEVar5[lVar6].tag = *(undefined4 *)&entry->tag;\u000a  *(undefined4 *)((long)&pEVar5[lVar6].tag + 4) = uVar1;\u000a  *(undefined4 *)&pEVar5[lVar6].value = uVar2;\u000a  *(undefined4 *)((long)&pEVar5[lVar6].value + 4) = uVar3;\u000a  return;\u000a}\u000a\u000a
p479
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV R15,RDI\nMOV EAX,dword ptr [R15 + 0xc]\nTEST EAX,EAX\nJLE 0x00403441\nMOV R13,qword ptr [R15]\nMOV R12,qword ptr [R14]\nXOR EBX,EBX\nXOR EBP,EBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,qword ptr [R13 + RBX*0x1]\nMOV RSI,R12\nCALL 0x004014d0\nTEST EAX,EAX\nJZ 0x0040348d\nINC RBP\nMOVSXD RAX,dword ptr [R15 + 0xc]\nADD RBX,0x18\nCMP RBP,RAX\nJL 0x00403420\nMOVSXD RCX,dword ptr [R15 + 0x8]\nCMP EAX,ECX\nJNZ 0x00403460\nMOV RDI,qword ptr [R15]\nSHL RCX,0x4\nLEA RSI,[RCX + RCX*0x2]\nCALL 0x004015d0\nMOV qword ptr [R15],RAX\nSHL dword ptr [R15 + 0x8],1\nMOV dword ptr [R14 + 0x14],0x1\nMOV RAX,qword ptr [R15]\nMOVSXD RCX,dword ptr [R15 + 0xc]\nLEA EDX,[RCX + 0x1]\nMOV dword ptr [R15 + 0xc],EDX\nLEA RCX,[RCX + RCX*0x2]\nMOV RDX,qword ptr [R14 + 0x10]\nMOV qword ptr [RAX + RCX*0x8 + 0x10],RDX\nMOVUPS XMM0,xmmword ptr [R14]\nMOVUPS xmmword ptr [RAX + RCX*0x8],XMM0\nJMP 0x004034d5\nMOV R9D,dword ptr [R13 + RBX*0x1 + 0x10]\nTEST R9D,R9D\nJZ 0x004034a0\nTEST byte ptr [0x00606298],0x1\nJZ 0x004034e4\nMOV RAX,qword ptr [R15]\nMOV RDI,qword ptr [RAX + RBX*0x1]\nCALL 0x00401320\nMOV RAX,qword ptr [R15]\nMOV RDI,qword ptr [RAX + RBX*0x1 + 0x8]\nCALL 0x00401320\nMOV dword ptr [R14 + 0x14],0x1\nMOV RAX,qword ptr [R15]\nMOV RCX,qword ptr [R14 + 0x10]\nMOV qword ptr [RAX + RBX*0x1 + 0x10],RCX\nMOVUPS XMM0,xmmword ptr [R14]\nMOVUPS xmmword ptr [RAX + RBX*0x1],XMM0\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [0x00606240]\nMOV RDX,qword ptr [0x00606250]\nMOV R8D,dword ptr [R14 + 0x10]\nMOV ESI,0x404654\nXOR EAX,EAX\nMOV RCX,R12\nCALL 0x00401500\nJMP 0x004034a0\n'
p480
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f6\n49 89 ff\n41 8b 47 0c\n85 c0\n7e 38\n4d 8b 2f\n4d 8b 26\n31 db\n31 ed\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 8b 7c 1d 00\n4c 89 e6\ne8 a3 e0 ff ff\n85 c0\n74 5c\n48 ff c5\n49 63 47 0c\n48 83 c3 18\n48 39 c5\n7c df\n49 63 4f 08\n39 c8\n75 17\n49 8b 3f\n48 c1 e1 04\n48 8d 34 49\ne8 77 e1 ff ff\n49 89 07\n41 d1 67 08\n41 c7 46 14 01 00 00 00\n49 8b 07\n49 63 4f 0c\n8d 51 01\n41 89 57 0c\n48 8d 0c 49\n49 8b 56 10\n48 89 54 c8 10\n41 0f 10 06\n0f 11 04 c8\neb 48\n45 8b 4c 1d 10\n45 85 c9\n74 09\nf6 05 fa 2d 20 00 01\n74 44\n49 8b 07\n48 8b 3c 18\ne8 74 de ff ff\n49 8b 07\n48 8b 7c 18 08\ne8 67 de ff ff\n41 c7 46 14 01 00 00 00\n49 8b 07\n49 8b 4e 10\n48 89 4c 18 10\n41 0f 10 06\n0f 11 04 18\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 3d 55 2d 20 00\n48 8b 15 5e 2d 20 00\n45 8b 46 10\nbe 54 46 40 00\n31 c0\n4c 89 e1\ne8 fb df ff ff\neb 99\n'
p481
S'.text:00000000004033f0\n.text:00000000004033f1\n.text:00000000004033f3\n.text:00000000004033f5\n.text:00000000004033f7\n.text:00000000004033f9\n.text:00000000004033fa\n.text:00000000004033fb\n.text:00000000004033fe\n.text:0000000000403401\n.text:0000000000403405\n.text:0000000000403407\n.text:0000000000403409\n.text:000000000040340c\n.text:000000000040340f\n.text:0000000000403411\n.text:0000000000403413\n.text:0000000000403420\n.text:0000000000403425\n.text:0000000000403428\n.text:000000000040342d\n.text:000000000040342f\n.text:0000000000403431\n.text:0000000000403434\n.text:0000000000403438\n.text:000000000040343c\n.text:000000000040343f\n.text:0000000000403441\n.text:0000000000403445\n.text:0000000000403447\n.text:0000000000403449\n.text:000000000040344c\n.text:0000000000403450\n.text:0000000000403454\n.text:0000000000403459\n.text:000000000040345c\n.text:0000000000403460\n.text:0000000000403468\n.text:000000000040346b\n.text:000000000040346f\n.text:0000000000403472\n.text:0000000000403476\n.text:000000000040347a\n.text:000000000040347e\n.text:0000000000403483\n.text:0000000000403487\n.text:000000000040348b\n.text:000000000040348d\n.text:0000000000403492\n.text:0000000000403495\n.text:0000000000403497\n.text:000000000040349e\n.text:00000000004034a0\n.text:00000000004034a3\n.text:00000000004034a7\n.text:00000000004034ac\n.text:00000000004034af\n.text:00000000004034b4\n.text:00000000004034b9\n.text:00000000004034c1\n.text:00000000004034c4\n.text:00000000004034c8\n.text:00000000004034cd\n.text:00000000004034d1\n.text:00000000004034d5\n.text:00000000004034d9\n.text:00000000004034da\n.text:00000000004034dc\n.text:00000000004034de\n.text:00000000004034e0\n.text:00000000004034e2\n.text:00000000004034e3\n.text:00000000004034e4\n.text:00000000004034eb\n.text:00000000004034f2\n.text:00000000004034f6\n.text:00000000004034fb\n.text:00000000004034fd\n.text:0000000000403500\n.text:0000000000403505\n'
p482
tp483
sS'ShuffleEntries'
p484
(S'\n__stdcall ShuffleEntries(Entries * db)\n'
p485
V\u000avoid ShuffleEntries(Entries *db)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  Entry *pEVar3;\u000a  char *__s1;\u000a  char *__s1_00;\u000a  int iVar4;\u000a  int *__ptr;\u000a  ulong uVar5;\u000a  Entries *pEVar6;\u000a  int *piVar7;\u000a  ulong uVar8;\u000a  uint in_ESI;\u000a  Entry *pEVar9;\u000a  int iVar10;\u000a  uint uVar11;\u000a  long lVar12;\u000a  \u000a  __ptr = (int *)malloc((long)(int)in_ESI * 4);\u000a  uVar1 = db->used;\u000a  if (0 < (int)uVar1) {\u000a    pEVar3 = db->entry;\u000a    uVar8 = 0;\u000a    do {\u000a      uVar11 = 1;\u000a      if (1 < (int)in_ESI) {\u000a        __s1 = pEVar3[uVar8].tag;\u000a        __s1_00 = pEVar3[uVar8].value;\u000a        lVar12 = 1;\u000a        do {\u000a          uVar11 = (uint)lVar12;\u000a          iVar2 = db[lVar12].used;\u000a          if ((long)iVar2 < 1) {\u000a            if (iVar2 == 0) break;\u000a          }\u000a          else {\u000a            pEVar9 = db[lVar12].entry;\u000a            _iVar10 = 0;\u000a            do {\u000a              iVar10 = (int)_iVar10;\u000a              if (((pEVar9->usable != 0) && (iVar4 = strcmp(__s1,pEVar9->tag), iVar4 == 0)) &&\u000a                 (iVar4 = strcmp(__s1_00,pEVar9->value), iVar4 == 0)) {\u000a                __ptr[lVar12] = iVar10;\u000a                break;\u000a              }\u000a              _iVar10 = _iVar10 + 1;\u000a              iVar10 = (int)_iVar10;\u000a              pEVar9 = pEVar9 + 1;\u000a            } while (_iVar10 < (long)iVar2);\u000a            if (iVar10 == iVar2) break;\u000a          }\u000a          lVar12 = lVar12 + 1;\u000a          uVar11 = (uint)lVar12;\u000a        } while (lVar12 < (long)(int)in_ESI);\u000a      }\u000a      if (uVar11 == in_ESI) {\u000a        AddEntry(&newDB,pEVar3 + uVar8);\u000a        *__ptr = (int)uVar8;\u000a        uVar5 = (ulong)in_ESI;\u000a        pEVar6 = db;\u000a        piVar7 = __ptr;\u000a        if (0 < (int)in_ESI) {\u000a          do {\u000a            pEVar6->entry[(long)*piVar7].usable = 0;\u000a            uVar5 = uVar5 - 1;\u000a            pEVar6 = pEVar6 + 1;\u000a            piVar7 = piVar7 + 1;\u000a          } while (uVar5 != 0);\u000a        }\u000a      }\u000a      uVar8 = uVar8 + 1;\u000a    } while (uVar8 != (ulong)uVar1);\u000a  }\u000a  free(__ptr);\u000a  return;\u000a}\u000a\u000a
p486
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x48\nMOV EBX,ESI\nMOV R12,RDI\nMOVSXD RAX,EBX\nMOV qword ptr [RSP + 0x40],RAX\nLEA RDI,[RAX*0x4]\nCALL 0x00401550\nMOV qword ptr [RSP + 0x8],RAX\nMOV R13D,dword ptr [R12 + 0xc]\nTEST R13D,R13D\nJLE 0x00402d6b\nMOV R14,qword ptr [R12]\nMOV EAX,EBX\nMOV qword ptr [RSP + 0x38],RAX\nXOR EBP,EBP\nMOV dword ptr [RSP + 0x4],EBX\nMOV qword ptr [RSP + 0x30],R12\nMOV qword ptr [RSP + 0x18],R13\nMOV qword ptr [RSP + 0x10],R14\nNOP dword ptr [RAX + RAX*0x1]\nLEA RAX,[RBP + RBP*0x2]\nMOV qword ptr [RSP + 0x28],RAX\nMOV R15D,0x1\nCMP EBX,0x2\nJL 0x00402d09\nMOV qword ptr [RSP + 0x20],RBP\nMOV RAX,qword ptr [RSP + 0x28]\nMOV RBP,qword ptr [R14 + RAX*0x8]\nMOV RBX,qword ptr [R14 + RAX*0x8 + 0x8]\nMOV R15D,0x1\nJMP 0x00402c70\nMOV RAX,qword ptr [RSP + 0x8]\nMOV dword ptr [RAX + R15*0x4],R14D\nJMP 0x00402cc5\nMOV RAX,R15\nSHL RAX,0x4\nMOVSXD R13,dword ptr [R12 + RAX*0x1 + 0xc]\nTEST R13,R13\nJLE 0x00402ce0\nMOV R12,qword ptr [R12 + RAX*0x1]\nXOR R14D,R14D\nNOP dword ptr [RAX + RAX*0x1]\nCMP dword ptr [R12 + 0x14],0x0\nJZ 0x00402cb9\nMOV RSI,qword ptr [R12]\nMOV RDI,RBP\nCALL 0x004014d0\nTEST EAX,EAX\nJNZ 0x00402cb9\nMOV RSI,qword ptr [R12 + 0x8]\nMOV RDI,RBX\nCALL 0x004014d0\nTEST EAX,EAX\nJZ 0x00402c64\nINC R14\nADD R12,0x18\nCMP R14,R13\nJL 0x00402c90\nMOV R12,qword ptr [RSP + 0x30]\nCMP R14D,R13D\nJNZ 0x00402ce8\nJMP 0x00402cf6\nXOR R14D,R14D\nCMP R14D,R13D\nJZ 0x00402cf6\nINC R15\nCMP R15,qword ptr [RSP + 0x40]\nJL 0x00402c70\nMOV EBX,dword ptr [RSP + 0x4]\nMOV R13,qword ptr [RSP + 0x18]\nMOV R14,qword ptr [RSP + 0x10]\nMOV RBP,qword ptr [RSP + 0x20]\nCMP R15D,EBX\nJNZ 0x00402d5f\nMOV RAX,qword ptr [RSP + 0x28]\nLEA RSI,[R14 + RAX*0x8]\nMOV EDI,0x6072e8\nCALL 0x004033f0\nMOV RAX,qword ptr [RSP + 0x8]\nMOV dword ptr [RAX],EBP\nTEST EBX,EBX\nJLE 0x00402d5f\nMOV RAX,qword ptr [RSP + 0x38]\nMOV RCX,R12\nMOV RDX,qword ptr [RSP + 0x8]\nNOP dword ptr [RAX]\nMOV RSI,qword ptr [RCX]\nMOVSXD RDI,dword ptr [RDX]\nLEA RDI,[RDI + RDI*0x2]\nMOV dword ptr [RSI + RDI*0x8 + 0x14],0x0\nADD RDX,0x4\nADD RCX,0x10\nDEC RAX\nJNZ 0x00402d40\nINC RBP\nCMP RBP,R13\nJNZ 0x00402c30\nMOV RDI,qword ptr [RSP + 0x8]\nADD RSP,0x48\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00401320\n'
p487
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 48\n89 f3\n49 89 fc\n48 63 c3\n48 89 44 24 40\n48 8d 3c 85 00 00 00 00\ne8 58 e9 ff ff\n48 89 44 24 08\n45 8b 6c 24 0c\n45 85 ed\n0f 8e 60 01 00 00\n4d 8b 34 24\n89 d8\n48 89 44 24 38\n31 ed\n89 5c 24 04\n4c 89 64 24 30\n4c 89 6c 24 18\n4c 89 74 24 10\n0f 1f 44 00 00\n48 8d 44 6d 00\n48 89 44 24 28\n41 bf 01 00 00 00\n83 fb 02\n0f 8c c0 00 00 00\n48 89 6c 24 20\n48 8b 44 24 28\n49 8b 2c c6\n49 8b 5c c6 08\n41 bf 01 00 00 00\neb 0c\n48 8b 44 24 08\n46 89 34 b8\neb 56\n4c 89 f8\n48 c1 e0 04\n4d 63 6c 04 0c\n4d 85 ed\n7e 5f\n4d 8b 24 04\n45 31 f6\n0f 1f 84 00 00 00 00 00\n41 83 7c 24 14 00\n74 21\n49 8b 34 24\n48 89 ef\ne8 2c e8 ff ff\n85 c0\n75 11\n49 8b 74 24 08\n48 89 df\ne8 1b e8 ff ff\n85 c0\n74 ab\n49 ff c6\n49 83 c4 18\n4d 39 ee\n7c cb\n4c 8b 64 24 30\n45 39 ee\n75 19\neb 25\n45 31 f6\n45 39 ee\n74 0e\n49 ff c7\n4c 3b 7c 24 40\n0f 8c 7a ff ff ff\n8b 5c 24 04\n4c 8b 6c 24 18\n4c 8b 74 24 10\n48 8b 6c 24 20\n41 39 df\n75 51\n48 8b 44 24 28\n49 8d 34 c6\nbf e8 72 60 00\ne8 cf 06 00 00\n48 8b 44 24 08\n89 28\n85 db\n7e 33\n48 8b 44 24 38\n4c 89 e1\n48 8b 54 24 08\n0f 1f 80 00 00 00 00\n48 8b 31\n48 63 3a\n48 8d 3c 7f\nc7 44 fe 14 00 00 00 00\n48 83 c2 04\n48 83 c1 10\n48 ff c8\n75 e1\n48 ff c5\n4c 39 ed\n0f 85 c5 fe ff ff\n48 8b 7c 24 08\n48 83 c4 48\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 9d e5 ff ff\n'
p488
S'.text:0000000000402bd0\n.text:0000000000402bd1\n.text:0000000000402bd3\n.text:0000000000402bd5\n.text:0000000000402bd7\n.text:0000000000402bd9\n.text:0000000000402bda\n.text:0000000000402bde\n.text:0000000000402be0\n.text:0000000000402be3\n.text:0000000000402be6\n.text:0000000000402beb\n.text:0000000000402bf3\n.text:0000000000402bf8\n.text:0000000000402bfd\n.text:0000000000402c02\n.text:0000000000402c05\n.text:0000000000402c0b\n.text:0000000000402c0f\n.text:0000000000402c11\n.text:0000000000402c16\n.text:0000000000402c18\n.text:0000000000402c1c\n.text:0000000000402c21\n.text:0000000000402c26\n.text:0000000000402c2b\n.text:0000000000402c30\n.text:0000000000402c35\n.text:0000000000402c3a\n.text:0000000000402c40\n.text:0000000000402c43\n.text:0000000000402c49\n.text:0000000000402c4e\n.text:0000000000402c53\n.text:0000000000402c57\n.text:0000000000402c5c\n.text:0000000000402c62\n.text:0000000000402c64\n.text:0000000000402c69\n.text:0000000000402c6d\n.text:0000000000402c70\n.text:0000000000402c73\n.text:0000000000402c77\n.text:0000000000402c7c\n.text:0000000000402c7f\n.text:0000000000402c81\n.text:0000000000402c85\n.text:0000000000402c88\n.text:0000000000402c90\n.text:0000000000402c96\n.text:0000000000402c98\n.text:0000000000402c9c\n.text:0000000000402c9f\n.text:0000000000402ca4\n.text:0000000000402ca6\n.text:0000000000402ca8\n.text:0000000000402cad\n.text:0000000000402cb0\n.text:0000000000402cb5\n.text:0000000000402cb7\n.text:0000000000402cb9\n.text:0000000000402cbc\n.text:0000000000402cc0\n.text:0000000000402cc3\n.text:0000000000402cc5\n.text:0000000000402cca\n.text:0000000000402ccd\n.text:0000000000402ccf\n.text:0000000000402ce0\n.text:0000000000402ce3\n.text:0000000000402ce6\n.text:0000000000402ce8\n.text:0000000000402ceb\n.text:0000000000402cf0\n.text:0000000000402cf6\n.text:0000000000402cfa\n.text:0000000000402cff\n.text:0000000000402d04\n.text:0000000000402d09\n.text:0000000000402d0c\n.text:0000000000402d0e\n.text:0000000000402d13\n.text:0000000000402d17\n.text:0000000000402d1c\n.text:0000000000402d21\n.text:0000000000402d26\n.text:0000000000402d28\n.text:0000000000402d2a\n.text:0000000000402d2c\n.text:0000000000402d31\n.text:0000000000402d34\n.text:0000000000402d39\n.text:0000000000402d40\n.text:0000000000402d43\n.text:0000000000402d46\n.text:0000000000402d4a\n.text:0000000000402d52\n.text:0000000000402d56\n.text:0000000000402d5a\n.text:0000000000402d5d\n.text:0000000000402d5f\n.text:0000000000402d62\n.text:0000000000402d65\n.text:0000000000402d6b\n.text:0000000000402d70\n.text:0000000000402d74\n.text:0000000000402d75\n.text:0000000000402d77\n.text:0000000000402d79\n.text:0000000000402d7b\n.text:0000000000402d7d\n.text:0000000000402d7e\n'
p489
tp490
sS'__libc_csu_fini'
p491
(S'\n__stdcall __libc_csu_fini()\n'
p492
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p493
S'RET\n'
p494
S'f3 c3\n'
p495
S'.text:0000000000403ec0\n'
p496
tp497
sS'strstr'
p498
(S'\n__stdcall strstr(char * __haystack, char * __needle)\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strstr(char *__haystack,char *__needle)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strstr_006061e0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x006061e0]\n'
p501
S'ff 25 2a 4b 20 00\n'
p502
S'.plt:00000000004016b0\n'
p503
tp504
sS'AddDefQ'
p505
(S'\n__stdcall AddDefQ(String * buff)\n'
p506
V\u000avoid AddDefQ(String *buff)\u000a\u000a{\u000a  char *s;\u000a  \u000a  if ((s != (char *)0x0) && (*s != 0)) {\u000a    AddSimpleDef();\u000a    addstring(&defines,"=\u005c"");\u000a    addescapedstring(&defines,s);\u000a    addstring(&defines,"\u005c"");\u000a    return;\u000a  }\u000a  AddDef(buff,0);\u000a  return;\u000a}\u000a\u000a
p507
S'PUSH RBX\nMOV RBX,RSI\nTEST RBX,RBX\nJZ 0x00402f9f\nCMP byte ptr [RBX],0x0\nJZ 0x00402f9f\nCALL 0x004030c0\nMOV EDI,0x606268\nMOV ESI,0x404615\nCALL 0x004021e0\nMOV EDI,0x606268\nMOV RSI,RBX\nCALL 0x00402320\nMOV EDI,0x606268\nMOV ESI,0x404616\nPOP RBX\nJMP 0x004021e0\nXOR ESI,ESI\nPOP RBX\nJMP 0x00402fb0\n'
p508
S'53\n48 89 f3\n48 85 db\n74 36\n80 3b 00\n74 31\ne8 4d 01 00 00\nbf 68 62 60 00\nbe 15 46 40 00\ne8 5e f2 ff ff\nbf 68 62 60 00\n48 89 de\ne8 91 f3 ff ff\nbf 68 62 60 00\nbe 16 46 40 00\n5b\ne9 41 f2 ff ff\n31 f6\n5b\neb 0c\n'
p509
S'.text:0000000000402f60\n.text:0000000000402f61\n.text:0000000000402f64\n.text:0000000000402f67\n.text:0000000000402f69\n.text:0000000000402f6c\n.text:0000000000402f6e\n.text:0000000000402f73\n.text:0000000000402f78\n.text:0000000000402f7d\n.text:0000000000402f82\n.text:0000000000402f87\n.text:0000000000402f8a\n.text:0000000000402f8f\n.text:0000000000402f94\n.text:0000000000402f99\n.text:0000000000402f9a\n.text:0000000000402f9f\n.text:0000000000402fa1\n.text:0000000000402fa2\n'
p510
tp511
sS'XSetCloseDownMode'
p512
(S'\n__stdcall XSetCloseDownMode()\n'
p513
V\u000avoid XSetCloseDownMode(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetCloseDownMode_00606048)();\u000a  return;\u000a}\u000a\u000a
p514
S'JMP qword ptr [0x00606048]\n'
p515
S'ff 25 c2 4c 20 00\n'
p516
S'.plt:0000000000401380\n'
p517
tp518
sS'FindEntry'
p519
(S'\n__stdcall FindEntry()\n'
p520
V\u000aEntry * FindEntry(void)\u000a\u000a{\u000a  char *__s2;\u000a  int iVar1;\u000a  long lVar2;\u000a  Buffer *buff;\u000a  long lVar3;\u000a  Entry *pEVar4;\u000a  Entries local_58;\u000a  undefined4 local_48;\u000a  undefined4 uStack68;\u000a  undefined4 local_40;\u000a  undefined4 uStack60;\u000a  int local_34;\u000a  \u000a  local_34 = 0;\u000a  local_48 = 0;\u000a  uStack68 = 0;\u000a  local_40 = 0;\u000a  uStack60 = 0;\u000a  local_58.used = 0;\u000a  local_58.room = 1;\u000a  local_58.entry = (Entry *)&local_48;\u000a  GetEntries(&local_58,buff);\u000a  if ((0 < local_58.used) && (0 < newDB.used)) {\u000a    __s2 = (char *)CONCAT44(uStack68,local_48);\u000a    lVar3 = (long)newDB.used;\u000a    lVar2 = 0;\u000a    pEVar4 = newDB.entry;\u000a    do {\u000a      if ((pEVar4->usable != 0) && (iVar1 = strcmp(pEVar4->tag,__s2), iVar1 == 0)) {\u000a        pEVar4->usable = 0;\u000a        iVar1 = strcmp(pEVar4->value,(char *)CONCAT44(uStack60,local_40));\u000a        if (iVar1 == 0) {\u000a          return (Entry *)0x0;\u000a        }\u000a        return pEVar4;\u000a      }\u000a      lVar2 = lVar2 + 1;\u000a      pEVar4 = pEVar4 + 1;\u000a    } while (lVar2 < lVar3);\u000a  }\u000a  return (Entry *)0x0;\u000a}\u000a\u000a
p521
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x30\nMOV RAX,RDI\nMOV dword ptr [RSP + 0x24],0x0\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOV dword ptr [RSP + 0xc],0x0\nMOV dword ptr [RSP + 0x8],0x1\nLEA RCX,[RSP + 0x10]\nMOV qword ptr [RSP],RCX\nMOV RDI,RSP\nMOV EDX,0x1\nMOV RSI,RAX\nCALL 0x004030d0\nXOR R14D,R14D\nCMP dword ptr [RSP + 0xc],0x0\nJLE 0x00403db4\nMOV EAX,dword ptr [0x006072f4]\nTEST EAX,EAX\nJLE 0x00403db4\nMOV R13,qword ptr [0x006072e8]\nMOV R15,qword ptr [RSP + 0x10]\nMOVSXD R12,dword ptr [0x006072f4]\nXOR R14D,R14D\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP dword ptr [R13 + 0x14],0x0\nJZ 0x00403d87\nMOV RDI,qword ptr [R13]\nMOV RSI,R15\nCALL 0x004014d0\nTEST EAX,EAX\nJZ 0x00403d95\nINC RBX\nADD R13,0x18\nCMP RBX,R12\nJL 0x00403d70\nJMP 0x00403db4\nMOV dword ptr [R13 + 0x14],0x0\nMOV RDI,qword ptr [R13 + 0x8]\nMOV RSI,qword ptr [RSP + 0x18]\nCALL 0x004014d0\nXOR R14D,R14D\nTEST EAX,EAX\nCMOVNZ R14,R13\nMOV RAX,R14\nADD RSP,0x30\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p522
S'41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 30\n48 89 f8\nc7 44 24 24 00 00 00 00\n0f 57 c0\n0f 29 44 24 10\nc7 44 24 0c 00 00 00 00\nc7 44 24 08 01 00 00 00\n48 8d 4c 24 10\n48 89 0c 24\n48 89 e7\nba 01 00 00 00\n48 89 c6\ne8 97 f3 ff ff\n45 31 f6\n83 7c 24 0c 00\n7e 71\n8b 05 ab 35 20 00\n85 c0\n7e 67\n4c 8b 2d 94 35 20 00\n4c 8b 7c 24 10\n4c 63 25 94 35 20 00\n45 31 f6\n31 db\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 83 7d 14 00\n74 10\n49 8b 7d 00\n4c 89 fe\ne8 4d d7 ff ff\n85 c0\n74 0e\n48 ff c3\n49 83 c5 18\n4c 39 e3\n7c dd\neb 1f\n41 c7 45 14 00 00 00 00\n49 8b 7d 08\n48 8b 74 24 18\ne8 25 d7 ff ff\n45 31 f6\n85 c0\n4d 0f 45 f5\n4c 89 f0\n48 83 c4 30\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p523
S'.text:0000000000403cf0\n.text:0000000000403cf2\n.text:0000000000403cf4\n.text:0000000000403cf6\n.text:0000000000403cf8\n.text:0000000000403cf9\n.text:0000000000403cfd\n.text:0000000000403d00\n.text:0000000000403d08\n.text:0000000000403d0b\n.text:0000000000403d10\n.text:0000000000403d18\n.text:0000000000403d20\n.text:0000000000403d25\n.text:0000000000403d29\n.text:0000000000403d2c\n.text:0000000000403d31\n.text:0000000000403d34\n.text:0000000000403d39\n.text:0000000000403d3c\n.text:0000000000403d41\n.text:0000000000403d43\n.text:0000000000403d49\n.text:0000000000403d4b\n.text:0000000000403d4d\n.text:0000000000403d54\n.text:0000000000403d59\n.text:0000000000403d60\n.text:0000000000403d63\n.text:0000000000403d65\n.text:0000000000403d70\n.text:0000000000403d75\n.text:0000000000403d77\n.text:0000000000403d7b\n.text:0000000000403d7e\n.text:0000000000403d83\n.text:0000000000403d85\n.text:0000000000403d87\n.text:0000000000403d8a\n.text:0000000000403d8e\n.text:0000000000403d91\n.text:0000000000403d93\n.text:0000000000403d95\n.text:0000000000403d9d\n.text:0000000000403da1\n.text:0000000000403da6\n.text:0000000000403dab\n.text:0000000000403dae\n.text:0000000000403db0\n.text:0000000000403db4\n.text:0000000000403db7\n.text:0000000000403dbb\n.text:0000000000403dbc\n.text:0000000000403dbe\n.text:0000000000403dc0\n.text:0000000000403dc2\n.text:0000000000403dc4\n'
p524
tp525
sS'GetEntries'
p526
(S'\n__stdcall GetEntries(Entries * entries, Buffer * buff)\n'
p527
V\u000avoid GetEntries(Entries *entries,Buffer *buff)\u000a\u000a{\u000a  char cVar1;\u000a  int iVar2;\u000a  char *pcVar3;\u000a  ushort **ppuVar4;\u000a  long lVar5;\u000a  int in_EDX;\u000a  char *__src;\u000a  char *__src_00;\u000a  size_t __n;\u000a  int iVar6;\u000a  char *string;\u000a  uint uVar7;\u000a  char *pcVar8;\u000a  Entry entry;\u000a  int local_68;\u000a  int local_58;\u000a  int local_54;\u000a  Entries *local_50;\u000a  Entry local_48;\u000a  \u000a  string = buff->buff;\u000a  if ((string != (char *)0x0) && (string < buff->buff + (long)buff->used)) {\u000a    iVar6 = 0;\u000a    local_50 = entries;\u000a    local_54 = in_EDX;\u000a    do {\u000a      pcVar3 = FindFirst(string,(int *)0xa);\u000a      if (pcVar3 == (char *)0x0) {\u000a        pcVar3 = buff->buff + (long)buff->used;\u000a      }\u000a      iVar6 = iVar6 + 1;\u000a      cVar1 = *string;\u000a      if ((cVar1 != '\u005cn') && (cVar1 != '!')) {\u000a        __src = string;\u000a        if (in_EDX == 0 && cVar1 == '#') {\u000a          iVar2 = sscanf(string,"# %d",&local_58);\u000a          if ((iVar2 == 1) || (iVar2 = sscanf(string,"# line %d",&local_58), iVar2 == 1)) {\u000a            iVar6 = local_58 + -1;\u000a          }\u000a        }\u000a        else {\u000a          do {\u000a            cVar1 = *__src;\u000a            if (((long)cVar1 == 0) || (cVar1 == '\u005cn')) goto LAB_00403370;\u000a            if (cVar1 < 0) break;\u000a            ppuVar4 = __ctype_b_loc();\u000a            __src = __src + 1;\u000a          } while ((*(byte *)((long)*ppuVar4 + (long)cVar1 * 2 + 1) & 0x20) != 0);\u000a          if ((cVar1 != 0) && (cVar1 != '\u005cn')) {\u000a            __src = FindFirst(string,(int *)0x3a);\u000a            if ((__src == (char *)0x0) || (pcVar3 < __src)) {\u000a              if ((local_54 == 0) && ((quiet & 1) == 0)) {\u000a                fprintf(stderr,"%s: colon missing on line %d, ignoring line\u005cn",ProgramName);\u000a              }\u000a            }\u000a            else {\u000a              lVar5 = 0;\u000a              __src_00 = string;\u000a              while ((*__src_00 == ' ' || (*__src_00 == '\u005ct'))) {\u000a                __src_00 = __src_00 + 1;\u000a                lVar5 = lVar5 + 1;\u000a              }\u000a              pcVar8 = __src + -(long)__src_00;\u000a              if ((int)pcVar8 == 0) {\u000a                uVar7 = 0;\u000a              }\u000a              else {\u000a                string = string + lVar5 + -1 + (long)(int)pcVar8;\u000a                do {\u000a                  uVar7 = (uint)pcVar8;\u000a                  if ((*string != ' ') && (*string != '\u005ct')) break;\u000a                  uVar7 = uVar7 - 1;\u000a                  pcVar8 = (char *)(ulong)uVar7;\u000a                  string = string + -1;\u000a                } while (uVar7 != 0);\u000a              }\u000a              local_48.tag = (char *)malloc((long)(int)(uVar7 + 1));\u000a              strncpy(local_48.tag,__src_00,(long)(int)uVar7);\u000a              local_48.tag[(long)(int)uVar7] = 0;\u000a              do {\u000a                do {\u000a                  __src = __src + 1;\u000a                } while (*__src == ' ');\u000a              } while (*__src == '\u005ct');\u000a              local_48.value =\u000a                   (char *)malloc(((long)(pcVar3 + -(long)__src) << 0x20) + 0x100000000 >> 0x20);\u000a              __n = SEXT48((int)(pcVar3 + -(long)__src));\u000a              strncpy(local_48.value,__src,__n);\u000a              local_48.value[__n] = 0;\u000a              local_48.lineno = iVar6;\u000a              if (local_54 != 0) {\u000a                local_48.lineno = 0;\u000a              }\u000a              AddEntry(local_50,&local_48);\u000a            }\u000a          }\u000a        }\u000a      }\u000aLAB_00403370:\u000a      string = pcVar3 + 1;\u000a      iVar6 = iVar6 + local_68;\u000a    } while (string < buff->buff + (long)buff->used);\u000a  }\u000a  return;\u000a}\u000a\u000a
p528
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R15D,EDX\nMOV RBX,RSI\nMOV qword ptr [RSP + 0x18],RDI\nMOV R12,qword ptr [RBX]\nTEST R12,R12\nJZ 0x0040338a\nMOVSXD RAX,dword ptr [RBX + 0xc]\nADD RAX,qword ptr [RBX]\nCMP R12,RAX\nJNC 0x0040338a\nTEST R15D,R15D\nSETZ byte ptr [RSP + 0x7]\nMOV RBP,RSP\nXOR R13D,R13D\nMOV qword ptr [RSP + 0x8],RBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV ESI,0xa\nMOV RDI,R12\nMOV RDX,RBP\nCALL 0x004033a0\nMOV R14,RAX\nTEST R14,R14\nJNZ 0x0040313f\nMOVSXD R14,dword ptr [RBX + 0xc]\nADD R14,qword ptr [RBX]\nINC R13D\nMOV AL,byte ptr [R12]\nCMP AL,0xa\nJZ 0x00403370\nCMP AL,0x21\nJZ 0x00403370\nCMP AL,0x23\nSETZ AL\nTEST byte ptr [RSP + 0x7],AL\nMOV RBP,R12\nJZ 0x004031b0\nMOV ESI,0x404618\nXOR EAX,EAX\nMOV RDI,R12\nLEA RDX,[RSP + 0x10]\nCALL 0x00401590\nCMP EAX,0x1\nMOV RBX,qword ptr [RSP + 0x8]\nMOV RBP,RSP\nJZ 0x004031a2\nMOV ESI,0x40461d\nXOR EAX,EAX\nMOV RDI,R12\nLEA RDX,[RSP + 0x10]\nCALL 0x00401590\nCMP EAX,0x1\nJNZ 0x00403370\nMOV R13D,dword ptr [RSP + 0x10]\nDEC R13D\nJMP 0x00403370\nMOVSX RBX,byte ptr [RBP]\nTEST RBX,RBX\nJZ 0x00403361\nCMP BL,0xa\nJZ 0x00403361\nTEST BL,BL\nJS 0x004031dd\nCALL 0x004016c0\nMOV RAX,qword ptr [RAX]\nINC RBP\nTEST byte ptr [RAX + RBX*0x2 + 0x1],0x20\nJNZ 0x004031b0\nTEST BL,BL\nJZ 0x00403361\nCMP BL,0xa\nJZ 0x00403361\nMOV ESI,0x3a\nXOR EDX,EDX\nMOV RDI,R12\nCALL 0x004033a0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040326a\nCMP RBX,R14\nJA 0x0040326a\nXOR EAX,EAX\nMOV RBP,R12\nJMP 0x00403226\nINC RBP\nINC RAX\nMOVZX ECX,byte ptr [RBP]\nCMP CL,0x20\nJZ 0x00403220\nCMP CL,0x9\nJZ 0x00403220\nMOV dword ptr [RSP + 0x14],R15D\nMOV R15,RBX\nSUB R15,RBP\nTEST R15D,R15D\nJZ 0x004032aa\nMOVSXD RCX,R15D\nADD R12,RCX\nLEA RAX,[RAX + R12*0x1 + -0x1]\nNOP\nMOVZX ECX,byte ptr [RAX]\nCMP CL,0x20\nJZ 0x0040325d\nCMP CL,0x9\nJNZ 0x004032ad\nDEC R15D\nDEC RAX\nTEST R15D,R15D\nJNZ 0x00403250\nJMP 0x004032ad\nTEST R15D,R15D\nMOV RBX,qword ptr [RSP + 0x8]\nMOV RBP,RSP\nJNZ 0x00403370\nTEST byte ptr [0x00606298],0x1\nJNZ 0x00403370\nMOV RDI,qword ptr [0x00606240]\nMOV RDX,qword ptr [0x00606250]\nMOV ESI,0x404627\nXOR EAX,EAX\nMOV ECX,R13D\nCALL 0x00401500\nJMP 0x00403370\nXOR R15D,R15D\nLEA EAX,[R15 + 0x1]\nMOVSXD RDI,EAX\nCALL 0x00401550\nMOV qword ptr [RSP + 0x20],RAX\nMOVSXD R12,R15D\nMOV RDI,RAX\nMOV RSI,RBP\nMOV RDX,R12\nCALL 0x00401360\nMOV RAX,qword ptr [RSP + 0x20]\nMOV byte ptr [RAX + R12*0x1],0x0\nINC RBX\nMOV R15D,dword ptr [RSP + 0x14]\nJMP 0x004032f3\nINC RBX\nMOVZX EAX,byte ptr [RBX]\nCMP AL,0x20\nJZ 0x004032f0\nCMP AL,0x9\nJZ 0x004032f0\nMOV RBP,R14\nSUB RBP,RBX\nMOV RDI,RBP\nSHL RDI,0x20\nMOV RAX,0x100000000\nADD RDI,RAX\nSAR RDI,0x20\nCALL 0x00401550\nMOV qword ptr [RSP + 0x28],RAX\nMOVSXD RBP,EBP\nMOV RDI,RAX\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401360\nTEST R15D,R15D\nMOV RAX,qword ptr [RSP + 0x28]\nMOV byte ptr [RAX + RBP*0x1],0x0\nMOV EAX,R13D\nMOV ECX,0x0\nCMOVNZ EAX,ECX\nMOV dword ptr [RSP + 0x30],EAX\nMOV RDI,qword ptr [RSP + 0x18]\nLEA RSI,[RSP + 0x20]\nCALL 0x004033f0\nMOV RBX,qword ptr [RSP + 0x8]\nMOV RBP,RSP\nNOP dword ptr [RAX]\nINC R14\nADD R13D,dword ptr [RSP]\nMOVSXD RAX,dword ptr [RBX + 0xc]\nADD RAX,qword ptr [RBX]\nCMP R14,RAX\nMOV R12,R14\nJC 0x00403120\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p529
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n41 89 d7\n48 89 f3\n48 89 7c 24 18\n4c 8b 23\n4d 85 e4\n0f 84 95 02 00 00\n48 63 43 0c\n48 03 03\n49 39 c4\n0f 83 85 02 00 00\n45 85 ff\n0f 94 44 24 07\n48 89 e5\n45 31 ed\n48 89 5c 24 08\n0f 1f 84 00 00 00 00 00\nbe 0a 00 00 00\n4c 89 e7\n48 89 ea\ne8 70 02 00 00\n49 89 c6\n4d 85 f6\n75 07\n4c 63 73 0c\n4c 03 33\n41 ff c5\n41 8a 04 24\n3c 0a\n0f 84 22 02 00 00\n3c 21\n0f 84 1a 02 00 00\n3c 23\n0f 94 c0\n84 44 24 07\n4c 89 e5\n74 4c\nbe 18 46 40 00\n31 c0\n4c 89 e7\n48 8d 54 24 10\ne8 18 e4 ff ff\n83 f8 01\n48 8b 5c 24 08\n48 89 e5\n74 1d\nbe 1d 46 40 00\n31 c0\n4c 89 e7\n48 8d 54 24 10\ne8 f7 e3 ff ff\n83 f8 01\n0f 85 ce 01 00 00\n44 8b 6c 24 10\n41 ff cd\ne9 c1 01 00 00\n48 0f be 5d 00\n48 85 db\n0f 84 a3 01 00 00\n80 fb 0a\n0f 84 9a 01 00 00\n84 db\n78 12\ne8 f0 e4 ff ff\n48 8b 00\n48 ff c5\nf6 44 58 01 20\n75 d3\n84 db\n0f 84 7c 01 00 00\n80 fb 0a\n0f 84 73 01 00 00\nbe 3a 00 00 00\n31 d2\n4c 89 e7\ne8 a3 01 00 00\n48 89 c3\n48 85 db\n74 65\n4c 39 f3\n77 60\n31 c0\n4c 89 e5\neb 15\n48 ff c5\n48 ff c0\n0f b6 4d 00\n80 f9 20\n74 f1\n80 f9 09\n74 ec\n44 89 7c 24 14\n49 89 df\n49 29 ef\n45 85 ff\n74 66\n49 63 cf\n49 01 cc\n4a 8d 44 20 ff\n90\n0f b6 08\n80 f9 20\n74 05\n80 f9 09\n75 50\n41 ff cf\n48 ff c8\n45 85 ff\n75 e8\neb 43\n45 85 ff\n48 8b 5c 24 08\n48 89 e5\n0f 85 f5 00 00 00\nf6 05 16 30 20 00 01\n0f 85 e8 00 00 00\n48 8b 3d b1 2f 20 00\n48 8b 15 ba 2f 20 00\nbe 27 46 40 00\n31 c0\n44 89 e9\ne8 5b e2 ff ff\ne9 c6 00 00 00\n45 31 ff\n41 8d 47 01\n48 63 f8\ne8 97 e2 ff ff\n48 89 44 24 20\n4d 63 e7\n48 89 c7\n48 89 ee\n4c 89 e2\ne8 91 e0 ff ff\n48 8b 44 24 20\n42 c6 04 20 00\n48 ff c3\n44 8b 7c 24 14\neb 10\n48 ff c3\n0f b6 03\n3c 20\n74 f6\n3c 09\n74 f2\n4c 89 f5\n48 29 dd\n48 89 ef\n48 c1 e7 20\n48 b8 00 00 00 00 01 00 00 00\n48 01 c7\n48 c1 ff 20\ne8 2f e2 ff ff\n48 89 44 24 28\n48 63 ed\n48 89 c7\n48 89 de\n48 89 ea\ne8 29 e0 ff ff\n45 85 ff\n48 8b 44 24 28\nc6 04 28 00\n44 89 e8\nb9 00 00 00 00\n0f 45 c1\n89 44 24 30\n48 8b 7c 24 18\n48 8d 74 24 20\ne8 8f 00 00 00\n48 8b 5c 24 08\n48 89 e5\n0f 1f 80 00 00 00 00\n49 ff c6\n44 03 2c 24\n48 63 43 0c\n48 03 03\n49 39 c6\n4d 89 f4\n0f 82 96 fd ff ff\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p530
S'.text:00000000004030d0\n.text:00000000004030d1\n.text:00000000004030d3\n.text:00000000004030d5\n.text:00000000004030d7\n.text:00000000004030d9\n.text:00000000004030da\n.text:00000000004030de\n.text:00000000004030e1\n.text:00000000004030e4\n.text:00000000004030e9\n.text:00000000004030ec\n.text:00000000004030ef\n.text:00000000004030f5\n.text:00000000004030f9\n.text:00000000004030fc\n.text:00000000004030ff\n.text:0000000000403105\n.text:0000000000403108\n.text:000000000040310d\n.text:0000000000403110\n.text:0000000000403113\n.text:0000000000403118\n.text:0000000000403120\n.text:0000000000403125\n.text:0000000000403128\n.text:000000000040312b\n.text:0000000000403130\n.text:0000000000403133\n.text:0000000000403136\n.text:0000000000403138\n.text:000000000040313c\n.text:000000000040313f\n.text:0000000000403142\n.text:0000000000403146\n.text:0000000000403148\n.text:000000000040314e\n.text:0000000000403150\n.text:0000000000403156\n.text:0000000000403158\n.text:000000000040315b\n.text:000000000040315f\n.text:0000000000403162\n.text:0000000000403164\n.text:0000000000403169\n.text:000000000040316b\n.text:000000000040316e\n.text:0000000000403173\n.text:0000000000403178\n.text:000000000040317b\n.text:0000000000403180\n.text:0000000000403183\n.text:0000000000403185\n.text:000000000040318a\n.text:000000000040318c\n.text:000000000040318f\n.text:0000000000403194\n.text:0000000000403199\n.text:000000000040319c\n.text:00000000004031a2\n.text:00000000004031a7\n.text:00000000004031aa\n.text:00000000004031b0\n.text:00000000004031b5\n.text:00000000004031b8\n.text:00000000004031be\n.text:00000000004031c1\n.text:00000000004031c7\n.text:00000000004031c9\n.text:00000000004031cb\n.text:00000000004031d0\n.text:00000000004031d3\n.text:00000000004031d6\n.text:00000000004031db\n.text:00000000004031dd\n.text:00000000004031df\n.text:00000000004031e5\n.text:00000000004031e8\n.text:00000000004031ee\n.text:00000000004031f3\n.text:00000000004031f5\n.text:00000000004031f8\n.text:00000000004031fd\n.text:0000000000403200\n.text:0000000000403203\n.text:0000000000403205\n.text:0000000000403208\n.text:000000000040320a\n.text:000000000040320c\n.text:000000000040320f\n.text:0000000000403220\n.text:0000000000403223\n.text:0000000000403226\n.text:000000000040322a\n.text:000000000040322d\n.text:000000000040322f\n.text:0000000000403232\n.text:0000000000403234\n.text:0000000000403239\n.text:000000000040323c\n.text:000000000040323f\n.text:0000000000403242\n.text:0000000000403244\n.text:0000000000403247\n.text:000000000040324a\n.text:000000000040324f\n.text:0000000000403250\n.text:0000000000403253\n.text:0000000000403256\n.text:0000000000403258\n.text:000000000040325b\n.text:000000000040325d\n.text:0000000000403260\n.text:0000000000403263\n.text:0000000000403266\n.text:0000000000403268\n.text:000000000040326a\n.text:000000000040326d\n.text:0000000000403272\n.text:0000000000403275\n.text:000000000040327b\n.text:0000000000403282\n.text:0000000000403288\n.text:000000000040328f\n.text:0000000000403296\n.text:000000000040329b\n.text:000000000040329d\n.text:00000000004032a0\n.text:00000000004032a5\n.text:00000000004032aa\n.text:00000000004032ad\n.text:00000000004032b1\n.text:00000000004032b4\n.text:00000000004032b9\n.text:00000000004032be\n.text:00000000004032c1\n.text:00000000004032c4\n.text:00000000004032c7\n.text:00000000004032ca\n.text:00000000004032cf\n.text:00000000004032d4\n.text:00000000004032d9\n.text:00000000004032dc\n.text:00000000004032e1\n.text:00000000004032f0\n.text:00000000004032f3\n.text:00000000004032f6\n.text:00000000004032f8\n.text:00000000004032fa\n.text:00000000004032fc\n.text:00000000004032fe\n.text:0000000000403301\n.text:0000000000403304\n.text:0000000000403307\n.text:000000000040330b\n.text:0000000000403315\n.text:0000000000403318\n.text:000000000040331c\n.text:0000000000403321\n.text:0000000000403326\n.text:0000000000403329\n.text:000000000040332c\n.text:000000000040332f\n.text:0000000000403332\n.text:0000000000403337\n.text:000000000040333a\n.text:000000000040333f\n.text:0000000000403343\n.text:0000000000403346\n.text:000000000040334b\n.text:000000000040334e\n.text:0000000000403352\n.text:0000000000403357\n.text:000000000040335c\n.text:0000000000403361\n.text:0000000000403366\n.text:0000000000403369\n.text:0000000000403370\n.text:0000000000403373\n.text:0000000000403377\n.text:000000000040337b\n.text:000000000040337e\n.text:0000000000403381\n.text:0000000000403384\n.text:000000000040338a\n.text:000000000040338e\n.text:000000000040338f\n.text:0000000000403391\n.text:0000000000403393\n.text:0000000000403395\n.text:0000000000403397\n.text:0000000000403398\n'
p531
tp532
sS'Resolution'
p533
(S'\n__stdcall Resolution()\n'
p534
V\u000aint Resolution(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ESI;\u000a  int in_EDI;\u000a  \u000a  if (in_ESI != 0) {\u000a    iVar1 = (in_EDI * 100000) / in_ESI + 0x32;\u000a    return (int)(iVar1 / 100 + (iVar1 >> 0x1f) + (uint)((ulong)((long)iVar1 * 0x51eb851f) >> 0x3f));\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p535
S'TEST ESI,ESI\nJZ 0x00403c27\nIMUL EAX,EDI,0x186a0\nCDQ\nIDIV ESI\nADD EAX,0x32\nCDQE\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSHR RCX,0x3f\nSAR RAX,0x25\nADD EAX,ECX\nRET\nXOR EAX,EAX\nRET\n'
p536
S'85 f6\n74 23\n69 c7 a0 86 01 00\n99\nf7 fe\n83 c0 32\n48 98\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 e9 3f\n48 c1 f8 25\n01 c8\nc3\n31 c0\nc3\n'
p537
S'.text:0000000000403c00\n.text:0000000000403c02\n.text:0000000000403c04\n.text:0000000000403c0a\n.text:0000000000403c0b\n.text:0000000000403c0d\n.text:0000000000403c10\n.text:0000000000403c12\n.text:0000000000403c19\n.text:0000000000403c1c\n.text:0000000000403c20\n.text:0000000000403c24\n.text:0000000000403c26\n.text:0000000000403c27\n.text:0000000000403c29\n'
p538
tp539
sS'mkstemp'
p540
(S'\n__stdcall mkstemp(char * __template)\n'
p541
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mkstemp(char *__template)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mkstemp_00606160)();\u000a  return iVar1;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x00606160]\n'
p543
S'ff 25 aa 4b 20 00\n'
p544
S'.plt:00000000004015b0\n'
p545
tp546
sS'__ctype_b_loc'
p547
(S'\n__stdcall __ctype_b_loc()\n'
p548
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_006061e8)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x006061e8]\n'
p550
S'ff 25 22 4b 20 00\n'
p551
S'.plt:00000000004016c0\n'
p552
tp553
sS'XOpenDisplay'
p554
(S'\n__stdcall XOpenDisplay()\n'
p555
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_00606100)();\u000a  return;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x00606100]\n'
p557
S'ff 25 0a 4c 20 00\n'
p558
S'.plt:00000000004014f0\n'
p559
tp560
sS'_start'
p561
(S'\n__stdcall _start()\n'
p562
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00605ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p563
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x403ec0\nMOV RCX,0x403e50\nMOV RDI,0x4017e0\nCALL qword ptr [0x00605ff0]\nHLT\n'
p564
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 c0 3e 40 00\n48 c7 c1 50 3e 40 00\n48 c7 c7 e0 17 40 00\nff 15 e6 48 20 00\nf4\n'
p565
S'.text:00000000004016e0\n.text:00000000004016e2\n.text:00000000004016e5\n.text:00000000004016e6\n.text:00000000004016e9\n.text:00000000004016ed\n.text:00000000004016ee\n.text:00000000004016ef\n.text:00000000004016f6\n.text:00000000004016fd\n.text:0000000000401704\n.text:000000000040170a\n'
p566
tp567
sS'StoreProperty'
p568
(S'\n__stdcall StoreProperty(Display * display, Window root, Atom res_prop)\n'
p569
V\u000avoid StoreProperty(Display *display,Window root,Atom res_prop)\u000a\u000a{\u000a  int iVar1;\u000a  long lVar2;\u000a  uint uVar3;\u000a  ulong uVar4;\u000a  int iVar5;\u000a  undefined8 uVar6;\u000a  char *pcVar7;\u000a  \u000a  iVar1 = buffer.used;\u000a  pcVar7 = buffer.buff;\u000a  uVar4 = (ulong)(uint)buffer.used;\u000a  lVar2 = XMaxRequestSize();\u000a  lVar2 = lVar2 * 4 + 0xffffffe4;\u000a  iVar5 = (int)lVar2;\u000a  if (iVar5 < iVar1) {\u000a    XGrabServer(display);\u000a    uVar6 = 0;\u000a    do {\u000a      XChangeProperty(display,root,res_prop,0x1f,8,uVar6,pcVar7,lVar2);\u000a      pcVar7 = pcVar7 + (long)iVar5;\u000a      uVar3 = (int)uVar4 - iVar5;\u000a      uVar4 = (ulong)uVar3;\u000a      uVar6 = 2;\u000a    } while (iVar5 < (int)uVar3);\u000a    XChangeProperty(display,root,res_prop,0x1f,8,2,pcVar7,uVar4);\u000a    (*(code *)PTR_XUngrabServer_00606128)(display);\u000a    return;\u000a  }\u000a  XChangeProperty(display,root,res_prop,0x1f,8,0,pcVar7,uVar4);\u000a  return;\u000a}\u000a\u000a
p570
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R12,RSI\nMOV EBX,dword ptr [0x006072e4]\nMOV R13,qword ptr [0x006072d8]\nMOV qword ptr [RSP],RDI\nCALL 0x004016d0\nMOV ECX,0xffffffe4\nLEA RBP,[RCX + RAX*0x4]\nCMP EBX,EBP\nJLE 0x00403b50\nMOV RDI,qword ptr [RSP]\nCALL 0x004015c0\nMOV R15,R14\nMOVSXD R14,EBP\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOV ECX,0x1f\nMOV R8D,0x8\nMOV RDI,qword ptr [RSP]\nMOV RSI,R12\nMOV RDX,R15\nPUSH RBP\nPUSH R13\nCALL 0x00401580\nADD RSP,0x10\nADD R13,R14\nSUB EBX,EBP\nMOV R9D,0x2\nCMP EBX,EBP\nJG 0x00403ae0\nMOV ECX,0x1f\nMOV R8D,0x8\nMOV R9D,0x2\nMOV RBP,qword ptr [RSP]\nMOV RDI,RBP\nMOV RSI,R12\nMOV RDX,R15\nPUSH RBX\nPUSH R13\nCALL 0x00401580\nADD RSP,0x10\nMOV RDI,RBP\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00401540\nMOV ECX,0x1f\nMOV R8D,0x8\nMOV R9D,0x0\nMOV RDI,qword ptr [RSP]\nMOV RSI,R12\nMOV RDX,R14\nPUSH RBX\nPUSH R13\nCALL 0x00401580\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p571
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f4\n8b 1d 3d 38 20 00\n4c 8b 2d 2a 38 20 00\n48 89 3c 24\ne8 19 dc ff ff\nb9 e4 ff ff ff\n48 8d 2c 81\n39 eb\n0f 8e 88 00 00 00\n48 8b 3c 24\ne8 ef da ff ff\n4d 89 f7\n4c 63 f5\n45 31 c9\n66 0f 1f 44 00 00\nb9 1f 00 00 00\n41 b8 08 00 00 00\n48 8b 3c 24\n4c 89 e6\n4c 89 fa\n55\n41 55\ne8 83 da ff ff\n48 83 c4 10\n4d 01 f5\n29 eb\n41 b9 02 00 00 00\n39 eb\n7f d0\nb9 1f 00 00 00\n41 b8 08 00 00 00\n41 b9 02 00 00 00\n48 8b 2c 24\n48 89 ef\n4c 89 e6\n4c 89 fa\n53\n41 55\ne8 4a da ff ff\n48 83 c4 10\n48 89 ef\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\ne9 f0 d9 ff ff\nb9 1f 00 00 00\n41 b8 08 00 00 00\n41 b9 00 00 00 00\n48 8b 3c 24\n4c 89 e6\n4c 89 f2\n53\n41 55\ne8 0d da ff ff\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p572
S'.text:0000000000403a90\n.text:0000000000403a91\n.text:0000000000403a93\n.text:0000000000403a95\n.text:0000000000403a97\n.text:0000000000403a99\n.text:0000000000403a9a\n.text:0000000000403a9b\n.text:0000000000403a9e\n.text:0000000000403aa1\n.text:0000000000403aa7\n.text:0000000000403aae\n.text:0000000000403ab2\n.text:0000000000403ab7\n.text:0000000000403abc\n.text:0000000000403ac0\n.text:0000000000403ac2\n.text:0000000000403ac8\n.text:0000000000403acc\n.text:0000000000403ad1\n.text:0000000000403ad4\n.text:0000000000403ad7\n.text:0000000000403ada\n.text:0000000000403ae0\n.text:0000000000403ae5\n.text:0000000000403aeb\n.text:0000000000403aef\n.text:0000000000403af2\n.text:0000000000403af5\n.text:0000000000403af6\n.text:0000000000403af8\n.text:0000000000403afd\n.text:0000000000403b01\n.text:0000000000403b04\n.text:0000000000403b06\n.text:0000000000403b0c\n.text:0000000000403b0e\n.text:0000000000403b10\n.text:0000000000403b15\n.text:0000000000403b1b\n.text:0000000000403b21\n.text:0000000000403b25\n.text:0000000000403b28\n.text:0000000000403b2b\n.text:0000000000403b2e\n.text:0000000000403b2f\n.text:0000000000403b31\n.text:0000000000403b36\n.text:0000000000403b3a\n.text:0000000000403b3d\n.text:0000000000403b41\n.text:0000000000403b42\n.text:0000000000403b44\n.text:0000000000403b46\n.text:0000000000403b48\n.text:0000000000403b4a\n.text:0000000000403b4b\n.text:0000000000403b50\n.text:0000000000403b55\n.text:0000000000403b5b\n.text:0000000000403b61\n.text:0000000000403b65\n.text:0000000000403b68\n.text:0000000000403b6b\n.text:0000000000403b6c\n.text:0000000000403b6e\n.text:0000000000403b73\n.text:0000000000403b77\n.text:0000000000403b78\n.text:0000000000403b7a\n.text:0000000000403b7c\n.text:0000000000403b7e\n.text:0000000000403b80\n.text:0000000000403b81\n'
p573
tp574
sS'fdopen'
p575
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p576
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_00606178)();\u000a  return pFVar1;\u000a}\u000a\u000a
p577
S'JMP qword ptr [0x00606178]\n'
p578
S'ff 25 92 4b 20 00\n'
p579
S'.plt:00000000004015e0\n'
p580
tp581
sS'AddDefHostname'
p582
(S'\n__stdcall AddDefHostname()\n'
p583
V\u000avoid AddDefHostname(undefined8 uParm1,char *pcParm2)\u000a\u000a{\u000a  char *pcVar1;\u000a  ushort **ppuVar2;\u000a  char name [512];\u000a  char local_218 [511];\u000a  undefined local_19;\u000a  \u000a  strncpy(local_218,pcParm2,0x1ff);\u000a  local_19 = 0;\u000a  if (local_218[0] != 0) {\u000a    ppuVar2 = __ctype_b_loc();\u000a    pcVar1 = local_218;\u000a    do {\u000a      if (((*(byte *)((long)*ppuVar2 + (long)local_218[0] * 2 + 1) & 0xc) == 0) &&\u000a         ((0x32 < (byte)(local_218[0] - 0x2dU) ||\u000a          ((0x4000000002003U >> ((ulong)(byte)(local_218[0] - 0x2dU) & 0x1f) & 1) == 0)))) {\u000a        *pcVar1 = '_';\u000a      }\u000a      local_218[0] = pcVar1[1];\u000a      pcVar1 = pcVar1 + 1;\u000a    } while (local_218[0] != 0);\u000a  }\u000a  AddDef(uParm1,local_218);\u000a  return;\u000a}\u000a\u000a
p584
S'PUSH R14\nPUSH RBX\nSUB RSP,0x208\nMOV R14,RDI\nMOV RDI,RSP\nMOV EDX,0x1ff\nCALL 0x00401360\nMOV byte ptr [0x1ff + RSP],0x0\nMOV BL,byte ptr [RSP]\nTEST BL,BL\nJZ 0x00402eca\nCALL 0x004016c0\nLEA RCX,[RSP + 0x1]\nMOV RDX,0x4000000002003\nNOP dword ptr [RAX]\nMOV RSI,qword ptr [RAX]\nMOVSX RDI,BL\nTEST byte ptr [RSI + RDI*0x2 + 0x1],0xc\nJNZ 0x00402ec0\nADD BL,0xd3\nCMP BL,0x32\nJA 0x00402eaf\nMOVZX ESI,BL\nBT RDX,RSI\nJC 0x00402ec0\nMOV byte ptr [RCX + -0x1],0x5f\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EBX,byte ptr [RCX]\nINC RCX\nTEST BL,BL\nJNZ 0x00402e90\nMOV RSI,RSP\nMOV RDI,R14\nCALL 0x00402fb0\nADD RSP,0x208\nPOP RBX\nPOP R14\nRET\n'
p585
S'41 56\n53\n48 81 ec 08 02 00 00\n49 89 fe\n48 89 e7\nba ff 01 00 00\ne8 f6 e4 ff ff\nc6 84 24 ff 01 00 00 00\n8a 1c 24\n84 db\n74 51\ne8 42 e8 ff ff\n48 8d 4c 24 01\n48 ba 03 20 00 00 00 00 04 00\n0f 1f 00\n48 8b 30\n48 0f be fb\nf6 44 7e 01 0c\n75 22\n80 c3 d3\n80 fb 32\n77 09\n0f b6 f3\n48 0f a3 f2\n72 11\nc6 41 ff 5f\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 19\n48 ff c1\n84 db\n75 c6\n48 89 e6\n4c 89 f7\ne8 db 00 00 00\n48 81 c4 08 02 00 00\n5b\n41 5e\nc3\n'
p586
S'.text:0000000000402e50\n.text:0000000000402e52\n.text:0000000000402e53\n.text:0000000000402e5a\n.text:0000000000402e5d\n.text:0000000000402e60\n.text:0000000000402e65\n.text:0000000000402e6a\n.text:0000000000402e72\n.text:0000000000402e75\n.text:0000000000402e77\n.text:0000000000402e79\n.text:0000000000402e7e\n.text:0000000000402e83\n.text:0000000000402e8d\n.text:0000000000402e90\n.text:0000000000402e93\n.text:0000000000402e97\n.text:0000000000402e9c\n.text:0000000000402e9e\n.text:0000000000402ea1\n.text:0000000000402ea4\n.text:0000000000402ea6\n.text:0000000000402ea9\n.text:0000000000402ead\n.text:0000000000402eaf\n.text:0000000000402eb3\n.text:0000000000402ec0\n.text:0000000000402ec3\n.text:0000000000402ec6\n.text:0000000000402ec8\n.text:0000000000402eca\n.text:0000000000402ecd\n.text:0000000000402ed0\n.text:0000000000402ed5\n.text:0000000000402edc\n.text:0000000000402edd\n.text:0000000000402edf\n'
p587
tp588
sS'printf'
p589
(S'\n__stdcall printf(char * __format)\n'
p590
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00606090)();\u000a  return iVar1;\u000a}\u000a\u000a
p591
S'JMP qword ptr [0x00606090]\n'
p592
S'ff 25 7a 4c 20 00\n'
p593
S'.plt:0000000000401410\n'
p594
tp595
sS'fatal'
p596
(S'\n__stdcall fatal(char * msg)\n'
p597
V\u000avoid fatal(char *msg,...)\u000a\u000a{\u000a  char in_AL;\u000a  int *piVar1;\u000a  undefined8 in_RCX;\u000a  undefined8 in_RDX;\u000a  undefined8 in_RSI;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list args;\u000a  undefined4 local_d8;\u000a  undefined4 local_d4;\u000a  void **local_d0;\u000a  undefined *local_c8;\u000a  undefined local_b8 [8];\u000a  undefined8 local_b0;\u000a  undefined8 local_a8;\u000a  undefined8 local_a0;\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_b0 = in_RSI;\u000a  local_a8 = in_RDX;\u000a  local_a0 = in_RCX;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  piVar1 = __errno_location();\u000a  if (*piVar1 != 0) {\u000a    perror(ProgramName);\u000a  }\u000a  local_c8 = local_b8;\u000a  local_d0 = &args[0].overflow_arg_area;\u000a  local_d4 = 0x30;\u000a  local_d8 = 8;\u000a  vfprintf(stderr,msg,&local_d8);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p598
S'PUSH RBX\nSUB RSP,0xd0\nMOV RBX,RDI\nTEST AL,AL\nJZ 0x004023e6\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nMOV qword ptr [RSP + 0x28],RSI\nCALL 0x00401340\nCMP dword ptr [RAX],0x0\nJZ 0x00402415\nMOV RDI,qword ptr [0x00606250]\nCALL 0x00401640\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x8\nMOV RDI,qword ptr [0x00606240]\nMOV RDX,RSP\nMOV RSI,RBX\nCALL 0x00401660\nMOV EDI,0x1\nCALL 0x00401680\n'
p599
S'53\n48 81 ec d0 00 00 00\n48 89 fb\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 89 74 24 28\ne8 3c ef ff ff\n83 38 00\n74 0c\n48 8b 3d 40 3e 20 00\ne8 2b f2 ff ff\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 08 00 00 00\n48 8b 3d fe 3d 20 00\n48 89 e2\n48 89 de\ne8 13 f2 ff ff\nbf 01 00 00 00\ne8 29 f2 ff ff\n'
p600
S'.text:00000000004023a0\n.text:00000000004023a1\n.text:00000000004023a8\n.text:00000000004023ab\n.text:00000000004023ad\n.text:00000000004023af\n.text:00000000004023b4\n.text:00000000004023b9\n.text:00000000004023be\n.text:00000000004023c6\n.text:00000000004023ce\n.text:00000000004023d6\n.text:00000000004023de\n.text:00000000004023e6\n.text:00000000004023eb\n.text:00000000004023f0\n.text:00000000004023f5\n.text:00000000004023fa\n.text:00000000004023ff\n.text:0000000000402404\n.text:0000000000402407\n.text:0000000000402409\n.text:0000000000402410\n.text:0000000000402415\n.text:000000000040241a\n.text:000000000040241f\n.text:0000000000402427\n.text:000000000040242c\n.text:0000000000402434\n.text:000000000040243b\n.text:0000000000402442\n.text:0000000000402445\n.text:0000000000402448\n.text:000000000040244d\n.text:0000000000402452\n'
p601
tp602
sS'strcat'
p603
(S'\n__stdcall strcat(char * __dest, char * __src)\n'
p604
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcat(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcat_006061c0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x006061c0]\n'
p606
S'ff 25 4a 4b 20 00\n'
p607
S'.plt:0000000000401670\n'
p608
tp609
sS'InitBuffer'
p610
(S'\n__stdcall InitBuffer(Buffer * b)\n'
p611
V\u000avoid InitBuffer(Buffer *b)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  *(undefined8 *)&b->room = 10000;\u000a  pcVar1 = (char *)malloc(10000);\u000a  b->buff = pcVar1;\u000a  return;\u000a}\u000a\u000a
p612
S'PUSH RBX\nMOV RBX,RDI\nMOV qword ptr [RBX + 0x8],0x2710\nMOV EDI,0x2710\nCALL 0x00401550\nMOV qword ptr [RBX],RAX\nPOP RBX\nRET\n'
p613
S'53\n48 89 fb\n48 c7 43 08 10 27 00 00\nbf 10 27 00 00\ne8 0a ef ff ff\n48 89 03\n5b\nc3\n'
p614
S'.text:0000000000402630\n.text:0000000000402631\n.text:0000000000402634\n.text:000000000040263c\n.text:0000000000402641\n.text:0000000000402646\n.text:0000000000402649\n.text:000000000040264a\n'
p615
tp616
sS'__strdup'
p617
(S'\n__stdcall __strdup()\n'
p618
V\u000avoid __strdup(void)\u000a\u000a{\u000a  (*(code *)PTR___strdup_006060e0)();\u000a  return;\u000a}\u000a\u000a
p619
S'JMP qword ptr [0x006060e0]\n'
p620
S'ff 25 2a 4c 20 00\n'
p621
S'.plt:00000000004014b0\n'
p622
tp623
sS'snprintf'
p624
(S'\n__stdcall snprintf(char * __s, size_t __maxlen, char * __format)\n'
p625
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint snprintf(char *__s,size_t __maxlen,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_snprintf_006060b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p626
S'JMP qword ptr [0x006060b0]\n'
p627
S'ff 25 5a 4c 20 00\n'
p628
S'.plt:0000000000401450\n'
p629
tp630
sS'AddNum'
p631
(S'\n__stdcall AddNum()\n'
p632
V\u000avoid AddNum(undefined8 uParm1,ulong uParm2)\u000a\u000a{\u000a  char num [20];\u000a  char acStack40 [24];\u000a  \u000a  snprintf(acStack40,0x14,"%d",uParm2 & 0xffffffff);\u000a  AddDef(uParm1,acStack40);\u000a  return;\u000a}\u000a\u000a
p633
S'PUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV ECX,ESI\nMOV RBX,RDI\nMOV R14,RSP\nMOV ESI,0x14\nMOV EDX,0x40461a\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401450\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00402fb0\nADD RSP,0x18\nPOP RBX\nPOP R14\nRET\n'
p634
S'41 56\n53\n48 83 ec 18\n89 f1\n48 89 fb\n49 89 e6\nbe 14 00 00 00\nba 1a 46 40 00\n31 c0\n4c 89 f7\ne8 0d e5 ff ff\n48 89 df\n4c 89 f6\ne8 62 00 00 00\n48 83 c4 18\n5b\n41 5e\nc3\n'
p635
S'.text:0000000000402f20\n.text:0000000000402f22\n.text:0000000000402f23\n.text:0000000000402f27\n.text:0000000000402f29\n.text:0000000000402f2c\n.text:0000000000402f2f\n.text:0000000000402f34\n.text:0000000000402f39\n.text:0000000000402f3b\n.text:0000000000402f3e\n.text:0000000000402f43\n.text:0000000000402f46\n.text:0000000000402f49\n.text:0000000000402f4e\n.text:0000000000402f52\n.text:0000000000402f53\n.text:0000000000402f55\n'
p636
tp637
sS'qsort'
p638
(S'\n__stdcall qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)\n'
p639
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\u000a\u000a{\u000a  (*(code *)PTR_qsort_00606068)();\u000a  return;\u000a}\u000a\u000a
p640
S'JMP qword ptr [0x00606068]\n'
p641
S'ff 25 a2 4c 20 00\n'
p642
S'.plt:00000000004013c0\n'
p643
tp644
sS'register_tm_clones'
p645
(S'\n__stdcall register_tm_clones()\n'
p646
V\u000a/* WARNING: Removing unreachable block (ram,0x00401773) */\u000a/* WARNING: Removing unreachable block (ram,0x0040177d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p647
S'MOV ESI,0x606218\nPUSH RBP\nSUB RSI,0x606218\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401788\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401788\nPOP RBP\nMOV EDI,0x606218\nJMP RAX\nPOP RBP\nRET\n'
p648
S'be 18 62 60 00\n55\n48 81 ee 18 62 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 18 62 60 00\nff e0\n5d\nc3\n'
p649
S'.text:0000000000401750\n.text:0000000000401755\n.text:0000000000401756\n.text:000000000040175d\n.text:0000000000401761\n.text:0000000000401764\n.text:0000000000401767\n.text:000000000040176b\n.text:000000000040176e\n.text:0000000000401771\n.text:0000000000401773\n.text:0000000000401778\n.text:000000000040177b\n.text:000000000040177d\n.text:000000000040177e\n.text:0000000000401783\n.text:0000000000401788\n.text:0000000000401789\n'
p650
tp651
sS'AddDefTok'
p652
(S'\n__stdcall AddDefTok()\n'
p653
V\u000avoid AddDefTok(undefined8 uParm1,undefined8 uParm2)\u000a\u000a{\u000a  char name [512];\u000a  char acStack520 [512];\u000a  \u000a  snprintf(acStack520,0x200,"%s%s",uParm1,uParm2);\u000a  AddSimpleDef(acStack520);\u000a  return;\u000a}\u000a\u000a
p654
S'PUSH RBX\nSUB RSP,0x200\nMOV R8,RSI\nMOV RCX,RDI\nMOV RBX,RSP\nMOV ESI,0x200\nMOV EDX,0x404610\nXOR EAX,EAX\nMOV RDI,RBX\nCALL 0x00401450\nMOV RDI,RBX\nCALL 0x004030c0\nADD RSP,0x200\nPOP RBX\nRET\n'
p655
S'53\n48 81 ec 00 02 00 00\n49 89 f0\n48 89 f9\n48 89 e3\nbe 00 02 00 00\nba 10 46 40 00\n31 c0\n48 89 df\ne8 4b e5 ff ff\n48 89 df\ne8 b3 01 00 00\n48 81 c4 00 02 00 00\n5b\nc3\n'
p656
S'.text:0000000000402ee0\n.text:0000000000402ee1\n.text:0000000000402ee8\n.text:0000000000402eeb\n.text:0000000000402eee\n.text:0000000000402ef1\n.text:0000000000402ef6\n.text:0000000000402efb\n.text:0000000000402efd\n.text:0000000000402f00\n.text:0000000000402f05\n.text:0000000000402f08\n.text:0000000000402f0d\n.text:0000000000402f14\n.text:0000000000402f15\n'
p657
tp658
sS'freopen'
p659
(S'\n__stdcall freopen(char * __filename, char * __modes, FILE * __stream)\n'
p660
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * freopen(char *__filename,char *__modes,FILE *__stream)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_freopen_006060d0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p661
S'JMP qword ptr [0x006060d0]\n'
p662
S'ff 25 3a 4c 20 00\n'
p663
S'.plt:0000000000401490\n'
p664
tp665
sS'popen'
p666
(S'\n__stdcall popen(char * __command, char * __modes)\n'
p667
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * popen(char *__command,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_popen_00606198)();\u000a  return pFVar1;\u000a}\u000a\u000a
p668
S'JMP qword ptr [0x00606198]\n'
p669
S'ff 25 72 4b 20 00\n'
p670
S'.plt:0000000000401620\n'
p671
tp672
sS'fclose'
p673
(S'\n__stdcall fclose(FILE * __stream)\n'
p674
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_00606078)();\u000a  return iVar1;\u000a}\u000a\u000a
p675
S'JMP qword ptr [0x00606078]\n'
p676
S'ff 25 92 4c 20 00\n'
p677
S'.plt:00000000004013e0\n'
p678
tp679
sS'fwrite'
p680
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p681
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_006061d0)();\u000a  return sVar1;\u000a}\u000a\u000a
p682
S'JMP qword ptr [0x006061d0]\n'
p683
S'ff 25 3a 4b 20 00\n'
p684
S'.plt:0000000000401690\n'
p685
tp686
sS'addtokstring'
p687
(S'\n__stdcall addtokstring(String * arg, char * s)\n'
p688
V\u000avoid addtokstring(String *arg,char *s)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  char cVar2;\u000a  char cVar3;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  char copy [512];\u000a  char local_228 [511];\u000a  char local_29 [9];\u000a  \u000a  pcVar4 = local_228;\u000a  cVar3 = *(char *)&arg->val;\u000a  if (cVar3 != 0) {\u000a    ppuVar1 = __ctype_b_loc();\u000a    pcVar5 = (char *)((long)&arg->val + 1);\u000a    pcVar4 = local_228;\u000a    do {\u000a      cVar2 = cVar3;\u000a      if (((*ppuVar1)[(long)cVar3] & 0xc00) == 0) {\u000a        cVar2 = '_';\u000a      }\u000a      if (cVar3 != '_') {\u000a        cVar3 = cVar2;\u000a      }\u000a      *pcVar4 = cVar3;\u000a      pcVar4 = pcVar4 + 1;\u000a      if (local_29 <= pcVar4) break;\u000a      cVar3 = *pcVar5;\u000a      pcVar5 = pcVar5 + 1;\u000a    } while (cVar3 != 0);\u000a  }\u000a  *pcVar4 = 0;\u000a  addstring(&defines,local_228);\u000a  return;\u000a}\u000a\u000a
p689
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x208\nMOV R14,RDI\nMOV BL,byte ptr [R14]\nTEST BL,BL\nJZ 0x0040309a\nLEA R15,[0x1ff + RSP]\nMOV R12,RSP\nCALL 0x004016c0\nINC R14\nNOP dword ptr [RAX + RAX*0x1]\nMOV RCX,qword ptr [RAX]\nMOVSX RDX,BL\nMOVZX ECX,word ptr [RCX + RDX*0x2]\nAND ECX,0xc00\nTEST CX,CX\nMOV ECX,EBX\nJNZ 0x0040307a\nMOV CL,0x5f\nCMP BL,0x5f\nJZ 0x00403081\nMOV EBX,ECX\nMOV byte ptr [R12],BL\nINC R12\nCMP R12,R15\nJNC 0x0040309d\nMOVZX EBX,byte ptr [R14]\nINC R14\nTEST BL,BL\nJNZ 0x00403060\nJMP 0x0040309d\nMOV R12,RSP\nMOV byte ptr [R12],0x0\nMOV RSI,RSP\nMOV EDI,0x606268\nCALL 0x004021e0\nADD RSP,0x208\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p690
S'41 57\n41 56\n41 54\n53\n48 81 ec 08 02 00 00\n49 89 fe\n41 8a 1e\n84 db\n74 52\n4c 8d bc 24 ff 01 00 00\n49 89 e4\ne8 68 e6 ff ff\n49 ff c6\n0f 1f 44 00 00\n48 8b 08\n48 0f be d3\n0f b7 0c 51\n81 e1 00 0c 00 00\n66 85 c9\n89 d9\n75 02\nb1 5f\n80 fb 5f\n74 02\n89 cb\n41 88 1c 24\n49 ff c4\n4d 39 fc\n73 10\n41 0f b6 1e\n49 ff c6\n84 db\n75 c8\neb 03\n49 89 e4\n41 c6 04 24 00\n48 89 e6\nbf 68 62 60 00\ne8 31 f1 ff ff\n48 81 c4 08 02 00 00\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p691
S'.text:0000000000403030\n.text:0000000000403032\n.text:0000000000403034\n.text:0000000000403036\n.text:0000000000403037\n.text:000000000040303e\n.text:0000000000403041\n.text:0000000000403044\n.text:0000000000403046\n.text:0000000000403048\n.text:0000000000403050\n.text:0000000000403053\n.text:0000000000403058\n.text:000000000040305b\n.text:0000000000403060\n.text:0000000000403063\n.text:0000000000403067\n.text:000000000040306b\n.text:0000000000403071\n.text:0000000000403074\n.text:0000000000403076\n.text:0000000000403078\n.text:000000000040307a\n.text:000000000040307d\n.text:000000000040307f\n.text:0000000000403081\n.text:0000000000403085\n.text:0000000000403088\n.text:000000000040308b\n.text:000000000040308d\n.text:0000000000403091\n.text:0000000000403094\n.text:0000000000403096\n.text:0000000000403098\n.text:000000000040309a\n.text:000000000040309d\n.text:00000000004030a2\n.text:00000000004030a5\n.text:00000000004030aa\n.text:00000000004030af\n.text:00000000004030b6\n.text:00000000004030b7\n.text:00000000004030b9\n.text:00000000004030bb\n.text:00000000004030bd\n'
p692
tp693
sS'unlink'
p694
(S'\n__stdcall unlink(char * __name)\n'
p695
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint unlink(char *__name)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_unlink_00606030)();\u000a  return iVar1;\u000a}\u000a\u000a
p696
S'JMP qword ptr [0x00606030]\n'
p697
S'ff 25 da 4c 20 00\n'
p698
S'.plt:0000000000401350\n'
p699
tp700
sS'__do_global_dtors_aux'
p701
(S'\n__stdcall __do_global_dtors_aux()\n'
p702
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p703
S'CMP byte ptr [0x00606248],0x0\nJNZ 0x004017aa\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401710\nPOP RBP\nMOV byte ptr [0x00606248],0x1\nRET\n'
p704
S'80 3d b1 4a 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 9e 4a 20 00 01\nf3 c3\n'
p705
S'.text:0000000000401790\n.text:0000000000401797\n.text:0000000000401799\n.text:000000000040179a\n.text:000000000040179d\n.text:00000000004017a2\n.text:00000000004017a3\n.text:00000000004017aa\n'
p706
tp707
sS'strncpy'
p708
(S'\n__stdcall strncpy(char * __dest, char * __src, size_t __n)\n'
p709
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strncpy(char *__dest,char *__src,size_t __n)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strncpy_00606038)();\u000a  return pcVar1;\u000a}\u000a\u000a
p710
S'JMP qword ptr [0x00606038]\n'
p711
S'ff 25 d2 4c 20 00\n'
p712
S'.plt:0000000000401360\n'
p713
tp714
sS'_fini'
p715
(S'\n__stdcall _fini()\n'
p716
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p717
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p718
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p719
S'.fini:0000000000403ec4\n.fini:0000000000403ec8\n.fini:0000000000403ecc\n'
p720
tp721
sS'FindFirst'
p722
(S'\n__stdcall FindFirst(char * string, int * lines)\n'
p723
V\u000achar * FindFirst(char *string,int *lines)\u000a\u000a{\u000a  char cVar1;\u000a  int *in_RDX;\u000a  \u000a  if (in_RDX != (int *)0x0) {\u000a    *in_RDX = 0;\u000a  }\u000a  do {\u000a    cVar1 = *string;\u000a    if (cVar1 == '\u005c\u005c') {\u000a      if (string[1] == 0) {\u000a        return (char *)0x0;\u000a      }\u000a      string = string + 1;\u000a    }\u000a    else {\u000a      if (cVar1 == 0) {\u000a        return (char *)0x0;\u000a      }\u000a      if (cVar1 == (char)lines) {\u000a        return string;\u000a      }\u000a    }\u000a    if ((in_RDX != (int *)0x0) && (*string == '\u005cn')) {\u000a      *in_RDX = *in_RDX + 1;\u000a    }\u000a    string = string + 1;\u000a  } while( true );\u000a}\u000a\u000a
p724
S'TEST RDX,RDX\nJZ 0x004033b3\nMOV dword ptr [RDX],0x0\nJMP 0x004033b3\nINC RDI\nMOVZX EAX,byte ptr [RDI]\nCMP AL,0x5c\nJZ 0x004033d0\nTEST AL,AL\nJZ 0x004033e7\nCMP AL,SIL\nJNZ 0x004033d9\nJMP 0x004033e9\nCMP byte ptr [RDI + 0x1],0x0\nJZ 0x004033e7\nINC RDI\nTEST RDX,RDX\nJZ 0x004033b0\nCMP byte ptr [RDI],0xa\nJNZ 0x004033b0\nINC dword ptr [RDX]\nJMP 0x004033b0\nXOR EDI,EDI\nMOV RAX,RDI\nRET\n'
p725
S'48 85 d2\n74 0e\nc7 02 00 00 00 00\neb 06\n48 ff c7\n0f b6 07\n3c 5c\n74 16\n84 c0\n74 29\n40 38 f0\n75 16\neb 24\n80 7f 01 00\n74 11\n48 ff c7\n48 85 d2\n74 d2\n80 3f 0a\n75 cd\nff 02\neb c9\n31 ff\n48 89 f8\nc3\n'
p726
S'.text:00000000004033a0\n.text:00000000004033a3\n.text:00000000004033a5\n.text:00000000004033ab\n.text:00000000004033b0\n.text:00000000004033b3\n.text:00000000004033b6\n.text:00000000004033b8\n.text:00000000004033ba\n.text:00000000004033bc\n.text:00000000004033be\n.text:00000000004033c1\n.text:00000000004033c3\n.text:00000000004033d0\n.text:00000000004033d4\n.text:00000000004033d6\n.text:00000000004033d9\n.text:00000000004033dc\n.text:00000000004033de\n.text:00000000004033e1\n.text:00000000004033e3\n.text:00000000004033e5\n.text:00000000004033e7\n.text:00000000004033e9\n.text:00000000004033ec\n'
p727
tp728
sS'feof'
p729
(S'\n__stdcall feof(FILE * __stream)\n'
p730
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint feof(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_feof_00606118)();\u000a  return iVar1;\u000a}\u000a\u000a
p731
S'JMP qword ptr [0x00606118]\n'
p732
S'ff 25 f2 4b 20 00\n'
p733
S'.plt:0000000000401520\n'
p734
tp735
s.