(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x602dd8]\nPUSH RBP\nLEA RBP,[0x602de0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400da0\nTEST RBP,RBP\nJZ 0x004022b6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x004022a0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 66 0b 20 00\n55\n48 8d 2d 66 0b 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 0f eb ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000402260\n.text:0000000000402262\n.text:0000000000402264\n.text:0000000000402267\n.text:0000000000402269\n.text:000000000040226b\n.text:0000000000402272\n.text:0000000000402273\n.text:000000000040227a\n.text:000000000040227b\n.text:000000000040227e\n.text:0000000000402281\n.text:0000000000402284\n.text:0000000000402288\n.text:000000000040228c\n.text:0000000000402291\n.text:0000000000402294\n.text:0000000000402296\n.text:0000000000402298\n.text:00000000004022a0\n.text:00000000004022a3\n.text:00000000004022a6\n.text:00000000004022a9\n.text:00000000004022ad\n.text:00000000004022b1\n.text:00000000004022b4\n.text:00000000004022b6\n.text:00000000004022ba\n.text:00000000004022bb\n.text:00000000004022bc\n.text:00000000004022be\n.text:00000000004022c0\n.text:00000000004022c2\n.text:00000000004022c4\n'
p6
tp7
sS'_init'
p8
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p9
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00602ff8;\u000a  if (PTR___gmon_start___00602ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00602ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00602ff8]\nTEST RAX,RAX\nJZ 0x00400db2\nCALL RAX\nADD RSP,0x8\nRET\n'
p11
S'48 83 ec 08\n48 8b 05 4d 22 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p12
S'.init:0000000000400da0\n.init:0000000000400da4\n.init:0000000000400dab\n.init:0000000000400dae\n.init:0000000000400db0\n.init:0000000000400db2\n.init:0000000000400db6\n'
p13
tp14
sS'XParseColor'
p15
(S'\n__stdcall XParseColor()\n'
p16
V\u000avoid XParseColor(void)\u000a\u000a{\u000a  (*(code *)PTR_XParseColor_00603110)();\u000a  return;\u000a}\u000a\u000a
p17
S'JMP qword ptr [0x00603110]\n'
p18
S'ff 25 4a 21 20 00\n'
p19
S'.plt:0000000000400fc0\n'
p20
tp21
sS'usage'
p22
(S'\n__stdcall usage()\n'
p23
V\u000avoid usage(void)\u000a\u000a{\u000a  fprintf(stderr,"usage: %s [options]\u005cn%s\u005cn",program_name,\u000a                    \u000a          "  where options are:\u005cn  -display <display>   or   -d <display>\u005cn  -fg <color>   or   -foreground <color>\u005cn  -bg <color>   or   -background <color>\u005cn  -rv   or   -reverse\u005cn  -def   or   -default\u005cn  -name <string>\u005cn  -cursor <cursor file> <mask file>\u005cn  -cursor_name <cursor-font name>\u005cn  -xcf <ARGB cursor file> <cursor size>\u005cn  -solid <color>\u005cn  -gray   or   -grey\u005cn  -bitmap <filename>\u005cn  -mod <x> <y>\u005cn  -help\u005cn  -version\u005cn"\u000a         );\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p24
S'PUSH RAX\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x4023f8\nMOV ECX,0x402410\nXOR EAX,EAX\nCALL 0x00400e90\nMOV EDI,0x1\nCALL 0x00400fb0\n'
p25
S'50\n48 8b 3d e8 17 20 00\n48 8b 15 f1 17 20 00\nbe f8 23 40 00\nb9 10 24 40 00\n31 c0\ne8 00 f5 ff ff\nbf 01 00 00 00\ne8 16 f6 ff ff\n'
p26
S'.text:0000000000401970\n.text:0000000000401971\n.text:0000000000401978\n.text:000000000040197f\n.text:0000000000401984\n.text:0000000000401989\n.text:000000000040198b\n.text:0000000000401990\n.text:0000000000401995\n'
p27
tp28
sS'XFreeCursor'
p29
(S'\n__stdcall XFreeCursor()\n'
p30
V\u000avoid XFreeCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeCursor_006030e8)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x006030e8]\n'
p32
S'ff 25 72 21 20 00\n'
p33
S'.plt:0000000000400f70\n'
p34
tp35
sS'CreateCursorFromName'
p36
(S'\n__stdcall CreateCursorFromName(char * name)\n'
p37
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aCursor CreateCursorFromName(char *name)\u000a\u000a{\u000a  XColor XVar1;\u000a  ulong uVar2;\u000a  long lVar3;\u000a  Cursor CVar4;\u000a  int iVar5;\u000a  XColor bg;\u000a  XColor fg;\u000a  undefined local_38 [16];\u000a  undefined local_28 [16];\u000a  undefined4 local_18;\u000a  undefined4 uStack20;\u000a  undefined4 uStack16;\u000a  undefined4 uStack12;\u000a  \u000a  local_28 = NameToXColor(fore_color,*(ulong *)(*(long *)(dpy + 0xe8) + 0x60 + (long)screen * 0x80))\u000a  ;\u000a  local_38 = NameToXColor(back_color,*(ulong *)(*(long *)(dpy + 0xe8) + 0x58 + (long)screen * 0x80))\u000a  ;\u000a  XVar1 = local_28;\u000a  if (reverse == 1) {\u000a    local_18 = local_28._0_4_;\u000a    uStack20 = local_28._4_4_;\u000a    uStack16 = local_28._8_4_;\u000a    uStack12 = local_28._12_4_;\u000a    local_28._0_8_ =\u000a         SUB168((undefined  [16])local_38 & (undefined  [16])0xffffffff00000000,0) |\u000a         (ulong)SUB164((undefined  [16])local_38,0);\u000a    XVar1 = (XColor)ZEXT1216(CONCAT48(SUB164((undefined  [16])local_38 >> 0x40,0),local_28._0_8_) &\u000a                             (undefined  [12])0xffffffffffffffff);\u000a    local_38 = local_28;\u000a  }\u000a  local_28 = XVar1;\u000a  uVar2 = XmuCursorNameToIndex(name);\u000a  iVar5 = (int)(uVar2 & 0xffffffff);\u000a  if (iVar5 != -1) {\u000a    lVar3 = XLoadFont(dpy,0x402323);\u000a    if (lVar3 != 0) {\u000a      CVar4 = XCreateGlyphCursor(dpy,lVar3,lVar3,uVar2 & 0xffffffff,(ulong)(iVar5 + 1),local_28,\u000a                                 local_38);\u000a      return CVar4;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p38
S'PUSH RBX\nSUB RSP,0x40\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00603178]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x60]\nCALL 0x004021d0\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP + 0x28],RDX\nMOV RDI,qword ptr [0x00603180]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x58]\nCALL 0x004021d0\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],RDX\nCMP byte ptr [0x00603188],0x1\nJNZ 0x00401bf7\nMOVAPS XMM0,xmmword ptr [RSP + 0x20]\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nMOVAPS XMM0,xmmword ptr [RSP + 0x10]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS XMM0,xmmword ptr [RSP + 0x30]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOV RDI,RBX\nCALL 0x00400eb0\nMOV EBX,EAX\nCMP EBX,-0x1\nJZ 0x00401c46\nMOV RDI,qword ptr [0x00603190]\nMOV ESI,0x402323\nCALL 0x00400f00\nTEST RAX,RAX\nJZ 0x00401c46\nMOV RDI,qword ptr [0x00603190]\nMOV R8D,EBX\nINC R8D\nLEA RCX,[RSP + 0x10]\nMOV qword ptr [RSP],RCX\nLEA R9,[RSP + 0x20]\nMOV RSI,RAX\nMOV RDX,RAX\nMOV ECX,EBX\nCALL 0x00400ec0\nJMP 0x00401c48\nXOR EAX,EAX\nADD RSP,0x40\nPOP RBX\nRET\n'
p39
S'53\n48 83 ec 40\n48 89 fb\n48 8b 3d 09 16 20 00\n48 8b 05 1a 16 20 00\n48 8b 80 e8 00 00 00\n48 63 0d 14 16 20 00\n48 c1 e1 07\n48 8b 74 08 60\ne8 3e 06 00 00\n48 89 44 24 20\n48 89 54 24 28\n48 8b 3d dd 15 20 00\n48 8b 05 e6 15 20 00\n48 8b 80 e8 00 00 00\n48 63 0d e0 15 20 00\n48 c1 e1 07\n48 8b 74 08 58\ne8 0a 06 00 00\n48 89 44 24 10\n48 89 54 24 18\n80 3d b1 15 20 00 01\n75 1e\n0f 28 44 24 20\n0f 29 44 24 30\n0f 28 44 24 10\n0f 29 44 24 20\n0f 28 44 24 30\n0f 29 44 24 10\n48 89 df\ne8 b1 f2 ff ff\n89 c3\n83 fb ff\n74 40\n48 8b 3d 83 15 20 00\nbe 23 23 40 00\ne8 e9 f2 ff ff\n48 85 c0\n74 2a\n48 8b 3d 6d 15 20 00\n41 89 d8\n41 ff c0\n48 8d 4c 24 10\n48 89 0c 24\n4c 8d 4c 24 20\n48 89 c6\n48 89 c2\n89 d9\ne8 7c f2 ff ff\neb 02\n31 c0\n48 83 c4 40\n5b\nc3\n'
p40
S'.text:0000000000401b60\n.text:0000000000401b61\n.text:0000000000401b65\n.text:0000000000401b68\n.text:0000000000401b6f\n.text:0000000000401b76\n.text:0000000000401b7d\n.text:0000000000401b84\n.text:0000000000401b88\n.text:0000000000401b8d\n.text:0000000000401b92\n.text:0000000000401b97\n.text:0000000000401b9c\n.text:0000000000401ba3\n.text:0000000000401baa\n.text:0000000000401bb1\n.text:0000000000401bb8\n.text:0000000000401bbc\n.text:0000000000401bc1\n.text:0000000000401bc6\n.text:0000000000401bcb\n.text:0000000000401bd0\n.text:0000000000401bd7\n.text:0000000000401bd9\n.text:0000000000401bde\n.text:0000000000401be3\n.text:0000000000401be8\n.text:0000000000401bed\n.text:0000000000401bf2\n.text:0000000000401bf7\n.text:0000000000401bfa\n.text:0000000000401bff\n.text:0000000000401c01\n.text:0000000000401c04\n.text:0000000000401c06\n.text:0000000000401c0d\n.text:0000000000401c12\n.text:0000000000401c17\n.text:0000000000401c1a\n.text:0000000000401c1c\n.text:0000000000401c23\n.text:0000000000401c26\n.text:0000000000401c29\n.text:0000000000401c2e\n.text:0000000000401c32\n.text:0000000000401c37\n.text:0000000000401c3a\n.text:0000000000401c3d\n.text:0000000000401c3f\n.text:0000000000401c44\n.text:0000000000401c46\n.text:0000000000401c48\n.text:0000000000401c4c\n.text:0000000000401c4d\n'
p41
tp42
sS'XCreatePixmapCursor'
p43
(S'\n__stdcall XCreatePixmapCursor()\n'
p44
V\u000avoid XCreatePixmapCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreatePixmapCursor_00603060)();\u000a  return;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x00603060]\n'
p46
S'ff 25 fa 21 20 00\n'
p47
S'.plt:0000000000400e60\n'
p48
tp49
sS'main'
p50
(S'\n__stdcall main(char * * argv)\n'
p51
V\u000aint main(char **argv)\u000a\u000a{\u000a  char *__s2;\u000a  int iVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  FILE *__stream;\u000a  Display *pDVar4;\u000a  Window WVar5;\u000a  uint uVar6;\u000a  int iVar7;\u000a  undefined8 uVar8;\u000a  Cursor CVar9;\u000a  Pixmap bitmap;\u000a  ulong uVar10;\u000a  long lVar11;\u000a  char **in_RSI;\u000a  int iVar12;\u000a  char *solid_color;\u000a  char *xcf;\u000a  char *cursor_name;\u000a  char *cursor_mask;\u000a  char *cursor_file;\u000a  char *name;\u000a  char *display_name;\u000a  uint local_9c;\u000a  int local_84;\u000a  uint local_7c;\u000a  char *local_78;\u000a  char *local_70;\u000a  char *local_68;\u000a  char *local_60;\u000a  char *local_58;\u000a  char *local_50;\u000a  char *local_48;\u000a  char *local_40;\u000a  uint local_38;\u000a  uint local_34;\u000a  \u000a  iVar1 = (int)argv;\u000a  program_name = *in_RSI;\u000a  if (iVar1 < 2) {\u000aLAB_004015fd:\u000a    local_7c = 0x20;\u000a    uVar6 = 0;\u000a    local_9c = 0;\u000a    bVar3 = false;\u000a    local_40 = (char *)0x0;\u000a    local_48 = (char *)0x0;\u000a    local_50 = (char *)0x0;\u000a    local_58 = (char *)0x0;\u000a    local_60 = (char *)0x0;\u000a    local_70 = (char *)0x0;\u000a    local_68 = (char *)0x0;\u000a    bVar2 = false;\u000a    local_78 = (char *)0x0;\u000a    local_84 = 0;\u000a  }\u000a  else {\u000a    uVar6 = 0;\u000a    local_9c = 0;\u000a    bVar3 = false;\u000a    local_40 = (char *)0x0;\u000a    local_48 = (char *)0x0;\u000a    local_50 = (char *)0x0;\u000a    local_58 = (char *)0x0;\u000a    local_60 = (char *)0x0;\u000a    local_70 = (char *)0x0;\u000a    local_68 = (char *)0x0;\u000a    local_7c = 0x20;\u000a    bVar2 = false;\u000a    local_78 = (char *)0x0;\u000a    local_84 = 0;\u000a    iVar12 = 1;\u000a    do {\u000a      lVar11 = (long)iVar12;\u000a      __s2 = in_RSI[lVar11];\u000a      iVar7 = strcmp("-display",__s2);\u000a      if ((iVar7 == 0) || (((*__s2 == '-' && (__s2[1] == 'd')) && (__s2[2] == 0)))) {\u000a        iVar12 = iVar12 + 1;\u000a        if (iVar1 <= iVar12) goto LAB_004015e2;\u000a        local_40 = in_RSI[(long)iVar12];\u000a      }\u000a      else {\u000a        __s2 = in_RSI[lVar11];\u000a        iVar7 = strcmp("-help",__s2);\u000a        if (iVar7 == 0) goto LAB_004015e2;\u000a        iVar7 = strcmp("-version",__s2);\u000a        if (iVar7 == 0) goto LAB_004015e7;\u000a        iVar7 = strcmp("-def",__s2);\u000a        if ((iVar7 == 0) || (iVar7 = strcmp("-default",__s2), iVar7 == 0)) {\u000a          bVar3 = true;\u000a        }\u000a        else {\u000a          iVar7 = strcmp("-name",__s2);\u000a          if (iVar7 == 0) {\u000a            iVar12 = iVar12 + 1;\u000a            if (iVar1 <= iVar12) goto LAB_004015f8;\u000a            local_48 = in_RSI[(long)iVar12];\u000a            local_9c = local_9c + 1;\u000a          }\u000a          else {\u000a            iVar7 = strcmp("-cursor",__s2);\u000a            if (iVar7 == 0) {\u000a              iVar7 = iVar12 + 1;\u000a              if ((iVar1 <= iVar7) || (iVar12 = iVar12 + 2, iVar1 <= iVar12)) goto LAB_004015f8;\u000a              local_50 = in_RSI[(long)iVar7];\u000a              local_58 = in_RSI[(long)iVar12];\u000a              local_9c = local_9c + 1;\u000a            }\u000a            else {\u000a              iVar7 = strcmp("-cursor_name",__s2);\u000a              if (iVar7 == 0) {\u000a                iVar12 = iVar12 + 1;\u000a                if (iVar1 <= iVar12) goto LAB_004015f8;\u000a                local_60 = in_RSI[(long)iVar12];\u000a                local_9c = local_9c + 1;\u000a              }\u000a              else {\u000a                iVar7 = strcmp("-xcf",__s2);\u000a                if (iVar7 != 0) {\u000a                  if ((((*__s2 == '-') && (__s2[1] == 'f')) && (__s2[2] == 'g')) && (__s2[3] == 0))\u000a                  {\u000aLAB_00401294:\u000a                    iVar12 = iVar12 + 1;\u000a                    if (iVar12 < iVar1) {\u000a                      fore_color = in_RSI[(long)iVar12];\u000a                      goto LAB_004015a8;\u000a                    }\u000a                  }\u000a                  else {\u000a                    __s2 = in_RSI[lVar11];\u000a                    iVar7 = strcmp("-foreground",__s2);\u000a                    if (iVar7 == 0) goto LAB_00401294;\u000a                    if (((*__s2 == '-') && (__s2[1] == 'b')) && ((__s2[2] == 'g' && (__s2[3] == 0)))\u000a                       ) {\u000aLAB_004012b4:\u000a                      iVar12 = iVar12 + 1;\u000a                      if (iVar12 < iVar1) {\u000a                        back_color = in_RSI[(long)iVar12];\u000a                        goto LAB_004015a8;\u000a                      }\u000a                    }\u000a                    else {\u000a                      __s2 = in_RSI[lVar11];\u000a                      iVar7 = strcmp("-background",__s2);\u000a                      if (iVar7 == 0) goto LAB_004012b4;\u000a                      iVar7 = strcmp("-solid",__s2);\u000a                      if (iVar7 == 0) {\u000a                        iVar12 = iVar12 + 1;\u000a                        if (iVar1 <= iVar12) goto LAB_004015f8;\u000a                        local_70 = in_RSI[(long)iVar12];\u000aLAB_00401306:\u000a                        uVar6 = uVar6 + 1;\u000a                        goto LAB_004015a8;\u000a                      }\u000a                      iVar7 = strcmp("-gray",__s2);\u000a                      if ((iVar7 == 0) || (iVar7 = strcmp("-grey",__s2), iVar7 == 0)) {\u000a                        uVar6 = uVar6 + 1;\u000a                        bVar2 = true;\u000a                        goto LAB_004015a8;\u000a                      }\u000a                      iVar7 = strcmp("-bitmap",__s2);\u000a                      if (iVar7 == 0) {\u000a                        iVar12 = iVar12 + 1;\u000a                        if (iVar12 < iVar1) {\u000a                          local_78 = in_RSI[(long)iVar12];\u000a                          goto LAB_00401306;\u000a                        }\u000a                      }\u000a                      else {\u000a                        iVar7 = strcmp("-mod",__s2);\u000a                        if (iVar7 == 0) {\u000a                          if (iVar12 + 1 < iVar1) {\u000a                            local_84 = atoi(in_RSI[(long)(iVar12 + 1)]);\u000a                            iVar12 = iVar12 + 2;\u000a                            if (iVar12 < iVar1) {\u000a                              if (local_84 < 1) {\u000a                                local_84 = 1;\u000a                              }\u000a                              atoi(in_RSI[(long)iVar12]);\u000a                              goto LAB_00401306;\u000a                            }\u000a                          }\u000a                        }\u000a                        else {\u000a                          if (((((*__s2 == '-') && (__s2[1] == 'r')) && (__s2[2] == 'v')) &&\u000a                              (__s2[3] == 0)) ||\u000a                             (iVar7 = strcmp("-reverse",in_RSI[lVar11]), iVar7 == 0)) {\u000a                            reverse = 1;\u000a                            goto LAB_004015a8;\u000a                          }\u000a                        }\u000a                      }\u000a                    }\u000a                  }\u000aLAB_004015f8:\u000a                  usage();\u000a                  goto LAB_004015fd;\u000a                }\u000a                iVar7 = iVar12 + 1;\u000a                if ((iVar1 <= iVar7) || (iVar12 = iVar12 + 2, iVar1 <= iVar12)) goto LAB_004015f8;\u000a                local_68 = in_RSI[(long)iVar7];\u000a                local_7c = atoi(in_RSI[(long)iVar12]);\u000a                if ((int)local_7c < 1) {\u000a                  local_7c = 0x20;\u000a                }\u000a                local_9c = local_9c + 1;\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000aLAB_004015a8:\u000a      iVar12 = iVar12 + 1;\u000a    } while (iVar12 < iVar1);\u000a    if (1 < (int)uVar6) {\u000a      fprintf(stderr,"%s: choose only one of {solid, gray, bitmap, mod}\u005cn",program_name);\u000a      usage();\u000aLAB_004015e2:\u000a      usage();\u000aLAB_004015e7:\u000a      puts("xsetroot 1.1.1");\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(0);\u000a    }\u000a  }\u000a  dpy = (Display *)XOpenDisplay(local_40);\u000a  __s2 = program_name;\u000a  __stream = stderr;\u000a  if (dpy != (Display *)0x0) {\u000a    screen = *(int *)(dpy + 0xe0);\u000a    root = *(Window *)(*(long *)(dpy + 0xe8) + 0x10 + (long)screen * 0x80);\u000a    if (local_50 != (char *)0x0) {\u000a      CVar9 = CreateCursorFromFiles(local_50,local_58);\u000a      XDefineCursor(dpy,root,CVar9);\u000a      XFreeCursor(dpy,CVar9);\u000a    }\u000a    if ((local_60 != (char *)0x0) && (CVar9 = CreateCursorFromName(local_60), CVar9 != 0)) {\u000a      XDefineCursor(dpy,root,CVar9);\u000a      XFreeCursor(dpy,CVar9);\u000a    }\u000a    if (local_68 != (char *)0x0) {\u000a      lVar11 = XcursorFilenameLoadImages(local_68,(ulong)local_7c);\u000a      if (lVar11 == 0) {\u000a        fprintf(stderr,"Invalid cursor file \u005c"%s\u005c"\u005cn",local_68);\u000a      }\u000a      else {\u000a        lVar11 = XcursorImagesLoadCursor(dpy,lVar11);\u000a        if (lVar11 != 0) {\u000a          XDefineCursor(dpy,root,lVar11);\u000a          XFreeCursor(dpy,lVar11);\u000a        }\u000a      }\u000a    }\u000a    if (bVar2) {\u000a      bitmap = XCreateBitmapFromData(dpy,root,gray_bits);\u000a      SetBackgroundToBitmap(bitmap);\u000a    }\u000a    WVar5 = root;\u000a    pDVar4 = dpy;\u000a    if (local_70 != (char *)0x0) {\u000a      uVar10 = NameToPixel(local_70,*(ulong *)(*(long *)(dpy + 0xe8) + 0x60 + (long)screen * 0x80));\u000a      XSetWindowBackground(pDVar4,WVar5,uVar10);\u000a      XClearWindow(dpy,root);\u000a      unsave_past = 1;\u000a    }\u000a    if (local_78 != (char *)0x0) {\u000a      bitmap = ReadBitmapFile(local_78,&local_34,&local_38,(int *)0x0,(int *)0x0);\u000a      SetBackgroundToBitmap(bitmap);\u000a    }\u000a    if (local_84 != 0) {\u000a      bitmap = MakeModulaBitmap();\u000a      SetBackgroundToBitmap(bitmap);\u000a    }\u000a    if (local_48 != (char *)0x0) {\u000a      XStoreName(dpy,root);\u000a    }\u000a    if ((bVar3) || ((local_9c | uVar6) == 0)) {\u000a      if (local_50 == (char *)0x0) {\u000a        XUndefineCursor(dpy,root);\u000a      }\u000a      if (uVar6 == 0) {\u000a        XSetWindowBackgroundPixmap(dpy,root,0);\u000a        XClearWindow(dpy,root);\u000a        unsave_past = 1;\u000a      }\u000a    }\u000a    FixupState();\u000a    XCloseDisplay();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  uVar8 = XDisplayName(local_40);\u000a  fprintf(__stream,"%s:  unable to open display \u005c'%s\u005c'\u005cn",__s2,uVar8);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(2);\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x78\nMOV R13,RSI\nMOV R14D,EDI\nMOV RAX,qword ptr [R13]\nMOV qword ptr [0x00603170],RAX\nCMP R14D,0x2\nJL 0x004015fd\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV dword ptr [RSP + 0xc],0x0\nMOV dword ptr [RSP + 0x1c],0x0\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x68],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x60],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x58],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x50],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x48],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x38],RAX\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x40],RAX\nMOV dword ptr [RSP + 0x2c],0x20\nMOV dword ptr [RSP + 0x28],0x0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x30],RAX\nMOV dword ptr [RSP + 0x24],0x0\nMOV dword ptr [RSP + 0x20],0x0\nMOV R12D,0x1\nJMP 0x00401380\nINC R12D\nCMP R12D,R14D\nJGE 0x004015f8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x60],RAX\nINC dword ptr [RSP + 0xc]\nJMP 0x004015a8\nLEA EAX,[R12 + 0x1]\nCMP EAX,R14D\nJGE 0x004015f8\nADD R12D,0x2\nCMP R12D,R14D\nJGE 0x004015f8\nCDQE\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x58],RAX\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x50],RAX\nINC dword ptr [RSP + 0xc]\nJMP 0x004015a8\nINC R12D\nCMP R12D,R14D\nJGE 0x004015f8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x48],RAX\nINC dword ptr [RSP + 0xc]\nJMP 0x004015a8\nLEA EAX,[R12 + 0x1]\nCMP EAX,R14D\nJGE 0x004015f8\nADD R12D,0x2\nCMP R12D,R14D\nJGE 0x004015f8\nCDQE\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x40],RAX\nMOVSXD RAX,R12D\nMOV RDI,qword ptr [R13 + RAX*0x8]\nCALL 0x00400f80\nTEST EAX,EAX\nMOV ECX,0x20\nCMOVLE EAX,ECX\nMOV dword ptr [RSP + 0x2c],EAX\nINC dword ptr [RSP + 0xc]\nJMP 0x004015a8\nINC R12D\nCMP R12D,R14D\nJGE 0x004015f8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [0x00603178],RAX\nJMP 0x004015a8\nINC R12D\nCMP R12D,R14D\nJGE 0x004015f8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [0x00603180],RAX\nJMP 0x004015a8\nMOV RAX,qword ptr [RSP + 0x10]\nINC EAX\nMOV qword ptr [RSP + 0x10],RAX\nMOV dword ptr [RSP + 0x28],0x1\nJMP 0x004015a8\nINC R12D\nCMP R12D,R14D\nJGE 0x004015f8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x38],RAX\nMOV RAX,qword ptr [RSP + 0x10]\nINC EAX\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x004015a8\nINC R12D\nCMP R12D,R14D\nJGE 0x004015f8\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x30],RAX\nJMP 0x00401306\nLEA EAX,[R12 + 0x1]\nCMP EAX,R14D\nJGE 0x004015f8\nCDQE\nMOV RDI,qword ptr [R13 + RAX*0x8]\nCALL 0x00400f80\nADD R12D,0x2\nCMP R12D,R14D\nJGE 0x004015f8\nTEST EAX,EAX\nMOV EBX,0x1\nCMOVLE EAX,EBX\nMOV dword ptr [RSP + 0x24],EAX\nMOVSXD RAX,R12D\nMOV RDI,qword ptr [R13 + RAX*0x8]\nCALL 0x00400f80\nTEST EAX,EAX\nCMOVLE EAX,EBX\nMOV dword ptr [RSP + 0x20],EAX\nJMP 0x00401306\nMOVSXD RBP,R12D\nMOV RBX,qword ptr [R13 + RBP*0x8]\nMOV EDI,0x4022e4\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x00401580\nCMP byte ptr [RBX],0x2d\nJNZ 0x004013c0\nCMP byte ptr [RBX + 0x1],0x64\nJNZ 0x004013c0\nCMP byte ptr [RBX + 0x2],0x0\nJZ 0x00401580\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV R15,qword ptr [R13 + RBP*0x8]\nMOV EDI,0x4022f0\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004015e2\nMOV EDI,0x4022f6\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004015e7\nMOV EDI,0x40230e\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004015a0\nMOV EDI,0x402313\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004015a0\nMOV EDI,0x40231c\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004011c8\nMOV EDI,0x402322\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004011ea\nMOV EDI,0x40232a\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x00401227\nMOV EDI,0x402337\nMOV RSI,R15\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x00401249\nCMP byte ptr [R15],0x2d\nJNZ 0x0040148c\nCMP byte ptr [R15 + 0x1],0x66\nJNZ 0x0040148c\nCMP byte ptr [R15 + 0x2],0x67\nJNZ 0x0040148c\nCMP byte ptr [R15 + 0x3],0x0\nJZ 0x00401294\nMOV RBX,qword ptr [R13 + RBP*0x8]\nMOV EDI,0x402340\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x00401294\nCMP byte ptr [RBX],0x2d\nJNZ 0x004014c1\nCMP byte ptr [RBX + 0x1],0x62\nJNZ 0x004014c1\nCMP byte ptr [RBX + 0x2],0x67\nJNZ 0x004014c1\nCMP byte ptr [RBX + 0x3],0x0\nJZ 0x004012b4\nMOV RBX,qword ptr [R13 + RBP*0x8]\nMOV EDI,0x402350\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004012b4\nMOV EDI,0x40235c\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004012ed\nMOV EDI,0x402363\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004012d4\nMOV EDI,0x402369\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x004012d4\nMOV EDI,0x40236f\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x00401317\nMOV EDI,0x402377\nMOV RSI,RBX\nCALL 0x00400e70\nTEST EAX,EAX\nJZ 0x00401332\nCMP byte ptr [RBX],0x2d\nJNZ 0x0040155b\nCMP byte ptr [RBX + 0x1],0x72\nJNZ 0x0040155b\nCMP byte ptr [RBX + 0x2],0x76\nJNZ 0x0040155b\nCMP byte ptr [RBX + 0x3],0x0\nJZ 0x00401572\nMOV RSI,qword ptr [R13 + RBP*0x8]\nMOV EDI,0x402380\nCALL 0x00400e70\nTEST EAX,EAX\nJNZ 0x004015f8\nMOV byte ptr [0x00603188],0x1\nJMP 0x004015a8\nINC R12D\nCMP R12D,R14D\nJGE 0x004015e2\nMOVSXD RAX,R12D\nMOV RAX,qword ptr [R13 + RAX*0x8]\nMOV qword ptr [RSP + 0x68],RAX\nJMP 0x004015a8\nMOV dword ptr [RSP + 0x1c],0x1\nINC R12D\nCMP R12D,R14D\nJL 0x00401380\nMOV R13,qword ptr [RSP + 0x10]\nCMP R13D,0x2\nJL 0x00401668\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x402389\nXOR EAX,EAX\nCALL 0x00400e90\nCALL 0x00401970\nCALL 0x00401970\nMOV EDI,0x4022ff\nCALL 0x00400e10\nXOR EDI,EDI\nCALL 0x00400fb0\nCALL 0x00401970\nMOV dword ptr [RSP + 0x2c],0x20\nXOR R13D,R13D\nMOV dword ptr [RSP + 0xc],0x0\nMOV dword ptr [RSP + 0x1c],0x0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x68],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x60],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x58],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x50],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x48],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x38],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x40],RAX\nMOV dword ptr [RSP + 0x28],0x0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x30],RAX\nMOV dword ptr [RSP + 0x24],0x0\nMOV dword ptr [RSP + 0x20],0x0\nMOV RBP,qword ptr [RSP + 0x68]\nMOV RDI,RBP\nCALL 0x00400e80\nMOV qword ptr [0x00603190],RAX\nTEST RAX,RAX\nJNZ 0x004016b6\nMOV R14,qword ptr [0x00603160]\nMOV RBX,qword ptr [0x00603170]\nMOV RDI,RBP\nCALL 0x00400ef0\nMOV RCX,RAX\nMOV ESI,0x4023bc\nXOR EAX,EAX\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x00400e90\nMOV EDI,0x2\nCALL 0x00400fb0\nMOVSXD RAX,dword ptr [0xe0 + RAX]\nMOV dword ptr [0x00603198],EAX\nMOV RCX,qword ptr [0x00603190]\nMOV RCX,qword ptr [0xe8 + RCX]\nSHL RAX,0x7\nMOV RAX,qword ptr [RCX + RAX*0x1 + 0x10]\nMOV qword ptr [0x006031a0],RAX\nMOV R15,qword ptr [RSP + 0x58]\nTEST R15,R15\nJZ 0x00401720\nMOV RDI,R15\nMOV RSI,qword ptr [RSP + 0x50]\nCALL 0x004019a0\nMOV RBX,RAX\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RDX,RBX\nCALL 0x00400f20\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,RBX\nCALL 0x00400f70\nMOV RDI,qword ptr [RSP + 0x48]\nTEST RDI,RDI\nMOV R12,qword ptr [RSP + 0x38]\nMOV RBP,qword ptr [RSP + 0x40]\nJZ 0x00401766\nCALL 0x00401b60\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00401766\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RDX,RBX\nCALL 0x00400f20\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,RBX\nCALL 0x00400f70\nTEST RBP,RBP\nJNZ 0x004018e5\nCMP dword ptr [RSP + 0x28],0x0\nJZ 0x004017ab\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV EDX,0x603148\nMOV ECX,0x2\nMOV R8D,0x2\nCALL 0x00400e50\nMOV ESI,0x2\nMOV EDX,0x2\nMOV RDI,RAX\nCALL 0x00401c50\nTEST R12,R12\nJZ 0x00401805\nMOV RBX,qword ptr [0x00603190]\nMOV R14,qword ptr [0x006031a0]\nMOV RAX,qword ptr [0xe8 + RBX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x60]\nMOV RDI,R12\nCALL 0x00401df0\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00400f90\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nCALL 0x00400dd0\nMOV byte ptr [0x006031a8],0x1\nMOV RDI,qword ptr [RSP + 0x30]\nTEST RDI,RDI\nJZ 0x00401833\nLEA RSI,[RSP + 0x74]\nLEA RDX,[RSP + 0x70]\nXOR ECX,ECX\nXOR R8D,R8D\nCALL 0x00401ef0\nMOV ESI,dword ptr [RSP + 0x74]\nMOV EDX,dword ptr [RSP + 0x70]\nMOV RDI,RAX\nCALL 0x00401c50\nMOV EDI,dword ptr [RSP + 0x24]\nTEST EDI,EDI\nJZ 0x00401856\nMOV ESI,dword ptr [RSP + 0x20]\nCALL 0x00401f80\nMOV ESI,0x10\nMOV EDX,0x10\nMOV RDI,RAX\nCALL 0x00401c50\nMOV RDX,qword ptr [RSP + 0x60]\nTEST RDX,RDX\nJZ 0x00401873\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nCALL 0x00400e20\nCMP dword ptr [RSP + 0x1c],0x0\nJNZ 0x00401881\nOR dword ptr [RSP + 0xc],R13D\nJNZ 0x004018cd\nTEST R15,R15\nJNZ 0x00401899\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nCALL 0x00400f10\nTEST R13D,R13D\nJNZ 0x004018cd\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nXOR EDX,EDX\nCALL 0x00400f60\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nCALL 0x00400dd0\nMOV byte ptr [0x006031a8],0x1\nCALL 0x00402010\nMOV RDI,qword ptr [0x00603190]\nCALL 0x00400fe0\nXOR EDI,EDI\nCALL 0x00400fb0\nMOV RDI,RBP\nMOV ESI,dword ptr [RSP + 0x2c]\nCALL 0x00400f30\nTEST RAX,RAX\nJNZ 0x0040191c\nMOV RDI,qword ptr [0x00603160]\nMOV ESI,0x4023de\nXOR EAX,EAX\nMOV RDX,RBP\nCALL 0x00400e90\nCMP dword ptr [RSP + 0x28],0x0\nJNZ 0x00401776\nJMP 0x004017ab\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,RAX\nCALL 0x00400ea0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040176f\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RDX,RBX\nCALL 0x00400f20\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,RBX\nCALL 0x00400f70\nCMP dword ptr [RSP + 0x28],0x0\nJZ 0x004017ab\nJMP 0x00401776\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 78\n49 89 f5\n41 89 fe\n49 8b 45 00\n48 89 05 41 20 20 00\n41 83 fe 02\n0f 8c c4 04 00 00\n31 c0\n48 89 44 24 10\nc7 44 24 0c 00 00 00 00\nc7 44 24 1c 00 00 00 00\nb8 00 00 00 00\n48 89 44 24 68\nb8 00 00 00 00\n48 89 44 24 60\nb8 00 00 00 00\n48 89 44 24 58\nb8 00 00 00 00\n48 89 44 24 50\nb8 00 00 00 00\n48 89 44 24 48\nb8 00 00 00 00\n48 89 44 24 38\nb8 00 00 00 00\n48 89 44 24 40\nc7 44 24 2c 20 00 00 00\nc7 44 24 28 00 00 00 00\n31 c0\n48 89 44 24 30\nc7 44 24 24 00 00 00 00\nc7 44 24 20 00 00 00 00\n41 bc 01 00 00 00\ne9 b8 01 00 00\n41 ff c4\n45 39 f4\n0f 8d 24 04 00 00\n49 63 c4\n49 8b 44 c5 00\n48 89 44 24 60\nff 44 24 0c\ne9 be 03 00 00\n41 8d 44 24 01\n44 39 f0\n0f 8d 00 04 00 00\n41 83 c4 02\n45 39 f4\n0f 8d f3 03 00 00\n48 98\n49 8b 44 c5 00\n48 89 44 24 58\n49 63 c4\n49 8b 44 c5 00\n48 89 44 24 50\nff 44 24 0c\ne9 81 03 00 00\n41 ff c4\n45 39 f4\n0f 8d c5 03 00 00\n49 63 c4\n49 8b 44 c5 00\n48 89 44 24 48\nff 44 24 0c\ne9 5f 03 00 00\n41 8d 44 24 01\n44 39 f0\n0f 8d a1 03 00 00\n41 83 c4 02\n45 39 f4\n0f 8d 94 03 00 00\n48 98\n49 8b 44 c5 00\n48 89 44 24 40\n49 63 c4\n49 8b 7c c5 00\ne8 03 fd ff ff\n85 c0\nb9 20 00 00 00\n0f 4e c1\n89 44 24 2c\nff 44 24 0c\ne9 14 03 00 00\n41 ff c4\n45 39 f4\n0f 8d 58 03 00 00\n49 63 c4\n49 8b 44 c5 00\n48 89 05 c9 1e 20 00\ne9 f4 02 00 00\n41 ff c4\n45 39 f4\n0f 8d 38 03 00 00\n49 63 c4\n49 8b 44 c5 00\n48 89 05 b1 1e 20 00\ne9 d4 02 00 00\n48 8b 44 24 10\nff c0\n48 89 44 24 10\nc7 44 24 28 01 00 00 00\ne9 bb 02 00 00\n41 ff c4\n45 39 f4\n0f 8d ff 02 00 00\n49 63 c4\n49 8b 44 c5 00\n48 89 44 24 38\n48 8b 44 24 10\nff c0\n48 89 44 24 10\ne9 91 02 00 00\n41 ff c4\n45 39 f4\n0f 8d d5 02 00 00\n49 63 c4\n49 8b 44 c5 00\n48 89 44 24 30\neb d4\n41 8d 44 24 01\n44 39 f0\n0f 8d b8 02 00 00\n48 98\n49 8b 7c c5 00\ne8 34 fc ff ff\n41 83 c4 02\n45 39 f4\n0f 8d 9f 02 00 00\n85 c0\nbb 01 00 00 00\n0f 4e c3\n89 44 24 24\n49 63 c4\n49 8b 7c c5 00\ne8 0c fc ff ff\n85 c0\n0f 4e c3\n89 44 24 20\neb 87\n49 63 ec\n49 8b 5c ed 00\nbf e4 22 40 00\n48 89 de\ne8 db fa ff ff\n85 c0\n0f 84 e3 01 00 00\n80 3b 2d\n75 1e\n80 7b 01 64\n75 18\n80 7b 02 00\n0f 84 ce 01 00 00\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4d 8b 7c ed 00\nbf f0 22 40 00\n4c 89 fe\ne8 9e fa ff ff\n85 c0\n0f 84 08 02 00 00\nbf f6 22 40 00\n4c 89 fe\ne8 89 fa ff ff\n85 c0\n0f 84 f8 01 00 00\nbf 0e 23 40 00\n4c 89 fe\ne8 74 fa ff ff\n85 c0\n0f 84 9c 01 00 00\nbf 13 23 40 00\n4c 89 fe\ne8 5f fa ff ff\n85 c0\n0f 84 87 01 00 00\nbf 1c 23 40 00\n4c 89 fe\ne8 4a fa ff ff\n85 c0\n0f 84 9a fd ff ff\nbf 22 23 40 00\n4c 89 fe\ne8 35 fa ff ff\n85 c0\n0f 84 a7 fd ff ff\nbf 2a 23 40 00\n4c 89 fe\ne8 20 fa ff ff\n85 c0\n0f 84 cf fd ff ff\nbf 37 23 40 00\n4c 89 fe\ne8 0b fa ff ff\n85 c0\n0f 84 dc fd ff ff\n41 80 3f 2d\n75 19\n41 80 7f 01 66\n75 12\n41 80 7f 02 67\n75 0b\n41 80 7f 03 00\n0f 84 08 fe ff ff\n49 8b 5c ed 00\nbf 40 23 40 00\n48 89 de\ne8 d2 f9 ff ff\n85 c0\n0f 84 ee fd ff ff\n80 3b 2d\n75 16\n80 7b 01 62\n75 10\n80 7b 02 67\n75 0a\n80 7b 03 00\n0f 84 f3 fd ff ff\n49 8b 5c ed 00\nbf 50 23 40 00\n48 89 de\ne8 9d f9 ff ff\n85 c0\n0f 84 d9 fd ff ff\nbf 5c 23 40 00\n48 89 de\ne8 88 f9 ff ff\n85 c0\n0f 84 fd fd ff ff\nbf 63 23 40 00\n48 89 de\ne8 73 f9 ff ff\n85 c0\n0f 84 cf fd ff ff\nbf 69 23 40 00\n48 89 de\ne8 5e f9 ff ff\n85 c0\n0f 84 ba fd ff ff\nbf 6f 23 40 00\n48 89 de\ne8 49 f9 ff ff\n85 c0\n0f 84 e8 fd ff ff\nbf 77 23 40 00\n48 89 de\ne8 34 f9 ff ff\n85 c0\n0f 84 ee fd ff ff\n80 3b 2d\n75 12\n80 7b 01 72\n75 0c\n80 7b 02 76\n75 06\n80 7b 03 00\n74 17\n49 8b 74 ed 00\nbf 80 23 40 00\ne8 06 f9 ff ff\n85 c0\n0f 85 86 00 00 00\nc6 05 0f 1c 20 00 01\neb 2d\n41 ff c4\n45 39 f4\n7d 5a\n49 63 c4\n49 8b 44 c5 00\n48 89 44 24 68\neb 11\nc7 44 24 1c 01 00 00 00\n41 ff c4\n45 39 f4\n0f 8c cc fd ff ff\n4c 8b 6c 24 10\n41 83 fd 02\n0f 8c a5 00 00 00\n48 8b 3d 96 1b 20 00\n48 8b 15 9f 1b 20 00\nbe 89 23 40 00\n31 c0\ne8 b3 f8 ff ff\ne8 8e 03 00 00\ne8 89 03 00 00\nbf ff 22 40 00\ne8 1f f8 ff ff\n31 ff\ne8 b8 f9 ff ff\ne8 73 03 00 00\nc7 44 24 2c 20 00 00 00\n45 31 ed\nc7 44 24 0c 00 00 00 00\nc7 44 24 1c 00 00 00 00\n31 c0\n48 89 44 24 68\n31 c0\n48 89 44 24 60\n31 c0\n48 89 44 24 58\n31 c0\n48 89 44 24 50\n31 c0\n48 89 44 24 48\n31 c0\n48 89 44 24 38\n31 c0\n48 89 44 24 40\nc7 44 24 28 00 00 00 00\n31 c0\n48 89 44 24 30\nc7 44 24 24 00 00 00 00\nc7 44 24 20 00 00 00 00\n48 8b 6c 24 68\n48 89 ef\ne8 0b f8 ff ff\n48 89 05 14 1b 20 00\n48 85 c0\n75 35\n4c 8b 35 d8 1a 20 00\n48 8b 1d e1 1a 20 00\n48 89 ef\ne8 59 f8 ff ff\n48 89 c1\nbe bc 23 40 00\n31 c0\n4c 89 f7\n48 89 da\ne8 e4 f7 ff ff\nbf 02 00 00 00\ne8 fa f8 ff ff\n48 63 80 e0 00 00 00\n89 05 d5 1a 20 00\n48 8b 0d c6 1a 20 00\n48 8b 89 e8 00 00 00\n48 c1 e0 07\n48 8b 44 01 10\n48 89 05 bf 1a 20 00\n4c 8b 7c 24 58\n4d 85 ff\n74 35\n4c 89 ff\n48 8b 74 24 50\ne8 a8 02 00 00\n48 89 c3\n48 8b 3d 8e 1a 20 00\n48 8b 35 97 1a 20 00\n48 89 da\ne8 0f f8 ff ff\n48 8b 3d 78 1a 20 00\n48 89 de\ne8 50 f8 ff ff\n48 8b 7c 24 48\n48 85 ff\n4c 8b 64 24 38\n48 8b 6c 24 40\n74 32\ne8 27 04 00 00\n48 89 c3\n48 85 db\n74 25\n48 8b 3d 48 1a 20 00\n48 8b 35 51 1a 20 00\n48 89 da\ne8 c9 f7 ff ff\n48 8b 3d 32 1a 20 00\n48 89 de\ne8 0a f8 ff ff\n48 85 ed\n0f 85 76 01 00 00\n83 7c 24 28 00\n74 35\n48 8b 3d 13 1a 20 00\n48 8b 35 1c 1a 20 00\nba 48 31 60 00\nb9 02 00 00 00\n41 b8 02 00 00 00\ne8 b7 f6 ff ff\nbe 02 00 00 00\nba 02 00 00 00\n48 89 c7\ne8 a5 04 00 00\n4d 85 e4\n74 55\n48 8b 1d d9 19 20 00\n4c 8b 35 e2 19 20 00\n48 8b 83 e8 00 00 00\n48 63 0d cc 19 20 00\n48 c1 e1 07\n48 8b 74 08 60\n4c 89 e7\ne8 13 06 00 00\n48 89 df\n4c 89 f6\n48 89 c2\ne8 a5 f7 ff ff\n48 8b 3d 9e 19 20 00\n48 8b 35 a7 19 20 00\ne8 d2 f5 ff ff\nc6 05 a3 19 20 00 01\n48 8b 7c 24 30\n48 85 ff\n74 24\n48 8d 74 24 74\n48 8d 54 24 70\n31 c9\n45 31 c0\ne8 cd 06 00 00\n8b 74 24 74\n8b 54 24 70\n48 89 c7\ne8 1d 04 00 00\n8b 7c 24 24\n85 ff\n74 1b\n8b 74 24 20\ne8 3c 07 00 00\nbe 10 00 00 00\nba 10 00 00 00\n48 89 c7\ne8 fa 03 00 00\n48 8b 54 24 60\n48 85 d2\n74 13\n48 8b 3d 29 19 20 00\n48 8b 35 32 19 20 00\ne8 ad f5 ff ff\n83 7c 24 1c 00\n75 07\n44 09 6c 24 0c\n75 4c\n4d 85 ff\n75 13\n48 8b 3d 03 19 20 00\n48 8b 35 0c 19 20 00\ne8 77 f6 ff ff\n45 85 ed\n75 2f\n48 8b 3d eb 18 20 00\n48 8b 35 f4 18 20 00\n31 d2\ne8 ad f6 ff ff\n48 8b 3d d6 18 20 00\n48 8b 35 df 18 20 00\ne8 0a f5 ff ff\nc6 05 db 18 20 00 01\ne8 3e 07 00 00\n48 8b 3d b7 18 20 00\ne8 02 f7 ff ff\n31 ff\ne8 cb f6 ff ff\n48 89 ef\n8b 74 24 2c\ne8 3f f6 ff ff\n48 85 c0\n75 26\n48 8b 3d 63 18 20 00\nbe de 23 40 00\n31 c0\n48 89 ea\ne8 84 f5 ff ff\n83 7c 24 28 00\n0f 85 5f fe ff ff\ne9 8f fe ff ff\n48 8b 3d 6d 18 20 00\n48 89 c6\ne8 75 f5 ff ff\n48 89 c3\n48 85 db\n0f 84 38 fe ff ff\n48 8b 3d 52 18 20 00\n48 8b 35 5b 18 20 00\n48 89 da\ne8 d3 f5 ff ff\n48 8b 3d 3c 18 20 00\n48 89 de\ne8 14 f6 ff ff\n83 7c 24 28 00\n0f 84 44 fe ff ff\ne9 0a fe ff ff\n'
p54
S'.text:0000000000401110\n.text:0000000000401111\n.text:0000000000401113\n.text:0000000000401115\n.text:0000000000401117\n.text:0000000000401119\n.text:000000000040111a\n.text:000000000040111e\n.text:0000000000401121\n.text:0000000000401124\n.text:0000000000401128\n.text:000000000040112f\n.text:0000000000401133\n.text:0000000000401139\n.text:000000000040113b\n.text:0000000000401140\n.text:0000000000401148\n.text:0000000000401150\n.text:0000000000401155\n.text:000000000040115a\n.text:000000000040115f\n.text:0000000000401164\n.text:0000000000401169\n.text:000000000040116e\n.text:0000000000401173\n.text:0000000000401178\n.text:000000000040117d\n.text:0000000000401182\n.text:0000000000401187\n.text:000000000040118c\n.text:0000000000401191\n.text:0000000000401196\n.text:000000000040119e\n.text:00000000004011a6\n.text:00000000004011a8\n.text:00000000004011ad\n.text:00000000004011b5\n.text:00000000004011bd\n.text:00000000004011c3\n.text:00000000004011c8\n.text:00000000004011cb\n.text:00000000004011ce\n.text:00000000004011d4\n.text:00000000004011d7\n.text:00000000004011dc\n.text:00000000004011e1\n.text:00000000004011e5\n.text:00000000004011ea\n.text:00000000004011ef\n.text:00000000004011f2\n.text:00000000004011f8\n.text:00000000004011fc\n.text:00000000004011ff\n.text:0000000000401205\n.text:0000000000401207\n.text:000000000040120c\n.text:0000000000401211\n.text:0000000000401214\n.text:0000000000401219\n.text:000000000040121e\n.text:0000000000401222\n.text:0000000000401227\n.text:000000000040122a\n.text:000000000040122d\n.text:0000000000401233\n.text:0000000000401236\n.text:000000000040123b\n.text:0000000000401240\n.text:0000000000401244\n.text:0000000000401249\n.text:000000000040124e\n.text:0000000000401251\n.text:0000000000401257\n.text:000000000040125b\n.text:000000000040125e\n.text:0000000000401264\n.text:0000000000401266\n.text:000000000040126b\n.text:0000000000401270\n.text:0000000000401273\n.text:0000000000401278\n.text:000000000040127d\n.text:000000000040127f\n.text:0000000000401284\n.text:0000000000401287\n.text:000000000040128b\n.text:000000000040128f\n.text:0000000000401294\n.text:0000000000401297\n.text:000000000040129a\n.text:00000000004012a0\n.text:00000000004012a3\n.text:00000000004012a8\n.text:00000000004012af\n.text:00000000004012b4\n.text:00000000004012b7\n.text:00000000004012ba\n.text:00000000004012c0\n.text:00000000004012c3\n.text:00000000004012c8\n.text:00000000004012cf\n.text:00000000004012d4\n.text:00000000004012d9\n.text:00000000004012db\n.text:00000000004012e0\n.text:00000000004012e8\n.text:00000000004012ed\n.text:00000000004012f0\n.text:00000000004012f3\n.text:00000000004012f9\n.text:00000000004012fc\n.text:0000000000401301\n.text:0000000000401306\n.text:000000000040130b\n.text:000000000040130d\n.text:0000000000401312\n.text:0000000000401317\n.text:000000000040131a\n.text:000000000040131d\n.text:0000000000401323\n.text:0000000000401326\n.text:000000000040132b\n.text:0000000000401330\n.text:0000000000401332\n.text:0000000000401337\n.text:000000000040133a\n.text:0000000000401340\n.text:0000000000401342\n.text:0000000000401347\n.text:000000000040134c\n.text:0000000000401350\n.text:0000000000401353\n.text:0000000000401359\n.text:000000000040135b\n.text:0000000000401360\n.text:0000000000401363\n.text:0000000000401367\n.text:000000000040136a\n.text:000000000040136f\n.text:0000000000401374\n.text:0000000000401376\n.text:0000000000401379\n.text:000000000040137d\n.text:0000000000401380\n.text:0000000000401383\n.text:0000000000401388\n.text:000000000040138d\n.text:0000000000401390\n.text:0000000000401395\n.text:0000000000401397\n.text:000000000040139d\n.text:00000000004013a0\n.text:00000000004013a2\n.text:00000000004013a6\n.text:00000000004013a8\n.text:00000000004013ac\n.text:00000000004013b2\n.text:00000000004013c0\n.text:00000000004013c5\n.text:00000000004013ca\n.text:00000000004013cd\n.text:00000000004013d2\n.text:00000000004013d4\n.text:00000000004013da\n.text:00000000004013df\n.text:00000000004013e2\n.text:00000000004013e7\n.text:00000000004013e9\n.text:00000000004013ef\n.text:00000000004013f4\n.text:00000000004013f7\n.text:00000000004013fc\n.text:00000000004013fe\n.text:0000000000401404\n.text:0000000000401409\n.text:000000000040140c\n.text:0000000000401411\n.text:0000000000401413\n.text:0000000000401419\n.text:000000000040141e\n.text:0000000000401421\n.text:0000000000401426\n.text:0000000000401428\n.text:000000000040142e\n.text:0000000000401433\n.text:0000000000401436\n.text:000000000040143b\n.text:000000000040143d\n.text:0000000000401443\n.text:0000000000401448\n.text:000000000040144b\n.text:0000000000401450\n.text:0000000000401452\n.text:0000000000401458\n.text:000000000040145d\n.text:0000000000401460\n.text:0000000000401465\n.text:0000000000401467\n.text:000000000040146d\n.text:0000000000401471\n.text:0000000000401473\n.text:0000000000401478\n.text:000000000040147a\n.text:000000000040147f\n.text:0000000000401481\n.text:0000000000401486\n.text:000000000040148c\n.text:0000000000401491\n.text:0000000000401496\n.text:0000000000401499\n.text:000000000040149e\n.text:00000000004014a0\n.text:00000000004014a6\n.text:00000000004014a9\n.text:00000000004014ab\n.text:00000000004014af\n.text:00000000004014b1\n.text:00000000004014b5\n.text:00000000004014b7\n.text:00000000004014bb\n.text:00000000004014c1\n.text:00000000004014c6\n.text:00000000004014cb\n.text:00000000004014ce\n.text:00000000004014d3\n.text:00000000004014d5\n.text:00000000004014db\n.text:00000000004014e0\n.text:00000000004014e3\n.text:00000000004014e8\n.text:00000000004014ea\n.text:00000000004014f0\n.text:00000000004014f5\n.text:00000000004014f8\n.text:00000000004014fd\n.text:00000000004014ff\n.text:0000000000401505\n.text:000000000040150a\n.text:000000000040150d\n.text:0000000000401512\n.text:0000000000401514\n.text:000000000040151a\n.text:000000000040151f\n.text:0000000000401522\n.text:0000000000401527\n.text:0000000000401529\n.text:000000000040152f\n.text:0000000000401534\n.text:0000000000401537\n.text:000000000040153c\n.text:000000000040153e\n.text:0000000000401544\n.text:0000000000401547\n.text:0000000000401549\n.text:000000000040154d\n.text:000000000040154f\n.text:0000000000401553\n.text:0000000000401555\n.text:0000000000401559\n.text:000000000040155b\n.text:0000000000401560\n.text:0000000000401565\n.text:000000000040156a\n.text:000000000040156c\n.text:0000000000401572\n.text:0000000000401579\n.text:0000000000401580\n.text:0000000000401583\n.text:0000000000401586\n.text:0000000000401588\n.text:000000000040158b\n.text:0000000000401590\n.text:0000000000401595\n.text:00000000004015a0\n.text:00000000004015a8\n.text:00000000004015ab\n.text:00000000004015ae\n.text:00000000004015b4\n.text:00000000004015b9\n.text:00000000004015bd\n.text:00000000004015c3\n.text:00000000004015ca\n.text:00000000004015d1\n.text:00000000004015d6\n.text:00000000004015d8\n.text:00000000004015dd\n.text:00000000004015e2\n.text:00000000004015e7\n.text:00000000004015ec\n.text:00000000004015f1\n.text:00000000004015f3\n.text:00000000004015f8\n.text:00000000004015fd\n.text:0000000000401605\n.text:0000000000401608\n.text:0000000000401610\n.text:0000000000401618\n.text:000000000040161a\n.text:000000000040161f\n.text:0000000000401621\n.text:0000000000401626\n.text:0000000000401628\n.text:000000000040162d\n.text:000000000040162f\n.text:0000000000401634\n.text:0000000000401636\n.text:000000000040163b\n.text:000000000040163d\n.text:0000000000401642\n.text:0000000000401644\n.text:0000000000401649\n.text:0000000000401651\n.text:0000000000401653\n.text:0000000000401658\n.text:0000000000401660\n.text:0000000000401668\n.text:000000000040166d\n.text:0000000000401670\n.text:0000000000401675\n.text:000000000040167c\n.text:000000000040167f\n.text:0000000000401681\n.text:0000000000401688\n.text:000000000040168f\n.text:0000000000401692\n.text:0000000000401697\n.text:000000000040169a\n.text:000000000040169f\n.text:00000000004016a1\n.text:00000000004016a4\n.text:00000000004016a7\n.text:00000000004016ac\n.text:00000000004016b1\n.text:00000000004016b6\n.text:00000000004016bd\n.text:00000000004016c3\n.text:00000000004016ca\n.text:00000000004016d1\n.text:00000000004016d5\n.text:00000000004016da\n.text:00000000004016e1\n.text:00000000004016e6\n.text:00000000004016e9\n.text:00000000004016eb\n.text:00000000004016ee\n.text:00000000004016f3\n.text:00000000004016f8\n.text:00000000004016fb\n.text:0000000000401702\n.text:0000000000401709\n.text:000000000040170c\n.text:0000000000401711\n.text:0000000000401718\n.text:000000000040171b\n.text:0000000000401720\n.text:0000000000401725\n.text:0000000000401728\n.text:000000000040172d\n.text:0000000000401732\n.text:0000000000401734\n.text:0000000000401739\n.text:000000000040173c\n.text:000000000040173f\n.text:0000000000401741\n.text:0000000000401748\n.text:000000000040174f\n.text:0000000000401752\n.text:0000000000401757\n.text:000000000040175e\n.text:0000000000401761\n.text:0000000000401766\n.text:0000000000401769\n.text:000000000040176f\n.text:0000000000401774\n.text:0000000000401776\n.text:000000000040177d\n.text:0000000000401784\n.text:0000000000401789\n.text:000000000040178e\n.text:0000000000401794\n.text:0000000000401799\n.text:000000000040179e\n.text:00000000004017a3\n.text:00000000004017a6\n.text:00000000004017ab\n.text:00000000004017ae\n.text:00000000004017b0\n.text:00000000004017b7\n.text:00000000004017be\n.text:00000000004017c5\n.text:00000000004017cc\n.text:00000000004017d0\n.text:00000000004017d5\n.text:00000000004017d8\n.text:00000000004017dd\n.text:00000000004017e0\n.text:00000000004017e3\n.text:00000000004017e6\n.text:00000000004017eb\n.text:00000000004017f2\n.text:00000000004017f9\n.text:00000000004017fe\n.text:0000000000401805\n.text:000000000040180a\n.text:000000000040180d\n.text:000000000040180f\n.text:0000000000401814\n.text:0000000000401819\n.text:000000000040181b\n.text:000000000040181e\n.text:0000000000401823\n.text:0000000000401827\n.text:000000000040182b\n.text:000000000040182e\n.text:0000000000401833\n.text:0000000000401837\n.text:0000000000401839\n.text:000000000040183b\n.text:000000000040183f\n.text:0000000000401844\n.text:0000000000401849\n.text:000000000040184e\n.text:0000000000401851\n.text:0000000000401856\n.text:000000000040185b\n.text:000000000040185e\n.text:0000000000401860\n.text:0000000000401867\n.text:000000000040186e\n.text:0000000000401873\n.text:0000000000401878\n.text:000000000040187a\n.text:000000000040187f\n.text:0000000000401881\n.text:0000000000401884\n.text:0000000000401886\n.text:000000000040188d\n.text:0000000000401894\n.text:0000000000401899\n.text:000000000040189c\n.text:000000000040189e\n.text:00000000004018a5\n.text:00000000004018ac\n.text:00000000004018ae\n.text:00000000004018b3\n.text:00000000004018ba\n.text:00000000004018c1\n.text:00000000004018c6\n.text:00000000004018cd\n.text:00000000004018d2\n.text:00000000004018d9\n.text:00000000004018de\n.text:00000000004018e0\n.text:00000000004018e5\n.text:00000000004018e8\n.text:00000000004018ec\n.text:00000000004018f1\n.text:00000000004018f4\n.text:00000000004018f6\n.text:00000000004018fd\n.text:0000000000401902\n.text:0000000000401904\n.text:0000000000401907\n.text:000000000040190c\n.text:0000000000401911\n.text:0000000000401917\n.text:000000000040191c\n.text:0000000000401923\n.text:0000000000401926\n.text:000000000040192b\n.text:000000000040192e\n.text:0000000000401931\n.text:0000000000401937\n.text:000000000040193e\n.text:0000000000401945\n.text:0000000000401948\n.text:000000000040194d\n.text:0000000000401954\n.text:0000000000401957\n.text:000000000040195c\n.text:0000000000401961\n.text:0000000000401967\n'
p55
tp56
sS'XKillClient'
p57
(S'\n__stdcall XKillClient()\n'
p58
V\u000avoid XKillClient(void)\u000a\u000a{\u000a  (*(code *)PTR_XKillClient_00603048)();\u000a  return;\u000a}\u000a\u000a
p59
S'JMP qword ptr [0x00603048]\n'
p60
S'ff 25 12 22 20 00\n'
p61
S'.plt:0000000000400e30\n'
p62
tp63
sS'XcursorFilenameLoadImages'
p64
(S'\n__stdcall XcursorFilenameLoadImages()\n'
p65
V\u000avoid XcursorFilenameLoadImages(void)\u000a\u000a{\u000a  (*(code *)PTR_XcursorFilenameLoadImages_006030c8)();\u000a  return;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x006030c8]\n'
p67
S'ff 25 92 21 20 00\n'
p68
S'.plt:0000000000400f30\n'
p69
tp70
sS'XStoreName'
p71
(S'\n__stdcall XStoreName()\n'
p72
V\u000avoid XStoreName(void)\u000a\u000a{\u000a  (*(code *)PTR_XStoreName_00603040)();\u000a  return;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00603040]\n'
p74
S'ff 25 1a 22 20 00\n'
p75
S'.plt:0000000000400e20\n'
p76
tp77
sS'XClearWindow'
p78
(S'\n__stdcall XClearWindow()\n'
p79
V\u000avoid XClearWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XClearWindow_00603018)();\u000a  return;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00603018]\n'
p81
S'ff 25 42 22 20 00\n'
p82
S'.plt:0000000000400dd0\n'
p83
tp84
sS'XLoadFont'
p85
(S'\n__stdcall XLoadFont()\n'
p86
V\u000avoid XLoadFont(void)\u000a\u000a{\u000a  (*(code *)PTR_XLoadFont_006030b0)();\u000a  return;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x006030b0]\n'
p88
S'ff 25 aa 21 20 00\n'
p89
S'.plt:0000000000400f00\n'
p90
tp91
sS'XSetWindowBackgroundPixmap'
p92
(S'\n__stdcall XSetWindowBackgroundPixmap()\n'
p93
V\u000avoid XSetWindowBackgroundPixmap(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetWindowBackgroundPixmap_006030e0)();\u000a  return;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x006030e0]\n'
p95
S'ff 25 7a 21 20 00\n'
p96
S'.plt:0000000000400f60\n'
p97
tp98
sS'frame_dummy'
p99
(S'\n__stdcall frame_dummy()\n'
p100
V\u000a/* WARNING: Removing unreachable block (ram,0x004010fa) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p101
S'MOV EDI,0x602de8\nCMP qword ptr [RDI],0x0\nJNZ 0x004010f0\nJMP 0x00401080\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004010eb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401080\n'
p102
S'bf e8 2d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p103
S'.text:00000000004010e0\n.text:00000000004010e5\n.text:00000000004010e9\n.text:00000000004010eb\n.text:00000000004010f0\n.text:00000000004010f5\n.text:00000000004010f8\n.text:00000000004010fa\n.text:00000000004010fb\n.text:00000000004010fe\n.text:0000000000401100\n.text:0000000000401101\n'
p104
tp105
sS'FUN_00400dc0'
p106
(S'\n__stdcall FUN_00400dc0()\n'
p107
V\u000avoid FUN_00400dc0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00603010)();\u000a  return;\u000a}\u000a\u000a
p108
S'PUSH qword ptr [0x00603008]\nJMP qword ptr [0x00603010]\n'
p109
S'ff 35 42 22 20 00\nff 25 44 22 20 00\n'
p110
S'.plt:0000000000400dc0\n.plt:0000000000400dc6\n'
p111
tp112
sS'strcmp'
p113
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p114
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00603068)();\u000a  return iVar1;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x00603068]\n'
p116
S'ff 25 f2 21 20 00\n'
p117
S'.plt:0000000000400e70\n'
p118
tp119
sS'NameToXColor'
p120
(S'\n__stdcall NameToXColor(char * name, ulong pixel)\n'
p121
V\u000aXColor NameToXColor(char *name,ulong pixel)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  int iVar2;\u000a  ulong local_18;\u000a  undefined8 local_10;\u000a  \u000a  uVar1 = *(undefined8 *)(*(long *)(dpy + 0xe8) + 0x50 + (long)screen * 0x80);\u000a  if ((name == (char *)0x0) || (*name == 0)) {\u000a    local_18 = pixel;\u000a    XQueryColor(dpy,uVar1,&local_18);\u000a  }\u000a  else {\u000a    iVar2 = XParseColor(dpy,uVar1,name,&local_18);\u000a    if (iVar2 == 0) {\u000a      fprintf(stderr,"%s: unknown color or bad color format: %s\u005cn",program_name,name);\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(1);\u000a    }\u000a  }\u000a  return (XColor)CONCAT88(local_10,local_18);\u000a}\u000a\u000a
p122
S'PUSH RBX\nSUB RSP,0x10\nMOV RAX,RSI\nMOV RBX,RDI\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nTEST RBX,RBX\nMOV RDI,qword ptr [0x00603190]\nMOV RDX,qword ptr [0xe8 + RDI]\nMOV RSI,qword ptr [RDX + RCX*0x1 + 0x50]\nJZ 0x00402239\nCMP byte ptr [RBX],0x0\nJZ 0x00402239\nMOV RCX,RSP\nMOV RDX,RBX\nCALL 0x00400fc0\nTEST EAX,EAX\nJNZ 0x00402245\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x402652\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x00400e90\nMOV EDI,0x1\nCALL 0x00400fb0\nMOV qword ptr [RSP],RAX\nMOV RDX,RSP\nCALL 0x00400f50\nMOV RAX,qword ptr [RSP]\nMOV RDX,qword ptr [RSP + 0x8]\nADD RSP,0x10\nPOP RBX\nRET\n'
p123
S'53\n48 83 ec 10\n48 89 f0\n48 89 fb\n48 63 0d b6 0f 20 00\n48 c1 e1 07\n48 85 db\n48 8b 3d a0 0f 20 00\n48 8b 97 e8 00 00 00\n48 8b 74 0a 50\n74 3b\n80 3b 00\n74 36\n48 89 e1\n48 89 da\ne8 b2 ed ff ff\n85 c0\n75 33\n48 8b 3d 47 0f 20 00\n48 8b 15 50 0f 20 00\nbe 52 26 40 00\n31 c0\n48 89 d9\ne8 61 ec ff ff\nbf 01 00 00 00\ne8 77 ed ff ff\n48 89 04 24\n48 89 e2\ne8 0b ed ff ff\n48 8b 04 24\n48 8b 54 24 08\n48 83 c4 10\n5b\nc3\n'
p124
S'.text:00000000004021d0\n.text:00000000004021d1\n.text:00000000004021d5\n.text:00000000004021d8\n.text:00000000004021db\n.text:00000000004021e2\n.text:00000000004021e6\n.text:00000000004021e9\n.text:00000000004021f0\n.text:00000000004021f7\n.text:00000000004021fc\n.text:00000000004021fe\n.text:0000000000402201\n.text:0000000000402203\n.text:0000000000402206\n.text:0000000000402209\n.text:000000000040220e\n.text:0000000000402210\n.text:0000000000402212\n.text:0000000000402219\n.text:0000000000402220\n.text:0000000000402225\n.text:0000000000402227\n.text:000000000040222a\n.text:000000000040222f\n.text:0000000000402234\n.text:0000000000402239\n.text:000000000040223d\n.text:0000000000402240\n.text:0000000000402245\n.text:0000000000402249\n.text:000000000040224e\n.text:0000000000402252\n.text:0000000000402253\n'
p125
tp126
sS'NameToPixel'
p127
(S'\n__stdcall NameToPixel(char * name, ulong pixel)\n'
p128
V\u000aulong NameToPixel(char *name,ulong pixel)\u000a\u000a{\u000a  long lVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  char *__format;\u000a  ulong local_18 [2];\u000a  \u000a  if ((name == (char *)0x0) || (*name == 0)) {\u000a    return pixel;\u000a  }\u000a  iVar2 = XParseColor(dpy,*(undefined8 *)(*(long *)(dpy + 0xe8) + 0x50 + (long)screen * 0x80),name,\u000a                      local_18);\u000a  if (iVar2 == 0) {\u000a    __format = "%s:  unknown color \u005c"%s\u005c"\u005cn";\u000a  }\u000a  else {\u000a    iVar2 = XAllocColor(dpy,*(undefined8 *)(*(long *)(dpy + 0xe8) + 0x50 + (long)screen * 0x80),\u000a                        local_18);\u000a    if (iVar2 != 0) {\u000a      lVar1 = *(long *)(dpy + 0xe8);\u000a      lVar3 = (long)screen * 0x80;\u000a      if (local_18[0] == *(ulong *)(lVar1 + 0x60 + lVar3)) {\u000a        return local_18[0];\u000a      }\u000a      if (local_18[0] == *(ulong *)(lVar1 + 0x58 + lVar3)) {\u000a        return local_18[0];\u000a      }\u000a      if ((*(byte *)(*(long *)(lVar1 + 0x40 + lVar3) + 0x10) & 1) == 0) {\u000a        return local_18[0];\u000a      }\u000a      save_colors = 1;\u000a      return local_18[0];\u000a    }\u000a    __format = "%s:  unable to allocate color for \u005c"%s\u005c"\u005cn";\u000a  }\u000a  fprintf(stderr,__format,program_name,name);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p129
S'PUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00401e9e\nCMP byte ptr [RBX],0x0\nJZ 0x00401e9e\nMOV RDI,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x50]\nMOV RCX,RSP\nMOV RDX,RBX\nCALL 0x00400fc0\nTEST EAX,EAX\nJZ 0x00401ea7\nMOV RDI,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x50]\nMOV RDX,RSP\nCALL 0x00400de0\nTEST EAX,EAX\nJZ 0x00401ebc\nMOV RSI,qword ptr [RSP]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nCMP RSI,qword ptr [RAX + RCX*0x1 + 0x60]\nJZ 0x00401e9e\nCMP RSI,qword ptr [RAX + RCX*0x1 + 0x58]\nJZ 0x00401e9e\nMOV RAX,qword ptr [RAX + RCX*0x1 + 0x40]\nTEST byte ptr [RAX + 0x10],0x1\nJZ 0x00401e9e\nMOV byte ptr [0x006031ac],0x1\nMOV RAX,RSI\nADD RSP,0x10\nPOP RBX\nRET\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x40267d\nJMP 0x00401ecf\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x402696\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x00400e90\nMOV EDI,0x1\nCALL 0x00400fb0\n'
p130
S'53\n48 83 ec 10\n48 89 fb\n48 85 db\n0f 84 9d 00 00 00\n80 3b 00\n0f 84 94 00 00 00\n48 8b 3d 7f 13 20 00\n48 8b 87 e8 00 00 00\n48 63 0d 79 13 20 00\n48 c1 e1 07\n48 8b 74 08 50\n48 89 e1\n48 89 da\ne8 8d f1 ff ff\n85 c0\n74 70\n48 8b 3d 52 13 20 00\n48 8b 87 e8 00 00 00\n48 63 0d 4c 13 20 00\n48 c1 e1 07\n48 8b 74 08 50\n48 89 e2\ne8 83 ef ff ff\n85 c0\n74 5b\n48 8b 34 24\n48 8b 05 24 13 20 00\n48 8b 80 e8 00 00 00\n48 63 0d 1e 13 20 00\n48 c1 e1 07\n48 3b 74 08 60\n74 19\n48 3b 74 08 58\n74 12\n48 8b 44 08 40\nf6 40 10 01\n74 07\nc6 05 0e 13 20 00 01\n48 89 f0\n48 83 c4 10\n5b\nc3\n48 8b 3d b2 12 20 00\n48 8b 15 bb 12 20 00\nbe 7d 26 40 00\neb 13\n48 8b 3d 9d 12 20 00\n48 8b 15 a6 12 20 00\nbe 96 26 40 00\n31 c0\n48 89 d9\ne8 b7 ef ff ff\nbf 01 00 00 00\ne8 cd f0 ff ff\n'
p131
S'.text:0000000000401df0\n.text:0000000000401df1\n.text:0000000000401df5\n.text:0000000000401df8\n.text:0000000000401dfb\n.text:0000000000401e01\n.text:0000000000401e04\n.text:0000000000401e0a\n.text:0000000000401e11\n.text:0000000000401e18\n.text:0000000000401e1f\n.text:0000000000401e23\n.text:0000000000401e28\n.text:0000000000401e2b\n.text:0000000000401e2e\n.text:0000000000401e33\n.text:0000000000401e35\n.text:0000000000401e37\n.text:0000000000401e3e\n.text:0000000000401e45\n.text:0000000000401e4c\n.text:0000000000401e50\n.text:0000000000401e55\n.text:0000000000401e58\n.text:0000000000401e5d\n.text:0000000000401e5f\n.text:0000000000401e61\n.text:0000000000401e65\n.text:0000000000401e6c\n.text:0000000000401e73\n.text:0000000000401e7a\n.text:0000000000401e7e\n.text:0000000000401e83\n.text:0000000000401e85\n.text:0000000000401e8a\n.text:0000000000401e8c\n.text:0000000000401e91\n.text:0000000000401e95\n.text:0000000000401e97\n.text:0000000000401e9e\n.text:0000000000401ea1\n.text:0000000000401ea5\n.text:0000000000401ea6\n.text:0000000000401ea7\n.text:0000000000401eae\n.text:0000000000401eb5\n.text:0000000000401eba\n.text:0000000000401ebc\n.text:0000000000401ec3\n.text:0000000000401eca\n.text:0000000000401ecf\n.text:0000000000401ed1\n.text:0000000000401ed4\n.text:0000000000401ed9\n.text:0000000000401ede\n'
p132
tp133
sS'XQueryColor'
p134
(S'\n__stdcall XQueryColor()\n'
p135
V\u000avoid XQueryColor(void)\u000a\u000a{\u000a  (*(code *)PTR_XQueryColor_006030d8)();\u000a  return;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x006030d8]\n'
p137
S'ff 25 82 21 20 00\n'
p138
S'.plt:0000000000400f50\n'
p139
tp140
sS'XCreateGC'
p141
(S'\n__stdcall XCreateGC()\n'
p142
V\u000avoid XCreateGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateGC_006030d0)();\u000a  return;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x006030d0]\n'
p144
S'ff 25 8a 21 20 00\n'
p145
S'.plt:0000000000400f40\n'
p146
tp147
sS'exit'
p148
(S'\n__stdcall exit(int __status)\n'
p149
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00603108)();\u000a  return;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x00603108]\n'
p151
S'ff 25 52 21 20 00\n'
p152
S'.plt:0000000000400fb0\n'
p153
tp154
sS'XGetWindowProperty'
p155
(S'\n__stdcall XGetWindowProperty()\n'
p156
V\u000avoid XGetWindowProperty(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetWindowProperty_00603118)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00603118]\n'
p158
S'ff 25 42 21 20 00\n'
p159
S'.plt:0000000000400fd0\n'
p160
tp161
sS'__libc_csu_fini'
p162
(S'\n__stdcall __libc_csu_fini()\n'
p163
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p164
S'RET\n'
p165
S'f3 c3\n'
p166
S'.text:00000000004022d0\n'
p167
tp168
sS'XDefineCursor'
p169
(S'\n__stdcall XDefineCursor()\n'
p170
V\u000avoid XDefineCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XDefineCursor_006030c0)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x006030c0]\n'
p172
S'ff 25 9a 21 20 00\n'
p173
S'.plt:0000000000400f20\n'
p174
tp175
sS'CreateCursorFromFiles'
p176
(S'\n__stdcall CreateCursorFromFiles(char * cursor_file, char * mask_file)\n'
p177
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aCursor CreateCursorFromFiles(char *cursor_file,char *mask_file)\u000a\u000a{\u000a  XColor XVar1;\u000a  Pixmap PVar2;\u000a  Pixmap PVar3;\u000a  Cursor CVar4;\u000a  char *__format;\u000a  uint hh;\u000a  uint ww;\u000a  XColor bg;\u000a  XColor fg;\u000a  uint local_60;\u000a  uint local_5c;\u000a  uint local_58;\u000a  uint local_54;\u000a  uint local_50;\u000a  uint local_4c;\u000a  undefined local_48 [16];\u000a  undefined local_38 [16];\u000a  undefined4 local_28;\u000a  undefined4 uStack36;\u000a  undefined4 uStack32;\u000a  undefined4 uStack28;\u000a  \u000a  local_38 = NameToXColor(fore_color,*(ulong *)(*(long *)(dpy + 0xe8) + 0x60 + (long)screen * 0x80))\u000a  ;\u000a  local_48 = NameToXColor(back_color,*(ulong *)(*(long *)(dpy + 0xe8) + 0x58 + (long)screen * 0x80))\u000a  ;\u000a  XVar1 = local_38;\u000a  if (reverse == 1) {\u000a    local_28 = local_38._0_4_;\u000a    uStack36 = local_38._4_4_;\u000a    uStack32 = local_38._8_4_;\u000a    uStack28 = local_38._12_4_;\u000a    local_38._0_8_ =\u000a         SUB168((undefined  [16])local_48 & (undefined  [16])0xffffffff00000000,0) |\u000a         (ulong)SUB164((undefined  [16])local_48,0);\u000a    XVar1 = (XColor)ZEXT1216(CONCAT48(SUB164((undefined  [16])local_48 >> 0x40,0),local_38._0_8_) &\u000a                             (undefined  [12])0xffffffffffffffff);\u000a    local_48 = local_38;\u000a  }\u000a  local_38 = XVar1;\u000a  PVar2 = ReadBitmapFile(cursor_file,&local_54,&local_58,(int *)&local_5c,(int *)&local_60);\u000a  PVar3 = ReadBitmapFile(mask_file,&local_4c,&local_50,(int *)0x0,(int *)0x0);\u000a  if ((local_54 != local_4c) || (local_58 != local_50)) {\u000a    __format = "%s: dimensions of cursor bitmap and cursor mask bitmap are different\u005cn";\u000a    goto LAB_00401b4e;\u000a  }\u000a  if ((local_60 & local_5c) == 0xffffffff) {\u000a    local_5c = 8;\u000a    local_60 = 8;\u000aLAB_00401ac4:\u000a    if (((local_5c < local_54) && (-1 < (int)local_60)) && (local_60 < local_58)) {\u000a      CVar4 = XCreatePixmapCursor(dpy,PVar2,PVar3,local_38,local_48,(ulong)local_5c,local_60);\u000a      XFreePixmap(dpy,PVar2);\u000a      XFreePixmap(dpy,PVar3);\u000a      return CVar4;\u000a    }\u000a  }\u000a  else {\u000a    if (-1 < (int)local_5c) goto LAB_00401ac4;\u000a  }\u000a  __format = "%s: hotspot is outside cursor bounds\u005cn";\u000aLAB_00401b4e:\u000a  fprintf(stderr,__format,program_name);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p178
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x50\nMOV R15,RSI\nMOV RBX,RDI\nMOV RDI,qword ptr [0x00603178]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x60]\nCALL 0x004021d0\nMOV qword ptr [RSP + 0x30],RAX\nMOV qword ptr [RSP + 0x38],RDX\nMOV RDI,qword ptr [0x00603180]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x58]\nCALL 0x004021d0\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP + 0x28],RDX\nCMP byte ptr [0x00603188],0x1\nJNZ 0x00401a3e\nMOVAPS XMM0,xmmword ptr [RSP + 0x30]\nMOVAPS xmmword ptr [RSP + 0x40],XMM0\nMOVAPS XMM0,xmmword ptr [RSP + 0x20]\nMOVAPS xmmword ptr [RSP + 0x30],XMM0\nMOVAPS XMM0,xmmword ptr [RSP + 0x40]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nLEA RSI,[RSP + 0x14]\nLEA RDX,[RSP + 0x10]\nLEA RCX,[RSP + 0xc]\nLEA R8,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00401ef0\nMOV R14,RAX\nLEA RSI,[RSP + 0x1c]\nLEA RDX,[RSP + 0x18]\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDI,R15\nCALL 0x00401ef0\nMOV R15,RAX\nMOV EAX,dword ptr [RSP + 0x14]\nCMP EAX,dword ptr [RSP + 0x1c]\nJNZ 0x00401b26\nMOV EAX,dword ptr [RSP + 0x10]\nCMP EAX,dword ptr [RSP + 0x18]\nJNZ 0x00401b26\nMOV R9D,dword ptr [RSP + 0xc]\nMOV EAX,dword ptr [RSP + 0x8]\nAND EAX,R9D\nCMP EAX,-0x1\nJZ 0x00401aae\nTEST R9D,R9D\nJNS 0x00401ac4\nJMP 0x00401b3b\nMOV dword ptr [RSP + 0xc],0x8\nMOV dword ptr [RSP + 0x8],0x8\nMOV R9D,0x8\nCMP R9D,dword ptr [RSP + 0x14]\nJNC 0x00401b3b\nMOV EAX,dword ptr [RSP + 0x8]\nTEST EAX,EAX\nJS 0x00401b3b\nCMP EAX,dword ptr [RSP + 0x10]\nJNC 0x00401b3b\nMOV RDI,qword ptr [0x00603190]\nMOV dword ptr [RSP],EAX\nLEA RCX,[RSP + 0x30]\nLEA R8,[RSP + 0x20]\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00400e60\nMOV RBX,RAX\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,R14\nCALL 0x00400e40\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,R15\nCALL 0x00400e40\nMOV RAX,RBX\nADD RSP,0x50\nPOP RBX\nPOP R14\nPOP R15\nRET\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x4025e6\nJMP 0x00401b4e\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x40262c\nXOR EAX,EAX\nCALL 0x00400e90\nMOV EDI,0x1\nCALL 0x00400fb0\n'
p179
S'41 57\n41 56\n53\n48 83 ec 50\n49 89 f7\n48 89 fb\n48 8b 3d c2 17 20 00\n48 8b 05 d3 17 20 00\n48 8b 80 e8 00 00 00\n48 63 0d cd 17 20 00\n48 c1 e1 07\n48 8b 74 08 60\ne8 f7 07 00 00\n48 89 44 24 30\n48 89 54 24 38\n48 8b 3d 96 17 20 00\n48 8b 05 9f 17 20 00\n48 8b 80 e8 00 00 00\n48 63 0d 99 17 20 00\n48 c1 e1 07\n48 8b 74 08 58\ne8 c3 07 00 00\n48 89 44 24 20\n48 89 54 24 28\n80 3d 6a 17 20 00 01\n75 1e\n0f 28 44 24 30\n0f 29 44 24 40\n0f 28 44 24 20\n0f 29 44 24 30\n0f 28 44 24 40\n0f 29 44 24 20\n48 8d 74 24 14\n48 8d 54 24 10\n48 8d 4c 24 0c\n4c 8d 44 24 08\n48 89 df\ne8 96 04 00 00\n49 89 c6\n48 8d 74 24 1c\n48 8d 54 24 18\n31 c9\n45 31 c0\n4c 89 ff\ne8 7c 04 00 00\n49 89 c7\n8b 44 24 14\n3b 44 24 1c\n0f 85 a1 00 00 00\n8b 44 24 10\n3b 44 24 18\n0f 85 93 00 00 00\n44 8b 4c 24 0c\n8b 44 24 08\n44 21 c8\n83 f8 ff\n74 0a\n45 85 c9\n79 1b\ne9 8d 00 00 00\nc7 44 24 0c 08 00 00 00\nc7 44 24 08 08 00 00 00\n41 b9 08 00 00 00\n44 3b 4c 24 14\n73 70\n8b 44 24 08\n85 c0\n78 68\n3b 44 24 10\n73 62\n48 8b 3d b0 16 20 00\n89 04 24\n48 8d 4c 24 30\n4c 8d 44 24 20\n4c 89 f6\n4c 89 fa\ne8 68 f3 ff ff\n48 89 c3\n48 8b 3d 8e 16 20 00\n4c 89 f6\ne8 36 f3 ff ff\n48 8b 3d 7f 16 20 00\n4c 89 fe\ne8 27 f3 ff ff\n48 89 d8\n48 83 c4 50\n5b\n41 5e\n41 5f\nc3\n48 8b 3d 33 16 20 00\n48 8b 15 3c 16 20 00\nbe e6 25 40 00\neb 13\n48 8b 3d 1e 16 20 00\n48 8b 15 27 16 20 00\nbe 2c 26 40 00\n31 c0\ne8 3b f3 ff ff\nbf 01 00 00 00\ne8 51 f4 ff ff\n'
p180
S'.text:00000000004019a0\n.text:00000000004019a2\n.text:00000000004019a4\n.text:00000000004019a5\n.text:00000000004019a9\n.text:00000000004019ac\n.text:00000000004019af\n.text:00000000004019b6\n.text:00000000004019bd\n.text:00000000004019c4\n.text:00000000004019cb\n.text:00000000004019cf\n.text:00000000004019d4\n.text:00000000004019d9\n.text:00000000004019de\n.text:00000000004019e3\n.text:00000000004019ea\n.text:00000000004019f1\n.text:00000000004019f8\n.text:00000000004019ff\n.text:0000000000401a03\n.text:0000000000401a08\n.text:0000000000401a0d\n.text:0000000000401a12\n.text:0000000000401a17\n.text:0000000000401a1e\n.text:0000000000401a20\n.text:0000000000401a25\n.text:0000000000401a2a\n.text:0000000000401a2f\n.text:0000000000401a34\n.text:0000000000401a39\n.text:0000000000401a3e\n.text:0000000000401a43\n.text:0000000000401a48\n.text:0000000000401a4d\n.text:0000000000401a52\n.text:0000000000401a55\n.text:0000000000401a5a\n.text:0000000000401a5d\n.text:0000000000401a62\n.text:0000000000401a67\n.text:0000000000401a69\n.text:0000000000401a6c\n.text:0000000000401a6f\n.text:0000000000401a74\n.text:0000000000401a77\n.text:0000000000401a7b\n.text:0000000000401a7f\n.text:0000000000401a85\n.text:0000000000401a89\n.text:0000000000401a8d\n.text:0000000000401a93\n.text:0000000000401a98\n.text:0000000000401a9c\n.text:0000000000401a9f\n.text:0000000000401aa2\n.text:0000000000401aa4\n.text:0000000000401aa7\n.text:0000000000401aa9\n.text:0000000000401aae\n.text:0000000000401ab6\n.text:0000000000401abe\n.text:0000000000401ac4\n.text:0000000000401ac9\n.text:0000000000401acb\n.text:0000000000401acf\n.text:0000000000401ad1\n.text:0000000000401ad3\n.text:0000000000401ad7\n.text:0000000000401ad9\n.text:0000000000401ae0\n.text:0000000000401ae3\n.text:0000000000401ae8\n.text:0000000000401aed\n.text:0000000000401af0\n.text:0000000000401af3\n.text:0000000000401af8\n.text:0000000000401afb\n.text:0000000000401b02\n.text:0000000000401b05\n.text:0000000000401b0a\n.text:0000000000401b11\n.text:0000000000401b14\n.text:0000000000401b19\n.text:0000000000401b1c\n.text:0000000000401b20\n.text:0000000000401b21\n.text:0000000000401b23\n.text:0000000000401b25\n.text:0000000000401b26\n.text:0000000000401b2d\n.text:0000000000401b34\n.text:0000000000401b39\n.text:0000000000401b3b\n.text:0000000000401b42\n.text:0000000000401b49\n.text:0000000000401b4e\n.text:0000000000401b50\n.text:0000000000401b55\n.text:0000000000401b5a\n'
p181
tp182
sS'MakeModulaBitmap'
p183
(S'\n__stdcall MakeModulaBitmap()\n'
p184
V\u000aPixmap MakeModulaBitmap(void)\u000a\u000a{\u000a  ulong uVar1;\u000a  byte bVar2;\u000a  Pixmap PVar3;\u000a  int iVar4;\u000a  long lVar5;\u000a  int in_ESI;\u000a  int in_EDI;\u000a  ulong uVar6;\u000a  char modula_data [32];\u000a  byte local_28 [40];\u000a  \u000a  iVar4 = 0xf;\u000a  uVar1 = 0;\u000a  do {\u000a    uVar6 = uVar1;\u000a    uVar1 = (ulong)(iVar4 % in_EDI == 0) + uVar6 * 2;\u000a    iVar4 = iVar4 + -1;\u000a  } while (iVar4 != -1);\u000a  lVar5 = 0;\u000a  do {\u000a    bVar2 = -((int)lVar5 % in_ESI == 0);\u000a    local_28[lVar5 * 2] = bVar2 | (byte)uVar1;\u000a    local_28[lVar5 * 2 + 1] = bVar2 | (byte)(uVar6 >> 7);\u000a    lVar5 = lVar5 + 1;\u000a  } while (lVar5 != 0x10);\u000a  PVar3 = XCreateBitmapFromData(dpy,root,local_28,0x10,0x10);\u000a  return PVar3;\u000a}\u000a\u000a
p185
S'MOV ECX,0xf\nXOR R9D,R9D\nNOP dword ptr [RAX + RAX*0x1]\nMOV R8,R9\nMOV EAX,ECX\nCDQ\nIDIV EDI\nXOR EAX,EAX\nTEST EDX,EDX\nSETZ AL\nLEA R9,[RAX + R8*0x2]\nDEC ECX\nCMP ECX,-0x1\nJNZ 0x00401f90\nSUB RSP,0x28\nSHR R8,0x7\nXOR ECX,ECX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EAX,ECX\nCDQ\nIDIV ESI\nCMP EDX,0x1\nSBB AL,AL\nMOV EDX,EAX\nOR DL,R9B\nOR AL,R8B\nMOV byte ptr [RSP + RCX*0x2],DL\nMOV byte ptr [RSP + RCX*0x2 + 0x1],AL\nINC RCX\nCMP RCX,0x10\nJNZ 0x00401fc0\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RDX,RSP\nMOV ECX,0x10\nMOV R8D,0x10\nCALL 0x00400e50\nADD RSP,0x28\nRET\n'
p186
S'b9 0f 00 00 00\n45 31 c9\n0f 1f 84 00 00 00 00 00\n4d 89 c8\n89 c8\n99\nf7 ff\n31 c0\n85 d2\n0f 94 c0\n4e 8d 0c 40\nff c9\n83 f9 ff\n75 e6\n48 83 ec 28\n49 c1 e8 07\n31 c9\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 c8\n99\nf7 fe\n83 fa 01\n18 c0\n89 c2\n44 08 ca\n44 08 c0\n88 14 4c\n88 44 4c 01\n48 ff c1\n48 83 f9 10\n75 de\n48 8b 3d a7 11 20 00\n48 8b 35 b0 11 20 00\n48 89 e2\nb9 10 00 00 00\n41 b8 10 00 00 00\ne8 4d ee ff ff\n48 83 c4 28\nc3\n'
p187
S'.text:0000000000401f80\n.text:0000000000401f85\n.text:0000000000401f88\n.text:0000000000401f90\n.text:0000000000401f93\n.text:0000000000401f95\n.text:0000000000401f96\n.text:0000000000401f98\n.text:0000000000401f9a\n.text:0000000000401f9c\n.text:0000000000401f9f\n.text:0000000000401fa3\n.text:0000000000401fa5\n.text:0000000000401fa8\n.text:0000000000401faa\n.text:0000000000401fae\n.text:0000000000401fb2\n.text:0000000000401fb4\n.text:0000000000401fc0\n.text:0000000000401fc2\n.text:0000000000401fc3\n.text:0000000000401fc5\n.text:0000000000401fc8\n.text:0000000000401fca\n.text:0000000000401fcc\n.text:0000000000401fcf\n.text:0000000000401fd2\n.text:0000000000401fd5\n.text:0000000000401fd9\n.text:0000000000401fdc\n.text:0000000000401fe0\n.text:0000000000401fe2\n.text:0000000000401fe9\n.text:0000000000401ff0\n.text:0000000000401ff3\n.text:0000000000401ff8\n.text:0000000000401ffe\n.text:0000000000402003\n.text:0000000000402007\n'
p188
tp189
sS'XSetCloseDownMode'
p190
(S'\n__stdcall XSetCloseDownMode()\n'
p191
V\u000avoid XSetCloseDownMode(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetCloseDownMode_00603028)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00603028]\n'
p193
S'ff 25 32 22 20 00\n'
p194
S'.plt:0000000000400df0\n'
p195
tp196
sS'XcursorImagesLoadCursor'
p197
(S'\n__stdcall XcursorImagesLoadCursor()\n'
p198
V\u000avoid XcursorImagesLoadCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XcursorImagesLoadCursor_00603080)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x00603080]\n'
p200
S'ff 25 da 21 20 00\n'
p201
S'.plt:0000000000400ea0\n'
p202
tp203
sS'XFreePixmap'
p204
(S'\n__stdcall XFreePixmap()\n'
p205
V\u000avoid XFreePixmap(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreePixmap_00603050)();\u000a  return;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00603050]\n'
p207
S'ff 25 0a 22 20 00\n'
p208
S'.plt:0000000000400e40\n'
p209
tp210
sS'XCreateBitmapFromData'
p211
(S'\n__stdcall XCreateBitmapFromData()\n'
p212
V\u000avoid XCreateBitmapFromData(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateBitmapFromData_00603058)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x00603058]\n'
p214
S'ff 25 02 22 20 00\n'
p215
S'.plt:0000000000400e50\n'
p216
tp217
sS'XOpenDisplay'
p218
(S'\n__stdcall XOpenDisplay()\n'
p219
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_00603070)();\u000a  return;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x00603070]\n'
p221
S'ff 25 ea 21 20 00\n'
p222
S'.plt:0000000000400e80\n'
p223
tp224
sS'_start'
p225
(S'\n__stdcall _start()\n'
p226
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00602ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p227
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4022d0\nMOV RCX,0x402260\nMOV RDI,0x401110\nCALL qword ptr [0x00602ff0]\nHLT\n'
p228
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 d0 22 40 00\n48 c7 c1 60 22 40 00\n48 c7 c7 10 11 40 00\nff 15 b6 1f 20 00\nf4\n'
p229
S'.text:0000000000401010\n.text:0000000000401012\n.text:0000000000401015\n.text:0000000000401016\n.text:0000000000401019\n.text:000000000040101d\n.text:000000000040101e\n.text:000000000040101f\n.text:0000000000401026\n.text:000000000040102d\n.text:0000000000401034\n.text:000000000040103a\n'
p230
tp231
sS'SetBackgroundToBitmap'
p232
(S'\n__stdcall SetBackgroundToBitmap(Pixmap bitmap)\n'
p233
V\u000avoid SetBackgroundToBitmap(Pixmap bitmap)\u000a\u000a{\u000a  ulong uVar1;\u000a  undefined8 uVar2;\u000a  Pixmap PVar3;\u000a  uint in_EDX;\u000a  uint in_ESI;\u000a  undefined8 uVar4;\u000a  undefined auStack168 [16];\u000a  ulong local_98;\u000a  ulong local_90;\u000a  \u000a  local_98 = NameToPixel(fore_color,*(ulong *)(*(long *)(dpy + 0xe8) + 0x60 + (long)screen * 0x80));\u000a  uVar1 = NameToPixel(back_color,*(ulong *)(*(long *)(dpy + 0xe8) + 0x58 + (long)screen * 0x80));\u000a  local_90 = uVar1;\u000a  if (reverse == 1) {\u000a    local_90 = local_98;\u000a    local_98 = uVar1;\u000a  }\u000a  uVar2 = XCreateGC(dpy,root,0xc,auStack168);\u000a  uVar4 = 0x401d2d;\u000a  PVar3 = XCreatePixmap(dpy,root,(ulong)in_ESI,(ulong)in_EDX,\u000a                        (ulong)*(uint *)(*(long *)(dpy + 0xe8) + 0x38 + (long)screen * 0x80));\u000a  XCopyPlane(dpy,bitmap,PVar3,uVar2,0,0,(ulong)in_ESI,(ulong)in_EDX,0,0,1,uVar4);\u000a  XSetWindowBackgroundPixmap(dpy,root,PVar3);\u000a  XFreeGC(dpy,uVar2);\u000a  XFreePixmap(dpy,bitmap);\u000a  if (save_colors != 1) {\u000a    XFreePixmap(dpy,PVar3);\u000a    PVar3 = save_pixmap;\u000a  }\u000a  save_pixmap = PVar3;\u000a  XClearWindow(dpy,root);\u000a  unsave_past = 1;\u000a  return;\u000a}\u000a\u000a
p234
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x80\nMOV R12D,EDX\nMOV R15D,ESI\nMOV R14,RDI\nMOV RDI,qword ptr [0x00603178]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x60]\nCALL 0x00401df0\nMOV qword ptr [RSP + 0x10],RAX\nMOV RDI,qword ptr [0x00603180]\nMOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x58]\nCALL 0x00401df0\nMOV qword ptr [RSP + 0x18],RAX\nCMP byte ptr [0x00603188],0x1\nJNZ 0x00401cdf\nMOV RCX,qword ptr [RSP + 0x10]\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x18],RCX\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RCX,RSP\nMOV EDX,0xc\nCALL 0x00400f40\nMOV R13,RAX\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV R8D,dword ptr [RAX + RCX*0x1 + 0x38]\nMOV EDX,R15D\nMOV ECX,R12D\nCALL 0x00400ff0\nMOV RBX,RAX\nMOV RDI,qword ptr [0x00603190]\nSUB RSP,0x8\nMOV R8D,0x0\nMOV R9D,0x0\nMOV RSI,R14\nMOV RDX,RBX\nMOV RCX,R13\nPUSH 0x1\nPUSH 0x0\nPUSH 0x0\nPUSH R12\nPUSH R15\nCALL 0x00400e00\nADD RSP,0x30\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV RDX,RBX\nCALL 0x00400f60\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,R13\nCALL 0x00400fa0\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,R14\nCALL 0x00400e40\nCMP byte ptr [0x006031ac],0x1\nJNZ 0x00401da9\nMOV qword ptr [0x006031b0],RBX\nJMP 0x00401db8\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,RBX\nCALL 0x00400e40\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nCALL 0x00400dd0\nMOV byte ptr [0x006031a8],0x1\nADD RSP,0x80\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p235
S'41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 80 00 00 00\n41 89 d4\n41 89 f7\n49 89 fe\n48 8b 3d 08 15 20 00\n48 8b 05 19 15 20 00\n48 8b 80 e8 00 00 00\n48 63 0d 13 15 20 00\n48 c1 e1 07\n48 8b 74 08 60\ne8 5d 01 00 00\n48 89 44 24 10\n48 8b 3d e1 14 20 00\n48 8b 05 ea 14 20 00\n48 8b 80 e8 00 00 00\n48 63 0d e4 14 20 00\n48 c1 e1 07\n48 8b 74 08 58\ne8 2e 01 00 00\n48 89 44 24 18\n80 3d ba 14 20 00 01\n75 0f\n48 8b 4c 24 10\n48 89 44 24 10\n48 89 4c 24 18\n48 8b 3d aa 14 20 00\n48 8b 35 b3 14 20 00\n48 89 e1\nba 0c 00 00 00\ne8 46 f2 ff ff\n49 89 c5\n48 8b 3d 8c 14 20 00\n48 8b 35 95 14 20 00\n48 8b 87 e8 00 00 00\n48 63 0d 7f 14 20 00\n48 c1 e1 07\n44 8b 44 08 38\n44 89 fa\n44 89 e1\ne8 c3 f2 ff ff\n48 89 c3\n48 8b 3d 59 14 20 00\n48 83 ec 08\n41 b8 00 00 00 00\n41 b9 00 00 00 00\n4c 89 f6\n48 89 da\n4c 89 e9\n6a 01\n6a 00\n6a 00\n41 54\n41 57\ne8 a1 f0 ff ff\n48 83 c4 30\n48 8b 3d 26 14 20 00\n48 8b 35 2f 14 20 00\n48 89 da\ne8 e7 f1 ff ff\n48 8b 3d 10 14 20 00\n4c 89 ee\ne8 18 f2 ff ff\n48 8b 3d 01 14 20 00\n4c 89 f6\ne8 a9 f0 ff ff\n80 3d 0e 14 20 00 01\n75 09\n48 89 1d 09 14 20 00\neb 0f\n48 8b 3d e0 13 20 00\n48 89 de\ne8 88 f0 ff ff\n48 8b 3d d1 13 20 00\n48 8b 35 da 13 20 00\ne8 05 f0 ff ff\nc6 05 d6 13 20 00 01\n48 81 c4 80 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p236
S'.text:0000000000401c50\n.text:0000000000401c52\n.text:0000000000401c54\n.text:0000000000401c56\n.text:0000000000401c58\n.text:0000000000401c59\n.text:0000000000401c60\n.text:0000000000401c63\n.text:0000000000401c66\n.text:0000000000401c69\n.text:0000000000401c70\n.text:0000000000401c77\n.text:0000000000401c7e\n.text:0000000000401c85\n.text:0000000000401c89\n.text:0000000000401c8e\n.text:0000000000401c93\n.text:0000000000401c98\n.text:0000000000401c9f\n.text:0000000000401ca6\n.text:0000000000401cad\n.text:0000000000401cb4\n.text:0000000000401cb8\n.text:0000000000401cbd\n.text:0000000000401cc2\n.text:0000000000401cc7\n.text:0000000000401cce\n.text:0000000000401cd0\n.text:0000000000401cd5\n.text:0000000000401cda\n.text:0000000000401cdf\n.text:0000000000401ce6\n.text:0000000000401ced\n.text:0000000000401cf0\n.text:0000000000401cf5\n.text:0000000000401cfa\n.text:0000000000401cfd\n.text:0000000000401d04\n.text:0000000000401d0b\n.text:0000000000401d12\n.text:0000000000401d19\n.text:0000000000401d1d\n.text:0000000000401d22\n.text:0000000000401d25\n.text:0000000000401d28\n.text:0000000000401d2d\n.text:0000000000401d30\n.text:0000000000401d37\n.text:0000000000401d3b\n.text:0000000000401d41\n.text:0000000000401d47\n.text:0000000000401d4a\n.text:0000000000401d4d\n.text:0000000000401d50\n.text:0000000000401d52\n.text:0000000000401d54\n.text:0000000000401d56\n.text:0000000000401d58\n.text:0000000000401d5a\n.text:0000000000401d5f\n.text:0000000000401d63\n.text:0000000000401d6a\n.text:0000000000401d71\n.text:0000000000401d74\n.text:0000000000401d79\n.text:0000000000401d80\n.text:0000000000401d83\n.text:0000000000401d88\n.text:0000000000401d8f\n.text:0000000000401d92\n.text:0000000000401d97\n.text:0000000000401d9e\n.text:0000000000401da0\n.text:0000000000401da7\n.text:0000000000401da9\n.text:0000000000401db0\n.text:0000000000401db3\n.text:0000000000401db8\n.text:0000000000401dbf\n.text:0000000000401dc6\n.text:0000000000401dcb\n.text:0000000000401dd2\n.text:0000000000401dd9\n.text:0000000000401dda\n.text:0000000000401ddc\n.text:0000000000401dde\n.text:0000000000401de0\n.text:0000000000401de2\n'
p237
tp238
sS'XReadBitmapFile'
p239
(S'\n__stdcall XReadBitmapFile()\n'
p240
V\u000avoid XReadBitmapFile(void)\u000a\u000a{\u000a  (*(code *)PTR_XReadBitmapFile_00603130)();\u000a  return;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x00603130]\n'
p242
S'ff 25 2a 21 20 00\n'
p243
S'.plt:0000000000401000\n'
p244
tp245
sS'XFreeGC'
p246
(S'\n__stdcall XFreeGC()\n'
p247
V\u000avoid XFreeGC(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeGC_00603100)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00603100]\n'
p249
S'ff 25 5a 21 20 00\n'
p250
S'.plt:0000000000400fa0\n'
p251
tp252
sS'deregister_tm_clones'
p253
(S'\n__stdcall deregister_tm_clones()\n'
p254
V\u000a/* WARNING: Removing unreachable block (ram,0x00401055) */\u000a/* WARNING: Removing unreachable block (ram,0x0040105f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p255
S'MOV EAX,0x603157\nPUSH RBP\nSUB RAX,0x603150\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401070\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401070\nPOP RBP\nMOV EDI,0x603150\nJMP RAX\nPOP RBP\nRET\n'
p256
S'b8 57 31 60 00\n55\n48 2d 50 31 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 50 31 60 00\nff e0\n5d\nc3\n'
p257
S'.text:0000000000401040\n.text:0000000000401045\n.text:0000000000401046\n.text:000000000040104c\n.text:0000000000401050\n.text:0000000000401053\n.text:0000000000401055\n.text:000000000040105a\n.text:000000000040105d\n.text:000000000040105f\n.text:0000000000401060\n.text:0000000000401065\n.text:0000000000401070\n.text:0000000000401071\n'
p258
tp259
sS'XmuCursorNameToIndex'
p260
(S'\n__stdcall XmuCursorNameToIndex()\n'
p261
V\u000avoid XmuCursorNameToIndex(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuCursorNameToIndex_00603088)();\u000a  return;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x00603088]\n'
p263
S'ff 25 d2 21 20 00\n'
p264
S'.plt:0000000000400eb0\n'
p265
tp266
sS'XDisplayName'
p267
(S'\n__stdcall XDisplayName()\n'
p268
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_006030a8)();\u000a  return;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006030a8]\n'
p270
S'ff 25 b2 21 20 00\n'
p271
S'.plt:0000000000400ef0\n'
p272
tp273
sS'XCreatePixmap'
p274
(S'\n__stdcall XCreatePixmap()\n'
p275
V\u000avoid XCreatePixmap(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreatePixmap_00603128)();\u000a  return;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00603128]\n'
p277
S'ff 25 32 21 20 00\n'
p278
S'.plt:0000000000400ff0\n'
p279
tp280
sS'XUndefineCursor'
p281
(S'\n__stdcall XUndefineCursor()\n'
p282
V\u000avoid XUndefineCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XUndefineCursor_006030b8)();\u000a  return;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x006030b8]\n'
p284
S'ff 25 a2 21 20 00\n'
p285
S'.plt:0000000000400f10\n'
p286
tp287
sS'atoi'
p288
(S'\n__stdcall atoi(char * __nptr)\n'
p289
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint atoi(char *__nptr)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_atoi_006030f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p290
S'JMP qword ptr [0x006030f0]\n'
p291
S'ff 25 6a 21 20 00\n'
p292
S'.plt:0000000000400f80\n'
p293
tp294
sS'register_tm_clones'
p295
(S'\n__stdcall register_tm_clones()\n'
p296
V\u000a/* WARNING: Removing unreachable block (ram,0x004010a3) */\u000a/* WARNING: Removing unreachable block (ram,0x004010ad) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p297
S'MOV ESI,0x603150\nPUSH RBP\nSUB RSI,0x603150\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x004010b8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004010b8\nPOP RBP\nMOV EDI,0x603150\nJMP RAX\nPOP RBP\nRET\n'
p298
S'be 50 31 60 00\n55\n48 81 ee 50 31 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 50 31 60 00\nff e0\n5d\nc3\n'
p299
S'.text:0000000000401080\n.text:0000000000401085\n.text:0000000000401086\n.text:000000000040108d\n.text:0000000000401091\n.text:0000000000401094\n.text:0000000000401097\n.text:000000000040109b\n.text:000000000040109e\n.text:00000000004010a1\n.text:00000000004010a3\n.text:00000000004010a8\n.text:00000000004010ab\n.text:00000000004010ad\n.text:00000000004010ae\n.text:00000000004010b3\n.text:00000000004010b8\n.text:00000000004010b9\n'
p300
tp301
sS'ReadBitmapFile'
p302
(S'\n__stdcall ReadBitmapFile(char * filename, uint * width, uint * height, int * x_hot, int * y_hot)\n'
p303
V\u000aPixmap ReadBitmapFile(char *filename,uint *width,uint *height,int *x_hot,int *y_hot)\u000a\u000a{\u000a  int iVar1;\u000a  Pixmap in_RAX;\u000a  char *__format;\u000a  Pixmap local_18;\u000a  \u000a  local_18 = in_RAX;\u000a  iVar1 = XReadBitmapFile(dpy,root,filename,width,height,&local_18,x_hot,y_hot);\u000a  if (iVar1 == 0) {\u000a    return local_18;\u000a  }\u000a  if (iVar1 == 2) {\u000a    __format = "%s: bad bitmap format file: %s\u005cn";\u000a  }\u000a  else {\u000a    if (iVar1 == 1) {\u000a      __format = "%s: can\u005c't open file: %s\u005cn";\u000a    }\u000a    else {\u000a      __format = "%s: insufficient memory for bitmap: %s";\u000a    }\u000a  }\u000a  fprintf(stderr,__format,program_name,filename);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(1);\u000a}\u000a\u000a
p304
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RAX,R8\nMOV R10,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV R9,RSP\nMOV RDX,R14\nMOV R8,RBX\nPUSH RAX\nPUSH R10\nCALL 0x00401000\nADD RSP,0x10\nTEST EAX,EAX\nJNZ 0x00401f36\nMOV RAX,qword ptr [RSP]\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nCMP EAX,0x2\nJZ 0x00401f55\nCMP EAX,0x1\nJNZ 0x00401f5c\nMOV ESI,0x4026be\nJMP 0x00401f61\nMOV ESI,0x4026d7\nJMP 0x00401f61\nMOV ESI,0x4026f7\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00400e90\nMOV EDI,0x1\nCALL 0x00400fb0\n'
p305
S'41 56\n53\n50\n4c 89 c0\n49 89 ca\n48 89 d3\n48 89 f1\n49 89 fe\n48 8b 3d 86 12 20 00\n48 8b 35 8f 12 20 00\n49 89 e1\n4c 89 f2\n49 89 d8\n50\n41 52\ne8 de f0 ff ff\n48 83 c4 10\n85 c0\n75 0c\n48 8b 04 24\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 3d 23 12 20 00\n48 8b 15 2c 12 20 00\n83 f8 02\n74 0c\n83 f8 01\n75 0e\nbe be 26 40 00\neb 0c\nbe d7 26 40 00\neb 05\nbe f7 26 40 00\n31 c0\n4c 89 f1\ne8 25 ef ff ff\nbf 01 00 00 00\ne8 3b f0 ff ff\n'
p306
S'.text:0000000000401ef0\n.text:0000000000401ef2\n.text:0000000000401ef3\n.text:0000000000401ef4\n.text:0000000000401ef7\n.text:0000000000401efa\n.text:0000000000401efd\n.text:0000000000401f00\n.text:0000000000401f03\n.text:0000000000401f0a\n.text:0000000000401f11\n.text:0000000000401f14\n.text:0000000000401f17\n.text:0000000000401f1a\n.text:0000000000401f1b\n.text:0000000000401f1d\n.text:0000000000401f22\n.text:0000000000401f26\n.text:0000000000401f28\n.text:0000000000401f2a\n.text:0000000000401f2e\n.text:0000000000401f32\n.text:0000000000401f33\n.text:0000000000401f35\n.text:0000000000401f36\n.text:0000000000401f3d\n.text:0000000000401f44\n.text:0000000000401f47\n.text:0000000000401f49\n.text:0000000000401f4c\n.text:0000000000401f4e\n.text:0000000000401f53\n.text:0000000000401f55\n.text:0000000000401f5a\n.text:0000000000401f5c\n.text:0000000000401f61\n.text:0000000000401f63\n.text:0000000000401f66\n.text:0000000000401f6b\n.text:0000000000401f70\n'
p307
tp308
sS'XChangeProperty'
p309
(S'\n__stdcall XChangeProperty()\n'
p310
V\u000avoid XChangeProperty(void)\u000a\u000a{\u000a  (*(code *)PTR_XChangeProperty_006030a0)();\u000a  return;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x006030a0]\n'
p312
S'ff 25 ba 21 20 00\n'
p313
S'.plt:0000000000400ee0\n'
p314
tp315
sS'XCreateGlyphCursor'
p316
(S'\n__stdcall XCreateGlyphCursor()\n'
p317
V\u000avoid XCreateGlyphCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateGlyphCursor_00603090)();\u000a  return;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x00603090]\n'
p319
S'ff 25 ca 21 20 00\n'
p320
S'.plt:0000000000400ec0\n'
p321
tp322
sS'XCloseDisplay'
p323
(S'\n__stdcall XCloseDisplay()\n'
p324
V\u000avoid XCloseDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XCloseDisplay_00603120)();\u000a  return;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x00603120]\n'
p326
S'ff 25 3a 21 20 00\n'
p327
S'.plt:0000000000400fe0\n'
p328
tp329
sS'fprintf'
p330
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p331
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00603078)();\u000a  return iVar1;\u000a}\u000a\u000a
p332
S'JMP qword ptr [0x00603078]\n'
p333
S'ff 25 e2 21 20 00\n'
p334
S'.plt:0000000000400e90\n'
p335
tp336
sS'XAllocColor'
p337
(S'\n__stdcall XAllocColor()\n'
p338
V\u000avoid XAllocColor(void)\u000a\u000a{\u000a  (*(code *)PTR_XAllocColor_00603020)();\u000a  return;\u000a}\u000a\u000a
p339
S'JMP qword ptr [0x00603020]\n'
p340
S'ff 25 3a 22 20 00\n'
p341
S'.plt:0000000000400de0\n'
p342
tp343
sS'puts'
p344
(S'\n__stdcall puts(char * __s)\n'
p345
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00603038)();\u000a  return iVar1;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x00603038]\n'
p347
S'ff 25 22 22 20 00\n'
p348
S'.plt:0000000000400e10\n'
p349
tp350
sS'XInternAtom'
p351
(S'\n__stdcall XInternAtom()\n'
p352
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_00603098)();\u000a  return;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x00603098]\n'
p354
S'ff 25 c2 21 20 00\n'
p355
S'.plt:0000000000400ed0\n'
p356
tp357
sS'FixupState'
p358
(S'\n__stdcall FixupState()\n'
p359
V\u000avoid FixupState(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  int format;\u000a  uchar *data;\u000a  ulong length;\u000a  int local_3c;\u000a  undefined8 *local_38;\u000a  long local_30;\u000a  long local_28;\u000a  long local_20;\u000a  \u000a  if ((*(byte *)(*(long *)(*(long *)(dpy + 0xe8) + 0x40 + (long)screen * 0x80) + 0x10) & 1) == 0) {\u000a    unsave_past = 0;\u000a  }\u000a  if ((unsave_past != 0) || ((save_colors & 1) != 0)) {\u000a    uVar1 = XInternAtom(dpy,"_XSETROOT_ID",0);\u000a    if (unsave_past == 1) {\u000a      XGetWindowProperty(dpy,root,uVar1,0,1,1,0,&local_20,&local_3c,&local_28,&local_30,&local_38);\u000a      if ((((local_20 == 0x14) && (local_3c == 0x20)) && (local_28 == 1)) && (local_30 == 0)) {\u000a        XKillClient(dpy,*local_38);\u000a      }\u000a      else {\u000a        if (local_20 != 0) {\u000a          fprintf(stderr,"%s: warning: _XSETROOT_ID property is garbage\u005cn",program_name);\u000a        }\u000a      }\u000a    }\u000a    if (save_colors == 1) {\u000a      if (save_pixmap == 0) {\u000a        save_pixmap = XCreatePixmap(dpy,root,1,1,1);\u000a      }\u000a      XChangeProperty(dpy,root,uVar1,0x14,0x20,0,&save_pixmap,1);\u000a      XSetCloseDownMode(dpy,1);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p360
S'MOV RAX,qword ptr [0x00603190]\nMOV RAX,qword ptr [0xe8 + RAX]\nMOVSXD RCX,dword ptr [0x00603198]\nSHL RCX,0x7\nMOV RAX,qword ptr [RAX + RCX*0x1 + 0x40]\nTEST byte ptr [RAX + 0x10],0x1\nJNZ 0x0040203b\nMOV byte ptr [0x006031a8],0x0\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x30\nMOV AL,byte ptr [0x006031a8]\nTEST AL,AL\nJNZ 0x0040205b\nTEST byte ptr [0x006031ac],0x1\nJZ 0x0040219c\nMOV RDI,qword ptr [0x00603190]\nMOV ESI,0x4025aa\nXOR EDX,EDX\nCALL 0x00400ed0\nMOV RBX,RAX\nCMP byte ptr [0x006031a8],0x1\nJNZ 0x0040211c\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nLEA RAX,[RSP + 0x10]\nLEA R10,[RSP + 0x18]\nLEA R11,[RSP + 0x20]\nLEA R14,[RSP + 0xc]\nLEA R15,[RSP + 0x28]\nMOV ECX,0x0\nMOV R8D,0x1\nMOV R9D,0x1\nMOV RDX,RBX\nPUSH RAX\nPUSH R10\nPUSH R11\nPUSH R14\nPUSH R15\nPUSH 0x0\nCALL 0x00400fd0\nADD RSP,0x30\nMOV RAX,qword ptr [RSP + 0x28]\nCMP RAX,0x14\nJNZ 0x00402113\nCMP dword ptr [RSP + 0xc],0x20\nJNZ 0x00402113\nCMP qword ptr [RSP + 0x20],0x1\nJNZ 0x00402113\nMOV RCX,qword ptr [RSP + 0x18]\nTEST RCX,RCX\nJNZ 0x00402113\nMOV RDI,qword ptr [0x00603190]\nMOV RAX,qword ptr [RSP + 0x10]\nMOV RSI,qword ptr [RAX]\nCALL 0x00400e30\nCMP byte ptr [0x006031ac],0x1\nJZ 0x00402125\nJMP 0x0040219c\nTEST RAX,RAX\nJNZ 0x004021a6\nCMP byte ptr [0x006031ac],0x1\nJNZ 0x0040219c\nCMP qword ptr [0x006031b0],0x0\nJNZ 0x00402159\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV EDX,0x1\nMOV ECX,0x1\nMOV R8D,0x1\nCALL 0x00400ff0\nMOV qword ptr [0x006031b0],RAX\nMOV RDI,qword ptr [0x00603190]\nMOV RSI,qword ptr [0x006031a0]\nMOV ECX,0x14\nMOV R8D,0x20\nMOV R9D,0x0\nMOV RDX,RBX\nPUSH 0x1\nPUSH 0x6031b0\nCALL 0x00400ee0\nADD RSP,0x10\nMOV RDI,qword ptr [0x00603190]\nMOV ESI,0x1\nCALL 0x00400df0\nADD RSP,0x30\nPOP RBX\nPOP R14\nPOP R15\nRET\nMOV RDI,qword ptr [0x00603160]\nMOV RDX,qword ptr [0x00603170]\nMOV ESI,0x4025b7\nXOR EAX,EAX\nCALL 0x00400e90\nCMP byte ptr [0x006031ac],0x1\nJZ 0x00402125\nJMP 0x0040219c\n'
p361
S'48 8b 05 79 11 20 00\n48 8b 80 e8 00 00 00\n48 63 0d 73 11 20 00\n48 c1 e1 07\n48 8b 44 08 40\nf6 40 10 01\n75 07\nc6 05 6d 11 20 00 00\n41 57\n41 56\n53\n48 83 ec 30\n8a 05 5e 11 20 00\n84 c0\n75 0d\nf6 05 57 11 20 00 01\n0f 84 41 01 00 00\n48 8b 3d 2e 11 20 00\nbe aa 25 40 00\n31 d2\ne8 62 ee ff ff\n48 89 c3\n80 3d 30 11 20 00 01\n0f 85 9e 00 00 00\n48 8b 3d 0b 11 20 00\n48 8b 35 14 11 20 00\n48 8d 44 24 10\n4c 8d 54 24 18\n4c 8d 5c 24 20\n4c 8d 74 24 0c\n4c 8d 7c 24 28\nb9 00 00 00 00\n41 b8 01 00 00 00\n41 b9 01 00 00 00\n48 89 da\n50\n41 52\n41 53\n41 56\n41 57\n6a 00\ne8 07 ef ff ff\n48 83 c4 30\n48 8b 44 24 28\n48 83 f8 14\n75 3b\n83 7c 24 0c 20\n75 34\n48 83 7c 24 20 01\n75 2c\n48 8b 4c 24 18\n48 85 c9\n75 22\n48 8b 3d 98 10 20 00\n48 8b 44 24 10\n48 8b 30\ne8 2b ed ff ff\n80 3d a0 10 20 00 01\n74 17\ne9 89 00 00 00\n48 85 c0\n0f 85 8a 00 00 00\n80 3d 89 10 20 00 01\n75 77\n48 83 3d 83 10 20 00 00\n75 2a\n48 8b 3d 5a 10 20 00\n48 8b 35 63 10 20 00\nba 01 00 00 00\nb9 01 00 00 00\n41 b8 01 00 00 00\ne8 9e ee ff ff\n48 89 05 57 10 20 00\n48 8b 3d 30 10 20 00\n48 8b 35 39 10 20 00\nb9 14 00 00 00\n41 b8 20 00 00 00\n41 b9 00 00 00 00\n48 89 da\n6a 01\n68 b0 31 60 00\ne8 59 ed ff ff\n48 83 c4 10\n48 8b 3d fe 0f 20 00\nbe 01 00 00 00\ne8 54 ec ff ff\n48 83 c4 30\n5b\n41 5e\n41 5f\nc3\n48 8b 3d b3 0f 20 00\n48 8b 15 bc 0f 20 00\nbe b7 25 40 00\n31 c0\ne8 d0 ec ff ff\n80 3d e5 0f 20 00 01\n0f 84 58 ff ff ff\neb cd\n'
p362
S'.text:0000000000402010\n.text:0000000000402017\n.text:000000000040201e\n.text:0000000000402025\n.text:0000000000402029\n.text:000000000040202e\n.text:0000000000402032\n.text:0000000000402034\n.text:000000000040203b\n.text:000000000040203d\n.text:000000000040203f\n.text:0000000000402040\n.text:0000000000402044\n.text:000000000040204a\n.text:000000000040204c\n.text:000000000040204e\n.text:0000000000402055\n.text:000000000040205b\n.text:0000000000402062\n.text:0000000000402067\n.text:0000000000402069\n.text:000000000040206e\n.text:0000000000402071\n.text:0000000000402078\n.text:000000000040207e\n.text:0000000000402085\n.text:000000000040208c\n.text:0000000000402091\n.text:0000000000402096\n.text:000000000040209b\n.text:00000000004020a0\n.text:00000000004020a5\n.text:00000000004020aa\n.text:00000000004020b0\n.text:00000000004020b6\n.text:00000000004020b9\n.text:00000000004020ba\n.text:00000000004020bc\n.text:00000000004020be\n.text:00000000004020c0\n.text:00000000004020c2\n.text:00000000004020c4\n.text:00000000004020c9\n.text:00000000004020cd\n.text:00000000004020d2\n.text:00000000004020d6\n.text:00000000004020d8\n.text:00000000004020dd\n.text:00000000004020df\n.text:00000000004020e5\n.text:00000000004020e7\n.text:00000000004020ec\n.text:00000000004020ef\n.text:00000000004020f1\n.text:00000000004020f8\n.text:00000000004020fd\n.text:0000000000402100\n.text:0000000000402105\n.text:000000000040210c\n.text:000000000040210e\n.text:0000000000402113\n.text:0000000000402116\n.text:000000000040211c\n.text:0000000000402123\n.text:0000000000402125\n.text:000000000040212d\n.text:000000000040212f\n.text:0000000000402136\n.text:000000000040213d\n.text:0000000000402142\n.text:0000000000402147\n.text:000000000040214d\n.text:0000000000402152\n.text:0000000000402159\n.text:0000000000402160\n.text:0000000000402167\n.text:000000000040216c\n.text:0000000000402172\n.text:0000000000402178\n.text:000000000040217b\n.text:000000000040217d\n.text:0000000000402182\n.text:0000000000402187\n.text:000000000040218b\n.text:0000000000402192\n.text:0000000000402197\n.text:000000000040219c\n.text:00000000004021a0\n.text:00000000004021a1\n.text:00000000004021a3\n.text:00000000004021a5\n.text:00000000004021a6\n.text:00000000004021ad\n.text:00000000004021b4\n.text:00000000004021b9\n.text:00000000004021bb\n.text:00000000004021c0\n.text:00000000004021c7\n.text:00000000004021cd\n'
p363
tp364
sS'__do_global_dtors_aux'
p365
(S'\n__stdcall __do_global_dtors_aux()\n'
p366
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p367
S'CMP byte ptr [0x00603168],0x0\nJNZ 0x004010da\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401040\nPOP RBP\nMOV byte ptr [0x00603168],0x1\nRET\n'
p368
S'80 3d a1 20 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 8e 20 20 00 01\nf3 c3\n'
p369
S'.text:00000000004010c0\n.text:00000000004010c7\n.text:00000000004010c9\n.text:00000000004010ca\n.text:00000000004010cd\n.text:00000000004010d2\n.text:00000000004010d3\n.text:00000000004010da\n'
p370
tp371
sS'XCopyPlane'
p372
(S'\n__stdcall XCopyPlane()\n'
p373
V\u000avoid XCopyPlane(void)\u000a\u000a{\u000a  (*(code *)PTR_XCopyPlane_00603030)();\u000a  return;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x00603030]\n'
p375
S'ff 25 2a 22 20 00\n'
p376
S'.plt:0000000000400e00\n'
p377
tp378
sS'_fini'
p379
(S'\n__stdcall _fini()\n'
p380
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p381
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p382
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p383
S'.fini:00000000004022d4\n.fini:00000000004022d8\n.fini:00000000004022dc\n'
p384
tp385
sS'XSetWindowBackground'
p386
(S'\n__stdcall XSetWindowBackground()\n'
p387
V\u000avoid XSetWindowBackground(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetWindowBackground_006030f8)();\u000a  return;\u000a}\u000a\u000a
p388
S'JMP qword ptr [0x006030f8]\n'
p389
S'ff 25 62 21 20 00\n'
p390
S'.plt:0000000000400f90\n'
p391
tp392
s.