(dp0
S'ungetc'
p1
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p2
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_0060a190)();\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x0060a190]\n'
p4
S'ff 25 9a 89 20 00\n'
p5
S'.plt:00000000004017f0\n'
p6
tp7
sS'version_etc_arn'
p8
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p9
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_0040711b,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x4042d7;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x404358;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x4043ec;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x00404168\nMOV EDX,0x407108\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x004018e0\nJMP 0x0040417d\nMOV EDX,0x407114\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x004018e0\nXOR EDI,EDI\nMOV ESI,0x40711b\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x4073f0\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x004018e0\nXOR EDI,EDI\nMOV ESI,0x40711f\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00401740\nCMP R12,0x9\nJA 0x00404206\nJMP qword ptr [0x4070b8 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x4071ea\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004018e0\nXOR EDI,EDI\nMOV ESI,0x407329\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x38\nJMP 0x00404477\nXOR EDI,EDI\nMOV ESI,0x4071fa\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004018e0\nXOR EDI,EDI\nMOV ESI,0x407211\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004018e0\nXOR EDI,EDI\nMOV ESI,0x40722d\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x18\nJMP 0x00404477\nXOR EDI,EDI\nMOV ESI,0x40724d\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x18\nJMP 0x00404477\nXOR EDI,EDI\nMOV ESI,0x407271\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x28\nJMP 0x00404477\nXOR EDI,EDI\nMOV ESI,0x407299\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x28\nJMP 0x00404477\nXOR EDI,EDI\nMOV ESI,0x4072c5\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x38\nJMP 0x00404477\nXOR EDI,EDI\nMOV ESI,0x4072f5\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018e0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x00401530\n'
p11
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba 08 71 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 7a d7 ff ff\neb 15\nba 14 71 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 63 d7 ff ff\n31 ff\nbe 1b 71 40 00\nba 05 00 00 00\ne8 a2 d4 ff ff\n48 89 c1\nbe 01 00 00 00\nba f0 73 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 35 d7 ff ff\n31 ff\nbe 1f 71 40 00\nba 05 00 00 00\ne8 74 d4 ff ff\n48 89 c7\n4c 89 f6\ne8 79 d5 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 b8 70 40 00\n31 ff\nbe ea 71 40 00\nba 05 00 00 00\ne8 4a d4 ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 da d6 ff ff\n31 ff\nbe 29 73 40 00\nba 05 00 00 00\ne8 19 d4 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 91 d6 ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe fa 71 40 00\nba 05 00 00 00\ne8 c7 d3 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 53 d6 ff ff\n31 ff\nbe 11 72 40 00\nba 05 00 00 00\ne8 92 d3 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 1a d6 ff ff\n31 ff\nbe 2d 72 40 00\nba 05 00 00 00\ne8 59 d3 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 e4 d5 ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe 4d 72 40 00\nba 05 00 00 00\ne8 1a d3 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 a2 d5 ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe 71 72 40 00\nba 05 00 00 00\ne8 d8 d2 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 58 d5 ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe 99 72 40 00\nba 05 00 00 00\ne8 8e d2 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 0e d5 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe c5 72 40 00\nba 05 00 00 00\ne8 44 d2 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 bc d4 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe f5 72 40 00\nba 05 00 00 00\ne8 f5 d1 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 6d d4 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 ac d0 ff ff\n'
p12
S'.text:0000000000404130\n.text:0000000000404132\n.text:0000000000404134\n.text:0000000000404136\n.text:0000000000404137\n.text:0000000000404138\n.text:000000000040413b\n.text:000000000040413e\n.text:0000000000404141\n.text:0000000000404144\n.text:0000000000404147\n.text:000000000040414a\n.text:000000000040414f\n.text:0000000000404152\n.text:0000000000404154\n.text:0000000000404159\n.text:000000000040415b\n.text:000000000040415e\n.text:0000000000404161\n.text:0000000000404166\n.text:0000000000404168\n.text:000000000040416d\n.text:000000000040416f\n.text:0000000000404172\n.text:0000000000404175\n.text:0000000000404178\n.text:000000000040417d\n.text:000000000040417f\n.text:0000000000404184\n.text:0000000000404189\n.text:000000000040418e\n.text:0000000000404191\n.text:0000000000404196\n.text:000000000040419b\n.text:00000000004041a1\n.text:00000000004041a3\n.text:00000000004041a6\n.text:00000000004041ab\n.text:00000000004041ad\n.text:00000000004041b2\n.text:00000000004041b7\n.text:00000000004041bc\n.text:00000000004041bf\n.text:00000000004041c2\n.text:00000000004041c7\n.text:00000000004041cb\n.text:00000000004041cd\n.text:00000000004041d5\n.text:00000000004041d7\n.text:00000000004041dc\n.text:00000000004041e1\n.text:00000000004041e6\n.text:00000000004041e9\n.text:00000000004041ec\n.text:00000000004041f1\n.text:00000000004041f3\n.text:00000000004041f6\n.text:00000000004041fa\n.text:00000000004041fb\n.text:00000000004041fd\n.text:00000000004041ff\n.text:0000000000404201\n.text:0000000000404206\n.text:0000000000404208\n.text:000000000040420d\n.text:0000000000404212\n.text:0000000000404217\n.text:000000000040421a\n.text:000000000040421d\n.text:0000000000404221\n.text:0000000000404225\n.text:000000000040422a\n.text:000000000040422f\n.text:0000000000404232\n.text:0000000000404236\n.text:000000000040423a\n.text:000000000040423e\n.text:0000000000404242\n.text:0000000000404246\n.text:000000000040424a\n.text:000000000040424f\n.text:0000000000404253\n.text:0000000000404258\n.text:000000000040425a\n.text:000000000040425f\n.text:0000000000404264\n.text:0000000000404269\n.text:000000000040426c\n.text:000000000040426f\n.text:0000000000404273\n.text:0000000000404278\n.text:000000000040427a\n.text:000000000040427d\n.text:0000000000404281\n.text:0000000000404282\n.text:0000000000404284\n.text:0000000000404286\n.text:0000000000404288\n.text:000000000040428d\n.text:000000000040428f\n.text:0000000000404294\n.text:0000000000404299\n.text:000000000040429e\n.text:00000000004042a1\n.text:00000000004042a4\n.text:00000000004042a8\n.text:00000000004042ac\n.text:00000000004042b1\n.text:00000000004042b3\n.text:00000000004042b6\n.text:00000000004042ba\n.text:00000000004042bb\n.text:00000000004042bd\n.text:00000000004042bf\n.text:00000000004042c1\n.text:00000000004042c6\n.text:00000000004042c8\n.text:00000000004042cd\n.text:00000000004042d2\n.text:00000000004042d7\n.text:00000000004042da\n.text:00000000004042dd\n.text:00000000004042e1\n.text:00000000004042e5\n.text:00000000004042e9\n.text:00000000004042ee\n.text:00000000004042f0\n.text:00000000004042f3\n.text:00000000004042f7\n.text:00000000004042fc\n.text:0000000000404300\n.text:0000000000404305\n.text:0000000000404307\n.text:000000000040430c\n.text:0000000000404311\n.text:0000000000404316\n.text:0000000000404319\n.text:000000000040431c\n.text:0000000000404320\n.text:0000000000404324\n.text:0000000000404329\n.text:000000000040432e\n.text:0000000000404331\n.text:0000000000404335\n.text:0000000000404339\n.text:000000000040433e\n.text:0000000000404342\n.text:0000000000404347\n.text:0000000000404349\n.text:000000000040434e\n.text:0000000000404353\n.text:0000000000404358\n.text:000000000040435b\n.text:000000000040435e\n.text:0000000000404362\n.text:0000000000404366\n.text:000000000040436a\n.text:000000000040436f\n.text:0000000000404374\n.text:0000000000404377\n.text:000000000040437b\n.text:000000000040437f\n.text:0000000000404383\n.text:0000000000404388\n.text:000000000040438c\n.text:0000000000404391\n.text:0000000000404393\n.text:0000000000404398\n.text:000000000040439d\n.text:00000000004043a2\n.text:00000000004043a5\n.text:00000000004043a8\n.text:00000000004043ac\n.text:00000000004043b0\n.text:00000000004043b5\n.text:00000000004043ba\n.text:00000000004043bd\n.text:00000000004043c1\n.text:00000000004043c5\n.text:00000000004043c9\n.text:00000000004043cd\n.text:00000000004043d2\n.text:00000000004043d6\n.text:00000000004043db\n.text:00000000004043dd\n.text:00000000004043e2\n.text:00000000004043e7\n.text:00000000004043ec\n.text:00000000004043ef\n.text:00000000004043f2\n.text:00000000004043f6\n.text:00000000004043fa\n.text:00000000004043fe\n.text:0000000000404403\n.text:0000000000404408\n.text:000000000040440b\n.text:000000000040440f\n.text:0000000000404413\n.text:0000000000404417\n.text:000000000040441b\n.text:000000000040441f\n.text:0000000000404424\n.text:0000000000404428\n.text:000000000040442a\n.text:000000000040442c\n.text:0000000000404431\n.text:0000000000404436\n.text:000000000040443b\n.text:000000000040443e\n.text:0000000000404441\n.text:0000000000404445\n.text:0000000000404449\n.text:000000000040444e\n.text:0000000000404453\n.text:0000000000404456\n.text:000000000040445a\n.text:000000000040445e\n.text:0000000000404462\n.text:0000000000404466\n.text:000000000040446a\n.text:000000000040446e\n.text:0000000000404473\n.text:0000000000404477\n.text:0000000000404478\n.text:000000000040447a\n.text:000000000040447c\n.text:000000000040447e\n.text:000000000040447f\n'
p13
tp14
sS'file_name_concat'
p15
(S'\n__stdcall file_name_concat(char * dir, char * abase, char * * base_in_result)\n'
p16
V\u000achar * file_name_concat(char *dir,char *abase,char **base_in_result)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = mfile_name_concat(dir,abase,base_in_result);\u000a  if (pcVar1 != (char *)0x0) {\u000a    return pcVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p17
S'PUSH RAX\nCALL 0x004024c0\nTEST RAX,RAX\nJZ 0x004024ad\nPOP RCX\nRET\nCALL 0x004047e0\n'
p18
S'50\ne8 1a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 2e 23 00 00\n'
p19
S'.text:00000000004024a0\n.text:00000000004024a1\n.text:00000000004024a6\n.text:00000000004024a9\n.text:00000000004024ab\n.text:00000000004024ac\n.text:00000000004024ad\n'
p20
tp21
sS'rpl_fclose'
p22
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p23
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_004048c9;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_004048c9:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p24
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401790\nTEST EAX,EAX\nJS 0x004048c9\nMOV RDI,RBX\nCALL 0x00401800\nTEST EAX,EAX\nJZ 0x00404897\nMOV RDI,RBX\nCALL 0x00401790\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x004016b0\nCMP RAX,-0x1\nJZ 0x004048c9\nMOV RDI,RBX\nCALL 0x004048e0\nTEST EAX,EAX\nJZ 0x004048c9\nCALL 0x00401540\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x00401610\nTEST EBP,EBP\nJZ 0x004048c2\nCALL 0x00401540\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401610\n'
p25
S'55\n53\n50\n48 89 fb\ne8 25 cf ff ff\n85 c0\n78 5a\n48 89 df\ne8 89 cf ff ff\n85 c0\n74 1c\n48 89 df\ne8 0d cf ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 1f ce ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 41 00 00 00\n85 c0\n74 26\ne8 98 cc ff ff\n8b 28\n48 89 df\ne8 5e cd ff ff\n85 ed\n74 0c\ne8 85 cc ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 39 cd ff ff\n'
p26
S'.text:0000000000404860\n.text:0000000000404861\n.text:0000000000404862\n.text:0000000000404863\n.text:0000000000404866\n.text:000000000040486b\n.text:000000000040486d\n.text:000000000040486f\n.text:0000000000404872\n.text:0000000000404877\n.text:0000000000404879\n.text:000000000040487b\n.text:000000000040487e\n.text:0000000000404883\n.text:0000000000404885\n.text:000000000040488a\n.text:000000000040488c\n.text:0000000000404891\n.text:0000000000404895\n.text:0000000000404897\n.text:000000000040489a\n.text:000000000040489f\n.text:00000000004048a1\n.text:00000000004048a3\n.text:00000000004048a8\n.text:00000000004048aa\n.text:00000000004048ad\n.text:00000000004048b2\n.text:00000000004048b4\n.text:00000000004048b6\n.text:00000000004048bb\n.text:00000000004048bd\n.text:00000000004048c2\n.text:00000000004048c6\n.text:00000000004048c7\n.text:00000000004048c8\n.text:00000000004048c9\n.text:00000000004048cc\n.text:00000000004048d0\n.text:00000000004048d1\n.text:00000000004048d2\n'
p27
tp28
sS'strncmp'
p29
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p30
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_0060a048)();\u000a  return iVar1;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x0060a048]\n'
p32
S'ff 25 e2 8a 20 00\n'
p33
S'.plt:0000000000401560\n'
p34
tp35
sS'gen_tempname_len'
p36
(S'\n__stdcall gen_tempname_len(char * tmpl, size_t x_suffix_len)\n'
p37
V\u000aint gen_tempname_len(char *tmpl,size_t x_suffix_len)\u000a\u000a{\u000a  int iVar1;\u000a  uint in_ECX;\u000a  int local_4 [4](char *,void *);\u000a  \u000a  if (in_ECX < 3) {\u000a    iVar1 = try_tempname_len(tmpl,(void *)x_suffix_len,local_4,\u000a                             (size_t)(&PTR_try_file_004070a0)[(long)(int)in_ECX]);\u000a    return iVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  __assert_fail("! \u005c"invalid KIND in __gen_tempname\u005c"","lib/tempname.c",0x148,\u000a                "int gen_tempname_len(char *, int, int, int, size_t)");\u000a}\u000a\u000a
p38
S'PUSH RAX\nMOV dword ptr [RSP + 0x4],EDX\nCMP ECX,0x3\nJNC 0x00404081\nMOVSXD RAX,ECX\nMOV RCX,qword ptr [0x4070a0 + RAX*0x8]\nLEA RDX,[RSP + 0x4]\nCALL 0x00403ed0\nPOP RCX\nRET\nMOV EDI,0x407030\nMOV ESI,0x407053\nMOV EDX,0x148\nMOV ECX,0x407062\nCALL 0x004016d0\n'
p39
S'50\n89 54 24 04\n83 f9 03\n73 17\n48 63 c1\n48 8b 0c c5 a0 70 40 00\n48 8d 54 24 04\ne8 51 fe ff ff\n59\nc3\nbf 30 70 40 00\nbe 53 70 40 00\nba 48 01 00 00\nb9 62 70 40 00\ne8 36 d6 ff ff\n'
p40
S'.text:0000000000404060\n.text:0000000000404061\n.text:0000000000404065\n.text:0000000000404068\n.text:000000000040406a\n.text:000000000040406d\n.text:0000000000404075\n.text:000000000040407a\n.text:000000000040407f\n.text:0000000000404080\n.text:0000000000404081\n.text:0000000000404086\n.text:000000000040408b\n.text:0000000000404090\n.text:0000000000404095\n'
p41
tp42
sS'xnrealloc'
p43
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p44
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p45
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x00404684\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x00404690\nPUSH RAX\nCALL 0x004047e0\n'
p46
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p47
S'.text:0000000000404670\n.text:0000000000404673\n.text:0000000000404676\n.text:0000000000404679\n.text:000000000040467b\n.text:000000000040467f\n.text:0000000000404682\n.text:0000000000404684\n.text:0000000000404685\n'
p48
tp49
sS'mfile_name_concat'
p50
(S'\n__stdcall mfile_name_concat(char * dir, char * abase, char * * base_in_result)\n'
p51
V\u000achar * mfile_name_concat(char *dir,char *abase,char **base_in_result)\u000a\u000a{\u000a  char *name;\u000a  size_t sVar1;\u000a  char *__s;\u000a  size_t sVar2;\u000a  undefined *puVar3;\u000a  long lVar4;\u000a  char *pcVar5;\u000a  bool bVar6;\u000a  \u000a  name = last_component(dir);\u000a  sVar1 = base_len(name);\u000a  if (sVar1 == 0) {\u000a    bVar6 = false;\u000a  }\u000a  else {\u000a    bVar6 = name[sVar1 - 1] != '/';\u000a  }\u000a  __s = longest_relative_suffix(abase);\u000a  sVar2 = strlen(__s);\u000a  pcVar5 = (char *)malloc((size_t)(name + (sVar1 - (long)dir) + sVar2 + 1 + (ulong)bVar6));\u000a  if (pcVar5 == (char *)0x0) {\u000a    pcVar5 = (char *)0x0;\u000a  }\u000a  else {\u000a    puVar3 = (undefined *)__mempcpy_chk(pcVar5,dir,name + (sVar1 - (long)dir),0xffffffffffffffff);\u000a    *puVar3 = 0x2f;\u000a    if (base_in_result != (char **)0x0) {\u000a      lVar4 = 0;\u000a      if (*abase == '/') {\u000a        lVar4 = -1;\u000a      }\u000a      *base_in_result = puVar3 + (ulong)bVar6 + lVar4;\u000a    }\u000a    puVar3 = (undefined *)__mempcpy_chk(puVar3 + (ulong)bVar6,__s,sVar2,0xffffffffffffffff);\u000a    *puVar3 = 0;\u000a  }\u000a  return pcVar5;\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV qword ptr [RSP + 0x10],RDX\nMOV R14,RSI\nMOV R12,RDI\nCALL 0x00402410\nMOV RBP,RAX\nMOV RDI,RBP\nCALL 0x00402470\nMOV RBX,RBP\nSUB RBX,R12\nADD RBX,RAX\nTEST RAX,RAX\nJZ 0x00402501\nCMP byte ptr [RBP + RAX*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x00402503\nXOR EAX,EAX\nMOVZX R13D,AL\nMOV qword ptr [RSP + 0x8],R14\nMOV RDI,R14\nCALL 0x004025b0\nMOV RBP,RAX\nMOV RDI,RBP\nCALL 0x00401650\nMOV R15,RAX\nLEA RAX,[RBX + R13*0x1]\nLEA RDI,[R15 + RAX*0x1 + 0x1]\nCALL 0x004017c0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00402592\nMOV RCX,-0x1\nMOV RDI,R14\nMOV RSI,R12\nMOV RDX,RBX\nCALL 0x00401520\nMOV byte ptr [RAX],0x2f\nADD R13,RAX\nMOV RCX,qword ptr [RSP + 0x10]\nTEST RCX,RCX\nJZ 0x00402578\nXOR EAX,EAX\nMOV RDX,qword ptr [RSP + 0x8]\nCMP byte ptr [RDX],0x2f\nMOV RDX,-0x1\nCMOVZ RAX,RDX\nADD RAX,R13\nMOV qword ptr [RCX],RAX\nMOV RCX,-0x1\nMOV RDI,R13\nMOV RSI,RBP\nMOV RDX,R15\nCALL 0x00401520\nMOV byte ptr [RAX],0x0\nJMP 0x00402595\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n48 89 54 24 10\n49 89 f6\n49 89 fc\ne8 32 ff ff ff\n48 89 c5\n48 89 ef\ne8 87 ff ff ff\n48 89 eb\n4c 29 e3\n48 01 c3\n48 85 c0\n74 0a\n80 7c 05 ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 e8\n4c 89 74 24 08\n4c 89 f7\ne8 9c 00 00 00\n48 89 c5\n48 89 ef\ne8 31 f1 ff ff\n49 89 c7\n4a 8d 04 2b\n49 8d 7c 07 01\ne8 90 f2 ff ff\n49 89 c6\n4d 85 f6\n74 5a\n48 c7 c1 ff ff ff ff\n4c 89 f7\n4c 89 e6\n48 89 da\ne8 d3 ef ff ff\nc6 00 2f\n49 01 c5\n48 8b 4c 24 10\n48 85 c9\n74 1b\n31 c0\n48 8b 54 24 08\n80 3a 2f\n48 c7 c2 ff ff ff ff\n48 0f 44 c2\n4c 01 e8\n48 89 01\n48 c7 c1 ff ff ff ff\n4c 89 ef\n48 89 ee\n4c 89 fa\ne8 93 ef ff ff\nc6 00 00\neb 03\n45 31 f6\n4c 89 f0\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p54
S'.text:00000000004024c0\n.text:00000000004024c1\n.text:00000000004024c3\n.text:00000000004024c5\n.text:00000000004024c7\n.text:00000000004024c9\n.text:00000000004024ca\n.text:00000000004024ce\n.text:00000000004024d3\n.text:00000000004024d6\n.text:00000000004024d9\n.text:00000000004024de\n.text:00000000004024e1\n.text:00000000004024e4\n.text:00000000004024e9\n.text:00000000004024ec\n.text:00000000004024ef\n.text:00000000004024f2\n.text:00000000004024f5\n.text:00000000004024f7\n.text:00000000004024fc\n.text:00000000004024ff\n.text:0000000000402501\n.text:0000000000402503\n.text:0000000000402507\n.text:000000000040250c\n.text:000000000040250f\n.text:0000000000402514\n.text:0000000000402517\n.text:000000000040251a\n.text:000000000040251f\n.text:0000000000402522\n.text:0000000000402526\n.text:000000000040252b\n.text:0000000000402530\n.text:0000000000402533\n.text:0000000000402536\n.text:0000000000402538\n.text:000000000040253f\n.text:0000000000402542\n.text:0000000000402545\n.text:0000000000402548\n.text:000000000040254d\n.text:0000000000402550\n.text:0000000000402553\n.text:0000000000402558\n.text:000000000040255b\n.text:000000000040255d\n.text:000000000040255f\n.text:0000000000402564\n.text:0000000000402567\n.text:000000000040256e\n.text:0000000000402572\n.text:0000000000402575\n.text:0000000000402578\n.text:000000000040257f\n.text:0000000000402582\n.text:0000000000402585\n.text:0000000000402588\n.text:000000000040258d\n.text:0000000000402590\n.text:0000000000402592\n.text:0000000000402595\n.text:0000000000402598\n.text:000000000040259c\n.text:000000000040259d\n.text:000000000040259f\n.text:00000000004025a1\n.text:00000000004025a3\n.text:00000000004025a5\n.text:00000000004025a6\n'
p55
tp56
sS'quote'
p57
(S'\n__stdcall quote(char * arg)\n'
p58
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p59
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00403ab0\n'
p60
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p61
S'.text:0000000000403ac0\n.text:0000000000403ac3\n.text:0000000000403ac5\n.text:0000000000403ac8\n'
p62
tp63
sS'emit_bug_reporting_address'
p64
(S'\n__stdcall emit_bug_reporting_address()\n'
p65
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x407365\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40737a\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401840\nXOR EDI,EDI\nMOV ESI,0x407390\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40671d\nMOV ECX,0x40693f\nXOR EAX,EAX\nCALL 0x00401840\nXOR EDI,EDI\nMOV ESI,0x4073a4\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401740\n'
p67
S'50\n31 ff\nbe 65 73 40 00\nba 05 00 00 00\ne8 6e d0 ff ff\n48 89 c1\nbf 01 00 00 00\nba 7a 73 40 00\n31 c0\n48 89 ce\ne8 67 d2 ff ff\n31 ff\nbe 90 73 40 00\nba 05 00 00 00\ne8 46 d0 ff ff\n48 89 c6\nbf 01 00 00 00\nba 1d 67 40 00\nb9 3f 69 40 00\n31 c0\ne8 3d d2 ff ff\n31 ff\nbe a4 73 40 00\nba 05 00 00 00\ne8 1c d0 ff ff\n48 8b 35 8d 5c 20 00\n48 89 c7\n58\ne9 1c d1 ff ff\n'
p68
S'.text:00000000004045b0\n.text:00000000004045b1\n.text:00000000004045b3\n.text:00000000004045b8\n.text:00000000004045bd\n.text:00000000004045c2\n.text:00000000004045c5\n.text:00000000004045ca\n.text:00000000004045cf\n.text:00000000004045d1\n.text:00000000004045d4\n.text:00000000004045d9\n.text:00000000004045db\n.text:00000000004045e0\n.text:00000000004045e5\n.text:00000000004045ea\n.text:00000000004045ed\n.text:00000000004045f2\n.text:00000000004045f7\n.text:00000000004045fc\n.text:00000000004045fe\n.text:0000000000404603\n.text:0000000000404605\n.text:000000000040460a\n.text:000000000040460f\n.text:0000000000404614\n.text:000000000040461b\n.text:000000000040461e\n.text:000000000040461f\n'
p69
tp70
sS'clone_quoting_options'
p71
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p72
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p73
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401540\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x60a310\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00404790\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p74
S'55\n41 56\n53\n48 89 fb\ne8 b4 ee ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 10 a3 60 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 e5 20 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p75
S'.text:0000000000402680\n.text:0000000000402681\n.text:0000000000402683\n.text:0000000000402684\n.text:0000000000402687\n.text:000000000040268c\n.text:000000000040268f\n.text:0000000000402692\n.text:0000000000402695\n.text:000000000040269a\n.text:000000000040269e\n.text:00000000004026a3\n.text:00000000004026a6\n.text:00000000004026ab\n.text:00000000004026ae\n.text:00000000004026af\n.text:00000000004026b1\n.text:00000000004026b2\n'
p76
tp77
sS'xmalloc'
p78
(S'\n__stdcall xmalloc(size_t n)\n'
p79
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p80
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x004017c0\nTEST RBX,RBX\nJZ 0x00404663\nTEST RAX,RAX\nJZ 0x00404665\nPOP RBX\nRET\nCALL 0x004047e0\n'
p81
S'53\n48 89 fb\ne8 67 d1 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p82
S'.text:0000000000404650\n.text:0000000000404651\n.text:0000000000404654\n.text:0000000000404659\n.text:000000000040465c\n.text:000000000040465e\n.text:0000000000404661\n.text:0000000000404663\n.text:0000000000404664\n.text:0000000000404665\n'
p83
tp84
sS'quotearg_char_mem'
p85
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p86
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p87
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x0060a340]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x0060a330]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060a320]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060a310]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x004026e0\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x004035d0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p88
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d 48 6a 20 00\n48 89 4c 24 30\n0f 10 05 2c 6a 20 00\n0f 29 44 24 20\n0f 10 05 10 6a 20 00\n0f 29 44 24 10\n0f 10 05 f4 69 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p89
S'.text:00000000004038e0\n.text:00000000004038e2\n.text:00000000004038e4\n.text:00000000004038e5\n.text:00000000004038e9\n.text:00000000004038eb\n.text:00000000004038ee\n.text:00000000004038f1\n.text:00000000004038f8\n.text:00000000004038fd\n.text:0000000000403904\n.text:0000000000403909\n.text:0000000000403910\n.text:0000000000403915\n.text:000000000040391c\n.text:0000000000403920\n.text:0000000000403923\n.text:0000000000403928\n.text:000000000040392b\n.text:000000000040392d\n.text:0000000000403932\n.text:0000000000403934\n.text:0000000000403937\n.text:000000000040393a\n.text:000000000040393d\n.text:0000000000403942\n.text:0000000000403946\n.text:0000000000403947\n.text:0000000000403949\n.text:000000000040394b\n'
p90
tp91
sS'frame_dummy'
p92
(S'\n__stdcall frame_dummy()\n'
p93
V\u000a/* WARNING: Removing unreachable block (ram,0x00401a0a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p94
S'MOV EDI,0x609e18\nCMP qword ptr [RDI],0x0\nJNZ 0x00401a00\nJMP 0x00401990\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004019fb\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401990\n'
p95
S'bf 18 9e 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p96
S'.text:00000000004019f0\n.text:00000000004019f5\n.text:00000000004019f9\n.text:00000000004019fb\n.text:0000000000401a00\n.text:0000000000401a05\n.text:0000000000401a08\n.text:0000000000401a0a\n.text:0000000000401a0b\n.text:0000000000401a0e\n.text:0000000000401a10\n.text:0000000000401a11\n'
p97
tp98
sS'gettimeofday'
p99
(S'\n__stdcall gettimeofday(timeval * __tv, __timezone_ptr_t __tz)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_gettimeofday_0060a0f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x0060a0f8]\n'
p102
S'ff 25 32 8a 20 00\n'
p103
S'.plt:00000000004016c0\n'
p104
tp105
sS'quotearg_n_style_colon'
p106
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p107
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p108
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00403800\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x004026e0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x004035d0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p109
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p110
S'.text:0000000000403980\n.text:0000000000403981\n.text:0000000000403983\n.text:0000000000403984\n.text:0000000000403988\n.text:000000000040398b\n.text:000000000040398d\n.text:0000000000403992\n.text:0000000000403995\n.text:000000000040399a\n.text:000000000040399f\n.text:00000000004039a4\n.text:00000000004039a7\n.text:00000000004039ac\n.text:00000000004039b3\n.text:00000000004039b5\n.text:00000000004039b8\n.text:00000000004039bb\n.text:00000000004039c0\n.text:00000000004039c4\n.text:00000000004039c5\n.text:00000000004039c7\n.text:00000000004039c8\n'
p111
tp112
sS'randint_new'
p113
(S'\n__stdcall randint_new(randread_source * source)\n'
p114
V\u000arandint_source * randint_new(randread_source *source)\u000a\u000a{\u000a  randint_source *prVar1;\u000a  \u000a  prVar1 = (randint_source *)xmalloc(0x18);\u000a  prVar1->source = source;\u000a  *(undefined4 *)&prVar1->randnum = 0;\u000a  *(undefined4 *)((long)&prVar1->randnum + 4) = 0;\u000a  *(undefined4 *)&prVar1->randmax = 0;\u000a  *(undefined4 *)((long)&prVar1->randmax + 4) = 0;\u000a  return prVar1;\u000a}\u000a\u000a
p115
S'PUSH RBX\nMOV RBX,RDI\nMOV EDI,0x18\nCALL 0x00404650\nMOV qword ptr [RAX],RBX\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [RAX + 0x8],XMM0\nPOP RBX\nRET\n'
p116
S'53\n48 89 fb\nbf 18 00 00 00\ne8 22 f8 ff ff\n48 89 18\n0f 57 c0\n0f 11 40 08\n5b\nc3\n'
p117
S'.text:0000000000404e20\n.text:0000000000404e21\n.text:0000000000404e24\n.text:0000000000404e29\n.text:0000000000404e2e\n.text:0000000000404e31\n.text:0000000000404e34\n.text:0000000000404e38\n.text:0000000000404e39\n'
p118
tp119
sS'quote_mem'
p120
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p121
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p122
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00403a90\n'
p123
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p124
S'.text:0000000000403aa0\n.text:0000000000403aa3\n.text:0000000000403aa6\n.text:0000000000403aa8\n.text:0000000000403aab\n.text:0000000000403aae\n'
p125
tp126
sS'fileno'
p127
(S'\n__stdcall fileno(FILE * __stream)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_0060a160)();\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x0060a160]\n'
p130
S'ff 25 ca 89 20 00\n'
p131
S'.plt:0000000000401790\n'
p132
tp133
sS'mbrtowc'
p134
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_0060a0e0)();\u000a  return sVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x0060a0e0]\n'
p137
S'ff 25 4a 8a 20 00\n'
p138
S'.plt:0000000000401690\n'
p139
tp140
sS'setlocale'
p141
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_0060a1b0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x0060a1b0]\n'
p144
S'ff 25 7a 89 20 00\n'
p145
S'.plt:0000000000401830\n'
p146
tp147
sS'c_toupper'
p148
(S'\n__stdcall c_toupper()\n'
p149
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p150
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p151
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p152
S'.text:0000000000404ae0\n.text:0000000000404ae3\n.text:0000000000404ae6\n.text:0000000000404ae9\n.text:0000000000404aec\n'
p153
tp154
sS'fcntl'
p155
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_0060a080)();\u000a  return iVar1;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x0060a080]\n'
p158
S'ff 25 aa 8a 20 00\n'
p159
S'.plt:00000000004015d0\n'
p160
tp161
sS'mbsinit'
p162
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_0060a210)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x0060a210]\n'
p165
S'ff 25 1a 89 20 00\n'
p166
S'.plt:00000000004018f0\n'
p167
tp168
sS'dcgettext'
p169
(S'\n__stdcall dcgettext()\n'
p170
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_0060a0b0)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x0060a0b0]\n'
p172
S'ff 25 7a 8a 20 00\n'
p173
S'.plt:0000000000401630\n'
p174
tp175
sS'quotearg_free'
p176
(S'\n__stdcall quotearg_free()\n'
p177
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p178
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x0060a248]\nCMP dword ptr [0x0060a250],0x2\nJC 0x0040356a\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00401510\nINC RBX\nMOV EAX,dword ptr [0x0060a250]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x00403550\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x60a350\nCMP RDI,RAX\nJZ 0x00403593\nCALL 0x00401510\nMOV qword ptr [0x0060a258],0x100\nMOV qword ptr [0x0060a260],0x60a350\nMOV EAX,0x60a258\nCMP R14,RAX\nJZ 0x004035b0\nMOV RDI,R14\nCALL 0x00401510\nMOV qword ptr [0x0060a248],0x60a258\nMOV dword ptr [0x0060a250],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p179
S'41 57\n41 56\n53\n4c 8b 35 0c 6d 20 00\n83 3d 0d 6d 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 b8 df ff ff\n48 ff c3\n8b 05 ef 6c 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 50 a3 60 00\n48 39 c7\n74 1b\ne8 93 df ff ff\n48 c7 05 d0 6c 20 00 00 01 00 00\n48 c7 05 cd 6c 20 00 50 a3 60 00\nb8 58 a2 60 00\n49 39 c6\n74 13\n4c 89 f7\ne8 6b df ff ff\n48 c7 05 98 6c 20 00 58 a2 60 00\nc7 05 96 6c 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p180
S'.text:0000000000403530\n.text:0000000000403532\n.text:0000000000403534\n.text:0000000000403535\n.text:000000000040353c\n.text:0000000000403543\n.text:0000000000403545\n.text:0000000000403549\n.text:000000000040354e\n.text:0000000000403550\n.text:0000000000403553\n.text:0000000000403558\n.text:000000000040355b\n.text:0000000000403561\n.text:0000000000403565\n.text:0000000000403568\n.text:000000000040356a\n.text:000000000040356e\n.text:0000000000403573\n.text:0000000000403576\n.text:0000000000403578\n.text:000000000040357d\n.text:0000000000403588\n.text:0000000000403593\n.text:0000000000403598\n.text:000000000040359b\n.text:000000000040359d\n.text:00000000004035a0\n.text:00000000004035a5\n.text:00000000004035b0\n.text:00000000004035ba\n.text:00000000004035bb\n.text:00000000004035bd\n.text:00000000004035bf\n'
p181
tp182
sS'quotearg_mem'
p183
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p184
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p185
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00403790\n'
p186
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p187
S'.text:00000000004037b0\n.text:00000000004037b3\n.text:00000000004037b6\n.text:00000000004037b8\n.text:00000000004037bb\n.text:00000000004037be\n'
p188
tp189
sS'deregister_tm_clones'
p190
(S'\n__stdcall deregister_tm_clones()\n'
p191
V\u000a/* WARNING: Removing unreachable block (ram,0x00401965) */\u000a/* WARNING: Removing unreachable block (ram,0x0040196f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p192
S'MOV EAX,0x60a2a7\nPUSH RBP\nSUB RAX,0x60a2a0\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401980\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401980\nPOP RBP\nMOV EDI,0x60a2a0\nJMP RAX\nPOP RBP\nRET\n'
p193
S'b8 a7 a2 60 00\n55\n48 2d a0 a2 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf a0 a2 60 00\nff e0\n5d\nc3\n'
p194
S'.text:0000000000401950\n.text:0000000000401955\n.text:0000000000401956\n.text:000000000040195c\n.text:0000000000401960\n.text:0000000000401963\n.text:0000000000401965\n.text:000000000040196a\n.text:000000000040196d\n.text:000000000040196f\n.text:0000000000401970\n.text:0000000000401975\n.text:0000000000401980\n.text:0000000000401981\n'
p195
tp196
sS'randint_free'
p197
(S'\n__stdcall randint_free(void * __ptr)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid randint_free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_0060a020)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP 0x00401510\n'
p200
S'e9 6b c5 ff ff\n'
p201
S'.text:0000000000404fa0\n'
p202
tp203
sS'quotearg_custom'
p204
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p205
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p206
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x004039d0\n'
p207
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p208
S'.text:0000000000403a50\n.text:0000000000403a53\n.text:0000000000403a56\n.text:0000000000403a59\n.text:0000000000403a5b\n.text:0000000000403a5e\n.text:0000000000403a61\n.text:0000000000403a64\n'
p209
tp210
sS'free'
p211
(S'\n__stdcall free(void * __ptr)\n'
p212
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_0060a020)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x0060a020]\n'
p214
S'ff 25 0a 8b 20 00\n'
p215
S'.plt:0000000000401510\n'
p216
tp217
sS'close'
p218
(S'\n__stdcall close(int __fd)\n'
p219
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_0060a118)();\u000a  return iVar1;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x0060a118]\n'
p221
S'ff 25 12 8a 20 00\n'
p222
S'.plt:0000000000401700\n'
p223
tp224
sS'getenv'
p225
(S'\n__stdcall getenv(char * __name)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_0060a018)();\u000a  return pcVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x0060a018]\n'
p228
S'ff 25 12 8b 20 00\n'
p229
S'.plt:0000000000401500\n'
p230
tp231
sS'fopen'
p232
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_0060a1e0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x0060a1e0]\n'
p235
S'ff 25 4a 89 20 00\n'
p236
S'.plt:0000000000401890\n'
p237
tp238
sS'rpl_fseeko'
p239
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p240
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_0060a1d8)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p241
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x00404958\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x00404958\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x0040496a\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401880\nMOV RDI,RBX\nCALL 0x00401790\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x004016b0\nCMP RAX,-0x1\nJZ 0x00404993\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x00404998\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p242
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 16 cf ff ff\n48 89 df\ne8 1e ce ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 31 cd ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p243
S'.text:0000000000404930\n.text:0000000000404931\n.text:0000000000404933\n.text:0000000000404934\n.text:0000000000404937\n.text:000000000040493a\n.text:000000000040493d\n.text:0000000000404941\n.text:0000000000404945\n.text:0000000000404947\n.text:000000000040494b\n.text:000000000040494f\n.text:0000000000404951\n.text:0000000000404956\n.text:0000000000404958\n.text:000000000040495b\n.text:000000000040495e\n.text:0000000000404961\n.text:0000000000404962\n.text:0000000000404964\n.text:0000000000404965\n.text:000000000040496a\n.text:000000000040496d\n.text:0000000000404972\n.text:0000000000404974\n.text:0000000000404977\n.text:000000000040497a\n.text:000000000040497f\n.text:0000000000404983\n.text:0000000000404985\n.text:0000000000404988\n.text:000000000040498f\n.text:0000000000404991\n.text:0000000000404993\n.text:0000000000404998\n.text:0000000000404999\n.text:000000000040499b\n.text:000000000040499c\n'
p244
tp245
sS'quote_n_mem'
p246
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p247
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p248
S'MOV ECX,0x60a268\nJMP 0x004035d0\n'
p249
S'b9 68 a2 60 00\ne9 36 fb ff ff\n'
p250
S'.text:0000000000403a90\n.text:0000000000403a95\n'
p251
tp252
sS'xstrdup'
p253
(S'\n__stdcall xstrdup(char * string)\n'
p254
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p255
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401650\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00404790\n'
p256
S'53\n48 89 fb\ne8 87 ce ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p257
S'.text:00000000004047c0\n.text:00000000004047c1\n.text:00000000004047c4\n.text:00000000004047c9\n.text:00000000004047cd\n.text:00000000004047d0\n.text:00000000004047d1\n'
p258
tp259
sS'c_ispunct'
p260
(S'\n__stdcall c_ispunct()\n'
p261
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p262
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x00404a72\nMOV AL,0x1\nJMP qword ptr [0x407430 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p263
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd 30 74 40 00\nc3\n31 c0\nc3\n'
p264
S'.text:0000000000404a60\n.text:0000000000404a63\n.text:0000000000404a66\n.text:0000000000404a68\n.text:0000000000404a6a\n.text:0000000000404a71\n.text:0000000000404a72\n.text:0000000000404a74\n'
p265
tp266
sS'FUN_004014f0'
p267
(S'\n__stdcall FUN_004014f0()\n'
p268
V\u000avoid FUN_004014f0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_0060a010)();\u000a  return;\u000a}\u000a\u000a
p269
S'PUSH qword ptr [0x0060a008]\nJMP qword ptr [0x0060a010]\n'
p270
S'ff 35 12 8b 20 00\nff 25 14 8b 20 00\n'
p271
S'.plt:00000000004014f0\n.plt:00000000004014f6\n'
p272
tp273
sS'try_nocreate'
p274
(S'\n__stdcall try_nocreate(char * tmpl, void * flags)\n'
p275
V\u000aint try_nocreate(char *tmpl,void *flags)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  stat sStack152;\u000a  \u000a  iVar1 = lstat(tmpl,&sStack152);\u000a  piVar2 = __errno_location();\u000a  if (iVar1 == 0) {\u000a    *piVar2 = 0x11;\u000a  }\u000a  iVar1 = -1;\u000a  if (*piVar2 == 2) {\u000a    iVar1 = 0;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p276
S'PUSH RBX\nSUB RSP,0x90\nMOV RSI,RSP\nCALL 0x00405ea0\nMOV EBX,EAX\nCALL 0x00401540\nTEST EBX,EBX\nJNZ 0x004040f1\nMOV dword ptr [RAX],0x11\nXOR ECX,ECX\nCMP dword ptr [RAX],0x2\nMOV EAX,0xffffffff\nCMOVZ EAX,ECX\nADD RSP,0x90\nPOP RBX\nRET\n'
p277
S'53\n48 81 ec 90 00 00 00\n48 89 e6\ne8 c0 1d 00 00\n89 c3\ne8 59 d4 ff ff\n85 db\n75 06\nc7 00 11 00 00 00\n31 c9\n83 38 02\nb8 ff ff ff ff\n0f 44 c1\n48 81 c4 90 00 00 00\n5b\nc3\n'
p278
S'.text:00000000004040d0\n.text:00000000004040d1\n.text:00000000004040d8\n.text:00000000004040db\n.text:00000000004040e0\n.text:00000000004040e2\n.text:00000000004040e7\n.text:00000000004040e9\n.text:00000000004040eb\n.text:00000000004040f1\n.text:00000000004040f3\n.text:00000000004040f6\n.text:00000000004040fb\n.text:00000000004040fe\n.text:0000000000404105\n.text:0000000000404106\n'
p279
tp280
sS'fscanf'
p281
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p282
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_0060a110)();\u000a  return iVar1;\u000a}\u000a\u000a
p283
S'JMP qword ptr [0x0060a110]\n'
p284
S'ff 25 1a 8a 20 00\n'
p285
S'.plt:00000000004016f0\n'
p286
tp287
sS'memcpy'
p288
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p289
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_0060a158)();\u000a  return pvVar1;\u000a}\u000a\u000a
p290
S'JMP qword ptr [0x0060a158]\n'
p291
S'ff 25 d2 89 20 00\n'
p292
S'.plt:0000000000401780\n'
p293
tp294
sS'close_stdout_set_ignore_EPIPE'
p295
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p296
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p297
S'MOV byte ptr [0x0060a2f8],DIL\nRET\n'
p298
S'40 88 3d b1 7f 20 00\nc3\n'
p299
S'.text:0000000000402340\n.text:0000000000402347\n'
p300
tp301
sS'iswprint'
p302
(S'\n__stdcall iswprint(wint_t __wc)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_0060a218)();\u000a  return iVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x0060a218]\n'
p305
S'ff 25 12 89 20 00\n'
p306
S'.plt:0000000000401900\n'
p307
tp308
sS'c_isspace'
p309
(S'\n__stdcall c_isspace()\n'
p310
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p311
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00404a95\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p312
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p313
S'.text:0000000000404a80\n.text:0000000000404a83\n.text:0000000000404a86\n.text:0000000000404a88\n.text:0000000000404a8d\n.text:0000000000404a8f\n.text:0000000000404a91\n.text:0000000000404a94\n.text:0000000000404a95\n.text:0000000000404a97\n'
p314
tp315
sS'isaac_refill'
p316
(S'\n__stdcall isaac_refill(isaac_state * s, isaac_word * result)\n'
p317
V\u000avoid isaac_refill(isaac_state *s,isaac_word *result)\u000a\u000a{\u000a  isaac_state *piVar1;\u000a  isaac_word x;\u000a  isaac_state *piVar2;\u000a  isaac_word iVar3;\u000a  ulong uVar4;\u000a  isaac_word iVar5;\u000a  ulong a;\u000a  isaac_word *piVar6;\u000a  isaac_word *piVar7;\u000a  ulong a_00;\u000a  isaac_word *local_48;\u000a  \u000a  uVar4 = s->a;\u000a  x = s->c + 1;\u000a  iVar5 = s->b + x;\u000a  s->c = x;\u000a  piVar1 = (isaac_state *)(s->m + 0x80);\u000a  piVar2 = (isaac_state *)(s->m + 4);\u000a  if ((isaac_state *)(s->m + 4) < piVar1) {\u000a    piVar2 = piVar1;\u000a  }\u000a  a_00 = (long)piVar2->m + ~(ulong)s;\u000a  local_48 = (isaac_word *)((long)result + (a_00 & 0xffffffffffffffe0) + 0x20);\u000a  piVar2 = s;\u000a  do {\u000a    a = ~(uVar4 << 0x15 ^ uVar4) + piVar2->m[0x80];\u000a    x = piVar2->m[0];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    uVar4 = iVar3 + iVar5 + a;\u000a    piVar2->m[0] = uVar4;\u000a    iVar5 = ind((isaac_word *)s,uVar4 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    *result = iVar5;\u000a    x = just(a);\u000a    a = (x >> 5 ^ a) + piVar2->m[0x81];\u000a    x = piVar2->m[1];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    uVar4 = iVar5 + a + iVar3;\u000a    piVar2->m[1] = uVar4;\u000a    iVar5 = ind((isaac_word *)s,uVar4 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    result[1] = iVar5;\u000a    a = (a * 0x1000 ^ a) + piVar2->m[0x82];\u000a    x = piVar2->m[2];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    uVar4 = iVar5 + a + iVar3;\u000a    piVar2->m[2] = uVar4;\u000a    iVar5 = ind((isaac_word *)s,uVar4 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    result[2] = iVar5;\u000a    x = just(a);\u000a    uVar4 = (x >> 0x21 ^ a) + piVar2->m[0x83];\u000a    x = piVar2->m[3];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    a = iVar5 + uVar4 + iVar3;\u000a    piVar2->m[3] = a;\u000a    iVar5 = ind((isaac_word *)s,a >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    result[3] = iVar5;\u000a    piVar2 = (isaac_state *)(piVar2->m + 4);\u000a    result = result + 4;\u000a  } while (piVar2 < piVar1);\u000a  piVar6 = (isaac_word *)((long)s->m + (a_00 & 0xffffffffffffffe0) + 0x38);\u000a  do {\u000a    a_00 = ~(uVar4 << 0x15 ^ uVar4) + piVar6[-0x83];\u000a    x = piVar6[-3];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    uVar4 = iVar3 + iVar5 + a_00;\u000a    piVar6[-3] = uVar4;\u000a    iVar5 = ind((isaac_word *)s,uVar4 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    *local_48 = iVar5;\u000a    x = just(a_00);\u000a    uVar4 = (x >> 5 ^ a_00) + piVar6[-0x82];\u000a    x = piVar6[-2];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    a_00 = iVar5 + uVar4 + iVar3;\u000a    piVar6[-2] = a_00;\u000a    iVar5 = ind((isaac_word *)s,a_00 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    local_48[1] = iVar5;\u000a    a_00 = (uVar4 * 0x1000 ^ uVar4) + piVar6[-0x81];\u000a    x = piVar6[-1];\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    uVar4 = iVar5 + a_00 + iVar3;\u000a    piVar6[-1] = uVar4;\u000a    iVar5 = ind((isaac_word *)s,uVar4 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    local_48[2] = iVar5;\u000a    x = just(a_00);\u000a    uVar4 = (x >> 0x21 ^ a_00) + piVar6[-0x80];\u000a    x = *piVar6;\u000a    iVar3 = ind((isaac_word *)s,x);\u000a    a_00 = iVar5 + uVar4 + iVar3;\u000a    *piVar6 = a_00;\u000a    iVar5 = ind((isaac_word *)s,a_00 >> 8);\u000a    iVar5 = just(x + iVar5);\u000a    local_48[3] = iVar5;\u000a    piVar7 = piVar6 + 1;\u000a    local_48 = local_48 + 4;\u000a    piVar6 = piVar6 + 4;\u000a  } while (piVar7 < &s->a);\u000a  s->a = uVar4;\u000a  s->b = iVar5;\u000a  return;\u000a}\u000a\u000a
p318
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBP,RSI\nMOV R14,RDI\nMOV RBX,qword ptr [0x800 + R14]\nMOV RAX,qword ptr [0x810 + R14]\nINC RAX\nMOV R12,qword ptr [0x808 + R14]\nADD R12,RAX\nMOV qword ptr [0x810 + R14],RAX\nLEA RCX,[0x400 + R14]\nLEA RAX,[R14 + 0x20]\nCMP RCX,RAX\nMOV qword ptr [RSP + 0x20],RCX\nCMOVA RAX,RCX\nMOV RCX,R14\nNOT RCX\nADD RCX,RAX\nSHR RCX,0x5\nLEA RAX,[RCX*0x4]\nMOV qword ptr [RSP + 0x18],RAX\nSHL RCX,0x5\nLEA RAX,[RBP + RCX*0x1 + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,qword ptr [RSP + 0x8]\nNOP\nMOV qword ptr [RSP],RBP\nMOV R13,RBX\nSHL R13,0x15\nXOR R13,RBX\nNOT R13\nADD R13,qword ptr [0x400 + R14]\nMOV RBX,qword ptr [R14]\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00405850\nADD RAX,R12\nADD RAX,R13\nMOV qword ptr [R14],RAX\nSHR RAX,0x8\nMOV RDI,R15\nMOV RSI,RAX\nCALL 0x00405850\nADD RBX,RAX\nMOV RDI,RBX\nCALL 0x00405860\nMOV RBX,RAX\nMOV qword ptr [RBP],RBX\nMOV RDI,R13\nCALL 0x00405860\nMOV RBP,RAX\nSHR RBP,0x5\nXOR RBP,R13\nADD RBP,qword ptr [0x408 + R14]\nMOV R12,qword ptr [R14 + 0x8]\nMOV RDI,R15\nMOV RSI,R12\nCALL 0x00405850\nADD RBX,RBP\nADD RBX,RAX\nMOV qword ptr [R14 + 0x8],RBX\nSHR RBX,0x8\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00405850\nADD R12,RAX\nMOV RDI,R12\nCALL 0x00405860\nMOV RBX,RAX\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RAX + 0x8],RBX\nMOV R12,RBP\nSHL R12,0xc\nXOR R12,RBP\nADD R12,qword ptr [0x410 + R14]\nMOV RBP,qword ptr [R14 + 0x10]\nMOV RDI,R15\nMOV RSI,RBP\nCALL 0x00405850\nADD RBX,R12\nADD RBX,RAX\nMOV qword ptr [R14 + 0x10],RBX\nSHR RBX,0x8\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00405850\nADD RBP,RAX\nMOV RDI,RBP\nCALL 0x00405860\nMOV RBP,RAX\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RAX + 0x10],RBP\nMOV RDI,R12\nCALL 0x00405860\nMOV RBX,RAX\nSHR RBX,0x21\nXOR RBX,R12\nADD RBX,qword ptr [0x418 + R14]\nMOV R12,qword ptr [R14 + 0x18]\nMOV RDI,R15\nMOV RSI,R12\nCALL 0x00405850\nADD RBP,RBX\nADD RBP,RAX\nMOV qword ptr [R14 + 0x18],RBP\nSHR RBP,0x8\nMOV RDI,R15\nMOV RSI,RBP\nMOV RBP,qword ptr [RSP]\nCALL 0x00405850\nADD R12,RAX\nMOV RDI,R12\nCALL 0x00405860\nMOV R12,RAX\nMOV qword ptr [RBP + 0x18],R12\nADD R14,0x20\nADD RBP,0x20\nCMP R14,qword ptr [RSP + 0x20]\nJC 0x00405530\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[0x800 + RCX]\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [RSP + 0x18]\nLEA R13,[RCX + RAX*0x8 + 0x38]\nMOV R14,qword ptr [RSP + 0x8]\nNOP\nMOV R15,RBX\nSHL R15,0x15\nXOR R15,RBX\nNOT R15\nADD R15,qword ptr [-0x418 + R13]\nMOV RBX,qword ptr [R13 + -0x18]\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00405850\nADD RAX,R12\nADD RAX,R15\nMOV qword ptr [R13 + -0x18],RAX\nSHR RAX,0x8\nMOV RDI,R14\nMOV RSI,RAX\nCALL 0x00405850\nADD RBX,RAX\nMOV RDI,RBX\nCALL 0x00405860\nMOV RBP,RAX\nMOV RAX,qword ptr [RSP + 0x10]\nMOV qword ptr [RAX],RBP\nMOV R12,RAX\nMOV RDI,R15\nCALL 0x00405860\nMOV RBX,RAX\nSHR RBX,0x5\nXOR RBX,R15\nADD RBX,qword ptr [-0x410 + R13]\nMOV R15,qword ptr [R13 + -0x10]\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00405850\nADD RBP,RBX\nADD RBP,RAX\nMOV qword ptr [R13 + -0x10],RBP\nSHR RBP,0x8\nMOV RDI,R14\nMOV RSI,RBP\nCALL 0x00405850\nADD R15,RAX\nMOV RDI,R15\nCALL 0x00405860\nMOV RBP,RAX\nMOV qword ptr [R12 + 0x8],RBP\nMOV qword ptr [RSP + 0x10],R12\nMOV R15,RBX\nSHL R15,0xc\nXOR R15,RBX\nADD R15,qword ptr [-0x408 + R13]\nMOV RBX,qword ptr [R13 + -0x8]\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00405850\nADD RBP,R15\nADD RBP,RAX\nMOV qword ptr [R13 + -0x8],RBP\nSHR RBP,0x8\nMOV RDI,R14\nMOV RSI,RBP\nCALL 0x00405850\nADD RBX,RAX\nMOV RDI,RBX\nCALL 0x00405860\nMOV RBP,RAX\nMOV qword ptr [R12 + 0x10],RBP\nMOV RDI,R15\nCALL 0x00405860\nMOV RBX,RAX\nSHR RBX,0x21\nXOR RBX,R15\nADD RBX,qword ptr [-0x400 + R13]\nMOV R15,qword ptr [R13]\nMOV RDI,R14\nMOV RSI,R15\nCALL 0x00405850\nADD RBP,RBX\nADD RBP,RAX\nMOV qword ptr [R13],RBP\nSHR RBP,0x8\nMOV RDI,R14\nMOV RSI,RBP\nCALL 0x00405850\nADD R15,RAX\nMOV RDI,R15\nCALL 0x00405860\nMOV R12,RAX\nMOV RCX,qword ptr [RSP + 0x10]\nMOV qword ptr [RCX + 0x18],R12\nLEA RAX,[R13 + 0x20]\nADD R13,0x8\nADD RCX,0x20\nMOV qword ptr [RSP + 0x10],RCX\nCMP R13,qword ptr [RSP]\nMOV R13,RAX\nJC 0x004056b0\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [0x800 + RAX],RBX\nMOV qword ptr [0x808 + RAX],R12\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p319
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 f5\n49 89 fe\n49 8b 9e 00 08 00 00\n49 8b 86 10 08 00 00\n48 ff c0\n4d 8b a6 08 08 00 00\n49 01 c4\n49 89 86 10 08 00 00\n49 8d 8e 00 04 00 00\n49 8d 46 20\n48 39 c1\n48 89 4c 24 20\n48 0f 47 c1\n4c 89 f1\n48 f7 d1\n48 01 c1\n48 c1 e9 05\n48 8d 04 8d 00 00 00 00\n48 89 44 24 18\n48 c1 e1 05\n48 8d 44 0d 20\n48 89 44 24 10\n4c 89 74 24 08\n4c 8b 7c 24 08\n90\n48 89 2c 24\n49 89 dd\n49 c1 e5 15\n49 31 dd\n49 f7 d5\n4d 03 ae 00 04 00 00\n49 8b 1e\n4c 89 ff\n48 89 de\ne8 fa 02 00 00\n4c 01 e0\n4c 01 e8\n49 89 06\n48 c1 e8 08\n4c 89 ff\n48 89 c6\ne8 e2 02 00 00\n48 01 c3\n48 89 df\ne8 e7 02 00 00\n48 89 c3\n48 89 5d 00\n4c 89 ef\ne8 d8 02 00 00\n48 89 c5\n48 c1 ed 05\n4c 31 ed\n49 03 ae 08 04 00 00\n4d 8b 66 08\n4c 89 ff\n4c 89 e6\ne8 a8 02 00 00\n48 01 eb\n48 01 c3\n49 89 5e 08\n48 c1 eb 08\n4c 89 ff\n48 89 de\ne8 8f 02 00 00\n49 01 c4\n4c 89 e7\ne8 94 02 00 00\n48 89 c3\n48 8b 04 24\n48 89 58 08\n49 89 ec\n49 c1 e4 0c\n49 31 ec\n4d 03 a6 10 04 00 00\n49 8b 6e 10\n4c 89 ff\n48 89 ee\ne8 59 02 00 00\n4c 01 e3\n48 01 c3\n49 89 5e 10\n48 c1 eb 08\n4c 89 ff\n48 89 de\ne8 40 02 00 00\n48 01 c5\n48 89 ef\ne8 45 02 00 00\n48 89 c5\n48 8b 04 24\n48 89 68 10\n4c 89 e7\ne8 32 02 00 00\n48 89 c3\n48 c1 eb 21\n4c 31 e3\n49 03 9e 18 04 00 00\n4d 8b 66 18\n4c 89 ff\n4c 89 e6\ne8 02 02 00 00\n48 01 dd\n48 01 c5\n49 89 6e 18\n48 c1 ed 08\n4c 89 ff\n48 89 ee\n48 8b 2c 24\ne8 e5 01 00 00\n49 01 c4\n4c 89 e7\ne8 ea 01 00 00\n49 89 c4\n4c 89 65 18\n49 83 c6 20\n48 83 c5 20\n4c 3b 74 24 20\n0f 82 a0 fe ff ff\n48 8b 4c 24 08\n48 8d 81 00 08 00 00\n48 89 04 24\n48 8b 44 24 18\n4c 8d 6c c1 38\n4c 8b 74 24 08\n90\n49 89 df\n49 c1 e7 15\n49 31 df\n49 f7 d7\n4d 03 bd e8 fb ff ff\n49 8b 5d e8\n4c 89 f7\n48 89 de\ne8 7d 01 00 00\n4c 01 e0\n4c 01 f8\n49 89 45 e8\n48 c1 e8 08\n4c 89 f7\n48 89 c6\ne8 64 01 00 00\n48 01 c3\n48 89 df\ne8 69 01 00 00\n48 89 c5\n48 8b 44 24 10\n48 89 28\n49 89 c4\n4c 89 ff\ne8 53 01 00 00\n48 89 c3\n48 c1 eb 05\n4c 31 fb\n49 03 9d f0 fb ff ff\n4d 8b 7d f0\n4c 89 f7\n4c 89 fe\ne8 23 01 00 00\n48 01 dd\n48 01 c5\n49 89 6d f0\n48 c1 ed 08\n4c 89 f7\n48 89 ee\ne8 0a 01 00 00\n49 01 c7\n4c 89 ff\ne8 0f 01 00 00\n48 89 c5\n49 89 6c 24 08\n4c 89 64 24 10\n49 89 df\n49 c1 e7 0c\n49 31 df\n4d 03 bd f8 fb ff ff\n49 8b 5d f8\n4c 89 f7\n48 89 de\ne8 d2 00 00 00\n4c 01 fd\n48 01 c5\n49 89 6d f8\n48 c1 ed 08\n4c 89 f7\n48 89 ee\ne8 b9 00 00 00\n48 01 c3\n48 89 df\ne8 be 00 00 00\n48 89 c5\n49 89 6c 24 10\n4c 89 ff\ne8 ae 00 00 00\n48 89 c3\n48 c1 eb 21\n4c 31 fb\n49 03 9d 00 fc ff ff\n4d 8b 7d 00\n4c 89 f7\n4c 89 fe\ne8 7e 00 00 00\n48 01 dd\n48 01 c5\n49 89 6d 00\n48 c1 ed 08\n4c 89 f7\n48 89 ee\ne8 65 00 00 00\n49 01 c7\n4c 89 ff\ne8 6a 00 00 00\n49 89 c4\n48 8b 4c 24 10\n4c 89 61 18\n49 8d 45 20\n49 83 c5 08\n48 83 c1 20\n48 89 4c 24 10\n4c 3b 2c 24\n49 89 c5\n0f 82 90 fe ff ff\n48 8b 44 24 08\n48 89 98 00 08 00 00\n4c 89 a0 08 08 00 00\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p320
S'.text:00000000004054b0\n.text:00000000004054b1\n.text:00000000004054b3\n.text:00000000004054b5\n.text:00000000004054b7\n.text:00000000004054b9\n.text:00000000004054ba\n.text:00000000004054be\n.text:00000000004054c1\n.text:00000000004054c4\n.text:00000000004054cb\n.text:00000000004054d2\n.text:00000000004054d5\n.text:00000000004054dc\n.text:00000000004054df\n.text:00000000004054e6\n.text:00000000004054ed\n.text:00000000004054f1\n.text:00000000004054f4\n.text:00000000004054f9\n.text:00000000004054fd\n.text:0000000000405500\n.text:0000000000405503\n.text:0000000000405506\n.text:000000000040550a\n.text:0000000000405512\n.text:0000000000405517\n.text:000000000040551b\n.text:0000000000405520\n.text:0000000000405525\n.text:000000000040552a\n.text:000000000040552f\n.text:0000000000405530\n.text:0000000000405534\n.text:0000000000405537\n.text:000000000040553b\n.text:000000000040553e\n.text:0000000000405541\n.text:0000000000405548\n.text:000000000040554b\n.text:000000000040554e\n.text:0000000000405551\n.text:0000000000405556\n.text:0000000000405559\n.text:000000000040555c\n.text:000000000040555f\n.text:0000000000405563\n.text:0000000000405566\n.text:0000000000405569\n.text:000000000040556e\n.text:0000000000405571\n.text:0000000000405574\n.text:0000000000405579\n.text:000000000040557c\n.text:0000000000405580\n.text:0000000000405583\n.text:0000000000405588\n.text:000000000040558b\n.text:000000000040558f\n.text:0000000000405592\n.text:0000000000405599\n.text:000000000040559d\n.text:00000000004055a0\n.text:00000000004055a3\n.text:00000000004055a8\n.text:00000000004055ab\n.text:00000000004055ae\n.text:00000000004055b2\n.text:00000000004055b6\n.text:00000000004055b9\n.text:00000000004055bc\n.text:00000000004055c1\n.text:00000000004055c4\n.text:00000000004055c7\n.text:00000000004055cc\n.text:00000000004055cf\n.text:00000000004055d3\n.text:00000000004055d7\n.text:00000000004055da\n.text:00000000004055de\n.text:00000000004055e1\n.text:00000000004055e8\n.text:00000000004055ec\n.text:00000000004055ef\n.text:00000000004055f2\n.text:00000000004055f7\n.text:00000000004055fa\n.text:00000000004055fd\n.text:0000000000405601\n.text:0000000000405605\n.text:0000000000405608\n.text:000000000040560b\n.text:0000000000405610\n.text:0000000000405613\n.text:0000000000405616\n.text:000000000040561b\n.text:000000000040561e\n.text:0000000000405622\n.text:0000000000405626\n.text:0000000000405629\n.text:000000000040562e\n.text:0000000000405631\n.text:0000000000405635\n.text:0000000000405638\n.text:000000000040563f\n.text:0000000000405643\n.text:0000000000405646\n.text:0000000000405649\n.text:000000000040564e\n.text:0000000000405651\n.text:0000000000405654\n.text:0000000000405658\n.text:000000000040565c\n.text:000000000040565f\n.text:0000000000405662\n.text:0000000000405666\n.text:000000000040566b\n.text:000000000040566e\n.text:0000000000405671\n.text:0000000000405676\n.text:0000000000405679\n.text:000000000040567d\n.text:0000000000405681\n.text:0000000000405685\n.text:000000000040568a\n.text:0000000000405690\n.text:0000000000405695\n.text:000000000040569c\n.text:00000000004056a0\n.text:00000000004056a5\n.text:00000000004056aa\n.text:00000000004056af\n.text:00000000004056b0\n.text:00000000004056b3\n.text:00000000004056b7\n.text:00000000004056ba\n.text:00000000004056bd\n.text:00000000004056c4\n.text:00000000004056c8\n.text:00000000004056cb\n.text:00000000004056ce\n.text:00000000004056d3\n.text:00000000004056d6\n.text:00000000004056d9\n.text:00000000004056dd\n.text:00000000004056e1\n.text:00000000004056e4\n.text:00000000004056e7\n.text:00000000004056ec\n.text:00000000004056ef\n.text:00000000004056f2\n.text:00000000004056f7\n.text:00000000004056fa\n.text:00000000004056ff\n.text:0000000000405702\n.text:0000000000405705\n.text:0000000000405708\n.text:000000000040570d\n.text:0000000000405710\n.text:0000000000405714\n.text:0000000000405717\n.text:000000000040571e\n.text:0000000000405722\n.text:0000000000405725\n.text:0000000000405728\n.text:000000000040572d\n.text:0000000000405730\n.text:0000000000405733\n.text:0000000000405737\n.text:000000000040573b\n.text:000000000040573e\n.text:0000000000405741\n.text:0000000000405746\n.text:0000000000405749\n.text:000000000040574c\n.text:0000000000405751\n.text:0000000000405754\n.text:0000000000405759\n.text:000000000040575e\n.text:0000000000405761\n.text:0000000000405765\n.text:0000000000405768\n.text:000000000040576f\n.text:0000000000405773\n.text:0000000000405776\n.text:0000000000405779\n.text:000000000040577e\n.text:0000000000405781\n.text:0000000000405784\n.text:0000000000405788\n.text:000000000040578c\n.text:000000000040578f\n.text:0000000000405792\n.text:0000000000405797\n.text:000000000040579a\n.text:000000000040579d\n.text:00000000004057a2\n.text:00000000004057a5\n.text:00000000004057aa\n.text:00000000004057ad\n.text:00000000004057b2\n.text:00000000004057b5\n.text:00000000004057b9\n.text:00000000004057bc\n.text:00000000004057c3\n.text:00000000004057c7\n.text:00000000004057ca\n.text:00000000004057cd\n.text:00000000004057d2\n.text:00000000004057d5\n.text:00000000004057d8\n.text:00000000004057dc\n.text:00000000004057e0\n.text:00000000004057e3\n.text:00000000004057e6\n.text:00000000004057eb\n.text:00000000004057ee\n.text:00000000004057f1\n.text:00000000004057f6\n.text:00000000004057f9\n.text:00000000004057fe\n.text:0000000000405802\n.text:0000000000405806\n.text:000000000040580a\n.text:000000000040580e\n.text:0000000000405813\n.text:0000000000405817\n.text:000000000040581a\n.text:0000000000405820\n.text:0000000000405825\n.text:000000000040582c\n.text:0000000000405833\n.text:0000000000405837\n.text:0000000000405838\n.text:000000000040583a\n.text:000000000040583c\n.text:000000000040583e\n.text:0000000000405840\n.text:0000000000405841\n'
p321
tp322
sS'open'
p323
(S'\n__stdcall open(char * __file, int __oflag)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_0060a1d0)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x0060a1d0]\n'
p326
S'ff 25 5a 89 20 00\n'
p327
S'.plt:0000000000401870\n'
p328
tp329
sS'quotearg_n_custom_mem'
p330
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p331
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p332
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x0060a340]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x0060a330]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060a320]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060a310]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00402740\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x004035d0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p333
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 47 69 20 00\n48 89 44 24 30\n0f 10 05 2b 69 20 00\n0f 29 44 24 20\n0f 10 05 0f 69 20 00\n0f 29 44 24 10\n0f 10 05 f3 68 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p334
S'.text:00000000004039e0\n.text:00000000004039e1\n.text:00000000004039e3\n.text:00000000004039e5\n.text:00000000004039e6\n.text:00000000004039ea\n.text:00000000004039ed\n.text:00000000004039f0\n.text:00000000004039f2\n.text:00000000004039f9\n.text:00000000004039fe\n.text:0000000000403a05\n.text:0000000000403a0a\n.text:0000000000403a11\n.text:0000000000403a16\n.text:0000000000403a1d\n.text:0000000000403a21\n.text:0000000000403a24\n.text:0000000000403a27\n.text:0000000000403a2c\n.text:0000000000403a2e\n.text:0000000000403a31\n.text:0000000000403a34\n.text:0000000000403a37\n.text:0000000000403a3c\n.text:0000000000403a40\n.text:0000000000403a41\n.text:0000000000403a43\n.text:0000000000403a45\n.text:0000000000403a46\n'
p335
tp336
sS'_init'
p337
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p338
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00609ff8;\u000a  if (PTR___gmon_start___00609ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00609ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p339
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00609ff8]\nTEST RAX,RAX\nJZ 0x004014ea\nCALL RAX\nADD RSP,0x8\nRET\n'
p340
S'48 83 ec 08\n48 8b 05 15 8b 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p341
S'.init:00000000004014d8\n.init:00000000004014dc\n.init:00000000004014e3\n.init:00000000004014e6\n.init:00000000004014e8\n.init:00000000004014ea\n.init:00000000004014ee\n'
p342
tp343
sS'count_consecutive_X_s'
p344
(S'\n__stdcall count_consecutive_X_s(char * s, size_t len)\n'
p345
V\u000asize_t count_consecutive_X_s(char *s,size_t len)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  if (len == 0) {\u000a    return 0;\u000a  }\u000a  s = s + -1;\u000a  sVar1 = 0;\u000a  do {\u000a    if (s[len] != 'X') {\u000a      return sVar1;\u000a    }\u000a    sVar1 = sVar1 + 1;\u000a    s = s + -1;\u000a  } while (len != sVar1);\u000a  return sVar1;\u000a}\u000a\u000a
p346
S'TEST RSI,RSI\nJZ 0x00402272\nDEC RDI\nXOR EAX,EAX\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [RSI + RDI*0x1],0x58\nJNZ 0x00402271\nINC RAX\nDEC RDI\nCMP RSI,RAX\nJNZ 0x00402260\nRET\nXOR EAX,EAX\nRET\n'
p347
S'48 85 f6\n74 1d\n48 ff cf\n31 c0\n66 0f 1f 44 00 00\n80 3c 3e 58\n75 0b\n48 ff c0\n48 ff cf\n48 39 c6\n75 ef\nc3\n31 c0\nc3\n'
p348
S'.text:0000000000402250\n.text:0000000000402253\n.text:0000000000402255\n.text:0000000000402258\n.text:000000000040225a\n.text:0000000000402260\n.text:0000000000402264\n.text:0000000000402266\n.text:0000000000402269\n.text:000000000040226c\n.text:000000000040226f\n.text:0000000000402271\n.text:0000000000402272\n.text:0000000000402274\n'
p349
tp350
sS'set_quoting_flags'
p351
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p352
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p353
S'TEST RDI,RDI\nMOV ECX,0x60a310\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p354
S'48 85 ff\nb9 10 a3 60 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p355
S'.text:0000000000402720\n.text:0000000000402723\n.text:0000000000402728\n.text:000000000040272c\n.text:000000000040272f\n.text:0000000000402732\n'
p356
tp357
sS'realloc'
p358
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p359
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_0060a1a0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p360
S'JMP qword ptr [0x0060a1a0]\n'
p361
S'ff 25 8a 89 20 00\n'
p362
S'.plt:0000000000401810\n'
p363
tp364
sS'__fprintf_chk'
p365
(S'\n__stdcall __fprintf_chk()\n'
p366
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_0060a208)();\u000a  return;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x0060a208]\n'
p368
S'ff 25 22 89 20 00\n'
p369
S'.plt:00000000004018e0\n'
p370
tp371
sS'maybe_close_stdout'
p372
(S'\n__stdcall maybe_close_stdout()\n'
p373
V\u000aundefined8 maybe_close_stdout(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RAX;\u000a  undefined8 uVar2;\u000a  \u000a  if (stdout_closed == 0) {\u000a    uVar2 = close_stdout();\u000a    return uVar2;\u000a  }\u000a  iVar1 = close_stream(stderr);\u000a  if (iVar1 == 0) {\u000a    return in_RAX;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(1);\u000a}\u000a\u000a
p374
S'PUSH RAX\nMOV AL,byte ptr [0x0060a2e9]\nTEST AL,AL\nJZ 0x0040223d\nMOV RDI,qword ptr [0x0060a2e0]\nCALL 0x004022c0\nTEST EAX,EAX\nJNZ 0x00402243\nPOP RAX\nRET\nPOP RAX\nJMP 0x00402350\nMOV EDI,0x1\nCALL 0x00401570\n'
p375
S'50\n8a 05 c2 80 20 00\n84 c0\n74 12\n48 8b 3d ae 80 20 00\ne8 89 00 00 00\n85 c0\n75 08\n58\nc3\n58\ne9 0d 01 00 00\nbf 01 00 00 00\ne8 23 f3 ff ff\n'
p376
S'.text:0000000000402220\n.text:0000000000402221\n.text:0000000000402227\n.text:0000000000402229\n.text:000000000040222b\n.text:0000000000402232\n.text:0000000000402237\n.text:0000000000402239\n.text:000000000040223b\n.text:000000000040223c\n.text:000000000040223d\n.text:000000000040223e\n.text:0000000000402243\n.text:0000000000402248\n'
p377
tp378
sS'gen_tempname'
p379
(S'\n__stdcall gen_tempname(char * tmpl)\n'
p380
V\u000aint gen_tempname(char *tmpl)\u000a\u000a{\u000a  int iVar1;\u000a  size_t x_suffix_len;\u000a  \u000a  iVar1 = gen_tempname_len(tmpl,x_suffix_len);\u000a  return iVar1;\u000a}\u000a\u000a
p381
S'MOV R8D,0x6\nJMP 0x00404060\n'
p382
S'41 b8 06 00 00 00\ne9 45 ff ff ff\n'
p383
S'.text:0000000000404110\n.text:0000000000404116\n'
p384
tp385
sS'get_charset_aliases'
p386
(S'\n__stdcall get_charset_aliases()\n'
p387
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_00404d94_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_00404d94_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_00404d94_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_00404d94_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_00404d94_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_00404d94_caseD_9;\u000a      case -1:\u000a        goto switchD_00404d94_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_00404ded:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_00404df3:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_00404d94_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_00404df3;\u000a  }\u000a  goto LAB_00404ded;\u000a}\u000a\u000a
p388
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x0060a450]\nTEST R15,R15\nJNZ 0x00404e02\nMOV EDI,0x40785c\nCALL 0x00401500\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00404bb8\nCMP byte ptr [RBX],0x0\nJNZ 0x00404bbd\nMOV EBX,0x40786c\nMOV RDI,RBX\nCALL 0x00401650\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00404bd7\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x00404bd9\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x004017c0\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00404c2d\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401780\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00404c38\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00404c55\nMOV R15D,0x4071e9\nJMP 0x00404dfb\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00401870\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00404ded\nMOV ESI,0x406a25\nMOV EDI,EBP\nCALL 0x00401820\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00404db4\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x00404d80\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x00401580\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x00401580\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x00404d80\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x004017f0\nMOV ESI,0x40787b\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x004016f0\nCMP EAX,0x2\nJL 0x00404dd4\nMOV RDI,R12\nCALL 0x00401650\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401650\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00404d5d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x00401810\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x00404ca4\nJMP 0x00404dbd\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x004017c0\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x00404ca4\nJMP 0x00404dbd\nMOV RDI,RBX\nCALL 0x004015c0\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x00404ce7\nJMP qword ptr [0x407720 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x004015c0\nCMP EAX,-0x1\nJZ 0x00404dd4\nCMP EAX,0xa\nJNZ 0x00404da0\nJMP 0x00404d80\nMOV EDI,EBP\nCALL 0x00401700\nJMP 0x00404ded\nMOV RDI,R15\nCALL 0x00401510\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x00404860\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00404ded\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x00404df3\nMOV R15D,0x4071e9\nMOV RDI,R13\nCALL 0x00401510\nMOV qword ptr [0x0060a450],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p389
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d b8 58 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf 5c 78 40 00\ne8 55 c9 ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb 6c 78 40 00\n48 89 df\ne8 8b ca ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 d9 cb ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 83 cb ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf e9 71 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 0c cc ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe 25 6a 40 00\n89 ef\ne8 a6 cb ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 bb c8 ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 ab c8 ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 ff ca ff ff\nbe 7b 78 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 ea c9 ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 39 c9 ff ff\n49 89 c4\n48 89 ef\ne8 2e c9 ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 c6 ca ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 55 ca ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 38 c8 ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd 20 77 40 00\n48 89 df\ne8 18 c8 ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 45 c9 ff ff\neb 30\n4c 89 ff\ne8 4b c7 ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 84 fa ff ff\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf e9 71 40 00\n4c 89 ef\ne8 15 c7 ff ff\n4c 89 3d 4e 56 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p390
S'.text:0000000000404b80\n.text:0000000000404b81\n.text:0000000000404b83\n.text:0000000000404b85\n.text:0000000000404b87\n.text:0000000000404b89\n.text:0000000000404b8a\n.text:0000000000404b91\n.text:0000000000404b98\n.text:0000000000404b9b\n.text:0000000000404ba1\n.text:0000000000404ba6\n.text:0000000000404bab\n.text:0000000000404bae\n.text:0000000000404bb1\n.text:0000000000404bb3\n.text:0000000000404bb6\n.text:0000000000404bb8\n.text:0000000000404bbd\n.text:0000000000404bc0\n.text:0000000000404bc5\n.text:0000000000404bc8\n.text:0000000000404bcb\n.text:0000000000404bcd\n.text:0000000000404bd2\n.text:0000000000404bd5\n.text:0000000000404bd7\n.text:0000000000404bd9\n.text:0000000000404bdd\n.text:0000000000404be2\n.text:0000000000404be7\n.text:0000000000404bea\n.text:0000000000404bed\n.text:0000000000404bef\n.text:0000000000404bf2\n.text:0000000000404bf5\n.text:0000000000404bf8\n.text:0000000000404bfd\n.text:0000000000404c00\n.text:0000000000404c03\n.text:0000000000404c06\n.text:0000000000404c08\n.text:0000000000404c0e\n.text:0000000000404c18\n.text:0000000000404c1d\n.text:0000000000404c27\n.text:0000000000404c2b\n.text:0000000000404c2d\n.text:0000000000404c33\n.text:0000000000404c38\n.text:0000000000404c42\n.text:0000000000404c47\n.text:0000000000404c51\n.text:0000000000404c55\n.text:0000000000404c5a\n.text:0000000000404c5c\n.text:0000000000404c5f\n.text:0000000000404c64\n.text:0000000000404c66\n.text:0000000000404c68\n.text:0000000000404c6e\n.text:0000000000404c73\n.text:0000000000404c75\n.text:0000000000404c7a\n.text:0000000000404c7d\n.text:0000000000404c80\n.text:0000000000404c86\n.text:0000000000404c8b\n.text:0000000000404c90\n.text:0000000000404c92\n.text:0000000000404c97\n.text:0000000000404c9a\n.text:0000000000404c9f\n.text:0000000000404ca4\n.text:0000000000404ca9\n.text:0000000000404cac\n.text:0000000000404caf\n.text:0000000000404cb2\n.text:0000000000404cb5\n.text:0000000000404cb8\n.text:0000000000404cbd\n.text:0000000000404cc0\n.text:0000000000404cc5\n.text:0000000000404cc8\n.text:0000000000404ccd\n.text:0000000000404cd0\n.text:0000000000404cd5\n.text:0000000000404cda\n.text:0000000000404cdd\n.text:0000000000404ce2\n.text:0000000000404ce7\n.text:0000000000404ce9\n.text:0000000000404cec\n.text:0000000000404cf1\n.text:0000000000404cf6\n.text:0000000000404cf8\n.text:0000000000404cfb\n.text:0000000000404cfe\n.text:0000000000404d01\n.text:0000000000404d06\n.text:0000000000404d09\n.text:0000000000404d0f\n.text:0000000000404d12\n.text:0000000000404d17\n.text:0000000000404d1a\n.text:0000000000404d1d\n.text:0000000000404d22\n.text:0000000000404d25\n.text:0000000000404d2a\n.text:0000000000404d2f\n.text:0000000000404d32\n.text:0000000000404d34\n.text:0000000000404d38\n.text:0000000000404d3d\n.text:0000000000404d42\n.text:0000000000404d45\n.text:0000000000404d4a\n.text:0000000000404d4d\n.text:0000000000404d52\n.text:0000000000404d55\n.text:0000000000404d5b\n.text:0000000000404d5d\n.text:0000000000404d62\n.text:0000000000404d66\n.text:0000000000404d6b\n.text:0000000000404d6e\n.text:0000000000404d71\n.text:0000000000404d77\n.text:0000000000404d80\n.text:0000000000404d83\n.text:0000000000404d88\n.text:0000000000404d8b\n.text:0000000000404d8e\n.text:0000000000404d94\n.text:0000000000404da0\n.text:0000000000404da3\n.text:0000000000404da8\n.text:0000000000404dab\n.text:0000000000404dad\n.text:0000000000404db0\n.text:0000000000404db2\n.text:0000000000404db4\n.text:0000000000404db6\n.text:0000000000404dbb\n.text:0000000000404dbd\n.text:0000000000404dc0\n.text:0000000000404dc5\n.text:0000000000404dc7\n.text:0000000000404dcc\n.text:0000000000404dcf\n.text:0000000000404dd4\n.text:0000000000404dd7\n.text:0000000000404ddc\n.text:0000000000404de1\n.text:0000000000404de4\n.text:0000000000404de6\n.text:0000000000404deb\n.text:0000000000404ded\n.text:0000000000404df3\n.text:0000000000404df6\n.text:0000000000404dfb\n.text:0000000000404e02\n.text:0000000000404e05\n.text:0000000000404e0c\n.text:0000000000404e0d\n.text:0000000000404e0f\n.text:0000000000404e11\n.text:0000000000404e13\n.text:0000000000404e15\n.text:0000000000404e16\n'
p391
tp392
sS'nl_langinfo'
p393
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p394
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0060a188)();\u000a  return pcVar1;\u000a}\u000a\u000a
p395
S'JMP qword ptr [0x0060a188]\n'
p396
S'ff 25 a2 89 20 00\n'
p397
S'.plt:00000000004017e0\n'
p398
tp399
sS'x2realloc'
p400
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p401
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p402
S'MOV EDX,0x1\nJMP 0x004046c0\n'
p403
S'ba 01 00 00 00\neb 89\n'
p404
S'.text:0000000000404730\n.text:0000000000404735\n'
p405
tp406
sS'__mempcpy_chk'
p407
(S'\n__stdcall __mempcpy_chk()\n'
p408
V\u000avoid __mempcpy_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___mempcpy_chk_0060a028)();\u000a  return;\u000a}\u000a\u000a
p409
S'JMP qword ptr [0x0060a028]\n'
p410
S'ff 25 02 8b 20 00\n'
p411
S'.plt:0000000000401520\n'
p412
tp413
sS'strlen'
p414
(S'\n__stdcall strlen(char * __s)\n'
p415
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_0060a0c0)();\u000a  return sVar1;\u000a}\u000a\u000a
p416
S'JMP qword ptr [0x0060a0c0]\n'
p417
S'ff 25 6a 8a 20 00\n'
p418
S'.plt:0000000000401650\n'
p419
tp420
sS'memcmp'
p421
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_0060a130)();\u000a  return iVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x0060a130]\n'
p424
S'ff 25 fa 89 20 00\n'
p425
S'.plt:0000000000401730\n'
p426
tp427
sS'quotearg_n_style_mem'
p428
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p429
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p430
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00403800\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x004035d0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p431
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p432
S'.text:0000000000403860\n.text:0000000000403861\n.text:0000000000403863\n.text:0000000000403865\n.text:0000000000403866\n.text:000000000040386a\n.text:000000000040386d\n.text:0000000000403870\n.text:0000000000403872\n.text:0000000000403875\n.text:0000000000403878\n.text:000000000040387d\n.text:000000000040387f\n.text:0000000000403882\n.text:0000000000403885\n.text:0000000000403888\n.text:000000000040388d\n.text:0000000000403891\n.text:0000000000403892\n.text:0000000000403894\n.text:0000000000403896\n.text:0000000000403897\n'
p433
tp434
sS'_exit'
p435
(S'\n__stdcall _exit(int __status)\n'
p436
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_0060a050)();\u000a  return;\u000a}\u000a\u000a
p437
S'JMP qword ptr [0x0060a050]\n'
p438
S'ff 25 da 8a 20 00\n'
p439
S'.plt:0000000000401570\n'
p440
tp441
sS'xrealloc'
p442
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p443
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p444
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x004046a7\nTEST RBX,RBX\nJNZ 0x004046a7\nCALL 0x00401510\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x00401810\nTEST RBX,RBX\nJZ 0x004046b9\nTEST RAX,RAX\nJZ 0x004046bb\nPOP RBX\nRET\nCALL 0x004047e0\n'
p445
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 6d ce ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 61 d1 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p446
S'.text:0000000000404690\n.text:0000000000404691\n.text:0000000000404694\n.text:0000000000404697\n.text:0000000000404699\n.text:000000000040469c\n.text:000000000040469e\n.text:00000000004046a3\n.text:00000000004046a5\n.text:00000000004046a6\n.text:00000000004046a7\n.text:00000000004046aa\n.text:00000000004046af\n.text:00000000004046b2\n.text:00000000004046b4\n.text:00000000004046b7\n.text:00000000004046b9\n.text:00000000004046ba\n.text:00000000004046bb\n'
p447
tp448
sS'randread_set_handler_arg'
p449
(S'\n__stdcall randread_set_handler_arg(randread_source * s, void * handler_arg)\n'
p450
V\u000avoid randread_set_handler_arg(randread_source *s,void *handler_arg)\u000a\u000a{\u000a  s->handler_arg = handler_arg;\u000a  return;\u000a}\u000a\u000a
p451
S'MOV qword ptr [RDI + 0x10],RSI\nRET\n'
p452
S'48 89 77 10\nc3\n'
p453
S'.text:0000000000405280\n.text:0000000000405284\n'
p454
tp455
sS'close_stdout'
p456
(S'\n__stdcall close_stdout()\n'
p457
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00402377;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,0x406a4c,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00402377:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p458
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x0060a2a8]\nCALL 0x004022c0\nTEST EAX,EAX\nJZ 0x00402377\nCMP byte ptr [0x0060a2f8],0x0\nJZ 0x0040238c\nCALL 0x00401540\nCMP dword ptr [RAX],0x20\nJNZ 0x0040238c\nMOV RDI,qword ptr [0x0060a2e0]\nCALL 0x004022c0\nTEST EAX,EAX\nJNZ 0x004023d1\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x406896\nMOV EDX,0x5\nCALL 0x00401630\nMOV R14,RAX\nMOV RBX,qword ptr [0x0060a2f0]\nCALL 0x00401540\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x004023dc\nXOR EDI,EDI\nMOV EDX,0x406a4c\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00401860\nMOV EDI,dword ptr [0x0060a240]\nCALL 0x00401570\nMOV EDI,dword ptr [0x0060a240]\nCALL 0x00401570\nMOV RDI,RBX\nCALL 0x00403960\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x406a48\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00401860\nMOV EDI,dword ptr [0x0060a240]\nCALL 0x00401570\n'
p459
S'55\n41 56\n53\n48 8b 3d 4d 7f 20 00\ne8 60 ff ff ff\n85 c0\n74 13\n80 3d 8d 7f 20 00 00\n74 1f\ne8 ce f1 ff ff\n83 38 20\n75 15\n48 8b 3d 62 7f 20 00\ne8 3d ff ff ff\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe 96 68 40 00\nba 05 00 00 00\ne8 93 f2 ff ff\n49 89 c6\n48 8b 1d 49 7f 20 00\ne8 94 f1 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba 4c 6a 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 9a f4 ff ff\n8b 3d 74 7e 20 00\ne8 9f f1 ff ff\n8b 3d 69 7e 20 00\ne8 94 f1 ff ff\n48 89 df\ne8 7c 15 00 00\n48 89 c1\n31 ff\nba 48 6a 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 66 f4 ff ff\n8b 3d 40 7e 20 00\ne8 6b f1 ff ff\n'
p460
S'.text:0000000000402350\n.text:0000000000402351\n.text:0000000000402353\n.text:0000000000402354\n.text:000000000040235b\n.text:0000000000402360\n.text:0000000000402362\n.text:0000000000402364\n.text:000000000040236b\n.text:000000000040236d\n.text:0000000000402372\n.text:0000000000402375\n.text:0000000000402377\n.text:000000000040237e\n.text:0000000000402383\n.text:0000000000402385\n.text:0000000000402387\n.text:0000000000402388\n.text:000000000040238a\n.text:000000000040238b\n.text:000000000040238c\n.text:000000000040238e\n.text:0000000000402393\n.text:0000000000402398\n.text:000000000040239d\n.text:00000000004023a0\n.text:00000000004023a7\n.text:00000000004023ac\n.text:00000000004023af\n.text:00000000004023b1\n.text:00000000004023b3\n.text:00000000004023b5\n.text:00000000004023ba\n.text:00000000004023bc\n.text:00000000004023be\n.text:00000000004023c1\n.text:00000000004023c6\n.text:00000000004023cc\n.text:00000000004023d1\n.text:00000000004023d7\n.text:00000000004023dc\n.text:00000000004023df\n.text:00000000004023e4\n.text:00000000004023e7\n.text:00000000004023e9\n.text:00000000004023ee\n.text:00000000004023f0\n.text:00000000004023f2\n.text:00000000004023f5\n.text:00000000004023fa\n.text:0000000000402400\n'
p461
tp462
sS'version_etc_ar'
p463
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p464
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p465
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x004044a0\nJMP 0x00404130\n'
p466
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p467
S'.text:0000000000404490\n.text:0000000000404497\n.text:00000000004044a0\n.text:00000000004044a6\n.text:00000000004044aa\n.text:00000000004044ac\n'
p468
tp469
sS'c_isxdigit'
p470
(S'\n__stdcall c_isxdigit()\n'
p471
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p472
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x00404acb\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p473
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p474
S'.text:0000000000404ab0\n.text:0000000000404ab3\n.text:0000000000404ab6\n.text:0000000000404ab8\n.text:0000000000404ac2\n.text:0000000000404ac4\n.text:0000000000404ac7\n.text:0000000000404aca\n.text:0000000000404acb\n.text:0000000000404acd\n'
p475
tp476
sS'__libc_csu_fini'
p477
(S'\n__stdcall __libc_csu_fini()\n'
p478
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p479
S'RET\n'
p480
S'f3 c3\n'
p481
S'.text:0000000000405e60\n'
p482
tp483
sS'__rawmemchr'
p484
(S'\n__stdcall __rawmemchr()\n'
p485
V\u000avoid __rawmemchr(void)\u000a\u000a{\u000a  (*(code *)PTR___rawmemchr_0060a170)();\u000a  return;\u000a}\u000a\u000a
p486
S'JMP qword ptr [0x0060a170]\n'
p487
S'ff 25 ba 89 20 00\n'
p488
S'.plt:00000000004017b0\n'
p489
tp490
sS'getuid'
p491
(S'\n__stdcall getuid()\n'
p492
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__uid_t getuid(void)\u000a\u000a{\u000a  __uid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getuid_0060a0d0)();\u000a  return _Var1;\u000a}\u000a\u000a
p493
S'JMP qword ptr [0x0060a0d0]\n'
p494
S'ff 25 5a 8a 20 00\n'
p495
S'.plt:0000000000401670\n'
p496
tp497
sS'abort'
p498
(S'\n__stdcall abort()\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_0060a030)();\u000a  return;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x0060a030]\n'
p501
S'ff 25 fa 8a 20 00\n'
p502
S'.plt:0000000000401530\n'
p503
tp504
sS'randint_all_free'
p505
(S'\n__stdcall randint_all_free(randint_source * s)\n'
p506
V\u000aint randint_all_free(randint_source *s)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  \u000a  iVar2 = randread_free(s->source);\u000a  piVar3 = __errno_location();\u000a  iVar1 = *piVar3;\u000a  randint_free(s);\u000a  *piVar3 = iVar1;\u000a  return iVar2;\u000a}\u000a\u000a
p507
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX]\nCALL 0x00405430\nMOV R14D,EAX\nCALL 0x00401540\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV RDI,RBX\nCALL 0x00404fa0\nMOV dword ptr [RBP],R15D\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p508
S'55\n41 57\n41 56\n53\n50\n48 89 fb\n48 8b 3b\ne8 6e 04 00 00\n41 89 c6\ne8 76 c5 ff ff\n48 89 c5\n44 8b 7d 00\n48 89 df\ne8 c7 ff ff ff\n44 89 7d 00\n44 89 f0\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p509
S'.text:0000000000404fb0\n.text:0000000000404fb1\n.text:0000000000404fb3\n.text:0000000000404fb5\n.text:0000000000404fb6\n.text:0000000000404fb7\n.text:0000000000404fba\n.text:0000000000404fbd\n.text:0000000000404fc2\n.text:0000000000404fc5\n.text:0000000000404fca\n.text:0000000000404fcd\n.text:0000000000404fd1\n.text:0000000000404fd4\n.text:0000000000404fd9\n.text:0000000000404fdd\n.text:0000000000404fe0\n.text:0000000000404fe4\n.text:0000000000404fe5\n.text:0000000000404fe7\n.text:0000000000404fe9\n.text:0000000000404fea\n'
p510
tp511
sS'longest_relative_suffix'
p512
(S'\n__stdcall longest_relative_suffix(char * f)\n'
p513
V\u000achar * longest_relative_suffix(char *f)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  f = f + -1;\u000a  do {\u000a    pcVar1 = f + 1;\u000a    f = f + 1;\u000a  } while (*pcVar1 == '/');\u000a  return f;\u000a}\u000a\u000a
p514
S'DEC RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [RDI + 0x1],0x2f\nLEA RDI,[RDI + 0x1]\nJZ 0x004025c0\nMOV RAX,RDI\nRET\n'
p515
S'48 ff cf\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 7f 01 2f\n48 8d 7f 01\n74 f6\n48 89 f8\nc3\n'
p516
S'.text:00000000004025b0\n.text:00000000004025b3\n.text:00000000004025c0\n.text:00000000004025c4\n.text:00000000004025c8\n.text:00000000004025ca\n.text:00000000004025cd\n'
p517
tp518
sS'mkstemp_len'
p519
(S'\n__stdcall mkstemp_len(char * tmpl, size_t suff_len, size_t x_len)\n'
p520
V\u000aint mkstemp_len(char *tmpl,size_t suff_len,size_t x_len)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = gen_tempname_len(tmpl,suff_len);\u000a  return iVar1;\u000a}\u000a\u000a
p521
S'MOV RAX,RDX\nMOVZX ECX,CL\nADD ECX,ECX\nXOR EDX,EDX\nMOV R8,RAX\nJMP 0x00404060\n'
p522
S'48 89 d0\n0f b6 c9\n01 c9\n31 d2\n49 89 c0\ne9 ae 1d 00 00\n'
p523
S'.text:00000000004022a0\n.text:00000000004022a3\n.text:00000000004022a6\n.text:00000000004022a8\n.text:00000000004022aa\n.text:00000000004022ad\n'
p524
tp525
sS'version_etc'
p526
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p527
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p528
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00404562\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x004044c0\nADD RSP,0xd8\nRET\n'
p529
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p530
S'.text:0000000000404520\n.text:0000000000404527\n.text:0000000000404529\n.text:000000000040452b\n.text:0000000000404530\n.text:0000000000404535\n.text:000000000040453a\n.text:0000000000404542\n.text:000000000040454a\n.text:0000000000404552\n.text:000000000040455a\n.text:0000000000404562\n.text:0000000000404567\n.text:000000000040456c\n.text:0000000000404571\n.text:0000000000404576\n.text:000000000040457e\n.text:0000000000404583\n.text:000000000040458b\n.text:0000000000404592\n.text:0000000000404595\n.text:000000000040459a\n.text:00000000004045a1\n'
p531
tp532
sS'randread_new'
p533
(S'\n__stdcall randread_new(char * name, size_t bytes_bound)\n'
p534
V\u000arandread_source * randread_new(char *name,size_t bytes_bound)\u000a\u000a{\u000a  FILE *source;\u000a  randread_source *prVar1;\u000a  size_t min_len;\u000a  size_t __n;\u000a  int entropy;\u000a  size_t max_len;\u000a  \u000a  if (bytes_bound != 0) {\u000a    if (name == (char *)0x0) {\u000a      prVar1 = simple_new((FILE *)0x0,(void *)0x0);\u000a      *(undefined8 *)prVar1->buf = 0;\u000a      get_nonce((DRBG_CTX *)(isaac_state *)(prVar1->buf + 8),(uchar **)bytes_bound,entropy,min_len,\u000a                max_len);\u000a      isaac_seed((isaac_state *)(prVar1->buf + 8));\u000a    }\u000a    else {\u000a      source = fopen_safer(name,"rb");\u000a      if (source == (FILE *)0x0) {\u000a        prVar1 = (randread_source *)0x0;\u000a      }\u000a      else {\u000a        prVar1 = simple_new(source,name);\u000a        __n = 0x1000;\u000a        if (bytes_bound < 0x1000) {\u000a          __n = bytes_bound;\u000a        }\u000a        setvbuf((FILE *)source,(char *)prVar1->buf,0,__n);\u000a      }\u000a    }\u000a    return prVar1;\u000a  }\u000a  prVar1 = simple_new((FILE *)0x0,(void *)0x0);\u000a  return prVar1;\u000a}\u000a\u000a
p535
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV RBX,RDI\nTEST R15,R15\nJZ 0x0040504b\nTEST RBX,RBX\nJZ 0x0040505c\nMOV ESI,0x407885\nMOV RDI,RBX\nCALL 0x00405b90\nMOV R12,RAX\nTEST R12,R12\nJZ 0x0040508d\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x004050a0\nMOV R14,RAX\nLEA RSI,[R14 + 0x18]\nCMP R15,0x1000\nMOV ECX,0x1000\nCMOVC RCX,R15\nXOR EDX,EDX\nMOV RDI,R12\nCALL 0x00401850\nJMP 0x00405090\nXOR EDI,EDI\nXOR ESI,ESI\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004050a0\nXOR EDI,EDI\nMOV RSI,RBX\nCALL 0x004050a0\nMOV R14,RAX\nMOV qword ptr [R14 + 0x18],0x0\nMOV RBX,R14\nADD RBX,0x20\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x004050d0\nMOV RDI,RBX\nCALL 0x00405870\nJMP 0x00405090\nXOR R14D,R14D\nMOV RAX,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p536
S'41 57\n41 56\n41 54\n53\n50\n49 89 f7\n48 89 fb\n4d 85 ff\n74 48\n48 85 db\n74 54\nbe 85 78 40 00\n48 89 df\ne8 7b 0b 00 00\n49 89 c4\n4d 85 e4\n74 70\n4c 89 e7\n48 89 de\ne8 78 00 00 00\n49 89 c6\n49 8d 76 18\n49 81 ff 00 10 00 00\nb9 00 10 00 00\n49 0f 42 cf\n31 d2\n4c 89 e7\ne8 07 c8 ff ff\neb 45\n31 ff\n31 f6\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\neb 44\n31 ff\n48 89 de\ne8 3a 00 00 00\n49 89 c6\n49 c7 46 18 00 00 00 00\n4c 89 f3\n48 83 c3 20\n48 89 df\n4c 89 fe\ne8 4d 00 00 00\n48 89 df\ne8 e5 07 00 00\neb 03\n45 31 f6\n4c 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p537
S'.text:0000000000404ff0\n.text:0000000000404ff2\n.text:0000000000404ff4\n.text:0000000000404ff6\n.text:0000000000404ff7\n.text:0000000000404ff8\n.text:0000000000404ffb\n.text:0000000000404ffe\n.text:0000000000405001\n.text:0000000000405003\n.text:0000000000405006\n.text:0000000000405008\n.text:000000000040500d\n.text:0000000000405010\n.text:0000000000405015\n.text:0000000000405018\n.text:000000000040501b\n.text:000000000040501d\n.text:0000000000405020\n.text:0000000000405023\n.text:0000000000405028\n.text:000000000040502b\n.text:000000000040502f\n.text:0000000000405036\n.text:000000000040503b\n.text:000000000040503f\n.text:0000000000405041\n.text:0000000000405044\n.text:0000000000405049\n.text:000000000040504b\n.text:000000000040504d\n.text:000000000040504f\n.text:0000000000405053\n.text:0000000000405054\n.text:0000000000405056\n.text:0000000000405058\n.text:000000000040505a\n.text:000000000040505c\n.text:000000000040505e\n.text:0000000000405061\n.text:0000000000405066\n.text:0000000000405069\n.text:0000000000405071\n.text:0000000000405074\n.text:0000000000405078\n.text:000000000040507b\n.text:000000000040507e\n.text:0000000000405083\n.text:0000000000405086\n.text:000000000040508b\n.text:000000000040508d\n.text:0000000000405090\n.text:0000000000405093\n.text:0000000000405097\n.text:0000000000405098\n.text:000000000040509a\n.text:000000000040509c\n.text:000000000040509e\n'
p538
tp539
sS'lseek'
p540
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p541
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_0060a0f0)();\u000a  return _Var1;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x0060a0f0]\n'
p543
S'ff 25 3a 8a 20 00\n'
p544
S'.plt:00000000004016b0\n'
p545
tp546
sS'quotearg_n_mem'
p547
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p548
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p549
S'MOV ECX,0x60a310\nJMP 0x004035d0\n'
p550
S'b9 10 a3 60 00\ne9 36 fe ff ff\n'
p551
S'.text:0000000000403790\n.text:0000000000403795\n'
p552
tp553
sS'__printf_chk'
p554
(S'\n__stdcall __printf_chk()\n'
p555
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_0060a1b8)();\u000a  return;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x0060a1b8]\n'
p557
S'ff 25 72 89 20 00\n'
p558
S'.plt:0000000000401840\n'
p559
tp560
sS'base_len'
p561
(S'\n__stdcall base_len(char * name)\n'
p562
V\u000asize_t base_len(char *name)\u000a\u000a{\u000a  long lVar1;\u000a  size_t sVar2;\u000a  size_t sVar3;\u000a  \u000a  sVar2 = strlen(name);\u000a  do {\u000a    sVar3 = sVar2;\u000a    if (sVar2 < 2) {\u000a      return sVar3;\u000a    }\u000a    lVar1 = sVar2 - 1;\u000a    sVar2 = sVar2 - 1;\u000a  } while (name[lVar1] == '/');\u000a  return sVar3;\u000a}\u000a\u000a
p563
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401650\nMOV RCX,RAX\nNOP dword ptr [RAX]\nMOV RAX,RCX\nCMP RAX,0x2\nJC 0x00402494\nLEA RCX,[RAX + -0x1]\nCMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f\nJZ 0x00402480\nPOP RBX\nRET\n'
p564
S'53\n48 89 fb\ne8 d7 f1 ff ff\n48 89 c1\n0f 1f 40 00\n48 89 c8\n48 83 f8 02\n72 0b\n48 8d 48 ff\n80 7c 03 ff 2f\n74 ec\n5b\nc3\n'
p565
S'.text:0000000000402470\n.text:0000000000402471\n.text:0000000000402474\n.text:0000000000402479\n.text:000000000040247c\n.text:0000000000402480\n.text:0000000000402483\n.text:0000000000402487\n.text:0000000000402489\n.text:000000000040248d\n.text:0000000000402492\n.text:0000000000402494\n.text:0000000000402495\n'
p566
tp567
sS'remove'
p568
(S'\n__stdcall remove(char * __filename)\n'
p569
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint remove(char *__filename)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_remove_0060a040)();\u000a  return iVar1;\u000a}\u000a\u000a
p570
S'JMP qword ptr [0x0060a040]\n'
p571
S'ff 25 ea 8a 20 00\n'
p572
S'.plt:0000000000401550\n'
p573
tp574
sS'randint_genmax'
p575
(S'\n__stdcall randint_genmax(randint_source * s, randint genmax)\n'
p576
V\u000arandint randint_genmax(randint_source *s,randint genmax)\u000a\u000a{\u000a  ulong uVar1;\u000a  randread_source *s_00;\u000a  randint rVar2;\u000a  ulong x;\u000a  randint x_00;\u000a  ulong x_01;\u000a  ulong uVar3;\u000a  byte *buf_00;\u000a  ulong uVar4;\u000a  size_t size;\u000a  randread_source *source;\u000a  uchar buf [8];\u000a  byte local_38 [8];\u000a  \u000a  s_00 = s->source;\u000a  x_01 = s->randmax;\u000a  uVar1 = genmax + 1;\u000a  x = s->randnum;\u000a  while( true ) {\u000a    x_00 = x;\u000a    if (x_01 < genmax) {\u000a      size = 0;\u000a      x = x_01;\u000a      do {\u000a        rVar2 = shift_left(x);\u000a        x = rVar2 + 0xff;\u000a        size = size + 1;\u000a      } while (x < genmax);\u000a      buf_00 = local_38;\u000a      randread(s_00,buf_00,size);\u000a      do {\u000a        x_00 = shift_left(x_00);\u000a        x_00 = (ulong)*buf_00 + x_00;\u000a        rVar2 = shift_left(x_01);\u000a        x_01 = rVar2 + 0xff;\u000a        buf_00 = buf_00 + 1;\u000a      } while (x_01 < genmax);\u000a    }\u000a    uVar4 = x_01 - genmax;\u000a    if (uVar4 == 0) break;\u000a    uVar3 = x_01 - uVar4 % uVar1;\u000a    x_01 = uVar4 % uVar1 - 1;\u000a    x = x_00 % uVar1;\u000a    if (x_00 <= uVar3) {\u000a      s->randnum = x_00 / uVar1;\u000a      s->randmax = uVar4 / uVar1;\u000a      return x_00 % uVar1;\u000a    }\u000a  }\u000a  *(undefined4 *)&s->randnum = 0;\u000a  *(undefined4 *)((long)&s->randnum + 4) = 0;\u000a  *(undefined4 *)&s->randmax = 0;\u000a  *(undefined4 *)((long)&s->randmax + 4) = 0;\u000a  return x_00;\u000a}\u000a\u000a
p577
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV R13,RSI\nMOV RAX,qword ptr [RDI]\nMOV qword ptr [RSP + 0x18],RAX\nMOV R15,qword ptr [RDI + 0x8]\nLEA RAX,[RDI + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV qword ptr [RSP + 0x10],RDI\nMOV RBX,qword ptr [RDI + 0x10]\nLEA R12,[R13 + 0x1]\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP RBX,R13\nJNC 0x00404f1a\nMOV RAX,RBX\nXOR R14D,R14D\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,RAX\nCALL 0x00404f90\nADD RAX,0xff\nINC R14\nCMP RAX,R13\nJC 0x00404ec0\nMOV RDI,qword ptr [RSP + 0x18]\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nMOV RDX,R14\nCALL 0x00405290\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,R15\nCALL 0x00404f90\nMOVZX R15D,byte ptr [RBP]\nADD R15,RAX\nMOV RDI,RBX\nCALL 0x00404f90\nMOV RBX,RAX\nADD RBX,0xff\nINC RBP\nCMP RBX,R13\nJC 0x00404ef0\nMOV RCX,R15\nMOV RSI,RBX\nSUB RSI,R13\nJZ 0x00404f6f\nXOR EDX,EDX\nMOV RAX,RSI\nDIV R12\nMOV RDI,RDX\nSUB RBX,RDI\nXOR EDX,EDX\nMOV RAX,RCX\nDIV R12\nMOV R15,RDX\nDEC RDI\nCMP RCX,RBX\nMOV RBX,RDI\nJA 0x00404eb0\nXOR EDX,EDX\nMOV RAX,RCX\nDIV R12\nMOV RCX,qword ptr [RSP + 0x10]\nMOV qword ptr [RCX + 0x8],RAX\nXOR EDX,EDX\nMOV RAX,RSI\nDIV R12\nMOV qword ptr [RCX + 0x10],RAX\nMOV RCX,R15\nJMP 0x00404f7a\nXORPS XMM0,XMM0\nMOV RAX,qword ptr [RSP + 0x8]\nMOVUPS xmmword ptr [RAX],XMM0\nMOV RAX,RCX\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p578
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n49 89 f5\n48 8b 07\n48 89 44 24 18\n4c 8b 7f 08\n48 8d 47 08\n48 89 44 24 08\n48 89 7c 24 10\n48 8b 5f 10\n4d 8d 65 01\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 39 eb\n73 65\n48 89 d8\n45 31 f6\n0f 1f 44 00 00\n48 89 c7\ne8 c8 00 00 00\n48 05 ff 00 00 00\n49 ff c6\n4c 39 e8\n72 ea\n48 8b 7c 24 18\n48 8d 6c 24 20\n48 89 ee\n4c 89 f2\ne8 a5 03 00 00\n0f 1f 44 00 00\n4c 89 ff\ne8 98 00 00 00\n44 0f b6 7d 00\n49 01 c7\n48 89 df\ne8 88 00 00 00\n48 89 c3\n48 81 c3 ff 00 00 00\n48 ff c5\n4c 39 eb\n72 d6\n4c 89 f9\n48 89 de\n4c 29 ee\n74 4a\n31 d2\n48 89 f0\n49 f7 f4\n48 89 d7\n48 29 fb\n31 d2\n48 89 c8\n49 f7 f4\n49 89 d7\n48 ff cf\n48 39 d9\n48 89 fb\n0f 87 63 ff ff ff\n31 d2\n48 89 c8\n49 f7 f4\n48 8b 4c 24 10\n48 89 41 08\n31 d2\n48 89 f0\n49 f7 f4\n48 89 41 10\n4c 89 f9\neb 0b\n0f 57 c0\n48 8b 44 24 08\n0f 11 00\n48 89 c8\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p579
S'.text:0000000000404e70\n.text:0000000000404e71\n.text:0000000000404e73\n.text:0000000000404e75\n.text:0000000000404e77\n.text:0000000000404e79\n.text:0000000000404e7a\n.text:0000000000404e7e\n.text:0000000000404e81\n.text:0000000000404e84\n.text:0000000000404e89\n.text:0000000000404e8d\n.text:0000000000404e91\n.text:0000000000404e96\n.text:0000000000404e9b\n.text:0000000000404e9f\n.text:0000000000404ea3\n.text:0000000000404eb0\n.text:0000000000404eb3\n.text:0000000000404eb5\n.text:0000000000404eb8\n.text:0000000000404ebb\n.text:0000000000404ec0\n.text:0000000000404ec3\n.text:0000000000404ec8\n.text:0000000000404ece\n.text:0000000000404ed1\n.text:0000000000404ed4\n.text:0000000000404ed6\n.text:0000000000404edb\n.text:0000000000404ee0\n.text:0000000000404ee3\n.text:0000000000404ee6\n.text:0000000000404eeb\n.text:0000000000404ef0\n.text:0000000000404ef3\n.text:0000000000404ef8\n.text:0000000000404efd\n.text:0000000000404f00\n.text:0000000000404f03\n.text:0000000000404f08\n.text:0000000000404f0b\n.text:0000000000404f12\n.text:0000000000404f15\n.text:0000000000404f18\n.text:0000000000404f1a\n.text:0000000000404f1d\n.text:0000000000404f20\n.text:0000000000404f23\n.text:0000000000404f25\n.text:0000000000404f27\n.text:0000000000404f2a\n.text:0000000000404f2d\n.text:0000000000404f30\n.text:0000000000404f33\n.text:0000000000404f35\n.text:0000000000404f38\n.text:0000000000404f3b\n.text:0000000000404f3e\n.text:0000000000404f41\n.text:0000000000404f44\n.text:0000000000404f47\n.text:0000000000404f4d\n.text:0000000000404f4f\n.text:0000000000404f52\n.text:0000000000404f55\n.text:0000000000404f5a\n.text:0000000000404f5e\n.text:0000000000404f60\n.text:0000000000404f63\n.text:0000000000404f66\n.text:0000000000404f6a\n.text:0000000000404f6d\n.text:0000000000404f6f\n.text:0000000000404f72\n.text:0000000000404f77\n.text:0000000000404f7a\n.text:0000000000404f7d\n.text:0000000000404f81\n.text:0000000000404f82\n.text:0000000000404f84\n.text:0000000000404f86\n.text:0000000000404f88\n.text:0000000000404f8a\n.text:0000000000404f8b\n'
p580
tp581
sS'emit_ancillary_info'
p582
(S'\n__stdcall emit_ancillary_info()\n'
p583
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x00406130;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("mktemp",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "mktemp";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,"mktemp",uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/","mktemp");\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x4071e9;\u000a  if (__s2 == "mktemp") {\u000a    uVar3 = 0x4068e5;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p584
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x406130\nMOV ESI,0x4068c9\nNOP\nMOV EDI,0x4066f6\nCALL 0x00401770\nTEST EAX,EAX\nJZ 0x00401beb\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00401bd0\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x4066f6\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x406928\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40671d\nMOV ECX,0x40693f\nXOR EAX,EAX\nCALL 0x00401840\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00401830\nTEST RAX,RAX\nJZ 0x00401c74\nMOV ESI,0x406966\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x00401560\nTEST EAX,EAX\nJZ 0x00401c74\nXOR EDI,EDI\nMOV ESI,0x40696a\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x4066f6\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401840\nXOR EDI,EDI\nMOV ESI,0x4069af\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,RAX\nMOV R14D,0x4066f6\nMOV EDI,0x1\nMOV EDX,0x40693f\nMOV ECX,0x4066f6\nXOR EAX,EAX\nCALL 0x00401840\nXOR EDI,EDI\nMOV ESI,0x4069ce\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x4068e5\nMOV ECX,0x4071e9\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401840\n'
p585
S'41 56\n53\n50\nbb 30 61 40 00\nbe c9 68 40 00\n66 90\nbf f6 66 40 00\ne8 96 fb ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb f6 66 40 00\n48 0f 45 d8\n31 ff\nbe 28 69 40 00\nba 05 00 00 00\ne8 24 fa ff ff\n48 89 c6\nbf 01 00 00 00\nba 1d 67 40 00\nb9 3f 69 40 00\n31 c0\ne8 1b fc ff ff\nbf 05 00 00 00\n31 f6\ne8 ff fb ff ff\n48 85 c0\n74 3e\nbe 66 69 40 00\nba 03 00 00 00\n48 89 c7\ne8 18 f9 ff ff\n85 c0\n74 28\n31 ff\nbe 6a 69 40 00\nba 05 00 00 00\ne8 d3 f9 ff ff\n48 89 c1\nbf 01 00 00 00\nba f6 66 40 00\n31 c0\n48 89 ce\ne8 cc fb ff ff\n31 ff\nbe af 69 40 00\nba 05 00 00 00\ne8 ab f9 ff ff\n48 89 c6\n41 be f6 66 40 00\nbf 01 00 00 00\nba 3f 69 40 00\nb9 f6 66 40 00\n31 c0\ne8 9c fb ff ff\n31 ff\nbe ce 69 40 00\nba 05 00 00 00\ne8 7b f9 ff ff\n48 89 c2\n4c 39 f3\nb8 e5 68 40 00\nb9 e9 71 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 5e fb ff ff\n'
p586
S'.text:0000000000401bc0\n.text:0000000000401bc2\n.text:0000000000401bc3\n.text:0000000000401bc4\n.text:0000000000401bc9\n.text:0000000000401bce\n.text:0000000000401bd0\n.text:0000000000401bd5\n.text:0000000000401bda\n.text:0000000000401bdc\n.text:0000000000401bde\n.text:0000000000401be2\n.text:0000000000401be6\n.text:0000000000401be9\n.text:0000000000401beb\n.text:0000000000401bef\n.text:0000000000401bf2\n.text:0000000000401bf7\n.text:0000000000401bfb\n.text:0000000000401bfd\n.text:0000000000401c02\n.text:0000000000401c07\n.text:0000000000401c0c\n.text:0000000000401c0f\n.text:0000000000401c14\n.text:0000000000401c19\n.text:0000000000401c1e\n.text:0000000000401c20\n.text:0000000000401c25\n.text:0000000000401c2a\n.text:0000000000401c2c\n.text:0000000000401c31\n.text:0000000000401c34\n.text:0000000000401c36\n.text:0000000000401c3b\n.text:0000000000401c40\n.text:0000000000401c43\n.text:0000000000401c48\n.text:0000000000401c4a\n.text:0000000000401c4c\n.text:0000000000401c4e\n.text:0000000000401c53\n.text:0000000000401c58\n.text:0000000000401c5d\n.text:0000000000401c60\n.text:0000000000401c65\n.text:0000000000401c6a\n.text:0000000000401c6c\n.text:0000000000401c6f\n.text:0000000000401c74\n.text:0000000000401c76\n.text:0000000000401c7b\n.text:0000000000401c80\n.text:0000000000401c85\n.text:0000000000401c88\n.text:0000000000401c8e\n.text:0000000000401c93\n.text:0000000000401c98\n.text:0000000000401c9d\n.text:0000000000401c9f\n.text:0000000000401ca4\n.text:0000000000401ca6\n.text:0000000000401cab\n.text:0000000000401cb0\n.text:0000000000401cb5\n.text:0000000000401cb8\n.text:0000000000401cbb\n.text:0000000000401cc0\n.text:0000000000401cc5\n.text:0000000000401cc9\n.text:0000000000401cce\n.text:0000000000401cd0\n.text:0000000000401cd3\n.text:0000000000401cd6\n.text:0000000000401cda\n.text:0000000000401cdb\n.text:0000000000401cdd\n'
p587
tp588
sS'version_etc_va'
p589
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p590
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p591
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x004044f0\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x004044fc\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00404511\nINC R9\nCMP R9,0xa\nJC 0x004044d0\nMOV R8,RSP\nCALL 0x00404130\nADD RSP,0x58\nRET\n'
p592
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p593
S'.text:00000000004044c0\n.text:00000000004044c4\n.text:00000000004044c7\n.text:00000000004044d0\n.text:00000000004044d3\n.text:00000000004044d7\n.text:00000000004044d9\n.text:00000000004044dc\n.text:00000000004044e0\n.text:00000000004044e4\n.text:00000000004044e7\n.text:00000000004044f0\n.text:00000000004044f4\n.text:00000000004044f8\n.text:00000000004044fc\n.text:00000000004044ff\n.text:0000000000404503\n.text:0000000000404506\n.text:0000000000404508\n.text:000000000040450b\n.text:000000000040450f\n.text:0000000000404511\n.text:0000000000404514\n.text:0000000000404519\n.text:000000000040451d\n'
p594
tp595
sS'xzalloc'
p596
(S'\n__stdcall xzalloc(size_t s)\n'
p597
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p598
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00404650\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x004016e0\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p599
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 84 cf ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p600
S'.text:0000000000404740\n.text:0000000000404742\n.text:0000000000404743\n.text:0000000000404744\n.text:0000000000404747\n.text:000000000040474c\n.text:000000000040474f\n.text:0000000000404751\n.text:0000000000404754\n.text:0000000000404757\n.text:000000000040475c\n.text:000000000040475f\n.text:0000000000404763\n.text:0000000000404764\n.text:0000000000404766\n'
p601
tp602
sS'isaac_seed'
p603
(S'\n__stdcall isaac_seed(isaac_state * s)\n'
p604
V\u000avoid isaac_seed(isaac_state *s)\u000a\u000a{\u000a  isaac_word iVar1;\u000a  isaac_word iVar2;\u000a  isaac_word iVar3;\u000a  isaac_word iVar4;\u000a  isaac_word iVar5;\u000a  isaac_word iVar6;\u000a  long lVar7;\u000a  isaac_word a;\u000a  ulong uVar8;\u000a  ulong uVar9;\u000a  long lVar10;\u000a  ulong uVar11;\u000a  isaac_word a_00;\u000a  ulong uVar12;\u000a  ulong uVar13;\u000a  long lVar14;\u000a  ulong uVar15;\u000a  long lVar16;\u000a  ulong uVar17;\u000a  isaac_word a_01;\u000a  \u000a  uVar9 = 0x647c4677a2884b7c;\u000a  uVar17 = 0xb9f8b322c73ac862;\u000a  uVar15 = 0x8c0ea5053d4712a0;\u000a  uVar8 = 0xb29b2e824a595524;\u000a  uVar13 = 0x82f053db8355e0ce;\u000a  a = 0x48fe4a0fa5a09315;\u000a  iVar5 = 0xae985bf2cbfc89ed;\u000a  a_00 = 0x98f5704f6c44c0ab;\u000a  lVar7 = 0;\u000a  do {\u000a    a_01 = s->m[lVar7 + 1];\u000a    iVar1 = s->m[lVar7 + 2];\u000a    iVar2 = s->m[lVar7 + 3];\u000a    lVar14 = uVar13 + s->m[lVar7 + 4];\u000a    iVar3 = s->m[lVar7 + 5];\u000a    iVar4 = s->m[lVar7 + 6];\u000a    a_00 = a_00 + s->m[lVar7 + 7];\u000a    lVar10 = (uVar9 + s->m[lVar7]) - lVar14;\u000a    iVar6 = just(a_00);\u000a    uVar13 = iVar6 >> 9 ^ a + iVar3;\u000a    a_01 = (uVar17 + a_01) - uVar13;\u000a    uVar11 = lVar10 * 0x200 ^ iVar5 + iVar4;\u000a    lVar16 = (uVar15 + iVar1) - uVar11;\u000a    iVar5 = just(a_01);\u000a    uVar12 = a_00 + lVar10 ^ iVar5 >> 0x17;\u000a    a = (uVar8 + iVar2) - uVar12;\u000a    uVar9 = lVar16 * 0x8000 ^ a_01 + lVar10;\u000a    lVar14 = lVar14 - uVar9;\u000a    iVar5 = just(a);\u000a    uVar17 = iVar5 >> 0xe ^ a_01 + lVar16;\u000a    a_01 = uVar13 - uVar17;\u000a    uVar15 = lVar14 * 0x100000 ^ a + lVar16;\u000a    lVar10 = uVar11 - uVar15;\u000a    iVar5 = just(a_01);\u000a    uVar8 = iVar5 >> 0x11 ^ a + lVar14;\u000a    a = a_01 + lVar10;\u000a    a_00 = uVar12 - uVar8;\u000a    uVar13 = lVar10 * 0x4000 ^ lVar14 + a_01;\u000a    iVar5 = lVar10 + a_00;\u000a    s->m[lVar7] = uVar9;\u000a    s->m[lVar7 + 1] = uVar17;\u000a    s->m[lVar7 + 2] = uVar15;\u000a    s->m[lVar7 + 3] = uVar8;\u000a    s->m[lVar7 + 4] = uVar13;\u000a    s->m[lVar7 + 5] = a;\u000a    s->m[lVar7 + 6] = iVar5;\u000a    s->m[lVar7 + 7] = a_00;\u000a    lVar7 = lVar7 + 8;\u000a  } while (lVar7 < 0x100);\u000a  lVar7 = 0;\u000a  do {\u000a    a_01 = s->m[lVar7 + 1];\u000a    iVar1 = s->m[lVar7 + 2];\u000a    iVar2 = s->m[lVar7 + 3];\u000a    lVar14 = uVar13 + s->m[lVar7 + 4];\u000a    iVar3 = s->m[lVar7 + 5];\u000a    iVar4 = s->m[lVar7 + 6];\u000a    a_00 = a_00 + s->m[lVar7 + 7];\u000a    lVar10 = (uVar9 + s->m[lVar7]) - lVar14;\u000a    iVar6 = just(a_00);\u000a    uVar13 = iVar6 >> 9 ^ a + iVar3;\u000a    a_01 = (uVar17 + a_01) - uVar13;\u000a    uVar12 = lVar10 * 0x200 ^ iVar5 + iVar4;\u000a    lVar16 = (uVar15 + iVar1) - uVar12;\u000a    iVar5 = just(a_01);\u000a    uVar11 = iVar5 >> 0x17 ^ a_00 + lVar10;\u000a    a = (uVar8 + iVar2) - uVar11;\u000a    uVar9 = lVar16 * 0x8000 ^ a_01 + lVar10;\u000a    lVar14 = lVar14 - uVar9;\u000a    iVar5 = just(a);\u000a    uVar17 = a_01 + lVar16 ^ iVar5 >> 0xe;\u000a    a_01 = uVar13 - uVar17;\u000a    uVar15 = lVar14 * 0x100000 ^ a + lVar16;\u000a    lVar10 = uVar12 - uVar15;\u000a    iVar5 = just(a_01);\u000a    uVar8 = a + lVar14 ^ iVar5 >> 0x11;\u000a    a = a_01 + lVar10;\u000a    a_00 = uVar11 - uVar8;\u000a    uVar13 = lVar14 + a_01 ^ lVar10 * 0x4000;\u000a    iVar5 = lVar10 + a_00;\u000a    s->m[lVar7] = uVar9;\u000a    s->m[lVar7 + 1] = uVar17;\u000a    s->m[lVar7 + 2] = uVar15;\u000a    s->m[lVar7 + 3] = uVar8;\u000a    s->m[lVar7 + 4] = uVar13;\u000a    s->m[lVar7 + 5] = a;\u000a    s->m[lVar7 + 6] = iVar5;\u000a    s->m[lVar7 + 7] = a_00;\u000a    lVar7 = lVar7 + 8;\u000a  } while (lVar7 < 0x100);\u000a  *(undefined4 *)&s->a = 0;\u000a  *(undefined4 *)((long)&s->a + 4) = 0;\u000a  *(undefined4 *)&s->b = 0;\u000a  *(undefined4 *)((long)&s->b + 4) = 0;\u000a  s->c = 0;\u000a  return;\u000a}\u000a\u000a
p605
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,0x647c4677a2884b7c\nMOV R15,-0x46074cdd38c5379e\nMOV R14,-0x73f15afac2b8ed60\nMOV RBX,-0x4d64d17db5a6aadc\nMOV R13,-0x7d0fac247caa1f32\nMOV RDX,0x48fe4a0fa5a09315\nMOV RAX,-0x5167a40d34037613\nMOV R12,-0x670a8fb093bb3f55\nXOR ECX,ECX\nMOV qword ptr [RSP + 0x28],RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV qword ptr [RSP + 0x20],RCX\nADD RBP,qword ptr [RDI + RCX*0x8]\nADD R15,qword ptr [RDI + RCX*0x8 + 0x8]\nADD R14,qword ptr [RDI + RCX*0x8 + 0x10]\nADD RBX,qword ptr [RDI + RCX*0x8 + 0x18]\nADD R13,qword ptr [RDI + RCX*0x8 + 0x20]\nADD RDX,qword ptr [RDI + RCX*0x8 + 0x28]\nMOV qword ptr [RSP],RDX\nADD RAX,qword ptr [RDI + RCX*0x8 + 0x30]\nMOV qword ptr [RSP + 0x8],RAX\nADD R12,qword ptr [RDI + RCX*0x8 + 0x38]\nSUB RBP,R13\nMOV RDI,R12\nCALL 0x00405860\nSHR RAX,0x9\nXOR RAX,qword ptr [RSP]\nMOV qword ptr [RSP],RAX\nADD R12,RBP\nSUB R15,RAX\nLEA RAX,[R15 + RBP*0x1]\nMOV qword ptr [RSP + 0x18],RAX\nSHL RBP,0x9\nXOR RBP,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x8],RBP\nSUB R14,RBP\nMOV RDI,R15\nCALL 0x00405860\nSHR RAX,0x17\nXOR R12,RAX\nADD R15,R14\nMOV qword ptr [RSP + 0x30],R15\nSUB RBX,R12\nLEA RAX,[RBX + R14*0x1]\nMOV qword ptr [RSP + 0x10],RAX\nSHL R14,0xf\nMOV RBP,R14\nXOR RBP,qword ptr [RSP + 0x18]\nSUB R13,RBP\nMOV RDI,RBX\nCALL 0x00405860\nMOV R15,RAX\nSHR R15,0xe\nXOR R15,qword ptr [RSP + 0x30]\nADD RBX,R13\nMOV qword ptr [RSP + 0x18],RBX\nMOV RDI,qword ptr [RSP]\nSUB RDI,R15\nMOV qword ptr [RSP],RDI\nMOV R14,R13\nSHL R14,0x14\nXOR R14,qword ptr [RSP + 0x10]\nADD R13,RDI\nMOV qword ptr [RSP + 0x10],R13\nMOV R13,qword ptr [RSP + 0x8]\nSUB R13,R14\nCALL 0x00405860\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RDI,qword ptr [RSP + 0x28]\nMOV RBX,RAX\nSHR RBX,0x11\nXOR RBX,qword ptr [RSP + 0x18]\nMOV RDX,qword ptr [RSP]\nMOV RAX,R13\nADD RDX,RAX\nSUB R12,RBX\nSHL R13,0xe\nXOR R13,qword ptr [RSP + 0x10]\nADD RAX,R12\nMOV qword ptr [RDI + RCX*0x8],RBP\nMOV qword ptr [RDI + RCX*0x8 + 0x8],R15\nMOV qword ptr [RDI + RCX*0x8 + 0x10],R14\nMOV qword ptr [RDI + RCX*0x8 + 0x18],RBX\nMOV qword ptr [RDI + RCX*0x8 + 0x20],R13\nMOV qword ptr [RDI + RCX*0x8 + 0x28],RDX\nMOV qword ptr [RDI + RCX*0x8 + 0x30],RAX\nMOV qword ptr [RDI + RCX*0x8 + 0x38],R12\nADD RCX,0x8\nCMP RCX,0x100\nJL 0x004058e0\nXOR ECX,ECX\nNOP\nMOV qword ptr [RSP + 0x20],RCX\nADD RBP,qword ptr [RDI + RCX*0x8]\nADD R15,qword ptr [RDI + RCX*0x8 + 0x8]\nADD R14,qword ptr [RDI + RCX*0x8 + 0x10]\nADD RBX,qword ptr [RDI + RCX*0x8 + 0x18]\nADD R13,qword ptr [RDI + RCX*0x8 + 0x20]\nADD RDX,qword ptr [RDI + RCX*0x8 + 0x28]\nMOV qword ptr [RSP],RDX\nADD RAX,qword ptr [RDI + RCX*0x8 + 0x30]\nMOV qword ptr [RSP + 0x8],RAX\nADD R12,qword ptr [RDI + RCX*0x8 + 0x38]\nSUB RBP,R13\nMOV RDI,R12\nCALL 0x00405860\nSHR RAX,0x9\nXOR RAX,qword ptr [RSP]\nMOV qword ptr [RSP],RAX\nADD R12,RBP\nSUB R15,RAX\nLEA RAX,[R15 + RBP*0x1]\nMOV qword ptr [RSP + 0x18],RAX\nSHL RBP,0x9\nXOR RBP,qword ptr [RSP + 0x8]\nSUB R14,RBP\nMOV RDI,R15\nCALL 0x00405860\nSHR RAX,0x17\nXOR RAX,R12\nADD R15,R14\nSUB RBX,RAX\nMOV R12,RAX\nLEA RAX,[RBX + R14*0x1]\nMOV qword ptr [RSP + 0x10],RAX\nSHL R14,0xf\nXOR R14,qword ptr [RSP + 0x18]\nMOV qword ptr [RSP + 0x8],R14\nSUB R13,R14\nMOV RDI,RBX\nCALL 0x00405860\nSHR RAX,0xe\nXOR R15,RAX\nADD RBX,R13\nMOV RDI,qword ptr [RSP]\nSUB RDI,R15\nMOV qword ptr [RSP],RDI\nMOV R14,R13\nSHL R14,0x14\nXOR R14,qword ptr [RSP + 0x10]\nADD R13,RDI\nSUB RBP,R14\nCALL 0x00405860\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RDI,qword ptr [RSP + 0x28]\nSHR RAX,0x11\nXOR RBX,RAX\nMOV RDX,qword ptr [RSP]\nADD RDX,RBP\nSUB R12,RBX\nMOV RAX,RBP\nSHL RAX,0xe\nXOR R13,RAX\nADD RBP,R12\nMOV RSI,qword ptr [RSP + 0x8]\nMOV qword ptr [RDI + RCX*0x8],RSI\nMOV qword ptr [RDI + RCX*0x8 + 0x8],R15\nMOV qword ptr [RDI + RCX*0x8 + 0x10],R14\nMOV qword ptr [RDI + RCX*0x8 + 0x18],RBX\nMOV qword ptr [RDI + RCX*0x8 + 0x20],R13\nMOV qword ptr [RDI + RCX*0x8 + 0x28],RDX\nMOV qword ptr [RDI + RCX*0x8 + 0x30],RBP\nMOV qword ptr [RDI + RCX*0x8 + 0x38],R12\nADD RCX,0x8\nCMP RCX,0x100\nMOV RAX,RBP\nMOV RBP,RSI\nJL 0x00405a30\nXORPS XMM0,XMM0\nMOVUPS xmmword ptr [0x800 + RDI],XMM0\nMOV qword ptr [0x810 + RDI],0x0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p606
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 bd 7c 4b 88 a2 77 46 7c 64\n49 bf 62 c8 3a c7 22 b3 f8 b9\n49 be a0 12 47 3d 05 a5 0e 8c\n48 bb 24 55 59 4a 82 2e 9b b2\n49 bd ce e0 55 83 db 53 f0 82\n48 ba 15 93 a0 a5 0f 4a fe 48\n48 b8 ed 89 fc cb f2 5b 98 ae\n49 bc ab c0 44 6c 4f 70 f5 98\n31 c9\n48 89 7c 24 28\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 4c 24 20\n48 03 2c cf\n4c 03 7c cf 08\n4c 03 74 cf 10\n48 03 5c cf 18\n4c 03 6c cf 20\n48 03 54 cf 28\n48 89 14 24\n48 03 44 cf 30\n48 89 44 24 08\n4c 03 64 cf 38\n4c 29 ed\n4c 89 e7\ne8 40 ff ff ff\n48 c1 e8 09\n48 33 04 24\n48 89 04 24\n49 01 ec\n49 29 c7\n49 8d 04 2f\n48 89 44 24 18\n48 c1 e5 09\n48 33 6c 24 08\n48 89 6c 24 08\n49 29 ee\n4c 89 ff\ne8 0c ff ff ff\n48 c1 e8 17\n49 31 c4\n4d 01 f7\n4c 89 7c 24 30\n4c 29 e3\n4a 8d 04 33\n48 89 44 24 10\n49 c1 e6 0f\n4c 89 f5\n48 33 6c 24 18\n49 29 ed\n48 89 df\ne8 da fe ff ff\n49 89 c7\n49 c1 ef 0e\n4c 33 7c 24 30\n4c 01 eb\n48 89 5c 24 18\n48 8b 3c 24\n4c 29 ff\n48 89 3c 24\n4d 89 ee\n49 c1 e6 14\n4c 33 74 24 10\n49 01 fd\n4c 89 6c 24 10\n4c 8b 6c 24 08\n4d 29 f5\ne8 9a fe ff ff\n48 8b 4c 24 20\n48 8b 7c 24 28\n48 89 c3\n48 c1 eb 11\n48 33 5c 24 18\n48 8b 14 24\n4c 89 e8\n48 01 c2\n49 29 dc\n49 c1 e5 0e\n4c 33 6c 24 10\n4c 01 e0\n48 89 2c cf\n4c 89 7c cf 08\n4c 89 74 cf 10\n48 89 5c cf 18\n4c 89 6c cf 20\n48 89 54 cf 28\n48 89 44 cf 30\n4c 89 64 cf 38\n48 83 c1 08\n48 81 f9 00 01 00 00\n0f 8c b3 fe ff ff\n31 c9\n90\n48 89 4c 24 20\n48 03 2c cf\n4c 03 7c cf 08\n4c 03 74 cf 10\n48 03 5c cf 18\n4c 03 6c cf 20\n48 03 54 cf 28\n48 89 14 24\n48 03 44 cf 30\n48 89 44 24 08\n4c 03 64 cf 38\n4c 29 ed\n4c 89 e7\ne8 f0 fd ff ff\n48 c1 e8 09\n48 33 04 24\n48 89 04 24\n49 01 ec\n49 29 c7\n49 8d 04 2f\n48 89 44 24 18\n48 c1 e5 09\n48 33 6c 24 08\n49 29 ee\n4c 89 ff\ne8 c1 fd ff ff\n48 c1 e8 17\n4c 31 e0\n4d 01 f7\n48 29 c3\n49 89 c4\n4a 8d 04 33\n48 89 44 24 10\n49 c1 e6 0f\n4c 33 74 24 18\n4c 89 74 24 08\n4d 29 f5\n48 89 df\ne8 8f fd ff ff\n48 c1 e8 0e\n49 31 c7\n4c 01 eb\n48 8b 3c 24\n4c 29 ff\n48 89 3c 24\n4d 89 ee\n49 c1 e6 14\n4c 33 74 24 10\n49 01 fd\n4c 29 f5\ne8 63 fd ff ff\n48 8b 4c 24 20\n48 8b 7c 24 28\n48 c1 e8 11\n48 31 c3\n48 8b 14 24\n48 01 ea\n49 29 dc\n48 89 e8\n48 c1 e0 0e\n49 31 c5\n4c 01 e5\n48 8b 74 24 08\n48 89 34 cf\n4c 89 7c cf 08\n4c 89 74 cf 10\n48 89 5c cf 18\n4c 89 6c cf 20\n48 89 54 cf 28\n48 89 6c cf 30\n4c 89 64 cf 38\n48 83 c1 08\n48 81 f9 00 01 00 00\n48 89 e8\n48 89 f5\n0f 8c c8 fe ff ff\n0f 57 c0\n0f 11 87 00 08 00 00\n48 c7 87 10 08 00 00 00 00 00 00\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p607
S'.text:0000000000405870\n.text:0000000000405871\n.text:0000000000405873\n.text:0000000000405875\n.text:0000000000405877\n.text:0000000000405879\n.text:000000000040587a\n.text:000000000040587e\n.text:0000000000405888\n.text:0000000000405892\n.text:000000000040589c\n.text:00000000004058a6\n.text:00000000004058b0\n.text:00000000004058ba\n.text:00000000004058c4\n.text:00000000004058ce\n.text:00000000004058d0\n.text:00000000004058d5\n.text:00000000004058e0\n.text:00000000004058e5\n.text:00000000004058e9\n.text:00000000004058ee\n.text:00000000004058f3\n.text:00000000004058f8\n.text:00000000004058fd\n.text:0000000000405902\n.text:0000000000405906\n.text:000000000040590b\n.text:0000000000405910\n.text:0000000000405915\n.text:0000000000405918\n.text:000000000040591b\n.text:0000000000405920\n.text:0000000000405924\n.text:0000000000405928\n.text:000000000040592c\n.text:000000000040592f\n.text:0000000000405932\n.text:0000000000405936\n.text:000000000040593b\n.text:000000000040593f\n.text:0000000000405944\n.text:0000000000405949\n.text:000000000040594c\n.text:000000000040594f\n.text:0000000000405954\n.text:0000000000405958\n.text:000000000040595b\n.text:000000000040595e\n.text:0000000000405963\n.text:0000000000405966\n.text:000000000040596a\n.text:000000000040596f\n.text:0000000000405973\n.text:0000000000405976\n.text:000000000040597b\n.text:000000000040597e\n.text:0000000000405981\n.text:0000000000405986\n.text:0000000000405989\n.text:000000000040598d\n.text:0000000000405992\n.text:0000000000405995\n.text:000000000040599a\n.text:000000000040599e\n.text:00000000004059a1\n.text:00000000004059a5\n.text:00000000004059a8\n.text:00000000004059ac\n.text:00000000004059b1\n.text:00000000004059b4\n.text:00000000004059b9\n.text:00000000004059be\n.text:00000000004059c1\n.text:00000000004059c6\n.text:00000000004059cb\n.text:00000000004059d0\n.text:00000000004059d3\n.text:00000000004059d7\n.text:00000000004059dc\n.text:00000000004059e0\n.text:00000000004059e3\n.text:00000000004059e6\n.text:00000000004059e9\n.text:00000000004059ed\n.text:00000000004059f2\n.text:00000000004059f5\n.text:00000000004059f9\n.text:00000000004059fe\n.text:0000000000405a03\n.text:0000000000405a08\n.text:0000000000405a0d\n.text:0000000000405a12\n.text:0000000000405a17\n.text:0000000000405a1c\n.text:0000000000405a20\n.text:0000000000405a27\n.text:0000000000405a2d\n.text:0000000000405a2f\n.text:0000000000405a30\n.text:0000000000405a35\n.text:0000000000405a39\n.text:0000000000405a3e\n.text:0000000000405a43\n.text:0000000000405a48\n.text:0000000000405a4d\n.text:0000000000405a52\n.text:0000000000405a56\n.text:0000000000405a5b\n.text:0000000000405a60\n.text:0000000000405a65\n.text:0000000000405a68\n.text:0000000000405a6b\n.text:0000000000405a70\n.text:0000000000405a74\n.text:0000000000405a78\n.text:0000000000405a7c\n.text:0000000000405a7f\n.text:0000000000405a82\n.text:0000000000405a86\n.text:0000000000405a8b\n.text:0000000000405a8f\n.text:0000000000405a94\n.text:0000000000405a97\n.text:0000000000405a9a\n.text:0000000000405a9f\n.text:0000000000405aa3\n.text:0000000000405aa6\n.text:0000000000405aa9\n.text:0000000000405aac\n.text:0000000000405aaf\n.text:0000000000405ab3\n.text:0000000000405ab8\n.text:0000000000405abc\n.text:0000000000405ac1\n.text:0000000000405ac6\n.text:0000000000405ac9\n.text:0000000000405acc\n.text:0000000000405ad1\n.text:0000000000405ad5\n.text:0000000000405ad8\n.text:0000000000405adb\n.text:0000000000405adf\n.text:0000000000405ae2\n.text:0000000000405ae6\n.text:0000000000405ae9\n.text:0000000000405aed\n.text:0000000000405af2\n.text:0000000000405af5\n.text:0000000000405af8\n.text:0000000000405afd\n.text:0000000000405b02\n.text:0000000000405b07\n.text:0000000000405b0b\n.text:0000000000405b0e\n.text:0000000000405b12\n.text:0000000000405b15\n.text:0000000000405b18\n.text:0000000000405b1b\n.text:0000000000405b1f\n.text:0000000000405b22\n.text:0000000000405b25\n.text:0000000000405b2a\n.text:0000000000405b2e\n.text:0000000000405b33\n.text:0000000000405b38\n.text:0000000000405b3d\n.text:0000000000405b42\n.text:0000000000405b47\n.text:0000000000405b4c\n.text:0000000000405b51\n.text:0000000000405b55\n.text:0000000000405b5c\n.text:0000000000405b5f\n.text:0000000000405b62\n.text:0000000000405b68\n.text:0000000000405b6b\n.text:0000000000405b72\n.text:0000000000405b7d\n.text:0000000000405b81\n.text:0000000000405b82\n.text:0000000000405b84\n.text:0000000000405b86\n.text:0000000000405b88\n.text:0000000000405b8a\n.text:0000000000405b8b\n'
p608
tp609
sS'just'
p610
(S'\n__stdcall just(isaac_word a)\n'
p611
V\u000aisaac_word just(isaac_word a)\u000a\u000a{\u000a  return a;\u000a}\u000a\u000a
p612
S'MOV RAX,RDI\nRET\n'
p613
S'48 89 f8\nc3\n'
p614
S'.text:0000000000405860\n.text:0000000000405863\n'
p615
tp616
sS'gettext_quote'
p617
(S'\n__stdcall gettext_quote(char * msgid)\n'
p618
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_00406fde;\u000a        pcVar2 = &DAT_00406fe2;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p619
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00401630\nCMP RAX,RBX\nJNZ 0x00403b88\nCALL 0x00404af0\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x00403b90\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00403b38\nCMP byte ptr [RBX],0x60\nMOV ECX,0x406fce\nMOV EAX,0x406fd2\nJMP 0x00403b84\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x00403b90\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00403b76\nCMP byte ptr [RBX],0x60\nMOV ECX,0x406fde\nMOV EAX,0x406fe2\nJMP 0x00403b84\nCMP R14D,0x9\nMOV ECX,0x407051\nMOV EAX,0x406fc6\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p620
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 47 db ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 f9 0f 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 ce 6f 40 00\nb8 d2 6f 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 de 6f 40 00\nb8 e2 6f 40 00\neb 0e\n41 83 fe 09\nb9 51 70 40 00\nb8 c6 6f 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p621
S'.text:0000000000403ad0\n.text:0000000000403ad1\n.text:0000000000403ad3\n.text:0000000000403ad4\n.text:0000000000403ad7\n.text:0000000000403ada\n.text:0000000000403adc\n.text:0000000000403ae1\n.text:0000000000403ae4\n.text:0000000000403ae9\n.text:0000000000403aec\n.text:0000000000403af2\n.text:0000000000403af7\n.text:0000000000403afa\n.text:0000000000403aff\n.text:0000000000403b04\n.text:0000000000403b09\n.text:0000000000403b0f\n.text:0000000000403b15\n.text:0000000000403b18\n.text:0000000000403b1a\n.text:0000000000403b1c\n.text:0000000000403b21\n.text:0000000000403b25\n.text:0000000000403b27\n.text:0000000000403b29\n.text:0000000000403b2c\n.text:0000000000403b31\n.text:0000000000403b36\n.text:0000000000403b38\n.text:0000000000403b3d\n.text:0000000000403b42\n.text:0000000000403b47\n.text:0000000000403b4d\n.text:0000000000403b53\n.text:0000000000403b56\n.text:0000000000403b58\n.text:0000000000403b5a\n.text:0000000000403b5f\n.text:0000000000403b63\n.text:0000000000403b65\n.text:0000000000403b67\n.text:0000000000403b6a\n.text:0000000000403b6f\n.text:0000000000403b74\n.text:0000000000403b76\n.text:0000000000403b7a\n.text:0000000000403b7f\n.text:0000000000403b84\n.text:0000000000403b88\n.text:0000000000403b89\n.text:0000000000403b8b\n.text:0000000000403b8c\n'
p622
tp623
sS'getppid'
p624
(S'\n__stdcall getppid()\n'
p625
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t getppid(void)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getppid_0060a1f0)();\u000a  return _Var1;\u000a}\u000a\u000a
p626
S'JMP qword ptr [0x0060a1f0]\n'
p627
S'ff 25 3a 89 20 00\n'
p628
S'.plt:00000000004018b0\n'
p629
tp630
sS'shift_left'
p631
(S'\n__stdcall shift_left(randint x)\n'
p632
V\u000arandint shift_left(randint x)\u000a\u000a{\u000a  return x << 8;\u000a}\u000a\u000a
p633
S'SHL RDI,0x8\nMOV RAX,RDI\nRET\n'
p634
S'48 c1 e7 08\n48 89 f8\nc3\n'
p635
S'.text:0000000000404f90\n.text:0000000000404f94\n.text:0000000000404f97\n'
p636
tp637
sS'fclose'
p638
(S'\n__stdcall fclose(FILE * __stream)\n'
p639
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_0060a0a0)();\u000a  return iVar1;\u000a}\u000a\u000a
p640
S'JMP qword ptr [0x0060a0a0]\n'
p641
S'ff 25 8a 8a 20 00\n'
p642
S'.plt:0000000000401610\n'
p643
tp644
sS'__ctype_get_mb_cur_max'
p645
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p646
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0060a0b8)();\u000a  return sVar1;\u000a}\u000a\u000a
p647
S'JMP qword ptr [0x0060a0b8]\n'
p648
S'ff 25 72 8a 20 00\n'
p649
S'.plt:0000000000401640\n'
p650
tp651
sS'lstat'
p652
(S'\n__stdcall lstat(char * __file, stat * __buf)\n'
p653
V\u000aint lstat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___lxstat_0060a0c8)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p654
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00401660\n'
p655
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 b0 b7 ff ff\n'
p656
S'.text:0000000000405ea0\n.text:0000000000405ea3\n.text:0000000000405ea6\n.text:0000000000405eab\n'
p657
tp658
sS'quotearg_n_style'
p659
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p660
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p661
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00403800\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x004035d0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p662
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p663
S'.text:00000000004037c0\n.text:00000000004037c1\n.text:00000000004037c3\n.text:00000000004037c4\n.text:00000000004037c8\n.text:00000000004037cb\n.text:00000000004037cd\n.text:00000000004037d2\n.text:00000000004037d5\n.text:00000000004037da\n.text:00000000004037e1\n.text:00000000004037e3\n.text:00000000004037e6\n.text:00000000004037e9\n.text:00000000004037ee\n.text:00000000004037f2\n.text:00000000004037f3\n.text:00000000004037f5\n.text:00000000004037f6\n'
p664
tp665
sS'quote_n'
p666
(S'\n__stdcall quote_n(char * arg)\n'
p667
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p668
S'MOV RDX,-0x1\nJMP 0x00403a90\n'
p669
S'48 c7 c2 ff ff ff ff\neb d7\n'
p670
S'.text:0000000000403ab0\n.text:0000000000403ab7\n'
p671
tp672
sS'quotearg_alloc'
p673
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p674
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p675
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x00403440\n'
p676
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p677
S'.text:0000000000403430\n.text:0000000000403433\n.text:0000000000403435\n.text:0000000000403438\n'
p678
tp679
sS'close_stdout_set_file_name'
p680
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p681
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p682
S'MOV qword ptr [0x0060a2f0],RDI\nRET\n'
p683
S'48 89 3d b9 7f 20 00\nc3\n'
p684
S'.text:0000000000402330\n.text:0000000000402337\n'
p685
tp686
sS'__libc_csu_init'
p687
(S'\n__stdcall __libc_csu_init()\n'
p688
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p689
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x609e08]\nPUSH RBP\nLEA RBP,[0x609e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004014d8\nTEST RBP,RBP\nJZ 0x00405e46\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00405e30\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p690
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 06 40 20 00\n55\n48 8d 2d 06 40 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 b7 b6 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p691
S'.text:0000000000405df0\n.text:0000000000405df2\n.text:0000000000405df4\n.text:0000000000405df7\n.text:0000000000405df9\n.text:0000000000405dfb\n.text:0000000000405e02\n.text:0000000000405e03\n.text:0000000000405e0a\n.text:0000000000405e0b\n.text:0000000000405e0e\n.text:0000000000405e11\n.text:0000000000405e14\n.text:0000000000405e18\n.text:0000000000405e1c\n.text:0000000000405e21\n.text:0000000000405e24\n.text:0000000000405e26\n.text:0000000000405e28\n.text:0000000000405e30\n.text:0000000000405e33\n.text:0000000000405e36\n.text:0000000000405e39\n.text:0000000000405e3d\n.text:0000000000405e41\n.text:0000000000405e44\n.text:0000000000405e46\n.text:0000000000405e4a\n.text:0000000000405e4b\n.text:0000000000405e4c\n.text:0000000000405e4e\n.text:0000000000405e50\n.text:0000000000405e52\n.text:0000000000405e54\n'
p692
tp693
sS'c_isdigit'
p694
(S'\n__stdcall c_isdigit()\n'
p695
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p696
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p697
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p698
S'.text:0000000000404a20\n.text:0000000000404a23\n.text:0000000000404a26\n.text:0000000000404a29\n'
p699
tp700
sS'usage'
p701
(S'\n__stdcall usage()\n'
p702
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,"Usage: %s [OPTION]... [TEMPLATE]\u005cn",5);\u000a    __printf_chk(1,uVar1,program_name,uVar1);\u000a    __s = (char *)dcgettext(0,\u000a                            "Create a temporary file or directory, safely, and print its name.\u005cnTEMPLATE must contain at least 3 consecutive \u005c'X\u005c's in last component.\u005cnIf TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "Files are created u+rw, and directories u+rwx, minus umask restrictions.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    fputs_unlocked(\u000a                   "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                   + 0xc9,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -d, --directory     create a directory, not a file\u005cn  -u, --dry-run       do not create anything; merely print a name (unsafe)\u005cn  -q, --quiet         suppress diagnostics about file/dir-creation failure\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "      --suffix=SUFF   append SUFF to TEMPLATE; SUFF must not contain a slash.\u005cn                        This option is implied if TEMPLATE does not end in X\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -p DIR, --tmpdir[=DIR]  interpret TEMPLATE relative to DIR; if DIR is not\u005cn                        specified, use $TMPDIR if set, else /tmp.  With\u005cn                        this option, TEMPLATE must not be an absolute name;\u005cn                        unlike with -t, TEMPLATE may contain slashes, but\u005cn                        mktemp creates only the final component\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -t                  interpret TEMPLATE as a single file name component,\u005cn                        relative to a directory: $TMPDIR, if set; else the\u005cn                        directory specified via -p; else /tmp [deprecated]\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p703
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x00401b72\nXOR EDI,EDI\nMOV ESI,0x4061a0\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nMOV RDX,qword ptr [0x0060a300]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401840\nXOR EDI,EDI\nMOV ESI,0x4061c2\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x406295\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nMOV RSI,qword ptr [0x0060a2a8]\nMOV EDI,0x4071e8\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x4062df\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x4063ab\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x406447\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x4065b2\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x406693\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nXOR EDI,EDI\nMOV ESI,0x4066c0\nMOV EDX,0x5\nCALL 0x00401630\nMOV RSI,qword ptr [0x0060a2a8]\nMOV RDI,RAX\nCALL 0x00401740\nCALL 0x00401bc0\nMOV EDI,EBX\nCALL 0x004018c0\nCALL 0x00401b80\nMOV EDI,EBX\nCALL 0x004018c0\n'
p704
S'53\n89 fb\n85 db\n0f 85 47 01 00 00\n31 ff\nbe a0 61 40 00\nba 05 00 00 00\ne8 f4 fb ff ff\n48 89 c1\n48 8b 15 ba 88 20 00\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 eb fd ff ff\n31 ff\nbe c2 61 40 00\nba 05 00 00 00\ne8 ca fb ff ff\n48 8b 35 3b 88 20 00\n48 89 c7\ne8 cb fc ff ff\n31 ff\nbe 95 62 40 00\nba 05 00 00 00\ne8 aa fb ff ff\n48 8b 35 1b 88 20 00\n48 89 c7\ne8 ab fc ff ff\n48 8b 35 0c 88 20 00\nbf e8 71 40 00\ne8 9a fc ff ff\n31 ff\nbe df 62 40 00\nba 05 00 00 00\ne8 79 fb ff ff\n48 8b 35 ea 87 20 00\n48 89 c7\ne8 7a fc ff ff\n31 ff\nbe ab 63 40 00\nba 05 00 00 00\ne8 59 fb ff ff\n48 8b 35 ca 87 20 00\n48 89 c7\ne8 5a fc ff ff\n31 ff\nbe 47 64 40 00\nba 05 00 00 00\ne8 39 fb ff ff\n48 8b 35 aa 87 20 00\n48 89 c7\ne8 3a fc ff ff\n31 ff\nbe b2 65 40 00\nba 05 00 00 00\ne8 19 fb ff ff\n48 8b 35 8a 87 20 00\n48 89 c7\ne8 1a fc ff ff\n31 ff\nbe 93 66 40 00\nba 05 00 00 00\ne8 f9 fa ff ff\n48 8b 35 6a 87 20 00\n48 89 c7\ne8 fa fb ff ff\n31 ff\nbe c0 66 40 00\nba 05 00 00 00\ne8 d9 fa ff ff\n48 8b 35 4a 87 20 00\n48 89 c7\ne8 da fb ff ff\ne8 55 00 00 00\n89 df\ne8 4e fd ff ff\ne8 09 00 00 00\n89 df\ne8 42 fd ff ff\n'
p705
S'.text:0000000000401a20\n.text:0000000000401a21\n.text:0000000000401a23\n.text:0000000000401a25\n.text:0000000000401a2b\n.text:0000000000401a2d\n.text:0000000000401a32\n.text:0000000000401a37\n.text:0000000000401a3c\n.text:0000000000401a3f\n.text:0000000000401a46\n.text:0000000000401a4b\n.text:0000000000401a4d\n.text:0000000000401a50\n.text:0000000000401a55\n.text:0000000000401a57\n.text:0000000000401a5c\n.text:0000000000401a61\n.text:0000000000401a66\n.text:0000000000401a6d\n.text:0000000000401a70\n.text:0000000000401a75\n.text:0000000000401a77\n.text:0000000000401a7c\n.text:0000000000401a81\n.text:0000000000401a86\n.text:0000000000401a8d\n.text:0000000000401a90\n.text:0000000000401a95\n.text:0000000000401a9c\n.text:0000000000401aa1\n.text:0000000000401aa6\n.text:0000000000401aa8\n.text:0000000000401aad\n.text:0000000000401ab2\n.text:0000000000401ab7\n.text:0000000000401abe\n.text:0000000000401ac1\n.text:0000000000401ac6\n.text:0000000000401ac8\n.text:0000000000401acd\n.text:0000000000401ad2\n.text:0000000000401ad7\n.text:0000000000401ade\n.text:0000000000401ae1\n.text:0000000000401ae6\n.text:0000000000401ae8\n.text:0000000000401aed\n.text:0000000000401af2\n.text:0000000000401af7\n.text:0000000000401afe\n.text:0000000000401b01\n.text:0000000000401b06\n.text:0000000000401b08\n.text:0000000000401b0d\n.text:0000000000401b12\n.text:0000000000401b17\n.text:0000000000401b1e\n.text:0000000000401b21\n.text:0000000000401b26\n.text:0000000000401b28\n.text:0000000000401b2d\n.text:0000000000401b32\n.text:0000000000401b37\n.text:0000000000401b3e\n.text:0000000000401b41\n.text:0000000000401b46\n.text:0000000000401b48\n.text:0000000000401b4d\n.text:0000000000401b52\n.text:0000000000401b57\n.text:0000000000401b5e\n.text:0000000000401b61\n.text:0000000000401b66\n.text:0000000000401b6b\n.text:0000000000401b6d\n.text:0000000000401b72\n.text:0000000000401b77\n.text:0000000000401b79\n'
p706
tp707
sS'quoting_options_from_style'
p708
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p709
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p710
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x0040384d\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x00401530\n'
p711
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 de dc ff ff\n'
p712
S'.text:0000000000403800\n.text:0000000000403804\n.text:0000000000403807\n.text:000000000040380c\n.text:0000000000403811\n.text:0000000000403815\n.text:000000000040381d\n.text:0000000000403820\n.text:0000000000403822\n.text:0000000000403824\n.text:0000000000403828\n.text:000000000040382b\n.text:000000000040382f\n.text:0000000000403834\n.text:0000000000403839\n.text:000000000040383d\n.text:0000000000403841\n.text:0000000000403845\n.text:0000000000403848\n.text:000000000040384c\n.text:000000000040384d\n'
p713
tp714
sS'strcpy'
p715
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p716
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_0060a058)();\u000a  return pcVar1;\u000a}\u000a\u000a
p717
S'JMP qword ptr [0x0060a058]\n'
p718
S'ff 25 d2 8a 20 00\n'
p719
S'.plt:0000000000401580\n'
p720
tp721
sS'c_isgraph'
p722
(S'\n__stdcall c_isgraph()\n'
p723
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p724
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p725
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p726
S'.text:0000000000404a30\n.text:0000000000404a33\n.text:0000000000404a36\n.text:0000000000404a39\n'
p727
tp728
sS'quotearg_buffer_restyled'
p729
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p730
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_0040287c_caseD_7;\u000a  case 2:\u000a    goto switchD_0040287c_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_0040287c_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_0040287c_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_0040287c_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_0040287c_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_0040287c_caseD_7;\u000aswitchD_0040287c_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_0040287c_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_0040287c_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_00403340;\u000aLAB_00402a60:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_00403349:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_00403358:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_00402a6b:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_00402aaf:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_00402aaf;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_00403358;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_00403285;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x00403190;\u000a    }\u000a    goto LAB_00403358;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_004032ba;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_00403358;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_004032e9;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00402da8;\u000a  case '\u005ca':\u000a    goto joined_r0x00402c98;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x00402c98;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_00402ac6_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x00402c98;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x00402c98;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_00402ac6_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x00402c98:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_004031fe;\u000a    }\u000a    goto LAB_00403358;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_00403358;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_00403358;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_00403358;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_00403358;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_00403358;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_00402ac6_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00403256;\u000a      goto joined_r0x00403248;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00402d51:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00403248;\u000a      goto LAB_00403256;\u000a    }\u000a    goto LAB_00403358;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_00403358;\u000a  }\u000a  goto joined_r0x00403190;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_004032ba:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_004032e9;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_004032e9:\u000a  if (1 < uVar10) {\u000aLAB_00402dc6:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_00402e82;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00402d51;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_00402e82:\u000a        if (bVar6 != 0) goto LAB_00403358;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00402da8:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_00402dc6;\u000ajoined_r0x00403190:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x00403190:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_004031b7;\u000aLAB_004031f0:\u000a    if (bVar22) goto LAB_004031f5;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_004031f0;\u000aLAB_004031b7:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_004031f5:\u000a      if (bVar6 != 0) goto LAB_00403358;\u000aLAB_004031fe:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00403248;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00403256:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00403248:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_00403285:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_00402a60;\u000aLAB_00403340:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_00403349;\u000a  goto LAB_00402a6b;\u000a}\u000a\u000a
p731
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401640\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00403425\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x406aa0 + RAX*0x8]\nMOV EDI,0x406fc4\nMOV ESI,R15D\nCALL 0x00403ad0\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x406fc6\nMOV ESI,R15D\nCALL 0x00403ad0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x004028dd\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x004028e0\nNOP\nCMP R12,RSI\nJNC 0x004028ce\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x004028c0\nJMP 0x004028e0\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401650\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x004029ac\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x004029ac\nMOV ECX,0x407051\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x004029a6\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x00402947\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x00402974\nTEST RSI,RSI\nJZ 0x00402961\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x406fc6\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x00402982\nMOV ECX,0x406fc6\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x004029ac\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x004033fc\nMOV ECX,0x407051\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x00403340\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x00403349\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x00402aaf\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x00402aaa\nCMP R11,-0x1\nJNZ 0x00402aaa\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401650\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x00402b00\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x00402d5c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x406af8 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x00403358\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x004031b0\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x004031b7\nJMP 0x004031f0\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x00401730\nTEST EAX,EAX\nSETZ AL\nJNZ 0x00402b4d\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00402ab1\nJMP 0x00403358\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00402ab1\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x00402adb\nCMP EBX,0x2\nJNZ 0x00402adb\nTEST R13,R13\nJNZ 0x00402adb\nJMP 0x00403358\nCMP R11,-0x1\nJZ 0x00402f33\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00402f53\nJMP 0x00402adb\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00402f64\nTEST R8B,R8B\nJNZ 0x00403358\nCMP EBX,0x2\nJNZ 0x00402c08\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00402c08\nCMP R12,RSI\nJNC 0x00402be3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00402bf2\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00402c01\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00402c12\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x004030d8\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x004030d8\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x004030d8\nCMP RCX,RSI\nJNC 0x00402c4c\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x00402c5b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00402ae6\nJMP 0x004031b0\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00402ad9\nJMP 0x00402cba\nMOV DL,0x74\nJMP 0x00402ca2\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00402ad9\nJMP 0x00402cba\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00402ad9\nJMP 0x00402cba\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x00403358\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00402ad9\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x004031fe\nJMP 0x00403358\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x00402ad9\nTEST R8B,R8B\nJNZ 0x00403358\nCMP R12,RSI\nJNC 0x00402cea\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00402cf9\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00402d08\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x00402ad9\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x004030eb\nCMP EBX,0x2\nJNZ 0x00402ad9\nTEST R8B,R8B\nJZ 0x00402ad9\nJMP 0x00403358\nCMP EBX,0x2\nJNZ 0x00402f84\nTEST R8B,R8B\nJNZ 0x00403358\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00403256\nJMP 0x00403279\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x00402fa5\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x00401910\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00403198\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x00403198\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x00402e82\nJMP 0x00402e50\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x00402e39\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x00402e36\nCMP R12,RSI\nJNC 0x00402e1b\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x00402e2a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x00402e70\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x00402e70\nTEST BPL,0x1\nJZ 0x00402f13\nCMP R12,RSI\nJNC 0x00402e64\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x00402f13\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00402e50\nTEST R8B,R8B\nJNZ 0x00403358\nCMP EBX,0x2\nJNZ 0x00402eca\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x00402eca\nCMP R12,RSI\nJNC 0x00402ea2\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00402eb1\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00402ec0\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x00402ed4\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00402eeb\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00402f05\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x00402e00\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00403256\nJMP 0x00403279\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x00402adb\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x00402adb\nJMP 0x00403358\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x00403285\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00402ae6\nJMP 0x004031b0\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00402ca2\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00403256\nJMP 0x00403279\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x00402fc7\nMOV RDI,R10\nCALL 0x00401650\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x00401690\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040329f\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x00403297\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x004032a6\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x0040308e\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x00403086\nBT RDI,RDX\nJC 0x004033f2\nINC RCX\nCMP RCX,R14\nJC 0x00403070\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x00401900\nTEST EAX,EAX\nJNZ 0x004030a3\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x004018f0\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00402fe5\nJMP 0x004032e9\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00402ae6\nJMP 0x004031b0\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x00402ad9\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x00402ad9\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x00402ad9\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x00402adb\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00403322\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x00403358\nCMP R12,RSI\nJNC 0x0040314e\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x00403161\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00403170\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x0040317f\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00402ae6\nJMP 0x004031b0\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00402ae6\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x004031f0\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x004031f5\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00403250\nJMP 0x004031f5\nTEST BPL,BPL\nJZ 0x00403250\nTEST R8B,R8B\nJNZ 0x00403358\nCMP EBX,0x2\nJNZ 0x00403238\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00403238\nCMP R12,RSI\nJNC 0x00403213\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00403222\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00403231\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00403242\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x00403282\nJMP 0x0040327e\nTEST DIL,0x1\nJZ 0x00403279\nAND AL,0x1\nJNZ 0x00403279\nCMP R12,RSI\nJNC 0x00403264\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00403273\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x00403282\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x00403340\nJMP 0x00402a60\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x004032e4\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x004032dc\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x00403318\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x004032ba\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x004032e9\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00402da8\nJMP 0x00402dc6\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x004032e9\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00402ae6\nJMP 0x004031b0\nCMP R13,R11\nJNZ 0x00402a6b\nTEST R8B,R8B\nJZ 0x004033b2\nCMP EBX,0x2\nJNZ 0x004033b2\nTEST R12,R12\nJNZ 0x004033b2\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x004027f0\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x004033e6\nTEST R8B,R8B\nJNZ 0x004033e6\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x004033e6\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x004033d9\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x004033d0\nCMP R12,RSI\nJNC 0x0040339d\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x0040339d\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x00403358\nTEST RSI,RSI\nJZ 0x00403409\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x407051\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x004029ac\nCALL 0x00401530\n'
p732
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 22 ee ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 a0 6a 40 00\nbf c4 6f 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf c6 6f 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 63 ed ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 51 70 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 c6 6f 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 c6 6f 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 51 70 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 c3 eb ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd f8 6a 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 17 ec ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 97 eb ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 91 e6 ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 83 e6 ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 69 e8 ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 32 e8 ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 51 70 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 06 e1 ff ff\n'
p733
S'.text:00000000004027f0\n.text:00000000004027f1\n.text:00000000004027f3\n.text:00000000004027f5\n.text:00000000004027f7\n.text:00000000004027f9\n.text:00000000004027fa\n.text:0000000000402801\n.text:0000000000402804\n.text:0000000000402807\n.text:000000000040280a\n.text:000000000040280f\n.text:0000000000402814\n.text:0000000000402819\n.text:000000000040281e\n.text:0000000000402826\n.text:000000000040282a\n.text:0000000000402830\n.text:0000000000402838\n.text:000000000040283d\n.text:0000000000402845\n.text:000000000040284a\n.text:000000000040284e\n.text:0000000000402850\n.text:0000000000402853\n.text:0000000000402856\n.text:0000000000402859\n.text:000000000040285e\n.text:0000000000402861\n.text:0000000000402864\n.text:0000000000402867\n.text:000000000040286a\n.text:000000000040286c\n.text:000000000040286f\n.text:0000000000402874\n.text:0000000000402877\n.text:000000000040287c\n.text:0000000000402883\n.text:0000000000402888\n.text:000000000040288b\n.text:0000000000402890\n.text:0000000000402895\n.text:000000000040289a\n.text:000000000040289d\n.text:00000000004028a2\n.text:00000000004028a7\n.text:00000000004028ac\n.text:00000000004028ae\n.text:00000000004028b0\n.text:00000000004028b5\n.text:00000000004028b7\n.text:00000000004028ba\n.text:00000000004028bc\n.text:00000000004028be\n.text:00000000004028c0\n.text:00000000004028c3\n.text:00000000004028c5\n.text:00000000004028ca\n.text:00000000004028ce\n.text:00000000004028d4\n.text:00000000004028d7\n.text:00000000004028d9\n.text:00000000004028db\n.text:00000000004028dd\n.text:00000000004028e0\n.text:00000000004028e5\n.text:00000000004028e8\n.text:00000000004028ed\n.text:00000000004028f2\n.text:00000000004028f5\n.text:00000000004028f8\n.text:00000000004028fb\n.text:00000000004028fe\n.text:0000000000402903\n.text:0000000000402906\n.text:0000000000402909\n.text:000000000040290e\n.text:0000000000402911\n.text:0000000000402913\n.text:0000000000402916\n.text:0000000000402918\n.text:000000000040291a\n.text:000000000040291d\n.text:0000000000402922\n.text:0000000000402927\n.text:000000000040292c\n.text:000000000040292f\n.text:0000000000402935\n.text:0000000000402937\n.text:000000000040293a\n.text:000000000040293d\n.text:0000000000402940\n.text:0000000000402942\n.text:0000000000402944\n.text:0000000000402947\n.text:000000000040294a\n.text:000000000040294f\n.text:0000000000402952\n.text:0000000000402954\n.text:0000000000402957\n.text:0000000000402959\n.text:000000000040295e\n.text:0000000000402961\n.text:0000000000402966\n.text:000000000040296c\n.text:0000000000402972\n.text:0000000000402974\n.text:0000000000402979\n.text:000000000040297f\n.text:0000000000402982\n.text:0000000000402985\n.text:0000000000402988\n.text:000000000040298a\n.text:000000000040298f\n.text:0000000000402992\n.text:0000000000402998\n.text:000000000040299d\n.text:00000000004029a3\n.text:00000000004029a6\n.text:00000000004029a9\n.text:00000000004029ac\n.text:00000000004029b4\n.text:00000000004029b6\n.text:00000000004029b8\n.text:00000000004029bb\n.text:00000000004029bf\n.text:00000000004029c1\n.text:00000000004029c4\n.text:00000000004029c8\n.text:00000000004029ca\n.text:00000000004029cd\n.text:00000000004029d0\n.text:00000000004029d3\n.text:00000000004029d5\n.text:00000000004029d9\n.text:00000000004029db\n.text:00000000004029df\n.text:00000000004029e2\n.text:00000000004029e5\n.text:00000000004029e8\n.text:00000000004029ea\n.text:00000000004029ee\n.text:00000000004029f7\n.text:00000000004029fa\n.text:00000000004029fc\n.text:0000000000402a00\n.text:0000000000402a02\n.text:0000000000402a06\n.text:0000000000402a08\n.text:0000000000402a0b\n.text:0000000000402a0f\n.text:0000000000402a11\n.text:0000000000402a14\n.text:0000000000402a18\n.text:0000000000402a1d\n.text:0000000000402a20\n.text:0000000000402a24\n.text:0000000000402a2c\n.text:0000000000402a2f\n.text:0000000000402a32\n.text:0000000000402a34\n.text:0000000000402a38\n.text:0000000000402a3b\n.text:0000000000402a3d\n.text:0000000000402a42\n.text:0000000000402a46\n.text:0000000000402a4b\n.text:0000000000402a50\n.text:0000000000402a54\n.text:0000000000402a5a\n.text:0000000000402a60\n.text:0000000000402a65\n.text:0000000000402a6b\n.text:0000000000402a70\n.text:0000000000402a72\n.text:0000000000402a77\n.text:0000000000402a7b\n.text:0000000000402a7d\n.text:0000000000402a81\n.text:0000000000402a83\n.text:0000000000402a85\n.text:0000000000402a88\n.text:0000000000402a8d\n.text:0000000000402a8f\n.text:0000000000402a94\n.text:0000000000402a99\n.text:0000000000402a9d\n.text:0000000000402aa2\n.text:0000000000402aa7\n.text:0000000000402aaa\n.text:0000000000402aad\n.text:0000000000402aaf\n.text:0000000000402ab1\n.text:0000000000402ab6\n.text:0000000000402aba\n.text:0000000000402ac0\n.text:0000000000402ac2\n.text:0000000000402ac4\n.text:0000000000402ac6\n.text:0000000000402ace\n.text:0000000000402ad3\n.text:0000000000402ad9\n.text:0000000000402adb\n.text:0000000000402ae0\n.text:0000000000402ae6\n.text:0000000000402aef\n.text:0000000000402af5\n.text:0000000000402b00\n.text:0000000000402b02\n.text:0000000000402b05\n.text:0000000000402b09\n.text:0000000000402b11\n.text:0000000000402b14\n.text:0000000000402b19\n.text:0000000000402b1b\n.text:0000000000402b1e\n.text:0000000000402b20\n.text:0000000000402b25\n.text:0000000000402b28\n.text:0000000000402b2d\n.text:0000000000402b30\n.text:0000000000402b35\n.text:0000000000402b39\n.text:0000000000402b3e\n.text:0000000000402b40\n.text:0000000000402b42\n.text:0000000000402b48\n.text:0000000000402b4d\n.text:0000000000402b52\n.text:0000000000402b55\n.text:0000000000402b5a\n.text:0000000000402b5e\n.text:0000000000402b63\n.text:0000000000402b68\n.text:0000000000402b6a\n.text:0000000000402b6c\n.text:0000000000402b71\n.text:0000000000402b73\n.text:0000000000402b76\n.text:0000000000402b7c\n.text:0000000000402b7f\n.text:0000000000402b85\n.text:0000000000402b88\n.text:0000000000402b8e\n.text:0000000000402b93\n.text:0000000000402b97\n.text:0000000000402b9d\n.text:0000000000402ba0\n.text:0000000000402ba3\n.text:0000000000402ba7\n.text:0000000000402baa\n.text:0000000000402bac\n.text:0000000000402baf\n.text:0000000000402bb5\n.text:0000000000402bba\n.text:0000000000402bbf\n.text:0000000000402bc5\n.text:0000000000402bc8\n.text:0000000000402bce\n.text:0000000000402bd1\n.text:0000000000402bd3\n.text:0000000000402bd5\n.text:0000000000402bd7\n.text:0000000000402bd9\n.text:0000000000402bdc\n.text:0000000000402bde\n.text:0000000000402be3\n.text:0000000000402be8\n.text:0000000000402beb\n.text:0000000000402bed\n.text:0000000000402bf2\n.text:0000000000402bf7\n.text:0000000000402bfa\n.text:0000000000402bfc\n.text:0000000000402c01\n.text:0000000000402c05\n.text:0000000000402c08\n.text:0000000000402c0b\n.text:0000000000402c0d\n.text:0000000000402c12\n.text:0000000000402c17\n.text:0000000000402c19\n.text:0000000000402c1c\n.text:0000000000402c1f\n.text:0000000000402c25\n.text:0000000000402c29\n.text:0000000000402c2c\n.text:0000000000402c32\n.text:0000000000402c36\n.text:0000000000402c39\n.text:0000000000402c3c\n.text:0000000000402c42\n.text:0000000000402c45\n.text:0000000000402c47\n.text:0000000000402c4c\n.text:0000000000402c51\n.text:0000000000402c54\n.text:0000000000402c56\n.text:0000000000402c5b\n.text:0000000000402c5f\n.text:0000000000402c64\n.text:0000000000402c6a\n.text:0000000000402c6f\n.text:0000000000402c71\n.text:0000000000402c76\n.text:0000000000402c7c\n.text:0000000000402c7e\n.text:0000000000402c80\n.text:0000000000402c82\n.text:0000000000402c84\n.text:0000000000402c89\n.text:0000000000402c8f\n.text:0000000000402c91\n.text:0000000000402c93\n.text:0000000000402c98\n.text:0000000000402c9e\n.text:0000000000402ca0\n.text:0000000000402ca2\n.text:0000000000402ca7\n.text:0000000000402ca9\n.text:0000000000402caf\n.text:0000000000402cb4\n.text:0000000000402cba\n.text:0000000000402cbd\n.text:0000000000402cc0\n.text:0000000000402cc6\n.text:0000000000402ccb\n.text:0000000000402cce\n.text:0000000000402cd1\n.text:0000000000402cd7\n.text:0000000000402cda\n.text:0000000000402ce0\n.text:0000000000402ce3\n.text:0000000000402ce5\n.text:0000000000402cea\n.text:0000000000402cef\n.text:0000000000402cf2\n.text:0000000000402cf4\n.text:0000000000402cf9\n.text:0000000000402cfe\n.text:0000000000402d01\n.text:0000000000402d03\n.text:0000000000402d08\n.text:0000000000402d0c\n.text:0000000000402d0e\n.text:0000000000402d13\n.text:0000000000402d16\n.text:0000000000402d19\n.text:0000000000402d1f\n.text:0000000000402d22\n.text:0000000000402d28\n.text:0000000000402d2b\n.text:0000000000402d31\n.text:0000000000402d36\n.text:0000000000402d39\n.text:0000000000402d3f\n.text:0000000000402d42\n.text:0000000000402d48\n.text:0000000000402d4b\n.text:0000000000402d4d\n.text:0000000000402d51\n.text:0000000000402d57\n.text:0000000000402d5c\n.text:0000000000402d60\n.text:0000000000402d69\n.text:0000000000402d6f\n.text:0000000000402d74\n.text:0000000000402d79\n.text:0000000000402d7e\n.text:0000000000402d81\n.text:0000000000402d86\n.text:0000000000402d89\n.text:0000000000402d8c\n.text:0000000000402d91\n.text:0000000000402d96\n.text:0000000000402d9a\n.text:0000000000402d9f\n.text:0000000000402da4\n.text:0000000000402da8\n.text:0000000000402daa\n.text:0000000000402daf\n.text:0000000000402db5\n.text:0000000000402db8\n.text:0000000000402dba\n.text:0000000000402dbd\n.text:0000000000402dc0\n.text:0000000000402dc6\n.text:0000000000402dcb\n.text:0000000000402dce\n.text:0000000000402dd1\n.text:0000000000402dd4\n.text:0000000000402dd7\n.text:0000000000402dd9\n.text:0000000000402ddd\n.text:0000000000402ddf\n.text:0000000000402de4\n.text:0000000000402de9\n.text:0000000000402def\n.text:0000000000402e00\n.text:0000000000402e05\n.text:0000000000402e07\n.text:0000000000402e0a\n.text:0000000000402e0c\n.text:0000000000402e0f\n.text:0000000000402e11\n.text:0000000000402e14\n.text:0000000000402e16\n.text:0000000000402e1b\n.text:0000000000402e20\n.text:0000000000402e23\n.text:0000000000402e25\n.text:0000000000402e2a\n.text:0000000000402e2e\n.text:0000000000402e36\n.text:0000000000402e39\n.text:0000000000402e3c\n.text:0000000000402e3e\n.text:0000000000402e42\n.text:0000000000402e50\n.text:0000000000402e54\n.text:0000000000402e5a\n.text:0000000000402e5d\n.text:0000000000402e5f\n.text:0000000000402e64\n.text:0000000000402e67\n.text:0000000000402e69\n.text:0000000000402e70\n.text:0000000000402e73\n.text:0000000000402e78\n.text:0000000000402e7b\n.text:0000000000402e80\n.text:0000000000402e82\n.text:0000000000402e85\n.text:0000000000402e8b\n.text:0000000000402e8e\n.text:0000000000402e90\n.text:0000000000402e94\n.text:0000000000402e96\n.text:0000000000402e98\n.text:0000000000402e9b\n.text:0000000000402e9d\n.text:0000000000402ea2\n.text:0000000000402ea7\n.text:0000000000402eaa\n.text:0000000000402eac\n.text:0000000000402eb1\n.text:0000000000402eb6\n.text:0000000000402eb9\n.text:0000000000402ebb\n.text:0000000000402ec0\n.text:0000000000402ec4\n.text:0000000000402ec6\n.text:0000000000402eca\n.text:0000000000402ecd\n.text:0000000000402ecf\n.text:0000000000402ed4\n.text:0000000000402ed9\n.text:0000000000402edc\n.text:0000000000402ede\n.text:0000000000402ee1\n.text:0000000000402ee4\n.text:0000000000402ee7\n.text:0000000000402eeb\n.text:0000000000402ef0\n.text:0000000000402ef3\n.text:0000000000402ef5\n.text:0000000000402ef8\n.text:0000000000402efb\n.text:0000000000402efe\n.text:0000000000402f01\n.text:0000000000402f05\n.text:0000000000402f09\n.text:0000000000402f0d\n.text:0000000000402f11\n.text:0000000000402f13\n.text:0000000000402f17\n.text:0000000000402f1a\n.text:0000000000402f20\n.text:0000000000402f24\n.text:0000000000402f28\n.text:0000000000402f2e\n.text:0000000000402f33\n.text:0000000000402f36\n.text:0000000000402f39\n.text:0000000000402f3e\n.text:0000000000402f41\n.text:0000000000402f43\n.text:0000000000402f46\n.text:0000000000402f4d\n.text:0000000000402f53\n.text:0000000000402f55\n.text:0000000000402f59\n.text:0000000000402f5f\n.text:0000000000402f64\n.text:0000000000402f69\n.text:0000000000402f6f\n.text:0000000000402f72\n.text:0000000000402f74\n.text:0000000000402f79\n.text:0000000000402f7f\n.text:0000000000402f84\n.text:0000000000402f86\n.text:0000000000402f8b\n.text:0000000000402f91\n.text:0000000000402f93\n.text:0000000000402f96\n.text:0000000000402f9a\n.text:0000000000402fa0\n.text:0000000000402fa5\n.text:0000000000402fb1\n.text:0000000000402fb5\n.text:0000000000402fb7\n.text:0000000000402fba\n.text:0000000000402fbf\n.text:0000000000402fc4\n.text:0000000000402fc7\n.text:0000000000402fcb\n.text:0000000000402fd0\n.text:0000000000402fd2\n.text:0000000000402fd6\n.text:0000000000402fd8\n.text:0000000000402fe0\n.text:0000000000402fe5\n.text:0000000000402fea\n.text:0000000000402fee\n.text:0000000000402ff2\n.text:0000000000402ffa\n.text:0000000000402ffd\n.text:0000000000403002\n.text:0000000000403005\n.text:0000000000403008\n.text:000000000040300d\n.text:0000000000403010\n.text:0000000000403013\n.text:0000000000403019\n.text:000000000040301d\n.text:0000000000403027\n.text:000000000040302d\n.text:0000000000403031\n.text:0000000000403036\n.text:000000000040303c\n.text:0000000000403040\n.text:0000000000403043\n.text:0000000000403047\n.text:0000000000403049\n.text:000000000040304e\n.text:0000000000403053\n.text:0000000000403057\n.text:0000000000403059\n.text:000000000040305e\n.text:0000000000403063\n.text:0000000000403067\n.text:000000000040306c\n.text:0000000000403070\n.text:0000000000403074\n.text:0000000000403077\n.text:000000000040307a\n.text:000000000040307c\n.text:0000000000403080\n.text:0000000000403086\n.text:0000000000403089\n.text:000000000040308c\n.text:000000000040308e\n.text:0000000000403092\n.text:0000000000403097\n.text:0000000000403099\n.text:000000000040309b\n.text:00000000004030a3\n.text:00000000004030a8\n.text:00000000004030ab\n.text:00000000004030b3\n.text:00000000004030b6\n.text:00000000004030b9\n.text:00000000004030be\n.text:00000000004030c1\n.text:00000000004030c3\n.text:00000000004030c8\n.text:00000000004030cd\n.text:00000000004030d3\n.text:00000000004030d8\n.text:00000000004030db\n.text:00000000004030e0\n.text:00000000004030e6\n.text:00000000004030eb\n.text:00000000004030f0\n.text:00000000004030f6\n.text:00000000004030fa\n.text:00000000004030fd\n.text:0000000000403103\n.text:0000000000403109\n.text:000000000040310f\n.text:0000000000403114\n.text:0000000000403116\n.text:0000000000403119\n.text:000000000040311f\n.text:0000000000403123\n.text:0000000000403125\n.text:000000000040312f\n.text:0000000000403133\n.text:0000000000403139\n.text:000000000040313c\n.text:000000000040313e\n.text:0000000000403144\n.text:0000000000403147\n.text:0000000000403149\n.text:000000000040314e\n.text:0000000000403153\n.text:0000000000403156\n.text:000000000040315a\n.text:000000000040315c\n.text:0000000000403161\n.text:0000000000403166\n.text:0000000000403169\n.text:000000000040316b\n.text:0000000000403170\n.text:0000000000403175\n.text:0000000000403178\n.text:000000000040317a\n.text:000000000040317f\n.text:0000000000403183\n.text:0000000000403185\n.text:0000000000403188\n.text:000000000040318b\n.text:0000000000403190\n.text:0000000000403196\n.text:0000000000403198\n.text:000000000040319d\n.text:00000000004031a2\n.text:00000000004031a8\n.text:00000000004031b0\n.text:00000000004031b5\n.text:00000000004031b7\n.text:00000000004031bc\n.text:00000000004031bf\n.text:00000000004031c1\n.text:00000000004031c4\n.text:00000000004031c6\n.text:00000000004031c9\n.text:00000000004031cc\n.text:00000000004031cf\n.text:00000000004031d1\n.text:00000000004031d9\n.text:00000000004031dc\n.text:00000000004031de\n.text:00000000004031e0\n.text:00000000004031f0\n.text:00000000004031f3\n.text:00000000004031f5\n.text:00000000004031f8\n.text:00000000004031fe\n.text:0000000000403201\n.text:0000000000403203\n.text:0000000000403205\n.text:0000000000403207\n.text:0000000000403209\n.text:000000000040320c\n.text:000000000040320e\n.text:0000000000403213\n.text:0000000000403218\n.text:000000000040321b\n.text:000000000040321d\n.text:0000000000403222\n.text:0000000000403227\n.text:000000000040322a\n.text:000000000040322c\n.text:0000000000403231\n.text:0000000000403235\n.text:0000000000403238\n.text:000000000040323b\n.text:000000000040323d\n.text:0000000000403242\n.text:0000000000403245\n.text:0000000000403248\n.text:000000000040324a\n.text:0000000000403250\n.text:0000000000403254\n.text:0000000000403256\n.text:0000000000403258\n.text:000000000040325a\n.text:000000000040325d\n.text:000000000040325f\n.text:0000000000403264\n.text:0000000000403269\n.text:000000000040326c\n.text:000000000040326e\n.text:0000000000403273\n.text:0000000000403277\n.text:0000000000403279\n.text:000000000040327c\n.text:000000000040327e\n.text:0000000000403282\n.text:0000000000403285\n.text:0000000000403288\n.text:000000000040328c\n.text:0000000000403292\n.text:0000000000403297\n.text:000000000040329f\n.text:00000000004032a4\n.text:00000000004032a6\n.text:00000000004032ae\n.text:00000000004032b3\n.text:00000000004032b5\n.text:00000000004032ba\n.text:00000000004032bf\n.text:00000000004032c3\n.text:00000000004032c5\n.text:00000000004032ca\n.text:00000000004032cd\n.text:00000000004032d0\n.text:00000000004032d2\n.text:00000000004032da\n.text:00000000004032dc\n.text:00000000004032e4\n.text:00000000004032e9\n.text:00000000004032ed\n.text:00000000004032f2\n.text:00000000004032f7\n.text:00000000004032fb\n.text:0000000000403300\n.text:0000000000403305\n.text:0000000000403309\n.text:000000000040330d\n.text:0000000000403313\n.text:0000000000403318\n.text:0000000000403320\n.text:0000000000403322\n.text:0000000000403324\n.text:0000000000403328\n.text:000000000040332d\n.text:0000000000403333\n.text:0000000000403340\n.text:0000000000403343\n.text:0000000000403349\n.text:000000000040334c\n.text:000000000040334e\n.text:0000000000403351\n.text:0000000000403353\n.text:0000000000403356\n.text:0000000000403358\n.text:0000000000403360\n.text:0000000000403366\n.text:000000000040336a\n.text:000000000040336d\n.text:0000000000403371\n.text:0000000000403376\n.text:000000000040337a\n.text:000000000040337e\n.text:0000000000403381\n.text:0000000000403384\n.text:0000000000403387\n.text:000000000040338b\n.text:000000000040338f\n.text:0000000000403391\n.text:0000000000403396\n.text:000000000040339a\n.text:000000000040339d\n.text:00000000004033a0\n.text:00000000004033a7\n.text:00000000004033a8\n.text:00000000004033aa\n.text:00000000004033ac\n.text:00000000004033ae\n.text:00000000004033b0\n.text:00000000004033b1\n.text:00000000004033b2\n.text:00000000004033ba\n.text:00000000004033bd\n.text:00000000004033bf\n.text:00000000004033c2\n.text:00000000004033c4\n.text:00000000004033c6\n.text:00000000004033c8\n.text:00000000004033ca\n.text:00000000004033cd\n.text:00000000004033d0\n.text:00000000004033d3\n.text:00000000004033d5\n.text:00000000004033d9\n.text:00000000004033dc\n.text:00000000004033df\n.text:00000000004033e2\n.text:00000000004033e4\n.text:00000000004033e6\n.text:00000000004033e9\n.text:00000000004033eb\n.text:00000000004033f0\n.text:00000000004033f2\n.text:00000000004033f7\n.text:00000000004033fc\n.text:00000000004033ff\n.text:0000000000403401\n.text:0000000000403406\n.text:0000000000403409\n.text:000000000040340e\n.text:0000000000403411\n.text:0000000000403417\n.text:000000000040341d\n.text:0000000000403420\n.text:0000000000403425\n'
p734
tp735
sS'simple_new'
p736
(S'\n__stdcall simple_new(FILE * source, void * handler_arg)\n'
p737
V\u000arandread_source * simple_new(FILE *source,void *handler_arg)\u000a\u000a{\u000a  randread_source *prVar1;\u000a  \u000a  prVar1 = (randread_source *)xmalloc(0x1038);\u000a  prVar1->source = source;\u000a  prVar1->handler = randread_error;\u000a  prVar1->handler_arg = handler_arg;\u000a  return prVar1;\u000a}\u000a\u000a
p738
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nMOV EDI,0x1038\nCALL 0x00404650\nMOV qword ptr [RAX],RBX\nMOV qword ptr [RAX + 0x8],0x405450\nMOV qword ptr [RAX + 0x10],R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p739
S'41 56\n53\n50\n49 89 f6\n48 89 fb\nbf 38 10 00 00\ne8 9c f5 ff ff\n48 89 18\n48 c7 40 08 50 54 40 00\n4c 89 70 10\n48 83 c4 08\n5b\n41 5e\nc3\n'
p740
S'.text:00000000004050a0\n.text:00000000004050a2\n.text:00000000004050a3\n.text:00000000004050a4\n.text:00000000004050a7\n.text:00000000004050aa\n.text:00000000004050af\n.text:00000000004050b4\n.text:00000000004050b7\n.text:00000000004050bf\n.text:00000000004050c3\n.text:00000000004050c7\n.text:00000000004050c8\n.text:00000000004050ca\n'
p741
tp742
sS'getgid'
p743
(S'\n__stdcall getgid()\n'
p744
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__gid_t getgid(void)\u000a\u000a{\u000a  __gid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getgid_0060a168)();\u000a  return _Var1;\u000a}\u000a\u000a
p745
S'JMP qword ptr [0x0060a168]\n'
p746
S'ff 25 c2 89 20 00\n'
p747
S'.plt:00000000004017a0\n'
p748
tp749
sS'set_quoting_style'
p750
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p751
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p752
S'TEST RDI,RDI\nMOV EAX,0x60a310\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p753
S'48 85 ff\nb8 10 a3 60 00\n48 0f 45 c7\n89 30\nc3\n'
p754
S'.text:00000000004026d0\n.text:00000000004026d3\n.text:00000000004026d8\n.text:00000000004026dc\n.text:00000000004026de\n'
p755
tp756
sS'textdomain'
p757
(S'\n__stdcall textdomain()\n'
p758
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_0060a098)();\u000a  return;\u000a}\u000a\u000a
p759
S'JMP qword ptr [0x0060a098]\n'
p760
S'ff 25 92 8a 20 00\n'
p761
S'.plt:0000000000401600\n'
p762
tp763
sS'xmemdup'
p764
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p765
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p766
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x00404650\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401780\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p767
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 cc cf ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p768
S'.text:0000000000404790\n.text:0000000000404792\n.text:0000000000404794\n.text:0000000000404795\n.text:0000000000404798\n.text:000000000040479b\n.text:000000000040479e\n.text:00000000004047a3\n.text:00000000004047a6\n.text:00000000004047a9\n.text:00000000004047ac\n.text:00000000004047af\n.text:00000000004047b4\n.text:00000000004047b7\n.text:00000000004047b8\n.text:00000000004047ba\n.text:00000000004047bc\n'
p769
tp770
sS'readisaac'
p771
(S'\n__stdcall readisaac(isaac * isaac, void * p, size_t size)\n'
p772
V\u000avoid readisaac(isaac *isaac,void *p,size_t size)\u000a\u000a{\u000a  isaac_state *s;\u000a  isaac_word *result;\u000a  ulong __n;\u000a  isaac_word *__src;\u000a  ulong uVar1;\u000a  size_t sVar2;\u000a  \u000a  __n = isaac->buffered;\u000a  result = (isaac_word *)isaac->data;\u000a  __src = (isaac_word *)((long)result + (0x800 - __n));\u000a  uVar1 = __n;\u000a  if (__n < size) {\u000a    s = &isaac->state;\u000a    uVar1 = 0x800;\u000a    do {\u000a      memcpy(p,__src,__n);\u000a      p = (void *)((long)p + __n);\u000a      size = size - __n;\u000a      if (((ulong)p & 7) == 0) {\u000a        sVar2 = 0;\u000a        goto LAB_004053f0;\u000a      }\u000a      isaac_refill(s,result);\u000a      __n = 0x800;\u000a      __src = result;\u000a    } while (0x800 < size);\u000a  }\u000aLAB_004053ba:\u000a  memcpy(p,__src,size);\u000a  sVar2 = uVar1 - size;\u000a  goto LAB_004053cb;\u000a  while( true ) {\u000a    isaac_refill(s,(isaac_word *)p);\u000a    p = (isaac_word *)p + 0x100;\u000a    size = size + 0xfffff800;\u000a    if (size == 0) break;\u000aLAB_004053f0:\u000a    if (size < 0x800) {\u000a      isaac_refill(s,result);\u000a      __src = result;\u000a      uVar1 = 0x800;\u000a      goto LAB_004053ba;\u000a    }\u000a  }\u000aLAB_004053cb:\u000a  isaac->buffered = sVar2;\u000a  return;\u000a}\u000a\u000a
p773
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV RBX,RSI\nMOV RBP,qword ptr [RDI]\nLEA R12,[0x820 + RDI]\nMOV RSI,R12\nSUB RSI,RBP\nADD RSI,0x800\nCMP RBP,R15\nMOV qword ptr [RSP],RDI\nJNC 0x004053b4\nLEA R13,[RDI + 0x8]\nMOV R14D,0x800\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDI,RBX\nMOV RDX,RBP\nCALL 0x00401780\nADD RBX,RBP\nSUB R15,RBP\nTEST BL,0x7\nJZ 0x004053e1\nMOV RDI,R13\nMOV RSI,R12\nCALL 0x004054b0\nCMP R15,0x800\nMOV RSI,R12\nMOV EBP,0x800\nJA 0x00405380\nJMP 0x004053ba\nMOV R14,RBP\nMOV R12,RSI\nMOV RDI,RBX\nMOV RSI,R12\nMOV RDX,R15\nCALL 0x00401780\nSUB R14,R15\nMOV RAX,qword ptr [RSP]\nMOV qword ptr [RAX],R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR R14D,R14D\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP R15,0x800\nJC 0x00405416\nMOV RDI,R13\nMOV RSI,RBX\nCALL 0x004054b0\nADD RBX,0x800\nADD R15,0xfffff800\nJNZ 0x004053f0\nJMP 0x004053cb\nMOV RDI,R13\nMOV RSI,R12\nCALL 0x004054b0\nMOV R14D,0x800\nJMP 0x004053ba\n'
p774
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d7\n48 89 f3\n48 8b 2f\n4c 8d a7 20 08 00 00\n4c 89 e6\n48 29 ee\n48 81 c6 00 08 00 00\n4c 39 fd\n48 89 3c 24\n73 43\n4c 8d 6f 08\n41 be 00 08 00 00\n0f 1f 44 00 00\n48 89 df\n48 89 ea\ne8 f5 c3 ff ff\n48 01 eb\n49 29 ef\nf6 c3 07\n74 4b\n4c 89 ef\n4c 89 e6\ne8 0f 01 00 00\n49 81 ff 00 08 00 00\n4c 89 e6\nbd 00 08 00 00\n77 ce\neb 06\n49 89 ee\n49 89 f4\n48 89 df\n4c 89 e6\n4c 89 fa\ne8 b8 c3 ff ff\n4d 29 fe\n48 8b 04 24\n4c 89 30\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n45 31 f6\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 81 ff 00 08 00 00\n72 1d\n4c 89 ef\n48 89 de\ne8 ac 00 00 00\n48 81 c3 00 08 00 00\n49 81 c7 00 f8 ff ff\n75 dc\neb b5\n4c 89 ef\n4c 89 e6\ne8 8f 00 00 00\n41 be 00 08 00 00\neb 91\n'
p775
S'.text:0000000000405340\n.text:0000000000405341\n.text:0000000000405343\n.text:0000000000405345\n.text:0000000000405347\n.text:0000000000405349\n.text:000000000040534a\n.text:000000000040534b\n.text:000000000040534e\n.text:0000000000405351\n.text:0000000000405354\n.text:000000000040535b\n.text:000000000040535e\n.text:0000000000405361\n.text:0000000000405368\n.text:000000000040536b\n.text:000000000040536f\n.text:0000000000405371\n.text:0000000000405375\n.text:000000000040537b\n.text:0000000000405380\n.text:0000000000405383\n.text:0000000000405386\n.text:000000000040538b\n.text:000000000040538e\n.text:0000000000405391\n.text:0000000000405394\n.text:0000000000405396\n.text:0000000000405399\n.text:000000000040539c\n.text:00000000004053a1\n.text:00000000004053a8\n.text:00000000004053ab\n.text:00000000004053b0\n.text:00000000004053b2\n.text:00000000004053b4\n.text:00000000004053b7\n.text:00000000004053ba\n.text:00000000004053bd\n.text:00000000004053c0\n.text:00000000004053c3\n.text:00000000004053c8\n.text:00000000004053cb\n.text:00000000004053cf\n.text:00000000004053d2\n.text:00000000004053d6\n.text:00000000004053d7\n.text:00000000004053d9\n.text:00000000004053db\n.text:00000000004053dd\n.text:00000000004053df\n.text:00000000004053e0\n.text:00000000004053e1\n.text:00000000004053e4\n.text:00000000004053f0\n.text:00000000004053f7\n.text:00000000004053f9\n.text:00000000004053fc\n.text:00000000004053ff\n.text:0000000000405404\n.text:000000000040540b\n.text:0000000000405412\n.text:0000000000405414\n.text:0000000000405416\n.text:0000000000405419\n.text:000000000040541c\n.text:0000000000405421\n.text:0000000000405427\n'
p776
tp777
sS'get_quoting_style'
p778
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p779
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p780
S'TEST RDI,RDI\nMOV EAX,0x60a310\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p781
S'48 85 ff\nb8 10 a3 60 00\n48 0f 45 c7\n8b 00\nc3\n'
p782
S'.text:00000000004026c0\n.text:00000000004026c3\n.text:00000000004026c8\n.text:00000000004026cc\n.text:00000000004026ce\n'
p783
tp784
sS'fread_unlocked'
p785
(S'\n__stdcall fread_unlocked(void * __ptr, size_t __size, size_t __n, FILE * __stream)\n'
p786
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fread_unlocked_0060a090)();\u000a  return sVar1;\u000a}\u000a\u000a
p787
S'JMP qword ptr [0x0060a090]\n'
p788
S'ff 25 9a 8a 20 00\n'
p789
S'.plt:00000000004015f0\n'
p790
tp791
sS'ferror_unlocked'
p792
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p793
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_0060a140)();\u000a  return iVar1;\u000a}\u000a\u000a
p794
S'JMP qword ptr [0x0060a140]\n'
p795
S'ff 25 ea 89 20 00\n'
p796
S'.plt:0000000000401750\n'
p797
tp798
sS'exit'
p799
(S'\n__stdcall exit(int __status)\n'
p800
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_0060a1f8)();\u000a  return;\u000a}\u000a\u000a
p801
S'JMP qword ptr [0x0060a1f8]\n'
p802
S'ff 25 32 89 20 00\n'
p803
S'.plt:00000000004018c0\n'
p804
tp805
sS'locale_charset'
p806
(S'\n__stdcall locale_charset()\n'
p807
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_00404b6d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_00404b6d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p808
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x004017e0\nTEST RAX,RAX\nMOV R14D,0x4071e9\nCMOVNZ R14,RAX\nCALL 0x00404b80\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00404b45\nJMP 0x00404b6d\nMOV RDI,RBX\nCALL 0x00401650\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401650\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x00404b6d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401770\nTEST EAX,EAX\nJZ 0x00404b60\nCMP BPL,0x2a\nJNZ 0x00404b20\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00404b20\nMOV RDI,RBX\nCALL 0x00401650\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x407848\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p809
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 e2 cc ff ff\n48 85 c0\n41 be e9 71 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 28 cb ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 1a cb ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 20 cc ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 e8 ca ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 48 78 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p810
S'.text:0000000000404af0\n.text:0000000000404af1\n.text:0000000000404af3\n.text:0000000000404af4\n.text:0000000000404af9\n.text:0000000000404afe\n.text:0000000000404b01\n.text:0000000000404b07\n.text:0000000000404b0b\n.text:0000000000404b10\n.text:0000000000404b13\n.text:0000000000404b16\n.text:0000000000404b19\n.text:0000000000404b1b\n.text:0000000000404b20\n.text:0000000000404b23\n.text:0000000000404b28\n.text:0000000000404b2c\n.text:0000000000404b31\n.text:0000000000404b36\n.text:0000000000404b3b\n.text:0000000000404b40\n.text:0000000000404b43\n.text:0000000000404b45\n.text:0000000000404b48\n.text:0000000000404b4b\n.text:0000000000404b50\n.text:0000000000404b52\n.text:0000000000404b54\n.text:0000000000404b58\n.text:0000000000404b5a\n.text:0000000000404b5e\n.text:0000000000404b60\n.text:0000000000404b63\n.text:0000000000404b68\n.text:0000000000404b6d\n.text:0000000000404b71\n.text:0000000000404b76\n.text:0000000000404b7a\n.text:0000000000404b7b\n.text:0000000000404b7d\n.text:0000000000404b7e\n'
p811
tp812
sS'set_program_name'
p813
(S'\n__stdcall set_program_name(char * argv0)\n'
p814
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p815
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00402651\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x004016a0\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x0040263b\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x406a87\nMOV EDX,0x7\nCALL 0x00401560\nTEST EAX,EAX\nJNZ 0x0040263b\nMOV ESI,0x406a8f\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x00401560\nTEST EAX,EAX\nJNZ 0x00402638\nADD R14,0x3\nMOV qword ptr [0x0060a2a0],R14\nMOV RBX,R14\nMOV qword ptr [0x0060a300],RBX\nMOV qword ptr [0x0060a2c0],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x0060a2e0]\nMOV EDI,0x406a4f\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x004018d0\nCALL 0x00401530\n'
p816
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 b7 f0 ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 87 6a 40 00\nba 07 00 00 00\ne8 4d ef ff ff\n85 c0\n75 24\nbe 8f 6a 40 00\nba 03 00 00 00\n4c 89 f7\ne8 37 ef ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 68 7c 20 00\n4c 89 f3\n48 89 1d be 7c 20 00\n48 89 1d 77 7c 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d 88 7c 20 00\nbf 4f 6a 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 64 f2 ff ff\ne8 bf ee ff ff\n'
p817
S'.text:00000000004025d0\n.text:00000000004025d2\n.text:00000000004025d3\n.text:00000000004025d4\n.text:00000000004025d7\n.text:00000000004025da\n.text:00000000004025dc\n.text:00000000004025e1\n.text:00000000004025e4\n.text:00000000004025e9\n.text:00000000004025ec\n.text:00000000004025f0\n.text:00000000004025f4\n.text:00000000004025f7\n.text:00000000004025fa\n.text:00000000004025fe\n.text:0000000000402600\n.text:0000000000402604\n.text:0000000000402609\n.text:000000000040260e\n.text:0000000000402613\n.text:0000000000402615\n.text:0000000000402617\n.text:000000000040261c\n.text:0000000000402621\n.text:0000000000402624\n.text:0000000000402629\n.text:000000000040262b\n.text:000000000040262d\n.text:0000000000402631\n.text:0000000000402638\n.text:000000000040263b\n.text:0000000000402642\n.text:0000000000402649\n.text:000000000040264d\n.text:000000000040264e\n.text:0000000000402650\n.text:0000000000402651\n.text:0000000000402658\n.text:000000000040265d\n.text:0000000000402662\n.text:0000000000402667\n.text:000000000040266c\n'
p818
tp819
sS'randint_get_source'
p820
(S'\n__stdcall randint_get_source(randint_source * s)\n'
p821
V\u000arandread_source * randint_get_source(randint_source *s)\u000a\u000a{\u000a  return s->source;\u000a}\u000a\u000a
p822
S'MOV RAX,qword ptr [RDI]\nRET\n'
p823
S'48 8b 07\nc3\n'
p824
S'.text:0000000000404e60\n.text:0000000000404e63\n'
p825
tp826
sS'strspn'
p827
(S'\n__stdcall strspn(char * __s, char * __accept)\n'
p828
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strspn(char *__s,char *__accept)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strspn_0060a120)();\u000a  return sVar1;\u000a}\u000a\u000a
p829
S'JMP qword ptr [0x0060a120]\n'
p830
S'ff 25 0a 8a 20 00\n'
p831
S'.plt:0000000000401710\n'
p832
tp833
sS'check_x_suffix'
p834
(S'\n__stdcall check_x_suffix(char * s, size_t len)\n'
p835
V\u000a_Bool check_x_suffix(char *s,size_t len)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strspn(s,"X");\u000a  return (_Bool)(len <= sVar1);\u000a}\u000a\u000a
p836
S'PUSH RBX\nMOV RBX,RSI\nMOV ESI,0x40677d\nCALL 0x00401710\nCMP RAX,RBX\nSETNC AL\nPOP RBX\nRET\n'
p837
S'53\n48 89 f3\nbe 7d 67 40 00\ne8 c2 d6 ff ff\n48 39 d8\n0f 93 c0\n5b\nc3\n'
p838
S'.text:0000000000404040\n.text:0000000000404041\n.text:0000000000404044\n.text:0000000000404049\n.text:000000000040404e\n.text:0000000000404051\n.text:0000000000404054\n.text:0000000000404055\n'
p839
tp840
sS'quotearg_buffer'
p841
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p842
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p843
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x60a310\nCMOVNZ RBP,R8\nCALL 0x00401540\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x004027f0\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p844
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd 10 a3 60 00\n49 0f 45 e8\ne8 a8 ed ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p845
S'.text:0000000000402770\n.text:0000000000402771\n.text:0000000000402773\n.text:0000000000402775\n.text:0000000000402777\n.text:0000000000402779\n.text:000000000040277a\n.text:000000000040277b\n.text:000000000040277e\n.text:0000000000402781\n.text:0000000000402784\n.text:0000000000402787\n.text:000000000040278a\n.text:000000000040278f\n.text:0000000000402793\n.text:0000000000402798\n.text:000000000040279b\n.text:000000000040279d\n.text:00000000004027a1\n.text:00000000004027a5\n.text:00000000004027a9\n.text:00000000004027ad\n.text:00000000004027b0\n.text:00000000004027b3\n.text:00000000004027b6\n.text:00000000004027b9\n.text:00000000004027bc\n.text:00000000004027bf\n.text:00000000004027c3\n.text:00000000004027c4\n.text:00000000004027c9\n.text:00000000004027cd\n.text:00000000004027d1\n.text:00000000004027d3\n.text:00000000004027d7\n.text:00000000004027d8\n.text:00000000004027da\n.text:00000000004027dc\n.text:00000000004027de\n.text:00000000004027e0\n.text:00000000004027e1\n'
p846
tp847
sS'quotearg_colon'
p848
(S'\n__stdcall quotearg_colon(char * arg)\n'
p849
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p850
S'MOV ESI,0x3a\nJMP 0x00403950\n'
p851
S'be 3a 00 00 00\neb e9\n'
p852
S'.text:0000000000403960\n.text:0000000000403965\n'
p853
tp854
sS'rpl_fflush'
p855
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p856
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_0060a180)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p857
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x004048fd\nMOV RDI,RBX\nCALL 0x00401800\nTEST EAX,EAX\nJZ 0x004048fd\nMOV RDI,RBX\nCALL 0x00404910\nMOV RDI,RBX\nPOP RBX\nJMP 0x004017d0\n'
p858
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 0f cf ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 ca ce ff ff\n'
p859
S'.text:00000000004048e0\n.text:00000000004048e1\n.text:00000000004048e4\n.text:00000000004048e7\n.text:00000000004048e9\n.text:00000000004048ec\n.text:00000000004048f1\n.text:00000000004048f3\n.text:00000000004048f5\n.text:00000000004048f8\n.text:00000000004048fd\n.text:0000000000404900\n.text:0000000000404901\n'
p860
tp861
sS'__assert_fail'
p862
(S'\n__stdcall __assert_fail(char * __assertion, char * __file, uint __line, char * __function)\n'
p863
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\u000a\u000a{\u000a  (*(code *)PTR___assert_fail_0060a100)();\u000a  return;\u000a}\u000a\u000a
p864
S'JMP qword ptr [0x0060a100]\n'
p865
S'ff 25 2a 8a 20 00\n'
p866
S'.plt:00000000004016d0\n'
p867
tp868
sS'bindtextdomain'
p869
(S'\n__stdcall bindtextdomain()\n'
p870
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_0060a0a8)();\u000a  return;\u000a}\u000a\u000a
p871
S'JMP qword ptr [0x0060a0a8]\n'
p872
S'ff 25 82 8a 20 00\n'
p873
S'.plt:0000000000401620\n'
p874
tp875
sS'set_char_quoting'
p876
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p877
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p878
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x60a310\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p879
S'89 f1\n48 85 ff\nbe 10 a3 60 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p880
S'.text:00000000004026e0\n.text:00000000004026e2\n.text:00000000004026e5\n.text:00000000004026ea\n.text:00000000004026ee\n.text:00000000004026f0\n.text:00000000004026f3\n.text:00000000004026f7\n.text:00000000004026fc\n.text:00000000004026ff\n.text:0000000000402701\n.text:0000000000402703\n.text:0000000000402706\n.text:0000000000402708\n.text:000000000040270b\n.text:000000000040270d\n.text:0000000000402710\n.text:0000000000402715\n'
p881
tp882
sS'quotearg_n'
p883
(S'\n__stdcall quotearg_n(char * arg)\n'
p884
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p885
S'MOV RDX,-0x1\nMOV ECX,0x60a310\nJMP 0x004035d0\n'
p886
S'48 c7 c2 ff ff ff ff\nb9 10 a3 60 00\neb 02\n'
p887
S'.text:00000000004035c0\n.text:00000000004035c7\n.text:00000000004035cc\n'
p888
tp889
sS'close_stream'
p890
(S'\n__stdcall close_stream(FILE * stream)\n'
p891
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p892
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401590\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00401750\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x00404860\nTEST EBP,EBP\nJZ 0x004022fb\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x0040231f\nCALL 0x00401540\nMOV dword ptr [RAX],0x0\nJMP 0x0040231f\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x0040231f\nTEST CL,CL\nJNZ 0x0040231f\nCALL 0x00401540\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p893
S'55\n41 56\n53\n48 89 fb\ne8 c4 f2 ff ff\n49 89 c6\n48 89 df\ne8 79 f4 ff ff\n89 c5\n48 89 df\ne8 7f 25 00 00\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 4d f2 ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 2e f2 ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p894
S'.text:00000000004022c0\n.text:00000000004022c1\n.text:00000000004022c3\n.text:00000000004022c4\n.text:00000000004022c7\n.text:00000000004022cc\n.text:00000000004022cf\n.text:00000000004022d2\n.text:00000000004022d7\n.text:00000000004022d9\n.text:00000000004022dc\n.text:00000000004022e1\n.text:00000000004022e3\n.text:00000000004022e5\n.text:00000000004022ea\n.text:00000000004022ec\n.text:00000000004022ee\n.text:00000000004022f3\n.text:00000000004022f9\n.text:00000000004022fb\n.text:00000000004022fd\n.text:0000000000402300\n.text:0000000000402302\n.text:0000000000402304\n.text:0000000000402307\n.text:0000000000402309\n.text:000000000040230b\n.text:000000000040230d\n.text:0000000000402312\n.text:0000000000402314\n.text:0000000000402317\n.text:000000000040231c\n.text:000000000040231f\n.text:0000000000402321\n.text:0000000000402322\n.text:0000000000402324\n.text:0000000000402325\n'
p895
tp896
sS'quotearg_colon_mem'
p897
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p898
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p899
S'MOV EDX,0x3a\nJMP 0x004038e0\n'
p900
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p901
S'.text:0000000000403970\n.text:0000000000403975\n'
p902
tp903
sS'xcalloc'
p904
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p905
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p906
S'PUSH RAX\nCALL 0x00404810\nTEST RAX,RAX\nJZ 0x0040477d\nPOP RCX\nRET\nCALL 0x004047e0\n'
p907
S'50\ne8 9a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p908
S'.text:0000000000404770\n.text:0000000000404771\n.text:0000000000404776\n.text:0000000000404779\n.text:000000000040477b\n.text:000000000040477c\n.text:000000000040477d\n'
p909
tp910
sS'clear_ungetc_buffer_preserving_position'
p911
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p912
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p913
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x00404917\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x00404930\n'
p914
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p915
S'.text:0000000000404910\n.text:0000000000404914\n.text:0000000000404916\n.text:0000000000404917\n.text:0000000000404919\n.text:000000000040491e\n'
p916
tp917
sS'xnmalloc'
p918
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p919
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p920
S'MOV RAX,RDI\nMUL RSI\nJO 0x00404641\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x00404650\nPUSH RAX\nCALL 0x004047e0\n'
p921
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p922
S'.text:0000000000404630\n.text:0000000000404633\n.text:0000000000404636\n.text:0000000000404638\n.text:000000000040463c\n.text:000000000040463f\n.text:0000000000404641\n.text:0000000000404642\n'
p923
tp924
sS'quotearg_char'
p925
(S'\n__stdcall quotearg_char(char * arg)\n'
p926
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p927
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x004038e0\n'
p928
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p929
S'.text:0000000000403950\n.text:0000000000403952\n.text:0000000000403959\n.text:000000000040395b\n'
p930
tp931
sS'malloc'
p932
(S'\n__stdcall malloc(size_t __size)\n'
p933
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_0060a178)();\u000a  return pvVar1;\u000a}\u000a\u000a
p934
S'JMP qword ptr [0x0060a178]\n'
p935
S'ff 25 b2 89 20 00\n'
p936
S'.plt:00000000004017c0\n'
p937
tp938
sS'c_tolower'
p939
(S'\n__stdcall c_tolower()\n'
p940
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p941
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p942
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p943
S'.text:0000000000404ad0\n.text:0000000000404ad3\n.text:0000000000404ad6\n.text:0000000000404ad9\n.text:0000000000404adc\n'
p944
tp945
sS'getopt_long'
p946
(S'\n__stdcall getopt_long()\n'
p947
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_0060a0d8)();\u000a  return;\u000a}\u000a\u000a
p948
S'JMP qword ptr [0x0060a0d8]\n'
p949
S'ff 25 52 8a 20 00\n'
p950
S'.plt:0000000000401680\n'
p951
tp952
sS'randint_all_new'
p953
(S'\n__stdcall randint_all_new(char * name, size_t bytes_bound)\n'
p954
V\u000arandint_source * randint_all_new(char *name,size_t bytes_bound)\u000a\u000a{\u000a  randread_source *source;\u000a  randint_source *prVar1;\u000a  \u000a  source = randread_new(name,bytes_bound);\u000a  if (source != (randread_source *)0x0) {\u000a    prVar1 = randint_new(source);\u000a    return prVar1;\u000a  }\u000a  return (randint_source *)0x0;\u000a}\u000a\u000a
p955
S'PUSH RAX\nCALL 0x00404ff0\nTEST RAX,RAX\nJZ 0x00404e51\nMOV RDI,RAX\nPOP RAX\nJMP 0x00404e20\nXOR EAX,EAX\nPOP RCX\nRET\n'
p956
S'50\ne8 aa 01 00 00\n48 85 c0\n74 06\n48 89 c7\n58\neb cf\n31 c0\n59\nc3\n'
p957
S'.text:0000000000404e40\n.text:0000000000404e41\n.text:0000000000404e46\n.text:0000000000404e49\n.text:0000000000404e4b\n.text:0000000000404e4e\n.text:0000000000404e4f\n.text:0000000000404e51\n.text:0000000000404e53\n.text:0000000000404e54\n'
p958
tp959
sS'quotearg_style'
p960
(S'\n__stdcall quotearg_style(char * arg)\n'
p961
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p962
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x004037c0\n'
p963
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p964
S'.text:00000000004038a0\n.text:00000000004038a3\n.text:00000000004038a5\n.text:00000000004038a7\n.text:00000000004038a9\n.text:00000000004038ac\n'
p965
tp966
sS'puts'
p967
(S'\n__stdcall puts(char * __s)\n'
p968
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_0060a070)();\u000a  return iVar1;\u000a}\u000a\u000a
p969
S'JMP qword ptr [0x0060a070]\n'
p970
S'ff 25 ba 8a 20 00\n'
p971
S'.plt:00000000004015b0\n'
p972
tp973
sS'emit_try_help'
p974
(S'\n__stdcall emit_try_help()\n'
p975
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p976
S'PUSH RBX\nMOV RBX,qword ptr [0x0060a2e0]\nXOR EDI,EDI\nMOV ESI,0x4068a2\nMOV EDX,0x5\nCALL 0x00401630\nMOV RDX,RAX\nMOV RCX,qword ptr [0x0060a300]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x004018e0\n'
p977
S'53\n48 8b 1d 58 87 20 00\n31 ff\nbe a2 68 40 00\nba 05 00 00 00\ne8 97 fa ff ff\n48 89 c2\n48 8b 0d 5d 87 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 2d fd ff ff\n'
p978
S'.text:0000000000401b80\n.text:0000000000401b81\n.text:0000000000401b88\n.text:0000000000401b8a\n.text:0000000000401b8f\n.text:0000000000401b94\n.text:0000000000401b99\n.text:0000000000401b9c\n.text:0000000000401ba3\n.text:0000000000401ba8\n.text:0000000000401baa\n.text:0000000000401bad\n.text:0000000000401bae\n'
p979
tp980
sS'strrchr'
p981
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p982
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_0060a0e8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p983
S'JMP qword ptr [0x0060a0e8]\n'
p984
S'ff 25 42 8a 20 00\n'
p985
S'.plt:00000000004016a0\n'
p986
tp987
sS'quotearg_alloc_mem'
p988
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p989
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p990
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x60a310\nCMOVNZ R12,RCX\nCALL 0x00401540\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004027f0\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00404720\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004027f0\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x0040351a\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p991
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc 10 a3 60 00\n4c 0f 45 e1\ne8 c8 e0 ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 51 12 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p992
S'.text:0000000000403440\n.text:0000000000403441\n.text:0000000000403443\n.text:0000000000403445\n.text:0000000000403447\n.text:0000000000403449\n.text:000000000040344a\n.text:000000000040344e\n.text:0000000000403451\n.text:0000000000403456\n.text:0000000000403459\n.text:000000000040345e\n.text:0000000000403461\n.text:0000000000403466\n.text:0000000000403469\n.text:000000000040346f\n.text:0000000000403473\n.text:0000000000403478\n.text:000000000040347d\n.text:000000000040347f\n.text:0000000000403483\n.text:0000000000403485\n.text:0000000000403488\n.text:000000000040348c\n.text:0000000000403491\n.text:0000000000403495\n.text:000000000040349a\n.text:000000000040349e\n.text:00000000004034a0\n.text:00000000004034a2\n.text:00000000004034a5\n.text:00000000004034a8\n.text:00000000004034ab\n.text:00000000004034b0\n.text:00000000004034b5\n.text:00000000004034b7\n.text:00000000004034bc\n.text:00000000004034c0\n.text:00000000004034c3\n.text:00000000004034c7\n.text:00000000004034ca\n.text:00000000004034cf\n.text:00000000004034d2\n.text:00000000004034d6\n.text:00000000004034da\n.text:00000000004034dd\n.text:00000000004034e0\n.text:00000000004034e5\n.text:00000000004034ea\n.text:00000000004034ed\n.text:00000000004034f2\n.text:00000000004034f7\n.text:00000000004034f9\n.text:00000000004034fe\n.text:0000000000403503\n.text:0000000000403507\n.text:000000000040350a\n.text:000000000040350e\n.text:0000000000403513\n.text:0000000000403515\n.text:0000000000403517\n.text:000000000040351a\n.text:000000000040351d\n.text:0000000000403521\n.text:0000000000403522\n.text:0000000000403524\n.text:0000000000403526\n.text:0000000000403528\n.text:000000000040352a\n.text:000000000040352b\n'
p993
tp994
sS'quotearg_style_mem'
p995
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p996
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p997
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00403860\n'
p998
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p999
S'.text:00000000004038c0\n.text:00000000004038c3\n.text:00000000004038c6\n.text:00000000004038c8\n.text:00000000004038ca\n.text:00000000004038cc\n.text:00000000004038cf\n.text:00000000004038d2\n'
p1000
tp1001
sS'xalloc_die'
p1002
(S'\n__stdcall xalloc_die()\n'
p1003
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,0x406a4c,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1004
S'PUSH RBX\nMOV EBX,dword ptr [0x0060a240]\nXOR EDI,EDI\nMOV ESI,0x40741f\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x406a4c\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00401860\nCALL 0x00401530\n'
p1005
S'53\n8b 1d 59 5a 20 00\n31 ff\nbe 1f 74 40 00\nba 05 00 00 00\ne8 38 ce ff ff\n48 89 c1\n31 f6\nba 4c 6a 40 00\n31 c0\n89 df\ne8 55 d0 ff ff\ne8 20 cd ff ff\n'
p1006
S'.text:00000000004047e0\n.text:00000000004047e1\n.text:00000000004047e7\n.text:00000000004047e9\n.text:00000000004047ee\n.text:00000000004047f3\n.text:00000000004047f8\n.text:00000000004047fb\n.text:00000000004047fd\n.text:0000000000404802\n.text:0000000000404804\n.text:0000000000404806\n.text:000000000040480b\n'
p1007
tp1008
sS'fopen_safer'
p1009
(S'\n__stdcall fopen_safer(char * file, char * mode)\n'
p1010
V\u000aFILE * fopen_safer(char *file,char *mode)\u000a\u000a{\u000a  uint uVar1;\u000a  int __fd;\u000a  int iVar2;\u000a  FILE *fp;\u000a  int *piVar3;\u000a  \u000a  fp = (FILE *)fopen(file,mode);\u000a  if (fp != (FILE *)0x0) {\u000a    uVar1 = fileno((FILE *)fp);\u000a    if (2 < uVar1) {\u000a      return fp;\u000a    }\u000a    __fd = dup_safer();\u000a    if (__fd < 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      rpl_fclose(fp);\u000a      *piVar3 = __fd;\u000a    }\u000a    else {\u000a      iVar2 = rpl_fclose(fp);\u000a      if ((iVar2 == 0) && (fp = (FILE *)fdopen(__fd,mode), fp != (FILE *)0x0)) {\u000a        return fp;\u000a      }\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a    }\u000a  }\u000a  return (FILE *)0x0;\u000a}\u000a\u000a
p1011
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RSI\nCALL 0x00401890\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00405c0b\nMOV RDI,RBX\nCALL 0x00401790\nCMP EAX,0x2\nJA 0x00405c0d\nMOV EDI,EAX\nCALL 0x00405c20\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00405bf3\nMOV RDI,RBX\nCALL 0x00404860\nTEST EAX,EAX\nJNZ 0x00405bdc\nMOV EDI,EBP\nMOV RSI,R14\nCALL 0x00401820\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00405c0d\nCALL 0x00401540\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00401700\nMOV dword ptr [RBX],R14D\nJMP 0x00405c0b\nCALL 0x00401540\nMOV RBP,RAX\nMOV R14D,dword ptr [RBP]\nMOV RDI,RBX\nCALL 0x00404860\nMOV dword ptr [RBP],R14D\nXOR EBX,EBX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1012
S'55\n41 56\n53\n49 89 f6\ne8 f4 bc ff ff\n48 89 c3\n48 85 db\n74 67\n48 89 df\ne8 e4 bb ff ff\n83 f8 02\n77 5c\n89 c7\ne8 68 00 00 00\n89 c5\n85 ed\n78 35\n48 89 df\ne8 9a ec ff ff\n85 c0\n75 12\n89 ef\n4c 89 f6\ne8 4c bc ff ff\n48 89 c3\n48 85 db\n75 31\ne8 5f b9 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 12 bb ff ff\n44 89 33\neb 18\ne8 48 b9 ff ff\n48 89 c5\n44 8b 75 00\n48 89 df\ne8 59 ec ff ff\n44 89 75 00\n31 db\n48 89 d8\n5b\n41 5e\n5d\nc3\n'
p1013
S'.text:0000000000405b90\n.text:0000000000405b91\n.text:0000000000405b93\n.text:0000000000405b94\n.text:0000000000405b97\n.text:0000000000405b9c\n.text:0000000000405b9f\n.text:0000000000405ba2\n.text:0000000000405ba4\n.text:0000000000405ba7\n.text:0000000000405bac\n.text:0000000000405baf\n.text:0000000000405bb1\n.text:0000000000405bb3\n.text:0000000000405bb8\n.text:0000000000405bba\n.text:0000000000405bbc\n.text:0000000000405bbe\n.text:0000000000405bc1\n.text:0000000000405bc6\n.text:0000000000405bc8\n.text:0000000000405bca\n.text:0000000000405bcc\n.text:0000000000405bcf\n.text:0000000000405bd4\n.text:0000000000405bd7\n.text:0000000000405bda\n.text:0000000000405bdc\n.text:0000000000405be1\n.text:0000000000405be4\n.text:0000000000405be7\n.text:0000000000405be9\n.text:0000000000405bee\n.text:0000000000405bf1\n.text:0000000000405bf3\n.text:0000000000405bf8\n.text:0000000000405bfb\n.text:0000000000405bff\n.text:0000000000405c02\n.text:0000000000405c07\n.text:0000000000405c0b\n.text:0000000000405c0d\n.text:0000000000405c10\n.text:0000000000405c11\n.text:0000000000405c13\n.text:0000000000405c14\n'
p1014
tp1015
sS'quotearg_n_custom'
p1016
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p1017
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1018
S'MOV R8,-0x1\nJMP 0x004039e0\n'
p1019
S'49 c7 c0 ff ff ff ff\neb 07\n'
p1020
S'.text:00000000004039d0\n.text:00000000004039d7\n'
p1021
tp1022
sS'__freading'
p1023
(S'\n__stdcall __freading()\n'
p1024
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_0060a198)();\u000a  return;\u000a}\u000a\u000a
p1025
S'JMP qword ptr [0x0060a198]\n'
p1026
S'ff 25 92 89 20 00\n'
p1027
S'.plt:0000000000401800\n'
p1028
tp1029
sS'fputs_unlocked'
p1030
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p1031
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_0060a138)();\u000a  return iVar1;\u000a}\u000a\u000a
p1032
S'JMP qword ptr [0x0060a138]\n'
p1033
S'ff 25 f2 89 20 00\n'
p1034
S'.plt:0000000000401740\n'
p1035
tp1036
sS'main'
p1037
(S'\n__stdcall main(char * * argv)\n'
p1038
V\u000aint main(char **argv)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  bool bVar3;\u000a  bool bVar4;\u000a  bool bVar5;\u000a  bool bVar6;\u000a  bool bVar7;\u000a  int __fd;\u000a  int iVar8;\u000a  size_t __n;\u000a  char *__s;\u000a  size_t suff_len;\u000a  size_t x_len;\u000a  char *__s_00;\u000a  uint *puVar9;\u000a  undefined8 uVar10;\u000a  uint uVar11;\u000a  char *string;\u000a  char **in_RSI;\u000a  char *local_50;\u000a  \u000a  set_program_name(*in_RSI);\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  bindtextdomain(0x406721,"/usr/local/share/locale");\u000a  textdomain(0x406721);\u000a  atexit(maybe_close_stdout);\u000a  bVar4 = false;\u000a  bVar3 = false;\u000a  bVar5 = false;\u000a  bVar7 = false;\u000a  local_50 = (char *)0x0;\u000a  bVar6 = false;\u000a  __s_00 = (char *)0;\u000aswitchD_00401dd0_caseD_71:\u000a  bVar2 = bVar6;\u000a  iVar8 = (int)((ulong)argv & 0xffffffff);\u000a  __fd = getopt_long((ulong)argv & 0xffffffff);\u000a  if (0x55 < __fd) goto code_r0x00401dce;\u000a  if (__fd == -1) {\u000a    if (1 < (uint)(iVar8 - optind)) goto LAB_004021f2;\u000a    if (iVar8 == optind) {\u000a      string = "tmp.XXXXXXXXXX";\u000a      bVar7 = true;\u000a    }\u000a    else {\u000a      string = in_RSI[(long)optind];\u000a    }\u000a    if (__s_00 == (char *)0x0) {\u000a      __s = xstrdup(string);\u000a      string = strrchr(__s,0x58);\u000a      if (string == (char *)0x0) {\u000a        string = (char *)__rawmemchr(__s,0);\u000a      }\u000a      else {\u000a        string = string + 1;\u000a      }\u000a      suff_len = strlen(string);\u000a    }\u000a    else {\u000a      __n = strlen(string);\u000a      if ((__n == 0) || (string[__n - 1] != 'X')) {\u000a        uVar10 = dcgettext(0,"with --suffix, template %s must end in X",5);\u000a        __s = quote(string);\u000a        error(1,0,uVar10,__s);\u000a      }\u000a      suff_len = strlen(__s_00);\u000a      __s = (char *)xcharalloc(__n + 1 + suff_len);\u000a      memcpy(__s,string,__n);\u000a      string = __s + __n;\u000a      memcpy(string,__s_00,suff_len + 1);\u000a    }\u000a    if ((suff_len != 0) && (__s_00 = last_component(string), __s_00 != string)) {\u000a      uVar10 = dcgettext(0,"invalid suffix %s, contains directory separator",5);\u000a      __s_00 = quote(string);\u000a      error(1,0,uVar10,__s_00);\u000a    }\u000a    x_len = count_consecutive_X_s(__s,(size_t)(string + -(long)__s));\u000a    if (x_len < 3) {\u000a      uVar10 = dcgettext(0,"too few X\u005c's in template %s",5);\u000a      __s_00 = quote(__s);\u000a      error(1,0,uVar10,__s_00);\u000a    }\u000a    __s_00 = __s;\u000a    if (bVar7) {\u000a      if (bVar3) {\u000a        string = getenv("TMPDIR");\u000a        if (((string == (char *)0x0) || (*string == 0)) &&\u000a           ((local_50 == (char *)0x0 || (string = local_50, *local_50 == 0)))) {\u000a          string = "/tmp";\u000a        }\u000a        __s_00 = last_component(__s);\u000a        if (__s_00 != __s) {\u000a          __s_00 = "invalid template, %s, contains directory separator";\u000aLAB_00402008:\u000a          uVar10 = dcgettext(0,__s_00,5);\u000a          __s_00 = quote(__s);\u000a          error(1,0,uVar10,__s_00);\u000a        }\u000a      }\u000a      else {\u000a        if ((local_50 == (char *)0x0) || (*local_50 == 0)) {\u000a          __s_00 = getenv("TMPDIR");\u000a          if (__s_00 == (char *)0x0) {\u000a            local_50 = "/tmp";\u000a            goto LAB_00401ffa;\u000a          }\u000a          string = "/tmp";\u000a          if (*__s_00 != 0) {\u000a            string = __s_00;\u000a          }\u000a          cVar1 = *__s;\u000a        }\u000a        else {\u000aLAB_00401ffa:\u000a          cVar1 = *__s;\u000a          string = local_50;\u000a        }\u000a        if (cVar1 == '/') {\u000a          __s_00 = "invalid template, %s; with --tmpdir, it may not be absolute";\u000a          goto LAB_00402008;\u000a        }\u000a      }\u000a      __s_00 = file_name_concat(string,__s,(char **)0x0);\u000a      free(__s);\u000a    }\u000a    string = xstrdup(__s_00);\u000a    if (bVar4) {\u000a      __fd = mkdtemp_len(string,suff_len,x_len);\u000a      if (__fd == 0) {\u000a        puts(string);\u000a        if (bVar5) {\u000a          return 0;\u000a        }\u000aLAB_0040213f:\u000a        stdout_closed = 1;\u000a        __fd = close_stream(stdout);\u000a        if (__fd == 0) {\u000a          return 0;\u000a        }\u000a        puVar9 = (uint *)__errno_location();\u000a        uVar11 = *puVar9;\u000a        remove(string);\u000a        if (bVar2) {\u000a          return 1;\u000a        }\u000a        uVar10 = dcgettext(0,"write error",5);\u000a        error(0,(ulong)uVar11,uVar10,uVar10);\u000a        return 1;\u000a      }\u000a      if (bVar2) {\u000a        return 1;\u000a      }\u000a      puVar9 = (uint *)__errno_location();\u000a      uVar11 = *puVar9;\u000a      string = "failed to create directory via template %s";\u000a    }\u000a    else {\u000a      __fd = mkstemp_len(string,suff_len,x_len);\u000a      if (-1 < __fd) {\u000a        if (bVar5) {\u000a          puts(string);\u000a          return 0;\u000a        }\u000a        __fd = close(__fd);\u000a        if (__fd == 0) {\u000a          puts(string);\u000a          goto LAB_0040213f;\u000a        }\u000a      }\u000a      if (bVar2) {\u000a        return 1;\u000a      }\u000a      puVar9 = (uint *)__errno_location();\u000a      uVar11 = *puVar9;\u000a      string = "failed to create file via template %s";\u000a    }\u000a    uVar10 = dcgettext(0,string,5);\u000a    __s_00 = quote(__s_00);\u000a    error(0,(ulong)uVar11,uVar10,__s_00);\u000a    return 1;\u000a  }\u000a  if (__fd != -0x83) {\u000a    if (__fd != -0x82) goto switchD_00401dd0_caseD_57;\u000a    usage(0);\u000a  }\u000a  goto switchD_00401dd0_caseD_56;\u000acode_r0x00401dce:\u000a  bVar6 = true;\u000a  switch(__fd) {\u000a  case 0x56:\u000a    goto switchD_00401dd0_caseD_56;\u000a  default:\u000aswitchD_00401dd0_caseD_57:\u000a    usage(1);\u000aLAB_004021f2:\u000a    uVar10 = dcgettext(0,"too many templates",5);\u000a    error(0,0,uVar10,uVar10);\u000a    __fd = usage(1);\u000a    if (stdout_closed == 0) {\u000a      __fd = close_stdout();\u000a      return __fd;\u000a    }\u000a    iVar8 = close_stream(stderr);\u000a    if (iVar8 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(1);\u000a    }\u000a    return __fd;\u000a  case 100:\u000a    bVar4 = true;\u000a    bVar6 = bVar2;\u000a    goto switchD_00401dd0_caseD_71;\u000a  case 0x70:\u000a    local_50 = optarg;\u000a    break;\u000a  case 0x71:\u000a    goto switchD_00401dd0_caseD_71;\u000a  case 0x74:\u000a    bVar3 = true;\u000a    break;\u000a  case 0x75:\u000a    bVar5 = true;\u000a    bVar6 = bVar2;\u000a    goto switchD_00401dd0_caseD_71;\u000a  case 0x80:\u000a    bVar6 = bVar2;\u000a    __s_00 = optarg;\u000a    goto switchD_00401dd0_caseD_71;\u000a  }\u000a  bVar7 = true;\u000a  bVar6 = bVar2;\u000a  goto switchD_00401dd0_caseD_71;\u000aswitchD_00401dd0_caseD_56:\u000a  version_etc(stdout,"mktemp","GNU coreutils",Version,"Jim Meyering","Eric Blake",0);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p1039
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBX,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [RBX]\nCALL 0x004025d0\nMOV EDI,0x6\nMOV ESI,0x4071e9\nCALL 0x00401830\nMOV EDI,0x406721\nMOV ESI,0x4066fd\nCALL 0x00401620\nMOV EDI,0x406721\nCALL 0x00401600\nMOV EDI,0x402220\nCALL 0x00405e70\nXOR R12D,R12D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x28],RAX\nXOR R14D,R14D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nXOR R15D,R15D\nXOR R13D,R13D\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nJMP 0x00401da0\nMOV RAX,qword ptr [0x0060a2b8]\nMOV qword ptr [RSP + 0x18],RAX\nJMP 0x00401d80\nMOV R15,qword ptr [0x0060a2b8]\nJMP 0x00401da0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00401da0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x28],RAX\nJMP 0x00401d80\nMOV R12B,0x1\nJMP 0x00401da0\nMOV R14B,0x1\nNOP word ptr [RAX + RAX*0x1]\nMOV ECX,R13D\nMOV R13B,CL\nMOV EDX,0x406715\nMOV ECX,0x406030\nXOR R8D,R8D\nMOV EDI,EBP\nMOV RSI,RBX\nCALL 0x00401680\nCMP EAX,0x55\nJLE 0x00401dd7\nADD EAX,-0x56\nCMP EAX,0x2a\nJA 0x004021e8\nMOV CL,0x1\nJMP qword ptr [0x405ed0 + RAX*0x8]\nCMP EAX,-0x1\nJNZ 0x00402199\nMOVSXD RAX,dword ptr [0x0060a2b0]\nSUB EBP,EAX\nCMP EBP,0x2\nJNC 0x004021f2\nTEST EBP,EBP\nJZ 0x00401dfc\nMOV RBP,qword ptr [RBX + RAX*0x8]\nJMP 0x00401e08\nMOV EBP,0x406a34\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nTEST R15,R15\nMOV qword ptr [RSP + 0x20],R14\nMOV qword ptr [RSP + 0x30],R12\nJZ 0x00401ea4\nMOV RDI,RBP\nCALL 0x00401650\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00401e32\nCMP byte ptr [RBP + RBX*0x1 + -0x1],0x58\nJZ 0x00401e62\nXOR EDI,EDI\nMOV ESI,0x406756\nMOV EDX,0x5\nCALL 0x00401630\nMOV R14,RAX\nMOV RDI,RBP\nCALL 0x00403ac0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R14\nCALL 0x00401860\nMOV RDI,R15\nCALL 0x00401650\nMOV R14,RAX\nLEA RDI,[RBX + R14*0x1 + 0x1]\nCALL 0x00404720\nMOV R12,RAX\nMOV RDI,R12\nMOV RSI,RBP\nMOV RDX,RBX\nCALL 0x00401780\nMOV RBP,R12\nADD RBP,RBX\nLEA RDX,[R14 + 0x1]\nMOV RDI,RBP\nMOV RSI,R15\nCALL 0x00401780\nTEST R14,R14\nJNZ 0x00401ee6\nJMP 0x00401f23\nMOV RDI,RBP\nCALL 0x004047c0\nMOV R12,RAX\nMOV ESI,0x58\nMOV RDI,R12\nCALL 0x004016a0\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00401ec9\nINC RBP\nJMP 0x00401ed6\nXOR ESI,ESI\nMOV RDI,R12\nCALL 0x004017b0\nMOV RBP,RAX\nMOV RDI,RBP\nCALL 0x00401650\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00401f23\nMOV RDI,RBP\nCALL 0x00402410\nCMP RAX,RBP\nJZ 0x00401f23\nXOR EDI,EDI\nMOV ESI,0x40677f\nMOV EDX,0x5\nCALL 0x00401630\nMOV RBX,RAX\nMOV RDI,RBP\nCALL 0x00403ac0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401860\nSUB RBP,R12\nMOV RDI,R12\nMOV RSI,RBP\nCALL 0x00402250\nMOV R15,RAX\nCMP R15,0x2\nJA 0x00401f6a\nXOR EDI,EDI\nMOV ESI,0x4067af\nMOV EDX,0x5\nCALL 0x00401630\nMOV RBX,RAX\nMOV RDI,R12\nCALL 0x00403ac0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401860\nTEST byte ptr [RSP + 0x10],0x1\nJZ 0x0040204c\nCMP byte ptr [RSP + 0x28],0x0\nJZ 0x00401fc1\nMOV EDI,0x4067ca\nCALL 0x00401500\nMOV RBP,RAX\nTEST RBP,RBP\nMOV RAX,qword ptr [RSP + 0x18]\nJZ 0x00401f99\nCMP byte ptr [RBP],0x0\nJNZ 0x00401fab\nTEST RAX,RAX\nJZ 0x00401fa6\nCMP byte ptr [RAX],0x0\nMOV RBP,RAX\nJNZ 0x00401fab\nMOV EBP,0x4067d1\nMOV RDI,R12\nCALL 0x00402410\nCMP RAX,R12\nJZ 0x00402031\nXOR EDI,EDI\nMOV ESI,0x4067d6\nJMP 0x00402008\nMOV RBP,qword ptr [RSP + 0x18]\nTEST RBP,RBP\nJZ 0x00401fd1\nCMP byte ptr [RBP],0x0\nJNZ 0x00401ffa\nMOV EDI,0x4067ca\nCALL 0x00401500\nTEST RAX,RAX\nJZ 0x00401ff5\nCMP byte ptr [RAX],0x0\nMOV EBP,0x4067d1\nCMOVNZ RBP,RAX\nCMP byte ptr [R12],0x2f\nJZ 0x00402001\nJMP 0x00402031\nMOV EBP,0x4067d1\nCMP byte ptr [R12],0x2f\nJNZ 0x00402031\nXOR EDI,EDI\nMOV ESI,0x406809\nMOV EDX,0x5\nCALL 0x00401630\nMOV RBX,RAX\nMOV RDI,R12\nCALL 0x00403ac0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401860\nXOR EDX,EDX\nMOV RDI,RBP\nMOV RSI,R12\nCALL 0x004024a0\nMOV RBX,RAX\nMOV RDI,R12\nCALL 0x00401510\nMOV R12,RBX\nMOV RDI,R12\nCALL 0x004047c0\nMOV RBP,RAX\nCMP byte ptr [RSP + 0x30],0x0\nJZ 0x0040209b\nXOR ECX,ECX\nMOV RBX,qword ptr [RSP + 0x20]\nTEST BL,BL\nSETNZ CL\nMOV RDI,RBP\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00402280\nTEST EAX,EAX\nJZ 0x004020ca\nMOV R14D,0x1\nTEST R13B,R13B\nJNZ 0x00402125\nCALL 0x00401540\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x406845\nJMP 0x004020ff\nXOR ECX,ECX\nMOV RBX,qword ptr [RSP + 0x20]\nTEST BL,BL\nSETNZ CL\nMOV RDI,RBP\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004022a0\nTEST EAX,EAX\nJS 0x004020e6\nTEST BL,BL\nJZ 0x004020db\nMOV RDI,RBP\nCALL 0x004015b0\nXOR R14D,R14D\nJMP 0x00402125\nMOV RDI,RBP\nCALL 0x004015b0\nXOR R14D,R14D\nTEST BL,BL\nJNZ 0x00402125\nJMP 0x0040213f\nMOV EDI,EAX\nCALL 0x00401700\nTEST EAX,EAX\nJZ 0x00402137\nMOV R14D,0x1\nTEST R13B,R13B\nJNZ 0x00402125\nCALL 0x00401540\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x406870\nMOV EDX,0x5\nCALL 0x00401630\nMOV RBP,RAX\nMOV RDI,R12\nCALL 0x00403ac0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00401860\nMOV EAX,R14D\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,RBP\nCALL 0x004015b0\nMOV byte ptr [0x0060a2e9],0x1\nMOV RDI,qword ptr [0x0060a2a8]\nCALL 0x004022c0\nTEST EAX,EAX\nJZ 0x00402194\nCALL 0x00401540\nMOV EBX,dword ptr [RAX]\nMOV RDI,RBP\nCALL 0x00401550\nMOV R14D,0x1\nTEST R13B,R13B\nJNZ 0x00402125\nXOR EDI,EDI\nMOV ESI,0x406896\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00401860\nJMP 0x00402125\nXOR R14D,R14D\nJMP 0x00402125\nCMP EAX,0xffffff7d\nJZ 0x004021ae\nCMP EAX,0xffffff7e\nJNZ 0x004021e8\nXOR EDI,EDI\nCALL 0x00401a20\nMOV RDI,qword ptr [0x0060a2a8]\nMOV RCX,qword ptr [0x0060a238]\nMOV qword ptr [RSP],0x0\nMOV ESI,0x4066f6\nMOV EDX,0x40671d\nMOV R8D,0x40672b\nMOV R9D,0x406738\nXOR EAX,EAX\nCALL 0x00404520\nXOR EDI,EDI\nCALL 0x004018c0\nMOV EDI,0x1\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x406743\nMOV EDX,0x5\nCALL 0x00401630\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401860\nMOV EDI,0x1\nCALL 0x00401a20\nNOP\n'
p1040
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 f3\n89 fd\n48 8b 3b\ne8 c5 08 00 00\nbf 06 00 00 00\nbe e9 71 40 00\ne8 16 fb ff ff\nbf 21 67 40 00\nbe fd 66 40 00\ne8 f7 f8 ff ff\nbf 21 67 40 00\ne8 cd f8 ff ff\nbf 20 22 40 00\ne8 33 41 00 00\n45 31 e4\n31 c0\n48 89 44 24 28\n45 31 f6\n31 c0\n48 89 44 24 10\n45 31 ff\n45 31 ed\n31 c0\n48 89 44 24 18\neb 40\n48 8b 05 51 85 20 00\n48 89 44 24 18\neb 12\n4c 8b 3d 43 85 20 00\neb 29\nb0 01\n48 89 44 24 10\neb 17\nb0 01\n48 89 44 24 28\neb ee\n41 b4 01\neb 09\n41 b6 01\n66 0f 1f 44 00 00\n44 89 e9\n41 88 cd\nba 15 67 40 00\nb9 30 60 40 00\n45 31 c0\n89 ef\n48 89 de\ne8 c3 f8 ff ff\n83 f8 55\n7e 15\n83 c0 aa\n83 f8 2a\n0f 87 1a 04 00 00\nb1 01\nff 24 c5 d0 5e 40 00\n83 f8 ff\n0f 85 b9 03 00 00\n48 63 05 c9 84 20 00\n29 c5\n83 fd 02\n0f 83 00 04 00 00\n85 ed\n74 06\n48 8b 2c c3\neb 0c\nbd 34 6a 40 00\nb0 01\n48 89 44 24 10\n4d 85 ff\n4c 89 74 24 20\n4c 89 64 24 30\n0f 84 89 00 00 00\n48 89 ef\ne8 2d f8 ff ff\n48 89 c3\n48 85 db\n74 07\n80 7c 1d ff 58\n74 30\n31 ff\nbe 56 67 40 00\nba 05 00 00 00\ne8 ed f7 ff ff\n49 89 c6\n48 89 ef\ne8 72 1c 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n4c 89 f2\ne8 fe f9 ff ff\n4c 89 ff\ne8 e6 f7 ff ff\n49 89 c6\n4a 8d 7c 33 01\ne8 a9 28 00 00\n49 89 c4\n4c 89 e7\n48 89 ee\n48 89 da\ne8 f8 f8 ff ff\n4c 89 e5\n48 01 dd\n49 8d 56 01\n48 89 ef\n4c 89 fe\ne8 e3 f8 ff ff\n4d 85 f6\n75 44\neb 7f\n48 89 ef\ne8 14 29 00 00\n49 89 c4\nbe 58 00 00 00\n4c 89 e7\ne8 e4 f7 ff ff\n48 89 c5\n48 85 ed\n74 05\n48 ff c5\neb 0d\n31 f6\n4c 89 e7\ne8 dd f8 ff ff\n48 89 c5\n48 89 ef\ne8 72 f7 ff ff\n49 89 c6\n4d 85 f6\n74 3d\n48 89 ef\ne8 22 05 00 00\n48 39 e8\n74 30\n31 ff\nbe 7f 67 40 00\nba 05 00 00 00\ne8 2c f7 ff ff\n48 89 c3\n48 89 ef\ne8 b1 1b 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 3d f9 ff ff\n4c 29 e5\n4c 89 e7\n48 89 ee\ne8 1f 03 00 00\n49 89 c7\n49 83 ff 02\n77 30\n31 ff\nbe af 67 40 00\nba 05 00 00 00\ne8 e5 f6 ff ff\n48 89 c3\n4c 89 e7\ne8 6a 1b 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 f6 f8 ff ff\nf6 44 24 10 01\n0f 84 d7 00 00 00\n80 7c 24 28 00\n74 45\nbf ca 67 40 00\ne8 7a f5 ff ff\n48 89 c5\n48 85 ed\n48 8b 44 24 18\n74 06\n80 7d 00 00\n75 12\n48 85 c0\n74 08\n80 38 00\n48 89 c5\n75 05\nbd d1 67 40 00\n4c 89 e7\ne8 5d 04 00 00\n4c 39 e0\n74 79\n31 ff\nbe d6 67 40 00\neb 47\n48 8b 6c 24 18\n48 85 ed\n74 06\n80 7d 00 00\n75 29\nbf ca 67 40 00\ne8 25 f5 ff ff\n48 85 c0\n74 15\n80 38 00\nbd d1 67 40 00\n48 0f 45 e8\n41 80 3c 24 2f\n74 0e\neb 3c\nbd d1 67 40 00\n41 80 3c 24 2f\n75 30\n31 ff\nbe 09 68 40 00\nba 05 00 00 00\ne8 1e f6 ff ff\n48 89 c3\n4c 89 e7\ne8 a3 1a 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 2f f8 ff ff\n31 d2\n48 89 ef\n4c 89 e6\ne8 62 04 00 00\n48 89 c3\n4c 89 e7\ne8 c7 f4 ff ff\n49 89 dc\n4c 89 e7\ne8 6c 27 00 00\n48 89 c5\n80 7c 24 30 00\n74 3d\n31 c9\n48 8b 5c 24 20\n84 db\n0f 95 c1\n48 89 ef\n4c 89 f6\n4c 89 fa\ne8 08 02 00 00\n85 c0\n74 4e\n41 be 01 00 00 00\n45 84 ed\n0f 85 9a 00 00 00\ne8 b0 f4 ff ff\n8b 18\n31 ff\nbe 45 68 40 00\neb 64\n31 c9\n48 8b 5c 24 20\n84 db\n0f 95 c1\n48 89 ef\n4c 89 f6\n4c 89 fa\ne8 eb 01 00 00\n85 c0\n78 2d\n84 db\n74 1e\n48 89 ef\ne8 eb f4 ff ff\n45 31 f6\neb 5b\n48 89 ef\ne8 de f4 ff ff\n45 31 f6\n84 db\n75 4c\neb 64\n89 c7\ne8 1e f6 ff ff\n85 c0\n74 51\n41 be 01 00 00 00\n45 84 ed\n75 34\ne8 4a f4 ff ff\n8b 18\n31 ff\nbe 70 68 40 00\nba 05 00 00 00\ne8 27 f5 ff ff\n48 89 c5\n4c 89 e7\ne8 ac 19 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 3b f7 ff ff\n44 89 f0\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 89 ef\ne8 71 f4 ff ff\nc6 05 a3 81 20 00 01\n48 8b 3d 5b 81 20 00\ne8 6e 01 00 00\n85 c0\n74 3e\ne8 e5 f3 ff ff\n8b 18\n48 89 ef\ne8 eb f3 ff ff\n41 be 01 00 00 00\n45 84 ed\n75 b5\n31 ff\nbe 96 68 40 00\nba 05 00 00 00\ne8 af f4 ff ff\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ca\ne8 ce f6 ff ff\neb 91\n45 31 f6\neb 8c\n3d 7d ff ff ff\n74 0e\n3d 7e ff ff ff\n75 41\n31 ff\ne8 72 f8 ff ff\n48 8b 3d f3 80 20 00\n48 8b 0d 7c 80 20 00\n48 c7 04 24 00 00 00 00\nbe f6 66 40 00\nba 1d 67 40 00\n41 b8 2b 67 40 00\n41 b9 38 67 40 00\n31 c0\ne8 3f 23 00 00\n31 ff\ne8 d8 f6 ff ff\nbf 01 00 00 00\ne8 2e f8 ff ff\n31 ff\nbe 43 67 40 00\nba 05 00 00 00\ne8 2d f4 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 4c f6 ff ff\nbf 01 00 00 00\ne8 02 f8 ff ff\n66 90\n'
p1041
S'.text:0000000000401cf0\n.text:0000000000401cf1\n.text:0000000000401cf3\n.text:0000000000401cf5\n.text:0000000000401cf7\n.text:0000000000401cf9\n.text:0000000000401cfa\n.text:0000000000401cfe\n.text:0000000000401d01\n.text:0000000000401d03\n.text:0000000000401d06\n.text:0000000000401d0b\n.text:0000000000401d10\n.text:0000000000401d15\n.text:0000000000401d1a\n.text:0000000000401d1f\n.text:0000000000401d24\n.text:0000000000401d29\n.text:0000000000401d2e\n.text:0000000000401d33\n.text:0000000000401d38\n.text:0000000000401d3d\n.text:0000000000401d40\n.text:0000000000401d42\n.text:0000000000401d47\n.text:0000000000401d4a\n.text:0000000000401d4c\n.text:0000000000401d51\n.text:0000000000401d54\n.text:0000000000401d57\n.text:0000000000401d59\n.text:0000000000401d5e\n.text:0000000000401d60\n.text:0000000000401d67\n.text:0000000000401d6c\n.text:0000000000401d6e\n.text:0000000000401d75\n.text:0000000000401d80\n.text:0000000000401d82\n.text:0000000000401d87\n.text:0000000000401d89\n.text:0000000000401d8b\n.text:0000000000401d90\n.text:0000000000401d92\n.text:0000000000401d95\n.text:0000000000401d97\n.text:0000000000401d9a\n.text:0000000000401da0\n.text:0000000000401da3\n.text:0000000000401da6\n.text:0000000000401dab\n.text:0000000000401db0\n.text:0000000000401db3\n.text:0000000000401db5\n.text:0000000000401db8\n.text:0000000000401dbd\n.text:0000000000401dc0\n.text:0000000000401dc2\n.text:0000000000401dc5\n.text:0000000000401dc8\n.text:0000000000401dce\n.text:0000000000401dd0\n.text:0000000000401dd7\n.text:0000000000401dda\n.text:0000000000401de0\n.text:0000000000401de7\n.text:0000000000401de9\n.text:0000000000401dec\n.text:0000000000401df2\n.text:0000000000401df4\n.text:0000000000401df6\n.text:0000000000401dfa\n.text:0000000000401dfc\n.text:0000000000401e01\n.text:0000000000401e03\n.text:0000000000401e08\n.text:0000000000401e0b\n.text:0000000000401e10\n.text:0000000000401e15\n.text:0000000000401e1b\n.text:0000000000401e1e\n.text:0000000000401e23\n.text:0000000000401e26\n.text:0000000000401e29\n.text:0000000000401e2b\n.text:0000000000401e30\n.text:0000000000401e32\n.text:0000000000401e34\n.text:0000000000401e39\n.text:0000000000401e3e\n.text:0000000000401e43\n.text:0000000000401e46\n.text:0000000000401e49\n.text:0000000000401e4e\n.text:0000000000401e51\n.text:0000000000401e56\n.text:0000000000401e58\n.text:0000000000401e5a\n.text:0000000000401e5d\n.text:0000000000401e62\n.text:0000000000401e65\n.text:0000000000401e6a\n.text:0000000000401e6d\n.text:0000000000401e72\n.text:0000000000401e77\n.text:0000000000401e7a\n.text:0000000000401e7d\n.text:0000000000401e80\n.text:0000000000401e83\n.text:0000000000401e88\n.text:0000000000401e8b\n.text:0000000000401e8e\n.text:0000000000401e92\n.text:0000000000401e95\n.text:0000000000401e98\n.text:0000000000401e9d\n.text:0000000000401ea0\n.text:0000000000401ea2\n.text:0000000000401ea4\n.text:0000000000401ea7\n.text:0000000000401eac\n.text:0000000000401eaf\n.text:0000000000401eb4\n.text:0000000000401eb7\n.text:0000000000401ebc\n.text:0000000000401ebf\n.text:0000000000401ec2\n.text:0000000000401ec4\n.text:0000000000401ec7\n.text:0000000000401ec9\n.text:0000000000401ecb\n.text:0000000000401ece\n.text:0000000000401ed3\n.text:0000000000401ed6\n.text:0000000000401ed9\n.text:0000000000401ede\n.text:0000000000401ee1\n.text:0000000000401ee4\n.text:0000000000401ee6\n.text:0000000000401ee9\n.text:0000000000401eee\n.text:0000000000401ef1\n.text:0000000000401ef3\n.text:0000000000401ef5\n.text:0000000000401efa\n.text:0000000000401eff\n.text:0000000000401f04\n.text:0000000000401f07\n.text:0000000000401f0a\n.text:0000000000401f0f\n.text:0000000000401f12\n.text:0000000000401f17\n.text:0000000000401f19\n.text:0000000000401f1b\n.text:0000000000401f1e\n.text:0000000000401f23\n.text:0000000000401f26\n.text:0000000000401f29\n.text:0000000000401f2c\n.text:0000000000401f31\n.text:0000000000401f34\n.text:0000000000401f38\n.text:0000000000401f3a\n.text:0000000000401f3c\n.text:0000000000401f41\n.text:0000000000401f46\n.text:0000000000401f4b\n.text:0000000000401f4e\n.text:0000000000401f51\n.text:0000000000401f56\n.text:0000000000401f59\n.text:0000000000401f5e\n.text:0000000000401f60\n.text:0000000000401f62\n.text:0000000000401f65\n.text:0000000000401f6a\n.text:0000000000401f6f\n.text:0000000000401f75\n.text:0000000000401f7a\n.text:0000000000401f7c\n.text:0000000000401f81\n.text:0000000000401f86\n.text:0000000000401f89\n.text:0000000000401f8c\n.text:0000000000401f91\n.text:0000000000401f93\n.text:0000000000401f97\n.text:0000000000401f99\n.text:0000000000401f9c\n.text:0000000000401f9e\n.text:0000000000401fa1\n.text:0000000000401fa4\n.text:0000000000401fa6\n.text:0000000000401fab\n.text:0000000000401fae\n.text:0000000000401fb3\n.text:0000000000401fb6\n.text:0000000000401fb8\n.text:0000000000401fba\n.text:0000000000401fbf\n.text:0000000000401fc1\n.text:0000000000401fc6\n.text:0000000000401fc9\n.text:0000000000401fcb\n.text:0000000000401fcf\n.text:0000000000401fd1\n.text:0000000000401fd6\n.text:0000000000401fdb\n.text:0000000000401fde\n.text:0000000000401fe0\n.text:0000000000401fe3\n.text:0000000000401fe8\n.text:0000000000401fec\n.text:0000000000401ff1\n.text:0000000000401ff3\n.text:0000000000401ff5\n.text:0000000000401ffa\n.text:0000000000401fff\n.text:0000000000402001\n.text:0000000000402003\n.text:0000000000402008\n.text:000000000040200d\n.text:0000000000402012\n.text:0000000000402015\n.text:0000000000402018\n.text:000000000040201d\n.text:0000000000402020\n.text:0000000000402025\n.text:0000000000402027\n.text:0000000000402029\n.text:000000000040202c\n.text:0000000000402031\n.text:0000000000402033\n.text:0000000000402036\n.text:0000000000402039\n.text:000000000040203e\n.text:0000000000402041\n.text:0000000000402044\n.text:0000000000402049\n.text:000000000040204c\n.text:000000000040204f\n.text:0000000000402054\n.text:0000000000402057\n.text:000000000040205c\n.text:000000000040205e\n.text:0000000000402060\n.text:0000000000402065\n.text:0000000000402067\n.text:000000000040206a\n.text:000000000040206d\n.text:0000000000402070\n.text:0000000000402073\n.text:0000000000402078\n.text:000000000040207a\n.text:000000000040207c\n.text:0000000000402082\n.text:0000000000402085\n.text:000000000040208b\n.text:0000000000402090\n.text:0000000000402092\n.text:0000000000402094\n.text:0000000000402099\n.text:000000000040209b\n.text:000000000040209d\n.text:00000000004020a2\n.text:00000000004020a4\n.text:00000000004020a7\n.text:00000000004020aa\n.text:00000000004020ad\n.text:00000000004020b0\n.text:00000000004020b5\n.text:00000000004020b7\n.text:00000000004020b9\n.text:00000000004020bb\n.text:00000000004020bd\n.text:00000000004020c0\n.text:00000000004020c5\n.text:00000000004020c8\n.text:00000000004020ca\n.text:00000000004020cd\n.text:00000000004020d2\n.text:00000000004020d5\n.text:00000000004020d7\n.text:00000000004020d9\n.text:00000000004020db\n.text:00000000004020dd\n.text:00000000004020e2\n.text:00000000004020e4\n.text:00000000004020e6\n.text:00000000004020ec\n.text:00000000004020ef\n.text:00000000004020f1\n.text:00000000004020f6\n.text:00000000004020f8\n.text:00000000004020fa\n.text:00000000004020ff\n.text:0000000000402104\n.text:0000000000402109\n.text:000000000040210c\n.text:000000000040210f\n.text:0000000000402114\n.text:0000000000402117\n.text:0000000000402119\n.text:000000000040211b\n.text:000000000040211d\n.text:0000000000402120\n.text:0000000000402125\n.text:0000000000402128\n.text:000000000040212c\n.text:000000000040212d\n.text:000000000040212f\n.text:0000000000402131\n.text:0000000000402133\n.text:0000000000402135\n.text:0000000000402136\n.text:0000000000402137\n.text:000000000040213a\n.text:000000000040213f\n.text:0000000000402146\n.text:000000000040214d\n.text:0000000000402152\n.text:0000000000402154\n.text:0000000000402156\n.text:000000000040215b\n.text:000000000040215d\n.text:0000000000402160\n.text:0000000000402165\n.text:000000000040216b\n.text:000000000040216e\n.text:0000000000402170\n.text:0000000000402172\n.text:0000000000402177\n.text:000000000040217c\n.text:0000000000402181\n.text:0000000000402184\n.text:0000000000402186\n.text:0000000000402188\n.text:000000000040218a\n.text:000000000040218d\n.text:0000000000402192\n.text:0000000000402194\n.text:0000000000402197\n.text:0000000000402199\n.text:000000000040219e\n.text:00000000004021a0\n.text:00000000004021a5\n.text:00000000004021a7\n.text:00000000004021a9\n.text:00000000004021ae\n.text:00000000004021b5\n.text:00000000004021bc\n.text:00000000004021c4\n.text:00000000004021c9\n.text:00000000004021ce\n.text:00000000004021d4\n.text:00000000004021da\n.text:00000000004021dc\n.text:00000000004021e1\n.text:00000000004021e3\n.text:00000000004021e8\n.text:00000000004021ed\n.text:00000000004021f2\n.text:00000000004021f4\n.text:00000000004021f9\n.text:00000000004021fe\n.text:0000000000402203\n.text:0000000000402206\n.text:0000000000402208\n.text:000000000040220a\n.text:000000000040220c\n.text:000000000040220f\n.text:0000000000402214\n.text:0000000000402219\n.text:000000000040221e\n'
p1042
tp1043
sS'xcharalloc'
p1044
(S'\n__stdcall xcharalloc(size_t n)\n'
p1045
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1046
S'JMP 0x00404650\n'
p1047
S'e9 2b ff ff ff\n'
p1048
S'.text:0000000000404720\n'
p1049
tp1050
sS'c_isupper'
p1051
(S'\n__stdcall c_isupper()\n'
p1052
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1053
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1054
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1055
S'.text:0000000000404aa0\n.text:0000000000404aa3\n.text:0000000000404aa6\n.text:0000000000404aa9\n'
p1056
tp1057
sS'c_isalnum'
p1058
(S'\n__stdcall c_isalnum()\n'
p1059
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1060
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x004049bb\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x004049bb\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x004049ba\nXOR EAX,EAX\nRET\n'
p1061
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p1062
S'.text:00000000004049a0\n.text:00000000004049a2\n.text:00000000004049a5\n.text:00000000004049a8\n.text:00000000004049aa\n.text:00000000004049b4\n.text:00000000004049b8\n.text:00000000004049ba\n.text:00000000004049bb\n.text:00000000004049be\n.text:00000000004049c1\n.text:00000000004049c3\n.text:00000000004049c5\n'
p1063
tp1064
sS'randread_set_handler'
p1065
(S'\n__stdcall randread_set_handler(randread_source * s, anon_subr_void_void_ptr * handler)\n'
p1066
V\u000avoid randread_set_handler(randread_source *s,void (*handler)(void *))\u000a\u000a{\u000a  s->handler = handler;\u000a  return;\u000a}\u000a\u000a
p1067
S'MOV qword ptr [RDI + 0x8],RSI\nRET\n'
p1068
S'48 89 77 08\nc3\n'
p1069
S'.text:0000000000405270\n.text:0000000000405274\n'
p1070
tp1071
sS'__errno_location'
p1072
(S'\n__stdcall __errno_location()\n'
p1073
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_0060a038)();\u000a  return piVar1;\u000a}\u000a\u000a
p1074
S'JMP qword ptr [0x0060a038]\n'
p1075
S'ff 25 f2 8a 20 00\n'
p1076
S'.plt:0000000000401540\n'
p1077
tp1078
sS'x2nrealloc'
p1079
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p1080
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p1081
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x004046ec\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00404719\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x0040470a\nTEST RCX,RCX\nJNZ 0x0040470a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x00404690\nPUSH RAX\nCALL 0x004047e0\n'
p1082
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p1083
S'.text:00000000004046c0\n.text:00000000004046c3\n.text:00000000004046c6\n.text:00000000004046c9\n.text:00000000004046cb\n.text:00000000004046d5\n.text:00000000004046d7\n.text:00000000004046da\n.text:00000000004046dd\n.text:00000000004046df\n.text:00000000004046e2\n.text:00000000004046e5\n.text:00000000004046ea\n.text:00000000004046ec\n.text:00000000004046ef\n.text:00000000004046f1\n.text:00000000004046f6\n.text:00000000004046f8\n.text:00000000004046fb\n.text:00000000004046fd\n.text:0000000000404704\n.text:0000000000404707\n.text:000000000040470a\n.text:000000000040470d\n.text:0000000000404711\n.text:0000000000404714\n.text:0000000000404719\n.text:000000000040471a\n'
p1084
tp1085
sS'quotearg_n_options'
p1086
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p1087
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p1088
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x00401540\nTEST R12D,R12D\nJS 0x00403781\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x0060a248]\nCMP dword ptr [0x0060a250],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x0040369b\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x60a258\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x00404690\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x0060a248],R15\nJNZ 0x00403662\nMOVUPS XMM0,xmmword ptr [0x0060a258]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x0060a250]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x004016e0\nMOV dword ptr [0x0060a250],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x004027f0\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x004036fd\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x0040376b\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x60a350\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x00403728\nCALL 0x00401510\nMOV RDI,R15\nCALL 0x00404720\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x004027f0\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401530\n'
p1089
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 51 df ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 3e 6c 20 00\n44 39 25 3f 6c 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 58 a2 60 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 48 10 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d f3 6b 20 00\n75 0b\n0f 10 05 fa 6b 20 00\n41 0f 11 07\n8b 05 e8 6b 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 5d e0 ff ff\n89 1d c7 6b 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 50 a3 60 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 e8 dd ff ff\n4c 89 ff\ne8 f0 0f 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 aa dd ff ff\n'
p1090
S'.text:00000000004035d0\n.text:00000000004035d1\n.text:00000000004035d3\n.text:00000000004035d5\n.text:00000000004035d7\n.text:00000000004035d9\n.text:00000000004035da\n.text:00000000004035de\n.text:00000000004035e1\n.text:00000000004035e4\n.text:00000000004035e7\n.text:00000000004035ea\n.text:00000000004035ef\n.text:00000000004035f2\n.text:00000000004035f8\n.text:00000000004035fd\n.text:00000000004035ff\n.text:0000000000403603\n.text:000000000040360a\n.text:0000000000403611\n.text:0000000000403616\n.text:000000000040361b\n.text:0000000000403620\n.text:0000000000403622\n.text:0000000000403627\n.text:000000000040362a\n.text:000000000040362d\n.text:0000000000403633\n.text:0000000000403635\n.text:0000000000403638\n.text:000000000040363c\n.text:000000000040363f\n.text:0000000000403643\n.text:0000000000403648\n.text:000000000040364b\n.text:000000000040364e\n.text:0000000000403655\n.text:0000000000403657\n.text:000000000040365e\n.text:0000000000403662\n.text:0000000000403668\n.text:000000000040366b\n.text:000000000040366f\n.text:0000000000403672\n.text:0000000000403675\n.text:0000000000403679\n.text:000000000040367b\n.text:000000000040367e\n.text:0000000000403683\n.text:0000000000403689\n.text:000000000040368c\n.text:0000000000403691\n.text:0000000000403696\n.text:000000000040369b\n.text:000000000040369e\n.text:00000000004036a2\n.text:00000000004036a6\n.text:00000000004036ab\n.text:00000000004036af\n.text:00000000004036b3\n.text:00000000004036b7\n.text:00000000004036bb\n.text:00000000004036bf\n.text:00000000004036c4\n.text:00000000004036c7\n.text:00000000004036ca\n.text:00000000004036cd\n.text:00000000004036d2\n.text:00000000004036d5\n.text:00000000004036d8\n.text:00000000004036db\n.text:00000000004036dc\n.text:00000000004036e1\n.text:00000000004036e5\n.text:00000000004036e8\n.text:00000000004036eb\n.text:00000000004036ed\n.text:00000000004036f2\n.text:00000000004036f6\n.text:00000000004036fb\n.text:00000000004036fd\n.text:0000000000403701\n.text:0000000000403706\n.text:0000000000403709\n.text:000000000040370c\n.text:0000000000403711\n.text:0000000000403716\n.text:0000000000403719\n.text:000000000040371e\n.text:0000000000403721\n.text:0000000000403723\n.text:0000000000403728\n.text:000000000040372b\n.text:0000000000403730\n.text:0000000000403733\n.text:0000000000403736\n.text:000000000040373b\n.text:000000000040373e\n.text:0000000000403742\n.text:0000000000403745\n.text:0000000000403748\n.text:000000000040374d\n.text:0000000000403752\n.text:0000000000403757\n.text:000000000040375a\n.text:000000000040375d\n.text:000000000040375e\n.text:0000000000403763\n.text:0000000000403767\n.text:000000000040376b\n.text:000000000040376f\n.text:0000000000403772\n.text:0000000000403776\n.text:0000000000403777\n.text:0000000000403779\n.text:000000000040377b\n.text:000000000040377d\n.text:000000000040377f\n.text:0000000000403780\n.text:0000000000403781\n'
p1091
tp1092
sS'strcmp'
p1093
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1094
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_0060a150)();\u000a  return iVar1;\u000a}\u000a\u000a
p1095
S'JMP qword ptr [0x0060a150]\n'
p1096
S'ff 25 da 89 20 00\n'
p1097
S'.plt:0000000000401770\n'
p1098
tp1099
sS'c_isalpha'
p1100
(S'\n__stdcall c_isalpha()\n'
p1101
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1102
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x004049eb\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1103
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1104
S'.text:00000000004049d0\n.text:00000000004049d3\n.text:00000000004049d6\n.text:00000000004049d8\n.text:00000000004049e2\n.text:00000000004049e4\n.text:00000000004049e7\n.text:00000000004049ea\n.text:00000000004049eb\n.text:00000000004049ed\n'
p1105
tp1106
sS'set_custom_quoting'
p1107
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1108
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1109
S'TEST RDI,RDI\nMOV EAX,0x60a310\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x00402765\nTEST RDX,RDX\nJZ 0x00402765\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x00401530\n'
p1110
S'48 85 ff\nb8 10 a3 60 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 c5 ed ff ff\n'
p1111
S'.text:0000000000402740\n.text:0000000000402743\n.text:0000000000402748\n.text:000000000040274c\n.text:0000000000402752\n.text:0000000000402755\n.text:0000000000402757\n.text:000000000040275a\n.text:000000000040275c\n.text:0000000000402760\n.text:0000000000402764\n.text:0000000000402765\n.text:0000000000402766\n'
p1112
tp1113
sS'read'
p1114
(S'\n__stdcall read(int __fd, void * __buf, size_t __nbytes)\n'
p1115
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t read(int __fd,void *__buf,size_t __nbytes)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_read_0060a128)();\u000a  return sVar1;\u000a}\u000a\u000a
p1116
S'JMP qword ptr [0x0060a128]\n'
p1117
S'ff 25 02 8a 20 00\n'
p1118
S'.plt:0000000000401720\n'
p1119
tp1120
sS'quotearg_custom_mem'
p1121
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p1122
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1123
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x004039e0\n'
p1124
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p1125
S'.text:0000000000403a70\n.text:0000000000403a73\n.text:0000000000403a76\n.text:0000000000403a79\n.text:0000000000403a7c\n.text:0000000000403a7e\n.text:0000000000403a81\n'
p1126
tp1127
sS'rpl_calloc'
p1128
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1129
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_0060a148)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1130
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x0040484b\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x00404850\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x00404850\nPUSH RAX\nCALL 0x00401540\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401760\n'
p1131
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 ff cc ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 05 cf ff ff\n'
p1132
S'.text:0000000000404810\n.text:0000000000404813\n.text:0000000000404818\n.text:000000000040481a\n.text:000000000040481d\n.text:0000000000404822\n.text:0000000000404824\n.text:0000000000404827\n.text:000000000040482b\n.text:000000000040482d\n.text:0000000000404830\n.text:0000000000404833\n.text:0000000000404836\n.text:0000000000404839\n.text:000000000040483b\n.text:000000000040483c\n.text:0000000000404841\n.text:0000000000404847\n.text:0000000000404849\n.text:000000000040484a\n.text:000000000040484b\n.text:0000000000404850\n.text:0000000000404853\n.text:0000000000404856\n'
p1133
tp1134
sS'memset'
p1135
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1136
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_0060a108)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1137
S'JMP qword ptr [0x0060a108]\n'
p1138
S'ff 25 22 8a 20 00\n'
p1139
S'.plt:00000000004016e0\n'
p1140
tp1141
sS'getc_unlocked'
p1142
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p1143
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_0060a078)();\u000a  return iVar1;\u000a}\u000a\u000a
p1144
S'JMP qword ptr [0x0060a078]\n'
p1145
S'ff 25 b2 8a 20 00\n'
p1146
S'.plt:00000000004015c0\n'
p1147
tp1148
sS'mkdtemp_len'
p1149
(S'\n__stdcall mkdtemp_len(char * tmpl, size_t suff_len, size_t x_len)\n'
p1150
V\u000aint mkdtemp_len(char *tmpl,size_t suff_len,size_t x_len)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = gen_tempname_len(tmpl,suff_len);\u000a  return iVar1;\u000a}\u000a\u000a
p1151
S'MOV RAX,RDX\nMOVZX ECX,CL\nINC ECX\nXOR EDX,EDX\nMOV R8,RAX\nJMP 0x00404060\n'
p1152
S'48 89 d0\n0f b6 c9\nff c1\n31 d2\n49 89 c0\ne9 ce 1d 00 00\n'
p1153
S'.text:0000000000402280\n.text:0000000000402283\n.text:0000000000402286\n.text:0000000000402288\n.text:000000000040228a\n.text:000000000040228d\n'
p1154
tp1155
sS'readsource'
p1156
(S'\n__stdcall readsource(randread_source * s, uchar * p, size_t size)\n'
p1157
V\u000avoid readsource(randread_source *s,uchar *p,size_t size)\u000a\u000a{\u000a  int iVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  int iVar4;\u000a  size_t __n;\u000a  \u000a  sVar2 = fread_unlocked(p,1,size,(FILE *)s->source);\u000a  piVar3 = __errno_location();\u000a  __n = size - sVar2;\u000a  while (__n != 0) {\u000a    p = p + sVar2;\u000a    iVar4 = *piVar3;\u000a    iVar1 = ferror_unlocked((FILE *)s->source);\u000a    if (iVar1 == 0) {\u000a      iVar4 = iVar1;\u000a    }\u000a    *piVar3 = iVar4;\u000a    (*s->handler)(s->handler_arg);\u000a    sVar2 = fread_unlocked(p,1,__n,(FILE *)s->source);\u000a    __n = __n - sVar2;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1158
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nMOV R13,RDX\nMOV R14,RSI\nMOV R15,RDI\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nMOV RDI,R14\nCALL 0x004015f0\nMOV RBX,RAX\nCALL 0x00401540\nMOV R12,RAX\nSUB R13,RBX\nJZ 0x0040532b\nNOP word ptr CS:[RAX + RAX*0x1]\nADD R14,RBX\nMOV EBX,dword ptr [R12]\nMOV RDI,qword ptr [R15]\nCALL 0x00401750\nTEST EAX,EAX\nCMOVZ EBX,EAX\nMOV dword ptr [R12],EBX\nMOV RDI,qword ptr [R15 + 0x10]\nCALL qword ptr [R15 + 0x8]\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nMOV RDI,R14\nMOV RDX,R13\nCALL 0x004015f0\nMOV RBX,RAX\nSUB R13,RBX\nJNZ 0x004052f0\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p1159
S'41 57\n41 56\n41 55\n41 54\n53\n49 89 d5\n49 89 f6\n49 89 ff\n49 8b 0f\nbe 01 00 00 00\n4c 89 f7\ne8 1e c3 ff ff\n48 89 c3\ne8 66 c2 ff ff\n49 89 c4\n49 29 dd\n74 49\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 01 de\n41 8b 1c 24\n49 8b 3f\ne8 51 c4 ff ff\n85 c0\n0f 44 d8\n41 89 1c 24\n49 8b 7f 10\n41 ff 57 08\n49 8b 0f\nbe 01 00 00 00\n4c 89 f7\n4c 89 ea\ne8 cd c2 ff ff\n48 89 c3\n49 29 dd\n75 c5\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p1160
S'.text:00000000004052b0\n.text:00000000004052b2\n.text:00000000004052b4\n.text:00000000004052b6\n.text:00000000004052b8\n.text:00000000004052b9\n.text:00000000004052bc\n.text:00000000004052bf\n.text:00000000004052c2\n.text:00000000004052c5\n.text:00000000004052ca\n.text:00000000004052cd\n.text:00000000004052d2\n.text:00000000004052d5\n.text:00000000004052da\n.text:00000000004052dd\n.text:00000000004052e0\n.text:00000000004052e2\n.text:00000000004052f0\n.text:00000000004052f3\n.text:00000000004052f7\n.text:00000000004052fa\n.text:00000000004052ff\n.text:0000000000405301\n.text:0000000000405304\n.text:0000000000405308\n.text:000000000040530c\n.text:0000000000405310\n.text:0000000000405313\n.text:0000000000405318\n.text:000000000040531b\n.text:000000000040531e\n.text:0000000000405323\n.text:0000000000405326\n.text:0000000000405329\n.text:000000000040532b\n.text:000000000040532c\n.text:000000000040532e\n.text:0000000000405330\n.text:0000000000405332\n.text:0000000000405334\n'
p1161
tp1162
sS'c_isascii'
p1163
(S'\n__stdcall c_isascii()\n'
p1164
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p1165
S'CMP EDI,0x80\nSETC AL\nRET\n'
p1166
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p1167
S'.text:00000000004049f0\n.text:00000000004049f6\n.text:00000000004049f9\n'
p1168
tp1169
sS'try_dir'
p1170
(S'\n__stdcall try_dir(char * tmpl, void * flags)\n'
p1171
V\u000aint try_dir(char *tmpl,void *flags)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mkdir_0060a068)(tmpl,0x1c0);\u000a  return iVar1;\u000a}\u000a\u000a
p1172
S'MOV ESI,0x1c0\nJMP 0x004015a0\n'
p1173
S'be c0 01 00 00\ne9 d6 d4 ff ff\n'
p1174
S'.text:00000000004040c0\n.text:00000000004040c5\n'
p1175
tp1176
sS'dup_safer'
p1177
(S'\n__stdcall dup_safer()\n'
p1178
V\u000aint dup_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0,3);\u000a  return iVar1;\u000a}\u000a\u000a
p1179
S'XOR ESI,ESI\nMOV EDX,0x3\nXOR EAX,EAX\nJMP 0x00405c30\n'
p1180
S'31 f6\nba 03 00 00 00\n31 c0\ne9 02 00 00 00\n'
p1181
S'.text:0000000000405c20\n.text:0000000000405c22\n.text:0000000000405c27\n.text:0000000000405c29\n'
p1182
tp1183
sS'setvbuf'
p1184
(S'\n__stdcall setvbuf(FILE * __stream, char * __buf, int __modes, size_t __n)\n'
p1185
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_setvbuf_0060a1c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p1186
S'JMP qword ptr [0x0060a1c0]\n'
p1187
S'ff 25 6a 89 20 00\n'
p1188
S'.plt:0000000000401850\n'
p1189
tp1190
sS'__ctype_b_loc'
p1191
(S'\n__stdcall __ctype_b_loc()\n'
p1192
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0060a220)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1193
S'JMP qword ptr [0x0060a220]\n'
p1194
S'ff 25 0a 89 20 00\n'
p1195
S'.plt:0000000000401910\n'
p1196
tp1197
sS'quotearg'
p1198
(S'\n__stdcall quotearg(char * arg)\n'
p1199
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1200
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x004035c0\n'
p1201
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1202
S'.text:00000000004037a0\n.text:00000000004037a3\n.text:00000000004037a5\n.text:00000000004037a8\n'
p1203
tp1204
sS'_start'
p1205
(S'\n__stdcall _start()\n'
p1206
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00609ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1207
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x405e60\nMOV RCX,0x405df0\nMOV RDI,0x401cf0\nCALL qword ptr [0x00609ff0]\nHLT\n'
p1208
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 60 5e 40 00\n48 c7 c1 f0 5d 40 00\n48 c7 c7 f0 1c 40 00\nff 15 a6 86 20 00\nf4\n'
p1209
S'.text:0000000000401920\n.text:0000000000401922\n.text:0000000000401925\n.text:0000000000401926\n.text:0000000000401929\n.text:000000000040192d\n.text:000000000040192e\n.text:000000000040192f\n.text:0000000000401936\n.text:000000000040193d\n.text:0000000000401944\n.text:000000000040194a\n'
p1210
tp1211
sS'c_iscntrl'
p1212
(S'\n__stdcall c_iscntrl()\n'
p1213
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1214
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x00404a18\nRET\nCMP EDI,0x7f\nJZ 0x00404a17\nXOR EAX,EAX\nRET\n'
p1215
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1216
S'.text:0000000000404a10\n.text:0000000000404a12\n.text:0000000000404a15\n.text:0000000000404a17\n.text:0000000000404a18\n.text:0000000000404a1b\n.text:0000000000404a1d\n.text:0000000000404a1f\n'
p1217
tp1218
sS'c_isblank'
p1219
(S'\n__stdcall c_isblank()\n'
p1220
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1221
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1222
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1223
S'.text:0000000000404a00\n.text:0000000000404a03\n.text:0000000000404a06\n.text:0000000000404a09\n.text:0000000000404a0c\n.text:0000000000404a0e\n'
p1224
tp1225
sS'randread_free'
p1226
(S'\n__stdcall randread_free(randread_source * s)\n'
p1227
V\u000aint randread_free(randread_source *s)\u000a\u000a{\u000a  FILE *fp;\u000a  int iVar1;\u000a  \u000a  fp = s->source;\u000a  free(s);\u000a  if (fp != (FILE *)0x0) {\u000a    iVar1 = rpl_fclose(fp);\u000a    return iVar1;\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1228
S'PUSH RBX\nMOV RBX,qword ptr [RDI]\nCALL 0x00401510\nTEST RBX,RBX\nJZ 0x00405447\nMOV RDI,RBX\nPOP RBX\nJMP 0x00404860\nXOR EAX,EAX\nPOP RBX\nRET\n'
p1229
S'53\n48 8b 1f\ne8 d7 c0 ff ff\n48 85 db\n74 09\n48 89 df\n5b\ne9 19 f4 ff ff\n31 c0\n5b\nc3\n'
p1230
S'.text:0000000000405430\n.text:0000000000405431\n.text:0000000000405434\n.text:0000000000405439\n.text:000000000040543c\n.text:000000000040543e\n.text:0000000000405441\n.text:0000000000405442\n.text:0000000000405447\n.text:0000000000405449\n.text:000000000040544a\n'
p1231
tp1232
sS'atexit'
p1233
(S'\n__stdcall atexit(__func * __func)\n'
p1234
V\u000a/* WARNING: Removing unreachable block (ram,0x00405e90) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_0060a1e8)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1235
S'MOV RAX,0x60a230\nTEST RAX,RAX\nJZ 0x00405e90\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x004018a0\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x004018a0\n'
p1236
S'48 c7 c0 30 a2 60 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 1a ba ff ff\n31 d2\n31 f6\ne9 07 ba ff ff\n'
p1237
S'.text:0000000000405e70\n.text:0000000000405e77\n.text:0000000000405e7a\n.text:0000000000405e7c\n.text:0000000000405e7f\n.text:0000000000405e81\n.text:0000000000405e90\n.text:0000000000405e92\n.text:0000000000405e94\n'
p1238
tp1239
sS'fdopen'
p1240
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1241
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0060a1a8)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1242
S'JMP qword ptr [0x0060a1a8]\n'
p1243
S'ff 25 82 89 20 00\n'
p1244
S'.plt:0000000000401820\n'
p1245
tp1246
sS'error'
p1247
(S'\n__stdcall error()\n'
p1248
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_0060a1c8)();\u000a  return;\u000a}\u000a\u000a
p1249
S'JMP qword ptr [0x0060a1c8]\n'
p1250
S'ff 25 62 89 20 00\n'
p1251
S'.plt:0000000000401860\n'
p1252
tp1253
sS'try_tempname'
p1254
(S'\n__stdcall try_tempname(char * tmpl, void * args, anon_subr_int_char_ptr_void_ptr * tryfunc)\n'
p1255
V\u000aint try_tempname(char *tmpl,void *args,int (*tryfunc)(char *,void *))\u000a\u000a{\u000a  int iVar1;\u000a  size_t x_suffix_len;\u000a  \u000a  iVar1 = try_tempname_len(tmpl,args,tryfunc,x_suffix_len);\u000a  return iVar1;\u000a}\u000a\u000a
p1256
S'MOV R8D,0x6\nJMP 0x00403ed0\n'
p1257
S'41 b8 06 00 00 00\ne9 a5 fd ff ff\n'
p1258
S'.text:0000000000404120\n.text:0000000000404126\n'
p1259
tp1260
sS'strcaseeq6'
p1261
(S'\n__stdcall strcaseeq6()\n'
p1262
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1263
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x00403e62\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403e69\nJMP 0x00403e7e\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403e7e\nTEST BPL,BPL\nJZ 0x00403e79\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00403e90\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1264
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 51 0c 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1265
S'.text:0000000000403e40\n.text:0000000000403e41\n.text:0000000000403e42\n.text:0000000000403e43\n.text:0000000000403e45\n.text:0000000000403e48\n.text:0000000000403e4a\n.text:0000000000403e4f\n.text:0000000000403e53\n.text:0000000000403e55\n.text:0000000000403e57\n.text:0000000000403e5a\n.text:0000000000403e5c\n.text:0000000000403e5e\n.text:0000000000403e60\n.text:0000000000403e62\n.text:0000000000403e64\n.text:0000000000403e67\n.text:0000000000403e69\n.text:0000000000403e6c\n.text:0000000000403e6e\n.text:0000000000403e71\n.text:0000000000403e75\n.text:0000000000403e76\n.text:0000000000403e77\n.text:0000000000403e79\n.text:0000000000403e7e\n.text:0000000000403e82\n.text:0000000000403e83\n.text:0000000000403e84\n'
p1266
tp1267
sS'strcaseeq5'
p1268
(S'\n__stdcall strcaseeq5()\n'
p1269
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1270
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x00403e16\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403e1d\nJMP 0x00403e34\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403e34\nTEST BPL,BPL\nJZ 0x00403e2f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00403e40\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1271
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 9d 0c 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1272
S'.text:0000000000403df0\n.text:0000000000403df1\n.text:0000000000403df3\n.text:0000000000403df4\n.text:0000000000403df7\n.text:0000000000403df9\n.text:0000000000403dfc\n.text:0000000000403dfe\n.text:0000000000403e03\n.text:0000000000403e07\n.text:0000000000403e09\n.text:0000000000403e0b\n.text:0000000000403e0e\n.text:0000000000403e10\n.text:0000000000403e12\n.text:0000000000403e14\n.text:0000000000403e16\n.text:0000000000403e18\n.text:0000000000403e1b\n.text:0000000000403e1d\n.text:0000000000403e20\n.text:0000000000403e22\n.text:0000000000403e26\n.text:0000000000403e29\n.text:0000000000403e2a\n.text:0000000000403e2c\n.text:0000000000403e2d\n.text:0000000000403e2f\n.text:0000000000403e34\n.text:0000000000403e35\n.text:0000000000403e37\n.text:0000000000403e38\n'
p1273
tp1274
sS'strcaseeq7'
p1275
(S'\n__stdcall strcaseeq7()\n'
p1276
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1277
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x00403eb2\nTEST ECX,0xffffffdf\nJNZ 0x00403eb6\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x00403eba\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1278
S'53\n48 89 fb\n31 ff\ne8 05 0c 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1279
S'.text:0000000000403e90\n.text:0000000000403e91\n.text:0000000000403e94\n.text:0000000000403e96\n.text:0000000000403e9b\n.text:0000000000403e9f\n.text:0000000000403ea1\n.text:0000000000403ea3\n.text:0000000000403ea9\n.text:0000000000403eab\n.text:0000000000403eb0\n.text:0000000000403eb1\n.text:0000000000403eb2\n.text:0000000000403eb4\n.text:0000000000403eb6\n.text:0000000000403eb8\n.text:0000000000403eb9\n.text:0000000000403eba\n.text:0000000000403ebf\n.text:0000000000403ec0\n'
p1280
tp1281
sS'try_tempname_len'
p1282
(S'\n__stdcall try_tempname_len(char * tmpl, void * args, anon_subr_int_char_ptr_void_ptr * tryfunc, size_t x_suffix_len)\n'
p1283
V\u000aint try_tempname_len(char *tmpl,void *args,int (*tryfunc)(char *,void *),size_t x_suffix_len)\u000a\u000a{\u000a  ulong uVar1;\u000a  int iVar2;\u000a  _Bool _Var3;\u000a  int iVar4;\u000a  int *piVar5;\u000a  size_t sVar6;\u000a  randint_source *s;\u000a  randint rVar7;\u000a  int iVar8;\u000a  long lVar9;\u000a  size_t len;\u000a  uint uVar10;\u000a  int save_errno;\u000a  \u000a  piVar5 = __errno_location();\u000a  iVar2 = *piVar5;\u000a  sVar6 = strlen(tmpl);\u000a  uVar1 = (long)(int)args + len;\u000a  iVar4 = -1;\u000a  iVar8 = 0x16;\u000a  if ((uVar1 <= sVar6) && (_Var3 = check_x_suffix(tmpl + (sVar6 - uVar1),len), _Var3 != false)) {\u000a    uVar10 = 0;\u000a    s = randint_all_new((char *)0x0,len);\u000a    if (s == (randint_source *)0x0) {\u000a      return -1;\u000a    }\u000a    do {\u000a      lVar9 = -len;\u000a      if (len != 0) {\u000a        do {\u000a          rVar7 = randint_genmax(s,0x3d);\u000a          tmpl[lVar9 + (sVar6 - (long)(int)args)] =\u000a               "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"[rVar7];\u000a          lVar9 = lVar9 + 1;\u000a        } while (lVar9 != 0);\u000a      }\u000a      iVar4 = (*(code *)x_suffix_len)(tmpl,tryfunc);\u000a      if (-1 < iVar4) {\u000a        *piVar5 = iVar2;\u000aLAB_00404015:\u000a        iVar8 = *piVar5;\u000a        randint_all_free(s);\u000a        goto LAB_00404021;\u000a      }\u000a      if (*piVar5 != 0x11) {\u000a        iVar4 = -1;\u000a        goto LAB_00404015;\u000a      }\u000a      uVar10 = uVar10 + 1;\u000a    } while (uVar10 < 0x3a2f8);\u000a    randint_all_free(s);\u000a    iVar4 = -1;\u000a    iVar8 = 0x11;\u000a  }\u000aLAB_00404021:\u000a  *piVar5 = iVar8;\u000a  return iVar4;\u000a}\u000a\u000a
p1284
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV qword ptr [RSP + 0x30],RCX\nMOV qword ptr [RSP + 0x28],RDX\nMOV EBX,ESI\nMOV R15,RDI\nCALL 0x00401540\nMOV R13,RAX\nMOV EAX,dword ptr [R13]\nMOV dword ptr [RSP + 0x1c],EAX\nMOV RDI,R15\nCALL 0x00401650\nMOV RBP,RAX\nMOVSXD RCX,EBX\nLEA RAX,[RCX + R14*0x1]\nMOV R12D,0xffffffff\nMOV EBX,0x16\nMOV RDI,RBP\nSUB RDI,RAX\nJC 0x00404021\nMOV qword ptr [RSP + 0x10],RCX\nADD RDI,R15\nMOV RSI,R14\nCALL 0x00404040\nTEST AL,AL\nJZ 0x00404021\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x8],R13\nXOR R13D,R13D\nXOR EDI,EDI\nMOV RSI,R14\nCALL 0x00404e40\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00403ff3\nSUB RBP,qword ptr [RSP + 0x10]\nADD RBP,qword ptr [RSP + 0x20]\nMOV RAX,R14\nNEG RAX\nMOV qword ptr [RSP + 0x10],RAX\nNOP dword ptr [RAX]\nTEST R14,R14\nJZ 0x00403fad\nMOV RBX,qword ptr [RSP + 0x10]\nNOP word ptr [RAX + RAX*0x1]\nMOV ESI,0x3d\nMOV RDI,R15\nCALL 0x00404e70\nMOVZX EAX,byte ptr [0x406ff0 + RAX]\nMOV byte ptr [RBP + RBX*0x1],AL\nINC RBX\nJNZ 0x00403f90\nMOV RDI,qword ptr [RSP + 0x20]\nMOV RSI,qword ptr [RSP + 0x28]\nCALL qword ptr [RSP + 0x30]\nMOV R12D,EAX\nTEST R12D,R12D\nJNS 0x00403ffb\nMOV RAX,qword ptr [RSP + 0x8]\nCMP dword ptr [RAX],0x11\nJNZ 0x0040400a\nINC R13D\nCMP R13D,0x3a2f7\nJBE 0x00403f80\nMOV RDI,R15\nCALL 0x00404fb0\nMOV R12D,0xffffffff\nMOV EBX,0x11\nMOV R13,qword ptr [RSP + 0x8]\nJMP 0x00404021\nMOV R12D,0xffffffff\nJMP 0x00404025\nMOV R13,qword ptr [RSP + 0x8]\nMOV EAX,dword ptr [RSP + 0x1c]\nMOV dword ptr [R13],EAX\nJMP 0x00404015\nMOV R12D,0xffffffff\nMOV R13,qword ptr [RSP + 0x8]\nMOV EBX,dword ptr [R13]\nMOV RDI,R15\nCALL 0x00404fb0\nMOV dword ptr [R13],EBX\nMOV EAX,R12D\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1285
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n4d 89 c6\n48 89 4c 24 30\n48 89 54 24 28\n89 f3\n49 89 ff\ne8 4b d6 ff ff\n49 89 c5\n41 8b 45 00\n89 44 24 1c\n4c 89 ff\ne8 48 d7 ff ff\n48 89 c5\n48 63 cb\n4a 8d 04 31\n41 bc ff ff ff ff\nbb 16 00 00 00\n48 89 ef\n48 29 c7\n0f 82 f8 00 00 00\n48 89 4c 24 10\n4c 01 ff\n4c 89 f6\ne8 07 01 00 00\n84 c0\n0f 84 e0 00 00 00\n4c 89 7c 24 20\n4c 89 6c 24 08\n45 31 ed\n31 ff\n4c 89 f6\ne8 e8 0e 00 00\n49 89 c7\n4d 85 ff\n0f 84 8f 00 00 00\n48 2b 6c 24 10\n48 03 6c 24 20\n4c 89 f0\n48 f7 d8\n48 89 44 24 10\n0f 1f 80 00 00 00 00\n4d 85 f6\n74 28\n48 8b 5c 24 10\n66 0f 1f 44 00 00\nbe 3d 00 00 00\n4c 89 ff\ne8 d3 0e 00 00\n0f b6 80 f0 6f 40 00\n88 44 1d 00\n48 ff c3\n75 e3\n48 8b 7c 24 20\n48 8b 74 24 28\nff 54 24 30\n41 89 c4\n45 85 e4\n79 38\n48 8b 44 24 08\n83 38 11\n75 3d\n41 ff c5\n41 81 fd f7 a2 03 00\n76 a7\n4c 89 ff\ne8 cf 0f 00 00\n41 bc ff ff ff ff\nbb 11 00 00 00\n4c 8b 6c 24 08\neb 2e\n41 bc ff ff ff ff\neb 2a\n4c 8b 6c 24 08\n8b 44 24 1c\n41 89 45 00\neb 0b\n41 bc ff ff ff ff\n4c 8b 6c 24 08\n41 8b 5d 00\n4c 89 ff\ne8 8f 0f 00 00\n41 89 5d 00\n44 89 e0\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1286
S'.text:0000000000403ed0\n.text:0000000000403ed1\n.text:0000000000403ed3\n.text:0000000000403ed5\n.text:0000000000403ed7\n.text:0000000000403ed9\n.text:0000000000403eda\n.text:0000000000403ede\n.text:0000000000403ee1\n.text:0000000000403ee6\n.text:0000000000403eeb\n.text:0000000000403eed\n.text:0000000000403ef0\n.text:0000000000403ef5\n.text:0000000000403ef8\n.text:0000000000403efc\n.text:0000000000403f00\n.text:0000000000403f03\n.text:0000000000403f08\n.text:0000000000403f0b\n.text:0000000000403f0e\n.text:0000000000403f12\n.text:0000000000403f18\n.text:0000000000403f1d\n.text:0000000000403f20\n.text:0000000000403f23\n.text:0000000000403f29\n.text:0000000000403f2e\n.text:0000000000403f31\n.text:0000000000403f34\n.text:0000000000403f39\n.text:0000000000403f3b\n.text:0000000000403f41\n.text:0000000000403f46\n.text:0000000000403f4b\n.text:0000000000403f4e\n.text:0000000000403f50\n.text:0000000000403f53\n.text:0000000000403f58\n.text:0000000000403f5b\n.text:0000000000403f5e\n.text:0000000000403f64\n.text:0000000000403f69\n.text:0000000000403f6e\n.text:0000000000403f71\n.text:0000000000403f74\n.text:0000000000403f79\n.text:0000000000403f80\n.text:0000000000403f83\n.text:0000000000403f85\n.text:0000000000403f8a\n.text:0000000000403f90\n.text:0000000000403f95\n.text:0000000000403f98\n.text:0000000000403f9d\n.text:0000000000403fa4\n.text:0000000000403fa8\n.text:0000000000403fab\n.text:0000000000403fad\n.text:0000000000403fb2\n.text:0000000000403fb7\n.text:0000000000403fbb\n.text:0000000000403fbe\n.text:0000000000403fc1\n.text:0000000000403fc3\n.text:0000000000403fc8\n.text:0000000000403fcb\n.text:0000000000403fcd\n.text:0000000000403fd0\n.text:0000000000403fd7\n.text:0000000000403fd9\n.text:0000000000403fdc\n.text:0000000000403fe1\n.text:0000000000403fe7\n.text:0000000000403fec\n.text:0000000000403ff1\n.text:0000000000403ff3\n.text:0000000000403ff9\n.text:0000000000403ffb\n.text:0000000000404000\n.text:0000000000404004\n.text:0000000000404008\n.text:000000000040400a\n.text:0000000000404010\n.text:0000000000404015\n.text:0000000000404019\n.text:000000000040401c\n.text:0000000000404021\n.text:0000000000404025\n.text:0000000000404028\n.text:000000000040402c\n.text:000000000040402d\n.text:000000000040402f\n.text:0000000000404031\n.text:0000000000404033\n.text:0000000000404035\n.text:0000000000404036\n'
p1287
tp1288
sS'randread'
p1289
(S'\n__stdcall randread(randread_source * s, void * buf, size_t size)\n'
p1290
V\u000avoid randread(randread_source *s,void *buf,size_t size)\u000a\u000a{\u000a  if (s->source != (FILE *)0x0) {\u000a    readsource(s,(uchar *)buf,size);\u000a    return;\u000a  }\u000a  readisaac((isaac *)s->buf,buf,size);\u000a  return;\u000a}\u000a\u000a
p1291
S'CMP qword ptr [RDI],0x0\nJZ 0x00405298\nJMP 0x004052b0\nADD RDI,0x18\nJMP 0x00405340\n'
p1292
S'48 83 3f 00\n74 02\neb 18\n48 83 c7 18\ne9 9f 00 00 00\n'
p1293
S'.text:0000000000405290\n.text:0000000000405294\n.text:0000000000405296\n.text:0000000000405298\n.text:000000000040529c\n'
p1294
tp1295
sS'get_nonce'
p1296
(S'\n__stdcall get_nonce(DRBG_CTX * ctx, uchar * * pout, int entropy, size_t min_len, size_t max_len)\n'
p1297
V\u000asize_t get_nonce(DRBG_CTX *ctx,uchar **pout,int entropy,size_t min_len,size_t max_len)\u000a\u000a{\u000a  int __fd;\u000a  ulong uVar1;\u000a  undefined4 extraout_var;\u000a  void *pvVar2;\u000a  undefined4 in_register_00000014;\u000a  uchar **__nbytes;\u000a  size_t __n;\u000a  timeval v;\u000a  __gid_t local_30 [4];\u000a  \u000a  uVar1 = 0;\u000a  __fd = open("/dev/urandom",0,CONCAT44(in_register_00000014,entropy));\u000a  if (-1 < __fd) {\u000a    __nbytes = (uchar **)0x800;\u000a    if (pout < (uchar **)0x800) {\u000a      __nbytes = pout;\u000a    }\u000a    uVar1 = read(__fd,ctx,(size_t)__nbytes);\u000a    __fd = close(__fd);\u000a    if ((long)uVar1 < 1) {\u000a      uVar1 = 0;\u000a    }\u000a    else {\u000a      if (0x7ff < uVar1) {\u000a        return CONCAT44(extraout_var,__fd);\u000a      }\u000a    }\u000a  }\u000a  __n = 0x10;\u000a  if (0x800 - uVar1 < 0x10) {\u000a    __n = 0x800 - uVar1;\u000a  }\u000a  gettimeofday((timeval *)local_30,(__timezone_ptr_t)0x0);\u000a  pvVar2 = memcpy(ctx + uVar1,(timeval *)local_30,__n);\u000a  uVar1 = __n + uVar1;\u000a  if (uVar1 < 0x800) {\u000a    __n = 4;\u000a    if (0x800 - uVar1 < 4) {\u000a      __n = 0x800 - uVar1;\u000a    }\u000a    local_30[0] = getpid();\u000a    pvVar2 = memcpy(ctx + uVar1,local_30,__n);\u000a    uVar1 = __n + uVar1;\u000a    if (uVar1 < 0x800) {\u000a      __n = 4;\u000a      if (0x800 - uVar1 < 4) {\u000a        __n = 0x800 - uVar1;\u000a      }\u000a      local_30[0] = getppid();\u000a      pvVar2 = memcpy(ctx + uVar1,local_30,__n);\u000a      uVar1 = __n + uVar1;\u000a      if (uVar1 < 0x800) {\u000a        __n = 4;\u000a        if (0x800 - uVar1 < 4) {\u000a          __n = 0x800 - uVar1;\u000a        }\u000a        local_30[0] = getuid();\u000a        pvVar2 = memcpy(ctx + uVar1,local_30,__n);\u000a        uVar1 = __n + uVar1;\u000a        if (uVar1 < 0x800) {\u000a          __n = 4;\u000a          if (0x800 - uVar1 < 4) {\u000a            __n = 0x800 - uVar1;\u000a          }\u000a          local_30[0] = getgid();\u000a          pvVar2 = memcpy(ctx + uVar1,local_30,__n);\u000a        }\u000a      }\u000a    }\u000a  }\u000a  return (size_t)pvVar2;\u000a}\u000a\u000a
p1298
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x18\nMOV RBX,RSI\nMOV R14,RDI\nXOR R15D,R15D\nMOV EDI,0x4078a7\nXOR ESI,ESI\nXOR EAX,EAX\nCALL 0x00401870\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00405131\nCMP RBX,0x800\nMOV EDX,0x800\nCMOVC RDX,RBX\nMOV EDI,EBP\nMOV RSI,R14\nCALL 0x00401720\nMOV R15,RAX\nMOV EDI,EBP\nCALL 0x00401700\nTEST R15,R15\nJLE 0x0040512e\nCMP R15,0x7ff\nJBE 0x00405131\nJMP 0x0040525c\nXOR R15D,R15D\nMOV EAX,0x800\nSUB RAX,R15\nCMP RAX,0x10\nMOV EBX,0x10\nCMOVC RBX,RAX\nLEA RBP,[RSP + 0x8]\nXOR ESI,ESI\nMOV RDI,RBP\nCALL 0x004016c0\nLEA RDI,[R14 + R15*0x1]\nMOV RSI,RBP\nMOV RDX,RBX\nCALL 0x00401780\nADD RBX,R15\nCMP RBX,0x7ff\nJA 0x0040525c\nMOV EAX,0x800\nSUB RAX,RBX\nCMP RAX,0x4\nMOV R15D,0x4\nCMOVC R15,RAX\nCALL 0x004015e0\nMOV dword ptr [RSP + 0x8],EAX\nLEA RDI,[R14 + RBX*0x1]\nLEA RSI,[RSP + 0x8]\nMOV RDX,R15\nCALL 0x00401780\nADD R15,RBX\nCMP R15,0x7ff\nJA 0x0040525c\nMOV EAX,0x800\nSUB RAX,R15\nCMP RAX,0x4\nMOV EBX,0x4\nCMOVC RBX,RAX\nCALL 0x004018b0\nMOV dword ptr [RSP + 0x8],EAX\nLEA RDI,[R14 + R15*0x1]\nLEA RSI,[RSP + 0x8]\nMOV RDX,RBX\nCALL 0x00401780\nADD RBX,R15\nCMP RBX,0x7ff\nJA 0x0040525c\nMOV EAX,0x800\nSUB RAX,RBX\nCMP RAX,0x4\nMOV R15D,0x4\nCMOVC R15,RAX\nCALL 0x00401670\nMOV dword ptr [RSP + 0x8],EAX\nLEA RDI,[R14 + RBX*0x1]\nLEA RSI,[RSP + 0x8]\nMOV RDX,R15\nCALL 0x00401780\nADD R15,RBX\nCMP R15,0x7ff\nJA 0x0040525c\nMOV EAX,0x800\nSUB RAX,R15\nCMP RAX,0x4\nMOV EBX,0x4\nCMOVC RBX,RAX\nCALL 0x004017a0\nMOV dword ptr [RSP + 0x8],EAX\nADD R14,R15\nLEA RSI,[RSP + 0x8]\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x00401780\nADD RSP,0x18\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1299
S'55\n41 57\n41 56\n53\n48 83 ec 18\n48 89 f3\n49 89 fe\n45 31 ff\nbf a7 78 40 00\n31 f6\n31 c0\ne8 7f c7 ff ff\n89 c5\n85 ed\n78 3a\n48 81 fb 00 08 00 00\nba 00 08 00 00\n48 0f 42 d3\n89 ef\n4c 89 f6\ne8 0f c6 ff ff\n49 89 c7\n89 ef\ne8 e5 c5 ff ff\n4d 85 ff\n7e 0e\n49 81 ff ff 07 00 00\n76 08\ne9 2e 01 00 00\n45 31 ff\nb8 00 08 00 00\n4c 29 f8\n48 83 f8 10\nbb 10 00 00 00\n48 0f 42 d8\n48 8d 6c 24 08\n31 f6\n48 89 ef\ne8 6b c5 ff ff\n4b 8d 3c 3e\n48 89 ee\n48 89 da\ne8 1c c6 ff ff\n4c 01 fb\n48 81 fb ff 07 00 00\n0f 87 e8 00 00 00\nb8 00 08 00 00\n48 29 d8\n48 83 f8 04\n41 bf 04 00 00 00\n4c 0f 42 f8\ne8 51 c4 ff ff\n89 44 24 08\n49 8d 3c 1e\n48 8d 74 24 08\n4c 89 fa\ne8 dc c5 ff ff\n49 01 df\n49 81 ff ff 07 00 00\n0f 87 a8 00 00 00\nb8 00 08 00 00\n4c 29 f8\n48 83 f8 04\nbb 04 00 00 00\n48 0f 42 d8\ne8 e2 c6 ff ff\n89 44 24 08\n4b 8d 3c 3e\n48 8d 74 24 08\n48 89 da\ne8 9d c5 ff ff\n4c 01 fb\n48 81 fb ff 07 00 00\n77 6d\nb8 00 08 00 00\n48 29 d8\n48 83 f8 04\n41 bf 04 00 00 00\n4c 0f 42 f8\ne8 66 c4 ff ff\n89 44 24 08\n49 8d 3c 1e\n48 8d 74 24 08\n4c 89 fa\ne8 61 c5 ff ff\n49 01 df\n49 81 ff ff 07 00 00\n77 31\nb8 00 08 00 00\n4c 29 f8\n48 83 f8 04\nbb 04 00 00 00\n48 0f 42 d8\ne8 5b c5 ff ff\n89 44 24 08\n4d 01 fe\n48 8d 74 24 08\n4c 89 f7\n48 89 da\ne8 24 c5 ff ff\n48 83 c4 18\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1300
S'.text:00000000004050d0\n.text:00000000004050d1\n.text:00000000004050d3\n.text:00000000004050d5\n.text:00000000004050d6\n.text:00000000004050da\n.text:00000000004050dd\n.text:00000000004050e0\n.text:00000000004050e3\n.text:00000000004050e8\n.text:00000000004050ea\n.text:00000000004050ec\n.text:00000000004050f1\n.text:00000000004050f3\n.text:00000000004050f5\n.text:00000000004050f7\n.text:00000000004050fe\n.text:0000000000405103\n.text:0000000000405107\n.text:0000000000405109\n.text:000000000040510c\n.text:0000000000405111\n.text:0000000000405114\n.text:0000000000405116\n.text:000000000040511b\n.text:000000000040511e\n.text:0000000000405120\n.text:0000000000405127\n.text:0000000000405129\n.text:000000000040512e\n.text:0000000000405131\n.text:0000000000405136\n.text:0000000000405139\n.text:000000000040513d\n.text:0000000000405142\n.text:0000000000405146\n.text:000000000040514b\n.text:000000000040514d\n.text:0000000000405150\n.text:0000000000405155\n.text:0000000000405159\n.text:000000000040515c\n.text:000000000040515f\n.text:0000000000405164\n.text:0000000000405167\n.text:000000000040516e\n.text:0000000000405174\n.text:0000000000405179\n.text:000000000040517c\n.text:0000000000405180\n.text:0000000000405186\n.text:000000000040518a\n.text:000000000040518f\n.text:0000000000405193\n.text:0000000000405197\n.text:000000000040519c\n.text:000000000040519f\n.text:00000000004051a4\n.text:00000000004051a7\n.text:00000000004051ae\n.text:00000000004051b4\n.text:00000000004051b9\n.text:00000000004051bc\n.text:00000000004051c0\n.text:00000000004051c5\n.text:00000000004051c9\n.text:00000000004051ce\n.text:00000000004051d2\n.text:00000000004051d6\n.text:00000000004051db\n.text:00000000004051de\n.text:00000000004051e3\n.text:00000000004051e6\n.text:00000000004051ed\n.text:00000000004051ef\n.text:00000000004051f4\n.text:00000000004051f7\n.text:00000000004051fb\n.text:0000000000405201\n.text:0000000000405205\n.text:000000000040520a\n.text:000000000040520e\n.text:0000000000405212\n.text:0000000000405217\n.text:000000000040521a\n.text:000000000040521f\n.text:0000000000405222\n.text:0000000000405229\n.text:000000000040522b\n.text:0000000000405230\n.text:0000000000405233\n.text:0000000000405237\n.text:000000000040523c\n.text:0000000000405240\n.text:0000000000405245\n.text:0000000000405249\n.text:000000000040524c\n.text:0000000000405251\n.text:0000000000405254\n.text:0000000000405257\n.text:000000000040525c\n.text:0000000000405260\n.text:0000000000405261\n.text:0000000000405263\n.text:0000000000405265\n.text:0000000000405266\n'
p1301
tp1302
sS'strcaseeq0'
p1303
(S'\n__stdcall strcaseeq0()\n'
p1304
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1305
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00403bc5\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403bcc\nJMP 0x00403c00\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403c00\nTEST BPL,BPL\nJZ 0x00403bfb\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x00403c10\nJMP 0x00403c00\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1306
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 ed 0e 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1307
S'.text:0000000000403b90\n.text:0000000000403b91\n.text:0000000000403b93\n.text:0000000000403b95\n.text:0000000000403b97\n.text:0000000000403b99\n.text:0000000000403b9a\n.text:0000000000403b9b\n.text:0000000000403b9e\n.text:0000000000403ba1\n.text:0000000000403ba4\n.text:0000000000403ba7\n.text:0000000000403ba9\n.text:0000000000403bac\n.text:0000000000403bae\n.text:0000000000403bb3\n.text:0000000000403bb6\n.text:0000000000403bb8\n.text:0000000000403bba\n.text:0000000000403bbd\n.text:0000000000403bbf\n.text:0000000000403bc1\n.text:0000000000403bc3\n.text:0000000000403bc5\n.text:0000000000403bc7\n.text:0000000000403bca\n.text:0000000000403bcc\n.text:0000000000403bcf\n.text:0000000000403bd1\n.text:0000000000403bd5\n.text:0000000000403bda\n.text:0000000000403bdd\n.text:0000000000403be1\n.text:0000000000403be5\n.text:0000000000403be9\n.text:0000000000403bed\n.text:0000000000403bf1\n.text:0000000000403bf4\n.text:0000000000403bf9\n.text:0000000000403bfb\n.text:0000000000403c00\n.text:0000000000403c04\n.text:0000000000403c05\n.text:0000000000403c07\n.text:0000000000403c09\n.text:0000000000403c0b\n.text:0000000000403c0d\n.text:0000000000403c0e\n'
p1308
tp1309
sS'strcaseeq2'
p1310
(S'\n__stdcall strcaseeq2()\n'
p1311
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1312
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x00403cd6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403cdd\nJMP 0x00403d0a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403d0a\nTEST BPL,BPL\nJZ 0x00403d05\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00403d20\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1313
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 dd 0d 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1314
S'.text:0000000000403ca0\n.text:0000000000403ca1\n.text:0000000000403ca3\n.text:0000000000403ca5\n.text:0000000000403ca7\n.text:0000000000403ca9\n.text:0000000000403caa\n.text:0000000000403cab\n.text:0000000000403cae\n.text:0000000000403cb1\n.text:0000000000403cb4\n.text:0000000000403cb7\n.text:0000000000403cb9\n.text:0000000000403cbc\n.text:0000000000403cbe\n.text:0000000000403cc3\n.text:0000000000403cc7\n.text:0000000000403cc9\n.text:0000000000403ccb\n.text:0000000000403cce\n.text:0000000000403cd0\n.text:0000000000403cd2\n.text:0000000000403cd4\n.text:0000000000403cd6\n.text:0000000000403cd8\n.text:0000000000403cdb\n.text:0000000000403cdd\n.text:0000000000403ce0\n.text:0000000000403ce2\n.text:0000000000403ce6\n.text:0000000000403cea\n.text:0000000000403cee\n.text:0000000000403cf2\n.text:0000000000403cf5\n.text:0000000000403cf9\n.text:0000000000403cfa\n.text:0000000000403cfc\n.text:0000000000403cfe\n.text:0000000000403d00\n.text:0000000000403d02\n.text:0000000000403d03\n.text:0000000000403d05\n.text:0000000000403d0a\n.text:0000000000403d0e\n.text:0000000000403d0f\n.text:0000000000403d11\n.text:0000000000403d13\n.text:0000000000403d15\n.text:0000000000403d17\n.text:0000000000403d18\n'
p1315
tp1316
sS'strcaseeq1'
p1317
(S'\n__stdcall strcaseeq1()\n'
p1318
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1319
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x00403c4d\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403c54\nJMP 0x00403c87\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403c87\nTEST BPL,BPL\nJZ 0x00403c82\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00403ca0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1320
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 66 0e 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1321
S'.text:0000000000403c10\n.text:0000000000403c11\n.text:0000000000403c13\n.text:0000000000403c15\n.text:0000000000403c17\n.text:0000000000403c19\n.text:0000000000403c1a\n.text:0000000000403c1b\n.text:0000000000403c20\n.text:0000000000403c23\n.text:0000000000403c26\n.text:0000000000403c29\n.text:0000000000403c2b\n.text:0000000000403c2e\n.text:0000000000403c33\n.text:0000000000403c35\n.text:0000000000403c3a\n.text:0000000000403c3e\n.text:0000000000403c40\n.text:0000000000403c42\n.text:0000000000403c45\n.text:0000000000403c47\n.text:0000000000403c49\n.text:0000000000403c4b\n.text:0000000000403c4d\n.text:0000000000403c4f\n.text:0000000000403c52\n.text:0000000000403c54\n.text:0000000000403c57\n.text:0000000000403c59\n.text:0000000000403c5d\n.text:0000000000403c61\n.text:0000000000403c65\n.text:0000000000403c6b\n.text:0000000000403c6f\n.text:0000000000403c72\n.text:0000000000403c76\n.text:0000000000403c77\n.text:0000000000403c79\n.text:0000000000403c7b\n.text:0000000000403c7d\n.text:0000000000403c7f\n.text:0000000000403c80\n.text:0000000000403c82\n.text:0000000000403c87\n.text:0000000000403c8b\n.text:0000000000403c8c\n.text:0000000000403c8e\n.text:0000000000403c90\n.text:0000000000403c92\n.text:0000000000403c94\n.text:0000000000403c95\n'
p1322
tp1323
sS'strcaseeq4'
p1324
(S'\n__stdcall strcaseeq4()\n'
p1325
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1326
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x00403dbc\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403dc3\nJMP 0x00403de4\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403de4\nTEST BPL,BPL\nJZ 0x00403ddf\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00403df0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1327
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 f7 0c 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1328
S'.text:0000000000403d90\n.text:0000000000403d91\n.text:0000000000403d93\n.text:0000000000403d95\n.text:0000000000403d96\n.text:0000000000403d97\n.text:0000000000403d9a\n.text:0000000000403d9d\n.text:0000000000403d9f\n.text:0000000000403da2\n.text:0000000000403da4\n.text:0000000000403da9\n.text:0000000000403dad\n.text:0000000000403daf\n.text:0000000000403db1\n.text:0000000000403db4\n.text:0000000000403db6\n.text:0000000000403db8\n.text:0000000000403dba\n.text:0000000000403dbc\n.text:0000000000403dbe\n.text:0000000000403dc1\n.text:0000000000403dc3\n.text:0000000000403dc6\n.text:0000000000403dc8\n.text:0000000000403dcc\n.text:0000000000403dd0\n.text:0000000000403dd3\n.text:0000000000403dd7\n.text:0000000000403dd8\n.text:0000000000403dda\n.text:0000000000403ddc\n.text:0000000000403ddd\n.text:0000000000403ddf\n.text:0000000000403de4\n.text:0000000000403de8\n.text:0000000000403de9\n.text:0000000000403deb\n.text:0000000000403ded\n.text:0000000000403dee\n'
p1329
tp1330
sS'ind'
p1331
(S'\n__stdcall ind(isaac_word * m, isaac_word x)\n'
p1332
V\u000aisaac_word ind(isaac_word *m,isaac_word x)\u000a\u000a{\u000a  return *(isaac_word *)((long)m + (ulong)((uint)x & 0x7f8));\u000a}\u000a\u000a
p1333
S'AND ESI,0x7f8\nMOV RAX,qword ptr [RDI + RSI*0x1]\nRET\n'
p1334
S'81 e6 f8 07 00 00\n48 8b 04 37\nc3\n'
p1335
S'.text:0000000000405850\n.text:0000000000405856\n.text:000000000040585a\n'
p1336
tp1337
sS'strcaseeq3'
p1338
(S'\n__stdcall strcaseeq3()\n'
p1339
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1340
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00404aa0\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00403d50\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00403d57\nJMP 0x00403d7a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00403d7a\nTEST BPL,BPL\nJZ 0x00403d75\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00403d90\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1341
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 63 0d 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1342
S'.text:0000000000403d20\n.text:0000000000403d21\n.text:0000000000403d23\n.text:0000000000403d25\n.text:0000000000403d27\n.text:0000000000403d28\n.text:0000000000403d2b\n.text:0000000000403d2e\n.text:0000000000403d31\n.text:0000000000403d33\n.text:0000000000403d36\n.text:0000000000403d38\n.text:0000000000403d3d\n.text:0000000000403d41\n.text:0000000000403d43\n.text:0000000000403d45\n.text:0000000000403d48\n.text:0000000000403d4a\n.text:0000000000403d4c\n.text:0000000000403d4e\n.text:0000000000403d50\n.text:0000000000403d52\n.text:0000000000403d55\n.text:0000000000403d57\n.text:0000000000403d5a\n.text:0000000000403d5c\n.text:0000000000403d60\n.text:0000000000403d64\n.text:0000000000403d68\n.text:0000000000403d6b\n.text:0000000000403d6c\n.text:0000000000403d6e\n.text:0000000000403d70\n.text:0000000000403d72\n.text:0000000000403d73\n.text:0000000000403d75\n.text:0000000000403d7a\n.text:0000000000403d7b\n.text:0000000000403d7d\n.text:0000000000403d7f\n.text:0000000000403d81\n.text:0000000000403d82\n'
p1343
tp1344
sS'last_component'
p1345
(S'\n__stdcall last_component(char * name)\n'
p1346
V\u000achar * last_component(char *name)\u000a\u000a{\u000a  bool bVar1;\u000a  bool bVar2;\u000a  char *pcVar3;\u000a  \u000a  name = name + -1;\u000a  do {\u000a    pcVar3 = name + 1;\u000a    name = name + 1;\u000a  } while (*pcVar3 == '/');\u000a  bVar2 = false;\u000a  pcVar3 = name;\u000a  do {\u000a    bVar1 = true;\u000a    if (*name != '/') {\u000a      if (*name == 0) {\u000a        return pcVar3;\u000a      }\u000a      bVar1 = bVar2;\u000a      if (bVar2) {\u000a        pcVar3 = name;\u000a        bVar1 = false;\u000a      }\u000a    }\u000a    bVar2 = bVar1;\u000a    name = name + 1;\u000a  } while( true );\u000a}\u000a\u000a
p1347
S'DEC RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [RDI + 0x1],0x2f\nLEA RDI,[RDI + 0x1]\nJZ 0x00402420\nXOR ESI,ESI\nMOV RAX,RDI\nJMP 0x00402446\nINC RAX\nMOV SIL,DL\nMOVZX ECX,byte ptr [RAX]\nMOV DL,0x1\nCMP CL,0x2f\nJZ 0x00402440\nTEST CL,CL\nJZ 0x00402467\nMOV EDX,ESI\nAND DL,0x1\nJZ 0x0040245d\nXOR ESI,ESI\nTEST DL,DL\nCMOVNZ RDI,RAX\nMOV EDX,ESI\nJMP 0x00402440\nMOV RAX,RDI\nRET\n'
p1348
S'48 ff cf\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 7f 01 2f\n48 8d 7f 01\n74 f6\n31 f6\n48 89 f8\neb 15\n48 ff c0\n40 88 d6\n0f b6 08\nb2 01\n80 f9 2f\n74 f0\n84 c9\n74 13\n89 f2\n80 e2 01\n74 02\n31 f6\n84 d2\n48 0f 45 f8\n89 f2\neb d9\n48 89 f8\nc3\n'
p1349
S'.text:0000000000402410\n.text:0000000000402413\n.text:0000000000402420\n.text:0000000000402424\n.text:0000000000402428\n.text:000000000040242a\n.text:000000000040242c\n.text:000000000040242f\n.text:0000000000402440\n.text:0000000000402443\n.text:0000000000402446\n.text:0000000000402449\n.text:000000000040244b\n.text:000000000040244e\n.text:0000000000402450\n.text:0000000000402452\n.text:0000000000402454\n.text:0000000000402456\n.text:0000000000402459\n.text:000000000040245b\n.text:000000000040245d\n.text:000000000040245f\n.text:0000000000402463\n.text:0000000000402465\n.text:0000000000402467\n.text:000000000040246a\n'
p1350
tp1351
sS'register_tm_clones'
p1352
(S'\n__stdcall register_tm_clones()\n'
p1353
V\u000a/* WARNING: Removing unreachable block (ram,0x004019b3) */\u000a/* WARNING: Removing unreachable block (ram,0x004019bd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1354
S'MOV ESI,0x60a2a0\nPUSH RBP\nSUB RSI,0x60a2a0\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x004019c8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004019c8\nPOP RBP\nMOV EDI,0x60a2a0\nJMP RAX\nPOP RBP\nRET\n'
p1355
S'be a0 a2 60 00\n55\n48 81 ee a0 a2 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf a0 a2 60 00\nff e0\n5d\nc3\n'
p1356
S'.text:0000000000401990\n.text:0000000000401995\n.text:0000000000401996\n.text:000000000040199d\n.text:00000000004019a1\n.text:00000000004019a4\n.text:00000000004019a7\n.text:00000000004019ab\n.text:00000000004019ae\n.text:00000000004019b1\n.text:00000000004019b3\n.text:00000000004019b8\n.text:00000000004019bb\n.text:00000000004019bd\n.text:00000000004019be\n.text:00000000004019c3\n.text:00000000004019c8\n.text:00000000004019c9\n'
p1357
tp1358
sS'c_islower'
p1359
(S'\n__stdcall c_islower()\n'
p1360
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p1361
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1362
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p1363
S'.text:0000000000404a40\n.text:0000000000404a43\n.text:0000000000404a46\n.text:0000000000404a49\n'
p1364
tp1365
sS'fwrite'
p1366
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p1367
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_0060a200)();\u000a  return sVar1;\u000a}\u000a\u000a
p1368
S'JMP qword ptr [0x0060a200]\n'
p1369
S'ff 25 2a 89 20 00\n'
p1370
S'.plt:00000000004018d0\n'
p1371
tp1372
sS'randread_error'
p1373
(S'\n__stdcall randread_error(void * file_name)\n'
p1374
V\u000avoid randread_error(void *file_name)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  \u000a  iVar2 = exit_failure;\u000a  if (file_name != (void *)0x0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    pcVar5 = "%s: read error";\u000a    if (uVar1 == 0) {\u000a      pcVar5 = "%s: end of file";\u000a    }\u000a    uVar4 = dcgettext(0,pcVar5,5);\u000a    pcVar5 = quote((char *)file_name);\u000a    error((ulong)(uint)iVar2,(ulong)uVar1,uVar4,pcVar5);\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1375
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x004054a6\nMOV R14D,dword ptr [0x0060a240]\nCALL 0x00401540\nMOV EBP,dword ptr [RAX]\nTEST EBP,EBP\nMOV EAX,0x407888\nMOV ESI,0x407898\nCMOVZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00401630\nMOV R15,RAX\nMOV RDI,RBX\nCALL 0x00403ac0\nMOV RCX,RAX\nXOR EAX,EAX\nMOV EDI,R14D\nMOV ESI,EBP\nMOV RDX,R15\nCALL 0x00401860\nCALL 0x00401530\n'
p1376
S'55\n41 57\n41 56\n53\n50\n48 89 fb\n48 85 db\n74 47\n44 8b 35 da 4d 20 00\ne8 d5 c0 ff ff\n8b 28\n85 ed\nb8 88 78 40 00\nbe 98 78 40 00\n48 0f 44 f0\n31 ff\nba 05 00 00 00\ne8 a7 c1 ff ff\n49 89 c7\n48 89 df\ne8 2c e6 ff ff\n48 89 c1\n31 c0\n44 89 f7\n89 ee\n4c 89 fa\ne8 ba c3 ff ff\ne8 85 c0 ff ff\n'
p1377
S'.text:0000000000405450\n.text:0000000000405451\n.text:0000000000405453\n.text:0000000000405455\n.text:0000000000405456\n.text:0000000000405457\n.text:000000000040545a\n.text:000000000040545d\n.text:000000000040545f\n.text:0000000000405466\n.text:000000000040546b\n.text:000000000040546d\n.text:000000000040546f\n.text:0000000000405474\n.text:0000000000405479\n.text:000000000040547d\n.text:000000000040547f\n.text:0000000000405484\n.text:0000000000405489\n.text:000000000040548c\n.text:000000000040548f\n.text:0000000000405494\n.text:0000000000405497\n.text:0000000000405499\n.text:000000000040549c\n.text:000000000040549e\n.text:00000000004054a1\n.text:00000000004054a6\n'
p1378
tp1379
sS'try_file'
p1380
(S'\n__stdcall try_file(char * tmpl, void * flags)\n'
p1381
V\u000aint try_file(char *tmpl,void *flags)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = open(tmpl,*(uint *)flags & 0xffffff3c | 0xc2,0x180);\u000a  return iVar1;\u000a}\u000a\u000a
p1382
S'MOV ESI,dword ptr [RSI]\nAND ESI,0xffffff3c\nOR ESI,0xc2\nMOV EDX,0x180\nXOR EAX,EAX\nJMP 0x00401870\n'
p1383
S'8b 36\n81 e6 3c ff ff ff\n81 ce c2 00 00 00\nba 80 01 00 00\n31 c0\ne9 b6 d7 ff ff\n'
p1384
S'.text:00000000004040a0\n.text:00000000004040a2\n.text:00000000004040a8\n.text:00000000004040ae\n.text:00000000004040b3\n.text:00000000004040b5\n'
p1385
tp1386
sS'__do_global_dtors_aux'
p1387
(S'\n__stdcall __do_global_dtors_aux()\n'
p1388
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1389
S'CMP byte ptr [0x0060a2e8],0x0\nJNZ 0x004019ea\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401950\nPOP RBP\nMOV byte ptr [0x0060a2e8],0x1\nRET\n'
p1390
S'80 3d 11 89 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 fe 88 20 00 01\nf3 c3\n'
p1391
S'.text:00000000004019d0\n.text:00000000004019d7\n.text:00000000004019d9\n.text:00000000004019da\n.text:00000000004019dd\n.text:00000000004019e2\n.text:00000000004019e3\n.text:00000000004019ea\n'
p1392
tp1393
sS'c_isprint'
p1394
(S'\n__stdcall c_isprint()\n'
p1395
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p1396
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p1397
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p1398
S'.text:0000000000404a50\n.text:0000000000404a53\n.text:0000000000404a56\n.text:0000000000404a59\n'
p1399
tp1400
sS'_fini'
p1401
(S'\n__stdcall _fini()\n'
p1402
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1403
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1404
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1405
S'.fini:0000000000405eb0\n.fini:0000000000405eb4\n.fini:0000000000405eb8\n'
p1406
tp1407
sS'getpid'
p1408
(S'\n__stdcall getpid()\n'
p1409
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t getpid(void)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getpid_0060a088)();\u000a  return _Var1;\u000a}\u000a\u000a
p1410
S'JMP qword ptr [0x0060a088]\n'
p1411
S'ff 25 a2 8a 20 00\n'
p1412
S'.plt:00000000004015e0\n'
p1413
tp1414
sS'rpl_fcntl'
p1415
(S'\n__stdcall rpl_fcntl()\n'
p1416
V\u000a/* WARNING: Removing unreachable block (ram,0x00405ceb) */\u000a/* WARNING: Removing unreachable block (ram,0x00405d54) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff38 : 0x00405cf9 */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint rpl_fcntl(void...)\u000a\u000a{\u000a  int have_dupfd_cloexec;\u000a  int __fd;\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int __cmd;\u000a  uint __fd_00;\u000a  va_list arg;\u000a  ulong local_c8;\u000a  \u000a  if (__cmd == 0x406) {\u000a    if (have_dupfd_cloexec < 0) {\u000a      __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a    }\u000a    else {\u000a      __fd = fcntl(__fd_00,0x406,local_c8 & 0xffffffff);\u000a      have_dupfd_cloexec = 1;\u000a      if ((__fd < 0) && (piVar3 = __errno_location(), *piVar3 == 0x16)) {\u000a        __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a        have_dupfd_cloexec = -1;\u000a        if (__fd < 0) {\u000a          return __fd;\u000a        }\u000a      }\u000a    }\u000a    if (((-1 < __fd) && (have_dupfd_cloexec == -1)) &&\u000a       ((uVar1 = fcntl(__fd,1), (int)uVar1 < 0 ||\u000a        (iVar2 = fcntl(__fd,2,(ulong)(uVar1 | 1),(ulong)(uVar1 | 1)), iVar2 == -1)))) {\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a      __fd = -1;\u000a    }\u000a  }\u000a  else {\u000a    __fd = fcntl(__fd_00,__cmd,local_c8);\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p1417
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14D,EDI\nTEST AL,AL\nJZ 0x00405c7b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RAX,dword ptr [RSP]\nCMP ESI,0x406\nJNZ 0x00405cd6\nCMP EAX,0x28\nJA 0x00405ceb\nMOV RCX,qword ptr [RSP + 0x10]\nADD RCX,RAX\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00405cf9\nCMP EAX,0x28\nJA 0x00405d54\nMOV RCX,RAX\nADD RCX,qword ptr [RSP + 0x10]\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00405d62\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EBX,dword ptr [RCX]\nCMP dword ptr [0x0060a458],0x0\nJS 0x00405d73\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x004015d0\nMOV EBP,EAX\nMOV R15D,0x1\nTEST EBP,EBP\nJNS 0x00405d44\nCALL 0x00401540\nCMP dword ptr [RAX],0x16\nJNZ 0x00405d44\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00405c30\nMOV EBP,EAX\nMOV R15D,0xffffffff\nTEST EBP,EBP\nJS 0x00405dd6\nMOV dword ptr [0x0060a458],R15D\nTEST EBP,EBP\nJNS 0x00405d87\nJMP 0x00405dd6\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDX,qword ptr [RCX]\nXOR EAX,EAX\nMOV EDI,R14D\nCALL 0x004015d0\nMOV EBP,EAX\nJMP 0x00405dd6\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00405c30\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00405dd6\nCMP dword ptr [0x0060a458],-0x1\nJNZ 0x00405dd6\nMOV ESI,0x1\nXOR EAX,EAX\nMOV EDI,EBP\nCALL 0x004015d0\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x00405dbc\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBP\nMOV EDX,ECX\nCALL 0x004015d0\nCMP EAX,-0x1\nJNZ 0x00405dd6\nCALL 0x00401540\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00401700\nMOV dword ptr [RBX],R14D\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0xd8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1418
S'55\n41 57\n41 56\n53\n48 81 ec d8 00 00 00\n41 89 fe\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 04 24\n81 fe 06 04 00 00\n75 15\n83 f8 28\n77 25\n48 8b 4c 24 10\n48 01 c1\n8d 40 08\n89 04 24\neb 23\n83 f8 28\n77 79\n48 89 c1\n48 03 4c 24 10\n8d 40 08\n89 04 24\neb 77\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n8b 19\n83 3d 56 47 20 00 00\n78 6f\n31 c0\n44 89 f7\n89 da\ne8 c0 b8 ff ff\n89 c5\n41 bf 01 00 00 00\n85 ed\n79 28\ne8 1f b8 ff ff\n83 38 16\n75 1e\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 fc fe ff ff\n89 c5\n41 bf ff ff ff ff\n85 ed\n0f 88 92 00 00 00\n44 89 3d 0d 47 20 00\n85 ed\n79 38\ne9 82 00 00 00\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n48 8b 11\n31 c0\n44 89 f7\ne8 61 b8 ff ff\n89 c5\neb 63\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 af fe ff ff\n89 c5\n85 ed\n78 4f\n83 3d ca 46 20 00 ff\n75 46\nbe 01 00 00 00\n31 c0\n89 ef\ne8 32 b8 ff ff\n89 c1\n85 c9\n78 18\n83 c9 01\nbe 02 00 00 00\n31 c0\n89 ef\n89 ca\ne8 19 b8 ff ff\n83 f8 ff\n75 1a\ne8 7f b7 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 32 b9 ff ff\n44 89 33\nbd ff ff ff ff\n89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1419
S'.text:0000000000405c30\n.text:0000000000405c31\n.text:0000000000405c33\n.text:0000000000405c35\n.text:0000000000405c36\n.text:0000000000405c3d\n.text:0000000000405c40\n.text:0000000000405c42\n.text:0000000000405c44\n.text:0000000000405c49\n.text:0000000000405c4e\n.text:0000000000405c53\n.text:0000000000405c5b\n.text:0000000000405c63\n.text:0000000000405c6b\n.text:0000000000405c73\n.text:0000000000405c7b\n.text:0000000000405c80\n.text:0000000000405c85\n.text:0000000000405c8a\n.text:0000000000405c8f\n.text:0000000000405c94\n.text:0000000000405c99\n.text:0000000000405ca1\n.text:0000000000405ca6\n.text:0000000000405cae\n.text:0000000000405cb5\n.text:0000000000405cb9\n.text:0000000000405cbf\n.text:0000000000405cc1\n.text:0000000000405cc4\n.text:0000000000405cc6\n.text:0000000000405ccb\n.text:0000000000405cce\n.text:0000000000405cd1\n.text:0000000000405cd4\n.text:0000000000405cd6\n.text:0000000000405cd9\n.text:0000000000405cdb\n.text:0000000000405cde\n.text:0000000000405ce3\n.text:0000000000405ce6\n.text:0000000000405ce9\n.text:0000000000405ceb\n.text:0000000000405cf0\n.text:0000000000405cf4\n.text:0000000000405cf9\n.text:0000000000405cfb\n.text:0000000000405d02\n.text:0000000000405d04\n.text:0000000000405d06\n.text:0000000000405d09\n.text:0000000000405d0b\n.text:0000000000405d10\n.text:0000000000405d12\n.text:0000000000405d18\n.text:0000000000405d1a\n.text:0000000000405d1c\n.text:0000000000405d21\n.text:0000000000405d24\n.text:0000000000405d26\n.text:0000000000405d28\n.text:0000000000405d2a\n.text:0000000000405d2d\n.text:0000000000405d2f\n.text:0000000000405d34\n.text:0000000000405d36\n.text:0000000000405d3c\n.text:0000000000405d3e\n.text:0000000000405d44\n.text:0000000000405d4b\n.text:0000000000405d4d\n.text:0000000000405d4f\n.text:0000000000405d54\n.text:0000000000405d59\n.text:0000000000405d5d\n.text:0000000000405d62\n.text:0000000000405d65\n.text:0000000000405d67\n.text:0000000000405d6a\n.text:0000000000405d6f\n.text:0000000000405d71\n.text:0000000000405d73\n.text:0000000000405d75\n.text:0000000000405d77\n.text:0000000000405d7a\n.text:0000000000405d7c\n.text:0000000000405d81\n.text:0000000000405d83\n.text:0000000000405d85\n.text:0000000000405d87\n.text:0000000000405d8e\n.text:0000000000405d90\n.text:0000000000405d95\n.text:0000000000405d97\n.text:0000000000405d99\n.text:0000000000405d9e\n.text:0000000000405da0\n.text:0000000000405da2\n.text:0000000000405da4\n.text:0000000000405da7\n.text:0000000000405dac\n.text:0000000000405dae\n.text:0000000000405db0\n.text:0000000000405db2\n.text:0000000000405db7\n.text:0000000000405dba\n.text:0000000000405dbc\n.text:0000000000405dc1\n.text:0000000000405dc4\n.text:0000000000405dc7\n.text:0000000000405dc9\n.text:0000000000405dce\n.text:0000000000405dd1\n.text:0000000000405dd6\n.text:0000000000405dd8\n.text:0000000000405ddf\n.text:0000000000405de0\n.text:0000000000405de2\n.text:0000000000405de4\n.text:0000000000405de5\n'
p1420
tp1421
sS'__fpending'
p1422
(S'\n__stdcall __fpending()\n'
p1423
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_0060a060)();\u000a  return;\u000a}\u000a\u000a
p1424
S'JMP qword ptr [0x0060a060]\n'
p1425
S'ff 25 ca 8a 20 00\n'
p1426
S'.plt:0000000000401590\n'
p1427
tp1428
s.