(dp0
S'ungetc'
p1
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p2
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_00611200)();\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x00611200]\n'
p4
S'ff 25 6a f2 20 00\n'
p5
S'.plt:0000000000401f90\n'
p6
tp7
sS'version_etc_arn'
p8
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p9
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_0040d75b,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x4085f7;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x408678;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x40870c;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x00408488\nMOV EDX,0x40d748\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x00402100\nJMP 0x0040849d\nMOV EDX,0x40d754\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x00402100\nXOR EDI,EDI\nMOV ESI,0x40d75b\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x40da30\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00402100\nXOR EDI,EDI\nMOV ESI,0x40d75f\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x00401e70\nCMP R12,0x9\nJA 0x00408526\nJMP qword ptr [0x40d6f8 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x40d82a\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402100\nXOR EDI,EDI\nMOV ESI,0x40d969\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x38\nJMP 0x00408797\nXOR EDI,EDI\nMOV ESI,0x40d83a\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402100\nXOR EDI,EDI\nMOV ESI,0x40d851\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00402100\nXOR EDI,EDI\nMOV ESI,0x40d86d\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x18\nJMP 0x00408797\nXOR EDI,EDI\nMOV ESI,0x40d88d\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x18\nJMP 0x00408797\nXOR EDI,EDI\nMOV ESI,0x40d8b1\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x28\nJMP 0x00408797\nXOR EDI,EDI\nMOV ESI,0x40d8d9\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x28\nJMP 0x00408797\nXOR EDI,EDI\nMOV ESI,0x40d905\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x38\nJMP 0x00408797\nXOR EDI,EDI\nMOV ESI,0x40d935\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00402100\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x00401c10\n'
p11
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba 48 d7 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 7a 9c ff ff\neb 15\nba 54 d7 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 63 9c ff ff\n31 ff\nbe 5b d7 40 00\nba 05 00 00 00\ne8 62 98 ff ff\n48 89 c1\nbe 01 00 00 00\nba 30 da 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 35 9c ff ff\n31 ff\nbe 5f d7 40 00\nba 05 00 00 00\ne8 34 98 ff ff\n48 89 c7\n4c 89 f6\ne8 89 99 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 f8 d6 40 00\n31 ff\nbe 2a d8 40 00\nba 05 00 00 00\ne8 0a 98 ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 da 9b ff ff\n31 ff\nbe 69 d9 40 00\nba 05 00 00 00\ne8 d9 97 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 91 9b ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe 3a d8 40 00\nba 05 00 00 00\ne8 87 97 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 53 9b ff ff\n31 ff\nbe 51 d8 40 00\nba 05 00 00 00\ne8 52 97 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 1a 9b ff ff\n31 ff\nbe 6d d8 40 00\nba 05 00 00 00\ne8 19 97 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 e4 9a ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe 8d d8 40 00\nba 05 00 00 00\ne8 da 96 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 a2 9a ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe b1 d8 40 00\nba 05 00 00 00\ne8 98 96 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 58 9a ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe d9 d8 40 00\nba 05 00 00 00\ne8 4e 96 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 0e 9a ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe 05 d9 40 00\nba 05 00 00 00\ne8 04 96 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 bc 99 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe 35 d9 40 00\nba 05 00 00 00\ne8 b5 95 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 6d 99 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 6c 94 ff ff\n'
p12
S'.text:0000000000408450\n.text:0000000000408452\n.text:0000000000408454\n.text:0000000000408456\n.text:0000000000408457\n.text:0000000000408458\n.text:000000000040845b\n.text:000000000040845e\n.text:0000000000408461\n.text:0000000000408464\n.text:0000000000408467\n.text:000000000040846a\n.text:000000000040846f\n.text:0000000000408472\n.text:0000000000408474\n.text:0000000000408479\n.text:000000000040847b\n.text:000000000040847e\n.text:0000000000408481\n.text:0000000000408486\n.text:0000000000408488\n.text:000000000040848d\n.text:000000000040848f\n.text:0000000000408492\n.text:0000000000408495\n.text:0000000000408498\n.text:000000000040849d\n.text:000000000040849f\n.text:00000000004084a4\n.text:00000000004084a9\n.text:00000000004084ae\n.text:00000000004084b1\n.text:00000000004084b6\n.text:00000000004084bb\n.text:00000000004084c1\n.text:00000000004084c3\n.text:00000000004084c6\n.text:00000000004084cb\n.text:00000000004084cd\n.text:00000000004084d2\n.text:00000000004084d7\n.text:00000000004084dc\n.text:00000000004084df\n.text:00000000004084e2\n.text:00000000004084e7\n.text:00000000004084eb\n.text:00000000004084ed\n.text:00000000004084f5\n.text:00000000004084f7\n.text:00000000004084fc\n.text:0000000000408501\n.text:0000000000408506\n.text:0000000000408509\n.text:000000000040850c\n.text:0000000000408511\n.text:0000000000408513\n.text:0000000000408516\n.text:000000000040851a\n.text:000000000040851b\n.text:000000000040851d\n.text:000000000040851f\n.text:0000000000408521\n.text:0000000000408526\n.text:0000000000408528\n.text:000000000040852d\n.text:0000000000408532\n.text:0000000000408537\n.text:000000000040853a\n.text:000000000040853d\n.text:0000000000408541\n.text:0000000000408545\n.text:000000000040854a\n.text:000000000040854f\n.text:0000000000408552\n.text:0000000000408556\n.text:000000000040855a\n.text:000000000040855e\n.text:0000000000408562\n.text:0000000000408566\n.text:000000000040856a\n.text:000000000040856f\n.text:0000000000408573\n.text:0000000000408578\n.text:000000000040857a\n.text:000000000040857f\n.text:0000000000408584\n.text:0000000000408589\n.text:000000000040858c\n.text:000000000040858f\n.text:0000000000408593\n.text:0000000000408598\n.text:000000000040859a\n.text:000000000040859d\n.text:00000000004085a1\n.text:00000000004085a2\n.text:00000000004085a4\n.text:00000000004085a6\n.text:00000000004085a8\n.text:00000000004085ad\n.text:00000000004085af\n.text:00000000004085b4\n.text:00000000004085b9\n.text:00000000004085be\n.text:00000000004085c1\n.text:00000000004085c4\n.text:00000000004085c8\n.text:00000000004085cc\n.text:00000000004085d1\n.text:00000000004085d3\n.text:00000000004085d6\n.text:00000000004085da\n.text:00000000004085db\n.text:00000000004085dd\n.text:00000000004085df\n.text:00000000004085e1\n.text:00000000004085e6\n.text:00000000004085e8\n.text:00000000004085ed\n.text:00000000004085f2\n.text:00000000004085f7\n.text:00000000004085fa\n.text:00000000004085fd\n.text:0000000000408601\n.text:0000000000408605\n.text:0000000000408609\n.text:000000000040860e\n.text:0000000000408610\n.text:0000000000408613\n.text:0000000000408617\n.text:000000000040861c\n.text:0000000000408620\n.text:0000000000408625\n.text:0000000000408627\n.text:000000000040862c\n.text:0000000000408631\n.text:0000000000408636\n.text:0000000000408639\n.text:000000000040863c\n.text:0000000000408640\n.text:0000000000408644\n.text:0000000000408649\n.text:000000000040864e\n.text:0000000000408651\n.text:0000000000408655\n.text:0000000000408659\n.text:000000000040865e\n.text:0000000000408662\n.text:0000000000408667\n.text:0000000000408669\n.text:000000000040866e\n.text:0000000000408673\n.text:0000000000408678\n.text:000000000040867b\n.text:000000000040867e\n.text:0000000000408682\n.text:0000000000408686\n.text:000000000040868a\n.text:000000000040868f\n.text:0000000000408694\n.text:0000000000408697\n.text:000000000040869b\n.text:000000000040869f\n.text:00000000004086a3\n.text:00000000004086a8\n.text:00000000004086ac\n.text:00000000004086b1\n.text:00000000004086b3\n.text:00000000004086b8\n.text:00000000004086bd\n.text:00000000004086c2\n.text:00000000004086c5\n.text:00000000004086c8\n.text:00000000004086cc\n.text:00000000004086d0\n.text:00000000004086d5\n.text:00000000004086da\n.text:00000000004086dd\n.text:00000000004086e1\n.text:00000000004086e5\n.text:00000000004086e9\n.text:00000000004086ed\n.text:00000000004086f2\n.text:00000000004086f6\n.text:00000000004086fb\n.text:00000000004086fd\n.text:0000000000408702\n.text:0000000000408707\n.text:000000000040870c\n.text:000000000040870f\n.text:0000000000408712\n.text:0000000000408716\n.text:000000000040871a\n.text:000000000040871e\n.text:0000000000408723\n.text:0000000000408728\n.text:000000000040872b\n.text:000000000040872f\n.text:0000000000408733\n.text:0000000000408737\n.text:000000000040873b\n.text:000000000040873f\n.text:0000000000408744\n.text:0000000000408748\n.text:000000000040874a\n.text:000000000040874c\n.text:0000000000408751\n.text:0000000000408756\n.text:000000000040875b\n.text:000000000040875e\n.text:0000000000408761\n.text:0000000000408765\n.text:0000000000408769\n.text:000000000040876e\n.text:0000000000408773\n.text:0000000000408776\n.text:000000000040877a\n.text:000000000040877e\n.text:0000000000408782\n.text:0000000000408786\n.text:000000000040878a\n.text:000000000040878e\n.text:0000000000408793\n.text:0000000000408797\n.text:0000000000408798\n.text:000000000040879a\n.text:000000000040879c\n.text:000000000040879e\n.text:000000000040879f\n'
p13
tp14
sS'mktime_internal'
p15
(S'\n__stdcall mktime_internal(tm * tp, anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * offset)\n'
p16
V\u000atime_t mktime_internal(tm *tp,tm *(*convert)(time_t *,tm *),time_t *offset)\u000a\u000a{\u000a  uint uVar1;\u000a  tm *(*convert_00)(time_t *,tm *);\u000a  int iVar2;\u000a  int iVar3;\u000a  time_t tVar4;\u000a  tm *ptVar5;\u000a  uint uVar6;\u000a  time_t tVar7;\u000a  long a;\u000a  int iVar8;\u000a  long lVar9;\u000a  bool bVar10;\u000a  bool bVar11;\u000a  int isdst;\u000a  time_t local_108;\u000a  uint local_100;\u000a  int local_fc;\u000a  uint local_f8;\u000a  int local_f4;\u000a  time_t local_f0;\u000a  time_t local_e8;\u000a  long *local_e0;\u000a  long local_d8;\u000a  long local_d0;\u000a  long local_c8;\u000a  tm *local_c0;\u000a  long local_b8;\u000a  long local_b0;\u000a  tm *(*local_a8)(time_t *,tm *);\u000a  int local_a0;\u000a  int iStack156;\u000a  int iStack152;\u000a  int iStack148;\u000a  int local_90;\u000a  int iStack140;\u000a  int iStack136;\u000a  int iStack132;\u000a  int local_80;\u000a  undefined4 uStack124;\u000a  undefined4 uStack120;\u000a  undefined4 uStack116;\u000a  char *local_70;\u000a  tm local_68;\u000a  \u000a  iVar8 = tp->tm_sec;\u000a  local_b0 = (long)iVar8;\u000a  local_100 = tp->tm_min;\u000a  local_f8 = tp->tm_hour;\u000a  iVar3 = tp->tm_mon;\u000a  local_f4 = tp->tm_isdst;\u000a  iVar2 = iVar3 / 0xc + (iVar3 >> 0x1f) + ((uint)(iVar3 / 6 + (iVar3 >> 0x1f)) >> 0x1f);\u000a  uVar6 = iVar3 + iVar2 * -0xc;\u000a  local_d0 = (long)(int)(iVar2 - (uVar6 >> 0x1f)) + (long)tp->tm_year;\u000a  iVar3 = tp->tm_mday;\u000a  local_e0 = offset;\u000a  local_c0 = tp;\u000a  local_a8 = convert;\u000a  iVar2 = leapyear(local_d0);\u000a  uVar1 = local_f8;\u000a  bVar10 = false;\u000a  local_d8 = (long)iVar3 + -1 +\u000a             (ulong)__mon_yday[(long)iVar2 * 0xd + (long)(int)(((int)uVar6 >> 0x1f & 0xcU) + uVar6)]\u000a  ;\u000a  local_b8 = *local_e0;\u000a  iVar3 = 0;\u000a  if (-1 < local_b0) {\u000a    iVar3 = iVar8;\u000a  }\u000a  local_fc = 0x3b;\u000a  if (iVar3 < 0x3c) {\u000a    local_fc = iVar3;\u000a  }\u000a  local_108 = ydhms_diff(local_d0,local_d8,local_f8,local_100,local_fc,0x46);\u000a  convert_00 = local_a8;\u000a  local_f0 = local_108;\u000a  local_e8 = local_108;\u000a  ranged_convert(local_a8,&local_108,(tm *)&local_a0);\u000a  uVar6 = local_100;\u000a  tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)uVar1,(tm *)(ulong)local_100);\u000a  if (local_108 != tVar4) {\u000a    iVar8 = -6;\u000a    tVar7 = local_e8;\u000a    do {\u000a      a = local_f0;\u000a      if ((local_108 == tVar7) && (local_108 != local_f0)) {\u000a        if (local_80 < 0) goto LAB_0040a9ab;\u000a        if (local_f4 < 0) {\u000a          if (bVar10 <= (local_80 != 0)) goto LAB_0040a9ab;\u000a        }\u000a        else {\u000a          if ((local_f4 != 0) != (local_80 != 0)) goto LAB_0040a9ab;\u000a        }\u000a      }\u000a      iVar8 = iVar8 + 1;\u000a      if (iVar8 == 0) {\u000a        return -1;\u000a      }\u000a      local_f0 = local_108;\u000a      bVar10 = local_80 != 0;\u000a      local_108 = tVar4;\u000a      ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a      tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,(tm *)(ulong)uVar6);\u000a      tVar7 = a;\u000a    } while (local_108 != tVar4);\u000a  }\u000a  iVar8 = isdst_differ();\u000a  if (iVar8 != 0) {\u000a    a = 0x92c70;\u000a    do {\u000a      lVar9 = -1;\u000a      do {\u000a        iVar8 = time_t_int_add_ok(local_108);\u000a        if (iVar8 != 0) {\u000a          local_c8 = lVar9 * a + local_108;\u000a          ranged_convert(convert_00,&local_c8,&local_68);\u000a          iVar8 = isdst_differ();\u000a          if (iVar8 == 0) {\u000a            local_108 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,\u000a                                      (tm *)(ulong)local_100);\u000a            ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a            goto LAB_0040a9ab;\u000a          }\u000a        }\u000a        bVar10 = lVar9 < 0;\u000a        lVar9 = lVar9 + 2;\u000a      } while (bVar10);\u000a      a = a + 0x92c70;\u000a    } while (a < 0x1005fe28);\u000a  }\u000aLAB_0040a9ab:\u000a  a = local_b0;\u000a  iVar8 = local_fc;\u000a  *local_e0 = (local_b8 - local_e8) + local_108;\u000a  if ((int)local_b0 != local_a0) {\u000a    bVar10 = local_fc == 0;\u000a    bVar11 = local_a0 == 0x3c;\u000a    iVar3 = time_t_int_add_ok(local_108);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    a = a + local_108;\u000a    iVar3 = time_t_int_add_ok(a);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    local_f0 = a + (long)(int)((uint)(bVar10 && bVar11) - iVar8);\u000a    ptVar5 = (*convert_00)(&local_f0,(tm *)&local_a0);\u000a    if (ptVar5 == (tm *)0x0) {\u000a      return -1;\u000a    }\u000a    local_108 = local_f0;\u000a  }\u000a  local_c0->tm_zone = local_70;\u000a  local_c0->tm_isdst = local_80;\u000a  *(undefined4 *)&local_c0->field_0x24 = uStack124;\u000a  *(undefined4 *)&local_c0->tm_gmtoff = uStack120;\u000a  *(undefined4 *)((long)&local_c0->tm_gmtoff + 4) = uStack116;\u000a  local_c0->tm_mon = local_90;\u000a  local_c0->tm_year = iStack140;\u000a  local_c0->tm_wday = iStack136;\u000a  local_c0->tm_yday = iStack132;\u000a  local_c0->tm_sec = local_a0;\u000a  local_c0->tm_min = iStack156;\u000a  local_c0->tm_hour = iStack152;\u000a  local_c0->tm_mday = iStack148;\u000a  return local_108;\u000a}\u000a\u000a
p17
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV qword ptr [RSP + 0x28],RDX\nMOV qword ptr [RSP + 0x60],RSI\nMOVSXD R15,dword ptr [RDI]\nMOV EAX,dword ptr [RDI + 0x4]\nMOV dword ptr [RSP + 0x8],EAX\nMOV EAX,dword ptr [RDI + 0x8]\nMOV dword ptr [RSP + 0x10],EAX\nMOVSXD RBX,dword ptr [RDI + 0x10]\nMOV EAX,dword ptr [RDI + 0x20]\nMOV dword ptr [RSP + 0x14],EAX\nIMUL RAX,RBX,0x2aaaaaab\nMOV RCX,RAX\nSHR RCX,0x3f\nSAR RAX,0x21\nADD EAX,ECX\nLEA ECX,[RAX*0x4]\nLEA ECX,[RCX + RCX*0x2]\nSUB EBX,ECX\nMOV ECX,EBX\nSHR ECX,0x1f\nSUB EAX,ECX\nMOVSXD RCX,dword ptr [RDI + 0x14]\nMOVSXD R13,EAX\nADD R13,RCX\nMOV qword ptr [RSP + 0x48],RDI\nMOVSXD R14,dword ptr [RDI + 0xc]\nMOV RDI,R13\nCALL 0x0040aa90\nCDQE\nMOV ECX,EBX\nSAR ECX,0x1f\nAND ECX,0xc\nADD ECX,EBX\nIMUL RAX,RAX,0x1a\nXOR EBP,EBP\nTEST R15,R15\nMOVSXD RCX,ECX\nMOVZX EAX,word ptr [0x40dff0 + RAX + RCX*0x2]\nLEA R12,[R14 + RAX*0x1 + -0x1]\nMOV RAX,qword ptr [RSP + 0x28]\nMOV RDX,qword ptr [RAX]\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x58],R15\nCMOVNS EAX,R15D\nCMP EAX,0x3c\nMOV EBX,0x3b\nCMOVL EBX,EAX\nMOV qword ptr [RSP + 0x50],RDX\nMOV EAX,EDX\nNEG EAX\nMOV R9D,0x46\nMOV RDI,R13\nMOV RSI,R12\nMOV R14D,dword ptr [RSP + 0x10]\nMOV EDX,R14D\nMOV ECX,dword ptr [RSP + 0x8]\nMOV R8D,EBX\nPUSH RAX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x0040aaf0\nADD RSP,0x20\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,qword ptr [RSP + 0x60]\nMOV R15,RDI\nCALL 0x0040ac90\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x40],R13\nMOV RDI,R13\nMOV qword ptr [RSP + 0x38],R12\nMOV RSI,R12\nMOV EDX,R14D\nMOV R14D,dword ptr [RSP + 0x10]\nMOV ECX,R14D\nMOV dword ptr [RSP + 0x14],EBX\nMOV R8D,EBX\nLEA R9,[RSP + 0x8]\nPUSH RAX\nCALL 0x0040ac00\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJZ 0x0040a8dd\nMOV R13D,0xfffffffa\nMOV R12,RSP\nMOV RBX,qword ptr [RSP + 0x20]\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP RCX,RBX\nJNZ 0x0040a870\nCMP RCX,qword ptr [RSP + 0x18]\nJZ 0x0040a870\nMOV ECX,dword ptr [0x88 + RSP]\nTEST ECX,ECX\nJS 0x0040a9ab\nMOV EDX,dword ptr [RSP + 0x14]\nTEST EDX,EDX\nJS 0x0040a856\nTEST ECX,ECX\nSETNZ CL\nTEST EDX,EDX\nSETNZ DL\nXOR DL,CL\nJZ 0x0040a870\nJMP 0x0040a9ab\nXOR EDX,EDX\nTEST ECX,ECX\nSETNZ DL\nCMP EBP,EDX\nJBE 0x0040a9ab\nNOP dword ptr CS:[RAX + RAX*0x1]\nINC R13D\nJZ 0x0040aa6c\nMOV RBX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP]\nMOV qword ptr [RSP + 0x18],RCX\nMOV qword ptr [RSP],RAX\nXOR EBP,EBP\nCMP dword ptr [0x88 + RSP],0x0\nSETNZ BPL\nMOV RDI,R15\nMOV RSI,R12\nLEA RDX,[RSP + 0x68]\nCALL 0x0040ac90\nSUB RSP,0x8\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,R14D\nMOV R8D,dword ptr [RSP + 0x14]\nMOV R9,R12\nPUSH RAX\nCALL 0x0040ac00\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJNZ 0x0040a820\nMOV ESI,dword ptr [0x88 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x0040ad60\nTEST EAX,EAX\nJZ 0x0040a9ab\nMOV EBX,0x92c70\nLEA R13,[RSP + 0x40]\nLEA RBP,[0xa0 + RSP]\nMOV R14,-0x1\nNOP\nMOV RDI,qword ptr [RSP]\nMOV R12,R14\nIMUL R12,RBX\nMOV ESI,R12D\nCALL 0x0040ad80\nTEST EAX,EAX\nJZ 0x0040a952\nADD R12,qword ptr [RSP]\nMOV qword ptr [RSP + 0x40],R12\nMOV RDI,R15\nMOV RSI,R13\nMOV RDX,RBP\nCALL 0x0040ac90\nMOV ESI,dword ptr [0xc0 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x0040ad60\nTEST EAX,EAX\nJZ 0x0040a96d\nTEST R14,R14\nLEA R14,[R14 + 0x2]\nJS 0x0040a910\nADD RBX,0x92c70\nCMP RBX,0x1005fe28\nJL 0x0040a907\nJMP 0x0040a9ab\nSUB RSP,0x8\nLEA R9,[RSP + 0x48]\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,dword ptr [RSP + 0x10]\nMOV R8D,dword ptr [RSP + 0x14]\nPUSH RBP\nCALL 0x0040ac00\nADD RSP,0x10\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,R15\nCALL 0x0040ac90\nMOV RDI,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x50]\nSUB RCX,qword ptr [RSP + 0x20]\nADD RCX,RDI\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [RAX],RCX\nMOV EAX,dword ptr [RSP + 0x68]\nMOV RBX,qword ptr [RSP + 0x58]\nCMP EBX,EAX\nJZ 0x0040aa38\nMOV R13D,dword ptr [RSP + 0xc]\nTEST R13D,R13D\nSETZ R12B\nCMP EAX,0x3c\nSETZ BPL\nMOV ESI,EBX\nCALL 0x0040ad80\nMOV R14,-0x1\nTEST EAX,EAX\nJZ 0x0040aa73\nAND R12B,BPL\nMOVZX EBP,R12B\nSUB EBP,R13D\nADD RBX,qword ptr [RSP]\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x0040ad80\nTEST EAX,EAX\nJZ 0x0040aa73\nMOVSXD RAX,EBP\nADD RBX,RAX\nMOV qword ptr [RSP + 0x18],RBX\nLEA RDI,[RSP + 0x18]\nLEA RSI,[RSP + 0x68]\nCALL R15\nTEST RAX,RAX\nJZ 0x0040aa73\nMOV RAX,qword ptr [RSP + 0x18]\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [0x98 + RSP]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x68]\nMOVUPS XMM1,xmmword ptr [RSP + 0x78]\nMOVUPS XMM2,xmmword ptr [0x88 + RSP]\nMOVUPS xmmword ptr [RCX + 0x20],XMM2\nMOVUPS xmmword ptr [RCX + 0x10],XMM1\nMOVUPS xmmword ptr [RCX],XMM0\nMOV R14,qword ptr [RSP]\nJMP 0x0040aa73\nMOV R14,-0x1\nMOV RAX,R14\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p18
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n48 89 54 24 28\n48 89 74 24 60\n4c 63 3f\n8b 47 04\n89 44 24 08\n8b 47 08\n89 44 24 10\n48 63 5f 10\n8b 47 20\n89 44 24 14\n48 69 c3 ab aa aa 2a\n48 89 c1\n48 c1 e9 3f\n48 c1 f8 21\n01 c8\n8d 0c 85 00 00 00 00\n8d 0c 49\n29 cb\n89 d9\nc1 e9 1f\n29 c8\n48 63 4f 14\n4c 63 e8\n49 01 cd\n48 89 7c 24 48\n4c 63 77 0c\n4c 89 ef\ne8 67 03 00 00\n48 98\n89 d9\nc1 f9 1f\n83 e1 0c\n01 d9\n48 6b c0 1a\n31 ed\n4d 85 ff\n48 63 c9\n0f b7 84 48 f0 df 40 00\n4d 8d 64 06 ff\n48 8b 44 24 28\n48 8b 10\nb8 00 00 00 00\n4c 89 7c 24 58\n41 0f 49 c7\n83 f8 3c\nbb 3b 00 00 00\n0f 4c d8\n48 89 54 24 50\n89 d0\nf7 d8\n41 b9 46 00 00 00\n4c 89 ef\n4c 89 e6\n44 8b 74 24 10\n44 89 f2\n8b 4c 24 08\n41 89 d8\n50\n6a 00\n6a 00\n6a 00\ne8 51 03 00 00\n48 83 c4 20\n48 89 44 24 18\n48 89 44 24 20\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n48 8b 7c 24 60\n49 89 ff\ne8 ca 04 00 00\n48 83 ec 08\n4c 89 6c 24 40\n4c 89 ef\n4c 89 64 24 38\n4c 89 e6\n44 89 f2\n44 8b 74 24 10\n44 89 f1\n89 5c 24 14\n41 89 d8\n4c 8d 4c 24 08\n50\ne8 09 04 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 84 d5 00 00 00\n41 bd fa ff ff ff\n49 89 e4\n48 8b 5c 24 20\n66 2e 0f 1f 84 00 00 00 00 00\n48 39 d9\n75 4b\n48 3b 4c 24 18\n74 44\n8b 8c 24 88 00 00 00\n85 c9\n0f 88 70 01 00 00\n8b 54 24 14\n85 d2\n78 13\n85 c9\n0f 95 c1\n85 d2\n0f 95 c2\n30 ca\n74 1f\ne9 55 01 00 00\n31 d2\n85 c9\n0f 95 c2\n39 d5\n0f 86 46 01 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 ff c5\n0f 84 f3 01 00 00\n48 8b 5c 24 18\n48 8b 0c 24\n48 89 4c 24 18\n48 89 04 24\n31 ed\n83 bc 24 88 00 00 00 00\n40 0f 95 c5\n4c 89 ff\n4c 89 e6\n48 8d 54 24 68\ne8 e7 03 00 00\n48 83 ec 08\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n44 89 f1\n44 8b 44 24 14\n4d 89 e1\n50\ne8 34 03 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 85 43 ff ff ff\n8b b4 24 88 00 00 00\n8b 7c 24 14\ne8 73 04 00 00\n85 c0\n0f 84 b6 00 00 00\nbb 70 2c 09 00\n4c 8d 6c 24 40\n48 8d ac 24 a0 00 00 00\n49 c7 c6 ff ff ff ff\n66 90\n48 8b 3c 24\n4d 89 f4\n4c 0f af e3\n44 89 e6\ne8 5d 04 00 00\n85 c0\n74 2b\n4c 03 24 24\n4c 89 64 24 40\n4c 89 ff\n4c 89 ee\n48 89 ea\ne8 52 03 00 00\n8b b4 24 c0 00 00 00\n8b 7c 24 14\ne8 12 04 00 00\n85 c0\n74 1b\n4d 85 f6\n4d 8d 76 02\n78 b5\n48 81 c3 70 2c 09 00\n48 81 fb 28 fe 05 10\n7c 9c\neb 3e\n48 83 ec 08\n4c 8d 4c 24 48\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n8b 4c 24 10\n44 8b 44 24 14\n55\ne8 6d 02 00 00\n48 83 c4 10\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n4c 89 ff\ne8 e5 02 00 00\n48 8b 3c 24\n48 8b 4c 24 50\n48 2b 4c 24 20\n48 01 f9\n48 8b 44 24 28\n48 89 08\n8b 44 24 68\n48 8b 5c 24 58\n39 c3\n74 67\n44 8b 6c 24 0c\n45 85 ed\n41 0f 94 c4\n83 f8 3c\n40 0f 94 c5\n89 de\ne8 95 03 00 00\n49 c7 c6 ff ff ff ff\n85 c0\n74 7d\n41 20 ec\n41 0f b6 ec\n44 29 ed\n48 03 1c 24\n48 89 df\n89 ee\ne8 72 03 00 00\n85 c0\n74 61\n48 63 c5\n48 01 c3\n48 89 5c 24 18\n48 8d 7c 24 18\n48 8d 74 24 68\n41 ff d7\n48 85 c0\n74 44\n48 8b 44 24 18\n48 89 04 24\n48 8b 84 24 98 00 00 00\n48 8b 4c 24 48\n48 89 41 30\n0f 10 44 24 68\n0f 10 4c 24 78\n0f 10 94 24 88 00 00 00\n0f 11 51 20\n0f 11 49 10\n0f 11 01\n4c 8b 34 24\neb 07\n49 c7 c6 ff ff ff ff\n4c 89 f0\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p19
S'.text:000000000040a6b0\n.text:000000000040a6b1\n.text:000000000040a6b3\n.text:000000000040a6b5\n.text:000000000040a6b7\n.text:000000000040a6b9\n.text:000000000040a6ba\n.text:000000000040a6c1\n.text:000000000040a6c6\n.text:000000000040a6cb\n.text:000000000040a6ce\n.text:000000000040a6d1\n.text:000000000040a6d5\n.text:000000000040a6d8\n.text:000000000040a6dc\n.text:000000000040a6e0\n.text:000000000040a6e3\n.text:000000000040a6e7\n.text:000000000040a6ee\n.text:000000000040a6f1\n.text:000000000040a6f5\n.text:000000000040a6f9\n.text:000000000040a6fb\n.text:000000000040a702\n.text:000000000040a705\n.text:000000000040a707\n.text:000000000040a709\n.text:000000000040a70c\n.text:000000000040a70e\n.text:000000000040a712\n.text:000000000040a715\n.text:000000000040a718\n.text:000000000040a71d\n.text:000000000040a721\n.text:000000000040a724\n.text:000000000040a729\n.text:000000000040a72b\n.text:000000000040a72d\n.text:000000000040a730\n.text:000000000040a733\n.text:000000000040a735\n.text:000000000040a739\n.text:000000000040a73b\n.text:000000000040a73e\n.text:000000000040a741\n.text:000000000040a749\n.text:000000000040a74e\n.text:000000000040a753\n.text:000000000040a756\n.text:000000000040a75b\n.text:000000000040a760\n.text:000000000040a764\n.text:000000000040a767\n.text:000000000040a76c\n.text:000000000040a76f\n.text:000000000040a774\n.text:000000000040a776\n.text:000000000040a778\n.text:000000000040a77e\n.text:000000000040a781\n.text:000000000040a784\n.text:000000000040a789\n.text:000000000040a78c\n.text:000000000040a790\n.text:000000000040a793\n.text:000000000040a794\n.text:000000000040a796\n.text:000000000040a798\n.text:000000000040a79a\n.text:000000000040a79f\n.text:000000000040a7a3\n.text:000000000040a7a8\n.text:000000000040a7ad\n.text:000000000040a7b1\n.text:000000000040a7b4\n.text:000000000040a7b9\n.text:000000000040a7be\n.text:000000000040a7c1\n.text:000000000040a7c6\n.text:000000000040a7ca\n.text:000000000040a7cf\n.text:000000000040a7d2\n.text:000000000040a7d7\n.text:000000000040a7da\n.text:000000000040a7dd\n.text:000000000040a7e2\n.text:000000000040a7e5\n.text:000000000040a7e9\n.text:000000000040a7ec\n.text:000000000040a7f1\n.text:000000000040a7f2\n.text:000000000040a7f7\n.text:000000000040a7fb\n.text:000000000040a7ff\n.text:000000000040a802\n.text:000000000040a808\n.text:000000000040a80e\n.text:000000000040a811\n.text:000000000040a816\n.text:000000000040a820\n.text:000000000040a823\n.text:000000000040a825\n.text:000000000040a82a\n.text:000000000040a82c\n.text:000000000040a833\n.text:000000000040a835\n.text:000000000040a83b\n.text:000000000040a83f\n.text:000000000040a841\n.text:000000000040a843\n.text:000000000040a845\n.text:000000000040a848\n.text:000000000040a84a\n.text:000000000040a84d\n.text:000000000040a84f\n.text:000000000040a851\n.text:000000000040a856\n.text:000000000040a858\n.text:000000000040a85a\n.text:000000000040a85d\n.text:000000000040a85f\n.text:000000000040a865\n.text:000000000040a870\n.text:000000000040a873\n.text:000000000040a879\n.text:000000000040a87e\n.text:000000000040a882\n.text:000000000040a887\n.text:000000000040a88b\n.text:000000000040a88d\n.text:000000000040a895\n.text:000000000040a899\n.text:000000000040a89c\n.text:000000000040a89f\n.text:000000000040a8a4\n.text:000000000040a8a9\n.text:000000000040a8ad\n.text:000000000040a8b2\n.text:000000000040a8b7\n.text:000000000040a8bb\n.text:000000000040a8be\n.text:000000000040a8c3\n.text:000000000040a8c6\n.text:000000000040a8c7\n.text:000000000040a8cc\n.text:000000000040a8d0\n.text:000000000040a8d4\n.text:000000000040a8d7\n.text:000000000040a8dd\n.text:000000000040a8e4\n.text:000000000040a8e8\n.text:000000000040a8ed\n.text:000000000040a8ef\n.text:000000000040a8f5\n.text:000000000040a8fa\n.text:000000000040a8ff\n.text:000000000040a907\n.text:000000000040a90e\n.text:000000000040a910\n.text:000000000040a914\n.text:000000000040a917\n.text:000000000040a91b\n.text:000000000040a91e\n.text:000000000040a923\n.text:000000000040a925\n.text:000000000040a927\n.text:000000000040a92b\n.text:000000000040a930\n.text:000000000040a933\n.text:000000000040a936\n.text:000000000040a939\n.text:000000000040a93e\n.text:000000000040a945\n.text:000000000040a949\n.text:000000000040a94e\n.text:000000000040a950\n.text:000000000040a952\n.text:000000000040a955\n.text:000000000040a959\n.text:000000000040a95b\n.text:000000000040a962\n.text:000000000040a969\n.text:000000000040a96b\n.text:000000000040a96d\n.text:000000000040a971\n.text:000000000040a976\n.text:000000000040a97b\n.text:000000000040a980\n.text:000000000040a984\n.text:000000000040a988\n.text:000000000040a98d\n.text:000000000040a98e\n.text:000000000040a993\n.text:000000000040a997\n.text:000000000040a99b\n.text:000000000040a99e\n.text:000000000040a9a3\n.text:000000000040a9a6\n.text:000000000040a9ab\n.text:000000000040a9af\n.text:000000000040a9b4\n.text:000000000040a9b9\n.text:000000000040a9bc\n.text:000000000040a9c1\n.text:000000000040a9c4\n.text:000000000040a9c8\n.text:000000000040a9cd\n.text:000000000040a9cf\n.text:000000000040a9d1\n.text:000000000040a9d6\n.text:000000000040a9d9\n.text:000000000040a9dd\n.text:000000000040a9e0\n.text:000000000040a9e4\n.text:000000000040a9e6\n.text:000000000040a9eb\n.text:000000000040a9f2\n.text:000000000040a9f4\n.text:000000000040a9f6\n.text:000000000040a9f9\n.text:000000000040a9fd\n.text:000000000040aa00\n.text:000000000040aa04\n.text:000000000040aa07\n.text:000000000040aa09\n.text:000000000040aa0e\n.text:000000000040aa10\n.text:000000000040aa12\n.text:000000000040aa15\n.text:000000000040aa18\n.text:000000000040aa1d\n.text:000000000040aa22\n.text:000000000040aa27\n.text:000000000040aa2a\n.text:000000000040aa2d\n.text:000000000040aa2f\n.text:000000000040aa34\n.text:000000000040aa38\n.text:000000000040aa40\n.text:000000000040aa45\n.text:000000000040aa49\n.text:000000000040aa4e\n.text:000000000040aa53\n.text:000000000040aa5b\n.text:000000000040aa5f\n.text:000000000040aa63\n.text:000000000040aa66\n.text:000000000040aa6a\n.text:000000000040aa6c\n.text:000000000040aa73\n.text:000000000040aa76\n.text:000000000040aa7d\n.text:000000000040aa7e\n.text:000000000040aa80\n.text:000000000040aa82\n.text:000000000040aa84\n.text:000000000040aa86\n.text:000000000040aa87\n'
p20
tp21
sS'strchr'
p22
(S'\n__stdcall strchr(char * __s, int __c)\n'
p23
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_00611100)();\u000a  return pcVar1;\u000a}\u000a\u000a
p24
S'JMP qword ptr [0x00611100]\n'
p25
S'ff 25 6a f3 20 00\n'
p26
S'.plt:0000000000401d90\n'
p27
tp28
sS'rpl_fclose'
p29
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p30
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_0040a419;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_0040a419:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p31
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401f00\nTEST EAX,EAX\nJS 0x0040a419\nMOV RDI,RBX\nCALL 0x00401fc0\nTEST EAX,EAX\nJZ 0x0040a3e7\nMOV RDI,RBX\nCALL 0x00401f00\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x00401dd0\nCMP RAX,-0x1\nJZ 0x0040a419\nMOV RDI,RBX\nCALL 0x0040a5f0\nTEST EAX,EAX\nJZ 0x0040a419\nCALL 0x00401c20\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x00401ce0\nTEST EBP,EBP\nJZ 0x0040a412\nCALL 0x00401c20\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00401ce0\n'
p32
S'55\n53\n50\n48 89 fb\ne8 45 7b ff ff\n85 c0\n78 5a\n48 89 df\ne8 f9 7b ff ff\n85 c0\n74 1c\n48 89 df\ne8 2d 7b ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 ef 79 ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 01 02 00 00\n85 c0\n74 26\ne8 28 78 ff ff\n8b 28\n48 89 df\ne8 de 78 ff ff\n85 ed\n74 0c\ne8 15 78 ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 b9 78 ff ff\n'
p33
S'.text:000000000040a3b0\n.text:000000000040a3b1\n.text:000000000040a3b2\n.text:000000000040a3b3\n.text:000000000040a3b6\n.text:000000000040a3bb\n.text:000000000040a3bd\n.text:000000000040a3bf\n.text:000000000040a3c2\n.text:000000000040a3c7\n.text:000000000040a3c9\n.text:000000000040a3cb\n.text:000000000040a3ce\n.text:000000000040a3d3\n.text:000000000040a3d5\n.text:000000000040a3da\n.text:000000000040a3dc\n.text:000000000040a3e1\n.text:000000000040a3e5\n.text:000000000040a3e7\n.text:000000000040a3ea\n.text:000000000040a3ef\n.text:000000000040a3f1\n.text:000000000040a3f3\n.text:000000000040a3f8\n.text:000000000040a3fa\n.text:000000000040a3fd\n.text:000000000040a402\n.text:000000000040a404\n.text:000000000040a406\n.text:000000000040a40b\n.text:000000000040a40d\n.text:000000000040a412\n.text:000000000040a416\n.text:000000000040a417\n.text:000000000040a418\n.text:000000000040a419\n.text:000000000040a41c\n.text:000000000040a420\n.text:000000000040a421\n.text:000000000040a422\n'
p34
tp35
sS'to_uchar'
p36
(S'\n__stdcall to_uchar()\n'
p37
V\u000auchar to_uchar(void)\u000a\u000a{\u000a  uchar in_DIL;\u000a  \u000a  return in_DIL;\u000a}\u000a\u000a
p38
S'MOV EAX,EDI\nRET\n'
p39
S'89 f8\nc3\n'
p40
S'.text:0000000000402f60\n.text:0000000000402f62\n'
p41
tp42
sS'strncmp'
p43
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_00611050)();\u000a  return iVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x00611050]\n'
p46
S'ff 25 1a f4 20 00\n'
p47
S'.plt:0000000000401c30\n'
p48
tp49
sS'xnrealloc'
p50
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p51
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p52
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x004089a4\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x004089b0\nPUSH RAX\nCALL 0x00408b00\n'
p53
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p54
S'.text:0000000000408990\n.text:0000000000408993\n.text:0000000000408996\n.text:0000000000408999\n.text:000000000040899b\n.text:000000000040899f\n.text:00000000004089a2\n.text:00000000004089a4\n.text:00000000004089a5\n'
p55
tp56
sS'quote'
p57
(S'\n__stdcall quote(char * arg)\n'
p58
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p59
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00406460\n'
p60
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p61
S'.text:0000000000406470\n.text:0000000000406473\n.text:0000000000406475\n.text:0000000000406478\n'
p62
tp63
sS'emit_bug_reporting_address'
p64
(S'\n__stdcall emit_bug_reporting_address()\n'
p65
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40d9a5\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40d9ba\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00402020\nXOR EDI,EDI\nMOV ESI,0x40d9d0\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40c334\nMOV ECX,0x40c449\nXOR EAX,EAX\nCALL 0x00402020\nXOR EDI,EDI\nMOV ESI,0x40d9e4\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401e70\n'
p67
S'50\n31 ff\nbe a5 d9 40 00\nba 05 00 00 00\ne8 2e 94 ff ff\n48 89 c1\nbf 01 00 00 00\nba ba d9 40 00\n31 c0\n48 89 ce\ne8 27 97 ff ff\n31 ff\nbe d0 d9 40 00\nba 05 00 00 00\ne8 06 94 ff ff\n48 89 c6\nbf 01 00 00 00\nba 34 c3 40 00\nb9 49 c4 40 00\n31 c0\ne8 fd 96 ff ff\n31 ff\nbe e4 d9 40 00\nba 05 00 00 00\ne8 dc 93 ff ff\n48 8b 35 4d 8a 20 00\n48 89 c7\n58\ne9 2c 95 ff ff\n'
p68
S'.text:00000000004088d0\n.text:00000000004088d1\n.text:00000000004088d3\n.text:00000000004088d8\n.text:00000000004088dd\n.text:00000000004088e2\n.text:00000000004088e5\n.text:00000000004088ea\n.text:00000000004088ef\n.text:00000000004088f1\n.text:00000000004088f4\n.text:00000000004088f9\n.text:00000000004088fb\n.text:0000000000408900\n.text:0000000000408905\n.text:000000000040890a\n.text:000000000040890d\n.text:0000000000408912\n.text:0000000000408917\n.text:000000000040891c\n.text:000000000040891e\n.text:0000000000408923\n.text:0000000000408925\n.text:000000000040892a\n.text:000000000040892f\n.text:0000000000408934\n.text:000000000040893b\n.text:000000000040893e\n.text:000000000040893f\n'
p69
tp70
sS'clone_quoting_options'
p71
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p72
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p73
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401c20\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x611480\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00408ab0\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p74
S'55\n41 56\n53\n48 89 fb\ne8 e4 cb ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 80 14 61 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 55 3a 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p75
S'.text:0000000000405030\n.text:0000000000405031\n.text:0000000000405033\n.text:0000000000405034\n.text:0000000000405037\n.text:000000000040503c\n.text:000000000040503f\n.text:0000000000405042\n.text:0000000000405045\n.text:000000000040504a\n.text:000000000040504e\n.text:0000000000405053\n.text:0000000000405056\n.text:000000000040505b\n.text:000000000040505e\n.text:000000000040505f\n.text:0000000000405061\n.text:0000000000405062\n'
p76
tp77
sS'get_stat_atime'
p78
(S'\n__stdcall get_stat_atime(stat * st)\n'
p79
V\u000atimespec get_stat_atime(stat *st)\u000a\u000a{\u000a  return st->st_atim;\u000a}\u000a\u000a
p80
S'MOV RAX,qword ptr [RDI + 0x48]\nMOV RDX,qword ptr [RDI + 0x50]\nRET\n'
p81
S'48 8b 47 48\n48 8b 57 50\nc3\n'
p82
S'.text:0000000000406b50\n.text:0000000000406b54\n.text:0000000000406b58\n'
p83
tp84
sS'xmalloc'
p85
(S'\n__stdcall xmalloc(size_t n)\n'
p86
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p87
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401f30\nTEST RBX,RBX\nJZ 0x00408983\nTEST RAX,RAX\nJZ 0x00408985\nPOP RBX\nRET\nCALL 0x00408b00\n'
p88
S'53\n48 89 fb\ne8 b7 95 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p89
S'.text:0000000000408970\n.text:0000000000408971\n.text:0000000000408974\n.text:0000000000408979\n.text:000000000040897c\n.text:000000000040897e\n.text:0000000000408981\n.text:0000000000408983\n.text:0000000000408984\n.text:0000000000408985\n'
p90
tp91
sS'getmntent'
p92
(S'\n__stdcall getmntent()\n'
p93
V\u000avoid getmntent(void)\u000a\u000a{\u000a  (*(code *)PTR_getmntent_006111e0)();\u000a  return;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x006111e0]\n'
p95
S'ff 25 8a f2 20 00\n'
p96
S'.plt:0000000000401f50\n'
p97
tp98
sS'leapyear'
p99
(S'\n__stdcall leapyear(long_int year)\n'
p100
V\u000aint leapyear(long_int year)\u000a\u000a{\u000a  bool bVar1;\u000a  \u000a  if ((year & 3U) != 0) {\u000a    return 0;\u000a  }\u000a  bVar1 = true;\u000a  if (year == (year / 100 + (year >> 0x3f) +\u000a              SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * 100) {\u000a    bVar1 = (((uint)SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x46,0) & 0x3ffffff) +\u000a             SUB164(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0) & 3) == 1;\u000a  }\u000a  return (int)(uint)bVar1;\u000a}\u000a\u000a
p101
S'TEST DIL,0x3\nJZ 0x0040aa9c\nXOR EAX,EAX\nMOVZX EAX,AL\nRET\nMOV RCX,-0x5c28f5c28f5c28f5\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RDX,RDX,0x64\nMOV AL,0x1\nCMP RDI,RDX\nJNZ 0x0040aae7\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSHR EDX,0x6\nADD EDX,EAX\nAND EDX,0x3\nCMP RDX,0x1\nSETZ AL\nMOVZX EAX,AL\nRET\n'
p102
S'40 f6 c7 03\n74 06\n31 c0\n0f b6 c0\nc3\n48 b9 0b d7 a3 70 3d 0a d7 a3\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b d2 64\nb0 01\n48 39 d7\n75 1f\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\nc1 ea 06\n01 c2\n83 e2 03\n48 83 fa 01\n0f 94 c0\n0f b6 c0\nc3\n'
p103
S'.text:000000000040aa90\n.text:000000000040aa94\n.text:000000000040aa96\n.text:000000000040aa98\n.text:000000000040aa9b\n.text:000000000040aa9c\n.text:000000000040aaa6\n.text:000000000040aaa9\n.text:000000000040aaac\n.text:000000000040aaaf\n.text:000000000040aab2\n.text:000000000040aab6\n.text:000000000040aaba\n.text:000000000040aabd\n.text:000000000040aac1\n.text:000000000040aac3\n.text:000000000040aac6\n.text:000000000040aac8\n.text:000000000040aacb\n.text:000000000040aace\n.text:000000000040aad1\n.text:000000000040aad4\n.text:000000000040aad8\n.text:000000000040aadb\n.text:000000000040aadd\n.text:000000000040aae0\n.text:000000000040aae4\n.text:000000000040aae7\n.text:000000000040aaea\n'
p104
tp105
sS'quotearg_char_mem'
p106
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p107
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p108
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x006114b0]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x006114a0]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x00611490]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x00611480]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x00405090\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405f80\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p109
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d 08 b2 20 00\n48 89 4c 24 30\n0f 10 05 ec b1 20 00\n0f 29 44 24 20\n0f 10 05 d0 b1 20 00\n0f 29 44 24 10\n0f 10 05 b4 b1 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p110
S'.text:0000000000406290\n.text:0000000000406292\n.text:0000000000406294\n.text:0000000000406295\n.text:0000000000406299\n.text:000000000040629b\n.text:000000000040629e\n.text:00000000004062a1\n.text:00000000004062a8\n.text:00000000004062ad\n.text:00000000004062b4\n.text:00000000004062b9\n.text:00000000004062c0\n.text:00000000004062c5\n.text:00000000004062cc\n.text:00000000004062d0\n.text:00000000004062d3\n.text:00000000004062d8\n.text:00000000004062db\n.text:00000000004062dd\n.text:00000000004062e2\n.text:00000000004062e4\n.text:00000000004062e7\n.text:00000000004062ea\n.text:00000000004062ed\n.text:00000000004062f2\n.text:00000000004062f6\n.text:00000000004062f7\n.text:00000000004062f9\n.text:00000000004062fb\n'
p111
tp112
sS'frame_dummy'
p113
(S'\n__stdcall frame_dummy()\n'
p114
V\u000a/* WARNING: Removing unreachable block (ram,0x0040227a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p115
S'MOV EDI,0x610e18\nCMP qword ptr [RDI],0x0\nJNZ 0x00402270\nJMP 0x00402200\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x0040226b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00402200\n'
p116
S'bf 18 0e 61 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p117
S'.text:0000000000402260\n.text:0000000000402265\n.text:0000000000402269\n.text:000000000040226b\n.text:0000000000402270\n.text:0000000000402275\n.text:0000000000402278\n.text:000000000040227a\n.text:000000000040227b\n.text:000000000040227e\n.text:0000000000402280\n.text:0000000000402281\n'
p118
tp119
sS'make_format'
p120
(S'\n__stdcall make_format(char * pformat, size_t prefix_len, char * allowed_flags, char * suffix)\n'
p121
V\u000avoid make_format(char *pformat,size_t prefix_len,char *allowed_flags,char *suffix)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  void *pvVar3;\u000a  char *pcVar4;\u000a  long lVar5;\u000a  char *pcVar6;\u000a  char *__dest;\u000a  \u000a  pcVar6 = pformat + 1;\u000a  pcVar1 = pformat + prefix_len;\u000a  __dest = pcVar6;\u000a  if (1 < (long)prefix_len) {\u000a    do {\u000a      cVar2 = *pcVar6;\u000a      pvVar3 = memchr("\u005c'-+ #0I",(int)cVar2,8);\u000a      if (pvVar3 == (void *)0x0) break;\u000a      pcVar4 = strchr(allowed_flags,(int)cVar2);\u000a      if (pcVar4 != (char *)0x0) {\u000a        *__dest = cVar2;\u000a        __dest = __dest + 1;\u000a      }\u000a      pcVar6 = pcVar6 + 1;\u000a    } while (pcVar6 < pcVar1);\u000a  }\u000a  if (pcVar6 < pcVar1) {\u000a    lVar5 = prefix_len - (long)pcVar6;\u000a    pcVar4 = __dest;\u000a    do {\u000a      cVar2 = *pcVar6;\u000a      pcVar6 = pcVar6 + 1;\u000a      *pcVar4 = cVar2;\u000a      pcVar4 = pcVar4 + 1;\u000a    } while (pcVar1 != pcVar6);\u000a    __dest = __dest + (long)(pformat + lVar5);\u000a  }\u000a  strcpy(__dest,suffix);\u000a  return;\u000a}\u000a\u000a
p122
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R13,RDX\nLEA R15,[RDI + 0x1]\nMOV qword ptr [RSP + 0x10],RDI\nLEA R14,[RDI + RSI*0x1]\nCMP RSI,0x2\nMOV qword ptr [RSP],RCX\nMOV qword ptr [RSP + 0x8],RSI\nMOV RBX,R15\nJL 0x00403d1b\nMOVZX R12D,byte ptr [RBX]\nMOVSX EBP,R12B\nMOV EDI,0x40b880\nMOV EDX,0x8\nMOV ESI,EBP\nCALL 0x00401e50\nTEST RAX,RAX\nJZ 0x00403d1b\nMOV RDI,R13\nMOV ESI,EBP\nCALL 0x00401d90\nTEST RAX,RAX\nJZ 0x00403d13\nMOV byte ptr [R15],R12B\nINC R15\nINC RBX\nCMP RBX,R14\nJC 0x00403ce0\nCMP RBX,R14\nJNC 0x00403d53\nMOV RAX,qword ptr [RSP + 0x8]\nSUB RAX,RBX\nMOV RDX,qword ptr [RSP + 0x10]\nADD RDX,RAX\nMOV RAX,R15\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX ECX,byte ptr [RBX]\nINC RBX\nMOV byte ptr [RAX],CL\nINC RAX\nCMP R14,RBX\nJNZ 0x00403d40\nADD R15,RDX\nMOV RSI,qword ptr [RSP]\nMOV RDI,R15\nCALL 0x00401c60\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p123
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 d5\n4c 8d 7f 01\n48 89 7c 24 10\n4c 8d 34 37\n48 83 fe 02\n48 89 0c 24\n48 89 74 24 08\n4c 89 fb\n7c 3b\n44 0f b6 23\n41 0f be ec\nbf 80 b8 40 00\nba 08 00 00 00\n89 ee\ne8 57 e1 ff ff\n48 85 c0\n74 1d\n4c 89 ef\n89 ee\ne8 88 e0 ff ff\n48 85 c0\n74 06\n45 88 27\n49 ff c7\n48 ff c3\n4c 39 f3\n72 c5\n4c 39 f3\n73 33\n48 8b 44 24 08\n48 29 d8\n48 8b 54 24 10\n48 01 c2\n4c 89 f8\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 0b\n48 ff c3\n88 08\n48 ff c0\n49 39 de\n75 f0\n49 01 d7\n48 8b 34 24\n4c 89 ff\ne8 01 df ff ff\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p124
S'.text:0000000000403cb0\n.text:0000000000403cb1\n.text:0000000000403cb3\n.text:0000000000403cb5\n.text:0000000000403cb7\n.text:0000000000403cb9\n.text:0000000000403cba\n.text:0000000000403cbe\n.text:0000000000403cc1\n.text:0000000000403cc5\n.text:0000000000403cca\n.text:0000000000403cce\n.text:0000000000403cd2\n.text:0000000000403cd6\n.text:0000000000403cdb\n.text:0000000000403cde\n.text:0000000000403ce0\n.text:0000000000403ce4\n.text:0000000000403ce8\n.text:0000000000403ced\n.text:0000000000403cf2\n.text:0000000000403cf4\n.text:0000000000403cf9\n.text:0000000000403cfc\n.text:0000000000403cfe\n.text:0000000000403d01\n.text:0000000000403d03\n.text:0000000000403d08\n.text:0000000000403d0b\n.text:0000000000403d0d\n.text:0000000000403d10\n.text:0000000000403d13\n.text:0000000000403d16\n.text:0000000000403d19\n.text:0000000000403d1b\n.text:0000000000403d1e\n.text:0000000000403d20\n.text:0000000000403d25\n.text:0000000000403d28\n.text:0000000000403d2d\n.text:0000000000403d30\n.text:0000000000403d33\n.text:0000000000403d40\n.text:0000000000403d43\n.text:0000000000403d46\n.text:0000000000403d48\n.text:0000000000403d4b\n.text:0000000000403d4e\n.text:0000000000403d50\n.text:0000000000403d53\n.text:0000000000403d57\n.text:0000000000403d5a\n.text:0000000000403d5f\n.text:0000000000403d63\n.text:0000000000403d64\n.text:0000000000403d66\n.text:0000000000403d68\n.text:0000000000403d6a\n.text:0000000000403d6c\n.text:0000000000403d6d\n'
p125
tp126
sS'extend_abbrs'
p127
(S'\n__stdcall extend_abbrs(char * abbrs, char * abbr, size_t abbr_size)\n'
p128
V\u000avoid extend_abbrs(char *abbrs,char *abbr,size_t abbr_size)\u000a\u000a{\u000a  memcpy(abbrs,abbr,abbr_size);\u000a  abbrs[abbr_size] = 0;\u000a  return;\u000a}\u000a\u000a
p129
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nCALL 0x00401ed0\nMOV byte ptr [RBX + R14*0x1],0x0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p130
S'41 56\n53\n50\n49 89 d6\n48 89 fb\ne8 71 87 ff ff\n42 c6 04 33 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p131
S'.text:0000000000409750\n.text:0000000000409752\n.text:0000000000409753\n.text:0000000000409754\n.text:0000000000409757\n.text:000000000040975a\n.text:000000000040975f\n.text:0000000000409764\n.text:0000000000409768\n.text:0000000000409769\n.text:000000000040976b\n'
p132
tp133
sS'find_non_slash'
p134
(S'\n__stdcall find_non_slash(char * s)\n'
p135
V\u000achar * find_non_slash(char *s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strspn(s,"/");\u000a  return s + sVar1;\u000a}\u000a\u000a
p136
S'PUSH RBX\nMOV RBX,RDI\nMOV ESI,0x40cd89\nCALL 0x00401e40\nADD RAX,RBX\nPOP RBX\nRET\n'
p137
S'53\n48 89 fb\nbe 89 cd 40 00\ne8 32 8f ff ff\n48 01 d8\n5b\nc3\n'
p138
S'.text:0000000000408f00\n.text:0000000000408f01\n.text:0000000000408f04\n.text:0000000000408f09\n.text:0000000000408f0e\n.text:0000000000408f11\n.text:0000000000408f12\n'
p139
tp140
sS'filemodestring'
p141
(S'\n__stdcall filemodestring(stat * statp, char * str)\n'
p142
V\u000avoid filemodestring(stat *statp,char *str)\u000a\u000a{\u000a  strmode((char *)(ulong)statp->st_mode);\u000a  return;\u000a}\u000a\u000a
p143
S'MOV EDI,dword ptr [RDI + 0x18]\nJMP 0x00404db0\n'
p144
S'8b 7f 18\ne9 f8 fe ff ff\n'
p145
S'.text:0000000000404eb0\n.text:0000000000404eb3\n'
p146
tp147
sS'quotearg_n_style_colon'
p148
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p149
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x004061b0\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x00405090\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x00405f80\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p151
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p152
S'.text:0000000000406330\n.text:0000000000406331\n.text:0000000000406333\n.text:0000000000406334\n.text:0000000000406338\n.text:000000000040633b\n.text:000000000040633d\n.text:0000000000406342\n.text:0000000000406345\n.text:000000000040634a\n.text:000000000040634f\n.text:0000000000406354\n.text:0000000000406357\n.text:000000000040635c\n.text:0000000000406363\n.text:0000000000406365\n.text:0000000000406368\n.text:000000000040636b\n.text:0000000000406370\n.text:0000000000406374\n.text:0000000000406375\n.text:0000000000406377\n.text:0000000000406378\n'
p153
tp154
sS'get_stat_birthtime_ns'
p155
(S'\n__stdcall get_stat_birthtime_ns(stat * st)\n'
p156
V\u000along get_stat_birthtime_ns(stat *st)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p157
S'XOR EAX,EAX\nRET\n'
p158
S'31 c0\nc3\n'
p159
S'.text:0000000000406b40\n.text:0000000000406b42\n'
p160
tp161
sS'hasmntopt'
p162
(S'\n__stdcall hasmntopt()\n'
p163
V\u000avoid hasmntopt(void)\u000a\u000a{\u000a  (*(code *)PTR_hasmntopt_006112d0)();\u000a  return;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x006112d0]\n'
p165
S'ff 25 9a f1 20 00\n'
p166
S'.plt:0000000000402130\n'
p167
tp168
sS'localtime_rz'
p169
(S'\n__stdcall localtime_rz(timezone_t tz, time_t * t, tm * tm)\n'
p170
V\u000atm * localtime_rz(timezone_t tz,time_t *t,tm *tm)\u000a\u000a{\u000a  _Bool _Var1;\u000a  tm *ptVar2;\u000a  timezone_t tz_00;\u000a  tm *ptVar3;\u000a  byte bVar4;\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    ptVar2 = (tm *)(*(code *)PTR_gmtime_r_00611118)(t,tm);\u000a    return ptVar2;\u000a  }\u000a  tz_00 = set_tz(tz);\u000a  if (tz_00 == (timezone_t)0x0) {\u000a    tm = (tm *)0x0;\u000a  }\u000a  else {\u000a    ptVar3 = localtime_r(t,(tm *)tm);\u000a    if (ptVar3 == (tm *)0x0) {\u000a      bVar4 = 1;\u000a    }\u000a    else {\u000a      _Var1 = save_abbr(tz,tm);\u000a      bVar4 = _Var1 ^ 1;\u000a    }\u000a    _Var1 = revert_tz(tz_00);\u000a    if (_Var1 == false) {\u000a      tm = (tm *)0x0;\u000a    }\u000a    if (bVar4 != 0) {\u000a      tm = (tm *)0x0;\u000a    }\u000a  }\u000a  return tm;\u000a}\u000a\u000a
p171
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R12,RSI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x004097e8\nMOV RDI,RBX\nCALL 0x00409830\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004097fe\nMOV RDI,R12\nMOV RSI,R15\nCALL 0x00401c40\nTEST RAX,RAX\nJZ 0x00409802\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x004098b0\nMOV EBX,EAX\nXOR BL,0x1\nJMP 0x00409804\nMOV RDI,R12\nMOV RSI,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401dc0\nXOR EAX,EAX\nJMP 0x0040981d\nMOV BL,0x1\nMOV RDI,R14\nCALL 0x004099c0\nXOR ECX,ECX\nTEST AL,AL\nCMOVZ R15,RCX\nTEST BL,BL\nCMOVNZ R15,RCX\nMOV RAX,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p172
S'41 57\n41 56\n41 54\n53\n50\n49 89 d7\n49 89 f4\n48 89 fb\n48 85 db\n74 32\n48 89 df\ne8 72 00 00 00\n49 89 c6\n4d 85 f6\n74 38\n4c 89 e7\n4c 89 fe\ne8 6f 84 ff ff\n48 85 c0\n74 2c\n48 89 df\n4c 89 fe\ne8 cf 00 00 00\n89 c3\n80 f3 01\neb 1c\n4c 89 e7\n4c 89 fe\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 c2 85 ff ff\n31 c0\neb 1b\nb3 01\n4c 89 f7\ne8 b4 01 00 00\n31 c9\n84 c0\n4c 0f 44 f9\n84 db\n4c 0f 45 f9\n4c 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p173
S'.text:00000000004097a0\n.text:00000000004097a2\n.text:00000000004097a4\n.text:00000000004097a6\n.text:00000000004097a7\n.text:00000000004097a8\n.text:00000000004097ab\n.text:00000000004097ae\n.text:00000000004097b1\n.text:00000000004097b4\n.text:00000000004097b6\n.text:00000000004097b9\n.text:00000000004097be\n.text:00000000004097c1\n.text:00000000004097c4\n.text:00000000004097c6\n.text:00000000004097c9\n.text:00000000004097cc\n.text:00000000004097d1\n.text:00000000004097d4\n.text:00000000004097d6\n.text:00000000004097d9\n.text:00000000004097dc\n.text:00000000004097e1\n.text:00000000004097e3\n.text:00000000004097e6\n.text:00000000004097e8\n.text:00000000004097eb\n.text:00000000004097ee\n.text:00000000004097f2\n.text:00000000004097f3\n.text:00000000004097f5\n.text:00000000004097f7\n.text:00000000004097f9\n.text:00000000004097fe\n.text:0000000000409800\n.text:0000000000409802\n.text:0000000000409804\n.text:0000000000409807\n.text:000000000040980c\n.text:000000000040980e\n.text:0000000000409810\n.text:0000000000409814\n.text:0000000000409816\n.text:000000000040981a\n.text:000000000040981d\n.text:0000000000409821\n.text:0000000000409822\n.text:0000000000409824\n.text:0000000000409826\n.text:0000000000409828\n'
p174
tp175
sS'quote_mem'
p176
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p177
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p178
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00406440\n'
p179
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p180
S'.text:0000000000406450\n.text:0000000000406453\n.text:0000000000406456\n.text:0000000000406458\n.text:000000000040645b\n.text:000000000040645e\n'
p181
tp182
sS'fileno'
p183
(S'\n__stdcall fileno(FILE * __stream)\n'
p184
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_006111b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x006111b8]\n'
p186
S'ff 25 b2 f2 20 00\n'
p187
S'.plt:0000000000401f00\n'
p188
tp189
sS'sscanf'
p190
(S'\n__stdcall sscanf(char * __s, char * __format)\n'
p191
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint sscanf(char *__s,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_sscanf_00611210)();\u000a  return iVar1;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00611210]\n'
p193
S'ff 25 5a f2 20 00\n'
p194
S'.plt:0000000000401fb0\n'
p195
tp196
sS'mbrtowc'
p197
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_006110f8)();\u000a  return sVar1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x006110f8]\n'
p200
S'ff 25 72 f3 20 00\n'
p201
S'.plt:0000000000401d80\n'
p202
tp203
sS'openat'
p204
(S'\n__stdcall openat(int __fd, char * __file, int __oflag)\n'
p205
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint openat(int __fd,char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_openat_006110e0)();\u000a  return iVar1;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x006110e0]\n'
p207
S'ff 25 8a f3 20 00\n'
p208
S'.plt:0000000000401d50\n'
p209
tp210
sS'time_t_add_ok'
p211
(S'\n__stdcall time_t_add_ok(time_t a, time_t b)\n'
p212
V\u000aint time_t_add_ok(time_t a,time_t b)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = time_t_avg(a,b);\u000a  return (int)((uint)((ulong)(tVar1 + 0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p213
S'PUSH RAX\nCALL 0x0040ade0\nMOV RCX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nPOP RCX\nRET\n'
p214
S'50\ne8 1a 00 00 00\n48 b9 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\n59\nc3\n'
p215
S'.text:000000000040adc0\n.text:000000000040adc1\n.text:000000000040adc6\n.text:000000000040add0\n.text:000000000040add3\n.text:000000000040add7\n.text:000000000040adda\n.text:000000000040addb\n'
p216
tp217
sS'setlocale'
p218
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p219
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_00611240)();\u000a  return pcVar1;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x00611240]\n'
p221
S'ff 25 2a f2 20 00\n'
p222
S'.plt:0000000000402010\n'
p223
tp224
sS'c_toupper'
p225
(S'\n__stdcall c_toupper()\n'
p226
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p227
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p228
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p229
S'.text:0000000000409cd0\n.text:0000000000409cd3\n.text:0000000000409cd6\n.text:0000000000409cd9\n.text:0000000000409cdc\n'
p230
tp231
sS'xvasprintf'
p232
(S'\n__stdcall xvasprintf(char * format, __va_list_tag * args)\n'
p233
V\u000achar * xvasprintf(char *format,__va_list_tag *args)\u000a\u000a{\u000a  int iVar1;\u000a  char *in_RAX;\u000a  char *pcVar2;\u000a  int *piVar3;\u000a  size_t argcount;\u000a  char *local_8;\u000a  \u000a  argcount = 0;\u000a  while (format[argcount * 2] == '%') {\u000a    if (format[argcount * 2 + 1] != 's') goto LAB_0040a243;\u000a    argcount = argcount + 1;\u000a  }\u000a  if (format[argcount * 2] == 0) {\u000a    pcVar2 = xstrcat(argcount,args);\u000a    return pcVar2;\u000a  }\u000aLAB_0040a243:\u000a  local_8 = in_RAX;\u000a  iVar1 = __vasprintf_chk(&local_8,1,format,args);\u000a  if (-1 < iVar1) {\u000a    return local_8;\u000a  }\u000a  piVar3 = __errno_location();\u000a  if (*piVar3 == 0xc) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p234
S'PUSH RAX\nMOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nJMP 0x0040a223\nINC RDI\nMOVZX EDX,byte ptr [RCX + RDI*0x2]\nCMP DL,0x25\nJNZ 0x0040a235\nCMP byte ptr [RCX + RDI*0x2 + 0x1],0x73\nJZ 0x0040a220\nJMP 0x0040a243\nTEST DL,DL\nJNZ 0x0040a243\nMOV RSI,RAX\nCALL 0x0040a280\nPOP RCX\nRET\nMOV RDI,RSP\nMOV ESI,0x1\nMOV RDX,RCX\nMOV RCX,RAX\nCALL 0x00401f80\nTEST EAX,EAX\nJS 0x0040a260\nMOV RAX,qword ptr [RSP]\nPOP RCX\nRET\nCALL 0x00401c20\nCMP dword ptr [RAX],0xc\nJZ 0x0040a26e\nXOR EAX,EAX\nPOP RCX\nRET\nCALL 0x00408b00\n'
p235
S'50\n48 89 f0\n48 89 f9\n31 ff\neb 08\n48 ff c7\n0f b6 14 79\n80 fa 25\n75 09\n80 7c 79 01 73\n74 ed\neb 0e\n84 d2\n75 0a\n48 89 c6\ne8 3f 00 00 00\n59\nc3\n48 89 e7\nbe 01 00 00 00\n48 89 ca\n48 89 c1\ne8 2a 7d ff ff\n85 c0\n78 06\n48 8b 04 24\n59\nc3\ne8 bb 79 ff ff\n83 38 0c\n74 04\n31 c0\n59\nc3\ne8 8d e8 ff ff\n'
p236
S'.text:000000000040a210\n.text:000000000040a211\n.text:000000000040a214\n.text:000000000040a217\n.text:000000000040a219\n.text:000000000040a220\n.text:000000000040a223\n.text:000000000040a227\n.text:000000000040a22a\n.text:000000000040a22c\n.text:000000000040a231\n.text:000000000040a233\n.text:000000000040a235\n.text:000000000040a237\n.text:000000000040a239\n.text:000000000040a23c\n.text:000000000040a241\n.text:000000000040a242\n.text:000000000040a243\n.text:000000000040a246\n.text:000000000040a24b\n.text:000000000040a24e\n.text:000000000040a251\n.text:000000000040a256\n.text:000000000040a258\n.text:000000000040a25a\n.text:000000000040a25e\n.text:000000000040a25f\n.text:000000000040a260\n.text:000000000040a265\n.text:000000000040a268\n.text:000000000040a26a\n.text:000000000040a26c\n.text:000000000040a26d\n.text:000000000040a26e\n'
p237
tp238
sS'fcntl'
p239
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p240
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_00611090)();\u000a  return iVar1;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x00611090]\n'
p242
S'ff 25 da f3 20 00\n'
p243
S'.plt:0000000000401cb0\n'
p244
tp245
sS'mbsinit'
p246
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p247
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_006112c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x006112c0]\n'
p249
S'ff 25 aa f1 20 00\n'
p250
S'.plt:0000000000402110\n'
p251
tp252
sS'dcgettext'
p253
(S'\n__stdcall dcgettext()\n'
p254
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_006110c0)();\u000a  return;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x006110c0]\n'
p256
S'ff 25 aa f3 20 00\n'
p257
S'.plt:0000000000401d10\n'
p258
tp259
sS'endmntent'
p260
(S'\n__stdcall endmntent()\n'
p261
V\u000avoid endmntent(void)\u000a\u000a{\u000a  (*(code *)PTR_endmntent_00611030)();\u000a  return;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x00611030]\n'
p263
S'ff 25 3a f4 20 00\n'
p264
S'.plt:0000000000401bf0\n'
p265
tp266
sS'set_cloexec_flag'
p267
(S'\n__stdcall set_cloexec_flag()\n'
p268
V\u000aint set_cloexec_flag(void)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  int iVar3;\u000a  char in_SIL;\u000a  ulong in_RDI;\u000a  \u000a  iVar3 = 0;\u000a  uVar2 = rpl_fcntl(in_RDI,1,0);\u000a  if ((int)uVar2 < 0) {\u000a    iVar3 = -1;\u000a  }\u000a  else {\u000a    uVar1 = uVar2 & 0xfffffffe;\u000a    if (in_SIL != 0) {\u000a      uVar1 = uVar2 | 1;\u000a    }\u000a    if ((uVar2 != uVar1) && (iVar3 = rpl_fcntl(in_RDI & 0xffffffff,2), iVar3 != -1)) {\u000a      iVar3 = 0;\u000a    }\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p269
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV EBX,EDI\nXOR EBP,EBP\nMOV ESI,0x1\nXOR EDX,EDX\nXOR EAX,EAX\nCALL 0x0040a430\nTEST EAX,EAX\nJS 0x00409d29\nMOV ECX,EAX\nOR ECX,0x1\nMOV EDX,EAX\nAND EDX,0xfffffffe\nTEST R14B,R14B\nCMOVNZ EDX,ECX\nCMP EAX,EDX\nJZ 0x00409d2e\nXOR EBP,EBP\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x0040a430\nCMP EAX,-0x1\nCMOVNZ EAX,EBP\nJMP 0x00409d30\nMOV EBP,0xffffffff\nMOV EAX,EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p270
S'55\n41 56\n53\n41 89 f6\n89 fb\n31 ed\nbe 01 00 00 00\n31 d2\n31 c0\ne8 37 07 00 00\n85 c0\n78 2c\n89 c1\n83 c9 01\n89 c2\n83 e2 fe\n45 84 f6\n0f 45 d1\n39 d0\n74 1d\n31 ed\nbe 02 00 00 00\n31 c0\n89 df\ne8 0f 07 00 00\n83 f8 ff\n0f 45 c5\neb 07\nbd ff ff ff ff\n89 e8\n5b\n41 5e\n5d\nc3\n'
p271
S'.text:0000000000409ce0\n.text:0000000000409ce1\n.text:0000000000409ce3\n.text:0000000000409ce4\n.text:0000000000409ce7\n.text:0000000000409ce9\n.text:0000000000409ceb\n.text:0000000000409cf0\n.text:0000000000409cf2\n.text:0000000000409cf4\n.text:0000000000409cf9\n.text:0000000000409cfb\n.text:0000000000409cfd\n.text:0000000000409cff\n.text:0000000000409d02\n.text:0000000000409d04\n.text:0000000000409d07\n.text:0000000000409d0a\n.text:0000000000409d0d\n.text:0000000000409d0f\n.text:0000000000409d11\n.text:0000000000409d13\n.text:0000000000409d18\n.text:0000000000409d1a\n.text:0000000000409d1c\n.text:0000000000409d21\n.text:0000000000409d24\n.text:0000000000409d27\n.text:0000000000409d29\n.text:0000000000409d2e\n.text:0000000000409d30\n.text:0000000000409d31\n.text:0000000000409d33\n.text:0000000000409d34\n'
p272
tp273
sS'__ctype_toupper_loc'
p274
(S'\n__stdcall __ctype_toupper_loc()\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_toupper_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_00611018)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00611018]\n'
p277
S'ff 25 52 f4 20 00\n'
p278
S'.plt:0000000000401bc0\n'
p279
tp280
sS'quotearg_free'
p281
(S'\n__stdcall quotearg_free()\n'
p282
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p283
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x00611328]\nCMP dword ptr [0x00611330],0x2\nJC 0x00405f1a\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00401be0\nINC RBX\nMOV EAX,dword ptr [0x00611330]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x00405f00\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x6114c0\nCMP RDI,RAX\nJZ 0x00405f43\nCALL 0x00401be0\nMOV qword ptr [0x00611338],0x100\nMOV qword ptr [0x00611340],0x6114c0\nMOV EAX,0x611338\nCMP R14,RAX\nJZ 0x00405f60\nMOV RDI,R14\nCALL 0x00401be0\nMOV qword ptr [0x00611328],0x611338\nMOV dword ptr [0x00611330],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p284
S'41 57\n41 56\n53\n4c 8b 35 3c b4 20 00\n83 3d 3d b4 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 d8 bc ff ff\n48 ff c3\n8b 05 1f b4 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 c0 14 61 00\n48 39 c7\n74 1b\ne8 b3 bc ff ff\n48 c7 05 00 b4 20 00 00 01 00 00\n48 c7 05 fd b3 20 00 c0 14 61 00\nb8 38 13 61 00\n49 39 c6\n74 13\n4c 89 f7\ne8 8b bc ff ff\n48 c7 05 c8 b3 20 00 38 13 61 00\nc7 05 c6 b3 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p285
S'.text:0000000000405ee0\n.text:0000000000405ee2\n.text:0000000000405ee4\n.text:0000000000405ee5\n.text:0000000000405eec\n.text:0000000000405ef3\n.text:0000000000405ef5\n.text:0000000000405ef9\n.text:0000000000405efe\n.text:0000000000405f00\n.text:0000000000405f03\n.text:0000000000405f08\n.text:0000000000405f0b\n.text:0000000000405f11\n.text:0000000000405f15\n.text:0000000000405f18\n.text:0000000000405f1a\n.text:0000000000405f1e\n.text:0000000000405f23\n.text:0000000000405f26\n.text:0000000000405f28\n.text:0000000000405f2d\n.text:0000000000405f38\n.text:0000000000405f43\n.text:0000000000405f48\n.text:0000000000405f4b\n.text:0000000000405f4d\n.text:0000000000405f50\n.text:0000000000405f55\n.text:0000000000405f60\n.text:0000000000405f6a\n.text:0000000000405f6b\n.text:0000000000405f6d\n.text:0000000000405f6f\n'
p286
tp287
sS'quotearg_mem'
p288
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p289
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p290
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00406140\n'
p291
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p292
S'.text:0000000000406160\n.text:0000000000406163\n.text:0000000000406166\n.text:0000000000406168\n.text:000000000040616b\n.text:000000000040616e\n'
p293
tp294
sS'free_cwd'
p295
(S'\n__stdcall free_cwd(saved_cwd * cwd)\n'
p296
V\u000avoid free_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  if (-1 < cwd->desc) {\u000a    close(cwd->desc);\u000a  }\u000a  free(cwd->name);\u000a  return;\u000a}\u000a\u000a
p297
S'PUSH RBX\nMOV RBX,RDI\nMOV EDI,dword ptr [RBX]\nTEST EDI,EDI\nJS 0x004068ff\nCALL 0x00401e30\nMOV RDI,qword ptr [RBX + 0x8]\nPOP RBX\nJMP 0x00401be0\n'
p298
S'53\n48 89 fb\n8b 3b\n85 ff\n78 05\ne8 31 b5 ff ff\n48 8b 7b 08\n5b\ne9 d7 b2 ff ff\n'
p299
S'.text:00000000004068f0\n.text:00000000004068f1\n.text:00000000004068f4\n.text:00000000004068f6\n.text:00000000004068f8\n.text:00000000004068fa\n.text:00000000004068ff\n.text:0000000000406903\n.text:0000000000406904\n'
p300
tp301
sS'security_check_context'
p302
(S'\n__stdcall security_check_context(security_context_t con)\n'
p303
V\u000aint security_check_context(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p304
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p305
S'50\ne8 ba b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p306
S'.text:0000000000406a60\n.text:0000000000406a61\n.text:0000000000406a66\n.text:0000000000406a6c\n.text:0000000000406a71\n.text:0000000000406a72\n'
p307
tp308
sS'deregister_tm_clones'
p309
(S'\n__stdcall deregister_tm_clones()\n'
p310
V\u000a/* WARNING: Removing unreachable block (ram,0x004021d5) */\u000a/* WARNING: Removing unreachable block (ram,0x004021df) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p311
S'MOV EAX,0x611387\nPUSH RBP\nSUB RAX,0x611380\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x004021f0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004021f0\nPOP RBP\nMOV EDI,0x611380\nJMP RAX\nPOP RBP\nRET\n'
p312
S'b8 87 13 61 00\n55\n48 2d 80 13 61 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 80 13 61 00\nff e0\n5d\nc3\n'
p313
S'.text:00000000004021c0\n.text:00000000004021c5\n.text:00000000004021c6\n.text:00000000004021cc\n.text:00000000004021d0\n.text:00000000004021d3\n.text:00000000004021d5\n.text:00000000004021da\n.text:00000000004021dd\n.text:00000000004021df\n.text:00000000004021e0\n.text:00000000004021e5\n.text:00000000004021f0\n.text:00000000004021f1\n'
p314
tp315
sS'fputc_unlocked'
p316
(S'\n__stdcall fputc_unlocked(int __c, FILE * __stream)\n'
p317
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc_unlocked(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_unlocked_00611190)();\u000a  return iVar1;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x00611190]\n'
p319
S'ff 25 da f2 20 00\n'
p320
S'.plt:0000000000401eb0\n'
p321
tp322
sS'strftime_case_'
p323
(S'\n__stdcall strftime_case_(char * s, size_t maxsize, char * format, tm * tp, timezone_t tz)\n'
p324
V\u000a/* WARNING: Removing unreachable block (ram,0x0040816b) */\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t strftime_case_(char *s,size_t maxsize,char *format,tm *tp,timezone_t tz)\u000a\u000a{\u000a  int *piVar1;\u000a  byte bVar2;\u000a  char cVar3;\u000a  char cVar4;\u000a  bool bVar5;\u000a  int __c;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  size_t __n;\u000a  char cVar8;\u000a  int __c_00;\u000a  uint uVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  uint uVar12;\u000a  long lVar13;\u000a  char *__src;\u000a  int __c_01;\u000a  ulong uVar14;\u000a  ulong uVar15;\u000a  char *pcVar16;\u000a  timezone_t in_R9;\u000a  void *__src_00;\u000a  char *pcVar17;\u000a  char *__n_00;\u000a  char *pcVar18;\u000a  uint in_stack_00000008;\u000a  size_t _incr;\u000a  char ufmt [5];\u000a  char buf [23];\u000a  tm ltm;\u000a  uint local_4bc;\u000a  ulong local_4b0;\u000a  ulong local_490;\u000a  undefined2 local_485;\u000a  char local_483;\u000a  char local_482 [2];\u000a  size_t local_480;\u000a  uint local_474;\u000a  tm_zone *local_470;\u000a  timezone_t local_468;\u000a  undefined4 local_45c;\u000a  char local_441 [9];\u000a  undefined4 local_438;\u000a  int iStack1076;\u000a  int iStack1072;\u000a  int iStack1068;\u000a  int local_428;\u000a  int iStack1060;\u000a  int iStack1056;\u000a  int iStack1052;\u000a  int local_418;\u000a  undefined4 uStack1044;\u000a  undefined4 uStack1040;\u000a  undefined4 uStack1036;\u000a  tm_zone *local_408;\u000a  \u000a  local_45c = SUB84(s,0);\u000a  local_4bc = *(uint *)&tz->tz_is_set;\u000a  local_4b0 = (ulong)local_4bc;\u000a  local_470 = (tm_zone *)\u000a              (\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  if (tz[3].next != (tm_zone *)0x0) {\u000a    local_470 = tz[3].next;\u000a  }\u000a  local_474 = 0xc;\u000a  if (local_4bc != 0) {\u000a    local_474 = local_4bc;\u000a  }\u000a  if (0xc < (int)local_4bc) {\u000a    local_474 = local_4bc - 0xc;\u000a  }\u000a  pcVar16 = (char *)0x0;\u000a  cVar3 = *(char *)&tp->tm_sec;\u000a  local_490 = local_4b0;\u000a  local_468 = in_R9;\u000a  do {\u000a    if (cVar3 == 0) {\u000a      if ((format != (char *)0x0) && ((char *)maxsize != (char *)0x0)) {\u000a        *(char *)maxsize = 0;\u000a      }\u000a      return (size_t)pcVar16;\u000a    }\u000a    if (*(char *)&tp->tm_sec != '%') {\u000a      uVar7 = 1;\u000a      if ((char *)0x1 < format + -(long)pcVar16) {\u000a        if ((char *)maxsize == (char *)0x0) {\u000a          maxsize = 0;\u000a        }\u000a        else {\u000a          *(char *)maxsize = *(char *)&tp->tm_sec;\u000a          maxsize = (size_t)((char *)maxsize + 1);\u000a        }\u000a        pcVar16 = pcVar16 + 1;\u000a        uVar7 = 0;\u000a      }\u000a      if (uVar7 == 0) {\u000a        uVar7 = 4;\u000a      }\u000a      goto LAB_00406fca;\u000a    }\u000a    bVar5 = false;\u000a    bVar2 = (byte)local_45c;\u000a    tp = (tm *)((long)&tp->tm_sec + 1);\u000a    __c_01 = 0;\u000aLAB_00406df6:\u000a    while( true ) {\u000a      while (__c = (int)*(char *)&tp->tm_sec, 0x2f < __c) {\u000a        if ((__c == 0x30) || (__c == 0x5f)) goto LAB_00406df0;\u000a        if (__c != 0x5e) goto LAB_00406e70;\u000a        bVar2 = 1;\u000a        tp = (tm *)((long)&tp->tm_sec + 1);\u000a      }\u000a      if (__c != 0x2d) break;\u000aLAB_00406df0:\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a      __c_01 = __c;\u000a    }\u000a    if (__c == 0x23) {\u000a      bVar5 = true;\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a      goto LAB_00406df6;\u000a    }\u000aLAB_00406e70:\u000a    pcVar17 = (char *)0xffffffff;\u000a    if (__c - 0x30U < 10) {\u000a      pcVar17 = (char *)0x0;\u000a      do {\u000a        __c = (int)pcVar17;\u000a        pcVar17 = (char *)0x7fffffff;\u000a        if ((__c < 0xccccccd) &&\u000a           ((__c_00 = (int)*(char *)&tp->tm_sec + -0x30, __c != 0xccccccc ||\u000a            (pcVar17 = (char *)0x7fffffff, __c_00 < 8)))) {\u000a          pcVar17 = (char *)(ulong)(uint)(__c_00 + __c * 10);\u000a        }\u000a        piVar1 = &tp->tm_sec;\u000a        tp = (tm *)((long)&tp->tm_sec + 1);\u000a      } while ((int)*(char *)((long)piVar1 + 1) - 0x30U < 10);\u000a    }\u000a    uVar9 = (uint)pcVar17;\u000a    cVar3 = *(char *)&tp->tm_sec;\u000a    if ((cVar3 == 'O') || (cVar3 == 'E')) {\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a    }\u000a    else {\u000a      cVar3 = 0;\u000a    }\u000a    cVar8 = *(char *)&tp->tm_sec;\u000a    uVar11 = 0;\u000a    __src = "%H:%M";\u000a    uVar6 = 0;\u000a    cVar4 = 'r';\u000a    switch(cVar8) {\u000a    case 0:\u000a      tp = (tm *)((long)&tp->tm_mday + 3);\u000a    default:\u000a      goto LAB_004070f1;\u000a    case '%':\u000a      uVar6 = 0;\u000a      if (cVar3 == 0) {\u000a        uVar7 = 0;\u000a        if (-1 < (int)uVar9) {\u000a          uVar7 = uVar9;\u000a        }\u000a        pcVar17 = (char *)0x1;\u000a        if (1 < uVar7) {\u000a          pcVar17 = (char *)(ulong)uVar7;\u000a        }\u000a        if (format + -(long)pcVar16 <= pcVar17) {\u000a          return 0;\u000a        }\u000a        if ((char *)maxsize == (char *)0x0) goto LAB_00407a77;\u000a        if (1 < uVar7) {\u000a          if (__c_01 == 0x30) {\u000a            __c_01 = 0x30;\u000a          }\u000a          else {\u000a            __c_01 = 0x20;\u000a          }\u000a          memset((void *)maxsize,__c_01,(long)(int)uVar9 - 1U);\u000a          maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - 1U));\u000a        }\u000a        *(char *)maxsize = *(char *)&tp->tm_sec;\u000a        goto LAB_00406da8;\u000a      }\u000a      break;\u000a    case ':':\u000a      uVar11 = 1;\u000a      while (cVar4 = *(char *)((long)&tp->tm_sec + uVar11), cVar4 == ':') {\u000a        uVar11 = uVar11 + 1;\u000a      }\u000a      if (cVar4 == 'z') {\u000a        tp = (tm *)((long)&tp->tm_sec + uVar11);\u000a        goto switchD_00406eed_caseD_7a;\u000a      }\u000a      goto LAB_004070f1;\u000a    case 'A':\u000a      uVar6 = 0;\u000a      if (cVar3 == 0) {\u000a        if (bVar5) {\u000a          bVar2 = 1;\u000a        }\u000a        uVar11 = 0;\u000a        cVar4 = 'A';\u000a        uVar6 = 0;\u000a        goto switchD_00406eed_caseD_72;\u000a      }\u000a      break;\u000a    case 'B':\u000a      uVar6 = 0;\u000a      if (cVar3 == 0) {\u000a        if (bVar5) {\u000a          bVar2 = 1;\u000a        }\u000a        uVar11 = 0;\u000a        cVar4 = 'B';\u000a        uVar6 = 0;\u000a        goto switchD_00406eed_caseD_72;\u000a      }\u000a      break;\u000a    case 'C':\u000a      if (cVar3 == 'E') {\u000a        uVar11 = 0;\u000a        cVar4 = 'C';\u000a        uVar6 = 0;\u000a        goto switchD_00406eed_caseD_72;\u000a      }\u000a      if (cVar3 != 'O') {\u000a        __c = *(int *)((long)&tz[1].next + 4);\u000a        lVar13 = (long)__c;\u000a        bVar5 = lVar13 < 0xfffff894;\u000a        __c_00 = __c / 100 + (__c >> 0x1f) + (uint)((ulong)(lVar13 * 0x51eb851f) >> 0x3f);\u000a        uVar7 = (__c_00 - (uint)(__c + __c_00 * -100 < 0 && 0xfffff894 < lVar13)) + 0x13;\u000a        goto LAB_0040761c;\u000a      }\u000aLAB_004070f1:\u000a      uVar6 = 0;\u000a      break;\u000a    case 'D':\u000a      uVar6 = 0;\u000a      if (cVar3 == 0) {\u000a        __src = "%m/%d/%y";\u000a        goto switchD_00406eed_caseD_52;\u000a      }\u000a      break;\u000a    case 'F':\u000a      uVar6 = 0;\u000a      if (cVar3 == 0) {\u000a        __src = &DAT_0040d6d9;\u000a        goto switchD_00406eed_caseD_52;\u000a      }\u000a      break;\u000a    case 'G':\u000a    case 'V':\u000a    case 'g':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar7 = iso_week_days();\u000a        if ((int)uVar7 < 0) {\u000a          uVar7 = iso_week_days();\u000a          uVar9 = 0xffffffff;\u000a        }\u000a        else {\u000a          uVar6 = iso_week_days();\u000a          uVar9 = uVar6 >> 0x1f ^ 1;\u000a          if (-1 < (int)uVar6) {\u000a            uVar7 = uVar6;\u000a          }\u000a        }\u000a        if (*(char *)&tp->tm_sec == 'G') {\u000a          __c = *(int *)((long)&tz[1].next + 4);\u000a          local_490 = (ulong)(__c < (int)(-0x76c - uVar9));\u000a          local_4b0 = (ulong)(uVar9 + 0x76c + __c);\u000a          uVar6 = 4;\u000a          goto LAB_004079f4;\u000a        }\u000a        if (*(char *)&tp->tm_sec == 'g') {\u000a          __c = *(int *)((long)&tz[1].next + 4);\u000a          __c_00 = __c + (__c / 100 + (__c >> 0x1f) +\u000a                         (uint)((ulong)((long)__c * 0x51eb851f) >> 0x3f)) * -100 + uVar9;\u000a          uVar7 = __c_00 + (__c_00 / 100 + (__c_00 >> 0x1f) +\u000a                           (uint)((ulong)((long)__c_00 * 0x51eb851f) >> 0x3f)) * -100;\u000a          uVar11 = (ulong)uVar7;\u000a          uVar6 = 2;\u000a          if ((int)uVar7 < 0) {\u000a            uVar6 = uVar7 + 100;\u000a            if (__c < (int)(-0x76c - uVar9)) {\u000a              uVar6 = -uVar7;\u000a            }\u000a            uVar11 = (ulong)uVar6;\u000a            uVar6 = 2;\u000a          }\u000a        }\u000a        else {\u000a          uVar11 = (ulong)((int)uVar7 / 7 + ((int)uVar7 >> 0x1f) + 1 +\u000a                          (uint)((ulong)((long)(int)uVar7 * 0x92492493) >> 0x3f));\u000a          uVar6 = 2;\u000a        }\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'H':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)&tz->tz_is_set;\u000a        uVar6 = 2;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'I':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)local_474;\u000a        uVar6 = 2;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'M':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)((long)&tz->next + 4);\u000a        uVar6 = 2;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'N':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        if (uVar9 == 0xffffffff) {\u000a          pcVar17 = (char *)0x9;\u000a          uVar11 = (ulong)in_stack_00000008;\u000a          uVar6 = 9;\u000a        }\u000a        else {\u000a          if ((int)uVar9 < 9) {\u000a            uVar7 = 9;\u000a            uVar11 = (ulong)in_stack_00000008;\u000a            do {\u000a              __c = (int)uVar11;\u000a              uVar11 = (ulong)(__c / 10 + (__c >> 0x1f) +\u000a                              (uint)((ulong)((long)__c * 0x66666667) >> 0x3f));\u000a              uVar7 = uVar7 - 1;\u000a              uVar6 = uVar9;\u000a            } while (uVar9 != uVar7);\u000a          }\u000a          else {\u000a            uVar11 = (ulong)in_stack_00000008;\u000a            uVar6 = uVar9;\u000a          }\u000a        }\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'P':\u000a      uVar11 = 1;\u000a    case 'p':\u000a      uVar6 = 0;\u000a      if (bVar5) {\u000a        bVar2 = 0;\u000a        uVar11 = 1;\u000a      }\u000a      cVar4 = 'p';\u000a      goto switchD_00406eed_caseD_72;\u000a    case 'R':\u000a      goto switchD_00406eed_caseD_52;\u000a    case 'S':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)&tz->next;\u000a        uVar6 = 2;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'T':\u000a      __src = "%H:%M:%S";\u000aswitchD_00406eed_caseD_52:\u000a      pcVar18 = (char *)strftime_case_((char *)(ulong)(bVar2 != 0),0,(char *)0xffffffffffffffff,\u000a                                       (tm *)__src,tz);\u000a      __n_00 = (char *)0x0;\u000a      if (-1 < (int)uVar9) {\u000a        __n_00 = pcVar17;\u000a      }\u000a      pcVar17 = pcVar18;\u000a      if (pcVar18 < __n_00) {\u000a        pcVar17 = __n_00;\u000a      }\u000a      if (format + -(long)pcVar16 <= pcVar17) {\u000a        return 0;\u000a      }\u000a      if ((char *)maxsize == (char *)0x0) {\u000a        maxsize = 0;\u000a        pcVar16 = pcVar17 + (long)pcVar16;\u000a      }\u000a      else {\u000a        if (pcVar18 < __n_00) {\u000a          if (__c_01 == 0x30) {\u000a            __c_01 = 0x30;\u000a          }\u000a          else {\u000a            __c_01 = 0x20;\u000a          }\u000a          memset((void *)maxsize,__c_01,(long)(int)uVar9 - (long)pcVar18);\u000a          maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - (long)pcVar18));\u000a        }\u000a        strftime_case_((char *)(ulong)(bVar2 != 0),maxsize,format + -(long)pcVar16,(tm *)__src,tz);\u000a        maxsize = (size_t)(pcVar18 + maxsize);\u000a        pcVar16 = pcVar17 + (long)pcVar16;\u000a      }\u000a      goto LAB_0040834d;\u000a    case 'U':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        __c = (*(int *)&tz[1].field_0xc + 7) - *(int *)&tz[1].tz_is_set;\u000aLAB_0040742c:\u000a        uVar11 = (ulong)(__c / 7 + (__c >> 0x1f) + (uint)((ulong)((long)__c * 0x92492493) >> 0x3f));\u000a        uVar6 = 2;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'W':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        __c = *(int *)&tz[1].tz_is_set + 6;\u000a        uVar7 = (int)((ulong)((long)__c * -0x6db6db6d) >> 0x20) + 6 + *(int *)&tz[1].tz_is_set;\u000a        __c = (*(int *)&tz[1].field_0xc + 7) - (__c + (((int)uVar7 >> 2) + (uVar7 >> 0x1f)) * -7);\u000a        goto LAB_0040742c;\u000a      }\u000a      break;\u000a    case 'X':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'O') {\u000a        cVar4 = 'X';\u000aLAB_00407978:\u000a        uVar6 = 0;\u000a        uVar11 = 0;\u000a        goto switchD_00406eed_caseD_72;\u000a      }\u000a      break;\u000a    case 'Y':\u000a      if (cVar3 == 'E') {\u000a        uVar11 = 0;\u000a        cVar4 = 'Y';\u000a        uVar6 = 0;\u000a        goto switchD_00406eed_caseD_72;\u000a      }\u000a      if (cVar3 == 'O') goto LAB_004070f1;\u000a      __c = *(int *)((long)&tz[1].next + 4);\u000a      bVar5 = __c < -0x76c;\u000a      local_4b0 = (ulong)(__c + 0x76c);\u000a      cVar4 = 0;\u000a      uVar6 = 4;\u000a      local_490 = (ulong)bVar5;\u000a      local_4bc = 0;\u000a      goto LAB_00407dc9;\u000a    case 'Z':\u000a      __n_00 = (char *)strlen((char *)local_470);\u000a      __src = (char *)0x0;\u000a      if (-1 < (int)uVar9) {\u000a        __src = pcVar17;\u000a      }\u000a      pcVar17 = __n_00;\u000a      if (__n_00 < __src) {\u000a        pcVar17 = __src;\u000a      }\u000a      if (format + -(long)pcVar16 <= pcVar17) {\u000a        return 0;\u000a      }\u000a      if ((char *)maxsize == (char *)0x0) {\u000aLAB_00407a77:\u000a        maxsize = 0;\u000a        pcVar16 = pcVar17 + (long)pcVar16;\u000a      }\u000a      else {\u000a        if (__n_00 < __src) {\u000a          if (__c_01 == 0x30) {\u000a            __c_01 = 0x30;\u000a          }\u000a          else {\u000a            __c_01 = 0x20;\u000a          }\u000a          memset((void *)maxsize,__c_01,(long)(int)uVar9 - (long)__n_00);\u000a          maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - (long)__n_00));\u000a          if (bVar5) goto LAB_004081ba;\u000aLAB_004081cf:\u000a          if (bVar2 == 0) {\u000a            memcpy((void *)maxsize,local_470,(size_t)__n_00);\u000a          }\u000a          else {\u000a            memcpy_uppcase(maxsize);\u000a          }\u000a        }\u000a        else {\u000a          if (!bVar5) goto LAB_004081cf;\u000aLAB_004081ba:\u000a          memcpy_lowcase(maxsize);\u000a        }\u000a        maxsize = (size_t)((char *)maxsize + (long)__n_00);\u000a        pcVar16 = pcVar17 + (long)pcVar16;\u000a      }\u000a      goto LAB_0040834d;\u000a    case 'a':\u000a      uVar6 = 0;\u000a      if (cVar3 == 0) {\u000a        if (bVar5) {\u000a          bVar2 = 1;\u000a        }\u000a        uVar11 = 0;\u000a        cVar4 = 'a';\u000a        uVar6 = 0;\u000a        goto switchD_00406eed_caseD_72;\u000a      }\u000a      break;\u000a    case 'b':\u000a    case 'h':\u000a      if (bVar5) {\u000a        bVar2 = 1;\u000a      }\u000a      uVar6 = 0;\u000a      cVar4 = cVar8;\u000a      if (cVar3 == 0) goto LAB_00407978;\u000a      break;\u000a    case 'c':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'O') {\u000a        cVar4 = 'c';\u000a        goto LAB_00407978;\u000a      }\u000a      break;\u000a    case 'd':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)&tz->field_0xc;\u000a        uVar6 = 2;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'e':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)&tz->field_0xc;\u000aLAB_00407948:\u000a        uVar6 = 2;\u000a        if ((__c_01 != 0x2d) && (__c_01 != 0x30)) {\u000a          __c_01 = 0x5f;\u000a        }\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'j':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        local_490 = (ulong)(*(int *)&tz[1].field_0xc < -1);\u000a        local_4b0 = (ulong)(*(int *)&tz[1].field_0xc + 1);\u000a        uVar6 = 3;\u000aLAB_004079f4:\u000a        local_4bc = 0;\u000a        cVar4 = 0;\u000a        goto LAB_00407cbf;\u000a      }\u000a      break;\u000a    case 'k':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)&tz->tz_is_set;\u000a        goto LAB_00407948;\u000a      }\u000a      break;\u000a    case 'l':\u000a      uVar6 = 0;\u000a      uVar11 = (ulong)local_474;\u000a      if (cVar3 != 'E') goto LAB_00407948;\u000a      break;\u000a    case 'm':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        bVar5 = *(int *)&tz[1].next < -1;\u000a        uVar7 = *(int *)&tz[1].next + 1;\u000aLAB_0040761c:\u000a        local_4b0 = (ulong)uVar7;\u000a        local_490 = (ulong)bVar5;\u000a        uVar6 = 2;\u000a        goto LAB_004079f4;\u000a      }\u000a      break;\u000a    case 'n':\u000a      uVar7 = 0;\u000a      if (-1 < (int)uVar9) {\u000a        uVar7 = uVar9;\u000a      }\u000a      pcVar17 = (char *)0x1;\u000a      if (1 < uVar7) {\u000a        pcVar17 = (char *)(ulong)uVar7;\u000a      }\u000a      if (format + -(long)pcVar16 <= pcVar17) {\u000a        return 0;\u000a      }\u000a      if ((char *)maxsize == (char *)0x0) goto LAB_00407a77;\u000a      if (1 < uVar7) {\u000a        if (__c_01 == 0x30) {\u000a          __c_01 = 0x30;\u000a        }\u000a        else {\u000a          __c_01 = 0x20;\u000a        }\u000a        memset((void *)maxsize,__c_01,(long)(int)uVar9 - 1U);\u000a        maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - 1U));\u000a      }\u000a      *(char *)maxsize = '\u005cn';\u000a      goto LAB_00406da8;\u000a    case 'r':\u000a      goto switchD_00406eed_caseD_72;\u000a    case 's':\u000a      local_408 = tz[3].next;\u000a      local_438 = *(int *)&tz->next;\u000a      iStack1076 = *(int *)((long)&tz->next + 4);\u000a      iStack1072 = *(int *)&tz->tz_is_set;\u000a      iStack1068 = *(int *)&tz->field_0xc;\u000a      local_428 = *(int *)&tz[1].next;\u000a      iStack1060 = *(int *)((long)&tz[1].next + 4);\u000a      iStack1056 = *(int *)&tz[1].tz_is_set;\u000a      iStack1052 = *(int *)&tz[1].field_0xc;\u000a      local_418 = *(int *)&tz[2].next;\u000a      uStack1044 = *(undefined4 *)((long)&tz[2].next + 4);\u000a      uStack1040 = *(undefined4 *)&tz[2].tz_is_set;\u000a      uStack1036 = *(undefined4 *)&tz[2].field_0xc;\u000a      uVar15 = mktime_z(local_468,(tm *)&local_438);\u000a      local_490 = uVar15 >> 0x3f;\u000a      __src = local_441;\u000a      uVar11 = uVar15;\u000a      do {\u000a        uVar10 = (long)uVar11 / 10 + ((long)uVar11 >> 0x3f);\u000a        cVar8 = (char)uVar11 + (char)uVar10 * -10;\u000a        cVar3 = -cVar8;\u000a        if (-1 < (long)uVar15) {\u000a          cVar3 = cVar8;\u000a        }\u000a        __src[-1] = cVar3 + '0';\u000a        __src = __src + -1;\u000a        uVar14 = uVar11 + 9;\u000a        uVar11 = uVar10;\u000a      } while (0x12 < uVar14);\u000a      uVar6 = 1;\u000a      cVar4 = 0;\u000a      goto LAB_00407e1f;\u000a    case 't':\u000a      uVar7 = 0;\u000a      if (-1 < (int)uVar9) {\u000a        uVar7 = uVar9;\u000a      }\u000a      pcVar17 = (char *)0x1;\u000a      if (1 < uVar7) {\u000a        pcVar17 = (char *)(ulong)uVar7;\u000a      }\u000a      if (format + -(long)pcVar16 <= pcVar17) {\u000a        return 0;\u000a      }\u000a      if ((char *)maxsize == (char *)0x0) goto LAB_00407a77;\u000a      if (1 < uVar7) {\u000a        if (__c_01 == 0x30) {\u000a          __c_01 = 0x30;\u000a        }\u000a        else {\u000a          __c_01 = 0x20;\u000a        }\u000a        memset((void *)maxsize,__c_01,(long)(int)uVar9 - 1U);\u000a        maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - 1U));\u000a      }\u000a      *(char *)maxsize = '\u005ct';\u000aLAB_00406da8:\u000a      maxsize = (size_t)((char *)maxsize + 1);\u000a      pcVar16 = pcVar17 + (long)pcVar16;\u000a      goto LAB_0040834d;\u000a    case 'u':\u000a      __c = *(int *)&tz[1].tz_is_set + 6;\u000a      uVar7 = (int)((ulong)((long)__c * -0x6db6db6d) >> 0x20) + 6 + *(int *)&tz[1].tz_is_set;\u000a      uVar11 = (ulong)(__c + (((int)uVar7 >> 2) + (uVar7 >> 0x1f)) * -7 + 1);\u000a      uVar6 = 1;\u000aLAB_00407ca7:\u000a      local_490 = uVar11 >> 0x1f;\u000a      local_4bc = 0;\u000a      cVar4 = 0;\u000a      local_4b0 = uVar11;\u000a      goto LAB_00407cbf;\u000a    case 'w':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'E') {\u000a        uVar11 = (ulong)*(uint *)&tz[1].tz_is_set;\u000a        uVar6 = 1;\u000a        goto LAB_00407ca7;\u000a      }\u000a      break;\u000a    case 'x':\u000a      uVar6 = 0;\u000a      if (cVar3 != 'O') {\u000a        cVar4 = 'x';\u000a        goto LAB_00407978;\u000a      }\u000a      break;\u000a    case 'y':\u000a      if (cVar3 != 'E') {\u000a        __c = *(int *)((long)&tz[1].next + 4);\u000a        uVar7 = __c + (__c / 100 + (__c >> 0x1f) + (uint)((ulong)((long)__c * 0x51eb851f) >> 0x3f))\u000a                      * -100;\u000a        uVar11 = (ulong)uVar7;\u000a        uVar6 = 2;\u000a        if ((int)uVar7 < 0) {\u000a          uVar9 = uVar7 + 100;\u000a          if (__c < -0x76c) {\u000a            uVar9 = -uVar7;\u000a          }\u000a          uVar11 = (ulong)uVar9;\u000a          uVar6 = 2;\u000a        }\u000a        goto LAB_00407ca7;\u000a      }\u000a      uVar11 = 0;\u000a      cVar4 = 'y';\u000a      uVar6 = 0;\u000a      goto switchD_00406eed_caseD_72;\u000a    case 'z':\u000aswitchD_00406eed_caseD_7a:\u000a      if (*(int *)&tz[2].next < 0) goto LAB_0040834d;\u000a      if (3 < uVar11) {\u000a        uVar6 = 0;\u000a        uVar7 = 0xe;\u000a        goto LAB_00406d4d;\u000a      }\u000a      uVar7 = *(uint *)&tz[2].tz_is_set;\u000a      __c = (int)uVar7 / 0x3c + ((int)uVar7 >> 0x1f) +\u000a            (uint)((ulong)((long)(int)uVar7 * 0x88888889) >> 0x3f);\u000a      uVar12 = (int)uVar7 / 0xe10 + ((int)uVar7 >> 0x1f) +\u000a               (uint)((ulong)((long)(int)uVar7 * 0x91a2b3c5) >> 0x3f);\u000a      __c_00 = __c + (__c / 0x3c + (__c >> 0x1f) + (uint)((ulong)((long)__c * 0x88888889) >> 0x3f))\u000a                     * -0x3c;\u000a      __c = uVar7 + __c * -0x3c;\u000a      switch(uVar11) {\u000a      case 0:\u000a        uVar12 = uVar12 * 100 + __c_00;\u000a        uVar6 = 5;\u000a        goto LAB_004070df;\u000a      case 1:\u000aswitchD_004070bf_caseD_1:\u000a        local_490 = (ulong)(uVar7 >> 0x1f);\u000a        local_4b0 = (ulong)(uVar12 * 100 + __c_00);\u000a        uVar6 = 6;\u000a        local_4bc = 4;\u000a        break;\u000a      case 2:\u000aswitchD_004070bf_caseD_2:\u000a        local_490 = (ulong)(uVar7 >> 0x1f);\u000a        local_4b0 = (ulong)(uVar12 * 10000 + __c + __c_00 * 100);\u000a        uVar6 = 9;\u000a        local_4bc = 0x14;\u000a        break;\u000a      case 3:\u000a        if (__c != 0) goto switchD_004070bf_caseD_2;\u000a        if (__c_00 != 0) goto switchD_004070bf_caseD_1;\u000a        uVar6 = 3;\u000aLAB_004070df:\u000a        local_490 = (ulong)(uVar7 >> 0x1f);\u000a        local_4b0 = (ulong)uVar12;\u000a        local_4bc = 0;\u000a      }\u000a      uVar7 = 0x20;\u000aLAB_00406d4d:\u000a      if ((char)uVar7 == 0xe) break;\u000a      cVar4 = 1;\u000a      if ((char)uVar7 == ' ') {\u000aLAB_00407cbf:\u000a        uVar9 = (uint)pcVar17;\u000a        bVar5 = (bool)((byte)local_490 & 1);\u000a        if ((cVar3 == 'O') && ((local_490 & 1) == 0)) {\u000a          uVar11 = 0;\u000a          cVar4 = cVar8;\u000a          goto switchD_00406eed_caseD_72;\u000a        }\u000aLAB_00407dc9:\u000a        uVar11 = (ulong)(uint)-(int)local_4b0;\u000a        if (bVar5 == false) {\u000a          uVar11 = local_4b0;\u000a        }\u000a        __src = local_441;\u000a        do {\u000a          if ((local_4bc & 1) != 0) {\u000a            __src[-1] = ':';\u000a            __src = __src + -1;\u000a          }\u000a          local_4bc = (int)local_4bc >> 1;\u000a          uVar9 = (uint)uVar11;\u000a          uVar15 = uVar11 * 0xcccccccd;\u000a          local_4b0 = uVar15 >> 0x23;\u000a          uVar7 = (uint)(uVar15 >> 0x20);\u000a          __src[-1] = (char)uVar11 + ((char)(uVar7 >> 3) + (char)(uVar7 >> 3)) * -5 | 0x30;\u000a          __src = __src + -1;\u000a          uVar11 = local_4b0;\u000a        } while ((9 < uVar9) || (uVar11 = uVar15 >> 0x23, local_4bc != 0));\u000aLAB_00407e1f:\u000a        uVar7 = (uint)pcVar17;\u000a        if ((int)uVar6 < (int)uVar7) {\u000a          uVar6 = uVar7;\u000a        }\u000a        if (cVar4 != 0) {\u000a          cVar4 = '+';\u000a        }\u000a        cVar3 = '-';\u000a        if ((local_490 & 1) == 0) {\u000a          cVar3 = cVar4;\u000a        }\u000a        if (__c_01 == 0x2d) {\u000a          if (cVar3 != 0) {\u000a            __n_00 = (char *)0x0;\u000a            if (-1 < (int)uVar7) {\u000a              __n_00 = pcVar17;\u000a            }\u000a            pcVar17 = (char *)0x1;\u000a            if (1 < (uint)__n_00) {\u000a              pcVar17 = __n_00;\u000a            }\u000a            if (format + -(long)pcVar16 <= pcVar17) {\u000a              return 0;\u000a            }\u000a            if ((char *)maxsize == (char *)0x0) {\u000a              maxsize = 0;\u000a            }\u000a            else {\u000a              if ((1 < (uint)__n_00) && (uVar6 == 0)) {\u000a                local_480 = SEXT48((int)uVar7);\u000a                memset((void *)maxsize,0x20,local_480 - 1);\u000a                maxsize = (size_t)((char *)maxsize + (local_480 - 1));\u000a              }\u000aLAB_0040827a:\u000a              *(char *)maxsize = cVar3;\u000a              maxsize = (size_t)((char *)maxsize + 1);\u000a            }\u000aLAB_00408280:\u000a            pcVar16 = pcVar17 + (long)pcVar16;\u000a          }\u000a        }\u000a        else {\u000a          __c = (((int)__src - ((int)register0x00000020 + -0x441)) - (uint)(cVar3 != 0)) + uVar6;\u000a          if (__c < 1) {\u000a            if (cVar3 != 0) {\u000a              __n_00 = (char *)0x0;\u000a              if (-1 < (int)uVar7) {\u000a                __n_00 = pcVar17;\u000a              }\u000a              pcVar17 = (char *)0x1;\u000a              if (1 < (uint)__n_00) {\u000a                pcVar17 = __n_00;\u000a              }\u000a              if (format + -(long)pcVar16 <= pcVar17) {\u000a                return 0;\u000a              }\u000a              if ((char *)maxsize != (char *)0x0) {\u000a                if ((1 < (uint)__n_00) && (uVar6 == 0)) {\u000a                  local_480 = (long)(int)uVar7 - 1;\u000a                  if (__c_01 == 0x30) {\u000a                    __c = 0x30;\u000a                  }\u000a                  else {\u000a                    __c = 0x20;\u000a                  }\u000a                  memset((void *)maxsize,__c,local_480);\u000a                  maxsize = (size_t)((char *)maxsize + local_480);\u000a                }\u000a                goto LAB_0040827a;\u000a              }\u000a              maxsize = 0;\u000a              goto LAB_00408280;\u000a            }\u000a          }\u000a          else {\u000a            pcVar17 = format + -(long)pcVar16;\u000a            if (__c_01 == 0x5f) {\u000a              __n_00 = (char *)(long)__c;\u000a              if (pcVar17 <= __n_00) {\u000a                return 0;\u000a              }\u000a              if ((char *)maxsize == (char *)0x0) {\u000a                maxsize = 0;\u000a              }\u000a              else {\u000a                memset((void *)maxsize,0x20,(size_t)__n_00);\u000a                maxsize = (size_t)((char *)maxsize + (long)__n_00);\u000a              }\u000a              pcVar17 = (char *)0x0;\u000a              pcVar16 = __n_00 + (long)pcVar16;\u000a              if (uVar7 - __c != 0 && __c <= (int)uVar7) {\u000a                pcVar17 = (char *)(ulong)(uVar7 - __c);\u000a              }\u000a              uVar7 = (uint)pcVar17;\u000a              if (cVar3 != 0) {\u000a                __n_00 = (char *)0x1;\u000a                if (1 < uVar7) {\u000a                  __n_00 = pcVar17;\u000a                }\u000a                if (format + -(long)pcVar16 <= __n_00) {\u000a                  return 0;\u000a                }\u000a                if ((char *)maxsize == (char *)0x0) {\u000a                  maxsize = 0;\u000a                }\u000a                else {\u000a                  if ((uVar6 == 0) && (1 < uVar7)) {\u000a                    memset((void *)maxsize,0x20,(size_t)(pcVar17 + -1));\u000a                    maxsize = (size_t)((char *)maxsize + (long)(pcVar17 + -1));\u000a                  }\u000a                  *(char *)maxsize = cVar3;\u000a                  maxsize = (size_t)((char *)maxsize + 1);\u000a                }\u000a                pcVar16 = __n_00 + (long)pcVar16;\u000a              }\u000a            }\u000a            else {\u000a              if (pcVar17 <= (char *)(long)(int)uVar6) {\u000a                return 0;\u000a              }\u000a              if (cVar3 != 0) {\u000a                uVar9 = 0;\u000a                if (-1 < (int)uVar7) {\u000a                  uVar9 = uVar7;\u000a                }\u000a                __n_00 = (char *)0x1;\u000a                if (1 < uVar9) {\u000a                  __n_00 = (char *)(ulong)uVar9;\u000a                }\u000a                if (pcVar17 <= __n_00) {\u000a                  return 0;\u000a                }\u000a                if ((char *)maxsize == (char *)0x0) {\u000a                  maxsize = 0;\u000a                }\u000a                else {\u000a                  if ((1 < uVar9) && (uVar6 == 0)) {\u000a                    if (__c_01 == 0x30) {\u000a                      __c_00 = 0x30;\u000a                    }\u000a                    else {\u000a                      __c_00 = 0x20;\u000a                    }\u000a                    memset((void *)maxsize,__c_00,(long)(int)uVar7 - 1U);\u000a                    maxsize = (size_t)((char *)maxsize + ((long)(int)uVar7 - 1U));\u000a                  }\u000a                  *(char *)maxsize = cVar3;\u000a                  maxsize = (size_t)((char *)maxsize + 1);\u000a                }\u000a                pcVar16 = __n_00 + (long)pcVar16;\u000a              }\u000a              uVar7 = 0;\u000a              __n = SEXT48(__c);\u000a              if ((char *)maxsize == (char *)0x0) {\u000a                maxsize = 0;\u000a                pcVar16 = pcVar16 + __n;\u000a              }\u000a              else {\u000a                memset((void *)maxsize,0x30,__n);\u000a                maxsize = (size_t)((char *)maxsize + __n);\u000a                pcVar16 = pcVar16 + __n;\u000a              }\u000a            }\u000a          }\u000a        }\u000a        __n_00 = local_441 + -(long)__src;\u000a        pcVar17 = (char *)0x0;\u000a        if (-1 < (int)uVar7) {\u000a          pcVar17 = (char *)(ulong)uVar7;\u000a        }\u000a        pcVar18 = __n_00;\u000a        if (__n_00 < pcVar17) {\u000a          pcVar18 = pcVar17;\u000a        }\u000a        if (format + -(long)pcVar16 <= pcVar18) {\u000a          return 0;\u000a        }\u000a        if ((char *)maxsize == (char *)0x0) {\u000a          maxsize = 0;\u000a        }\u000a        else {\u000a          if ((uVar6 == 0) && (__n_00 < pcVar17)) {\u000a            if (__c_01 == 0x30) {\u000a              __c_01 = 0x30;\u000a            }\u000a            else {\u000a              __c_01 = 0x20;\u000a            }\u000a            memset((void *)maxsize,__c_01,(long)(int)uVar7 - (long)__n_00);\u000a            maxsize = (size_t)((char *)maxsize + ((long)(int)uVar7 - (long)__n_00));\u000a          }\u000a          if (bVar2 == 0) {\u000a            memcpy((void *)maxsize,__src,(size_t)__n_00);\u000a          }\u000a          else {\u000a            memcpy_uppcase(maxsize);\u000a          }\u000a          maxsize = (size_t)((char *)maxsize + (long)__n_00);\u000a        }\u000a        goto LAB_00408340;\u000a      }\u000aLAB_00406fca:\u000a      if ((uVar7 | 4) != 4) {\u000a        return 0;\u000a      }\u000a      goto LAB_0040834d;\u000a    }\u000a    __src_00 = (void *)((long)&tp->tm_sec + 1);\u000a    lVar13 = 0;\u000a    do {\u000a      lVar13 = lVar13 + 0x100000000;\u000a      __src = (char *)((long)__src_00 + -1);\u000a      __src_00 = (void *)((long)__src_00 + -1);\u000a    } while (*__src != '%');\u000a    __n_00 = (char *)(lVar13 >> 0x20);\u000a    __src = (char *)0x0;\u000a    if (-1 < (int)uVar9) {\u000a      __src = pcVar17;\u000a    }\u000a    pcVar18 = __n_00;\u000a    if (__n_00 < __src) {\u000a      pcVar18 = __src;\u000a    }\u000a    if (format + -(long)pcVar16 <= pcVar18) {\u000a      return 0;\u000a    }\u000a    if ((char *)maxsize == (char *)0x0) {\u000a      maxsize = 0;\u000a    }\u000a    else {\u000a      if ((uVar6 == 0) && (__n_00 < __src)) {\u000a        if (__c_01 == 0x30) {\u000a          __c_01 = 0x30;\u000a        }\u000a        else {\u000a          __c_01 = 0x20;\u000a        }\u000a        memset((void *)maxsize,__c_01,(long)(int)uVar9 - (long)__n_00);\u000a        maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - (long)__n_00));\u000a      }\u000a      if ((bVar2 & 1) == 0) {\u000a        memcpy((void *)maxsize,__src_00,(size_t)__n_00);\u000a      }\u000a      else {\u000a        memcpy_uppcase(maxsize);\u000a      }\u000a      maxsize = (size_t)((char *)maxsize + (long)__n_00);\u000a    }\u000aLAB_00408340:\u000a    pcVar16 = pcVar18 + (long)pcVar16;\u000aLAB_0040834d:\u000a    cVar3 = *(char *)((long)&tp->tm_sec + 1);\u000a    tp = (tm *)((long)&tp->tm_sec + 1);\u000a  } while( true );\u000aswitchD_00406eed_caseD_72:\u000a  local_485 = 0x2520;\u000a  pcVar17 = &local_483;\u000a  if (cVar3 != 0) {\u000a    pcVar17 = local_482;\u000a    local_483 = cVar3;\u000a  }\u000a  *pcVar17 = cVar4;\u000a  pcVar17[1] = 0;\u000a  __n = strftime(&local_438,0x400,(char *)&local_485,(tm *)tz);\u000a  if (__n != 0) {\u000a    __src = (char *)(__n - 1);\u000a    pcVar17 = (char *)0x0;\u000a    if (-1 < (int)uVar9) {\u000a      pcVar17 = (char *)(ulong)uVar9;\u000a    }\u000a    __n_00 = __src;\u000a    if (__src < pcVar17) {\u000a      __n_00 = pcVar17;\u000a    }\u000a    if (format + -(long)pcVar16 <= __n_00) {\u000a      return 0;\u000a    }\u000a    if ((char *)maxsize == (char *)0x0) {\u000a      maxsize = 0;\u000a      pcVar16 = __n_00 + (long)pcVar16;\u000a    }\u000a    else {\u000a      if ((uVar6 == 0) && (__src < pcVar17)) {\u000a        if (__c_01 == 0x30) {\u000a          __c_01 = 0x30;\u000a        }\u000a        else {\u000a          __c_01 = 0x20;\u000a        }\u000a        memset((void *)maxsize,__c_01,(long)(int)uVar9 - (long)__src);\u000a        maxsize = (size_t)((char *)maxsize + ((long)(int)uVar9 - (long)__src));\u000a      }\u000a      if (uVar11 == 0) {\u000a        if ((bVar2 & 1) == 0) {\u000a          memcpy((void *)maxsize,&local_438 + 1,(size_t)__src);\u000a        }\u000a        else {\u000a          memcpy_uppcase(maxsize);\u000a        }\u000a      }\u000a      else {\u000a        memcpy_lowcase(maxsize);\u000a      }\u000a      maxsize = (size_t)((char *)maxsize + (long)__src);\u000a      pcVar16 = __n_00 + (long)pcVar16;\u000a    }\u000a  }\u000a  goto LAB_0040834d;\u000a}\u000a\u000a
p325
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x4b8\nMOV qword ptr [0x80 + RSP],R9\nMOV RBX,RCX\nMOV qword ptr [RSP + 0x48],RDX\nMOV R9,RSI\nMOV dword ptr [0x8c + RSP],EDI\nMOV EAX,dword ptr [R8 + 0x8]\nMOV qword ptr [RSP + 0x30],R8\nMOV RCX,qword ptr [R8 + 0x30]\nTEST RCX,RCX\nMOV EDX,0x40d829\nCMOVNZ RDX,RCX\nMOV qword ptr [RSP + 0x78],RDX\nLEA ECX,[RAX + -0xc]\nTEST EAX,EAX\nMOV EDX,0xc\nCMOVNZ EDX,EAX\nCMP EAX,0xc\nCMOVG EDX,ECX\nMOV dword ptr [RSP + 0x74],EDX\nXOR R8D,R8D\nCMP byte ptr [RBX],0x0\nJZ 0x0040835b\nMOV R15,0x100000000\nMOV qword ptr [RSP + 0x38],RAX\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x2c],EAX\nJMP 0x00406dd0\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nCALL 0x00401df0\nMOV R11D,dword ptr [RSP + 0x18]\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,R14\nMOV AL,byte ptr [RSP + 0x50]\nMOV byte ptr [R9],AL\nINC R9\nADD R8,R15\nXOR R14D,R14D\nTEST R9,R9\nMOVSXD R12,R12D\nJZ 0x00406cb3\nMOV ESI,0x30\nMOV RDI,R9\nMOV RDX,R12\nMOV qword ptr [RSP + 0x20],R8\nMOV R15,R9\nCALL 0x00401df0\nMOV R11D,dword ptr [RSP + 0x18]\nMOV R9,R15\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,R12\nADD R8,R12\nJMP 0x00408283\nXOR R9D,R9D\nADD R8,R12\nJMP 0x00408283\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nMOV R12,R9\nCALL 0x00401df0\nMOV RCX,qword ptr [RSP + 0x40]\nMOV R11D,dword ptr [RSP + 0x18]\nMOV R9,R12\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,R14\nMOV AL,byte ptr [RSP + 0x50]\nMOV byte ptr [R9],AL\nINC R9\nADD R8,R15\nMOV R14D,ECX\nJMP 0x00408283\nMOV RSI,qword ptr [RSP + 0x78]\nMOV RDX,R12\nMOV R14,RDI\nCALL 0x00401ed0\nMOV R9,R14\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,R12\nADD R8,RBP\nJMP 0x0040834d\nTEST R11D,R11D\nJZ 0x00406db3\nSHR ESI,0x1f\nMOV qword ptr [RSP + 0x58],RSI\nIMUL EBP,EBP,0x64\nADD EBP,R11D\nMOV qword ptr [RSP + 0x38],RBP\nMOV R11D,0x6\nMOV dword ptr [RSP + 0x2c],0x4\nMOV EAX,0x20\nMOV EDX,EAX\nAND DL,0x3f\nCMP DL,0xe\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV R12B,0x1\nCMP DL,0x20\nMOV RDI,qword ptr [RSP + 0x58]\nJZ 0x00407cbf\nJMP 0x00406fca\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nMOV R15,R9\nCALL 0x00401df0\nADD R15,R14\nMOV R8,qword ptr [RSP + 0x20]\nMOV R9,R15\nMOV R15,0x100000000\nMOV AL,byte ptr [RBX]\nMOV byte ptr [R9],AL\nINC R9\nADD R8,RBP\nJMP 0x0040834d\nMOV qword ptr [RSP + 0x38],RBP\nSHR ESI,0x1f\nMOV qword ptr [RSP + 0x58],RSI\nMOV R11D,0x3\nJMP 0x004070df\nMOV CL,byte ptr [RBX]\nCMP CL,0x25\nJNZ 0x00406e40\nXOR ESI,ESI\nMOV EAX,dword ptr [0x8c + RSP]\nMOV R12B,AL\nXOR R13D,R13D\nINC RBX\nJMP 0x00406df6\nINC RBX\nMOV R13D,EAX\nMOVSX EAX,byte ptr [RBX]\nCMP EAX,0x2f\nJLE 0x00406e20\nCMP EAX,0x30\nJZ 0x00406df0\nCMP EAX,0x5f\nJZ 0x00406df0\nCMP EAX,0x5e\nJNZ 0x00406e70\nMOV R12B,0x1\nINC RBX\nJMP 0x00406df6\nCMP EAX,0x2d\nJZ 0x00406df0\nCMP EAX,0x23\nJNZ 0x00406e70\nMOV SIL,0x1\nINC RBX\nJMP 0x00406df6\nMOV RDX,qword ptr [RSP + 0x48]\nSUB RDX,R8\nMOV EAX,0x1\nCMP RDX,0x2\nJC 0x00406fc0\nTEST R9,R9\nJZ 0x00406fb8\nMOV byte ptr [R9],CL\nINC R9\nJMP 0x00406fbb\nADD EAX,-0x30\nMOV R14D,0xffffffff\nCMP EAX,0x9\nJA 0x00406eb8\nXOR EAX,EAX\nMOV R14D,0x7fffffff\nCMP EAX,0xccccccc\nJG 0x00406ea6\nMOVSX ECX,byte ptr [RBX]\nADD ECX,-0x30\nCMP EAX,0xccccccc\nJNZ 0x00406e9f\nCMP ECX,0x7\nJG 0x00406ea6\nLEA EAX,[RAX + RAX*0x4]\nLEA R14D,[RCX + RAX*0x2]\nMOVSX EAX,byte ptr [RBX + 0x1]\nINC RBX\nADD EAX,-0x30\nCMP EAX,0xa\nMOV EAX,R14D\nJC 0x00406e80\nMOVSX R10D,byte ptr [RBX]\nCMP R10D,0x4f\nJZ 0x00406ec8\nCMP R10D,0x45\nJNZ 0x00406ecd\nINC RBX\nJMP 0x00406ed0\nXOR R10D,R10D\nMOVSX EDI,byte ptr [RBX]\nCMP EDI,0x7a\nMOV qword ptr [RSP + 0x20],R8\nJA 0x004070ec\nXOR EDX,EDX\nMOV AL,0x72\nMOV EBP,0x40d6e2\nXOR R11D,R11D\nJMP qword ptr [0x40d2d8 + RDI*0x8]\nMOV dword ptr [RSP + 0x14],R12D\nXOR R11D,R11D\nCMP R10D,0x45\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV dword ptr [RSP + 0x38],R10D\nMOV qword ptr [RSP + 0x40],R9\nMOV RDX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RDX + 0x14]\nMOV ESI,dword ptr [RDX + 0x18]\nMOV ECX,EAX\nSAR ECX,0x1f\nAND ECX,0x190\nLEA R12D,[RAX + RCX*0x1 + -0x64]\nMOV R15D,dword ptr [RDX + 0x1c]\nMOV EDI,R15D\nCALL 0x00408410\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0040783e\nMOV EAX,0x16d\nTEST R12B,0x3\nJNZ 0x00406f93\nMOVSXD RAX,R12D\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSAR RCX,0x25\nMOV RDX,RAX\nSHR RDX,0x3f\nADD ECX,EDX\nIMUL ECX,ECX,0x64\nSAR RAX,0x27\nADD EAX,EDX\nIMUL EAX,EAX,0x190\nXOR EDX,EDX\nCMP R12D,EAX\nSETZ DL\nADD EDX,0x16d\nCMP R12D,ECX\nMOV EAX,0x16e\nCMOVZ EAX,EDX\nSUB R15D,EAX\nMOV RAX,qword ptr [RSP + 0x30]\nMOV ESI,dword ptr [RAX + 0x18]\nMOV EDI,R15D\nCALL 0x00408410\nMOV ECX,EAX\nSHR ECX,0x1f\nXOR ECX,0x1\nTEST EAX,EAX\nCMOVNS EBP,EAX\nJMP 0x004078a5\nXOR R9D,R9D\nINC R8\nXOR EAX,EAX\nTEST EAX,EAX\nMOV ECX,0x4\nCMOVZ EAX,ECX\nOR EAX,0x4\nCMP EAX,0x4\nJZ 0x0040834d\nJMP 0x0040836e\nTEST SIL,SIL\nJZ 0x00406fe3\nMOV R12B,0x1\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407837\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nMOV dword ptr [RSP + 0x14],R12D\nDEC RBX\nJMP 0x004070f1\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407a2a\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nMOV EDX,0x1\nJMP 0x00407033\nINC RDX\nMOVZX EAX,byte ptr [RBX + RDX*0x1]\nCMP AL,0x3a\nJZ 0x00407030\nCMP AL,0x7a\nJNZ 0x004070ec\nADD RBX,RDX\nMOV RAX,qword ptr [RSP + 0x30]\nCMP dword ptr [RAX + 0x20],0x0\nJS 0x0040834d\nCMP RDX,0x3\nJA 0x00407c46\nMOV RAX,qword ptr [RSP + 0x30]\nMOVSXD RSI,dword ptr [RAX + 0x28]\nIMUL RAX,RSI,-0x77777777\nSHR RAX,0x20\nADD EAX,ESI\nMOV ECX,EAX\nSHR ECX,0x1f\nSAR EAX,0x5\nADD EAX,ECX\nIMUL RBP,RSI,-0x6e5d4c3b\nSHR RBP,0x20\nADD EBP,ESI\nMOV ECX,EBP\nSHR ECX,0x1f\nSAR EBP,0xb\nADD EBP,ECX\nMOVSXD R11,EAX\nIMUL RCX,R11,-0x77777777\nSHR RCX,0x20\nADD ECX,R11D\nMOV EAX,ECX\nSHR EAX,0x1f\nSAR ECX,0x5\nADD ECX,EAX\nIMUL ECX,ECX,0x3c\nIMUL EAX,R11D,0x3c\nSUB R11D,ECX\nMOV ECX,ESI\nSUB ECX,EAX\nJMP qword ptr [0x40d6b0 + RDX*0x8]\nSHR ESI,0x1f\nMOV qword ptr [RSP + 0x58],RSI\nIMUL EBP,EBP,0x64\nADD EBP,R11D\nMOV qword ptr [RSP + 0x38],RBP\nMOV R11D,0x5\nMOV dword ptr [RSP + 0x2c],0x0\nJMP 0x00406d48\nMOV dword ptr [RSP + 0x14],R12D\nXOR R11D,R11D\nNOP word ptr CS:[RAX + RAX*0x1]\nLEA R12,[RBX + 0x1]\nXOR EBP,EBP\nNOP word ptr CS:[RAX + RAX*0x1]\nADD RBP,R15\nCMP byte ptr [R12 + -0x1],0x25\nLEA R12,[R12 + -0x1]\nJNZ 0x00407110\nSAR RBP,0x20\nTEST R14D,R14D\nMOV EAX,0x0\nCMOVNS EAX,R14D\nCMP RBP,RAX\nMOV R15,RBP\nCMOVC R15,RAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP R15,RCX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x00407172\nCMP RBP,RAX\nSETNC AL\nTEST R11D,R11D\nJNZ 0x00407193\nTEST AL,AL\nJNZ 0x00407193\nMOVSXD R14,R14D\nSUB R14,RBP\nCMP R13D,0x30\nJNZ 0x0040717a\nMOV ESI,0x30\nJMP 0x0040717f\nXOR R9D,R9D\nJMP 0x00408340\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nMOV R13,R9\nCALL 0x00401df0\nMOV R9,R13\nADD R9,R14\nTEST byte ptr [RSP + 0x14],0x1\nJNZ 0x004071ad\nMOV RDI,R9\nMOV RSI,R12\nMOV RDX,RBP\nMOV R14,R9\nCALL 0x00401ed0\nJMP 0x004071be\nMOV RDI,R9\nMOV RSI,R12\nMOV RDX,RBP\nMOV R14,R9\nCALL 0x004083d0\nADD R14,RBP\nMOV R8,qword ptr [RSP + 0x20]\nMOV R9,R14\nJMP 0x00408340\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407a8c\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407aa0\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nCMP R10D,0x45\nJZ 0x00407bf5\nCMP R10D,0x4f\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x004070f1\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOVSXD RAX,dword ptr [RAX + 0x14]\nCMP RAX,0xfffff894\nSETL DIL\nSETG CL\nIMUL RSI,RAX,0x51eb851f\nMOV RDX,RSI\nSHR RDX,0x3f\nSAR RSI,0x25\nADD ESI,EDX\nIMUL EDX,ESI,0x64\nCMP EAX,EDX\nSETS AL\nAND AL,CL\nMOVZX EAX,AL\nSUB ESI,EAX\nADD ESI,0x13\nMOV qword ptr [RSP + 0x38],RSI\nJMP 0x0040761c\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407ab4\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407abb\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x8]\nMOV EDX,0x2\nJMP 0x00407ca7\nMOV EDX,0x2\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV EAX,dword ptr [RSP + 0x74]\nJMP 0x00407ca7\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x4]\nMOV EDX,0x2\nJMP 0x00407ca7\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nCMP R14D,-0x1\nMOV qword ptr [RSP + 0x18],RDI\nJZ 0x00407c89\nCMP R14D,0x8\nJG 0x00407c9d\nMOV ECX,0x9\nMOV EAX,dword ptr [0x4f0 + RSP]\nNOP dword ptr [RAX + RAX*0x1]\nCDQE\nIMUL RAX,RAX,0x66666667\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x22\nADD EAX,EDX\nDEC ECX\nCMP R14D,ECX\nJNZ 0x00407340\nJMP 0x00407ca4\nMOV DL,0x1\nXOR R11D,R11D\nTEST SIL,SIL\nJZ 0x00407372\nMOV R12D,0x0\nJZ 0x00407376\nMOV DL,0x1\nMOV AL,0x70\nJMP 0x00407cef\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX]\nMOV EDX,0x2\nJMP 0x00407ca7\nMOV EBP,0x40d6e8\nJMP 0x00407ac0\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RCX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RCX + 0x1c]\nADD EAX,0x7\nSUB EAX,dword ptr [RCX + 0x18]\nCDQE\nJMP 0x0040742c\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RCX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RCX + 0x18]\nMOV ECX,dword ptr [RCX + 0x1c]\nLEA EDX,[RAX + 0x6]\nMOVSXD RDX,EDX\nIMUL RSI,RDX,-0x6db6db6d\nSHR RSI,0x20\nLEA EAX,[RSI + RAX*0x1 + 0x6]\nMOV ESI,EAX\nSHR ESI,0x1f\nSAR EAX,0x2\nADD EAX,ESI\nLEA ESI,[RAX*0x8]\nSUB ESI,EAX\nSUB EDX,ESI\nADD ECX,0x7\nSUB ECX,EDX\nMOVSXD RAX,ECX\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD EAX,ECX\nMOV ECX,EAX\nSHR ECX,0x1f\nSAR EAX,0x2\nADD EAX,ECX\nMOV EDX,0x2\nJMP 0x00407ca7\nXOR R11D,R11D\nCMP R10D,0x4f\nJNZ 0x0040792e\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nCMP R10D,0x45\nJZ 0x00407c01\nCMP R10D,0x4f\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x004070f1\nMOV RAX,qword ptr [RSP + 0x30]\nMOV ESI,dword ptr [RAX + 0x14]\nCMP ESI,0xfffff894\nSETL AL\nADD ESI,0x76c\nXOR R12D,R12D\nMOV R11D,0x4\nMOV R10B,AL\nXOR ECX,ECX\nJMP 0x00407dc9\nMOV dword ptr [RSP + 0x18],ESI\nMOV dword ptr [RSP + 0x14],R12D\nMOV RDI,qword ptr [RSP + 0x78]\nMOV R15,R9\nCALL 0x00401d30\nMOV RDI,R15\nMOV R8,qword ptr [RSP + 0x20]\nMOV R12,RAX\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP R12,RAX\nMOV RBP,R12\nCMOVC RBP,RAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP RBP,RCX\nJNC 0x0040836e\nTEST RDI,RDI\nJZ 0x00407a77\nCMP R12,RAX\nJNC 0x00407c0d\nMOVSXD R14,R14D\nSUB R14,R12\nCMP R13D,0x30\nJNZ 0x00408195\nMOV ESI,0x30\nJMP 0x0040819a\nXOR R11D,R11D\nTEST R10D,R10D\nJZ 0x00407be1\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nCMP R10D,0x4f\nJNZ 0x00407932\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0xc]\nMOV EDX,0x2\nJMP 0x00407ca7\nXOR R11D,R11D\nCMP R10D,0x45\nJNZ 0x00407936\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x1c]\nCMP EAX,-0x1\nSETL DIL\nINC EAX\nMOV qword ptr [RSP + 0x38],RAX\nMOV R11D,0x3\nJMP 0x004079f4\nXOR R11D,R11D\nCMP R10D,0x45\nJNZ 0x00407940\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nCMP R10D,0x45\nMOV EAX,dword ptr [RSP + 0x74]\nJNZ 0x00407948\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x10]\nCMP EAX,-0x1\nSETL DIL\nINC EAX\nMOV qword ptr [RSP + 0x38],RAX\nMOV R11D,0x2\nJMP 0x004079f4\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP EAX,0x1\nMOV EBP,0x1\nCMOVA EBP,EAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP RBP,RCX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x00407a77\nCMP EAX,0x2\nJC 0x00407c28\nMOVSXD R14,R14D\nDEC R14\nCMP R13D,0x30\nJNZ 0x004081ef\nMOV ESI,0x30\nJMP 0x004081f4\nMOV dword ptr [RSP + 0x14],R12D\nMOV R15,R9\nMOV RCX,qword ptr [RSP + 0x30]\nMOV RAX,qword ptr [RCX + 0x30]\nMOV qword ptr [0xe0 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RCX]\nMOVUPS XMM1,xmmword ptr [RCX + 0x10]\nMOVUPS XMM2,xmmword ptr [RCX + 0x20]\nMOVAPS xmmword ptr [0xd0 + RSP],XMM2\nMOVAPS xmmword ptr [0xc0 + RSP],XMM1\nMOVAPS xmmword ptr [0xb0 + RSP],XMM0\nLEA RSI,[0xb0 + RSP]\nMOV RDI,qword ptr [0x80 + RSP]\nCALL 0x00409a10\nMOV R8,RAX\nSHR RAX,0x3f\nMOV R10,RAX\nMOV RSI,R8\nLEA RBP,[0xa7 + RSP]\nNOP\nMOV RDX,0x6666666666666667\nMOV RAX,RSI\nIMUL RDX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + RAX*0x1]\nADD EDI,EDI\nLEA EDI,[RDI + RDI*0x4]\nMOV ECX,ESI\nSUB ECX,EDI\nADD RDX,RAX\nMOV EAX,ECX\nNEG EAX\nTEST R8,R8\nCMOVNS EAX,ECX\nADD EAX,0x30\nMOV byte ptr [RBP + -0x1],AL\nDEC RBP\nADD RSI,0x9\nCMP RSI,0x12\nMOV RSI,RDX\nJA 0x004076e0\nMOV R11D,0x1\nXOR R12D,R12D\nMOV R8,qword ptr [RSP + 0x20]\nMOV R9,R15\nMOV RDI,qword ptr [RSP + 0x38]\nMOV ECX,dword ptr [RSP + 0x2c]\nJMP 0x00407e1f\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP EAX,0x1\nMOV EBP,0x1\nCMOVA EBP,EAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP RBP,RCX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x00407a77\nCMP EAX,0x2\nJC 0x00407c37\nMOVSXD R14,R14D\nDEC R14\nCMP R13D,0x30\nJNZ 0x00408220\nMOV ESI,0x30\nJMP 0x00408225\nMOV dword ptr [RSP + 0x14],R12D\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV ECX,dword ptr [RAX + 0x18]\nLEA EAX,[RCX + 0x6]\nCDQE\nIMUL RDX,RAX,-0x6db6db6d\nSHR RDX,0x20\nLEA ECX,[RDX + RCX*0x1 + 0x6]\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x2\nADD ECX,EDX\nLEA EDX,[RCX*0x8]\nSUB EDX,ECX\nSUB EAX,EDX\nINC EAX\nMOV EDX,0x1\nJMP 0x00407ca7\nXOR R11D,R11D\nCMP R10D,0x45\nMOV dword ptr [RSP + 0x14],R12D\nJZ 0x00407100\nMOV qword ptr [RSP + 0x18],RDI\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x18]\nMOV EDX,0x1\nJMP 0x00407ca7\nXOR R11D,R11D\nCMP R10D,0x4f\nJNZ 0x00407976\nMOV dword ptr [RSP + 0x14],R12D\nJMP 0x00407100\nCMP R10D,0x45\nJNZ 0x0040797f\nXOR EDX,EDX\nMOV AL,0x79\nXOR R11D,R11D\nJMP 0x00407cef\nMOV EAX,EDI\nJMP 0x00407978\nDEC R12D\nMOV EDI,0x16d\nTEST R12B,0x3\nJNZ 0x0040788e\nMOVSXD RAX,R12D\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSAR RCX,0x25\nMOV RDX,RAX\nSHR RDX,0x3f\nADD ECX,EDX\nIMUL ECX,ECX,0x64\nSAR RAX,0x27\nADD EAX,EDX\nIMUL EAX,EAX,0x190\nXOR EDX,EDX\nCMP R12D,EAX\nSETZ DL\nADD EDX,0x16d\nCMP R12D,ECX\nMOV EDI,0x16e\nCMOVZ EDI,EDX\nADD EDI,R15D\nMOV RAX,qword ptr [RSP + 0x30]\nMOV ESI,dword ptr [RAX + 0x18]\nCALL 0x00408410\nMOV EBP,EAX\nMOV ECX,0xffffffff\nMOV R8,qword ptr [RSP + 0x20]\nMOV R9,qword ptr [RSP + 0x40]\nMOV R10D,dword ptr [RSP + 0x38]\nMOVSX EAX,byte ptr [RBX]\nCMP EAX,0x47\nJZ 0x004079cd\nCMP EAX,0x67\nJNZ 0x00407a04\nMOV RAX,qword ptr [RSP + 0x30]\nMOVSXD RBP,dword ptr [RAX + 0x14]\nIMUL RAX,RBP,0x51eb851f\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x25\nADD EAX,EDX\nIMUL EAX,EAX,0x64\nMOV EDX,EBP\nSUB EDX,EAX\nADD EDX,ECX\nMOVSXD RAX,EDX\nIMUL RDX,RAX,0x51eb851f\nMOV RDI,RDX\nSHR RDI,0x3f\nSAR RDX,0x25\nADD EDX,EDI\nIMUL EDX,EDX,0x64\nSUB EAX,EDX\nMOV EDX,0x2\nJNS 0x00407ca7\nMOV EDI,0xfffff894\nSUB EDI,ECX\nMOV ECX,EAX\nNEG ECX\nADD EAX,0x64\nCMP EBP,EDI\nCMOVL EAX,ECX\nJMP 0x00407ca7\nMOV AL,0x58\nJMP 0x00407978\nMOV AL,0x63\nJMP 0x00407978\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0xc]\nJMP 0x00407948\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x8]\nMOV EDX,0x2\nCMP R13D,0x2d\nMOV dword ptr [RSP + 0x14],R12D\nMOV qword ptr [RSP + 0x18],RDI\nJZ 0x00407ca7\nCMP R13D,0x30\nJZ 0x00407ca7\nMOV R13D,0x5f\nJMP 0x00407ca7\nMOV AL,0x78\nXOR EDX,EDX\nJMP 0x00407cef\nMOV RAX,qword ptr [RSP + 0x30]\nMOVSXD RCX,dword ptr [RAX + 0x14]\nIMUL RAX,RCX,0x51eb851f\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x25\nADD EAX,EDX\nIMUL EDX,EAX,0x64\nMOV EAX,ECX\nSUB EAX,EDX\nMOV EDX,0x2\nMOV dword ptr [RSP + 0x14],R12D\nMOV qword ptr [RSP + 0x18],RDI\nJNS 0x00407ca7\nMOV ESI,EAX\nNEG ESI\nADD EAX,0x64\nCMP ECX,0xfffff894\nCMOVL EAX,ESI\nJMP 0x00407ca7\nMOV RAX,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RAX + 0x14]\nMOV EDX,0xfffff894\nSUB EDX,ECX\nCMP EAX,EDX\nSETL DIL\nLEA EAX,[0x76c + RCX + RAX*0x1]\nMOV qword ptr [RSP + 0x38],RAX\nMOV R11D,0x4\nMOV dword ptr [RSP + 0x2c],0x0\nXOR R12D,R12D\nJMP 0x00407cbf\nMOVSXD RAX,EBP\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD EAX,ECX\nMOV ECX,EAX\nSAR ECX,0x2\nSHR EAX,0x1f\nLEA EAX,[RCX + RAX*0x1 + 0x1]\nMOV EDX,0x2\nJMP 0x00407ca7\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP EAX,0x1\nMOV EBP,0x1\nCMOVA EBP,EAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP RBP,RCX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x00407a77\nCMP EAX,0x2\nJC 0x00406d99\nMOVSXD R14,R14D\nDEC R14\nCMP R13D,0x30\nJNZ 0x00406d7b\nMOV ESI,0x30\nJMP 0x00406d80\nXOR R9D,R9D\nMOV R15,0x100000000\nADD R8,RBP\nJMP 0x0040834d\nTEST SIL,SIL\nJZ 0x00407a94\nMOV R12B,0x1\nXOR EDX,EDX\nMOV AL,0x41\nXOR R11D,R11D\nJMP 0x00407cef\nTEST SIL,SIL\nJZ 0x00407aa8\nMOV R12B,0x1\nXOR EDX,EDX\nMOV AL,0x42\nXOR R11D,R11D\nJMP 0x00407cef\nMOV EBP,0x40d6d0\nJMP 0x00407ac0\nMOV EBP,0x40d6d9\nXOR EDI,EDI\nMOV dword ptr [RSP + 0x14],R12D\nTEST R12B,R12B\nSETNZ DIL\nMOV EAX,dword ptr [0x4f0 + RSP]\nMOV dword ptr [RSP],EAX\nXOR R15D,R15D\nXOR ESI,ESI\nMOV RDX,-0x1\nMOV RCX,RBP\nMOV R8,qword ptr [RSP + 0x30]\nMOV R12,R9\nMOV R9,qword ptr [0x80 + RSP]\nCALL 0x00406bc0\nMOV R9,R12\nMOV R8,qword ptr [RSP + 0x20]\nTEST R14D,R14D\nCMOVNS R15D,R14D\nCMP RAX,R15\nMOV RCX,RAX\nCMOVC RCX,R15\nMOV R12,qword ptr [RSP + 0x48]\nSUB R12,R8\nCMP RCX,R12\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x00407b4d\nCMP RAX,R15\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x50],RCX\nJNC 0x00407b62\nMOVSXD RCX,R14D\nSUB RCX,RAX\nCMP R13D,0x30\nJNZ 0x00407b6e\nMOV ESI,0x30\nJMP 0x00407b73\nXOR R9D,R9D\nMOV R15,0x100000000\nADD R8,RCX\nJMP 0x0040834d\nMOV R15,0x100000000\nJMP 0x00407b94\nMOV ESI,0x20\nMOV RDI,R9\nMOV R13,RCX\nMOV RDX,RCX\nMOV R14,R9\nCALL 0x00401df0\nMOV R15,0x100000000\nADD R14,R13\nMOV R9,R14\nXOR EDI,EDI\nCMP byte ptr [RSP + 0x14],0x0\nSETNZ DIL\nMOV EAX,dword ptr [0x4f0 + RSP]\nMOV dword ptr [RSP],EAX\nMOV RSI,R9\nMOV RDX,R12\nMOV RCX,RBP\nMOV R8,qword ptr [RSP + 0x30]\nMOV RBP,R9\nMOV R9,qword ptr [0x80 + RSP]\nCALL 0x00406bc0\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,RBP\nMOV R8,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x50]\nADD R8,RCX\nJMP 0x0040834d\nTEST SIL,SIL\nJZ 0x00407be9\nMOV R12B,0x1\nXOR EDX,EDX\nMOV AL,0x61\nXOR R11D,R11D\nJMP 0x00407cef\nXOR EDX,EDX\nMOV AL,0x43\nXOR R11D,R11D\nJMP 0x00407cef\nXOR EDX,EDX\nMOV AL,0x59\nXOR R11D,R11D\nJMP 0x00407cef\nMOV R15,0x100000000\nMOV EAX,dword ptr [RSP + 0x18]\nTEST AL,AL\nJNZ 0x004081ba\nJMP 0x004081cf\nMOV R15,0x100000000\nJMP 0x00408217\nMOV R15,0x100000000\nJMP 0x00408248\nXOR R11D,R11D\nMOV EAX,0xe\nJMP 0x00406d4d\nTEST ECX,ECX\nJZ 0x00406d1e\nSHR ESI,0x1f\nMOV qword ptr [RSP + 0x58],RSI\nIMUL EBP,EBP,0x2710\nIMUL EAX,R11D,0x64\nADD EBP,ECX\nADD EBP,EAX\nMOV qword ptr [RSP + 0x38],RBP\nMOV R11D,0x9\nMOV dword ptr [RSP + 0x2c],0x14\nJMP 0x00406d48\nMOV R14D,0x9\nMOV EAX,dword ptr [0x4f0 + RSP]\nMOV EDX,0x9\nJMP 0x00407ca7\nMOV EAX,dword ptr [0x4f0 + RSP]\nMOV EDX,R14D\nMOV EDI,EAX\nSHR EDI,0x1f\nMOV dword ptr [RSP + 0x2c],0x0\nXOR R12D,R12D\nMOV qword ptr [RSP + 0x38],RAX\nMOV R11D,EDX\nMOV EAX,EDI\nAND AL,0x1\nMOV ECX,R10D\nCMP R10D,0x4f\nMOV R10,RDI\nJNZ 0x00407dc0\nTEST AL,AL\nJNZ 0x00407dc0\nMOV qword ptr [RSP + 0x58],R10\nXOR EDX,EDX\nMOV RAX,qword ptr [RSP + 0x18]\nMOV R10D,ECX\nMOV R12D,dword ptr [RSP + 0x14]\nMOV qword ptr [RSP + 0x50],RDX\nMOV dword ptr [RSP + 0x18],R11D\nMOV R15,R9\nMOV word ptr [RSP + 0x63],0x2520\nTEST R10D,R10D\nLEA RCX,[RSP + 0x65]\nJZ 0x00407d17\nMOV byte ptr [RSP + 0x65],R10B\nLEA RCX,[RSP + 0x66]\nMOV byte ptr [RCX],AL\nMOV byte ptr [RCX + 0x1],0x0\nLEA RDI,[0xb0 + RSP]\nLEA RDX,[RSP + 0x63]\nMOV ESI,0x400\nMOV RCX,qword ptr [RSP + 0x30]\nCALL 0x00402040\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00407ee1\nMOV dword ptr [RSP + 0x14],R12D\nDEC RBP\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP RBP,RAX\nMOV R12,RBP\nCMOVC R12,RAX\nMOV RCX,qword ptr [RSP + 0x48]\nMOV R8,qword ptr [RSP + 0x20]\nSUB RCX,R8\nCMP R12,RCX\nMOV ECX,dword ptr [RSP + 0x18]\nJNC 0x0040836e\nMOV RDI,R15\nTEST RDI,RDI\nJZ 0x00407f78\nCMP RBP,RAX\nSETNC AL\nTEST ECX,ECX\nMOV R15,0x100000000\nJNZ 0x00408024\nTEST AL,AL\nJNZ 0x00408024\nMOVSXD R14,R14D\nSUB R14,RBP\nCMP R13D,0x30\nJNZ 0x00408004\nMOV ESI,0x30\nJMP 0x00408009\nMOV RSI,qword ptr [RSP + 0x38]\nMOV ECX,dword ptr [RSP + 0x2c]\nMOV EDX,ESI\nNEG EDX\nTEST AL,AL\nCMOVZ EDX,ESI\nLEA RBP,[0xa7 + RSP]\nNOP word ptr [RAX + RAX*0x1]\nTEST CL,0x1\nJZ 0x00407dec\nMOV byte ptr [RBP + -0x1],0x3a\nDEC RBP\nSAR ECX,1\nMOV EAX,EDX\nMOV EDI,0xcccccccd\nIMUL RDI,RAX\nSHR RDI,0x23\nLEA EAX,[RDI + RDI*0x1]\nLEA EAX,[RAX + RAX*0x4]\nMOV ESI,EDX\nSUB ESI,EAX\nOR SIL,0x30\nMOV byte ptr [RBP + -0x1],SIL\nDEC RBP\nCMP EDX,0x9\nMOV EDX,EDI\nJA 0x00407de0\nTEST ECX,ECX\nMOV EDX,EDI\nJNZ 0x00407de0\nCMP R11D,R14D\nCMOVL R11D,R14D\nTEST R12B,R12B\nJZ 0x00407e2e\nMOV R12B,0x2b\nTEST R10B,0x1\nMOV R15B,0x2d\nJNZ 0x00407e3a\nMOV R15D,R12D\nCMP R13D,0x2d\nMOV qword ptr [RSP + 0x58],R10\nMOV qword ptr [RSP + 0x38],RDI\nMOV dword ptr [RSP + 0x2c],ECX\nJNZ 0x00407eee\nTEST R15B,R15B\nJZ 0x00408283\nMOV R12D,R15D\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP EAX,0x1\nMOV R15D,0x1\nCMOVA R15D,EAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP R15,RCX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x004080f6\nCMP EAX,0x2\nJC 0x0040827a\nTEST R11D,R11D\nJNZ 0x0040827a\nMOVSXD RAX,R14D\nMOV qword ptr [RSP + 0x68],RAX\nLEA RDX,[RAX + -0x1]\nMOV dword ptr [RSP + 0x18],R11D\nMOV ESI,0x20\nMOV RDI,R9\nMOV qword ptr [RSP + 0x40],R9\nCALL 0x00401df0\nMOV R11D,dword ptr [RSP + 0x18]\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x68]\nLEA R9,[R9 + RAX*0x1 + -0x1]\nJMP 0x0040827a\nMOV R8,qword ptr [RSP + 0x20]\nMOV R9,R15\nJMP 0x00408343\nMOV dword ptr [RSP + 0x18],R11D\nMOVSXD RSI,R11D\nMOV RAX,RBP\nLEA RDX,[0xa7 + RSP]\nSUB RAX,RDX\nMOV EDX,R15D\nNEG DL\nSBB R12,R12\nADD R12,RAX\nADD R12,RSI\nTEST R12D,R12D\nJLE 0x00407f8d\nMOV RAX,qword ptr [RSP + 0x48]\nSUB RAX,R8\nCMP R13D,0x5f\nMOV byte ptr [RSP + 0x50],R15B\nJNZ 0x00408084\nMOVSXD R15,R12D\nCMP R15,RAX\nMOV R11D,dword ptr [RSP + 0x18]\nJNC 0x0040836e\nXOR ECX,ECX\nTEST R9,R9\nJZ 0x00408108\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R15\nMOV qword ptr [RSP + 0x40],R9\nCALL 0x00401df0\nXOR ECX,ECX\nMOV R11D,dword ptr [RSP + 0x18]\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,R15\nJMP 0x0040810b\nXOR R9D,R9D\nMOV R15,0x100000000\nADD R8,R12\nJMP 0x0040834d\nTEST R15B,R15B\nJZ 0x004080fe\nMOV R12D,R15D\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP EAX,0x1\nMOV R15D,0x1\nCMOVA R15D,EAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP R15,RCX\nMOV R11D,dword ptr [RSP + 0x18]\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x0040817d\nCMP EAX,0x2\nJC 0x0040827a\nTEST R11D,R11D\nJNZ 0x0040827a\nMOVSXD RAX,R14D\nDEC RAX\nCMP R13D,0x30\nMOV qword ptr [RSP + 0x40],R9\nMOV qword ptr [RSP + 0x68],RAX\nJNZ 0x00408251\nMOV ESI,0x30\nJMP 0x00408256\nMOV ESI,0x20\nMOV RDX,R14\nMOV R15,RDI\nCALL 0x00401df0\nADD R15,R14\nMOV RDI,R15\nMOV R15,0x100000000\nMOV RAX,qword ptr [RSP + 0x50]\nTEST AL,0x1\nJNZ 0x00408049\nTEST byte ptr [RSP + 0x14],0x1\nJNZ 0x0040805e\nLEA RSI,[0xb1 + RSP]\nMOV RDX,RBP\nMOV R14,RDI\nCALL 0x00401ed0\nJMP 0x00408071\nLEA RSI,[0xb1 + RSP]\nMOV RDX,RBP\nMOV R14,RDI\nCALL 0x00408390\nJMP 0x00408071\nLEA RSI,[0xb1 + RSP]\nMOV RDX,RBP\nMOV R14,RDI\nCALL 0x004083d0\nMOV R9,R14\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,RBP\nADD R8,R12\nJMP 0x0040834d\nCMP RSI,RAX\nMOV R11D,dword ptr [RSP + 0x18]\nJNC 0x0040836e\nCMP byte ptr [RSP + 0x50],0x0\nJZ 0x00406c78\nXOR ECX,ECX\nTEST R14D,R14D\nCMOVNS ECX,R14D\nCMP ECX,0x1\nMOV R15D,0x1\nCMOVA R15D,ECX\nCMP R15,RAX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x00408185\nCMP ECX,0x2\nJC 0x00406c6b\nTEST R11D,R11D\nJNZ 0x00406c6b\nMOVSXD R14,R14D\nDEC R14\nCMP R13D,0x30\nMOV qword ptr [RSP + 0x40],R9\nJNZ 0x00406c49\nMOV ESI,0x30\nJMP 0x00406c4e\nXOR R9D,R9D\nJMP 0x00408280\nMOV R11D,dword ptr [RSP + 0x18]\nJMP 0x00408283\nXOR R9D,R9D\nADD R8,R15\nSUB R14D,R12D\nCMOVG ECX,R14D\nCMP byte ptr [RSP + 0x50],0x0\nJZ 0x00408175\nCMP ECX,0x1\nMOV R15D,0x1\nCMOVA R15D,ECX\nMOV RAX,qword ptr [RSP + 0x48]\nSUB RAX,R8\nCMP R15,RAX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x0040818d\nTEST R11D,R11D\nJNZ 0x00406ce6\nCMP ECX,0x2\nJC 0x00406ce6\nMOV R14D,ECX\nDEC R14\nCMP R13D,0x30\nMOV qword ptr [RSP + 0x20],R8\nMOV qword ptr [RSP + 0x40],RCX\nJNZ 0x00406cbe\nMOV ESI,0x30\nJMP 0x00406cc3\nMOV R14D,ECX\nJMP 0x00408283\nXOR R9D,R9D\nJMP 0x00408280\nXOR R9D,R9D\nJMP 0x00406c75\nXOR R9D,R9D\nJMP 0x00406cf0\nMOV ESI,0x20\nMOV RDX,R14\nCALL 0x00401df0\nMOV RDI,R15\nMOV R15,0x100000000\nMOV EAX,dword ptr [RSP + 0x18]\nADD RDI,R14\nTEST AL,AL\nJZ 0x004081cf\nMOV RSI,qword ptr [RSP + 0x78]\nMOV RDX,R12\nMOV R14,RDI\nCALL 0x00408390\nJMP 0x00406d0b\nCMP byte ptr [RSP + 0x14],0x0\nJZ 0x00406cfb\nMOV RSI,qword ptr [RSP + 0x78]\nMOV RDX,R12\nMOV R14,RDI\nCALL 0x004083d0\nJMP 0x00406d0b\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nMOV R15,R9\nCALL 0x00401df0\nMOV R9,R15\nMOV R8,qword ptr [RSP + 0x20]\nMOV R15,0x100000000\nADD R9,R14\nMOV byte ptr [R9],0xa\nJMP 0x00406da8\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nMOV R15,R9\nCALL 0x00401df0\nMOV R9,R15\nMOV R8,qword ptr [RSP + 0x20]\nMOV R15,0x100000000\nADD R9,R14\nMOV byte ptr [R9],0x9\nJMP 0x00406da8\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,qword ptr [RSP + 0x68]\nCALL 0x00401df0\nMOV RAX,qword ptr [RSP + 0x68]\nMOV R11D,dword ptr [RSP + 0x18]\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,RAX\nMOV byte ptr [R9],R12B\nINC R9\nADD R8,R15\nLEA R12,[0xa7 + RSP]\nSUB R12,RBP\nXOR EAX,EAX\nTEST R14D,R14D\nCMOVNS EAX,R14D\nCMP R12,RAX\nMOV R15,R12\nCMOVC R15,RAX\nMOV RCX,qword ptr [RSP + 0x48]\nSUB RCX,R8\nCMP R15,RCX\nJNC 0x0040836e\nTEST R9,R9\nJZ 0x004082de\nCMP R12,RAX\nSETNC AL\nTEST R11D,R11D\nJNZ 0x00408301\nTEST AL,AL\nJNZ 0x00408301\nMOVSXD R14,R14D\nSUB R14,R12\nCMP R13D,0x30\nMOV qword ptr [RSP + 0x20],R8\nJNZ 0x004082e3\nMOV ESI,0x30\nJMP 0x004082e8\nXOR R9D,R9D\nJMP 0x00408340\nMOV ESI,0x20\nMOV RDI,R9\nMOV RDX,R14\nMOV R13,R9\nCALL 0x00401df0\nMOV R9,R13\nMOV R8,qword ptr [RSP + 0x20]\nADD R9,R14\nCMP byte ptr [RSP + 0x14],0x0\nJZ 0x0040831e\nMOV RDI,R9\nMOV RSI,RBP\nMOV RDX,R12\nMOV R14,R8\nMOV RBP,R9\nCALL 0x004083d0\nJMP 0x00408332\nMOV RDI,R9\nMOV RSI,RBP\nMOV RDX,R12\nMOV R14,R8\nMOV RBP,R9\nCALL 0x00401ed0\nMOV R9,RBP\nMOV R8,R14\nADD R9,R12\nNOP dword ptr [RAX + RAX*0x1]\nADD R8,R15\nMOV R15,0x100000000\nCMP byte ptr [RBX + 0x1],0x0\nLEA RBX,[RBX + 0x1]\nJNZ 0x00406dd0\nCMP qword ptr [RSP + 0x48],0x0\nJZ 0x00408371\nTEST R9,R9\nJZ 0x00408371\nMOV byte ptr [R9],0x0\nJMP 0x00408371\nXOR R8D,R8D\nMOV RAX,R8\nADD RSP,0x4b8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p326
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec b8 04 00 00\n4c 89 8c 24 80 00 00 00\n48 89 cb\n48 89 54 24 48\n49 89 f1\n89 bc 24 8c 00 00 00\n41 8b 40 08\n4c 89 44 24 30\n49 8b 48 30\n48 85 c9\nba 29 d8 40 00\n48 0f 45 d1\n48 89 54 24 78\n8d 48 f4\n85 c0\nba 0c 00 00 00\n0f 45 d0\n83 f8 0c\n0f 4f d1\n89 54 24 74\n45 31 c0\n80 3b 00\n0f 84 2f 17 00 00\n49 bf 00 00 00 00 01 00 00 00\n48 89 44 24 38\n48 89 44 24 58\n89 44 24 2c\ne9 87 01 00 00\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\ne8 97 b1 ff ff\n44 8b 5c 24 18\n4c 8b 4c 24 40\n4c 8b 44 24 20\n4d 01 f1\n8a 44 24 50\n41 88 01\n49 ff c1\n4d 01 f8\n45 31 f6\n4d 85 c9\n4d 63 e4\n74 30\nbe 30 00 00 00\n4c 89 cf\n4c 89 e2\n4c 89 44 24 20\n4d 89 cf\ne8 55 b1 ff ff\n44 8b 5c 24 18\n4d 89 f9\n4c 8b 44 24 20\n4d 01 e1\n4d 01 e0\ne9 d0 15 00 00\n45 31 c9\n4d 01 e0\ne9 c5 15 00 00\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\n4d 89 cc\ne8 1f b1 ff ff\n48 8b 4c 24 40\n44 8b 5c 24 18\n4d 89 e1\n4c 8b 44 24 20\n4d 01 f1\n8a 44 24 50\n41 88 01\n49 ff c1\n4d 01 f8\n41 89 ce\ne9 88 15 00 00\n48 8b 74 24 78\n4c 89 e2\n49 89 fe\ne8 c5 b1 ff ff\n4d 89 f1\n4c 8b 44 24 20\n4d 01 e1\n49 01 e8\ne9 2f 16 00 00\n45 85 db\n0f 84 8c 00 00 00\nc1 ee 1f\n48 89 74 24 58\n6b ed 64\n44 01 dd\n48 89 6c 24 38\n41 bb 06 00 00 00\nc7 44 24 2c 04 00 00 00\nb8 20 00 00 00\n89 c2\n80 e2 3f\n80 fa 0e\n44 89 64 24 14\n0f 84 a0 03 00 00\n48 89 7c 24 18\n41 b4 01\n80 fa 20\n48 8b 7c 24 58\n0f 84 49 0f 00 00\ne9 4f 02 00 00\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\n4d 89 cf\ne8 62 b0 ff ff\n4d 01 f7\n4c 8b 44 24 20\n4d 89 f9\n49 bf 00 00 00 00 01 00 00 00\n8a 03\n41 88 01\n49 ff c1\n49 01 e8\ne9 9a 15 00 00\n48 89 6c 24 38\nc1 ee 1f\n48 89 74 24 58\n41 bb 03 00 00 00\ne9 14 03 00 00\n8a 0b\n80 f9 25\n75 69\n31 f6\n8b 84 24 8c 00 00 00\n41 88 c4\n45 31 ed\n48 ff c3\neb 0b\n48 ff c3\n41 89 c5\n0f be 03\n83 f8 2f\n7e 22\n83 f8 30\n74 ed\n83 f8 5f\n74 e8\n83 f8 5e\n75 63\n41 b4 01\n48 ff c3\neb e1\n83 f8 2d\n74 cb\n83 f8 23\n75 46\n40 b6 01\n48 ff c3\neb c4\n48 8b 54 24 48\n4c 29 c2\nb8 01 00 00 00\n48 83 fa 02\n0f 82 69 01 00 00\n4d 85 c9\n0f 84 58 01 00 00\n41 88 09\n49 ff c1\ne9 50 01 00 00\n83 c0 d0\n41 be ff ff ff ff\n83 f8 09\n77 3a\n31 c0\n41 be ff ff ff 7f\n3d cc cc cc 0c\n7f 19\n0f be 0b\n83 c1 d0\n3d cc cc cc 0c\n75 05\n83 f9 07\n7f 07\n8d 04 80\n44 8d 34 41\n0f be 43 01\n48 ff c3\n83 c0 d0\n83 f8 0a\n44 89 f0\n72 c8\n44 0f be 13\n41 83 fa 4f\n74 06\n41 83 fa 45\n75 05\n48 ff c3\neb 03\n45 31 d2\n0f be 3b\n83 ff 7a\n4c 89 44 24 20\n0f 87 0b 02 00 00\n31 d2\nb0 72\nbd e2 d6 40 00\n45 31 db\nff 24 fd d8 d2 40 00\n44 89 64 24 14\n45 31 db\n41 83 fa 45\n0f 84 fa 01 00 00\n48 89 7c 24 18\n44 89 54 24 38\n4c 89 4c 24 40\n48 8b 54 24 30\n8b 42 14\n8b 72 18\n89 c1\nc1 f9 1f\n81 e1 90 01 00 00\n44 8d 64 08 9c\n44 8b 7a 1c\n44 89 ff\ne8 d4 14 00 00\n89 c5\n85 ed\n0f 88 f8 08 00 00\nb8 6d 01 00 00\n41 f6 c4 03\n75 42\n49 63 c4\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 f9 25\n48 89 c2\n48 c1 ea 3f\n01 d1\n6b c9 64\n48 c1 f8 27\n01 d0\n69 c0 90 01 00 00\n31 d2\n41 39 c4\n0f 94 c2\n81 c2 6d 01 00 00\n41 39 cc\nb8 6e 01 00 00\n0f 44 c2\n41 29 c7\n48 8b 44 24 30\n8b 70 18\n44 89 ff\ne8 6a 14 00 00\n89 c1\nc1 e9 1f\n83 f1 01\n85 c0\n0f 49 e8\ne9 ed 08 00 00\n45 31 c9\n49 ff c0\n31 c0\n85 c0\nb9 04 00 00 00\n0f 44 c1\n83 c8 04\n83 f8 04\n0f 84 77 13 00 00\ne9 93 13 00 00\n40 84 f6\n74 03\n41 b4 01\n45 31 db\n45 85 d2\n0f 84 48 08 00 00\n44 89 64 24 14\ne9 07 01 00 00\n44 89 64 24 14\n48 ff cb\ne9 eb 00 00 00\n45 31 db\n45 85 d2\n0f 84 18 0a 00 00\n44 89 64 24 14\ne9 e4 00 00 00\nba 01 00 00 00\neb 10\n48 ff c2\n0f b6 04 13\n3c 3a\n74 f5\n3c 7a\n0f 85 a9 00 00 00\n48 01 d3\n48 8b 44 24 30\n83 78 20 00\n0f 88 f8 12 00 00\n48 83 fa 03\n0f 87 e7 0b 00 00\n48 8b 44 24 30\n48 63 70 28\n48 69 c6 89 88 88 88\n48 c1 e8 20\n01 f0\n89 c1\nc1 e9 1f\nc1 f8 05\n01 c8\n48 69 ee c5 b3 a2 91\n48 c1 ed 20\n01 f5\n89 e9\nc1 e9 1f\nc1 fd 0b\n01 cd\n4c 63 d8\n49 69 cb 89 88 88 88\n48 c1 e9 20\n44 01 d9\n89 c8\nc1 e8 1f\nc1 f9 05\n01 c1\n6b c9 3c\n41 6b c3 3c\n41 29 cb\n89 f1\n29 c1\nff 24 d5 b0 d6 40 00\nc1 ee 1f\n48 89 74 24 58\n6b ed 64\n44 01 dd\n48 89 6c 24 38\n41 bb 05 00 00 00\nc7 44 24 2c 00 00 00 00\ne9 5c fc ff ff\n44 89 64 24 14\n45 31 db\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 8d 63 01\n31 ed\n66 2e 0f 1f 84 00 00 00 00 00\n4c 01 fd\n41 80 7c 24 ff 25\n4d 8d 64 24 ff\n75 f0\n48 c1 fd 20\n45 85 f6\nb8 00 00 00 00\n41 0f 49 c6\n48 39 c5\n49 89 ef\n4c 0f 42 f8\n48 8b 4c 24 48\n4c 29 c1\n49 39 cf\n0f 83 23 12 00 00\n4d 85 c9\n74 22\n48 39 c5\n0f 93 c0\n45 85 db\n75 38\n84 c0\n75 34\n4d 63 f6\n49 29 ee\n41 83 fd 30\n75 0f\nbe 30 00 00 00\neb 0d\n45 31 c9\ne9 c6 11 00 00\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\n4d 89 cd\ne8 63 ac ff ff\n4d 89 e9\n4d 01 f1\nf6 44 24 14 01\n75 13\n4c 89 cf\n4c 89 e6\n48 89 ea\n4d 89 ce\ne8 25 ad ff ff\neb 11\n4c 89 cf\n4c 89 e6\n48 89 ea\n4d 89 ce\ne8 12 12 00 00\n49 01 ee\n4c 8b 44 24 20\n4d 89 f1\ne9 72 11 00 00\n45 31 db\n45 85 d2\n0f 84 b2 08 00 00\n44 89 64 24 14\ne9 1c ff ff ff\n45 31 db\n45 85 d2\n0f 84 b0 08 00 00\n44 89 64 24 14\ne9 06 ff ff ff\n41 83 fa 45\n0f 84 f1 09 00 00\n41 83 fa 4f\n44 89 64 24 14\n0f 84 de fe ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n48 63 40 14\n48 3d 94 f8 ff ff\n40 0f 9c c7\n0f 9f c1\n48 69 f0 1f 85 eb 51\n48 89 f2\n48 c1 ea 3f\n48 c1 fe 25\n01 d6\n6b d6 64\n39 d0\n0f 98 c0\n20 c8\n0f b6 c0\n29 c6\n83 c6 13\n48 89 74 24 38\ne9 be 03 00 00\n45 31 db\n45 85 d2\n0f 84 4a 08 00 00\n44 89 64 24 14\ne9 8c fe ff ff\n45 31 db\n45 85 d2\n0f 84 3b 08 00 00\n44 89 64 24 14\ne9 76 fe ff ff\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 64 fe ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 40 08\nba 02 00 00 00\ne9 f4 09 00 00\nba 02 00 00 00\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 36 fe ff ff\n48 89 7c 24 18\n8b 44 24 74\ne9 cf 09 00 00\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 16 fe ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 40 04\nba 02 00 00 00\ne9 a6 09 00 00\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 ed fd ff ff\n41 83 fe ff\n48 89 7c 24 18\n0f 84 67 09 00 00\n41 83 fe 08\n0f 8f 71 09 00 00\nb9 09 00 00 00\n8b 84 24 f0 04 00 00\n0f 1f 84 00 00 00 00 00\n48 98\n48 69 c0 67 66 66 66\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 22\n01 d0\nff c9\n41 39 ce\n75 e3\ne9 42 09 00 00\nb2 01\n45 31 db\n40 84 f6\n74 06\n41 bc 00 00 00 00\n74 02\nb2 01\nb0 70\ne9 72 09 00 00\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 71 fd ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 00\nba 02 00 00 00\ne9 02 09 00 00\nbd e8 d6 40 00\ne9 11 07 00 00\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 3f fd ff ff\n48 89 7c 24 18\n48 8b 4c 24 30\n8b 41 1c\n83 c0 07\n2b 41 18\n48 98\neb 54\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 16 fd ff ff\n48 89 7c 24 18\n48 8b 4c 24 30\n8b 41 18\n8b 49 1c\n8d 50 06\n48 63 d2\n48 69 f2 93 24 49 92\n48 c1 ee 20\n8d 44 06 06\n89 c6\nc1 ee 1f\nc1 f8 02\n01 f0\n8d 34 c5 00 00 00 00\n29 c6\n29 f2\n83 c1 07\n29 d1\n48 63 c1\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c8\n89 c1\nc1 e9 1f\nc1 f8 02\n01 c8\nba 02 00 00 00\ne9 5a 08 00 00\n45 31 db\n41 83 fa 4f\n0f 85 d4 04 00 00\n44 89 64 24 14\ne9 9c fc ff ff\n41 83 fa 45\n0f 84 93 07 00 00\n41 83 fa 4f\n44 89 64 24 14\n0f 84 74 fc ff ff\n48 8b 44 24 30\n8b 70 14\n81 fe 94 f8 ff ff\n0f 9c c0\n81 c6 6c 07 00 00\n45 31 e4\n41 bb 04 00 00 00\n41 88 c2\n31 c9\ne9 22 09 00 00\n89 74 24 18\n44 89 64 24 14\n48 8b 7c 24 78\n4d 89 cf\ne8 73 a8 ff ff\n4c 89 ff\n4c 8b 44 24 20\n49 89 c4\n31 c0\n45 85 f6\n41 0f 49 c6\n49 39 c4\n4c 89 e5\n48 0f 42 e8\n48 8b 4c 24 48\n4c 29 c1\n48 39 cd\n0f 83 82 0e 00 00\n48 85 ff\n0f 84 82 05 00 00\n49 39 c4\n0f 83 0f 07 00 00\n4d 63 f6\n4d 29 e6\n41 83 fd 30\n0f 85 87 0c 00 00\nbe 30 00 00 00\ne9 82 0c 00 00\n45 31 db\n45 85 d2\n0f 84 bd 06 00 00\n44 89 64 24 14\ne9 d2 fb ff ff\n45 31 db\n41 83 fa 4f\n0f 85 f7 03 00 00\n44 89 64 24 14\ne9 bb fb ff ff\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 a9 fb ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 40 0c\nba 02 00 00 00\ne9 39 07 00 00\n45 31 db\n41 83 fa 45\n0f 85 bb 03 00 00\n44 89 64 24 14\ne9 7b fb ff ff\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 69 fb ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 40 1c\n83 f8 ff\n40 0f 9c c7\nff c0\n48 89 44 24 38\n41 bb 03 00 00 00\ne9 37 04 00 00\n45 31 db\n41 83 fa 45\n0f 85 76 03 00 00\n44 89 64 24 14\ne9 2c fb ff ff\n45 31 db\n41 83 fa 45\n8b 44 24 74\n0f 85 63 03 00 00\n44 89 64 24 14\ne9 11 fb ff ff\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 ff fa ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 40 10\n83 f8 ff\n40 0f 9c c7\nff c0\n48 89 44 24 38\n41 bb 02 00 00 00\ne9 cd 03 00 00\n31 c0\n45 85 f6\n41 0f 49 c6\n83 f8 01\nbd 01 00 00 00\n0f 47 e8\n48 8b 4c 24 48\n4c 29 c1\n48 39 cd\n0f 83 22 0d 00 00\n4d 85 c9\n0f 84 22 04 00 00\n83 f8 02\n0f 82 ca 05 00 00\n4d 63 f6\n49 ff ce\n41 83 fd 30\n0f 85 81 0b 00 00\nbe 30 00 00 00\ne9 7c 0b 00 00\n44 89 64 24 14\n4d 89 cf\n48 8b 4c 24 30\n48 8b 41 30\n48 89 84 24 e0 00 00 00\n0f 10 01\n0f 10 49 10\n0f 10 51 20\n0f 29 94 24 d0 00 00 00\n0f 29 8c 24 c0 00 00 00\n0f 29 84 24 b0 00 00 00\n48 8d b4 24 b0 00 00 00\n48 8b bc 24 80 00 00 00\ne8 47 23 00 00\n49 89 c0\n48 c1 e8 3f\n49 89 c2\n4c 89 c6\n48 8d ac 24 a7 00 00 00\n66 90\n48 ba 67 66 66 66 66 66 66 66\n48 89 f0\n48 f7 ea\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 02\n8d 3c 02\n01 ff\n8d 3c bf\n89 f1\n29 f9\n48 01 c2\n89 c8\nf7 d8\n4d 85 c0\n0f 49 c1\n83 c0 30\n88 45 ff\n48 ff cd\n48 83 c6 09\n48 83 fe 12\n48 89 d6\n77 b6\n41 bb 01 00 00 00\n45 31 e4\n4c 8b 44 24 20\n4d 89 f9\n48 8b 7c 24 38\n8b 4c 24 2c\ne9 d6 06 00 00\n31 c0\n45 85 f6\n41 0f 49 c6\n83 f8 01\nbd 01 00 00 00\n0f 47 e8\n48 8b 4c 24 48\n4c 29 c1\n48 39 cd\n0f 83 00 0c 00 00\n4d 85 c9\n0f 84 00 03 00 00\n83 f8 02\n0f 82 b7 04 00 00\n4d 63 f6\n49 ff ce\n41 83 fd 30\n0f 85 90 0a 00 00\nbe 30 00 00 00\ne9 8b 0a 00 00\n44 89 64 24 14\n48 89 7c 24 18\n48 8b 44 24 30\n8b 48 18\n8d 41 06\n48 98\n48 69 d0 93 24 49 92\n48 c1 ea 20\n8d 4c 0a 06\n89 ca\nc1 ea 1f\nc1 f9 02\n01 d1\n8d 14 cd 00 00 00 00\n29 ca\n29 d0\nff c0\nba 01 00 00 00\ne9 c6 04 00 00\n45 31 db\n41 83 fa 45\n44 89 64 24 14\n0f 84 0d f9 ff ff\n48 89 7c 24 18\n48 8b 44 24 30\n8b 40 18\nba 01 00 00 00\ne9 9d 04 00 00\n45 31 db\n41 83 fa 4f\n0f 85 5f 01 00 00\n44 89 64 24 14\ne9 df f8 ff ff\n41 83 fa 45\n0f 85 54 01 00 00\n31 d2\nb0 79\n45 31 db\ne9 b8 04 00 00\n89 f8\ne9 3a 01 00 00\n41 ff cc\nbf 6d 01 00 00\n41 f6 c4 03\n75 42\n49 63 c4\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 f9 25\n48 89 c2\n48 c1 ea 3f\n01 d1\n6b c9 64\n48 c1 f8 27\n01 d0\n69 c0 90 01 00 00\n31 d2\n41 39 c4\n0f 94 c2\n81 c2 6d 01 00 00\n41 39 cc\nbf 6e 01 00 00\n0f 44 fa\n44 01 ff\n48 8b 44 24 30\n8b 70 18\ne8 72 0b 00 00\n89 c5\nb9 ff ff ff ff\n4c 8b 44 24 20\n4c 8b 4c 24 40\n44 8b 54 24 38\n0f be 03\n83 f8 47\n0f 84 0d 01 00 00\n83 f8 67\n0f 85 3b 01 00 00\n48 8b 44 24 30\n48 63 68 14\n48 69 c5 1f 85 eb 51\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 25\n01 d0\n6b c0 64\n89 ea\n29 c2\n01 ca\n48 63 c2\n48 69 d0 1f 85 eb 51\n48 89 d7\n48 c1 ef 3f\n48 c1 fa 25\n01 fa\n6b d2 64\n29 d0\nba 02 00 00 00\n0f 89 91 03 00 00\nbf 94 f8 ff ff\n29 cf\n89 c1\nf7 d9\n83 c0 64\n39 fd\n0f 4c c1\ne9 79 03 00 00\nb0 58\neb 46\nb0 63\neb 42\n48 8b 44 24 30\n8b 40 0c\neb 08\n48 8b 44 24 30\n8b 40 08\nba 02 00 00 00\n41 83 fd 2d\n44 89 64 24 14\n48 89 7c 24 18\n0f 84 46 03 00 00\n41 83 fd 30\n0f 84 3c 03 00 00\n41 bd 5f 00 00 00\ne9 31 03 00 00\nb0 78\n31 d2\ne9 70 03 00 00\n48 8b 44 24 30\n48 63 48 14\n48 69 c1 1f 85 eb 51\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 25\n01 d0\n6b d0 64\n89 c8\n29 d0\nba 02 00 00 00\n44 89 64 24 14\n48 89 7c 24 18\n0f 89 ef 02 00 00\n89 c6\nf7 de\n83 c0 64\n81 f9 94 f8 ff ff\n0f 4c c6\ne9 da 02 00 00\n48 8b 44 24 30\n8b 40 14\nba 94 f8 ff ff\n29 ca\n39 d0\n40 0f 9c c7\n8d 84 01 6c 07 00 00\n48 89 44 24 38\n41 bb 04 00 00 00\nc7 44 24 2c 00 00 00 00\n45 31 e4\ne9 bb 02 00 00\n48 63 c5\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c8\n89 c1\nc1 f9 02\nc1 e8 1f\n8d 44 01 01\nba 02 00 00 00\ne9 7d 02 00 00\n31 c0\n45 85 f6\n41 0f 49 c6\n83 f8 01\nbd 01 00 00 00\n0f 47 e8\n48 8b 4c 24 48\n4c 29 c1\n48 39 cd\n0f 83 1f 09 00 00\n4d 85 c9\n74 23\n83 f8 02\n0f 82 3c f3 ff ff\n4d 63 f6\n49 ff ce\n41 83 fd 30\n0f 85 0e f3 ff ff\nbe 30 00 00 00\ne9 09 f3 ff ff\n45 31 c9\n49 bf 00 00 00 00 01 00 00 00\n49 01 e8\ne9 c1 08 00 00\n40 84 f6\n74 03\n41 b4 01\n31 d2\nb0 41\n45 31 db\ne9 4f 02 00 00\n40 84 f6\n74 03\n41 b4 01\n31 d2\nb0 42\n45 31 db\ne9 3b 02 00 00\nbd d0 d6 40 00\neb 05\nbd d9 d6 40 00\n31 ff\n44 89 64 24 14\n45 84 e4\n40 0f 95 c7\n8b 84 24 f0 04 00 00\n89 04 24\n45 31 ff\n31 f6\n48 c7 c2 ff ff ff ff\n48 89 e9\n4c 8b 44 24 30\n4d 89 cc\n4c 8b 8c 24 80 00 00 00\ne8 c4 f0 ff ff\n4d 89 e1\n4c 8b 44 24 20\n45 85 f6\n45 0f 49 fe\n4c 39 f8\n48 89 c1\n49 0f 42 cf\n4c 8b 64 24 48\n4d 29 c4\n4c 39 e1\n0f 83 48 08 00 00\n4d 85 c9\n74 22\n4c 39 f8\n48 89 44 24 18\n48 89 4c 24 50\n73 28\n49 63 ce\n48 29 c1\n41 83 fd 30\n75 28\nbe 30 00 00 00\neb 26\n45 31 c9\n49 bf 00 00 00 00 01 00 00 00\n49 01 c8\ne9 eb 07 00 00\n49 bf 00 00 00 00 01 00 00 00\neb 26\nbe 20 00 00 00\n4c 89 cf\n49 89 cd\n48 89 ca\n4d 89 ce\ne8 6c a2 ff ff\n49 bf 00 00 00 00 01 00 00 00\n4d 01 ee\n4d 89 f1\n31 ff\n80 7c 24 14 00\n40 0f 95 c7\n8b 84 24 f0 04 00 00\n89 04 24\n4c 89 ce\n4c 89 e2\n48 89 e9\n4c 8b 44 24 30\n4c 89 cd\n4c 8b 8c 24 80 00 00 00\ne8 f9 ef ff ff\n4c 8b 4c 24 18\n49 01 e9\n4c 8b 44 24 20\n48 8b 4c 24 50\n49 01 c8\ne9 6c 07 00 00\n40 84 f6\n74 03\n41 b4 01\n31 d2\nb0 61\n45 31 db\ne9 fa 00 00 00\n31 d2\nb0 43\n45 31 db\ne9 ee 00 00 00\n31 d2\nb0 59\n45 31 db\ne9 e2 00 00 00\n49 bf 00 00 00 00 01 00 00 00\n8b 44 24 18\n84 c0\n0f 85 97 05 00 00\ne9 a7 05 00 00\n49 bf 00 00 00 00 01 00 00 00\ne9 e0 05 00 00\n49 bf 00 00 00 00 01 00 00 00\ne9 02 06 00 00\n45 31 db\nb8 0e 00 00 00\ne9 fa f0 ff ff\n85 c9\n0f 84 c3 f0 ff ff\nc1 ee 1f\n48 89 74 24 58\n69 ed 10 27 00 00\n41 6b c3 64\n01 cd\n01 c5\n48 89 6c 24 38\n41 bb 09 00 00 00\nc7 44 24 2c 14 00 00 00\ne9 bf f0 ff ff\n41 be 09 00 00 00\n8b 84 24 f0 04 00 00\nba 09 00 00 00\neb 0a\n8b 84 24 f0 04 00 00\n44 89 f2\n89 c7\nc1 ef 1f\nc7 44 24 2c 00 00 00 00\n45 31 e4\n48 89 44 24 38\n41 89 d3\n89 f8\n24 01\n44 89 d1\n41 83 fa 4f\n49 89 fa\n0f 85 ed 00 00 00\n84 c0\n0f 85 e5 00 00 00\n4c 89 54 24 58\n31 d2\n48 8b 44 24 18\n41 89 ca\n44 8b 64 24 14\n48 89 54 24 50\n44 89 5c 24 18\n4d 89 cf\n66 c7 44 24 63 20 25\n45 85 d2\n48 8d 4c 24 65\n74 0a\n44 88 54 24 65\n48 8d 4c 24 66\n88 01\nc6 41 01 00\n48 8d bc 24 b0 00 00 00\n48 8d 54 24 63\nbe 00 04 00 00\n48 8b 4c 24 30\ne8 07 a3 ff ff\n48 89 c5\n48 85 ed\n0f 84 9c 01 00 00\n44 89 64 24 14\n48 ff cd\n31 c0\n45 85 f6\n41 0f 49 c6\n48 39 c5\n49 89 ec\n4c 0f 42 e0\n48 8b 4c 24 48\n4c 8b 44 24 20\n4c 29 c1\n49 39 cc\n8b 4c 24 18\n0f 83 f4 05 00 00\n4c 89 ff\n48 85 ff\n0f 84 f2 01 00 00\n48 39 c5\n0f 93 c0\n85 c9\n49 bf 00 00 00 00 01 00 00 00\n0f 85 86 02 00 00\n84 c0\n0f 85 7e 02 00 00\n4d 63 f6\n49 29 ee\n41 83 fd 30\n0f 85 4e 02 00 00\nbe 30 00 00 00\ne9 49 02 00 00\n48 8b 74 24 38\n8b 4c 24 2c\n89 f2\nf7 da\n84 c0\n0f 44 d6\n48 8d ac 24 a7 00 00 00\n66 0f 1f 44 00 00\nf6 c1 01\n74 07\nc6 45 ff 3a\n48 ff cd\nd1 f9\n89 d0\nbf cd cc cc cc\n48 0f af f8\n48 c1 ef 23\n8d 04 3f\n8d 04 80\n89 d6\n29 c6\n40 80 ce 30\n40 88 75 ff\n48 ff cd\n83 fa 09\n89 fa\n77 c7\n85 c9\n89 fa\n75 c1\n45 39 f3\n45 0f 4c de\n45 84 e4\n74 03\n41 b4 2b\n41 f6 c2 01\n41 b7 2d\n75 03\n45 89 e7\n41 83 fd 2d\n4c 89 54 24 58\n48 89 7c 24 38\n89 4c 24 2c\n0f 85 9c 00 00 00\n45 84 ff\n0f 84 28 04 00 00\n45 89 fc\n31 c0\n45 85 f6\n41 0f 49 c6\n83 f8 01\n41 bf 01 00 00 00\n44 0f 47 f8\n48 8b 4c 24 48\n4c 29 c1\n49 39 cf\n0f 83 e9 04 00 00\n4d 85 c9\n0f 84 68 02 00 00\n83 f8 02\n0f 82 e3 03 00 00\n45 85 db\n0f 85 da 03 00 00\n49 63 c6\n48 89 44 24 68\n48 8d 50 ff\n44 89 5c 24 18\nbe 20 00 00 00\n4c 89 cf\n4c 89 4c 24 40\ne8 2d 9f ff ff\n44 8b 5c 24 18\n4c 8b 4c 24 40\n4c 8b 44 24 20\n48 8b 44 24 68\n4d 8d 4c 01 ff\ne9 99 03 00 00\n4c 8b 44 24 20\n4d 89 f9\ne9 55 04 00 00\n44 89 5c 24 18\n49 63 f3\n48 89 e8\n48 8d 94 24 a7 00 00 00\n48 29 d0\n44 89 fa\nf6 da\n4d 19 e4\n49 01 c4\n49 01 f4\n45 85 e4\n7e 76\n48 8b 44 24 48\n4c 29 c0\n41 83 fd 5f\n44 88 7c 24 50\n0f 85 56 01 00 00\n4d 63 fc\n49 39 c7\n44 8b 5c 24 18\n0f 83 2f 04 00 00\n31 c9\n4d 85 c9\n0f 84 be 01 00 00\nbe 20 00 00 00\n4c 89 cf\n4c 89 fa\n4c 89 4c 24 40\ne8 91 9e ff ff\n31 c9\n44 8b 5c 24 18\n4c 8b 4c 24 40\n4c 8b 44 24 20\n4d 01 f9\ne9 93 01 00 00\n45 31 c9\n49 bf 00 00 00 00 01 00 00 00\n4d 01 e0\ne9 c0 03 00 00\n45 84 ff\n0f 84 68 01 00 00\n45 89 fc\n31 c0\n45 85 f6\n41 0f 49 c6\n83 f8 01\n41 bf 01 00 00 00\n44 0f 47 f8\n48 8b 4c 24 48\n4c 29 c1\n49 39 cf\n44 8b 5c 24 18\n0f 83 a9 03 00 00\n4d 85 c9\n0f 84 af 01 00 00\n83 f8 02\n0f 82 a3 02 00 00\n45 85 db\n0f 85 9a 02 00 00\n49 63 c6\n48 ff c8\n41 83 fd 30\n4c 89 4c 24 40\n48 89 44 24 68\n0f 85 57 02 00 00\nbe 30 00 00 00\ne9 52 02 00 00\nbe 20 00 00 00\n4c 89 f2\n49 89 ff\ne8 dc 9d ff ff\n4d 01 f7\n4c 89 ff\n49 bf 00 00 00 00 01 00 00 00\n48 8b 44 24 50\na8 01\n75 1c\nf6 44 24 14 01\n75 2a\n48 8d b4 24 b1 00 00 00\n48 89 ea\n49 89 fe\ne8 89 9e ff ff\neb 28\n48 8d b4 24 b1 00 00 00\n48 89 ea\n49 89 fe\ne8 34 03 00 00\neb 13\n48 8d b4 24 b1 00 00 00\n48 89 ea\n49 89 fe\ne8 5f 03 00 00\n4d 89 f1\n4c 8b 44 24 20\n49 01 e9\n4d 01 e0\ne9 c9 02 00 00\n48 39 c6\n44 8b 5c 24 18\n0f 83 dc 02 00 00\n80 7c 24 50 00\n0f 84 db eb ff ff\n31 c9\n45 85 f6\n41 0f 49 ce\n83 f9 01\n41 bf 01 00 00 00\n44 0f 47 f9\n49 39 c7\n0f 83 b2 02 00 00\n4d 85 c9\n0f 84 c0 00 00 00\n83 f9 02\n0f 82 9d eb ff ff\n45 85 db\n0f 85 94 eb ff ff\n4d 63 f6\n49 ff ce\n41 83 fd 30\n4c 89 4c 24 40\n0f 85 5d eb ff ff\nbe 30 00 00 00\ne9 58 eb ff ff\n45 31 c9\ne9 82 01 00 00\n44 8b 5c 24 18\ne9 7b 01 00 00\n45 31 c9\n4d 01 f8\n45 29 e6\n41 0f 4f ce\n80 7c 24 50 00\n74 59\n83 f9 01\n41 bf 01 00 00 00\n44 0f 47 f9\n48 8b 44 24 48\n4c 29 c0\n49 39 c7\n0f 83 34 02 00 00\n4d 85 c9\n74 4e\n45 85 db\n0f 85 9e eb ff ff\n83 f9 02\n0f 82 95 eb ff ff\n41 89 ce\n49 ff ce\n41 83 fd 30\n4c 89 44 24 20\n48 89 4c 24 40\n0f 85 53 eb ff ff\nbe 30 00 00 00\ne9 4e eb ff ff\n41 89 ce\ne9 06 01 00 00\n45 31 c9\ne9 fb 00 00 00\n45 31 c9\ne9 e8 ea ff ff\n45 31 c9\ne9 5b eb ff ff\nbe 20 00 00 00\n4c 89 f2\ne8 4e 9c ff ff\n4c 89 ff\n49 bf 00 00 00 00 01 00 00 00\n8b 44 24 18\n4c 01 f7\n84 c0\n74 15\n48 8b 74 24 78\n4c 89 e2\n49 89 fe\ne8 c6 01 00 00\ne9 3c eb ff ff\n80 7c 24 14 00\n0f 84 21 eb ff ff\n48 8b 74 24 78\n4c 89 e2\n49 89 fe\ne8 e6 01 00 00\ne9 1c eb ff ff\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\n4d 89 cf\ne8 ee 9b ff ff\n4d 89 f9\n4c 8b 44 24 20\n49 bf 00 00 00 00 01 00 00 00\n4d 01 f1\n41 c6 01 0a\ne9 88 eb ff ff\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\n4d 89 cf\ne8 bd 9b ff ff\n4d 89 f9\n4c 8b 44 24 20\n49 bf 00 00 00 00 01 00 00 00\n4d 01 f1\n41 c6 01 09\ne9 57 eb ff ff\nbe 20 00 00 00\n4c 89 cf\n48 8b 54 24 68\ne8 8d 9b ff ff\n48 8b 44 24 68\n44 8b 5c 24 18\n4c 8b 4c 24 40\n4c 8b 44 24 20\n49 01 c1\n45 88 21\n49 ff c1\n4d 01 f8\n4c 8d a4 24 a7 00 00 00\n49 29 ec\n31 c0\n45 85 f6\n41 0f 49 c6\n49 39 c4\n4d 89 e7\n4c 0f 42 f8\n48 8b 4c 24 48\n4c 29 c1\n49 39 cf\n0f 83 bc 00 00 00\n4d 85 c9\n74 27\n49 39 c4\n0f 93 c0\n45 85 db\n75 3f\n84 c0\n75 3b\n4d 63 f6\n4d 29 e6\n41 83 fd 30\n4c 89 44 24 20\n75 0c\nbe 30 00 00 00\neb 0a\n45 31 c9\neb 5d\nbe 20 00 00 00\n4c 89 cf\n4c 89 f2\n4d 89 cd\ne8 fa 9a ff ff\n4d 89 e9\n4c 8b 44 24 20\n4d 01 f1\n80 7c 24 14 00\n74 16\n4c 89 cf\n48 89 ee\n4c 89 e2\n4d 89 c6\n4c 89 cd\ne8 b4 00 00 00\neb 14\n4c 89 cf\n48 89 ee\n4c 89 e2\n4d 89 c6\n4c 89 cd\ne8 9e 9b ff ff\n49 89 e9\n4d 89 f0\n4d 01 e1\n0f 1f 44 00 00\n4d 01 f8\n49 bf 00 00 00 00 01 00 00 00\n80 7b 01 00\n48 8d 5b 01\n0f 85 75 ea ff ff\n48 83 7c 24 48 00\n74 0e\n4d 85 c9\n74 09\n41 c6 01 00\neb 03\n45 31 c0\n4c 89 c0\n48 81 c4 b8 04 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p327
S'.text:0000000000406bc0\n.text:0000000000406bc1\n.text:0000000000406bc3\n.text:0000000000406bc5\n.text:0000000000406bc7\n.text:0000000000406bc9\n.text:0000000000406bca\n.text:0000000000406bd1\n.text:0000000000406bd9\n.text:0000000000406bdc\n.text:0000000000406be1\n.text:0000000000406be4\n.text:0000000000406beb\n.text:0000000000406bef\n.text:0000000000406bf4\n.text:0000000000406bf8\n.text:0000000000406bfb\n.text:0000000000406c00\n.text:0000000000406c04\n.text:0000000000406c09\n.text:0000000000406c0c\n.text:0000000000406c0e\n.text:0000000000406c13\n.text:0000000000406c16\n.text:0000000000406c19\n.text:0000000000406c1c\n.text:0000000000406c20\n.text:0000000000406c23\n.text:0000000000406c26\n.text:0000000000406c2c\n.text:0000000000406c36\n.text:0000000000406c3b\n.text:0000000000406c40\n.text:0000000000406c44\n.text:0000000000406c49\n.text:0000000000406c4e\n.text:0000000000406c51\n.text:0000000000406c54\n.text:0000000000406c59\n.text:0000000000406c5e\n.text:0000000000406c63\n.text:0000000000406c68\n.text:0000000000406c6b\n.text:0000000000406c6f\n.text:0000000000406c72\n.text:0000000000406c75\n.text:0000000000406c78\n.text:0000000000406c7b\n.text:0000000000406c7e\n.text:0000000000406c81\n.text:0000000000406c83\n.text:0000000000406c88\n.text:0000000000406c8b\n.text:0000000000406c8e\n.text:0000000000406c93\n.text:0000000000406c96\n.text:0000000000406c9b\n.text:0000000000406ca0\n.text:0000000000406ca3\n.text:0000000000406ca8\n.text:0000000000406cab\n.text:0000000000406cae\n.text:0000000000406cb3\n.text:0000000000406cb6\n.text:0000000000406cb9\n.text:0000000000406cbe\n.text:0000000000406cc3\n.text:0000000000406cc6\n.text:0000000000406cc9\n.text:0000000000406ccc\n.text:0000000000406cd1\n.text:0000000000406cd6\n.text:0000000000406cdb\n.text:0000000000406cde\n.text:0000000000406ce3\n.text:0000000000406ce6\n.text:0000000000406cea\n.text:0000000000406ced\n.text:0000000000406cf0\n.text:0000000000406cf3\n.text:0000000000406cf6\n.text:0000000000406cfb\n.text:0000000000406d00\n.text:0000000000406d03\n.text:0000000000406d06\n.text:0000000000406d0b\n.text:0000000000406d0e\n.text:0000000000406d13\n.text:0000000000406d16\n.text:0000000000406d19\n.text:0000000000406d1e\n.text:0000000000406d21\n.text:0000000000406d27\n.text:0000000000406d2a\n.text:0000000000406d2f\n.text:0000000000406d32\n.text:0000000000406d35\n.text:0000000000406d3a\n.text:0000000000406d40\n.text:0000000000406d48\n.text:0000000000406d4d\n.text:0000000000406d4f\n.text:0000000000406d52\n.text:0000000000406d55\n.text:0000000000406d5a\n.text:0000000000406d60\n.text:0000000000406d65\n.text:0000000000406d68\n.text:0000000000406d6b\n.text:0000000000406d70\n.text:0000000000406d76\n.text:0000000000406d7b\n.text:0000000000406d80\n.text:0000000000406d83\n.text:0000000000406d86\n.text:0000000000406d89\n.text:0000000000406d8e\n.text:0000000000406d91\n.text:0000000000406d96\n.text:0000000000406d99\n.text:0000000000406da3\n.text:0000000000406da5\n.text:0000000000406da8\n.text:0000000000406dab\n.text:0000000000406dae\n.text:0000000000406db3\n.text:0000000000406db8\n.text:0000000000406dbb\n.text:0000000000406dc0\n.text:0000000000406dc6\n.text:0000000000406dd0\n.text:0000000000406dd2\n.text:0000000000406dd5\n.text:0000000000406dd7\n.text:0000000000406dd9\n.text:0000000000406de0\n.text:0000000000406de3\n.text:0000000000406de6\n.text:0000000000406de9\n.text:0000000000406df0\n.text:0000000000406df3\n.text:0000000000406df6\n.text:0000000000406df9\n.text:0000000000406dfc\n.text:0000000000406dfe\n.text:0000000000406e01\n.text:0000000000406e03\n.text:0000000000406e06\n.text:0000000000406e08\n.text:0000000000406e0b\n.text:0000000000406e0d\n.text:0000000000406e10\n.text:0000000000406e13\n.text:0000000000406e20\n.text:0000000000406e23\n.text:0000000000406e25\n.text:0000000000406e28\n.text:0000000000406e2a\n.text:0000000000406e2d\n.text:0000000000406e30\n.text:0000000000406e40\n.text:0000000000406e45\n.text:0000000000406e48\n.text:0000000000406e4d\n.text:0000000000406e51\n.text:0000000000406e57\n.text:0000000000406e5a\n.text:0000000000406e60\n.text:0000000000406e63\n.text:0000000000406e66\n.text:0000000000406e70\n.text:0000000000406e73\n.text:0000000000406e79\n.text:0000000000406e7c\n.text:0000000000406e7e\n.text:0000000000406e80\n.text:0000000000406e86\n.text:0000000000406e8b\n.text:0000000000406e8d\n.text:0000000000406e90\n.text:0000000000406e93\n.text:0000000000406e98\n.text:0000000000406e9a\n.text:0000000000406e9d\n.text:0000000000406e9f\n.text:0000000000406ea2\n.text:0000000000406ea6\n.text:0000000000406eaa\n.text:0000000000406ead\n.text:0000000000406eb0\n.text:0000000000406eb3\n.text:0000000000406eb6\n.text:0000000000406eb8\n.text:0000000000406ebc\n.text:0000000000406ec0\n.text:0000000000406ec2\n.text:0000000000406ec6\n.text:0000000000406ec8\n.text:0000000000406ecb\n.text:0000000000406ecd\n.text:0000000000406ed0\n.text:0000000000406ed3\n.text:0000000000406ed6\n.text:0000000000406edb\n.text:0000000000406ee1\n.text:0000000000406ee3\n.text:0000000000406ee5\n.text:0000000000406eea\n.text:0000000000406eed\n.text:0000000000406ef4\n.text:0000000000406ef9\n.text:0000000000406efc\n.text:0000000000406f00\n.text:0000000000406f06\n.text:0000000000406f0b\n.text:0000000000406f10\n.text:0000000000406f15\n.text:0000000000406f1a\n.text:0000000000406f1d\n.text:0000000000406f20\n.text:0000000000406f22\n.text:0000000000406f25\n.text:0000000000406f2b\n.text:0000000000406f30\n.text:0000000000406f34\n.text:0000000000406f37\n.text:0000000000406f3c\n.text:0000000000406f3e\n.text:0000000000406f40\n.text:0000000000406f46\n.text:0000000000406f4b\n.text:0000000000406f4f\n.text:0000000000406f51\n.text:0000000000406f54\n.text:0000000000406f5b\n.text:0000000000406f5e\n.text:0000000000406f62\n.text:0000000000406f65\n.text:0000000000406f69\n.text:0000000000406f6b\n.text:0000000000406f6e\n.text:0000000000406f72\n.text:0000000000406f74\n.text:0000000000406f7a\n.text:0000000000406f7c\n.text:0000000000406f7f\n.text:0000000000406f82\n.text:0000000000406f88\n.text:0000000000406f8b\n.text:0000000000406f90\n.text:0000000000406f93\n.text:0000000000406f96\n.text:0000000000406f9b\n.text:0000000000406f9e\n.text:0000000000406fa1\n.text:0000000000406fa6\n.text:0000000000406fa8\n.text:0000000000406fab\n.text:0000000000406fae\n.text:0000000000406fb0\n.text:0000000000406fb3\n.text:0000000000406fb8\n.text:0000000000406fbb\n.text:0000000000406fbe\n.text:0000000000406fc0\n.text:0000000000406fc2\n.text:0000000000406fc7\n.text:0000000000406fca\n.text:0000000000406fcd\n.text:0000000000406fd0\n.text:0000000000406fd6\n.text:0000000000406fdb\n.text:0000000000406fde\n.text:0000000000406fe0\n.text:0000000000406fe3\n.text:0000000000406fe6\n.text:0000000000406fe9\n.text:0000000000406fef\n.text:0000000000406ff4\n.text:0000000000406ff9\n.text:0000000000406ffe\n.text:0000000000407001\n.text:0000000000407006\n.text:0000000000407009\n.text:000000000040700c\n.text:0000000000407012\n.text:0000000000407017\n.text:000000000040701c\n.text:0000000000407021\n.text:0000000000407030\n.text:0000000000407033\n.text:0000000000407037\n.text:0000000000407039\n.text:000000000040703b\n.text:000000000040703d\n.text:0000000000407043\n.text:0000000000407046\n.text:000000000040704b\n.text:000000000040704f\n.text:0000000000407055\n.text:0000000000407059\n.text:000000000040705f\n.text:0000000000407064\n.text:0000000000407068\n.text:000000000040706f\n.text:0000000000407073\n.text:0000000000407075\n.text:0000000000407077\n.text:000000000040707a\n.text:000000000040707d\n.text:000000000040707f\n.text:0000000000407086\n.text:000000000040708a\n.text:000000000040708c\n.text:000000000040708e\n.text:0000000000407091\n.text:0000000000407094\n.text:0000000000407096\n.text:0000000000407099\n.text:00000000004070a0\n.text:00000000004070a4\n.text:00000000004070a7\n.text:00000000004070a9\n.text:00000000004070ac\n.text:00000000004070af\n.text:00000000004070b1\n.text:00000000004070b4\n.text:00000000004070b8\n.text:00000000004070bb\n.text:00000000004070bd\n.text:00000000004070bf\n.text:00000000004070c6\n.text:00000000004070c9\n.text:00000000004070ce\n.text:00000000004070d1\n.text:00000000004070d4\n.text:00000000004070d9\n.text:00000000004070df\n.text:00000000004070e7\n.text:00000000004070ec\n.text:00000000004070f1\n.text:00000000004070f4\n.text:0000000000407100\n.text:0000000000407104\n.text:0000000000407106\n.text:0000000000407110\n.text:0000000000407113\n.text:0000000000407119\n.text:000000000040711e\n.text:0000000000407120\n.text:0000000000407124\n.text:0000000000407127\n.text:000000000040712c\n.text:0000000000407130\n.text:0000000000407133\n.text:0000000000407136\n.text:000000000040713a\n.text:000000000040713f\n.text:0000000000407142\n.text:0000000000407145\n.text:000000000040714b\n.text:000000000040714e\n.text:0000000000407150\n.text:0000000000407153\n.text:0000000000407156\n.text:0000000000407159\n.text:000000000040715b\n.text:000000000040715d\n.text:000000000040715f\n.text:0000000000407162\n.text:0000000000407165\n.text:0000000000407169\n.text:000000000040716b\n.text:0000000000407170\n.text:0000000000407172\n.text:0000000000407175\n.text:000000000040717a\n.text:000000000040717f\n.text:0000000000407182\n.text:0000000000407185\n.text:0000000000407188\n.text:000000000040718d\n.text:0000000000407190\n.text:0000000000407193\n.text:0000000000407198\n.text:000000000040719a\n.text:000000000040719d\n.text:00000000004071a0\n.text:00000000004071a3\n.text:00000000004071a6\n.text:00000000004071ab\n.text:00000000004071ad\n.text:00000000004071b0\n.text:00000000004071b3\n.text:00000000004071b6\n.text:00000000004071b9\n.text:00000000004071be\n.text:00000000004071c1\n.text:00000000004071c6\n.text:00000000004071c9\n.text:00000000004071ce\n.text:00000000004071d1\n.text:00000000004071d4\n.text:00000000004071da\n.text:00000000004071df\n.text:00000000004071e4\n.text:00000000004071e7\n.text:00000000004071ea\n.text:00000000004071f0\n.text:00000000004071f5\n.text:00000000004071fa\n.text:00000000004071fe\n.text:0000000000407204\n.text:0000000000407208\n.text:000000000040720d\n.text:0000000000407213\n.text:0000000000407218\n.text:000000000040721d\n.text:0000000000407221\n.text:0000000000407227\n.text:000000000040722b\n.text:000000000040722e\n.text:0000000000407235\n.text:0000000000407238\n.text:000000000040723c\n.text:0000000000407240\n.text:0000000000407242\n.text:0000000000407245\n.text:0000000000407247\n.text:000000000040724a\n.text:000000000040724c\n.text:000000000040724f\n.text:0000000000407251\n.text:0000000000407254\n.text:0000000000407259\n.text:000000000040725e\n.text:0000000000407261\n.text:0000000000407264\n.text:000000000040726a\n.text:000000000040726f\n.text:0000000000407274\n.text:0000000000407277\n.text:000000000040727a\n.text:0000000000407280\n.text:0000000000407285\n.text:000000000040728a\n.text:000000000040728d\n.text:0000000000407291\n.text:0000000000407296\n.text:000000000040729c\n.text:00000000004072a1\n.text:00000000004072a6\n.text:00000000004072a9\n.text:00000000004072ae\n.text:00000000004072b3\n.text:00000000004072b8\n.text:00000000004072bb\n.text:00000000004072bf\n.text:00000000004072c4\n.text:00000000004072ca\n.text:00000000004072cf\n.text:00000000004072d3\n.text:00000000004072d8\n.text:00000000004072db\n.text:00000000004072df\n.text:00000000004072e4\n.text:00000000004072ea\n.text:00000000004072ef\n.text:00000000004072f4\n.text:00000000004072f7\n.text:00000000004072fc\n.text:0000000000407301\n.text:0000000000407304\n.text:0000000000407308\n.text:000000000040730d\n.text:0000000000407313\n.text:0000000000407317\n.text:000000000040731c\n.text:0000000000407322\n.text:0000000000407326\n.text:000000000040732c\n.text:0000000000407331\n.text:0000000000407338\n.text:0000000000407340\n.text:0000000000407342\n.text:0000000000407349\n.text:000000000040734c\n.text:0000000000407350\n.text:0000000000407354\n.text:0000000000407356\n.text:0000000000407358\n.text:000000000040735b\n.text:000000000040735d\n.text:0000000000407362\n.text:0000000000407364\n.text:0000000000407367\n.text:000000000040736a\n.text:000000000040736c\n.text:0000000000407372\n.text:0000000000407374\n.text:0000000000407376\n.text:0000000000407378\n.text:000000000040737d\n.text:0000000000407380\n.text:0000000000407384\n.text:0000000000407389\n.text:000000000040738f\n.text:0000000000407394\n.text:0000000000407399\n.text:000000000040739b\n.text:00000000004073a0\n.text:00000000004073a5\n.text:00000000004073aa\n.text:00000000004073af\n.text:00000000004073b2\n.text:00000000004073b6\n.text:00000000004073bb\n.text:00000000004073c1\n.text:00000000004073c6\n.text:00000000004073cb\n.text:00000000004073ce\n.text:00000000004073d1\n.text:00000000004073d4\n.text:00000000004073d6\n.text:00000000004073d8\n.text:00000000004073db\n.text:00000000004073df\n.text:00000000004073e4\n.text:00000000004073ea\n.text:00000000004073ef\n.text:00000000004073f4\n.text:00000000004073f7\n.text:00000000004073fa\n.text:00000000004073fd\n.text:0000000000407400\n.text:0000000000407407\n.text:000000000040740b\n.text:000000000040740f\n.text:0000000000407411\n.text:0000000000407414\n.text:0000000000407417\n.text:0000000000407419\n.text:0000000000407420\n.text:0000000000407422\n.text:0000000000407424\n.text:0000000000407427\n.text:0000000000407429\n.text:000000000040742c\n.text:0000000000407433\n.text:0000000000407437\n.text:0000000000407439\n.text:000000000040743b\n.text:000000000040743e\n.text:0000000000407441\n.text:0000000000407443\n.text:0000000000407448\n.text:000000000040744d\n.text:0000000000407450\n.text:0000000000407454\n.text:000000000040745a\n.text:000000000040745f\n.text:0000000000407464\n.text:0000000000407468\n.text:000000000040746e\n.text:0000000000407472\n.text:0000000000407477\n.text:000000000040747d\n.text:0000000000407482\n.text:0000000000407485\n.text:000000000040748b\n.text:000000000040748e\n.text:0000000000407494\n.text:0000000000407497\n.text:000000000040749d\n.text:00000000004074a0\n.text:00000000004074a2\n.text:00000000004074a7\n.text:00000000004074ab\n.text:00000000004074b0\n.text:00000000004074b5\n.text:00000000004074b8\n.text:00000000004074bd\n.text:00000000004074c0\n.text:00000000004074c5\n.text:00000000004074c8\n.text:00000000004074ca\n.text:00000000004074cd\n.text:00000000004074d1\n.text:00000000004074d4\n.text:00000000004074d7\n.text:00000000004074db\n.text:00000000004074e0\n.text:00000000004074e3\n.text:00000000004074e6\n.text:00000000004074ec\n.text:00000000004074ef\n.text:00000000004074f5\n.text:00000000004074f8\n.text:00000000004074fe\n.text:0000000000407501\n.text:0000000000407504\n.text:0000000000407508\n.text:000000000040750e\n.text:0000000000407513\n.text:0000000000407518\n.text:000000000040751b\n.text:000000000040751e\n.text:0000000000407524\n.text:0000000000407529\n.text:000000000040752e\n.text:0000000000407531\n.text:0000000000407535\n.text:000000000040753b\n.text:0000000000407540\n.text:0000000000407545\n.text:0000000000407548\n.text:000000000040754c\n.text:0000000000407551\n.text:0000000000407557\n.text:000000000040755c\n.text:0000000000407561\n.text:0000000000407564\n.text:0000000000407569\n.text:000000000040756e\n.text:0000000000407571\n.text:0000000000407575\n.text:000000000040757b\n.text:0000000000407580\n.text:0000000000407585\n.text:0000000000407588\n.text:000000000040758c\n.text:0000000000407591\n.text:0000000000407597\n.text:000000000040759c\n.text:00000000004075a1\n.text:00000000004075a4\n.text:00000000004075a7\n.text:00000000004075ab\n.text:00000000004075ad\n.text:00000000004075b2\n.text:00000000004075b8\n.text:00000000004075bd\n.text:00000000004075c0\n.text:00000000004075c4\n.text:00000000004075ca\n.text:00000000004075cf\n.text:00000000004075d4\n.text:00000000004075d7\n.text:00000000004075db\n.text:00000000004075df\n.text:00000000004075e5\n.text:00000000004075ea\n.text:00000000004075ef\n.text:00000000004075f2\n.text:00000000004075f6\n.text:00000000004075fb\n.text:0000000000407601\n.text:0000000000407606\n.text:000000000040760b\n.text:000000000040760e\n.text:0000000000407611\n.text:0000000000407615\n.text:0000000000407617\n.text:000000000040761c\n.text:0000000000407622\n.text:0000000000407627\n.text:0000000000407629\n.text:000000000040762c\n.text:0000000000407630\n.text:0000000000407633\n.text:0000000000407638\n.text:000000000040763b\n.text:0000000000407640\n.text:0000000000407643\n.text:0000000000407646\n.text:000000000040764c\n.text:000000000040764f\n.text:0000000000407655\n.text:0000000000407658\n.text:000000000040765e\n.text:0000000000407661\n.text:0000000000407664\n.text:0000000000407668\n.text:000000000040766e\n.text:0000000000407673\n.text:0000000000407678\n.text:000000000040767d\n.text:0000000000407680\n.text:0000000000407685\n.text:0000000000407689\n.text:0000000000407691\n.text:0000000000407694\n.text:0000000000407698\n.text:000000000040769c\n.text:00000000004076a4\n.text:00000000004076ac\n.text:00000000004076b4\n.text:00000000004076bc\n.text:00000000004076c4\n.text:00000000004076c9\n.text:00000000004076cc\n.text:00000000004076d0\n.text:00000000004076d3\n.text:00000000004076d6\n.text:00000000004076de\n.text:00000000004076e0\n.text:00000000004076ea\n.text:00000000004076ed\n.text:00000000004076f0\n.text:00000000004076f3\n.text:00000000004076f7\n.text:00000000004076fb\n.text:00000000004076fe\n.text:0000000000407700\n.text:0000000000407703\n.text:0000000000407705\n.text:0000000000407707\n.text:000000000040770a\n.text:000000000040770c\n.text:000000000040770e\n.text:0000000000407711\n.text:0000000000407714\n.text:0000000000407717\n.text:000000000040771a\n.text:000000000040771d\n.text:0000000000407721\n.text:0000000000407725\n.text:0000000000407728\n.text:000000000040772a\n.text:0000000000407730\n.text:0000000000407733\n.text:0000000000407738\n.text:000000000040773b\n.text:0000000000407740\n.text:0000000000407744\n.text:0000000000407749\n.text:000000000040774b\n.text:000000000040774e\n.text:0000000000407752\n.text:0000000000407755\n.text:000000000040775a\n.text:000000000040775d\n.text:0000000000407762\n.text:0000000000407765\n.text:0000000000407768\n.text:000000000040776e\n.text:0000000000407771\n.text:0000000000407777\n.text:000000000040777a\n.text:0000000000407780\n.text:0000000000407783\n.text:0000000000407786\n.text:000000000040778a\n.text:0000000000407790\n.text:0000000000407795\n.text:000000000040779a\n.text:000000000040779f\n.text:00000000004077a4\n.text:00000000004077a9\n.text:00000000004077ac\n.text:00000000004077af\n.text:00000000004077b1\n.text:00000000004077b8\n.text:00000000004077bc\n.text:00000000004077c0\n.text:00000000004077c2\n.text:00000000004077c5\n.text:00000000004077c8\n.text:00000000004077ca\n.text:00000000004077d1\n.text:00000000004077d3\n.text:00000000004077d5\n.text:00000000004077d7\n.text:00000000004077dc\n.text:00000000004077e1\n.text:00000000004077e4\n.text:00000000004077e8\n.text:00000000004077ed\n.text:00000000004077f3\n.text:00000000004077f8\n.text:00000000004077fd\n.text:0000000000407800\n.text:0000000000407805\n.text:000000000040780a\n.text:000000000040780d\n.text:0000000000407811\n.text:0000000000407817\n.text:000000000040781c\n.text:0000000000407821\n.text:0000000000407825\n.text:000000000040782b\n.text:000000000040782d\n.text:000000000040782f\n.text:0000000000407832\n.text:0000000000407837\n.text:0000000000407839\n.text:000000000040783e\n.text:0000000000407841\n.text:0000000000407846\n.text:000000000040784a\n.text:000000000040784c\n.text:000000000040784f\n.text:0000000000407856\n.text:0000000000407859\n.text:000000000040785d\n.text:0000000000407860\n.text:0000000000407864\n.text:0000000000407866\n.text:0000000000407869\n.text:000000000040786d\n.text:000000000040786f\n.text:0000000000407875\n.text:0000000000407877\n.text:000000000040787a\n.text:000000000040787d\n.text:0000000000407883\n.text:0000000000407886\n.text:000000000040788b\n.text:000000000040788e\n.text:0000000000407891\n.text:0000000000407896\n.text:0000000000407899\n.text:000000000040789e\n.text:00000000004078a0\n.text:00000000004078a5\n.text:00000000004078aa\n.text:00000000004078af\n.text:00000000004078b4\n.text:00000000004078b7\n.text:00000000004078ba\n.text:00000000004078c0\n.text:00000000004078c3\n.text:00000000004078c9\n.text:00000000004078ce\n.text:00000000004078d2\n.text:00000000004078d9\n.text:00000000004078dc\n.text:00000000004078e0\n.text:00000000004078e4\n.text:00000000004078e6\n.text:00000000004078e9\n.text:00000000004078eb\n.text:00000000004078ed\n.text:00000000004078ef\n.text:00000000004078f2\n.text:00000000004078f9\n.text:00000000004078fc\n.text:0000000000407900\n.text:0000000000407904\n.text:0000000000407906\n.text:0000000000407909\n.text:000000000040790b\n.text:0000000000407910\n.text:0000000000407916\n.text:000000000040791b\n.text:000000000040791d\n.text:000000000040791f\n.text:0000000000407921\n.text:0000000000407924\n.text:0000000000407926\n.text:0000000000407929\n.text:000000000040792e\n.text:0000000000407930\n.text:0000000000407932\n.text:0000000000407934\n.text:0000000000407936\n.text:000000000040793b\n.text:000000000040793e\n.text:0000000000407940\n.text:0000000000407945\n.text:0000000000407948\n.text:000000000040794d\n.text:0000000000407951\n.text:0000000000407956\n.text:000000000040795b\n.text:0000000000407961\n.text:0000000000407965\n.text:000000000040796b\n.text:0000000000407971\n.text:0000000000407976\n.text:0000000000407978\n.text:000000000040797a\n.text:000000000040797f\n.text:0000000000407984\n.text:0000000000407988\n.text:000000000040798f\n.text:0000000000407992\n.text:0000000000407996\n.text:000000000040799a\n.text:000000000040799c\n.text:000000000040799f\n.text:00000000004079a1\n.text:00000000004079a3\n.text:00000000004079a8\n.text:00000000004079ad\n.text:00000000004079b2\n.text:00000000004079b8\n.text:00000000004079ba\n.text:00000000004079bc\n.text:00000000004079bf\n.text:00000000004079c5\n.text:00000000004079c8\n.text:00000000004079cd\n.text:00000000004079d2\n.text:00000000004079d5\n.text:00000000004079da\n.text:00000000004079dc\n.text:00000000004079de\n.text:00000000004079e2\n.text:00000000004079e9\n.text:00000000004079ee\n.text:00000000004079f4\n.text:00000000004079fc\n.text:00000000004079ff\n.text:0000000000407a04\n.text:0000000000407a07\n.text:0000000000407a0e\n.text:0000000000407a12\n.text:0000000000407a14\n.text:0000000000407a16\n.text:0000000000407a19\n.text:0000000000407a1c\n.text:0000000000407a20\n.text:0000000000407a25\n.text:0000000000407a2a\n.text:0000000000407a2c\n.text:0000000000407a2f\n.text:0000000000407a33\n.text:0000000000407a36\n.text:0000000000407a3b\n.text:0000000000407a3e\n.text:0000000000407a43\n.text:0000000000407a46\n.text:0000000000407a49\n.text:0000000000407a4f\n.text:0000000000407a52\n.text:0000000000407a54\n.text:0000000000407a57\n.text:0000000000407a5d\n.text:0000000000407a60\n.text:0000000000407a63\n.text:0000000000407a67\n.text:0000000000407a6d\n.text:0000000000407a72\n.text:0000000000407a77\n.text:0000000000407a7a\n.text:0000000000407a84\n.text:0000000000407a87\n.text:0000000000407a8c\n.text:0000000000407a8f\n.text:0000000000407a91\n.text:0000000000407a94\n.text:0000000000407a96\n.text:0000000000407a98\n.text:0000000000407a9b\n.text:0000000000407aa0\n.text:0000000000407aa3\n.text:0000000000407aa5\n.text:0000000000407aa8\n.text:0000000000407aaa\n.text:0000000000407aac\n.text:0000000000407aaf\n.text:0000000000407ab4\n.text:0000000000407ab9\n.text:0000000000407abb\n.text:0000000000407ac0\n.text:0000000000407ac2\n.text:0000000000407ac7\n.text:0000000000407aca\n.text:0000000000407ace\n.text:0000000000407ad5\n.text:0000000000407ad8\n.text:0000000000407adb\n.text:0000000000407add\n.text:0000000000407ae4\n.text:0000000000407ae7\n.text:0000000000407aec\n.text:0000000000407aef\n.text:0000000000407af7\n.text:0000000000407afc\n.text:0000000000407aff\n.text:0000000000407b04\n.text:0000000000407b07\n.text:0000000000407b0b\n.text:0000000000407b0e\n.text:0000000000407b11\n.text:0000000000407b15\n.text:0000000000407b1a\n.text:0000000000407b1d\n.text:0000000000407b20\n.text:0000000000407b26\n.text:0000000000407b29\n.text:0000000000407b2b\n.text:0000000000407b2e\n.text:0000000000407b33\n.text:0000000000407b38\n.text:0000000000407b3a\n.text:0000000000407b3d\n.text:0000000000407b40\n.text:0000000000407b44\n.text:0000000000407b46\n.text:0000000000407b4b\n.text:0000000000407b4d\n.text:0000000000407b50\n.text:0000000000407b5a\n.text:0000000000407b5d\n.text:0000000000407b62\n.text:0000000000407b6c\n.text:0000000000407b6e\n.text:0000000000407b73\n.text:0000000000407b76\n.text:0000000000407b79\n.text:0000000000407b7c\n.text:0000000000407b7f\n.text:0000000000407b84\n.text:0000000000407b8e\n.text:0000000000407b91\n.text:0000000000407b94\n.text:0000000000407b96\n.text:0000000000407b9b\n.text:0000000000407b9f\n.text:0000000000407ba6\n.text:0000000000407ba9\n.text:0000000000407bac\n.text:0000000000407baf\n.text:0000000000407bb2\n.text:0000000000407bb7\n.text:0000000000407bba\n.text:0000000000407bc2\n.text:0000000000407bc7\n.text:0000000000407bcc\n.text:0000000000407bcf\n.text:0000000000407bd4\n.text:0000000000407bd9\n.text:0000000000407bdc\n.text:0000000000407be1\n.text:0000000000407be4\n.text:0000000000407be6\n.text:0000000000407be9\n.text:0000000000407beb\n.text:0000000000407bed\n.text:0000000000407bf0\n.text:0000000000407bf5\n.text:0000000000407bf7\n.text:0000000000407bf9\n.text:0000000000407bfc\n.text:0000000000407c01\n.text:0000000000407c03\n.text:0000000000407c05\n.text:0000000000407c08\n.text:0000000000407c0d\n.text:0000000000407c17\n.text:0000000000407c1b\n.text:0000000000407c1d\n.text:0000000000407c23\n.text:0000000000407c28\n.text:0000000000407c32\n.text:0000000000407c37\n.text:0000000000407c41\n.text:0000000000407c46\n.text:0000000000407c49\n.text:0000000000407c4e\n.text:0000000000407c53\n.text:0000000000407c55\n.text:0000000000407c5b\n.text:0000000000407c5e\n.text:0000000000407c63\n.text:0000000000407c69\n.text:0000000000407c6d\n.text:0000000000407c6f\n.text:0000000000407c71\n.text:0000000000407c76\n.text:0000000000407c7c\n.text:0000000000407c84\n.text:0000000000407c89\n.text:0000000000407c8f\n.text:0000000000407c96\n.text:0000000000407c9b\n.text:0000000000407c9d\n.text:0000000000407ca4\n.text:0000000000407ca7\n.text:0000000000407ca9\n.text:0000000000407cac\n.text:0000000000407cb4\n.text:0000000000407cb7\n.text:0000000000407cbc\n.text:0000000000407cbf\n.text:0000000000407cc1\n.text:0000000000407cc3\n.text:0000000000407cc6\n.text:0000000000407cca\n.text:0000000000407ccd\n.text:0000000000407cd3\n.text:0000000000407cd5\n.text:0000000000407cdb\n.text:0000000000407ce0\n.text:0000000000407ce2\n.text:0000000000407ce7\n.text:0000000000407cea\n.text:0000000000407cef\n.text:0000000000407cf4\n.text:0000000000407cf9\n.text:0000000000407cfc\n.text:0000000000407d03\n.text:0000000000407d06\n.text:0000000000407d0b\n.text:0000000000407d0d\n.text:0000000000407d12\n.text:0000000000407d17\n.text:0000000000407d19\n.text:0000000000407d1d\n.text:0000000000407d25\n.text:0000000000407d2a\n.text:0000000000407d2f\n.text:0000000000407d34\n.text:0000000000407d39\n.text:0000000000407d3c\n.text:0000000000407d3f\n.text:0000000000407d45\n.text:0000000000407d4a\n.text:0000000000407d4d\n.text:0000000000407d4f\n.text:0000000000407d52\n.text:0000000000407d56\n.text:0000000000407d59\n.text:0000000000407d5c\n.text:0000000000407d60\n.text:0000000000407d65\n.text:0000000000407d6a\n.text:0000000000407d6d\n.text:0000000000407d70\n.text:0000000000407d74\n.text:0000000000407d7a\n.text:0000000000407d7d\n.text:0000000000407d80\n.text:0000000000407d86\n.text:0000000000407d89\n.text:0000000000407d8c\n.text:0000000000407d8e\n.text:0000000000407d98\n.text:0000000000407d9e\n.text:0000000000407da0\n.text:0000000000407da6\n.text:0000000000407da9\n.text:0000000000407dac\n.text:0000000000407db0\n.text:0000000000407db6\n.text:0000000000407dbb\n.text:0000000000407dc0\n.text:0000000000407dc5\n.text:0000000000407dc9\n.text:0000000000407dcb\n.text:0000000000407dcd\n.text:0000000000407dcf\n.text:0000000000407dd2\n.text:0000000000407dda\n.text:0000000000407de0\n.text:0000000000407de3\n.text:0000000000407de5\n.text:0000000000407de9\n.text:0000000000407dec\n.text:0000000000407dee\n.text:0000000000407df0\n.text:0000000000407df5\n.text:0000000000407df9\n.text:0000000000407dfd\n.text:0000000000407e00\n.text:0000000000407e03\n.text:0000000000407e05\n.text:0000000000407e07\n.text:0000000000407e0b\n.text:0000000000407e0f\n.text:0000000000407e12\n.text:0000000000407e15\n.text:0000000000407e17\n.text:0000000000407e19\n.text:0000000000407e1b\n.text:0000000000407e1d\n.text:0000000000407e1f\n.text:0000000000407e22\n.text:0000000000407e26\n.text:0000000000407e29\n.text:0000000000407e2b\n.text:0000000000407e2e\n.text:0000000000407e32\n.text:0000000000407e35\n.text:0000000000407e37\n.text:0000000000407e3a\n.text:0000000000407e3e\n.text:0000000000407e43\n.text:0000000000407e48\n.text:0000000000407e4c\n.text:0000000000407e52\n.text:0000000000407e55\n.text:0000000000407e5b\n.text:0000000000407e5e\n.text:0000000000407e60\n.text:0000000000407e63\n.text:0000000000407e67\n.text:0000000000407e6a\n.text:0000000000407e70\n.text:0000000000407e74\n.text:0000000000407e79\n.text:0000000000407e7c\n.text:0000000000407e7f\n.text:0000000000407e85\n.text:0000000000407e88\n.text:0000000000407e8e\n.text:0000000000407e91\n.text:0000000000407e97\n.text:0000000000407e9a\n.text:0000000000407ea0\n.text:0000000000407ea3\n.text:0000000000407ea8\n.text:0000000000407eac\n.text:0000000000407eb1\n.text:0000000000407eb6\n.text:0000000000407eb9\n.text:0000000000407ebe\n.text:0000000000407ec3\n.text:0000000000407ec8\n.text:0000000000407ecd\n.text:0000000000407ed2\n.text:0000000000407ed7\n.text:0000000000407edc\n.text:0000000000407ee1\n.text:0000000000407ee6\n.text:0000000000407ee9\n.text:0000000000407eee\n.text:0000000000407ef3\n.text:0000000000407ef6\n.text:0000000000407ef9\n.text:0000000000407f01\n.text:0000000000407f04\n.text:0000000000407f07\n.text:0000000000407f09\n.text:0000000000407f0c\n.text:0000000000407f0f\n.text:0000000000407f12\n.text:0000000000407f15\n.text:0000000000407f17\n.text:0000000000407f1c\n.text:0000000000407f1f\n.text:0000000000407f23\n.text:0000000000407f28\n.text:0000000000407f2e\n.text:0000000000407f31\n.text:0000000000407f34\n.text:0000000000407f39\n.text:0000000000407f3f\n.text:0000000000407f41\n.text:0000000000407f44\n.text:0000000000407f4a\n.text:0000000000407f4f\n.text:0000000000407f52\n.text:0000000000407f55\n.text:0000000000407f5a\n.text:0000000000407f5f\n.text:0000000000407f61\n.text:0000000000407f66\n.text:0000000000407f6b\n.text:0000000000407f70\n.text:0000000000407f73\n.text:0000000000407f78\n.text:0000000000407f7b\n.text:0000000000407f85\n.text:0000000000407f88\n.text:0000000000407f8d\n.text:0000000000407f90\n.text:0000000000407f96\n.text:0000000000407f99\n.text:0000000000407f9b\n.text:0000000000407f9e\n.text:0000000000407fa2\n.text:0000000000407fa5\n.text:0000000000407fab\n.text:0000000000407faf\n.text:0000000000407fb4\n.text:0000000000407fb7\n.text:0000000000407fba\n.text:0000000000407fbf\n.text:0000000000407fc5\n.text:0000000000407fc8\n.text:0000000000407fce\n.text:0000000000407fd1\n.text:0000000000407fd7\n.text:0000000000407fda\n.text:0000000000407fe0\n.text:0000000000407fe3\n.text:0000000000407fe6\n.text:0000000000407fea\n.text:0000000000407fef\n.text:0000000000407ff4\n.text:0000000000407ffa\n.text:0000000000407fff\n.text:0000000000408004\n.text:0000000000408009\n.text:000000000040800c\n.text:000000000040800f\n.text:0000000000408014\n.text:0000000000408017\n.text:000000000040801a\n.text:0000000000408024\n.text:0000000000408029\n.text:000000000040802b\n.text:000000000040802d\n.text:0000000000408032\n.text:0000000000408034\n.text:000000000040803c\n.text:000000000040803f\n.text:0000000000408042\n.text:0000000000408047\n.text:0000000000408049\n.text:0000000000408051\n.text:0000000000408054\n.text:0000000000408057\n.text:000000000040805c\n.text:000000000040805e\n.text:0000000000408066\n.text:0000000000408069\n.text:000000000040806c\n.text:0000000000408071\n.text:0000000000408074\n.text:0000000000408079\n.text:000000000040807c\n.text:000000000040807f\n.text:0000000000408084\n.text:0000000000408087\n.text:000000000040808c\n.text:0000000000408092\n.text:0000000000408097\n.text:000000000040809d\n.text:000000000040809f\n.text:00000000004080a2\n.text:00000000004080a6\n.text:00000000004080a9\n.text:00000000004080af\n.text:00000000004080b3\n.text:00000000004080b6\n.text:00000000004080bc\n.text:00000000004080bf\n.text:00000000004080c5\n.text:00000000004080c8\n.text:00000000004080ce\n.text:00000000004080d1\n.text:00000000004080d7\n.text:00000000004080da\n.text:00000000004080dd\n.text:00000000004080e1\n.text:00000000004080e6\n.text:00000000004080ec\n.text:00000000004080f1\n.text:00000000004080f6\n.text:00000000004080f9\n.text:00000000004080fe\n.text:0000000000408103\n.text:0000000000408108\n.text:000000000040810b\n.text:000000000040810e\n.text:0000000000408111\n.text:0000000000408115\n.text:000000000040811a\n.text:000000000040811c\n.text:000000000040811f\n.text:0000000000408125\n.text:0000000000408129\n.text:000000000040812e\n.text:0000000000408131\n.text:0000000000408134\n.text:000000000040813a\n.text:000000000040813d\n.text:000000000040813f\n.text:0000000000408142\n.text:0000000000408148\n.text:000000000040814b\n.text:0000000000408151\n.text:0000000000408154\n.text:0000000000408157\n.text:000000000040815b\n.text:0000000000408160\n.text:0000000000408165\n.text:000000000040816b\n.text:0000000000408170\n.text:0000000000408175\n.text:0000000000408178\n.text:000000000040817d\n.text:0000000000408180\n.text:0000000000408185\n.text:0000000000408188\n.text:000000000040818d\n.text:0000000000408190\n.text:0000000000408195\n.text:000000000040819a\n.text:000000000040819d\n.text:00000000004081a2\n.text:00000000004081a5\n.text:00000000004081af\n.text:00000000004081b3\n.text:00000000004081b6\n.text:00000000004081b8\n.text:00000000004081ba\n.text:00000000004081bf\n.text:00000000004081c2\n.text:00000000004081c5\n.text:00000000004081ca\n.text:00000000004081cf\n.text:00000000004081d4\n.text:00000000004081da\n.text:00000000004081df\n.text:00000000004081e2\n.text:00000000004081e5\n.text:00000000004081ea\n.text:00000000004081ef\n.text:00000000004081f4\n.text:00000000004081f7\n.text:00000000004081fa\n.text:00000000004081fd\n.text:0000000000408202\n.text:0000000000408205\n.text:000000000040820a\n.text:0000000000408214\n.text:0000000000408217\n.text:000000000040821b\n.text:0000000000408220\n.text:0000000000408225\n.text:0000000000408228\n.text:000000000040822b\n.text:000000000040822e\n.text:0000000000408233\n.text:0000000000408236\n.text:000000000040823b\n.text:0000000000408245\n.text:0000000000408248\n.text:000000000040824c\n.text:0000000000408251\n.text:0000000000408256\n.text:0000000000408259\n.text:000000000040825e\n.text:0000000000408263\n.text:0000000000408268\n.text:000000000040826d\n.text:0000000000408272\n.text:0000000000408277\n.text:000000000040827a\n.text:000000000040827d\n.text:0000000000408280\n.text:0000000000408283\n.text:000000000040828b\n.text:000000000040828e\n.text:0000000000408290\n.text:0000000000408293\n.text:0000000000408297\n.text:000000000040829a\n.text:000000000040829d\n.text:00000000004082a1\n.text:00000000004082a6\n.text:00000000004082a9\n.text:00000000004082ac\n.text:00000000004082b2\n.text:00000000004082b5\n.text:00000000004082b7\n.text:00000000004082ba\n.text:00000000004082bd\n.text:00000000004082c0\n.text:00000000004082c2\n.text:00000000004082c4\n.text:00000000004082c6\n.text:00000000004082c9\n.text:00000000004082cc\n.text:00000000004082d0\n.text:00000000004082d5\n.text:00000000004082d7\n.text:00000000004082dc\n.text:00000000004082de\n.text:00000000004082e1\n.text:00000000004082e3\n.text:00000000004082e8\n.text:00000000004082eb\n.text:00000000004082ee\n.text:00000000004082f1\n.text:00000000004082f6\n.text:00000000004082f9\n.text:00000000004082fe\n.text:0000000000408301\n.text:0000000000408306\n.text:0000000000408308\n.text:000000000040830b\n.text:000000000040830e\n.text:0000000000408311\n.text:0000000000408314\n.text:0000000000408317\n.text:000000000040831c\n.text:000000000040831e\n.text:0000000000408321\n.text:0000000000408324\n.text:0000000000408327\n.text:000000000040832a\n.text:000000000040832d\n.text:0000000000408332\n.text:0000000000408335\n.text:0000000000408338\n.text:000000000040833b\n.text:0000000000408340\n.text:0000000000408343\n.text:000000000040834d\n.text:0000000000408351\n.text:0000000000408355\n.text:000000000040835b\n.text:0000000000408361\n.text:0000000000408363\n.text:0000000000408366\n.text:0000000000408368\n.text:000000000040836c\n.text:000000000040836e\n.text:0000000000408371\n.text:0000000000408374\n.text:000000000040837b\n.text:000000000040837c\n.text:000000000040837e\n.text:0000000000408380\n.text:0000000000408382\n.text:0000000000408384\n.text:0000000000408385\n'
p328
tp329
sS'FUN_00401bb0'
p330
(S'\n__stdcall FUN_00401bb0()\n'
p331
V\u000avoid FUN_00401bb0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00611010)();\u000a  return;\u000a}\u000a\u000a
p332
S'PUSH qword ptr [0x00611008]\nJMP qword ptr [0x00611010]\n'
p333
S'ff 35 52 f4 20 00\nff 25 54 f4 20 00\n'
p334
S'.plt:0000000000401bb0\n.plt:0000000000401bb6\n'
p335
tp336
sS'quotearg_custom'
p337
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p338
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p339
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00406380\n'
p340
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p341
S'.text:0000000000406400\n.text:0000000000406403\n.text:0000000000406406\n.text:0000000000406409\n.text:000000000040640b\n.text:000000000040640e\n.text:0000000000406411\n.text:0000000000406414\n'
p342
tp343
sS'free'
p344
(S'\n__stdcall free(void * __ptr)\n'
p345
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_00611028)();\u000a  return;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x00611028]\n'
p347
S'ff 25 42 f4 20 00\n'
p348
S'.plt:0000000000401be0\n'
p349
tp350
sS'close'
p351
(S'\n__stdcall close(int __fd)\n'
p352
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_00611150)();\u000a  return iVar1;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x00611150]\n'
p354
S'ff 25 1a f3 20 00\n'
p355
S'.plt:0000000000401e30\n'
p356
tp357
sS'getenv'
p358
(S'\n__stdcall getenv(char * __name)\n'
p359
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_00611020)();\u000a  return pcVar1;\u000a}\u000a\u000a
p360
S'JMP qword ptr [0x00611020]\n'
p361
S'ff 25 4a f4 20 00\n'
p362
S'.plt:0000000000401bd0\n'
p363
tp364
sS'putchar_unlocked'
p365
(S'\n__stdcall putchar_unlocked(int __c)\n'
p366
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar_unlocked(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_unlocked_006111a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x006111a8]\n'
p368
S'ff 25 c2 f2 20 00\n'
p369
S'.plt:0000000000401ee0\n'
p370
tp371
sS'fopen'
p372
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p373
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_00611280)();\u000a  return pFVar1;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x00611280]\n'
p375
S'ff 25 ea f1 20 00\n'
p376
S'.plt:0000000000402090\n'
p377
tp378
sS'stat'
p379
(S'\n__stdcall stat(char * __file, stat * __buf)\n'
p380
V\u000aint stat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___xstat_006111c8)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p381
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00401f20\n'
p382
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 d0 6f ff ff\n'
p383
S'.text:000000000040af40\n.text:000000000040af43\n.text:000000000040af46\n.text:000000000040af4b\n'
p384
tp385
sS'tzalloc'
p386
(S'\n__stdcall tzalloc(char * name)\n'
p387
V\u000atimezone_t tzalloc(char *name)\u000a\u000a{\u000a  size_t __size;\u000a  timezone_t ptVar1;\u000a  ulong abbr_size;\u000a  \u000a  if (name == (char *)0x0) {\u000a    abbr_size = 0;\u000a  }\u000a  else {\u000a    __size = strlen(name);\u000a    abbr_size = __size + 1;\u000a  }\u000a  __size = 0x80;\u000a  if (0x76 < abbr_size) {\u000a    __size = abbr_size + 10;\u000a  }\u000a  ptVar1 = (timezone_t)malloc(__size);\u000a  if (ptVar1 != (timezone_t)0x0) {\u000a    ptVar1->next = (tm_zone *)0x0;\u000a    *(bool *)&ptVar1->tz_is_set = name != (char *)0x0;\u000a    ptVar1->abbrs[0] = 0;\u000a    if (name != (char *)0x0) {\u000a      extend_abbrs(ptVar1->abbrs,name,abbr_size);\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p388
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nTEST R14,R14\nJZ 0x004096fd\nMOV RDI,R14\nCALL 0x00401d30\nMOV R15,RAX\nINC R15\nJMP 0x00409700\nXOR R15D,R15D\nLEA RAX,[R15 + 0xa]\nCMP R15,0x77\nMOV EDI,0x80\nCMOVNC RDI,RAX\nCALL 0x00401f30\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409744\nMOV qword ptr [RBX],0x0\nTEST R14,R14\nSETNZ byte ptr [RBX + 0x8]\nMOV byte ptr [RBX + 0x9],0x0\nJZ 0x00409744\nMOV RDI,RBX\nADD RDI,0x9\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00409750\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p389
S'41 57\n41 56\n53\n49 89 fe\n4d 85 f6\n74 10\n4c 89 f7\ne8 3b 86 ff ff\n49 89 c7\n49 ff c7\neb 03\n45 31 ff\n49 8d 47 0a\n49 83 ff 77\nbf 80 00 00 00\n48 0f 43 f8\ne8 1a 88 ff ff\n48 89 c3\n48 85 db\n74 26\n48 c7 03 00 00 00 00\n4d 85 f6\n0f 95 43 08\nc6 43 09 00\n74 12\n48 89 df\n48 83 c7 09\n4c 89 f6\n4c 89 fa\ne8 0c 00 00 00\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p390
S'.text:00000000004096e0\n.text:00000000004096e2\n.text:00000000004096e4\n.text:00000000004096e5\n.text:00000000004096e8\n.text:00000000004096eb\n.text:00000000004096ed\n.text:00000000004096f0\n.text:00000000004096f5\n.text:00000000004096f8\n.text:00000000004096fb\n.text:00000000004096fd\n.text:0000000000409700\n.text:0000000000409704\n.text:0000000000409708\n.text:000000000040970d\n.text:0000000000409711\n.text:0000000000409716\n.text:0000000000409719\n.text:000000000040971c\n.text:000000000040971e\n.text:0000000000409725\n.text:0000000000409728\n.text:000000000040972c\n.text:0000000000409730\n.text:0000000000409732\n.text:0000000000409735\n.text:0000000000409739\n.text:000000000040973c\n.text:000000000040973f\n.text:0000000000409744\n.text:0000000000409747\n.text:0000000000409748\n.text:000000000040974a\n.text:000000000040974c\n'
p391
tp392
sS'rpl_fseeko'
p393
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p394
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_00611278)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p395
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x0040a668\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x0040a668\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x0040a67a\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00402080\nMOV RDI,RBX\nCALL 0x00401f00\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x00401dd0\nCMP RAX,-0x1\nJZ 0x0040a6a3\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x0040a6a8\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p396
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 06 7a ff ff\n48 89 df\ne8 7e 78 ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 41 77 ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p397
S'.text:000000000040a640\n.text:000000000040a641\n.text:000000000040a643\n.text:000000000040a644\n.text:000000000040a647\n.text:000000000040a64a\n.text:000000000040a64d\n.text:000000000040a651\n.text:000000000040a655\n.text:000000000040a657\n.text:000000000040a65b\n.text:000000000040a65f\n.text:000000000040a661\n.text:000000000040a666\n.text:000000000040a668\n.text:000000000040a66b\n.text:000000000040a66e\n.text:000000000040a671\n.text:000000000040a672\n.text:000000000040a674\n.text:000000000040a675\n.text:000000000040a67a\n.text:000000000040a67d\n.text:000000000040a682\n.text:000000000040a684\n.text:000000000040a687\n.text:000000000040a68a\n.text:000000000040a68f\n.text:000000000040a693\n.text:000000000040a695\n.text:000000000040a698\n.text:000000000040a69f\n.text:000000000040a6a1\n.text:000000000040a6a3\n.text:000000000040a6a8\n.text:000000000040a6a9\n.text:000000000040a6ab\n.text:000000000040a6ac\n'
p398
tp399
sS'quote_n_mem'
p400
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p401
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p402
S'MOV ECX,0x611348\nJMP 0x00405f80\n'
p403
S'b9 48 13 61 00\ne9 36 fb ff ff\n'
p404
S'.text:0000000000406440\n.text:0000000000406445\n'
p405
tp406
sS'xstrdup'
p407
(S'\n__stdcall xstrdup(char * string)\n'
p408
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p409
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401d30\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00408ab0\n'
p410
S'53\n48 89 fb\ne8 47 92 ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p411
S'.text:0000000000408ae0\n.text:0000000000408ae1\n.text:0000000000408ae4\n.text:0000000000408ae9\n.text:0000000000408aed\n.text:0000000000408af0\n.text:0000000000408af1\n'
p412
tp413
sS'c_ispunct'
p414
(S'\n__stdcall c_ispunct()\n'
p415
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p416
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x00409c62\nMOV AL,0x1\nJMP qword ptr [0x40db90 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p417
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd 90 db 40 00\nc3\n31 c0\nc3\n'
p418
S'.text:0000000000409c50\n.text:0000000000409c53\n.text:0000000000409c56\n.text:0000000000409c58\n.text:0000000000409c5a\n.text:0000000000409c61\n.text:0000000000409c62\n.text:0000000000409c64\n'
p419
tp420
sS'unescape_tab'
p421
(S'\n__stdcall unescape_tab(char * str)\n'
p422
V\u000avoid unescape_tab(char *str)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  long lVar3;\u000a  size_t sVar4;\u000a  ulong uVar5;\u000a  char *pcVar6;\u000a  char cVar7;\u000a  \u000a  sVar4 = strlen(str);\u000a  if (sVar4 != 0xffffffffffffffff) {\u000a    uVar5 = 0;\u000a    pcVar6 = str;\u000a    do {\u000a      if ((((uVar5 + 4 < sVar4 + 1) && (str[uVar5] == '\u005c\u005c')) &&\u000a          (lVar1 = uVar5 + 1, (str[lVar1] & 0xfcU) == 0x30)) &&\u000a         ((lVar2 = uVar5 + 2, (str[lVar2] & 0xf8U) == 0x30 &&\u000a          (lVar3 = uVar5 + 3, (str[lVar3] & 0xf8U) == 0x30)))) {\u000a        uVar5 = uVar5 + 3;\u000a        cVar7 = str[lVar2] * '\u005cb' + str[lVar1] * '@' + str[lVar3] + 'P';\u000a      }\u000a      else {\u000a        cVar7 = str[uVar5];\u000a      }\u000a      *pcVar6 = cVar7;\u000a      uVar5 = uVar5 + 1;\u000a      pcVar6 = pcVar6 + 1;\u000a    } while (uVar5 < sVar4 + 1);\u000a  }\u000a  return;\u000a}\u000a\u000a
p423
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00401d30\nINC RAX\nJZ 0x00409693\nXOR ECX,ECX\nMOV RDX,R14\nNOP word ptr [RAX + RAX*0x1]\nLEA RSI,[RCX + 0x4]\nCMP RSI,RAX\nJNC 0x00409680\nCMP byte ptr [R14 + RCX*0x1],0x5c\nJNZ 0x00409680\nMOVZX ESI,byte ptr [R14 + RCX*0x1 + 0x1]\nMOV EBX,ESI\nAND BL,0xfc\nCMP BL,0x30\nJNZ 0x00409680\nMOVZX R8D,byte ptr [R14 + RCX*0x1 + 0x2]\nMOV EBX,R8D\nAND BL,0xf8\nCMP BL,0x30\nJNZ 0x00409680\nMOVZX EDI,byte ptr [R14 + RCX*0x1 + 0x3]\nMOV EBX,EDI\nAND BL,0xf8\nCMP BL,0x30\nJNZ 0x00409680\nADD RCX,0x3\nSHL SIL,0x6\nSHL R8B,0x3\nADD R8B,SIL\nADD R8B,DIL\nADD R8B,0x50\nJMP 0x00409685\nMOVZX R8D,byte ptr [R14 + RCX*0x1]\nMOV byte ptr [RDX],R8B\nINC RCX\nINC RDX\nCMP RCX,RAX\nJC 0x00409620\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p424
S'41 56\n53\n50\n49 89 fe\ne8 24 87 ff ff\n48 ff c0\n0f 84 7e 00 00 00\n31 c9\n4c 89 f2\n66 0f 1f 44 00 00\n48 8d 71 04\n48 39 c6\n73 57\n41 80 3c 0e 5c\n75 50\n41 0f b6 74 0e 01\n89 f3\n80 e3 fc\n80 fb 30\n75 40\n45 0f b6 44 0e 02\n44 89 c3\n80 e3 f8\n80 fb 30\n75 2f\n41 0f b6 7c 0e 03\n89 fb\n80 e3 f8\n80 fb 30\n75 1f\n48 83 c1 03\n40 c0 e6 06\n41 c0 e0 03\n41 00 f0\n41 00 f8\n41 80 c0 50\neb 0c\n45 0f b6 04 0e\n44 88 02\n48 ff c1\n48 ff c2\n48 39 c1\n72 8d\n48 83 c4 08\n5b\n41 5e\nc3\n'
p425
S'.text:0000000000409600\n.text:0000000000409602\n.text:0000000000409603\n.text:0000000000409604\n.text:0000000000409607\n.text:000000000040960c\n.text:000000000040960f\n.text:0000000000409615\n.text:0000000000409617\n.text:000000000040961a\n.text:0000000000409620\n.text:0000000000409624\n.text:0000000000409627\n.text:0000000000409629\n.text:000000000040962e\n.text:0000000000409630\n.text:0000000000409636\n.text:0000000000409638\n.text:000000000040963b\n.text:000000000040963e\n.text:0000000000409640\n.text:0000000000409646\n.text:0000000000409649\n.text:000000000040964c\n.text:000000000040964f\n.text:0000000000409651\n.text:0000000000409657\n.text:0000000000409659\n.text:000000000040965c\n.text:000000000040965f\n.text:0000000000409661\n.text:0000000000409665\n.text:0000000000409669\n.text:000000000040966d\n.text:0000000000409670\n.text:0000000000409673\n.text:0000000000409677\n.text:0000000000409680\n.text:0000000000409685\n.text:0000000000409688\n.text:000000000040968b\n.text:000000000040968e\n.text:0000000000409691\n.text:0000000000409693\n.text:0000000000409697\n.text:0000000000409698\n.text:000000000040969a\n'
p426
tp427
sS'fstat'
p428
(S'\n__stdcall fstat(int __fd, stat * __buf)\n'
p429
V\u000aint fstat(int __fd,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___fxstat_00611208)(1,(ulong)(uint)__fd,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p430
S'MOV RDX,RSI\nMOV ESI,EDI\nMOV EDI,0x1\nJMP 0x00401fa0\n'
p431
S'48 89 f2\n89 fe\nbf 01 00 00 00\ne9 41 70 ff ff\n'
p432
S'.text:000000000040af50\n.text:000000000040af53\n.text:000000000040af55\n.text:000000000040af5a\n'
p433
tp434
sS'fscanf'
p435
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p436
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_00611138)();\u000a  return iVar1;\u000a}\u000a\u000a
p437
S'JMP qword ptr [0x00611138]\n'
p438
S'ff 25 32 f3 20 00\n'
p439
S'.plt:0000000000401e00\n'
p440
tp441
sS'strftime'
p442
(S'\n__stdcall strftime(char * __s, size_t __maxsize, char * __format, tm * __tp)\n'
p443
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strftime_00611258)();\u000a  return sVar1;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x00611258]\n'
p445
S'ff 25 12 f2 20 00\n'
p446
S'.plt:0000000000402040\n'
p447
tp448
sS'memcpy'
p449
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p450
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_006111a0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x006111a0]\n'
p452
S'ff 25 ca f2 20 00\n'
p453
S'.plt:0000000000401ed0\n'
p454
tp455
sS'close_stdout_set_ignore_EPIPE'
p456
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p457
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p458
S'MOV byte ptr [0x00611470],DIL\nRET\n'
p459
S'40 88 3d 49 c9 20 00\nc3\n'
p460
S'.text:0000000000404b20\n.text:0000000000404b27\n'
p461
tp462
sS'human_fstype'
p463
(S'\n__stdcall human_fstype(statfs * statfsbuf)\n'
p464
V\u000achar * human_fstype(statfs *statfsbuf)\u000a\u000a{\u000a  long lVar1;\u000a  char buf [29];\u000a  \u000a  lVar1 = statfsbuf->f_type;\u000a  if (lVar1 < 0x1badface) {\u000a    if (lVar1 < 0x9fa1) {\u000a      if (lVar1 < 0x4244) {\u000a        if (lVar1 < 0x1cd1) {\u000a          if (lVar1 < 0x1373) {\u000a            if (lVar1 == 0x2f) {\u000a              return "qnx4";\u000a            }\u000a            if (lVar1 == 0x187) {\u000a              return "autofs";\u000a            }\u000a            if (lVar1 == 0x7c0) {\u000a              return "jffs";\u000a            }\u000a          }\u000a          else {\u000a            switch(lVar1) {\u000a            case 0x1373:\u000a              return "devfs";\u000a            case 0x137d:\u000a              return "ext";\u000a            case 0x137f:\u000a              return "minix";\u000a            case 0x138f:\u000a              return "minix (30 char.)";\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0x3434) {\u000a            if (lVar1 == 0x1cd1) {\u000a              return "devpts";\u000a            }\u000a            if (lVar1 == 0x2468) {\u000a              return "minix v2";\u000a            }\u000a            if (lVar1 == 0x2478) {\u000a              return "minix v2 (30 char.)";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x4004) {\u000a              if (lVar1 == 0x3434) {\u000a                return "nilfs";\u000a              }\u000a              if (lVar1 == 0x4000) {\u000aLAB_004039df:\u000a                return "isofs";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x4004) goto LAB_004039df;\u000a              if (lVar1 == 0x4006) {\u000a                return "fat";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        if (lVar1 < 0x564c) {\u000a          if (lVar1 < 0x4d44) {\u000a            if (lVar1 == 0x4244) {\u000a              return "hfs";\u000a            }\u000a            if (lVar1 == 0x482b) {\u000a              return "hfs+";\u000a            }\u000a            if (lVar1 == 0x4858) {\u000a              return "hfsx";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 == 0x4d44) {\u000a              return "msdos";\u000a            }\u000a            if (lVar1 == 0x4d5a) {\u000a              return "minix3";\u000a            }\u000a            if (lVar1 == 0x517b) {\u000a              return "smb";\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0x7275) {\u000a            if (lVar1 == 0x564c) {\u000a              return "novell";\u000a            }\u000a            if (lVar1 == 0x5df5) {\u000a              return "exofs";\u000a            }\u000a            if (lVar1 == 0x6969) {\u000a              return "nfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x9660) {\u000a              if (lVar1 == 0x7275) {\u000a                return "romfs";\u000a              }\u000a              if (lVar1 == 0x72b6) {\u000a                return "jffs2";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x9660) {\u000a                return "isofs";\u000a              }\u000a              if (lVar1 == 0x9fa0) {\u000a                return "proc";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if (lVar1 < 0x1161970) {\u000a        if (lVar1 < 0x11954) {\u000a          if (lVar1 < 0xadff) {\u000a            if (lVar1 == 0x9fa1) {\u000a              return "openprom";\u000a            }\u000a            if (lVar1 == 0x9fa2) {\u000a              return "usbdevfs";\u000a            }\u000a            if (lVar1 == 0xadf5) {\u000a              return "adfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0xef53) {\u000a              if (lVar1 == 0xadff) {\u000a                return "affs";\u000a              }\u000a              if (lVar1 == 0xef51) {\u000a                return "ext2";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0xef53) {\u000a                return "ext2/ext3";\u000a              }\u000a              if (lVar1 == 0xf15f) {\u000a                return "ecryptfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0xc0ffee) {\u000a            if (lVar1 == 0x11954) {\u000aLAB_004039d5:\u000a              return "ufs";\u000a            }\u000a            if (lVar1 == 0x27e0eb) {\u000a              return "cgroupfs";\u000a            }\u000a            if (lVar1 == 0x414a53) {\u000a              return "efs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x1021994) {\u000a              if (lVar1 == 0xc0ffee) {\u000a                return "hostfs";\u000a              }\u000a              if (lVar1 == 0xc36400) {\u000a                return "ceph";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x1021994) {\u000a                return "tmpfs";\u000a              }\u000a              if (lVar1 == 0x1021997) {\u000a                return "v9fs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        if (lVar1 < 0x9041934) {\u000a          if (lVar1 < 0x12ff7b4) {\u000a            if (lVar1 == 0x1161970) {\u000a              return "gfs/gfs2";\u000a            }\u000a            if (lVar1 == 0x12fd16d) {\u000a              return "xia";\u000a            }\u000a          }\u000a          else {\u000a            switch(lVar1) {\u000a            case 0x12ff7b4:\u000a              return "xenix";\u000a            case 0x12ff7b5:\u000a              return "sysv4";\u000a            case 0x12ff7b6:\u000a              return "sysv2";\u000a            case 0x12ff7b7:\u000a              return "coh";\u000a            }\u000a            if (lVar1 == 0x13111a8) {\u000a              return "ibrix";\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0x11307854) {\u000a            if (lVar1 == 0x9041934) {\u000a              return "anon-inode FS";\u000a            }\u000a            if (lVar1 == 0xbad1dea) {\u000a              return "futexfs";\u000a            }\u000a            if (lVar1 == 0xbd00bd0) {\u000a              return "lustre";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x19800202) {\u000a              if (lVar1 == 0x11307854) {\u000a                return "inodefs";\u000a              }\u000a              if (lVar1 == 0x15013346) {\u000a                return "udf";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x19800202) {\u000a                return "mqueue";\u000a              }\u000a              if (lVar1 == 0x19830326) {\u000a                return "fhgfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    if (lVar1 < 0x65735546) {\u000a      if (lVar1 < 0x5346414f) {\u000a        if (lVar1 < 0x42465331) {\u000a          if (lVar1 < 0x2bad1dea) {\u000a            if (lVar1 == 0x1badface) {\u000a              return "bfs";\u000a            }\u000a            if (lVar1 == 0x24051905) {\u000a              return "ubifs";\u000a            }\u000a            if (lVar1 == 0x28cd3d45) {\u000a              return "cramfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 == 0x2bad1dea) {\u000a              return "inotifyfs";\u000a            }\u000a            if (lVar1 == 0x2fc12fc1) {\u000a              return "zfs";\u000a            }\u000a            if (lVar1 == 0x3153464a) {\u000a              return "jfs";\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0x453dcd28) {\u000a            if (lVar1 == 0x42465331) {\u000a              return "befs";\u000a            }\u000a            if (lVar1 == 0x42494e4d) {\u000a              return "binfmt_misc";\u000a            }\u000a            if (lVar1 == 0x43415d53) {\u000a              return "smackfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x50495045) {\u000a              if (lVar1 == 0x453dcd28) {\u000a                return "cramfs-wend";\u000a              }\u000a              if (lVar1 == 0x47504653) {\u000a                return "gpfs";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x50495045) {\u000a                return "pipefs";\u000a              }\u000a              if (lVar1 == 0x52654973) {\u000a                return "reiserfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        if (lVar1 < 0x6165676c) {\u000a          if (lVar1 < 0x54190100) {\u000a            if (lVar1 == 0x5346414f) {\u000a              return "afs";\u000a            }\u000a            if (lVar1 == 0x5346544e) {\u000a              return "ntfs";\u000a            }\u000a            if (lVar1 == 0x534f434b) {\u000a              return "sockfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x58465342) {\u000a              if (lVar1 == 0x54190100) goto LAB_004039d5;\u000a              if (lVar1 == 0x565a4653) {\u000a                return "vzfs";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x58465342) {\u000a                return "xfs";\u000a              }\u000a              if (lVar1 == 0x61636673) {\u000a                return "acfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0x62656570) {\u000a            if (lVar1 == 0x6165676c) {\u000a              return "pstorefs";\u000a            }\u000a            if (lVar1 == 0x61756673) {\u000a              return "aufs";\u000a            }\u000a            if (lVar1 == 0x62646576) {\u000a              return "bdevfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x64626720) {\u000a              if (lVar1 == 0x62656570) {\u000a                return "configfs";\u000a              }\u000a              if (lVar1 == 0x62656572) {\u000a                return "sysfs";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x64626720) {\u000a                return "debugfs";\u000a              }\u000a              if (lVar1 == 0x65735543) {\u000a                return "fusectl";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if (lVar1 < 0x9123683e) {\u000a        if (lVar1 < 0x73717368) {\u000a          if (lVar1 < 0x6b414653) {\u000a            if (lVar1 == 0x65735546) {\u000a              return "fuseblk";\u000a            }\u000a            if (lVar1 == 0x67596969) {\u000a              return "rpc_pipefs";\u000a            }\u000a            if (lVar1 == 0x68191122) {\u000a              return "qnx6";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x6e736673) {\u000a              if (lVar1 == 0x6b414653) {\u000a                return "k-afs";\u000a              }\u000a              if (lVar1 == 0x6e667364) {\u000a                return "nfsd";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x6e736673) {\u000a                return "nsfs";\u000a              }\u000a              if (lVar1 == 0x73636673) {\u000a                return "securityfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0x7461636f) {\u000a            if (lVar1 == 0x73717368) {\u000a              return "squashfs";\u000a            }\u000a            if (lVar1 == 0x73727279) {\u000a              return "btrfs_test";\u000a            }\u000a            if (lVar1 == 0x73757245) {\u000a              return "coda";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0x794c7630) {\u000a              if (lVar1 == 0x7461636f) {\u000a                return "ocfs2";\u000a              }\u000a              if (lVar1 == 0x74726163) {\u000a                return "tracefs";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0x794c7630) {\u000a                return "overlayfs";\u000a              }\u000a              if (lVar1 == 0x858458f6) {\u000a                return "ramfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a      else {\u000a        if (lVar1 < 0xc97e8168) {\u000a          if (lVar1 < 0xaad7aaea) {\u000a            if (lVar1 == 0x9123683e) {\u000a              return "btrfs";\u000a            }\u000a            if (lVar1 == 0x958458f6) {\u000a              return "hugetlbfs";\u000a            }\u000a            if (lVar1 == 0xa501fcf5) {\u000a              return "vxfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0xbacbacbc) {\u000a              if (lVar1 == 0xaad7aaea) {\u000a                return "panfs";\u000a              }\u000a              if (lVar1 == 0xabba1974) {\u000a                return "xenfs";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0xbacbacbc) {\u000a                return "vmhgfs";\u000a              }\u000a              if (lVar1 == 0xbeefdead) {\u000a                return "snfs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          if (lVar1 < 0xf2f52010) {\u000a            if (lVar1 == 0xc97e8168) {\u000a              return "logfs";\u000a            }\u000a            if (lVar1 == 0xcafe4a11) {\u000a              return "bpf_fs";\u000a            }\u000a            if (lVar1 == 0xde5e81e4) {\u000a              return "efivarfs";\u000a            }\u000a          }\u000a          else {\u000a            if (lVar1 < 0xf995e849) {\u000a              if (lVar1 == 0xf2f52010) {\u000a                return "f2fs";\u000a              }\u000a              if (lVar1 == 0xf97cff8c) {\u000a                return "selinux";\u000a              }\u000a            }\u000a            else {\u000a              if (lVar1 == 0xf995e849) {\u000a                return "hpfs";\u000a              }\u000a              if (lVar1 == 0xff534d42) {\u000a                return "cifs";\u000a              }\u000a            }\u000a          }\u000a        }\u000a      }\u000a    }\u000a  }\u000a  __sprintf_chk(0x6113f0,1,0x1d,"UNKNOWN (0x%lx)");\u000a  return (char *)&ram0x006113f0;\u000a}\u000a\u000a
p465
S'PUSH RBX\nMOV R8,qword ptr [RDI]\nCMP R8,0x1badfacd\nJG 0x00403102\nCMP R8,0x9fa0\nJLE 0x00403168\nCMP R8,0x116196f\nJG 0x00403209\nCMP R8,0x11953\nJG 0x0040332b\nCMP R8,0xadfe\nJLE 0x0040351a\nCMP R8,0xef52\nJG 0x004037fc\nCMP R8,0xadff\nJZ 0x004039e9\nCMP R8,0xef51\nJNZ 0x00403c42\nMOV EBX,0x40c8e1\nJMP 0x00403c62\nCMP R8,0x65735545\nJLE 0x004031b1\nMOV EAX,0x9123683d\nCMP R8,RAX\nJG 0x00403245\nCMP R8,0x73717367\nJG 0x00403369\nCMP R8,0x6b414652\nJLE 0x0040354b\nCMP R8,0x6e736672\nJG 0x00403820\nCMP R8,0x6b414653\nJZ 0x004039f3\nCMP R8,0x6e667364\nJNZ 0x00403c42\nMOV EBX,0x40c9ca\nJMP 0x00403c62\nCMP R8,0x4243\nJG 0x00403295\nCMP R8,0x1cd0\nJG 0x004033a7\nCMP R8,0x1372\nJLE 0x0040357c\nLEA RAX,[-0x1373 + R8]\nCMP RAX,0x1c\nJA 0x00403c42\nJMP qword ptr [0x40b438 + RAX*0x8]\nMOV EBX,0x40ca91\nJMP 0x00403c62\nCMP R8,0x5346414e\nJLE 0x004032e0\nCMP R8,0x6165676b\nJG 0x004033e0\nCMP R8,0x541900ff\nJLE 0x004035aa\nCMP R8,0x58465341\nJG 0x00403844\nCMP R8,0x54190100\nJZ 0x004039d5\nCMP R8,0x565a4653\nJNZ 0x00403c42\nMOV EBX,0x40caa8\nJMP 0x00403c62\nCMP R8,0x9041933\nJG 0x0040341e\nCMP R8,0x12ff7b3\nJLE 0x00403868\nLEA RAX,[-0x12ff7b4 + R8]\nCMP RAX,0x3\nJA 0x00403a1b\nJMP qword ptr [0x40b520 + RAX*0x8]\nMOV EBX,0x40cab3\nJMP 0x00403c62\nMOV EAX,0xc97e8167\nCMP R8,RAX\nJG 0x0040345c\nMOV EAX,0xaad7aae9\nCMP R8,RAX\nJLE 0x004035db\nMOV EAX,0xbacbacbb\nCMP R8,RAX\nJG 0x0040388c\nMOV EAX,0xaad7aaea\nCMP R8,RAX\nJZ 0x00403a50\nMOV EAX,0xabba1974\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40caad\nJMP 0x00403c62\nCMP R8,0x564b\nJLE 0x0040349e\nCMP R8,0x7274\nJLE 0x0040360f\nCMP R8,0x965f\nJG 0x004038b2\nCMP R8,0x7275\nJZ 0x00403a5a\nCMP R8,0x72b6\nJNZ 0x00403c42\nMOV EBX,0x40c95e\nJMP 0x00403c62\nCMP R8,0x42465330\nJLE 0x004034dc\nCMP R8,0x453dcd27\nJLE 0x00403640\nCMP R8,0x50495044\nJG 0x004038d6\nCMP R8,0x453dcd28\nJZ 0x00403a64\nCMP R8,0x47504653\nJNZ 0x00403c42\nMOV EBX,0x40c916\nJMP 0x00403c62\nCMP R8,0xc0ffed\nJLE 0x00403671\nCMP R8,0x1021993\nJG 0x004038fa\nCMP R8,0xc0ffee\nJZ 0x00403a6e\nCMP R8,0xc36400\nJNZ 0x00403c42\nMOV EBX,0x40c874\nJMP 0x00403c62\nCMP R8,0x7461636e\nJLE 0x004036a2\nCMP R8,0x794c762f\nJG 0x0040391e\nCMP R8,0x7461636f\nJZ 0x00403a78\nCMP R8,0x74726163\nJNZ 0x00403c42\nMOV EBX,0x40ca7c\nJMP 0x00403c62\nCMP R8,0x3433\nJLE 0x004036d3\nCMP R8,0x4003\nJG 0x00403943\nCMP R8,0x3434\nJZ 0x00403a82\nCMP R8,0x4000\nJZ 0x004039df\nJMP 0x00403c42\nCMP R8,0x6265656f\nJLE 0x00403704\nCMP R8,0x6462671f\nJG 0x00403967\nCMP R8,0x62656570\nJZ 0x00403a8c\nCMP R8,0x62656572\nJNZ 0x00403c42\nMOV EBX,0x40ca64\nJMP 0x00403c62\nCMP R8,0x11307853\nJLE 0x00403735\nCMP R8,0x19800201\nJG 0x0040398b\nCMP R8,0x11307854\nJZ 0x00403a96\nCMP R8,0x15013346\nJNZ 0x00403c42\nMOV EBX,0x40ca8a\nJMP 0x00403c62\nMOV EAX,0xf2f5200f\nCMP R8,RAX\nJLE 0x00403766\nMOV EAX,0xf995e848\nCMP R8,RAX\nJG 0x004039af\nMOV EAX,0xf2f52010\nCMP R8,RAX\nJZ 0x00403aa0\nMOV EAX,0xf97cff8c\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40ca3b\nJMP 0x00403c62\nCMP R8,0x4d43\nJG 0x0040379a\nCMP R8,0x4244\nJZ 0x00403aaa\nCMP R8,0x482b\nJZ 0x00403ab4\nCMP R8,0x4858\nJNZ 0x00403c42\nMOV EBX,0x40c920\nJMP 0x00403c62\nCMP R8,0x2bad1de9\nJG 0x004037cb\nCMP R8,0x1badface\nJZ 0x00403abe\nCMP R8,0x24051905\nJZ 0x00403ac8\nCMP R8,0x28cd3d45\nJNZ 0x00403c42\nMOV EBX,0x40c899\nJMP 0x00403c62\nCMP R8,0x9fa1\nJZ 0x00403ad2\nCMP R8,0x9fa2\nJZ 0x00403adc\nCMP R8,0xadf5\nJNZ 0x00403c42\nMOV EBX,0x40c827\nJMP 0x00403c62\nCMP R8,0x65735546\nJZ 0x00403ae6\nCMP R8,0x67596969\nJZ 0x00403af0\nCMP R8,0x68191122\nJNZ 0x00403c42\nMOV EBX,0x40ca11\nJMP 0x00403c62\nCMP R8,0x2f\nJZ 0x00403afa\nCMP R8,0x187\nJZ 0x00403b04\nCMP R8,0x7c0\nJNZ 0x00403c42\nMOV EBX,0x40c959\nJMP 0x00403c62\nCMP R8,0x5346414f\nJZ 0x00403b0e\nCMP R8,0x5346544e\nJZ 0x00403b18\nCMP R8,0x534f434b\nJNZ 0x00403c42\nMOV EBX,0x40ca54\nJMP 0x00403c62\nMOV EAX,0x9123683e\nCMP R8,RAX\nJZ 0x00403b22\nMOV EAX,0x958458f6\nCMP R8,RAX\nJZ 0x00403b2c\nMOV EAX,0xa501fcf5\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40caa3\nJMP 0x00403c62\nCMP R8,0x564c\nJZ 0x00403b36\nCMP R8,0x5df5\nJZ 0x00403b40\nCMP R8,0x6969\nJNZ 0x00403c42\nMOV EBX,0x40c9fa\nJMP 0x00403c62\nCMP R8,0x42465331\nJZ 0x00403b4a\nCMP R8,0x42494e4d\nJZ 0x00403b54\nCMP R8,0x43415d53\nJNZ 0x00403c42\nMOV EBX,0x40ca43\nJMP 0x00403c62\nCMP R8,0x11954\nJZ 0x004039d5\nCMP R8,0x27e0eb\nJZ 0x00403b5e\nCMP R8,0x414a53\nJNZ 0x00403c42\nMOV EBX,0x40c84c\nJMP 0x00403c62\nCMP R8,0x73717368\nJZ 0x00403b68\nCMP R8,0x73727279\nJZ 0x00403b72\nCMP R8,0x73757245\nJNZ 0x00403c42\nMOV EBX,0x40c887\nJMP 0x00403c62\nCMP R8,0x1cd1\nJZ 0x00403b7c\nCMP R8,0x2468\nJZ 0x00403b86\nCMP R8,0x2478\nJNZ 0x00403c42\nMOV EBX,0x40c99b\nJMP 0x00403c62\nCMP R8,0x6165676c\nJZ 0x00403b90\nCMP R8,0x61756673\nJZ 0x00403b9a\nCMP R8,0x62646576\nJNZ 0x00403c42\nMOV EBX,0x40ca90\nJMP 0x00403c62\nCMP R8,0x9041934\nJZ 0x00403ba4\nCMP R8,0xbad1dea\nJZ 0x00403bae\nCMP R8,0xbd00bd0\nJNZ 0x00403c42\nMOV EBX,0x40c974\nJMP 0x00403c62\nMOV EAX,0xc97e8168\nCMP R8,RAX\nJZ 0x00403bb8\nMOV EAX,0xcafe4a11\nCMP R8,RAX\nJZ 0x00403bc2\nMOV EAX,0xde5e81e4\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40c8c4\nJMP 0x00403c62\nCMP R8,0x4d44\nJZ 0x00403bcc\nCMP R8,0x4d5a\nJZ 0x00403bd6\nCMP R8,0x517b\nJNZ 0x00403c42\nMOV EBX,0x40ca4b\nJMP 0x00403c62\nCMP R8,0x2bad1dea\nJZ 0x00403be0\nCMP R8,0x2fc12fc1\nJZ 0x00403be7\nCMP R8,0x3153464a\nJNZ 0x00403c42\nMOV EBX,0x40c964\nJMP 0x00403c62\nCMP R8,0xef53\nJZ 0x00403bee\nCMP R8,0xf15f\nJNZ 0x00403c42\nMOV EBX,0x40c8bb\nJMP 0x00403c62\nCMP R8,0x6e736673\nJZ 0x00403bf5\nCMP R8,0x73636673\nJNZ 0x00403c42\nMOV EBX,0x40ca30\nJMP 0x00403c62\nCMP R8,0x58465342\nJZ 0x00403bfc\nCMP R8,0x61636673\nJNZ 0x00403c42\nMOV EBX,0x40c822\nJMP 0x00403c62\nCMP R8,0x1161970\nJZ 0x00403c03\nCMP R8,0x12fd16d\nJNZ 0x00403c42\nMOV EBX,0x40cab9\nJMP 0x00403c62\nMOV EAX,0xbacbacbc\nCMP R8,RAX\nJZ 0x00403c0a\nMOV EAX,0xbeefdead\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40ca4f\nJMP 0x00403c62\nCMP R8,0x9660\nJZ 0x00403c11\nCMP R8,0x9fa0\nJNZ 0x00403c42\nMOV EBX,0x40c9fe\nJMP 0x00403c62\nCMP R8,0x50495045\nJZ 0x00403c18\nCMP R8,0x52654973\nJNZ 0x00403c42\nMOV EBX,0x40ca16\nJMP 0x00403c62\nCMP R8,0x1021994\nJZ 0x00403c1f\nCMP R8,0x1021997\nJNZ 0x00403c42\nMOV EBX,0x40ca97\nJMP 0x00403c62\nCMP R8,0x794c7630\nJZ 0x00403c26\nMOV EAX,0x858458f6\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40c89a\nJMP 0x00403c62\nCMP R8,0x4004\nJZ 0x004039df\nCMP R8,0x4006\nJNZ 0x00403c42\nMOV EBX,0x40c8eb\nJMP 0x00403c62\nCMP R8,0x64626720\nJZ 0x00403c2d\nCMP R8,0x65735543\nJNZ 0x00403c42\nMOV EBX,0x40c8fd\nJMP 0x00403c62\nCMP R8,0x19800202\nJZ 0x00403c34\nCMP R8,0x19830326\nJNZ 0x00403c42\nMOV EBX,0x40c8ef\nJMP 0x00403c62\nMOV EAX,0xf995e849\nCMP R8,RAX\nJZ 0x00403c3b\nMOV EAX,0xff534d42\nCMP R8,RAX\nJNZ 0x00403c42\nMOV EBX,0x40c882\nJMP 0x00403c62\nMOV EBX,0x40c840\nJMP 0x00403c62\nMOV EBX,0x40c953\nJMP 0x00403c62\nMOV EBX,0x40c82c\nJMP 0x00403c62\nMOV EBX,0x40c968\nJMP 0x00403c62\nMOV EBX,0x40c8d3\nJMP 0x00403c62\nMOV EBX,0x40c97b\nJMP 0x00403c62\nMOV EBX,0x40c981\nJMP 0x00403c62\nCMP R8,0x13111a8\nJNZ 0x00403c42\nMOV EBX,0x40c943\nJMP 0x00403c62\nMOV EBX,0x40ca70\nJMP 0x00403c62\nMOV EBX,0x40ca6a\nJMP 0x00403c62\nMOV EBX,0x40c88c\nJMP 0x00403c62\nMOV EBX,0x40c9f8\nJMP 0x00403c62\nMOV EBX,0x40ca1f\nJMP 0x00403c62\nMOV EBX,0x40c8a0\nJMP 0x00403c62\nMOV EBX,0x40c925\nJMP 0x00403c62\nMOV EBX,0x40c9e8\nJMP 0x00403c62\nMOV EBX,0x40c9cf\nJMP 0x00403c62\nMOV EBX,0x40c890\nJMP 0x00403c62\nMOV EBX,0x40c93b\nJMP 0x00403c62\nMOV EBX,0x40c8e6\nJMP 0x00403c62\nMOV EBX,0x40ca60\nJMP 0x00403c62\nMOV EBX,0x40c91b\nJMP 0x00403c62\nMOV EBX,0x40c937\nJMP 0x00403c62\nMOV EBX,0x40ca84\nJMP 0x00403c62\nMOV EBX,0x40c9df\nJMP 0x00403c62\nMOV EBX,0x40ca8e\nJMP 0x00403c62\nMOV EBX,0x40c8f5\nJMP 0x00403c62\nMOV EBX,0x40ca25\nJMP 0x00403c62\nMOV EBX,0x40ca0c\nJMP 0x00403c62\nMOV EBX,0x40c844\nJMP 0x00403c62\nMOV EBX,0x40c96a\nJMP 0x00403c62\nMOV EBX,0x40c9da\nJMP 0x00403c62\nMOV EBX,0x40c863\nJMP 0x00403c62\nMOV EBX,0x40c931\nJMP 0x00403c62\nMOV EBX,0x40c9c3\nJMP 0x00403c62\nMOV EBX,0x40c8cd\nJMP 0x00403c62\nMOV EBX,0x40c84b\nJMP 0x00403c62\nMOV EBX,0x40c857\nJMP 0x00403c62\nMOV EBX,0x40c879\nJMP 0x00403c62\nMOV EBX,0x40ca5b\nJMP 0x00403c62\nMOV EBX,0x40c869\nJMP 0x00403c62\nMOV EBX,0x40c8b4\nJMP 0x00403c62\nMOV EBX,0x40c992\nJMP 0x00403c62\nMOV EBX,0x40ca03\nJMP 0x00403c62\nMOV EBX,0x40c83f\nJMP 0x00403c62\nMOV EBX,0x40c831\nJMP 0x00403c62\nMOV EBX,0x40c905\nJMP 0x00403c62\nMOV EBX,0x40c96e\nJMP 0x00403c62\nMOV EBX,0x40c850\nJMP 0x00403c62\nMOV EBX,0x40c9bd\nJMP 0x00403c62\nMOV EBX,0x40c9af\nJMP 0x00403c62\nMOV EBX,0x40c949\nJMP 0x00403c62\nMOV EBX,0x40caa9\nJMP 0x00403c62\nMOV EBX,0x40c8d7\nJMP 0x00403c62\nMOV EBX,0x40c9d5\nJMP 0x00403c62\nMOV EBX,0x40c909\nJMP 0x00403c62\nMOV EBX,0x40c90d\nJMP 0x00403c62\nMOV EBX,0x40ca9c\nJMP 0x00403c62\nMOV EBX,0x40c953\nJMP 0x00403c62\nMOV EBX,0x40ca29\nJMP 0x00403c62\nMOV EBX,0x40ca76\nJMP 0x00403c62\nMOV EBX,0x40c9ee\nJMP 0x00403c62\nMOV EBX,0x40c8ac\nJMP 0x00403c62\nMOV EBX,0x40c9b6\nJMP 0x00403c62\nMOV EBX,0x40c92c\nJMP 0x00403c62\nMOV EBX,0x6113f0\nMOV EDI,0x6113f0\nMOV ESI,0x1\nMOV EDX,0x1d\nMOV ECX,0x40cabd\nXOR EAX,EAX\nCALL 0x00402180\nMOV RAX,RBX\nPOP RBX\nRET\n'
p466
S'53\n4c 8b 07\n49 81 f8 cd fa ad 1b\n7f 65\n49 81 f8 a0 9f 00 00\n0f 8e be 00 00 00\n49 81 f8 6f 19 16 01\n0f 8f 52 01 00 00\n49 81 f8 53 19 01 00\n0f 8f 67 02 00 00\n49 81 f8 fe ad 00 00\n0f 8e 49 04 00 00\n49 81 f8 52 ef 00 00\n0f 8f 1e 07 00 00\n49 81 f8 ff ad 00 00\n0f 84 fe 08 00 00\n49 81 f8 51 ef 00 00\n0f 85 4a 0b 00 00\nbb e1 c8 40 00\ne9 60 0b 00 00\n49 81 f8 45 55 73 65\n0f 8e a2 00 00 00\nb8 3d 68 23 91\n49 39 c0\n0f 8f 28 01 00 00\n49 81 f8 67 73 71 73\n0f 8f 3f 02 00 00\n49 81 f8 52 46 41 6b\n0f 8e 14 04 00 00\n49 81 f8 72 66 73 6e\n0f 8f dc 06 00 00\n49 81 f8 53 46 41 6b\n0f 84 a2 08 00 00\n49 81 f8 64 73 66 6e\n0f 85 e4 0a 00 00\nbb ca c9 40 00\ne9 fa 0a 00 00\n49 81 f8 43 42 00 00\n0f 8f 20 01 00 00\n49 81 f8 d0 1c 00 00\n0f 8f 25 02 00 00\n49 81 f8 72 13 00 00\n0f 8e ed 03 00 00\n49 8d 80 8d ec ff ff\n48 83 f8 1c\n0f 87 a2 0a 00 00\nff 24 c5 38 b4 40 00\nbb 91 ca 40 00\ne9 b1 0a 00 00\n49 81 f8 4e 41 46 53\n0f 8e 22 01 00 00\n49 81 f8 6b 67 65 61\n0f 8f 15 02 00 00\n49 81 f8 ff 00 19 54\n0f 8e d2 03 00 00\n49 81 f8 41 53 46 58\n0f 8f 5f 06 00 00\n49 81 f8 00 01 19 54\n0f 84 e3 07 00 00\n49 81 f8 53 46 5a 56\n0f 85 43 0a 00 00\nbb a8 ca 40 00\ne9 59 0a 00 00\n49 81 f8 33 19 04 09\n0f 8f 08 02 00 00\n49 81 f8 b3 f7 2f 01\n0f 8e 45 06 00 00\n49 8d 80 4c 08 d0 fe\n48 83 f8 03\n0f 87 e7 07 00 00\nff 24 c5 20 b5 40 00\nbb b3 ca 40 00\ne9 1d 0a 00 00\nb8 67 81 7e c9\n49 39 c0\n0f 8f 09 02 00 00\nb8 e9 aa d7 aa\n49 39 c0\n0f 8e 7a 03 00 00\nb8 bb ac cb ba\n49 39 c0\n0f 8f 1d 06 00 00\nb8 ea aa d7 aa\n49 39 c0\n0f 84 d3 07 00 00\nb8 74 19 ba ab\n49 39 c0\n0f 85 b7 09 00 00\nbb ad ca 40 00\ne9 cd 09 00 00\n49 81 f8 4b 56 00 00\n0f 8e fc 01 00 00\n49 81 f8 74 72 00 00\n0f 8e 60 03 00 00\n49 81 f8 5f 96 00 00\n0f 8f f6 05 00 00\n49 81 f8 75 72 00 00\n0f 84 91 07 00 00\n49 81 f8 b6 72 00 00\n0f 85 6c 09 00 00\nbb 5e c9 40 00\ne9 82 09 00 00\n49 81 f8 30 53 46 42\n0f 8e ef 01 00 00\n49 81 f8 27 cd 3d 45\n0f 8e 46 03 00 00\n49 81 f8 44 50 49 50\n0f 8f cf 05 00 00\n49 81 f8 28 cd 3d 45\n0f 84 50 07 00 00\n49 81 f8 53 46 50 47\n0f 85 21 09 00 00\nbb 16 c9 40 00\ne9 37 09 00 00\n49 81 f8 ed ff c0 00\n0f 8e 39 03 00 00\n49 81 f8 93 19 02 01\n0f 8f b5 05 00 00\n49 81 f8 ee ff c0 00\n0f 84 1c 07 00 00\n49 81 f8 00 64 c3 00\n0f 85 e3 08 00 00\nbb 74 c8 40 00\ne9 f9 08 00 00\n49 81 f8 6e 63 61 74\n0f 8e 2c 03 00 00\n49 81 f8 2f 76 4c 79\n0f 8f 9b 05 00 00\n49 81 f8 6f 63 61 74\n0f 84 e8 06 00 00\n49 81 f8 63 61 72 74\n0f 85 a5 08 00 00\nbb 7c ca 40 00\ne9 bb 08 00 00\n49 81 f8 33 34 00 00\n0f 8e 1f 03 00 00\n49 81 f8 03 40 00 00\n0f 8f 82 05 00 00\n49 81 f8 34 34 00 00\n0f 84 b4 06 00 00\n49 81 f8 00 40 00 00\n0f 84 04 06 00 00\ne9 62 08 00 00\n49 81 f8 6f 65 65 62\n0f 8e 17 03 00 00\n49 81 f8 1f 67 62 64\n0f 8f 6d 05 00 00\n49 81 f8 70 65 65 62\n0f 84 85 06 00 00\n49 81 f8 72 65 65 62\n0f 85 2e 08 00 00\nbb 64 ca 40 00\ne9 44 08 00 00\n49 81 f8 53 78 30 11\n0f 8e 0a 03 00 00\n49 81 f8 01 02 80 19\n0f 8f 53 05 00 00\n49 81 f8 54 78 30 11\n0f 84 51 06 00 00\n49 81 f8 46 33 01 15\n0f 85 f0 07 00 00\nbb 8a ca 40 00\ne9 06 08 00 00\nb8 0f 20 f5 f2\n49 39 c0\n0f 8e fc 02 00 00\nb8 48 e8 95 f9\n49 39 c0\n0f 8f 37 05 00 00\nb8 10 20 f5 f2\n49 39 c0\n0f 84 1a 06 00 00\nb8 8c ff 7c f9\n49 39 c0\n0f 85 ae 07 00 00\nbb 3b ca 40 00\ne9 c4 07 00 00\n49 81 f8 43 4d 00 00\n0f 8f ef 02 00 00\n49 81 f8 44 42 00 00\n0f 84 f2 05 00 00\n49 81 f8 2b 48 00 00\n0f 84 ef 05 00 00\n49 81 f8 58 48 00 00\n0f 85 70 07 00 00\nbb 20 c9 40 00\ne9 86 07 00 00\n49 81 f8 e9 1d ad 2b\n0f 8f e2 02 00 00\n49 81 f8 ce fa ad 1b\n0f 84 c8 05 00 00\n49 81 f8 05 19 05 24\n0f 84 c5 05 00 00\n49 81 f8 45 3d cd 28\n0f 85 32 07 00 00\nbb 99 c8 40 00\ne9 48 07 00 00\n49 81 f8 a1 9f 00 00\n0f 84 ab 05 00 00\n49 81 f8 a2 9f 00 00\n0f 84 a8 05 00 00\n49 81 f8 f5 ad 00 00\n0f 85 01 07 00 00\nbb 27 c8 40 00\ne9 17 07 00 00\n49 81 f8 46 55 73 65\n0f 84 8e 05 00 00\n49 81 f8 69 69 59 67\n0f 84 8b 05 00 00\n49 81 f8 22 11 19 68\n0f 85 d0 06 00 00\nbb 11 ca 40 00\ne9 e6 06 00 00\n49 83 f8 2f\n0f 84 74 05 00 00\n49 81 f8 87 01 00 00\n0f 84 71 05 00 00\n49 81 f8 c0 07 00 00\n0f 85 a2 06 00 00\nbb 59 c9 40 00\ne9 b8 06 00 00\n49 81 f8 4f 41 46 53\n0f 84 57 05 00 00\n49 81 f8 4e 54 46 53\n0f 84 54 05 00 00\n49 81 f8 4b 43 4f 53\n0f 85 71 06 00 00\nbb 54 ca 40 00\ne9 87 06 00 00\nb8 3e 68 23 91\n49 39 c0\n0f 84 39 05 00 00\nb8 f6 58 84 95\n49 39 c0\n0f 84 35 05 00 00\nb8 f5 fc 01 a5\n49 39 c0\n0f 85 3d 06 00 00\nbb a3 ca 40 00\ne9 53 06 00 00\n49 81 f8 4c 56 00 00\n0f 84 1a 05 00 00\n49 81 f8 f5 5d 00 00\n0f 84 17 05 00 00\n49 81 f8 69 69 00 00\n0f 85 0c 06 00 00\nbb fa c9 40 00\ne9 22 06 00 00\n49 81 f8 31 53 46 42\n0f 84 fd 04 00 00\n49 81 f8 4d 4e 49 42\n0f 84 fa 04 00 00\n49 81 f8 53 5d 41 43\n0f 85 db 05 00 00\nbb 43 ca 40 00\ne9 f1 05 00 00\n49 81 f8 54 19 01 00\n0f 84 57 03 00 00\n49 81 f8 eb e0 27 00\n0f 84 d3 04 00 00\n49 81 f8 53 4a 41 00\n0f 85 aa 05 00 00\nbb 4c c8 40 00\ne9 c0 05 00 00\n49 81 f8 68 73 71 73\n0f 84 b9 04 00 00\n49 81 f8 79 72 72 73\n0f 84 b6 04 00 00\n49 81 f8 45 72 75 73\n0f 85 79 05 00 00\nbb 87 c8 40 00\ne9 8f 05 00 00\n49 81 f8 d1 1c 00 00\n0f 84 9c 04 00 00\n49 81 f8 68 24 00 00\n0f 84 99 04 00 00\n49 81 f8 78 24 00 00\n0f 85 48 05 00 00\nbb 9b c9 40 00\ne9 5e 05 00 00\n49 81 f8 6c 67 65 61\n0f 84 7f 04 00 00\n49 81 f8 73 66 75 61\n0f 84 7c 04 00 00\n49 81 f8 76 65 64 62\n0f 85 17 05 00 00\nbb 90 ca 40 00\ne9 2d 05 00 00\n49 81 f8 34 19 04 09\n0f 84 62 04 00 00\n49 81 f8 ea 1d ad 0b\n0f 84 5f 04 00 00\n49 81 f8 d0 0b d0 0b\n0f 85 e6 04 00 00\nbb 74 c9 40 00\ne9 fc 04 00 00\nb8 68 81 7e c9\n49 39 c0\n0f 84 44 04 00 00\nb8 11 4a fe ca\n49 39 c0\n0f 84 40 04 00 00\nb8 e4 81 5e de\n49 39 c0\n0f 85 b2 04 00 00\nbb c4 c8 40 00\ne9 c8 04 00 00\n49 81 f8 44 4d 00 00\n0f 84 25 04 00 00\n49 81 f8 5a 4d 00 00\n0f 84 22 04 00 00\n49 81 f8 7b 51 00 00\n0f 85 81 04 00 00\nbb 4b ca 40 00\ne9 97 04 00 00\n49 81 f8 ea 1d ad 2b\n0f 84 08 04 00 00\n49 81 f8 c1 2f c1 2f\n0f 84 02 04 00 00\n49 81 f8 4a 46 53 31\n0f 85 50 04 00 00\nbb 64 c9 40 00\ne9 66 04 00 00\n49 81 f8 53 ef 00 00\n0f 84 e5 03 00 00\n49 81 f8 5f f1 00 00\n0f 85 2c 04 00 00\nbb bb c8 40 00\ne9 42 04 00 00\n49 81 f8 73 66 73 6e\n0f 84 c8 03 00 00\n49 81 f8 73 66 63 73\n0f 85 08 04 00 00\nbb 30 ca 40 00\ne9 1e 04 00 00\n49 81 f8 42 53 46 58\n0f 84 ab 03 00 00\n49 81 f8 73 66 63 61\n0f 85 e4 03 00 00\nbb 22 c8 40 00\ne9 fa 03 00 00\n49 81 f8 70 19 16 01\n0f 84 8e 03 00 00\n49 81 f8 6d d1 2f 01\n0f 85 c0 03 00 00\nbb b9 ca 40 00\ne9 d6 03 00 00\nb8 bc ac cb ba\n49 39 c0\n0f 84 70 03 00 00\nb8 ad de ef be\n49 39 c0\n0f 85 9a 03 00 00\nbb 4f ca 40 00\ne9 b0 03 00 00\n49 81 f8 60 96 00 00\n0f 84 52 03 00 00\n49 81 f8 a0 9f 00 00\n0f 85 76 03 00 00\nbb fe c9 40 00\ne9 8c 03 00 00\n49 81 f8 45 50 49 50\n0f 84 35 03 00 00\n49 81 f8 73 49 65 52\n0f 85 52 03 00 00\nbb 16 ca 40 00\ne9 68 03 00 00\n49 81 f8 94 19 02 01\n0f 84 18 03 00 00\n49 81 f8 97 19 02 01\n0f 85 2e 03 00 00\nbb 97 ca 40 00\ne9 44 03 00 00\n49 81 f8 30 76 4c 79\n0f 84 fb 02 00 00\nb8 f6 58 84 85\n49 39 c0\n0f 85 09 03 00 00\nbb 9a c8 40 00\ne9 1f 03 00 00\n49 81 f8 04 40 00 00\n0f 84 8f 00 00 00\n49 81 f8 06 40 00 00\n0f 85 e5 02 00 00\nbb eb c8 40 00\ne9 fb 02 00 00\n49 81 f8 20 67 62 64\n0f 84 b9 02 00 00\n49 81 f8 43 55 73 65\n0f 85 c1 02 00 00\nbb fd c8 40 00\ne9 d7 02 00 00\n49 81 f8 02 02 80 19\n0f 84 9c 02 00 00\n49 81 f8 26 03 83 19\n0f 85 9d 02 00 00\nbb ef c8 40 00\ne9 b3 02 00 00\nb8 49 e8 95 f9\n49 39 c0\n0f 84 7e 02 00 00\nb8 42 4d 53 ff\n49 39 c0\n0f 85 77 02 00 00\nbb 82 c8 40 00\ne9 8d 02 00 00\nbb 40 c8 40 00\ne9 83 02 00 00\nbb 53 c9 40 00\ne9 79 02 00 00\nbb 2c c8 40 00\ne9 6f 02 00 00\nbb 68 c9 40 00\ne9 65 02 00 00\nbb d3 c8 40 00\ne9 5b 02 00 00\nbb 7b c9 40 00\ne9 51 02 00 00\nbb 81 c9 40 00\ne9 47 02 00 00\n49 81 f8 a8 11 31 01\n0f 85 1a 02 00 00\nbb 43 c9 40 00\ne9 30 02 00 00\nbb 70 ca 40 00\ne9 26 02 00 00\nbb 6a ca 40 00\ne9 1c 02 00 00\nbb 8c c8 40 00\ne9 12 02 00 00\nbb f8 c9 40 00\ne9 08 02 00 00\nbb 1f ca 40 00\ne9 fe 01 00 00\nbb a0 c8 40 00\ne9 f4 01 00 00\nbb 25 c9 40 00\ne9 ea 01 00 00\nbb e8 c9 40 00\ne9 e0 01 00 00\nbb cf c9 40 00\ne9 d6 01 00 00\nbb 90 c8 40 00\ne9 cc 01 00 00\nbb 3b c9 40 00\ne9 c2 01 00 00\nbb e6 c8 40 00\ne9 b8 01 00 00\nbb 60 ca 40 00\ne9 ae 01 00 00\nbb 1b c9 40 00\ne9 a4 01 00 00\nbb 37 c9 40 00\ne9 9a 01 00 00\nbb 84 ca 40 00\ne9 90 01 00 00\nbb df c9 40 00\ne9 86 01 00 00\nbb 8e ca 40 00\ne9 7c 01 00 00\nbb f5 c8 40 00\ne9 72 01 00 00\nbb 25 ca 40 00\ne9 68 01 00 00\nbb 0c ca 40 00\ne9 5e 01 00 00\nbb 44 c8 40 00\ne9 54 01 00 00\nbb 6a c9 40 00\ne9 4a 01 00 00\nbb da c9 40 00\ne9 40 01 00 00\nbb 63 c8 40 00\ne9 36 01 00 00\nbb 31 c9 40 00\ne9 2c 01 00 00\nbb c3 c9 40 00\ne9 22 01 00 00\nbb cd c8 40 00\ne9 18 01 00 00\nbb 4b c8 40 00\ne9 0e 01 00 00\nbb 57 c8 40 00\ne9 04 01 00 00\nbb 79 c8 40 00\ne9 fa 00 00 00\nbb 5b ca 40 00\ne9 f0 00 00 00\nbb 69 c8 40 00\ne9 e6 00 00 00\nbb b4 c8 40 00\ne9 dc 00 00 00\nbb 92 c9 40 00\ne9 d2 00 00 00\nbb 03 ca 40 00\ne9 c8 00 00 00\nbb 3f c8 40 00\ne9 be 00 00 00\nbb 31 c8 40 00\ne9 b4 00 00 00\nbb 05 c9 40 00\ne9 aa 00 00 00\nbb 6e c9 40 00\ne9 a0 00 00 00\nbb 50 c8 40 00\ne9 96 00 00 00\nbb bd c9 40 00\ne9 8c 00 00 00\nbb af c9 40 00\ne9 82 00 00 00\nbb 49 c9 40 00\neb 7b\nbb a9 ca 40 00\neb 74\nbb d7 c8 40 00\neb 6d\nbb d5 c9 40 00\neb 66\nbb 09 c9 40 00\neb 5f\nbb 0d c9 40 00\neb 58\nbb 9c ca 40 00\neb 51\nbb 53 c9 40 00\neb 4a\nbb 29 ca 40 00\neb 43\nbb 76 ca 40 00\neb 3c\nbb ee c9 40 00\neb 35\nbb ac c8 40 00\neb 2e\nbb b6 c9 40 00\neb 27\nbb 2c c9 40 00\neb 20\nbb f0 13 61 00\nbf f0 13 61 00\nbe 01 00 00 00\nba 1d 00 00 00\nb9 bd ca 40 00\n31 c0\ne8 1e e5 ff ff\n48 89 d8\n5b\nc3\n'
p467
S'.text:0000000000403090\n.text:0000000000403091\n.text:0000000000403094\n.text:000000000040309b\n.text:000000000040309d\n.text:00000000004030a4\n.text:00000000004030aa\n.text:00000000004030b1\n.text:00000000004030b7\n.text:00000000004030be\n.text:00000000004030c4\n.text:00000000004030cb\n.text:00000000004030d1\n.text:00000000004030d8\n.text:00000000004030de\n.text:00000000004030e5\n.text:00000000004030eb\n.text:00000000004030f2\n.text:00000000004030f8\n.text:00000000004030fd\n.text:0000000000403102\n.text:0000000000403109\n.text:000000000040310f\n.text:0000000000403114\n.text:0000000000403117\n.text:000000000040311d\n.text:0000000000403124\n.text:000000000040312a\n.text:0000000000403131\n.text:0000000000403137\n.text:000000000040313e\n.text:0000000000403144\n.text:000000000040314b\n.text:0000000000403151\n.text:0000000000403158\n.text:000000000040315e\n.text:0000000000403163\n.text:0000000000403168\n.text:000000000040316f\n.text:0000000000403175\n.text:000000000040317c\n.text:0000000000403182\n.text:0000000000403189\n.text:000000000040318f\n.text:0000000000403196\n.text:000000000040319a\n.text:00000000004031a0\n.text:00000000004031a7\n.text:00000000004031ac\n.text:00000000004031b1\n.text:00000000004031b8\n.text:00000000004031be\n.text:00000000004031c5\n.text:00000000004031cb\n.text:00000000004031d2\n.text:00000000004031d8\n.text:00000000004031df\n.text:00000000004031e5\n.text:00000000004031ec\n.text:00000000004031f2\n.text:00000000004031f9\n.text:00000000004031ff\n.text:0000000000403204\n.text:0000000000403209\n.text:0000000000403210\n.text:0000000000403216\n.text:000000000040321d\n.text:0000000000403223\n.text:000000000040322a\n.text:000000000040322e\n.text:0000000000403234\n.text:000000000040323b\n.text:0000000000403240\n.text:0000000000403245\n.text:000000000040324a\n.text:000000000040324d\n.text:0000000000403253\n.text:0000000000403258\n.text:000000000040325b\n.text:0000000000403261\n.text:0000000000403266\n.text:0000000000403269\n.text:000000000040326f\n.text:0000000000403274\n.text:0000000000403277\n.text:000000000040327d\n.text:0000000000403282\n.text:0000000000403285\n.text:000000000040328b\n.text:0000000000403290\n.text:0000000000403295\n.text:000000000040329c\n.text:00000000004032a2\n.text:00000000004032a9\n.text:00000000004032af\n.text:00000000004032b6\n.text:00000000004032bc\n.text:00000000004032c3\n.text:00000000004032c9\n.text:00000000004032d0\n.text:00000000004032d6\n.text:00000000004032db\n.text:00000000004032e0\n.text:00000000004032e7\n.text:00000000004032ed\n.text:00000000004032f4\n.text:00000000004032fa\n.text:0000000000403301\n.text:0000000000403307\n.text:000000000040330e\n.text:0000000000403314\n.text:000000000040331b\n.text:0000000000403321\n.text:0000000000403326\n.text:000000000040332b\n.text:0000000000403332\n.text:0000000000403338\n.text:000000000040333f\n.text:0000000000403345\n.text:000000000040334c\n.text:0000000000403352\n.text:0000000000403359\n.text:000000000040335f\n.text:0000000000403364\n.text:0000000000403369\n.text:0000000000403370\n.text:0000000000403376\n.text:000000000040337d\n.text:0000000000403383\n.text:000000000040338a\n.text:0000000000403390\n.text:0000000000403397\n.text:000000000040339d\n.text:00000000004033a2\n.text:00000000004033a7\n.text:00000000004033ae\n.text:00000000004033b4\n.text:00000000004033bb\n.text:00000000004033c1\n.text:00000000004033c8\n.text:00000000004033ce\n.text:00000000004033d5\n.text:00000000004033db\n.text:00000000004033e0\n.text:00000000004033e7\n.text:00000000004033ed\n.text:00000000004033f4\n.text:00000000004033fa\n.text:0000000000403401\n.text:0000000000403407\n.text:000000000040340e\n.text:0000000000403414\n.text:0000000000403419\n.text:000000000040341e\n.text:0000000000403425\n.text:000000000040342b\n.text:0000000000403432\n.text:0000000000403438\n.text:000000000040343f\n.text:0000000000403445\n.text:000000000040344c\n.text:0000000000403452\n.text:0000000000403457\n.text:000000000040345c\n.text:0000000000403461\n.text:0000000000403464\n.text:000000000040346a\n.text:000000000040346f\n.text:0000000000403472\n.text:0000000000403478\n.text:000000000040347d\n.text:0000000000403480\n.text:0000000000403486\n.text:000000000040348b\n.text:000000000040348e\n.text:0000000000403494\n.text:0000000000403499\n.text:000000000040349e\n.text:00000000004034a5\n.text:00000000004034ab\n.text:00000000004034b2\n.text:00000000004034b8\n.text:00000000004034bf\n.text:00000000004034c5\n.text:00000000004034cc\n.text:00000000004034d2\n.text:00000000004034d7\n.text:00000000004034dc\n.text:00000000004034e3\n.text:00000000004034e9\n.text:00000000004034f0\n.text:00000000004034f6\n.text:00000000004034fd\n.text:0000000000403503\n.text:000000000040350a\n.text:0000000000403510\n.text:0000000000403515\n.text:000000000040351a\n.text:0000000000403521\n.text:0000000000403527\n.text:000000000040352e\n.text:0000000000403534\n.text:000000000040353b\n.text:0000000000403541\n.text:0000000000403546\n.text:000000000040354b\n.text:0000000000403552\n.text:0000000000403558\n.text:000000000040355f\n.text:0000000000403565\n.text:000000000040356c\n.text:0000000000403572\n.text:0000000000403577\n.text:000000000040357c\n.text:0000000000403580\n.text:0000000000403586\n.text:000000000040358d\n.text:0000000000403593\n.text:000000000040359a\n.text:00000000004035a0\n.text:00000000004035a5\n.text:00000000004035aa\n.text:00000000004035b1\n.text:00000000004035b7\n.text:00000000004035be\n.text:00000000004035c4\n.text:00000000004035cb\n.text:00000000004035d1\n.text:00000000004035d6\n.text:00000000004035db\n.text:00000000004035e0\n.text:00000000004035e3\n.text:00000000004035e9\n.text:00000000004035ee\n.text:00000000004035f1\n.text:00000000004035f7\n.text:00000000004035fc\n.text:00000000004035ff\n.text:0000000000403605\n.text:000000000040360a\n.text:000000000040360f\n.text:0000000000403616\n.text:000000000040361c\n.text:0000000000403623\n.text:0000000000403629\n.text:0000000000403630\n.text:0000000000403636\n.text:000000000040363b\n.text:0000000000403640\n.text:0000000000403647\n.text:000000000040364d\n.text:0000000000403654\n.text:000000000040365a\n.text:0000000000403661\n.text:0000000000403667\n.text:000000000040366c\n.text:0000000000403671\n.text:0000000000403678\n.text:000000000040367e\n.text:0000000000403685\n.text:000000000040368b\n.text:0000000000403692\n.text:0000000000403698\n.text:000000000040369d\n.text:00000000004036a2\n.text:00000000004036a9\n.text:00000000004036af\n.text:00000000004036b6\n.text:00000000004036bc\n.text:00000000004036c3\n.text:00000000004036c9\n.text:00000000004036ce\n.text:00000000004036d3\n.text:00000000004036da\n.text:00000000004036e0\n.text:00000000004036e7\n.text:00000000004036ed\n.text:00000000004036f4\n.text:00000000004036fa\n.text:00000000004036ff\n.text:0000000000403704\n.text:000000000040370b\n.text:0000000000403711\n.text:0000000000403718\n.text:000000000040371e\n.text:0000000000403725\n.text:000000000040372b\n.text:0000000000403730\n.text:0000000000403735\n.text:000000000040373c\n.text:0000000000403742\n.text:0000000000403749\n.text:000000000040374f\n.text:0000000000403756\n.text:000000000040375c\n.text:0000000000403761\n.text:0000000000403766\n.text:000000000040376b\n.text:000000000040376e\n.text:0000000000403774\n.text:0000000000403779\n.text:000000000040377c\n.text:0000000000403782\n.text:0000000000403787\n.text:000000000040378a\n.text:0000000000403790\n.text:0000000000403795\n.text:000000000040379a\n.text:00000000004037a1\n.text:00000000004037a7\n.text:00000000004037ae\n.text:00000000004037b4\n.text:00000000004037bb\n.text:00000000004037c1\n.text:00000000004037c6\n.text:00000000004037cb\n.text:00000000004037d2\n.text:00000000004037d8\n.text:00000000004037df\n.text:00000000004037e5\n.text:00000000004037ec\n.text:00000000004037f2\n.text:00000000004037f7\n.text:00000000004037fc\n.text:0000000000403803\n.text:0000000000403809\n.text:0000000000403810\n.text:0000000000403816\n.text:000000000040381b\n.text:0000000000403820\n.text:0000000000403827\n.text:000000000040382d\n.text:0000000000403834\n.text:000000000040383a\n.text:000000000040383f\n.text:0000000000403844\n.text:000000000040384b\n.text:0000000000403851\n.text:0000000000403858\n.text:000000000040385e\n.text:0000000000403863\n.text:0000000000403868\n.text:000000000040386f\n.text:0000000000403875\n.text:000000000040387c\n.text:0000000000403882\n.text:0000000000403887\n.text:000000000040388c\n.text:0000000000403891\n.text:0000000000403894\n.text:000000000040389a\n.text:000000000040389f\n.text:00000000004038a2\n.text:00000000004038a8\n.text:00000000004038ad\n.text:00000000004038b2\n.text:00000000004038b9\n.text:00000000004038bf\n.text:00000000004038c6\n.text:00000000004038cc\n.text:00000000004038d1\n.text:00000000004038d6\n.text:00000000004038dd\n.text:00000000004038e3\n.text:00000000004038ea\n.text:00000000004038f0\n.text:00000000004038f5\n.text:00000000004038fa\n.text:0000000000403901\n.text:0000000000403907\n.text:000000000040390e\n.text:0000000000403914\n.text:0000000000403919\n.text:000000000040391e\n.text:0000000000403925\n.text:000000000040392b\n.text:0000000000403930\n.text:0000000000403933\n.text:0000000000403939\n.text:000000000040393e\n.text:0000000000403943\n.text:000000000040394a\n.text:0000000000403950\n.text:0000000000403957\n.text:000000000040395d\n.text:0000000000403962\n.text:0000000000403967\n.text:000000000040396e\n.text:0000000000403974\n.text:000000000040397b\n.text:0000000000403981\n.text:0000000000403986\n.text:000000000040398b\n.text:0000000000403992\n.text:0000000000403998\n.text:000000000040399f\n.text:00000000004039a5\n.text:00000000004039aa\n.text:00000000004039af\n.text:00000000004039b4\n.text:00000000004039b7\n.text:00000000004039bd\n.text:00000000004039c2\n.text:00000000004039c5\n.text:00000000004039cb\n.text:00000000004039d0\n.text:00000000004039d5\n.text:00000000004039da\n.text:00000000004039df\n.text:00000000004039e4\n.text:00000000004039e9\n.text:00000000004039ee\n.text:00000000004039f3\n.text:00000000004039f8\n.text:00000000004039fd\n.text:0000000000403a02\n.text:0000000000403a07\n.text:0000000000403a0c\n.text:0000000000403a11\n.text:0000000000403a16\n.text:0000000000403a1b\n.text:0000000000403a22\n.text:0000000000403a28\n.text:0000000000403a2d\n.text:0000000000403a32\n.text:0000000000403a37\n.text:0000000000403a3c\n.text:0000000000403a41\n.text:0000000000403a46\n.text:0000000000403a4b\n.text:0000000000403a50\n.text:0000000000403a55\n.text:0000000000403a5a\n.text:0000000000403a5f\n.text:0000000000403a64\n.text:0000000000403a69\n.text:0000000000403a6e\n.text:0000000000403a73\n.text:0000000000403a78\n.text:0000000000403a7d\n.text:0000000000403a82\n.text:0000000000403a87\n.text:0000000000403a8c\n.text:0000000000403a91\n.text:0000000000403a96\n.text:0000000000403a9b\n.text:0000000000403aa0\n.text:0000000000403aa5\n.text:0000000000403aaa\n.text:0000000000403aaf\n.text:0000000000403ab4\n.text:0000000000403ab9\n.text:0000000000403abe\n.text:0000000000403ac3\n.text:0000000000403ac8\n.text:0000000000403acd\n.text:0000000000403ad2\n.text:0000000000403ad7\n.text:0000000000403adc\n.text:0000000000403ae1\n.text:0000000000403ae6\n.text:0000000000403aeb\n.text:0000000000403af0\n.text:0000000000403af5\n.text:0000000000403afa\n.text:0000000000403aff\n.text:0000000000403b04\n.text:0000000000403b09\n.text:0000000000403b0e\n.text:0000000000403b13\n.text:0000000000403b18\n.text:0000000000403b1d\n.text:0000000000403b22\n.text:0000000000403b27\n.text:0000000000403b2c\n.text:0000000000403b31\n.text:0000000000403b36\n.text:0000000000403b3b\n.text:0000000000403b40\n.text:0000000000403b45\n.text:0000000000403b4a\n.text:0000000000403b4f\n.text:0000000000403b54\n.text:0000000000403b59\n.text:0000000000403b5e\n.text:0000000000403b63\n.text:0000000000403b68\n.text:0000000000403b6d\n.text:0000000000403b72\n.text:0000000000403b77\n.text:0000000000403b7c\n.text:0000000000403b81\n.text:0000000000403b86\n.text:0000000000403b8b\n.text:0000000000403b90\n.text:0000000000403b95\n.text:0000000000403b9a\n.text:0000000000403b9f\n.text:0000000000403ba4\n.text:0000000000403ba9\n.text:0000000000403bae\n.text:0000000000403bb3\n.text:0000000000403bb8\n.text:0000000000403bbd\n.text:0000000000403bc2\n.text:0000000000403bc7\n.text:0000000000403bcc\n.text:0000000000403bd1\n.text:0000000000403bd6\n.text:0000000000403bdb\n.text:0000000000403be0\n.text:0000000000403be5\n.text:0000000000403be7\n.text:0000000000403bec\n.text:0000000000403bee\n.text:0000000000403bf3\n.text:0000000000403bf5\n.text:0000000000403bfa\n.text:0000000000403bfc\n.text:0000000000403c01\n.text:0000000000403c03\n.text:0000000000403c08\n.text:0000000000403c0a\n.text:0000000000403c0f\n.text:0000000000403c11\n.text:0000000000403c16\n.text:0000000000403c18\n.text:0000000000403c1d\n.text:0000000000403c1f\n.text:0000000000403c24\n.text:0000000000403c26\n.text:0000000000403c2b\n.text:0000000000403c2d\n.text:0000000000403c32\n.text:0000000000403c34\n.text:0000000000403c39\n.text:0000000000403c3b\n.text:0000000000403c40\n.text:0000000000403c42\n.text:0000000000403c47\n.text:0000000000403c4c\n.text:0000000000403c51\n.text:0000000000403c56\n.text:0000000000403c5b\n.text:0000000000403c5d\n.text:0000000000403c62\n.text:0000000000403c65\n.text:0000000000403c66\n'
p468
tp469
sS'iswprint'
p470
(S'\n__stdcall iswprint(wint_t __wc)\n'
p471
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_006112c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x006112c8]\n'
p473
S'ff 25 a2 f1 20 00\n'
p474
S'.plt:0000000000402120\n'
p475
tp476
sS'c_isspace'
p477
(S'\n__stdcall c_isspace()\n'
p478
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p479
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00409c85\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p480
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p481
S'.text:0000000000409c70\n.text:0000000000409c73\n.text:0000000000409c76\n.text:0000000000409c78\n.text:0000000000409c7d\n.text:0000000000409c7f\n.text:0000000000409c81\n.text:0000000000409c84\n.text:0000000000409c85\n.text:0000000000409c87\n'
p482
tp483
sS'timetostr'
p484
(S'\n__stdcall timetostr()\n'
p485
V\u000achar * timetostr(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  intmax_t i;\u000a  \u000a  pcVar1 = imaxtostr(i,str);\u000a  return pcVar1;\u000a}\u000a\u000a
p486
S'MOV ESI,0x611430\nJMP 0x00404ec0\n'
p487
S'be 30 14 61 00\ne9 76 07 00 00\n'
p488
S'.text:0000000000404740\n.text:0000000000404745\n'
p489
tp490
sS'setenv_TZ'
p491
(S'\n__stdcall setenv_TZ(char * tz)\n'
p492
V\u000aint setenv_TZ(char *tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (tz != (char *)0x0) {\u000a    iVar1 = (*(code *)PTR_setenv_00611098)("TZ",tz,1);\u000a    return iVar1;\u000a  }\u000a  iVar1 = (*(code *)PTR_unsetenv_00611288)("TZ");\u000a  return iVar1;\u000a}\u000a\u000a
p493
S'MOV RAX,RDI\nMOV EDI,0x40db89\nTEST RAX,RAX\nJZ 0x00409b6a\nMOV EDX,0x1\nMOV RSI,RAX\nJMP 0x00401cc0\nJMP 0x004020a0\n'
p494
S'48 89 f8\nbf 89 db 40 00\n48 85 c0\n74 0d\nba 01 00 00 00\n48 89 c6\ne9 56 81 ff ff\ne9 31 85 ff ff\n'
p495
S'.text:0000000000409b50\n.text:0000000000409b53\n.text:0000000000409b58\n.text:0000000000409b5b\n.text:0000000000409b5d\n.text:0000000000409b62\n.text:0000000000409b65\n.text:0000000000409b6a\n'
p496
tp497
sS'open'
p498
(S'\n__stdcall open(char * __file, int __oflag)\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_00611270)();\u000a  return iVar1;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x00611270]\n'
p501
S'ff 25 fa f1 20 00\n'
p502
S'.plt:0000000000402070\n'
p503
tp504
sS'quotearg_n_custom_mem'
p505
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p506
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p507
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x006114b0]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x006114a0]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x00611490]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x00611480]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x004050f0\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405f80\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p508
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 07 b1 20 00\n48 89 44 24 30\n0f 10 05 eb b0 20 00\n0f 29 44 24 20\n0f 10 05 cf b0 20 00\n0f 29 44 24 10\n0f 10 05 b3 b0 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p509
S'.text:0000000000406390\n.text:0000000000406391\n.text:0000000000406393\n.text:0000000000406395\n.text:0000000000406396\n.text:000000000040639a\n.text:000000000040639d\n.text:00000000004063a0\n.text:00000000004063a2\n.text:00000000004063a9\n.text:00000000004063ae\n.text:00000000004063b5\n.text:00000000004063ba\n.text:00000000004063c1\n.text:00000000004063c6\n.text:00000000004063cd\n.text:00000000004063d1\n.text:00000000004063d4\n.text:00000000004063d7\n.text:00000000004063dc\n.text:00000000004063de\n.text:00000000004063e1\n.text:00000000004063e4\n.text:00000000004063e7\n.text:00000000004063ec\n.text:00000000004063f0\n.text:00000000004063f1\n.text:00000000004063f3\n.text:00000000004063f5\n.text:00000000004063f6\n'
p510
tp511
sS'localtime'
p512
(S'\n__stdcall localtime(time_t * __timer)\n'
p513
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime(time_t *__timer)\u000a\u000a{\u000a  tm *ptVar1;\u000a  \u000a  ptVar1 = (tm *)(*(code *)PTR_localtime_00611038)();\u000a  return ptVar1;\u000a}\u000a\u000a
p514
S'JMP qword ptr [0x00611038]\n'
p515
S'ff 25 32 f4 20 00\n'
p516
S'.plt:0000000000401c00\n'
p517
tp518
sS'localtime_r'
p519
(S'\n__stdcall localtime_r(time_t * __timer, tm * __tp)\n'
p520
V\u000a/* WARNING: Switch with 1 destination removed at 0x00401c40 */\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime_r(time_t *__timer,tm *__tp)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x00611058]\n'
p522
S'ff 25 12 f4 20 00\n'
p523
S'.plt:0000000000401c40\n'
p524
tp525
sS'_init'
p526
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p527
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00610ff8;\u000a  if (PTR___gmon_start___00610ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00610ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p528
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00610ff8]\nTEST RAX,RAX\nJZ 0x00401ba2\nCALL RAX\nADD RSP,0x8\nRET\n'
p529
S'48 83 ec 08\n48 8b 05 5d f4 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p530
S'.init:0000000000401b90\n.init:0000000000401b94\n.init:0000000000401b9b\n.init:0000000000401b9e\n.init:0000000000401ba0\n.init:0000000000401ba2\n.init:0000000000401ba6\n'
p531
tp532
sS'tzset'
p533
(S'\n__stdcall tzset()\n'
p534
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid tzset(void)\u000a\u000a{\u000a  (*(code *)PTR_tzset_006111b0)();\u000a  return;\u000a}\u000a\u000a
p535
S'JMP qword ptr [0x006111b0]\n'
p536
S'ff 25 ba f2 20 00\n'
p537
S'.plt:0000000000401ef0\n'
p538
tp539
sS'set_quoting_flags'
p540
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p541
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p542
S'TEST RDI,RDI\nMOV ECX,0x611480\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p543
S'48 85 ff\nb9 80 14 61 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p544
S'.text:00000000004050d0\n.text:00000000004050d3\n.text:00000000004050d8\n.text:00000000004050dc\n.text:00000000004050df\n.text:00000000004050e2\n'
p545
tp546
sS'get_stat_birthtime'
p547
(S'\n__stdcall get_stat_birthtime(stat * st)\n'
p548
V\u000atimespec get_stat_birthtime(stat *st)\u000a\u000a{\u000a  return (timespec)CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\u000a}\u000a\u000a
p549
S'MOV RAX,-0x1\nMOV RDX,-0x1\nRET\n'
p550
S'48 c7 c0 ff ff ff ff\n48 c7 c2 ff ff ff ff\nc3\n'
p551
S'.text:0000000000406b80\n.text:0000000000406b87\n.text:0000000000406b8e\n'
p552
tp553
sS'realloc'
p554
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p555
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_00611230)();\u000a  return pvVar1;\u000a}\u000a\u000a
p556
S'JMP qword ptr [0x00611230]\n'
p557
S'ff 25 3a f2 20 00\n'
p558
S'.plt:0000000000401ff0\n'
p559
tp560
sS'localeconv'
p561
(S'\n__stdcall localeconv()\n'
p562
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000alconv * localeconv(void)\u000a\u000a{\u000a  lconv *plVar1;\u000a  \u000a  plVar1 = (lconv *)(*(code *)PTR_localeconv_00611080)();\u000a  return plVar1;\u000a}\u000a\u000a
p563
S'JMP qword ptr [0x00611080]\n'
p564
S'ff 25 ea f3 20 00\n'
p565
S'.plt:0000000000401c90\n'
p566
tp567
sS'__fprintf_chk'
p568
(S'\n__stdcall __fprintf_chk()\n'
p569
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_006112b8)();\u000a  return;\u000a}\u000a\u000a
p570
S'JMP qword ptr [0x006112b8]\n'
p571
S'ff 25 b2 f1 20 00\n'
p572
S'.plt:0000000000402100\n'
p573
tp574
sS'strmode'
p575
(S'\n__stdcall strmode(char * str)\n'
p576
V\u000avoid strmode(char *str)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  byte bVar3;\u000a  byte bVar4;\u000a  byte bVar5;\u000a  char cVar6;\u000a  uint uVar7;\u000a  undefined in_SIL;\u000a  char cVar8;\u000a  undefined7 in_register_00000031;\u000a  char cVar9;\u000a  byte bVar10;\u000a  \u000a  pcVar1 = (char *)CONCAT71(in_register_00000031,in_SIL);\u000a  cVar2 = ftypelet();\u000a  *pcVar1 = cVar2;\u000a  cVar8 = 'r';\u000a  cVar2 = 'r';\u000a  if (((ulong)str & 0x100) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  pcVar1[1] = cVar2;\u000a  uVar7 = (uint)((ulong)str & 0xffffffff);\u000a  bVar3 = (byte)((ulong)str & 0xffffffff);\u000a  pcVar1[2] = ((char)bVar3 >> 7 & 0x4aU) + 0x2d;\u000a  bVar10 = 0x78;\u000a  bVar4 = 0x78;\u000a  if (((ulong)str & 0x40) == 0) {\u000a    bVar4 = 0x2d;\u000a  }\u000a  bVar5 = (byte)((uVar7 & 0x40) >> 1) | 0x53;\u000a  if (((ulong)str & 0x800) == 0) {\u000a    bVar5 = bVar4;\u000a  }\u000a  pcVar1[3] = bVar5;\u000a  cVar2 = 'r';\u000a  if (((ulong)str & 0x20) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  pcVar1[4] = cVar2;\u000a  cVar6 = 'w';\u000a  cVar2 = 'w';\u000a  if (((ulong)str & 0x10) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  pcVar1[5] = cVar2;\u000a  cVar2 = 'x';\u000a  if (((ulong)str & 8) == 0) {\u000a    cVar2 = '-';\u000a  }\u000a  cVar9 = (bVar3 & 8) * 4 + 'S';\u000a  if (((ulong)str & 0x400) == 0) {\u000a    cVar9 = cVar2;\u000a  }\u000a  pcVar1[6] = cVar9;\u000a  if (((ulong)str & 4) == 0) {\u000a    cVar8 = '-';\u000a  }\u000a  pcVar1[7] = cVar8;\u000a  if (((ulong)str & 2) == 0) {\u000a    cVar6 = '-';\u000a  }\u000a  pcVar1[8] = cVar6;\u000a  if (((ulong)str & 1) == 0) {\u000a    bVar10 = 0x2d;\u000a  }\u000a  if (((ulong)str & 0x200) != 0) {\u000a    bVar10 = (byte)((uVar7 & 1) << 5) | 0x54;\u000a  }\u000a  pcVar1[9] = bVar10;\u000a  pcVar1[10] = ' ';\u000a  pcVar1[0xb] = 0;\u000a  return;\u000a}\u000a\u000a
p577
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV EBX,EDI\nCALL 0x00404e80\nMOV byte ptr [R14],AL\nMOV AL,BH\nTEST AL,0x1\nMOV SIL,0x72\nMOV CL,0x72\nJNZ 0x00404dce\nMOV CL,0x2d\nMOV byte ptr [R14 + 0x1],CL\nMOV ECX,EBX\nSAR CL,0x7\nAND CL,0x4a\nADD CL,0x2d\nMOV byte ptr [R14 + 0x2],CL\nMOV ECX,EBX\nAND ECX,0x40\nMOV EDX,ECX\nSHR EDX,1\nOR EDX,0x53\nTEST ECX,ECX\nMOV R8B,0x78\nMOV CL,0x78\nJNZ 0x00404df8\nMOV CL,0x2d\nTEST AL,0x8\nJNZ 0x00404dfe\nMOV DL,CL\nMOV byte ptr [R14 + 0x3],DL\nTEST BL,0x20\nMOV CL,0x72\nJNZ 0x00404e0b\nMOV CL,0x2d\nMOV byte ptr [R14 + 0x4],CL\nTEST BL,0x10\nMOV DL,0x77\nMOV CL,0x77\nJNZ 0x00404e1a\nMOV CL,0x2d\nMOV byte ptr [R14 + 0x5],CL\nMOV ECX,EBX\nAND ECX,0x8\nLEA EDI,[0x53 + RCX*0x4]\nMOV CL,0x78\nJNZ 0x00404e30\nMOV CL,0x2d\nTEST AL,0x4\nJNZ 0x00404e37\nMOV DIL,CL\nMOV byte ptr [R14 + 0x6],DIL\nTEST BL,0x4\nJNZ 0x00404e43\nMOV SIL,0x2d\nMOV byte ptr [R14 + 0x7],SIL\nTEST BL,0x2\nJNZ 0x00404e4e\nMOV DL,0x2d\nMOV byte ptr [R14 + 0x8],DL\nAND EBX,0x1\nJNZ 0x00404e5a\nMOV R8B,0x2d\nTEST AL,0x2\nJZ 0x00404e67\nSHL EBX,0x5\nOR EBX,0x54\nMOV R8D,EBX\nMOV byte ptr [R14 + 0x9],R8B\nMOV byte ptr [R14 + 0xa],0x20\nMOV byte ptr [R14 + 0xb],0x0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p578
S'41 56\n53\n50\n49 89 f6\n89 fb\ne8 c2 00 00 00\n41 88 06\n88 f8\na8 01\n40 b6 72\nb1 72\n75 02\nb1 2d\n41 88 4e 01\n89 d9\nc0 f9 07\n80 e1 4a\n80 c1 2d\n41 88 4e 02\n89 d9\n83 e1 40\n89 ca\nd1 ea\n83 ca 53\n85 c9\n41 b0 78\nb1 78\n75 02\nb1 2d\na8 08\n75 02\n88 ca\n41 88 56 03\nf6 c3 20\nb1 72\n75 02\nb1 2d\n41 88 4e 04\nf6 c3 10\nb2 77\nb1 77\n75 02\nb1 2d\n41 88 4e 05\n89 d9\n83 e1 08\n8d 3c 8d 53 00 00 00\nb1 78\n75 02\nb1 2d\na8 04\n75 03\n40 88 cf\n41 88 7e 06\nf6 c3 04\n75 03\n40 b6 2d\n41 88 76 07\nf6 c3 02\n75 02\nb2 2d\n41 88 56 08\n83 e3 01\n75 03\n41 b0 2d\na8 02\n74 09\nc1 e3 05\n83 cb 54\n41 89 d8\n45 88 46 09\n41 c6 46 0a 20\n41 c6 46 0b 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p579
S'.text:0000000000404db0\n.text:0000000000404db2\n.text:0000000000404db3\n.text:0000000000404db4\n.text:0000000000404db7\n.text:0000000000404db9\n.text:0000000000404dbe\n.text:0000000000404dc1\n.text:0000000000404dc3\n.text:0000000000404dc5\n.text:0000000000404dc8\n.text:0000000000404dca\n.text:0000000000404dcc\n.text:0000000000404dce\n.text:0000000000404dd2\n.text:0000000000404dd4\n.text:0000000000404dd7\n.text:0000000000404dda\n.text:0000000000404ddd\n.text:0000000000404de1\n.text:0000000000404de3\n.text:0000000000404de6\n.text:0000000000404de8\n.text:0000000000404dea\n.text:0000000000404ded\n.text:0000000000404def\n.text:0000000000404df2\n.text:0000000000404df4\n.text:0000000000404df6\n.text:0000000000404df8\n.text:0000000000404dfa\n.text:0000000000404dfc\n.text:0000000000404dfe\n.text:0000000000404e02\n.text:0000000000404e05\n.text:0000000000404e07\n.text:0000000000404e09\n.text:0000000000404e0b\n.text:0000000000404e0f\n.text:0000000000404e12\n.text:0000000000404e14\n.text:0000000000404e16\n.text:0000000000404e18\n.text:0000000000404e1a\n.text:0000000000404e1e\n.text:0000000000404e20\n.text:0000000000404e23\n.text:0000000000404e2a\n.text:0000000000404e2c\n.text:0000000000404e2e\n.text:0000000000404e30\n.text:0000000000404e32\n.text:0000000000404e34\n.text:0000000000404e37\n.text:0000000000404e3b\n.text:0000000000404e3e\n.text:0000000000404e40\n.text:0000000000404e43\n.text:0000000000404e47\n.text:0000000000404e4a\n.text:0000000000404e4c\n.text:0000000000404e4e\n.text:0000000000404e52\n.text:0000000000404e55\n.text:0000000000404e57\n.text:0000000000404e5a\n.text:0000000000404e5c\n.text:0000000000404e5e\n.text:0000000000404e61\n.text:0000000000404e64\n.text:0000000000404e67\n.text:0000000000404e6b\n.text:0000000000404e70\n.text:0000000000404e75\n.text:0000000000404e79\n.text:0000000000404e7a\n.text:0000000000404e7c\n'
p580
tp581
sS'get_charset_aliases'
p582
(S'\n__stdcall get_charset_aliases()\n'
p583
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_0040a134_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_0040a134_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_0040a134_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_0040a134_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_0040a134_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_0040a134_caseD_9;\u000a      case -1:\u000a        goto switchD_0040a134_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_0040a18d:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_0040a193:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_0040a134_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_0040a193;\u000a  }\u000a  goto LAB_0040a18d;\u000a}\u000a\u000a
p584
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x006115c0]\nTEST R15,R15\nJNZ 0x0040a1a2\nMOV EDI,0x40dfbc\nCALL 0x00401bd0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409f58\nCMP byte ptr [RBX],0x0\nJNZ 0x00409f5d\nMOV EBX,0x40dfcc\nMOV RDI,RBX\nCALL 0x00401d30\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00409f77\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x00409f79\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x00401f30\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00409fcd\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401ed0\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00409fd8\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00409ff5\nMOV R15D,0x40d829\nJMP 0x0040a19b\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00402070\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0040a18d\nMOV ESI,0x40cc66\nMOV EDI,EBP\nCALL 0x00402000\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040a154\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x0040a120\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x00401c60\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x00401c60\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x0040a120\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x00401f90\nMOV ESI,0x40dfdb\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x00401e00\nCMP EAX,0x2\nJL 0x0040a174\nMOV RDI,R12\nCALL 0x00401d30\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401d30\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040a0fd\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x00401ff0\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x0040a044\nJMP 0x0040a15d\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x00401f30\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x0040a044\nJMP 0x0040a15d\nMOV RDI,RBX\nCALL 0x00401c80\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x0040a087\nJMP qword ptr [0x40de80 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x00401c80\nCMP EAX,-0x1\nJZ 0x0040a174\nCMP EAX,0xa\nJNZ 0x0040a140\nJMP 0x0040a120\nMOV EDI,EBP\nCALL 0x00401e30\nJMP 0x0040a18d\nMOV RDI,R15\nCALL 0x00401be0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x0040a3b0\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040a18d\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x0040a193\nMOV R15D,0x40d829\nMOV RDI,R13\nCALL 0x00401be0\nMOV qword ptr [0x006115c0],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p585
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d 88 76 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf bc df 40 00\ne8 85 7c ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb cc df 40 00\n48 89 df\ne8 cb 7d ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 a9 7f ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 33 7f ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf 29 d8 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 6c 80 ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe 66 cc 40 00\n89 ef\ne8 e6 7f ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 fb 7b ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 eb 7b ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 ff 7e ff ff\nbe db df 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 5a 7d ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 79 7c ff ff\n49 89 c4\n48 89 ef\ne8 6e 7c ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 06 7f ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 25 7e ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 58 7b ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd 80 de 40 00\n48 89 df\ne8 38 7b ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 d5 7c ff ff\neb 30\n4c 89 ff\ne8 7b 7a ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 34 02 00 00\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf 29 d8 40 00\n4c 89 ef\ne8 45 7a ff ff\n4c 89 3d 1e 74 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p586
S'.text:0000000000409f20\n.text:0000000000409f21\n.text:0000000000409f23\n.text:0000000000409f25\n.text:0000000000409f27\n.text:0000000000409f29\n.text:0000000000409f2a\n.text:0000000000409f31\n.text:0000000000409f38\n.text:0000000000409f3b\n.text:0000000000409f41\n.text:0000000000409f46\n.text:0000000000409f4b\n.text:0000000000409f4e\n.text:0000000000409f51\n.text:0000000000409f53\n.text:0000000000409f56\n.text:0000000000409f58\n.text:0000000000409f5d\n.text:0000000000409f60\n.text:0000000000409f65\n.text:0000000000409f68\n.text:0000000000409f6b\n.text:0000000000409f6d\n.text:0000000000409f72\n.text:0000000000409f75\n.text:0000000000409f77\n.text:0000000000409f79\n.text:0000000000409f7d\n.text:0000000000409f82\n.text:0000000000409f87\n.text:0000000000409f8a\n.text:0000000000409f8d\n.text:0000000000409f8f\n.text:0000000000409f92\n.text:0000000000409f95\n.text:0000000000409f98\n.text:0000000000409f9d\n.text:0000000000409fa0\n.text:0000000000409fa3\n.text:0000000000409fa6\n.text:0000000000409fa8\n.text:0000000000409fae\n.text:0000000000409fb8\n.text:0000000000409fbd\n.text:0000000000409fc7\n.text:0000000000409fcb\n.text:0000000000409fcd\n.text:0000000000409fd3\n.text:0000000000409fd8\n.text:0000000000409fe2\n.text:0000000000409fe7\n.text:0000000000409ff1\n.text:0000000000409ff5\n.text:0000000000409ffa\n.text:0000000000409ffc\n.text:0000000000409fff\n.text:000000000040a004\n.text:000000000040a006\n.text:000000000040a008\n.text:000000000040a00e\n.text:000000000040a013\n.text:000000000040a015\n.text:000000000040a01a\n.text:000000000040a01d\n.text:000000000040a020\n.text:000000000040a026\n.text:000000000040a02b\n.text:000000000040a030\n.text:000000000040a032\n.text:000000000040a037\n.text:000000000040a03a\n.text:000000000040a03f\n.text:000000000040a044\n.text:000000000040a049\n.text:000000000040a04c\n.text:000000000040a04f\n.text:000000000040a052\n.text:000000000040a055\n.text:000000000040a058\n.text:000000000040a05d\n.text:000000000040a060\n.text:000000000040a065\n.text:000000000040a068\n.text:000000000040a06d\n.text:000000000040a070\n.text:000000000040a075\n.text:000000000040a07a\n.text:000000000040a07d\n.text:000000000040a082\n.text:000000000040a087\n.text:000000000040a089\n.text:000000000040a08c\n.text:000000000040a091\n.text:000000000040a096\n.text:000000000040a098\n.text:000000000040a09b\n.text:000000000040a09e\n.text:000000000040a0a1\n.text:000000000040a0a6\n.text:000000000040a0a9\n.text:000000000040a0af\n.text:000000000040a0b2\n.text:000000000040a0b7\n.text:000000000040a0ba\n.text:000000000040a0bd\n.text:000000000040a0c2\n.text:000000000040a0c5\n.text:000000000040a0ca\n.text:000000000040a0cf\n.text:000000000040a0d2\n.text:000000000040a0d4\n.text:000000000040a0d8\n.text:000000000040a0dd\n.text:000000000040a0e2\n.text:000000000040a0e5\n.text:000000000040a0ea\n.text:000000000040a0ed\n.text:000000000040a0f2\n.text:000000000040a0f5\n.text:000000000040a0fb\n.text:000000000040a0fd\n.text:000000000040a102\n.text:000000000040a106\n.text:000000000040a10b\n.text:000000000040a10e\n.text:000000000040a111\n.text:000000000040a117\n.text:000000000040a120\n.text:000000000040a123\n.text:000000000040a128\n.text:000000000040a12b\n.text:000000000040a12e\n.text:000000000040a134\n.text:000000000040a140\n.text:000000000040a143\n.text:000000000040a148\n.text:000000000040a14b\n.text:000000000040a14d\n.text:000000000040a150\n.text:000000000040a152\n.text:000000000040a154\n.text:000000000040a156\n.text:000000000040a15b\n.text:000000000040a15d\n.text:000000000040a160\n.text:000000000040a165\n.text:000000000040a167\n.text:000000000040a16c\n.text:000000000040a16f\n.text:000000000040a174\n.text:000000000040a177\n.text:000000000040a17c\n.text:000000000040a181\n.text:000000000040a184\n.text:000000000040a186\n.text:000000000040a18b\n.text:000000000040a18d\n.text:000000000040a193\n.text:000000000040a196\n.text:000000000040a19b\n.text:000000000040a1a2\n.text:000000000040a1a5\n.text:000000000040a1ac\n.text:000000000040a1ad\n.text:000000000040a1af\n.text:000000000040a1b1\n.text:000000000040a1b3\n.text:000000000040a1b5\n.text:000000000040a1b6\n'
p587
tp588
sS'nl_langinfo'
p589
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p590
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_006111f0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p591
S'JMP qword ptr [0x006111f0]\n'
p592
S'ff 25 7a f2 20 00\n'
p593
S'.plt:0000000000401f70\n'
p594
tp595
sS'matchpathcon'
p596
(S'\n__stdcall matchpathcon(char * file, security_context_t * con)\n'
p597
V\u000aint matchpathcon(char *file,security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p598
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p599
S'50\ne8 9a b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p600
S'.text:0000000000406980\n.text:0000000000406981\n.text:0000000000406986\n.text:000000000040698c\n.text:0000000000406991\n.text:0000000000406992\n'
p601
tp602
sS'restore_cwd'
p603
(S'\n__stdcall restore_cwd(saved_cwd * cwd)\n'
p604
V\u000aint restore_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (-1 < cwd->desc) {\u000a    iVar1 = (*(code *)PTR_fchdir_00611220)((ulong)(uint)cwd->desc);\u000a    return iVar1;\u000a  }\u000a  iVar1 = chdir_long(cwd->name);\u000a  return iVar1;\u000a}\u000a\u000a
p605
S'MOV EAX,dword ptr [RDI]\nTEST EAX,EAX\nJS 0x004068dd\nMOV EDI,EAX\nJMP 0x00401fd0\nMOV RDI,qword ptr [RDI + 0x8]\nJMP 0x00408c50\n'
p606
S'8b 07\n85 c0\n78 07\n89 c7\ne9 f3 b6 ff ff\n48 8b 7f 08\ne9 6a 23 00 00\n'
p607
S'.text:00000000004068d0\n.text:00000000004068d2\n.text:00000000004068d4\n.text:00000000004068d6\n.text:00000000004068d8\n.text:00000000004068dd\n.text:00000000004068e1\n'
p608
tp609
sS'x2realloc'
p610
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p611
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p612
S'MOV EDX,0x1\nJMP 0x004089e0\n'
p613
S'ba 01 00 00 00\neb 89\n'
p614
S'.text:0000000000408a50\n.text:0000000000408a55\n'
p615
tp616
sS'strlen'
p617
(S'\n__stdcall strlen(char * __s)\n'
p618
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_006110d0)();\u000a  return sVar1;\u000a}\u000a\u000a
p619
S'JMP qword ptr [0x006110d0]\n'
p620
S'ff 25 9a f3 20 00\n'
p621
S'.plt:0000000000401d30\n'
p622
tp623
sS'memcmp'
p624
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p625
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_00611168)();\u000a  return iVar1;\u000a}\u000a\u000a
p626
S'JMP qword ptr [0x00611168]\n'
p627
S'ff 25 02 f3 20 00\n'
p628
S'.plt:0000000000401e60\n'
p629
tp630
sS'out_uint'
p631
(S'\n__stdcall out_uint()\n'
p632
V\u000aint out_uint(void)\u000a\u000a{\u000a  int iVar1;\u000a  size_t prefix_len;\u000a  char *pformat;\u000a  \u000a  make_format(pformat,prefix_len,"\u005c'-0","lu");\u000a  iVar1 = __printf_chk(1);\u000a  return iVar1;\u000a}\u000a\u000a
p633
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nMOV EDX,0x40c81b\nMOV ECX,0x40c81f\nCALL 0x00403cb0\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402020\n'
p634
S'41 56\n53\n50\n49 89 d6\n48 89 fb\nba 1b c8 40 00\nb9 1f c8 40 00\ne8 47 0c 00 00\nbf 01 00 00 00\n31 c0\n48 89 de\n4c 89 f2\n48 83 c4 08\n5b\n41 5e\ne9 9e ef ff ff\n'
p635
S'.text:0000000000403050\n.text:0000000000403052\n.text:0000000000403053\n.text:0000000000403054\n.text:0000000000403057\n.text:000000000040305a\n.text:000000000040305f\n.text:0000000000403064\n.text:0000000000403069\n.text:000000000040306e\n.text:0000000000403070\n.text:0000000000403073\n.text:0000000000403076\n.text:000000000040307a\n.text:000000000040307b\n.text:000000000040307d\n'
p636
tp637
sS'quotearg_n_style_mem'
p638
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p639
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p640
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x004061b0\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405f80\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p641
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p642
S'.text:0000000000406210\n.text:0000000000406211\n.text:0000000000406213\n.text:0000000000406215\n.text:0000000000406216\n.text:000000000040621a\n.text:000000000040621d\n.text:0000000000406220\n.text:0000000000406222\n.text:0000000000406225\n.text:0000000000406228\n.text:000000000040622d\n.text:000000000040622f\n.text:0000000000406232\n.text:0000000000406235\n.text:0000000000406238\n.text:000000000040623d\n.text:0000000000406241\n.text:0000000000406242\n.text:0000000000406244\n.text:0000000000406246\n.text:0000000000406247\n'
p643
tp644
sS'_exit'
p645
(S'\n__stdcall _exit(int __status)\n'
p646
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_00611060)();\u000a  return;\u000a}\u000a\u000a
p647
S'JMP qword ptr [0x00611060]\n'
p648
S'ff 25 0a f4 20 00\n'
p649
S'.plt:0000000000401c50\n'
p650
tp651
sS'xrealloc'
p652
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p653
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p654
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x004089c7\nTEST RBX,RBX\nJNZ 0x004089c7\nCALL 0x00401be0\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x00401ff0\nTEST RBX,RBX\nJZ 0x004089d9\nTEST RAX,RAX\nJZ 0x004089db\nPOP RBX\nRET\nCALL 0x00408b00\n'
p655
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 1d 92 ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 21 96 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p656
S'.text:00000000004089b0\n.text:00000000004089b1\n.text:00000000004089b4\n.text:00000000004089b7\n.text:00000000004089b9\n.text:00000000004089bc\n.text:00000000004089be\n.text:00000000004089c3\n.text:00000000004089c5\n.text:00000000004089c6\n.text:00000000004089c7\n.text:00000000004089ca\n.text:00000000004089cf\n.text:00000000004089d2\n.text:00000000004089d4\n.text:00000000004089d7\n.text:00000000004089d9\n.text:00000000004089da\n.text:00000000004089db\n'
p657
tp658
sS'out_mount_point'
p659
(S'\n__stdcall out_mount_point(char * filename, char * pformat, size_t prefix_len, stat * statp)\n'
p660
V\u000a_Bool out_mount_point(char *filename,char *pformat,size_t prefix_len,stat *statp)\u000a\u000a{\u000a  uint uVar1;\u000a  char *name;\u000a  char *pcVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *arg;\u000a  undefined uVar5;\u000a  \u000a  if ((follow_links == 0) && ((statp->st_mode & 0xf000) == 0xa000)) {\u000aLAB_0040412c:\u000a    name = find_mount_point(filename,statp);\u000a    if (name == (char *)0x0) {\u000aLAB_00404196:\u000a      pcVar2 = (char *)0x0;\u000a      uVar5 = 1;\u000a      name = (char *)0x0;\u000a      goto LAB_00404198;\u000a    }\u000a    pcVar2 = find_bind_mount(name);\u000a  }\u000a  else {\u000a    name = canonicalize_file_name(filename);\u000a    if (name == (char *)0x0) {\u000a      puVar3 = (uint *)__errno_location();\u000a      uVar1 = *puVar3;\u000a      uVar4 = dcgettext(0,"failed to canonicalize %s",5);\u000a      name = quotearg_style((char *)0x4);\u000a      error(0,(ulong)uVar1,uVar4,name);\u000a      goto LAB_00404196;\u000a    }\u000a    pcVar2 = find_bind_mount(name);\u000a    free(name);\u000a    if (pcVar2 == (char *)0x0) goto LAB_0040412c;\u000a    name = (char *)0x0;\u000a  }\u000a  uVar5 = 0;\u000aLAB_00404198:\u000a  arg = "?";\u000a  if (name != (char *)0x0) {\u000a    arg = name;\u000a  }\u000a  if (pcVar2 != (char *)0x0) {\u000a    arg = pcVar2;\u000a  }\u000a  out_string(pformat,prefix_len,arg);\u000a  free(name);\u000a  return (_Bool)uVar5;\u000a}\u000a\u000a
p661
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBX,RCX\nMOV R14,RDX\nMOV R15,RSI\nMOV R12,RDI\nMOV AL,byte ptr [0x006113e1]\nTEST AL,AL\nJNZ 0x00404100\nMOV EAX,0xf000\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0xa000\nJZ 0x0040412c\nMOV RDI,R12\nCALL 0x00401e20\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x0040414f\nMOV RDI,RBP\nCALL 0x00404640\nMOV R13,RAX\nMOV RDI,RBP\nCALL 0x00401be0\nTEST R13,R13\nJZ 0x0040412c\nXOR EBX,EBX\nJMP 0x0040414a\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x00404780\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00404190\nMOV RDI,RBX\nCALL 0x00404640\nMOV R13,RAX\nXOR R12D,R12D\nJMP 0x00404198\nCALL 0x00401c20\nMOV EBX,dword ptr [RAX]\nXOR R13D,R13D\nXOR EDI,EDI\nMOV ESI,0x40cb2f\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,R12\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RBP\nCALL 0x00402050\nMOV R12B,0x1\nJMP 0x00404196\nMOV R12B,0x1\nXOR R13D,R13D\nXOR EBX,EBX\nTEST RBX,RBX\nMOV EDX,0x40cb2d\nCMOVNZ RDX,RBX\nTEST R13,R13\nCMOVNZ RDX,R13\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00402fd0\nMOV RDI,RBX\nCALL 0x00401be0\nMOV EAX,R12D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p662
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 cb\n49 89 d6\n49 89 f7\n49 89 fc\n8a 05 f4 d2 20 00\n84 c0\n75 0f\nb8 00 f0 00 00\n23 43 18\n3d 00 a0 00 00\n74 2c\n4c 89 e7\ne8 18 dd ff ff\n48 89 c5\n48 85 ed\n74 3f\n48 89 ef\ne8 28 05 00 00\n49 89 c5\n48 89 ef\ne8 bd da ff ff\n4d 85 ed\n74 04\n31 db\neb 1e\n4c 89 e7\n48 89 de\ne8 49 06 00 00\n48 89 c3\n48 85 db\n74 51\n48 89 df\ne8 f9 04 00 00\n49 89 c5\n45 31 e4\neb 49\ne8 cc da ff ff\n8b 18\n45 31 ed\n31 ff\nbe 2f cb 40 00\nba 05 00 00 00\ne8 a6 db ff ff\n48 89 c5\nbf 04 00 00 00\n4c 89 e6\ne8 d6 20 00 00\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ea\ne8 c5 de ff ff\n41 b4 01\neb 06\n41 b4 01\n45 31 ed\n31 db\n48 85 db\nba 2d cb 40 00\n48 0f 45 d3\n4d 85 ed\n49 0f 45 d5\n4c 89 ff\n4c 89 f6\ne8 1a ee ff ff\n48 89 df\ne8 22 da ff ff\n44 89 e0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p663
S'.text:00000000004040d0\n.text:00000000004040d1\n.text:00000000004040d3\n.text:00000000004040d5\n.text:00000000004040d7\n.text:00000000004040d9\n.text:00000000004040da\n.text:00000000004040db\n.text:00000000004040de\n.text:00000000004040e1\n.text:00000000004040e4\n.text:00000000004040e7\n.text:00000000004040ed\n.text:00000000004040ef\n.text:00000000004040f1\n.text:00000000004040f6\n.text:00000000004040f9\n.text:00000000004040fe\n.text:0000000000404100\n.text:0000000000404103\n.text:0000000000404108\n.text:000000000040410b\n.text:000000000040410e\n.text:0000000000404110\n.text:0000000000404113\n.text:0000000000404118\n.text:000000000040411b\n.text:000000000040411e\n.text:0000000000404123\n.text:0000000000404126\n.text:0000000000404128\n.text:000000000040412a\n.text:000000000040412c\n.text:000000000040412f\n.text:0000000000404132\n.text:0000000000404137\n.text:000000000040413a\n.text:000000000040413d\n.text:000000000040413f\n.text:0000000000404142\n.text:0000000000404147\n.text:000000000040414a\n.text:000000000040414d\n.text:000000000040414f\n.text:0000000000404154\n.text:0000000000404156\n.text:0000000000404159\n.text:000000000040415b\n.text:0000000000404160\n.text:0000000000404165\n.text:000000000040416a\n.text:000000000040416d\n.text:0000000000404172\n.text:0000000000404175\n.text:000000000040417a\n.text:000000000040417d\n.text:000000000040417f\n.text:0000000000404181\n.text:0000000000404183\n.text:0000000000404186\n.text:000000000040418b\n.text:000000000040418e\n.text:0000000000404190\n.text:0000000000404193\n.text:0000000000404196\n.text:0000000000404198\n.text:000000000040419b\n.text:00000000004041a0\n.text:00000000004041a4\n.text:00000000004041a7\n.text:00000000004041ab\n.text:00000000004041ae\n.text:00000000004041b1\n.text:00000000004041b6\n.text:00000000004041b9\n.text:00000000004041be\n.text:00000000004041c1\n.text:00000000004041c5\n.text:00000000004041c6\n.text:00000000004041c8\n.text:00000000004041ca\n.text:00000000004041cc\n.text:00000000004041ce\n.text:00000000004041cf\n'
p664
tp665
sS'xgetcwd'
p666
(S'\n__stdcall xgetcwd()\n'
p667
V\u000achar * xgetcwd(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  int *piVar2;\u000a  \u000a  pcVar1 = getcwd((char *)0x0,0);\u000a  if (pcVar1 == (char *)0x0) {\u000a    piVar2 = __errno_location();\u000a    if (*piVar2 == 0xc) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die();\u000a    }\u000a  }\u000a  return pcVar1;\u000a}\u000a\u000a
p668
S'PUSH RBX\nXOR EDI,EDI\nXOR ESI,ESI\nCALL 0x00401e10\nMOV RBX,RAX\nTEST RBX,RBX\nJNZ 0x00408b4c\nCALL 0x00401c20\nCMP dword ptr [RAX],0xc\nJZ 0x00408b51\nMOV RAX,RBX\nPOP RBX\nRET\nCALL 0x00408b00\n'
p669
S'53\n31 ff\n31 f6\ne8 d6 92 ff ff\n48 89 c3\n48 85 db\n75 0a\ne8 d9 90 ff ff\n83 38 0c\n74 05\n48 89 d8\n5b\nc3\ne8 aa ff ff ff\n'
p670
S'.text:0000000000408b30\n.text:0000000000408b31\n.text:0000000000408b33\n.text:0000000000408b35\n.text:0000000000408b3a\n.text:0000000000408b3d\n.text:0000000000408b40\n.text:0000000000408b42\n.text:0000000000408b47\n.text:0000000000408b4a\n.text:0000000000408b4c\n.text:0000000000408b4f\n.text:0000000000408b50\n.text:0000000000408b51\n'
p671
tp672
sS'dir_name'
p673
(S'\n__stdcall dir_name(char * file)\n'
p674
V\u000achar * dir_name(char *file)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = mdir_name(file);\u000a  if (pcVar1 != (char *)0x0) {\u000a    return pcVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p675
S'PUSH RAX\nCALL 0x00404c50\nTEST RAX,RAX\nJZ 0x00404bfd\nPOP RCX\nRET\nCALL 0x00408b00\n'
p676
S'50\ne8 5a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 fe 3e 00 00\n'
p677
S'.text:0000000000404bf0\n.text:0000000000404bf1\n.text:0000000000404bf6\n.text:0000000000404bf9\n.text:0000000000404bfb\n.text:0000000000404bfc\n.text:0000000000404bfd\n'
p678
tp679
sS'close_stdout'
p680
(S'\n__stdcall close_stdout()\n'
p681
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00404b57;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,0x40cc6c,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00404b57:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p682
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x00611388]\nCALL 0x00409d50\nTEST EAX,EAX\nJZ 0x00404b57\nCMP byte ptr [0x00611470],0x0\nJZ 0x00404b6c\nCALL 0x00401c20\nCMP dword ptr [RAX],0x20\nJNZ 0x00404b6c\nMOV RDI,qword ptr [0x006113c0]\nCALL 0x00409d50\nTEST EAX,EAX\nJNZ 0x00404bb1\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x40cc5c\nMOV EDX,0x5\nCALL 0x00401d10\nMOV R14,RAX\nMOV RBX,qword ptr [0x00611468]\nCALL 0x00401c20\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x00404bbc\nXOR EDI,EDI\nMOV EDX,0x40cc6c\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00402050\nMOV EDI,dword ptr [0x00611320]\nCALL 0x00401c50\nMOV EDI,dword ptr [0x00611320]\nCALL 0x00401c50\nMOV RDI,RBX\nCALL 0x00406310\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x40cc68\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00402050\nMOV EDI,dword ptr [0x00611320]\nCALL 0x00401c50\n'
p683
S'55\n41 56\n53\n48 8b 3d 4d c8 20 00\ne8 10 52 00 00\n85 c0\n74 13\n80 3d 25 c9 20 00 00\n74 1f\ne8 ce d0 ff ff\n83 38 20\n75 15\n48 8b 3d 62 c8 20 00\ne8 ed 51 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe 5c cc 40 00\nba 05 00 00 00\ne8 93 d1 ff ff\n49 89 c6\n48 8b 1d e1 c8 20 00\ne8 94 d0 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba 6c cc 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 aa d4 ff ff\n8b 3d 74 c7 20 00\ne8 9f d0 ff ff\n8b 3d 69 c7 20 00\ne8 94 d0 ff ff\n48 89 df\ne8 4c 17 00 00\n48 89 c1\n31 ff\nba 68 cc 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 76 d4 ff ff\n8b 3d 40 c7 20 00\ne8 6b d0 ff ff\n'
p684
S'.text:0000000000404b30\n.text:0000000000404b31\n.text:0000000000404b33\n.text:0000000000404b34\n.text:0000000000404b3b\n.text:0000000000404b40\n.text:0000000000404b42\n.text:0000000000404b44\n.text:0000000000404b4b\n.text:0000000000404b4d\n.text:0000000000404b52\n.text:0000000000404b55\n.text:0000000000404b57\n.text:0000000000404b5e\n.text:0000000000404b63\n.text:0000000000404b65\n.text:0000000000404b67\n.text:0000000000404b68\n.text:0000000000404b6a\n.text:0000000000404b6b\n.text:0000000000404b6c\n.text:0000000000404b6e\n.text:0000000000404b73\n.text:0000000000404b78\n.text:0000000000404b7d\n.text:0000000000404b80\n.text:0000000000404b87\n.text:0000000000404b8c\n.text:0000000000404b8f\n.text:0000000000404b91\n.text:0000000000404b93\n.text:0000000000404b95\n.text:0000000000404b9a\n.text:0000000000404b9c\n.text:0000000000404b9e\n.text:0000000000404ba1\n.text:0000000000404ba6\n.text:0000000000404bac\n.text:0000000000404bb1\n.text:0000000000404bb7\n.text:0000000000404bbc\n.text:0000000000404bbf\n.text:0000000000404bc4\n.text:0000000000404bc7\n.text:0000000000404bc9\n.text:0000000000404bce\n.text:0000000000404bd0\n.text:0000000000404bd2\n.text:0000000000404bd5\n.text:0000000000404bda\n.text:0000000000404be0\n'
p685
tp686
sS'version_etc_ar'
p687
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p688
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p689
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x004087c0\nJMP 0x00408450\n'
p690
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p691
S'.text:00000000004087b0\n.text:00000000004087b7\n.text:00000000004087c0\n.text:00000000004087c6\n.text:00000000004087ca\n.text:00000000004087cc\n'
p692
tp693
sS'__ctype_tolower_loc'
p694
(S'\n__stdcall __ctype_tolower_loc()\n'
p695
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_006112e8)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p696
S'JMP qword ptr [0x006112e8]\n'
p697
S'ff 25 82 f1 20 00\n'
p698
S'.plt:0000000000402160\n'
p699
tp700
sS'print_statfs'
p701
(S'\n__stdcall print_statfs(char * pformat, size_t prefix_len, char * filename, void * data)\n'
p702
V\u000a_Bool print_statfs(char *pformat,size_t prefix_len,char *filename,void *data)\u000a\u000a{\u000a  char *arg;\u000a  long lVar1;\u000a  long lVar2;\u000a  __fsblkcnt_t arg_00;\u000a  uintmax_t arg_01;\u000a  char *arg_02;\u000a  statfs *statfsbuf;\u000a  uint *puVar3;\u000a  \u000a  switch((int)filename) {\u000a  case 0x53:\u000a    break;\u000a  case 0x54:\u000a    arg = human_fstype(statfsbuf);\u000a    out_string(pformat,prefix_len,arg);\u000a    return false;\u000a  default:\u000a    fputc_unlocked(0x3f,stdout);\u000a    return false;\u000a  case 0x61:\u000a    arg_00 = statfsbuf->f_bavail;\u000a    goto LAB_00402edc;\u000a  case 0x62:\u000a    arg_00 = statfsbuf->f_blocks;\u000a    goto LAB_00402edc;\u000a  case 99:\u000a    break;\u000a  case 100:\u000a    arg_00 = statfsbuf->f_ffree;\u000a    goto LAB_00402edc;\u000a  case 0x66:\u000a    arg_00 = statfsbuf->f_bfree;\u000aLAB_00402edc:\u000a    out_int(pformat,prefix_len,arg_00);\u000a    return false;\u000a  case 0x69:\u000a    puVar3 = (uint *)((statfsbuf->f_fsid).__val + 1);\u000a    lVar2 = 0;\u000a    lVar1 = 0;\u000a    arg_01 = 0;\u000a    do {\u000a      arg_01 = arg_01 | (ulong)*puVar3 << ((byte)lVar2 & 0x3f);\u000a      lVar1 = lVar1 + 1;\u000a      puVar3 = puVar3 + -1;\u000a      lVar2 = lVar2 + 0x20;\u000a    } while (lVar1 < 2);\u000a    goto LAB_00402f40;\u000a  case 0x6c:\u000a    break;\u000a  case 0x6e:\u000a    out_string(pformat,prefix_len,arg_02);\u000a    return false;\u000a  case 0x73:\u000a    break;\u000a  case 0x74:\u000a    arg_01 = statfsbuf->f_type;\u000aLAB_00402f40:\u000a    out_uint_x(pformat,prefix_len,arg_01);\u000a    return false;\u000a  }\u000a  out_uint();\u000a  return false;\u000a}\u000a\u000a
p703
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nADD EDX,-0x53\nCMP EDX,0x21\nJA 0x00402eaa\nJMP qword ptr [0x40b080 + RDX*0x8]\nMOV RDX,qword ptr [R9 + 0x48]\nTEST RDX,RDX\nJNZ 0x00402f20\nMOV RDX,qword ptr [R9 + 0x8]\nJMP 0x00402f20\nMOV RDI,R9\nCALL 0x00403090\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00402fd0\nJMP 0x00402f4b\nMOV RSI,qword ptr [0x00611388]\nMOV EDI,0x3f\nCALL 0x00401eb0\nJMP 0x00402f4b\nMOV RDX,qword ptr [R9 + 0x20]\nJMP 0x00402edc\nMOV RDX,qword ptr [R9 + 0x10]\nJMP 0x00402edc\nMOV RDX,qword ptr [R9 + 0x28]\nJMP 0x00402f20\nMOV RDX,qword ptr [R9 + 0x30]\nJMP 0x00402edc\nMOV RDX,qword ptr [R9 + 0x18]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00403c70\nJMP 0x00402f4b\nADD R9,0x3c\nXOR ECX,ECX\nXOR EAX,EAX\nXOR EDX,EDX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV ESI,dword ptr [R9]\nSHL RSI,CL\nOR RDX,RSI\nINC RAX\nADD R9,-0x4\nADD RCX,0x20\nCMP RAX,0x2\nJL 0x00402f00\nJMP 0x00402f40\nMOV RDX,qword ptr [R9 + 0x40]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00403050\nJMP 0x00402f4b\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R8\nCALL 0x00402fd0\nJMP 0x00402f4b\nMOV RDX,qword ptr [R9]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00403010\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p704
S'41 56\n53\n50\n49 89 f6\n48 89 fb\n83 c2 ad\n83 fa 21\n77 38\nff 24 d5 80 b0 40 00\n49 8b 51 48\n48 85 d2\n0f 85 9a 00 00 00\n49 8b 51 08\ne9 91 00 00 00\n4c 89 cf\ne8 f9 01 00 00\n48 89 df\n4c 89 f6\n48 89 c2\ne8 2b 01 00 00\ne9 a1 00 00 00\n48 8b 35 d7 e4 20 00\nbf 3f 00 00 00\ne8 f5 ef ff ff\ne9 8b 00 00 00\n49 8b 51 20\neb 16\n49 8b 51 10\neb 10\n49 8b 51 28\neb 4e\n49 8b 51 30\neb 04\n49 8b 51 18\n48 89 df\n4c 89 f6\ne8 89 0d 00 00\neb 62\n49 83 c1 3c\n31 c9\n31 c0\n31 d2\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n41 8b 31\n48 d3 e6\n48 09 f2\n48 ff c0\n49 83 c1 fc\n48 83 c1 20\n48 83 f8 02\n7c e6\neb 24\n49 8b 51 40\n48 89 df\n4c 89 f6\ne8 25 01 00 00\neb 1e\n48 89 df\n4c 89 f6\n4c 89 c2\ne8 95 00 00 00\neb 0e\n49 8b 11\n48 89 df\n4c 89 f6\ne8 c5 00 00 00\n31 c0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p705
S'.text:0000000000402e60\n.text:0000000000402e62\n.text:0000000000402e63\n.text:0000000000402e64\n.text:0000000000402e67\n.text:0000000000402e6a\n.text:0000000000402e6d\n.text:0000000000402e70\n.text:0000000000402e72\n.text:0000000000402e79\n.text:0000000000402e7d\n.text:0000000000402e80\n.text:0000000000402e86\n.text:0000000000402e8a\n.text:0000000000402e8f\n.text:0000000000402e92\n.text:0000000000402e97\n.text:0000000000402e9a\n.text:0000000000402e9d\n.text:0000000000402ea0\n.text:0000000000402ea5\n.text:0000000000402eaa\n.text:0000000000402eb1\n.text:0000000000402eb6\n.text:0000000000402ebb\n.text:0000000000402ec0\n.text:0000000000402ec4\n.text:0000000000402ec6\n.text:0000000000402eca\n.text:0000000000402ecc\n.text:0000000000402ed0\n.text:0000000000402ed2\n.text:0000000000402ed6\n.text:0000000000402ed8\n.text:0000000000402edc\n.text:0000000000402edf\n.text:0000000000402ee2\n.text:0000000000402ee7\n.text:0000000000402ee9\n.text:0000000000402eed\n.text:0000000000402eef\n.text:0000000000402ef1\n.text:0000000000402ef3\n.text:0000000000402f00\n.text:0000000000402f03\n.text:0000000000402f06\n.text:0000000000402f09\n.text:0000000000402f0c\n.text:0000000000402f10\n.text:0000000000402f14\n.text:0000000000402f18\n.text:0000000000402f1a\n.text:0000000000402f1c\n.text:0000000000402f20\n.text:0000000000402f23\n.text:0000000000402f26\n.text:0000000000402f2b\n.text:0000000000402f2d\n.text:0000000000402f30\n.text:0000000000402f33\n.text:0000000000402f36\n.text:0000000000402f3b\n.text:0000000000402f3d\n.text:0000000000402f40\n.text:0000000000402f43\n.text:0000000000402f46\n.text:0000000000402f4b\n.text:0000000000402f4d\n.text:0000000000402f51\n.text:0000000000402f52\n.text:0000000000402f54\n'
p706
tp707
sS'c_isxdigit'
p708
(S'\n__stdcall c_isxdigit()\n'
p709
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p710
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x00409cbb\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p711
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p712
S'.text:0000000000409ca0\n.text:0000000000409ca3\n.text:0000000000409ca6\n.text:0000000000409ca8\n.text:0000000000409cb2\n.text:0000000000409cb4\n.text:0000000000409cb7\n.text:0000000000409cba\n.text:0000000000409cbb\n.text:0000000000409cbd\n'
p713
tp714
sS'__libc_csu_fini'
p715
(S'\n__stdcall __libc_csu_fini()\n'
p716
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p717
S'RET\n'
p718
S'f3 c3\n'
p719
S'.text:000000000040af00\n'
p720
tp721
sS'memcpy_uppcase'
p722
(S'\n__stdcall memcpy_uppcase(size_t len)\n'
p723
V\u000achar * memcpy_uppcase(size_t len)\u000a\u000a{\u000a  __int32_t **in_RAX;\u000a  long in_RDX;\u000a  long in_RSI;\u000a  \u000a  if (in_RDX != 0) {\u000a    in_RAX = __ctype_toupper_loc();\u000a    do {\u000a      *(undefined *)((len - 1) + in_RDX) =\u000a           *(undefined *)(*in_RAX + (ulong)*(byte *)(in_RSI + -1 + in_RDX));\u000a      in_RDX = in_RDX + -1;\u000a    } while (in_RDX != 0);\u000a  }\u000a  return (char *)in_RAX;\u000a}\u000a\u000a
p724
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV RBX,RDX\nMOV R14,RSI\nMOV R15,RDI\nTEST RBX,RBX\nJZ 0x00408407\nCALL 0x00401bc0\nNOP dword ptr [RAX + RAX*0x1]\nMOV RCX,qword ptr [RAX]\nMOVZX EDX,byte ptr [R14 + RBX*0x1 + -0x1]\nMOVZX ECX,byte ptr [RCX + RDX*0x4]\nMOV byte ptr [R15 + RBX*0x1 + -0x1],CL\nDEC RBX\nJNZ 0x004083f0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p725
S'41 57\n41 56\n53\n48 89 d3\n49 89 f6\n49 89 ff\n48 85 db\n74 24\ne8 d8 97 ff ff\n0f 1f 84 00 00 00 00 00\n48 8b 08\n41 0f b6 54 1e ff\n0f b6 0c 91\n41 88 4c 1f ff\n48 ff cb\n75 e9\n5b\n41 5e\n41 5f\nc3\n'
p726
S'.text:00000000004083d0\n.text:00000000004083d2\n.text:00000000004083d4\n.text:00000000004083d5\n.text:00000000004083d8\n.text:00000000004083db\n.text:00000000004083de\n.text:00000000004083e1\n.text:00000000004083e3\n.text:00000000004083e8\n.text:00000000004083f0\n.text:00000000004083f3\n.text:00000000004083f9\n.text:00000000004083fd\n.text:0000000000408402\n.text:0000000000408405\n.text:0000000000408407\n.text:0000000000408408\n.text:000000000040840a\n.text:000000000040840c\n'
p727
tp728
sS'abort'
p729
(S'\n__stdcall abort()\n'
p730
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_00611040)();\u000a  return;\u000a}\u000a\u000a
p731
S'JMP qword ptr [0x00611040]\n'
p732
S'ff 25 2a f4 20 00\n'
p733
S'.plt:0000000000401c10\n'
p734
tp735
sS'strstr'
p736
(S'\n__stdcall strstr(char * __haystack, char * __needle)\n'
p737
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strstr(char *__haystack,char *__needle)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strstr_006112e0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p738
S'JMP qword ptr [0x006112e0]\n'
p739
S'ff 25 8a f1 20 00\n'
p740
S'.plt:0000000000402150\n'
p741
tp742
sS'security_check_context_raw'
p743
(S'\n__stdcall security_check_context_raw(security_context_t con)\n'
p744
V\u000aint security_check_context_raw(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p745
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p746
S'50\ne8 9a b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p747
S'.text:0000000000406a80\n.text:0000000000406a81\n.text:0000000000406a86\n.text:0000000000406a8c\n.text:0000000000406a91\n.text:0000000000406a92\n'
p748
tp749
sS'neg_to_zero'
p750
(S'\n__stdcall neg_to_zero()\n'
p751
V\u000atimespec neg_to_zero(void)\u000a\u000a{\u000a  long lVar1;\u000a  long lVar2;\u000a  long in_RSI;\u000a  long in_RDI;\u000a  \u000a  lVar2 = 0;\u000a  lVar1 = lVar2;\u000a  if (-1 < in_RSI) {\u000a    lVar2 = in_RSI;\u000a    lVar1 = in_RDI;\u000a  }\u000a  return (timespec)CONCAT88(lVar2,lVar1);\u000a}\u000a\u000a
p752
S'XOR EDX,EDX\nTEST RSI,RSI\nCMOVS RDI,RDX\nCMOVNS RDX,RSI\nMOV RAX,RDI\nRET\n'
p753
S'31 d2\n48 85 f6\n48 0f 48 fa\n48 0f 49 d6\n48 89 f8\nc3\n'
p754
S'.text:0000000000404540\n.text:0000000000404542\n.text:0000000000404545\n.text:0000000000404549\n.text:000000000040454d\n.text:0000000000404550\n'
p755
tp756
sS'version_etc'
p757
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p758
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p759
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00408882\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x004087e0\nADD RSP,0xd8\nRET\n'
p760
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p761
S'.text:0000000000408840\n.text:0000000000408847\n.text:0000000000408849\n.text:000000000040884b\n.text:0000000000408850\n.text:0000000000408855\n.text:000000000040885a\n.text:0000000000408862\n.text:000000000040886a\n.text:0000000000408872\n.text:000000000040887a\n.text:0000000000408882\n.text:0000000000408887\n.text:000000000040888c\n.text:0000000000408891\n.text:0000000000408896\n.text:000000000040889e\n.text:00000000004088a3\n.text:00000000004088ab\n.text:00000000004088b2\n.text:00000000004088b5\n.text:00000000004088ba\n.text:00000000004088c1\n'
p762
tp763
sS'xstrcat'
p764
(S'\n__stdcall xstrcat(size_t argcount, __va_list_tag * args)\n'
p765
V\u000achar * xstrcat(size_t argcount,__va_list_tag *args)\u000a\u000a{\u000a  uint uVar1;\u000a  void *pvVar2;\u000a  char *__s;\u000a  size_t size2;\u000a  size_t size1;\u000a  int *piVar3;\u000a  char **ppcVar4;\u000a  ulong uVar5;\u000a  char *__dest;\u000a  size_t sVar6;\u000a  char *pcVar7;\u000a  va_list ap;\u000a  uint local_48;\u000a  char **local_40;\u000a  \u000a  pvVar2 = args->reg_save_area;\u000a  local_48 = args->gp_offset;\u000a  local_40 = (char **)args->overflow_arg_area;\u000a  if (argcount == 0) {\u000a    __dest = (char *)xmalloc(1);\u000a    pcVar7 = __dest;\u000a  }\u000a  else {\u000a    size1 = 0;\u000a    sVar6 = argcount;\u000a    do {\u000a      uVar5 = SEXT48((int)local_48);\u000a      if (uVar5 < 0x29) {\u000a        local_48 = local_48 + 8;\u000a        ppcVar4 = (char **)(uVar5 + (long)pvVar2);\u000a      }\u000a      else {\u000a        ppcVar4 = local_40;\u000a        local_40 = local_40 + 1;\u000a      }\u000a      size2 = strlen(*ppcVar4);\u000a      size1 = xsum(size1,size2);\u000a      sVar6 = sVar6 - 1;\u000a    } while (sVar6 != 0);\u000a    if ((size1 & 0xffffffff80000000) != 0) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0x4b;\u000a      return (char *)0x0;\u000a    }\u000a    pcVar7 = (char *)xmalloc(size1 + 1);\u000a    __dest = pcVar7;\u000a    if (argcount != 0) {\u000a      do {\u000a        uVar1 = args->gp_offset;\u000a        if ((ulong)(long)(int)uVar1 < 0x29) {\u000a          ppcVar4 = (char **)((long)(int)uVar1 + (long)args->reg_save_area);\u000a          args->gp_offset = uVar1 + 8;\u000a        }\u000a        else {\u000a          ppcVar4 = (char **)args->overflow_arg_area;\u000a          *(char ***)&args->overflow_arg_area = ppcVar4 + 1;\u000a        }\u000a        __s = *ppcVar4;\u000a        size2 = strlen(__s);\u000a        memcpy(__dest,__s,size2);\u000a        __dest = __dest + size2;\u000a        argcount = argcount - 1;\u000a      } while (argcount != 0);\u000a    }\u000a  }\u000a  *__dest = 0;\u000a  return pcVar7;\u000a}\u000a\u000a
p766
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R14,RSI\nMOV R12,RDI\nMOV RAX,qword ptr [R14 + 0x10]\nMOV qword ptr [RSP + 0x10],RAX\nMOVUPS XMM0,xmmword ptr [R14]\nMOVAPS xmmword ptr [RSP],XMM0\nTEST R12,R12\nJZ 0x0040a315\nXOR EBX,EBX\nMOV RBP,R12\nNOP\nMOVSXD RCX,dword ptr [RSP]\nCMP RCX,0x28\nJA 0x0040a2d0\nMOV RAX,RCX\nADD RAX,qword ptr [RSP + 0x10]\nLEA ECX,[RCX + 0x8]\nMOV dword ptr [RSP],ECX\nJMP 0x0040a2de\nMOV RAX,qword ptr [RSP + 0x8]\nLEA RCX,[RAX + 0x8]\nMOV qword ptr [RSP + 0x8],RCX\nMOV RDI,qword ptr [RAX]\nCALL 0x00401d30\nMOV RDI,RBX\nMOV RSI,RAX\nCALL 0x0040ae10\nMOV RBX,RAX\nDEC RBP\nJNZ 0x0040a2b0\nTEST RBX,-0x80000000\nJZ 0x0040a327\nCALL 0x00401c20\nMOV dword ptr [RAX],0x4b\nXOR R15D,R15D\nJMP 0x0040a393\nMOV EDI,0x1\nCALL 0x00408970\nMOV R15,RAX\nMOV RBX,R15\nJMP 0x0040a390\nINC RBX\nMOV RDI,RBX\nCALL 0x00408970\nMOV R15,RAX\nMOV RBX,R15\nTEST R12,R12\nJZ 0x0040a390\nNOP dword ptr [RAX]\nMOVSXD RCX,dword ptr [R14]\nCMP RCX,0x28\nJA 0x0040a360\nMOV RAX,RCX\nADD RAX,qword ptr [R14 + 0x10]\nLEA ECX,[RCX + 0x8]\nMOV dword ptr [R14],ECX\nJMP 0x0040a36c\nMOV RAX,qword ptr [R14 + 0x8]\nLEA RCX,[RAX + 0x8]\nMOV qword ptr [R14 + 0x8],RCX\nMOV R13,qword ptr [RAX]\nMOV RDI,R13\nCALL 0x00401d30\nMOV RBP,RAX\nMOV RDI,RBX\nMOV RSI,R13\nMOV RDX,RBP\nCALL 0x00401ed0\nADD RBX,RBP\nDEC R12\nJNZ 0x0040a340\nMOV byte ptr [RBX],0x0\nMOV RAX,R15\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p767
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 f6\n49 89 fc\n49 8b 46 10\n48 89 44 24 10\n41 0f 10 06\n0f 29 04 24\n4d 85 e4\n74 6b\n31 db\n4c 89 e5\n90\n48 63 0c 24\n48 83 f9 28\n77 16\n48 89 c8\n48 03 44 24 10\n8d 49 08\n89 0c 24\neb 14\n48 8b 44 24 08\n48 8d 48 08\n48 89 4c 24 08\n48 8b 38\ne8 4a 7a ff ff\n48 89 df\n48 89 c6\ne8 1f 0b 00 00\n48 89 c3\n48 ff cd\n75 b7\n48 f7 c3 00 00 00 80\n74 25\ne8 19 79 ff ff\nc7 00 4b 00 00 00\n45 31 ff\ne9 7e 00 00 00\nbf 01 00 00 00\ne8 51 e6 ff ff\n49 89 c7\n4c 89 fb\neb 69\n48 ff c3\n48 89 df\ne8 3e e6 ff ff\n49 89 c7\n4c 89 fb\n4d 85 e4\n74 53\n0f 1f 00\n49 63 0e\n48 83 f9 28\n77 17\n48 89 c8\n49 03 46 10\n8d 49 08\n41 89 0e\neb 14\n49 8b 46 08\n48 8d 48 08\n49 89 4e 08\n4c 8b 28\n4c 89 ef\ne8 b9 79 ff ff\n48 89 c5\n48 89 df\n4c 89 ee\n48 89 ea\ne8 48 7b ff ff\n48 01 eb\n49 ff cc\n75 b0\nc6 03 00\n4c 89 f8\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p768
S'.text:000000000040a280\n.text:000000000040a281\n.text:000000000040a283\n.text:000000000040a285\n.text:000000000040a287\n.text:000000000040a289\n.text:000000000040a28a\n.text:000000000040a28e\n.text:000000000040a291\n.text:000000000040a294\n.text:000000000040a298\n.text:000000000040a29d\n.text:000000000040a2a1\n.text:000000000040a2a5\n.text:000000000040a2a8\n.text:000000000040a2aa\n.text:000000000040a2ac\n.text:000000000040a2af\n.text:000000000040a2b0\n.text:000000000040a2b4\n.text:000000000040a2b8\n.text:000000000040a2ba\n.text:000000000040a2bd\n.text:000000000040a2c2\n.text:000000000040a2c5\n.text:000000000040a2c8\n.text:000000000040a2d0\n.text:000000000040a2d5\n.text:000000000040a2d9\n.text:000000000040a2de\n.text:000000000040a2e1\n.text:000000000040a2e6\n.text:000000000040a2e9\n.text:000000000040a2ec\n.text:000000000040a2f1\n.text:000000000040a2f4\n.text:000000000040a2f7\n.text:000000000040a2f9\n.text:000000000040a300\n.text:000000000040a302\n.text:000000000040a307\n.text:000000000040a30d\n.text:000000000040a310\n.text:000000000040a315\n.text:000000000040a31a\n.text:000000000040a31f\n.text:000000000040a322\n.text:000000000040a325\n.text:000000000040a327\n.text:000000000040a32a\n.text:000000000040a32d\n.text:000000000040a332\n.text:000000000040a335\n.text:000000000040a338\n.text:000000000040a33b\n.text:000000000040a33d\n.text:000000000040a340\n.text:000000000040a343\n.text:000000000040a347\n.text:000000000040a349\n.text:000000000040a34c\n.text:000000000040a350\n.text:000000000040a353\n.text:000000000040a356\n.text:000000000040a360\n.text:000000000040a364\n.text:000000000040a368\n.text:000000000040a36c\n.text:000000000040a36f\n.text:000000000040a372\n.text:000000000040a377\n.text:000000000040a37a\n.text:000000000040a37d\n.text:000000000040a380\n.text:000000000040a383\n.text:000000000040a388\n.text:000000000040a38b\n.text:000000000040a38e\n.text:000000000040a390\n.text:000000000040a393\n.text:000000000040a396\n.text:000000000040a39a\n.text:000000000040a39b\n.text:000000000040a39d\n.text:000000000040a39f\n.text:000000000040a3a1\n.text:000000000040a3a3\n.text:000000000040a3a4\n'
p769
tp770
sS'human_time'
p771
(S'\n__stdcall human_time()\n'
p772
V\u000achar * human_time(void)\u000a\u000a{\u000a  char str [44];\u000a  timezone_t tz;\u000a  char *name;\u000a  tm *tp;\u000a  time_t local_18 [2];\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    name = getenv("TZ");\u000a    tz = tzalloc(name);\u000a  }\u000a  tp = localtime(local_18);\u000a  if (tp == (tm *)0x0) {\u000a    name = timetostr();\u000a  }\u000a  else {\u000a    name = &ram0x00611430;\u000a    nstrftime((char *)0x611430,0x2c,"%Y-%m-%d %H:%M:%S.%N %z",(tm *)tp,tz);\u000a  }\u000a  return name;\u000a}\u000a\u000a
p773
S'PUSH RBX\nSUB RSP,0x10\nMOV qword ptr [RSP],RDI\nMOV qword ptr [RSP + 0x8],RSI\nCMP qword ptr [0x00611460],0x0\nJNZ 0x00404211\nMOV EDI,0x40cb73\nCALL 0x00401bd0\nMOV RDI,RAX\nCALL 0x004096e0\nMOV qword ptr [0x00611460],RAX\nMOV RDI,RSP\nCALL 0x00401c00\nTEST RAX,RAX\nJZ 0x00404248\nMOV R8,qword ptr [0x00611460]\nMOV R9D,dword ptr [RSP + 0x8]\nMOV EBX,0x611430\nMOV EDI,0x611430\nMOV ESI,0x2c\nMOV EDX,0x40cb76\nMOV RCX,RAX\nCALL 0x00406b90\nJMP 0x00404254\nMOV RDI,qword ptr [RSP]\nCALL 0x00404740\nMOV RBX,RAX\nMOV RAX,RBX\nADD RSP,0x10\nPOP RBX\nRET\n'
p774
S'53\n48 83 ec 10\n48 89 3c 24\n48 89 74 24 08\n48 83 3d 6a d2 20 00 00\n75 19\nbf 73 cb 40 00\ne8 ce d9 ff ff\n48 89 c7\ne8 d6 54 00 00\n48 89 05 4f d2 20 00\n48 89 e7\ne8 e7 d9 ff ff\n48 85 c0\n74 2a\n4c 8b 05 3b d2 20 00\n44 8b 4c 24 08\nbb 30 14 61 00\nbf 30 14 61 00\nbe 2c 00 00 00\nba 76 cb 40 00\n48 89 c1\ne8 4a 29 00 00\neb 0c\n48 8b 3c 24\ne8 ef 04 00 00\n48 89 c3\n48 89 d8\n48 83 c4 10\n5b\nc3\n'
p775
S'.text:00000000004041e0\n.text:00000000004041e1\n.text:00000000004041e5\n.text:00000000004041e9\n.text:00000000004041ee\n.text:00000000004041f6\n.text:00000000004041f8\n.text:00000000004041fd\n.text:0000000000404202\n.text:0000000000404205\n.text:000000000040420a\n.text:0000000000404211\n.text:0000000000404214\n.text:0000000000404219\n.text:000000000040421c\n.text:000000000040421e\n.text:0000000000404225\n.text:000000000040422a\n.text:000000000040422f\n.text:0000000000404234\n.text:0000000000404239\n.text:000000000040423e\n.text:0000000000404241\n.text:0000000000404246\n.text:0000000000404248\n.text:000000000040424c\n.text:0000000000404251\n.text:0000000000404254\n.text:0000000000404257\n.text:000000000040425b\n.text:000000000040425c\n'
p776
tp777
sS'lseek'
p778
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p779
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_00611120)();\u000a  return _Var1;\u000a}\u000a\u000a
p780
S'JMP qword ptr [0x00611120]\n'
p781
S'ff 25 4a f3 20 00\n'
p782
S'.plt:0000000000401dd0\n'
p783
tp784
sS'cdb_init'
p785
(S'\n__stdcall cdb_init(cd_buf * cdb)\n'
p786
V\u000avoid cdb_init(cd_buf *cdb)\u000a\u000a{\u000a  *cdb = (cd_buf)0xffffff9c;\u000a  return;\u000a}\u000a\u000a
p787
S'MOV dword ptr [RDI],0xffffff9c\nRET\n'
p788
S'c7 07 9c ff ff ff\nc3\n'
p789
S'.text:0000000000408eb0\n.text:0000000000408eb6\n'
p790
tp791
sS'get_birthtime'
p792
(S'\n__stdcall get_birthtime(stat * st)\n'
p793
V\u000atimespec get_birthtime(stat *st)\u000a\u000a{\u000a  return (timespec)CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\u000a}\u000a\u000a
p794
S'JMP 0x00406b80\n'
p795
S'e9 ab 29 00 00\n'
p796
S'.text:00000000004041d0\n'
p797
tp798
sS'readlink'
p799
(S'\n__stdcall readlink(char * __path, char * __buf, size_t __len)\n'
p800
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000assize_t readlink(char *__path,char *__buf,size_t __len)\u000a\u000a{\u000a  ssize_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_readlink_00611088)();\u000a  return sVar1;\u000a}\u000a\u000a
p801
S'JMP qword ptr [0x00611088]\n'
p802
S'ff 25 e2 f3 20 00\n'
p803
S'.plt:0000000000401ca0\n'
p804
tp805
sS'memrchr'
p806
(S'\n__stdcall memrchr(void * __s, int __c, size_t __n)\n'
p807
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memrchr(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memrchr_00611268)();\u000a  return pvVar1;\u000a}\u000a\u000a
p808
S'JMP qword ptr [0x00611268]\n'
p809
S'ff 25 02 f2 20 00\n'
p810
S'.plt:0000000000402060\n'
p811
tp812
sS'quotearg_n_mem'
p813
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p814
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p815
S'MOV ECX,0x611480\nJMP 0x00405f80\n'
p816
S'b9 80 14 61 00\ne9 36 fe ff ff\n'
p817
S'.text:0000000000406140\n.text:0000000000406145\n'
p818
tp819
sS'__printf_chk'
p820
(S'\n__stdcall __printf_chk()\n'
p821
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_00611248)();\u000a  return;\u000a}\u000a\u000a
p822
S'JMP qword ptr [0x00611248]\n'
p823
S'ff 25 22 f2 20 00\n'
p824
S'.plt:0000000000402020\n'
p825
tp826
sS'base_len'
p827
(S'\n__stdcall base_len(char * name)\n'
p828
V\u000asize_t base_len(char *name)\u000a\u000a{\u000a  long lVar1;\u000a  size_t sVar2;\u000a  size_t sVar3;\u000a  \u000a  sVar2 = strlen(name);\u000a  do {\u000a    sVar3 = sVar2;\u000a    if (sVar2 < 2) {\u000a      return sVar3;\u000a    }\u000a    lVar1 = sVar2 - 1;\u000a    sVar2 = sVar2 - 1;\u000a  } while (name[lVar1] == '/');\u000a  return sVar3;\u000a}\u000a\u000a
p829
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401d30\nMOV RCX,RAX\nNOP dword ptr [RAX]\nMOV RAX,RCX\nCMP RAX,0x2\nJC 0x00404d34\nLEA RCX,[RAX + -0x1]\nCMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f\nJZ 0x00404d20\nPOP RBX\nRET\n'
p830
S'53\n48 89 fb\ne8 17 d0 ff ff\n48 89 c1\n0f 1f 40 00\n48 89 c8\n48 83 f8 02\n72 0b\n48 8d 48 ff\n80 7c 03 ff 2f\n74 ec\n5b\nc3\n'
p831
S'.text:0000000000404d10\n.text:0000000000404d11\n.text:0000000000404d14\n.text:0000000000404d19\n.text:0000000000404d1c\n.text:0000000000404d20\n.text:0000000000404d23\n.text:0000000000404d27\n.text:0000000000404d29\n.text:0000000000404d2d\n.text:0000000000404d32\n.text:0000000000404d34\n.text:0000000000404d35\n'
p832
tp833
sS'getcwd'
p834
(S'\n__stdcall getcwd(char * __buf, size_t __size)\n'
p835
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getcwd(char *__buf,size_t __size)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getcwd_00611140)();\u000a  return pcVar1;\u000a}\u000a\u000a
p836
S'JMP qword ptr [0x00611140]\n'
p837
S'ff 25 2a f3 20 00\n'
p838
S'.plt:0000000000401e10\n'
p839
tp840
sS'emit_ancillary_info'
p841
(S'\n__stdcall emit_ancillary_info()\n'
p842
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x0040b810;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("stat",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "stat";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,&DAT_0040c311,uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/",&DAT_0040c311);\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x40d829;\u000a  if (__s2 == "stat") {\u000a    uVar3 = 0x40c3ef;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p843
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x40b810\nMOV ESI,0x40c3d3\nNOP\nMOV EDI,0x40c311\nCALL 0x00401ea0\nTEST EAX,EAX\nJZ 0x0040250b\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x004024f0\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x40c311\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x40c432\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40c334\nMOV ECX,0x40c449\nXOR EAX,EAX\nCALL 0x00402020\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00402010\nTEST RAX,RAX\nJZ 0x00402594\nMOV ESI,0x40c470\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x00401c30\nTEST EAX,EAX\nJZ 0x00402594\nXOR EDI,EDI\nMOV ESI,0x40c474\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40c311\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00402020\nXOR EDI,EDI\nMOV ESI,0x40c4b9\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,RAX\nMOV R14D,0x40c311\nMOV EDI,0x1\nMOV EDX,0x40c449\nMOV ECX,0x40c311\nXOR EAX,EAX\nCALL 0x00402020\nXOR EDI,EDI\nMOV ESI,0x40c4d8\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x40c3ef\nMOV ECX,0x40d829\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402020\n'
p844
S'41 56\n53\n50\nbb 10 b8 40 00\nbe d3 c3 40 00\n66 90\nbf 11 c3 40 00\ne8 a6 f9 ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb 11 c3 40 00\n48 0f 45 d8\n31 ff\nbe 32 c4 40 00\nba 05 00 00 00\ne8 e4 f7 ff ff\n48 89 c6\nbf 01 00 00 00\nba 34 c3 40 00\nb9 49 c4 40 00\n31 c0\ne8 db fa ff ff\nbf 05 00 00 00\n31 f6\ne8 bf fa ff ff\n48 85 c0\n74 3e\nbe 70 c4 40 00\nba 03 00 00 00\n48 89 c7\ne8 c8 f6 ff ff\n85 c0\n74 28\n31 ff\nbe 74 c4 40 00\nba 05 00 00 00\ne8 93 f7 ff ff\n48 89 c1\nbf 01 00 00 00\nba 11 c3 40 00\n31 c0\n48 89 ce\ne8 8c fa ff ff\n31 ff\nbe b9 c4 40 00\nba 05 00 00 00\ne8 6b f7 ff ff\n48 89 c6\n41 be 11 c3 40 00\nbf 01 00 00 00\nba 49 c4 40 00\nb9 11 c3 40 00\n31 c0\ne8 5c fa ff ff\n31 ff\nbe d8 c4 40 00\nba 05 00 00 00\ne8 3b f7 ff ff\n48 89 c2\n4c 39 f3\nb8 ef c3 40 00\nb9 29 d8 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 1e fa ff ff\n'
p845
S'.text:00000000004024e0\n.text:00000000004024e2\n.text:00000000004024e3\n.text:00000000004024e4\n.text:00000000004024e9\n.text:00000000004024ee\n.text:00000000004024f0\n.text:00000000004024f5\n.text:00000000004024fa\n.text:00000000004024fc\n.text:00000000004024fe\n.text:0000000000402502\n.text:0000000000402506\n.text:0000000000402509\n.text:000000000040250b\n.text:000000000040250f\n.text:0000000000402512\n.text:0000000000402517\n.text:000000000040251b\n.text:000000000040251d\n.text:0000000000402522\n.text:0000000000402527\n.text:000000000040252c\n.text:000000000040252f\n.text:0000000000402534\n.text:0000000000402539\n.text:000000000040253e\n.text:0000000000402540\n.text:0000000000402545\n.text:000000000040254a\n.text:000000000040254c\n.text:0000000000402551\n.text:0000000000402554\n.text:0000000000402556\n.text:000000000040255b\n.text:0000000000402560\n.text:0000000000402563\n.text:0000000000402568\n.text:000000000040256a\n.text:000000000040256c\n.text:000000000040256e\n.text:0000000000402573\n.text:0000000000402578\n.text:000000000040257d\n.text:0000000000402580\n.text:0000000000402585\n.text:000000000040258a\n.text:000000000040258c\n.text:000000000040258f\n.text:0000000000402594\n.text:0000000000402596\n.text:000000000040259b\n.text:00000000004025a0\n.text:00000000004025a5\n.text:00000000004025a8\n.text:00000000004025ae\n.text:00000000004025b3\n.text:00000000004025b8\n.text:00000000004025bd\n.text:00000000004025bf\n.text:00000000004025c4\n.text:00000000004025c6\n.text:00000000004025cb\n.text:00000000004025d0\n.text:00000000004025d5\n.text:00000000004025d8\n.text:00000000004025db\n.text:00000000004025e0\n.text:00000000004025e5\n.text:00000000004025e9\n.text:00000000004025ee\n.text:00000000004025f0\n.text:00000000004025f3\n.text:00000000004025f6\n.text:00000000004025fa\n.text:00000000004025fb\n.text:00000000004025fd\n'
p846
tp847
sS'save_cwd'
p848
(S'\n__stdcall save_cwd(saved_cwd * cwd)\n'
p849
V\u000aint save_cwd(saved_cwd *cwd)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  int iVar3;\u000a  \u000a  cwd->name = (char *)0x0;\u000a  iVar3 = 0;\u000a  iVar1 = open_safer(".");\u000a  cwd->desc = iVar1;\u000a  if (iVar1 < 0) {\u000a    pcVar2 = getcwd((char *)0x0,0);\u000a    cwd->name = pcVar2;\u000a    iVar3 = -(uint)(pcVar2 == (char *)0x0);\u000a  }\u000a  else {\u000a    set_cloexec_flag();\u000a  }\u000a  return iVar3;\u000a}\u000a\u000a
p850
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nMOV qword ptr [RBX + 0x8],0x0\nXOR EBP,EBP\nMOV EDI,0x40cc27\nXOR ESI,ESI\nXOR EAX,EAX\nCALL 0x00409dc0\nMOV dword ptr [RBX],EAX\nTEST EAX,EAX\nJS 0x004068b2\nMOV ESI,0x1\nMOV EDI,EAX\nCALL 0x00409ce0\nJMP 0x004068c5\nXOR EDI,EDI\nXOR ESI,ESI\nCALL 0x00401e10\nMOV qword ptr [RBX + 0x8],RAX\nCMP RAX,0x1\nSBB EBP,EBP\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p851
S'55\n53\n50\n48 89 fb\n48 c7 43 08 00 00 00 00\n31 ed\nbf 27 cc 40 00\n31 f6\n31 c0\ne8 22 35 00 00\n89 03\n85 c0\n78 0e\nbe 01 00 00 00\n89 c7\ne8 30 34 00 00\neb 13\n31 ff\n31 f6\ne8 55 b5 ff ff\n48 89 43 08\n48 83 f8 01\n19 ed\n89 e8\n48 83 c4 08\n5b\n5d\nc3\n'
p852
S'.text:0000000000406880\n.text:0000000000406881\n.text:0000000000406882\n.text:0000000000406883\n.text:0000000000406886\n.text:000000000040688e\n.text:0000000000406890\n.text:0000000000406895\n.text:0000000000406897\n.text:0000000000406899\n.text:000000000040689e\n.text:00000000004068a0\n.text:00000000004068a2\n.text:00000000004068a4\n.text:00000000004068a9\n.text:00000000004068ab\n.text:00000000004068b0\n.text:00000000004068b2\n.text:00000000004068b4\n.text:00000000004068b6\n.text:00000000004068bb\n.text:00000000004068bf\n.text:00000000004068c3\n.text:00000000004068c5\n.text:00000000004068c7\n.text:00000000004068cb\n.text:00000000004068cc\n.text:00000000004068cd\n'
p853
tp854
sS'setmntent'
p855
(S'\n__stdcall setmntent()\n'
p856
V\u000avoid setmntent(void)\u000a\u000a{\u000a  (*(code *)PTR_setmntent_006111e8)();\u000a  return;\u000a}\u000a\u000a
p857
S'JMP qword ptr [0x006111e8]\n'
p858
S'ff 25 82 f2 20 00\n'
p859
S'.plt:0000000000401f60\n'
p860
tp861
sS'version_etc_va'
p862
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p863
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p864
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x00408810\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x0040881c\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00408831\nINC R9\nCMP R9,0xa\nJC 0x004087f0\nMOV R8,RSP\nCALL 0x00408450\nADD RSP,0x58\nRET\n'
p865
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p866
S'.text:00000000004087e0\n.text:00000000004087e4\n.text:00000000004087e7\n.text:00000000004087f0\n.text:00000000004087f3\n.text:00000000004087f7\n.text:00000000004087f9\n.text:00000000004087fc\n.text:0000000000408800\n.text:0000000000408804\n.text:0000000000408807\n.text:0000000000408810\n.text:0000000000408814\n.text:0000000000408818\n.text:000000000040881c\n.text:000000000040881f\n.text:0000000000408823\n.text:0000000000408826\n.text:0000000000408828\n.text:000000000040882b\n.text:000000000040882f\n.text:0000000000408831\n.text:0000000000408834\n.text:0000000000408839\n.text:000000000040883d\n'
p867
tp868
sS'xzalloc'
p869
(S'\n__stdcall xzalloc(size_t s)\n'
p870
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p871
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00408970\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00401df0\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p872
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 74 93 ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p873
S'.text:0000000000408a60\n.text:0000000000408a62\n.text:0000000000408a63\n.text:0000000000408a64\n.text:0000000000408a67\n.text:0000000000408a6c\n.text:0000000000408a6f\n.text:0000000000408a71\n.text:0000000000408a74\n.text:0000000000408a77\n.text:0000000000408a7c\n.text:0000000000408a7f\n.text:0000000000408a83\n.text:0000000000408a84\n.text:0000000000408a86\n'
p874
tp875
sS'lsetfilecon'
p876
(S'\n__stdcall lsetfilecon(char * file, security_context_t con)\n'
p877
V\u000aint lsetfilecon(char *file,security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p878
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p879
S'50\ne8 fa b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p880
S'.text:0000000000406a20\n.text:0000000000406a21\n.text:0000000000406a26\n.text:0000000000406a2c\n.text:0000000000406a31\n.text:0000000000406a32\n'
p881
tp882
sS'out_uint_x'
p883
(S'\n__stdcall out_uint_x(char * pformat, size_t prefix_len, uintmax_t arg)\n'
p884
V\u000avoid out_uint_x(char *pformat,size_t prefix_len,uintmax_t arg)\u000a\u000a{\u000a  make_format(pformat,prefix_len,"-#0","lx");\u000a  __printf_chk(1,pformat,arg);\u000a  return;\u000a}\u000a\u000a
p885
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nMOV EDX,0x40c814\nMOV ECX,0x40c818\nCALL 0x00403cb0\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402020\n'
p886
S'41 56\n53\n50\n49 89 d6\n48 89 fb\nba 14 c8 40 00\nb9 18 c8 40 00\ne8 87 0c 00 00\nbf 01 00 00 00\n31 c0\n48 89 de\n4c 89 f2\n48 83 c4 08\n5b\n41 5e\ne9 de ef ff ff\n'
p887
S'.text:0000000000403010\n.text:0000000000403012\n.text:0000000000403013\n.text:0000000000403014\n.text:0000000000403017\n.text:000000000040301a\n.text:000000000040301f\n.text:0000000000403024\n.text:0000000000403029\n.text:000000000040302e\n.text:0000000000403030\n.text:0000000000403033\n.text:0000000000403036\n.text:000000000040303a\n.text:000000000040303b\n.text:000000000040303d\n'
p888
tp889
sS'chdir_long'
p890
(S'\n__stdcall chdir_long(char * dir)\n'
p891
V\u000aint chdir_long(char *dir)\u000a\u000a{\u000a  char cVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  undefined *puVar5;\u000a  char *pcVar6;\u000a  cd_buf local_30 [2];\u000a  \u000a  iVar2 = chdir(dir);\u000a  if (iVar2 == 0) {\u000a    return 0;\u000a  }\u000a  piVar3 = __errno_location();\u000a  if (*piVar3 != 0x24) {\u000a    return iVar2;\u000a  }\u000a  sVar4 = strlen(dir);\u000a  cdb_init(local_30);\u000a  if (sVar4 == 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0 < len","lib/chdir-long.c",0x7e,"int chdir_long(char *)");\u000a  }\u000a  if (sVar4 < 0x1000) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("4096 <= len","lib/chdir-long.c",0x7f,"int chdir_long(char *)");\u000a  }\u000a  pcVar6 = dir + sVar4;\u000a  sVar4 = strspn(dir,"/");\u000a  if (sVar4 == 0) {\u000aLAB_00408d3f:\u000a    cVar1 = *dir;\u000a  }\u000a  else {\u000a    if (sVar4 != 2) {\u000a      iVar2 = cdb_advance_fd(local_30,"/");\u000a      if (iVar2 != 0) goto LAB_00408df3;\u000a      dir = dir + sVar4;\u000a      goto LAB_00408d3f;\u000a    }\u000a    puVar5 = (undefined *)memchr(dir + 3,0x2f,(size_t)(pcVar6 + -(long)(dir + 3)));\u000a    if (puVar5 == (undefined *)0x0) {\u000aLAB_00408e05:\u000a      *piVar3 = 0x24;\u000a      return -1;\u000a    }\u000a    *puVar5 = 0;\u000a    iVar2 = cdb_advance_fd(local_30,dir);\u000a    *puVar5 = 0x2f;\u000a    if (iVar2 != 0) goto LAB_00408df3;\u000a    dir = find_non_slash(puVar5 + 1);\u000a    cVar1 = *dir;\u000a  }\u000a  if (cVar1 == '/') {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("*dir != \u005c'/\u005c'","lib/chdir-long.c",0xa2,"int chdir_long(char *)");\u000a  }\u000a  if (pcVar6 < dir) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("dir <= dir_end","lib/chdir-long.c",0xa3,"int chdir_long(char *)");\u000a  }\u000a  if (0xfff < (long)(pcVar6 + -(long)dir)) {\u000a    do {\u000a      puVar5 = (undefined *)memrchr(dir,0x2f,0x1000);\u000a      if (puVar5 == (undefined *)0x0) goto LAB_00408e05;\u000a      *puVar5 = 0;\u000a      if (0xfff < (long)(puVar5 + -(long)dir)) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("slash - dir < 4096","lib/chdir-long.c",0xb3,"int chdir_long(char *)");\u000a      }\u000a      iVar2 = cdb_advance_fd(local_30,dir);\u000a      *puVar5 = 0x2f;\u000a      if (iVar2 != 0) goto LAB_00408df3;\u000a      dir = find_non_slash(puVar5 + 1);\u000a    } while (0xfff < (long)(pcVar6 + -(long)dir));\u000a  }\u000a  if (((pcVar6 <= dir) || (iVar2 = cdb_advance_fd(local_30,dir), iVar2 == 0)) &&\u000a     (iVar2 = cdb_fchdir(local_30), iVar2 == 0)) {\u000a    cdb_free(local_30);\u000a    return 0;\u000a  }\u000aLAB_00408df3:\u000a  iVar2 = *piVar3;\u000a  cdb_free(local_30);\u000a  *piVar3 = iVar2;\u000a  return -1;\u000a}\u000a\u000a
p892
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDI\nCALL 0x00401d60\nMOV EBP,EAX\nTEST EBP,EBP\nJZ 0x00408d1e\nCALL 0x00401c20\nMOV R14,RAX\nCMP dword ptr [R14],0x24\nJNZ 0x00408e11\nMOV RDI,RBX\nCALL 0x00401d30\nMOV R15,RAX\nLEA RDI,[RSP + 0x8]\nCALL 0x00408eb0\nTEST R15,R15\nJZ 0x00408e47\nCMP R15,0xfff\nJBE 0x00408e60\nADD R15,RBX\nMOV ESI,0x40cd89\nMOV RDI,RBX\nCALL 0x00401e40\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00408d3f\nCMP RBP,0x2\nJNZ 0x00408d25\nLEA RDI,[RBX + 0x3]\nMOV RDX,R15\nSUB RDX,RDI\nMOV ESI,0x2f\nCALL 0x00401e50\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00408e05\nMOV byte ptr [RBP],0x0\nLEA RDI,[RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00408ec0\nMOV byte ptr [RBP],0x2f\nTEST EAX,EAX\nJNZ 0x00408df3\nINC RBP\nMOV RDI,RBP\nCALL 0x00408f00\nMOV RBX,RAX\nCMP byte ptr [RBX],0x2f\nJNZ 0x00408d48\nJMP 0x00408e79\nXOR EBP,EBP\nJMP 0x00408e11\nLEA RDI,[RSP + 0x8]\nMOV ESI,0x40cd89\nCALL 0x00408ec0\nTEST EAX,EAX\nJNZ 0x00408df3\nADD RBX,RBP\nCMP byte ptr [RBX],0x2f\nJZ 0x00408e79\nCMP RBX,R15\nJA 0x00408e92\nMOV RAX,R15\nSUB RAX,RBX\nCMP RAX,0x1000\nJL 0x00408dcf\nLEA R12,[RSP + 0x8]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV ESI,0x2f\nMOV EDX,0x1000\nMOV RDI,RBX\nCALL 0x00402060\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00408e05\nMOV byte ptr [RBP],0x0\nMOV RAX,RBP\nSUB RAX,RBX\nCMP RAX,0x1000\nJGE 0x00408e2e\nMOV RDI,R12\nMOV RSI,RBX\nCALL 0x00408ec0\nMOV byte ptr [RBP],0x2f\nTEST EAX,EAX\nJNZ 0x00408df3\nINC RBP\nMOV RDI,RBP\nCALL 0x00408f00\nMOV RBX,RAX\nMOV RAX,R15\nSUB RAX,RBX\nCMP RAX,0xfff\nJG 0x00408d70\nCMP RBX,R15\nJNC 0x00408de5\nLEA RDI,[RSP + 0x8]\nMOV RSI,RBX\nCALL 0x00408ec0\nTEST EAX,EAX\nJNZ 0x00408df3\nLEA RDI,[RSP + 0x8]\nCALL 0x00408f20\nTEST EAX,EAX\nJZ 0x00408e20\nMOV EBX,dword ptr [R14]\nLEA RDI,[RSP + 0x8]\nCALL 0x00408f30\nMOV dword ptr [R14],EBX\nJMP 0x00408e0c\nMOV dword ptr [R14],0x24\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nLEA RDI,[RSP + 0x8]\nCALL 0x00408f30\nXOR EBP,EBP\nJMP 0x00408e11\nMOV EDI,0x40dac7\nMOV ESI,0x40da78\nMOV EDX,0xb3\nMOV ECX,0x40da89\nCALL 0x00401de0\nMOV EDI,0x40da70\nMOV ESI,0x40da78\nMOV EDX,0x7e\nMOV ECX,0x40da89\nCALL 0x00401de0\nMOV EDI,0x40daa0\nMOV ESI,0x40da78\nMOV EDX,0x7f\nMOV ECX,0x40da89\nCALL 0x00401de0\nMOV EDI,0x40daac\nMOV ESI,0x40da78\nMOV EDX,0xa2\nMOV ECX,0x40da89\nCALL 0x00401de0\nMOV EDI,0x40dab8\nMOV ESI,0x40da78\nMOV EDX,0xa3\nMOV ECX,0x40da89\nCALL 0x00401de0\n'
p893
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 fb\ne8 fc 90 ff ff\n89 c5\n85 ed\n0f 84 b0 00 00 00\ne8 ad 8f ff ff\n49 89 c6\n41 83 3e 24\n0f 85 91 01 00 00\n48 89 df\ne8 a8 90 ff ff\n49 89 c7\n48 8d 7c 24 08\ne8 1b 02 00 00\n4d 85 ff\n0f 84 a9 01 00 00\n49 81 ff ff 0f 00 00\n0f 86 b5 01 00 00\n49 01 df\nbe 89 cd 40 00\n48 89 df\ne8 85 91 ff ff\n48 89 c5\n48 85 ed\n74 7c\n48 83 fd 02\n75 5c\n48 8d 7b 03\n4c 89 fa\n48 29 fa\nbe 2f 00 00 00\ne8 73 91 ff ff\n48 89 c5\n48 85 ed\n0f 84 1c 01 00 00\nc6 45 00 00\n48 8d 7c 24 08\n48 89 de\ne8 c6 01 00 00\nc6 45 00 2f\n85 c0\n0f 85 ed 00 00 00\n48 ff c5\n48 89 ef\ne8 ef 01 00 00\n48 89 c3\n80 3b 2f\n75 2f\ne9 5b 01 00 00\n31 ed\ne9 ec 00 00 00\n48 8d 7c 24 08\nbe 89 cd 40 00\ne8 8c 01 00 00\n85 c0\n0f 85 b7 00 00 00\n48 01 eb\n80 3b 2f\n0f 84 31 01 00 00\n4c 39 fb\n0f 87 41 01 00 00\n4c 89 f8\n48 29 d8\n48 3d 00 10 00 00\n7c 70\n4c 8d 64 24 08\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbe 2f 00 00 00\nba 00 10 00 00\n48 89 df\ne8 de 92 ff ff\n48 89 c5\n48 85 ed\n74 7b\nc6 45 00 00\n48 89 e8\n48 29 d8\n48 3d 00 10 00 00\n0f 8d 8e 00 00 00\n4c 89 e7\n48 89 de\ne8 15 01 00 00\nc6 45 00 2f\n85 c0\n75 40\n48 ff c5\n48 89 ef\ne8 42 01 00 00\n48 89 c3\n4c 89 f8\n48 29 d8\n48 3d ff 0f 00 00\n7f a1\n4c 39 fb\n73 11\n48 8d 7c 24 08\n48 89 de\ne8 df 00 00 00\n85 c0\n75 0e\n48 8d 7c 24 08\ne8 31 01 00 00\n85 c0\n74 2d\n41 8b 1e\n48 8d 7c 24 08\ne8 30 01 00 00\n41 89 1e\neb 07\n41 c7 06 24 00 00 00\nbd ff ff ff ff\n89 e8\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n48 8d 7c 24 08\ne8 06 01 00 00\n31 ed\neb e3\nbf c7 da 40 00\nbe 78 da 40 00\nba b3 00 00 00\nb9 89 da 40 00\ne8 99 8f ff ff\nbf 70 da 40 00\nbe 78 da 40 00\nba 7e 00 00 00\nb9 89 da 40 00\ne8 80 8f ff ff\nbf a0 da 40 00\nbe 78 da 40 00\nba 7f 00 00 00\nb9 89 da 40 00\ne8 67 8f ff ff\nbf ac da 40 00\nbe 78 da 40 00\nba a2 00 00 00\nb9 89 da 40 00\ne8 4e 8f ff ff\nbf b8 da 40 00\nbe 78 da 40 00\nba a3 00 00 00\nb9 89 da 40 00\ne8 35 8f ff ff\n'
p894
S'.text:0000000000408c50\n.text:0000000000408c51\n.text:0000000000408c53\n.text:0000000000408c55\n.text:0000000000408c57\n.text:0000000000408c58\n.text:0000000000408c5c\n.text:0000000000408c5f\n.text:0000000000408c64\n.text:0000000000408c66\n.text:0000000000408c68\n.text:0000000000408c6e\n.text:0000000000408c73\n.text:0000000000408c76\n.text:0000000000408c7a\n.text:0000000000408c80\n.text:0000000000408c83\n.text:0000000000408c88\n.text:0000000000408c8b\n.text:0000000000408c90\n.text:0000000000408c95\n.text:0000000000408c98\n.text:0000000000408c9e\n.text:0000000000408ca5\n.text:0000000000408cab\n.text:0000000000408cae\n.text:0000000000408cb3\n.text:0000000000408cb6\n.text:0000000000408cbb\n.text:0000000000408cbe\n.text:0000000000408cc1\n.text:0000000000408cc3\n.text:0000000000408cc7\n.text:0000000000408cc9\n.text:0000000000408ccd\n.text:0000000000408cd0\n.text:0000000000408cd3\n.text:0000000000408cd8\n.text:0000000000408cdd\n.text:0000000000408ce0\n.text:0000000000408ce3\n.text:0000000000408ce9\n.text:0000000000408ced\n.text:0000000000408cf2\n.text:0000000000408cf5\n.text:0000000000408cfa\n.text:0000000000408cfe\n.text:0000000000408d00\n.text:0000000000408d06\n.text:0000000000408d09\n.text:0000000000408d0c\n.text:0000000000408d11\n.text:0000000000408d14\n.text:0000000000408d17\n.text:0000000000408d19\n.text:0000000000408d1e\n.text:0000000000408d20\n.text:0000000000408d25\n.text:0000000000408d2a\n.text:0000000000408d2f\n.text:0000000000408d34\n.text:0000000000408d36\n.text:0000000000408d3c\n.text:0000000000408d3f\n.text:0000000000408d42\n.text:0000000000408d48\n.text:0000000000408d4b\n.text:0000000000408d51\n.text:0000000000408d54\n.text:0000000000408d57\n.text:0000000000408d5d\n.text:0000000000408d5f\n.text:0000000000408d64\n.text:0000000000408d70\n.text:0000000000408d75\n.text:0000000000408d7a\n.text:0000000000408d7d\n.text:0000000000408d82\n.text:0000000000408d85\n.text:0000000000408d88\n.text:0000000000408d8a\n.text:0000000000408d8e\n.text:0000000000408d91\n.text:0000000000408d94\n.text:0000000000408d9a\n.text:0000000000408da0\n.text:0000000000408da3\n.text:0000000000408da6\n.text:0000000000408dab\n.text:0000000000408daf\n.text:0000000000408db1\n.text:0000000000408db3\n.text:0000000000408db6\n.text:0000000000408db9\n.text:0000000000408dbe\n.text:0000000000408dc1\n.text:0000000000408dc4\n.text:0000000000408dc7\n.text:0000000000408dcd\n.text:0000000000408dcf\n.text:0000000000408dd2\n.text:0000000000408dd4\n.text:0000000000408dd9\n.text:0000000000408ddc\n.text:0000000000408de1\n.text:0000000000408de3\n.text:0000000000408de5\n.text:0000000000408dea\n.text:0000000000408def\n.text:0000000000408df1\n.text:0000000000408df3\n.text:0000000000408df6\n.text:0000000000408dfb\n.text:0000000000408e00\n.text:0000000000408e03\n.text:0000000000408e05\n.text:0000000000408e0c\n.text:0000000000408e11\n.text:0000000000408e13\n.text:0000000000408e17\n.text:0000000000408e18\n.text:0000000000408e1a\n.text:0000000000408e1c\n.text:0000000000408e1e\n.text:0000000000408e1f\n.text:0000000000408e20\n.text:0000000000408e25\n.text:0000000000408e2a\n.text:0000000000408e2c\n.text:0000000000408e2e\n.text:0000000000408e33\n.text:0000000000408e38\n.text:0000000000408e3d\n.text:0000000000408e42\n.text:0000000000408e47\n.text:0000000000408e4c\n.text:0000000000408e51\n.text:0000000000408e56\n.text:0000000000408e5b\n.text:0000000000408e60\n.text:0000000000408e65\n.text:0000000000408e6a\n.text:0000000000408e6f\n.text:0000000000408e74\n.text:0000000000408e79\n.text:0000000000408e7e\n.text:0000000000408e83\n.text:0000000000408e88\n.text:0000000000408e8d\n.text:0000000000408e92\n.text:0000000000408e97\n.text:0000000000408e9c\n.text:0000000000408ea1\n.text:0000000000408ea6\n'
p895
tp896
sS'print_stat'
p897
(S'\n__stdcall print_stat(char * pformat, size_t prefix_len, char * filename, void * data)\n'
p898
V\u000a_Bool print_stat(char *pformat,size_t prefix_len,char *filename,void *data)\u000a\u000a{\u000a  _Bool _Var1;\u000a  uint uVar2;\u000a  char *arg;\u000a  char *arg_00;\u000a  passwd *ppVar3;\u000a  uint *puVar4;\u000a  undefined8 uVar5;\u000a  uintmax_t arg_01;\u000a  char *filename_00;\u000a  stat *st;\u000a  timespec tVar6;\u000a  \u000a  switch((int)filename) {\u000a  case 0x41:\u000a    human_access();\u000a    filename_00 = &ram0x0061140d;\u000a    goto LAB_00404019;\u000a  case 0x42:\u000a    break;\u000a  case 0x43:\u000a    _Var1 = out_file_context(pformat,prefix_len,filename_00);\u000a    return _Var1;\u000a  case 0x44:\u000a    arg_01 = st->st_dev;\u000a    goto LAB_00403fab;\u000a  default:\u000a    fputc_unlocked(0x3f,stdout);\u000a    return false;\u000a  case 0x46:\u000a    filename_00 = file_type(st);\u000a    goto LAB_00404019;\u000a  case 0x47:\u000a    ppVar3 = (passwd *)getgrgid(st->st_gid);\u000a    goto joined_r0x00403ea1;\u000a  case 0x4e:\u000a    arg = quotearg_style((char *)0x4);\u000a    out_string(pformat,prefix_len,arg);\u000a    if ((st->st_mode & 0xf000) != 0xa000) {\u000a      return false;\u000a    }\u000a    arg = areadlink_with_size(filename_00,st->st_size);\u000a    if (arg != (char *)0x0) {\u000a      __printf_chk(1,&DAT_0040cb1d);\u000a      arg_00 = quotearg_style((char *)0x4);\u000a      out_string(pformat,prefix_len,arg_00);\u000a      free(arg);\u000a      return false;\u000a    }\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar2 = *puVar4;\u000a    uVar5 = dcgettext(0,"cannot read symbolic link %s",5);\u000a    arg = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar2,uVar5,arg);\u000a    return true;\u000a  case 0x54:\u000a    uVar2 = gnu_dev_minor(st->st_rdev);\u000a    goto LAB_00403fa9;\u000a  case 0x55:\u000a    ppVar3 = getpwuid(st->st_uid);\u000ajoined_r0x00403ea1:\u000a    if (ppVar3 == (passwd *)0x0) {\u000a      filename_00 = "UNKNOWN";\u000a    }\u000a    else {\u000a      filename_00 = ppVar3->pw_name;\u000a    }\u000a    goto LAB_00404019;\u000a  case 0x57:\u000a    get_birthtime(st);\u000a    tVar6 = neg_to_zero();\u000a    goto LAB_00403ee0;\u000a  case 0x58:\u000a    tVar6 = get_stat_atime(st);\u000a    goto LAB_00403ee0;\u000a  case 0x59:\u000a    tVar6 = get_stat_mtime(st);\u000a    goto LAB_00403ee0;\u000a  case 0x5a:\u000a    tVar6 = get_stat_ctime(st);\u000aLAB_00403ee0:\u000a    out_epoch_sec(pformat,prefix_len,SUB168((undefined  [16])tVar6,0),\u000a                  SUB168((undefined  [16])tVar6 >> 0x40,0));\u000a    return false;\u000a  case 0x61:\u000a    out_uint_o(pformat,prefix_len,(ulong)(st->st_mode & 0xfff));\u000a    return false;\u000a  case 0x62:\u000a    break;\u000a  case 100:\u000a    break;\u000a  case 0x66:\u000a    arg_01 = (uintmax_t)st->st_mode;\u000a    goto LAB_00403fab;\u000a  case 0x67:\u000a    break;\u000a  case 0x68:\u000a    break;\u000a  case 0x69:\u000a    break;\u000a  case 0x6d:\u000a    _Var1 = out_mount_point(filename_00,pformat,prefix_len,st);\u000a    return _Var1;\u000a  case 0x6e:\u000a    goto LAB_00404019;\u000a  case 0x6f:\u000a    break;\u000a  case 0x73:\u000a    out_int(pformat,prefix_len,st->st_size);\u000a    return false;\u000a  case 0x74:\u000a    uVar2 = gnu_dev_major(st->st_rdev);\u000aLAB_00403fa9:\u000a    arg_01 = (uintmax_t)uVar2;\u000aLAB_00403fab:\u000a    out_uint_x(pformat,prefix_len,arg_01);\u000a    return false;\u000a  case 0x75:\u000a    break;\u000a  case 0x77:\u000a    tVar6 = get_birthtime(st);\u000a    if (SUB168((undefined  [16])tVar6 >> 0x40,0) < 0) {\u000a      filename_00 = "-";\u000a      goto LAB_00404019;\u000a    }\u000a    goto LAB_00403ff8;\u000a  case 0x78:\u000a    get_stat_atime(st);\u000a    goto LAB_00403ff8;\u000a  case 0x79:\u000a    get_stat_mtime(st);\u000a    goto LAB_00403ff8;\u000a  case 0x7a:\u000a    get_stat_ctime(st);\u000aLAB_00403ff8:\u000a    filename_00 = human_time();\u000aLAB_00404019:\u000a    out_string(pformat,prefix_len,filename_00);\u000a    return false;\u000a  }\u000a  out_uint();\u000a  return false;\u000a}\u000a\u000a
p899
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV RBP,R9\nMOV RBX,R8\nMOV R14,RSI\nMOV R15,RDI\nADD EDX,-0x41\nCMP EDX,0x39\nJA 0x00403dce\nJMP qword ptr [0x40b540 + RDX*0x8]\nMOV RDI,RBP\nCALL 0x004040b0\nMOV EDX,0x61140d\nJMP 0x00404013\nMOV EDX,0x200\nJMP 0x00403fbb\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00404560\nMOV RDX,qword ptr [RBP]\nJMP 0x00403fab\nMOV RSI,qword ptr [0x00611388]\nMOV EDI,0x3f\nCALL 0x00401eb0\nJMP 0x0040401e\nMOV RDI,RBP\nCALL 0x00404d40\nJMP 0x00404003\nMOV EDI,dword ptr [RBP + 0x20]\nCALL 0x00401da0\nTEST RAX,RAX\nJNZ 0x00403ea7\nJMP 0x0040400e\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x00406250\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00402fd0\nMOV EAX,0xf000\nAND EAX,dword ptr [RBP + 0x18]\nCMP EAX,0xa000\nJNZ 0x0040401e\nMOV RSI,qword ptr [RBP + 0x30]\nMOV RDI,RBX\nCALL 0x00404a40\nMOV R12,RAX\nTEST R12,R12\nJZ 0x0040402b\nXOR EBP,EBP\nMOV EDI,0x1\nMOV ESI,0x40cb1d\nXOR EAX,EAX\nCALL 0x00402020\nMOV EDI,0x4\nMOV RSI,R12\nCALL 0x00406250\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00402fd0\nMOV RDI,R12\nCALL 0x00401be0\nJMP 0x00404020\nMOV RDI,qword ptr [RBP + 0x28]\nCALL 0x004020b0\nJMP 0x00403fa9\nMOV EDI,dword ptr [RBP + 0x1c]\nCALL 0x00401cf0\nTEST RAX,RAX\nJZ 0x0040400e\nMOV RDX,qword ptr [RAX]\nJMP 0x00404013\nMOV RDI,RBP\nCALL 0x004041d0\nMOV RDI,RAX\nMOV RSI,RDX\nCALL 0x00404540\nJMP 0x00403ee0\nMOV RDI,RBP\nCALL 0x00406b50\nJMP 0x00403ee0\nMOV RDI,RBP\nCALL 0x00406b70\nJMP 0x00403ee0\nMOV RDI,RBP\nCALL 0x00406b60\nMOV RCX,RDX\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RAX\nCALL 0x00404260\nJMP 0x0040401e\nMOV EDX,dword ptr [RBP + 0x18]\nAND EDX,0xfff\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00404070\nJMP 0x0040401e\nMOV RDX,qword ptr [RBP + 0x40]\nJMP 0x00403fbb\nMOV RDX,qword ptr [RBP]\nJMP 0x00403fbb\nMOV EDX,dword ptr [RBP + 0x18]\nJMP 0x00403fab\nMOV EDX,dword ptr [RBP + 0x20]\nJMP 0x00403fbb\nMOV RDX,qword ptr [RBP + 0x10]\nJMP 0x00403fbb\nMOV RDX,qword ptr [RBP + 0x8]\nJMP 0x00403fbb\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,R14\nMOV RCX,RBP\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004040d0\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RBX\nJMP 0x00404019\nMOV RAX,qword ptr [RBP + 0x38]\nMOV RCX,0x2000000000000001\nCMP RAX,RCX\nMOV ECX,0x200\nMOV EDX,0x200\nCMOVC RDX,RAX\nTEST RAX,RAX\nCMOVLE RDX,RCX\nJMP 0x00403fbb\nMOV RDX,qword ptr [RBP + 0x30]\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00403c70\nJMP 0x0040401e\nMOV RDI,qword ptr [RBP + 0x28]\nCALL 0x00401fe0\nMOV EDX,EAX\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00403010\nJMP 0x0040401e\nMOV EDX,dword ptr [RBP + 0x1c]\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00403050\nJMP 0x0040401e\nMOV RDI,RBP\nCALL 0x004041d0\nTEST RDX,RDX\nJNS 0x00403ff8\nMOV EDX,0x40cd8d\nJMP 0x00404013\nMOV RDI,RBP\nCALL 0x00406b50\nJMP 0x00403ff8\nMOV RDI,RBP\nCALL 0x00406b70\nJMP 0x00403ff8\nMOV RDI,RBP\nCALL 0x00406b60\nMOV RDI,RAX\nMOV RSI,RDX\nCALL 0x004041e0\nMOV RDI,R15\nMOV RSI,R14\nMOV RDX,RAX\nJMP 0x00404019\nMOV EDX,0x40cb22\nMOV RDI,R15\nMOV RSI,R14\nCALL 0x00402fd0\nXOR EBP,EBP\nMOV EAX,EBP\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401c20\nMOV R14D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x40cb00\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,RBP\nCALL 0x00402050\nMOV BPL,0x1\nJMP 0x00404020\n'
p900
S'55\n41 57\n41 56\n41 54\n53\n4c 89 cd\n4c 89 c3\n49 89 f6\n49 89 ff\n83 c2 bf\n83 fa 39\n77 42\nff 24 d5 40 b5 40 00\n48 89 ef\ne8 15 03 00 00\nba 0d 14 61 00\ne9 6e 02 00 00\nba 00 02 00 00\ne9 0c 02 00 00\n4c 89 ff\n4c 89 f6\n48 89 da\n5b\n41 5c\n41 5e\n41 5f\n5d\ne9 9b 07 00 00\n48 8b 55 00\ne9 dd 01 00 00\n48 8b 35 b3 d5 20 00\nbf 3f 00 00 00\ne8 d1 e0 ff ff\ne9 3a 02 00 00\n48 89 ef\ne8 54 0f 00 00\ne9 12 02 00 00\n8b 7d 20\ne8 a7 df ff ff\n48 85 c0\n0f 85 a5 00 00 00\ne9 07 02 00 00\nbf 04 00 00 00\n48 89 de\ne8 3c 24 00 00\n4c 89 ff\n4c 89 f6\n48 89 c2\ne8 ae f1 ff ff\nb8 00 f0 00 00\n23 45 18\n3d 00 a0 00 00\n0f 85 e9 01 00 00\n48 8b 75 30\n48 89 df\ne8 ff 0b 00 00\n49 89 c4\n4d 85 e4\n0f 84 de 01 00 00\n31 ed\nbf 01 00 00 00\nbe 1d cb 40 00\n31 c0\ne8 c0 e1 ff ff\nbf 04 00 00 00\n4c 89 e6\ne8 e3 23 00 00\n4c 89 ff\n4c 89 f6\n48 89 c2\ne8 55 f1 ff ff\n4c 89 e7\ne8 5d dd ff ff\ne9 98 01 00 00\n48 8b 7d 28\ne8 1f e2 ff ff\ne9 13 01 00 00\n8b 7d 1c\ne8 52 de ff ff\n48 85 c0\n0f 84 67 01 00 00\n48 8b 10\ne9 64 01 00 00\n48 89 ef\ne8 19 03 00 00\n48 89 c7\n48 89 d6\ne8 7e 06 00 00\neb 1c\n48 89 ef\ne8 84 2c 00 00\neb 12\n48 89 ef\ne8 9a 2c 00 00\neb 08\n48 89 ef\ne8 80 2c 00 00\n48 89 d1\n4c 89 ff\n4c 89 f6\n48 89 c2\ne8 6f 03 00 00\ne9 28 01 00 00\n8b 55 18\n81 e2 ff 0f 00 00\n4c 89 ff\n4c 89 f6\ne8 66 01 00 00\ne9 0f 01 00 00\n48 8b 55 40\ne9 a3 00 00 00\n48 8b 55 00\ne9 9a 00 00 00\n8b 55 18\ne9 82 00 00 00\n8b 55 20\ne9 8a 00 00 00\n48 8b 55 10\ne9 81 00 00 00\n48 8b 55 08\neb 7b\n48 89 df\n4c 89 fe\n4c 89 f2\n48 89 e9\n5b\n41 5c\n41 5e\n41 5f\n5d\ne9 77 01 00 00\n4c 89 ff\n4c 89 f6\n48 89 da\ne9 b2 00 00 00\n48 8b 45 38\n48 b9 01 00 00 00 00 00 00 20\n48 39 c8\nb9 00 02 00 00\nba 00 02 00 00\n48 0f 42 d0\n48 85 c0\n48 0f 4e d1\neb 2c\n48 8b 55 30\n4c 89 ff\n4c 89 f6\ne8 d2 fc ff ff\neb 7e\n48 8b 7d 28\ne8 37 e0 ff ff\n89 c2\n4c 89 ff\n4c 89 f6\ne8 5a f0 ff ff\neb 66\n8b 55 1c\n4c 89 ff\n4c 89 f6\ne8 8a f0 ff ff\neb 56\n48 89 ef\ne8 00 02 00 00\n48 85 d2\n79 23\nba 8d cd 40 00\neb 37\n48 89 ef\ne8 6c 2b 00 00\neb 12\n48 89 ef\ne8 82 2b 00 00\neb 08\n48 89 ef\ne8 68 2b 00 00\n48 89 c7\n48 89 d6\ne8 dd 01 00 00\n4c 89 ff\n4c 89 f6\n48 89 c2\neb 0b\nba 22 cb 40 00\n4c 89 ff\n4c 89 f6\ne8 b2 ef ff ff\n31 ed\n89 e8\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\ne8 f0 db ff ff\n44 8b 30\n31 ff\nbe 00 cb 40 00\nba 05 00 00 00\ne8 cc dc ff ff\n48 89 c5\nbf 04 00 00 00\n48 89 de\ne8 fc 21 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n48 89 ea\ne8 ea df ff ff\n40 b5 01\neb b5\n'
p901
S'.text:0000000000403d70\n.text:0000000000403d71\n.text:0000000000403d73\n.text:0000000000403d75\n.text:0000000000403d77\n.text:0000000000403d78\n.text:0000000000403d7b\n.text:0000000000403d7e\n.text:0000000000403d81\n.text:0000000000403d84\n.text:0000000000403d87\n.text:0000000000403d8a\n.text:0000000000403d8c\n.text:0000000000403d93\n.text:0000000000403d96\n.text:0000000000403d9b\n.text:0000000000403da0\n.text:0000000000403da5\n.text:0000000000403daa\n.text:0000000000403daf\n.text:0000000000403db2\n.text:0000000000403db5\n.text:0000000000403db8\n.text:0000000000403db9\n.text:0000000000403dbb\n.text:0000000000403dbd\n.text:0000000000403dbf\n.text:0000000000403dc0\n.text:0000000000403dc5\n.text:0000000000403dc9\n.text:0000000000403dce\n.text:0000000000403dd5\n.text:0000000000403dda\n.text:0000000000403ddf\n.text:0000000000403de4\n.text:0000000000403de7\n.text:0000000000403dec\n.text:0000000000403df1\n.text:0000000000403df4\n.text:0000000000403df9\n.text:0000000000403dfc\n.text:0000000000403e02\n.text:0000000000403e07\n.text:0000000000403e0c\n.text:0000000000403e0f\n.text:0000000000403e14\n.text:0000000000403e17\n.text:0000000000403e1a\n.text:0000000000403e1d\n.text:0000000000403e22\n.text:0000000000403e27\n.text:0000000000403e2a\n.text:0000000000403e2f\n.text:0000000000403e35\n.text:0000000000403e39\n.text:0000000000403e3c\n.text:0000000000403e41\n.text:0000000000403e44\n.text:0000000000403e47\n.text:0000000000403e4d\n.text:0000000000403e4f\n.text:0000000000403e54\n.text:0000000000403e59\n.text:0000000000403e5b\n.text:0000000000403e60\n.text:0000000000403e65\n.text:0000000000403e68\n.text:0000000000403e6d\n.text:0000000000403e70\n.text:0000000000403e73\n.text:0000000000403e76\n.text:0000000000403e7b\n.text:0000000000403e7e\n.text:0000000000403e83\n.text:0000000000403e88\n.text:0000000000403e8c\n.text:0000000000403e91\n.text:0000000000403e96\n.text:0000000000403e99\n.text:0000000000403e9e\n.text:0000000000403ea1\n.text:0000000000403ea7\n.text:0000000000403eaa\n.text:0000000000403eaf\n.text:0000000000403eb2\n.text:0000000000403eb7\n.text:0000000000403eba\n.text:0000000000403ebd\n.text:0000000000403ec2\n.text:0000000000403ec4\n.text:0000000000403ec7\n.text:0000000000403ecc\n.text:0000000000403ece\n.text:0000000000403ed1\n.text:0000000000403ed6\n.text:0000000000403ed8\n.text:0000000000403edb\n.text:0000000000403ee0\n.text:0000000000403ee3\n.text:0000000000403ee6\n.text:0000000000403ee9\n.text:0000000000403eec\n.text:0000000000403ef1\n.text:0000000000403ef6\n.text:0000000000403ef9\n.text:0000000000403eff\n.text:0000000000403f02\n.text:0000000000403f05\n.text:0000000000403f0a\n.text:0000000000403f0f\n.text:0000000000403f13\n.text:0000000000403f18\n.text:0000000000403f1c\n.text:0000000000403f21\n.text:0000000000403f24\n.text:0000000000403f29\n.text:0000000000403f2c\n.text:0000000000403f31\n.text:0000000000403f35\n.text:0000000000403f3a\n.text:0000000000403f3e\n.text:0000000000403f40\n.text:0000000000403f43\n.text:0000000000403f46\n.text:0000000000403f49\n.text:0000000000403f4c\n.text:0000000000403f4d\n.text:0000000000403f4f\n.text:0000000000403f51\n.text:0000000000403f53\n.text:0000000000403f54\n.text:0000000000403f59\n.text:0000000000403f5c\n.text:0000000000403f5f\n.text:0000000000403f62\n.text:0000000000403f67\n.text:0000000000403f6b\n.text:0000000000403f75\n.text:0000000000403f78\n.text:0000000000403f7d\n.text:0000000000403f82\n.text:0000000000403f86\n.text:0000000000403f89\n.text:0000000000403f8d\n.text:0000000000403f8f\n.text:0000000000403f93\n.text:0000000000403f96\n.text:0000000000403f99\n.text:0000000000403f9e\n.text:0000000000403fa0\n.text:0000000000403fa4\n.text:0000000000403fa9\n.text:0000000000403fab\n.text:0000000000403fae\n.text:0000000000403fb1\n.text:0000000000403fb6\n.text:0000000000403fb8\n.text:0000000000403fbb\n.text:0000000000403fbe\n.text:0000000000403fc1\n.text:0000000000403fc6\n.text:0000000000403fc8\n.text:0000000000403fcb\n.text:0000000000403fd0\n.text:0000000000403fd3\n.text:0000000000403fd5\n.text:0000000000403fda\n.text:0000000000403fdc\n.text:0000000000403fdf\n.text:0000000000403fe4\n.text:0000000000403fe6\n.text:0000000000403fe9\n.text:0000000000403fee\n.text:0000000000403ff0\n.text:0000000000403ff3\n.text:0000000000403ff8\n.text:0000000000403ffb\n.text:0000000000403ffe\n.text:0000000000404003\n.text:0000000000404006\n.text:0000000000404009\n.text:000000000040400c\n.text:000000000040400e\n.text:0000000000404013\n.text:0000000000404016\n.text:0000000000404019\n.text:000000000040401e\n.text:0000000000404020\n.text:0000000000404022\n.text:0000000000404023\n.text:0000000000404025\n.text:0000000000404027\n.text:0000000000404029\n.text:000000000040402a\n.text:000000000040402b\n.text:0000000000404030\n.text:0000000000404033\n.text:0000000000404035\n.text:000000000040403a\n.text:000000000040403f\n.text:0000000000404044\n.text:0000000000404047\n.text:000000000040404c\n.text:000000000040404f\n.text:0000000000404054\n.text:0000000000404057\n.text:0000000000404059\n.text:000000000040405b\n.text:000000000040405e\n.text:0000000000404061\n.text:0000000000404066\n.text:0000000000404069\n'
p902
tp903
sS'gettext_quote'
p904
(S'\n__stdcall gettext_quote(char * msgid)\n'
p905
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_0040d2ce;\u000a        pcVar2 = &DAT_0040d2d2;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p906
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00401d10\nCMP RAX,RBX\nJNZ 0x00406538\nCALL 0x00409e90\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x00406540\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x004064e8\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40d2be\nMOV EAX,0x40d2c2\nJMP 0x00406534\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x00406540\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00406526\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40d2ce\nMOV EAX,0x40d2d2\nJMP 0x00406534\nCMP R14D,0x9\nMOV ECX,0x40d2b4\nMOV EAX,0x40dab6\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p907
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 77 b8 ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 e9 39 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 be d2 40 00\nb8 c2 d2 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 ce d2 40 00\nb8 d2 d2 40 00\neb 0e\n41 83 fe 09\nb9 b4 d2 40 00\nb8 b6 da 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p908
S'.text:0000000000406480\n.text:0000000000406481\n.text:0000000000406483\n.text:0000000000406484\n.text:0000000000406487\n.text:000000000040648a\n.text:000000000040648c\n.text:0000000000406491\n.text:0000000000406494\n.text:0000000000406499\n.text:000000000040649c\n.text:00000000004064a2\n.text:00000000004064a7\n.text:00000000004064aa\n.text:00000000004064af\n.text:00000000004064b4\n.text:00000000004064b9\n.text:00000000004064bf\n.text:00000000004064c5\n.text:00000000004064c8\n.text:00000000004064ca\n.text:00000000004064cc\n.text:00000000004064d1\n.text:00000000004064d5\n.text:00000000004064d7\n.text:00000000004064d9\n.text:00000000004064dc\n.text:00000000004064e1\n.text:00000000004064e6\n.text:00000000004064e8\n.text:00000000004064ed\n.text:00000000004064f2\n.text:00000000004064f7\n.text:00000000004064fd\n.text:0000000000406503\n.text:0000000000406506\n.text:0000000000406508\n.text:000000000040650a\n.text:000000000040650f\n.text:0000000000406513\n.text:0000000000406515\n.text:0000000000406517\n.text:000000000040651a\n.text:000000000040651f\n.text:0000000000406524\n.text:0000000000406526\n.text:000000000040652a\n.text:000000000040652f\n.text:0000000000406534\n.text:0000000000406538\n.text:0000000000406539\n.text:000000000040653b\n.text:000000000040653c\n'
p909
tp910
sS'out_uint_o'
p911
(S'\n__stdcall out_uint_o(char * pformat, size_t prefix_len, uintmax_t arg)\n'
p912
V\u000avoid out_uint_o(char *pformat,size_t prefix_len,uintmax_t arg)\u000a\u000a{\u000a  make_format(pformat,prefix_len,"-#0","lo");\u000a  __printf_chk(1,pformat,arg);\u000a  return;\u000a}\u000a\u000a
p913
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nMOV EDX,0x40c814\nMOV ECX,0x40cb2a\nCALL 0x00403cb0\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402020\n'
p914
S'41 56\n53\n50\n49 89 d6\n48 89 fb\nba 14 c8 40 00\nb9 2a cb 40 00\ne8 27 fc ff ff\nbf 01 00 00 00\n31 c0\n48 89 de\n4c 89 f2\n48 83 c4 08\n5b\n41 5e\ne9 7e df ff ff\n'
p915
S'.text:0000000000404070\n.text:0000000000404072\n.text:0000000000404073\n.text:0000000000404074\n.text:0000000000404077\n.text:000000000040407a\n.text:000000000040407f\n.text:0000000000404084\n.text:0000000000404089\n.text:000000000040408e\n.text:0000000000404090\n.text:0000000000404093\n.text:0000000000404096\n.text:000000000040409a\n.text:000000000040409b\n.text:000000000040409d\n'
p916
tp917
sS'fsetfilecon'
p918
(S'\n__stdcall fsetfilecon(security_context_t con)\n'
p919
V\u000aint fsetfilecon(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p920
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p921
S'50\ne8 da b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p922
S'.text:0000000000406a40\n.text:0000000000406a41\n.text:0000000000406a46\n.text:0000000000406a4c\n.text:0000000000406a51\n.text:0000000000406a52\n'
p923
tp924
sS'fclose'
p925
(S'\n__stdcall fclose(FILE * __stream)\n'
p926
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_006110a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p927
S'JMP qword ptr [0x006110a8]\n'
p928
S'ff 25 c2 f3 20 00\n'
p929
S'.plt:0000000000401ce0\n'
p930
tp931
sS'__ctype_get_mb_cur_max'
p932
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p933
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_006110c8)();\u000a  return sVar1;\u000a}\u000a\u000a
p934
S'JMP qword ptr [0x006110c8]\n'
p935
S'ff 25 a2 f3 20 00\n'
p936
S'.plt:0000000000401d20\n'
p937
tp938
sS'lstat'
p939
(S'\n__stdcall lstat(char * __file, stat * __buf)\n'
p940
V\u000aint lstat(char *__file,stat *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___lxstat_006110d8)(1,__file,__buf);\u000a  return iVar1;\u000a}\u000a\u000a
p941
S'MOV RDX,RSI\nMOV RSI,RDI\nMOV EDI,0x1\nJMP 0x00401d40\n'
p942
S'48 89 f2\n48 89 fe\nbf 01 00 00 00\ne9 d0 6d ff ff\n'
p943
S'.text:000000000040af60\n.text:000000000040af63\n.text:000000000040af66\n.text:000000000040af6b\n'
p944
tp945
sS'quotearg_n_style'
p946
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p947
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p948
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x004061b0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00405f80\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p949
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p950
S'.text:0000000000406170\n.text:0000000000406171\n.text:0000000000406173\n.text:0000000000406174\n.text:0000000000406178\n.text:000000000040617b\n.text:000000000040617d\n.text:0000000000406182\n.text:0000000000406185\n.text:000000000040618a\n.text:0000000000406191\n.text:0000000000406193\n.text:0000000000406196\n.text:0000000000406199\n.text:000000000040619e\n.text:00000000004061a2\n.text:00000000004061a3\n.text:00000000004061a5\n.text:00000000004061a6\n'
p951
tp952
sS'setfilecon'
p953
(S'\n__stdcall setfilecon(char * file, security_context_t con)\n'
p954
V\u000aint setfilecon(char *file,security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p955
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p956
S'50\ne8 1a b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p957
S'.text:0000000000406a00\n.text:0000000000406a01\n.text:0000000000406a06\n.text:0000000000406a0c\n.text:0000000000406a11\n.text:0000000000406a12\n'
p958
tp959
sS'xsum'
p960
(S'\n__stdcall xsum(size_t size1, size_t size2)\n'
p961
V\u000asize_t xsum(size_t size1,size_t size2)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = 0xffffffffffffffff;\u000a  if (size1 <= size2 + size1) {\u000a    sVar1 = size2 + size1;\u000a  }\u000a  return sVar1;\u000a}\u000a\u000a
p962
S'ADD RSI,RDI\nCMP RSI,RDI\nMOV RAX,-0x1\nCMOVNC RAX,RSI\nRET\n'
p963
S'48 01 fe\n48 39 fe\n48 c7 c0 ff ff ff ff\n48 0f 43 c6\nc3\n'
p964
S'.text:000000000040ae10\n.text:000000000040ae13\n.text:000000000040ae16\n.text:000000000040ae1d\n.text:000000000040ae21\n'
p965
tp966
sS'statfs'
p967
(S'\n__stdcall statfs(char * __file, statfs * __buf)\n'
p968
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint statfs(char *__file,statfs *__buf)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_statfs_006111c0)();\u000a  return iVar1;\u000a}\u000a\u000a
p969
S'JMP qword ptr [0x006111c0]\n'
p970
S'ff 25 aa f2 20 00\n'
p971
S'.plt:0000000000401f10\n'
p972
tp973
sS'dir_len'
p974
(S'\n__stdcall dir_len(char * file)\n'
p975
V\u000asize_t dir_len(char *file)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  char *pcVar3;\u000a  char *pcVar4;\u000a  \u000a  cVar2 = *file;\u000a  pcVar3 = last_component(file);\u000a  pcVar3 = pcVar3 + -(long)file;\u000a  do {\u000a    pcVar4 = pcVar3;\u000a    if (pcVar3 <= (char *)(ulong)(cVar2 == '/')) {\u000a      return (size_t)pcVar4;\u000a    }\u000a    pcVar1 = pcVar3 + (long)(file + -1);\u000a    pcVar3 = pcVar3 + -1;\u000a  } while (*pcVar1 == '/');\u000a  return (size_t)pcVar4;\u000a}\u000a\u000a
p976
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nXOR R14D,R14D\nCMP byte ptr [RBX],0x2f\nSETZ R14B\nCALL 0x00404cb0\nMOV RCX,RAX\nSUB RCX,RBX\nNOP dword ptr [RAX]\nMOV RAX,RCX\nCMP R14,RAX\nJNC 0x00404c43\nLEA RCX,[RAX + -0x1]\nCMP byte ptr [RBX + RAX*0x1 + -0x1],0x2f\nJZ 0x00404c30\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p977
S'41 56\n53\n50\n48 89 fb\n45 31 f6\n80 3b 2f\n41 0f 94 c6\ne8 8a 00 00 00\n48 89 c1\n48 29 d9\n0f 1f 40 00\n48 89 c8\n49 39 c6\n73 0b\n48 8d 48 ff\n80 7c 03 ff 2f\n74 ed\n48 83 c4 08\n5b\n41 5e\nc3\n'
p978
S'.text:0000000000404c10\n.text:0000000000404c12\n.text:0000000000404c13\n.text:0000000000404c14\n.text:0000000000404c17\n.text:0000000000404c1a\n.text:0000000000404c1d\n.text:0000000000404c21\n.text:0000000000404c26\n.text:0000000000404c29\n.text:0000000000404c2c\n.text:0000000000404c30\n.text:0000000000404c33\n.text:0000000000404c36\n.text:0000000000404c38\n.text:0000000000404c3c\n.text:0000000000404c41\n.text:0000000000404c43\n.text:0000000000404c47\n.text:0000000000404c48\n.text:0000000000404c4a\n'
p979
tp980
sS'quote_n'
p981
(S'\n__stdcall quote_n(char * arg)\n'
p982
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p983
S'MOV RDX,-0x1\nJMP 0x00406440\n'
p984
S'48 c7 c2 ff ff ff ff\neb d7\n'
p985
S'.text:0000000000406460\n.text:0000000000406467\n'
p986
tp987
sS'quotearg_alloc'
p988
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p989
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p990
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x00405df0\n'
p991
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p992
S'.text:0000000000405de0\n.text:0000000000405de3\n.text:0000000000405de5\n.text:0000000000405de8\n'
p993
tp994
sS'find_mount_point'
p995
(S'\n__stdcall find_mount_point(char * file, stat * file_stat)\n'
p996
V\u000achar * find_mount_point(char *file,stat *file_stat)\u000a\u000a{\u000a  uint uVar1;\u000a  long lVar2;\u000a  int iVar3;\u000a  uint *puVar4;\u000a  undefined8 uVar5;\u000a  size_t sVar6;\u000a  char *__s;\u000a  char *pcVar7;\u000a  long *plVar8;\u000a  long *__path;\u000a  uint uVar9;\u000a  long lStack352;\u000a  long local_158;\u000a  long local_150;\u000a  long local_c8;\u000a  long local_c0;\u000a  saved_cwd local_38;\u000a  \u000a  __path = &lStack352 + 1;\u000a  plVar8 = &lStack352 + 1;\u000a  lStack352 = 0x4047a1;\u000a  iVar3 = save_cwd(&local_38);\u000a  if (iVar3 != 0) {\u000a    lStack352 = 0x4047aa;\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar9 = *puVar4;\u000a    lStack352 = 0x4047c0;\u000a    uVar5 = dcgettext(0,"cannot get current directory",5);\u000a    lStack352 = 0x4047d1;\u000a    error(0,(ulong)uVar9,uVar5,uVar5);\u000a    return (char *)0x0;\u000a  }\u000a  if ((file_stat->st_mode & 0xf000) == 0x4000) {\u000a    lStack352 = 0x4047f9;\u000a    memcpy(&local_c8,file_stat,0x90);\u000a    lStack352 = 0x404801;\u000a    iVar3 = chdir(file);\u000a    if (iVar3 < 0) {\u000aLAB_0040490f:\u000a      *(undefined8 *)((undefined *)plVar8 + -8) = 0x404914;\u000a      puVar4 = (uint *)__errno_location(((undefined *)plVar8)[-8]);\u000a      uVar9 = *puVar4;\u000a      *(undefined8 *)((undefined *)plVar8 + -8) = 0x40492b;\u000a      uVar5 = dcgettext(0,"cannot change to directory %s",5);\u000a      *(undefined8 *)((undefined *)plVar8 + -8) = 0x40493b;\u000a      __s = quotearg_style(4,((undefined *)plVar8)[-8]);\u000a      *(undefined8 *)((undefined *)plVar8 + -8) = 0x40494d;\u000a      error(0,(ulong)uVar9,uVar5,__s);\u000a      return (char *)0x0;\u000a    }\u000a  }\u000a  else {\u000a    lStack352 = 0x404812;\u000a    __s = dir_name(file);\u000a    lStack352 = 0x40481d;\u000a    sVar6 = strlen(__s);\u000a    lVar2 = -(sVar6 + 0x10 & 0xfffffffffffffff0);\u000a    __path = (long *)((long)&lStack352 + lVar2 + 8);\u000a    *(long *)((long)&lStack352 + lVar2) = 0x40483d;\u000a    memcpy(__path,__s,sVar6 + 1,*(undefined *)((long)&lStack352 + lVar2));\u000a    *(long *)((long)&lStack352 + lVar2) = 0x404845;\u000a    free(__s,*(undefined *)((long)&lStack352 + lVar2));\u000a    *(long *)((long)&lStack352 + lVar2) = 0x40484d;\u000a    iVar3 = chdir(__path,*(undefined *)((long)&lStack352 + lVar2));\u000a    plVar8 = __path;\u000a    if (iVar3 < 0) goto LAB_0040490f;\u000a    *(long *)((long)&lStack352 + lVar2) = 0x404866;\u000a    iVar3 = stat(&DAT_0040cc27,&local_c8,*(undefined *)((long)&lStack352 + lVar2));\u000a    if (iVar3 < 0) {\u000a      *(long *)((long)&lStack352 + lVar2) = 0x404964;\u000a      puVar4 = (uint *)__errno_location(*(undefined *)((long)&lStack352 + lVar2));\u000a      uVar9 = *puVar4;\u000a      __s = (char *)0x0;\u000a      *(long *)((long)&lStack352 + lVar2) = 0x40497b;\u000a      uVar5 = dcgettext(0,"cannot stat current directory (now %s)",5);\u000a      *(long *)((long)&lStack352 + lVar2) = 0x40498b;\u000a      pcVar7 = quotearg_style(4,*(undefined *)((long)&lStack352 + lVar2));\u000a      *(long *)((long)&lStack352 + lVar2) = 0x40499d;\u000a      error(0,(ulong)uVar9,uVar5,pcVar7);\u000a      goto LAB_004049df;\u000a    }\u000a  }\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x40487f;\u000a  iVar3 = stat(&DAT_0040cc26,&lStack352 + 1,((undefined *)__path)[-8]);\u000a  if (-1 < iVar3) {\u000a    do {\u000a      if ((local_158 != local_c8) || (local_150 == local_c0)) {\u000a        *(undefined8 *)((undefined *)__path + -8) = 0x404957;\u000a        __s = xgetcwd(((undefined *)__path)[-8]);\u000a        goto LAB_004049df;\u000a      }\u000a      *(undefined8 *)((undefined *)__path + -8) = 0x4048d2;\u000a      iVar3 = chdir(&DAT_0040cc26,((undefined *)__path)[-8]);\u000a      if (iVar3 < 0) {\u000a        *(undefined8 *)((undefined *)__path + -8) = 0x4049a4;\u000a        puVar4 = (uint *)__errno_location(((undefined *)__path)[-8]);\u000a        uVar9 = *puVar4;\u000a        __s = "cannot change to directory %s";\u000a        goto LAB_004049ae;\u000a      }\u000a      *(undefined8 *)((undefined *)__path + -8) = 0x4048ea;\u000a      memcpy(&local_c8,&lStack352 + 1,0x90,((undefined *)__path)[-8]);\u000a      *(undefined8 *)((undefined *)__path + -8) = 0x4048f7;\u000a      iVar3 = stat(&DAT_0040cc26,&lStack352 + 1,((undefined *)__path)[-8]);\u000a    } while (-1 < iVar3);\u000a  }\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x404900;\u000a  puVar4 = (uint *)__errno_location(((undefined *)__path)[-8]);\u000a  uVar9 = *puVar4;\u000a  __s = "cannot stat %s";\u000aLAB_004049ae:\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x4049b8;\u000a  uVar5 = dcgettext(0,__s,5);\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x4049ca;\u000a  __s = quotearg_style(4,((undefined *)__path)[-8]);\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x4049dc;\u000a  error(0,(ulong)uVar9,uVar5,__s);\u000a  __s = (char *)0x0;\u000aLAB_004049df:\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x4049e4;\u000a  puVar4 = (uint *)__errno_location(((undefined *)__path)[-8]);\u000a  uVar9 = *puVar4;\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x4049f3;\u000a  iVar3 = restore_cwd(&local_38,((undefined *)__path)[-8]);\u000a  if (iVar3 != 0) {\u000a    uVar1 = *puVar4;\u000a    *(undefined8 *)((undefined *)__path + -8) = 0x404a0b;\u000a    uVar5 = dcgettext(0,"failed to return to initial working directory",5);\u000a    *(undefined8 *)((undefined *)__path + -8) = 0x404a20;\u000a    error(1,(ulong)uVar1,uVar5,uVar5);\u000a  }\u000a  *(undefined8 *)((undefined *)__path + -8) = 0x404a29;\u000a  free_cwd(&local_38,((undefined *)__path)[-8]);\u000a  *puVar4 = uVar9;\u000a  return __s;\u000a}\u000a\u000a
p997
S'PUSH RBP\nMOV RBP,RSP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x130\nMOV RBX,RSI\nMOV R15,RDI\nLEA RDI,[RBP + -0x30]\nCALL 0x00406880\nTEST EAX,EAX\nJZ 0x004047d6\nCALL 0x00401c20\nMOV EBX,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x40cbc4\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00402050\nJMP 0x00404a2c\nMOV EAX,0xf000\nAND EAX,dword ptr [RBX + 0x18]\nCMP EAX,0x4000\nJNZ 0x0040480a\nLEA RDI,[-0xc0 + RBP]\nMOV EDX,0x90\nMOV RSI,RBX\nCALL 0x00401ed0\nMOV RDI,R15\nCALL 0x00401d60\nTEST EAX,EAX\nJNS 0x0040486e\nJMP 0x0040490f\nMOV RDI,R15\nCALL 0x00404bf0\nMOV RBX,RAX\nMOV RDI,RBX\nCALL 0x00401d30\nMOV R15,RSP\nLEA RDX,[RAX + 0x1]\nADD RAX,0x10\nAND RAX,-0x10\nSUB R15,RAX\nMOV RSP,R15\nMOV RDI,R15\nMOV RSI,RBX\nCALL 0x00401ed0\nMOV RDI,RBX\nCALL 0x00401be0\nMOV RDI,R15\nCALL 0x00401d60\nTEST EAX,EAX\nJS 0x0040490f\nLEA RSI,[-0xc0 + RBP]\nMOV EDI,0x40cc27\nCALL 0x0040af40\nTEST EAX,EAX\nJS 0x0040495f\nLEA RSI,[-0x150 + RBP]\nMOV EDI,0x40cc26\nCALL 0x0040af40\nTEST EAX,EAX\nJS 0x004048fb\nLEA R14,[-0xc0 + RBP]\nLEA RBX,[-0x150 + RBP]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RAX,qword ptr [-0x150 + RBP]\nCMP RAX,qword ptr [-0xc0 + RBP]\nJNZ 0x00404952\nMOV RAX,qword ptr [-0x148 + RBP]\nCMP RAX,qword ptr [-0xb8 + RBP]\nJZ 0x00404952\nMOV EDI,0x40cc26\nCALL 0x00401d60\nTEST EAX,EAX\nJS 0x0040499f\nMOV EDX,0x90\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401ed0\nMOV EDI,0x40cc26\nMOV RSI,RBX\nCALL 0x0040af40\nTEST EAX,EAX\nJNS 0x004048a0\nCALL 0x00401c20\nMOV R14D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x40caf1\nJMP 0x004049ae\nCALL 0x00401c20\nMOV R12D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x40cbe1\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,RBX\nCALL 0x00402050\nJMP 0x00404a2c\nCALL 0x00408b30\nMOV R14,RAX\nJMP 0x004049df\nCALL 0x00401c20\nMOV R12D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x40cbff\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBX,RAX\nMOV EDI,0x4\nMOV RSI,R15\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,RBX\nCALL 0x00402050\nJMP 0x004049df\nCALL 0x00401c20\nMOV R14D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x40cbe1\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBX,RAX\nMOV EDI,0x4\nMOV ESI,0x40cc26\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,RBX\nCALL 0x00402050\nXOR R14D,R14D\nCALL 0x00401c20\nMOV RBX,RAX\nMOV R12D,dword ptr [RBX]\nLEA RDI,[RBP + -0x30]\nCALL 0x004068d0\nTEST EAX,EAX\nJZ 0x00404a20\nMOV R15D,dword ptr [RBX]\nXOR EDI,EDI\nMOV ESI,0x40cc29\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RCX\nCALL 0x00402050\nLEA RDI,[RBP + -0x30]\nCALL 0x004068f0\nMOV dword ptr [RBX],R12D\nMOV RAX,R14\nLEA RSP,[RBP + -0x20]\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p998
S'55\n48 89 e5\n41 57\n41 56\n41 54\n53\n48 81 ec 30 01 00 00\n48 89 f3\n49 89 ff\n48 8d 7d d0\ne8 df 20 00 00\n85 c0\n74 31\ne8 76 d4 ff ff\n8b 18\n45 31 f6\n31 ff\nbe c4 cb 40 00\nba 05 00 00 00\ne8 50 d5 ff ff\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ca\ne8 7f d8 ff ff\ne9 56 02 00 00\nb8 00 f0 00 00\n23 43 18\n3d 00 40 00 00\n75 25\n48 8d bd 40 ff ff ff\nba 90 00 00 00\n48 89 de\ne8 d7 d6 ff ff\n4c 89 ff\ne8 5f d5 ff ff\n85 c0\n79 69\ne9 05 01 00 00\n4c 89 ff\ne8 de 03 00 00\n48 89 c3\n48 89 df\ne8 13 d5 ff ff\n49 89 e7\n48 8d 50 01\n48 83 c0 10\n48 83 e0 f0\n49 29 c7\n4c 89 fc\n4c 89 ff\n48 89 de\ne8 93 d6 ff ff\n48 89 df\ne8 9b d3 ff ff\n4c 89 ff\ne8 13 d5 ff ff\n85 c0\n0f 88 ba 00 00 00\n48 8d b5 40 ff ff ff\nbf 27 cc 40 00\ne8 da 66 00 00\n85 c0\n0f 88 f1 00 00 00\n48 8d b5 b0 fe ff ff\nbf 26 cc 40 00\ne8 c1 66 00 00\n85 c0\n78 78\n4c 8d b5 40 ff ff ff\n48 8d 9d b0 fe ff ff\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 85 b0 fe ff ff\n48 3b 85 40 ff ff ff\n0f 85 9e 00 00 00\n48 8b 85 b8 fe ff ff\n48 3b 85 48 ff ff ff\n0f 84 8a 00 00 00\nbf 26 cc 40 00\ne8 8e d4 ff ff\n85 c0\n0f 88 c5 00 00 00\nba 90 00 00 00\n4c 89 f7\n48 89 de\ne8 e6 d5 ff ff\nbf 26 cc 40 00\n48 89 de\ne8 49 66 00 00\n85 c0\n79 a5\ne8 20 d3 ff ff\n44 8b 30\n31 ff\nbe f1 ca 40 00\ne9 9f 00 00 00\ne8 0c d3 ff ff\n44 8b 20\n45 31 f6\n31 ff\nbe e1 cb 40 00\nba 05 00 00 00\ne8 e5 d3 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 15 19 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 e6\n48 89 da\ne8 03 d7 ff ff\ne9 da 00 00 00\ne8 d9 41 00 00\n49 89 c6\ne9 80 00 00 00\ne8 bc d2 ff ff\n44 8b 20\n45 31 f6\n31 ff\nbe ff cb 40 00\nba 05 00 00 00\ne8 95 d3 ff ff\n48 89 c3\nbf 04 00 00 00\n4c 89 fe\ne8 c5 18 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 e6\n48 89 da\ne8 b3 d6 ff ff\neb 40\ne8 7c d2 ff ff\n44 8b 30\n31 ff\nbe e1 cb 40 00\nba 05 00 00 00\ne8 58 d3 ff ff\n48 89 c3\nbf 04 00 00 00\nbe 26 cc 40 00\ne8 86 18 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n48 89 da\ne8 74 d6 ff ff\n45 31 f6\ne8 3c d2 ff ff\n48 89 c3\n44 8b 23\n48 8d 7d d0\ne8 dd 1e 00 00\n85 c0\n74 29\n44 8b 3b\n31 ff\nbe 29 cc 40 00\nba 05 00 00 00\ne8 05 d3 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n44 89 fe\n48 89 ca\ne8 30 d6 ff ff\n48 8d 7d d0\ne8 c7 1e 00 00\n44 89 23\n4c 89 f0\n48 8d 65 e0\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p999
S'.text:0000000000404780\n.text:0000000000404781\n.text:0000000000404784\n.text:0000000000404786\n.text:0000000000404788\n.text:000000000040478a\n.text:000000000040478b\n.text:0000000000404792\n.text:0000000000404795\n.text:0000000000404798\n.text:000000000040479c\n.text:00000000004047a1\n.text:00000000004047a3\n.text:00000000004047a5\n.text:00000000004047aa\n.text:00000000004047ac\n.text:00000000004047af\n.text:00000000004047b1\n.text:00000000004047b6\n.text:00000000004047bb\n.text:00000000004047c0\n.text:00000000004047c3\n.text:00000000004047c5\n.text:00000000004047c7\n.text:00000000004047c9\n.text:00000000004047cc\n.text:00000000004047d1\n.text:00000000004047d6\n.text:00000000004047db\n.text:00000000004047de\n.text:00000000004047e3\n.text:00000000004047e5\n.text:00000000004047ec\n.text:00000000004047f1\n.text:00000000004047f4\n.text:00000000004047f9\n.text:00000000004047fc\n.text:0000000000404801\n.text:0000000000404803\n.text:0000000000404805\n.text:000000000040480a\n.text:000000000040480d\n.text:0000000000404812\n.text:0000000000404815\n.text:0000000000404818\n.text:000000000040481d\n.text:0000000000404820\n.text:0000000000404824\n.text:0000000000404828\n.text:000000000040482c\n.text:000000000040482f\n.text:0000000000404832\n.text:0000000000404835\n.text:0000000000404838\n.text:000000000040483d\n.text:0000000000404840\n.text:0000000000404845\n.text:0000000000404848\n.text:000000000040484d\n.text:000000000040484f\n.text:0000000000404855\n.text:000000000040485c\n.text:0000000000404861\n.text:0000000000404866\n.text:0000000000404868\n.text:000000000040486e\n.text:0000000000404875\n.text:000000000040487a\n.text:000000000040487f\n.text:0000000000404881\n.text:0000000000404883\n.text:000000000040488a\n.text:0000000000404891\n.text:00000000004048a0\n.text:00000000004048a7\n.text:00000000004048ae\n.text:00000000004048b4\n.text:00000000004048bb\n.text:00000000004048c2\n.text:00000000004048c8\n.text:00000000004048cd\n.text:00000000004048d2\n.text:00000000004048d4\n.text:00000000004048da\n.text:00000000004048df\n.text:00000000004048e2\n.text:00000000004048e5\n.text:00000000004048ea\n.text:00000000004048ef\n.text:00000000004048f2\n.text:00000000004048f7\n.text:00000000004048f9\n.text:00000000004048fb\n.text:0000000000404900\n.text:0000000000404903\n.text:0000000000404905\n.text:000000000040490a\n.text:000000000040490f\n.text:0000000000404914\n.text:0000000000404917\n.text:000000000040491a\n.text:000000000040491c\n.text:0000000000404921\n.text:0000000000404926\n.text:000000000040492b\n.text:000000000040492e\n.text:0000000000404933\n.text:0000000000404936\n.text:000000000040493b\n.text:000000000040493e\n.text:0000000000404940\n.text:0000000000404942\n.text:0000000000404945\n.text:0000000000404948\n.text:000000000040494d\n.text:0000000000404952\n.text:0000000000404957\n.text:000000000040495a\n.text:000000000040495f\n.text:0000000000404964\n.text:0000000000404967\n.text:000000000040496a\n.text:000000000040496c\n.text:0000000000404971\n.text:0000000000404976\n.text:000000000040497b\n.text:000000000040497e\n.text:0000000000404983\n.text:0000000000404986\n.text:000000000040498b\n.text:000000000040498e\n.text:0000000000404990\n.text:0000000000404992\n.text:0000000000404995\n.text:0000000000404998\n.text:000000000040499d\n.text:000000000040499f\n.text:00000000004049a4\n.text:00000000004049a7\n.text:00000000004049a9\n.text:00000000004049ae\n.text:00000000004049b3\n.text:00000000004049b8\n.text:00000000004049bb\n.text:00000000004049c0\n.text:00000000004049c5\n.text:00000000004049ca\n.text:00000000004049cd\n.text:00000000004049cf\n.text:00000000004049d1\n.text:00000000004049d4\n.text:00000000004049d7\n.text:00000000004049dc\n.text:00000000004049df\n.text:00000000004049e4\n.text:00000000004049e7\n.text:00000000004049ea\n.text:00000000004049ee\n.text:00000000004049f3\n.text:00000000004049f5\n.text:00000000004049f7\n.text:00000000004049fa\n.text:00000000004049fc\n.text:0000000000404a01\n.text:0000000000404a06\n.text:0000000000404a0b\n.text:0000000000404a0e\n.text:0000000000404a13\n.text:0000000000404a15\n.text:0000000000404a18\n.text:0000000000404a1b\n.text:0000000000404a20\n.text:0000000000404a24\n.text:0000000000404a29\n.text:0000000000404a2c\n.text:0000000000404a2f\n.text:0000000000404a33\n.text:0000000000404a34\n.text:0000000000404a36\n.text:0000000000404a38\n.text:0000000000404a3a\n.text:0000000000404a3b\n'
p1000
tp1001
sS'close_stdout_set_file_name'
p1002
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p1003
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p1004
S'MOV qword ptr [0x00611468],RDI\nRET\n'
p1005
S'48 89 3d 51 c9 20 00\nc3\n'
p1006
S'.text:0000000000404b10\n.text:0000000000404b17\n'
p1007
tp1008
sS'print_esc_char'
p1009
(S'\n__stdcall print_esc_char()\n'
p1010
V\u000avoid print_esc_char(ulong uParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char cVar2;\u000a  \u000a  uParm1 = uParm1 & 0xffffffff;\u000a  cVar2 = (char)uParm1;\u000a  switch((int)uParm1) {\u000a  case 0x22:\u000a  case 0x5c:\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"warning: unrecognized escape \u005c'\u005c\u005c%c\u005c'",5);\u000a    error(0,0,uVar1,uParm1);\u000a    break;\u000a  case 0x61:\u000a    cVar2 = '\u005ca';\u000a    break;\u000a  case 0x62:\u000a    cVar2 = '\u005cb';\u000a    break;\u000a  case 0x65:\u000a    cVar2 = 0x1b;\u000a    break;\u000a  case 0x66:\u000a    cVar2 = '\u005cf';\u000a    break;\u000a  case 0x6e:\u000a    cVar2 = '\u005cn';\u000a    break;\u000a  case 0x72:\u000a    cVar2 = '\u005cr';\u000a    break;\u000a  case 0x74:\u000a    cVar2 = '\u005ct';\u000a    break;\u000a  case 0x76:\u000a    cVar2 = '\u005cv';\u000a  }\u000a  putchar_unlocked((int)cVar2);\u000a  return;\u000a}\u000a\u000a
p1011
S'PUSH RBX\nMOV EBX,EDI\nLEA EAX,[RBX + -0x22]\nCMP EAX,0x54\nJA 0x00402f86\nJMP qword ptr [0x40b190 + RAX*0x8]\nMOV BL,0x7\nJMP 0x00402fc6\nXOR EDI,EDI\nMOV ESI,0x40c7f1\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nMOV ECX,EBX\nCALL 0x00402050\nJMP 0x00402fc6\nMOV BL,0x8\nJMP 0x00402fc6\nMOV BL,0x1b\nJMP 0x00402fc6\nMOV BL,0xc\nJMP 0x00402fc6\nMOV BL,0xa\nJMP 0x00402fc6\nMOV BL,0xd\nJMP 0x00402fc6\nMOV BL,0x9\nJMP 0x00402fc6\nMOV BL,0xb\nMOVSX EDI,BL\nPOP RBX\nJMP 0x00401ee0\n'
p1012
S'53\n89 fb\n8d 43 de\n83 f8 54\n77 0b\nff 24 c5 90 b1 40 00\nb3 07\neb 40\n31 ff\nbe f1 c7 40 00\nba 05 00 00 00\ne8 79 ed ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\n89 d9\ne8 a6 f0 ff ff\neb 1a\nb3 08\neb 16\nb3 1b\neb 12\nb3 0c\neb 0e\nb3 0a\neb 0a\nb3 0d\neb 06\nb3 09\neb 02\nb3 0b\n0f be fb\n5b\ne9 11 ef ff ff\n'
p1013
S'.text:0000000000402f70\n.text:0000000000402f71\n.text:0000000000402f73\n.text:0000000000402f76\n.text:0000000000402f79\n.text:0000000000402f7b\n.text:0000000000402f82\n.text:0000000000402f84\n.text:0000000000402f86\n.text:0000000000402f88\n.text:0000000000402f8d\n.text:0000000000402f92\n.text:0000000000402f97\n.text:0000000000402f9a\n.text:0000000000402f9c\n.text:0000000000402f9e\n.text:0000000000402fa0\n.text:0000000000402fa3\n.text:0000000000402fa5\n.text:0000000000402faa\n.text:0000000000402fac\n.text:0000000000402fae\n.text:0000000000402fb0\n.text:0000000000402fb2\n.text:0000000000402fb4\n.text:0000000000402fb6\n.text:0000000000402fb8\n.text:0000000000402fba\n.text:0000000000402fbc\n.text:0000000000402fbe\n.text:0000000000402fc0\n.text:0000000000402fc2\n.text:0000000000402fc4\n.text:0000000000402fc6\n.text:0000000000402fc9\n.text:0000000000402fca\n'
p1014
tp1015
sS'find_bind_mount'
p1016
(S'\n__stdcall find_bind_mount(char * name)\n'
p1017
V\u000achar * find_bind_mount(char *name)\u000a\u000a{\u000a  uint uVar1;\u000a  mount_entry *mount_list;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  mount_entry *pmVar5;\u000a  stat dev_stats;\u000a  stat name_stats;\u000a  stat local_140;\u000a  stat local_b0;\u000a  \u000a  if (find_bind_mount_tried_mount_list == 0) {\u000a    mount_list = read_file_system_list();\u000a    if (mount_list == (mount_entry *)0x0) {\u000a      puVar3 = (uint *)__errno_location();\u000a      uVar1 = *puVar3;\u000a      uVar4 = dcgettext(0,"cannot read table of mounted file systems",5);\u000a      error(0,(ulong)uVar1,0x40cc6c,uVar4);\u000a    }\u000a    find_bind_mount_tried_mount_list = 1;\u000a  }\u000a  iVar2 = stat(name,&local_b0);\u000a  if ((iVar2 == 0) && (mount_list != (mount_entry *)0x0)) {\u000a    pmVar5 = mount_list;\u000a    do {\u000a      if (((((*(byte *)&pmVar5->me_dummy_bitfield & 1) != 0) && (*pmVar5->me_devname == '/')) &&\u000a          (iVar2 = strcmp(pmVar5->me_mountdir,name), iVar2 == 0)) &&\u000a         (((iVar2 = stat(pmVar5->me_devname,&local_140), iVar2 == 0 &&\u000a           (local_b0.st_ino == local_140.st_ino)) && (local_b0.st_dev == local_140.st_dev)))) {\u000a        return pmVar5->me_devname;\u000a      }\u000a      pmVar5 = pmVar5->me_next;\u000a    } while (pmVar5 != (mount_entry *)0x0);\u000a  }\u000a  return (char *)0x0;\u000a}\u000a\u000a
p1018
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x128\nMOV RBX,RDI\nMOV AL,byte ptr [0x00611428]\nTEST AL,AL\nJNZ 0x0040469f\nXOR EDI,EDI\nCALL 0x00408f60\nMOV qword ptr [0x00611420],RAX\nTEST RAX,RAX\nJNZ 0x00404698\nCALL 0x00401c20\nMOV EBP,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x40cb49\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x40cc6c\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00402050\nMOV byte ptr [0x00611428],0x1\nLEA RSI,[0x98 + RSP]\nMOV RDI,RBX\nCALL 0x0040af40\nTEST EAX,EAX\nJZ 0x004046b8\nXOR R14D,R14D\nJMP 0x00404729\nMOV RBP,qword ptr [0x00611420]\nXOR R14D,R14D\nTEST RBP,RBP\nJZ 0x00404729\nLEA R15,[RSP + 0x8]\nNOP dword ptr [RAX]\nTEST byte ptr [RBP + 0x28],0x1\nJZ 0x00404720\nMOV RAX,qword ptr [RBP]\nCMP byte ptr [RAX],0x2f\nJNZ 0x00404720\nMOV RDI,qword ptr [RBP + 0x8]\nMOV RSI,RBX\nCALL 0x00401ea0\nTEST EAX,EAX\nJNZ 0x00404720\nMOV RDI,qword ptr [RBP]\nMOV RSI,R15\nCALL 0x0040af40\nTEST EAX,EAX\nJNZ 0x00404720\nMOV RAX,qword ptr [0xa0 + RSP]\nCMP RAX,qword ptr [RSP + 0x10]\nJNZ 0x00404720\nMOV RAX,qword ptr [0x98 + RSP]\nCMP RAX,qword ptr [RSP + 0x8]\nJZ 0x0040473a\nNOP dword ptr [RAX]\nMOV RBP,qword ptr [RBP + 0x30]\nTEST RBP,RBP\nJNZ 0x004046d0\nMOV RAX,R14\nADD RSP,0x128\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV R14,qword ptr [RBP]\nJMP 0x00404729\n'
p1019
S'55\n41 57\n41 56\n53\n48 81 ec 28 01 00 00\n48 89 fb\n8a 05 d2 cd 20 00\n84 c0\n75 45\n31 ff\ne8 ff 48 00 00\n48 89 05 b8 cd 20 00\n48 85 c0\n75 2b\ne8 ae d5 ff ff\n8b 28\n31 ff\nbe 49 cb 40 00\nba 05 00 00 00\ne8 8b d6 ff ff\n48 89 c1\n31 ff\nba 6c cc 40 00\n31 c0\n89 ee\ne8 b8 d9 ff ff\nc6 05 89 cd 20 00 01\n48 8d b4 24 98 00 00 00\n48 89 df\ne8 91 68 00 00\n85 c0\n74 05\n45 31 f6\neb 71\n48 8b 2d 61 cd 20 00\n45 31 f6\n48 85 ed\n74 62\n4c 8d 7c 24 08\n0f 1f 40 00\nf6 45 28 01\n74 4a\n48 8b 45 00\n80 38 2f\n75 41\n48 8b 7d 08\n48 89 de\ne8 b5 d7 ff ff\n85 c0\n75 31\n48 8b 7d 00\n4c 89 fe\ne8 45 68 00 00\n85 c0\n75 21\n48 8b 84 24 a0 00 00 00\n48 3b 44 24 10\n75 12\n48 8b 84 24 98 00 00 00\n48 3b 44 24 08\n74 1d\n0f 1f 00\n48 8b 6d 30\n48 85 ed\n75 a7\n4c 89 f0\n48 81 c4 28 01 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n4c 8b 75 00\neb e9\n'
p1020
S'.text:0000000000404640\n.text:0000000000404641\n.text:0000000000404643\n.text:0000000000404645\n.text:0000000000404646\n.text:000000000040464d\n.text:0000000000404650\n.text:0000000000404656\n.text:0000000000404658\n.text:000000000040465a\n.text:000000000040465c\n.text:0000000000404661\n.text:0000000000404668\n.text:000000000040466b\n.text:000000000040466d\n.text:0000000000404672\n.text:0000000000404674\n.text:0000000000404676\n.text:000000000040467b\n.text:0000000000404680\n.text:0000000000404685\n.text:0000000000404688\n.text:000000000040468a\n.text:000000000040468f\n.text:0000000000404691\n.text:0000000000404693\n.text:0000000000404698\n.text:000000000040469f\n.text:00000000004046a7\n.text:00000000004046aa\n.text:00000000004046af\n.text:00000000004046b1\n.text:00000000004046b3\n.text:00000000004046b6\n.text:00000000004046b8\n.text:00000000004046bf\n.text:00000000004046c2\n.text:00000000004046c5\n.text:00000000004046c7\n.text:00000000004046cc\n.text:00000000004046d0\n.text:00000000004046d4\n.text:00000000004046d6\n.text:00000000004046da\n.text:00000000004046dd\n.text:00000000004046df\n.text:00000000004046e3\n.text:00000000004046e6\n.text:00000000004046eb\n.text:00000000004046ed\n.text:00000000004046ef\n.text:00000000004046f3\n.text:00000000004046f6\n.text:00000000004046fb\n.text:00000000004046fd\n.text:00000000004046ff\n.text:0000000000404707\n.text:000000000040470c\n.text:000000000040470e\n.text:0000000000404716\n.text:000000000040471b\n.text:000000000040471d\n.text:0000000000404720\n.text:0000000000404724\n.text:0000000000404727\n.text:0000000000404729\n.text:000000000040472c\n.text:0000000000404733\n.text:0000000000404734\n.text:0000000000404736\n.text:0000000000404738\n.text:0000000000404739\n.text:000000000040473a\n.text:000000000040473e\n'
p1021
tp1022
sS'__libc_csu_init'
p1023
(S'\n__stdcall __libc_csu_init()\n'
p1024
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p1025
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x610e08]\nPUSH RBP\nLEA RBP,[0x610e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401b90\nTEST RBP,RBP\nJZ 0x0040aee6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x0040aed0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p1026
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 66 5f 20 00\n55\n48 8d 2d 66 5f 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 cf 6c ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p1027
S'.text:000000000040ae90\n.text:000000000040ae92\n.text:000000000040ae94\n.text:000000000040ae97\n.text:000000000040ae99\n.text:000000000040ae9b\n.text:000000000040aea2\n.text:000000000040aea3\n.text:000000000040aeaa\n.text:000000000040aeab\n.text:000000000040aeae\n.text:000000000040aeb1\n.text:000000000040aeb4\n.text:000000000040aeb8\n.text:000000000040aebc\n.text:000000000040aec1\n.text:000000000040aec4\n.text:000000000040aec6\n.text:000000000040aec8\n.text:000000000040aed0\n.text:000000000040aed3\n.text:000000000040aed6\n.text:000000000040aed9\n.text:000000000040aedd\n.text:000000000040aee1\n.text:000000000040aee4\n.text:000000000040aee6\n.text:000000000040aeea\n.text:000000000040aeeb\n.text:000000000040aeec\n.text:000000000040aeee\n.text:000000000040aef0\n.text:000000000040aef2\n.text:000000000040aef4\n'
p1028
tp1029
sS'c_isdigit'
p1030
(S'\n__stdcall c_isdigit()\n'
p1031
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p1032
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p1033
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p1034
S'.text:0000000000409c10\n.text:0000000000409c13\n.text:0000000000409c16\n.text:0000000000409c19\n'
p1035
tp1036
sS'usage'
p1037
(S'\n__stdcall usage()\n'
p1038
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,"Usage: %s [OPTION]... FILE...\u005cn",5);\u000a    __printf_chk(1,uVar1,program_name,uVar1);\u000a    __s = (char *)dcgettext(0,"Display file or file system status.\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_mandatory_arg_note();\u000a    __s = (char *)dcgettext(0,\u000a                            "  -L, --dereference     follow links\u005cn  -f, --file-system     display file system status instead of file status\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  -c  --format=FORMAT   use the specified FORMAT instead of the default;\u005cn                          output a newline after each use of FORMAT\u005cn      --printf=FORMAT   like --format, but interpret backslash escapes,\u005cn                          and do not output a mandatory trailing newline;\u005cn                          if you want a newline, include \u005c\u005cn in FORMAT\u005cn  -t, --terse           print the information in terse form\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnThe valid format sequences for files (without --file-system):\u005cn\u005cn  %a   access rights in octal (note \u005c'#\u005c' and \u005c'0\u005c' printf flags)\u005cn  %A   access rights in human readable form\u005cn  %b   number of blocks allocated (see %B)\u005cn  %B   the size in bytes of each block reported by %b\u005cn  %C   SELinux security context string\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %d   device number in decimal\u005cn  %D   device number in hex\u005cn  %f   raw mode in hex\u005cn  %F   file type\u005cn  %g   group ID of owner\u005cn  %G   group name of owner\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %h   number of hard links\u005cn  %i   inode number\u005cn  %m   mount point\u005cn  %n   file name\u005cn  %N   quoted file name with dereference if symbolic link\u005cn  %o   optimal I/O transfer size hint\u005cn  %s   total size, in bytes\u005cn  %t   major device type in hex, for character/block device special files\u005cn  %T   minor device type in hex, for character/block device special files\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %u   user ID of owner\u005cn  %U   user name of owner\u005cn  %w   time of file birth, human-readable; - if unknown\u005cn  %W   time of file birth, seconds since Epoch; 0 if unknown\u005cn  %x   time of last access, human-readable\u005cn  %X   time of last access, seconds since Epoch\u005cn  %y   time of last data modification, human-readable\u005cn  %Y   time of last data modification, seconds since Epoch\u005cn  %z   time of last status change, human-readable\u005cn  %Z   time of last status change, seconds since Epoch\u005cn\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "Valid format sequences for file systems:\u005cn\u005cn  %a   free blocks available to non-superuser\u005cn  %b   total data blocks in file system\u005cn  %c   total file nodes in file system\u005cn  %d   free file nodes in file system\u005cn  %f   free blocks in file system\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "  %i   file system ID in hex\u005cn  %l   maximum length of filenames\u005cn  %n   file name\u005cn  %s   block size (for faster transfers)\u005cn  %S   fundamental block size (for block counts)\u005cn  %t   file system type in hex\u005cn  %T   file system type in human readable form\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,\u000a                      "\u005cnNOTE: your shell may have its own version of %s, which usually supersedes\u005cnthe version described here.  Please refer to your shell\u005c's documentation\u005cnfor details about the options it supports.\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,&DAT_0040c311,uVar1);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p1039
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x0040245e\nXOR EDI,EDI\nMOV ESI,0x40b8a0\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV RDX,qword ptr [0x00611478]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00402020\nXOR EDI,EDI\nMOV ESI,0x40b8bf\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nCALL 0x004024b0\nXOR EDI,EDI\nMOV ESI,0x40b8e4\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40b954\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40baf6\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40bb23\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40bb59\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40bc8c\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40bd25\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40be8a\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40c068\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40c158\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nCALL 0x00401e70\nXOR EDI,EDI\nMOV ESI,0x40c252\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40c311\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00402020\nCALL 0x004024e0\nMOV EDI,EBX\nCALL 0x004020e0\nCALL 0x00402470\nMOV EDI,EBX\nCALL 0x004020e0\n'
p1040
S'53\n89 fb\n85 db\n0f 85 c3 01 00 00\n31 ff\nbe a0 b8 40 00\nba 05 00 00 00\ne8 64 fa ff ff\n48 89 c1\n48 8b 15 c2 f1 20 00\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 5b fd ff ff\n31 ff\nbe bf b8 40 00\nba 05 00 00 00\ne8 3a fa ff ff\n48 8b 35 ab f0 20 00\n48 89 c7\ne8 8b fb ff ff\ne8 c6 01 00 00\n31 ff\nbe e4 b8 40 00\nba 05 00 00 00\ne8 15 fa ff ff\n48 8b 35 86 f0 20 00\n48 89 c7\ne8 66 fb ff ff\n31 ff\nbe 54 b9 40 00\nba 05 00 00 00\ne8 f5 f9 ff ff\n48 8b 35 66 f0 20 00\n48 89 c7\ne8 46 fb ff ff\n31 ff\nbe f6 ba 40 00\nba 05 00 00 00\ne8 d5 f9 ff ff\n48 8b 35 46 f0 20 00\n48 89 c7\ne8 26 fb ff ff\n31 ff\nbe 23 bb 40 00\nba 05 00 00 00\ne8 b5 f9 ff ff\n48 8b 35 26 f0 20 00\n48 89 c7\ne8 06 fb ff ff\n31 ff\nbe 59 bb 40 00\nba 05 00 00 00\ne8 95 f9 ff ff\n48 8b 35 06 f0 20 00\n48 89 c7\ne8 e6 fa ff ff\n31 ff\nbe 8c bc 40 00\nba 05 00 00 00\ne8 75 f9 ff ff\n48 8b 35 e6 ef 20 00\n48 89 c7\ne8 c6 fa ff ff\n31 ff\nbe 25 bd 40 00\nba 05 00 00 00\ne8 55 f9 ff ff\n48 8b 35 c6 ef 20 00\n48 89 c7\ne8 a6 fa ff ff\n31 ff\nbe 8a be 40 00\nba 05 00 00 00\ne8 35 f9 ff ff\n48 8b 35 a6 ef 20 00\n48 89 c7\ne8 86 fa ff ff\n31 ff\nbe 68 c0 40 00\nba 05 00 00 00\ne8 15 f9 ff ff\n48 8b 35 86 ef 20 00\n48 89 c7\ne8 66 fa ff ff\n31 ff\nbe 58 c1 40 00\nba 05 00 00 00\ne8 f5 f8 ff ff\n48 8b 35 66 ef 20 00\n48 89 c7\ne8 46 fa ff ff\n31 ff\nbe 52 c2 40 00\nba 05 00 00 00\ne8 d5 f8 ff ff\n48 89 c1\nbf 01 00 00 00\nba 11 c3 40 00\n31 c0\n48 89 ce\ne8 ce fb ff ff\ne8 89 00 00 00\n89 df\ne8 82 fc ff ff\ne8 0d 00 00 00\n89 df\ne8 76 fc ff ff\n'
p1041
S'.text:0000000000402290\n.text:0000000000402291\n.text:0000000000402293\n.text:0000000000402295\n.text:000000000040229b\n.text:000000000040229d\n.text:00000000004022a2\n.text:00000000004022a7\n.text:00000000004022ac\n.text:00000000004022af\n.text:00000000004022b6\n.text:00000000004022bb\n.text:00000000004022bd\n.text:00000000004022c0\n.text:00000000004022c5\n.text:00000000004022c7\n.text:00000000004022cc\n.text:00000000004022d1\n.text:00000000004022d6\n.text:00000000004022dd\n.text:00000000004022e0\n.text:00000000004022e5\n.text:00000000004022ea\n.text:00000000004022ec\n.text:00000000004022f1\n.text:00000000004022f6\n.text:00000000004022fb\n.text:0000000000402302\n.text:0000000000402305\n.text:000000000040230a\n.text:000000000040230c\n.text:0000000000402311\n.text:0000000000402316\n.text:000000000040231b\n.text:0000000000402322\n.text:0000000000402325\n.text:000000000040232a\n.text:000000000040232c\n.text:0000000000402331\n.text:0000000000402336\n.text:000000000040233b\n.text:0000000000402342\n.text:0000000000402345\n.text:000000000040234a\n.text:000000000040234c\n.text:0000000000402351\n.text:0000000000402356\n.text:000000000040235b\n.text:0000000000402362\n.text:0000000000402365\n.text:000000000040236a\n.text:000000000040236c\n.text:0000000000402371\n.text:0000000000402376\n.text:000000000040237b\n.text:0000000000402382\n.text:0000000000402385\n.text:000000000040238a\n.text:000000000040238c\n.text:0000000000402391\n.text:0000000000402396\n.text:000000000040239b\n.text:00000000004023a2\n.text:00000000004023a5\n.text:00000000004023aa\n.text:00000000004023ac\n.text:00000000004023b1\n.text:00000000004023b6\n.text:00000000004023bb\n.text:00000000004023c2\n.text:00000000004023c5\n.text:00000000004023ca\n.text:00000000004023cc\n.text:00000000004023d1\n.text:00000000004023d6\n.text:00000000004023db\n.text:00000000004023e2\n.text:00000000004023e5\n.text:00000000004023ea\n.text:00000000004023ec\n.text:00000000004023f1\n.text:00000000004023f6\n.text:00000000004023fb\n.text:0000000000402402\n.text:0000000000402405\n.text:000000000040240a\n.text:000000000040240c\n.text:0000000000402411\n.text:0000000000402416\n.text:000000000040241b\n.text:0000000000402422\n.text:0000000000402425\n.text:000000000040242a\n.text:000000000040242c\n.text:0000000000402431\n.text:0000000000402436\n.text:000000000040243b\n.text:000000000040243e\n.text:0000000000402443\n.text:0000000000402448\n.text:000000000040244a\n.text:000000000040244d\n.text:0000000000402452\n.text:0000000000402457\n.text:0000000000402459\n.text:000000000040245e\n.text:0000000000402463\n.text:0000000000402465\n'
p1042
tp1043
sS'get_stat_ctime_ns'
p1044
(S'\n__stdcall get_stat_ctime_ns(stat * st)\n'
p1045
V\u000along get_stat_ctime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_ctim).tv_nsec;\u000a}\u000a\u000a
p1046
S'MOV RAX,qword ptr [RDI + 0x70]\nRET\n'
p1047
S'48 8b 47 70\nc3\n'
p1048
S'.text:0000000000406b20\n.text:0000000000406b24\n'
p1049
tp1050
sS'quoting_options_from_style'
p1051
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p1052
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1053
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x004061fd\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x00401c10\n'
p1054
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 0e ba ff ff\n'
p1055
S'.text:00000000004061b0\n.text:00000000004061b4\n.text:00000000004061b7\n.text:00000000004061bc\n.text:00000000004061c1\n.text:00000000004061c5\n.text:00000000004061cd\n.text:00000000004061d0\n.text:00000000004061d2\n.text:00000000004061d4\n.text:00000000004061d8\n.text:00000000004061db\n.text:00000000004061df\n.text:00000000004061e4\n.text:00000000004061e9\n.text:00000000004061ed\n.text:00000000004061f1\n.text:00000000004061f5\n.text:00000000004061f8\n.text:00000000004061fc\n.text:00000000004061fd\n'
p1056
tp1057
sS'string_to_security_class'
p1058
(S'\n__stdcall string_to_security_class(char * name)\n'
p1059
V\u000asecurity_class_t string_to_security_class(char *name)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return 0;\u000a}\u000a\u000a
p1060
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nXOR EAX,EAX\nPOP RCX\nRET\n'
p1061
S'50\ne8 3a b1 ff ff\nc7 00 5f 00 00 00\n31 c0\n59\nc3\n'
p1062
S'.text:0000000000406ae0\n.text:0000000000406ae1\n.text:0000000000406ae6\n.text:0000000000406aec\n.text:0000000000406aee\n.text:0000000000406aef\n'
p1063
tp1064
sS'matchpathcon_init_prefix'
p1065
(S'\n__stdcall matchpathcon_init_prefix(char * path, char * prefix)\n'
p1066
V\u000aint matchpathcon_init_prefix(char *path,char *prefix)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1067
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1068
S'50\ne8 2a b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1069
S'.text:0000000000406af0\n.text:0000000000406af1\n.text:0000000000406af6\n.text:0000000000406afc\n.text:0000000000406b01\n.text:0000000000406b02\n'
p1070
tp1071
sS'strcpy'
p1072
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p1073
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_00611068)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1074
S'JMP qword ptr [0x00611068]\n'
p1075
S'ff 25 02 f4 20 00\n'
p1076
S'.plt:0000000000401c60\n'
p1077
tp1078
sS'xsum4'
p1079
(S'\n__stdcall xsum4(size_t size1, size_t size2, size_t size3, size_t size4)\n'
p1080
V\u000asize_t xsum4(size_t size1,size_t size2,size_t size3,size_t size4)\u000a\u000a{\u000a  size_t size1_00;\u000a  \u000a  size1_00 = xsum(size1,size2);\u000a  size1_00 = xsum(size1_00,size3);\u000a  size1_00 = xsum(size1_00,size4);\u000a  return size1_00;\u000a}\u000a\u000a
p1081
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV RBX,RDX\nCALL 0x0040ae10\nMOV RDI,RAX\nMOV RSI,RBX\nCALL 0x0040ae10\nMOV RDI,RAX\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x0040ae10\n'
p1082
S'41 56\n53\n50\n49 89 ce\n48 89 d3\ne8 b1 ff ff ff\n48 89 c7\n48 89 de\ne8 a6 ff ff ff\n48 89 c7\n4c 89 f6\n48 83 c4 08\n5b\n41 5e\neb 97\n'
p1083
S'.text:000000000040ae50\n.text:000000000040ae52\n.text:000000000040ae53\n.text:000000000040ae54\n.text:000000000040ae57\n.text:000000000040ae5a\n.text:000000000040ae5f\n.text:000000000040ae62\n.text:000000000040ae65\n.text:000000000040ae6a\n.text:000000000040ae6d\n.text:000000000040ae70\n.text:000000000040ae74\n.text:000000000040ae75\n.text:000000000040ae77\n'
p1084
tp1085
sS'get_stat_mtime_ns'
p1086
(S'\n__stdcall get_stat_mtime_ns(stat * st)\n'
p1087
V\u000along get_stat_mtime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_mtim).tv_nsec;\u000a}\u000a\u000a
p1088
S'MOV RAX,qword ptr [RDI + 0x60]\nRET\n'
p1089
S'48 8b 47 60\nc3\n'
p1090
S'.text:0000000000406b30\n.text:0000000000406b34\n'
p1091
tp1092
sS'xsum3'
p1093
(S'\n__stdcall xsum3(size_t size1, size_t size2, size_t size3)\n'
p1094
V\u000asize_t xsum3(size_t size1,size_t size2,size_t size3)\u000a\u000a{\u000a  size_t size1_00;\u000a  \u000a  size1_00 = xsum(size1,size2);\u000a  size1_00 = xsum(size1_00,size3);\u000a  return size1_00;\u000a}\u000a\u000a
p1095
S'PUSH RBX\nMOV RBX,RDX\nCALL 0x0040ae10\nMOV RDI,RAX\nMOV RSI,RBX\nPOP RBX\nJMP 0x0040ae10\n'
p1096
S'53\n48 89 d3\ne8 d7 ff ff ff\n48 89 c7\n48 89 de\n5b\neb ce\n'
p1097
S'.text:000000000040ae30\n.text:000000000040ae31\n.text:000000000040ae34\n.text:000000000040ae39\n.text:000000000040ae3c\n.text:000000000040ae3f\n.text:000000000040ae40\n'
p1098
tp1099
sS'get_stat_atime_ns'
p1100
(S'\n__stdcall get_stat_atime_ns(stat * st)\n'
p1101
V\u000along get_stat_atime_ns(stat *st)\u000a\u000a{\u000a  return (st->st_atim).tv_nsec;\u000a}\u000a\u000a
p1102
S'MOV RAX,qword ptr [RDI + 0x50]\nRET\n'
p1103
S'48 8b 47 50\nc3\n'
p1104
S'.text:0000000000406b10\n.text:0000000000406b14\n'
p1105
tp1106
sS'mdir_name'
p1107
(S'\n__stdcall mdir_name(char * file)\n'
p1108
V\u000achar * mdir_name(char *file)\u000a\u000a{\u000a  size_t __n;\u000a  char *__dest;\u000a  \u000a  __n = dir_len(file);\u000a  __dest = (char *)malloc(__n + 1 + (ulong)(__n == 0));\u000a  if (__dest == (char *)0x0) {\u000a    __dest = (char *)0x0;\u000a  }\u000a  else {\u000a    memcpy(__dest,file,__n);\u000a    if (__n == 0) {\u000a      *__dest = '.';\u000a      __n = 1;\u000a    }\u000a    __dest[__n] = 0;\u000a  }\u000a  return __dest;\u000a}\u000a\u000a
p1109
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RDI\nCALL 0x00404c10\nMOV RBX,RAX\nXOR EAX,EAX\nTEST RBX,RBX\nSETZ AL\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401f30\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00404c9e\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x00401ed0\nTEST RBX,RBX\nJNZ 0x00404c97\nMOV byte ptr [R14 + RBX*0x1],0x2e\nMOV EBX,0x1\nMOV byte ptr [R14 + RBX*0x1],0x0\nJMP 0x00404ca1\nXOR R14D,R14D\nMOV RAX,R14\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1110
S'41 57\n41 56\n53\n49 89 ff\ne8 b3 ff ff ff\n48 89 c3\n31 c0\n48 85 db\n0f 94 c0\n48 8d 7c 03 01\ne8 be d2 ff ff\n49 89 c6\n4d 85 f6\n74 24\n4c 89 f7\n4c 89 fe\n48 89 da\ne8 48 d2 ff ff\n48 85 db\n75 0a\n41 c6 04 1e 2e\nbb 01 00 00 00\n41 c6 04 1e 00\neb 03\n45 31 f6\n4c 89 f0\n5b\n41 5e\n41 5f\nc3\n'
p1111
S'.text:0000000000404c50\n.text:0000000000404c52\n.text:0000000000404c54\n.text:0000000000404c55\n.text:0000000000404c58\n.text:0000000000404c5d\n.text:0000000000404c60\n.text:0000000000404c62\n.text:0000000000404c65\n.text:0000000000404c68\n.text:0000000000404c6d\n.text:0000000000404c72\n.text:0000000000404c75\n.text:0000000000404c78\n.text:0000000000404c7a\n.text:0000000000404c7d\n.text:0000000000404c80\n.text:0000000000404c83\n.text:0000000000404c88\n.text:0000000000404c8b\n.text:0000000000404c8d\n.text:0000000000404c92\n.text:0000000000404c97\n.text:0000000000404c9c\n.text:0000000000404c9e\n.text:0000000000404ca1\n.text:0000000000404ca4\n.text:0000000000404ca5\n.text:0000000000404ca7\n.text:0000000000404ca9\n'
p1112
tp1113
sS'c_isgraph'
p1114
(S'\n__stdcall c_isgraph()\n'
p1115
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p1116
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p1117
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p1118
S'.text:0000000000409c20\n.text:0000000000409c23\n.text:0000000000409c26\n.text:0000000000409c29\n'
p1119
tp1120
sS'free_mount_entry'
p1121
(S'\n__stdcall free_mount_entry(mount_entry * me)\n'
p1122
V\u000avoid free_mount_entry(mount_entry *me)\u000a\u000a{\u000a  free(me->me_devname);\u000a  free(me->me_mountdir);\u000a  free(me->me_mntroot);\u000a  if ((*(byte *)&me->me_dummy_bitfield & 4) != 0) {\u000a    free(me->me_type);\u000a  }\u000a  free(me);\u000a  return;\u000a}\u000a\u000a
p1123
S'PUSH RBX\nMOV RBX,RDI\nMOV RDI,qword ptr [RBX]\nCALL 0x00401be0\nMOV RDI,qword ptr [RBX + 0x8]\nCALL 0x00401be0\nMOV RDI,qword ptr [RBX + 0x10]\nCALL 0x00401be0\nTEST byte ptr [RBX + 0x28],0x4\nJZ 0x004096cd\nMOV RDI,qword ptr [RBX + 0x18]\nCALL 0x00401be0\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401be0\n'
p1124
S'53\n48 89 fb\n48 8b 3b\ne8 34 85 ff ff\n48 8b 7b 08\ne8 2b 85 ff ff\n48 8b 7b 10\ne8 22 85 ff ff\nf6 43 28 04\n74 09\n48 8b 7b 18\ne8 13 85 ff ff\n48 89 df\n5b\ne9 0a 85 ff ff\n'
p1125
S'.text:00000000004096a0\n.text:00000000004096a1\n.text:00000000004096a4\n.text:00000000004096a7\n.text:00000000004096ac\n.text:00000000004096b0\n.text:00000000004096b5\n.text:00000000004096b9\n.text:00000000004096be\n.text:00000000004096c2\n.text:00000000004096c4\n.text:00000000004096c8\n.text:00000000004096cd\n.text:00000000004096d0\n.text:00000000004096d1\n'
p1126
tp1127
sS'quotearg_buffer_restyled'
p1128
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p1129
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_0040522c_caseD_7;\u000a  case 2:\u000a    goto switchD_0040522c_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_0040522c_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_0040522c_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_0040522c_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_0040522c_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_0040522c_caseD_7;\u000aswitchD_0040522c_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_0040522c_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_0040522c_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_00405cf0;\u000aLAB_00405410:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_00405cf9:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_00405d08:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_0040541b:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_0040545f:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_0040545f;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_00405d08;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_00405c35;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x00405b40;\u000a    }\u000a    goto LAB_00405d08;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_00405c6a;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_00405d08;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_00405c99;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00405758;\u000a  case '\u005ca':\u000a    goto joined_r0x00405648;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x00405648;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_00405476_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x00405648;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x00405648;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_00405476_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x00405648:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_00405bae;\u000a    }\u000a    goto LAB_00405d08;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_00405d08;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_00405d08;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_00405d08;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_00405d08;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_00405d08;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_00405476_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00405c06;\u000a      goto joined_r0x00405bf8;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00405701:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00405bf8;\u000a      goto LAB_00405c06;\u000a    }\u000a    goto LAB_00405d08;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_00405d08;\u000a  }\u000a  goto joined_r0x00405b40;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_00405c6a:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_00405c99;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_00405c99:\u000a  if (1 < uVar10) {\u000aLAB_00405776:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_00405832;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00405701;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_00405832:\u000a        if (bVar6 != 0) goto LAB_00405d08;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00405758:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_00405776;\u000ajoined_r0x00405b40:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x00405b40:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_00405b67;\u000aLAB_00405ba0:\u000a    if (bVar22) goto LAB_00405ba5;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_00405ba0;\u000aLAB_00405b67:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_00405ba5:\u000a      if (bVar6 != 0) goto LAB_00405d08;\u000aLAB_00405bae:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00405bf8;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00405c06:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00405bf8:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_00405c35:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_00405410;\u000aLAB_00405cf0:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_00405cf9;\u000a  goto LAB_0040541b;\u000a}\u000a\u000a
p1130
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401d20\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00405dd5\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x40cd90 + RAX*0x8]\nMOV EDI,0x40d2b6\nMOV ESI,R15D\nCALL 0x00406480\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x40dab6\nMOV ESI,R15D\nCALL 0x00406480\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x0040528d\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x00405290\nNOP\nCMP R12,RSI\nJNC 0x0040527e\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x00405270\nJMP 0x00405290\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401d30\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x0040535c\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x0040535c\nMOV ECX,0x40d2b4\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x00405356\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x004052f7\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x00405324\nTEST RSI,RSI\nJZ 0x00405311\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x40dab6\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x00405332\nMOV ECX,0x40dab6\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x0040535c\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x00405dac\nMOV ECX,0x40d2b4\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x00405cf0\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x00405cf9\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x0040545f\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x0040545a\nCMP R11,-0x1\nJNZ 0x0040545a\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401d30\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x004054b0\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x0040570c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x40cde8 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x00405d08\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x00405b60\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x00405b67\nJMP 0x00405ba0\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x00401e60\nTEST EAX,EAX\nSETZ AL\nJNZ 0x004054fd\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00405461\nJMP 0x00405d08\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00405461\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x0040548b\nCMP EBX,0x2\nJNZ 0x0040548b\nTEST R13,R13\nJNZ 0x0040548b\nJMP 0x00405d08\nCMP R11,-0x1\nJZ 0x004058e3\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00405903\nJMP 0x0040548b\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405914\nTEST R8B,R8B\nJNZ 0x00405d08\nCMP EBX,0x2\nJNZ 0x004055b8\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x004055b8\nCMP R12,RSI\nJNC 0x00405593\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004055a2\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004055b1\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x004055c2\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x00405a88\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x00405a88\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x00405a88\nCMP RCX,RSI\nJNC 0x004055fc\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x0040560b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405496\nJMP 0x00405b60\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405489\nJMP 0x0040566a\nMOV DL,0x74\nJMP 0x00405652\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405489\nJMP 0x0040566a\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405489\nJMP 0x0040566a\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x00405d08\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405489\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x00405bae\nJMP 0x00405d08\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x00405489\nTEST R8B,R8B\nJNZ 0x00405d08\nCMP R12,RSI\nJNC 0x0040569a\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004056a9\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004056b8\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x00405489\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x00405a9b\nCMP EBX,0x2\nJNZ 0x00405489\nTEST R8B,R8B\nJZ 0x00405489\nJMP 0x00405d08\nCMP EBX,0x2\nJNZ 0x00405934\nTEST R8B,R8B\nJNZ 0x00405d08\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00405c06\nJMP 0x00405c29\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x00405955\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x00402170\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00405b48\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x00405b48\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x00405832\nJMP 0x00405800\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x004057e9\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x004057e6\nCMP R12,RSI\nJNC 0x004057cb\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x004057da\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x00405820\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x00405820\nTEST BPL,0x1\nJZ 0x004058c3\nCMP R12,RSI\nJNC 0x00405814\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x004058c3\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00405800\nTEST R8B,R8B\nJNZ 0x00405d08\nCMP EBX,0x2\nJNZ 0x0040587a\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x0040587a\nCMP R12,RSI\nJNC 0x00405852\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405861\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405870\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x00405884\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x0040589b\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004058b5\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x004057b0\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00405c06\nJMP 0x00405c29\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x0040548b\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x0040548b\nJMP 0x00405d08\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x00405c35\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405496\nJMP 0x00405b60\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00405652\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00405c06\nJMP 0x00405c29\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x00405977\nMOV RDI,R10\nCALL 0x00401d30\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x00401d80\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00405c4f\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x00405c47\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00405c56\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x00405a3e\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x00405a36\nBT RDI,RDX\nJC 0x00405da2\nINC RCX\nCMP RCX,R14\nJC 0x00405a20\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x00402120\nTEST EAX,EAX\nJNZ 0x00405a53\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x00402110\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00405995\nJMP 0x00405c99\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405496\nJMP 0x00405b60\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x00405489\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x00405489\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x00405489\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x0040548b\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00405cd2\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x00405d08\nCMP R12,RSI\nJNC 0x00405afe\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x00405b11\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405b20\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x00405b2f\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405496\nJMP 0x00405b60\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405496\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x00405ba0\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x00405ba5\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00405c00\nJMP 0x00405ba5\nTEST BPL,BPL\nJZ 0x00405c00\nTEST R8B,R8B\nJNZ 0x00405d08\nCMP EBX,0x2\nJNZ 0x00405be8\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00405be8\nCMP R12,RSI\nJNC 0x00405bc3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405bd2\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00405be1\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00405bf2\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x00405c32\nJMP 0x00405c2e\nTEST DIL,0x1\nJZ 0x00405c29\nAND AL,0x1\nJNZ 0x00405c29\nCMP R12,RSI\nJNC 0x00405c14\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00405c23\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x00405c32\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x00405cf0\nJMP 0x00405410\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x00405c94\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x00405c8c\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x00405cc8\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x00405c6a\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00405c99\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00405758\nJMP 0x00405776\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00405c99\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00405496\nJMP 0x00405b60\nCMP R13,R11\nJNZ 0x0040541b\nTEST R8B,R8B\nJZ 0x00405d62\nCMP EBX,0x2\nJNZ 0x00405d62\nTEST R12,R12\nJNZ 0x00405d62\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x004051a0\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x00405d96\nTEST R8B,R8B\nJNZ 0x00405d96\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x00405d96\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x00405d89\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x00405d80\nCMP R12,RSI\nJNC 0x00405d4d\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x00405d4d\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x00405d08\nTEST RSI,RSI\nJZ 0x00405db9\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x40d2b4\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x0040535c\nCALL 0x00401c10\n'
p1131
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 52 cb ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 90 cd 40 00\nbf b6 d2 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf b6 da 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 93 ca ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 b4 d2 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 b6 da 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 b6 da 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 b4 d2 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 f3 c8 ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd e8 cd 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 97 c9 ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 47 ca ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 c1 c3 ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 c3 c3 ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 d9 c6 ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 a2 c6 ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 b4 d2 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 36 be ff ff\n'
p1132
S'.text:00000000004051a0\n.text:00000000004051a1\n.text:00000000004051a3\n.text:00000000004051a5\n.text:00000000004051a7\n.text:00000000004051a9\n.text:00000000004051aa\n.text:00000000004051b1\n.text:00000000004051b4\n.text:00000000004051b7\n.text:00000000004051ba\n.text:00000000004051bf\n.text:00000000004051c4\n.text:00000000004051c9\n.text:00000000004051ce\n.text:00000000004051d6\n.text:00000000004051da\n.text:00000000004051e0\n.text:00000000004051e8\n.text:00000000004051ed\n.text:00000000004051f5\n.text:00000000004051fa\n.text:00000000004051fe\n.text:0000000000405200\n.text:0000000000405203\n.text:0000000000405206\n.text:0000000000405209\n.text:000000000040520e\n.text:0000000000405211\n.text:0000000000405214\n.text:0000000000405217\n.text:000000000040521a\n.text:000000000040521c\n.text:000000000040521f\n.text:0000000000405224\n.text:0000000000405227\n.text:000000000040522c\n.text:0000000000405233\n.text:0000000000405238\n.text:000000000040523b\n.text:0000000000405240\n.text:0000000000405245\n.text:000000000040524a\n.text:000000000040524d\n.text:0000000000405252\n.text:0000000000405257\n.text:000000000040525c\n.text:000000000040525e\n.text:0000000000405260\n.text:0000000000405265\n.text:0000000000405267\n.text:000000000040526a\n.text:000000000040526c\n.text:000000000040526e\n.text:0000000000405270\n.text:0000000000405273\n.text:0000000000405275\n.text:000000000040527a\n.text:000000000040527e\n.text:0000000000405284\n.text:0000000000405287\n.text:0000000000405289\n.text:000000000040528b\n.text:000000000040528d\n.text:0000000000405290\n.text:0000000000405295\n.text:0000000000405298\n.text:000000000040529d\n.text:00000000004052a2\n.text:00000000004052a5\n.text:00000000004052a8\n.text:00000000004052ab\n.text:00000000004052ae\n.text:00000000004052b3\n.text:00000000004052b6\n.text:00000000004052b9\n.text:00000000004052be\n.text:00000000004052c1\n.text:00000000004052c3\n.text:00000000004052c6\n.text:00000000004052c8\n.text:00000000004052ca\n.text:00000000004052cd\n.text:00000000004052d2\n.text:00000000004052d7\n.text:00000000004052dc\n.text:00000000004052df\n.text:00000000004052e5\n.text:00000000004052e7\n.text:00000000004052ea\n.text:00000000004052ed\n.text:00000000004052f0\n.text:00000000004052f2\n.text:00000000004052f4\n.text:00000000004052f7\n.text:00000000004052fa\n.text:00000000004052ff\n.text:0000000000405302\n.text:0000000000405304\n.text:0000000000405307\n.text:0000000000405309\n.text:000000000040530e\n.text:0000000000405311\n.text:0000000000405316\n.text:000000000040531c\n.text:0000000000405322\n.text:0000000000405324\n.text:0000000000405329\n.text:000000000040532f\n.text:0000000000405332\n.text:0000000000405335\n.text:0000000000405338\n.text:000000000040533a\n.text:000000000040533f\n.text:0000000000405342\n.text:0000000000405348\n.text:000000000040534d\n.text:0000000000405353\n.text:0000000000405356\n.text:0000000000405359\n.text:000000000040535c\n.text:0000000000405364\n.text:0000000000405366\n.text:0000000000405368\n.text:000000000040536b\n.text:000000000040536f\n.text:0000000000405371\n.text:0000000000405374\n.text:0000000000405378\n.text:000000000040537a\n.text:000000000040537d\n.text:0000000000405380\n.text:0000000000405383\n.text:0000000000405385\n.text:0000000000405389\n.text:000000000040538b\n.text:000000000040538f\n.text:0000000000405392\n.text:0000000000405395\n.text:0000000000405398\n.text:000000000040539a\n.text:000000000040539e\n.text:00000000004053a7\n.text:00000000004053aa\n.text:00000000004053ac\n.text:00000000004053b0\n.text:00000000004053b2\n.text:00000000004053b6\n.text:00000000004053b8\n.text:00000000004053bb\n.text:00000000004053bf\n.text:00000000004053c1\n.text:00000000004053c4\n.text:00000000004053c8\n.text:00000000004053cd\n.text:00000000004053d0\n.text:00000000004053d4\n.text:00000000004053dc\n.text:00000000004053df\n.text:00000000004053e2\n.text:00000000004053e4\n.text:00000000004053e8\n.text:00000000004053eb\n.text:00000000004053ed\n.text:00000000004053f2\n.text:00000000004053f6\n.text:00000000004053fb\n.text:0000000000405400\n.text:0000000000405404\n.text:000000000040540a\n.text:0000000000405410\n.text:0000000000405415\n.text:000000000040541b\n.text:0000000000405420\n.text:0000000000405422\n.text:0000000000405427\n.text:000000000040542b\n.text:000000000040542d\n.text:0000000000405431\n.text:0000000000405433\n.text:0000000000405435\n.text:0000000000405438\n.text:000000000040543d\n.text:000000000040543f\n.text:0000000000405444\n.text:0000000000405449\n.text:000000000040544d\n.text:0000000000405452\n.text:0000000000405457\n.text:000000000040545a\n.text:000000000040545d\n.text:000000000040545f\n.text:0000000000405461\n.text:0000000000405466\n.text:000000000040546a\n.text:0000000000405470\n.text:0000000000405472\n.text:0000000000405474\n.text:0000000000405476\n.text:000000000040547e\n.text:0000000000405483\n.text:0000000000405489\n.text:000000000040548b\n.text:0000000000405490\n.text:0000000000405496\n.text:000000000040549f\n.text:00000000004054a5\n.text:00000000004054b0\n.text:00000000004054b2\n.text:00000000004054b5\n.text:00000000004054b9\n.text:00000000004054c1\n.text:00000000004054c4\n.text:00000000004054c9\n.text:00000000004054cb\n.text:00000000004054ce\n.text:00000000004054d0\n.text:00000000004054d5\n.text:00000000004054d8\n.text:00000000004054dd\n.text:00000000004054e0\n.text:00000000004054e5\n.text:00000000004054e9\n.text:00000000004054ee\n.text:00000000004054f0\n.text:00000000004054f2\n.text:00000000004054f8\n.text:00000000004054fd\n.text:0000000000405502\n.text:0000000000405505\n.text:000000000040550a\n.text:000000000040550e\n.text:0000000000405513\n.text:0000000000405518\n.text:000000000040551a\n.text:000000000040551c\n.text:0000000000405521\n.text:0000000000405523\n.text:0000000000405526\n.text:000000000040552c\n.text:000000000040552f\n.text:0000000000405535\n.text:0000000000405538\n.text:000000000040553e\n.text:0000000000405543\n.text:0000000000405547\n.text:000000000040554d\n.text:0000000000405550\n.text:0000000000405553\n.text:0000000000405557\n.text:000000000040555a\n.text:000000000040555c\n.text:000000000040555f\n.text:0000000000405565\n.text:000000000040556a\n.text:000000000040556f\n.text:0000000000405575\n.text:0000000000405578\n.text:000000000040557e\n.text:0000000000405581\n.text:0000000000405583\n.text:0000000000405585\n.text:0000000000405587\n.text:0000000000405589\n.text:000000000040558c\n.text:000000000040558e\n.text:0000000000405593\n.text:0000000000405598\n.text:000000000040559b\n.text:000000000040559d\n.text:00000000004055a2\n.text:00000000004055a7\n.text:00000000004055aa\n.text:00000000004055ac\n.text:00000000004055b1\n.text:00000000004055b5\n.text:00000000004055b8\n.text:00000000004055bb\n.text:00000000004055bd\n.text:00000000004055c2\n.text:00000000004055c7\n.text:00000000004055c9\n.text:00000000004055cc\n.text:00000000004055cf\n.text:00000000004055d5\n.text:00000000004055d9\n.text:00000000004055dc\n.text:00000000004055e2\n.text:00000000004055e6\n.text:00000000004055e9\n.text:00000000004055ec\n.text:00000000004055f2\n.text:00000000004055f5\n.text:00000000004055f7\n.text:00000000004055fc\n.text:0000000000405601\n.text:0000000000405604\n.text:0000000000405606\n.text:000000000040560b\n.text:000000000040560f\n.text:0000000000405614\n.text:000000000040561a\n.text:000000000040561f\n.text:0000000000405621\n.text:0000000000405626\n.text:000000000040562c\n.text:000000000040562e\n.text:0000000000405630\n.text:0000000000405632\n.text:0000000000405634\n.text:0000000000405639\n.text:000000000040563f\n.text:0000000000405641\n.text:0000000000405643\n.text:0000000000405648\n.text:000000000040564e\n.text:0000000000405650\n.text:0000000000405652\n.text:0000000000405657\n.text:0000000000405659\n.text:000000000040565f\n.text:0000000000405664\n.text:000000000040566a\n.text:000000000040566d\n.text:0000000000405670\n.text:0000000000405676\n.text:000000000040567b\n.text:000000000040567e\n.text:0000000000405681\n.text:0000000000405687\n.text:000000000040568a\n.text:0000000000405690\n.text:0000000000405693\n.text:0000000000405695\n.text:000000000040569a\n.text:000000000040569f\n.text:00000000004056a2\n.text:00000000004056a4\n.text:00000000004056a9\n.text:00000000004056ae\n.text:00000000004056b1\n.text:00000000004056b3\n.text:00000000004056b8\n.text:00000000004056bc\n.text:00000000004056be\n.text:00000000004056c3\n.text:00000000004056c6\n.text:00000000004056c9\n.text:00000000004056cf\n.text:00000000004056d2\n.text:00000000004056d8\n.text:00000000004056db\n.text:00000000004056e1\n.text:00000000004056e6\n.text:00000000004056e9\n.text:00000000004056ef\n.text:00000000004056f2\n.text:00000000004056f8\n.text:00000000004056fb\n.text:00000000004056fd\n.text:0000000000405701\n.text:0000000000405707\n.text:000000000040570c\n.text:0000000000405710\n.text:0000000000405719\n.text:000000000040571f\n.text:0000000000405724\n.text:0000000000405729\n.text:000000000040572e\n.text:0000000000405731\n.text:0000000000405736\n.text:0000000000405739\n.text:000000000040573c\n.text:0000000000405741\n.text:0000000000405746\n.text:000000000040574a\n.text:000000000040574f\n.text:0000000000405754\n.text:0000000000405758\n.text:000000000040575a\n.text:000000000040575f\n.text:0000000000405765\n.text:0000000000405768\n.text:000000000040576a\n.text:000000000040576d\n.text:0000000000405770\n.text:0000000000405776\n.text:000000000040577b\n.text:000000000040577e\n.text:0000000000405781\n.text:0000000000405784\n.text:0000000000405787\n.text:0000000000405789\n.text:000000000040578d\n.text:000000000040578f\n.text:0000000000405794\n.text:0000000000405799\n.text:000000000040579f\n.text:00000000004057b0\n.text:00000000004057b5\n.text:00000000004057b7\n.text:00000000004057ba\n.text:00000000004057bc\n.text:00000000004057bf\n.text:00000000004057c1\n.text:00000000004057c4\n.text:00000000004057c6\n.text:00000000004057cb\n.text:00000000004057d0\n.text:00000000004057d3\n.text:00000000004057d5\n.text:00000000004057da\n.text:00000000004057de\n.text:00000000004057e6\n.text:00000000004057e9\n.text:00000000004057ec\n.text:00000000004057ee\n.text:00000000004057f2\n.text:0000000000405800\n.text:0000000000405804\n.text:000000000040580a\n.text:000000000040580d\n.text:000000000040580f\n.text:0000000000405814\n.text:0000000000405817\n.text:0000000000405819\n.text:0000000000405820\n.text:0000000000405823\n.text:0000000000405828\n.text:000000000040582b\n.text:0000000000405830\n.text:0000000000405832\n.text:0000000000405835\n.text:000000000040583b\n.text:000000000040583e\n.text:0000000000405840\n.text:0000000000405844\n.text:0000000000405846\n.text:0000000000405848\n.text:000000000040584b\n.text:000000000040584d\n.text:0000000000405852\n.text:0000000000405857\n.text:000000000040585a\n.text:000000000040585c\n.text:0000000000405861\n.text:0000000000405866\n.text:0000000000405869\n.text:000000000040586b\n.text:0000000000405870\n.text:0000000000405874\n.text:0000000000405876\n.text:000000000040587a\n.text:000000000040587d\n.text:000000000040587f\n.text:0000000000405884\n.text:0000000000405889\n.text:000000000040588c\n.text:000000000040588e\n.text:0000000000405891\n.text:0000000000405894\n.text:0000000000405897\n.text:000000000040589b\n.text:00000000004058a0\n.text:00000000004058a3\n.text:00000000004058a5\n.text:00000000004058a8\n.text:00000000004058ab\n.text:00000000004058ae\n.text:00000000004058b1\n.text:00000000004058b5\n.text:00000000004058b9\n.text:00000000004058bd\n.text:00000000004058c1\n.text:00000000004058c3\n.text:00000000004058c7\n.text:00000000004058ca\n.text:00000000004058d0\n.text:00000000004058d4\n.text:00000000004058d8\n.text:00000000004058de\n.text:00000000004058e3\n.text:00000000004058e6\n.text:00000000004058e9\n.text:00000000004058ee\n.text:00000000004058f1\n.text:00000000004058f3\n.text:00000000004058f6\n.text:00000000004058fd\n.text:0000000000405903\n.text:0000000000405905\n.text:0000000000405909\n.text:000000000040590f\n.text:0000000000405914\n.text:0000000000405919\n.text:000000000040591f\n.text:0000000000405922\n.text:0000000000405924\n.text:0000000000405929\n.text:000000000040592f\n.text:0000000000405934\n.text:0000000000405936\n.text:000000000040593b\n.text:0000000000405941\n.text:0000000000405943\n.text:0000000000405946\n.text:000000000040594a\n.text:0000000000405950\n.text:0000000000405955\n.text:0000000000405961\n.text:0000000000405965\n.text:0000000000405967\n.text:000000000040596a\n.text:000000000040596f\n.text:0000000000405974\n.text:0000000000405977\n.text:000000000040597b\n.text:0000000000405980\n.text:0000000000405982\n.text:0000000000405986\n.text:0000000000405988\n.text:0000000000405990\n.text:0000000000405995\n.text:000000000040599a\n.text:000000000040599e\n.text:00000000004059a2\n.text:00000000004059aa\n.text:00000000004059ad\n.text:00000000004059b2\n.text:00000000004059b5\n.text:00000000004059b8\n.text:00000000004059bd\n.text:00000000004059c0\n.text:00000000004059c3\n.text:00000000004059c9\n.text:00000000004059cd\n.text:00000000004059d7\n.text:00000000004059dd\n.text:00000000004059e1\n.text:00000000004059e6\n.text:00000000004059ec\n.text:00000000004059f0\n.text:00000000004059f3\n.text:00000000004059f7\n.text:00000000004059f9\n.text:00000000004059fe\n.text:0000000000405a03\n.text:0000000000405a07\n.text:0000000000405a09\n.text:0000000000405a0e\n.text:0000000000405a13\n.text:0000000000405a17\n.text:0000000000405a1c\n.text:0000000000405a20\n.text:0000000000405a24\n.text:0000000000405a27\n.text:0000000000405a2a\n.text:0000000000405a2c\n.text:0000000000405a30\n.text:0000000000405a36\n.text:0000000000405a39\n.text:0000000000405a3c\n.text:0000000000405a3e\n.text:0000000000405a42\n.text:0000000000405a47\n.text:0000000000405a49\n.text:0000000000405a4b\n.text:0000000000405a53\n.text:0000000000405a58\n.text:0000000000405a5b\n.text:0000000000405a63\n.text:0000000000405a66\n.text:0000000000405a69\n.text:0000000000405a6e\n.text:0000000000405a71\n.text:0000000000405a73\n.text:0000000000405a78\n.text:0000000000405a7d\n.text:0000000000405a83\n.text:0000000000405a88\n.text:0000000000405a8b\n.text:0000000000405a90\n.text:0000000000405a96\n.text:0000000000405a9b\n.text:0000000000405aa0\n.text:0000000000405aa6\n.text:0000000000405aaa\n.text:0000000000405aad\n.text:0000000000405ab3\n.text:0000000000405ab9\n.text:0000000000405abf\n.text:0000000000405ac4\n.text:0000000000405ac6\n.text:0000000000405ac9\n.text:0000000000405acf\n.text:0000000000405ad3\n.text:0000000000405ad5\n.text:0000000000405adf\n.text:0000000000405ae3\n.text:0000000000405ae9\n.text:0000000000405aec\n.text:0000000000405aee\n.text:0000000000405af4\n.text:0000000000405af7\n.text:0000000000405af9\n.text:0000000000405afe\n.text:0000000000405b03\n.text:0000000000405b06\n.text:0000000000405b0a\n.text:0000000000405b0c\n.text:0000000000405b11\n.text:0000000000405b16\n.text:0000000000405b19\n.text:0000000000405b1b\n.text:0000000000405b20\n.text:0000000000405b25\n.text:0000000000405b28\n.text:0000000000405b2a\n.text:0000000000405b2f\n.text:0000000000405b33\n.text:0000000000405b35\n.text:0000000000405b38\n.text:0000000000405b3b\n.text:0000000000405b40\n.text:0000000000405b46\n.text:0000000000405b48\n.text:0000000000405b4d\n.text:0000000000405b52\n.text:0000000000405b58\n.text:0000000000405b60\n.text:0000000000405b65\n.text:0000000000405b67\n.text:0000000000405b6c\n.text:0000000000405b6f\n.text:0000000000405b71\n.text:0000000000405b74\n.text:0000000000405b76\n.text:0000000000405b79\n.text:0000000000405b7c\n.text:0000000000405b7f\n.text:0000000000405b81\n.text:0000000000405b89\n.text:0000000000405b8c\n.text:0000000000405b8e\n.text:0000000000405b90\n.text:0000000000405ba0\n.text:0000000000405ba3\n.text:0000000000405ba5\n.text:0000000000405ba8\n.text:0000000000405bae\n.text:0000000000405bb1\n.text:0000000000405bb3\n.text:0000000000405bb5\n.text:0000000000405bb7\n.text:0000000000405bb9\n.text:0000000000405bbc\n.text:0000000000405bbe\n.text:0000000000405bc3\n.text:0000000000405bc8\n.text:0000000000405bcb\n.text:0000000000405bcd\n.text:0000000000405bd2\n.text:0000000000405bd7\n.text:0000000000405bda\n.text:0000000000405bdc\n.text:0000000000405be1\n.text:0000000000405be5\n.text:0000000000405be8\n.text:0000000000405beb\n.text:0000000000405bed\n.text:0000000000405bf2\n.text:0000000000405bf5\n.text:0000000000405bf8\n.text:0000000000405bfa\n.text:0000000000405c00\n.text:0000000000405c04\n.text:0000000000405c06\n.text:0000000000405c08\n.text:0000000000405c0a\n.text:0000000000405c0d\n.text:0000000000405c0f\n.text:0000000000405c14\n.text:0000000000405c19\n.text:0000000000405c1c\n.text:0000000000405c1e\n.text:0000000000405c23\n.text:0000000000405c27\n.text:0000000000405c29\n.text:0000000000405c2c\n.text:0000000000405c2e\n.text:0000000000405c32\n.text:0000000000405c35\n.text:0000000000405c38\n.text:0000000000405c3c\n.text:0000000000405c42\n.text:0000000000405c47\n.text:0000000000405c4f\n.text:0000000000405c54\n.text:0000000000405c56\n.text:0000000000405c5e\n.text:0000000000405c63\n.text:0000000000405c65\n.text:0000000000405c6a\n.text:0000000000405c6f\n.text:0000000000405c73\n.text:0000000000405c75\n.text:0000000000405c7a\n.text:0000000000405c7d\n.text:0000000000405c80\n.text:0000000000405c82\n.text:0000000000405c8a\n.text:0000000000405c8c\n.text:0000000000405c94\n.text:0000000000405c99\n.text:0000000000405c9d\n.text:0000000000405ca2\n.text:0000000000405ca7\n.text:0000000000405cab\n.text:0000000000405cb0\n.text:0000000000405cb5\n.text:0000000000405cb9\n.text:0000000000405cbd\n.text:0000000000405cc3\n.text:0000000000405cc8\n.text:0000000000405cd0\n.text:0000000000405cd2\n.text:0000000000405cd4\n.text:0000000000405cd8\n.text:0000000000405cdd\n.text:0000000000405ce3\n.text:0000000000405cf0\n.text:0000000000405cf3\n.text:0000000000405cf9\n.text:0000000000405cfc\n.text:0000000000405cfe\n.text:0000000000405d01\n.text:0000000000405d03\n.text:0000000000405d06\n.text:0000000000405d08\n.text:0000000000405d10\n.text:0000000000405d16\n.text:0000000000405d1a\n.text:0000000000405d1d\n.text:0000000000405d21\n.text:0000000000405d26\n.text:0000000000405d2a\n.text:0000000000405d2e\n.text:0000000000405d31\n.text:0000000000405d34\n.text:0000000000405d37\n.text:0000000000405d3b\n.text:0000000000405d3f\n.text:0000000000405d41\n.text:0000000000405d46\n.text:0000000000405d4a\n.text:0000000000405d4d\n.text:0000000000405d50\n.text:0000000000405d57\n.text:0000000000405d58\n.text:0000000000405d5a\n.text:0000000000405d5c\n.text:0000000000405d5e\n.text:0000000000405d60\n.text:0000000000405d61\n.text:0000000000405d62\n.text:0000000000405d6a\n.text:0000000000405d6d\n.text:0000000000405d6f\n.text:0000000000405d72\n.text:0000000000405d74\n.text:0000000000405d76\n.text:0000000000405d78\n.text:0000000000405d7a\n.text:0000000000405d7d\n.text:0000000000405d80\n.text:0000000000405d83\n.text:0000000000405d85\n.text:0000000000405d89\n.text:0000000000405d8c\n.text:0000000000405d8f\n.text:0000000000405d92\n.text:0000000000405d94\n.text:0000000000405d96\n.text:0000000000405d99\n.text:0000000000405d9b\n.text:0000000000405da0\n.text:0000000000405da2\n.text:0000000000405da7\n.text:0000000000405dac\n.text:0000000000405daf\n.text:0000000000405db1\n.text:0000000000405db6\n.text:0000000000405db9\n.text:0000000000405dbe\n.text:0000000000405dc1\n.text:0000000000405dc7\n.text:0000000000405dcd\n.text:0000000000405dd0\n.text:0000000000405dd5\n'
p1133
tp1134
sS'getgrgid'
p1135
(S'\n__stdcall getgrgid(__gid_t __gid)\n'
p1136
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000agroup * getgrgid(__gid_t __gid)\u000a\u000a{\u000a  group *pgVar1;\u000a  \u000a  pgVar1 = (group *)(*(code *)PTR_getgrgid_00611108)();\u000a  return pgVar1;\u000a}\u000a\u000a
p1137
S'JMP qword ptr [0x00611108]\n'
p1138
S'ff 25 62 f3 20 00\n'
p1139
S'.plt:0000000000401da0\n'
p1140
tp1141
sS'set_quoting_style'
p1142
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p1143
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p1144
S'TEST RDI,RDI\nMOV EAX,0x611480\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p1145
S'48 85 ff\nb8 80 14 61 00\n48 0f 45 c7\n89 30\nc3\n'
p1146
S'.text:0000000000405080\n.text:0000000000405083\n.text:0000000000405088\n.text:000000000040508c\n.text:000000000040508e\n'
p1147
tp1148
sS'textdomain'
p1149
(S'\n__stdcall textdomain()\n'
p1150
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_006110a0)();\u000a  return;\u000a}\u000a\u000a
p1151
S'JMP qword ptr [0x006110a0]\n'
p1152
S'ff 25 ca f3 20 00\n'
p1153
S'.plt:0000000000401cd0\n'
p1154
tp1155
sS'tzfree'
p1156
(S'\n__stdcall tzfree(timezone_t tz)\n'
p1157
V\u000avoid tzfree(timezone_t tz)\u000a\u000a{\u000a  tm_zone *ptVar1;\u000a  \u000a  if ((timezone_t)0x1 < tz) {\u000a    do {\u000a      ptVar1 = tz->next;\u000a      free(tz);\u000a      tz = (timezone_t)ptVar1;\u000a    } while (ptVar1 != (tm_zone *)0x0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p1158
S'PUSH RBX\nCMP RDI,0x2\nJC 0x00409790\nNOP word ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [RDI]\nCALL 0x00401be0\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x00409780\nPOP RBX\nRET\n'
p1159
S'53\n48 83 ff 02\n72 19\n66 0f 1f 84 00 00 00 00 00\n48 8b 1f\ne8 58 84 ff ff\n48 85 db\n48 89 df\n75 f0\n5b\nc3\n'
p1160
S'.text:0000000000409770\n.text:0000000000409771\n.text:0000000000409775\n.text:0000000000409777\n.text:0000000000409780\n.text:0000000000409783\n.text:0000000000409788\n.text:000000000040978b\n.text:000000000040978e\n.text:0000000000409790\n.text:0000000000409791\n'
p1161
tp1162
sS'xmemdup'
p1163
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p1164
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p1165
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x00408970\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401ed0\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1166
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 fc 93 ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1167
S'.text:0000000000408ab0\n.text:0000000000408ab2\n.text:0000000000408ab4\n.text:0000000000408ab5\n.text:0000000000408ab8\n.text:0000000000408abb\n.text:0000000000408abe\n.text:0000000000408ac3\n.text:0000000000408ac6\n.text:0000000000408ac9\n.text:0000000000408acc\n.text:0000000000408acf\n.text:0000000000408ad4\n.text:0000000000408ad7\n.text:0000000000408ad8\n.text:0000000000408ada\n.text:0000000000408adc\n'
p1168
tp1169
sS'change_env'
p1170
(S'\n__stdcall change_env(timezone_t tz)\n'
p1171
V\u000a_Bool change_env(timezone_t tz)\u000a\u000a{\u000a  int iVar1;\u000a  char *tz_00;\u000a  \u000a  tz_00 = tz->abbrs;\u000a  if (tz->tz_is_set == 0) {\u000a    tz_00 = (char *)0x0;\u000a  }\u000a  iVar1 = setenv_TZ(tz_00);\u000a  if (iVar1 == 0) {\u000a    tzset();\u000a  }\u000a  return (_Bool)(iVar1 == 0);\u000a}\u000a\u000a
p1172
S'PUSH RBX\nXOR EBX,EBX\nCMP byte ptr [RDI + 0x8],0x0\nLEA RDI,[RDI + 0x9]\nCMOVZ RDI,RBX\nCALL 0x00409b50\nTEST EAX,EAX\nJNZ 0x00409b3f\nCALL 0x00401ef0\nMOV BL,0x1\nMOV EAX,EBX\nPOP RBX\nRET\n'
p1173
S'53\n31 db\n80 7f 08 00\n48 8d 7f 09\n48 0f 44 fb\ne8 1c 00 00 00\n85 c0\n75 07\ne8 b3 83 ff ff\nb3 01\n89 d8\n5b\nc3\n'
p1174
S'.text:0000000000409b20\n.text:0000000000409b21\n.text:0000000000409b23\n.text:0000000000409b27\n.text:0000000000409b2b\n.text:0000000000409b2f\n.text:0000000000409b34\n.text:0000000000409b36\n.text:0000000000409b38\n.text:0000000000409b3d\n.text:0000000000409b3f\n.text:0000000000409b41\n.text:0000000000409b42\n'
p1175
tp1176
sS'time_t_avg'
p1177
(S'\n__stdcall time_t_avg(time_t a, time_t b)\n'
p1178
V\u000atime_t time_t_avg(time_t a,time_t b)\u000a\u000a{\u000a  return (ulong)((uint)a & (uint)b & 1) + (b >> 1) + (a >> 1);\u000a}\u000a\u000a
p1179
S'MOV RAX,RDI\nSAR RAX,1\nAND EDI,ESI\nSAR RSI,1\nLEA RAX,[RSI + RAX*0x1]\nAND EDI,0x1\nADD RDI,RAX\nMOV RAX,RDI\nRET\n'
p1180
S'48 89 f8\n48 d1 f8\n21 f7\n48 d1 fe\n48 8d 04 06\n83 e7 01\n48 01 c7\n48 89 f8\nc3\n'
p1181
S'.text:000000000040ade0\n.text:000000000040ade3\n.text:000000000040ade6\n.text:000000000040ade8\n.text:000000000040adeb\n.text:000000000040adef\n.text:000000000040adf2\n.text:000000000040adf5\n.text:000000000040adf8\n'
p1182
tp1183
sS'nstrftime'
p1184
(S'\n__stdcall nstrftime(char * s, size_t maxsize, char * format, tm * tp, timezone_t tz)\n'
p1185
V\u000asize_t nstrftime(char *s,size_t maxsize,char *format,tm *tp,timezone_t tz)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strftime_case_((char *)0x0,(size_t)s,(char *)maxsize,(tm *)format,(timezone_t)tp);\u000a  return sVar1;\u000a}\u000a\u000a
p1186
S'PUSH RAX\nMOV R10,R8\nMOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nMOV dword ptr [RSP],R9D\nXOR EDI,EDI\nMOV R8,RAX\nMOV R9,R10\nCALL 0x00406bc0\nPOP RCX\nRET\n'
p1187
S'50\n4d 89 c2\n48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n44 89 0c 24\n31 ff\n49 89 c0\n4d 89 d1\ne8 0f 00 00 00\n59\nc3\n'
p1188
S'.text:0000000000406b90\n.text:0000000000406b91\n.text:0000000000406b94\n.text:0000000000406b97\n.text:0000000000406b9a\n.text:0000000000406b9d\n.text:0000000000406ba0\n.text:0000000000406ba4\n.text:0000000000406ba6\n.text:0000000000406ba9\n.text:0000000000406bac\n.text:0000000000406bb1\n.text:0000000000406bb2\n'
p1189
tp1190
sS'get_quoting_style'
p1191
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p1192
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p1193
S'TEST RDI,RDI\nMOV EAX,0x611480\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p1194
S'48 85 ff\nb8 80 14 61 00\n48 0f 45 c7\n8b 00\nc3\n'
p1195
S'.text:0000000000405070\n.text:0000000000405073\n.text:0000000000405078\n.text:000000000040507c\n.text:000000000040507e\n'
p1196
tp1197
sS'ferror_unlocked'
p1198
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p1199
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_00611178)();\u000a  return iVar1;\u000a}\u000a\u000a
p1200
S'JMP qword ptr [0x00611178]\n'
p1201
S'ff 25 f2 f2 20 00\n'
p1202
S'.plt:0000000000401e80\n'
p1203
tp1204
sS'exit'
p1205
(S'\n__stdcall exit(int __status)\n'
p1206
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_006112a8)();\u000a  return;\u000a}\u000a\u000a
p1207
S'JMP qword ptr [0x006112a8]\n'
p1208
S'ff 25 c2 f1 20 00\n'
p1209
S'.plt:00000000004020e0\n'
p1210
tp1211
sS'locale_charset'
p1212
(S'\n__stdcall locale_charset()\n'
p1213
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_00409f0d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_00409f0d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p1214
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x00401f70\nTEST RAX,RAX\nMOV R14D,0x40d829\nCMOVNZ R14,RAX\nCALL 0x00409f20\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00409ee5\nJMP 0x00409f0d\nMOV RDI,RBX\nCALL 0x00401d30\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401d30\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x00409f0d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401ea0\nTEST EAX,EAX\nJZ 0x00409f00\nCMP BPL,0x2a\nJNZ 0x00409ec0\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00409ec0\nMOV RDI,RBX\nCALL 0x00401d30\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x40dfa8\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1215
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 d2 80 ff ff\n48 85 c0\n41 be 29 d8 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 68 7e ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 5a 7e ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 b0 7f ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 28 7e ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 a8 df 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p1216
S'.text:0000000000409e90\n.text:0000000000409e91\n.text:0000000000409e93\n.text:0000000000409e94\n.text:0000000000409e99\n.text:0000000000409e9e\n.text:0000000000409ea1\n.text:0000000000409ea7\n.text:0000000000409eab\n.text:0000000000409eb0\n.text:0000000000409eb3\n.text:0000000000409eb6\n.text:0000000000409eb9\n.text:0000000000409ebb\n.text:0000000000409ec0\n.text:0000000000409ec3\n.text:0000000000409ec8\n.text:0000000000409ecc\n.text:0000000000409ed1\n.text:0000000000409ed6\n.text:0000000000409edb\n.text:0000000000409ee0\n.text:0000000000409ee3\n.text:0000000000409ee5\n.text:0000000000409ee8\n.text:0000000000409eeb\n.text:0000000000409ef0\n.text:0000000000409ef2\n.text:0000000000409ef4\n.text:0000000000409ef8\n.text:0000000000409efa\n.text:0000000000409efe\n.text:0000000000409f00\n.text:0000000000409f03\n.text:0000000000409f08\n.text:0000000000409f0d\n.text:0000000000409f11\n.text:0000000000409f16\n.text:0000000000409f1a\n.text:0000000000409f1b\n.text:0000000000409f1d\n.text:0000000000409f1e\n'
p1217
tp1218
sS'set_program_name'
p1219
(S'\n__stdcall set_program_name(char * argv0)\n'
p1220
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p1221
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00405001\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x00401db0\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x00404feb\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x40cd83\nMOV EDX,0x7\nCALL 0x00401c30\nTEST EAX,EAX\nJNZ 0x00404feb\nMOV ESI,0x40cd8b\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x00401c30\nTEST EAX,EAX\nJNZ 0x00404fe8\nADD R14,0x3\nMOV qword ptr [0x00611380],R14\nMOV RBX,R14\nMOV qword ptr [0x00611478],RBX\nMOV qword ptr [0x006113a0],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x006113c0]\nMOV EDI,0x40cd4b\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x004020f0\nCALL 0x00401c10\n'
p1222
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 17 ce ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 83 cd 40 00\nba 07 00 00 00\ne8 6d cc ff ff\n85 c0\n75 24\nbe 8b cd 40 00\nba 03 00 00 00\n4c 89 f7\ne8 57 cc ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 98 c3 20 00\n4c 89 f3\n48 89 1d 86 c4 20 00\n48 89 1d a7 c3 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d b8 c3 20 00\nbf 4b cd 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 d4 d0 ff ff\ne8 ef cb ff ff\n'
p1223
S'.text:0000000000404f80\n.text:0000000000404f82\n.text:0000000000404f83\n.text:0000000000404f84\n.text:0000000000404f87\n.text:0000000000404f8a\n.text:0000000000404f8c\n.text:0000000000404f91\n.text:0000000000404f94\n.text:0000000000404f99\n.text:0000000000404f9c\n.text:0000000000404fa0\n.text:0000000000404fa4\n.text:0000000000404fa7\n.text:0000000000404faa\n.text:0000000000404fae\n.text:0000000000404fb0\n.text:0000000000404fb4\n.text:0000000000404fb9\n.text:0000000000404fbe\n.text:0000000000404fc3\n.text:0000000000404fc5\n.text:0000000000404fc7\n.text:0000000000404fcc\n.text:0000000000404fd1\n.text:0000000000404fd4\n.text:0000000000404fd9\n.text:0000000000404fdb\n.text:0000000000404fdd\n.text:0000000000404fe1\n.text:0000000000404fe8\n.text:0000000000404feb\n.text:0000000000404ff2\n.text:0000000000404ff9\n.text:0000000000404ffd\n.text:0000000000404ffe\n.text:0000000000405000\n.text:0000000000405001\n.text:0000000000405008\n.text:000000000040500d\n.text:0000000000405012\n.text:0000000000405017\n.text:000000000040501c\n'
p1224
tp1225
sS'strspn'
p1226
(S'\n__stdcall strspn(char * __s, char * __accept)\n'
p1227
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strspn(char *__s,char *__accept)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strspn_00611158)();\u000a  return sVar1;\u000a}\u000a\u000a
p1228
S'JMP qword ptr [0x00611158]\n'
p1229
S'ff 25 12 f3 20 00\n'
p1230
S'.plt:0000000000401e40\n'
p1231
tp1232
sS'canonicalize_file_name'
p1233
(S'\n__stdcall canonicalize_file_name(char * __name)\n'
p1234
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * canonicalize_file_name(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_canonicalize_file_name_00611148)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1235
S'JMP qword ptr [0x00611148]\n'
p1236
S'ff 25 22 f3 20 00\n'
p1237
S'.plt:0000000000401e20\n'
p1238
tp1239
sS'quotearg_buffer'
p1240
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p1241
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p1242
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x611480\nCMOVNZ RBP,R8\nCALL 0x00401c20\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x004051a0\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1243
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd 80 14 61 00\n49 0f 45 e8\ne8 d8 ca ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1244
S'.text:0000000000405120\n.text:0000000000405121\n.text:0000000000405123\n.text:0000000000405125\n.text:0000000000405127\n.text:0000000000405129\n.text:000000000040512a\n.text:000000000040512b\n.text:000000000040512e\n.text:0000000000405131\n.text:0000000000405134\n.text:0000000000405137\n.text:000000000040513a\n.text:000000000040513f\n.text:0000000000405143\n.text:0000000000405148\n.text:000000000040514b\n.text:000000000040514d\n.text:0000000000405151\n.text:0000000000405155\n.text:0000000000405159\n.text:000000000040515d\n.text:0000000000405160\n.text:0000000000405163\n.text:0000000000405166\n.text:0000000000405169\n.text:000000000040516c\n.text:000000000040516f\n.text:0000000000405173\n.text:0000000000405174\n.text:0000000000405179\n.text:000000000040517d\n.text:0000000000405181\n.text:0000000000405183\n.text:0000000000405187\n.text:0000000000405188\n.text:000000000040518a\n.text:000000000040518c\n.text:000000000040518e\n.text:0000000000405190\n.text:0000000000405191\n'
p1245
tp1246
sS'cdb_fchdir'
p1247
(S'\n__stdcall cdb_fchdir(cd_buf * cdb)\n'
p1248
V\u000aint cdb_fchdir(cd_buf *cdb)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fchdir_00611220)((ulong)(uint)*cdb);\u000a  return iVar1;\u000a}\u000a\u000a
p1249
S'MOV EDI,dword ptr [RDI]\nJMP 0x00401fd0\n'
p1250
S'8b 3f\ne9 a9 90 ff ff\n'
p1251
S'.text:0000000000408f20\n.text:0000000000408f22\n'
p1252
tp1253
sS'quotearg_colon'
p1254
(S'\n__stdcall quotearg_colon(char * arg)\n'
p1255
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1256
S'MOV ESI,0x3a\nJMP 0x00406300\n'
p1257
S'be 3a 00 00 00\neb e9\n'
p1258
S'.text:0000000000406310\n.text:0000000000406315\n'
p1259
tp1260
sS'get_stat_ctime'
p1261
(S'\n__stdcall get_stat_ctime(stat * st)\n'
p1262
V\u000atimespec get_stat_ctime(stat *st)\u000a\u000a{\u000a  return st->st_ctim;\u000a}\u000a\u000a
p1263
S'MOV RAX,qword ptr [RDI + 0x68]\nMOV RDX,qword ptr [RDI + 0x70]\nRET\n'
p1264
S'48 8b 47 68\n48 8b 57 70\nc3\n'
p1265
S'.text:0000000000406b60\n.text:0000000000406b64\n.text:0000000000406b68\n'
p1266
tp1267
sS'ydhms_diff'
p1268
(S'\n__stdcall ydhms_diff(long_int year1, long_int yday1, int yday0, int hour0, int min0, int sec0)\n'
p1269
V\u000atime_t ydhms_diff(long_int year1,long_int yday1,int yday0,int hour0,int min0,int sec0)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int in_stack_00000008;\u000a  int in_stack_00000010;\u000a  int in_stack_00000018;\u000a  int in_stack_00000020;\u000a  \u000a  iVar3 = ((int)((ulong)year1 >> 2) + 0x1db) - (uint)((year1 & 3U) == 0);\u000a  iVar1 = ((sec0 >> 2) + 0x1db) - (uint)((sec0 & 3U) == 0);\u000a  iVar4 = iVar3 / 0x19 + (iVar3 >> 0x1f) + (uint)((ulong)((long)iVar3 * 0x51eb851f) >> 0x3f);\u000a  iVar4 = iVar4 - ((uint)(iVar3 + iVar4 * -0x19) >> 0x1f);\u000a  iVar2 = iVar1 / 0x19 + (iVar1 >> 0x1f) + (uint)((ulong)((long)iVar1 * 0x51eb851f) >> 0x3f);\u000a  iVar2 = iVar2 - ((uint)(iVar1 + iVar2 * -0x19) >> 0x1f);\u000a  return ((long)min0 - (long)in_stack_00000020) +\u000a         (((long)hour0 - (long)in_stack_00000018) +\u000a         (((long)yday0 - (long)in_stack_00000010) +\u000a         ((yday1 - (long)in_stack_00000008) + (year1 - (long)sec0) * 0x16d +\u000a         (long)((((iVar3 - iVar4) - iVar1) + (iVar4 >> 2) + iVar2) - (iVar2 >> 2))) * 0x18) * 0x3c)\u000a         * 0x3c;\u000a}\u000a\u000a
p1270
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R10,RDI\nSHR R10,0x2\nMOV EAX,EDI\nAND EAX,0x3\nCMP RAX,0x1\nSBB RAX,RAX\nLEA R10,[0x1db + R10 + RAX*0x1]\nMOV R11D,R9D\nMOVSXD R14,R9D\nMOV EAX,R9D\nSAR EAX,0x2\nAND R11D,0x3\nCMP R11D,0x1\nSBB EBX,EBX\nLEA R9D,[0x1db + RAX + RBX*0x1]\nMOVSXD R11,R10D\nIMUL R15,R11,0x51eb851f\nMOV R10,R15\nSHR R10,0x3f\nSAR R15,0x23\nADD R15D,R10D\nLEA EBX,[R15 + R15*0x4]\nLEA R10D,[RBX + RBX*0x4]\nMOV EBX,R11D\nSUB EBX,R10D\nSHR EBX,0x1f\nSUB R15D,EBX\nMOVSXD R9,R9D\nIMUL RBX,R9,0x51eb851f\nMOV R10,RBX\nSHR R10,0x3f\nSAR RBX,0x23\nADD EBX,R10D\nLEA EAX,[RBX + RBX*0x4]\nLEA R10D,[RAX + RAX*0x4]\nSUB R11D,R15D\nSUB R11D,R9D\nMOV EAX,R9D\nSUB EAX,R10D\nSHR EAX,0x1f\nSUB EBX,EAX\nSAR R15D,0x2\nADD R11D,R15D\nADD R11D,EBX\nSAR EBX,0x2\nSUB R11D,EBX\nSUB RDI,R14\nIMUL RAX,RDI,0x16d\nMOVSXD RDI,dword ptr [RSP + 0x20]\nMOVSXD RBX,R11D\nSUB RSI,RDI\nADD RSI,RAX\nADD RSI,RBX\nLEA RAX,[RSI + RSI*0x2]\nMOVSXD RDX,EDX\nMOVSXD RSI,dword ptr [RSP + 0x28]\nSUB RDX,RSI\nLEA RAX,[RDX + RAX*0x8]\nIMUL RAX,RAX,0x3c\nMOVSXD RCX,ECX\nMOVSXD RDX,dword ptr [RSP + 0x30]\nSUB RCX,RDX\nADD RCX,RAX\nIMUL RCX,RCX,0x3c\nMOVSXD RAX,R8D\nMOVSXD RDX,dword ptr [RSP + 0x38]\nSUB RAX,RDX\nADD RAX,RCX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1271
S'41 57\n41 56\n53\n49 89 fa\n49 c1 ea 02\n89 f8\n83 e0 03\n48 83 f8 01\n48 19 c0\n4d 8d 94 02 db 01 00 00\n45 89 cb\n4d 63 f1\n44 89 c8\nc1 f8 02\n41 83 e3 03\n41 83 fb 01\n19 db\n44 8d 8c 18 db 01 00 00\n4d 63 da\n4d 69 fb 1f 85 eb 51\n4d 89 fa\n49 c1 ea 3f\n49 c1 ff 23\n45 01 d7\n43 8d 1c bf\n44 8d 14 9b\n44 89 db\n44 29 d3\nc1 eb 1f\n41 29 df\n4d 63 c9\n49 69 d9 1f 85 eb 51\n49 89 da\n49 c1 ea 3f\n48 c1 fb 23\n44 01 d3\n8d 04 9b\n44 8d 14 80\n45 29 fb\n45 29 cb\n44 89 c8\n44 29 d0\nc1 e8 1f\n29 c3\n41 c1 ff 02\n45 01 fb\n41 01 db\nc1 fb 02\n41 29 db\n4c 29 f7\n48 69 c7 6d 01 00 00\n48 63 7c 24 20\n49 63 db\n48 29 fe\n48 01 c6\n48 01 de\n48 8d 04 76\n48 63 d2\n48 63 74 24 28\n48 29 f2\n48 8d 04 c2\n48 6b c0 3c\n48 63 c9\n48 63 54 24 30\n48 29 d1\n48 01 c1\n48 6b c9 3c\n49 63 c0\n48 63 54 24 38\n48 29 d0\n48 01 c8\n5b\n41 5e\n41 5f\nc3\n'
p1272
S'.text:000000000040aaf0\n.text:000000000040aaf2\n.text:000000000040aaf4\n.text:000000000040aaf5\n.text:000000000040aaf8\n.text:000000000040aafc\n.text:000000000040aafe\n.text:000000000040ab01\n.text:000000000040ab05\n.text:000000000040ab08\n.text:000000000040ab10\n.text:000000000040ab13\n.text:000000000040ab16\n.text:000000000040ab19\n.text:000000000040ab1c\n.text:000000000040ab20\n.text:000000000040ab24\n.text:000000000040ab26\n.text:000000000040ab2e\n.text:000000000040ab31\n.text:000000000040ab38\n.text:000000000040ab3b\n.text:000000000040ab3f\n.text:000000000040ab43\n.text:000000000040ab46\n.text:000000000040ab4a\n.text:000000000040ab4e\n.text:000000000040ab51\n.text:000000000040ab54\n.text:000000000040ab57\n.text:000000000040ab5a\n.text:000000000040ab5d\n.text:000000000040ab64\n.text:000000000040ab67\n.text:000000000040ab6b\n.text:000000000040ab6f\n.text:000000000040ab72\n.text:000000000040ab75\n.text:000000000040ab79\n.text:000000000040ab7c\n.text:000000000040ab7f\n.text:000000000040ab82\n.text:000000000040ab85\n.text:000000000040ab88\n.text:000000000040ab8a\n.text:000000000040ab8e\n.text:000000000040ab91\n.text:000000000040ab94\n.text:000000000040ab97\n.text:000000000040ab9a\n.text:000000000040ab9d\n.text:000000000040aba4\n.text:000000000040aba9\n.text:000000000040abac\n.text:000000000040abaf\n.text:000000000040abb2\n.text:000000000040abb5\n.text:000000000040abb9\n.text:000000000040abbc\n.text:000000000040abc1\n.text:000000000040abc4\n.text:000000000040abc8\n.text:000000000040abcc\n.text:000000000040abcf\n.text:000000000040abd4\n.text:000000000040abd7\n.text:000000000040abda\n.text:000000000040abde\n.text:000000000040abe1\n.text:000000000040abe6\n.text:000000000040abe9\n.text:000000000040abec\n.text:000000000040abed\n.text:000000000040abef\n.text:000000000040abf1\n'
p1273
tp1274
sS'rpl_fflush'
p1275
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p1276
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_006111d8)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p1277
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x0040a60d\nMOV RDI,RBX\nCALL 0x00401fc0\nTEST EAX,EAX\nJZ 0x0040a60d\nMOV RDI,RBX\nCALL 0x0040a620\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401f40\n'
p1278
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 bf 79 ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 2a 79 ff ff\n'
p1279
S'.text:000000000040a5f0\n.text:000000000040a5f1\n.text:000000000040a5f4\n.text:000000000040a5f7\n.text:000000000040a5f9\n.text:000000000040a5fc\n.text:000000000040a601\n.text:000000000040a603\n.text:000000000040a605\n.text:000000000040a608\n.text:000000000040a60d\n.text:000000000040a610\n.text:000000000040a611\n'
p1280
tp1281
sS'__assert_fail'
p1282
(S'\n__stdcall __assert_fail(char * __assertion, char * __file, uint __line, char * __function)\n'
p1283
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\u000a\u000a{\u000a  (*(code *)PTR___assert_fail_00611128)();\u000a  return;\u000a}\u000a\u000a
p1284
S'JMP qword ptr [0x00611128]\n'
p1285
S'ff 25 42 f3 20 00\n'
p1286
S'.plt:0000000000401de0\n'
p1287
tp1288
sS'out_file_context'
p1289
(S'\n__stdcall out_file_context(char * pformat, size_t prefix_len, char * filename)\n'
p1290
V\u000a_Bool out_file_context(char *pformat,size_t prefix_len,char *filename)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  undefined8 uVar4;\u000a  char *pcVar5;\u000a  security_context_t pcVar6;\u000a  security_context_t local_30;\u000a  \u000a  if (follow_links == 1) {\u000a    iVar2 = getfilecon(filename,&local_30);\u000a  }\u000a  else {\u000a    iVar2 = lgetfilecon(filename,&local_30);\u000a  }\u000a  if (iVar2 < 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    uVar4 = dcgettext(0,"failed to get security context of %s",5);\u000a    pcVar5 = quotearg_style((char *)0x4);\u000a    error(0,(ulong)uVar1,uVar4,pcVar5);\u000a    local_30 = (security_context_t)0x0;\u000a  }\u000a  *(undefined2 *)(pformat + prefix_len) = 0x73;\u000a  pcVar6 = "?";\u000a  if (local_30 != (security_context_t)0x0) {\u000a    pcVar6 = local_30;\u000a  }\u000a  __printf_chk(1,pformat,pcVar6);\u000a  if (local_30 != (security_context_t)0x0) {\u000a    freecon(local_30);\u000a  }\u000a  return (_Bool)(iVar2 < 0);\u000a}\u000a\u000a
p1291
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x10\nMOV RBX,RDX\nMOV R14,RSI\nMOV R15,RDI\nCMP byte ptr [0x006113e1],0x1\nJNZ 0x00404591\nLEA RSI,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x004069a0\nTEST EAX,EAX\nJNS 0x004045a2\nJMP 0x004045a6\nLEA RSI,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x004069c0\nTEST EAX,EAX\nJS 0x004045a6\nXOR EBX,EBX\nJMP 0x004045ec\nCALL 0x00401c20\nMOV R12D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x40cb9f\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R12D\nMOV RDX,RBP\nCALL 0x00402050\nMOV qword ptr [RSP + 0x8],0x0\nMOV BL,0x1\nMOV word ptr [R15 + R14*0x1],0x73\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nMOV EDX,0x40cb2d\nCMOVNZ RDX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,R15\nCALL 0x00402020\nMOV RDI,qword ptr [RSP + 0x8]\nTEST RDI,RDI\nJZ 0x00404622\nCALL 0x00406930\nMOV EAX,EBX\nADD RSP,0x10\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1292
S'55\n41 57\n41 56\n41 54\n53\n48 83 ec 10\n48 89 d3\n49 89 f6\n49 89 ff\n80 3d 65 ce 20 00 01\n75 13\n48 8d 74 24 08\n48 89 df\ne8 15 24 00 00\n85 c0\n79 13\neb 15\n48 8d 74 24 08\n48 89 df\ne8 22 24 00 00\n85 c0\n78 04\n31 db\neb 46\ne8 75 d6 ff ff\n44 8b 20\n31 ff\nbe 9f cb 40 00\nba 05 00 00 00\ne8 51 d7 ff ff\n48 89 c5\nbf 04 00 00 00\n48 89 de\ne8 81 1c 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 e6\n48 89 ea\ne8 6f da ff ff\n48 c7 44 24 08 00 00 00 00\nb3 01\n66 43 c7 04 37 73 00\n48 8b 44 24 08\n48 85 c0\nba 2d cb 40 00\n48 0f 45 d0\nbf 01 00 00 00\n31 c0\n4c 89 fe\ne8 0d da ff ff\n48 8b 7c 24 08\n48 85 ff\n74 05\ne8 0e 23 00 00\n89 d8\n48 83 c4 10\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1293
S'.text:0000000000404560\n.text:0000000000404561\n.text:0000000000404563\n.text:0000000000404565\n.text:0000000000404567\n.text:0000000000404568\n.text:000000000040456c\n.text:000000000040456f\n.text:0000000000404572\n.text:0000000000404575\n.text:000000000040457c\n.text:000000000040457e\n.text:0000000000404583\n.text:0000000000404586\n.text:000000000040458b\n.text:000000000040458d\n.text:000000000040458f\n.text:0000000000404591\n.text:0000000000404596\n.text:0000000000404599\n.text:000000000040459e\n.text:00000000004045a0\n.text:00000000004045a2\n.text:00000000004045a4\n.text:00000000004045a6\n.text:00000000004045ab\n.text:00000000004045ae\n.text:00000000004045b0\n.text:00000000004045b5\n.text:00000000004045ba\n.text:00000000004045bf\n.text:00000000004045c2\n.text:00000000004045c7\n.text:00000000004045ca\n.text:00000000004045cf\n.text:00000000004045d2\n.text:00000000004045d4\n.text:00000000004045d6\n.text:00000000004045d9\n.text:00000000004045dc\n.text:00000000004045e1\n.text:00000000004045ea\n.text:00000000004045ec\n.text:00000000004045f3\n.text:00000000004045f8\n.text:00000000004045fb\n.text:0000000000404600\n.text:0000000000404604\n.text:0000000000404609\n.text:000000000040460b\n.text:000000000040460e\n.text:0000000000404613\n.text:0000000000404618\n.text:000000000040461b\n.text:000000000040461d\n.text:0000000000404622\n.text:0000000000404624\n.text:0000000000404628\n.text:0000000000404629\n.text:000000000040462b\n.text:000000000040462d\n.text:000000000040462f\n.text:0000000000404630\n'
p1294
tp1295
sS'do_stat'
p1296
(S'\n__stdcall do_stat(char * filename, char * format, char * format2)\n'
p1297
V\u000a_Bool do_stat(char *filename,char *format,char *format2)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  undefined8 uVar3;\u000a  uint *puVar4;\u000a  char *pcVar5;\u000a  uint __fd;\u000a  undefined auStack184 [24];\u000a  ushort local_a0;\u000a  \u000a  if (*filename == '-') {\u000a    __fd = -(uint)(filename[1] != 0);\u000a    if (filename[1] == 0) {\u000a      iVar2 = fstat(__fd,(stat *)auStack184);\u000a      if (iVar2 != 0) {\u000a        puVar4 = (uint *)__errno_location();\u000a        __fd = *puVar4;\u000a        uVar3 = dcgettext(0,"cannot stat standard input",5);\u000a        error(0,(ulong)__fd,uVar3,uVar3);\u000a        return false;\u000a      }\u000a      goto LAB_00402b02;\u000a    }\u000a  }\u000a  else {\u000a    __fd = 0xffffffff;\u000a  }\u000a  if (follow_links == 1) {\u000a    iVar2 = stat(filename,(stat *)auStack184);\u000a  }\u000a  else {\u000a    iVar2 = lstat(filename,(stat *)auStack184);\u000a  }\u000a  if (iVar2 != 0) {\u000a    puVar4 = (uint *)__errno_location();\u000a    __fd = *puVar4;\u000a    uVar3 = dcgettext(0,"cannot stat %s",5);\u000a    pcVar5 = quotearg_style((char *)0x4);\u000a    error(0,(ulong)__fd,uVar3,pcVar5);\u000a    return false;\u000a  }\u000aLAB_00402b02:\u000a  if ((local_a0 & 0xf000 | 0x4000) == 0x6000) {\u000a    format = format2;\u000a  }\u000a  _Var1 = print_it(format,(char *)(ulong)__fd,\u000a                   (_Bool (*)(char *,size_t,uint,int,char *,void *))filename,print_stat);\u000a  return (_Bool)(_Var1 ^ 1);\u000a}\u000a\u000a
p1298
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0x90\nMOV R15,RDX\nMOV R14,RSI\nMOV RBX,RDI\nCMP byte ptr [RBX],0x2d\nJNZ 0x00402a91\nMOV AL,byte ptr [RBX + 0x1]\nMOV ECX,EAX\nNEG CL\nSBB R12D,R12D\nMOV RBP,RSP\nTEST AL,AL\nJNZ 0x00402a9a\nMOV EDI,R12D\nMOV RSI,RBP\nCALL 0x0040af50\nTEST EAX,EAX\nJZ 0x00402b02\nCALL 0x00401c20\nMOV EBX,dword ptr [RAX]\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x40cad6\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00402050\nJMP 0x00402b38\nMOV RBP,RSP\nMOV R12D,0xffffffff\nCMP byte ptr [0x006113e1],0x1\nJNZ 0x00402ab4\nMOV RSI,RSP\nMOV RDI,RBX\nCALL 0x0040af40\nTEST EAX,EAX\nJNZ 0x00402ac3\nJMP 0x00402b02\nMOV RSI,RSP\nMOV RDI,RBX\nCALL 0x0040af60\nTEST EAX,EAX\nJZ 0x00402b02\nCALL 0x00401c20\nMOV R14D,dword ptr [RAX]\nXOR EBP,EBP\nXOR EDI,EDI\nMOV ESI,0x40caf1\nMOV EDX,0x5\nCALL 0x00401d10\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R14D\nMOV RDX,R15\nCALL 0x00402050\nJMP 0x00402b38\nMOVZX EAX,word ptr [RSP + 0x18]\nOR EAX,0x4000\nAND EAX,0xf000\nCMP EAX,0x6000\nJNZ 0x00402b1b\nMOV R14,R15\nMOV ECX,0x403d70\nMOV RDI,R14\nMOV ESI,R12D\nMOV RDX,RBX\nMOV R8,RBP\nCALL 0x00402b50\nMOV BPL,AL\nXOR BPL,0x1\nMOV EAX,EBP\nADD RSP,0x90\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1299
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec 90 00 00 00\n49 89 d7\n49 89 f6\n48 89 fb\n80 3b 2d\n75 54\n8a 43 01\n89 c1\nf6 d9\n45 19 e4\n48 89 e5\n84 c0\n75 4c\n44 89 e7\n48 89 ee\ne8 f7 84 00 00\n85 c0\n0f 84 a1 00 00 00\ne8 ba f1 ff ff\n8b 18\n31 ed\n31 ff\nbe d6 ca 40 00\nba 05 00 00 00\ne8 95 f2 ff ff\n48 89 c1\n31 ff\n31 c0\n89 de\n48 89 ca\ne8 c4 f5 ff ff\ne9 a7 00 00 00\n48 89 e5\n41 bc ff ff ff ff\n80 3d 40 e9 20 00 01\n75 11\n48 89 e6\n48 89 df\ne8 92 84 00 00\n85 c0\n75 11\neb 4e\n48 89 e6\n48 89 df\ne8 a1 84 00 00\n85 c0\n74 3f\ne8 58 f1 ff ff\n44 8b 30\n31 ed\n31 ff\nbe f1 ca 40 00\nba 05 00 00 00\ne8 32 f2 ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 62 37 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 f6\n4c 89 fa\ne8 50 f5 ff ff\neb 36\n0f b7 44 24 18\n0d 00 40 00 00\n25 00 f0 00 00\n3d 00 60 00 00\n75 03\n4d 89 fe\nb9 70 3d 40 00\n4c 89 f7\n44 89 e6\n48 89 da\n49 89 e8\ne8 1f 00 00 00\n40 88 c5\n40 80 f5 01\n89 e8\n48 81 c4 90 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1300
S'.text:0000000000402a20\n.text:0000000000402a21\n.text:0000000000402a23\n.text:0000000000402a25\n.text:0000000000402a27\n.text:0000000000402a28\n.text:0000000000402a2f\n.text:0000000000402a32\n.text:0000000000402a35\n.text:0000000000402a38\n.text:0000000000402a3b\n.text:0000000000402a3d\n.text:0000000000402a40\n.text:0000000000402a42\n.text:0000000000402a44\n.text:0000000000402a47\n.text:0000000000402a4a\n.text:0000000000402a4c\n.text:0000000000402a4e\n.text:0000000000402a51\n.text:0000000000402a54\n.text:0000000000402a59\n.text:0000000000402a5b\n.text:0000000000402a61\n.text:0000000000402a66\n.text:0000000000402a68\n.text:0000000000402a6a\n.text:0000000000402a6c\n.text:0000000000402a71\n.text:0000000000402a76\n.text:0000000000402a7b\n.text:0000000000402a7e\n.text:0000000000402a80\n.text:0000000000402a82\n.text:0000000000402a84\n.text:0000000000402a87\n.text:0000000000402a8c\n.text:0000000000402a91\n.text:0000000000402a94\n.text:0000000000402a9a\n.text:0000000000402aa1\n.text:0000000000402aa3\n.text:0000000000402aa6\n.text:0000000000402aa9\n.text:0000000000402aae\n.text:0000000000402ab0\n.text:0000000000402ab2\n.text:0000000000402ab4\n.text:0000000000402ab7\n.text:0000000000402aba\n.text:0000000000402abf\n.text:0000000000402ac1\n.text:0000000000402ac3\n.text:0000000000402ac8\n.text:0000000000402acb\n.text:0000000000402acd\n.text:0000000000402acf\n.text:0000000000402ad4\n.text:0000000000402ad9\n.text:0000000000402ade\n.text:0000000000402ae1\n.text:0000000000402ae6\n.text:0000000000402ae9\n.text:0000000000402aee\n.text:0000000000402af1\n.text:0000000000402af3\n.text:0000000000402af5\n.text:0000000000402af8\n.text:0000000000402afb\n.text:0000000000402b00\n.text:0000000000402b02\n.text:0000000000402b07\n.text:0000000000402b0c\n.text:0000000000402b11\n.text:0000000000402b16\n.text:0000000000402b18\n.text:0000000000402b1b\n.text:0000000000402b20\n.text:0000000000402b23\n.text:0000000000402b26\n.text:0000000000402b29\n.text:0000000000402b2c\n.text:0000000000402b31\n.text:0000000000402b34\n.text:0000000000402b38\n.text:0000000000402b3a\n.text:0000000000402b41\n.text:0000000000402b42\n.text:0000000000402b44\n.text:0000000000402b46\n.text:0000000000402b48\n.text:0000000000402b49\n'
p1301
tp1302
sS'save_abbr'
p1303
(S'\n__stdcall save_abbr(timezone_t tz, tm * tm)\n'
p1304
V\u000a_Bool save_abbr(timezone_t tz,tm *tm)\u000a\u000a{\u000a  char *pcVar1;\u000a  tm *__s2;\u000a  tm_zone *ptVar2;\u000a  int iVar3;\u000a  size_t sVar4;\u000a  timezone_t ptVar5;\u000a  char *pcVar6;\u000a  char *__s1;\u000a  \u000a  __s2 = (tm *)tm->tm_zone;\u000a  if ((__s2 != (tm *)0x0) && ((__s2 < tm || (tm + 1 <= __s2)))) {\u000a    if (*(char *)&__s2->tm_sec != 0) {\u000a      pcVar6 = tz->abbrs;\u000a      do {\u000a        __s1 = pcVar6;\u000a        do {\u000a          iVar3 = strcmp(__s1,(char *)__s2);\u000a          if (iVar3 == 0) goto LAB_004099a1;\u000a          if ((*__s1 == 0) && ((__s1 != tz->abbrs || (tz->tz_is_set == 0)))) {\u000a            sVar4 = strlen((char *)__s2);\u000a            if (sVar4 + 1 < (ulong)((long)tz + (0x80 - (long)__s1))) {\u000a              extend_abbrs(__s1,(char *)__s2,sVar4 + 1);\u000a            }\u000a            else {\u000a              ptVar5 = tzalloc((char *)__s2);\u000a              *(timezone_t *)&tz->next = ptVar5;\u000a              if (ptVar5 == (timezone_t)0x0) {\u000a                return false;\u000a              }\u000a              ptVar5->tz_is_set = 0;\u000a              __s1 = ptVar5->abbrs;\u000a            }\u000a            goto LAB_004099a1;\u000a          }\u000a          sVar4 = strlen(__s1);\u000a          pcVar6 = __s1 + sVar4 + 1;\u000a          pcVar1 = __s1 + sVar4 + 1;\u000a          __s1 = pcVar6;\u000a        } while (*pcVar1 != 0);\u000a        ptVar2 = tz->next;\u000a        if (ptVar2 != (tm_zone *)0x0) {\u000a          pcVar6 = ptVar2->abbrs;\u000a          tz = (timezone_t)ptVar2;\u000a        }\u000a      } while( true );\u000a    }\u000a    __s1 = \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000aLAB_004099a1:\u000a    tm->tm_zone = __s1;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1305
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R12,RDI\nMOV RBX,qword ptr [R15 + 0x30]\nMOV R14B,0x1\nTEST RBX,RBX\nJZ 0x004099a5\nCMP R15,RBX\nJA 0x004098e3\nLEA RAX,[R15 + 0x38]\nCMP RBX,RAX\nJC 0x004099a5\nCMP byte ptr [RBX],0x0\nJZ 0x004098ef\nLEA RBP,[R12 + 0x9]\nJMP 0x0040990c\nMOV EBP,0x40d829\nJMP 0x004099a1\nMOV RAX,qword ptr [R12]\nLEA RBP,[RAX + 0x9]\nTEST RAX,RAX\nCMOVZ RBP,RCX\nCMOVNZ R12,RAX\nLEA R13,[R12 + 0x9]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x00401ea0\nTEST EAX,EAX\nJZ 0x004099a1\nCMP byte ptr [RBP],0x0\nJNZ 0x00409942\nCMP RBP,R13\nJNZ 0x0040995b\nCMP byte ptr [R12 + 0x8],0x0\nJZ 0x0040995b\nMOV RDI,RBP\nCALL 0x00401d30\nLEA RCX,[RBP + RAX*0x1 + 0x1]\nCMP byte ptr [RBP + RAX*0x1 + 0x1],0x0\nMOV RBP,RCX\nJNZ 0x00409920\nJMP 0x004098f9\nMOV RDI,RBX\nCALL 0x00401d30\nINC RAX\nMOV RCX,R12\nSUB RCX,-0x80\nSUB RCX,RBP\nCMP RAX,RCX\nJNC 0x00409985\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x00409750\nJMP 0x004099a1\nMOV RDI,RBX\nCALL 0x004096e0\nMOV RBP,RAX\nMOV qword ptr [R12],RBP\nTEST RBP,RBP\nJZ 0x004099b7\nMOV byte ptr [RBP + 0x8],0x0\nADD RBP,0x9\nMOV qword ptr [R15 + 0x30],RBP\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR R14D,R14D\nJMP 0x004099a5\n'
p1306
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f7\n49 89 fc\n49 8b 5f 30\n41 b6 01\n48 85 db\n0f 84 d4 00 00 00\n49 39 df\n77 0d\n49 8d 47 38\n48 39 c3\n0f 82 c2 00 00 00\n80 3b 00\n74 07\n49 8d 6c 24 09\neb 1d\nbd 29 d8 40 00\ne9 a8 00 00 00\n49 8b 04 24\n48 8d 68 09\n48 85 c0\n48 0f 44 e9\n4c 0f 45 e0\n4d 8d 6c 24 09\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 ef\n48 89 de\ne8 75 85 ff ff\n85 c0\n74 72\n80 7d 00 00\n75 0d\n4c 39 ed\n75 21\n41 80 7c 24 08 00\n74 19\n48 89 ef\ne8 e6 83 ff ff\n48 8d 4c 05 01\n80 7c 05 01 00\n48 89 cd\n75 c7\neb 9e\n48 89 df\ne8 cd 83 ff ff\n48 ff c0\n4c 89 e1\n48 83 e9 80\n48 29 e9\n48 39 c8\n73 10\n48 89 ef\n48 89 de\n48 89 c2\ne8 cd fd ff ff\neb 1c\n48 89 df\ne8 53 fd ff ff\n48 89 c5\n49 89 2c 24\n48 85 ed\n74 1e\nc6 45 08 00\n48 83 c5 09\n49 89 6f 30\n44 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n45 31 f6\neb e9\n'
p1307
S'.text:00000000004098b0\n.text:00000000004098b1\n.text:00000000004098b3\n.text:00000000004098b5\n.text:00000000004098b7\n.text:00000000004098b9\n.text:00000000004098ba\n.text:00000000004098bb\n.text:00000000004098be\n.text:00000000004098c1\n.text:00000000004098c5\n.text:00000000004098c8\n.text:00000000004098cb\n.text:00000000004098d1\n.text:00000000004098d4\n.text:00000000004098d6\n.text:00000000004098da\n.text:00000000004098dd\n.text:00000000004098e3\n.text:00000000004098e6\n.text:00000000004098e8\n.text:00000000004098ed\n.text:00000000004098ef\n.text:00000000004098f4\n.text:00000000004098f9\n.text:00000000004098fd\n.text:0000000000409901\n.text:0000000000409904\n.text:0000000000409908\n.text:000000000040990c\n.text:0000000000409911\n.text:0000000000409920\n.text:0000000000409923\n.text:0000000000409926\n.text:000000000040992b\n.text:000000000040992d\n.text:000000000040992f\n.text:0000000000409933\n.text:0000000000409935\n.text:0000000000409938\n.text:000000000040993a\n.text:0000000000409940\n.text:0000000000409942\n.text:0000000000409945\n.text:000000000040994a\n.text:000000000040994f\n.text:0000000000409954\n.text:0000000000409957\n.text:0000000000409959\n.text:000000000040995b\n.text:000000000040995e\n.text:0000000000409963\n.text:0000000000409966\n.text:0000000000409969\n.text:000000000040996d\n.text:0000000000409970\n.text:0000000000409973\n.text:0000000000409975\n.text:0000000000409978\n.text:000000000040997b\n.text:000000000040997e\n.text:0000000000409983\n.text:0000000000409985\n.text:0000000000409988\n.text:000000000040998d\n.text:0000000000409990\n.text:0000000000409994\n.text:0000000000409997\n.text:0000000000409999\n.text:000000000040999d\n.text:00000000004099a1\n.text:00000000004099a5\n.text:00000000004099a8\n.text:00000000004099ac\n.text:00000000004099ad\n.text:00000000004099af\n.text:00000000004099b1\n.text:00000000004099b3\n.text:00000000004099b5\n.text:00000000004099b6\n.text:00000000004099b7\n.text:00000000004099ba\n'
p1308
tp1309
sS'bindtextdomain'
p1310
(S'\n__stdcall bindtextdomain()\n'
p1311
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_006110b8)();\u000a  return;\u000a}\u000a\u000a
p1312
S'JMP qword ptr [0x006110b8]\n'
p1313
S'ff 25 b2 f3 20 00\n'
p1314
S'.plt:0000000000401d00\n'
p1315
tp1316
sS'set_char_quoting'
p1317
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p1318
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p1319
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x611480\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p1320
S'89 f1\n48 85 ff\nbe 80 14 61 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p1321
S'.text:0000000000405090\n.text:0000000000405092\n.text:0000000000405095\n.text:000000000040509a\n.text:000000000040509e\n.text:00000000004050a0\n.text:00000000004050a3\n.text:00000000004050a7\n.text:00000000004050ac\n.text:00000000004050af\n.text:00000000004050b1\n.text:00000000004050b3\n.text:00000000004050b6\n.text:00000000004050b8\n.text:00000000004050bb\n.text:00000000004050bd\n.text:00000000004050c0\n.text:00000000004050c5\n'
p1322
tp1323
sS'quotearg_n'
p1324
(S'\n__stdcall quotearg_n(char * arg)\n'
p1325
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1326
S'MOV RDX,-0x1\nMOV ECX,0x611480\nJMP 0x00405f80\n'
p1327
S'48 c7 c2 ff ff ff ff\nb9 80 14 61 00\neb 02\n'
p1328
S'.text:0000000000405f70\n.text:0000000000405f77\n.text:0000000000405f7c\n'
p1329
tp1330
sS'close_stream'
p1331
(S'\n__stdcall close_stream(FILE * stream)\n'
p1332
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1333
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401c70\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00401e80\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x0040a3b0\nTEST EBP,EBP\nJZ 0x00409d8b\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x00409daf\nCALL 0x00401c20\nMOV dword ptr [RAX],0x0\nJMP 0x00409daf\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x00409daf\nTEST CL,CL\nJNZ 0x00409daf\nCALL 0x00401c20\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1334
S'55\n41 56\n53\n48 89 fb\ne8 14 7f ff ff\n49 89 c6\n48 89 df\ne8 19 81 ff ff\n89 c5\n48 89 df\ne8 3f 06 00 00\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 9d 7e ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 7e 7e ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p1335
S'.text:0000000000409d50\n.text:0000000000409d51\n.text:0000000000409d53\n.text:0000000000409d54\n.text:0000000000409d57\n.text:0000000000409d5c\n.text:0000000000409d5f\n.text:0000000000409d62\n.text:0000000000409d67\n.text:0000000000409d69\n.text:0000000000409d6c\n.text:0000000000409d71\n.text:0000000000409d73\n.text:0000000000409d75\n.text:0000000000409d7a\n.text:0000000000409d7c\n.text:0000000000409d7e\n.text:0000000000409d83\n.text:0000000000409d89\n.text:0000000000409d8b\n.text:0000000000409d8d\n.text:0000000000409d90\n.text:0000000000409d92\n.text:0000000000409d94\n.text:0000000000409d97\n.text:0000000000409d99\n.text:0000000000409d9b\n.text:0000000000409d9d\n.text:0000000000409da2\n.text:0000000000409da4\n.text:0000000000409da7\n.text:0000000000409dac\n.text:0000000000409daf\n.text:0000000000409db1\n.text:0000000000409db2\n.text:0000000000409db4\n.text:0000000000409db5\n'
p1336
tp1337
sS'quotearg_colon_mem'
p1338
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p1339
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1340
S'MOV EDX,0x3a\nJMP 0x00406290\n'
p1341
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p1342
S'.text:0000000000406320\n.text:0000000000406325\n'
p1343
tp1344
sS'out_string'
p1345
(S'\n__stdcall out_string(char * pformat, size_t prefix_len, char * arg)\n'
p1346
V\u000avoid out_string(char *pformat,size_t prefix_len,char *arg)\u000a\u000a{\u000a  make_format(pformat,prefix_len,"-","s");\u000a  __printf_chk(1,pformat,arg);\u000a  return;\u000a}\u000a\u000a
p1347
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nMOV EDX,0x40cd8d\nMOV ECX,0x40cc6d\nCALL 0x00403cb0\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402020\n'
p1348
S'41 56\n53\n50\n49 89 d6\n48 89 fb\nba 8d cd 40 00\nb9 6d cc 40 00\ne8 c7 0c 00 00\nbf 01 00 00 00\n31 c0\n48 89 de\n4c 89 f2\n48 83 c4 08\n5b\n41 5e\ne9 1e f0 ff ff\n'
p1349
S'.text:0000000000402fd0\n.text:0000000000402fd2\n.text:0000000000402fd3\n.text:0000000000402fd4\n.text:0000000000402fd7\n.text:0000000000402fda\n.text:0000000000402fdf\n.text:0000000000402fe4\n.text:0000000000402fe9\n.text:0000000000402fee\n.text:0000000000402ff0\n.text:0000000000402ff3\n.text:0000000000402ff6\n.text:0000000000402ffa\n.text:0000000000402ffb\n.text:0000000000402ffd\n'
p1350
tp1351
sS'xcalloc'
p1352
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p1353
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1354
S'PUSH RAX\nCALL 0x00408c00\nTEST RAX,RAX\nJZ 0x00408a9d\nPOP RCX\nRET\nCALL 0x00408b00\n'
p1355
S'50\ne8 6a 01 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p1356
S'.text:0000000000408a90\n.text:0000000000408a91\n.text:0000000000408a96\n.text:0000000000408a99\n.text:0000000000408a9b\n.text:0000000000408a9c\n.text:0000000000408a9d\n'
p1357
tp1358
sS'strtol'
p1359
(S'\n__stdcall strtol(char * __nptr, char * * __endptr, int __base)\n'
p1360
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000along strtol(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = (*(code *)PTR_strtol_00611198)();\u000a  return lVar1;\u000a}\u000a\u000a
p1361
S'JMP qword ptr [0x00611198]\n'
p1362
S'ff 25 d2 f2 20 00\n'
p1363
S'.plt:0000000000401ec0\n'
p1364
tp1365
sS'clear_ungetc_buffer_preserving_position'
p1366
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p1367
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p1368
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x0040a627\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x0040a640\n'
p1369
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p1370
S'.text:000000000040a620\n.text:000000000040a624\n.text:000000000040a626\n.text:000000000040a627\n.text:000000000040a629\n.text:000000000040a62e\n'
p1371
tp1372
sS'security_compute_create'
p1373
(S'\n__stdcall security_compute_create(security_context_t scon, security_context_t tcon, security_context_t * newcon)\n'
p1374
V\u000aint security_compute_create\u000a              (security_context_t scon,security_context_t tcon,security_context_t *newcon)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1375
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1376
S'50\ne8 5a b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1377
S'.text:0000000000406ac0\n.text:0000000000406ac1\n.text:0000000000406ac6\n.text:0000000000406acc\n.text:0000000000406ad1\n.text:0000000000406ad2\n'
p1378
tp1379
sS'xnmalloc'
p1380
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p1381
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p1382
S'MOV RAX,RDI\nMUL RSI\nJO 0x00408961\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x00408970\nPUSH RAX\nCALL 0x00408b00\n'
p1383
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p1384
S'.text:0000000000408950\n.text:0000000000408953\n.text:0000000000408956\n.text:0000000000408958\n.text:000000000040895c\n.text:000000000040895f\n.text:0000000000408961\n.text:0000000000408962\n'
p1385
tp1386
sS'quotearg_char'
p1387
(S'\n__stdcall quotearg_char(char * arg)\n'
p1388
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1389
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x00406290\n'
p1390
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p1391
S'.text:0000000000406300\n.text:0000000000406302\n.text:0000000000406309\n.text:000000000040630b\n'
p1392
tp1393
sS'malloc'
p1394
(S'\n__stdcall malloc(size_t __size)\n'
p1395
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_006111d0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1396
S'JMP qword ptr [0x006111d0]\n'
p1397
S'ff 25 9a f2 20 00\n'
p1398
S'.plt:0000000000401f30\n'
p1399
tp1400
sS'cdb_free'
p1401
(S'\n__stdcall cdb_free(cd_buf * cdb)\n'
p1402
V\u000avoid cdb_free(cd_buf *cdb)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (-1 < (int)*cdb) {\u000a    iVar1 = close((int)*cdb);\u000a    if (iVar1 != 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a      __assert_fail("! close_fail","lib/chdir-long.c",0x40,"void cdb_free(const struct cd_buf *)");\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1403
S'PUSH RAX\nMOV EDI,dword ptr [RDI]\nTEST EDI,EDI\nJS 0x00408f40\nCALL 0x00401e30\nTEST EAX,EAX\nJNZ 0x00408f42\nPOP RAX\nRET\nMOV EDI,0x40dada\nMOV ESI,0x40da78\nMOV EDX,0x40\nMOV ECX,0x40dae7\nCALL 0x00401de0\n'
p1404
S'50\n8b 3f\n85 ff\n78 09\ne8 f4 8e ff ff\n85 c0\n75 02\n58\nc3\nbf da da 40 00\nbe 78 da 40 00\nba 40 00 00 00\nb9 e7 da 40 00\ne8 85 8e ff ff\n'
p1405
S'.text:0000000000408f30\n.text:0000000000408f31\n.text:0000000000408f33\n.text:0000000000408f35\n.text:0000000000408f37\n.text:0000000000408f3c\n.text:0000000000408f3e\n.text:0000000000408f40\n.text:0000000000408f41\n.text:0000000000408f42\n.text:0000000000408f47\n.text:0000000000408f4c\n.text:0000000000408f51\n.text:0000000000408f56\n'
p1406
tp1407
sS'c_tolower'
p1408
(S'\n__stdcall c_tolower()\n'
p1409
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p1410
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p1411
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p1412
S'.text:0000000000409cc0\n.text:0000000000409cc3\n.text:0000000000409cc6\n.text:0000000000409cc9\n.text:0000000000409ccc\n'
p1413
tp1414
sS'getopt_long'
p1415
(S'\n__stdcall getopt_long()\n'
p1416
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_006110f0)();\u000a  return;\u000a}\u000a\u000a
p1417
S'JMP qword ptr [0x006110f0]\n'
p1418
S'ff 25 7a f3 20 00\n'
p1419
S'.plt:0000000000401d70\n'
p1420
tp1421
sS'areadlink_with_size'
p1422
(S'\n__stdcall areadlink_with_size(char * file, size_t size)\n'
p1423
V\u000achar * areadlink_with_size(char *file,size_t size)\u000a\u000a{\u000a  int iVar1;\u000a  char *__buf;\u000a  ulong uVar2;\u000a  int *piVar3;\u000a  ulong __size;\u000a  bool bVar4;\u000a  \u000a  __size = 0x401;\u000a  if (size < 0x401) {\u000a    __size = size + 1;\u000a  }\u000a  while( true ) {\u000a    __buf = (char *)malloc(__size);\u000a    if (__buf == (char *)0x0) {\u000a      return (char *)0x0;\u000a    }\u000a    uVar2 = readlink(file,__buf,__size);\u000a    if ((long)uVar2 < 0) {\u000a      piVar3 = __errno_location();\u000a      iVar1 = *piVar3;\u000a      if (iVar1 != 0x22) {\u000a        free(__buf);\u000a        *piVar3 = iVar1;\u000a        return (char *)0x0;\u000a      }\u000a    }\u000a    if (uVar2 < __size) break;\u000a    free(__buf);\u000a    if (__size >> 0x3e == 0) {\u000a      __size = __size * 2;\u000a    }\u000a    else {\u000a      bVar4 = 0x7ffffffffffffffe < __size;\u000a      __size = 0x7fffffffffffffff;\u000a      if (bVar4) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = 0xc;\u000a        return (char *)0x0;\u000a      }\u000a    }\u000a  }\u000a  __buf[uVar2] = 0;\u000a  return __buf;\u000a}\u000a\u000a
p1424
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCMP RSI,0x401\nLEA RAX,[RSI + 0x1]\nMOV EBX,0x401\nCMOVC RBX,RAX\nJMP 0x00404a73\nADD RBX,RBX\nMOV RDI,RBX\nCALL 0x00401f30\nMOV R15,RAX\nTEST R15,R15\nJZ 0x00404af2\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,RBX\nCALL 0x00401ca0\nMOV R12,RAX\nTEST R12,R12\nJNS 0x00404aaa\nCALL 0x00401c20\nMOV R13,RAX\nMOV EBP,dword ptr [R13]\nCMP EBP,0x22\nJNZ 0x00404ae6\nCMP R12,RBX\nJC 0x00404adf\nMOV RDI,R15\nCALL 0x00401be0\nMOV RAX,RBX\nSHR RAX,0x3e\nJZ 0x00404a70\nMOV RAX,0x7fffffffffffffff\nCMP RBX,RAX\nMOV RBX,RAX\nJC 0x00404a73\nCALL 0x00401c20\nMOV dword ptr [RAX],0xc\nJMP 0x00404af2\nMOV byte ptr [R15 + R12*0x1],0x0\nJMP 0x00404af5\nMOV RDI,R15\nCALL 0x00401be0\nMOV dword ptr [R13],EBP\nXOR R15D,R15D\nMOV RAX,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1425
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 fe\n48 81 fe 01 04 00 00\n48 8d 46 01\nbb 01 04 00 00\n48 0f 42 d8\neb 0f\n48 01 db\n48 89 df\ne8 b5 d4 ff ff\n49 89 c7\n4d 85 ff\n74 6f\n4c 89 f7\n4c 89 fe\n48 89 da\ne8 0f d2 ff ff\n49 89 c4\n4d 85 e4\n79 11\ne8 82 d1 ff ff\n49 89 c5\n41 8b 6d 00\n83 fd 22\n75 3c\n49 39 dc\n72 30\n4c 89 ff\ne8 29 d1 ff ff\n48 89 d8\n48 c1 e8 3e\n74 b0\n48 b8 ff ff ff ff ff ff ff 7f\n48 39 c3\n48 89 c3\n72 a1\ne8 49 d1 ff ff\nc7 00 0c 00 00 00\neb 13\n43 c6 04 27 00\neb 0f\n4c 89 ff\ne8 f2 d0 ff ff\n41 89 6d 00\n45 31 ff\n4c 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1426
S'.text:0000000000404a40\n.text:0000000000404a41\n.text:0000000000404a43\n.text:0000000000404a45\n.text:0000000000404a47\n.text:0000000000404a49\n.text:0000000000404a4a\n.text:0000000000404a4b\n.text:0000000000404a4e\n.text:0000000000404a55\n.text:0000000000404a59\n.text:0000000000404a5e\n.text:0000000000404a62\n.text:0000000000404a70\n.text:0000000000404a73\n.text:0000000000404a76\n.text:0000000000404a7b\n.text:0000000000404a7e\n.text:0000000000404a81\n.text:0000000000404a83\n.text:0000000000404a86\n.text:0000000000404a89\n.text:0000000000404a8c\n.text:0000000000404a91\n.text:0000000000404a94\n.text:0000000000404a97\n.text:0000000000404a99\n.text:0000000000404a9e\n.text:0000000000404aa1\n.text:0000000000404aa5\n.text:0000000000404aa8\n.text:0000000000404aaa\n.text:0000000000404aad\n.text:0000000000404aaf\n.text:0000000000404ab2\n.text:0000000000404ab7\n.text:0000000000404aba\n.text:0000000000404abe\n.text:0000000000404ac0\n.text:0000000000404aca\n.text:0000000000404acd\n.text:0000000000404ad0\n.text:0000000000404ad2\n.text:0000000000404ad7\n.text:0000000000404add\n.text:0000000000404adf\n.text:0000000000404ae4\n.text:0000000000404ae6\n.text:0000000000404ae9\n.text:0000000000404aee\n.text:0000000000404af2\n.text:0000000000404af5\n.text:0000000000404af8\n.text:0000000000404afc\n.text:0000000000404afd\n.text:0000000000404aff\n.text:0000000000404b01\n.text:0000000000404b03\n.text:0000000000404b05\n.text:0000000000404b06\n'
p1427
tp1428
sS'quotearg_style'
p1429
(S'\n__stdcall quotearg_style(char * arg)\n'
p1430
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1431
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x00406170\n'
p1432
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p1433
S'.text:0000000000406250\n.text:0000000000406253\n.text:0000000000406255\n.text:0000000000406257\n.text:0000000000406259\n.text:000000000040625c\n'
p1434
tp1435
sS'dup_cloexec'
p1436
(S'\n__stdcall dup_cloexec()\n'
p1437
V\u000aint dup_cloexec(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0x406,0);\u000a  return iVar1;\u000a}\u000a\u000a
p1438
S'MOV ESI,0x406\nXOR EDX,EDX\nXOR EAX,EAX\nJMP 0x0040a430\n'
p1439
S'be 06 04 00 00\n31 d2\n31 c0\ne9 e2 06 00 00\n'
p1440
S'.text:0000000000409d40\n.text:0000000000409d45\n.text:0000000000409d47\n.text:0000000000409d49\n'
p1441
tp1442
sS'emit_try_help'
p1443
(S'\n__stdcall emit_try_help()\n'
p1444
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p1445
S'PUSH RBX\nMOV RBX,qword ptr [0x006113c0]\nXOR EDI,EDI\nMOV ESI,0x40c361\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDX,RAX\nMOV RCX,qword ptr [0x00611478]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x00402100\n'
p1446
S'53\n48 8b 1d 48 ef 20 00\n31 ff\nbe 61 c3 40 00\nba 05 00 00 00\ne8 87 f8 ff ff\n48 89 c2\n48 8b 0d e5 ef 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 5d fc ff ff\n'
p1447
S'.text:0000000000402470\n.text:0000000000402471\n.text:0000000000402478\n.text:000000000040247a\n.text:000000000040247f\n.text:0000000000402484\n.text:0000000000402489\n.text:000000000040248c\n.text:0000000000402493\n.text:0000000000402498\n.text:000000000040249a\n.text:000000000040249d\n.text:000000000040249e\n'
p1448
tp1449
sS'out_int'
p1450
(S'\n__stdcall out_int(char * pformat, size_t prefix_len, intmax_t arg)\n'
p1451
V\u000aint out_int(char *pformat,size_t prefix_len,intmax_t arg)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  make_format(pformat,prefix_len,"\u005c'-+ 0","ld");\u000a  iVar1 = __printf_chk(1,pformat,arg);\u000a  return iVar1;\u000a}\u000a\u000a
p1452
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nMOV EDX,0x40cacd\nMOV ECX,0x40cad3\nCALL 0x00403cb0\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,R14\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00402020\n'
p1453
S'41 56\n53\n50\n49 89 d6\n48 89 fb\nba cd ca 40 00\nb9 d3 ca 40 00\ne8 27 00 00 00\nbf 01 00 00 00\n31 c0\n48 89 de\n4c 89 f2\n48 83 c4 08\n5b\n41 5e\ne9 7e e3 ff ff\n'
p1454
S'.text:0000000000403c70\n.text:0000000000403c72\n.text:0000000000403c73\n.text:0000000000403c74\n.text:0000000000403c77\n.text:0000000000403c7a\n.text:0000000000403c7f\n.text:0000000000403c84\n.text:0000000000403c89\n.text:0000000000403c8e\n.text:0000000000403c90\n.text:0000000000403c93\n.text:0000000000403c96\n.text:0000000000403c9a\n.text:0000000000403c9b\n.text:0000000000403c9d\n'
p1455
tp1456
sS'strrchr'
p1457
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p1458
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_00611110)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1459
S'JMP qword ptr [0x00611110]\n'
p1460
S'ff 25 5a f3 20 00\n'
p1461
S'.plt:0000000000401db0\n'
p1462
tp1463
sS'quotearg_alloc_mem'
p1464
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p1465
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p1466
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x611480\nCMOVNZ R12,RCX\nCALL 0x00401c20\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004051a0\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00408a40\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004051a0\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x00405eca\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1467
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc 80 14 61 00\n4c 0f 45 e1\ne8 f8 bd ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 c1 2b 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1468
S'.text:0000000000405df0\n.text:0000000000405df1\n.text:0000000000405df3\n.text:0000000000405df5\n.text:0000000000405df7\n.text:0000000000405df9\n.text:0000000000405dfa\n.text:0000000000405dfe\n.text:0000000000405e01\n.text:0000000000405e06\n.text:0000000000405e09\n.text:0000000000405e0e\n.text:0000000000405e11\n.text:0000000000405e16\n.text:0000000000405e19\n.text:0000000000405e1f\n.text:0000000000405e23\n.text:0000000000405e28\n.text:0000000000405e2d\n.text:0000000000405e2f\n.text:0000000000405e33\n.text:0000000000405e35\n.text:0000000000405e38\n.text:0000000000405e3c\n.text:0000000000405e41\n.text:0000000000405e45\n.text:0000000000405e4a\n.text:0000000000405e4e\n.text:0000000000405e50\n.text:0000000000405e52\n.text:0000000000405e55\n.text:0000000000405e58\n.text:0000000000405e5b\n.text:0000000000405e60\n.text:0000000000405e65\n.text:0000000000405e67\n.text:0000000000405e6c\n.text:0000000000405e70\n.text:0000000000405e73\n.text:0000000000405e77\n.text:0000000000405e7a\n.text:0000000000405e7f\n.text:0000000000405e82\n.text:0000000000405e86\n.text:0000000000405e8a\n.text:0000000000405e8d\n.text:0000000000405e90\n.text:0000000000405e95\n.text:0000000000405e9a\n.text:0000000000405e9d\n.text:0000000000405ea2\n.text:0000000000405ea7\n.text:0000000000405ea9\n.text:0000000000405eae\n.text:0000000000405eb3\n.text:0000000000405eb7\n.text:0000000000405eba\n.text:0000000000405ebe\n.text:0000000000405ec3\n.text:0000000000405ec5\n.text:0000000000405ec7\n.text:0000000000405eca\n.text:0000000000405ecd\n.text:0000000000405ed1\n.text:0000000000405ed2\n.text:0000000000405ed4\n.text:0000000000405ed6\n.text:0000000000405ed8\n.text:0000000000405eda\n.text:0000000000405edb\n'
p1469
tp1470
sS'memcpy_lowcase'
p1471
(S'\n__stdcall memcpy_lowcase(size_t len)\n'
p1472
V\u000achar * memcpy_lowcase(size_t len)\u000a\u000a{\u000a  __int32_t **in_RAX;\u000a  long in_RDX;\u000a  long in_RSI;\u000a  \u000a  if (in_RDX != 0) {\u000a    in_RAX = __ctype_tolower_loc();\u000a    do {\u000a      *(undefined *)((len - 1) + in_RDX) =\u000a           *(undefined *)(*in_RAX + (ulong)*(byte *)(in_RSI + -1 + in_RDX));\u000a      in_RDX = in_RDX + -1;\u000a    } while (in_RDX != 0);\u000a  }\u000a  return (char *)in_RAX;\u000a}\u000a\u000a
p1473
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV RBX,RDX\nMOV R14,RSI\nMOV R15,RDI\nTEST RBX,RBX\nJZ 0x004083c7\nCALL 0x00402160\nNOP dword ptr [RAX + RAX*0x1]\nMOV RCX,qword ptr [RAX]\nMOVZX EDX,byte ptr [R14 + RBX*0x1 + -0x1]\nMOVZX ECX,byte ptr [RCX + RDX*0x4]\nMOV byte ptr [R15 + RBX*0x1 + -0x1],CL\nDEC RBX\nJNZ 0x004083b0\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1474
S'41 57\n41 56\n53\n48 89 d3\n49 89 f6\n49 89 ff\n48 85 db\n74 24\ne8 b8 9d ff ff\n0f 1f 84 00 00 00 00 00\n48 8b 08\n41 0f b6 54 1e ff\n0f b6 0c 91\n41 88 4c 1f ff\n48 ff cb\n75 e9\n5b\n41 5e\n41 5f\nc3\n'
p1475
S'.text:0000000000408390\n.text:0000000000408392\n.text:0000000000408394\n.text:0000000000408395\n.text:0000000000408398\n.text:000000000040839b\n.text:000000000040839e\n.text:00000000004083a1\n.text:00000000004083a3\n.text:00000000004083a8\n.text:00000000004083b0\n.text:00000000004083b3\n.text:00000000004083b9\n.text:00000000004083bd\n.text:00000000004083c2\n.text:00000000004083c5\n.text:00000000004083c7\n.text:00000000004083c8\n.text:00000000004083ca\n.text:00000000004083cc\n'
p1476
tp1477
sS'memchr'
p1478
(S'\n__stdcall memchr(void * __s, int __c, size_t __n)\n'
p1479
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memchr(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memchr_00611160)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1480
S'JMP qword ptr [0x00611160]\n'
p1481
S'ff 25 0a f3 20 00\n'
p1482
S'.plt:0000000000401e50\n'
p1483
tp1484
sS'quotearg_style_mem'
p1485
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p1486
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p1487
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00406210\n'
p1488
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p1489
S'.text:0000000000406270\n.text:0000000000406273\n.text:0000000000406276\n.text:0000000000406278\n.text:000000000040627a\n.text:000000000040627c\n.text:000000000040627f\n.text:0000000000406282\n'
p1490
tp1491
sS'xalloc_die'
p1492
(S'\n__stdcall xalloc_die()\n'
p1493
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,0x40cc6c,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1494
S'PUSH RBX\nMOV EBX,dword ptr [0x00611320]\nXOR EDI,EDI\nMOV ESI,0x40da5f\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x40cc6c\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00402050\nCALL 0x00401c10\n'
p1495
S'53\n8b 1d 19 88 20 00\n31 ff\nbe 5f da 40 00\nba 05 00 00 00\ne8 f8 91 ff ff\n48 89 c1\n31 f6\nba 6c cc 40 00\n31 c0\n89 df\ne8 25 95 ff ff\ne8 e0 90 ff ff\n'
p1496
S'.text:0000000000408b00\n.text:0000000000408b01\n.text:0000000000408b07\n.text:0000000000408b09\n.text:0000000000408b0e\n.text:0000000000408b13\n.text:0000000000408b18\n.text:0000000000408b1b\n.text:0000000000408b1d\n.text:0000000000408b22\n.text:0000000000408b24\n.text:0000000000408b26\n.text:0000000000408b2b\n'
p1497
tp1498
sS'__sprintf_chk'
p1499
(S'\n__stdcall __sprintf_chk()\n'
p1500
V\u000avoid __sprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___sprintf_chk_006112f8)();\u000a  return;\u000a}\u000a\u000a
p1501
S'JMP qword ptr [0x006112f8]\n'
p1502
S'ff 25 72 f1 20 00\n'
p1503
S'.plt:0000000000402180\n'
p1504
tp1505
sS'open_safer'
p1506
(S'\n__stdcall open_safer(char * file)\n'
p1507
V\u000a/* WARNING: Removing unreachable block (ram,0x00409e5e) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff58 : 0x00409e6c */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint open_safer(char *file,...)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  uint __oflag;\u000a  va_list ap;\u000a  uint local_a8;\u000a  \u000a  uVar2 = 0;\u000a  if ((__oflag & 0x40) != 0) {\u000a    uVar2 = (ulong)local_a8;\u000a  }\u000a  open(file,__oflag,uVar2);\u000a  iVar1 = fd_safer();\u000a  return iVar1;\u000a}\u000a\u000a
p1508
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00409e02\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nXOR EDX,EDX\nTEST SIL,0x40\nJZ 0x00409e6e\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RCX,dword ptr [RSP]\nCMP RCX,0x28\nJA 0x00409e5e\nMOV RAX,RCX\nADD RAX,qword ptr [RSP + 0x10]\nLEA ECX,[RCX + 0x8]\nMOV dword ptr [RSP],ECX\nJMP 0x00409e6c\nMOV RAX,qword ptr [RSP + 0x8]\nLEA RCX,[RAX + 0x8]\nMOV qword ptr [RSP + 0x8],RCX\nMOV EDX,dword ptr [RAX]\nXOR EAX,EAX\nCALL 0x00402070\nMOV EDI,EAX\nCALL 0x0040a1c0\nADD RSP,0xd8\nRET\n'
p1509
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n31 d2\n40 f6 c6 40\n74 50\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 0c 24\n48 83 f9 28\n77 10\n48 89 c8\n48 03 44 24 10\n8d 49 08\n89 0c 24\neb 0e\n48 8b 44 24 08\n48 8d 48 08\n48 89 4c 24 08\n8b 10\n31 c0\ne8 fb 81 ff ff\n89 c7\ne8 44 03 00 00\n48 81 c4 d8 00 00 00\nc3\n'
p1510
S'.text:0000000000409dc0\n.text:0000000000409dc7\n.text:0000000000409dc9\n.text:0000000000409dcb\n.text:0000000000409dd0\n.text:0000000000409dd5\n.text:0000000000409dda\n.text:0000000000409de2\n.text:0000000000409dea\n.text:0000000000409df2\n.text:0000000000409dfa\n.text:0000000000409e02\n.text:0000000000409e07\n.text:0000000000409e0c\n.text:0000000000409e11\n.text:0000000000409e16\n.text:0000000000409e18\n.text:0000000000409e1c\n.text:0000000000409e1e\n.text:0000000000409e23\n.text:0000000000409e28\n.text:0000000000409e30\n.text:0000000000409e35\n.text:0000000000409e3d\n.text:0000000000409e44\n.text:0000000000409e48\n.text:0000000000409e4c\n.text:0000000000409e4e\n.text:0000000000409e51\n.text:0000000000409e56\n.text:0000000000409e59\n.text:0000000000409e5c\n.text:0000000000409e5e\n.text:0000000000409e63\n.text:0000000000409e67\n.text:0000000000409e6c\n.text:0000000000409e6e\n.text:0000000000409e70\n.text:0000000000409e75\n.text:0000000000409e77\n.text:0000000000409e7c\n.text:0000000000409e83\n'
p1511
tp1512
sS'quotearg_n_custom'
p1513
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p1514
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1515
S'MOV R8,-0x1\nJMP 0x00406390\n'
p1516
S'49 c7 c0 ff ff ff ff\neb 07\n'
p1517
S'.text:0000000000406380\n.text:0000000000406387\n'
p1518
tp1519
sS'gnu_dev_makedev'
p1520
(S'\n__stdcall gnu_dev_makedev(uint __major, uint __minor)\n'
p1521
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aulonglong gnu_dev_makedev(uint __major,uint __minor)\u000a\u000a{\u000a  ulonglong uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_gnu_dev_makedev_006112d8)();\u000a  return uVar1;\u000a}\u000a\u000a
p1522
S'JMP qword ptr [0x006112d8]\n'
p1523
S'ff 25 92 f1 20 00\n'
p1524
S'.plt:0000000000402140\n'
p1525
tp1526
sS'set_tz'
p1527
(S'\n__stdcall set_tz(timezone_t tz)\n'
p1528
V\u000atimezone_t set_tz(timezone_t tz)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char *__s2;\u000a  timezone_t tz_00;\u000a  int *piVar3;\u000a  \u000a  __s2 = getenv_TZ();\u000a  if (__s2 == (char *)0x0) {\u000a    if (tz->tz_is_set == 0) {\u000a      return (timezone_t)0x1;\u000a    }\u000a  }\u000a  else {\u000a    if ((tz->tz_is_set != 0) && (iVar2 = strcmp(tz->abbrs,__s2), iVar2 == 0)) {\u000a      return (timezone_t)0x1;\u000a    }\u000a  }\u000a  tz_00 = tzalloc(__s2);\u000a  if (tz_00 != (timezone_t)0x0) {\u000a    _Var1 = change_env(tz);\u000a    if (_Var1 != false) {\u000a      return tz_00;\u000a    }\u000a    piVar3 = __errno_location();\u000a    iVar2 = *piVar3;\u000a    tzfree(tz_00);\u000a    *piVar3 = iVar2;\u000a  }\u000a  return (timezone_t)0x0;\u000a}\u000a\u000a
p1529
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCALL 0x00409b10\nMOV RBX,RAX\nTEST RBX,RBX\nMOV AL,byte ptr [R14 + 0x8]\nJZ 0x0040985e\nTEST AL,AL\nJZ 0x00409862\nLEA RDI,[R14 + 0x9]\nMOV RSI,RBX\nCALL 0x00401ea0\nTEST EAX,EAX\nJNZ 0x00409862\nJMP 0x00409898\nTEST AL,AL\nJZ 0x00409898\nMOV RDI,RBX\nCALL 0x004096e0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00409894\nMOV RDI,R14\nCALL 0x00409b20\nTEST AL,AL\nJNZ 0x0040989d\nCALL 0x00401c20\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x00409770\nMOV dword ptr [R14],EBP\nXOR EBX,EBX\nJMP 0x0040989d\nMOV EBX,0x1\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1530
S'55\n41 56\n53\n49 89 fe\ne8 d4 02 00 00\n48 89 c3\n48 85 db\n41 8a 46 08\n74 16\n84 c0\n74 16\n49 8d 7e 09\n48 89 de\ne8 48 86 ff ff\n85 c0\n75 06\neb 3a\n84 c0\n74 36\n48 89 df\ne8 76 fe ff ff\n48 89 c3\n48 85 db\n74 22\n4c 89 f7\ne8 a6 02 00 00\n84 c0\n75 1f\ne8 9d 83 ff ff\n49 89 c6\n41 8b 2e\n48 89 df\ne8 df fe ff ff\n41 89 2e\n31 db\neb 05\nbb 01 00 00 00\n48 89 d8\n5b\n41 5e\n5d\nc3\n'
p1531
S'.text:0000000000409830\n.text:0000000000409831\n.text:0000000000409833\n.text:0000000000409834\n.text:0000000000409837\n.text:000000000040983c\n.text:000000000040983f\n.text:0000000000409842\n.text:0000000000409846\n.text:0000000000409848\n.text:000000000040984a\n.text:000000000040984c\n.text:0000000000409850\n.text:0000000000409853\n.text:0000000000409858\n.text:000000000040985a\n.text:000000000040985c\n.text:000000000040985e\n.text:0000000000409860\n.text:0000000000409862\n.text:0000000000409865\n.text:000000000040986a\n.text:000000000040986d\n.text:0000000000409870\n.text:0000000000409872\n.text:0000000000409875\n.text:000000000040987a\n.text:000000000040987c\n.text:000000000040987e\n.text:0000000000409883\n.text:0000000000409886\n.text:0000000000409889\n.text:000000000040988c\n.text:0000000000409891\n.text:0000000000409894\n.text:0000000000409896\n.text:0000000000409898\n.text:000000000040989d\n.text:00000000004098a0\n.text:00000000004098a1\n.text:00000000004098a3\n.text:00000000004098a4\n'
p1532
tp1533
sS'fd_safer'
p1534
(S'\n__stdcall fd_safer()\n'
p1535
V\u000aint fd_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int *piVar3;\u000a  uint __fd;\u000a  \u000a  if (__fd < 3) {\u000a    uVar2 = dup_safer();\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(__fd);\u000a    *piVar3 = iVar1;\u000a    __fd = uVar2;\u000a  }\u000a  return (int)__fd;\u000a}\u000a\u000a
p1536
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,EDI\nCMP EBX,0x2\nJA 0x0040a1f4\nMOV EDI,EBX\nCALL 0x0040ae00\nMOV R14D,EAX\nCALL 0x00401c20\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV EDI,EBX\nCALL 0x00401e30\nMOV dword ptr [RBP],R15D\nMOV EAX,R14D\nJMP 0x0040a1f6\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1537
S'55\n41 57\n41 56\n53\n50\n89 fb\n83 fb 02\n77 26\n89 df\ne8 2b 0c 00 00\n41 89 c6\ne8 43 7a ff ff\n48 89 c5\n44 8b 7d 00\n89 df\ne8 45 7c ff ff\n44 89 7d 00\n44 89 f0\neb 02\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1538
S'.text:000000000040a1c0\n.text:000000000040a1c1\n.text:000000000040a1c3\n.text:000000000040a1c5\n.text:000000000040a1c6\n.text:000000000040a1c7\n.text:000000000040a1c9\n.text:000000000040a1cc\n.text:000000000040a1ce\n.text:000000000040a1d0\n.text:000000000040a1d5\n.text:000000000040a1d8\n.text:000000000040a1dd\n.text:000000000040a1e0\n.text:000000000040a1e4\n.text:000000000040a1e6\n.text:000000000040a1eb\n.text:000000000040a1ef\n.text:000000000040a1f2\n.text:000000000040a1f4\n.text:000000000040a1f6\n.text:000000000040a1fa\n.text:000000000040a1fb\n.text:000000000040a1fd\n.text:000000000040a1ff\n.text:000000000040a200\n'
p1539
tp1540
sS'revert_tz'
p1541
(S'\n__stdcall revert_tz(timezone_t tz)\n'
p1542
V\u000a_Bool revert_tz(timezone_t tz)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int *piVar2;\u000a  int iVar3;\u000a  \u000a  if (tz == (timezone_t)0x1) {\u000a    _Var1 = true;\u000a  }\u000a  else {\u000a    piVar2 = __errno_location();\u000a    iVar3 = *piVar2;\u000a    _Var1 = change_env(tz);\u000a    if (_Var1 == false) {\u000a      iVar3 = *piVar2;\u000a    }\u000a    tzfree(tz);\u000a    *piVar2 = iVar3;\u000a  }\u000a  return _Var1;\u000a}\u000a\u000a
p1543
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCMP RBX,0x1\nJZ 0x004099fa\nCALL 0x00401c20\nMOV R14,RAX\nMOV R15D,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x00409b20\nMOV EBP,EAX\nTEST BPL,BPL\nJNZ 0x004099ed\nMOV R15D,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x00409770\nMOV dword ptr [R14],R15D\nJMP 0x004099fd\nMOV BPL,0x1\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1544
S'55\n41 57\n41 56\n53\n50\n48 89 fb\n48 83 fb 01\n74 2a\ne8 4b 82 ff ff\n49 89 c6\n45 8b 3e\n48 89 df\ne8 3d 01 00 00\n89 c5\n40 84 ed\n75 03\n45 8b 3e\n48 89 df\ne8 7b fd ff ff\n45 89 3e\neb 03\n40 b5 01\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1545
S'.text:00000000004099c0\n.text:00000000004099c1\n.text:00000000004099c3\n.text:00000000004099c5\n.text:00000000004099c6\n.text:00000000004099c7\n.text:00000000004099ca\n.text:00000000004099ce\n.text:00000000004099d0\n.text:00000000004099d5\n.text:00000000004099d8\n.text:00000000004099db\n.text:00000000004099de\n.text:00000000004099e3\n.text:00000000004099e5\n.text:00000000004099e8\n.text:00000000004099ea\n.text:00000000004099ed\n.text:00000000004099f0\n.text:00000000004099f5\n.text:00000000004099f8\n.text:00000000004099fa\n.text:00000000004099fd\n.text:00000000004099ff\n.text:0000000000409a03\n.text:0000000000409a04\n.text:0000000000409a06\n.text:0000000000409a08\n.text:0000000000409a09\n'
p1546
tp1547
sS'__freading'
p1548
(S'\n__stdcall __freading()\n'
p1549
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_00611218)();\u000a  return;\u000a}\u000a\u000a
p1550
S'JMP qword ptr [0x00611218]\n'
p1551
S'ff 25 52 f2 20 00\n'
p1552
S'.plt:0000000000401fc0\n'
p1553
tp1554
sS'ranged_convert'
p1555
(S'\n__stdcall ranged_convert(anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * t, tm * tp)\n'
p1556
V\u000atm * ranged_convert(tm *(*convert)(time_t *,tm *),time_t *t,tm *tp)\u000a\u000a{\u000a  tm *ptVar1;\u000a  ulong uVar2;\u000a  ulong a;\u000a  ulong uVar3;\u000a  ulong b;\u000a  undefined auVar4 [16];\u000a  \u000a  ptVar1 = (*convert)(t,tp);\u000a  if (ptVar1 == (tm *)0x0) {\u000a    b = *t;\u000a    if ((b == 0) || (b == ((long)b >> 0x3f | 1U))) {\u000a      ptVar1 = (tm *)0x0;\u000a    }\u000a    else {\u000a      a = 0;\u000a      do {\u000a        uVar2 = time_t_avg(a,b);\u000a        *t = uVar2;\u000a        auVar4 = (undefined  [16])(*convert)(t,tp);\u000a        ptVar1 = SUB168(auVar4,0);\u000a        uVar3 = uVar2;\u000a        if (ptVar1 == (tm *)0x0) {\u000a          uVar3 = a;\u000a          b = uVar2;\u000a        }\u000a        a = uVar3;\u000a      } while (b != ((long)b >> 0x3f | 1U) + uVar3);\u000a      if ((uVar3 != 0) && (ptVar1 == (tm *)0x0)) {\u000a        *t = uVar3;\u000a                    /* WARNING: Could not recover jumptable at 0x0040ad4f. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a        ptVar1 = (*convert)(t,tp);\u000a        return ptVar1;\u000a      }\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p1557
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nMOV RDI,R15\nMOV RSI,R14\nCALL RBX\nTEST RAX,RAX\nJNZ 0x0040accf\nMOV qword ptr [RSP],RBX\nMOV R12,qword ptr [R15]\nTEST R12,R12\nJZ 0x0040accd\nMOV RAX,R12\nSAR RAX,0x3f\nOR RAX,0x1\nCMP R12,RAX\nJNZ 0x0040acde\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EBX,EBX\nMOV RBP,qword ptr [RSP]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV R13,RBX\nMOV RDI,R13\nMOV RSI,R12\nCALL 0x0040ade0\nMOV RBX,RAX\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nCALL RBP\nTEST RAX,RAX\nCMOVZ R12,RBX\nCMOVZ RBX,R13\nMOV RCX,R12\nSAR RCX,0x3f\nOR RCX,0x1\nADD RCX,RBX\nCMP R12,RCX\nJNZ 0x0040acf0\nTEST RBX,RBX\nJZ 0x0040accf\nTEST RAX,RAX\nMOV RCX,qword ptr [RSP]\nJNZ 0x0040accf\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP RCX\n'
p1558
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f7\n48 89 fb\n4c 89 ff\n4c 89 f6\nff d3\n48 85 c0\n75 1e\n48 89 1c 24\n4d 8b 27\n4d 85 e4\n74 10\n4c 89 e0\n48 c1 f8 3f\n48 83 c8 01\n49 39 c4\n75 11\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n31 db\n48 8b 2c 24\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 89 dd\n4c 89 ef\n4c 89 e6\ne8 e2 00 00 00\n48 89 c3\n49 89 1f\n4c 89 ff\n4c 89 f6\nff d5\n48 85 c0\n4c 0f 44 e3\n49 0f 44 dd\n4c 89 e1\n48 c1 f9 3f\n48 83 c9 01\n48 01 d9\n49 39 cc\n75 c6\n48 85 db\n74 a0\n48 85 c0\n48 8b 0c 24\n75 97\n49 89 1f\n4c 89 ff\n4c 89 f6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nff e1\n'
p1559
S'.text:000000000040ac90\n.text:000000000040ac91\n.text:000000000040ac93\n.text:000000000040ac95\n.text:000000000040ac97\n.text:000000000040ac99\n.text:000000000040ac9a\n.text:000000000040ac9b\n.text:000000000040ac9e\n.text:000000000040aca1\n.text:000000000040aca4\n.text:000000000040aca7\n.text:000000000040acaa\n.text:000000000040acac\n.text:000000000040acaf\n.text:000000000040acb1\n.text:000000000040acb5\n.text:000000000040acb8\n.text:000000000040acbb\n.text:000000000040acbd\n.text:000000000040acc0\n.text:000000000040acc4\n.text:000000000040acc8\n.text:000000000040accb\n.text:000000000040accd\n.text:000000000040accf\n.text:000000000040acd3\n.text:000000000040acd4\n.text:000000000040acd6\n.text:000000000040acd8\n.text:000000000040acda\n.text:000000000040acdc\n.text:000000000040acdd\n.text:000000000040acde\n.text:000000000040ace0\n.text:000000000040ace4\n.text:000000000040acf0\n.text:000000000040acf3\n.text:000000000040acf6\n.text:000000000040acf9\n.text:000000000040acfe\n.text:000000000040ad01\n.text:000000000040ad04\n.text:000000000040ad07\n.text:000000000040ad0a\n.text:000000000040ad0c\n.text:000000000040ad0f\n.text:000000000040ad13\n.text:000000000040ad17\n.text:000000000040ad1a\n.text:000000000040ad1e\n.text:000000000040ad22\n.text:000000000040ad25\n.text:000000000040ad28\n.text:000000000040ad2a\n.text:000000000040ad2d\n.text:000000000040ad2f\n.text:000000000040ad32\n.text:000000000040ad36\n.text:000000000040ad38\n.text:000000000040ad3b\n.text:000000000040ad3e\n.text:000000000040ad41\n.text:000000000040ad45\n.text:000000000040ad46\n.text:000000000040ad48\n.text:000000000040ad4a\n.text:000000000040ad4c\n.text:000000000040ad4e\n.text:000000000040ad4f\n'
p1560
tp1561
sS'print_it'
p1562
(S'\n__stdcall print_it(char * format, char * filename, anon_subr__Bool_char_ptr_size_t_uint_int_char_ptr_void_ptr * print_func, void * data)\n'
p1563
V\u000a_Bool print_it(char *format,char *filename,_Bool (*print_func)(char *,size_t,uint,int,char *,void *)\u000a              ,void *data)\u000a\u000a{\u000a  ushort *puVar1;\u000a  char cVar2;\u000a  byte bVar3;\u000a  int iVar4;\u000a  size_t sVar5;\u000a  char *arg;\u000a  size_t sVar6;\u000a  undefined8 uVar7;\u000a  long lVar8;\u000a  long lVar9;\u000a  ushort **ppuVar10;\u000a  char *pcVar11;\u000a  int __c;\u000a  undefined8 in_R8;\u000a  char *pcVar12;\u000a  byte local_50;\u000a  \u000a  sVar5 = strlen(format);\u000a  arg = (char *)xmalloc(sVar5 + 3);\u000a  cVar2 = *format;\u000a  if (cVar2 == 0) {\u000a    local_50 = 0;\u000a  }\u000a  else {\u000a    local_50 = 0;\u000a    do {\u000a      __c = (int)cVar2;\u000a      if (__c == 0x5c) {\u000a        if (interpret_backslash_escapes == 0) {\u000aLAB_00402e00:\u000a          __c = 0x5c;\u000a          goto LAB_00402e05;\u000a        }\u000a        bVar3 = format[1];\u000a        if ((bVar3 & 0xf8) == 0x30) {\u000a          __c = (int)(char)bVar3 + -0x30;\u000a          lVar8 = 2;\u000a          do {\u000a            lVar9 = lVar8;\u000a            if ((format[lVar8] & 0xf8U) != 0x30) break;\u000a            __c = (int)format[lVar8] + -0x30 + __c * 8;\u000a            lVar9 = lVar8 + 1;\u000a            iVar4 = (int)lVar8;\u000a            lVar8 = lVar9;\u000a          } while (iVar4 < 3);\u000a          putchar_unlocked(__c);\u000a          pcVar12 = format + lVar9 + -1;\u000a        }\u000a        else {\u000a          if (bVar3 == 0x78) {\u000a            ppuVar10 = __ctype_b_loc();\u000a            puVar1 = *ppuVar10;\u000a            cVar2 = format[2];\u000a            bVar3 = to_uchar();\u000a            if ((*(byte *)((long)puVar1 + (ulong)bVar3 * 2 + 1) & 0x10) != 0) {\u000a              __c = -0x57;\u000a              if ((5 < (byte)(cVar2 + 0x9fU)) && (__c = -0x30, (byte)(cVar2 + 0xbfU) < 6)) {\u000a                __c = -0x37;\u000a              }\u000a              __c = __c + (int)cVar2;\u000a              puVar1 = *ppuVar10;\u000a              cVar2 = format[3];\u000a              bVar3 = to_uchar();\u000a              if ((*(byte *)((long)puVar1 + (ulong)bVar3 * 2 + 1) & 0x10) == 0) {\u000a                format = format + 2;\u000a              }\u000a              else {\u000a                iVar4 = -0x57;\u000a                if ((5 < (byte)(cVar2 + 0x9fU)) && (iVar4 = -0x30, (byte)(cVar2 + 0xbfU) < 6)) {\u000a                  iVar4 = -0x37;\u000a                }\u000a                format = format + 3;\u000a                __c = (int)cVar2 + __c * 0x10 + iVar4;\u000a              }\u000a              goto LAB_00402e05;\u000a            }\u000a          }\u000a          pcVar12 = format + 1;\u000a          if (*pcVar12 == 0) {\u000a            uVar7 = dcgettext(0,"warning: backslash at end of format",5);\u000a            error(0,0,uVar7);\u000a            goto LAB_00402e00;\u000a          }\u000a          print_esc_char();\u000a        }\u000a      }\u000a      else {\u000a        if (__c == 0x25) {\u000a          sVar5 = strspn(format + 1,"\u005c'-+ #0I");\u000a          sVar6 = strspn(format + sVar5 + 1,"0123456789");\u000a          pcVar12 = format + sVar5 + sVar6 + 1;\u000a          if ((format + sVar5)[sVar6 + 1] == '.') {\u000a            sVar5 = strspn(pcVar12 + 1,"0123456789");\u000a            pcVar12 = pcVar12 + sVar5 + 1;\u000a          }\u000a          pcVar11 = pcVar12 + -(long)(format + 1);\u000a          cVar2 = *pcVar12;\u000a          memcpy(arg,format,(size_t)(pcVar11 + 1));\u000a          format = pcVar12;\u000a          if ((int)cVar2 != 0x25) {\u000a            if (cVar2 != 0) {\u000a              bVar3 = (*(code *)data)(arg,pcVar11 + 1,(ulong)(uint)(int)cVar2,\u000a                                      (ulong)filename & 0xffffffff,print_func,in_R8);\u000a              local_50 = local_50 & 1 | bVar3;\u000a              goto LAB_00402e0a;\u000a            }\u000a            format = pcVar12 + -1;\u000a          }\u000a          if (pcVar11 != (char *)0x0) {\u000a            (arg + 1)[(long)pcVar11] = *pcVar12;\u000a            (arg + 2)[(long)pcVar11] = 0;\u000a            uVar7 = dcgettext(0,"%s: invalid directive",5);\u000a            quote(arg);\u000a            error(1,0,uVar7);\u000a          }\u000a          __c = 0x25;\u000a        }\u000aLAB_00402e05:\u000a        putchar_unlocked(__c);\u000a        pcVar12 = format;\u000a      }\u000aLAB_00402e0a:\u000a      cVar2 = pcVar12[1];\u000a      format = pcVar12 + 1;\u000a    } while (cVar2 != 0);\u000a  }\u000a  free(arg);\u000a  fputs_unlocked(trailing_delim,stdout);\u000a  return (_Bool)(local_50 & 1);\u000a}\u000a\u000a
p1564
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV qword ptr [RSP + 0x20],R8\nMOV qword ptr [RSP + 0x18],RCX\nMOV qword ptr [RSP + 0x10],RDX\nMOV dword ptr [RSP + 0xc],ESI\nMOV R14,RDI\nCALL 0x00401d30\nLEA RDI,[RAX + 0x3]\nCALL 0x00408970\nMOV R13,RAX\nMOV AL,byte ptr [R14]\nTEST AL,AL\nJZ 0x00402e1b\nMOV dword ptr [RSP + 0x8],0x0\nJMP 0x00402c30\nMOV EAX,EBP\nADD AL,0x9f\nMOV R15D,0xffffffa9\nCMP AL,0x6\nJC 0x00402bc0\nMOV EAX,EBP\nADD AL,0xbf\nCMP AL,0x6\nMOV R15D,0xffffffd0\nMOV EAX,0xffffffc9\nCMOVC R15D,EAX\nADD R15D,EBP\nMOV RBX,qword ptr [R12]\nMOVSX R12D,byte ptr [R14 + 0x3]\nMOV EDI,R12D\nCALL 0x00402f60\nMOVZX EAX,AL\nTEST byte ptr [RBX + RAX*0x2 + 0x1],0x10\nJNZ 0x00402be4\nADD R14,0x2\nJMP 0x00402c19\nSHL R15D,0x4\nMOV ECX,R12D\nADD CL,0x9f\nMOV EAX,0xffffffa9\nCMP CL,0x6\nJC 0x00402c0c\nMOV EAX,R12D\nADD AL,0xbf\nCMP AL,0x6\nMOV EAX,0xffffffd0\nMOV ECX,0xffffffc9\nCMOVC EAX,ECX\nADD R14,0x3\nADD R12D,R15D\nADD R12D,EAX\nMOV R15D,R12D\nMOV EDI,R15D\nJMP 0x00402e05\nMOVSX EDI,AL\nCMP EDI,0x5c\nJZ 0x00402d10\nCMP EDI,0x25\nJNZ 0x00402e05\nLEA R15,[R14 + 0x1]\nMOV ESI,0x40b880\nMOV RDI,R15\nCALL 0x00401e40\nLEA RBX,[R14 + RAX*0x1]\nLEA RDI,[R14 + RAX*0x1 + 0x1]\nMOV ESI,0x40b888\nCALL 0x00401e40\nLEA RBP,[RAX + RBX*0x1 + 0x1]\nCMP byte ptr [RAX + RBX*0x1 + 0x1],0x2e\nJNZ 0x00402c88\nLEA RDI,[RBP + 0x1]\nMOV ESI,0x40b888\nCALL 0x00401e40\nLEA RBP,[RBP + RAX*0x1 + 0x1]\nMOV RBX,RBP\nSUB RBX,R15\nMOVSX R12D,byte ptr [RBP]\nLEA R15,[RBX + 0x1]\nMOV RDI,R13\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401ed0\nCMP R12D,0x25\nMOV R14,RBP\nJZ 0x00402cbb\nTEST R12D,R12D\nJNZ 0x00402d6e\nLEA R14,[RBP + -0x1]\nTEST RBX,RBX\nJZ 0x00402cfe\nMOV AL,byte ptr [RBP]\nMOV byte ptr [R13 + RBX*0x1 + 0x1],AL\nMOV byte ptr [R13 + RBX*0x1 + 0x2],0x0\nXOR EDI,EDI\nMOV ESI,0x40c7b7\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBX,RAX\nMOV RDI,R13\nCALL 0x00406470\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00402050\nMOV EDI,0x25\nJMP 0x00402e05\nMOV AL,byte ptr [0x006113e0]\nTEST AL,AL\nJZ 0x00402e00\nMOVSX EDI,byte ptr [R14 + 0x1]\nMOV EAX,EDI\nAND AL,0xf8\nCMP AL,0x30\nJNZ 0x00402d9b\nADD EDI,-0x30\nMOV EAX,0x2\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVSX ECX,byte ptr [R14 + RAX*0x1]\nMOV EDX,ECX\nAND DL,0xf8\nCMP DL,0x30\nJNZ 0x00402d5e\nLEA EDI,[RCX + RDI*0x8 + -0x30]\nINC RAX\nLEA ECX,[RAX + -0x1]\nCMP ECX,0x3\nJL 0x00402d40\nADD R14,RAX\nCALL 0x00401ee0\nDEC R14\nJMP 0x00402e0a\nMOV RDI,R13\nMOV RSI,R15\nMOV EDX,R12D\nMOV ECX,dword ptr [RSP + 0xc]\nMOV R8,qword ptr [RSP + 0x10]\nMOV R9,qword ptr [RSP + 0x20]\nCALL qword ptr [RSP + 0x18]\nMOV ECX,dword ptr [RSP + 0x8]\nAND CL,0x1\nOR CL,AL\nMOV dword ptr [RSP + 0x8],ECX\nMOV R14,RBP\nJMP 0x00402e0a\nCMP DIL,0x78\nJNZ 0x00402dc7\nCALL 0x00402170\nMOV R12,RAX\nMOV RBX,qword ptr [R12]\nMOVSX EBP,byte ptr [R14 + 0x2]\nMOV EDI,EBP\nCALL 0x00402f60\nMOVZX EAX,AL\nTEST byte ptr [RBX + RAX*0x2 + 0x1],0x10\nJNZ 0x00402b9d\nLEA RBX,[R14 + 0x1]\nMOV AL,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00402dde\nMOVSX EDI,AL\nCALL 0x00402f70\nMOV R14,RBX\nJMP 0x00402e0a\nXOR EDI,EDI\nMOV ESI,0x40c7cd\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402050\nMOV EDI,0x5c\nCALL 0x00401ee0\nMOV AL,byte ptr [R14 + 0x1]\nINC R14\nTEST AL,AL\nJNZ 0x00402c30\nJMP 0x00402e23\nMOV dword ptr [RSP + 0x8],0x0\nMOV RDI,R13\nCALL 0x00401be0\nMOV RDI,qword ptr [0x00611310]\nMOV RSI,qword ptr [0x00611388]\nCALL 0x00401e70\nMOV EAX,dword ptr [RSP + 0x8]\nAND AL,0x1\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1565
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n4c 89 44 24 20\n48 89 4c 24 18\n48 89 54 24 10\n89 74 24 0c\n49 89 fe\ne8 b7 f1 ff ff\n48 8d 78 03\ne8 ee 5d 00 00\n49 89 c5\n41 8a 06\n84 c0\n0f 84 8b 02 00 00\nc7 44 24 08 00 00 00 00\ne9 93 00 00 00\n89 e8\n04 9f\n41 bf a9 ff ff ff\n3c 06\n72 15\n89 e8\n04 bf\n3c 06\n41 bf d0 ff ff ff\nb8 c9 ff ff ff\n44 0f 42 f8\n41 01 ef\n49 8b 1c 24\n45 0f be 66 03\n44 89 e7\ne8 8c 03 00 00\n0f b6 c0\nf6 44 43 01 10\n75 06\n49 83 c6 02\neb 35\n41 c1 e7 04\n44 89 e1\n80 c1 9f\nb8 a9 ff ff ff\n80 f9 06\n72 14\n44 89 e0\n04 bf\n3c 06\nb8 d0 ff ff ff\nb9 c9 ff ff ff\n0f 42 c1\n49 83 c6 03\n45 01 fc\n41 01 c4\n45 89 e7\n44 89 ff\ne9 e4 01 00 00\n0f be f8\n83 ff 5c\n0f 84 d4 00 00 00\n83 ff 25\n0f 85 c0 01 00 00\n4d 8d 7e 01\nbe 80 b8 40 00\n4c 89 ff\ne8 ea f1 ff ff\n49 8d 1c 06\n49 8d 7c 06 01\nbe 88 b8 40 00\ne8 d7 f1 ff ff\n48 8d 6c 18 01\n80 7c 18 01 2e\n75 13\n48 8d 7d 01\nbe 88 b8 40 00\ne8 bd f1 ff ff\n48 8d 6c 05 01\n48 89 eb\n4c 29 fb\n44 0f be 65 00\n4c 8d 7b 01\n4c 89 ef\n4c 89 f6\n4c 89 fa\ne8 2b f2 ff ff\n41 83 fc 25\n49 89 ee\n74 0d\n45 85 e4\n0f 85 b7 00 00 00\n4c 8d 75 ff\n48 85 db\n74 3e\n8a 45 00\n41 88 44 1d 01\n41 c6 44 1d 02 00\n31 ff\nbe b7 c7 40 00\nba 05 00 00 00\ne8 31 f0 ff ff\n48 89 c3\n4c 89 ef\ne8 86 37 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 52 f3 ff ff\nbf 25 00 00 00\ne9 fd 00 00 00\n8a 05 ca e6 20 00\n84 c0\n0f 84 e2 00 00 00\n41 0f be 7e 01\n89 f8\n24 f8\n3c 30\n75 70\n83 c7 d0\nb8 02 00 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n41 0f be 0c 06\n89 ca\n80 e2 f8\n80 fa 30\n75 0f\n8d 7c f9 d0\n48 ff c0\n8d 48 ff\n83 f9 03\n7c e2\n49 01 c6\ne8 7a f1 ff ff\n49 ff ce\ne9 9c 00 00 00\n4c 89 ef\n4c 89 fe\n44 89 e2\n8b 4c 24 0c\n4c 8b 44 24 10\n4c 8b 4c 24 20\nff 54 24 18\n8b 4c 24 08\n80 e1 01\n08 c1\n89 4c 24 08\n49 89 ee\neb 6f\n40 80 ff 78\n75 26\ne8 ca f3 ff ff\n49 89 c4\n49 8b 1c 24\n41 0f be 6e 02\n89 ef\ne8 a7 01 00 00\n0f b6 c0\nf6 44 43 01 10\n0f 85 d6 fd ff ff\n49 8d 5e 01\n8a 03\n84 c0\n74 0d\n0f be f8\ne8 97 01 00 00\n49 89 de\neb 2c\n31 ff\nbe cd c7 40 00\nba 05 00 00 00\ne8 21 ef ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 50 f2 ff ff\nbf 5c 00 00 00\ne8 d6 f0 ff ff\n41 8a 46 01\n49 ff c6\n84 c0\n0f 85 17 fe ff ff\neb 08\nc7 44 24 08 00 00 00 00\n4c 89 ef\ne8 b5 ed ff ff\n48 8b 3d de e4 20 00\n48 8b 35 4f e5 20 00\ne8 32 f0 ff ff\n8b 44 24 08\n24 01\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1566
S'.text:0000000000402b50\n.text:0000000000402b51\n.text:0000000000402b53\n.text:0000000000402b55\n.text:0000000000402b57\n.text:0000000000402b59\n.text:0000000000402b5a\n.text:0000000000402b5e\n.text:0000000000402b63\n.text:0000000000402b68\n.text:0000000000402b6d\n.text:0000000000402b71\n.text:0000000000402b74\n.text:0000000000402b79\n.text:0000000000402b7d\n.text:0000000000402b82\n.text:0000000000402b85\n.text:0000000000402b88\n.text:0000000000402b8a\n.text:0000000000402b90\n.text:0000000000402b98\n.text:0000000000402b9d\n.text:0000000000402b9f\n.text:0000000000402ba1\n.text:0000000000402ba7\n.text:0000000000402ba9\n.text:0000000000402bab\n.text:0000000000402bad\n.text:0000000000402baf\n.text:0000000000402bb1\n.text:0000000000402bb7\n.text:0000000000402bbc\n.text:0000000000402bc0\n.text:0000000000402bc3\n.text:0000000000402bc7\n.text:0000000000402bcc\n.text:0000000000402bcf\n.text:0000000000402bd4\n.text:0000000000402bd7\n.text:0000000000402bdc\n.text:0000000000402bde\n.text:0000000000402be2\n.text:0000000000402be4\n.text:0000000000402be8\n.text:0000000000402beb\n.text:0000000000402bee\n.text:0000000000402bf3\n.text:0000000000402bf6\n.text:0000000000402bf8\n.text:0000000000402bfb\n.text:0000000000402bfd\n.text:0000000000402bff\n.text:0000000000402c04\n.text:0000000000402c09\n.text:0000000000402c0c\n.text:0000000000402c10\n.text:0000000000402c13\n.text:0000000000402c16\n.text:0000000000402c19\n.text:0000000000402c1c\n.text:0000000000402c30\n.text:0000000000402c33\n.text:0000000000402c36\n.text:0000000000402c3c\n.text:0000000000402c3f\n.text:0000000000402c45\n.text:0000000000402c49\n.text:0000000000402c4e\n.text:0000000000402c51\n.text:0000000000402c56\n.text:0000000000402c5a\n.text:0000000000402c5f\n.text:0000000000402c64\n.text:0000000000402c69\n.text:0000000000402c6e\n.text:0000000000402c73\n.text:0000000000402c75\n.text:0000000000402c79\n.text:0000000000402c7e\n.text:0000000000402c83\n.text:0000000000402c88\n.text:0000000000402c8b\n.text:0000000000402c8e\n.text:0000000000402c93\n.text:0000000000402c97\n.text:0000000000402c9a\n.text:0000000000402c9d\n.text:0000000000402ca0\n.text:0000000000402ca5\n.text:0000000000402ca9\n.text:0000000000402cac\n.text:0000000000402cae\n.text:0000000000402cb1\n.text:0000000000402cb7\n.text:0000000000402cbb\n.text:0000000000402cbe\n.text:0000000000402cc0\n.text:0000000000402cc3\n.text:0000000000402cc8\n.text:0000000000402cce\n.text:0000000000402cd0\n.text:0000000000402cd5\n.text:0000000000402cda\n.text:0000000000402cdf\n.text:0000000000402ce2\n.text:0000000000402ce5\n.text:0000000000402cea\n.text:0000000000402ced\n.text:0000000000402cf2\n.text:0000000000402cf4\n.text:0000000000402cf6\n.text:0000000000402cf9\n.text:0000000000402cfe\n.text:0000000000402d03\n.text:0000000000402d10\n.text:0000000000402d16\n.text:0000000000402d18\n.text:0000000000402d1e\n.text:0000000000402d23\n.text:0000000000402d25\n.text:0000000000402d27\n.text:0000000000402d29\n.text:0000000000402d2b\n.text:0000000000402d2e\n.text:0000000000402d33\n.text:0000000000402d40\n.text:0000000000402d45\n.text:0000000000402d47\n.text:0000000000402d4a\n.text:0000000000402d4d\n.text:0000000000402d4f\n.text:0000000000402d53\n.text:0000000000402d56\n.text:0000000000402d59\n.text:0000000000402d5c\n.text:0000000000402d5e\n.text:0000000000402d61\n.text:0000000000402d66\n.text:0000000000402d69\n.text:0000000000402d6e\n.text:0000000000402d71\n.text:0000000000402d74\n.text:0000000000402d77\n.text:0000000000402d7b\n.text:0000000000402d80\n.text:0000000000402d85\n.text:0000000000402d89\n.text:0000000000402d8d\n.text:0000000000402d90\n.text:0000000000402d92\n.text:0000000000402d96\n.text:0000000000402d99\n.text:0000000000402d9b\n.text:0000000000402d9f\n.text:0000000000402da1\n.text:0000000000402da6\n.text:0000000000402da9\n.text:0000000000402dad\n.text:0000000000402db2\n.text:0000000000402db4\n.text:0000000000402db9\n.text:0000000000402dbc\n.text:0000000000402dc1\n.text:0000000000402dc7\n.text:0000000000402dcb\n.text:0000000000402dcd\n.text:0000000000402dcf\n.text:0000000000402dd1\n.text:0000000000402dd4\n.text:0000000000402dd9\n.text:0000000000402ddc\n.text:0000000000402dde\n.text:0000000000402de0\n.text:0000000000402de5\n.text:0000000000402dea\n.text:0000000000402def\n.text:0000000000402df2\n.text:0000000000402df4\n.text:0000000000402df6\n.text:0000000000402df8\n.text:0000000000402dfb\n.text:0000000000402e00\n.text:0000000000402e05\n.text:0000000000402e0a\n.text:0000000000402e0e\n.text:0000000000402e11\n.text:0000000000402e13\n.text:0000000000402e19\n.text:0000000000402e1b\n.text:0000000000402e23\n.text:0000000000402e26\n.text:0000000000402e2b\n.text:0000000000402e32\n.text:0000000000402e39\n.text:0000000000402e3e\n.text:0000000000402e42\n.text:0000000000402e44\n.text:0000000000402e48\n.text:0000000000402e49\n.text:0000000000402e4b\n.text:0000000000402e4d\n.text:0000000000402e4f\n.text:0000000000402e51\n.text:0000000000402e52\n'
p1567
tp1568
sS'fputs_unlocked'
p1569
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p1570
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_00611170)();\u000a  return iVar1;\u000a}\u000a\u000a
p1571
S'JMP qword ptr [0x00611170]\n'
p1572
S'ff 25 fa f2 20 00\n'
p1573
S'.plt:0000000000401e70\n'
p1574
tp1575
sS'main'
p1576
(S'\n__stdcall main(char * * argv)\n'
p1577
V\u000aint main(char **argv)\u000a\u000a{\u000a  bool bVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  lconv *plVar4;\u000a  undefined8 uVar5;\u000a  char *format2;\u000a  char *format;\u000a  char extraout_DL;\u000a  char **ppcVar6;\u000a  byte bVar7;\u000a  uint uVar8;\u000a  char cVar9;\u000a  char **in_RSI;\u000a  char cVar10;\u000a  int iVar11;\u000a  \u000a  set_program_name(*in_RSI);\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  bindtextdomain(0x40c338,"/usr/local/share/locale");\u000a  textdomain(0x40c338);\u000a  plVar4 = localeconv();\u000a  decimal_point = ".";\u000a  if (*plVar4->decimal_point != 0) {\u000a    decimal_point = plVar4->decimal_point;\u000a  }\u000a  decimal_point_len = strlen(decimal_point);\u000a  atexit(close_stdout);\u000a  bVar1 = false;\u000a  format2 = (char *)0x0;\u000a  while( true ) {\u000a    iVar11 = (int)((ulong)argv & 0xffffffff);\u000a    iVar3 = getopt_long((ulong)argv & 0xffffffff);\u000a    if (iVar3 < 0x4c) break;\u000a    switch(iVar3) {\u000a    case 99:\u000a      interpret_backslash_escapes = 0;\u000a      trailing_delim =\u000a                      \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xc9;\u000a      format2 = optarg;\u000a      break;\u000a    case 100:\u000a    case 0x65:\u000a    case 0x67:\u000a    case 0x68:\u000a    case 0x69:\u000a    case 0x6a:\u000a    case 0x6b:\u000a    case 0x6c:\u000a    case 0x6d:\u000a    case 0x6e:\u000a    case 0x6f:\u000a    case 0x70:\u000a    case 0x71:\u000a    case 0x72:\u000a    case 0x73:\u000a    case 0x75:\u000a    case 0x76:\u000a    case 0x77:\u000a    case 0x78:\u000a    case 0x79:\u000a    case 0x7a:\u000a    case 0x7b:\u000a    case 0x7c:\u000a    case 0x7d:\u000a    case 0x7e:\u000a    case 0x7f:\u000a      goto switchD_004026d5_caseD_64;\u000a    case 0x66:\u000a      bVar1 = true;\u000a      break;\u000a    case 0x74:\u000a      break;\u000a    case 0x80:\u000a      interpret_backslash_escapes = 1;\u000a      trailing_delim =\u000a                      \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a      format2 = optarg;\u000a      break;\u000a    default:\u000a      if (iVar3 != 0x4c) goto switchD_004026d5_caseD_64;\u000a      follow_links = 1;\u000a    }\u000a  }\u000a  if (iVar3 == -1) {\u000a    if (optind != iVar11) {\u000a      format = format2;\u000a      if (format2 == (char *)0x0) {\u000a        format = default_format();\u000a        format2 = default_format();\u000a      }\u000a      if (optind < iVar11) {\u000a        ppcVar6 = in_RSI + (long)optind;\u000a        iVar11 = iVar11 - optind;\u000a        bVar7 = 1;\u000a        do {\u000a          if (bVar1) {\u000a            _Var2 = do_statfs(*ppcVar6,format);\u000a          }\u000a          else {\u000a            _Var2 = do_stat(*ppcVar6,format,format2);\u000a          }\u000a          bVar7 = bVar7 & _Var2;\u000a          ppcVar6 = ppcVar6 + 1;\u000a          iVar11 = iVar11 + -1;\u000a        } while (iVar11 != 0);\u000a        uVar8 = (uint)(bVar7 ^ 1);\u000a      }\u000a      else {\u000a        uVar8 = 0;\u000a      }\u000a      return (int)uVar8;\u000a    }\u000aLAB_0040280d:\u000a    uVar5 = dcgettext(0,"missing operand",5);\u000a    cVar9 = 0;\u000a    error(0,0,uVar5,uVar5);\u000a    cVar10 = 1;\u000a    usage();\u000a    if (cVar10 == 0) {\u000a      if (cVar9 == 0) {\u000a        format2 = (char *)dcgettext(0,"  File: %N\u005cn  Size: %-10s\u005ctBlocks: %-10b IO Block: %-6o %F\u005cn"\u000a                                    ,5);\u000a        format = xstrdup(format2);\u000a        format2 = "Device: %Dh/%dd\u005ctInode: %-10i  Links: %h\u005cn";\u000a        if (extraout_DL != 0) {\u000a          format2 = "Device: %Dh/%dd\u005ctInode: %-10i  Links: %-5h Device type: %t,%T\u005cn";\u000a        }\u000a        uVar5 = dcgettext(0,format2,5);\u000a        format2 = xasprintf("%s%s",format,uVar5,uVar5);\u000a        free(format);\u000a        uVar5 = dcgettext(0,"Access: (%04a/%10.10A)  Uid: (%5u/%8U)   Gid: (%5g/%8G)\u005cn",5);\u000a        format = xasprintf("%s%s",format2,uVar5,uVar5);\u000a        free(format2);\u000a        uVar5 = dcgettext(0,"Access: %x\u005cnModify: %y\u005cnChange: %z\u005cn Birth: %w\u005cn",5);\u000a        format2 = xasprintf("%s%s",format,uVar5,uVar5);\u000a        free(format);\u000a        return (int)format2;\u000a      }\u000a      format2 = "%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o\u005cn";\u000a    }\u000a    else {\u000a      if (cVar9 == 0) {\u000a        format2 = (char *)dcgettext(0,\u000a                                    "  File: \u005c"%n\u005c"\u005cn    ID: %-8i Namelen: %-7l Type: %T\u005cnBlock size: %-10s Fundamental block size: %S\u005cnBlocks: Total: %-10b Free: %-10f Available: %a\u005cnInodes: Total: %-10c Free: %d\u005cn"\u000a                                    ,5);\u000a      }\u000a      else {\u000a        format2 = "%n %i %l %t %s %S %b %f %a %c %d\u005cn";\u000a      }\u000a    }\u000a    format2 = xstrdup(format2);\u000a    return (int)format2;\u000a  }\u000a  if (iVar3 != -0x83) {\u000a    if (iVar3 != -0x82) {\u000aswitchD_004026d5_caseD_64:\u000a      usage(1);\u000a      goto LAB_0040280d;\u000a    }\u000a    usage(0);\u000a  }\u000a  version_etc(stdout,"stat","GNU coreutils",Version,"Michael Meskes",0);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p1578
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV RBP,RSI\nMOV R13D,EDI\nMOV RDI,qword ptr [RBP]\nCALL 0x00404f80\nMOV EDI,0x6\nMOV ESI,0x40d829\nCALL 0x00402010\nMOV EDI,0x40c338\nMOV ESI,0x40c316\nCALL 0x00401d00\nMOV EDI,0x40c338\nCALL 0x00401cd0\nCALL 0x00401c90\nMOV RAX,qword ptr [RAX]\nCMP byte ptr [RAX],0x0\nMOV EDI,0x40cc27\nCMOVNZ RDI,RAX\nMOV qword ptr [0x006113d0],RDI\nCALL 0x00401d30\nMOV qword ptr [0x006113d8],RAX\nMOV EDI,0x404b30\nCALL 0x0040af10\nXOR R14D,R14D\nXOR EBX,EBX\nXOR R15D,R15D\nJMP 0x004026b0\nMOV R15,qword ptr [0x00611398]\nMOV byte ptr [0x006113e0],AL\nMOV qword ptr [0x00611310],RCX\nJMP 0x004026b0\nMOV R14B,0x1\nJMP 0x004026b0\nMOV BL,0x1\nNOP dword ptr [RAX]\nMOV EDX,0x40c32e\nMOV ECX,0x40b710\nXOR R8D,R8D\nMOV EDI,R13D\nMOV RSI,RBP\nCALL 0x00401d70\nCMP EAX,0x4b\nJLE 0x00402700\nLEA ECX,[RAX + -0x63]\nCMP ECX,0x1d\nJA 0x004026e5\nJMP qword ptr [0x40af90 + RCX*0x8]\nXOR EAX,EAX\nMOV ECX,0x40d828\nJMP 0x00402690\nCMP EAX,0x4c\nJNZ 0x00402803\nMOV byte ptr [0x006113e1],0x1\nJMP 0x004026b0\nMOV AL,0x1\nMOV ECX,0x40d829\nJMP 0x00402690\nCMP EAX,-0x1\nJNZ 0x004027bf\nCMP dword ptr [0x00611390],R13D\nJZ 0x0040280d\nTEST R15,R15\nMOV R12,R15\nJNZ 0x00402753\nXOR R12D,R12D\nTEST R14B,R14B\nSETNZ R12B\nMOV RAX,RBX\nXOR EBX,EBX\nTEST AL,AL\nSETNZ BL\nXOR EDX,EDX\nMOV EDI,R12D\nMOV ESI,EBX\nCALL 0x00402840\nMOV R15,RAX\nMOV EDX,0x1\nMOV EDI,R12D\nMOV ESI,EBX\nCALL 0x00402840\nMOV R12,RAX\nMOVSXD RAX,dword ptr [0x00611390]\nCMP EAX,R13D\nJGE 0x004027aa\nLEA RBX,[RBP + RAX*0x8]\nSUB R13D,EAX\nMOV BPL,0x1\nNOP word ptr [RAX + RAX*0x1]\nTEST R14B,R14B\nMOV RDI,qword ptr [RBX]\nMOV RSI,R15\nJZ 0x00402790\nCALL 0x00402950\nJMP 0x00402798\nMOV RDX,R12\nCALL 0x00402a20\nAND BPL,AL\nADD RBX,0x8\nDEC R13D\nJNZ 0x00402770\nXOR BPL,0x1\nJMP 0x004027ac\nXOR EBP,EBP\nMOVZX EAX,BPL\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCMP EAX,0xffffff7d\nJZ 0x004027d4\nCMP EAX,0xffffff7e\nJNZ 0x00402803\nXOR EDI,EDI\nCALL 0x00402290\nMOV RDI,qword ptr [0x00611388]\nMOV RCX,qword ptr [0x00611318]\nMOV ESI,0x40c311\nMOV EDX,0x40c334\nMOV R8D,0x40c342\nXOR R9D,R9D\nXOR EAX,EAX\nCALL 0x00408840\nXOR EDI,EDI\nCALL 0x004020e0\nMOV EDI,0x1\nCALL 0x00402290\nXOR EDI,EDI\nMOV ESI,0x40c351\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00402050\nMOV EDI,0x1\nCALL 0x00402290\nNOP dword ptr [RAX]\n'
p1579
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n48 89 f5\n41 89 fd\n48 8b 7d 00\ne8 56 29 00 00\nbf 06 00 00 00\nbe 29 d8 40 00\ne8 d7 f9 ff ff\nbf 38 c3 40 00\nbe 16 c3 40 00\ne8 b8 f6 ff ff\nbf 38 c3 40 00\ne8 7e f6 ff ff\ne8 39 f6 ff ff\n48 8b 00\n80 38 00\nbf 27 cc 40 00\n48 0f 45 f8\n48 89 3d 63 ed 20 00\ne8 be f6 ff ff\n48 89 05 5f ed 20 00\nbf 30 4b 40 00\ne8 8d 88 00 00\n45 31 f6\n31 db\n45 31 ff\neb 23\n4c 8b 3d 01 ed 20 00\n88 05 43 ed 20 00\n48 89 0d 6c ec 20 00\neb 0a\n41 b6 01\neb 05\nb3 01\n0f 1f 00\nba 2e c3 40 00\nb9 10 b7 40 00\n45 31 c0\n44 89 ef\n48 89 ee\ne8 a8 f6 ff ff\n83 f8 4b\n7e 33\n8d 48 9d\n83 f9 1d\n77 10\nff 24 cd 90 af 40 00\n31 c0\nb9 28 d8 40 00\neb ab\n83 f8 4c\n0f 85 15 01 00 00\nc6 05 ec ec 20 00 01\neb b9\nb0 01\nb9 29 d8 40 00\neb 90\n83 f8 ff\n0f 85 b6 00 00 00\n44 39 2d 80 ec 20 00\n0f 84 f7 00 00 00\n4d 85 ff\n4d 89 fc\n75 35\n45 31 e4\n45 84 f6\n41 0f 95 c4\n48 89 d8\n31 db\n84 c0\n0f 95 c3\n31 d2\n44 89 e7\n89 de\ne8 02 01 00 00\n49 89 c7\nba 01 00 00 00\n44 89 e7\n89 de\ne8 f0 00 00 00\n49 89 c4\n48 63 05 36 ec 20 00\n44 39 e8\n7d 4b\n48 8d 5c c5 00\n41 29 c5\n40 b5 01\n66 0f 1f 44 00 00\n45 84 f6\n48 8b 3b\n4c 89 fe\n74 15\ne8 d0 01 00 00\neb 16\n4c 89 e2\ne8 88 02 00 00\n40 20 c5\n48 83 c3 08\n41 ff cd\n75 cc\n40 80 f5 01\neb 02\n31 ed\n40 0f b6 c5\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n3d 7d ff ff ff\n74 0e\n3d 7e ff ff ff\n75 36\n31 ff\ne8 bc fa ff ff\n48 8b 3d ad eb 20 00\n48 8b 0d 36 eb 20 00\nbe 11 c3 40 00\nba 34 c3 40 00\n41 b8 42 c3 40 00\n45 31 c9\n31 c0\ne8 44 60 00 00\n31 ff\ne8 dd f8 ff ff\nbf 01 00 00 00\ne8 83 fa ff ff\n31 ff\nbe 51 c3 40 00\nba 05 00 00 00\ne8 f2 f4 ff ff\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ca\ne8 21 f8 ff ff\nbf 01 00 00 00\ne8 57 fa ff ff\n0f 1f 80 00 00 00 00\n'
p1580
S'.text:0000000000402610\n.text:0000000000402611\n.text:0000000000402613\n.text:0000000000402615\n.text:0000000000402617\n.text:0000000000402619\n.text:000000000040261a\n.text:000000000040261b\n.text:000000000040261e\n.text:0000000000402621\n.text:0000000000402625\n.text:000000000040262a\n.text:000000000040262f\n.text:0000000000402634\n.text:0000000000402639\n.text:000000000040263e\n.text:0000000000402643\n.text:0000000000402648\n.text:000000000040264d\n.text:0000000000402652\n.text:0000000000402657\n.text:000000000040265a\n.text:000000000040265d\n.text:0000000000402662\n.text:0000000000402666\n.text:000000000040266d\n.text:0000000000402672\n.text:0000000000402679\n.text:000000000040267e\n.text:0000000000402683\n.text:0000000000402686\n.text:0000000000402688\n.text:000000000040268b\n.text:0000000000402690\n.text:0000000000402697\n.text:000000000040269d\n.text:00000000004026a4\n.text:00000000004026a6\n.text:00000000004026a9\n.text:00000000004026ab\n.text:00000000004026ad\n.text:00000000004026b0\n.text:00000000004026b5\n.text:00000000004026ba\n.text:00000000004026bd\n.text:00000000004026c0\n.text:00000000004026c3\n.text:00000000004026c8\n.text:00000000004026cb\n.text:00000000004026cd\n.text:00000000004026d0\n.text:00000000004026d3\n.text:00000000004026d5\n.text:00000000004026dc\n.text:00000000004026de\n.text:00000000004026e3\n.text:00000000004026e5\n.text:00000000004026e8\n.text:00000000004026ee\n.text:00000000004026f5\n.text:00000000004026f7\n.text:00000000004026f9\n.text:00000000004026fe\n.text:0000000000402700\n.text:0000000000402703\n.text:0000000000402709\n.text:0000000000402710\n.text:0000000000402716\n.text:0000000000402719\n.text:000000000040271c\n.text:000000000040271e\n.text:0000000000402721\n.text:0000000000402724\n.text:0000000000402728\n.text:000000000040272b\n.text:000000000040272d\n.text:000000000040272f\n.text:0000000000402732\n.text:0000000000402734\n.text:0000000000402737\n.text:0000000000402739\n.text:000000000040273e\n.text:0000000000402741\n.text:0000000000402746\n.text:0000000000402749\n.text:000000000040274b\n.text:0000000000402750\n.text:0000000000402753\n.text:000000000040275a\n.text:000000000040275d\n.text:000000000040275f\n.text:0000000000402764\n.text:0000000000402767\n.text:000000000040276a\n.text:0000000000402770\n.text:0000000000402773\n.text:0000000000402776\n.text:0000000000402779\n.text:000000000040277b\n.text:0000000000402780\n.text:0000000000402790\n.text:0000000000402793\n.text:0000000000402798\n.text:000000000040279b\n.text:000000000040279f\n.text:00000000004027a2\n.text:00000000004027a4\n.text:00000000004027a8\n.text:00000000004027aa\n.text:00000000004027ac\n.text:00000000004027b0\n.text:00000000004027b4\n.text:00000000004027b5\n.text:00000000004027b7\n.text:00000000004027b9\n.text:00000000004027bb\n.text:00000000004027bd\n.text:00000000004027be\n.text:00000000004027bf\n.text:00000000004027c4\n.text:00000000004027c6\n.text:00000000004027cb\n.text:00000000004027cd\n.text:00000000004027cf\n.text:00000000004027d4\n.text:00000000004027db\n.text:00000000004027e2\n.text:00000000004027e7\n.text:00000000004027ec\n.text:00000000004027f2\n.text:00000000004027f5\n.text:00000000004027f7\n.text:00000000004027fc\n.text:00000000004027fe\n.text:0000000000402803\n.text:0000000000402808\n.text:000000000040280d\n.text:000000000040280f\n.text:0000000000402814\n.text:0000000000402819\n.text:000000000040281e\n.text:0000000000402821\n.text:0000000000402823\n.text:0000000000402825\n.text:0000000000402827\n.text:000000000040282a\n.text:000000000040282f\n.text:0000000000402834\n.text:0000000000402839\n'
p1581
tp1582
sS'human_access'
p1583
(S'\n__stdcall human_access()\n'
p1584
V\u000achar * human_access(void)\u000a\u000a{\u000a  char modebuf [12];\u000a  char *in_RAX;\u000a  stat *statp;\u000a  \u000a  filemodestring(statp,(char *)0x61140d);\u000a  return in_RAX;\u000a}\u000a\u000a
p1585
S'PUSH RAX\nMOV ESI,0x61140d\nCALL 0x00404eb0\nMOV byte ptr [0x00611417],0x0\nPOP RAX\nRET\n'
p1586
S'50\nbe 0d 14 61 00\ne8 f5 0d 00 00\nc6 05 55 d3 20 00 00\n58\nc3\n'
p1587
S'.text:00000000004040b0\n.text:00000000004040b1\n.text:00000000004040b6\n.text:00000000004040bb\n.text:00000000004040c2\n.text:00000000004040c3\n'
p1588
tp1589
sS'xcharalloc'
p1590
(S'\n__stdcall xcharalloc(size_t n)\n'
p1591
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1592
S'JMP 0x00408970\n'
p1593
S'e9 2b ff ff ff\n'
p1594
S'.text:0000000000408a40\n'
p1595
tp1596
sS'c_isupper'
p1597
(S'\n__stdcall c_isupper()\n'
p1598
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1599
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1600
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1601
S'.text:0000000000409c90\n.text:0000000000409c93\n.text:0000000000409c96\n.text:0000000000409c99\n'
p1602
tp1603
sS'time_t_int_add_ok'
p1604
(S'\n__stdcall time_t_int_add_ok(time_t a)\n'
p1605
V\u000aint time_t_int_add_ok(time_t a)\u000a\u000a{\u000a  uint in_ESI;\u000a  \u000a  return (int)((uint)((ulong)((long)(int)(((uint)a & in_ESI & 1) + ((int)in_ESI >> 1)) + (a >> 1) +\u000a                             0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p1606
S'MOV EAX,EDI\nAND EAX,ESI\nSAR RDI,1\nSAR ESI,1\nAND EAX,0x1\nADD EAX,ESI\nMOVSXD RCX,EAX\nADD RCX,RDI\nMOV RAX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nRET\n'
p1607
S'89 f8\n21 f0\n48 d1 ff\nd1 fe\n83 e0 01\n01 f0\n48 63 c8\n48 01 f9\n48 b8 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\nc3\n'
p1608
S'.text:000000000040ad80\n.text:000000000040ad82\n.text:000000000040ad84\n.text:000000000040ad87\n.text:000000000040ad89\n.text:000000000040ad8c\n.text:000000000040ad8e\n.text:000000000040ad91\n.text:000000000040ad94\n.text:000000000040ad9e\n.text:000000000040ada1\n.text:000000000040ada5\n.text:000000000040ada8\n'
p1609
tp1610
sS'c_isalnum'
p1611
(S'\n__stdcall c_isalnum()\n'
p1612
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1613
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x00409bab\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x00409bab\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x00409baa\nXOR EAX,EAX\nRET\n'
p1614
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p1615
S'.text:0000000000409b90\n.text:0000000000409b92\n.text:0000000000409b95\n.text:0000000000409b98\n.text:0000000000409b9a\n.text:0000000000409ba4\n.text:0000000000409ba8\n.text:0000000000409baa\n.text:0000000000409bab\n.text:0000000000409bae\n.text:0000000000409bb1\n.text:0000000000409bb3\n.text:0000000000409bb5\n'
p1616
tp1617
sS'getpwuid'
p1618
(S'\n__stdcall getpwuid(__uid_t __uid)\n'
p1619
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000apasswd * getpwuid(__uid_t __uid)\u000a\u000a{\u000a  passwd *ppVar1;\u000a  \u000a  ppVar1 = (passwd *)(*(code *)PTR_getpwuid_006110b0)();\u000a  return ppVar1;\u000a}\u000a\u000a
p1620
S'JMP qword ptr [0x006110b0]\n'
p1621
S'ff 25 ba f3 20 00\n'
p1622
S'.plt:0000000000401cf0\n'
p1623
tp1624
sS'freecon'
p1625
(S'\n__stdcall freecon(security_context_t con)\n'
p1626
V\u000avoid freecon(security_context_t con)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1627
S'RET\n'
p1628
S'c3\n'
p1629
S'.text:0000000000406930\n'
p1630
tp1631
sS'file_type'
p1632
(S'\n__stdcall file_type(stat * st)\n'
p1633
V\u000achar * file_type(stat *st)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = "directory";\u000a  switch((st->st_mode & 0xf000) - 0x1000 >> 0xc) {\u000a  case 0:\u000a    pcVar1 = "fifo";\u000a    break;\u000a  case 1:\u000a    pcVar1 = "character special file";\u000a    break;\u000a  default:\u000a    pcVar1 = "weird file";\u000a    break;\u000a  case 3:\u000a    break;\u000a  case 5:\u000a    pcVar1 = "block special file";\u000a    break;\u000a  case 7:\u000a    pcVar1 = "regular file";\u000a    if (st->st_size == 0) {\u000a      pcVar1 = "regular empty file";\u000a    }\u000a    break;\u000a  case 9:\u000a    pcVar1 = "symbolic link";\u000a    break;\u000a  case 0xb:\u000a    pcVar1 = "socket";\u000a  }\u000a  pcVar1 = (char *)dcgettext(0,pcVar1,5);\u000a  return pcVar1;\u000a}\u000a\u000a
p1634
S'MOV EAX,0xf000\nAND EAX,dword ptr [RDI + 0x18]\nADD EAX,0xfffff000\nSHR EAX,0xc\nCMP EAX,0xb\nJA 0x00404d6f\nMOV ESI,0x40cc4d\nJMP qword ptr [0x40cc70 + RAX*0x8]\nMOV ESI,0x40cd28\nJMP 0x00404d9e\nMOV ESI,0x40cd11\nJMP 0x00404d9e\nMOV ESI,0x40cd34\nJMP 0x00404d9e\nMOV ESI,0x40ccfe\nJMP 0x00404d9e\nMOV ESI,0x40ccf0\nJMP 0x00404d9e\nMOV ESI,0x40cd2d\nJMP 0x00404d9e\nCMP qword ptr [RDI + 0x30],0x0\nMOV EAX,0x40ccd0\nMOV ESI,0x40cce3\nCMOVZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nJMP 0x00401d10\n'
p1635
S'b8 00 f0 00 00\n23 47 18\n05 00 f0 ff ff\nc1 e8 0c\n83 f8 0b\n77 1a\nbe 4d cc 40 00\nff 24 c5 70 cc 40 00\nbe 28 cd 40 00\neb 36\nbe 11 cd 40 00\neb 2f\nbe 34 cd 40 00\neb 28\nbe fe cc 40 00\neb 21\nbe f0 cc 40 00\neb 1a\nbe 2d cd 40 00\neb 13\n48 83 7f 30 00\nb8 d0 cc 40 00\nbe e3 cc 40 00\n48 0f 44 f0\n31 ff\nba 05 00 00 00\ne9 66 cf ff ff\n'
p1636
S'.text:0000000000404d40\n.text:0000000000404d45\n.text:0000000000404d48\n.text:0000000000404d4d\n.text:0000000000404d50\n.text:0000000000404d53\n.text:0000000000404d55\n.text:0000000000404d5a\n.text:0000000000404d61\n.text:0000000000404d66\n.text:0000000000404d68\n.text:0000000000404d6d\n.text:0000000000404d6f\n.text:0000000000404d74\n.text:0000000000404d76\n.text:0000000000404d7b\n.text:0000000000404d7d\n.text:0000000000404d82\n.text:0000000000404d84\n.text:0000000000404d89\n.text:0000000000404d8b\n.text:0000000000404d90\n.text:0000000000404d95\n.text:0000000000404d9a\n.text:0000000000404d9e\n.text:0000000000404da0\n.text:0000000000404da5\n'
p1637
tp1638
sS'__errno_location'
p1639
(S'\n__stdcall __errno_location()\n'
p1640
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00611048)();\u000a  return piVar1;\u000a}\u000a\u000a
p1641
S'JMP qword ptr [0x00611048]\n'
p1642
S'ff 25 22 f4 20 00\n'
p1643
S'.plt:0000000000401c20\n'
p1644
tp1645
sS'x2nrealloc'
p1646
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p1647
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p1648
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x00408a0c\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00408a39\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x00408a2a\nTEST RCX,RCX\nJNZ 0x00408a2a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x004089b0\nPUSH RAX\nCALL 0x00408b00\n'
p1649
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p1650
S'.text:00000000004089e0\n.text:00000000004089e3\n.text:00000000004089e6\n.text:00000000004089e9\n.text:00000000004089eb\n.text:00000000004089f5\n.text:00000000004089f7\n.text:00000000004089fa\n.text:00000000004089fd\n.text:00000000004089ff\n.text:0000000000408a02\n.text:0000000000408a05\n.text:0000000000408a0a\n.text:0000000000408a0c\n.text:0000000000408a0f\n.text:0000000000408a11\n.text:0000000000408a16\n.text:0000000000408a18\n.text:0000000000408a1b\n.text:0000000000408a1d\n.text:0000000000408a24\n.text:0000000000408a27\n.text:0000000000408a2a\n.text:0000000000408a2d\n.text:0000000000408a31\n.text:0000000000408a34\n.text:0000000000408a39\n.text:0000000000408a3a\n'
p1651
tp1652
sS'quotearg_n_options'
p1653
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p1654
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p1655
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x00401c20\nTEST R12D,R12D\nJS 0x00406131\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x00611328]\nCMP dword ptr [0x00611330],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x0040604b\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x611338\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x004089b0\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x00611328],R15\nJNZ 0x00406012\nMOVUPS XMM0,xmmword ptr [0x00611338]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x00611330]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x00401df0\nMOV dword ptr [0x00611330],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x004051a0\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x004060ad\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x0040611b\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x6114c0\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x004060d8\nCALL 0x00401be0\nMOV RDI,R15\nCALL 0x00408a40\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x004051a0\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401c10\n'
p1656
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 81 bc ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 6e b3 20 00\n44 39 25 6f b3 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 38 13 61 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 b8 29 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d 23 b3 20 00\n75 0b\n0f 10 05 2a b3 20 00\n41 0f 11 07\n8b 05 18 b3 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 bd bd ff ff\n89 1d f7 b2 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 c0 14 61 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 08 bb ff ff\n4c 89 ff\ne8 60 29 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 da ba ff ff\n'
p1657
S'.text:0000000000405f80\n.text:0000000000405f81\n.text:0000000000405f83\n.text:0000000000405f85\n.text:0000000000405f87\n.text:0000000000405f89\n.text:0000000000405f8a\n.text:0000000000405f8e\n.text:0000000000405f91\n.text:0000000000405f94\n.text:0000000000405f97\n.text:0000000000405f9a\n.text:0000000000405f9f\n.text:0000000000405fa2\n.text:0000000000405fa8\n.text:0000000000405fad\n.text:0000000000405faf\n.text:0000000000405fb3\n.text:0000000000405fba\n.text:0000000000405fc1\n.text:0000000000405fc6\n.text:0000000000405fcb\n.text:0000000000405fd0\n.text:0000000000405fd2\n.text:0000000000405fd7\n.text:0000000000405fda\n.text:0000000000405fdd\n.text:0000000000405fe3\n.text:0000000000405fe5\n.text:0000000000405fe8\n.text:0000000000405fec\n.text:0000000000405fef\n.text:0000000000405ff3\n.text:0000000000405ff8\n.text:0000000000405ffb\n.text:0000000000405ffe\n.text:0000000000406005\n.text:0000000000406007\n.text:000000000040600e\n.text:0000000000406012\n.text:0000000000406018\n.text:000000000040601b\n.text:000000000040601f\n.text:0000000000406022\n.text:0000000000406025\n.text:0000000000406029\n.text:000000000040602b\n.text:000000000040602e\n.text:0000000000406033\n.text:0000000000406039\n.text:000000000040603c\n.text:0000000000406041\n.text:0000000000406046\n.text:000000000040604b\n.text:000000000040604e\n.text:0000000000406052\n.text:0000000000406056\n.text:000000000040605b\n.text:000000000040605f\n.text:0000000000406063\n.text:0000000000406067\n.text:000000000040606b\n.text:000000000040606f\n.text:0000000000406074\n.text:0000000000406077\n.text:000000000040607a\n.text:000000000040607d\n.text:0000000000406082\n.text:0000000000406085\n.text:0000000000406088\n.text:000000000040608b\n.text:000000000040608c\n.text:0000000000406091\n.text:0000000000406095\n.text:0000000000406098\n.text:000000000040609b\n.text:000000000040609d\n.text:00000000004060a2\n.text:00000000004060a6\n.text:00000000004060ab\n.text:00000000004060ad\n.text:00000000004060b1\n.text:00000000004060b6\n.text:00000000004060b9\n.text:00000000004060bc\n.text:00000000004060c1\n.text:00000000004060c6\n.text:00000000004060c9\n.text:00000000004060ce\n.text:00000000004060d1\n.text:00000000004060d3\n.text:00000000004060d8\n.text:00000000004060db\n.text:00000000004060e0\n.text:00000000004060e3\n.text:00000000004060e6\n.text:00000000004060eb\n.text:00000000004060ee\n.text:00000000004060f2\n.text:00000000004060f5\n.text:00000000004060f8\n.text:00000000004060fd\n.text:0000000000406102\n.text:0000000000406107\n.text:000000000040610a\n.text:000000000040610d\n.text:000000000040610e\n.text:0000000000406113\n.text:0000000000406117\n.text:000000000040611b\n.text:000000000040611f\n.text:0000000000406122\n.text:0000000000406126\n.text:0000000000406127\n.text:0000000000406129\n.text:000000000040612b\n.text:000000000040612d\n.text:000000000040612f\n.text:0000000000406130\n.text:0000000000406131\n'
p1658
tp1659
sS'strcmp'
p1660
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1661
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_00611188)();\u000a  return iVar1;\u000a}\u000a\u000a
p1662
S'JMP qword ptr [0x00611188]\n'
p1663
S'ff 25 e2 f2 20 00\n'
p1664
S'.plt:0000000000401ea0\n'
p1665
tp1666
sS'mktime_z'
p1667
(S'\n__stdcall mktime_z(timezone_t tz, tm * tm)\n'
p1668
V\u000atime_t mktime_z(timezone_t tz,tm *tm)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  time_t tVar3;\u000a  timezone_t tz_00;\u000a  tm *ptVar4;\u000a  time_t local_58;\u000a  tm local_50;\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    tVar3 = (*(code *)PTR_timegm_00611250)(tm);\u000a    return tVar3;\u000a  }\u000a  tz_00 = set_tz(tz);\u000a  if (tz_00 != (timezone_t)0x0) {\u000a    local_58 = rpl_mktime(tm);\u000a    if (((local_58 != -1) ||\u000a        ((ptVar4 = localtime_r(&local_58,&local_50), ptVar4 != (tm *)0x0 &&\u000a         (iVar2 = equal_tm(tm,(tm *)&local_50), iVar2 != 0)))) &&\u000a       (_Var1 = save_abbr(tz,tm), _Var1 == false)) {\u000a      local_58 = -1;\u000a    }\u000a    _Var1 = revert_tz(tz_00);\u000a    if (_Var1 != false) {\u000a      return local_58;\u000a    }\u000a  }\u000a  return -1;\u000a}\u000a\u000a
p1669
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R15,RSI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00409a5f\nMOV RDI,RBX\nCALL 0x00409830\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00409aa5\nMOV RDI,R15\nCALL 0x0040adb0\nMOV qword ptr [RSP],RAX\nCMP RAX,-0x1\nJZ 0x00409a70\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x004098b0\nTEST AL,AL\nJNZ 0x00409a93\nMOV qword ptr [RSP],-0x1\nJMP 0x00409a93\nMOV RDI,R15\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00402030\nMOV RDI,RSP\nLEA RSI,[RSP + 0x8]\nCALL 0x00401c40\nTEST RAX,RAX\nJZ 0x00409a93\nLEA RSI,[RSP + 0x8]\nMOV RDI,R15\nCALL 0x00409ac0\nTEST EAX,EAX\nJNZ 0x00409a46\nMOV RDI,R14\nCALL 0x004099c0\nTEST AL,AL\nJZ 0x00409aa5\nMOV RAX,qword ptr [RSP]\nJMP 0x00409aac\nMOV RAX,-0x1\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1670
S'41 57\n41 56\n53\n48 83 ec 40\n49 89 f7\n48 89 fb\n48 85 db\n74 3b\n48 89 df\ne8 04 fe ff ff\n49 89 c6\n4d 85 f6\n74 71\n4c 89 ff\ne8 74 13 00 00\n48 89 04 24\n48 83 f8 ff\n74 2a\n48 89 df\n4c 89 fe\ne8 5f fe ff ff\n84 c0\n75 3e\n48 c7 04 24 ff ff ff ff\neb 34\n4c 89 ff\n48 83 c4 40\n5b\n41 5e\n41 5f\ne9 c0 85 ff ff\n48 89 e7\n48 8d 74 24 08\ne8 c3 81 ff ff\n48 85 c0\n74 11\n48 8d 74 24 08\n4c 89 ff\ne8 31 00 00 00\n85 c0\n75 b3\n4c 89 f7\ne8 25 ff ff ff\n84 c0\n74 06\n48 8b 04 24\neb 07\n48 c7 c0 ff ff ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p1671
S'.text:0000000000409a10\n.text:0000000000409a12\n.text:0000000000409a14\n.text:0000000000409a15\n.text:0000000000409a19\n.text:0000000000409a1c\n.text:0000000000409a1f\n.text:0000000000409a22\n.text:0000000000409a24\n.text:0000000000409a27\n.text:0000000000409a2c\n.text:0000000000409a2f\n.text:0000000000409a32\n.text:0000000000409a34\n.text:0000000000409a37\n.text:0000000000409a3c\n.text:0000000000409a40\n.text:0000000000409a44\n.text:0000000000409a46\n.text:0000000000409a49\n.text:0000000000409a4c\n.text:0000000000409a51\n.text:0000000000409a53\n.text:0000000000409a55\n.text:0000000000409a5d\n.text:0000000000409a5f\n.text:0000000000409a62\n.text:0000000000409a66\n.text:0000000000409a67\n.text:0000000000409a69\n.text:0000000000409a6b\n.text:0000000000409a70\n.text:0000000000409a73\n.text:0000000000409a78\n.text:0000000000409a7d\n.text:0000000000409a80\n.text:0000000000409a82\n.text:0000000000409a87\n.text:0000000000409a8a\n.text:0000000000409a8f\n.text:0000000000409a91\n.text:0000000000409a93\n.text:0000000000409a96\n.text:0000000000409a9b\n.text:0000000000409a9d\n.text:0000000000409a9f\n.text:0000000000409aa3\n.text:0000000000409aa5\n.text:0000000000409aac\n.text:0000000000409ab0\n.text:0000000000409ab1\n.text:0000000000409ab3\n.text:0000000000409ab5\n'
p1672
tp1673
sS'set_custom_quoting'
p1674
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1675
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1676
S'TEST RDI,RDI\nMOV EAX,0x611480\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x00405115\nTEST RDX,RDX\nJZ 0x00405115\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x00401c10\n'
p1677
S'48 85 ff\nb8 80 14 61 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 f5 ca ff ff\n'
p1678
S'.text:00000000004050f0\n.text:00000000004050f3\n.text:00000000004050f8\n.text:00000000004050fc\n.text:0000000000405102\n.text:0000000000405105\n.text:0000000000405107\n.text:000000000040510a\n.text:000000000040510c\n.text:0000000000405110\n.text:0000000000405114\n.text:0000000000405115\n.text:0000000000405116\n'
p1679
tp1680
sS'c_isalpha'
p1681
(S'\n__stdcall c_isalpha()\n'
p1682
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1683
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x00409bdb\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1684
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1685
S'.text:0000000000409bc0\n.text:0000000000409bc3\n.text:0000000000409bc6\n.text:0000000000409bc8\n.text:0000000000409bd2\n.text:0000000000409bd4\n.text:0000000000409bd7\n.text:0000000000409bda\n.text:0000000000409bdb\n.text:0000000000409bdd\n'
p1686
tp1687
sS'ftypelet'
p1688
(S'\n__stdcall ftypelet()\n'
p1689
V\u000achar ftypelet(void)\u000a\u000a{\u000a  uint uVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  uVar1 = ((uint)in_RDI & 0xf000) - 0x1000;\u000a  if (uVar1 < 0xc000) {\u000a    return "pc?d?b?-?l?sA NULL argv[0] was passed through an exec system call.\u005cn"\u000a           [(ulong)(uVar1 >> 0xc)];\u000a  }\u000a  return '?';\u000a}\u000a\u000a
p1690
S'AND EDI,0xf000\nADD EDI,0xfffff000\nCMP EDI,0xbfff\nJA 0x00404e9e\nSHR EDI,0xc\nMOV AL,byte ptr [0x40cd3f + RDI]\nRET\nMOV AL,0x3f\nRET\n'
p1691
S'81 e7 00 f0 00 00\n81 c7 00 f0 ff ff\n81 ff ff bf 00 00\n77 0a\nc1 ef 0c\n8a 87 3f cd 40 00\nc3\nb0 3f\nc3\n'
p1692
S'.text:0000000000404e80\n.text:0000000000404e86\n.text:0000000000404e8c\n.text:0000000000404e92\n.text:0000000000404e94\n.text:0000000000404e97\n.text:0000000000404e9d\n.text:0000000000404e9e\n.text:0000000000404ea0\n'
p1693
tp1694
sS'quotearg_custom_mem'
p1695
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p1696
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1697
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x00406390\n'
p1698
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p1699
S'.text:0000000000406420\n.text:0000000000406423\n.text:0000000000406426\n.text:0000000000406429\n.text:000000000040642c\n.text:000000000040642e\n.text:0000000000406431\n'
p1700
tp1701
sS'read_file_system_list'
p1702
(S'\n__stdcall read_file_system_list()\n'
p1703
V\u000amount_entry * read_file_system_list(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  __ssize_t _Var3;\u000a  char *__s1;\u000a  char *pcVar4;\u000a  ulonglong uVar5;\u000a  int *piVar6;\u000a  long lVar7;\u000a  long lVar8;\u000a  mount_entry *pmVar9;\u000a  char **ppcVar10;\u000a  FILE *fp;\u000a  mount_entry **ppmVar11;\u000a  bool bVar12;\u000a  bool bVar13;\u000a  int target_s;\u000a  int mntroot_s;\u000a  int source_s;\u000a  int target_e;\u000a  int mntroot_e;\u000a  int source_e;\u000a  int type_e;\u000a  int type_s;\u000a  undefined8 uVar14;\u000a  undefined local_81;\u000a  char *local_80;\u000a  int local_74;\u000a  mount_entry *local_70;\u000a  int local_64;\u000a  int local_60;\u000a  int local_5c;\u000a  int local_58;\u000a  int local_54;\u000a  int local_50;\u000a  int local_4c;\u000a  uint local_48;\u000a  uint local_44;\u000a  size_t local_40;\u000a  FILE *local_38;\u000a  \u000a  fp = (FILE *)fopen("/proc/self/mountinfo","r");\u000a  if (fp == (FILE *)0x0) {\u000a    lVar7 = setmntent("/etc/mtab",0x40cc66);\u000a    if (lVar7 == 0) {\u000a      return (mount_entry *)0x0;\u000a    }\u000a    ppcVar10 = (char **)getmntent(lVar7);\u000a    if (ppcVar10 == (char **)0x0) {\u000a      ppmVar11 = &local_70;\u000a    }\u000a    else {\u000a      ppmVar11 = &local_70;\u000a      do {\u000a        lVar8 = hasmntopt(ppcVar10,&DAT_0040db84);\u000a        pmVar9 = (mount_entry *)xmalloc(0x38);\u000a        __s1 = xstrdup(*ppcVar10);\u000a        pmVar9->me_devname = __s1;\u000a        __s1 = xstrdup(ppcVar10[1]);\u000a        pmVar9->me_mountdir = __s1;\u000a        pmVar9->me_mntroot = (char *)0x0;\u000a        __s1 = xstrdup(ppcVar10[2]);\u000a        pmVar9->me_type = __s1;\u000a        *(byte *)&pmVar9->me_dummy_bitfield = *(byte *)&pmVar9->me_dummy_bitfield | 4;\u000a        iVar2 = strcmp(__s1,"autofs");\u000a        bVar13 = true;\u000a        bVar12 = true;\u000a        if (iVar2 != 0) {\u000a          iVar2 = strcmp(__s1,"proc");\u000a          bVar12 = true;\u000a          if (iVar2 != 0) {\u000a            iVar2 = strcmp(__s1,"subfs");\u000a            bVar12 = true;\u000a            if (iVar2 != 0) {\u000a              iVar2 = strcmp(__s1,"debugfs");\u000a              bVar12 = true;\u000a              if (iVar2 != 0) {\u000a                iVar2 = strcmp(__s1,"devpts");\u000a                bVar12 = true;\u000a                if (iVar2 != 0) {\u000a                  iVar2 = strcmp(__s1,"fusectl");\u000a                  bVar12 = true;\u000a                  if (iVar2 != 0) {\u000a                    iVar2 = strcmp(__s1,"mqueue");\u000a                    bVar12 = true;\u000a                    if (iVar2 != 0) {\u000a                      iVar2 = strcmp(__s1,"rpc_pipefs");\u000a                      bVar12 = true;\u000a                      if (iVar2 != 0) {\u000a                        iVar2 = strcmp(__s1,"sysfs");\u000a                        bVar12 = true;\u000a                        if (iVar2 != 0) {\u000a                          iVar2 = strcmp(__s1,"devfs");\u000a                          bVar12 = true;\u000a                          if (iVar2 != 0) {\u000a                            iVar2 = strcmp(__s1,"kernfs");\u000a                            bVar12 = true;\u000a                            if (iVar2 != 0) {\u000a                              iVar2 = strcmp(__s1,"ignore");\u000a                              bVar12 = true;\u000a                              if (iVar2 != 0) {\u000a                                iVar2 = strcmp(__s1,"none");\u000a                                bVar12 = lVar8 == 0 && iVar2 == 0;\u000a                              }\u000a                            }\u000a                          }\u000a                        }\u000a                      }\u000a                    }\u000a                  }\u000a                }\u000a              }\u000a            }\u000a          }\u000a        }\u000a        *(byte *)&pmVar9->me_dummy_bitfield = *(byte *)&pmVar9->me_dummy_bitfield & 0xfe | bVar12;\u000a        __s1 = pmVar9->me_devname;\u000a        pcVar4 = strchr(__s1,0x3a);\u000a        if (pcVar4 == (char *)0x0) {\u000a          if ((*__s1 == '/') && (__s1[1] == '/')) {\u000a            __s1 = pmVar9->me_type;\u000a            iVar2 = strcmp(__s1,"smbfs");\u000a            if (iVar2 != 0) {\u000a              iVar2 = strcmp(__s1,"cifs");\u000a              bVar13 = iVar2 == 0;\u000a            }\u000a          }\u000a          else {\u000a            bVar13 = false;\u000a          }\u000a        }\u000a        *(byte *)&pmVar9->me_dummy_bitfield =\u000a             *(byte *)&pmVar9->me_dummy_bitfield & 0xfd | bVar13 * 2;\u000a        pmVar9->me_dev = 0xffffffffffffffff;\u000a        *ppmVar11 = pmVar9;\u000a        ppmVar11 = &pmVar9->me_next;\u000a        ppcVar10 = (char **)getmntent(lVar7);\u000a      } while (ppcVar10 != (char **)0x0);\u000a    }\u000a    iVar2 = endmntent(lVar7);\u000a    if (iVar2 != 0) {\u000aLAB_004095e4:\u000a      *ppmVar11 = (mount_entry *)0x0;\u000a      return local_70;\u000a    }\u000a  }\u000a  else {\u000a    local_80 = (char *)0x0;\u000a    local_40 = 0;\u000a    uVar14 = 0x408fad;\u000a    _Var3 = getline(&local_80,&local_40,(FILE *)fp);\u000a    ppmVar11 = &local_70;\u000a    if (_Var3 != -1) {\u000a      local_38 = fp;\u000a      do {\u000a        uVar1 = sscanf(local_80,"%*u %*u %u:%u %n%*s%n %n%*s%n%c",&local_44,&local_48,&local_64,\u000a                       &local_58,&local_74,&local_5c,&local_81,uVar14);\u000a        if ((uVar1 | 4) == 7) {\u000a          uVar14 = 0x409025;\u000a          __s1 = strstr(local_80 + (long)local_5c," - ");\u000a          if ((__s1 != (char *)0x0) &&\u000a             (uVar1 = sscanf(__s1," - %n%*s%n %n%*s%n %c",&local_4c,&local_50,&local_60,&local_54,\u000a                             &local_81,uVar14), (uVar1 | 4) == 5)) {\u000a            local_80[(long)local_58] = 0;\u000a            local_80[(long)local_5c] = 0;\u000a            __s1[(long)local_50] = 0;\u000a            __s1[(long)local_54] = 0;\u000a            unescape_tab(__s1 + (long)local_60);\u000a            unescape_tab(local_80 + (long)local_74);\u000a            unescape_tab(local_80 + (long)local_64);\u000a            pmVar9 = (mount_entry *)xmalloc(0x38);\u000a            pcVar4 = xstrdup(__s1 + (long)local_60);\u000a            pmVar9->me_devname = pcVar4;\u000a            pcVar4 = xstrdup(local_80 + (long)local_74);\u000a            pmVar9->me_mountdir = pcVar4;\u000a            pcVar4 = xstrdup(local_80 + (long)local_64);\u000a            pmVar9->me_mntroot = pcVar4;\u000a            __s1 = xstrdup(__s1 + (long)local_4c);\u000a            pmVar9->me_type = __s1;\u000a            *(byte *)&pmVar9->me_dummy_bitfield = *(byte *)&pmVar9->me_dummy_bitfield | 4;\u000a            uVar5 = gnu_dev_makedev(local_44,local_48);\u000a            pmVar9->me_dev = uVar5;\u000a            __s1 = pmVar9->me_type;\u000a            iVar2 = strcmp(__s1,"autofs");\u000a            bVar13 = true;\u000a            bVar12 = true;\u000a            if (iVar2 != 0) {\u000a              iVar2 = strcmp(__s1,"proc");\u000a              bVar12 = true;\u000a              if (iVar2 != 0) {\u000a                iVar2 = strcmp(__s1,"subfs");\u000a                bVar12 = true;\u000a                if (iVar2 != 0) {\u000a                  iVar2 = strcmp(__s1,"debugfs");\u000a                  bVar12 = true;\u000a                  if (iVar2 != 0) {\u000a                    iVar2 = strcmp(__s1,"devpts");\u000a                    bVar12 = true;\u000a                    if (iVar2 != 0) {\u000a                      iVar2 = strcmp(__s1,"fusectl");\u000a                      bVar12 = true;\u000a                      if (iVar2 != 0) {\u000a                        iVar2 = strcmp(__s1,"mqueue");\u000a                        bVar12 = true;\u000a                        if (iVar2 != 0) {\u000a                          iVar2 = strcmp(__s1,"rpc_pipefs");\u000a                          bVar12 = true;\u000a                          if (iVar2 != 0) {\u000a                            iVar2 = strcmp(__s1,"sysfs");\u000a                            bVar12 = true;\u000a                            if (iVar2 != 0) {\u000a                              iVar2 = strcmp(__s1,"devfs");\u000a                              bVar12 = true;\u000a                              if (iVar2 != 0) {\u000a                                iVar2 = strcmp(__s1,"kernfs");\u000a                                bVar12 = true;\u000a                                if (iVar2 != 0) {\u000a                                  iVar2 = strcmp(__s1,"ignore");\u000a                                  bVar12 = true;\u000a                                  if (iVar2 != 0) {\u000a                                    iVar2 = strcmp(__s1,"none");\u000a                                    bVar12 = iVar2 == 0;\u000a                                  }\u000a                                }\u000a                              }\u000a                            }\u000a                          }\u000a                        }\u000a                      }\u000a                    }\u000a                  }\u000a                }\u000a              }\u000a            }\u000a            *(byte *)&pmVar9->me_dummy_bitfield =\u000a                 *(byte *)&pmVar9->me_dummy_bitfield & 0xfe | bVar12;\u000a            __s1 = pmVar9->me_devname;\u000a            pcVar4 = strchr(__s1,0x3a);\u000a            if (pcVar4 == (char *)0x0) {\u000a              if ((*__s1 == '/') && (__s1[1] == '/')) {\u000a                __s1 = pmVar9->me_type;\u000a                iVar2 = strcmp(__s1,"smbfs");\u000a                if (iVar2 != 0) {\u000a                  iVar2 = strcmp(__s1,"cifs");\u000a                  bVar13 = iVar2 == 0;\u000a                }\u000a              }\u000a              else {\u000a                bVar13 = false;\u000a              }\u000a            }\u000a            *(byte *)&pmVar9->me_dummy_bitfield =\u000a                 *(byte *)&pmVar9->me_dummy_bitfield & 0xfd | bVar13 * 2;\u000a            *ppmVar11 = pmVar9;\u000a            ppmVar11 = &pmVar9->me_next;\u000a            fp = local_38;\u000a          }\u000a        }\u000a        uVar14 = 0x4092e9;\u000a        _Var3 = getline(&local_80,&local_40,(FILE *)fp);\u000a      } while (_Var3 != -1);\u000a    }\u000a    free(local_80);\u000a    iVar2 = ferror_unlocked((FILE *)fp);\u000a    if (iVar2 == 0) {\u000a      iVar2 = rpl_fclose(fp);\u000a      if (iVar2 != -1) goto LAB_004095e4;\u000a    }\u000a    else {\u000a      piVar6 = __errno_location();\u000a      iVar2 = *piVar6;\u000a      rpl_fclose(fp);\u000a      *piVar6 = iVar2;\u000a    }\u000a  }\u000a  piVar6 = __errno_location();\u000a  iVar2 = *piVar6;\u000a  *ppmVar11 = (mount_entry *)0x0;\u000a  while (local_70 != (mount_entry *)0x0) {\u000a    pmVar9 = local_70->me_next;\u000a    free_mount_entry(local_70);\u000a    local_70 = pmVar9;\u000a  }\u000a  *piVar6 = iVar2;\u000a  return (mount_entry *)0x0;\u000a}\u000a\u000a
p1704
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x58\nMOV EDI,0x40db0c\nMOV ESI,0x40cc66\nCALL 0x00402090\nMOV R12,RAX\nTEST R12,R12\nJZ 0x00409371\nMOV qword ptr [RSP + 0x8],0x0\nMOV qword ptr [RSP + 0x48],0x0\nLEA RDI,[RSP + 0x8]\nLEA RSI,[RSP + 0x48]\nMOV RDX,R12\nCALL 0x004020d0\nLEA R14,[RSP + 0x18]\nCMP RAX,-0x1\nJZ 0x004092f3\nLEA RBX,[RSP + 0x7]\nLEA R15,[RSP + 0x2c]\nLEA R13,[RSP + 0x14]\nMOV qword ptr [RSP + 0x50],R12\nMOV RDI,qword ptr [RSP + 0x8]\nSUB RSP,0x8\nMOV ESI,0x40db21\nMOV EAX,0x0\nLEA RDX,[RSP + 0x4c]\nLEA RCX,[RSP + 0x48]\nLEA R8,[RSP + 0x2c]\nLEA R9,[RSP + 0x38]\nPUSH RBX\nPUSH R15\nPUSH R13\nCALL 0x00401fb0\nADD RSP,0x20\nOR EAX,0x4\nCMP EAX,0x7\nJNZ 0x004092d7\nMOVSXD RDI,dword ptr [RSP + 0x2c]\nADD RDI,qword ptr [RSP + 0x8]\nMOV ESI,0x40db41\nCALL 0x00402150\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004092d7\nSUB RSP,0x8\nMOV ESI,0x40db45\nXOR EAX,EAX\nMOV RDI,RBP\nLEA RDX,[RSP + 0x44]\nLEA RCX,[RSP + 0x40]\nLEA R8,[RSP + 0x30]\nLEA R9,[RSP + 0x3c]\nPUSH RBX\nCALL 0x00401fb0\nADD RSP,0x10\nOR EAX,0x4\nCMP EAX,0x5\nJNZ 0x004092d7\nMOV RAX,qword ptr [RSP + 0x8]\nMOVSXD RCX,dword ptr [RSP + 0x30]\nMOV byte ptr [RAX + RCX*0x1],0x0\nMOV RAX,qword ptr [RSP + 0x8]\nMOVSXD RCX,dword ptr [RSP + 0x2c]\nMOV byte ptr [RAX + RCX*0x1],0x0\nMOVSXD RAX,dword ptr [RSP + 0x38]\nMOV byte ptr [RBP + RAX*0x1],0x0\nMOVSXD RAX,dword ptr [RSP + 0x34]\nMOV byte ptr [RBP + RAX*0x1],0x0\nMOVSXD RDI,dword ptr [RSP + 0x28]\nADD RDI,RBP\nCALL 0x00409600\nMOVSXD RDI,dword ptr [RSP + 0x14]\nADD RDI,qword ptr [RSP + 0x8]\nCALL 0x00409600\nMOVSXD RDI,dword ptr [RSP + 0x24]\nADD RDI,qword ptr [RSP + 0x8]\nCALL 0x00409600\nMOV EDI,0x38\nCALL 0x00408970\nMOV R13,RAX\nMOVSXD RDI,dword ptr [RSP + 0x28]\nADD RDI,RBP\nCALL 0x00408ae0\nMOV qword ptr [R13],RAX\nMOVSXD RDI,dword ptr [RSP + 0x14]\nADD RDI,qword ptr [RSP + 0x8]\nCALL 0x00408ae0\nMOV qword ptr [R13 + 0x8],RAX\nMOVSXD RDI,dword ptr [RSP + 0x24]\nADD RDI,qword ptr [RSP + 0x8]\nCALL 0x00408ae0\nMOV qword ptr [R13 + 0x10],RAX\nMOVSXD RDI,dword ptr [RSP + 0x3c]\nADD RDI,RBP\nCALL 0x00408ae0\nMOV qword ptr [R13 + 0x18],RAX\nOR byte ptr [R13 + 0x28],0x4\nMOV EDI,dword ptr [RSP + 0x44]\nMOV ESI,dword ptr [RSP + 0x40]\nCALL 0x00402140\nMOV qword ptr [R13 + 0x20],RAX\nMOV RBP,qword ptr [R13 + 0x18]\nMOV ESI,0x40c844\nMOV RDI,RBP\nCALL 0x00401ea0\nMOV R12B,0x1\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40c9fe\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40db5b\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40c8ac\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40c8b4\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40c8fd\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40c9b6\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40ca25\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40ca64\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40ca91\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40db61\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40db68\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409250\nMOV ESI,0x40db6f\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nSETZ AL\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVZX ECX,byte ptr [R13 + 0x28]\nAND CL,0xfe\nOR CL,AL\nMOV byte ptr [R13 + 0x28],CL\nMOV RBP,qword ptr [R13]\nMOV ESI,0x3a\nMOV RDI,RBP\nCALL 0x00401d90\nTEST RAX,RAX\nJNZ 0x004092ad\nCMP byte ptr [RBP],0x2f\nJNZ 0x004092aa\nCMP byte ptr [RBP + 0x1],0x2f\nJNZ 0x004092aa\nMOV RBP,qword ptr [R13 + 0x18]\nMOV ESI,0x40db74\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nJZ 0x004092ad\nMOV ESI,0x40c882\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nSETZ R12B\nJMP 0x004092ad\nXOR R12D,R12D\nMOVZX EAX,byte ptr [R13 + 0x28]\nADD R12B,R12B\nAND AL,0xfd\nOR AL,R12B\nMOV byte ptr [R13 + 0x28],AL\nMOV qword ptr [R14],R13\nADD R13,0x30\nMOV R14,R13\nLEA RBX,[RSP + 0x7]\nMOV R12,qword ptr [RSP + 0x50]\nLEA R13,[RSP + 0x14]\nLEA RDI,[RSP + 0x8]\nLEA RSI,[RSP + 0x48]\nMOV RDX,R12\nCALL 0x004020d0\nCMP RAX,-0x1\nJNZ 0x00408fd0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00401be0\nMOV RDI,R12\nCALL 0x00401e80\nTEST EAX,EAX\nJZ 0x004095bd\nCALL 0x00401c20\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV RDI,R12\nCALL 0x0040a3b0\nMOV dword ptr [RBP],R15D\nCALL 0x00401c20\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV qword ptr [R14],0x0\nMOV RDI,qword ptr [RSP + 0x18]\nTEST RDI,RDI\nJZ 0x00409366\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RBX,qword ptr [RDI + 0x30]\nCALL 0x004096a0\nMOV qword ptr [RSP + 0x18],RBX\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x00409350\nMOV dword ptr [RBP],R15D\nXOR EAX,EAX\nJMP 0x004095f0\nMOV EDI,0x40db7a\nMOV ESI,0x40cc66\nCALL 0x00401f60\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040936a\nMOV RDI,RBX\nCALL 0x00401f50\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004095cf\nLEA R12,[RSP + 0x18]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV ESI,0x40db84\nMOV RDI,RBP\nCALL 0x00402130\nMOV R15,RAX\nMOV EDI,0x38\nCALL 0x00408970\nMOV R14,RAX\nMOV RDI,qword ptr [RBP]\nCALL 0x00408ae0\nMOV qword ptr [R14],RAX\nMOV RDI,qword ptr [RBP + 0x8]\nCALL 0x00408ae0\nMOV qword ptr [R14 + 0x8],RAX\nMOV qword ptr [R14 + 0x10],0x0\nMOV RDI,qword ptr [RBP + 0x10]\nCALL 0x00408ae0\nMOV RBP,RAX\nMOV qword ptr [R14 + 0x18],RBP\nOR byte ptr [R14 + 0x28],0x4\nMOV ESI,0x40c844\nMOV RDI,RBP\nCALL 0x00401ea0\nMOV R13B,0x1\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40c9fe\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40db5b\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40c8ac\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40c8b4\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40c8fd\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40c9b6\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40ca25\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40ca64\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40ca91\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40db61\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40db68\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nMOV AL,0x1\nJZ 0x00409520\nMOV ESI,0x40db6f\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nSETZ CL\nTEST R15,R15\nSETZ AL\nAND AL,CL\nMOVZX ECX,byte ptr [R14 + 0x28]\nAND CL,0xfe\nOR CL,AL\nMOV byte ptr [R14 + 0x28],CL\nMOV RBP,qword ptr [R14]\nMOV ESI,0x3a\nMOV RDI,RBP\nCALL 0x00401d90\nTEST RAX,RAX\nJNZ 0x00409583\nCMP byte ptr [RBP],0x2f\nJNZ 0x00409580\nCMP byte ptr [RBP + 0x1],0x2f\nJNZ 0x00409580\nMOV RBP,qword ptr [R14 + 0x18]\nMOV ESI,0x40db74\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nJZ 0x00409583\nMOV ESI,0x40c882\nMOV RDI,RBP\nCALL 0x00401ea0\nTEST EAX,EAX\nSETZ R13B\nJMP 0x00409583\nXOR R13D,R13D\nMOVZX EAX,byte ptr [R14 + 0x28]\nADD R13B,R13B\nAND AL,0xfd\nOR AL,R13B\nMOV byte ptr [R14 + 0x28],AL\nMOV qword ptr [R14 + 0x20],-0x1\nMOV qword ptr [R12],R14\nADD R14,0x30\nMOV RDI,RBX\nCALL 0x00401f50\nMOV RBP,RAX\nTEST RBP,RBP\nMOV R12,R14\nJNZ 0x004093b0\nJMP 0x004095d4\nMOV RDI,R12\nCALL 0x0040a3b0\nCMP EAX,-0x1\nJNZ 0x004095e4\nJMP 0x00409325\nLEA R14,[RSP + 0x18]\nMOV RDI,RBX\nCALL 0x00401bf0\nTEST EAX,EAX\nJZ 0x00409325\nMOV qword ptr [R14],0x0\nMOV RAX,qword ptr [RSP + 0x18]\nADD RSP,0x58\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1705
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 58\nbf 0c db 40 00\nbe 66 cc 40 00\ne8 13 91 ff ff\n49 89 c4\n4d 85 e4\n0f 84 e8 03 00 00\n48 c7 44 24 08 00 00 00 00\n48 c7 44 24 48 00 00 00 00\n48 8d 7c 24 08\n48 8d 74 24 48\n4c 89 e2\ne8 23 91 ff ff\n4c 8d 74 24 18\n48 83 f8 ff\n0f 84 37 03 00 00\n48 8d 5c 24 07\n4c 8d 7c 24 2c\n4c 8d 6c 24 14\n4c 89 64 24 50\n48 8b 7c 24 08\n48 83 ec 08\nbe 21 db 40 00\nb8 00 00 00 00\n48 8d 54 24 4c\n48 8d 4c 24 48\n4c 8d 44 24 2c\n4c 8d 4c 24 38\n53\n41 57\n41 55\ne8 af 8f ff ff\n48 83 c4 20\n83 c8 04\n83 f8 07\n0f 85 c6 02 00 00\n48 63 7c 24 2c\n48 03 7c 24 08\nbe 41 db 40 00\ne8 2b 91 ff ff\n48 89 c5\n48 85 ed\n0f 84 a6 02 00 00\n48 83 ec 08\nbe 45 db 40 00\n31 c0\n48 89 ef\n48 8d 54 24 44\n48 8d 4c 24 40\n4c 8d 44 24 30\n4c 8d 4c 24 3c\n53\ne8 57 8f ff ff\n48 83 c4 10\n83 c8 04\n83 f8 05\n0f 85 6e 02 00 00\n48 8b 44 24 08\n48 63 4c 24 30\nc6 04 08 00\n48 8b 44 24 08\n48 63 4c 24 2c\nc6 04 08 00\n48 63 44 24 38\nc6 44 05 00 00\n48 63 44 24 34\nc6 44 05 00 00\n48 63 7c 24 28\n48 01 ef\ne8 5a 05 00 00\n48 63 7c 24 14\n48 03 7c 24 08\ne8 4b 05 00 00\n48 63 7c 24 24\n48 03 7c 24 08\ne8 3c 05 00 00\nbf 38 00 00 00\ne8 a2 f8 ff ff\n49 89 c5\n48 63 7c 24 28\n48 01 ef\ne8 02 fa ff ff\n49 89 45 00\n48 63 7c 24 14\n48 03 7c 24 08\ne8 ef f9 ff ff\n49 89 45 08\n48 63 7c 24 24\n48 03 7c 24 08\ne8 dc f9 ff ff\n49 89 45 10\n48 63 7c 24 3c\n48 01 ef\ne8 cb f9 ff ff\n49 89 45 18\n41 80 4d 28 04\n8b 7c 24 44\n8b 74 24 40\ne8 15 90 ff ff\n49 89 45 20\n49 8b 6d 18\nbe 44 c8 40 00\n48 89 ef\ne8 60 8d ff ff\n41 b4 01\n85 c0\nb0 01\n0f 84 03 01 00 00\nbe fe c9 40 00\n48 89 ef\ne8 46 8d ff ff\n85 c0\nb0 01\n0f 84 ec 00 00 00\nbe 5b db 40 00\n48 89 ef\ne8 2f 8d ff ff\n85 c0\nb0 01\n0f 84 d5 00 00 00\nbe ac c8 40 00\n48 89 ef\ne8 18 8d ff ff\n85 c0\nb0 01\n0f 84 be 00 00 00\nbe b4 c8 40 00\n48 89 ef\ne8 01 8d ff ff\n85 c0\nb0 01\n0f 84 a7 00 00 00\nbe fd c8 40 00\n48 89 ef\ne8 ea 8c ff ff\n85 c0\nb0 01\n0f 84 90 00 00 00\nbe b6 c9 40 00\n48 89 ef\ne8 d3 8c ff ff\n85 c0\nb0 01\n74 7d\nbe 25 ca 40 00\n48 89 ef\ne8 c0 8c ff ff\n85 c0\nb0 01\n74 6a\nbe 64 ca 40 00\n48 89 ef\ne8 ad 8c ff ff\n85 c0\nb0 01\n74 57\nbe 91 ca 40 00\n48 89 ef\ne8 9a 8c ff ff\n85 c0\nb0 01\n74 44\nbe 61 db 40 00\n48 89 ef\ne8 87 8c ff ff\n85 c0\nb0 01\n74 31\nbe 68 db 40 00\n48 89 ef\ne8 74 8c ff ff\n85 c0\nb0 01\n74 1e\nbe 6f db 40 00\n48 89 ef\ne8 61 8c ff ff\n85 c0\n0f 94 c0\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n41 0f b6 4d 28\n80 e1 fe\n08 c1\n41 88 4d 28\n49 8b 6d 00\nbe 3a 00 00 00\n48 89 ef\ne8 21 8b ff ff\n48 85 c0\n75 39\n80 7d 00 2f\n75 30\n80 7d 01 2f\n75 2a\n49 8b 6d 18\nbe 74 db 40 00\n48 89 ef\ne8 0f 8c ff ff\n85 c0\n74 18\nbe 82 c8 40 00\n48 89 ef\ne8 fe 8b ff ff\n85 c0\n41 0f 94 c4\neb 03\n45 31 e4\n41 0f b6 45 28\n45 00 e4\n24 fd\n44 08 e0\n41 88 45 28\n4d 89 2e\n49 83 c5 30\n4d 89 ee\n48 8d 5c 24 07\n4c 8b 64 24 50\n4c 8d 6c 24 14\n48 8d 7c 24 08\n48 8d 74 24 48\n4c 89 e2\ne8 e7 8d ff ff\n48 83 f8 ff\n0f 85 dd fc ff ff\n48 8b 7c 24 08\ne8 e3 88 ff ff\n4c 89 e7\ne8 7b 8b ff ff\n85 c0\n0f 84 b0 02 00 00\ne8 0e 89 ff ff\n48 89 c5\n44 8b 7d 00\n4c 89 e7\ne8 8f 10 00 00\n44 89 7d 00\ne8 f6 88 ff ff\n48 89 c5\n44 8b 7d 00\n49 c7 06 00 00 00 00\n48 8b 7c 24 18\n48 85 ff\n74 24\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 8b 5f 30\ne8 47 03 00 00\n48 89 5c 24 18\n48 85 db\n48 89 df\n75 ea\n44 89 7d 00\n31 c0\ne9 7f 02 00 00\nbf 7a db 40 00\nbe 66 cc 40 00\ne8 e0 8b ff ff\n48 89 c3\n48 85 db\n74 e2\n48 89 df\ne8 c0 8b ff ff\n48 89 c5\n48 85 ed\n0f 84 33 02 00 00\n4c 8d 64 24 18\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbe 84 db 40 00\n48 89 ef\ne8 73 8d ff ff\n49 89 c7\nbf 38 00 00 00\ne8 a6 f5 ff ff\n49 89 c6\n48 8b 7d 00\ne8 0a f7 ff ff\n49 89 06\n48 8b 7d 08\ne8 fe f6 ff ff\n49 89 46 08\n49 c7 46 10 00 00 00 00\n48 8b 7d 10\ne8 e9 f6 ff ff\n48 89 c5\n49 89 6e 18\n41 80 4e 28 04\nbe 44 c8 40 00\n48 89 ef\ne8 90 8a ff ff\n41 b5 01\n85 c0\nb0 01\n0f 84 03 01 00 00\nbe fe c9 40 00\n48 89 ef\ne8 76 8a ff ff\n85 c0\nb0 01\n0f 84 ec 00 00 00\nbe 5b db 40 00\n48 89 ef\ne8 5f 8a ff ff\n85 c0\nb0 01\n0f 84 d5 00 00 00\nbe ac c8 40 00\n48 89 ef\ne8 48 8a ff ff\n85 c0\nb0 01\n0f 84 be 00 00 00\nbe b4 c8 40 00\n48 89 ef\ne8 31 8a ff ff\n85 c0\nb0 01\n0f 84 a7 00 00 00\nbe fd c8 40 00\n48 89 ef\ne8 1a 8a ff ff\n85 c0\nb0 01\n0f 84 90 00 00 00\nbe b6 c9 40 00\n48 89 ef\ne8 03 8a ff ff\n85 c0\nb0 01\n0f 84 79 00 00 00\nbe 25 ca 40 00\n48 89 ef\ne8 ec 89 ff ff\n85 c0\nb0 01\n74 66\nbe 64 ca 40 00\n48 89 ef\ne8 d9 89 ff ff\n85 c0\nb0 01\n74 53\nbe 91 ca 40 00\n48 89 ef\ne8 c6 89 ff ff\n85 c0\nb0 01\n74 40\nbe 61 db 40 00\n48 89 ef\ne8 b3 89 ff ff\n85 c0\nb0 01\n74 2d\nbe 68 db 40 00\n48 89 ef\ne8 a0 89 ff ff\n85 c0\nb0 01\n74 1a\nbe 6f db 40 00\n48 89 ef\ne8 8d 89 ff ff\n85 c0\n0f 94 c1\n4d 85 ff\n0f 94 c0\n20 c8\n41 0f b6 4e 28\n80 e1 fe\n08 c1\n41 88 4e 28\n49 8b 2e\nbe 3a 00 00 00\n48 89 ef\ne8 52 88 ff ff\n48 85 c0\n75 40\n80 7d 00 2f\n75 37\n80 7d 01 2f\n75 31\n49 8b 6e 18\nbe 74 db 40 00\n48 89 ef\ne8 40 89 ff ff\n85 c0\n74 1f\nbe 82 c8 40 00\n48 89 ef\ne8 2f 89 ff ff\n85 c0\n41 0f 94 c5\neb 0a\n45 31 ed\n41 0f b6 46 28\n45 00 ed\n24 fd\n44 08 e8\n41 88 46 28\n49 c7 46 20 ff ff ff ff\n4d 89 34 24\n49 83 c6 30\n48 89 df\ne8 a4 89 ff ff\n48 89 c5\n48 85 ed\n4d 89 f4\n0f 85 f5 fd ff ff\neb 17\n4c 89 e7\ne8 eb 0d 00 00\n83 f8 ff\n75 1a\ne9 56 fd ff ff\n4c 8d 74 24 18\n48 89 df\ne8 14 86 ff ff\n85 c0\n0f 84 41 fd ff ff\n49 c7 06 00 00 00 00\n48 8b 44 24 18\n48 83 c4 58\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1706
S'.text:0000000000408f60\n.text:0000000000408f61\n.text:0000000000408f63\n.text:0000000000408f65\n.text:0000000000408f67\n.text:0000000000408f69\n.text:0000000000408f6a\n.text:0000000000408f6e\n.text:0000000000408f73\n.text:0000000000408f78\n.text:0000000000408f7d\n.text:0000000000408f80\n.text:0000000000408f83\n.text:0000000000408f89\n.text:0000000000408f92\n.text:0000000000408f9b\n.text:0000000000408fa0\n.text:0000000000408fa5\n.text:0000000000408fa8\n.text:0000000000408fad\n.text:0000000000408fb2\n.text:0000000000408fb6\n.text:0000000000408fbc\n.text:0000000000408fc1\n.text:0000000000408fc6\n.text:0000000000408fcb\n.text:0000000000408fd0\n.text:0000000000408fd5\n.text:0000000000408fd9\n.text:0000000000408fde\n.text:0000000000408fe3\n.text:0000000000408fe8\n.text:0000000000408fed\n.text:0000000000408ff2\n.text:0000000000408ff7\n.text:0000000000408ff8\n.text:0000000000408ffa\n.text:0000000000408ffc\n.text:0000000000409001\n.text:0000000000409005\n.text:0000000000409008\n.text:000000000040900b\n.text:0000000000409011\n.text:0000000000409016\n.text:000000000040901b\n.text:0000000000409020\n.text:0000000000409025\n.text:0000000000409028\n.text:000000000040902b\n.text:0000000000409031\n.text:0000000000409035\n.text:000000000040903a\n.text:000000000040903c\n.text:000000000040903f\n.text:0000000000409044\n.text:0000000000409049\n.text:000000000040904e\n.text:0000000000409053\n.text:0000000000409054\n.text:0000000000409059\n.text:000000000040905d\n.text:0000000000409060\n.text:0000000000409063\n.text:0000000000409069\n.text:000000000040906e\n.text:0000000000409073\n.text:0000000000409077\n.text:000000000040907c\n.text:0000000000409081\n.text:0000000000409085\n.text:000000000040908a\n.text:000000000040908f\n.text:0000000000409094\n.text:0000000000409099\n.text:000000000040909e\n.text:00000000004090a1\n.text:00000000004090a6\n.text:00000000004090ab\n.text:00000000004090b0\n.text:00000000004090b5\n.text:00000000004090ba\n.text:00000000004090bf\n.text:00000000004090c4\n.text:00000000004090c9\n.text:00000000004090ce\n.text:00000000004090d1\n.text:00000000004090d6\n.text:00000000004090d9\n.text:00000000004090de\n.text:00000000004090e2\n.text:00000000004090e7\n.text:00000000004090ec\n.text:00000000004090f1\n.text:00000000004090f5\n.text:00000000004090fa\n.text:00000000004090ff\n.text:0000000000409104\n.text:0000000000409108\n.text:000000000040910d\n.text:0000000000409110\n.text:0000000000409115\n.text:0000000000409119\n.text:000000000040911e\n.text:0000000000409122\n.text:0000000000409126\n.text:000000000040912b\n.text:000000000040912f\n.text:0000000000409133\n.text:0000000000409138\n.text:000000000040913b\n.text:0000000000409140\n.text:0000000000409143\n.text:0000000000409145\n.text:0000000000409147\n.text:000000000040914d\n.text:0000000000409152\n.text:0000000000409155\n.text:000000000040915a\n.text:000000000040915c\n.text:000000000040915e\n.text:0000000000409164\n.text:0000000000409169\n.text:000000000040916c\n.text:0000000000409171\n.text:0000000000409173\n.text:0000000000409175\n.text:000000000040917b\n.text:0000000000409180\n.text:0000000000409183\n.text:0000000000409188\n.text:000000000040918a\n.text:000000000040918c\n.text:0000000000409192\n.text:0000000000409197\n.text:000000000040919a\n.text:000000000040919f\n.text:00000000004091a1\n.text:00000000004091a3\n.text:00000000004091a9\n.text:00000000004091ae\n.text:00000000004091b1\n.text:00000000004091b6\n.text:00000000004091b8\n.text:00000000004091ba\n.text:00000000004091c0\n.text:00000000004091c5\n.text:00000000004091c8\n.text:00000000004091cd\n.text:00000000004091cf\n.text:00000000004091d1\n.text:00000000004091d3\n.text:00000000004091d8\n.text:00000000004091db\n.text:00000000004091e0\n.text:00000000004091e2\n.text:00000000004091e4\n.text:00000000004091e6\n.text:00000000004091eb\n.text:00000000004091ee\n.text:00000000004091f3\n.text:00000000004091f5\n.text:00000000004091f7\n.text:00000000004091f9\n.text:00000000004091fe\n.text:0000000000409201\n.text:0000000000409206\n.text:0000000000409208\n.text:000000000040920a\n.text:000000000040920c\n.text:0000000000409211\n.text:0000000000409214\n.text:0000000000409219\n.text:000000000040921b\n.text:000000000040921d\n.text:000000000040921f\n.text:0000000000409224\n.text:0000000000409227\n.text:000000000040922c\n.text:000000000040922e\n.text:0000000000409230\n.text:0000000000409232\n.text:0000000000409237\n.text:000000000040923a\n.text:000000000040923f\n.text:0000000000409241\n.text:0000000000409244\n.text:0000000000409250\n.text:0000000000409255\n.text:0000000000409258\n.text:000000000040925a\n.text:000000000040925e\n.text:0000000000409262\n.text:0000000000409267\n.text:000000000040926a\n.text:000000000040926f\n.text:0000000000409272\n.text:0000000000409274\n.text:0000000000409278\n.text:000000000040927a\n.text:000000000040927e\n.text:0000000000409280\n.text:0000000000409284\n.text:0000000000409289\n.text:000000000040928c\n.text:0000000000409291\n.text:0000000000409293\n.text:0000000000409295\n.text:000000000040929a\n.text:000000000040929d\n.text:00000000004092a2\n.text:00000000004092a4\n.text:00000000004092a8\n.text:00000000004092aa\n.text:00000000004092ad\n.text:00000000004092b2\n.text:00000000004092b5\n.text:00000000004092b7\n.text:00000000004092ba\n.text:00000000004092be\n.text:00000000004092c1\n.text:00000000004092c5\n.text:00000000004092c8\n.text:00000000004092cd\n.text:00000000004092d2\n.text:00000000004092d7\n.text:00000000004092dc\n.text:00000000004092e1\n.text:00000000004092e4\n.text:00000000004092e9\n.text:00000000004092ed\n.text:00000000004092f3\n.text:00000000004092f8\n.text:00000000004092fd\n.text:0000000000409300\n.text:0000000000409305\n.text:0000000000409307\n.text:000000000040930d\n.text:0000000000409312\n.text:0000000000409315\n.text:0000000000409319\n.text:000000000040931c\n.text:0000000000409321\n.text:0000000000409325\n.text:000000000040932a\n.text:000000000040932d\n.text:0000000000409331\n.text:0000000000409338\n.text:000000000040933d\n.text:0000000000409340\n.text:0000000000409342\n.text:0000000000409350\n.text:0000000000409354\n.text:0000000000409359\n.text:000000000040935e\n.text:0000000000409361\n.text:0000000000409364\n.text:0000000000409366\n.text:000000000040936a\n.text:000000000040936c\n.text:0000000000409371\n.text:0000000000409376\n.text:000000000040937b\n.text:0000000000409380\n.text:0000000000409383\n.text:0000000000409386\n.text:0000000000409388\n.text:000000000040938b\n.text:0000000000409390\n.text:0000000000409393\n.text:0000000000409396\n.text:000000000040939c\n.text:00000000004093a1\n.text:00000000004093b0\n.text:00000000004093b5\n.text:00000000004093b8\n.text:00000000004093bd\n.text:00000000004093c0\n.text:00000000004093c5\n.text:00000000004093ca\n.text:00000000004093cd\n.text:00000000004093d1\n.text:00000000004093d6\n.text:00000000004093d9\n.text:00000000004093dd\n.text:00000000004093e2\n.text:00000000004093e6\n.text:00000000004093ee\n.text:00000000004093f2\n.text:00000000004093f7\n.text:00000000004093fa\n.text:00000000004093fe\n.text:0000000000409403\n.text:0000000000409408\n.text:000000000040940b\n.text:0000000000409410\n.text:0000000000409413\n.text:0000000000409415\n.text:0000000000409417\n.text:000000000040941d\n.text:0000000000409422\n.text:0000000000409425\n.text:000000000040942a\n.text:000000000040942c\n.text:000000000040942e\n.text:0000000000409434\n.text:0000000000409439\n.text:000000000040943c\n.text:0000000000409441\n.text:0000000000409443\n.text:0000000000409445\n.text:000000000040944b\n.text:0000000000409450\n.text:0000000000409453\n.text:0000000000409458\n.text:000000000040945a\n.text:000000000040945c\n.text:0000000000409462\n.text:0000000000409467\n.text:000000000040946a\n.text:000000000040946f\n.text:0000000000409471\n.text:0000000000409473\n.text:0000000000409479\n.text:000000000040947e\n.text:0000000000409481\n.text:0000000000409486\n.text:0000000000409488\n.text:000000000040948a\n.text:0000000000409490\n.text:0000000000409495\n.text:0000000000409498\n.text:000000000040949d\n.text:000000000040949f\n.text:00000000004094a1\n.text:00000000004094a7\n.text:00000000004094ac\n.text:00000000004094af\n.text:00000000004094b4\n.text:00000000004094b6\n.text:00000000004094b8\n.text:00000000004094ba\n.text:00000000004094bf\n.text:00000000004094c2\n.text:00000000004094c7\n.text:00000000004094c9\n.text:00000000004094cb\n.text:00000000004094cd\n.text:00000000004094d2\n.text:00000000004094d5\n.text:00000000004094da\n.text:00000000004094dc\n.text:00000000004094de\n.text:00000000004094e0\n.text:00000000004094e5\n.text:00000000004094e8\n.text:00000000004094ed\n.text:00000000004094ef\n.text:00000000004094f1\n.text:00000000004094f3\n.text:00000000004094f8\n.text:00000000004094fb\n.text:0000000000409500\n.text:0000000000409502\n.text:0000000000409504\n.text:0000000000409506\n.text:000000000040950b\n.text:000000000040950e\n.text:0000000000409513\n.text:0000000000409515\n.text:0000000000409518\n.text:000000000040951b\n.text:000000000040951e\n.text:0000000000409520\n.text:0000000000409525\n.text:0000000000409528\n.text:000000000040952a\n.text:000000000040952e\n.text:0000000000409531\n.text:0000000000409536\n.text:0000000000409539\n.text:000000000040953e\n.text:0000000000409541\n.text:0000000000409543\n.text:0000000000409547\n.text:0000000000409549\n.text:000000000040954d\n.text:000000000040954f\n.text:0000000000409553\n.text:0000000000409558\n.text:000000000040955b\n.text:0000000000409560\n.text:0000000000409562\n.text:0000000000409564\n.text:0000000000409569\n.text:000000000040956c\n.text:0000000000409571\n.text:0000000000409573\n.text:0000000000409577\n.text:0000000000409580\n.text:0000000000409583\n.text:0000000000409588\n.text:000000000040958b\n.text:000000000040958d\n.text:0000000000409590\n.text:0000000000409594\n.text:000000000040959c\n.text:00000000004095a0\n.text:00000000004095a4\n.text:00000000004095a7\n.text:00000000004095ac\n.text:00000000004095af\n.text:00000000004095b2\n.text:00000000004095b5\n.text:00000000004095bb\n.text:00000000004095bd\n.text:00000000004095c0\n.text:00000000004095c5\n.text:00000000004095c8\n.text:00000000004095ca\n.text:00000000004095cf\n.text:00000000004095d4\n.text:00000000004095d7\n.text:00000000004095dc\n.text:00000000004095de\n.text:00000000004095e4\n.text:00000000004095eb\n.text:00000000004095f0\n.text:00000000004095f4\n.text:00000000004095f5\n.text:00000000004095f7\n.text:00000000004095f9\n.text:00000000004095fb\n.text:00000000004095fd\n.text:00000000004095fe\n'
p1707
tp1708
sS'gnu_dev_minor'
p1709
(S'\n__stdcall gnu_dev_minor(ulonglong __dev)\n'
p1710
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000auint gnu_dev_minor(ulonglong __dev)\u000a\u000a{\u000a  uint uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_gnu_dev_minor_00611290)();\u000a  return uVar1;\u000a}\u000a\u000a
p1711
S'JMP qword ptr [0x00611290]\n'
p1712
S'ff 25 da f1 20 00\n'
p1713
S'.plt:00000000004020b0\n'
p1714
tp1715
sS'chdir'
p1716
(S'\n__stdcall chdir(char * __path)\n'
p1717
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint chdir(char *__path)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_chdir_006110e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p1718
S'JMP qword ptr [0x006110e8]\n'
p1719
S'ff 25 82 f3 20 00\n'
p1720
S'.plt:0000000000401d60\n'
p1721
tp1722
sS'setfscreatecon'
p1723
(S'\n__stdcall setfscreatecon(security_context_t con)\n'
p1724
V\u000aint setfscreatecon(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1725
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1726
S'50\ne8 ba b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1727
S'.text:0000000000406960\n.text:0000000000406961\n.text:0000000000406966\n.text:000000000040696c\n.text:0000000000406971\n.text:0000000000406972\n'
p1728
tp1729
sS'rpl_calloc'
p1730
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1731
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_00611180)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1732
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x00408c3b\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x00408c40\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x00408c40\nPUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401e90\n'
p1733
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 ef 8f ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 45 92 ff ff\n'
p1734
S'.text:0000000000408c00\n.text:0000000000408c03\n.text:0000000000408c08\n.text:0000000000408c0a\n.text:0000000000408c0d\n.text:0000000000408c12\n.text:0000000000408c14\n.text:0000000000408c17\n.text:0000000000408c1b\n.text:0000000000408c1d\n.text:0000000000408c20\n.text:0000000000408c23\n.text:0000000000408c26\n.text:0000000000408c29\n.text:0000000000408c2b\n.text:0000000000408c2c\n.text:0000000000408c31\n.text:0000000000408c37\n.text:0000000000408c39\n.text:0000000000408c3a\n.text:0000000000408c3b\n.text:0000000000408c40\n.text:0000000000408c43\n.text:0000000000408c46\n'
p1735
tp1736
sS'memset'
p1737
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1738
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_00611130)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1739
S'JMP qword ptr [0x00611130]\n'
p1740
S'ff 25 3a f3 20 00\n'
p1741
S'.plt:0000000000401df0\n'
p1742
tp1743
sS'gnu_dev_major'
p1744
(S'\n__stdcall gnu_dev_major(ulonglong __dev)\n'
p1745
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000auint gnu_dev_major(ulonglong __dev)\u000a\u000a{\u000a  uint uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_gnu_dev_major_00611228)();\u000a  return uVar1;\u000a}\u000a\u000a
p1746
S'JMP qword ptr [0x00611228]\n'
p1747
S'ff 25 42 f2 20 00\n'
p1748
S'.plt:0000000000401fe0\n'
p1749
tp1750
sS'getc_unlocked'
p1751
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p1752
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_00611078)();\u000a  return iVar1;\u000a}\u000a\u000a
p1753
S'JMP qword ptr [0x00611078]\n'
p1754
S'ff 25 f2 f3 20 00\n'
p1755
S'.plt:0000000000401c80\n'
p1756
tp1757
sS'c_isascii'
p1758
(S'\n__stdcall c_isascii()\n'
p1759
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p1760
S'CMP EDI,0x80\nSETC AL\nRET\n'
p1761
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p1762
S'.text:0000000000409be0\n.text:0000000000409be6\n.text:0000000000409be9\n'
p1763
tp1764
sS'cdb_advance_fd'
p1765
(S'\n__stdcall cdb_advance_fd(cd_buf * cdb, char * dir)\n'
p1766
V\u000aint cdb_advance_fd(cd_buf *cdb,char *dir)\u000a\u000a{\u000a  cd_buf cVar1;\u000a  int iVar2;\u000a  \u000a  iVar2 = 0;\u000a  cVar1 = (cd_buf)openat((int)*cdb,dir,0x10900);\u000a  if ((int)cVar1 < 0) {\u000a    iVar2 = -1;\u000a  }\u000a  else {\u000a    cdb_free(cdb);\u000a    *cdb = cVar1;\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1767
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nMOV EDI,dword ptr [RBX]\nXOR R14D,R14D\nMOV EDX,0x10900\nXOR EAX,EAX\nCALL 0x00401d50\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00408eea\nMOV RDI,RBX\nCALL 0x00408f30\nMOV dword ptr [RBX],EBP\nJMP 0x00408ef0\nMOV R14D,0xffffffff\nMOV EAX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1768
S'55\n41 56\n53\n48 89 fb\n8b 3b\n45 31 f6\nba 00 09 01 00\n31 c0\ne8 78 8e ff ff\n89 c5\n85 ed\n78 0c\n48 89 df\ne8 4a 00 00 00\n89 2b\neb 06\n41 be ff ff ff ff\n44 89 f0\n5b\n41 5e\n5d\nc3\n'
p1769
S'.text:0000000000408ec0\n.text:0000000000408ec1\n.text:0000000000408ec3\n.text:0000000000408ec4\n.text:0000000000408ec7\n.text:0000000000408ec9\n.text:0000000000408ecc\n.text:0000000000408ed1\n.text:0000000000408ed3\n.text:0000000000408ed8\n.text:0000000000408eda\n.text:0000000000408edc\n.text:0000000000408ede\n.text:0000000000408ee1\n.text:0000000000408ee6\n.text:0000000000408ee8\n.text:0000000000408eea\n.text:0000000000408ef0\n.text:0000000000408ef3\n.text:0000000000408ef4\n.text:0000000000408ef6\n.text:0000000000408ef7\n'
p1770
tp1771
sS'dup_safer'
p1772
(S'\n__stdcall dup_safer()\n'
p1773
V\u000aint dup_safer(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  \u000a  iVar1 = rpl_fcntl(in_RDI,0,3);\u000a  return iVar1;\u000a}\u000a\u000a
p1774
S'XOR ESI,ESI\nMOV EDX,0x3\nXOR EAX,EAX\nJMP 0x0040a430\n'
p1775
S'31 f6\nba 03 00 00 00\n31 c0\ne9 22 f6 ff ff\n'
p1776
S'.text:000000000040ae00\n.text:000000000040ae02\n.text:000000000040ae07\n.text:000000000040ae09\n'
p1777
tp1778
sS'default_format'
p1779
(S'\n__stdcall default_format()\n'
p1780
V\u000achar * default_format(void)\u000a\u000a{\u000a  char *string;\u000a  char *__ptr;\u000a  undefined8 uVar1;\u000a  char in_DL;\u000a  char in_SIL;\u000a  char in_DIL;\u000a  \u000a  if (in_DIL == 0) {\u000a    if (in_SIL == 0) {\u000a      string = (char *)dcgettext(0,"  File: %N\u005cn  Size: %-10s\u005ctBlocks: %-10b IO Block: %-6o %F\u005cn",5)\u000a      ;\u000a      __ptr = xstrdup(string);\u000a      string = "Device: %Dh/%dd\u005ctInode: %-10i  Links: %h\u005cn";\u000a      if (in_DL != 0) {\u000a        string = "Device: %Dh/%dd\u005ctInode: %-10i  Links: %-5h Device type: %t,%T\u005cn";\u000a      }\u000a      uVar1 = dcgettext(0,string,5);\u000a      string = xasprintf("%s%s",__ptr,uVar1,uVar1);\u000a      free(__ptr);\u000a      uVar1 = dcgettext(0,"Access: (%04a/%10.10A)  Uid: (%5u/%8U)   Gid: (%5g/%8G)\u005cn",5);\u000a      __ptr = xasprintf("%s%s",string,uVar1,uVar1);\u000a      free(string);\u000a      uVar1 = dcgettext(0,"Access: %x\u005cnModify: %y\u005cnChange: %z\u005cn Birth: %w\u005cn",5);\u000a      string = xasprintf("%s%s",__ptr,uVar1,uVar1);\u000a      free(__ptr);\u000a      return string;\u000a    }\u000a    string = "%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o\u005cn";\u000a  }\u000a  else {\u000a    if (in_SIL == 0) {\u000a      string = (char *)dcgettext(0,\u000a                                 "  File: \u005c"%n\u005c"\u005cn    ID: %-8i Namelen: %-7l Type: %T\u005cnBlock size: %-10s Fundamental block size: %S\u005cnBlocks: Total: %-10b Free: %-10f Available: %a\u005cnInodes: Total: %-10c Free: %d\u005cn"\u000a                                 ,5);\u000a    }\u000a    else {\u000a      string = "%n %i %l %t %s %S %b %f %a %c %d\u005cn";\u000a    }\u000a  }\u000a  string = xstrdup(string);\u000a  return string;\u000a}\u000a\u000a
p1781
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,EDX\nTEST DIL,DIL\nJZ 0x00402857\nTEST SIL,SIL\nJZ 0x00402863\nMOV EDI,0x40c53d\nJMP 0x00402877\nTEST SIL,SIL\nJZ 0x00402883\nMOV EDI,0x40c60b\nJMP 0x00402877\nXOR EDI,EDI\nMOV ESI,0x40c55f\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDI,RAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00408ae0\nXOR EDI,EDI\nMOV ESI,0x40c63c\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RDI,RAX\nCALL 0x00408ae0\nMOV R14,RAX\nMOV EAX,0x40c67b\nMOV ESI,0x40c6b9\nTEST BL,BL\nCMOVNZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x40c676\nXOR EAX,EAX\nMOV RSI,R14\nMOV RDX,RCX\nCALL 0x00408b60\nMOV RBX,RAX\nMOV RDI,R14\nCALL 0x00401be0\nXOR EDI,EDI\nMOV ESI,0x40c6e2\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x40c676\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00408b60\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x00401be0\nXOR EDI,EDI\nMOV ESI,0x40c71b\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RCX,RAX\nMOV EDI,0x40c676\nXOR EAX,EAX\nMOV RSI,R14\nMOV RDX,RCX\nCALL 0x00408b60\nMOV RBX,RAX\nMOV RDI,R14\nCALL 0x00401be0\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1782
S'41 56\n53\n50\n89 d3\n40 84 ff\n74 0c\n40 84 f6\n74 13\nbf 3d c5 40 00\neb 20\n40 84 f6\n74 27\nbf 0b c6 40 00\neb 14\n31 ff\nbe 5f c5 40 00\nba 05 00 00 00\ne8 9c f4 ff ff\n48 89 c7\n48 83 c4 08\n5b\n41 5e\ne9 5d 62 00 00\n31 ff\nbe 3c c6 40 00\nba 05 00 00 00\ne8 7c f4 ff ff\n48 89 c7\ne8 44 62 00 00\n49 89 c6\nb8 7b c6 40 00\nbe b9 c6 40 00\n84 db\n48 0f 45 f0\n31 ff\nba 05 00 00 00\ne8 55 f4 ff ff\n48 89 c1\nbf 76 c6 40 00\n31 c0\n4c 89 f6\n48 89 ca\ne8 90 62 00 00\n48 89 c3\n4c 89 f7\ne8 05 f3 ff ff\n31 ff\nbe e2 c6 40 00\nba 05 00 00 00\ne8 24 f4 ff ff\n48 89 c1\nbf 76 c6 40 00\n31 c0\n48 89 de\n48 89 ca\ne8 5f 62 00 00\n49 89 c6\n48 89 df\ne8 d4 f2 ff ff\n31 ff\nbe 1b c7 40 00\nba 05 00 00 00\ne8 f3 f3 ff ff\n48 89 c1\nbf 76 c6 40 00\n31 c0\n4c 89 f6\n48 89 ca\ne8 2e 62 00 00\n48 89 c3\n4c 89 f7\ne8 a3 f2 ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1783
S'.text:0000000000402840\n.text:0000000000402842\n.text:0000000000402843\n.text:0000000000402844\n.text:0000000000402846\n.text:0000000000402849\n.text:000000000040284b\n.text:000000000040284e\n.text:0000000000402850\n.text:0000000000402855\n.text:0000000000402857\n.text:000000000040285a\n.text:000000000040285c\n.text:0000000000402861\n.text:0000000000402863\n.text:0000000000402865\n.text:000000000040286a\n.text:000000000040286f\n.text:0000000000402874\n.text:0000000000402877\n.text:000000000040287b\n.text:000000000040287c\n.text:000000000040287e\n.text:0000000000402883\n.text:0000000000402885\n.text:000000000040288a\n.text:000000000040288f\n.text:0000000000402894\n.text:0000000000402897\n.text:000000000040289c\n.text:000000000040289f\n.text:00000000004028a4\n.text:00000000004028a9\n.text:00000000004028ab\n.text:00000000004028af\n.text:00000000004028b1\n.text:00000000004028b6\n.text:00000000004028bb\n.text:00000000004028be\n.text:00000000004028c3\n.text:00000000004028c5\n.text:00000000004028c8\n.text:00000000004028cb\n.text:00000000004028d0\n.text:00000000004028d3\n.text:00000000004028d6\n.text:00000000004028db\n.text:00000000004028dd\n.text:00000000004028e2\n.text:00000000004028e7\n.text:00000000004028ec\n.text:00000000004028ef\n.text:00000000004028f4\n.text:00000000004028f6\n.text:00000000004028f9\n.text:00000000004028fc\n.text:0000000000402901\n.text:0000000000402904\n.text:0000000000402907\n.text:000000000040290c\n.text:000000000040290e\n.text:0000000000402913\n.text:0000000000402918\n.text:000000000040291d\n.text:0000000000402920\n.text:0000000000402925\n.text:0000000000402927\n.text:000000000040292a\n.text:000000000040292d\n.text:0000000000402932\n.text:0000000000402935\n.text:0000000000402938\n.text:000000000040293d\n.text:0000000000402940\n.text:0000000000402944\n.text:0000000000402945\n.text:0000000000402947\n'
p1784
tp1785
sS'getenv_TZ'
p1786
(S'\n__stdcall getenv_TZ()\n'
p1787
V\u000achar * getenv_TZ(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = getenv("TZ");\u000a  return pcVar1;\u000a}\u000a\u000a
p1788
S'MOV EDI,0x40db89\nJMP 0x00401bd0\n'
p1789
S'bf 89 db 40 00\ne9 b6 80 ff ff\n'
p1790
S'.text:0000000000409b10\n.text:0000000000409b15\n'
p1791
tp1792
sS'__ctype_b_loc'
p1793
(S'\n__stdcall __ctype_b_loc()\n'
p1794
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_006112f0)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1795
S'JMP qword ptr [0x006112f0]\n'
p1796
S'ff 25 7a f1 20 00\n'
p1797
S'.plt:0000000000402170\n'
p1798
tp1799
sS'__vasprintf_chk'
p1800
(S'\n__stdcall __vasprintf_chk()\n'
p1801
V\u000avoid __vasprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___vasprintf_chk_006111f8)();\u000a  return;\u000a}\u000a\u000a
p1802
S'JMP qword ptr [0x006111f8]\n'
p1803
S'ff 25 72 f2 20 00\n'
p1804
S'.plt:0000000000401f80\n'
p1805
tp1806
sS'out_minus_zero'
p1807
(S'\n__stdcall out_minus_zero(char * pformat, size_t prefix_len)\n'
p1808
V\u000aint out_minus_zero(char *pformat,size_t prefix_len)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  make_format(pformat,prefix_len,"\u005c'-+ 0",".0f");\u000a  iVar1 = __printf_chk(DAT_0040b898,1,pformat);\u000a  return iVar1;\u000a}\u000a\u000a
p1809
S'PUSH RBX\nMOV RBX,RDI\nMOV EDX,0x40cacd\nMOV ECX,0x40cb9b\nCALL 0x00403cb0\nMOVSD XMM0,qword ptr [0x0040b898]\nMOV EDI,0x1\nMOV AL,0x1\nMOV RSI,RBX\nPOP RBX\nJMP 0x00402020\n'
p1810
S'53\n48 89 fb\nba cd ca 40 00\nb9 9b cb 40 00\ne8 4d f5 ff ff\nf2 0f 10 05 2d 71 00 00\nbf 01 00 00 00\nb0 01\n48 89 de\n5b\ne9 a5 d8 ff ff\n'
p1811
S'.text:0000000000404750\n.text:0000000000404751\n.text:0000000000404754\n.text:0000000000404759\n.text:000000000040475e\n.text:0000000000404763\n.text:000000000040476b\n.text:0000000000404770\n.text:0000000000404772\n.text:0000000000404775\n.text:0000000000404776\n'
p1812
tp1813
sS'quotearg'
p1814
(S'\n__stdcall quotearg(char * arg)\n'
p1815
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1816
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00405f70\n'
p1817
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1818
S'.text:0000000000406150\n.text:0000000000406153\n.text:0000000000406155\n.text:0000000000406158\n'
p1819
tp1820
sS'equal_tm'
p1821
(S'\n__stdcall equal_tm(tm * a, tm * b)\n'
p1822
V\u000aint equal_tm(tm *a,tm *b)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  uint uVar12;\u000a  _Bool _Var13;\u000a  \u000a  uVar1 = b->tm_sec;\u000a  uVar2 = b->tm_min;\u000a  uVar3 = a->tm_sec;\u000a  uVar4 = a->tm_min;\u000a  uVar5 = b->tm_hour;\u000a  uVar6 = a->tm_hour;\u000a  uVar7 = b->tm_mday;\u000a  uVar8 = a->tm_mday;\u000a  uVar9 = b->tm_mon;\u000a  uVar10 = a->tm_mon;\u000a  uVar11 = b->tm_year;\u000a  uVar12 = a->tm_year;\u000a  _Var13 = isdst_differ();\u000a  return (int)(uint)(((uint)_Var13 |\u000a                     uVar11 ^ uVar12 | uVar9 ^ uVar10 |\u000a                     uVar7 ^ uVar8 | uVar5 ^ uVar6 | uVar2 ^ uVar4 | uVar1 ^ uVar3) == 0);\u000a}\u000a\u000a
p1823
S'PUSH RBX\nMOV EAX,dword ptr [RSI]\nMOV ECX,dword ptr [RSI + 0x4]\nXOR EAX,dword ptr [RDI]\nXOR ECX,dword ptr [RDI + 0x4]\nOR ECX,EAX\nMOV EAX,dword ptr [RSI + 0x8]\nXOR EAX,dword ptr [RDI + 0x8]\nMOV EDX,dword ptr [RSI + 0xc]\nXOR EDX,dword ptr [RDI + 0xc]\nOR EDX,EAX\nOR EDX,ECX\nMOV EAX,dword ptr [RSI + 0x10]\nXOR EAX,dword ptr [RDI + 0x10]\nMOV EBX,dword ptr [RSI + 0x14]\nXOR EBX,dword ptr [RDI + 0x14]\nOR EBX,EAX\nOR EBX,EDX\nMOV EDI,dword ptr [RDI + 0x20]\nMOV ESI,dword ptr [RSI + 0x20]\nCALL 0x00409b70\nMOVZX ECX,AL\nXOR EAX,EAX\nOR ECX,EBX\nSETZ AL\nPOP RBX\nRET\n'
p1824
S'53\n8b 06\n8b 4e 04\n33 07\n33 4f 04\n09 c1\n8b 46 08\n33 47 08\n8b 56 0c\n33 57 0c\n09 c2\n09 ca\n8b 46 10\n33 47 10\n8b 5e 14\n33 5f 14\n09 c3\n09 d3\n8b 7f 20\n8b 76 20\ne8 78 00 00 00\n0f b6 c8\n31 c0\n09 d9\n0f 94 c0\n5b\nc3\n'
p1825
S'.text:0000000000409ac0\n.text:0000000000409ac1\n.text:0000000000409ac3\n.text:0000000000409ac6\n.text:0000000000409ac8\n.text:0000000000409acb\n.text:0000000000409acd\n.text:0000000000409ad0\n.text:0000000000409ad3\n.text:0000000000409ad6\n.text:0000000000409ad9\n.text:0000000000409adb\n.text:0000000000409add\n.text:0000000000409ae0\n.text:0000000000409ae3\n.text:0000000000409ae6\n.text:0000000000409ae9\n.text:0000000000409aeb\n.text:0000000000409aed\n.text:0000000000409af0\n.text:0000000000409af3\n.text:0000000000409af8\n.text:0000000000409afb\n.text:0000000000409afd\n.text:0000000000409aff\n.text:0000000000409b02\n.text:0000000000409b03\n'
p1826
tp1827
sS'_start'
p1828
(S'\n__stdcall _start()\n'
p1829
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00610ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1830
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x40af00\nMOV RCX,0x40ae90\nMOV RDI,0x402610\nCALL qword ptr [0x00610ff0]\nHLT\n'
p1831
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 00 af 40 00\n48 c7 c1 90 ae 40 00\n48 c7 c7 10 26 40 00\nff 15 36 ee 20 00\nf4\n'
p1832
S'.text:0000000000402190\n.text:0000000000402192\n.text:0000000000402195\n.text:0000000000402196\n.text:0000000000402199\n.text:000000000040219d\n.text:000000000040219e\n.text:000000000040219f\n.text:00000000004021a6\n.text:00000000004021ad\n.text:00000000004021b4\n.text:00000000004021ba\n'
p1833
tp1834
sS'c_iscntrl'
p1835
(S'\n__stdcall c_iscntrl()\n'
p1836
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1837
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x00409c08\nRET\nCMP EDI,0x7f\nJZ 0x00409c07\nXOR EAX,EAX\nRET\n'
p1838
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1839
S'.text:0000000000409c00\n.text:0000000000409c02\n.text:0000000000409c05\n.text:0000000000409c07\n.text:0000000000409c08\n.text:0000000000409c0b\n.text:0000000000409c0d\n.text:0000000000409c0f\n'
p1840
tp1841
sS'lgetfilecon'
p1842
(S'\n__stdcall lgetfilecon(char * file, security_context_t * con)\n'
p1843
V\u000aint lgetfilecon(char *file,security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p1844
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p1845
S'50\ne8 5a b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p1846
S'.text:00000000004069c0\n.text:00000000004069c1\n.text:00000000004069c6\n.text:00000000004069cc\n.text:00000000004069d1\n.text:00000000004069d2\n'
p1847
tp1848
sS'c_isblank'
p1849
(S'\n__stdcall c_isblank()\n'
p1850
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1851
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1852
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1853
S'.text:0000000000409bf0\n.text:0000000000409bf3\n.text:0000000000409bf6\n.text:0000000000409bf9\n.text:0000000000409bfc\n.text:0000000000409bfe\n'
p1854
tp1855
sS'atexit'
p1856
(S'\n__stdcall atexit(__func * __func)\n'
p1857
V\u000a/* WARNING: Removing unreachable block (ram,0x0040af30) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_00611298)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1858
S'MOV RAX,0x611308\nTEST RAX,RAX\nJZ 0x0040af30\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x004020c0\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x004020c0\n'
p1859
S'48 c7 c0 08 13 61 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 9a 71 ff ff\n31 d2\n31 f6\ne9 87 71 ff ff\n'
p1860
S'.text:000000000040af10\n.text:000000000040af17\n.text:000000000040af1a\n.text:000000000040af1c\n.text:000000000040af1f\n.text:000000000040af21\n.text:000000000040af30\n.text:000000000040af32\n.text:000000000040af34\n'
p1861
tp1862
sS'fdopen'
p1863
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1864
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_00611238)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1865
S'JMP qword ptr [0x00611238]\n'
p1866
S'ff 25 32 f2 20 00\n'
p1867
S'.plt:0000000000402000\n'
p1868
tp1869
sS'error'
p1870
(S'\n__stdcall error()\n'
p1871
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_00611260)();\u000a  return;\u000a}\u000a\u000a
p1872
S'JMP qword ptr [0x00611260]\n'
p1873
S'ff 25 0a f2 20 00\n'
p1874
S'.plt:0000000000402050\n'
p1875
tp1876
sS'isdst_differ'
p1877
(S'\n__stdcall isdst_differ()\n'
p1878
V\u000aint isdst_differ(void)\u000a\u000a{\u000a  uint in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (int)(uint)(-1 < (int)(in_ESI | in_EDI) && (in_ESI == 0) != (in_EDI == 0));\u000a}\u000a\u000a
p1879
S'TEST EDI,EDI\nSETZ AL\nTEST ESI,ESI\nSETZ CL\nXOR CL,AL\nOR ESI,EDI\nSETNS AL\nAND AL,CL\nMOVZX EAX,AL\nRET\n'
p1880
S'85 ff\n0f 94 c0\n85 f6\n0f 94 c1\n30 c1\n09 fe\n0f 99 c0\n20 c8\n0f b6 c0\nc3\n'
p1881
S'.text:000000000040ad60\n.text:000000000040ad62\n.text:000000000040ad65\n.text:000000000040ad67\n.text:000000000040ad6a\n.text:000000000040ad6c\n.text:000000000040ad6e\n.text:000000000040ad71\n.text:000000000040ad73\n.text:000000000040ad76\n'
p1882
tp1883
sS'do_statfs'
p1884
(S'\n__stdcall do_statfs(char * filename, char * format)\n'
p1885
V\u000a_Bool do_statfs(char *filename,char *format)\u000a\u000a{\u000a  uint uVar1;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  uint *puVar4;\u000a  undefined8 uVar5;\u000a  char *pcVar6;\u000a  ulong uVar7;\u000a  statfs sStack152;\u000a  \u000a  if ((*filename == '-') && (filename[1] == 0)) {\u000a    uVar5 = dcgettext(0,"using %s to denote standard input does not work in file system mode",5);\u000a    pcVar6 = quotearg_style((char *)0x4);\u000a    uVar7 = 0;\u000a  }\u000a  else {\u000a    iVar3 = statfs(filename,&sStack152);\u000a    if (iVar3 == 0) {\u000a      _Var2 = print_it(format,(char *)0xffffffff,\u000a                       (_Bool (*)(char *,size_t,uint,int,char *,void *))filename,print_statfs);\u000a      return (_Bool)(_Var2 ^ 1);\u000a    }\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    uVar5 = dcgettext(0,"cannot read file system information for %s",5);\u000a    pcVar6 = quotearg_style((char *)0x4);\u000a    uVar7 = (ulong)uVar1;\u000a  }\u000a  error(0,uVar7,uVar5,pcVar6);\u000a  return false;\u000a}\u000a\u000a
p1886
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x78\nMOV R14,RSI\nMOV RBX,RDI\nCMP byte ptr [RBX],0x2d\nJNZ 0x0040296b\nCMP byte ptr [RBX + 0x1],0x0\nJZ 0x004029d6\nMOV RSI,RSP\nMOV RDI,RBX\nCALL 0x00401f10\nTEST EAX,EAX\nJZ 0x004029b5\nCALL 0x00401c20\nMOV R15D,dword ptr [RAX]\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x40c78c\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RBP,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR EAX,EAX\nMOV ESI,R15D\nMOV RDX,RBP\nJMP 0x00402a06\nMOV R8,RSP\nMOV ESI,0xffffffff\nMOV ECX,0x402e60\nMOV RDI,R14\nMOV RDX,RBX\nCALL 0x00402b50\nMOV R14B,AL\nXOR R14B,0x1\nJMP 0x00402a0b\nXOR R14D,R14D\nXOR EDI,EDI\nMOV ESI,0x40c748\nMOV EDX,0x5\nCALL 0x00401d10\nMOV R15,RAX\nMOV EDI,0x4\nMOV RSI,RBX\nCALL 0x00406250\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,R15\nCALL 0x00402050\nMOV EAX,R14D\nADD RSP,0x78\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1887
S'55\n41 57\n41 56\n53\n48 83 ec 78\n49 89 f6\n48 89 fb\n80 3b 2d\n75 06\n80 7b 01 00\n74 6b\n48 89 e6\n48 89 df\ne8 9a f5 ff ff\n85 c0\n74 3b\ne8 a1 f2 ff ff\n44 8b 38\n45 31 f6\n31 ff\nbe 8c c7 40 00\nba 05 00 00 00\ne8 7a f3 ff ff\n48 89 c5\nbf 04 00 00 00\n48 89 de\ne8 aa 38 00 00\n48 89 c1\n31 ff\n31 c0\n44 89 fe\n48 89 ea\neb 51\n49 89 e0\nbe ff ff ff ff\nb9 60 2e 40 00\n4c 89 f7\n48 89 da\ne8 83 01 00 00\n41 88 c6\n41 80 f6 01\neb 35\n45 31 f6\n31 ff\nbe 48 c7 40 00\nba 05 00 00 00\ne8 26 f3 ff ff\n49 89 c7\nbf 04 00 00 00\n48 89 de\ne8 56 38 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n4c 89 fa\ne8 45 f6 ff ff\n44 89 f0\n48 83 c4 78\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1888
S'.text:0000000000402950\n.text:0000000000402951\n.text:0000000000402953\n.text:0000000000402955\n.text:0000000000402956\n.text:000000000040295a\n.text:000000000040295d\n.text:0000000000402960\n.text:0000000000402963\n.text:0000000000402965\n.text:0000000000402969\n.text:000000000040296b\n.text:000000000040296e\n.text:0000000000402971\n.text:0000000000402976\n.text:0000000000402978\n.text:000000000040297a\n.text:000000000040297f\n.text:0000000000402982\n.text:0000000000402985\n.text:0000000000402987\n.text:000000000040298c\n.text:0000000000402991\n.text:0000000000402996\n.text:0000000000402999\n.text:000000000040299e\n.text:00000000004029a1\n.text:00000000004029a6\n.text:00000000004029a9\n.text:00000000004029ab\n.text:00000000004029ad\n.text:00000000004029b0\n.text:00000000004029b3\n.text:00000000004029b5\n.text:00000000004029b8\n.text:00000000004029bd\n.text:00000000004029c2\n.text:00000000004029c5\n.text:00000000004029c8\n.text:00000000004029cd\n.text:00000000004029d0\n.text:00000000004029d4\n.text:00000000004029d6\n.text:00000000004029d9\n.text:00000000004029db\n.text:00000000004029e0\n.text:00000000004029e5\n.text:00000000004029ea\n.text:00000000004029ed\n.text:00000000004029f2\n.text:00000000004029f5\n.text:00000000004029fa\n.text:00000000004029fd\n.text:00000000004029ff\n.text:0000000000402a01\n.text:0000000000402a03\n.text:0000000000402a06\n.text:0000000000402a0b\n.text:0000000000402a0e\n.text:0000000000402a12\n.text:0000000000402a13\n.text:0000000000402a15\n.text:0000000000402a17\n.text:0000000000402a18\n'
p1889
tp1890
sS'strcaseeq6'
p1891
(S'\n__stdcall strcaseeq6()\n'
p1892
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1893
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x00406812\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406819\nJMP 0x0040682e\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040682e\nTEST BPL,BPL\nJZ 0x00406829\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00406840\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1894
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 91 34 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1895
S'.text:00000000004067f0\n.text:00000000004067f1\n.text:00000000004067f2\n.text:00000000004067f3\n.text:00000000004067f5\n.text:00000000004067f8\n.text:00000000004067fa\n.text:00000000004067ff\n.text:0000000000406803\n.text:0000000000406805\n.text:0000000000406807\n.text:000000000040680a\n.text:000000000040680c\n.text:000000000040680e\n.text:0000000000406810\n.text:0000000000406812\n.text:0000000000406814\n.text:0000000000406817\n.text:0000000000406819\n.text:000000000040681c\n.text:000000000040681e\n.text:0000000000406821\n.text:0000000000406825\n.text:0000000000406826\n.text:0000000000406827\n.text:0000000000406829\n.text:000000000040682e\n.text:0000000000406832\n.text:0000000000406833\n.text:0000000000406834\n'
p1896
tp1897
sS'imaxtostr'
p1898
(S'\n__stdcall imaxtostr(intmax_t i, char * buf)\n'
p1899
V\u000achar * imaxtostr(intmax_t i,char *buf)\u000a\u000a{\u000a  ulong uVar1;\u000a  long lVar2;\u000a  \u000a  buf[0x14] = 0;\u000a  if (i < 0) {\u000a    buf = buf + 0x13;\u000a    do {\u000a      lVar2 = i / 10 + (i >> 0x3f);\u000a      *buf = '0' - ((char)i + (char)lVar2 * -10);\u000a      uVar1 = i + 9;\u000a      buf = buf + -1;\u000a      i = lVar2;\u000a    } while (0x12 < uVar1);\u000a    *buf = '-';\u000a  }\u000a  else {\u000a    buf = buf + 0x14;\u000a    do {\u000a      lVar2 = i / 10 + (i >> 0x3f);\u000a      buf[-1] = (char)i + (char)lVar2 * -10 + '0';\u000a      buf = buf + -1;\u000a      uVar1 = i + 9;\u000a      i = lVar2;\u000a    } while (0x12 < uVar1);\u000a  }\u000a  return buf;\u000a}\u000a\u000a
p1900
S'MOV RCX,RDI\nMOV byte ptr [RSI + 0x14],0x0\nTEST RCX,RCX\nJS 0x00404f1b\nADD RSI,0x14\nMOV R8,0x6666666666666667\nNOP word ptr [RAX + RAX*0x1]\nMOV RAX,RCX\nIMUL R8\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + RAX*0x1]\nADD EDI,EDI\nLEA R9D,[RDI + RDI*0x4]\nMOV EDI,ECX\nSUB EDI,R9D\nADD EDI,0x30\nMOV byte ptr [RSI + -0x1],DIL\nDEC RSI\nADD RDX,RAX\nADD RCX,0x9\nCMP RCX,0x12\nMOV RCX,RDX\nJA 0x00404ee0\nJMP 0x00404f6f\nADD RSI,0x13\nMOV R8,0x6666666666666667\nNOP dword ptr [RAX]\nMOV RAX,RCX\nIMUL R8\nMOV R10,RDX\nSHR R10,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + R10*0x1]\nADD EDI,EDI\nLEA R9D,[RDI + RDI*0x4]\nMOV EDI,ECX\nSUB EDI,R9D\nMOV EAX,0x30\nSUB EAX,EDI\nMOV byte ptr [RSI],AL\nADD RDX,R10\nADD RCX,0x9\nDEC RSI\nCMP RCX,0x12\nMOV RCX,RDX\nJA 0x00404f30\nMOV byte ptr [RSI],0x2d\nMOV RAX,RSI\nRET\n'
p1901
S'48 89 f9\nc6 46 14 00\n48 85 c9\n78 4f\n48 83 c6 14\n49 b8 67 66 66 66 66 66 66 66\n66 0f 1f 44 00 00\n48 89 c8\n49 f7 e8\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 02\n8d 3c 02\n01 ff\n44 8d 0c bf\n89 cf\n44 29 cf\n83 c7 30\n40 88 7e ff\n48 ff ce\n48 01 c2\n48 83 c1 09\n48 83 f9 12\n48 89 d1\n77 c7\neb 54\n48 83 c6 13\n49 b8 67 66 66 66 66 66 66 66\n0f 1f 80 00 00 00 00\n48 89 c8\n49 f7 e8\n49 89 d2\n49 c1 ea 3f\n48 c1 fa 02\n42 8d 3c 12\n01 ff\n44 8d 0c bf\n89 cf\n44 29 cf\nb8 30 00 00 00\n29 f8\n88 06\n4c 01 d2\n48 83 c1 09\n48 ff ce\n48 83 f9 12\n48 89 d1\n77 c4\nc6 06 2d\n48 89 f0\nc3\n'
p1902
S'.text:0000000000404ec0\n.text:0000000000404ec3\n.text:0000000000404ec7\n.text:0000000000404eca\n.text:0000000000404ecc\n.text:0000000000404ed0\n.text:0000000000404eda\n.text:0000000000404ee0\n.text:0000000000404ee3\n.text:0000000000404ee6\n.text:0000000000404ee9\n.text:0000000000404eed\n.text:0000000000404ef1\n.text:0000000000404ef4\n.text:0000000000404ef6\n.text:0000000000404efa\n.text:0000000000404efc\n.text:0000000000404eff\n.text:0000000000404f02\n.text:0000000000404f06\n.text:0000000000404f09\n.text:0000000000404f0c\n.text:0000000000404f10\n.text:0000000000404f14\n.text:0000000000404f17\n.text:0000000000404f19\n.text:0000000000404f1b\n.text:0000000000404f1f\n.text:0000000000404f29\n.text:0000000000404f30\n.text:0000000000404f33\n.text:0000000000404f36\n.text:0000000000404f39\n.text:0000000000404f3d\n.text:0000000000404f41\n.text:0000000000404f45\n.text:0000000000404f47\n.text:0000000000404f4b\n.text:0000000000404f4d\n.text:0000000000404f50\n.text:0000000000404f55\n.text:0000000000404f57\n.text:0000000000404f59\n.text:0000000000404f5c\n.text:0000000000404f60\n.text:0000000000404f63\n.text:0000000000404f67\n.text:0000000000404f6a\n.text:0000000000404f6c\n.text:0000000000404f6f\n.text:0000000000404f72\n'
p1903
tp1904
sS'strcaseeq5'
p1905
(S'\n__stdcall strcaseeq5()\n'
p1906
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1907
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x004067c6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004067cd\nJMP 0x004067e4\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004067e4\nTEST BPL,BPL\nJZ 0x004067df\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x004067f0\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1908
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 dd 34 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1909
S'.text:00000000004067a0\n.text:00000000004067a1\n.text:00000000004067a3\n.text:00000000004067a4\n.text:00000000004067a7\n.text:00000000004067a9\n.text:00000000004067ac\n.text:00000000004067ae\n.text:00000000004067b3\n.text:00000000004067b7\n.text:00000000004067b9\n.text:00000000004067bb\n.text:00000000004067be\n.text:00000000004067c0\n.text:00000000004067c2\n.text:00000000004067c4\n.text:00000000004067c6\n.text:00000000004067c8\n.text:00000000004067cb\n.text:00000000004067cd\n.text:00000000004067d0\n.text:00000000004067d2\n.text:00000000004067d6\n.text:00000000004067d9\n.text:00000000004067da\n.text:00000000004067dc\n.text:00000000004067dd\n.text:00000000004067df\n.text:00000000004067e4\n.text:00000000004067e5\n.text:00000000004067e7\n.text:00000000004067e8\n'
p1910
tp1911
sS'strcaseeq7'
p1912
(S'\n__stdcall strcaseeq7()\n'
p1913
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1914
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x00406862\nTEST ECX,0xffffffdf\nJNZ 0x00406866\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x0040686a\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1915
S'53\n48 89 fb\n31 ff\ne8 45 34 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1916
S'.text:0000000000406840\n.text:0000000000406841\n.text:0000000000406844\n.text:0000000000406846\n.text:000000000040684b\n.text:000000000040684f\n.text:0000000000406851\n.text:0000000000406853\n.text:0000000000406859\n.text:000000000040685b\n.text:0000000000406860\n.text:0000000000406861\n.text:0000000000406862\n.text:0000000000406864\n.text:0000000000406866\n.text:0000000000406868\n.text:0000000000406869\n.text:000000000040686a\n.text:000000000040686f\n.text:0000000000406870\n'
p1917
tp1918
sS'xmax'
p1919
(S'\n__stdcall xmax(size_t size1, size_t size2)\n'
p1920
V\u000asize_t xmax(size_t size1,size_t size2)\u000a\u000a{\u000a  if (size2 <= size1) {\u000a    size2 = size1;\u000a  }\u000a  return size2;\u000a}\u000a\u000a
p1921
S'CMP RDI,RSI\nCMOVNC RSI,RDI\nMOV RAX,RSI\nRET\n'
p1922
S'48 39 f7\n48 0f 43 f7\n48 89 f0\nc3\n'
p1923
S'.text:000000000040ae80\n.text:000000000040ae83\n.text:000000000040ae87\n.text:000000000040ae8a\n'
p1924
tp1925
sS'getline'
p1926
(S'\n__stdcall getline(char * * __lineptr, size_t * __n, FILE * __stream)\n'
p1927
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\u000a\u000a{\u000a  __ssize_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_getline_006112a0)();\u000a  return _Var1;\u000a}\u000a\u000a
p1928
S'JMP qword ptr [0x006112a0]\n'
p1929
S'ff 25 ca f1 20 00\n'
p1930
S'.plt:00000000004020d0\n'
p1931
tp1932
sS'emit_mandatory_arg_note'
p1933
(S'\n__stdcall emit_mandatory_arg_note()\n'
p1934
V\u000avoid emit_mandatory_arg_note(void)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnMandatory arguments to long options are mandatory for short options too.\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p1935
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40c388\nMOV EDX,0x5\nCALL 0x00401d10\nMOV RSI,qword ptr [0x00611388]\nMOV RDI,RAX\nPOP RAX\nJMP 0x00401e70\n'
p1936
S'50\n31 ff\nbe 88 c3 40 00\nba 05 00 00 00\ne8 4e f8 ff ff\n48 8b 35 bf ee 20 00\n48 89 c7\n58\ne9 9e f9 ff ff\n'
p1937
S'.text:00000000004024b0\n.text:00000000004024b1\n.text:00000000004024b3\n.text:00000000004024b8\n.text:00000000004024bd\n.text:00000000004024c2\n.text:00000000004024c9\n.text:00000000004024cc\n.text:00000000004024cd\n'
p1938
tp1939
sS'strcaseeq0'
p1940
(S'\n__stdcall strcaseeq0()\n'
p1941
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1942
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00406575\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040657c\nJMP 0x004065b0\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004065b0\nTEST BPL,BPL\nJZ 0x004065ab\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x004065c0\nJMP 0x004065b0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1943
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 2d 37 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1944
S'.text:0000000000406540\n.text:0000000000406541\n.text:0000000000406543\n.text:0000000000406545\n.text:0000000000406547\n.text:0000000000406549\n.text:000000000040654a\n.text:000000000040654b\n.text:000000000040654e\n.text:0000000000406551\n.text:0000000000406554\n.text:0000000000406557\n.text:0000000000406559\n.text:000000000040655c\n.text:000000000040655e\n.text:0000000000406563\n.text:0000000000406566\n.text:0000000000406568\n.text:000000000040656a\n.text:000000000040656d\n.text:000000000040656f\n.text:0000000000406571\n.text:0000000000406573\n.text:0000000000406575\n.text:0000000000406577\n.text:000000000040657a\n.text:000000000040657c\n.text:000000000040657f\n.text:0000000000406581\n.text:0000000000406585\n.text:000000000040658a\n.text:000000000040658d\n.text:0000000000406591\n.text:0000000000406595\n.text:0000000000406599\n.text:000000000040659d\n.text:00000000004065a1\n.text:00000000004065a4\n.text:00000000004065a9\n.text:00000000004065ab\n.text:00000000004065b0\n.text:00000000004065b4\n.text:00000000004065b5\n.text:00000000004065b7\n.text:00000000004065b9\n.text:00000000004065bb\n.text:00000000004065bd\n.text:00000000004065be\n'
p1945
tp1946
sS'get_stat_mtime'
p1947
(S'\n__stdcall get_stat_mtime(stat * st)\n'
p1948
V\u000atimespec get_stat_mtime(stat *st)\u000a\u000a{\u000a  return st->st_mtim;\u000a}\u000a\u000a
p1949
S'MOV RAX,qword ptr [RDI + 0x58]\nMOV RDX,qword ptr [RDI + 0x60]\nRET\n'
p1950
S'48 8b 47 58\n48 8b 57 60\nc3\n'
p1951
S'.text:0000000000406b70\n.text:0000000000406b74\n.text:0000000000406b78\n'
p1952
tp1953
sS'strcaseeq2'
p1954
(S'\n__stdcall strcaseeq2()\n'
p1955
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1956
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x00406686\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040668d\nJMP 0x004066ba\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004066ba\nTEST BPL,BPL\nJZ 0x004066b5\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004066d0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1957
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 1d 36 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1958
S'.text:0000000000406650\n.text:0000000000406651\n.text:0000000000406653\n.text:0000000000406655\n.text:0000000000406657\n.text:0000000000406659\n.text:000000000040665a\n.text:000000000040665b\n.text:000000000040665e\n.text:0000000000406661\n.text:0000000000406664\n.text:0000000000406667\n.text:0000000000406669\n.text:000000000040666c\n.text:000000000040666e\n.text:0000000000406673\n.text:0000000000406677\n.text:0000000000406679\n.text:000000000040667b\n.text:000000000040667e\n.text:0000000000406680\n.text:0000000000406682\n.text:0000000000406684\n.text:0000000000406686\n.text:0000000000406688\n.text:000000000040668b\n.text:000000000040668d\n.text:0000000000406690\n.text:0000000000406692\n.text:0000000000406696\n.text:000000000040669a\n.text:000000000040669e\n.text:00000000004066a2\n.text:00000000004066a5\n.text:00000000004066a9\n.text:00000000004066aa\n.text:00000000004066ac\n.text:00000000004066ae\n.text:00000000004066b0\n.text:00000000004066b2\n.text:00000000004066b3\n.text:00000000004066b5\n.text:00000000004066ba\n.text:00000000004066be\n.text:00000000004066bf\n.text:00000000004066c1\n.text:00000000004066c3\n.text:00000000004066c5\n.text:00000000004066c7\n.text:00000000004066c8\n'
p1959
tp1960
sS'strcaseeq1'
p1961
(S'\n__stdcall strcaseeq1()\n'
p1962
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1963
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x004065fd\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406604\nJMP 0x00406637\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406637\nTEST BPL,BPL\nJZ 0x00406632\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406650\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1964
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 a6 36 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1965
S'.text:00000000004065c0\n.text:00000000004065c1\n.text:00000000004065c3\n.text:00000000004065c5\n.text:00000000004065c7\n.text:00000000004065c9\n.text:00000000004065ca\n.text:00000000004065cb\n.text:00000000004065d0\n.text:00000000004065d3\n.text:00000000004065d6\n.text:00000000004065d9\n.text:00000000004065db\n.text:00000000004065de\n.text:00000000004065e3\n.text:00000000004065e5\n.text:00000000004065ea\n.text:00000000004065ee\n.text:00000000004065f0\n.text:00000000004065f2\n.text:00000000004065f5\n.text:00000000004065f7\n.text:00000000004065f9\n.text:00000000004065fb\n.text:00000000004065fd\n.text:00000000004065ff\n.text:0000000000406602\n.text:0000000000406604\n.text:0000000000406607\n.text:0000000000406609\n.text:000000000040660d\n.text:0000000000406611\n.text:0000000000406615\n.text:000000000040661b\n.text:000000000040661f\n.text:0000000000406622\n.text:0000000000406626\n.text:0000000000406627\n.text:0000000000406629\n.text:000000000040662b\n.text:000000000040662d\n.text:000000000040662f\n.text:0000000000406630\n.text:0000000000406632\n.text:0000000000406637\n.text:000000000040663b\n.text:000000000040663c\n.text:000000000040663e\n.text:0000000000406640\n.text:0000000000406642\n.text:0000000000406644\n.text:0000000000406645\n'
p1966
tp1967
sS'strcaseeq4'
p1968
(S'\n__stdcall strcaseeq4()\n'
p1969
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1970
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x0040676c\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406773\nJMP 0x00406794\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00406794\nTEST BPL,BPL\nJZ 0x0040678f\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004067a0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1971
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 37 35 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1972
S'.text:0000000000406740\n.text:0000000000406741\n.text:0000000000406743\n.text:0000000000406745\n.text:0000000000406746\n.text:0000000000406747\n.text:000000000040674a\n.text:000000000040674d\n.text:000000000040674f\n.text:0000000000406752\n.text:0000000000406754\n.text:0000000000406759\n.text:000000000040675d\n.text:000000000040675f\n.text:0000000000406761\n.text:0000000000406764\n.text:0000000000406766\n.text:0000000000406768\n.text:000000000040676a\n.text:000000000040676c\n.text:000000000040676e\n.text:0000000000406771\n.text:0000000000406773\n.text:0000000000406776\n.text:0000000000406778\n.text:000000000040677c\n.text:0000000000406780\n.text:0000000000406783\n.text:0000000000406787\n.text:0000000000406788\n.text:000000000040678a\n.text:000000000040678c\n.text:000000000040678d\n.text:000000000040678f\n.text:0000000000406794\n.text:0000000000406798\n.text:0000000000406799\n.text:000000000040679b\n.text:000000000040679d\n.text:000000000040679e\n'
p1973
tp1974
sS'guess_time_tm'
p1975
(S'\n__stdcall guess_time_tm(long_int year, long_int yday, time_t * t, tm * tp)\n'
p1976
V\u000atime_t guess_time_tm(long_int year,long_int yday,time_t *t,tm *tp)\u000a\u000a{\u000a  int iVar1;\u000a  time_t b;\u000a  long lVar2;\u000a  time_t a;\u000a  int min0;\u000a  time_t *in_R9;\u000a  long in_stack_00000008;\u000a  \u000a  if (in_stack_00000008 == 0) {\u000a    a = *in_R9;\u000a  }\u000a  else {\u000a    b = ydhms_diff(year,yday,(int)t,(int)tp,min0,*(int *)(in_stack_00000008 + 0x14));\u000a    a = *in_R9;\u000a    iVar1 = time_t_add_ok(a,b);\u000a    if (iVar1 != 0) {\u000a      return a + b;\u000a    }\u000a  }\u000a  if (a < 0) {\u000a    lVar2 = -0x8000000000000000;\u000a    if (a < -0x7ffffffffffffffe) {\u000a      lVar2 = a + 1;\u000a    }\u000a  }\u000a  else {\u000a    lVar2 = a + -1;\u000a    if (a < 0x7ffffffffffffffe) {\u000a      lVar2 = 0x7fffffffffffffff;\u000a    }\u000a  }\u000a  return lVar2;\u000a}\u000a\u000a
p1977
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,R9\nMOV RAX,qword ptr [RSP + 0x20]\nTEST RAX,RAX\nJZ 0x0040ac4c\nMOV R9D,dword ptr [RAX + 0x14]\nMOV R10D,dword ptr [RAX + 0x1c]\nMOV R11D,dword ptr [RAX + 0x8]\nMOV EBX,dword ptr [RAX]\nMOV EAX,dword ptr [RAX + 0x4]\nPUSH RBX\nPUSH RAX\nPUSH R11\nPUSH R10\nCALL 0x0040aaf0\nADD RSP,0x20\nMOV R14,RAX\nMOV RBX,qword ptr [R15]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x0040adc0\nTEST EAX,EAX\nJZ 0x0040ac4f\nADD RBX,R14\nJMP 0x0040ac85\nMOV RBX,qword ptr [R15]\nMOV RAX,0x7ffffffffffffffd\nTEST RBX,RBX\nJS 0x0040ac6f\nCMP RBX,RAX\nLEA RCX,[RAX + 0x2]\nLEA RAX,[RBX + -0x1]\nCMOVLE RAX,RCX\nJMP 0x0040ac88\nLEA RCX,[RAX + 0x5]\nLEA RDX,[RBX + 0x1]\nADD RAX,0x3\nCMP RBX,RCX\nCMOVL RAX,RDX\nMOV RBX,RAX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1978
S'41 57\n41 56\n53\n4d 89 cf\n48 8b 44 24 20\n48 85 c0\n74 3a\n44 8b 48 14\n44 8b 50 1c\n44 8b 58 08\n8b 18\n8b 40 04\n53\n50\n41 53\n41 52\ne8 c2 fe ff ff\n48 83 c4 20\n49 89 c6\n49 8b 1f\n48 89 df\n4c 89 f6\ne8 7d 01 00 00\n85 c0\n74 08\n4c 01 f3\neb 39\n49 8b 1f\n48 b8 fd ff ff ff ff ff ff 7f\n48 85 db\n78 11\n48 39 c3\n48 8d 48 02\n48 8d 43 ff\n48 0f 4e c1\neb 19\n48 8d 48 05\n48 8d 53 01\n48 83 c0 03\n48 39 cb\n48 0f 4c c2\n48 89 c3\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1979
S'.text:000000000040ac00\n.text:000000000040ac02\n.text:000000000040ac04\n.text:000000000040ac05\n.text:000000000040ac08\n.text:000000000040ac0d\n.text:000000000040ac10\n.text:000000000040ac12\n.text:000000000040ac16\n.text:000000000040ac1a\n.text:000000000040ac1e\n.text:000000000040ac20\n.text:000000000040ac23\n.text:000000000040ac24\n.text:000000000040ac25\n.text:000000000040ac27\n.text:000000000040ac29\n.text:000000000040ac2e\n.text:000000000040ac32\n.text:000000000040ac35\n.text:000000000040ac38\n.text:000000000040ac3b\n.text:000000000040ac3e\n.text:000000000040ac43\n.text:000000000040ac45\n.text:000000000040ac47\n.text:000000000040ac4a\n.text:000000000040ac4c\n.text:000000000040ac4f\n.text:000000000040ac59\n.text:000000000040ac5c\n.text:000000000040ac5e\n.text:000000000040ac61\n.text:000000000040ac65\n.text:000000000040ac69\n.text:000000000040ac6d\n.text:000000000040ac6f\n.text:000000000040ac73\n.text:000000000040ac77\n.text:000000000040ac7b\n.text:000000000040ac7e\n.text:000000000040ac82\n.text:000000000040ac85\n.text:000000000040ac88\n.text:000000000040ac89\n.text:000000000040ac8b\n.text:000000000040ac8d\n'
p1980
tp1981
sS'strcaseeq3'
p1982
(S'\n__stdcall strcaseeq3()\n'
p1983
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1984
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00409c90\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00406700\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00406707\nJMP 0x0040672a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040672a\nTEST BPL,BPL\nJZ 0x00406725\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00406740\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1985
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 a3 35 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1986
S'.text:00000000004066d0\n.text:00000000004066d1\n.text:00000000004066d3\n.text:00000000004066d5\n.text:00000000004066d7\n.text:00000000004066d8\n.text:00000000004066db\n.text:00000000004066de\n.text:00000000004066e1\n.text:00000000004066e3\n.text:00000000004066e6\n.text:00000000004066e8\n.text:00000000004066ed\n.text:00000000004066f1\n.text:00000000004066f3\n.text:00000000004066f5\n.text:00000000004066f8\n.text:00000000004066fa\n.text:00000000004066fc\n.text:00000000004066fe\n.text:0000000000406700\n.text:0000000000406702\n.text:0000000000406705\n.text:0000000000406707\n.text:000000000040670a\n.text:000000000040670c\n.text:0000000000406710\n.text:0000000000406714\n.text:0000000000406718\n.text:000000000040671b\n.text:000000000040671c\n.text:000000000040671e\n.text:0000000000406720\n.text:0000000000406722\n.text:0000000000406723\n.text:0000000000406725\n.text:000000000040672a\n.text:000000000040672b\n.text:000000000040672d\n.text:000000000040672f\n.text:0000000000406731\n.text:0000000000406732\n'
p1987
tp1988
sS'last_component'
p1989
(S'\n__stdcall last_component(char * name)\n'
p1990
V\u000achar * last_component(char *name)\u000a\u000a{\u000a  bool bVar1;\u000a  bool bVar2;\u000a  char *pcVar3;\u000a  \u000a  name = name + -1;\u000a  do {\u000a    pcVar3 = name + 1;\u000a    name = name + 1;\u000a  } while (*pcVar3 == '/');\u000a  bVar2 = false;\u000a  pcVar3 = name;\u000a  do {\u000a    bVar1 = true;\u000a    if (*name != '/') {\u000a      if (*name == 0) {\u000a        return pcVar3;\u000a      }\u000a      bVar1 = bVar2;\u000a      if (bVar2) {\u000a        pcVar3 = name;\u000a        bVar1 = false;\u000a      }\u000a    }\u000a    bVar2 = bVar1;\u000a    name = name + 1;\u000a  } while( true );\u000a}\u000a\u000a
p1991
S'DEC RDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nCMP byte ptr [RDI + 0x1],0x2f\nLEA RDI,[RDI + 0x1]\nJZ 0x00404cc0\nXOR ESI,ESI\nMOV RAX,RDI\nJMP 0x00404ce6\nINC RAX\nMOV SIL,DL\nMOVZX ECX,byte ptr [RAX]\nMOV DL,0x1\nCMP CL,0x2f\nJZ 0x00404ce0\nTEST CL,CL\nJZ 0x00404d07\nMOV EDX,ESI\nAND DL,0x1\nJZ 0x00404cfd\nXOR ESI,ESI\nTEST DL,DL\nCMOVNZ RDI,RAX\nMOV EDX,ESI\nJMP 0x00404ce0\nMOV RAX,RDI\nRET\n'
p1992
S'48 ff cf\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n80 7f 01 2f\n48 8d 7f 01\n74 f6\n31 f6\n48 89 f8\neb 15\n48 ff c0\n40 88 d6\n0f b6 08\nb2 01\n80 f9 2f\n74 f0\n84 c9\n74 13\n89 f2\n80 e2 01\n74 02\n31 f6\n84 d2\n48 0f 45 f8\n89 f2\neb d9\n48 89 f8\nc3\n'
p1993
S'.text:0000000000404cb0\n.text:0000000000404cb3\n.text:0000000000404cc0\n.text:0000000000404cc4\n.text:0000000000404cc8\n.text:0000000000404cca\n.text:0000000000404ccc\n.text:0000000000404ccf\n.text:0000000000404ce0\n.text:0000000000404ce3\n.text:0000000000404ce6\n.text:0000000000404ce9\n.text:0000000000404ceb\n.text:0000000000404cee\n.text:0000000000404cf0\n.text:0000000000404cf2\n.text:0000000000404cf4\n.text:0000000000404cf6\n.text:0000000000404cf9\n.text:0000000000404cfb\n.text:0000000000404cfd\n.text:0000000000404cff\n.text:0000000000404d03\n.text:0000000000404d05\n.text:0000000000404d07\n.text:0000000000404d0a\n'
p1994
tp1995
sS'register_tm_clones'
p1996
(S'\n__stdcall register_tm_clones()\n'
p1997
V\u000a/* WARNING: Removing unreachable block (ram,0x00402223) */\u000a/* WARNING: Removing unreachable block (ram,0x0040222d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1998
S'MOV ESI,0x611380\nPUSH RBP\nSUB RSI,0x611380\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00402238\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00402238\nPOP RBP\nMOV EDI,0x611380\nJMP RAX\nPOP RBP\nRET\n'
p1999
S'be 80 13 61 00\n55\n48 81 ee 80 13 61 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 80 13 61 00\nff e0\n5d\nc3\n'
p2000
S'.text:0000000000402200\n.text:0000000000402205\n.text:0000000000402206\n.text:000000000040220d\n.text:0000000000402211\n.text:0000000000402214\n.text:0000000000402217\n.text:000000000040221b\n.text:000000000040221e\n.text:0000000000402221\n.text:0000000000402223\n.text:0000000000402228\n.text:000000000040222b\n.text:000000000040222d\n.text:000000000040222e\n.text:0000000000402233\n.text:0000000000402238\n.text:0000000000402239\n'
p2001
tp2002
sS'c_islower'
p2003
(S'\n__stdcall c_islower()\n'
p2004
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p2005
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p2006
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p2007
S'.text:0000000000409c30\n.text:0000000000409c33\n.text:0000000000409c36\n.text:0000000000409c39\n'
p2008
tp2009
sS'getcon'
p2010
(S'\n__stdcall getcon(security_context_t * con)\n'
p2011
V\u000aint getcon(security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2012
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2013
S'50\ne8 0a b3 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2014
S'.text:0000000000406910\n.text:0000000000406911\n.text:0000000000406916\n.text:000000000040691c\n.text:0000000000406921\n.text:0000000000406922\n'
p2015
tp2016
sS'out_epoch_sec'
p2017
(S'\n__stdcall out_epoch_sec()\n'
p2018
V\u000avoid out_epoch_sec(char *pcParm1,char *pcParm2,long lParm3,long lParm4)\u000a\u000a{\u000a  bool bVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  long lVar4;\u000a  uint uVar5;\u000a  undefined *puVar6;\u000a  ulong uVar7;\u000a  int iVar8;\u000a  int iVar9;\u000a  char *__nptr;\u000a  ulong uVar10;\u000a  char *pcVar11;\u000a  long lVar12;\u000a  uint uVar13;\u000a  \u000a  puVar6 = (undefined *)memchr(pcParm1,0x2e,(size_t)pcParm2);\u000a  if (puVar6 == (undefined *)0x0) {\u000a    iVar8 = 0;\u000a    uVar13 = 0;\u000aLAB_00404447:\u000a    iVar2 = 1;\u000a    uVar5 = 9;\u000a    do {\u000a      iVar2 = iVar2 * 10;\u000a      uVar5 = uVar5 - 1;\u000a    } while (uVar13 != uVar5);\u000a  }\u000a  else {\u000a    pcVar11 = puVar6 + -(long)pcParm1;\u000a    pcParm1[(long)pcParm2] = 0;\u000a    uVar13 = 9;\u000a    if ((int)(char)puVar6[1] - 0x30U < 10) {\u000a      iVar8 = 0;\u000a      lVar3 = strtol(puVar6 + 1,(char **)0x0,10);\u000a      uVar13 = 0x7fffffff;\u000a      if (lVar3 < 0x7fffffff) {\u000a        uVar13 = (uint)lVar3;\u000a      }\u000a      if (uVar13 == 0) {\u000a        uVar13 = 0;\u000a        pcParm2 = pcVar11;\u000a        goto LAB_00404447;\u000a      }\u000a    }\u000a    iVar8 = 0;\u000a    if ((int)(char)puVar6[-1] - 0x30U < 10) {\u000a      *puVar6 = 0;\u000a      lVar3 = 0;\u000a      do {\u000a        lVar12 = lVar3;\u000a        lVar3 = lVar12 + -1;\u000a      } while ((int)(char)puVar6[lVar12 + -2] - 0x30U < 10);\u000a      __nptr = puVar6 + lVar3;\u000a      lVar4 = strtol(__nptr,(char **)0x0,10);\u000a      iVar8 = 0x7fffffff;\u000a      if (lVar4 < 0x80000000) {\u000a        iVar8 = (int)lVar4;\u000a      }\u000a      if (1 < iVar8) {\u000a        pcVar11 = __nptr + (ulong)(puVar6[lVar3] == '0') + -(long)pcParm1;\u000a        iVar2 = 0;\u000a        if (decimal_point_len < (ulong)(long)iVar8) {\u000a          iVar2 = iVar8 - (int)decimal_point_len;\u000a        }\u000a        if ((1 < iVar2) && (1 < (int)(iVar2 - uVar13))) {\u000a          if (pcParm1 < __nptr + (ulong)(puVar6[lVar3] == '0')) {\u000a            puVar6 = puVar6 + lVar12 + (((ulong)(puVar6[lVar3] == '0') - 1) - (long)pcParm1);\u000a            bVar1 = false;\u000a            pcVar11 = pcParm1;\u000a            __nptr = pcParm1;\u000a            do {\u000a              if (*pcVar11 == '-') {\u000a                bVar1 = true;\u000a              }\u000a              else {\u000a                *__nptr = *pcVar11;\u000a                __nptr = __nptr + 1;\u000a              }\u000a              pcVar11 = pcVar11 + 1;\u000a              puVar6 = puVar6 + -1;\u000a            } while (puVar6 != (undefined *)0x0);\u000a            pcVar11 = __nptr + -(long)pcParm1;\u000a            if (!bVar1) goto LAB_00404417;\u000a            lVar3 = 0;\u000a          }\u000a          else {\u000a            pcVar11 = (char *)0x0;\u000a            __nptr = pcParm1;\u000aLAB_00404417:\u000a            iVar2 = __sprintf_chk(__nptr,1,0xffffffffffffffff);\u000a            lVar3 = (long)iVar2;\u000a          }\u000a          pcVar11 = pcVar11 + lVar3;\u000a        }\u000a      }\u000a    }\u000a    iVar2 = 1;\u000a    pcParm2 = pcVar11;\u000a    if ((int)uVar13 < 9) goto LAB_00404447;\u000a  }\u000a  uVar5 = (uint)(lParm4 / (long)iVar2);\u000a  if ((lParm3 < 0) && (lParm4 != 0)) {\u000a    uVar5 = ((int)(1000000000 / (long)iVar2) - uVar5) - (uint)(lParm4 % (long)iVar2 != 0);\u000a    lParm3 = lParm3 + (ulong)(uVar5 != 0);\u000a    if (lParm3 == 0) {\u000a      iVar2 = out_minus_zero(pcParm1,(size_t)pcParm2);\u000a      goto joined_r0x0040452f;\u000a    }\u000a  }\u000a  iVar2 = out_int(pcParm1,(size_t)pcParm2,lParm3);\u000ajoined_r0x0040452f:\u000a  if (uVar13 != 0) {\u000a    uVar7 = 9;\u000a    if ((int)uVar13 < 10) {\u000a      uVar7 = (ulong)uVar13;\u000a    }\u000a    uVar10 = 0;\u000a    if (iVar2 < 0) {\u000a      iVar2 = 0;\u000a    }\u000a    iVar9 = iVar8 - iVar2;\u000a    if ((iVar9 != 0 && iVar2 <= iVar8) && (decimal_point_len < (ulong)(long)iVar9)) {\u000a      uVar10 = (ulong)(uint)((iVar9 - (int)uVar7) - (int)decimal_point_len);\u000a    }\u000a    __printf_chk(1,"%s%.*d%-*.*d",decimal_point,uVar7,(ulong)uVar5,uVar10,\u000a                 (ulong)(uVar13 - (int)uVar7),0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p2019
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R12,RCX\nMOV R14,RDX\nMOV R13,RSI\nMOV RBP,RDI\nMOV ESI,0x2e\nMOV RDX,R13\nCALL 0x00401e50\nMOV RBX,RAX\nTEST RBX,RBX\nMOV qword ptr [RSP + 0x8],RBP\nJZ 0x004043ed\nMOV qword ptr [RSP + 0x10],R12\nMOV R12,RBX\nSUB R12,RBP\nMOV byte ptr [RBP + R13*0x1],0x0\nMOVSX EAX,byte ptr [RBX + 0x1]\nADD EAX,-0x30\nMOV R15D,0x9\nCMP EAX,0x9\nJA 0x004042e6\nLEA RDI,[RBX + 0x1]\nXOR EBP,EBP\nXOR ESI,ESI\nMOV EDX,0xa\nCALL 0x00401ec0\nCMP RAX,0x7fffffff\nMOV R15D,0x7fffffff\nCMOVL R15D,EAX\nTEST R15D,R15D\nJZ 0x004043fa\nMOVSX EAX,byte ptr [RBX + -0x1]\nADD EAX,-0x30\nXOR EBP,EBP\nCMP EAX,0x9\nJA 0x00404434\nMOV qword ptr [RSP],R14\nMOV byte ptr [RBX],0x0\nXOR R13D,R13D\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVSX EAX,byte ptr [RBX + R13*0x1 + -0x2]\nADD EAX,-0x30\nDEC R13\nCMP EAX,0xa\nJC 0x00404310\nLEA R14,[RBX + R13*0x1]\nXOR ESI,ESI\nMOV EDX,0xa\nMOV RDI,R14\nCALL 0x00401ec0\nMOV ECX,0x80000000\nCMP RAX,RCX\nMOV EBP,0x7fffffff\nCMOVL RBP,RAX\nCMP EBP,0x2\nJL 0x004043f4\nXOR EAX,EAX\nCMP byte ptr [RBX + R13*0x1],0x30\nSETZ AL\nADD R14,RAX\nMOV R12,R14\nSUB R12,qword ptr [RSP + 0x8]\nMOV RCX,qword ptr [0x006113d8]\nMOVSXD RDX,EBP\nMOV ESI,EDX\nSUB ESI,ECX\nCMP RDX,RCX\nMOV R8D,0x0\nCMOVA R8D,ESI\nCMP R8D,0x2\nJL 0x00404407\nSUB R8D,R15D\nCMP R8D,0x2\nJL 0x00404407\nMOV RSI,qword ptr [RSP + 0x8]\nCMP R14,RSI\nJBE 0x0040440d\nDEC RAX\nSUB RAX,RSI\nADD RBX,RAX\nLEA RCX,[R13 + RBX*0x1 + 0x1]\nXOR EAX,EAX\nMOV RDX,RSI\nMOV RDI,RSI\nMOV R14,qword ptr [RSP]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EBX,byte ptr [RDX]\nCMP BL,0x2d\nJNZ 0x004043d0\nMOV AL,0x1\nJMP 0x004043d5\nMOV byte ptr [RDI],BL\nINC RDI\nINC RDX\nDEC RCX\nJNZ 0x004043c0\nMOV R12,RDI\nSUB R12,qword ptr [RSP + 0x8]\nTEST AL,0x1\nJZ 0x00404417\nXOR EAX,EAX\nJMP 0x00404431\nXOR EBP,EBP\nXOR R15D,R15D\nJMP 0x00404447\nMOV R14,qword ptr [RSP]\nJMP 0x00404434\nMOV R13,R12\nXOR R15D,R15D\nMOV R12,qword ptr [RSP + 0x10]\nJMP 0x00404447\nMOV R14,qword ptr [RSP]\nJMP 0x00404434\nXOR R12D,R12D\nMOV RDI,RSI\nMOV R14,qword ptr [RSP]\nMOV ESI,0x1\nMOV RDX,-0x1\nMOV ECX,0x40d6df\nXOR EAX,EAX\nCALL 0x00402180\nCDQE\nADD R12,RAX\nMOV EAX,0x1\nCMP R15D,0x8\nMOV R13,R12\nMOV R12,qword ptr [RSP + 0x10]\nJG 0x0040446c\nMOV EAX,0x1\nMOV ECX,0x9\nNOP dword ptr CS:[RAX + RAX*0x1]\nADD EAX,EAX\nLEA EAX,[RAX + RAX*0x4]\nDEC ECX\nCMP R15D,ECX\nJNZ 0x00404460\nMOVSXD RSI,EAX\nMOV RAX,R12\nCQO\nIDIV RSI\nMOV RBX,RAX\nTEST R14,R14\nJNS 0x004044af\nTEST R12,R12\nJZ 0x004044af\nMOV EAX,0x3b9aca00\nXOR EDX,EDX\nIDIV ESI\nMOV ECX,EAX\nSUB ECX,EBX\nMOV RAX,R12\nCQO\nIDIV RSI\nXOR EAX,EAX\nTEST RDX,RDX\nSETNZ AL\nXOR EDX,EDX\nMOV EBX,ECX\nSUB EBX,EAX\nSETNZ DL\nADD R14,RDX\nJZ 0x0040451f\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,R13\nMOV RDX,R14\nCALL 0x00403c70\nTEST R15D,R15D\nJZ 0x00404531\nCMP R15D,0xa\nMOV ECX,0x9\nCMOVL ECX,R15D\nSUB R15D,ECX\nXOR R9D,R9D\nTEST EAX,EAX\nCMOVS EAX,R9D\nSUB EBP,EAX\nJLE 0x004044f7\nMOV RAX,qword ptr [0x006113d8]\nMOVSXD RDX,EBP\nCMP RDX,RAX\nJBE 0x004044f7\nSUB EBP,ECX\nSUB EBP,EAX\nMOV R9D,EBP\nMOV RDX,qword ptr [0x006113d0]\nMOV EDI,0x1\nMOV ESI,0x40cb8e\nMOV EAX,0x0\nMOV R8D,EBX\nPUSH 0x0\nPUSH R15\nCALL 0x00402020\nADD RSP,0x28\nJMP 0x00404535\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,R13\nCALL 0x00404750\nTEST R15D,R15D\nJNZ 0x004044c4\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2020
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n49 89 cc\n49 89 d6\n49 89 f5\n48 89 fd\nbe 2e 00 00 00\n4c 89 ea\ne8 c9 db ff ff\n48 89 c3\n48 85 db\n48 89 6c 24 08\n0f 84 55 01 00 00\n4c 89 64 24 10\n49 89 dc\n49 29 ec\n42 c6 44 2d 00 00\n0f be 43 01\n83 c0 d0\n41 bf 09 00 00 00\n83 f8 09\n77 2b\n48 8d 7b 01\n31 ed\n31 f6\nba 0a 00 00 00\ne8 f3 db ff ff\n48 3d ff ff ff 7f\n41 bf ff ff ff 7f\n44 0f 4c f8\n45 85 ff\n0f 84 14 01 00 00\n0f be 43 ff\n83 c0 d0\n31 ed\n83 f8 09\n0f 87 3c 01 00 00\n4c 89 34 24\nc6 03 00\n45 31 ed\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n42 0f be 44 2b fe\n83 c0 d0\n49 ff cd\n83 f8 0a\n72 ef\n4e 8d 34 2b\n31 f6\nba 0a 00 00 00\n4c 89 f7\ne8 8c db ff ff\nb9 00 00 00 80\n48 39 c8\nbd ff ff ff 7f\n48 0f 4c e8\n83 fd 02\n0f 8c a6 00 00 00\n31 c0\n42 80 3c 2b 30\n0f 94 c0\n49 01 c6\n4d 89 f4\n4c 2b 64 24 08\n48 8b 0d 6e d0 20 00\n48 63 d5\n89 d6\n29 ce\n48 39 ca\n41 b8 00 00 00 00\n44 0f 47 c6\n41 83 f8 02\n0f 8c 7f 00 00 00\n45 29 f8\n41 83 f8 02\n7c 76\n48 8b 74 24 08\n49 39 f6\n76 72\n48 ff c8\n48 29 f0\n48 01 c3\n49 8d 4c 1d 01\n31 c0\n48 89 f2\n48 89 f7\n4c 8b 34 24\n66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 1a\n80 fb 2d\n75 08\nb0 01\neb 09\n88 1f\n48 ff c7\n48 ff c2\n48 ff c9\n75 e3\n49 89 fc\n4c 2b 64 24 08\na8 01\n74 2e\n31 c0\neb 44\n31 ed\n45 31 ff\neb 53\n4c 8b 34 24\neb 3a\n4d 89 e5\n45 31 ff\n4c 8b 64 24 10\neb 40\n4c 8b 34 24\neb 27\n45 31 e4\n48 89 f7\n4c 8b 34 24\nbe 01 00 00 00\n48 c7 c2 ff ff ff ff\nb9 df d6 40 00\n31 c0\ne8 51 dd ff ff\n48 98\n49 01 c4\nb8 01 00 00 00\n41 83 ff 08\n4d 89 e5\n4c 8b 64 24 10\n7f 25\nb8 01 00 00 00\nb9 09 00 00 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n01 c0\n8d 04 80\nff c9\n41 39 cf\n75 f4\n48 63 f0\n4c 89 e0\n48 99\n48 f7 fe\n48 89 c3\n4d 85 f6\n79 30\n4d 85 e4\n74 2b\nb8 00 ca 9a 3b\n31 d2\nf7 fe\n89 c1\n29 d9\n4c 89 e0\n48 99\n48 f7 fe\n31 c0\n48 85 d2\n0f 95 c0\n31 d2\n89 cb\n29 c3\n0f 95 c2\n49 01 d6\n74 70\n48 8b 7c 24 08\n4c 89 ee\n4c 89 f2\ne8 b1 f7 ff ff\n45 85 ff\n74 6d\n41 83 ff 0a\nb9 09 00 00 00\n41 0f 4c cf\n41 29 cf\n45 31 c9\n85 c0\n41 0f 48 c1\n29 c5\n7e 16\n48 8b 05 f0 ce 20 00\n48 63 d5\n48 39 c2\n76 07\n29 cd\n29 c5\n41 89 e9\n48 8b 15 d2 ce 20 00\nbf 01 00 00 00\nbe 8e cb 40 00\nb8 00 00 00 00\n41 89 d8\n6a 00\n41 57\ne8 07 db ff ff\n48 83 c4 28\neb 16\n48 8b 7c 24 08\n4c 89 ee\ne8 24 02 00 00\n45 85 ff\n75 93\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p2021
S'.text:0000000000404260\n.text:0000000000404261\n.text:0000000000404263\n.text:0000000000404265\n.text:0000000000404267\n.text:0000000000404269\n.text:000000000040426a\n.text:000000000040426e\n.text:0000000000404271\n.text:0000000000404274\n.text:0000000000404277\n.text:000000000040427a\n.text:000000000040427f\n.text:0000000000404282\n.text:0000000000404287\n.text:000000000040428a\n.text:000000000040428d\n.text:0000000000404292\n.text:0000000000404298\n.text:000000000040429d\n.text:00000000004042a0\n.text:00000000004042a3\n.text:00000000004042a9\n.text:00000000004042ad\n.text:00000000004042b0\n.text:00000000004042b6\n.text:00000000004042b9\n.text:00000000004042bb\n.text:00000000004042bf\n.text:00000000004042c1\n.text:00000000004042c3\n.text:00000000004042c8\n.text:00000000004042cd\n.text:00000000004042d3\n.text:00000000004042d9\n.text:00000000004042dd\n.text:00000000004042e0\n.text:00000000004042e6\n.text:00000000004042ea\n.text:00000000004042ed\n.text:00000000004042ef\n.text:00000000004042f2\n.text:00000000004042f8\n.text:00000000004042fc\n.text:00000000004042ff\n.text:0000000000404302\n.text:0000000000404310\n.text:0000000000404316\n.text:0000000000404319\n.text:000000000040431c\n.text:000000000040431f\n.text:0000000000404321\n.text:0000000000404325\n.text:0000000000404327\n.text:000000000040432c\n.text:000000000040432f\n.text:0000000000404334\n.text:0000000000404339\n.text:000000000040433c\n.text:0000000000404341\n.text:0000000000404345\n.text:0000000000404348\n.text:000000000040434e\n.text:0000000000404350\n.text:0000000000404355\n.text:0000000000404358\n.text:000000000040435b\n.text:000000000040435e\n.text:0000000000404363\n.text:000000000040436a\n.text:000000000040436d\n.text:000000000040436f\n.text:0000000000404371\n.text:0000000000404374\n.text:000000000040437a\n.text:000000000040437e\n.text:0000000000404382\n.text:0000000000404388\n.text:000000000040438b\n.text:000000000040438f\n.text:0000000000404391\n.text:0000000000404396\n.text:0000000000404399\n.text:000000000040439b\n.text:000000000040439e\n.text:00000000004043a1\n.text:00000000004043a4\n.text:00000000004043a9\n.text:00000000004043ab\n.text:00000000004043ae\n.text:00000000004043b1\n.text:00000000004043b5\n.text:00000000004043c0\n.text:00000000004043c3\n.text:00000000004043c6\n.text:00000000004043c8\n.text:00000000004043ca\n.text:00000000004043d0\n.text:00000000004043d2\n.text:00000000004043d5\n.text:00000000004043d8\n.text:00000000004043db\n.text:00000000004043dd\n.text:00000000004043e0\n.text:00000000004043e5\n.text:00000000004043e7\n.text:00000000004043e9\n.text:00000000004043eb\n.text:00000000004043ed\n.text:00000000004043ef\n.text:00000000004043f2\n.text:00000000004043f4\n.text:00000000004043f8\n.text:00000000004043fa\n.text:00000000004043fd\n.text:0000000000404400\n.text:0000000000404405\n.text:0000000000404407\n.text:000000000040440b\n.text:000000000040440d\n.text:0000000000404410\n.text:0000000000404413\n.text:0000000000404417\n.text:000000000040441c\n.text:0000000000404423\n.text:0000000000404428\n.text:000000000040442a\n.text:000000000040442f\n.text:0000000000404431\n.text:0000000000404434\n.text:0000000000404439\n.text:000000000040443d\n.text:0000000000404440\n.text:0000000000404445\n.text:0000000000404447\n.text:000000000040444c\n.text:0000000000404451\n.text:0000000000404460\n.text:0000000000404462\n.text:0000000000404465\n.text:0000000000404467\n.text:000000000040446a\n.text:000000000040446c\n.text:000000000040446f\n.text:0000000000404472\n.text:0000000000404474\n.text:0000000000404477\n.text:000000000040447a\n.text:000000000040447d\n.text:000000000040447f\n.text:0000000000404482\n.text:0000000000404484\n.text:0000000000404489\n.text:000000000040448b\n.text:000000000040448d\n.text:000000000040448f\n.text:0000000000404491\n.text:0000000000404494\n.text:0000000000404496\n.text:0000000000404499\n.text:000000000040449b\n.text:000000000040449e\n.text:00000000004044a1\n.text:00000000004044a3\n.text:00000000004044a5\n.text:00000000004044a7\n.text:00000000004044aa\n.text:00000000004044ad\n.text:00000000004044af\n.text:00000000004044b4\n.text:00000000004044b7\n.text:00000000004044ba\n.text:00000000004044bf\n.text:00000000004044c2\n.text:00000000004044c4\n.text:00000000004044c8\n.text:00000000004044cd\n.text:00000000004044d1\n.text:00000000004044d4\n.text:00000000004044d7\n.text:00000000004044d9\n.text:00000000004044dd\n.text:00000000004044df\n.text:00000000004044e1\n.text:00000000004044e8\n.text:00000000004044eb\n.text:00000000004044ee\n.text:00000000004044f0\n.text:00000000004044f2\n.text:00000000004044f4\n.text:00000000004044f7\n.text:00000000004044fe\n.text:0000000000404503\n.text:0000000000404508\n.text:000000000040450d\n.text:0000000000404510\n.text:0000000000404512\n.text:0000000000404514\n.text:0000000000404519\n.text:000000000040451d\n.text:000000000040451f\n.text:0000000000404524\n.text:0000000000404527\n.text:000000000040452c\n.text:000000000040452f\n.text:0000000000404531\n.text:0000000000404535\n.text:0000000000404536\n.text:0000000000404538\n.text:000000000040453a\n.text:000000000040453c\n.text:000000000040453e\n.text:000000000040453f\n'
p2022
tp2023
sS'fwrite'
p2024
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p2025
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_006112b0)();\u000a  return sVar1;\u000a}\u000a\u000a
p2026
S'JMP qword ptr [0x006112b0]\n'
p2027
S'ff 25 ba f1 20 00\n'
p2028
S'.plt:00000000004020f0\n'
p2029
tp2030
sS'xasprintf'
p2031
(S'\n__stdcall xasprintf(char * format)\n'
p2032
V\u000achar * xasprintf(char *format,...)\u000a\u000a{\u000a  char in_AL;\u000a  char *pcVar1;\u000a  undefined8 in_RCX;\u000a  undefined8 in_RDX;\u000a  undefined8 in_RSI;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list args;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [8];\u000a  undefined8 local_b0;\u000a  undefined8 local_a8;\u000a  undefined8 local_a0;\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &args[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 8;\u000a  local_b0 = in_RSI;\u000a  local_a8 = in_RDX;\u000a  local_a0 = in_RCX;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  pcVar1 = xvasprintf(format,&local_d8);\u000a  return pcVar1;\u000a}\u000a\u000a
p2033
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00408ba2\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nMOV qword ptr [RSP + 0x28],RSI\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x8\nMOV RSI,RSP\nCALL 0x0040a210\nADD RSP,0xd8\nRET\n'
p2034
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 89 74 24 28\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 08 00 00 00\n48 89 e6\ne8 27 16 00 00\n48 81 c4 d8 00 00 00\nc3\n'
p2035
S'.text:0000000000408b60\n.text:0000000000408b67\n.text:0000000000408b69\n.text:0000000000408b6b\n.text:0000000000408b70\n.text:0000000000408b75\n.text:0000000000408b7a\n.text:0000000000408b82\n.text:0000000000408b8a\n.text:0000000000408b92\n.text:0000000000408b9a\n.text:0000000000408ba2\n.text:0000000000408ba7\n.text:0000000000408bac\n.text:0000000000408bb1\n.text:0000000000408bb6\n.text:0000000000408bbb\n.text:0000000000408bc0\n.text:0000000000408bc5\n.text:0000000000408bcd\n.text:0000000000408bd2\n.text:0000000000408bda\n.text:0000000000408be1\n.text:0000000000408be4\n.text:0000000000408be9\n.text:0000000000408bf0\n'
p2036
tp2037
sS'fgetfilecon'
p2038
(S'\n__stdcall fgetfilecon(security_context_t * con)\n'
p2039
V\u000aint fgetfilecon(security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2040
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2041
S'50\ne8 3a b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2042
S'.text:00000000004069e0\n.text:00000000004069e1\n.text:00000000004069e6\n.text:00000000004069ec\n.text:00000000004069f1\n.text:00000000004069f2\n'
p2043
tp2044
sS'getfilecon'
p2045
(S'\n__stdcall getfilecon(char * file, security_context_t * con)\n'
p2046
V\u000aint getfilecon(char *file,security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2047
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2048
S'50\ne8 7a b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2049
S'.text:00000000004069a0\n.text:00000000004069a1\n.text:00000000004069a6\n.text:00000000004069ac\n.text:00000000004069b1\n.text:00000000004069b2\n'
p2050
tp2051
sS'setexeccon'
p2052
(S'\n__stdcall setexeccon(security_context_t con)\n'
p2053
V\u000aint setexeccon(security_context_t con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2054
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2055
S'50\ne8 7a b1 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2056
S'.text:0000000000406aa0\n.text:0000000000406aa1\n.text:0000000000406aa6\n.text:0000000000406aac\n.text:0000000000406ab1\n.text:0000000000406ab2\n'
p2057
tp2058
sS'rpl_mktime'
p2059
(S'\n__stdcall rpl_mktime(tm * tp)\n'
p2060
V\u000atime_t rpl_mktime(tm *tp)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = mktime_internal(tp,localtime_r,&localtime_offset);\u000a  return tVar1;\u000a}\u000a\u000a
p2061
S'MOV ESI,0x401c40\nMOV EDX,0x6115d0\nJMP 0x0040a6b0\n'
p2062
S'be 40 1c 40 00\nba d0 15 61 00\ne9 f1 f8 ff ff\n'
p2063
S'.text:000000000040adb0\n.text:000000000040adb5\n.text:000000000040adba\n'
p2064
tp2065
sS'__do_global_dtors_aux'
p2066
(S'\n__stdcall __do_global_dtors_aux()\n'
p2067
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p2068
S'CMP byte ptr [0x006113c8],0x0\nJNZ 0x0040225a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x004021c0\nPOP RBP\nMOV byte ptr [0x006113c8],0x1\nRET\n'
p2069
S'80 3d 81 f1 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 6e f1 20 00 01\nf3 c3\n'
p2070
S'.text:0000000000402240\n.text:0000000000402247\n.text:0000000000402249\n.text:000000000040224a\n.text:000000000040224d\n.text:0000000000402252\n.text:0000000000402253\n.text:000000000040225a\n'
p2071
tp2072
sS'c_isprint'
p2073
(S'\n__stdcall c_isprint()\n'
p2074
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p2075
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p2076
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p2077
S'.text:0000000000409c40\n.text:0000000000409c43\n.text:0000000000409c46\n.text:0000000000409c49\n'
p2078
tp2079
sS'getfscreatecon'
p2080
(S'\n__stdcall getfscreatecon(security_context_t * con)\n'
p2081
V\u000aint getfscreatecon(security_context_t *con)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = __errno_location();\u000a  *piVar1 = 0x5f;\u000a  return -1;\u000a}\u000a\u000a
p2082
S'PUSH RAX\nCALL 0x00401c20\nMOV dword ptr [RAX],0x5f\nMOV EAX,0xffffffff\nPOP RCX\nRET\n'
p2083
S'50\ne8 da b2 ff ff\nc7 00 5f 00 00 00\nb8 ff ff ff ff\n59\nc3\n'
p2084
S'.text:0000000000406940\n.text:0000000000406941\n.text:0000000000406946\n.text:000000000040694c\n.text:0000000000406951\n.text:0000000000406952\n'
p2085
tp2086
sS'_fini'
p2087
(S'\n__stdcall _fini()\n'
p2088
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p2089
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p2090
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p2091
S'.fini:000000000040af70\n.fini:000000000040af74\n.fini:000000000040af78\n'
p2092
tp2093
sS'iso_week_days'
p2094
(S'\n__stdcall iso_week_days()\n'
p2095
V\u000aint iso_week_days(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ESI;\u000a  int in_EDI;\u000a  \u000a  iVar1 = (in_EDI + 0x17e) - in_ESI;\u000a  return (int)((in_EDI + 3) -\u000a              (iVar1 + (iVar1 / 7 + (iVar1 >> 0x1f) +\u000a                       (uint)((ulong)((long)iVar1 * 0x92492493) >> 0x3f)) * -7));\u000a}\u000a\u000a
p2096
S'LEA EAX,[0x17e + RDI]\nSUB EAX,ESI\nCDQE\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD ECX,EAX\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x2\nADD ECX,EDX\nLEA EDX,[RCX*0x8]\nSUB EDX,ECX\nSUB EAX,EDX\nNEG EAX\nLEA EAX,[RDI + RAX*0x1 + 0x3]\nRET\n'
p2097
S'8d 87 7e 01 00 00\n29 f0\n48 98\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c1\n89 ca\nc1 ea 1f\nc1 f9 02\n01 d1\n8d 14 cd 00 00 00 00\n29 ca\n29 d0\nf7 d8\n8d 44 07 03\nc3\n'
p2098
S'.text:0000000000408410\n.text:0000000000408416\n.text:0000000000408418\n.text:000000000040841a\n.text:0000000000408421\n.text:0000000000408425\n.text:0000000000408427\n.text:0000000000408429\n.text:000000000040842c\n.text:000000000040842f\n.text:0000000000408431\n.text:0000000000408438\n.text:000000000040843a\n.text:000000000040843c\n.text:000000000040843e\n.text:0000000000408442\n'
p2099
tp2100
sS'rpl_fcntl'
p2101
(S'\n__stdcall rpl_fcntl()\n'
p2102
V\u000a/* WARNING: Removing unreachable block (ram,0x0040a4eb) */\u000a/* WARNING: Removing unreachable block (ram,0x0040a554) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff38 : 0x0040a4f9 */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint rpl_fcntl(void...)\u000a\u000a{\u000a  int have_dupfd_cloexec;\u000a  int __fd;\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int __cmd;\u000a  uint __fd_00;\u000a  va_list arg;\u000a  ulong local_c8;\u000a  \u000a  if (__cmd == 0x406) {\u000a    if (have_dupfd_cloexec < 0) {\u000a      __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a    }\u000a    else {\u000a      __fd = fcntl(__fd_00,0x406,local_c8 & 0xffffffff);\u000a      have_dupfd_cloexec = 1;\u000a      if ((__fd < 0) && (piVar3 = __errno_location(), *piVar3 == 0x16)) {\u000a        __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a        have_dupfd_cloexec = -1;\u000a        if (__fd < 0) {\u000a          return __fd;\u000a        }\u000a      }\u000a    }\u000a    if (((-1 < __fd) && (have_dupfd_cloexec == -1)) &&\u000a       ((uVar1 = fcntl(__fd,1), (int)uVar1 < 0 ||\u000a        (iVar2 = fcntl(__fd,2,(ulong)(uVar1 | 1),(ulong)(uVar1 | 1)), iVar2 == -1)))) {\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a      __fd = -1;\u000a    }\u000a  }\u000a  else {\u000a    __fd = fcntl(__fd_00,__cmd,local_c8);\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p2103
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14D,EDI\nTEST AL,AL\nJZ 0x0040a47b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RAX,dword ptr [RSP]\nCMP ESI,0x406\nJNZ 0x0040a4d6\nCMP EAX,0x28\nJA 0x0040a4eb\nMOV RCX,qword ptr [RSP + 0x10]\nADD RCX,RAX\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x0040a4f9\nCMP EAX,0x28\nJA 0x0040a554\nMOV RCX,RAX\nADD RCX,qword ptr [RSP + 0x10]\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x0040a562\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EBX,dword ptr [RCX]\nCMP dword ptr [0x006115c8],0x0\nJS 0x0040a573\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00401cb0\nMOV EBP,EAX\nMOV R15D,0x1\nTEST EBP,EBP\nJNS 0x0040a544\nCALL 0x00401c20\nCMP dword ptr [RAX],0x16\nJNZ 0x0040a544\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x0040a430\nMOV EBP,EAX\nMOV R15D,0xffffffff\nTEST EBP,EBP\nJS 0x0040a5d6\nMOV dword ptr [0x006115c8],R15D\nTEST EBP,EBP\nJNS 0x0040a587\nJMP 0x0040a5d6\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDX,qword ptr [RCX]\nXOR EAX,EAX\nMOV EDI,R14D\nCALL 0x00401cb0\nMOV EBP,EAX\nJMP 0x0040a5d6\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x0040a430\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x0040a5d6\nCMP dword ptr [0x006115c8],-0x1\nJNZ 0x0040a5d6\nMOV ESI,0x1\nXOR EAX,EAX\nMOV EDI,EBP\nCALL 0x00401cb0\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x0040a5bc\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBP\nMOV EDX,ECX\nCALL 0x00401cb0\nCMP EAX,-0x1\nJNZ 0x0040a5d6\nCALL 0x00401c20\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x00401e30\nMOV dword ptr [RBX],R14D\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0xd8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p2104
S'55\n41 57\n41 56\n53\n48 81 ec d8 00 00 00\n41 89 fe\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 04 24\n81 fe 06 04 00 00\n75 15\n83 f8 28\n77 25\n48 8b 4c 24 10\n48 01 c1\n8d 40 08\n89 04 24\neb 23\n83 f8 28\n77 79\n48 89 c1\n48 03 4c 24 10\n8d 40 08\n89 04 24\neb 77\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n8b 19\n83 3d c6 70 20 00 00\n78 6f\n31 c0\n44 89 f7\n89 da\ne8 a0 77 ff ff\n89 c5\n41 bf 01 00 00 00\n85 ed\n79 28\ne8 ff 76 ff ff\n83 38 16\n75 1e\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 fc fe ff ff\n89 c5\n41 bf ff ff ff ff\n85 ed\n0f 88 92 00 00 00\n44 89 3d 7d 70 20 00\n85 ed\n79 38\ne9 82 00 00 00\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n48 8b 11\n31 c0\n44 89 f7\ne8 41 77 ff ff\n89 c5\neb 63\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 af fe ff ff\n89 c5\n85 ed\n78 4f\n83 3d 3a 70 20 00 ff\n75 46\nbe 01 00 00 00\n31 c0\n89 ef\ne8 12 77 ff ff\n89 c1\n85 c9\n78 18\n83 c9 01\nbe 02 00 00 00\n31 c0\n89 ef\n89 ca\ne8 f9 76 ff ff\n83 f8 ff\n75 1a\ne8 5f 76 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 62 78 ff ff\n44 89 33\nbd ff ff ff ff\n89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p2105
S'.text:000000000040a430\n.text:000000000040a431\n.text:000000000040a433\n.text:000000000040a435\n.text:000000000040a436\n.text:000000000040a43d\n.text:000000000040a440\n.text:000000000040a442\n.text:000000000040a444\n.text:000000000040a449\n.text:000000000040a44e\n.text:000000000040a453\n.text:000000000040a45b\n.text:000000000040a463\n.text:000000000040a46b\n.text:000000000040a473\n.text:000000000040a47b\n.text:000000000040a480\n.text:000000000040a485\n.text:000000000040a48a\n.text:000000000040a48f\n.text:000000000040a494\n.text:000000000040a499\n.text:000000000040a4a1\n.text:000000000040a4a6\n.text:000000000040a4ae\n.text:000000000040a4b5\n.text:000000000040a4b9\n.text:000000000040a4bf\n.text:000000000040a4c1\n.text:000000000040a4c4\n.text:000000000040a4c6\n.text:000000000040a4cb\n.text:000000000040a4ce\n.text:000000000040a4d1\n.text:000000000040a4d4\n.text:000000000040a4d6\n.text:000000000040a4d9\n.text:000000000040a4db\n.text:000000000040a4de\n.text:000000000040a4e3\n.text:000000000040a4e6\n.text:000000000040a4e9\n.text:000000000040a4eb\n.text:000000000040a4f0\n.text:000000000040a4f4\n.text:000000000040a4f9\n.text:000000000040a4fb\n.text:000000000040a502\n.text:000000000040a504\n.text:000000000040a506\n.text:000000000040a509\n.text:000000000040a50b\n.text:000000000040a510\n.text:000000000040a512\n.text:000000000040a518\n.text:000000000040a51a\n.text:000000000040a51c\n.text:000000000040a521\n.text:000000000040a524\n.text:000000000040a526\n.text:000000000040a528\n.text:000000000040a52a\n.text:000000000040a52d\n.text:000000000040a52f\n.text:000000000040a534\n.text:000000000040a536\n.text:000000000040a53c\n.text:000000000040a53e\n.text:000000000040a544\n.text:000000000040a54b\n.text:000000000040a54d\n.text:000000000040a54f\n.text:000000000040a554\n.text:000000000040a559\n.text:000000000040a55d\n.text:000000000040a562\n.text:000000000040a565\n.text:000000000040a567\n.text:000000000040a56a\n.text:000000000040a56f\n.text:000000000040a571\n.text:000000000040a573\n.text:000000000040a575\n.text:000000000040a577\n.text:000000000040a57a\n.text:000000000040a57c\n.text:000000000040a581\n.text:000000000040a583\n.text:000000000040a585\n.text:000000000040a587\n.text:000000000040a58e\n.text:000000000040a590\n.text:000000000040a595\n.text:000000000040a597\n.text:000000000040a599\n.text:000000000040a59e\n.text:000000000040a5a0\n.text:000000000040a5a2\n.text:000000000040a5a4\n.text:000000000040a5a7\n.text:000000000040a5ac\n.text:000000000040a5ae\n.text:000000000040a5b0\n.text:000000000040a5b2\n.text:000000000040a5b7\n.text:000000000040a5ba\n.text:000000000040a5bc\n.text:000000000040a5c1\n.text:000000000040a5c4\n.text:000000000040a5c7\n.text:000000000040a5c9\n.text:000000000040a5ce\n.text:000000000040a5d1\n.text:000000000040a5d6\n.text:000000000040a5d8\n.text:000000000040a5df\n.text:000000000040a5e0\n.text:000000000040a5e2\n.text:000000000040a5e4\n.text:000000000040a5e5\n'
p2106
tp2107
sS'__fpending'
p2108
(S'\n__stdcall __fpending()\n'
p2109
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_00611070)();\u000a  return;\u000a}\u000a\u000a
p2110
S'JMP qword ptr [0x00611070]\n'
p2111
S'ff 25 fa f3 20 00\n'
p2112
S'.plt:0000000000401c70\n'
p2113
tp2114
s.