(dp0
S'ungetc'
p1
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p2
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_0060e168)();\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x0060e168]\n'
p4
S'ff 25 c2 c9 20 00\n'
p5
S'.plt:00000000004017a0\n'
p6
tp7
sS'version_etc_arn'
p8
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p9
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_0040b0fb,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x405dd7;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x405e58;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x405eec;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x00405c68\nMOV EDX,0x40b0e8\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x004018c0\nJMP 0x00405c7d\nMOV EDX,0x40b0f4\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x004018c0\nXOR EDI,EDI\nMOV ESI,0x40b0fb\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x40b3d0\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x004018c0\nXOR EDI,EDI\nMOV ESI,0x40b0ff\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x004016e0\nCMP R12,0x9\nJA 0x00405d06\nJMP qword ptr [0x40b098 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x40b1ca\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004018c0\nXOR EDI,EDI\nMOV ESI,0x40b309\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x38\nJMP 0x00405f77\nXOR EDI,EDI\nMOV ESI,0x40b1da\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004018c0\nXOR EDI,EDI\nMOV ESI,0x40b1f1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x004018c0\nXOR EDI,EDI\nMOV ESI,0x40b20d\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x18\nJMP 0x00405f77\nXOR EDI,EDI\nMOV ESI,0x40b22d\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x18\nJMP 0x00405f77\nXOR EDI,EDI\nMOV ESI,0x40b251\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x28\nJMP 0x00405f77\nXOR EDI,EDI\nMOV ESI,0x40b279\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x28\nJMP 0x00405f77\nXOR EDI,EDI\nMOV ESI,0x40b2a5\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x38\nJMP 0x00405f77\nXOR EDI,EDI\nMOV ESI,0x40b2d5\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x004018c0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x00401520\n'
p11
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba e8 b0 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 5a bc ff ff\neb 15\nba f4 b0 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 43 bc ff ff\n31 ff\nbe fb b0 40 00\nba 05 00 00 00\ne8 62 b9 ff ff\n48 89 c1\nbe 01 00 00 00\nba d0 b3 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 15 bc ff ff\n31 ff\nbe ff b0 40 00\nba 05 00 00 00\ne8 34 b9 ff ff\n48 89 c7\n4c 89 f6\ne8 19 ba ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 98 b0 40 00\n31 ff\nbe ca b1 40 00\nba 05 00 00 00\ne8 0a b9 ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 ba bb ff ff\n31 ff\nbe 09 b3 40 00\nba 05 00 00 00\ne8 d9 b8 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 71 bb ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe da b1 40 00\nba 05 00 00 00\ne8 87 b8 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 33 bb ff ff\n31 ff\nbe f1 b1 40 00\nba 05 00 00 00\ne8 52 b8 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 fa ba ff ff\n31 ff\nbe 0d b2 40 00\nba 05 00 00 00\ne8 19 b8 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 c4 ba ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe 2d b2 40 00\nba 05 00 00 00\ne8 da b7 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 82 ba ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe 51 b2 40 00\nba 05 00 00 00\ne8 98 b7 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 38 ba ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe 79 b2 40 00\nba 05 00 00 00\ne8 4e b7 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 ee b9 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe a5 b2 40 00\nba 05 00 00 00\ne8 04 b7 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 9c b9 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe d5 b2 40 00\nba 05 00 00 00\ne8 b5 b6 ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 4d b9 ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 9c b5 ff ff\n'
p12
S'.text:0000000000405c30\n.text:0000000000405c32\n.text:0000000000405c34\n.text:0000000000405c36\n.text:0000000000405c37\n.text:0000000000405c38\n.text:0000000000405c3b\n.text:0000000000405c3e\n.text:0000000000405c41\n.text:0000000000405c44\n.text:0000000000405c47\n.text:0000000000405c4a\n.text:0000000000405c4f\n.text:0000000000405c52\n.text:0000000000405c54\n.text:0000000000405c59\n.text:0000000000405c5b\n.text:0000000000405c5e\n.text:0000000000405c61\n.text:0000000000405c66\n.text:0000000000405c68\n.text:0000000000405c6d\n.text:0000000000405c6f\n.text:0000000000405c72\n.text:0000000000405c75\n.text:0000000000405c78\n.text:0000000000405c7d\n.text:0000000000405c7f\n.text:0000000000405c84\n.text:0000000000405c89\n.text:0000000000405c8e\n.text:0000000000405c91\n.text:0000000000405c96\n.text:0000000000405c9b\n.text:0000000000405ca1\n.text:0000000000405ca3\n.text:0000000000405ca6\n.text:0000000000405cab\n.text:0000000000405cad\n.text:0000000000405cb2\n.text:0000000000405cb7\n.text:0000000000405cbc\n.text:0000000000405cbf\n.text:0000000000405cc2\n.text:0000000000405cc7\n.text:0000000000405ccb\n.text:0000000000405ccd\n.text:0000000000405cd5\n.text:0000000000405cd7\n.text:0000000000405cdc\n.text:0000000000405ce1\n.text:0000000000405ce6\n.text:0000000000405ce9\n.text:0000000000405cec\n.text:0000000000405cf1\n.text:0000000000405cf3\n.text:0000000000405cf6\n.text:0000000000405cfa\n.text:0000000000405cfb\n.text:0000000000405cfd\n.text:0000000000405cff\n.text:0000000000405d01\n.text:0000000000405d06\n.text:0000000000405d08\n.text:0000000000405d0d\n.text:0000000000405d12\n.text:0000000000405d17\n.text:0000000000405d1a\n.text:0000000000405d1d\n.text:0000000000405d21\n.text:0000000000405d25\n.text:0000000000405d2a\n.text:0000000000405d2f\n.text:0000000000405d32\n.text:0000000000405d36\n.text:0000000000405d3a\n.text:0000000000405d3e\n.text:0000000000405d42\n.text:0000000000405d46\n.text:0000000000405d4a\n.text:0000000000405d4f\n.text:0000000000405d53\n.text:0000000000405d58\n.text:0000000000405d5a\n.text:0000000000405d5f\n.text:0000000000405d64\n.text:0000000000405d69\n.text:0000000000405d6c\n.text:0000000000405d6f\n.text:0000000000405d73\n.text:0000000000405d78\n.text:0000000000405d7a\n.text:0000000000405d7d\n.text:0000000000405d81\n.text:0000000000405d82\n.text:0000000000405d84\n.text:0000000000405d86\n.text:0000000000405d88\n.text:0000000000405d8d\n.text:0000000000405d8f\n.text:0000000000405d94\n.text:0000000000405d99\n.text:0000000000405d9e\n.text:0000000000405da1\n.text:0000000000405da4\n.text:0000000000405da8\n.text:0000000000405dac\n.text:0000000000405db1\n.text:0000000000405db3\n.text:0000000000405db6\n.text:0000000000405dba\n.text:0000000000405dbb\n.text:0000000000405dbd\n.text:0000000000405dbf\n.text:0000000000405dc1\n.text:0000000000405dc6\n.text:0000000000405dc8\n.text:0000000000405dcd\n.text:0000000000405dd2\n.text:0000000000405dd7\n.text:0000000000405dda\n.text:0000000000405ddd\n.text:0000000000405de1\n.text:0000000000405de5\n.text:0000000000405de9\n.text:0000000000405dee\n.text:0000000000405df0\n.text:0000000000405df3\n.text:0000000000405df7\n.text:0000000000405dfc\n.text:0000000000405e00\n.text:0000000000405e05\n.text:0000000000405e07\n.text:0000000000405e0c\n.text:0000000000405e11\n.text:0000000000405e16\n.text:0000000000405e19\n.text:0000000000405e1c\n.text:0000000000405e20\n.text:0000000000405e24\n.text:0000000000405e29\n.text:0000000000405e2e\n.text:0000000000405e31\n.text:0000000000405e35\n.text:0000000000405e39\n.text:0000000000405e3e\n.text:0000000000405e42\n.text:0000000000405e47\n.text:0000000000405e49\n.text:0000000000405e4e\n.text:0000000000405e53\n.text:0000000000405e58\n.text:0000000000405e5b\n.text:0000000000405e5e\n.text:0000000000405e62\n.text:0000000000405e66\n.text:0000000000405e6a\n.text:0000000000405e6f\n.text:0000000000405e74\n.text:0000000000405e77\n.text:0000000000405e7b\n.text:0000000000405e7f\n.text:0000000000405e83\n.text:0000000000405e88\n.text:0000000000405e8c\n.text:0000000000405e91\n.text:0000000000405e93\n.text:0000000000405e98\n.text:0000000000405e9d\n.text:0000000000405ea2\n.text:0000000000405ea5\n.text:0000000000405ea8\n.text:0000000000405eac\n.text:0000000000405eb0\n.text:0000000000405eb5\n.text:0000000000405eba\n.text:0000000000405ebd\n.text:0000000000405ec1\n.text:0000000000405ec5\n.text:0000000000405ec9\n.text:0000000000405ecd\n.text:0000000000405ed2\n.text:0000000000405ed6\n.text:0000000000405edb\n.text:0000000000405edd\n.text:0000000000405ee2\n.text:0000000000405ee7\n.text:0000000000405eec\n.text:0000000000405eef\n.text:0000000000405ef2\n.text:0000000000405ef6\n.text:0000000000405efa\n.text:0000000000405efe\n.text:0000000000405f03\n.text:0000000000405f08\n.text:0000000000405f0b\n.text:0000000000405f0f\n.text:0000000000405f13\n.text:0000000000405f17\n.text:0000000000405f1b\n.text:0000000000405f1f\n.text:0000000000405f24\n.text:0000000000405f28\n.text:0000000000405f2a\n.text:0000000000405f2c\n.text:0000000000405f31\n.text:0000000000405f36\n.text:0000000000405f3b\n.text:0000000000405f3e\n.text:0000000000405f41\n.text:0000000000405f45\n.text:0000000000405f49\n.text:0000000000405f4e\n.text:0000000000405f53\n.text:0000000000405f56\n.text:0000000000405f5a\n.text:0000000000405f5e\n.text:0000000000405f62\n.text:0000000000405f66\n.text:0000000000405f6a\n.text:0000000000405f6e\n.text:0000000000405f73\n.text:0000000000405f77\n.text:0000000000405f78\n.text:0000000000405f7a\n.text:0000000000405f7c\n.text:0000000000405f7e\n.text:0000000000405f7f\n'
p13
tp14
sS'strchr'
p15
(S'\n__stdcall strchr(char * __s, int __c)\n'
p16
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strchr_0060e0c0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p17
S'JMP qword ptr [0x0060e0c0]\n'
p18
S'ff 25 6a ca 20 00\n'
p19
S'.plt:0000000000401650\n'
p20
tp21
sS'rpl_fclose'
p22
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p23
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_00407149;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_00407149:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p24
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401750\nTEST EAX,EAX\nJS 0x00407149\nMOV RDI,RBX\nCALL 0x004017b0\nTEST EAX,EAX\nJZ 0x00407117\nMOV RDI,RBX\nCALL 0x00401750\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x00401670\nCMP RAX,-0x1\nJZ 0x00407149\nMOV RDI,RBX\nCALL 0x00407160\nTEST EAX,EAX\nJZ 0x00407149\nCALL 0x00401530\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x004015c0\nTEST EBP,EBP\nJZ 0x00407142\nCALL 0x00401530\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x004015c0\n'
p25
S'55\n53\n50\n48 89 fb\ne8 65 a6 ff ff\n85 c0\n78 5a\n48 89 df\ne8 b9 a6 ff ff\n85 c0\n74 1c\n48 89 df\ne8 4d a6 ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 5f a5 ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 41 00 00 00\n85 c0\n74 26\ne8 08 a4 ff ff\n8b 28\n48 89 df\ne8 8e a4 ff ff\n85 ed\n74 0c\ne8 f5 a3 ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 69 a4 ff ff\n'
p26
S'.text:00000000004070e0\n.text:00000000004070e1\n.text:00000000004070e2\n.text:00000000004070e3\n.text:00000000004070e6\n.text:00000000004070eb\n.text:00000000004070ed\n.text:00000000004070ef\n.text:00000000004070f2\n.text:00000000004070f7\n.text:00000000004070f9\n.text:00000000004070fb\n.text:00000000004070fe\n.text:0000000000407103\n.text:0000000000407105\n.text:000000000040710a\n.text:000000000040710c\n.text:0000000000407111\n.text:0000000000407115\n.text:0000000000407117\n.text:000000000040711a\n.text:000000000040711f\n.text:0000000000407121\n.text:0000000000407123\n.text:0000000000407128\n.text:000000000040712a\n.text:000000000040712d\n.text:0000000000407132\n.text:0000000000407134\n.text:0000000000407136\n.text:000000000040713b\n.text:000000000040713d\n.text:0000000000407142\n.text:0000000000407146\n.text:0000000000407147\n.text:0000000000407148\n.text:0000000000407149\n.text:000000000040714c\n.text:0000000000407150\n.text:0000000000407151\n.text:0000000000407152\n'
p27
tp28
sS'strtoul_tcflag_t'
p29
(S'\n__stdcall strtoul_tcflag_t()\n'
p30
V\u000aint strtoul_tcflag_t(void)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  ulong uVar3;\u000a  undefined4 *in_RDX;\u000a  char **__endptr;\u000a  char *__nptr;\u000a  \u000a  piVar2 = __errno_location();\u000a  *piVar2 = 0;\u000a  uVar3 = strtoul(__nptr,__endptr,0x10);\u000a  iVar1 = -1;\u000a  if ((((*piVar2 == 0) && ((uVar3 & 0xffffffff) == uVar3)) && (*__endptr != __nptr)) &&\u000a     (**__endptr == ':')) {\u000a    *in_RDX = (int)uVar3;\u000a    iVar1 = 0;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p31
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV R12,RDI\nCALL 0x00401530\nMOV RBX,RAX\nMOV dword ptr [RBX],0x0\nMOV EDX,0x10\nMOV RDI,R12\nMOV RSI,R15\nCALL 0x00401880\nMOV RCX,RAX\nMOV EAX,0xffffffff\nCMP dword ptr [RBX],0x0\nJNZ 0x00404165\nMOV EDX,ECX\nCMP RDX,RCX\nJNZ 0x00404165\nMOV RDX,qword ptr [R15]\nCMP RDX,R12\nJZ 0x00404165\nCMP byte ptr [RDX],0x3a\nJNZ 0x00404165\nMOV dword ptr [R14],ECX\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p32
S'41 57\n41 56\n41 54\n53\n50\n49 89 d6\n49 89 f7\n49 89 fc\ne8 0a d4 ff ff\n48 89 c3\nc7 03 00 00 00 00\nba 10 00 00 00\n4c 89 e7\n4c 89 fe\ne8 41 d7 ff ff\n48 89 c1\nb8 ff ff ff ff\n83 3b 00\n75 19\n89 ca\n48 39 ca\n75 12\n49 8b 17\n4c 39 e2\n74 0a\n80 3a 3a\n75 05\n41 89 0e\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p33
S'.text:0000000000404110\n.text:0000000000404112\n.text:0000000000404114\n.text:0000000000404116\n.text:0000000000404117\n.text:0000000000404118\n.text:000000000040411b\n.text:000000000040411e\n.text:0000000000404121\n.text:0000000000404126\n.text:0000000000404129\n.text:000000000040412f\n.text:0000000000404134\n.text:0000000000404137\n.text:000000000040413a\n.text:000000000040413f\n.text:0000000000404142\n.text:0000000000404147\n.text:000000000040414a\n.text:000000000040414c\n.text:000000000040414e\n.text:0000000000404151\n.text:0000000000404153\n.text:0000000000404156\n.text:0000000000404159\n.text:000000000040415b\n.text:000000000040415e\n.text:0000000000404160\n.text:0000000000404163\n.text:0000000000404165\n.text:0000000000404169\n.text:000000000040416a\n.text:000000000040416c\n.text:000000000040416e\n.text:0000000000404170\n'
p34
tp35
sS'to_uchar'
p36
(S'\n__stdcall to_uchar()\n'
p37
V\u000auchar to_uchar(void)\u000a\u000a{\u000a  uchar in_DIL;\u000a  \u000a  return in_DIL;\u000a}\u000a\u000a
p38
S'MOV EAX,EDI\nRET\n'
p39
S'89 f8\nc3\n'
p40
S'.text:0000000000403aa0\n.text:0000000000403aa2\n'
p41
tp42
sS'strncmp'
p43
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_0060e038)();\u000a  return iVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x0060e038]\n'
p46
S'ff 25 f2 ca 20 00\n'
p47
S'.plt:0000000000401540\n'
p48
tp49
sS'xnrealloc'
p50
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p51
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p52
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x00406184\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x00406190\nPUSH RAX\nCALL 0x004062e0\n'
p53
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p54
S'.text:0000000000406170\n.text:0000000000406173\n.text:0000000000406176\n.text:0000000000406179\n.text:000000000040617b\n.text:000000000040617f\n.text:0000000000406182\n.text:0000000000406184\n.text:0000000000406185\n'
p55
tp56
sS'quote'
p57
(S'\n__stdcall quote(char * arg)\n'
p58
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p59
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00405810\n'
p60
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p61
S'.text:0000000000405820\n.text:0000000000405823\n.text:0000000000405825\n.text:0000000000405828\n'
p62
tp63
sS'emit_bug_reporting_address'
p64
(S'\n__stdcall emit_bug_reporting_address()\n'
p65
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p66
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40b345\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40b35a\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x40b370\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x4091bb\nMOV ECX,0x409420\nXOR EAX,EAX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x40b384\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x004016e0\n'
p67
S'50\n31 ff\nbe 45 b3 40 00\nba 05 00 00 00\ne8 2e b5 ff ff\n48 89 c1\nbf 01 00 00 00\nba 5a b3 40 00\n31 c0\n48 89 ce\ne8 27 b7 ff ff\n31 ff\nbe 70 b3 40 00\nba 05 00 00 00\ne8 06 b5 ff ff\n48 89 c6\nbf 01 00 00 00\nba bb 91 40 00\nb9 20 94 40 00\n31 c0\ne8 fd b6 ff ff\n31 ff\nbe 84 b3 40 00\nba 05 00 00 00\ne8 dc b4 ff ff\n48 8b 35 8d 81 20 00\n48 89 c7\n58\ne9 bc b5 ff ff\n'
p68
S'.text:00000000004060b0\n.text:00000000004060b1\n.text:00000000004060b3\n.text:00000000004060b8\n.text:00000000004060bd\n.text:00000000004060c2\n.text:00000000004060c5\n.text:00000000004060ca\n.text:00000000004060cf\n.text:00000000004060d1\n.text:00000000004060d4\n.text:00000000004060d9\n.text:00000000004060db\n.text:00000000004060e0\n.text:00000000004060e5\n.text:00000000004060ea\n.text:00000000004060ed\n.text:00000000004060f2\n.text:00000000004060f7\n.text:00000000004060fc\n.text:00000000004060fe\n.text:0000000000406103\n.text:0000000000406105\n.text:000000000040610a\n.text:000000000040610f\n.text:0000000000406114\n.text:000000000040611b\n.text:000000000040611e\n.text:000000000040611f\n'
p69
tp70
sS'clone_quoting_options'
p71
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p72
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p73
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401530\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x60e3b0\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00406290\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p74
S'55\n41 56\n53\n48 89 fb\ne8 44 d1 ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 b0 e3 60 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 85 1e 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p75
S'.text:00000000004043e0\n.text:00000000004043e1\n.text:00000000004043e3\n.text:00000000004043e4\n.text:00000000004043e7\n.text:00000000004043ec\n.text:00000000004043ef\n.text:00000000004043f2\n.text:00000000004043f5\n.text:00000000004043fa\n.text:00000000004043fe\n.text:0000000000404403\n.text:0000000000404406\n.text:000000000040440b\n.text:000000000040440e\n.text:000000000040440f\n.text:0000000000404411\n.text:0000000000404412\n'
p76
tp77
sS'xmalloc'
p78
(S'\n__stdcall xmalloc(size_t n)\n'
p79
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p80
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401760\nTEST RBX,RBX\nJZ 0x00406163\nTEST RAX,RAX\nJZ 0x00406165\nPOP RBX\nRET\nCALL 0x004062e0\n'
p81
S'53\n48 89 fb\ne8 07 b6 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p82
S'.text:0000000000406150\n.text:0000000000406151\n.text:0000000000406154\n.text:0000000000406159\n.text:000000000040615c\n.text:000000000040615e\n.text:0000000000406161\n.text:0000000000406163\n.text:0000000000406164\n.text:0000000000406165\n'
p83
tp84
sS'quotearg_char_mem'
p85
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p86
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p87
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x0060e3e0]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x0060e3d0]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3c0]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3b0]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x00404440\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405330\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p88
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d 88 8d 20 00\n48 89 4c 24 30\n0f 10 05 6c 8d 20 00\n0f 29 44 24 20\n0f 10 05 50 8d 20 00\n0f 29 44 24 10\n0f 10 05 34 8d 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p89
S'.text:0000000000405640\n.text:0000000000405642\n.text:0000000000405644\n.text:0000000000405645\n.text:0000000000405649\n.text:000000000040564b\n.text:000000000040564e\n.text:0000000000405651\n.text:0000000000405658\n.text:000000000040565d\n.text:0000000000405664\n.text:0000000000405669\n.text:0000000000405670\n.text:0000000000405675\n.text:000000000040567c\n.text:0000000000405680\n.text:0000000000405683\n.text:0000000000405688\n.text:000000000040568b\n.text:000000000040568d\n.text:0000000000405692\n.text:0000000000405694\n.text:0000000000405697\n.text:000000000040569a\n.text:000000000040569d\n.text:00000000004056a2\n.text:00000000004056a6\n.text:00000000004056a7\n.text:00000000004056a9\n.text:00000000004056ab\n'
p90
tp91
sS'display_speed'
p92
(S'\n__stdcall display_speed(termios * mode)\n'
p93
V\u000avoid display_speed(termios *mode)\u000a\u000a{\u000a  char cVar1;\u000a  speed_t sVar2;\u000a  speed_t sVar3;\u000a  ulong uVar4;\u000a  ulong uVar5;\u000a  char *message;\u000a  \u000a  cVar1 = (char)mode;\u000a  sVar2 = cfgetispeed((termios *)&mode);\u000a  if (sVar2 != 0) {\u000a    sVar2 = cfgetispeed((termios *)&mode);\u000a    sVar3 = cfgetospeed((termios *)&mode);\u000a    if (sVar2 != sVar3) {\u000a      message = "%lu %lu\u005cn";\u000a      if (cVar1 != 0) {\u000a        message = "ispeed %lu baud; ospeed %lu baud;";\u000a      }\u000a      cfgetispeed((termios *)&mode);\u000a      uVar4 = baud_to_value();\u000a      cfgetospeed((termios *)&mode);\u000a      uVar5 = baud_to_value();\u000a      wrapf(message,uVar4,uVar5,uVar5);\u000a      goto joined_r0x00403851;\u000a    }\u000a  }\u000a  message = "%lu\u005cn";\u000a  if (cVar1 != 0) {\u000a    message = "speed %lu baud;";\u000a  }\u000a  cfgetospeed((termios *)&mode);\u000a  uVar4 = baud_to_value();\u000a  wrapf(message,uVar4);\u000ajoined_r0x00403851:\u000a  if (cVar1 == 0) {\u000a    current_col = 0;\u000a  }\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EBX,EDI\nMOV EDI,0x60e30c\nCALL 0x004015a0\nTEST EAX,EAX\nJZ 0x0040381e\nMOV EDI,0x60e30c\nCALL 0x004015a0\nMOV EBP,EAX\nMOV EDI,0x60e30c\nCALL 0x004017f0\nCMP EBP,EAX\nJNZ 0x00403855\nMOV EAX,0x40984a\nMOV EBP,0x40985e\nTEST BL,BL\nCMOVNZ RBP,RAX\nMOV EDI,0x60e30c\nCALL 0x004017f0\nMOV EDI,EAX\nCALL 0x004040e0\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,RBP\nMOV RSI,RCX\nCALL 0x00403ad0\nTEST BL,BL\nJZ 0x004038a2\nJMP 0x004038ac\nMOV EAX,0x409838\nMOV R14D,0x40985a\nTEST BL,BL\nCMOVNZ R14,RAX\nMOV EDI,0x60e30c\nCALL 0x004015a0\nMOV EDI,EAX\nCALL 0x004040e0\nMOV RBP,RAX\nMOV EDI,0x60e30c\nCALL 0x004017f0\nMOV EDI,EAX\nCALL 0x004040e0\nMOV RCX,RAX\nXOR EAX,EAX\nMOV RDI,R14\nMOV RSI,RBP\nMOV RDX,RCX\nCALL 0x00403ad0\nTEST BL,BL\nJNZ 0x004038ac\nMOV dword ptr [0x0060e34c],0x0\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p95
S'55\n41 56\n53\n89 fb\nbf 0c e3 60 00\ne8 a0 dd ff ff\n85 c0\n74 1a\nbf 0c e3 60 00\ne8 92 dd ff ff\n89 c5\nbf 0c e3 60 00\ne8 d6 df ff ff\n39 c5\n75 37\nb8 4a 98 40 00\nbd 5e 98 40 00\n84 db\n48 0f 45 e8\nbf 0c e3 60 00\ne8 b8 df ff ff\n89 c7\ne8 a1 08 00 00\n48 89 c1\n31 c0\n48 89 ef\n48 89 ce\ne8 81 02 00 00\n84 db\n74 4f\neb 57\nb8 38 98 40 00\n41 be 5a 98 40 00\n84 db\n4c 0f 45 f0\nbf 0c e3 60 00\ne8 30 dd ff ff\n89 c7\ne8 69 08 00 00\n48 89 c5\nbf 0c e3 60 00\ne8 6c df ff ff\n89 c7\ne8 55 08 00 00\n48 89 c1\n31 c0\n4c 89 f7\n48 89 ee\n48 89 ca\ne8 32 02 00 00\n84 db\n75 0a\nc7 05 a0 aa 20 00 00 00 00 00\n5b\n41 5e\n5d\nc3\n'
p96
S'.text:00000000004037f0\n.text:00000000004037f1\n.text:00000000004037f3\n.text:00000000004037f4\n.text:00000000004037f6\n.text:00000000004037fb\n.text:0000000000403800\n.text:0000000000403802\n.text:0000000000403804\n.text:0000000000403809\n.text:000000000040380e\n.text:0000000000403810\n.text:0000000000403815\n.text:000000000040381a\n.text:000000000040381c\n.text:000000000040381e\n.text:0000000000403823\n.text:0000000000403828\n.text:000000000040382a\n.text:000000000040382e\n.text:0000000000403833\n.text:0000000000403838\n.text:000000000040383a\n.text:000000000040383f\n.text:0000000000403842\n.text:0000000000403844\n.text:0000000000403847\n.text:000000000040384a\n.text:000000000040384f\n.text:0000000000403851\n.text:0000000000403853\n.text:0000000000403855\n.text:000000000040385a\n.text:0000000000403860\n.text:0000000000403862\n.text:0000000000403866\n.text:000000000040386b\n.text:0000000000403870\n.text:0000000000403872\n.text:0000000000403877\n.text:000000000040387a\n.text:000000000040387f\n.text:0000000000403884\n.text:0000000000403886\n.text:000000000040388b\n.text:000000000040388e\n.text:0000000000403890\n.text:0000000000403893\n.text:0000000000403896\n.text:0000000000403899\n.text:000000000040389e\n.text:00000000004038a0\n.text:00000000004038a2\n.text:00000000004038ac\n.text:00000000004038ad\n.text:00000000004038af\n.text:00000000004038b0\n'
p97
tp98
sS'frame_dummy'
p99
(S'\n__stdcall frame_dummy()\n'
p100
V\u000a/* WARNING: Removing unreachable block (ram,0x004019ea) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p101
S'MOV EDI,0x60de18\nCMP qword ptr [RDI],0x0\nJNZ 0x004019e0\nJMP 0x00401970\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004019db\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401970\n'
p102
S'bf 18 de 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p103
S'.text:00000000004019d0\n.text:00000000004019d5\n.text:00000000004019d9\n.text:00000000004019db\n.text:00000000004019e0\n.text:00000000004019e5\n.text:00000000004019e8\n.text:00000000004019ea\n.text:00000000004019eb\n.text:00000000004019ee\n.text:00000000004019f0\n.text:00000000004019f1\n'
p104
tp105
sS'display_settings'
p106
(S'\n__stdcall display_settings()\n'
p107
V\u000avoid display_settings(int iParm1,undefined8 uParm2)\u000a\u000a{\u000a  if (iParm1 == 2) {\u000a    display_recoverable();\u000a    return;\u000a  }\u000a  if (iParm1 != 1) {\u000a    if (iParm1 == 0) {\u000a      display_changed();\u000a      return;\u000a    }\u000a    return;\u000a  }\u000a  display_all(uParm2);\u000a  return;\u000a}\u000a\u000a
p108
S'CMP EDI,0x2\nJZ 0x00403033\nCMP EDI,0x1\nJZ 0x00403038\nTEST EDI,EDI\nJNZ 0x00403040\nJMP 0x00403bf0\nJMP 0x00403fc0\nMOV RDI,RSI\nJMP 0x00403e00\nRET\n'
p109
S'83 ff 02\n74 0e\n83 ff 01\n74 0e\n85 ff\n75 12\ne9 bd 0b 00 00\ne9 88 0f 00 00\n48 89 f7\ne9 c0 0d 00 00\nc3\n'
p110
S'.text:0000000000403020\n.text:0000000000403023\n.text:0000000000403025\n.text:0000000000403028\n.text:000000000040302a\n.text:000000000040302c\n.text:000000000040302e\n.text:0000000000403033\n.text:0000000000403038\n.text:000000000040303b\n.text:0000000000403040\n'
p111
tp112
sS'quotearg_n_style_colon'
p113
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p114
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p115
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00405560\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x00404440\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x00405330\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p116
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p117
S'.text:00000000004056e0\n.text:00000000004056e1\n.text:00000000004056e3\n.text:00000000004056e4\n.text:00000000004056e8\n.text:00000000004056eb\n.text:00000000004056ed\n.text:00000000004056f2\n.text:00000000004056f5\n.text:00000000004056fa\n.text:00000000004056ff\n.text:0000000000405704\n.text:0000000000405707\n.text:000000000040570c\n.text:0000000000405713\n.text:0000000000405715\n.text:0000000000405718\n.text:000000000040571b\n.text:0000000000405720\n.text:0000000000405724\n.text:0000000000405725\n.text:0000000000405727\n.text:0000000000405728\n'
p118
tp119
sS'quote_mem'
p120
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p121
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p122
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x004057f0\n'
p123
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p124
S'.text:0000000000405800\n.text:0000000000405803\n.text:0000000000405806\n.text:0000000000405808\n.text:000000000040580b\n.text:000000000040580e\n'
p125
tp126
sS'fileno'
p127
(S'\n__stdcall fileno(FILE * __stream)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_0060e140)();\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x0060e140]\n'
p130
S'ff 25 ea c9 20 00\n'
p131
S'.plt:0000000000401750\n'
p132
tp133
sS'mbrtowc'
p134
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_0060e0b0)();\u000a  return sVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x0060e0b0]\n'
p137
S'ff 25 7a ca 20 00\n'
p138
S'.plt:0000000000401630\n'
p139
tp140
sS'dup2'
p141
(S'\n__stdcall dup2(int __fd, int __fd2)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint dup2(int __fd,int __fd2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_dup2_0060e0b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x0060e0b8]\n'
p144
S'ff 25 72 ca 20 00\n'
p145
S'.plt:0000000000401640\n'
p146
tp147
sS'xstrtoumax'
p148
(S'\n__stdcall xstrtoumax(char * s, char * * ptr, uintmax_t * val, char * valid_suffixes)\n'
p149
V\u000astrtol_error xstrtoumax(char *s,char **ptr,uintmax_t *val,char *valid_suffixes)\u000a\u000a{\u000a  byte bVar1;\u000a  char cVar2;\u000a  strtol_error sVar3;\u000a  int *piVar4;\u000a  ushort **ppuVar5;\u000a  char *pcVar6;\u000a  char *pcVar7;\u000a  byte *pbVar8;\u000a  strtol_error sVar9;\u000a  strtol_error sVar10;\u000a  long lVar11;\u000a  char *__s;\u000a  char **__endptr;\u000a  uintmax_t local_48;\u000a  uintmax_t *local_40;\u000a  char *local_38;\u000a  \u000a  if (0x24 < (uint)val) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0 <= strtol_base && strtol_base <= 36","./lib/xstrtol.c",0x60,\u000a                  "strtol_error xstrtoumax(const char *, char **, int, uintmax_t *, const char *)");\u000a  }\u000a  local_40 = (uintmax_t *)valid_suffixes;\u000a  piVar4 = __errno_location();\u000a  *piVar4 = 0;\u000a  ppuVar5 = __ctype_b_loc();\u000a  pbVar8 = (byte *)s;\u000a  do {\u000a    bVar1 = *pbVar8;\u000a    pbVar8 = pbVar8 + 1;\u000a  } while ((*(byte *)((long)*ppuVar5 + (ulong)bVar1 * 2 + 1) & 0x20) != 0);\u000a  __endptr = &local_38;\u000a  if (ptr != (char **)0x0) {\u000a    __endptr = ptr;\u000a  }\u000a  if (bVar1 == 0x2d) {\u000a    return LONGINT_INVALID;\u000a  }\u000a  local_48 = strtoumax(s,__endptr,(uint)val);\u000a  if (*__endptr == s) {\u000a    if (__s == (char *)0x0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    cVar2 = **__endptr;\u000a    if (cVar2 == 0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    pcVar6 = strchr(__s,(int)cVar2);\u000a    if (pcVar6 == (char *)0x0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    local_48 = 1;\u000a    sVar9 = LONGINT_OK;\u000a  }\u000a  else {\u000a    if (*piVar4 == 0) {\u000a      sVar9 = LONGINT_OK;\u000a    }\u000a    else {\u000a      if (*piVar4 != 0x22) {\u000a        return LONGINT_INVALID;\u000a      }\u000a      sVar9 = LONGINT_OVERFLOW;\u000a    }\u000a    sVar10 = sVar9;\u000a    if (__s == (char *)0x0) goto LAB_00406936;\u000a  }\u000a  pcVar6 = *__endptr;\u000a  sVar10 = sVar9;\u000a  if (*pcVar6 == 0) goto LAB_00406936;\u000a  pcVar7 = strchr(__s,(int)*pcVar6);\u000a  if (pcVar7 == (char *)0x0) goto switchD_00406865_caseD_43;\u000a  pcVar7 = strchr(__s,0x30);\u000a  if (pcVar7 == (char *)0x0) {\u000aLAB_00406843:\u000a    lVar11 = 1;\u000a  }\u000a  else {\u000a    cVar2 = pcVar6[1];\u000a    if ((cVar2 == 'B') || (cVar2 == 'D')) {\u000a      lVar11 = 2;\u000a    }\u000a    else {\u000a      if (cVar2 != 'i') goto LAB_00406843;\u000a      lVar11 = (ulong)(pcVar6[2] == 'B') * 2 + 1;\u000a    }\u000a  }\u000a  sVar3 = LONGINT_OK;\u000a  switch(**__endptr) {\u000a  case 'B':\u000a    goto LAB_00406917;\u000a  default:\u000aswitchD_00406865_caseD_43:\u000a    *local_40 = local_48;\u000a    return sVar9 | LONGINT_INVALID_SUFFIX_CHAR;\u000a  case 'E':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'G':\u000a  case 'g':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'K':\u000a  case 'k':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'M':\u000a  case 'm':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'P':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'T':\u000a  case 't':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'Y':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'Z':\u000a    sVar3 = bkm_scale_by_power(&local_48);\u000a    break;\u000a  case 'b':\u000a    goto LAB_00406917;\u000a  case 'c':\u000a    break;\u000a  case 'w':\u000aLAB_00406917:\u000a    sVar3 = bkm_scale(&local_48);\u000a  }\u000a  pcVar6 = *__endptr;\u000a  *__endptr = pcVar6 + lVar11;\u000a  sVar10 = sVar3 | sVar9 | LONGINT_INVALID_SUFFIX_CHAR;\u000a  if (pcVar6[lVar11] == 0) {\u000a    sVar10 = sVar3 | sVar9;\u000a  }\u000aLAB_00406936:\u000a  *local_40 = local_48;\u000a  return sVar10;\u000a}\u000a\u000a
p150
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R12,R8\nMOV R14D,EDX\nMOV RBX,RSI\nMOV RBP,RDI\nCMP R14D,0x25\nJNC 0x00406953\nMOV qword ptr [RSP + 0x8],RCX\nCALL 0x00401530\nMOV R15,RAX\nMOV dword ptr [R15],0x0\nCALL 0x004018f0\nMOV RCX,qword ptr [RAX]\nMOV RDX,RBP\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EAX,byte ptr [RDX]\nINC RDX\nTEST byte ptr [RCX + RAX*0x2 + 0x1],0x20\nJNZ 0x00406750\nTEST RBX,RBX\nLEA R13,[RSP + 0x10]\nCMOVNZ R13,RBX\nMOV EBX,0x4\nCMP AL,0x2d\nJZ 0x00406942\nMOV RDI,RBP\nMOV RSI,R13\nMOV EDX,R14D\nCALL 0x00401870\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [R13]\nCMP RAX,RBP\nJZ 0x004067b0\nMOV EAX,dword ptr [R15]\nTEST EAX,EAX\nJZ 0x004067e1\nCMP EAX,0x22\nJNZ 0x00406942\nMOV EBX,0x1\nTEST R12,R12\nJNZ 0x004067ec\nJMP 0x00406936\nTEST R12,R12\nJZ 0x00406942\nMOVSX ESI,byte ptr [RAX]\nTEST ESI,ESI\nJZ 0x00406942\nMOV RDI,R12\nCALL 0x00401650\nTEST RAX,RAX\nJZ 0x00406942\nMOV qword ptr [RSP],0x1\nXOR EBX,EBX\nJMP 0x004067ec\nXOR EBX,EBX\nTEST R12,R12\nJZ 0x00406936\nMOV RBP,qword ptr [R13]\nMOVSX ESI,byte ptr [RBP]\nTEST ESI,ESI\nJZ 0x00406936\nMOV RDI,R12\nCALL 0x00401650\nTEST RAX,RAX\nJZ 0x0040687e\nMOV ESI,0x30\nMOV RDI,R12\nCALL 0x00401650\nMOV ESI,0x400\nTEST RAX,RAX\nJZ 0x00406843\nMOVSX EAX,byte ptr [RBP + 0x1]\nCMP EAX,0x42\nJZ 0x0040684a\nCMP EAX,0x44\nJZ 0x0040684a\nCMP EAX,0x69\nJNZ 0x00406843\nXOR EAX,EAX\nCMP byte ptr [RBP + 0x2],0x42\nSETZ AL\nLEA RBP,[RAX + RAX*0x1 + 0x1]\nJMP 0x00406854\nMOV EBP,0x1\nJMP 0x00406854\nMOV ESI,0x3e8\nMOV EBP,0x2\nMOV RAX,qword ptr [R13]\nMOVSX ECX,byte ptr [RAX]\nADD ECX,-0x42\nCMP ECX,0x35\nJA 0x0040687e\nXOR EAX,EAX\nJMP qword ptr [0x40b630 + RCX*0x8]\nMOV RDI,RSP\nMOV EDX,0x3\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RAX,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV qword ptr [RCX],RAX\nOR EBX,0x2\nJMP 0x00406942\nMOV RDI,RSP\nMOV EDX,0x1\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV EDX,0x2\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV EDX,0x4\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV ESI,0x400\nJMP 0x00406917\nMOV RDI,RSP\nMOV EDX,0x6\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV EDX,0x5\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV EDX,0x8\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV EDX,0x7\nCALL 0x004069a0\nJMP 0x0040691c\nMOV RDI,RSP\nMOV ESI,0x200\nJMP 0x00406917\nMOV RDI,RSP\nMOV ESI,0x2\nCALL 0x00406970\nOR EAX,EBX\nMOV RCX,qword ptr [R13]\nLEA RDX,[RCX + RBP*0x1]\nMOV qword ptr [R13],RDX\nMOV EBX,EAX\nOR EBX,0x2\nCMP byte ptr [RCX + RBP*0x1],0x0\nCMOVZ EBX,EAX\nMOV RAX,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x8]\nMOV qword ptr [RCX],RAX\nMOV EAX,EBX\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x40b5c0\nMOV ESI,0x40b7e0\nMOV EDX,0x60\nMOV ECX,0x40b7f0\nCALL 0x00401680\n'
p151
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n4d 89 c4\n41 89 d6\n48 89 f3\n48 89 fd\n41 83 fe 25\n0f 83 2f 02 00 00\n48 89 4c 24 08\ne8 02 ae ff ff\n49 89 c7\n41 c7 07 00 00 00 00\ne8 b3 b1 ff ff\n48 8b 08\n48 89 ea\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 02\n48 ff c2\nf6 44 41 01 20\n75 f3\n48 85 db\n4c 8d 6c 24 10\n4c 0f 45 eb\nbb 04 00 00 00\n3c 2d\n0f 84 cc 01 00 00\n48 89 ef\n4c 89 ee\n44 89 f2\ne8 ec b0 ff ff\n48 89 04 24\n49 8b 45 00\n48 39 e8\n74 1f\n41 8b 07\n85 c0\n74 49\n83 f8 22\n0f 85 a1 01 00 00\nbb 01 00 00 00\n4d 85 e4\n75 41\ne9 86 01 00 00\n4d 85 e4\n0f 84 89 01 00 00\n0f be 30\n85 f6\n0f 84 7e 01 00 00\n4c 89 e7\ne8 84 ae ff ff\n48 85 c0\n0f 84 6d 01 00 00\n48 c7 04 24 01 00 00 00\n31 db\neb 0b\n31 db\n4d 85 e4\n0f 84 4a 01 00 00\n49 8b 6d 00\n0f be 75 00\n85 f6\n0f 84 3a 01 00 00\n4c 89 e7\ne8 4c ae ff ff\n48 85 c0\n74 75\nbe 30 00 00 00\n4c 89 e7\ne8 3a ae ff ff\nbe 00 04 00 00\n48 85 c0\n74 23\n0f be 45 01\n83 f8 42\n74 21\n83 f8 44\n74 1c\n83 f8 69\n75 10\n31 c0\n80 7d 02 42\n0f 94 c0\n48 8d 6c 00 01\neb 11\nbd 01 00 00 00\neb 0a\nbe e8 03 00 00\nbd 02 00 00 00\n49 8b 45 00\n0f be 08\n83 c1 be\n83 f9 35\n77 1b\n31 c0\nff 24 cd 30 b6 40 00\n48 89 e7\nba 03 00 00 00\ne8 27 01 00 00\ne9 9e 00 00 00\n48 8b 04 24\n48 8b 4c 24 08\n48 89 01\n83 cb 02\ne9 b0 00 00 00\n48 89 e7\nba 01 00 00 00\ne8 01 01 00 00\neb 7b\n48 89 e7\nba 02 00 00 00\ne8 f2 00 00 00\neb 6c\n48 89 e7\nba 04 00 00 00\ne8 e3 00 00 00\neb 5d\n48 89 e7\nbe 00 04 00 00\neb 4e\n48 89 e7\nba 06 00 00 00\ne8 ca 00 00 00\neb 44\n48 89 e7\nba 05 00 00 00\ne8 bb 00 00 00\neb 35\n48 89 e7\nba 08 00 00 00\ne8 ac 00 00 00\neb 26\n48 89 e7\nba 07 00 00 00\ne8 9d 00 00 00\neb 17\n48 89 e7\nbe 00 02 00 00\neb 08\n48 89 e7\nbe 02 00 00 00\ne8 54 00 00 00\n09 d8\n49 8b 4d 00\n48 8d 14 29\n49 89 55 00\n89 c3\n83 cb 02\n80 3c 29 00\n0f 44 d8\n48 8b 04 24\n48 8b 4c 24 08\n48 89 01\n89 d8\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf c0 b5 40 00\nbe e0 b7 40 00\nba 60 00 00 00\nb9 f0 b7 40 00\ne8 14 ad ff ff\n'
p152
S'.text:0000000000406700\n.text:0000000000406701\n.text:0000000000406703\n.text:0000000000406705\n.text:0000000000406707\n.text:0000000000406709\n.text:000000000040670a\n.text:000000000040670e\n.text:0000000000406711\n.text:0000000000406714\n.text:0000000000406717\n.text:000000000040671a\n.text:000000000040671e\n.text:0000000000406724\n.text:0000000000406729\n.text:000000000040672e\n.text:0000000000406731\n.text:0000000000406738\n.text:000000000040673d\n.text:0000000000406740\n.text:0000000000406743\n.text:0000000000406750\n.text:0000000000406753\n.text:0000000000406756\n.text:000000000040675b\n.text:000000000040675d\n.text:0000000000406760\n.text:0000000000406765\n.text:0000000000406769\n.text:000000000040676e\n.text:0000000000406770\n.text:0000000000406776\n.text:0000000000406779\n.text:000000000040677c\n.text:000000000040677f\n.text:0000000000406784\n.text:0000000000406788\n.text:000000000040678c\n.text:000000000040678f\n.text:0000000000406791\n.text:0000000000406794\n.text:0000000000406796\n.text:0000000000406798\n.text:000000000040679b\n.text:00000000004067a1\n.text:00000000004067a6\n.text:00000000004067a9\n.text:00000000004067ab\n.text:00000000004067b0\n.text:00000000004067b3\n.text:00000000004067b9\n.text:00000000004067bc\n.text:00000000004067be\n.text:00000000004067c4\n.text:00000000004067c7\n.text:00000000004067cc\n.text:00000000004067cf\n.text:00000000004067d5\n.text:00000000004067dd\n.text:00000000004067df\n.text:00000000004067e1\n.text:00000000004067e3\n.text:00000000004067e6\n.text:00000000004067ec\n.text:00000000004067f0\n.text:00000000004067f4\n.text:00000000004067f6\n.text:00000000004067fc\n.text:00000000004067ff\n.text:0000000000406804\n.text:0000000000406807\n.text:0000000000406809\n.text:000000000040680e\n.text:0000000000406811\n.text:0000000000406816\n.text:000000000040681b\n.text:000000000040681e\n.text:0000000000406820\n.text:0000000000406824\n.text:0000000000406827\n.text:0000000000406829\n.text:000000000040682c\n.text:000000000040682e\n.text:0000000000406831\n.text:0000000000406833\n.text:0000000000406835\n.text:0000000000406839\n.text:000000000040683c\n.text:0000000000406841\n.text:0000000000406843\n.text:0000000000406848\n.text:000000000040684a\n.text:000000000040684f\n.text:0000000000406854\n.text:0000000000406858\n.text:000000000040685b\n.text:000000000040685e\n.text:0000000000406861\n.text:0000000000406863\n.text:0000000000406865\n.text:000000000040686c\n.text:000000000040686f\n.text:0000000000406874\n.text:0000000000406879\n.text:000000000040687e\n.text:0000000000406882\n.text:0000000000406887\n.text:000000000040688a\n.text:000000000040688d\n.text:0000000000406892\n.text:0000000000406895\n.text:000000000040689a\n.text:000000000040689f\n.text:00000000004068a1\n.text:00000000004068a4\n.text:00000000004068a9\n.text:00000000004068ae\n.text:00000000004068b0\n.text:00000000004068b3\n.text:00000000004068b8\n.text:00000000004068bd\n.text:00000000004068bf\n.text:00000000004068c2\n.text:00000000004068c7\n.text:00000000004068c9\n.text:00000000004068cc\n.text:00000000004068d1\n.text:00000000004068d6\n.text:00000000004068d8\n.text:00000000004068db\n.text:00000000004068e0\n.text:00000000004068e5\n.text:00000000004068e7\n.text:00000000004068ea\n.text:00000000004068ef\n.text:00000000004068f4\n.text:00000000004068f6\n.text:00000000004068f9\n.text:00000000004068fe\n.text:0000000000406903\n.text:0000000000406905\n.text:0000000000406908\n.text:000000000040690d\n.text:000000000040690f\n.text:0000000000406912\n.text:0000000000406917\n.text:000000000040691c\n.text:000000000040691e\n.text:0000000000406922\n.text:0000000000406926\n.text:000000000040692a\n.text:000000000040692c\n.text:000000000040692f\n.text:0000000000406933\n.text:0000000000406936\n.text:000000000040693a\n.text:000000000040693f\n.text:0000000000406942\n.text:0000000000406944\n.text:0000000000406948\n.text:0000000000406949\n.text:000000000040694b\n.text:000000000040694d\n.text:000000000040694f\n.text:0000000000406951\n.text:0000000000406952\n.text:0000000000406953\n.text:0000000000406958\n.text:000000000040695d\n.text:0000000000406962\n.text:0000000000406967\n'
p153
tp154
sS'setlocale'
p155
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_0060e188)();\u000a  return pcVar1;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x0060e188]\n'
p158
S'ff 25 a2 c9 20 00\n'
p159
S'.plt:00000000004017e0\n'
p160
tp161
sS'c_toupper'
p162
(S'\n__stdcall c_toupper()\n'
p163
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p165
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p166
S'.text:0000000000406d30\n.text:0000000000406d33\n.text:0000000000406d36\n.text:0000000000406d39\n.text:0000000000406d3c\n'
p167
tp168
sS'fcntl'
p169
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_0060e060)();\u000a  return iVar1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x0060e060]\n'
p172
S'ff 25 ca ca 20 00\n'
p173
S'.plt:0000000000401590\n'
p174
tp175
sS'mbsinit'
p176
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_0060e200)();\u000a  return iVar1;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x0060e200]\n'
p179
S'ff 25 2a c9 20 00\n'
p180
S'.plt:00000000004018d0\n'
p181
tp182
sS'dcgettext'
p183
(S'\n__stdcall dcgettext()\n'
p184
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_0060e090)();\u000a  return;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x0060e090]\n'
p186
S'ff 25 9a ca 20 00\n'
p187
S'.plt:00000000004015f0\n'
p188
tp189
sS'quotearg_free'
p190
(S'\n__stdcall quotearg_free()\n'
p191
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p192
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x0060e240]\nCMP dword ptr [0x0060e248],0x2\nJC 0x004052ca\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x00401510\nINC RBX\nMOV EAX,dword ptr [0x0060e248]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x004052b0\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x60e3f0\nCMP RDI,RAX\nJZ 0x004052f3\nCALL 0x00401510\nMOV qword ptr [0x0060e250],0x100\nMOV qword ptr [0x0060e258],0x60e3f0\nMOV EAX,0x60e250\nCMP R14,RAX\nJZ 0x00405310\nMOV RDI,R14\nCALL 0x00401510\nMOV qword ptr [0x0060e240],0x60e250\nMOV dword ptr [0x0060e248],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p193
S'41 57\n41 56\n53\n4c 8b 35 a4 8f 20 00\n83 3d a5 8f 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 58 c2 ff ff\n48 ff c3\n8b 05 87 8f 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 f0 e3 60 00\n48 39 c7\n74 1b\ne8 33 c2 ff ff\n48 c7 05 68 8f 20 00 00 01 00 00\n48 c7 05 65 8f 20 00 f0 e3 60 00\nb8 50 e2 60 00\n49 39 c6\n74 13\n4c 89 f7\ne8 0b c2 ff ff\n48 c7 05 30 8f 20 00 50 e2 60 00\nc7 05 2e 8f 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p194
S'.text:0000000000405290\n.text:0000000000405292\n.text:0000000000405294\n.text:0000000000405295\n.text:000000000040529c\n.text:00000000004052a3\n.text:00000000004052a5\n.text:00000000004052a9\n.text:00000000004052ae\n.text:00000000004052b0\n.text:00000000004052b3\n.text:00000000004052b8\n.text:00000000004052bb\n.text:00000000004052c1\n.text:00000000004052c5\n.text:00000000004052c8\n.text:00000000004052ca\n.text:00000000004052ce\n.text:00000000004052d3\n.text:00000000004052d6\n.text:00000000004052d8\n.text:00000000004052dd\n.text:00000000004052e8\n.text:00000000004052f3\n.text:00000000004052f8\n.text:00000000004052fb\n.text:00000000004052fd\n.text:0000000000405300\n.text:0000000000405305\n.text:0000000000405310\n.text:000000000040531a\n.text:000000000040531b\n.text:000000000040531d\n.text:000000000040531f\n'
p195
tp196
sS'cfgetispeed'
p197
(S'\n__stdcall cfgetispeed(termios * __termios_p)\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aspeed_t cfgetispeed(termios *__termios_p)\u000a\u000a{\u000a  speed_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_cfgetispeed_0060e068)();\u000a  return sVar1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x0060e068]\n'
p200
S'ff 25 c2 ca 20 00\n'
p201
S'.plt:00000000004015a0\n'
p202
tp203
sS'quotearg_mem'
p204
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p205
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p206
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x004054f0\n'
p207
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p208
S'.text:0000000000405510\n.text:0000000000405513\n.text:0000000000405516\n.text:0000000000405518\n.text:000000000040551b\n.text:000000000040551e\n'
p209
tp210
sS'deregister_tm_clones'
p211
(S'\n__stdcall deregister_tm_clones()\n'
p212
V\u000a/* WARNING: Removing unreachable block (ram,0x00401945) */\u000a/* WARNING: Removing unreachable block (ram,0x0040194f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p213
S'MOV EAX,0x60e29f\nPUSH RBP\nSUB RAX,0x60e298\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401960\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401960\nPOP RBP\nMOV EDI,0x60e298\nJMP RAX\nPOP RBP\nRET\n'
p214
S'b8 9f e2 60 00\n55\n48 2d 98 e2 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 98 e2 60 00\nff e0\n5d\nc3\n'
p215
S'.text:0000000000401930\n.text:0000000000401935\n.text:0000000000401936\n.text:000000000040193c\n.text:0000000000401940\n.text:0000000000401943\n.text:0000000000401945\n.text:000000000040194a\n.text:000000000040194d\n.text:000000000040194f\n.text:0000000000401950\n.text:0000000000401955\n.text:0000000000401960\n.text:0000000000401961\n'
p216
tp217
sS'cfgetospeed'
p218
(S'\n__stdcall cfgetospeed(termios * __termios_p)\n'
p219
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aspeed_t cfgetospeed(termios *__termios_p)\u000a\u000a{\u000a  speed_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_cfgetospeed_0060e190)();\u000a  return sVar1;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x0060e190]\n'
p221
S'ff 25 9a c9 20 00\n'
p222
S'.plt:00000000004017f0\n'
p223
tp224
sS'tcgetattr'
p225
(S'\n__stdcall tcgetattr(int __fd, termios * __termios_p)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint tcgetattr(int __fd,termios *__termios_p)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_tcgetattr_0060e1a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x0060e1a8]\n'
p228
S'ff 25 82 c9 20 00\n'
p229
S'.plt:0000000000401820\n'
p230
tp231
sS'quotearg_custom'
p232
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p233
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p234
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00405730\n'
p235
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p236
S'.text:00000000004057b0\n.text:00000000004057b3\n.text:00000000004057b6\n.text:00000000004057b9\n.text:00000000004057bb\n.text:00000000004057be\n.text:00000000004057c1\n.text:00000000004057c4\n'
p237
tp238
sS'free'
p239
(S'\n__stdcall free(void * __ptr)\n'
p240
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_0060e020)();\u000a  return;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x0060e020]\n'
p242
S'ff 25 0a cb 20 00\n'
p243
S'.plt:0000000000401510\n'
p244
tp245
sS'close'
p246
(S'\n__stdcall close(int __fd)\n'
p247
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_0060e0f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x0060e0f8]\n'
p249
S'ff 25 32 ca 20 00\n'
p250
S'.plt:00000000004016c0\n'
p251
tp252
sS'getenv'
p253
(S'\n__stdcall getenv(char * __name)\n'
p254
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_0060e018)();\u000a  return pcVar1;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x0060e018]\n'
p256
S'ff 25 12 cb 20 00\n'
p257
S'.plt:0000000000401500\n'
p258
tp259
sS'putchar_unlocked'
p260
(S'\n__stdcall putchar_unlocked(int __c)\n'
p261
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar_unlocked(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_unlocked_0060e138)();\u000a  return iVar1;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x0060e138]\n'
p263
S'ff 25 f2 c9 20 00\n'
p264
S'.plt:0000000000401740\n'
p265
tp266
sS'recover_mode'
p267
(S'\n__stdcall recover_mode()\n'
p268
V\u000a_Bool recover_mode(void)\u000a\u000a{\u000a  int iVar1;\u000a  ulong uVar2;\u000a  tcflag_t flag [4];\u000a  tcflag_t local_28;\u000a  tcflag_t local_24;\u000a  tcflag_t local_20;\u000a  tcflag_t local_1c;\u000a  \u000a  uVar2 = 0;\u000a  do {\u000a    iVar1 = strtoul_tcflag_t();\u000a    if (iVar1 != 0) {\u000a      return false;\u000a    }\u000a    uVar2 = uVar2 + 1;\u000a  } while (uVar2 < 4);\u000a  mode.c_iflag = local_28;\u000a  mode.c_oflag = local_24;\u000a  mode.c_cflag = local_20;\u000a  mode.c_lflag = local_1c;\u000a  uVar2 = 0;\u000a  do {\u000a    iVar1 = strtoul_cc_t();\u000a    if (iVar1 != 0) {\u000a      return false;\u000a    }\u000a    uVar2 = uVar2 + 1;\u000a  } while (uVar2 < 0x20);\u000a  return true;\u000a}\u000a\u000a
p269
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x20\nLEA RBX,[RSP + 0x10]\nXOR EBP,EBP\nLEA R14,[RSP + 0x8]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV RSI,R14\nMOV RDX,RBX\nCALL 0x00404110\nTEST EAX,EAX\nJNZ 0x004039b6\nMOV RDI,qword ptr [RSP + 0x8]\nINC RDI\nINC RBP\nADD RBX,0x4\nCMP RBP,0x4\nJC 0x00403920\nMOV EAX,dword ptr [RSP + 0x10]\nMOV dword ptr [0x0060e30c],EAX\nMOV EAX,dword ptr [RSP + 0x14]\nMOV dword ptr [0x0060e310],EAX\nMOV EAX,dword ptr [RSP + 0x18]\nMOV dword ptr [0x0060e314],EAX\nMOV EAX,dword ptr [RSP + 0x1c]\nMOV dword ptr [0x0060e318],EAX\nXOR EBX,EBX\nLEA R14,[RSP + 0x8]\nXOR EBP,EBP\nNOP dword ptr [RAX]\nCMP RBX,0x1f\nMOV AL,0x3a\nJNZ 0x0040398a\nXOR EAX,EAX\nLEA RDX,[0x60e31d + RBX]\nMOVZX ECX,AL\nMOV RSI,R14\nCALL 0x00404180\nTEST EAX,EAX\nJNZ 0x004039b8\nMOV RDI,qword ptr [RSP + 0x8]\nINC RDI\nINC RBX\nCMP RBX,0x20\nJC 0x00403980\nMOV BPL,0x1\nJMP 0x004039b8\nXOR EBP,EBP\nMOV EAX,EBP\nADD RSP,0x20\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p270
S'55\n41 56\n53\n48 83 ec 20\n48 8d 5c 24 10\n31 ed\n4c 8d 74 24 08\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 f6\n48 89 da\ne8 e5 07 00 00\n85 c0\n0f 85 83 00 00 00\n48 8b 7c 24 08\n48 ff c7\n48 ff c5\n48 83 c3 04\n48 83 fd 04\n72 d8\n8b 44 24 10\n89 05 ba a9 20 00\n8b 44 24 14\n89 05 b4 a9 20 00\n8b 44 24 18\n89 05 ae a9 20 00\n8b 44 24 1c\n89 05 a8 a9 20 00\n31 db\n4c 8d 74 24 08\n31 ed\n0f 1f 80 00 00 00 00\n48 83 fb 1f\nb0 3a\n75 02\n31 c0\n48 8d 93 1d e3 60 00\n0f b6 c8\n4c 89 f6\ne8 e4 07 00 00\n85 c0\n75 18\n48 8b 7c 24 08\n48 ff c7\n48 ff c3\n48 83 fb 20\n72 cf\n40 b5 01\neb 02\n31 ed\n89 e8\n48 83 c4 20\n5b\n41 5e\n5d\nc3\n'
p271
S'.text:0000000000403900\n.text:0000000000403901\n.text:0000000000403903\n.text:0000000000403904\n.text:0000000000403908\n.text:000000000040390d\n.text:000000000040390f\n.text:0000000000403914\n.text:0000000000403920\n.text:0000000000403923\n.text:0000000000403926\n.text:000000000040392b\n.text:000000000040392d\n.text:0000000000403933\n.text:0000000000403938\n.text:000000000040393b\n.text:000000000040393e\n.text:0000000000403942\n.text:0000000000403946\n.text:0000000000403948\n.text:000000000040394c\n.text:0000000000403952\n.text:0000000000403956\n.text:000000000040395c\n.text:0000000000403960\n.text:0000000000403966\n.text:000000000040396a\n.text:0000000000403970\n.text:0000000000403972\n.text:0000000000403977\n.text:0000000000403979\n.text:0000000000403980\n.text:0000000000403984\n.text:0000000000403986\n.text:0000000000403988\n.text:000000000040398a\n.text:0000000000403991\n.text:0000000000403994\n.text:0000000000403997\n.text:000000000040399c\n.text:000000000040399e\n.text:00000000004039a0\n.text:00000000004039a5\n.text:00000000004039a8\n.text:00000000004039ab\n.text:00000000004039af\n.text:00000000004039b1\n.text:00000000004039b4\n.text:00000000004039b6\n.text:00000000004039b8\n.text:00000000004039ba\n.text:00000000004039be\n.text:00000000004039bf\n.text:00000000004039c1\n.text:00000000004039c2\n'
p272
tp273
sS'rpl_fseeko'
p274
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p275
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_0060e1c0)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p276
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x004071d8\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x004071d8\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x004071ea\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401850\nMOV RDI,RBX\nCALL 0x00401750\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x00401670\nCMP RAX,-0x1\nJZ 0x00407213\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x00407218\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p277
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 66 a6 ff ff\n48 89 df\ne8 5e a5 ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 71 a4 ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p278
S'.text:00000000004071b0\n.text:00000000004071b1\n.text:00000000004071b3\n.text:00000000004071b4\n.text:00000000004071b7\n.text:00000000004071ba\n.text:00000000004071bd\n.text:00000000004071c1\n.text:00000000004071c5\n.text:00000000004071c7\n.text:00000000004071cb\n.text:00000000004071cf\n.text:00000000004071d1\n.text:00000000004071d6\n.text:00000000004071d8\n.text:00000000004071db\n.text:00000000004071de\n.text:00000000004071e1\n.text:00000000004071e2\n.text:00000000004071e4\n.text:00000000004071e5\n.text:00000000004071ea\n.text:00000000004071ed\n.text:00000000004071f2\n.text:00000000004071f4\n.text:00000000004071f7\n.text:00000000004071fa\n.text:00000000004071ff\n.text:0000000000407203\n.text:0000000000407205\n.text:0000000000407208\n.text:000000000040720f\n.text:0000000000407211\n.text:0000000000407213\n.text:0000000000407218\n.text:0000000000407219\n.text:000000000040721b\n.text:000000000040721c\n'
p279
tp280
sS'quote_n_mem'
p281
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p282
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p283
S'MOV ECX,0x60e260\nJMP 0x00405330\n'
p284
S'b9 60 e2 60 00\ne9 36 fb ff ff\n'
p285
S'.text:00000000004057f0\n.text:00000000004057f5\n'
p286
tp287
sS'xstrdup'
p288
(S'\n__stdcall xstrdup(char * string)\n'
p289
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p290
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401610\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00406290\n'
p291
S'53\n48 89 fb\ne8 47 b3 ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p292
S'.text:00000000004062c0\n.text:00000000004062c1\n.text:00000000004062c4\n.text:00000000004062c9\n.text:00000000004062cd\n.text:00000000004062d0\n.text:00000000004062d1\n'
p293
tp294
sS'c_ispunct'
p295
(S'\n__stdcall c_ispunct()\n'
p296
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p297
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x00406cc2\nMOV AL,0x1\nJMP qword ptr [0x40b840 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p298
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd 40 b8 40 00\nc3\n31 c0\nc3\n'
p299
S'.text:0000000000406cb0\n.text:0000000000406cb3\n.text:0000000000406cb6\n.text:0000000000406cb8\n.text:0000000000406cba\n.text:0000000000406cc1\n.text:0000000000406cc2\n.text:0000000000406cc4\n'
p300
tp301
sS'FUN_004014f0'
p302
(S'\n__stdcall FUN_004014f0()\n'
p303
V\u000avoid FUN_004014f0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_0060e010)();\u000a  return;\u000a}\u000a\u000a
p304
S'PUSH qword ptr [0x0060e008]\nJMP qword ptr [0x0060e010]\n'
p305
S'ff 35 12 cb 20 00\nff 25 14 cb 20 00\n'
p306
S'.plt:00000000004014f0\n.plt:00000000004014f6\n'
p307
tp308
sS'fscanf'
p309
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p310
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_0060e0e8)();\u000a  return iVar1;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x0060e0e8]\n'
p312
S'ff 25 42 ca 20 00\n'
p313
S'.plt:00000000004016a0\n'
p314
tp315
sS'memcpy'
p316
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p317
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_0060e130)();\u000a  return pvVar1;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x0060e130]\n'
p319
S'ff 25 fa c9 20 00\n'
p320
S'.plt:0000000000401730\n'
p321
tp322
sS'integer_arg'
p323
(S'\n__stdcall integer_arg(char * s, ulong maxval)\n'
p324
V\u000aulong integer_arg(char *s,ulong maxval)\u000a\u000a{\u000a  uintmax_t uVar1;\u000a  \u000a  dcgettext(0,"invalid integer argument",5);\u000a  uVar1 = xnumtoumax(s,0,0,(char *)maxval,"bB");\u000a  return uVar1;\u000a}\u000a\u000a
p325
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV ESI,0x409917\nMOV EDX,0x5\nCALL 0x004015f0\nMOV dword ptr [RSP],0x0\nMOV ESI,0x0\nXOR EDX,EDX\nMOV R8D,0x409914\nMOV RDI,RBX\nMOV RCX,R14\nMOV R9,RAX\nCALL 0x00406310\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p326
S'41 56\n53\n50\n49 89 f6\n48 89 fb\n31 ff\nbe 17 99 40 00\nba 05 00 00 00\ne8 05 df ff ff\nc7 04 24 00 00 00 00\nbe 00 00 00 00\n31 d2\n41 b8 14 99 40 00\n48 89 df\n4c 89 f1\n49 89 c1\ne8 03 2c 00 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p327
S'.text:00000000004036d0\n.text:00000000004036d2\n.text:00000000004036d3\n.text:00000000004036d4\n.text:00000000004036d7\n.text:00000000004036da\n.text:00000000004036dc\n.text:00000000004036e1\n.text:00000000004036e6\n.text:00000000004036eb\n.text:00000000004036f2\n.text:00000000004036f7\n.text:00000000004036f9\n.text:00000000004036ff\n.text:0000000000403702\n.text:0000000000403705\n.text:0000000000403708\n.text:000000000040370d\n.text:0000000000403711\n.text:0000000000403712\n.text:0000000000403714\n'
p328
tp329
sS'close_stdout_set_ignore_EPIPE'
p330
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p331
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p332
S'MOV byte ptr [0x0060e3a0],DIL\nRET\n'
p333
S'40 88 3d 99 a1 20 00\nc3\n'
p334
S'.text:0000000000404200\n.text:0000000000404207\n'
p335
tp336
sS'iswprint'
p337
(S'\n__stdcall iswprint(wint_t __wc)\n'
p338
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_0060e208)();\u000a  return iVar1;\u000a}\u000a\u000a
p339
S'JMP qword ptr [0x0060e208]\n'
p340
S'ff 25 22 c9 20 00\n'
p341
S'.plt:00000000004018e0\n'
p342
tp343
sS'c_isspace'
p344
(S'\n__stdcall c_isspace()\n'
p345
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p346
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00406ce5\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p347
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p348
S'.text:0000000000406cd0\n.text:0000000000406cd3\n.text:0000000000406cd6\n.text:0000000000406cd8\n.text:0000000000406cdd\n.text:0000000000406cdf\n.text:0000000000406ce1\n.text:0000000000406ce4\n.text:0000000000406ce5\n.text:0000000000406ce7\n'
p349
tp350
sS'open'
p351
(S'\n__stdcall open(char * __file, int __oflag)\n'
p352
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_0060e1b8)();\u000a  return iVar1;\u000a}\u000a\u000a
p353
S'JMP qword ptr [0x0060e1b8]\n'
p354
S'ff 25 72 c9 20 00\n'
p355
S'.plt:0000000000401840\n'
p356
tp357
sS'quotearg_n_custom_mem'
p358
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p359
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p360
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x0060e3e0]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x0060e3d0]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3c0]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060e3b0]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x004044a0\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405330\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p361
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 87 8c 20 00\n48 89 44 24 30\n0f 10 05 6b 8c 20 00\n0f 29 44 24 20\n0f 10 05 4f 8c 20 00\n0f 29 44 24 10\n0f 10 05 33 8c 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p362
S'.text:0000000000405740\n.text:0000000000405741\n.text:0000000000405743\n.text:0000000000405745\n.text:0000000000405746\n.text:000000000040574a\n.text:000000000040574d\n.text:0000000000405750\n.text:0000000000405752\n.text:0000000000405759\n.text:000000000040575e\n.text:0000000000405765\n.text:000000000040576a\n.text:0000000000405771\n.text:0000000000405776\n.text:000000000040577d\n.text:0000000000405781\n.text:0000000000405784\n.text:0000000000405787\n.text:000000000040578c\n.text:000000000040578e\n.text:0000000000405791\n.text:0000000000405794\n.text:0000000000405797\n.text:000000000040579c\n.text:00000000004057a0\n.text:00000000004057a1\n.text:00000000004057a3\n.text:00000000004057a5\n.text:00000000004057a6\n'
p363
tp364
sS'_init'
p365
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p366
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___0060dff8;\u000a  if (PTR___gmon_start___0060dff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___0060dff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p367
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x0060dff8]\nTEST RAX,RAX\nJZ 0x004014e2\nCALL RAX\nADD RSP,0x8\nRET\n'
p368
S'48 83 ec 08\n48 8b 05 1d cb 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p369
S'.init:00000000004014d0\n.init:00000000004014d4\n.init:00000000004014db\n.init:00000000004014de\n.init:00000000004014e0\n.init:00000000004014e2\n.init:00000000004014e6\n'
p370
tp371
sS'set_quoting_flags'
p372
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p373
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p374
S'TEST RDI,RDI\nMOV ECX,0x60e3b0\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p375
S'48 85 ff\nb9 b0 e3 60 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p376
S'.text:0000000000404480\n.text:0000000000404483\n.text:0000000000404488\n.text:000000000040448c\n.text:000000000040448f\n.text:0000000000404492\n'
p377
tp378
sS'realloc'
p379
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p380
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_0060e178)();\u000a  return pvVar1;\u000a}\u000a\u000a
p381
S'JMP qword ptr [0x0060e178]\n'
p382
S'ff 25 b2 c9 20 00\n'
p383
S'.plt:00000000004017c0\n'
p384
tp385
sS'__fprintf_chk'
p386
(S'\n__stdcall __fprintf_chk()\n'
p387
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_0060e1f8)();\u000a  return;\u000a}\u000a\u000a
p388
S'JMP qword ptr [0x0060e1f8]\n'
p389
S'ff 25 32 c9 20 00\n'
p390
S'.plt:00000000004018c0\n'
p391
tp392
sS'get_charset_aliases'
p393
(S'\n__stdcall get_charset_aliases()\n'
p394
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases =\u000a                  \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a    return \u000a           "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a           + 0xca;\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_00407054_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_00407054_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_00407054_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_00407054_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_00407054_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_00407054_caseD_9;\u000a      case -1:\u000a        goto switchD_00407054_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_004070ad:\u000a  __s = \u000a        "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a        + 0xca;\u000aLAB_004070b3:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_00407054_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_004070b3;\u000a  }\u000a  goto LAB_004070ad;\u000a}\u000a\u000a
p395
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x0060e4f8]\nTEST R15,R15\nJNZ 0x004070c2\nMOV EDI,0x40bc6c\nCALL 0x00401500\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00406e78\nCMP byte ptr [RBX],0x0\nJNZ 0x00406e7d\nMOV EBX,0x40bc7c\nMOV RDI,RBX\nCALL 0x00401610\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00406e97\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x00406e99\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x00401760\nMOV R13,RAX\nTEST R13,R13\nJZ 0x00406eed\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401730\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00406ef8\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00406f15\nMOV R15D,0x40b1c9\nJMP 0x004070bb\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00401840\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x004070ad\nMOV ESI,0x40955b\nMOV EDI,EBP\nCALL 0x004017d0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00407074\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x00407040\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x00401560\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x00401560\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x00407040\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x004017a0\nMOV ESI,0x40bc8b\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x004016a0\nCMP EAX,0x2\nJL 0x00407094\nMOV RDI,R12\nCALL 0x00401610\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401610\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x0040701d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x004017c0\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x00406f64\nJMP 0x0040707d\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x00401760\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x00406f64\nJMP 0x0040707d\nMOV RDI,RBX\nCALL 0x00401580\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x00406fa7\nJMP qword ptr [0x40bb30 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x00401580\nCMP EAX,-0x1\nJZ 0x00407094\nCMP EAX,0xa\nJNZ 0x00407060\nJMP 0x00407040\nMOV EDI,EBP\nCALL 0x004016c0\nJMP 0x004070ad\nMOV RDI,R15\nCALL 0x00401510\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x004070e0\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x004070ad\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x004070b3\nMOV R15D,0x40b1c9\nMOV RDI,R13\nCALL 0x00401510\nMOV qword ptr [0x0060e4f8],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p396
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d a0 76 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf 6c bc 40 00\ne8 95 a6 ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb 7c bc 40 00\n48 89 df\ne8 8b a7 ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 b9 a8 ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 73 a8 ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf c9 b1 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 1c a9 ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe 5b 95 40 00\n89 ef\ne8 96 a8 ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 db a5 ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 cb a5 ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 ef a7 ff ff\nbe 8b bc 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 da a6 ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 39 a6 ff ff\n49 89 c4\n48 89 ef\ne8 2e a6 ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 b6 a7 ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 35 a7 ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 38 a5 ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd 30 bb 40 00\n48 89 df\ne8 18 a5 ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 45 a6 ff ff\neb 30\n4c 89 ff\ne8 8b a4 ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 44 00 00 00\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf c9 b1 40 00\n4c 89 ef\ne8 55 a4 ff ff\n4c 89 3d 36 74 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p397
S'.text:0000000000406e40\n.text:0000000000406e41\n.text:0000000000406e43\n.text:0000000000406e45\n.text:0000000000406e47\n.text:0000000000406e49\n.text:0000000000406e4a\n.text:0000000000406e51\n.text:0000000000406e58\n.text:0000000000406e5b\n.text:0000000000406e61\n.text:0000000000406e66\n.text:0000000000406e6b\n.text:0000000000406e6e\n.text:0000000000406e71\n.text:0000000000406e73\n.text:0000000000406e76\n.text:0000000000406e78\n.text:0000000000406e7d\n.text:0000000000406e80\n.text:0000000000406e85\n.text:0000000000406e88\n.text:0000000000406e8b\n.text:0000000000406e8d\n.text:0000000000406e92\n.text:0000000000406e95\n.text:0000000000406e97\n.text:0000000000406e99\n.text:0000000000406e9d\n.text:0000000000406ea2\n.text:0000000000406ea7\n.text:0000000000406eaa\n.text:0000000000406ead\n.text:0000000000406eaf\n.text:0000000000406eb2\n.text:0000000000406eb5\n.text:0000000000406eb8\n.text:0000000000406ebd\n.text:0000000000406ec0\n.text:0000000000406ec3\n.text:0000000000406ec6\n.text:0000000000406ec8\n.text:0000000000406ece\n.text:0000000000406ed8\n.text:0000000000406edd\n.text:0000000000406ee7\n.text:0000000000406eeb\n.text:0000000000406eed\n.text:0000000000406ef3\n.text:0000000000406ef8\n.text:0000000000406f02\n.text:0000000000406f07\n.text:0000000000406f11\n.text:0000000000406f15\n.text:0000000000406f1a\n.text:0000000000406f1c\n.text:0000000000406f1f\n.text:0000000000406f24\n.text:0000000000406f26\n.text:0000000000406f28\n.text:0000000000406f2e\n.text:0000000000406f33\n.text:0000000000406f35\n.text:0000000000406f3a\n.text:0000000000406f3d\n.text:0000000000406f40\n.text:0000000000406f46\n.text:0000000000406f4b\n.text:0000000000406f50\n.text:0000000000406f52\n.text:0000000000406f57\n.text:0000000000406f5a\n.text:0000000000406f5f\n.text:0000000000406f64\n.text:0000000000406f69\n.text:0000000000406f6c\n.text:0000000000406f6f\n.text:0000000000406f72\n.text:0000000000406f75\n.text:0000000000406f78\n.text:0000000000406f7d\n.text:0000000000406f80\n.text:0000000000406f85\n.text:0000000000406f88\n.text:0000000000406f8d\n.text:0000000000406f90\n.text:0000000000406f95\n.text:0000000000406f9a\n.text:0000000000406f9d\n.text:0000000000406fa2\n.text:0000000000406fa7\n.text:0000000000406fa9\n.text:0000000000406fac\n.text:0000000000406fb1\n.text:0000000000406fb6\n.text:0000000000406fb8\n.text:0000000000406fbb\n.text:0000000000406fbe\n.text:0000000000406fc1\n.text:0000000000406fc6\n.text:0000000000406fc9\n.text:0000000000406fcf\n.text:0000000000406fd2\n.text:0000000000406fd7\n.text:0000000000406fda\n.text:0000000000406fdd\n.text:0000000000406fe2\n.text:0000000000406fe5\n.text:0000000000406fea\n.text:0000000000406fef\n.text:0000000000406ff2\n.text:0000000000406ff4\n.text:0000000000406ff8\n.text:0000000000406ffd\n.text:0000000000407002\n.text:0000000000407005\n.text:000000000040700a\n.text:000000000040700d\n.text:0000000000407012\n.text:0000000000407015\n.text:000000000040701b\n.text:000000000040701d\n.text:0000000000407022\n.text:0000000000407026\n.text:000000000040702b\n.text:000000000040702e\n.text:0000000000407031\n.text:0000000000407037\n.text:0000000000407040\n.text:0000000000407043\n.text:0000000000407048\n.text:000000000040704b\n.text:000000000040704e\n.text:0000000000407054\n.text:0000000000407060\n.text:0000000000407063\n.text:0000000000407068\n.text:000000000040706b\n.text:000000000040706d\n.text:0000000000407070\n.text:0000000000407072\n.text:0000000000407074\n.text:0000000000407076\n.text:000000000040707b\n.text:000000000040707d\n.text:0000000000407080\n.text:0000000000407085\n.text:0000000000407087\n.text:000000000040708c\n.text:000000000040708f\n.text:0000000000407094\n.text:0000000000407097\n.text:000000000040709c\n.text:00000000004070a1\n.text:00000000004070a4\n.text:00000000004070a6\n.text:00000000004070ab\n.text:00000000004070ad\n.text:00000000004070b3\n.text:00000000004070b6\n.text:00000000004070bb\n.text:00000000004070c2\n.text:00000000004070c5\n.text:00000000004070cc\n.text:00000000004070cd\n.text:00000000004070cf\n.text:00000000004070d1\n.text:00000000004070d3\n.text:00000000004070d5\n.text:00000000004070d6\n'
p398
tp399
sS'nl_langinfo'
p400
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p401
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0060e158)();\u000a  return pcVar1;\u000a}\u000a\u000a
p402
S'JMP qword ptr [0x0060e158]\n'
p403
S'ff 25 d2 c9 20 00\n'
p404
S'.plt:0000000000401780\n'
p405
tp406
sS'x2realloc'
p407
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p408
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p409
S'MOV EDX,0x1\nJMP 0x004061c0\n'
p410
S'ba 01 00 00 00\neb 89\n'
p411
S'.text:0000000000406230\n.text:0000000000406235\n'
p412
tp413
sS'strlen'
p414
(S'\n__stdcall strlen(char * __s)\n'
p415
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_0060e0a0)();\u000a  return sVar1;\u000a}\u000a\u000a
p416
S'JMP qword ptr [0x0060e0a0]\n'
p417
S'ff 25 8a ca 20 00\n'
p418
S'.plt:0000000000401610\n'
p419
tp420
sS'memcmp'
p421
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p422
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_0060e100)();\u000a  return iVar1;\u000a}\u000a\u000a
p423
S'JMP qword ptr [0x0060e100]\n'
p424
S'ff 25 2a ca 20 00\n'
p425
S'.plt:00000000004016d0\n'
p426
tp427
sS'quotearg_n_style_mem'
p428
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p429
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p430
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00405560\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00405330\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p431
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p432
S'.text:00000000004055c0\n.text:00000000004055c1\n.text:00000000004055c3\n.text:00000000004055c5\n.text:00000000004055c6\n.text:00000000004055ca\n.text:00000000004055cd\n.text:00000000004055d0\n.text:00000000004055d2\n.text:00000000004055d5\n.text:00000000004055d8\n.text:00000000004055dd\n.text:00000000004055df\n.text:00000000004055e2\n.text:00000000004055e5\n.text:00000000004055e8\n.text:00000000004055ed\n.text:00000000004055f1\n.text:00000000004055f2\n.text:00000000004055f4\n.text:00000000004055f6\n.text:00000000004055f7\n'
p433
tp434
sS'_exit'
p435
(S'\n__stdcall _exit(int __status)\n'
p436
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_0060e040)();\u000a  return;\u000a}\u000a\u000a
p437
S'JMP qword ptr [0x0060e040]\n'
p438
S'ff 25 ea ca 20 00\n'
p439
S'.plt:0000000000401550\n'
p440
tp441
sS'display_all'
p442
(S'\n__stdcall display_all()\n'
p443
V\u000avoid display_all(void)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  tcflag_t *ptVar3;\u000a  ulong uVar4;\u000a  long lVar5;\u000a  control_info *pcVar6;\u000a  undefined8 uVar7;\u000a  char *message;\u000a  \u000a  display_speed((termios *)0x1);\u000a  display_window_size((char *)0x1);\u000a  wrapf("line = %d;",(ulong)mode.c_line);\u000a  putchar_unlocked(10);\u000a  current_col = 0;\u000a  pcVar6 = control_info;\u000a  while ((((message = pcVar6->name, *message != 'm' || (message[1] != 'i')) || (message[2] != 'n'))\u000a         || (message[3] != 0))) {\u000a    message = pcVar6->name;\u000a    iVar1 = strcmp(message,"flush");\u000a    if (iVar1 != 0) {\u000a      pcVar2 = visible();\u000a      wrapf("%s = %s;",message,pcVar2,pcVar2);\u000a    }\u000a    pcVar6 = pcVar6 + 1;\u000a  }\u000a  wrapf("min = %lu; time = %lu;",(ulong)mode.c_cc[6],(ulong)mode.c_cc[5]);\u000a  if (current_col != 0) {\u000a    putchar_unlocked(10);\u000a  }\u000a  current_col = 0;\u000a  lVar5 = -0xb20;\u000a  iVar1 = 0;\u000a  do {\u000a    if (((&mode_info[0x59].flags)[lVar5] & 8U) == 0) {\u000a      if (*(int *)((long)&mode_info[0x59].type + lVar5) != iVar1) {\u000a        putchar_unlocked(10);\u000a        current_col = 0;\u000a        iVar1 = *(int *)((long)&mode_info[0x59].type + lVar5);\u000a      }\u000a      ptVar3 = mode_type_flag();\u000a      uVar4 = *(ulong *)((long)&mode_info[0x59].mask + lVar5);\u000a      if (uVar4 == 0) {\u000a        uVar4 = *(ulong *)((long)&mode_info[0x59].bits + lVar5);\u000a      }\u000a      if (ptVar3 == (tcflag_t *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("bitsp","src/stty.c",0x7e3,"void display_all(struct termios *, const char *)")\u000a        ;\u000a      }\u000a      if (((ulong)*ptVar3 & uVar4) == *(ulong *)((long)&mode_info[0x59].bits + lVar5)) {\u000a        uVar7 = *(undefined8 *)((long)&mode_info[0x59].name + lVar5);\u000a        message = "%s";\u000a      }\u000a      else {\u000a        if (((&mode_info[0x59].flags)[lVar5] & 4U) == 0) goto LAB_00403f7c;\u000a        uVar7 = *(undefined8 *)((long)&mode_info[0x59].name + lVar5);\u000a        message = "-%s";\u000a      }\u000a      wrapf(message,uVar7);\u000a    }\u000aLAB_00403f7c:\u000a    lVar5 = lVar5 + 0x20;\u000a    if (lVar5 == 0) {\u000a      putchar_unlocked(10);\u000a      current_col = 0;\u000a      return;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p444
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nMOV EDI,0x1\nCALL 0x004037f0\nMOV EDI,0x1\nMOV RSI,RBX\nCALL 0x00403720\nMOVZX ESI,byte ptr [0x0060e31c]\nMOV EDI,0x409770\nXOR EAX,EAX\nCALL 0x00403ad0\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nMOV EBP,0x40a530\nJMP 0x00403e54\nADD RBP,0x18\nMOV RAX,qword ptr [RBP]\nCMP byte ptr [RAX],0x6d\nJNZ 0x00403e70\nCMP byte ptr [RAX + 0x1],0x69\nJNZ 0x00403e70\nCMP byte ptr [RAX + 0x2],0x6e\nJNZ 0x00403e70\nCMP byte ptr [RAX + 0x3],0x0\nJZ 0x00403eac\nNOP\nMOV RBX,qword ptr [RBP]\nMOV ESI,0x409704\nMOV RDI,RBX\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403e50\nMOV RAX,qword ptr [RBP + 0x10]\nMOVZX EDI,byte ptr [0x60e31d + RAX]\nCALL 0x00404030\nMOV RCX,RAX\nMOV EDI,0x40977b\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00403ad0\nJMP 0x00403e50\nMOVZX ESI,byte ptr [0x0060e323]\nMOVZX EDX,byte ptr [0x0060e322]\nMOV EDI,0x4097e0\nXOR EAX,EAX\nCALL 0x00403ad0\nCMP dword ptr [0x0060e34c],0x0\nJZ 0x00403ed9\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nMOV RBX,-0xb20\nXOR R14D,R14D\nNOP dword ptr [RAX]\nTEST byte ptr [0x40a51c + RBX],0x8\nJNZ 0x00403f7c\nMOV EBP,dword ptr [0x40a518 + RBX]\nCMP EBP,R14D\nJZ 0x00403f23\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nMOV R14D,dword ptr [0x40a518 + RBX]\nMOV EDI,EBP\nCALL 0x004039d0\nMOV RCX,qword ptr [0x40a528 + RBX]\nTEST RCX,RCX\nJNZ 0x00403f3d\nMOV RCX,qword ptr [0x40a520 + RBX]\nTEST RAX,RAX\nJZ 0x00403f9f\nMOV EAX,dword ptr [RAX]\nAND RAX,RCX\nCMP RAX,qword ptr [0x40a520 + RBX]\nJNZ 0x00403f60\nMOV RSI,qword ptr [0x40a510 + RBX]\nMOV EDI,0x40aafd\nJMP 0x00403f75\nTEST byte ptr [0x40a51c + RBX],0x4\nJZ 0x00403f7c\nMOV RSI,qword ptr [0x40a510 + RBX]\nMOV EDI,0x4097d4\nXOR EAX,EAX\nCALL 0x00403ad0\nADD RBX,0x20\nJNZ 0x00403ef0\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nPOP RBX\nPOP R14\nPOP RBP\nRET\nMOV EDI,0x40979c\nMOV ESI,0x4097a2\nMOV EDX,0x7e3\nMOV ECX,0x4097f7\nCALL 0x00401680\n'
p445
S'55\n41 56\n53\n48 89 fb\nbf 01 00 00 00\ne8 df f9 ff ff\nbf 01 00 00 00\n48 89 de\ne8 02 f9 ff ff\n0f b6 35 f7 a4 20 00\nbf 70 97 40 00\n31 c0\ne8 9f fc ff ff\nbf 0a 00 00 00\ne8 05 d9 ff ff\nc7 05 07 a5 20 00 00 00 00 00\nbd 30 a5 40 00\neb 08\n48 83 c5 18\n48 8b 45 00\n80 38 6d\n75 13\n80 78 01 69\n75 0d\n80 78 02 6e\n75 07\n80 78 03 00\n74 3d\n90\n48 8b 5d 00\nbe 04 97 40 00\n48 89 df\ne8 8f d8 ff ff\n85 c0\n74 cb\n48 8b 45 10\n0f b6 b8 1d e3 60 00\ne8 9b 01 00 00\n48 89 c1\nbf 7b 97 40 00\n31 c0\n48 89 de\n48 89 ca\ne8 26 fc ff ff\neb a4\n0f b6 35 70 a4 20 00\n0f b6 15 68 a4 20 00\nbf e0 97 40 00\n31 c0\ne8 0a fc ff ff\n83 3d 7f a4 20 00 00\n74 0a\nbf 0a 00 00 00\ne8 67 d8 ff ff\nc7 05 69 a4 20 00 00 00 00 00\n48 c7 c3 e0 f4 ff ff\n45 31 f6\n0f 1f 00\nf6 83 1c a5 40 00 08\n0f 85 7f 00 00 00\n8b ab 18 a5 40 00\n44 39 f5\n74 1b\nbf 0a 00 00 00\ne8 2e d8 ff ff\nc7 05 30 a4 20 00 00 00 00 00\n44 8b b3 18 a5 40 00\n89 ef\ne8 a6 fa ff ff\n48 8b 8b 28 a5 40 00\n48 85 c9\n75 07\n48 8b 8b 20 a5 40 00\n48 85 c0\n74 5d\n8b 00\n48 21 c8\n48 3b 83 20 a5 40 00\n75 10\n48 8b b3 10 a5 40 00\nbf fd aa 40 00\neb 17\nf6 83 1c a5 40 00 04\n74 13\n48 8b b3 10 a5 40 00\nbf d4 97 40 00\n31 c0\ne8 54 fb ff ff\n48 83 c3 20\n0f 85 6a ff ff ff\nbf 0a 00 00 00\ne8 b0 d7 ff ff\nc7 05 b2 a3 20 00 00 00 00 00\n5b\n41 5e\n5d\nc3\nbf 9c 97 40 00\nbe a2 97 40 00\nba e3 07 00 00\nb9 f7 97 40 00\ne8 c8 d6 ff ff\n'
p446
S'.text:0000000000403e00\n.text:0000000000403e01\n.text:0000000000403e03\n.text:0000000000403e04\n.text:0000000000403e07\n.text:0000000000403e0c\n.text:0000000000403e11\n.text:0000000000403e16\n.text:0000000000403e19\n.text:0000000000403e1e\n.text:0000000000403e25\n.text:0000000000403e2a\n.text:0000000000403e2c\n.text:0000000000403e31\n.text:0000000000403e36\n.text:0000000000403e3b\n.text:0000000000403e45\n.text:0000000000403e4a\n.text:0000000000403e50\n.text:0000000000403e54\n.text:0000000000403e58\n.text:0000000000403e5b\n.text:0000000000403e5d\n.text:0000000000403e61\n.text:0000000000403e63\n.text:0000000000403e67\n.text:0000000000403e69\n.text:0000000000403e6d\n.text:0000000000403e6f\n.text:0000000000403e70\n.text:0000000000403e74\n.text:0000000000403e79\n.text:0000000000403e7c\n.text:0000000000403e81\n.text:0000000000403e83\n.text:0000000000403e85\n.text:0000000000403e89\n.text:0000000000403e90\n.text:0000000000403e95\n.text:0000000000403e98\n.text:0000000000403e9d\n.text:0000000000403e9f\n.text:0000000000403ea2\n.text:0000000000403ea5\n.text:0000000000403eaa\n.text:0000000000403eac\n.text:0000000000403eb3\n.text:0000000000403eba\n.text:0000000000403ebf\n.text:0000000000403ec1\n.text:0000000000403ec6\n.text:0000000000403ecd\n.text:0000000000403ecf\n.text:0000000000403ed4\n.text:0000000000403ed9\n.text:0000000000403ee3\n.text:0000000000403eea\n.text:0000000000403eed\n.text:0000000000403ef0\n.text:0000000000403ef7\n.text:0000000000403efd\n.text:0000000000403f03\n.text:0000000000403f06\n.text:0000000000403f08\n.text:0000000000403f0d\n.text:0000000000403f12\n.text:0000000000403f1c\n.text:0000000000403f23\n.text:0000000000403f25\n.text:0000000000403f2a\n.text:0000000000403f31\n.text:0000000000403f34\n.text:0000000000403f36\n.text:0000000000403f3d\n.text:0000000000403f40\n.text:0000000000403f42\n.text:0000000000403f44\n.text:0000000000403f47\n.text:0000000000403f4e\n.text:0000000000403f50\n.text:0000000000403f57\n.text:0000000000403f5c\n.text:0000000000403f60\n.text:0000000000403f67\n.text:0000000000403f69\n.text:0000000000403f70\n.text:0000000000403f75\n.text:0000000000403f77\n.text:0000000000403f7c\n.text:0000000000403f80\n.text:0000000000403f86\n.text:0000000000403f8b\n.text:0000000000403f90\n.text:0000000000403f9a\n.text:0000000000403f9b\n.text:0000000000403f9d\n.text:0000000000403f9e\n.text:0000000000403f9f\n.text:0000000000403fa4\n.text:0000000000403fa9\n.text:0000000000403fae\n.text:0000000000403fb3\n'
p447
tp448
sS'xdectoumax'
p449
(S'\n__stdcall xdectoumax(char * n_str, uintmax_t min, uintmax_t max, char * suffixes, char * err)\n'
p450
V\u000auintmax_t xdectoumax(char *n_str,uintmax_t min,uintmax_t max,char *suffixes,char *err)\u000a\u000a{\u000a  uintmax_t uVar1;\u000a  \u000a  uVar1 = xnumtoumax(n_str,10,min,(char *)max,suffixes);\u000a  return uVar1;\u000a}\u000a\u000a
p451
S'PUSH RAX\nMOV R10,R8\nMOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV dword ptr [RSP],R9D\nMOV ESI,0xa\nMOV R8,RAX\nMOV R9,R10\nCALL 0x00406310\nPOP RCX\nRET\n'
p452
S'50\n4d 89 c2\n48 89 c8\n48 89 d1\n48 89 f2\n44 89 0c 24\nbe 0a 00 00 00\n49 89 c0\n4d 89 d1\ne8 0f ff ff ff\n59\nc3\n'
p453
S'.text:00000000004063e0\n.text:00000000004063e1\n.text:00000000004063e4\n.text:00000000004063e7\n.text:00000000004063ea\n.text:00000000004063ed\n.text:00000000004063f1\n.text:00000000004063f6\n.text:00000000004063f9\n.text:00000000004063fc\n.text:0000000000406401\n.text:0000000000406402\n'
p454
tp455
sS'bkm_scale_by_power'
p456
(S'\n__stdcall bkm_scale_by_power(uintmax_t * x)\n'
p457
V\u000astrtol_error bkm_scale_by_power(uintmax_t *x)\u000a\u000a{\u000a  strtol_error sVar1;\u000a  int in_EDX;\u000a  strtol_error sVar2;\u000a  \u000a  sVar2 = LONGINT_OK;\u000a  if (in_EDX != 0) {\u000a    do {\u000a      sVar1 = bkm_scale(x);\u000a      sVar2 = sVar2 | sVar1;\u000a      in_EDX = in_EDX + -1;\u000a    } while (in_EDX != 0);\u000a  }\u000a  return sVar2;\u000a}\u000a\u000a
p458
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,EDX\nMOV R14D,ESI\nMOV R15,RDI\nXOR EBP,EBP\nTEST EBX,EBX\nJZ 0x004069d1\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,R15\nMOV ESI,R14D\nCALL 0x00406970\nOR EBP,EAX\nDEC EBX\nJNZ 0x004069c0\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p459
S'55\n41 57\n41 56\n53\n50\n89 d3\n41 89 f6\n49 89 ff\n31 ed\n85 db\n74 1c\n66 66 2e 0f 1f 84 00 00 00 00 00\n4c 89 ff\n44 89 f6\ne8 a5 ff ff ff\n09 c5\nff cb\n75 ef\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p460
S'.text:00000000004069a0\n.text:00000000004069a1\n.text:00000000004069a3\n.text:00000000004069a5\n.text:00000000004069a6\n.text:00000000004069a7\n.text:00000000004069a9\n.text:00000000004069ac\n.text:00000000004069af\n.text:00000000004069b1\n.text:00000000004069b3\n.text:00000000004069b5\n.text:00000000004069c0\n.text:00000000004069c3\n.text:00000000004069c6\n.text:00000000004069cb\n.text:00000000004069cd\n.text:00000000004069cf\n.text:00000000004069d1\n.text:00000000004069d3\n.text:00000000004069d7\n.text:00000000004069d8\n.text:00000000004069da\n.text:00000000004069dc\n.text:00000000004069dd\n'
p461
tp462
sS'xrealloc'
p463
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p464
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p465
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x004061a7\nTEST RBX,RBX\nJNZ 0x004061a7\nCALL 0x00401510\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x004017c0\nTEST RBX,RBX\nJZ 0x004061b9\nTEST RAX,RAX\nJZ 0x004061bb\nPOP RBX\nRET\nCALL 0x004062e0\n'
p466
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 6d b3 ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 11 b6 ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p467
S'.text:0000000000406190\n.text:0000000000406191\n.text:0000000000406194\n.text:0000000000406197\n.text:0000000000406199\n.text:000000000040619c\n.text:000000000040619e\n.text:00000000004061a3\n.text:00000000004061a5\n.text:00000000004061a6\n.text:00000000004061a7\n.text:00000000004061aa\n.text:00000000004061af\n.text:00000000004061b2\n.text:00000000004061b4\n.text:00000000004061b7\n.text:00000000004061b9\n.text:00000000004061ba\n.text:00000000004061bb\n'
p468
tp469
sS'strtoul_cc_t'
p470
(S'\n__stdcall strtoul_cc_t()\n'
p471
V\u000aint strtoul_cc_t(void)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  ulong uVar3;\u000a  char in_CL;\u000a  undefined *in_RDX;\u000a  char **__endptr;\u000a  char *__nptr;\u000a  \u000a  piVar2 = __errno_location();\u000a  *piVar2 = 0;\u000a  uVar3 = strtoul(__nptr,__endptr,0x10);\u000a  iVar1 = -1;\u000a  if ((((*piVar2 == 0) && ((uVar3 & 0xff) == uVar3)) && (*__endptr != __nptr)) &&\u000a     (**__endptr == in_CL)) {\u000a    *in_RDX = (char)uVar3;\u000a    iVar1 = 0;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p472
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R15D,ECX\nMOV R14,RDX\nMOV RBP,RSI\nMOV R12,RDI\nCALL 0x00401530\nMOV RBX,RAX\nMOV dword ptr [RBX],0x0\nMOV EDX,0x10\nMOV RDI,R12\nMOV RSI,RBP\nCALL 0x00401880\nMOV RCX,RAX\nMOV EAX,0xffffffff\nCMP dword ptr [RBX],0x0\nJNZ 0x004041da\nMOVZX EDX,CL\nCMP RDX,RCX\nJNZ 0x004041da\nMOV RDX,qword ptr [RBP]\nCMP RDX,R12\nJZ 0x004041da\nCMP byte ptr [RDX],R15B\nJNZ 0x004041da\nMOV byte ptr [R14],CL\nXOR EAX,EAX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p473
S'55\n41 57\n41 56\n41 54\n53\n41 89 cf\n49 89 d6\n48 89 f5\n49 89 fc\ne8 97 d3 ff ff\n48 89 c3\nc7 03 00 00 00 00\nba 10 00 00 00\n4c 89 e7\n48 89 ee\ne8 ce d6 ff ff\n48 89 c1\nb8 ff ff ff ff\n83 3b 00\n75 1b\n0f b6 d1\n48 39 ca\n75 13\n48 8b 55 00\n4c 39 e2\n74 0a\n44 38 3a\n75 05\n41 88 0e\n31 c0\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p474
S'.text:0000000000404180\n.text:0000000000404181\n.text:0000000000404183\n.text:0000000000404185\n.text:0000000000404187\n.text:0000000000404188\n.text:000000000040418b\n.text:000000000040418e\n.text:0000000000404191\n.text:0000000000404194\n.text:0000000000404199\n.text:000000000040419c\n.text:00000000004041a2\n.text:00000000004041a7\n.text:00000000004041aa\n.text:00000000004041ad\n.text:00000000004041b2\n.text:00000000004041b5\n.text:00000000004041ba\n.text:00000000004041bd\n.text:00000000004041bf\n.text:00000000004041c2\n.text:00000000004041c5\n.text:00000000004041c7\n.text:00000000004041cb\n.text:00000000004041ce\n.text:00000000004041d0\n.text:00000000004041d3\n.text:00000000004041d5\n.text:00000000004041d8\n.text:00000000004041da\n.text:00000000004041db\n.text:00000000004041dd\n.text:00000000004041df\n.text:00000000004041e1\n.text:00000000004041e2\n'
p475
tp476
sS'close_stdout'
p477
(S'\n__stdcall close_stdout()\n'
p478
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_00404237;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,0x40aafd,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_00404237:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p479
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x0060e2a8]\nCALL 0x00406d40\nTEST EAX,EAX\nJZ 0x00404237\nCMP byte ptr [0x0060e3a0],0x0\nJZ 0x0040424c\nCALL 0x00401530\nCMP dword ptr [RAX],0x20\nJNZ 0x0040424c\nMOV RDI,qword ptr [0x0060e300]\nCALL 0x00406d40\nTEST EAX,EAX\nJNZ 0x00404291\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x40aaed\nMOV EDX,0x5\nCALL 0x004015f0\nMOV R14,RAX\nMOV RBX,qword ptr [0x0060e398]\nCALL 0x00401530\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x0040429c\nXOR EDI,EDI\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00401810\nMOV EDI,dword ptr [0x0060e238]\nCALL 0x00401550\nMOV EDI,dword ptr [0x0060e238]\nCALL 0x00401550\nMOV RDI,RBX\nCALL 0x004056c0\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x40aaf9\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00401810\nMOV EDI,dword ptr [0x0060e238]\nCALL 0x00401550\n'
p480
S'55\n41 56\n53\n48 8b 3d 8d a0 20 00\ne8 20 2b 00 00\n85 c0\n74 13\n80 3d 75 a1 20 00 00\n74 1f\ne8 fe d2 ff ff\n83 38 20\n75 15\n48 8b 3d c2 a0 20 00\ne8 fd 2a 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe ed aa 40 00\nba 05 00 00 00\ne8 93 d3 ff ff\n49 89 c6\n48 8b 1d 31 a1 20 00\ne8 c4 d2 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba fd aa 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 8a d5 ff ff\n8b 3d ac 9f 20 00\ne8 bf d2 ff ff\n8b 3d a1 9f 20 00\ne8 b4 d2 ff ff\n48 89 df\ne8 1c 14 00 00\n48 89 c1\n31 ff\nba f9 aa 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 56 d5 ff ff\n8b 3d 78 9f 20 00\ne8 8b d2 ff ff\n'
p481
S'.text:0000000000404210\n.text:0000000000404211\n.text:0000000000404213\n.text:0000000000404214\n.text:000000000040421b\n.text:0000000000404220\n.text:0000000000404222\n.text:0000000000404224\n.text:000000000040422b\n.text:000000000040422d\n.text:0000000000404232\n.text:0000000000404235\n.text:0000000000404237\n.text:000000000040423e\n.text:0000000000404243\n.text:0000000000404245\n.text:0000000000404247\n.text:0000000000404248\n.text:000000000040424a\n.text:000000000040424b\n.text:000000000040424c\n.text:000000000040424e\n.text:0000000000404253\n.text:0000000000404258\n.text:000000000040425d\n.text:0000000000404260\n.text:0000000000404267\n.text:000000000040426c\n.text:000000000040426f\n.text:0000000000404271\n.text:0000000000404273\n.text:0000000000404275\n.text:000000000040427a\n.text:000000000040427c\n.text:000000000040427e\n.text:0000000000404281\n.text:0000000000404286\n.text:000000000040428c\n.text:0000000000404291\n.text:0000000000404297\n.text:000000000040429c\n.text:000000000040429f\n.text:00000000004042a4\n.text:00000000004042a7\n.text:00000000004042a9\n.text:00000000004042ae\n.text:00000000004042b0\n.text:00000000004042b2\n.text:00000000004042b5\n.text:00000000004042ba\n.text:00000000004042c0\n'
p482
tp483
sS'version_etc_ar'
p484
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p485
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p486
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x00405fa0\nJMP 0x00405c30\n'
p487
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p488
S'.text:0000000000405f90\n.text:0000000000405f97\n.text:0000000000405fa0\n.text:0000000000405fa6\n.text:0000000000405faa\n.text:0000000000405fac\n'
p489
tp490
sS'strtoumax'
p491
(S'\n__stdcall strtoumax(char * __nptr, char * * __endptr, int __base)\n'
p492
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000auintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  uintmax_t uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_strtoumax_0060e1d0)();\u000a  return uVar1;\u000a}\u000a\u000a
p493
S'JMP qword ptr [0x0060e1d0]\n'
p494
S'ff 25 5a c9 20 00\n'
p495
S'.plt:0000000000401870\n'
p496
tp497
sS'c_isxdigit'
p498
(S'\n__stdcall c_isxdigit()\n'
p499
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p500
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x00406d1b\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p501
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p502
S'.text:0000000000406d00\n.text:0000000000406d03\n.text:0000000000406d06\n.text:0000000000406d08\n.text:0000000000406d12\n.text:0000000000406d14\n.text:0000000000406d17\n.text:0000000000406d1a\n.text:0000000000406d1b\n.text:0000000000406d1d\n'
p503
tp504
sS'__libc_csu_fini'
p505
(S'\n__stdcall __libc_csu_fini()\n'
p506
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p507
S'RET\n'
p508
S'f3 c3\n'
p509
S'.text:0000000000407290\n'
p510
tp511
sS'abort'
p512
(S'\n__stdcall abort()\n'
p513
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_0060e028)();\u000a  return;\u000a}\u000a\u000a
p514
S'JMP qword ptr [0x0060e028]\n'
p515
S'ff 25 02 cb 20 00\n'
p516
S'.plt:0000000000401520\n'
p517
tp518
sS'version_etc'
p519
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p520
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p521
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00406062\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x00405fc0\nADD RSP,0xd8\nRET\n'
p522
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p523
S'.text:0000000000406020\n.text:0000000000406027\n.text:0000000000406029\n.text:000000000040602b\n.text:0000000000406030\n.text:0000000000406035\n.text:000000000040603a\n.text:0000000000406042\n.text:000000000040604a\n.text:0000000000406052\n.text:000000000040605a\n.text:0000000000406062\n.text:0000000000406067\n.text:000000000040606c\n.text:0000000000406071\n.text:0000000000406076\n.text:000000000040607e\n.text:0000000000406083\n.text:000000000040608b\n.text:0000000000406092\n.text:0000000000406095\n.text:000000000040609a\n.text:00000000004060a1\n'
p524
tp525
sS'lseek'
p526
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p527
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_0060e0d0)();\u000a  return _Var1;\u000a}\u000a\u000a
p528
S'JMP qword ptr [0x0060e0d0]\n'
p529
S'ff 25 5a ca 20 00\n'
p530
S'.plt:0000000000401670\n'
p531
tp532
sS'quotearg_n_mem'
p533
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p534
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p535
S'MOV ECX,0x60e3b0\nJMP 0x00405330\n'
p536
S'b9 b0 e3 60 00\ne9 36 fe ff ff\n'
p537
S'.text:00000000004054f0\n.text:00000000004054f5\n'
p538
tp539
sS'__printf_chk'
p540
(S'\n__stdcall __printf_chk()\n'
p541
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_0060e198)();\u000a  return;\u000a}\u000a\u000a
p542
S'JMP qword ptr [0x0060e198]\n'
p543
S'ff 25 92 c9 20 00\n'
p544
S'.plt:0000000000401800\n'
p545
tp546
sS'ioctl'
p547
(S'\n__stdcall ioctl(int __fd, ulong __request)\n'
p548
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ioctl(int __fd,ulong __request,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ioctl_0060e0f0)();\u000a  return iVar1;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x0060e0f0]\n'
p550
S'ff 25 3a ca 20 00\n'
p551
S'.plt:00000000004016b0\n'
p552
tp553
sS'emit_ancillary_info'
p554
(S'\n__stdcall emit_ancillary_info()\n'
p555
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x0040a700;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("stty",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "stty";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,&DAT_00409177,uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/",&DAT_00409177);\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x40b1c9;\u000a  if (__s2 == "stty") {\u000a    uVar3 = 0x4093c6;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p556
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x40a700\nMOV ESI,0x4093aa\nNOP\nMOV EDI,0x409177\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004025bb\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x004025a0\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x409177\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x409409\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x4091bb\nMOV ECX,0x409420\nXOR EAX,EAX\nCALL 0x00401800\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x004017e0\nTEST RAX,RAX\nJZ 0x00402644\nMOV ESI,0x409447\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x00401540\nTEST EAX,EAX\nJZ 0x00402644\nXOR EDI,EDI\nMOV ESI,0x40944b\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x409177\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x409490\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,RAX\nMOV R14D,0x409177\nMOV EDI,0x1\nMOV EDX,0x409420\nMOV ECX,0x409177\nXOR EAX,EAX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x4094af\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x4093c6\nMOV ECX,0x40b1c9\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401800\n'
p557
S'41 56\n53\n50\nbb 00 a7 40 00\nbe aa 93 40 00\n66 90\nbf 77 91 40 00\ne8 66 f1 ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb 77 91 40 00\n48 0f 45 d8\n31 ff\nbe 09 94 40 00\nba 05 00 00 00\ne8 14 f0 ff ff\n48 89 c6\nbf 01 00 00 00\nba bb 91 40 00\nb9 20 94 40 00\n31 c0\ne8 0b f2 ff ff\nbf 05 00 00 00\n31 f6\ne8 df f1 ff ff\n48 85 c0\n74 3e\nbe 47 94 40 00\nba 03 00 00 00\n48 89 c7\ne8 28 ef ff ff\n85 c0\n74 28\n31 ff\nbe 4b 94 40 00\nba 05 00 00 00\ne8 c3 ef ff ff\n48 89 c1\nbf 01 00 00 00\nba 77 91 40 00\n31 c0\n48 89 ce\ne8 bc f1 ff ff\n31 ff\nbe 90 94 40 00\nba 05 00 00 00\ne8 9b ef ff ff\n48 89 c6\n41 be 77 91 40 00\nbf 01 00 00 00\nba 20 94 40 00\nb9 77 91 40 00\n31 c0\ne8 8c f1 ff ff\n31 ff\nbe af 94 40 00\nba 05 00 00 00\ne8 6b ef ff ff\n48 89 c2\n4c 39 f3\nb8 c6 93 40 00\nb9 c9 b1 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 4e f1 ff ff\n'
p558
S'.text:0000000000402590\n.text:0000000000402592\n.text:0000000000402593\n.text:0000000000402594\n.text:0000000000402599\n.text:000000000040259e\n.text:00000000004025a0\n.text:00000000004025a5\n.text:00000000004025aa\n.text:00000000004025ac\n.text:00000000004025ae\n.text:00000000004025b2\n.text:00000000004025b6\n.text:00000000004025b9\n.text:00000000004025bb\n.text:00000000004025bf\n.text:00000000004025c2\n.text:00000000004025c7\n.text:00000000004025cb\n.text:00000000004025cd\n.text:00000000004025d2\n.text:00000000004025d7\n.text:00000000004025dc\n.text:00000000004025df\n.text:00000000004025e4\n.text:00000000004025e9\n.text:00000000004025ee\n.text:00000000004025f0\n.text:00000000004025f5\n.text:00000000004025fa\n.text:00000000004025fc\n.text:0000000000402601\n.text:0000000000402604\n.text:0000000000402606\n.text:000000000040260b\n.text:0000000000402610\n.text:0000000000402613\n.text:0000000000402618\n.text:000000000040261a\n.text:000000000040261c\n.text:000000000040261e\n.text:0000000000402623\n.text:0000000000402628\n.text:000000000040262d\n.text:0000000000402630\n.text:0000000000402635\n.text:000000000040263a\n.text:000000000040263c\n.text:000000000040263f\n.text:0000000000402644\n.text:0000000000402646\n.text:000000000040264b\n.text:0000000000402650\n.text:0000000000402655\n.text:0000000000402658\n.text:000000000040265e\n.text:0000000000402663\n.text:0000000000402668\n.text:000000000040266d\n.text:000000000040266f\n.text:0000000000402674\n.text:0000000000402676\n.text:000000000040267b\n.text:0000000000402680\n.text:0000000000402685\n.text:0000000000402688\n.text:000000000040268b\n.text:0000000000402690\n.text:0000000000402695\n.text:0000000000402699\n.text:000000000040269e\n.text:00000000004026a0\n.text:00000000004026a3\n.text:00000000004026a6\n.text:00000000004026aa\n.text:00000000004026ab\n.text:00000000004026ad\n'
p559
tp560
sS'version_etc_va'
p561
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p562
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p563
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x00405ff0\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x00405ffc\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00406011\nINC R9\nCMP R9,0xa\nJC 0x00405fd0\nMOV R8,RSP\nCALL 0x00405c30\nADD RSP,0x58\nRET\n'
p564
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p565
S'.text:0000000000405fc0\n.text:0000000000405fc4\n.text:0000000000405fc7\n.text:0000000000405fd0\n.text:0000000000405fd3\n.text:0000000000405fd7\n.text:0000000000405fd9\n.text:0000000000405fdc\n.text:0000000000405fe0\n.text:0000000000405fe4\n.text:0000000000405fe7\n.text:0000000000405ff0\n.text:0000000000405ff4\n.text:0000000000405ff8\n.text:0000000000405ffc\n.text:0000000000405fff\n.text:0000000000406003\n.text:0000000000406006\n.text:0000000000406008\n.text:000000000040600b\n.text:000000000040600f\n.text:0000000000406011\n.text:0000000000406014\n.text:0000000000406019\n.text:000000000040601d\n'
p566
tp567
sS'xzalloc'
p568
(S'\n__stdcall xzalloc(size_t s)\n'
p569
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p570
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00406150\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00401690\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p571
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 34 b4 ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p572
S'.text:0000000000406240\n.text:0000000000406242\n.text:0000000000406243\n.text:0000000000406244\n.text:0000000000406247\n.text:000000000040624c\n.text:000000000040624f\n.text:0000000000406251\n.text:0000000000406254\n.text:0000000000406257\n.text:000000000040625c\n.text:000000000040625f\n.text:0000000000406263\n.text:0000000000406264\n.text:0000000000406266\n'
p573
tp574
sS'sane_mode'
p575
(S'\n__stdcall sane_mode()\n'
p576
V\u000avoid sane_mode(void)\u000a\u000a{\u000a  byte bVar1;\u000a  long lVar2;\u000a  tcflag_t *ptVar3;\u000a  \u000a  lVar2 = -0x1b0;\u000a  do {\u000a    mode.c_cc[*(long *)((long)&control_info[0x12].offset + lVar2)] =\u000a         (&control_info[0x12].saneval)[lVar2];\u000a    lVar2 = lVar2 + 0x18;\u000a  } while (lVar2 != 0);\u000a  lVar2 = -0xb20;\u000aLAB_00403a30:\u000a  do {\u000a    bVar1 = (&mode_info[0x59].flags)[lVar2];\u000a    if ((bVar1 & 0x10) == 0) {\u000a      if ((bVar1 & 1) == 0) {\u000a        if ((bVar1 & 2) != 0) {\u000a          ptVar3 = mode_type_flag();\u000a          *ptVar3 = (*(uint *)((long)&mode_info[0x59].bits + lVar2) ^ 0xffffffff) &\u000a                    (*(uint *)((long)&mode_info[0x59].mask + lVar2) ^ 0xffffffff) & *ptVar3;\u000a          lVar2 = lVar2 + 0x20;\u000a          if (lVar2 == 0) {\u000a            return;\u000a          }\u000a          goto LAB_00403a30;\u000a        }\u000a      }\u000a      else {\u000a        ptVar3 = mode_type_flag();\u000a        *ptVar3 = (*(uint *)((long)&mode_info[0x59].mask + lVar2) ^ 0xffffffff) & *ptVar3 |\u000a                  *(uint *)((long)&mode_info[0x59].bits + lVar2);\u000a      }\u000a    }\u000a    lVar2 = lVar2 + 0x20;\u000a    if (lVar2 == 0) {\u000a      return;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p577
S'MOV RAX,-0x1b0\nNOP word ptr [RAX + RAX*0x1]\nMOVZX ECX,byte ptr [0x40a6e8 + RAX]\nMOV RDX,qword ptr [0x40a6f0 + RAX]\nMOV byte ptr [0x60e31d + RDX],CL\nADD RAX,0x18\nJNZ 0x00403a00\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,-0xb20\nMOV R14D,0xffffffff\nNOP dword ptr [RAX + RAX*0x1]\nMOVSX EAX,byte ptr [0x40a51c + RBX]\nTEST AL,0x10\nJNZ 0x00403a8e\nTEST AL,0x1\nJNZ 0x00403a70\nTEST AL,0x2\nJZ 0x00403a8e\nMOV EDI,dword ptr [0x40a518 + RBX]\nCALL 0x004039d0\nMOV ECX,dword ptr [0x40a528 + RBX]\nXOR ECX,R14D\nAND ECX,dword ptr [RAX]\nMOV EDX,dword ptr [0x40a520 + RBX]\nXOR EDX,R14D\nAND EDX,ECX\nMOV dword ptr [RAX],EDX\nADD RBX,0x20\nJNZ 0x00403a30\nJMP 0x00403a94\nMOV EDI,dword ptr [0x40a518 + RBX]\nCALL 0x004039d0\nMOV ECX,dword ptr [0x40a528 + RBX]\nXOR ECX,R14D\nAND ECX,dword ptr [RAX]\nOR ECX,dword ptr [0x40a520 + RBX]\nMOV dword ptr [RAX],ECX\nADD RBX,0x20\nJNZ 0x00403a30\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p578
S'48 c7 c0 50 fe ff ff\n66 0f 1f 84 00 00 00 00 00\n0f b6 88 e8 a6 40 00\n48 8b 90 f0 a6 40 00\n88 8a 1d e3 60 00\n48 83 c0 18\n75 e6\n41 56\n53\n50\n48 c7 c3 e0 f4 ff ff\n41 be ff ff ff ff\n0f 1f 44 00 00\n0f be 83 1c a5 40 00\na8 10\n75 53\na8 01\n75 31\na8 02\n74 4b\n8b bb 18 a5 40 00\ne8 82 ff ff ff\n8b 8b 28 a5 40 00\n44 31 f1\n23 08\n8b 93 20 a5 40 00\n44 31 f2\n21 ca\n89 10\n48 83 c3 20\n75 c4\neb 26\n8b bb 18 a5 40 00\ne8 55 ff ff ff\n8b 8b 28 a5 40 00\n44 31 f1\n23 08\n0b 8b 20 a5 40 00\n89 08\n48 83 c3 20\n75 9c\n48 83 c4 08\n5b\n41 5e\nc3\n'
p579
S'.text:00000000004039f0\n.text:00000000004039f7\n.text:0000000000403a00\n.text:0000000000403a07\n.text:0000000000403a0e\n.text:0000000000403a14\n.text:0000000000403a18\n.text:0000000000403a1a\n.text:0000000000403a1c\n.text:0000000000403a1d\n.text:0000000000403a1e\n.text:0000000000403a25\n.text:0000000000403a2b\n.text:0000000000403a30\n.text:0000000000403a37\n.text:0000000000403a39\n.text:0000000000403a3b\n.text:0000000000403a3d\n.text:0000000000403a3f\n.text:0000000000403a41\n.text:0000000000403a43\n.text:0000000000403a49\n.text:0000000000403a4e\n.text:0000000000403a54\n.text:0000000000403a57\n.text:0000000000403a59\n.text:0000000000403a5f\n.text:0000000000403a62\n.text:0000000000403a64\n.text:0000000000403a66\n.text:0000000000403a6a\n.text:0000000000403a6c\n.text:0000000000403a70\n.text:0000000000403a76\n.text:0000000000403a7b\n.text:0000000000403a81\n.text:0000000000403a84\n.text:0000000000403a86\n.text:0000000000403a8c\n.text:0000000000403a8e\n.text:0000000000403a92\n.text:0000000000403a94\n.text:0000000000403a98\n.text:0000000000403a99\n.text:0000000000403a9b\n'
p580
tp581
sS'gettext_quote'
p582
(S'\n__stdcall gettext_quote(char * msgid)\n'
p583
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_0040b090;\u000a        pcVar2 = &DAT_0040b094;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p584
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x004015f0\nCMP RAX,RBX\nJNZ 0x004058e8\nCALL 0x00406db0\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x004058f0\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00405898\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40b080\nMOV EAX,0x40b084\nJMP 0x004058e4\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x004058f0\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x004058d6\nCMP byte ptr [RBX],0x60\nMOV ECX,0x40b090\nMOV EAX,0x40b094\nJMP 0x004058e4\nCMP R14D,0x9\nMOV ECX,0x40b074\nMOV EAX,0x40b078\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p585
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 a7 bd ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 59 15 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 80 b0 40 00\nb8 84 b0 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 90 b0 40 00\nb8 94 b0 40 00\neb 0e\n41 83 fe 09\nb9 74 b0 40 00\nb8 78 b0 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p586
S'.text:0000000000405830\n.text:0000000000405831\n.text:0000000000405833\n.text:0000000000405834\n.text:0000000000405837\n.text:000000000040583a\n.text:000000000040583c\n.text:0000000000405841\n.text:0000000000405844\n.text:0000000000405849\n.text:000000000040584c\n.text:0000000000405852\n.text:0000000000405857\n.text:000000000040585a\n.text:000000000040585f\n.text:0000000000405864\n.text:0000000000405869\n.text:000000000040586f\n.text:0000000000405875\n.text:0000000000405878\n.text:000000000040587a\n.text:000000000040587c\n.text:0000000000405881\n.text:0000000000405885\n.text:0000000000405887\n.text:0000000000405889\n.text:000000000040588c\n.text:0000000000405891\n.text:0000000000405896\n.text:0000000000405898\n.text:000000000040589d\n.text:00000000004058a2\n.text:00000000004058a7\n.text:00000000004058ad\n.text:00000000004058b3\n.text:00000000004058b6\n.text:00000000004058b8\n.text:00000000004058ba\n.text:00000000004058bf\n.text:00000000004058c3\n.text:00000000004058c5\n.text:00000000004058c7\n.text:00000000004058ca\n.text:00000000004058cf\n.text:00000000004058d4\n.text:00000000004058d6\n.text:00000000004058da\n.text:00000000004058df\n.text:00000000004058e4\n.text:00000000004058e8\n.text:00000000004058e9\n.text:00000000004058eb\n.text:00000000004058ec\n'
p587
tp588
sS'fclose'
p589
(S'\n__stdcall fclose(FILE * __stream)\n'
p590
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_0060e078)();\u000a  return iVar1;\u000a}\u000a\u000a
p591
S'JMP qword ptr [0x0060e078]\n'
p592
S'ff 25 b2 ca 20 00\n'
p593
S'.plt:00000000004015c0\n'
p594
tp595
sS'__ctype_get_mb_cur_max'
p596
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p597
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0060e098)();\u000a  return sVar1;\u000a}\u000a\u000a
p598
S'JMP qword ptr [0x0060e098]\n'
p599
S'ff 25 92 ca 20 00\n'
p600
S'.plt:0000000000401600\n'
p601
tp602
sS'quotearg_n_style'
p603
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p604
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p605
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x00405560\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00405330\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p606
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p607
S'.text:0000000000405520\n.text:0000000000405521\n.text:0000000000405523\n.text:0000000000405524\n.text:0000000000405528\n.text:000000000040552b\n.text:000000000040552d\n.text:0000000000405532\n.text:0000000000405535\n.text:000000000040553a\n.text:0000000000405541\n.text:0000000000405543\n.text:0000000000405546\n.text:0000000000405549\n.text:000000000040554e\n.text:0000000000405552\n.text:0000000000405553\n.text:0000000000405555\n.text:0000000000405556\n'
p608
tp609
sS'set_window_size'
p610
(S'\n__stdcall set_window_size(char * device_name)\n'
p611
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000avoid set_window_size(char *device_name)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  ulong in_RAX;\u000a  uint *puVar3;\u000a  char *pcVar4;\u000a  int in_ESI;\u000a  ulong local_28;\u000a  \u000a  local_28 = in_RAX;\u000a  iVar2 = get_win_size((winsize *)0x0);\u000a  if (iVar2 != 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    if (uVar1 != 0x16) {\u000a      pcVar4 = quotearg_n_style_colon((char *)0x0);\u000a      error(1,(ulong)uVar1,0x40aafd,pcVar4);\u000a    }\u000a    local_28 = 0;\u000a  }\u000a  if (-1 < (int)device_name) {\u000a    local_28 = local_28 & 0xffffffffffff0000 | (ulong)device_name & 0xffff;\u000a  }\u000a  if (-1 < in_ESI) {\u000a    local_28._0_4_ = CONCAT22((short)in_ESI,(undefined2)local_28);\u000a    local_28 = local_28 & 0xffffffff00000000 | (ulong)(uint)local_28;\u000a  }\u000a  iVar2 = ioctl(0,0x5414,&local_28);\u000a  if (iVar2 != 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    pcVar4 = quotearg_n_style_colon((char *)0x0);\u000a    error(1,(ulong)uVar1,0x40aafd,pcVar4);\u000a  }\u000a  return;\u000a}\u000a\u000a
p612
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15D,ESI\nMOV EBX,EDI\nMOV RSI,RSP\nXOR EDI,EDI\nCALL 0x00403ab0\nTEST EAX,EAX\nJZ 0x00403666\nCALL 0x00401530\nMOV EBP,dword ptr [RAX]\nCMP EBP,0x16\nJZ 0x0040365e\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,R14\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401810\nMOV qword ptr [RSP],0x0\nTEST EBX,EBX\nJS 0x0040366e\nMOV word ptr [RSP],BX\nTEST R15D,R15D\nJS 0x00403679\nMOV word ptr [RSP + 0x2],R15W\nMOV RDX,RSP\nXOR EDI,EDI\nMOV ESI,0x5414\nXOR EAX,EAX\nCALL 0x004016b0\nTEST EAX,EAX\nJZ 0x004036ba\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,R14\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401810\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p613
S'55\n41 57\n41 56\n53\n50\n49 89 d6\n41 89 f7\n89 fb\n48 89 e6\n31 ff\ne8 87 04 00 00\n85 c0\n74 39\ne8 fe de ff ff\n8b 28\n83 fd 16\n74 25\n31 ff\nbe 03 00 00 00\n4c 89 f2\ne8 98 20 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 ee\ne8 b2 e1 ff ff\n48 c7 04 24 00 00 00 00\n85 db\n78 04\n66 89 1c 24\n45 85 ff\n78 06\n66 44 89 7c 24 02\n48 89 e2\n31 ff\nbe 14 54 00 00\n31 c0\ne8 26 e0 ff ff\n85 c0\n74 2c\ne8 9d de ff ff\n8b 18\n31 ff\nbe 03 00 00 00\n4c 89 f2\ne8 3c 20 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 de\ne8 56 e1 ff ff\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p614
S'.text:0000000000403610\n.text:0000000000403611\n.text:0000000000403613\n.text:0000000000403615\n.text:0000000000403616\n.text:0000000000403617\n.text:000000000040361a\n.text:000000000040361d\n.text:000000000040361f\n.text:0000000000403622\n.text:0000000000403624\n.text:0000000000403629\n.text:000000000040362b\n.text:000000000040362d\n.text:0000000000403632\n.text:0000000000403634\n.text:0000000000403637\n.text:0000000000403639\n.text:000000000040363b\n.text:0000000000403640\n.text:0000000000403643\n.text:0000000000403648\n.text:000000000040364b\n.text:0000000000403650\n.text:0000000000403655\n.text:0000000000403657\n.text:0000000000403659\n.text:000000000040365e\n.text:0000000000403666\n.text:0000000000403668\n.text:000000000040366a\n.text:000000000040366e\n.text:0000000000403671\n.text:0000000000403673\n.text:0000000000403679\n.text:000000000040367c\n.text:000000000040367e\n.text:0000000000403683\n.text:0000000000403685\n.text:000000000040368a\n.text:000000000040368c\n.text:000000000040368e\n.text:0000000000403693\n.text:0000000000403695\n.text:0000000000403697\n.text:000000000040369c\n.text:000000000040369f\n.text:00000000004036a4\n.text:00000000004036a7\n.text:00000000004036ac\n.text:00000000004036b1\n.text:00000000004036b3\n.text:00000000004036b5\n.text:00000000004036ba\n.text:00000000004036be\n.text:00000000004036bf\n.text:00000000004036c1\n.text:00000000004036c3\n.text:00000000004036c4\n'
p615
tp616
sS'quote_n'
p617
(S'\n__stdcall quote_n(char * arg)\n'
p618
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p619
S'MOV RDX,-0x1\nJMP 0x004057f0\n'
p620
S'48 c7 c2 ff ff ff ff\neb d7\n'
p621
S'.text:0000000000405810\n.text:0000000000405817\n'
p622
tp623
sS'quotearg_alloc'
p624
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p625
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p626
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x004051a0\n'
p627
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p628
S'.text:0000000000405190\n.text:0000000000405193\n.text:0000000000405195\n.text:0000000000405198\n'
p629
tp630
sS'close_stdout_set_file_name'
p631
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p632
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p633
S'MOV qword ptr [0x0060e398],RDI\nRET\n'
p634
S'48 89 3d a1 a1 20 00\nc3\n'
p635
S'.text:00000000004041f0\n.text:00000000004041f7\n'
p636
tp637
sS'__libc_csu_init'
p638
(S'\n__stdcall __libc_csu_init()\n'
p639
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p640
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x60de08]\nPUSH RBP\nLEA RBP,[0x60de10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004014d0\nTEST RBP,RBP\nJZ 0x00407276\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00407260\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p641
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 d6 6b 20 00\n55\n48 8d 2d d6 6b 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 7f a2 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p642
S'.text:0000000000407220\n.text:0000000000407222\n.text:0000000000407224\n.text:0000000000407227\n.text:0000000000407229\n.text:000000000040722b\n.text:0000000000407232\n.text:0000000000407233\n.text:000000000040723a\n.text:000000000040723b\n.text:000000000040723e\n.text:0000000000407241\n.text:0000000000407244\n.text:0000000000407248\n.text:000000000040724c\n.text:0000000000407251\n.text:0000000000407254\n.text:0000000000407256\n.text:0000000000407258\n.text:0000000000407260\n.text:0000000000407263\n.text:0000000000407266\n.text:0000000000407269\n.text:000000000040726d\n.text:0000000000407271\n.text:0000000000407274\n.text:0000000000407276\n.text:000000000040727a\n.text:000000000040727b\n.text:000000000040727c\n.text:000000000040727e\n.text:0000000000407280\n.text:0000000000407282\n.text:0000000000407284\n'
p643
tp644
sS'c_isdigit'
p645
(S'\n__stdcall c_isdigit()\n'
p646
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p647
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p648
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p649
S'.text:0000000000406c70\n.text:0000000000406c73\n.text:0000000000406c76\n.text:0000000000406c79\n'
p650
tp651
sS'baud_to_value'
p652
(S'\n__stdcall baud_to_value()\n'
p653
V\u000aulong baud_to_value(void)\u000a\u000a{\u000a  long lVar1;\u000a  int in_EDI;\u000a  \u000a  lVar1 = -0x330;\u000a  do {\u000a    if (*(int *)((long)&speeds[0x22].speed + lVar1) == in_EDI) {\u000a      return *(ulong *)((long)&speeds[0x22].value + lVar1);\u000a    }\u000a    lVar1 = lVar1 + 0x18;\u000a  } while (lVar1 != 0);\u000a  return 0;\u000a}\u000a\u000a
p654
S'MOV RCX,-0x330\nXOR EAX,EAX\nNOP dword ptr [RAX]\nCMP dword ptr [0x40aaa8 + RCX],EDI\nJZ 0x00404100\nADD RCX,0x18\nJNZ 0x004040f0\nJMP 0x00404107\nMOV RAX,qword ptr [0x40aab0 + RCX]\nRET\n'
p655
S'48 c7 c1 d0 fc ff ff\n31 c0\n0f 1f 80 00 00 00 00\n39 b9 a8 aa 40 00\n74 08\n48 83 c1 18\n75 f2\neb 07\n48 8b 81 b0 aa 40 00\nc3\n'
p656
S'.text:00000000004040e0\n.text:00000000004040e7\n.text:00000000004040e9\n.text:00000000004040f0\n.text:00000000004040f6\n.text:00000000004040f8\n.text:00000000004040fc\n.text:00000000004040fe\n.text:0000000000404100\n.text:0000000000404107\n'
p657
tp658
sS'usage'
p659
(S'\n__stdcall usage()\n'
p660
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  undefined *puVar3;\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,\u000a                      "Usage: %s [-F DEVICE | --file=DEVICE] [SETTING]...\u005cn  or:  %s [-F DEVICE | --file=DEVICE] [-a|--all]\u005cn  or:  %s [-F DEVICE | --file=DEVICE] [-g|--save]\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,program_name,program_name,program_name);\u000a    __s = (char *)dcgettext(0,"Print or change terminal characteristics.\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_mandatory_arg_note();\u000a    __s = (char *)dcgettext(0,\u000a                            "  -a, --all          print all current settings in human-readable form\u005cn  -g, --save         print all current settings in a stty-readable form\u005cn  -F, --file=DEVICE  open and use the specified DEVICE instead of stdin\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnOptional - before SETTING indicates negation.  An * marks non-POSIX\u005cnsettings.  The underlying system defines which settings are available.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"\u005cnSpecial characters:\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * discard CHAR  CHAR will toggle discarding of output\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   eof CHAR      CHAR will send an end of file (terminate the input)\u005cn   eol CHAR      CHAR will end the line\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * eol2 CHAR     alternate CHAR for ending the line\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   erase CHAR    CHAR will erase the last character typed\u005cn   intr CHAR     CHAR will send an interrupt signal\u005cn   kill CHAR     CHAR will erase the current line\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * lnext CHAR    CHAR will enter the next character quoted\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"   quit CHAR     CHAR will send a quit signal\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * rprnt CHAR    CHAR will redraw the current line\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   start CHAR    CHAR will restart the output after stopping it\u005cn   stop CHAR     CHAR will stop the output\u005cn   susp CHAR     CHAR will send a terminal stop signal\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * swtch CHAR    CHAR will switch to a different shell layer\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * werase CHAR   CHAR will erase the last word typed\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnSpecial settings:\u005cn   N             set the input and output speeds to N bauds\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * cols N        tell the kernel that the terminal has N columns\u005cn * columns N     same as cols N\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,\u000a                      " * [-]drain      wait for transmission before applying settings (%s by default)\u005cn"\u000a                      ,5);\u000a    puVar3 = &DAT_0040958a;\u000a    if (tcsetattr_options == 1) {\u000a      puVar3 = (undefined *)0x4094fa;\u000a    }\u000a    uVar2 = dcgettext(0,puVar3,5);\u000a    __printf_chk(1,uVar1,uVar2,uVar2);\u000a    __s = (char *)dcgettext(0,"   ispeed N      set the input speed to N\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * line N        use line discipline N\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   min N         with -icanon, set N characters minimum for a completed read\u005cn   ospeed N      set the output speed to N\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * rows N        tell the kernel that the terminal has N rows\u005cn * size          print the number of rows and columns according to the kernel\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   speed         print the terminal speed\u005cn   time N        with -icanon, set read timeout of N tenths of a second\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnControl settings:\u005cn   [-]clocal     disable modem control signals\u005cn   [-]cread      allow input to be received\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]crtscts    enable RTS/CTS handshaking\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"   csN           set character size to N bits, N in [5..8]\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   [-]cstopb     use two stop bits per character (one with \u005c'-\u005c')\u005cn   [-]hup        send a hangup signal when the last process closes the tty\u005cn   [-]hupcl      same as [-]hup\u005cn   [-]parenb     generate parity bit in output and expect parity bit in input\u005cn   [-]parodd     set odd parity (or even parity with \u005c'-\u005c')\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]cmspar     use \u005c"stick\u005c" (mark/space) parity\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnInput settings:\u005cn   [-]brkint     breaks cause an interrupt signal\u005cn   [-]icrnl      translate carriage return to newline\u005cn   [-]ignbrk     ignore break characters\u005cn   [-]igncr      ignore carriage return\u005cn   [-]ignpar     ignore characters with parity errors\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]imaxbel    beep and do not flush a full input buffer on a character\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   [-]inlcr      translate newline to carriage return\u005cn   [-]inpck      enable input parity checking\u005cn   [-]istrip     clear high (8th) bit of input characters\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]iutf8      assume input characters are UTF-8 encoded\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]iuclc      translate uppercase characters to lowercase\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]ixany      let any character restart output, not only start character\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   [-]ixoff      enable sending of start/stop characters\u005cn   [-]ixon       enable XON/XOFF flow control\u005cn   [-]parmrk     mark parity errors (with a 255-0-character sequence)\u005cn   [-]tandem     same as [-]ixoff\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"\u005cnOutput settings:\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * bsN           backspace delay style, N in [0..1]\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * crN           carriage return delay style, N in [0..3]\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * ffN           form feed delay style, N in [0..1]\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * nlN           newline delay style, N in [0..1]\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]ocrnl      translate carriage return to newline\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]ofdel      use delete characters for fill instead of NUL characters\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]ofill      use fill (padding) characters instead of timing for delays\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]olcuc      translate lowercase characters to uppercase\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]onlcr      translate newline to carriage return-newline\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]onlret     newline performs a carriage return\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]onocr      do not print carriage returns in the first column\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"   [-]opost      postprocess output\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * tabN          horizontal tab delay style, N in [0..3]\u005cn * tabs          same as tab0\u005cn * -tabs         same as tab3\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * vtN           vertical tab delay style, N in [0..1]\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnLocal settings:\u005cn   [-]crterase   echo erase characters as backspace-space-backspace\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * crtkill       kill all line by obeying the echoprt and echoe settings\u005cn * -crtkill      kill all line by obeying the echoctl and echok settings\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]ctlecho    echo control characters in hat notation (\u005c'^c\u005c')\u005cn",\u000a                            5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"   [-]echo       echo input characters\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]echoctl    same as [-]ctlecho\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   [-]echoe      same as [-]crterase\u005cn   [-]echok      echo a newline after a kill character\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]echoke     same as [-]crtkill\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"   [-]echonl     echo newline even if not echoing other characters\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]echoprt    echo erased characters backward, between \u005c'\u005c\u005c\u005c' and \u005c'/\u005c'\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]extproc    enable \u005c"LINEMODE\u005c"; useful with high latency links\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]flusho     discard output\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,\u000a                      "   [-]icanon     enable special characters: %s\u005cn   [-]iexten     enable non-POSIX special characters\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,"erase, kill, werase, rprnt",uVar1);\u000a    __s = (char *)dcgettext(0,\u000a                            "   [-]isig       enable interrupt, quit, and suspend special characters\u005cn   [-]noflsh     disable flushing after interrupt and quit special characters\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]prterase   same as [-]echoprt\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]tostop     stop background jobs that try to write to the terminal\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            " * [-]xcase      with icanon, escape with \u005c'\u005c\u005c\u005c' for uppercase characters\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"\u005cnCombination settings:\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]LCASE      same as [-]lcase\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"   cbreak        same as -icanon\u005cn   -cbreak       same as icanon\u005cn",\u000a                            5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   cooked        same as brkint ignpar istrip icrnl ixon opost isig\u005cn                 icanon, eof and eol characters to their default values\u005cn   -cooked       same as raw\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,"   crt           same as %s\u005cn",5);\u000a    __printf_chk(1,uVar1,"echoe echoctl echoke",uVar1);\u000a    uVar1 = dcgettext(0,"   dec           same as %s intr ^c erase 0177\u005cn                 kill ^u\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,"echoe echoctl echoke -ixany",uVar1);\u000a    __s = (char *)dcgettext(0," * [-]decctlq    same as [-]ixany\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   ek            erase and kill characters to their default values\u005cn   evenp         same as parenb -parodd cs7\u005cn   -evenp        same as -parenb cs8\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0," * [-]lcase      same as xcase iuclc olcuc\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   litout        same as -parenb -istrip -opost cs8\u005cn   -litout       same as parenb istrip opost cs7\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,"   nl            same as %s\u005cn   -nl           same as %s\u005cn",5);\u000a    __printf_chk(1,uVar1,"-icrnl -onlcr","icrnl -inlcr -igncr onlcr -ocrnl -onlret");\u000a    __s = (char *)dcgettext(0,0x40b1c9,5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,\u000a                            "   oddp          same as parenb parodd cs7\u005cn   -oddp         same as -parenb cs8\u005cn   [-]parity     same as [-]evenp\u005cn   pass8         same as -parenb -istrip cs8\u005cn   -pass8        same as parenb istrip cs7\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    uVar1 = dcgettext(0,\u000a                      "   raw           same as -ignbrk -brkint -ignpar -parmrk -inpck -istrip\u005cn                 -inlcr -igncr -icrnl -ixon -ixoff -icanon -opost\u005cn                 -isig%s min 1 time 0\u005cn   -raw          same as cooked\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1," -iuclc -ixany -imaxbel -xcase",uVar1);\u000a    uVar1 = dcgettext(0,\u000a                      "   sane          same as cread -ignbrk brkint -inlcr -igncr icrnl\u005cn                 icanon iexten echo echoe echok -echonl -noflsh\u005cn                 %s\u005cn                 %s\u005cn                 %s,\u005cn                 all special characters to their default values\u005cn"\u000a                      ,5);\u000a    __printf_chk(1,uVar1,"-ixoff -iutf8 -iuclc -ixany imaxbel -xcase -olcuc -ocrnl",\u000a                 "opost -ofill onlcr -onocr -onlret nl0 cr0 tab0 bs0 vt0 ff0",\u000a                 "isig -tostop -ofdel -echoprt echoctl echoke -extproc -flusho");\u000a    __s = (char *)dcgettext(0,\u000a                            "\u005cnHandle the tty line connected to standard input.  Without arguments,\u005cnprints baud rate, line discipline, and deviations from stty sane.  In\u005cnsettings, CHAR is taken literally, or coded as in ^c, 0x37, 0177 or\u005cn127; special values ^- or undef used to disable special characters.\u005cn"\u000a                            ,5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p661
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,EDI\nTEST EBP,EBP\nJNZ 0x00402512\nXOR EDI,EDI\nMOV ESI,0x4072e4\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV RDX,qword ptr [0x0060e3a8]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nMOV RCX,RDX\nMOV R8,RDX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x40737b\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nCALL 0x00402560\nXOR EDI,EDI\nMOV ESI,0x4073a6\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40747e\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4074ab\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4074e1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40756e\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407584\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4075bc\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40762a\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40765f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407700\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40773c\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40776b\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40779f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407842\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407880\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4078b6\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407906\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407968\nMOV EDX,0x5\nCALL 0x004015f0\nCMP dword ptr [0x0060e228],0x1\nMOV RBX,RAX\nMOV EAX,0x4094fa\nMOV ESI,0x40958a\nCMOVZ RSI,RAX\nXOR EDI,EDI\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RBX\nMOV RDX,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x4079b9\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4079e4\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407a0c\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407a85\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407b12\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407b85\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407bf4\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407c21\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407c5d\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407d91\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407dc3\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407ec4\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407f0f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407fae\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x407fea\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408028\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408075\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408145\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408158\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40818d\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4081c8\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4081fd\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408230\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408267\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4082b2\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4082ff\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40833d\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40837c\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4083b1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4083f5\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40841a\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408490\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4084c8\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40851e\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4085b1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4085f2\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40861a\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40863f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40869c\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4086c1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408705\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40874c\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408790\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4087b1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408816\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x408831\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4088c8\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4088ed\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408936\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x40897e\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408996\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4089b9\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x4089fb\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408aa5\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408ac2\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x408ad7\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408b20\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x408b3c\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408b5f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408bf4\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408c20\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408c86\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x408cbf\nMOV ECX,0x408ccd\nXOR EAX,EAX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x40b1c9\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408cf6\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nXOR EDI,EDI\nMOV ESI,0x408dc1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408e92\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x408eb1\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x408fb1\nMOV ECX,0x408fea\nMOV R8D,0x409025\nXOR EAX,EAX\nCALL 0x00401800\nXOR EDI,EDI\nMOV ESI,0x409062\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nCALL 0x004016e0\nCALL 0x00402590\nMOV EDI,EBP\nCALL 0x004018a0\nCALL 0x00402520\nMOV EDI,EBP\nCALL 0x004018a0\n'
p662
S'55\n53\n50\n89 fd\n85 ed\n0f 85 05 0b 00 00\n31 ff\nbe e4 72 40 00\nba 05 00 00 00\ne8 d2 fb ff ff\n48 89 c1\n48 8b 15 80 c9 20 00\nbf 01 00 00 00\n31 c0\n48 89 ce\n48 89 d1\n49 89 d0\ne8 c3 fd ff ff\n31 ff\nbe 7b 73 40 00\nba 05 00 00 00\ne8 a2 fb ff ff\n48 8b 35 53 c8 20 00\n48 89 c7\ne8 83 fc ff ff\ne8 fe 0a 00 00\n31 ff\nbe a6 73 40 00\nba 05 00 00 00\ne8 7d fb ff ff\n48 8b 35 2e c8 20 00\n48 89 c7\ne8 5e fc ff ff\n31 ff\nbe 7e 74 40 00\nba 05 00 00 00\ne8 5d fb ff ff\n48 8b 35 0e c8 20 00\n48 89 c7\ne8 3e fc ff ff\n31 ff\nbe ab 74 40 00\nba 05 00 00 00\ne8 3d fb ff ff\n48 8b 35 ee c7 20 00\n48 89 c7\ne8 1e fc ff ff\n31 ff\nbe e1 74 40 00\nba 05 00 00 00\ne8 1d fb ff ff\n48 8b 35 ce c7 20 00\n48 89 c7\ne8 fe fb ff ff\n31 ff\nbe 6e 75 40 00\nba 05 00 00 00\ne8 fd fa ff ff\n48 8b 35 ae c7 20 00\n48 89 c7\ne8 de fb ff ff\n31 ff\nbe 84 75 40 00\nba 05 00 00 00\ne8 dd fa ff ff\n48 8b 35 8e c7 20 00\n48 89 c7\ne8 be fb ff ff\n31 ff\nbe bc 75 40 00\nba 05 00 00 00\ne8 bd fa ff ff\n48 8b 35 6e c7 20 00\n48 89 c7\ne8 9e fb ff ff\n31 ff\nbe 2a 76 40 00\nba 05 00 00 00\ne8 9d fa ff ff\n48 8b 35 4e c7 20 00\n48 89 c7\ne8 7e fb ff ff\n31 ff\nbe 5f 76 40 00\nba 05 00 00 00\ne8 7d fa ff ff\n48 8b 35 2e c7 20 00\n48 89 c7\ne8 5e fb ff ff\n31 ff\nbe 00 77 40 00\nba 05 00 00 00\ne8 5d fa ff ff\n48 8b 35 0e c7 20 00\n48 89 c7\ne8 3e fb ff ff\n31 ff\nbe 3c 77 40 00\nba 05 00 00 00\ne8 3d fa ff ff\n48 8b 35 ee c6 20 00\n48 89 c7\ne8 1e fb ff ff\n31 ff\nbe 6b 77 40 00\nba 05 00 00 00\ne8 1d fa ff ff\n48 8b 35 ce c6 20 00\n48 89 c7\ne8 fe fa ff ff\n31 ff\nbe 9f 77 40 00\nba 05 00 00 00\ne8 fd f9 ff ff\n48 8b 35 ae c6 20 00\n48 89 c7\ne8 de fa ff ff\n31 ff\nbe 42 78 40 00\nba 05 00 00 00\ne8 dd f9 ff ff\n48 8b 35 8e c6 20 00\n48 89 c7\ne8 be fa ff ff\n31 ff\nbe 80 78 40 00\nba 05 00 00 00\ne8 bd f9 ff ff\n48 8b 35 6e c6 20 00\n48 89 c7\ne8 9e fa ff ff\n31 ff\nbe b6 78 40 00\nba 05 00 00 00\ne8 9d f9 ff ff\n48 8b 35 4e c6 20 00\n48 89 c7\ne8 7e fa ff ff\n31 ff\nbe 06 79 40 00\nba 05 00 00 00\ne8 7d f9 ff ff\n48 8b 35 2e c6 20 00\n48 89 c7\ne8 5e fa ff ff\n31 ff\nbe 68 79 40 00\nba 05 00 00 00\ne8 5d f9 ff ff\n83 3d 8e c5 20 00 01\n48 89 c3\nb8 fa 94 40 00\nbe 8a 95 40 00\n48 0f 44 f0\n31 ff\nba 05 00 00 00\ne8 39 f9 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 de\n48 89 ca\ne8 34 fb ff ff\n31 ff\nbe b9 79 40 00\nba 05 00 00 00\ne8 13 f9 ff ff\n48 8b 35 c4 c5 20 00\n48 89 c7\ne8 f4 f9 ff ff\n31 ff\nbe e4 79 40 00\nba 05 00 00 00\ne8 f3 f8 ff ff\n48 8b 35 a4 c5 20 00\n48 89 c7\ne8 d4 f9 ff ff\n31 ff\nbe 0c 7a 40 00\nba 05 00 00 00\ne8 d3 f8 ff ff\n48 8b 35 84 c5 20 00\n48 89 c7\ne8 b4 f9 ff ff\n31 ff\nbe 85 7a 40 00\nba 05 00 00 00\ne8 b3 f8 ff ff\n48 8b 35 64 c5 20 00\n48 89 c7\ne8 94 f9 ff ff\n31 ff\nbe 12 7b 40 00\nba 05 00 00 00\ne8 93 f8 ff ff\n48 8b 35 44 c5 20 00\n48 89 c7\ne8 74 f9 ff ff\n31 ff\nbe 85 7b 40 00\nba 05 00 00 00\ne8 73 f8 ff ff\n48 8b 35 24 c5 20 00\n48 89 c7\ne8 54 f9 ff ff\n31 ff\nbe f4 7b 40 00\nba 05 00 00 00\ne8 53 f8 ff ff\n48 8b 35 04 c5 20 00\n48 89 c7\ne8 34 f9 ff ff\n31 ff\nbe 21 7c 40 00\nba 05 00 00 00\ne8 33 f8 ff ff\n48 8b 35 e4 c4 20 00\n48 89 c7\ne8 14 f9 ff ff\n31 ff\nbe 5d 7c 40 00\nba 05 00 00 00\ne8 13 f8 ff ff\n48 8b 35 c4 c4 20 00\n48 89 c7\ne8 f4 f8 ff ff\n31 ff\nbe 91 7d 40 00\nba 05 00 00 00\ne8 f3 f7 ff ff\n48 8b 35 a4 c4 20 00\n48 89 c7\ne8 d4 f8 ff ff\n31 ff\nbe c3 7d 40 00\nba 05 00 00 00\ne8 d3 f7 ff ff\n48 8b 35 84 c4 20 00\n48 89 c7\ne8 b4 f8 ff ff\n31 ff\nbe c4 7e 40 00\nba 05 00 00 00\ne8 b3 f7 ff ff\n48 8b 35 64 c4 20 00\n48 89 c7\ne8 94 f8 ff ff\n31 ff\nbe 0f 7f 40 00\nba 05 00 00 00\ne8 93 f7 ff ff\n48 8b 35 44 c4 20 00\n48 89 c7\ne8 74 f8 ff ff\n31 ff\nbe ae 7f 40 00\nba 05 00 00 00\ne8 73 f7 ff ff\n48 8b 35 24 c4 20 00\n48 89 c7\ne8 54 f8 ff ff\n31 ff\nbe ea 7f 40 00\nba 05 00 00 00\ne8 53 f7 ff ff\n48 8b 35 04 c4 20 00\n48 89 c7\ne8 34 f8 ff ff\n31 ff\nbe 28 80 40 00\nba 05 00 00 00\ne8 33 f7 ff ff\n48 8b 35 e4 c3 20 00\n48 89 c7\ne8 14 f8 ff ff\n31 ff\nbe 75 80 40 00\nba 05 00 00 00\ne8 13 f7 ff ff\n48 8b 35 c4 c3 20 00\n48 89 c7\ne8 f4 f7 ff ff\n31 ff\nbe 45 81 40 00\nba 05 00 00 00\ne8 f3 f6 ff ff\n48 8b 35 a4 c3 20 00\n48 89 c7\ne8 d4 f7 ff ff\n31 ff\nbe 58 81 40 00\nba 05 00 00 00\ne8 d3 f6 ff ff\n48 8b 35 84 c3 20 00\n48 89 c7\ne8 b4 f7 ff ff\n31 ff\nbe 8d 81 40 00\nba 05 00 00 00\ne8 b3 f6 ff ff\n48 8b 35 64 c3 20 00\n48 89 c7\ne8 94 f7 ff ff\n31 ff\nbe c8 81 40 00\nba 05 00 00 00\ne8 93 f6 ff ff\n48 8b 35 44 c3 20 00\n48 89 c7\ne8 74 f7 ff ff\n31 ff\nbe fd 81 40 00\nba 05 00 00 00\ne8 73 f6 ff ff\n48 8b 35 24 c3 20 00\n48 89 c7\ne8 54 f7 ff ff\n31 ff\nbe 30 82 40 00\nba 05 00 00 00\ne8 53 f6 ff ff\n48 8b 35 04 c3 20 00\n48 89 c7\ne8 34 f7 ff ff\n31 ff\nbe 67 82 40 00\nba 05 00 00 00\ne8 33 f6 ff ff\n48 8b 35 e4 c2 20 00\n48 89 c7\ne8 14 f7 ff ff\n31 ff\nbe b2 82 40 00\nba 05 00 00 00\ne8 13 f6 ff ff\n48 8b 35 c4 c2 20 00\n48 89 c7\ne8 f4 f6 ff ff\n31 ff\nbe ff 82 40 00\nba 05 00 00 00\ne8 f3 f5 ff ff\n48 8b 35 a4 c2 20 00\n48 89 c7\ne8 d4 f6 ff ff\n31 ff\nbe 3d 83 40 00\nba 05 00 00 00\ne8 d3 f5 ff ff\n48 8b 35 84 c2 20 00\n48 89 c7\ne8 b4 f6 ff ff\n31 ff\nbe 7c 83 40 00\nba 05 00 00 00\ne8 b3 f5 ff ff\n48 8b 35 64 c2 20 00\n48 89 c7\ne8 94 f6 ff ff\n31 ff\nbe b1 83 40 00\nba 05 00 00 00\ne8 93 f5 ff ff\n48 8b 35 44 c2 20 00\n48 89 c7\ne8 74 f6 ff ff\n31 ff\nbe f5 83 40 00\nba 05 00 00 00\ne8 73 f5 ff ff\n48 8b 35 24 c2 20 00\n48 89 c7\ne8 54 f6 ff ff\n31 ff\nbe 1a 84 40 00\nba 05 00 00 00\ne8 53 f5 ff ff\n48 8b 35 04 c2 20 00\n48 89 c7\ne8 34 f6 ff ff\n31 ff\nbe 90 84 40 00\nba 05 00 00 00\ne8 33 f5 ff ff\n48 8b 35 e4 c1 20 00\n48 89 c7\ne8 14 f6 ff ff\n31 ff\nbe c8 84 40 00\nba 05 00 00 00\ne8 13 f5 ff ff\n48 8b 35 c4 c1 20 00\n48 89 c7\ne8 f4 f5 ff ff\n31 ff\nbe 1e 85 40 00\nba 05 00 00 00\ne8 f3 f4 ff ff\n48 8b 35 a4 c1 20 00\n48 89 c7\ne8 d4 f5 ff ff\n31 ff\nbe b1 85 40 00\nba 05 00 00 00\ne8 d3 f4 ff ff\n48 8b 35 84 c1 20 00\n48 89 c7\ne8 b4 f5 ff ff\n31 ff\nbe f2 85 40 00\nba 05 00 00 00\ne8 b3 f4 ff ff\n48 8b 35 64 c1 20 00\n48 89 c7\ne8 94 f5 ff ff\n31 ff\nbe 1a 86 40 00\nba 05 00 00 00\ne8 93 f4 ff ff\n48 8b 35 44 c1 20 00\n48 89 c7\ne8 74 f5 ff ff\n31 ff\nbe 3f 86 40 00\nba 05 00 00 00\ne8 73 f4 ff ff\n48 8b 35 24 c1 20 00\n48 89 c7\ne8 54 f5 ff ff\n31 ff\nbe 9c 86 40 00\nba 05 00 00 00\ne8 53 f4 ff ff\n48 8b 35 04 c1 20 00\n48 89 c7\ne8 34 f5 ff ff\n31 ff\nbe c1 86 40 00\nba 05 00 00 00\ne8 33 f4 ff ff\n48 8b 35 e4 c0 20 00\n48 89 c7\ne8 14 f5 ff ff\n31 ff\nbe 05 87 40 00\nba 05 00 00 00\ne8 13 f4 ff ff\n48 8b 35 c4 c0 20 00\n48 89 c7\ne8 f4 f4 ff ff\n31 ff\nbe 4c 87 40 00\nba 05 00 00 00\ne8 f3 f3 ff ff\n48 8b 35 a4 c0 20 00\n48 89 c7\ne8 d4 f4 ff ff\n31 ff\nbe 90 87 40 00\nba 05 00 00 00\ne8 d3 f3 ff ff\n48 8b 35 84 c0 20 00\n48 89 c7\ne8 b4 f4 ff ff\n31 ff\nbe b1 87 40 00\nba 05 00 00 00\ne8 b3 f3 ff ff\n48 89 c1\nbf 01 00 00 00\nba 16 88 40 00\n31 c0\n48 89 ce\ne8 ac f5 ff ff\n31 ff\nbe 31 88 40 00\nba 05 00 00 00\ne8 8b f3 ff ff\n48 8b 35 3c c0 20 00\n48 89 c7\ne8 6c f4 ff ff\n31 ff\nbe c8 88 40 00\nba 05 00 00 00\ne8 6b f3 ff ff\n48 8b 35 1c c0 20 00\n48 89 c7\ne8 4c f4 ff ff\n31 ff\nbe ed 88 40 00\nba 05 00 00 00\ne8 4b f3 ff ff\n48 8b 35 fc bf 20 00\n48 89 c7\ne8 2c f4 ff ff\n31 ff\nbe 36 89 40 00\nba 05 00 00 00\ne8 2b f3 ff ff\n48 8b 35 dc bf 20 00\n48 89 c7\ne8 0c f4 ff ff\n31 ff\nbe 7e 89 40 00\nba 05 00 00 00\ne8 0b f3 ff ff\n48 8b 35 bc bf 20 00\n48 89 c7\ne8 ec f3 ff ff\n31 ff\nbe 96 89 40 00\nba 05 00 00 00\ne8 eb f2 ff ff\n48 8b 35 9c bf 20 00\n48 89 c7\ne8 cc f3 ff ff\n31 ff\nbe b9 89 40 00\nba 05 00 00 00\ne8 cb f2 ff ff\n48 8b 35 7c bf 20 00\n48 89 c7\ne8 ac f3 ff ff\n31 ff\nbe fb 89 40 00\nba 05 00 00 00\ne8 ab f2 ff ff\n48 8b 35 5c bf 20 00\n48 89 c7\ne8 8c f3 ff ff\n31 ff\nbe a5 8a 40 00\nba 05 00 00 00\ne8 8b f2 ff ff\n48 89 c1\nbf 01 00 00 00\nba c2 8a 40 00\n31 c0\n48 89 ce\ne8 84 f4 ff ff\n31 ff\nbe d7 8a 40 00\nba 05 00 00 00\ne8 63 f2 ff ff\n48 89 c1\nbf 01 00 00 00\nba 20 8b 40 00\n31 c0\n48 89 ce\ne8 5c f4 ff ff\n31 ff\nbe 3c 8b 40 00\nba 05 00 00 00\ne8 3b f2 ff ff\n48 8b 35 ec be 20 00\n48 89 c7\ne8 1c f3 ff ff\n31 ff\nbe 5f 8b 40 00\nba 05 00 00 00\ne8 1b f2 ff ff\n48 8b 35 cc be 20 00\n48 89 c7\ne8 fc f2 ff ff\n31 ff\nbe f4 8b 40 00\nba 05 00 00 00\ne8 fb f1 ff ff\n48 8b 35 ac be 20 00\n48 89 c7\ne8 dc f2 ff ff\n31 ff\nbe 20 8c 40 00\nba 05 00 00 00\ne8 db f1 ff ff\n48 8b 35 8c be 20 00\n48 89 c7\ne8 bc f2 ff ff\n31 ff\nbe 86 8c 40 00\nba 05 00 00 00\ne8 bb f1 ff ff\n48 89 c6\nbf 01 00 00 00\nba bf 8c 40 00\nb9 cd 8c 40 00\n31 c0\ne8 b2 f3 ff ff\n31 ff\nbe c9 b1 40 00\nba 05 00 00 00\ne8 91 f1 ff ff\n48 8b 35 42 be 20 00\n48 89 c7\ne8 72 f2 ff ff\n31 ff\nbe f6 8c 40 00\nba 05 00 00 00\ne8 71 f1 ff ff\n48 8b 35 22 be 20 00\n48 89 c7\ne8 52 f2 ff ff\n31 ff\nbe c1 8d 40 00\nba 05 00 00 00\ne8 51 f1 ff ff\n48 89 c1\nbf 01 00 00 00\nba 92 8e 40 00\n31 c0\n48 89 ce\ne8 4a f3 ff ff\n31 ff\nbe b1 8e 40 00\nba 05 00 00 00\ne8 29 f1 ff ff\n48 89 c6\nbf 01 00 00 00\nba b1 8f 40 00\nb9 ea 8f 40 00\n41 b8 25 90 40 00\n31 c0\ne8 1a f3 ff ff\n31 ff\nbe 62 90 40 00\nba 05 00 00 00\ne8 f9 f0 ff ff\n48 8b 35 aa bd 20 00\n48 89 c7\ne8 da f1 ff ff\ne8 85 00 00 00\n89 ef\ne8 8e f3 ff ff\ne8 09 00 00 00\n89 ef\ne8 82 f3 ff ff\n'
p663
S'.text:0000000000401a00\n.text:0000000000401a01\n.text:0000000000401a02\n.text:0000000000401a03\n.text:0000000000401a05\n.text:0000000000401a07\n.text:0000000000401a0d\n.text:0000000000401a0f\n.text:0000000000401a14\n.text:0000000000401a19\n.text:0000000000401a1e\n.text:0000000000401a21\n.text:0000000000401a28\n.text:0000000000401a2d\n.text:0000000000401a2f\n.text:0000000000401a32\n.text:0000000000401a35\n.text:0000000000401a38\n.text:0000000000401a3d\n.text:0000000000401a3f\n.text:0000000000401a44\n.text:0000000000401a49\n.text:0000000000401a4e\n.text:0000000000401a55\n.text:0000000000401a58\n.text:0000000000401a5d\n.text:0000000000401a62\n.text:0000000000401a64\n.text:0000000000401a69\n.text:0000000000401a6e\n.text:0000000000401a73\n.text:0000000000401a7a\n.text:0000000000401a7d\n.text:0000000000401a82\n.text:0000000000401a84\n.text:0000000000401a89\n.text:0000000000401a8e\n.text:0000000000401a93\n.text:0000000000401a9a\n.text:0000000000401a9d\n.text:0000000000401aa2\n.text:0000000000401aa4\n.text:0000000000401aa9\n.text:0000000000401aae\n.text:0000000000401ab3\n.text:0000000000401aba\n.text:0000000000401abd\n.text:0000000000401ac2\n.text:0000000000401ac4\n.text:0000000000401ac9\n.text:0000000000401ace\n.text:0000000000401ad3\n.text:0000000000401ada\n.text:0000000000401add\n.text:0000000000401ae2\n.text:0000000000401ae4\n.text:0000000000401ae9\n.text:0000000000401aee\n.text:0000000000401af3\n.text:0000000000401afa\n.text:0000000000401afd\n.text:0000000000401b02\n.text:0000000000401b04\n.text:0000000000401b09\n.text:0000000000401b0e\n.text:0000000000401b13\n.text:0000000000401b1a\n.text:0000000000401b1d\n.text:0000000000401b22\n.text:0000000000401b24\n.text:0000000000401b29\n.text:0000000000401b2e\n.text:0000000000401b33\n.text:0000000000401b3a\n.text:0000000000401b3d\n.text:0000000000401b42\n.text:0000000000401b44\n.text:0000000000401b49\n.text:0000000000401b4e\n.text:0000000000401b53\n.text:0000000000401b5a\n.text:0000000000401b5d\n.text:0000000000401b62\n.text:0000000000401b64\n.text:0000000000401b69\n.text:0000000000401b6e\n.text:0000000000401b73\n.text:0000000000401b7a\n.text:0000000000401b7d\n.text:0000000000401b82\n.text:0000000000401b84\n.text:0000000000401b89\n.text:0000000000401b8e\n.text:0000000000401b93\n.text:0000000000401b9a\n.text:0000000000401b9d\n.text:0000000000401ba2\n.text:0000000000401ba4\n.text:0000000000401ba9\n.text:0000000000401bae\n.text:0000000000401bb3\n.text:0000000000401bba\n.text:0000000000401bbd\n.text:0000000000401bc2\n.text:0000000000401bc4\n.text:0000000000401bc9\n.text:0000000000401bce\n.text:0000000000401bd3\n.text:0000000000401bda\n.text:0000000000401bdd\n.text:0000000000401be2\n.text:0000000000401be4\n.text:0000000000401be9\n.text:0000000000401bee\n.text:0000000000401bf3\n.text:0000000000401bfa\n.text:0000000000401bfd\n.text:0000000000401c02\n.text:0000000000401c04\n.text:0000000000401c09\n.text:0000000000401c0e\n.text:0000000000401c13\n.text:0000000000401c1a\n.text:0000000000401c1d\n.text:0000000000401c22\n.text:0000000000401c24\n.text:0000000000401c29\n.text:0000000000401c2e\n.text:0000000000401c33\n.text:0000000000401c3a\n.text:0000000000401c3d\n.text:0000000000401c42\n.text:0000000000401c44\n.text:0000000000401c49\n.text:0000000000401c4e\n.text:0000000000401c53\n.text:0000000000401c5a\n.text:0000000000401c5d\n.text:0000000000401c62\n.text:0000000000401c64\n.text:0000000000401c69\n.text:0000000000401c6e\n.text:0000000000401c73\n.text:0000000000401c7a\n.text:0000000000401c7d\n.text:0000000000401c82\n.text:0000000000401c84\n.text:0000000000401c89\n.text:0000000000401c8e\n.text:0000000000401c93\n.text:0000000000401c9a\n.text:0000000000401c9d\n.text:0000000000401ca2\n.text:0000000000401ca7\n.text:0000000000401cab\n.text:0000000000401cad\n.text:0000000000401cb2\n.text:0000000000401cb7\n.text:0000000000401cba\n.text:0000000000401cbf\n.text:0000000000401cc1\n.text:0000000000401cc4\n.text:0000000000401cc7\n.text:0000000000401ccc\n.text:0000000000401cce\n.text:0000000000401cd3\n.text:0000000000401cd8\n.text:0000000000401cdd\n.text:0000000000401ce4\n.text:0000000000401ce7\n.text:0000000000401cec\n.text:0000000000401cee\n.text:0000000000401cf3\n.text:0000000000401cf8\n.text:0000000000401cfd\n.text:0000000000401d04\n.text:0000000000401d07\n.text:0000000000401d0c\n.text:0000000000401d0e\n.text:0000000000401d13\n.text:0000000000401d18\n.text:0000000000401d1d\n.text:0000000000401d24\n.text:0000000000401d27\n.text:0000000000401d2c\n.text:0000000000401d2e\n.text:0000000000401d33\n.text:0000000000401d38\n.text:0000000000401d3d\n.text:0000000000401d44\n.text:0000000000401d47\n.text:0000000000401d4c\n.text:0000000000401d4e\n.text:0000000000401d53\n.text:0000000000401d58\n.text:0000000000401d5d\n.text:0000000000401d64\n.text:0000000000401d67\n.text:0000000000401d6c\n.text:0000000000401d6e\n.text:0000000000401d73\n.text:0000000000401d78\n.text:0000000000401d7d\n.text:0000000000401d84\n.text:0000000000401d87\n.text:0000000000401d8c\n.text:0000000000401d8e\n.text:0000000000401d93\n.text:0000000000401d98\n.text:0000000000401d9d\n.text:0000000000401da4\n.text:0000000000401da7\n.text:0000000000401dac\n.text:0000000000401dae\n.text:0000000000401db3\n.text:0000000000401db8\n.text:0000000000401dbd\n.text:0000000000401dc4\n.text:0000000000401dc7\n.text:0000000000401dcc\n.text:0000000000401dce\n.text:0000000000401dd3\n.text:0000000000401dd8\n.text:0000000000401ddd\n.text:0000000000401de4\n.text:0000000000401de7\n.text:0000000000401dec\n.text:0000000000401dee\n.text:0000000000401df3\n.text:0000000000401df8\n.text:0000000000401dfd\n.text:0000000000401e04\n.text:0000000000401e07\n.text:0000000000401e0c\n.text:0000000000401e0e\n.text:0000000000401e13\n.text:0000000000401e18\n.text:0000000000401e1d\n.text:0000000000401e24\n.text:0000000000401e27\n.text:0000000000401e2c\n.text:0000000000401e2e\n.text:0000000000401e33\n.text:0000000000401e38\n.text:0000000000401e3d\n.text:0000000000401e44\n.text:0000000000401e47\n.text:0000000000401e4c\n.text:0000000000401e4e\n.text:0000000000401e53\n.text:0000000000401e58\n.text:0000000000401e5d\n.text:0000000000401e64\n.text:0000000000401e67\n.text:0000000000401e6c\n.text:0000000000401e6e\n.text:0000000000401e73\n.text:0000000000401e78\n.text:0000000000401e7d\n.text:0000000000401e84\n.text:0000000000401e87\n.text:0000000000401e8c\n.text:0000000000401e8e\n.text:0000000000401e93\n.text:0000000000401e98\n.text:0000000000401e9d\n.text:0000000000401ea4\n.text:0000000000401ea7\n.text:0000000000401eac\n.text:0000000000401eae\n.text:0000000000401eb3\n.text:0000000000401eb8\n.text:0000000000401ebd\n.text:0000000000401ec4\n.text:0000000000401ec7\n.text:0000000000401ecc\n.text:0000000000401ece\n.text:0000000000401ed3\n.text:0000000000401ed8\n.text:0000000000401edd\n.text:0000000000401ee4\n.text:0000000000401ee7\n.text:0000000000401eec\n.text:0000000000401eee\n.text:0000000000401ef3\n.text:0000000000401ef8\n.text:0000000000401efd\n.text:0000000000401f04\n.text:0000000000401f07\n.text:0000000000401f0c\n.text:0000000000401f0e\n.text:0000000000401f13\n.text:0000000000401f18\n.text:0000000000401f1d\n.text:0000000000401f24\n.text:0000000000401f27\n.text:0000000000401f2c\n.text:0000000000401f2e\n.text:0000000000401f33\n.text:0000000000401f38\n.text:0000000000401f3d\n.text:0000000000401f44\n.text:0000000000401f47\n.text:0000000000401f4c\n.text:0000000000401f4e\n.text:0000000000401f53\n.text:0000000000401f58\n.text:0000000000401f5d\n.text:0000000000401f64\n.text:0000000000401f67\n.text:0000000000401f6c\n.text:0000000000401f6e\n.text:0000000000401f73\n.text:0000000000401f78\n.text:0000000000401f7d\n.text:0000000000401f84\n.text:0000000000401f87\n.text:0000000000401f8c\n.text:0000000000401f8e\n.text:0000000000401f93\n.text:0000000000401f98\n.text:0000000000401f9d\n.text:0000000000401fa4\n.text:0000000000401fa7\n.text:0000000000401fac\n.text:0000000000401fae\n.text:0000000000401fb3\n.text:0000000000401fb8\n.text:0000000000401fbd\n.text:0000000000401fc4\n.text:0000000000401fc7\n.text:0000000000401fcc\n.text:0000000000401fce\n.text:0000000000401fd3\n.text:0000000000401fd8\n.text:0000000000401fdd\n.text:0000000000401fe4\n.text:0000000000401fe7\n.text:0000000000401fec\n.text:0000000000401fee\n.text:0000000000401ff3\n.text:0000000000401ff8\n.text:0000000000401ffd\n.text:0000000000402004\n.text:0000000000402007\n.text:000000000040200c\n.text:000000000040200e\n.text:0000000000402013\n.text:0000000000402018\n.text:000000000040201d\n.text:0000000000402024\n.text:0000000000402027\n.text:000000000040202c\n.text:000000000040202e\n.text:0000000000402033\n.text:0000000000402038\n.text:000000000040203d\n.text:0000000000402044\n.text:0000000000402047\n.text:000000000040204c\n.text:000000000040204e\n.text:0000000000402053\n.text:0000000000402058\n.text:000000000040205d\n.text:0000000000402064\n.text:0000000000402067\n.text:000000000040206c\n.text:000000000040206e\n.text:0000000000402073\n.text:0000000000402078\n.text:000000000040207d\n.text:0000000000402084\n.text:0000000000402087\n.text:000000000040208c\n.text:000000000040208e\n.text:0000000000402093\n.text:0000000000402098\n.text:000000000040209d\n.text:00000000004020a4\n.text:00000000004020a7\n.text:00000000004020ac\n.text:00000000004020ae\n.text:00000000004020b3\n.text:00000000004020b8\n.text:00000000004020bd\n.text:00000000004020c4\n.text:00000000004020c7\n.text:00000000004020cc\n.text:00000000004020ce\n.text:00000000004020d3\n.text:00000000004020d8\n.text:00000000004020dd\n.text:00000000004020e4\n.text:00000000004020e7\n.text:00000000004020ec\n.text:00000000004020ee\n.text:00000000004020f3\n.text:00000000004020f8\n.text:00000000004020fd\n.text:0000000000402104\n.text:0000000000402107\n.text:000000000040210c\n.text:000000000040210e\n.text:0000000000402113\n.text:0000000000402118\n.text:000000000040211d\n.text:0000000000402124\n.text:0000000000402127\n.text:000000000040212c\n.text:000000000040212e\n.text:0000000000402133\n.text:0000000000402138\n.text:000000000040213d\n.text:0000000000402144\n.text:0000000000402147\n.text:000000000040214c\n.text:000000000040214e\n.text:0000000000402153\n.text:0000000000402158\n.text:000000000040215d\n.text:0000000000402164\n.text:0000000000402167\n.text:000000000040216c\n.text:000000000040216e\n.text:0000000000402173\n.text:0000000000402178\n.text:000000000040217d\n.text:0000000000402184\n.text:0000000000402187\n.text:000000000040218c\n.text:000000000040218e\n.text:0000000000402193\n.text:0000000000402198\n.text:000000000040219d\n.text:00000000004021a4\n.text:00000000004021a7\n.text:00000000004021ac\n.text:00000000004021ae\n.text:00000000004021b3\n.text:00000000004021b8\n.text:00000000004021bd\n.text:00000000004021c4\n.text:00000000004021c7\n.text:00000000004021cc\n.text:00000000004021ce\n.text:00000000004021d3\n.text:00000000004021d8\n.text:00000000004021dd\n.text:00000000004021e4\n.text:00000000004021e7\n.text:00000000004021ec\n.text:00000000004021ee\n.text:00000000004021f3\n.text:00000000004021f8\n.text:00000000004021fd\n.text:0000000000402204\n.text:0000000000402207\n.text:000000000040220c\n.text:000000000040220e\n.text:0000000000402213\n.text:0000000000402218\n.text:000000000040221d\n.text:0000000000402224\n.text:0000000000402227\n.text:000000000040222c\n.text:000000000040222e\n.text:0000000000402233\n.text:0000000000402238\n.text:000000000040223d\n.text:0000000000402240\n.text:0000000000402245\n.text:000000000040224a\n.text:000000000040224c\n.text:000000000040224f\n.text:0000000000402254\n.text:0000000000402256\n.text:000000000040225b\n.text:0000000000402260\n.text:0000000000402265\n.text:000000000040226c\n.text:000000000040226f\n.text:0000000000402274\n.text:0000000000402276\n.text:000000000040227b\n.text:0000000000402280\n.text:0000000000402285\n.text:000000000040228c\n.text:000000000040228f\n.text:0000000000402294\n.text:0000000000402296\n.text:000000000040229b\n.text:00000000004022a0\n.text:00000000004022a5\n.text:00000000004022ac\n.text:00000000004022af\n.text:00000000004022b4\n.text:00000000004022b6\n.text:00000000004022bb\n.text:00000000004022c0\n.text:00000000004022c5\n.text:00000000004022cc\n.text:00000000004022cf\n.text:00000000004022d4\n.text:00000000004022d6\n.text:00000000004022db\n.text:00000000004022e0\n.text:00000000004022e5\n.text:00000000004022ec\n.text:00000000004022ef\n.text:00000000004022f4\n.text:00000000004022f6\n.text:00000000004022fb\n.text:0000000000402300\n.text:0000000000402305\n.text:000000000040230c\n.text:000000000040230f\n.text:0000000000402314\n.text:0000000000402316\n.text:000000000040231b\n.text:0000000000402320\n.text:0000000000402325\n.text:000000000040232c\n.text:000000000040232f\n.text:0000000000402334\n.text:0000000000402336\n.text:000000000040233b\n.text:0000000000402340\n.text:0000000000402345\n.text:000000000040234c\n.text:000000000040234f\n.text:0000000000402354\n.text:0000000000402356\n.text:000000000040235b\n.text:0000000000402360\n.text:0000000000402365\n.text:0000000000402368\n.text:000000000040236d\n.text:0000000000402372\n.text:0000000000402374\n.text:0000000000402377\n.text:000000000040237c\n.text:000000000040237e\n.text:0000000000402383\n.text:0000000000402388\n.text:000000000040238d\n.text:0000000000402390\n.text:0000000000402395\n.text:000000000040239a\n.text:000000000040239c\n.text:000000000040239f\n.text:00000000004023a4\n.text:00000000004023a6\n.text:00000000004023ab\n.text:00000000004023b0\n.text:00000000004023b5\n.text:00000000004023bc\n.text:00000000004023bf\n.text:00000000004023c4\n.text:00000000004023c6\n.text:00000000004023cb\n.text:00000000004023d0\n.text:00000000004023d5\n.text:00000000004023dc\n.text:00000000004023df\n.text:00000000004023e4\n.text:00000000004023e6\n.text:00000000004023eb\n.text:00000000004023f0\n.text:00000000004023f5\n.text:00000000004023fc\n.text:00000000004023ff\n.text:0000000000402404\n.text:0000000000402406\n.text:000000000040240b\n.text:0000000000402410\n.text:0000000000402415\n.text:000000000040241c\n.text:000000000040241f\n.text:0000000000402424\n.text:0000000000402426\n.text:000000000040242b\n.text:0000000000402430\n.text:0000000000402435\n.text:0000000000402438\n.text:000000000040243d\n.text:0000000000402442\n.text:0000000000402447\n.text:0000000000402449\n.text:000000000040244e\n.text:0000000000402450\n.text:0000000000402455\n.text:000000000040245a\n.text:000000000040245f\n.text:0000000000402466\n.text:0000000000402469\n.text:000000000040246e\n.text:0000000000402470\n.text:0000000000402475\n.text:000000000040247a\n.text:000000000040247f\n.text:0000000000402486\n.text:0000000000402489\n.text:000000000040248e\n.text:0000000000402490\n.text:0000000000402495\n.text:000000000040249a\n.text:000000000040249f\n.text:00000000004024a2\n.text:00000000004024a7\n.text:00000000004024ac\n.text:00000000004024ae\n.text:00000000004024b1\n.text:00000000004024b6\n.text:00000000004024b8\n.text:00000000004024bd\n.text:00000000004024c2\n.text:00000000004024c7\n.text:00000000004024ca\n.text:00000000004024cf\n.text:00000000004024d4\n.text:00000000004024d9\n.text:00000000004024df\n.text:00000000004024e1\n.text:00000000004024e6\n.text:00000000004024e8\n.text:00000000004024ed\n.text:00000000004024f2\n.text:00000000004024f7\n.text:00000000004024fe\n.text:0000000000402501\n.text:0000000000402506\n.text:000000000040250b\n.text:000000000040250d\n.text:0000000000402512\n.text:0000000000402517\n.text:0000000000402519\n'
p664
tp665
sS'quoting_options_from_style'
p666
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p667
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p668
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x004055ad\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x00401520\n'
p669
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 6e bf ff ff\n'
p670
S'.text:0000000000405560\n.text:0000000000405564\n.text:0000000000405567\n.text:000000000040556c\n.text:0000000000405571\n.text:0000000000405575\n.text:000000000040557d\n.text:0000000000405580\n.text:0000000000405582\n.text:0000000000405584\n.text:0000000000405588\n.text:000000000040558b\n.text:000000000040558f\n.text:0000000000405594\n.text:0000000000405599\n.text:000000000040559d\n.text:00000000004055a1\n.text:00000000004055a5\n.text:00000000004055a8\n.text:00000000004055ac\n.text:00000000004055ad\n'
p671
tp672
sS'cfsetispeed'
p673
(S'\n__stdcall cfsetispeed(termios * __termios_p, speed_t __speed)\n'
p674
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint cfsetispeed(termios *__termios_p,speed_t __speed)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_cfsetispeed_0060e1c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p675
S'JMP qword ptr [0x0060e1c8]\n'
p676
S'ff 25 62 c9 20 00\n'
p677
S'.plt:0000000000401860\n'
p678
tp679
sS'strcpy'
p680
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p681
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_0060e048)();\u000a  return pcVar1;\u000a}\u000a\u000a
p682
S'JMP qword ptr [0x0060e048]\n'
p683
S'ff 25 e2 ca 20 00\n'
p684
S'.plt:0000000000401560\n'
p685
tp686
sS'display_recoverable'
p687
(S'\n__stdcall display_recoverable()\n'
p688
V\u000avoid display_recoverable(void)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  __printf_chk(1,"%lx:%lx:%lx:%lx",(ulong)mode.c_iflag,(ulong)mode.c_oflag,(ulong)mode.c_cflag,\u000a               (ulong)mode.c_lflag);\u000a  lVar1 = -0x20;\u000a  do {\u000a    __printf_chk(1,0x409833,(ulong)*(byte *)(&mode.field_0x31 + lVar1));\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 0);\u000a  putchar_unlocked(10);\u000a  return;\u000a}\u000a\u000a
p689
S'PUSH RBX\nMOV EDX,dword ptr [0x0060e30c]\nMOV ECX,dword ptr [0x0060e310]\nMOV R8D,dword ptr [0x0060e314]\nMOV R9D,dword ptr [0x0060e318]\nMOV EDI,0x1\nMOV ESI,0x409828\nXOR EAX,EAX\nCALL 0x00401800\nMOV RBX,-0x20\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX EDX,byte ptr [0x60e33d + RBX]\nMOV EDI,0x1\nMOV ESI,0x409833\nXOR EAX,EAX\nCALL 0x00401800\nINC RBX\nJNZ 0x00404000\nMOV EDI,0xa\nPOP RBX\nJMP 0x00401740\n'
p690
S'53\n8b 15 45 a3 20 00\n8b 0d 43 a3 20 00\n44 8b 05 40 a3 20 00\n44 8b 0d 3d a3 20 00\nbf 01 00 00 00\nbe 28 98 40 00\n31 c0\ne8 14 d8 ff ff\n48 c7 c3 e0 ff ff ff\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 93 3d e3 60 00\nbf 01 00 00 00\nbe 33 98 40 00\n31 c0\ne8 e8 d7 ff ff\n48 ff c3\n75 e3\nbf 0a 00 00 00\n5b\ne9 18 d7 ff ff\n'
p691
S'.text:0000000000403fc0\n.text:0000000000403fc1\n.text:0000000000403fc7\n.text:0000000000403fcd\n.text:0000000000403fd4\n.text:0000000000403fdb\n.text:0000000000403fe0\n.text:0000000000403fe5\n.text:0000000000403fe7\n.text:0000000000403fec\n.text:0000000000403ff3\n.text:0000000000404000\n.text:0000000000404007\n.text:000000000040400c\n.text:0000000000404011\n.text:0000000000404013\n.text:0000000000404018\n.text:000000000040401b\n.text:000000000040401d\n.text:0000000000404022\n.text:0000000000404023\n'
p692
tp693
sS'c_isgraph'
p694
(S'\n__stdcall c_isgraph()\n'
p695
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p696
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p697
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p698
S'.text:0000000000406c80\n.text:0000000000406c83\n.text:0000000000406c86\n.text:0000000000406c89\n'
p699
tp700
sS'quotearg_buffer_restyled'
p701
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p702
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_004045dc_caseD_7;\u000a  case 2:\u000a    goto switchD_004045dc_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_004045dc_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_004045dc_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_004045dc_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_004045dc_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_004045dc_caseD_7;\u000aswitchD_004045dc_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_004045dc_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_004045dc_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_004050a0;\u000aLAB_004047c0:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_004050a9:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_004050b8:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_004047cb:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_0040480f:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_0040480f;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_004050b8;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_00404fe5;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x00404ef0;\u000a    }\u000a    goto LAB_004050b8;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_0040501a;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_004050b8;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_00405049;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00404b08;\u000a  case '\u005ca':\u000a    goto joined_r0x004049f8;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x004049f8;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_00404826_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x004049f8;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x004049f8;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_00404826_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x004049f8:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_00404f5e;\u000a    }\u000a    goto LAB_004050b8;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_004050b8;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_004050b8;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_004050b8;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_004050b8;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_004050b8;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_00404826_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00404fb6;\u000a      goto joined_r0x00404fa8;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00404ab1:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00404fa8;\u000a      goto LAB_00404fb6;\u000a    }\u000a    goto LAB_004050b8;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_004050b8;\u000a  }\u000a  goto joined_r0x00404ef0;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_0040501a:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_00405049;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_00405049:\u000a  if (1 < uVar10) {\u000aLAB_00404b26:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_00404be2;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00404ab1;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_00404be2:\u000a        if (bVar6 != 0) goto LAB_004050b8;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00404b08:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_00404b26;\u000ajoined_r0x00404ef0:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x00404ef0:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_00404f17;\u000aLAB_00404f50:\u000a    if (bVar22) goto LAB_00404f55;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_00404f50;\u000aLAB_00404f17:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_00404f55:\u000a      if (bVar6 != 0) goto LAB_004050b8;\u000aLAB_00404f5e:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00404fa8;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00404fb6:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00404fa8:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_00404fe5:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_004047c0;\u000aLAB_004050a0:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_004050a9;\u000a  goto LAB_004047cb;\u000a}\u000a\u000a
p703
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401600\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00405185\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x40ab50 + RAX*0x8]\nMOV EDI,0x40b076\nMOV ESI,R15D\nCALL 0x00405830\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x40b078\nMOV ESI,R15D\nCALL 0x00405830\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x0040463d\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x00404640\nNOP\nCMP R12,RSI\nJNC 0x0040462e\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x00404620\nJMP 0x00404640\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401610\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x0040470c\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x0040470c\nMOV ECX,0x40b074\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x00404706\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x004046a7\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x004046d4\nTEST RSI,RSI\nJZ 0x004046c1\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x40b078\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x004046e2\nMOV ECX,0x40b078\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x0040470c\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x0040515c\nMOV ECX,0x40b074\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x004050a0\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x004050a9\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x0040480f\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x0040480a\nCMP R11,-0x1\nJNZ 0x0040480a\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401610\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x00404860\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x00404abc\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x40aba8 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x004050b8\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x00404f10\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x00404f17\nJMP 0x00404f50\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x004016d0\nTEST EAX,EAX\nSETZ AL\nJNZ 0x004048ad\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00404811\nJMP 0x004050b8\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00404811\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x0040483b\nCMP EBX,0x2\nJNZ 0x0040483b\nTEST R13,R13\nJNZ 0x0040483b\nJMP 0x004050b8\nCMP R11,-0x1\nJZ 0x00404c93\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00404cb3\nJMP 0x0040483b\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404cc4\nTEST R8B,R8B\nJNZ 0x004050b8\nCMP EBX,0x2\nJNZ 0x00404968\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00404968\nCMP R12,RSI\nJNC 0x00404943\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404952\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404961\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00404972\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x00404e38\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x00404e38\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x00404e38\nCMP RCX,RSI\nJNC 0x004049ac\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x004049bb\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00404846\nJMP 0x00404f10\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404839\nJMP 0x00404a1a\nMOV DL,0x74\nJMP 0x00404a02\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404839\nJMP 0x00404a1a\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404839\nJMP 0x00404a1a\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x004050b8\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404839\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x00404f5e\nJMP 0x004050b8\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x00404839\nTEST R8B,R8B\nJNZ 0x004050b8\nCMP R12,RSI\nJNC 0x00404a4a\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404a59\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404a68\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x00404839\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x00404e4b\nCMP EBX,0x2\nJNZ 0x00404839\nTEST R8B,R8B\nJZ 0x00404839\nJMP 0x004050b8\nCMP EBX,0x2\nJNZ 0x00404ce4\nTEST R8B,R8B\nJNZ 0x004050b8\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00404fb6\nJMP 0x00404fd9\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x00404d05\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x004018f0\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404ef8\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x00404ef8\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x00404be2\nJMP 0x00404bb0\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x00404b99\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x00404b96\nCMP R12,RSI\nJNC 0x00404b7b\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x00404b8a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x00404bd0\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x00404bd0\nTEST BPL,0x1\nJZ 0x00404c73\nCMP R12,RSI\nJNC 0x00404bc4\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x00404c73\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00404bb0\nTEST R8B,R8B\nJNZ 0x004050b8\nCMP EBX,0x2\nJNZ 0x00404c2a\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x00404c2a\nCMP R12,RSI\nJNC 0x00404c02\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404c11\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404c20\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x00404c34\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404c4b\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404c65\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x00404b60\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00404fb6\nJMP 0x00404fd9\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x0040483b\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x0040483b\nJMP 0x004050b8\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x00404fe5\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00404846\nJMP 0x00404f10\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00404a02\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00404fb6\nJMP 0x00404fd9\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x00404d27\nMOV RDI,R10\nCALL 0x00401610\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x00401630\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00404fff\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x00404ff7\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00405006\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x00404dee\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x00404de6\nBT RDI,RDX\nJC 0x00405152\nINC RCX\nCMP RCX,R14\nJC 0x00404dd0\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x004018e0\nTEST EAX,EAX\nJNZ 0x00404e03\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x004018d0\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00404d45\nJMP 0x00405049\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00404846\nJMP 0x00404f10\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x00404839\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x00404839\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x00404839\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x0040483b\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00405082\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x004050b8\nCMP R12,RSI\nJNC 0x00404eae\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x00404ec1\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404ed0\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x00404edf\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00404846\nJMP 0x00404f10\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00404846\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x00404f50\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x00404f55\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00404fb0\nJMP 0x00404f55\nTEST BPL,BPL\nJZ 0x00404fb0\nTEST R8B,R8B\nJNZ 0x004050b8\nCMP EBX,0x2\nJNZ 0x00404f98\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00404f98\nCMP R12,RSI\nJNC 0x00404f73\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404f82\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404f91\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00404fa2\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x00404fe2\nJMP 0x00404fde\nTEST DIL,0x1\nJZ 0x00404fd9\nAND AL,0x1\nJNZ 0x00404fd9\nCMP R12,RSI\nJNC 0x00404fc4\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404fd3\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x00404fe2\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x004050a0\nJMP 0x004047c0\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x00405044\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x0040503c\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x00405078\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x0040501a\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00405049\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00404b08\nJMP 0x00404b26\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00405049\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x00404846\nJMP 0x00404f10\nCMP R13,R11\nJNZ 0x004047cb\nTEST R8B,R8B\nJZ 0x00405112\nCMP EBX,0x2\nJNZ 0x00405112\nTEST R12,R12\nJNZ 0x00405112\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x00404550\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x00405146\nTEST R8B,R8B\nJNZ 0x00405146\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x00405146\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x00405139\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x00405130\nCMP R12,RSI\nJNC 0x004050fd\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x004050fd\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x004050b8\nTEST RSI,RSI\nJZ 0x00405169\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x40b074\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x0040470c\nCALL 0x00401520\n'
p704
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 82 d0 ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 50 ab 40 00\nbf 76 b0 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf 78 b0 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 c3 cf ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 74 b0 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 78 b0 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 78 b0 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 74 b0 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 23 ce ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd a8 ab 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 57 ce ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 17 ce ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 f1 c8 ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 c3 c8 ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 e9 ca ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 b2 ca ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 74 b0 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 96 c3 ff ff\n'
p705
S'.text:0000000000404550\n.text:0000000000404551\n.text:0000000000404553\n.text:0000000000404555\n.text:0000000000404557\n.text:0000000000404559\n.text:000000000040455a\n.text:0000000000404561\n.text:0000000000404564\n.text:0000000000404567\n.text:000000000040456a\n.text:000000000040456f\n.text:0000000000404574\n.text:0000000000404579\n.text:000000000040457e\n.text:0000000000404586\n.text:000000000040458a\n.text:0000000000404590\n.text:0000000000404598\n.text:000000000040459d\n.text:00000000004045a5\n.text:00000000004045aa\n.text:00000000004045ae\n.text:00000000004045b0\n.text:00000000004045b3\n.text:00000000004045b6\n.text:00000000004045b9\n.text:00000000004045be\n.text:00000000004045c1\n.text:00000000004045c4\n.text:00000000004045c7\n.text:00000000004045ca\n.text:00000000004045cc\n.text:00000000004045cf\n.text:00000000004045d4\n.text:00000000004045d7\n.text:00000000004045dc\n.text:00000000004045e3\n.text:00000000004045e8\n.text:00000000004045eb\n.text:00000000004045f0\n.text:00000000004045f5\n.text:00000000004045fa\n.text:00000000004045fd\n.text:0000000000404602\n.text:0000000000404607\n.text:000000000040460c\n.text:000000000040460e\n.text:0000000000404610\n.text:0000000000404615\n.text:0000000000404617\n.text:000000000040461a\n.text:000000000040461c\n.text:000000000040461e\n.text:0000000000404620\n.text:0000000000404623\n.text:0000000000404625\n.text:000000000040462a\n.text:000000000040462e\n.text:0000000000404634\n.text:0000000000404637\n.text:0000000000404639\n.text:000000000040463b\n.text:000000000040463d\n.text:0000000000404640\n.text:0000000000404645\n.text:0000000000404648\n.text:000000000040464d\n.text:0000000000404652\n.text:0000000000404655\n.text:0000000000404658\n.text:000000000040465b\n.text:000000000040465e\n.text:0000000000404663\n.text:0000000000404666\n.text:0000000000404669\n.text:000000000040466e\n.text:0000000000404671\n.text:0000000000404673\n.text:0000000000404676\n.text:0000000000404678\n.text:000000000040467a\n.text:000000000040467d\n.text:0000000000404682\n.text:0000000000404687\n.text:000000000040468c\n.text:000000000040468f\n.text:0000000000404695\n.text:0000000000404697\n.text:000000000040469a\n.text:000000000040469d\n.text:00000000004046a0\n.text:00000000004046a2\n.text:00000000004046a4\n.text:00000000004046a7\n.text:00000000004046aa\n.text:00000000004046af\n.text:00000000004046b2\n.text:00000000004046b4\n.text:00000000004046b7\n.text:00000000004046b9\n.text:00000000004046be\n.text:00000000004046c1\n.text:00000000004046c6\n.text:00000000004046cc\n.text:00000000004046d2\n.text:00000000004046d4\n.text:00000000004046d9\n.text:00000000004046df\n.text:00000000004046e2\n.text:00000000004046e5\n.text:00000000004046e8\n.text:00000000004046ea\n.text:00000000004046ef\n.text:00000000004046f2\n.text:00000000004046f8\n.text:00000000004046fd\n.text:0000000000404703\n.text:0000000000404706\n.text:0000000000404709\n.text:000000000040470c\n.text:0000000000404714\n.text:0000000000404716\n.text:0000000000404718\n.text:000000000040471b\n.text:000000000040471f\n.text:0000000000404721\n.text:0000000000404724\n.text:0000000000404728\n.text:000000000040472a\n.text:000000000040472d\n.text:0000000000404730\n.text:0000000000404733\n.text:0000000000404735\n.text:0000000000404739\n.text:000000000040473b\n.text:000000000040473f\n.text:0000000000404742\n.text:0000000000404745\n.text:0000000000404748\n.text:000000000040474a\n.text:000000000040474e\n.text:0000000000404757\n.text:000000000040475a\n.text:000000000040475c\n.text:0000000000404760\n.text:0000000000404762\n.text:0000000000404766\n.text:0000000000404768\n.text:000000000040476b\n.text:000000000040476f\n.text:0000000000404771\n.text:0000000000404774\n.text:0000000000404778\n.text:000000000040477d\n.text:0000000000404780\n.text:0000000000404784\n.text:000000000040478c\n.text:000000000040478f\n.text:0000000000404792\n.text:0000000000404794\n.text:0000000000404798\n.text:000000000040479b\n.text:000000000040479d\n.text:00000000004047a2\n.text:00000000004047a6\n.text:00000000004047ab\n.text:00000000004047b0\n.text:00000000004047b4\n.text:00000000004047ba\n.text:00000000004047c0\n.text:00000000004047c5\n.text:00000000004047cb\n.text:00000000004047d0\n.text:00000000004047d2\n.text:00000000004047d7\n.text:00000000004047db\n.text:00000000004047dd\n.text:00000000004047e1\n.text:00000000004047e3\n.text:00000000004047e5\n.text:00000000004047e8\n.text:00000000004047ed\n.text:00000000004047ef\n.text:00000000004047f4\n.text:00000000004047f9\n.text:00000000004047fd\n.text:0000000000404802\n.text:0000000000404807\n.text:000000000040480a\n.text:000000000040480d\n.text:000000000040480f\n.text:0000000000404811\n.text:0000000000404816\n.text:000000000040481a\n.text:0000000000404820\n.text:0000000000404822\n.text:0000000000404824\n.text:0000000000404826\n.text:000000000040482e\n.text:0000000000404833\n.text:0000000000404839\n.text:000000000040483b\n.text:0000000000404840\n.text:0000000000404846\n.text:000000000040484f\n.text:0000000000404855\n.text:0000000000404860\n.text:0000000000404862\n.text:0000000000404865\n.text:0000000000404869\n.text:0000000000404871\n.text:0000000000404874\n.text:0000000000404879\n.text:000000000040487b\n.text:000000000040487e\n.text:0000000000404880\n.text:0000000000404885\n.text:0000000000404888\n.text:000000000040488d\n.text:0000000000404890\n.text:0000000000404895\n.text:0000000000404899\n.text:000000000040489e\n.text:00000000004048a0\n.text:00000000004048a2\n.text:00000000004048a8\n.text:00000000004048ad\n.text:00000000004048b2\n.text:00000000004048b5\n.text:00000000004048ba\n.text:00000000004048be\n.text:00000000004048c3\n.text:00000000004048c8\n.text:00000000004048ca\n.text:00000000004048cc\n.text:00000000004048d1\n.text:00000000004048d3\n.text:00000000004048d6\n.text:00000000004048dc\n.text:00000000004048df\n.text:00000000004048e5\n.text:00000000004048e8\n.text:00000000004048ee\n.text:00000000004048f3\n.text:00000000004048f7\n.text:00000000004048fd\n.text:0000000000404900\n.text:0000000000404903\n.text:0000000000404907\n.text:000000000040490a\n.text:000000000040490c\n.text:000000000040490f\n.text:0000000000404915\n.text:000000000040491a\n.text:000000000040491f\n.text:0000000000404925\n.text:0000000000404928\n.text:000000000040492e\n.text:0000000000404931\n.text:0000000000404933\n.text:0000000000404935\n.text:0000000000404937\n.text:0000000000404939\n.text:000000000040493c\n.text:000000000040493e\n.text:0000000000404943\n.text:0000000000404948\n.text:000000000040494b\n.text:000000000040494d\n.text:0000000000404952\n.text:0000000000404957\n.text:000000000040495a\n.text:000000000040495c\n.text:0000000000404961\n.text:0000000000404965\n.text:0000000000404968\n.text:000000000040496b\n.text:000000000040496d\n.text:0000000000404972\n.text:0000000000404977\n.text:0000000000404979\n.text:000000000040497c\n.text:000000000040497f\n.text:0000000000404985\n.text:0000000000404989\n.text:000000000040498c\n.text:0000000000404992\n.text:0000000000404996\n.text:0000000000404999\n.text:000000000040499c\n.text:00000000004049a2\n.text:00000000004049a5\n.text:00000000004049a7\n.text:00000000004049ac\n.text:00000000004049b1\n.text:00000000004049b4\n.text:00000000004049b6\n.text:00000000004049bb\n.text:00000000004049bf\n.text:00000000004049c4\n.text:00000000004049ca\n.text:00000000004049cf\n.text:00000000004049d1\n.text:00000000004049d6\n.text:00000000004049dc\n.text:00000000004049de\n.text:00000000004049e0\n.text:00000000004049e2\n.text:00000000004049e4\n.text:00000000004049e9\n.text:00000000004049ef\n.text:00000000004049f1\n.text:00000000004049f3\n.text:00000000004049f8\n.text:00000000004049fe\n.text:0000000000404a00\n.text:0000000000404a02\n.text:0000000000404a07\n.text:0000000000404a09\n.text:0000000000404a0f\n.text:0000000000404a14\n.text:0000000000404a1a\n.text:0000000000404a1d\n.text:0000000000404a20\n.text:0000000000404a26\n.text:0000000000404a2b\n.text:0000000000404a2e\n.text:0000000000404a31\n.text:0000000000404a37\n.text:0000000000404a3a\n.text:0000000000404a40\n.text:0000000000404a43\n.text:0000000000404a45\n.text:0000000000404a4a\n.text:0000000000404a4f\n.text:0000000000404a52\n.text:0000000000404a54\n.text:0000000000404a59\n.text:0000000000404a5e\n.text:0000000000404a61\n.text:0000000000404a63\n.text:0000000000404a68\n.text:0000000000404a6c\n.text:0000000000404a6e\n.text:0000000000404a73\n.text:0000000000404a76\n.text:0000000000404a79\n.text:0000000000404a7f\n.text:0000000000404a82\n.text:0000000000404a88\n.text:0000000000404a8b\n.text:0000000000404a91\n.text:0000000000404a96\n.text:0000000000404a99\n.text:0000000000404a9f\n.text:0000000000404aa2\n.text:0000000000404aa8\n.text:0000000000404aab\n.text:0000000000404aad\n.text:0000000000404ab1\n.text:0000000000404ab7\n.text:0000000000404abc\n.text:0000000000404ac0\n.text:0000000000404ac9\n.text:0000000000404acf\n.text:0000000000404ad4\n.text:0000000000404ad9\n.text:0000000000404ade\n.text:0000000000404ae1\n.text:0000000000404ae6\n.text:0000000000404ae9\n.text:0000000000404aec\n.text:0000000000404af1\n.text:0000000000404af6\n.text:0000000000404afa\n.text:0000000000404aff\n.text:0000000000404b04\n.text:0000000000404b08\n.text:0000000000404b0a\n.text:0000000000404b0f\n.text:0000000000404b15\n.text:0000000000404b18\n.text:0000000000404b1a\n.text:0000000000404b1d\n.text:0000000000404b20\n.text:0000000000404b26\n.text:0000000000404b2b\n.text:0000000000404b2e\n.text:0000000000404b31\n.text:0000000000404b34\n.text:0000000000404b37\n.text:0000000000404b39\n.text:0000000000404b3d\n.text:0000000000404b3f\n.text:0000000000404b44\n.text:0000000000404b49\n.text:0000000000404b4f\n.text:0000000000404b60\n.text:0000000000404b65\n.text:0000000000404b67\n.text:0000000000404b6a\n.text:0000000000404b6c\n.text:0000000000404b6f\n.text:0000000000404b71\n.text:0000000000404b74\n.text:0000000000404b76\n.text:0000000000404b7b\n.text:0000000000404b80\n.text:0000000000404b83\n.text:0000000000404b85\n.text:0000000000404b8a\n.text:0000000000404b8e\n.text:0000000000404b96\n.text:0000000000404b99\n.text:0000000000404b9c\n.text:0000000000404b9e\n.text:0000000000404ba2\n.text:0000000000404bb0\n.text:0000000000404bb4\n.text:0000000000404bba\n.text:0000000000404bbd\n.text:0000000000404bbf\n.text:0000000000404bc4\n.text:0000000000404bc7\n.text:0000000000404bc9\n.text:0000000000404bd0\n.text:0000000000404bd3\n.text:0000000000404bd8\n.text:0000000000404bdb\n.text:0000000000404be0\n.text:0000000000404be2\n.text:0000000000404be5\n.text:0000000000404beb\n.text:0000000000404bee\n.text:0000000000404bf0\n.text:0000000000404bf4\n.text:0000000000404bf6\n.text:0000000000404bf8\n.text:0000000000404bfb\n.text:0000000000404bfd\n.text:0000000000404c02\n.text:0000000000404c07\n.text:0000000000404c0a\n.text:0000000000404c0c\n.text:0000000000404c11\n.text:0000000000404c16\n.text:0000000000404c19\n.text:0000000000404c1b\n.text:0000000000404c20\n.text:0000000000404c24\n.text:0000000000404c26\n.text:0000000000404c2a\n.text:0000000000404c2d\n.text:0000000000404c2f\n.text:0000000000404c34\n.text:0000000000404c39\n.text:0000000000404c3c\n.text:0000000000404c3e\n.text:0000000000404c41\n.text:0000000000404c44\n.text:0000000000404c47\n.text:0000000000404c4b\n.text:0000000000404c50\n.text:0000000000404c53\n.text:0000000000404c55\n.text:0000000000404c58\n.text:0000000000404c5b\n.text:0000000000404c5e\n.text:0000000000404c61\n.text:0000000000404c65\n.text:0000000000404c69\n.text:0000000000404c6d\n.text:0000000000404c71\n.text:0000000000404c73\n.text:0000000000404c77\n.text:0000000000404c7a\n.text:0000000000404c80\n.text:0000000000404c84\n.text:0000000000404c88\n.text:0000000000404c8e\n.text:0000000000404c93\n.text:0000000000404c96\n.text:0000000000404c99\n.text:0000000000404c9e\n.text:0000000000404ca1\n.text:0000000000404ca3\n.text:0000000000404ca6\n.text:0000000000404cad\n.text:0000000000404cb3\n.text:0000000000404cb5\n.text:0000000000404cb9\n.text:0000000000404cbf\n.text:0000000000404cc4\n.text:0000000000404cc9\n.text:0000000000404ccf\n.text:0000000000404cd2\n.text:0000000000404cd4\n.text:0000000000404cd9\n.text:0000000000404cdf\n.text:0000000000404ce4\n.text:0000000000404ce6\n.text:0000000000404ceb\n.text:0000000000404cf1\n.text:0000000000404cf3\n.text:0000000000404cf6\n.text:0000000000404cfa\n.text:0000000000404d00\n.text:0000000000404d05\n.text:0000000000404d11\n.text:0000000000404d15\n.text:0000000000404d17\n.text:0000000000404d1a\n.text:0000000000404d1f\n.text:0000000000404d24\n.text:0000000000404d27\n.text:0000000000404d2b\n.text:0000000000404d30\n.text:0000000000404d32\n.text:0000000000404d36\n.text:0000000000404d38\n.text:0000000000404d40\n.text:0000000000404d45\n.text:0000000000404d4a\n.text:0000000000404d4e\n.text:0000000000404d52\n.text:0000000000404d5a\n.text:0000000000404d5d\n.text:0000000000404d62\n.text:0000000000404d65\n.text:0000000000404d68\n.text:0000000000404d6d\n.text:0000000000404d70\n.text:0000000000404d73\n.text:0000000000404d79\n.text:0000000000404d7d\n.text:0000000000404d87\n.text:0000000000404d8d\n.text:0000000000404d91\n.text:0000000000404d96\n.text:0000000000404d9c\n.text:0000000000404da0\n.text:0000000000404da3\n.text:0000000000404da7\n.text:0000000000404da9\n.text:0000000000404dae\n.text:0000000000404db3\n.text:0000000000404db7\n.text:0000000000404db9\n.text:0000000000404dbe\n.text:0000000000404dc3\n.text:0000000000404dc7\n.text:0000000000404dcc\n.text:0000000000404dd0\n.text:0000000000404dd4\n.text:0000000000404dd7\n.text:0000000000404dda\n.text:0000000000404ddc\n.text:0000000000404de0\n.text:0000000000404de6\n.text:0000000000404de9\n.text:0000000000404dec\n.text:0000000000404dee\n.text:0000000000404df2\n.text:0000000000404df7\n.text:0000000000404df9\n.text:0000000000404dfb\n.text:0000000000404e03\n.text:0000000000404e08\n.text:0000000000404e0b\n.text:0000000000404e13\n.text:0000000000404e16\n.text:0000000000404e19\n.text:0000000000404e1e\n.text:0000000000404e21\n.text:0000000000404e23\n.text:0000000000404e28\n.text:0000000000404e2d\n.text:0000000000404e33\n.text:0000000000404e38\n.text:0000000000404e3b\n.text:0000000000404e40\n.text:0000000000404e46\n.text:0000000000404e4b\n.text:0000000000404e50\n.text:0000000000404e56\n.text:0000000000404e5a\n.text:0000000000404e5d\n.text:0000000000404e63\n.text:0000000000404e69\n.text:0000000000404e6f\n.text:0000000000404e74\n.text:0000000000404e76\n.text:0000000000404e79\n.text:0000000000404e7f\n.text:0000000000404e83\n.text:0000000000404e85\n.text:0000000000404e8f\n.text:0000000000404e93\n.text:0000000000404e99\n.text:0000000000404e9c\n.text:0000000000404e9e\n.text:0000000000404ea4\n.text:0000000000404ea7\n.text:0000000000404ea9\n.text:0000000000404eae\n.text:0000000000404eb3\n.text:0000000000404eb6\n.text:0000000000404eba\n.text:0000000000404ebc\n.text:0000000000404ec1\n.text:0000000000404ec6\n.text:0000000000404ec9\n.text:0000000000404ecb\n.text:0000000000404ed0\n.text:0000000000404ed5\n.text:0000000000404ed8\n.text:0000000000404eda\n.text:0000000000404edf\n.text:0000000000404ee3\n.text:0000000000404ee5\n.text:0000000000404ee8\n.text:0000000000404eeb\n.text:0000000000404ef0\n.text:0000000000404ef6\n.text:0000000000404ef8\n.text:0000000000404efd\n.text:0000000000404f02\n.text:0000000000404f08\n.text:0000000000404f10\n.text:0000000000404f15\n.text:0000000000404f17\n.text:0000000000404f1c\n.text:0000000000404f1f\n.text:0000000000404f21\n.text:0000000000404f24\n.text:0000000000404f26\n.text:0000000000404f29\n.text:0000000000404f2c\n.text:0000000000404f2f\n.text:0000000000404f31\n.text:0000000000404f39\n.text:0000000000404f3c\n.text:0000000000404f3e\n.text:0000000000404f40\n.text:0000000000404f50\n.text:0000000000404f53\n.text:0000000000404f55\n.text:0000000000404f58\n.text:0000000000404f5e\n.text:0000000000404f61\n.text:0000000000404f63\n.text:0000000000404f65\n.text:0000000000404f67\n.text:0000000000404f69\n.text:0000000000404f6c\n.text:0000000000404f6e\n.text:0000000000404f73\n.text:0000000000404f78\n.text:0000000000404f7b\n.text:0000000000404f7d\n.text:0000000000404f82\n.text:0000000000404f87\n.text:0000000000404f8a\n.text:0000000000404f8c\n.text:0000000000404f91\n.text:0000000000404f95\n.text:0000000000404f98\n.text:0000000000404f9b\n.text:0000000000404f9d\n.text:0000000000404fa2\n.text:0000000000404fa5\n.text:0000000000404fa8\n.text:0000000000404faa\n.text:0000000000404fb0\n.text:0000000000404fb4\n.text:0000000000404fb6\n.text:0000000000404fb8\n.text:0000000000404fba\n.text:0000000000404fbd\n.text:0000000000404fbf\n.text:0000000000404fc4\n.text:0000000000404fc9\n.text:0000000000404fcc\n.text:0000000000404fce\n.text:0000000000404fd3\n.text:0000000000404fd7\n.text:0000000000404fd9\n.text:0000000000404fdc\n.text:0000000000404fde\n.text:0000000000404fe2\n.text:0000000000404fe5\n.text:0000000000404fe8\n.text:0000000000404fec\n.text:0000000000404ff2\n.text:0000000000404ff7\n.text:0000000000404fff\n.text:0000000000405004\n.text:0000000000405006\n.text:000000000040500e\n.text:0000000000405013\n.text:0000000000405015\n.text:000000000040501a\n.text:000000000040501f\n.text:0000000000405023\n.text:0000000000405025\n.text:000000000040502a\n.text:000000000040502d\n.text:0000000000405030\n.text:0000000000405032\n.text:000000000040503a\n.text:000000000040503c\n.text:0000000000405044\n.text:0000000000405049\n.text:000000000040504d\n.text:0000000000405052\n.text:0000000000405057\n.text:000000000040505b\n.text:0000000000405060\n.text:0000000000405065\n.text:0000000000405069\n.text:000000000040506d\n.text:0000000000405073\n.text:0000000000405078\n.text:0000000000405080\n.text:0000000000405082\n.text:0000000000405084\n.text:0000000000405088\n.text:000000000040508d\n.text:0000000000405093\n.text:00000000004050a0\n.text:00000000004050a3\n.text:00000000004050a9\n.text:00000000004050ac\n.text:00000000004050ae\n.text:00000000004050b1\n.text:00000000004050b3\n.text:00000000004050b6\n.text:00000000004050b8\n.text:00000000004050c0\n.text:00000000004050c6\n.text:00000000004050ca\n.text:00000000004050cd\n.text:00000000004050d1\n.text:00000000004050d6\n.text:00000000004050da\n.text:00000000004050de\n.text:00000000004050e1\n.text:00000000004050e4\n.text:00000000004050e7\n.text:00000000004050eb\n.text:00000000004050ef\n.text:00000000004050f1\n.text:00000000004050f6\n.text:00000000004050fa\n.text:00000000004050fd\n.text:0000000000405100\n.text:0000000000405107\n.text:0000000000405108\n.text:000000000040510a\n.text:000000000040510c\n.text:000000000040510e\n.text:0000000000405110\n.text:0000000000405111\n.text:0000000000405112\n.text:000000000040511a\n.text:000000000040511d\n.text:000000000040511f\n.text:0000000000405122\n.text:0000000000405124\n.text:0000000000405126\n.text:0000000000405128\n.text:000000000040512a\n.text:000000000040512d\n.text:0000000000405130\n.text:0000000000405133\n.text:0000000000405135\n.text:0000000000405139\n.text:000000000040513c\n.text:000000000040513f\n.text:0000000000405142\n.text:0000000000405144\n.text:0000000000405146\n.text:0000000000405149\n.text:000000000040514b\n.text:0000000000405150\n.text:0000000000405152\n.text:0000000000405157\n.text:000000000040515c\n.text:000000000040515f\n.text:0000000000405161\n.text:0000000000405166\n.text:0000000000405169\n.text:000000000040516e\n.text:0000000000405171\n.text:0000000000405177\n.text:000000000040517d\n.text:0000000000405180\n.text:0000000000405185\n'
p706
tp707
sS'screen_columns'
p708
(S'\n__stdcall screen_columns()\n'
p709
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint screen_columns(void)\u000a\u000a{\u000a  int iVar1;\u000a  strtol_error sVar2;\u000a  char *s;\u000a  winsize win;\u000a  long local_10;\u000a  ushort local_6;\u000a  \u000a  iVar1 = get_win_size((winsize *)0x1);\u000a  if ((iVar1 != 0) || (local_10._0_4_ = (uint)local_6, local_6 == 0)) {\u000a    s = getenv("COLUMNS");\u000a    if (s != (char *)0x0) {\u000a      sVar2 = xstrtol(s,(char **)0x0,(long *)0x0,(char *)&local_10);\u000a      if ((sVar2 == LONGINT_OK) && (local_10 - 1U < 0x7fffffff)) {\u000a        return (uint)local_10;\u000a      }\u000a    }\u000a    local_10._0_4_ = 0x50;\u000a  }\u000a  return (int)(uint)local_10;\u000a}\u000a\u000a
p710
S'SUB RSP,0x18\nLEA RSI,[RSP + 0x10]\nMOV EDI,0x1\nCALL 0x00403ab0\nTEST EAX,EAX\nJNZ 0x00402fd0\nMOVZX EAX,word ptr [RSP + 0x12]\nTEST EAX,EAX\nJNZ 0x00403017\nMOV EDI,0x409768\nCALL 0x00401500\nTEST RAX,RAX\nJZ 0x0040300a\nLEA RCX,[RSP + 0x8]\nXOR ESI,ESI\nXOR EDX,EDX\nMOV R8D,0x40b1c9\nMOV RDI,RAX\nCALL 0x00406410\nTEST EAX,EAX\nJNZ 0x0040300a\nMOV RAX,qword ptr [RSP + 0x8]\nDEC RAX\nCMP RAX,0x7fffffff\nJC 0x00403013\nMOV qword ptr [RSP + 0x8],0x50\nMOV EAX,dword ptr [RSP + 0x8]\nADD RSP,0x18\nRET\n'
p711
S'48 83 ec 18\n48 8d 74 24 10\nbf 01 00 00 00\ne8 ed 0a 00 00\n85 c0\n75 09\n0f b7 44 24 12\n85 c0\n75 47\nbf 68 97 40 00\ne8 26 e5 ff ff\n48 85 c0\n74 2b\n48 8d 4c 24 08\n31 f6\n31 d2\n41 b8 c9 b1 40 00\n48 89 c7\ne8 1a 34 00 00\n85 c0\n75 10\n48 8b 44 24 08\n48 ff c8\n48 3d ff ff ff 7f\n72 09\n48 c7 44 24 08 50 00 00 00\n8b 44 24 08\n48 83 c4 18\nc3\n'
p712
S'.text:0000000000402fb0\n.text:0000000000402fb4\n.text:0000000000402fb9\n.text:0000000000402fbe\n.text:0000000000402fc3\n.text:0000000000402fc5\n.text:0000000000402fc7\n.text:0000000000402fcc\n.text:0000000000402fce\n.text:0000000000402fd0\n.text:0000000000402fd5\n.text:0000000000402fda\n.text:0000000000402fdd\n.text:0000000000402fdf\n.text:0000000000402fe4\n.text:0000000000402fe6\n.text:0000000000402fe8\n.text:0000000000402fee\n.text:0000000000402ff1\n.text:0000000000402ff6\n.text:0000000000402ff8\n.text:0000000000402ffa\n.text:0000000000402fff\n.text:0000000000403002\n.text:0000000000403008\n.text:000000000040300a\n.text:0000000000403013\n.text:0000000000403017\n.text:000000000040301b\n'
p713
tp714
sS'set_quoting_style'
p715
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p716
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p717
S'TEST RDI,RDI\nMOV EAX,0x60e3b0\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p718
S'48 85 ff\nb8 b0 e3 60 00\n48 0f 45 c7\n89 30\nc3\n'
p719
S'.text:0000000000404430\n.text:0000000000404433\n.text:0000000000404438\n.text:000000000040443c\n.text:000000000040443e\n'
p720
tp721
sS'textdomain'
p722
(S'\n__stdcall textdomain()\n'
p723
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_0060e070)();\u000a  return;\u000a}\u000a\u000a
p724
S'JMP qword ptr [0x0060e070]\n'
p725
S'ff 25 ba ca 20 00\n'
p726
S'.plt:00000000004015b0\n'
p727
tp728
sS'xmemdup'
p729
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p730
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p731
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x00406150\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401730\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p732
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 7c b4 ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p733
S'.text:0000000000406290\n.text:0000000000406292\n.text:0000000000406294\n.text:0000000000406295\n.text:0000000000406298\n.text:000000000040629b\n.text:000000000040629e\n.text:00000000004062a3\n.text:00000000004062a6\n.text:00000000004062a9\n.text:00000000004062ac\n.text:00000000004062af\n.text:00000000004062b4\n.text:00000000004062b7\n.text:00000000004062b8\n.text:00000000004062ba\n.text:00000000004062bc\n'
p734
tp735
sS'get_quoting_style'
p736
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p737
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p738
S'TEST RDI,RDI\nMOV EAX,0x60e3b0\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p739
S'48 85 ff\nb8 b0 e3 60 00\n48 0f 45 c7\n8b 00\nc3\n'
p740
S'.text:0000000000404420\n.text:0000000000404423\n.text:0000000000404428\n.text:000000000040442c\n.text:000000000040442e\n'
p741
tp742
sS'ferror_unlocked'
p743
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p744
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_0060e110)();\u000a  return iVar1;\u000a}\u000a\u000a
p745
S'JMP qword ptr [0x0060e110]\n'
p746
S'ff 25 1a ca 20 00\n'
p747
S'.plt:00000000004016f0\n'
p748
tp749
sS'exit'
p750
(S'\n__stdcall exit(int __status)\n'
p751
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_0060e1e8)();\u000a  return;\u000a}\u000a\u000a
p752
S'JMP qword ptr [0x0060e1e8]\n'
p753
S'ff 25 42 c9 20 00\n'
p754
S'.plt:00000000004018a0\n'
p755
tp756
sS'locale_charset'
p757
(S'\n__stdcall locale_charset()\n'
p758
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = \u000a         "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a         + 0xca;\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_00406e2d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_00406e2d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p759
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x00401780\nTEST RAX,RAX\nMOV R14D,0x40b1c9\nCMOVNZ R14,RAX\nCALL 0x00406e40\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00406e05\nJMP 0x00406e2d\nMOV RDI,RBX\nCALL 0x00401610\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401610\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x00406e2d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00406e20\nCMP BPL,0x2a\nJNZ 0x00406de0\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00406de0\nMOV RDI,RBX\nCALL 0x00401610\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x40bc58\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p760
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 c2 a9 ff ff\n48 85 c0\n41 be c9 b1 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 28 a8 ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 1a a8 ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 00 a9 ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 e8 a7 ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 58 bc 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p761
S'.text:0000000000406db0\n.text:0000000000406db1\n.text:0000000000406db3\n.text:0000000000406db4\n.text:0000000000406db9\n.text:0000000000406dbe\n.text:0000000000406dc1\n.text:0000000000406dc7\n.text:0000000000406dcb\n.text:0000000000406dd0\n.text:0000000000406dd3\n.text:0000000000406dd6\n.text:0000000000406dd9\n.text:0000000000406ddb\n.text:0000000000406de0\n.text:0000000000406de3\n.text:0000000000406de8\n.text:0000000000406dec\n.text:0000000000406df1\n.text:0000000000406df6\n.text:0000000000406dfb\n.text:0000000000406e00\n.text:0000000000406e03\n.text:0000000000406e05\n.text:0000000000406e08\n.text:0000000000406e0b\n.text:0000000000406e10\n.text:0000000000406e12\n.text:0000000000406e14\n.text:0000000000406e18\n.text:0000000000406e1a\n.text:0000000000406e1e\n.text:0000000000406e20\n.text:0000000000406e23\n.text:0000000000406e28\n.text:0000000000406e2d\n.text:0000000000406e31\n.text:0000000000406e36\n.text:0000000000406e3a\n.text:0000000000406e3b\n.text:0000000000406e3d\n.text:0000000000406e3e\n'
p762
tp763
sS'set_program_name'
p764
(S'\n__stdcall set_program_name(char * argv0)\n'
p765
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p766
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x004043b1\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x00401660\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x0040439b\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x40ab38\nMOV EDX,0x7\nCALL 0x00401540\nTEST EAX,EAX\nJNZ 0x0040439b\nMOV ESI,0x40ab40\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x00401540\nTEST EAX,EAX\nJNZ 0x00404398\nADD R14,0x3\nMOV qword ptr [0x0060e2a0],R14\nMOV RBX,R14\nMOV qword ptr [0x0060e3a8],RBX\nMOV qword ptr [0x0060e2c0],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x0060e300]\nMOV EDI,0x40ab00\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x004018b0\nCALL 0x00401520\n'
p767
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 17 d3 ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 38 ab 40 00\nba 07 00 00 00\ne8 cd d1 ff ff\n85 c0\n75 24\nbe 40 ab 40 00\nba 03 00 00 00\n4c 89 f7\ne8 b7 d1 ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 08 9f 20 00\n4c 89 f3\n48 89 1d 06 a0 20 00\n48 89 1d 17 9f 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d 48 9f 20 00\nbf 00 ab 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 e4 d4 ff ff\ne8 4f d1 ff ff\n'
p768
S'.text:0000000000404330\n.text:0000000000404332\n.text:0000000000404333\n.text:0000000000404334\n.text:0000000000404337\n.text:000000000040433a\n.text:000000000040433c\n.text:0000000000404341\n.text:0000000000404344\n.text:0000000000404349\n.text:000000000040434c\n.text:0000000000404350\n.text:0000000000404354\n.text:0000000000404357\n.text:000000000040435a\n.text:000000000040435e\n.text:0000000000404360\n.text:0000000000404364\n.text:0000000000404369\n.text:000000000040436e\n.text:0000000000404373\n.text:0000000000404375\n.text:0000000000404377\n.text:000000000040437c\n.text:0000000000404381\n.text:0000000000404384\n.text:0000000000404389\n.text:000000000040438b\n.text:000000000040438d\n.text:0000000000404391\n.text:0000000000404398\n.text:000000000040439b\n.text:00000000004043a2\n.text:00000000004043a9\n.text:00000000004043ad\n.text:00000000004043ae\n.text:00000000004043b0\n.text:00000000004043b1\n.text:00000000004043b8\n.text:00000000004043bd\n.text:00000000004043c2\n.text:00000000004043c7\n.text:00000000004043cc\n'
p769
tp770
sS'quotearg_buffer'
p771
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p772
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p773
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x60e3b0\nCMOVNZ RBP,R8\nCALL 0x00401530\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x00404550\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p774
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd b0 e3 60 00\n49 0f 45 e8\ne8 38 d0 ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p775
S'.text:00000000004044d0\n.text:00000000004044d1\n.text:00000000004044d3\n.text:00000000004044d5\n.text:00000000004044d7\n.text:00000000004044d9\n.text:00000000004044da\n.text:00000000004044db\n.text:00000000004044de\n.text:00000000004044e1\n.text:00000000004044e4\n.text:00000000004044e7\n.text:00000000004044ea\n.text:00000000004044ef\n.text:00000000004044f3\n.text:00000000004044f8\n.text:00000000004044fb\n.text:00000000004044fd\n.text:0000000000404501\n.text:0000000000404505\n.text:0000000000404509\n.text:000000000040450d\n.text:0000000000404510\n.text:0000000000404513\n.text:0000000000404516\n.text:0000000000404519\n.text:000000000040451c\n.text:000000000040451f\n.text:0000000000404523\n.text:0000000000404524\n.text:0000000000404529\n.text:000000000040452d\n.text:0000000000404531\n.text:0000000000404533\n.text:0000000000404537\n.text:0000000000404538\n.text:000000000040453a\n.text:000000000040453c\n.text:000000000040453e\n.text:0000000000404540\n.text:0000000000404541\n'
p776
tp777
sS'quotearg_colon'
p778
(S'\n__stdcall quotearg_colon(char * arg)\n'
p779
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p780
S'MOV ESI,0x3a\nJMP 0x004056b0\n'
p781
S'be 3a 00 00 00\neb e9\n'
p782
S'.text:00000000004056c0\n.text:00000000004056c5\n'
p783
tp784
sS'xstrtol'
p785
(S'\n__stdcall xstrtol(char * s, char * * ptr, long * val, char * valid_suffixes)\n'
p786
V\u000astrtol_error xstrtol(char *s,char **ptr,long *val,char *valid_suffixes)\u000a\u000a{\u000a  char cVar1;\u000a  strtol_error sVar2;\u000a  int *piVar3;\u000a  char *pcVar4;\u000a  char *pcVar5;\u000a  long lVar6;\u000a  char *__s;\u000a  char **__endptr;\u000a  strtol_error sVar7;\u000a  strtol_error sVar8;\u000a  long local_40;\u000a  char *local_38;\u000a  \u000a  if (0x24 < (uint)val) {\u000a                    /* WARNING: Subroutine does not return */\u000a    __assert_fail("0 <= strtol_base && strtol_base <= 36","lib/xstrtol.c",0x60,\u000a                  "strtol_error xstrtol(const char *, char **, int, long *, const char *)");\u000a  }\u000a  __endptr = &local_38;\u000a  if (ptr != (char **)0x0) {\u000a    __endptr = ptr;\u000a  }\u000a  piVar3 = __errno_location();\u000a  *piVar3 = 0;\u000a  local_40 = strtol(s,__endptr,(uint)val);\u000a  if (*__endptr == s) {\u000a    if (__s == (char *)0x0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    cVar1 = **__endptr;\u000a    if (cVar1 == 0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    pcVar4 = strchr(__s,(int)cVar1);\u000a    if (pcVar4 == (char *)0x0) {\u000a      return LONGINT_INVALID;\u000a    }\u000a    local_40 = 1;\u000a    sVar7 = LONGINT_OK;\u000a  }\u000a  else {\u000a    if (*piVar3 == 0) {\u000a      sVar7 = LONGINT_OK;\u000a    }\u000a    else {\u000a      if (*piVar3 != 0x22) {\u000a        return LONGINT_INVALID;\u000a      }\u000a      sVar7 = LONGINT_OVERFLOW;\u000a    }\u000a    sVar8 = sVar7;\u000a    if (__s == (char *)0x0) goto LAB_00406634;\u000a  }\u000a  pcVar4 = *__endptr;\u000a  sVar8 = sVar7;\u000a  if (*pcVar4 == 0) goto LAB_00406634;\u000a  pcVar5 = strchr(__s,(int)*pcVar4);\u000a  if (pcVar5 == (char *)0x0) goto switchD_00406549_caseD_43;\u000a  pcVar5 = strchr(__s,0x30);\u000a  if (pcVar5 == (char *)0x0) {\u000aLAB_00406527:\u000a    lVar6 = 1;\u000a  }\u000a  else {\u000a    cVar1 = pcVar4[1];\u000a    if ((cVar1 == 'B') || (cVar1 == 'D')) {\u000a      lVar6 = 2;\u000a    }\u000a    else {\u000a      if (cVar1 != 'i') goto LAB_00406527;\u000a      lVar6 = (ulong)(pcVar4[2] == 'B') * 2 + 1;\u000a    }\u000a  }\u000a  sVar2 = LONGINT_OK;\u000a  switch(**__endptr) {\u000a  case 'B':\u000a    goto LAB_00406611;\u000a  default:\u000aswitchD_00406549_caseD_43:\u000a    *(long *)valid_suffixes = local_40;\u000a    return sVar7 | LONGINT_INVALID_SUFFIX_CHAR;\u000a  case 'E':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'G':\u000a  case 'g':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'K':\u000a  case 'k':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'M':\u000a  case 'm':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'P':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'T':\u000a  case 't':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'Y':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'Z':\u000a    sVar2 = bkm_scale_by_power(&local_40);\u000a    break;\u000a  case 'b':\u000a    goto LAB_00406611;\u000a  case 'c':\u000a    break;\u000a  case 'w':\u000aLAB_00406611:\u000a    sVar2 = bkm_scale(&local_40);\u000a  }\u000a  pcVar4 = *__endptr;\u000a  *__endptr = pcVar4 + lVar6;\u000a  sVar8 = sVar2 | sVar7 | LONGINT_INVALID_SUFFIX_CHAR;\u000a  if (pcVar4[lVar6] == 0) {\u000a    sVar8 = sVar2 | sVar7;\u000a  }\u000aLAB_00406634:\u000a  *(long *)valid_suffixes = local_40;\u000a  return sVar8;\u000a}\u000a\u000a
p787
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x18\nMOV R13,R8\nMOV R14,RCX\nMOV EBP,EDX\nMOV R15,RDI\nCMP EBP,0x25\nJNC 0x0040664e\nTEST RSI,RSI\nLEA R12,[RSP + 0x10]\nCMOVNZ R12,RSI\nCALL 0x00401530\nMOV RBX,RAX\nMOV dword ptr [RBX],0x0\nMOV RDI,R15\nMOV RSI,R12\nMOV EDX,EBP\nCALL 0x00401720\nMOV qword ptr [RSP + 0x8],RAX\nMOV RAX,qword ptr [R12]\nCMP RAX,R15\nJZ 0x0040648c\nMOV EAX,dword ptr [RBX]\nTEST EAX,EAX\nJZ 0x004064c5\nMOV R15D,0x4\nCMP EAX,0x22\nJNZ 0x0040663c\nMOV R15D,0x1\nTEST R13,R13\nJNZ 0x004064d1\nJMP 0x00406634\nMOV R15D,0x4\nTEST R13,R13\nJZ 0x0040663c\nMOVSX ESI,byte ptr [RAX]\nTEST ESI,ESI\nJZ 0x0040663c\nMOV RDI,R13\nCALL 0x00401650\nTEST RAX,RAX\nJZ 0x0040663c\nMOV qword ptr [RSP + 0x8],0x1\nXOR R15D,R15D\nJMP 0x004064d1\nXOR R15D,R15D\nTEST R13,R13\nJZ 0x00406634\nMOV RBX,qword ptr [R12]\nMOVSX ESI,byte ptr [RBX]\nTEST ESI,ESI\nJZ 0x00406634\nMOV RDI,R13\nCALL 0x00401650\nTEST RAX,RAX\nJZ 0x00406564\nMOV ESI,0x30\nMOV RDI,R13\nCALL 0x00401650\nMOV ESI,0x400\nTEST RAX,RAX\nJZ 0x00406527\nMOVSX EAX,byte ptr [RBX + 0x1]\nCMP EAX,0x42\nJZ 0x0040652e\nCMP EAX,0x44\nJZ 0x0040652e\nCMP EAX,0x69\nJNZ 0x00406527\nXOR EAX,EAX\nCMP byte ptr [RBX + 0x2],0x42\nSETZ AL\nLEA RBX,[RAX + RAX*0x1 + 0x1]\nJMP 0x00406538\nMOV EBX,0x1\nJMP 0x00406538\nMOV ESI,0x3e8\nMOV EBX,0x2\nMOV RAX,qword ptr [R12]\nMOVSX ECX,byte ptr [RAX]\nADD ECX,-0x42\nCMP ECX,0x35\nJA 0x00406564\nXOR EAX,EAX\nJMP qword ptr [0x40b410 + RCX*0x8]\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x3\nCALL 0x004066c0\nJMP 0x00406616\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [R14],RAX\nOR R15D,0x2\nJMP 0x0040663c\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x1\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x2\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x4\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV ESI,0x400\nJMP 0x00406611\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x6\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x5\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x8\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV EDX,0x7\nCALL 0x004066c0\nJMP 0x00406616\nLEA RDI,[RSP + 0x8]\nMOV ESI,0x200\nJMP 0x00406611\nLEA RDI,[RSP + 0x8]\nMOV ESI,0x2\nCALL 0x00406670\nOR EAX,R15D\nMOV RCX,qword ptr [R12]\nLEA RDX,[RCX + RBX*0x1]\nMOV qword ptr [R12],RDX\nMOV R15D,EAX\nOR R15D,0x2\nCMP byte ptr [RCX + RBX*0x1],0x0\nCMOVZ R15D,EAX\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [R14],RAX\nMOV EAX,R15D\nADD RSP,0x18\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x40b5c0\nMOV ESI,0x40b7e2\nMOV EDX,0x60\nMOV ECX,0x40b5e6\nCALL 0x00401680\n'
p788
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 18\n4d 89 c5\n49 89 ce\n89 d5\n49 89 ff\n83 fd 25\n0f 83 1c 02 00 00\n48 85 f6\n4c 8d 64 24 10\n4c 0f 45 e6\ne8 ed b0 ff ff\n48 89 c3\nc7 03 00 00 00 00\n4c 89 ff\n4c 89 e6\n89 ea\ne8 c7 b2 ff ff\n48 89 44 24 08\n49 8b 04 24\n4c 39 f8\n74 25\n8b 03\n85 c0\n74 58\n41 bf 04 00 00 00\n83 f8 22\n0f 85 c0 01 00 00\n41 bf 01 00 00 00\n4d 85 ed\n75 4a\ne9 a8 01 00 00\n41 bf 04 00 00 00\n4d 85 ed\n0f 84 a1 01 00 00\n0f be 30\n85 f6\n0f 84 96 01 00 00\n4c 89 ef\ne8 a2 b1 ff ff\n48 85 c0\n0f 84 85 01 00 00\n48 c7 44 24 08 01 00 00 00\n45 31 ff\neb 0c\n45 31 ff\n4d 85 ed\n0f 84 63 01 00 00\n49 8b 1c 24\n0f be 33\n85 f6\n0f 84 54 01 00 00\n4c 89 ef\ne8 68 b1 ff ff\n48 85 c0\n74 77\nbe 30 00 00 00\n4c 89 ef\ne8 56 b1 ff ff\nbe 00 04 00 00\n48 85 c0\n74 23\n0f be 43 01\n83 f8 42\n74 21\n83 f8 44\n74 1c\n83 f8 69\n75 10\n31 c0\n80 7b 02 42\n0f 94 c0\n48 8d 5c 00 01\neb 11\nbb 01 00 00 00\neb 0a\nbe e8 03 00 00\nbb 02 00 00 00\n49 8b 04 24\n0f be 08\n83 c1 be\n83 f9 35\n77 1d\n31 c0\nff 24 cd 10 b4 40 00\n48 8d 7c 24 08\nba 03 00 00 00\ne8 61 01 00 00\ne9 b2 00 00 00\n48 8b 44 24 08\n49 89 06\n41 83 cf 02\ne9 c7 00 00 00\n48 8d 7c 24 08\nba 01 00 00 00\ne8 3c 01 00 00\ne9 8d 00 00 00\n48 8d 7c 24 08\nba 02 00 00 00\ne8 28 01 00 00\neb 7c\n48 8d 7c 24 08\nba 04 00 00 00\ne8 17 01 00 00\neb 6b\n48 8d 7c 24 08\nbe 00 04 00 00\neb 5a\n48 8d 7c 24 08\nba 06 00 00 00\ne8 fa 00 00 00\neb 4e\n48 8d 7c 24 08\nba 05 00 00 00\ne8 e9 00 00 00\neb 3d\n48 8d 7c 24 08\nba 08 00 00 00\ne8 d8 00 00 00\neb 2c\n48 8d 7c 24 08\nba 07 00 00 00\ne8 c7 00 00 00\neb 1b\n48 8d 7c 24 08\nbe 00 02 00 00\neb 0a\n48 8d 7c 24 08\nbe 02 00 00 00\ne8 5a 00 00 00\n44 09 f8\n49 8b 0c 24\n48 8d 14 19\n49 89 14 24\n41 89 c7\n41 83 cf 02\n80 3c 19 00\n44 0f 44 f8\n48 8b 44 24 08\n49 89 06\n44 89 f8\n48 83 c4 18\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nbf c0 b5 40 00\nbe e2 b7 40 00\nba 60 00 00 00\nb9 e6 b5 40 00\ne8 19 b0 ff ff\n'
p789
S'.text:0000000000406410\n.text:0000000000406411\n.text:0000000000406413\n.text:0000000000406415\n.text:0000000000406417\n.text:0000000000406419\n.text:000000000040641a\n.text:000000000040641e\n.text:0000000000406421\n.text:0000000000406424\n.text:0000000000406426\n.text:0000000000406429\n.text:000000000040642c\n.text:0000000000406432\n.text:0000000000406435\n.text:000000000040643a\n.text:000000000040643e\n.text:0000000000406443\n.text:0000000000406446\n.text:000000000040644c\n.text:000000000040644f\n.text:0000000000406452\n.text:0000000000406454\n.text:0000000000406459\n.text:000000000040645e\n.text:0000000000406462\n.text:0000000000406465\n.text:0000000000406467\n.text:0000000000406469\n.text:000000000040646b\n.text:000000000040646d\n.text:0000000000406473\n.text:0000000000406476\n.text:000000000040647c\n.text:0000000000406482\n.text:0000000000406485\n.text:0000000000406487\n.text:000000000040648c\n.text:0000000000406492\n.text:0000000000406495\n.text:000000000040649b\n.text:000000000040649e\n.text:00000000004064a0\n.text:00000000004064a6\n.text:00000000004064a9\n.text:00000000004064ae\n.text:00000000004064b1\n.text:00000000004064b7\n.text:00000000004064c0\n.text:00000000004064c3\n.text:00000000004064c5\n.text:00000000004064c8\n.text:00000000004064cb\n.text:00000000004064d1\n.text:00000000004064d5\n.text:00000000004064d8\n.text:00000000004064da\n.text:00000000004064e0\n.text:00000000004064e3\n.text:00000000004064e8\n.text:00000000004064eb\n.text:00000000004064ed\n.text:00000000004064f2\n.text:00000000004064f5\n.text:00000000004064fa\n.text:00000000004064ff\n.text:0000000000406502\n.text:0000000000406504\n.text:0000000000406508\n.text:000000000040650b\n.text:000000000040650d\n.text:0000000000406510\n.text:0000000000406512\n.text:0000000000406515\n.text:0000000000406517\n.text:0000000000406519\n.text:000000000040651d\n.text:0000000000406520\n.text:0000000000406525\n.text:0000000000406527\n.text:000000000040652c\n.text:000000000040652e\n.text:0000000000406533\n.text:0000000000406538\n.text:000000000040653c\n.text:000000000040653f\n.text:0000000000406542\n.text:0000000000406545\n.text:0000000000406547\n.text:0000000000406549\n.text:0000000000406550\n.text:0000000000406555\n.text:000000000040655a\n.text:000000000040655f\n.text:0000000000406564\n.text:0000000000406569\n.text:000000000040656c\n.text:0000000000406570\n.text:0000000000406575\n.text:000000000040657a\n.text:000000000040657f\n.text:0000000000406584\n.text:0000000000406589\n.text:000000000040658e\n.text:0000000000406593\n.text:0000000000406598\n.text:000000000040659a\n.text:000000000040659f\n.text:00000000004065a4\n.text:00000000004065a9\n.text:00000000004065ab\n.text:00000000004065b0\n.text:00000000004065b5\n.text:00000000004065b7\n.text:00000000004065bc\n.text:00000000004065c1\n.text:00000000004065c6\n.text:00000000004065c8\n.text:00000000004065cd\n.text:00000000004065d2\n.text:00000000004065d7\n.text:00000000004065d9\n.text:00000000004065de\n.text:00000000004065e3\n.text:00000000004065e8\n.text:00000000004065ea\n.text:00000000004065ef\n.text:00000000004065f4\n.text:00000000004065f9\n.text:00000000004065fb\n.text:0000000000406600\n.text:0000000000406605\n.text:0000000000406607\n.text:000000000040660c\n.text:0000000000406611\n.text:0000000000406616\n.text:0000000000406619\n.text:000000000040661d\n.text:0000000000406621\n.text:0000000000406625\n.text:0000000000406628\n.text:000000000040662c\n.text:0000000000406630\n.text:0000000000406634\n.text:0000000000406639\n.text:000000000040663c\n.text:000000000040663f\n.text:0000000000406643\n.text:0000000000406644\n.text:0000000000406646\n.text:0000000000406648\n.text:000000000040664a\n.text:000000000040664c\n.text:000000000040664d\n.text:000000000040664e\n.text:0000000000406653\n.text:0000000000406658\n.text:000000000040665d\n.text:0000000000406662\n'
p790
tp791
sS'set_mode'
p792
(S'\n__stdcall set_mode()\n'
p793
V\u000a_Bool set_mode(void)\u000a\u000a{\u000a  char *__s1;\u000a  int iVar1;\u000a  tcflag_t *ptVar2;\u000a  uint uVar3;\u000a  tcflag_t tVar4;\u000a  uint uVar5;\u000a  byte in_SIL;\u000a  char **in_RDI;\u000a  \u000a  if ((in_SIL != 0) && ((*(byte *)((long)in_RDI + 0xc) & 4) == 0)) {\u000a    return false;\u000a  }\u000a  ptVar2 = mode_type_flag();\u000a  if (ptVar2 != (tcflag_t *)0x0) {\u000a    uVar3 = ~(uint)in_RDI[3] & *ptVar2;\u000a    if (in_SIL == 0) {\u000a      tVar4 = uVar3 | (uint)in_RDI[2];\u000a    }\u000a    else {\u000a      tVar4 = uVar3 & ~(uint)in_RDI[2];\u000a    }\u000a    *ptVar2 = tVar4;\u000a    return true;\u000a  }\u000a  __s1 = *in_RDI;\u000a  iVar1 = strcmp(__s1,"evenp");\u000a  if ((iVar1 == 0) || (iVar1 = strcmp(__s1,"parity"), iVar1 == 0)) {\u000a    uVar3 = 0xfffffccf;\u000a    if (in_SIL != 0) {\u000a      uVar3 = 0xfffffecf;\u000a    }\u000a    uVar5 = 0x120;\u000a  }\u000a  else {\u000a    iVar1 = strcmp(__s1,"oddp");\u000a    if (iVar1 != 0) {\u000a      if (((*__s1 == 'n') && (__s1[1] == 'l')) && (__s1[2] == 0)) {\u000a        if (in_SIL != 0) {\u000a          mode.c_iflag = mode.c_iflag & 0xfffffe3f | 0x100;\u000a          mode.c_oflag = mode.c_oflag & 0xffffffd3 | 4;\u000a          return true;\u000a        }\u000a        mode.c_iflag = mode.c_iflag & 0xfffffeff;\u000a        mode.c_oflag = mode.c_oflag & 0xfffffffb;\u000a        return true;\u000a      }\u000a      __s1 = *in_RDI;\u000a      if (((*__s1 == 'e') && (__s1[1] == 'k')) && (__s1[2] == 0)) {\u000a        mode.c_cc._2_2_ = 0x157f;\u000a        return true;\u000a      }\u000a      __s1 = *in_RDI;\u000a      iVar1 = strcmp(__s1,"sane");\u000a      if (iVar1 == 0) {\u000a        sane_mode();\u000a        return true;\u000a      }\u000a      iVar1 = strcmp(__s1,"cbreak");\u000a      if (iVar1 == 0) {\u000a        if (in_SIL != 0) {\u000a          mode.c_lflag = mode.c_lflag | 2;\u000a          return true;\u000a        }\u000a        mode.c_lflag = mode.c_lflag & 0xfffffffd;\u000a        return true;\u000a      }\u000a      iVar1 = strcmp(__s1,"pass8");\u000a      if (iVar1 == 0) {\u000a        if (in_SIL != 0) {\u000a          mode.c_iflag = mode.c_iflag | 0x20;\u000a          mode.c_cflag = mode.c_cflag & 0xfffffecf | 0x120;\u000a          return true;\u000a        }\u000a        mode.c_iflag = mode.c_iflag & 0xffffffdf;\u000a        mode.c_cflag = mode.c_cflag & 0xfffffecf | 0x30;\u000a        return true;\u000a      }\u000a      iVar1 = strcmp(__s1,"litout");\u000a      if (iVar1 == 0) {\u000a        if (in_SIL != 0) {\u000a          mode.c_iflag = mode.c_iflag | 0x20;\u000a          mode.c_oflag = mode.c_oflag | 1;\u000a          mode.c_cflag = mode.c_cflag & 0xfffffecf | 0x120;\u000a          return true;\u000a        }\u000a        mode.c_iflag = mode.c_iflag & 0xffffffdf;\u000a        mode.c_oflag = mode.c_oflag & 0xfffffffe;\u000a        mode.c_cflag = mode.c_cflag & 0xfffffecf | 0x30;\u000a        return true;\u000a      }\u000a      if (((*__s1 != 'r') || (__s1[1] != 'a')) || ((__s1[2] != 'w' || (__s1[3] != 0)))) {\u000a        __s1 = *in_RDI;\u000a        iVar1 = strcmp(__s1,"cooked");\u000a        if (iVar1 != 0) {\u000a          iVar1 = strcmp(__s1,"decctlq");\u000a          if (iVar1 == 0) {\u000a            if (in_SIL != 0) {\u000a              mode.c_iflag = mode.c_iflag | 0x800;\u000a              return true;\u000a            }\u000a            mode.c_iflag = mode.c_iflag & 0xfffff7ff;\u000a            return true;\u000a          }\u000a          iVar1 = strcmp(__s1,"tabs");\u000a          if (iVar1 == 0) {\u000a            if (in_SIL != 0) {\u000a              mode.c_oflag = mode.c_oflag | 0x1800;\u000a              return true;\u000a            }\u000a            mode.c_oflag = mode.c_oflag & 0xffffe7ff;\u000a            return true;\u000a          }\u000a          iVar1 = strcmp(__s1,"lcase");\u000a          if ((iVar1 == 0) || (iVar1 = strcmp(__s1,"LCASE"), iVar1 == 0)) {\u000a            if (in_SIL != 0) {\u000a              mode.c_iflag = mode.c_iflag & 0xfffffdff;\u000a              mode.c_oflag = mode.c_oflag & 0xfffffffd;\u000a              mode.c_lflag = mode.c_lflag & 0xfffffffb;\u000a              return true;\u000a            }\u000a            mode.c_iflag = mode.c_iflag | 0x200;\u000a            mode.c_oflag = mode.c_oflag | 2;\u000a            mode.c_lflag = mode.c_lflag | 4;\u000a            return true;\u000a          }\u000a          if ((((*__s1 == 'c') && (__s1[1] == 'r')) && (__s1[2] == 't')) && (__s1[3] == 0)) {\u000a            mode.c_lflag = mode.c_lflag | 0xa10;\u000a            return true;\u000a          }\u000a          __s1 = *in_RDI;\u000a          if (*__s1 != 'd') {\u000a            return true;\u000a          }\u000a          if (__s1[1] != 'e') {\u000a            return true;\u000a          }\u000a          if (__s1[2] != 'c') {\u000a            return true;\u000a          }\u000a          if (__s1[3] == 0) {\u000a            mode.c_lflag = mode.c_lflag | 0xa10;\u000a            mode.c_iflag = mode.c_iflag & 0xfffff7ff;\u000a            mode.c_cc[0] = 3;\u000a            mode.c_cc._2_2_ = 0x157f;\u000a            return true;\u000a          }\u000a          return true;\u000a        }\u000a      }\u000a      if (((byte)(in_SIL ^ 1 | **in_RDI != 'r') == 1) && ((**in_RDI != 'c' | in_SIL) != 0)) {\u000a        mode.c_oflag = mode.c_oflag & 0xfffffffe;\u000a        mode.c_lflag = mode.c_lflag & 0xfffffff8;\u000a        mode.c_iflag = 0;\u000a        mode.c_cc._5_2_ = 0x100;\u000a        return true;\u000a      }\u000a      mode.c_iflag = mode.c_iflag | 0x526;\u000a      mode.c_oflag = mode.c_oflag | 1;\u000a      mode.c_lflag = mode.c_lflag | 3;\u000a      return true;\u000a    }\u000a    uVar3 = 0xfffffccf;\u000a    if (in_SIL != 0) {\u000a      uVar3 = 0xfffffecf;\u000a    }\u000a    uVar5 = 800;\u000a  }\u000a  if (in_SIL != 0) {\u000a    uVar5 = 0x30;\u000a  }\u000a  mode.c_cflag = uVar3 & mode.c_cflag | uVar5;\u000a  return true;\u000a}\u000a\u000a
p794
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R15D,ESI\nMOV RBX,RDI\nTEST R15B,R15B\nJZ 0x0040306f\nTEST byte ptr [RBX + 0xc],0x4\nJNZ 0x0040306f\nXOR EAX,EAX\nJMP 0x00403286\nMOV EDI,dword ptr [RBX + 0x8]\nCALL 0x004039d0\nTEST RAX,RAX\nJZ 0x0040309e\nMOV ESI,dword ptr [RAX]\nMOV RDX,qword ptr [RBX + 0x10]\nMOV RCX,qword ptr [RBX + 0x18]\nNOT RCX\nAND RCX,RSI\nTEST R15B,R15B\nJZ 0x00403253\nNOT EDX\nAND ECX,EDX\nJMP 0x00403255\nMOV RBP,qword ptr [RBX]\nMOV ESI,0x409675\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403259\nMOV ESI,0x40967b\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403259\nMOV ESI,0x409682\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403291\nCMP byte ptr [RBP],0x6e\nJNZ 0x004030f6\nCMP byte ptr [RBP + 0x1],0x6c\nJNZ 0x004030f6\nCMP byte ptr [RBP + 0x2],0x0\nJZ 0x00403301\nMOV RAX,qword ptr [RBX]\nCMP byte ptr [RAX],0x65\nJNZ 0x0040310e\nCMP byte ptr [RAX + 0x1],0x6b\nJNZ 0x0040310e\nCMP byte ptr [RAX + 0x2],0x0\nJZ 0x00403339\nMOV R14,qword ptr [RBX]\nMOV ESI,0x40968a\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004032ad\nMOV ESI,0x4096a7\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004032b4\nMOV ESI,0x40969a\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004032d0\nMOV ESI,0x4096a0\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403347\nCMP byte ptr [R14],0x72\nJNZ 0x00403184\nCMP byte ptr [R14 + 0x1],0x61\nJNZ 0x00403184\nCMP byte ptr [R14 + 0x2],0x77\nJNZ 0x00403184\nCMP byte ptr [R14 + 0x3],0x0\nJZ 0x004033a1\nMOV R14,qword ptr [RBX]\nMOV ESI,0x40968f\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004033a1\nMOV ESI,0x4096ae\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x0040342a\nMOV ESI,0x4096b6\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004034a5\nMOV ESI,0x4096bb\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x0040346b\nMOV ESI,0x4096c1\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x0040346b\nCMP byte ptr [R14],0x63\nJNZ 0x0040320f\nCMP byte ptr [R14 + 0x1],0x72\nJNZ 0x0040320f\nCMP byte ptr [R14 + 0x2],0x74\nJNZ 0x0040320f\nCMP byte ptr [R14 + 0x3],0x0\nJZ 0x004034ec\nMOV RCX,qword ptr [RBX]\nMOV AL,0x1\nCMP byte ptr [RCX],0x64\nJNZ 0x00403286\nCMP byte ptr [RCX + 0x1],0x65\nJNZ 0x00403286\nCMP byte ptr [RCX + 0x2],0x63\nJNZ 0x00403286\nCMP byte ptr [RCX + 0x3],0x0\nJNZ 0x00403286\nMOV byte ptr [0x0060e31d],0x3\nMOV byte ptr [0x0060e31f],0x7f\nMOV byte ptr [0x0060e320],0x15\nOR dword ptr [0x0060e318],0xa10\nAND byte ptr [0x0060e30d],0xf7\nJMP 0x00403286\nOR ECX,EDX\nMOV dword ptr [RAX],ECX\nJMP 0x00403284\nTEST R15B,R15B\nMOV EAX,0xfffffecf\nMOV ECX,0xfffffccf\nCMOVNZ ECX,EAX\nMOV EAX,0x30\nMOV EDX,0x120\nCMOVNZ EDX,EAX\nAND ECX,dword ptr [0x0060e314]\nOR ECX,EDX\nMOV dword ptr [0x0060e314],ECX\nMOV AL,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nTEST R15B,R15B\nMOV EAX,0xfffffecf\nMOV ECX,0xfffffccf\nCMOVNZ ECX,EAX\nMOV EAX,0x30\nMOV EDX,0x320\nJMP 0x00403273\nCALL 0x004039f0\nJMP 0x00403284\nMOV EAX,dword ptr [0x0060e318]\nMOV ECX,EAX\nAND ECX,0xfffffffd\nOR EAX,0x2\nTEST R15B,R15B\nCMOVZ EAX,ECX\nMOV dword ptr [0x0060e318],EAX\nJMP 0x00403284\nMOV EAX,dword ptr [0x0060e30c]\nMOV ECX,0xfffffecf\nAND ECX,dword ptr [0x0060e314]\nTEST R15B,R15B\nJZ 0x0040338a\nOR ECX,0x120\nMOV dword ptr [0x0060e314],ECX\nOR EAX,0x20\nMOV dword ptr [0x0060e30c],EAX\nJMP 0x00403284\nMOV ECX,dword ptr [0x0060e30c]\nMOV EAX,dword ptr [0x0060e310]\nTEST R15B,R15B\nJZ 0x004033f0\nAND ECX,0xfffffe3f\nOR ECX,0x100\nMOV dword ptr [0x0060e30c],ECX\nAND EAX,0xffffffd3\nOR EAX,0x4\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nMOV word ptr [0x0060e31f],0x157f\nJMP 0x00403284\nMOV EAX,dword ptr [0x0060e310]\nMOV ECX,dword ptr [0x0060e30c]\nMOV EDX,0xfffffecf\nAND EDX,dword ptr [0x0060e314]\nTEST R15B,R15B\nJZ 0x0040340a\nOR EDX,0x120\nMOV dword ptr [0x0060e314],EDX\nOR ECX,0x20\nMOV dword ptr [0x0060e30c],ECX\nOR EAX,0x1\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nOR ECX,0x30\nMOV dword ptr [0x0060e314],ECX\nAND EAX,0xffffffdf\nMOV dword ptr [0x0060e30c],EAX\nJMP 0x00403284\nMOV RAX,qword ptr [RBX]\nMOV AL,byte ptr [RAX]\nCMP AL,0x72\nSETNZ CL\nMOV EDX,R15D\nXOR DL,0x1\nOR DL,CL\nCMP AL,0x63\nSETNZ AL\nCMP DL,0x1\nJNZ 0x0040344e\nOR AL,R15B\nJZ 0x0040344e\nMOV dword ptr [0x0060e30c],0x0\nAND byte ptr [0x0060e310],0xfe\nAND byte ptr [0x0060e318],0xf8\nMOV word ptr [0x0060e322],0x100\nJMP 0x00403284\nAND ECX,0xfffffeff\nMOV dword ptr [0x0060e30c],ECX\nAND EAX,0xfffffffb\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nOR EDX,0x30\nMOV dword ptr [0x0060e314],EDX\nAND ECX,0xffffffdf\nMOV dword ptr [0x0060e30c],ECX\nAND EAX,0xfffffffe\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nMOV EAX,dword ptr [0x0060e30c]\nMOV ECX,EAX\nAND ECX,0xfffff7ff\nOR EAX,0x800\nTEST R15B,R15B\nCMOVZ EAX,ECX\nMOV dword ptr [0x0060e30c],EAX\nJMP 0x00403284\nOR dword ptr [0x0060e30c],0x526\nOR byte ptr [0x0060e310],0x1\nOR byte ptr [0x0060e318],0x3\nJMP 0x00403284\nMOV EDX,dword ptr [0x0060e318]\nMOV EAX,dword ptr [0x0060e310]\nMOV ECX,dword ptr [0x0060e30c]\nTEST R15B,R15B\nJZ 0x004034c9\nAND EDX,0xfffffffb\nMOV dword ptr [0x0060e318],EDX\nAND ECX,0xfffffdff\nMOV dword ptr [0x0060e30c],ECX\nAND EAX,0xfffffffd\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nMOV EAX,dword ptr [0x0060e310]\nMOV ECX,EAX\nAND ECX,0xffffe7ff\nOR EAX,0x1800\nTEST R15B,R15B\nCMOVZ EAX,ECX\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nOR EDX,0x4\nMOV dword ptr [0x0060e318],EDX\nOR ECX,0x200\nMOV dword ptr [0x0060e30c],ECX\nOR EAX,0x2\nMOV dword ptr [0x0060e310],EAX\nJMP 0x00403284\nOR dword ptr [0x0060e318],0xa10\nJMP 0x00403284\n'
p795
S'55\n41 57\n41 56\n53\n50\n41 89 f7\n48 89 fb\n45 84 ff\n74 0d\nf6 43 0c 04\n75 07\n31 c0\ne9 17 02 00 00\n8b 7b 08\ne8 59 09 00 00\n48 85 c0\n74 22\n8b 30\n48 8b 53 10\n48 8b 4b 18\n48 f7 d1\n48 21 f1\n45 84 ff\n0f 84 be 01 00 00\nf7 d2\n21 d1\ne9 b7 01 00 00\n48 8b 2b\nbe 75 96 40 00\n48 89 ef\ne8 62 e6 ff ff\n85 c0\n0f 84 a3 01 00 00\nbe 7b 96 40 00\n48 89 ef\ne8 4d e6 ff ff\n85 c0\n0f 84 8e 01 00 00\nbe 82 96 40 00\n48 89 ef\ne8 38 e6 ff ff\n85 c0\n0f 84 b1 01 00 00\n80 7d 00 6e\n75 10\n80 7d 01 6c\n75 0a\n80 7d 02 00\n0f 84 0b 02 00 00\n48 8b 03\n80 38 65\n75 10\n80 78 01 6b\n75 0a\n80 78 02 00\n0f 84 2b 02 00 00\n4c 8b 33\nbe 8a 96 40 00\n4c 89 f7\ne8 f2 e5 ff ff\n85 c0\n0f 84 87 01 00 00\nbe a7 96 40 00\n4c 89 f7\ne8 dd e5 ff ff\n85 c0\n0f 84 79 01 00 00\nbe 9a 96 40 00\n4c 89 f7\ne8 c8 e5 ff ff\n85 c0\n0f 84 80 01 00 00\nbe a0 96 40 00\n4c 89 f7\ne8 b3 e5 ff ff\n85 c0\n0f 84 e2 01 00 00\n41 80 3e 72\n75 19\n41 80 7e 01 61\n75 12\n41 80 7e 02 77\n75 0b\n41 80 7e 03 00\n0f 84 1d 02 00 00\n4c 8b 33\nbe 8f 96 40 00\n4c 89 f7\ne8 7c e5 ff ff\n85 c0\n0f 84 05 02 00 00\nbe ae 96 40 00\n4c 89 f7\ne8 67 e5 ff ff\n85 c0\n0f 84 79 02 00 00\nbe b6 96 40 00\n4c 89 f7\ne8 52 e5 ff ff\n85 c0\n0f 84 df 02 00 00\nbe bb 96 40 00\n4c 89 f7\ne8 3d e5 ff ff\n85 c0\n0f 84 90 02 00 00\nbe c1 96 40 00\n4c 89 f7\ne8 28 e5 ff ff\n85 c0\n0f 84 7b 02 00 00\n41 80 3e 63\n75 19\n41 80 7e 01 72\n75 12\n41 80 7e 02 74\n75 0b\n41 80 7e 03 00\n0f 84 dd 02 00 00\n48 8b 0b\nb0 01\n80 39 64\n75 6d\n80 79 01 65\n75 67\n80 79 02 63\n75 61\n80 79 03 00\n75 5b\nc6 05 eb b0 20 00 03\nc6 05 e6 b0 20 00 7f\nc6 05 e0 b0 20 00 15\n81 0d ce b0 20 00 10 0a 00 00\n80 25 bc b0 20 00 f7\neb 33\n09 d1\n89 08\neb 2b\n45 84 ff\nb8 cf fe ff ff\nb9 cf fc ff ff\n0f 45 c8\nb8 30 00 00 00\nba 20 01 00 00\n0f 45 d0\n23 0d 98 b0 20 00\n09 d1\n89 0d 90 b0 20 00\nb0 01\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n45 84 ff\nb8 cf fe ff ff\nb9 cf fc ff ff\n0f 45 c8\nb8 30 00 00 00\nba 20 03 00 00\neb c6\ne8 3e 07 00 00\neb d0\n8b 05 5e b0 20 00\n89 c1\n83 e1 fd\n83 c8 02\n45 84 ff\n0f 44 c1\n89 05 4a b0 20 00\neb b4\n8b 05 36 b0 20 00\nb9 cf fe ff ff\n23 0d 33 b0 20 00\n45 84 ff\n0f 84 a0 00 00 00\n81 c9 20 01 00 00\n89 0d 1e b0 20 00\n83 c8 20\n89 05 0d b0 20 00\neb 83\n8b 0d 05 b0 20 00\n8b 05 03 b0 20 00\n45 84 ff\n0f 84 da 00 00 00\n81 e1 3f fe ff ff\n81 c9 00 01 00 00\n89 0d e4 af 20 00\n83 e0 d3\n83 c8 04\n89 05 dc af 20 00\ne9 4b ff ff ff\n66 c7 05 dd af 20 00 7f 15\ne9 3d ff ff ff\n8b 05 c3 af 20 00\n8b 0d b9 af 20 00\nba cf fe ff ff\n23 15 b6 af 20 00\n45 84 ff\n0f 84 a3 00 00 00\n81 ca 20 01 00 00\n89 15 a1 af 20 00\n83 c9 20\n89 0d 90 af 20 00\n83 c8 01\n89 05 8b af 20 00\ne9 fa fe ff ff\n83 c9 30\n89 0d 81 af 20 00\n83 e0 df\n89 05 70 af 20 00\ne9 e3 fe ff ff\n48 8b 03\n8a 00\n3c 72\n0f 95 c1\n44 89 fa\n80 f2 01\n08 ca\n3c 63\n0f 95 c0\n80 fa 01\n0f 85 8d 00 00 00\n44 08 f8\n0f 84 84 00 00 00\nc7 05 38 af 20 00 00 00 00 00\n80 25 35 af 20 00 fe\n80 25 36 af 20 00 f8\n66 c7 05 37 af 20 00 00 01\ne9 94 fe ff ff\n81 e1 ff fe ff ff\n89 0d 10 af 20 00\n83 e0 fb\n89 05 0b af 20 00\ne9 7a fe ff ff\n83 ca 30\n89 15 01 af 20 00\n83 e1 df\n89 0d f0 ae 20 00\n83 e0 fe\n89 05 eb ae 20 00\ne9 5a fe ff ff\n8b 05 dc ae 20 00\n89 c1\n81 e1 ff f7 ff ff\n0d 00 08 00 00\n45 84 ff\n0f 44 c1\n89 05 c3 ae 20 00\ne9 36 fe ff ff\n81 0d b4 ae 20 00 26 05 00 00\n80 0d b1 ae 20 00 01\n80 0d b2 ae 20 00 03\ne9 19 fe ff ff\n8b 15 a7 ae 20 00\n8b 05 99 ae 20 00\n8b 0d 8f ae 20 00\n45 84 ff\n74 47\n83 e2 fb\n89 15 8d ae 20 00\n81 e1 ff fd ff ff\n89 0d 75 ae 20 00\n83 e0 fd\n89 05 70 ae 20 00\ne9 df fd ff ff\n8b 05 65 ae 20 00\n89 c1\n81 e1 ff e7 ff ff\n0d 00 18 00 00\n45 84 ff\n0f 44 c1\n89 05 4c ae 20 00\ne9 bb fd ff ff\n83 ca 04\n89 15 46 ae 20 00\n81 c9 00 02 00 00\n89 0d 2e ae 20 00\n83 c8 02\n89 05 29 ae 20 00\ne9 98 fd ff ff\n81 0d 22 ae 20 00 10 0a 00 00\ne9 89 fd ff ff\n'
p796
S'.text:0000000000403050\n.text:0000000000403051\n.text:0000000000403053\n.text:0000000000403055\n.text:0000000000403056\n.text:0000000000403057\n.text:000000000040305a\n.text:000000000040305d\n.text:0000000000403060\n.text:0000000000403062\n.text:0000000000403066\n.text:0000000000403068\n.text:000000000040306a\n.text:000000000040306f\n.text:0000000000403072\n.text:0000000000403077\n.text:000000000040307a\n.text:000000000040307c\n.text:000000000040307e\n.text:0000000000403082\n.text:0000000000403086\n.text:0000000000403089\n.text:000000000040308c\n.text:000000000040308f\n.text:0000000000403095\n.text:0000000000403097\n.text:0000000000403099\n.text:000000000040309e\n.text:00000000004030a1\n.text:00000000004030a6\n.text:00000000004030a9\n.text:00000000004030ae\n.text:00000000004030b0\n.text:00000000004030b6\n.text:00000000004030bb\n.text:00000000004030be\n.text:00000000004030c3\n.text:00000000004030c5\n.text:00000000004030cb\n.text:00000000004030d0\n.text:00000000004030d3\n.text:00000000004030d8\n.text:00000000004030da\n.text:00000000004030e0\n.text:00000000004030e4\n.text:00000000004030e6\n.text:00000000004030ea\n.text:00000000004030ec\n.text:00000000004030f0\n.text:00000000004030f6\n.text:00000000004030f9\n.text:00000000004030fc\n.text:00000000004030fe\n.text:0000000000403102\n.text:0000000000403104\n.text:0000000000403108\n.text:000000000040310e\n.text:0000000000403111\n.text:0000000000403116\n.text:0000000000403119\n.text:000000000040311e\n.text:0000000000403120\n.text:0000000000403126\n.text:000000000040312b\n.text:000000000040312e\n.text:0000000000403133\n.text:0000000000403135\n.text:000000000040313b\n.text:0000000000403140\n.text:0000000000403143\n.text:0000000000403148\n.text:000000000040314a\n.text:0000000000403150\n.text:0000000000403155\n.text:0000000000403158\n.text:000000000040315d\n.text:000000000040315f\n.text:0000000000403165\n.text:0000000000403169\n.text:000000000040316b\n.text:0000000000403170\n.text:0000000000403172\n.text:0000000000403177\n.text:0000000000403179\n.text:000000000040317e\n.text:0000000000403184\n.text:0000000000403187\n.text:000000000040318c\n.text:000000000040318f\n.text:0000000000403194\n.text:0000000000403196\n.text:000000000040319c\n.text:00000000004031a1\n.text:00000000004031a4\n.text:00000000004031a9\n.text:00000000004031ab\n.text:00000000004031b1\n.text:00000000004031b6\n.text:00000000004031b9\n.text:00000000004031be\n.text:00000000004031c0\n.text:00000000004031c6\n.text:00000000004031cb\n.text:00000000004031ce\n.text:00000000004031d3\n.text:00000000004031d5\n.text:00000000004031db\n.text:00000000004031e0\n.text:00000000004031e3\n.text:00000000004031e8\n.text:00000000004031ea\n.text:00000000004031f0\n.text:00000000004031f4\n.text:00000000004031f6\n.text:00000000004031fb\n.text:00000000004031fd\n.text:0000000000403202\n.text:0000000000403204\n.text:0000000000403209\n.text:000000000040320f\n.text:0000000000403212\n.text:0000000000403214\n.text:0000000000403217\n.text:0000000000403219\n.text:000000000040321d\n.text:000000000040321f\n.text:0000000000403223\n.text:0000000000403225\n.text:0000000000403229\n.text:000000000040322b\n.text:0000000000403232\n.text:0000000000403239\n.text:0000000000403240\n.text:000000000040324a\n.text:0000000000403251\n.text:0000000000403253\n.text:0000000000403255\n.text:0000000000403257\n.text:0000000000403259\n.text:000000000040325c\n.text:0000000000403261\n.text:0000000000403266\n.text:0000000000403269\n.text:000000000040326e\n.text:0000000000403273\n.text:0000000000403276\n.text:000000000040327c\n.text:000000000040327e\n.text:0000000000403284\n.text:0000000000403286\n.text:000000000040328a\n.text:000000000040328b\n.text:000000000040328d\n.text:000000000040328f\n.text:0000000000403290\n.text:0000000000403291\n.text:0000000000403294\n.text:0000000000403299\n.text:000000000040329e\n.text:00000000004032a1\n.text:00000000004032a6\n.text:00000000004032ab\n.text:00000000004032ad\n.text:00000000004032b2\n.text:00000000004032b4\n.text:00000000004032ba\n.text:00000000004032bc\n.text:00000000004032bf\n.text:00000000004032c2\n.text:00000000004032c5\n.text:00000000004032c8\n.text:00000000004032ce\n.text:00000000004032d0\n.text:00000000004032d6\n.text:00000000004032db\n.text:00000000004032e1\n.text:00000000004032e4\n.text:00000000004032ea\n.text:00000000004032f0\n.text:00000000004032f6\n.text:00000000004032f9\n.text:00000000004032ff\n.text:0000000000403301\n.text:0000000000403307\n.text:000000000040330d\n.text:0000000000403310\n.text:0000000000403316\n.text:000000000040331c\n.text:0000000000403322\n.text:0000000000403328\n.text:000000000040332b\n.text:000000000040332e\n.text:0000000000403334\n.text:0000000000403339\n.text:0000000000403342\n.text:0000000000403347\n.text:000000000040334d\n.text:0000000000403353\n.text:0000000000403358\n.text:000000000040335e\n.text:0000000000403361\n.text:0000000000403367\n.text:000000000040336d\n.text:0000000000403373\n.text:0000000000403376\n.text:000000000040337c\n.text:000000000040337f\n.text:0000000000403385\n.text:000000000040338a\n.text:000000000040338d\n.text:0000000000403393\n.text:0000000000403396\n.text:000000000040339c\n.text:00000000004033a1\n.text:00000000004033a4\n.text:00000000004033a6\n.text:00000000004033a8\n.text:00000000004033ab\n.text:00000000004033ae\n.text:00000000004033b1\n.text:00000000004033b3\n.text:00000000004033b5\n.text:00000000004033b8\n.text:00000000004033bb\n.text:00000000004033c1\n.text:00000000004033c4\n.text:00000000004033ca\n.text:00000000004033d4\n.text:00000000004033db\n.text:00000000004033e2\n.text:00000000004033eb\n.text:00000000004033f0\n.text:00000000004033f6\n.text:00000000004033fc\n.text:00000000004033ff\n.text:0000000000403405\n.text:000000000040340a\n.text:000000000040340d\n.text:0000000000403413\n.text:0000000000403416\n.text:000000000040341c\n.text:000000000040341f\n.text:0000000000403425\n.text:000000000040342a\n.text:0000000000403430\n.text:0000000000403432\n.text:0000000000403438\n.text:000000000040343d\n.text:0000000000403440\n.text:0000000000403443\n.text:0000000000403449\n.text:000000000040344e\n.text:0000000000403458\n.text:000000000040345f\n.text:0000000000403466\n.text:000000000040346b\n.text:0000000000403471\n.text:0000000000403477\n.text:000000000040347d\n.text:0000000000403480\n.text:0000000000403482\n.text:0000000000403485\n.text:000000000040348b\n.text:0000000000403491\n.text:0000000000403497\n.text:000000000040349a\n.text:00000000004034a0\n.text:00000000004034a5\n.text:00000000004034ab\n.text:00000000004034ad\n.text:00000000004034b3\n.text:00000000004034b8\n.text:00000000004034bb\n.text:00000000004034be\n.text:00000000004034c4\n.text:00000000004034c9\n.text:00000000004034cc\n.text:00000000004034d2\n.text:00000000004034d8\n.text:00000000004034de\n.text:00000000004034e1\n.text:00000000004034e7\n.text:00000000004034ec\n.text:00000000004034f6\n'
p797
tp798
sS'rpl_fflush'
p799
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p800
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_0060e150)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p801
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x0040717d\nMOV RDI,RBX\nCALL 0x004017b0\nTEST EAX,EAX\nJZ 0x0040717d\nMOV RDI,RBX\nCALL 0x00407190\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401770\n'
p802
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 3f a6 ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 ea a5 ff ff\n'
p803
S'.text:0000000000407160\n.text:0000000000407161\n.text:0000000000407164\n.text:0000000000407167\n.text:0000000000407169\n.text:000000000040716c\n.text:0000000000407171\n.text:0000000000407173\n.text:0000000000407175\n.text:0000000000407178\n.text:000000000040717d\n.text:0000000000407180\n.text:0000000000407181\n'
p804
tp805
sS'__assert_fail'
p806
(S'\n__stdcall __assert_fail(char * __assertion, char * __file, uint __line, char * __function)\n'
p807
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\u000a\u000a{\u000a  (*(code *)PTR___assert_fail_0060e0d8)();\u000a  return;\u000a}\u000a\u000a
p808
S'JMP qword ptr [0x0060e0d8]\n'
p809
S'ff 25 52 ca 20 00\n'
p810
S'.plt:0000000000401680\n'
p811
tp812
sS'bindtextdomain'
p813
(S'\n__stdcall bindtextdomain()\n'
p814
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_0060e080)();\u000a  return;\u000a}\u000a\u000a
p815
S'JMP qword ptr [0x0060e080]\n'
p816
S'ff 25 aa ca 20 00\n'
p817
S'.plt:00000000004015d0\n'
p818
tp819
sS'set_char_quoting'
p820
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p821
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p822
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x60e3b0\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p823
S'89 f1\n48 85 ff\nbe b0 e3 60 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p824
S'.text:0000000000404440\n.text:0000000000404442\n.text:0000000000404445\n.text:000000000040444a\n.text:000000000040444e\n.text:0000000000404450\n.text:0000000000404453\n.text:0000000000404457\n.text:000000000040445c\n.text:000000000040445f\n.text:0000000000404461\n.text:0000000000404463\n.text:0000000000404466\n.text:0000000000404468\n.text:000000000040446b\n.text:000000000040446d\n.text:0000000000404470\n.text:0000000000404475\n'
p825
tp826
sS'quotearg_n'
p827
(S'\n__stdcall quotearg_n(char * arg)\n'
p828
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p829
S'MOV RDX,-0x1\nMOV ECX,0x60e3b0\nJMP 0x00405330\n'
p830
S'48 c7 c2 ff ff ff ff\nb9 b0 e3 60 00\neb 02\n'
p831
S'.text:0000000000405320\n.text:0000000000405327\n.text:000000000040532c\n'
p832
tp833
sS'close_stream'
p834
(S'\n__stdcall close_stream(FILE * stream)\n'
p835
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p836
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401570\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x004016f0\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x004070e0\nTEST EBP,EBP\nJZ 0x00406d7b\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x00406d9f\nCALL 0x00401530\nMOV dword ptr [RAX],0x0\nJMP 0x00406d9f\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x00406d9f\nTEST CL,CL\nJNZ 0x00406d9f\nCALL 0x00401530\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p837
S'55\n41 56\n53\n48 89 fb\ne8 24 a8 ff ff\n49 89 c6\n48 89 df\ne8 99 a9 ff ff\n89 c5\n48 89 df\ne8 7f 03 00 00\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 bd a7 ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 9e a7 ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p838
S'.text:0000000000406d40\n.text:0000000000406d41\n.text:0000000000406d43\n.text:0000000000406d44\n.text:0000000000406d47\n.text:0000000000406d4c\n.text:0000000000406d4f\n.text:0000000000406d52\n.text:0000000000406d57\n.text:0000000000406d59\n.text:0000000000406d5c\n.text:0000000000406d61\n.text:0000000000406d63\n.text:0000000000406d65\n.text:0000000000406d6a\n.text:0000000000406d6c\n.text:0000000000406d6e\n.text:0000000000406d73\n.text:0000000000406d79\n.text:0000000000406d7b\n.text:0000000000406d7d\n.text:0000000000406d80\n.text:0000000000406d82\n.text:0000000000406d84\n.text:0000000000406d87\n.text:0000000000406d89\n.text:0000000000406d8b\n.text:0000000000406d8d\n.text:0000000000406d92\n.text:0000000000406d94\n.text:0000000000406d97\n.text:0000000000406d9c\n.text:0000000000406d9f\n.text:0000000000406da1\n.text:0000000000406da2\n.text:0000000000406da4\n.text:0000000000406da5\n'
p839
tp840
sS'quotearg_colon_mem'
p841
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p842
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p843
S'MOV EDX,0x3a\nJMP 0x00405640\n'
p844
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p845
S'.text:00000000004056d0\n.text:00000000004056d5\n'
p846
tp847
sS'xcalloc'
p848
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p849
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p850
S'PUSH RAX\nCALL 0x004069e0\nTEST RAX,RAX\nJZ 0x0040627d\nPOP RCX\nRET\nCALL 0x004062e0\n'
p851
S'50\ne8 6a 07 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p852
S'.text:0000000000406270\n.text:0000000000406271\n.text:0000000000406276\n.text:0000000000406279\n.text:000000000040627b\n.text:000000000040627c\n.text:000000000040627d\n'
p853
tp854
sS'xnumtoumax'
p855
(S'\n__stdcall xnumtoumax(char * n_str, uintmax_t min, uintmax_t max, char * suffixes, char * err)\n'
p856
V\u000auintmax_t xnumtoumax(char *n_str,uintmax_t min,uintmax_t max,char *suffixes,char *err)\u000a\u000a{\u000a  char *pcVar1;\u000a  strtol_error sVar2;\u000a  char *in_RAX;\u000a  int *piVar3;\u000a  uint *puVar4;\u000a  int iVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint in_stack_00000008;\u000a  char *local_38;\u000a  \u000a  local_38 = in_RAX;\u000a  sVar2 = xstrtoumax(n_str,(char **)0x0,(uintmax_t *)(min & 0xffffffff),(char *)&local_38);\u000a  pcVar1 = local_38;\u000a  if (sVar2 == LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW) {\u000a    piVar3 = __errno_location();\u000a    *piVar3 = 0;\u000a  }\u000a  else {\u000a    if (sVar2 == LONGINT_OVERFLOW) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0x4b;\u000a    }\u000a    else {\u000a      if (sVar2 == LONGINT_OK) {\u000a        if ((max <= local_38) && (local_38 <= suffixes)) {\u000a          return (uintmax_t)local_38;\u000a        }\u000a        piVar3 = __errno_location();\u000a        iVar5 = 0x22;\u000a        if ((char *)0x3fffffff < pcVar1) {\u000a          iVar5 = 0x4b;\u000a        }\u000a        *piVar3 = iVar5;\u000a      }\u000a    }\u000a  }\u000a  uVar7 = 1;\u000a  if (in_stack_00000008 != 0) {\u000a    uVar7 = in_stack_00000008;\u000a  }\u000a  puVar4 = (uint *)__errno_location();\u000a  uVar6 = *puVar4;\u000a  if (uVar6 == 0x16) {\u000a    uVar6 = 0;\u000a  }\u000a  quote(n_str);\u000a  error((ulong)uVar7,(ulong)uVar6,"%s: %s");\u000a  return (uintmax_t)local_38;\u000a}\u000a\u000a
p857
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,R9\nMOV R15,RCX\nMOV R12,RDX\nMOV EAX,ESI\nMOV R13,RDI\nMOV RCX,RSP\nXOR ESI,ESI\nMOV EDX,EAX\nCALL 0x00406700\nCMP EAX,0x3\nJZ 0x0040636e\nCMP EAX,0x1\nJZ 0x0040637b\nTEST EAX,EAX\nJNZ 0x00406386\nMOV RBX,qword ptr [RSP]\nCMP RBX,R12\nJC 0x00406351\nCMP RBX,R15\nJBE 0x004063c1\nCALL 0x00401530\nCMP RBX,0x3fffffff\nMOV ECX,0x4b\nMOV EDX,0x22\nCMOVA EDX,ECX\nMOV dword ptr [RAX],EDX\nJMP 0x00406386\nCALL 0x00401530\nMOV dword ptr [RAX],0x0\nJMP 0x00406386\nCALL 0x00401530\nMOV dword ptr [RAX],0x4b\nMOV EAX,dword ptr [RSP + 0x40]\nTEST EAX,EAX\nMOV EBP,0x1\nCMOVNZ EBP,EAX\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nXOR EAX,EAX\nCMP EBX,0x16\nCMOVZ EBX,EAX\nMOV RDI,R13\nCALL 0x00405820\nMOV R8,RAX\nMOV EDX,0x40aaf9\nXOR EAX,EAX\nMOV EDI,EBP\nMOV ESI,EBX\nMOV RCX,R14\nCALL 0x00401810\nMOV RAX,qword ptr [RSP]\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p858
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n4d 89 ce\n49 89 cf\n49 89 d4\n89 f0\n49 89 fd\n48 89 e1\n31 f6\n89 c2\ne8 cb 03 00 00\n83 f8 03\n74 34\n83 f8 01\n74 3c\n85 c0\n75 43\n48 8b 1c 24\n4c 39 e3\n72 05\n4c 39 fb\n76 70\ne8 da b1 ff ff\n48 81 fb ff ff ff 3f\nb9 4b 00 00 00\nba 22 00 00 00\n0f 47 d1\n89 10\neb 18\ne8 bd b1 ff ff\nc7 00 00 00 00 00\neb 0b\ne8 b0 b1 ff ff\nc7 00 4b 00 00 00\n8b 44 24 40\n85 c0\nbd 01 00 00 00\n0f 45 e8\ne8 97 b1 ff ff\n8b 18\n31 c0\n83 fb 16\n0f 44 d8\n4c 89 ef\ne8 75 f4 ff ff\n49 89 c0\nba f9 aa 40 00\n31 c0\n89 ef\n89 de\n4c 89 f1\ne8 4f b4 ff ff\n48 8b 04 24\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p859
S'.text:0000000000406310\n.text:0000000000406311\n.text:0000000000406313\n.text:0000000000406315\n.text:0000000000406317\n.text:0000000000406319\n.text:000000000040631a\n.text:000000000040631b\n.text:000000000040631e\n.text:0000000000406321\n.text:0000000000406324\n.text:0000000000406326\n.text:0000000000406329\n.text:000000000040632c\n.text:000000000040632e\n.text:0000000000406330\n.text:0000000000406335\n.text:0000000000406338\n.text:000000000040633a\n.text:000000000040633d\n.text:000000000040633f\n.text:0000000000406341\n.text:0000000000406343\n.text:0000000000406347\n.text:000000000040634a\n.text:000000000040634c\n.text:000000000040634f\n.text:0000000000406351\n.text:0000000000406356\n.text:000000000040635d\n.text:0000000000406362\n.text:0000000000406367\n.text:000000000040636a\n.text:000000000040636c\n.text:000000000040636e\n.text:0000000000406373\n.text:0000000000406379\n.text:000000000040637b\n.text:0000000000406380\n.text:0000000000406386\n.text:000000000040638a\n.text:000000000040638c\n.text:0000000000406391\n.text:0000000000406394\n.text:0000000000406399\n.text:000000000040639b\n.text:000000000040639d\n.text:00000000004063a0\n.text:00000000004063a3\n.text:00000000004063a6\n.text:00000000004063ab\n.text:00000000004063ae\n.text:00000000004063b3\n.text:00000000004063b5\n.text:00000000004063b7\n.text:00000000004063b9\n.text:00000000004063bc\n.text:00000000004063c1\n.text:00000000004063c5\n.text:00000000004063c9\n.text:00000000004063ca\n.text:00000000004063cc\n.text:00000000004063ce\n.text:00000000004063d0\n.text:00000000004063d2\n.text:00000000004063d3\n'
p860
tp861
sS'strtol'
p862
(S'\n__stdcall strtol(char * __nptr, char * * __endptr, int __base)\n'
p863
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000along strtol(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  lVar1 = (*(code *)PTR_strtol_0060e128)();\u000a  return lVar1;\u000a}\u000a\u000a
p864
S'JMP qword ptr [0x0060e128]\n'
p865
S'ff 25 02 ca 20 00\n'
p866
S'.plt:0000000000401720\n'
p867
tp868
sS'clear_ungetc_buffer_preserving_position'
p869
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p870
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p871
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x00407197\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x004071b0\n'
p872
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p873
S'.text:0000000000407190\n.text:0000000000407194\n.text:0000000000407196\n.text:0000000000407197\n.text:0000000000407199\n.text:000000000040719e\n'
p874
tp875
sS'xnmalloc'
p876
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p877
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p878
S'MOV RAX,RDI\nMUL RSI\nJO 0x00406141\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x00406150\nPUSH RAX\nCALL 0x004062e0\n'
p879
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p880
S'.text:0000000000406130\n.text:0000000000406133\n.text:0000000000406136\n.text:0000000000406138\n.text:000000000040613c\n.text:000000000040613f\n.text:0000000000406141\n.text:0000000000406142\n'
p881
tp882
sS'quotearg_char'
p883
(S'\n__stdcall quotearg_char(char * arg)\n'
p884
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p885
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x00405640\n'
p886
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p887
S'.text:00000000004056b0\n.text:00000000004056b2\n.text:00000000004056b9\n.text:00000000004056bb\n'
p888
tp889
sS'malloc'
p890
(S'\n__stdcall malloc(size_t __size)\n'
p891
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_0060e148)();\u000a  return pvVar1;\u000a}\u000a\u000a
p892
S'JMP qword ptr [0x0060e148]\n'
p893
S'ff 25 e2 c9 20 00\n'
p894
S'.plt:0000000000401760\n'
p895
tp896
sS'c_tolower'
p897
(S'\n__stdcall c_tolower()\n'
p898
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p899
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p900
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p901
S'.text:0000000000406d20\n.text:0000000000406d23\n.text:0000000000406d26\n.text:0000000000406d29\n.text:0000000000406d2c\n'
p902
tp903
sS'getopt_long'
p904
(S'\n__stdcall getopt_long()\n'
p905
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_0060e0a8)();\u000a  return;\u000a}\u000a\u000a
p906
S'JMP qword ptr [0x0060e0a8]\n'
p907
S'ff 25 82 ca 20 00\n'
p908
S'.plt:0000000000401620\n'
p909
tp910
sS'tcsetattr'
p911
(S'\n__stdcall tcsetattr(int __fd, int __optional_actions, termios * __termios_p)\n'
p912
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint tcsetattr(int __fd,int __optional_actions,termios *__termios_p)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_tcsetattr_0060e1b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p913
S'JMP qword ptr [0x0060e1b0]\n'
p914
S'ff 25 7a c9 20 00\n'
p915
S'.plt:0000000000401830\n'
p916
tp917
sS'quotearg_style'
p918
(S'\n__stdcall quotearg_style(char * arg)\n'
p919
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p920
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x00405520\n'
p921
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p922
S'.text:0000000000405600\n.text:0000000000405603\n.text:0000000000405605\n.text:0000000000405607\n.text:0000000000405609\n.text:000000000040560c\n'
p923
tp924
sS'fd_reopen'
p925
(S'\n__stdcall fd_reopen(char * file)\n'
p926
V\u000aint fd_reopen(char *file)\u000a\u000a{\u000a  int iVar1;\u000a  int __fd;\u000a  int iVar2;\u000a  int *piVar3;\u000a  uint in_ECX;\u000a  int __oflag;\u000a  char *__file;\u000a  \u000a  __fd = open(__file,__oflag,(ulong)in_ECX);\u000a  if ((__fd != (int)file) && (-1 < __fd)) {\u000a    iVar2 = dup2(__fd,(int)file);\u000a    piVar3 = __errno_location();\u000a    iVar1 = *piVar3;\u000a    close(__fd);\u000a    *piVar3 = iVar1;\u000a    __fd = iVar2;\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p927
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBP,EDI\nXOR EAX,EAX\nMOV RDI,RSI\nMOV ESI,EDX\nMOV EDX,ECX\nCALL 0x00401840\nMOV EBX,EAX\nCMP EBX,EBP\nJZ 0x00404319\nTEST EBX,EBX\nJS 0x00404319\nMOV EDI,EBX\nMOV ESI,EBP\nCALL 0x00401640\nMOV R14D,EAX\nCALL 0x00401530\nMOV RBP,RAX\nMOV R15D,dword ptr [RBP]\nMOV EDI,EBX\nCALL 0x004016c0\nMOV dword ptr [RBP],R15D\nMOV EAX,R14D\nJMP 0x0040431b\nMOV EAX,EBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p928
S'55\n41 57\n41 56\n53\n50\n89 fd\n31 c0\n48 89 f7\n89 d6\n89 ca\ne8 59 d5 ff ff\n89 c3\n39 eb\n74 2c\n85 db\n78 28\n89 df\n89 ee\ne8 46 d3 ff ff\n41 89 c6\ne8 2e d2 ff ff\n48 89 c5\n44 8b 7d 00\n89 df\ne8 b0 d3 ff ff\n44 89 7d 00\n44 89 f0\neb 02\n89 d8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p929
S'.text:00000000004042d0\n.text:00000000004042d1\n.text:00000000004042d3\n.text:00000000004042d5\n.text:00000000004042d6\n.text:00000000004042d7\n.text:00000000004042d9\n.text:00000000004042db\n.text:00000000004042de\n.text:00000000004042e0\n.text:00000000004042e2\n.text:00000000004042e7\n.text:00000000004042e9\n.text:00000000004042eb\n.text:00000000004042ed\n.text:00000000004042ef\n.text:00000000004042f1\n.text:00000000004042f3\n.text:00000000004042f5\n.text:00000000004042fa\n.text:00000000004042fd\n.text:0000000000404302\n.text:0000000000404305\n.text:0000000000404309\n.text:000000000040430b\n.text:0000000000404310\n.text:0000000000404314\n.text:0000000000404317\n.text:0000000000404319\n.text:000000000040431b\n.text:000000000040431f\n.text:0000000000404320\n.text:0000000000404322\n.text:0000000000404324\n.text:0000000000404325\n'
p930
tp931
sS'emit_try_help'
p932
(S'\n__stdcall emit_try_help()\n'
p933
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p934
S'PUSH RBX\nMOV RBX,qword ptr [0x0060e300]\nXOR EDI,EDI\nMOV ESI,0x409338\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RDX,RAX\nMOV RCX,qword ptr [0x0060e3a8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x004018c0\n'
p935
S'53\n48 8b 1d d8 bd 20 00\n31 ff\nbe 38 93 40 00\nba 05 00 00 00\ne8 b7 f0 ff ff\n48 89 c2\n48 8b 0d 65 be 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 6d f3 ff ff\n'
p936
S'.text:0000000000402520\n.text:0000000000402521\n.text:0000000000402528\n.text:000000000040252a\n.text:000000000040252f\n.text:0000000000402534\n.text:0000000000402539\n.text:000000000040253c\n.text:0000000000402543\n.text:0000000000402548\n.text:000000000040254a\n.text:000000000040254d\n.text:000000000040254e\n'
p937
tp938
sS'strrchr'
p939
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p940
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_0060e0c8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p941
S'JMP qword ptr [0x0060e0c8]\n'
p942
S'ff 25 62 ca 20 00\n'
p943
S'.plt:0000000000401660\n'
p944
tp945
sS'quotearg_alloc_mem'
p946
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p947
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p948
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x60e3b0\nCMOVNZ R12,RCX\nCALL 0x00401530\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x00404550\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00406220\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x00404550\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x0040527a\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p949
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc b0 e3 60 00\n4c 0f 45 e1\ne8 58 c3 ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 f1 0f 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p950
S'.text:00000000004051a0\n.text:00000000004051a1\n.text:00000000004051a3\n.text:00000000004051a5\n.text:00000000004051a7\n.text:00000000004051a9\n.text:00000000004051aa\n.text:00000000004051ae\n.text:00000000004051b1\n.text:00000000004051b6\n.text:00000000004051b9\n.text:00000000004051be\n.text:00000000004051c1\n.text:00000000004051c6\n.text:00000000004051c9\n.text:00000000004051cf\n.text:00000000004051d3\n.text:00000000004051d8\n.text:00000000004051dd\n.text:00000000004051df\n.text:00000000004051e3\n.text:00000000004051e5\n.text:00000000004051e8\n.text:00000000004051ec\n.text:00000000004051f1\n.text:00000000004051f5\n.text:00000000004051fa\n.text:00000000004051fe\n.text:0000000000405200\n.text:0000000000405202\n.text:0000000000405205\n.text:0000000000405208\n.text:000000000040520b\n.text:0000000000405210\n.text:0000000000405215\n.text:0000000000405217\n.text:000000000040521c\n.text:0000000000405220\n.text:0000000000405223\n.text:0000000000405227\n.text:000000000040522a\n.text:000000000040522f\n.text:0000000000405232\n.text:0000000000405236\n.text:000000000040523a\n.text:000000000040523d\n.text:0000000000405240\n.text:0000000000405245\n.text:000000000040524a\n.text:000000000040524d\n.text:0000000000405252\n.text:0000000000405257\n.text:0000000000405259\n.text:000000000040525e\n.text:0000000000405263\n.text:0000000000405267\n.text:000000000040526a\n.text:000000000040526e\n.text:0000000000405273\n.text:0000000000405275\n.text:0000000000405277\n.text:000000000040527a\n.text:000000000040527d\n.text:0000000000405281\n.text:0000000000405282\n.text:0000000000405284\n.text:0000000000405286\n.text:0000000000405288\n.text:000000000040528a\n.text:000000000040528b\n'
p951
tp952
sS'bkm_scale'
p953
(S'\n__stdcall bkm_scale(uintmax_t * x)\n'
p954
V\u000astrtol_error bkm_scale(uintmax_t *x)\u000a\u000a{\u000a  ulong uVar1;\u000a  uintmax_t uVar2;\u000a  int in_ESI;\u000a  bool bVar3;\u000a  \u000a  uVar1 = *x;\u000a  uVar2 = (long)in_ESI * uVar1;\u000a  bVar3 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816((ulong)(long)in_ESI),0\u000a                ) < uVar1;\u000a  if (bVar3) {\u000a    uVar2 = 0xffffffffffffffff;\u000a  }\u000a  *x = uVar2;\u000a  return -(uint)bVar3 & LONGINT_OVERFLOW;\u000a}\u000a\u000a
p955
S'MOVSXD RCX,ESI\nMOV RSI,-0x1\nMOV RAX,-0x1\nXOR EDX,EDX\nDIV RCX\nMOV RDX,qword ptr [RDI]\nIMUL RCX,RDX\nCMP RAX,RDX\nCMOVC RCX,RSI\nSBB EAX,EAX\nAND EAX,0x1\nMOV qword ptr [RDI],RCX\nRET\n'
p956
S'48 63 ce\n48 c7 c6 ff ff ff ff\n48 c7 c0 ff ff ff ff\n31 d2\n48 f7 f1\n48 8b 17\n48 0f af ca\n48 39 d0\n48 0f 42 ce\n19 c0\n83 e0 01\n48 89 0f\nc3\n'
p957
S'.text:0000000000406970\n.text:0000000000406973\n.text:000000000040697a\n.text:0000000000406981\n.text:0000000000406983\n.text:0000000000406986\n.text:0000000000406989\n.text:000000000040698d\n.text:0000000000406990\n.text:0000000000406994\n.text:0000000000406996\n.text:0000000000406999\n.text:000000000040699c\n'
p958
tp959
sS'quotearg_style_mem'
p960
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p961
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p962
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x004055c0\n'
p963
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p964
S'.text:0000000000405620\n.text:0000000000405623\n.text:0000000000405626\n.text:0000000000405628\n.text:000000000040562a\n.text:000000000040562c\n.text:000000000040562f\n.text:0000000000405632\n'
p965
tp966
sS'xalloc_die'
p967
(S'\n__stdcall xalloc_die()\n'
p968
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,0x40aafd,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p969
S'PUSH RBX\nMOV EBX,dword ptr [0x0060e238]\nXOR EDI,EDI\nMOV ESI,0x40b3ff\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00401810\nCALL 0x00401520\n'
p970
S'53\n8b 1d 51 7f 20 00\n31 ff\nbe ff b3 40 00\nba 05 00 00 00\ne8 f8 b2 ff ff\n48 89 c1\n31 f6\nba fd aa 40 00\n31 c0\n89 df\ne8 05 b5 ff ff\ne8 10 b2 ff ff\n'
p971
S'.text:00000000004062e0\n.text:00000000004062e1\n.text:00000000004062e7\n.text:00000000004062e9\n.text:00000000004062ee\n.text:00000000004062f3\n.text:00000000004062f8\n.text:00000000004062fb\n.text:00000000004062fd\n.text:0000000000406302\n.text:0000000000406304\n.text:0000000000406306\n.text:000000000040630b\n'
p972
tp973
sS'quotearg_n_custom'
p974
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p975
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p976
S'MOV R8,-0x1\nJMP 0x00405740\n'
p977
S'49 c7 c0 ff ff ff ff\neb 07\n'
p978
S'.text:0000000000405730\n.text:0000000000405737\n'
p979
tp980
sS'__freading'
p981
(S'\n__stdcall __freading()\n'
p982
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_0060e170)();\u000a  return;\u000a}\u000a\u000a
p983
S'JMP qword ptr [0x0060e170]\n'
p984
S'ff 25 ba c9 20 00\n'
p985
S'.plt:00000000004017b0\n'
p986
tp987
sS'fputs_unlocked'
p988
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p989
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_0060e108)();\u000a  return iVar1;\u000a}\u000a\u000a
p990
S'JMP qword ptr [0x0060e108]\n'
p991
S'ff 25 22 ca 20 00\n'
p992
S'.plt:00000000004016e0\n'
p993
tp994
sS'main'
p995
(S'\n__stdcall main(char * * argv)\n'
p996
V\u000a/* WARNING: Removing unreachable block (ram,0x0040281f) */\u000a/* WARNING: Type propagation algorithm not settling */\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint main(char **argv)\u000a\u000a{\u000a  char cVar1;\u000a  termios mode;\u000a  termios new_mode;\u000a  _Bool _Var2;\u000a  int iVar3;\u000a  int iVar4;\u000a  uint uVar5;\u000a  speed_t sVar6;\u000a  strtol_error sVar7;\u000a  uint *puVar8;\u000a  undefined7 extraout_var;\u000a  ulong extraout_RAX;\u000a  option *poVar9;\u000a  undefined8 uVar10;\u000a  option *poVar11;\u000a  undefined8 extraout_RDX;\u000a  int iVar12;\u000a  ulong uVar13;\u000a  mode_info *pmVar14;\u000a  control_info *pcVar15;\u000a  char **ppcVar16;\u000a  char *__s1;\u000a  long lVar17;\u000a  char **in_RSI;\u000a  char *__s2;\u000a  termios *mode_00;\u000a  byte bVar18;\u000a  byte bVar19;\u000a  byte bVar20;\u000a  long lVar21;\u000a  bool bVar22;\u000a  long lStack120;\u000a  undefined8 uStack112;\u000a  uint local_5c;\u000a  undefined8 local_58;\u000a  char **local_50;\u000a  ulong local_48;\u000a  char *local_40;\u000a  char **local_38;\u000a  \u000a  uStack112 = 0x4026df;\u000a  local_50 = argv;\u000a  set_program_name(*in_RSI);\u000a  uStack112 = 0x4026ee;\u000a  setlocale(6,\u000a              "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a              + 0xca);\u000a  uStack112 = 0x4026fd;\u000a  bindtextdomain(0x4091bf,"/usr/local/share/locale");\u000a  uStack112 = 0x402707;\u000a  textdomain(0x4091bf);\u000a  uStack112 = 0x402711;\u000a  iVar3 = atexit(close_stdout);\u000a  opterr = 0;\u000a  uVar13 = 1;\u000a  local_58 = (option *)\u000a             (CONCAT71((uint7)(uint3)((uint)iVar3 >> 8),1) | (ulong)local_58._4_4_ << 0x20);\u000a  __s1 = (char *)0x0;\u000a  bVar18 = 0;\u000a  bVar19 = 0;\u000a  iVar3 = 0;\u000a  local_5c = 0;\u000a  local_38 = in_RSI;\u000a  do {\u000a    while( true ) {\u000a      poVar11 = longopts;\u000a      uStack112 = 0x40277b;\u000a      iVar4 = getopt_long((ulong)(uint)((int)local_50 - iVar3),in_RSI + (long)iVar3,"-agF:",longopts\u000a                          ,0);\u000a      iVar12 = (int)uVar13;\u000a      if (iVar4 < 0x46) break;\u000a      if (iVar4 == 0x46) {\u000a        bVar22 = __s1 != (char *)0x0;\u000a        __s1 = optarg;\u000a        if (bVar22) {\u000a          uStack112 = 0x402837;\u000a          uVar10 = dcgettext(0,"only one device may be specified",5);\u000a          uStack112 = 0x40284b;\u000a          error(1,0,uVar10,uVar10);\u000a          __s1 = optarg;\u000a        }\u000a      }\u000a      else {\u000a        if (iVar4 == 0x61) {\u000a          bVar19 = 1;\u000a          local_5c = 1;\u000a        }\u000a        else {\u000a          if (iVar4 != 0x67) goto LAB_004027d0;\u000a          local_5c = 2;\u000a          bVar18 = 1;\u000a        }\u000a      }\u000a      uVar13 = uVar13 & 0xffffffff;\u000a      if (iVar12 < optind) {\u000a        uVar13 = SEXT48(iVar12);\u000a        lVar17 = (long)optind;\u000a        lVar21 = uVar13 + 1;\u000a        if ((long)(uVar13 + 1) < lVar17) {\u000a          lVar21 = lVar17;\u000a        }\u000a        uStack112 = 0x4028aa;\u000a        memset(in_RSI + (long)iVar3 + uVar13,0,(lVar21 - uVar13) * 8);\u000a        do {\u000a          uVar13 = uVar13 + 1;\u000a          in_RSI = local_38;\u000a        } while ((long)uVar13 < lVar17);\u000a      }\u000a    }\u000a    if (iVar4 == -1) {\u000a      if ((bVar18 & bVar19) != 0) {\u000a        uStack112 = 0x4028d8;\u000a        poVar11 = (option *)\u000a                  dcgettext(0,\u000a                            "the options for verbose and stty-readable output styles are\u005cnmutually exclusive"\u000a                            ,5);\u000a        uStack112 = 0x4028ec;\u000a        error(1,0,poVar11);\u000a      }\u000a      bVar20 = (byte)local_58;\u000a      if ((((ulong)local_58 & 1) == 0) && ((bVar19 | bVar18) != 0)) {\u000a        uStack112 = 0x402912;\u000a        poVar11 = (option *)dcgettext(0,"when specifying an output style, modes may not be set",5);\u000a        uStack112 = 0x402926;\u000a        error(1,0,poVar11);\u000a      }\u000a      if (__s1 == (char *)0x0) {\u000a        uStack112 = 0x4029fd;\u000a        __s1 = (char *)dcgettext(0,"standard input",5);\u000a      }\u000a      else {\u000a        uStack112 = 0x402940;\u000a        iVar3 = fd_reopen((char *)0x0);\u000a        if (iVar3 < 0) {\u000a          uStack112 = 0x402949;\u000a          puVar8 = (uint *)__errno_location();\u000a          uVar5 = *puVar8;\u000a          uStack112 = 0x40295a;\u000a          quotearg_n_style_colon((char *)0x0);\u000a          uStack112 = 0x402970;\u000a          error(1,(ulong)uVar5,0x40aafd);\u000a        }\u000a        uStack112 = 0x40297e;\u000a        uVar5 = rpl_fcntl(0,3);\u000a        if (uVar5 != 0xffffffff) {\u000a          poVar11 = (option *)(ulong)(uVar5 & 0xfffff7ff);\u000a          uStack112 = 0x40299b;\u000a          iVar3 = rpl_fcntl(0,4,(ulong)(uVar5 & 0xfffff7ff));\u000a          if (-1 < iVar3) goto LAB_00402a00;\u000a        }\u000a        uStack112 = 0x4029a4;\u000a        puVar8 = (uint *)__errno_location();\u000a        uVar5 = *puVar8;\u000a        uStack112 = 0x4029b8;\u000a        uVar10 = dcgettext(0,"%s: couldn\u005c't reset non-blocking mode",5);\u000a        uStack112 = 0x4029cd;\u000a        poVar11 = (option *)quotearg_n_style_colon((char *)0x0);\u000a        bVar20 = (byte)local_58;\u000a        uStack112 = 0x4029ea;\u000a        error(1,(ulong)uVar5,uVar10);\u000a      }\u000aLAB_00402a00:\u000a      uStack112 = 0x402a0c;\u000a      iVar3 = tcgetattr(0,(termios *)0x60e30c);\u000a      if (iVar3 != 0) {\u000a        uStack112 = 0x402a15;\u000a        puVar8 = (uint *)__errno_location();\u000a        uVar5 = *puVar8;\u000a        uStack112 = 0x402a26;\u000a        poVar11 = (option *)quotearg_n_style_colon((char *)0x0);\u000a        uStack112 = 0x402a3c;\u000a        error(1,(ulong)uVar5,0x40aafd);\u000a      }\u000a      if ((byte)(bVar18 | bVar20 & 1 | bVar19) != 0) {\u000a        uStack112 = 0x402de6;\u000a        max_col = screen_columns();\u000a        current_col = 0;\u000a        uStack112 = 0x402e02;\u000a        display_settings((ulong)local_5c,__s1);\u000a        return 0;\u000a      }\u000a      if ((int)local_50 < 2) {\u000a        return 0;\u000a      }\u000a      local_5c = (int)local_50 - 1;\u000a      uVar5 = 1;\u000a      local_58 = (option *)0x0;\u000a      local_48 = 0;\u000a      ppcVar16 = local_50;\u000a      local_40 = __s1;\u000a      break;\u000a    }\u000a    if (iVar4 == -0x83) {\u000a      uStack112 = 0x402f63;\u000a      version_etc(stdout,"stty","GNU coreutils",Version,"David MacKenzie",0);\u000a                    /* WARNING: Subroutine does not return */\u000a      uStack112 = 0x402f6a;\u000a      exit(0);\u000a    }\u000a    if (iVar4 == -0x82) goto LAB_00402f6a;\u000aLAB_004027d0:\u000a    iVar3 = iVar3 + iVar12;\u000a    __s2 = in_RSI[(long)iVar3];\u000a    uStack112 = 0x4027e7;\u000a    iVar4 = strcmp(__s2,"-drain");\u000a    if (iVar4 != 0) {\u000a      uStack112 = 0x4027f8;\u000a      iVar4 = strcmp(__s2,"drain");\u000a      if (iVar4 != 0) {\u000a        local_58 = (option *)((ulong)local_58 & 0xffffffff00000000);\u000a      }\u000a    }\u000a    optind = 0;\u000a    uVar13 = 1;\u000a  } while( true );\u000aLAB_00402a80:\u000a  lVar21 = (long)(int)uVar5;\u000a  __s2 = in_RSI[lVar21];\u000a  if (__s2 != (char *)0x0) {\u000a    cVar1 = *__s2;\u000a    __s1 = __s2 + 1;\u000a    if (cVar1 != '-') {\u000a      __s1 = __s2;\u000a    }\u000a    uStack112 = 0x402aac;\u000a    iVar3 = strcmp(__s1,"drain");\u000a    if (iVar3 == 0) {\u000a      tcsetattr_options = ZEXT14(cVar1 != '-');\u000a      in_RSI = local_38;\u000a    }\u000a    else {\u000a      pmVar14 = mode_info;\u000a      __s2 = "parenb";\u000a      do {\u000a        uStack112 = 0x402ac8;\u000a        iVar3 = strcmp(__s1,__s2);\u000a        if (iVar3 == 0) {\u000a          uStack112 = 0x402b0b;\u000a          _Var2 = set_mode();\u000a          local_58 = (option *)CONCAT71(extraout_var,1);\u000a          goto LAB_00402b15;\u000a        }\u000a        __s2 = pmVar14[1].name;\u000a        pmVar14 = pmVar14 + 1;\u000a      } while (__s2 != (char *)0x0);\u000a      _Var2 = false;\u000aLAB_00402b15:\u000a      in_RSI = local_38;\u000a      if ((_Var2 == false) && (cVar1 == '-')) {\u000a        uStack112 = 0x402f33;\u000a        uVar10 = dcgettext(0,"invalid argument %s",5);\u000a        __s1 = __s1 + -1;\u000a        goto LAB_00402f85;\u000a      }\u000a      ppcVar16 = local_50;\u000a      if (_Var2 == false) {\u000a        pcVar15 = control_info;\u000a        __s2 = "intr";\u000a        do {\u000a          uStack112 = 0x402b58;\u000a          iVar3 = strcmp(__s1,__s2);\u000a          if (iVar3 == 0) {\u000a            if (uVar5 == local_5c) goto LAB_00402f71;\u000a            uVar5 = uVar5 + 1;\u000a            uStack112 = 0x402c59;\u000a            uVar10 = set_control_char();\u000a            local_58 = (option *)CONCAT71((int7)((ulong)uVar10 >> 8),1);\u000a            ppcVar16 = local_50;\u000a            goto LAB_00402c65;\u000a          }\u000a          __s2 = pcVar15[1].name;\u000a          pcVar15 = pcVar15 + 1;\u000a        } while (__s2 != (char *)0x0);\u000a        uStack112 = 0x402b83;\u000a        iVar3 = strcmp(__s1,"ispeed");\u000a        ppcVar16 = local_50;\u000a        if (iVar3 == 0) {\u000a          if (uVar5 == local_5c) goto LAB_00402f71;\u000a          uVar5 = uVar5 + 1;\u000a          mode_00 = (termios *)0x0;\u000a        }\u000a        else {\u000a          uStack112 = 0x402b9d;\u000a          iVar3 = strcmp(__s1,"ospeed");\u000a          if (iVar3 != 0) {\u000a            uStack112 = 0x402bb2;\u000a            iVar3 = strcmp(__s1,"rows");\u000a            if (iVar3 == 0) {\u000a              if (uVar5 == local_5c) goto LAB_00402f71;\u000a              uStack112 = 0x402cfd;\u000a              uVar13 = integer_arg(in_RSI[lVar21 + 1],0x7fffffff);\u000a              __s1 = (char *)(uVar13 & 0xffffffff);\u000a            }\u000a            else {\u000a              uStack112 = 0x402bc7;\u000a              iVar3 = strcmp(__s1,"cols");\u000a              if (iVar3 != 0) {\u000a                uStack112 = 0x402bdc;\u000a                iVar3 = strcmp(__s1,"columns");\u000a                if (iVar3 != 0) {\u000a                  uStack112 = 0x402bf1;\u000a                  iVar3 = strcmp(__s1,"size");\u000a                  if (iVar3 == 0) {\u000a                    uStack112 = 0x402d18;\u000a                    max_col = screen_columns();\u000a                    current_col = 0;\u000a                    uStack112 = 0x402d34;\u000a                    display_window_size((char *)0x0);\u000a                  }\u000a                  else {\u000a                    uStack112 = 0x402c06;\u000a                    iVar3 = strcmp(__s1,"line");\u000a                    if (iVar3 == 0) {\u000a                      if (uVar5 == local_5c) goto LAB_00402f71;\u000a                      uVar5 = uVar5 + 1;\u000a                      uStack112 = 0x402d58;\u000a                      poVar9 = (option *)integer_arg(in_RSI[lVar21 + 1],0xffffffffffffffff);\u000a                      mode.c_line = (cc_t)poVar9;\u000a                      poVar11 = (option *)((ulong)poVar9 & 0xff);\u000a                      local_58 = (option *)CONCAT71((int7)((ulong)extraout_RDX >> 8),1);\u000a                      if (poVar11 != poVar9) {\u000a                        uStack112 = 0x402d85;\u000a                        uVar10 = dcgettext(0,"invalid line discipline %s",5);\u000a                        uStack112 = 0x402d91;\u000a                        poVar11 = (option *)quote(in_RSI[lVar21 + 1]);\u000a                        uStack112 = 0x402da2;\u000a                        error(0,0,uVar10);\u000a                      }\u000a                    }\u000a                    else {\u000a                      uStack112 = 0x402c1b;\u000a                      iVar3 = strcmp(__s1,"speed");\u000a                      if (iVar3 != 0) {\u000a                        uStack112 = 0x402c2b;\u000a                        sVar6 = string_to_baud(__s1);\u000a                        if (sVar6 != 0xffffffff) {\u000a                          mode_00 = (termios *)0x2;\u000a                          goto LAB_00402ca5;\u000a                        }\u000a                        uStack112 = 0x402dc6;\u000a                        _Var2 = recover_mode();\u000a                        poVar11 = (option *)CONCAT71((int7)((ulong)poVar11 >> 8),1);\u000a                        local_58 = poVar11;\u000a                        if (_Var2 != false) goto LAB_00402c65;\u000a                        __s2 = "invalid argument %s";\u000a                        local_58 = poVar11;\u000a                        goto LAB_00402f78;\u000a                      }\u000a                      uStack112 = 0x402dac;\u000a                      max_col = screen_columns();\u000a                      uStack112 = 0x402db9;\u000a                      display_speed((termios *)0x0);\u000a                    }\u000a                  }\u000a                  goto LAB_00402c65;\u000a                }\u000a              }\u000a              if (uVar5 == local_5c) goto LAB_00402f71;\u000a              uStack112 = 0x402cd7;\u000a              integer_arg(in_RSI[lVar21 + 1],0x7fffffff);\u000a              __s1 = (char *)0xffffffff;\u000a            }\u000a            uVar5 = uVar5 + 1;\u000a            uStack112 = 0x402d0e;\u000a            set_window_size(__s1);\u000a            goto LAB_00402c65;\u000a          }\u000a          if (uVar5 == local_5c) goto LAB_00402f71;\u000a          uVar5 = uVar5 + 1;\u000a          mode_00 = (termios *)0x1;\u000a        }\u000aLAB_00402ca5:\u000a        uStack112 = 0x402caa;\u000a        set_speed(mode_00);\u000a        local_48 = CONCAT71((int7)(extraout_RAX >> 8),1);\u000a        local_58 = (option *)(extraout_RAX & 0xffffffffffffff00 | 1);\u000a      }\u000a    }\u000a  }\u000aLAB_00402c65:\u000a  uVar5 = uVar5 + 1;\u000a  if ((int)ppcVar16 <= (int)uVar5) {\u000a    if (((ulong)local_58 & 1) != 0) {\u000a      uStack112 = 0x402e31;\u000a      iVar3 = tcsetattr(0,tcsetattr_options,(termios *)0x60e30c);\u000a      if (iVar3 != 0) {\u000a        uStack112 = 0x402e3a;\u000a        puVar8 = (uint *)__errno_location();\u000a        uVar5 = *puVar8;\u000a        uStack112 = 0x402e4b;\u000a        __s1 = quotearg_n_style_colon((char *)0x0);\u000a        uStack112 = 0x402e61;\u000a        error(1,(ulong)uVar5,0x40aafd,__s1);\u000a      }\u000a      uStack112 = 0x402e6d;\u000a      iVar3 = tcgetattr(0,(termios *)0x60e350);\u000a      if (iVar3 != 0) {\u000a        uStack112 = 0x402e76;\u000a        puVar8 = (uint *)__errno_location();\u000a        uVar5 = *puVar8;\u000a        uStack112 = 0x402e87;\u000a        __s1 = quotearg_n_style_colon((char *)0x0);\u000a        uStack112 = 0x402e9d;\u000a        error(1,(ulong)uVar5,0x40aafd,__s1);\u000a      }\u000a      uStack112 = 0x402eb1;\u000a      iVar3 = memcmp((void *)0x60e30c,(void *)0x60e350,0x3c);\u000a      if (iVar3 != 0) {\u000a        new_mode.c_cflag = new_mode.c_cflag & 0xeff0ffff;\u000a        if ((local_48 & 1) == 0) {\u000a          uStack112 = 0x402ede;\u000a          iVar3 = memcmp((void *)0x60e30c,(void *)0x60e350,0x3c);\u000a          if (iVar3 == 0) {\u000a            return 0;\u000a          }\u000a        }\u000a        uStack112 = 0x402ef7;\u000a        uVar10 = dcgettext(0,"%s: unable to perform all requested operations",5);\u000a        uStack112 = 0x402f09;\u000a        __s1 = quotearg_n_style_colon((char *)0x0);\u000a        uStack112 = 0x402f1d;\u000a        error(1,0,uVar10,__s1);\u000a      }\u000a    }\u000a    return 0;\u000a  }\u000a  goto LAB_00402a80;\u000aLAB_00402f6a:\u000a  uStack112 = 0x402f71;\u000a  usage(0);\u000aLAB_00402f71:\u000a  __s2 = "missing argument to %s";\u000aLAB_00402f78:\u000a  uStack112 = 0x402f82;\u000a  uVar10 = dcgettext(0,__s2,5);\u000aLAB_00402f85:\u000a  uStack112 = 0x402f8d;\u000a  __s1 = quote(__s1);\u000a  uStack112 = 0x402f9e;\u000a  error(0,0,uVar10,__s1);\u000a  uStack112 = 0x402fa8;\u000a  usage(1);\u000a  iVar3 = get_win_size((winsize *)0x1);\u000a  if (iVar3 == 0) {\u000a    if (uStack112._2_2_ != 0) {\u000a      return (uint)uStack112._2_2_;\u000a    }\u000a  }\u000a  __s1 = getenv("COLUMNS");\u000a  if (__s1 != (char *)0x0) {\u000a    sVar7 = xstrtol(__s1,(char **)0x0,(long *)0x0,(char *)&lStack120);\u000a    if ((sVar7 == LONGINT_OK) && (lStack120 - 1U < 0x7fffffff)) {\u000a      return (uint)lStack120;\u000a    }\u000a  }\u000a  return (int)0x50;\u000a}\u000a\u000a
p997
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV R12,RSI\nMOV qword ptr [RSP + 0x18],RDI\nMOV RDI,qword ptr [R12]\nCALL 0x00404330\nMOV EDI,0x6\nMOV ESI,0x40b1c9\nCALL 0x004017e0\nMOV EDI,0x4091bf\nMOV ESI,0x40917c\nCALL 0x004015d0\nMOV EDI,0x4091bf\nCALL 0x004015b0\nMOV EDI,0x404210\nCALL 0x004072a0\nMOV dword ptr [0x0060e2e0],0x0\nMOV EBX,0x1\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nMOV EBP,0x0\nXOR R13D,R13D\nXOR R14D,R14D\nXOR R15D,R15D\nMOV dword ptr [RSP + 0xc],0x0\nMOV qword ptr [RSP + 0x30],R12\nJMP 0x00402758\nMOV RBP,R12\nMOV R12,qword ptr [RSP + 0x30]\nMOV RAX,qword ptr [RSP + 0x18]\nMOV EDI,EAX\nSUB EDI,R15D\nMOVSXD RAX,R15D\nLEA RSI,[R12 + RAX*0x8]\nMOV EDX,0x409194\nMOV ECX,0x409930\nXOR R8D,R8D\nCALL 0x00401620\nCMP EAX,0x45\nJG 0x004027a0\nCMP EAX,-0x1\nJZ 0x004028bd\nCMP EAX,0xffffff7d\nJZ 0x00402f3b\nCMP EAX,0xffffff7e\nJNZ 0x004027d0\nJMP 0x00402f6a\nCMP EAX,0x46\nJZ 0x00402821\nCMP EAX,0x61\nJZ 0x00402860\nCMP EAX,0x67\nJNZ 0x004027d0\nMOV dword ptr [RSP + 0xc],0x2\nMOV R13B,0x1\nCMP EBX,dword ptr [0x0060e2b0]\nJGE 0x00402758\nJMP 0x00402877\nADD R15D,EBX\nMOVSXD RAX,R15D\nMOV RBX,qword ptr [R12 + RAX*0x8]\nMOV ESI,0x4091d9\nMOV RDI,RBX\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402804\nMOV ESI,0x4091da\nMOV RDI,RBX\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402804\nMOV dword ptr [RSP + 0x10],0x0\nMOV dword ptr [0x0060e2b0],0x0\nMOV EBX,0x1\nCMP EBX,dword ptr [0x0060e2b0]\nJGE 0x00402758\nJMP 0x00402877\nTEST RBP,RBP\nJZ 0x0040284b\nXOR EDI,EDI\nMOV ESI,0x40919a\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401810\nMOV RBP,qword ptr [0x0060e2b8]\nCMP EBX,dword ptr [0x0060e2b0]\nJGE 0x00402758\nJMP 0x00402877\nMOV R14B,0x1\nMOV dword ptr [RSP + 0xc],0x1\nCMP EBX,dword ptr [0x0060e2b0]\nJGE 0x00402758\nMOV RCX,R12\nMOV R12,RBP\nMOVSXD RBX,EBX\nMOVSXD RAX,R15D\nMOVSXD RBP,dword ptr [0x0060e2b0]\nADD RAX,RBX\nLEA RDI,[RCX + RAX*0x8]\nLEA RDX,[RBX + 0x1]\nCMP RDX,RBP\nCMOVL RDX,RBP\nSUB RDX,RBX\nSHL RDX,0x3\nXOR ESI,ESI\nCALL 0x00401690\nNOP word ptr [RAX + RAX*0x1]\nINC RBX\nCMP RBX,RBP\nJL 0x004028b0\nJMP 0x00402750\nMOV EAX,R13D\nAND AL,R14B\nTEST AL,0x1\nJZ 0x004028ec\nXOR EDI,EDI\nMOV ESI,0x4091e0\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401810\nMOV R15D,dword ptr [RSP + 0x10]\nTEST R15B,0x1\nJNZ 0x00402926\nMOV EAX,R14D\nOR AL,R13B\nAND AL,0x1\nJZ 0x00402926\nXOR EDI,EDI\nMOV ESI,0x40922f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RCX\nCALL 0x00401810\nTEST RBP,RBP\nJZ 0x004029ec\nXOR EDI,EDI\nMOV EDX,0x800\nXOR ECX,ECX\nMOV RSI,RBP\nCALL 0x004042d0\nTEST EAX,EAX\nJNS 0x00402970\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401810\nXOR EDI,EDI\nMOV ESI,0x3\nXOR EAX,EAX\nCALL 0x00406a30\nMOV ECX,EAX\nCMP ECX,-0x1\nJZ 0x0040299f\nAND ECX,0xfffff7ff\nXOR EDI,EDI\nMOV ESI,0x4\nXOR EAX,EAX\nMOV EDX,ECX\nCALL 0x00406a30\nTEST EAX,EAX\nJNS 0x00402a00\nCALL 0x00401530\nMOV R15D,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x409265\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBX,RBP\nMOV RBP,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBX\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,R15D\nMOV R15D,dword ptr [RSP + 0x10]\nMOV RDX,RBP\nMOV RBP,RBX\nCALL 0x00401810\nJMP 0x00402a00\nXOR EDI,EDI\nMOV ESI,0x40928a\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBP,RAX\nXOR EDI,EDI\nMOV ESI,0x60e30c\nCALL 0x00401820\nTEST EAX,EAX\nJZ 0x00402a3c\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401810\nOR R13B,R15B\nOR R13B,R14B\nTEST R13B,0x1\nJNZ 0x00402de1\nMOV RBX,qword ptr [RSP + 0x18]\nCMP EBX,0x2\nJL 0x00402e02\nMOV qword ptr [RSP + 0x28],RBP\nLEA EAX,[RBX + -0x1]\nMOV dword ptr [RSP + 0xc],EAX\nMOV R14D,0x1\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x20],RAX\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R15,R14D\nMOV RAX,qword ptr [R12 + R15*0x8]\nTEST RAX,RAX\nJZ 0x00402c65\nMOV R12B,byte ptr [RAX]\nLEA RBP,[RAX + 0x1]\nCMP R12B,0x2d\nCMOVNZ RBP,RAX\nMOV ESI,0x4091da\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402ae0\nMOV EBX,0x4099f0\nMOV ESI,0x4094fd\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402af9\nMOV RSI,qword ptr [RBX + 0x20]\nADD RBX,0x20\nTEST RSI,RSI\nJNZ 0x00402ac0\nXOR R13D,R13D\nJMP 0x00402b15\nXOR EAX,EAX\nCMP R12B,0x2d\nSETNZ AL\nMOV dword ptr [0x0060e228],EAX\nMOV R12,qword ptr [RSP + 0x30]\nJMP 0x00402c65\nXOR ESI,ESI\nCMP R12B,0x2d\nSETZ SIL\nMOV RDI,RBX\nCALL 0x00403050\nMOV R13B,AL\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nCMP R12B,0x2d\nSETNZ AL\nTEST R13B,R13B\nJNZ 0x00402b29\nTEST AL,AL\nJZ 0x00402f22\nTEST R13B,R13B\nMOV R12,qword ptr [RSP + 0x30]\nJNZ 0x00402c60\nMOV EBX,0x40a530\nMOV ESI,0x4096cf\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402c3e\nMOV RSI,qword ptr [RBX + 0x18]\nADD RBX,0x18\nTEST RSI,RSI\nJNZ 0x00402b50\nTEST R13B,R13B\nJNZ 0x00402c60\nMOV ESI,0x4092c4\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nMOV RBX,qword ptr [RSP + 0x18]\nJZ 0x00402c76\nMOV ESI,0x4092cb\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402c8d\nMOV ESI,0x4092d2\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402ce0\nMOV ESI,0x4092d7\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402cba\nMOV ESI,0x4092dc\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402cba\nMOV ESI,0x4092e4\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402d13\nMOV ESI,0x4092e9\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402d39\nMOV ESI,0x4092c5\nMOV RDI,RBP\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00402da7\nMOV RDI,RBP\nCALL 0x004038c0\nCMP EAX,-0x1\nJZ 0x00402dbe\nMOV EDI,0x2\nMOV RSI,RBP\nJMP 0x00402ca5\nCMP R14D,dword ptr [RSP + 0xc]\nJZ 0x00402f71\nINC R14D\nMOV RSI,qword ptr [R12 + R15*0x8 + 0x8]\nMOV RDI,RBX\nCALL 0x00403500\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nMOV RBX,qword ptr [RSP + 0x18]\nINC R14D\nCMP R14D,EBX\nJL 0x00402a80\nJMP 0x00402e13\nCMP R14D,dword ptr [RSP + 0xc]\nJZ 0x00402f71\nINC R14D\nMOV RSI,qword ptr [R12 + R15*0x8 + 0x8]\nXOR EDI,EDI\nJMP 0x00402ca5\nCMP R14D,dword ptr [RSP + 0xc]\nJZ 0x00402f71\nINC R14D\nMOV RSI,qword ptr [R12 + R15*0x8 + 0x8]\nMOV EDI,0x1\nCALL 0x004035c0\nMOV AL,0x1\nMOV qword ptr [RSP + 0x20],RAX\nMOV AL,0x1\nMOV qword ptr [RSP + 0x10],RAX\nJMP 0x00402c65\nCMP R14D,dword ptr [RSP + 0xc]\nJZ 0x00402f71\nINC R14D\nMOV RDI,qword ptr [R12 + R15*0x8 + 0x8]\nMOV ESI,0x7fffffff\nCALL 0x004036d0\nMOV EDI,0xffffffff\nMOV ESI,EAX\nJMP 0x00402d04\nCMP R14D,dword ptr [RSP + 0xc]\nJZ 0x00402f71\nINC R14D\nMOV RDI,qword ptr [R12 + R15*0x8 + 0x8]\nMOV ESI,0x7fffffff\nCALL 0x004036d0\nMOV ESI,0xffffffff\nMOV EDI,EAX\nMOV RDX,qword ptr [RSP + 0x28]\nCALL 0x00403610\nJMP 0x00402c65\nCALL 0x00402fb0\nMOV dword ptr [0x0060e348],EAX\nMOV dword ptr [0x0060e34c],0x0\nXOR EDI,EDI\nMOV RSI,qword ptr [RSP + 0x28]\nCALL 0x00403720\nJMP 0x00402c65\nCMP R14D,dword ptr [RSP + 0xc]\nJZ 0x00402f71\nINC R14D\nMOV RDI,qword ptr [R12 + R15*0x8 + 0x8]\nMOV RSI,-0x1\nCALL 0x004036d0\nMOV byte ptr [0x0060e31c],AL\nMOVZX ECX,AL\nMOV DL,0x1\nMOV qword ptr [RSP + 0x10],RDX\nCMP RCX,RAX\nJZ 0x00402c65\nINC R15\nXOR EDI,EDI\nMOV ESI,0x4092ee\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBP,RAX\nMOV RDI,qword ptr [R12 + R15*0x8]\nCALL 0x00405820\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBP\nCALL 0x00401810\nJMP 0x00402c65\nCALL 0x00402fb0\nMOV dword ptr [0x0060e348],EAX\nXOR EDI,EDI\nCALL 0x004037f0\nJMP 0x00402c65\nMOV RDI,RBP\nCALL 0x00403900\nMOV CL,0x1\nMOV qword ptr [RSP + 0x10],RCX\nTEST AL,AL\nJNZ 0x00402c65\nXOR EDI,EDI\nMOV ESI,0x409299\nJMP 0x00402f78\nCALL 0x00402fb0\nMOV dword ptr [0x0060e348],EAX\nMOV dword ptr [0x0060e34c],0x0\nMOV EDI,dword ptr [RSP + 0xc]\nMOV RSI,RBP\nCALL 0x00403020\nXOR EAX,EAX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nTEST byte ptr [RSP + 0x10],0x1\nMOV RBP,qword ptr [RSP + 0x28]\nJZ 0x00402e02\nMOV ESI,dword ptr [0x0060e228]\nXOR EDI,EDI\nMOV EDX,0x60e30c\nCALL 0x00401830\nTEST EAX,EAX\nJZ 0x00402e61\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401810\nXOR EDI,EDI\nMOV ESI,0x60e350\nCALL 0x00401820\nTEST EAX,EAX\nJZ 0x00402e9d\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401810\nMOV EDI,0x60e30c\nMOV ESI,0x60e350\nMOV EDX,0x3c\nCALL 0x004016d0\nTEST EAX,EAX\nJZ 0x00402e02\nAND dword ptr [0x0060e358],0xeff0ffff\nTEST byte ptr [RSP + 0x20],0x1\nJNZ 0x00402ee6\nMOV EDI,0x60e30c\nMOV ESI,0x60e350\nMOV EDX,0x3c\nCALL 0x004016d0\nTEST EAX,EAX\nJZ 0x00402e02\nXOR EDI,EDI\nMOV ESI,0x409309\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBP\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401810\nJMP 0x00402e02\nXOR EDI,EDI\nMOV ESI,0x409299\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBX,RAX\nDEC RBP\nJMP 0x00402f85\nMOV RDI,qword ptr [0x0060e2a8]\nMOV RCX,qword ptr [0x0060e230]\nMOV ESI,0x409177\nMOV EDX,0x4091bb\nMOV R8D,0x4091c9\nXOR R9D,R9D\nXOR EAX,EAX\nCALL 0x00406020\nXOR EDI,EDI\nCALL 0x004018a0\nXOR EDI,EDI\nCALL 0x00401a00\nXOR EDI,EDI\nMOV ESI,0x4092ad\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBX,RAX\nMOV RDI,RBP\nCALL 0x00405820\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401810\nMOV EDI,0x1\nCALL 0x00401a00\nNOP dword ptr [RAX + RAX*0x1]\n'
p998
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n49 89 f4\n48 89 7c 24 18\n49 8b 3c 24\ne8 51 1c 00 00\nbf 06 00 00 00\nbe c9 b1 40 00\ne8 f2 f0 ff ff\nbf bf 91 40 00\nbe 7c 91 40 00\ne8 d3 ee ff ff\nbf bf 91 40 00\ne8 a9 ee ff ff\nbf 10 42 40 00\ne8 8f 4b 00 00\nc7 05 c5 bb 20 00 00 00 00 00\nbb 01 00 00 00\nb0 01\n89 44 24 10\nbd 00 00 00 00\n45 31 ed\n45 31 f6\n45 31 ff\nc7 44 24 0c 00 00 00 00\n4c 89 64 24 30\neb 15\n4c 89 e5\n4c 8b 64 24 30\n48 8b 44 24 18\n89 c7\n44 29 ff\n49 63 c7\n49 8d 34 c4\nba 94 91 40 00\nb9 30 99 40 00\n45 31 c0\ne8 a5 ee ff ff\n83 f8 45\n7f 20\n83 f8 ff\n0f 84 34 01 00 00\n3d 7d ff ff ff\n0f 84 a7 07 00 00\n3d 7e ff ff ff\n75 35\ne9 ca 07 00 00\n83 f8 46\n74 7c\n83 f8 61\n0f 84 b2 00 00 00\n83 f8 67\n75 1d\nc7 44 24 0c 02 00 00 00\n41 b5 01\n3b 1d ec ba 20 00\n7d 92\ne9 ac 00 00 00\n41 01 df\n49 63 c7\n49 8b 1c c4\nbe d9 91 40 00\n48 89 df\ne8 29 ef ff ff\n85 c0\n74 19\nbe da 91 40 00\n48 89 df\ne8 18 ef ff ff\n85 c0\n74 08\nc7 44 24 10 00 00 00 00\nc7 05 a2 ba 20 00 00 00 00 00\nbb 01 00 00 00\n3b 1d 97 ba 20 00\n0f 8d 39 ff ff ff\neb 56\n48 85 ed\n74 25\n31 ff\nbe 9a 91 40 00\nba 05 00 00 00\ne8 b9 ed ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 c5 ef ff ff\n48 8b 2d 66 ba 20 00\n3b 1d 58 ba 20 00\n0f 8d fa fe ff ff\neb 17\n41 b6 01\nc7 44 24 0c 01 00 00 00\n3b 1d 3f ba 20 00\n0f 8d e1 fe ff ff\n4c 89 e1\n49 89 ec\n48 63 db\n49 63 c7\n48 63 2d 26 ba 20 00\n48 01 d8\n48 8d 3c c1\n48 8d 53 01\n48 39 ea\n48 0f 4c d5\n48 29 da\n48 c1 e2 03\n31 f6\ne8 e6 ed ff ff\n66 0f 1f 44 00 00\n48 ff c3\n48 39 eb\n7c f8\ne9 93 fe ff ff\n44 89 e8\n44 20 f0\na8 01\n74 25\n31 ff\nbe e0 91 40 00\nba 05 00 00 00\ne8 18 ed ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 24 ef ff ff\n44 8b 7c 24 10\n41 f6 c7 01\n75 2f\n44 89 f0\n44 08 e8\n24 01\n74 25\n31 ff\nbe 2f 92 40 00\nba 05 00 00 00\ne8 de ec ff ff\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 ca\ne8 ea ee ff ff\n48 85 ed\n0f 84 bd 00 00 00\n31 ff\nba 00 08 00 00\n31 c9\n48 89 ee\ne8 90 19 00 00\n85 c0\n79 2c\ne8 e7 eb ff ff\n8b 18\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 86 2d 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 de\ne8 a0 ee ff ff\n31 ff\nbe 03 00 00 00\n31 c0\ne8 b2 40 00 00\n89 c1\n83 f9 ff\n74 1a\n81 e1 ff f7 ff ff\n31 ff\nbe 04 00 00 00\n31 c0\n89 ca\ne8 95 40 00 00\n85 c0\n79 61\ne8 8c eb ff ff\n44 8b 38\n31 ff\nbe 65 92 40 00\nba 05 00 00 00\ne8 38 ec ff ff\n48 89 eb\n48 89 c5\n31 ff\nbe 03 00 00 00\n48 89 da\ne8 13 2d 00 00\n48 89 c1\nbf 01 00 00 00\n31 c0\n44 89 fe\n44 8b 7c 24 10\n48 89 ea\n48 89 dd\ne8 26 ee ff ff\neb 14\n31 ff\nbe 8a 92 40 00\nba 05 00 00 00\ne8 f3 eb ff ff\n48 89 c5\n31 ff\nbe 0c e3 60 00\ne8 14 ee ff ff\n85 c0\n74 2c\ne8 1b eb ff ff\n8b 18\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 ba 2c 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 de\ne8 d4 ed ff ff\n45 08 fd\n45 08 f5\n41 f6 c5 01\n0f 85 95 03 00 00\n48 8b 5c 24 18\n83 fb 02\n0f 8c a8 03 00 00\n48 89 6c 24 28\n8d 43 ff\n89 44 24 0c\n41 be 01 00 00 00\n31 c0\n48 89 44 24 10\n31 c0\n48 89 44 24 20\n66 0f 1f 44 00 00\n4d 63 fe\n4b 8b 04 fc\n48 85 c0\n0f 84 d5 01 00 00\n44 8a 20\n48 8d 68 01\n41 80 fc 2d\n48 0f 45 e8\nbe da 91 40 00\n48 89 ef\ne8 64 ec ff ff\n85 c0\n74 30\nbb f0 99 40 00\nbe fd 94 40 00\n66 0f 1f 44 00 00\n48 89 ef\ne8 48 ec ff ff\n85 c0\n74 2d\n48 8b 73 20\n48 83 c3 20\n48 85 f6\n75 e7\n45 31 ed\neb 37\n31 c0\n41 80 fc 2d\n0f 95 c0\n89 05 39 b7 20 00\n4c 8b 64 24 30\ne9 6c 01 00 00\n31 f6\n41 80 fc 2d\n40 0f 94 c6\n48 89 df\ne8 45 05 00 00\n41 88 c5\nb0 01\n48 89 44 24 10\n41 80 fc 2d\n0f 95 c0\n45 84 ed\n75 08\n84 c0\n0f 84 f9 03 00 00\n45 84 ed\n4c 8b 64 24 30\n0f 85 29 01 00 00\nbb 30 a5 40 00\nbe cf 96 40 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 ef\ne8 b8 eb ff ff\n85 c0\n0f 84 de 00 00 00\n48 8b 73 18\n48 83 c3 18\n48 85 f6\n75 e3\n45 84 ed\n0f 85 ea 00 00 00\nbe c4 92 40 00\n48 89 ef\ne8 8d eb ff ff\n85 c0\n48 8b 5c 24 18\n0f 84 e6 00 00 00\nbe cb 92 40 00\n48 89 ef\ne8 73 eb ff ff\n85 c0\n0f 84 e8 00 00 00\nbe d2 92 40 00\n48 89 ef\ne8 5e eb ff ff\n85 c0\n0f 84 26 01 00 00\nbe d7 92 40 00\n48 89 ef\ne8 49 eb ff ff\n85 c0\n0f 84 eb 00 00 00\nbe dc 92 40 00\n48 89 ef\ne8 34 eb ff ff\n85 c0\n0f 84 d6 00 00 00\nbe e4 92 40 00\n48 89 ef\ne8 1f eb ff ff\n85 c0\n0f 84 1a 01 00 00\nbe e9 92 40 00\n48 89 ef\ne8 0a eb ff ff\n85 c0\n0f 84 2b 01 00 00\nbe c5 92 40 00\n48 89 ef\ne8 f5 ea ff ff\n85 c0\n0f 84 84 01 00 00\n48 89 ef\ne8 95 0c 00 00\n83 f8 ff\n0f 84 8a 01 00 00\nbf 02 00 00 00\n48 89 ee\neb 67\n44 3b 74 24 0c\n0f 84 28 03 00 00\n41 ff c6\n4b 8b 74 fc 08\n48 89 df\ne8 a7 08 00 00\nb0 01\n48 89 44 24 10\n48 8b 5c 24 18\n41 ff c6\n41 39 de\n0f 8c 0f fe ff ff\ne9 9d 01 00 00\n44 3b 74 24 0c\n0f 84 f0 02 00 00\n41 ff c6\n4b 8b 74 fc 08\n31 ff\neb 18\n44 3b 74 24 0c\n0f 84 d9 02 00 00\n41 ff c6\n4b 8b 74 fc 08\nbf 01 00 00 00\ne8 16 09 00 00\nb0 01\n48 89 44 24 20\nb0 01\n48 89 44 24 10\neb ab\n44 3b 74 24 0c\n0f 84 ac 02 00 00\n41 ff c6\n4b 8b 7c fc 08\nbe ff ff ff 7f\ne8 f9 09 00 00\nbf ff ff ff ff\n89 c6\neb 24\n44 3b 74 24 0c\n0f 84 86 02 00 00\n41 ff c6\n4b 8b 7c fc 08\nbe ff ff ff 7f\ne8 d3 09 00 00\nbe ff ff ff ff\n89 c7\n48 8b 54 24 28\ne8 02 09 00 00\ne9 52 ff ff ff\ne8 98 02 00 00\n89 05 2a b6 20 00\nc7 05 24 b6 20 00 00 00 00 00\n31 ff\n48 8b 74 24 28\ne8 ec 09 00 00\ne9 2c ff ff ff\n44 3b 74 24 0c\n0f 84 2d 02 00 00\n41 ff c6\n4b 8b 7c fc 08\n48 c7 c6 ff ff ff ff\ne8 78 09 00 00\n88 05 be b5 20 00\n0f b6 c8\nb2 01\n48 89 54 24 10\n48 39 c1\n0f 84 f4 fe ff ff\n49 ff c7\n31 ff\nbe ee 92 40 00\nba 05 00 00 00\ne8 6b e8 ff ff\n48 89 c5\n4b 8b 3c fc\ne8 8f 2a 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ea\ne8 6e ea ff ff\ne9 be fe ff ff\ne8 04 02 00 00\n89 05 96 b5 20 00\n31 ff\ne8 37 0a 00 00\ne9 a7 fe ff ff\n48 89 ef\ne8 3a 0b 00 00\nb1 01\n48 89 4c 24 10\n84 c0\n0f 85 90 fe ff ff\n31 ff\nbe 99 92 40 00\ne9 97 01 00 00\ne8 ca 01 00 00\n89 05 5c b5 20 00\nc7 05 56 b5 20 00 00 00 00 00\n8b 7c 24 0c\n48 89 ee\ne8 1e 02 00 00\n31 c0\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\nf6 44 24 10 01\n48 8b 6c 24 28\n74 e3\n8b 35 03 b4 20 00\n31 ff\nba 0c e3 60 00\ne8 ff e9 ff ff\n85 c0\n74 2c\ne8 f6 e6 ff ff\n8b 18\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 95 28 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 de\ne8 af e9 ff ff\n31 ff\nbe 50 e3 60 00\ne8 b3 e9 ff ff\n85 c0\n74 2c\ne8 ba e6 ff ff\n8b 18\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 59 28 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 de\ne8 73 e9 ff ff\nbf 0c e3 60 00\nbe 50 e3 60 00\nba 3c 00 00 00\ne8 1f e8 ff ff\n85 c0\n0f 84 49 ff ff ff\n81 25 95 b4 20 00 ff ff f0 ef\nf6 44 24 20 01\n75 1c\nbf 0c e3 60 00\nbe 50 e3 60 00\nba 3c 00 00 00\ne8 f2 e7 ff ff\n85 c0\n0f 84 1c ff ff ff\n31 ff\nbe 09 93 40 00\nba 05 00 00 00\ne8 f9 e6 ff ff\n48 89 c3\n31 ff\nbe 03 00 00 00\n48 89 ea\ne8 d7 27 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 f3 e8 ff ff\ne9 e0 fe ff ff\n31 ff\nbe 99 92 40 00\nba 05 00 00 00\ne8 bd e6 ff ff\n48 89 c3\n48 ff cd\neb 4a\n48 8b 3d 66 b3 20 00\n48 8b 0d e7 b2 20 00\nbe 77 91 40 00\nba bb 91 40 00\n41 b8 c9 91 40 00\n45 31 c9\n31 c0\ne8 bd 30 00 00\n31 ff\ne8 36 e9 ff ff\n31 ff\ne8 8f ea ff ff\n31 ff\nbe ad 92 40 00\nba 05 00 00 00\ne8 6e e6 ff ff\n48 89 c3\n48 89 ef\ne8 93 28 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 da\ne8 72 e8 ff ff\nbf 01 00 00 00\ne8 58 ea ff ff\n0f 1f 84 00 00 00 00 00\n'
p999
S'.text:00000000004026c0\n.text:00000000004026c1\n.text:00000000004026c3\n.text:00000000004026c5\n.text:00000000004026c7\n.text:00000000004026c9\n.text:00000000004026ca\n.text:00000000004026ce\n.text:00000000004026d1\n.text:00000000004026d6\n.text:00000000004026da\n.text:00000000004026df\n.text:00000000004026e4\n.text:00000000004026e9\n.text:00000000004026ee\n.text:00000000004026f3\n.text:00000000004026f8\n.text:00000000004026fd\n.text:0000000000402702\n.text:0000000000402707\n.text:000000000040270c\n.text:0000000000402711\n.text:000000000040271b\n.text:0000000000402720\n.text:0000000000402722\n.text:0000000000402726\n.text:000000000040272b\n.text:000000000040272e\n.text:0000000000402731\n.text:0000000000402734\n.text:000000000040273c\n.text:0000000000402741\n.text:0000000000402750\n.text:0000000000402753\n.text:0000000000402758\n.text:000000000040275d\n.text:000000000040275f\n.text:0000000000402762\n.text:0000000000402765\n.text:0000000000402769\n.text:000000000040276e\n.text:0000000000402773\n.text:0000000000402776\n.text:000000000040277b\n.text:000000000040277e\n.text:0000000000402780\n.text:0000000000402783\n.text:0000000000402789\n.text:000000000040278e\n.text:0000000000402794\n.text:0000000000402799\n.text:000000000040279b\n.text:00000000004027a0\n.text:00000000004027a3\n.text:00000000004027a5\n.text:00000000004027a8\n.text:00000000004027ae\n.text:00000000004027b1\n.text:00000000004027b3\n.text:00000000004027bb\n.text:00000000004027be\n.text:00000000004027c4\n.text:00000000004027c6\n.text:00000000004027d0\n.text:00000000004027d3\n.text:00000000004027d6\n.text:00000000004027da\n.text:00000000004027df\n.text:00000000004027e2\n.text:00000000004027e7\n.text:00000000004027e9\n.text:00000000004027eb\n.text:00000000004027f0\n.text:00000000004027f3\n.text:00000000004027f8\n.text:00000000004027fa\n.text:00000000004027fc\n.text:0000000000402804\n.text:000000000040280e\n.text:0000000000402813\n.text:0000000000402819\n.text:000000000040281f\n.text:0000000000402821\n.text:0000000000402824\n.text:0000000000402826\n.text:0000000000402828\n.text:000000000040282d\n.text:0000000000402832\n.text:0000000000402837\n.text:000000000040283a\n.text:000000000040283f\n.text:0000000000402841\n.text:0000000000402843\n.text:0000000000402846\n.text:000000000040284b\n.text:0000000000402852\n.text:0000000000402858\n.text:000000000040285e\n.text:0000000000402860\n.text:0000000000402863\n.text:000000000040286b\n.text:0000000000402871\n.text:0000000000402877\n.text:000000000040287a\n.text:000000000040287d\n.text:0000000000402880\n.text:0000000000402883\n.text:000000000040288a\n.text:000000000040288d\n.text:0000000000402891\n.text:0000000000402895\n.text:0000000000402898\n.text:000000000040289c\n.text:000000000040289f\n.text:00000000004028a3\n.text:00000000004028a5\n.text:00000000004028aa\n.text:00000000004028b0\n.text:00000000004028b3\n.text:00000000004028b6\n.text:00000000004028b8\n.text:00000000004028bd\n.text:00000000004028c0\n.text:00000000004028c3\n.text:00000000004028c5\n.text:00000000004028c7\n.text:00000000004028c9\n.text:00000000004028ce\n.text:00000000004028d3\n.text:00000000004028d8\n.text:00000000004028db\n.text:00000000004028e0\n.text:00000000004028e2\n.text:00000000004028e4\n.text:00000000004028e7\n.text:00000000004028ec\n.text:00000000004028f1\n.text:00000000004028f5\n.text:00000000004028f7\n.text:00000000004028fa\n.text:00000000004028fd\n.text:00000000004028ff\n.text:0000000000402901\n.text:0000000000402903\n.text:0000000000402908\n.text:000000000040290d\n.text:0000000000402912\n.text:0000000000402915\n.text:000000000040291a\n.text:000000000040291c\n.text:000000000040291e\n.text:0000000000402921\n.text:0000000000402926\n.text:0000000000402929\n.text:000000000040292f\n.text:0000000000402931\n.text:0000000000402936\n.text:0000000000402938\n.text:000000000040293b\n.text:0000000000402940\n.text:0000000000402942\n.text:0000000000402944\n.text:0000000000402949\n.text:000000000040294b\n.text:000000000040294d\n.text:0000000000402952\n.text:0000000000402955\n.text:000000000040295a\n.text:000000000040295d\n.text:0000000000402962\n.text:0000000000402967\n.text:0000000000402969\n.text:000000000040296b\n.text:0000000000402970\n.text:0000000000402972\n.text:0000000000402977\n.text:0000000000402979\n.text:000000000040297e\n.text:0000000000402980\n.text:0000000000402983\n.text:0000000000402985\n.text:000000000040298b\n.text:000000000040298d\n.text:0000000000402992\n.text:0000000000402994\n.text:0000000000402996\n.text:000000000040299b\n.text:000000000040299d\n.text:000000000040299f\n.text:00000000004029a4\n.text:00000000004029a7\n.text:00000000004029a9\n.text:00000000004029ae\n.text:00000000004029b3\n.text:00000000004029b8\n.text:00000000004029bb\n.text:00000000004029be\n.text:00000000004029c0\n.text:00000000004029c5\n.text:00000000004029c8\n.text:00000000004029cd\n.text:00000000004029d0\n.text:00000000004029d5\n.text:00000000004029d7\n.text:00000000004029da\n.text:00000000004029df\n.text:00000000004029e2\n.text:00000000004029e5\n.text:00000000004029ea\n.text:00000000004029ec\n.text:00000000004029ee\n.text:00000000004029f3\n.text:00000000004029f8\n.text:00000000004029fd\n.text:0000000000402a00\n.text:0000000000402a02\n.text:0000000000402a07\n.text:0000000000402a0c\n.text:0000000000402a0e\n.text:0000000000402a10\n.text:0000000000402a15\n.text:0000000000402a17\n.text:0000000000402a19\n.text:0000000000402a1e\n.text:0000000000402a21\n.text:0000000000402a26\n.text:0000000000402a29\n.text:0000000000402a2e\n.text:0000000000402a33\n.text:0000000000402a35\n.text:0000000000402a37\n.text:0000000000402a3c\n.text:0000000000402a3f\n.text:0000000000402a42\n.text:0000000000402a46\n.text:0000000000402a4c\n.text:0000000000402a51\n.text:0000000000402a54\n.text:0000000000402a5a\n.text:0000000000402a5f\n.text:0000000000402a62\n.text:0000000000402a66\n.text:0000000000402a6c\n.text:0000000000402a6e\n.text:0000000000402a73\n.text:0000000000402a75\n.text:0000000000402a7a\n.text:0000000000402a80\n.text:0000000000402a83\n.text:0000000000402a87\n.text:0000000000402a8a\n.text:0000000000402a90\n.text:0000000000402a93\n.text:0000000000402a97\n.text:0000000000402a9b\n.text:0000000000402a9f\n.text:0000000000402aa4\n.text:0000000000402aa7\n.text:0000000000402aac\n.text:0000000000402aae\n.text:0000000000402ab0\n.text:0000000000402ab5\n.text:0000000000402aba\n.text:0000000000402ac0\n.text:0000000000402ac3\n.text:0000000000402ac8\n.text:0000000000402aca\n.text:0000000000402acc\n.text:0000000000402ad0\n.text:0000000000402ad4\n.text:0000000000402ad7\n.text:0000000000402ad9\n.text:0000000000402adc\n.text:0000000000402ae0\n.text:0000000000402ae2\n.text:0000000000402ae6\n.text:0000000000402ae9\n.text:0000000000402aef\n.text:0000000000402af4\n.text:0000000000402af9\n.text:0000000000402afb\n.text:0000000000402aff\n.text:0000000000402b03\n.text:0000000000402b06\n.text:0000000000402b0b\n.text:0000000000402b0e\n.text:0000000000402b10\n.text:0000000000402b15\n.text:0000000000402b19\n.text:0000000000402b1c\n.text:0000000000402b1f\n.text:0000000000402b21\n.text:0000000000402b23\n.text:0000000000402b29\n.text:0000000000402b2c\n.text:0000000000402b31\n.text:0000000000402b37\n.text:0000000000402b3c\n.text:0000000000402b41\n.text:0000000000402b50\n.text:0000000000402b53\n.text:0000000000402b58\n.text:0000000000402b5a\n.text:0000000000402b60\n.text:0000000000402b64\n.text:0000000000402b68\n.text:0000000000402b6b\n.text:0000000000402b6d\n.text:0000000000402b70\n.text:0000000000402b76\n.text:0000000000402b7b\n.text:0000000000402b7e\n.text:0000000000402b83\n.text:0000000000402b85\n.text:0000000000402b8a\n.text:0000000000402b90\n.text:0000000000402b95\n.text:0000000000402b98\n.text:0000000000402b9d\n.text:0000000000402b9f\n.text:0000000000402ba5\n.text:0000000000402baa\n.text:0000000000402bad\n.text:0000000000402bb2\n.text:0000000000402bb4\n.text:0000000000402bba\n.text:0000000000402bbf\n.text:0000000000402bc2\n.text:0000000000402bc7\n.text:0000000000402bc9\n.text:0000000000402bcf\n.text:0000000000402bd4\n.text:0000000000402bd7\n.text:0000000000402bdc\n.text:0000000000402bde\n.text:0000000000402be4\n.text:0000000000402be9\n.text:0000000000402bec\n.text:0000000000402bf1\n.text:0000000000402bf3\n.text:0000000000402bf9\n.text:0000000000402bfe\n.text:0000000000402c01\n.text:0000000000402c06\n.text:0000000000402c08\n.text:0000000000402c0e\n.text:0000000000402c13\n.text:0000000000402c16\n.text:0000000000402c1b\n.text:0000000000402c1d\n.text:0000000000402c23\n.text:0000000000402c26\n.text:0000000000402c2b\n.text:0000000000402c2e\n.text:0000000000402c34\n.text:0000000000402c39\n.text:0000000000402c3c\n.text:0000000000402c3e\n.text:0000000000402c43\n.text:0000000000402c49\n.text:0000000000402c4c\n.text:0000000000402c51\n.text:0000000000402c54\n.text:0000000000402c59\n.text:0000000000402c5b\n.text:0000000000402c60\n.text:0000000000402c65\n.text:0000000000402c68\n.text:0000000000402c6b\n.text:0000000000402c71\n.text:0000000000402c76\n.text:0000000000402c7b\n.text:0000000000402c81\n.text:0000000000402c84\n.text:0000000000402c89\n.text:0000000000402c8b\n.text:0000000000402c8d\n.text:0000000000402c92\n.text:0000000000402c98\n.text:0000000000402c9b\n.text:0000000000402ca0\n.text:0000000000402ca5\n.text:0000000000402caa\n.text:0000000000402cac\n.text:0000000000402cb1\n.text:0000000000402cb3\n.text:0000000000402cb8\n.text:0000000000402cba\n.text:0000000000402cbf\n.text:0000000000402cc5\n.text:0000000000402cc8\n.text:0000000000402ccd\n.text:0000000000402cd2\n.text:0000000000402cd7\n.text:0000000000402cdc\n.text:0000000000402cde\n.text:0000000000402ce0\n.text:0000000000402ce5\n.text:0000000000402ceb\n.text:0000000000402cee\n.text:0000000000402cf3\n.text:0000000000402cf8\n.text:0000000000402cfd\n.text:0000000000402d02\n.text:0000000000402d04\n.text:0000000000402d09\n.text:0000000000402d0e\n.text:0000000000402d13\n.text:0000000000402d18\n.text:0000000000402d1e\n.text:0000000000402d28\n.text:0000000000402d2a\n.text:0000000000402d2f\n.text:0000000000402d34\n.text:0000000000402d39\n.text:0000000000402d3e\n.text:0000000000402d44\n.text:0000000000402d47\n.text:0000000000402d4c\n.text:0000000000402d53\n.text:0000000000402d58\n.text:0000000000402d5e\n.text:0000000000402d61\n.text:0000000000402d63\n.text:0000000000402d68\n.text:0000000000402d6b\n.text:0000000000402d71\n.text:0000000000402d74\n.text:0000000000402d76\n.text:0000000000402d7b\n.text:0000000000402d80\n.text:0000000000402d85\n.text:0000000000402d88\n.text:0000000000402d8c\n.text:0000000000402d91\n.text:0000000000402d94\n.text:0000000000402d96\n.text:0000000000402d98\n.text:0000000000402d9a\n.text:0000000000402d9d\n.text:0000000000402da2\n.text:0000000000402da7\n.text:0000000000402dac\n.text:0000000000402db2\n.text:0000000000402db4\n.text:0000000000402db9\n.text:0000000000402dbe\n.text:0000000000402dc1\n.text:0000000000402dc6\n.text:0000000000402dc8\n.text:0000000000402dcd\n.text:0000000000402dcf\n.text:0000000000402dd5\n.text:0000000000402dd7\n.text:0000000000402ddc\n.text:0000000000402de1\n.text:0000000000402de6\n.text:0000000000402dec\n.text:0000000000402df6\n.text:0000000000402dfa\n.text:0000000000402dfd\n.text:0000000000402e02\n.text:0000000000402e04\n.text:0000000000402e08\n.text:0000000000402e09\n.text:0000000000402e0b\n.text:0000000000402e0d\n.text:0000000000402e0f\n.text:0000000000402e11\n.text:0000000000402e12\n.text:0000000000402e13\n.text:0000000000402e18\n.text:0000000000402e1d\n.text:0000000000402e1f\n.text:0000000000402e25\n.text:0000000000402e27\n.text:0000000000402e2c\n.text:0000000000402e31\n.text:0000000000402e33\n.text:0000000000402e35\n.text:0000000000402e3a\n.text:0000000000402e3c\n.text:0000000000402e3e\n.text:0000000000402e43\n.text:0000000000402e46\n.text:0000000000402e4b\n.text:0000000000402e4e\n.text:0000000000402e53\n.text:0000000000402e58\n.text:0000000000402e5a\n.text:0000000000402e5c\n.text:0000000000402e61\n.text:0000000000402e63\n.text:0000000000402e68\n.text:0000000000402e6d\n.text:0000000000402e6f\n.text:0000000000402e71\n.text:0000000000402e76\n.text:0000000000402e78\n.text:0000000000402e7a\n.text:0000000000402e7f\n.text:0000000000402e82\n.text:0000000000402e87\n.text:0000000000402e8a\n.text:0000000000402e8f\n.text:0000000000402e94\n.text:0000000000402e96\n.text:0000000000402e98\n.text:0000000000402e9d\n.text:0000000000402ea2\n.text:0000000000402ea7\n.text:0000000000402eac\n.text:0000000000402eb1\n.text:0000000000402eb3\n.text:0000000000402eb9\n.text:0000000000402ec3\n.text:0000000000402ec8\n.text:0000000000402eca\n.text:0000000000402ecf\n.text:0000000000402ed4\n.text:0000000000402ed9\n.text:0000000000402ede\n.text:0000000000402ee0\n.text:0000000000402ee6\n.text:0000000000402ee8\n.text:0000000000402eed\n.text:0000000000402ef2\n.text:0000000000402ef7\n.text:0000000000402efa\n.text:0000000000402efc\n.text:0000000000402f01\n.text:0000000000402f04\n.text:0000000000402f09\n.text:0000000000402f0c\n.text:0000000000402f11\n.text:0000000000402f13\n.text:0000000000402f15\n.text:0000000000402f18\n.text:0000000000402f1d\n.text:0000000000402f22\n.text:0000000000402f24\n.text:0000000000402f29\n.text:0000000000402f2e\n.text:0000000000402f33\n.text:0000000000402f36\n.text:0000000000402f39\n.text:0000000000402f3b\n.text:0000000000402f42\n.text:0000000000402f49\n.text:0000000000402f4e\n.text:0000000000402f53\n.text:0000000000402f59\n.text:0000000000402f5c\n.text:0000000000402f5e\n.text:0000000000402f63\n.text:0000000000402f65\n.text:0000000000402f6a\n.text:0000000000402f6c\n.text:0000000000402f71\n.text:0000000000402f73\n.text:0000000000402f78\n.text:0000000000402f7d\n.text:0000000000402f82\n.text:0000000000402f85\n.text:0000000000402f88\n.text:0000000000402f8d\n.text:0000000000402f90\n.text:0000000000402f92\n.text:0000000000402f94\n.text:0000000000402f96\n.text:0000000000402f99\n.text:0000000000402f9e\n.text:0000000000402fa3\n.text:0000000000402fa8\n'
p1000
tp1001
sS'xcharalloc'
p1002
(S'\n__stdcall xcharalloc(size_t n)\n'
p1003
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1004
S'JMP 0x00406150\n'
p1005
S'e9 2b ff ff ff\n'
p1006
S'.text:0000000000406220\n'
p1007
tp1008
sS'c_isupper'
p1009
(S'\n__stdcall c_isupper()\n'
p1010
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1011
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1012
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1013
S'.text:0000000000406cf0\n.text:0000000000406cf3\n.text:0000000000406cf6\n.text:0000000000406cf9\n'
p1014
tp1015
sS'c_isalnum'
p1016
(S'\n__stdcall c_isalnum()\n'
p1017
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1018
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x00406c0b\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x00406c0b\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x00406c0a\nXOR EAX,EAX\nRET\n'
p1019
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p1020
S'.text:0000000000406bf0\n.text:0000000000406bf2\n.text:0000000000406bf5\n.text:0000000000406bf8\n.text:0000000000406bfa\n.text:0000000000406c04\n.text:0000000000406c08\n.text:0000000000406c0a\n.text:0000000000406c0b\n.text:0000000000406c0e\n.text:0000000000406c11\n.text:0000000000406c13\n.text:0000000000406c15\n'
p1021
tp1022
sS'string_to_baud'
p1023
(S'\n__stdcall string_to_baud(char * arg)\n'
p1024
V\u000aspeed_t string_to_baud(char *arg)\u000a\u000a{\u000a  int iVar1;\u000a  long lVar2;\u000a  \u000a  lVar2 = -0x330;\u000a  do {\u000a    iVar1 = strcmp(arg,*(char **)((long)&speeds[0x22].string + lVar2));\u000a    if (iVar1 == 0) {\u000a      return *(speed_t *)((long)&speeds[0x22].speed + lVar2);\u000a    }\u000a    lVar2 = lVar2 + 0x18;\u000a  } while (lVar2 != 0);\u000a  return 0xffffffff;\u000a}\u000a\u000a
p1025
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV RBX,-0x330\nNOP\nMOV RSI,qword ptr [0x40aaa0 + RBX]\nMOV RDI,R14\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x004038f0\nADD RBX,0x18\nJNZ 0x004038d0\nMOV EAX,0xffffffff\nJMP 0x004038f6\nMOV EAX,dword ptr [0x40aaa8 + RBX]\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p1026
S'41 56\n53\n50\n49 89 fe\n48 c7 c3 d0 fc ff ff\n66 90\n48 8b b3 a0 aa 40 00\n4c 89 f7\ne8 31 de ff ff\n85 c0\n74 0d\n48 83 c3 18\n75 e7\nb8 ff ff ff ff\neb 06\n8b 83 a8 aa 40 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p1027
S'.text:00000000004038c0\n.text:00000000004038c2\n.text:00000000004038c3\n.text:00000000004038c4\n.text:00000000004038c7\n.text:00000000004038ce\n.text:00000000004038d0\n.text:00000000004038d7\n.text:00000000004038da\n.text:00000000004038df\n.text:00000000004038e1\n.text:00000000004038e3\n.text:00000000004038e7\n.text:00000000004038e9\n.text:00000000004038ee\n.text:00000000004038f0\n.text:00000000004038f6\n.text:00000000004038fa\n.text:00000000004038fb\n.text:00000000004038fd\n'
p1028
tp1029
sS'__errno_location'
p1030
(S'\n__stdcall __errno_location()\n'
p1031
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_0060e030)();\u000a  return piVar1;\u000a}\u000a\u000a
p1032
S'JMP qword ptr [0x0060e030]\n'
p1033
S'ff 25 fa ca 20 00\n'
p1034
S'.plt:0000000000401530\n'
p1035
tp1036
sS'x2nrealloc'
p1037
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p1038
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p1039
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x004061ec\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00406219\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x0040620a\nTEST RCX,RCX\nJNZ 0x0040620a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x00406190\nPUSH RAX\nCALL 0x004062e0\n'
p1040
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p1041
S'.text:00000000004061c0\n.text:00000000004061c3\n.text:00000000004061c6\n.text:00000000004061c9\n.text:00000000004061cb\n.text:00000000004061d5\n.text:00000000004061d7\n.text:00000000004061da\n.text:00000000004061dd\n.text:00000000004061df\n.text:00000000004061e2\n.text:00000000004061e5\n.text:00000000004061ea\n.text:00000000004061ec\n.text:00000000004061ef\n.text:00000000004061f1\n.text:00000000004061f6\n.text:00000000004061f8\n.text:00000000004061fb\n.text:00000000004061fd\n.text:0000000000406204\n.text:0000000000406207\n.text:000000000040620a\n.text:000000000040620d\n.text:0000000000406211\n.text:0000000000406214\n.text:0000000000406219\n.text:000000000040621a\n'
p1042
tp1043
sS'wrapf'
p1044
(S'\n__stdcall wrapf(char * message)\n'
p1045
V\u000avoid wrapf(char *message,...)\u000a\u000a{\u000a  char in_AL;\u000a  int iVar1;\u000a  undefined8 in_RCX;\u000a  undefined8 in_RDX;\u000a  undefined8 in_RSI;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list args;\u000a  char *local_e0;\u000a  undefined4 local_d8;\u000a  undefined4 local_d4;\u000a  undefined *local_d0;\u000a  undefined *local_c8;\u000a  undefined local_b8 [8];\u000a  undefined8 local_b0;\u000a  undefined8 local_a8;\u000a  undefined8 local_a0;\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_c8 = local_b8;\u000a  local_d0 = &stack0x00000008;\u000a  local_d4 = 0x30;\u000a  local_d8 = 8;\u000a  local_b0 = in_RSI;\u000a  local_a8 = in_RDX;\u000a  local_a0 = in_RCX;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  iVar1 = __vasprintf_chk(&local_e0,1,message);\u000a  if (iVar1 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  if (0 < current_col) {\u000a    if (max_col - current_col < iVar1) {\u000a      putchar_unlocked(10);\u000a      current_col = 0;\u000a    }\u000a    else {\u000a      putchar_unlocked(0x20);\u000a      current_col = current_col + 1;\u000a    }\u000a  }\u000a  fputs_unlocked(local_e0,stdout);\u000a  free(local_e0);\u000a  current_col = current_col + iVar1;\u000a  return;\u000a}\u000a\u000a
p1046
S'PUSH RBX\nSUB RSP,0xe0\nMOV RBX,RDI\nTEST AL,AL\nJZ 0x00403b19\nMOVAPS xmmword ptr [RSP + 0x60],XMM0\nMOVAPS xmmword ptr [RSP + 0x70],XMM1\nMOVAPS xmmword ptr [0x80 + RSP],XMM2\nMOVAPS xmmword ptr [0x90 + RSP],XMM3\nMOVAPS xmmword ptr [0xa0 + RSP],XMM4\nMOVAPS xmmword ptr [0xb0 + RSP],XMM5\nMOVAPS xmmword ptr [0xc0 + RSP],XMM6\nMOVAPS xmmword ptr [0xd0 + RSP],XMM7\nMOV qword ptr [RSP + 0x58],R9\nMOV qword ptr [RSP + 0x50],R8\nMOV qword ptr [RSP + 0x48],RCX\nMOV qword ptr [RSP + 0x40],RDX\nMOV qword ptr [RSP + 0x38],RSI\nLEA RAX,[RSP + 0x30]\nMOV qword ptr [RSP + 0x20],RAX\nLEA RAX,[0xf0 + RSP]\nMOV qword ptr [RSP + 0x18],RAX\nMOV dword ptr [RSP + 0x14],0x30\nMOV dword ptr [RSP + 0x10],0x8\nLEA RDI,[RSP + 0x8]\nLEA RCX,[RSP + 0x10]\nMOV ESI,0x1\nMOV RDX,RBX\nCALL 0x00401790\nMOV EBX,EAX\nTEST EBX,EBX\nJS 0x00403bdc\nMOV EAX,dword ptr [0x0060e34c]\nTEST EAX,EAX\nJLE 0x00403bb2\nMOV ECX,dword ptr [0x0060e348]\nSUB ECX,EAX\nCMP ECX,EBX\nJGE 0x00403b9a\nMOV EDI,0xa\nCALL 0x00401740\nXOR EAX,EAX\nJMP 0x00403bac\nMOV EDI,0x20\nCALL 0x00401740\nMOV EAX,dword ptr [0x0060e34c]\nINC EAX\nMOV dword ptr [0x0060e34c],EAX\nMOV RDI,qword ptr [RSP + 0x8]\nMOV RSI,qword ptr [0x0060e2a8]\nCALL 0x004016e0\nMOV RDI,qword ptr [RSP + 0x8]\nCALL 0x00401510\nADD dword ptr [0x0060e34c],EBX\nADD RSP,0xe0\nPOP RBX\nRET\nCALL 0x004062e0\n'
p1047
S'53\n48 81 ec e0 00 00 00\n48 89 fb\n84 c0\n74 3a\n0f 29 44 24 60\n0f 29 4c 24 70\n0f 29 94 24 80 00 00 00\n0f 29 9c 24 90 00 00 00\n0f 29 a4 24 a0 00 00 00\n0f 29 ac 24 b0 00 00 00\n0f 29 b4 24 c0 00 00 00\n0f 29 bc 24 d0 00 00 00\n4c 89 4c 24 58\n4c 89 44 24 50\n48 89 4c 24 48\n48 89 54 24 40\n48 89 74 24 38\n48 8d 44 24 30\n48 89 44 24 20\n48 8d 84 24 f0 00 00 00\n48 89 44 24 18\nc7 44 24 14 30 00 00 00\nc7 44 24 10 08 00 00 00\n48 8d 7c 24 08\n48 8d 4c 24 10\nbe 01 00 00 00\n48 89 da\ne8 20 dc ff ff\n89 c3\n85 db\n78 66\n8b 05 d0 a7 20 00\n85 c0\n7e 32\n8b 0d c2 a7 20 00\n29 c1\n39 d9\n7d 0e\nbf 0a 00 00 00\ne8 aa db ff ff\n31 c0\neb 12\nbf 20 00 00 00\ne8 9c db ff ff\n8b 05 a2 a7 20 00\nff c0\n89 05 9a a7 20 00\n48 8b 7c 24 08\n48 8b 35 ea a6 20 00\ne8 1d db ff ff\n48 8b 7c 24 08\ne8 43 d9 ff ff\n01 1d 79 a7 20 00\n48 81 c4 e0 00 00 00\n5b\nc3\ne8 ff 26 00 00\n'
p1048
S'.text:0000000000403ad0\n.text:0000000000403ad1\n.text:0000000000403ad8\n.text:0000000000403adb\n.text:0000000000403add\n.text:0000000000403adf\n.text:0000000000403ae4\n.text:0000000000403ae9\n.text:0000000000403af1\n.text:0000000000403af9\n.text:0000000000403b01\n.text:0000000000403b09\n.text:0000000000403b11\n.text:0000000000403b19\n.text:0000000000403b1e\n.text:0000000000403b23\n.text:0000000000403b28\n.text:0000000000403b2d\n.text:0000000000403b32\n.text:0000000000403b37\n.text:0000000000403b3c\n.text:0000000000403b44\n.text:0000000000403b49\n.text:0000000000403b51\n.text:0000000000403b59\n.text:0000000000403b5e\n.text:0000000000403b63\n.text:0000000000403b68\n.text:0000000000403b6b\n.text:0000000000403b70\n.text:0000000000403b72\n.text:0000000000403b74\n.text:0000000000403b76\n.text:0000000000403b7c\n.text:0000000000403b7e\n.text:0000000000403b80\n.text:0000000000403b86\n.text:0000000000403b88\n.text:0000000000403b8a\n.text:0000000000403b8c\n.text:0000000000403b91\n.text:0000000000403b96\n.text:0000000000403b98\n.text:0000000000403b9a\n.text:0000000000403b9f\n.text:0000000000403ba4\n.text:0000000000403baa\n.text:0000000000403bac\n.text:0000000000403bb2\n.text:0000000000403bb7\n.text:0000000000403bbe\n.text:0000000000403bc3\n.text:0000000000403bc8\n.text:0000000000403bcd\n.text:0000000000403bd3\n.text:0000000000403bda\n.text:0000000000403bdb\n.text:0000000000403bdc\n'
p1049
tp1050
sS'quotearg_n_options'
p1051
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p1052
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p1053
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x00401530\nTEST R12D,R12D\nJS 0x004054e1\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x0060e240]\nCMP dword ptr [0x0060e248],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x004053fb\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x60e250\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x00406190\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x0060e240],R15\nJNZ 0x004053c2\nMOVUPS XMM0,xmmword ptr [0x0060e250]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x0060e248]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x00401690\nMOV dword ptr [0x0060e248],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x00404550\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x0040545d\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x004054cb\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x60e3f0\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x00405488\nCALL 0x00401510\nMOV RDI,R15\nCALL 0x00406220\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x00404550\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401520\n'
p1054
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 e1 c1 ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 d6 8e 20 00\n44 39 25 d7 8e 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 50 e2 60 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 e8 0d 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d 8b 8e 20 00\n75 0b\n0f 10 05 92 8e 20 00\n41 0f 11 07\n8b 05 80 8e 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 ad c2 ff ff\n89 1d 5f 8e 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 f0 e3 60 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 88 c0 ff ff\n4c 89 ff\ne8 90 0d 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 3a c0 ff ff\n'
p1055
S'.text:0000000000405330\n.text:0000000000405331\n.text:0000000000405333\n.text:0000000000405335\n.text:0000000000405337\n.text:0000000000405339\n.text:000000000040533a\n.text:000000000040533e\n.text:0000000000405341\n.text:0000000000405344\n.text:0000000000405347\n.text:000000000040534a\n.text:000000000040534f\n.text:0000000000405352\n.text:0000000000405358\n.text:000000000040535d\n.text:000000000040535f\n.text:0000000000405363\n.text:000000000040536a\n.text:0000000000405371\n.text:0000000000405376\n.text:000000000040537b\n.text:0000000000405380\n.text:0000000000405382\n.text:0000000000405387\n.text:000000000040538a\n.text:000000000040538d\n.text:0000000000405393\n.text:0000000000405395\n.text:0000000000405398\n.text:000000000040539c\n.text:000000000040539f\n.text:00000000004053a3\n.text:00000000004053a8\n.text:00000000004053ab\n.text:00000000004053ae\n.text:00000000004053b5\n.text:00000000004053b7\n.text:00000000004053be\n.text:00000000004053c2\n.text:00000000004053c8\n.text:00000000004053cb\n.text:00000000004053cf\n.text:00000000004053d2\n.text:00000000004053d5\n.text:00000000004053d9\n.text:00000000004053db\n.text:00000000004053de\n.text:00000000004053e3\n.text:00000000004053e9\n.text:00000000004053ec\n.text:00000000004053f1\n.text:00000000004053f6\n.text:00000000004053fb\n.text:00000000004053fe\n.text:0000000000405402\n.text:0000000000405406\n.text:000000000040540b\n.text:000000000040540f\n.text:0000000000405413\n.text:0000000000405417\n.text:000000000040541b\n.text:000000000040541f\n.text:0000000000405424\n.text:0000000000405427\n.text:000000000040542a\n.text:000000000040542d\n.text:0000000000405432\n.text:0000000000405435\n.text:0000000000405438\n.text:000000000040543b\n.text:000000000040543c\n.text:0000000000405441\n.text:0000000000405445\n.text:0000000000405448\n.text:000000000040544b\n.text:000000000040544d\n.text:0000000000405452\n.text:0000000000405456\n.text:000000000040545b\n.text:000000000040545d\n.text:0000000000405461\n.text:0000000000405466\n.text:0000000000405469\n.text:000000000040546c\n.text:0000000000405471\n.text:0000000000405476\n.text:0000000000405479\n.text:000000000040547e\n.text:0000000000405481\n.text:0000000000405483\n.text:0000000000405488\n.text:000000000040548b\n.text:0000000000405490\n.text:0000000000405493\n.text:0000000000405496\n.text:000000000040549b\n.text:000000000040549e\n.text:00000000004054a2\n.text:00000000004054a5\n.text:00000000004054a8\n.text:00000000004054ad\n.text:00000000004054b2\n.text:00000000004054b7\n.text:00000000004054ba\n.text:00000000004054bd\n.text:00000000004054be\n.text:00000000004054c3\n.text:00000000004054c7\n.text:00000000004054cb\n.text:00000000004054cf\n.text:00000000004054d2\n.text:00000000004054d6\n.text:00000000004054d7\n.text:00000000004054d9\n.text:00000000004054db\n.text:00000000004054dd\n.text:00000000004054df\n.text:00000000004054e0\n.text:00000000004054e1\n'
p1056
tp1057
sS'strcmp'
p1058
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1059
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_0060e120)();\u000a  return iVar1;\u000a}\u000a\u000a
p1060
S'JMP qword ptr [0x0060e120]\n'
p1061
S'ff 25 0a ca 20 00\n'
p1062
S'.plt:0000000000401710\n'
p1063
tp1064
sS'visible'
p1065
(S'\n__stdcall visible()\n'
p1066
V\u000achar * visible(void)\u000a\u000a{\u000a  char buf [10];\u000a  undefined *puVar1;\u000a  byte in_DIL;\u000a  \u000a  if (in_DIL == 0) {\u000a    return "<undef>";\u000a  }\u000a  if (0x1f < in_DIL) {\u000a    if (in_DIL < 0x7f) {\u000a      puVar1 = (undefined *)0x60e38d;\u000a      goto LAB_0040406c;\u000a    }\u000a    if (in_DIL != 0x7f) {\u000a      if (in_DIL < 0xa0) {\u000a        puVar1 = (undefined *)0x60e390;\u000a      }\u000a      else {\u000a        if (in_DIL == 0xff) {\u000a          puVar1 = (undefined *)0x60e390;\u000a        }\u000a        else {\u000a          puVar1 = (undefined *)0x60e38f;\u000a        }\u000a      }\u000a      goto LAB_0040406c;\u000a    }\u000a  }\u000a  puVar1 = (undefined *)0x60e38e;\u000aLAB_0040406c:\u000a  *puVar1 = 0;\u000a  return (char *)0x60e38c;\u000a}\u000a\u000a
p1067
S'TEST DIL,DIL\nJZ 0x0040404f\nCMP DIL,0x20\nJC 0x00404055\nCMP DIL,0x7e\nJA 0x00404075\nMOV byte ptr [0x0060e38c],DIL\nMOV EAX,0x60e38d\nJMP 0x0040406c\nMOV EAX,0x4097d8\nRET\nMOV byte ptr [0x0060e38c],0x5e\nADD DIL,0x40\nMOV byte ptr [0x0060e38d],DIL\nMOV EAX,0x60e38e\nMOV byte ptr [RAX],0x0\nMOV EAX,0x60e38c\nRET\nCMP DIL,0x7f\nJNZ 0x00404086\nMOV word ptr [0x0060e38c],0x3f5e\nJMP 0x00404067\nMOV word ptr [0x0060e38c],0x2d4d\nCMP DIL,0xa0\nJC 0x004040ad\nCMP DIL,0xff\nJZ 0x004040c6\nXOR DIL,0x80\nMOV byte ptr [0x0060e38e],DIL\nMOV EAX,0x60e38f\nJMP 0x0040406c\nMOV byte ptr [0x0060e38e],0x5e\nADD DIL,0xc0\nMOV byte ptr [0x0060e38f],DIL\nMOV EAX,0x60e390\nJMP 0x0040406c\nMOV word ptr [0x0060e38e],0x3f5e\nMOV EAX,0x60e390\nJMP 0x0040406c\n'
p1068
S'40 84 ff\n74 1a\n40 80 ff 20\n72 1a\n40 80 ff 7e\n77 34\n40 88 3d 44 a3 20 00\nb8 8d e3 60 00\neb 1d\nb8 d8 97 40 00\nc3\nc6 05 30 a3 20 00 5e\n40 80 c7 40\n40 88 3d 26 a3 20 00\nb8 8e e3 60 00\nc6 00 00\nb8 8c e3 60 00\nc3\n40 80 ff 7f\n75 0b\n66 c7 05 08 a3 20 00 5e 3f\neb e1\n66 c7 05 fd a2 20 00 4d 2d\n40 80 ff a0\n72 18\n40 80 ff ff\n74 2b\n40 80 f7 80\n40 88 3d e8 a2 20 00\nb8 8f e3 60 00\neb bf\nc6 05 da a2 20 00 5e\n40 80 c7 c0\n40 88 3d d0 a2 20 00\nb8 90 e3 60 00\neb a6\n66 c7 05 bf a2 20 00 5e 3f\nb8 90 e3 60 00\neb 96\n'
p1069
S'.text:0000000000404030\n.text:0000000000404033\n.text:0000000000404035\n.text:0000000000404039\n.text:000000000040403b\n.text:000000000040403f\n.text:0000000000404041\n.text:0000000000404048\n.text:000000000040404d\n.text:000000000040404f\n.text:0000000000404054\n.text:0000000000404055\n.text:000000000040405c\n.text:0000000000404060\n.text:0000000000404067\n.text:000000000040406c\n.text:000000000040406f\n.text:0000000000404074\n.text:0000000000404075\n.text:0000000000404079\n.text:000000000040407b\n.text:0000000000404084\n.text:0000000000404086\n.text:000000000040408f\n.text:0000000000404093\n.text:0000000000404095\n.text:0000000000404099\n.text:000000000040409b\n.text:000000000040409f\n.text:00000000004040a6\n.text:00000000004040ab\n.text:00000000004040ad\n.text:00000000004040b4\n.text:00000000004040b8\n.text:00000000004040bf\n.text:00000000004040c4\n.text:00000000004040c6\n.text:00000000004040cf\n.text:00000000004040d4\n'
p1070
tp1071
sS'set_custom_quoting'
p1072
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1073
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1074
S'TEST RDI,RDI\nMOV EAX,0x60e3b0\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x004044c5\nTEST RDX,RDX\nJZ 0x004044c5\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x00401520\n'
p1075
S'48 85 ff\nb8 b0 e3 60 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 55 d0 ff ff\n'
p1076
S'.text:00000000004044a0\n.text:00000000004044a3\n.text:00000000004044a8\n.text:00000000004044ac\n.text:00000000004044b2\n.text:00000000004044b5\n.text:00000000004044b7\n.text:00000000004044ba\n.text:00000000004044bc\n.text:00000000004044c0\n.text:00000000004044c4\n.text:00000000004044c5\n.text:00000000004044c6\n'
p1077
tp1078
sS'c_isalpha'
p1079
(S'\n__stdcall c_isalpha()\n'
p1080
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1081
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x00406c3b\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1082
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1083
S'.text:0000000000406c20\n.text:0000000000406c23\n.text:0000000000406c26\n.text:0000000000406c28\n.text:0000000000406c32\n.text:0000000000406c34\n.text:0000000000406c37\n.text:0000000000406c3a\n.text:0000000000406c3b\n.text:0000000000406c3d\n'
p1084
tp1085
sS'set_speed'
p1086
(S'\n__stdcall set_speed(termios * mode)\n'
p1087
V\u000avoid set_speed(termios *mode)\u000a\u000a{\u000a  speed_t __speed;\u000a  char *arg;\u000a  \u000a  __speed = string_to_baud(arg);\u000a  if (((uint)mode | 2) == 2) {\u000a    cfsetispeed((termios *)&mode,__speed);\u000a  }\u000a  if ((uint)mode - 1 < 2) {\u000a    (*(code *)PTR_cfsetospeed_0060e088)(&mode,(ulong)__speed);\u000a    return;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1088
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,EDI\nMOV RDI,RSI\nCALL 0x004038c0\nMOV EBX,EAX\nMOV EAX,EBP\nOR EAX,0x2\nCMP EAX,0x2\nJNZ 0x004035e5\nMOV EDI,0x60e30c\nMOV ESI,EBX\nCALL 0x00401860\nDEC EBP\nCMP EBP,0x1\nJA 0x004035fe\nMOV EDI,0x60e30c\nMOV ESI,EBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x004015e0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1089
S'55\n53\n50\n89 fd\n48 89 f7\ne8 f3 02 00 00\n89 c3\n89 e8\n83 c8 02\n83 f8 02\n75 0c\nbf 0c e3 60 00\n89 de\ne8 7b e2 ff ff\nff cd\n83 fd 01\n77 12\nbf 0c e3 60 00\n89 de\n48 83 c4 08\n5b\n5d\ne9 e2 df ff ff\n48 83 c4 08\n5b\n5d\nc3\n'
p1090
S'.text:00000000004035c0\n.text:00000000004035c1\n.text:00000000004035c2\n.text:00000000004035c3\n.text:00000000004035c5\n.text:00000000004035c8\n.text:00000000004035cd\n.text:00000000004035cf\n.text:00000000004035d1\n.text:00000000004035d4\n.text:00000000004035d7\n.text:00000000004035d9\n.text:00000000004035de\n.text:00000000004035e0\n.text:00000000004035e5\n.text:00000000004035e7\n.text:00000000004035ea\n.text:00000000004035ec\n.text:00000000004035f1\n.text:00000000004035f3\n.text:00000000004035f7\n.text:00000000004035f8\n.text:00000000004035f9\n.text:00000000004035fe\n.text:0000000000403602\n.text:0000000000403603\n.text:0000000000403604\n'
p1091
tp1092
sS'quotearg_custom_mem'
p1093
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p1094
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1095
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x00405740\n'
p1096
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p1097
S'.text:00000000004057d0\n.text:00000000004057d3\n.text:00000000004057d6\n.text:00000000004057d9\n.text:00000000004057dc\n.text:00000000004057de\n.text:00000000004057e1\n'
p1098
tp1099
sS'rpl_calloc'
p1100
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1101
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_0060e118)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1102
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x00406a1b\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x00406a20\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x00406a20\nPUSH RAX\nCALL 0x00401530\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401700\n'
p1103
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 1f ab ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 d5 ac ff ff\n'
p1104
S'.text:00000000004069e0\n.text:00000000004069e3\n.text:00000000004069e8\n.text:00000000004069ea\n.text:00000000004069ed\n.text:00000000004069f2\n.text:00000000004069f4\n.text:00000000004069f7\n.text:00000000004069fb\n.text:00000000004069fd\n.text:0000000000406a00\n.text:0000000000406a03\n.text:0000000000406a06\n.text:0000000000406a09\n.text:0000000000406a0b\n.text:0000000000406a0c\n.text:0000000000406a11\n.text:0000000000406a17\n.text:0000000000406a19\n.text:0000000000406a1a\n.text:0000000000406a1b\n.text:0000000000406a20\n.text:0000000000406a23\n.text:0000000000406a26\n'
p1105
tp1106
sS'memset'
p1107
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1108
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_0060e0e0)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1109
S'JMP qword ptr [0x0060e0e0]\n'
p1110
S'ff 25 4a ca 20 00\n'
p1111
S'.plt:0000000000401690\n'
p1112
tp1113
sS'getc_unlocked'
p1114
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p1115
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_0060e058)();\u000a  return iVar1;\u000a}\u000a\u000a
p1116
S'JMP qword ptr [0x0060e058]\n'
p1117
S'ff 25 d2 ca 20 00\n'
p1118
S'.plt:0000000000401580\n'
p1119
tp1120
sS'display_changed'
p1121
(S'\n__stdcall display_changed()\n'
p1122
V\u000avoid display_changed(void)\u000a\u000a{\u000a  int iVar1;\u000a  bool bVar2;\u000a  int iVar3;\u000a  char *pcVar4;\u000a  tcflag_t *ptVar5;\u000a  ulong uVar6;\u000a  long lVar7;\u000a  control_info *pcVar8;\u000a  undefined8 uVar9;\u000a  char *message;\u000a  \u000a  display_speed((termios *)0x1);\u000a  wrapf("line = %d;",(ulong)mode.c_line);\u000a  putchar_unlocked(10);\u000a  current_col = 0;\u000a  pcVar8 = control_info;\u000a  bVar2 = true;\u000a  while ((((message = pcVar8->name, *message != 'm' || (message[1] != 'i')) || (message[2] != 'n'))\u000a         || (message[3] != 0))) {\u000a    if (*(cc_t *)(pcVar8->offset + 0x60e31d) != pcVar8->saneval) {\u000a      message = pcVar8->name;\u000a      iVar3 = strcmp(message,"flush");\u000a      if (iVar3 != 0) {\u000a        pcVar4 = visible();\u000a        bVar2 = false;\u000a        wrapf("%s = %s;",message,pcVar4,pcVar4);\u000a      }\u000a    }\u000a    pcVar8 = pcVar8 + 1;\u000a  }\u000a  if (((byte)mode.c_lflag & 2) == 0) {\u000a    wrapf("min = %lu; time = %lu;\u005cn",(ulong)mode.c_cc[6],(ulong)mode.c_cc[5]);\u000a  }\u000a  else {\u000a    if (!bVar2) {\u000a      putchar_unlocked(10);\u000a    }\u000a  }\u000a  current_col = 0;\u000a  iVar3 = 0;\u000a  bVar2 = true;\u000a  lVar7 = -0xb20;\u000a  do {\u000a    if (((&mode_info[0x59].flags)[lVar7] & 8U) == 0) {\u000a      iVar1 = *(int *)((long)&mode_info[0x59].type + lVar7);\u000a      if ((iVar1 != iVar3) && (iVar3 = iVar1, !bVar2)) {\u000a        putchar_unlocked(10);\u000a        current_col = 0;\u000a        bVar2 = true;\u000a        iVar3 = iVar1;\u000a      }\u000a      ptVar5 = mode_type_flag();\u000a      uVar6 = *(ulong *)((long)&mode_info[0x59].mask + lVar7);\u000a      if (uVar6 == 0) {\u000a        uVar6 = *(ulong *)((long)&mode_info[0x59].bits + lVar7);\u000a      }\u000a      if (ptVar5 == (tcflag_t *)0x0) {\u000a                    /* WARNING: Subroutine does not return */\u000a        __assert_fail("bitsp","src/stty.c",0x78f,"void display_changed(struct termios *)");\u000a      }\u000a      if (((ulong)*ptVar5 & uVar6) == *(ulong *)((long)&mode_info[0x59].bits + lVar7)) {\u000a        if (((&mode_info[0x59].flags)[lVar7] & 2U) != 0) {\u000a          uVar9 = *(undefined8 *)((long)&mode_info[0x59].name + lVar7);\u000a          message = "%s";\u000aLAB_00403da7:\u000a          bVar2 = false;\u000a          wrapf(message,uVar9);\u000a        }\u000a      }\u000a      else {\u000a        if (((&mode_info[0x59].flags)[lVar7] & 5U) == 5) {\u000a          uVar9 = *(undefined8 *)((long)&mode_info[0x59].name + lVar7);\u000a          message = "-%s";\u000a          goto LAB_00403da7;\u000a        }\u000a      }\u000a    }\u000a    lVar7 = lVar7 + 0x20;\u000a    if (lVar7 == 0) {\u000a      if (!bVar2) {\u000a        putchar_unlocked(10);\u000a      }\u000a      current_col = 0;\u000a      return;\u000a    }\u000a  } while( true );\u000a}\u000a\u000a
p1123
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV EDI,0x1\nCALL 0x004037f0\nMOVZX ESI,byte ptr [0x0060e31c]\nMOV EDI,0x409770\nXOR EAX,EAX\nCALL 0x00403ad0\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nMOV EBP,0x40a530\nMOV R14B,0x1\nJMP 0x00403c44\nADD RBP,0x18\nMOV RAX,qword ptr [RBP]\nCMP byte ptr [RAX],0x6d\nJNZ 0x00403c60\nCMP byte ptr [RAX + 0x1],0x69\nJNZ 0x00403c60\nCMP byte ptr [RAX + 0x2],0x6e\nJNZ 0x00403c60\nCMP byte ptr [RAX + 0x3],0x0\nJZ 0x00403ca7\nNOP\nMOV RAX,qword ptr [RBP + 0x10]\nMOVZX EBX,byte ptr [0x60e31d + RAX]\nCMP BL,byte ptr [RBP + 0x8]\nJZ 0x00403c40\nMOV R15,qword ptr [RBP]\nMOV ESI,0x409704\nMOV RDI,R15\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403c40\nMOVZX EDI,BL\nCALL 0x00404030\nMOV RCX,RAX\nXOR R14D,R14D\nMOV EDI,0x40977b\nXOR EAX,EAX\nMOV RSI,R15\nMOV RDX,RCX\nCALL 0x00403ad0\nJMP 0x00403c40\nTEST byte ptr [0x0060e318],0x2\nJNZ 0x00403ccc\nMOVZX ESI,byte ptr [0x0060e323]\nMOVZX EDX,byte ptr [0x0060e322]\nMOV EDI,0x409784\nXOR EAX,EAX\nCALL 0x00403ad0\nJMP 0x00403cdc\nTEST R14B,0x1\nJNZ 0x00403cdc\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nXOR R14D,R14D\nMOV R15B,0x1\nMOV RBX,-0xb20\nNOP dword ptr CS:[RAX + RAX*0x1]\nTEST byte ptr [0x40a51c + RBX],0x8\nJNZ 0x00403dae\nMOV EBP,dword ptr [0x40a518 + RBX]\nCMP EBP,R14D\nJZ 0x00403d3b\nTEST R15B,0x1\nMOV R14D,EBP\nJNZ 0x00403d3b\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nMOV R15B,0x1\nMOV R14D,EBP\nMOV EDI,EBP\nCALL 0x004039d0\nMOV RCX,qword ptr [0x40a528 + RBX]\nTEST RCX,RCX\nJNZ 0x00403d55\nMOV RCX,qword ptr [0x40a520 + RBX]\nTEST RAX,RAX\nJZ 0x00403ddd\nMOV EDX,dword ptr [RAX]\nAND RDX,RCX\nMOVSX EAX,byte ptr [0x40a51c + RBX]\nCMP RDX,qword ptr [0x40a520 + RBX]\nJNZ 0x00403d90\nTEST AL,0x2\nJZ 0x00403dae\nMOV RSI,qword ptr [0x40a510 + RBX]\nXOR R15D,R15D\nMOV EDI,0x40aafd\nJMP 0x00403da7\nAND EAX,0x5\nCMP EAX,0x5\nJNZ 0x00403dae\nMOV RSI,qword ptr [0x40a510 + RBX]\nXOR R15D,R15D\nMOV EDI,0x4097d4\nXOR EAX,EAX\nCALL 0x00403ad0\nADD RBX,0x20\nJNZ 0x00403d00\nTEST R15B,0x1\nJNZ 0x00403dc8\nMOV EDI,0xa\nCALL 0x00401740\nMOV dword ptr [0x0060e34c],0x0\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV EDI,0x40979c\nMOV ESI,0x4097a2\nMOV EDX,0x78f\nMOV ECX,0x4097ad\nCALL 0x00401680\n'
p1124
S'55\n41 57\n41 56\n53\n50\nbf 01 00 00 00\ne8 ef fb ff ff\n0f b6 35 14 a7 20 00\nbf 70 97 40 00\n31 c0\ne8 bc fe ff ff\nbf 0a 00 00 00\ne8 22 db ff ff\nc7 05 24 a7 20 00 00 00 00 00\nbd 30 a5 40 00\n41 b6 01\neb 12\n48 83 c5 18\n48 8b 45 00\n80 38 6d\n75 13\n80 78 01 69\n75 0d\n80 78 02 6e\n75 07\n80 78 03 00\n74 48\n90\n48 8b 45 10\n0f b6 98 1d e3 60 00\n3a 5d 08\n74 d0\n4c 8b 7d 00\nbe 04 97 40 00\n4c 89 ff\ne8 8f da ff ff\n85 c0\n74 bb\n0f b6 fb\ne8 a3 03 00 00\n48 89 c1\n45 31 f6\nbf 7b 97 40 00\n31 c0\n4c 89 fe\n48 89 ca\ne8 2b fe ff ff\neb 99\nf6 05 6a a6 20 00 02\n75 1c\n0f b6 35 6c a6 20 00\n0f b6 15 64 a6 20 00\nbf 84 97 40 00\n31 c0\ne8 06 fe ff ff\neb 10\n41 f6 c6 01\n75 0a\nbf 0a 00 00 00\ne8 64 da ff ff\nc7 05 66 a6 20 00 00 00 00 00\n45 31 f6\n41 b7 01\n48 c7 c3 e0 f4 ff ff\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nf6 83 1c a5 40 00 08\n0f 85 a1 00 00 00\n8b ab 18 a5 40 00\n44 39 f5\n74 23\n41 f6 c7 01\n41 89 ee\n75 1a\nbf 0a 00 00 00\ne8 15 da ff ff\nc7 05 17 a6 20 00 00 00 00 00\n41 b7 01\n41 89 ee\n89 ef\ne8 8e fc ff ff\n48 8b 8b 28 a5 40 00\n48 85 c9\n75 07\n48 8b 8b 20 a5 40 00\n48 85 c0\n0f 84 7f 00 00 00\n8b 10\n48 21 ca\n0f be 83 1c a5 40 00\n48 3b 93 20 a5 40 00\n75 1d\na8 02\n74 37\n48 8b b3 10 a5 40 00\n45 31 ff\nbf fd aa 40 00\neb 1f\n83 e0 05\n83 f8 05\n75 16\n48 8b b3 10 a5 40 00\n45 31 ff\nbf d4 97 40 00\n31 c0\ne8 22 fd ff ff\n48 83 c3 20\n0f 85 48 ff ff ff\n41 f6 c7 01\n75 0a\nbf 0a 00 00 00\ne8 78 d9 ff ff\nc7 05 7a a5 20 00 00 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\nbf 9c 97 40 00\nbe a2 97 40 00\nba 8f 07 00 00\nb9 ad 97 40 00\ne8 8a d8 ff ff\n'
p1125
S'.text:0000000000403bf0\n.text:0000000000403bf1\n.text:0000000000403bf3\n.text:0000000000403bf5\n.text:0000000000403bf6\n.text:0000000000403bf7\n.text:0000000000403bfc\n.text:0000000000403c01\n.text:0000000000403c08\n.text:0000000000403c0d\n.text:0000000000403c0f\n.text:0000000000403c14\n.text:0000000000403c19\n.text:0000000000403c1e\n.text:0000000000403c28\n.text:0000000000403c2d\n.text:0000000000403c30\n.text:0000000000403c40\n.text:0000000000403c44\n.text:0000000000403c48\n.text:0000000000403c4b\n.text:0000000000403c4d\n.text:0000000000403c51\n.text:0000000000403c53\n.text:0000000000403c57\n.text:0000000000403c59\n.text:0000000000403c5d\n.text:0000000000403c5f\n.text:0000000000403c60\n.text:0000000000403c64\n.text:0000000000403c6b\n.text:0000000000403c6e\n.text:0000000000403c70\n.text:0000000000403c74\n.text:0000000000403c79\n.text:0000000000403c7c\n.text:0000000000403c81\n.text:0000000000403c83\n.text:0000000000403c85\n.text:0000000000403c88\n.text:0000000000403c8d\n.text:0000000000403c90\n.text:0000000000403c93\n.text:0000000000403c98\n.text:0000000000403c9a\n.text:0000000000403c9d\n.text:0000000000403ca0\n.text:0000000000403ca5\n.text:0000000000403ca7\n.text:0000000000403cae\n.text:0000000000403cb0\n.text:0000000000403cb7\n.text:0000000000403cbe\n.text:0000000000403cc3\n.text:0000000000403cc5\n.text:0000000000403cca\n.text:0000000000403ccc\n.text:0000000000403cd0\n.text:0000000000403cd2\n.text:0000000000403cd7\n.text:0000000000403cdc\n.text:0000000000403ce6\n.text:0000000000403ce9\n.text:0000000000403cec\n.text:0000000000403cf3\n.text:0000000000403d00\n.text:0000000000403d07\n.text:0000000000403d0d\n.text:0000000000403d13\n.text:0000000000403d16\n.text:0000000000403d18\n.text:0000000000403d1c\n.text:0000000000403d1f\n.text:0000000000403d21\n.text:0000000000403d26\n.text:0000000000403d2b\n.text:0000000000403d35\n.text:0000000000403d38\n.text:0000000000403d3b\n.text:0000000000403d3d\n.text:0000000000403d42\n.text:0000000000403d49\n.text:0000000000403d4c\n.text:0000000000403d4e\n.text:0000000000403d55\n.text:0000000000403d58\n.text:0000000000403d5e\n.text:0000000000403d60\n.text:0000000000403d63\n.text:0000000000403d6a\n.text:0000000000403d71\n.text:0000000000403d73\n.text:0000000000403d75\n.text:0000000000403d77\n.text:0000000000403d7e\n.text:0000000000403d81\n.text:0000000000403d86\n.text:0000000000403d90\n.text:0000000000403d93\n.text:0000000000403d96\n.text:0000000000403d98\n.text:0000000000403d9f\n.text:0000000000403da2\n.text:0000000000403da7\n.text:0000000000403da9\n.text:0000000000403dae\n.text:0000000000403db2\n.text:0000000000403db8\n.text:0000000000403dbc\n.text:0000000000403dbe\n.text:0000000000403dc3\n.text:0000000000403dc8\n.text:0000000000403dd2\n.text:0000000000403dd6\n.text:0000000000403dd7\n.text:0000000000403dd9\n.text:0000000000403ddb\n.text:0000000000403ddc\n.text:0000000000403ddd\n.text:0000000000403de2\n.text:0000000000403de7\n.text:0000000000403dec\n.text:0000000000403df1\n'
p1126
tp1127
sS'c_isascii'
p1128
(S'\n__stdcall c_isascii()\n'
p1129
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p1130
S'CMP EDI,0x80\nSETC AL\nRET\n'
p1131
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p1132
S'.text:0000000000406c40\n.text:0000000000406c46\n.text:0000000000406c49\n'
p1133
tp1134
sS'mode_type_flag'
p1135
(S'\n__stdcall mode_type_flag()\n'
p1136
V\u000atcflag_t * mode_type_flag(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if (in_EDI < 5) {\u000a    return *(tcflag_t **)(&DAT_0040aac0 + (long)(int)in_EDI * 8);\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1137
S'CMP EDI,0x5\nJNC 0x004039e1\nMOVSXD RAX,EDI\nMOV RAX,qword ptr [0x40aac0 + RAX*0x8]\nRET\nPUSH RAX\nCALL 0x00401520\n'
p1138
S'83 ff 05\n73 0c\n48 63 c7\n48 8b 04 c5 c0 aa 40 00\nc3\n50\ne8 39 db ff ff\n'
p1139
S'.text:00000000004039d0\n.text:00000000004039d3\n.text:00000000004039d5\n.text:00000000004039d8\n.text:00000000004039e0\n.text:00000000004039e1\n.text:00000000004039e2\n'
p1140
tp1141
sS'__ctype_b_loc'
p1142
(S'\n__stdcall __ctype_b_loc()\n'
p1143
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0060e210)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1144
S'JMP qword ptr [0x0060e210]\n'
p1145
S'ff 25 1a c9 20 00\n'
p1146
S'.plt:00000000004018f0\n'
p1147
tp1148
sS'__vasprintf_chk'
p1149
(S'\n__stdcall __vasprintf_chk()\n'
p1150
V\u000avoid __vasprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___vasprintf_chk_0060e160)();\u000a  return;\u000a}\u000a\u000a
p1151
S'JMP qword ptr [0x0060e160]\n'
p1152
S'ff 25 ca c9 20 00\n'
p1153
S'.plt:0000000000401790\n'
p1154
tp1155
sS'quotearg'
p1156
(S'\n__stdcall quotearg(char * arg)\n'
p1157
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1158
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00405320\n'
p1159
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1160
S'.text:0000000000405500\n.text:0000000000405503\n.text:0000000000405505\n.text:0000000000405508\n'
p1161
tp1162
sS'_start'
p1163
(S'\n__stdcall _start()\n'
p1164
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_0060dff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1165
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x407290\nMOV RCX,0x407220\nMOV RDI,0x4026c0\nCALL qword ptr [0x0060dff0]\nHLT\n'
p1166
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 90 72 40 00\n48 c7 c1 20 72 40 00\n48 c7 c7 c0 26 40 00\nff 15 c6 c6 20 00\nf4\n'
p1167
S'.text:0000000000401900\n.text:0000000000401902\n.text:0000000000401905\n.text:0000000000401906\n.text:0000000000401909\n.text:000000000040190d\n.text:000000000040190e\n.text:000000000040190f\n.text:0000000000401916\n.text:000000000040191d\n.text:0000000000401924\n.text:000000000040192a\n'
p1168
tp1169
sS'c_iscntrl'
p1170
(S'\n__stdcall c_iscntrl()\n'
p1171
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1172
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x00406c68\nRET\nCMP EDI,0x7f\nJZ 0x00406c67\nXOR EAX,EAX\nRET\n'
p1173
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1174
S'.text:0000000000406c60\n.text:0000000000406c62\n.text:0000000000406c65\n.text:0000000000406c67\n.text:0000000000406c68\n.text:0000000000406c6b\n.text:0000000000406c6d\n.text:0000000000406c6f\n'
p1175
tp1176
sS'set_control_char'
p1177
(S'\n__stdcall set_control_char()\n'
p1178
V\u000avoid set_control_char(char **ppcParm1,char *pcParm2)\u000a\u000a{\u000a  char *pcVar1;\u000a  byte bVar2;\u000a  int iVar3;\u000a  ulong uVar4;\u000a  \u000a  pcVar1 = *ppcParm1;\u000a  if (((((*pcVar1 != 'm') || (pcVar1[1] != 'i')) || (pcVar1[2] != 'n')) || (pcVar1[3] != 0)) &&\u000a     (iVar3 = strcmp(*ppcParm1,"time"), iVar3 != 0)) {\u000a    if ((*pcParm2 == 0) || (pcParm2[1] == 0)) {\u000a      bVar2 = to_uchar();\u000a      goto LAB_00403597;\u000a    }\u000a    if ((((*pcParm2 == '^') && (pcParm2[1] == '-')) && (pcParm2[2] == 0)) ||\u000a       (iVar3 = strcmp(pcParm2,"undef"), iVar3 == 0)) {\u000a      bVar2 = 0;\u000a      goto LAB_00403597;\u000a    }\u000a    if ((*pcParm2 == '^') && (pcParm2[1] != 0)) {\u000a      if (pcParm2[1] == '?') {\u000a        bVar2 = 0x7f;\u000a      }\u000a      else {\u000a        bVar2 = to_uchar();\u000a        bVar2 = bVar2 & 0x9f;\u000a      }\u000a      goto LAB_00403597;\u000a    }\u000a  }\u000a  uVar4 = integer_arg(pcParm2,0xff);\u000a  bVar2 = (byte)uVar4;\u000aLAB_00403597:\u000a  ppcParm1[2][0x60e31d] = bVar2;\u000a  return;\u000a}\u000a\u000a
p1179
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV R14,RDI\nMOV RAX,qword ptr [R14]\nCMP byte ptr [RAX],0x6d\nJNZ 0x00403524\nCMP byte ptr [RAX + 0x1],0x69\nJNZ 0x00403524\nCMP byte ptr [RAX + 0x2],0x6e\nJNZ 0x00403524\nCMP byte ptr [RAX + 0x3],0x0\nJZ 0x00403579\nMOV RDI,qword ptr [R14]\nMOV ESI,0x409716\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403579\nMOV AL,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00403588\nMOV CL,byte ptr [RBX + 0x1]\nTEST CL,CL\nJZ 0x00403588\nCMP AL,0x5e\nJNZ 0x00403551\nCMP CL,0x2d\nJNZ 0x00403551\nCMP byte ptr [RBX + 0x2],0x0\nJZ 0x00403595\nMOV ESI,0x40971e\nMOV RDI,RBX\nCALL 0x00401710\nTEST EAX,EAX\nJZ 0x00403595\nCMP byte ptr [RBX],0x5e\nJNZ 0x00403579\nMOV AL,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x00403579\nCMP AL,0x3f\nJNZ 0x004035a9\nMOV EAX,0x7f\nJMP 0x00403597\nMOV ESI,0xff\nMOV RDI,RBX\nCALL 0x004036d0\nJMP 0x00403597\nMOVSX EDI,AL\nCALL 0x00403aa0\nMOVZX EAX,AL\nJMP 0x00403597\nXOR EAX,EAX\nMOV RCX,qword ptr [R14 + 0x10]\nMOV byte ptr [0x60e31d + RCX],AL\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOVSX EDI,AL\nCALL 0x00403aa0\nAND AL,0x9f\nJMP 0x00403590\n'
p1180
S'41 56\n53\n50\n48 89 f3\n49 89 fe\n49 8b 06\n80 38 6d\n75 12\n80 78 01 69\n75 0c\n80 78 02 6e\n75 06\n80 78 03 00\n74 55\n49 8b 3e\nbe 16 97 40 00\ne8 df e1 ff ff\n85 c0\n74 44\n8a 03\n84 c0\n74 4d\n8a 4b 01\n84 c9\n74 46\n3c 5e\n75 0b\n80 f9 2d\n75 06\n80 7b 02 00\n74 44\nbe 1e 97 40 00\n48 89 df\ne8 b2 e1 ff ff\n85 c0\n74 33\n80 3b 5e\n75 12\n8a 43 01\n84 c0\n74 0b\n3c 3f\n75 37\nb8 7f 00 00 00\neb 1e\nbe ff 00 00 00\n48 89 df\ne8 4a 01 00 00\neb 0f\n0f be f8\ne8 10 05 00 00\n0f b6 c0\neb 02\n31 c0\n49 8b 4e 10\n88 81 1d e3 60 00\n48 83 c4 08\n5b\n41 5e\nc3\n0f be f8\ne8 ef 04 00 00\n24 9f\neb db\n'
p1181
S'.text:0000000000403500\n.text:0000000000403502\n.text:0000000000403503\n.text:0000000000403504\n.text:0000000000403507\n.text:000000000040350a\n.text:000000000040350d\n.text:0000000000403510\n.text:0000000000403512\n.text:0000000000403516\n.text:0000000000403518\n.text:000000000040351c\n.text:000000000040351e\n.text:0000000000403522\n.text:0000000000403524\n.text:0000000000403527\n.text:000000000040352c\n.text:0000000000403531\n.text:0000000000403533\n.text:0000000000403535\n.text:0000000000403537\n.text:0000000000403539\n.text:000000000040353b\n.text:000000000040353e\n.text:0000000000403540\n.text:0000000000403542\n.text:0000000000403544\n.text:0000000000403546\n.text:0000000000403549\n.text:000000000040354b\n.text:000000000040354f\n.text:0000000000403551\n.text:0000000000403556\n.text:0000000000403559\n.text:000000000040355e\n.text:0000000000403560\n.text:0000000000403562\n.text:0000000000403565\n.text:0000000000403567\n.text:000000000040356a\n.text:000000000040356c\n.text:000000000040356e\n.text:0000000000403570\n.text:0000000000403572\n.text:0000000000403577\n.text:0000000000403579\n.text:000000000040357e\n.text:0000000000403581\n.text:0000000000403586\n.text:0000000000403588\n.text:000000000040358b\n.text:0000000000403590\n.text:0000000000403593\n.text:0000000000403595\n.text:0000000000403597\n.text:000000000040359b\n.text:00000000004035a1\n.text:00000000004035a5\n.text:00000000004035a6\n.text:00000000004035a8\n.text:00000000004035a9\n.text:00000000004035ac\n.text:00000000004035b1\n.text:00000000004035b3\n'
p1182
tp1183
sS'c_isblank'
p1184
(S'\n__stdcall c_isblank()\n'
p1185
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1186
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1187
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1188
S'.text:0000000000406c50\n.text:0000000000406c53\n.text:0000000000406c56\n.text:0000000000406c59\n.text:0000000000406c5c\n.text:0000000000406c5e\n'
p1189
tp1190
sS'atexit'
p1191
(S'\n__stdcall atexit(__func * __func)\n'
p1192
V\u000a/* WARNING: Removing unreachable block (ram,0x004072c0) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_0060e1e0)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1193
S'MOV RAX,0x60e220\nTEST RAX,RAX\nJZ 0x004072c0\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x00401890\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x00401890\n'
p1194
S'48 c7 c0 20 e2 60 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 da a5 ff ff\n31 d2\n31 f6\ne9 c7 a5 ff ff\n'
p1195
S'.text:00000000004072a0\n.text:00000000004072a7\n.text:00000000004072aa\n.text:00000000004072ac\n.text:00000000004072af\n.text:00000000004072b1\n.text:00000000004072c0\n.text:00000000004072c2\n.text:00000000004072c4\n'
p1196
tp1197
sS'fdopen'
p1198
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1199
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0060e180)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1200
S'JMP qword ptr [0x0060e180]\n'
p1201
S'ff 25 aa c9 20 00\n'
p1202
S'.plt:00000000004017d0\n'
p1203
tp1204
sS'error'
p1205
(S'\n__stdcall error()\n'
p1206
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_0060e1a0)();\u000a  return;\u000a}\u000a\u000a
p1207
S'JMP qword ptr [0x0060e1a0]\n'
p1208
S'ff 25 8a c9 20 00\n'
p1209
S'.plt:0000000000401810\n'
p1210
tp1211
sS'strcaseeq6'
p1212
(S'\n__stdcall strcaseeq6()\n'
p1213
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1214
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x00405bc2\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405bc9\nJMP 0x00405bde\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405bde\nTEST BPL,BPL\nJZ 0x00405bd9\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00405bf0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1215
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 41 11 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1216
S'.text:0000000000405ba0\n.text:0000000000405ba1\n.text:0000000000405ba2\n.text:0000000000405ba3\n.text:0000000000405ba5\n.text:0000000000405ba8\n.text:0000000000405baa\n.text:0000000000405baf\n.text:0000000000405bb3\n.text:0000000000405bb5\n.text:0000000000405bb7\n.text:0000000000405bba\n.text:0000000000405bbc\n.text:0000000000405bbe\n.text:0000000000405bc0\n.text:0000000000405bc2\n.text:0000000000405bc4\n.text:0000000000405bc7\n.text:0000000000405bc9\n.text:0000000000405bcc\n.text:0000000000405bce\n.text:0000000000405bd1\n.text:0000000000405bd5\n.text:0000000000405bd6\n.text:0000000000405bd7\n.text:0000000000405bd9\n.text:0000000000405bde\n.text:0000000000405be2\n.text:0000000000405be3\n.text:0000000000405be4\n'
p1217
tp1218
sS'strcaseeq5'
p1219
(S'\n__stdcall strcaseeq5()\n'
p1220
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1221
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x00405b76\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405b7d\nJMP 0x00405b94\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405b94\nTEST BPL,BPL\nJZ 0x00405b8f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00405ba0\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1222
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 8d 11 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1223
S'.text:0000000000405b50\n.text:0000000000405b51\n.text:0000000000405b53\n.text:0000000000405b54\n.text:0000000000405b57\n.text:0000000000405b59\n.text:0000000000405b5c\n.text:0000000000405b5e\n.text:0000000000405b63\n.text:0000000000405b67\n.text:0000000000405b69\n.text:0000000000405b6b\n.text:0000000000405b6e\n.text:0000000000405b70\n.text:0000000000405b72\n.text:0000000000405b74\n.text:0000000000405b76\n.text:0000000000405b78\n.text:0000000000405b7b\n.text:0000000000405b7d\n.text:0000000000405b80\n.text:0000000000405b82\n.text:0000000000405b86\n.text:0000000000405b89\n.text:0000000000405b8a\n.text:0000000000405b8c\n.text:0000000000405b8d\n.text:0000000000405b8f\n.text:0000000000405b94\n.text:0000000000405b95\n.text:0000000000405b97\n.text:0000000000405b98\n'
p1224
tp1225
sS'strcaseeq7'
p1226
(S'\n__stdcall strcaseeq7()\n'
p1227
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1228
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x00405c12\nTEST ECX,0xffffffdf\nJNZ 0x00405c16\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x00405c1a\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1229
S'53\n48 89 fb\n31 ff\ne8 f5 10 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1230
S'.text:0000000000405bf0\n.text:0000000000405bf1\n.text:0000000000405bf4\n.text:0000000000405bf6\n.text:0000000000405bfb\n.text:0000000000405bff\n.text:0000000000405c01\n.text:0000000000405c03\n.text:0000000000405c09\n.text:0000000000405c0b\n.text:0000000000405c10\n.text:0000000000405c11\n.text:0000000000405c12\n.text:0000000000405c14\n.text:0000000000405c16\n.text:0000000000405c18\n.text:0000000000405c19\n.text:0000000000405c1a\n.text:0000000000405c1f\n.text:0000000000405c20\n'
p1231
tp1232
sS'strtoul'
p1233
(S'\n__stdcall strtoul(char * __nptr, char * * __endptr, int __base)\n'
p1234
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aulong strtoul(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  ulong uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_strtoul_0060e1d8)();\u000a  return uVar1;\u000a}\u000a\u000a
p1235
S'JMP qword ptr [0x0060e1d8]\n'
p1236
S'ff 25 52 c9 20 00\n'
p1237
S'.plt:0000000000401880\n'
p1238
tp1239
sS'emit_mandatory_arg_note'
p1240
(S'\n__stdcall emit_mandatory_arg_note()\n'
p1241
V\u000avoid emit_mandatory_arg_note(void)\u000a\u000a{\u000a  char *__s;\u000a  \u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnMandatory arguments to long options are mandatory for short options too.\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p1242
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40935f\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RSI,qword ptr [0x0060e2a8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x004016e0\n'
p1243
S'50\n31 ff\nbe 5f 93 40 00\nba 05 00 00 00\ne8 7e f0 ff ff\n48 8b 35 2f bd 20 00\n48 89 c7\n58\ne9 5e f1 ff ff\n'
p1244
S'.text:0000000000402560\n.text:0000000000402561\n.text:0000000000402563\n.text:0000000000402568\n.text:000000000040256d\n.text:0000000000402572\n.text:0000000000402579\n.text:000000000040257c\n.text:000000000040257d\n'
p1245
tp1246
sS'strcaseeq0'
p1247
(S'\n__stdcall strcaseeq0()\n'
p1248
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1249
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x00405925\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x0040592c\nJMP 0x00405960\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405960\nTEST BPL,BPL\nJZ 0x0040595b\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x00405970\nJMP 0x00405960\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1250
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 dd 13 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1251
S'.text:00000000004058f0\n.text:00000000004058f1\n.text:00000000004058f3\n.text:00000000004058f5\n.text:00000000004058f7\n.text:00000000004058f9\n.text:00000000004058fa\n.text:00000000004058fb\n.text:00000000004058fe\n.text:0000000000405901\n.text:0000000000405904\n.text:0000000000405907\n.text:0000000000405909\n.text:000000000040590c\n.text:000000000040590e\n.text:0000000000405913\n.text:0000000000405916\n.text:0000000000405918\n.text:000000000040591a\n.text:000000000040591d\n.text:000000000040591f\n.text:0000000000405921\n.text:0000000000405923\n.text:0000000000405925\n.text:0000000000405927\n.text:000000000040592a\n.text:000000000040592c\n.text:000000000040592f\n.text:0000000000405931\n.text:0000000000405935\n.text:000000000040593a\n.text:000000000040593d\n.text:0000000000405941\n.text:0000000000405945\n.text:0000000000405949\n.text:000000000040594d\n.text:0000000000405951\n.text:0000000000405954\n.text:0000000000405959\n.text:000000000040595b\n.text:0000000000405960\n.text:0000000000405964\n.text:0000000000405965\n.text:0000000000405967\n.text:0000000000405969\n.text:000000000040596b\n.text:000000000040596d\n.text:000000000040596e\n'
p1252
tp1253
sS'strcaseeq2'
p1254
(S'\n__stdcall strcaseeq2()\n'
p1255
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1256
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x00405a36\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405a3d\nJMP 0x00405a6a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405a6a\nTEST BPL,BPL\nJZ 0x00405a65\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405a80\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1257
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 cd 12 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1258
S'.text:0000000000405a00\n.text:0000000000405a01\n.text:0000000000405a03\n.text:0000000000405a05\n.text:0000000000405a07\n.text:0000000000405a09\n.text:0000000000405a0a\n.text:0000000000405a0b\n.text:0000000000405a0e\n.text:0000000000405a11\n.text:0000000000405a14\n.text:0000000000405a17\n.text:0000000000405a19\n.text:0000000000405a1c\n.text:0000000000405a1e\n.text:0000000000405a23\n.text:0000000000405a27\n.text:0000000000405a29\n.text:0000000000405a2b\n.text:0000000000405a2e\n.text:0000000000405a30\n.text:0000000000405a32\n.text:0000000000405a34\n.text:0000000000405a36\n.text:0000000000405a38\n.text:0000000000405a3b\n.text:0000000000405a3d\n.text:0000000000405a40\n.text:0000000000405a42\n.text:0000000000405a46\n.text:0000000000405a4a\n.text:0000000000405a4e\n.text:0000000000405a52\n.text:0000000000405a55\n.text:0000000000405a59\n.text:0000000000405a5a\n.text:0000000000405a5c\n.text:0000000000405a5e\n.text:0000000000405a60\n.text:0000000000405a62\n.text:0000000000405a63\n.text:0000000000405a65\n.text:0000000000405a6a\n.text:0000000000405a6e\n.text:0000000000405a6f\n.text:0000000000405a71\n.text:0000000000405a73\n.text:0000000000405a75\n.text:0000000000405a77\n.text:0000000000405a78\n'
p1259
tp1260
sS'strcaseeq1'
p1261
(S'\n__stdcall strcaseeq1()\n'
p1262
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1263
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x004059ad\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004059b4\nJMP 0x004059e7\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004059e7\nTEST BPL,BPL\nJZ 0x004059e2\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405a00\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1264
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 56 13 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1265
S'.text:0000000000405970\n.text:0000000000405971\n.text:0000000000405973\n.text:0000000000405975\n.text:0000000000405977\n.text:0000000000405979\n.text:000000000040597a\n.text:000000000040597b\n.text:0000000000405980\n.text:0000000000405983\n.text:0000000000405986\n.text:0000000000405989\n.text:000000000040598b\n.text:000000000040598e\n.text:0000000000405993\n.text:0000000000405995\n.text:000000000040599a\n.text:000000000040599e\n.text:00000000004059a0\n.text:00000000004059a2\n.text:00000000004059a5\n.text:00000000004059a7\n.text:00000000004059a9\n.text:00000000004059ab\n.text:00000000004059ad\n.text:00000000004059af\n.text:00000000004059b2\n.text:00000000004059b4\n.text:00000000004059b7\n.text:00000000004059b9\n.text:00000000004059bd\n.text:00000000004059c1\n.text:00000000004059c5\n.text:00000000004059cb\n.text:00000000004059cf\n.text:00000000004059d2\n.text:00000000004059d6\n.text:00000000004059d7\n.text:00000000004059d9\n.text:00000000004059db\n.text:00000000004059dd\n.text:00000000004059df\n.text:00000000004059e0\n.text:00000000004059e2\n.text:00000000004059e7\n.text:00000000004059eb\n.text:00000000004059ec\n.text:00000000004059ee\n.text:00000000004059f0\n.text:00000000004059f2\n.text:00000000004059f4\n.text:00000000004059f5\n'
p1266
tp1267
sS'strcaseeq4'
p1268
(S'\n__stdcall strcaseeq4()\n'
p1269
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1270
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x00405b1c\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405b23\nJMP 0x00405b44\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405b44\nTEST BPL,BPL\nJZ 0x00405b3f\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405b50\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1271
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 e7 11 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1272
S'.text:0000000000405af0\n.text:0000000000405af1\n.text:0000000000405af3\n.text:0000000000405af5\n.text:0000000000405af6\n.text:0000000000405af7\n.text:0000000000405afa\n.text:0000000000405afd\n.text:0000000000405aff\n.text:0000000000405b02\n.text:0000000000405b04\n.text:0000000000405b09\n.text:0000000000405b0d\n.text:0000000000405b0f\n.text:0000000000405b11\n.text:0000000000405b14\n.text:0000000000405b16\n.text:0000000000405b18\n.text:0000000000405b1a\n.text:0000000000405b1c\n.text:0000000000405b1e\n.text:0000000000405b21\n.text:0000000000405b23\n.text:0000000000405b26\n.text:0000000000405b28\n.text:0000000000405b2c\n.text:0000000000405b30\n.text:0000000000405b33\n.text:0000000000405b37\n.text:0000000000405b38\n.text:0000000000405b3a\n.text:0000000000405b3c\n.text:0000000000405b3d\n.text:0000000000405b3f\n.text:0000000000405b44\n.text:0000000000405b48\n.text:0000000000405b49\n.text:0000000000405b4b\n.text:0000000000405b4d\n.text:0000000000405b4e\n'
p1273
tp1274
sS'strcaseeq3'
p1275
(S'\n__stdcall strcaseeq3()\n'
p1276
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1277
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406cf0\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00405ab0\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405ab7\nJMP 0x00405ada\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405ada\nTEST BPL,BPL\nJZ 0x00405ad5\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405af0\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1278
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 53 12 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1279
S'.text:0000000000405a80\n.text:0000000000405a81\n.text:0000000000405a83\n.text:0000000000405a85\n.text:0000000000405a87\n.text:0000000000405a88\n.text:0000000000405a8b\n.text:0000000000405a8e\n.text:0000000000405a91\n.text:0000000000405a93\n.text:0000000000405a96\n.text:0000000000405a98\n.text:0000000000405a9d\n.text:0000000000405aa1\n.text:0000000000405aa3\n.text:0000000000405aa5\n.text:0000000000405aa8\n.text:0000000000405aaa\n.text:0000000000405aac\n.text:0000000000405aae\n.text:0000000000405ab0\n.text:0000000000405ab2\n.text:0000000000405ab5\n.text:0000000000405ab7\n.text:0000000000405aba\n.text:0000000000405abc\n.text:0000000000405ac0\n.text:0000000000405ac4\n.text:0000000000405ac8\n.text:0000000000405acb\n.text:0000000000405acc\n.text:0000000000405ace\n.text:0000000000405ad0\n.text:0000000000405ad2\n.text:0000000000405ad3\n.text:0000000000405ad5\n.text:0000000000405ada\n.text:0000000000405adb\n.text:0000000000405add\n.text:0000000000405adf\n.text:0000000000405ae1\n.text:0000000000405ae2\n'
p1280
tp1281
sS'register_tm_clones'
p1282
(S'\n__stdcall register_tm_clones()\n'
p1283
V\u000a/* WARNING: Removing unreachable block (ram,0x00401993) */\u000a/* WARNING: Removing unreachable block (ram,0x0040199d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1284
S'MOV ESI,0x60e298\nPUSH RBP\nSUB RSI,0x60e298\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x004019a8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x004019a8\nPOP RBP\nMOV EDI,0x60e298\nJMP RAX\nPOP RBP\nRET\n'
p1285
S'be 98 e2 60 00\n55\n48 81 ee 98 e2 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 98 e2 60 00\nff e0\n5d\nc3\n'
p1286
S'.text:0000000000401970\n.text:0000000000401975\n.text:0000000000401976\n.text:000000000040197d\n.text:0000000000401981\n.text:0000000000401984\n.text:0000000000401987\n.text:000000000040198b\n.text:000000000040198e\n.text:0000000000401991\n.text:0000000000401993\n.text:0000000000401998\n.text:000000000040199b\n.text:000000000040199d\n.text:000000000040199e\n.text:00000000004019a3\n.text:00000000004019a8\n.text:00000000004019a9\n'
p1287
tp1288
sS'c_islower'
p1289
(S'\n__stdcall c_islower()\n'
p1290
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p1291
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1292
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p1293
S'.text:0000000000406c90\n.text:0000000000406c93\n.text:0000000000406c96\n.text:0000000000406c99\n'
p1294
tp1295
sS'fwrite'
p1296
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p1297
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_0060e1f0)();\u000a  return sVar1;\u000a}\u000a\u000a
p1298
S'JMP qword ptr [0x0060e1f0]\n'
p1299
S'ff 25 3a c9 20 00\n'
p1300
S'.plt:00000000004018b0\n'
p1301
tp1302
sS'display_window_size'
p1303
(S'\n__stdcall display_window_size(char * device_name)\n'
p1304
V\u000avoid display_window_size(char *device_name)\u000a\u000a{\u000a  uint uVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  uint *puVar4;\u000a  char *message;\u000a  undefined8 uVar5;\u000a  winsize win;\u000a  ushort local_20;\u000a  ushort local_1e;\u000a  \u000a  cVar2 = (char)device_name;\u000a  iVar3 = get_win_size((winsize *)0x0);\u000a  if (iVar3 == 0) {\u000a    message = "%d %d\u005cn";\u000a    if (cVar2 != 0) {\u000a      message = "rows %d; columns %d;";\u000a    }\u000a    wrapf(message,(ulong)local_20,(ulong)local_1e);\u000a    if (cVar2 == 0) {\u000a      current_col = 0;\u000a    }\u000a  }\u000a  else {\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    if (uVar1 != 0x16) {\u000a      message = quotearg_n_style_colon((char *)0x0);\u000a      error(1,(ulong)uVar1,0x40aafd,message);\u000a    }\u000a    if (cVar2 == 0) {\u000a      uVar5 = dcgettext(0,"%s: no size information for this device",5);\u000a      message = quotearg_n_style_colon((char *)0x0);\u000a      error(1,0,uVar5,message);\u000a    }\u000a  }\u000a  return;\u000a}\u000a\u000a
p1305
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x10\nMOV R14,RSI\nMOV EBP,EDI\nLEA RSI,[RSP + 0x8]\nXOR EDI,EDI\nCALL 0x00403ab0\nTEST EAX,EAX\nJZ 0x004037ac\nCALL 0x00401530\nMOV EBX,dword ptr [RAX]\nCMP EBX,0x16\nJZ 0x0040376e\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,R14\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x40aafd\nXOR EAX,EAX\nMOV ESI,EBX\nCALL 0x00401810\nTEST BPL,BPL\nJNZ 0x004037dd\nXOR EDI,EDI\nMOV ESI,0x409724\nMOV EDX,0x5\nCALL 0x004015f0\nMOV RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,R14\nCALL 0x004056e0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBX\nCALL 0x00401810\nJMP 0x004037dd\nMOV EAX,0x40974c\nMOV EDI,0x409761\nTEST BPL,BPL\nCMOVNZ RDI,RAX\nMOVZX ESI,word ptr [RSP + 0x8]\nMOVZX EDX,word ptr [RSP + 0xa]\nXOR EAX,EAX\nCALL 0x00403ad0\nTEST BPL,BPL\nJNZ 0x004037dd\nMOV dword ptr [0x0060e34c],0x0\nADD RSP,0x10\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1306
S'55\n41 56\n53\n48 83 ec 10\n49 89 f6\n89 fd\n48 8d 74 24 08\n31 ff\ne8 77 03 00 00\n85 c0\n74 6f\ne8 ee dd ff ff\n8b 18\n83 fb 16\n74 25\n31 ff\nbe 03 00 00 00\n4c 89 f2\ne8 88 1f 00 00\n48 89 c1\nbf 01 00 00 00\nba fd aa 40 00\n31 c0\n89 de\ne8 a2 e0 ff ff\n40 84 ed\n75 6a\n31 ff\nbe 24 97 40 00\nba 05 00 00 00\ne8 6c de ff ff\n48 89 c3\n31 ff\nbe 03 00 00 00\n4c 89 f2\ne8 4a 1f 00 00\n48 89 c1\nbf 01 00 00 00\n31 f6\n31 c0\n48 89 da\ne8 66 e0 ff ff\neb 31\nb8 4c 97 40 00\nbf 61 97 40 00\n40 84 ed\n48 0f 45 f8\n0f b7 74 24 08\n0f b7 54 24 0a\n31 c0\ne8 02 03 00 00\n40 84 ed\n75 0a\nc7 05 6f ab 20 00 00 00 00 00\n48 83 c4 10\n5b\n41 5e\n5d\nc3\n'
p1307
S'.text:0000000000403720\n.text:0000000000403721\n.text:0000000000403723\n.text:0000000000403724\n.text:0000000000403728\n.text:000000000040372b\n.text:000000000040372d\n.text:0000000000403732\n.text:0000000000403734\n.text:0000000000403739\n.text:000000000040373b\n.text:000000000040373d\n.text:0000000000403742\n.text:0000000000403744\n.text:0000000000403747\n.text:0000000000403749\n.text:000000000040374b\n.text:0000000000403750\n.text:0000000000403753\n.text:0000000000403758\n.text:000000000040375b\n.text:0000000000403760\n.text:0000000000403765\n.text:0000000000403767\n.text:0000000000403769\n.text:000000000040376e\n.text:0000000000403771\n.text:0000000000403773\n.text:0000000000403775\n.text:000000000040377a\n.text:000000000040377f\n.text:0000000000403784\n.text:0000000000403787\n.text:0000000000403789\n.text:000000000040378e\n.text:0000000000403791\n.text:0000000000403796\n.text:0000000000403799\n.text:000000000040379e\n.text:00000000004037a0\n.text:00000000004037a2\n.text:00000000004037a5\n.text:00000000004037aa\n.text:00000000004037ac\n.text:00000000004037b1\n.text:00000000004037b6\n.text:00000000004037b9\n.text:00000000004037bd\n.text:00000000004037c2\n.text:00000000004037c7\n.text:00000000004037c9\n.text:00000000004037ce\n.text:00000000004037d1\n.text:00000000004037d3\n.text:00000000004037dd\n.text:00000000004037e1\n.text:00000000004037e2\n.text:00000000004037e4\n.text:00000000004037e5\n'
p1308
tp1309
sS'get_win_size'
p1310
(S'\n__stdcall get_win_size(winsize * win)\n'
p1311
V\u000aint get_win_size(winsize *win)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = ioctl((int)win,0x5413);\u000a  return iVar1;\u000a}\u000a\u000a
p1312
S'MOV RCX,RSI\nMOV ESI,0x5413\nXOR EAX,EAX\nMOV RDX,RCX\nJMP 0x004016b0\n'
p1313
S'48 89 f1\nbe 13 54 00 00\n31 c0\n48 89 ca\ne9 ee db ff ff\n'
p1314
S'.text:0000000000403ab0\n.text:0000000000403ab3\n.text:0000000000403ab8\n.text:0000000000403aba\n.text:0000000000403abd\n'
p1315
tp1316
sS'__do_global_dtors_aux'
p1317
(S'\n__stdcall __do_global_dtors_aux()\n'
p1318
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1319
S'CMP byte ptr [0x0060e308],0x0\nJNZ 0x004019ca\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401930\nPOP RBP\nMOV byte ptr [0x0060e308],0x1\nRET\n'
p1320
S'80 3d 51 c9 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 3e c9 20 00 01\nf3 c3\n'
p1321
S'.text:00000000004019b0\n.text:00000000004019b7\n.text:00000000004019b9\n.text:00000000004019ba\n.text:00000000004019bd\n.text:00000000004019c2\n.text:00000000004019c3\n.text:00000000004019ca\n'
p1322
tp1323
sS'c_isprint'
p1324
(S'\n__stdcall c_isprint()\n'
p1325
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p1326
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p1327
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p1328
S'.text:0000000000406ca0\n.text:0000000000406ca3\n.text:0000000000406ca6\n.text:0000000000406ca9\n'
p1329
tp1330
sS'_fini'
p1331
(S'\n__stdcall _fini()\n'
p1332
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1333
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1334
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1335
S'.fini:00000000004072cc\n.fini:00000000004072d0\n.fini:00000000004072d4\n'
p1336
tp1337
sS'rpl_fcntl'
p1338
(S'\n__stdcall rpl_fcntl()\n'
p1339
V\u000a/* WARNING: Removing unreachable block (ram,0x00406aeb) */\u000a/* WARNING: Removing unreachable block (ram,0x00406b54) */\u000a/* WARNING: Heritage AFTER dead removal. Example location: s0xffffffffffffff38 : 0x00406af9 */\u000a/* WARNING: Restarted to delay deadcode elimination for space: stack */\u000a\u000aint rpl_fcntl(void...)\u000a\u000a{\u000a  int have_dupfd_cloexec;\u000a  int __fd;\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  int __cmd;\u000a  uint __fd_00;\u000a  va_list arg;\u000a  ulong local_c8;\u000a  \u000a  if (__cmd == 0x406) {\u000a    if (have_dupfd_cloexec < 0) {\u000a      __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a    }\u000a    else {\u000a      __fd = fcntl(__fd_00,0x406,local_c8 & 0xffffffff);\u000a      have_dupfd_cloexec = 1;\u000a      if ((__fd < 0) && (piVar3 = __errno_location(), *piVar3 == 0x16)) {\u000a        __fd = rpl_fcntl((ulong)__fd_00,0,local_c8 & 0xffffffff);\u000a        have_dupfd_cloexec = -1;\u000a        if (__fd < 0) {\u000a          return __fd;\u000a        }\u000a      }\u000a    }\u000a    if (((-1 < __fd) && (have_dupfd_cloexec == -1)) &&\u000a       ((uVar1 = fcntl(__fd,1), (int)uVar1 < 0 ||\u000a        (iVar2 = fcntl(__fd,2,(ulong)(uVar1 | 1),(ulong)(uVar1 | 1)), iVar2 == -1)))) {\u000a      piVar3 = __errno_location();\u000a      iVar2 = *piVar3;\u000a      close(__fd);\u000a      *piVar3 = iVar2;\u000a      __fd = -1;\u000a    }\u000a  }\u000a  else {\u000a    __fd = fcntl(__fd_00,__cmd,local_c8);\u000a  }\u000a  return __fd;\u000a}\u000a\u000a
p1340
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0xd8\nMOV R14D,EDI\nTEST AL,AL\nJZ 0x00406a7b\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV qword ptr [RSP + 0x30],RDX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x10\nMOVSXD RAX,dword ptr [RSP]\nCMP ESI,0x406\nJNZ 0x00406ad6\nCMP EAX,0x28\nJA 0x00406aeb\nMOV RCX,qword ptr [RSP + 0x10]\nADD RCX,RAX\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00406af9\nCMP EAX,0x28\nJA 0x00406b54\nMOV RCX,RAX\nADD RCX,qword ptr [RSP + 0x10]\nLEA EAX,[RAX + 0x8]\nMOV dword ptr [RSP],EAX\nJMP 0x00406b62\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV EBX,dword ptr [RCX]\nCMP dword ptr [0x0060e4f0],0x0\nJS 0x00406b73\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00401590\nMOV EBP,EAX\nMOV R15D,0x1\nTEST EBP,EBP\nJNS 0x00406b44\nCALL 0x00401530\nCMP dword ptr [RAX],0x16\nJNZ 0x00406b44\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00406a30\nMOV EBP,EAX\nMOV R15D,0xffffffff\nTEST EBP,EBP\nJS 0x00406bd6\nMOV dword ptr [0x0060e4f0],R15D\nTEST EBP,EBP\nJNS 0x00406b87\nJMP 0x00406bd6\nMOV RCX,qword ptr [RSP + 0x8]\nLEA RAX,[RCX + 0x8]\nMOV qword ptr [RSP + 0x8],RAX\nMOV RDX,qword ptr [RCX]\nXOR EAX,EAX\nMOV EDI,R14D\nCALL 0x00401590\nMOV EBP,EAX\nJMP 0x00406bd6\nXOR ESI,ESI\nXOR EAX,EAX\nMOV EDI,R14D\nMOV EDX,EBX\nCALL 0x00406a30\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00406bd6\nCMP dword ptr [0x0060e4f0],-0x1\nJNZ 0x00406bd6\nMOV ESI,0x1\nXOR EAX,EAX\nMOV EDI,EBP\nCALL 0x00401590\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x00406bbc\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,EBP\nMOV EDX,ECX\nCALL 0x00401590\nCMP EAX,-0x1\nJNZ 0x00406bd6\nCALL 0x00401530\nMOV RBX,RAX\nMOV R14D,dword ptr [RBX]\nMOV EDI,EBP\nCALL 0x004016c0\nMOV dword ptr [RBX],R14D\nMOV EBP,0xffffffff\nMOV EAX,EBP\nADD RSP,0xd8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1341
S'55\n41 57\n41 56\n53\n48 81 ec d8 00 00 00\n41 89 fe\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 89 54 24 30\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 10 00 00 00\n48 63 04 24\n81 fe 06 04 00 00\n75 15\n83 f8 28\n77 25\n48 8b 4c 24 10\n48 01 c1\n8d 40 08\n89 04 24\neb 23\n83 f8 28\n77 79\n48 89 c1\n48 03 4c 24 10\n8d 40 08\n89 04 24\neb 77\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n8b 19\n83 3d ee 79 20 00 00\n78 6f\n31 c0\n44 89 f7\n89 da\ne8 80 aa ff ff\n89 c5\n41 bf 01 00 00 00\n85 ed\n79 28\ne8 0f aa ff ff\n83 38 16\n75 1e\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 fc fe ff ff\n89 c5\n41 bf ff ff ff ff\n85 ed\n0f 88 92 00 00 00\n44 89 3d a5 79 20 00\n85 ed\n79 38\ne9 82 00 00 00\n48 8b 4c 24 08\n48 8d 41 08\n48 89 44 24 08\n48 8b 11\n31 c0\n44 89 f7\ne8 21 aa ff ff\n89 c5\neb 63\n31 f6\n31 c0\n44 89 f7\n89 da\ne8 af fe ff ff\n89 c5\n85 ed\n78 4f\n83 3d 62 79 20 00 ff\n75 46\nbe 01 00 00 00\n31 c0\n89 ef\ne8 f2 a9 ff ff\n89 c1\n85 c9\n78 18\n83 c9 01\nbe 02 00 00 00\n31 c0\n89 ef\n89 ca\ne8 d9 a9 ff ff\n83 f8 ff\n75 1a\ne8 6f a9 ff ff\n48 89 c3\n44 8b 33\n89 ef\ne8 f2 aa ff ff\n44 89 33\nbd ff ff ff ff\n89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1342
S'.text:0000000000406a30\n.text:0000000000406a31\n.text:0000000000406a33\n.text:0000000000406a35\n.text:0000000000406a36\n.text:0000000000406a3d\n.text:0000000000406a40\n.text:0000000000406a42\n.text:0000000000406a44\n.text:0000000000406a49\n.text:0000000000406a4e\n.text:0000000000406a53\n.text:0000000000406a5b\n.text:0000000000406a63\n.text:0000000000406a6b\n.text:0000000000406a73\n.text:0000000000406a7b\n.text:0000000000406a80\n.text:0000000000406a85\n.text:0000000000406a8a\n.text:0000000000406a8f\n.text:0000000000406a94\n.text:0000000000406a99\n.text:0000000000406aa1\n.text:0000000000406aa6\n.text:0000000000406aae\n.text:0000000000406ab5\n.text:0000000000406ab9\n.text:0000000000406abf\n.text:0000000000406ac1\n.text:0000000000406ac4\n.text:0000000000406ac6\n.text:0000000000406acb\n.text:0000000000406ace\n.text:0000000000406ad1\n.text:0000000000406ad4\n.text:0000000000406ad6\n.text:0000000000406ad9\n.text:0000000000406adb\n.text:0000000000406ade\n.text:0000000000406ae3\n.text:0000000000406ae6\n.text:0000000000406ae9\n.text:0000000000406aeb\n.text:0000000000406af0\n.text:0000000000406af4\n.text:0000000000406af9\n.text:0000000000406afb\n.text:0000000000406b02\n.text:0000000000406b04\n.text:0000000000406b06\n.text:0000000000406b09\n.text:0000000000406b0b\n.text:0000000000406b10\n.text:0000000000406b12\n.text:0000000000406b18\n.text:0000000000406b1a\n.text:0000000000406b1c\n.text:0000000000406b21\n.text:0000000000406b24\n.text:0000000000406b26\n.text:0000000000406b28\n.text:0000000000406b2a\n.text:0000000000406b2d\n.text:0000000000406b2f\n.text:0000000000406b34\n.text:0000000000406b36\n.text:0000000000406b3c\n.text:0000000000406b3e\n.text:0000000000406b44\n.text:0000000000406b4b\n.text:0000000000406b4d\n.text:0000000000406b4f\n.text:0000000000406b54\n.text:0000000000406b59\n.text:0000000000406b5d\n.text:0000000000406b62\n.text:0000000000406b65\n.text:0000000000406b67\n.text:0000000000406b6a\n.text:0000000000406b6f\n.text:0000000000406b71\n.text:0000000000406b73\n.text:0000000000406b75\n.text:0000000000406b77\n.text:0000000000406b7a\n.text:0000000000406b7c\n.text:0000000000406b81\n.text:0000000000406b83\n.text:0000000000406b85\n.text:0000000000406b87\n.text:0000000000406b8e\n.text:0000000000406b90\n.text:0000000000406b95\n.text:0000000000406b97\n.text:0000000000406b99\n.text:0000000000406b9e\n.text:0000000000406ba0\n.text:0000000000406ba2\n.text:0000000000406ba4\n.text:0000000000406ba7\n.text:0000000000406bac\n.text:0000000000406bae\n.text:0000000000406bb0\n.text:0000000000406bb2\n.text:0000000000406bb7\n.text:0000000000406bba\n.text:0000000000406bbc\n.text:0000000000406bc1\n.text:0000000000406bc4\n.text:0000000000406bc7\n.text:0000000000406bc9\n.text:0000000000406bce\n.text:0000000000406bd1\n.text:0000000000406bd6\n.text:0000000000406bd8\n.text:0000000000406bdf\n.text:0000000000406be0\n.text:0000000000406be2\n.text:0000000000406be4\n.text:0000000000406be5\n'
p1343
tp1344
sS'__fpending'
p1345
(S'\n__stdcall __fpending()\n'
p1346
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_0060e050)();\u000a  return;\u000a}\u000a\u000a
p1347
S'JMP qword ptr [0x0060e050]\n'
p1348
S'ff 25 da ca 20 00\n'
p1349
S'.plt:0000000000401570\n'
p1350
tp1351
s.