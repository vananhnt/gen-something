(dp0
S'FUN_00400600'
p1
(S'\n__stdcall FUN_00400600()\n'
p2
V\u000avoid FUN_00400600(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00601010)();\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH qword ptr [0x00601008]\nJMP qword ptr [0x00601010]\n'
p4
S'ff 35 02 0a 20 00\nff 25 04 0a 20 00\n'
p5
S'.plt:0000000000400600\n.plt:0000000000400606\n'
p6
tp7
sS'malloc'
p8
(S'\n__stdcall malloc(size_t __size)\n'
p9
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_00601040)();\u000a  return pvVar1;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x00601040]\n'
p11
S'ff 25 da 09 20 00\n'
p12
S'.plt:0000000000400660\n'
p13
tp14
sS'register_tm_clones'
p15
(S'\n__stdcall register_tm_clones()\n'
p16
V\u000a/* WARNING: Removing unreachable block (ram,0x00400733) */\u000a/* WARNING: Removing unreachable block (ram,0x0040073d) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p17
S'MOV ESI,0x601070\nPUSH RBP\nSUB RSI,0x601070\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400748\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400748\nPOP RBP\nMOV EDI,0x601070\nJMP RAX\nPOP RBP\nRET\n'
p18
S'be 70 10 60 00\n55\n48 81 ee 70 10 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 70 10 60 00\nff e0\n5d\nc3\n'
p19
S'.text:0000000000400710\n.text:0000000000400715\n.text:0000000000400716\n.text:000000000040071d\n.text:0000000000400721\n.text:0000000000400724\n.text:0000000000400727\n.text:000000000040072b\n.text:000000000040072e\n.text:0000000000400731\n.text:0000000000400733\n.text:0000000000400738\n.text:000000000040073b\n.text:000000000040073d\n.text:000000000040073e\n.text:0000000000400743\n.text:0000000000400748\n.text:0000000000400749\n'
p20
tp21
sS'__libc_csu_init'
p22
(S'\n__stdcall __libc_csu_init()\n'
p23
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p24
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x600e08]\nPUSH RBP\nLEA RBP,[0x600e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004005e8\nTEST RBP,RBP\nJZ 0x00400996\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00400980\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p25
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 b6 04 20 00\n55\n48 8d 2d b6 04 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 77 fc ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p26
S'.text:0000000000400940\n.text:0000000000400942\n.text:0000000000400944\n.text:0000000000400947\n.text:0000000000400949\n.text:000000000040094b\n.text:0000000000400952\n.text:0000000000400953\n.text:000000000040095a\n.text:000000000040095b\n.text:000000000040095e\n.text:0000000000400961\n.text:0000000000400964\n.text:0000000000400968\n.text:000000000040096c\n.text:0000000000400971\n.text:0000000000400974\n.text:0000000000400976\n.text:0000000000400978\n.text:0000000000400980\n.text:0000000000400983\n.text:0000000000400986\n.text:0000000000400989\n.text:000000000040098d\n.text:0000000000400991\n.text:0000000000400994\n.text:0000000000400996\n.text:000000000040099a\n.text:000000000040099b\n.text:000000000040099c\n.text:000000000040099e\n.text:00000000004009a0\n.text:00000000004009a2\n.text:00000000004009a4\n'
p27
tp28
sS'_init'
p29
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p30
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00600ff8;\u000a  if (PTR___gmon_start___00600ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00600ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p31
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00600ff8]\nTEST RAX,RAX\nJZ 0x004005fa\nCALL RAX\nADD RSP,0x8\nRET\n'
p32
S'48 83 ec 08\n48 8b 05 05 0a 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p33
S'.init:00000000004005e8\n.init:00000000004005ec\n.init:00000000004005f3\n.init:00000000004005f6\n.init:00000000004005f8\n.init:00000000004005fa\n.init:00000000004005fe\n'
p34
tp35
sS'popen'
p36
(S'\n__stdcall popen(char * __command, char * __modes)\n'
p37
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * popen(char *__command,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_popen_00601048)();\u000a  return pFVar1;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00601048]\n'
p39
S'ff 25 d2 09 20 00\n'
p40
S'.plt:0000000000400670\n'
p41
tp42
sS'_start'
p43
(S'\n__stdcall _start()\n'
p44
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00600ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p45
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4009b0\nMOV RCX,0x400940\nMOV RDI,0x4007f0\nCALL qword ptr [0x00600ff0]\nHLT\n'
p46
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 b0 09 40 00\n48 c7 c1 40 09 40 00\n48 c7 c7 f0 07 40 00\nff 15 26 09 20 00\nf4\n'
p47
S'.text:00000000004006a0\n.text:00000000004006a2\n.text:00000000004006a5\n.text:00000000004006a6\n.text:00000000004006a9\n.text:00000000004006ad\n.text:00000000004006ae\n.text:00000000004006af\n.text:00000000004006b6\n.text:00000000004006bd\n.text:00000000004006c4\n.text:00000000004006ca\n'
p48
tp49
sS'fwrite'
p50
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p51
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_00601058)();\u000a  return sVar1;\u000a}\u000a\u000a
p52
S'JMP qword ptr [0x00601058]\n'
p53
S'ff 25 c2 09 20 00\n'
p54
S'.plt:0000000000400690\n'
p55
tp56
sS'main'
p57
(S'\n__stdcall main(char * * argv)\n'
p58
V\u000aint main(char **argv)\u000a\u000a{\u000a  FILE *__stream;\u000a  int __status;\u000a  FILE **p;\u000a  FILE *pFVar1;\u000a  size_t __n;\u000a  size_t sVar2;\u000a  ulong uVar3;\u000a  undefined8 uVar4;\u000a  ulong uVar5;\u000a  long in_RSI;\u000a  char *__format;\u000a  size_t i;\u000a  char buf [8192];\u000a  undefined auStack8248 [8200];\u000a  \u000a  i = SEXT48((int)(uint)argv);\u000a  p = (FILE **)malloc(i * 8 - 8);\u000a  if (p == (FILE **)0x0) {\u000aLAB_00400915:\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(1);\u000a  }\u000a  if (1 < (uint)argv) {\u000a    uVar5 = 1;\u000a    do {\u000a      pFVar1 = (FILE *)popen(*(char **)(in_RSI + uVar5 * 8),"w");\u000a      p[uVar5 - 1] = pFVar1;\u000a      if (pFVar1 == (FILE *)0x0) {\u000a        uVar4 = *(undefined8 *)(in_RSI + uVar5 * 8);\u000a        __format = "Can not open pipe to \u005c'%s\u005c'\u005cn";\u000aLAB_00400903:\u000a        fprintf(stderr,__format,uVar4);\u000a        close_pipes(p,i);\u000a        goto LAB_00400915;\u000a      }\u000a      uVar5 = uVar5 + 1;\u000a    } while (uVar5 < i);\u000a  }\u000a  i = i - 1;\u000a  __status = feof(stdin);\u000a  __stream = stdin;\u000a  do {\u000a    stdin = __stream;\u000a    if ((__status != 0) || (stdin = __stream, __status = ferror(__stream), __status != 0)) {\u000a      __status = close_pipes(p,i);\u000a                    /* WARNING: Subroutine does not return */\u000a      exit(__status);\u000a    }\u000a    __n = fread(auStack8248,1,0x2000,__stream);\u000a    uVar5 = 0;\u000a    while (uVar3 = uVar5, uVar3 < i) {\u000a      sVar2 = fwrite(auStack8248,1,__n,(FILE *)p[uVar3]);\u000a      uVar5 = uVar3 + 1;\u000a      if (sVar2 != __n) {\u000a        uVar4 = *(undefined8 *)(in_RSI + 8 + uVar3 * 8);\u000a        __format = "Write error to `%s\u005c'\u005cn";\u000a        goto LAB_00400903;\u000a      }\u000a    }\u000a    __status = feof(stdin);\u000a    __stream = stdin;\u000a  } while( true );\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2008\nMOV R15,RSI\nMOV EBX,EDI\nMOVSXD R14,EBX\nLEA RDI,[-0x8 + R14*0x8]\nCALL 0x00400660\nMOV R12,RAX\nTEST R12,R12\nJZ 0x00400915\nCMP EBX,0x2\nJC 0x00400854\nMOV EBX,0x1\nNOP dword ptr [RAX]\nMOV RDI,qword ptr [R15 + RBX*0x8]\nMOV ESI,0x4009c4\nCALL 0x00400670\nMOV qword ptr [R12 + RBX*0x8 + -0x8],RAX\nTEST RAX,RAX\nJZ 0x0040091f\nINC RBX\nCMP RBX,R14\nJC 0x00400830\nDEC R14\nMOV RDI,qword ptr [0x00601080]\nCALL 0x00400650\nTEST EAX,EAX\nJNZ 0x004008e0\nMOV R13,RSP\nNOP word ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [0x00601080]\nMOV RDI,RBX\nCALL 0x00400610\nTEST EAX,EAX\nJNZ 0x004008e0\nMOV ESI,0x1\nMOV EDX,0x2000\nMOV RDI,R13\nMOV RCX,RBX\nCALL 0x00400620\nMOV RBX,RAX\nXOR ECX,ECX\nNOP dword ptr [RAX]\nMOV RBP,RCX\nCMP RBP,R14\nJNC 0x004008d0\nMOV RCX,qword ptr [R12 + RBP*0x8]\nMOV ESI,0x1\nMOV RDI,R13\nMOV RDX,RBX\nCALL 0x00400690\nLEA RCX,[RBP + 0x1]\nCMP RAX,RBX\nJZ 0x004008a0\nJMP 0x004008f2\nMOV RDI,qword ptr [0x00601080]\nCALL 0x00400650\nTEST EAX,EAX\nJZ 0x00400870\nMOV RDI,R12\nMOV RSI,R14\nCALL 0x004007a0\nMOV EDI,EAX\nCALL 0x00400680\nMOV RDI,qword ptr [0x006010a0]\nMOV RDX,qword ptr [R15 + RBP*0x8 + 0x8]\nMOV ESI,0x4009e1\nXOR EAX,EAX\nCALL 0x00400640\nMOV RDI,R12\nMOV RSI,R14\nCALL 0x004007a0\nMOV EDI,0x1\nCALL 0x00400680\nMOV RDI,qword ptr [0x006010a0]\nMOV RDX,qword ptr [R15 + RBX*0x8]\nMOV ESI,0x4009c6\nJMP 0x00400903\n'
p60
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 08 20 00 00\n49 89 f7\n89 fb\n4c 63 f3\n4a 8d 3c f5 f8 ff ff ff\ne8 4a fe ff ff\n49 89 c4\n4d 85 e4\n0f 84 f3 00 00 00\n83 fb 02\n72 2d\nbb 01 00 00 00\n0f 1f 40 00\n49 8b 3c df\nbe c4 09 40 00\ne8 32 fe ff ff\n49 89 44 dc f8\n48 85 c0\n0f 84 d3 00 00 00\n48 ff c3\n4c 39 f3\n72 dc\n49 ff ce\n48 8b 3d 22 08 20 00\ne8 ed fd ff ff\n85 c0\n75 79\n49 89 e5\n66 0f 1f 44 00 00\n48 8b 1d 09 08 20 00\n48 89 df\ne8 91 fd ff ff\n85 c0\n75 5d\nbe 01 00 00 00\nba 00 20 00 00\n4c 89 ef\n48 89 d9\ne8 88 fd ff ff\n48 89 c3\n31 c9\n0f 1f 00\n48 89 cd\n4c 39 f5\n73 28\n49 8b 0c ec\nbe 01 00 00 00\n4c 89 ef\n48 89 da\ne8 d4 fd ff ff\n48 8d 4d 01\n48 39 d8\n74 db\neb 2b\n48 8b 3d a9 07 20 00\ne8 74 fd ff ff\n85 c0\n74 90\n4c 89 e7\n4c 89 f6\ne8 b5 fe ff ff\n89 c7\ne8 8e fd ff ff\n48 8b 3d a7 07 20 00\n49 8b 54 ef 08\nbe e1 09 40 00\n31 c0\ne8 36 fd ff ff\n4c 89 e7\n4c 89 f6\ne8 8b fe ff ff\nbf 01 00 00 00\ne8 61 fd ff ff\n48 8b 3d 7a 07 20 00\n49 8b 14 df\nbe c6 09 40 00\neb d2\n'
p61
S'.text:00000000004007f0\n.text:00000000004007f1\n.text:00000000004007f3\n.text:00000000004007f5\n.text:00000000004007f7\n.text:00000000004007f9\n.text:00000000004007fa\n.text:0000000000400801\n.text:0000000000400804\n.text:0000000000400806\n.text:0000000000400809\n.text:0000000000400811\n.text:0000000000400816\n.text:0000000000400819\n.text:000000000040081c\n.text:0000000000400822\n.text:0000000000400825\n.text:0000000000400827\n.text:000000000040082c\n.text:0000000000400830\n.text:0000000000400834\n.text:0000000000400839\n.text:000000000040083e\n.text:0000000000400843\n.text:0000000000400846\n.text:000000000040084c\n.text:000000000040084f\n.text:0000000000400852\n.text:0000000000400854\n.text:0000000000400857\n.text:000000000040085e\n.text:0000000000400863\n.text:0000000000400865\n.text:0000000000400867\n.text:000000000040086a\n.text:0000000000400870\n.text:0000000000400877\n.text:000000000040087a\n.text:000000000040087f\n.text:0000000000400881\n.text:0000000000400883\n.text:0000000000400888\n.text:000000000040088d\n.text:0000000000400890\n.text:0000000000400893\n.text:0000000000400898\n.text:000000000040089b\n.text:000000000040089d\n.text:00000000004008a0\n.text:00000000004008a3\n.text:00000000004008a6\n.text:00000000004008a8\n.text:00000000004008ac\n.text:00000000004008b1\n.text:00000000004008b4\n.text:00000000004008b7\n.text:00000000004008bc\n.text:00000000004008c0\n.text:00000000004008c3\n.text:00000000004008c5\n.text:00000000004008d0\n.text:00000000004008d7\n.text:00000000004008dc\n.text:00000000004008de\n.text:00000000004008e0\n.text:00000000004008e3\n.text:00000000004008e6\n.text:00000000004008eb\n.text:00000000004008ed\n.text:00000000004008f2\n.text:00000000004008f9\n.text:00000000004008fe\n.text:0000000000400903\n.text:0000000000400905\n.text:000000000040090a\n.text:000000000040090d\n.text:0000000000400910\n.text:0000000000400915\n.text:000000000040091a\n.text:000000000040091f\n.text:0000000000400926\n.text:000000000040092a\n.text:000000000040092f\n'
p62
tp63
sS'pclose'
p64
(S'\n__stdcall pclose(FILE * __stream)\n'
p65
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint pclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_pclose_00601028)();\u000a  return iVar1;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00601028]\n'
p67
S'ff 25 f2 09 20 00\n'
p68
S'.plt:0000000000400630\n'
p69
tp70
sS'fprintf'
p71
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p72
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00601030)();\u000a  return iVar1;\u000a}\u000a\u000a
p73
S'JMP qword ptr [0x00601030]\n'
p74
S'ff 25 ea 09 20 00\n'
p75
S'.plt:0000000000400640\n'
p76
tp77
sS'fread'
p78
(S'\n__stdcall fread(void * __ptr, size_t __size, size_t __n, FILE * __stream)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fread_00601020)();\u000a  return sVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00601020]\n'
p81
S'ff 25 fa 09 20 00\n'
p82
S'.plt:0000000000400620\n'
p83
tp84
sS'deregister_tm_clones'
p85
(S'\n__stdcall deregister_tm_clones()\n'
p86
V\u000a/* WARNING: Removing unreachable block (ram,0x004006e5) */\u000a/* WARNING: Removing unreachable block (ram,0x004006ef) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p87
S'MOV EAX,0x601077\nPUSH RBP\nSUB RAX,0x601070\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400700\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400700\nPOP RBP\nMOV EDI,0x601070\nJMP RAX\nPOP RBP\nRET\n'
p88
S'b8 77 10 60 00\n55\n48 2d 70 10 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 70 10 60 00\nff e0\n5d\nc3\n'
p89
S'.text:00000000004006d0\n.text:00000000004006d5\n.text:00000000004006d6\n.text:00000000004006dc\n.text:00000000004006e0\n.text:00000000004006e3\n.text:00000000004006e5\n.text:00000000004006ea\n.text:00000000004006ed\n.text:00000000004006ef\n.text:00000000004006f0\n.text:00000000004006f5\n.text:0000000000400700\n.text:0000000000400701\n'
p90
tp91
sS'ferror'
p92
(S'\n__stdcall ferror(FILE * __stream)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_00601018)();\u000a  return iVar1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00601018]\n'
p95
S'ff 25 02 0a 20 00\n'
p96
S'.plt:0000000000400610\n'
p97
tp98
sS'exit'
p99
(S'\n__stdcall exit(int __status)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_00601050)();\u000a  return;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00601050]\n'
p102
S'ff 25 ca 09 20 00\n'
p103
S'.plt:0000000000400680\n'
p104
tp105
sS'__libc_csu_fini'
p106
(S'\n__stdcall __libc_csu_fini()\n'
p107
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p108
S'RET\n'
p109
S'f3 c3\n'
p110
S'.text:00000000004009b0\n'
p111
tp112
sS'close_pipes'
p113
(S'\n__stdcall close_pipes(FILE * * p, size_t i)\n'
p114
V\u000aint close_pipes(FILE **p,size_t i)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  \u000a  uVar3 = 0;\u000a  if (i != 0) {\u000a    do {\u000a      uVar1 = pclose((FILE *)*p);\u000a      uVar2 = uVar1 >> 8 & 0xff;\u000a      if ((uVar1 & 0x7f) != 0) {\u000a        uVar2 = 1;\u000a      }\u000a      uVar3 = uVar3 | uVar2;\u000a      p = p + 1;\u000a      i = i - 1;\u000a    } while (i != 0);\u000a  }\u000a  return (int)uVar3;\u000a}\u000a\u000a
p115
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RSI\nMOV RBX,RDI\nXOR EBP,EBP\nTEST R14,R14\nJZ 0x004007dc\nMOV R15D,0x1\nNOP word ptr [RAX + RAX*0x1]\nMOV RDI,qword ptr [RBX]\nCALL 0x00400630\nTEST AL,0x7f\nMOVZX EAX,AH\nCMOVNZ EAX,R15D\nOR EBP,EAX\nADD RBX,0x8\nDEC R14\nJNZ 0x004007c0\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p116
S'55\n41 57\n41 56\n53\n50\n49 89 f6\n48 89 fb\n31 ed\n4d 85 f6\n74 28\n41 bf 01 00 00 00\n66 0f 1f 44 00 00\n48 8b 3b\ne8 68 fe ff ff\na8 7f\n0f b6 c4\n41 0f 45 c7\n09 c5\n48 83 c3 08\n49 ff ce\n75 e4\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p117
S'.text:00000000004007a0\n.text:00000000004007a1\n.text:00000000004007a3\n.text:00000000004007a5\n.text:00000000004007a6\n.text:00000000004007a7\n.text:00000000004007aa\n.text:00000000004007ad\n.text:00000000004007af\n.text:00000000004007b2\n.text:00000000004007b4\n.text:00000000004007ba\n.text:00000000004007c0\n.text:00000000004007c3\n.text:00000000004007c8\n.text:00000000004007ca\n.text:00000000004007cd\n.text:00000000004007d1\n.text:00000000004007d3\n.text:00000000004007d7\n.text:00000000004007da\n.text:00000000004007dc\n.text:00000000004007de\n.text:00000000004007e2\n.text:00000000004007e3\n.text:00000000004007e5\n.text:00000000004007e7\n.text:00000000004007e8\n'
p118
tp119
sS'__do_global_dtors_aux'
p120
(S'\n__stdcall __do_global_dtors_aux()\n'
p121
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p122
S'CMP byte ptr [0x006010a8],0x0\nJNZ 0x0040076a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x004006d0\nPOP RBP\nMOV byte ptr [0x006010a8],0x1\nRET\n'
p123
S'80 3d 51 09 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 3e 09 20 00 01\nf3 c3\n'
p124
S'.text:0000000000400750\n.text:0000000000400757\n.text:0000000000400759\n.text:000000000040075a\n.text:000000000040075d\n.text:0000000000400762\n.text:0000000000400763\n.text:000000000040076a\n'
p125
tp126
sS'_fini'
p127
(S'\n__stdcall _fini()\n'
p128
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p129
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p130
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p131
S'.fini:00000000004009b4\n.fini:00000000004009b8\n.fini:00000000004009bc\n'
p132
tp133
sS'feof'
p134
(S'\n__stdcall feof(FILE * __stream)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint feof(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_feof_00601038)();\u000a  return iVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x00601038]\n'
p137
S'ff 25 e2 09 20 00\n'
p138
S'.plt:0000000000400650\n'
p139
tp140
sS'frame_dummy'
p141
(S'\n__stdcall frame_dummy()\n'
p142
V\u000a/* WARNING: Removing unreachable block (ram,0x0040078a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p143
S'MOV EDI,0x600e18\nCMP qword ptr [RDI],0x0\nJNZ 0x00400780\nJMP 0x00400710\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x0040077b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400710\n'
p144
S'bf 18 0e 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p145
S'.text:0000000000400770\n.text:0000000000400775\n.text:0000000000400779\n.text:000000000040077b\n.text:0000000000400780\n.text:0000000000400785\n.text:0000000000400788\n.text:000000000040078a\n.text:000000000040078b\n.text:000000000040078e\n.text:0000000000400790\n.text:0000000000400791\n'
p146
tp147
s.