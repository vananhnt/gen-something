(dp0
S'ungetc'
p1
(S'\n__stdcall ungetc(int __c, FILE * __stream)\n'
p2
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ungetc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ungetc_0060b1a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p3
S'JMP qword ptr [0x0060b1a8]\n'
p4
S'ff 25 d2 97 20 00\n'
p5
S'.plt:00000000004019d0\n'
p6
tp7
sS'version_etc_arn'
p8
(S'\n__stdcall version_etc_arn(FILE * stream, char * command_name, char * package, char * version, char * * authors, size_t n_authors)\n'
p9
V\u000avoid version_etc_arn(FILE *stream,char *command_name,char *package,char *version,char **authors,\u000a                    size_t n_authors)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined8 uVar2;\u000a  \u000a  if (command_name == (char *)0x0) {\u000a    __fprintf_chk(stream,1,"%s %s\u005cn",package,version);\u000a  }\u000a  else {\u000a    __fprintf_chk(stream,1,"%s (%s) %s\u005cn",command_name,package);\u000a  }\u000a  uVar1 = dcgettext(0,&DAT_004082d3,5);\u000a  __fprintf_chk(stream,1,"Copyright %s %d Free Software Foundation, Inc.",uVar1,0x7e0);\u000a  __s = (char *)dcgettext(0,\u000a                          "\u005cnLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\u005cnThis is free software: you are free to change and redistribute it.\u005cnThere is NO WARRANTY, to the extent permitted by law.\u005cn\u005cn"\u000a                          ,5);\u000a  fputs_unlocked(__s,(FILE *)stream);\u000a  switch(n_authors) {\u000a  case 0:\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  case 1:\u000a    uVar1 = dcgettext(0,"Written by %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors);\u000a    return;\u000a  case 2:\u000a    uVar1 = dcgettext(0,"Written by %s and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1]);\u000a    return;\u000a  case 3:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2]);\u000a    return;\u000a  case 4:\u000a    uVar2 = 0x405957;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],uVar2);\u000a    break;\u000a  case 5:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4]);\u000a    break;\u000a  case 6:\u000a    uVar2 = 0x4059d8;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  uVar2);\u000a    break;\u000a  case 7:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6]);\u000a    break;\u000a  case 8:\u000a    uVar2 = 0x405a6c;\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cnand %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],uVar2);\u000a    break;\u000a  case 9:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, and %s.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a    break;\u000a  default:\u000a    uVar1 = dcgettext(0,"Written by %s, %s, %s,\u005cn%s, %s, %s, %s,\u005cn%s, %s, and others.\u005cn",5);\u000a    __fprintf_chk(stream,1,uVar1,*authors,authors[1],authors[2],authors[3],authors[4],authors[5],\u000a                  authors[6],authors[7],authors[8]);\u000a  }\u000a  return;\u000a}\u000a\u000a
p10
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R12,R9\nMOV R15,R8\nMOV R9,RCX\nMOV RBX,RDX\nMOV RCX,RSI\nMOV R14,RDI\nMOV ESI,0x1\nTEST RCX,RCX\nJZ 0x004057e8\nMOV EDX,0x4082c0\nXOR EAX,EAX\nMOV RDI,R14\nMOV R8,RBX\nCALL 0x00401af0\nJMP 0x004057fd\nMOV EDX,0x4082cc\nXOR EAX,EAX\nMOV RDI,R14\nMOV RCX,RBX\nMOV R8,R9\nCALL 0x00401af0\nXOR EDI,EDI\nMOV ESI,0x4082d3\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV ESI,0x1\nMOV EDX,0x4085a0\nMOV R8D,0x7e0\nXOR EAX,EAX\nMOV RDI,R14\nCALL 0x00401af0\nXOR EDI,EDI\nMOV ESI,0x4082d7\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDI,RAX\nMOV RSI,R14\nCALL 0x004018e0\nCMP R12,0x9\nJA 0x00405886\nJMP qword ptr [0x408270 + R12*0x8]\nXOR EDI,EDI\nMOV ESI,0x4083a2\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401af0\nXOR EDI,EDI\nMOV ESI,0x4084e1\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x38\nJMP 0x00405af7\nXOR EDI,EDI\nMOV ESI,0x4083b2\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401af0\nXOR EDI,EDI\nMOV ESI,0x4083c9\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401af0\nXOR EDI,EDI\nMOV ESI,0x4083e5\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x18\nJMP 0x00405af7\nXOR EDI,EDI\nMOV ESI,0x408405\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x18\nJMP 0x00405af7\nXOR EDI,EDI\nMOV ESI,0x408429\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x28\nJMP 0x00405af7\nXOR EDI,EDI\nMOV ESI,0x408451\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x28\nJMP 0x00405af7\nXOR EDI,EDI\nMOV ESI,0x40847d\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nSUB RSP,0x8\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x38\nJMP 0x00405af7\nXOR EDI,EDI\nMOV ESI,0x4084ad\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [R15]\nMOV R8,qword ptr [R15 + 0x8]\nMOV R9,qword ptr [R15 + 0x10]\nMOV ESI,0x1\nMOV EAX,0x0\nMOV RDI,R14\nPUSH qword ptr [R15 + 0x40]\nPUSH qword ptr [R15 + 0x38]\nPUSH qword ptr [R15 + 0x30]\nPUSH qword ptr [R15 + 0x28]\nPUSH qword ptr [R15 + 0x20]\nPUSH qword ptr [R15 + 0x18]\nCALL 0x00401af0\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\nCALL 0x00401700\n'
p11
S'41 57\n41 56\n41 54\n53\n50\n4d 89 cc\n4d 89 c7\n49 89 c9\n48 89 d3\n48 89 f1\n49 89 fe\nbe 01 00 00 00\n48 85 c9\n74 14\nba c0 82 40 00\n31 c0\n4c 89 f7\n49 89 d8\ne8 0a c3 ff ff\neb 15\nba cc 82 40 00\n31 c0\n4c 89 f7\n48 89 d9\n4d 89 c8\ne8 f3 c2 ff ff\n31 ff\nbe d3 82 40 00\nba 05 00 00 00\ne8 f2 bf ff ff\n48 89 c1\nbe 01 00 00 00\nba a0 85 40 00\n41 b8 e0 07 00 00\n31 c0\n4c 89 f7\ne8 c5 c2 ff ff\n31 ff\nbe d7 82 40 00\nba 05 00 00 00\ne8 c4 bf ff ff\n48 89 c7\n4c 89 f6\ne8 99 c0 ff ff\n49 83 fc 09\n77 39\n42 ff 24 e5 70 82 40 00\n31 ff\nbe a2 83 40 00\nba 05 00 00 00\ne8 9a bf ff ff\n48 89 c2\n49 8b 0f\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 6a c2 ff ff\n31 ff\nbe e1 84 40 00\nba 05 00 00 00\ne8 69 bf ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 21 c2 ff ff\n48 83 c4 38\ne9 1f 02 00 00\n31 ff\nbe b2 83 40 00\nba 05 00 00 00\ne8 17 bf ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 e3 c1 ff ff\n31 ff\nbe c9 83 40 00\nba 05 00 00 00\ne8 e2 be ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\n31 c0\n4c 89 f7\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 aa c1 ff ff\n31 ff\nbe e5 83 40 00\nba 05 00 00 00\ne8 a9 be ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\n31 c0\n4c 89 f7\n41 ff 77 18\ne8 74 c1 ff ff\n48 83 c4 18\ne9 72 01 00 00\n31 ff\nbe 05 84 40 00\nba 05 00 00 00\ne8 6a be ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 20\n41 ff 77 18\ne8 32 c1 ff ff\n48 83 c4 18\ne9 30 01 00 00\n31 ff\nbe 29 84 40 00\nba 05 00 00 00\ne8 28 be ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 e8 c0 ff ff\n48 83 c4 28\ne9 e6 00 00 00\n31 ff\nbe 51 84 40 00\nba 05 00 00 00\ne8 de bd ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 9e c0 ff ff\n48 83 c4 28\ne9 9c 00 00 00\n31 ff\nbe 7d 84 40 00\nba 05 00 00 00\ne8 94 bd ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\n48 83 ec 08\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 4c c0 ff ff\n48 83 c4 38\neb 4d\n31 ff\nbe ad 84 40 00\nba 05 00 00 00\ne8 45 bd ff ff\n48 89 c2\n49 8b 0f\n4d 8b 47 08\n4d 8b 4f 10\nbe 01 00 00 00\nb8 00 00 00 00\n4c 89 f7\n41 ff 77 40\n41 ff 77 38\n41 ff 77 30\n41 ff 77 28\n41 ff 77 20\n41 ff 77 18\ne8 fd bf ff ff\n48 83 c4 38\n5b\n41 5c\n41 5e\n41 5f\nc3\ne8 fc bb ff ff\n'
p12
S'.text:00000000004057b0\n.text:00000000004057b2\n.text:00000000004057b4\n.text:00000000004057b6\n.text:00000000004057b7\n.text:00000000004057b8\n.text:00000000004057bb\n.text:00000000004057be\n.text:00000000004057c1\n.text:00000000004057c4\n.text:00000000004057c7\n.text:00000000004057ca\n.text:00000000004057cf\n.text:00000000004057d2\n.text:00000000004057d4\n.text:00000000004057d9\n.text:00000000004057db\n.text:00000000004057de\n.text:00000000004057e1\n.text:00000000004057e6\n.text:00000000004057e8\n.text:00000000004057ed\n.text:00000000004057ef\n.text:00000000004057f2\n.text:00000000004057f5\n.text:00000000004057f8\n.text:00000000004057fd\n.text:00000000004057ff\n.text:0000000000405804\n.text:0000000000405809\n.text:000000000040580e\n.text:0000000000405811\n.text:0000000000405816\n.text:000000000040581b\n.text:0000000000405821\n.text:0000000000405823\n.text:0000000000405826\n.text:000000000040582b\n.text:000000000040582d\n.text:0000000000405832\n.text:0000000000405837\n.text:000000000040583c\n.text:000000000040583f\n.text:0000000000405842\n.text:0000000000405847\n.text:000000000040584b\n.text:000000000040584d\n.text:0000000000405855\n.text:0000000000405857\n.text:000000000040585c\n.text:0000000000405861\n.text:0000000000405866\n.text:0000000000405869\n.text:000000000040586c\n.text:0000000000405871\n.text:0000000000405873\n.text:0000000000405876\n.text:000000000040587a\n.text:000000000040587b\n.text:000000000040587d\n.text:000000000040587f\n.text:0000000000405881\n.text:0000000000405886\n.text:0000000000405888\n.text:000000000040588d\n.text:0000000000405892\n.text:0000000000405897\n.text:000000000040589a\n.text:000000000040589d\n.text:00000000004058a1\n.text:00000000004058a5\n.text:00000000004058aa\n.text:00000000004058af\n.text:00000000004058b2\n.text:00000000004058b6\n.text:00000000004058ba\n.text:00000000004058be\n.text:00000000004058c2\n.text:00000000004058c6\n.text:00000000004058ca\n.text:00000000004058cf\n.text:00000000004058d3\n.text:00000000004058d8\n.text:00000000004058da\n.text:00000000004058df\n.text:00000000004058e4\n.text:00000000004058e9\n.text:00000000004058ec\n.text:00000000004058ef\n.text:00000000004058f3\n.text:00000000004058f8\n.text:00000000004058fa\n.text:00000000004058fd\n.text:0000000000405901\n.text:0000000000405902\n.text:0000000000405904\n.text:0000000000405906\n.text:0000000000405908\n.text:000000000040590d\n.text:000000000040590f\n.text:0000000000405914\n.text:0000000000405919\n.text:000000000040591e\n.text:0000000000405921\n.text:0000000000405924\n.text:0000000000405928\n.text:000000000040592c\n.text:0000000000405931\n.text:0000000000405933\n.text:0000000000405936\n.text:000000000040593a\n.text:000000000040593b\n.text:000000000040593d\n.text:000000000040593f\n.text:0000000000405941\n.text:0000000000405946\n.text:0000000000405948\n.text:000000000040594d\n.text:0000000000405952\n.text:0000000000405957\n.text:000000000040595a\n.text:000000000040595d\n.text:0000000000405961\n.text:0000000000405965\n.text:0000000000405969\n.text:000000000040596e\n.text:0000000000405970\n.text:0000000000405973\n.text:0000000000405977\n.text:000000000040597c\n.text:0000000000405980\n.text:0000000000405985\n.text:0000000000405987\n.text:000000000040598c\n.text:0000000000405991\n.text:0000000000405996\n.text:0000000000405999\n.text:000000000040599c\n.text:00000000004059a0\n.text:00000000004059a4\n.text:00000000004059a9\n.text:00000000004059ae\n.text:00000000004059b1\n.text:00000000004059b5\n.text:00000000004059b9\n.text:00000000004059be\n.text:00000000004059c2\n.text:00000000004059c7\n.text:00000000004059c9\n.text:00000000004059ce\n.text:00000000004059d3\n.text:00000000004059d8\n.text:00000000004059db\n.text:00000000004059de\n.text:00000000004059e2\n.text:00000000004059e6\n.text:00000000004059ea\n.text:00000000004059ef\n.text:00000000004059f4\n.text:00000000004059f7\n.text:00000000004059fb\n.text:00000000004059ff\n.text:0000000000405a03\n.text:0000000000405a08\n.text:0000000000405a0c\n.text:0000000000405a11\n.text:0000000000405a13\n.text:0000000000405a18\n.text:0000000000405a1d\n.text:0000000000405a22\n.text:0000000000405a25\n.text:0000000000405a28\n.text:0000000000405a2c\n.text:0000000000405a30\n.text:0000000000405a35\n.text:0000000000405a3a\n.text:0000000000405a3d\n.text:0000000000405a41\n.text:0000000000405a45\n.text:0000000000405a49\n.text:0000000000405a4d\n.text:0000000000405a52\n.text:0000000000405a56\n.text:0000000000405a5b\n.text:0000000000405a5d\n.text:0000000000405a62\n.text:0000000000405a67\n.text:0000000000405a6c\n.text:0000000000405a6f\n.text:0000000000405a72\n.text:0000000000405a76\n.text:0000000000405a7a\n.text:0000000000405a7e\n.text:0000000000405a83\n.text:0000000000405a88\n.text:0000000000405a8b\n.text:0000000000405a8f\n.text:0000000000405a93\n.text:0000000000405a97\n.text:0000000000405a9b\n.text:0000000000405a9f\n.text:0000000000405aa4\n.text:0000000000405aa8\n.text:0000000000405aaa\n.text:0000000000405aac\n.text:0000000000405ab1\n.text:0000000000405ab6\n.text:0000000000405abb\n.text:0000000000405abe\n.text:0000000000405ac1\n.text:0000000000405ac5\n.text:0000000000405ac9\n.text:0000000000405ace\n.text:0000000000405ad3\n.text:0000000000405ad6\n.text:0000000000405ada\n.text:0000000000405ade\n.text:0000000000405ae2\n.text:0000000000405ae6\n.text:0000000000405aea\n.text:0000000000405aee\n.text:0000000000405af3\n.text:0000000000405af7\n.text:0000000000405af8\n.text:0000000000405afa\n.text:0000000000405afc\n.text:0000000000405afe\n.text:0000000000405aff\n'
p13
tp14
sS'mktime_internal'
p15
(S'\n__stdcall mktime_internal(tm * tp, anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * offset)\n'
p16
V\u000atime_t mktime_internal(tm *tp,tm *(*convert)(time_t *,tm *),time_t *offset)\u000a\u000a{\u000a  uint uVar1;\u000a  tm *(*convert_00)(time_t *,tm *);\u000a  int iVar2;\u000a  int iVar3;\u000a  time_t tVar4;\u000a  tm *ptVar5;\u000a  uint uVar6;\u000a  time_t tVar7;\u000a  long a;\u000a  int iVar8;\u000a  long lVar9;\u000a  bool bVar10;\u000a  bool bVar11;\u000a  int isdst;\u000a  time_t local_108;\u000a  uint local_100;\u000a  int local_fc;\u000a  uint local_f8;\u000a  int local_f4;\u000a  time_t local_f0;\u000a  time_t local_e8;\u000a  long *local_e0;\u000a  long local_d8;\u000a  long local_d0;\u000a  long local_c8;\u000a  tm *local_c0;\u000a  long local_b8;\u000a  long local_b0;\u000a  tm *(*local_a8)(time_t *,tm *);\u000a  int local_a0;\u000a  int iStack156;\u000a  int iStack152;\u000a  int iStack148;\u000a  int local_90;\u000a  int iStack140;\u000a  int iStack136;\u000a  int iStack132;\u000a  int local_80;\u000a  undefined4 uStack124;\u000a  undefined4 uStack120;\u000a  undefined4 uStack116;\u000a  char *local_70;\u000a  tm local_68;\u000a  \u000a  iVar8 = tp->tm_sec;\u000a  local_b0 = (long)iVar8;\u000a  local_100 = tp->tm_min;\u000a  local_f8 = tp->tm_hour;\u000a  iVar3 = tp->tm_mon;\u000a  local_f4 = tp->tm_isdst;\u000a  iVar2 = iVar3 / 0xc + (iVar3 >> 0x1f) + ((uint)(iVar3 / 6 + (iVar3 >> 0x1f)) >> 0x1f);\u000a  uVar6 = iVar3 + iVar2 * -0xc;\u000a  local_d0 = (long)(int)(iVar2 - (uVar6 >> 0x1f)) + (long)tp->tm_year;\u000a  iVar3 = tp->tm_mday;\u000a  local_e0 = offset;\u000a  local_c0 = tp;\u000a  local_a8 = convert;\u000a  iVar2 = leapyear(local_d0);\u000a  uVar1 = local_f8;\u000a  bVar10 = false;\u000a  local_d8 = (long)iVar3 + -1 +\u000a             (ulong)__mon_yday[(long)iVar2 * 0xd + (long)(int)(((int)uVar6 >> 0x1f & 0xcU) + uVar6)]\u000a  ;\u000a  local_b8 = *local_e0;\u000a  iVar3 = 0;\u000a  if (-1 < local_b0) {\u000a    iVar3 = iVar8;\u000a  }\u000a  local_fc = 0x3b;\u000a  if (iVar3 < 0x3c) {\u000a    local_fc = iVar3;\u000a  }\u000a  local_108 = ydhms_diff(local_d0,local_d8,local_f8,local_100,local_fc,0x46);\u000a  convert_00 = local_a8;\u000a  local_f0 = local_108;\u000a  local_e8 = local_108;\u000a  ranged_convert(local_a8,&local_108,(tm *)&local_a0);\u000a  uVar6 = local_100;\u000a  tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)uVar1,(tm *)(ulong)local_100);\u000a  if (local_108 != tVar4) {\u000a    iVar8 = -6;\u000a    tVar7 = local_e8;\u000a    do {\u000a      a = local_f0;\u000a      if ((local_108 == tVar7) && (local_108 != local_f0)) {\u000a        if (local_80 < 0) goto LAB_00406e1b;\u000a        if (local_f4 < 0) {\u000a          if (bVar10 <= (local_80 != 0)) goto LAB_00406e1b;\u000a        }\u000a        else {\u000a          if ((local_f4 != 0) != (local_80 != 0)) goto LAB_00406e1b;\u000a        }\u000a      }\u000a      iVar8 = iVar8 + 1;\u000a      if (iVar8 == 0) {\u000a        return -1;\u000a      }\u000a      local_f0 = local_108;\u000a      bVar10 = local_80 != 0;\u000a      local_108 = tVar4;\u000a      ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a      tVar4 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,(tm *)(ulong)uVar6);\u000a      tVar7 = a;\u000a    } while (local_108 != tVar4);\u000a  }\u000a  iVar8 = isdst_differ();\u000a  if (iVar8 != 0) {\u000a    a = 0x92c70;\u000a    do {\u000a      lVar9 = -1;\u000a      do {\u000a        iVar8 = time_t_int_add_ok(local_108);\u000a        if (iVar8 != 0) {\u000a          local_c8 = lVar9 * a + local_108;\u000a          ranged_convert(convert_00,&local_c8,&local_68);\u000a          iVar8 = isdst_differ();\u000a          if (iVar8 == 0) {\u000a            local_108 = guess_time_tm(local_d0,local_d8,(time_t *)(ulong)local_f8,\u000a                                      (tm *)(ulong)local_100);\u000a            ranged_convert(convert_00,&local_108,(tm *)&local_a0);\u000a            goto LAB_00406e1b;\u000a          }\u000a        }\u000a        bVar10 = lVar9 < 0;\u000a        lVar9 = lVar9 + 2;\u000a      } while (bVar10);\u000a      a = a + 0x92c70;\u000a    } while (a < 0x1005fe28);\u000a  }\u000aLAB_00406e1b:\u000a  a = local_b0;\u000a  iVar8 = local_fc;\u000a  *local_e0 = (local_b8 - local_e8) + local_108;\u000a  if ((int)local_b0 != local_a0) {\u000a    bVar10 = local_fc == 0;\u000a    bVar11 = local_a0 == 0x3c;\u000a    iVar3 = time_t_int_add_ok(local_108);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    a = a + local_108;\u000a    iVar3 = time_t_int_add_ok(a);\u000a    if (iVar3 == 0) {\u000a      return -1;\u000a    }\u000a    local_f0 = a + (long)(int)((uint)(bVar10 && bVar11) - iVar8);\u000a    ptVar5 = (*convert_00)(&local_f0,(tm *)&local_a0);\u000a    if (ptVar5 == (tm *)0x0) {\u000a      return -1;\u000a    }\u000a    local_108 = local_f0;\u000a  }\u000a  local_c0->tm_zone = local_70;\u000a  local_c0->tm_isdst = local_80;\u000a  *(undefined4 *)&local_c0->field_0x24 = uStack124;\u000a  *(undefined4 *)&local_c0->tm_gmtoff = uStack120;\u000a  *(undefined4 *)((long)&local_c0->tm_gmtoff + 4) = uStack116;\u000a  local_c0->tm_mon = local_90;\u000a  local_c0->tm_year = iStack140;\u000a  local_c0->tm_wday = iStack136;\u000a  local_c0->tm_yday = iStack132;\u000a  local_c0->tm_sec = local_a0;\u000a  local_c0->tm_min = iStack156;\u000a  local_c0->tm_hour = iStack152;\u000a  local_c0->tm_mday = iStack148;\u000a  return local_108;\u000a}\u000a\u000a
p17
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV qword ptr [RSP + 0x28],RDX\nMOV qword ptr [RSP + 0x60],RSI\nMOVSXD R15,dword ptr [RDI]\nMOV EAX,dword ptr [RDI + 0x4]\nMOV dword ptr [RSP + 0x8],EAX\nMOV EAX,dword ptr [RDI + 0x8]\nMOV dword ptr [RSP + 0x10],EAX\nMOVSXD RBX,dword ptr [RDI + 0x10]\nMOV EAX,dword ptr [RDI + 0x20]\nMOV dword ptr [RSP + 0x14],EAX\nIMUL RAX,RBX,0x2aaaaaab\nMOV RCX,RAX\nSHR RCX,0x3f\nSAR RAX,0x21\nADD EAX,ECX\nLEA ECX,[RAX*0x4]\nLEA ECX,[RCX + RCX*0x2]\nSUB EBX,ECX\nMOV ECX,EBX\nSHR ECX,0x1f\nSUB EAX,ECX\nMOVSXD RCX,dword ptr [RDI + 0x14]\nMOVSXD R13,EAX\nADD R13,RCX\nMOV qword ptr [RSP + 0x48],RDI\nMOVSXD R14,dword ptr [RDI + 0xc]\nMOV RDI,R13\nCALL 0x00406f00\nCDQE\nMOV ECX,EBX\nSAR ECX,0x1f\nAND ECX,0xc\nADD ECX,EBX\nIMUL RAX,RAX,0x1a\nXOR EBP,EBP\nTEST R15,R15\nMOVSXD RCX,ECX\nMOVZX EAX,word ptr [0x408a40 + RAX + RCX*0x2]\nLEA R12,[R14 + RAX*0x1 + -0x1]\nMOV RAX,qword ptr [RSP + 0x28]\nMOV RDX,qword ptr [RAX]\nMOV EAX,0x0\nMOV qword ptr [RSP + 0x58],R15\nCMOVNS EAX,R15D\nCMP EAX,0x3c\nMOV EBX,0x3b\nCMOVL EBX,EAX\nMOV qword ptr [RSP + 0x50],RDX\nMOV EAX,EDX\nNEG EAX\nMOV R9D,0x46\nMOV RDI,R13\nMOV RSI,R12\nMOV R14D,dword ptr [RSP + 0x10]\nMOV EDX,R14D\nMOV ECX,dword ptr [RSP + 0x8]\nMOV R8D,EBX\nPUSH RAX\nPUSH 0x0\nPUSH 0x0\nPUSH 0x0\nCALL 0x00406f60\nADD RSP,0x20\nMOV qword ptr [RSP + 0x18],RAX\nMOV qword ptr [RSP + 0x20],RAX\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,qword ptr [RSP + 0x60]\nMOV R15,RDI\nCALL 0x00407100\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x40],R13\nMOV RDI,R13\nMOV qword ptr [RSP + 0x38],R12\nMOV RSI,R12\nMOV EDX,R14D\nMOV R14D,dword ptr [RSP + 0x10]\nMOV ECX,R14D\nMOV dword ptr [RSP + 0x14],EBX\nMOV R8D,EBX\nLEA R9,[RSP + 0x8]\nPUSH RAX\nCALL 0x00407070\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJZ 0x00406d4d\nMOV R13D,0xfffffffa\nMOV R12,RSP\nMOV RBX,qword ptr [RSP + 0x20]\nNOP word ptr CS:[RAX + RAX*0x1]\nCMP RCX,RBX\nJNZ 0x00406ce0\nCMP RCX,qword ptr [RSP + 0x18]\nJZ 0x00406ce0\nMOV ECX,dword ptr [0x88 + RSP]\nTEST ECX,ECX\nJS 0x00406e1b\nMOV EDX,dword ptr [RSP + 0x14]\nTEST EDX,EDX\nJS 0x00406cc6\nTEST ECX,ECX\nSETNZ CL\nTEST EDX,EDX\nSETNZ DL\nXOR DL,CL\nJZ 0x00406ce0\nJMP 0x00406e1b\nXOR EDX,EDX\nTEST ECX,ECX\nSETNZ DL\nCMP EBP,EDX\nJBE 0x00406e1b\nNOP dword ptr CS:[RAX + RAX*0x1]\nINC R13D\nJZ 0x00406edc\nMOV RBX,qword ptr [RSP + 0x18]\nMOV RCX,qword ptr [RSP]\nMOV qword ptr [RSP + 0x18],RCX\nMOV qword ptr [RSP],RAX\nXOR EBP,EBP\nCMP dword ptr [0x88 + RSP],0x0\nSETNZ BPL\nMOV RDI,R15\nMOV RSI,R12\nLEA RDX,[RSP + 0x68]\nCALL 0x00407100\nSUB RSP,0x8\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,R14D\nMOV R8D,dword ptr [RSP + 0x14]\nMOV R9,R12\nPUSH RAX\nCALL 0x00407070\nADD RSP,0x10\nMOV RCX,qword ptr [RSP]\nCMP RCX,RAX\nJNZ 0x00406c90\nMOV ESI,dword ptr [0x88 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x004071d0\nTEST EAX,EAX\nJZ 0x00406e1b\nMOV EBX,0x92c70\nLEA R13,[RSP + 0x40]\nLEA RBP,[0xa0 + RSP]\nMOV R14,-0x1\nNOP\nMOV RDI,qword ptr [RSP]\nMOV R12,R14\nIMUL R12,RBX\nMOV ESI,R12D\nCALL 0x004071f0\nTEST EAX,EAX\nJZ 0x00406dc2\nADD R12,qword ptr [RSP]\nMOV qword ptr [RSP + 0x40],R12\nMOV RDI,R15\nMOV RSI,R13\nMOV RDX,RBP\nCALL 0x00407100\nMOV ESI,dword ptr [0xc0 + RSP]\nMOV EDI,dword ptr [RSP + 0x14]\nCALL 0x004071d0\nTEST EAX,EAX\nJZ 0x00406ddd\nTEST R14,R14\nLEA R14,[R14 + 0x2]\nJS 0x00406d80\nADD RBX,0x92c70\nCMP RBX,0x1005fe28\nJL 0x00406d77\nJMP 0x00406e1b\nSUB RSP,0x8\nLEA R9,[RSP + 0x48]\nMOV RDI,qword ptr [RSP + 0x40]\nMOV RSI,qword ptr [RSP + 0x38]\nMOV EDX,dword ptr [RSP + 0x18]\nMOV ECX,dword ptr [RSP + 0x10]\nMOV R8D,dword ptr [RSP + 0x14]\nPUSH RBP\nCALL 0x00407070\nADD RSP,0x10\nMOV qword ptr [RSP],RAX\nMOV RSI,RSP\nLEA RDX,[RSP + 0x68]\nMOV RDI,R15\nCALL 0x00407100\nMOV RDI,qword ptr [RSP]\nMOV RCX,qword ptr [RSP + 0x50]\nSUB RCX,qword ptr [RSP + 0x20]\nADD RCX,RDI\nMOV RAX,qword ptr [RSP + 0x28]\nMOV qword ptr [RAX],RCX\nMOV EAX,dword ptr [RSP + 0x68]\nMOV RBX,qword ptr [RSP + 0x58]\nCMP EBX,EAX\nJZ 0x00406ea8\nMOV R13D,dword ptr [RSP + 0xc]\nTEST R13D,R13D\nSETZ R12B\nCMP EAX,0x3c\nSETZ BPL\nMOV ESI,EBX\nCALL 0x004071f0\nMOV R14,-0x1\nTEST EAX,EAX\nJZ 0x00406ee3\nAND R12B,BPL\nMOVZX EBP,R12B\nSUB EBP,R13D\nADD RBX,qword ptr [RSP]\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x004071f0\nTEST EAX,EAX\nJZ 0x00406ee3\nMOVSXD RAX,EBP\nADD RBX,RAX\nMOV qword ptr [RSP + 0x18],RBX\nLEA RDI,[RSP + 0x18]\nLEA RSI,[RSP + 0x68]\nCALL R15\nTEST RAX,RAX\nJZ 0x00406ee3\nMOV RAX,qword ptr [RSP + 0x18]\nMOV qword ptr [RSP],RAX\nMOV RAX,qword ptr [0x98 + RSP]\nMOV RCX,qword ptr [RSP + 0x48]\nMOV qword ptr [RCX + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [RSP + 0x68]\nMOVUPS XMM1,xmmword ptr [RSP + 0x78]\nMOVUPS XMM2,xmmword ptr [0x88 + RSP]\nMOVUPS xmmword ptr [RCX + 0x20],XMM2\nMOVUPS xmmword ptr [RCX + 0x10],XMM1\nMOVUPS xmmword ptr [RCX],XMM0\nMOV R14,qword ptr [RSP]\nJMP 0x00406ee3\nMOV R14,-0x1\nMOV RAX,R14\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p18
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n48 89 54 24 28\n48 89 74 24 60\n4c 63 3f\n8b 47 04\n89 44 24 08\n8b 47 08\n89 44 24 10\n48 63 5f 10\n8b 47 20\n89 44 24 14\n48 69 c3 ab aa aa 2a\n48 89 c1\n48 c1 e9 3f\n48 c1 f8 21\n01 c8\n8d 0c 85 00 00 00 00\n8d 0c 49\n29 cb\n89 d9\nc1 e9 1f\n29 c8\n48 63 4f 14\n4c 63 e8\n49 01 cd\n48 89 7c 24 48\n4c 63 77 0c\n4c 89 ef\ne8 67 03 00 00\n48 98\n89 d9\nc1 f9 1f\n83 e1 0c\n01 d9\n48 6b c0 1a\n31 ed\n4d 85 ff\n48 63 c9\n0f b7 84 48 40 8a 40 00\n4d 8d 64 06 ff\n48 8b 44 24 28\n48 8b 10\nb8 00 00 00 00\n4c 89 7c 24 58\n41 0f 49 c7\n83 f8 3c\nbb 3b 00 00 00\n0f 4c d8\n48 89 54 24 50\n89 d0\nf7 d8\n41 b9 46 00 00 00\n4c 89 ef\n4c 89 e6\n44 8b 74 24 10\n44 89 f2\n8b 4c 24 08\n41 89 d8\n50\n6a 00\n6a 00\n6a 00\ne8 51 03 00 00\n48 83 c4 20\n48 89 44 24 18\n48 89 44 24 20\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n48 8b 7c 24 60\n49 89 ff\ne8 ca 04 00 00\n48 83 ec 08\n4c 89 6c 24 40\n4c 89 ef\n4c 89 64 24 38\n4c 89 e6\n44 89 f2\n44 8b 74 24 10\n44 89 f1\n89 5c 24 14\n41 89 d8\n4c 8d 4c 24 08\n50\ne8 09 04 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 84 d5 00 00 00\n41 bd fa ff ff ff\n49 89 e4\n48 8b 5c 24 20\n66 2e 0f 1f 84 00 00 00 00 00\n48 39 d9\n75 4b\n48 3b 4c 24 18\n74 44\n8b 8c 24 88 00 00 00\n85 c9\n0f 88 70 01 00 00\n8b 54 24 14\n85 d2\n78 13\n85 c9\n0f 95 c1\n85 d2\n0f 95 c2\n30 ca\n74 1f\ne9 55 01 00 00\n31 d2\n85 c9\n0f 95 c2\n39 d5\n0f 86 46 01 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n41 ff c5\n0f 84 f3 01 00 00\n48 8b 5c 24 18\n48 8b 0c 24\n48 89 4c 24 18\n48 89 04 24\n31 ed\n83 bc 24 88 00 00 00 00\n40 0f 95 c5\n4c 89 ff\n4c 89 e6\n48 8d 54 24 68\ne8 e7 03 00 00\n48 83 ec 08\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n44 89 f1\n44 8b 44 24 14\n4d 89 e1\n50\ne8 34 03 00 00\n48 83 c4 10\n48 8b 0c 24\n48 39 c1\n0f 85 43 ff ff ff\n8b b4 24 88 00 00 00\n8b 7c 24 14\ne8 73 04 00 00\n85 c0\n0f 84 b6 00 00 00\nbb 70 2c 09 00\n4c 8d 6c 24 40\n48 8d ac 24 a0 00 00 00\n49 c7 c6 ff ff ff ff\n66 90\n48 8b 3c 24\n4d 89 f4\n4c 0f af e3\n44 89 e6\ne8 5d 04 00 00\n85 c0\n74 2b\n4c 03 24 24\n4c 89 64 24 40\n4c 89 ff\n4c 89 ee\n48 89 ea\ne8 52 03 00 00\n8b b4 24 c0 00 00 00\n8b 7c 24 14\ne8 12 04 00 00\n85 c0\n74 1b\n4d 85 f6\n4d 8d 76 02\n78 b5\n48 81 c3 70 2c 09 00\n48 81 fb 28 fe 05 10\n7c 9c\neb 3e\n48 83 ec 08\n4c 8d 4c 24 48\n48 8b 7c 24 40\n48 8b 74 24 38\n8b 54 24 18\n8b 4c 24 10\n44 8b 44 24 14\n55\ne8 6d 02 00 00\n48 83 c4 10\n48 89 04 24\n48 89 e6\n48 8d 54 24 68\n4c 89 ff\ne8 e5 02 00 00\n48 8b 3c 24\n48 8b 4c 24 50\n48 2b 4c 24 20\n48 01 f9\n48 8b 44 24 28\n48 89 08\n8b 44 24 68\n48 8b 5c 24 58\n39 c3\n74 67\n44 8b 6c 24 0c\n45 85 ed\n41 0f 94 c4\n83 f8 3c\n40 0f 94 c5\n89 de\ne8 95 03 00 00\n49 c7 c6 ff ff ff ff\n85 c0\n74 7d\n41 20 ec\n41 0f b6 ec\n44 29 ed\n48 03 1c 24\n48 89 df\n89 ee\ne8 72 03 00 00\n85 c0\n74 61\n48 63 c5\n48 01 c3\n48 89 5c 24 18\n48 8d 7c 24 18\n48 8d 74 24 68\n41 ff d7\n48 85 c0\n74 44\n48 8b 44 24 18\n48 89 04 24\n48 8b 84 24 98 00 00 00\n48 8b 4c 24 48\n48 89 41 30\n0f 10 44 24 68\n0f 10 4c 24 78\n0f 10 94 24 88 00 00 00\n0f 11 51 20\n0f 11 49 10\n0f 11 01\n4c 8b 34 24\neb 07\n49 c7 c6 ff ff ff ff\n4c 89 f0\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p19
S'.text:0000000000406b20\n.text:0000000000406b21\n.text:0000000000406b23\n.text:0000000000406b25\n.text:0000000000406b27\n.text:0000000000406b29\n.text:0000000000406b2a\n.text:0000000000406b31\n.text:0000000000406b36\n.text:0000000000406b3b\n.text:0000000000406b3e\n.text:0000000000406b41\n.text:0000000000406b45\n.text:0000000000406b48\n.text:0000000000406b4c\n.text:0000000000406b50\n.text:0000000000406b53\n.text:0000000000406b57\n.text:0000000000406b5e\n.text:0000000000406b61\n.text:0000000000406b65\n.text:0000000000406b69\n.text:0000000000406b6b\n.text:0000000000406b72\n.text:0000000000406b75\n.text:0000000000406b77\n.text:0000000000406b79\n.text:0000000000406b7c\n.text:0000000000406b7e\n.text:0000000000406b82\n.text:0000000000406b85\n.text:0000000000406b88\n.text:0000000000406b8d\n.text:0000000000406b91\n.text:0000000000406b94\n.text:0000000000406b99\n.text:0000000000406b9b\n.text:0000000000406b9d\n.text:0000000000406ba0\n.text:0000000000406ba3\n.text:0000000000406ba5\n.text:0000000000406ba9\n.text:0000000000406bab\n.text:0000000000406bae\n.text:0000000000406bb1\n.text:0000000000406bb9\n.text:0000000000406bbe\n.text:0000000000406bc3\n.text:0000000000406bc6\n.text:0000000000406bcb\n.text:0000000000406bd0\n.text:0000000000406bd4\n.text:0000000000406bd7\n.text:0000000000406bdc\n.text:0000000000406bdf\n.text:0000000000406be4\n.text:0000000000406be6\n.text:0000000000406be8\n.text:0000000000406bee\n.text:0000000000406bf1\n.text:0000000000406bf4\n.text:0000000000406bf9\n.text:0000000000406bfc\n.text:0000000000406c00\n.text:0000000000406c03\n.text:0000000000406c04\n.text:0000000000406c06\n.text:0000000000406c08\n.text:0000000000406c0a\n.text:0000000000406c0f\n.text:0000000000406c13\n.text:0000000000406c18\n.text:0000000000406c1d\n.text:0000000000406c21\n.text:0000000000406c24\n.text:0000000000406c29\n.text:0000000000406c2e\n.text:0000000000406c31\n.text:0000000000406c36\n.text:0000000000406c3a\n.text:0000000000406c3f\n.text:0000000000406c42\n.text:0000000000406c47\n.text:0000000000406c4a\n.text:0000000000406c4d\n.text:0000000000406c52\n.text:0000000000406c55\n.text:0000000000406c59\n.text:0000000000406c5c\n.text:0000000000406c61\n.text:0000000000406c62\n.text:0000000000406c67\n.text:0000000000406c6b\n.text:0000000000406c6f\n.text:0000000000406c72\n.text:0000000000406c78\n.text:0000000000406c7e\n.text:0000000000406c81\n.text:0000000000406c86\n.text:0000000000406c90\n.text:0000000000406c93\n.text:0000000000406c95\n.text:0000000000406c9a\n.text:0000000000406c9c\n.text:0000000000406ca3\n.text:0000000000406ca5\n.text:0000000000406cab\n.text:0000000000406caf\n.text:0000000000406cb1\n.text:0000000000406cb3\n.text:0000000000406cb5\n.text:0000000000406cb8\n.text:0000000000406cba\n.text:0000000000406cbd\n.text:0000000000406cbf\n.text:0000000000406cc1\n.text:0000000000406cc6\n.text:0000000000406cc8\n.text:0000000000406cca\n.text:0000000000406ccd\n.text:0000000000406ccf\n.text:0000000000406cd5\n.text:0000000000406ce0\n.text:0000000000406ce3\n.text:0000000000406ce9\n.text:0000000000406cee\n.text:0000000000406cf2\n.text:0000000000406cf7\n.text:0000000000406cfb\n.text:0000000000406cfd\n.text:0000000000406d05\n.text:0000000000406d09\n.text:0000000000406d0c\n.text:0000000000406d0f\n.text:0000000000406d14\n.text:0000000000406d19\n.text:0000000000406d1d\n.text:0000000000406d22\n.text:0000000000406d27\n.text:0000000000406d2b\n.text:0000000000406d2e\n.text:0000000000406d33\n.text:0000000000406d36\n.text:0000000000406d37\n.text:0000000000406d3c\n.text:0000000000406d40\n.text:0000000000406d44\n.text:0000000000406d47\n.text:0000000000406d4d\n.text:0000000000406d54\n.text:0000000000406d58\n.text:0000000000406d5d\n.text:0000000000406d5f\n.text:0000000000406d65\n.text:0000000000406d6a\n.text:0000000000406d6f\n.text:0000000000406d77\n.text:0000000000406d7e\n.text:0000000000406d80\n.text:0000000000406d84\n.text:0000000000406d87\n.text:0000000000406d8b\n.text:0000000000406d8e\n.text:0000000000406d93\n.text:0000000000406d95\n.text:0000000000406d97\n.text:0000000000406d9b\n.text:0000000000406da0\n.text:0000000000406da3\n.text:0000000000406da6\n.text:0000000000406da9\n.text:0000000000406dae\n.text:0000000000406db5\n.text:0000000000406db9\n.text:0000000000406dbe\n.text:0000000000406dc0\n.text:0000000000406dc2\n.text:0000000000406dc5\n.text:0000000000406dc9\n.text:0000000000406dcb\n.text:0000000000406dd2\n.text:0000000000406dd9\n.text:0000000000406ddb\n.text:0000000000406ddd\n.text:0000000000406de1\n.text:0000000000406de6\n.text:0000000000406deb\n.text:0000000000406df0\n.text:0000000000406df4\n.text:0000000000406df8\n.text:0000000000406dfd\n.text:0000000000406dfe\n.text:0000000000406e03\n.text:0000000000406e07\n.text:0000000000406e0b\n.text:0000000000406e0e\n.text:0000000000406e13\n.text:0000000000406e16\n.text:0000000000406e1b\n.text:0000000000406e1f\n.text:0000000000406e24\n.text:0000000000406e29\n.text:0000000000406e2c\n.text:0000000000406e31\n.text:0000000000406e34\n.text:0000000000406e38\n.text:0000000000406e3d\n.text:0000000000406e3f\n.text:0000000000406e41\n.text:0000000000406e46\n.text:0000000000406e49\n.text:0000000000406e4d\n.text:0000000000406e50\n.text:0000000000406e54\n.text:0000000000406e56\n.text:0000000000406e5b\n.text:0000000000406e62\n.text:0000000000406e64\n.text:0000000000406e66\n.text:0000000000406e69\n.text:0000000000406e6d\n.text:0000000000406e70\n.text:0000000000406e74\n.text:0000000000406e77\n.text:0000000000406e79\n.text:0000000000406e7e\n.text:0000000000406e80\n.text:0000000000406e82\n.text:0000000000406e85\n.text:0000000000406e88\n.text:0000000000406e8d\n.text:0000000000406e92\n.text:0000000000406e97\n.text:0000000000406e9a\n.text:0000000000406e9d\n.text:0000000000406e9f\n.text:0000000000406ea4\n.text:0000000000406ea8\n.text:0000000000406eb0\n.text:0000000000406eb5\n.text:0000000000406eb9\n.text:0000000000406ebe\n.text:0000000000406ec3\n.text:0000000000406ecb\n.text:0000000000406ecf\n.text:0000000000406ed3\n.text:0000000000406ed6\n.text:0000000000406eda\n.text:0000000000406edc\n.text:0000000000406ee3\n.text:0000000000406ee6\n.text:0000000000406eed\n.text:0000000000406eee\n.text:0000000000406ef0\n.text:0000000000406ef2\n.text:0000000000406ef4\n.text:0000000000406ef6\n.text:0000000000406ef7\n'
p20
tp21
sS'rpl_fclose'
p22
(S'\n__stdcall rpl_fclose(FILE * fp)\n'
p23
V\u000aint rpl_fclose(FILE *fp)\u000a\u000a{\u000a  int __fd;\u000a  int iVar1;\u000a  __off_t _Var2;\u000a  int *piVar3;\u000a  \u000a  __fd = fileno((FILE *)fp);\u000a  if (-1 < __fd) {\u000a    __fd = __freading(fp);\u000a    if (__fd != 0) {\u000a      __fd = fileno((FILE *)fp);\u000a      _Var2 = lseek(__fd,0,1);\u000a      if (_Var2 == -1) goto LAB_00405f49;\u000a    }\u000a    __fd = rpl_fflush(fp);\u000a    if (__fd != 0) {\u000a      piVar3 = __errno_location();\u000a      __fd = *piVar3;\u000a      iVar1 = fclose((FILE *)fp);\u000a      if (__fd != 0) {\u000a        piVar3 = __errno_location();\u000a        *piVar3 = __fd;\u000a        iVar1 = -1;\u000a      }\u000a      return iVar1;\u000a    }\u000a  }\u000aLAB_00405f49:\u000a  __fd = fclose((FILE *)fp);\u000a  return __fd;\u000a}\u000a\u000a
p24
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCALL 0x00401980\nTEST EAX,EAX\nJS 0x00405f49\nMOV RDI,RBX\nCALL 0x004019e0\nTEST EAX,EAX\nJZ 0x00405f17\nMOV RDI,RBX\nCALL 0x00401980\nXOR ESI,ESI\nMOV EDX,0x1\nMOV EDI,EAX\nCALL 0x00401880\nCMP RAX,-0x1\nJZ 0x00405f49\nMOV RDI,RBX\nCALL 0x00405f60\nTEST EAX,EAX\nJZ 0x00405f49\nCALL 0x00401710\nMOV EBP,dword ptr [RAX]\nMOV RDI,RBX\nCALL 0x004017d0\nTEST EBP,EBP\nJZ 0x00405f42\nCALL 0x00401710\nMOV dword ptr [RAX],EBP\nMOV EAX,0xffffffff\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x004017d0\n'
p25
S'55\n53\n50\n48 89 fb\ne8 95 ba ff ff\n85 c0\n78 5a\n48 89 df\ne8 e9 ba ff ff\n85 c0\n74 1c\n48 89 df\ne8 7d ba ff ff\n31 f6\nba 01 00 00 00\n89 c7\ne8 6f b9 ff ff\n48 83 f8 ff\n74 32\n48 89 df\ne8 41 00 00 00\n85 c0\n74 26\ne8 e8 b7 ff ff\n8b 28\n48 89 df\ne8 9e b8 ff ff\n85 ed\n74 0c\ne8 d5 b7 ff ff\n89 28\nb8 ff ff ff ff\n48 83 c4 08\n5b\n5d\nc3\n48 89 df\n48 83 c4 08\n5b\n5d\ne9 79 b8 ff ff\n'
p26
S'.text:0000000000405ee0\n.text:0000000000405ee1\n.text:0000000000405ee2\n.text:0000000000405ee3\n.text:0000000000405ee6\n.text:0000000000405eeb\n.text:0000000000405eed\n.text:0000000000405eef\n.text:0000000000405ef2\n.text:0000000000405ef7\n.text:0000000000405ef9\n.text:0000000000405efb\n.text:0000000000405efe\n.text:0000000000405f03\n.text:0000000000405f05\n.text:0000000000405f0a\n.text:0000000000405f0c\n.text:0000000000405f11\n.text:0000000000405f15\n.text:0000000000405f17\n.text:0000000000405f1a\n.text:0000000000405f1f\n.text:0000000000405f21\n.text:0000000000405f23\n.text:0000000000405f28\n.text:0000000000405f2a\n.text:0000000000405f2d\n.text:0000000000405f32\n.text:0000000000405f34\n.text:0000000000405f36\n.text:0000000000405f3b\n.text:0000000000405f3d\n.text:0000000000405f42\n.text:0000000000405f46\n.text:0000000000405f47\n.text:0000000000405f48\n.text:0000000000405f49\n.text:0000000000405f4c\n.text:0000000000405f50\n.text:0000000000405f51\n.text:0000000000405f52\n'
p27
tp28
sS'strncmp'
p29
(S'\n__stdcall strncmp(char * __s1, char * __s2, size_t __n)\n'
p30
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strncmp(char *__s1,char *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strncmp_0060b058)();\u000a  return iVar1;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x0060b058]\n'
p32
S'ff 25 22 99 20 00\n'
p33
S'.plt:0000000000401730\n'
p34
tp35
sS'xnrealloc'
p36
(S'\n__stdcall xnrealloc(void * p, size_t n, size_t s)\n'
p37
V\u000avoid * xnrealloc(void *p,size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xrealloc(p,s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p38
S'MOV RCX,RDX\nMOV RAX,RSI\nMUL RCX\nJO 0x00405d04\nIMUL RCX,RSI\nMOV RSI,RCX\nJMP 0x00405d10\nPUSH RAX\nCALL 0x00405e60\n'
p39
S'48 89 d1\n48 89 f0\n48 f7 e1\n70 09\n48 0f af ce\n48 89 ce\neb 0c\n50\ne8 56 01 00 00\n'
p40
S'.text:0000000000405cf0\n.text:0000000000405cf3\n.text:0000000000405cf6\n.text:0000000000405cf9\n.text:0000000000405cfb\n.text:0000000000405cff\n.text:0000000000405d02\n.text:0000000000405d04\n.text:0000000000405d05\n'
p41
tp42
sS'quote'
p43
(S'\n__stdcall quote(char * arg)\n'
p44
V\u000achar * quote(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p45
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00405390\n'
p46
S'48 89 f8\n31 ff\n48 89 c6\neb e6\n'
p47
S'.text:00000000004053a0\n.text:00000000004053a3\n.text:00000000004053a5\n.text:00000000004053a8\n'
p48
tp49
sS'emit_bug_reporting_address'
p50
(S'\n__stdcall emit_bug_reporting_address()\n'
p51
V\u000avoid emit_bug_reporting_address(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  \u000a  uVar1 = dcgettext(0,"\u005cnReport bugs to: %s\u005cn",5);\u000a  __printf_chk(1,uVar1,"bug-coreutils@gnu.org",uVar1);\u000a  uVar1 = dcgettext(0,"%s home page: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar1,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s = (char *)dcgettext(0,"General help using GNU software: <http://www.gnu.org/gethelp/>\u005cn",5);\u000a  fputs_unlocked(__s,stdout);\u000a  return;\u000a}\u000a\u000a
p52
S'PUSH RAX\nXOR EDI,EDI\nMOV ESI,0x40851d\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x408532\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x408548\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40753d\nMOV ECX,0x407626\nXOR EAX,EAX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x40855c\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,qword ptr [0x0060b2e8]\nMOV RDI,RAX\nPOP RAX\nJMP 0x004018e0\n'
p53
S'50\n31 ff\nbe 1d 85 40 00\nba 05 00 00 00\ne8 be bb ff ff\n48 89 c1\nbf 01 00 00 00\nba 32 85 40 00\n31 c0\n48 89 ce\ne8 c7 bd ff ff\n31 ff\nbe 48 85 40 00\nba 05 00 00 00\ne8 96 bb ff ff\n48 89 c6\nbf 01 00 00 00\nba 3d 75 40 00\nb9 26 76 40 00\n31 c0\ne8 9d bd ff ff\n31 ff\nbe 5c 85 40 00\nba 05 00 00 00\ne8 6c bb ff ff\n48 8b 35 4d 56 20 00\n48 89 c7\n58\ne9 3c bc ff ff\n'
p54
S'.text:0000000000405c30\n.text:0000000000405c31\n.text:0000000000405c33\n.text:0000000000405c38\n.text:0000000000405c3d\n.text:0000000000405c42\n.text:0000000000405c45\n.text:0000000000405c4a\n.text:0000000000405c4f\n.text:0000000000405c51\n.text:0000000000405c54\n.text:0000000000405c59\n.text:0000000000405c5b\n.text:0000000000405c60\n.text:0000000000405c65\n.text:0000000000405c6a\n.text:0000000000405c6d\n.text:0000000000405c72\n.text:0000000000405c77\n.text:0000000000405c7c\n.text:0000000000405c7e\n.text:0000000000405c83\n.text:0000000000405c85\n.text:0000000000405c8a\n.text:0000000000405c8f\n.text:0000000000405c94\n.text:0000000000405c9b\n.text:0000000000405c9e\n.text:0000000000405c9f\n'
p55
tp56
sS'clone_quoting_options'
p57
(S'\n__stdcall clone_quoting_options(quoting_options * o)\n'
p58
V\u000aquoting_options * clone_quoting_options(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  quoting_options *pqVar3;\u000a  \u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  if (o == (quoting_options *)0x0) {\u000a    o = &default_quoting_options;\u000a  }\u000a  pqVar3 = (quoting_options *)xmemdup(o,0x38);\u000a  *piVar2 = iVar1;\u000a  return pqVar3;\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401710\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nTEST RBX,RBX\nMOV EAX,0x60b350\nCMOVZ RBX,RAX\nMOV ESI,0x38\nMOV RDI,RBX\nCALL 0x00405e10\nMOV dword ptr [R14],EBP\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p60
S'55\n41 56\n53\n48 89 fb\ne8 a4 d7 ff ff\n49 89 c6\n41 8b 2e\n48 85 db\nb8 50 b3 60 00\n48 0f 44 d8\nbe 38 00 00 00\n48 89 df\ne8 85 1e 00 00\n41 89 2e\n5b\n41 5e\n5d\nc3\n'
p61
S'.text:0000000000403f60\n.text:0000000000403f61\n.text:0000000000403f63\n.text:0000000000403f64\n.text:0000000000403f67\n.text:0000000000403f6c\n.text:0000000000403f6f\n.text:0000000000403f72\n.text:0000000000403f75\n.text:0000000000403f7a\n.text:0000000000403f7e\n.text:0000000000403f83\n.text:0000000000403f86\n.text:0000000000403f8b\n.text:0000000000403f8e\n.text:0000000000403f8f\n.text:0000000000403f91\n.text:0000000000403f92\n'
p62
tp63
sS'xmalloc'
p64
(S'\n__stdcall xmalloc(size_t n)\n'
p65
V\u000avoid * xmalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p66
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x004019a0\nTEST RBX,RBX\nJZ 0x00405ce3\nTEST RAX,RAX\nJZ 0x00405ce5\nPOP RBX\nRET\nCALL 0x00405e60\n'
p67
S'53\n48 89 fb\ne8 c7 bc ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 76 01 00 00\n'
p68
S'.text:0000000000405cd0\n.text:0000000000405cd1\n.text:0000000000405cd4\n.text:0000000000405cd9\n.text:0000000000405cdc\n.text:0000000000405cde\n.text:0000000000405ce1\n.text:0000000000405ce3\n.text:0000000000405ce4\n.text:0000000000405ce5\n'
p69
tp70
sS'leapyear'
p71
(S'\n__stdcall leapyear(long_int year)\n'
p72
V\u000aint leapyear(long_int year)\u000a\u000a{\u000a  bool bVar1;\u000a  \u000a  if ((year & 3U) != 0) {\u000a    return 0;\u000a  }\u000a  bVar1 = true;\u000a  if (year == (year / 100 + (year >> 0x3f) +\u000a              SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0)) * 100) {\u000a    bVar1 = (((uint)SUB168(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x46,0) & 0x3ffffff) +\u000a             SUB164(SEXT816(year) * ZEXT816(0xa3d70a3d70a3d70b) >> 0x7f,0) & 3) == 1;\u000a  }\u000a  return (int)(uint)bVar1;\u000a}\u000a\u000a
p73
S'TEST DIL,0x3\nJZ 0x00406f0c\nXOR EAX,EAX\nMOVZX EAX,AL\nRET\nMOV RCX,-0x5c28f5c28f5c28f5\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x6\nADD RDX,RAX\nIMUL RDX,RDX,0x64\nMOV AL,0x1\nCMP RDI,RDX\nJNZ 0x00406f57\nMOV RAX,RDI\nIMUL RCX\nADD RDX,RDI\nMOV RAX,RDX\nSHR RAX,0x3f\nSHR EDX,0x6\nADD EDX,EAX\nAND EDX,0x3\nCMP RDX,0x1\nSETZ AL\nMOVZX EAX,AL\nRET\n'
p74
S'40 f6 c7 03\n74 06\n31 c0\n0f b6 c0\nc3\n48 b9 0b d7 a3 70 3d 0a d7 a3\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 06\n48 01 c2\n48 6b d2 64\nb0 01\n48 39 d7\n75 1f\n48 89 f8\n48 f7 e9\n48 01 fa\n48 89 d0\n48 c1 e8 3f\nc1 ea 06\n01 c2\n83 e2 03\n48 83 fa 01\n0f 94 c0\n0f b6 c0\nc3\n'
p75
S'.text:0000000000406f00\n.text:0000000000406f04\n.text:0000000000406f06\n.text:0000000000406f08\n.text:0000000000406f0b\n.text:0000000000406f0c\n.text:0000000000406f16\n.text:0000000000406f19\n.text:0000000000406f1c\n.text:0000000000406f1f\n.text:0000000000406f22\n.text:0000000000406f26\n.text:0000000000406f2a\n.text:0000000000406f2d\n.text:0000000000406f31\n.text:0000000000406f33\n.text:0000000000406f36\n.text:0000000000406f38\n.text:0000000000406f3b\n.text:0000000000406f3e\n.text:0000000000406f41\n.text:0000000000406f44\n.text:0000000000406f48\n.text:0000000000406f4b\n.text:0000000000406f4d\n.text:0000000000406f50\n.text:0000000000406f54\n.text:0000000000406f57\n.text:0000000000406f5a\n'
p76
tp77
sS'quotearg_char_mem'
p78
(S'\n__stdcall quotearg_char_mem(char * arg, size_t argsize)\n'
p79
V\u000achar * quotearg_char_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_char_quoting((quoting_options *)&local_58);\u000a  pcVar1 = quotearg_n_options((char *)0x0,(size_t)arg,(quoting_options *)argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p80
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV EAX,EDX\nMOV R14,RSI\nMOV RBX,RDI\nMOV RCX,qword ptr [0x0060b380]\nMOV qword ptr [RSP + 0x30],RCX\nMOVUPS XMM0,xmmword ptr [0x0060b370]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060b360]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060b350]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV EDX,0x1\nMOV RDI,R15\nMOV ESI,EAX\nCALL 0x00403fc0\nXOR EDI,EDI\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00404eb0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p81
S'41 57\n41 56\n53\n48 83 ec 40\n89 d0\n49 89 f6\n48 89 fb\n48 8b 0d a8 61 20 00\n48 89 4c 24 30\n0f 10 05 8c 61 20 00\n0f 29 44 24 20\n0f 10 05 70 61 20 00\n0f 29 44 24 10\n0f 10 05 54 61 20 00\n0f 29 04 24\n49 89 e7\nba 01 00 00 00\n4c 89 ff\n89 c6\ne8 ae ed ff ff\n31 ff\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 8e fc ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p82
S'.text:00000000004051c0\n.text:00000000004051c2\n.text:00000000004051c4\n.text:00000000004051c5\n.text:00000000004051c9\n.text:00000000004051cb\n.text:00000000004051ce\n.text:00000000004051d1\n.text:00000000004051d8\n.text:00000000004051dd\n.text:00000000004051e4\n.text:00000000004051e9\n.text:00000000004051f0\n.text:00000000004051f5\n.text:00000000004051fc\n.text:0000000000405200\n.text:0000000000405203\n.text:0000000000405208\n.text:000000000040520b\n.text:000000000040520d\n.text:0000000000405212\n.text:0000000000405214\n.text:0000000000405217\n.text:000000000040521a\n.text:000000000040521d\n.text:0000000000405222\n.text:0000000000405226\n.text:0000000000405227\n.text:0000000000405229\n.text:000000000040522b\n'
p83
tp84
sS'frame_dummy'
p85
(S'\n__stdcall frame_dummy()\n'
p86
V\u000a/* WARNING: Removing unreachable block (ram,0x00401c2a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p87
S'MOV EDI,0x60ae18\nCMP qword ptr [RDI],0x0\nJNZ 0x00401c20\nJMP 0x00401bb0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401c1b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00401bb0\n'
p88
S'bf 18 ae 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p89
S'.text:0000000000401c10\n.text:0000000000401c15\n.text:0000000000401c19\n.text:0000000000401c1b\n.text:0000000000401c20\n.text:0000000000401c25\n.text:0000000000401c28\n.text:0000000000401c2a\n.text:0000000000401c2b\n.text:0000000000401c2e\n.text:0000000000401c30\n.text:0000000000401c31\n'
p90
tp91
sS'extend_abbrs'
p92
(S'\n__stdcall extend_abbrs(char * abbrs, char * abbr, size_t abbr_size)\n'
p93
V\u000avoid extend_abbrs(char *abbrs,char *abbr,size_t abbr_size)\u000a\u000a{\u000a  memcpy(abbrs,abbr,abbr_size);\u000a  abbrs[abbr_size] = 0;\u000a  return;\u000a}\u000a\u000a
p94
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV RBX,RDI\nCALL 0x00401930\nMOV byte ptr [RBX + R14*0x1],0x0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p95
S'41 56\n53\n50\n49 89 d6\n48 89 fb\ne8 31 b7 ff ff\n42 c6 04 33 00\n48 83 c4 08\n5b\n41 5e\nc3\n'
p96
S'.text:00000000004061f0\n.text:00000000004061f2\n.text:00000000004061f3\n.text:00000000004061f4\n.text:00000000004061f7\n.text:00000000004061fa\n.text:00000000004061ff\n.text:0000000000406204\n.text:0000000000406208\n.text:0000000000406209\n.text:000000000040620b\n'
p97
tp98
sS'quotearg_n_style_colon'
p99
(S'\n__stdcall quotearg_n_style_colon(char * arg)\n'
p100
V\u000achar * quotearg_n_style_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options options;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  set_char_quoting(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p101
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R14,RDX\nMOV EBP,EDI\nLEA RBX,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x004050e0\nMOV ESI,0x3a\nMOV EDX,0x1\nMOV RDI,RBX\nCALL 0x00403fc0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,R14\nMOV RCX,RBX\nCALL 0x00404eb0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p102
S'55\n41 56\n53\n48 83 ec 40\n49 89 d6\n89 fd\n48 8d 5c 24 08\n48 89 df\ne8 66 fe ff ff\nbe 3a 00 00 00\nba 01 00 00 00\n48 89 df\ne8 34 ed ff ff\n48 c7 c2 ff ff ff ff\n89 ef\n4c 89 f6\n48 89 d9\ne8 10 fc ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p103
S'.text:0000000000405260\n.text:0000000000405261\n.text:0000000000405263\n.text:0000000000405264\n.text:0000000000405268\n.text:000000000040526b\n.text:000000000040526d\n.text:0000000000405272\n.text:0000000000405275\n.text:000000000040527a\n.text:000000000040527f\n.text:0000000000405284\n.text:0000000000405287\n.text:000000000040528c\n.text:0000000000405293\n.text:0000000000405295\n.text:0000000000405298\n.text:000000000040529b\n.text:00000000004052a0\n.text:00000000004052a4\n.text:00000000004052a5\n.text:00000000004052a7\n.text:00000000004052a8\n'
p104
tp105
sS'read_utmp'
p106
(S'\n__stdcall read_utmp(char * file, size_t * n_entries, STRUCT_UTMP * * utmp_buf)\n'
p107
V\u000aint read_utmp(char *file,size_t *n_entries,STRUCT_UTMP **utmp_buf)\u000a\u000a{\u000a  _Bool _Var1;\u000a  utmpx *__src;\u000a  size_t sVar2;\u000a  STRUCT_UTMP *p;\u000a  size_t local_38;\u000a  \u000a  local_38 = 0;\u000a  utmpxname(file);\u000a  setutxent();\u000a  p = (STRUCT_UTMP *)0x0;\u000a  sVar2 = 0;\u000a  while( true ) {\u000a    __src = getutxent();\u000a    if (__src == (utmpx *)0x0) break;\u000a    _Var1 = desirable_utmp_entry((STRUCT_UTMP *)__src);\u000a    if (_Var1 != false) {\u000a      if (sVar2 == local_38) {\u000a        p = (STRUCT_UTMP *)x2nrealloc(p,&local_38,0x180);\u000a      }\u000a      memcpy(p + sVar2,__src,0x180);\u000a      sVar2 = sVar2 + 1;\u000a    }\u000a  }\u000a  endutxent();\u000a  *n_entries = sVar2;\u000a  *utmp_buf = p;\u000a  return 0;\u000a}\u000a\u000a
p108
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV EBP,ECX\nMOV R14,RDX\nMOV R15,RSI\nMOV qword ptr [RSP],0x0\nCALL 0x004016c0\nCALL 0x00401920\nXOR R13D,R13D\nXOR R12D,R12D\nJMP 0x004060d0\nLEA RDI,[R12 + R12*0x2]\nINC R12\nSHL RDI,0x7\nADD RDI,R13\nMOV EDX,0x180\nMOV RSI,RBX\nCALL 0x00401930\nNOP dword ptr [RAX + RAX*0x1]\nCALL 0x00401a50\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00406106\nMOV RDI,RBX\nMOV ESI,EBP\nCALL 0x00406130\nTEST AL,AL\nJZ 0x004060d0\nCMP R12,qword ptr [RSP]\nJNZ 0x004060ad\nMOV EDX,0x180\nMOV RDI,R13\nMOV RSI,RSP\nCALL 0x00405d40\nMOV R13,RAX\nJMP 0x004060ad\nCALL 0x004017b0\nMOV qword ptr [R15],R12\nMOV qword ptr [R14],R13\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p109
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n89 cd\n49 89 d6\n49 89 f7\n48 c7 04 24 00 00 00 00\ne8 20 b6 ff ff\ne8 7b b8 ff ff\n45 31 ed\n45 31 e4\neb 23\n4b 8d 3c 64\n49 ff c4\n48 c1 e7 07\n4c 01 ef\nba 80 01 00 00\n48 89 de\ne8 68 b8 ff ff\n0f 1f 84 00 00 00 00 00\ne8 7b b9 ff ff\n48 89 c3\n48 85 db\n74 29\n48 89 df\n89 ee\ne8 49 00 00 00\n84 c0\n74 e5\n4c 3b 24 24\n75 bc\nba 80 01 00 00\n4c 89 ef\n48 89 e6\ne8 3f fc ff ff\n49 89 c5\neb a7\ne8 a5 b6 ff ff\n4d 89 27\n4d 89 2e\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p110
S'.text:0000000000406080\n.text:0000000000406081\n.text:0000000000406083\n.text:0000000000406085\n.text:0000000000406087\n.text:0000000000406089\n.text:000000000040608a\n.text:000000000040608b\n.text:000000000040608d\n.text:0000000000406090\n.text:0000000000406093\n.text:000000000040609b\n.text:00000000004060a0\n.text:00000000004060a5\n.text:00000000004060a8\n.text:00000000004060ab\n.text:00000000004060ad\n.text:00000000004060b1\n.text:00000000004060b4\n.text:00000000004060b8\n.text:00000000004060bb\n.text:00000000004060c0\n.text:00000000004060c3\n.text:00000000004060c8\n.text:00000000004060d0\n.text:00000000004060d5\n.text:00000000004060d8\n.text:00000000004060db\n.text:00000000004060dd\n.text:00000000004060e0\n.text:00000000004060e2\n.text:00000000004060e7\n.text:00000000004060e9\n.text:00000000004060eb\n.text:00000000004060ef\n.text:00000000004060f1\n.text:00000000004060f6\n.text:00000000004060f9\n.text:00000000004060fc\n.text:0000000000406101\n.text:0000000000406104\n.text:0000000000406106\n.text:000000000040610b\n.text:000000000040610e\n.text:0000000000406111\n.text:0000000000406113\n.text:0000000000406117\n.text:0000000000406118\n.text:000000000040611a\n.text:000000000040611c\n.text:000000000040611e\n.text:0000000000406120\n.text:0000000000406121\n'
p111
tp112
sS'localtime_rz'
p113
(S'\n__stdcall localtime_rz(timezone_t tz, time_t * t, tm * tm)\n'
p114
V\u000atm * localtime_rz(timezone_t tz,time_t *t,tm *tm)\u000a\u000a{\u000a  _Bool _Var1;\u000a  tm *ptVar2;\u000a  timezone_t tz_00;\u000a  tm *ptVar3;\u000a  byte bVar4;\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    ptVar2 = (tm *)(*(code *)PTR_gmtime_r_0060b0f8)(t,tm);\u000a    return ptVar2;\u000a  }\u000a  tz_00 = set_tz(tz);\u000a  if (tz_00 == (timezone_t)0x0) {\u000a    tm = (tm *)0x0;\u000a  }\u000a  else {\u000a    ptVar3 = localtime_r(t,(tm *)tm);\u000a    if (ptVar3 == (tm *)0x0) {\u000a      bVar4 = 1;\u000a    }\u000a    else {\u000a      _Var1 = save_abbr(tz,tm);\u000a      bVar4 = _Var1 ^ 1;\u000a    }\u000a    _Var1 = revert_tz(tz_00);\u000a    if (_Var1 == false) {\u000a      tm = (tm *)0x0;\u000a    }\u000a    if (bVar4 != 0) {\u000a      tm = (tm *)0x0;\u000a    }\u000a  }\u000a  return tm;\u000a}\u000a\u000a
p115
S'PUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RDX\nMOV R12,RSI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00406288\nMOV RDI,RBX\nCALL 0x004062d0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040629e\nMOV RDI,R12\nMOV RSI,R15\nCALL 0x00401740\nTEST RAX,RAX\nJZ 0x004062a2\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00406350\nMOV EBX,EAX\nXOR BL,0x1\nJMP 0x004062a4\nMOV RDI,R12\nMOV RSI,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nJMP 0x00401870\nXOR EAX,EAX\nJMP 0x004062bd\nMOV BL,0x1\nMOV RDI,R14\nCALL 0x00406460\nXOR ECX,ECX\nTEST AL,AL\nCMOVZ R15,RCX\nTEST BL,BL\nCMOVNZ R15,RCX\nMOV RAX,R15\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nRET\n'
p116
S'41 57\n41 56\n41 54\n53\n50\n49 89 d7\n49 89 f4\n48 89 fb\n48 85 db\n74 32\n48 89 df\ne8 72 00 00 00\n49 89 c6\n4d 85 f6\n74 38\n4c 89 e7\n4c 89 fe\ne8 cf b4 ff ff\n48 85 c0\n74 2c\n48 89 df\n4c 89 fe\ne8 cf 00 00 00\n89 c3\n80 f3 01\neb 1c\n4c 89 e7\n4c 89 fe\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\ne9 d2 b5 ff ff\n31 c0\neb 1b\nb3 01\n4c 89 f7\ne8 b4 01 00 00\n31 c9\n84 c0\n4c 0f 44 f9\n84 db\n4c 0f 45 f9\n4c 89 f8\n48 83 c4 08\n5b\n41 5c\n41 5e\n41 5f\nc3\n'
p117
S'.text:0000000000406240\n.text:0000000000406242\n.text:0000000000406244\n.text:0000000000406246\n.text:0000000000406247\n.text:0000000000406248\n.text:000000000040624b\n.text:000000000040624e\n.text:0000000000406251\n.text:0000000000406254\n.text:0000000000406256\n.text:0000000000406259\n.text:000000000040625e\n.text:0000000000406261\n.text:0000000000406264\n.text:0000000000406266\n.text:0000000000406269\n.text:000000000040626c\n.text:0000000000406271\n.text:0000000000406274\n.text:0000000000406276\n.text:0000000000406279\n.text:000000000040627c\n.text:0000000000406281\n.text:0000000000406283\n.text:0000000000406286\n.text:0000000000406288\n.text:000000000040628b\n.text:000000000040628e\n.text:0000000000406292\n.text:0000000000406293\n.text:0000000000406295\n.text:0000000000406297\n.text:0000000000406299\n.text:000000000040629e\n.text:00000000004062a0\n.text:00000000004062a2\n.text:00000000004062a4\n.text:00000000004062a7\n.text:00000000004062ac\n.text:00000000004062ae\n.text:00000000004062b0\n.text:00000000004062b4\n.text:00000000004062b6\n.text:00000000004062ba\n.text:00000000004062bd\n.text:00000000004062c1\n.text:00000000004062c2\n.text:00000000004062c4\n.text:00000000004062c6\n.text:00000000004062c8\n'
p118
tp119
sS'quote_mem'
p120
(S'\n__stdcall quote_mem(char * arg, size_t argsize)\n'
p121
V\u000achar * quote_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quote_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p122
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00405370\n'
p123
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb e0\n'
p124
S'.text:0000000000405380\n.text:0000000000405383\n.text:0000000000405386\n.text:0000000000405388\n.text:000000000040538b\n.text:000000000040538e\n'
p125
tp126
sS'fileno'
p127
(S'\n__stdcall fileno(FILE * __stream)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fileno(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fileno_0060b180)();\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x0060b180]\n'
p130
S'ff 25 fa 97 20 00\n'
p131
S'.plt:0000000000401980\n'
p132
tp133
sS'mbrtowc'
p134
(S'\n__stdcall mbrtowc(wchar_t * __pwc, char * __s, size_t __n, mbstate_t * __p)\n'
p135
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_mbrtowc_0060b0e0)();\u000a  return sVar1;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x0060b0e0]\n'
p137
S'ff 25 9a 98 20 00\n'
p138
S'.plt:0000000000401840\n'
p139
tp140
sS'time_t_add_ok'
p141
(S'\n__stdcall time_t_add_ok(time_t a, time_t b)\n'
p142
V\u000aint time_t_add_ok(time_t a,time_t b)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = time_t_avg(a,b);\u000a  return (int)((uint)((ulong)(tVar1 + 0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p143
S'PUSH RAX\nCALL 0x00407250\nMOV RCX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nPOP RCX\nRET\n'
p144
S'50\ne8 1a 00 00 00\n48 b9 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\n59\nc3\n'
p145
S'.text:0000000000407230\n.text:0000000000407231\n.text:0000000000407236\n.text:0000000000407240\n.text:0000000000407243\n.text:0000000000407247\n.text:000000000040724a\n.text:000000000040724b\n'
p146
tp147
sS'setlocale'
p148
(S'\n__stdcall setlocale(int __category, char * __locale)\n'
p149
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * setlocale(int __category,char *__locale)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_setlocale_0060b1c8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p150
S'JMP qword ptr [0x0060b1c8]\n'
p151
S'ff 25 b2 97 20 00\n'
p152
S'.plt:0000000000401a10\n'
p153
tp154
sS'c_toupper'
p155
(S'\n__stdcall c_toupper()\n'
p156
V\u000aint c_toupper(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + -0x20;\u000a  if (0x19 < in_EDI - 0x61U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p157
S'LEA ECX,[RDI + -0x61]\nLEA EAX,[RDI + -0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p158
S'8d 4f 9f\n8d 47 e0\n83 f9 1a\n0f 43 c7\nc3\n'
p159
S'.text:0000000000406770\n.text:0000000000406773\n.text:0000000000406776\n.text:0000000000406779\n.text:000000000040677c\n'
p160
tp161
sS'mbsinit'
p162
(S'\n__stdcall mbsinit(mbstate_t * __ps)\n'
p163
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint mbsinit(mbstate_t *__ps)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_mbsinit_0060b240)();\u000a  return iVar1;\u000a}\u000a\u000a
p164
S'JMP qword ptr [0x0060b240]\n'
p165
S'ff 25 3a 97 20 00\n'
p166
S'.plt:0000000000401b00\n'
p167
tp168
sS'dcgettext'
p169
(S'\n__stdcall dcgettext()\n'
p170
V\u000avoid dcgettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcgettext_0060b0c0)();\u000a  return;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x0060b0c0]\n'
p172
S'ff 25 ba 98 20 00\n'
p173
S'.plt:0000000000401800\n'
p174
tp175
sS'__ctype_toupper_loc'
p176
(S'\n__stdcall __ctype_toupper_loc()\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_toupper_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_0060b018)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x0060b018]\n'
p179
S'ff 25 62 99 20 00\n'
p180
S'.plt:00000000004016b0\n'
p181
tp182
sS'quotearg_free'
p183
(S'\n__stdcall quotearg_free()\n'
p184
V\u000avoid quotearg_free(void)\u000a\u000a{\u000a  slotvec *__ptr;\u000a  ulong uVar1;\u000a  char **ppcVar2;\u000a  \u000a  __ptr = slotvec;\u000a  if (1 < nslots) {\u000a    ppcVar2 = &slotvec[1].val;\u000a    uVar1 = 1;\u000a    do {\u000a      free(*ppcVar2);\u000a      uVar1 = uVar1 + 1;\u000a      ppcVar2 = ppcVar2 + 2;\u000a    } while (uVar1 < (ulong)nslots);\u000a  }\u000a  if (__ptr->val != slot0) {\u000a    free(__ptr->val);\u000a    slotvec0.size = 0x100;\u000a    slotvec0.val = slot0;\u000a  }\u000a  if (__ptr != &slotvec0) {\u000a    free(__ptr);\u000a    slotvec = &slotvec0;\u000a  }\u000a  nslots = 1;\u000a  return;\u000a}\u000a\u000a
p185
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,qword ptr [0x0060b280]\nCMP dword ptr [0x0060b288],0x2\nJC 0x00404e4a\nLEA R15,[R14 + 0x18]\nMOV EBX,0x1\nNOP\nMOV RDI,qword ptr [R15]\nCALL 0x004016e0\nINC RBX\nMOV EAX,dword ptr [0x0060b288]\nADD R15,0x10\nCMP RBX,RAX\nJC 0x00404e30\nMOV RDI,qword ptr [R14 + 0x8]\nMOV EAX,0x60b390\nCMP RDI,RAX\nJZ 0x00404e73\nCALL 0x004016e0\nMOV qword ptr [0x0060b290],0x100\nMOV qword ptr [0x0060b298],0x60b390\nMOV EAX,0x60b290\nCMP R14,RAX\nJZ 0x00404e90\nMOV RDI,R14\nCALL 0x004016e0\nMOV qword ptr [0x0060b280],0x60b290\nMOV dword ptr [0x0060b288],0x1\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p186
S'41 57\n41 56\n53\n4c 8b 35 64 64 20 00\n83 3d 65 64 20 00 02\n72 25\n4d 8d 7e 18\nbb 01 00 00 00\n66 90\n49 8b 3f\ne8 a8 c8 ff ff\n48 ff c3\n8b 05 47 64 20 00\n49 83 c7 10\n48 39 c3\n72 e6\n49 8b 7e 08\nb8 90 b3 60 00\n48 39 c7\n74 1b\ne8 83 c8 ff ff\n48 c7 05 28 64 20 00 00 01 00 00\n48 c7 05 25 64 20 00 90 b3 60 00\nb8 90 b2 60 00\n49 39 c6\n74 13\n4c 89 f7\ne8 5b c8 ff ff\n48 c7 05 f0 63 20 00 90 b2 60 00\nc7 05 ee 63 20 00 01 00 00 00\n5b\n41 5e\n41 5f\nc3\n'
p187
S'.text:0000000000404e10\n.text:0000000000404e12\n.text:0000000000404e14\n.text:0000000000404e15\n.text:0000000000404e1c\n.text:0000000000404e23\n.text:0000000000404e25\n.text:0000000000404e29\n.text:0000000000404e2e\n.text:0000000000404e30\n.text:0000000000404e33\n.text:0000000000404e38\n.text:0000000000404e3b\n.text:0000000000404e41\n.text:0000000000404e45\n.text:0000000000404e48\n.text:0000000000404e4a\n.text:0000000000404e4e\n.text:0000000000404e53\n.text:0000000000404e56\n.text:0000000000404e58\n.text:0000000000404e5d\n.text:0000000000404e68\n.text:0000000000404e73\n.text:0000000000404e78\n.text:0000000000404e7b\n.text:0000000000404e7d\n.text:0000000000404e80\n.text:0000000000404e85\n.text:0000000000404e90\n.text:0000000000404e9a\n.text:0000000000404e9b\n.text:0000000000404e9d\n.text:0000000000404e9f\n'
p188
tp189
sS'quotearg_mem'
p190
(S'\n__stdcall quotearg_mem(char * arg, size_t argsize)\n'
p191
V\u000achar * quotearg_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_mem((char *)0x0,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p192
S'MOV RAX,RSI\nMOV RCX,RDI\nXOR EDI,EDI\nMOV RSI,RCX\nMOV RDX,RAX\nJMP 0x00405070\n'
p193
S'48 89 f0\n48 89 f9\n31 ff\n48 89 ce\n48 89 c2\neb d0\n'
p194
S'.text:0000000000405090\n.text:0000000000405093\n.text:0000000000405096\n.text:0000000000405098\n.text:000000000040509b\n.text:000000000040509e\n'
p195
tp196
sS'deregister_tm_clones'
p197
(S'\n__stdcall deregister_tm_clones()\n'
p198
V\u000a/* WARNING: Removing unreachable block (ram,0x00401b85) */\u000a/* WARNING: Removing unreachable block (ram,0x00401b8f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p199
S'MOV EAX,0x60b2df\nPUSH RBP\nSUB RAX,0x60b2d8\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00401ba0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401ba0\nPOP RBP\nMOV EDI,0x60b2d8\nJMP RAX\nPOP RBP\nRET\n'
p200
S'b8 df b2 60 00\n55\n48 2d d8 b2 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf d8 b2 60 00\nff e0\n5d\nc3\n'
p201
S'.text:0000000000401b70\n.text:0000000000401b75\n.text:0000000000401b76\n.text:0000000000401b7c\n.text:0000000000401b80\n.text:0000000000401b83\n.text:0000000000401b85\n.text:0000000000401b8a\n.text:0000000000401b8d\n.text:0000000000401b8f\n.text:0000000000401b90\n.text:0000000000401b95\n.text:0000000000401ba0\n.text:0000000000401ba1\n'
p202
tp203
sS'strftime_case_'
p204
(S'\n__stdcall strftime_case_(FILE * s, char * format, tm * tp, timezone_t tz)\n'
p205
V\u000a/* WARNING: Removing unreachable block (ram,0x00403781) */\u000a/* WARNING: Removing unreachable block (ram,0x0040378a) */\u000a/* WARNING: Removing unreachable block (ram,0x00403790) */\u000a/* WARNING: Removing unreachable block (ram,0x004037ab) */\u000a/* WARNING: Type propagation algorithm not settling */\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000asize_t strftime_case_(FILE *s,char *format,tm *tp,timezone_t tz)\u000a\u000a{\u000a  int *piVar1;\u000a  tm_zone *ptVar2;\u000a  byte bVar3;\u000a  char cVar4;\u000a  bool bVar5;\u000a  int iVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  size_t sVar9;\u000a  int __c;\u000a  ulong uVar10;\u000a  char *pcVar11;\u000a  char *pcVar12;\u000a  uint unaff_EBX;\u000a  long lVar13;\u000a  size_t len;\u000a  ulong len_00;\u000a  char *__size;\u000a  char cVar14;\u000a  ulong unaff_RBP;\u000a  tm_zone *__ptr;\u000a  char cVar15;\u000a  ulong uVar16;\u000a  uint uVar17;\u000a  int __c_00;\u000a  timezone_t in_R8;\u000a  uint in_R9D;\u000a  uint uVar18;\u000a  ulong in_R11;\u000a  char *src;\u000a  ulong uVar19;\u000a  ulong uVar20;\u000a  char ufmt [5];\u000a  char buf [23];\u000a  tm ltm;\u000a  ulong local_4d0;\u000a  uint local_4c4;\u000a  char *local_4c0;\u000a  ulong local_4a0;\u000a  undefined2 local_485;\u000a  char local_483;\u000a  char local_482 [2];\u000a  char *local_480;\u000a  uint local_474;\u000a  tm_zone *local_470;\u000a  timezone_t local_468;\u000a  undefined4 local_45c;\u000a  char local_441 [9];\u000a  undefined4 local_438;\u000a  int iStack1076;\u000a  int iStack1072;\u000a  int iStack1068;\u000a  int local_428;\u000a  int iStack1060;\u000a  int iStack1056;\u000a  int iStack1052;\u000a  int local_418;\u000a  undefined4 uStack1044;\u000a  undefined4 uStack1040;\u000a  undefined4 uStack1036;\u000a  tm_zone *local_408;\u000a  \u000a  local_45c = SUB84(s,0);\u000a  uVar7 = *(uint *)&tz->tz_is_set;\u000a  local_470 = (tm_zone *)0x4074a5;\u000a  if (tz[3].next != (tm_zone *)0x0) {\u000a    local_470 = tz[3].next;\u000a  }\u000a  local_474 = 0xc;\u000a  if (uVar7 != 0) {\u000a    local_474 = uVar7;\u000a  }\u000a  if (0xc < (int)uVar7) {\u000a    local_474 = uVar7 - 0xc;\u000a  }\u000a  if (*(char *)&tp->tm_sec == 0) {\u000a    return 0;\u000a  }\u000a  local_4c0 = (char *)0x0;\u000a  local_4a0 = unaff_RBP;\u000a  local_4d0 = in_R11;\u000a  local_468 = in_R8;\u000a  local_4c4 = unaff_EBX;\u000a  do {\u000a    if ((int)*(char *)&tp->tm_sec != 0x25) {\u000a      uVar7 = 1;\u000a      if (local_4c0 < (char *)0xfffffffffffffffe) {\u000a        if (format != (char *)0x0) {\u000a          fputc((int)*(char *)&tp->tm_sec,(FILE *)format);\u000a        }\u000a        local_4c0 = local_4c0 + 1;\u000a        uVar7 = 0;\u000a      }\u000a      if (uVar7 == 0) {\u000a        uVar7 = 4;\u000a      }\u000a      goto LAB_004026a3;\u000a    }\u000a    bVar5 = false;\u000a    bVar3 = (byte)local_45c;\u000a    tp = (tm *)((long)&tp->tm_sec + 1);\u000a    __c_00 = 0;\u000aLAB_00402616:\u000a    while( true ) {\u000a      while (iVar6 = (int)*(char *)&tp->tm_sec, 0x2f < iVar6) {\u000a        if ((iVar6 == 0x30) || (iVar6 == 0x5f)) goto LAB_00402610;\u000a        if (iVar6 != 0x5e) goto LAB_004026c0;\u000a        bVar3 = 1;\u000a        tp = (tm *)((long)&tp->tm_sec + 1);\u000a      }\u000a      if (iVar6 != 0x2d) break;\u000aLAB_00402610:\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a      __c_00 = iVar6;\u000a    }\u000a    if (iVar6 == 0x23) {\u000a      bVar5 = true;\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a      goto LAB_00402616;\u000a    }\u000aLAB_004026c0:\u000a    uVar19 = 0xffffffff;\u000a    if (iVar6 - 0x30U < 10) {\u000a      uVar19 = 0;\u000a      do {\u000a        iVar6 = (int)uVar19;\u000a        uVar19 = 0x7fffffff;\u000a        if ((iVar6 < 0xccccccd) &&\u000a           ((__c = (int)*(char *)&tp->tm_sec + -0x30, iVar6 != 0xccccccc ||\u000a            (uVar19 = 0x7fffffff, __c < 8)))) {\u000a          uVar19 = (ulong)(uint)(__c + iVar6 * 10);\u000a        }\u000a        piVar1 = &tp->tm_sec;\u000a        tp = (tm *)((long)&tp->tm_sec + 1);\u000a      } while ((int)*(char *)((long)piVar1 + 1) - 0x30U < 10);\u000a    }\u000a    uVar8 = (uint)uVar19;\u000a    cVar15 = *(char *)&tp->tm_sec;\u000a    if ((cVar15 == 'O') || (cVar15 == 'E')) {\u000a      tp = (tm *)((long)&tp->tm_sec + 1);\u000a    }\u000a    else {\u000a      cVar15 = 0;\u000a    }\u000a    cVar14 = *(char *)&tp->tm_sec;\u000a    uVar20 = 0;\u000a    src = "%H:%M";\u000a    uVar17 = 0;\u000a    cVar4 = 'r';\u000a    switch(cVar14) {\u000a    case 0:\u000a      tp = (tm *)((long)&tp->tm_mday + 3);\u000a    default:\u000a      goto switchD_00402740_caseD_1;\u000a    case '%':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        uVar7 = 0;\u000a        if (-1 < (int)uVar8) {\u000a          uVar7 = uVar8;\u000a        }\u000a        uVar19 = 1;\u000a        if (1 < uVar7) {\u000a          uVar19 = (ulong)uVar7;\u000a        }\u000a        if (~(ulong)local_4c0 <= uVar19) {\u000a          return 0;\u000a        }\u000a        if (format != (char *)0x0) {\u000a          if (1 < uVar7) {\u000a            lVar13 = (long)(int)uVar8 + -1;\u000a            if (__c_00 == 0x30) {\u000a              while (lVar13 != 0) {\u000a                fputc(0x30,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a            else {\u000a              while (lVar13 != 0) {\u000a                fputc(0x20,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a          }\u000a          __c_00 = (int)*(char *)&tp->tm_sec;\u000a          goto LAB_00403c88;\u000a        }\u000a        goto LAB_00403c9c;\u000a      }\u000a      break;\u000a    case ':':\u000a      uVar20 = 1;\u000a      while (cVar4 = *(char *)((long)&tp->tm_sec + uVar20), cVar4 == ':') {\u000a        uVar20 = uVar20 + 1;\u000a      }\u000a      if (cVar4 == 'z') {\u000a        tp = (tm *)((long)&tp->tm_sec + uVar20);\u000a        goto switchD_00402740_caseD_7a;\u000a      }\u000a      goto switchD_00402740_caseD_1;\u000a    case 'A':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        if (bVar5) {\u000a          bVar3 = 1;\u000a        }\u000a        cVar4 = 'A';\u000aLAB_0040339b:\u000a        uVar20 = 0;\u000a        uVar17 = 0;\u000a        goto switchD_00402740_caseD_72;\u000a      }\u000a      break;\u000a    case 'B':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        if (bVar5) {\u000a          bVar3 = 1;\u000a        }\u000a        cVar4 = 'B';\u000a        goto LAB_0040339b;\u000a      }\u000a      break;\u000a    case 'C':\u000a      if (cVar15 == 'E') {\u000a        cVar4 = 'C';\u000a        goto LAB_0040339b;\u000a      }\u000a      if (cVar15 != 'O') {\u000a        iVar6 = *(int *)((long)&tz[1].next + 4);\u000a        lVar13 = (long)iVar6;\u000a        bVar5 = lVar13 < 0xfffff894;\u000a        __c = iVar6 / 100 + (iVar6 >> 0x1f) + (uint)((ulong)(lVar13 * 0x51eb851f) >> 0x3f);\u000a        uVar7 = (__c - (uint)(iVar6 + __c * -100 < 0 && 0xfffff894 < lVar13)) + 0x13;\u000a        goto LAB_00402f3f;\u000a      }\u000aswitchD_00402740_caseD_1:\u000a      uVar17 = 0;\u000a      break;\u000a    case 'D':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        src = "%m/%d/%y";\u000a        goto switchD_00402740_caseD_52;\u000a      }\u000a      break;\u000a    case 'F':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        src = "%Y-%m-%d";\u000a        goto switchD_00402740_caseD_52;\u000a      }\u000a      break;\u000a    case 'G':\u000a    case 'V':\u000a    case 'g':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = iso_week_days();\u000a        if ((int)uVar7 < 0) {\u000a          uVar7 = iso_week_days();\u000a          uVar8 = 0xffffffff;\u000a        }\u000a        else {\u000a          uVar17 = iso_week_days();\u000a          uVar8 = uVar17 >> 0x1f ^ 1;\u000a          if (-1 < (int)uVar17) {\u000a            uVar7 = uVar17;\u000a          }\u000a        }\u000a        if (*(char *)&tp->tm_sec == 'G') {\u000a          iVar6 = *(int *)((long)&tz[1].next + 4);\u000a          local_4a0 = (ulong)(iVar6 < (int)(-0x76c - uVar8));\u000a          local_4d0 = (ulong)(uVar8 + 0x76c + iVar6);\u000a          uVar17 = 4;\u000a          goto LAB_00403300;\u000a        }\u000a        if (*(char *)&tp->tm_sec == 'g') {\u000a          iVar6 = *(int *)((long)&tz[1].next + 4);\u000a          __c = iVar6 + (iVar6 / 100 + (iVar6 >> 0x1f) +\u000a                        (uint)((ulong)((long)iVar6 * 0x51eb851f) >> 0x3f)) * -100 + uVar8;\u000a          uVar7 = __c + (__c / 100 + (__c >> 0x1f) + (uint)((ulong)((long)__c * 0x51eb851f) >> 0x3f)\u000a                        ) * -100;\u000a          uVar18 = 2;\u000a          if ((int)uVar7 < 0) {\u000a            uVar17 = -uVar7;\u000a            uVar7 = uVar7 + 100;\u000a            if (iVar6 < (int)(-0x76c - uVar8)) {\u000a              uVar7 = uVar17;\u000a            }\u000a          }\u000a        }\u000a        else {\u000a          uVar7 = (int)uVar7 / 7 + ((int)uVar7 >> 0x1f) + 1 +\u000a                  (uint)((ulong)((long)(int)uVar7 * 0x92492493) >> 0x3f);\u000a          uVar18 = 2;\u000a        }\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'H':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->tz_is_set;\u000a        uVar18 = 2;\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'I':\u000a      uVar17 = 0;\u000a      uVar7 = local_474;\u000a      uVar18 = 2;\u000a      if (cVar15 != 'E') goto LAB_0040343d;\u000a      break;\u000a    case 'M':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)((long)&tz->next + 4);\u000a        uVar18 = 2;\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'N':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        if (uVar8 == 0xffffffff) {\u000a          uVar19 = 9;\u000a          uVar7 = in_R9D;\u000a          uVar18 = 9;\u000a        }\u000a        else {\u000a          uVar7 = in_R9D;\u000a          uVar18 = uVar8;\u000a          if ((int)uVar8 < 9) {\u000a            uVar17 = 9;\u000a            uVar7 = in_R9D;\u000a            do {\u000a              uVar7 = (int)uVar7 / 10 + ((int)uVar7 >> 0x1f) +\u000a                      (uint)((ulong)((long)(int)uVar7 * 0x66666667) >> 0x3f);\u000a              uVar17 = uVar17 - 1;\u000a              uVar18 = uVar8;\u000a            } while (uVar8 != uVar17);\u000a          }\u000a        }\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'P':\u000a      uVar20 = 1;\u000a    case 'p':\u000a      uVar17 = 0;\u000a      if (bVar5) {\u000a        bVar3 = 0;\u000a        uVar20 = 1;\u000a      }\u000a      cVar4 = 'p';\u000a      goto switchD_00402740_caseD_72;\u000a    case 'R':\u000a      goto switchD_00402740_caseD_52;\u000a    case 'S':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->next;\u000a        uVar18 = 2;\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'T':\u000a      src = "%H:%M:%S";\u000a      goto switchD_00402740_caseD_52;\u000a    case 'U':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        iVar6 = (*(int *)&tz[1].field_0xc + 7) - *(int *)&tz[1].tz_is_set;\u000aLAB_00402c2e:\u000a        uVar7 = iVar6 / 7 + (iVar6 >> 0x1f) + (uint)((ulong)((long)iVar6 * 0x92492493) >> 0x3f);\u000a        uVar18 = 2;\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'W':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        iVar6 = *(int *)&tz[1].tz_is_set + 6;\u000a        uVar7 = (int)((ulong)((long)iVar6 * -0x6db6db6d) >> 0x20) + 6 + *(int *)&tz[1].tz_is_set;\u000a        iVar6 = (*(int *)&tz[1].field_0xc + 7) -\u000a                (iVar6 + (((int)uVar7 >> 2) + (uVar7 >> 0x1f)) * -7);\u000a        goto LAB_00402c2e;\u000a      }\u000a      break;\u000a    case 'X':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'O') {\u000a        cVar4 = 'X';\u000a        uVar20 = 0;\u000a        goto switchD_00402740_caseD_72;\u000a      }\u000a      break;\u000a    case 'Y':\u000a      if (cVar15 == 'E') {\u000a        cVar4 = 'Y';\u000a        goto LAB_0040339b;\u000a      }\u000a      if (cVar15 == 'O') goto switchD_00402740_caseD_1;\u000a      iVar6 = *(int *)((long)&tz[1].next + 4);\u000a      bVar5 = iVar6 < -0x76c;\u000a      uVar7 = iVar6 + 0x76c;\u000a      iVar6 = 0;\u000a      uVar17 = 4;\u000a      local_4a0 = (ulong)bVar5 | 0x407c00;\u000a      local_4c4 = 0;\u000a      goto LAB_0040355b;\u000a    case 'Z':\u000a      len = strlen((char *)local_470);\u000a      uVar20 = 0;\u000a      if (-1 < (int)uVar8) {\u000a        uVar20 = uVar19;\u000a      }\u000a      uVar19 = len;\u000a      if (len < uVar20) {\u000a        uVar19 = uVar20;\u000a      }\u000a      if (~(ulong)local_4c0 <= uVar19) {\u000a        return 0;\u000a      }\u000a      if (format != (char *)0x0) {\u000a        if (len < uVar20) {\u000a          lVar13 = (long)(int)uVar8 - len;\u000a          if (__c_00 == 0x30) {\u000a            while (lVar13 != 0) {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a          else {\u000a            while (lVar13 != 0) {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a        }\u000a        if (bVar5) {\u000a          fwrite_lowcase((FILE *)format,(char *)local_470,len);\u000a          goto LAB_00403389;\u000a        }\u000a        __ptr = local_470;\u000a        if (bVar3 != 0) {\u000a          fwrite_uppcase((FILE *)format,(char *)local_470,len);\u000a          goto LAB_00403389;\u000a        }\u000a        goto LAB_00402d78;\u000a      }\u000a      goto LAB_00403389;\u000a    case 'a':\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        if (bVar5) {\u000a          bVar3 = 1;\u000a        }\u000a        cVar4 = 'a';\u000a        goto LAB_0040339b;\u000a      }\u000a      break;\u000a    case 'b':\u000a    case 'h':\u000a      if (bVar5) {\u000a        bVar3 = 1;\u000a      }\u000a      uVar17 = 0;\u000a      if (cVar15 == 0) {\u000a        uVar20 = 0;\u000a        cVar4 = cVar14;\u000a        goto switchD_00402740_caseD_72;\u000a      }\u000a      break;\u000a    case 'c':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'O') {\u000a        cVar4 = 'c';\u000a        uVar20 = 0;\u000a        goto switchD_00402740_caseD_72;\u000a      }\u000a      break;\u000a    case 'd':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->field_0xc;\u000a        uVar18 = 2;\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'e':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->field_0xc;\u000aLAB_00402ef2:\u000a        uVar18 = 2;\u000a        if ((__c_00 != 0x2d) && (__c_00 != 0x30)) {\u000a          __c_00 = 0x5f;\u000a        }\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'j':\u000a      uVar17 = 0;\u000a      if (cVar15 == 'E') break;\u000a      local_4a0 = (ulong)(*(int *)&tz[1].field_0xc < -1) | 0x407c00;\u000a      local_4d0 = (ulong)(*(int *)&tz[1].field_0xc + 1);\u000a      uVar17 = 3;\u000aLAB_00403300:\u000a      local_4c4 = 0;\u000a      iVar6 = 0;\u000a      goto LAB_0040344b;\u000a    case 'k':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz->tz_is_set;\u000a        goto LAB_00402ef2;\u000a      }\u000a      break;\u000a    case 'l':\u000a      uVar17 = 0;\u000a      uVar7 = local_474;\u000a      if (cVar15 != 'E') goto LAB_00402ef2;\u000a      break;\u000a    case 'm':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        bVar5 = *(int *)&tz[1].next < -1;\u000a        uVar7 = *(int *)&tz[1].next + 1;\u000aLAB_00402f3f:\u000a        local_4d0 = (ulong)uVar7;\u000a        local_4a0 = (ulong)bVar5 | 0x407c00;\u000a        uVar17 = 2;\u000a        goto LAB_00403300;\u000a      }\u000a      break;\u000a    case 'n':\u000a      uVar7 = 0;\u000a      if (-1 < (int)uVar8) {\u000a        uVar7 = uVar8;\u000a      }\u000a      uVar19 = 1;\u000a      if (1 < uVar7) {\u000a        uVar19 = (ulong)uVar7;\u000a      }\u000a      if (~(ulong)local_4c0 <= uVar19) {\u000a        return 0;\u000a      }\u000a      if (format != (char *)0x0) {\u000a        if (1 < uVar7) {\u000a          lVar13 = (long)(int)uVar8 + -1;\u000a          if (__c_00 == 0x30) {\u000a            while (lVar13 != 0) {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a          else {\u000a            while (lVar13 != 0) {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a        }\u000a        __c_00 = 10;\u000aLAB_00403c88:\u000a        fputc(__c_00,(FILE *)format);\u000a      }\u000a      goto LAB_00403c9c;\u000a    case 'r':\u000a      goto switchD_00402740_caseD_72;\u000a    case 's':\u000a      local_408 = tz[3].next;\u000a      local_438 = *(int *)&tz->next;\u000a      iStack1076 = *(int *)((long)&tz->next + 4);\u000a      iStack1072 = *(int *)&tz->tz_is_set;\u000a      iStack1068 = *(int *)&tz->field_0xc;\u000a      local_428 = *(int *)&tz[1].next;\u000a      iStack1060 = *(int *)((long)&tz[1].next + 4);\u000a      iStack1056 = *(int *)&tz[1].tz_is_set;\u000a      iStack1052 = *(int *)&tz[1].field_0xc;\u000a      local_418 = *(int *)&tz[2].next;\u000a      uStack1044 = *(undefined4 *)((long)&tz[2].next + 4);\u000a      uStack1040 = *(undefined4 *)&tz[2].tz_is_set;\u000a      uStack1036 = *(undefined4 *)&tz[2].field_0xc;\u000a      len_00 = mktime_z(local_468,(tm *)&local_438);\u000a      local_4a0 = len_00 >> 0x3f;\u000a      src = local_441;\u000a      uVar20 = len_00;\u000a      do {\u000a        uVar10 = (long)uVar20 / 10 + ((long)uVar20 >> 0x3f);\u000a        cVar14 = (char)uVar20 + (char)uVar10 * -10;\u000a        cVar15 = -cVar14;\u000a        if (-1 < (long)len_00) {\u000a          cVar15 = cVar14;\u000a        }\u000a        src[-1] = cVar15 + '0';\u000a        src = src + -1;\u000a        uVar16 = uVar20 + 9;\u000a        uVar20 = uVar10;\u000a      } while (0x12 < uVar16);\u000a      uVar17 = 1;\u000a      iVar6 = 0;\u000a      goto LAB_004035b4;\u000a    case 't':\u000a      uVar7 = 0;\u000a      if (-1 < (int)uVar8) {\u000a        uVar7 = uVar8;\u000a      }\u000a      uVar19 = 1;\u000a      if (1 < uVar7) {\u000a        uVar19 = (ulong)uVar7;\u000a      }\u000a      if (~(ulong)local_4c0 <= uVar19) {\u000a        return 0;\u000a      }\u000a      if (format != (char *)0x0) {\u000a        if (1 < uVar7) {\u000a          lVar13 = (long)(int)uVar8 + -1;\u000a          if (__c_00 == 0x30) {\u000a            while (lVar13 != 0) {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a          else {\u000a            while (lVar13 != 0) {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            }\u000a          }\u000a        }\u000a        __c_00 = 9;\u000a        goto LAB_00403c88;\u000a      }\u000aLAB_00403c9c:\u000a      local_4c0 = local_4c0 + uVar19;\u000a      goto LAB_00403cb3;\u000a    case 'u':\u000a      iVar6 = *(int *)&tz[1].tz_is_set + 6;\u000a      uVar7 = (int)((ulong)((long)iVar6 * -0x6db6db6d) >> 0x20) + 6 + *(int *)&tz[1].tz_is_set;\u000a      uVar7 = iVar6 + (((int)uVar7 >> 2) + (uVar7 >> 0x1f)) * -7 + 1;\u000a      uVar18 = 1;\u000a      goto LAB_0040343d;\u000a    case 'w':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'E') {\u000a        uVar7 = *(uint *)&tz[1].tz_is_set;\u000a        uVar18 = 1;\u000a        goto LAB_0040343d;\u000a      }\u000a      break;\u000a    case 'x':\u000a      uVar17 = 0;\u000a      if (cVar15 != 'O') {\u000a        uVar20 = 0;\u000a        cVar4 = 'x';\u000a        goto switchD_00402740_caseD_72;\u000a      }\u000a      break;\u000a    case 'y':\u000a      if (cVar15 == 'E') {\u000a        cVar4 = 'y';\u000a        goto LAB_0040339b;\u000a      }\u000a      iVar6 = *(int *)((long)&tz[1].next + 4);\u000a      uVar8 = iVar6 + (iVar6 / 100 + (iVar6 >> 0x1f) +\u000a                      (uint)((ulong)((long)iVar6 * 0x51eb851f) >> 0x3f)) * -100;\u000a      uVar18 = 2;\u000a      uVar7 = uVar8;\u000a      if ((int)uVar8 < 0) {\u000a        uVar7 = uVar8 + 100;\u000a        if (iVar6 < -0x76c) {\u000a          uVar7 = -uVar8;\u000a        }\u000a      }\u000aLAB_0040343d:\u000a      uVar17 = uVar18;\u000a      local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a      local_4c4 = 0;\u000a      iVar6 = 0;\u000a      local_4d0 = (ulong)uVar7;\u000aLAB_0040344b:\u000a      uVar7 = (uint)local_4d0;\u000a      uVar8 = (uint)uVar19;\u000a      bVar5 = (bool)((byte)local_4a0 & 1);\u000a      if ((cVar15 == 'O') && ((local_4a0 & 1) == 0)) {\u000a        uVar20 = 0;\u000a        cVar4 = cVar14;\u000aswitchD_00402740_caseD_72:\u000a        local_485 = 0x2520;\u000a        src = &local_483;\u000a        if (cVar15 != 0) {\u000a          src = local_482;\u000a          local_483 = cVar15;\u000a        }\u000a        *src = cVar4;\u000a        src[1] = 0;\u000a        len = strftime(&local_438,0x400,(char *)&local_485,(tm *)tz);\u000a        if (len != 0) {\u000a          len_00 = len - 1;\u000a          uVar19 = 0;\u000a          if (-1 < (int)uVar8) {\u000a            uVar19 = (ulong)uVar8;\u000a          }\u000a          uVar10 = len_00;\u000a          if (len_00 < uVar19) {\u000a            uVar10 = uVar19;\u000a          }\u000a          if (~(ulong)local_4c0 <= uVar10) {\u000a            return 0;\u000a          }\u000a          if (format != (char *)0x0) {\u000a            if ((uVar17 == 0) && (len_00 < uVar19)) {\u000a              lVar13 = (long)(int)uVar8 - len_00;\u000a              if (__c_00 == 0x30) {\u000a                while (lVar13 != 0) {\u000a                  fputc(0x30,(FILE *)format);\u000a                  lVar13 = lVar13 + -1;\u000a                }\u000a              }\u000a              else {\u000a                while (lVar13 != 0) {\u000a                  fputc(0x20,(FILE *)format);\u000a                  lVar13 = lVar13 + -1;\u000a                }\u000a              }\u000a            }\u000a            if (uVar20 == 0) {\u000a              if ((bVar3 & 1) == 0) {\u000a                fwrite(&local_438 + 1,len_00,1,(FILE *)format);\u000a              }\u000a              else {\u000a                fwrite_uppcase((FILE *)format,&local_438 + 1,len_00);\u000a              }\u000a            }\u000a            else {\u000a              fwrite_lowcase((FILE *)format,&local_438 + 1,len_00);\u000a            }\u000a          }\u000a          local_4c0 = local_4c0 + uVar10;\u000a        }\u000a      }\u000a      else {\u000aLAB_0040355b:\u000a        uVar8 = -uVar7;\u000a        if (bVar5 == false) {\u000a          uVar8 = uVar7;\u000a        }\u000a        src = local_441;\u000a        do {\u000a          if ((local_4c4 & 1) != 0) {\u000a            src[-1] = ':';\u000a            src = src + -1;\u000a          }\u000a          local_4c4 = (int)local_4c4 >> 1;\u000a          local_4d0 = (ulong)uVar8 * 0xcccccccd >> 0x23;\u000a          src[-1] = (char)uVar8 + ((char)(uVar8 / 10) + (char)(uVar8 / 10)) * -5 | 0x30;\u000a          src = src + -1;\u000a          uVar7 = uVar8 / 10;\u000a          bVar5 = 9 < uVar8;\u000a          uVar8 = uVar7;\u000a        } while ((bVar5) || (uVar8 = uVar7, local_4c4 != 0));\u000aLAB_004035b4:\u000a        uVar7 = (uint)uVar19;\u000a        if ((int)uVar17 < (int)uVar7) {\u000a          uVar17 = uVar7;\u000a        }\u000a        if ((char)iVar6 != 0) {\u000a          iVar6 = 0x2b;\u000a        }\u000a        __c = 0x2d;\u000a        if ((local_4a0 & 1) == 0) {\u000a          __c = iVar6;\u000a        }\u000a        cVar15 = (char)__c;\u000a        if (__c_00 == 0x2d) {\u000a          if (cVar15 != 0) {\u000a            uVar20 = 0;\u000a            if (-1 < (int)uVar7) {\u000a              uVar20 = uVar19;\u000a            }\u000a            uVar19 = 1;\u000a            if (1 < (uint)uVar20) {\u000a              uVar19 = uVar20;\u000a            }\u000a            if (~(ulong)local_4c0 <= uVar19) {\u000a              return 0;\u000a            }\u000a            if (format != (char *)0x0) {\u000a              if ((1 < (uint)uVar20) && (uVar17 == 0)) {\u000a                lVar13 = (long)(int)uVar7;\u000a                while (lVar13 = lVar13 + -1, lVar13 != 0) {\u000a                  fputc(0x20,(FILE *)format);\u000a                }\u000a              }\u000a              fputc(__c,(FILE *)format);\u000a            }\u000a            local_4c0 = local_4c0 + uVar19;\u000a          }\u000a        }\u000a        else {\u000a          pcVar11 = src + (long)(int)uVar17 + (-(ulong)(cVar15 != 0) - (long)local_441);\u000a          iVar6 = (int)pcVar11;\u000a          if (iVar6 < 1) {\u000a            if (cVar15 != 0) {\u000a              uVar20 = 0;\u000a              if (-1 < (int)uVar7) {\u000a                uVar20 = uVar19;\u000a              }\u000a              uVar19 = 1;\u000a              if (1 < (uint)uVar20) {\u000a                uVar19 = uVar20;\u000a              }\u000a              if (~(ulong)local_4c0 <= uVar19) {\u000a                return 0;\u000a              }\u000a              if (format != (char *)0x0) {\u000a                if ((1 < (uint)uVar20) && (uVar17 == 0)) {\u000a                  lVar13 = (long)(int)uVar7 + -1;\u000a                  if (__c_00 == 0x30) {\u000a                    while (lVar13 != 0) {\u000a                      fputc(0x30,(FILE *)format);\u000a                      lVar13 = lVar13 + -1;\u000a                    }\u000a                  }\u000a                  else {\u000a                    while (lVar13 != 0) {\u000a                      fputc(0x20,(FILE *)format);\u000a                      lVar13 = lVar13 + -1;\u000a                    }\u000a                  }\u000a                }\u000aLAB_00403a7b:\u000a                fputc(__c,(FILE *)format);\u000a              }\u000aLAB_00403a9a:\u000a              local_4c0 = local_4c0 + uVar19;\u000a            }\u000a          }\u000a          else {\u000a            uVar19 = ~(ulong)local_4c0;\u000a            if (__c_00 == 0x5f) {\u000a              uVar20 = SEXT48(iVar6);\u000a              if (uVar19 <= uVar20) {\u000a                return 0;\u000a              }\u000a              local_480 = pcVar11;\u000a              if ((format != (char *)0x0) && (local_480 = pcVar11, uVar20 != 0)) {\u000a                uVar19 = 0;\u000a                local_480 = pcVar11;\u000a                do {\u000a                  fputc(0x20,(FILE *)format);\u000a                  uVar19 = uVar19 + 1;\u000a                } while (uVar19 < uVar20);\u000a              }\u000a              local_4c0 = local_4c0 + uVar20;\u000a              uVar20 = (ulong)(uVar7 - (int)local_480);\u000a              if (uVar7 - (int)local_480 == 0 || (int)uVar7 < (int)local_480) {\u000a                uVar20 = 0;\u000a              }\u000a              uVar7 = (uint)uVar20;\u000a              if (cVar15 != 0) {\u000a                uVar19 = 1;\u000a                if (1 < uVar7) {\u000a                  uVar19 = uVar20;\u000a                }\u000a                if (~(ulong)local_4c0 <= uVar19) {\u000a                  return 0;\u000a                }\u000a                if (format != (char *)0x0) {\u000a                  if (((uVar17 == 0) && (1 < uVar7)) &&\u000a                     (local_480 = (char *)(uVar20 - 1), local_480 != (char *)0x0)) {\u000a                    pcVar11 = (char *)0x0;\u000a                    do {\u000a                      fputc(0x20,(FILE *)format);\u000a                      pcVar11 = pcVar11 + 1;\u000a                    } while (pcVar11 < local_480);\u000a                  }\u000a                  goto LAB_00403a7b;\u000a                }\u000a                goto LAB_00403a9a;\u000a              }\u000a            }\u000a            else {\u000a              if (uVar19 <= (ulong)(long)(int)uVar17) {\u000a                return 0;\u000a              }\u000a              if (cVar15 != 0) {\u000a                uVar8 = 0;\u000a                if (-1 < (int)uVar7) {\u000a                  uVar8 = uVar7;\u000a                }\u000a                uVar20 = 1;\u000a                if (1 < uVar8) {\u000a                  uVar20 = (ulong)uVar8;\u000a                }\u000a                if (uVar19 <= uVar20) {\u000a                  return 0;\u000a                }\u000a                if (format != (char *)0x0) {\u000a                  local_480 = pcVar11;\u000a                  if ((1 < uVar8) && (local_480 = pcVar11, uVar17 == 0)) {\u000a                    lVar13 = (long)(int)uVar7 + -1;\u000a                    local_480 = pcVar11;\u000a                    if (__c_00 == 0x30) {\u000a                      while (lVar13 != 0) {\u000a                        fputc(0x30,(FILE *)format);\u000a                        lVar13 = lVar13 + -1;\u000a                      }\u000a                    }\u000a                    else {\u000a                      while (lVar13 != 0) {\u000a                        fputc(0x20,(FILE *)format);\u000a                        lVar13 = lVar13 + -1;\u000a                      }\u000a                    }\u000a                  }\u000a                  fputc(__c,(FILE *)format);\u000a                  iVar6 = (int)local_480;\u000a                }\u000a                local_4c0 = local_4c0 + uVar20;\u000a              }\u000a              if ((format != (char *)0x0) && (iVar6 != 0)) {\u000a                uVar19 = 0;\u000a                do {\u000a                  fputc(0x30,(FILE *)format);\u000a                  uVar19 = uVar19 + 1;\u000a                } while (uVar19 < (ulong)(long)iVar6);\u000a              }\u000a              local_4c0 = local_4c0 + (long)iVar6;\u000a              uVar7 = 0;\u000a            }\u000a          }\u000a        }\u000a        __size = local_441 + -(long)src;\u000a        pcVar11 = (char *)0x0;\u000a        if (-1 < (int)uVar7) {\u000a          pcVar11 = (char *)(ulong)uVar7;\u000a        }\u000a        pcVar12 = __size;\u000a        if (__size < pcVar11) {\u000a          pcVar12 = pcVar11;\u000a        }\u000a        if ((char *)~(ulong)local_4c0 <= pcVar12) {\u000a          return 0;\u000a        }\u000a        if (format != (char *)0x0) {\u000a          if ((uVar17 == 0) && (__size < pcVar11)) {\u000a            lVar13 = (long)(int)uVar7 - (long)__size;\u000a            if (__c_00 == 0x30) {\u000a              while (lVar13 != 0) {\u000a                fputc(0x30,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a            else {\u000a              while (lVar13 != 0) {\u000a                fputc(0x20,(FILE *)format);\u000a                lVar13 = lVar13 + -1;\u000a              }\u000a            }\u000a          }\u000a          if (bVar3 == 0) {\u000a            fwrite(src,(size_t)__size,1,(FILE *)format);\u000a          }\u000a          else {\u000a            fwrite_uppcase((FILE *)format,src,(size_t)__size);\u000a          }\u000a        }\u000a        local_4c0 = pcVar12 + (long)local_4c0;\u000a      }\u000a      goto LAB_00403cb3;\u000a    case 'z':\u000aswitchD_00402740_caseD_7a:\u000a      if (*(int *)&tz[2].next < 0) goto LAB_00403cb3;\u000a      if (3 < uVar20) {\u000a        uVar17 = 0;\u000a        uVar7 = 0x18;\u000a        goto LAB_00403c40;\u000a      }\u000a      uVar7 = *(uint *)&tz[2].tz_is_set;\u000a      iVar6 = (int)uVar7 / 0x3c + ((int)uVar7 >> 0x1f) +\u000a              (uint)((ulong)((long)(int)uVar7 * 0x88888889) >> 0x3f);\u000a      uVar18 = (int)uVar7 / 0xe10 + ((int)uVar7 >> 0x1f) +\u000a               (uint)((ulong)((long)(int)uVar7 * 0x91a2b3c5) >> 0x3f);\u000a      __c = iVar6 + (iVar6 / 0x3c + (iVar6 >> 0x1f) +\u000a                    (uint)((ulong)((long)iVar6 * 0x88888889) >> 0x3f)) * -0x3c;\u000a      iVar6 = uVar7 + iVar6 * -0x3c;\u000a      switch(uVar20) {\u000a      case 0:\u000a        uVar18 = uVar18 * 100 + __c;\u000a        uVar17 = 5;\u000a        goto LAB_0040295e;\u000a      case 1:\u000aswitchD_00402948_caseD_1:\u000a        local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a        local_4d0 = (ulong)(uVar18 * 100 + __c);\u000a        uVar17 = 6;\u000a        local_4c4 = 4;\u000a        break;\u000a      case 2:\u000aswitchD_00402948_caseD_2:\u000a        local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a        local_4d0 = (ulong)(uVar18 * 10000 + iVar6 + __c * 100);\u000a        uVar17 = 9;\u000a        local_4c4 = 0x14;\u000a        break;\u000a      case 3:\u000a        if (iVar6 != 0) goto switchD_00402948_caseD_2;\u000a        if (__c != 0) goto switchD_00402948_caseD_1;\u000a        uVar17 = 3;\u000aLAB_0040295e:\u000a        local_4d0 = (ulong)uVar18;\u000a        local_4a0 = (ulong)(uVar7 >> 0x1f);\u000a        local_4c4 = 0;\u000a      }\u000a      uVar7 = 0x4a;\u000aLAB_00403c40:\u000a      if ((char)uVar7 == 0x18) break;\u000a      iVar6 = 1;\u000a      if ((char)uVar7 == 'J') goto LAB_0040344b;\u000aLAB_004026a3:\u000a      if ((uVar7 | 4) != 4) {\u000a        return 0;\u000a      }\u000a      goto LAB_00403cb3;\u000a    }\u000a    __ptr = (tm_zone *)((long)&tp->tm_sec + 1);\u000a    lVar13 = 0;\u000a    iVar6 = 1;\u000a    do {\u000a      __c = iVar6;\u000a      lVar13 = lVar13 + 0x100000000;\u000a      ptVar2 = __ptr + -1;\u000a      __ptr = (tm_zone *)&__ptr[-1].field_0xf;\u000a      iVar6 = __c + 1;\u000a    } while (*(char *)&ptVar2->field_0xf != '%');\u000a    len = lVar13 >> 0x20;\u000a    uVar20 = 0;\u000a    if (-1 < (int)uVar8) {\u000a      uVar20 = uVar19;\u000a    }\u000a    uVar19 = len;\u000a    if (len < uVar20) {\u000a      uVar19 = uVar20;\u000a    }\u000a    if (~(ulong)local_4c0 <= uVar19) {\u000a      return 0;\u000a    }\u000a    if (format != (char *)0x0) {\u000a      if ((uVar17 == 0) && (len < uVar20)) {\u000a        uVar20 = SEXT48((int)uVar8);\u000a        if (__c_00 == 0x30) {\u000a          if (uVar20 != len) {\u000a            lVar13 = uVar20 - (long)__c;\u000a            do {\u000a              fputc(0x30,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            } while (lVar13 != 0);\u000a          }\u000a        }\u000a        else {\u000a          if (uVar20 != len) {\u000a            lVar13 = uVar20 - (long)__c;\u000a            do {\u000a              fputc(0x20,(FILE *)format);\u000a              lVar13 = lVar13 + -1;\u000a            } while (lVar13 != 0);\u000a          }\u000a        }\u000a      }\u000a      if ((bVar3 & 1) == 0) {\u000aLAB_00402d78:\u000a        fwrite(__ptr,len,1,(FILE *)format);\u000a      }\u000a      else {\u000a        fwrite_uppcase((FILE *)format,(char *)__ptr,len);\u000a      }\u000a    }\u000aLAB_00403389:\u000a    local_4c0 = local_4c0 + uVar19;\u000aLAB_00403cb3:\u000a    piVar1 = &tp->tm_sec;\u000a    tp = (tm *)((long)&tp->tm_sec + 1);\u000a    if (*(char *)((long)piVar1 + 1) == 0) {\u000a      return (size_t)local_4c0;\u000a    }\u000a  } while( true );\u000aswitchD_00402740_caseD_52:\u000a  sVar9 = strftime_case_((FILE *)(ulong)(bVar3 != 0),(char *)0x0,(tm *)src,tz);\u000a  uVar20 = 0;\u000a  if (-1 < (int)uVar8) {\u000a    uVar20 = uVar19;\u000a  }\u000a  uVar19 = sVar9;\u000a  if (sVar9 < uVar20) {\u000a    uVar19 = uVar20;\u000a  }\u000a  if (~(ulong)local_4c0 <= uVar19) {\u000a    return 0;\u000a  }\u000a  if (format != (char *)0x0) {\u000a    if (sVar9 < uVar20) {\u000a      lVar13 = (long)(int)uVar8 - sVar9;\u000a      if (__c_00 == 0x30) {\u000a        while (lVar13 != 0) {\u000a          fputc(0x30,(FILE *)format);\u000a          lVar13 = lVar13 + -1;\u000a        }\u000a      }\u000a      else {\u000a        while (lVar13 != 0) {\u000a          fputc(0x20,(FILE *)format);\u000a          lVar13 = lVar13 + -1;\u000a        }\u000a      }\u000a    }\u000a    strftime_case_((FILE *)(ulong)(bVar3 != 0),format,(tm *)src,tz);\u000a  }\u000a  goto LAB_00403389;\u000a}\u000a\u000a
p206
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x4a8\nMOV dword ptr [RSP + 0x4c],R9D\nMOV qword ptr [RSP + 0x70],R8\nMOV R12,RDX\nMOV R8,RSI\nMOV dword ptr [RSP + 0x7c],EDI\nMOV EAX,dword ptr [RCX + 0x8]\nMOV qword ptr [RSP + 0x28],RCX\nMOV RCX,qword ptr [RCX + 0x30]\nTEST RCX,RCX\nMOV EDX,0x4074a5\nCMOVNZ RDX,RCX\nMOV qword ptr [RSP + 0x68],RDX\nLEA ECX,[RAX + -0xc]\nTEST EAX,EAX\nMOV EDX,0xc\nCMOVNZ EDX,EAX\nCMP EAX,0xc\nCMOVG EDX,ECX\nMOV dword ptr [RSP + 0x64],EDX\nCMP byte ptr [R12],0x0\nJZ 0x00403cc6\nMOV R14,0x100000000\nXOR R9D,R9D\nMOV qword ptr [RSP],R8\nJMP 0x004025f0\nSHR EBP,0x1f\nMOV EDI,0x3\nJMP 0x0040295e\nMOVSX EDI,byte ptr [R12]\nCMP EDI,0x25\nJNZ 0x00402660\nMOV dword ptr [RSP + 0x14],EBX\nXOR EBX,EBX\nMOV EAX,dword ptr [RSP + 0x7c]\nMOV R10B,AL\nXOR R13D,R13D\nINC R12\nJMP 0x00402616\nINC R12\nMOV R13D,EAX\nMOVSX EAX,byte ptr [R12]\nCMP EAX,0x2f\nJLE 0x00402640\nCMP EAX,0x30\nJZ 0x00402610\nCMP EAX,0x5f\nJZ 0x00402610\nCMP EAX,0x5e\nJNZ 0x004026c0\nMOV R10B,0x1\nINC R12\nJMP 0x00402616\nCMP EAX,0x2d\nJZ 0x00402610\nCMP EAX,0x23\nJNZ 0x004026c0\nMOV BL,0x1\nINC R12\nJMP 0x00402616\nMOV EAX,0x1\nCMP R9,-0x3\nJA 0x00402699\nTEST R8,R8\nJZ 0x00402694\nMOV RSI,R8\nMOV R15D,EBX\nMOV RBX,R9\nMOV R13,RBP\nMOV RBP,R11\nCALL 0x004018c0\nMOV R11,RBP\nMOV RBP,R13\nMOV R9,RBX\nMOV EBX,R15D\nMOV R8,qword ptr [RSP]\nINC R9\nXOR EAX,EAX\nTEST EAX,EAX\nMOV ECX,0x4\nCMOVZ EAX,ECX\nOR EAX,0x4\nCMP EAX,0x4\nJZ 0x00403cb3\nJMP 0x00403cc6\nADD EAX,-0x30\nMOV R15D,0xffffffff\nCMP EAX,0x9\nJA 0x0040270c\nXOR EAX,EAX\nMOV R15D,0x7fffffff\nCMP EAX,0xccccccc\nJG 0x004026f8\nMOVSX ECX,byte ptr [R12]\nADD ECX,-0x30\nCMP EAX,0xccccccc\nJNZ 0x004026f1\nCMP ECX,0x7\nJG 0x004026f8\nLEA EAX,[RAX + RAX*0x4]\nLEA R15D,[RCX + RAX*0x2]\nMOVSX EAX,byte ptr [R12 + 0x1]\nINC R12\nADD EAX,-0x30\nCMP EAX,0xa\nMOV EAX,R15D\nJC 0x004026d0\nMOV qword ptr [RSP + 0x38],RBP\nMOVSX ESI,byte ptr [R12]\nCMP ESI,0x4f\nJZ 0x00402720\nCMP ESI,0x45\nJNZ 0x00402725\nINC R12\nJMP 0x00402727\nXOR ESI,ESI\nMOVSX ECX,byte ptr [R12]\nCMP ECX,0x7a\nJA 0x00402c71\nXOR EDX,EDX\nMOV AL,0x72\nMOV EBP,0x407c4a\nXOR EDI,EDI\nJMP qword ptr [0x407840 + RCX*0x8]\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV dword ptr [RSP + 0x14],ESI\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x18],R9\nMOV RDX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RDX + 0x14]\nMOV ESI,dword ptr [RDX + 0x18]\nMOV ECX,EAX\nSAR ECX,0x1f\nAND ECX,0x190\nLEA EBX,[RAX + RCX*0x1 + -0x64]\nMOV EDI,dword ptr [RDX + 0x1c]\nMOV R14D,EDI\nCALL 0x00403d80\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x004031a5\nMOV EAX,0x16d\nTEST BL,0x3\nJNZ 0x004027de\nMOVSXD RAX,EBX\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSAR RCX,0x25\nMOV RDX,RAX\nSHR RDX,0x3f\nADD ECX,EDX\nIMUL ECX,ECX,0x64\nSAR RAX,0x27\nADD EAX,EDX\nIMUL EAX,EAX,0x190\nXOR EDX,EDX\nCMP EBX,EAX\nSETZ DL\nADD EDX,0x16d\nCMP EBX,ECX\nMOV EAX,0x16e\nCMOVZ EAX,EDX\nSUB R14D,EAX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV ESI,dword ptr [RAX + 0x18]\nMOV EDI,R14D\nCALL 0x00403d80\nMOV ECX,EAX\nSHR ECX,0x1f\nXOR ECX,0x1\nTEST EAX,EAX\nCMOVNS EBP,EAX\nJMP 0x00403208\nTEST BL,BL\nJZ 0x0040280a\nMOV R10B,0x1\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nMOV EAX,ECX\nXOR EDX,EDX\nJMP 0x00403470\nDEC R12\nJMP 0x00402c71\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403c9c\nMOV qword ptr [RSP + 0x8],R11\nMOV R14,R9\nCMP EAX,0x2\nJC 0x00403c83\nMOVSXD RBP,R15D\nDEC RBP\nCMP R13D,0x30\nJNZ 0x00403c68\nTEST RBP,RBP\nJZ 0x00403c83\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00402885\nJMP 0x00403c83\nMOV EDX,0x1\nJMP 0x004028b3\nINC RDX\nMOVZX EAX,byte ptr [R12 + RDX*0x1]\nCMP AL,0x3a\nJZ 0x004028b0\nCMP AL,0x7a\nJNZ 0x00402c71\nADD R12,RDX\nMOV RAX,qword ptr [RSP + 0x28]\nCMP dword ptr [RAX + 0x20],0x0\nJS 0x00403caa\nCMP RDX,0x3\nMOV qword ptr [RSP + 0x8],RCX\nJA 0x004033cd\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RBP,dword ptr [RAX + 0x28]\nIMUL RAX,RBP,-0x77777777\nSHR RAX,0x20\nADD EAX,EBP\nMOV ECX,EAX\nSHR ECX,0x1f\nSAR EAX,0x5\nADD EAX,ECX\nIMUL R11,RBP,-0x6e5d4c3b\nSHR R11,0x20\nADD R11D,EBP\nMOV ECX,R11D\nSHR ECX,0x1f\nSAR R11D,0xb\nADD R11D,ECX\nCDQE\nIMUL RCX,RAX,-0x77777777\nSHR RCX,0x20\nADD ECX,EAX\nMOV RDI,RDX\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x5\nADD ECX,EDX\nIMUL ECX,ECX,0x3c\nIMUL EDX,EAX,0x3c\nSUB EAX,ECX\nMOV ECX,EBP\nSUB ECX,EDX\nJMP qword ptr [0x407c18 + RDI*0x8]\nSHR EBP,0x1f\nIMUL R11D,R11D,0x64\nADD R11D,EAX\nMOV EDI,0x5\nXOR EBX,EBX\nJMP 0x00403c3b\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nTEST BL,BL\nJZ 0x00402976\nMOV R10B,0x1\nXOR EDX,EDX\nMOV AL,0x41\nJMP 0x0040339b\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nTEST BL,BL\nJZ 0x00402990\nMOV R10B,0x1\nXOR EDX,EDX\nMOV AL,0x42\nJMP 0x0040339b\nCMP ESI,0x45\nJZ 0x00403391\nCMP ESI,0x4f\nJZ 0x00402c71\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RAX,dword ptr [RAX + 0x14]\nCMP RAX,0xfffff894\nSETL BPL\nSETG CL\nIMUL R11,RAX,0x51eb851f\nMOV RDX,R11\nSHR RDX,0x3f\nSAR R11,0x25\nADD R11D,EDX\nIMUL EDX,R11D,0x64\nCMP EAX,EDX\nSETS AL\nAND AL,CL\nMOVZX EAX,AL\nSUB R11D,EAX\nADD R11D,0x13\nJMP 0x00402f3f\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nMOV EBP,0x407c38\nJMP 0x00402b11\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nMOV EBP,0x407c41\nJMP 0x00402b11\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x8]\nMOV EDX,0x2\nJMP 0x0040343d\nMOV EDX,0x2\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV EAX,dword ptr [RSP + 0x64]\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x4]\nMOV EDX,0x2\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nCMP R15D,-0x1\nMOV qword ptr [RSP + 0x8],RCX\nJZ 0x0040340c\nCMP R15D,0x8\nJG 0x00403436\nMOV ECX,0x9\nMOV EAX,dword ptr [RSP + 0x4c]\nNOP dword ptr [RAX]\nCDQE\nIMUL RAX,RAX,0x66666667\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x22\nADD EAX,EDX\nDEC ECX\nCMP R15D,ECX\nJNZ 0x00402ab0\nJMP 0x0040343a\nMOV DL,0x1\nXOR EDI,EDI\nTEST BL,BL\nJZ 0x00402ae0\nMOV R10D,0x0\nJZ 0x00402ae4\nMOV DL,0x1\nMOV AL,0x70\nJMP 0x00403470\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX]\nMOV EDX,0x2\nJMP 0x0040343d\nMOV EBP,0x407c50\nXOR EDI,EDI\nMOV dword ptr [RSP + 0x24],R10D\nTEST R10B,R10B\nSETNZ DIL\nXOR EBX,EBX\nXOR ESI,ESI\nMOV RDX,RBP\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R8,qword ptr [RSP + 0x70]\nMOV qword ptr [RSP + 0x18],R9\nMOV R9D,dword ptr [RSP + 0x4c]\nMOV qword ptr [RSP + 0x8],R11\nCALL 0x00402560\nMOV R11,qword ptr [RSP + 0x8]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R8,qword ptr [RSP]\nTEST R15D,R15D\nCMOVNS EBX,R15D\nCMP RAX,RBX\nMOV R14,RAX\nCMOVC R14,RBX\nMOV RCX,R9\nNOT RCX\nCMP R14,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403389\nCMP RAX,RBX\nJNC 0x00403356\nMOVSXD RBX,R15D\nSUB RBX,RAX\nCMP R13D,0x30\nJNZ 0x0040332f\nTEST RBX,RBX\nJZ 0x00403356\nNOP dword ptr [RAX]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00402ba0\nJMP 0x00403356\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RCX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RCX + 0x1c]\nADD EAX,0x7\nSUB EAX,dword ptr [RCX + 0x18]\nCDQE\nJMP 0x00402c2e\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RCX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RCX + 0x18]\nMOV ECX,dword ptr [RCX + 0x1c]\nLEA EDX,[RAX + 0x6]\nMOVSXD RDX,EDX\nMOV EDI,ESI\nIMUL RSI,RDX,-0x6db6db6d\nSHR RSI,0x20\nLEA EAX,[RSI + RAX*0x1 + 0x6]\nMOV ESI,EAX\nSHR ESI,0x1f\nSAR EAX,0x2\nADD EAX,ESI\nLEA ESI,[RAX*0x8]\nSUB ESI,EAX\nSUB EDX,ESI\nMOV ESI,EDI\nADD ECX,0x7\nSUB ECX,EDX\nMOVSXD RAX,ECX\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD EAX,ECX\nMOV ECX,EAX\nSHR ECX,0x1f\nSAR EAX,0x2\nADD EAX,ECX\nMOV EDX,0x2\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x4f\nJZ 0x00402c80\nMOV AL,0x58\nXOR EDX,EDX\nJMP 0x00403470\nCMP ESI,0x45\nJZ 0x00403397\nCMP ESI,0x4f\nJNZ 0x004033a2\nXOR EDI,EDI\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV dword ptr [RSP + 0x24],R10D\nLEA RBP,[R12 + 0x1]\nMOV ECX,0x1\nXOR EBX,EBX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EAX,ECX\nADD RBX,R14\nLEA ECX,[RAX + 0x1]\nCMP byte ptr [RBP + -0x1],0x25\nLEA RBP,[RBP + -0x1]\nJNZ 0x00402ca0\nSAR RBX,0x20\nTEST R15D,R15D\nMOV ECX,0x0\nCMOVNS ECX,R15D\nCMP RBX,RCX\nMOV R14,RBX\nCMOVC R14,RCX\nMOV RDX,R9\nNOT RDX\nCMP R14,RDX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403389\nMOV qword ptr [RSP + 0x8],R11\nMOV qword ptr [RSP + 0x18],R9\nCMP RBX,RCX\nSETNC CL\nTEST EDI,EDI\nJNZ 0x00402d66\nTEST CL,CL\nJNZ 0x00402d66\nMOVSXD R15,R15D\nMOV RCX,R15\nSUB RCX,RBX\nCMP R13D,0x30\nJNZ 0x00402d38\nTEST RCX,RCX\nJZ 0x00402d66\nCDQE\nSUB R15,RAX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC R15\nJNZ 0x00402d20\nJMP 0x00402d66\nTEST RCX,RCX\nJZ 0x00402d66\nCDQE\nSUB R15,RAX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC R15\nJNZ 0x00402d50\nTEST byte ptr [RSP + 0x24],0x1\nJNZ 0x00402d85\nMOV EDX,0x1\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RCX,R8\nCALL 0x00401ae0\nJMP 0x0040337b\nMOV RDI,R8\nMOV RSI,RBP\nMOV RDX,RBX\nCALL 0x00403d30\nJMP 0x0040337b\nMOV dword ptr [RSP + 0x24],R10D\nMOV RDI,qword ptr [RSP + 0x68]\nMOV qword ptr [RSP + 0x18],R9\nMOV qword ptr [RSP + 0x8],R11\nCALL 0x00401820\nMOV R11,qword ptr [RSP + 0x8]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R8,qword ptr [RSP]\nXOR EDX,EDX\nTEST R15D,R15D\nCMOVNS EDX,R15D\nCMP RAX,RDX\nMOV R14,RAX\nCMOVC R14,RDX\nMOV RCX,R9\nNOT RCX\nCMP R14,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403389\nMOV qword ptr [RSP + 0x30],RAX\nCMP RAX,RDX\nJNC 0x00403996\nMOVSXD RBP,R15D\nSUB RBP,qword ptr [RSP + 0x30]\nCMP R13D,0x30\nJNZ 0x00403973\nTEST RBP,RBP\nJZ 0x00403996\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00402e20\nJMP 0x00403996\nXOR EDI,EDI\nTEST ESI,ESI\nJNZ 0x00402c80\nTEST BL,BL\nJZ 0x00402e4c\nMOV R10B,0x1\nXOR EDX,EDX\nMOV AL,0x61\nJMP 0x0040339b\nXOR EDI,EDI\nCMP ESI,0x4f\nJZ 0x00402c80\nMOV AL,0x63\nXOR EDX,EDX\nJMP 0x00403470\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0xc]\nMOV EDX,0x2\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0xc]\nJMP 0x00402ef2\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R11D,dword ptr [RAX + 0x1c]\nCMP R11D,-0x1\nSETL BPL\nINC R11D\nMOV EDI,0x3\nJMP 0x00403300\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x8]\nJMP 0x00402ef2\nXOR EDI,EDI\nCMP ESI,0x45\nMOV EAX,dword ptr [RSP + 0x64]\nJZ 0x00402c80\nMOV EDX,0x2\nCMP R13D,0x2d\nMOV qword ptr [RSP + 0x8],RCX\nJZ 0x0040343d\nCMP R13D,0x30\nJZ 0x0040343d\nMOV R13D,0x5f\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R11D,dword ptr [RAX + 0x10]\nCMP R11D,-0x1\nSETL BPL\nINC R11D\nMOV EDI,0x2\nJMP 0x00403300\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403c9c\nMOV qword ptr [RSP + 0x8],R11\nMOV R14,R9\nCMP EAX,0x2\nJC 0x004039f6\nMOVSXD RBP,R15D\nDEC RBP\nCMP R13D,0x30\nJNZ 0x004039d3\nTEST RBP,RBP\nJZ 0x004039f6\nNOP\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00402fa0\nJMP 0x004039f6\nMOV qword ptr [RSP + 0x8],R11\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x18],R9\nMOV RCX,qword ptr [RSP + 0x28]\nMOV RAX,qword ptr [RCX + 0x30]\nMOV qword ptr [0xd0 + RSP],RAX\nMOVUPS XMM0,xmmword ptr [RCX]\nMOVUPS XMM1,xmmword ptr [RCX + 0x10]\nMOVUPS XMM2,xmmword ptr [RCX + 0x20]\nMOVAPS xmmword ptr [0xc0 + RSP],XMM2\nMOVAPS xmmword ptr [0xb0 + RSP],XMM1\nMOVAPS xmmword ptr [0xa0 + RSP],XMM0\nLEA RSI,[0xa0 + RSP]\nMOV RDI,qword ptr [RSP + 0x70]\nCALL 0x004064b0\nMOV RCX,RAX\nSHR RAX,0x3f\nMOV RBX,RAX\nMOV RSI,RCX\nLEA R14,[0x97 + RSP]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDX,0x6666666666666667\nMOV RAX,RSI\nIMUL RDX\nMOV RAX,RDX\nSHR RAX,0x3f\nSAR RDX,0x2\nLEA EDI,[RDX + RAX*0x1]\nADD EDI,EDI\nLEA EDI,[RDI + RDI*0x4]\nMOV EBP,ESI\nSUB EBP,EDI\nADD RDX,RAX\nMOV EAX,EBP\nNEG EAX\nTEST RCX,RCX\nCMOVNS EAX,EBP\nADD EAX,0x30\nMOV byte ptr [R14 + -0x1],AL\nDEC R14\nADD RSI,0x9\nCMP RSI,0x12\nMOV RSI,RDX\nJA 0x00403030\nMOV EDI,0x1\nXOR ECX,ECX\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R10D,dword ptr [RSP + 0x24]\nMOV RBP,RBX\nMOV R11,qword ptr [RSP + 0x8]\nMOV EBX,dword ptr [RSP + 0x14]\nJMP 0x004035b4\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403c9c\nMOV qword ptr [RSP + 0x8],R11\nMOV R14,R9\nCMP EAX,0x2\nJC 0x00403a26\nMOVSXD RBP,R15D\nDEC RBP\nCMP R13D,0x30\nJNZ 0x00403a00\nTEST RBP,RBP\nJZ 0x00403a26\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403100\nJMP 0x00403a26\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV ECX,dword ptr [RAX + 0x18]\nLEA EAX,[RCX + 0x6]\nCDQE\nIMUL RDX,RAX,-0x6db6db6d\nSHR RDX,0x20\nLEA ECX,[RDX + RCX*0x1 + 0x6]\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x2\nADD ECX,EDX\nLEA EDX,[RCX*0x8]\nSUB EDX,ECX\nSUB EAX,EDX\nINC EAX\nMOV EDX,0x1\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x45\nJZ 0x00402c80\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x18]\nMOV EDX,0x1\nJMP 0x0040343d\nXOR EDI,EDI\nCMP ESI,0x4f\nJZ 0x00402c80\nMOV AL,0x78\nXOR EDX,EDX\nJMP 0x00403470\nCMP ESI,0x45\nJNZ 0x00403291\nXOR EDX,EDX\nMOV AL,0x79\nJMP 0x0040339b\nDEC EBX\nMOV EDI,0x16d\nTEST BL,0x3\nJNZ 0x004031f1\nMOVSXD RAX,EBX\nIMUL RAX,RAX,0x51eb851f\nMOV RCX,RAX\nSAR RCX,0x25\nMOV RDX,RAX\nSHR RDX,0x3f\nADD ECX,EDX\nIMUL ECX,ECX,0x64\nSAR RAX,0x27\nADD EAX,EDX\nIMUL EAX,EAX,0x190\nXOR EDX,EDX\nCMP EBX,EAX\nSETZ DL\nADD EDX,0x16d\nCMP EBX,ECX\nMOV EDI,0x16e\nCMOVZ EDI,EDX\nADD EDI,R14D\nMOV RAX,qword ptr [RSP + 0x28]\nMOV ESI,dword ptr [RAX + 0x18]\nCALL 0x00403d80\nMOV EBP,EAX\nMOV ECX,0xffffffff\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R14,0x100000000\nMOV R10D,dword ptr [RSP + 0x24]\nMOV ESI,dword ptr [RSP + 0x14]\nMOVSX EAX,byte ptr [R12]\nCMP EAX,0x47\nJZ 0x004032de\nCMP EAX,0x67\nJNZ 0x00403309\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RSI,dword ptr [RAX + 0x14]\nIMUL RAX,RSI,0x51eb851f\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x25\nADD EAX,EDX\nIMUL EAX,EAX,0x64\nMOV EDX,ESI\nSUB EDX,EAX\nADD EDX,ECX\nMOVSXD RAX,EDX\nIMUL RDX,RAX,0x51eb851f\nMOV RDI,RDX\nSHR RDI,0x3f\nSAR RDX,0x25\nADD EDX,EDI\nIMUL EDX,EDX,0x64\nSUB EAX,EDX\nMOV EDX,0x2\nJS 0x0040341d\nMOV ESI,dword ptr [RSP + 0x14]\nJMP 0x0040343d\nMOV qword ptr [RSP + 0x8],RCX\nMOV RAX,qword ptr [RSP + 0x28]\nMOVSXD RCX,dword ptr [RAX + 0x14]\nIMUL RAX,RCX,0x51eb851f\nMOV RDX,RAX\nSHR RDX,0x3f\nSAR RAX,0x25\nADD EAX,EDX\nIMUL EDX,EAX,0x64\nMOV EAX,ECX\nSUB EAX,EDX\nMOV EDX,0x2\nJNS 0x0040343d\nMOV EDI,ESI\nMOV ESI,EAX\nNEG ESI\nADD EAX,0x64\nCMP ECX,0xfffff894\nCMOVL EAX,ESI\nMOV ESI,EDI\nJMP 0x0040343d\nMOV RAX,qword ptr [RSP + 0x28]\nMOV EAX,dword ptr [RAX + 0x14]\nMOV EDX,0xfffff894\nSUB EDX,ECX\nCMP EAX,EDX\nSETL BPL\nLEA R11D,[0x76c + RCX + RAX*0x1]\nMOV EDI,0x4\nXOR EBX,EBX\nXOR ECX,ECX\nJMP 0x0040344b\nMOVSXD RAX,EBP\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD EAX,ECX\nMOV ECX,EAX\nSAR ECX,0x2\nSHR EAX,0x1f\nLEA EAX,[RCX + RAX*0x1 + 0x1]\nMOV EDX,0x2\nJMP 0x0040343d\nTEST RBX,RBX\nJZ 0x00403356\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403340\nXOR EDI,EDI\nCMP byte ptr [RSP + 0x24],0x0\nSETNZ DIL\nMOV RSI,R8\nMOV RDX,RBP\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R8,qword ptr [RSP + 0x70]\nMOV R9D,dword ptr [RSP + 0x4c]\nCALL 0x00402560\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nADD R9,R14\nJMP 0x00403ca0\nXOR EDX,EDX\nMOV AL,0x43\nJMP 0x0040339b\nXOR EDX,EDX\nMOV AL,0x59\nXOR EDI,EDI\nJMP 0x00403470\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R11D,dword ptr [RAX + 0x14]\nCMP R11D,0xfffff894\nSETL AL\nADD R11D,0x76c\nXOR ECX,ECX\nMOV EDI,0x4\nMOV BPL,AL\nXOR EBX,EBX\nJMP 0x0040355b\nXOR EDI,EDI\nMOV EAX,0x18\nMOV RBP,qword ptr [RSP + 0x38]\nMOV EBX,dword ptr [RSP + 0x14]\nJMP 0x00403c40\nTEST ECX,ECX\nJZ 0x00403c1f\nSHR EBP,0x1f\nIMUL R11D,R11D,0x2710\nIMUL EAX,EAX,0x64\nADD R11D,ECX\nADD R11D,EAX\nMOV EDI,0x9\nMOV EBX,0x14\nJMP 0x00403c3b\nMOV R15D,0x9\nMOV EAX,dword ptr [RSP + 0x4c]\nMOV EDX,0x9\nJMP 0x0040343d\nMOV EDI,0xfffff894\nSUB EDI,ECX\nMOV ECX,EAX\nNEG ECX\nADD EAX,0x64\nCMP ESI,EDI\nCMOVL EAX,ECX\nMOV ESI,dword ptr [RSP + 0x14]\nJMP 0x0040343d\nMOV EAX,dword ptr [RSP + 0x4c]\nMOV EDX,R15D\nMOV EBP,EAX\nSHR EBP,0x1f\nXOR EBX,EBX\nXOR ECX,ECX\nMOV R11D,EAX\nMOV EDI,EDX\nMOV EAX,EBP\nAND AL,0x1\nCMP ESI,0x4f\nJNZ 0x0040355b\nTEST AL,AL\nJNZ 0x0040355b\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x38],RBP\nXOR EDX,EDX\nMOV RAX,qword ptr [RSP + 0x8]\nMOV qword ptr [RSP + 0x30],RDX\nMOV EBP,EDI\nMOV qword ptr [RSP + 0x8],R11\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x18],R9\nMOV word ptr [RSP + 0x53],0x2520\nTEST ESI,ESI\nLEA RCX,[RSP + 0x55]\nJZ 0x004034a0\nMOV byte ptr [RSP + 0x55],SIL\nLEA RCX,[RSP + 0x56]\nMOV byte ptr [RCX],AL\nMOV byte ptr [RCX + 0x1],0x0\nLEA RDI,[0xa0 + RSP]\nLEA RDX,[RSP + 0x53]\nMOV ESI,0x400\nMOV RCX,qword ptr [RSP + 0x28]\nCALL 0x00401a40\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040367d\nDEC RBX\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP RBX,RAX\nMOV R14,RBX\nCMOVC R14,RAX\nMOV R9,qword ptr [RSP + 0x18]\nMOV RCX,R9\nNOT RCX\nCMP R14,RCX\nJNC 0x00403cc6\nMOV R8,qword ptr [RSP]\nTEST R8,R8\nJZ 0x004038af\nCMP RBX,RAX\nSETNC AL\nTEST EBP,EBP\nJNZ 0x00403856\nTEST AL,AL\nJNZ 0x00403856\nMOVSXD RBP,R15D\nSUB RBP,RBX\nCMP R13D,0x30\nJNZ 0x0040383b\nTEST RBP,RBP\nJZ 0x00403856\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403540\nJMP 0x00403856\nMOV EDX,R11D\nNEG EDX\nTEST AL,AL\nCMOVZ EDX,R11D\nLEA R14,[0x97 + RSP]\nNOP\nTEST BL,0x1\nJZ 0x0040357d\nMOV byte ptr [R14 + -0x1],0x3a\nDEC R14\nSAR EBX,1\nMOV EAX,EDX\nMOV R11D,0xcccccccd\nIMUL R11,RAX\nSHR R11,0x23\nLEA EAX,[R11 + R11*0x1]\nLEA EAX,[RAX + RAX*0x4]\nMOV ESI,EDX\nSUB ESI,EAX\nOR SIL,0x30\nMOV byte ptr [R14 + -0x1],SIL\nDEC R14\nCMP EDX,0x9\nMOV EDX,R11D\nJA 0x00403570\nTEST EBX,EBX\nMOV EDX,R11D\nJNZ 0x00403570\nCMP EDI,R15D\nCMOVL EDI,R15D\nTEST CL,CL\nJZ 0x004035c1\nMOV CL,0x2b\nTEST BPL,0x1\nMOV SIL,0x2d\nJNZ 0x004035cc\nMOV ESI,ECX\nCMP R13D,0x2d\nMOV dword ptr [RSP + 0x24],R10D\nMOV qword ptr [RSP + 0x38],RBP\nMOV qword ptr [RSP + 0x8],R11\nMOV dword ptr [RSP + 0x14],EBX\nJNZ 0x0040368b\nTEST SIL,SIL\nJZ 0x00403b30\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBX,0x1\nCMOVA EBX,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBX,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403675\nMOV byte ptr [RSP + 0x40],SIL\nMOV dword ptr [RSP + 0x30],EDI\nMOV qword ptr [RSP + 0x18],R9\nCMP EAX,0x2\nJC 0x00403656\nCMP dword ptr [RSP + 0x30],0x0\nJNZ 0x00403656\nMOVSXD RBP,R15D\nDEC RBP\nJZ 0x00403656\nNOP dword ptr [RAX]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403640\nMOVZX EDI,byte ptr [RSP + 0x40]\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nADD R9,RBX\nJMP 0x00403b30\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nJMP 0x004038bc\nMOVSXD RCX,EDI\nMOV RAX,R14\nLEA RDX,[0x97 + RSP]\nSUB RAX,RDX\nMOV EDX,ESI\nNEG DL\nSBB RDX,RDX\nADD RDX,RAX\nADD RDX,RCX\nTEST EDX,EDX\nJLE 0x004037b0\nMOV RAX,R9\nNOT RAX\nCMP R13D,0x5f\nMOV dword ptr [RSP + 0x30],EDI\nJNZ 0x004038cb\nMOVSXD RBX,EDX\nCMP RBX,RAX\nJNC 0x00403cc6\nMOV qword ptr [RSP + 0x58],RDX\nMOV byte ptr [RSP + 0x40],SIL\nMOV qword ptr [RSP + 0x18],R9\nTEST R8,R8\nJZ 0x00403709\nTEST RBX,RBX\nJZ 0x00403709\nXOR EBP,EBP\nNOP dword ptr [RAX]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nINC RBP\nCMP RBP,RBX\nJC 0x004036f0\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,RBX\nXOR EAX,EAX\nSUB R15D,dword ptr [RSP + 0x58]\nCMOVLE R15D,EAX\nCMP byte ptr [RSP + 0x40],0x0\nJZ 0x00403b27\nCMP R15D,0x1\nMOV EBP,0x1\nCMOVA EBP,R15D\nMOV RAX,R9\nNOT RAX\nCMP RBP,RAX\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403a9a\nMOV qword ptr [RSP + 0x18],R9\nTEST EDI,EDI\nJNZ 0x00403a7b\nCMP R15D,0x2\nJC 0x00403a7b\nMOV EAX,R15D\nDEC RAX\nCMP R13D,0x30\nMOV qword ptr [RSP + 0x58],RAX\nJNZ 0x00403a58\nTEST RAX,RAX\nJZ 0x00403a7b\nXOR EBX,EBX\nNOP dword ptr [RAX]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nINC RBX\nCMP RBX,qword ptr [RSP + 0x58]\nJC 0x00403790\nJMP 0x00403a7b\nTEST SIL,SIL\nJZ 0x00403b30\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP EAX,0x1\nMOV EBP,0x1\nCMOVA EBP,EAX\nMOV RCX,R9\nNOT RCX\nCMP RBP,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403a9a\nMOV byte ptr [RSP + 0x40],SIL\nMOV dword ptr [RSP + 0x30],EDI\nMOV qword ptr [RSP + 0x18],R9\nCMP EAX,0x2\nJC 0x00403a7b\nCMP dword ptr [RSP + 0x30],0x0\nJNZ 0x00403a7b\nMOVSXD RBX,R15D\nDEC RBX\nCMP R13D,0x30\nJNZ 0x00403a30\nTEST RBX,RBX\nJZ 0x00403a7b\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403820\nJMP 0x00403a7b\nTEST RBP,RBP\nJZ 0x00403856\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403840\nTEST byte ptr [RSP + 0x30],0x1\nJNZ 0x0040387e\nTEST byte ptr [RSP + 0x24],0x1\nJNZ 0x00403893\nMOV EDX,0x1\nLEA RDI,[0xa1 + RSP]\nMOV RSI,RBX\nMOV RCX,R8\nCALL 0x00401ae0\nJMP 0x004038a6\nMOV RDI,R8\nLEA RSI,[0xa1 + RSP]\nMOV RDX,RBX\nCALL 0x00403ce0\nJMP 0x004038a6\nMOV RDI,R8\nLEA RSI,[0xa1 + RSP]\nMOV RDX,RBX\nCALL 0x00403d30\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,R14\nMOV R14,0x100000000\nMOV RBP,qword ptr [RSP + 0x38]\nMOV R11,qword ptr [RSP + 0x8]\nJMP 0x00403caf\nCMP RCX,RAX\nJNC 0x00403cc6\nTEST SIL,SIL\nJZ 0x0040396b\nXOR ECX,ECX\nTEST R15D,R15D\nCMOVNS ECX,R15D\nCMP ECX,0x1\nMOV EBP,0x1\nCMOVA EBP,ECX\nCMP RBP,RAX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403ae5\nMOV qword ptr [RSP + 0x40],RBP\nMOV qword ptr [RSP + 0x58],RDX\nMOV EBP,ESI\nMOV qword ptr [RSP + 0x18],R9\nCMP ECX,0x2\nJC 0x00403ac6\nCMP dword ptr [RSP + 0x30],0x0\nJNZ 0x00403ac6\nMOVSXD RBX,R15D\nDEC RBX\nCMP R13D,0x30\nJNZ 0x00403aa2\nTEST RBX,RBX\nJZ 0x00403ac6\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403950\nJMP 0x00403ac6\nMOV R15,RDX\nJMP 0x00403aeb\nTEST RBP,RBP\nJZ 0x00403996\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403980\nTEST BL,BL\nJZ 0x004039b1\nMOV RDI,R8\nMOV RSI,qword ptr [RSP + 0x68]\nMOV RDX,qword ptr [RSP + 0x30]\nCALL 0x00403ce0\nJMP 0x0040337b\nCMP byte ptr [RSP + 0x24],0x0\nJZ 0x00403c0b\nMOV RDI,R8\nMOV RSI,qword ptr [RSP + 0x68]\nMOV RDX,qword ptr [RSP + 0x30]\nCALL 0x00403d30\nJMP 0x0040337b\nTEST RBP,RBP\nJZ 0x004039f6\nNOP dword ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x004039e0\nMOV EDI,0xa\nJMP 0x00403c88\nTEST RBP,RBP\nJZ 0x00403a26\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403a10\nMOV EDI,0x9\nJMP 0x00403c88\nTEST RBX,RBX\nJZ 0x00403a7b\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403a40\nJMP 0x00403a7b\nTEST RAX,RAX\nJZ 0x00403a7b\nXOR EBX,EBX\nNOP\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nINC RBX\nCMP RBX,qword ptr [RSP + 0x58]\nJC 0x00403a60\nMOVZX EDI,byte ptr [RSP + 0x40]\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nADD R9,RBP\nJMP 0x00403b30\nTEST RBX,RBX\nJZ 0x00403ac6\nNOP word ptr [RAX + RAX*0x1]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBX\nJNZ 0x00403ab0\nMOVZX EDI,BPL\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV RDX,qword ptr [RSP + 0x58]\nMOV RBP,qword ptr [RSP + 0x40]\nMOV R15,RDX\nADD R9,RBP\nMOV qword ptr [RSP + 0x18],R9\nTEST R8,R8\nJZ 0x00403b19\nTEST R15D,R15D\nJZ 0x00403b19\nMOVSXD RBX,R15D\nXOR EBP,EBP\nNOP\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nINC RBP\nCMP RBP,RBX\nJC 0x00403b00\nMOVSXD RAX,R15D\nMOV R9,qword ptr [RSP + 0x18]\nADD R9,RAX\nXOR R15D,R15D\nMOV R11,qword ptr [RSP + 0x8]\nMOV EDI,dword ptr [RSP + 0x30]\nLEA RBX,[0x97 + RSP]\nSUB RBX,R14\nXOR EAX,EAX\nTEST R15D,R15D\nCMOVNS EAX,R15D\nCMP RBX,RAX\nMOV RDX,RBX\nCMOVC RDX,RAX\nMOV RCX,R9\nNOT RCX\nCMP RDX,RCX\nJNC 0x00403cc6\nTEST R8,R8\nJZ 0x00403c03\nMOV qword ptr [RSP + 0x40],RDX\nMOV qword ptr [RSP + 0x18],R9\nCMP RBX,RAX\nSETNC AL\nTEST EDI,EDI\nJNZ 0x00403bc6\nTEST AL,AL\nJNZ 0x00403bc6\nMOVSXD RBP,R15D\nSUB RBP,RBX\nCMP R13D,0x30\nJNZ 0x00403ba8\nTEST RBP,RBP\nJZ 0x00403bc6\nNOP\nMOV EDI,0x30\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403b90\nJMP 0x00403bc6\nTEST RBP,RBP\nJZ 0x00403bc6\nNOP dword ptr [RAX]\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403bb0\nCMP byte ptr [RSP + 0x24],0x0\nJZ 0x00403bdd\nMOV RDI,R8\nMOV RSI,R14\nMOV RDX,RBX\nCALL 0x00403d30\nJMP 0x00403bf0\nMOV EDX,0x1\nMOV RDI,R14\nMOV RSI,RBX\nMOV RCX,R8\nCALL 0x00401ae0\nMOV R8,qword ptr [RSP]\nMOV R9,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x8]\nMOV RDX,qword ptr [RSP + 0x40]\nADD R9,RDX\nJMP 0x00403ca0\nMOV EDX,0x1\nMOV RDI,qword ptr [RSP + 0x68]\nMOV RSI,qword ptr [RSP + 0x30]\nJMP 0x00402d78\nTEST EAX,EAX\nJZ 0x004025d7\nSHR EBP,0x1f\nIMUL R11D,R11D,0x64\nADD R11D,EAX\nMOV EDI,0x6\nMOV EBX,0x4\nMOV EAX,0x4a\nMOV EDX,EAX\nAND DL,0x7f\nCMP DL,0x18\nJZ 0x00403c5a\nMOV CL,0x1\nCMP DL,0x4a\nJZ 0x0040344b\nJMP 0x004026a3\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x38],RBP\nJMP 0x00402c80\nTEST RBP,RBP\nJZ 0x00403c83\nMOV EDI,0x20\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nDEC RBP\nJNZ 0x00403c6d\nMOVSX EDI,byte ptr [R12]\nMOV RSI,R8\nCALL 0x004018c0\nMOV R8,qword ptr [RSP]\nMOV R9,R14\nMOV R11,qword ptr [RSP + 0x8]\nADD R9,RBX\nNOP\nMOV R14,0x100000000\nMOV RBP,qword ptr [RSP + 0x38]\nMOV EBX,dword ptr [RSP + 0x14]\nCMP byte ptr [R12 + 0x1],0x0\nLEA R12,[R12 + 0x1]\nJNZ 0x004025f0\nJMP 0x00403cc9\nXOR R9D,R9D\nMOV RAX,R9\nADD RSP,0x4a8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p207
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 04 00 00\n44 89 4c 24 4c\n4c 89 44 24 70\n49 89 d4\n49 89 f0\n89 7c 24 7c\n8b 41 08\n48 89 4c 24 28\n48 8b 49 30\n48 85 c9\nba a5 74 40 00\n48 0f 45 d1\n48 89 54 24 68\n8d 48 f4\n85 c0\nba 0c 00 00 00\n0f 45 d0\n83 f8 0c\n0f 4f d1\n89 54 24 64\n41 80 3c 24 00\n0f 84 02 17 00 00\n49 be 00 00 00 00 01 00 00 00\n45 31 c9\n4c 89 04 24\neb 19\nc1 ed 1f\nbf 03 00 00 00\ne9 7a 03 00 00\n41 0f be 3c 24\n83 ff 25\n75 66\n89 5c 24 14\n31 db\n8b 44 24 7c\n41 88 c2\n45 31 ed\n49 ff c4\neb 07\n49 ff c4\n41 89 c5\n41 0f be 04 24\n83 f8 2f\n7e 20\n83 f8 30\n74 eb\n83 f8 5f\n74 e6\n83 f8 5e\n0f 85 8d 00 00 00\n41 b2 01\n49 ff c4\neb db\n83 f8 2d\n74 cb\n83 f8 23\n75 76\nb3 01\n49 ff c4\neb c5\nb8 01 00 00 00\n49 83 f9 fd\n77 2e\n4d 85 c0\n74 24\n4c 89 c6\n41 89 df\n4c 89 cb\n49 89 ed\n4c 89 dd\ne8 3c f2 ff ff\n49 89 eb\n4c 89 ed\n49 89 d9\n44 89 fb\n4c 8b 04 24\n49 ff c1\n31 c0\n85 c0\nb9 04 00 00 00\n0f 44 c1\n83 c8 04\n83 f8 04\n0f 84 04 16 00 00\ne9 12 16 00 00\n83 c0 d0\n41 bf ff ff ff ff\n83 f8 09\n77 3e\n31 c0\n41 bf ff ff ff 7f\n3d cc cc cc 0c\n7f 1b\n41 0f be 0c 24\n83 c1 d0\n3d cc cc cc 0c\n75 05\n83 f9 07\n7f 07\n8d 04 80\n44 8d 3c 41\n41 0f be 44 24 01\n49 ff c4\n83 c0 d0\n83 f8 0a\n44 89 f8\n72 c4\n48 89 6c 24 38\n41 0f be 34 24\n83 fe 4f\n74 05\n83 fe 45\n75 05\n49 ff c4\neb 02\n31 f6\n41 0f be 0c 24\n83 f9 7a\n0f 87 3c 05 00 00\n31 d2\nb0 72\nbd 4a 7c 40 00\n31 ff\nff 24 cd 40 78 40 00\n31 ff\n83 fe 45\n0f 84 2e 05 00 00\n48 89 4c 24 08\n89 74 24 14\n44 89 54 24 24\n4c 89 4c 24 18\n48 8b 54 24 28\n8b 42 14\n8b 72 18\n89 c1\nc1 f9 1f\n81 e1 90 01 00 00\n8d 5c 08 9c\n8b 7a 1c\n41 89 fe\ne8 f6 15 00 00\n89 c5\n85 ed\n0f 88 11 0a 00 00\nb8 6d 01 00 00\nf6 c3 03\n75 40\n48 63 c3\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 f9 25\n48 89 c2\n48 c1 ea 3f\n01 d1\n6b c9 64\n48 c1 f8 27\n01 d0\n69 c0 90 01 00 00\n31 d2\n39 c3\n0f 94 c2\n81 c2 6d 01 00 00\n39 cb\nb8 6e 01 00 00\n0f 44 c2\n41 29 c6\n48 8b 44 24 28\n8b 70 18\n44 89 f7\ne8 8f 15 00 00\n89 c1\nc1 e9 1f\n83 f1 01\n85 c0\n0f 49 e8\ne9 05 0a 00 00\n84 db\n74 03\n41 b2 01\n31 ff\n85 f6\n0f 85 6c 04 00 00\n89 c8\n31 d2\ne9 53 0c 00 00\n49 ff cc\ne9 4c 04 00 00\n31 ff\n85 f6\n0f 85 51 04 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 74 14 00 00\n4d 85 c0\n0f 84 41 14 00 00\n4c 89 5c 24 08\n4d 89 ce\n83 f8 02\n0f 82 17 14 00 00\n49 63 ef\n48 ff cd\n41 83 fd 30\n0f 85 ec 13 00 00\n48 85 ed\n0f 84 fe 13 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 2e f0 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 e3 13 00 00\nba 01 00 00 00\neb 0c\n48 ff c2\n41 0f b6 04 14\n3c 3a\n74 f4\n3c 7a\n0f 85 ad 03 00 00\n49 01 d4\n48 8b 44 24 28\n83 78 20 00\n0f 88 d4 13 00 00\n48 83 fa 03\n48 89 4c 24 08\n0f 87 e8 0a 00 00\n48 8b 44 24 28\n48 63 68 28\n48 69 c5 89 88 88 88\n48 c1 e8 20\n01 e8\n89 c1\nc1 e9 1f\nc1 f8 05\n01 c8\n4c 69 dd c5 b3 a2 91\n49 c1 eb 20\n41 01 eb\n44 89 d9\nc1 e9 1f\n41 c1 fb 0b\n41 01 cb\n48 98\n48 69 c8 89 88 88 88\n48 c1 e9 20\n01 c1\n48 89 d7\n89 ca\nc1 ea 1f\nc1 f9 05\n01 d1\n6b c9 3c\n6b d0 3c\n29 c8\n89 e9\n29 d1\nff 24 fd 18 7c 40 00\nc1 ed 1f\n45 6b db 64\n41 01 c3\nbf 05 00 00 00\n31 db\ne9 d6 12 00 00\n31 ff\n85 f6\n0f 85 11 03 00 00\n84 db\n74 03\n41 b2 01\n31 d2\nb0 41\ne9 1c 0a 00 00\n31 ff\n85 f6\n0f 85 f7 02 00 00\n84 db\n74 03\n41 b2 01\n31 d2\nb0 42\ne9 02 0a 00 00\n83 fe 45\n0f 84 ef 09 00 00\n83 fe 4f\n0f 84 c6 02 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n48 63 40 14\n48 3d 94 f8 ff ff\n40 0f 9c c5\n0f 9f c1\n4c 69 d8 1f 85 eb 51\n4c 89 da\n48 c1 ea 3f\n49 c1 fb 25\n41 01 d3\n41 6b d3 64\n39 d0\n0f 98 c0\n20 c8\n0f b6 c0\n41 29 c3\n41 83 c3 13\ne9 4a 05 00 00\n31 ff\n85 f6\n0f 85 81 02 00 00\nbd 38 7c 40 00\ne9 08 01 00 00\n31 ff\n85 f6\n0f 85 6d 02 00 00\nbd 41 7c 40 00\ne9 f4 00 00 00\n31 ff\n83 fe 45\n0f 84 58 02 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 08\nba 02 00 00 00\ne9 fe 09 00 00\nba 02 00 00 00\n31 ff\n83 fe 45\n0f 84 31 02 00 00\n48 89 4c 24 08\n8b 44 24 64\ne9 e0 09 00 00\n31 ff\n83 fe 45\n0f 84 18 02 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 04\nba 02 00 00 00\ne9 be 09 00 00\n31 ff\n83 fe 45\n0f 84 f6 01 00 00\n41 83 ff ff\n48 89 4c 24 08\n0f 84 73 09 00 00\n41 83 ff 08\n0f 8f 93 09 00 00\nb9 09 00 00 00\n8b 44 24 4c\n0f 1f 40 00\n48 98\n48 69 c0 67 66 66 66\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 22\n01 d0\nff c9\n41 39 cf\n75 e3\ne9 68 09 00 00\nb2 01\n31 ff\n84 db\n74 06\n41 ba 00 00 00 00\n74 02\nb2 01\nb0 70\ne9 85 09 00 00\n31 ff\n83 fe 45\n0f 84 8a 01 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 00\nba 02 00 00 00\ne9 31 09 00 00\nbd 50 7c 40 00\n31 ff\n44 89 54 24 24\n45 84 d2\n40 0f 95 c7\n31 db\n31 f6\n48 89 ea\n48 8b 4c 24 28\n4c 8b 44 24 70\n4c 89 4c 24 18\n44 8b 4c 24 4c\n4c 89 5c 24 08\ne8 1c fa ff ff\n4c 8b 5c 24 08\n4c 8b 4c 24 18\n4c 8b 04 24\n45 85 ff\n41 0f 49 df\n48 39 d8\n49 89 c6\n4c 0f 42 f3\n4c 89 c9\n48 f7 d1\n49 39 ce\n0f 83 54 11 00 00\n4d 85 c0\n0f 84 0e 08 00 00\n48 39 d8\n0f 83 d2 07 00 00\n49 63 df\n48 29 c3\n41 83 fd 30\n0f 85 9b 07 00 00\n48 85 db\n0f 84 b9 07 00 00\n0f 1f 00\nbf 30 00 00 00\n4c 89 c6\ne8 13 ed ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\ne9 9b 07 00 00\n31 ff\n83 fe 45\n0f 84 ba 00 00 00\n48 89 4c 24 08\n48 8b 4c 24 28\n8b 41 1c\n83 c0 07\n2b 41 18\n48 98\neb 51\n31 ff\n83 fe 45\n0f 84 98 00 00 00\n48 89 4c 24 08\n48 8b 4c 24 28\n8b 41 18\n8b 49 1c\n8d 50 06\n48 63 d2\n89 f7\n48 69 f2 93 24 49 92\n48 c1 ee 20\n8d 44 06 06\n89 c6\nc1 ee 1f\nc1 f8 02\n01 f0\n8d 34 c5 00 00 00 00\n29 c6\n29 f2\n89 fe\n83 c1 07\n29 d1\n48 63 c1\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c8\n89 c1\nc1 e9 1f\nc1 f8 02\n01 c8\nba 02 00 00 00\ne9 ee 07 00 00\n31 ff\n83 fe 4f\n74 2a\nb0 58\n31 d2\ne9 11 08 00 00\n83 fe 45\n0f 84 2f 07 00 00\n83 fe 4f\n0f 85 31 07 00 00\n31 ff\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n44 89 54 24 24\n49 8d 6c 24 01\nb9 01 00 00 00\n31 db\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n89 c8\n4c 01 f3\n8d 48 01\n80 7d ff 25\n48 8d 6d ff\n75 ee\n48 c1 fb 20\n45 85 ff\nb9 00 00 00 00\n41 0f 49 cf\n48 39 cb\n49 89 de\n4c 0f 42 f1\n4c 89 ca\n48 f7 d2\n49 39 d6\n0f 83 eb 0f 00 00\n4d 85 c0\n0f 84 a5 06 00 00\n4c 89 5c 24 08\n4c 89 4c 24 18\n48 39 cb\n0f 93 c1\n85 ff\n75 6e\n84 c9\n75 6a\n4d 63 ff\n4c 89 f9\n48 29 d9\n41 83 fd 30\n75 2d\n48 85 c9\n74 56\n48 98\n49 29 c7\n66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 93 eb ff ff\n4c 8b 04 24\n49 ff cf\n75 ea\neb 2e\n48 85 c9\n74 29\n48 98\n49 29 c7\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 63 eb ff ff\n4c 8b 04 24\n49 ff cf\n75 ea\nf6 44 24 24 01\n75 18\nba 01 00 00 00\n48 89 ef\n48 89 de\n4c 89 c1\ne8 60 ed ff ff\ne9 f6 05 00 00\n4c 89 c7\n48 89 ee\n48 89 da\ne8 9d 0f 00 00\ne9 e3 05 00 00\n44 89 54 24 24\n48 8b 7c 24 68\n4c 89 4c 24 18\n4c 89 5c 24 08\ne8 6f ea ff ff\n4c 8b 5c 24 08\n4c 8b 4c 24 18\n4c 8b 04 24\n31 d2\n45 85 ff\n41 0f 49 d7\n48 39 d0\n49 89 c6\n4c 0f 42 f2\n4c 89 c9\n48 f7 d1\n49 39 ce\n0f 83 e5 0e 00 00\n4d 85 c0\n0f 84 9f 05 00 00\n48 89 44 24 30\n48 39 d0\n0f 83 9e 0b 00 00\n49 63 ef\n48 2b 6c 24 30\n41 83 fd 30\n0f 85 69 0b 00 00\n48 85 ed\n0f 84 83 0b 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 93 ea ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 5b 0b 00 00\n31 ff\n85 f6\n0f 85 3b fe ff ff\n84 db\n74 03\n41 b2 01\n31 d2\nb0 61\ne9 46 05 00 00\n31 ff\n83 fe 4f\n0f 84 20 fe ff ff\nb0 63\n31 d2\ne9 07 06 00 00\n31 ff\n83 fe 45\n0f 84 0c fe ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 0c\nba 02 00 00 00\ne9 b2 05 00 00\n31 ff\n83 fe 45\n0f 84 ea fd ff ff\n48 8b 44 24 28\n8b 40 0c\neb 52\n31 ff\n83 fe 45\n0f 84 d5 fd ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n44 8b 58 1c\n41 83 fb ff\n40 0f 9c c5\n41 ff c3\nbf 03 00 00 00\ne9 32 04 00 00\n31 ff\n83 fe 45\n0f 84 a7 fd ff ff\n48 8b 44 24 28\n8b 40 08\neb 0f\n31 ff\n83 fe 45\n8b 44 24 64\n0f 84 8e fd ff ff\nba 02 00 00 00\n41 83 fd 2d\n48 89 4c 24 08\n0f 84 37 05 00 00\n41 83 fd 30\n0f 84 2d 05 00 00\n41 bd 5f 00 00 00\ne9 22 05 00 00\n31 ff\n83 fe 45\n0f 84 5a fd ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n44 8b 58 10\n41 83 fb ff\n40 0f 9c c5\n41 ff c3\nbf 02 00 00 00\ne9 b7 03 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 5a 0d 00 00\n4d 85 c0\n0f 84 27 0d 00 00\n4c 89 5c 24 08\n4d 89 ce\n83 f8 02\n0f 82 70 0a 00 00\n49 63 ef\n48 ff cd\n41 83 fd 30\n0f 85 3d 0a 00 00\n48 85 ed\n0f 84 57 0a 00 00\n90\nbf 30 00 00 00\n4c 89 c6\ne8 13 e9 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 3b 0a 00 00\n4c 89 5c 24 08\n44 89 54 24 24\n4c 89 4c 24 18\n48 8b 4c 24 28\n48 8b 41 30\n48 89 84 24 d0 00 00 00\n0f 10 01\n0f 10 49 10\n0f 10 51 20\n0f 29 94 24 c0 00 00 00\n0f 29 8c 24 b0 00 00 00\n0f 29 84 24 a0 00 00 00\n48 8d b4 24 a0 00 00 00\n48 8b 7c 24 70\ne8 a0 34 00 00\n48 89 c1\n48 c1 e8 3f\n48 89 c3\n48 89 ce\n4c 8d b4 24 97 00 00 00\n66 66 2e 0f 1f 84 00 00 00 00 00\n48 ba 67 66 66 66 66 66 66 66\n48 89 f0\n48 f7 ea\n48 89 d0\n48 c1 e8 3f\n48 c1 fa 02\n8d 3c 02\n01 ff\n8d 3c bf\n89 f5\n29 fd\n48 01 c2\n89 e8\nf7 d8\n48 85 c9\n0f 49 c5\n83 c0 30\n41 88 46 ff\n49 ff ce\n48 83 c6 09\n48 83 fe 12\n48 89 d6\n77 b5\nbf 01 00 00 00\n31 c9\n4c 8b 04 24\n4c 8b 4c 24 18\n44 8b 54 24 24\n48 89 dd\n4c 8b 5c 24 08\n8b 5c 24 14\ne9 13 05 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 02 0c 00 00\n4d 85 c0\n0f 84 cf 0b 00 00\n4c 89 5c 24 08\n4d 89 ce\n83 f8 02\n0f 82 48 09 00 00\n49 63 ef\n48 ff cd\n41 83 fd 30\n0f 85 12 09 00 00\n48 85 ed\n0f 84 2f 09 00 00\n66 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 b3 e7 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 0b 09 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n8b 48 18\n8d 41 06\n48 98\n48 69 d0 93 24 49 92\n48 c1 ea 20\n8d 4c 0a 06\n89 ca\nc1 ea 1f\nc1 f9 02\n01 d1\n8d 14 cd 00 00 00 00\n29 ca\n29 d0\nff c0\nba 01 00 00 00\ne9 e0 02 00 00\n31 ff\n83 fe 45\n0f 84 18 fb ff ff\n48 89 4c 24 08\n48 8b 44 24 28\n8b 40 18\nba 01 00 00 00\ne9 be 02 00 00\n31 ff\n83 fe 4f\n0f 84 f6 fa ff ff\nb0 78\n31 d2\ne9 dd 02 00 00\n83 fe 45\n0f 85 f5 00 00 00\n31 d2\nb0 79\ne9 f6 01 00 00\nff cb\nbf 6d 01 00 00\nf6 c3 03\n75 40\n48 63 c3\n48 69 c0 1f 85 eb 51\n48 89 c1\n48 c1 f9 25\n48 89 c2\n48 c1 ea 3f\n01 d1\n6b c9 64\n48 c1 f8 27\n01 d0\n69 c0 90 01 00 00\n31 d2\n39 c3\n0f 94 c2\n81 c2 6d 01 00 00\n39 cb\nbf 6e 01 00 00\n0f 44 fa\n44 01 f7\n48 8b 44 24 28\n8b 70 18\ne8 7f 0b 00 00\n89 c5\nb9 ff ff ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n49 be 00 00 00 00 01 00 00 00\n44 8b 54 24 24\n8b 74 24 14\n41 0f be 04 24\n83 f8 47\n0f 84 ac 00 00 00\n83 f8 67\n0f 85 ce 00 00 00\n48 8b 44 24 28\n48 63 70 14\n48 69 c6 1f 85 eb 51\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 25\n01 d0\n6b c0 64\n89 f2\n29 c2\n01 ca\n48 63 c2\n48 69 d0 1f 85 eb 51\n48 89 d7\n48 c1 ef 3f\n48 c1 fa 25\n01 fa\n6b d2 64\n29 d0\nba 02 00 00 00\n0f 88 95 01 00 00\n8b 74 24 14\ne9 ac 01 00 00\n48 89 4c 24 08\n48 8b 44 24 28\n48 63 48 14\n48 69 c1 1f 85 eb 51\n48 89 c2\n48 c1 ea 3f\n48 c1 f8 25\n01 d0\n6b d0 64\n89 c8\n29 d0\nba 02 00 00 00\n0f 89 78 01 00 00\n89 f7\n89 c6\nf7 de\n83 c0 64\n81 f9 94 f8 ff ff\n0f 4c c6\n89 fe\ne9 5f 01 00 00\n48 8b 44 24 28\n8b 40 14\nba 94 f8 ff ff\n29 ca\n39 d0\n40 0f 9c c5\n44 8d 9c 01 6c 07 00 00\nbf 04 00 00 00\n31 db\n31 c9\ne9 42 01 00 00\n48 63 c5\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c8\n89 c1\nc1 f9 02\nc1 e8 1f\n8d 44 01 01\nba 02 00 00 00\ne9 0e 01 00 00\n48 85 db\n74 22\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 73 e5 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\n31 ff\n80 7c 24 24 00\n40 0f 95 c7\n4c 89 c6\n48 89 ea\n48 8b 4c 24 28\n4c 8b 44 24 70\n44 8b 4c 24 4c\ne8 e5 f1 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n4d 01 f1\ne9 0f 09 00 00\n31 d2\nb0 43\neb 04\n31 d2\nb0 59\n31 ff\ne9 ce 00 00 00\n48 8b 44 24 28\n44 8b 58 14\n41 81 fb 94 f8 ff ff\n0f 9c c0\n41 81 c3 6c 07 00 00\n31 c9\nbf 04 00 00 00\n40 88 c5\n31 db\ne9 8e 01 00 00\n31 ff\nb8 18 00 00 00\n48 8b 6c 24 38\n8b 5c 24 14\ne9 5e 08 00 00\n85 c9\n0f 84 35 08 00 00\nc1 ed 1f\n45 69 db 10 27 00 00\n6b c0 64\n41 01 cb\n41 01 c3\nbf 09 00 00 00\nbb 14 00 00 00\ne9 2f 08 00 00\n41 bf 09 00 00 00\n8b 44 24 4c\nba 09 00 00 00\neb 20\nbf 94 f8 ff ff\n29 cf\n89 c1\nf7 d9\n83 c0 64\n39 fe\n0f 4c c1\n8b 74 24 14\neb 07\n8b 44 24 4c\n44 89 fa\n89 c5\nc1 ed 1f\n31 db\n31 c9\n41 89 c3\n89 d7\n89 e8\n24 01\n83 fe 4f\n0f 85 03 01 00 00\n84 c0\n0f 85 fb 00 00 00\n89 5c 24 14\n48 89 6c 24 38\n31 d2\n48 8b 44 24 08\n48 89 54 24 30\n89 fd\n4c 89 5c 24 08\n44 89 54 24 24\n4c 89 4c 24 18\n66 c7 44 24 53 20 25\n85 f6\n48 8d 4c 24 55\n74 0a\n40 88 74 24 55\n48 8d 4c 24 56\n88 01\nc6 41 01 00\n48 8d bc 24 a0 00 00 00\n48 8d 54 24 53\nbe 00 04 00 00\n48 8b 4c 24 28\ne8 7e e5 ff ff\n48 89 c3\n48 85 db\n0f 84 af 01 00 00\n48 ff cb\n31 c0\n45 85 ff\n41 0f 49 c7\n48 39 c3\n49 89 de\n4c 0f 42 f0\n4c 8b 4c 24 18\n4c 89 c9\n48 f7 d1\n49 39 ce\n0f 83 ce 07 00 00\n4c 8b 04 24\n4d 85 c0\n0f 84 aa 03 00 00\n48 39 c3\n0f 93 c0\n85 ed\n0f 85 43 03 00 00\n84 c0\n0f 85 3b 03 00 00\n49 63 ef\n48 29 dd\n41 83 fd 30\n0f 85 10 03 00 00\n48 85 ed\n0f 84 22 03 00 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 73 e3 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\ne9 fb 02 00 00\n44 89 da\nf7 da\n84 c0\n41 0f 44 d3\n4c 8d b4 24 97 00 00 00\n66 90\nf6 c3 01\n74 08\n41 c6 46 ff 3a\n49 ff ce\nd1 fb\n89 d0\n41 bb cd cc cc cc\n4c 0f af d8\n49 c1 eb 23\n43 8d 04 1b\n8d 04 80\n89 d6\n29 c6\n40 80 ce 30\n41 88 76 ff\n49 ff ce\n83 fa 09\n44 89 da\n77 c3\n85 db\n44 89 da\n75 bc\n44 39 ff\n41 0f 4c ff\n84 c9\n74 02\nb1 2b\n40 f6 c5 01\n40 b6 2d\n75 02\n89 ce\n41 83 fd 2d\n44 89 54 24 24\n48 89 6c 24 38\n4c 89 5c 24 08\n89 5c 24 14\n0f 85 a2 00 00 00\n40 84 f6\n0f 84 3e 05 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbb 01 00 00 00\n0f 47 d8\n4c 89 c9\n48 f7 d1\n48 39 cb\n0f 83 b1 06 00 00\n4d 85 c0\n74 5b\n40 88 74 24 40\n89 7c 24 30\n4c 89 4c 24 18\n83 f8 02\n72 29\n83 7c 24 30 00\n75 22\n49 63 ef\n48 ff cd\n74 1a\n0f 1f 40 00\nbf 20 00 00 00\n4c 89 c6\ne8 73 e2 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n0f b6 7c 24 40\n4c 89 c6\ne8 5d e2 ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n8b 7c 24 30\n49 01 d9\ne9 b3 04 00 00\n4c 8b 04 24\n4c 8b 4c 24 18\ne9 31 02 00 00\n48 63 cf\n4c 89 f0\n48 8d 94 24 97 00 00 00\n48 29 d0\n89 f2\nf6 da\n48 19 d2\n48 01 c2\n48 01 ca\n85 d2\n0f 8e ff 00 00 00\n4c 89 c8\n48 f7 d0\n41 83 fd 5f\n89 7c 24 30\n0f 85 06 02 00 00\n48 63 da\n48 39 c3\n0f 83 f5 05 00 00\n48 89 54 24 58\n40 88 74 24 40\n4c 89 4c 24 18\n4d 85 c0\n74 24\n48 85 db\n74 1f\n31 ed\n0f 1f 40 00\nbf 20 00 00 00\n4c 89 c6\ne8 c3 e1 ff ff\n4c 8b 04 24\n48 ff c5\n48 39 dd\n72 e7\n4c 8b 4c 24 18\n49 01 d9\n31 c0\n44 2b 7c 24 58\n44 0f 4e f8\n80 7c 24 40 00\n0f 84 00 04 00 00\n41 83 ff 01\nbd 01 00 00 00\n41 0f 47 ef\n4c 89 c8\n48 f7 d0\n48 39 c5\n4c 8b 5c 24 08\n8b 7c 24 30\n0f 83 7a 05 00 00\n4d 85 c0\n0f 84 45 03 00 00\n4c 89 4c 24 18\n85 ff\n0f 85 19 03 00 00\n41 83 ff 02\n0f 82 0f 03 00 00\n44 89 f8\n48 ff c8\n41 83 fd 30\n48 89 44 24 58\n0f 85 d7 02 00 00\n48 85 c0\n0f 84 f1 02 00 00\n31 db\n0f 1f 40 00\nbf 30 00 00 00\n4c 89 c6\ne8 23 e1 ff ff\n4c 8b 04 24\n48 ff c3\n48 3b 5c 24 58\n72 e5\ne9 cb 02 00 00\n40 84 f6\n0f 84 77 03 00 00\n31 c0\n45 85 ff\n41 0f 49 c7\n83 f8 01\nbd 01 00 00 00\n0f 47 e8\n4c 89 c9\n48 f7 d1\n48 39 cd\n0f 83 ea 04 00 00\n4d 85 c0\n0f 84 b5 02 00 00\n40 88 74 24 40\n89 7c 24 30\n4c 89 4c 24 18\n83 f8 02\n0f 82 7f 02 00 00\n83 7c 24 30 00\n0f 85 74 02 00 00\n49 63 df\n48 ff cb\n41 83 fd 30\n0f 85 19 02 00 00\n48 85 db\n0f 84 5b 02 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 93 e0 ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\ne9 40 02 00 00\n48 85 ed\n74 16\nbf 20 00 00 00\n4c 89 c6\ne8 73 e0 ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\nf6 44 24 30 01\n75 21\nf6 44 24 24 01\n75 2f\nba 01 00 00 00\n48 8d bc 24 a1 00 00 00\n48 89 de\n4c 89 c1\ne8 64 e2 ff ff\neb 28\n4c 89 c7\n48 8d b4 24 a1 00 00 00\n48 89 da\ne8 4f 04 00 00\neb 13\n4c 89 c7\n48 8d b4 24 a1 00 00 00\n48 89 da\ne8 8a 04 00 00\n4c 8b 04 24\n4c 8b 4c 24 18\n4d 01 f1\n49 be 00 00 00 00 01 00 00 00\n48 8b 6c 24 38\n4c 8b 5c 24 08\ne9 e4 03 00 00\n48 39 c1\n0f 83 f2 03 00 00\n40 84 f6\n0f 84 8e 00 00 00\n31 c9\n45 85 ff\n41 0f 49 cf\n83 f9 01\nbd 01 00 00 00\n0f 47 e9\n48 39 c5\n0f 83 cc 03 00 00\n4d 85 c0\n0f 84 e2 01 00 00\n48 89 6c 24 40\n48 89 54 24 58\n89 f5\n4c 89 4c 24 18\n83 f9 02\n0f 82 a9 01 00 00\n83 7c 24 30 00\n0f 85 9e 01 00 00\n49 63 df\n48 ff cb\n41 83 fd 30\n0f 85 6a 01 00 00\n48 85 db\n0f 84 85 01 00 00\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\nbf 30 00 00 00\n4c 89 c6\ne8 63 df ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\ne9 5b 01 00 00\n49 89 d7\ne9 78 01 00 00\n48 85 ed\n74 1e\n0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 33 df ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n84 db\n74 17\n4c 89 c7\n48 8b 74 24 68\n48 8b 54 24 30\ne8 34 03 00 00\ne9 ca f9 ff ff\n80 7c 24 24 00\n0f 84 4f 02 00 00\n4c 89 c7\n48 8b 74 24 68\n48 8b 54 24 30\ne8 62 03 00 00\ne9 a8 f9 ff ff\n48 85 ed\n74 1e\n0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 d3 de ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\nbf 0a 00 00 00\ne9 88 02 00 00\n48 85 ed\n74 21\n66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 a3 de ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\nbf 09 00 00 00\ne9 58 02 00 00\n48 85 db\n74 46\n66 66 2e 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 73 de ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\neb 23\n48 85 c0\n74 1e\n31 db\n90\nbf 20 00 00 00\n4c 89 c6\ne8 53 de ff ff\n4c 8b 04 24\n48 ff c3\n48 3b 5c 24 58\n72 e5\n0f b6 7c 24 40\n4c 89 c6\ne8 38 de ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n8b 7c 24 30\n49 01 e9\ne9 8e 00 00 00\n48 85 db\n74 1f\n66 0f 1f 84 00 00 00 00 00\nbf 20 00 00 00\n4c 89 c6\ne8 03 de ff ff\n4c 8b 04 24\n48 ff cb\n75 ea\n40 0f b6 fd\n4c 89 c6\ne8 ee dd ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n48 8b 54 24 58\n48 8b 6c 24 40\n49 89 d7\n49 01 e9\n4c 89 4c 24 18\n4d 85 c0\n74 24\n45 85 ff\n74 1f\n49 63 df\n31 ed\n90\nbf 30 00 00 00\n4c 89 c6\ne8 b3 dd ff ff\n4c 8b 04 24\n48 ff c5\n48 39 dd\n72 e7\n49 63 c7\n4c 8b 4c 24 18\n49 01 c1\n45 31 ff\n4c 8b 5c 24 08\n8b 7c 24 30\n48 8d 9c 24 97 00 00 00\n4c 29 f3\n31 c0\n45 85 ff\n41 0f 49 c7\n48 39 c3\n48 89 da\n48 0f 42 d0\n4c 89 c9\n48 f7 d1\n48 39 ca\n0f 83 69 01 00 00\n4d 85 c0\n0f 84 9d 00 00 00\n48 89 54 24 40\n4c 89 4c 24 18\n48 39 c3\n0f 93 c0\n85 ff\n75 4c\n84 c0\n75 48\n49 63 ef\n48 29 dd\n41 83 fd 30\n75 1e\n48 85 ed\n74 37\n90\nbf 30 00 00 00\n4c 89 c6\ne8 23 dd ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\neb 1e\n48 85 ed\n74 19\n0f 1f 00\nbf 20 00 00 00\n4c 89 c6\ne8 03 dd ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n80 7c 24 24 00\n74 10\n4c 89 c7\n4c 89 f6\n48 89 da\ne8 55 01 00 00\neb 13\nba 01 00 00 00\n4c 89 f7\n48 89 de\n4c 89 c1\ne8 f0 de ff ff\n4c 8b 04 24\n4c 8b 4c 24 18\n4c 8b 5c 24 08\n48 8b 54 24 40\n49 01 d1\ne9 95 00 00 00\nba 01 00 00 00\n48 8b 7c 24 68\n48 8b 74 24 30\ne9 59 f1 ff ff\n85 c0\n0f 84 b0 e9 ff ff\nc1 ed 1f\n45 6b db 64\n41 01 c3\nbf 06 00 00 00\nbb 04 00 00 00\nb8 4a 00 00 00\n89 c2\n80 e2 7f\n80 fa 18\n74 10\nb1 01\n80 fa 4a\n0f 84 f6 f7 ff ff\ne9 49 ea ff ff\n89 5c 24 14\n48 89 6c 24 38\ne9 18 f0 ff ff\n48 85 ed\n74 16\nbf 20 00 00 00\n4c 89 c6\ne8 46 dc ff ff\n4c 8b 04 24\n48 ff cd\n75 ea\n41 0f be 3c 24\n4c 89 c6\ne8 30 dc ff ff\n4c 8b 04 24\n4d 89 f1\n4c 8b 5c 24 08\n49 01 d9\n90\n49 be 00 00 00 00 01 00 00 00\n48 8b 6c 24 38\n8b 5c 24 14\n41 80 7c 24 01 00\n4d 8d 64 24 01\n0f 85 2c e9 ff ff\neb 03\n45 31 c9\n4c 89 c8\n48 81 c4 a8 04 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p208
S'.text:0000000000402560\n.text:0000000000402561\n.text:0000000000402563\n.text:0000000000402565\n.text:0000000000402567\n.text:0000000000402569\n.text:000000000040256a\n.text:0000000000402571\n.text:0000000000402576\n.text:000000000040257b\n.text:000000000040257e\n.text:0000000000402581\n.text:0000000000402585\n.text:0000000000402588\n.text:000000000040258d\n.text:0000000000402591\n.text:0000000000402594\n.text:0000000000402599\n.text:000000000040259d\n.text:00000000004025a2\n.text:00000000004025a5\n.text:00000000004025a7\n.text:00000000004025ac\n.text:00000000004025af\n.text:00000000004025b2\n.text:00000000004025b5\n.text:00000000004025b9\n.text:00000000004025be\n.text:00000000004025c4\n.text:00000000004025ce\n.text:00000000004025d1\n.text:00000000004025d5\n.text:00000000004025d7\n.text:00000000004025da\n.text:00000000004025df\n.text:00000000004025f0\n.text:00000000004025f5\n.text:00000000004025f8\n.text:00000000004025fa\n.text:00000000004025fe\n.text:0000000000402600\n.text:0000000000402604\n.text:0000000000402607\n.text:000000000040260a\n.text:000000000040260d\n.text:0000000000402610\n.text:0000000000402613\n.text:0000000000402616\n.text:000000000040261b\n.text:000000000040261e\n.text:0000000000402620\n.text:0000000000402623\n.text:0000000000402625\n.text:0000000000402628\n.text:000000000040262a\n.text:000000000040262d\n.text:0000000000402633\n.text:0000000000402636\n.text:0000000000402639\n.text:0000000000402640\n.text:0000000000402643\n.text:0000000000402645\n.text:0000000000402648\n.text:000000000040264a\n.text:000000000040264c\n.text:000000000040264f\n.text:0000000000402660\n.text:0000000000402665\n.text:0000000000402669\n.text:000000000040266b\n.text:000000000040266e\n.text:0000000000402670\n.text:0000000000402673\n.text:0000000000402676\n.text:0000000000402679\n.text:000000000040267c\n.text:000000000040267f\n.text:0000000000402684\n.text:0000000000402687\n.text:000000000040268a\n.text:000000000040268d\n.text:0000000000402690\n.text:0000000000402694\n.text:0000000000402697\n.text:0000000000402699\n.text:000000000040269b\n.text:00000000004026a0\n.text:00000000004026a3\n.text:00000000004026a6\n.text:00000000004026a9\n.text:00000000004026af\n.text:00000000004026c0\n.text:00000000004026c3\n.text:00000000004026c9\n.text:00000000004026cc\n.text:00000000004026ce\n.text:00000000004026d0\n.text:00000000004026d6\n.text:00000000004026db\n.text:00000000004026dd\n.text:00000000004026e2\n.text:00000000004026e5\n.text:00000000004026ea\n.text:00000000004026ec\n.text:00000000004026ef\n.text:00000000004026f1\n.text:00000000004026f4\n.text:00000000004026f8\n.text:00000000004026fe\n.text:0000000000402701\n.text:0000000000402704\n.text:0000000000402707\n.text:000000000040270a\n.text:000000000040270c\n.text:0000000000402711\n.text:0000000000402716\n.text:0000000000402719\n.text:000000000040271b\n.text:000000000040271e\n.text:0000000000402720\n.text:0000000000402723\n.text:0000000000402725\n.text:0000000000402727\n.text:000000000040272c\n.text:000000000040272f\n.text:0000000000402735\n.text:0000000000402737\n.text:0000000000402739\n.text:000000000040273e\n.text:0000000000402740\n.text:0000000000402747\n.text:0000000000402749\n.text:000000000040274c\n.text:0000000000402752\n.text:0000000000402757\n.text:000000000040275b\n.text:0000000000402760\n.text:0000000000402765\n.text:000000000040276a\n.text:000000000040276d\n.text:0000000000402770\n.text:0000000000402772\n.text:0000000000402775\n.text:000000000040277b\n.text:000000000040277f\n.text:0000000000402782\n.text:0000000000402785\n.text:000000000040278a\n.text:000000000040278c\n.text:000000000040278e\n.text:0000000000402794\n.text:0000000000402799\n.text:000000000040279c\n.text:000000000040279e\n.text:00000000004027a1\n.text:00000000004027a8\n.text:00000000004027ab\n.text:00000000004027af\n.text:00000000004027b2\n.text:00000000004027b6\n.text:00000000004027b8\n.text:00000000004027bb\n.text:00000000004027bf\n.text:00000000004027c1\n.text:00000000004027c7\n.text:00000000004027c9\n.text:00000000004027cb\n.text:00000000004027ce\n.text:00000000004027d4\n.text:00000000004027d6\n.text:00000000004027db\n.text:00000000004027de\n.text:00000000004027e1\n.text:00000000004027e6\n.text:00000000004027e9\n.text:00000000004027ec\n.text:00000000004027f1\n.text:00000000004027f3\n.text:00000000004027f6\n.text:00000000004027f9\n.text:00000000004027fb\n.text:00000000004027fe\n.text:0000000000402803\n.text:0000000000402805\n.text:0000000000402807\n.text:000000000040280a\n.text:000000000040280c\n.text:000000000040280e\n.text:0000000000402814\n.text:0000000000402816\n.text:0000000000402818\n.text:000000000040281d\n.text:0000000000402820\n.text:0000000000402825\n.text:0000000000402827\n.text:0000000000402829\n.text:000000000040282f\n.text:0000000000402831\n.text:0000000000402834\n.text:0000000000402838\n.text:000000000040283b\n.text:0000000000402840\n.text:0000000000402843\n.text:0000000000402846\n.text:0000000000402849\n.text:000000000040284c\n.text:0000000000402852\n.text:0000000000402855\n.text:000000000040285b\n.text:0000000000402860\n.text:0000000000402863\n.text:0000000000402866\n.text:000000000040286c\n.text:000000000040286f\n.text:0000000000402872\n.text:0000000000402876\n.text:000000000040287c\n.text:000000000040287f\n.text:0000000000402885\n.text:000000000040288a\n.text:000000000040288d\n.text:0000000000402892\n.text:0000000000402896\n.text:0000000000402899\n.text:000000000040289b\n.text:00000000004028a0\n.text:00000000004028a5\n.text:00000000004028b0\n.text:00000000004028b3\n.text:00000000004028b8\n.text:00000000004028ba\n.text:00000000004028bc\n.text:00000000004028be\n.text:00000000004028c4\n.text:00000000004028c7\n.text:00000000004028cc\n.text:00000000004028d0\n.text:00000000004028d6\n.text:00000000004028da\n.text:00000000004028df\n.text:00000000004028e5\n.text:00000000004028ea\n.text:00000000004028ee\n.text:00000000004028f5\n.text:00000000004028f9\n.text:00000000004028fb\n.text:00000000004028fd\n.text:0000000000402900\n.text:0000000000402903\n.text:0000000000402905\n.text:000000000040290c\n.text:0000000000402910\n.text:0000000000402913\n.text:0000000000402916\n.text:0000000000402919\n.text:000000000040291d\n.text:0000000000402920\n.text:0000000000402922\n.text:0000000000402929\n.text:000000000040292d\n.text:000000000040292f\n.text:0000000000402932\n.text:0000000000402934\n.text:0000000000402937\n.text:000000000040293a\n.text:000000000040293c\n.text:000000000040293f\n.text:0000000000402942\n.text:0000000000402944\n.text:0000000000402946\n.text:0000000000402948\n.text:000000000040294f\n.text:0000000000402952\n.text:0000000000402956\n.text:0000000000402959\n.text:000000000040295e\n.text:0000000000402960\n.text:0000000000402965\n.text:0000000000402967\n.text:0000000000402969\n.text:000000000040296f\n.text:0000000000402971\n.text:0000000000402973\n.text:0000000000402976\n.text:0000000000402978\n.text:000000000040297a\n.text:000000000040297f\n.text:0000000000402981\n.text:0000000000402983\n.text:0000000000402989\n.text:000000000040298b\n.text:000000000040298d\n.text:0000000000402990\n.text:0000000000402992\n.text:0000000000402994\n.text:0000000000402999\n.text:000000000040299c\n.text:00000000004029a2\n.text:00000000004029a5\n.text:00000000004029ab\n.text:00000000004029b0\n.text:00000000004029b5\n.text:00000000004029b9\n.text:00000000004029bf\n.text:00000000004029c3\n.text:00000000004029c6\n.text:00000000004029cd\n.text:00000000004029d0\n.text:00000000004029d4\n.text:00000000004029d8\n.text:00000000004029db\n.text:00000000004029df\n.text:00000000004029e1\n.text:00000000004029e4\n.text:00000000004029e6\n.text:00000000004029e9\n.text:00000000004029ec\n.text:00000000004029f0\n.text:00000000004029f5\n.text:00000000004029f7\n.text:00000000004029f9\n.text:00000000004029ff\n.text:0000000000402a04\n.text:0000000000402a09\n.text:0000000000402a0b\n.text:0000000000402a0d\n.text:0000000000402a13\n.text:0000000000402a18\n.text:0000000000402a1d\n.text:0000000000402a1f\n.text:0000000000402a22\n.text:0000000000402a28\n.text:0000000000402a2d\n.text:0000000000402a32\n.text:0000000000402a35\n.text:0000000000402a3a\n.text:0000000000402a3f\n.text:0000000000402a44\n.text:0000000000402a46\n.text:0000000000402a49\n.text:0000000000402a4f\n.text:0000000000402a54\n.text:0000000000402a58\n.text:0000000000402a5d\n.text:0000000000402a5f\n.text:0000000000402a62\n.text:0000000000402a68\n.text:0000000000402a6d\n.text:0000000000402a72\n.text:0000000000402a75\n.text:0000000000402a7a\n.text:0000000000402a7f\n.text:0000000000402a81\n.text:0000000000402a84\n.text:0000000000402a8a\n.text:0000000000402a8e\n.text:0000000000402a93\n.text:0000000000402a99\n.text:0000000000402a9d\n.text:0000000000402aa3\n.text:0000000000402aa8\n.text:0000000000402aac\n.text:0000000000402ab0\n.text:0000000000402ab2\n.text:0000000000402ab9\n.text:0000000000402abc\n.text:0000000000402ac0\n.text:0000000000402ac4\n.text:0000000000402ac6\n.text:0000000000402ac8\n.text:0000000000402acb\n.text:0000000000402acd\n.text:0000000000402ad2\n.text:0000000000402ad4\n.text:0000000000402ad6\n.text:0000000000402ad8\n.text:0000000000402ada\n.text:0000000000402ae0\n.text:0000000000402ae2\n.text:0000000000402ae4\n.text:0000000000402ae6\n.text:0000000000402aeb\n.text:0000000000402aed\n.text:0000000000402af0\n.text:0000000000402af6\n.text:0000000000402afb\n.text:0000000000402b00\n.text:0000000000402b02\n.text:0000000000402b07\n.text:0000000000402b0c\n.text:0000000000402b11\n.text:0000000000402b13\n.text:0000000000402b18\n.text:0000000000402b1b\n.text:0000000000402b1f\n.text:0000000000402b21\n.text:0000000000402b23\n.text:0000000000402b26\n.text:0000000000402b2b\n.text:0000000000402b30\n.text:0000000000402b35\n.text:0000000000402b3a\n.text:0000000000402b3f\n.text:0000000000402b44\n.text:0000000000402b49\n.text:0000000000402b4e\n.text:0000000000402b52\n.text:0000000000402b55\n.text:0000000000402b59\n.text:0000000000402b5c\n.text:0000000000402b5f\n.text:0000000000402b63\n.text:0000000000402b66\n.text:0000000000402b69\n.text:0000000000402b6c\n.text:0000000000402b72\n.text:0000000000402b75\n.text:0000000000402b7b\n.text:0000000000402b7e\n.text:0000000000402b84\n.text:0000000000402b87\n.text:0000000000402b8a\n.text:0000000000402b8e\n.text:0000000000402b94\n.text:0000000000402b97\n.text:0000000000402b9d\n.text:0000000000402ba0\n.text:0000000000402ba5\n.text:0000000000402ba8\n.text:0000000000402bad\n.text:0000000000402bb1\n.text:0000000000402bb4\n.text:0000000000402bb6\n.text:0000000000402bbb\n.text:0000000000402bbd\n.text:0000000000402bc0\n.text:0000000000402bc6\n.text:0000000000402bcb\n.text:0000000000402bd0\n.text:0000000000402bd3\n.text:0000000000402bd6\n.text:0000000000402bd9\n.text:0000000000402bdb\n.text:0000000000402bdd\n.text:0000000000402bdf\n.text:0000000000402be2\n.text:0000000000402be8\n.text:0000000000402bed\n.text:0000000000402bf2\n.text:0000000000402bf5\n.text:0000000000402bf8\n.text:0000000000402bfb\n.text:0000000000402bfe\n.text:0000000000402c00\n.text:0000000000402c07\n.text:0000000000402c0b\n.text:0000000000402c0f\n.text:0000000000402c11\n.text:0000000000402c14\n.text:0000000000402c17\n.text:0000000000402c19\n.text:0000000000402c20\n.text:0000000000402c22\n.text:0000000000402c24\n.text:0000000000402c26\n.text:0000000000402c29\n.text:0000000000402c2b\n.text:0000000000402c2e\n.text:0000000000402c35\n.text:0000000000402c39\n.text:0000000000402c3b\n.text:0000000000402c3d\n.text:0000000000402c40\n.text:0000000000402c43\n.text:0000000000402c45\n.text:0000000000402c4a\n.text:0000000000402c4f\n.text:0000000000402c51\n.text:0000000000402c54\n.text:0000000000402c56\n.text:0000000000402c58\n.text:0000000000402c5a\n.text:0000000000402c5f\n.text:0000000000402c62\n.text:0000000000402c68\n.text:0000000000402c6b\n.text:0000000000402c71\n.text:0000000000402c73\n.text:0000000000402c80\n.text:0000000000402c85\n.text:0000000000402c8a\n.text:0000000000402c8f\n.text:0000000000402c91\n.text:0000000000402ca0\n.text:0000000000402ca2\n.text:0000000000402ca5\n.text:0000000000402ca8\n.text:0000000000402cac\n.text:0000000000402cb0\n.text:0000000000402cb2\n.text:0000000000402cb6\n.text:0000000000402cb9\n.text:0000000000402cbe\n.text:0000000000402cc2\n.text:0000000000402cc5\n.text:0000000000402cc8\n.text:0000000000402ccc\n.text:0000000000402ccf\n.text:0000000000402cd2\n.text:0000000000402cd5\n.text:0000000000402cdb\n.text:0000000000402cde\n.text:0000000000402ce4\n.text:0000000000402ce9\n.text:0000000000402cee\n.text:0000000000402cf1\n.text:0000000000402cf4\n.text:0000000000402cf6\n.text:0000000000402cf8\n.text:0000000000402cfa\n.text:0000000000402cfc\n.text:0000000000402cff\n.text:0000000000402d02\n.text:0000000000402d05\n.text:0000000000402d09\n.text:0000000000402d0b\n.text:0000000000402d0e\n.text:0000000000402d10\n.text:0000000000402d12\n.text:0000000000402d15\n.text:0000000000402d20\n.text:0000000000402d25\n.text:0000000000402d28\n.text:0000000000402d2d\n.text:0000000000402d31\n.text:0000000000402d34\n.text:0000000000402d36\n.text:0000000000402d38\n.text:0000000000402d3b\n.text:0000000000402d3d\n.text:0000000000402d3f\n.text:0000000000402d42\n.text:0000000000402d50\n.text:0000000000402d55\n.text:0000000000402d58\n.text:0000000000402d5d\n.text:0000000000402d61\n.text:0000000000402d64\n.text:0000000000402d66\n.text:0000000000402d6b\n.text:0000000000402d6d\n.text:0000000000402d72\n.text:0000000000402d75\n.text:0000000000402d78\n.text:0000000000402d7b\n.text:0000000000402d80\n.text:0000000000402d85\n.text:0000000000402d88\n.text:0000000000402d8b\n.text:0000000000402d8e\n.text:0000000000402d93\n.text:0000000000402d98\n.text:0000000000402d9d\n.text:0000000000402da2\n.text:0000000000402da7\n.text:0000000000402dac\n.text:0000000000402db1\n.text:0000000000402db6\n.text:0000000000402dbb\n.text:0000000000402dbf\n.text:0000000000402dc1\n.text:0000000000402dc4\n.text:0000000000402dc8\n.text:0000000000402dcb\n.text:0000000000402dce\n.text:0000000000402dd2\n.text:0000000000402dd5\n.text:0000000000402dd8\n.text:0000000000402ddb\n.text:0000000000402de1\n.text:0000000000402de4\n.text:0000000000402dea\n.text:0000000000402def\n.text:0000000000402df2\n.text:0000000000402df8\n.text:0000000000402dfb\n.text:0000000000402e00\n.text:0000000000402e04\n.text:0000000000402e0a\n.text:0000000000402e0d\n.text:0000000000402e13\n.text:0000000000402e20\n.text:0000000000402e25\n.text:0000000000402e28\n.text:0000000000402e2d\n.text:0000000000402e31\n.text:0000000000402e34\n.text:0000000000402e36\n.text:0000000000402e3b\n.text:0000000000402e3d\n.text:0000000000402e3f\n.text:0000000000402e45\n.text:0000000000402e47\n.text:0000000000402e49\n.text:0000000000402e4c\n.text:0000000000402e4e\n.text:0000000000402e50\n.text:0000000000402e55\n.text:0000000000402e57\n.text:0000000000402e5a\n.text:0000000000402e60\n.text:0000000000402e62\n.text:0000000000402e64\n.text:0000000000402e69\n.text:0000000000402e6b\n.text:0000000000402e6e\n.text:0000000000402e74\n.text:0000000000402e79\n.text:0000000000402e7e\n.text:0000000000402e81\n.text:0000000000402e86\n.text:0000000000402e8b\n.text:0000000000402e8d\n.text:0000000000402e90\n.text:0000000000402e96\n.text:0000000000402e9b\n.text:0000000000402e9e\n.text:0000000000402ea0\n.text:0000000000402ea2\n.text:0000000000402ea5\n.text:0000000000402eab\n.text:0000000000402eb0\n.text:0000000000402eb5\n.text:0000000000402eb9\n.text:0000000000402ebd\n.text:0000000000402ec1\n.text:0000000000402ec4\n.text:0000000000402ec9\n.text:0000000000402ece\n.text:0000000000402ed0\n.text:0000000000402ed3\n.text:0000000000402ed9\n.text:0000000000402ede\n.text:0000000000402ee1\n.text:0000000000402ee3\n.text:0000000000402ee5\n.text:0000000000402ee8\n.text:0000000000402eec\n.text:0000000000402ef2\n.text:0000000000402ef7\n.text:0000000000402efb\n.text:0000000000402f00\n.text:0000000000402f06\n.text:0000000000402f0a\n.text:0000000000402f10\n.text:0000000000402f16\n.text:0000000000402f1b\n.text:0000000000402f1d\n.text:0000000000402f20\n.text:0000000000402f26\n.text:0000000000402f2b\n.text:0000000000402f30\n.text:0000000000402f34\n.text:0000000000402f38\n.text:0000000000402f3c\n.text:0000000000402f3f\n.text:0000000000402f44\n.text:0000000000402f49\n.text:0000000000402f4b\n.text:0000000000402f4e\n.text:0000000000402f52\n.text:0000000000402f55\n.text:0000000000402f5a\n.text:0000000000402f5d\n.text:0000000000402f60\n.text:0000000000402f63\n.text:0000000000402f66\n.text:0000000000402f6c\n.text:0000000000402f6f\n.text:0000000000402f75\n.text:0000000000402f7a\n.text:0000000000402f7d\n.text:0000000000402f80\n.text:0000000000402f86\n.text:0000000000402f89\n.text:0000000000402f8c\n.text:0000000000402f90\n.text:0000000000402f96\n.text:0000000000402f99\n.text:0000000000402f9f\n.text:0000000000402fa0\n.text:0000000000402fa5\n.text:0000000000402fa8\n.text:0000000000402fad\n.text:0000000000402fb1\n.text:0000000000402fb4\n.text:0000000000402fb6\n.text:0000000000402fbb\n.text:0000000000402fc0\n.text:0000000000402fc5\n.text:0000000000402fca\n.text:0000000000402fcf\n.text:0000000000402fd3\n.text:0000000000402fdb\n.text:0000000000402fde\n.text:0000000000402fe2\n.text:0000000000402fe6\n.text:0000000000402fee\n.text:0000000000402ff6\n.text:0000000000402ffe\n.text:0000000000403006\n.text:000000000040300b\n.text:0000000000403010\n.text:0000000000403013\n.text:0000000000403017\n.text:000000000040301a\n.text:000000000040301d\n.text:0000000000403025\n.text:0000000000403030\n.text:000000000040303a\n.text:000000000040303d\n.text:0000000000403040\n.text:0000000000403043\n.text:0000000000403047\n.text:000000000040304b\n.text:000000000040304e\n.text:0000000000403050\n.text:0000000000403053\n.text:0000000000403055\n.text:0000000000403057\n.text:000000000040305a\n.text:000000000040305c\n.text:000000000040305e\n.text:0000000000403061\n.text:0000000000403064\n.text:0000000000403067\n.text:000000000040306b\n.text:000000000040306e\n.text:0000000000403072\n.text:0000000000403076\n.text:0000000000403079\n.text:000000000040307b\n.text:0000000000403080\n.text:0000000000403082\n.text:0000000000403086\n.text:000000000040308b\n.text:0000000000403090\n.text:0000000000403093\n.text:0000000000403098\n.text:000000000040309c\n.text:00000000004030a1\n.text:00000000004030a3\n.text:00000000004030a6\n.text:00000000004030aa\n.text:00000000004030ad\n.text:00000000004030b2\n.text:00000000004030b5\n.text:00000000004030b8\n.text:00000000004030bb\n.text:00000000004030be\n.text:00000000004030c4\n.text:00000000004030c7\n.text:00000000004030cd\n.text:00000000004030d2\n.text:00000000004030d5\n.text:00000000004030d8\n.text:00000000004030de\n.text:00000000004030e1\n.text:00000000004030e4\n.text:00000000004030e8\n.text:00000000004030ee\n.text:00000000004030f1\n.text:00000000004030f7\n.text:0000000000403100\n.text:0000000000403105\n.text:0000000000403108\n.text:000000000040310d\n.text:0000000000403111\n.text:0000000000403114\n.text:0000000000403116\n.text:000000000040311b\n.text:0000000000403120\n.text:0000000000403125\n.text:0000000000403128\n.text:000000000040312b\n.text:000000000040312d\n.text:0000000000403134\n.text:0000000000403138\n.text:000000000040313c\n.text:000000000040313e\n.text:0000000000403141\n.text:0000000000403144\n.text:0000000000403146\n.text:000000000040314d\n.text:000000000040314f\n.text:0000000000403151\n.text:0000000000403153\n.text:0000000000403158\n.text:000000000040315d\n.text:000000000040315f\n.text:0000000000403162\n.text:0000000000403168\n.text:000000000040316d\n.text:0000000000403172\n.text:0000000000403175\n.text:000000000040317a\n.text:000000000040317f\n.text:0000000000403181\n.text:0000000000403184\n.text:000000000040318a\n.text:000000000040318c\n.text:000000000040318e\n.text:0000000000403193\n.text:0000000000403196\n.text:000000000040319c\n.text:000000000040319e\n.text:00000000004031a0\n.text:00000000004031a5\n.text:00000000004031a7\n.text:00000000004031ac\n.text:00000000004031af\n.text:00000000004031b1\n.text:00000000004031b4\n.text:00000000004031bb\n.text:00000000004031be\n.text:00000000004031c2\n.text:00000000004031c5\n.text:00000000004031c9\n.text:00000000004031cb\n.text:00000000004031ce\n.text:00000000004031d2\n.text:00000000004031d4\n.text:00000000004031da\n.text:00000000004031dc\n.text:00000000004031de\n.text:00000000004031e1\n.text:00000000004031e7\n.text:00000000004031e9\n.text:00000000004031ee\n.text:00000000004031f1\n.text:00000000004031f4\n.text:00000000004031f9\n.text:00000000004031fc\n.text:0000000000403201\n.text:0000000000403203\n.text:0000000000403208\n.text:000000000040320c\n.text:0000000000403211\n.text:000000000040321b\n.text:0000000000403220\n.text:0000000000403224\n.text:0000000000403229\n.text:000000000040322c\n.text:0000000000403232\n.text:0000000000403235\n.text:000000000040323b\n.text:0000000000403240\n.text:0000000000403244\n.text:000000000040324b\n.text:000000000040324e\n.text:0000000000403252\n.text:0000000000403256\n.text:0000000000403258\n.text:000000000040325b\n.text:000000000040325d\n.text:000000000040325f\n.text:0000000000403261\n.text:0000000000403264\n.text:000000000040326b\n.text:000000000040326e\n.text:0000000000403272\n.text:0000000000403276\n.text:0000000000403278\n.text:000000000040327b\n.text:000000000040327d\n.text:0000000000403282\n.text:0000000000403288\n.text:000000000040328c\n.text:0000000000403291\n.text:0000000000403296\n.text:000000000040329b\n.text:000000000040329f\n.text:00000000004032a6\n.text:00000000004032a9\n.text:00000000004032ad\n.text:00000000004032b1\n.text:00000000004032b3\n.text:00000000004032b6\n.text:00000000004032b8\n.text:00000000004032ba\n.text:00000000004032bf\n.text:00000000004032c5\n.text:00000000004032c7\n.text:00000000004032c9\n.text:00000000004032cb\n.text:00000000004032ce\n.text:00000000004032d4\n.text:00000000004032d7\n.text:00000000004032d9\n.text:00000000004032de\n.text:00000000004032e3\n.text:00000000004032e6\n.text:00000000004032eb\n.text:00000000004032ed\n.text:00000000004032ef\n.text:00000000004032f3\n.text:00000000004032fb\n.text:0000000000403300\n.text:0000000000403302\n.text:0000000000403304\n.text:0000000000403309\n.text:000000000040330c\n.text:0000000000403313\n.text:0000000000403317\n.text:0000000000403319\n.text:000000000040331b\n.text:000000000040331e\n.text:0000000000403321\n.text:0000000000403325\n.text:000000000040332a\n.text:000000000040332f\n.text:0000000000403332\n.text:0000000000403334\n.text:0000000000403340\n.text:0000000000403345\n.text:0000000000403348\n.text:000000000040334d\n.text:0000000000403351\n.text:0000000000403354\n.text:0000000000403356\n.text:0000000000403358\n.text:000000000040335d\n.text:0000000000403361\n.text:0000000000403364\n.text:0000000000403367\n.text:000000000040336c\n.text:0000000000403371\n.text:0000000000403376\n.text:000000000040337b\n.text:000000000040337f\n.text:0000000000403384\n.text:0000000000403389\n.text:000000000040338c\n.text:0000000000403391\n.text:0000000000403393\n.text:0000000000403395\n.text:0000000000403397\n.text:0000000000403399\n.text:000000000040339b\n.text:000000000040339d\n.text:00000000004033a2\n.text:00000000004033a7\n.text:00000000004033ab\n.text:00000000004033b2\n.text:00000000004033b5\n.text:00000000004033bc\n.text:00000000004033be\n.text:00000000004033c3\n.text:00000000004033c6\n.text:00000000004033c8\n.text:00000000004033cd\n.text:00000000004033cf\n.text:00000000004033d4\n.text:00000000004033d9\n.text:00000000004033dd\n.text:00000000004033e2\n.text:00000000004033e4\n.text:00000000004033ea\n.text:00000000004033ed\n.text:00000000004033f4\n.text:00000000004033f7\n.text:00000000004033fa\n.text:00000000004033fd\n.text:0000000000403402\n.text:0000000000403407\n.text:000000000040340c\n.text:0000000000403412\n.text:0000000000403416\n.text:000000000040341b\n.text:000000000040341d\n.text:0000000000403422\n.text:0000000000403424\n.text:0000000000403426\n.text:0000000000403428\n.text:000000000040342b\n.text:000000000040342d\n.text:0000000000403430\n.text:0000000000403434\n.text:0000000000403436\n.text:000000000040343a\n.text:000000000040343d\n.text:000000000040343f\n.text:0000000000403442\n.text:0000000000403444\n.text:0000000000403446\n.text:0000000000403449\n.text:000000000040344b\n.text:000000000040344d\n.text:000000000040344f\n.text:0000000000403452\n.text:0000000000403458\n.text:000000000040345a\n.text:0000000000403460\n.text:0000000000403464\n.text:0000000000403469\n.text:000000000040346b\n.text:0000000000403470\n.text:0000000000403475\n.text:0000000000403477\n.text:000000000040347c\n.text:0000000000403481\n.text:0000000000403486\n.text:000000000040348d\n.text:000000000040348f\n.text:0000000000403494\n.text:0000000000403496\n.text:000000000040349b\n.text:00000000004034a0\n.text:00000000004034a2\n.text:00000000004034a6\n.text:00000000004034ae\n.text:00000000004034b3\n.text:00000000004034b8\n.text:00000000004034bd\n.text:00000000004034c2\n.text:00000000004034c5\n.text:00000000004034c8\n.text:00000000004034ce\n.text:00000000004034d1\n.text:00000000004034d3\n.text:00000000004034d6\n.text:00000000004034da\n.text:00000000004034dd\n.text:00000000004034e0\n.text:00000000004034e4\n.text:00000000004034e9\n.text:00000000004034ec\n.text:00000000004034ef\n.text:00000000004034f2\n.text:00000000004034f8\n.text:00000000004034fc\n.text:00000000004034ff\n.text:0000000000403505\n.text:0000000000403508\n.text:000000000040350b\n.text:000000000040350d\n.text:0000000000403513\n.text:0000000000403515\n.text:000000000040351b\n.text:000000000040351e\n.text:0000000000403521\n.text:0000000000403525\n.text:000000000040352b\n.text:000000000040352e\n.text:0000000000403534\n.text:0000000000403540\n.text:0000000000403545\n.text:0000000000403548\n.text:000000000040354d\n.text:0000000000403551\n.text:0000000000403554\n.text:0000000000403556\n.text:000000000040355b\n.text:000000000040355e\n.text:0000000000403560\n.text:0000000000403562\n.text:0000000000403566\n.text:000000000040356e\n.text:0000000000403570\n.text:0000000000403573\n.text:0000000000403575\n.text:000000000040357a\n.text:000000000040357d\n.text:000000000040357f\n.text:0000000000403581\n.text:0000000000403587\n.text:000000000040358b\n.text:000000000040358f\n.text:0000000000403593\n.text:0000000000403596\n.text:0000000000403598\n.text:000000000040359a\n.text:000000000040359e\n.text:00000000004035a2\n.text:00000000004035a5\n.text:00000000004035a8\n.text:00000000004035ab\n.text:00000000004035ad\n.text:00000000004035af\n.text:00000000004035b2\n.text:00000000004035b4\n.text:00000000004035b7\n.text:00000000004035bb\n.text:00000000004035bd\n.text:00000000004035bf\n.text:00000000004035c1\n.text:00000000004035c5\n.text:00000000004035c8\n.text:00000000004035ca\n.text:00000000004035cc\n.text:00000000004035d0\n.text:00000000004035d5\n.text:00000000004035da\n.text:00000000004035df\n.text:00000000004035e3\n.text:00000000004035e9\n.text:00000000004035ec\n.text:00000000004035f2\n.text:00000000004035f4\n.text:00000000004035f7\n.text:00000000004035fb\n.text:00000000004035fe\n.text:0000000000403603\n.text:0000000000403606\n.text:0000000000403609\n.text:000000000040360c\n.text:000000000040360f\n.text:0000000000403615\n.text:0000000000403618\n.text:000000000040361a\n.text:000000000040361f\n.text:0000000000403623\n.text:0000000000403628\n.text:000000000040362b\n.text:000000000040362d\n.text:0000000000403632\n.text:0000000000403634\n.text:0000000000403637\n.text:000000000040363a\n.text:000000000040363c\n.text:0000000000403640\n.text:0000000000403645\n.text:0000000000403648\n.text:000000000040364d\n.text:0000000000403651\n.text:0000000000403654\n.text:0000000000403656\n.text:000000000040365b\n.text:000000000040365e\n.text:0000000000403663\n.text:0000000000403667\n.text:000000000040366c\n.text:0000000000403671\n.text:0000000000403675\n.text:0000000000403678\n.text:000000000040367d\n.text:0000000000403681\n.text:0000000000403686\n.text:000000000040368b\n.text:000000000040368e\n.text:0000000000403691\n.text:0000000000403699\n.text:000000000040369c\n.text:000000000040369e\n.text:00000000004036a0\n.text:00000000004036a3\n.text:00000000004036a6\n.text:00000000004036a9\n.text:00000000004036ab\n.text:00000000004036b1\n.text:00000000004036b4\n.text:00000000004036b7\n.text:00000000004036bb\n.text:00000000004036bf\n.text:00000000004036c5\n.text:00000000004036c8\n.text:00000000004036cb\n.text:00000000004036d1\n.text:00000000004036d6\n.text:00000000004036db\n.text:00000000004036e0\n.text:00000000004036e3\n.text:00000000004036e5\n.text:00000000004036e8\n.text:00000000004036ea\n.text:00000000004036ec\n.text:00000000004036f0\n.text:00000000004036f5\n.text:00000000004036f8\n.text:00000000004036fd\n.text:0000000000403701\n.text:0000000000403704\n.text:0000000000403707\n.text:0000000000403709\n.text:000000000040370e\n.text:0000000000403711\n.text:0000000000403713\n.text:0000000000403718\n.text:000000000040371c\n.text:0000000000403721\n.text:0000000000403727\n.text:000000000040372b\n.text:0000000000403730\n.text:0000000000403734\n.text:0000000000403737\n.text:000000000040373a\n.text:000000000040373d\n.text:0000000000403742\n.text:0000000000403746\n.text:000000000040374c\n.text:000000000040374f\n.text:0000000000403755\n.text:000000000040375a\n.text:000000000040375c\n.text:0000000000403762\n.text:0000000000403766\n.text:000000000040376c\n.text:000000000040376f\n.text:0000000000403772\n.text:0000000000403776\n.text:000000000040377b\n.text:0000000000403781\n.text:0000000000403784\n.text:000000000040378a\n.text:000000000040378c\n.text:0000000000403790\n.text:0000000000403795\n.text:0000000000403798\n.text:000000000040379d\n.text:00000000004037a1\n.text:00000000004037a4\n.text:00000000004037a9\n.text:00000000004037ab\n.text:00000000004037b0\n.text:00000000004037b3\n.text:00000000004037b9\n.text:00000000004037bb\n.text:00000000004037be\n.text:00000000004037c2\n.text:00000000004037c5\n.text:00000000004037ca\n.text:00000000004037cd\n.text:00000000004037d0\n.text:00000000004037d3\n.text:00000000004037d6\n.text:00000000004037dc\n.text:00000000004037df\n.text:00000000004037e5\n.text:00000000004037ea\n.text:00000000004037ee\n.text:00000000004037f3\n.text:00000000004037f6\n.text:00000000004037fc\n.text:0000000000403801\n.text:0000000000403807\n.text:000000000040380a\n.text:000000000040380d\n.text:0000000000403811\n.text:0000000000403817\n.text:000000000040381a\n.text:0000000000403820\n.text:0000000000403825\n.text:0000000000403828\n.text:000000000040382d\n.text:0000000000403831\n.text:0000000000403834\n.text:0000000000403836\n.text:000000000040383b\n.text:000000000040383e\n.text:0000000000403840\n.text:0000000000403845\n.text:0000000000403848\n.text:000000000040384d\n.text:0000000000403851\n.text:0000000000403854\n.text:0000000000403856\n.text:000000000040385b\n.text:000000000040385d\n.text:0000000000403862\n.text:0000000000403864\n.text:0000000000403869\n.text:0000000000403871\n.text:0000000000403874\n.text:0000000000403877\n.text:000000000040387c\n.text:000000000040387e\n.text:0000000000403881\n.text:0000000000403889\n.text:000000000040388c\n.text:0000000000403891\n.text:0000000000403893\n.text:0000000000403896\n.text:000000000040389e\n.text:00000000004038a1\n.text:00000000004038a6\n.text:00000000004038aa\n.text:00000000004038af\n.text:00000000004038b2\n.text:00000000004038bc\n.text:00000000004038c1\n.text:00000000004038c6\n.text:00000000004038cb\n.text:00000000004038ce\n.text:00000000004038d4\n.text:00000000004038d7\n.text:00000000004038dd\n.text:00000000004038df\n.text:00000000004038e2\n.text:00000000004038e6\n.text:00000000004038e9\n.text:00000000004038ee\n.text:00000000004038f1\n.text:00000000004038f4\n.text:00000000004038fa\n.text:00000000004038fd\n.text:0000000000403903\n.text:0000000000403908\n.text:000000000040390d\n.text:000000000040390f\n.text:0000000000403914\n.text:0000000000403917\n.text:000000000040391d\n.text:0000000000403922\n.text:0000000000403928\n.text:000000000040392b\n.text:000000000040392e\n.text:0000000000403932\n.text:0000000000403938\n.text:000000000040393b\n.text:0000000000403941\n.text:0000000000403950\n.text:0000000000403955\n.text:0000000000403958\n.text:000000000040395d\n.text:0000000000403961\n.text:0000000000403964\n.text:0000000000403966\n.text:000000000040396b\n.text:000000000040396e\n.text:0000000000403973\n.text:0000000000403976\n.text:0000000000403978\n.text:0000000000403980\n.text:0000000000403985\n.text:0000000000403988\n.text:000000000040398d\n.text:0000000000403991\n.text:0000000000403994\n.text:0000000000403996\n.text:0000000000403998\n.text:000000000040399a\n.text:000000000040399d\n.text:00000000004039a2\n.text:00000000004039a7\n.text:00000000004039ac\n.text:00000000004039b1\n.text:00000000004039b6\n.text:00000000004039bc\n.text:00000000004039bf\n.text:00000000004039c4\n.text:00000000004039c9\n.text:00000000004039ce\n.text:00000000004039d3\n.text:00000000004039d6\n.text:00000000004039d8\n.text:00000000004039e0\n.text:00000000004039e5\n.text:00000000004039e8\n.text:00000000004039ed\n.text:00000000004039f1\n.text:00000000004039f4\n.text:00000000004039f6\n.text:00000000004039fb\n.text:0000000000403a00\n.text:0000000000403a03\n.text:0000000000403a05\n.text:0000000000403a10\n.text:0000000000403a15\n.text:0000000000403a18\n.text:0000000000403a1d\n.text:0000000000403a21\n.text:0000000000403a24\n.text:0000000000403a26\n.text:0000000000403a2b\n.text:0000000000403a30\n.text:0000000000403a33\n.text:0000000000403a35\n.text:0000000000403a40\n.text:0000000000403a45\n.text:0000000000403a48\n.text:0000000000403a4d\n.text:0000000000403a51\n.text:0000000000403a54\n.text:0000000000403a56\n.text:0000000000403a58\n.text:0000000000403a5b\n.text:0000000000403a5d\n.text:0000000000403a5f\n.text:0000000000403a60\n.text:0000000000403a65\n.text:0000000000403a68\n.text:0000000000403a6d\n.text:0000000000403a71\n.text:0000000000403a74\n.text:0000000000403a79\n.text:0000000000403a7b\n.text:0000000000403a80\n.text:0000000000403a83\n.text:0000000000403a88\n.text:0000000000403a8c\n.text:0000000000403a91\n.text:0000000000403a96\n.text:0000000000403a9a\n.text:0000000000403a9d\n.text:0000000000403aa2\n.text:0000000000403aa5\n.text:0000000000403aa7\n.text:0000000000403ab0\n.text:0000000000403ab5\n.text:0000000000403ab8\n.text:0000000000403abd\n.text:0000000000403ac1\n.text:0000000000403ac4\n.text:0000000000403ac6\n.text:0000000000403aca\n.text:0000000000403acd\n.text:0000000000403ad2\n.text:0000000000403ad6\n.text:0000000000403adb\n.text:0000000000403ae0\n.text:0000000000403ae5\n.text:0000000000403ae8\n.text:0000000000403aeb\n.text:0000000000403af0\n.text:0000000000403af3\n.text:0000000000403af5\n.text:0000000000403af8\n.text:0000000000403afa\n.text:0000000000403afd\n.text:0000000000403aff\n.text:0000000000403b00\n.text:0000000000403b05\n.text:0000000000403b08\n.text:0000000000403b0d\n.text:0000000000403b11\n.text:0000000000403b14\n.text:0000000000403b17\n.text:0000000000403b19\n.text:0000000000403b1c\n.text:0000000000403b21\n.text:0000000000403b24\n.text:0000000000403b27\n.text:0000000000403b2c\n.text:0000000000403b30\n.text:0000000000403b38\n.text:0000000000403b3b\n.text:0000000000403b3d\n.text:0000000000403b40\n.text:0000000000403b44\n.text:0000000000403b47\n.text:0000000000403b4a\n.text:0000000000403b4e\n.text:0000000000403b51\n.text:0000000000403b54\n.text:0000000000403b57\n.text:0000000000403b5d\n.text:0000000000403b60\n.text:0000000000403b66\n.text:0000000000403b6b\n.text:0000000000403b70\n.text:0000000000403b73\n.text:0000000000403b76\n.text:0000000000403b78\n.text:0000000000403b7a\n.text:0000000000403b7c\n.text:0000000000403b7e\n.text:0000000000403b81\n.text:0000000000403b84\n.text:0000000000403b88\n.text:0000000000403b8a\n.text:0000000000403b8d\n.text:0000000000403b8f\n.text:0000000000403b90\n.text:0000000000403b95\n.text:0000000000403b98\n.text:0000000000403b9d\n.text:0000000000403ba1\n.text:0000000000403ba4\n.text:0000000000403ba6\n.text:0000000000403ba8\n.text:0000000000403bab\n.text:0000000000403bad\n.text:0000000000403bb0\n.text:0000000000403bb5\n.text:0000000000403bb8\n.text:0000000000403bbd\n.text:0000000000403bc1\n.text:0000000000403bc4\n.text:0000000000403bc6\n.text:0000000000403bcb\n.text:0000000000403bcd\n.text:0000000000403bd0\n.text:0000000000403bd3\n.text:0000000000403bd6\n.text:0000000000403bdb\n.text:0000000000403bdd\n.text:0000000000403be2\n.text:0000000000403be5\n.text:0000000000403be8\n.text:0000000000403beb\n.text:0000000000403bf0\n.text:0000000000403bf4\n.text:0000000000403bf9\n.text:0000000000403bfe\n.text:0000000000403c03\n.text:0000000000403c06\n.text:0000000000403c0b\n.text:0000000000403c10\n.text:0000000000403c15\n.text:0000000000403c1a\n.text:0000000000403c1f\n.text:0000000000403c21\n.text:0000000000403c27\n.text:0000000000403c2a\n.text:0000000000403c2e\n.text:0000000000403c31\n.text:0000000000403c36\n.text:0000000000403c3b\n.text:0000000000403c40\n.text:0000000000403c42\n.text:0000000000403c45\n.text:0000000000403c48\n.text:0000000000403c4a\n.text:0000000000403c4c\n.text:0000000000403c4f\n.text:0000000000403c55\n.text:0000000000403c5a\n.text:0000000000403c5e\n.text:0000000000403c63\n.text:0000000000403c68\n.text:0000000000403c6b\n.text:0000000000403c6d\n.text:0000000000403c72\n.text:0000000000403c75\n.text:0000000000403c7a\n.text:0000000000403c7e\n.text:0000000000403c81\n.text:0000000000403c83\n.text:0000000000403c88\n.text:0000000000403c8b\n.text:0000000000403c90\n.text:0000000000403c94\n.text:0000000000403c97\n.text:0000000000403c9c\n.text:0000000000403c9f\n.text:0000000000403ca0\n.text:0000000000403caa\n.text:0000000000403caf\n.text:0000000000403cb3\n.text:0000000000403cb9\n.text:0000000000403cbe\n.text:0000000000403cc4\n.text:0000000000403cc6\n.text:0000000000403cc9\n.text:0000000000403ccc\n.text:0000000000403cd3\n.text:0000000000403cd4\n.text:0000000000403cd6\n.text:0000000000403cd8\n.text:0000000000403cda\n.text:0000000000403cdc\n.text:0000000000403cdd\n'
p209
tp210
sS'quotearg_custom'
p211
(S'\n__stdcall quotearg_custom(char * left_quote, char * right_quote, char * arg)\n'
p212
V\u000achar * quotearg_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom((char *)0x0,left_quote,right_quote);\u000a  return pcVar1;\u000a}\u000a\u000a
p213
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV RDX,RDI\nXOR EDI,EDI\nMOV RSI,RDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x004052b0\n'
p214
S'48 89 d0\n48 89 f1\n48 89 fa\n31 ff\n48 89 d6\n48 89 ca\n48 89 c1\ne9 67 ff ff ff\n'
p215
S'.text:0000000000405330\n.text:0000000000405333\n.text:0000000000405336\n.text:0000000000405339\n.text:000000000040533b\n.text:000000000040533e\n.text:0000000000405341\n.text:0000000000405344\n'
p216
tp217
sS'free'
p218
(S'\n__stdcall free(void * __ptr)\n'
p219
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid free(void *__ptr)\u000a\u000a{\u000a  (*(code *)PTR_free_0060b030)();\u000a  return;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x0060b030]\n'
p221
S'ff 25 4a 99 20 00\n'
p222
S'.plt:00000000004016e0\n'
p223
tp224
sS'close'
p225
(S'\n__stdcall close(int __fd)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_0060b118)();\u000a  return iVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x0060b118]\n'
p228
S'ff 25 62 98 20 00\n'
p229
S'.plt:00000000004018b0\n'
p230
tp231
sS'setutxent'
p232
(S'\n__stdcall setutxent()\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid setutxent(void)\u000a\u000a{\u000a  (*(code *)PTR_setutxent_0060b150)();\u000a  return;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x0060b150]\n'
p235
S'ff 25 2a 98 20 00\n'
p236
S'.plt:0000000000401920\n'
p237
tp238
sS'getenv'
p239
(S'\n__stdcall getenv(char * __name)\n'
p240
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * getenv(char *__name)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_getenv_0060b028)();\u000a  return pcVar1;\u000a}\u000a\u000a
p241
S'JMP qword ptr [0x0060b028]\n'
p242
S'ff 25 52 99 20 00\n'
p243
S'.plt:00000000004016d0\n'
p244
tp245
sS'putchar_unlocked'
p246
(S'\n__stdcall putchar_unlocked(int __c)\n'
p247
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint putchar_unlocked(int __c)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_putchar_unlocked_0060b160)();\u000a  return iVar1;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x0060b160]\n'
p249
S'ff 25 1a 98 20 00\n'
p250
S'.plt:0000000000401940\n'
p251
tp252
sS'fopen'
p253
(S'\n__stdcall fopen(char * __filename, char * __modes)\n'
p254
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fopen(char *__filename,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fopen_0060b208)();\u000a  return pFVar1;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x0060b208]\n'
p256
S'ff 25 72 97 20 00\n'
p257
S'.plt:0000000000401a90\n'
p258
tp259
sS'rpl_fseeko'
p260
(S'\n__stdcall rpl_fseeko(FILE * fp, off_t offset)\n'
p261
V\u000aint rpl_fseeko(FILE *fp,off_t offset)\u000a\u000a{\u000a  int __fd;\u000a  __off_t _Var1;\u000a  uint __whence;\u000a  \u000a  if (((fp->_IO_read_end == fp->_IO_read_ptr) && (fp->_IO_write_ptr == fp->_IO_write_base)) &&\u000a     (fp->_IO_save_base == (char *)0x0)) {\u000a    __fd = fileno((FILE *)fp);\u000a    _Var1 = lseek(__fd,offset,__whence);\u000a    if (_Var1 == -1) {\u000a      __fd = -1;\u000a    }\u000a    else {\u000a      *(byte *)&fp->_flags = *(byte *)&fp->_flags & 0xef;\u000a      fp->_offset = _Var1;\u000a      __fd = 0;\u000a    }\u000a    return __fd;\u000a  }\u000a  __fd = (*(code *)PTR_fseeko_0060b200)(fp,offset,(ulong)__whence);\u000a  return __fd;\u000a}\u000a\u000a
p262
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV RBP,RSI\nMOV RBX,RDI\nMOV RAX,qword ptr [RBX + 0x10]\nCMP RAX,qword ptr [RBX + 0x8]\nJNZ 0x00405fd8\nMOV RAX,qword ptr [RBX + 0x28]\nCMP RAX,qword ptr [RBX + 0x20]\nJNZ 0x00405fd8\nCMP qword ptr [RBX + 0x48],0x0\nJZ 0x00405fea\nMOV RDI,RBX\nMOV RSI,RBP\nMOV EDX,R14D\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00401a80\nMOV RDI,RBX\nCALL 0x00401980\nMOV EDI,EAX\nMOV RSI,RBP\nMOV EDX,R14D\nCALL 0x00401880\nCMP RAX,-0x1\nJZ 0x00406013\nAND byte ptr [RBX],0xef\nMOV qword ptr [0x90 + RBX],RAX\nXOR EAX,EAX\nJMP 0x00406018\nMOV EAX,0xffffffff\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p263
S'55\n41 56\n53\n41 89 d6\n48 89 f5\n48 89 fb\n48 8b 43 10\n48 3b 43 08\n75 11\n48 8b 43 28\n48 3b 43 20\n75 07\n48 83 7b 48 00\n74 12\n48 89 df\n48 89 ee\n44 89 f2\n5b\n41 5e\n5d\ne9 96 ba ff ff\n48 89 df\ne8 8e b9 ff ff\n89 c7\n48 89 ee\n44 89 f2\ne8 81 b8 ff ff\n48 83 f8 ff\n74 0e\n80 23 ef\n48 89 83 90 00 00 00\n31 c0\neb 05\nb8 ff ff ff ff\n5b\n41 5e\n5d\nc3\n'
p264
S'.text:0000000000405fb0\n.text:0000000000405fb1\n.text:0000000000405fb3\n.text:0000000000405fb4\n.text:0000000000405fb7\n.text:0000000000405fba\n.text:0000000000405fbd\n.text:0000000000405fc1\n.text:0000000000405fc5\n.text:0000000000405fc7\n.text:0000000000405fcb\n.text:0000000000405fcf\n.text:0000000000405fd1\n.text:0000000000405fd6\n.text:0000000000405fd8\n.text:0000000000405fdb\n.text:0000000000405fde\n.text:0000000000405fe1\n.text:0000000000405fe2\n.text:0000000000405fe4\n.text:0000000000405fe5\n.text:0000000000405fea\n.text:0000000000405fed\n.text:0000000000405ff2\n.text:0000000000405ff4\n.text:0000000000405ff7\n.text:0000000000405ffa\n.text:0000000000405fff\n.text:0000000000406003\n.text:0000000000406005\n.text:0000000000406008\n.text:000000000040600f\n.text:0000000000406011\n.text:0000000000406013\n.text:0000000000406018\n.text:0000000000406019\n.text:000000000040601b\n.text:000000000040601c\n'
p265
tp266
sS'tzalloc'
p267
(S'\n__stdcall tzalloc(char * name)\n'
p268
V\u000atimezone_t tzalloc(char *name)\u000a\u000a{\u000a  size_t __size;\u000a  timezone_t ptVar1;\u000a  ulong abbr_size;\u000a  \u000a  if (name == (char *)0x0) {\u000a    abbr_size = 0;\u000a  }\u000a  else {\u000a    __size = strlen(name);\u000a    abbr_size = __size + 1;\u000a  }\u000a  __size = 0x80;\u000a  if (0x76 < abbr_size) {\u000a    __size = abbr_size + 10;\u000a  }\u000a  ptVar1 = (timezone_t)malloc(__size);\u000a  if (ptVar1 != (timezone_t)0x0) {\u000a    ptVar1->next = (tm_zone *)0x0;\u000a    *(bool *)&ptVar1->tz_is_set = name != (char *)0x0;\u000a    ptVar1->abbrs[0] = 0;\u000a    if (name != (char *)0x0) {\u000a      extend_abbrs(ptVar1->abbrs,name,abbr_size);\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p269
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nTEST R14,R14\nJZ 0x0040619d\nMOV RDI,R14\nCALL 0x00401820\nMOV R15,RAX\nINC R15\nJMP 0x004061a0\nXOR R15D,R15D\nLEA RAX,[R15 + 0xa]\nCMP R15,0x77\nMOV EDI,0x80\nCMOVNC RDI,RAX\nCALL 0x004019a0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x004061e4\nMOV qword ptr [RBX],0x0\nTEST R14,R14\nSETNZ byte ptr [RBX + 0x8]\nMOV byte ptr [RBX + 0x9],0x0\nJZ 0x004061e4\nMOV RDI,RBX\nADD RDI,0x9\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x004061f0\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p270
S'41 57\n41 56\n53\n49 89 fe\n4d 85 f6\n74 10\n4c 89 f7\ne8 8b b6 ff ff\n49 89 c7\n49 ff c7\neb 03\n45 31 ff\n49 8d 47 0a\n49 83 ff 77\nbf 80 00 00 00\n48 0f 43 f8\ne8 ea b7 ff ff\n48 89 c3\n48 85 db\n74 26\n48 c7 03 00 00 00 00\n4d 85 f6\n0f 95 43 08\nc6 43 09 00\n74 12\n48 89 df\n48 83 c7 09\n4c 89 f6\n4c 89 fa\ne8 0c 00 00 00\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p271
S'.text:0000000000406180\n.text:0000000000406182\n.text:0000000000406184\n.text:0000000000406185\n.text:0000000000406188\n.text:000000000040618b\n.text:000000000040618d\n.text:0000000000406190\n.text:0000000000406195\n.text:0000000000406198\n.text:000000000040619b\n.text:000000000040619d\n.text:00000000004061a0\n.text:00000000004061a4\n.text:00000000004061a8\n.text:00000000004061ad\n.text:00000000004061b1\n.text:00000000004061b6\n.text:00000000004061b9\n.text:00000000004061bc\n.text:00000000004061be\n.text:00000000004061c5\n.text:00000000004061c8\n.text:00000000004061cc\n.text:00000000004061d0\n.text:00000000004061d2\n.text:00000000004061d5\n.text:00000000004061d9\n.text:00000000004061dc\n.text:00000000004061df\n.text:00000000004061e4\n.text:00000000004061e7\n.text:00000000004061e8\n.text:00000000004061ea\n.text:00000000004061ec\n'
p272
tp273
sS'quote_n_mem'
p274
(S'\n__stdcall quote_n_mem(char * arg, size_t argsize)\n'
p275
V\u000achar * quote_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p276
S'MOV ECX,0x60b2a0\nJMP 0x00404eb0\n'
p277
S'b9 a0 b2 60 00\ne9 36 fb ff ff\n'
p278
S'.text:0000000000405370\n.text:0000000000405375\n'
p279
tp280
sS'xstrdup'
p281
(S'\n__stdcall xstrdup(char * string)\n'
p282
V\u000achar * xstrdup(char *string)\u000a\u000a{\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  sVar1 = strlen(string);\u000a  pcVar2 = (char *)xmemdup(string,sVar1 + 1);\u000a  return pcVar2;\u000a}\u000a\u000a
p283
S'PUSH RBX\nMOV RBX,RDI\nCALL 0x00401820\nLEA RSI,[RAX + 0x1]\nMOV RDI,RBX\nPOP RBX\nJMP 0x00405e10\n'
p284
S'53\n48 89 fb\ne8 d7 b9 ff ff\n48 8d 70 01\n48 89 df\n5b\neb bd\n'
p285
S'.text:0000000000405e40\n.text:0000000000405e41\n.text:0000000000405e44\n.text:0000000000405e49\n.text:0000000000405e4d\n.text:0000000000405e50\n.text:0000000000405e51\n'
p286
tp287
sS'c_ispunct'
p288
(S'\n__stdcall c_ispunct()\n'
p289
V\u000a_Bool c_ispunct(void)\u000a\u000a{\u000a  undefined4 in_EDI;\u000a  \u000a  switch(in_EDI) {\u000a  case 0x21:\u000a  case 0x22:\u000a  case 0x23:\u000a  case 0x24:\u000a  case 0x25:\u000a  case 0x26:\u000a  case 0x27:\u000a  case 0x28:\u000a  case 0x29:\u000a  case 0x2a:\u000a  case 0x2b:\u000a  case 0x2c:\u000a  case 0x2d:\u000a  case 0x2e:\u000a  case 0x2f:\u000a  case 0x3a:\u000a  case 0x3b:\u000a  case 0x3c:\u000a  case 0x3d:\u000a  case 0x3e:\u000a  case 0x3f:\u000a  case 0x40:\u000a  case 0x5b:\u000a  case 0x5c:\u000a  case 0x5d:\u000a  case 0x5e:\u000a  case 0x5f:\u000a  case 0x60:\u000a  case 0x7b:\u000a  case 0x7c:\u000a  case 0x7d:\u000a  case 0x7e:\u000a    return true;\u000a  default:\u000a    return false;\u000a  }\u000a}\u000a\u000a
p290
S'ADD EDI,-0x21\nCMP EDI,0x5d\nJA 0x00406702\nMOV AL,0x1\nJMP qword ptr [0x4085e8 + RDI*0x8]\nRET\nXOR EAX,EAX\nRET\n'
p291
S'83 c7 df\n83 ff 5d\n77 0a\nb0 01\nff 24 fd e8 85 40 00\nc3\n31 c0\nc3\n'
p292
S'.text:00000000004066f0\n.text:00000000004066f3\n.text:00000000004066f6\n.text:00000000004066f8\n.text:00000000004066fa\n.text:0000000000406701\n.text:0000000000406702\n.text:0000000000406704\n'
p293
tp294
sS'fscanf'
p295
(S'\n__stdcall fscanf(FILE * __stream, char * __format)\n'
p296
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fscanf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fscanf_0060b110)();\u000a  return iVar1;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x0060b110]\n'
p298
S'ff 25 6a 98 20 00\n'
p299
S'.plt:00000000004018a0\n'
p300
tp301
sS'strftime'
p302
(S'\n__stdcall strftime(char * __s, size_t __maxsize, char * __format, tm * __tp)\n'
p303
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strftime_0060b1e0)();\u000a  return sVar1;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x0060b1e0]\n'
p305
S'ff 25 9a 97 20 00\n'
p306
S'.plt:0000000000401a40\n'
p307
tp308
sS'memcpy'
p309
(S'\n__stdcall memcpy(void * __dest, void * __src, size_t __n)\n'
p310
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memcpy(void *__dest,void *__src,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memcpy_0060b158)();\u000a  return pvVar1;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x0060b158]\n'
p312
S'ff 25 22 98 20 00\n'
p313
S'.plt:0000000000401930\n'
p314
tp315
sS'close_stdout_set_ignore_EPIPE'
p316
(S'\n__stdcall close_stdout_set_ignore_EPIPE()\n'
p317
V\u000avoid close_stdout_set_ignore_EPIPE(undefined uParm1)\u000a\u000a{\u000a  ignore_EPIPE = (_Bool)uParm1;\u000a  return;\u000a}\u000a\u000a
p318
S'MOV byte ptr [0x0060b340],DIL\nRET\n'
p319
S'40 88 3d c9 8e 20 00\nc3\n'
p320
S'.text:0000000000402470\n.text:0000000000402477\n'
p321
tp322
sS'iswprint'
p323
(S'\n__stdcall iswprint(wint_t __wc)\n'
p324
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint iswprint(wint_t __wc)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_iswprint_0060b248)();\u000a  return iVar1;\u000a}\u000a\u000a
p325
S'JMP qword ptr [0x0060b248]\n'
p326
S'ff 25 32 97 20 00\n'
p327
S'.plt:0000000000401b10\n'
p328
tp329
sS'c_isspace'
p330
(S'\n__stdcall c_isspace()\n'
p331
V\u000a_Bool c_isspace(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 9U < 0x18) {\u000a    return (_Bool)((byte)(0x80001f >> ((byte)(in_EDI - 9U) & 0x1f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p332
S'ADD EDI,-0x9\nCMP EDI,0x17\nJA 0x00406725\nMOV EAX,0x80001f\nMOV ECX,EDI\nSHR EAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p333
S'83 c7 f7\n83 ff 17\n77 0d\nb8 1f 00 80 00\n89 f9\nd3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p334
S'.text:0000000000406710\n.text:0000000000406713\n.text:0000000000406716\n.text:0000000000406718\n.text:000000000040671d\n.text:000000000040671f\n.text:0000000000406721\n.text:0000000000406724\n.text:0000000000406725\n.text:0000000000406727\n'
p335
tp336
sS'setenv_TZ'
p337
(S'\n__stdcall setenv_TZ(char * tz)\n'
p338
V\u000aint setenv_TZ(char *tz)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (tz != (char *)0x0) {\u000a    iVar1 = (*(code *)PTR_setenv_0060b088)("TZ",tz,1);\u000a    return iVar1;\u000a  }\u000a  iVar1 = (*(code *)PTR_unsetenv_0060b218)("TZ");\u000a  return iVar1;\u000a}\u000a\u000a
p339
S'MOV RAX,RDI\nMOV EDI,0x4085e0\nTEST RAX,RAX\nJZ 0x0040660a\nMOV EDX,0x1\nMOV RSI,RAX\nJMP 0x00401790\nJMP 0x00401ab0\n'
p340
S'48 89 f8\nbf e0 85 40 00\n48 85 c0\n74 0d\nba 01 00 00 00\n48 89 c6\ne9 86 b1 ff ff\ne9 a1 b4 ff ff\n'
p341
S'.text:00000000004065f0\n.text:00000000004065f3\n.text:00000000004065f8\n.text:00000000004065fb\n.text:00000000004065fd\n.text:0000000000406602\n.text:0000000000406605\n.text:000000000040660a\n'
p342
tp343
sS'open'
p344
(S'\n__stdcall open(char * __file, int __oflag)\n'
p345
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_0060b1f8)();\u000a  return iVar1;\u000a}\u000a\u000a
p346
S'JMP qword ptr [0x0060b1f8]\n'
p347
S'ff 25 82 97 20 00\n'
p348
S'.plt:0000000000401a70\n'
p349
tp350
sS'quotearg_n_custom_mem'
p351
(S'\n__stdcall quotearg_n_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p352
V\u000achar * quotearg_n_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  quoting_style local_58;\u000a  int iStack84;\u000a  uint uStack80;\u000a  uint uStack76;\u000a  uint local_48;\u000a  uint uStack68;\u000a  uint uStack64;\u000a  uint uStack60;\u000a  uint local_38;\u000a  uint uStack52;\u000a  undefined4 uStack48;\u000a  undefined4 uStack44;\u000a  char *local_28;\u000a  \u000a  local_28 = default_quoting_options.right_quote;\u000a  local_38 = default_quoting_options.quote_these_too[6];\u000a  uStack52 = default_quoting_options.quote_these_too[7];\u000a  uStack48 = default_quoting_options.left_quote._0_4_;\u000a  uStack44 = default_quoting_options.left_quote._4_4_;\u000a  local_48 = default_quoting_options.quote_these_too[2];\u000a  uStack68 = default_quoting_options.quote_these_too[3];\u000a  uStack64 = default_quoting_options.quote_these_too[4];\u000a  uStack60 = default_quoting_options.quote_these_too[5];\u000a  local_58 = default_quoting_options.style;\u000a  iStack84 = default_quoting_options.flags;\u000a  uStack80 = default_quoting_options.quote_these_too[0];\u000a  uStack76 = default_quoting_options.quote_these_too[1];\u000a  set_custom_quoting((quoting_options *)&local_58,right_quote,arg);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)left_quote & 0xffffffff),argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p353
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,R8\nMOV RBX,RCX\nMOV EBP,EDI\nMOV RAX,qword ptr [0x0060b380]\nMOV qword ptr [RSP + 0x30],RAX\nMOVUPS XMM0,xmmword ptr [0x0060b370]\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060b360]\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVUPS XMM0,xmmword ptr [0x0060b350]\nMOVAPS xmmword ptr [RSP],XMM0\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x00404020\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00404eb0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p354
S'55\n41 57\n41 56\n53\n48 83 ec 38\n4d 89 c6\n48 89 cb\n89 fd\n48 8b 05 a7 60 20 00\n48 89 44 24 30\n0f 10 05 8b 60 20 00\n0f 29 44 24 20\n0f 10 05 6f 60 20 00\n0f 29 44 24 10\n0f 10 05 53 60 20 00\n0f 29 04 24\n49 89 e7\n4c 89 ff\ne8 14 ed ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 94 fb ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p355
S'.text:00000000004052c0\n.text:00000000004052c1\n.text:00000000004052c3\n.text:00000000004052c5\n.text:00000000004052c6\n.text:00000000004052ca\n.text:00000000004052cd\n.text:00000000004052d0\n.text:00000000004052d2\n.text:00000000004052d9\n.text:00000000004052de\n.text:00000000004052e5\n.text:00000000004052ea\n.text:00000000004052f1\n.text:00000000004052f6\n.text:00000000004052fd\n.text:0000000000405301\n.text:0000000000405304\n.text:0000000000405307\n.text:000000000040530c\n.text:000000000040530e\n.text:0000000000405311\n.text:0000000000405314\n.text:0000000000405317\n.text:000000000040531c\n.text:0000000000405320\n.text:0000000000405321\n.text:0000000000405323\n.text:0000000000405325\n.text:0000000000405326\n'
p356
tp357
sS'localtime'
p358
(S'\n__stdcall localtime(time_t * __timer)\n'
p359
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime(time_t *__timer)\u000a\u000a{\u000a  tm *ptVar1;\u000a  \u000a  ptVar1 = (tm *)(*(code *)PTR_localtime_0060b038)();\u000a  return ptVar1;\u000a}\u000a\u000a
p360
S'JMP qword ptr [0x0060b038]\n'
p361
S'ff 25 42 99 20 00\n'
p362
S'.plt:00000000004016f0\n'
p363
tp364
sS'localtime_r'
p365
(S'\n__stdcall localtime_r(time_t * __timer, tm * __tp)\n'
p366
V\u000a/* WARNING: Switch with 1 destination removed at 0x00401740 */\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atm * localtime_r(time_t *__timer,tm *__tp)\u000a\u000a{\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p367
S'JMP qword ptr [0x0060b060]\n'
p368
S'ff 25 1a 99 20 00\n'
p369
S'.plt:0000000000401740\n'
p370
tp371
sS'utmpxname'
p372
(S'\n__stdcall utmpxname(char * __file)\n'
p373
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint utmpxname(char *__file)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_utmpxname_0060b020)();\u000a  return iVar1;\u000a}\u000a\u000a
p374
S'JMP qword ptr [0x0060b020]\n'
p375
S'ff 25 5a 99 20 00\n'
p376
S'.plt:00000000004016c0\n'
p377
tp378
sS'_init'
p379
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p380
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___0060aff8;\u000a  if (PTR___gmon_start___0060aff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___0060aff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p381
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x0060aff8]\nTEST RAX,RAX\nJZ 0x0040169a\nCALL RAX\nADD RSP,0x8\nRET\n'
p382
S'48 83 ec 08\n48 8b 05 65 99 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p383
S'.init:0000000000401688\n.init:000000000040168c\n.init:0000000000401693\n.init:0000000000401696\n.init:0000000000401698\n.init:000000000040169a\n.init:000000000040169e\n'
p384
tp385
sS'tzset'
p386
(S'\n__stdcall tzset()\n'
p387
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid tzset(void)\u000a\u000a{\u000a  (*(code *)PTR_tzset_0060b168)();\u000a  return;\u000a}\u000a\u000a
p388
S'JMP qword ptr [0x0060b168]\n'
p389
S'ff 25 12 98 20 00\n'
p390
S'.plt:0000000000401950\n'
p391
tp392
sS'set_quoting_flags'
p393
(S'\n__stdcall set_quoting_flags(quoting_options * o)\n'
p394
V\u000aint set_quoting_flags(quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  quoting_options *pqVar2;\u000a  int in_ESI;\u000a  \u000a  pqVar2 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar2 = o;\u000a  }\u000a  iVar1 = pqVar2->flags;\u000a  pqVar2->flags = in_ESI;\u000a  return iVar1;\u000a}\u000a\u000a
p395
S'TEST RDI,RDI\nMOV ECX,0x60b350\nCMOVNZ RCX,RDI\nMOV EAX,dword ptr [RCX + 0x4]\nMOV dword ptr [RCX + 0x4],ESI\nRET\n'
p396
S'48 85 ff\nb9 50 b3 60 00\n48 0f 45 cf\n8b 41 04\n89 71 04\nc3\n'
p397
S'.text:0000000000404000\n.text:0000000000404003\n.text:0000000000404008\n.text:000000000040400c\n.text:000000000040400f\n.text:0000000000404012\n'
p398
tp399
sS'realloc'
p400
(S'\n__stdcall realloc(void * __ptr, size_t __size)\n'
p401
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * realloc(void *__ptr,size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_realloc_0060b1b8)();\u000a  return pvVar1;\u000a}\u000a\u000a
p402
S'JMP qword ptr [0x0060b1b8]\n'
p403
S'ff 25 c2 97 20 00\n'
p404
S'.plt:00000000004019f0\n'
p405
tp406
sS'__fprintf_chk'
p407
(S'\n__stdcall __fprintf_chk()\n'
p408
V\u000avoid __fprintf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___fprintf_chk_0060b238)();\u000a  return;\u000a}\u000a\u000a
p409
S'JMP qword ptr [0x0060b238]\n'
p410
S'ff 25 42 97 20 00\n'
p411
S'.plt:0000000000401af0\n'
p412
tp413
sS'c_strtod'
p414
(S'\n__stdcall c_strtod(char * nptr, char * * endptr)\n'
p415
V\u000adouble c_strtod(char *nptr,char **endptr)\u000a\u000a{\u000a  double dVar1;\u000a  locale_t p_Var2;\u000a  \u000a  p_Var2 = c_locale();\u000a  if (p_Var2 != (locale_t)0x0) {\u000a    dVar1 = (double)(*(code *)PTR_strtod_l_0060b0a0)(nptr,endptr,p_Var2);\u000a    return dVar1;\u000a  }\u000a  if (endptr != (char **)0x0) {\u000a    *endptr = nptr;\u000a  }\u000a  return 0.00000000;\u000a}\u000a\u000a
p416
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV R14,RDI\nCALL 0x00402430\nTEST RAX,RAX\nJZ 0x00402419\nMOV RDI,R14\nMOV RSI,RBX\nMOV RDX,RAX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x004017c0\nTEST RBX,RBX\nJZ 0x00402421\nMOV qword ptr [RBX],R14\nXORPS XMM0,XMM0\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p417
S'41 56\n53\n50\n48 89 f3\n49 89 fe\ne8 31 00 00 00\n48 85 c0\n74 15\n4c 89 f7\n48 89 de\n48 89 c2\n48 83 c4 08\n5b\n41 5e\ne9 a7 f3 ff ff\n48 85 db\n74 03\n4c 89 33\n0f 57 c0\n48 83 c4 08\n5b\n41 5e\nc3\n'
p418
S'.text:00000000004023f0\n.text:00000000004023f2\n.text:00000000004023f3\n.text:00000000004023f4\n.text:00000000004023f7\n.text:00000000004023fa\n.text:00000000004023ff\n.text:0000000000402402\n.text:0000000000402404\n.text:0000000000402407\n.text:000000000040240a\n.text:000000000040240d\n.text:0000000000402411\n.text:0000000000402412\n.text:0000000000402414\n.text:0000000000402419\n.text:000000000040241c\n.text:000000000040241e\n.text:0000000000402421\n.text:0000000000402424\n.text:0000000000402428\n.text:0000000000402429\n.text:000000000040242b\n'
p419
tp420
sS'get_charset_aliases'
p421
(S'\n__stdcall get_charset_aliases()\n'
p422
V\u000achar * get_charset_aliases(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __fd;\u000a  char *__s;\u000a  size_t __n;\u000a  char *__file;\u000a  FILE *fp;\u000a  size_t sVar2;\u000a  void *pvVar3;\u000a  ulong uVar4;\u000a  bool bVar5;\u000a  char buf2 [51];\u000a  char buf1 [51];\u000a  long local_c0;\u000a  char local_a8 [64];\u000a  char local_68 [56];\u000a  \u000a  if (charset_aliases != (char *)0x0) {\u000a    return charset_aliases;\u000a  }\u000a  __s = getenv("CHARSETALIASDIR");\u000a  if ((__s == (char *)0x0) || (*__s == 0)) {\u000a    __s = "/usr/local/lib";\u000a  }\u000a  __n = strlen(__s);\u000a  if (__n == 0) {\u000a    bVar5 = false;\u000a  }\u000a  else {\u000a    bVar5 = __s[__n - 1] != '/';\u000a  }\u000a  uVar4 = (ulong)bVar5;\u000a  __file = (char *)malloc(__n + 0xe + uVar4);\u000a  if (__file == (char *)0x0) {\u000a    charset_aliases = "";\u000a    return "";\u000a  }\u000a  memcpy(__file,__s,__n);\u000a  __s = __file + __n;\u000a  if (bVar5 == false) {\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  else {\u000a    __file[__n] = '/';\u000a    *(undefined8 *)(__s + uVar4 + 6) = 0x7361696c612e74;\u000a    *(undefined8 *)(__s + uVar4) = 0x2e74657372616863;\u000a  }\u000a  __fd = open(__file,0x20000);\u000a  if (-1 < __fd) {\u000a    fp = (FILE *)fdopen(__fd,"r");\u000a    if (fp != (FILE *)0x0) {\u000a      local_c0 = 0;\u000a      __s = (char *)0;\u000aswitchD_00406a94_caseD_9:\u000a      __fd = getc_unlocked((FILE *)fp);\u000a      switch(__fd) {\u000a      default:\u000a        ungetc(__fd,(FILE *)fp);\u000a        __fd = fscanf((FILE *)fp,"%50s %50s",local_68);\u000a        if (__fd < 2) goto switchD_00406a94_caseD_ffffffff;\u000a        __n = strlen(local_68);\u000a        sVar2 = strlen(local_a8);\u000a        lVar1 = __n + 2 + sVar2;\u000a        if (local_c0 == 0) {\u000a          pvVar3 = malloc(__n + sVar2 + 3);\u000a          local_c0 = lVar1;\u000a        }\u000a        else {\u000a          pvVar3 = realloc(__s,lVar1 + 1 + local_c0);\u000a          local_c0 = lVar1 + local_c0;\u000a        }\u000a        if (pvVar3 == (void *)0x0) {\u000a          free(__s);\u000a          local_c0 = 0;\u000a          __s = (char *)0x0;\u000a          goto switchD_00406a94_caseD_ffffffff;\u000a        }\u000a        __s = (char *)((long)pvVar3 + ~sVar2 + local_c0);\u000a        strcpy(__s + ~__n,local_68);\u000a        strcpy(__s,local_a8);\u000a        __s = (char *)pvVar3;\u000a        goto switchD_00406a94_caseD_9;\u000a      case 0x23:\u000a        do {\u000a          __fd = getc_unlocked((FILE *)fp);\u000a          if (__fd == -1) goto switchD_00406a94_caseD_ffffffff;\u000a        } while (__fd != 10);\u000a        goto switchD_00406a94_caseD_9;\u000a      case -1:\u000a        goto switchD_00406a94_caseD_ffffffff;\u000a      }\u000a    }\u000a    close(__fd);\u000a  }\u000aLAB_00406aed:\u000a  __s = "";\u000aLAB_00406af3:\u000a  free(__file);\u000a  charset_aliases = __s;\u000a  return __s;\u000aswitchD_00406a94_caseD_ffffffff:\u000a  rpl_fclose(fp);\u000a  if (local_c0 != 0) {\u000a    __s[local_c0] = 0;\u000a    goto LAB_00406af3;\u000a  }\u000a  goto LAB_00406aed;\u000a}\u000a\u000a
p423
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x98\nMOV R15,qword ptr [0x0060b490]\nTEST R15,R15\nJNZ 0x00406b02\nMOV EDI,0x408a14\nCALL 0x004016d0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x004068b8\nCMP byte ptr [RBX],0x0\nJNZ 0x004068bd\nMOV EBX,0x408a24\nMOV RDI,RBX\nCALL 0x00401820\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x004068d7\nCMP byte ptr [RBX + RBP*0x1 + -0x1],0x2f\nSETNZ AL\nJMP 0x004068d9\nXOR EAX,EAX\nMOVZX R14D,AL\nLEA RDI,[RBP + R14*0x1 + 0xe]\nCALL 0x004019a0\nMOV R13,RAX\nTEST R13,R13\nJZ 0x0040692d\nMOV RDI,R13\nMOV RSI,RBX\nMOV RDX,RBP\nCALL 0x00401930\nMOV RAX,RBP\nADD RAX,R13\nTEST R14,R14\nJZ 0x00406938\nMOV byte ptr [R13 + RBP*0x1],0x2f\nMOV RCX,0x7361696c612e74\nMOV qword ptr [R14 + RAX*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [R14 + RAX*0x1],RCX\nJMP 0x00406955\nMOV R15D,0x4074a5\nJMP 0x00406afb\nMOV RCX,0x7361696c612e74\nMOV qword ptr [RAX + R14*0x1 + 0x6],RCX\nMOV RCX,0x2e74657372616863\nMOV qword ptr [RAX + R14*0x1],RCX\nMOV ESI,0x20000\nXOR EAX,EAX\nMOV RDI,R13\nCALL 0x00401a70\nMOV EBP,EAX\nTEST EBP,EBP\nJS 0x00406aed\nMOV ESI,0x40777e\nMOV EDI,EBP\nCALL 0x00401a00\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00406ab4\nLEA R12,[RSP + 0x60]\nLEA RBP,[RSP + 0x20]\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV qword ptr [RSP + 0x10],R13\nJMP 0x00406a80\nLEA RAX,[R13 + R14*0x1]\nNOT RBP\nADD RBP,RAX\nNOT R12\nADD R12,RBP\nMOV RDI,R12\nLEA R12,[RSP + 0x60]\nMOV RSI,R12\nCALL 0x00401760\nMOV RDI,RBP\nLEA RBP,[RSP + 0x20]\nMOV RSI,RBP\nCALL 0x00401760\nMOV qword ptr [RSP + 0x8],R14\nMOV R15,R13\nMOV R13,qword ptr [RSP + 0x10]\nJMP 0x00406a80\nMOV EDI,EAX\nMOV RSI,RBX\nCALL 0x004019d0\nMOV ESI,0x408a33\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,R12\nMOV RCX,RBP\nCALL 0x004018a0\nCMP EAX,0x2\nJL 0x00406ad4\nMOV RDI,R12\nCALL 0x00401820\nMOV R12,RAX\nMOV RDI,RBP\nCALL 0x00401820\nMOV RBP,RAX\nLEA R14,[R12 + RBP*0x1 + 0x2]\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00406a5d\nLEA RCX,[R14 + RAX*0x1]\nMOV qword ptr [RSP + 0x18],RCX\nLEA RSI,[R14 + RAX*0x1 + 0x1]\nMOV RDI,R15\nCALL 0x004019f0\nMOV R13,RAX\nMOV R14,qword ptr [RSP + 0x18]\nTEST R13,R13\nJNZ 0x004069a4\nJMP 0x00406abd\nLEA RDI,[R12 + RBP*0x1 + 0x1]\nADD RDI,0x2\nCALL 0x004019a0\nMOV R13,RAX\nTEST R13,R13\nJNZ 0x004069a4\nJMP 0x00406abd\nMOV RDI,RBX\nCALL 0x00401780\nLEA ECX,[RAX + 0x1]\nCMP ECX,0x24\nJA 0x004069e7\nJMP qword ptr [0x4088d8 + RCX*0x8]\nMOV RDI,RBX\nCALL 0x00401780\nCMP EAX,-0x1\nJZ 0x00406ad4\nCMP EAX,0xa\nJNZ 0x00406aa0\nJMP 0x00406a80\nMOV EDI,EBP\nCALL 0x004018b0\nJMP 0x00406aed\nMOV RDI,R15\nCALL 0x004016e0\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x8],RAX\nXOR R15D,R15D\nMOV R13,qword ptr [RSP + 0x10]\nMOV RDI,RBX\nCALL 0x00405ee0\nMOV RAX,qword ptr [RSP + 0x8]\nTEST RAX,RAX\nJZ 0x00406aed\nMOV byte ptr [R15 + RAX*0x1],0x0\nJMP 0x00406af3\nMOV R15D,0x4074a5\nMOV RDI,R13\nCALL 0x004016e0\nMOV qword ptr [0x0060b490],R15\nMOV RAX,R15\nADD RSP,0x98\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p424
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 98 00 00 00\n4c 8b 3d f8 4b 20 00\n4d 85 ff\n0f 85 61 02 00 00\nbf 14 8a 40 00\ne8 25 ae ff ff\n48 89 c3\n48 85 db\n74 05\n80 3b 00\n75 05\nbb 24 8a 40 00\n48 89 df\ne8 5b af ff ff\n48 89 c5\n48 85 ed\n74 0a\n80 7c 2b ff 2f\n0f 95 c0\neb 02\n31 c0\n44 0f b6 f0\n4a 8d 7c 35 0e\ne8 b9 b0 ff ff\n49 89 c5\n4d 85 ed\n74 3e\n4c 89 ef\n48 89 de\n48 89 ea\ne8 33 b0 ff ff\n48 89 e8\n4c 01 e8\n4d 85 f6\n74 30\n41 c6 44 2d 00 2f\n48 b9 74 2e 61 6c 69 61 73 00\n49 89 4c 06 06\n48 b9 63 68 61 72 73 65 74 2e\n49 89 0c 06\neb 28\n41 bf a5 74 40 00\ne9 c3 01 00 00\n48 b9 74 2e 61 6c 69 61 73 00\n4a 89 4c 30 06\n48 b9 63 68 61 72 73 65 74 2e\n4a 89 0c 30\nbe 00 00 02 00\n31 c0\n4c 89 ef\ne8 0c b1 ff ff\n89 c5\n85 ed\n0f 88 7f 01 00 00\nbe 7e 77 40 00\n89 ef\ne8 86 b0 ff ff\n48 89 c3\n48 85 db\n0f 84 2e 01 00 00\n4c 8d 64 24 60\n48 8d 6c 24 20\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 89 6c 24 10\ne9 dc 00 00 00\n4b 8d 44 35 00\n48 f7 d5\n48 01 c5\n49 f7 d4\n49 01 ec\n4c 89 e7\n4c 8d 64 24 60\n4c 89 e6\ne8 9b ad ff ff\n48 89 ef\n48 8d 6c 24 20\n48 89 ee\ne8 8b ad ff ff\n4c 89 74 24 08\n4d 89 ef\n4c 8b 6c 24 10\ne9 99 00 00 00\n89 c7\n48 89 de\ne8 df af ff ff\nbe 33 8a 40 00\n31 c0\n48 89 df\n4c 89 e2\n48 89 e9\ne8 9a ae ff ff\n83 f8 02\n0f 8c c5 00 00 00\n4c 89 e7\ne8 09 ae ff ff\n49 89 c4\n48 89 ef\ne8 fe ad ff ff\n48 89 c5\n4d 8d 74 2c 02\n48 8b 44 24 08\n48 85 c0\n74 29\n49 8d 0c 06\n48 89 4c 24 18\n49 8d 74 06 01\n4c 89 ff\ne8 a6 af ff ff\n49 89 c5\n4c 8b 74 24 18\n4d 85 ed\n0f 85 49 ff ff ff\neb 60\n49 8d 7c 2c 01\n48 83 c7 02\ne8 35 af ff ff\n49 89 c5\n4d 85 ed\n0f 85 2d ff ff ff\neb 44\n48 89 df\ne8 f8 ac ff ff\n8d 48 01\n83 f9 24\n0f 87 53 ff ff ff\nff 24 cd d8 88 40 00\n48 89 df\ne8 d8 ac ff ff\n83 f8 ff\n74 27\n83 f8 0a\n75 ee\neb cc\n89 ef\ne8 f5 ad ff ff\neb 30\n4c 89 ff\ne8 1b ac ff ff\n31 c0\n48 89 44 24 08\n45 31 ff\n4c 8b 6c 24 10\n48 89 df\ne8 04 f4 ff ff\n48 8b 44 24 08\n48 85 c0\n74 07\n41 c6 04 07 00\neb 06\n41 bf a5 74 40 00\n4c 89 ef\ne8 e5 ab ff ff\n4c 89 3d 8e 49 20 00\n4c 89 f8\n48 81 c4 98 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p425
S'.text:0000000000406880\n.text:0000000000406881\n.text:0000000000406883\n.text:0000000000406885\n.text:0000000000406887\n.text:0000000000406889\n.text:000000000040688a\n.text:0000000000406891\n.text:0000000000406898\n.text:000000000040689b\n.text:00000000004068a1\n.text:00000000004068a6\n.text:00000000004068ab\n.text:00000000004068ae\n.text:00000000004068b1\n.text:00000000004068b3\n.text:00000000004068b6\n.text:00000000004068b8\n.text:00000000004068bd\n.text:00000000004068c0\n.text:00000000004068c5\n.text:00000000004068c8\n.text:00000000004068cb\n.text:00000000004068cd\n.text:00000000004068d2\n.text:00000000004068d5\n.text:00000000004068d7\n.text:00000000004068d9\n.text:00000000004068dd\n.text:00000000004068e2\n.text:00000000004068e7\n.text:00000000004068ea\n.text:00000000004068ed\n.text:00000000004068ef\n.text:00000000004068f2\n.text:00000000004068f5\n.text:00000000004068f8\n.text:00000000004068fd\n.text:0000000000406900\n.text:0000000000406903\n.text:0000000000406906\n.text:0000000000406908\n.text:000000000040690e\n.text:0000000000406918\n.text:000000000040691d\n.text:0000000000406927\n.text:000000000040692b\n.text:000000000040692d\n.text:0000000000406933\n.text:0000000000406938\n.text:0000000000406942\n.text:0000000000406947\n.text:0000000000406951\n.text:0000000000406955\n.text:000000000040695a\n.text:000000000040695c\n.text:000000000040695f\n.text:0000000000406964\n.text:0000000000406966\n.text:0000000000406968\n.text:000000000040696e\n.text:0000000000406973\n.text:0000000000406975\n.text:000000000040697a\n.text:000000000040697d\n.text:0000000000406980\n.text:0000000000406986\n.text:000000000040698b\n.text:0000000000406990\n.text:0000000000406992\n.text:0000000000406997\n.text:000000000040699a\n.text:000000000040699f\n.text:00000000004069a4\n.text:00000000004069a9\n.text:00000000004069ac\n.text:00000000004069af\n.text:00000000004069b2\n.text:00000000004069b5\n.text:00000000004069b8\n.text:00000000004069bd\n.text:00000000004069c0\n.text:00000000004069c5\n.text:00000000004069c8\n.text:00000000004069cd\n.text:00000000004069d0\n.text:00000000004069d5\n.text:00000000004069da\n.text:00000000004069dd\n.text:00000000004069e2\n.text:00000000004069e7\n.text:00000000004069e9\n.text:00000000004069ec\n.text:00000000004069f1\n.text:00000000004069f6\n.text:00000000004069f8\n.text:00000000004069fb\n.text:00000000004069fe\n.text:0000000000406a01\n.text:0000000000406a06\n.text:0000000000406a09\n.text:0000000000406a0f\n.text:0000000000406a12\n.text:0000000000406a17\n.text:0000000000406a1a\n.text:0000000000406a1d\n.text:0000000000406a22\n.text:0000000000406a25\n.text:0000000000406a2a\n.text:0000000000406a2f\n.text:0000000000406a32\n.text:0000000000406a34\n.text:0000000000406a38\n.text:0000000000406a3d\n.text:0000000000406a42\n.text:0000000000406a45\n.text:0000000000406a4a\n.text:0000000000406a4d\n.text:0000000000406a52\n.text:0000000000406a55\n.text:0000000000406a5b\n.text:0000000000406a5d\n.text:0000000000406a62\n.text:0000000000406a66\n.text:0000000000406a6b\n.text:0000000000406a6e\n.text:0000000000406a71\n.text:0000000000406a77\n.text:0000000000406a80\n.text:0000000000406a83\n.text:0000000000406a88\n.text:0000000000406a8b\n.text:0000000000406a8e\n.text:0000000000406a94\n.text:0000000000406aa0\n.text:0000000000406aa3\n.text:0000000000406aa8\n.text:0000000000406aab\n.text:0000000000406aad\n.text:0000000000406ab0\n.text:0000000000406ab2\n.text:0000000000406ab4\n.text:0000000000406ab6\n.text:0000000000406abb\n.text:0000000000406abd\n.text:0000000000406ac0\n.text:0000000000406ac5\n.text:0000000000406ac7\n.text:0000000000406acc\n.text:0000000000406acf\n.text:0000000000406ad4\n.text:0000000000406ad7\n.text:0000000000406adc\n.text:0000000000406ae1\n.text:0000000000406ae4\n.text:0000000000406ae6\n.text:0000000000406aeb\n.text:0000000000406aed\n.text:0000000000406af3\n.text:0000000000406af6\n.text:0000000000406afb\n.text:0000000000406b02\n.text:0000000000406b05\n.text:0000000000406b0c\n.text:0000000000406b0d\n.text:0000000000406b0f\n.text:0000000000406b11\n.text:0000000000406b13\n.text:0000000000406b15\n.text:0000000000406b16\n'
p426
tp427
sS'nl_langinfo'
p428
(S'\n__stdcall nl_langinfo(nl_item __item)\n'
p429
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * nl_langinfo(nl_item __item)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0060b1a0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p430
S'JMP qword ptr [0x0060b1a0]\n'
p431
S'ff 25 da 97 20 00\n'
p432
S'.plt:00000000004019c0\n'
p433
tp434
sS'x2realloc'
p435
(S'\n__stdcall x2realloc(void * p, size_t * pn)\n'
p436
V\u000avoid * x2realloc(void *p,size_t *pn)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = x2nrealloc(p,pn,1);\u000a  return pvVar1;\u000a}\u000a\u000a
p437
S'MOV EDX,0x1\nJMP 0x00405d40\n'
p438
S'ba 01 00 00 00\neb 89\n'
p439
S'.text:0000000000405db0\n.text:0000000000405db5\n'
p440
tp441
sS'strlen'
p442
(S'\n__stdcall strlen(char * __s)\n'
p443
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t strlen(char *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_strlen_0060b0d0)();\u000a  return sVar1;\u000a}\u000a\u000a
p444
S'JMP qword ptr [0x0060b0d0]\n'
p445
S'ff 25 aa 98 20 00\n'
p446
S'.plt:0000000000401820\n'
p447
tp448
sS'memcmp'
p449
(S'\n__stdcall memcmp(void * __s1, void * __s2, size_t __n)\n'
p450
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint memcmp(void *__s1,void *__s2,size_t __n)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_memcmp_0060b128)();\u000a  return iVar1;\u000a}\u000a\u000a
p451
S'JMP qword ptr [0x0060b128]\n'
p452
S'ff 25 52 98 20 00\n'
p453
S'.plt:00000000004018d0\n'
p454
tp455
sS'quotearg_n_style_mem'
p456
(S'\n__stdcall quotearg_n_style_mem(char * arg, size_t argsize)\n'
p457
V\u000achar * quotearg_n_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  size_t argsize_00;\u000a  quoting_options qStack88;\u000a  \u000a  quoting_options_from_style(&qStack88);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize_00,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p458
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x38\nMOV R14,RCX\nMOV RBX,RDX\nMOV EBP,EDI\nMOV R15,RSP\nMOV RDI,R15\nCALL 0x004050e0\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RDX,R14\nMOV RCX,R15\nCALL 0x00404eb0\nADD RSP,0x38\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p459
S'55\n41 57\n41 56\n53\n48 83 ec 38\n49 89 ce\n48 89 d3\n89 fd\n49 89 e7\n4c 89 ff\ne8 83 ff ff ff\n89 ef\n48 89 de\n4c 89 f2\n4c 89 f9\ne8 43 fd ff ff\n48 83 c4 38\n5b\n41 5e\n41 5f\n5d\nc3\n'
p460
S'.text:0000000000405140\n.text:0000000000405141\n.text:0000000000405143\n.text:0000000000405145\n.text:0000000000405146\n.text:000000000040514a\n.text:000000000040514d\n.text:0000000000405150\n.text:0000000000405152\n.text:0000000000405155\n.text:0000000000405158\n.text:000000000040515d\n.text:000000000040515f\n.text:0000000000405162\n.text:0000000000405165\n.text:0000000000405168\n.text:000000000040516d\n.text:0000000000405171\n.text:0000000000405172\n.text:0000000000405174\n.text:0000000000405176\n.text:0000000000405177\n'
p461
tp462
sS'_exit'
p463
(S'\n__stdcall _exit(int __status)\n'
p464
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_0060b068)();\u000a  return;\u000a}\u000a\u000a
p465
S'JMP qword ptr [0x0060b068]\n'
p466
S'ff 25 12 99 20 00\n'
p467
S'.plt:0000000000401750\n'
p468
tp469
sS'getutxent'
p470
(S'\n__stdcall getutxent()\n'
p471
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000autmpx * getutxent(void)\u000a\u000a{\u000a  utmpx *puVar1;\u000a  \u000a  puVar1 = (utmpx *)(*(code *)PTR_getutxent_0060b1e8)();\u000a  return puVar1;\u000a}\u000a\u000a
p472
S'JMP qword ptr [0x0060b1e8]\n'
p473
S'ff 25 92 97 20 00\n'
p474
S'.plt:0000000000401a50\n'
p475
tp476
sS'xrealloc'
p477
(S'\n__stdcall xrealloc(void * p, size_t n)\n'
p478
V\u000avoid * xrealloc(void *p,size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if ((p != (void *)0x0) && (n == 0)) {\u000a    free(p);\u000a    return (void *)0x0;\u000a  }\u000a  pvVar1 = realloc(p,n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p479
S'PUSH RBX\nMOV RBX,RSI\nTEST RDI,RDI\nJZ 0x00405d27\nTEST RBX,RBX\nJNZ 0x00405d27\nCALL 0x004016e0\nXOR EAX,EAX\nPOP RBX\nRET\nMOV RSI,RBX\nCALL 0x004019f0\nTEST RBX,RBX\nJZ 0x00405d39\nTEST RAX,RAX\nJZ 0x00405d3b\nPOP RBX\nRET\nCALL 0x00405e60\n'
p480
S'53\n48 89 f3\n48 85 ff\n74 0e\n48 85 db\n75 09\ne8 bd b9 ff ff\n31 c0\n5b\nc3\n48 89 de\ne8 c1 bc ff ff\n48 85 db\n74 05\n48 85 c0\n74 02\n5b\nc3\ne8 20 01 00 00\n'
p481
S'.text:0000000000405d10\n.text:0000000000405d11\n.text:0000000000405d14\n.text:0000000000405d17\n.text:0000000000405d19\n.text:0000000000405d1c\n.text:0000000000405d1e\n.text:0000000000405d23\n.text:0000000000405d25\n.text:0000000000405d26\n.text:0000000000405d27\n.text:0000000000405d2a\n.text:0000000000405d2f\n.text:0000000000405d32\n.text:0000000000405d34\n.text:0000000000405d37\n.text:0000000000405d39\n.text:0000000000405d3a\n.text:0000000000405d3b\n'
p482
tp483
sS'close_stdout'
p484
(S'\n__stdcall close_stdout()\n'
p485
V\u000avoid close_stdout(void)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  undefined8 uVar4;\u000a  uint *puVar5;\u000a  char *arg;\u000a  \u000a  iVar2 = close_stream(stdout);\u000a  if (iVar2 != 0) {\u000a    if (ignore_EPIPE != false) {\u000a      piVar3 = __errno_location();\u000a      if (*piVar3 == 0x20) goto LAB_004024a7;\u000a    }\u000a    uVar4 = dcgettext(0,"write error",5);\u000a    arg = file_name;\u000a    puVar5 = (uint *)__errno_location();\u000a    uVar1 = *puVar5;\u000a    if (arg == (char *)0x0) {\u000a      error(0,(ulong)uVar1,0x407837,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a      _exit(exit_failure);\u000a    }\u000a    arg = quotearg_colon(arg);\u000a    error(0,(ulong)uVar1,"%s: %s",arg,uVar4);\u000a                    /* WARNING: Subroutine does not return */\u000a    _exit(exit_failure);\u000a  }\u000aLAB_004024a7:\u000a  iVar2 = close_stream(stderr);\u000a  if (iVar2 == 0) {\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(exit_failure);\u000a}\u000a\u000a
p486
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RDI,qword ptr [0x0060b2e8]\nCALL 0x00406780\nTEST EAX,EAX\nJZ 0x004024a7\nCMP byte ptr [0x0060b340],0x0\nJZ 0x004024bc\nCALL 0x00401710\nCMP dword ptr [RAX],0x20\nJNZ 0x004024bc\nMOV RDI,qword ptr [0x0060b320]\nCALL 0x00406780\nTEST EAX,EAX\nJNZ 0x00402501\nPOP RBX\nPOP R14\nPOP RBP\nRET\nXOR EDI,EDI\nMOV ESI,0x407827\nMOV EDX,0x5\nCALL 0x00401800\nMOV R14,RAX\nMOV RBX,qword ptr [0x0060b338]\nCALL 0x00401710\nTEST RBX,RBX\nMOV EBP,dword ptr [RAX]\nJNZ 0x0040250c\nXOR EDI,EDI\nMOV EDX,0x407837\nXOR EAX,EAX\nMOV ESI,EBP\nMOV RCX,R14\nCALL 0x00401a60\nMOV EDI,dword ptr [0x0060b278]\nCALL 0x00401750\nMOV EDI,dword ptr [0x0060b278]\nCALL 0x00401750\nMOV RDI,RBX\nCALL 0x00405240\nMOV RCX,RAX\nXOR EDI,EDI\nMOV EDX,0x407833\nXOR EAX,EAX\nMOV ESI,EBP\nMOV R8,R14\nCALL 0x00401a60\nMOV EDI,dword ptr [0x0060b278]\nCALL 0x00401750\n'
p487
S'55\n41 56\n53\n48 8b 3d 5d 8e 20 00\ne8 f0 42 00 00\n85 c0\n74 13\n80 3d a5 8e 20 00 00\n74 1f\ne8 6e f2 ff ff\n83 38 20\n75 15\n48 8b 3d 72 8e 20 00\ne8 cd 42 00 00\n85 c0\n75 4a\n5b\n41 5e\n5d\nc3\n31 ff\nbe 27 78 40 00\nba 05 00 00 00\ne8 33 f3 ff ff\n49 89 c6\n48 8b 1d 61 8e 20 00\ne8 34 f2 ff ff\n48 85 db\n8b 28\n75 29\n31 ff\nba 37 78 40 00\n31 c0\n89 ee\n4c 89 f1\ne8 6a f5 ff ff\n8b 3d 7c 8d 20 00\ne8 4f f2 ff ff\n8b 3d 71 8d 20 00\ne8 44 f2 ff ff\n48 89 df\ne8 2c 2d 00 00\n48 89 c1\n31 ff\nba 33 78 40 00\n31 c0\n89 ee\n4d 89 f0\ne8 36 f5 ff ff\n8b 3d 48 8d 20 00\ne8 1b f2 ff ff\n'
p488
S'.text:0000000000402480\n.text:0000000000402481\n.text:0000000000402483\n.text:0000000000402484\n.text:000000000040248b\n.text:0000000000402490\n.text:0000000000402492\n.text:0000000000402494\n.text:000000000040249b\n.text:000000000040249d\n.text:00000000004024a2\n.text:00000000004024a5\n.text:00000000004024a7\n.text:00000000004024ae\n.text:00000000004024b3\n.text:00000000004024b5\n.text:00000000004024b7\n.text:00000000004024b8\n.text:00000000004024ba\n.text:00000000004024bb\n.text:00000000004024bc\n.text:00000000004024be\n.text:00000000004024c3\n.text:00000000004024c8\n.text:00000000004024cd\n.text:00000000004024d0\n.text:00000000004024d7\n.text:00000000004024dc\n.text:00000000004024df\n.text:00000000004024e1\n.text:00000000004024e3\n.text:00000000004024e5\n.text:00000000004024ea\n.text:00000000004024ec\n.text:00000000004024ee\n.text:00000000004024f1\n.text:00000000004024f6\n.text:00000000004024fc\n.text:0000000000402501\n.text:0000000000402507\n.text:000000000040250c\n.text:000000000040250f\n.text:0000000000402514\n.text:0000000000402517\n.text:0000000000402519\n.text:000000000040251e\n.text:0000000000402520\n.text:0000000000402522\n.text:0000000000402525\n.text:000000000040252a\n.text:0000000000402530\n'
p489
tp490
sS'version_etc_ar'
p491
(S'\n__stdcall version_etc_ar(FILE * stream, char * command_name, char * package, char * version, char * * authors)\n'
p492
V\u000avoid version_etc_ar(FILE *stream,char *command_name,char *package,char *version,char **authors)\u000a\u000a{\u000a  long lVar1;\u000a  size_t n_authors;\u000a  \u000a  n_authors = 0xffffffffffffffff;\u000a  do {\u000a    lVar1 = n_authors + 1;\u000a    n_authors = n_authors + 1;\u000a  } while (authors[lVar1] != (char *)0x0);\u000a  version_etc_arn(stream,command_name,package,version,authors,n_authors);\u000a  return;\u000a}\u000a\u000a
p493
S'MOV R9,-0x1\nNOP word ptr [RAX + RAX*0x1]\nCMP qword ptr [R8 + R9*0x8 + 0x8],0x0\nLEA R9,[R9 + 0x1]\nJNZ 0x00405b20\nJMP 0x004057b0\n'
p494
S'49 c7 c1 ff ff ff ff\n66 0f 1f 84 00 00 00 00 00\n4b 83 7c c8 08 00\n4d 8d 49 01\n75 f4\ne9 7f fc ff ff\n'
p495
S'.text:0000000000405b10\n.text:0000000000405b17\n.text:0000000000405b20\n.text:0000000000405b26\n.text:0000000000405b2a\n.text:0000000000405b2c\n'
p496
tp497
sS'__ctype_tolower_loc'
p498
(S'\n__stdcall __ctype_tolower_loc()\n'
p499
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_0060b250)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p500
S'JMP qword ptr [0x0060b250]\n'
p501
S'ff 25 2a 97 20 00\n'
p502
S'.plt:0000000000401b20\n'
p503
tp504
sS'c_isxdigit'
p505
(S'\n__stdcall c_isxdigit()\n'
p506
V\u000a_Bool c_isxdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x30U < 0x37) {\u000a    return (_Bool)((byte)(0x7e0000007e03ff >> ((byte)(in_EDI - 0x30U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p507
S'ADD EDI,-0x30\nCMP EDI,0x36\nJA 0x0040675b\nMOV RAX,0x7e0000007e03ff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p508
S'83 c7 d0\n83 ff 36\n77 13\n48 b8 ff 03 7e 00 00 00 7e 00\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p509
S'.text:0000000000406740\n.text:0000000000406743\n.text:0000000000406746\n.text:0000000000406748\n.text:0000000000406752\n.text:0000000000406754\n.text:0000000000406757\n.text:000000000040675a\n.text:000000000040675b\n.text:000000000040675d\n'
p510
tp511
sS'__libc_csu_fini'
p512
(S'\n__stdcall __libc_csu_fini()\n'
p513
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p514
S'RET\n'
p515
S'f3 c3\n'
p516
S'.text:00000000004072e0\n'
p517
tp518
sS'getloadavg'
p519
(S'\n__stdcall getloadavg(double * __loadavg, int __nelem)\n'
p520
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getloadavg(double *__loadavg,int __nelem)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getloadavg_0060b0b0)();\u000a  return iVar1;\u000a}\u000a\u000a
p521
S'JMP qword ptr [0x0060b0b0]\n'
p522
S'ff 25 ca 98 20 00\n'
p523
S'.plt:00000000004017e0\n'
p524
tp525
sS'abort'
p526
(S'\n__stdcall abort()\n'
p527
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid abort(void)\u000a\u000a{\u000a  (*(code *)PTR_abort_0060b040)();\u000a  return;\u000a}\u000a\u000a
p528
S'JMP qword ptr [0x0060b040]\n'
p529
S'ff 25 3a 99 20 00\n'
p530
S'.plt:0000000000401700\n'
p531
tp532
sS'select_plural'
p533
(S'\n__stdcall select_plural(uintmax_t n)\n'
p534
V\u000aulong select_plural(uintmax_t n)\u000a\u000a{\u000a  return n;\u000a}\u000a\u000a
p535
S'MOV RAX,RDI\nRET\n'
p536
S'48 89 f8\nc3\n'
p537
S'.text:00000000004023e0\n.text:00000000004023e3\n'
p538
tp539
sS'version_etc'
p540
(S'\n__stdcall version_etc(FILE * stream, char * command_name, char * package, char * version)\n'
p541
V\u000avoid version_etc(FILE *stream,char *command_name,char *package,char *version,...)\u000a\u000a{\u000a  char in_AL;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_d8;\u000a  undefined local_b8 [32];\u000a  undefined8 local_98;\u000a  undefined8 local_90;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  undefined4 local_18;\u000a  \u000a  if (in_AL != 0) {\u000a    local_88 = in_XMM0_Da;\u000a    local_78 = in_XMM1_Da;\u000a    local_68 = in_XMM2_Da;\u000a    local_58 = in_XMM3_Da;\u000a    local_48 = in_XMM4_Da;\u000a    local_38 = in_XMM5_Da;\u000a    local_28 = in_XMM6_Da;\u000a    local_18 = in_XMM7_Da;\u000a  }\u000a  local_d8.reg_save_area = local_b8;\u000a  local_d8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_d8.fp_offset = 0x30;\u000a  local_d8.gp_offset = 0x20;\u000a  local_98 = in_R8;\u000a  local_90 = in_R9;\u000a  version_etc_va(stream,command_name,package,version,&local_d8);\u000a  return;\u000a}\u000a\u000a
p542
S'SUB RSP,0xd8\nTEST AL,AL\nJZ 0x00405be2\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xe0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x20\nMOV R8,RSP\nCALL 0x00405b40\nADD RSP,0xd8\nRET\n'
p543
S'48 81 ec d8 00 00 00\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 e0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 20 00 00 00\n49 89 e0\ne8 26 ff ff ff\n48 81 c4 d8 00 00 00\nc3\n'
p544
S'.text:0000000000405ba0\n.text:0000000000405ba7\n.text:0000000000405ba9\n.text:0000000000405bab\n.text:0000000000405bb0\n.text:0000000000405bb5\n.text:0000000000405bba\n.text:0000000000405bc2\n.text:0000000000405bca\n.text:0000000000405bd2\n.text:0000000000405bda\n.text:0000000000405be2\n.text:0000000000405be7\n.text:0000000000405bec\n.text:0000000000405bf1\n.text:0000000000405bf6\n.text:0000000000405bfe\n.text:0000000000405c03\n.text:0000000000405c0b\n.text:0000000000405c12\n.text:0000000000405c15\n.text:0000000000405c1a\n.text:0000000000405c21\n'
p545
tp546
sS'lseek'
p547
(S'\n__stdcall lseek(int __fd, __off_t __offset, int __whence)\n'
p548
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__off_t lseek(int __fd,__off_t __offset,int __whence)\u000a\u000a{\u000a  __off_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_lseek_0060b100)();\u000a  return _Var1;\u000a}\u000a\u000a
p549
S'JMP qword ptr [0x0060b100]\n'
p550
S'ff 25 7a 98 20 00\n'
p551
S'.plt:0000000000401880\n'
p552
tp553
sS'quotearg_n_mem'
p554
(S'\n__stdcall quotearg_n_mem(char * arg, size_t argsize)\n'
p555
V\u000achar * quotearg_n_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  quoting_options *options;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,options);\u000a  return pcVar1;\u000a}\u000a\u000a
p556
S'MOV ECX,0x60b350\nJMP 0x00404eb0\n'
p557
S'b9 50 b3 60 00\ne9 36 fe ff ff\n'
p558
S'.text:0000000000405070\n.text:0000000000405075\n'
p559
tp560
sS'__printf_chk'
p561
(S'\n__stdcall __printf_chk()\n'
p562
V\u000avoid __printf_chk(void)\u000a\u000a{\u000a  (*(code *)PTR___printf_chk_0060b1d0)();\u000a  return;\u000a}\u000a\u000a
p563
S'JMP qword ptr [0x0060b1d0]\n'
p564
S'ff 25 aa 97 20 00\n'
p565
S'.plt:0000000000401a20\n'
p566
tp567
sS'emit_ancillary_info'
p568
(S'\n__stdcall emit_ancillary_info()\n'
p569
V\u000avoid emit_ancillary_info(void)\u000a\u000a{\u000a  infomap infomap [7];\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  char *__s1;\u000a  undefined8 uVar3;\u000a  infomap *piVar4;\u000a  char *__s2;\u000a  \u000a  piVar4 = (infomap *)&ram0x004077b0;\u000a  __s2 = "[";\u000a  do {\u000a    iVar1 = strcmp("uptime",__s2);\u000a    if (iVar1 == 0) break;\u000a    __s2 = piVar4[1].program;\u000a    piVar4 = piVar4 + 1;\u000a  } while (__s2 != (char *)0x0);\u000a  __s2 = "uptime";\u000a  if (piVar4->node != (char *)0x0) {\u000a    __s2 = piVar4->node;\u000a  }\u000a  uVar2 = dcgettext(0,"\u005cn%s online help: <%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"GNU coreutils","http://www.gnu.org/software/coreutils/");\u000a  __s1 = setlocale(5,(char *)0x0);\u000a  if (__s1 != (char *)0x0) {\u000a    iVar1 = strncmp(__s1,"en_",3);\u000a    if (iVar1 != 0) {\u000a      uVar2 = dcgettext(0,"Report %s translation bugs to <http://translationproject.org/team/>\u005cn",5)\u000a      ;\u000a      __printf_chk(1,uVar2,0x4076ee,uVar2);\u000a    }\u000a  }\u000a  uVar2 = dcgettext(0,"Full documentation at: <%s%s>\u005cn",5);\u000a  __printf_chk(1,uVar2,"http://www.gnu.org/software/coreutils/",0x4076ee);\u000a  uVar2 = dcgettext(0,"or available locally via: info \u005c'(coreutils) %s%s\u005c'\u005cn",5);\u000a  uVar3 = 0x4074a5;\u000a  if (__s2 == "uptime") {\u000a    uVar3 = 0x4075cc;\u000a  }\u000a  __printf_chk(1,uVar2,__s2,uVar3);\u000a  return;\u000a}\u000a\u000a
p570
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV EBX,0x4077b0\nMOV ESI,0x4075b0\nNOP\nMOV EDI,0x4076ee\nCALL 0x00401910\nTEST EAX,EAX\nJZ 0x00401dab\nMOV RSI,qword ptr [RBX + 0x10]\nADD RBX,0x10\nTEST RSI,RSI\nJNZ 0x00401d90\nMOV RAX,qword ptr [RBX + 0x8]\nTEST RAX,RAX\nMOV EBX,0x4076ee\nCMOVNZ RBX,RAX\nXOR EDI,EDI\nMOV ESI,0x40760f\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x40753d\nMOV ECX,0x407626\nXOR EAX,EAX\nCALL 0x00401a20\nMOV EDI,0x5\nXOR ESI,ESI\nCALL 0x00401a10\nTEST RAX,RAX\nJZ 0x00401e34\nMOV ESI,0x40764d\nMOV EDX,0x3\nMOV RDI,RAX\nCALL 0x00401730\nTEST EAX,EAX\nJZ 0x00401e34\nXOR EDI,EDI\nMOV ESI,0x407651\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x4076ee\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x407696\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,RAX\nMOV R14D,0x4076ee\nMOV EDI,0x1\nMOV EDX,0x407626\nMOV ECX,0x4076ee\nXOR EAX,EAX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x4076b5\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nCMP RBX,R14\nMOV EAX,0x4075cc\nMOV ECX,0x4074a5\nCMOVZ RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RDX\nMOV RDX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nJMP 0x00401a20\n'
p571
S'41 56\n53\n50\nbb b0 77 40 00\nbe b0 75 40 00\n66 90\nbf ee 76 40 00\ne8 76 fb ff ff\n85 c0\n74 0d\n48 8b 73 10\n48 83 c3 10\n48 85 f6\n75 e5\n48 8b 43 08\n48 85 c0\nbb ee 76 40 00\n48 0f 45 d8\n31 ff\nbe 0f 76 40 00\nba 05 00 00 00\ne8 34 fa ff ff\n48 89 c6\nbf 01 00 00 00\nba 3d 75 40 00\nb9 26 76 40 00\n31 c0\ne8 3b fc ff ff\nbf 05 00 00 00\n31 f6\ne8 1f fc ff ff\n48 85 c0\n74 3e\nbe 4d 76 40 00\nba 03 00 00 00\n48 89 c7\ne8 28 f9 ff ff\n85 c0\n74 28\n31 ff\nbe 51 76 40 00\nba 05 00 00 00\ne8 e3 f9 ff ff\n48 89 c1\nbf 01 00 00 00\nba ee 76 40 00\n31 c0\n48 89 ce\ne8 ec fb ff ff\n31 ff\nbe 96 76 40 00\nba 05 00 00 00\ne8 bb f9 ff ff\n48 89 c6\n41 be ee 76 40 00\nbf 01 00 00 00\nba 26 76 40 00\nb9 ee 76 40 00\n31 c0\ne8 bc fb ff ff\n31 ff\nbe b5 76 40 00\nba 05 00 00 00\ne8 8b f9 ff ff\n48 89 c2\n4c 39 f3\nb8 cc 75 40 00\nb9 a5 74 40 00\n48 0f 44 c8\nbf 01 00 00 00\n31 c0\n48 89 d6\n48 89 da\n48 83 c4 08\n5b\n41 5e\ne9 7e fb ff ff\n'
p572
S'.text:0000000000401d80\n.text:0000000000401d82\n.text:0000000000401d83\n.text:0000000000401d84\n.text:0000000000401d89\n.text:0000000000401d8e\n.text:0000000000401d90\n.text:0000000000401d95\n.text:0000000000401d9a\n.text:0000000000401d9c\n.text:0000000000401d9e\n.text:0000000000401da2\n.text:0000000000401da6\n.text:0000000000401da9\n.text:0000000000401dab\n.text:0000000000401daf\n.text:0000000000401db2\n.text:0000000000401db7\n.text:0000000000401dbb\n.text:0000000000401dbd\n.text:0000000000401dc2\n.text:0000000000401dc7\n.text:0000000000401dcc\n.text:0000000000401dcf\n.text:0000000000401dd4\n.text:0000000000401dd9\n.text:0000000000401dde\n.text:0000000000401de0\n.text:0000000000401de5\n.text:0000000000401dea\n.text:0000000000401dec\n.text:0000000000401df1\n.text:0000000000401df4\n.text:0000000000401df6\n.text:0000000000401dfb\n.text:0000000000401e00\n.text:0000000000401e03\n.text:0000000000401e08\n.text:0000000000401e0a\n.text:0000000000401e0c\n.text:0000000000401e0e\n.text:0000000000401e13\n.text:0000000000401e18\n.text:0000000000401e1d\n.text:0000000000401e20\n.text:0000000000401e25\n.text:0000000000401e2a\n.text:0000000000401e2c\n.text:0000000000401e2f\n.text:0000000000401e34\n.text:0000000000401e36\n.text:0000000000401e3b\n.text:0000000000401e40\n.text:0000000000401e45\n.text:0000000000401e48\n.text:0000000000401e4e\n.text:0000000000401e53\n.text:0000000000401e58\n.text:0000000000401e5d\n.text:0000000000401e5f\n.text:0000000000401e64\n.text:0000000000401e66\n.text:0000000000401e6b\n.text:0000000000401e70\n.text:0000000000401e75\n.text:0000000000401e78\n.text:0000000000401e7b\n.text:0000000000401e80\n.text:0000000000401e85\n.text:0000000000401e89\n.text:0000000000401e8e\n.text:0000000000401e90\n.text:0000000000401e93\n.text:0000000000401e96\n.text:0000000000401e9a\n.text:0000000000401e9b\n.text:0000000000401e9d\n'
p573
tp574
sS'version_etc_va'
p575
(S'\n__stdcall version_etc_va(FILE * stream, char * command_name, char * package, char * version, __va_list_tag * authors)\n'
p576
V\u000avoid version_etc_va(FILE *stream,char *command_name,char *package,char *version,\u000a                   __va_list_tag *authors)\u000a\u000a{\u000a  uint uVar1;\u000a  char *pcVar2;\u000a  size_t n_authors;\u000a  char **ppcVar3;\u000a  char *authtab [10];\u000a  char *local_58 [11];\u000a  \u000a  n_authors = 0;\u000a  do {\u000a    uVar1 = authors->gp_offset;\u000a    if ((ulong)(long)(int)uVar1 < 0x29) {\u000a      ppcVar3 = (char **)((long)(int)uVar1 + (long)authors->reg_save_area);\u000a      authors->gp_offset = uVar1 + 8;\u000a    }\u000a    else {\u000a      ppcVar3 = (char **)authors->overflow_arg_area;\u000a      *(char ***)&authors->overflow_arg_area = ppcVar3 + 1;\u000a    }\u000a    pcVar2 = *ppcVar3;\u000a    local_58[n_authors] = pcVar2;\u000a  } while ((pcVar2 != (char *)0x0) && (n_authors = n_authors + 1, n_authors < 10));\u000a  version_etc_arn(stream,command_name,package,version,local_58,n_authors);\u000a  return;\u000a}\u000a\u000a
p577
S'SUB RSP,0x58\nXOR R9D,R9D\nNOP word ptr [RAX + RAX*0x1]\nMOVSXD R10,dword ptr [R8]\nCMP R10,0x28\nJA 0x00405b70\nMOV R11,R10\nADD R11,qword ptr [R8 + 0x10]\nLEA EAX,[R10 + 0x8]\nMOV dword ptr [R8],EAX\nJMP 0x00405b7c\nMOV R11,qword ptr [R8 + 0x8]\nLEA RAX,[R11 + 0x8]\nMOV qword ptr [R8 + 0x8],RAX\nMOV RAX,qword ptr [R11]\nMOV qword ptr [RSP + R9*0x8],RAX\nTEST RAX,RAX\nJZ 0x00405b91\nINC R9\nCMP R9,0xa\nJC 0x00405b50\nMOV R8,RSP\nCALL 0x004057b0\nADD RSP,0x58\nRET\n'
p578
S'48 83 ec 58\n45 31 c9\n66 0f 1f 84 00 00 00 00 00\n4d 63 10\n49 83 fa 28\n77 17\n4d 89 d3\n4d 03 58 10\n41 8d 42 08\n41 89 00\neb 13\n4d 8b 58 08\n49 8d 43 08\n49 89 40 08\n49 8b 03\n4a 89 04 cc\n48 85 c0\n74 09\n49 ff c1\n49 83 f9 0a\n72 bf\n49 89 e0\ne8 17 fc ff ff\n48 83 c4 58\nc3\n'
p579
S'.text:0000000000405b40\n.text:0000000000405b44\n.text:0000000000405b47\n.text:0000000000405b50\n.text:0000000000405b53\n.text:0000000000405b57\n.text:0000000000405b59\n.text:0000000000405b5c\n.text:0000000000405b60\n.text:0000000000405b64\n.text:0000000000405b67\n.text:0000000000405b70\n.text:0000000000405b74\n.text:0000000000405b78\n.text:0000000000405b7c\n.text:0000000000405b7f\n.text:0000000000405b83\n.text:0000000000405b86\n.text:0000000000405b88\n.text:0000000000405b8b\n.text:0000000000405b8f\n.text:0000000000405b91\n.text:0000000000405b94\n.text:0000000000405b99\n.text:0000000000405b9d\n'
p580
tp581
sS'xzalloc'
p582
(S'\n__stdcall xzalloc(size_t s)\n'
p583
V\u000avoid * xzalloc(size_t s)\u000a\u000a{\u000a  void *__s;\u000a  \u000a  __s = xmalloc(s);\u000a  memset(__s,0,s);\u000a  return __s;\u000a}\u000a\u000a
p584
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nCALL 0x00405cd0\nMOV RBX,RAX\nXOR ESI,ESI\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00401890\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p585
S'41 56\n53\n50\n49 89 fe\ne8 04 ff ff ff\n48 89 c3\n31 f6\n48 89 df\n4c 89 f2\ne8 b4 ba ff ff\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p586
S'.text:0000000000405dc0\n.text:0000000000405dc2\n.text:0000000000405dc3\n.text:0000000000405dc4\n.text:0000000000405dc7\n.text:0000000000405dcc\n.text:0000000000405dcf\n.text:0000000000405dd1\n.text:0000000000405dd4\n.text:0000000000405dd7\n.text:0000000000405ddc\n.text:0000000000405ddf\n.text:0000000000405de3\n.text:0000000000405de4\n.text:0000000000405de6\n'
p587
tp588
sS'endutxent'
p589
(S'\n__stdcall endutxent()\n'
p590
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid endutxent(void)\u000a\u000a{\u000a  (*(code *)PTR_endutxent_0060b098)();\u000a  return;\u000a}\u000a\u000a
p591
S'JMP qword ptr [0x0060b098]\n'
p592
S'ff 25 e2 98 20 00\n'
p593
S'.plt:00000000004017b0\n'
p594
tp595
sS'gettext_quote'
p596
(S'\n__stdcall gettext_quote(char * msgid)\n'
p597
V\u000achar * gettext_quote(char *msgid)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *pcVar3;\u000a  int in_ESI;\u000a  bool bVar4;\u000a  \u000a  pcVar2 = (char *)dcgettext(0,msgid,5);\u000a  if (pcVar2 == msgid) {\u000a    locale_charset();\u000a    iVar1 = strcaseeq0();\u000a    if (iVar1 == 0) {\u000a      iVar1 = strcaseeq0();\u000a      if (iVar1 == 0) {\u000a        bVar4 = in_ESI == 9;\u000a        pcVar3 = "\u005c"";\u000a        pcVar2 = "\u005c'";\u000a      }\u000a      else {\u000a        bVar4 = *msgid == '`';\u000a        pcVar3 = &DAT_00408262;\u000a        pcVar2 = &DAT_00408266;\u000a      }\u000a    }\u000a    else {\u000a      bVar4 = *msgid == '`';\u000a      pcVar3 = "\u2018";\u000a      pcVar2 = "\u2019";\u000a    }\u000a    if (bVar4) {\u000a      pcVar2 = pcVar3;\u000a    }\u000a  }\u000a  return pcVar2;\u000a}\u000a\u000a
p598
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,ESI\nMOV RBX,RDI\nXOR EDI,EDI\nMOV EDX,0x5\nMOV RSI,RBX\nCALL 0x00401800\nCMP RAX,RBX\nJNZ 0x00405468\nCALL 0x004067f0\nMOV RBP,RAX\nMOV ESI,0x55\nMOV EDX,0x54\nMOV ECX,0x46\nMOV R8D,0x2d\nMOV R9D,0x38\nMOV RDI,RBP\nPUSH 0x0\nPUSH 0x0\nCALL 0x00405470\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00405418\nCMP byte ptr [RBX],0x60\nMOV ECX,0x408252\nMOV EAX,0x408256\nJMP 0x00405464\nMOV ESI,0x47\nMOV EDX,0x42\nMOV ECX,0x31\nMOV R8D,0x38\nMOV R9D,0x30\nMOV RDI,RBP\nPUSH 0x30\nPUSH 0x33\nCALL 0x00405470\nADD RSP,0x10\nTEST EAX,EAX\nJZ 0x00405456\nCMP byte ptr [RBX],0x60\nMOV ECX,0x408262\nMOV EAX,0x408266\nJMP 0x00405464\nCMP R14D,0x9\nMOV ECX,0x408246\nMOV EAX,0x40824a\nCMOVZ RAX,RCX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p599
S'55\n41 56\n53\n41 89 f6\n48 89 fb\n31 ff\nba 05 00 00 00\n48 89 de\ne8 37 c4 ff ff\n48 39 d8\n0f 85 96 00 00 00\ne8 19 14 00 00\n48 89 c5\nbe 55 00 00 00\nba 54 00 00 00\nb9 46 00 00 00\n41 b8 2d 00 00 00\n41 b9 38 00 00 00\n48 89 ef\n6a 00\n6a 00\ne8 6f 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 52 82 40 00\nb8 56 82 40 00\neb 4c\nbe 47 00 00 00\nba 42 00 00 00\nb9 31 00 00 00\n41 b8 38 00 00 00\n41 b9 30 00 00 00\n48 89 ef\n6a 30\n6a 33\ne8 31 00 00 00\n48 83 c4 10\n85 c0\n74 0f\n80 3b 60\nb9 62 82 40 00\nb8 66 82 40 00\neb 0e\n41 83 fe 09\nb9 46 82 40 00\nb8 4a 82 40 00\n48 0f 44 c1\n5b\n41 5e\n5d\nc3\n'
p600
S'.text:00000000004053b0\n.text:00000000004053b1\n.text:00000000004053b3\n.text:00000000004053b4\n.text:00000000004053b7\n.text:00000000004053ba\n.text:00000000004053bc\n.text:00000000004053c1\n.text:00000000004053c4\n.text:00000000004053c9\n.text:00000000004053cc\n.text:00000000004053d2\n.text:00000000004053d7\n.text:00000000004053da\n.text:00000000004053df\n.text:00000000004053e4\n.text:00000000004053e9\n.text:00000000004053ef\n.text:00000000004053f5\n.text:00000000004053f8\n.text:00000000004053fa\n.text:00000000004053fc\n.text:0000000000405401\n.text:0000000000405405\n.text:0000000000405407\n.text:0000000000405409\n.text:000000000040540c\n.text:0000000000405411\n.text:0000000000405416\n.text:0000000000405418\n.text:000000000040541d\n.text:0000000000405422\n.text:0000000000405427\n.text:000000000040542d\n.text:0000000000405433\n.text:0000000000405436\n.text:0000000000405438\n.text:000000000040543a\n.text:000000000040543f\n.text:0000000000405443\n.text:0000000000405445\n.text:0000000000405447\n.text:000000000040544a\n.text:000000000040544f\n.text:0000000000405454\n.text:0000000000405456\n.text:000000000040545a\n.text:000000000040545f\n.text:0000000000405464\n.text:0000000000405468\n.text:0000000000405469\n.text:000000000040546b\n.text:000000000040546c\n'
p601
tp602
sS'fclose'
p603
(S'\n__stdcall fclose(FILE * __stream)\n'
p604
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fclose(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fclose_0060b0a8)();\u000a  return iVar1;\u000a}\u000a\u000a
p605
S'JMP qword ptr [0x0060b0a8]\n'
p606
S'ff 25 d2 98 20 00\n'
p607
S'.plt:00000000004017d0\n'
p608
tp609
sS'__ctype_get_mb_cur_max'
p610
(S'\n__stdcall __ctype_get_mb_cur_max()\n'
p611
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t __ctype_get_mb_cur_max(void)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0060b0c8)();\u000a  return sVar1;\u000a}\u000a\u000a
p612
S'JMP qword ptr [0x0060b0c8]\n'
p613
S'ff 25 b2 98 20 00\n'
p614
S'.plt:0000000000401810\n'
p615
tp616
sS'quotearg_n_style'
p617
(S'\n__stdcall quotearg_n_style(char * arg)\n'
p618
V\u000achar * quotearg_n_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  quoting_options o;\u000a  quoting_options local_50;\u000a  \u000a  quoting_options_from_style(&local_50);\u000a  pcVar1 = quotearg_n_options((char *)((ulong)arg & 0xffffffff),argsize,\u000a                              (quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p619
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV RBX,RDX\nMOV EBP,EDI\nLEA R14,[RSP + 0x8]\nMOV RDI,R14\nCALL 0x004050e0\nMOV RDX,-0x1\nMOV EDI,EBP\nMOV RSI,RBX\nMOV RCX,R14\nCALL 0x00404eb0\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p620
S'55\n41 56\n53\n48 83 ec 40\n48 89 d3\n89 fd\n4c 8d 74 24 08\n4c 89 f7\ne8 26 00 00 00\n48 c7 c2 ff ff ff ff\n89 ef\n48 89 de\n4c 89 f1\ne8 e2 fd ff ff\n48 83 c4 40\n5b\n41 5e\n5d\nc3\n'
p621
S'.text:00000000004050a0\n.text:00000000004050a1\n.text:00000000004050a3\n.text:00000000004050a4\n.text:00000000004050a8\n.text:00000000004050ab\n.text:00000000004050ad\n.text:00000000004050b2\n.text:00000000004050b5\n.text:00000000004050ba\n.text:00000000004050c1\n.text:00000000004050c3\n.text:00000000004050c6\n.text:00000000004050c9\n.text:00000000004050ce\n.text:00000000004050d2\n.text:00000000004050d3\n.text:00000000004050d5\n.text:00000000004050d6\n'
p622
tp623
sS'quote_n'
p624
(S'\n__stdcall quote_n(char * arg)\n'
p625
V\u000achar * quote_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quote_n_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p626
S'MOV RDX,-0x1\nJMP 0x00405370\n'
p627
S'48 c7 c2 ff ff ff ff\neb d7\n'
p628
S'.text:0000000000405390\n.text:0000000000405397\n'
p629
tp630
sS'quotearg_alloc'
p631
(S'\n__stdcall quotearg_alloc(char * arg, size_t argsize, quoting_options * o)\n'
p632
V\u000achar * quotearg_alloc(char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_alloc_mem(arg,argsize,(size_t *)0x0,o);\u000a  return pcVar1;\u000a}\u000a\u000a
p633
S'MOV RAX,RDX\nXOR EDX,EDX\nMOV RCX,RAX\nJMP 0x00404d20\n'
p634
S'48 89 d0\n31 d2\n48 89 c1\neb 06\n'
p635
S'.text:0000000000404d10\n.text:0000000000404d13\n.text:0000000000404d15\n.text:0000000000404d18\n'
p636
tp637
sS'close_stdout_set_file_name'
p638
(S'\n__stdcall close_stdout_set_file_name(char * file)\n'
p639
V\u000avoid close_stdout_set_file_name(char *file)\u000a\u000a{\u000a  file_name = file;\u000a  return;\u000a}\u000a\u000a
p640
S'MOV qword ptr [0x0060b338],RDI\nRET\n'
p641
S'48 89 3d d1 8e 20 00\nc3\n'
p642
S'.text:0000000000402460\n.text:0000000000402467\n'
p643
tp644
sS'parse_long_options'
p645
(S'\n__stdcall parse_long_options(char * * argv, char * command_name, char * package, char * version, anon_subr_void_int * usage_func)\n'
p646
V\u000avoid parse_long_options(char **argv,char *command_name,char *package,char *version,\u000a                       void (*usage_func)(int),...)\u000a\u000a{\u000a  undefined4 uVar1;\u000a  char in_AL;\u000a  int iVar2;\u000a  code *in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list authors;\u000a  __va_list_tag local_f8;\u000a  undefined local_d8 [48];\u000a  undefined4 local_a8;\u000a  undefined4 local_98;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  \u000a  uVar1 = opterr;\u000a  if (in_AL != 0) {\u000a    local_a8 = in_XMM0_Da;\u000a    local_98 = in_XMM1_Da;\u000a    local_88 = in_XMM2_Da;\u000a    local_78 = in_XMM3_Da;\u000a    local_68 = in_XMM4_Da;\u000a    local_58 = in_XMM5_Da;\u000a    local_48 = in_XMM6_Da;\u000a    local_38 = in_XMM7_Da;\u000a  }\u000a  opterr = 0;\u000a  if ((int)argv != 2) {\u000a    optind = 0;\u000a    opterr = uVar1;\u000a    return;\u000a  }\u000a  iVar2 = getopt_long(argv,command_name,&DAT_00407c59,long_options,0);\u000a  if (iVar2 != 0x76) {\u000a    if (iVar2 != 0x68) {\u000a      optind = 0;\u000a      opterr = uVar1;\u000a      return;\u000a    }\u000a    (*in_R9)(0);\u000a  }\u000a  local_f8.reg_save_area = local_d8;\u000a  local_f8.overflow_arg_area = &authors[0].overflow_arg_area;\u000a  local_f8.fp_offset = 0x30;\u000a  local_f8.gp_offset = 0x30;\u000a  version_etc_va(stdout,package,version,(char *)usage_func,&local_f8);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p647
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nSUB RSP,0xd0\nMOV RBX,R9\nMOV R14,R8\nMOV R15,RCX\nMOV R12,RDX\nTEST AL,AL\nJZ 0x00403e16\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV EBP,dword ptr [0x0060b300]\nMOV dword ptr [0x0060b300],0x0\nCMP EDI,0x2\nJNZ 0x00403e47\nMOV EDX,0x407c59\nMOV ECX,0x407c70\nXOR R8D,R8D\nCALL 0x00401830\nCMP EAX,0x76\nJZ 0x00403e6b\nCMP EAX,0x68\nJZ 0x00403e67\nMOV dword ptr [0x0060b300],EBP\nMOV dword ptr [0x0060b2f0],0x0\nADD RSP,0xd0\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EDI,EDI\nCALL RBX\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0x100 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x30\nMOV RDI,qword ptr [0x0060b2e8]\nMOV R8,RSP\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nCALL 0x00405b40\nXOR EDI,EDI\nCALL 0x00401ad0\n'
p648
S'55\n41 57\n41 56\n41 54\n53\n48 81 ec d0 00 00 00\n4c 89 cb\n4d 89 c6\n49 89 cf\n49 89 d4\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n8b 2d e4 74 20 00\nc7 05 da 74 20 00 00 00 00 00\n83 ff 02\n75 1c\nba 59 7c 40 00\nb9 70 7c 40 00\n45 31 c0\ne8 f3 d9 ff ff\n83 f8 76\n74 29\n83 f8 68\n74 20\n89 2d b3 74 20 00\nc7 05 99 74 20 00 00 00 00 00\n48 81 c4 d0 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n31 ff\nff d3\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 00 01 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 30 00 00 00\n48 8b 3d 50 74 20 00\n49 89 e0\n4c 89 e6\n4c 89 fa\n4c 89 f1\ne8 97 1c 00 00\n31 ff\ne8 20 dc ff ff\n'
p649
S'.text:0000000000403dc0\n.text:0000000000403dc1\n.text:0000000000403dc3\n.text:0000000000403dc5\n.text:0000000000403dc7\n.text:0000000000403dc8\n.text:0000000000403dcf\n.text:0000000000403dd2\n.text:0000000000403dd5\n.text:0000000000403dd8\n.text:0000000000403ddb\n.text:0000000000403ddd\n.text:0000000000403ddf\n.text:0000000000403de4\n.text:0000000000403de9\n.text:0000000000403dee\n.text:0000000000403df6\n.text:0000000000403dfe\n.text:0000000000403e06\n.text:0000000000403e0e\n.text:0000000000403e16\n.text:0000000000403e1c\n.text:0000000000403e26\n.text:0000000000403e29\n.text:0000000000403e2b\n.text:0000000000403e30\n.text:0000000000403e35\n.text:0000000000403e38\n.text:0000000000403e3d\n.text:0000000000403e40\n.text:0000000000403e42\n.text:0000000000403e45\n.text:0000000000403e47\n.text:0000000000403e4d\n.text:0000000000403e57\n.text:0000000000403e5e\n.text:0000000000403e5f\n.text:0000000000403e61\n.text:0000000000403e63\n.text:0000000000403e65\n.text:0000000000403e66\n.text:0000000000403e67\n.text:0000000000403e69\n.text:0000000000403e6b\n.text:0000000000403e70\n.text:0000000000403e75\n.text:0000000000403e7d\n.text:0000000000403e82\n.text:0000000000403e8a\n.text:0000000000403e91\n.text:0000000000403e98\n.text:0000000000403e9b\n.text:0000000000403e9e\n.text:0000000000403ea1\n.text:0000000000403ea4\n.text:0000000000403ea9\n.text:0000000000403eab\n'
p650
tp651
sS'time'
p652
(S'\n__stdcall time(time_t * __timer)\n'
p653
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000atime_t time(time_t *__timer)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = (*(code *)PTR_time_0060b178)();\u000a  return tVar1;\u000a}\u000a\u000a
p654
S'JMP qword ptr [0x0060b178]\n'
p655
S'ff 25 02 98 20 00\n'
p656
S'.plt:0000000000401970\n'
p657
tp658
sS'__libc_csu_init'
p659
(S'\n__stdcall __libc_csu_init()\n'
p660
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p661
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x60ae08]\nPUSH RBP\nLEA RBP,[0x60ae10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00401688\nTEST RBP,RBP\nJZ 0x004072c6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x004072b0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p662
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 86 3b 20 00\n55\n48 8d 2d 86 3b 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 e7 a3 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p663
S'.text:0000000000407270\n.text:0000000000407272\n.text:0000000000407274\n.text:0000000000407277\n.text:0000000000407279\n.text:000000000040727b\n.text:0000000000407282\n.text:0000000000407283\n.text:000000000040728a\n.text:000000000040728b\n.text:000000000040728e\n.text:0000000000407291\n.text:0000000000407294\n.text:0000000000407298\n.text:000000000040729c\n.text:00000000004072a1\n.text:00000000004072a4\n.text:00000000004072a6\n.text:00000000004072a8\n.text:00000000004072b0\n.text:00000000004072b3\n.text:00000000004072b6\n.text:00000000004072b9\n.text:00000000004072bd\n.text:00000000004072c1\n.text:00000000004072c4\n.text:00000000004072c6\n.text:00000000004072ca\n.text:00000000004072cb\n.text:00000000004072cc\n.text:00000000004072ce\n.text:00000000004072d0\n.text:00000000004072d2\n.text:00000000004072d4\n'
p664
tp665
sS'c_isdigit'
p666
(S'\n__stdcall c_isdigit()\n'
p667
V\u000a_Bool c_isdigit(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x30U < 10);\u000a}\u000a\u000a
p668
S'ADD EDI,-0x30\nCMP EDI,0xa\nSETC AL\nRET\n'
p669
S'83 c7 d0\n83 ff 0a\n0f 92 c0\nc3\n'
p670
S'.text:00000000004066b0\n.text:00000000004066b3\n.text:00000000004066b6\n.text:00000000004066b9\n'
p671
tp672
sS'usage'
p673
(S'\n__stdcall usage()\n'
p674
V\u000avoid usage(int iParm1)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  char *__s;\u000a  undefined auVar2 [16];\u000a  \u000a  if (iParm1 == 0) {\u000a    uVar1 = dcgettext(0,0x407340,5);\u000a    __printf_chk(1,uVar1,program_name,uVar1);\u000a    auVar2 = dcgettext(0,\u000a                       "Print the current time, the length of time the system has been up,\u005cnthe number of users on the system, and the average number of jobs\u005cnin the run queue over the last 1, 5 and 15 minutes."\u000a                       ,5);\u000a    __printf_chk(1,SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0),SUB168(auVar2,0));\u000a    auVar2 = dcgettext(0,\u000a                       "  Processes in\u005cnan uninterruptible sleep state also contribute to the load average.\u005cn"\u000a                       ,5);\u000a    __printf_chk(1,SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0),SUB168(auVar2,0));\u000a    uVar1 = dcgettext(0,"If FILE is not specified, use %s.  %s as FILE is common.\u005cn\u005cn",5);\u000a    __printf_chk(1,uVar1,"/var/run/utmp","/var/log/wtmp");\u000a    __s = (char *)dcgettext(0,"      --help     display this help and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    __s = (char *)dcgettext(0,"      --version  output version information and exit\u005cn",5);\u000a    fputs_unlocked(__s,stdout);\u000a    emit_ancillary_info();\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(0);\u000a  }\u000a  emit_try_help();\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(iParm1);\u000a}\u000a\u000a
p675
S'PUSH RBX\nMOV EBX,EDI\nTEST EBX,EBX\nJNZ 0x00401d31\nXOR EDI,EDI\nMOV ESI,0x407340\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV RDX,qword ptr [0x0060b348]\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x40735e\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x407417\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x40746b\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,RAX\nMOV EDI,0x1\nMOV EDX,0x4074a6\nMOV ECX,0x4074b4\nXOR EAX,EAX\nCALL 0x00401a20\nXOR EDI,EDI\nMOV ESI,0x4074c2\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,qword ptr [0x0060b2e8]\nMOV RDI,RAX\nCALL 0x004018e0\nXOR EDI,EDI\nMOV ESI,0x4074ef\nMOV EDX,0x5\nCALL 0x00401800\nMOV RSI,qword ptr [0x0060b2e8]\nMOV RDI,RAX\nCALL 0x004018e0\nCALL 0x00401d80\nMOV EDI,EBX\nCALL 0x00401ad0\nCALL 0x00401d40\nMOV EDI,EBX\nCALL 0x00401ad0\n'
p676
S'53\n89 fb\n85 db\n0f 85 e6 00 00 00\n31 ff\nbe 40 73 40 00\nba 05 00 00 00\ne8 a4 fb ff ff\n48 89 c1\n48 8b 15 e2 96 20 00\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 ab fd ff ff\n31 ff\nbe 5e 73 40 00\nba 05 00 00 00\ne8 7a fb ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 88 fd ff ff\n31 ff\nbe 17 74 40 00\nba 05 00 00 00\ne8 57 fb ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 65 fd ff ff\n31 ff\nbe 6b 74 40 00\nba 05 00 00 00\ne8 34 fb ff ff\n48 89 c6\nbf 01 00 00 00\nba a6 74 40 00\nb9 b4 74 40 00\n31 c0\ne8 3b fd ff ff\n31 ff\nbe c2 74 40 00\nba 05 00 00 00\ne8 0a fb ff ff\n48 8b 35 eb 95 20 00\n48 89 c7\ne8 db fb ff ff\n31 ff\nbe ef 74 40 00\nba 05 00 00 00\ne8 ea fa ff ff\n48 8b 35 cb 95 20 00\n48 89 c7\ne8 bb fb ff ff\ne8 56 00 00 00\n89 df\ne8 9f fd ff ff\ne8 0a 00 00 00\n89 df\ne8 93 fd ff ff\n'
p677
S'.text:0000000000401c40\n.text:0000000000401c41\n.text:0000000000401c43\n.text:0000000000401c45\n.text:0000000000401c4b\n.text:0000000000401c4d\n.text:0000000000401c52\n.text:0000000000401c57\n.text:0000000000401c5c\n.text:0000000000401c5f\n.text:0000000000401c66\n.text:0000000000401c6b\n.text:0000000000401c6d\n.text:0000000000401c70\n.text:0000000000401c75\n.text:0000000000401c77\n.text:0000000000401c7c\n.text:0000000000401c81\n.text:0000000000401c86\n.text:0000000000401c89\n.text:0000000000401c8e\n.text:0000000000401c90\n.text:0000000000401c93\n.text:0000000000401c98\n.text:0000000000401c9a\n.text:0000000000401c9f\n.text:0000000000401ca4\n.text:0000000000401ca9\n.text:0000000000401cac\n.text:0000000000401cb1\n.text:0000000000401cb3\n.text:0000000000401cb6\n.text:0000000000401cbb\n.text:0000000000401cbd\n.text:0000000000401cc2\n.text:0000000000401cc7\n.text:0000000000401ccc\n.text:0000000000401ccf\n.text:0000000000401cd4\n.text:0000000000401cd9\n.text:0000000000401cde\n.text:0000000000401ce0\n.text:0000000000401ce5\n.text:0000000000401ce7\n.text:0000000000401cec\n.text:0000000000401cf1\n.text:0000000000401cf6\n.text:0000000000401cfd\n.text:0000000000401d00\n.text:0000000000401d05\n.text:0000000000401d07\n.text:0000000000401d0c\n.text:0000000000401d11\n.text:0000000000401d16\n.text:0000000000401d1d\n.text:0000000000401d20\n.text:0000000000401d25\n.text:0000000000401d2a\n.text:0000000000401d2c\n.text:0000000000401d31\n.text:0000000000401d36\n.text:0000000000401d38\n'
p678
tp679
sS'quoting_options_from_style'
p680
(S'\n__stdcall quoting_options_from_style(quoting_options * __return_storage_ptr__)\n'
p681
V\u000aquoting_options * quoting_options_from_style(quoting_options *__return_storage_ptr__)\u000a\u000a{\u000a  quoting_style in_ESI;\u000a  \u000a  if (in_ESI != custom_quoting_style) {\u000a    __return_storage_ptr__->style = in_ESI;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->right_quote + 4) = 0;\u000a    __return_storage_ptr__->quote_these_too[7] = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->left_quote = 0;\u000a    *(undefined4 *)((long)&__return_storage_ptr__->left_quote + 4) = 0;\u000a    *(undefined4 *)&__return_storage_ptr__->right_quote = 0;\u000a    __return_storage_ptr__->quote_these_too[3] = 0;\u000a    __return_storage_ptr__->quote_these_too[4] = 0;\u000a    __return_storage_ptr__->quote_these_too[5] = 0;\u000a    __return_storage_ptr__->quote_these_too[6] = 0;\u000a    __return_storage_ptr__->flags = 0;\u000a    __return_storage_ptr__->quote_these_too[0] = 0;\u000a    __return_storage_ptr__->quote_these_too[1] = 0;\u000a    __return_storage_ptr__->quote_these_too[2] = 0;\u000a    return __return_storage_ptr__;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p682
S'SUB RSP,0x38\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOVAPS xmmword ptr [RSP],XMM0\nMOV dword ptr [RSP + 0x30],0x0\nCMP ESI,0xa\nJZ 0x0040512d\nMOV dword ptr [RDI],ESI\nMOV EAX,dword ptr [RSP + 0x30]\nMOV dword ptr [RDI + 0x34],EAX\nMOVAPS XMM0,xmmword ptr [RSP]\nMOVAPS XMM1,xmmword ptr [RSP + 0x10]\nMOVAPS XMM2,xmmword ptr [RSP + 0x20]\nMOVUPS xmmword ptr [RDI + 0x24],XMM2\nMOVUPS xmmword ptr [RDI + 0x14],XMM1\nMOVUPS xmmword ptr [RDI + 0x4],XMM0\nMOV RAX,RDI\nADD RSP,0x38\nRET\nCALL 0x00401700\n'
p683
S'48 83 ec 38\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n0f 29 04 24\nc7 44 24 30 00 00 00 00\n83 fe 0a\n74 2b\n89 37\n8b 44 24 30\n89 47 34\n0f 28 04 24\n0f 28 4c 24 10\n0f 28 54 24 20\n0f 11 57 24\n0f 11 4f 14\n0f 11 47 04\n48 89 f8\n48 83 c4 38\nc3\ne8 ce c5 ff ff\n'
p684
S'.text:00000000004050e0\n.text:00000000004050e4\n.text:00000000004050e7\n.text:00000000004050ec\n.text:00000000004050f1\n.text:00000000004050f5\n.text:00000000004050fd\n.text:0000000000405100\n.text:0000000000405102\n.text:0000000000405104\n.text:0000000000405108\n.text:000000000040510b\n.text:000000000040510f\n.text:0000000000405114\n.text:0000000000405119\n.text:000000000040511d\n.text:0000000000405121\n.text:0000000000405125\n.text:0000000000405128\n.text:000000000040512c\n.text:000000000040512d\n'
p685
tp686
sS'strcpy'
p687
(S'\n__stdcall strcpy(char * __dest, char * __src)\n'
p688
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strcpy(char *__dest,char *__src)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strcpy_0060b070)();\u000a  return pcVar1;\u000a}\u000a\u000a
p689
S'JMP qword ptr [0x0060b070]\n'
p690
S'ff 25 0a 99 20 00\n'
p691
S'.plt:0000000000401760\n'
p692
tp693
sS'FUN_004016a0'
p694
(S'\n__stdcall FUN_004016a0()\n'
p695
V\u000avoid FUN_004016a0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_0060b010)();\u000a  return;\u000a}\u000a\u000a
p696
S'PUSH qword ptr [0x0060b008]\nJMP qword ptr [0x0060b010]\n'
p697
S'ff 35 62 99 20 00\nff 25 64 99 20 00\n'
p698
S'.plt:00000000004016a0\n.plt:00000000004016a6\n'
p699
tp700
sS'c_isgraph'
p701
(S'\n__stdcall c_isgraph()\n'
p702
V\u000a_Bool c_isgraph(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x21U < 0x5e);\u000a}\u000a\u000a
p703
S'ADD EDI,-0x21\nCMP EDI,0x5e\nSETC AL\nRET\n'
p704
S'83 c7 df\n83 ff 5e\n0f 92 c0\nc3\n'
p705
S'.text:00000000004066c0\n.text:00000000004066c3\n.text:00000000004066c6\n.text:00000000004066c9\n'
p706
tp707
sS'quotearg_buffer_restyled'
p708
(S'\n__stdcall quotearg_buffer_restyled(char * buffer, size_t buffersize, char * arg, size_t argsize, char * left_quote, char * right_quote)\n'
p709
V\u000a/* WARNING: Type propagation algorithm not settling */\u000a\u000asize_t quotearg_buffer_restyled\u000a                 (char *buffer,size_t buffersize,char *arg,size_t argsize,char *left_quote,\u000a                 char *right_quote)\u000a\u000a{\u000a  char cVar1;\u000a  bool bVar2;\u000a  byte bVar3;\u000a  undefined uVar4;\u000a  bool bVar5;\u000a  byte bVar6;\u000a  int iVar7;\u000a  size_t __n;\u000a  ushort **ppuVar8;\u000a  size_t sVar9;\u000a  ulong uVar10;\u000a  ulong uVar11;\u000a  ushort uVar12;\u000a  uint uVar13;\u000a  char *left_quote_00;\u000a  undefined7 uVar14;\u000a  ulong uVar15;\u000a  ulong uVar16;\u000a  byte bVar17;\u000a  byte bVar18;\u000a  uint uVar19;\u000a  ulong uVar20;\u000a  bool bVar21;\u000a  bool bVar22;\u000a  bool bVar23;\u000a  long in_stack_00000008;\u000a  char *in_stack_00000010;\u000a  char *in_stack_00000018;\u000a  size_t bytes;\u000a  ulong local_a8;\u000a  char *local_80;\u000a  char *local_78;\u000a  wint_t local_64;\u000a  char *local_60;\u000a  char *local_58;\u000a  mbstate_t local_50;\u000a  ulong local_48;\u000a  size_t local_40;\u000a  ulong local_38;\u000a  \u000a  left_quote_00 = buffer;\u000a  local_40 = __ctype_get_mb_cur_max();\u000a  uVar19 = (uint)((ulong)left_quote & 0xffffffff);\u000a  if (10 < uVar19) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  local_78 = in_stack_00000018;\u000a  local_80 = in_stack_00000010;\u000a  bVar17 = (byte)(((uint)right_quote & 2) >> 1);\u000a  uVar14 = (undefined7)((ulong)left_quote_00 >> 8);\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar16 = 0;\u000a  bVar18 = 0;\u000a  uVar15 = 0;\u000a  __n = 0;\u000a  local_58 = (char *)0x0;\u000a  uVar13 = 7;\u000a  bVar6 = 0;\u000a  bVar3 = 0;\u000a  switch((ulong)left_quote & 0xffffffff) {\u000a  case 0:\u000a    uVar15 = 0;\u000a    local_58 = (char *)0x0;\u000a    __n = 0;\u000a    local_38 = 0;\u000a    uVar13 = 0;\u000a    bVar6 = 0;\u000a    goto switchD_0040415c_caseD_7;\u000a  case 2:\u000a    goto switchD_0040415c_caseD_2;\u000a  case 3:\u000a    bVar3 = 1;\u000a  case 1:\u000a    bVar18 = bVar3;\u000a    bVar17 = 1;\u000a  case 4:\u000a    goto switchD_0040415c_caseD_4;\u000a  case 5:\u000a    uVar13 = 5;\u000a    if (bVar17 == 0) {\u000a      if (buffersize != 0) {\u000a        *buffer = '\u005c"';\u000a      }\u000a      local_58 = "\u005c"";\u000a      uVar15 = 1;\u000a      __n = 1;\u000a      local_38 = CONCAT71(uVar14,1);\u000a      bVar6 = 0;\u000a      goto switchD_0040415c_caseD_7;\u000a    }\u000a    break;\u000a  case 6:\u000a    break;\u000a  case 7:\u000a    goto switchD_0040415c_caseD_7;\u000a  default:\u000a    local_80 = gettext_quote("`");\u000a    local_78 = gettext_quote("\u005c'");\u000a  case 10:\u000a    if (((ulong)right_quote & 2) == 0) {\u000a      cVar1 = *local_80;\u000a      uVar15 = 0;\u000a      while (cVar1 != 0) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = cVar1;\u000a        }\u000a        cVar1 = local_80[uVar15 + 1];\u000a        uVar15 = uVar15 + 1;\u000a      }\u000a    }\u000a    else {\u000a      uVar15 = 0;\u000a    }\u000a    left_quote_00 = local_78;\u000a    __n = strlen(local_78);\u000a    local_38 = CONCAT71((int7)((ulong)left_quote_00 >> 8),1);\u000a    local_58 = local_78;\u000a    uVar13 = uVar19;\u000a    bVar6 = bVar17;\u000a    goto switchD_0040415c_caseD_7;\u000a  }\u000a  __n = 1;\u000a  local_38 = CONCAT71(uVar14,1);\u000a  uVar13 = 5;\u000a  local_58 = "\u005c"";\u000a  uVar15 = 0;\u000a  bVar6 = 1;\u000a  goto switchD_0040415c_caseD_7;\u000aswitchD_0040415c_caseD_4:\u000a  bVar6 = 1;\u000a  if (bVar17 != 0) {\u000a    bVar6 = bVar18;\u000a  }\u000a  uVar16 = (ulong)bVar6;\u000aswitchD_0040415c_caseD_2:\u000a  uVar13 = 2;\u000a  if (bVar17 == 0) {\u000a    if (buffersize != 0) {\u000a      *buffer = '\u005c'';\u000a    }\u000a    uVar15 = 1;\u000a  }\u000a  else {\u000a    uVar15 = 0;\u000a  }\u000a  __n = 1;\u000a  local_58 = "\u005c'";\u000a  local_38 = local_38 & 0xffffffffffffff00 | uVar16;\u000a  bVar6 = bVar17;\u000aswitchD_0040415c_caseD_7:\u000a  bVar3 = (byte)local_38;\u000a  bVar2 = uVar13 != 2;\u000a  bVar21 = bVar6 == 0;\u000a  uVar16 = 0;\u000a  bVar5 = false;\u000a  if (argsize != 0xffffffffffffffff) goto LAB_00404c20;\u000aLAB_00404340:\u000a  local_a8 = argsize;\u000a  if (arg[uVar16] == 0) {\u000aLAB_00404c29:\u000a    if (((bVar6 == 0) || (uVar13 != 2)) || (uVar15 != 0)) {\u000a      if ((local_58 != (char *)0x0) && (bVar6 == 0)) {\u000a        cVar1 = *local_58;\u000a        while (cVar1 != 0) {\u000a          local_58 = local_58 + 1;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = cVar1;\u000a          }\u000a          uVar15 = uVar15 + 1;\u000a          cVar1 = *local_58;\u000a        }\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = 0;\u000a      }\u000a    }\u000a    else {\u000aLAB_00404c38:\u000a      left_quote_00 = (char *)0x4;\u000a      if ((local_38 & 1) == 0) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      if (uVar13 != 2) {\u000a        left_quote_00 = (char *)(ulong)uVar13;\u000a      }\u000a      uVar15 = quotearg_buffer_restyled\u000a                         (buffer,buffersize,arg,local_a8,left_quote_00,\u000a                          (char *)(ulong)((uint)right_quote & 0xfffffffd));\u000a    }\u000a    return uVar15;\u000a  }\u000aLAB_0040434b:\u000a  if ((__n != 0 & bVar3 & bVar2) == 0) {\u000aLAB_0040438f:\u000a    bVar22 = false;\u000a  }\u000a  else {\u000a    if ((1 < __n) && (local_a8 == 0xffffffffffffffff)) {\u000a      local_a8 = strlen(arg);\u000a    }\u000a    if (local_a8 < uVar16 + __n) goto LAB_0040438f;\u000a    iVar7 = memcmp(arg + uVar16,local_58,__n);\u000a    bVar22 = iVar7 == 0;\u000a    if ((bVar22) && (bVar6 != 0)) goto LAB_00404c38;\u000a  }\u000a  uVar20 = (ulong)(byte)arg[uVar16];\u000a  bVar17 = 0x6e;\u000a  bVar18 = 0x61;\u000a  switch(arg[uVar16]) {\u000a  case 0:\u000a    if (bVar3 == 0) {\u000a      if (((ulong)right_quote & 1) == 0) {\u000a        uVar20 = 0;\u000a        break;\u000a      }\u000a      goto LAB_00404b65;\u000a    }\u000a    if (bVar6 == 0) {\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar11 = uVar15 + 1;\u000a      uVar4 = 1;\u000a      bVar23 = true;\u000a      uVar20 = 0x30;\u000a      if (((uVar13 != 2) && (uVar16 + 1 < local_a8)) && ((byte)(arg[uVar16 + 1] - 0x30U) < 10)) {\u000a        if (uVar11 < buffersize) {\u000a          buffer[uVar11] = '0';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '0';\u000a        }\u000a        uVar11 = uVar15 + 3;\u000a      }\u000a      goto joined_r0x00404a70;\u000a    }\u000a    goto LAB_00404c38;\u000a  default:\u000a    if (local_40 != 1) {\u000a      local_50 = (mbstate_t)0x0;\u000a      if (local_a8 == 0xffffffffffffffff) {\u000a        local_a8 = strlen(arg);\u000a      }\u000a      local_60 = arg + uVar16;\u000a      uVar12 = 1;\u000a      uVar10 = 0;\u000a      do {\u000a        local_48 = uVar10 + uVar16;\u000a        sVar9 = mbrtowc((wchar_t *)&local_64,arg + local_48,local_a8 - local_48,&local_50);\u000a        if (sVar9 == 0) break;\u000a        if (sVar9 == 0xffffffffffffffff) {\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (sVar9 == 0xfffffffffffffffe) {\u000a          if (local_48 < local_a8) goto LAB_00404b9a;\u000a          uVar12 = 0;\u000a          break;\u000a        }\u000a        if (1 < sVar9 && (uVar13 == 2 && !bVar21)) {\u000a          uVar11 = 1;\u000a          do {\u000a            if (((int)local_60[uVar11 + uVar10] - 0x5bU < 0x22) &&\u000a               ((0x20000002bU >> ((ulong)((int)local_60[uVar11 + uVar10] - 0x5bU) & 0x1f) & 1) != 0)\u000a               ) goto LAB_00404c38;\u000a            uVar11 = uVar11 + 1;\u000a          } while (uVar11 < sVar9);\u000a        }\u000a        iVar7 = iswprint(local_64);\u000a        if (iVar7 == 0) {\u000a          uVar12 = 0;\u000a        }\u000a        uVar10 = uVar10 + sVar9;\u000a        iVar7 = mbsinit(&local_50);\u000a      } while (iVar7 == 0);\u000a      goto LAB_00404bc9;\u000a    }\u000a    ppuVar8 = __ctype_b_loc();\u000a    uVar12 = (*ppuVar8)[uVar20] >> 0xe & 0xff01;\u000a    uVar10 = 1;\u000a    goto LAB_00404688;\u000a  case '\u005ca':\u000a    goto joined_r0x00404578;\u000a  case '\u005cb':\u000a    bVar18 = 0x62;\u000a    goto joined_r0x00404578;\u000a  case '\u005ct':\u000a    bVar17 = 0x74;\u000a  case '\u005cn':\u000a    goto switchD_004043a6_caseD_a;\u000a  case '\u005cv':\u000a    bVar18 = 0x76;\u000a    goto joined_r0x00404578;\u000a  case '\u005cf':\u000a    bVar18 = 0x66;\u000a    goto joined_r0x00404578;\u000a  case '\u005cr':\u000a    bVar17 = 0x72;\u000aswitchD_004043a6_caseD_a:\u000a    bVar18 = bVar17;\u000a    if (bVar21 || bVar2) {\u000ajoined_r0x00404578:\u000a      if (bVar3 == 0) break;\u000a      if (bVar6 == 0) goto LAB_00404ade;\u000a    }\u000a    goto LAB_00404c38;\u000a  case ' ':\u000a  case '!':\u000a  case '\u005c"':\u000a  case '$':\u000a  case '&':\u000a  case '(':\u000a  case ')':\u000a  case '*':\u000a  case ';':\u000a  case '<':\u000a  case '=':\u000a  case '>':\u000a  case '[':\u000a  case '^':\u000a  case '`':\u000a  case '|':\u000a    if (bVar21 || bVar2) break;\u000a    goto LAB_00404c38;\u000a  case '#':\u000a  case '~':\u000a    if (((bVar6 != 0) && (uVar13 == 2)) && (uVar16 == 0)) goto LAB_00404c38;\u000a    break;\u000a  case '%':\u000a  case '+':\u000a  case ',':\u000a  case '-':\u000a  case '.':\u000a  case '/':\u000a  case '0':\u000a  case '1':\u000a  case '2':\u000a  case '3':\u000a  case '4':\u000a  case '5':\u000a  case '6':\u000a  case '7':\u000a  case '8':\u000a  case '9':\u000a  case ':':\u000a  case 'A':\u000a  case 'B':\u000a  case 'C':\u000a  case 'D':\u000a  case 'E':\u000a  case 'F':\u000a  case 'G':\u000a  case 'H':\u000a  case 'I':\u000a  case 'J':\u000a  case 'K':\u000a  case 'L':\u000a  case 'M':\u000a  case 'N':\u000a  case 'O':\u000a  case 'P':\u000a  case 'Q':\u000a  case 'R':\u000a  case 'S':\u000a  case 'T':\u000a  case 'U':\u000a  case 'V':\u000a  case 'W':\u000a  case 'X':\u000a  case 'Y':\u000a  case 'Z':\u000a  case ']':\u000a  case '_':\u000a  case 'a':\u000a  case 'b':\u000a  case 'c':\u000a  case 'd':\u000a  case 'e':\u000a  case 'f':\u000a  case 'g':\u000a  case 'h':\u000a  case 'i':\u000a  case 'j':\u000a  case 'k':\u000a  case 'l':\u000a  case 'm':\u000a  case 'n':\u000a  case 'o':\u000a  case 'p':\u000a  case 'q':\u000a  case 'r':\u000a  case 's':\u000a  case 't':\u000a  case 'u':\u000a  case 'v':\u000a  case 'w':\u000a  case 'x':\u000a  case 'y':\u000a  case 'z':\u000a    break;\u000a  case '\u005c'':\u000a    uVar20 = 0x27;\u000a    if (uVar13 == 2) {\u000a      if (bVar6 != 0) goto LAB_00404c38;\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c\u005c';\u000a      }\u000a      if (uVar15 + 2 < buffersize) {\u000a        buffer[uVar15 + 2] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 3;\u000a      bVar5 = false;\u000a    }\u000a    break;\u000a  case '?':\u000a    uVar20 = 0x3f;\u000a    if (uVar13 == 5) {\u000a      if ((((ulong)right_quote & 4) != 0) &&\u000a         ((uVar11 = uVar16 + 2, uVar11 < local_a8 && (arg[uVar16 + 1] == '?')))) {\u000a        bVar18 = arg[uVar11];\u000a        if (((uint)(int)(char)bVar18 < 0x3f) &&\u000a           ((0x7000a38200000000U >> ((ulong)(uint)(int)(char)bVar18 & 0x1f) & 1) != 0)) {\u000a          if (bVar6 != 0) goto LAB_00404c38;\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '?';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c"';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c"';\u000a          }\u000a          if (uVar15 + 3 < buffersize) {\u000a            buffer[uVar15 + 3] = '?';\u000a          }\u000a          uVar15 = uVar15 + 4;\u000a          uVar20 = (ulong)bVar18;\u000a          uVar16 = uVar11;\u000a        }\u000a      }\u000a    }\u000a    else {\u000a      if ((uVar13 == 2) && (bVar6 != 0)) goto LAB_00404c38;\u000a    }\u000a    break;\u000a  case '\u005c\u005c':\u000a    if (uVar13 != 2) {\u000a      bVar17 = 0x5c;\u000a      if ((bVar3 & bVar6) == 0 || __n == 0) goto switchD_004043a6_caseD_a;\u000a      bVar23 = false;\u000a      bVar18 = 0x5c;\u000a      bVar17 = 0x5c;\u000a      if (bVar5) goto LAB_00404b36;\u000a      goto joined_r0x00404b28;\u000a    }\u000a    if (bVar6 == 0) {\u000a      bVar18 = 0x5c;\u000a      bVar23 = false;\u000a      uVar11 = uVar16;\u000ajoined_r0x00404631:\u000a      uVar16 = uVar11;\u000a      bVar17 = bVar18;\u000a      if (!bVar5) goto joined_r0x00404b28;\u000a      goto LAB_00404b36;\u000a    }\u000a    goto LAB_00404c38;\u000a  case '{':\u000a  case '}':\u000a    if (local_a8 == 0xffffffffffffffff) {\u000a      bVar23 = arg[1] != 0;\u000a      local_a8 = 0xffffffffffffffff;\u000a    }\u000a    else {\u000a      bVar23 = local_a8 != 1;\u000a    }\u000a    if ((bVar6 != 0) && (!(bool)(uVar16 != 0 | bVar23 | bVar2))) goto LAB_00404c38;\u000a  }\u000a  goto joined_r0x00404a70;\u000a  while (uVar11 = uVar16 + 1 + uVar10, uVar10 = uVar10 + 1, uVar11 < local_a8) {\u000aLAB_00404b9a:\u000a    if (local_60[uVar10] == 0) {\u000a      uVar12 = 0;\u000a      goto LAB_00404bc9;\u000a    }\u000a  }\u000a  uVar12 = 0;\u000aLAB_00404bc9:\u000a  if (1 < uVar10) {\u000aLAB_004046a6:\u000a    uVar10 = uVar10 + uVar16;\u000a    bVar23 = false;\u000a    if (uVar12 == 0 && bVar3 != 0) goto LAB_00404762;\u000a    do {\u000a      uVar11 = uVar16;\u000a      if (bVar22) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        bVar22 = false;\u000a        uVar11 = uVar16;\u000a      }\u000a      while( true ) {\u000a        bVar18 = (byte)uVar20;\u000a        uVar16 = uVar11 + 1;\u000a        if (uVar10 <= uVar16) goto joined_r0x00404631;\u000a        if ((bVar5) && (!bVar23)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 2;\u000a          bVar5 = false;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = bVar18;\u000a        }\u000a        uVar15 = uVar15 + 1;\u000a        uVar20 = (ulong)(byte)arg[uVar11 + 1];\u000a        if (uVar12 != 0 || bVar3 == 0) break;\u000aLAB_00404762:\u000a        if (bVar6 != 0) goto LAB_00404c38;\u000a        if ((uVar13 == 2) && (!bVar5)) {\u000a          if (uVar15 < buffersize) {\u000a            buffer[uVar15] = '\u005c'';\u000a          }\u000a          if (uVar15 + 1 < buffersize) {\u000a            buffer[uVar15 + 1] = '$';\u000a          }\u000a          if (uVar15 + 2 < buffersize) {\u000a            buffer[uVar15 + 2] = '\u005c'';\u000a          }\u000a          uVar15 = uVar15 + 3;\u000a          bVar5 = true;\u000a        }\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c\u005c';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = (byte)(uVar20 >> 6) | 0x30;\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = (byte)(uVar20 >> 3) & 7 | 0x30;\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        uVar20 = (ulong)((byte)uVar20 & 7 | 0x30);\u000a        bVar23 = true;\u000a        uVar11 = uVar16;\u000a      }\u000a    } while( true );\u000a  }\u000aLAB_00404688:\u000a  if ((bVar3 != 0) && (uVar12 == 0)) goto LAB_004046a6;\u000ajoined_r0x00404a70:\u000a  uVar4 = 0;\u000a  bVar23 = false;\u000a  uVar11 = uVar15;\u000ajoined_r0x00404a70:\u000a  uVar15 = uVar11;\u000a  bVar18 = (byte)uVar20;\u000a  if ((bVar3 & bVar2) == 0) {\u000a    bVar23 = (bool)uVar4;\u000a    if (in_stack_00000008 != 0 && !bVar21) goto LAB_00404a97;\u000aLAB_00404ad0:\u000a    if (bVar22) goto LAB_00404ad5;\u000a  }\u000a  else {\u000a    if (in_stack_00000008 == 0) goto LAB_00404ad0;\u000aLAB_00404a97:\u000a    if ((bVar22) || ((1 << (bVar18 & 0x1f) & *(uint *)(in_stack_00000008 + (uVar20 >> 5) * 4)) != 0)\u000a       ) {\u000aLAB_00404ad5:\u000a      if (bVar6 != 0) goto LAB_00404c38;\u000aLAB_00404ade:\u000a      if ((uVar13 == 2) && (!bVar5)) {\u000a        if (uVar15 < buffersize) {\u000a          buffer[uVar15] = '\u005c'';\u000a        }\u000a        if (uVar15 + 1 < buffersize) {\u000a          buffer[uVar15 + 1] = '$';\u000a        }\u000a        if (uVar15 + 2 < buffersize) {\u000a          buffer[uVar15 + 2] = '\u005c'';\u000a        }\u000a        uVar15 = uVar15 + 3;\u000a        bVar5 = true;\u000a      }\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c\u005c';\u000a      }\u000a      uVar15 = uVar15 + 1;\u000a      bVar17 = bVar18;\u000a      goto joined_r0x00404b28;\u000a    }\u000a  }\u000a  bVar17 = bVar18;\u000a  if (bVar5) {\u000aLAB_00404b36:\u000a    bVar17 = bVar18;\u000a    if (!bVar23) {\u000a      if (uVar15 < buffersize) {\u000a        buffer[uVar15] = '\u005c'';\u000a      }\u000a      if (uVar15 + 1 < buffersize) {\u000a        buffer[uVar15 + 1] = '\u005c'';\u000a      }\u000a      uVar15 = uVar15 + 2;\u000a      bVar5 = false;\u000a      bVar17 = bVar18;\u000a    }\u000a  }\u000ajoined_r0x00404b28:\u000a  if (uVar15 < buffersize) {\u000a    buffer[uVar15] = bVar17;\u000a  }\u000a  uVar15 = uVar15 + 1;\u000aLAB_00404b65:\u000a  uVar16 = uVar16 + 1;\u000a  argsize = local_a8;\u000a  if (local_a8 == 0xffffffffffffffff) goto LAB_00404340;\u000aLAB_00404c20:\u000a  local_a8 = argsize;\u000a  if (uVar16 == argsize) goto LAB_00404c29;\u000a  goto LAB_0040434b;\u000a}\u000a\u000a
p710
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xa8\nMOV EBX,R9D\nMOV R15D,R8D\nMOV R13,RCX\nMOV qword ptr [RSP + 0x18],RDX\nMOV qword ptr [RSP + 0x28],RSI\nMOV qword ptr [RSP + 0x38],RDI\nCALL 0x00401810\nMOV qword ptr [0x98 + RSP],RAX\nCMP R15D,0xa\nJA 0x00404d05\nMOV RAX,qword ptr [0xf0 + RSP]\nMOV qword ptr [RSP + 0x60],RAX\nMOV RAX,qword ptr [0xe8 + RSP]\nMOV qword ptr [RSP + 0x58],RAX\nMOV dword ptr [RSP + 0x54],EBX\nMOV EBP,EBX\nAND EBP,0x2\nMOV R14D,EBP\nSHR R14D,1\nMOV EBX,0x7\nMOV DIL,0x1\nXOR R8D,R8D\nMOV EAX,R15D\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV RSI,qword ptr [RSP + 0x28]\nJMP qword ptr [0x407d20 + RAX*0x8]\nMOV EDI,0x408248\nMOV ESI,R15D\nCALL 0x004053b0\nMOV qword ptr [RSP + 0x58],RAX\nMOV EDI,0x40824a\nMOV ESI,R15D\nCALL 0x004053b0\nMOV RSI,qword ptr [RSP + 0x28]\nMOV qword ptr [RSP + 0x60],RAX\nTEST EBP,EBP\nJNZ 0x004041bd\nMOV RDX,qword ptr [RSP + 0x58]\nMOV AL,byte ptr [RDX]\nXOR R12D,R12D\nTEST AL,AL\nJZ 0x004041c0\nNOP\nCMP R12,RSI\nJNC 0x004041ae\nMOV RCX,qword ptr [RSP + 0x38]\nMOV byte ptr [RCX + R12*0x1],AL\nMOVZX EAX,byte ptr [RDX + R12*0x1 + 0x1]\nINC R12\nTEST AL,AL\nJNZ 0x004041a0\nJMP 0x004041c0\nXOR R12D,R12D\nMOV RBX,qword ptr [RSP + 0x60]\nMOV RDI,RBX\nCALL 0x00401820\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R9,RAX\nMOV RCX,RBX\nMOV EBX,R15D\nMOV R8B,R14B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,R13\nMOV DIL,0x1\nJMP 0x0040428c\nXOR R12D,R12D\nXOR ECX,ECX\nXOR R9D,R9D\nXOR EDI,EDI\nXOR EBX,EBX\nXOR R8D,R8D\nJMP 0x0040428c\nMOV ECX,0x408246\nMOV EBX,0x5\nMOV DIL,0x1\nMOV R9D,0x1\nJMP 0x00404286\nMOV R8B,0x1\nMOV R14B,0x1\nTEST R14B,R14B\nMOV AL,0x1\nJZ 0x00404227\nMOV EAX,R8D\nMOV R8B,AL\nMOV EBX,0x2\nTEST R14B,R14B\nJNZ 0x00404254\nTEST RSI,RSI\nJZ 0x00404241\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x27\nMOV ECX,0x40824a\nMOV R12D,0x1\nMOV R9D,0x1\nJMP 0x00404262\nMOV ECX,0x40824a\nMOV R9D,0x1\nXOR R12D,R12D\nMOV DIL,R8B\nMOV R8B,R14B\nJMP 0x0040428c\nMOV EBX,0x5\nTEST R14B,R14B\nJZ 0x00404cdc\nMOV ECX,0x408246\nMOV R9D,0x1\nMOV DIL,0x1\nXOR R12D,R12D\nMOV R8B,0x1\nMOV qword ptr [0x80 + RSP],RCX\nMOV EAX,EDI\nAND AL,0x1\nCMP EBX,0x2\nSETNZ R14B\nMOV EBP,EBX\nSETZ BL\nMOV byte ptr [RSP + 0x1],AL\nMOV ECX,EAX\nAND CL,R14B\nTEST R9,R9\nSETNZ AL\nMOV EDX,EAX\nMOV byte ptr [RSP + 0xe],CL\nAND DL,CL\nMOV byte ptr [RSP + 0xf],DL\nTEST R8B,R8B\nSETNZ CL\nSETZ DL\nAND BL,CL\nMOV byte ptr [RSP + 0xc],BL\nCMP qword ptr [0xe0 + RSP],0x0\nSETNZ BL\nAND BL,CL\nMOV byte ptr [RSP + 0xd],BL\nMOV EBX,EBP\nMOV EBP,dword ptr [RSP + 0x54]\nMOV ECX,EBP\nAND ECX,0x1\nMOV dword ptr [RSP + 0x70],ECX\nMOV ECX,EBP\nAND ECX,0x4\nMOV dword ptr [RSP + 0x6c],ECX\nMOV byte ptr [RSP + 0x2],R14B\nOR DL,R14B\nMOV byte ptr [RSP + 0x3],DL\nMOV qword ptr [0xa0 + RSP],RDI\nTEST DIL,R8B\nSETNZ CL\nAND CL,AL\nMOV byte ptr [RSP + 0xb],CL\nXOR R13D,R13D\nXOR EDI,EDI\nMOV R14,qword ptr [RSP + 0x38]\nMOV dword ptr [RSP + 0x14],EBX\nMOV qword ptr [RSP + 0x48],R8\nMOV qword ptr [RSP + 0x40],R9\nCMP R11,-0x1\nJNZ 0x00404c20\nNOP word ptr [RAX + RAX*0x1]\nCMP byte ptr [R10 + R13*0x1],0x0\nJZ 0x00404c29\nCMP byte ptr [RSP + 0xf],0x0\nJZ 0x0040438f\nLEA RBP,[R13 + R9*0x1]\nCMP R9,0x2\nJC 0x0040438a\nCMP R11,-0x1\nJNZ 0x0040438a\nMOV EBX,EDI\nMOV RDI,R10\nCALL 0x00401820\nMOV EDI,EBX\nMOV R9,qword ptr [RSP + 0x40]\nMOV R8,qword ptr [RSP + 0x48]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nCMP RBP,R11\nJBE 0x004043e0\nXOR EBP,EBP\nMOVZX R15D,byte ptr [R10 + R13*0x1]\nCMP R15,0x7e\nJA 0x0040463c\nXOR EAX,EAX\nMOV DL,0x6e\nMOV CL,0x61\nJMP qword ptr [0x407d78 + R15*0x8]\nCMP byte ptr [RSP + 0x3],0x0\nJZ 0x00404c38\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJZ 0x00404a90\nCMP qword ptr [0xe0 + RSP],0x0\nJNZ 0x00404a97\nJMP 0x00404ad0\nMOV EBP,EDI\nMOV RBX,R11\nLEA RDI,[R10 + R13*0x1]\nMOV RSI,qword ptr [0x80 + RSP]\nMOV RDX,R9\nCALL 0x004018d0\nTEST EAX,EAX\nSETZ AL\nJNZ 0x0040442d\nMOV R8,qword ptr [RSP + 0x48]\nTEST R8B,R8B\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJZ 0x00404391\nJMP 0x00404c38\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RBX\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,EBP\nMOV EBP,EAX\nJMP 0x00404391\nXOR EAX,EAX\nTEST R8B,R8B\nJZ 0x004043bb\nCMP EBX,0x2\nJNZ 0x004043bb\nTEST R13,R13\nJNZ 0x004043bb\nJMP 0x00404c38\nCMP R11,-0x1\nJZ 0x00404813\nTEST R13,R13\nSETNZ CL\nCMP R11,0x1\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nJNZ 0x00404833\nJMP 0x004043bb\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404844\nTEST R8B,R8B\nJNZ 0x00404c38\nCMP EBX,0x2\nJNZ 0x004044e8\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x004044e8\nCMP R12,RSI\nJNC 0x004044c3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004044d2\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004044e1\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x004044f2\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RCX,[R12 + 0x1]\nMOV AL,0x1\nMOV R15B,0x30\nCMP EBX,0x2\nJZ 0x004049b8\nLEA RDX,[R13 + 0x1]\nCMP RDX,R11\nJNC 0x004049b8\nMOV DL,byte ptr [R10 + RDX*0x1]\nADD DL,0xd0\nCMP DL,0x9\nJA 0x004049b8\nCMP RCX,RSI\nJNC 0x0040452c\nMOV byte ptr [R14 + RCX*0x1],0x30\nLEA RCX,[R12 + 0x2]\nCMP RCX,RSI\nJNC 0x0040453b\nMOV byte ptr [R14 + RCX*0x1],0x30\nADD R12,0x3\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004043c6\nJMP 0x00404a90\nMOV CL,0x62\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004043b9\nJMP 0x0040459a\nMOV DL,0x74\nJMP 0x00404582\nMOV CL,0x76\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004043b9\nJMP 0x0040459a\nMOV CL,0x66\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004043b9\nJMP 0x0040459a\nMOV DL,0x72\nCMP byte ptr [RSP + 0x3],0x0\nMOV ECX,EDX\nJZ 0x00404c38\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x004043b9\nMOV R15B,CL\nTEST R8B,R8B\nJZ 0x00404ade\nJMP 0x00404c38\nMOV R15B,0x27\nCMP EBX,0x2\nJNZ 0x004043b9\nTEST R8B,R8B\nJNZ 0x00404c38\nCMP R12,RSI\nJNC 0x004045ca\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004045d9\nMOV byte ptr [R14 + RAX*0x1],0x5c\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004045e8\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nXOR EDI,EDI\nJMP 0x004043b9\nMOV R15B,0x3f\nCMP EBX,0x5\nJZ 0x004049cb\nCMP EBX,0x2\nJNZ 0x004043b9\nTEST R8B,R8B\nJZ 0x004043b9\nJMP 0x00404c38\nCMP EBX,0x2\nJNZ 0x00404864\nTEST R8B,R8B\nJNZ 0x00404c38\nMOV R15B,0x5c\nXOR EAX,EAX\nTEST DIL,0x1\nJNZ 0x00404b36\nJMP 0x00404b59\nMOV dword ptr [RSP + 0x4],EDI\nCMP qword ptr [0x98 + RSP],0x1\nJNZ 0x00404885\nMOV qword ptr [RSP + 0x30],R11\nCALL 0x00401b30\nMOV R10,qword ptr [RSP + 0x18]\nMOV RAX,qword ptr [RAX]\nMOVZX EDX,word ptr [RAX + R15*0x2]\nSHR EDX,0xe\nAND DL,0x1\nMOV ECX,0x1\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nXOR EAX,EAX\nCMP byte ptr [RSP + 0x1],0x0\nJZ 0x00404a78\nMOV R11,RCX\nMOV ECX,EDX\nAND CL,0x1\nMOV RCX,R11\nJNZ 0x00404a78\nCMP byte ptr [RSP + 0x1],0x0\nSETNZ AL\nADD RCX,R13\nTEST DL,0x1\nSETZ DL\nAND DL,AL\nMOV byte ptr [RSP + 0x20],DL\nXOR EAX,EAX\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0x20],0x0\nJNZ 0x00404762\nJMP 0x00404730\nTEST byte ptr [RSP + 0x4],0x1\nJZ 0x00404719\nMOV RDI,RCX\nMOV ECX,EAX\nAND CL,0x1\nJNZ 0x00404716\nCMP R12,RSI\nJNC 0x004046fb\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RCX,[R12 + 0x1]\nCMP RCX,RSI\nJNC 0x0040470a\nMOV byte ptr [R14 + RCX*0x1],0x27\nADD R12,0x2\nMOV dword ptr [RSP + 0x4],0x0\nMOV RCX,RDI\nCMP R12,RSI\nJNC 0x00404750\nMOV byte ptr [R14 + R12*0x1],R15B\nJMP 0x00404750\nTEST BPL,0x1\nJZ 0x004047f3\nCMP R12,RSI\nJNC 0x00404744\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nXOR EBP,EBP\nJMP 0x004047f3\nINC R12\nMOV R15B,byte ptr [R10 + R13*0x1 + 0x1]\nMOV R13,RDX\nCMP byte ptr [RSP + 0x20],0x0\nJZ 0x00404730\nTEST R8B,R8B\nJNZ 0x00404c38\nCMP EBX,0x2\nJNZ 0x004047aa\nMOV EAX,dword ptr [RSP + 0x4]\nAND AL,0x1\nJNZ 0x004047aa\nCMP R12,RSI\nJNC 0x00404782\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404791\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004047a0\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV AL,0x1\nMOV dword ptr [RSP + 0x4],EAX\nCMP R12,RSI\nJNC 0x004047b4\nMOV byte ptr [R14 + R12*0x1],0x5c\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x004047cb\nMOV EDX,R15D\nSHR DL,0x6\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x004047e5\nMOV EDX,R15D\nSHR DL,0x3\nAND DL,0x7\nOR DL,0x30\nMOV byte ptr [R14 + RAX*0x1],DL\nADD R12,0x3\nAND R15B,0x7\nOR R15B,0x30\nMOV AL,0x1\nLEA RDX,[R13 + 0x1]\nCMP RCX,RDX\nJA 0x004046e0\nMOV EDI,dword ptr [RSP + 0x4]\nTEST DIL,0x1\nJNZ 0x00404b36\nJMP 0x00404b59\nTEST R13,R13\nSETNZ CL\nCMP byte ptr [R10 + 0x1],0x0\nSETNZ DL\nXOR EAX,EAX\nTEST R8B,R8B\nMOV R11,-0x1\nJZ 0x004043bb\nOR CL,DL\nOR CL,byte ptr [RSP + 0x2]\nJNZ 0x004043bb\nJMP 0x00404c38\nCMP dword ptr [RSP + 0x70],0x0\nJNZ 0x00404b65\nXOR R15D,R15D\nXOR EAX,EAX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004043c6\nJMP 0x00404a90\nMOV DL,0x5c\nCMP byte ptr [RSP + 0xb],0x0\nJZ 0x00404582\nXOR EAX,EAX\nMOV R15B,0x5c\nTEST DIL,0x1\nJNZ 0x00404b36\nJMP 0x00404b59\nMOV qword ptr [0x88 + RSP],0x0\nCMP R11,-0x1\nJNZ 0x004048a7\nMOV RDI,R10\nCALL 0x00401820\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,RAX\nLEA RAX,[R10 + R13*0x1]\nMOV qword ptr [RSP + 0x78],RAX\nMOV AL,0x1\nMOV dword ptr [RSP + 0x10],EAX\nXOR ECX,ECX\nLEA RBX,[0x88 + RSP]\nMOV qword ptr [RSP + 0x30],R11\nMOV qword ptr [RSP + 0x20],RCX\nLEA RAX,[RCX + R13*0x1]\nLEA RSI,[R10 + RAX*0x1]\nMOV qword ptr [0x90 + RSP],RAX\nSUB R11,RAX\nLEA RDI,[RSP + 0x74]\nMOV RDX,R11\nMOV RCX,RBX\nCALL 0x00401840\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00404b7f\nCMP R14,-0x1\nMOV RDI,0x20000002b\nJZ 0x00404b77\nCMP R14,-0x2\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x00404b86\nCMP R14,0x1\nSETA AL\nAND AL,byte ptr [RSP + 0xc]\nCMP AL,0x1\nMOV R10,qword ptr [RSP + 0x18]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nJNZ 0x0040496e\nMOV RAX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x78]\nLEA RAX,[RCX + RAX*0x1]\nMOV ECX,0x1\nNOP dword ptr [RAX]\nMOVSX EDX,byte ptr [RAX + RCX*0x1]\nADD EDX,-0x5b\nCMP EDX,0x21\nJA 0x00404966\nBT RDI,RDX\nJC 0x00404cd2\nINC RCX\nCMP RCX,R14\nJC 0x00404950\nMOV EDI,dword ptr [RSP + 0x74]\nCALL 0x00401b10\nTEST EAX,EAX\nJNZ 0x00404983\nMOV dword ptr [RSP + 0x10],0x0\nMOV RAX,qword ptr [RSP + 0x20]\nADD RAX,R14\nLEA RBX,[0x88 + RSP]\nMOV RDI,RBX\nMOV R14,RAX\nCALL 0x00401b00\nMOV RCX,R14\nTEST EAX,EAX\nMOV R10,qword ptr [RSP + 0x18]\nMOV R11,qword ptr [RSP + 0x30]\nJZ 0x004048c5\nJMP 0x00404bc9\nMOV R12,RCX\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004043c6\nJMP 0x00404a90\nCMP dword ptr [RSP + 0x6c],0x0\nJZ 0x004043b9\nLEA RCX,[R13 + 0x2]\nCMP RCX,R11\nJNC 0x004043b9\nCMP byte ptr [R10 + R13*0x1 + 0x1],0x3f\nJNZ 0x004043b9\nMOVSX EDX,byte ptr [R10 + RCX*0x1]\nXOR EAX,EAX\nCMP EDX,0x3e\nJA 0x004043bb\nMOV dword ptr [RSP + 0x4],EBP\nMOV EBP,EDI\nMOV RDI,0x7000a38200000000\nBT RDI,RDX\nJNC 0x00404c02\nTEST R8B,R8B\nMOV EDI,EBP\nJNZ 0x00404c38\nCMP R12,RSI\nJNC 0x00404a2e\nMOV byte ptr [R14 + R12*0x1],0x3f\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nMOV EBP,dword ptr [RSP + 0x4]\nJNC 0x00404a41\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404a50\nMOV byte ptr [R14 + RAX*0x1],0x22\nLEA RAX,[R12 + 0x3]\nCMP RAX,RSI\nJNC 0x00404a5f\nMOV byte ptr [R14 + RAX*0x1],0x3f\nADD R12,0x4\nXOR EAX,EAX\nMOV R13,RCX\nMOV R15B,DL\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004043c6\nJMP 0x00404a90\nMOV R11,qword ptr [RSP + 0x30]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004043c6\nNOP dword ptr [RAX + RAX*0x1]\nCMP byte ptr [RSP + 0xd],0x0\nJZ 0x00404ad0\nMOV EDX,0x1\nMOV ECX,R15D\nSHL EDX,CL\nTEST BPL,BPL\nJNZ 0x00404ad5\nMOV ECX,R15D\nSHR CL,0x5\nMOVZX ECX,CL\nMOV EBP,EDI\nMOV RDI,qword ptr [0xe0 + RSP]\nAND EDX,dword ptr [RDI + RCX*0x4]\nMOV EDI,EBP\nJZ 0x00404b30\nJMP 0x00404ad5\nTEST BPL,BPL\nJZ 0x00404b30\nTEST R8B,R8B\nJNZ 0x00404c38\nCMP EBX,0x2\nJNZ 0x00404b18\nMOV EAX,EDI\nAND AL,0x1\nJNZ 0x00404b18\nCMP R12,RSI\nJNC 0x00404af3\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404b02\nMOV byte ptr [R14 + RAX*0x1],0x24\nLEA RAX,[R12 + 0x2]\nCMP RAX,RSI\nJNC 0x00404b11\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x3\nMOV DIL,0x1\nCMP R12,RSI\nJNC 0x00404b22\nMOV byte ptr [R14 + R12*0x1],0x5c\nINC R12\nCMP R12,RSI\nJNC 0x00404b62\nJMP 0x00404b5e\nTEST DIL,0x1\nJZ 0x00404b59\nAND AL,0x1\nJNZ 0x00404b59\nCMP R12,RSI\nJNC 0x00404b44\nMOV byte ptr [R14 + R12*0x1],0x27\nLEA RAX,[R12 + 0x1]\nCMP RAX,RSI\nJNC 0x00404b53\nMOV byte ptr [R14 + RAX*0x1],0x27\nADD R12,0x2\nXOR EDI,EDI\nCMP R12,RSI\nJNC 0x00404b62\nMOV byte ptr [R14 + R12*0x1],R15B\nINC R12\nINC R13\nCMP R11,-0x1\nJNZ 0x00404c20\nJMP 0x00404340\nMOV dword ptr [RSP + 0x10],0x0\nMOV R10,qword ptr [RSP + 0x18]\nJMP 0x00404bc4\nCMP qword ptr [0x90 + RSP],R11\nMOV R10,qword ptr [RSP + 0x18]\nJNC 0x00404bbc\nMOV RCX,qword ptr [RSP + 0x20]\nMOV RAX,qword ptr [RSP + 0x78]\nCMP byte ptr [RAX + RCX*0x1],0x0\nJZ 0x00404bf8\nLEA RAX,[R13 + RCX*0x1 + 0x1]\nINC RCX\nCMP RAX,R11\nJC 0x00404b9a\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00404bc9\nMOV dword ptr [RSP + 0x10],0x0\nMOV RCX,qword ptr [RSP + 0x20]\nCMP RCX,0x1\nMOV R14,qword ptr [RSP + 0x38]\nMOV RSI,qword ptr [RSP + 0x28]\nMOV EBX,dword ptr [RSP + 0x14]\nMOV R8,qword ptr [RSP + 0x48]\nMOV R9,qword ptr [RSP + 0x40]\nMOV EDI,dword ptr [RSP + 0x4]\nMOV EDX,dword ptr [RSP + 0x10]\nJBE 0x00404688\nJMP 0x004046a6\nMOV dword ptr [RSP + 0x10],0x0\nJMP 0x00404bc9\nMOV EDI,EBP\nMOV EBP,dword ptr [RSP + 0x4]\nCMP byte ptr [RSP + 0xe],0x0\nJNZ 0x004043c6\nJMP 0x00404a90\nCMP R13,R11\nJNZ 0x0040434b\nTEST R8B,R8B\nJZ 0x00404c92\nCMP EBX,0x2\nJNZ 0x00404c92\nTEST R12,R12\nJNZ 0x00404c92\nTEST byte ptr [0xa0 + RSP],0x1\nMOV R8D,0x4\nCMOVZ R8D,EBX\nCMP EBX,0x2\nCMOVNZ R8D,EBX\nMOV R9D,dword ptr [RSP + 0x54]\nAND R9D,0xfffffffd\nSUB RSP,0x8\nMOV RDI,R14\nMOV RDX,R10\nMOV RCX,R11\nPUSH qword ptr [RSP + 0x68]\nPUSH qword ptr [RSP + 0x68]\nPUSH 0x0\nCALL 0x004040d0\nADD RSP,0x20\nMOV R12,RAX\nMOV RAX,R12\nADD RSP,0xa8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RCX,qword ptr [0x80 + RSP]\nTEST RCX,RCX\nJZ 0x00404cc6\nTEST R8B,R8B\nJNZ 0x00404cc6\nMOV AL,byte ptr [RCX]\nTEST AL,AL\nJZ 0x00404cc6\nINC RCX\nNOP dword ptr [RAX]\nCMP R12,RSI\nJNC 0x00404cb9\nMOV byte ptr [R14 + R12*0x1],AL\nINC R12\nMOVZX EAX,byte ptr [RCX]\nINC RCX\nTEST AL,AL\nJNZ 0x00404cb0\nCMP R12,RSI\nJNC 0x00404c7d\nMOV byte ptr [R14 + R12*0x1],0x0\nJMP 0x00404c7d\nMOV R14,qword ptr [RSP + 0x38]\nJMP 0x00404c38\nTEST RSI,RSI\nJZ 0x00404ce9\nMOV RAX,qword ptr [RSP + 0x38]\nMOV byte ptr [RAX],0x22\nMOV ECX,0x408246\nXOR R8D,R8D\nMOV R12D,0x1\nMOV R9D,0x1\nMOV DIL,0x1\nJMP 0x0040428c\nCALL 0x00401700\n'
p711
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec a8 00 00 00\n44 89 cb\n45 89 c7\n49 89 cd\n48 89 54 24 18\n48 89 74 24 28\n48 89 7c 24 38\ne8 12 d7 ff ff\n48 89 84 24 98 00 00 00\n41 83 ff 0a\n0f 87 f5 0b 00 00\n48 8b 84 24 f0 00 00 00\n48 89 44 24 60\n48 8b 84 24 e8 00 00 00\n48 89 44 24 58\n89 5c 24 54\n89 dd\n83 e5 02\n41 89 ee\n41 d1 ee\nbb 07 00 00 00\n40 b7 01\n45 31 c0\n44 89 f8\n45 31 e4\n31 c9\n45 31 c9\n4c 8b 54 24 18\n4d 89 eb\n48 8b 74 24 28\nff 24 c5 20 7d 40 00\nbf 48 82 40 00\n44 89 fe\ne8 40 12 00 00\n48 89 44 24 58\nbf 4a 82 40 00\n44 89 fe\ne8 2e 12 00 00\n48 8b 74 24 28\n48 89 44 24 60\n85 ed\n75 2d\n48 8b 54 24 58\n8a 02\n45 31 e4\n84 c0\n74 22\n66 90\n49 39 f4\n73 09\n48 8b 4c 24 38\n42 88 04 21\n42 0f b6 44 22 01\n49 ff c4\n84 c0\n75 e5\neb 03\n45 31 e4\n48 8b 5c 24 60\n48 89 df\ne8 53 d6 ff ff\n48 8b 74 24 28\n49 89 c1\n48 89 d9\n44 89 fb\n45 88 f0\n4c 8b 54 24 18\n4d 89 eb\n40 b7 01\ne9 9e 00 00 00\n45 31 e4\n31 c9\n45 31 c9\n31 ff\n31 db\n45 31 c0\ne9 8a 00 00 00\nb9 46 82 40 00\nbb 05 00 00 00\n40 b7 01\n41 b9 01 00 00 00\neb 6f\n41 b0 01\n41 b6 01\n45 84 f6\nb0 01\n74 03\n44 89 c0\n41 88 c0\nbb 02 00 00 00\n45 84 f6\n75 20\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 27\nb9 4a 82 40 00\n41 bc 01 00 00 00\n41 b9 01 00 00 00\neb 0e\nb9 4a 82 40 00\n41 b9 01 00 00 00\n45 31 e4\n44 88 c7\n45 88 f0\neb 22\nbb 05 00 00 00\n45 84 f6\n0f 84 64 0a 00 00\nb9 46 82 40 00\n41 b9 01 00 00 00\n40 b7 01\n45 31 e4\n41 b0 01\n48 89 8c 24 80 00 00 00\n89 f8\n24 01\n83 fb 02\n41 0f 95 c6\n89 dd\n0f 94 c3\n88 44 24 01\n89 c1\n44 20 f1\n4d 85 c9\n0f 95 c0\n89 c2\n88 4c 24 0e\n20 ca\n88 54 24 0f\n45 84 c0\n0f 95 c1\n0f 94 c2\n20 cb\n88 5c 24 0c\n48 83 bc 24 e0 00 00 00 00\n0f 95 c3\n20 cb\n88 5c 24 0d\n89 eb\n8b 6c 24 54\n89 e9\n83 e1 01\n89 4c 24 70\n89 e9\n83 e1 04\n89 4c 24 6c\n44 88 74 24 02\n44 08 f2\n88 54 24 03\n48 89 bc 24 a0 00 00 00\n44 84 c7\n0f 95 c1\n20 c1\n88 4c 24 0b\n45 31 ed\n31 ff\n4c 8b 74 24 38\n89 5c 24 14\n4c 89 44 24 48\n4c 89 4c 24 40\n49 83 fb ff\n0f 85 e6 08 00 00\n66 0f 1f 44 00 00\n43 80 3c 2a 00\n0f 84 de 08 00 00\n80 7c 24 0f 00\n74 3d\n4b 8d 6c 0d 00\n49 83 f9 02\n72 2d\n49 83 fb ff\n75 27\n89 fb\n4c 89 d7\ne8 b3 d4 ff ff\n89 df\n4c 8b 4c 24 40\n4c 8b 44 24 48\n8b 5c 24 14\n48 8b 74 24 28\n4c 8b 54 24 18\n49 89 c3\n4c 39 dd\n76 51\n31 ed\n47 0f b6 3c 2a\n49 83 ff 7e\n0f 87 9c 02 00 00\n31 c0\nb2 6e\nb1 61\n42 ff 24 fd 78 7d 40 00\n80 7c 24 03 00\n0f 84 7f 08 00 00\n31 c0\n80 7c 24 0e 00\n0f 84 ca 06 00 00\n48 83 bc 24 e0 00 00 00 00\n0f 85 c2 06 00 00\ne9 f6 06 00 00\n89 fd\n4c 89 db\n4b 8d 3c 2a\n48 8b b4 24 80 00 00 00\n4c 89 ca\ne8 d7 d4 ff ff\n85 c0\n0f 94 c0\n75 2d\n4c 8b 44 24 48\n45 84 c0\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 4c 24 40\n89 ef\n89 c5\n0f 84 69 ff ff ff\ne9 0b 08 00 00\n4c 8b 54 24 18\n49 89 db\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n89 ef\n89 c5\ne9 40 ff ff ff\n31 c0\n45 84 c0\n0f 84 5f ff ff ff\n83 fb 02\n0f 85 56 ff ff ff\n4d 85 ed\n0f 85 4d ff ff ff\ne9 c5 07 00 00\n49 83 fb ff\n0f 84 96 03 00 00\n4d 85 ed\n0f 95 c1\n49 83 fb 01\n0f 95 c2\n31 c0\n45 84 c0\n0f 85 9e 03 00 00\ne9 21 ff ff ff\n80 7c 24 01 00\n0f 84 9f 03 00 00\n45 84 c0\n0f 85 8a 07 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 4c 24 01\nb0 01\n41 b7 30\n83 fb 02\n0f 84 b3 04 00 00\n49 8d 55 01\n4c 39 da\n0f 83 a6 04 00 00\n41 8a 14 12\n80 c2 d0\n80 fa 09\n0f 87 96 04 00 00\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 8d 4c 24 02\n48 39 f1\n73 05\n41 c6 04 0e 30\n49 83 c4 03\n80 7c 24 0e 00\n0f 85 7c fe ff ff\ne9 41 05 00 00\nb1 62\n80 7c 24 01 00\n0f 84 5d fe ff ff\neb 3c\nb2 74\neb 20\nb1 76\n80 7c 24 01 00\n0f 84 4a fe ff ff\neb 29\nb1 66\n80 7c 24 01 00\n0f 84 3b fe ff ff\neb 1a\nb2 72\n80 7c 24 03 00\n89 d1\n0f 84 a9 06 00 00\n80 7c 24 01 00\n0f 84 1f fe ff ff\n41 88 cf\n45 84 c0\n0f 84 38 05 00 00\ne9 8d 06 00 00\n41 b7 27\n83 fb 02\n0f 85 02 fe ff ff\n45 84 c0\n0f 85 78 06 00 00\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 5c\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n31 ff\ne9 c6 fd ff ff\n41 b7 3f\n83 fb 05\n0f 84 cc 03 00 00\n83 fb 02\n0f 85 b1 fd ff ff\n45 84 c0\n0f 84 a8 fd ff ff\ne9 22 06 00 00\n83 fb 02\n0f 85 45 02 00 00\n45 84 c0\n0f 85 10 06 00 00\n41 b7 5c\n31 c0\n40 f6 c7 01\n0f 85 ff 04 00 00\ne9 1d 05 00 00\n89 7c 24 04\n48 83 bc 24 98 00 00 00 01\n0f 85 36 02 00 00\n4c 89 5c 24 30\ne8 d7 d4 ff ff\n4c 8b 54 24 18\n48 8b 00\n42 0f b7 14 78\nc1 ea 0e\n80 e2 01\nb9 01 00 00 00\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n31 c0\n80 7c 24 01 00\n0f 84 e3 03 00 00\n49 89 cb\n89 d1\n80 e1 01\n4c 89 d9\n0f 85 d2 03 00 00\n80 7c 24 01 00\n0f 95 c0\n4c 01 e9\nf6 c2 01\n0f 94 c2\n20 c2\n88 54 24 20\n31 c0\n4c 8b 5c 24 30\n80 7c 24 20 00\n0f 85 93 00 00 00\neb 5f\nf6 44 24 04 01\n74 32\n48 89 cf\n89 c1\n80 e1 01\n75 25\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 4c 24 01\n48 39 f1\n73 05\n41 c6 04 0e 27\n49 83 c4 02\nc7 44 24 04 00 00 00 00\n48 89 f9\n49 39 f4\n73 32\n47 88 3c 26\neb 2c\n40 f6 c5 01\n0f 84 b9 00 00 00\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n31 ed\ne9 a5 00 00 00\n49 ff c4\n47 8a 7c 2a 01\n49 89 d5\n80 7c 24 20 00\n74 ce\n45 84 c0\n0f 85 cd 04 00 00\n83 fb 02\n75 3a\n8b 44 24 04\n24 01\n75 32\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\nb0 01\n89 44 24 04\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 8d 44 24 01\n48 39 f0\n73 0d\n44 89 fa\nc0 ea 06\n80 ca 30\n41 88 14 06\n49 8d 44 24 02\n48 39 f0\n73 10\n44 89 fa\nc0 ea 03\n80 e2 07\n80 ca 30\n41 88 14 06\n49 83 c4 03\n41 80 e7 07\n41 80 cf 30\nb0 01\n49 8d 55 01\n48 39 d1\n0f 87 e0 fe ff ff\n8b 7c 24 04\n40 f6 c7 01\n0f 85 28 03 00 00\ne9 46 03 00 00\n4d 85 ed\n0f 95 c1\n41 80 7a 01 00\n0f 95 c2\n31 c0\n45 84 c0\n49 c7 c3 ff ff ff ff\n0f 84 88 fb ff ff\n08 d1\n0a 4c 24 02\n0f 85 7c fb ff ff\ne9 f4 03 00 00\n83 7c 24 70 00\n0f 85 16 03 00 00\n45 31 ff\n31 c0\n80 7c 24 0e 00\n0f 85 67 fb ff ff\ne9 2c 02 00 00\nb2 5c\n80 7c 24 0b 00\n0f 84 11 fd ff ff\n31 c0\n41 b7 5c\n40 f6 c7 01\n0f 85 b6 02 00 00\ne9 d4 02 00 00\n48 c7 84 24 88 00 00 00 00 00 00 00\n49 83 fb ff\n75 10\n4c 89 d7\ne8 81 cf ff ff\n4c 8b 54 24 18\n49 89 c3\n4b 8d 04 2a\n48 89 44 24 78\nb0 01\n89 44 24 10\n31 c9\n48 8d 9c 24 88 00 00 00\n4c 89 5c 24 30\n48 89 4c 24 20\n4a 8d 04 29\n49 8d 34 02\n48 89 84 24 90 00 00 00\n49 29 c3\n48 8d 7c 24 74\n4c 89 da\n48 89 d9\ne8 53 cf ff ff\n49 89 c6\n4d 85 f6\n0f 84 86 02 00 00\n49 83 fe ff\n48 bf 2b 00 00 00 02 00 00 00\n0f 84 6a 02 00 00\n49 83 fe fe\n4c 8b 5c 24 30\n0f 84 6a 02 00 00\n49 83 fe 01\n0f 97 c0\n22 44 24 0c\n3c 01\n4c 8b 54 24 18\n48 8b 74 24 28\n8b 5c 24 14\n75 35\n48 8b 44 24 20\n48 8b 4c 24 78\n48 8d 04 01\nb9 01 00 00 00\n0f 1f 40 00\n0f be 14 08\n83 c2 a5\n83 fa 21\n77 0a\n48 0f a3 d7\n0f 82 6c 03 00 00\n48 ff c1\n4c 39 f1\n72 e2\n8b 7c 24 74\ne8 99 d1 ff ff\n85 c0\n75 08\nc7 44 24 10 00 00 00 00\n48 8b 44 24 20\n4c 01 f0\n48 8d 9c 24 88 00 00 00\n48 89 df\n49 89 c6\ne8 62 d1 ff ff\n4c 89 f1\n85 c0\n4c 8b 54 24 18\n4c 8b 5c 24 30\n0f 84 12 ff ff ff\ne9 11 02 00 00\n49 89 cc\n80 7c 24 0e 00\n0f 85 00 fa ff ff\ne9 c5 00 00 00\n83 7c 24 6c 00\n0f 84 e3 f9 ff ff\n49 8d 4d 02\n4c 39 d9\n0f 83 d6 f9 ff ff\n43 80 7c 2a 01 3f\n0f 85 ca f9 ff ff\n41 0f be 14 0a\n31 c0\n83 fa 3e\n0f 87 bc f9 ff ff\n89 6c 24 04\n89 fd\n48 bf 00 00 00 00 82 a3 00 70\n48 0f a3 d7\n0f 83 e9 01 00 00\n45 84 c0\n89 ef\n0f 85 14 02 00 00\n49 39 f4\n73 05\n43 c6 04 26 3f\n49 8d 44 24 01\n48 39 f0\n8b 6c 24 04\n73 05\n41 c6 04 06 22\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 22\n49 8d 44 24 03\n48 39 f0\n73 05\n41 c6 04 06 3f\n49 83 c4 04\n31 c0\n49 89 cd\n41 88 d7\n80 7c 24 0e 00\n0f 85 50 f9 ff ff\neb 18\n4c 8b 5c 24 30\n80 7c 24 0e 00\n0f 85 3e f9 ff ff\n0f 1f 84 00 00 00 00 00\n80 7c 24 0d 00\n74 39\nba 01 00 00 00\n44 89 f9\nd3 e2\n40 84 ed\n75 2f\n44 89 f9\nc0 e9 05\n0f b6 c9\n89 fd\n48 8b bc 24 e0 00 00 00\n23 14 8f\n89 ef\n74 70\neb 13\n40 84 ed\n74 5b\n45 84 c0\n0f 85 5a 01 00 00\n83 fb 02\n75 35\n89 f8\n24 01\n75 2f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 24\n49 8d 44 24 02\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 03\n40 b7 01\n49 39 f4\n73 05\n43 c6 04 26 5c\n49 ff c4\n49 39 f4\n73 38\neb 32\n40 f6 c7 01\n74 23\n24 01\n75 1f\n49 39 f4\n73 05\n43 c6 04 26 27\n49 8d 44 24 01\n48 39 f0\n73 05\n41 c6 04 06 27\n49 83 c4 02\n31 ff\n49 39 f4\n73 04\n47 88 3c 26\n49 ff c4\n49 ff c5\n49 83 fb ff\n0f 85 ae 00 00 00\ne9 c9 f7 ff ff\nc7 44 24 10 00 00 00 00\n4c 8b 54 24 18\neb 3e\n4c 39 9c 24 90 00 00 00\n4c 8b 54 24 18\n73 27\n48 8b 4c 24 20\n48 8b 44 24 78\n80 3c 08 00\n74 53\n49 8d 44 0d 01\n48 ff c1\n4c 39 d8\n72 e8\nc7 44 24 10 00 00 00 00\neb 0d\nc7 44 24 10 00 00 00 00\n48 8b 4c 24 20\n48 83 f9 01\n4c 8b 74 24 38\n48 8b 74 24 28\n8b 5c 24 14\n4c 8b 44 24 48\n4c 8b 4c 24 40\n8b 7c 24 04\n8b 54 24 10\n0f 86 95 fa ff ff\ne9 ae fa ff ff\nc7 44 24 10 00 00 00 00\neb c7\n89 ef\n8b 6c 24 04\n80 7c 24 0e 00\n0f 85 b3 f7 ff ff\ne9 78 fe ff ff\n4d 39 dd\n0f 85 22 f7 ff ff\n45 84 c0\n74 64\n83 fb 02\n75 5f\n4d 85 e4\n75 5a\nf6 84 24 a0 00 00 00 01\n41 b8 04 00 00 00\n44 0f 44 c3\n83 fb 02\n44 0f 45 c3\n44 8b 4c 24 54\n41 83 e1 fd\n48 83 ec 08\n4c 89 f7\n4c 89 d2\n4c 89 d9\nff 74 24 68\nff 74 24 68\n6a 00\ne8 5a f4 ff ff\n48 83 c4 20\n49 89 c4\n4c 89 e0\n48 81 c4 a8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 8c 24 80 00 00 00\n48 85 c9\n74 27\n45 84 c0\n75 22\n8a 01\n84 c0\n74 1c\n48 ff c1\n0f 1f 00\n49 39 f4\n73 04\n43 88 04 26\n49 ff c4\n0f b6 01\n48 ff c1\n84 c0\n75 ea\n49 39 f4\n73 b2\n43 c6 04 26 00\neb ab\n4c 8b 74 24 38\ne9 5c ff ff ff\n48 85 f6\n74 08\n48 8b 44 24 38\nc6 00 22\nb9 46 82 40 00\n45 31 c0\n41 bc 01 00 00 00\n41 b9 01 00 00 00\n40 b7 01\ne9 87 f5 ff ff\ne8 f6 c9 ff ff\n'
p712
S'.text:00000000004040d0\n.text:00000000004040d1\n.text:00000000004040d3\n.text:00000000004040d5\n.text:00000000004040d7\n.text:00000000004040d9\n.text:00000000004040da\n.text:00000000004040e1\n.text:00000000004040e4\n.text:00000000004040e7\n.text:00000000004040ea\n.text:00000000004040ef\n.text:00000000004040f4\n.text:00000000004040f9\n.text:00000000004040fe\n.text:0000000000404106\n.text:000000000040410a\n.text:0000000000404110\n.text:0000000000404118\n.text:000000000040411d\n.text:0000000000404125\n.text:000000000040412a\n.text:000000000040412e\n.text:0000000000404130\n.text:0000000000404133\n.text:0000000000404136\n.text:0000000000404139\n.text:000000000040413e\n.text:0000000000404141\n.text:0000000000404144\n.text:0000000000404147\n.text:000000000040414a\n.text:000000000040414c\n.text:000000000040414f\n.text:0000000000404154\n.text:0000000000404157\n.text:000000000040415c\n.text:0000000000404163\n.text:0000000000404168\n.text:000000000040416b\n.text:0000000000404170\n.text:0000000000404175\n.text:000000000040417a\n.text:000000000040417d\n.text:0000000000404182\n.text:0000000000404187\n.text:000000000040418c\n.text:000000000040418e\n.text:0000000000404190\n.text:0000000000404195\n.text:0000000000404197\n.text:000000000040419a\n.text:000000000040419c\n.text:000000000040419e\n.text:00000000004041a0\n.text:00000000004041a3\n.text:00000000004041a5\n.text:00000000004041aa\n.text:00000000004041ae\n.text:00000000004041b4\n.text:00000000004041b7\n.text:00000000004041b9\n.text:00000000004041bb\n.text:00000000004041bd\n.text:00000000004041c0\n.text:00000000004041c5\n.text:00000000004041c8\n.text:00000000004041cd\n.text:00000000004041d2\n.text:00000000004041d5\n.text:00000000004041d8\n.text:00000000004041db\n.text:00000000004041de\n.text:00000000004041e3\n.text:00000000004041e6\n.text:00000000004041e9\n.text:00000000004041ee\n.text:00000000004041f1\n.text:00000000004041f3\n.text:00000000004041f6\n.text:00000000004041f8\n.text:00000000004041fa\n.text:00000000004041fd\n.text:0000000000404202\n.text:0000000000404207\n.text:000000000040420c\n.text:000000000040420f\n.text:0000000000404215\n.text:0000000000404217\n.text:000000000040421a\n.text:000000000040421d\n.text:0000000000404220\n.text:0000000000404222\n.text:0000000000404224\n.text:0000000000404227\n.text:000000000040422a\n.text:000000000040422f\n.text:0000000000404232\n.text:0000000000404234\n.text:0000000000404237\n.text:0000000000404239\n.text:000000000040423e\n.text:0000000000404241\n.text:0000000000404246\n.text:000000000040424c\n.text:0000000000404252\n.text:0000000000404254\n.text:0000000000404259\n.text:000000000040425f\n.text:0000000000404262\n.text:0000000000404265\n.text:0000000000404268\n.text:000000000040426a\n.text:000000000040426f\n.text:0000000000404272\n.text:0000000000404278\n.text:000000000040427d\n.text:0000000000404283\n.text:0000000000404286\n.text:0000000000404289\n.text:000000000040428c\n.text:0000000000404294\n.text:0000000000404296\n.text:0000000000404298\n.text:000000000040429b\n.text:000000000040429f\n.text:00000000004042a1\n.text:00000000004042a4\n.text:00000000004042a8\n.text:00000000004042aa\n.text:00000000004042ad\n.text:00000000004042b0\n.text:00000000004042b3\n.text:00000000004042b5\n.text:00000000004042b9\n.text:00000000004042bb\n.text:00000000004042bf\n.text:00000000004042c2\n.text:00000000004042c5\n.text:00000000004042c8\n.text:00000000004042ca\n.text:00000000004042ce\n.text:00000000004042d7\n.text:00000000004042da\n.text:00000000004042dc\n.text:00000000004042e0\n.text:00000000004042e2\n.text:00000000004042e6\n.text:00000000004042e8\n.text:00000000004042eb\n.text:00000000004042ef\n.text:00000000004042f1\n.text:00000000004042f4\n.text:00000000004042f8\n.text:00000000004042fd\n.text:0000000000404300\n.text:0000000000404304\n.text:000000000040430c\n.text:000000000040430f\n.text:0000000000404312\n.text:0000000000404314\n.text:0000000000404318\n.text:000000000040431b\n.text:000000000040431d\n.text:0000000000404322\n.text:0000000000404326\n.text:000000000040432b\n.text:0000000000404330\n.text:0000000000404334\n.text:000000000040433a\n.text:0000000000404340\n.text:0000000000404345\n.text:000000000040434b\n.text:0000000000404350\n.text:0000000000404352\n.text:0000000000404357\n.text:000000000040435b\n.text:000000000040435d\n.text:0000000000404361\n.text:0000000000404363\n.text:0000000000404365\n.text:0000000000404368\n.text:000000000040436d\n.text:000000000040436f\n.text:0000000000404374\n.text:0000000000404379\n.text:000000000040437d\n.text:0000000000404382\n.text:0000000000404387\n.text:000000000040438a\n.text:000000000040438d\n.text:000000000040438f\n.text:0000000000404391\n.text:0000000000404396\n.text:000000000040439a\n.text:00000000004043a0\n.text:00000000004043a2\n.text:00000000004043a4\n.text:00000000004043a6\n.text:00000000004043ae\n.text:00000000004043b3\n.text:00000000004043b9\n.text:00000000004043bb\n.text:00000000004043c0\n.text:00000000004043c6\n.text:00000000004043cf\n.text:00000000004043d5\n.text:00000000004043e0\n.text:00000000004043e2\n.text:00000000004043e5\n.text:00000000004043e9\n.text:00000000004043f1\n.text:00000000004043f4\n.text:00000000004043f9\n.text:00000000004043fb\n.text:00000000004043fe\n.text:0000000000404400\n.text:0000000000404405\n.text:0000000000404408\n.text:000000000040440d\n.text:0000000000404410\n.text:0000000000404415\n.text:0000000000404419\n.text:000000000040441e\n.text:0000000000404420\n.text:0000000000404422\n.text:0000000000404428\n.text:000000000040442d\n.text:0000000000404432\n.text:0000000000404435\n.text:000000000040443a\n.text:000000000040443e\n.text:0000000000404443\n.text:0000000000404448\n.text:000000000040444a\n.text:000000000040444c\n.text:0000000000404451\n.text:0000000000404453\n.text:0000000000404456\n.text:000000000040445c\n.text:000000000040445f\n.text:0000000000404465\n.text:0000000000404468\n.text:000000000040446e\n.text:0000000000404473\n.text:0000000000404477\n.text:000000000040447d\n.text:0000000000404480\n.text:0000000000404483\n.text:0000000000404487\n.text:000000000040448a\n.text:000000000040448c\n.text:000000000040448f\n.text:0000000000404495\n.text:000000000040449a\n.text:000000000040449f\n.text:00000000004044a5\n.text:00000000004044a8\n.text:00000000004044ae\n.text:00000000004044b1\n.text:00000000004044b3\n.text:00000000004044b5\n.text:00000000004044b7\n.text:00000000004044b9\n.text:00000000004044bc\n.text:00000000004044be\n.text:00000000004044c3\n.text:00000000004044c8\n.text:00000000004044cb\n.text:00000000004044cd\n.text:00000000004044d2\n.text:00000000004044d7\n.text:00000000004044da\n.text:00000000004044dc\n.text:00000000004044e1\n.text:00000000004044e5\n.text:00000000004044e8\n.text:00000000004044eb\n.text:00000000004044ed\n.text:00000000004044f2\n.text:00000000004044f7\n.text:00000000004044f9\n.text:00000000004044fc\n.text:00000000004044ff\n.text:0000000000404505\n.text:0000000000404509\n.text:000000000040450c\n.text:0000000000404512\n.text:0000000000404516\n.text:0000000000404519\n.text:000000000040451c\n.text:0000000000404522\n.text:0000000000404525\n.text:0000000000404527\n.text:000000000040452c\n.text:0000000000404531\n.text:0000000000404534\n.text:0000000000404536\n.text:000000000040453b\n.text:000000000040453f\n.text:0000000000404544\n.text:000000000040454a\n.text:000000000040454f\n.text:0000000000404551\n.text:0000000000404556\n.text:000000000040455c\n.text:000000000040455e\n.text:0000000000404560\n.text:0000000000404562\n.text:0000000000404564\n.text:0000000000404569\n.text:000000000040456f\n.text:0000000000404571\n.text:0000000000404573\n.text:0000000000404578\n.text:000000000040457e\n.text:0000000000404580\n.text:0000000000404582\n.text:0000000000404587\n.text:0000000000404589\n.text:000000000040458f\n.text:0000000000404594\n.text:000000000040459a\n.text:000000000040459d\n.text:00000000004045a0\n.text:00000000004045a6\n.text:00000000004045ab\n.text:00000000004045ae\n.text:00000000004045b1\n.text:00000000004045b7\n.text:00000000004045ba\n.text:00000000004045c0\n.text:00000000004045c3\n.text:00000000004045c5\n.text:00000000004045ca\n.text:00000000004045cf\n.text:00000000004045d2\n.text:00000000004045d4\n.text:00000000004045d9\n.text:00000000004045de\n.text:00000000004045e1\n.text:00000000004045e3\n.text:00000000004045e8\n.text:00000000004045ec\n.text:00000000004045ee\n.text:00000000004045f3\n.text:00000000004045f6\n.text:00000000004045f9\n.text:00000000004045ff\n.text:0000000000404602\n.text:0000000000404608\n.text:000000000040460b\n.text:0000000000404611\n.text:0000000000404616\n.text:0000000000404619\n.text:000000000040461f\n.text:0000000000404622\n.text:0000000000404628\n.text:000000000040462b\n.text:000000000040462d\n.text:0000000000404631\n.text:0000000000404637\n.text:000000000040463c\n.text:0000000000404640\n.text:0000000000404649\n.text:000000000040464f\n.text:0000000000404654\n.text:0000000000404659\n.text:000000000040465e\n.text:0000000000404661\n.text:0000000000404666\n.text:0000000000404669\n.text:000000000040466c\n.text:0000000000404671\n.text:0000000000404676\n.text:000000000040467a\n.text:000000000040467f\n.text:0000000000404684\n.text:0000000000404688\n.text:000000000040468a\n.text:000000000040468f\n.text:0000000000404695\n.text:0000000000404698\n.text:000000000040469a\n.text:000000000040469d\n.text:00000000004046a0\n.text:00000000004046a6\n.text:00000000004046ab\n.text:00000000004046ae\n.text:00000000004046b1\n.text:00000000004046b4\n.text:00000000004046b7\n.text:00000000004046b9\n.text:00000000004046bd\n.text:00000000004046bf\n.text:00000000004046c4\n.text:00000000004046c9\n.text:00000000004046cf\n.text:00000000004046e0\n.text:00000000004046e5\n.text:00000000004046e7\n.text:00000000004046ea\n.text:00000000004046ec\n.text:00000000004046ef\n.text:00000000004046f1\n.text:00000000004046f4\n.text:00000000004046f6\n.text:00000000004046fb\n.text:0000000000404700\n.text:0000000000404703\n.text:0000000000404705\n.text:000000000040470a\n.text:000000000040470e\n.text:0000000000404716\n.text:0000000000404719\n.text:000000000040471c\n.text:000000000040471e\n.text:0000000000404722\n.text:0000000000404730\n.text:0000000000404734\n.text:000000000040473a\n.text:000000000040473d\n.text:000000000040473f\n.text:0000000000404744\n.text:0000000000404747\n.text:0000000000404749\n.text:0000000000404750\n.text:0000000000404753\n.text:0000000000404758\n.text:000000000040475b\n.text:0000000000404760\n.text:0000000000404762\n.text:0000000000404765\n.text:000000000040476b\n.text:000000000040476e\n.text:0000000000404770\n.text:0000000000404774\n.text:0000000000404776\n.text:0000000000404778\n.text:000000000040477b\n.text:000000000040477d\n.text:0000000000404782\n.text:0000000000404787\n.text:000000000040478a\n.text:000000000040478c\n.text:0000000000404791\n.text:0000000000404796\n.text:0000000000404799\n.text:000000000040479b\n.text:00000000004047a0\n.text:00000000004047a4\n.text:00000000004047a6\n.text:00000000004047aa\n.text:00000000004047ad\n.text:00000000004047af\n.text:00000000004047b4\n.text:00000000004047b9\n.text:00000000004047bc\n.text:00000000004047be\n.text:00000000004047c1\n.text:00000000004047c4\n.text:00000000004047c7\n.text:00000000004047cb\n.text:00000000004047d0\n.text:00000000004047d3\n.text:00000000004047d5\n.text:00000000004047d8\n.text:00000000004047db\n.text:00000000004047de\n.text:00000000004047e1\n.text:00000000004047e5\n.text:00000000004047e9\n.text:00000000004047ed\n.text:00000000004047f1\n.text:00000000004047f3\n.text:00000000004047f7\n.text:00000000004047fa\n.text:0000000000404800\n.text:0000000000404804\n.text:0000000000404808\n.text:000000000040480e\n.text:0000000000404813\n.text:0000000000404816\n.text:0000000000404819\n.text:000000000040481e\n.text:0000000000404821\n.text:0000000000404823\n.text:0000000000404826\n.text:000000000040482d\n.text:0000000000404833\n.text:0000000000404835\n.text:0000000000404839\n.text:000000000040483f\n.text:0000000000404844\n.text:0000000000404849\n.text:000000000040484f\n.text:0000000000404852\n.text:0000000000404854\n.text:0000000000404859\n.text:000000000040485f\n.text:0000000000404864\n.text:0000000000404866\n.text:000000000040486b\n.text:0000000000404871\n.text:0000000000404873\n.text:0000000000404876\n.text:000000000040487a\n.text:0000000000404880\n.text:0000000000404885\n.text:0000000000404891\n.text:0000000000404895\n.text:0000000000404897\n.text:000000000040489a\n.text:000000000040489f\n.text:00000000004048a4\n.text:00000000004048a7\n.text:00000000004048ab\n.text:00000000004048b0\n.text:00000000004048b2\n.text:00000000004048b6\n.text:00000000004048b8\n.text:00000000004048c0\n.text:00000000004048c5\n.text:00000000004048ca\n.text:00000000004048ce\n.text:00000000004048d2\n.text:00000000004048da\n.text:00000000004048dd\n.text:00000000004048e2\n.text:00000000004048e5\n.text:00000000004048e8\n.text:00000000004048ed\n.text:00000000004048f0\n.text:00000000004048f3\n.text:00000000004048f9\n.text:00000000004048fd\n.text:0000000000404907\n.text:000000000040490d\n.text:0000000000404911\n.text:0000000000404916\n.text:000000000040491c\n.text:0000000000404920\n.text:0000000000404923\n.text:0000000000404927\n.text:0000000000404929\n.text:000000000040492e\n.text:0000000000404933\n.text:0000000000404937\n.text:0000000000404939\n.text:000000000040493e\n.text:0000000000404943\n.text:0000000000404947\n.text:000000000040494c\n.text:0000000000404950\n.text:0000000000404954\n.text:0000000000404957\n.text:000000000040495a\n.text:000000000040495c\n.text:0000000000404960\n.text:0000000000404966\n.text:0000000000404969\n.text:000000000040496c\n.text:000000000040496e\n.text:0000000000404972\n.text:0000000000404977\n.text:0000000000404979\n.text:000000000040497b\n.text:0000000000404983\n.text:0000000000404988\n.text:000000000040498b\n.text:0000000000404993\n.text:0000000000404996\n.text:0000000000404999\n.text:000000000040499e\n.text:00000000004049a1\n.text:00000000004049a3\n.text:00000000004049a8\n.text:00000000004049ad\n.text:00000000004049b3\n.text:00000000004049b8\n.text:00000000004049bb\n.text:00000000004049c0\n.text:00000000004049c6\n.text:00000000004049cb\n.text:00000000004049d0\n.text:00000000004049d6\n.text:00000000004049da\n.text:00000000004049dd\n.text:00000000004049e3\n.text:00000000004049e9\n.text:00000000004049ef\n.text:00000000004049f4\n.text:00000000004049f6\n.text:00000000004049f9\n.text:00000000004049ff\n.text:0000000000404a03\n.text:0000000000404a05\n.text:0000000000404a0f\n.text:0000000000404a13\n.text:0000000000404a19\n.text:0000000000404a1c\n.text:0000000000404a1e\n.text:0000000000404a24\n.text:0000000000404a27\n.text:0000000000404a29\n.text:0000000000404a2e\n.text:0000000000404a33\n.text:0000000000404a36\n.text:0000000000404a3a\n.text:0000000000404a3c\n.text:0000000000404a41\n.text:0000000000404a46\n.text:0000000000404a49\n.text:0000000000404a4b\n.text:0000000000404a50\n.text:0000000000404a55\n.text:0000000000404a58\n.text:0000000000404a5a\n.text:0000000000404a5f\n.text:0000000000404a63\n.text:0000000000404a65\n.text:0000000000404a68\n.text:0000000000404a6b\n.text:0000000000404a70\n.text:0000000000404a76\n.text:0000000000404a78\n.text:0000000000404a7d\n.text:0000000000404a82\n.text:0000000000404a88\n.text:0000000000404a90\n.text:0000000000404a95\n.text:0000000000404a97\n.text:0000000000404a9c\n.text:0000000000404a9f\n.text:0000000000404aa1\n.text:0000000000404aa4\n.text:0000000000404aa6\n.text:0000000000404aa9\n.text:0000000000404aac\n.text:0000000000404aaf\n.text:0000000000404ab1\n.text:0000000000404ab9\n.text:0000000000404abc\n.text:0000000000404abe\n.text:0000000000404ac0\n.text:0000000000404ad0\n.text:0000000000404ad3\n.text:0000000000404ad5\n.text:0000000000404ad8\n.text:0000000000404ade\n.text:0000000000404ae1\n.text:0000000000404ae3\n.text:0000000000404ae5\n.text:0000000000404ae7\n.text:0000000000404ae9\n.text:0000000000404aec\n.text:0000000000404aee\n.text:0000000000404af3\n.text:0000000000404af8\n.text:0000000000404afb\n.text:0000000000404afd\n.text:0000000000404b02\n.text:0000000000404b07\n.text:0000000000404b0a\n.text:0000000000404b0c\n.text:0000000000404b11\n.text:0000000000404b15\n.text:0000000000404b18\n.text:0000000000404b1b\n.text:0000000000404b1d\n.text:0000000000404b22\n.text:0000000000404b25\n.text:0000000000404b28\n.text:0000000000404b2a\n.text:0000000000404b30\n.text:0000000000404b34\n.text:0000000000404b36\n.text:0000000000404b38\n.text:0000000000404b3a\n.text:0000000000404b3d\n.text:0000000000404b3f\n.text:0000000000404b44\n.text:0000000000404b49\n.text:0000000000404b4c\n.text:0000000000404b4e\n.text:0000000000404b53\n.text:0000000000404b57\n.text:0000000000404b59\n.text:0000000000404b5c\n.text:0000000000404b5e\n.text:0000000000404b62\n.text:0000000000404b65\n.text:0000000000404b68\n.text:0000000000404b6c\n.text:0000000000404b72\n.text:0000000000404b77\n.text:0000000000404b7f\n.text:0000000000404b84\n.text:0000000000404b86\n.text:0000000000404b8e\n.text:0000000000404b93\n.text:0000000000404b95\n.text:0000000000404b9a\n.text:0000000000404b9f\n.text:0000000000404ba3\n.text:0000000000404ba5\n.text:0000000000404baa\n.text:0000000000404bad\n.text:0000000000404bb0\n.text:0000000000404bb2\n.text:0000000000404bba\n.text:0000000000404bbc\n.text:0000000000404bc4\n.text:0000000000404bc9\n.text:0000000000404bcd\n.text:0000000000404bd2\n.text:0000000000404bd7\n.text:0000000000404bdb\n.text:0000000000404be0\n.text:0000000000404be5\n.text:0000000000404be9\n.text:0000000000404bed\n.text:0000000000404bf3\n.text:0000000000404bf8\n.text:0000000000404c00\n.text:0000000000404c02\n.text:0000000000404c04\n.text:0000000000404c08\n.text:0000000000404c0d\n.text:0000000000404c13\n.text:0000000000404c20\n.text:0000000000404c23\n.text:0000000000404c29\n.text:0000000000404c2c\n.text:0000000000404c2e\n.text:0000000000404c31\n.text:0000000000404c33\n.text:0000000000404c36\n.text:0000000000404c38\n.text:0000000000404c40\n.text:0000000000404c46\n.text:0000000000404c4a\n.text:0000000000404c4d\n.text:0000000000404c51\n.text:0000000000404c56\n.text:0000000000404c5a\n.text:0000000000404c5e\n.text:0000000000404c61\n.text:0000000000404c64\n.text:0000000000404c67\n.text:0000000000404c6b\n.text:0000000000404c6f\n.text:0000000000404c71\n.text:0000000000404c76\n.text:0000000000404c7a\n.text:0000000000404c7d\n.text:0000000000404c80\n.text:0000000000404c87\n.text:0000000000404c88\n.text:0000000000404c8a\n.text:0000000000404c8c\n.text:0000000000404c8e\n.text:0000000000404c90\n.text:0000000000404c91\n.text:0000000000404c92\n.text:0000000000404c9a\n.text:0000000000404c9d\n.text:0000000000404c9f\n.text:0000000000404ca2\n.text:0000000000404ca4\n.text:0000000000404ca6\n.text:0000000000404ca8\n.text:0000000000404caa\n.text:0000000000404cad\n.text:0000000000404cb0\n.text:0000000000404cb3\n.text:0000000000404cb5\n.text:0000000000404cb9\n.text:0000000000404cbc\n.text:0000000000404cbf\n.text:0000000000404cc2\n.text:0000000000404cc4\n.text:0000000000404cc6\n.text:0000000000404cc9\n.text:0000000000404ccb\n.text:0000000000404cd0\n.text:0000000000404cd2\n.text:0000000000404cd7\n.text:0000000000404cdc\n.text:0000000000404cdf\n.text:0000000000404ce1\n.text:0000000000404ce6\n.text:0000000000404ce9\n.text:0000000000404cee\n.text:0000000000404cf1\n.text:0000000000404cf7\n.text:0000000000404cfd\n.text:0000000000404d00\n.text:0000000000404d05\n'
p713
tp714
sS'newlocale'
p715
(S'\n__stdcall newlocale(int __category_mask, char * __locale, __locale_t __base)\n'
p716
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__locale_t newlocale(int __category_mask,char *__locale,__locale_t __base)\u000a\u000a{\u000a  __locale_t p_Var1;\u000a  \u000a  p_Var1 = (__locale_t)(*(code *)PTR_newlocale_0060b0e8)();\u000a  return p_Var1;\u000a}\u000a\u000a
p717
S'JMP qword ptr [0x0060b0e8]\n'
p718
S'ff 25 92 98 20 00\n'
p719
S'.plt:0000000000401850\n'
p720
tp721
sS'set_quoting_style'
p722
(S'\n__stdcall set_quoting_style(quoting_options * o)\n'
p723
V\u000avoid set_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  quoting_style in_ESI;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = in_ESI;\u000a  return;\u000a}\u000a\u000a
p724
S'TEST RDI,RDI\nMOV EAX,0x60b350\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],ESI\nRET\n'
p725
S'48 85 ff\nb8 50 b3 60 00\n48 0f 45 c7\n89 30\nc3\n'
p726
S'.text:0000000000403fb0\n.text:0000000000403fb3\n.text:0000000000403fb8\n.text:0000000000403fbc\n.text:0000000000403fbe\n'
p727
tp728
sS'extract_trimmed_name'
p729
(S'\n__stdcall extract_trimmed_name(STRUCT_UTMP * ut)\n'
p730
V\u000achar * extract_trimmed_name(STRUCT_UTMP *ut)\u000a\u000a{\u000a  char *__dest;\u000a  size_t sVar1;\u000a  char *pcVar2;\u000a  \u000a  __dest = (char *)xmalloc(0x21);\u000a  strncpy(__dest,ut->ut_user,0x20);\u000a  __dest[0x20] = 0;\u000a  sVar1 = strlen(__dest);\u000a  if (0 < (long)sVar1) {\u000a    pcVar2 = __dest + sVar1;\u000a    do {\u000a      if (pcVar2[-1] != ' ') {\u000a        return __dest;\u000a      }\u000a      pcVar2[-1] = 0;\u000a      pcVar2 = pcVar2 + -1;\u000a    } while (__dest < pcVar2);\u000a  }\u000a  return __dest;\u000a}\u000a\u000a
p731
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14,RDI\nMOV EDI,0x21\nCALL 0x00405cd0\nMOV RBX,RAX\nLEA RSI,[R14 + 0x2c]\nMOV EDX,0x20\nMOV RDI,RBX\nCALL 0x00401720\nMOV byte ptr [RBX + 0x20],0x0\nMOV RDI,RBX\nCALL 0x00401820\nTEST RAX,RAX\nJLE 0x00406072\nADD RAX,RBX\nNOP dword ptr [RAX]\nCMP byte ptr [RAX + -0x1],0x20\nJNZ 0x00406072\nMOV byte ptr [RAX + -0x1],0x0\nDEC RAX\nCMP RBX,RAX\nJC 0x00406060\nMOV RAX,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\n'
p732
S'41 56\n53\n50\n49 89 fe\nbf 21 00 00 00\ne8 9f fc ff ff\n48 89 c3\n49 8d 76 2c\nba 20 00 00 00\n48 89 df\ne8 db b6 ff ff\nc6 43 20 00\n48 89 df\ne8 cf b7 ff ff\n48 85 c0\n7e 1c\n48 01 d8\n0f 1f 80 00 00 00 00\n80 78 ff 20\n75 0c\nc6 40 ff 00\n48 ff c8\n48 39 c3\n72 ee\n48 89 d8\n48 83 c4 08\n5b\n41 5e\nc3\n'
p733
S'.text:0000000000406020\n.text:0000000000406022\n.text:0000000000406023\n.text:0000000000406024\n.text:0000000000406027\n.text:000000000040602c\n.text:0000000000406031\n.text:0000000000406034\n.text:0000000000406038\n.text:000000000040603d\n.text:0000000000406040\n.text:0000000000406045\n.text:0000000000406049\n.text:000000000040604c\n.text:0000000000406051\n.text:0000000000406054\n.text:0000000000406056\n.text:0000000000406059\n.text:0000000000406060\n.text:0000000000406064\n.text:0000000000406066\n.text:000000000040606a\n.text:000000000040606d\n.text:0000000000406070\n.text:0000000000406072\n.text:0000000000406075\n.text:0000000000406079\n.text:000000000040607a\n.text:000000000040607c\n'
p734
tp735
sS'textdomain'
p736
(S'\n__stdcall textdomain()\n'
p737
V\u000avoid textdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_textdomain_0060b090)();\u000a  return;\u000a}\u000a\u000a
p738
S'JMP qword ptr [0x0060b090]\n'
p739
S'ff 25 ea 98 20 00\n'
p740
S'.plt:00000000004017a0\n'
p741
tp742
sS'tzfree'
p743
(S'\n__stdcall tzfree(timezone_t tz)\n'
p744
V\u000avoid tzfree(timezone_t tz)\u000a\u000a{\u000a  tm_zone *ptVar1;\u000a  \u000a  if ((timezone_t)0x1 < tz) {\u000a    do {\u000a      ptVar1 = tz->next;\u000a      free(tz);\u000a      tz = (timezone_t)ptVar1;\u000a    } while (ptVar1 != (tm_zone *)0x0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p745
S'PUSH RBX\nCMP RDI,0x2\nJC 0x00406230\nNOP word ptr [RAX + RAX*0x1]\nMOV RBX,qword ptr [RDI]\nCALL 0x004016e0\nTEST RBX,RBX\nMOV RDI,RBX\nJNZ 0x00406220\nPOP RBX\nRET\n'
p746
S'53\n48 83 ff 02\n72 19\n66 0f 1f 84 00 00 00 00 00\n48 8b 1f\ne8 b8 b4 ff ff\n48 85 db\n48 89 df\n75 f0\n5b\nc3\n'
p747
S'.text:0000000000406210\n.text:0000000000406211\n.text:0000000000406215\n.text:0000000000406217\n.text:0000000000406220\n.text:0000000000406223\n.text:0000000000406228\n.text:000000000040622b\n.text:000000000040622e\n.text:0000000000406230\n.text:0000000000406231\n'
p748
tp749
sS'print_uptime'
p750
(S'\n__stdcall print_uptime(size_t n, STRUCT_UTMP * this)\n'
p751
V\u000a/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\u000a\u000avoid print_uptime(size_t n,STRUCT_UTMP *this)\u000a\u000a{\u000a  int iVar1;\u000a  FILE *fp;\u000a  uint *puVar2;\u000a  undefined8 uVar3;\u000a  tm *tp;\u000a  char *format;\u000a  ulong uVar4;\u000a  double *pdVar5;\u000a  uintmax_t n_00;\u000a  uint uVar6;\u000a  uintmax_t n_01;\u000a  long lVar7;\u000a  ulong uVar8;\u000a  double dVar9;\u000a  undefined auVar10 [16];\u000a  undefined auVar11 [16];\u000a  char *end_ptr;\u000a  double avg [3];\u000a  double *local_2050;\u000a  FILE *local_2048;\u000a  double *local_2040;\u000a  double local_2038;\u000a  undefined8 local_2030;\u000a  undefined8 local_2028;\u000a  \u000a  fp = (FILE *)fopen("/proc/uptime","r");\u000a  if (fp == (FILE *)0x0) {\u000a    local_2040 = (double *)0x0;\u000a  }\u000a  else {\u000a    pdVar5 = (double *)fgets_unlocked((char *)&local_2038,0x2000,(FILE *)fp);\u000a    if ((pdVar5 == &local_2038) &&\u000a       (dVar9 = c_strtod((char *)&local_2038,(char **)&local_2050), &local_2038 != local_2050)) {\u000a      local_2040 = (double *)(long)dVar9;\u000a      if (_DAT_00407338 <= dVar9) {\u000a        local_2040 = (double *)0xffffffffffffffff;\u000a      }\u000a      if (dVar9 < 0.00000000) {\u000a        local_2040 = (double *)0xffffffffffffffff;\u000a      }\u000a    }\u000a    else {\u000a      local_2040 = (double *)0x0;\u000a    }\u000a    rpl_fclose(fp);\u000a  }\u000a  if (n == 0) {\u000a    lVar7 = 0;\u000a    n_01 = 0;\u000a  }\u000a  else {\u000a    n_01 = 0;\u000a    lVar7 = 0;\u000a    do {\u000a      n = n - 1;\u000a      if (this->ut_type == 2) {\u000a        lVar7 = (long)(this->ut_tv).tv_sec;\u000a      }\u000a      n_01 = n_01 + (ulong)(this->ut_user[0] != 0 && this->ut_type == 7);\u000a      this = this + 1;\u000a    } while (n != 0);\u000a  }\u000a  local_2050 = (double *)time((time_t *)0x0);\u000a  if (local_2040 == (double *)0x0) {\u000a    if (lVar7 == 0) {\u000a      puVar2 = (uint *)__errno_location();\u000a      uVar6 = *puVar2;\u000a      uVar3 = dcgettext(0,"couldn\u005c't get boot time",5);\u000a      error(1,(ulong)uVar6,uVar3,uVar3);\u000a    }\u000a    local_2040 = (double *)((long)local_2050 - lVar7);\u000a  }\u000a  n_00 = (long)local_2040 / 0x15180 + ((long)local_2040 >> 0x3f);\u000a  pdVar5 = local_2040 + n_00 * 0x1fffffffffffd5d0;\u000a  uVar8 = (long)pdVar5 / 0xe10 + ((long)pdVar5 >> 0x3f);\u000a  auVar11 = SEXT816((long)((long)pdVar5 - ((long)(uVar8 * 0xe1000000000) >> 0x20))) *\u000a            ZEXT816(0x8888888888888889);\u000a  tp = localtime((time_t *)&local_2050);\u000a  if (tp == (tm *)0x0) {\u000a    auVar10 = dcgettext(0," ??:????  ",5);\u000a    __printf_chk(1,SUB168(auVar10,0),SUB168(auVar10 >> 0x40,0),SUB168(auVar10,0));\u000a  }\u000a  else {\u000a    local_2048 = stdout;\u000a    format = (char *)dcgettext(0," %H:%M%P  ",5);\u000a    fprintftime(local_2048,format,(tm *)tp,(timezone_t)0x0);\u000a  }\u000a  if (local_2040 == (double *)0xffffffffffffffff) {\u000a    auVar11 = dcgettext(0,"up ???? days ??:??,  ",5);\u000a    __printf_chk(1,SUB168(auVar11,0),SUB168(auVar11 >> 0x40,0),SUB168(auVar11,0));\u000a  }\u000a  else {\u000a    uVar6 = (int)SUB168(auVar11 >> 0x45,0) + SUB164(auVar11 >> 0x7f,0);\u000a    if ((long)local_2040 < 0x15180) {\u000a      uVar3 = dcgettext(0,"up  %2d:%02d,  ",5);\u000a      __printf_chk(1,uVar3,uVar8 & 0xffffffff,(ulong)uVar6);\u000a    }\u000a    else {\u000a      uVar4 = select_plural(n_00);\u000a      uVar3 = dcngettext(0,"up %ld day %2d:%02d,  ","up %ld days %2d:%02d,  ",uVar4,5);\u000a      __printf_chk(1,uVar3,n_00,uVar8 & 0xffffffff,(ulong)uVar6);\u000a    }\u000a  }\u000a  uVar8 = select_plural(n_01);\u000a  uVar3 = dcngettext(0,"%lu user","%lu users",uVar8,5);\u000a  __printf_chk(1,uVar3,n_01,uVar3);\u000a  iVar1 = getloadavg(&local_2038,3);\u000a  if (iVar1 != -1) {\u000a    if (iVar1 < 1) {\u000a      return;\u000a    }\u000a    auVar11 = dcgettext(0,",  load average: %.2f",5);\u000a    __printf_chk(local_2038,1,SUB168(auVar11,0),SUB168(auVar11 >> 0x40,0),SUB168(auVar11,0));\u000a    if ((iVar1 != 1) && (__printf_chk(local_2030,1,", %.2f"), 2 < iVar1)) {\u000a      __printf_chk(local_2028,1,", %.2f");\u000a    }\u000a  }\u000a  putchar_unlocked(10);\u000a  return;\u000a}\u000a\u000a
p752
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x2028\nMOV RBX,RSI\nMOV RBP,RDI\nMOV EDI,0x4076e8\nMOV ESI,0x40777e\nCALL 0x00401a90\nMOV R14,RAX\nTEST R14,R14\nJZ 0x0040208d\nLEA R15,[RSP + 0x20]\nMOV ESI,0x2000\nMOV RDI,R15\nMOV RDX,R14\nCALL 0x00401990\nCMP RAX,R15\nJZ 0x0040209a\nXOR R13D,R13D\nJMP 0x004020d5\nXOR R13D,R13D\nTEST RBP,RBP\nJNZ 0x004020e2\nJMP 0x00402125\nLEA RSI,[RSP + 0x8]\nMOV RDI,R15\nCALL 0x004023f0\nCMP R15,qword ptr [RSP + 0x8]\nJZ 0x00402088\nMOVSD XMM1,qword ptr [0x00407338]\nUCOMISD XMM1,XMM0\nCVTTSD2SI R13,XMM0\nMOV RAX,-0x1\nCMOVBE R13,RAX\nXORPS XMM1,XMM1\nUCOMISD XMM0,XMM1\nCMOVC R13,RAX\nMOV RDI,R14\nCALL 0x00405ee0\nTEST RBP,RBP\nJZ 0x00402125\nXOR R14D,R14D\nXOR R15D,R15D\nNOP dword ptr [RAX + RAX*0x1]\nDEC RBP\nMOVZX ECX,word ptr [RBX]\nCMP ECX,0x7\nSETZ AL\nCMP byte ptr [RBX + 0x2c],0x0\nSETNZ DL\nAND DL,AL\nMOVZX EAX,DL\nCMP ECX,0x2\nJNZ 0x00402114\nMOVSXD R15,dword ptr [0x154 + RBX]\nADD R14,RAX\nADD RBX,0x180\nTEST RBP,RBP\nJNZ 0x004020f0\nJMP 0x0040212b\nXOR R15D,R15D\nXOR R14D,R14D\nXOR EDI,EDI\nCALL 0x00401970\nMOV qword ptr [RSP + 0x8],RAX\nTEST R13,R13\nJNZ 0x00402175\nTEST R15,R15\nJNZ 0x0040216d\nCALL 0x00401710\nMOV EBX,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x4076f5\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV ESI,EBX\nMOV RDX,RCX\nCALL 0x00401a60\nMOV R13,qword ptr [RSP + 0x8]\nSUB R13,R15\nMOV RCX,0x1845c8a0ce512957\nMOV RAX,R13\nIMUL RCX\nMOV R12,RDX\nMOV RAX,R12\nSHR RAX,0x3f\nSAR R12,0xd\nADD R12,RAX\nIMUL RBX,R12,-0x15180\nMOV qword ptr [RSP + 0x18],R13\nADD RBX,R13\nMOV RCX,0x48d159e26af37c05\nMOV RAX,RBX\nIMUL RCX\nMOV R15,RDX\nMOV RAX,R15\nSHR RAX,0x3f\nSAR R15,0xa\nADD R15,RAX\nMOV RAX,0xe1000000000\nIMUL RAX,R15\nSAR RAX,0x20\nSUB RBX,RAX\nMOV RCX,-0x7777777777777777\nMOV RAX,RBX\nIMUL RCX\nMOV R13,RDX\nLEA RDI,[RSP + 0x8]\nCALL 0x004016f0\nMOV RBP,RAX\nTEST RBP,RBP\nJZ 0x00402234\nMOV RAX,qword ptr [0x0060b2e8]\nMOV qword ptr [RSP + 0x10],RAX\nXOR EDI,EDI\nMOV ESI,0x40770c\nMOV EDX,0x5\nCALL 0x00401800\nXOR ECX,ECX\nXOR R8D,R8D\nMOV RDI,qword ptr [RSP + 0x10]\nMOV RSI,RAX\nMOV RDX,RBP\nCALL 0x00402540\nJMP 0x00402257\nXOR EDI,EDI\nMOV ESI,0x407717\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nMOV RCX,qword ptr [RSP + 0x18]\nCMP RCX,-0x1\nJZ 0x004022bb\nADD R13,RBX\nMOV RAX,R13\nSHR RAX,0x3f\nSHR R13,0x5\nADD R13D,EAX\nCMP RCX,0x15180\nJL 0x004022e0\nMOV RDI,R12\nCALL 0x004023e0\nXOR EDI,EDI\nMOV ESI,0x407738\nMOV EDX,0x40774f\nMOV R8D,0x5\nMOV RCX,RAX\nCALL 0x00401aa0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nMOV RDX,R12\nMOV ECX,R15D\nMOV R8D,R13D\nCALL 0x00401a20\nJMP 0x00402309\nXOR EDI,EDI\nMOV ESI,0x407722\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nCALL 0x00401a20\nJMP 0x00402309\nXOR EDI,EDI\nMOV ESI,0x407767\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nMOV EDX,R15D\nMOV ECX,R13D\nCALL 0x00401a20\nMOV RDI,R14\nCALL 0x004023e0\nXOR EDI,EDI\nMOV ESI,0x407777\nMOV EDX,0x407780\nMOV R8D,0x5\nMOV RCX,RAX\nCALL 0x00401aa0\nMOV RCX,RAX\nMOV EDI,0x1\nXOR EAX,EAX\nMOV RSI,RCX\nMOV RDX,R14\nCALL 0x00401a20\nLEA RDI,[RSP + 0x20]\nMOV ESI,0x3\nCALL 0x004017e0\nMOV EBX,EAX\nCMP EBX,-0x1\nJZ 0x004023bb\nTEST EBX,EBX\nJLE 0x004023c5\nXOR EDI,EDI\nMOV ESI,0x40778a\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nMOVSD XMM0,qword ptr [RSP + 0x20]\nMOV EDI,0x1\nMOV AL,0x1\nMOV RSI,RCX\nCALL 0x00401a20\nCMP EBX,0x1\nJZ 0x004023bb\nMOVSD XMM0,qword ptr [RSP + 0x28]\nMOV EDI,0x1\nMOV ESI,0x4077a0\nMOV AL,0x1\nCALL 0x00401a20\nCMP EBX,0x3\nJL 0x004023bb\nMOVSD XMM0,qword ptr [RSP + 0x30]\nMOV EDI,0x1\nMOV ESI,0x4077a0\nMOV AL,0x1\nCALL 0x00401a20\nMOV EDI,0xa\nCALL 0x00401940\nADD RSP,0x2028\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p753
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 28 20 00 00\n48 89 f3\n48 89 fd\nbf e8 76 40 00\nbe 7e 77 40 00\ne8 2a fa ff ff\n49 89 c6\n4d 85 f6\n74 1f\n4c 8d 7c 24 20\nbe 00 20 00 00\n4c 89 ff\n4c 89 f2\ne8 0d f9 ff ff\n4c 39 f8\n74 12\n45 31 ed\neb 48\n45 31 ed\n48 85 ed\n75 4d\ne9 8b 00 00 00\n48 8d 74 24 08\n4c 89 ff\ne8 49 03 00 00\n4c 3b 7c 24 08\n74 da\nf2 0f 10 0d 82 52 00 00\n66 0f 2e c8\nf2 4c 0f 2c e8\n48 c7 c0 ff ff ff ff\n4c 0f 46 e8\n0f 57 c9\n66 0f 2e c1\n4c 0f 42 e8\n4c 89 f7\ne8 03 3e 00 00\n48 85 ed\n74 43\n45 31 f6\n45 31 ff\n0f 1f 84 00 00 00 00 00\n48 ff cd\n0f b7 0b\n83 f9 07\n0f 94 c0\n80 7b 2c 00\n0f 95 c2\n20 c2\n0f b6 c2\n83 f9 02\n75 07\n4c 63 bb 54 01 00 00\n49 01 c6\n48 81 c3 80 01 00 00\n48 85 ed\n75 cd\neb 06\n45 31 ff\n45 31 f6\n31 ff\ne8 3e f8 ff ff\n48 89 44 24 08\n4d 85 ed\n75 39\n4d 85 ff\n75 2c\ne8 ca f5 ff ff\n8b 18\n31 ff\nbe f5 76 40 00\nba 05 00 00 00\ne8 a7 f6 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n89 de\n48 89 ca\ne8 f3 f8 ff ff\n4c 8b 6c 24 08\n4d 29 fd\n48 b9 57 29 51 ce a0 c8 45 18\n4c 89 e8\n48 f7 e9\n49 89 d4\n4c 89 e0\n48 c1 e8 3f\n49 c1 fc 0d\n49 01 c4\n49 69 dc 80 ae fe ff\n4c 89 6c 24 18\n4c 01 eb\n48 b9 05 7c f3 6a e2 59 d1 48\n48 89 d8\n48 f7 e9\n49 89 d7\n4c 89 f8\n48 c1 e8 3f\n49 c1 ff 0a\n49 01 c7\n48 b8 00 00 00 00 10 0e 00 00\n49 0f af c7\n48 c1 f8 20\n48 29 c3\n48 b9 89 88 88 88 88 88 88 88\n48 89 d8\n48 f7 e9\n49 89 d5\n48 8d 7c 24 08\ne8 f8 f4 ff ff\n48 89 c5\n48 85 ed\n74 34\n48 8b 05 e1 90 20 00\n48 89 44 24 10\n31 ff\nbe 0c 77 40 00\nba 05 00 00 00\ne8 e3 f5 ff ff\n31 c9\n45 31 c0\n48 8b 7c 24 10\n48 89 c6\n48 89 ea\ne8 0e 03 00 00\neb 23\n31 ff\nbe 17 77 40 00\nba 05 00 00 00\ne8 bb f5 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 c9 f7 ff ff\n48 8b 4c 24 18\n48 83 f9 ff\n74 59\n49 01 dd\n4c 89 e8\n48 c1 e8 3f\n49 c1 ed 05\n41 01 c5\n48 81 f9 80 51 01 00\n7c 64\n4c 89 e7\ne8 5c 01 00 00\n31 ff\nbe 38 77 40 00\nba 4f 77 40 00\n41 b8 05 00 00 00\n48 89 c1\ne8 02 f8 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\n4c 89 e2\n44 89 f9\n45 89 e8\ne8 67 f7 ff ff\neb 4e\n31 ff\nbe 22 77 40 00\nba 05 00 00 00\ne8 34 f5 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\ne8 42 f7 ff ff\neb 29\n31 ff\nbe 67 77 40 00\nba 05 00 00 00\ne8 0f f5 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\n44 89 fa\n44 89 e9\ne8 17 f7 ff ff\n4c 89 f7\ne8 cf 00 00 00\n31 ff\nbe 77 77 40 00\nba 80 77 40 00\n41 b8 05 00 00 00\n48 89 c1\ne8 75 f7 ff ff\n48 89 c1\nbf 01 00 00 00\n31 c0\n48 89 ce\n4c 89 f2\ne8 e0 f6 ff ff\n48 8d 7c 24 20\nbe 03 00 00 00\ne8 91 f4 ff ff\n89 c3\n83 fb ff\n74 65\n85 db\n7e 6b\n31 ff\nbe 8a 77 40 00\nba 05 00 00 00\ne8 95 f4 ff ff\n48 89 c1\nf2 0f 10 44 24 20\nbf 01 00 00 00\nb0 01\n48 89 ce\ne8 9d f6 ff ff\n83 fb 01\n74 33\nf2 0f 10 44 24 28\nbf 01 00 00 00\nbe a0 77 40 00\nb0 01\ne8 81 f6 ff ff\n83 fb 03\n7c 17\nf2 0f 10 44 24 30\nbf 01 00 00 00\nbe a0 77 40 00\nb0 01\ne8 65 f6 ff ff\nbf 0a 00 00 00\ne8 7b f5 ff ff\n48 81 c4 28 20 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p754
S'.text:0000000000402040\n.text:0000000000402041\n.text:0000000000402043\n.text:0000000000402045\n.text:0000000000402047\n.text:0000000000402049\n.text:000000000040204a\n.text:0000000000402051\n.text:0000000000402054\n.text:0000000000402057\n.text:000000000040205c\n.text:0000000000402061\n.text:0000000000402066\n.text:0000000000402069\n.text:000000000040206c\n.text:000000000040206e\n.text:0000000000402073\n.text:0000000000402078\n.text:000000000040207b\n.text:000000000040207e\n.text:0000000000402083\n.text:0000000000402086\n.text:0000000000402088\n.text:000000000040208b\n.text:000000000040208d\n.text:0000000000402090\n.text:0000000000402093\n.text:0000000000402095\n.text:000000000040209a\n.text:000000000040209f\n.text:00000000004020a2\n.text:00000000004020a7\n.text:00000000004020ac\n.text:00000000004020ae\n.text:00000000004020b6\n.text:00000000004020ba\n.text:00000000004020bf\n.text:00000000004020c6\n.text:00000000004020ca\n.text:00000000004020cd\n.text:00000000004020d1\n.text:00000000004020d5\n.text:00000000004020d8\n.text:00000000004020dd\n.text:00000000004020e0\n.text:00000000004020e2\n.text:00000000004020e5\n.text:00000000004020e8\n.text:00000000004020f0\n.text:00000000004020f3\n.text:00000000004020f6\n.text:00000000004020f9\n.text:00000000004020fc\n.text:0000000000402100\n.text:0000000000402103\n.text:0000000000402105\n.text:0000000000402108\n.text:000000000040210b\n.text:000000000040210d\n.text:0000000000402114\n.text:0000000000402117\n.text:000000000040211e\n.text:0000000000402121\n.text:0000000000402123\n.text:0000000000402125\n.text:0000000000402128\n.text:000000000040212b\n.text:000000000040212d\n.text:0000000000402132\n.text:0000000000402137\n.text:000000000040213a\n.text:000000000040213c\n.text:000000000040213f\n.text:0000000000402141\n.text:0000000000402146\n.text:0000000000402148\n.text:000000000040214a\n.text:000000000040214f\n.text:0000000000402154\n.text:0000000000402159\n.text:000000000040215c\n.text:0000000000402161\n.text:0000000000402163\n.text:0000000000402165\n.text:0000000000402168\n.text:000000000040216d\n.text:0000000000402172\n.text:0000000000402175\n.text:000000000040217f\n.text:0000000000402182\n.text:0000000000402185\n.text:0000000000402188\n.text:000000000040218b\n.text:000000000040218f\n.text:0000000000402193\n.text:0000000000402196\n.text:000000000040219d\n.text:00000000004021a2\n.text:00000000004021a5\n.text:00000000004021af\n.text:00000000004021b2\n.text:00000000004021b5\n.text:00000000004021b8\n.text:00000000004021bb\n.text:00000000004021bf\n.text:00000000004021c3\n.text:00000000004021c6\n.text:00000000004021d0\n.text:00000000004021d4\n.text:00000000004021d8\n.text:00000000004021db\n.text:00000000004021e5\n.text:00000000004021e8\n.text:00000000004021eb\n.text:00000000004021ee\n.text:00000000004021f3\n.text:00000000004021f8\n.text:00000000004021fb\n.text:00000000004021fe\n.text:0000000000402200\n.text:0000000000402207\n.text:000000000040220c\n.text:000000000040220e\n.text:0000000000402213\n.text:0000000000402218\n.text:000000000040221d\n.text:000000000040221f\n.text:0000000000402222\n.text:0000000000402227\n.text:000000000040222a\n.text:000000000040222d\n.text:0000000000402232\n.text:0000000000402234\n.text:0000000000402236\n.text:000000000040223b\n.text:0000000000402240\n.text:0000000000402245\n.text:0000000000402248\n.text:000000000040224d\n.text:000000000040224f\n.text:0000000000402252\n.text:0000000000402257\n.text:000000000040225c\n.text:0000000000402260\n.text:0000000000402262\n.text:0000000000402265\n.text:0000000000402268\n.text:000000000040226c\n.text:0000000000402270\n.text:0000000000402273\n.text:000000000040227a\n.text:000000000040227c\n.text:000000000040227f\n.text:0000000000402284\n.text:0000000000402286\n.text:000000000040228b\n.text:0000000000402290\n.text:0000000000402296\n.text:0000000000402299\n.text:000000000040229e\n.text:00000000004022a1\n.text:00000000004022a6\n.text:00000000004022a8\n.text:00000000004022ab\n.text:00000000004022ae\n.text:00000000004022b1\n.text:00000000004022b4\n.text:00000000004022b9\n.text:00000000004022bb\n.text:00000000004022bd\n.text:00000000004022c2\n.text:00000000004022c7\n.text:00000000004022cc\n.text:00000000004022cf\n.text:00000000004022d4\n.text:00000000004022d6\n.text:00000000004022d9\n.text:00000000004022de\n.text:00000000004022e0\n.text:00000000004022e2\n.text:00000000004022e7\n.text:00000000004022ec\n.text:00000000004022f1\n.text:00000000004022f4\n.text:00000000004022f9\n.text:00000000004022fb\n.text:00000000004022fe\n.text:0000000000402301\n.text:0000000000402304\n.text:0000000000402309\n.text:000000000040230c\n.text:0000000000402311\n.text:0000000000402313\n.text:0000000000402318\n.text:000000000040231d\n.text:0000000000402323\n.text:0000000000402326\n.text:000000000040232b\n.text:000000000040232e\n.text:0000000000402333\n.text:0000000000402335\n.text:0000000000402338\n.text:000000000040233b\n.text:0000000000402340\n.text:0000000000402345\n.text:000000000040234a\n.text:000000000040234f\n.text:0000000000402351\n.text:0000000000402354\n.text:0000000000402356\n.text:0000000000402358\n.text:000000000040235a\n.text:000000000040235c\n.text:0000000000402361\n.text:0000000000402366\n.text:000000000040236b\n.text:000000000040236e\n.text:0000000000402374\n.text:0000000000402379\n.text:000000000040237b\n.text:000000000040237e\n.text:0000000000402383\n.text:0000000000402386\n.text:0000000000402388\n.text:000000000040238e\n.text:0000000000402393\n.text:0000000000402398\n.text:000000000040239a\n.text:000000000040239f\n.text:00000000004023a2\n.text:00000000004023a4\n.text:00000000004023aa\n.text:00000000004023af\n.text:00000000004023b4\n.text:00000000004023b6\n.text:00000000004023bb\n.text:00000000004023c0\n.text:00000000004023c5\n.text:00000000004023cc\n.text:00000000004023cd\n.text:00000000004023cf\n.text:00000000004023d1\n.text:00000000004023d3\n.text:00000000004023d5\n.text:00000000004023d6\n'
p755
tp756
sS'xmemdup'
p757
(S'\n__stdcall xmemdup(void * p, size_t s)\n'
p758
V\u000avoid * xmemdup(void *p,size_t s)\u000a\u000a{\u000a  void *__dest;\u000a  \u000a  __dest = xmalloc(s);\u000a  memcpy(__dest,p,s);\u000a  return __dest;\u000a}\u000a\u000a
p759
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,RSI\nMOV R14,RDI\nMOV RDI,R15\nCALL 0x00405cd0\nMOV RBX,RAX\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,R15\nCALL 0x00401930\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p760
S'41 57\n41 56\n53\n49 89 f7\n49 89 fe\n4c 89 ff\ne8 ad fe ff ff\n48 89 c3\n48 89 df\n4c 89 f6\n4c 89 fa\ne8 fc ba ff ff\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p761
S'.text:0000000000405e10\n.text:0000000000405e12\n.text:0000000000405e14\n.text:0000000000405e15\n.text:0000000000405e18\n.text:0000000000405e1b\n.text:0000000000405e1e\n.text:0000000000405e23\n.text:0000000000405e26\n.text:0000000000405e29\n.text:0000000000405e2c\n.text:0000000000405e2f\n.text:0000000000405e34\n.text:0000000000405e37\n.text:0000000000405e38\n.text:0000000000405e3a\n.text:0000000000405e3c\n'
p762
tp763
sS'change_env'
p764
(S'\n__stdcall change_env(timezone_t tz)\n'
p765
V\u000a_Bool change_env(timezone_t tz)\u000a\u000a{\u000a  int iVar1;\u000a  char *tz_00;\u000a  \u000a  tz_00 = tz->abbrs;\u000a  if (tz->tz_is_set == 0) {\u000a    tz_00 = (char *)0x0;\u000a  }\u000a  iVar1 = setenv_TZ(tz_00);\u000a  if (iVar1 == 0) {\u000a    tzset();\u000a  }\u000a  return (_Bool)(iVar1 == 0);\u000a}\u000a\u000a
p766
S'PUSH RBX\nXOR EBX,EBX\nCMP byte ptr [RDI + 0x8],0x0\nLEA RDI,[RDI + 0x9]\nCMOVZ RDI,RBX\nCALL 0x004065f0\nTEST EAX,EAX\nJNZ 0x004065df\nCALL 0x00401950\nMOV BL,0x1\nMOV EAX,EBX\nPOP RBX\nRET\n'
p767
S'53\n31 db\n80 7f 08 00\n48 8d 7f 09\n48 0f 44 fb\ne8 1c 00 00 00\n85 c0\n75 07\ne8 73 b3 ff ff\nb3 01\n89 d8\n5b\nc3\n'
p768
S'.text:00000000004065c0\n.text:00000000004065c1\n.text:00000000004065c3\n.text:00000000004065c7\n.text:00000000004065cb\n.text:00000000004065cf\n.text:00000000004065d4\n.text:00000000004065d6\n.text:00000000004065d8\n.text:00000000004065dd\n.text:00000000004065df\n.text:00000000004065e1\n.text:00000000004065e2\n'
p769
tp770
sS'time_t_avg'
p771
(S'\n__stdcall time_t_avg(time_t a, time_t b)\n'
p772
V\u000atime_t time_t_avg(time_t a,time_t b)\u000a\u000a{\u000a  return (ulong)((uint)a & (uint)b & 1) + (b >> 1) + (a >> 1);\u000a}\u000a\u000a
p773
S'MOV RAX,RDI\nSAR RAX,1\nAND EDI,ESI\nSAR RSI,1\nLEA RAX,[RSI + RAX*0x1]\nAND EDI,0x1\nADD RDI,RAX\nMOV RAX,RDI\nRET\n'
p774
S'48 89 f8\n48 d1 f8\n21 f7\n48 d1 fe\n48 8d 04 06\n83 e7 01\n48 01 c7\n48 89 f8\nc3\n'
p775
S'.text:0000000000407250\n.text:0000000000407253\n.text:0000000000407256\n.text:0000000000407258\n.text:000000000040725b\n.text:000000000040725f\n.text:0000000000407262\n.text:0000000000407265\n.text:0000000000407268\n'
p776
tp777
sS'get_quoting_style'
p778
(S'\n__stdcall get_quoting_style(quoting_options * o)\n'
p779
V\u000aquoting_style get_quoting_style(quoting_options *o)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  return pqVar1->style;\u000a}\u000a\u000a
p780
S'TEST RDI,RDI\nMOV EAX,0x60b350\nCMOVNZ RAX,RDI\nMOV EAX,dword ptr [RAX]\nRET\n'
p781
S'48 85 ff\nb8 50 b3 60 00\n48 0f 45 c7\n8b 00\nc3\n'
p782
S'.text:0000000000403fa0\n.text:0000000000403fa3\n.text:0000000000403fa8\n.text:0000000000403fac\n.text:0000000000403fae\n'
p783
tp784
sS'exit'
p785
(S'\n__stdcall exit(int __status)\n'
p786
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_0060b228)();\u000a  return;\u000a}\u000a\u000a
p787
S'JMP qword ptr [0x0060b228]\n'
p788
S'ff 25 52 97 20 00\n'
p789
S'.plt:0000000000401ad0\n'
p790
tp791
sS'ferror_unlocked'
p792
(S'\n__stdcall ferror_unlocked(FILE * __stream)\n'
p793
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint ferror_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_ferror_unlocked_0060b138)();\u000a  return iVar1;\u000a}\u000a\u000a
p794
S'JMP qword ptr [0x0060b138]\n'
p795
S'ff 25 42 98 20 00\n'
p796
S'.plt:00000000004018f0\n'
p797
tp798
sS'fwrite_lowcase'
p799
(S'\n__stdcall fwrite_lowcase(FILE * fp, char * src, size_t len)\n'
p800
V\u000avoid fwrite_lowcase(FILE *fp,char *src,size_t len)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  if (len != 0) {\u000a    do {\u000a      pp_Var1 = __ctype_tolower_loc();\u000a      fputc((*pp_Var1)[(ulong)(byte)*src],(FILE *)fp);\u000a      src = (char *)((byte *)src + 1);\u000a      len = len - 1;\u000a    } while (len != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p801
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV R15,RDI\nTEST R14,R14\nJZ 0x00403d1e\nNOP dword ptr CS:[RAX + RAX*0x1]\nCALL 0x00401b20\nMOV RAX,qword ptr [RAX]\nMOVZX ECX,byte ptr [RBX]\nMOV EDI,dword ptr [RAX + RCX*0x4]\nMOV RSI,R15\nCALL 0x004018c0\nINC RBX\nDEC R14\nJNZ 0x00403d00\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p802
S'41 57\n41 56\n53\n49 89 d6\n48 89 f3\n49 89 ff\n4d 85 f6\n74 2b\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\ne8 1b de ff ff\n48 8b 00\n0f b6 0b\n8b 3c 88\n4c 89 fe\ne8 aa db ff ff\n48 ff c3\n49 ff ce\n75 e2\n5b\n41 5e\n41 5f\nc3\n'
p803
S'.text:0000000000403ce0\n.text:0000000000403ce2\n.text:0000000000403ce4\n.text:0000000000403ce5\n.text:0000000000403ce8\n.text:0000000000403ceb\n.text:0000000000403cee\n.text:0000000000403cf1\n.text:0000000000403cf3\n.text:0000000000403d00\n.text:0000000000403d05\n.text:0000000000403d08\n.text:0000000000403d0b\n.text:0000000000403d0e\n.text:0000000000403d11\n.text:0000000000403d16\n.text:0000000000403d19\n.text:0000000000403d1c\n.text:0000000000403d1e\n.text:0000000000403d1f\n.text:0000000000403d21\n.text:0000000000403d23\n'
p804
tp805
sS'locale_charset'
p806
(S'\n__stdcall locale_charset()\n'
p807
V\u000achar * locale_charset(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  char cVar2;\u000a  int iVar3;\u000a  char *__s2;\u000a  size_t sVar4;\u000a  char *__s1;\u000a  \u000a  __s2 = nl_langinfo(0xe);\u000a  __s1 = "";\u000a  if (__s2 != (char *)0x0) {\u000a    __s1 = __s2;\u000a  }\u000a  __s2 = get_charset_aliases();\u000a  cVar2 = *__s2;\u000a  do {\u000a    if (cVar2 == 0) {\u000aLAB_0040686d:\u000a      __s2 = "ASCII";\u000a      if (*__s1 != 0) {\u000a        __s2 = __s1;\u000a      }\u000a      return __s2;\u000a    }\u000a    iVar3 = strcmp(__s1,__s2);\u000a    if ((iVar3 == 0) || ((cVar2 == '*' && (__s2[1] == 0)))) {\u000a      sVar4 = strlen(__s2);\u000a      __s1 = __s2 + sVar4 + 1;\u000a      goto LAB_0040686d;\u000a    }\u000a    sVar4 = strlen(__s2);\u000a    pcVar1 = __s2 + sVar4;\u000a    sVar4 = strlen(__s2 + sVar4 + 1);\u000a    __s2 = pcVar1 + sVar4 + 2;\u000a    cVar2 = pcVar1[sVar4 + 2];\u000a  } while( true );\u000a}\u000a\u000a
p808
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV EDI,0xe\nCALL 0x004019c0\nTEST RAX,RAX\nMOV R14D,0x4074a5\nCMOVNZ R14,RAX\nCALL 0x00406880\nMOV RBX,RAX\nMOV BPL,byte ptr [RBX]\nTEST BPL,BPL\nJNZ 0x00406845\nJMP 0x0040686d\nMOV RDI,RBX\nCALL 0x00401820\nLEA RBP,[RBX + RAX*0x1]\nLEA RDI,[RBX + RAX*0x1 + 0x1]\nCALL 0x00401820\nLEA RBX,[RAX + RBP*0x1 + 0x2]\nMOVZX EBP,byte ptr [RAX + RBP*0x1 + 0x2]\nTEST BPL,BPL\nJZ 0x0040686d\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00401910\nTEST EAX,EAX\nJZ 0x00406860\nCMP BPL,0x2a\nJNZ 0x00406820\nCMP byte ptr [RBX + 0x1],0x0\nJNZ 0x00406820\nMOV RDI,RBX\nCALL 0x00401820\nLEA R14,[RBX + RAX*0x1 + 0x1]\nCMP byte ptr [R14],0x0\nMOV EAX,0x408a00\nCMOVNZ RAX,R14\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p809
S'55\n41 56\n53\nbf 0e 00 00 00\ne8 c2 b1 ff ff\n48 85 c0\n41 be a5 74 40 00\n4c 0f 45 f0\ne8 70 00 00 00\n48 89 c3\n40 8a 2b\n40 84 ed\n75 2a\neb 50\n48 89 df\ne8 f8 af ff ff\n48 8d 2c 03\n48 8d 7c 03 01\ne8 ea af ff ff\n48 8d 5c 28 02\n0f b6 6c 28 02\n40 84 ed\n74 28\n4c 89 f7\n48 89 de\ne8 c0 b0 ff ff\n85 c0\n74 0c\n40 80 fd 2a\n75 c6\n80 7b 01 00\n75 c0\n48 89 df\ne8 b8 af ff ff\n4c 8d 74 03 01\n41 80 3e 00\nb8 00 8a 40 00\n49 0f 45 c6\n5b\n41 5e\n5d\nc3\n'
p810
S'.text:00000000004067f0\n.text:00000000004067f1\n.text:00000000004067f3\n.text:00000000004067f4\n.text:00000000004067f9\n.text:00000000004067fe\n.text:0000000000406801\n.text:0000000000406807\n.text:000000000040680b\n.text:0000000000406810\n.text:0000000000406813\n.text:0000000000406816\n.text:0000000000406819\n.text:000000000040681b\n.text:0000000000406820\n.text:0000000000406823\n.text:0000000000406828\n.text:000000000040682c\n.text:0000000000406831\n.text:0000000000406836\n.text:000000000040683b\n.text:0000000000406840\n.text:0000000000406843\n.text:0000000000406845\n.text:0000000000406848\n.text:000000000040684b\n.text:0000000000406850\n.text:0000000000406852\n.text:0000000000406854\n.text:0000000000406858\n.text:000000000040685a\n.text:000000000040685e\n.text:0000000000406860\n.text:0000000000406863\n.text:0000000000406868\n.text:000000000040686d\n.text:0000000000406871\n.text:0000000000406876\n.text:000000000040687a\n.text:000000000040687b\n.text:000000000040687d\n.text:000000000040687e\n'
p811
tp812
sS'set_program_name'
p813
(S'\n__stdcall set_program_name(char * argv0)\n'
p814
V\u000avoid set_program_name(char *argv0)\u000a\u000a{\u000a  int iVar1;\u000a  char *pcVar2;\u000a  char *__s1;\u000a  \u000a  if (argv0 == (char *)0x0) {\u000a    fwrite("A NULL argv[0] was passed through an exec system call.\u005cn",0x37,1,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  pcVar2 = strrchr(argv0,0x2f);\u000a  __s1 = pcVar2 + 1;\u000a  if (pcVar2 == (char *)0x0) {\u000a    __s1 = argv0;\u000a  }\u000a  if (((6 < (long)(__s1 + -(long)argv0)) && (iVar1 = strncmp(__s1 + -7,"/.libs/",7), iVar1 == 0)) &&\u000a     (iVar1 = strncmp(__s1,"lt-",3), argv0 = __s1, iVar1 == 0)) {\u000a    argv0 = __s1 + 3;\u000a    program_invocation_short_name = argv0;\u000a  }\u000a  program_invocation_name = argv0;\u000a  program_name = argv0;\u000a  return;\u000a}\u000a\u000a
p815
S'PUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00403f31\nMOV ESI,0x2f\nMOV RDI,RBX\nCALL 0x00401860\nTEST RAX,RAX\nLEA R14,[RAX + 0x1]\nCMOVZ R14,RBX\nMOV RAX,R14\nSUB RAX,RBX\nCMP RAX,0x7\nJL 0x00403f1b\nLEA RDI,[R14 + -0x7]\nMOV ESI,0x407d08\nMOV EDX,0x7\nCALL 0x00401730\nTEST EAX,EAX\nJNZ 0x00403f1b\nMOV ESI,0x407d10\nMOV EDX,0x3\nMOV RDI,R14\nCALL 0x00401730\nTEST EAX,EAX\nJNZ 0x00403f18\nADD R14,0x3\nMOV qword ptr [0x0060b2e0],R14\nMOV RBX,R14\nMOV qword ptr [0x0060b348],RBX\nMOV qword ptr [0x0060b2f8],RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nRET\nMOV RCX,qword ptr [0x0060b320]\nMOV EDI,0x407cd0\nMOV ESI,0x37\nMOV EDX,0x1\nCALL 0x00401ae0\nCALL 0x00401700\n'
p816
S'41 56\n53\n50\n48 89 fb\n48 85 db\n74 75\nbe 2f 00 00 00\n48 89 df\ne8 97 d9 ff ff\n48 85 c0\n4c 8d 70 01\n4c 0f 44 f3\n4c 89 f0\n48 29 d8\n48 83 f8 07\n7c 3b\n49 8d 7e f9\nbe 08 7d 40 00\nba 07 00 00 00\ne8 3d d8 ff ff\n85 c0\n75 24\nbe 10 7d 40 00\nba 03 00 00 00\n4c 89 f7\ne8 27 d8 ff ff\n85 c0\n75 0b\n49 83 c6 03\n4c 89 35 c8 73 20 00\n4c 89 f3\n48 89 1d 26 74 20 00\n48 89 1d cf 73 20 00\n48 83 c4 08\n5b\n41 5e\nc3\n48 8b 0d e8 73 20 00\nbf d0 7c 40 00\nbe 37 00 00 00\nba 01 00 00 00\ne8 94 db ff ff\ne8 af d7 ff ff\n'
p817
S'.text:0000000000403eb0\n.text:0000000000403eb2\n.text:0000000000403eb3\n.text:0000000000403eb4\n.text:0000000000403eb7\n.text:0000000000403eba\n.text:0000000000403ebc\n.text:0000000000403ec1\n.text:0000000000403ec4\n.text:0000000000403ec9\n.text:0000000000403ecc\n.text:0000000000403ed0\n.text:0000000000403ed4\n.text:0000000000403ed7\n.text:0000000000403eda\n.text:0000000000403ede\n.text:0000000000403ee0\n.text:0000000000403ee4\n.text:0000000000403ee9\n.text:0000000000403eee\n.text:0000000000403ef3\n.text:0000000000403ef5\n.text:0000000000403ef7\n.text:0000000000403efc\n.text:0000000000403f01\n.text:0000000000403f04\n.text:0000000000403f09\n.text:0000000000403f0b\n.text:0000000000403f0d\n.text:0000000000403f11\n.text:0000000000403f18\n.text:0000000000403f1b\n.text:0000000000403f22\n.text:0000000000403f29\n.text:0000000000403f2d\n.text:0000000000403f2e\n.text:0000000000403f30\n.text:0000000000403f31\n.text:0000000000403f38\n.text:0000000000403f3d\n.text:0000000000403f42\n.text:0000000000403f47\n.text:0000000000403f4c\n'
p818
tp819
sS'quotearg_buffer'
p820
(S'\n__stdcall quotearg_buffer(char * buffer, size_t buffersize, char * arg, size_t argsize, quoting_options * o)\n'
p821
V\u000asize_t quotearg_buffer(char *buffer,size_t buffersize,char *arg,size_t argsize,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  quoting_options *pqVar4;\u000a  int e;\u000a  \u000a  pqVar4 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar4 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    (buffer,buffersize,arg,argsize,(char *)(ulong)pqVar4->style,\u000a                     (char *)(ulong)(uint)pqVar4->flags);\u000a  *piVar2 = iVar1;\u000a  return sVar3;\u000a}\u000a\u000a
p822
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RCX\nMOV R15,RDX\nMOV R12,RSI\nMOV R13,RDI\nTEST R8,R8\nMOV EBP,0x60b350\nCMOVNZ RBP,R8\nCALL 0x00401710\nMOV RBX,RAX\nMOV EAX,dword ptr [RBX]\nMOV dword ptr [RSP + 0x4],EAX\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nSUB RSP,0x8\nMOV RDI,R13\nMOV RSI,R12\nMOV RDX,R15\nMOV RCX,R14\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nLEA RAX,[RBP + 0x8]\nPUSH RAX\nCALL 0x004040d0\nADD RSP,0x20\nMOV ECX,dword ptr [RSP + 0x4]\nMOV dword ptr [RBX],ECX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p823
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 ce\n49 89 d7\n49 89 f4\n49 89 fd\n4d 85 c0\nbd 50 b3 60 00\n49 0f 45 e8\ne8 98 d6 ff ff\n48 89 c3\n8b 03\n89 44 24 04\n44 8b 45 00\n44 8b 4d 04\n48 83 ec 08\n4c 89 ef\n4c 89 e6\n4c 89 fa\n4c 89 f1\nff 75 30\nff 75 28\n48 8d 45 08\n50\ne8 27 00 00 00\n48 83 c4 20\n8b 4c 24 04\n89 0b\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p824
S'.text:0000000000404050\n.text:0000000000404051\n.text:0000000000404053\n.text:0000000000404055\n.text:0000000000404057\n.text:0000000000404059\n.text:000000000040405a\n.text:000000000040405b\n.text:000000000040405e\n.text:0000000000404061\n.text:0000000000404064\n.text:0000000000404067\n.text:000000000040406a\n.text:000000000040406f\n.text:0000000000404073\n.text:0000000000404078\n.text:000000000040407b\n.text:000000000040407d\n.text:0000000000404081\n.text:0000000000404085\n.text:0000000000404089\n.text:000000000040408d\n.text:0000000000404090\n.text:0000000000404093\n.text:0000000000404096\n.text:0000000000404099\n.text:000000000040409c\n.text:000000000040409f\n.text:00000000004040a3\n.text:00000000004040a4\n.text:00000000004040a9\n.text:00000000004040ad\n.text:00000000004040b1\n.text:00000000004040b3\n.text:00000000004040b7\n.text:00000000004040b8\n.text:00000000004040ba\n.text:00000000004040bc\n.text:00000000004040be\n.text:00000000004040c0\n.text:00000000004040c1\n'
p825
tp826
sS'quotearg_colon'
p827
(S'\n__stdcall quotearg_colon(char * arg)\n'
p828
V\u000achar * quotearg_colon(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char(arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p829
S'MOV ESI,0x3a\nJMP 0x00405230\n'
p830
S'be 3a 00 00 00\neb e9\n'
p831
S'.text:0000000000405240\n.text:0000000000405245\n'
p832
tp833
sS'ydhms_diff'
p834
(S'\n__stdcall ydhms_diff(long_int year1, long_int yday1, int yday0, int hour0, int min0, int sec0)\n'
p835
V\u000atime_t ydhms_diff(long_int year1,long_int yday1,int yday0,int hour0,int min0,int sec0)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  int iVar4;\u000a  int in_stack_00000008;\u000a  int in_stack_00000010;\u000a  int in_stack_00000018;\u000a  int in_stack_00000020;\u000a  \u000a  iVar3 = ((int)((ulong)year1 >> 2) + 0x1db) - (uint)((year1 & 3U) == 0);\u000a  iVar1 = ((sec0 >> 2) + 0x1db) - (uint)((sec0 & 3U) == 0);\u000a  iVar4 = iVar3 / 0x19 + (iVar3 >> 0x1f) + (uint)((ulong)((long)iVar3 * 0x51eb851f) >> 0x3f);\u000a  iVar4 = iVar4 - ((uint)(iVar3 + iVar4 * -0x19) >> 0x1f);\u000a  iVar2 = iVar1 / 0x19 + (iVar1 >> 0x1f) + (uint)((ulong)((long)iVar1 * 0x51eb851f) >> 0x3f);\u000a  iVar2 = iVar2 - ((uint)(iVar1 + iVar2 * -0x19) >> 0x1f);\u000a  return ((long)min0 - (long)in_stack_00000020) +\u000a         (((long)hour0 - (long)in_stack_00000018) +\u000a         (((long)yday0 - (long)in_stack_00000010) +\u000a         ((yday1 - (long)in_stack_00000008) + (year1 - (long)sec0) * 0x16d +\u000a         (long)((((iVar3 - iVar4) - iVar1) + (iVar4 >> 2) + iVar2) - (iVar2 >> 2))) * 0x18) * 0x3c)\u000a         * 0x3c;\u000a}\u000a\u000a
p836
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R10,RDI\nSHR R10,0x2\nMOV EAX,EDI\nAND EAX,0x3\nCMP RAX,0x1\nSBB RAX,RAX\nLEA R10,[0x1db + R10 + RAX*0x1]\nMOV R11D,R9D\nMOVSXD R14,R9D\nMOV EAX,R9D\nSAR EAX,0x2\nAND R11D,0x3\nCMP R11D,0x1\nSBB EBX,EBX\nLEA R9D,[0x1db + RAX + RBX*0x1]\nMOVSXD R11,R10D\nIMUL R15,R11,0x51eb851f\nMOV R10,R15\nSHR R10,0x3f\nSAR R15,0x23\nADD R15D,R10D\nLEA EBX,[R15 + R15*0x4]\nLEA R10D,[RBX + RBX*0x4]\nMOV EBX,R11D\nSUB EBX,R10D\nSHR EBX,0x1f\nSUB R15D,EBX\nMOVSXD R9,R9D\nIMUL RBX,R9,0x51eb851f\nMOV R10,RBX\nSHR R10,0x3f\nSAR RBX,0x23\nADD EBX,R10D\nLEA EAX,[RBX + RBX*0x4]\nLEA R10D,[RAX + RAX*0x4]\nSUB R11D,R15D\nSUB R11D,R9D\nMOV EAX,R9D\nSUB EAX,R10D\nSHR EAX,0x1f\nSUB EBX,EAX\nSAR R15D,0x2\nADD R11D,R15D\nADD R11D,EBX\nSAR EBX,0x2\nSUB R11D,EBX\nSUB RDI,R14\nIMUL RAX,RDI,0x16d\nMOVSXD RDI,dword ptr [RSP + 0x20]\nMOVSXD RBX,R11D\nSUB RSI,RDI\nADD RSI,RAX\nADD RSI,RBX\nLEA RAX,[RSI + RSI*0x2]\nMOVSXD RDX,EDX\nMOVSXD RSI,dword ptr [RSP + 0x28]\nSUB RDX,RSI\nLEA RAX,[RDX + RAX*0x8]\nIMUL RAX,RAX,0x3c\nMOVSXD RCX,ECX\nMOVSXD RDX,dword ptr [RSP + 0x30]\nSUB RCX,RDX\nADD RCX,RAX\nIMUL RCX,RCX,0x3c\nMOVSXD RAX,R8D\nMOVSXD RDX,dword ptr [RSP + 0x38]\nSUB RAX,RDX\nADD RAX,RCX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p837
S'41 57\n41 56\n53\n49 89 fa\n49 c1 ea 02\n89 f8\n83 e0 03\n48 83 f8 01\n48 19 c0\n4d 8d 94 02 db 01 00 00\n45 89 cb\n4d 63 f1\n44 89 c8\nc1 f8 02\n41 83 e3 03\n41 83 fb 01\n19 db\n44 8d 8c 18 db 01 00 00\n4d 63 da\n4d 69 fb 1f 85 eb 51\n4d 89 fa\n49 c1 ea 3f\n49 c1 ff 23\n45 01 d7\n43 8d 1c bf\n44 8d 14 9b\n44 89 db\n44 29 d3\nc1 eb 1f\n41 29 df\n4d 63 c9\n49 69 d9 1f 85 eb 51\n49 89 da\n49 c1 ea 3f\n48 c1 fb 23\n44 01 d3\n8d 04 9b\n44 8d 14 80\n45 29 fb\n45 29 cb\n44 89 c8\n44 29 d0\nc1 e8 1f\n29 c3\n41 c1 ff 02\n45 01 fb\n41 01 db\nc1 fb 02\n41 29 db\n4c 29 f7\n48 69 c7 6d 01 00 00\n48 63 7c 24 20\n49 63 db\n48 29 fe\n48 01 c6\n48 01 de\n48 8d 04 76\n48 63 d2\n48 63 74 24 28\n48 29 f2\n48 8d 04 c2\n48 6b c0 3c\n48 63 c9\n48 63 54 24 30\n48 29 d1\n48 01 c1\n48 6b c9 3c\n49 63 c0\n48 63 54 24 38\n48 29 d0\n48 01 c8\n5b\n41 5e\n41 5f\nc3\n'
p838
S'.text:0000000000406f60\n.text:0000000000406f62\n.text:0000000000406f64\n.text:0000000000406f65\n.text:0000000000406f68\n.text:0000000000406f6c\n.text:0000000000406f6e\n.text:0000000000406f71\n.text:0000000000406f75\n.text:0000000000406f78\n.text:0000000000406f80\n.text:0000000000406f83\n.text:0000000000406f86\n.text:0000000000406f89\n.text:0000000000406f8c\n.text:0000000000406f90\n.text:0000000000406f94\n.text:0000000000406f96\n.text:0000000000406f9e\n.text:0000000000406fa1\n.text:0000000000406fa8\n.text:0000000000406fab\n.text:0000000000406faf\n.text:0000000000406fb3\n.text:0000000000406fb6\n.text:0000000000406fba\n.text:0000000000406fbe\n.text:0000000000406fc1\n.text:0000000000406fc4\n.text:0000000000406fc7\n.text:0000000000406fca\n.text:0000000000406fcd\n.text:0000000000406fd4\n.text:0000000000406fd7\n.text:0000000000406fdb\n.text:0000000000406fdf\n.text:0000000000406fe2\n.text:0000000000406fe5\n.text:0000000000406fe9\n.text:0000000000406fec\n.text:0000000000406fef\n.text:0000000000406ff2\n.text:0000000000406ff5\n.text:0000000000406ff8\n.text:0000000000406ffa\n.text:0000000000406ffe\n.text:0000000000407001\n.text:0000000000407004\n.text:0000000000407007\n.text:000000000040700a\n.text:000000000040700d\n.text:0000000000407014\n.text:0000000000407019\n.text:000000000040701c\n.text:000000000040701f\n.text:0000000000407022\n.text:0000000000407025\n.text:0000000000407029\n.text:000000000040702c\n.text:0000000000407031\n.text:0000000000407034\n.text:0000000000407038\n.text:000000000040703c\n.text:000000000040703f\n.text:0000000000407044\n.text:0000000000407047\n.text:000000000040704a\n.text:000000000040704e\n.text:0000000000407051\n.text:0000000000407056\n.text:0000000000407059\n.text:000000000040705c\n.text:000000000040705d\n.text:000000000040705f\n.text:0000000000407061\n'
p839
tp840
sS'rpl_fflush'
p841
(S'\n__stdcall rpl_fflush(FILE * stream)\n'
p842
V\u000aint rpl_fflush(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  if (stream != (FILE *)0x0) {\u000a    iVar1 = __freading(stream);\u000a    if (iVar1 != 0) {\u000a      clear_ungetc_buffer_preserving_position(stream);\u000a    }\u000a  }\u000a  iVar1 = (*(code *)PTR_fflush_0060b198)(stream);\u000a  return iVar1;\u000a}\u000a\u000a
p843
S'PUSH RBX\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x00405f7d\nMOV RDI,RBX\nCALL 0x004019e0\nTEST EAX,EAX\nJZ 0x00405f7d\nMOV RDI,RBX\nCALL 0x00405f90\nMOV RDI,RBX\nPOP RBX\nJMP 0x004019b0\n'
p844
S'53\n48 89 fb\n48 85 db\n74 14\n48 89 df\ne8 6f ba ff ff\n85 c0\n74 08\n48 89 df\ne8 13 00 00 00\n48 89 df\n5b\ne9 2a ba ff ff\n'
p845
S'.text:0000000000405f60\n.text:0000000000405f61\n.text:0000000000405f64\n.text:0000000000405f67\n.text:0000000000405f69\n.text:0000000000405f6c\n.text:0000000000405f71\n.text:0000000000405f73\n.text:0000000000405f75\n.text:0000000000405f78\n.text:0000000000405f7d\n.text:0000000000405f80\n.text:0000000000405f81\n'
p846
tp847
sS'save_abbr'
p848
(S'\n__stdcall save_abbr(timezone_t tz, tm * tm)\n'
p849
V\u000a_Bool save_abbr(timezone_t tz,tm *tm)\u000a\u000a{\u000a  char *pcVar1;\u000a  tm *__s2;\u000a  tm_zone *ptVar2;\u000a  int iVar3;\u000a  size_t sVar4;\u000a  timezone_t ptVar5;\u000a  char *pcVar6;\u000a  char *__s1;\u000a  \u000a  __s2 = (tm *)tm->tm_zone;\u000a  if ((__s2 != (tm *)0x0) && ((__s2 < tm || (tm + 1 <= __s2)))) {\u000a    if (*(char *)&__s2->tm_sec != 0) {\u000a      pcVar6 = tz->abbrs;\u000a      do {\u000a        __s1 = pcVar6;\u000a        do {\u000a          iVar3 = strcmp(__s1,(char *)__s2);\u000a          if (iVar3 == 0) goto LAB_00406441;\u000a          if ((*__s1 == 0) && ((__s1 != tz->abbrs || (tz->tz_is_set == 0)))) {\u000a            sVar4 = strlen((char *)__s2);\u000a            if (sVar4 + 1 < (ulong)((long)tz + (0x80 - (long)__s1))) {\u000a              extend_abbrs(__s1,(char *)__s2,sVar4 + 1);\u000a            }\u000a            else {\u000a              ptVar5 = tzalloc((char *)__s2);\u000a              *(timezone_t *)&tz->next = ptVar5;\u000a              if (ptVar5 == (timezone_t)0x0) {\u000a                return false;\u000a              }\u000a              ptVar5->tz_is_set = 0;\u000a              __s1 = ptVar5->abbrs;\u000a            }\u000a            goto LAB_00406441;\u000a          }\u000a          sVar4 = strlen(__s1);\u000a          pcVar6 = __s1 + sVar4 + 1;\u000a          pcVar1 = __s1 + sVar4 + 1;\u000a          __s1 = pcVar6;\u000a        } while (*pcVar1 != 0);\u000a        ptVar2 = tz->next;\u000a        if (ptVar2 != (tm_zone *)0x0) {\u000a          pcVar6 = ptVar2->abbrs;\u000a          tz = (timezone_t)ptVar2;\u000a        }\u000a      } while( true );\u000a    }\u000a    __s1 = "";\u000aLAB_00406441:\u000a    tm->tm_zone = __s1;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p850
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R15,RSI\nMOV R12,RDI\nMOV RBX,qword ptr [R15 + 0x30]\nMOV R14B,0x1\nTEST RBX,RBX\nJZ 0x00406445\nCMP R15,RBX\nJA 0x00406383\nLEA RAX,[R15 + 0x38]\nCMP RBX,RAX\nJC 0x00406445\nCMP byte ptr [RBX],0x0\nJZ 0x0040638f\nLEA RBP,[R12 + 0x9]\nJMP 0x004063ac\nMOV EBP,0x4074a5\nJMP 0x00406441\nMOV RAX,qword ptr [R12]\nLEA RBP,[RAX + 0x9]\nTEST RAX,RAX\nCMOVZ RBP,RCX\nCMOVNZ R12,RAX\nLEA R13,[R12 + 0x9]\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOV RDI,RBP\nMOV RSI,RBX\nCALL 0x00401910\nTEST EAX,EAX\nJZ 0x00406441\nCMP byte ptr [RBP],0x0\nJNZ 0x004063e2\nCMP RBP,R13\nJNZ 0x004063fb\nCMP byte ptr [R12 + 0x8],0x0\nJZ 0x004063fb\nMOV RDI,RBP\nCALL 0x00401820\nLEA RCX,[RBP + RAX*0x1 + 0x1]\nCMP byte ptr [RBP + RAX*0x1 + 0x1],0x0\nMOV RBP,RCX\nJNZ 0x004063c0\nJMP 0x00406399\nMOV RDI,RBX\nCALL 0x00401820\nINC RAX\nMOV RCX,R12\nSUB RCX,-0x80\nSUB RCX,RBP\nCMP RAX,RCX\nJNC 0x00406425\nMOV RDI,RBP\nMOV RSI,RBX\nMOV RDX,RAX\nCALL 0x004061f0\nJMP 0x00406441\nMOV RDI,RBX\nCALL 0x00406180\nMOV RBP,RAX\nMOV qword ptr [R12],RBP\nTEST RBP,RBP\nJZ 0x00406457\nMOV byte ptr [RBP + 0x8],0x0\nADD RBP,0x9\nMOV qword ptr [R15 + 0x30],RBP\nMOV EAX,R14D\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR R14D,R14D\nJMP 0x00406445\n'
p851
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 f7\n49 89 fc\n49 8b 5f 30\n41 b6 01\n48 85 db\n0f 84 d4 00 00 00\n49 39 df\n77 0d\n49 8d 47 38\n48 39 c3\n0f 82 c2 00 00 00\n80 3b 00\n74 07\n49 8d 6c 24 09\neb 1d\nbd a5 74 40 00\ne9 a8 00 00 00\n49 8b 04 24\n48 8d 68 09\n48 85 c0\n48 0f 44 e9\n4c 0f 45 e0\n4d 8d 6c 24 09\n66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n48 89 ef\n48 89 de\ne8 45 b5 ff ff\n85 c0\n74 72\n80 7d 00 00\n75 0d\n4c 39 ed\n75 21\n41 80 7c 24 08 00\n74 19\n48 89 ef\ne8 36 b4 ff ff\n48 8d 4c 05 01\n80 7c 05 01 00\n48 89 cd\n75 c7\neb 9e\n48 89 df\ne8 1d b4 ff ff\n48 ff c0\n4c 89 e1\n48 83 e9 80\n48 29 e9\n48 39 c8\n73 10\n48 89 ef\n48 89 de\n48 89 c2\ne8 cd fd ff ff\neb 1c\n48 89 df\ne8 53 fd ff ff\n48 89 c5\n49 89 2c 24\n48 85 ed\n74 1e\nc6 45 08 00\n48 83 c5 09\n49 89 6f 30\n44 89 f0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n45 31 f6\neb e9\n'
p852
S'.text:0000000000406350\n.text:0000000000406351\n.text:0000000000406353\n.text:0000000000406355\n.text:0000000000406357\n.text:0000000000406359\n.text:000000000040635a\n.text:000000000040635b\n.text:000000000040635e\n.text:0000000000406361\n.text:0000000000406365\n.text:0000000000406368\n.text:000000000040636b\n.text:0000000000406371\n.text:0000000000406374\n.text:0000000000406376\n.text:000000000040637a\n.text:000000000040637d\n.text:0000000000406383\n.text:0000000000406386\n.text:0000000000406388\n.text:000000000040638d\n.text:000000000040638f\n.text:0000000000406394\n.text:0000000000406399\n.text:000000000040639d\n.text:00000000004063a1\n.text:00000000004063a4\n.text:00000000004063a8\n.text:00000000004063ac\n.text:00000000004063b1\n.text:00000000004063c0\n.text:00000000004063c3\n.text:00000000004063c6\n.text:00000000004063cb\n.text:00000000004063cd\n.text:00000000004063cf\n.text:00000000004063d3\n.text:00000000004063d5\n.text:00000000004063d8\n.text:00000000004063da\n.text:00000000004063e0\n.text:00000000004063e2\n.text:00000000004063e5\n.text:00000000004063ea\n.text:00000000004063ef\n.text:00000000004063f4\n.text:00000000004063f7\n.text:00000000004063f9\n.text:00000000004063fb\n.text:00000000004063fe\n.text:0000000000406403\n.text:0000000000406406\n.text:0000000000406409\n.text:000000000040640d\n.text:0000000000406410\n.text:0000000000406413\n.text:0000000000406415\n.text:0000000000406418\n.text:000000000040641b\n.text:000000000040641e\n.text:0000000000406423\n.text:0000000000406425\n.text:0000000000406428\n.text:000000000040642d\n.text:0000000000406430\n.text:0000000000406434\n.text:0000000000406437\n.text:0000000000406439\n.text:000000000040643d\n.text:0000000000406441\n.text:0000000000406445\n.text:0000000000406448\n.text:000000000040644c\n.text:000000000040644d\n.text:000000000040644f\n.text:0000000000406451\n.text:0000000000406453\n.text:0000000000406455\n.text:0000000000406456\n.text:0000000000406457\n.text:000000000040645a\n'
p853
tp854
sS'bindtextdomain'
p855
(S'\n__stdcall bindtextdomain()\n'
p856
V\u000avoid bindtextdomain(void)\u000a\u000a{\u000a  (*(code *)PTR_bindtextdomain_0060b0b8)();\u000a  return;\u000a}\u000a\u000a
p857
S'JMP qword ptr [0x0060b0b8]\n'
p858
S'ff 25 c2 98 20 00\n'
p859
S'.plt:00000000004017f0\n'
p860
tp861
sS'fprintftime'
p862
(S'\n__stdcall fprintftime(FILE * s, char * format, tm * tp, timezone_t tz)\n'
p863
V\u000asize_t fprintftime(FILE *s,char *format,tm *tp,timezone_t tz)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = strftime_case_((FILE *)0x0,(char *)s,(tm *)format,(timezone_t)tp);\u000a  return sVar1;\u000a}\u000a\u000a
p864
S'MOV R9D,R8D\nMOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x00402560\n'
p865
S'45 89 c1\n48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\neb 0a\n'
p866
S'.text:0000000000402540\n.text:0000000000402543\n.text:0000000000402546\n.text:0000000000402549\n.text:000000000040254c\n.text:000000000040254f\n.text:0000000000402551\n.text:0000000000402554\n'
p867
tp868
sS'set_char_quoting'
p869
(S'\n__stdcall set_char_quoting(quoting_options * o)\n'
p870
V\u000aint set_char_quoting(quoting_options *o)\u000a\u000a{\u000a  uint in_EDX;\u000a  byte in_SIL;\u000a  quoting_options *pqVar1;\u000a  uint uVar2;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  uVar2 = pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] >> (in_SIL & 0x1f);\u000a  pqVar1->quote_these_too[(ulong)(in_SIL >> 5)] =\u000a       ((uVar2 ^ in_EDX) & 1) << (in_SIL & 0x1f) ^ pqVar1->quote_these_too[(ulong)(in_SIL >> 5)];\u000a  return (int)(uVar2 & 1);\u000a}\u000a\u000a
p871
S'MOV ECX,ESI\nTEST RDI,RDI\nMOV ESI,0x60b350\nCMOVNZ RSI,RDI\nMOV EAX,ECX\nSHR AL,0x5\nMOVZX R8D,AL\nMOV R9D,dword ptr [RSI + R8*0x4 + 0x8]\nMOV EDI,R9D\nSHR EDI,CL\nMOV EAX,EDI\nAND EAX,0x1\nXOR EDI,EDX\nAND EDI,0x1\nSHL EDI,CL\nXOR EDI,R9D\nMOV dword ptr [RSI + R8*0x4 + 0x8],EDI\nRET\n'
p872
S'89 f1\n48 85 ff\nbe 50 b3 60 00\n48 0f 45 f7\n89 c8\nc0 e8 05\n44 0f b6 c0\n46 8b 4c 86 08\n44 89 cf\nd3 ef\n89 f8\n83 e0 01\n31 d7\n83 e7 01\nd3 e7\n44 31 cf\n42 89 7c 86 08\nc3\n'
p873
S'.text:0000000000403fc0\n.text:0000000000403fc2\n.text:0000000000403fc5\n.text:0000000000403fca\n.text:0000000000403fce\n.text:0000000000403fd0\n.text:0000000000403fd3\n.text:0000000000403fd7\n.text:0000000000403fdc\n.text:0000000000403fdf\n.text:0000000000403fe1\n.text:0000000000403fe3\n.text:0000000000403fe6\n.text:0000000000403fe8\n.text:0000000000403feb\n.text:0000000000403fed\n.text:0000000000403ff0\n.text:0000000000403ff5\n'
p874
tp875
sS'quotearg_n'
p876
(S'\n__stdcall quotearg_n(char * arg)\n'
p877
V\u000achar * quotearg_n(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_options(arg,argsize,(quoting_options *)0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p878
S'MOV RDX,-0x1\nMOV ECX,0x60b350\nJMP 0x00404eb0\n'
p879
S'48 c7 c2 ff ff ff ff\nb9 50 b3 60 00\neb 02\n'
p880
S'.text:0000000000404ea0\n.text:0000000000404ea7\n.text:0000000000404eac\n'
p881
tp882
sS'close_stream'
p883
(S'\n__stdcall close_stream(FILE * stream)\n'
p884
V\u000aint close_stream(FILE *stream)\u000a\u000a{\u000a  int iVar1;\u000a  int iVar2;\u000a  long lVar3;\u000a  int *piVar4;\u000a  \u000a  lVar3 = __fpending();\u000a  iVar1 = ferror_unlocked((FILE *)stream);\u000a  iVar2 = rpl_fclose(stream);\u000a  if (iVar1 == 0) {\u000a    iVar1 = -(uint)(iVar2 != 0);\u000a    if ((lVar3 == 0) && (iVar2 != 0)) {\u000a      piVar4 = __errno_location();\u000a      iVar1 = -1;\u000a      if (*piVar4 == 9) {\u000a        iVar1 = 0;\u000a      }\u000a    }\u000a  }\u000a  else {\u000a    iVar1 = -1;\u000a    if (iVar2 == 0) {\u000a      piVar4 = __errno_location();\u000a      *piVar4 = 0;\u000a    }\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p885
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV RBX,RDI\nCALL 0x00401770\nMOV R14,RAX\nMOV RDI,RBX\nCALL 0x004018f0\nMOV EBP,EAX\nMOV RDI,RBX\nCALL 0x00405ee0\nTEST EBP,EBP\nJZ 0x004067bb\nMOV EBX,0xffffffff\nTEST EAX,EAX\nJNZ 0x004067df\nCALL 0x00401710\nMOV dword ptr [RAX],0x0\nJMP 0x004067df\nTEST EAX,EAX\nSETZ CL\nNEG EAX\nSBB EBX,EBX\nTEST R14,R14\nJNZ 0x004067df\nTEST CL,CL\nJNZ 0x004067df\nCALL 0x00401710\nXOR ECX,ECX\nCMP dword ptr [RAX],0x9\nMOV EBX,0xffffffff\nCMOVZ EBX,ECX\nMOV EAX,EBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p886
S'55\n41 56\n53\n48 89 fb\ne8 e4 af ff ff\n49 89 c6\n48 89 df\ne8 59 b1 ff ff\n89 c5\n48 89 df\ne8 3f f7 ff ff\n85 ed\n74 16\nbb ff ff ff ff\n85 c0\n75 31\ne8 5d af ff ff\nc7 00 00 00 00 00\neb 24\n85 c0\n0f 94 c1\nf7 d8\n19 db\n4d 85 f6\n75 16\n84 c9\n75 12\ne8 3e af ff ff\n31 c9\n83 38 09\nbb ff ff ff ff\n0f 44 d9\n89 d8\n5b\n41 5e\n5d\nc3\n'
p887
S'.text:0000000000406780\n.text:0000000000406781\n.text:0000000000406783\n.text:0000000000406784\n.text:0000000000406787\n.text:000000000040678c\n.text:000000000040678f\n.text:0000000000406792\n.text:0000000000406797\n.text:0000000000406799\n.text:000000000040679c\n.text:00000000004067a1\n.text:00000000004067a3\n.text:00000000004067a5\n.text:00000000004067aa\n.text:00000000004067ac\n.text:00000000004067ae\n.text:00000000004067b3\n.text:00000000004067b9\n.text:00000000004067bb\n.text:00000000004067bd\n.text:00000000004067c0\n.text:00000000004067c2\n.text:00000000004067c4\n.text:00000000004067c7\n.text:00000000004067c9\n.text:00000000004067cb\n.text:00000000004067cd\n.text:00000000004067d2\n.text:00000000004067d4\n.text:00000000004067d7\n.text:00000000004067dc\n.text:00000000004067df\n.text:00000000004067e1\n.text:00000000004067e2\n.text:00000000004067e4\n.text:00000000004067e5\n'
p888
tp889
sS'fputc'
p890
(S'\n__stdcall fputc(int __c, FILE * __stream)\n'
p891
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_0060b120)();\u000a  return iVar1;\u000a}\u000a\u000a
p892
S'JMP qword ptr [0x0060b120]\n'
p893
S'ff 25 5a 98 20 00\n'
p894
S'.plt:00000000004018c0\n'
p895
tp896
sS'quotearg_colon_mem'
p897
(S'\n__stdcall quotearg_colon_mem(char * arg, size_t argsize)\n'
p898
V\u000achar * quotearg_colon_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p899
S'MOV EDX,0x3a\nJMP 0x004051c0\n'
p900
S'ba 3a 00 00 00\ne9 66 ff ff ff\n'
p901
S'.text:0000000000405250\n.text:0000000000405255\n'
p902
tp903
sS'xcalloc'
p904
(S'\n__stdcall xcalloc(size_t n, size_t s)\n'
p905
V\u000avoid * xcalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = rpl_calloc(n,s);\u000a  if (pvVar1 != (void *)0x0) {\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p906
S'PUSH RAX\nCALL 0x00405e90\nTEST RAX,RAX\nJZ 0x00405dfd\nPOP RCX\nRET\nCALL 0x00405e60\n'
p907
S'50\ne8 9a 00 00 00\n48 85 c0\n74 02\n59\nc3\ne8 5e 00 00 00\n'
p908
S'.text:0000000000405df0\n.text:0000000000405df1\n.text:0000000000405df6\n.text:0000000000405df9\n.text:0000000000405dfb\n.text:0000000000405dfc\n.text:0000000000405dfd\n'
p909
tp910
sS'clear_ungetc_buffer_preserving_position'
p911
(S'\n__stdcall clear_ungetc_buffer_preserving_position(FILE * fp)\n'
p912
V\u000avoid clear_ungetc_buffer_preserving_position(FILE *fp)\u000a\u000a{\u000a  if ((*(byte *)((long)&fp->_flags + 1) & 1) == 0) {\u000a    return;\u000a  }\u000a  rpl_fseeko(fp,0);\u000a  return;\u000a}\u000a\u000a
p913
S'TEST byte ptr [RDI + 0x1],0x1\nJNZ 0x00405f97\nRET\nXOR ESI,ESI\nMOV EDX,0x1\nJMP 0x00405fb0\n'
p914
S'f6 47 01 01\n75 01\nc3\n31 f6\nba 01 00 00 00\ne9 0d 00 00 00\n'
p915
S'.text:0000000000405f90\n.text:0000000000405f94\n.text:0000000000405f96\n.text:0000000000405f97\n.text:0000000000405f99\n.text:0000000000405f9e\n'
p916
tp917
sS'xnmalloc'
p918
(S'\n__stdcall xnmalloc(size_t n, size_t s)\n'
p919
V\u000avoid * xnmalloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  if (SUB168(ZEXT816(n) * ZEXT816(s) >> 0x40,0) == 0) {\u000a    pvVar1 = xmalloc(s * n);\u000a    return pvVar1;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  xalloc_die();\u000a}\u000a\u000a
p920
S'MOV RAX,RDI\nMUL RSI\nJO 0x00405cc1\nIMUL RSI,RDI\nMOV RDI,RSI\nJMP 0x00405cd0\nPUSH RAX\nCALL 0x00405e60\n'
p921
S'48 89 f8\n48 f7 e6\n70 09\n48 0f af f7\n48 89 f7\neb 0f\n50\ne8 99 01 00 00\n'
p922
S'.text:0000000000405cb0\n.text:0000000000405cb3\n.text:0000000000405cb6\n.text:0000000000405cb8\n.text:0000000000405cbc\n.text:0000000000405cbf\n.text:0000000000405cc1\n.text:0000000000405cc2\n'
p923
tp924
sS'quotearg_char'
p925
(S'\n__stdcall quotearg_char(char * arg)\n'
p926
V\u000achar * quotearg_char(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_char_mem(arg,0xffffffffffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p927
S'MOV EAX,ESI\nMOV RSI,-0x1\nMOV EDX,EAX\nJMP 0x004051c0\n'
p928
S'89 f0\n48 c7 c6 ff ff ff ff\n89 c2\neb 83\n'
p929
S'.text:0000000000405230\n.text:0000000000405232\n.text:0000000000405239\n.text:000000000040523b\n'
p930
tp931
sS'malloc'
p932
(S'\n__stdcall malloc(size_t __size)\n'
p933
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * malloc(size_t __size)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_malloc_0060b190)();\u000a  return pvVar1;\u000a}\u000a\u000a
p934
S'JMP qword ptr [0x0060b190]\n'
p935
S'ff 25 ea 97 20 00\n'
p936
S'.plt:00000000004019a0\n'
p937
tp938
sS'c_tolower'
p939
(S'\n__stdcall c_tolower()\n'
p940
V\u000aint c_tolower(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_EDI;\u000a  \u000a  iVar1 = in_EDI + 0x20;\u000a  if (0x19 < in_EDI - 0x41U) {\u000a    iVar1 = in_EDI;\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p941
S'LEA ECX,[RDI + -0x41]\nLEA EAX,[RDI + 0x20]\nCMP ECX,0x1a\nCMOVNC EAX,EDI\nRET\n'
p942
S'8d 4f bf\n8d 47 20\n83 f9 1a\n0f 43 c7\nc3\n'
p943
S'.text:0000000000406760\n.text:0000000000406763\n.text:0000000000406766\n.text:0000000000406769\n.text:000000000040676c\n'
p944
tp945
sS'getopt_long'
p946
(S'\n__stdcall getopt_long()\n'
p947
V\u000avoid getopt_long(void)\u000a\u000a{\u000a  (*(code *)PTR_getopt_long_0060b0d8)();\u000a  return;\u000a}\u000a\u000a
p948
S'JMP qword ptr [0x0060b0d8]\n'
p949
S'ff 25 a2 98 20 00\n'
p950
S'.plt:0000000000401830\n'
p951
tp952
sS'fwrite_uppcase'
p953
(S'\n__stdcall fwrite_uppcase(FILE * fp, char * src, size_t len)\n'
p954
V\u000avoid fwrite_uppcase(FILE *fp,char *src,size_t len)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  if (len != 0) {\u000a    do {\u000a      pp_Var1 = __ctype_toupper_loc();\u000a      fputc((*pp_Var1)[(ulong)(byte)*src],(FILE *)fp);\u000a      src = (char *)((byte *)src + 1);\u000a      len = len - 1;\u000a    } while (len != 0);\u000a  }\u000a  return;\u000a}\u000a\u000a
p955
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R14,RDX\nMOV RBX,RSI\nMOV R15,RDI\nTEST R14,R14\nJZ 0x00403d6e\nNOP dword ptr CS:[RAX + RAX*0x1]\nCALL 0x004016b0\nMOV RAX,qword ptr [RAX]\nMOVZX ECX,byte ptr [RBX]\nMOV EDI,dword ptr [RAX + RCX*0x4]\nMOV RSI,R15\nCALL 0x004018c0\nINC RBX\nDEC R14\nJNZ 0x00403d50\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p956
S'41 57\n41 56\n53\n49 89 d6\n48 89 f3\n49 89 ff\n4d 85 f6\n74 2b\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\ne8 5b d9 ff ff\n48 8b 00\n0f b6 0b\n8b 3c 88\n4c 89 fe\ne8 5a db ff ff\n48 ff c3\n49 ff ce\n75 e2\n5b\n41 5e\n41 5f\nc3\n'
p957
S'.text:0000000000403d30\n.text:0000000000403d32\n.text:0000000000403d34\n.text:0000000000403d35\n.text:0000000000403d38\n.text:0000000000403d3b\n.text:0000000000403d3e\n.text:0000000000403d41\n.text:0000000000403d43\n.text:0000000000403d50\n.text:0000000000403d55\n.text:0000000000403d58\n.text:0000000000403d5b\n.text:0000000000403d5e\n.text:0000000000403d61\n.text:0000000000403d66\n.text:0000000000403d69\n.text:0000000000403d6c\n.text:0000000000403d6e\n.text:0000000000403d6f\n.text:0000000000403d71\n.text:0000000000403d73\n'
p958
tp959
sS'quotearg_style'
p960
(S'\n__stdcall quotearg_style(char * arg)\n'
p961
V\u000achar * quotearg_style(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p962
S'MOV RAX,RSI\nMOV ECX,EDI\nXOR EDI,EDI\nMOV ESI,ECX\nMOV RDX,RAX\nJMP 0x004050a0\n'
p963
S'48 89 f0\n89 f9\n31 ff\n89 ce\n48 89 c2\ne9 0f ff ff ff\n'
p964
S'.text:0000000000405180\n.text:0000000000405183\n.text:0000000000405185\n.text:0000000000405187\n.text:0000000000405189\n.text:000000000040518c\n'
p965
tp966
sS'kill'
p967
(S'\n__stdcall kill(__pid_t __pid, int __sig)\n'
p968
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint kill(__pid_t __pid,int __sig)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_kill_0060b170)();\u000a  return iVar1;\u000a}\u000a\u000a
p969
S'JMP qword ptr [0x0060b170]\n'
p970
S'ff 25 0a 98 20 00\n'
p971
S'.plt:0000000000401960\n'
p972
tp973
sS'emit_try_help'
p974
(S'\n__stdcall emit_try_help()\n'
p975
V\u000avoid emit_try_help(void)\u000a\u000a{\u000a  undefined8 uVar1;\u000a  undefined8 uVar2;\u000a  \u000a  uVar1 = stderr;\u000a  uVar2 = dcgettext(0,"Try \u005c'%s --help\u005c' for more information.\u005cn",5);\u000a  __fprintf_chk(uVar1,1,uVar2,program_name);\u000a  return;\u000a}\u000a\u000a
p976
S'PUSH RBX\nMOV RBX,qword ptr [0x0060b320]\nXOR EDI,EDI\nMOV ESI,0x407589\nMOV EDX,0x5\nCALL 0x00401800\nMOV RDX,RAX\nMOV RCX,qword ptr [0x0060b348]\nMOV ESI,0x1\nXOR EAX,EAX\nMOV RDI,RBX\nPOP RBX\nJMP 0x00401af0\n'
p977
S'53\n48 8b 1d d8 95 20 00\n31 ff\nbe 89 75 40 00\nba 05 00 00 00\ne8 a7 fa ff ff\n48 89 c2\n48 8b 0d e5 95 20 00\nbe 01 00 00 00\n31 c0\n48 89 df\n5b\ne9 7d fd ff ff\n'
p978
S'.text:0000000000401d40\n.text:0000000000401d41\n.text:0000000000401d48\n.text:0000000000401d4a\n.text:0000000000401d4f\n.text:0000000000401d54\n.text:0000000000401d59\n.text:0000000000401d5c\n.text:0000000000401d63\n.text:0000000000401d68\n.text:0000000000401d6a\n.text:0000000000401d6d\n.text:0000000000401d6e\n'
p979
tp980
sS'strrchr'
p981
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p982
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_0060b0f0)();\u000a  return pcVar1;\u000a}\u000a\u000a
p983
S'JMP qword ptr [0x0060b0f0]\n'
p984
S'ff 25 8a 98 20 00\n'
p985
S'.plt:0000000000401860\n'
p986
tp987
sS'quotearg_alloc_mem'
p988
(S'\n__stdcall quotearg_alloc_mem(char * arg, size_t argsize, size_t * size, quoting_options * o)\n'
p989
V\u000achar * quotearg_alloc_mem(char *arg,size_t argsize,size_t *size,quoting_options *o)\u000a\u000a{\u000a  int iVar1;\u000a  int *piVar2;\u000a  size_t sVar3;\u000a  char *buffer;\u000a  uint uVar4;\u000a  quoting_options *pqVar5;\u000a  int e;\u000a  \u000a  pqVar5 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar5 = o;\u000a  }\u000a  piVar2 = __errno_location();\u000a  iVar1 = *piVar2;\u000a  uVar4 = (uint)(size == (size_t *)0x0) | pqVar5->flags;\u000a  sVar3 = quotearg_buffer_restyled\u000a                    ((char *)0x0,0,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  buffer = (char *)xcharalloc(sVar3 + 1);\u000a  quotearg_buffer_restyled\u000a            (buffer,sVar3 + 1,arg,argsize,(char *)(ulong)pqVar5->style,(char *)(ulong)uVar4);\u000a  *piVar2 = iVar1;\u000a  if (size != (size_t *)0x0) {\u000a    *size = sVar3;\u000a  }\u000a  return buffer;\u000a}\u000a\u000a
p990
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x28\nMOV RBX,RDX\nMOV qword ptr [RSP + 0x18],RBX\nMOV R14,RSI\nMOV qword ptr [RSP + 0x10],R14\nMOV R15,RDI\nMOV qword ptr [RSP + 0x8],R15\nTEST RCX,RCX\nMOV R12D,0x60b350\nCMOVNZ R12,RCX\nCALL 0x00401710\nMOV qword ptr [RSP + 0x20],RAX\nMOV ECX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x4],ECX\nXOR EBP,EBP\nTEST RBX,RBX\nSETZ BPL\nOR EBP,dword ptr [R12 + 0x4]\nMOV R8D,dword ptr [R12]\nLEA R13,[R12 + 0x8]\nSUB RSP,0x8\nXOR EDI,EDI\nXOR ESI,ESI\nMOV RDX,R15\nMOV RCX,R14\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004040d0\nADD RSP,0x20\nMOV RBX,RAX\nLEA R15,[RBX + 0x1]\nMOV RDI,R15\nCALL 0x00405da0\nMOV R14,RAX\nMOV R8D,dword ptr [R12]\nSUB RSP,0x8\nMOV RDI,R14\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x10]\nMOV RCX,qword ptr [RSP + 0x18]\nMOV R9D,EBP\nPUSH qword ptr [R12 + 0x30]\nPUSH qword ptr [R12 + 0x28]\nPUSH R13\nCALL 0x004040d0\nMOV RAX,qword ptr [RSP + 0x38]\nADD RSP,0x20\nTEST RAX,RAX\nMOV ECX,dword ptr [RSP + 0x4]\nMOV RDX,qword ptr [RSP + 0x20]\nMOV dword ptr [RDX],ECX\nJZ 0x00404dfa\nMOV qword ptr [RAX],RBX\nMOV RAX,R14\nADD RSP,0x28\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p991
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 28\n48 89 d3\n48 89 5c 24 18\n49 89 f6\n4c 89 74 24 10\n49 89 ff\n4c 89 7c 24 08\n48 85 c9\n41 bc 50 b3 60 00\n4c 0f 45 e1\ne8 b8 c9 ff ff\n48 89 44 24 20\n8b 08\n89 4c 24 04\n31 ed\n48 85 db\n40 0f 94 c5\n41 0b 6c 24 04\n45 8b 04 24\n4d 8d 6c 24 08\n48 83 ec 08\n31 ff\n31 f6\n4c 89 fa\n4c 89 f1\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 34 f3 ff ff\n48 83 c4 20\n48 89 c3\n4c 8d 7b 01\n4c 89 ff\ne8 f1 0f 00 00\n49 89 c6\n45 8b 04 24\n48 83 ec 08\n4c 89 f7\n4c 89 fe\n48 8b 54 24 10\n48 8b 4c 24 18\n41 89 e9\n41 ff 74 24 30\n41 ff 74 24 28\n41 55\ne8 f2 f2 ff ff\n48 8b 44 24 38\n48 83 c4 20\n48 85 c0\n8b 4c 24 04\n48 8b 54 24 20\n89 0a\n74 03\n48 89 18\n4c 89 f0\n48 83 c4 28\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p992
S'.text:0000000000404d20\n.text:0000000000404d21\n.text:0000000000404d23\n.text:0000000000404d25\n.text:0000000000404d27\n.text:0000000000404d29\n.text:0000000000404d2a\n.text:0000000000404d2e\n.text:0000000000404d31\n.text:0000000000404d36\n.text:0000000000404d39\n.text:0000000000404d3e\n.text:0000000000404d41\n.text:0000000000404d46\n.text:0000000000404d49\n.text:0000000000404d4f\n.text:0000000000404d53\n.text:0000000000404d58\n.text:0000000000404d5d\n.text:0000000000404d5f\n.text:0000000000404d63\n.text:0000000000404d65\n.text:0000000000404d68\n.text:0000000000404d6c\n.text:0000000000404d71\n.text:0000000000404d75\n.text:0000000000404d7a\n.text:0000000000404d7e\n.text:0000000000404d80\n.text:0000000000404d82\n.text:0000000000404d85\n.text:0000000000404d88\n.text:0000000000404d8b\n.text:0000000000404d90\n.text:0000000000404d95\n.text:0000000000404d97\n.text:0000000000404d9c\n.text:0000000000404da0\n.text:0000000000404da3\n.text:0000000000404da7\n.text:0000000000404daa\n.text:0000000000404daf\n.text:0000000000404db2\n.text:0000000000404db6\n.text:0000000000404dba\n.text:0000000000404dbd\n.text:0000000000404dc0\n.text:0000000000404dc5\n.text:0000000000404dca\n.text:0000000000404dcd\n.text:0000000000404dd2\n.text:0000000000404dd7\n.text:0000000000404dd9\n.text:0000000000404dde\n.text:0000000000404de3\n.text:0000000000404de7\n.text:0000000000404dea\n.text:0000000000404dee\n.text:0000000000404df3\n.text:0000000000404df5\n.text:0000000000404df7\n.text:0000000000404dfa\n.text:0000000000404dfd\n.text:0000000000404e01\n.text:0000000000404e02\n.text:0000000000404e04\n.text:0000000000404e06\n.text:0000000000404e08\n.text:0000000000404e0a\n.text:0000000000404e0b\n'
p993
tp994
sS'quotearg_style_mem'
p995
(S'\n__stdcall quotearg_style_mem(char * arg, size_t argsize)\n'
p996
V\u000achar * quotearg_style_mem(char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_style_mem((char *)0x0,(ulong)arg & 0xffffffff);\u000a  return pcVar1;\u000a}\u000a\u000a
p997
S'MOV RAX,RDX\nMOV RCX,RSI\nMOV EDX,EDI\nXOR EDI,EDI\nMOV ESI,EDX\nMOV RDX,RCX\nMOV RCX,RAX\nJMP 0x00405140\n'
p998
S'48 89 d0\n48 89 f1\n89 fa\n31 ff\n89 d6\n48 89 ca\n48 89 c1\neb 8c\n'
p999
S'.text:00000000004051a0\n.text:00000000004051a3\n.text:00000000004051a6\n.text:00000000004051a8\n.text:00000000004051aa\n.text:00000000004051ac\n.text:00000000004051af\n.text:00000000004051b2\n'
p1000
tp1001
sS'xalloc_die'
p1002
(S'\n__stdcall xalloc_die()\n'
p1003
V\u000avoid xalloc_die(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 uVar2;\u000a  \u000a  iVar1 = exit_failure;\u000a  uVar2 = dcgettext(0,"memory exhausted",5);\u000a  error((ulong)(uint)iVar1,0,0x407837,uVar2);\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1004
S'PUSH RBX\nMOV EBX,dword ptr [0x0060b278]\nXOR EDI,EDI\nMOV ESI,0x4085cf\nMOV EDX,0x5\nCALL 0x00401800\nMOV RCX,RAX\nXOR ESI,ESI\nMOV EDX,0x407837\nXOR EAX,EAX\nMOV EDI,EBX\nCALL 0x00401a60\nCALL 0x00401700\n'
p1005
S'53\n8b 1d 11 54 20 00\n31 ff\nbe cf 85 40 00\nba 05 00 00 00\ne8 88 b9 ff ff\n48 89 c1\n31 f6\nba 37 78 40 00\n31 c0\n89 df\ne8 d5 bb ff ff\ne8 70 b8 ff ff\n'
p1006
S'.text:0000000000405e60\n.text:0000000000405e61\n.text:0000000000405e67\n.text:0000000000405e69\n.text:0000000000405e6e\n.text:0000000000405e73\n.text:0000000000405e78\n.text:0000000000405e7b\n.text:0000000000405e7d\n.text:0000000000405e82\n.text:0000000000405e84\n.text:0000000000405e86\n.text:0000000000405e8b\n'
p1007
tp1008
sS'quotearg_n_custom'
p1009
(S'\n__stdcall quotearg_n_custom(char * left_quote, char * right_quote, char * arg)\n'
p1010
V\u000achar * quotearg_n_custom(char *left_quote,char *right_quote,char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  size_t argsize;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem(left_quote,right_quote,arg,argsize);\u000a  return pcVar1;\u000a}\u000a\u000a
p1011
S'MOV R8,-0x1\nJMP 0x004052c0\n'
p1012
S'49 c7 c0 ff ff ff ff\neb 07\n'
p1013
S'.text:00000000004052b0\n.text:00000000004052b7\n'
p1014
tp1015
sS'set_tz'
p1016
(S'\n__stdcall set_tz(timezone_t tz)\n'
p1017
V\u000atimezone_t set_tz(timezone_t tz)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char *__s2;\u000a  timezone_t tz_00;\u000a  int *piVar3;\u000a  \u000a  __s2 = getenv_TZ();\u000a  if (__s2 == (char *)0x0) {\u000a    if (tz->tz_is_set == 0) {\u000a      return (timezone_t)0x1;\u000a    }\u000a  }\u000a  else {\u000a    if ((tz->tz_is_set != 0) && (iVar2 = strcmp(tz->abbrs,__s2), iVar2 == 0)) {\u000a      return (timezone_t)0x1;\u000a    }\u000a  }\u000a  tz_00 = tzalloc(__s2);\u000a  if (tz_00 != (timezone_t)0x0) {\u000a    _Var1 = change_env(tz);\u000a    if (_Var1 != false) {\u000a      return tz_00;\u000a    }\u000a    piVar3 = __errno_location();\u000a    iVar2 = *piVar3;\u000a    tzfree(tz_00);\u000a    *piVar3 = iVar2;\u000a  }\u000a  return (timezone_t)0x0;\u000a}\u000a\u000a
p1018
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14,RDI\nCALL 0x004065b0\nMOV RBX,RAX\nTEST RBX,RBX\nMOV AL,byte ptr [R14 + 0x8]\nJZ 0x004062fe\nTEST AL,AL\nJZ 0x00406302\nLEA RDI,[R14 + 0x9]\nMOV RSI,RBX\nCALL 0x00401910\nTEST EAX,EAX\nJNZ 0x00406302\nJMP 0x00406338\nTEST AL,AL\nJZ 0x00406338\nMOV RDI,RBX\nCALL 0x00406180\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00406334\nMOV RDI,R14\nCALL 0x004065c0\nTEST AL,AL\nJNZ 0x0040633d\nCALL 0x00401710\nMOV R14,RAX\nMOV EBP,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x00406210\nMOV dword ptr [R14],EBP\nXOR EBX,EBX\nJMP 0x0040633d\nMOV EBX,0x1\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1019
S'55\n41 56\n53\n49 89 fe\ne8 d4 02 00 00\n48 89 c3\n48 85 db\n41 8a 46 08\n74 16\n84 c0\n74 16\n49 8d 7e 09\n48 89 de\ne8 18 b6 ff ff\n85 c0\n75 06\neb 3a\n84 c0\n74 36\n48 89 df\ne8 76 fe ff ff\n48 89 c3\n48 85 db\n74 22\n4c 89 f7\ne8 a6 02 00 00\n84 c0\n75 1f\ne8 ed b3 ff ff\n49 89 c6\n41 8b 2e\n48 89 df\ne8 df fe ff ff\n41 89 2e\n31 db\neb 05\nbb 01 00 00 00\n48 89 d8\n5b\n41 5e\n5d\nc3\n'
p1020
S'.text:00000000004062d0\n.text:00000000004062d1\n.text:00000000004062d3\n.text:00000000004062d4\n.text:00000000004062d7\n.text:00000000004062dc\n.text:00000000004062df\n.text:00000000004062e2\n.text:00000000004062e6\n.text:00000000004062e8\n.text:00000000004062ea\n.text:00000000004062ec\n.text:00000000004062f0\n.text:00000000004062f3\n.text:00000000004062f8\n.text:00000000004062fa\n.text:00000000004062fc\n.text:00000000004062fe\n.text:0000000000406300\n.text:0000000000406302\n.text:0000000000406305\n.text:000000000040630a\n.text:000000000040630d\n.text:0000000000406310\n.text:0000000000406312\n.text:0000000000406315\n.text:000000000040631a\n.text:000000000040631c\n.text:000000000040631e\n.text:0000000000406323\n.text:0000000000406326\n.text:0000000000406329\n.text:000000000040632c\n.text:0000000000406331\n.text:0000000000406334\n.text:0000000000406336\n.text:0000000000406338\n.text:000000000040633d\n.text:0000000000406340\n.text:0000000000406341\n.text:0000000000406343\n.text:0000000000406344\n'
p1021
tp1022
sS'revert_tz'
p1023
(S'\n__stdcall revert_tz(timezone_t tz)\n'
p1024
V\u000a_Bool revert_tz(timezone_t tz)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int *piVar2;\u000a  int iVar3;\u000a  \u000a  if (tz == (timezone_t)0x1) {\u000a    _Var1 = true;\u000a  }\u000a  else {\u000a    piVar2 = __errno_location();\u000a    iVar3 = *piVar2;\u000a    _Var1 = change_env(tz);\u000a    if (_Var1 == false) {\u000a      iVar3 = *piVar2;\u000a    }\u000a    tzfree(tz);\u000a    *piVar2 = iVar3;\u000a  }\u000a  return _Var1;\u000a}\u000a\u000a
p1025
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV RBX,RDI\nCMP RBX,0x1\nJZ 0x0040649a\nCALL 0x00401710\nMOV R14,RAX\nMOV R15D,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x004065c0\nMOV EBP,EAX\nTEST BPL,BPL\nJNZ 0x0040648d\nMOV R15D,dword ptr [R14]\nMOV RDI,RBX\nCALL 0x00406210\nMOV dword ptr [R14],R15D\nJMP 0x0040649d\nMOV BPL,0x1\nMOV EAX,EBP\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1026
S'55\n41 57\n41 56\n53\n50\n48 89 fb\n48 83 fb 01\n74 2a\ne8 9b b2 ff ff\n49 89 c6\n45 8b 3e\n48 89 df\ne8 3d 01 00 00\n89 c5\n40 84 ed\n75 03\n45 8b 3e\n48 89 df\ne8 7b fd ff ff\n45 89 3e\neb 03\n40 b5 01\n89 e8\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1027
S'.text:0000000000406460\n.text:0000000000406461\n.text:0000000000406463\n.text:0000000000406465\n.text:0000000000406466\n.text:0000000000406467\n.text:000000000040646a\n.text:000000000040646e\n.text:0000000000406470\n.text:0000000000406475\n.text:0000000000406478\n.text:000000000040647b\n.text:000000000040647e\n.text:0000000000406483\n.text:0000000000406485\n.text:0000000000406488\n.text:000000000040648a\n.text:000000000040648d\n.text:0000000000406490\n.text:0000000000406495\n.text:0000000000406498\n.text:000000000040649a\n.text:000000000040649d\n.text:000000000040649f\n.text:00000000004064a3\n.text:00000000004064a4\n.text:00000000004064a6\n.text:00000000004064a8\n.text:00000000004064a9\n'
p1028
tp1029
sS'__freading'
p1030
(S'\n__stdcall __freading()\n'
p1031
V\u000avoid __freading(void)\u000a\u000a{\u000a  (*(code *)PTR___freading_0060b1b0)();\u000a  return;\u000a}\u000a\u000a
p1032
S'JMP qword ptr [0x0060b1b0]\n'
p1033
S'ff 25 ca 97 20 00\n'
p1034
S'.plt:00000000004019e0\n'
p1035
tp1036
sS'ranged_convert'
p1037
(S'\n__stdcall ranged_convert(anon_subr_tm_ptr_time_t_ptr_tm_ptr * convert, time_t * t, tm * tp)\n'
p1038
V\u000atm * ranged_convert(tm *(*convert)(time_t *,tm *),time_t *t,tm *tp)\u000a\u000a{\u000a  tm *ptVar1;\u000a  ulong uVar2;\u000a  ulong a;\u000a  ulong uVar3;\u000a  ulong b;\u000a  undefined auVar4 [16];\u000a  \u000a  ptVar1 = (*convert)(t,tp);\u000a  if (ptVar1 == (tm *)0x0) {\u000a    b = *t;\u000a    if ((b == 0) || (b == ((long)b >> 0x3f | 1U))) {\u000a      ptVar1 = (tm *)0x0;\u000a    }\u000a    else {\u000a      a = 0;\u000a      do {\u000a        uVar2 = time_t_avg(a,b);\u000a        *t = uVar2;\u000a        auVar4 = (undefined  [16])(*convert)(t,tp);\u000a        ptVar1 = SUB168(auVar4,0);\u000a        uVar3 = uVar2;\u000a        if (ptVar1 == (tm *)0x0) {\u000a          uVar3 = a;\u000a          b = uVar2;\u000a        }\u000a        a = uVar3;\u000a      } while (b != ((long)b >> 0x3f | 1U) + uVar3);\u000a      if ((uVar3 != 0) && (ptVar1 == (tm *)0x0)) {\u000a        *t = uVar3;\u000a                    /* WARNING: Could not recover jumptable at 0x004071bf. Too many branches */\u000a                    /* WARNING: Treating indirect jump as call */\u000a        ptVar1 = (*convert)(t,tp);\u000a        return ptVar1;\u000a      }\u000a    }\u000a  }\u000a  return ptVar1;\u000a}\u000a\u000a
p1039
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14,RDX\nMOV R15,RSI\nMOV RBX,RDI\nMOV RDI,R15\nMOV RSI,R14\nCALL RBX\nTEST RAX,RAX\nJNZ 0x0040713f\nMOV qword ptr [RSP],RBX\nMOV R12,qword ptr [R15]\nTEST R12,R12\nJZ 0x0040713d\nMOV RAX,R12\nSAR RAX,0x3f\nOR RAX,0x1\nCMP R12,RAX\nJNZ 0x0040714e\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nXOR EBX,EBX\nMOV RBP,qword ptr [RSP]\nNOP word ptr CS:[RAX + RAX*0x1]\nMOV R13,RBX\nMOV RDI,R13\nMOV RSI,R12\nCALL 0x00407250\nMOV RBX,RAX\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nCALL RBP\nTEST RAX,RAX\nCMOVZ R12,RBX\nCMOVZ RBX,R13\nMOV RCX,R12\nSAR RCX,0x3f\nOR RCX,0x1\nADD RCX,RBX\nCMP R12,RCX\nJNZ 0x00407160\nTEST RBX,RBX\nJZ 0x0040713f\nTEST RAX,RAX\nMOV RCX,qword ptr [RSP]\nJNZ 0x0040713f\nMOV qword ptr [R15],RBX\nMOV RDI,R15\nMOV RSI,R14\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP RCX\n'
p1040
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n49 89 d6\n49 89 f7\n48 89 fb\n4c 89 ff\n4c 89 f6\nff d3\n48 85 c0\n75 1e\n48 89 1c 24\n4d 8b 27\n4d 85 e4\n74 10\n4c 89 e0\n48 c1 f8 3f\n48 83 c8 01\n49 39 c4\n75 11\n31 c0\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n31 db\n48 8b 2c 24\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n49 89 dd\n4c 89 ef\n4c 89 e6\ne8 e2 00 00 00\n48 89 c3\n49 89 1f\n4c 89 ff\n4c 89 f6\nff d5\n48 85 c0\n4c 0f 44 e3\n49 0f 44 dd\n4c 89 e1\n48 c1 f9 3f\n48 83 c9 01\n48 01 d9\n49 39 cc\n75 c6\n48 85 db\n74 a0\n48 85 c0\n48 8b 0c 24\n75 97\n49 89 1f\n4c 89 ff\n4c 89 f6\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nff e1\n'
p1041
S'.text:0000000000407100\n.text:0000000000407101\n.text:0000000000407103\n.text:0000000000407105\n.text:0000000000407107\n.text:0000000000407109\n.text:000000000040710a\n.text:000000000040710b\n.text:000000000040710e\n.text:0000000000407111\n.text:0000000000407114\n.text:0000000000407117\n.text:000000000040711a\n.text:000000000040711c\n.text:000000000040711f\n.text:0000000000407121\n.text:0000000000407125\n.text:0000000000407128\n.text:000000000040712b\n.text:000000000040712d\n.text:0000000000407130\n.text:0000000000407134\n.text:0000000000407138\n.text:000000000040713b\n.text:000000000040713d\n.text:000000000040713f\n.text:0000000000407143\n.text:0000000000407144\n.text:0000000000407146\n.text:0000000000407148\n.text:000000000040714a\n.text:000000000040714c\n.text:000000000040714d\n.text:000000000040714e\n.text:0000000000407150\n.text:0000000000407154\n.text:0000000000407160\n.text:0000000000407163\n.text:0000000000407166\n.text:0000000000407169\n.text:000000000040716e\n.text:0000000000407171\n.text:0000000000407174\n.text:0000000000407177\n.text:000000000040717a\n.text:000000000040717c\n.text:000000000040717f\n.text:0000000000407183\n.text:0000000000407187\n.text:000000000040718a\n.text:000000000040718e\n.text:0000000000407192\n.text:0000000000407195\n.text:0000000000407198\n.text:000000000040719a\n.text:000000000040719d\n.text:000000000040719f\n.text:00000000004071a2\n.text:00000000004071a6\n.text:00000000004071a8\n.text:00000000004071ab\n.text:00000000004071ae\n.text:00000000004071b1\n.text:00000000004071b5\n.text:00000000004071b6\n.text:00000000004071b8\n.text:00000000004071ba\n.text:00000000004071bc\n.text:00000000004071be\n.text:00000000004071bf\n'
p1042
tp1043
sS'fputs_unlocked'
p1044
(S'\n__stdcall fputs_unlocked(char * __s, FILE * __stream)\n'
p1045
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputs_unlocked(char *__s,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputs_unlocked_0060b130)();\u000a  return iVar1;\u000a}\u000a\u000a
p1046
S'JMP qword ptr [0x0060b130]\n'
p1047
S'ff 25 4a 98 20 00\n'
p1048
S'.plt:00000000004018e0\n'
p1049
tp1050
sS'main'
p1051
(S'\n__stdcall main(char * * argv)\n'
p1052
V\u000aint main(char **argv)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int extraout_EAX;\u000a  undefined8 uVar3;\u000a  char *file;\u000a  uint *puVar4;\u000a  char **command_name;\u000a  STRUCT_UTMP *pSStack56;\u000a  char *pcStack48;\u000a  char *pcStack40;\u000a  undefined8 uStack32;\u000a  \u000a  argv = (char **)((ulong)argv & 0xffffffff);\u000a  uStack32 = 0x401ec0;\u000a  set_program_name(*command_name);\u000a  uStack32 = 0x401ecf;\u000a  setlocale(6,"");\u000a  uStack32 = 0x401ede;\u000a  bindtextdomain(0x407541,"/usr/local/share/locale");\u000a  uStack32 = 0x401ee8;\u000a  textdomain(0x407541);\u000a  uStack32 = 0x401ef2;\u000a  atexit(close_stdout);\u000a  uStack32 = 0;\u000a  pcStack40 = "Kaveh Ghazi";\u000a  pcStack48 = "David MacKenzie";\u000a  pSStack56 = "Joseph Arceneaux";\u000a  parse_long_options(argv,(char *)command_name,"uptime","GNU coreutils",(void (*)(int))Version,usage\u000a                    );\u000a  uStack32 = 0x401f41;\u000a  iVar2 = getopt_long(argv);\u000a  if (iVar2 == -1) {\u000a    if ((int)argv - optind == 1) {\u000a      file = command_name[(long)optind];\u000a    }\u000a    else {\u000a      if ((int)argv != optind) goto LAB_00401f82;\u000a      file = "/var/run/utmp";\u000a    }\u000a    uStack32 = 0x401f6f;\u000a    uptime(file);\u000a    return 0;\u000a  }\u000a  uStack32 = 0x401f82;\u000a  usage(1);\u000aLAB_00401f82:\u000a  uStack32 = 0x401f93;\u000a  uVar3 = dcgettext(0,"extra operand %s",5);\u000a  uStack32 = 0x401fa7;\u000a  file = quote(command_name[(long)optind + 1]);\u000a  uStack32 = 0x401fb8;\u000a  error(0,0,uVar3,file);\u000a  file = (char *)0x1;\u000a  uStack32 = 0x401fc2;\u000a  usage();\u000a  pSStack56 = (char *)0x0;\u000a  uStack32 = uVar3;\u000a  iVar2 = read_utmp(file,(size_t *)&pcStack48,&pSStack56);\u000a  if (iVar2 != 0) {\u000a    puVar4 = (uint *)__errno_location();\u000a    uVar1 = *puVar4;\u000a    file = quotearg_n_style_colon((char *)0x0);\u000a    error(1,(ulong)uVar1,0x407837,file);\u000a  }\u000a  print_uptime((size_t)pcStack48,(STRUCT_UTMP *)pSStack56);\u000a  return extraout_EAX;\u000a}\u000a\u000a
p1053
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV RBX,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [RBX]\nCALL 0x00403eb0\nMOV EDI,0x6\nMOV ESI,0x4074a5\nCALL 0x00401a10\nMOV EDI,0x407541\nMOV ESI,0x407525\nCALL 0x004017f0\nMOV EDI,0x407541\nCALL 0x004017a0\nMOV EDI,0x402480\nCALL 0x004072f0\nMOV R8,qword ptr [0x0060b270]\nMOV EDX,0x4076ee\nMOV ECX,0x40753d\nMOV R9D,0x401c40\nMOV EAX,0x0\nMOV EDI,EBP\nMOV RSI,RBX\nPUSH 0x0\nPUSH 0x40756c\nPUSH 0x40755c\nPUSH 0x40754b\nCALL 0x00403dc0\nADD RSP,0x20\nMOV EDX,0x4074a5\nXOR ECX,ECX\nXOR R8D,R8D\nMOV EDI,EBP\nMOV RSI,RBX\nCALL 0x00401830\nCMP EAX,-0x1\nJNZ 0x00401f78\nMOVSXD RAX,dword ptr [0x0060b2f0]\nSUB EBP,EAX\nCMP EBP,0x1\nJZ 0x00401f64\nTEST EBP,EBP\nJNZ 0x00401f82\nMOV EDI,0x4074a6\nMOV ESI,0x1\nJMP 0x00401f6a\nMOV RDI,qword ptr [RBX + RAX*0x8]\nXOR ESI,ESI\nCALL 0x00401fd0\nXOR EAX,EAX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\nMOV EDI,0x1\nCALL 0x00401c40\nXOR EDI,EDI\nMOV ESI,0x407578\nMOV EDX,0x5\nCALL 0x00401800\nMOV RBP,RAX\nMOVSXD RAX,dword ptr [0x0060b2f0]\nMOV RDI,qword ptr [RBX + RAX*0x8 + 0x8]\nCALL 0x004053a0\nMOV RCX,RAX\nXOR EDI,EDI\nXOR ESI,ESI\nXOR EAX,EAX\nMOV RDX,RBP\nCALL 0x00401a60\nMOV EDI,0x1\nCALL 0x00401c40\nNOP word ptr CS:[RAX + RAX*0x1]\n'
p1054
S'55\n53\n50\n48 89 f3\n89 fd\n48 8b 3b\ne8 f0 1f 00 00\nbf 06 00 00 00\nbe a5 74 40 00\ne8 41 fb ff ff\nbf 41 75 40 00\nbe 25 75 40 00\ne8 12 f9 ff ff\nbf 41 75 40 00\ne8 b8 f8 ff ff\nbf 80 24 40 00\ne8 fe 53 00 00\n4c 8b 05 77 93 20 00\nba ee 76 40 00\nb9 3d 75 40 00\n41 b9 40 1c 40 00\nb8 00 00 00 00\n89 ef\n48 89 de\n6a 00\n68 6c 75 40 00\n68 5c 75 40 00\n68 4b 75 40 00\ne8 97 1e 00 00\n48 83 c4 20\nba a5 74 40 00\n31 c9\n45 31 c0\n89 ef\n48 89 de\ne8 ef f8 ff ff\n83 f8 ff\n75 32\n48 63 05 a3 93 20 00\n29 c5\n83 fd 01\n74 10\n85 ed\n75 2a\nbf a6 74 40 00\nbe 01 00 00 00\neb 06\n48 8b 3c c3\n31 f6\ne8 61 00 00 00\n31 c0\n48 83 c4 08\n5b\n5d\nc3\nbf 01 00 00 00\ne8 be fc ff ff\n31 ff\nbe 78 75 40 00\nba 05 00 00 00\ne8 6d f8 ff ff\n48 89 c5\n48 63 05 53 93 20 00\n48 8b 7c c3 08\ne8 f9 33 00 00\n48 89 c1\n31 ff\n31 f6\n31 c0\n48 89 ea\ne8 a8 fa ff ff\nbf 01 00 00 00\ne8 7e fc ff ff\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n'
p1055
S'.text:0000000000401eb0\n.text:0000000000401eb1\n.text:0000000000401eb2\n.text:0000000000401eb3\n.text:0000000000401eb6\n.text:0000000000401eb8\n.text:0000000000401ebb\n.text:0000000000401ec0\n.text:0000000000401ec5\n.text:0000000000401eca\n.text:0000000000401ecf\n.text:0000000000401ed4\n.text:0000000000401ed9\n.text:0000000000401ede\n.text:0000000000401ee3\n.text:0000000000401ee8\n.text:0000000000401eed\n.text:0000000000401ef2\n.text:0000000000401ef9\n.text:0000000000401efe\n.text:0000000000401f03\n.text:0000000000401f09\n.text:0000000000401f0e\n.text:0000000000401f10\n.text:0000000000401f13\n.text:0000000000401f15\n.text:0000000000401f1a\n.text:0000000000401f1f\n.text:0000000000401f24\n.text:0000000000401f29\n.text:0000000000401f2d\n.text:0000000000401f32\n.text:0000000000401f34\n.text:0000000000401f37\n.text:0000000000401f39\n.text:0000000000401f3c\n.text:0000000000401f41\n.text:0000000000401f44\n.text:0000000000401f46\n.text:0000000000401f4d\n.text:0000000000401f4f\n.text:0000000000401f52\n.text:0000000000401f54\n.text:0000000000401f56\n.text:0000000000401f58\n.text:0000000000401f5d\n.text:0000000000401f62\n.text:0000000000401f64\n.text:0000000000401f68\n.text:0000000000401f6a\n.text:0000000000401f6f\n.text:0000000000401f71\n.text:0000000000401f75\n.text:0000000000401f76\n.text:0000000000401f77\n.text:0000000000401f78\n.text:0000000000401f7d\n.text:0000000000401f82\n.text:0000000000401f84\n.text:0000000000401f89\n.text:0000000000401f8e\n.text:0000000000401f93\n.text:0000000000401f96\n.text:0000000000401f9d\n.text:0000000000401fa2\n.text:0000000000401fa7\n.text:0000000000401faa\n.text:0000000000401fac\n.text:0000000000401fae\n.text:0000000000401fb0\n.text:0000000000401fb3\n.text:0000000000401fb8\n.text:0000000000401fbd\n.text:0000000000401fc2\n'
p1056
tp1057
sS'xcharalloc'
p1058
(S'\n__stdcall xcharalloc(size_t n)\n'
p1059
V\u000avoid * xcharalloc(size_t n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = malloc(n);\u000a  if ((n != 0) && (pvVar1 == (void *)0x0)) {\u000a                    /* WARNING: Subroutine does not return */\u000a    xalloc_die();\u000a  }\u000a  return pvVar1;\u000a}\u000a\u000a
p1060
S'JMP 0x00405cd0\n'
p1061
S'e9 2b ff ff ff\n'
p1062
S'.text:0000000000405da0\n'
p1063
tp1064
sS'c_isupper'
p1065
(S'\n__stdcall c_isupper()\n'
p1066
V\u000a_Bool c_isupper(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x41U < 0x1a);\u000a}\u000a\u000a
p1067
S'ADD EDI,-0x41\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1068
S'83 c7 bf\n83 ff 1a\n0f 92 c0\nc3\n'
p1069
S'.text:0000000000406730\n.text:0000000000406733\n.text:0000000000406736\n.text:0000000000406739\n'
p1070
tp1071
sS'time_t_int_add_ok'
p1072
(S'\n__stdcall time_t_int_add_ok(time_t a)\n'
p1073
V\u000aint time_t_int_add_ok(time_t a)\u000a\u000a{\u000a  uint in_ESI;\u000a  \u000a  return (int)((uint)((ulong)((long)(int)(((uint)a & in_ESI & 1) + ((int)in_ESI >> 1)) + (a >> 1) +\u000a                             0x4000000000000000) >> 0x3f) ^ 1);\u000a}\u000a\u000a
p1074
S'MOV EAX,EDI\nAND EAX,ESI\nSAR RDI,1\nSAR ESI,1\nAND EAX,0x1\nADD EAX,ESI\nMOVSXD RCX,EAX\nADD RCX,RDI\nMOV RAX,0x4000000000000000\nADD RAX,RCX\nSHR RAX,0x3f\nXOR EAX,0x1\nRET\n'
p1075
S'89 f8\n21 f0\n48 d1 ff\nd1 fe\n83 e0 01\n01 f0\n48 63 c8\n48 01 f9\n48 b8 00 00 00 00 00 00 00 40\n48 01 c8\n48 c1 e8 3f\n83 f0 01\nc3\n'
p1076
S'.text:00000000004071f0\n.text:00000000004071f2\n.text:00000000004071f4\n.text:00000000004071f7\n.text:00000000004071f9\n.text:00000000004071fc\n.text:00000000004071fe\n.text:0000000000407201\n.text:0000000000407204\n.text:000000000040720e\n.text:0000000000407211\n.text:0000000000407215\n.text:0000000000407218\n'
p1077
tp1078
sS'c_isalnum'
p1079
(S'\n__stdcall c_isalnum()\n'
p1080
V\u000a_Bool c_isalnum(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (((0x39 < in_EDI - 0x41U) ||\u000a      ((0x3ffffff03ffffffU >> ((ulong)(in_EDI - 0x41U) & 0x1f) & 1) == 0)) && (9 < in_EDI - 0x30U))\u000a  {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1081
S'MOV AL,0x1\nLEA ECX,[RDI + -0x41]\nCMP ECX,0x39\nJA 0x0040664b\nMOV RDX,0x3ffffff03ffffff\nBT RDX,RCX\nJNC 0x0040664b\nRET\nADD EDI,-0x30\nCMP EDI,0xa\nJC 0x0040664a\nXOR EAX,EAX\nRET\n'
p1082
S'b0 01\n8d 4f bf\n83 f9 39\n77 11\n48 ba ff ff ff 03 ff ff ff 03\n48 0f a3 ca\n73 01\nc3\n83 c7 d0\n83 ff 0a\n72 f7\n31 c0\nc3\n'
p1083
S'.text:0000000000406630\n.text:0000000000406632\n.text:0000000000406635\n.text:0000000000406638\n.text:000000000040663a\n.text:0000000000406644\n.text:0000000000406648\n.text:000000000040664a\n.text:000000000040664b\n.text:000000000040664e\n.text:0000000000406651\n.text:0000000000406653\n.text:0000000000406655\n'
p1084
tp1085
sS'__errno_location'
p1086
(S'\n__stdcall __errno_location()\n'
p1087
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_0060b048)();\u000a  return piVar1;\u000a}\u000a\u000a
p1088
S'JMP qword ptr [0x0060b048]\n'
p1089
S'ff 25 32 99 20 00\n'
p1090
S'.plt:0000000000401710\n'
p1091
tp1092
sS'x2nrealloc'
p1093
(S'\n__stdcall x2nrealloc(void * p, size_t * pn, size_t s)\n'
p1094
V\u000avoid * x2nrealloc(void *p,size_t *pn,size_t s)\u000a\u000a{\u000a  undefined auVar1 [16];\u000a  void *pvVar2;\u000a  ulong uVar3;\u000a  \u000a  uVar3 = *pn;\u000a  if (p == (void *)0x0) {\u000a    if (uVar3 == 0) {\u000a      uVar3 = (ulong)(0x80 < s) + SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(s),0);\u000a    }\u000a  }\u000a  else {\u000a    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0xaaaaaaaaaaaaaaaa);\u000a    if (SUB168(auVar1 / ZEXT816(s),0) <= uVar3) {\u000a                    /* WARNING: Subroutine does not return */\u000a      xalloc_die(p,pn,SUB168(auVar1 % ZEXT816(s),0));\u000a    }\u000a    uVar3 = uVar3 + 1 + (uVar3 >> 1);\u000a  }\u000a  *pn = uVar3;\u000a  pvVar2 = xrealloc(p,s * uVar3);\u000a  return pvVar2;\u000a}\u000a\u000a
p1095
S'MOV R8,RDX\nMOV RCX,qword ptr [RSI]\nTEST RDI,RDI\nJZ 0x00405d6c\nMOV RAX,-0x5555555555555556\nXOR EDX,EDX\nDIV R8\nCMP RAX,RCX\nJBE 0x00405d99\nMOV RAX,RCX\nSHR RAX,1\nLEA RCX,[RCX + RAX*0x1 + 0x1]\nJMP 0x00405d8a\nTEST RCX,RCX\nJNZ 0x00405d8a\nMOV EAX,0x80\nXOR EDX,EDX\nDIV R8\nXOR ECX,ECX\nCMP R8,0x80\nSETA CL\nADD RCX,RAX\nMOV qword ptr [RSI],RCX\nIMUL R8,RCX\nMOV RSI,R8\nJMP 0x00405d10\nPUSH RAX\nCALL 0x00405e60\n'
p1096
S'49 89 d0\n48 8b 0e\n48 85 ff\n74 21\n48 b8 aa aa aa aa aa aa aa aa\n31 d2\n49 f7 f0\n48 39 c8\n76 3a\n48 89 c8\n48 d1 e8\n48 8d 4c 01 01\neb 1e\n48 85 c9\n75 19\nb8 80 00 00 00\n31 d2\n49 f7 f0\n31 c9\n49 81 f8 80 00 00 00\n0f 97 c1\n48 01 c1\n48 89 0e\n4c 0f af c1\n4c 89 c6\ne9 77 ff ff ff\n50\ne8 c1 00 00 00\n'
p1097
S'.text:0000000000405d40\n.text:0000000000405d43\n.text:0000000000405d46\n.text:0000000000405d49\n.text:0000000000405d4b\n.text:0000000000405d55\n.text:0000000000405d57\n.text:0000000000405d5a\n.text:0000000000405d5d\n.text:0000000000405d5f\n.text:0000000000405d62\n.text:0000000000405d65\n.text:0000000000405d6a\n.text:0000000000405d6c\n.text:0000000000405d6f\n.text:0000000000405d71\n.text:0000000000405d76\n.text:0000000000405d78\n.text:0000000000405d7b\n.text:0000000000405d7d\n.text:0000000000405d84\n.text:0000000000405d87\n.text:0000000000405d8a\n.text:0000000000405d8d\n.text:0000000000405d91\n.text:0000000000405d94\n.text:0000000000405d99\n.text:0000000000405d9a\n'
p1098
tp1099
sS'quotearg_n_options'
p1100
(S'\n__stdcall quotearg_n_options(char * arg, size_t argsize, quoting_options * options)\n'
p1101
V\u000achar * quotearg_n_options(char *arg,size_t argsize,quoting_options *options)\u000a\u000a{\u000a  int iVar1;\u000a  size_t buffersize;\u000a  slotvec *psVar2;\u000a  undefined4 uVar3;\u000a  undefined4 uVar4;\u000a  undefined4 uVar5;\u000a  int *piVar6;\u000a  size_t n;\u000a  uint *in_RCX;\u000a  char *buffer;\u000a  long lVar7;\u000a  slotvec *p;\u000a  uint uVar8;\u000a  int e;\u000a  \u000a  piVar6 = __errno_location();\u000a  psVar2 = slotvec;\u000a  uVar8 = (uint)((ulong)arg & 0xffffffff);\u000a  if ((int)uVar8 < 0) {\u000a                    /* WARNING: Subroutine does not return */\u000a    abort();\u000a  }\u000a  iVar1 = *piVar6;\u000a  p = slotvec;\u000a  if (nslots <= uVar8) {\u000a    lVar7 = ((ulong)arg & 0xffffffff) + 1;\u000a    p = (slotvec *)0x0;\u000a    if (slotvec != &slotvec0) {\u000a      p = slotvec;\u000a    }\u000a    p = (slotvec *)xrealloc(p,lVar7 * 0x10);\u000a    uVar5 = slotvec0.val._4_4_;\u000a    uVar4 = slotvec0.val._0_4_;\u000a    uVar3 = slotvec0.size._4_4_;\u000a    slotvec = p;\u000a    if (psVar2 == &slotvec0) {\u000a      slotvec = p;\u000a      *(undefined4 *)&p->size = (undefined4)slotvec0.size;\u000a      *(undefined4 *)((long)&p->size + 4) = uVar3;\u000a      *(undefined4 *)&p->val = uVar4;\u000a      *(undefined4 *)((long)&p->val + 4) = uVar5;\u000a    }\u000a    memset(p + (ulong)nslots,0,(lVar7 - (ulong)nslots) * 0x10);\u000a    nslots = uVar8 + 1;\u000a  }\u000a  lVar7 = (long)(int)uVar8;\u000a  buffersize = p[lVar7].size;\u000a  buffer = p[lVar7].val;\u000a  uVar8 = in_RCX[1];\u000a  n = quotearg_buffer_restyled\u000a                (buffer,buffersize,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a                 (char *)(ulong)(uVar8 | 1));\u000a  if (buffersize <= n) {\u000a    n = n + 1;\u000a    p[lVar7].size = n;\u000a    if (buffer != slot0) {\u000a      free(buffer);\u000a    }\u000a    buffer = (char *)xcharalloc(n);\u000a    p[lVar7].val = buffer;\u000a    quotearg_buffer_restyled\u000a              (buffer,n,(char *)argsize,(size_t)options,(char *)(ulong)*in_RCX,\u000a               (char *)(ulong)(uVar8 | 1));\u000a  }\u000a  *piVar6 = iVar1;\u000a  return buffer;\u000a}\u000a\u000a
p1102
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBP,RCX\nMOV R15,RDX\nMOV RBX,RSI\nMOV R12D,EDI\nCALL 0x00401710\nTEST R12D,R12D\nJS 0x00405061\nMOV qword ptr [RSP + 0x30],RAX\nMOV EAX,dword ptr [RAX]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R14,qword ptr [0x0060b280]\nCMP dword ptr [0x0060b288],R12D\nMOV qword ptr [RSP + 0x28],RBP\nMOV qword ptr [RSP + 0x20],R15\nMOV qword ptr [RSP + 0x18],RBX\nJA 0x00404f7b\nLEA EBX,[R12 + 0x1]\nMOV EBP,R12D\nINC RBP\nMOV R13D,0x60b290\nXOR EDI,EDI\nCMP R14,R13\nCMOVNZ RDI,R14\nMOV RSI,RBP\nSHL RSI,0x4\nCALL 0x00405d10\nMOV R15,RAX\nCMP R14,R13\nMOV qword ptr [0x0060b280],R15\nJNZ 0x00404f42\nMOVUPS XMM0,xmmword ptr [0x0060b290]\nMOVUPS xmmword ptr [R15],XMM0\nMOV EAX,dword ptr [0x0060b288]\nSUB RBP,RAX\nSHL RAX,0x4\nMOV RDI,R15\nADD RDI,RAX\nSHL RBP,0x4\nXOR ESI,ESI\nMOV RDX,RBP\nCALL 0x00401890\nMOV dword ptr [0x0060b288],EBX\nMOV R14,R15\nMOV RBP,qword ptr [RSP + 0x28]\nMOV R15,qword ptr [RSP + 0x20]\nMOV RBX,qword ptr [RSP + 0x18]\nMOVSXD R13,R12D\nSHL R13,0x4\nMOV R12,qword ptr [R14 + R13*0x1]\nMOV RDI,qword ptr [R14 + R13*0x1 + 0x8]\nMOV R8D,dword ptr [RBP]\nMOV R9D,dword ptr [RBP + 0x4]\nOR R9D,0x1\nLEA RAX,[RBP + 0x8]\nSUB RSP,0x8\nMOV qword ptr [RSP + 0x18],RDI\nMOV RSI,R12\nMOV RDX,RBX\nMOV RCX,R15\nMOV dword ptr [RSP + 0x14],R9D\nPUSH qword ptr [RBP + 0x30]\nPUSH qword ptr [RBP + 0x28]\nMOV RBP,RAX\nPUSH RBP\nCALL 0x004040d0\nADD RSP,0x20\nMOV R15,RAX\nCMP R12,R15\nJBE 0x00404fdd\nMOV R12,qword ptr [RSP + 0x30]\nMOV EAX,dword ptr [RSP + 0x8]\nMOV RBX,qword ptr [RSP + 0x10]\nJMP 0x0040504b\nLEA RAX,[R14 + R13*0x1]\nLEA R14,[R14 + R13*0x1 + 0x8]\nINC R15\nMOV qword ptr [RAX],R15\nMOV EAX,0x60b390\nMOV RCX,qword ptr [RSP + 0x10]\nCMP RCX,RAX\nMOV R12,qword ptr [RSP + 0x30]\nMOV RDI,RCX\nJZ 0x00405008\nCALL 0x004016e0\nMOV RDI,R15\nCALL 0x00405da0\nMOV RBX,RAX\nMOV qword ptr [R14],RBX\nMOV RAX,qword ptr [RSP + 0x28]\nMOV R8D,dword ptr [RAX]\nSUB RSP,0x8\nMOV RDI,RBX\nMOV RSI,R15\nMOV RDX,qword ptr [RSP + 0x20]\nMOV RCX,qword ptr [RSP + 0x28]\nMOV R9D,dword ptr [RSP + 0x14]\nPUSH qword ptr [RAX + 0x30]\nPUSH qword ptr [RAX + 0x28]\nPUSH RBP\nCALL 0x004040d0\nADD RSP,0x20\nMOV EAX,dword ptr [RSP + 0x8]\nMOV dword ptr [R12],EAX\nMOV RAX,RBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x00401700\n'
p1103
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 cd\n49 89 d7\n48 89 f3\n41 89 fc\ne8 41 c8 ff ff\n45 85 e4\n0f 88 89 01 00 00\n48 89 44 24 30\n8b 00\n89 44 24 08\n4c 8b 35 96 63 20 00\n44 39 25 97 63 20 00\n48 89 6c 24 28\n4c 89 7c 24 20\n48 89 5c 24 18\n77 79\n41 8d 5c 24 01\n44 89 e5\n48 ff c5\n41 bd 90 b2 60 00\n31 ff\n4d 39 ee\n49 0f 45 fe\n48 89 ee\n48 c1 e6 04\ne8 e8 0d 00 00\n49 89 c7\n4d 39 ee\n4c 89 3d 4b 63 20 00\n75 0b\n0f 10 05 52 63 20 00\n41 0f 11 07\n8b 05 40 63 20 00\n48 29 c5\n48 c1 e0 04\n4c 89 ff\n48 01 c7\n48 c1 e5 04\n31 f6\n48 89 ea\ne8 2d c9 ff ff\n89 1d 1f 63 20 00\n4d 89 fe\n48 8b 6c 24 28\n4c 8b 7c 24 20\n48 8b 5c 24 18\n4d 63 ec\n49 c1 e5 04\n4f 8b 24 2e\n4b 8b 7c 2e 08\n44 8b 45 00\n44 8b 4d 04\n41 83 c9 01\n48 8d 45 08\n48 83 ec 08\n48 89 7c 24 18\n4c 89 e6\n48 89 da\n4c 89 f9\n44 89 4c 24 14\nff 75 30\nff 75 28\n48 89 c5\n55\ne8 0f f1 ff ff\n48 83 c4 20\n49 89 c7\n4d 39 fc\n76 10\n4c 8b 64 24 30\n8b 44 24 08\n48 8b 5c 24 10\neb 6e\n4b 8d 04 2e\n4f 8d 74 2e 08\n49 ff c7\n4c 89 38\nb8 90 b3 60 00\n48 8b 4c 24 10\n48 39 c1\n4c 8b 64 24 30\n48 89 cf\n74 05\ne8 d8 c6 ff ff\n4c 89 ff\ne8 90 0d 00 00\n48 89 c3\n49 89 1e\n48 8b 44 24 28\n44 8b 00\n48 83 ec 08\n48 89 df\n4c 89 fe\n48 8b 54 24 20\n48 8b 4c 24 28\n44 8b 4c 24 14\nff 70 30\nff 70 28\n55\ne8 8d f0 ff ff\n48 83 c4 20\n8b 44 24 08\n41 89 04 24\n48 89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 9a c6 ff ff\n'
p1104
S'.text:0000000000404eb0\n.text:0000000000404eb1\n.text:0000000000404eb3\n.text:0000000000404eb5\n.text:0000000000404eb7\n.text:0000000000404eb9\n.text:0000000000404eba\n.text:0000000000404ebe\n.text:0000000000404ec1\n.text:0000000000404ec4\n.text:0000000000404ec7\n.text:0000000000404eca\n.text:0000000000404ecf\n.text:0000000000404ed2\n.text:0000000000404ed8\n.text:0000000000404edd\n.text:0000000000404edf\n.text:0000000000404ee3\n.text:0000000000404eea\n.text:0000000000404ef1\n.text:0000000000404ef6\n.text:0000000000404efb\n.text:0000000000404f00\n.text:0000000000404f02\n.text:0000000000404f07\n.text:0000000000404f0a\n.text:0000000000404f0d\n.text:0000000000404f13\n.text:0000000000404f15\n.text:0000000000404f18\n.text:0000000000404f1c\n.text:0000000000404f1f\n.text:0000000000404f23\n.text:0000000000404f28\n.text:0000000000404f2b\n.text:0000000000404f2e\n.text:0000000000404f35\n.text:0000000000404f37\n.text:0000000000404f3e\n.text:0000000000404f42\n.text:0000000000404f48\n.text:0000000000404f4b\n.text:0000000000404f4f\n.text:0000000000404f52\n.text:0000000000404f55\n.text:0000000000404f59\n.text:0000000000404f5b\n.text:0000000000404f5e\n.text:0000000000404f63\n.text:0000000000404f69\n.text:0000000000404f6c\n.text:0000000000404f71\n.text:0000000000404f76\n.text:0000000000404f7b\n.text:0000000000404f7e\n.text:0000000000404f82\n.text:0000000000404f86\n.text:0000000000404f8b\n.text:0000000000404f8f\n.text:0000000000404f93\n.text:0000000000404f97\n.text:0000000000404f9b\n.text:0000000000404f9f\n.text:0000000000404fa4\n.text:0000000000404fa7\n.text:0000000000404faa\n.text:0000000000404fad\n.text:0000000000404fb2\n.text:0000000000404fb5\n.text:0000000000404fb8\n.text:0000000000404fbb\n.text:0000000000404fbc\n.text:0000000000404fc1\n.text:0000000000404fc5\n.text:0000000000404fc8\n.text:0000000000404fcb\n.text:0000000000404fcd\n.text:0000000000404fd2\n.text:0000000000404fd6\n.text:0000000000404fdb\n.text:0000000000404fdd\n.text:0000000000404fe1\n.text:0000000000404fe6\n.text:0000000000404fe9\n.text:0000000000404fec\n.text:0000000000404ff1\n.text:0000000000404ff6\n.text:0000000000404ff9\n.text:0000000000404ffe\n.text:0000000000405001\n.text:0000000000405003\n.text:0000000000405008\n.text:000000000040500b\n.text:0000000000405010\n.text:0000000000405013\n.text:0000000000405016\n.text:000000000040501b\n.text:000000000040501e\n.text:0000000000405022\n.text:0000000000405025\n.text:0000000000405028\n.text:000000000040502d\n.text:0000000000405032\n.text:0000000000405037\n.text:000000000040503a\n.text:000000000040503d\n.text:000000000040503e\n.text:0000000000405043\n.text:0000000000405047\n.text:000000000040504b\n.text:000000000040504f\n.text:0000000000405052\n.text:0000000000405056\n.text:0000000000405057\n.text:0000000000405059\n.text:000000000040505b\n.text:000000000040505d\n.text:000000000040505f\n.text:0000000000405060\n.text:0000000000405061\n'
p1105
tp1106
sS'strcmp'
p1107
(S'\n__stdcall strcmp(char * __s1, char * __s2)\n'
p1108
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint strcmp(char *__s1,char *__s2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_strcmp_0060b148)();\u000a  return iVar1;\u000a}\u000a\u000a
p1109
S'JMP qword ptr [0x0060b148]\n'
p1110
S'ff 25 32 98 20 00\n'
p1111
S'.plt:0000000000401910\n'
p1112
tp1113
sS'mktime_z'
p1114
(S'\n__stdcall mktime_z(timezone_t tz, tm * tm)\n'
p1115
V\u000atime_t mktime_z(timezone_t tz,tm *tm)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  time_t tVar3;\u000a  timezone_t tz_00;\u000a  tm *ptVar4;\u000a  time_t local_58;\u000a  tm local_50;\u000a  \u000a  if (tz == (timezone_t)0x0) {\u000a    tVar3 = (*(code *)PTR_timegm_0060b1d8)(tm);\u000a    return tVar3;\u000a  }\u000a  tz_00 = set_tz(tz);\u000a  if (tz_00 != (timezone_t)0x0) {\u000a    local_58 = rpl_mktime(tm);\u000a    if (((local_58 != -1) ||\u000a        ((ptVar4 = localtime_r(&local_58,&local_50), ptVar4 != (tm *)0x0 &&\u000a         (iVar2 = equal_tm(tm,(tm *)&local_50), iVar2 != 0)))) &&\u000a       (_Var1 = save_abbr(tz,tm), _Var1 == false)) {\u000a      local_58 = -1;\u000a    }\u000a    _Var1 = revert_tz(tz_00);\u000a    if (_Var1 != false) {\u000a      return local_58;\u000a    }\u000a  }\u000a  return -1;\u000a}\u000a\u000a
p1116
S'PUSH R15\nPUSH R14\nPUSH RBX\nSUB RSP,0x40\nMOV R15,RSI\nMOV RBX,RDI\nTEST RBX,RBX\nJZ 0x004064ff\nMOV RDI,RBX\nCALL 0x004062d0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x00406545\nMOV RDI,R15\nCALL 0x00407220\nMOV qword ptr [RSP],RAX\nCMP RAX,-0x1\nJZ 0x00406510\nMOV RDI,RBX\nMOV RSI,R15\nCALL 0x00406350\nTEST AL,AL\nJNZ 0x00406533\nMOV qword ptr [RSP],-0x1\nJMP 0x00406533\nMOV RDI,R15\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nJMP 0x00401a30\nMOV RDI,RSP\nLEA RSI,[RSP + 0x8]\nCALL 0x00401740\nTEST RAX,RAX\nJZ 0x00406533\nLEA RSI,[RSP + 0x8]\nMOV RDI,R15\nCALL 0x00406560\nTEST EAX,EAX\nJNZ 0x004064e6\nMOV RDI,R14\nCALL 0x00406460\nTEST AL,AL\nJZ 0x00406545\nMOV RAX,qword ptr [RSP]\nJMP 0x0040654c\nMOV RAX,-0x1\nADD RSP,0x40\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1117
S'41 57\n41 56\n53\n48 83 ec 40\n49 89 f7\n48 89 fb\n48 85 db\n74 3b\n48 89 df\ne8 04 fe ff ff\n49 89 c6\n4d 85 f6\n74 71\n4c 89 ff\ne8 44 0d 00 00\n48 89 04 24\n48 83 f8 ff\n74 2a\n48 89 df\n4c 89 fe\ne8 5f fe ff ff\n84 c0\n75 3e\n48 c7 04 24 ff ff ff ff\neb 34\n4c 89 ff\n48 83 c4 40\n5b\n41 5e\n41 5f\ne9 20 b5 ff ff\n48 89 e7\n48 8d 74 24 08\ne8 23 b2 ff ff\n48 85 c0\n74 11\n48 8d 74 24 08\n4c 89 ff\ne8 31 00 00 00\n85 c0\n75 b3\n4c 89 f7\ne8 25 ff ff ff\n84 c0\n74 06\n48 8b 04 24\neb 07\n48 c7 c0 ff ff ff ff\n48 83 c4 40\n5b\n41 5e\n41 5f\nc3\n'
p1118
S'.text:00000000004064b0\n.text:00000000004064b2\n.text:00000000004064b4\n.text:00000000004064b5\n.text:00000000004064b9\n.text:00000000004064bc\n.text:00000000004064bf\n.text:00000000004064c2\n.text:00000000004064c4\n.text:00000000004064c7\n.text:00000000004064cc\n.text:00000000004064cf\n.text:00000000004064d2\n.text:00000000004064d4\n.text:00000000004064d7\n.text:00000000004064dc\n.text:00000000004064e0\n.text:00000000004064e4\n.text:00000000004064e6\n.text:00000000004064e9\n.text:00000000004064ec\n.text:00000000004064f1\n.text:00000000004064f3\n.text:00000000004064f5\n.text:00000000004064fd\n.text:00000000004064ff\n.text:0000000000406502\n.text:0000000000406506\n.text:0000000000406507\n.text:0000000000406509\n.text:000000000040650b\n.text:0000000000406510\n.text:0000000000406513\n.text:0000000000406518\n.text:000000000040651d\n.text:0000000000406520\n.text:0000000000406522\n.text:0000000000406527\n.text:000000000040652a\n.text:000000000040652f\n.text:0000000000406531\n.text:0000000000406533\n.text:0000000000406536\n.text:000000000040653b\n.text:000000000040653d\n.text:000000000040653f\n.text:0000000000406543\n.text:0000000000406545\n.text:000000000040654c\n.text:0000000000406550\n.text:0000000000406551\n.text:0000000000406553\n.text:0000000000406555\n'
p1119
tp1120
sS'set_custom_quoting'
p1121
(S'\n__stdcall set_custom_quoting(quoting_options * o, char * left_quote, char * right_quote)\n'
p1122
V\u000avoid set_custom_quoting(quoting_options *o,char *left_quote,char *right_quote)\u000a\u000a{\u000a  quoting_options *pqVar1;\u000a  \u000a  pqVar1 = &default_quoting_options;\u000a  if (o != (quoting_options *)0x0) {\u000a    pqVar1 = o;\u000a  }\u000a  pqVar1->style = custom_quoting_style;\u000a  if ((left_quote != (char *)0x0) && (right_quote != (char *)0x0)) {\u000a    pqVar1->left_quote = left_quote;\u000a    pqVar1->right_quote = right_quote;\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  abort();\u000a}\u000a\u000a
p1123
S'TEST RDI,RDI\nMOV EAX,0x60b350\nCMOVNZ RAX,RDI\nMOV dword ptr [RAX],0xa\nTEST RSI,RSI\nJZ 0x00404045\nTEST RDX,RDX\nJZ 0x00404045\nMOV qword ptr [RAX + 0x28],RSI\nMOV qword ptr [RAX + 0x30],RDX\nRET\nPUSH RAX\nCALL 0x00401700\n'
p1124
S'48 85 ff\nb8 50 b3 60 00\n48 0f 45 c7\nc7 00 0a 00 00 00\n48 85 f6\n74 0e\n48 85 d2\n74 09\n48 89 70 28\n48 89 50 30\nc3\n50\ne8 b5 d6 ff ff\n'
p1125
S'.text:0000000000404020\n.text:0000000000404023\n.text:0000000000404028\n.text:000000000040402c\n.text:0000000000404032\n.text:0000000000404035\n.text:0000000000404037\n.text:000000000040403a\n.text:000000000040403c\n.text:0000000000404040\n.text:0000000000404044\n.text:0000000000404045\n.text:0000000000404046\n'
p1126
tp1127
sS'c_isalpha'
p1128
(S'\n__stdcall c_isalpha()\n'
p1129
V\u000a_Bool c_isalpha(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  if (in_EDI - 0x41U < 0x3a) {\u000a    return (_Bool)((byte)(0x3ffffff03ffffff >> ((byte)(in_EDI - 0x41U) & 0x3f)) & 1);\u000a  }\u000a  return false;\u000a}\u000a\u000a
p1130
S'ADD EDI,-0x41\nCMP EDI,0x39\nJA 0x0040667b\nMOV RAX,0x3ffffff03ffffff\nMOV ECX,EDI\nSHR RAX,CL\nAND EAX,0x1\nRET\nXOR EAX,EAX\nRET\n'
p1131
S'83 c7 bf\n83 ff 39\n77 13\n48 b8 ff ff ff 03 ff ff ff 03\n89 f9\n48 d3 e8\n83 e0 01\nc3\n31 c0\nc3\n'
p1132
S'.text:0000000000406660\n.text:0000000000406663\n.text:0000000000406666\n.text:0000000000406668\n.text:0000000000406672\n.text:0000000000406674\n.text:0000000000406677\n.text:000000000040667a\n.text:000000000040667b\n.text:000000000040667d\n'
p1133
tp1134
sS'quotearg_custom_mem'
p1135
(S'\n__stdcall quotearg_custom_mem(char * left_quote, char * right_quote, char * arg, size_t argsize)\n'
p1136
V\u000achar * quotearg_custom_mem(char *left_quote,char *right_quote,char *arg,size_t argsize)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n_custom_mem((char *)0x0,left_quote,right_quote,(size_t)arg);\u000a  return pcVar1;\u000a}\u000a\u000a
p1137
S'MOV RAX,RCX\nMOV RCX,RDX\nMOV RDX,RSI\nMOV RSI,RDI\nXOR EDI,EDI\nMOV R8,RAX\nJMP 0x004052c0\n'
p1138
S'48 89 c8\n48 89 d1\n48 89 f2\n48 89 fe\n31 ff\n49 89 c0\ne9 5a ff ff ff\n'
p1139
S'.text:0000000000405350\n.text:0000000000405353\n.text:0000000000405356\n.text:0000000000405359\n.text:000000000040535c\n.text:000000000040535e\n.text:0000000000405361\n'
p1140
tp1141
sS'dcngettext'
p1142
(S'\n__stdcall dcngettext()\n'
p1143
V\u000avoid dcngettext(void)\u000a\u000a{\u000a  (*(code *)PTR_dcngettext_0060b210)();\u000a  return;\u000a}\u000a\u000a
p1144
S'JMP qword ptr [0x0060b210]\n'
p1145
S'ff 25 6a 97 20 00\n'
p1146
S'.plt:0000000000401aa0\n'
p1147
tp1148
sS'c_locale'
p1149
(S'\n__stdcall c_locale()\n'
p1150
V\u000alocale_t c_locale(void)\u000a\u000a{\u000a  if (c_locale_cache == (locale_t)0x0) {\u000a    c_locale_cache = (locale_t)newlocale(0x1fbf,"C",(__locale_t)0x0);\u000a  }\u000a  return c_locale_cache;\u000a}\u000a\u000a
p1151
S'CMP qword ptr [0x0060b330],0x0\nJNZ 0x00402457\nPUSH RAX\nMOV EDI,0x1fbf\nMOV ESI,0x407825\nXOR EDX,EDX\nCALL 0x00401850\nMOV qword ptr [0x0060b330],RAX\nADD RSP,0x8\nMOV RAX,qword ptr [0x0060b330]\nRET\n'
p1152
S'48 83 3d f8 8e 20 00 00\n75 1d\n50\nbf bf 1f 00 00\nbe 25 78 40 00\n31 d2\ne8 04 f4 ff ff\n48 89 05 dd 8e 20 00\n48 83 c4 08\n48 8b 05 d2 8e 20 00\nc3\n'
p1153
S'.text:0000000000402430\n.text:0000000000402438\n.text:000000000040243a\n.text:000000000040243b\n.text:0000000000402440\n.text:0000000000402445\n.text:0000000000402447\n.text:000000000040244c\n.text:0000000000402453\n.text:0000000000402457\n.text:000000000040245e\n'
p1154
tp1155
sS'rpl_calloc'
p1156
(S'\n__stdcall rpl_calloc(size_t n, size_t s)\n'
p1157
V\u000avoid * rpl_calloc(size_t n,size_t s)\u000a\u000a{\u000a  void *pvVar1;\u000a  size_t sVar2;\u000a  int *piVar3;\u000a  size_t sVar4;\u000a  \u000a  sVar2 = 1;\u000a  if (n == 0) {\u000a    sVar4 = 1;\u000a  }\u000a  else {\u000a    sVar4 = 1;\u000a    if ((s != 0) && (sVar2 = s, sVar4 = n, (s * n) / s != n)) {\u000a      piVar3 = __errno_location();\u000a      *piVar3 = 0xc;\u000a      return (void *)0x0;\u000a    }\u000a  }\u000a  pvVar1 = (void *)(*(code *)PTR_calloc_0060b140)(sVar4,sVar2);\u000a  return pvVar1;\u000a}\u000a\u000a
p1158
S'TEST RDI,RDI\nMOV EAX,0x1\nJZ 0x00405ecb\nTEST RSI,RSI\nMOV ECX,0x1\nJZ 0x00405ed0\nMOV RAX,RSI\nIMUL RAX,RDI\nXOR EDX,EDX\nDIV RSI\nCMP RAX,RDI\nMOV RAX,RSI\nMOV RCX,RDI\nJZ 0x00405ed0\nPUSH RAX\nCALL 0x00401710\nMOV dword ptr [RAX],0xc\nXOR EAX,EAX\nPOP RCX\nRET\nMOV ECX,0x1\nMOV RDI,RCX\nMOV RSI,RAX\nJMP 0x00401900\n'
p1159
S'48 85 ff\nb8 01 00 00 00\n74 31\n48 85 f6\nb9 01 00 00 00\n74 2c\n48 89 f0\n48 0f af c7\n31 d2\n48 f7 f6\n48 39 f8\n48 89 f0\n48 89 f9\n74 15\n50\ne8 4f b8 ff ff\nc7 00 0c 00 00 00\n31 c0\n59\nc3\nb9 01 00 00 00\n48 89 cf\n48 89 c6\ne9 25 ba ff ff\n'
p1160
S'.text:0000000000405e90\n.text:0000000000405e93\n.text:0000000000405e98\n.text:0000000000405e9a\n.text:0000000000405e9d\n.text:0000000000405ea2\n.text:0000000000405ea4\n.text:0000000000405ea7\n.text:0000000000405eab\n.text:0000000000405ead\n.text:0000000000405eb0\n.text:0000000000405eb3\n.text:0000000000405eb6\n.text:0000000000405eb9\n.text:0000000000405ebb\n.text:0000000000405ebc\n.text:0000000000405ec1\n.text:0000000000405ec7\n.text:0000000000405ec9\n.text:0000000000405eca\n.text:0000000000405ecb\n.text:0000000000405ed0\n.text:0000000000405ed3\n.text:0000000000405ed6\n'
p1161
tp1162
sS'memset'
p1163
(S'\n__stdcall memset(void * __s, int __c, size_t __n)\n'
p1164
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid * memset(void *__s,int __c,size_t __n)\u000a\u000a{\u000a  void *pvVar1;\u000a  \u000a  pvVar1 = (void *)(*(code *)PTR_memset_0060b108)();\u000a  return pvVar1;\u000a}\u000a\u000a
p1165
S'JMP qword ptr [0x0060b108]\n'
p1166
S'ff 25 72 98 20 00\n'
p1167
S'.plt:0000000000401890\n'
p1168
tp1169
sS'getc_unlocked'
p1170
(S'\n__stdcall getc_unlocked(FILE * __stream)\n'
p1171
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getc_unlocked(FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getc_unlocked_0060b080)();\u000a  return iVar1;\u000a}\u000a\u000a
p1172
S'JMP qword ptr [0x0060b080]\n'
p1173
S'ff 25 fa 98 20 00\n'
p1174
S'.plt:0000000000401780\n'
p1175
tp1176
sS'desirable_utmp_entry'
p1177
(S'\n__stdcall desirable_utmp_entry(STRUCT_UTMP * u)\n'
p1178
V\u000a_Bool desirable_utmp_entry(STRUCT_UTMP *u)\u000a\u000a{\u000a  undefined uVar1;\u000a  int iVar2;\u000a  int *piVar3;\u000a  ulong in_RSI;\u000a  bool bVar4;\u000a  \u000a  if (u->ut_user[0] == 0) {\u000a    bVar4 = false;\u000a  }\u000a  else {\u000a    bVar4 = u->ut_type == 7;\u000a  }\u000a  if (((in_RSI & 2) == 0) || (bVar4)) {\u000a    if ((((in_RSI & 1) != 0) &&\u000a        (((bVar4 && (0 < u->ut_pid)) && (iVar2 = kill(u->ut_pid,0), iVar2 < 0)))) &&\u000a       (piVar3 = __errno_location(), *piVar3 == 3)) {\u000a      return false;\u000a    }\u000a    uVar1 = 1;\u000a  }\u000a  else {\u000a    uVar1 = 0;\u000a  }\u000a  return (_Bool)uVar1;\u000a}\u000a\u000a
p1179
S'CMP byte ptr [RDI + 0x2c],0x0\nJZ 0x00406141\nMOVZX EAX,word ptr [RDI]\nCMP EAX,0x7\nSETZ AL\nJMP 0x00406143\nXOR EAX,EAX\nPUSH RAX\nTEST SIL,0x2\nJZ 0x00406152\nTEST AL,AL\nJNZ 0x00406152\nXOR EAX,EAX\nJMP 0x0040617e\nTEST SIL,0x1\nJZ 0x0040617c\nXOR AL,0x1\nJNZ 0x0040617c\nMOV EDI,dword ptr [RDI + 0x4]\nTEST EDI,EDI\nJLE 0x0040617c\nXOR ESI,ESI\nCALL 0x00401960\nTEST EAX,EAX\nJNS 0x0040617c\nCALL 0x00401710\nCMP dword ptr [RAX],0x3\nJNZ 0x0040617c\nXOR EAX,EAX\nJMP 0x0040617e\nMOV AL,0x1\nPOP RCX\nRET\n'
p1180
S'80 7f 2c 00\n74 0b\n0f b7 07\n83 f8 07\n0f 94 c0\neb 02\n31 c0\n50\n40 f6 c6 02\n74 08\n84 c0\n75 04\n31 c0\neb 2c\n40 f6 c6 01\n74 24\n34 01\n75 20\n8b 7f 04\n85 ff\n7e 19\n31 f6\ne8 f6 b7 ff ff\n85 c0\n79 0e\ne8 9d b5 ff ff\n83 38 03\n75 04\n31 c0\neb 02\nb0 01\n59\nc3\n'
p1181
S'.text:0000000000406130\n.text:0000000000406134\n.text:0000000000406136\n.text:0000000000406139\n.text:000000000040613c\n.text:000000000040613f\n.text:0000000000406141\n.text:0000000000406143\n.text:0000000000406144\n.text:0000000000406148\n.text:000000000040614a\n.text:000000000040614c\n.text:000000000040614e\n.text:0000000000406150\n.text:0000000000406152\n.text:0000000000406156\n.text:0000000000406158\n.text:000000000040615a\n.text:000000000040615c\n.text:000000000040615f\n.text:0000000000406161\n.text:0000000000406163\n.text:0000000000406165\n.text:000000000040616a\n.text:000000000040616c\n.text:000000000040616e\n.text:0000000000406173\n.text:0000000000406176\n.text:0000000000406178\n.text:000000000040617a\n.text:000000000040617c\n.text:000000000040617e\n.text:000000000040617f\n'
p1182
tp1183
sS'c_isascii'
p1184
(S'\n__stdcall c_isascii()\n'
p1185
V\u000a_Bool c_isascii(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  return (_Bool)(in_EDI < 0x80);\u000a}\u000a\u000a
p1186
S'CMP EDI,0x80\nSETC AL\nRET\n'
p1187
S'81 ff 80 00 00 00\n0f 92 c0\nc3\n'
p1188
S'.text:0000000000406680\n.text:0000000000406686\n.text:0000000000406689\n'
p1189
tp1190
sS'getenv_TZ'
p1191
(S'\n__stdcall getenv_TZ()\n'
p1192
V\u000achar * getenv_TZ(void)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = getenv("TZ");\u000a  return pcVar1;\u000a}\u000a\u000a
p1193
S'MOV EDI,0x4085e0\nJMP 0x004016d0\n'
p1194
S'bf e0 85 40 00\ne9 16 b1 ff ff\n'
p1195
S'.text:00000000004065b0\n.text:00000000004065b5\n'
p1196
tp1197
sS'fgets_unlocked'
p1198
(S'\n__stdcall fgets_unlocked(char * __s, int __n, FILE * __stream)\n'
p1199
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * fgets_unlocked(char *__s,int __n,FILE *__stream)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_fgets_unlocked_0060b188)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1200
S'JMP qword ptr [0x0060b188]\n'
p1201
S'ff 25 f2 97 20 00\n'
p1202
S'.plt:0000000000401990\n'
p1203
tp1204
sS'__ctype_b_loc'
p1205
(S'\n__stdcall __ctype_b_loc()\n'
p1206
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0060b258)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p1207
S'JMP qword ptr [0x0060b258]\n'
p1208
S'ff 25 22 97 20 00\n'
p1209
S'.plt:0000000000401b30\n'
p1210
tp1211
sS'quotearg'
p1212
(S'\n__stdcall quotearg(char * arg)\n'
p1213
V\u000achar * quotearg(char *arg)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = quotearg_n((char *)0x0);\u000a  return pcVar1;\u000a}\u000a\u000a
p1214
S'MOV RAX,RDI\nXOR EDI,EDI\nMOV RSI,RAX\nJMP 0x00404ea0\n'
p1215
S'48 89 f8\n31 ff\n48 89 c6\ne9 13 fe ff ff\n'
p1216
S'.text:0000000000405080\n.text:0000000000405083\n.text:0000000000405085\n.text:0000000000405088\n'
p1217
tp1218
sS'equal_tm'
p1219
(S'\n__stdcall equal_tm(tm * a, tm * b)\n'
p1220
V\u000aint equal_tm(tm *a,tm *b)\u000a\u000a{\u000a  uint uVar1;\u000a  uint uVar2;\u000a  uint uVar3;\u000a  uint uVar4;\u000a  uint uVar5;\u000a  uint uVar6;\u000a  uint uVar7;\u000a  uint uVar8;\u000a  uint uVar9;\u000a  uint uVar10;\u000a  uint uVar11;\u000a  uint uVar12;\u000a  _Bool _Var13;\u000a  \u000a  uVar1 = b->tm_sec;\u000a  uVar2 = b->tm_min;\u000a  uVar3 = a->tm_sec;\u000a  uVar4 = a->tm_min;\u000a  uVar5 = b->tm_hour;\u000a  uVar6 = a->tm_hour;\u000a  uVar7 = b->tm_mday;\u000a  uVar8 = a->tm_mday;\u000a  uVar9 = b->tm_mon;\u000a  uVar10 = a->tm_mon;\u000a  uVar11 = b->tm_year;\u000a  uVar12 = a->tm_year;\u000a  _Var13 = isdst_differ();\u000a  return (int)(uint)(((uint)_Var13 |\u000a                     uVar11 ^ uVar12 | uVar9 ^ uVar10 |\u000a                     uVar7 ^ uVar8 | uVar5 ^ uVar6 | uVar2 ^ uVar4 | uVar1 ^ uVar3) == 0);\u000a}\u000a\u000a
p1221
S'PUSH RBX\nMOV EAX,dword ptr [RSI]\nMOV ECX,dword ptr [RSI + 0x4]\nXOR EAX,dword ptr [RDI]\nXOR ECX,dword ptr [RDI + 0x4]\nOR ECX,EAX\nMOV EAX,dword ptr [RSI + 0x8]\nXOR EAX,dword ptr [RDI + 0x8]\nMOV EDX,dword ptr [RSI + 0xc]\nXOR EDX,dword ptr [RDI + 0xc]\nOR EDX,EAX\nOR EDX,ECX\nMOV EAX,dword ptr [RSI + 0x10]\nXOR EAX,dword ptr [RDI + 0x10]\nMOV EBX,dword ptr [RSI + 0x14]\nXOR EBX,dword ptr [RDI + 0x14]\nOR EBX,EAX\nOR EBX,EDX\nMOV EDI,dword ptr [RDI + 0x20]\nMOV ESI,dword ptr [RSI + 0x20]\nCALL 0x00406610\nMOVZX ECX,AL\nXOR EAX,EAX\nOR ECX,EBX\nSETZ AL\nPOP RBX\nRET\n'
p1222
S'53\n8b 06\n8b 4e 04\n33 07\n33 4f 04\n09 c1\n8b 46 08\n33 47 08\n8b 56 0c\n33 57 0c\n09 c2\n09 ca\n8b 46 10\n33 47 10\n8b 5e 14\n33 5f 14\n09 c3\n09 d3\n8b 7f 20\n8b 76 20\ne8 78 00 00 00\n0f b6 c8\n31 c0\n09 d9\n0f 94 c0\n5b\nc3\n'
p1223
S'.text:0000000000406560\n.text:0000000000406561\n.text:0000000000406563\n.text:0000000000406566\n.text:0000000000406568\n.text:000000000040656b\n.text:000000000040656d\n.text:0000000000406570\n.text:0000000000406573\n.text:0000000000406576\n.text:0000000000406579\n.text:000000000040657b\n.text:000000000040657d\n.text:0000000000406580\n.text:0000000000406583\n.text:0000000000406586\n.text:0000000000406589\n.text:000000000040658b\n.text:000000000040658d\n.text:0000000000406590\n.text:0000000000406593\n.text:0000000000406598\n.text:000000000040659b\n.text:000000000040659d\n.text:000000000040659f\n.text:00000000004065a2\n.text:00000000004065a3\n'
p1224
tp1225
sS'_start'
p1226
(S'\n__stdcall _start()\n'
p1227
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_0060aff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p1228
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4072e0\nMOV RCX,0x407270\nMOV RDI,0x401eb0\nCALL qword ptr [0x0060aff0]\nHLT\n'
p1229
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 e0 72 40 00\n48 c7 c1 70 72 40 00\n48 c7 c7 b0 1e 40 00\nff 15 86 94 20 00\nf4\n'
p1230
S'.text:0000000000401b40\n.text:0000000000401b42\n.text:0000000000401b45\n.text:0000000000401b46\n.text:0000000000401b49\n.text:0000000000401b4d\n.text:0000000000401b4e\n.text:0000000000401b4f\n.text:0000000000401b56\n.text:0000000000401b5d\n.text:0000000000401b64\n.text:0000000000401b6a\n'
p1231
tp1232
sS'c_iscntrl'
p1233
(S'\n__stdcall c_iscntrl()\n'
p1234
V\u000a_Bool c_iscntrl(void)\u000a\u000a{\u000a  uint in_EDI;\u000a  \u000a  if ((0x1f < in_EDI) && (in_EDI != 0x7f)) {\u000a    return false;\u000a  }\u000a  return true;\u000a}\u000a\u000a
p1235
S'MOV AL,0x1\nCMP EDI,0x20\nJNC 0x004066a8\nRET\nCMP EDI,0x7f\nJZ 0x004066a7\nXOR EAX,EAX\nRET\n'
p1236
S'b0 01\n83 ff 20\n73 01\nc3\n83 ff 7f\n74 fa\n31 c0\nc3\n'
p1237
S'.text:00000000004066a0\n.text:00000000004066a2\n.text:00000000004066a5\n.text:00000000004066a7\n.text:00000000004066a8\n.text:00000000004066ab\n.text:00000000004066ad\n.text:00000000004066af\n'
p1238
tp1239
sS'c_isblank'
p1240
(S'\n__stdcall c_isblank()\n'
p1241
V\u000a_Bool c_isblank(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI == 9 || in_EDI == 0x20);\u000a}\u000a\u000a
p1242
S'CMP EDI,0x20\nSETZ CL\nCMP EDI,0x9\nSETZ AL\nOR AL,CL\nRET\n'
p1243
S'83 ff 20\n0f 94 c1\n83 ff 09\n0f 94 c0\n08 c8\nc3\n'
p1244
S'.text:0000000000406690\n.text:0000000000406693\n.text:0000000000406696\n.text:0000000000406699\n.text:000000000040669c\n.text:000000000040669e\n'
p1245
tp1246
sS'atexit'
p1247
(S'\n__stdcall atexit(__func * __func)\n'
p1248
V\u000a/* WARNING: Removing unreachable block (ram,0x00407310) */\u000a\u000aint atexit(void (*__func)(int,void *))\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR___cxa_atexit_0060b220)(__func,0,__dso_handle);\u000a  return iVar1;\u000a}\u000a\u000a
p1249
S'MOV RAX,0x60b268\nTEST RAX,RAX\nJZ 0x00407310\nMOV RDX,qword ptr [RAX]\nXOR ESI,ESI\nJMP 0x00401ac0\nXOR EDX,EDX\nXOR ESI,ESI\nJMP 0x00401ac0\n'
p1250
S'48 c7 c0 68 b2 60 00\n48 85 c0\n74 14\n48 8b 10\n31 f6\ne9 ba a7 ff ff\n31 d2\n31 f6\ne9 a7 a7 ff ff\n'
p1251
S'.text:00000000004072f0\n.text:00000000004072f7\n.text:00000000004072fa\n.text:00000000004072fc\n.text:00000000004072ff\n.text:0000000000407301\n.text:0000000000407310\n.text:0000000000407312\n.text:0000000000407314\n'
p1252
tp1253
sS'fdopen'
p1254
(S'\n__stdcall fdopen(int __fd, char * __modes)\n'
p1255
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aFILE * fdopen(int __fd,char *__modes)\u000a\u000a{\u000a  FILE *pFVar1;\u000a  \u000a  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0060b1c0)();\u000a  return pFVar1;\u000a}\u000a\u000a
p1256
S'JMP qword ptr [0x0060b1c0]\n'
p1257
S'ff 25 ba 97 20 00\n'
p1258
S'.plt:0000000000401a00\n'
p1259
tp1260
sS'error'
p1261
(S'\n__stdcall error()\n'
p1262
V\u000avoid error(void)\u000a\u000a{\u000a  (*(code *)PTR_error_0060b1f0)();\u000a  return;\u000a}\u000a\u000a
p1263
S'JMP qword ptr [0x0060b1f0]\n'
p1264
S'ff 25 8a 97 20 00\n'
p1265
S'.plt:0000000000401a60\n'
p1266
tp1267
sS'isdst_differ'
p1268
(S'\n__stdcall isdst_differ()\n'
p1269
V\u000aint isdst_differ(void)\u000a\u000a{\u000a  uint in_ESI;\u000a  uint in_EDI;\u000a  \u000a  return (int)(uint)(-1 < (int)(in_ESI | in_EDI) && (in_ESI == 0) != (in_EDI == 0));\u000a}\u000a\u000a
p1270
S'TEST EDI,EDI\nSETZ AL\nTEST ESI,ESI\nSETZ CL\nXOR CL,AL\nOR ESI,EDI\nSETNS AL\nAND AL,CL\nMOVZX EAX,AL\nRET\n'
p1271
S'85 ff\n0f 94 c0\n85 f6\n0f 94 c1\n30 c1\n09 fe\n0f 99 c0\n20 c8\n0f b6 c0\nc3\n'
p1272
S'.text:00000000004071d0\n.text:00000000004071d2\n.text:00000000004071d5\n.text:00000000004071d7\n.text:00000000004071da\n.text:00000000004071dc\n.text:00000000004071de\n.text:00000000004071e1\n.text:00000000004071e3\n.text:00000000004071e6\n'
p1273
tp1274
sS'strcaseeq6'
p1275
(S'\n__stdcall strcaseeq6()\n'
p1276
V\u000aint strcaseeq6(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  uint in_ESI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 6) != (char)in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 6) & 0xffffffdfU) != in_ESI) {\u000a      return 0;\u000a    }\u000a  }\u000a  if ((char)in_ESI == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq7();\u000a  return iVar2;\u000a}\u000a\u000a
p1277
S'PUSH RBP\nPUSH RBX\nPUSH RAX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x6]\nTEST AL,AL\nJZ 0x00405742\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405749\nJMP 0x0040575e\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040575e\nTEST BPL,BPL\nJZ 0x00405759\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP RBP\nJMP 0x00405770\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP RBP\nRET\n'
p1278
S'55\n53\n50\n89 f5\n48 89 fb\n89 ef\ne8 01 10 00 00\n0f be 4b 06\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1c\n31 c0\n40 38 e9\n75 15\n40 84 ed\n74 0b\n48 89 df\n48 83 c4 08\n5b\n5d\neb 17\nb8 01 00 00 00\n48 83 c4 08\n5b\n5d\nc3\n'
p1279
S'.text:0000000000405720\n.text:0000000000405721\n.text:0000000000405722\n.text:0000000000405723\n.text:0000000000405725\n.text:0000000000405728\n.text:000000000040572a\n.text:000000000040572f\n.text:0000000000405733\n.text:0000000000405735\n.text:0000000000405737\n.text:000000000040573a\n.text:000000000040573c\n.text:000000000040573e\n.text:0000000000405740\n.text:0000000000405742\n.text:0000000000405744\n.text:0000000000405747\n.text:0000000000405749\n.text:000000000040574c\n.text:000000000040574e\n.text:0000000000405751\n.text:0000000000405755\n.text:0000000000405756\n.text:0000000000405757\n.text:0000000000405759\n.text:000000000040575e\n.text:0000000000405762\n.text:0000000000405763\n.text:0000000000405764\n'
p1280
tp1281
sS'strcaseeq5'
p1282
(S'\n__stdcall strcaseeq5()\n'
p1283
V\u000aint strcaseeq5(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 5) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 5) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq6();\u000a  return iVar2;\u000a}\u000a\u000a
p1284
S'PUSH RBP\nPUSH R14\nPUSH RBX\nMOV R14D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x5]\nTEST AL,AL\nJZ 0x004056f6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004056fd\nJMP 0x00405714\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405714\nTEST BPL,BPL\nJZ 0x0040570f\nMOVSX ESI,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R14\nPOP RBP\nJMP 0x00405720\nMOV EAX,0x1\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p1285
S'55\n41 56\n53\n41 89 d6\n89 f5\n48 89 fb\n89 ef\ne8 4d 10 00 00\n0f be 4b 05\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 1e\n31 c0\n40 38 e9\n75 17\n40 84 ed\n74 0d\n41 0f be f6\n48 89 df\n5b\n41 5e\n5d\neb 11\nb8 01 00 00 00\n5b\n41 5e\n5d\nc3\n'
p1286
S'.text:00000000004056d0\n.text:00000000004056d1\n.text:00000000004056d3\n.text:00000000004056d4\n.text:00000000004056d7\n.text:00000000004056d9\n.text:00000000004056dc\n.text:00000000004056de\n.text:00000000004056e3\n.text:00000000004056e7\n.text:00000000004056e9\n.text:00000000004056eb\n.text:00000000004056ee\n.text:00000000004056f0\n.text:00000000004056f2\n.text:00000000004056f4\n.text:00000000004056f6\n.text:00000000004056f8\n.text:00000000004056fb\n.text:00000000004056fd\n.text:0000000000405700\n.text:0000000000405702\n.text:0000000000405706\n.text:0000000000405709\n.text:000000000040570a\n.text:000000000040570c\n.text:000000000040570d\n.text:000000000040570f\n.text:0000000000405714\n.text:0000000000405715\n.text:0000000000405717\n.text:0000000000405718\n'
p1287
tp1288
sS'strcaseeq7'
p1289
(S'\n__stdcall strcaseeq7()\n'
p1290
V\u000aint strcaseeq7(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  if (_Var1 == false) {\u000a    if (*(byte *)(in_RDI + 7) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  else {\u000a    if ((*(byte *)(in_RDI + 7) & 0xdf) == 0) {\u000a      return 1;\u000a    }\u000a  }\u000a  return 0;\u000a}\u000a\u000a
p1291
S'PUSH RBX\nMOV RBX,RDI\nXOR EDI,EDI\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x7]\nTEST AL,AL\nJZ 0x00405792\nTEST ECX,0xffffffdf\nJNZ 0x00405796\nMOV EAX,0x1\nPOP RBX\nRET\nTEST CL,CL\nJZ 0x0040579a\nXOR EAX,EAX\nPOP RBX\nRET\nMOV EAX,0x1\nPOP RBX\nRET\n'
p1292
S'53\n48 89 fb\n31 ff\ne8 b5 0f 00 00\n0f be 4b 07\n84 c0\n74 0f\nf7 c1 df ff ff ff\n75 0b\nb8 01 00 00 00\n5b\nc3\n84 c9\n74 04\n31 c0\n5b\nc3\nb8 01 00 00 00\n5b\nc3\n'
p1293
S'.text:0000000000405770\n.text:0000000000405771\n.text:0000000000405774\n.text:0000000000405776\n.text:000000000040577b\n.text:000000000040577f\n.text:0000000000405781\n.text:0000000000405783\n.text:0000000000405789\n.text:000000000040578b\n.text:0000000000405790\n.text:0000000000405791\n.text:0000000000405792\n.text:0000000000405794\n.text:0000000000405796\n.text:0000000000405798\n.text:0000000000405799\n.text:000000000040579a\n.text:000000000040579f\n.text:00000000004057a0\n'
p1294
tp1295
sS'strcaseeq0'
p1296
(S'\n__stdcall strcaseeq0()\n'
p1297
V\u000aint strcaseeq0(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  char *in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*in_RDI != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*in_RDI & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    iVar2 = 1;\u000a  }\u000a  else {\u000a    iVar2 = strcaseeq1();\u000a  }\u000a  return iVar2;\u000a}\u000a\u000a
p1298
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX]\nTEST AL,AL\nJZ 0x004054a5\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004054ac\nJMP 0x004054e0\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004054e0\nTEST BPL,BPL\nJZ 0x004054db\nMOV AL,byte ptr [RSP + 0x40]\nMOVSX ECX,byte ptr [RSP + 0x48]\nMOV dword ptr [RSP],ECX\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOVSX R9D,AL\nMOV RDI,RBX\nCALL 0x004054f0\nJMP 0x004054e0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1299
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 9d 12 00 00\n0f be 0b\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3b\n31 c0\n40 38 e9\n75 34\n40 84 ed\n74 2a\n8a 44 24 40\n0f be 4c 24 48\n89 0c 24\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n44 0f be c8\n48 89 df\ne8 17 00 00 00\neb 05\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1300
S'.text:0000000000405470\n.text:0000000000405471\n.text:0000000000405473\n.text:0000000000405475\n.text:0000000000405477\n.text:0000000000405479\n.text:000000000040547a\n.text:000000000040547b\n.text:000000000040547e\n.text:0000000000405481\n.text:0000000000405484\n.text:0000000000405487\n.text:0000000000405489\n.text:000000000040548c\n.text:000000000040548e\n.text:0000000000405493\n.text:0000000000405496\n.text:0000000000405498\n.text:000000000040549a\n.text:000000000040549d\n.text:000000000040549f\n.text:00000000004054a1\n.text:00000000004054a3\n.text:00000000004054a5\n.text:00000000004054a7\n.text:00000000004054aa\n.text:00000000004054ac\n.text:00000000004054af\n.text:00000000004054b1\n.text:00000000004054b5\n.text:00000000004054ba\n.text:00000000004054bd\n.text:00000000004054c1\n.text:00000000004054c5\n.text:00000000004054c9\n.text:00000000004054cd\n.text:00000000004054d1\n.text:00000000004054d4\n.text:00000000004054d9\n.text:00000000004054db\n.text:00000000004054e0\n.text:00000000004054e4\n.text:00000000004054e5\n.text:00000000004054e7\n.text:00000000004054e9\n.text:00000000004054eb\n.text:00000000004054ed\n.text:00000000004054ee\n'
p1301
tp1302
sS'strcaseeq2'
p1303
(S'\n__stdcall strcaseeq2()\n'
p1304
V\u000aint strcaseeq2(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 2) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 2) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq3();\u000a  return iVar2;\u000a}\u000a\u000a
p1305
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV R14D,R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x2]\nTEST AL,AL\nJZ 0x004055b6\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004055bd\nJMP 0x004055ea\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004055ea\nTEST BPL,BPL\nJZ 0x004055e5\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405600\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1306
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n45 89 ce\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n89 ef\ne8 8d 11 00 00\n0f be 4b 02\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 34\n31 c0\n40 38 e9\n75 2d\n40 84 ed\n74 23\n41 0f be f5\n41 0f be d4\n41 0f be cf\n45 0f be c6\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1307
S'.text:0000000000405580\n.text:0000000000405581\n.text:0000000000405583\n.text:0000000000405585\n.text:0000000000405587\n.text:0000000000405589\n.text:000000000040558a\n.text:000000000040558b\n.text:000000000040558e\n.text:0000000000405591\n.text:0000000000405594\n.text:0000000000405597\n.text:0000000000405599\n.text:000000000040559c\n.text:000000000040559e\n.text:00000000004055a3\n.text:00000000004055a7\n.text:00000000004055a9\n.text:00000000004055ab\n.text:00000000004055ae\n.text:00000000004055b0\n.text:00000000004055b2\n.text:00000000004055b4\n.text:00000000004055b6\n.text:00000000004055b8\n.text:00000000004055bb\n.text:00000000004055bd\n.text:00000000004055c0\n.text:00000000004055c2\n.text:00000000004055c6\n.text:00000000004055ca\n.text:00000000004055ce\n.text:00000000004055d2\n.text:00000000004055d5\n.text:00000000004055d9\n.text:00000000004055da\n.text:00000000004055dc\n.text:00000000004055de\n.text:00000000004055e0\n.text:00000000004055e2\n.text:00000000004055e3\n.text:00000000004055e5\n.text:00000000004055ea\n.text:00000000004055ee\n.text:00000000004055ef\n.text:00000000004055f1\n.text:00000000004055f3\n.text:00000000004055f5\n.text:00000000004055f7\n.text:00000000004055f8\n'
p1308
tp1309
sS'strcaseeq1'
p1310
(S'\n__stdcall strcaseeq1()\n'
p1311
V\u000aint strcaseeq1(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 1) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 1) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq2();\u000a  return iVar2;\u000a}\u000a\u000a
p1312
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nPUSH RAX\nMOV dword ptr [RSP + 0x4],R9D\nMOV R15D,R8D\nMOV R12D,ECX\nMOV R13D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV R14B,byte ptr [RSP + 0x40]\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x1]\nTEST AL,AL\nJZ 0x0040552d\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405534\nJMP 0x00405567\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x00405567\nTEST BPL,BPL\nJZ 0x00405562\nMOVSX ESI,R13B\nMOVSX EDX,R12B\nMOVSX ECX,R15B\nMOVSX R8D,byte ptr [RSP + 0x4]\nMOVSX R9D,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405580\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1313
S'55\n41 57\n41 56\n41 55\n41 54\n53\n50\n44 89 4c 24 04\n45 89 c7\n41 89 cc\n41 89 d5\n89 f5\n48 89 fb\n44 8a 74 24 40\n89 ef\ne8 16 12 00 00\n0f be 4b 01\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 3a\n31 c0\n40 38 e9\n75 33\n40 84 ed\n74 29\n41 0f be f5\n41 0f be d4\n41 0f be cf\n44 0f be 44 24 04\n45 0f be ce\n48 89 df\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\neb 1e\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p1314
S'.text:00000000004054f0\n.text:00000000004054f1\n.text:00000000004054f3\n.text:00000000004054f5\n.text:00000000004054f7\n.text:00000000004054f9\n.text:00000000004054fa\n.text:00000000004054fb\n.text:0000000000405500\n.text:0000000000405503\n.text:0000000000405506\n.text:0000000000405509\n.text:000000000040550b\n.text:000000000040550e\n.text:0000000000405513\n.text:0000000000405515\n.text:000000000040551a\n.text:000000000040551e\n.text:0000000000405520\n.text:0000000000405522\n.text:0000000000405525\n.text:0000000000405527\n.text:0000000000405529\n.text:000000000040552b\n.text:000000000040552d\n.text:000000000040552f\n.text:0000000000405532\n.text:0000000000405534\n.text:0000000000405537\n.text:0000000000405539\n.text:000000000040553d\n.text:0000000000405541\n.text:0000000000405545\n.text:000000000040554b\n.text:000000000040554f\n.text:0000000000405552\n.text:0000000000405556\n.text:0000000000405557\n.text:0000000000405559\n.text:000000000040555b\n.text:000000000040555d\n.text:000000000040555f\n.text:0000000000405560\n.text:0000000000405562\n.text:0000000000405567\n.text:000000000040556b\n.text:000000000040556c\n.text:000000000040556e\n.text:0000000000405570\n.text:0000000000405572\n.text:0000000000405574\n.text:0000000000405575\n'
p1315
tp1316
sS'strcaseeq4'
p1317
(S'\n__stdcall strcaseeq4()\n'
p1318
V\u000aint strcaseeq4(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 4) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 4) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq5();\u000a  return iVar2;\u000a}\u000a\u000a
p1319
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH RBX\nPUSH RAX\nMOV R14D,ECX\nMOV R15D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x4]\nTEST AL,AL\nJZ 0x0040569c\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x004056a3\nJMP 0x004056c4\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x004056c4\nTEST BPL,BPL\nJZ 0x004056bf\nMOVSX ESI,R15B\nMOVSX EDX,R14B\nMOV RDI,RBX\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x004056d0\nMOV EAX,0x1\nADD RSP,0x8\nPOP RBX\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1320
S'55\n41 57\n41 56\n53\n50\n41 89 ce\n41 89 d7\n89 f5\n48 89 fb\n89 ef\ne8 a7 10 00 00\n0f be 4b 04\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 28\n31 c0\n40 38 e9\n75 21\n40 84 ed\n74 17\n41 0f be f7\n41 0f be d6\n48 89 df\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\neb 11\nb8 01 00 00 00\n48 83 c4 08\n5b\n41 5e\n41 5f\n5d\nc3\n'
p1321
S'.text:0000000000405670\n.text:0000000000405671\n.text:0000000000405673\n.text:0000000000405675\n.text:0000000000405676\n.text:0000000000405677\n.text:000000000040567a\n.text:000000000040567d\n.text:000000000040567f\n.text:0000000000405682\n.text:0000000000405684\n.text:0000000000405689\n.text:000000000040568d\n.text:000000000040568f\n.text:0000000000405691\n.text:0000000000405694\n.text:0000000000405696\n.text:0000000000405698\n.text:000000000040569a\n.text:000000000040569c\n.text:000000000040569e\n.text:00000000004056a1\n.text:00000000004056a3\n.text:00000000004056a6\n.text:00000000004056a8\n.text:00000000004056ac\n.text:00000000004056b0\n.text:00000000004056b3\n.text:00000000004056b7\n.text:00000000004056b8\n.text:00000000004056ba\n.text:00000000004056bc\n.text:00000000004056bd\n.text:00000000004056bf\n.text:00000000004056c4\n.text:00000000004056c8\n.text:00000000004056c9\n.text:00000000004056cb\n.text:00000000004056cd\n.text:00000000004056ce\n'
p1322
tp1323
sS'guess_time_tm'
p1324
(S'\n__stdcall guess_time_tm(long_int year, long_int yday, time_t * t, tm * tp)\n'
p1325
V\u000atime_t guess_time_tm(long_int year,long_int yday,time_t *t,tm *tp)\u000a\u000a{\u000a  int iVar1;\u000a  time_t b;\u000a  long lVar2;\u000a  time_t a;\u000a  int min0;\u000a  time_t *in_R9;\u000a  long in_stack_00000008;\u000a  \u000a  if (in_stack_00000008 == 0) {\u000a    a = *in_R9;\u000a  }\u000a  else {\u000a    b = ydhms_diff(year,yday,(int)t,(int)tp,min0,*(int *)(in_stack_00000008 + 0x14));\u000a    a = *in_R9;\u000a    iVar1 = time_t_add_ok(a,b);\u000a    if (iVar1 != 0) {\u000a      return a + b;\u000a    }\u000a  }\u000a  if (a < 0) {\u000a    lVar2 = -0x8000000000000000;\u000a    if (a < -0x7ffffffffffffffe) {\u000a      lVar2 = a + 1;\u000a    }\u000a  }\u000a  else {\u000a    lVar2 = a + -1;\u000a    if (a < 0x7ffffffffffffffe) {\u000a      lVar2 = 0x7fffffffffffffff;\u000a    }\u000a  }\u000a  return lVar2;\u000a}\u000a\u000a
p1326
S'PUSH R15\nPUSH R14\nPUSH RBX\nMOV R15,R9\nMOV RAX,qword ptr [RSP + 0x20]\nTEST RAX,RAX\nJZ 0x004070bc\nMOV R9D,dword ptr [RAX + 0x14]\nMOV R10D,dword ptr [RAX + 0x1c]\nMOV R11D,dword ptr [RAX + 0x8]\nMOV EBX,dword ptr [RAX]\nMOV EAX,dword ptr [RAX + 0x4]\nPUSH RBX\nPUSH RAX\nPUSH R11\nPUSH R10\nCALL 0x00406f60\nADD RSP,0x20\nMOV R14,RAX\nMOV RBX,qword ptr [R15]\nMOV RDI,RBX\nMOV RSI,R14\nCALL 0x00407230\nTEST EAX,EAX\nJZ 0x004070bf\nADD RBX,R14\nJMP 0x004070f5\nMOV RBX,qword ptr [R15]\nMOV RAX,0x7ffffffffffffffd\nTEST RBX,RBX\nJS 0x004070df\nCMP RBX,RAX\nLEA RCX,[RAX + 0x2]\nLEA RAX,[RBX + -0x1]\nCMOVLE RAX,RCX\nJMP 0x004070f8\nLEA RCX,[RAX + 0x5]\nLEA RDX,[RBX + 0x1]\nADD RAX,0x3\nCMP RBX,RCX\nCMOVL RAX,RDX\nMOV RBX,RAX\nMOV RAX,RBX\nPOP RBX\nPOP R14\nPOP R15\nRET\n'
p1327
S'41 57\n41 56\n53\n4d 89 cf\n48 8b 44 24 20\n48 85 c0\n74 3a\n44 8b 48 14\n44 8b 50 1c\n44 8b 58 08\n8b 18\n8b 40 04\n53\n50\n41 53\n41 52\ne8 c2 fe ff ff\n48 83 c4 20\n49 89 c6\n49 8b 1f\n48 89 df\n4c 89 f6\ne8 7d 01 00 00\n85 c0\n74 08\n4c 01 f3\neb 39\n49 8b 1f\n48 b8 fd ff ff ff ff ff ff 7f\n48 85 db\n78 11\n48 39 c3\n48 8d 48 02\n48 8d 43 ff\n48 0f 4e c1\neb 19\n48 8d 48 05\n48 8d 53 01\n48 83 c0 03\n48 39 cb\n48 0f 4c c2\n48 89 c3\n48 89 d8\n5b\n41 5e\n41 5f\nc3\n'
p1328
S'.text:0000000000407070\n.text:0000000000407072\n.text:0000000000407074\n.text:0000000000407075\n.text:0000000000407078\n.text:000000000040707d\n.text:0000000000407080\n.text:0000000000407082\n.text:0000000000407086\n.text:000000000040708a\n.text:000000000040708e\n.text:0000000000407090\n.text:0000000000407093\n.text:0000000000407094\n.text:0000000000407095\n.text:0000000000407097\n.text:0000000000407099\n.text:000000000040709e\n.text:00000000004070a2\n.text:00000000004070a5\n.text:00000000004070a8\n.text:00000000004070ab\n.text:00000000004070ae\n.text:00000000004070b3\n.text:00000000004070b5\n.text:00000000004070b7\n.text:00000000004070ba\n.text:00000000004070bc\n.text:00000000004070bf\n.text:00000000004070c9\n.text:00000000004070cc\n.text:00000000004070ce\n.text:00000000004070d1\n.text:00000000004070d5\n.text:00000000004070d9\n.text:00000000004070dd\n.text:00000000004070df\n.text:00000000004070e3\n.text:00000000004070e7\n.text:00000000004070eb\n.text:00000000004070ee\n.text:00000000004070f2\n.text:00000000004070f5\n.text:00000000004070f8\n.text:00000000004070f9\n.text:00000000004070fb\n.text:00000000004070fd\n'
p1329
tp1330
sS'strcaseeq3'
p1331
(S'\n__stdcall strcaseeq3()\n'
p1332
V\u000aint strcaseeq3(void)\u000a\u000a{\u000a  _Bool _Var1;\u000a  int iVar2;\u000a  char cVar3;\u000a  ulong in_RSI;\u000a  long in_RDI;\u000a  \u000a  _Var1 = c_isupper();\u000a  cVar3 = (char)(in_RSI & 0xffffffff);\u000a  if (_Var1 == false) {\u000a    if (*(char *)(in_RDI + 3) != cVar3) {\u000a      return 0;\u000a    }\u000a  }\u000a  else {\u000a    if (((int)*(char *)(in_RDI + 3) & 0xffffffdfU) != (uint)(in_RSI & 0xffffffff)) {\u000a      return 0;\u000a    }\u000a  }\u000a  if (cVar3 == 0) {\u000a    return 1;\u000a  }\u000a  iVar2 = strcaseeq4();\u000a  return iVar2;\u000a}\u000a\u000a
p1333
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14D,R8D\nMOV R15D,ECX\nMOV R12D,EDX\nMOV EBP,ESI\nMOV RBX,RDI\nMOV EDI,EBP\nCALL 0x00406730\nMOVSX ECX,byte ptr [RBX + 0x3]\nTEST AL,AL\nJZ 0x00405630\nAND ECX,0xffffffdf\nXOR EAX,EAX\nCMP ECX,EBP\nJZ 0x00405637\nJMP 0x0040565a\nXOR EAX,EAX\nCMP CL,BPL\nJNZ 0x0040565a\nTEST BPL,BPL\nJZ 0x00405655\nMOVSX ESI,R12B\nMOVSX EDX,R15B\nMOVSX ECX,R14B\nMOV RDI,RBX\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nJMP 0x00405670\nMOV EAX,0x1\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p1334
S'55\n41 57\n41 56\n41 54\n53\n45 89 c6\n41 89 cf\n41 89 d4\n89 f5\n48 89 fb\n89 ef\ne8 13 11 00 00\n0f be 4b 03\n84 c0\n74 0b\n83 e1 df\n31 c0\n39 e9\n74 09\neb 2a\n31 c0\n40 38 e9\n75 23\n40 84 ed\n74 19\n41 0f be f4\n41 0f be d7\n41 0f be ce\n48 89 df\n5b\n41 5c\n41 5e\n41 5f\n5d\neb 1b\nb8 01 00 00 00\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n'
p1335
S'.text:0000000000405600\n.text:0000000000405601\n.text:0000000000405603\n.text:0000000000405605\n.text:0000000000405607\n.text:0000000000405608\n.text:000000000040560b\n.text:000000000040560e\n.text:0000000000405611\n.text:0000000000405613\n.text:0000000000405616\n.text:0000000000405618\n.text:000000000040561d\n.text:0000000000405621\n.text:0000000000405623\n.text:0000000000405625\n.text:0000000000405628\n.text:000000000040562a\n.text:000000000040562c\n.text:000000000040562e\n.text:0000000000405630\n.text:0000000000405632\n.text:0000000000405635\n.text:0000000000405637\n.text:000000000040563a\n.text:000000000040563c\n.text:0000000000405640\n.text:0000000000405644\n.text:0000000000405648\n.text:000000000040564b\n.text:000000000040564c\n.text:000000000040564e\n.text:0000000000405650\n.text:0000000000405652\n.text:0000000000405653\n.text:0000000000405655\n.text:000000000040565a\n.text:000000000040565b\n.text:000000000040565d\n.text:000000000040565f\n.text:0000000000405661\n.text:0000000000405662\n'
p1336
tp1337
sS'register_tm_clones'
p1338
(S'\n__stdcall register_tm_clones()\n'
p1339
V\u000a/* WARNING: Removing unreachable block (ram,0x00401bd3) */\u000a/* WARNING: Removing unreachable block (ram,0x00401bdd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1340
S'MOV ESI,0x60b2d8\nPUSH RBP\nSUB RSI,0x60b2d8\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00401be8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00401be8\nPOP RBP\nMOV EDI,0x60b2d8\nJMP RAX\nPOP RBP\nRET\n'
p1341
S'be d8 b2 60 00\n55\n48 81 ee d8 b2 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf d8 b2 60 00\nff e0\n5d\nc3\n'
p1342
S'.text:0000000000401bb0\n.text:0000000000401bb5\n.text:0000000000401bb6\n.text:0000000000401bbd\n.text:0000000000401bc1\n.text:0000000000401bc4\n.text:0000000000401bc7\n.text:0000000000401bcb\n.text:0000000000401bce\n.text:0000000000401bd1\n.text:0000000000401bd3\n.text:0000000000401bd8\n.text:0000000000401bdb\n.text:0000000000401bdd\n.text:0000000000401bde\n.text:0000000000401be3\n.text:0000000000401be8\n.text:0000000000401be9\n'
p1343
tp1344
sS'c_islower'
p1345
(S'\n__stdcall c_islower()\n'
p1346
V\u000a_Bool c_islower(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x61U < 0x1a);\u000a}\u000a\u000a
p1347
S'ADD EDI,-0x61\nCMP EDI,0x1a\nSETC AL\nRET\n'
p1348
S'83 c7 9f\n83 ff 1a\n0f 92 c0\nc3\n'
p1349
S'.text:00000000004066d0\n.text:00000000004066d3\n.text:00000000004066d6\n.text:00000000004066d9\n'
p1350
tp1351
sS'fwrite'
p1352
(S'\n__stdcall fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s)\n'
p1353
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000asize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\u000a\u000a{\u000a  size_t sVar1;\u000a  \u000a  sVar1 = (*(code *)PTR_fwrite_0060b230)();\u000a  return sVar1;\u000a}\u000a\u000a
p1354
S'JMP qword ptr [0x0060b230]\n'
p1355
S'ff 25 4a 97 20 00\n'
p1356
S'.plt:0000000000401ae0\n'
p1357
tp1358
sS'uptime'
p1359
(S'\n__stdcall uptime(char * filename)\n'
p1360
V\u000avoid uptime(char *filename)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  uint *puVar3;\u000a  char *pcVar4;\u000a  STRUCT_UTMP *local_20;\u000a  size_t local_18;\u000a  \u000a  local_20 = (STRUCT_UTMP *)0x0;\u000a  iVar2 = read_utmp(filename,&local_18,&local_20);\u000a  if (iVar2 != 0) {\u000a    puVar3 = (uint *)__errno_location();\u000a    uVar1 = *puVar3;\u000a    pcVar4 = quotearg_n_style_colon((char *)0x0);\u000a    error(1,(ulong)uVar1,0x407837,pcVar4);\u000a  }\u000a  print_uptime(local_18,local_20);\u000a  return;\u000a}\u000a\u000a
p1361
S'PUSH RBP\nPUSH RBX\nSUB RSP,0x18\nMOV EAX,ESI\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x8],0x0\nLEA RSI,[RSP + 0x10]\nLEA RDX,[RSP + 0x8]\nMOV ECX,EAX\nCALL 0x00406080\nTEST EAX,EAX\nJZ 0x00402025\nCALL 0x00401710\nMOV EBP,dword ptr [RAX]\nXOR EDI,EDI\nMOV ESI,0x3\nMOV RDX,RBX\nCALL 0x00405260\nMOV RCX,RAX\nMOV EDI,0x1\nMOV EDX,0x407837\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00401a60\nMOV RDI,qword ptr [RSP + 0x10]\nMOV RSI,qword ptr [RSP + 0x8]\nCALL 0x00402040\nADD RSP,0x18\nPOP RBX\nPOP RBP\nRET\n'
p1362
S'55\n53\n48 83 ec 18\n89 f0\n48 89 fb\n48 c7 44 24 08 00 00 00 00\n48 8d 74 24 10\n48 8d 54 24 08\n89 c1\ne8 8b 40 00 00\n85 c0\n74 2c\ne8 12 f7 ff ff\n8b 28\n31 ff\nbe 03 00 00 00\n48 89 da\ne8 51 32 00 00\n48 89 c1\nbf 01 00 00 00\nba 37 78 40 00\n31 c0\n89 ee\ne8 3b fa ff ff\n48 8b 7c 24 10\n48 8b 74 24 08\ne8 0c 00 00 00\n48 83 c4 18\n5b\n5d\nc3\n'
p1363
S'.text:0000000000401fd0\n.text:0000000000401fd1\n.text:0000000000401fd2\n.text:0000000000401fd6\n.text:0000000000401fd8\n.text:0000000000401fdb\n.text:0000000000401fe4\n.text:0000000000401fe9\n.text:0000000000401fee\n.text:0000000000401ff0\n.text:0000000000401ff5\n.text:0000000000401ff7\n.text:0000000000401ff9\n.text:0000000000401ffe\n.text:0000000000402000\n.text:0000000000402002\n.text:0000000000402007\n.text:000000000040200a\n.text:000000000040200f\n.text:0000000000402012\n.text:0000000000402017\n.text:000000000040201c\n.text:000000000040201e\n.text:0000000000402020\n.text:0000000000402025\n.text:000000000040202a\n.text:000000000040202f\n.text:0000000000402034\n.text:0000000000402038\n.text:0000000000402039\n.text:000000000040203a\n'
p1364
tp1365
sS'rpl_mktime'
p1366
(S'\n__stdcall rpl_mktime(tm * tp)\n'
p1367
V\u000atime_t rpl_mktime(tm *tp)\u000a\u000a{\u000a  time_t tVar1;\u000a  \u000a  tVar1 = mktime_internal(tp,localtime_r,&localtime_offset);\u000a  return tVar1;\u000a}\u000a\u000a
p1368
S'MOV ESI,0x401740\nMOV EDX,0x60b498\nJMP 0x00406b20\n'
p1369
S'be 40 17 40 00\nba 98 b4 60 00\ne9 f1 f8 ff ff\n'
p1370
S'.text:0000000000407220\n.text:0000000000407225\n.text:000000000040722a\n'
p1371
tp1372
sS'__do_global_dtors_aux'
p1373
(S'\n__stdcall __do_global_dtors_aux()\n'
p1374
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p1375
S'CMP byte ptr [0x0060b328],0x0\nJNZ 0x00401c0a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00401b70\nPOP RBP\nMOV byte ptr [0x0060b328],0x1\nRET\n'
p1376
S'80 3d 31 97 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 1e 97 20 00 01\nf3 c3\n'
p1377
S'.text:0000000000401bf0\n.text:0000000000401bf7\n.text:0000000000401bf9\n.text:0000000000401bfa\n.text:0000000000401bfd\n.text:0000000000401c02\n.text:0000000000401c03\n.text:0000000000401c0a\n'
p1378
tp1379
sS'c_isprint'
p1380
(S'\n__stdcall c_isprint()\n'
p1381
V\u000a_Bool c_isprint(void)\u000a\u000a{\u000a  int in_EDI;\u000a  \u000a  return (_Bool)(in_EDI - 0x20U < 0x5f);\u000a}\u000a\u000a
p1382
S'ADD EDI,-0x20\nCMP EDI,0x5f\nSETC AL\nRET\n'
p1383
S'83 c7 e0\n83 ff 5f\n0f 92 c0\nc3\n'
p1384
S'.text:00000000004066e0\n.text:00000000004066e3\n.text:00000000004066e6\n.text:00000000004066e9\n'
p1385
tp1386
sS'strncpy'
p1387
(S'\n__stdcall strncpy(char * __dest, char * __src, size_t __n)\n'
p1388
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strncpy(char *__dest,char *__src,size_t __n)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strncpy_0060b050)();\u000a  return pcVar1;\u000a}\u000a\u000a
p1389
S'JMP qword ptr [0x0060b050]\n'
p1390
S'ff 25 2a 99 20 00\n'
p1391
S'.plt:0000000000401720\n'
p1392
tp1393
sS'_fini'
p1394
(S'\n__stdcall _fini()\n'
p1395
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p1396
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p1397
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p1398
S'.fini:000000000040731c\n.fini:0000000000407320\n.fini:0000000000407324\n'
p1399
tp1400
sS'iso_week_days'
p1401
(S'\n__stdcall iso_week_days()\n'
p1402
V\u000aint iso_week_days(void)\u000a\u000a{\u000a  int iVar1;\u000a  int in_ESI;\u000a  int in_EDI;\u000a  \u000a  iVar1 = (in_EDI + 0x17e) - in_ESI;\u000a  return (int)((in_EDI + 3) -\u000a              (iVar1 + (iVar1 / 7 + (iVar1 >> 0x1f) +\u000a                       (uint)((ulong)((long)iVar1 * 0x92492493) >> 0x3f)) * -7));\u000a}\u000a\u000a
p1403
S'LEA EAX,[0x17e + RDI]\nSUB EAX,ESI\nCDQE\nIMUL RCX,RAX,-0x6db6db6d\nSHR RCX,0x20\nADD ECX,EAX\nMOV EDX,ECX\nSHR EDX,0x1f\nSAR ECX,0x2\nADD ECX,EDX\nLEA EDX,[RCX*0x8]\nSUB EDX,ECX\nSUB EAX,EDX\nNEG EAX\nLEA EAX,[RDI + RAX*0x1 + 0x3]\nRET\n'
p1404
S'8d 87 7e 01 00 00\n29 f0\n48 98\n48 69 c8 93 24 49 92\n48 c1 e9 20\n01 c1\n89 ca\nc1 ea 1f\nc1 f9 02\n01 d1\n8d 14 cd 00 00 00 00\n29 ca\n29 d0\nf7 d8\n8d 44 07 03\nc3\n'
p1405
S'.text:0000000000403d80\n.text:0000000000403d86\n.text:0000000000403d88\n.text:0000000000403d8a\n.text:0000000000403d91\n.text:0000000000403d95\n.text:0000000000403d97\n.text:0000000000403d99\n.text:0000000000403d9c\n.text:0000000000403d9f\n.text:0000000000403da1\n.text:0000000000403da8\n.text:0000000000403daa\n.text:0000000000403dac\n.text:0000000000403dae\n.text:0000000000403db2\n'
p1406
tp1407
sS'__fpending'
p1408
(S'\n__stdcall __fpending()\n'
p1409
V\u000avoid __fpending(void)\u000a\u000a{\u000a  (*(code *)PTR___fpending_0060b078)();\u000a  return;\u000a}\u000a\u000a
p1410
S'JMP qword ptr [0x0060b078]\n'
p1411
S'ff 25 02 99 20 00\n'
p1412
S'.plt:0000000000401770\n'
p1413
tp1414
s.