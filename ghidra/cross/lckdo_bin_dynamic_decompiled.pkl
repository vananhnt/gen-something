(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x601e08]\nPUSH RBP\nLEA RBP,[0x601e10]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x004008c0\nTEST RBP,RBP\nJZ 0x004011c6\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x004011b0\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 86 0c 20 00\n55\n48 8d 2d 86 0c 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 1f f7 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000401170\n.text:0000000000401172\n.text:0000000000401174\n.text:0000000000401177\n.text:0000000000401179\n.text:000000000040117b\n.text:0000000000401182\n.text:0000000000401183\n.text:000000000040118a\n.text:000000000040118b\n.text:000000000040118e\n.text:0000000000401191\n.text:0000000000401194\n.text:0000000000401198\n.text:000000000040119c\n.text:00000000004011a1\n.text:00000000004011a4\n.text:00000000004011a6\n.text:00000000004011a8\n.text:00000000004011b0\n.text:00000000004011b3\n.text:00000000004011b6\n.text:00000000004011b9\n.text:00000000004011bd\n.text:00000000004011c1\n.text:00000000004011c4\n.text:00000000004011c6\n.text:00000000004011ca\n.text:00000000004011cb\n.text:00000000004011cc\n.text:00000000004011ce\n.text:00000000004011d0\n.text:00000000004011d2\n.text:00000000004011d4\n'
p6
tp7
sS'wait'
p8
(S'\n__stdcall wait(void * __stat_loc)\n'
p9
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t wait(void *__stat_loc)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_wait_006020b0)();\u000a  return _Var1;\u000a}\u000a\u000a
p10
S'JMP qword ptr [0x006020b0]\n'
p11
S'ff 25 8a 16 20 00\n'
p12
S'.plt:0000000000400a20\n'
p13
tp14
sS'sigalarm'
p15
(S'\n__stdcall sigalarm()\n'
p16
V\u000avoid sigalarm(void)\u000a\u000a{\u000a  undefined8 extraout_RDX;\u000a  long lVar1;\u000a  undefined8 uVar2;\u000a  EVP_PKEY_CTX *ctx;\u000a  \u000a  if (quiet != 1) {\u000a    ctx = (EVP_PKEY_CTX *)0x0;\u000a    uVar2 = 0x4b;\u000a    error((char *)0x0,0x4b,"lock file `%s\u005c' is already locked (timeout waiting)",lckfile);\u000a    _init(ctx);\u000a    lVar1 = 0;\u000a    do {\u000a      (*(code *)(&__frame_dummy_init_array_entry)[lVar1])\u000a                ((ulong)ctx & 0xffffffff,uVar2,extraout_RDX);\u000a      lVar1 = lVar1 + 1;\u000a    } while (lVar1 != 1);\u000a    return;\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  _exit(0x4b);\u000a}\u000a\u000a
p17
S'PUSH RAX\nCMP byte ptr [0x00602118],0x1\nJNZ 0x00401154\nMOV EDI,0x4b\nCALL 0x00400900\nMOV RCX,qword ptr [0x00602120]\nXOR EDI,EDI\nMOV ESI,0x4b\nMOV EDX,0x401787\nXOR EAX,EAX\nCALL 0x00401040\nNOP\n'
p18
S'50\n80 3d d0 0f 20 00 01\n75 0a\nbf 4b 00 00 00\ne8 ac f7 ff ff\n48 8b 0d c5 0f 20 00\n31 ff\nbe 4b 00 00 00\nba 87 17 40 00\n31 c0\ne8 d2 fe ff ff\n66 90\n'
p19
S'.text:0000000000401140\n.text:0000000000401141\n.text:0000000000401148\n.text:000000000040114a\n.text:000000000040114f\n.text:0000000000401154\n.text:000000000040115b\n.text:000000000040115d\n.text:0000000000401162\n.text:0000000000401167\n.text:0000000000401169\n.text:000000000040116e\n'
p20
tp21
sS'_init'
p22
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p23
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00601ff8;\u000a  if (PTR___gmon_start___00601ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00601ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p24
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00601ff8]\nTEST RAX,RAX\nJZ 0x004008d2\nCALL RAX\nADD RSP,0x8\nRET\n'
p25
S'48 83 ec 08\n48 8b 05 2d 17 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p26
S'.init:00000000004008c0\n.init:00000000004008c4\n.init:00000000004008cb\n.init:00000000004008ce\n.init:00000000004008d0\n.init:00000000004008d2\n.init:00000000004008d6\n'
p27
tp28
sS'_start'
p29
(S'\n__stdcall _start()\n'
p30
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00601ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p31
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x4011e0\nMOV RCX,0x401170\nMOV RDI,0x400b40\nCALL qword ptr [0x00601ff0]\nHLT\n'
p32
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 e0 11 40 00\n48 c7 c1 70 11 40 00\n48 c7 c7 40 0b 40 00\nff 15 86 15 20 00\nf4\n'
p33
S'.text:0000000000400a40\n.text:0000000000400a42\n.text:0000000000400a45\n.text:0000000000400a46\n.text:0000000000400a49\n.text:0000000000400a4d\n.text:0000000000400a4e\n.text:0000000000400a4f\n.text:0000000000400a56\n.text:0000000000400a5d\n.text:0000000000400a64\n.text:0000000000400a6a\n'
p34
tp35
sS'fcntl'
p36
(S'\n__stdcall fcntl(int __fd, int __cmd)\n'
p37
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fcntl(int __fd,int __cmd,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fcntl_00602028)();\u000a  return iVar1;\u000a}\u000a\u000a
p38
S'JMP qword ptr [0x00602028]\n'
p39
S'ff 25 12 17 20 00\n'
p40
S'.plt:0000000000400910\n'
p41
tp42
sS'fputc'
p43
(S'\n__stdcall fputc(int __c, FILE * __stream)\n'
p44
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fputc(int __c,FILE *__stream)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fputc_00602058)();\u000a  return iVar1;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x00602058]\n'
p46
S'ff 25 e2 16 20 00\n'
p47
S'.plt:0000000000400970\n'
p48
tp49
sS'main'
p50
(S'\n__stdcall main(char * * argv)\n'
p51
V\u000a/* WARNING: Could not reconcile some variable overlaps */\u000a\u000aint main(char **argv)\u000a\u000a{\u000a  byte bVar1;\u000a  FILE *__stream;\u000a  uint __fd;\u000a  uint __fd2;\u000a  int ___argc;\u000a  uint __sig;\u000a  __pid_t _Var2;\u000a  uint *puVar3;\u000a  char *fmt;\u000a  uint uVar4;\u000a  char *__format;\u000a  uint __oflag;\u000a  char **___argv;\u000a  int __errnum;\u000a  char *fmt_00;\u000a  char *in_R8;\u000a  uint __seconds;\u000a  char **unaff_R14;\u000a  flock fl;\u000a  undefined4 uStack336;\u000a  undefined4 uStack332;\u000a  uint *puStack328;\u000a  undefined *puStack320;\u000a  undefined auStack304 [24];\u000a  char *pcStack280;\u000a  char *pcStack272;\u000a  char **ppcStack128;\u000a  char **ppcStack120;\u000a  char *pcStack112;\u000a  uint local_68;\u000a  uint local_64;\u000a  uint local_60;\u000a  int local_5c;\u000a  uint local_58;\u000a  undefined4 uStack84;\u000a  undefined4 uStack80;\u000a  undefined4 uStack76;\u000a  undefined4 local_48;\u000a  undefined4 uStack68;\u000a  uint local_40;\u000a  undefined4 uStack60;\u000a  \u000a  ___argc = (int)argv;\u000a  pcStack112 = (char *)0x400b60;\u000a  progname = strrchr(*___argv,0x2f);\u000a  if (progname == (char *)0x0) {\u000a    progname = *___argv;\u000a  }\u000a  else {\u000a    progname = progname + 1;\u000a    *___argv = progname;\u000a  }\u000a  if (___argc == 1) {\u000a    pcStack112 = (char *)0x400ba7;\u000a    printf(\u000a           "%s: execute a program with a lock set.\u005cnUsage: %s [options] lockfile program [arguments]\u005cnwhere options are:\u005cn -w - if the lock is already held by another process,\u005cn   wait for it to complete instead of failing immediately\u005cn -W sec - the same as -w but wait not more than sec seconds\u005cn -e - execute the program directly, no fork/wait\u005cn   (keeps extra open file descriptor)\u005cn -E nnn - set the fd# to keep open in -e case (implies -e)\u005cn -n - do not create the lock file if it does not exist\u005cn -q - produce no output if lock is already held\u005cn -s - lock in shared (read) mode\u005cn -x - lock in exclusive (write) mode (default)\u005cn -t - test for lock existence (just prints pid if any with -q)\u005cn   (implies -n)\u005cn"\u000a           ,progname,progname);\u000a    return 0;\u000a  }\u000a  __fd2 = 0xffffffff;\u000a  __seconds = 0;\u000a  local_5c = 1;\u000a  local_64 = 0;\u000a  local_60 = 0;\u000a  __sig = 0x40;\u000aswitchD_00400c00_caseD_6e:\u000a  uVar4 = __sig;\u000a  pcStack112 = (char *)0x400bf2;\u000a  __fd = getopt(___argc,___argv,"+wW:neE:sxtq");\u000a  __sig = local_60;\u000a  ppcStack120 = optarg;\u000a  if (__fd - 0x45 < 0x34) goto code_r0x00400bfe;\u000a  if (__fd != 0xffffffff) {\u000a    return 0x40;\u000a  }\u000a  ppcStack120 = unaff_R14;\u000a  local_68 = __fd;\u000a  if ((___argc == optind) ||\u000a     ((local_60 == 0 && (ppcStack120 = unaff_R14, local_68 = __fd, ___argc - optind < 2))))\u000a  goto LAB_00400f42;\u000a  ppcStack120 = ___argv + (long)optind;\u000a  lckfile = *ppcStack120;\u000a  fmt = (char *)(ulong)local_60;\u000a  __oflag = (local_64 | uVar4) ^ 1;\u000a  if (local_60 != 0) {\u000a    __oflag = uVar4;\u000a  }\u000a  pcStack112 = (char *)0x400ceb;\u000a  local_68 = __fd;\u000a  __fd = open(lckfile,__oflag,0x1b6);\u000a  ___argv = (char **)(ulong)__fd;\u000a  if ((int)__fd < 0) {\u000a    pcStack112 = (char *)0x400d38;\u000a    puVar3 = (uint *)__errno_location();\u000a    fmt = (char *)(ulong)*puVar3;\u000a    if ((__sig != 0) && (bVar1 = quiet, *puVar3 == 2)) goto joined_r0x00400d55;\u000a    goto LAB_00400f7b;\u000a  }\u000a  if ((-1 < (int)__fd2) && (__sig == 0)) {\u000a    pcStack112 = (char *)0x400d09;\u000a    ___argc = dup2(__fd,__fd2);\u000a    if (-1 < ___argc) {\u000a      pcStack112 = (char *)0x400d18;\u000a      close(__fd);\u000a      __fd = __fd2;\u000a      goto LAB_00400d5f;\u000a    }\u000a    goto LAB_00400f93;\u000a  }\u000aLAB_00400d5f:\u000a  __fd2 = __fd;\u000a  ___argv = (char **)0x0;\u000a  if (__sig == 0) {\u000a    if (0 < (int)__seconds) {\u000a      pcStack112 = (char *)0x400d72;\u000a      alarm(__seconds);\u000a      pcStack112 = (char *)0x400d81;\u000a      signal(0xe,sigalarm);\u000a    }\u000a    ___argv = (char **)(ulong)__seconds;\u000a  }\u000a  local_48 = 0;\u000a  uStack68 = 0;\u000a  local_40 = 0;\u000a  uStack60 = 0;\u000a  uStack84 = 0;\u000a  uStack80 = 0;\u000a  uStack76 = 0;\u000a  local_58 = local_64 & 0xffff ^ 1;\u000a  __seconds = 5;\u000a  if (__sig == 0) {\u000a    __seconds = (uint)((int)___argv != 0) | 6;\u000a  }\u000a  pcStack112 = (char *)0x400dc0;\u000a  local_68 = fcntl(__fd2,__seconds,&local_58);\u000a  if ((__sig != 0) && (local_68 == 0)) {\u000a    if ((short)local_58 == 2) {\u000a      bVar1 = quiet & 1;\u000ajoined_r0x00400d55:\u000a      if (bVar1 == 0) {\u000a        pcStack112 = (char *)0x400dfe;\u000a        printf("lockfile `%s\u005c' is not locked\u005cn",lckfile);\u000a        return 0;\u000a      }\u000a      return 0;\u000a    }\u000a    if ((quiet & 1) != 0) {\u000a      pcStack112 = (char *)0x400eb5;\u000a      printf("%d\u005cn",(ulong)local_40,(ulong)local_40);\u000a      return 0x4b;\u000a    }\u000aLAB_00400f01:\u000a    pcStack112 = (char *)0x400f14;\u000a    printf("lockfile `%s\u005c' is locked by process %d\u005cn",lckfile);\u000a    return 0x4b;\u000a  }\u000a  if (0 < (int)___argv) {\u000a    pcStack112 = (char *)0x400e0e;\u000a    alarm(0);\u000a  }\u000a  if ((int)local_68 < 0) {\u000a    pcStack112 = (char *)0x400ec4;\u000a    puVar3 = (uint *)__errno_location();\u000a    __sig = *puVar3;\u000a    fmt_00 = (char *)(ulong)__sig;\u000a    if ((__sig == 0xb) || (__sig == 0xd)) {\u000a      if (quiet != 0) {\u000a        return 0x4b;\u000a      }\u000a      pcStack112 = (char *)0x400f01;\u000a      error((char *)0x0,0x4b,"lockfile `%s\u005c' is already locked",lckfile);\u000a      goto LAB_00400f01;\u000a    }\u000a    goto LAB_0040101c;\u000a  }\u000a  ppcStack120 = ppcStack120 + 1;\u000a  if (local_5c == 0) goto LAB_00400f55;\u000a  pcStack112 = (char *)0x400e38;\u000a  __sig = fcntl(__fd2,1,0);\u000a  if ((int)__sig < 0) goto LAB_00400fb0;\u000a  pcStack112 = (char *)0x400e56;\u000a  fcntl(__fd2,2,(ulong)(__sig | 1));\u000a  pcStack112 = (char *)0x400e5b;\u000a  _Var2 = fork();\u000a  if (_Var2 < 0) goto LAB_00400fc8;\u000a  if (_Var2 == 0) goto LAB_00400f55;\u000a  pcStack112 = (char *)0x400e71;\u000a  _Var2 = wait(&local_68);\u000a  if (_Var2 < 0) goto LAB_00400fe0;\u000a  __sig = local_68 & 0x7f;\u000a  if ((int)(__sig * 0x1000000 + 0x1000000) >> 0x19 < 1) {\u000a    return (uint)(byte)((ulong)local_68 >> 8);\u000a  }\u000a  goto LAB_00400ff8;\u000aLAB_00400d22:\u000a  return 0x40;\u000acode_r0x00400bfe:\u000a  __sig = 0;\u000a  switch(__fd) {\u000a  case 0x45:\u000a    pcStack112 = (char *)0x400c16;\u000a    __fd2 = atoi((char *)optarg);\u000a    if ((-1 < (int)__fd2) && (unaff_R14 = ppcStack120, __fd2 != 2)) goto switchD_00400c00_caseD_65;\u000a    fmt = "invalid fd# `%s\u005c'";\u000a    break;\u000a  default:\u000a    goto LAB_00400d22;\u000a  case 0x57:\u000a    pcStack112 = (char *)0x400c63;\u000a    __seconds = atoi((char *)optarg);\u000a    unaff_R14 = ppcStack120;\u000a    __sig = uVar4;\u000a    if (0 < (int)__seconds) goto switchD_00400c00_caseD_6e;\u000a    fmt = "invalid wait time `%s\u005c'";\u000a    break;\u000a  case 0x65:\u000aswitchD_00400c00_caseD_65:\u000a    local_5c = 0;\u000a    __sig = uVar4;\u000a  case 0x6e:\u000a    goto switchD_00400c00_caseD_6e;\u000a  case 0x71:\u000a    quiet = 1;\u000a    __sig = uVar4;\u000a    goto switchD_00400c00_caseD_6e;\u000a  case 0x73:\u000a    local_64 = 1;\u000a    __sig = uVar4;\u000a    goto switchD_00400c00_caseD_6e;\u000a  case 0x74:\u000a    local_60 = 1;\u000a    __sig = 0;\u000a    goto switchD_00400c00_caseD_6e;\u000a  case 0x77:\u000a    __seconds = __seconds | -(uint)(__seconds == 0);\u000a    __sig = uVar4;\u000a    goto switchD_00400c00_caseD_6e;\u000a  case 0x78:\u000a    local_64 = 0;\u000a    __sig = uVar4;\u000a    goto switchD_00400c00_caseD_6e;\u000a  }\u000a  pcStack112 = (char *)0x400f42;\u000a  error((char *)0x0,0x40,fmt,ppcStack120);\u000aLAB_00400f42:\u000a  pcStack112 = (char *)0x400f55;\u000a  error((char *)0x0,0x40,"too few arguments given");\u000aLAB_00400f55:\u000a  pcStack112 = (char *)0x400f60;\u000a  execvp(*ppcStack120,ppcStack120);\u000a  pcStack112 = (char *)0x400f65;\u000a  puVar3 = (uint *)__errno_location();\u000a  fmt = (char *)(ulong)*puVar3;\u000a  pcStack112 = (char *)0x400f7b;\u000a  error(fmt,0x47,"unable to execute %s",*ppcStack120);\u000aLAB_00400f7b:\u000a  pcStack112 = (char *)0x400f93;\u000a  error(fmt,0x49,"unable to open `%s\u005c'",lckfile);\u000aLAB_00400f93:\u000a  pcStack112 = (char *)0x400f98;\u000a  puVar3 = (uint *)__errno_location();\u000a  pcStack112 = (char *)0x400fb0;\u000a  error((char *)(ulong)*puVar3,0x47,"dup2(%d,%d) failed",(ulong)___argv & 0xffffffff,(ulong)__fd2);\u000aLAB_00400fb0:\u000a  pcStack112 = (char *)0x400fb5;\u000a  puVar3 = (uint *)__errno_location();\u000a  pcStack112 = (char *)0x400fc8;\u000a  error((char *)(ulong)*puVar3,0x47,"fcntl() failed");\u000aLAB_00400fc8:\u000a  pcStack112 = (char *)0x400fcd;\u000a  puVar3 = (uint *)__errno_location();\u000a  pcStack112 = (char *)0x400fe0;\u000a  error((char *)(ulong)*puVar3,0x47,"unable to fork");\u000aLAB_00400fe0:\u000a  pcStack112 = (char *)0x400fe5;\u000a  puVar3 = (uint *)__errno_location();\u000a  __sig = *puVar3;\u000a  pcStack112 = (char *)0x400ff8;\u000a  error((char *)(ulong)__sig,0x47,"wait() failed");\u000aLAB_00400ff8:\u000a  ___argv = (char **)*ppcStack120;\u000a  pcStack112 = (char *)0x401000;\u000a  fmt = strsignal(__sig);\u000a  fmt_00 = (char *)0x0;\u000a  pcStack112 = (char *)0x40101c;\u000a  in_R8 = fmt;\u000a  error((char *)0x0,0x46,"%s: %s",___argv);\u000aLAB_0040101c:\u000a  __errnum = (int)fmt_00;\u000a  ___argc = 0x47;\u000a  pcStack112 = (char *)0x401034;\u000a  pcStack280 = lckfile;\u000a  error(fmt_00,0x47,"unable to lock `%s\u005c'");\u000a  pcStack272 = in_R8;\u000a  ppcStack128 = ___argv;\u000a  pcStack112 = fmt;\u000a  fprintf(stderr,"%s: ",progname);\u000a  puStack320 = auStack304;\u000a  puStack328 = &local_60;\u000a  uStack332 = 0x30;\u000a  uStack336 = 0x18;\u000a  vfprintf(stderr,__format,&uStack336);\u000a  __stream = stderr;\u000a  if (__errnum != 0) {\u000a    fmt = strerror(__errnum);\u000a    fprintf(__stream,": %s\u005cn",fmt,fmt);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(___argc);\u000a  }\u000a  fputc(10,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(___argc);\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x38\nMOV RBX,RSI\nMOV EBP,EDI\nMOV RDI,qword ptr [RBX]\nMOV ESI,0x2f\nCALL 0x00400940\nMOV qword ptr [0x00602110],RAX\nTEST RAX,RAX\nJZ 0x00400b80\nINC RAX\nMOV qword ptr [0x00602110],RAX\nMOV qword ptr [RBX],RAX\nCMP EBP,0x1\nJZ 0x00400b8f\nJMP 0x00400bac\nMOV RAX,qword ptr [RBX]\nMOV qword ptr [0x00602110],RAX\nCMP EBP,0x1\nJNZ 0x00400bac\nMOV RSI,qword ptr [0x00602110]\nXOR EBX,EBX\nMOV EDI,0x401398\nXOR EAX,EAX\nMOV RDX,RSI\nCALL 0x00400930\nJMP 0x00400d22\nMOV R15D,0xffffffff\nXOR R12D,R12D\nMOV dword ptr [RSP + 0xc],0x1\nMOV ECX,0x40\nMOV dword ptr [RSP + 0x4],0x0\nMOV dword ptr [RSP + 0x8],0x0\nJMP 0x00400be0\nMOV dword ptr [RSP + 0xc],0x0\nMOV ECX,R13D\nNOP\nMOV R13D,ECX\nMOV EDX,0x401648\nMOV EDI,EBP\nMOV RSI,RBX\nCALL 0x004009c0\nLEA EDX,[RAX + -0x45]\nCMP EDX,0x33\nJA 0x00400c96\nXOR ECX,ECX\nJMP qword ptr [0x4011f8 + RDX*0x8]\nMOV R14,qword ptr [0x006020e8]\nMOV RDI,R14\nCALL 0x004009f0\nMOV R15D,EAX\nTEST R15D,R15D\nJS 0x00400f1e\nCMP R15D,0x2\nJNZ 0x00400bd4\nJMP 0x00400f1e\nMOV byte ptr [0x00602118],0x1\nMOV ECX,R13D\nJMP 0x00400be0\nCMP R12D,0x1\nSBB EAX,EAX\nOR R12D,EAX\nMOV ECX,R13D\nJMP 0x00400be0\nMOV ECX,R13D\nMOV dword ptr [RSP + 0x4],0x0\nJMP 0x00400be0\nMOV R14,qword ptr [0x006020e8]\nMOV RDI,R14\nCALL 0x004009f0\nMOV R12D,EAX\nTEST R12D,R12D\nMOV ECX,R13D\nJG 0x00400be0\nJMP 0x00400f2c\nMOV dword ptr [RSP + 0x4],0x1\nMOV ECX,R13D\nJMP 0x00400be0\nMOV dword ptr [RSP + 0x8],0x1\nXOR ECX,ECX\nJMP 0x00400be0\nCMP EAX,-0x1\nJNZ 0x00400d1a\nMOV dword ptr [RSP],EAX\nMOVSXD RAX,dword ptr [0x006020e0]\nSUB EBP,EAX\nJZ 0x00400f42\nCMP dword ptr [RSP + 0x8],0x0\nJNZ 0x00400cbd\nCMP EBP,0x1\nJLE 0x00400f42\nLEA R14,[RBX + RAX*0x8]\nMOV RDI,qword ptr [R14]\nMOV qword ptr [0x00602120],RDI\nMOV ESI,dword ptr [RSP + 0x4]\nOR ESI,R13D\nXOR ESI,0x1\nMOV EBP,dword ptr [RSP + 0x8]\nTEST EBP,EBP\nCMOVNZ ESI,R13D\nMOV EDX,0x1b6\nXOR EAX,EAX\nCALL 0x004009b0\nMOV EBX,EAX\nTEST EBX,EBX\nJS 0x00400d33\nTEST EBP,EBP\nSETZ AL\nTEST R15D,R15D\nJS 0x00400d5c\nTEST AL,AL\nJZ 0x00400d5c\nMOV EDI,EBX\nMOV ESI,R15D\nCALL 0x00400920\nTEST EAX,EAX\nJS 0x00400f93\nMOV EDI,EBX\nCALL 0x00400960\nJMP 0x00400d5f\nMOV dword ptr [RSP],EAX\nMOV EBX,0x40\nMOV EAX,EBX\nADD RSP,0x38\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nTEST EBP,EBP\nJZ 0x00400f7b\nCMP EDI,0x2\nJNZ 0x00400f7b\nXOR EBX,EBX\nMOV AL,byte ptr [0x00602118]\nTEST AL,AL\nJNZ 0x00400d22\nJMP 0x00400de9\nMOV R15D,EBX\nXOR EBX,EBX\nTEST EBP,EBP\nJNZ 0x00400d84\nTEST R12D,R12D\nJLE 0x00400d81\nMOV EDI,R12D\nCALL 0x00400950\nMOV EDI,0xe\nMOV ESI,0x401140\nCALL 0x00400980\nMOV EBX,R12D\nXORPS XMM0,XMM0\nMOVAPS xmmword ptr [RSP + 0x20],XMM0\nMOVAPS xmmword ptr [RSP + 0x10],XMM0\nMOV EAX,dword ptr [RSP + 0x4]\nXOR EAX,0x1\nMOV word ptr [RSP + 0x10],AX\nXOR EAX,EAX\nTEST EBX,EBX\nSETNZ AL\nOR EAX,0x6\nTEST EBP,EBP\nMOV ESI,0x5\nCMOVZ ESI,EAX\nLEA RDX,[RSP + 0x10]\nXOR EAX,EAX\nMOV EDI,R15D\nCALL 0x00400910\nTEST EBP,EBP\nMOV dword ptr [RSP],EAX\nJZ 0x00400e03\nTEST EAX,EAX\nJNZ 0x00400e03\nMOV AL,byte ptr [0x00602118]\nMOVZX ECX,word ptr [RSP + 0x10]\nCMP ECX,0x2\nJNZ 0x00400e9f\nXOR EBX,EBX\nTEST AL,0x1\nJNZ 0x00400d22\nMOV RSI,qword ptr [0x00602120]\nXOR EBX,EBX\nMOV EDI,0x401695\nXOR EAX,EAX\nCALL 0x00400930\nJMP 0x00400d22\nTEST EBX,EBX\nJLE 0x00400e0e\nXOR EDI,EDI\nCALL 0x00400950\nCMP dword ptr [RSP],0x0\nJS 0x00400ebf\nADD R14,0x8\nCMP dword ptr [RSP + 0xc],0x0\nJZ 0x00400f55\nMOV ESI,0x1\nXOR EDX,EDX\nXOR EAX,EAX\nMOV EDI,R15D\nCALL 0x00400910\nMOV ECX,EAX\nTEST ECX,ECX\nJS 0x00400fb0\nOR ECX,0x1\nMOV ESI,0x2\nXOR EAX,EAX\nMOV EDI,R15D\nMOV EDX,ECX\nCALL 0x00400910\nCALL 0x00400a30\nTEST EAX,EAX\nJS 0x00400fc8\nJZ 0x00400f55\nMOV RDI,RSP\nCALL 0x00400a20\nTEST EAX,EAX\nJS 0x00400fe0\nMOV EAX,dword ptr [RSP]\nMOV EDI,EAX\nAND EDI,0x7f\nMOV ECX,EDI\nSHL ECX,0x18\nADD ECX,0x1000000\nSAR ECX,0x19\nTEST ECX,ECX\nJG 0x00400ff8\nMOVZX EBX,AH\nJMP 0x00400d22\nMOV EDX,dword ptr [RSP + 0x28]\nTEST AL,0x1\nJZ 0x00400f01\nMOV EDI,0x4016fc\nXOR EAX,EAX\nMOV ESI,EDX\nCALL 0x00400930\nMOV EBX,0x4b\nJMP 0x00400d22\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nCMP EDI,0xb\nJZ 0x00400ed4\nCMP EDI,0xd\nJNZ 0x0040101c\nMOV EBX,0x4b\nMOV AL,byte ptr [0x00602118]\nTEST AL,AL\nJNZ 0x00400d22\nMOV RCX,qword ptr [0x00602120]\nXOR EDI,EDI\nMOV ESI,0x4b\nMOV EDX,0x401714\nXOR EAX,EAX\nCALL 0x00401040\nMOV RSI,qword ptr [0x00602120]\nMOV EDI,0x4016d9\nXOR EAX,EAX\nCALL 0x00400930\nMOV EBX,0x4b\nJMP 0x00400d22\nXOR EDI,EDI\nMOV ESI,0x40\nMOV EDX,0x40166c\nJMP 0x00400f38\nXOR EDI,EDI\nMOV ESI,0x40\nMOV EDX,0x401655\nXOR EAX,EAX\nMOV RCX,R14\nCALL 0x00401040\nXOR EDI,EDI\nMOV ESI,0x40\nMOV EDX,0x40167d\nXOR EAX,EAX\nCALL 0x00401040\nMOV RDI,qword ptr [R14]\nMOV RSI,R14\nCALL 0x004009e0\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nMOV RCX,qword ptr [R14]\nMOV ESI,0x47\nMOV EDX,0x401767\nXOR EAX,EAX\nCALL 0x00401040\nMOV RCX,qword ptr [0x00602120]\nMOV ESI,0x49\nMOV EDX,0x4016b2\nXOR EAX,EAX\nCALL 0x00401040\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nMOV ESI,0x47\nMOV EDX,0x4016c6\nXOR EAX,EAX\nMOV ECX,EBX\nMOV R8D,R15D\nCALL 0x00401040\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nMOV ESI,0x47\nMOV EDX,0x401734\nXOR EAX,EAX\nCALL 0x00401040\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nMOV ESI,0x47\nMOV EDX,0x401743\nXOR EAX,EAX\nCALL 0x00401040\nCALL 0x004008f0\nMOV EDI,dword ptr [RAX]\nMOV ESI,0x47\nMOV EDX,0x401752\nXOR EAX,EAX\nCALL 0x00401040\nMOV RBX,qword ptr [R14]\nCALL 0x004009a0\nMOV RBP,RAX\nXOR EDI,EDI\nMOV ESI,0x46\nMOV EDX,0x401760\nXOR EAX,EAX\nMOV RCX,RBX\nMOV R8,RBP\nCALL 0x00401040\nMOV RCX,qword ptr [0x00602120]\nMOV ESI,0x47\nMOV EDX,0x401700\nXOR EAX,EAX\nCALL 0x00401040\nNOP word ptr CS:[RAX + RAX*0x1]\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 38\n48 89 f3\n89 fd\n48 8b 3b\nbe 2f 00 00 00\ne8 e0 fd ff ff\n48 89 05 a9 15 20 00\n48 85 c0\n74 14\n48 ff c0\n48 89 05 9a 15 20 00\n48 89 03\n83 fd 01\n74 11\neb 2c\n48 8b 03\n48 89 05 86 15 20 00\n83 fd 01\n75 1d\n48 8b 35 7a 15 20 00\n31 db\nbf 98 13 40 00\n31 c0\n48 89 f2\ne8 89 fd ff ff\ne9 76 01 00 00\n41 bf ff ff ff ff\n45 31 e4\nc7 44 24 0c 01 00 00 00\nb9 40 00 00 00\nc7 44 24 04 00 00 00 00\nc7 44 24 08 00 00 00 00\neb 0c\nc7 44 24 0c 00 00 00 00\n44 89 e9\n90\n41 89 cd\nba 48 16 40 00\n89 ef\n48 89 de\ne8 ce fd ff ff\n8d 50 bb\n83 fa 33\n0f 87 98 00 00 00\n31 c9\nff 24 d5 f8 11 40 00\n4c 8b 35 da 14 20 00\n4c 89 f7\ne8 da fd ff ff\n41 89 c7\n45 85 ff\n0f 88 fc 02 00 00\n41 83 ff 02\n75 ac\ne9 f1 02 00 00\nc6 05 e4 14 20 00 01\n44 89 e9\neb a7\n41 83 fc 01\n19 c0\n41 09 c4\n44 89 e9\neb 99\n44 89 e9\nc7 44 24 04 00 00 00 00\neb 8c\n4c 8b 35 8d 14 20 00\n4c 89 f7\ne8 8d fd ff ff\n41 89 c4\n45 85 e4\n44 89 e9\n0f 8f 6e ff ff ff\ne9 b5 02 00 00\nc7 44 24 04 01 00 00 00\n44 89 e9\ne9 59 ff ff ff\nc7 44 24 08 01 00 00 00\n31 c9\ne9 4a ff ff ff\n83 f8 ff\n75 7f\n89 04 24\n48 63 05 3b 14 20 00\n29 c5\n0f 84 95 02 00 00\n83 7c 24 08 00\n75 09\n83 fd 01\n0f 8e 85 02 00 00\n4c 8d 34 c3\n49 8b 3e\n48 89 3d 55 14 20 00\n8b 74 24 04\n44 09 ee\n83 f6 01\n8b 6c 24 08\n85 ed\n41 0f 45 f5\nba b6 01 00 00\n31 c0\ne8 c5 fc ff ff\n89 c3\n85 db\n78 42\n85 ed\n0f 94 c0\n45 85 ff\n78 61\n84 c0\n74 5d\n89 df\n44 89 fe\ne8 17 fc ff ff\n85 c0\n0f 88 82 02 00 00\n89 df\ne8 48 fc ff ff\neb 45\n89 04 24\nbb 40 00 00 00\n89 d8\n48 83 c4 38\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\ne8 b8 fb ff ff\n8b 38\n85 ed\n0f 84 39 02 00 00\n83 ff 02\n0f 85 30 02 00 00\n31 db\n8a 05 c5 13 20 00\n84 c0\n75 cb\ne9 8d 00 00 00\n41 89 df\n31 db\n85 ed\n75 1f\n45 85 e4\n7e 17\n44 89 e7\ne8 de fb ff ff\nbf 0e 00 00 00\nbe 40 11 40 00\ne8 ff fb ff ff\n44 89 e3\n0f 57 c0\n0f 29 44 24 20\n0f 29 44 24 10\n8b 44 24 04\n83 f0 01\n66 89 44 24 10\n31 c0\n85 db\n0f 95 c0\n83 c8 06\n85 ed\nbe 05 00 00 00\n0f 44 f0\n48 8d 54 24 10\n31 c0\n44 89 ff\ne8 50 fb ff ff\n85 ed\n89 04 24\n74 3c\n85 c0\n75 38\n8a 05 47 13 20 00\n0f b7 4c 24 10\n83 f9 02\n0f 85 c0 00 00 00\n31 db\na8 01\n0f 85 39 ff ff ff\n48 8b 35 30 13 20 00\n31 db\nbf 95 16 40 00\n31 c0\ne8 32 fb ff ff\ne9 1f ff ff ff\n85 db\n7e 07\n31 ff\ne8 42 fb ff ff\n83 3c 24 00\n0f 88 a7 00 00 00\n49 83 c6 08\n83 7c 24 0c 00\n0f 84 2e 01 00 00\nbe 01 00 00 00\n31 d2\n31 c0\n44 89 ff\ne8 d8 fa ff ff\n89 c1\n85 c9\n0f 88 6e 01 00 00\n83 c9 01\nbe 02 00 00 00\n31 c0\n44 89 ff\n89 ca\ne8 ba fa ff ff\ne8 d5 fb ff ff\n85 c0\n0f 88 65 01 00 00\n0f 84 ec 00 00 00\n48 89 e7\ne8 af fb ff ff\n85 c0\n0f 88 67 01 00 00\n8b 04 24\n89 c7\n83 e7 7f\n89 f9\nc1 e1 18\n81 c1 00 00 00 01\nc1 f9 19\n85 c9\n0f 8f 61 01 00 00\n0f b6 dc\ne9 83 fe ff ff\n8b 54 24 28\na8 01\n74 5a\nbf fc 16 40 00\n31 c0\n89 d6\ne8 7b fa ff ff\nbb 4b 00 00 00\ne9 63 fe ff ff\ne8 2c fa ff ff\n8b 38\n83 ff 0b\n74 09\n83 ff 0d\n0f 85 48 01 00 00\nbb 4b 00 00 00\n8a 05 39 12 20 00\n84 c0\n0f 85 3b fe ff ff\n48 8b 0d 32 12 20 00\n31 ff\nbe 4b 00 00 00\nba 14 17 40 00\n31 c0\ne8 3f 01 00 00\n48 8b 35 18 12 20 00\nbf d9 16 40 00\n31 c0\ne8 1c fa ff ff\nbb 4b 00 00 00\ne9 04 fe ff ff\n31 ff\nbe 40 00 00 00\nba 6c 16 40 00\neb 0c\n31 ff\nbe 40 00 00 00\nba 55 16 40 00\n31 c0\n4c 89 f1\ne8 fe 00 00 00\n31 ff\nbe 40 00 00 00\nba 7d 16 40 00\n31 c0\ne8 eb 00 00 00\n49 8b 3e\n4c 89 f6\ne8 80 fa ff ff\ne8 8b f9 ff ff\n8b 38\n49 8b 0e\nbe 47 00 00 00\nba 67 17 40 00\n31 c0\ne8 c5 00 00 00\n48 8b 0d 9e 11 20 00\nbe 49 00 00 00\nba b2 16 40 00\n31 c0\ne8 ad 00 00 00\ne8 58 f9 ff ff\n8b 38\nbe 47 00 00 00\nba c6 16 40 00\n31 c0\n89 d9\n45 89 f8\ne8 90 00 00 00\ne8 3b f9 ff ff\n8b 38\nbe 47 00 00 00\nba 34 17 40 00\n31 c0\ne8 78 00 00 00\ne8 23 f9 ff ff\n8b 38\nbe 47 00 00 00\nba 43 17 40 00\n31 c0\ne8 60 00 00 00\ne8 0b f9 ff ff\n8b 38\nbe 47 00 00 00\nba 52 17 40 00\n31 c0\ne8 48 00 00 00\n49 8b 1e\ne8 a0 f9 ff ff\n48 89 c5\n31 ff\nbe 46 00 00 00\nba 60 17 40 00\n31 c0\n48 89 d9\n49 89 e8\ne8 24 00 00 00\n48 8b 0d fd 10 20 00\nbe 47 00 00 00\nba 00 17 40 00\n31 c0\ne8 0c 00 00 00\n66 66 66 2e 0f 1f 84 00 00 00 00 00\n'
p54
S'.text:0000000000400b40\n.text:0000000000400b41\n.text:0000000000400b43\n.text:0000000000400b45\n.text:0000000000400b47\n.text:0000000000400b49\n.text:0000000000400b4a\n.text:0000000000400b4e\n.text:0000000000400b51\n.text:0000000000400b53\n.text:0000000000400b56\n.text:0000000000400b5b\n.text:0000000000400b60\n.text:0000000000400b67\n.text:0000000000400b6a\n.text:0000000000400b6c\n.text:0000000000400b6f\n.text:0000000000400b76\n.text:0000000000400b79\n.text:0000000000400b7c\n.text:0000000000400b7e\n.text:0000000000400b80\n.text:0000000000400b83\n.text:0000000000400b8a\n.text:0000000000400b8d\n.text:0000000000400b8f\n.text:0000000000400b96\n.text:0000000000400b98\n.text:0000000000400b9d\n.text:0000000000400b9f\n.text:0000000000400ba2\n.text:0000000000400ba7\n.text:0000000000400bac\n.text:0000000000400bb2\n.text:0000000000400bb5\n.text:0000000000400bbd\n.text:0000000000400bc2\n.text:0000000000400bca\n.text:0000000000400bd2\n.text:0000000000400bd4\n.text:0000000000400bdc\n.text:0000000000400bdf\n.text:0000000000400be0\n.text:0000000000400be3\n.text:0000000000400be8\n.text:0000000000400bea\n.text:0000000000400bed\n.text:0000000000400bf2\n.text:0000000000400bf5\n.text:0000000000400bf8\n.text:0000000000400bfe\n.text:0000000000400c00\n.text:0000000000400c07\n.text:0000000000400c0e\n.text:0000000000400c11\n.text:0000000000400c16\n.text:0000000000400c19\n.text:0000000000400c1c\n.text:0000000000400c22\n.text:0000000000400c26\n.text:0000000000400c28\n.text:0000000000400c2d\n.text:0000000000400c34\n.text:0000000000400c37\n.text:0000000000400c39\n.text:0000000000400c3d\n.text:0000000000400c3f\n.text:0000000000400c42\n.text:0000000000400c45\n.text:0000000000400c47\n.text:0000000000400c4a\n.text:0000000000400c52\n.text:0000000000400c54\n.text:0000000000400c5b\n.text:0000000000400c5e\n.text:0000000000400c63\n.text:0000000000400c66\n.text:0000000000400c69\n.text:0000000000400c6c\n.text:0000000000400c72\n.text:0000000000400c77\n.text:0000000000400c7f\n.text:0000000000400c82\n.text:0000000000400c87\n.text:0000000000400c8f\n.text:0000000000400c91\n.text:0000000000400c96\n.text:0000000000400c99\n.text:0000000000400c9b\n.text:0000000000400c9e\n.text:0000000000400ca5\n.text:0000000000400ca7\n.text:0000000000400cad\n.text:0000000000400cb2\n.text:0000000000400cb4\n.text:0000000000400cb7\n.text:0000000000400cbd\n.text:0000000000400cc1\n.text:0000000000400cc4\n.text:0000000000400ccb\n.text:0000000000400ccf\n.text:0000000000400cd2\n.text:0000000000400cd5\n.text:0000000000400cd9\n.text:0000000000400cdb\n.text:0000000000400cdf\n.text:0000000000400ce4\n.text:0000000000400ce6\n.text:0000000000400ceb\n.text:0000000000400ced\n.text:0000000000400cef\n.text:0000000000400cf1\n.text:0000000000400cf3\n.text:0000000000400cf6\n.text:0000000000400cf9\n.text:0000000000400cfb\n.text:0000000000400cfd\n.text:0000000000400cff\n.text:0000000000400d01\n.text:0000000000400d04\n.text:0000000000400d09\n.text:0000000000400d0b\n.text:0000000000400d11\n.text:0000000000400d13\n.text:0000000000400d18\n.text:0000000000400d1a\n.text:0000000000400d1d\n.text:0000000000400d22\n.text:0000000000400d24\n.text:0000000000400d28\n.text:0000000000400d29\n.text:0000000000400d2b\n.text:0000000000400d2d\n.text:0000000000400d2f\n.text:0000000000400d31\n.text:0000000000400d32\n.text:0000000000400d33\n.text:0000000000400d38\n.text:0000000000400d3a\n.text:0000000000400d3c\n.text:0000000000400d42\n.text:0000000000400d45\n.text:0000000000400d4b\n.text:0000000000400d4d\n.text:0000000000400d53\n.text:0000000000400d55\n.text:0000000000400d57\n.text:0000000000400d5c\n.text:0000000000400d5f\n.text:0000000000400d61\n.text:0000000000400d63\n.text:0000000000400d65\n.text:0000000000400d68\n.text:0000000000400d6a\n.text:0000000000400d6d\n.text:0000000000400d72\n.text:0000000000400d77\n.text:0000000000400d7c\n.text:0000000000400d81\n.text:0000000000400d84\n.text:0000000000400d87\n.text:0000000000400d8c\n.text:0000000000400d91\n.text:0000000000400d95\n.text:0000000000400d98\n.text:0000000000400d9d\n.text:0000000000400d9f\n.text:0000000000400da1\n.text:0000000000400da4\n.text:0000000000400da7\n.text:0000000000400da9\n.text:0000000000400dae\n.text:0000000000400db1\n.text:0000000000400db6\n.text:0000000000400db8\n.text:0000000000400dbb\n.text:0000000000400dc0\n.text:0000000000400dc2\n.text:0000000000400dc5\n.text:0000000000400dc7\n.text:0000000000400dc9\n.text:0000000000400dcb\n.text:0000000000400dd1\n.text:0000000000400dd6\n.text:0000000000400dd9\n.text:0000000000400ddf\n.text:0000000000400de1\n.text:0000000000400de3\n.text:0000000000400de9\n.text:0000000000400df0\n.text:0000000000400df2\n.text:0000000000400df7\n.text:0000000000400df9\n.text:0000000000400dfe\n.text:0000000000400e03\n.text:0000000000400e05\n.text:0000000000400e07\n.text:0000000000400e09\n.text:0000000000400e0e\n.text:0000000000400e12\n.text:0000000000400e18\n.text:0000000000400e1c\n.text:0000000000400e21\n.text:0000000000400e27\n.text:0000000000400e2c\n.text:0000000000400e2e\n.text:0000000000400e30\n.text:0000000000400e33\n.text:0000000000400e38\n.text:0000000000400e3a\n.text:0000000000400e3c\n.text:0000000000400e42\n.text:0000000000400e45\n.text:0000000000400e4a\n.text:0000000000400e4c\n.text:0000000000400e4f\n.text:0000000000400e51\n.text:0000000000400e56\n.text:0000000000400e5b\n.text:0000000000400e5d\n.text:0000000000400e63\n.text:0000000000400e69\n.text:0000000000400e6c\n.text:0000000000400e71\n.text:0000000000400e73\n.text:0000000000400e79\n.text:0000000000400e7c\n.text:0000000000400e7e\n.text:0000000000400e81\n.text:0000000000400e83\n.text:0000000000400e86\n.text:0000000000400e8c\n.text:0000000000400e8f\n.text:0000000000400e91\n.text:0000000000400e97\n.text:0000000000400e9a\n.text:0000000000400e9f\n.text:0000000000400ea3\n.text:0000000000400ea5\n.text:0000000000400ea7\n.text:0000000000400eac\n.text:0000000000400eae\n.text:0000000000400eb0\n.text:0000000000400eb5\n.text:0000000000400eba\n.text:0000000000400ebf\n.text:0000000000400ec4\n.text:0000000000400ec6\n.text:0000000000400ec9\n.text:0000000000400ecb\n.text:0000000000400ece\n.text:0000000000400ed4\n.text:0000000000400ed9\n.text:0000000000400edf\n.text:0000000000400ee1\n.text:0000000000400ee7\n.text:0000000000400eee\n.text:0000000000400ef0\n.text:0000000000400ef5\n.text:0000000000400efa\n.text:0000000000400efc\n.text:0000000000400f01\n.text:0000000000400f08\n.text:0000000000400f0d\n.text:0000000000400f0f\n.text:0000000000400f14\n.text:0000000000400f19\n.text:0000000000400f1e\n.text:0000000000400f20\n.text:0000000000400f25\n.text:0000000000400f2a\n.text:0000000000400f2c\n.text:0000000000400f2e\n.text:0000000000400f33\n.text:0000000000400f38\n.text:0000000000400f3a\n.text:0000000000400f3d\n.text:0000000000400f42\n.text:0000000000400f44\n.text:0000000000400f49\n.text:0000000000400f4e\n.text:0000000000400f50\n.text:0000000000400f55\n.text:0000000000400f58\n.text:0000000000400f5b\n.text:0000000000400f60\n.text:0000000000400f65\n.text:0000000000400f67\n.text:0000000000400f6a\n.text:0000000000400f6f\n.text:0000000000400f74\n.text:0000000000400f76\n.text:0000000000400f7b\n.text:0000000000400f82\n.text:0000000000400f87\n.text:0000000000400f8c\n.text:0000000000400f8e\n.text:0000000000400f93\n.text:0000000000400f98\n.text:0000000000400f9a\n.text:0000000000400f9f\n.text:0000000000400fa4\n.text:0000000000400fa6\n.text:0000000000400fa8\n.text:0000000000400fab\n.text:0000000000400fb0\n.text:0000000000400fb5\n.text:0000000000400fb7\n.text:0000000000400fbc\n.text:0000000000400fc1\n.text:0000000000400fc3\n.text:0000000000400fc8\n.text:0000000000400fcd\n.text:0000000000400fcf\n.text:0000000000400fd4\n.text:0000000000400fd9\n.text:0000000000400fdb\n.text:0000000000400fe0\n.text:0000000000400fe5\n.text:0000000000400fe7\n.text:0000000000400fec\n.text:0000000000400ff1\n.text:0000000000400ff3\n.text:0000000000400ff8\n.text:0000000000400ffb\n.text:0000000000401000\n.text:0000000000401003\n.text:0000000000401005\n.text:000000000040100a\n.text:000000000040100f\n.text:0000000000401011\n.text:0000000000401014\n.text:0000000000401017\n.text:000000000040101c\n.text:0000000000401023\n.text:0000000000401028\n.text:000000000040102d\n.text:000000000040102f\n.text:0000000000401034\n'
p55
tp56
sS'error'
p57
(S'\n__stdcall error(char * fmt)\n'
p58
V\u000avoid error(char *fmt,...)\u000a\u000a{\u000a  FILE *__stream;\u000a  char in_AL;\u000a  char *pcVar1;\u000a  undefined8 in_RCX;\u000a  char *__format;\u000a  int __status;\u000a  undefined8 in_R8;\u000a  undefined8 in_R9;\u000a  undefined4 in_XMM0_Da;\u000a  undefined4 in_XMM1_Da;\u000a  undefined4 in_XMM2_Da;\u000a  undefined4 in_XMM3_Da;\u000a  undefined4 in_XMM4_Da;\u000a  undefined4 in_XMM5_Da;\u000a  undefined4 in_XMM6_Da;\u000a  undefined4 in_XMM7_Da;\u000a  va_list ap;\u000a  undefined4 local_e8;\u000a  undefined4 local_e4;\u000a  void **local_e0;\u000a  undefined *local_d8;\u000a  undefined local_c8 [24];\u000a  undefined8 local_b0;\u000a  undefined8 local_a8;\u000a  undefined8 local_a0;\u000a  undefined4 local_98;\u000a  undefined4 local_88;\u000a  undefined4 local_78;\u000a  undefined4 local_68;\u000a  undefined4 local_58;\u000a  undefined4 local_48;\u000a  undefined4 local_38;\u000a  undefined4 local_28;\u000a  \u000a  if (in_AL != 0) {\u000a    local_98 = in_XMM0_Da;\u000a    local_88 = in_XMM1_Da;\u000a    local_78 = in_XMM2_Da;\u000a    local_68 = in_XMM3_Da;\u000a    local_58 = in_XMM4_Da;\u000a    local_48 = in_XMM5_Da;\u000a    local_38 = in_XMM6_Da;\u000a    local_28 = in_XMM7_Da;\u000a  }\u000a  local_b0 = in_RCX;\u000a  local_a8 = in_R8;\u000a  local_a0 = in_R9;\u000a  fprintf(stderr,"%s: ",progname);\u000a  local_d8 = local_c8;\u000a  local_e0 = &ap[0].overflow_arg_area;\u000a  local_e4 = 0x30;\u000a  local_e8 = 0x18;\u000a  vfprintf(stderr,__format,&local_e8);\u000a  __stream = stderr;\u000a  if ((int)fmt == 0) {\u000a    fputc(10,stderr);\u000a                    /* WARNING: Subroutine does not return */\u000a    exit(__status);\u000a  }\u000a  pcVar1 = strerror((int)fmt);\u000a  fprintf(__stream,": %s\u005cn",pcVar1,pcVar1);\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(__status);\u000a}\u000a\u000a
p59
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0xd0\nMOV RBX,RDX\nMOV R14D,ESI\nMOV EBP,EDI\nTEST AL,AL\nJZ 0x0040108e\nMOVAPS xmmword ptr [RSP + 0x50],XMM0\nMOVAPS xmmword ptr [RSP + 0x60],XMM1\nMOVAPS xmmword ptr [RSP + 0x70],XMM2\nMOVAPS xmmword ptr [0x80 + RSP],XMM3\nMOVAPS xmmword ptr [0x90 + RSP],XMM4\nMOVAPS xmmword ptr [0xa0 + RSP],XMM5\nMOVAPS xmmword ptr [0xb0 + RSP],XMM6\nMOVAPS xmmword ptr [0xc0 + RSP],XMM7\nMOV qword ptr [RSP + 0x48],R9\nMOV qword ptr [RSP + 0x40],R8\nMOV qword ptr [RSP + 0x38],RCX\nMOV RDI,qword ptr [0x00602100]\nMOV RDX,qword ptr [0x00602110]\nMOV ESI,0x40177c\nXOR EAX,EAX\nCALL 0x00400990\nLEA RAX,[RSP + 0x20]\nMOV qword ptr [RSP + 0x10],RAX\nLEA RAX,[0xf0 + RSP]\nMOV qword ptr [RSP + 0x8],RAX\nMOV dword ptr [RSP + 0x4],0x30\nMOV dword ptr [RSP],0x18\nMOV RDI,qword ptr [0x00602100]\nMOV RDX,RSP\nMOV RSI,RBX\nCALL 0x004009d0\nTEST EBP,EBP\nMOV RBX,qword ptr [0x00602100]\nJNZ 0x0040110f\nMOV EDI,0xa\nMOV RSI,RBX\nCALL 0x00400970\nMOV EDI,R14D\nCALL 0x00400a00\nMOV EDI,EBP\nCALL 0x00400a10\nMOV RCX,RAX\nMOV ESI,0x401781\nXOR EAX,EAX\nMOV RDI,RBX\nMOV RDX,RCX\nCALL 0x00400990\nMOV EDI,R14D\nCALL 0x00400a00\n'
p60
S'55\n41 56\n53\n48 81 ec d0 00 00 00\n48 89 d3\n41 89 f6\n89 fd\n84 c0\n74 37\n0f 29 44 24 50\n0f 29 4c 24 60\n0f 29 54 24 70\n0f 29 9c 24 80 00 00 00\n0f 29 a4 24 90 00 00 00\n0f 29 ac 24 a0 00 00 00\n0f 29 b4 24 b0 00 00 00\n0f 29 bc 24 c0 00 00 00\n4c 89 4c 24 48\n4c 89 44 24 40\n48 89 4c 24 38\n48 8b 3d 5c 10 20 00\n48 8b 15 65 10 20 00\nbe 7c 17 40 00\n31 c0\ne8 d9 f8 ff ff\n48 8d 44 24 20\n48 89 44 24 10\n48 8d 84 24 f0 00 00 00\n48 89 44 24 08\nc7 44 24 04 30 00 00 00\nc7 04 24 18 00 00 00\n48 8b 3d 1c 10 20 00\n48 89 e2\n48 89 de\ne8 e1 f8 ff ff\n85 ed\n48 8b 1d 08 10 20 00\n75 15\nbf 0a 00 00 00\n48 89 de\ne8 69 f8 ff ff\n44 89 f7\ne8 f1 f8 ff ff\n89 ef\ne8 fa f8 ff ff\n48 89 c1\nbe 81 17 40 00\n31 c0\n48 89 df\n48 89 ca\ne8 65 f8 ff ff\n44 89 f7\ne8 cd f8 ff ff\n'
p61
S'.text:0000000000401040\n.text:0000000000401041\n.text:0000000000401043\n.text:0000000000401044\n.text:000000000040104b\n.text:000000000040104e\n.text:0000000000401051\n.text:0000000000401053\n.text:0000000000401055\n.text:0000000000401057\n.text:000000000040105c\n.text:0000000000401061\n.text:0000000000401066\n.text:000000000040106e\n.text:0000000000401076\n.text:000000000040107e\n.text:0000000000401086\n.text:000000000040108e\n.text:0000000000401093\n.text:0000000000401098\n.text:000000000040109d\n.text:00000000004010a4\n.text:00000000004010ab\n.text:00000000004010b0\n.text:00000000004010b2\n.text:00000000004010b7\n.text:00000000004010bc\n.text:00000000004010c1\n.text:00000000004010c9\n.text:00000000004010ce\n.text:00000000004010d6\n.text:00000000004010dd\n.text:00000000004010e4\n.text:00000000004010e7\n.text:00000000004010ea\n.text:00000000004010ef\n.text:00000000004010f1\n.text:00000000004010f8\n.text:00000000004010fa\n.text:00000000004010ff\n.text:0000000000401102\n.text:0000000000401107\n.text:000000000040110a\n.text:000000000040110f\n.text:0000000000401111\n.text:0000000000401116\n.text:0000000000401119\n.text:000000000040111e\n.text:0000000000401120\n.text:0000000000401123\n.text:0000000000401126\n.text:000000000040112b\n.text:000000000040112e\n'
p62
tp63
sS'printf'
p64
(S'\n__stdcall printf(char * __format)\n'
p65
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00602038)();\u000a  return iVar1;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00602038]\n'
p67
S'ff 25 02 17 20 00\n'
p68
S'.plt:0000000000400930\n'
p69
tp70
sS'deregister_tm_clones'
p71
(S'\n__stdcall deregister_tm_clones()\n'
p72
V\u000a/* WARNING: Removing unreachable block (ram,0x00400a85) */\u000a/* WARNING: Removing unreachable block (ram,0x00400a8f) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p73
S'MOV EAX,0x6020d7\nPUSH RBP\nSUB RAX,0x6020d0\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400aa0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400aa0\nPOP RBP\nMOV EDI,0x6020d0\nJMP RAX\nPOP RBP\nRET\n'
p74
S'b8 d7 20 60 00\n55\n48 2d d0 20 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf d0 20 60 00\nff e0\n5d\nc3\n'
p75
S'.text:0000000000400a70\n.text:0000000000400a75\n.text:0000000000400a76\n.text:0000000000400a7c\n.text:0000000000400a80\n.text:0000000000400a83\n.text:0000000000400a85\n.text:0000000000400a8a\n.text:0000000000400a8d\n.text:0000000000400a8f\n.text:0000000000400a90\n.text:0000000000400a95\n.text:0000000000400aa0\n.text:0000000000400aa1\n'
p76
tp77
sS'getopt'
p78
(S'\n__stdcall getopt(int ___argc, char * * ___argv, char * __shortopts)\n'
p79
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint getopt(int ___argc,char **___argv,char *__shortopts)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_getopt_00602080)();\u000a  return iVar1;\u000a}\u000a\u000a
p80
S'JMP qword ptr [0x00602080]\n'
p81
S'ff 25 ba 16 20 00\n'
p82
S'.plt:00000000004009c0\n'
p83
tp84
sS'vfprintf'
p85
(S'\n__stdcall vfprintf(FILE * __s, char * __format, __gnuc_va_list __arg)\n'
p86
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_vfprintf_00602088)();\u000a  return iVar1;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00602088]\n'
p88
S'ff 25 b2 16 20 00\n'
p89
S'.plt:00000000004009d0\n'
p90
tp91
sS'_exit'
p92
(S'\n__stdcall _exit(int __status)\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid _exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR__exit_00602020)();\u000a  return;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x00602020]\n'
p95
S'ff 25 1a 17 20 00\n'
p96
S'.plt:0000000000400900\n'
p97
tp98
sS'alarm'
p99
(S'\n__stdcall alarm(uint __seconds)\n'
p100
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000auint alarm(uint __seconds)\u000a\u000a{\u000a  uint uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_alarm_00602048)();\u000a  return uVar1;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x00602048]\n'
p102
S'ff 25 f2 16 20 00\n'
p103
S'.plt:0000000000400950\n'
p104
tp105
sS'__errno_location'
p106
(S'\n__stdcall __errno_location()\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint * __errno_location(void)\u000a\u000a{\u000a  int *piVar1;\u000a  \u000a  piVar1 = (int *)(*(code *)PTR___errno_location_00602018)();\u000a  return piVar1;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x00602018]\n'
p109
S'ff 25 22 17 20 00\n'
p110
S'.plt:00000000004008f0\n'
p111
tp112
sS'strsignal'
p113
(S'\n__stdcall strsignal(int __sig)\n'
p114
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strsignal(int __sig)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strsignal_00602070)();\u000a  return pcVar1;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x00602070]\n'
p116
S'ff 25 ca 16 20 00\n'
p117
S'.plt:00000000004009a0\n'
p118
tp119
sS'close'
p120
(S'\n__stdcall close(int __fd)\n'
p121
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint close(int __fd)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_close_00602050)();\u000a  return iVar1;\u000a}\u000a\u000a
p122
S'JMP qword ptr [0x00602050]\n'
p123
S'ff 25 ea 16 20 00\n'
p124
S'.plt:0000000000400960\n'
p125
tp126
sS'signal'
p127
(S'\n__stdcall signal(int __sig, __sighandler_t __handler)\n'
p128
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__sighandler_t signal(int __sig,__sighandler_t __handler)\u000a\u000a{\u000a  __sighandler_t pVar1;\u000a  \u000a  pVar1 = (__sighandler_t)(*(code *)PTR_signal_00602060)();\u000a  return pVar1;\u000a}\u000a\u000a
p129
S'JMP qword ptr [0x00602060]\n'
p130
S'ff 25 da 16 20 00\n'
p131
S'.plt:0000000000400980\n'
p132
tp133
sS'frame_dummy'
p134
(S'\n__stdcall frame_dummy()\n'
p135
V\u000a/* WARNING: Removing unreachable block (ram,0x00400b2a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p136
S'MOV EDI,0x601e18\nCMP qword ptr [RDI],0x0\nJNZ 0x00400b20\nJMP 0x00400ab0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400b1b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400ab0\n'
p137
S'bf 18 1e 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p138
S'.text:0000000000400b10\n.text:0000000000400b15\n.text:0000000000400b19\n.text:0000000000400b1b\n.text:0000000000400b20\n.text:0000000000400b25\n.text:0000000000400b28\n.text:0000000000400b2a\n.text:0000000000400b2b\n.text:0000000000400b2e\n.text:0000000000400b30\n.text:0000000000400b31\n'
p139
tp140
sS'atoi'
p141
(S'\n__stdcall atoi(char * __nptr)\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint atoi(char *__nptr)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_atoi_00602098)();\u000a  return iVar1;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x00602098]\n'
p144
S'ff 25 a2 16 20 00\n'
p145
S'.plt:00000000004009f0\n'
p146
tp147
sS'register_tm_clones'
p148
(S'\n__stdcall register_tm_clones()\n'
p149
V\u000a/* WARNING: Removing unreachable block (ram,0x00400ad3) */\u000a/* WARNING: Removing unreachable block (ram,0x00400add) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p150
S'MOV ESI,0x6020d0\nPUSH RBP\nSUB RSI,0x6020d0\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400ae8\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400ae8\nPOP RBP\nMOV EDI,0x6020d0\nJMP RAX\nPOP RBP\nRET\n'
p151
S'be d0 20 60 00\n55\n48 81 ee d0 20 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf d0 20 60 00\nff e0\n5d\nc3\n'
p152
S'.text:0000000000400ab0\n.text:0000000000400ab5\n.text:0000000000400ab6\n.text:0000000000400abd\n.text:0000000000400ac1\n.text:0000000000400ac4\n.text:0000000000400ac7\n.text:0000000000400acb\n.text:0000000000400ace\n.text:0000000000400ad1\n.text:0000000000400ad3\n.text:0000000000400ad8\n.text:0000000000400adb\n.text:0000000000400add\n.text:0000000000400ade\n.text:0000000000400ae3\n.text:0000000000400ae8\n.text:0000000000400ae9\n'
p153
tp154
sS'execvp'
p155
(S'\n__stdcall execvp(char * __file, char * * __argv)\n'
p156
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint execvp(char *__file,char **__argv)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_execvp_00602090)();\u000a  return iVar1;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00602090]\n'
p158
S'ff 25 aa 16 20 00\n'
p159
S'.plt:00000000004009e0\n'
p160
tp161
sS'FUN_004008e0'
p162
(S'\n__stdcall FUN_004008e0()\n'
p163
V\u000avoid FUN_004008e0(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00602010)();\u000a  return;\u000a}\u000a\u000a
p164
S'PUSH qword ptr [0x00602008]\nJMP qword ptr [0x00602010]\n'
p165
S'ff 35 22 17 20 00\nff 25 24 17 20 00\n'
p166
S'.plt:00000000004008e0\n.plt:00000000004008e6\n'
p167
tp168
sS'fprintf'
p169
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p170
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00602068)();\u000a  return iVar1;\u000a}\u000a\u000a
p171
S'JMP qword ptr [0x00602068]\n'
p172
S'ff 25 d2 16 20 00\n'
p173
S'.plt:0000000000400990\n'
p174
tp175
sS'strerror'
p176
(S'\n__stdcall strerror(int __errnum)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strerror(int __errnum)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strerror_006020a8)();\u000a  return pcVar1;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x006020a8]\n'
p179
S'ff 25 92 16 20 00\n'
p180
S'.plt:0000000000400a10\n'
p181
tp182
sS'exit'
p183
(S'\n__stdcall exit(int __status)\n'
p184
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_006020a0)();\u000a  return;\u000a}\u000a\u000a
p185
S'JMP qword ptr [0x006020a0]\n'
p186
S'ff 25 9a 16 20 00\n'
p187
S'.plt:0000000000400a00\n'
p188
tp189
sS'__libc_csu_fini'
p190
(S'\n__stdcall __libc_csu_fini()\n'
p191
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p192
S'RET\n'
p193
S'f3 c3\n'
p194
S'.text:00000000004011e0\n'
p195
tp196
sS'fork'
p197
(S'\n__stdcall fork()\n'
p198
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__pid_t fork(void)\u000a\u000a{\u000a  __pid_t _Var1;\u000a  \u000a  _Var1 = (*(code *)PTR_fork_006020b8)();\u000a  return _Var1;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x006020b8]\n'
p200
S'ff 25 82 16 20 00\n'
p201
S'.plt:0000000000400a30\n'
p202
tp203
sS'strrchr'
p204
(S'\n__stdcall strrchr(char * __s, int __c)\n'
p205
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000achar * strrchr(char *__s,int __c)\u000a\u000a{\u000a  char *pcVar1;\u000a  \u000a  pcVar1 = (char *)(*(code *)PTR_strrchr_00602040)();\u000a  return pcVar1;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x00602040]\n'
p207
S'ff 25 fa 16 20 00\n'
p208
S'.plt:0000000000400940\n'
p209
tp210
sS'__do_global_dtors_aux'
p211
(S'\n__stdcall __do_global_dtors_aux()\n'
p212
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p213
S'CMP byte ptr [0x00602108],0x0\nJNZ 0x00400b0a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400a70\nPOP RBP\nMOV byte ptr [0x00602108],0x1\nRET\n'
p214
S'80 3d 11 16 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 fe 15 20 00 01\nf3 c3\n'
p215
S'.text:0000000000400af0\n.text:0000000000400af7\n.text:0000000000400af9\n.text:0000000000400afa\n.text:0000000000400afd\n.text:0000000000400b02\n.text:0000000000400b03\n.text:0000000000400b0a\n'
p216
tp217
sS'_fini'
p218
(S'\n__stdcall _fini()\n'
p219
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p220
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p221
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p222
S'.fini:00000000004011e4\n.fini:00000000004011e8\n.fini:00000000004011ec\n'
p223
tp224
sS'dup2'
p225
(S'\n__stdcall dup2(int __fd, int __fd2)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint dup2(int __fd,int __fd2)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_dup2_00602030)();\u000a  return iVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x00602030]\n'
p228
S'ff 25 0a 17 20 00\n'
p229
S'.plt:0000000000400920\n'
p230
tp231
sS'open'
p232
(S'\n__stdcall open(char * __file, int __oflag)\n'
p233
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint open(char *__file,int __oflag,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_open_00602078)();\u000a  return iVar1;\u000a}\u000a\u000a
p234
S'JMP qword ptr [0x00602078]\n'
p235
S'ff 25 c2 16 20 00\n'
p236
S'.plt:00000000004009b0\n'
p237
tp238
s.