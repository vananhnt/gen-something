(dp0
S'__libc_csu_init'
p1
(S'\n__stdcall __libc_csu_init()\n'
p2
V\u000avoid __libc_csu_init(EVP_PKEY_CTX *pEParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  long lVar1;\u000a  \u000a  _init(pEParm1);\u000a  lVar1 = 0;\u000a  do {\u000a    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)pEParm1 & 0xffffffff,uParm2,uParm3);\u000a    lVar1 = lVar1 + 1;\u000a  } while (lVar1 != 1);\u000a  return;\u000a}\u000a\u000a
p3
S'PUSH R15\nPUSH R14\nMOV R15D,EDI\nPUSH R13\nPUSH R12\nLEA R12,[0x602de8]\nPUSH RBP\nLEA RBP,[0x602df0]\nPUSH RBX\nMOV R14,RSI\nMOV R13,RDX\nSUB RBP,R12\nSUB RSP,0x8\nSAR RBP,0x3\nCALL 0x00400b70\nTEST RBP,RBP\nJZ 0x00401876\nXOR EBX,EBX\nNOP dword ptr [RAX + RAX*0x1]\nMOV RDX,R13\nMOV RSI,R14\nMOV EDI,R15D\nCALL qword ptr [R12 + RBX*0x8]\nADD RBX,0x1\nCMP RBP,RBX\nJNZ 0x00401860\nADD RSP,0x8\nPOP RBX\nPOP RBP\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p4
S'41 57\n41 56\n41 89 ff\n41 55\n41 54\n4c 8d 25 b6 15 20 00\n55\n48 8d 2d b6 15 20 00\n53\n49 89 f6\n49 89 d5\n4c 29 e5\n48 83 ec 08\n48 c1 fd 03\ne8 1f f3 ff ff\n48 85 ed\n74 20\n31 db\n0f 1f 84 00 00 00 00 00\n4c 89 ea\n4c 89 f6\n44 89 ff\n41 ff 14 dc\n48 83 c3 01\n48 39 dd\n75 ea\n48 83 c4 08\n5b\n5d\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p5
S'.text:0000000000401820\n.text:0000000000401822\n.text:0000000000401824\n.text:0000000000401827\n.text:0000000000401829\n.text:000000000040182b\n.text:0000000000401832\n.text:0000000000401833\n.text:000000000040183a\n.text:000000000040183b\n.text:000000000040183e\n.text:0000000000401841\n.text:0000000000401844\n.text:0000000000401848\n.text:000000000040184c\n.text:0000000000401851\n.text:0000000000401854\n.text:0000000000401856\n.text:0000000000401858\n.text:0000000000401860\n.text:0000000000401863\n.text:0000000000401866\n.text:0000000000401869\n.text:000000000040186d\n.text:0000000000401871\n.text:0000000000401874\n.text:0000000000401876\n.text:000000000040187a\n.text:000000000040187b\n.text:000000000040187c\n.text:000000000040187e\n.text:0000000000401880\n.text:0000000000401882\n.text:0000000000401884\n'
p6
tp7
sS'_init'
p8
(S'\n__stdcall _init(EVP_PKEY_CTX * ctx)\n'
p9
V\u000aint _init(EVP_PKEY_CTX *ctx)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (int)PTR___gmon_start___00602ff8;\u000a  if (PTR___gmon_start___00602ff8 != (undefined *)0x0) {\u000a    iVar1 = (*(code *)PTR___gmon_start___00602ff8)();\u000a  }\u000a  return iVar1;\u000a}\u000a\u000a
p10
S'SUB RSP,0x8\nMOV RAX,qword ptr [0x00602ff8]\nTEST RAX,RAX\nJZ 0x00400b82\nCALL RAX\nADD RSP,0x8\nRET\n'
p11
S'48 83 ec 08\n48 8b 05 7d 24 20 00\n48 85 c0\n74 02\nff d0\n48 83 c4 08\nc3\n'
p12
S'.init:0000000000400b70\n.init:0000000000400b74\n.init:0000000000400b7b\n.init:0000000000400b7e\n.init:0000000000400b80\n.init:0000000000400b82\n.init:0000000000400b86\n'
p13
tp14
sS'FUN_00400b90'
p15
(S'\n__stdcall FUN_00400b90()\n'
p16
V\u000avoid FUN_00400b90(void)\u000a\u000a{\u000a                    /* WARNING: Treating indirect jump as call */\u000a  (*(code *)PTR_00603010)();\u000a  return;\u000a}\u000a\u000a
p17
S'PUSH qword ptr [0x00603008]\nJMP qword ptr [0x00603010]\n'
p18
S'ff 35 72 24 20 00\nff 25 74 24 20 00\n'
p19
S'.plt:0000000000400b90\n.plt:0000000000400b96\n'
p20
tp21
sS'usage'
p22
(S'\n__stdcall usage()\n'
p23
V\u000avoid usage(void)\u000a\u000a{\u000a  long lVar1;\u000a  int __status;\u000a  \u000a  fprintf(stderr,"usage:  %s [-option ...]\u005cn%s",ProgramName,\u000a                    \u000a          "where options include:\u005cn    -display displayname    X server to contact\u005cn    -id resource            resource whose client is to be killed\u005cn    -frame                  don\u005c't ignore window manager frames\u005cn    -button number          specific button to be pressed to select window\u005cn    -all                    kill all clients with top level windows\u005cn    -version                print version and exit\u005cn\u005cn"\u000a         );\u000a  __status = 1;\u000a  lVar1 = 0;\u000a  Exit((Display *)0x1);\u000a  if (lVar1 != 0) {\u000a    XCloseDisplay();\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(__status);\u000a}\u000a\u000a
p24
S'PUSH RAX\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV ESI,0x401c14\nMOV ECX,0x401a88\nXOR EAX,EAX\nCALL 0x00400c50\nMOV EDI,0x1\nXOR ESI,ESI\nCALL 0x00401280\nNOP dword ptr [RAX]\n'
p25
S'50\n48 8b 3d c8 1e 20 00\n48 8b 15 d1 1e 20 00\nbe 14 1c 40 00\nb9 88 1a 40 00\n31 c0\ne8 e0 f9 ff ff\nbf 01 00 00 00\n31 f6\ne8 04 00 00 00\n0f 1f 40 00\n'
p26
S'.text:0000000000401250\n.text:0000000000401251\n.text:0000000000401258\n.text:000000000040125f\n.text:0000000000401264\n.text:0000000000401269\n.text:000000000040126b\n.text:0000000000401270\n.text:0000000000401275\n.text:0000000000401277\n.text:000000000040127c\n'
p27
tp28
sS'XFreeCursor'
p29
(S'\n__stdcall XFreeCursor()\n'
p30
V\u000avoid XFreeCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XFreeCursor_006030b0)();\u000a  return;\u000a}\u000a\u000a
p31
S'JMP qword ptr [0x006030b0]\n'
p32
S'ff 25 da 23 20 00\n'
p33
S'.plt:0000000000400cd0\n'
p34
tp35
sS'main'
p36
(S'\n__stdcall main(char * * argv)\n'
p37
V\u000aint main(char **argv)\u000a\u000a{\u000a  uint uVar1;\u000a  int iVar2;\u000a  int iVar3;\u000a  char *s;\u000a  Display *dpy;\u000a  int iVar4;\u000a  long lVar5;\u000a  char *__format;\u000a  char *pcVar6;\u000a  char **in_RSI;\u000a  FILE *__stream;\u000a  int iVar7;\u000a  bool bVar8;\u000a  char *displayname;\u000a  uchar pointer_map [256];\u000a  uint local_150;\u000a  int local_14c;\u000a  char *local_148;\u000a  char *local_140;\u000a  byte local_138 [264];\u000a  \u000a  iVar3 = (int)argv;\u000a  ProgramName = *in_RSI;\u000a  local_150 = 0xfffffffe;\u000a  local_148 = (char *)0x0;\u000a  local_14c = 0;\u000a  iVar7 = 0;\u000a  s = (char *)0x0;\u000a  local_140 = (char *)0x0;\u000a  if (1 < iVar3) {\u000a    local_140 = (char *)0x0;\u000a    iVar2 = 1;\u000a    s = (char *)0x0;\u000a    __format = (char *)0x0;\u000a    local_14c = 0;\u000a    local_148 = (char *)0x0;\u000a    do {\u000a      if (*in_RSI[(long)iVar2] != '-') goto switchD_00400f06_caseD_63;\u000a      pcVar6 = (char *)0x1;\u000a      switch(in_RSI[(long)iVar2][1]) {\u000a      case 'a':\u000a        local_14c = 1;\u000a        pcVar6 = __format;\u000a        break;\u000a      case 'b':\u000a        iVar2 = iVar2 + 1;\u000a        if (iVar3 <= iVar2) goto LAB_004010a7;\u000a        local_148 = in_RSI[(long)iVar2];\u000a        pcVar6 = __format;\u000a        break;\u000a      default:\u000a        goto switchD_00400f06_caseD_63;\u000a      case 'd':\u000a        iVar2 = iVar2 + 1;\u000a        if (iVar3 <= iVar2) goto LAB_004010a7;\u000a        local_140 = in_RSI[(long)iVar2];\u000a        pcVar6 = __format;\u000a        break;\u000a      case 'f':\u000a        break;\u000a      case 'i':\u000a        iVar2 = iVar2 + 1;\u000a        if (iVar3 <= iVar2) goto LAB_004010a7;\u000a        s = (char *)strtoul(in_RSI[(long)iVar2],(char **)0x0,0);\u000a        pcVar6 = __format;\u000a        if (0x7ffffffe < (ulong)(s + -1) >> 1) {\u000a          fprintf(stderr,"%s:  invalid id \u005c"%s\u005c"\u005cn",ProgramName,in_RSI[(long)iVar2]);\u000a          Exit((Display *)0x1);\u000a          goto LAB_004010e7;\u000a        }\u000a        break;\u000a      case 'v':\u000a        goto switchD_00400f06_caseD_76;\u000a      }\u000a      __format = pcVar6;\u000a      iVar2 = iVar2 + 1;\u000a      iVar7 = (int)__format;\u000a    } while (iVar2 < iVar3);\u000a  }\u000a  __format = local_140;\u000a  dpy = (Display *)XOpenDisplay(local_140);\u000a  if (dpy == (Display *)0x0) {\u000aLAB_004010e7:\u000a    pcVar6 = ProgramName;\u000a    __stream = stderr;\u000a    s = (char *)XDisplayName(__format);\u000a    __format = "%s:  unable to open display \u005c"%s\u005c"\u005cn";\u000a  }\u000a  else {\u000a    iVar3 = *(int *)(dpy + 0xe0);\u000a    if (local_14c != 0) {\u000a      iVar3 = verify_okay_to_kill(dpy);\u000a      if (iVar3 != 0) {\u000a        kill_all_windows();\u000a      }\u000a      goto LAB_0040121e;\u000a    }\u000a    __format = s;\u000a    if (s != (char *)0x0) goto LAB_004011e9;\u000a    s = local_148;\u000a    if (((local_148 == (char *)0x0) &&\u000a        (s = (char *)XGetDefault(dpy,ProgramName,"Button"), s == (char *)0x0)) ||\u000a       (iVar2 = parse_button(s,(int *)&local_150), iVar2 != 0)) {\u000a      uVar1 = local_150;\u000a      if ((-1 < (int)local_150) || (local_150 == 0xfffffffe)) {\u000a        iVar2 = XGetPointerMapping(dpy,local_138,0x100);\u000a        if (iVar2 < 1) {\u000a          fprintf(stderr,"%s:  no pointer mapping, can\u005c't select window\u005cn",ProgramName);\u000a          goto LAB_00401095;\u000a        }\u000a        if ((int)local_150 < 0) {\u000a          local_150 = (uint)local_138[0];\u000a        }\u000a        else {\u000a          lVar5 = 0;\u000a          do {\u000a            iVar4 = (int)lVar5;\u000a            if (uVar1 == (uint)local_138[lVar5]) break;\u000a            lVar5 = lVar5 + 1;\u000a            iVar4 = (int)lVar5;\u000a          } while (lVar5 < (long)iVar2);\u000a          if (iVar4 == iVar2) {\u000a            fprintf(stderr,"%s:  no button number %u in pointer map, can\u005c't select window\u005cn",\u000a                    ProgramName,(ulong)uVar1);\u000a            goto LAB_00401095;\u000a          }\u000a        }\u000a      }\u000a      __format = (char *)get_window_id(dpy,(char *)((long)iVar3 & 0xffffffff));\u000a      s = __format;\u000a      if ((__format == (char *)0x0) ||\u000a         (s = __format, __format == *(char **)(*(long *)(dpy + 0xe8) + 0x10 + (long)iVar3 * 0x80)))\u000a      goto LAB_0040121e;\u000a      if (iVar7 == 0) {\u000a        s = (char *)XmuClientWindow(dpy,__format);\u000a        pcVar6 = __format;\u000a        if ((s == __format) && (iVar3 = wm_state_set(dpy,(Window)s), pcVar6 = s, iVar3 == 0)) {\u000a          iVar3 = wm_running(dpy);\u000a          if ((s != (char *)0x0) && (__format = s, iVar3 == 0)) goto LAB_004011e9;\u000a        }\u000a        else {\u000a          bVar8 = s != (char *)0x0;\u000a          __format = s;\u000a          s = pcVar6;\u000a          if (bVar8) goto LAB_004011e9;\u000a        }\u000a      }\u000a      else {\u000aLAB_004011e9:\u000a        printf("%s:  killing creator of resource 0x%lx\u005cn",ProgramName,__format);\u000a        XSync(dpy,0);\u000a        XKillClient(dpy,__format);\u000a        XSync(dpy,0);\u000a        s = __format;\u000a      }\u000aLAB_0040121e:\u000a      Exit((Display *)0x0);\u000a    }\u000a    __format = "%s:  invalid button specification \u005c"%s\u005c"\u005cn";\u000a    pcVar6 = ProgramName;\u000a    __stream = stderr;\u000a  }\u000a  fprintf(__stream,__format,pcVar6,s);\u000aLAB_00401095:\u000a  Exit((Display *)0x1);\u000aswitchD_00400f06_caseD_63:\u000a  usage();\u000aLAB_004010a7:\u000a  usage();\u000aswitchD_00400f06_caseD_76:\u000a  puts("xkill 1.0.4");\u000a                    /* WARNING: Subroutine does not return */\u000a  exit(0);\u000a}\u000a\u000a
p38
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x128\nMOV R14,RSI\nMOV EBX,EDI\nMOV RAX,qword ptr [R14]\nMOV qword ptr [0x00603130],RAX\nMOV dword ptr [RSP + 0x8],0xfffffffe\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x10],RAX\nCMP EBX,0x2\nMOV dword ptr [RSP + 0xc],0x0\nMOV R15D,0x0\nMOV EAX,0x0\nMOV ECX,0x0\nMOV qword ptr [RSP + 0x18],RCX\nJL 0x00400f9f\nXOR EAX,EAX\nMOV qword ptr [RSP + 0x18],RAX\nMOV R12D,0x1\nXOR EAX,EAX\nXOR EBP,EBP\nMOV dword ptr [RSP + 0xc],0x0\nXOR ECX,ECX\nMOV qword ptr [RSP + 0x10],RCX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVSXD RCX,R12D\nMOV RCX,qword ptr [R14 + RCX*0x8]\nCMP byte ptr [RCX],0x2d\nJNZ 0x004010a2\nMOVSX ECX,byte ptr [RCX + 0x1]\nADD ECX,-0x61\nCMP ECX,0x15\nJA 0x004010a2\nMOV R15D,0x1\nJMP qword ptr [0x4018a8 + RCX*0x8]\nMOV dword ptr [RSP + 0xc],0x1\nJMP 0x00400f49\nINC R12D\nCMP R12D,EBX\nJGE 0x004010a7\nMOVSXD RCX,R12D\nMOV RCX,qword ptr [R14 + RCX*0x8]\nMOV qword ptr [RSP + 0x10],RCX\nJMP 0x00400f49\nINC R12D\nCMP R12D,EBX\nJGE 0x004010a7\nMOVSXD RCX,R12D\nMOV RCX,qword ptr [R14 + RCX*0x8]\nMOV qword ptr [RSP + 0x18],RCX\nMOV R15D,EBP\nJMP 0x00400f90\nINC R12D\nCMP R12D,EBX\nJGE 0x004010a7\nMOVSXD R13,R12D\nMOV RDI,qword ptr [R14 + R13*0x8]\nXOR ESI,ESI\nXOR EDX,EDX\nCALL 0x00400cf0\nMOV RCX,RAX\nDEC RCX\nSHR RCX,1\nCMP RCX,0x7fffffff\nMOV R15D,EBP\nJNC 0x004010bd\nNOP dword ptr CS:[RAX + RAX*0x1]\nINC R12D\nCMP R12D,EBX\nMOV EBP,R15D\nJL 0x00400ee0\nMOV RBX,RAX\nMOV RBP,qword ptr [RSP + 0x18]\nMOV RDI,RBP\nCALL 0x00400c40\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004010e7\nMOVSXD R12,dword ptr [0xe0 + R14]\nCMP dword ptr [RSP + 0xc],0x0\nMOV RDX,RBX\nJNZ 0x00401112\nTEST RDX,RDX\nMOV RBX,qword ptr [RSP + 0x10]\nJNZ 0x004011e9\nTEST RBX,RBX\nJNZ 0x00400fff\nMOV RSI,qword ptr [0x00603130]\nMOV EDX,0x40199c\nMOV RDI,R14\nCALL 0x00400bb0\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x00401014\nLEA RSI,[RSP + 0x8]\nMOV RDI,RBX\nCALL 0x00401460\nTEST EAX,EAX\nJZ 0x00401228\nMOV EAX,dword ptr [RSP + 0x8]\nTEST EAX,EAX\nJNS 0x00401025\nCMP EAX,-0x2\nJNZ 0x00401160\nMOV EBX,dword ptr [RSP + 0x8]\nLEA RSI,[RSP + 0x20]\nMOV EDX,0x100\nMOV RDI,R14\nCALL 0x00400c80\nTEST EAX,EAX\nJLE 0x00401138\nCMP dword ptr [RSP + 0x8],0x0\nJS 0x00401157\nMOVSXD RDX,EAX\nXOR ECX,ECX\nNOP dword ptr CS:[RAX + RAX*0x1]\nMOVZX ESI,byte ptr [RSP + RCX*0x1 + 0x20]\nCMP EBX,ESI\nJZ 0x00401071\nINC RCX\nCMP RCX,RDX\nJL 0x00401060\nCMP ECX,EAX\nJNZ 0x00401160\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV ESI,0x4019f9\nXOR EAX,EAX\nMOV ECX,EBX\nCALL 0x00400c50\nMOV EDI,0x1\nMOV RSI,R14\nCALL 0x00401280\nCALL 0x00401250\nCALL 0x00401250\nMOV EDI,0x40196e\nCALL 0x00400bd0\nXOR EDI,EDI\nCALL 0x00400d10\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV RCX,qword ptr [R14 + R13*0x8]\nMOV ESI,0x401958\nXOR EAX,EAX\nCALL 0x00400c50\nMOV EDI,0x1\nXOR ESI,ESI\nCALL 0x00401280\nMOV R15,qword ptr [0x00603120]\nMOV RBX,qword ptr [0x00603130]\nMOV RDI,RBP\nCALL 0x00400ca0\nMOV RCX,RAX\nMOV ESI,0x40197a\nXOR EAX,EAX\nMOV RDI,R15\nMOV RDX,RBX\nJMP 0x00401240\nMOV RDI,R14\nMOV ESI,R12D\nCALL 0x004012a0\nTEST EAX,EAX\nJZ 0x0040121e\nMOV RDI,R14\nMOV ESI,R12D\nMOV EDX,R15D\nCALL 0x00401340\nJMP 0x0040121e\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV ESI,0x4019cb\nXOR EAX,EAX\nCALL 0x00400c50\nJMP 0x00401095\nMOVZX EAX,byte ptr [RSP + 0x20]\nMOV dword ptr [RSP + 0x8],EAX\nMOV EDX,dword ptr [RSP + 0x8]\nMOV ECX,0x401a37\nMOV RDI,R14\nMOV ESI,R12D\nCALL 0x00401530\nMOV RBX,RAX\nTEST RBX,RBX\nJZ 0x0040121e\nMOV RAX,qword ptr [0xe8 + R14]\nMOV RCX,R12\nSHL RCX,0x7\nCMP RBX,qword ptr [RAX + RCX*0x1 + 0x10]\nJZ 0x0040121e\nTEST R15D,R15D\nJNZ 0x004011df\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00400ba0\nMOV RDX,RAX\nCMP RDX,RBX\nJNZ 0x004011e4\nMOV RDI,R14\nMOV RSI,RDX\nMOV RBX,RDX\nCALL 0x00401700\nMOV RDX,RBX\nTEST EAX,EAX\nJNZ 0x004011e4\nMOV RDI,R14\nMOV ESI,R12D\nCALL 0x004017c0\nMOV RDX,RBX\nTEST RDX,RDX\nJZ 0x0040121e\nTEST EAX,EAX\nJZ 0x004011e9\nJMP 0x0040121e\nMOV RDX,RBX\nJMP 0x004011e9\nTEST RDX,RDX\nJZ 0x0040121e\nMOV RSI,qword ptr [0x00603130]\nMOV EDI,0x401a60\nXOR EAX,EAX\nMOV RBX,RDX\nCALL 0x00400c10\nXOR ESI,ESI\nMOV RDI,R14\nCALL 0x00400cb0\nMOV RDI,R14\nMOV RSI,RBX\nCALL 0x00400bf0\nXOR ESI,ESI\nMOV RDI,R14\nCALL 0x00400cb0\nXOR EDI,EDI\nMOV RSI,R14\nCALL 0x00401280\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV ESI,0x4019a3\nXOR EAX,EAX\nMOV RCX,RBX\nCALL 0x00400c50\nJMP 0x00401095\n'
p39
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 28 01 00 00\n49 89 f6\n89 fb\n49 8b 06\n48 89 05 b0 22 20 00\nc7 44 24 08 fe ff ff ff\n31 c0\n48 89 44 24 10\n83 fb 02\nc7 44 24 0c 00 00 00 00\n41 bf 00 00 00 00\nb8 00 00 00 00\nb9 00 00 00 00\n48 89 4c 24 18\n0f 8c ea 00 00 00\n31 c0\n48 89 44 24 18\n41 bc 01 00 00 00\n31 c0\n31 ed\nc7 44 24 0c 00 00 00 00\n31 c9\n48 89 4c 24 10\n66 66 2e 0f 1f 84 00 00 00 00 00\n49 63 cc\n49 8b 0c ce\n80 39 2d\n0f 85 b2 01 00 00\n0f be 49 01\n83 c1 9f\n83 f9 15\n0f 87 a2 01 00 00\n41 bf 01 00 00 00\nff 24 cd a8 18 40 00\nc7 44 24 0c 01 00 00 00\neb 32\n41 ff c4\n41 39 dc\n0f 8d 84 01 00 00\n49 63 cc\n49 8b 0c ce\n48 89 4c 24 10\neb 18\n41 ff c4\n41 39 dc\n0f 8d 6a 01 00 00\n49 63 cc\n49 8b 0c ce\n48 89 4c 24 18\n41 89 ef\neb 42\n41 ff c4\n41 39 dc\n0f 8d 4d 01 00 00\n4d 63 ec\n4b 8b 3c ee\n31 f6\n31 d2\ne8 86 fd ff ff\n48 89 c1\n48 ff c9\n48 d1 e9\n48 81 f9 ff ff ff 7f\n41 89 ef\n0f 83 3a 01 00 00\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n41 ff c4\n41 39 dc\n44 89 fd\n0f 8c 41 ff ff ff\n48 89 c3\n48 8b 6c 24 18\n48 89 ef\ne8 91 fc ff ff\n49 89 c6\n4d 85 f6\n0f 84 2c 01 00 00\n4d 63 a6 e0 00 00 00\n83 7c 24 0c 00\n48 89 da\n0f 85 42 01 00 00\n48 85 d2\n48 8b 5c 24 10\n0f 85 0b 02 00 00\n48 85 db\n75 1c\n48 8b 35 46 21 20 00\nba 9c 19 40 00\n4c 89 f7\ne8 b9 fb ff ff\n48 89 c3\n48 85 db\n74 15\n48 8d 74 24 08\n48 89 df\ne8 54 04 00 00\n85 c0\n0f 84 14 02 00 00\n8b 44 24 08\n85 c0\n79 09\n83 f8 fe\n0f 85 3b 01 00 00\n8b 5c 24 08\n48 8d 74 24 20\nba 00 01 00 00\n4c 89 f7\ne8 45 fc ff ff\n85 c0\n0f 8e f5 00 00 00\n83 7c 24 08 00\n0f 88 09 01 00 00\n48 63 d0\n31 c9\n66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 74 0c 20\n39 f3\n74 08\n48 ff c1\n48 39 d1\n7c ef\n39 c1\n0f 85 e7 00 00 00\n48 8b 3d a0 20 20 00\n48 8b 15 a9 20 20 00\nbe f9 19 40 00\n31 c0\n89 d9\ne8 bb fb ff ff\nbf 01 00 00 00\n4c 89 f6\ne8 de 01 00 00\ne8 a9 01 00 00\ne8 a4 01 00 00\nbf 6e 19 40 00\ne8 1a fb ff ff\n31 ff\ne8 53 fc ff ff\n48 8b 3d 5c 20 20 00\n48 8b 15 65 20 20 00\n4b 8b 0c ee\nbe 58 19 40 00\n31 c0\ne8 75 fb ff ff\nbf 01 00 00 00\n31 f6\ne8 99 01 00 00\n4c 8b 3d 32 20 20 00\n48 8b 1d 3b 20 20 00\n48 89 ef\ne8 a3 fb ff ff\n48 89 c1\nbe 7a 19 40 00\n31 c0\n4c 89 ff\n48 89 da\ne9 2e 01 00 00\n4c 89 f7\n44 89 e6\ne8 83 01 00 00\n85 c0\n0f 84 f9 00 00 00\n4c 89 f7\n44 89 e6\n44 89 fa\ne8 0d 02 00 00\ne9 e6 00 00 00\n48 8b 3d e1 1f 20 00\n48 8b 15 ea 1f 20 00\nbe cb 19 40 00\n31 c0\ne8 fe fa ff ff\ne9 3e ff ff ff\n0f b6 44 24 20\n89 44 24 08\n8b 54 24 08\nb9 37 1a 40 00\n4c 89 f7\n44 89 e6\ne8 bc 03 00 00\n48 89 c3\n48 85 db\n0f 84 9e 00 00 00\n49 8b 86 e8 00 00 00\n4c 89 e1\n48 c1 e1 07\n48 3b 5c 08 10\n0f 84 85 00 00 00\n45 85 ff\n75 41\n4c 89 f7\n48 89 de\ne8 f7 f9 ff ff\n48 89 c2\n48 39 da\n75 33\n4c 89 f7\n48 89 d6\n48 89 d3\ne8 41 05 00 00\n48 89 da\n85 c0\n75 1e\n4c 89 f7\n44 89 e6\ne8 ef 05 00 00\n48 89 da\n48 85 d2\n74 45\n85 c0\n74 0c\neb 3f\n48 89 da\neb 05\n48 85 d2\n74 35\n48 8b 35 40 1f 20 00\nbf 60 1a 40 00\n31 c0\n48 89 d3\ne8 11 fa ff ff\n31 f6\n4c 89 f7\ne8 a7 fa ff ff\n4c 89 f7\n48 89 de\ne8 dc f9 ff ff\n31 f6\n4c 89 f7\ne8 92 fa ff ff\n31 ff\n4c 89 f6\ne8 58 00 00 00\n48 8b 3d f1 1e 20 00\n48 8b 15 fa 1e 20 00\nbe a3 19 40 00\n31 c0\n48 89 d9\ne8 0b fa ff ff\ne9 4b fe ff ff\n'
p40
S'.text:0000000000400e60\n.text:0000000000400e61\n.text:0000000000400e63\n.text:0000000000400e65\n.text:0000000000400e67\n.text:0000000000400e69\n.text:0000000000400e6a\n.text:0000000000400e71\n.text:0000000000400e74\n.text:0000000000400e76\n.text:0000000000400e79\n.text:0000000000400e80\n.text:0000000000400e88\n.text:0000000000400e8a\n.text:0000000000400e8f\n.text:0000000000400e92\n.text:0000000000400e9a\n.text:0000000000400ea0\n.text:0000000000400ea5\n.text:0000000000400eaa\n.text:0000000000400eaf\n.text:0000000000400eb5\n.text:0000000000400eb7\n.text:0000000000400ebc\n.text:0000000000400ec2\n.text:0000000000400ec4\n.text:0000000000400ec6\n.text:0000000000400ece\n.text:0000000000400ed0\n.text:0000000000400ed5\n.text:0000000000400ee0\n.text:0000000000400ee3\n.text:0000000000400ee7\n.text:0000000000400eea\n.text:0000000000400ef0\n.text:0000000000400ef4\n.text:0000000000400ef7\n.text:0000000000400efa\n.text:0000000000400f00\n.text:0000000000400f06\n.text:0000000000400f0d\n.text:0000000000400f15\n.text:0000000000400f17\n.text:0000000000400f1a\n.text:0000000000400f1d\n.text:0000000000400f23\n.text:0000000000400f26\n.text:0000000000400f2a\n.text:0000000000400f2f\n.text:0000000000400f31\n.text:0000000000400f34\n.text:0000000000400f37\n.text:0000000000400f3d\n.text:0000000000400f40\n.text:0000000000400f44\n.text:0000000000400f49\n.text:0000000000400f4c\n.text:0000000000400f4e\n.text:0000000000400f51\n.text:0000000000400f54\n.text:0000000000400f5a\n.text:0000000000400f5d\n.text:0000000000400f61\n.text:0000000000400f63\n.text:0000000000400f65\n.text:0000000000400f6a\n.text:0000000000400f6d\n.text:0000000000400f70\n.text:0000000000400f73\n.text:0000000000400f7a\n.text:0000000000400f7d\n.text:0000000000400f83\n.text:0000000000400f90\n.text:0000000000400f93\n.text:0000000000400f96\n.text:0000000000400f99\n.text:0000000000400f9f\n.text:0000000000400fa2\n.text:0000000000400fa7\n.text:0000000000400faa\n.text:0000000000400faf\n.text:0000000000400fb2\n.text:0000000000400fb5\n.text:0000000000400fbb\n.text:0000000000400fc2\n.text:0000000000400fc7\n.text:0000000000400fca\n.text:0000000000400fd0\n.text:0000000000400fd3\n.text:0000000000400fd8\n.text:0000000000400fde\n.text:0000000000400fe1\n.text:0000000000400fe3\n.text:0000000000400fea\n.text:0000000000400fef\n.text:0000000000400ff2\n.text:0000000000400ff7\n.text:0000000000400ffa\n.text:0000000000400ffd\n.text:0000000000400fff\n.text:0000000000401004\n.text:0000000000401007\n.text:000000000040100c\n.text:000000000040100e\n.text:0000000000401014\n.text:0000000000401018\n.text:000000000040101a\n.text:000000000040101c\n.text:000000000040101f\n.text:0000000000401025\n.text:0000000000401029\n.text:000000000040102e\n.text:0000000000401033\n.text:0000000000401036\n.text:000000000040103b\n.text:000000000040103d\n.text:0000000000401043\n.text:0000000000401048\n.text:000000000040104e\n.text:0000000000401051\n.text:0000000000401053\n.text:0000000000401060\n.text:0000000000401065\n.text:0000000000401067\n.text:0000000000401069\n.text:000000000040106c\n.text:000000000040106f\n.text:0000000000401071\n.text:0000000000401073\n.text:0000000000401079\n.text:0000000000401080\n.text:0000000000401087\n.text:000000000040108c\n.text:000000000040108e\n.text:0000000000401090\n.text:0000000000401095\n.text:000000000040109a\n.text:000000000040109d\n.text:00000000004010a2\n.text:00000000004010a7\n.text:00000000004010ac\n.text:00000000004010b1\n.text:00000000004010b6\n.text:00000000004010b8\n.text:00000000004010bd\n.text:00000000004010c4\n.text:00000000004010cb\n.text:00000000004010cf\n.text:00000000004010d4\n.text:00000000004010d6\n.text:00000000004010db\n.text:00000000004010e0\n.text:00000000004010e2\n.text:00000000004010e7\n.text:00000000004010ee\n.text:00000000004010f5\n.text:00000000004010f8\n.text:00000000004010fd\n.text:0000000000401100\n.text:0000000000401105\n.text:0000000000401107\n.text:000000000040110a\n.text:000000000040110d\n.text:0000000000401112\n.text:0000000000401115\n.text:0000000000401118\n.text:000000000040111d\n.text:000000000040111f\n.text:0000000000401125\n.text:0000000000401128\n.text:000000000040112b\n.text:000000000040112e\n.text:0000000000401133\n.text:0000000000401138\n.text:000000000040113f\n.text:0000000000401146\n.text:000000000040114b\n.text:000000000040114d\n.text:0000000000401152\n.text:0000000000401157\n.text:000000000040115c\n.text:0000000000401160\n.text:0000000000401164\n.text:0000000000401169\n.text:000000000040116c\n.text:000000000040116f\n.text:0000000000401174\n.text:0000000000401177\n.text:000000000040117a\n.text:0000000000401180\n.text:0000000000401187\n.text:000000000040118a\n.text:000000000040118e\n.text:0000000000401193\n.text:0000000000401199\n.text:000000000040119c\n.text:000000000040119e\n.text:00000000004011a1\n.text:00000000004011a4\n.text:00000000004011a9\n.text:00000000004011ac\n.text:00000000004011af\n.text:00000000004011b1\n.text:00000000004011b4\n.text:00000000004011b7\n.text:00000000004011ba\n.text:00000000004011bf\n.text:00000000004011c2\n.text:00000000004011c4\n.text:00000000004011c6\n.text:00000000004011c9\n.text:00000000004011cc\n.text:00000000004011d1\n.text:00000000004011d4\n.text:00000000004011d7\n.text:00000000004011d9\n.text:00000000004011db\n.text:00000000004011dd\n.text:00000000004011df\n.text:00000000004011e2\n.text:00000000004011e4\n.text:00000000004011e7\n.text:00000000004011e9\n.text:00000000004011f0\n.text:00000000004011f5\n.text:00000000004011f7\n.text:00000000004011fa\n.text:00000000004011ff\n.text:0000000000401201\n.text:0000000000401204\n.text:0000000000401209\n.text:000000000040120c\n.text:000000000040120f\n.text:0000000000401214\n.text:0000000000401216\n.text:0000000000401219\n.text:000000000040121e\n.text:0000000000401220\n.text:0000000000401223\n.text:0000000000401228\n.text:000000000040122f\n.text:0000000000401236\n.text:000000000040123b\n.text:000000000040123d\n.text:0000000000401240\n.text:0000000000401245\n'
p41
tp42
sS'XKillClient'
p43
(S'\n__stdcall XKillClient()\n'
p44
V\u000avoid XKillClient(void)\u000a\u000a{\u000a  (*(code *)PTR_XKillClient_00603040)();\u000a  return;\u000a}\u000a\u000a
p45
S'JMP qword ptr [0x00603040]\n'
p46
S'ff 25 4a 24 20 00\n'
p47
S'.plt:0000000000400bf0\n'
p48
tp49
sS'verify_okay_to_kill'
p50
(S'\n__stdcall verify_okay_to_kill(Display * dpy)\n'
p51
V\u000aint verify_okay_to_kill(Display *dpy)\u000a\u000a{\u000a  XID XVar1;\u000a  int iVar2;\u000a  XID XVar3;\u000a  int iVar4;\u000a  long lVar5;\u000a  uint in_ESI;\u000a  uchar pointer_map [256];\u000a  char local_138 [264];\u000a  \u000a  iVar2 = XGetPointerMapping(dpy,local_138,0x100);\u000a  if (0 < iVar2) {\u000a    XVar1 = *(XID *)(*(long *)(dpy + 0xe8) + 0x10 + (long)(int)in_ESI * 0x80);\u000a    lVar5 = 0;\u000a    iVar4 = 0;\u000a    do {\u000a      if (local_138[lVar5] != 0) {\u000a        XVar3 = get_window_id(dpy,(char *)(ulong)in_ESI);\u000a        if (XVar3 != XVar1) goto LAB_00401320;\u000a        iVar4 = iVar4 + 1;\u000a      }\u000a      lVar5 = lVar5 + 1;\u000a    } while (lVar5 < (long)iVar2);\u000a    if (iVar4 != 0) {\u000a      return 1;\u000a    }\u000a  }\u000aLAB_00401320:\u000a  puts("Aborting.");\u000a  return 0;\u000a}\u000a\u000a
p52
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x108\nMOV R14D,ESI\nMOV R15,RDI\nMOV RSI,RSP\nMOV EDX,0x100\nCALL 0x00400c80\nTEST EAX,EAX\nJLE 0x00401320\nMOV RCX,qword ptr [0xe8 + R15]\nMOVSXD RDX,R14D\nSHL RDX,0x7\nMOV R12,qword ptr [RCX + RDX*0x1 + 0x10]\nMOVSXD R13,EAX\nXOR EBP,EBP\nXOR EBX,EBX\nNOP word ptr CS:[RAX + RAX*0x1]\nMOVZX EDX,byte ptr [RSP + RBP*0x1]\nTEST EDX,EDX\nJZ 0x0040130f\nMOV ECX,0x401ca3\nMOV RDI,R15\nMOV ESI,R14D\nCALL 0x00401530\nCMP RAX,R12\nJNZ 0x00401320\nINC EBX\nINC RBP\nCMP RBP,R13\nJL 0x004012f0\nMOV EAX,0x1\nTEST EBX,EBX\nJNZ 0x0040132c\nMOV EDI,0x401cc7\nCALL 0x00400bd0\nXOR EAX,EAX\nADD RSP,0x108\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\n'
p53
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec 08 01 00 00\n41 89 f6\n49 89 ff\n48 89 e6\nba 00 01 00 00\ne8 bc f9 ff ff\n85 c0\n7e 58\n49 8b 8f e8 00 00 00\n49 63 d6\n48 c1 e2 07\n4c 8b 64 11 10\n4c 63 e8\n31 ed\n31 db\n66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00\n0f b6 14 2c\n85 d2\n74 17\nb9 a3 1c 40 00\n4c 89 ff\n44 89 f6\ne8 28 02 00 00\n4c 39 e0\n75 13\nff c3\n48 ff c5\n4c 39 ed\n7c d9\nb8 01 00 00 00\n85 db\n75 0c\nbf c7 1c 40 00\ne8 a6 f8 ff ff\n31 c0\n48 81 c4 08 01 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n'
p54
S'.text:00000000004012a0\n.text:00000000004012a1\n.text:00000000004012a3\n.text:00000000004012a5\n.text:00000000004012a7\n.text:00000000004012a9\n.text:00000000004012aa\n.text:00000000004012b1\n.text:00000000004012b4\n.text:00000000004012b7\n.text:00000000004012ba\n.text:00000000004012bf\n.text:00000000004012c4\n.text:00000000004012c6\n.text:00000000004012c8\n.text:00000000004012cf\n.text:00000000004012d2\n.text:00000000004012d6\n.text:00000000004012db\n.text:00000000004012de\n.text:00000000004012e0\n.text:00000000004012e2\n.text:00000000004012f0\n.text:00000000004012f4\n.text:00000000004012f6\n.text:00000000004012f8\n.text:00000000004012fd\n.text:0000000000401300\n.text:0000000000401303\n.text:0000000000401308\n.text:000000000040130b\n.text:000000000040130d\n.text:000000000040130f\n.text:0000000000401312\n.text:0000000000401315\n.text:0000000000401317\n.text:000000000040131c\n.text:000000000040131e\n.text:0000000000401320\n.text:0000000000401325\n.text:000000000040132a\n.text:000000000040132c\n.text:0000000000401333\n.text:0000000000401334\n.text:0000000000401336\n.text:0000000000401338\n.text:000000000040133a\n.text:000000000040133c\n.text:000000000040133d\n'
p55
tp56
sS'wm_running'
p57
(S'\n__stdcall wm_running(Display * dpy)\n'
p58
V\u000aint wm_running(Display *dpy)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  int in_ESI;\u000a  undefined auStack136 [96];\u000a  ulong local_28;\u000a  \u000a  iVar1 = XGetWindowAttributes\u000a                    (dpy,*(undefined8 *)(*(long *)(dpy + 0xe8) + 0x10 + (long)in_ESI * 0x80),\u000a                     auStack136);\u000a  if (iVar1 == 0) {\u000a    uVar2 = 0;\u000a  }\u000a  else {\u000a    uVar2 = 1;\u000a    if ((local_28 & 0x100000) == 0) {\u000a      uVar2 = ((uint)local_28 & 0x80000) >> 0x13;\u000a    }\u000a  }\u000a  return (int)uVar2;\u000a}\u000a\u000a
p59
S'SUB RSP,0x88\nMOV RAX,qword ptr [0xe8 + RDI]\nMOVSXD RCX,ESI\nSHL RCX,0x7\nMOV RSI,qword ptr [RAX + RCX*0x1 + 0x10]\nMOV RDX,RSP\nCALL 0x00400cc0\nTEST EAX,EAX\nJZ 0x00401800\nMOV RAX,qword ptr [RSP + 0x60]\nMOV CL,0x1\nTEST EAX,0x100000\nJNZ 0x00401802\nAND EAX,0x80000\nSHR EAX,0x13\nMOV CL,AL\nJMP 0x00401802\nXOR ECX,ECX\nMOVZX EAX,CL\nADD RSP,0x88\nRET\n'
p60
S'48 81 ec 88 00 00 00\n48 8b 87 e8 00 00 00\n48 63 ce\n48 c1 e1 07\n48 8b 74 08 10\n48 89 e2\ne8 de f4 ff ff\n85 c0\n74 1a\n48 8b 44 24 60\nb1 01\na9 00 00 10 00\n75 0e\n25 00 00 08 00\nc1 e8 13\n88 c1\neb 02\n31 c9\n0f b6 c1\n48 81 c4 88 00 00 00\nc3\n'
p61
S'.text:00000000004017c0\n.text:00000000004017c7\n.text:00000000004017ce\n.text:00000000004017d1\n.text:00000000004017d5\n.text:00000000004017da\n.text:00000000004017dd\n.text:00000000004017e2\n.text:00000000004017e4\n.text:00000000004017e6\n.text:00000000004017eb\n.text:00000000004017ed\n.text:00000000004017f2\n.text:00000000004017f4\n.text:00000000004017f9\n.text:00000000004017fc\n.text:00000000004017fe\n.text:0000000000401800\n.text:0000000000401802\n.text:0000000000401805\n.text:000000000040180c\n'
p62
tp63
sS'XFree'
p64
(S'\n__stdcall XFree()\n'
p65
V\u000avoid XFree(void)\u000a\u000a{\u000a  (*(code *)PTR_XFree_00603058)();\u000a  return;\u000a}\u000a\u000a
p66
S'JMP qword ptr [0x00603058]\n'
p67
S'ff 25 32 24 20 00\n'
p68
S'.plt:0000000000400c20\n'
p69
tp70
sS'frame_dummy'
p71
(S'\n__stdcall frame_dummy()\n'
p72
V\u000a/* WARNING: Removing unreachable block (ram,0x00400e4a) */\u000a\u000avoid frame_dummy(void)\u000a\u000a{\u000a  register_tm_clones();\u000a  return;\u000a}\u000a\u000a
p73
S'MOV EDI,0x602df8\nCMP qword ptr [RDI],0x0\nJNZ 0x00400e40\nJMP 0x00400dd0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400e3b\nPUSH RBP\nMOV RBP,RSP\nCALL RAX\nPOP RBP\nJMP 0x00400dd0\n'
p74
S'bf f8 2d 60 00\n48 83 3f 00\n75 05\neb 93\nb8 00 00 00 00\n48 85 c0\n74 f1\n55\n48 89 e5\nff d0\n5d\ne9 7a ff ff ff\n'
p75
S'.text:0000000000400e30\n.text:0000000000400e35\n.text:0000000000400e39\n.text:0000000000400e3b\n.text:0000000000400e40\n.text:0000000000400e45\n.text:0000000000400e48\n.text:0000000000400e4a\n.text:0000000000400e4b\n.text:0000000000400e4e\n.text:0000000000400e50\n.text:0000000000400e51\n'
p76
tp77
sS'Exit'
p78
(S'\n__stdcall Exit(Display * dpy)\n'
p79
V\u000avoid Exit(Display *dpy)\u000a\u000a{\u000a  long in_RSI;\u000a  \u000a  if (in_RSI != 0) {\u000a    XCloseDisplay();\u000a  }\u000a                    /* WARNING: Subroutine does not return */\u000a  exit((int)dpy);\u000a}\u000a\u000a
p80
S'PUSH RBX\nMOV EBX,EDI\nTEST RSI,RSI\nJZ 0x00401290\nMOV RDI,RSI\nCALL 0x00400d30\nMOV EDI,EBX\nCALL 0x00400d10\n'
p81
S'53\n89 fb\n48 85 f6\n74 08\n48 89 f7\ne8 a0 fa ff ff\n89 df\ne8 79 fa ff ff\n'
p82
S'.text:0000000000401280\n.text:0000000000401281\n.text:0000000000401283\n.text:0000000000401286\n.text:0000000000401288\n.text:000000000040128b\n.text:0000000000401290\n.text:0000000000401292\n'
p83
tp84
sS'XSetErrorHandler'
p85
(S'\n__stdcall XSetErrorHandler()\n'
p86
V\u000avoid XSetErrorHandler(void)\u000a\u000a{\u000a  (*(code *)PTR_XSetErrorHandler_00603080)();\u000a  return;\u000a}\u000a\u000a
p87
S'JMP qword ptr [0x00603080]\n'
p88
S'ff 25 0a 24 20 00\n'
p89
S'.plt:0000000000400c70\n'
p90
tp91
sS'__ctype_tolower_loc'
p92
(S'\n__stdcall __ctype_tolower_loc()\n'
p93
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000a__int32_t ** __ctype_tolower_loc(void)\u000a\u000a{\u000a  __int32_t **pp_Var1;\u000a  \u000a  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_006030e8)();\u000a  return pp_Var1;\u000a}\u000a\u000a
p94
S'JMP qword ptr [0x006030e8]\n'
p95
S'ff 25 a2 23 20 00\n'
p96
S'.plt:0000000000400d40\n'
p97
tp98
sS'XGetWindowAttributes'
p99
(S'\n__stdcall XGetWindowAttributes()\n'
p100
V\u000avoid XGetWindowAttributes(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetWindowAttributes_006030a8)();\u000a  return;\u000a}\u000a\u000a
p101
S'JMP qword ptr [0x006030a8]\n'
p102
S'ff 25 e2 23 20 00\n'
p103
S'.plt:0000000000400cc0\n'
p104
tp105
sS'exit'
p106
(S'\n__stdcall exit(int __status)\n'
p107
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000avoid exit(int __status)\u000a\u000a{\u000a  (*(code *)PTR_exit_006030d0)();\u000a  return;\u000a}\u000a\u000a
p108
S'JMP qword ptr [0x006030d0]\n'
p109
S'ff 25 ba 23 20 00\n'
p110
S'.plt:0000000000400d10\n'
p111
tp112
sS'XGetWindowProperty'
p113
(S'\n__stdcall XGetWindowProperty()\n'
p114
V\u000avoid XGetWindowProperty(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetWindowProperty_006030d8)();\u000a  return;\u000a}\u000a\u000a
p115
S'JMP qword ptr [0x006030d8]\n'
p116
S'ff 25 b2 23 20 00\n'
p117
S'.plt:0000000000400d20\n'
p118
tp119
sS'__libc_csu_fini'
p120
(S'\n__stdcall __libc_csu_fini()\n'
p121
V\u000avoid __libc_csu_fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p122
S'RET\n'
p123
S'f3 c3\n'
p124
S'.text:0000000000401890\n'
p125
tp126
sS'kill_all_windows'
p127
(S'\n__stdcall kill_all_windows()\n'
p128
V\u000a/* WARNING: Removing unreachable block (ram,0x004013a7) */\u000a/* WARNING: Removing unreachable block (ram,0x004013b0) */\u000a/* WARNING: Removing unreachable block (ram,0x004013cf) */\u000a/* WARNING: Removing unreachable block (ram,0x004013f0) */\u000a/* WARNING: Removing unreachable block (ram,0x004013d6) */\u000a/* WARNING: Removing unreachable block (ram,0x004013f2) */\u000a/* WARNING: Removing unreachable block (ram,0x0040140a) */\u000a/* WARNING: Removing unreachable block (ram,0x00401410) */\u000a/* WARNING: Removing unreachable block (ram,0x0040141b) */\u000a/* WARNING: Removing unreachable block (ram,0x00401423) */\u000a\u000aint kill_all_windows(void)\u000a\u000a{\u000a  int iVar1;\u000a  undefined8 in_RDI;\u000a  Window dummywindow;\u000a  XWindowAttributes attr;\u000a  \u000a  XSync(in_RDI,0);\u000a  XSetErrorHandler(catch_window_errors);\u000a  XQueryTree();\u000a  XFree();\u000a  XSync();\u000a  iVar1 = XSetErrorHandler(0);\u000a  return iVar1;\u000a}\u000a\u000a
p129
S'PUSH RBP\nPUSH R14\nPUSH RBX\nSUB RSP,0xa0\nMOV R14D,EDX\nMOV RBX,RDI\nMOV RAX,qword ptr [0xe8 + RBX]\nMOVSXD RCX,ESI\nSHL RCX,0x7\nMOV RBP,qword ptr [RAX + RCX*0x1 + 0x10]\nXOR ESI,ESI\nCALL 0x00400cb0\nMOV EDI,0x401810\nCALL 0x00400c70\nMOV dword ptr [RSP + 0x4],0x0\nLEA RDX,[RSP + 0x10]\nLEA R8,[RSP + 0x8]\nLEA R9,[RSP + 0x4]\nMOV RDI,RBX\nMOV RSI,RBP\nMOV RCX,RDX\nCALL 0x00400c00\nMOV EAX,dword ptr [RSP + 0x4]\nTEST R14D,R14D\nJNZ 0x00401401\nTEST EAX,EAX\nJZ 0x00401401\nXOR ECX,ECX\nLEA R14,[RSP + 0x18]\nNOP\nMOV RAX,qword ptr [RSP + 0x8]\nMOV EBP,ECX\nMOV RSI,qword ptr [RAX + RBP*0x8]\nMOV RDI,RBX\nMOV RDX,R14\nCALL 0x00400cc0\nMOV RCX,qword ptr [RSP + 0x8]\nTEST EAX,EAX\nJZ 0x004013f0\nCMP dword ptr [RSP + 0x74],0x2\nJNZ 0x004013f0\nMOV RSI,qword ptr [RCX + RBP*0x8]\nMOV RDI,RBX\nCALL 0x00400ba0\nMOV RCX,qword ptr [RSP + 0x8]\nJMP 0x004013f2\nXOR EAX,EAX\nMOV qword ptr [RCX + RBP*0x8],RAX\nLEA ECX,[RBP + 0x1]\nMOV EAX,dword ptr [RSP + 0x4]\nCMP ECX,EAX\nJC 0x004013b0\nTEST EAX,EAX\nMOV RDI,qword ptr [RSP + 0x8]\nJZ 0x00401430\nXOR EBP,EBP\nNOP dword ptr [RAX]\nMOV EAX,EBP\nMOV RSI,qword ptr [RDI + RAX*0x8]\nTEST RSI,RSI\nJZ 0x00401423\nMOV RDI,RBX\nCALL 0x00400bf0\nINC EBP\nMOV RDI,qword ptr [RSP + 0x8]\nCMP EBP,dword ptr [RSP + 0x4]\nJC 0x00401410\nCALL 0x00400c20\nXOR ESI,ESI\nMOV RDI,RBX\nCALL 0x00400cb0\nXOR EDI,EDI\nCALL 0x00400c70\nADD RSP,0xa0\nPOP RBX\nPOP R14\nPOP RBP\nRET\n'
p130
S'55\n41 56\n53\n48 81 ec a0 00 00 00\n41 89 d6\n48 89 fb\n48 8b 83 e8 00 00 00\n48 63 ce\n48 c1 e1 07\n48 8b 6c 08 10\n31 f6\ne8 45 f9 ff ff\nbf 10 18 40 00\ne8 fb f8 ff ff\nc7 44 24 04 00 00 00 00\n48 8d 54 24 10\n4c 8d 44 24 08\n4c 8d 4c 24 04\n48 89 df\n48 89 ee\n48 89 d1\ne8 66 f8 ff ff\n8b 44 24 04\n45 85 f6\n75 5e\n85 c0\n74 5a\n31 c9\n4c 8d 74 24 18\n66 90\n48 8b 44 24 08\n89 cd\n48 8b 34 e8\n48 89 df\n4c 89 f2\ne8 fa f8 ff ff\n48 8b 4c 24 08\n85 c0\n74 21\n83 7c 24 74 02\n75 1a\n48 8b 34 e9\n48 89 df\ne8 be f7 ff ff\n48 8b 4c 24 08\neb 09\n31 c0\n48 89 04 e9\n8d 4d 01\n8b 44 24 04\n39 c1\n72 af\n85 c0\n48 8b 7c 24 08\n74 26\n31 ed\n0f 1f 40 00\n89 e8\n48 8b 34 c7\n48 85 f6\n74 08\n48 89 df\ne8 cd f7 ff ff\nff c5\n48 8b 7c 24 08\n3b 6c 24 04\n72 e0\ne8 eb f7 ff ff\n31 f6\n48 89 df\ne8 71 f8 ff ff\n31 ff\ne8 2a f8 ff ff\n48 81 c4 a0 00 00 00\n5b\n41 5e\n5d\nc3\n'
p131
S'.text:0000000000401340\n.text:0000000000401341\n.text:0000000000401343\n.text:0000000000401344\n.text:000000000040134b\n.text:000000000040134e\n.text:0000000000401351\n.text:0000000000401358\n.text:000000000040135b\n.text:000000000040135f\n.text:0000000000401364\n.text:0000000000401366\n.text:000000000040136b\n.text:0000000000401370\n.text:0000000000401375\n.text:000000000040137d\n.text:0000000000401382\n.text:0000000000401387\n.text:000000000040138c\n.text:000000000040138f\n.text:0000000000401392\n.text:0000000000401395\n.text:000000000040139a\n.text:000000000040139e\n.text:00000000004013a1\n.text:00000000004013a3\n.text:00000000004013a5\n.text:00000000004013a7\n.text:00000000004013a9\n.text:00000000004013ae\n.text:00000000004013b0\n.text:00000000004013b5\n.text:00000000004013b7\n.text:00000000004013bb\n.text:00000000004013be\n.text:00000000004013c1\n.text:00000000004013c6\n.text:00000000004013cb\n.text:00000000004013cd\n.text:00000000004013cf\n.text:00000000004013d4\n.text:00000000004013d6\n.text:00000000004013da\n.text:00000000004013dd\n.text:00000000004013e2\n.text:00000000004013e7\n.text:00000000004013f0\n.text:00000000004013f2\n.text:00000000004013f6\n.text:00000000004013f9\n.text:00000000004013fd\n.text:00000000004013ff\n.text:0000000000401401\n.text:0000000000401403\n.text:0000000000401408\n.text:000000000040140a\n.text:000000000040140c\n.text:0000000000401410\n.text:0000000000401412\n.text:0000000000401416\n.text:0000000000401419\n.text:000000000040141b\n.text:000000000040141e\n.text:0000000000401423\n.text:0000000000401425\n.text:000000000040142a\n.text:000000000040142e\n.text:0000000000401430\n.text:0000000000401435\n.text:0000000000401437\n.text:000000000040143a\n.text:000000000040143f\n.text:0000000000401441\n.text:0000000000401446\n.text:000000000040144d\n.text:000000000040144e\n.text:0000000000401450\n.text:0000000000401451\n'
p132
tp133
sS'XWindowEvent'
p134
(S'\n__stdcall XWindowEvent()\n'
p135
V\u000avoid XWindowEvent(void)\u000a\u000a{\u000a  (*(code *)PTR_XWindowEvent_006030b8)();\u000a  return;\u000a}\u000a\u000a
p136
S'JMP qword ptr [0x006030b8]\n'
p137
S'ff 25 d2 23 20 00\n'
p138
S'.plt:0000000000400ce0\n'
p139
tp140
sS'__ctype_b_loc'
p141
(S'\n__stdcall __ctype_b_loc()\n'
p142
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aushort ** __ctype_b_loc(void)\u000a\u000a{\u000a  ushort **ppuVar1;\u000a  \u000a  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_006030f0)();\u000a  return ppuVar1;\u000a}\u000a\u000a
p143
S'JMP qword ptr [0x006030f0]\n'
p144
S'ff 25 9a 23 20 00\n'
p145
S'.plt:0000000000400d50\n'
p146
tp147
sS'catch_window_errors'
p148
(S'\n__stdcall catch_window_errors(Display * dpy, XErrorEvent * ev)\n'
p149
V\u000aint catch_window_errors(Display *dpy,XErrorEvent *ev)\u000a\u000a{\u000a  return 0;\u000a}\u000a\u000a
p150
S'XOR EAX,EAX\nRET\n'
p151
S'31 c0\nc3\n'
p152
S'.text:0000000000401810\n.text:0000000000401812\n'
p153
tp154
sS'XOpenDisplay'
p155
(S'\n__stdcall XOpenDisplay()\n'
p156
V\u000avoid XOpenDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XOpenDisplay_00603068)();\u000a  return;\u000a}\u000a\u000a
p157
S'JMP qword ptr [0x00603068]\n'
p158
S'ff 25 22 24 20 00\n'
p159
S'.plt:0000000000400c40\n'
p160
tp161
sS'_start'
p162
(S'\n__stdcall _start()\n'
p163
V\u000avoid _start(undefined8 uParm1,undefined8 uParm2,undefined8 uParm3)\u000a\u000a{\u000a  undefined8 in_stack_00000000;\u000a  undefined auStack8 [8];\u000a  \u000a  (*(code *)PTR___libc_start_main_00602ff0)\u000a            (main,in_stack_00000000,&stack0x00000008,__libc_csu_init,__libc_csu_fini,uParm3,auStack8\u000a            );\u000a  do {\u000a                    /* WARNING: Do nothing block with infinite loop */\u000a  } while( true );\u000a}\u000a\u000a
p164
S'XOR EBP,EBP\nMOV R9,RDX\nPOP RSI\nMOV RDX,RSP\nAND RSP,-0x10\nPUSH RAX\nPUSH RSP\nMOV R8,0x401890\nMOV RCX,0x401820\nMOV RDI,0x400e60\nCALL qword ptr [0x00602ff0]\nHLT\n'
p165
S'31 ed\n49 89 d1\n5e\n48 89 e2\n48 83 e4 f0\n50\n54\n49 c7 c0 90 18 40 00\n48 c7 c1 20 18 40 00\n48 c7 c7 60 0e 40 00\nff 15 66 22 20 00\nf4\n'
p166
S'.text:0000000000400d60\n.text:0000000000400d62\n.text:0000000000400d65\n.text:0000000000400d66\n.text:0000000000400d69\n.text:0000000000400d6d\n.text:0000000000400d6e\n.text:0000000000400d6f\n.text:0000000000400d76\n.text:0000000000400d7d\n.text:0000000000400d84\n.text:0000000000400d8a\n'
p167
tp168
sS'parse_button'
p169
(S'\n__stdcall parse_button(char * s, int * buttonp)\n'
p170
V\u000aint parse_button(char *s,int *buttonp)\u000a\u000a{\u000a  int iVar1;\u000a  ushort **ppuVar2;\u000a  __int32_t **pp_Var3;\u000a  char *pcVar4;\u000a  char cVar5;\u000a  \u000a  cVar5 = *s;\u000a  if (cVar5 != 0) {\u000a    pcVar4 = s + 1;\u000a    do {\u000a      if (-1 < cVar5) {\u000a        ppuVar2 = __ctype_b_loc();\u000a        if ((*(byte *)((long)*ppuVar2 + (long)cVar5 * 2 + 1) & 1) != 0) {\u000a          pp_Var3 = __ctype_tolower_loc();\u000a          pcVar4[-1] = *(char *)(*pp_Var3 + (long)cVar5);\u000a        }\u000a      }\u000a      cVar5 = *pcVar4;\u000a      pcVar4 = pcVar4 + 1;\u000a    } while (cVar5 != 0);\u000a    cVar5 = *s;\u000a    if (cVar5 != 'a') goto LAB_004014d2;\u000a    if (((s[1] == 'n') && (s[2] == 'y')) && (s[3] == 0)) {\u000a      *buttonp = -1;\u000a      return 1;\u000a    }\u000a  }\u000a  cVar5 = *s;\u000aLAB_004014d2:\u000a  if (cVar5 != 0) {\u000a    pcVar4 = s + 1;\u000a    do {\u000a      if (cVar5 < 0) {\u000a        return 0;\u000a      }\u000a      ppuVar2 = __ctype_b_loc();\u000a      if ((*(byte *)((long)*ppuVar2 + (long)cVar5 * 2 + 1) & 8) == 0) {\u000a        return 0;\u000a      }\u000a      cVar5 = *pcVar4;\u000a      pcVar4 = pcVar4 + 1;\u000a    } while (cVar5 != 0);\u000a  }\u000a  iVar1 = atoi(s);\u000a  *buttonp = iVar1;\u000a  return 1;\u000a}\u000a\u000a
p171
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R12\nPUSH RBX\nMOV R14,RSI\nMOV R15,RDI\nMOV BPL,byte ptr [R15]\nTEST BPL,BPL\nJZ 0x004014cf\nLEA RBX,[R15 + 0x1]\nNOP word ptr [RAX + RAX*0x1]\nTEST BPL,BPL\nJS 0x004014a7\nCALL 0x00400d50\nMOV RAX,qword ptr [RAX]\nMOVSX RBP,BPL\nTEST byte ptr [RAX + RBP*0x2 + 0x1],0x1\nJZ 0x004014a7\nCALL 0x00400d40\nMOV RAX,qword ptr [RAX]\nMOVZX EAX,byte ptr [RAX + RBP*0x4]\nMOV byte ptr [RBX + -0x1],AL\nMOVZX EBP,byte ptr [RBX]\nINC RBX\nTEST BPL,BPL\nJNZ 0x00401480\nMOV BL,byte ptr [R15]\nCMP BL,0x61\nJNZ 0x004014d2\nCMP byte ptr [R15 + 0x1],0x6e\nJNZ 0x004014cf\nCMP byte ptr [R15 + 0x2],0x79\nJNZ 0x004014cf\nCMP byte ptr [R15 + 0x3],0x0\nJZ 0x0040151f\nMOV BL,byte ptr [R15]\nTEST BL,BL\nJZ 0x00401502\nLEA RBP,[R15 + 0x1]\nXOR R12D,R12D\nNOP dword ptr [RAX]\nTEST BL,BL\nJS 0x00401513\nCALL 0x00400d50\nMOV RAX,qword ptr [RAX]\nMOVSX RCX,BL\nTEST byte ptr [RAX + RCX*0x2 + 0x1],0x8\nJZ 0x00401513\nMOVZX EBX,byte ptr [RBP]\nINC RBP\nTEST BL,BL\nJNZ 0x004014e0\nMOV RDI,R15\nCALL 0x00400d00\nMOV dword ptr [R14],EAX\nMOV R12D,0x1\nMOV EAX,R12D\nPOP RBX\nPOP R12\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV dword ptr [R14],0xffffffff\nJMP 0x0040150d\n'
p172
S'55\n41 57\n41 56\n41 54\n53\n49 89 f6\n49 89 ff\n41 8a 2f\n40 84 ed\n74 59\n49 8d 5f 01\n66 0f 1f 44 00 00\n40 84 ed\n78 22\ne8 c6 f8 ff ff\n48 8b 00\n48 0f be ed\nf6 44 68 01 01\n74 0f\ne8 a3 f8 ff ff\n48 8b 00\n0f b6 04 a8\n88 43 ff\n0f b6 2b\n48 ff c3\n40 84 ed\n75 ce\n41 8a 1f\n80 fb 61\n75 18\n41 80 7f 01 6e\n75 0e\n41 80 7f 02 79\n75 07\n41 80 7f 03 00\n74 50\n41 8a 1f\n84 db\n74 2c\n49 8d 6f 01\n45 31 e4\n0f 1f 00\n84 db\n78 2f\ne8 67 f8 ff ff\n48 8b 00\n48 0f be cb\nf6 44 48 01 08\n74 1c\n0f b6 5d 00\n48 ff c5\n84 db\n75 de\n4c 89 ff\ne8 f6 f7 ff ff\n41 89 06\n41 bc 01 00 00 00\n44 89 e0\n5b\n41 5c\n41 5e\n41 5f\n5d\nc3\n41 c7 06 ff ff ff ff\neb e5\n'
p173
S'.text:0000000000401460\n.text:0000000000401461\n.text:0000000000401463\n.text:0000000000401465\n.text:0000000000401467\n.text:0000000000401468\n.text:000000000040146b\n.text:000000000040146e\n.text:0000000000401471\n.text:0000000000401474\n.text:0000000000401476\n.text:000000000040147a\n.text:0000000000401480\n.text:0000000000401483\n.text:0000000000401485\n.text:000000000040148a\n.text:000000000040148d\n.text:0000000000401491\n.text:0000000000401496\n.text:0000000000401498\n.text:000000000040149d\n.text:00000000004014a0\n.text:00000000004014a4\n.text:00000000004014a7\n.text:00000000004014aa\n.text:00000000004014ad\n.text:00000000004014b0\n.text:00000000004014b2\n.text:00000000004014b5\n.text:00000000004014b8\n.text:00000000004014ba\n.text:00000000004014bf\n.text:00000000004014c1\n.text:00000000004014c6\n.text:00000000004014c8\n.text:00000000004014cd\n.text:00000000004014cf\n.text:00000000004014d2\n.text:00000000004014d4\n.text:00000000004014d6\n.text:00000000004014da\n.text:00000000004014dd\n.text:00000000004014e0\n.text:00000000004014e2\n.text:00000000004014e4\n.text:00000000004014e9\n.text:00000000004014ec\n.text:00000000004014f0\n.text:00000000004014f5\n.text:00000000004014f7\n.text:00000000004014fb\n.text:00000000004014fe\n.text:0000000000401500\n.text:0000000000401502\n.text:0000000000401505\n.text:000000000040150a\n.text:000000000040150d\n.text:0000000000401513\n.text:0000000000401516\n.text:0000000000401517\n.text:0000000000401519\n.text:000000000040151b\n.text:000000000040151d\n.text:000000000040151e\n.text:000000000040151f\n.text:0000000000401526\n'
p174
tp175
sS'printf'
p176
(S'\n__stdcall printf(char * __format)\n'
p177
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint printf(char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_printf_00603050)();\u000a  return iVar1;\u000a}\u000a\u000a
p178
S'JMP qword ptr [0x00603050]\n'
p179
S'ff 25 3a 24 20 00\n'
p180
S'.plt:0000000000400c10\n'
p181
tp182
sS'deregister_tm_clones'
p183
(S'\n__stdcall deregister_tm_clones()\n'
p184
V\u000a/* WARNING: Removing unreachable block (ram,0x00400da5) */\u000a/* WARNING: Removing unreachable block (ram,0x00400daf) */\u000a\u000avoid deregister_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p185
S'MOV EAX,0x60310f\nPUSH RBP\nSUB RAX,0x603108\nCMP RAX,0xe\nMOV RBP,RSP\nJBE 0x00400dc0\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400dc0\nPOP RBP\nMOV EDI,0x603108\nJMP RAX\nPOP RBP\nRET\n'
p186
S'b8 0f 31 60 00\n55\n48 2d 08 31 60 00\n48 83 f8 0e\n48 89 e5\n76 1b\nb8 00 00 00 00\n48 85 c0\n74 11\n5d\nbf 08 31 60 00\nff e0\n5d\nc3\n'
p187
S'.text:0000000000400d90\n.text:0000000000400d95\n.text:0000000000400d96\n.text:0000000000400d9c\n.text:0000000000400da0\n.text:0000000000400da3\n.text:0000000000400da5\n.text:0000000000400daa\n.text:0000000000400dad\n.text:0000000000400daf\n.text:0000000000400db0\n.text:0000000000400db5\n.text:0000000000400dc0\n.text:0000000000400dc1\n'
p188
tp189
sS'XDisplayName'
p190
(S'\n__stdcall XDisplayName()\n'
p191
V\u000avoid XDisplayName(void)\u000a\u000a{\u000a  (*(code *)PTR_XDisplayName_00603098)();\u000a  return;\u000a}\u000a\u000a
p192
S'JMP qword ptr [0x00603098]\n'
p193
S'ff 25 f2 23 20 00\n'
p194
S'.plt:0000000000400ca0\n'
p195
tp196
sS'XGetDefault'
p197
(S'\n__stdcall XGetDefault()\n'
p198
V\u000avoid XGetDefault(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetDefault_00603020)();\u000a  return;\u000a}\u000a\u000a
p199
S'JMP qword ptr [0x00603020]\n'
p200
S'ff 25 6a 24 20 00\n'
p201
S'.plt:0000000000400bb0\n'
p202
tp203
sS'strtoul'
p204
(S'\n__stdcall strtoul(char * __nptr, char * * __endptr, int __base)\n'
p205
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aulong strtoul(char *__nptr,char **__endptr,int __base)\u000a\u000a{\u000a  ulong uVar1;\u000a  \u000a  uVar1 = (*(code *)PTR_strtoul_006030c0)();\u000a  return uVar1;\u000a}\u000a\u000a
p206
S'JMP qword ptr [0x006030c0]\n'
p207
S'ff 25 ca 23 20 00\n'
p208
S'.plt:0000000000400cf0\n'
p209
tp210
sS'XAllowEvents'
p211
(S'\n__stdcall XAllowEvents()\n'
p212
V\u000avoid XAllowEvents(void)\u000a\u000a{\u000a  (*(code *)PTR_XAllowEvents_00603028)();\u000a  return;\u000a}\u000a\u000a
p213
S'JMP qword ptr [0x00603028]\n'
p214
S'ff 25 62 24 20 00\n'
p215
S'.plt:0000000000400bc0\n'
p216
tp217
sS'XmuClientWindow'
p218
(S'\n__stdcall XmuClientWindow()\n'
p219
V\u000avoid XmuClientWindow(void)\u000a\u000a{\u000a  (*(code *)PTR_XmuClientWindow_00603018)();\u000a  return;\u000a}\u000a\u000a
p220
S'JMP qword ptr [0x00603018]\n'
p221
S'ff 25 72 24 20 00\n'
p222
S'.plt:0000000000400ba0\n'
p223
tp224
sS'atoi'
p225
(S'\n__stdcall atoi(char * __nptr)\n'
p226
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint atoi(char *__nptr)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_atoi_006030c8)();\u000a  return iVar1;\u000a}\u000a\u000a
p227
S'JMP qword ptr [0x006030c8]\n'
p228
S'ff 25 c2 23 20 00\n'
p229
S'.plt:0000000000400d00\n'
p230
tp231
sS'register_tm_clones'
p232
(S'\n__stdcall register_tm_clones()\n'
p233
V\u000a/* WARNING: Removing unreachable block (ram,0x00400df3) */\u000a/* WARNING: Removing unreachable block (ram,0x00400dfd) */\u000a\u000avoid register_tm_clones(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p234
S'MOV ESI,0x603108\nPUSH RBP\nSUB RSI,0x603108\nSAR RSI,0x3\nMOV RBP,RSP\nMOV RAX,RSI\nSHR RAX,0x3f\nADD RSI,RAX\nSAR RSI,1\nJZ 0x00400e08\nMOV EAX,0x0\nTEST RAX,RAX\nJZ 0x00400e08\nPOP RBP\nMOV EDI,0x603108\nJMP RAX\nPOP RBP\nRET\n'
p235
S'be 08 31 60 00\n55\n48 81 ee 08 31 60 00\n48 c1 fe 03\n48 89 e5\n48 89 f0\n48 c1 e8 3f\n48 01 c6\n48 d1 fe\n74 15\nb8 00 00 00 00\n48 85 c0\n74 0b\n5d\nbf 08 31 60 00\nff e0\n5d\nc3\n'
p236
S'.text:0000000000400dd0\n.text:0000000000400dd5\n.text:0000000000400dd6\n.text:0000000000400ddd\n.text:0000000000400de1\n.text:0000000000400de4\n.text:0000000000400de7\n.text:0000000000400deb\n.text:0000000000400dee\n.text:0000000000400df1\n.text:0000000000400df3\n.text:0000000000400df8\n.text:0000000000400dfb\n.text:0000000000400dfd\n.text:0000000000400dfe\n.text:0000000000400e03\n.text:0000000000400e08\n.text:0000000000400e09\n'
p237
tp238
sS'get_window_id'
p239
(S'\n__stdcall get_window_id(Display * dpy, char * msg)\n'
p240
V\u000aXID get_window_id(Display *dpy,char *msg)\u000a\u000a{\u000a  int iVar1;\u000a  long lVar2;\u000a  XID XVar3;\u000a  ulong in_RDX;\u000a  int iVar4;\u000a  char *__format;\u000a  Display *pDVar5;\u000a  undefined8 uVar6;\u000a  XID XVar7;\u000a  bool bVar8;\u000a  XEvent event;\u000a  int iStack340;\u000a  long lStack336;\u000a  long lStack328;\u000a  undefined auStack320 [8];\u000a  undefined auStack312 [8];\u000a  Display *pDStack304;\u000a  undefined8 uStack296;\u000a  XID XStack288;\u000a  long lStack280;\u000a  int local_100;\u000a  int local_fc;\u000a  long local_f8;\u000a  int local_f0 [12];\u000a  XID local_c0;\u000a  int local_9c;\u000a  \u000a  XVar3 = *(XID *)(*(long *)(dpy + 0xe8) + 0x10 + (long)(int)msg * 0x80);\u000a  lVar2 = XCreateFontCursor(dpy,0x58);\u000a  if (lVar2 == 0) {\u000a    __format = "%s:  unable to create selection cursor\u005cn";\u000a  }\u000a  else {\u000a    printf("Select %s with ");\u000a    local_fc = (int)(in_RDX & 0xffffffff);\u000a    if (local_fc == -1) {\u000a      printf("any button");\u000a    }\u000a    else {\u000a      printf("button %d",in_RDX & 0xffffffff);\u000a    }\u000a    puts("....");\u000a    iVar4 = 0;\u000a    XSync(dpy,0);\u000a    lStack280 = 0;\u000a    uStack296 = 0;\u000a    pDStack304 = (Display *)0x4015ec;\u000a    XStack288 = lVar2;\u000a    local_f8 = lVar2;\u000a    iVar1 = XGrabPointer(dpy,XVar3,0,0xc,0,1);\u000a    if (iVar1 == 0) {\u000a      local_100 = -1;\u000a      bVar8 = true;\u000a      XVar7 = 0;\u000a      do {\u000a        XAllowEvents(dpy,1,0);\u000a        XWindowEvent(dpy,XVar3,0xc,local_f0);\u000a        if (local_f0[0] == 5) {\u000a          iVar4 = iVar4 - (uint)(0 < iVar4);\u000a        }\u000a        else {\u000a          if (local_f0[0] == 4) {\u000a            if (bVar8) {\u000a              local_100 = local_9c;\u000a              XVar7 = local_c0;\u000a              if (local_c0 == 0) {\u000a                XVar7 = XVar3;\u000a              }\u000a            }\u000a            iVar4 = iVar4 + 1;\u000a          }\u000a        }\u000a        bVar8 = XVar7 == 0;\u000a      } while ((bVar8) || (iVar4 != 0));\u000a      XUngrabPointer(dpy,0);\u000a      XFreeCursor(dpy,local_f8);\u000a      XSync(dpy,0);\u000a      XVar3 = 0;\u000a      if (local_100 == local_fc) {\u000a        XVar3 = XVar7;\u000a      }\u000a      if (local_fc == -1) {\u000a        XVar3 = XVar7;\u000a      }\u000a      return XVar3;\u000a    }\u000a    __format = "%s:  unable to grab cursor\u005cn";\u000a  }\u000a  fprintf(stderr,__format,ProgramName);\u000a  uVar6 = 1;\u000a  pDVar5 = dpy;\u000a  Exit((Display *)0x1);\u000a  lStack336 = 0;\u000a  pDStack304 = dpy;\u000a  XStack288 = XVar3;\u000a  lStack280 = lVar2;\u000a  lVar2 = XInternAtom();\u000a  if (lVar2 == 0) {\u000a    XVar3 = 0;\u000a  }\u000a  else {\u000a    iVar1 = XGetWindowProperty(uVar6,pDVar5,lVar2,0,0,0,0,&lStack328,&iStack340,auStack312,\u000a                               auStack320,&lStack336);\u000a    if (lStack336 != 0) {\u000a      XFree();\u000a    }\u000a    bVar8 = false;\u000a    if ((iVar1 == 0) && (bVar8 = false, lStack328 != 0)) {\u000a      bVar8 = iStack340 != 0;\u000a    }\u000a    XVar3 = (XID)bVar8;\u000a  }\u000a  return XVar3;\u000a}\u000a\u000a
p241
S'PUSH RBP\nPUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0xd8\nMOV R12,RCX\nMOV EBP,EDX\nMOV RBX,RDI\nMOV RAX,qword ptr [0xe8 + RBX]\nMOVSXD RCX,ESI\nSHL RCX,0x7\nMOV R13,qword ptr [RAX + RCX*0x1 + 0x10]\nMOV ESI,0x58\nCALL 0x00400be0\nMOV R14,RAX\nTEST R14,R14\nJZ 0x004016c1\nMOV EDI,0x401c5c\nXOR EAX,EAX\nMOV RSI,R12\nCALL 0x00400c10\nCMP EBP,-0x1\nMOV dword ptr [RSP + 0xc],EBP\nJZ 0x0040159a\nMOV EDI,0x401c77\nXOR EAX,EAX\nMOV ESI,EBP\nCALL 0x00400c10\nJMP 0x004015a6\nMOV EDI,0x401c6c\nXOR EAX,EAX\nCALL 0x00400c10\nMOV EDI,0x401cd1\nCALL 0x00400bd0\nXOR EBP,EBP\nXOR ESI,ESI\nMOV RDI,RBX\nCALL 0x00400cb0\nSUB RSP,0x8\nMOV EDX,0x0\nMOV ECX,0xc\nMOV R8D,0x0\nMOV R9D,0x1\nMOV RDI,RBX\nMOV RSI,R13\nPUSH 0x0\nMOV qword ptr [RSP + 0x20],R14\nPUSH R14\nPUSH 0x0\nCALL 0x00400c30\nADD RSP,0x20\nTEST EAX,EAX\nJNZ 0x004016d6\nMOV dword ptr [RSP + 0x8],0xffffffff\nMOV R14B,0x1\nLEA R12,[RSP + 0x18]\nXOR R15D,R15D\nNOP dword ptr [RAX + RAX*0x1]\nMOV ESI,0x1\nXOR EDX,EDX\nMOV RDI,RBX\nCALL 0x00400bc0\nMOV EDX,0xc\nMOV RDI,RBX\nMOV RSI,R13\nMOV RCX,R12\nCALL 0x00400ce0\nMOV EAX,dword ptr [RSP + 0x18]\nCMP EAX,0x5\nJZ 0x00401660\nCMP EAX,0x4\nJNZ 0x00401669\nTEST R14B,0x1\nJZ 0x0040165a\nMOV EAX,dword ptr [RSP + 0x6c]\nMOV dword ptr [RSP + 0x8],EAX\nMOV R15,qword ptr [RSP + 0x48]\nTEST R15,R15\nCMOVZ R15,R13\nINC EBP\nJMP 0x00401669\nXOR EAX,EAX\nTEST EBP,EBP\nSETG AL\nSUB EBP,EAX\nTEST R15,R15\nSETZ R14B\nJZ 0x00401610\nTEST EBP,EBP\nJNZ 0x00401610\nXOR EBP,EBP\nXOR ESI,ESI\nMOV RDI,RBX\nCALL 0x00400c60\nMOV RDI,RBX\nMOV RSI,qword ptr [RSP + 0x10]\nCALL 0x00400cd0\nXOR ESI,ESI\nMOV RDI,RBX\nCALL 0x00400cb0\nMOV EAX,dword ptr [RSP + 0xc]\nCMP dword ptr [RSP + 0x8],EAX\nCMOVZ RBP,R15\nCMP EAX,-0x1\nCMOVZ RBP,R15\nMOV RAX,RBP\nADD RSP,0xd8\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nPOP RBP\nRET\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV ESI,0x401c34\nJMP 0x004016e9\nMOV RDI,qword ptr [0x00603120]\nMOV RDX,qword ptr [0x00603130]\nMOV ESI,0x401c87\nXOR EAX,EAX\nCALL 0x00400c50\nMOV EDI,0x1\nMOV RSI,RBX\nCALL 0x00401280\nNOP dword ptr [RAX]\n'
p242
S'55\n41 57\n41 56\n41 55\n41 54\n53\n48 81 ec d8 00 00 00\n49 89 cc\n89 d5\n48 89 fb\n48 8b 83 e8 00 00 00\n48 63 ce\n48 c1 e1 07\n4c 8b 6c 08 10\nbe 58 00 00 00\ne8 7a f6 ff ff\n49 89 c6\n4d 85 f6\n0f 84 4f 01 00 00\nbf 5c 1c 40 00\n31 c0\n4c 89 e6\ne8 8f f6 ff ff\n83 fd ff\n89 6c 24 0c\n74 10\nbf 77 1c 40 00\n31 c0\n89 ee\ne8 78 f6 ff ff\neb 0c\nbf 6c 1c 40 00\n31 c0\ne8 6a f6 ff ff\nbf d1 1c 40 00\ne8 20 f6 ff ff\n31 ed\n31 f6\n48 89 df\ne8 f4 f6 ff ff\n48 83 ec 08\nba 00 00 00 00\nb9 0c 00 00 00\n41 b8 00 00 00 00\n41 b9 01 00 00 00\n48 89 df\n4c 89 ee\n6a 00\n4c 89 74 24 20\n41 56\n6a 00\ne8 44 f6 ff ff\n48 83 c4 20\n85 c0\n0f 85 de 00 00 00\nc7 44 24 08 ff ff ff ff\n41 b6 01\n4c 8d 64 24 18\n45 31 ff\n0f 1f 44 00 00\nbe 01 00 00 00\n31 d2\n48 89 df\ne8 a1 f5 ff ff\nba 0c 00 00 00\n48 89 df\n4c 89 ee\n4c 89 e1\ne8 ae f6 ff ff\n8b 44 24 18\n83 f8 05\n74 25\n83 f8 04\n75 29\n41 f6 c6 01\n74 14\n8b 44 24 6c\n89 44 24 08\n4c 8b 7c 24 48\n4d 85 ff\n4d 0f 44 fd\nff c5\neb 0b\n31 c0\n85 ed\n0f 9f c0\n29 c5\n4d 85 ff\n41 0f 94 c6\n74 9e\n85 ed\n75 9a\n31 ed\n31 f6\n48 89 df\ne8 de f5 ff ff\n48 89 df\n48 8b 74 24 10\ne8 41 f6 ff ff\n31 f6\n48 89 df\ne8 17 f6 ff ff\n8b 44 24 0c\n39 44 24 08\n49 0f 44 ef\n83 f8 ff\n49 0f 44 ef\n48 89 e8\n48 81 c4 d8 00 00 00\n5b\n41 5c\n41 5d\n41 5e\n41 5f\n5d\nc3\n48 8b 3d 58 1a 20 00\n48 8b 15 61 1a 20 00\nbe 34 1c 40 00\neb 13\n48 8b 3d 43 1a 20 00\n48 8b 15 4c 1a 20 00\nbe 87 1c 40 00\n31 c0\ne8 60 f5 ff ff\nbf 01 00 00 00\n48 89 de\ne8 83 fb ff ff\n0f 1f 00\n'
p243
S'.text:0000000000401530\n.text:0000000000401531\n.text:0000000000401533\n.text:0000000000401535\n.text:0000000000401537\n.text:0000000000401539\n.text:000000000040153a\n.text:0000000000401541\n.text:0000000000401544\n.text:0000000000401546\n.text:0000000000401549\n.text:0000000000401550\n.text:0000000000401553\n.text:0000000000401557\n.text:000000000040155c\n.text:0000000000401561\n.text:0000000000401566\n.text:0000000000401569\n.text:000000000040156c\n.text:0000000000401572\n.text:0000000000401577\n.text:0000000000401579\n.text:000000000040157c\n.text:0000000000401581\n.text:0000000000401584\n.text:0000000000401588\n.text:000000000040158a\n.text:000000000040158f\n.text:0000000000401591\n.text:0000000000401593\n.text:0000000000401598\n.text:000000000040159a\n.text:000000000040159f\n.text:00000000004015a1\n.text:00000000004015a6\n.text:00000000004015ab\n.text:00000000004015b0\n.text:00000000004015b2\n.text:00000000004015b4\n.text:00000000004015b7\n.text:00000000004015bc\n.text:00000000004015c0\n.text:00000000004015c5\n.text:00000000004015ca\n.text:00000000004015d0\n.text:00000000004015d6\n.text:00000000004015d9\n.text:00000000004015dc\n.text:00000000004015de\n.text:00000000004015e3\n.text:00000000004015e5\n.text:00000000004015e7\n.text:00000000004015ec\n.text:00000000004015f0\n.text:00000000004015f2\n.text:00000000004015f8\n.text:0000000000401600\n.text:0000000000401603\n.text:0000000000401608\n.text:000000000040160b\n.text:0000000000401610\n.text:0000000000401615\n.text:0000000000401617\n.text:000000000040161a\n.text:000000000040161f\n.text:0000000000401624\n.text:0000000000401627\n.text:000000000040162a\n.text:000000000040162d\n.text:0000000000401632\n.text:0000000000401636\n.text:0000000000401639\n.text:000000000040163b\n.text:000000000040163e\n.text:0000000000401640\n.text:0000000000401644\n.text:0000000000401646\n.text:000000000040164a\n.text:000000000040164e\n.text:0000000000401653\n.text:0000000000401656\n.text:000000000040165a\n.text:000000000040165c\n.text:0000000000401660\n.text:0000000000401662\n.text:0000000000401664\n.text:0000000000401667\n.text:0000000000401669\n.text:000000000040166c\n.text:0000000000401670\n.text:0000000000401672\n.text:0000000000401674\n.text:0000000000401676\n.text:0000000000401678\n.text:000000000040167a\n.text:000000000040167d\n.text:0000000000401682\n.text:0000000000401685\n.text:000000000040168a\n.text:000000000040168f\n.text:0000000000401691\n.text:0000000000401694\n.text:0000000000401699\n.text:000000000040169d\n.text:00000000004016a1\n.text:00000000004016a5\n.text:00000000004016a8\n.text:00000000004016ac\n.text:00000000004016af\n.text:00000000004016b6\n.text:00000000004016b7\n.text:00000000004016b9\n.text:00000000004016bb\n.text:00000000004016bd\n.text:00000000004016bf\n.text:00000000004016c0\n.text:00000000004016c1\n.text:00000000004016c8\n.text:00000000004016cf\n.text:00000000004016d4\n.text:00000000004016d6\n.text:00000000004016dd\n.text:00000000004016e4\n.text:00000000004016e9\n.text:00000000004016eb\n.text:00000000004016f0\n.text:00000000004016f5\n.text:00000000004016f8\n.text:00000000004016fd\n'
p244
tp245
sS'XGetPointerMapping'
p246
(S'\n__stdcall XGetPointerMapping()\n'
p247
V\u000avoid XGetPointerMapping(void)\u000a\u000a{\u000a  (*(code *)PTR_XGetPointerMapping_00603088)();\u000a  return;\u000a}\u000a\u000a
p248
S'JMP qword ptr [0x00603088]\n'
p249
S'ff 25 02 24 20 00\n'
p250
S'.plt:0000000000400c80\n'
p251
tp252
sS'XUngrabPointer'
p253
(S'\n__stdcall XUngrabPointer()\n'
p254
V\u000avoid XUngrabPointer(void)\u000a\u000a{\u000a  (*(code *)PTR_XUngrabPointer_00603078)();\u000a  return;\u000a}\u000a\u000a
p255
S'JMP qword ptr [0x00603078]\n'
p256
S'ff 25 12 24 20 00\n'
p257
S'.plt:0000000000400c60\n'
p258
tp259
sS'XSync'
p260
(S'\n__stdcall XSync()\n'
p261
V\u000avoid XSync(void)\u000a\u000a{\u000a  (*(code *)PTR_XSync_006030a0)();\u000a  return;\u000a}\u000a\u000a
p262
S'JMP qword ptr [0x006030a0]\n'
p263
S'ff 25 ea 23 20 00\n'
p264
S'.plt:0000000000400cb0\n'
p265
tp266
sS'XCloseDisplay'
p267
(S'\n__stdcall XCloseDisplay()\n'
p268
V\u000avoid XCloseDisplay(void)\u000a\u000a{\u000a  (*(code *)PTR_XCloseDisplay_006030e0)();\u000a  return;\u000a}\u000a\u000a
p269
S'JMP qword ptr [0x006030e0]\n'
p270
S'ff 25 aa 23 20 00\n'
p271
S'.plt:0000000000400d30\n'
p272
tp273
sS'fprintf'
p274
(S'\n__stdcall fprintf(FILE * __stream, char * __format)\n'
p275
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint fprintf(FILE *__stream,char *__format,...)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_fprintf_00603070)();\u000a  return iVar1;\u000a}\u000a\u000a
p276
S'JMP qword ptr [0x00603070]\n'
p277
S'ff 25 1a 24 20 00\n'
p278
S'.plt:0000000000400c50\n'
p279
tp280
sS'wm_state_set'
p281
(S'\n__stdcall wm_state_set(Display * dpy, Window win)\n'
p282
V\u000aint wm_state_set(Display *dpy,Window win)\u000a\u000a{\u000a  int iVar1;\u000a  uint uVar2;\u000a  long lVar3;\u000a  bool bVar4;\u000a  int actual_format;\u000a  ulong remaining;\u000a  ulong nitems;\u000a  int local_4c;\u000a  long local_48;\u000a  long local_40;\u000a  undefined local_38 [8];\u000a  undefined local_30 [8];\u000a  \u000a  local_48 = 0;\u000a  lVar3 = XInternAtom(dpy,"WM_STATE",1);\u000a  if (lVar3 == 0) {\u000a    uVar2 = 0;\u000a  }\u000a  else {\u000a    iVar1 = XGetWindowProperty(dpy,win,lVar3,0,0,0,0,&local_40,&local_4c,local_30,local_38,&local_48\u000a                              );\u000a    if (local_48 != 0) {\u000a      XFree();\u000a    }\u000a    bVar4 = false;\u000a    if ((iVar1 == 0) && (bVar4 = false, local_40 != 0)) {\u000a      bVar4 = local_4c != 0;\u000a    }\u000a    uVar2 = (uint)bVar4;\u000a  }\u000a  return (int)uVar2;\u000a}\u000a\u000a
p283
S'PUSH R15\nPUSH R14\nPUSH R13\nPUSH R12\nPUSH RBX\nSUB RSP,0x30\nMOV R14,RSI\nMOV RBX,RDI\nMOV qword ptr [RSP + 0x10],0x0\nMOV ESI,0x401cbe\nMOV EDX,0x1\nCALL 0x00400c90\nTEST RAX,RAX\nJZ 0x004017a6\nLEA R10,[RSP + 0x10]\nLEA R11,[RSP + 0x20]\nLEA R15,[RSP + 0x28]\nLEA R12,[RSP + 0xc]\nLEA R13,[RSP + 0x18]\nMOV ECX,0x0\nMOV R8D,0x0\nMOV R9D,0x0\nMOV RDI,RBX\nMOV RSI,R14\nMOV RDX,RAX\nPUSH R10\nPUSH R11\nPUSH R15\nPUSH R12\nPUSH R13\nPUSH 0x0\nCALL 0x00400d20\nADD RSP,0x30\nMOV EBX,EAX\nMOV RDI,qword ptr [RSP + 0x10]\nTEST RDI,RDI\nJZ 0x00401789\nCALL 0x00400c20\nXOR EAX,EAX\nTEST EBX,EBX\nJNZ 0x004017a1\nMOV RCX,qword ptr [RSP + 0x18]\nTEST RCX,RCX\nJZ 0x004017a1\nCMP dword ptr [RSP + 0xc],0x0\nSETNZ AL\nMOVZX EAX,AL\nJMP 0x004017a8\nXOR EAX,EAX\nADD RSP,0x30\nPOP RBX\nPOP R12\nPOP R13\nPOP R14\nPOP R15\nRET\n'
p284
S'41 57\n41 56\n41 55\n41 54\n53\n48 83 ec 30\n49 89 f6\n48 89 fb\n48 c7 44 24 10 00 00 00 00\nbe be 1c 40 00\nba 01 00 00 00\ne8 65 f5 ff ff\n48 85 c0\n74 76\n4c 8d 54 24 10\n4c 8d 5c 24 20\n4c 8d 7c 24 28\n4c 8d 64 24 0c\n4c 8d 6c 24 18\nb9 00 00 00 00\n41 b8 00 00 00 00\n41 b9 00 00 00 00\n48 89 df\n4c 89 f6\n48 89 c2\n41 52\n41 53\n41 57\n41 54\n41 55\n6a 00\ne8 ac f5 ff ff\n48 83 c4 30\n89 c3\n48 8b 7c 24 10\n48 85 ff\n74 05\ne8 97 f4 ff ff\n31 c0\n85 db\n75 12\n48 8b 4c 24 18\n48 85 c9\n74 08\n83 7c 24 0c 00\n0f 95 c0\n0f b6 c0\neb 02\n31 c0\n48 83 c4 30\n5b\n41 5c\n41 5d\n41 5e\n41 5f\nc3\n'
p285
S'.text:0000000000401700\n.text:0000000000401702\n.text:0000000000401704\n.text:0000000000401706\n.text:0000000000401708\n.text:0000000000401709\n.text:000000000040170d\n.text:0000000000401710\n.text:0000000000401713\n.text:000000000040171c\n.text:0000000000401721\n.text:0000000000401726\n.text:000000000040172b\n.text:000000000040172e\n.text:0000000000401730\n.text:0000000000401735\n.text:000000000040173a\n.text:000000000040173f\n.text:0000000000401744\n.text:0000000000401749\n.text:000000000040174e\n.text:0000000000401754\n.text:000000000040175a\n.text:000000000040175d\n.text:0000000000401760\n.text:0000000000401763\n.text:0000000000401765\n.text:0000000000401767\n.text:0000000000401769\n.text:000000000040176b\n.text:000000000040176d\n.text:000000000040176f\n.text:0000000000401774\n.text:0000000000401778\n.text:000000000040177a\n.text:000000000040177f\n.text:0000000000401782\n.text:0000000000401784\n.text:0000000000401789\n.text:000000000040178b\n.text:000000000040178d\n.text:000000000040178f\n.text:0000000000401794\n.text:0000000000401797\n.text:0000000000401799\n.text:000000000040179e\n.text:00000000004017a1\n.text:00000000004017a4\n.text:00000000004017a6\n.text:00000000004017a8\n.text:00000000004017ac\n.text:00000000004017ad\n.text:00000000004017af\n.text:00000000004017b1\n.text:00000000004017b3\n.text:00000000004017b5\n'
p286
tp287
sS'XCreateFontCursor'
p288
(S'\n__stdcall XCreateFontCursor()\n'
p289
V\u000avoid XCreateFontCursor(void)\u000a\u000a{\u000a  (*(code *)PTR_XCreateFontCursor_00603038)();\u000a  return;\u000a}\u000a\u000a
p290
S'JMP qword ptr [0x00603038]\n'
p291
S'ff 25 52 24 20 00\n'
p292
S'.plt:0000000000400be0\n'
p293
tp294
sS'puts'
p295
(S'\n__stdcall puts(char * __s)\n'
p296
V\u000a/* WARNING: Unknown calling convention yet parameter storage is locked */\u000a\u000aint puts(char *__s)\u000a\u000a{\u000a  int iVar1;\u000a  \u000a  iVar1 = (*(code *)PTR_puts_00603030)();\u000a  return iVar1;\u000a}\u000a\u000a
p297
S'JMP qword ptr [0x00603030]\n'
p298
S'ff 25 5a 24 20 00\n'
p299
S'.plt:0000000000400bd0\n'
p300
tp301
sS'XQueryTree'
p302
(S'\n__stdcall XQueryTree()\n'
p303
V\u000avoid XQueryTree(void)\u000a\u000a{\u000a  (*(code *)PTR_XQueryTree_00603048)();\u000a  return;\u000a}\u000a\u000a
p304
S'JMP qword ptr [0x00603048]\n'
p305
S'ff 25 42 24 20 00\n'
p306
S'.plt:0000000000400c00\n'
p307
tp308
sS'XGrabPointer'
p309
(S'\n__stdcall XGrabPointer()\n'
p310
V\u000avoid XGrabPointer(void)\u000a\u000a{\u000a  (*(code *)PTR_XGrabPointer_00603060)();\u000a  return;\u000a}\u000a\u000a
p311
S'JMP qword ptr [0x00603060]\n'
p312
S'ff 25 2a 24 20 00\n'
p313
S'.plt:0000000000400c30\n'
p314
tp315
sS'XInternAtom'
p316
(S'\n__stdcall XInternAtom()\n'
p317
V\u000avoid XInternAtom(void)\u000a\u000a{\u000a  (*(code *)PTR_XInternAtom_00603090)();\u000a  return;\u000a}\u000a\u000a
p318
S'JMP qword ptr [0x00603090]\n'
p319
S'ff 25 fa 23 20 00\n'
p320
S'.plt:0000000000400c90\n'
p321
tp322
sS'__do_global_dtors_aux'
p323
(S'\n__stdcall __do_global_dtors_aux()\n'
p324
V\u000avoid __do_global_dtors_aux(void)\u000a\u000a{\u000a  if (completed_7561 == 0) {\u000a    deregister_tm_clones();\u000a    completed_7561 = 1;\u000a  }\u000a  return;\u000a}\u000a\u000a
p325
S'CMP byte ptr [0x00603128],0x0\nJNZ 0x00400e2a\nPUSH RBP\nMOV RBP,RSP\nCALL 0x00400d90\nPOP RBP\nMOV byte ptr [0x00603128],0x1\nRET\n'
p326
S'80 3d 11 23 20 00 00\n75 11\n55\n48 89 e5\ne8 6e ff ff ff\n5d\nc6 05 fe 22 20 00 01\nf3 c3\n'
p327
S'.text:0000000000400e10\n.text:0000000000400e17\n.text:0000000000400e19\n.text:0000000000400e1a\n.text:0000000000400e1d\n.text:0000000000400e22\n.text:0000000000400e23\n.text:0000000000400e2a\n'
p328
tp329
sS'_fini'
p330
(S'\n__stdcall _fini()\n'
p331
V\u000avoid _fini(void)\u000a\u000a{\u000a  return;\u000a}\u000a\u000a
p332
S'SUB RSP,0x8\nADD RSP,0x8\nRET\n'
p333
S'48 83 ec 08\n48 83 c4 08\nc3\n'
p334
S'.fini:0000000000401894\n.fini:0000000000401898\n.fini:000000000040189c\n'
p335
tp336
s.